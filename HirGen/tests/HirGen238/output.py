import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_266 = relay.var("var_266", dtype = "int8", shape = ())#candidate|266|()|var|int8
var_267 = relay.var("var_267", dtype = "int8", shape = (8, 3, 7))#candidate|267|(8, 3, 7)|var|int8
bop_268 = relay.bitwise_and(var_266.astype('int8'), var_267.astype('int8')) # shape=(8, 3, 7)
output = relay.Tuple([bop_268,])
output2 = relay.Tuple([bop_268,])
func_290 = relay.Function([var_266,var_267,], output)
mod['func_290'] = func_290
mod = relay.transform.InferType()(mod)
mutated_mod['func_290'] = func_290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_290_call = mutated_mod.get_global_var('func_290')
var_292 = relay.var("var_292", dtype = "int8", shape = ())#candidate|292|()|var|int8
var_293 = relay.var("var_293", dtype = "int8", shape = (8, 3, 7))#candidate|293|(8, 3, 7)|var|int8
call_291 = func_290_call(var_292,var_293,)
output = call_291
func_294 = relay.Function([var_292,var_293,], output)
mutated_mod['func_294'] = func_294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_379 = relay.var("var_379", dtype = "float64", shape = (16, 1, 6))#candidate|379|(16, 1, 6)|var|float64
uop_380 = relay.erf(var_379.astype('float64')) # shape=(16, 1, 6)
bop_389 = relay.power(uop_380.astype('float32'), relay.reshape(var_379.astype('float32'), relay.shape_of(uop_380))) # shape=(16, 1, 6)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
var_408 = relay.var("var_408", dtype = "int8", shape = ())#candidate|408|()|var|int8
const_409 = relay.const([8,-5,-4,-8,5,-8,-2,8,4,-8,-9,6,6,-4,9,-8,-5,-7,-5,9,-4,7,-9,-6,1,1,-2,10,3,10,7,2,-4,-10,-3,-9,5,3,-2,-6,-2,3,-6,-3,8,2,3,9,10,-4,-8,1,10,-7,4,5,2,1,-2,-4,8,-8,-9,-6,-6,-3,-5,8,-2,-6,-8,-2,1,-8,-10,7,-10,8,-2,8,7,2,10,5,-5,-8,-6,-5,6,1,-6,3,-3,-5,5,3,-7,-2,-5,8,-2,6,9,-2,-5,-10,-3,-6,3,-9,5,8,7,10,1,-3,-4,-8,10,-7,-4,5,1,-2,-3,1,-5,9,-3,5,6,-4,8,-5,-1,-3,-1,-4,10,-7,9,8,-8,-7,7,-4,1,-5,-9,5,-3,9,-9,-8,-9,1,-4,-5,7,5,3,6,7,-10,10,-10,-8,-10], dtype = "int8")#candidate|409|(168,)|const|int8
call_407 = relay.TupleGetItem(func_290_call(relay.reshape(var_408.astype('int8'), []), relay.reshape(const_409.astype('int8'), [8, 3, 7]), ), 0)
call_410 = relay.TupleGetItem(func_294_call(relay.reshape(var_408.astype('int8'), []), relay.reshape(const_409.astype('int8'), [8, 3, 7]), ), 0)
output = relay.Tuple([bop_389,call_407,var_408,const_409,])
output2 = relay.Tuple([bop_389,call_410,var_408,const_409,])
func_425 = relay.Function([var_379,var_408,], output)
mod['func_425'] = func_425
mod = relay.transform.InferType()(mod)
var_426 = relay.var("var_426", dtype = "float64", shape = (16, 1, 6))#candidate|426|(16, 1, 6)|var|float64
var_427 = relay.var("var_427", dtype = "int8", shape = ())#candidate|427|()|var|int8
output = func_425(var_426,var_427,)
func_428 = relay.Function([var_426,var_427,], output)
mutated_mod['func_428'] = func_428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_475 = relay.var("var_475", dtype = "float32", shape = (1, 13, 5))#candidate|475|(1, 13, 5)|var|float32
uop_476 = relay.erf(var_475.astype('float32')) # shape=(1, 13, 5)
output = relay.Tuple([uop_476,])
output2 = relay.Tuple([uop_476,])
func_480 = relay.Function([var_475,], output)
mod['func_480'] = func_480
mod = relay.transform.InferType()(mod)
var_481 = relay.var("var_481", dtype = "float32", shape = (1, 13, 5))#candidate|481|(1, 13, 5)|var|float32
output = func_480(var_481)
func_482 = relay.Function([var_481], output)
mutated_mod['func_482'] = func_482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_498 = relay.var("var_498", dtype = "float64", shape = (6, 16, 2))#candidate|498|(6, 16, 2)|var|float64
var_499 = relay.var("var_499", dtype = "float64", shape = (6, 16, 2))#candidate|499|(6, 16, 2)|var|float64
bop_500 = relay.floor_divide(var_498.astype('float64'), relay.reshape(var_499.astype('float64'), relay.shape_of(var_498))) # shape=(6, 16, 2)
var_503 = relay.var("var_503", dtype = "float64", shape = (6, 16, 2))#candidate|503|(6, 16, 2)|var|float64
bop_504 = relay.divide(var_499.astype('float64'), relay.reshape(var_503.astype('float64'), relay.shape_of(var_499))) # shape=(6, 16, 2)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
var_521 = relay.var("var_521", dtype = "int8", shape = ())#candidate|521|()|var|int8
const_522 = relay.const([10,-9,-7,4,-1,-7,-2,1,10,7,6,7,1,1,-4,9,-6,-4,9,-8,3,-9,-8,-2,-6,-6,-6,4,-2,9,-1,-7,7,9,3,6,5,-4,8,1,-5,-6,1,-10,5,6,8,-3,9,10,-1,10,6,9,10,-5,9,7,3,1,-7,-6,-4,-9,-10,7,-9,-9,10,6,8,-4,7,4,-9,10,4,10,-4,3,1,-7,-6,5,4,4,7,8,-9,3,-1,-3,-6,5,5,-4,-7,-5,7,8,3,3,2,-3,-6,-1,7,4,-9,5,-8,-10,-10,-9,-7,8,1,-10,-3,-5,9,-7,-2,-4,-1,-6,-6,5,1,4,-3,10,2,-8,-4,5,3,-4,5,7,-4,5,9,-7,6,-10,2,2,9,10,-4,-9,-6,-1,10,9,3,6,-5,-4,-6,9,-6,3,-10,-1,7,3], dtype = "int8")#candidate|522|(168,)|const|int8
call_520 = relay.TupleGetItem(func_290_call(relay.reshape(var_521.astype('int8'), []), relay.reshape(const_522.astype('int8'), [8, 3, 7]), ), 0)
call_523 = relay.TupleGetItem(func_294_call(relay.reshape(var_521.astype('int8'), []), relay.reshape(const_522.astype('int8'), [8, 3, 7]), ), 0)
output = relay.Tuple([bop_500,bop_504,call_520,var_521,const_522,])
output2 = relay.Tuple([bop_500,bop_504,call_523,var_521,const_522,])
func_534 = relay.Function([var_498,var_499,var_503,var_521,], output)
mod['func_534'] = func_534
mod = relay.transform.InferType()(mod)
mutated_mod['func_534'] = func_534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mutated_mod.get_global_var('func_534')
var_536 = relay.var("var_536", dtype = "float64", shape = (6, 16, 2))#candidate|536|(6, 16, 2)|var|float64
var_537 = relay.var("var_537", dtype = "float64", shape = (6, 16, 2))#candidate|537|(6, 16, 2)|var|float64
var_538 = relay.var("var_538", dtype = "float64", shape = (6, 16, 2))#candidate|538|(6, 16, 2)|var|float64
var_539 = relay.var("var_539", dtype = "int8", shape = ())#candidate|539|()|var|int8
call_535 = func_534_call(var_536,var_537,var_538,var_539,)
output = call_535
func_540 = relay.Function([var_536,var_537,var_538,var_539,], output)
mutated_mod['func_540'] = func_540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_882 = relay.var("var_882", dtype = "uint64", shape = (9, 12, 7))#candidate|882|(9, 12, 7)|var|uint64
var_883 = relay.var("var_883", dtype = "uint64", shape = (9, 12, 7))#candidate|883|(9, 12, 7)|var|uint64
bop_884 = relay.logical_xor(var_882.astype('uint64'), relay.reshape(var_883.astype('uint64'), relay.shape_of(var_882))) # shape=(9, 12, 7)
uop_891 = relay.sigmoid(bop_884.astype('float64')) # shape=(9, 12, 7)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
var_895 = relay.var("var_895", dtype = "int8", shape = ())#candidate|895|()|var|int8
var_896 = relay.var("var_896", dtype = "int8", shape = (168,))#candidate|896|(168,)|var|int8
call_894 = relay.TupleGetItem(func_290_call(relay.reshape(var_895.astype('int8'), []), relay.reshape(var_896.astype('int8'), [8, 3, 7]), ), 0)
call_897 = relay.TupleGetItem(func_294_call(relay.reshape(var_895.astype('int8'), []), relay.reshape(var_896.astype('int8'), [8, 3, 7]), ), 0)
func_480_call = mod.get_global_var('func_480')
func_482_call = mutated_mod.get_global_var('func_482')
const_908 = relay.const([-3.157136,6.834190,5.030058,2.189081,-6.617916,-8.560894,7.514597,-9.581302,9.647661,-4.915539,1.604279,7.871881,0.122779,-7.748970,7.787102,1.370454,1.286363,-2.294204,3.490957,5.193973,-2.592310,-9.051986,-4.299365,-5.260544,-3.454845,2.629296,0.585494,5.813679,0.920202,-0.196690,5.290136,-9.655552,-6.964642,8.372224,4.135603,9.875908,2.510703,8.113791,-0.918971,1.942861,-8.960814,1.721985,-7.634757,-4.008763,-4.698372,-1.379881,3.785586,-6.123116,6.715104,1.090037,-4.645084,-8.305074,-2.088447,4.295751,4.710596,-3.164041,2.406015,-5.559553,-6.119915,9.341078,3.453725,-4.478565,5.128770,-6.560192,-6.012123], dtype = "float32")#candidate|908|(65,)|const|float32
call_907 = relay.TupleGetItem(func_480_call(relay.reshape(const_908.astype('float32'), [1, 13, 5])), 0)
call_909 = relay.TupleGetItem(func_482_call(relay.reshape(const_908.astype('float32'), [1, 13, 5])), 0)
func_425_call = mod.get_global_var('func_425')
func_428_call = mutated_mod.get_global_var('func_428')
const_914 = relay.const([[1.242009,-1.796802,-8.323640,0.290179,3.158596,-1.424881,3.174446,6.022114,5.110729,-2.688847,2.451069,-7.687870,-1.107841,6.881508,5.084714,3.114116,-1.943669,7.297115,0.286052,-5.605889,6.131396,5.522640,1.720520,-4.962178],[-8.036517,-9.935739,9.763456,8.644361,-0.523048,0.440187,-1.316627,-2.929489,-0.100567,4.797847,-4.365497,-9.293582,1.958193,-0.337172,-1.874424,1.425839,-4.572609,-4.426710,-6.421968,7.142802,3.806767,-3.588877,-0.171869,-7.437068],[-2.886540,-6.355924,1.868861,0.115872,-9.206111,5.098335,-0.244469,-4.039836,-5.114525,8.480096,-9.726767,3.253835,2.720543,-2.188817,8.914722,-8.372755,-9.964208,-6.820633,-3.369718,-8.441164,-2.282158,1.193325,-4.012016,7.487202],[0.758147,5.567918,3.865749,0.249059,-6.219354,-4.084980,-2.234269,-0.538767,-4.854884,-2.519934,-4.083952,5.477323,-5.946034,1.893686,-3.501450,-2.617919,2.651796,-9.870207,-7.539052,6.865881,0.421746,-6.356409,2.677010,-5.549588]], dtype = "float64")#candidate|914|(4, 24)|const|float64
call_913 = relay.TupleGetItem(func_425_call(relay.reshape(const_914.astype('float64'), [16, 1, 6]), relay.reshape(var_895.astype('int8'), []), ), 1)
call_915 = relay.TupleGetItem(func_428_call(relay.reshape(const_914.astype('float64'), [16, 1, 6]), relay.reshape(var_895.astype('int8'), []), ), 1)
output = relay.Tuple([uop_891,call_894,var_895,var_896,call_907,const_908,call_913,const_914,])
output2 = relay.Tuple([uop_891,call_897,var_895,var_896,call_909,const_908,call_915,const_914,])
func_925 = relay.Function([var_882,var_883,var_895,var_896,], output)
mod['func_925'] = func_925
mod = relay.transform.InferType()(mod)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mutated_mod.get_global_var('func_925')
var_927 = relay.var("var_927", dtype = "uint64", shape = (9, 12, 7))#candidate|927|(9, 12, 7)|var|uint64
var_928 = relay.var("var_928", dtype = "uint64", shape = (9, 12, 7))#candidate|928|(9, 12, 7)|var|uint64
var_929 = relay.var("var_929", dtype = "int8", shape = ())#candidate|929|()|var|int8
var_930 = relay.var("var_930", dtype = "int8", shape = (168,))#candidate|930|(168,)|var|int8
call_926 = func_925_call(var_927,var_928,var_929,var_930,)
output = call_926
func_931 = relay.Function([var_927,var_928,var_929,var_930,], output)
mutated_mod['func_931'] = func_931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_933 = relay.var("var_933", dtype = "int16", shape = (1, 9, 5))#candidate|933|(1, 9, 5)|var|int16
var_934 = relay.var("var_934", dtype = "int16", shape = (12, 9, 5))#candidate|934|(12, 9, 5)|var|int16
bop_935 = relay.less(var_933.astype('bool'), var_934.astype('bool')) # shape=(12, 9, 5)
output = bop_935
output2 = bop_935
func_938 = relay.Function([var_933,var_934,], output)
mod['func_938'] = func_938
mod = relay.transform.InferType()(mod)
var_939 = relay.var("var_939", dtype = "int16", shape = (1, 9, 5))#candidate|939|(1, 9, 5)|var|int16
var_940 = relay.var("var_940", dtype = "int16", shape = (12, 9, 5))#candidate|940|(12, 9, 5)|var|int16
output = func_938(var_939,var_940,)
func_941 = relay.Function([var_939,var_940,], output)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1145 = relay.const([[[8.523320,-4.342895,5.530176,-0.700580,1.068498],[8.292173,-2.964275,-0.212051,-2.438381,-6.653072],[-4.332833,6.440763,-9.434514,8.698595,-2.250174],[-0.404471,-3.592139,4.705676,-8.242508,-7.560470],[8.503720,4.701776,7.355291,-8.392324,-7.762329],[-9.883114,6.636968,8.947275,1.388422,9.251343],[6.100181,2.749172,-2.712307,2.016381,-2.440305],[-6.929488,4.837839,-9.267809,4.731920,-9.918212],[4.244907,4.094151,-7.811071,-5.701077,8.998248],[5.855463,8.321686,-6.378389,6.884124,-8.429344],[-7.922778,-8.281416,5.453393,-4.897968,7.395789]],[[-6.039181,8.285394,-0.001065,-1.746218,0.836346],[-2.552892,-2.976931,-6.498218,-6.401594,-9.237628],[2.411470,2.879044,0.617970,-1.403146,-6.631110],[-9.440823,-1.865711,-3.515240,-0.391973,-7.719602],[-1.000838,-7.389665,-4.947008,-5.016258,2.847691],[-3.294740,2.626490,-8.990542,-8.432504,-9.074305],[-7.214191,7.637411,-2.511839,3.899784,4.245042],[8.902370,7.028887,-8.869619,-7.534884,-7.346952],[-4.367465,-2.184356,-9.849471,-5.350243,-4.563604],[0.176742,9.789557,6.015241,-1.678402,-2.617731],[-2.679842,-1.423126,-3.291154,-5.069750,3.752068]],[[-8.445528,5.309910,6.633694,9.502498,-4.314662],[-9.844601,-1.201156,-3.200695,0.157693,0.997506],[-1.810717,1.188369,9.707113,-7.867138,-4.048126],[-7.795441,3.072038,-3.675166,1.791147,-9.138946],[7.757289,-1.918987,-6.118609,8.164707,0.881772],[-2.726724,7.078303,-2.130121,8.918752,-4.734114],[-8.205486,-3.885300,-3.297060,-6.277350,-6.084675],[0.699437,0.760149,5.558405,-1.976868,-6.045729],[4.970638,-0.196455,-3.852858,1.126938,9.687059],[-0.753646,-0.671253,0.847544,6.702748,6.682174],[-7.688976,2.831537,-7.406480,3.396564,2.751413]],[[-9.318733,-3.739987,3.344921,-9.128428,-2.364196],[-2.002299,0.768100,4.479371,6.269143,2.637451],[-5.280333,0.883730,7.682724,4.615367,4.770766],[-2.880539,1.795879,-3.479910,-9.456911,-9.181858],[-9.701731,7.597712,6.646455,-8.992603,0.434790],[9.101796,4.277517,9.058443,-2.942274,4.824972],[3.546882,-6.727951,1.198358,-7.719883,7.451404],[-7.447565,8.661240,7.651491,7.561224,-7.910056],[2.793974,-5.510502,-0.438087,-5.960452,-7.771660],[-3.561453,8.550447,0.255689,0.806392,-3.876056],[-6.660758,-6.019701,-6.587472,-6.698306,6.720048]],[[-0.360658,6.986124,3.035173,-1.623110,-5.932510],[-6.111578,8.943160,2.543150,-5.570443,-3.246763],[6.000728,5.644583,-2.654371,-0.497274,1.437493],[5.800657,-7.118013,7.404949,5.472999,2.055784],[-2.949100,-0.352599,-2.237120,-2.587876,9.149449],[0.378163,8.223769,-0.304378,4.268945,2.136518],[3.516636,-9.340999,8.467002,6.182825,-7.629457],[-6.882953,-5.107656,-1.991489,7.302589,9.964300],[1.566534,1.753784,-4.243506,-5.522463,-9.290401],[-2.278294,3.401353,-8.635956,-2.107267,5.275752],[-5.729703,-2.316187,-6.412235,5.651827,0.712854]],[[-8.641063,-0.528097,-7.044411,-1.659967,-2.259427],[-7.139864,-8.565485,8.343484,-4.972298,-4.465748],[-2.618906,9.101815,-4.443336,2.913996,6.615590],[-8.971212,8.202676,-9.697904,5.348835,4.935277],[6.061146,1.296004,6.896118,-6.407294,-8.310642],[2.255228,-7.878919,4.834354,-5.405008,-1.202173],[-2.384910,-5.057546,4.096752,2.331351,0.914489],[-3.167252,-6.390851,-8.973934,5.127048,6.904109],[5.273697,-0.094068,9.374061,-0.195000,9.634549],[-0.105425,-3.311104,4.546315,2.772040,-0.221853],[1.841586,1.630841,-7.748093,0.938619,2.684183]],[[-9.455441,7.908064,-6.913305,-2.368924,3.858869],[6.138117,9.229718,-9.717967,-9.772896,8.621309],[-7.449141,1.774912,-7.653026,5.558367,5.856720],[-1.475212,1.087763,7.148269,3.870019,0.439703],[8.168474,-1.116916,-1.575262,3.276072,-3.607105],[4.566164,-4.065836,-1.124804,2.036199,-5.678057],[-7.703187,-1.486664,0.529873,0.364281,1.725433],[9.477257,-9.797748,-6.051357,-0.602091,2.690119],[-9.363557,5.154664,5.465365,-2.223036,8.540695],[-6.097725,3.698135,5.866885,-8.382018,0.334415],[9.400966,-9.018388,-8.557416,-6.877534,-9.638287]],[[9.977820,1.809975,4.473875,9.686840,9.422733],[2.212255,-9.407483,-0.958010,8.707616,5.776251],[-7.224770,2.485952,-8.538818,8.387570,-1.424250],[-4.458663,5.931474,-5.573393,-7.874319,-3.514981],[-4.434628,7.995630,-4.215942,-8.134438,-6.334408],[7.210385,8.521331,8.712937,-6.883166,-2.660273],[2.970545,1.320703,-4.560323,2.415565,8.597040],[-4.077752,3.708792,-5.823969,4.225092,2.285705],[-9.037376,3.778238,0.216954,3.149433,3.940298],[-7.689050,-6.839303,9.384954,8.673324,-9.800283],[-5.537956,-3.493038,-6.474973,-7.061688,-1.500456]],[[-2.134587,-5.415699,-8.553501,-0.667564,4.616183],[2.306693,-2.904373,8.485018,0.305444,4.207470],[1.975599,-3.951716,8.644026,1.544241,7.334848],[-5.880213,-4.656211,6.663382,-4.885594,9.350849],[3.793365,-8.777389,-7.664809,-7.743568,-7.386194],[8.845962,4.024153,-4.978778,7.347958,-8.876135],[2.801793,-7.557749,3.922437,-6.192825,4.878799],[-8.351412,-5.755533,7.933982,-2.813919,-9.993631],[7.350825,4.885423,-0.703496,6.264719,0.448637],[-3.400213,-4.923621,-8.468940,-2.738677,-4.816447],[-4.755789,-4.976191,8.228138,-7.517257,2.448905]],[[-0.067863,-3.676056,-5.324363,3.653082,-8.109910],[9.130002,8.968107,3.313982,-7.218587,-8.692359],[-1.601761,9.035131,-4.797094,-9.523322,-9.121359],[2.962196,-2.967847,-7.711595,-2.493883,-3.512932],[-8.765096,4.964356,-6.372215,-1.237351,-3.426609],[1.244306,4.153574,-2.946974,8.413520,-6.934144],[-2.364810,-4.224239,-3.608910,7.820830,6.873851],[6.026037,-0.885354,3.434214,-2.111932,9.178124],[2.336138,6.917374,8.511619,-0.877949,-3.301002],[-1.340486,-6.615578,8.581035,-6.144764,-4.654227],[-8.898060,1.565020,-8.409483,1.133224,-9.611717]],[[-9.619152,0.081682,2.377915,6.115575,7.498870],[-8.462372,-5.080947,8.977669,4.900763,3.987855],[9.368643,-1.397517,-7.422023,6.177220,5.434110],[-4.795810,7.413181,3.645367,-2.101369,-8.184698],[-9.477733,8.819699,-1.793026,-2.085592,-1.830191],[4.602155,1.895065,9.471322,-1.184827,-2.204742],[-7.207241,4.491664,-9.110215,-9.687318,0.197355],[6.053161,-6.011351,6.917877,0.337726,-7.408034],[6.587758,5.539697,4.131241,-3.522464,1.127618],[2.492439,2.359432,-2.334745,1.669769,-2.508637],[4.218260,-3.267281,-8.905255,-5.688389,0.538962]]], dtype = "float32")#candidate|1145|(11, 11, 5)|const|float32
uop_1146 = relay.tan(const_1145.astype('float32')) # shape=(11, 11, 5)
func_480_call = mod.get_global_var('func_480')
func_482_call = mutated_mod.get_global_var('func_482')
var_1152 = relay.var("var_1152", dtype = "float32", shape = (65,))#candidate|1152|(65,)|var|float32
call_1151 = relay.TupleGetItem(func_480_call(relay.reshape(var_1152.astype('float32'), [1, 13, 5])), 0)
call_1153 = relay.TupleGetItem(func_482_call(relay.reshape(var_1152.astype('float32'), [1, 13, 5])), 0)
func_925_call = mod.get_global_var('func_925')
func_931_call = mutated_mod.get_global_var('func_931')
var_1155 = relay.var("var_1155", dtype = "uint64", shape = (756,))#candidate|1155|(756,)|var|uint64
const_1156 = relay.const(-6, dtype = "int8")#candidate|1156|()|const|int8
var_1157 = relay.var("var_1157", dtype = "int8", shape = (84, 2))#candidate|1157|(84, 2)|var|int8
call_1154 = relay.TupleGetItem(func_925_call(relay.reshape(var_1155.astype('uint64'), [9, 12, 7]), relay.reshape(var_1155.astype('uint64'), [9, 12, 7]), relay.reshape(const_1156.astype('int8'), []), relay.reshape(var_1157.astype('int8'), [168,]), ), 3)
call_1158 = relay.TupleGetItem(func_931_call(relay.reshape(var_1155.astype('uint64'), [9, 12, 7]), relay.reshape(var_1155.astype('uint64'), [9, 12, 7]), relay.reshape(const_1156.astype('int8'), []), relay.reshape(var_1157.astype('int8'), [168,]), ), 3)
output = relay.Tuple([uop_1146,call_1151,var_1152,call_1154,var_1155,const_1156,var_1157,])
output2 = relay.Tuple([uop_1146,call_1153,var_1152,call_1158,var_1155,const_1156,var_1157,])
func_1168 = relay.Function([var_1152,var_1155,var_1157,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
var_1169 = relay.var("var_1169", dtype = "float32", shape = (65,))#candidate|1169|(65,)|var|float32
var_1170 = relay.var("var_1170", dtype = "uint64", shape = (756,))#candidate|1170|(756,)|var|uint64
var_1171 = relay.var("var_1171", dtype = "int8", shape = (84, 2))#candidate|1171|(84, 2)|var|int8
output = func_1168(var_1169,var_1170,var_1171,)
func_1172 = relay.Function([var_1169,var_1170,var_1171,], output)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1646 = relay.var("var_1646", dtype = "float32", shape = (8, 16, 14))#candidate|1646|(8, 16, 14)|var|float32
uop_1647 = relay.rsqrt(var_1646.astype('float32')) # shape=(8, 16, 14)
output = uop_1647
output2 = uop_1647
func_1651 = relay.Function([var_1646,], output)
mod['func_1651'] = func_1651
mod = relay.transform.InferType()(mod)
var_1652 = relay.var("var_1652", dtype = "float32", shape = (8, 16, 14))#candidate|1652|(8, 16, 14)|var|float32
output = func_1651(var_1652)
func_1653 = relay.Function([var_1652], output)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1767 = relay.var("var_1767", dtype = "int16", shape = (6, 4, 10))#candidate|1767|(6, 4, 10)|var|int16
const_1768 = relay.const([[[1,7,4,-8,2,10,-6,-10,-4,-3],[5,-8,-5,10,3,5,4,3,10,4],[1,4,7,-2,1,7,-3,-6,9,6],[-4,5,-5,-7,10,-6,7,8,-4,-4]],[[-10,-2,6,-3,-6,9,10,-9,4,7],[-9,-5,-3,-10,-7,-1,-3,-10,-10,8],[-10,5,2,-4,-2,-2,-5,7,4,-2],[-10,-8,7,6,2,5,-10,3,-6,2]],[[-7,-9,3,-10,-5,-10,7,-10,7,-4],[-9,-1,9,2,-1,5,1,2,-2,-1],[-5,4,8,-10,1,3,3,8,10,-9],[-6,-10,-8,1,5,9,-4,5,6,-8]],[[-9,6,9,-8,-7,1,-1,2,-5,1],[6,1,-4,5,-4,-6,6,-7,-7,-5],[1,-8,8,4,-3,-3,-7,-1,3,-1],[-9,-9,9,1,2,10,1,-6,8,-2]],[[6,-1,10,-4,-8,-9,1,3,8,8],[1,3,-8,10,-10,-6,-8,9,-9,-10],[-9,-3,8,2,1,6,-10,3,-8,3],[-7,-6,5,2,8,10,-10,-8,10,-4]],[[4,4,-9,-1,4,-6,-4,-6,8,3],[-10,5,-8,8,-5,-1,-2,-2,-4,9],[10,8,8,2,-2,3,-10,1,3,5],[4,8,3,-9,6,6,5,-9,2,10]]], dtype = "int16")#candidate|1768|(6, 4, 10)|const|int16
bop_1769 = relay.greater(var_1767.astype('bool'), relay.reshape(const_1768.astype('bool'), relay.shape_of(var_1767))) # shape=(6, 4, 10)
uop_1783 = relay.rsqrt(var_1767.astype('float32')) # shape=(6, 4, 10)
func_425_call = mod.get_global_var('func_425')
func_428_call = mutated_mod.get_global_var('func_428')
var_1791 = relay.var("var_1791", dtype = "float64", shape = (96,))#candidate|1791|(96,)|var|float64
var_1792 = relay.var("var_1792", dtype = "int8", shape = ())#candidate|1792|()|var|int8
call_1790 = relay.TupleGetItem(func_425_call(relay.reshape(var_1791.astype('float64'), [16, 1, 6]), relay.reshape(var_1792.astype('int8'), []), ), 0)
call_1793 = relay.TupleGetItem(func_428_call(relay.reshape(var_1791.astype('float64'), [16, 1, 6]), relay.reshape(var_1792.astype('int8'), []), ), 0)
output = relay.Tuple([bop_1769,uop_1783,call_1790,var_1791,var_1792,])
output2 = relay.Tuple([bop_1769,uop_1783,call_1793,var_1791,var_1792,])
func_1808 = relay.Function([var_1767,var_1791,var_1792,], output)
mod['func_1808'] = func_1808
mod = relay.transform.InferType()(mod)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mutated_mod.get_global_var('func_1808')
var_1810 = relay.var("var_1810", dtype = "int16", shape = (6, 4, 10))#candidate|1810|(6, 4, 10)|var|int16
var_1811 = relay.var("var_1811", dtype = "float64", shape = (96,))#candidate|1811|(96,)|var|float64
var_1812 = relay.var("var_1812", dtype = "int8", shape = ())#candidate|1812|()|var|int8
call_1809 = func_1808_call(var_1810,var_1811,var_1812,)
output = call_1809
func_1813 = relay.Function([var_1810,var_1811,var_1812,], output)
mutated_mod['func_1813'] = func_1813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2231 = relay.var("var_2231", dtype = "float64", shape = (13, 3, 16))#candidate|2231|(13, 3, 16)|var|float64
uop_2232 = relay.erf(var_2231.astype('float64')) # shape=(13, 3, 16)
bop_2236 = relay.add(var_2231.astype('uint64'), relay.reshape(uop_2232.astype('uint64'), relay.shape_of(var_2231))) # shape=(13, 3, 16)
output = relay.Tuple([bop_2236,])
output2 = relay.Tuple([bop_2236,])
func_2243 = relay.Function([var_2231,], output)
mod['func_2243'] = func_2243
mod = relay.transform.InferType()(mod)
mutated_mod['func_2243'] = func_2243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2244 = relay.var("var_2244", dtype = "float64", shape = (13, 3, 16))#candidate|2244|(13, 3, 16)|var|float64
func_2243_call = mutated_mod.get_global_var('func_2243')
call_2245 = func_2243_call(var_2244)
output = call_2245
func_2246 = relay.Function([var_2244], output)
mutated_mod['func_2246'] = func_2246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2405 = relay.var("var_2405", dtype = "int16", shape = (16, 7, 13))#candidate|2405|(16, 7, 13)|var|int16
var_2406 = relay.var("var_2406", dtype = "int16", shape = (16, 7, 13))#candidate|2406|(16, 7, 13)|var|int16
bop_2407 = relay.left_shift(var_2405.astype('int16'), relay.reshape(var_2406.astype('int16'), relay.shape_of(var_2405))) # shape=(16, 7, 13)
func_480_call = mod.get_global_var('func_480')
func_482_call = mutated_mod.get_global_var('func_482')
var_2411 = relay.var("var_2411", dtype = "float32", shape = (13, 5))#candidate|2411|(13, 5)|var|float32
call_2410 = relay.TupleGetItem(func_480_call(relay.reshape(var_2411.astype('float32'), [1, 13, 5])), 0)
call_2412 = relay.TupleGetItem(func_482_call(relay.reshape(var_2411.astype('float32'), [1, 13, 5])), 0)
output = relay.Tuple([bop_2407,call_2410,var_2411,])
output2 = relay.Tuple([bop_2407,call_2412,var_2411,])
func_2425 = relay.Function([var_2405,var_2406,var_2411,], output)
mod['func_2425'] = func_2425
mod = relay.transform.InferType()(mod)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2425_call = mutated_mod.get_global_var('func_2425')
var_2427 = relay.var("var_2427", dtype = "int16", shape = (16, 7, 13))#candidate|2427|(16, 7, 13)|var|int16
var_2428 = relay.var("var_2428", dtype = "int16", shape = (16, 7, 13))#candidate|2428|(16, 7, 13)|var|int16
var_2429 = relay.var("var_2429", dtype = "float32", shape = (13, 5))#candidate|2429|(13, 5)|var|float32
call_2426 = func_2425_call(var_2427,var_2428,var_2429,)
output = call_2426
func_2430 = relay.Function([var_2427,var_2428,var_2429,], output)
mutated_mod['func_2430'] = func_2430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2506 = relay.var("var_2506", dtype = "int8", shape = ())#candidate|2506|()|var|int8
var_2507 = relay.var("var_2507", dtype = "int8", shape = (2, 3, 15))#candidate|2507|(2, 3, 15)|var|int8
bop_2508 = relay.less_equal(var_2506.astype('bool'), var_2507.astype('bool')) # shape=(2, 3, 15)
uop_2512 = relay.rsqrt(bop_2508.astype('float64')) # shape=(2, 3, 15)
func_425_call = mod.get_global_var('func_425')
func_428_call = mutated_mod.get_global_var('func_428')
const_2517 = relay.const([-5.854136,-4.593941,5.111143,-9.139979,-7.511110,-5.901006,-7.748807,-4.182567,1.191863,5.281903,-3.007813,5.989978,-3.352859,9.358646,-8.711065,-7.611935,-3.758075,5.373058,-9.066768,0.339652,-5.427392,1.204900,0.402793,3.709685,-1.852374,5.617787,7.031879,2.664008,-5.284259,-4.703281,0.208447,0.091507,4.196057,-8.126714,8.938180,-6.105946,4.527919,-9.631376,6.763952,2.145163,-7.847603,4.273880,1.672088,9.092947,0.448409,-3.547332,0.695497,-0.275098,-5.875055,-7.042209,-1.478161,7.571567,-4.320305,-8.191902,6.546445,-3.193525,-6.870521,-4.879844,-0.154510,-8.886516,2.737325,0.472463,-0.827702,7.654156,-9.025360,-4.997174,-8.081350,-7.945074,6.899212,3.075647,-2.022969,-3.156010,0.934502,-5.467644,5.054974,6.333851,-8.041912,5.716296,-7.324155,3.104477,-3.811652,8.698105,-3.472922,7.758788,-8.898163,-1.611736,-1.292186,-4.964528,2.843066,-6.225297,9.491712,8.154689,-5.501487,-6.406395,4.750161,6.917973], dtype = "float64")#candidate|2517|(96,)|const|float64
call_2516 = relay.TupleGetItem(func_425_call(relay.reshape(const_2517.astype('float64'), [16, 1, 6]), relay.reshape(var_2506.astype('int8'), []), ), 1)
call_2518 = relay.TupleGetItem(func_428_call(relay.reshape(const_2517.astype('float64'), [16, 1, 6]), relay.reshape(var_2506.astype('int8'), []), ), 1)
output = relay.Tuple([uop_2512,call_2516,const_2517,])
output2 = relay.Tuple([uop_2512,call_2518,const_2517,])
func_2523 = relay.Function([var_2506,var_2507,], output)
mod['func_2523'] = func_2523
mod = relay.transform.InferType()(mod)
var_2524 = relay.var("var_2524", dtype = "int8", shape = ())#candidate|2524|()|var|int8
var_2525 = relay.var("var_2525", dtype = "int8", shape = (2, 3, 15))#candidate|2525|(2, 3, 15)|var|int8
output = func_2523(var_2524,var_2525,)
func_2526 = relay.Function([var_2524,var_2525,], output)
mutated_mod['func_2526'] = func_2526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2892 = relay.var("var_2892", dtype = "int64", shape = (5, 7, 15))#candidate|2892|(5, 7, 15)|var|int64
const_2893 = relay.const([[[-9,2,7,9,-1,-10,-6,8,-5,-1,-3,5,-6,-7,10],[1,-4,-5,6,2,-2,-6,3,8,-7,6,-9,-2,-6,5],[10,3,-8,-7,-4,-2,3,3,-1,8,3,10,5,-4,-10],[-6,7,-6,-10,9,-4,-8,-10,7,-3,1,-8,-5,-4,-3],[2,-5,-1,-1,-6,4,-5,8,-5,-7,7,6,9,-8,2],[7,3,10,3,-4,6,-8,10,4,-1,6,7,3,3,10],[7,9,9,3,-5,-10,4,-9,4,-2,4,-2,1,-8,-9]],[[2,-6,-5,2,-7,-6,7,-3,-6,2,9,-7,-7,-6,-5],[-5,-2,-9,6,-6,10,7,2,6,6,-6,-1,8,5,5],[3,-6,1,-2,7,-9,8,4,8,7,-7,-1,-10,-6,-4],[-3,-1,2,6,-8,-1,-10,2,10,6,-4,-2,1,5,-5],[10,-8,10,-4,5,9,-6,-7,-5,-8,6,-5,-8,-8,-6],[6,4,-9,-7,1,5,-7,9,1,3,-8,-3,7,9,-6],[10,-3,7,1,4,-5,-9,2,-8,-5,-2,10,-6,-7,-2]],[[-4,-9,9,10,2,-1,5,-1,2,-7,2,8,5,1,-10],[8,-7,10,3,-7,4,-1,-10,5,2,6,1,6,-9,1],[9,-5,6,-4,7,-3,-9,-1,7,-8,-6,-2,10,7,6],[3,7,6,5,-2,1,-3,-2,-9,8,7,-4,3,1,-5],[5,-6,6,-6,10,-1,-5,-3,-9,-5,2,3,3,1,-5],[2,-4,4,8,1,2,-1,8,-4,-6,6,-1,5,-4,-9],[-3,-8,-7,1,4,3,5,3,-8,2,7,4,-4,3,5]],[[6,-3,7,9,-7,-9,1,6,7,2,-10,7,7,10,1],[4,-3,2,-8,7,7,8,2,-3,-10,8,4,-1,-7,10],[8,5,-10,-1,-1,-6,6,6,9,-7,-4,8,-10,-6,-4],[7,2,-1,-1,3,-3,-10,-4,-9,6,4,10,-8,3,-1],[2,-8,2,-9,4,-6,-2,7,5,-8,1,10,6,-4,-4],[5,-3,-2,-2,9,-2,2,3,9,5,-8,-1,-8,6,5],[6,-8,5,-5,9,-3,-1,7,4,2,7,-6,6,-5,-5]],[[-4,2,-10,-2,-4,-1,3,1,7,-8,-7,-7,-3,-10,-7],[1,-5,-5,-10,4,-7,-8,-8,-10,6,-2,-1,9,-3,-2],[-3,-4,-6,7,-8,-7,-5,-5,5,6,1,8,6,-6,6],[9,-1,-10,-4,10,-8,-6,3,4,5,9,7,-10,5,-1],[-1,2,3,-8,3,-10,-6,-3,-10,-7,6,-2,5,5,-7],[-3,-5,2,-1,9,-10,-4,-9,-5,4,5,2,-3,9,-9],[2,-5,-8,-9,7,4,10,6,-5,-8,5,-8,-1,1,9]]], dtype = "int64")#candidate|2893|(5, 7, 15)|const|int64
bop_2894 = relay.left_shift(var_2892.astype('int64'), relay.reshape(const_2893.astype('int64'), relay.shape_of(var_2892))) # shape=(5, 7, 15)
output = relay.Tuple([bop_2894,])
output2 = relay.Tuple([bop_2894,])
func_2899 = relay.Function([var_2892,], output)
mod['func_2899'] = func_2899
mod = relay.transform.InferType()(mod)
var_2900 = relay.var("var_2900", dtype = "int64", shape = (5, 7, 15))#candidate|2900|(5, 7, 15)|var|int64
output = func_2899(var_2900)
func_2901 = relay.Function([var_2900], output)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2977 = relay.var("var_2977", dtype = "int16", shape = (10, 8, 7))#candidate|2977|(10, 8, 7)|var|int16
var_2978 = relay.var("var_2978", dtype = "int16", shape = (10, 8, 7))#candidate|2978|(10, 8, 7)|var|int16
bop_2979 = relay.right_shift(var_2977.astype('int16'), relay.reshape(var_2978.astype('int16'), relay.shape_of(var_2977))) # shape=(10, 8, 7)
uop_2995 = relay.acos(bop_2979.astype('float64')) # shape=(10, 8, 7)
func_2243_call = mod.get_global_var('func_2243')
func_2246_call = mutated_mod.get_global_var('func_2246')
const_3021 = relay.const([[-0.304830,4.898727],[-0.898994,7.564050],[2.618358,-1.680878],[6.344690,9.932513],[-9.770152,-9.576598],[8.872465,-4.133583],[-8.616175,-1.471398],[3.120027,-4.294015],[-9.412725,1.660693],[7.821466,-4.143807],[-9.763729,-6.864227],[6.251292,-2.613085],[1.864119,6.479403],[-1.199282,6.935337],[9.665131,2.784120],[-8.972687,-6.312191],[8.791140,3.814487],[-0.834798,7.542137],[-6.727502,2.315194],[-3.488406,8.788120],[-5.953803,-1.609632],[3.990312,-2.518872],[7.647542,8.197112],[7.524257,-5.577603],[5.670287,-9.730030],[-7.522182,-5.098716],[6.246866,-5.356871],[7.457337,5.607539],[-7.902594,-2.410660],[9.616734,-1.832056],[-2.032308,-9.610799],[4.881736,-6.346247],[-9.298107,8.737227],[0.605624,-5.357107],[6.687390,-5.895737],[-4.190058,-0.677205],[0.183315,-9.185820],[3.542716,8.255537],[-4.413715,-2.388095],[-7.779187,7.945301],[7.088500,7.318030],[-8.338995,8.266103],[4.002902,4.982290],[0.472629,-1.345051],[-5.104416,8.508284],[-1.711987,-4.853529],[-0.798738,-1.669800],[4.661718,8.694313],[-8.529048,7.867621],[-4.503949,-4.154033],[-2.611782,-6.333474],[-5.178046,-5.997192],[2.898394,-1.186932],[-0.743002,9.046306],[8.530790,-2.778217],[0.136130,6.004115],[-7.355884,-2.838296],[9.731853,-6.953794],[-4.371690,5.031921],[-4.632509,-1.557671],[7.136584,5.901907],[1.051455,-8.711998],[-8.976562,7.556491],[8.302551,-6.965111],[-1.844225,-6.984122],[4.753919,5.532738],[1.037556,-5.084957],[7.049231,-4.989451],[-0.712093,-8.817640],[-0.067795,-6.548617],[5.185912,-5.247044],[0.004002,9.989689],[3.473580,9.587108],[-4.560381,5.040002],[-5.319858,4.722625],[-6.139228,-9.885081],[8.980398,-7.835154],[-1.209512,3.793467],[-7.621103,-8.675926],[-4.100852,1.603264],[8.289041,-0.841903],[-7.751601,-0.772408],[-2.580687,-6.834066],[7.117203,1.284607],[1.937723,-6.581385],[-0.159359,-3.549538],[6.904298,-0.404882],[-0.115958,3.502988],[2.768429,1.210305],[4.786725,-3.845206],[-4.803652,-6.290009],[2.633148,-1.762821],[5.960950,-1.316865],[-8.587780,9.934165],[0.544371,2.530822],[2.050109,-9.116435],[2.729203,-9.137430],[8.672655,-3.262911],[2.837892,4.798274],[-2.719959,-0.782920],[-9.993367,0.321552],[8.764667,-4.286191],[0.292924,-2.622287],[-2.764401,3.413712],[-9.878754,3.774982],[-0.648196,8.116512],[-6.212960,-2.039484],[0.668215,6.046576],[-2.584169,-4.251742],[7.274027,-7.784393],[4.132491,7.224727],[1.409823,8.636703],[7.445716,1.180198],[-1.777067,0.802437],[4.677072,9.161876],[-8.105120,-8.877300],[1.820272,-8.492331],[6.626568,4.770038],[3.820309,5.671454],[4.187658,7.324222],[0.858916,-4.552222],[4.259611,-3.838983],[-5.791164,3.934663],[-9.694740,9.636514],[7.300656,-2.608840],[-7.328983,4.005280],[7.076122,9.838536],[7.815462,5.507557],[0.253979,-6.032113],[6.196335,-2.920197],[-0.299456,5.512454],[0.569693,-0.627593],[-0.766628,-5.085566],[1.696475,5.538187],[-7.730389,0.388665],[0.817989,-6.109372],[1.984409,3.511752],[1.654320,-6.846891],[-5.442193,1.133435],[-9.503795,-7.513239],[-4.052564,3.337485],[-9.835184,-2.598708],[3.865131,-4.582798],[-7.107503,-7.218471],[6.847311,1.589105],[6.427889,-2.902264],[8.588247,6.576005],[3.664650,-6.517468],[-1.876864,5.655545],[-9.516091,2.641887],[-5.991080,-7.407142],[-6.409650,-8.544461],[4.697302,3.856888],[5.142413,-7.017966],[5.424067,-6.794757],[4.830820,-4.051859],[-0.002765,-5.363819],[-0.701708,3.400350],[5.348941,2.145089],[-2.702320,7.845749],[8.131915,-2.718444],[-7.054855,9.985745],[-0.330259,-3.140493],[4.241382,-8.885221],[2.464364,-0.453521],[-5.649518,-1.946494],[-3.986574,-0.593524],[6.695427,-1.335202],[-7.622428,1.252340],[1.358857,-1.126274],[-8.016381,7.397991],[2.414037,6.124933],[-2.769247,-7.685895],[0.417238,-4.602031],[1.855428,-1.187938],[-6.043376,4.766070],[2.399508,4.304571],[-4.712124,1.957915],[-5.908824,-9.083396],[-9.464755,-3.461254],[2.470896,7.201753],[4.801239,-0.877345],[-0.641600,3.048368],[1.818359,8.093989],[6.371263,2.636318],[-9.061315,-4.319478],[1.926236,4.401472],[1.439468,-9.714564],[-2.332365,0.432697],[4.034026,-7.970828],[3.063174,-2.358537],[7.780966,0.058807],[-3.421482,-4.707975],[7.482836,-4.397240],[0.154721,-2.721029],[4.625549,9.806401],[1.847308,-8.402642],[3.221050,-4.974141],[-2.366455,0.582683],[6.415036,2.746756],[-5.448974,-2.939202],[-0.629812,-9.735619],[-2.372771,-1.147038],[-9.688027,-0.823354],[5.317450,-3.315523],[8.701592,1.056481],[-3.550233,9.091694],[8.798486,8.248213],[-6.636053,-6.876413],[-0.650337,-3.260741],[4.169384,4.149347],[7.161994,8.003512],[-2.394966,0.207241],[6.801609,7.968559],[9.314779,0.480048],[5.176685,-3.920638],[-2.208419,9.573586],[-6.039117,-7.692462],[-7.018966,9.691485],[4.803342,-9.062961],[-9.246155,4.591865],[-7.231668,0.616294],[-2.424357,2.123646],[-3.837221,1.969654],[-2.177395,1.727777],[7.193016,-7.283715],[7.059778,6.483950],[8.561866,-0.931851],[7.898836,5.684517],[8.379147,9.443561],[9.805809,7.203653],[8.998694,-6.193613],[0.718707,-2.683618],[7.067118,8.328149],[-2.060147,3.862597],[-2.300128,1.670289],[-3.880101,-4.369195],[-7.207175,2.671063],[-8.384438,2.311877],[5.214124,1.137690],[9.837580,9.189265],[-1.583672,-0.255309],[6.120312,-7.565282],[1.896357,8.785839],[-9.957536,1.031435],[-6.126793,-4.288173],[-3.055844,-7.924778],[-7.652637,-8.988388],[1.155916,-2.714438],[-0.935799,-2.192531],[2.530956,-2.976420],[-4.590138,-7.388500],[9.087786,7.325391],[-6.794273,-2.915106],[4.533733,-9.658575],[-2.252527,-4.051608],[5.126357,6.147712],[3.695805,5.410809],[4.389347,8.823570],[-6.926788,-2.287303],[-1.745333,9.523401],[-5.643826,4.797190],[-3.862395,2.847512],[-3.366920,-8.848401],[-5.481472,-7.091094],[3.602016,-4.072338],[9.098814,-5.607593],[5.990902,6.389296],[6.593736,-0.055281],[-9.612742,3.321345],[-5.465693,3.934834],[-0.744608,-6.330920],[5.217667,-7.082069],[-3.430316,8.354797],[5.431481,2.759980],[7.864120,-1.097892],[6.888551,-9.029959],[-9.685005,-5.860017],[-3.554406,9.823328],[7.171319,0.583731],[-1.002933,9.185824],[2.764654,-1.078080],[9.145955,7.405936],[-4.171628,8.162300],[7.165499,7.276203],[8.857340,-1.356056],[9.858359,7.946480],[4.583797,-5.398238],[-0.613169,-2.042752],[-2.557516,-1.023020],[2.008247,-8.160573],[8.165834,2.849021],[3.814410,-0.594693],[0.306938,-2.003838],[9.615019,5.248524],[7.878186,-2.061140],[-7.607745,0.279633],[-1.904418,-0.082575],[3.885809,3.738610],[-6.647747,6.009929],[-1.532108,-0.168011],[-0.356330,-3.748414],[-2.852203,-4.950268],[9.670980,-3.390924],[-3.399786,5.402266],[9.102362,-4.916903],[-4.393466,-4.579327],[-2.311790,5.934502],[8.939465,-5.874470],[-9.417573,9.489866],[1.912065,-7.255323],[6.867410,-0.065748]], dtype = "float64")#candidate|3021|(312, 2)|const|float64
call_3020 = relay.TupleGetItem(func_2243_call(relay.reshape(const_3021.astype('float64'), [13, 3, 16])), 0)
call_3022 = relay.TupleGetItem(func_2246_call(relay.reshape(const_3021.astype('float64'), [13, 3, 16])), 0)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
var_3032 = relay.var("var_3032", dtype = "int64", shape = (525,))#candidate|3032|(525,)|var|int64
call_3031 = relay.TupleGetItem(func_2899_call(relay.reshape(var_3032.astype('int64'), [5, 7, 15])), 0)
call_3033 = relay.TupleGetItem(func_2901_call(relay.reshape(var_3032.astype('int64'), [5, 7, 15])), 0)
func_1808_call = mod.get_global_var('func_1808')
func_1813_call = mutated_mod.get_global_var('func_1813')
var_3037 = relay.var("var_3037", dtype = "int16", shape = (240,))#candidate|3037|(240,)|var|int16
const_3038 = relay.const([1.868175,0.031431,8.958182,2.922507,-2.650243,-2.175151,7.132648,2.770570,6.236077,-3.125038,-4.487621,-4.645976,-6.832618,7.057088,-2.982902,5.544439,4.527264,1.868363,1.253259,-6.800338,-8.844839,-3.145339,-1.329441,1.776083,-2.347171,4.471534,4.327374,0.162652,-7.975265,-4.166850,1.151020,-4.560315,-9.004784,0.604514,-7.847114,3.767606,-4.016857,1.157115,7.384705,-5.746331,-3.121353,-9.175710,0.621909,5.356667,-2.314344,4.999400,-8.041191,-8.987044,3.062621,-9.706673,-9.902172,-1.576651,2.010858,6.498803,0.127894,-8.920064,-3.763715,9.809499,-0.020376,2.092735,-1.269605,-8.811392,-4.161754,6.825016,7.062371,5.244506,-6.283543,-4.443812,8.281374,-0.390902,-7.182382,-9.504274,-7.001597,-5.793788,0.323226,4.483547,-8.240164,-8.975849,1.729700,1.694543,2.203402,-5.446054,-5.830996,7.044585,-6.362547,-6.075048,2.713634,7.034166,6.919167,-9.250436,8.148207,-0.977400,-3.375739,-8.884763,4.195920,-9.263556], dtype = "float64")#candidate|3038|(96,)|const|float64
const_3039 = relay.const(8, dtype = "int8")#candidate|3039|()|const|int8
call_3036 = relay.TupleGetItem(func_1808_call(relay.reshape(var_3037.astype('int16'), [6, 4, 10]), relay.reshape(const_3038.astype('float64'), [96,]), relay.reshape(const_3039.astype('int8'), []), ), 2)
call_3040 = relay.TupleGetItem(func_1813_call(relay.reshape(var_3037.astype('int16'), [6, 4, 10]), relay.reshape(const_3038.astype('float64'), [96,]), relay.reshape(const_3039.astype('int8'), []), ), 2)
var_3041 = relay.var("var_3041", dtype = "float64", shape = (10, 8, 7))#candidate|3041|(10, 8, 7)|var|float64
bop_3042 = relay.greater_equal(uop_2995.astype('bool'), relay.reshape(var_3041.astype('bool'), relay.shape_of(uop_2995))) # shape=(10, 8, 7)
uop_3046 = relay.log10(uop_2995.astype('float32')) # shape=(10, 8, 7)
bop_3049 = relay.not_equal(bop_3042.astype('bool'), relay.reshape(bop_2979.astype('bool'), relay.shape_of(bop_3042))) # shape=(10, 8, 7)
func_480_call = mod.get_global_var('func_480')
func_482_call = mutated_mod.get_global_var('func_482')
const_3054 = relay.const([2.367141,5.831023,-1.893383,-6.289629,-2.067972,-8.207713,-1.425669,-9.681735,9.122774,0.456711,9.104208,5.851102,-4.635390,2.568234,-5.257759,-7.314642,-1.984525,2.986763,5.646028,6.779569,2.939969,9.346852,-3.265833,8.626024,-6.582919,-7.110736,7.656988,-3.941514,7.426011,8.353656,-5.674139,-8.557517,5.309798,2.964267,2.801589,-1.176119,-0.437317,-1.538679,-9.525436,1.974769,8.478598,-5.319834,0.734952,-6.061210,-1.016944,-0.384107,-4.253806,0.484211,-1.657829,-1.856866,2.146769,-9.961664,-4.684504,7.179074,-2.054679,4.895698,-9.404265,2.874578,-2.424360,-7.506064,3.944354,-7.590160,6.957008,-5.223156,-7.513303], dtype = "float32")#candidate|3054|(65,)|const|float32
call_3053 = relay.TupleGetItem(func_480_call(relay.reshape(const_3054.astype('float32'), [1, 13, 5])), 0)
call_3055 = relay.TupleGetItem(func_482_call(relay.reshape(const_3054.astype('float32'), [1, 13, 5])), 0)
output = relay.Tuple([call_3020,const_3021,call_3031,var_3032,call_3036,var_3037,const_3038,const_3039,uop_3046,bop_3049,call_3053,const_3054,])
output2 = relay.Tuple([call_3022,const_3021,call_3033,var_3032,call_3040,var_3037,const_3038,const_3039,uop_3046,bop_3049,call_3055,const_3054,])
func_3056 = relay.Function([var_2977,var_2978,var_3032,var_3037,var_3041,], output)
mod['func_3056'] = func_3056
mod = relay.transform.InferType()(mod)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3056_call = mutated_mod.get_global_var('func_3056')
var_3058 = relay.var("var_3058", dtype = "int16", shape = (10, 8, 7))#candidate|3058|(10, 8, 7)|var|int16
var_3059 = relay.var("var_3059", dtype = "int16", shape = (10, 8, 7))#candidate|3059|(10, 8, 7)|var|int16
var_3060 = relay.var("var_3060", dtype = "int64", shape = (525,))#candidate|3060|(525,)|var|int64
var_3061 = relay.var("var_3061", dtype = "int16", shape = (240,))#candidate|3061|(240,)|var|int16
var_3062 = relay.var("var_3062", dtype = "float64", shape = (10, 8, 7))#candidate|3062|(10, 8, 7)|var|float64
call_3057 = func_3056_call(var_3058,var_3059,var_3060,var_3061,var_3062,)
output = call_3057
func_3063 = relay.Function([var_3058,var_3059,var_3060,var_3061,var_3062,], output)
mutated_mod['func_3063'] = func_3063
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3072 = relay.const([[0.217736,-7.411404,6.980911,-9.606004,6.142544,-2.765066,-3.779811,-4.609961,5.811904,-3.352707,3.472322],[5.788012,5.751166,-4.929828,1.024496,0.550338,-2.584895,-2.086977,-5.878832,6.946639,1.221268,-3.968702],[8.240643,8.711469,7.126531,7.873762,1.218081,-7.142944,-6.201551,5.599562,-3.439486,-5.052565,-1.193448],[-8.870090,3.435316,6.519816,-4.891081,5.046507,-9.575289,-9.062898,-2.220004,2.094276,-0.491628,-2.993560],[-5.530997,8.271550,-9.926075,-6.109799,-1.668822,-3.597478,-2.070962,-3.791332,5.520893,8.859234,-8.827210],[5.650086,1.060480,8.218878,-5.701639,-9.312740,8.099960,9.503678,-2.844872,7.165360,4.765656,-6.051671],[3.215114,-8.630092,-0.443766,-3.585198,2.170088,2.898370,-4.840939,-5.234218,-5.871669,-5.952313,-7.847724],[-1.999731,3.189697,-7.302659,9.424834,-4.767386,2.887224,8.692639,-2.895706,9.270814,0.128253,-5.015343],[2.610459,7.835499,-1.956605,6.960622,7.755639,8.866072,2.257402,4.407634,-6.711120,4.022182,-2.163733],[-7.887116,9.416224,-9.561723,-6.947270,-0.855575,-1.184951,-6.930898,8.699883,1.228882,0.843975,0.502035],[-1.213499,4.406381,9.698498,3.582110,6.993213,-1.555753,0.245915,8.681590,-2.004312,6.336578,4.554291],[9.455964,6.008710,-7.642924,3.531240,-7.656893,-8.304014,-7.146525,-8.993694,-4.550153,3.540417,-4.639553],[9.190826,6.478362,-5.505348,-7.873563,-1.360050,-5.962469,7.932649,-7.048680,5.337850,-5.193627,-6.285407],[1.674248,-8.453862,-5.268517,-9.402279,-4.700814,-6.192941,3.850526,-6.913984,3.386967,5.331980,9.185450],[-1.504186,8.804460,-0.236806,6.282077,4.474189,7.751230,-8.032509,4.882203,4.413502,2.523024,1.163730],[-0.746723,-3.824989,-2.246216,5.178259,-0.368016,1.941495,4.284551,-5.759178,-6.855757,7.827675,9.477087]], dtype = "float64")#candidate|3072|(16, 11)|const|float64
uop_3073 = relay.asin(const_3072.astype('float64')) # shape=(16, 11)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
const_3076 = relay.const([[-9.688886],[-7.483136],[-3.091704],[-4.390308],[8.480841],[-0.264110],[-6.838088],[-5.970838],[-1.318224],[4.948161],[-7.128727],[-2.220288],[5.202870],[8.397740],[8.150859],[2.408933],[8.045965],[3.207699],[9.397442],[-1.547724],[-9.055031],[3.370779],[-1.231078],[-3.587387],[8.135593],[-8.160768],[-7.404727],[6.352861],[4.365423],[-6.730118],[7.317456],[-4.709970],[9.718666],[-3.063406],[2.931544],[-0.948865],[-3.965628],[2.282646],[0.200327],[4.462867],[1.055509],[-2.133064],[-0.477786],[0.953984],[-8.476499],[-3.570457],[8.000892],[-8.739962],[-2.111958],[-9.123124],[1.801023],[6.653082],[-6.804807],[8.022163],[2.848491],[-7.092599],[-1.354909],[-8.117131],[2.657536],[-3.848947],[8.134805],[1.373852],[3.602958],[-3.859416],[1.610586]], dtype = "float32")#candidate|3076|(65, 1)|const|float32
var_3077 = relay.var("var_3077", dtype = "uint64", shape = (756,))#candidate|3077|(756,)|var|uint64
var_3078 = relay.var("var_3078", dtype = "int8", shape = (168,))#candidate|3078|(168,)|var|int8
call_3075 = relay.TupleGetItem(func_1168_call(relay.reshape(const_3076.astype('float32'), [65,]), relay.reshape(var_3077.astype('uint64'), [756,]), relay.reshape(var_3078.astype('int8'), [84, 2]), ), 5)
call_3079 = relay.TupleGetItem(func_1172_call(relay.reshape(const_3076.astype('float32'), [65,]), relay.reshape(var_3077.astype('uint64'), [756,]), relay.reshape(var_3078.astype('int8'), [84, 2]), ), 5)
output = relay.Tuple([uop_3073,call_3075,const_3076,var_3077,var_3078,])
output2 = relay.Tuple([uop_3073,call_3079,const_3076,var_3077,var_3078,])
func_3090 = relay.Function([var_3077,var_3078,], output)
mod['func_3090'] = func_3090
mod = relay.transform.InferType()(mod)
var_3091 = relay.var("var_3091", dtype = "uint64", shape = (756,))#candidate|3091|(756,)|var|uint64
var_3092 = relay.var("var_3092", dtype = "int8", shape = (168,))#candidate|3092|(168,)|var|int8
output = func_3090(var_3091,var_3092,)
func_3093 = relay.Function([var_3091,var_3092,], output)
mutated_mod['func_3093'] = func_3093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3338 = relay.var("var_3338", dtype = "float64", shape = (10, 8, 1))#candidate|3338|(10, 8, 1)|var|float64
uop_3339 = relay.acosh(var_3338.astype('float64')) # shape=(10, 8, 1)
output = relay.Tuple([uop_3339,])
output2 = relay.Tuple([uop_3339,])
func_3342 = relay.Function([var_3338,], output)
mod['func_3342'] = func_3342
mod = relay.transform.InferType()(mod)
var_3343 = relay.var("var_3343", dtype = "float64", shape = (10, 8, 1))#candidate|3343|(10, 8, 1)|var|float64
output = func_3342(var_3343)
func_3344 = relay.Function([var_3343], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3526 = relay.const([[[-9.537635,-0.130866],[0.407710,0.465035],[-2.057739,-0.485369],[0.536271,-9.922428],[6.020649,8.592299],[4.272790,-1.801252],[4.971752,-4.390493],[9.158827,0.986586],[-7.116120,-9.268143],[-1.878063,1.853287],[2.060671,3.017750],[-9.361069,7.545645]],[[4.397393,-2.748670],[3.417742,-1.010148],[-7.137956,-0.587106],[-2.122875,5.467625],[9.698157,6.681487],[-5.163014,-7.612910],[-5.813135,-1.742370],[0.023687,-9.351582],[-0.481168,3.806133],[-0.767123,-1.101543],[-2.219256,-0.514005],[-9.776080,-3.526150]],[[-4.167932,9.773153],[-0.823465,-2.619168],[1.516929,0.055177],[8.296445,0.301914],[7.099977,5.922998],[8.427848,-3.955729],[-5.103971,-8.438993],[-6.707692,-7.417604],[-9.339056,6.752076],[-1.448128,4.667354],[0.754494,-9.886558],[9.249160,-9.093209]],[[3.885207,-9.979935],[-1.645327,-8.494005],[5.350658,3.375623],[2.664126,-8.668368],[-9.628206,-5.706192],[-7.812455,-3.510213],[3.938280,-9.487071],[5.924949,2.061164],[-1.282639,6.154919],[-4.137031,0.068741],[-9.945115,3.733347],[-3.445138,-0.289623]]], dtype = "float64")#candidate|3526|(4, 12, 2)|const|float64
uop_3527 = relay.acosh(const_3526.astype('float64')) # shape=(4, 12, 2)
func_2523_call = mod.get_global_var('func_2523')
func_2526_call = mutated_mod.get_global_var('func_2526')
var_3531 = relay.var("var_3531", dtype = "int8", shape = ())#candidate|3531|()|var|int8
const_3532 = relay.const([-9,-4,-5,7,-6,1,6,-10,4,8,-8,-3,2,-4,-4,6,1,6,1,-6,-2,-9,-10,9,-2,4,-4,10,2,-10,8,-10,8,-7,-1,7,1,10,-6,7,-7,-7,9,7,-3,10,7,-10,-5,-5,9,-10,10,2,-10,-2,-2,-8,-8,4,5,3,-3,-6,-10,-7,-3,-1,-8,8,6,4,9,-10,-8,8,-10,3,4,2,-10,-4,5,-7,10,10,5,5,8,3], dtype = "int8")#candidate|3532|(90,)|const|int8
call_3530 = relay.TupleGetItem(func_2523_call(relay.reshape(var_3531.astype('int8'), []), relay.reshape(const_3532.astype('int8'), [2, 3, 15]), ), 0)
call_3533 = relay.TupleGetItem(func_2526_call(relay.reshape(var_3531.astype('int8'), []), relay.reshape(const_3532.astype('int8'), [2, 3, 15]), ), 0)
output = relay.Tuple([uop_3527,call_3530,var_3531,const_3532,])
output2 = relay.Tuple([uop_3527,call_3533,var_3531,const_3532,])
func_3534 = relay.Function([var_3531,], output)
mod['func_3534'] = func_3534
mod = relay.transform.InferType()(mod)
var_3535 = relay.var("var_3535", dtype = "int8", shape = ())#candidate|3535|()|var|int8
output = func_3534(var_3535)
func_3536 = relay.Function([var_3535], output)
mutated_mod['func_3536'] = func_3536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3541 = relay.var("var_3541", dtype = "float64", shape = (9, 11, 12))#candidate|3541|(9, 11, 12)|var|float64
uop_3542 = relay.sqrt(var_3541.astype('float64')) # shape=(9, 11, 12)
output = relay.Tuple([uop_3542,])
output2 = relay.Tuple([uop_3542,])
func_3553 = relay.Function([var_3541,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
mutated_mod['func_3553'] = func_3553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3554 = relay.var("var_3554", dtype = "float64", shape = (9, 11, 12))#candidate|3554|(9, 11, 12)|var|float64
func_3553_call = mutated_mod.get_global_var('func_3553')
call_3555 = func_3553_call(var_3554)
output = call_3555
func_3556 = relay.Function([var_3554], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3975 = relay.var("var_3975", dtype = "float32", shape = (5, 12, 2))#candidate|3975|(5, 12, 2)|var|float32
uop_3976 = relay.acos(var_3975.astype('float32')) # shape=(5, 12, 2)
output = relay.Tuple([uop_3976,])
output2 = relay.Tuple([uop_3976,])
func_3984 = relay.Function([var_3975,], output)
mod['func_3984'] = func_3984
mod = relay.transform.InferType()(mod)
var_3985 = relay.var("var_3985", dtype = "float32", shape = (5, 12, 2))#candidate|3985|(5, 12, 2)|var|float32
output = func_3984(var_3985)
func_3986 = relay.Function([var_3985], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4126 = relay.var("var_4126", dtype = "float32", shape = (13, 9, 12))#candidate|4126|(13, 9, 12)|var|float32
var_4127 = relay.var("var_4127", dtype = "float32", shape = (13, 9, 12))#candidate|4127|(13, 9, 12)|var|float32
bop_4128 = relay.mod(var_4126.astype('float32'), relay.reshape(var_4127.astype('float32'), relay.shape_of(var_4126))) # shape=(13, 9, 12)
uop_4136 = relay.atan(var_4127.astype('float64')) # shape=(13, 9, 12)
output = relay.Tuple([bop_4128,uop_4136,])
output2 = relay.Tuple([bop_4128,uop_4136,])
func_4169 = relay.Function([var_4126,var_4127,], output)
mod['func_4169'] = func_4169
mod = relay.transform.InferType()(mod)
var_4170 = relay.var("var_4170", dtype = "float32", shape = (13, 9, 12))#candidate|4170|(13, 9, 12)|var|float32
var_4171 = relay.var("var_4171", dtype = "float32", shape = (13, 9, 12))#candidate|4171|(13, 9, 12)|var|float32
output = func_4169(var_4170,var_4171,)
func_4172 = relay.Function([var_4170,var_4171,], output)
mutated_mod['func_4172'] = func_4172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4323 = relay.var("var_4323", dtype = "float32", shape = (4, 10, 11))#candidate|4323|(4, 10, 11)|var|float32
uop_4324 = relay.log10(var_4323.astype('float32')) # shape=(4, 10, 11)
uop_4328 = relay.tan(uop_4324.astype('float64')) # shape=(4, 10, 11)
output = uop_4328
output2 = uop_4328
func_4332 = relay.Function([var_4323,], output)
mod['func_4332'] = func_4332
mod = relay.transform.InferType()(mod)
var_4333 = relay.var("var_4333", dtype = "float32", shape = (4, 10, 11))#candidate|4333|(4, 10, 11)|var|float32
output = func_4332(var_4333)
func_4334 = relay.Function([var_4333], output)
mutated_mod['func_4334'] = func_4334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4833 = relay.var("var_4833", dtype = "uint64", shape = (16, 1, 1))#candidate|4833|(16, 1, 1)|var|uint64
var_4834 = relay.var("var_4834", dtype = "uint64", shape = (16, 7, 4))#candidate|4834|(16, 7, 4)|var|uint64
bop_4835 = relay.maximum(var_4833.astype('uint64'), var_4834.astype('uint64')) # shape=(16, 7, 4)
output = relay.Tuple([bop_4835,])
output2 = relay.Tuple([bop_4835,])
func_4842 = relay.Function([var_4833,var_4834,], output)
mod['func_4842'] = func_4842
mod = relay.transform.InferType()(mod)
var_4843 = relay.var("var_4843", dtype = "uint64", shape = (16, 1, 1))#candidate|4843|(16, 1, 1)|var|uint64
var_4844 = relay.var("var_4844", dtype = "uint64", shape = (16, 7, 4))#candidate|4844|(16, 7, 4)|var|uint64
output = func_4842(var_4843,var_4844,)
func_4845 = relay.Function([var_4843,var_4844,], output)
mutated_mod['func_4845'] = func_4845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5233 = relay.var("var_5233", dtype = "uint64", shape = (10, 3, 8))#candidate|5233|(10, 3, 8)|var|uint64
var_5234 = relay.var("var_5234", dtype = "uint64", shape = (10, 3, 8))#candidate|5234|(10, 3, 8)|var|uint64
bop_5235 = relay.less_equal(var_5233.astype('bool'), relay.reshape(var_5234.astype('bool'), relay.shape_of(var_5233))) # shape=(10, 3, 8)
output = bop_5235
output2 = bop_5235
func_5248 = relay.Function([var_5233,var_5234,], output)
mod['func_5248'] = func_5248
mod = relay.transform.InferType()(mod)
var_5249 = relay.var("var_5249", dtype = "uint64", shape = (10, 3, 8))#candidate|5249|(10, 3, 8)|var|uint64
var_5250 = relay.var("var_5250", dtype = "uint64", shape = (10, 3, 8))#candidate|5250|(10, 3, 8)|var|uint64
output = func_5248(var_5249,var_5250,)
func_5251 = relay.Function([var_5249,var_5250,], output)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5636 = relay.var("var_5636", dtype = "float64", shape = (15, 9, 13))#candidate|5636|(15, 9, 13)|var|float64
uop_5637 = relay.asinh(var_5636.astype('float64')) # shape=(15, 9, 13)
output = relay.Tuple([uop_5637,])
output2 = relay.Tuple([uop_5637,])
func_5643 = relay.Function([var_5636,], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5644 = relay.var("var_5644", dtype = "float64", shape = (15, 9, 13))#candidate|5644|(15, 9, 13)|var|float64
func_5643_call = mutated_mod.get_global_var('func_5643')
call_5645 = func_5643_call(var_5644)
output = call_5645
func_5646 = relay.Function([var_5644], output)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5779 = relay.var("var_5779", dtype = "float64", shape = (7, 15, 14))#candidate|5779|(7, 15, 14)|var|float64
uop_5780 = relay.cos(var_5779.astype('float64')) # shape=(7, 15, 14)
func_480_call = mod.get_global_var('func_480')
func_482_call = mutated_mod.get_global_var('func_482')
var_5783 = relay.var("var_5783", dtype = "float32", shape = (65,))#candidate|5783|(65,)|var|float32
call_5782 = relay.TupleGetItem(func_480_call(relay.reshape(var_5783.astype('float32'), [1, 13, 5])), 0)
call_5784 = relay.TupleGetItem(func_482_call(relay.reshape(var_5783.astype('float32'), [1, 13, 5])), 0)
func_3056_call = mod.get_global_var('func_3056')
func_3063_call = mutated_mod.get_global_var('func_3063')
var_5801 = relay.var("var_5801", dtype = "int16", shape = (8, 70))#candidate|5801|(8, 70)|var|int16
var_5802 = relay.var("var_5802", dtype = "int64", shape = (525,))#candidate|5802|(525,)|var|int64
const_5803 = relay.const([-6,-6,7,6,2,4,10,3,-2,3,-6,-4,-1,-3,10,4,10,-4,7,9,-9,-9,6,10,-9,-4,5,7,-4,5,-2,-10,3,1,6,-9,2,-4,2,-8,9,7,-4,4,-5,-2,9,1,-7,-2,-2,-10,9,-5,-9,5,7,-4,6,-8,8,-8,-1,-1,-1,3,-5,10,-6,8,-7,5,-5,-4,-6,4,2,3,10,4,-8,-7,-10,7,-1,1,-10,-4,5,5,-4,-7,10,-2,5,-4,-2,4,-9,6,-7,-9,-5,-1,-5,-4,-7,5,-3,10,10,-9,-8,-4,7,4,-9,1,8,-4,2,9,-9,9,-1,7,6,6,10,-8,10,-1,4,2,-5,4,4,-7,10,-4,6,2,7,3,-6,4,-2,6,6,2,4,-1,1,-1,5,-10,7,2,-10,1,7,-3,-10,-8,6,-10,-4,-1,10,-6,9,7,-9,-2,-5,4,-8,-2,5,5,-8,6,-5,-8,10,9,9,-7,-6,-7,4,4,10,2,-5,-1,-1,8,-3,-2,-10,4,8,10,-2,6,10,-8,7,-8,-7,7,5,6,2,10,-9,-5,-8,1,-4,6,7,6,5,6,4,-2,9,-4,-5,6,9,-1,6,6,8,-4,7,-7], dtype = "int16")#candidate|5803|(240,)|const|int16
call_5800 = relay.TupleGetItem(func_3056_call(relay.reshape(var_5801.astype('int16'), [10, 8, 7]), relay.reshape(var_5801.astype('int16'), [10, 8, 7]), relay.reshape(var_5802.astype('int64'), [525,]), relay.reshape(const_5803.astype('int16'), [240,]), relay.reshape(var_5801.astype('float64'), [10, 8, 7]), ), 9)
call_5804 = relay.TupleGetItem(func_3063_call(relay.reshape(var_5801.astype('int16'), [10, 8, 7]), relay.reshape(var_5801.astype('int16'), [10, 8, 7]), relay.reshape(var_5802.astype('int64'), [525,]), relay.reshape(const_5803.astype('int16'), [240,]), relay.reshape(var_5801.astype('float64'), [10, 8, 7]), ), 9)
output = relay.Tuple([uop_5780,call_5782,var_5783,call_5800,var_5801,var_5802,const_5803,])
output2 = relay.Tuple([uop_5780,call_5784,var_5783,call_5804,var_5801,var_5802,const_5803,])
func_5810 = relay.Function([var_5779,var_5783,var_5801,var_5802,], output)
mod['func_5810'] = func_5810
mod = relay.transform.InferType()(mod)
mutated_mod['func_5810'] = func_5810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5810_call = mutated_mod.get_global_var('func_5810')
var_5812 = relay.var("var_5812", dtype = "float64", shape = (7, 15, 14))#candidate|5812|(7, 15, 14)|var|float64
var_5813 = relay.var("var_5813", dtype = "float32", shape = (65,))#candidate|5813|(65,)|var|float32
var_5814 = relay.var("var_5814", dtype = "int16", shape = (8, 70))#candidate|5814|(8, 70)|var|int16
var_5815 = relay.var("var_5815", dtype = "int64", shape = (525,))#candidate|5815|(525,)|var|int64
call_5811 = func_5810_call(var_5812,var_5813,var_5814,var_5815,)
output = call_5811
func_5816 = relay.Function([var_5812,var_5813,var_5814,var_5815,], output)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5863 = relay.const([[[-8.985256,-7.375286,-3.347568,-0.765327,8.034401,6.407362,3.591611,-9.397502,0.338599,6.427580,-1.358944],[0.255345,-9.355624,2.358704,2.754925,2.265454,9.851711,-2.521938,-5.496155,8.551654,-9.501926,-4.749860]]], dtype = "float64")#candidate|5863|(1, 2, 11)|const|float64
uop_5864 = relay.asin(const_5863.astype('float64')) # shape=(1, 2, 11)
uop_5867 = relay.log(const_5863.astype('float64')) # shape=(1, 2, 11)
uop_5879 = relay.rsqrt(const_5863.astype('float32')) # shape=(1, 2, 11)
uop_5901 = relay.log10(uop_5879.astype('float64')) # shape=(1, 2, 11)
bop_5936 = relay.not_equal(uop_5901.astype('bool'), relay.reshape(uop_5864.astype('bool'), relay.shape_of(uop_5901))) # shape=(1, 2, 11)
bop_5946 = relay.logical_and(uop_5901.astype('bool'), relay.reshape(uop_5879.astype('bool'), relay.shape_of(uop_5901))) # shape=(1, 2, 11)
uop_5953 = relay.exp(uop_5901.astype('float64')) # shape=(1, 2, 11)
bop_5961 = relay.bitwise_xor(uop_5953.astype('int8'), relay.reshape(bop_5936.astype('int8'), relay.shape_of(uop_5953))) # shape=(1, 2, 11)
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
const_5976 = relay.const([[4.153694,5.082495,4.814889],[3.392037,9.281787,-2.328576],[-8.297381,-4.412008,-1.918168],[-2.381561,-0.651047,-9.221787],[7.375341,8.938099,9.057078],[2.696185,-9.937618,1.815017],[-9.585519,-4.283992,-1.718970],[1.403265,-7.178260,-9.185341],[-3.662082,-2.397006,-8.024339],[5.675203,-2.651981,4.784729],[8.418800,2.695369,3.385702],[7.121570,2.787575,2.047322],[-9.296340,6.412116,1.343632],[-8.799262,-2.251126,-5.658932],[6.717469,9.829271,-4.726607],[3.486798,0.311092,-1.082583],[3.414520,-1.335443,6.829560],[2.393686,-1.506457,-4.887662],[-1.154727,8.998898,9.325277],[7.596856,9.325445,5.936237],[2.361922,3.887253,1.569593],[2.336448,-6.560055,2.583316],[9.952111,6.001580,2.532111],[5.947721,-2.854072,3.132853],[7.761308,3.760469,6.142588],[-5.075544,7.324147,7.684411],[1.064041,-8.298692,-6.193010],[-9.973500,-6.697725,6.230181],[2.052967,7.009500,-6.318442],[-1.248068,9.022277,-3.061146],[-4.358214,2.775601,8.728592],[-1.736764,0.546962,-9.937573],[-0.302274,8.525676,-1.557583],[5.947027,-2.498975,-7.375241],[5.271764,-5.118263,-6.455012],[6.439318,6.096486,-6.094773],[1.459380,-0.135111,6.812441],[-9.862885,4.563389,-9.706870],[-6.439732,8.827520,-1.098757],[6.560419,-4.873001,-7.748171],[3.394647,7.064318,-6.970061],[4.425342,-7.419570,-6.574455],[-7.224129,-6.388454,9.582820],[2.060206,-8.885358,-6.108423],[-5.009027,-1.281880,4.062467],[1.360795,-6.138793,8.612388],[7.635720,-1.348373,-9.946887],[2.380489,8.337845,-8.980429],[2.059950,-5.892746,3.458237],[-6.297207,2.396473,-2.297438],[-7.364221,5.209178,6.428295],[3.136580,6.255267,-2.560377],[1.259171,-4.053942,8.851808],[2.687618,-0.252236,-9.185034],[-8.447601,-0.728326,6.014107],[-3.675998,-3.677744,-3.559649],[-1.909600,-5.208334,5.945618],[-6.791191,7.461783,5.938203],[1.794884,9.789414,2.214067],[2.130641,-4.875013,8.235941],[3.127666,5.008006,0.233096],[1.487746,-5.929794,7.424408],[-6.247748,-6.572869,-8.968417],[2.052643,-2.740723,8.876586],[-6.998671,2.096484,-2.787645],[7.889689,-0.722659,-8.592187],[-8.215918,1.724270,5.018286],[6.845971,-3.122892,5.239797],[0.057709,3.473466,6.038775],[1.877468,5.686228,8.278460],[5.346774,9.558211,6.076731],[2.576645,5.699227,-4.573866],[0.134849,7.223829,2.450961],[-8.166873,9.747294,-8.066882],[6.982626,-2.031025,-5.118945],[-2.725994,-0.027739,1.534175],[4.993748,-3.117452,-0.444480],[-8.566973,-7.633046,2.556420],[-9.964729,-1.675846,7.713041],[8.556995,6.513964,-6.797980],[3.073714,3.519100,-5.003315],[9.803235,-6.084334,6.847418],[1.931846,-2.380728,6.288149],[3.990745,-2.469814,0.509479],[5.539888,-3.197723,-3.542380],[-4.497591,0.090635,-5.445338],[3.222864,-2.411180,8.956839],[-8.428595,6.343309,-2.396271],[-3.317235,-7.563543,4.042979],[8.660242,-1.328827,2.415910],[-5.163165,-9.154501,-9.046621],[4.618885,4.312283,6.651460],[2.864448,5.836869,-2.728708],[2.854706,3.043947,4.752408],[0.705597,2.174323,-4.534476],[8.969347,9.097444,9.530165],[-7.627020,1.846291,-7.714948],[-2.605104,-5.010074,-0.409587],[8.194370,5.407437,9.982488],[4.521691,9.482626,0.211063],[-8.164848,-4.618384,-7.785121],[1.830277,0.981518,-2.645163],[4.502638,1.337352,-4.973021],[-3.267064,-6.436239,8.382203],[4.636647,-4.131320,9.297290],[-1.596733,-9.798093,8.807993],[-4.896288,0.537557,7.280923],[3.577779,-2.704816,-0.528107],[-4.851478,-5.657702,7.049674],[2.114929,2.096154,3.885057],[7.587684,-3.022760,9.227845],[-5.520623,-9.301642,3.463982],[-3.916103,-6.950932,5.096393],[8.593413,6.713348,-4.112094],[1.568093,0.054490,-8.900199],[-9.565783,9.758801,0.057691],[-1.413979,-9.114678,-7.704760],[4.594801,1.046252,2.464096],[-7.917064,-4.565517,1.915105],[-7.314583,-6.111377,2.644151],[5.292597,-5.473039,-6.201484],[6.635425,-4.894119,4.860068],[8.986728,9.142532,-9.924359],[5.535579,9.115130,-0.313345],[2.379275,-5.782384,5.586021],[-1.230984,5.235719,9.514052],[-9.589311,-3.708919,-9.933080],[4.396755,-1.393563,-0.901199],[-2.524342,-8.814623,-6.189407],[-5.999617,8.541527,4.812309],[-0.228509,1.619828,4.424638],[5.164351,0.587453,-3.161076],[3.576165,9.071004,-0.888351],[-5.537966,-2.576557,-6.814718],[0.229288,-6.643252,8.808618],[7.566991,4.065195,3.768729],[5.339869,-3.943053,7.162759],[4.975739,2.011418,-4.146065],[-9.776933,-5.457685,2.415331],[6.216413,7.978120,-8.953982],[-6.335158,-7.251229,-8.961982],[-4.699313,-4.438136,4.895313],[4.714564,-1.372838,1.041996],[-2.767034,1.237479,-5.366401],[3.527562,0.040425,8.975506],[-1.364147,-4.135988,7.880010],[-0.425112,-4.612830,8.258809],[-1.996513,-2.373988,1.118970],[-7.693887,-1.147719,-2.432304],[-9.671065,-3.817741,-3.477974],[1.128017,0.887727,9.365324],[7.493010,-7.527160,-9.358252],[1.430769,-9.519328,2.171089],[9.561841,0.982020,4.396144],[4.992451,-8.410550,6.567193],[3.580482,7.026372,-3.276794],[-1.112210,-8.861177,-4.592090],[-1.401415,-6.298364,1.971892],[-0.193246,9.872103,-8.074126],[1.247121,-2.903768,-1.436750],[-5.702767,3.998654,-9.991244],[-8.219869,6.746579,-7.353095],[7.006771,2.542914,9.124224],[2.670173,5.936912,-1.602469],[8.395754,3.889271,4.977643],[2.828794,-8.159589,5.241440],[6.377537,0.701677,-6.040212],[-4.104394,-5.644471,9.606616],[-9.606150,9.321942,9.231316],[-4.071305,5.077195,9.069683],[0.264059,-0.669927,5.444428],[-4.172225,7.206875,2.243787],[8.481664,0.569365,6.676832],[-5.769761,0.535065,7.431988],[7.110835,0.089342,-3.009329],[5.503382,6.075419,4.305541],[3.564648,5.376778,0.939257],[-2.701088,-8.144359,-2.937681],[8.517031,-7.180117,-6.644040],[6.839133,3.745231,-2.308078],[5.238914,0.274390,1.890394],[2.210167,-3.298476,0.723608],[0.496866,1.400235,5.387547],[5.049385,-4.165410,5.300026],[-7.543986,-0.609225,3.146576],[5.493480,-0.144813,1.687362],[8.790179,-0.020928,-5.015429],[5.236584,5.921783,3.266301],[-3.500804,8.956646,-3.423232],[4.925188,-3.775443,-8.335127],[-8.279176,-9.052688,-7.505338],[-3.725917,5.529898,-3.275868],[-9.416005,7.819877,-2.468777],[-1.134058,-8.482056,6.622042],[-7.823078,1.838267,-8.514173],[-4.310431,1.185901,1.494421],[-8.685914,2.972306,-3.957389],[7.254496,9.904128,-9.078209],[-2.771624,-0.001966,1.459850],[9.688454,-6.036704,-4.779744],[3.626833,2.746289,6.011831],[-6.084055,-7.661774,1.318518],[4.671821,9.883968,-7.225707],[-3.054826,-8.029464,2.780970],[-2.172233,5.609345,9.965358],[6.640713,-4.116435,7.014198],[2.173659,1.213136,2.142919],[-1.111397,-6.472889,8.135575],[-9.917994,1.769573,-9.769973],[-8.487152,5.037721,3.971856],[7.430821,1.895990,7.603507],[1.688773,5.707705,-4.270373],[-0.926450,4.968060,-6.638875],[3.418004,4.812811,9.848789],[5.338036,-0.821567,6.203504],[0.011574,1.136597,-2.733165],[6.117603,7.674005,-3.799096],[8.489664,9.504452,1.318344],[4.828708,-0.551847,6.267054],[-8.744275,6.847685,-7.307072],[-2.195259,7.617042,-5.189390],[-9.799652,9.356572,-3.388062],[6.690363,-3.380822,4.131375],[-6.930680,-5.966056,3.963660],[-8.164779,-6.513961,-6.601476],[-0.012992,-3.390999,-6.579244],[3.926380,-7.758532,0.412666],[-5.671850,-3.341227,2.252871],[1.412692,-7.892966,-9.839440],[9.665681,7.522195,-0.919162],[-5.484391,-8.093009,-9.866651],[-5.699303,4.272261,-1.970927],[4.206939,8.024033,-1.581050],[0.018384,-8.296195,9.407692],[1.732276,9.687521,9.466555],[4.951665,-4.004183,-6.627541],[-9.817585,-7.647627,-4.069627],[-1.071982,-7.877612,8.410133],[-2.048539,-8.478677,2.703802],[7.375321,-5.471138,0.887985],[-6.288664,-2.839178,6.510772],[2.777207,5.117408,7.419536],[6.398507,5.404648,-1.587048],[-5.724610,-0.349366,9.322179],[-9.711575,-5.801807,-6.558571],[-8.015556,-4.958698,3.541455],[-1.682772,-2.800922,9.667712],[1.070013,4.165961,-6.854432],[9.157227,6.297505,2.660678],[7.363003,4.040665,-8.750403],[-8.082077,1.230191,3.290173],[-1.434489,8.004931,0.066637],[-1.202252,1.966359,-1.379119],[8.069516,-4.827549,5.133626],[-6.769061,-2.736619,-8.785440],[6.271731,3.363567,-8.937900],[0.135540,-0.727916,1.030797],[5.294357,-4.106112,6.464050],[-4.101591,1.348793,4.171168],[-8.573506,8.532206,-4.389267],[-2.704181,-7.177520,-5.789248],[-8.956198,5.272002,-3.177949],[0.403319,5.584206,6.402659],[-4.510494,2.239066,-2.129217],[-9.548782,-9.652735,1.622796],[2.975773,-1.277478,-6.318662],[-9.284753,8.717323,7.705325],[-1.997093,8.187390,8.529665],[8.353021,9.496645,1.934125],[9.950724,-1.443892,8.051111],[-8.631726,8.286460,6.155716],[6.581908,5.136050,5.382004],[0.990841,9.819669,0.705441],[2.504014,-4.870749,-7.225573],[-7.682268,0.361006,8.583552],[0.498397,0.703046,1.314609],[-5.900151,1.147409,7.678633],[-2.430720,-4.408848,0.867900],[-0.488421,-2.085527,4.938646],[-6.371608,7.491440,9.243012],[4.569631,-7.666797,4.351287],[4.119222,2.356577,4.310893],[6.411393,0.836925,3.661280],[-0.533383,0.693153,-5.636701],[3.684153,-8.185578,-9.535188],[5.500940,-1.072193,0.427749],[2.753492,3.721159,8.176638],[1.196638,2.332276,-0.692379],[-8.631890,-1.387140,-8.198997],[-0.360732,-9.566586,-8.685383],[-6.018737,-7.859535,5.548914],[7.491906,-1.379180,9.655908],[7.998746,-4.216283,7.574030],[-6.972456,9.889144,2.618375],[1.074984,2.679533,8.789962],[8.579161,-0.245215,-7.180720],[5.463682,-0.475182,7.517079],[0.293082,8.870992,7.251199],[-2.982582,-9.037430,-6.202006],[6.657039,7.196926,7.203659],[-7.823207,1.168188,-7.481827],[9.405728,7.393347,6.069121],[7.338283,7.144343,5.260738],[-7.876054,-1.501569,1.302879],[-0.662075,8.621560,-0.611205],[-5.808077,5.705529,7.920795],[-2.917373,2.129295,-8.181832],[-4.939513,9.053697,-8.194496],[-7.676005,-9.304628,1.128606],[6.709996,8.076314,-4.299071],[-5.831678,-9.076368,-6.180194],[9.124318,-9.237057,-4.824164],[-7.251849,6.318539,-9.857406],[-5.409740,-8.916970,-4.226670],[-0.310859,6.072916,-0.543537],[9.833891,3.269551,-9.410192],[2.329439,-6.136629,-1.589646],[5.628009,3.298500,-0.397316],[-1.728816,-8.990799,6.233406],[5.383016,-4.597188,5.189713],[-2.084790,3.412281,6.789206],[9.510354,-9.353499,-1.579256],[-1.139628,8.270236,-2.248804],[7.290217,-7.949514,2.819049],[-7.582020,2.437579,-5.268638],[4.141927,-6.151797,-9.627428],[-1.481412,-6.814595,0.358383],[6.777348,-7.969007,3.436944],[-7.902220,-9.545761,-4.393969],[9.840759,-8.929807,1.956502],[5.647505,8.800489,-8.073989],[6.030395,8.489909,7.949840],[4.744898,-1.554926,0.355436],[-1.171854,-0.927370,-0.717784],[9.964754,-1.336725,-5.044364],[-6.377693,-8.317661,9.856246],[6.606747,-2.863353,1.069503],[7.788527,-7.960783,-3.004180],[5.577019,-2.795738,2.108205],[-9.097033,-6.918835,-0.767854],[-7.543647,-7.578012,-8.588937],[8.507990,0.608782,-0.706741],[9.659665,5.657616,9.918932],[1.017783,-7.464828,8.747437],[-2.348992,-6.963465,-7.031095],[-8.590901,0.134814,5.359601],[-0.905483,8.743351,-8.629993],[-3.182704,9.234749,-5.446400],[-4.655684,4.472244,1.360824],[-4.043302,-2.143367,-2.097978],[-8.439710,-5.948286,1.093308],[7.518400,-6.952745,1.642243],[1.525833,2.856379,7.799425],[4.197183,8.179309,3.014538],[4.309086,1.750025,-5.945922],[-9.901909,-4.661580,0.563898],[4.941808,8.551783,6.127230],[-2.398700,5.256845,-3.931560],[7.670088,-0.259630,-7.013502],[0.774046,5.310453,-1.756233],[-7.629500,-5.315181,9.821879],[4.894918,3.810093,-3.104485],[5.097834,9.409531,-6.805366],[-5.864011,0.459704,4.200559],[-3.410419,-9.399292,1.119048],[0.645082,1.570764,-1.898847],[1.628585,9.701927,-3.253040],[-4.539819,5.685549,-2.649793],[8.095966,2.587613,7.280221],[-5.000706,-6.288570,-1.565828],[4.859738,6.833683,9.956222],[2.212000,4.537584,9.751517],[8.896769,-9.696611,9.673244],[-4.998329,9.500767,-7.979815],[-9.056780,-2.093337,5.362114],[-3.092090,-3.881804,1.093186],[8.404347,6.704376,-7.759380],[8.793539,-9.216319,-3.089838],[-9.778711,-6.089353,-5.870721],[4.083947,9.149268,6.539758],[-4.730498,-1.870966,-0.082785],[-1.636744,-3.552430,-9.477432],[0.555029,-0.259423,0.566115],[1.562832,-6.128299,4.792538],[-3.680689,4.796155,-8.971044],[-5.346858,9.238915,-5.130254],[6.790116,9.525364,-4.352901],[-1.851087,8.620810,3.384109],[2.772583,6.734119,-5.393604],[-7.240664,3.852988,-2.367183],[6.465580,-7.506389,8.165731],[-1.673291,9.218146,5.774400],[1.435873,8.169481,-3.775785],[-4.978837,-1.912596,9.877717],[-3.175211,3.551228,-2.374539],[-1.392682,8.956607,-5.424165],[1.038837,9.699535,-1.135602],[-0.347669,-4.398851,0.465199],[-1.062703,-2.129597,3.926448],[2.443616,4.279448,1.947722],[-7.435269,7.127541,-0.283879],[0.931911,-6.472792,-8.114402],[1.579910,4.550704,2.098592],[-3.574467,-0.502927,-7.637608],[7.704100,5.684466,-9.697341],[-8.028208,-7.872452,-6.610622],[2.251079,-3.192416,-0.546722],[-5.599731,7.001654,4.007606],[-9.783997,-9.311317,-4.961164],[-0.444274,-7.782118,3.751767],[-3.715913,-4.787217,8.879963],[6.185658,-0.931439,6.398261],[7.429400,-8.128895,6.372764],[7.306065,2.802696,-0.586565],[-8.159217,2.644195,-9.110815],[2.678935,-6.723744,-7.649196],[3.600026,-6.523172,3.600050],[-6.938290,-9.394312,-7.223056],[0.639580,8.797192,3.499361],[-1.365585,8.738164,4.888850],[-2.443767,-3.135609,-7.681487],[0.501021,8.812853,1.016242],[2.419895,0.244308,-2.614554],[3.775977,6.690620,-8.512402],[-0.312320,-1.799788,9.794998],[7.631283,-5.785476,-7.471902],[-8.296701,-1.592643,-2.666712],[9.738899,-4.274409,3.492629],[-2.016188,-9.953788,6.933892],[-3.119463,0.447042,6.150865],[-0.245780,8.608459,4.713968],[7.038438,5.965645,9.537736],[9.659697,0.782782,8.043911],[-6.701050,0.997329,4.587331],[-5.848917,-5.097703,-1.803355],[-0.076916,-7.297895,2.646318],[0.699547,-1.638281,8.438501],[-7.151162,-1.669199,-2.061265],[-0.914823,7.863131,5.160402],[1.108259,-6.609586,8.268847],[2.835666,-9.168810,0.461210],[5.790043,-1.076837,1.414045],[6.866866,0.681684,6.225298],[7.790002,-3.939826,1.584988],[7.215962,9.053294,-4.796819],[-1.449717,-9.435674,-1.895151],[9.829681,7.990552,0.225431],[4.531790,-7.299539,-1.483945],[-6.833914,-9.621981,-1.042551],[-5.534619,-7.484372,4.388797],[-0.376490,-2.900340,-2.151780],[8.821949,7.752004,-2.392385],[2.282403,9.917407,-6.498332],[-2.311955,-1.519907,1.758065],[-0.345362,-6.983273,-9.268682],[-1.000651,-4.975619,1.954851],[2.666482,-3.610601,3.393489],[7.324670,-9.700694,3.091463],[-2.557536,7.228748,-4.350089],[9.870256,-3.920405,6.389101],[8.935376,1.450599,-1.199352],[8.197883,7.500184,-5.539277],[-4.083157,-8.564045,1.288466],[5.800905,2.190049,-2.426368],[9.958454,-9.149446,6.612688],[-5.771319,3.207690,-0.376534],[2.892381,1.214446,6.283729],[1.881230,4.406432,-7.667498],[2.846314,-1.648258,-3.247448],[-6.876221,-7.532046,7.116372],[-6.851186,5.585010,-3.023600],[-4.981337,0.423943,-1.025017],[8.344544,-2.978390,3.511123],[7.692714,-6.442919,8.050818],[-7.484074,-6.518632,7.776402],[5.424096,-4.504052,3.553066],[-0.348394,-0.045068,-3.656023],[6.763647,-0.582702,-9.413888],[-8.181408,2.254819,-8.258511],[-3.714750,-0.794161,9.055168],[-1.193346,-1.728483,3.010109],[4.139584,6.143005,5.850769],[3.010593,9.932255,-4.968903],[5.536036,-1.325052,0.787192],[-3.246079,6.790252,9.273648],[-6.681364,5.125102,-9.614878],[-5.324399,5.089256,8.053265],[1.626694,8.588173,-9.595318],[7.996862,-4.809559,-6.219112],[-9.040788,5.587151,-1.384732],[-0.035913,6.226639,9.626823],[7.975519,4.016568,6.684328],[9.283942,7.587920,9.260739],[0.813115,-8.070230,-7.262263],[6.250243,7.536279,0.162522],[7.034550,-7.176253,4.259245],[-0.209336,9.801248,4.722760],[-0.098348,-2.072553,8.993225],[-9.857642,-3.865285,8.797498],[8.746279,4.460398,7.415664],[-0.737836,-4.542534,0.054235],[-0.600182,-8.063581,-2.252352],[-4.347824,5.902840,-9.998537],[7.983021,1.057776,5.712955],[-8.452751,5.635268,5.925475],[-2.059853,-5.750953,-8.133356],[4.495792,0.544058,7.644547],[4.878064,3.389866,-5.634816],[-6.811822,-7.917998,6.108953],[-6.522131,-8.490206,4.210145],[-1.056525,-8.187132,-3.914701],[0.790210,4.212083,-2.065894],[-9.448324,2.048965,-8.512529],[0.063441,2.122567,-6.319779],[-1.938382,-5.398659,-1.606903],[-9.436789,-5.935803,3.401654],[-0.568404,-8.262639,-4.947056],[-9.586453,-3.577659,-2.335505],[7.461374,4.338534,5.314662],[2.548448,-1.316937,-3.619431],[9.703084,-8.499565,7.899777],[-9.129251,-6.305111,-5.464362],[8.228251,5.232796,-1.967605],[-5.694602,0.920308,-2.624794],[4.992869,-3.397802,6.494790],[6.871243,-2.373496,-0.883745],[0.069047,6.683838,0.884826],[-0.412199,-9.304756,2.853288],[5.624439,-3.998827,6.575993],[5.173853,-3.527939,7.966581],[0.894877,-1.637991,-4.592695],[5.295531,9.584433,4.799379],[-7.925249,-0.021470,7.434212],[0.192300,5.346091,7.181644],[-4.039489,-6.055253,9.337502],[9.317864,-9.548416,-2.019355],[-2.713294,-7.537587,-4.355199],[7.292827,-7.150799,0.947779],[2.896816,-4.242853,-7.890586],[2.908299,4.916336,3.163237],[4.907331,5.133115,-6.408153],[-5.135869,8.302844,-3.887731],[-4.985786,1.176802,7.273944],[-4.559989,8.015109,-1.350188],[2.523298,1.842827,2.026864],[8.745412,3.186980,-2.450015],[-0.195331,-7.791974,3.101016],[9.835410,-2.326108,-9.233489],[6.488093,-4.999564,-3.807248],[-3.144757,5.120051,-5.665274],[-4.342363,6.427421,-2.115301],[0.923690,8.882314,-4.934322],[-9.808879,-2.909363,-4.488097],[1.014542,-3.882282,3.696185],[-0.619460,-0.314136,2.694019],[-5.430755,-9.287058,6.203180],[6.848161,5.532768,-6.139283],[1.089912,8.976021,-2.634436],[8.096089,5.071402,1.415784],[-8.775680,-9.743678,3.566779],[9.586024,1.832547,-7.938531],[-5.849577,0.021841,-6.470301],[6.781378,-1.893131,8.747543],[1.242343,-2.024085,-8.673488],[7.981094,0.657839,8.308317],[6.467179,-8.512114,-1.578316],[1.368788,-6.119784,-5.211676],[-9.138767,8.615487,-3.080772],[2.871273,8.233124,-4.075510],[-8.018491,-5.252504,1.261796],[-4.686546,-2.296931,7.827443],[5.783680,4.146595,4.932794],[-5.745035,9.561149,0.658111],[7.532833,4.410323,-4.256992],[-2.946031,3.677065,2.062890],[2.814431,7.020055,-2.586204],[-9.110973,5.662552,-8.108126],[-3.235537,0.997132,-3.440695],[8.003092,6.552444,-2.354132],[1.807931,-5.959000,9.562298],[6.979579,-3.701075,-4.430628],[-5.547226,-7.821883,-5.996146],[-9.571401,-9.595194,-0.541673],[-3.931202,-4.337912,2.208741],[-9.203866,1.370247,1.685560]], dtype = "float64")#candidate|5976|(585, 3)|const|float64
call_5975 = relay.TupleGetItem(func_5643_call(relay.reshape(const_5976.astype('float64'), [15, 9, 13])), 0)
call_5977 = relay.TupleGetItem(func_5646_call(relay.reshape(const_5976.astype('float64'), [15, 9, 13])), 0)
output = relay.Tuple([uop_5867,bop_5946,bop_5961,call_5975,const_5976,])
output2 = relay.Tuple([uop_5867,bop_5946,bop_5961,call_5977,const_5976,])
func_5989 = relay.Function([], output)
mod['func_5989'] = func_5989
mod = relay.transform.InferType()(mod)
output = func_5989()
func_5990 = relay.Function([], output)
mutated_mod['func_5990'] = func_5990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_6037 = relay.TupleGetItem(func_5989_call(), 2)
call_6038 = relay.TupleGetItem(func_5990_call(), 2)
output = relay.Tuple([call_6037,])
output2 = relay.Tuple([call_6038,])
func_6048 = relay.Function([], output)
mod['func_6048'] = func_6048
mod = relay.transform.InferType()(mod)
mutated_mod['func_6048'] = func_6048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mutated_mod.get_global_var('func_6048')
call_6049 = func_6048_call()
output = call_6049
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6059 = relay.TupleGetItem(func_6048_call(), 0)
call_6060 = relay.TupleGetItem(func_6050_call(), 0)
output = relay.Tuple([call_6059,])
output2 = relay.Tuple([call_6060,])
func_6061 = relay.Function([], output)
mod['func_6061'] = func_6061
mod = relay.transform.InferType()(mod)
output = func_6061()
func_6062 = relay.Function([], output)
mutated_mod['func_6062'] = func_6062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6063 = relay.TupleGetItem(func_6048_call(), 0)
call_6064 = relay.TupleGetItem(func_6050_call(), 0)
var_6065 = relay.var("var_6065", dtype = "int8", shape = (1, 2, 11))#candidate|6065|(1, 2, 11)|var|int8
bop_6066 = relay.add(call_6063.astype('uint8'), relay.reshape(var_6065.astype('uint8'), relay.shape_of(call_6063))) # shape=(1, 2, 11)
bop_6069 = relay.add(call_6064.astype('uint8'), relay.reshape(var_6065.astype('uint8'), relay.shape_of(call_6064))) # shape=(1, 2, 11)
output = relay.Tuple([bop_6066,])
output2 = relay.Tuple([bop_6069,])
func_6078 = relay.Function([var_6065,], output)
mod['func_6078'] = func_6078
mod = relay.transform.InferType()(mod)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6079 = relay.var("var_6079", dtype = "int8", shape = (1, 2, 11))#candidate|6079|(1, 2, 11)|var|int8
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6080 = func_6078_call(var_6079)
output = call_6080
func_6081 = relay.Function([var_6079], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6102 = relay.TupleGetItem(func_6048_call(), 0)
call_6103 = relay.TupleGetItem(func_6050_call(), 0)
output = call_6102
output2 = call_6103
func_6105 = relay.Function([], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6106 = func_6105_call()
output = call_6106
func_6107 = relay.Function([], output)
mutated_mod['func_6107'] = func_6107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mod.get_global_var('func_6105')
func_6107_call = mutated_mod.get_global_var('func_6107')
call_6117 = func_6105_call()
call_6118 = func_6105_call()
output = relay.Tuple([call_6117,])
output2 = relay.Tuple([call_6118,])
func_6124 = relay.Function([], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mutated_mod.get_global_var('func_6124')
call_6125 = func_6124_call()
output = call_6125
func_6126 = relay.Function([], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_6222 = relay.TupleGetItem(func_6124_call(), 0)
call_6223 = relay.TupleGetItem(func_6126_call(), 0)
output = relay.Tuple([call_6222,])
output2 = relay.Tuple([call_6223,])
func_6224 = relay.Function([], output)
mod['func_6224'] = func_6224
mod = relay.transform.InferType()(mod)
mutated_mod['func_6224'] = func_6224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mutated_mod.get_global_var('func_6224')
call_6225 = func_6224_call()
output = call_6225
func_6226 = relay.Function([], output)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6226_call = mutated_mod.get_global_var('func_6226')
call_6241 = relay.TupleGetItem(func_6224_call(), 0)
call_6242 = relay.TupleGetItem(func_6226_call(), 0)
output = call_6241
output2 = call_6242
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
call_6246 = func_6245_call()
output = call_6246
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mod.get_global_var('func_6061')
func_6062_call = mutated_mod.get_global_var('func_6062')
call_6261 = relay.TupleGetItem(func_6061_call(), 0)
call_6262 = relay.TupleGetItem(func_6062_call(), 0)
func_3984_call = mod.get_global_var('func_3984')
func_3986_call = mutated_mod.get_global_var('func_3986')
var_6264 = relay.var("var_6264", dtype = "float32", shape = (120,))#candidate|6264|(120,)|var|float32
call_6263 = relay.TupleGetItem(func_3984_call(relay.reshape(var_6264.astype('float32'), [5, 12, 2])), 0)
call_6265 = relay.TupleGetItem(func_3986_call(relay.reshape(var_6264.astype('float32'), [5, 12, 2])), 0)
output = relay.Tuple([call_6261,call_6263,var_6264,])
output2 = relay.Tuple([call_6262,call_6265,var_6264,])
func_6271 = relay.Function([var_6264,], output)
mod['func_6271'] = func_6271
mod = relay.transform.InferType()(mod)
var_6272 = relay.var("var_6272", dtype = "float32", shape = (120,))#candidate|6272|(120,)|var|float32
output = func_6271(var_6272)
func_6273 = relay.Function([var_6272], output)
mutated_mod['func_6273'] = func_6273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_6314 = func_6245_call()
call_6315 = func_6245_call()
output = relay.Tuple([call_6314,])
output2 = relay.Tuple([call_6315,])
func_6316 = relay.Function([], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mutated_mod.get_global_var('func_6316')
call_6317 = func_6316_call()
output = call_6317
func_6318 = relay.Function([], output)
mutated_mod['func_6318'] = func_6318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_6337 = relay.TupleGetItem(func_5989_call(), 1)
call_6338 = relay.TupleGetItem(func_5990_call(), 1)
func_2425_call = mod.get_global_var('func_2425')
func_2430_call = mutated_mod.get_global_var('func_2430')
var_6348 = relay.var("var_6348", dtype = "int16", shape = (1456,))#candidate|6348|(1456,)|var|int16
var_6349 = relay.var("var_6349", dtype = "float32", shape = (13, 5))#candidate|6349|(13, 5)|var|float32
call_6347 = relay.TupleGetItem(func_2425_call(relay.reshape(var_6348.astype('int16'), [16, 7, 13]), relay.reshape(var_6348.astype('int16'), [16, 7, 13]), relay.reshape(var_6349.astype('float32'), [13, 5]), ), 1)
call_6350 = relay.TupleGetItem(func_2430_call(relay.reshape(var_6348.astype('int16'), [16, 7, 13]), relay.reshape(var_6348.astype('int16'), [16, 7, 13]), relay.reshape(var_6349.astype('float32'), [13, 5]), ), 1)
output = relay.Tuple([call_6337,call_6347,var_6348,var_6349,])
output2 = relay.Tuple([call_6338,call_6350,var_6348,var_6349,])
func_6353 = relay.Function([var_6348,var_6349,], output)
mod['func_6353'] = func_6353
mod = relay.transform.InferType()(mod)
var_6354 = relay.var("var_6354", dtype = "int16", shape = (1456,))#candidate|6354|(1456,)|var|int16
var_6355 = relay.var("var_6355", dtype = "float32", shape = (13, 5))#candidate|6355|(13, 5)|var|float32
output = func_6353(var_6354,var_6355,)
func_6356 = relay.Function([var_6354,var_6355,], output)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6358 = relay.TupleGetItem(func_6048_call(), 0)
call_6359 = relay.TupleGetItem(func_6050_call(), 0)
uop_6360 = relay.sinh(call_6358.astype('float32')) # shape=(1, 2, 11)
uop_6362 = relay.sinh(call_6359.astype('float32')) # shape=(1, 2, 11)
output = uop_6360
output2 = uop_6362
func_6367 = relay.Function([], output)
mod['func_6367'] = func_6367
mod = relay.transform.InferType()(mod)
output = func_6367()
func_6368 = relay.Function([], output)
mutated_mod['func_6368'] = func_6368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6371 = relay.var("var_6371", dtype = "float64", shape = (11, 8, 9))#candidate|6371|(11, 8, 9)|var|float64
var_6372 = relay.var("var_6372", dtype = "float64", shape = (11, 8, 9))#candidate|6372|(11, 8, 9)|var|float64
bop_6373 = relay.floor_divide(var_6371.astype('float64'), relay.reshape(var_6372.astype('float64'), relay.shape_of(var_6371))) # shape=(11, 8, 9)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
var_6381 = relay.var("var_6381", dtype = "float32", shape = (65,))#candidate|6381|(65,)|var|float32
const_6382 = relay.const([[-8,6,1,2,9,10,10,-2,1,-7,9,6,3,4],[2,1,-4,5,-3,3,-9,-7,8,1,7,6,6,-3],[10,7,9,1,-3,9,5,7,4,4,-5,3,5,-10],[-5,-9,10,8,2,-3,6,-2,-7,-7,-4,4,6,-1],[-1,1,4,1,-6,5,8,2,3,7,4,10,-2,7],[-4,-10,-9,-10,-3,-1,2,6,6,-4,-3,-9,-4,6],[5,-6,2,-5,9,6,-8,10,2,10,5,9,4,6],[6,5,-5,-2,7,10,3,-9,-4,3,-6,-6,-6,10],[2,9,9,-1,5,3,-1,9,8,8,-8,10,3,-4],[2,8,-3,1,-9,8,8,-7,2,-6,5,-6,5,4],[1,-5,-5,6,10,-1,2,4,-9,-10,6,-5,1,1],[-7,-6,-6,-3,5,-8,-7,-3,-8,-10,7,-10,-9,5],[8,6,2,4,-4,-8,6,-4,-7,-3,-6,-2,4,-8],[-8,-3,-1,-2,2,3,-4,-2,9,5,-5,-8,1,5],[-3,8,-8,-10,9,-3,1,-4,-9,7,-6,-5,-9,1],[-5,5,1,-9,-2,9,-2,-10,-2,-8,-5,-10,-5,10],[-8,-4,-1,-10,2,-3,-10,-4,9,-5,-10,-2,10,-6],[5,-1,-10,7,-5,4,-8,-10,3,1,9,3,-3,-6],[6,-7,9,5,4,9,-9,-5,-1,-5,10,-6,-4,-8],[-3,1,8,10,8,5,7,1,10,-3,10,5,4,9],[-2,8,-3,5,-6,7,10,4,-7,-7,1,-7,-8,3],[6,3,-8,3,9,-3,3,-7,-1,2,7,6,-1,-3],[7,-2,-7,-1,7,6,-10,-9,8,-5,8,-8,9,5],[7,9,-1,7,10,-4,-1,-3,1,3,-9,-8,-10,-1],[10,-10,-3,1,4,3,3,10,-10,-5,4,-8,-10,7],[-5,-2,-6,2,-3,-3,-10,-8,-6,8,-1,4,-3,-6],[3,7,-6,4,9,-1,-10,9,3,-4,-6,-4,5,2],[-4,-5,4,6,-8,3,-6,-2,-9,6,-6,2,3,1],[-5,8,-1,-8,-4,8,3,-9,-4,-5,10,6,2,-2],[-3,4,5,-9,4,3,4,-10,-3,-7,-10,9,-6,7],[-2,-4,1,-6,10,3,5,-4,9,7,10,8,-6,1],[-1,-1,-7,-1,5,-7,3,2,7,-6,-7,8,-6,-9],[-3,-6,9,9,-6,-6,-6,-7,2,8,3,-6,8,10],[-10,8,-7,8,-4,2,7,-1,9,-3,-9,-10,4,3],[-10,6,1,-1,-8,2,6,-2,-4,-8,-2,5,4,4],[-1,-2,9,9,3,8,-1,-3,-6,1,-7,2,4,1],[-3,5,-1,3,6,1,3,1,10,2,9,6,6,5],[7,7,-10,-2,-1,10,8,-9,1,-7,-1,8,4,-6],[-4,-10,9,-9,-2,-8,7,-2,-1,7,8,10,-5,-1],[-2,9,10,-7,9,-5,-10,-5,5,1,8,-6,4,-8],[-6,-7,-6,6,-8,-4,-2,7,4,-8,-9,4,9,-6],[8,1,2,4,-2,5,-7,8,-8,3,7,10,2,-5],[-4,3,2,-7,2,4,4,-6,8,2,9,7,-7,-3],[-3,-2,-7,2,-1,-8,10,6,1,7,-6,-7,-4,-2],[-3,10,3,-6,6,-2,7,-9,1,-1,7,-4,-6,-9],[-5,-1,-6,-6,-2,-9,-2,-7,-2,6,-2,-8,6,4],[-4,2,6,10,6,-10,10,-1,4,-1,-4,2,3,-5],[-3,-1,-3,-8,6,-10,-6,5,2,10,3,10,6,3],[1,8,-8,3,-2,10,-1,-2,-1,-2,-2,8,-4,3],[10,3,2,9,10,1,5,10,2,-10,1,-5,-6,10],[-1,4,-7,-7,8,-8,8,-10,3,-6,4,-7,1,1],[6,9,-2,-3,10,7,5,-4,-7,5,-4,2,-8,4],[4,7,7,-9,9,-6,-9,-4,-8,-7,-3,-4,5,7],[-6,5,8,-10,-7,2,9,4,-2,-4,9,5,4,-2]], dtype = "uint64")#candidate|6382|(54, 14)|const|uint64
const_6383 = relay.const([2,-2,3,-8,5,-2,-3,6,2,-10,-8,8,2,5,2,-3,-5,-3,4,-1,-9,9,-7,1,-3,-6,9,-8,-7,-5,5,3,-2,8,8,-9,4,8,3,9,-8,10,-8,-8,-9,5,-10,4,7,-2,-1,1,-8,-7,8,-8,-2,6,7,6,-7,-2,9,3,-9,-10,-7,-8,-2,10,2,8,8,-3,-8,-3,-9,-5,2,-4,-4,-1,-5,-10,5,-7,-7,8,-9,-10,-9,-5,7,-7,-10,8,-5,-7,-10,-7,6,-2,1,8,-1,8,-1,-8,-4,5,-6,-8,-6,3,-1,-2,6,-9,4,-8,8,-4,-10,-7,-7,-6,7,-4,-8,-10,-7,7,-6,2,-8,4,-6,-2,9,1,-2,-9,-3,-6,1,-2,-10,-4,7,-6,-6,-10,-9,1,4,3,10,-6,6,6,8,6,8,6,-5,10,-3,6], dtype = "int8")#candidate|6383|(168,)|const|int8
call_6380 = relay.TupleGetItem(func_1168_call(relay.reshape(var_6381.astype('float32'), [65,]), relay.reshape(const_6382.astype('uint64'), [756,]), relay.reshape(const_6383.astype('int8'), [84, 2]), ), 3)
call_6384 = relay.TupleGetItem(func_1172_call(relay.reshape(var_6381.astype('float32'), [65,]), relay.reshape(const_6382.astype('uint64'), [756,]), relay.reshape(const_6383.astype('int8'), [84, 2]), ), 3)
func_925_call = mod.get_global_var('func_925')
func_931_call = mutated_mod.get_global_var('func_931')
const_6388 = relay.const(-2, dtype = "int8")#candidate|6388|()|const|int8
call_6387 = relay.TupleGetItem(func_925_call(relay.reshape(const_6382.astype('uint64'), [9, 12, 7]), relay.reshape(const_6382.astype('uint64'), [9, 12, 7]), relay.reshape(const_6388.astype('int8'), []), relay.reshape(const_6383.astype('int8'), [168,]), ), 7)
call_6389 = relay.TupleGetItem(func_931_call(relay.reshape(const_6382.astype('uint64'), [9, 12, 7]), relay.reshape(const_6382.astype('uint64'), [9, 12, 7]), relay.reshape(const_6388.astype('int8'), []), relay.reshape(const_6383.astype('int8'), [168,]), ), 7)
uop_6390 = relay.rsqrt(var_6372.astype('float32')) # shape=(11, 8, 9)
output = relay.Tuple([bop_6373,call_6380,var_6381,const_6382,const_6383,call_6387,const_6388,uop_6390,])
output2 = relay.Tuple([bop_6373,call_6384,var_6381,const_6382,const_6383,call_6389,const_6388,uop_6390,])
func_6401 = relay.Function([var_6371,var_6372,var_6381,], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
var_6402 = relay.var("var_6402", dtype = "float64", shape = (11, 8, 9))#candidate|6402|(11, 8, 9)|var|float64
var_6403 = relay.var("var_6403", dtype = "float64", shape = (11, 8, 9))#candidate|6403|(11, 8, 9)|var|float64
var_6404 = relay.var("var_6404", dtype = "float32", shape = (65,))#candidate|6404|(65,)|var|float32
output = func_6401(var_6402,var_6403,var_6404,)
func_6405 = relay.Function([var_6402,var_6403,var_6404,], output)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mod.get_global_var('func_6061')
func_6062_call = mutated_mod.get_global_var('func_6062')
call_6510 = relay.TupleGetItem(func_6061_call(), 0)
call_6511 = relay.TupleGetItem(func_6062_call(), 0)
output = relay.Tuple([call_6510,])
output2 = relay.Tuple([call_6511,])
func_6516 = relay.Function([], output)
mod['func_6516'] = func_6516
mod = relay.transform.InferType()(mod)
output = func_6516()
func_6517 = relay.Function([], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6367_call = mod.get_global_var('func_6367')
func_6368_call = mutated_mod.get_global_var('func_6368')
call_6604 = func_6367_call()
call_6605 = func_6367_call()
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
const_6631 = relay.const([8,-3,-7,10,-9,-3,4,2,3,-3,-6,-9,1,6,-2,1,-4,-10,-7,5,3,-9,-3,-5,6,-5,6,1,-3,-7,7,-5,-2,-4,-7,-7,8,-1,6,-9,4,7,7,-9,6], dtype = "int16")#candidate|6631|(45,)|const|int16
const_6632 = relay.const([[1,5,8,5,-1,6,-9,2,8,8,1,9,-9,-6,3,9,8,3,-7,4,7,3,10,-10,1,-10,-9,-2,-8,-5,2,6,7,-6,10,-4,3,3,-3,2,2,6,-2,2,-1,-2,-10,-1,-10,3,8,-6,-5,4,5,1,1,1,-6,-7,1,-9,10,7,-8,9,-8,-9,-8,-8,-3,2,-6,9,-7,8,6,8,9,5,6,5,2,6,7,3,-2,-5,-10,-10,-1,-5,-8,-4,-8,6,6,9,-5,8,-10,-3,-5,-1,-3,2,-1,-4,9,10,10,5,-7,-1,-1,6,9,-2,-10,-9,-5,-8,5,-7,-1,-4,-3,4,-3,-2,-6,-6,2,9,-2,-4,9,-5,-3,1,-9,4,3,-4,4,3,-6,7,8,9,-6,8,6,-2,-6,-2,9,9,-5,2,-8,-3,5,-4,6,4,-8,-9,-6,3,3,8,-3,-6,1,10,-3,6,3,-1],[-7,2,5,-10,-2,2,-10,9,-9,-2,3,2,4,-1,9,-7,7,4,1,-3,-6,-10,7,-10,6,-9,-5,-2,8,-8,-7,5,-2,-6,-2,-8,5,-5,-9,3,8,-2,-2,1,-10,-8,4,1,-4,-1,-7,5,8,6,-6,3,-10,6,-1,-1,8,8,-7,-7,5,9,8,-3,5,-6,-10,-6,7,-2,9,-9,-5,6,-7,4,3,-5,-9,-1,-10,7,7,-10,-5,3,6,-10,3,6,3,2,-3,-8,7,-9,6,5,-1,-8,-7,-10,-4,-5,-8,-7,-1,6,-7,-8,-6,9,5,5,-1,2,-3,3,5,-4,-7,4,9,-3,6,9,10,-4,-6,-3,-2,-4,-1,4,-5,1,-7,-1,6,-5,7,4,3,-4,-9,-5,4,-5,6,-1,8,-4,-6,3,1,4,-1,-5,8,-3,-6,7,-6,5,4,7,-7,-8,6,-2,-9,-4,7,-5,1,-4],[-4,9,5,-6,-9,10,-3,-6,10,-7,6,-1,5,10,4,2,-8,2,2,-4,-10,-6,3,-4,-2,3,-6,-3,-10,4,-8,6,5,9,5,-2,-8,-9,-2,7,6,4,-4,-1,-9,-10,1,-2,3,8,7,-4,10,-7,8,8,1,6,-6,-2,3,-3,10,-5,-9,5,-4,-10,-4,-7,-8,-6,5,-8,10,8,-4,2,-6,-10,-9,-10,4,5,6,10,-5,5,-10,-2,5,-8,9,-6,4,-2,1,-3,-2,4,-10,-2,-3,-6,-1,5,-6,-4,2,2,6,-8,5,-3,-2,3,-1,9,-3,7,3,10,7,-6,6,3,-3,-10,-4,5,9,-10,-4,-6,-5,-1,-7,10,6,2,-6,-5,-8,7,-7,-8,10,-9,-8,-1,8,-1,-4,-8,7,-4,5,-1,-6,4,3,-2,-3,-7,-5,-4,-10,-9,-8,-5,-7,9,10,-4,10,-10,4,-6,-4,-8]], dtype = "int16")#candidate|6632|(3, 180)|const|int16
call_6630 = func_938_call(relay.reshape(const_6631.astype('int16'), [1, 9, 5]), relay.reshape(const_6632.astype('int16'), [12, 9, 5]), )
call_6633 = func_938_call(relay.reshape(const_6631.astype('int16'), [1, 9, 5]), relay.reshape(const_6632.astype('int16'), [12, 9, 5]), )
output = relay.Tuple([call_6604,call_6630,const_6631,const_6632,])
output2 = relay.Tuple([call_6605,call_6633,const_6631,const_6632,])
func_6657 = relay.Function([], output)
mod['func_6657'] = func_6657
mod = relay.transform.InferType()(mod)
mutated_mod['func_6657'] = func_6657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6657_call = mutated_mod.get_global_var('func_6657')
call_6658 = func_6657_call()
output = call_6658
func_6659 = relay.Function([], output)
mutated_mod['func_6659'] = func_6659
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6676 = relay.var("var_6676", dtype = "bool", shape = (16, 8, 9))#candidate|6676|(16, 8, 9)|var|bool
var_6677 = relay.var("var_6677", dtype = "bool", shape = (16, 8, 9))#candidate|6677|(16, 8, 9)|var|bool
bop_6678 = relay.logical_or(var_6676.astype('bool'), relay.reshape(var_6677.astype('bool'), relay.shape_of(var_6676))) # shape=(16, 8, 9)
func_6516_call = mod.get_global_var('func_6516')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_6683 = relay.TupleGetItem(func_6516_call(), 0)
call_6684 = relay.TupleGetItem(func_6517_call(), 0)
func_3984_call = mod.get_global_var('func_3984')
func_3986_call = mutated_mod.get_global_var('func_3986')
const_6687 = relay.const([-4.984429,1.053469,-9.408701,6.464178,7.528625,-5.804433,2.798574,5.380167,-9.246679,0.101545,-4.714758,8.226105,-5.071848,-6.071688,-7.304767,7.173688,2.795251,-4.368135,-0.226791,8.364713,0.170299,-4.361928,-3.869221,-6.092615,-6.576036,-4.888258,6.106654,-3.105238,6.391635,-8.015433,-5.207930,-9.383721,-7.809194,-5.308449,3.555763,6.449944,2.749412,3.886670,0.751123,-7.244187,3.636921,-0.229458,-3.581345,-3.145703,-9.946081,-6.921944,2.218161,-0.460982,5.693117,-2.529317,-2.482003,-6.722178,-8.770836,9.087726,5.794538,9.480923,-9.350330,4.812233,6.281163,-3.918945,-3.965781,-4.935781,-2.631820,-8.142067,3.862614,-0.002200,-6.064237,4.122754,-1.298087,-4.422771,0.631193,-5.571290,5.702317,-4.884784,-1.079949,-8.025764,4.910926,-4.090209,2.732220,-6.582673,6.929605,-6.134140,7.839485,-8.896675,-5.680545,4.825938,5.030604,-5.124110,2.801871,0.163799,0.130337,5.683618,-7.576878,-8.929857,-6.717288,7.371533,8.036893,0.764928,6.023259,-9.845423,-6.218373,1.279210,-9.466341,-1.387231,5.838926,6.166166,-6.156499,8.801815,-8.749663,-0.800315,-6.853516,-9.647311,-3.682314,-1.562796,-2.483359,6.025770,-7.765430,-9.161847,-6.964809,8.115615], dtype = "float32")#candidate|6687|(120,)|const|float32
call_6686 = relay.TupleGetItem(func_3984_call(relay.reshape(const_6687.astype('float32'), [5, 12, 2])), 0)
call_6688 = relay.TupleGetItem(func_3986_call(relay.reshape(const_6687.astype('float32'), [5, 12, 2])), 0)
func_3342_call = mod.get_global_var('func_3342')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_6691 = relay.const([-5.609407,-5.704695,0.637910,-5.459174,5.497758,-5.487908,-5.027909,1.411493,3.679896,7.671680,-3.867307,4.770870,-3.273546,-7.339638,-7.626881,-6.649476,9.955666,-2.115797,1.342369,-9.391490,-5.188942,5.100820,3.773265,-3.257572,4.290768,0.951498,4.053925,-8.101039,-8.927233,7.459563,0.607447,9.034259,1.777929,5.332266,-0.268127,5.215903,2.753774,-5.236615,-6.259830,0.868888,-7.493460,9.772446,1.152740,3.887822,-8.879758,-7.277348,-2.393941,-3.856344,-8.356005,6.386446,0.746250,0.166803,2.115115,2.752643,-5.012210,-8.541000,-9.524779,-3.102805,0.514274,7.285168,6.475146,-6.904119,4.300864,3.034210,-5.637258,-5.058418,8.651570,-0.759304,0.094755,-4.390160,0.885433,-5.828104,3.657872,3.036048,8.092867,-2.644894,0.630582,-2.012916,-0.739902,-7.739557], dtype = "float64")#candidate|6691|(80,)|const|float64
call_6690 = relay.TupleGetItem(func_3342_call(relay.reshape(const_6691.astype('float64'), [10, 8, 1])), 0)
call_6692 = relay.TupleGetItem(func_3344_call(relay.reshape(const_6691.astype('float64'), [10, 8, 1])), 0)
func_3984_call = mod.get_global_var('func_3984')
func_3986_call = mutated_mod.get_global_var('func_3986')
call_6694 = relay.TupleGetItem(func_3984_call(relay.reshape(call_6686.astype('float32'), [5, 12, 2])), 0)
call_6695 = relay.TupleGetItem(func_3986_call(relay.reshape(call_6686.astype('float32'), [5, 12, 2])), 0)
output = relay.Tuple([bop_6678,call_6683,call_6686,const_6687,call_6690,const_6691,call_6694,])
output2 = relay.Tuple([bop_6678,call_6684,call_6688,const_6687,call_6692,const_6691,call_6695,])
func_6698 = relay.Function([var_6676,var_6677,], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mutated_mod.get_global_var('func_6698')
var_6700 = relay.var("var_6700", dtype = "bool", shape = (16, 8, 9))#candidate|6700|(16, 8, 9)|var|bool
var_6701 = relay.var("var_6701", dtype = "bool", shape = (16, 8, 9))#candidate|6701|(16, 8, 9)|var|bool
call_6699 = func_6698_call(var_6700,var_6701,)
output = call_6699
func_6702 = relay.Function([var_6700,var_6701,], output)
mutated_mod['func_6702'] = func_6702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_6787 = relay.TupleGetItem(func_5989_call(), 1)
call_6788 = relay.TupleGetItem(func_5990_call(), 1)
uop_6789 = relay.cosh(call_6787.astype('float64')) # shape=(1, 2, 11)
uop_6791 = relay.cosh(call_6788.astype('float64')) # shape=(1, 2, 11)
var_6806 = relay.var("var_6806", dtype = "bool", shape = (10, 2, 11))#candidate|6806|(10, 2, 11)|var|bool
bop_6807 = relay.less(call_6787.astype('bool'), var_6806.astype('bool')) # shape=(10, 2, 11)
bop_6810 = relay.less(call_6788.astype('bool'), var_6806.astype('bool')) # shape=(10, 2, 11)
func_6401_call = mod.get_global_var('func_6401')
func_6405_call = mutated_mod.get_global_var('func_6405')
var_6830 = relay.var("var_6830", dtype = "float64", shape = (792,))#candidate|6830|(792,)|var|float64
var_6831 = relay.var("var_6831", dtype = "float32", shape = (65,))#candidate|6831|(65,)|var|float32
call_6829 = relay.TupleGetItem(func_6401_call(relay.reshape(var_6830.astype('float64'), [11, 8, 9]), relay.reshape(var_6830.astype('float64'), [11, 8, 9]), relay.reshape(var_6831.astype('float32'), [65,]), ), 1)
call_6832 = relay.TupleGetItem(func_6405_call(relay.reshape(var_6830.astype('float64'), [11, 8, 9]), relay.reshape(var_6830.astype('float64'), [11, 8, 9]), relay.reshape(var_6831.astype('float32'), [65,]), ), 1)
bop_6833 = relay.mod(var_6806.astype('float64'), relay.reshape(bop_6807.astype('float64'), relay.shape_of(var_6806))) # shape=(10, 2, 11)
bop_6836 = relay.mod(var_6806.astype('float64'), relay.reshape(bop_6810.astype('float64'), relay.shape_of(var_6806))) # shape=(10, 2, 11)
output = relay.Tuple([uop_6789,call_6829,var_6830,var_6831,bop_6833,])
output2 = relay.Tuple([uop_6791,call_6832,var_6830,var_6831,bop_6836,])
func_6838 = relay.Function([var_6806,var_6830,var_6831,], output)
mod['func_6838'] = func_6838
mod = relay.transform.InferType()(mod)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6838_call = mutated_mod.get_global_var('func_6838')
var_6840 = relay.var("var_6840", dtype = "bool", shape = (10, 2, 11))#candidate|6840|(10, 2, 11)|var|bool
var_6841 = relay.var("var_6841", dtype = "float64", shape = (792,))#candidate|6841|(792,)|var|float64
var_6842 = relay.var("var_6842", dtype = "float32", shape = (65,))#candidate|6842|(65,)|var|float32
call_6839 = func_6838_call(var_6840,var_6841,var_6842,)
output = call_6839
func_6843 = relay.Function([var_6840,var_6841,var_6842,], output)
mutated_mod['func_6843'] = func_6843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_6856 = relay.TupleGetItem(func_6124_call(), 0)
call_6857 = relay.TupleGetItem(func_6126_call(), 0)
output = relay.Tuple([call_6856,])
output2 = relay.Tuple([call_6857,])
func_6862 = relay.Function([], output)
mod['func_6862'] = func_6862
mod = relay.transform.InferType()(mod)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6862_call = mutated_mod.get_global_var('func_6862')
call_6863 = func_6862_call()
output = call_6863
func_6864 = relay.Function([], output)
mutated_mod['func_6864'] = func_6864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6862_call = mod.get_global_var('func_6862')
func_6864_call = mutated_mod.get_global_var('func_6864')
call_6876 = relay.TupleGetItem(func_6862_call(), 0)
call_6877 = relay.TupleGetItem(func_6864_call(), 0)
var_6887 = relay.var("var_6887", dtype = "int8", shape = (8, 2, 11))#candidate|6887|(8, 2, 11)|var|int8
bop_6888 = relay.logical_xor(call_6876.astype('uint8'), var_6887.astype('uint8')) # shape=(8, 2, 11)
bop_6891 = relay.logical_xor(call_6877.astype('uint8'), var_6887.astype('uint8')) # shape=(8, 2, 11)
output = bop_6888
output2 = bop_6891
func_6895 = relay.Function([var_6887,], output)
mod['func_6895'] = func_6895
mod = relay.transform.InferType()(mod)
mutated_mod['func_6895'] = func_6895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6896 = relay.var("var_6896", dtype = "int8", shape = (8, 2, 11))#candidate|6896|(8, 2, 11)|var|int8
func_6895_call = mutated_mod.get_global_var('func_6895')
call_6897 = func_6895_call(var_6896)
output = call_6897
func_6898 = relay.Function([var_6896], output)
mutated_mod['func_6898'] = func_6898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_6919 = relay.TupleGetItem(func_6124_call(), 0)
call_6920 = relay.TupleGetItem(func_6126_call(), 0)
func_2899_call = mod.get_global_var('func_2899')
func_2901_call = mutated_mod.get_global_var('func_2901')
var_6936 = relay.var("var_6936", dtype = "int64", shape = (525,))#candidate|6936|(525,)|var|int64
call_6935 = relay.TupleGetItem(func_2899_call(relay.reshape(var_6936.astype('int64'), [5, 7, 15])), 0)
call_6937 = relay.TupleGetItem(func_2901_call(relay.reshape(var_6936.astype('int64'), [5, 7, 15])), 0)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
var_6959 = relay.var("var_6959", dtype = "float32", shape = (1792,))#candidate|6959|(1792,)|var|float32
call_6958 = func_1651_call(relay.reshape(var_6959.astype('float32'), [8, 16, 14]))
call_6960 = func_1651_call(relay.reshape(var_6959.astype('float32'), [8, 16, 14]))
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_6967 = relay.TupleGetItem(func_5989_call(), 2)
call_6968 = relay.TupleGetItem(func_5990_call(), 2)
const_6972 = relay.const([[[-1.420436,2.156235,-2.568995,1.769897,-5.133192,4.556642,-9.948655,-3.766972,5.523474,-6.048592,-1.116161,-9.505260,-6.465243,-3.171504],[5.333142,9.881996,-9.026785,1.075392,9.460215,5.535811,-8.066179,-3.617560,0.693754,-3.512930,0.241836,6.282947,-1.286189,2.888367],[7.211031,-5.259741,1.336799,1.094664,-2.282458,-4.342556,0.402042,-8.145105,-4.741860,6.703862,9.042154,0.031230,-5.227007,-4.967189],[-9.372345,-1.655633,-6.737587,-8.110410,-9.470092,9.248418,-7.784869,-1.987652,0.823750,0.503168,-3.382307,0.626865,4.334943,-1.941496],[3.751647,-9.471630,-1.485075,-1.209630,8.755877,-0.799629,-8.037762,3.942345,-8.221941,-8.609893,-6.857481,5.019198,-9.471361,-1.767072],[5.986577,-9.202396,6.370639,-5.678851,8.313661,-6.424805,2.023433,-1.351221,-2.924980,-7.880029,-2.413211,-5.000111,5.139238,4.731925],[-6.288849,5.642995,-1.706818,8.670638,-6.791937,-8.235649,-8.802704,0.270183,5.740243,3.020211,4.698910,-0.307028,-4.653068,-3.744321],[9.935573,-3.414558,7.392779,0.042650,6.452510,7.771032,4.291889,5.753692,2.899034,7.596030,-5.929416,-6.258083,2.888054,3.603355],[-1.885882,7.903072,2.657738,5.914180,2.443098,9.091396,3.593912,-8.334009,-1.568950,-0.476663,-8.785608,-2.155848,-8.221564,-6.750956],[-8.594370,-7.456052,8.574462,-2.396469,0.270812,3.847027,-3.693521,7.133715,-0.154814,-4.498231,5.716407,-9.949321,4.474294,-8.601635],[8.028575,8.446975,6.011985,-6.860223,1.558494,1.577715,0.224936,9.080358,7.928105,5.150644,-5.916909,-2.198545,1.092238,-5.357996],[-0.296056,-4.989767,6.129146,2.193792,1.794321,-2.471557,-4.611060,0.949498,-4.273653,9.655572,6.711104,1.711876,2.783433,8.942345],[-4.464795,4.151379,1.661303,8.538465,7.060650,3.389762,-3.032222,0.483363,7.750997,-3.316157,9.364555,-2.571170,2.537909,-0.964543],[6.139883,4.429567,6.109956,-4.789576,-8.932587,-8.615912,-9.693785,7.167065,0.224099,9.451114,0.376424,-0.019386,-1.027058,-5.251132],[6.366339,-1.123894,-9.272861,-8.457950,-8.930401,-5.713152,-7.918110,-4.835445,-7.316351,-1.608717,-5.241348,0.616105,6.772201,-3.869093],[-6.829234,0.909203,4.256022,-0.850674,3.700694,-7.140254,-0.455573,3.072110,5.435754,9.944123,7.644305,6.250801,-0.212088,9.749377]],[[-6.797696,5.989630,-7.384219,-7.811700,-4.707345,-3.462743,-4.698531,7.600885,1.074588,6.018714,-5.900966,0.173527,-4.857044,5.203152],[5.227588,6.811744,-6.438562,-3.136875,6.269323,-3.569189,7.559525,-8.007082,0.927413,-2.116518,-4.105242,8.834808,9.912647,-6.316716],[3.784448,-9.752746,-5.137328,2.707174,-9.040609,-2.069828,-3.858838,7.759161,5.208334,2.367939,4.351185,0.706597,-5.223141,-3.214826],[8.527922,6.322816,-7.478328,2.174887,4.082741,1.077696,-9.706407,-6.644253,-6.652289,9.342740,9.718499,4.942292,-0.466348,-8.473027],[8.197457,-6.370905,4.906080,-2.646536,6.236626,-7.396568,-3.640702,-3.870928,5.230493,5.201470,-9.327794,1.534340,-8.925563,-2.115014],[-1.871235,3.559441,3.600633,-2.967127,0.837728,-7.819768,6.223397,-9.688349,-8.215986,-6.847486,7.451657,-7.307933,-8.921323,6.150815],[-8.003432,-5.679347,-5.258359,-1.003239,2.732749,-6.093165,1.891819,-4.692791,6.700496,-7.335986,2.035184,-1.596968,9.511448,2.284527],[-1.129201,-6.101003,-0.512365,1.427088,-7.757244,9.475180,3.325629,-9.481342,-8.496261,7.196858,8.388834,-8.229422,-2.766208,9.908692],[3.705116,-8.766741,1.805160,-5.560059,5.292463,-7.755793,8.270308,3.497253,0.160441,-7.277559,-7.486660,-2.392095,6.598887,9.526934],[9.592976,8.908897,6.820997,-1.643269,-7.034767,-5.437613,7.637486,4.325612,-2.636419,4.641959,8.762692,-5.020511,1.618747,5.216326],[8.796909,-4.472224,-4.594744,7.674038,6.256708,-4.128291,-3.762241,7.801971,-9.679774,-3.998776,-0.076454,-4.695856,4.251502,9.964331],[3.078491,-9.641307,8.798621,7.305184,-1.564449,4.447373,8.275553,-4.860414,6.205268,4.026081,-3.812906,-0.709621,4.839589,-2.685706],[3.801496,0.109880,9.962889,4.687021,-6.406558,-0.928079,3.685725,0.075724,5.747805,-4.701963,7.831650,-1.133690,-9.660482,-7.038652],[-8.813419,-5.747336,4.448435,-0.590662,7.524860,6.399176,4.271139,7.597315,-1.157577,1.384284,-5.483997,-1.396371,2.390675,8.062407],[8.740019,3.586390,7.964075,-4.415489,0.874810,7.660709,-1.268778,-9.505598,-4.815622,9.245153,-6.241862,-5.527249,-4.304342,8.273037],[-7.192093,3.683537,-6.953775,4.321254,7.511666,-3.575471,-5.690876,3.859425,4.644687,-9.020916,9.574507,-4.991604,-7.551243,-9.211444]],[[1.339195,-3.896646,9.376304,3.408861,-9.215283,4.271155,-8.202428,-9.168583,8.701641,-5.477444,-9.801682,-7.787650,-0.692360,7.005657],[6.994829,3.705245,7.893276,-4.219166,-0.364627,8.741635,-6.360429,-1.189480,-5.119479,-2.781269,-1.011904,-8.687562,2.708667,4.905486],[3.642462,0.159164,-4.570077,5.641154,-9.762860,-8.983211,-5.443101,-9.574293,-3.744263,7.052663,5.615310,-3.689867,-7.894004,-4.492830],[6.068766,6.945377,9.042649,-8.735982,-4.697064,6.683536,7.890806,5.388869,9.738875,2.544915,-7.596664,4.557303,-4.821946,4.900776],[-9.520997,-6.012457,1.945700,6.475677,-4.155618,3.334712,2.299479,-6.175334,-1.240357,-8.060376,6.764188,-8.305497,8.474879,6.297778],[9.074453,-6.484265,6.339870,-2.725952,8.457626,5.885153,2.371752,-6.253620,9.609716,3.771952,-5.615482,-3.850767,4.149258,6.660477],[-7.813248,-6.932402,9.203911,9.979751,-3.456092,-5.617155,7.364977,7.173669,-5.366462,-5.105347,-4.622487,3.911030,7.426371,-9.670660],[-9.932001,6.907727,3.287878,3.316993,1.035225,4.684249,-1.412955,8.440300,2.376742,-4.960833,-0.964475,9.221603,-1.545046,2.414371],[-6.559221,7.094758,1.068612,1.182576,-4.178354,6.557564,-5.992512,5.190362,-6.162940,-0.967720,-8.919019,0.804603,2.926758,5.200135],[-8.989756,-1.360030,8.665117,4.286300,-5.655424,9.577487,6.474409,-7.843785,8.629835,-0.403143,-7.513270,9.036642,2.671918,2.783347],[1.427679,9.369637,7.024740,6.086134,6.591859,1.083319,6.815882,-1.379366,-3.189279,-1.191017,1.088424,2.581789,-7.175182,-4.903697],[-5.192212,-5.721870,-3.887259,8.906300,9.637978,-5.003292,0.818195,3.194221,-0.965081,-5.554312,-9.907438,-9.178077,9.618797,-1.170574],[-7.297530,-0.404002,-2.801624,4.471163,-1.367692,2.654508,1.553853,-4.319402,5.836111,6.345634,4.569091,-3.383242,7.257590,3.914750],[2.867866,-2.846227,-5.623296,-4.173086,1.744755,-9.558193,-6.982000,-9.253173,9.412403,-7.017961,-0.385790,5.148094,8.152454,8.538887],[-9.522850,-8.685443,-9.360148,-9.551259,7.638948,-3.594537,-0.913224,-4.823691,-5.179825,-3.283299,5.403758,-5.765813,-0.939011,7.495253],[-9.668910,-0.282847,-4.602765,-0.010031,3.104639,3.578189,6.052726,-6.318054,-7.440299,-1.250699,8.852447,7.917145,0.558195,-2.830090]],[[0.810358,-2.415396,-1.658456,-4.822705,8.794594,-3.140606,4.078689,4.204824,1.246263,-0.820414,-8.751744,-2.096751,9.631242,-0.988245],[6.819904,5.724758,-8.986695,-4.873349,-8.186287,4.958191,0.326515,7.485344,-2.297624,5.887032,-1.913035,4.979889,-6.666822,-4.126717],[2.887212,7.359731,3.866848,6.498540,-0.005526,-7.375332,2.156043,-9.811249,3.344782,0.397053,-2.992975,2.560749,8.701267,1.871479],[-5.130861,4.775865,-4.558879,1.513127,1.436610,6.201172,-1.688795,1.879008,-7.962022,5.140115,3.769203,9.719044,1.641339,-0.731481],[5.405569,0.338788,1.559232,-0.515833,1.454896,1.946891,-9.700039,-1.515035,-4.664796,-7.101070,7.810617,6.839630,1.141654,-9.513884],[9.912450,5.104187,-5.625147,3.474846,0.617107,4.185508,3.025763,-5.544237,6.461119,-2.933806,-5.414017,-8.007185,-8.887330,-1.112872],[-5.098898,9.828699,2.472775,6.192873,6.680146,2.406836,-3.068419,2.135107,2.530141,5.582522,-1.982101,-6.911247,1.431001,-1.376495],[-0.962550,5.027234,4.352336,0.294645,5.206589,-1.837552,2.100177,9.372458,-1.292584,0.589469,-3.136939,-7.468170,-0.094966,6.034939],[-7.753028,-5.064304,-6.343574,3.310039,-1.643578,-6.144159,1.178973,-2.674064,-3.005799,-1.569272,-5.976367,-8.603303,8.366259,2.285017],[-6.804181,4.568442,-6.180523,6.718945,6.562347,-8.263644,7.494186,5.293992,8.070908,9.421089,4.917059,-5.359947,7.230008,2.633520],[5.714638,9.350589,9.710497,-8.900629,-5.234392,2.376804,1.059664,2.230817,-2.827382,7.202475,-6.988458,-8.972678,3.991272,7.291058],[2.540847,9.355437,9.075871,-4.794533,4.281293,-5.737052,9.454745,1.682564,8.777144,4.668804,3.913704,3.408516,-2.433984,1.301877],[-4.508412,-4.979850,6.949517,-6.790054,-7.728514,-2.342262,-8.100684,4.583520,-8.229499,-1.951396,8.400449,0.133361,-2.612344,-9.120958],[-1.836317,-3.580990,-4.455372,1.899081,-7.344510,-4.329959,-6.002668,-1.446629,5.101840,-2.534987,-5.003750,1.203790,9.871062,-4.656824],[9.811685,-4.406877,4.772958,-8.157118,3.807053,5.878390,-8.501054,3.042361,-3.993408,5.072646,6.865546,6.646709,-3.151666,-7.749874],[-7.393945,7.435482,7.543579,6.850267,1.678073,6.570733,8.156567,-2.390337,-1.940691,5.223517,-9.146442,7.848594,-0.414126,1.197311]],[[0.510950,-2.722830,7.935413,-6.852242,4.289012,8.963023,5.499019,-7.269885,5.122720,-1.656294,-8.796084,4.148506,-9.082905,-5.562846],[6.256944,1.596341,8.837681,-2.614629,-3.823525,-7.404725,4.029331,-6.000635,-5.922750,9.478868,3.871661,1.989889,0.202458,-7.521585],[2.101347,6.509796,3.495274,-8.082696,-9.012697,8.896701,0.720552,3.907210,7.239743,4.939586,-0.475696,4.791063,4.038940,2.467720],[8.872077,-1.844565,-6.307614,-6.824588,8.257170,6.361139,5.650158,-5.294810,-4.749197,8.297163,2.589872,7.183616,-9.403375,9.380701],[1.311430,-8.425815,9.256418,-9.957091,-6.719420,6.278038,5.595822,-6.952468,6.610562,5.980409,-9.900413,9.009729,0.253072,5.639876],[5.650247,6.798129,8.909498,-2.249630,3.082943,-3.721183,0.274072,8.578070,-7.606066,8.052634,-1.642801,1.258486,-4.612114,-8.202442],[7.281560,6.052667,-9.340753,-0.004722,-2.340129,-5.055839,3.692662,-5.229980,-9.819301,3.456125,7.188859,-8.122225,9.093329,-6.364727],[-5.123784,8.675141,-8.742324,8.859402,-3.143584,-2.674815,-6.925243,-9.319712,9.297314,-8.860638,-6.029710,4.581537,-3.067655,8.536735],[7.974982,9.392169,-0.801120,-3.245625,2.828504,8.288663,4.383850,2.464595,9.406714,0.291331,-6.819358,-8.593365,5.590634,-9.319047],[-1.445302,2.485991,8.320816,8.346604,1.061122,-5.492829,1.691323,-6.385676,2.791743,-6.397753,8.951044,3.492989,8.390016,-2.220528],[5.720054,1.190867,-9.974265,-9.240196,0.408591,8.111456,6.603095,-6.223622,-5.212595,7.539350,-5.591498,-5.221756,4.593555,9.553759],[0.284398,0.799077,-9.095485,-5.561215,0.983111,-4.026752,8.174304,1.936667,7.503648,6.777535,4.919645,4.379874,7.577148,5.529010],[5.851072,8.208444,1.992712,-2.493551,2.444003,-5.110868,4.738608,-8.639432,6.313841,5.660073,0.979142,-4.661295,4.897154,-8.667324],[3.211361,6.745350,-0.012577,8.153346,6.586653,4.348879,3.456415,5.065335,-2.702502,1.800454,8.619068,-3.045470,2.633738,9.583779],[-2.002690,5.575795,-2.466919,-1.256607,-0.410813,-2.202178,1.908133,-6.399317,0.805500,3.862972,3.020204,5.118775,1.384137,1.837340],[-7.151443,4.405181,-0.304877,-4.584129,1.914313,8.655315,0.969994,8.197300,2.254008,4.224536,2.403209,-8.284923,7.746278,-0.718308]],[[6.969337,0.136123,-9.956717,-9.282413,-7.751900,2.635578,-2.335961,8.889468,-3.946451,-1.316269,-4.950994,0.881860,3.372746,7.666088],[6.263558,3.814632,8.445484,6.154829,-5.007042,0.906207,-4.944267,-0.549308,2.302688,-0.348747,5.475082,-1.097927,-7.896384,2.586323],[2.476623,-8.687028,-0.992598,-8.216775,4.106284,-2.008732,9.411534,-0.180424,-3.128921,-6.198906,-7.506882,-3.606095,-4.737923,5.843702],[-5.072248,-6.849965,9.793559,-9.825691,-7.125924,-4.081682,-7.322891,5.199407,-9.558495,-4.487937,4.758280,-1.559291,7.543380,9.463909],[1.151289,3.237497,2.789176,-6.653399,-7.467732,2.946507,5.776362,-6.086922,-1.040918,5.395968,0.684875,2.537980,0.271889,-6.524368],[-0.409605,-0.602295,7.378565,4.741093,2.486474,0.321437,1.532645,-1.496128,-0.603886,-6.710866,8.773327,5.033731,2.051895,7.506152],[5.371376,-7.732979,4.475523,7.893132,-9.613018,4.424048,-6.082929,2.515204,7.818742,-5.105214,3.602195,-5.500183,6.348825,0.013462],[2.823999,9.682534,9.177283,-1.888361,-7.899478,3.677611,3.886669,-7.861413,0.876468,6.122693,0.776005,9.397659,-2.281829,0.038224],[9.976174,7.962985,0.763554,8.213337,-7.789791,4.898018,-0.744978,6.342374,-4.902897,6.849064,4.529497,-9.250041,9.805888,2.225681],[-5.897111,7.074030,-1.363301,-3.044960,9.457267,-1.094321,3.463627,-1.724636,-9.268858,9.722847,4.393185,-5.118361,3.295347,3.219269],[-5.776004,8.188608,-1.807763,6.036482,3.660145,-0.709310,5.134462,-5.061743,4.871857,-0.101339,-7.879354,-5.428087,0.691679,-7.114637],[3.943684,7.442784,6.883593,-9.391948,3.359403,-1.756706,1.407723,1.216711,7.446539,-8.275168,-9.019959,-6.441350,-0.733509,-0.993685],[7.975161,9.621863,-3.485602,3.946757,8.210505,9.380607,4.883807,1.192286,1.627744,7.545100,-0.379463,4.389124,2.123805,5.407551],[-5.044386,0.360297,-2.623890,-9.146536,5.108966,-0.636093,-8.499707,0.875519,4.273102,-9.392126,8.779549,3.527739,5.501140,-3.212473],[-4.303630,0.108987,8.860122,3.549251,7.966182,-8.665396,6.870535,4.649038,6.787750,6.370510,9.371649,5.458190,3.634655,-1.179634],[9.904792,4.767362,-3.516601,-0.754124,2.401101,1.115561,5.481751,7.961394,4.545662,-1.771979,5.766275,5.626310,-9.621590,3.673821]],[[-5.679955,-2.714674,-2.213052,4.831060,-3.323756,-2.967759,3.306680,-2.618649,-8.083553,1.819503,-5.809936,-5.182315,7.536606,-5.505655],[-5.054978,-6.276184,3.787171,-7.974112,-8.821008,-9.917104,5.046239,3.144400,0.176219,7.956752,2.547665,9.841542,3.272606,-6.457196],[6.588652,-7.264595,-0.731197,-0.823926,4.288897,-3.804118,2.839927,3.498771,0.605124,7.914378,-2.516304,-6.770919,-2.582850,-9.386398],[6.049463,-4.069146,6.848026,-8.450558,3.286751,-3.223343,7.415862,7.357365,6.936649,7.752112,3.018279,8.784150,-0.228386,9.037949],[6.918228,-3.834104,-4.907864,-4.857238,9.559811,-1.715953,6.157044,7.493804,7.105957,6.220126,5.030894,0.626020,-0.343987,8.803419],[2.206674,0.876432,-1.890638,9.257736,-2.564933,-8.228850,7.137634,9.339297,1.637635,5.935576,2.126552,-5.205954,-9.785054,9.181734],[-9.027134,5.033323,0.973074,3.988507,-1.624354,7.306067,-4.463590,-9.948305,-4.623832,-2.571855,-1.712881,-9.159771,6.093106,0.247405],[-1.152824,-2.672902,8.185390,-9.225213,-4.432482,-4.526433,7.049958,4.730615,4.732898,3.471617,5.727466,-6.815053,2.156877,2.429852],[3.151121,-2.663559,2.136370,-2.816963,-2.128867,-8.841387,-1.627926,8.757510,-2.468152,4.336548,-9.008957,1.165098,8.816157,-3.382732],[-9.990267,3.612826,-4.616241,2.992605,-1.916002,-3.995089,9.228542,3.459444,4.523142,1.045627,6.560280,9.691892,4.396083,-9.966123],[-5.567909,1.515636,-7.749694,-2.696029,2.691490,5.170407,-8.525511,-9.810436,-8.739522,5.686650,1.615176,3.183720,-7.902280,-5.805524],[1.638893,-2.394336,3.246380,-1.904301,-1.266503,-5.272815,-0.746551,3.517368,6.949409,-3.095404,2.173541,1.591138,-4.646292,9.584274],[-8.804321,-7.831013,-5.848756,8.988878,2.658643,-2.884933,3.861545,7.068088,-7.761283,-0.947684,-3.394303,9.005554,-5.154634,-2.892462],[3.414895,3.223456,-1.151701,1.051710,-1.366481,-0.869221,-2.381476,4.070965,-5.251248,1.152721,5.332860,-0.025831,3.131244,5.958739],[9.504829,-3.148665,-8.584891,-0.893913,-1.645661,2.612058,-8.999560,-1.110738,-3.084998,-1.121841,-3.001053,7.001178,6.972082,7.029525],[5.810645,3.752854,6.939524,9.423176,1.778309,-6.959142,7.666386,3.719314,6.252779,-7.388189,3.375831,-6.010332,6.912533,-8.202570]],[[-2.040319,0.849747,-5.089508,-7.127597,-5.246150,2.443323,7.045384,9.990884,-7.079626,-1.339546,-0.088178,8.694710,-4.534665,9.207702],[-3.644456,-2.244383,-3.058509,-0.041802,-1.502601,-1.640475,0.522190,7.737892,4.017574,0.054655,7.235596,6.289503,9.777665,6.099396],[8.363156,8.273453,-1.781948,-2.020956,6.627681,-1.145365,2.969985,-4.921885,-1.787288,7.640220,1.210019,3.958354,-1.955536,-0.351356],[-6.933503,8.531803,4.553941,3.019125,4.619376,-7.589266,-0.905094,-2.754291,5.287042,-6.485344,-6.830150,5.361305,1.890614,-0.249995],[7.546430,8.728507,0.314452,3.280444,4.659408,-6.347637,-7.807657,3.996582,4.816876,-4.229813,-6.249142,8.416855,-1.005988,-2.265557],[1.561977,-0.327882,-6.282585,-9.765786,-8.901303,-4.640273,-2.024302,-5.992827,9.786879,-9.034826,-8.627311,8.338506,6.983719,5.073243],[9.226829,9.717637,8.085249,0.395019,2.795060,3.009605,-7.652793,1.149095,-1.180648,5.205899,4.803553,5.236807,7.419127,9.632333],[5.340883,-6.893672,-1.513777,9.047564,8.961899,0.437604,6.886233,9.707953,-9.955680,-0.952336,-4.076070,-1.182927,9.537610,8.400160],[-7.465985,-2.775288,-2.140985,-2.278936,-6.265701,-7.899392,0.822372,0.774578,-5.108648,-3.616124,6.558466,2.999157,-7.639729,-8.465317],[3.238283,-5.585066,-0.798090,2.193067,-8.747693,8.222719,-7.092783,-5.377540,-2.853822,-4.460708,-3.943550,5.476891,0.996262,-5.693370],[4.514865,-8.714574,-5.981655,-7.854707,7.172572,4.980122,-0.971498,-8.289979,-1.005704,-0.376008,-0.325475,9.826218,0.044590,5.121841],[-8.724311,-9.453254,-5.755499,-7.751415,-5.968027,1.592537,9.492903,5.841449,5.249795,-4.135468,-9.167098,-9.485379,1.452864,-3.061138],[3.646222,6.574005,9.746232,6.762881,-6.924256,-8.000951,-6.853446,-0.920665,1.783983,1.487988,-8.022273,-0.051475,-5.018604,4.106971],[7.036253,-6.794455,1.235014,-8.703902,-3.515916,-6.277915,4.128568,8.631594,-9.419376,3.727006,7.037810,5.175230,-3.437559,-2.716439],[-5.089526,-8.269111,0.405149,-8.044399,9.824116,8.071250,-7.638244,-9.191835,7.964899,-1.480113,-1.575704,7.637425,-7.954425,7.790261],[-3.689927,-4.575543,9.291148,-0.720535,4.277212,-4.172134,2.994146,-9.919892,4.714600,-6.632097,-5.653318,3.326024,-5.162351,-3.390113]]], dtype = "float32")#candidate|6972|(8, 16, 14)|const|float32
bop_6973 = relay.minimum(call_6958.astype('uint32'), relay.reshape(const_6972.astype('uint32'), relay.shape_of(call_6958))) # shape=(8, 16, 14)
bop_6976 = relay.minimum(call_6960.astype('uint32'), relay.reshape(const_6972.astype('uint32'), relay.shape_of(call_6960))) # shape=(8, 16, 14)
uop_6982 = relay.cosh(var_6936.astype('float32')) # shape=(525,)
var_7002 = relay.var("var_7002", dtype = "uint32", shape = (8, 16, 14))#candidate|7002|(8, 16, 14)|var|uint32
bop_7003 = relay.less_equal(bop_6973.astype('bool'), relay.reshape(var_7002.astype('bool'), relay.shape_of(bop_6973))) # shape=(8, 16, 14)
bop_7006 = relay.less_equal(bop_6976.astype('bool'), relay.reshape(var_7002.astype('bool'), relay.shape_of(bop_6976))) # shape=(8, 16, 14)
output = relay.Tuple([call_6919,call_6935,var_6959,call_6967,uop_6982,bop_7003,])
output2 = relay.Tuple([call_6920,call_6937,var_6959,call_6968,uop_6982,bop_7006,])
func_7013 = relay.Function([var_6936,var_6959,var_7002,], output)
mod['func_7013'] = func_7013
mod = relay.transform.InferType()(mod)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7013_call = mutated_mod.get_global_var('func_7013')
var_7015 = relay.var("var_7015", dtype = "int64", shape = (525,))#candidate|7015|(525,)|var|int64
var_7016 = relay.var("var_7016", dtype = "float32", shape = (1792,))#candidate|7016|(1792,)|var|float32
var_7017 = relay.var("var_7017", dtype = "uint32", shape = (8, 16, 14))#candidate|7017|(8, 16, 14)|var|uint32
call_7014 = func_7013_call(var_7015,var_7016,var_7017,)
output = call_7014
func_7018 = relay.Function([var_7015,var_7016,var_7017,], output)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6516_call = mod.get_global_var('func_6516')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_7031 = relay.TupleGetItem(func_6516_call(), 0)
call_7032 = relay.TupleGetItem(func_6517_call(), 0)
func_6516_call = mod.get_global_var('func_6516')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_7047 = relay.TupleGetItem(func_6516_call(), 0)
call_7048 = relay.TupleGetItem(func_6517_call(), 0)
output = relay.Tuple([call_7031,call_7047,])
output2 = relay.Tuple([call_7032,call_7048,])
func_7051 = relay.Function([], output)
mod['func_7051'] = func_7051
mod = relay.transform.InferType()(mod)
output = func_7051()
func_7052 = relay.Function([], output)
mutated_mod['func_7052'] = func_7052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_7059 = relay.TupleGetItem(func_5989_call(), 3)
call_7060 = relay.TupleGetItem(func_5990_call(), 3)
output = relay.Tuple([call_7059,])
output2 = relay.Tuple([call_7060,])
func_7099 = relay.Function([], output)
mod['func_7099'] = func_7099
mod = relay.transform.InferType()(mod)
output = func_7099()
func_7100 = relay.Function([], output)
mutated_mod['func_7100'] = func_7100
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7155 = relay.const([[[5,5,-2,4],[3,-5,9,2],[2,-5,-6,-5],[5,5,10,-10],[-5,-4,5,3],[1,7,-3,-5],[4,-5,9,1],[4,7,-7,2],[5,9,3,10],[-3,5,-5,-10],[10,-1,9,-2],[10,-6,8,9],[3,3,-3,9],[-9,1,-3,-3],[8,2,6,8]],[[-3,2,-2,5],[10,-3,-3,8],[-5,6,-10,2],[2,3,6,-3],[6,10,-8,-7],[-5,3,1,9],[-10,7,-1,8],[-3,-1,-2,9],[2,10,-4,-2],[5,4,9,-5],[8,1,-3,5],[7,6,-10,7],[-4,-4,4,-7],[3,7,7,-3],[6,-6,-10,-4]],[[7,-6,4,-1],[-2,5,2,7],[5,7,7,-5],[-3,-1,-2,-10],[4,-5,3,5],[4,-1,3,-4],[-1,-8,-3,1],[-6,7,-7,6],[-6,10,-9,-5],[6,-9,-6,-9],[4,-7,-2,10],[-3,5,-7,3],[-2,-3,7,-3],[-3,-4,-5,-6],[-10,-3,3,2]],[[4,6,-8,5],[2,-2,5,4],[8,-7,-2,-10],[-5,-7,-10,-4],[6,-6,-1,-6],[-8,-1,-4,10],[-4,-2,9,-9],[7,-5,-2,-1],[-1,3,-9,-4],[-7,-1,10,2],[-8,8,-6,-6],[-10,-2,-1,3],[10,-3,-6,8],[-2,6,-10,-5],[3,-8,10,-4]],[[4,-5,8,7],[3,-9,-9,-4],[-7,2,-9,8],[10,-10,9,-3],[9,9,5,7],[8,-6,-4,7],[-3,9,-5,3],[-2,-8,-9,5],[8,-7,-10,10],[10,-4,-10,-6],[-9,4,-1,-1],[-2,-5,1,-10],[5,-3,-4,4],[3,-10,8,-6],[10,-1,9,-3]]], dtype = "int64")#candidate|7155|(5, 15, 4)|const|int64
const_7156 = relay.const([[[7,5,6,-4],[9,7,-5,9],[-3,-1,-1,-1],[6,2,7,-1],[9,-4,3,-8],[-10,-8,-9,-8],[-1,-5,6,5],[-7,-3,2,-1],[-2,-3,-3,-7],[-8,-7,-5,-1],[4,1,2,-5],[-4,5,4,4],[-1,9,8,6],[-3,4,9,-6],[-3,-4,2,8]],[[-10,9,-1,8],[-10,5,-4,-3],[-7,7,-2,9],[-8,10,6,6],[-1,8,10,3],[4,5,10,-7],[4,-2,-6,2],[6,8,10,-6],[8,2,-1,-7],[4,2,-1,2],[4,-2,5,-6],[5,-4,7,5],[-5,5,-5,-8],[-4,4,1,1],[-8,-6,6,-5]],[[-6,-6,-9,8],[2,-10,6,6],[8,7,6,5],[-10,6,-10,9],[-1,9,-7,-4],[2,8,1,8],[-3,-9,3,-2],[2,1,10,10],[-6,-1,-7,4],[8,7,-5,9],[10,-7,-1,-7],[9,-8,9,-10],[8,8,8,-5],[1,4,-7,-5],[2,-1,1,7]],[[-8,-10,-3,-2],[4,6,-1,8],[3,9,6,8],[-6,-10,-8,8],[2,-5,-10,7],[6,-6,4,-10],[-8,8,2,10],[6,-4,9,-2],[-2,7,5,-6],[5,7,-5,-8],[-5,7,-2,-5],[8,-7,-3,-7],[8,-7,-8,-4],[-4,-4,-10,-4],[-9,-2,9,-3]],[[9,4,-9,-7],[5,-9,-8,7],[6,4,4,-2],[-10,-7,-2,-6],[8,-2,-10,-3],[-4,9,-5,-5],[8,8,-9,8],[-5,-8,3,7],[-3,8,10,2],[4,-8,-8,4],[4,9,-2,-3],[-9,-5,5,4],[1,-3,3,-6],[7,-10,9,-2],[-5,6,-7,4]]], dtype = "int64")#candidate|7156|(5, 15, 4)|const|int64
bop_7157 = relay.left_shift(const_7155.astype('int64'), relay.reshape(const_7156.astype('int64'), relay.shape_of(const_7155))) # shape=(5, 15, 4)
output = bop_7157
output2 = bop_7157
func_7185 = relay.Function([], output)
mod['func_7185'] = func_7185
mod = relay.transform.InferType()(mod)
output = func_7185()
func_7186 = relay.Function([], output)
mutated_mod['func_7186'] = func_7186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7185_call = mod.get_global_var('func_7185')
func_7186_call = mutated_mod.get_global_var('func_7186')
call_7244 = func_7185_call()
call_7245 = func_7185_call()
func_925_call = mod.get_global_var('func_925')
func_931_call = mutated_mod.get_global_var('func_931')
const_7261 = relay.const([[8,8,-9,-9,8,-10,6,-2,1,-3,9,4,-10,7,7,-4,1,6,8,-10,-1,1,8,-10,-7,3,8,7,-10,-7,-10,-3,2,9,-7,6,9,-9,-3,8,-1,-4,-8,-6,-7,-7,-3,-6,-2,-7,-3,-10,10,-1,-8,1,-8,6,-9,-6,7,-3,-4,7,5,-8,7,-3,7,10,-3,-3,-9,10,-1,-4,10,1,6,3,-2,-2,-6,7],[-10,-9,9,7,8,6,4,10,-9,7,8,9,-10,10,7,-1,4,4,-9,1,-8,9,-9,3,1,-3,1,-1,-4,-7,8,-10,8,-6,-4,-4,-4,-2,3,10,9,-5,7,1,8,-2,8,9,-7,10,-1,-4,9,-9,3,-8,-5,3,10,-3,4,7,9,-7,-10,-8,3,-8,-9,-5,-4,-7,6,1,3,-6,-9,-8,-10,3,-2,-3,-4,-7],[5,9,5,-10,-7,-10,-5,7,1,2,-10,3,9,-7,6,8,-8,-5,-5,5,-8,-2,3,-8,-7,-6,-9,-1,5,-1,-5,-4,-10,-5,6,4,-7,8,8,-4,8,5,9,4,-5,-6,-8,3,-1,-10,8,-8,2,3,-2,6,7,7,-7,-3,-8,5,1,-3,-6,-7,8,-7,3,-4,-9,7,2,-3,5,-5,6,10,-10,8,-5,-8,4,7],[5,4,-2,1,3,4,1,2,1,-3,-4,-5,-9,3,-8,3,-10,9,-8,-5,-6,10,10,3,1,-2,-10,-5,2,4,-8,5,-4,9,7,-2,3,-10,-3,6,-10,10,-7,-9,-10,-9,10,6,2,-5,-9,4,10,-7,-7,-6,3,-7,10,9,10,10,-4,3,2,-7,-6,3,4,-8,4,8,-9,-8,-2,9,-5,-2,-5,-6,-5,-8,-3,9],[-2,8,1,5,-10,9,10,-6,6,5,-4,-8,6,-4,-6,6,-9,8,-10,-10,-6,4,6,2,-9,3,9,-6,5,4,2,1,-4,-3,-4,7,-3,-7,-3,1,9,7,5,-5,-3,4,-10,-9,6,1,7,9,10,-1,6,-5,7,-4,-3,-5,-7,2,-5,-4,-4,-10,-4,3,6,5,7,8,-1,-6,-9,-9,-1,-6,3,-7,4,8,-8,-1],[4,-8,-5,-4,-9,1,3,-6,2,-1,1,-9,-7,2,7,-2,1,-3,6,-5,10,-3,-7,-9,1,3,8,-7,-1,2,4,1,4,2,-3,-5,2,-8,-6,-7,7,-9,3,1,6,-4,-5,-6,10,9,6,6,1,-6,-1,4,-4,-2,-10,5,-4,6,5,-10,-1,-10,-2,-4,10,-10,4,6,8,9,1,-5,2,-6,-7,-1,7,3,10,2],[9,1,-7,-3,5,4,5,-10,-5,3,-7,8,8,5,1,7,1,-5,-5,3,2,5,-7,4,3,3,2,6,-3,9,8,5,-2,-6,-9,-6,-6,-8,-7,-6,10,2,9,3,7,-9,7,-4,4,-5,-9,-6,3,-8,8,1,-3,1,9,7,7,-2,-10,3,-6,-1,-1,-10,2,-3,3,-8,6,-10,3,-2,-3,-5,1,-9,10,4,8,6],[-3,8,-4,4,-6,-7,-2,-1,5,8,-6,3,-8,7,-10,-5,5,-10,-10,1,7,-4,8,5,-1,-9,1,-5,10,6,7,4,-5,-5,7,2,5,-6,-3,-8,4,-3,1,6,2,-3,5,2,-2,-6,4,-6,4,-4,10,3,-1,-1,-6,6,-10,8,-6,7,9,8,3,-10,5,6,-6,-1,5,9,-10,-9,4,8,-8,-8,10,8,-10,-2],[4,10,7,9,5,3,-5,-6,10,8,10,-6,-2,6,5,-6,-6,-3,10,-6,9,8,4,2,-9,3,-6,2,5,1,5,-1,6,5,5,10,-3,-10,4,2,-4,-3,-5,-10,2,-10,-1,-10,-6,-2,8,-5,-2,-7,-8,-10,-3,-5,-7,-9,-8,-5,-2,5,-2,9,9,-1,10,7,-7,10,-1,10,-10,4,10,7,4,1,9,4,-5,-8]], dtype = "uint64")#candidate|7261|(9, 84)|const|uint64
const_7262 = relay.const(-3, dtype = "int8")#candidate|7262|()|const|int8
var_7263 = relay.var("var_7263", dtype = "int8", shape = (6, 28))#candidate|7263|(6, 28)|var|int8
call_7260 = relay.TupleGetItem(func_925_call(relay.reshape(const_7261.astype('uint64'), [9, 12, 7]), relay.reshape(const_7261.astype('uint64'), [9, 12, 7]), relay.reshape(const_7262.astype('int8'), []), relay.reshape(var_7263.astype('int8'), [168,]), ), 7)
call_7264 = relay.TupleGetItem(func_931_call(relay.reshape(const_7261.astype('uint64'), [9, 12, 7]), relay.reshape(const_7261.astype('uint64'), [9, 12, 7]), relay.reshape(const_7262.astype('int8'), []), relay.reshape(var_7263.astype('int8'), [168,]), ), 7)
bop_7267 = relay.less(call_7260.astype('bool'), const_7262.astype('bool')) # shape=(4, 24)
bop_7270 = relay.less(call_7264.astype('bool'), const_7262.astype('bool')) # shape=(4, 24)
uop_7275 = relay.atan(var_7263.astype('float64')) # shape=(6, 28)
output = relay.Tuple([call_7244,const_7261,bop_7267,uop_7275,])
output2 = relay.Tuple([call_7245,const_7261,bop_7270,uop_7275,])
func_7281 = relay.Function([var_7263,], output)
mod['func_7281'] = func_7281
mod = relay.transform.InferType()(mod)
mutated_mod['func_7281'] = func_7281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7282 = relay.var("var_7282", dtype = "int8", shape = (6, 28))#candidate|7282|(6, 28)|var|int8
func_7281_call = mutated_mod.get_global_var('func_7281')
call_7283 = func_7281_call(var_7282)
output = call_7283
func_7284 = relay.Function([var_7282], output)
mutated_mod['func_7284'] = func_7284
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7346 = relay.const([[[6.039670,-1.163596,-4.891794,-3.786531,-4.192798,-8.233439,-1.604370,-9.748286,-7.578448,-1.845367,9.263647,-3.999969,9.819374,-8.037838,-7.915543],[0.700037,7.660494,-8.943781,-0.704409,4.385422,-7.962232,4.657079,7.398578,8.044084,-6.204824,5.051221,-1.304575,-9.990202,-8.764294,-6.725286],[2.877750,-9.789951,-3.885205,-8.263781,-9.098852,5.280590,-1.376223,5.101675,8.230303,6.800450,-2.339221,0.372685,3.966385,-7.745635,8.607524],[-2.322149,-0.377296,6.901408,7.277336,4.308437,-9.308412,-8.637538,4.494923,-4.410299,-6.003225,-6.949527,7.970779,5.819773,-9.265047,-3.594515],[9.650427,-9.212081,8.046194,-2.131604,0.790372,-3.555740,-6.087142,-6.115372,-5.681865,-4.307262,7.903221,3.398814,2.290836,2.881905,-3.277720],[7.429735,-3.668637,-7.502576,4.546478,-9.416304,-5.422980,-4.143320,-5.454839,2.305747,-5.526172,2.212296,-6.768935,-6.029017,-3.601174,8.335296],[5.801011,-2.773707,-0.519703,3.010129,8.384348,2.922427,2.250295,-2.077674,-5.309699,-7.096392,-2.157960,-3.413800,2.835718,-2.343583,-7.910104],[-2.193756,-2.687615,9.485090,3.396579,-8.456214,2.696251,2.584116,-2.066745,-5.655307,8.024909,2.711590,-5.872386,-9.326850,-5.905988,7.139173],[4.026157,-0.947208,-3.156293,-3.344690,-9.055954,-3.856725,-1.491196,-7.100120,-3.527898,-2.967949,-1.620697,7.028973,8.718688,-3.891013,-9.252760],[0.682706,3.812661,7.415921,5.926176,-4.298375,-0.555314,6.464119,-0.850273,8.250189,-5.240380,-1.632520,1.834253,-2.488296,2.843433,-3.341756],[-2.548848,6.659877,8.805367,-4.470593,5.284531,7.666560,2.580011,-8.316210,-5.363890,-8.466343,4.052629,8.414734,-2.311162,-4.179187,-5.539691],[2.675175,-6.921424,2.156833,0.611791,-6.802413,-8.073940,9.573760,4.592419,4.148668,9.593604,-6.131397,-5.945647,-5.965970,7.207323,-5.289245],[2.594679,1.894312,6.787512,-1.077842,-7.584163,7.597157,-4.548816,-5.147952,-7.714106,8.205051,-4.048871,6.255792,-0.555764,4.412106,-2.205575],[9.215589,-6.740883,3.103240,3.571293,-7.498627,-6.083481,-7.067404,-3.215754,-0.124925,-6.705550,7.126900,-7.672229,3.588835,-9.266268,-3.538108],[2.918158,-3.262557,-8.988959,2.906303,6.200253,1.384158,8.411621,-7.931776,3.570096,-8.272838,5.826635,-0.261175,-7.330687,-8.521763,-4.941136]],[[5.612294,-9.589536,3.061127,7.946606,9.353311,0.075012,2.770310,-4.957718,-2.651671,-4.438037,-7.843973,-1.458107,5.830707,-5.628617,0.255236],[5.597938,-9.605371,7.701522,-0.450086,-3.300049,4.599750,9.780723,-6.670521,6.849480,9.442541,-5.858277,5.495316,-7.674046,9.294491,-0.534798],[5.788724,-6.286134,0.305958,-5.245983,-1.592258,1.662774,-0.137006,-5.537899,6.796645,6.867594,-4.582916,-6.178285,7.109908,-0.527731,1.606744],[2.562453,-9.803582,2.415732,6.961302,-0.415866,-9.833916,-7.644883,-9.945891,-9.348184,-3.420515,-3.768657,1.931850,-9.981927,3.426403,4.892214],[2.804545,1.078458,-1.103439,3.654782,-7.764212,-7.828123,-4.354802,3.510947,9.341563,-0.375268,-7.210116,-5.091791,7.581462,-1.179378,-9.992510],[4.377233,-9.309938,5.672184,8.843926,5.850133,-5.563482,8.088520,-8.990997,5.075617,-7.053978,9.897528,-9.871603,-8.492253,-0.954713,-6.427486],[-1.186128,-6.676422,5.598959,-8.573988,-5.518822,-6.203788,6.908606,8.457191,9.194989,3.177997,-1.586884,-9.895654,3.162333,-5.560323,1.393210],[-7.826596,4.455708,-3.385945,-9.920095,7.712515,-4.996855,-3.579208,3.018676,7.882922,-0.842550,-2.097615,5.612193,-6.913510,4.765640,-5.473536],[0.990089,5.469601,9.613563,1.948250,-6.087271,5.685052,6.842404,-6.580469,8.360092,7.948094,-8.508749,0.769948,-9.475564,-7.204681,-3.688859],[-3.851037,8.829151,-7.675125,7.213507,0.700523,1.009007,9.605672,-0.049212,3.431444,0.037909,0.621512,4.611543,-1.457243,-5.400894,2.973415],[6.763977,2.870138,1.819811,-1.945871,8.718114,-9.055431,-7.996542,1.903142,2.405406,-5.654906,6.636185,4.770862,-7.046104,-8.999053,-2.856405],[-3.705432,6.064744,3.533805,4.313116,-9.578711,9.314756,7.172299,-9.480805,-4.069537,-7.448700,-3.814168,-3.824799,-8.996847,7.619939,-9.951858],[-7.861852,-4.164029,-4.170984,1.555819,3.165768,-4.913619,-9.750799,-1.177657,6.642731,1.097850,3.796486,1.857463,4.640409,7.911104,6.721328],[-8.274000,-6.703378,5.043218,-9.353896,-8.014140,-6.157076,-3.448021,6.898295,3.680849,4.509327,-0.185588,7.518645,9.139393,4.034264,6.137587],[-4.984119,-8.217188,-2.562271,7.153502,-0.976770,-8.116295,-6.826265,-1.826491,4.553851,-7.787138,-9.696603,-0.213105,8.574039,-0.732916,-9.078122]],[[1.341370,4.808678,3.839955,5.839755,3.530785,-9.287518,5.854049,-6.427512,-8.167015,7.135100,0.174863,5.288937,4.519962,4.608111,8.817376],[-6.075002,-1.596011,4.369605,0.016439,-8.809059,-5.768102,8.736600,7.285019,3.912896,0.434140,4.815813,-2.544824,-8.896652,0.156114,7.263344],[8.408329,5.985612,-7.640191,8.845483,0.130168,-3.028539,8.050428,7.092933,9.770930,-1.972808,-3.872049,5.148807,1.796892,-3.675544,9.491753],[0.640317,3.434267,-6.984361,6.932486,-0.261683,2.189349,4.595524,-0.026380,-6.937719,1.007227,-5.485475,-1.279128,6.592088,-1.463154,-7.762775],[2.908071,-7.034167,-0.877963,-6.669215,7.664464,-8.568638,8.453473,0.902709,4.766509,-5.959067,-5.232082,-9.224535,-0.614865,-3.654134,9.921299],[7.973739,1.749806,-6.008594,-7.246346,0.047141,6.077853,2.655199,2.055555,-1.320860,-7.959478,-4.866591,6.215362,6.106550,-3.595405,-6.214742],[-9.268031,-9.761678,-7.563943,5.838795,-2.277957,-5.040099,-3.991883,-2.580150,-7.301859,-8.045484,6.520717,4.520562,8.073142,5.420659,8.448905],[-6.887894,1.381058,0.413498,7.589403,-7.470664,8.994046,5.110557,-2.456325,-2.941891,-7.191542,6.028606,5.979275,-4.519590,8.385778,-9.364370],[-4.994736,-2.066990,7.936755,9.667310,-0.087501,-2.960735,-8.712541,-5.735955,-6.715440,5.708161,1.593615,-6.002777,6.775727,-7.413895,-4.131093],[0.671939,3.559766,-9.933208,3.703660,3.169649,-4.559310,-5.117517,3.611636,5.646663,9.608118,-5.677017,-1.445492,3.661789,5.270170,-2.410902],[-8.662816,-8.784764,-6.230177,-0.467477,-6.212561,5.951300,-3.718614,4.661041,-3.556386,6.293366,2.368620,0.765676,-0.153676,-7.821957,-6.977382],[-9.053785,-3.982853,-1.517672,3.328951,1.277001,-5.992393,-3.094694,-4.039575,-7.254748,6.946470,-5.924805,1.754810,-1.867034,-6.841151,5.227028],[6.242504,6.438184,3.497086,-2.131541,-8.504238,-0.414477,4.771726,9.523460,4.331501,-8.513426,6.931421,5.953430,-7.846074,3.889906,-0.880879],[1.433446,-6.371803,-5.555513,-3.492141,-6.142232,-5.077089,9.373414,-5.247978,3.494656,-7.875963,-9.323806,-3.619572,-1.738126,4.712045,7.903811],[8.454476,5.118193,6.453631,4.925630,4.924258,-3.614025,-2.824048,2.917993,4.188133,-0.435666,-5.786883,4.218474,1.340219,-4.567518,9.224451]],[[-9.770715,-8.682136,-7.004359,2.628969,-2.978123,-8.896674,-5.062190,-2.683050,0.790158,-0.848930,-5.686104,-2.050532,5.814671,1.078476,-8.443195],[0.985993,9.928354,-9.126270,4.728042,6.228980,-2.510939,6.727460,7.163559,-0.312934,8.324588,-6.705964,-6.195265,3.912233,-8.136633,9.580351],[-1.570833,-3.739148,-3.916974,3.802670,-1.281777,2.656045,-8.624894,-8.560807,4.137182,-9.394082,0.216473,-2.066150,1.880206,-9.131104,-7.367421],[-2.184748,-0.513888,4.916053,-3.573001,0.156841,7.776267,1.764469,2.610757,5.775746,3.572904,1.970136,4.365507,-6.585022,7.892975,-2.866830],[-6.632472,-7.743116,6.083426,1.116055,9.542525,4.308943,-7.590849,-4.469873,-8.641254,-8.589835,-3.657827,-4.543630,8.438254,-1.742240,3.426891],[-1.454707,-9.173407,2.262809,-0.836585,9.928035,1.669240,4.425190,9.829050,9.632362,2.217809,6.378669,7.859200,2.877239,-0.291691,9.745427],[9.663438,3.414747,4.815135,1.672748,-3.752510,3.594731,5.947095,9.456909,-5.779228,-5.259715,-0.363999,9.600704,-3.105309,-3.142197,0.816296],[-6.350354,0.300246,-2.227212,-8.696941,9.369721,-4.612176,-2.608410,1.144259,-0.926299,-3.206655,8.313047,8.949463,-2.604031,-4.614663,-3.868867],[7.953740,-6.624022,6.881986,8.220996,-6.764617,-8.349378,3.917332,9.604532,-3.311311,-3.586969,-3.327909,1.860261,1.165349,9.963505,-8.497102],[8.026340,9.055174,-9.091328,-9.518126,-1.819487,-4.470517,8.271641,-8.267732,-7.927657,-8.682592,3.132773,9.144578,-8.090153,9.236549,-5.538697],[-0.724656,5.897776,8.129810,-5.189927,0.266792,-7.036542,9.156664,1.440335,-7.972030,-3.871403,-2.843239,-2.889064,-0.466268,-8.826367,-5.291058],[2.144236,-4.322823,-0.410347,-9.995645,5.505964,-2.686105,-0.105993,0.918110,8.191392,3.513885,2.232896,0.327762,1.038016,-7.451845,4.104492],[-8.213550,7.045222,2.341608,-5.835775,-3.326578,1.808859,-6.045353,-5.185633,4.545063,2.949280,1.678033,3.508418,-0.575218,-0.592392,-1.296456],[-0.963565,-9.888591,-0.412683,1.160948,-3.347356,-5.563662,-5.933843,7.522657,4.482518,-4.483385,5.968152,9.026294,9.416748,-0.976470,-3.567188],[8.583285,6.141671,0.875716,-2.386669,0.801674,-7.895790,-8.013059,-0.996569,-4.700726,6.909429,-0.309456,-4.448038,2.520060,-9.864065,-4.283623]],[[-9.114471,9.052978,3.578210,5.643235,6.483467,-8.299012,9.649300,3.224114,-7.128544,9.796838,-0.942424,5.966683,2.326513,-6.552203,-1.555622],[-6.430717,4.003375,-1.916415,-8.550884,-2.695241,-4.260059,-3.628303,9.713219,4.371848,6.360003,0.141120,5.374439,-6.024534,0.033951,-9.190544],[6.862908,2.758702,-1.935895,-1.674768,7.017137,-9.628674,4.991503,8.692666,-6.500193,2.678474,6.923389,-4.650522,8.243631,8.256141,0.987571],[-6.677098,3.890079,1.928843,8.181835,-5.538417,-8.463188,3.397717,6.853460,3.960289,1.664322,0.776039,7.491200,4.442059,6.556803,-7.743309],[-3.294983,0.417389,-6.177734,1.117674,-9.659862,-8.356232,6.103971,9.742274,8.930128,-7.523264,8.909468,1.716801,7.277680,7.912521,-6.848995],[-9.462737,-9.701701,-1.717049,-6.301582,-9.598559,5.563275,-3.975362,-1.510883,-9.834230,-4.902780,9.050009,-0.296796,-4.837360,0.734274,-6.627179],[4.040695,6.438952,6.600761,-4.961645,5.012845,-0.880918,-8.346014,5.452134,-1.812538,-2.288057,8.523113,-6.355033,-3.197668,9.291319,-6.167779],[6.658095,-8.552141,1.209710,-5.315326,-0.895690,2.795473,8.854040,9.907102,-2.433158,-7.641810,-1.083596,-3.331597,6.242343,9.371785,4.186219],[5.474423,-3.098312,0.838514,5.263864,7.381040,5.567988,-6.873362,-1.649860,-5.853177,-0.357005,2.246292,-3.927531,8.324916,1.275984,-3.159166],[2.500507,7.448267,-2.545615,5.260374,4.197010,0.386360,5.644756,8.768629,2.782976,2.267730,-0.217337,-6.769146,-5.427373,-1.131029,-5.511268],[-8.645659,-4.330315,5.948515,-7.375986,-4.091311,-9.272988,2.868523,-7.765994,8.180750,-8.194770,1.493159,-6.368141,3.622765,5.001950,-0.679107],[-8.858747,4.423749,-4.749771,3.243690,-6.347362,-0.790609,0.244107,-0.343641,-9.446031,8.512527,-5.699935,4.372077,-1.144064,-5.544322,5.792003],[-7.119115,5.835587,-9.291421,-9.799984,8.576782,-5.151904,2.999272,6.670239,4.323833,-1.804493,-7.343187,3.508604,8.160303,-4.516738,4.266086],[-0.302307,9.512584,-8.003438,8.415718,-0.233348,8.586800,7.782131,-8.451573,-7.406789,-0.407269,1.818671,-2.282181,0.511351,-4.637621,6.955656],[1.674685,5.692435,1.053742,-2.447682,5.331013,7.333477,5.287820,1.743436,2.474776,2.664909,-1.935801,-3.138982,7.328642,-2.639680,8.228811]],[[-4.327700,4.769085,-5.667098,8.253361,-7.864124,4.666954,3.614820,-2.243701,-9.779312,-6.193421,6.828127,-4.072437,6.683201,0.368639,-4.440266],[4.190288,8.196945,-4.662499,-3.681548,7.410614,-4.267988,-3.679646,5.031571,7.423127,5.769359,-3.268732,-0.438499,-0.352395,-7.931829,-3.104038],[6.419757,4.892746,-1.841601,-0.673744,6.645276,1.252736,-7.941147,3.642891,-8.317073,8.443548,3.296688,7.056386,1.366422,3.956578,9.358273],[-4.630047,-3.004210,-0.345954,4.324326,2.581672,-3.492783,1.486316,-0.050980,-3.164331,3.318821,-6.034262,0.522107,-1.825757,-9.855728,5.390503],[3.169113,-3.165247,9.338221,7.043619,7.426993,-2.799607,2.776092,-2.627116,-0.971088,6.060533,-6.505901,-2.075622,7.026960,-4.686832,9.927365],[6.877844,6.993365,-8.244004,-6.164042,-9.248088,-9.256244,0.904659,-0.936617,5.385102,1.483365,-8.269996,7.813137,2.312239,4.362316,-0.982325],[9.774736,-3.874638,0.163144,-5.187932,-4.764774,1.921697,0.162933,-0.882009,-1.570182,-7.951626,-4.745478,4.367145,-8.486486,-4.309556,3.102226],[-4.883310,1.677032,2.328632,0.691371,-4.500471,-3.397756,-5.762636,0.161409,9.153968,-5.601677,5.412167,-6.558554,-5.064972,6.469185,4.674995],[9.877577,-5.076811,-4.727729,8.577058,2.540532,2.074431,5.961252,8.611378,-0.012268,-7.195982,-9.816155,-6.481158,3.672051,6.447163,9.872580],[0.748227,-1.982021,3.602696,9.206309,-0.725313,6.578863,1.978548,7.139141,6.147732,4.478356,9.510718,4.119244,3.466968,-0.892420,0.017766],[0.508479,5.262561,-2.303789,-5.216604,5.675529,-0.603255,-1.953364,-6.676037,-5.767304,9.097797,0.543007,-1.301360,-5.399174,5.288689,-1.738007],[6.068292,9.498130,-1.881859,3.953432,-0.168762,8.029561,0.179121,-2.744340,-1.198065,6.618746,-9.559422,-2.899604,2.559121,-1.412770,9.186832],[-9.832415,-0.054178,4.889371,4.715597,7.579653,-6.384820,7.016299,-9.560879,9.464894,-9.180084,4.548574,4.355046,9.606518,-3.361958,-5.290969],[6.126610,-4.467209,-5.389712,-1.425785,9.467400,3.158820,-4.987802,7.456119,-3.542008,3.571819,-1.230681,-0.730917,-7.342577,-2.782495,6.252596],[0.312574,6.950900,5.708343,0.073377,-4.541571,3.218889,-4.450761,-4.250373,2.483774,-1.105340,1.591598,9.767782,2.052490,-2.672424,-5.213559]],[[-9.675272,-3.924401,-8.099158,1.336769,7.979647,-4.801836,-5.995477,-0.383362,-2.861934,0.463566,1.332291,2.928971,-4.996082,-9.719303,4.449726],[5.310522,-7.850134,0.109923,5.900894,5.640803,-4.712626,4.998070,-9.280812,9.839195,4.218084,-7.176425,-2.296518,8.361777,-8.170960,1.652451],[9.113215,4.306944,-8.945942,-9.076211,7.356659,-1.316902,8.011064,-2.656345,4.550127,-1.875111,6.113262,4.695428,8.706222,-7.905323,9.174897],[2.152017,-6.608539,-7.700172,2.713686,-7.138870,-0.718436,4.601907,7.725755,-6.042896,5.878151,5.906990,3.611830,-1.427854,-3.980626,-3.213780],[-6.884791,-1.113683,-5.629709,8.202264,7.396283,-1.083778,-5.083515,7.188468,-2.025988,6.051286,-7.231902,-1.312080,1.256587,-9.672044,4.042318],[2.604039,-7.320233,9.827092,4.607308,3.262337,-7.617069,-1.366322,2.217148,-3.446985,1.920810,8.680026,3.812910,0.769134,9.221530,-4.423907],[-0.251464,-6.574187,7.214629,5.998851,3.880761,5.608497,5.571413,-8.978927,2.244461,-9.102150,-8.240349,-6.736767,1.207791,9.316030,-6.455299],[3.729425,4.649181,6.016161,8.613703,9.899921,5.304536,4.995590,5.292103,3.325054,-0.731403,1.634882,-6.443514,-2.286020,-8.399934,-0.458750],[5.972518,1.194367,6.982527,4.090074,-1.024232,3.389783,9.828316,-3.569021,3.936410,2.481102,3.792541,-3.785138,3.266203,8.568973,-9.122992],[-2.680988,0.293586,9.584208,-4.136616,-3.236131,9.703528,9.446766,-8.494510,6.473243,9.103743,1.233245,-5.280163,-0.624525,0.707792,0.279713],[6.853423,5.590095,5.894828,-2.505684,-5.013824,-9.303982,-1.327297,-7.825140,8.935547,-3.593633,9.548050,6.182427,-2.656497,7.892553,8.089076],[5.094029,-2.100058,-2.903398,7.710876,9.747326,9.923619,-5.949623,1.994102,-8.417482,-3.872593,-5.953304,-4.376773,0.415832,9.851429,-6.775384],[7.611361,-8.871495,3.238925,-5.333677,8.896406,-5.337768,2.284841,-9.166058,8.429767,-3.773882,-3.688433,3.434347,-3.364489,0.600248,1.222492],[4.929243,0.723328,-1.897764,-4.444936,-3.844305,2.589037,-0.908653,4.849876,7.799511,6.735282,-9.947184,-4.669370,-0.784686,7.679279,0.744807],[-7.388311,7.099555,-8.804836,-3.355166,-0.410859,-3.804814,3.576822,2.936723,1.670072,1.496896,-7.474534,-9.908377,-8.655215,9.731805,-9.584442]],[[-7.041305,0.097414,2.221162,-8.540744,-3.476597,-2.891780,-6.164397,5.405714,-4.283858,-0.772283,8.623865,9.825847,-3.230046,9.746250,8.367565],[-0.079054,-2.604990,-4.999148,1.709515,0.131376,2.157875,-3.921295,9.831033,4.482827,-5.939797,2.102827,-2.486130,-5.035666,-5.092219,4.010287],[9.027212,-7.994626,4.952011,6.148982,7.963997,9.384288,-2.028874,-5.974858,0.797621,3.696483,6.935230,-6.279614,-1.159126,-1.087815,-2.948384],[-9.871546,1.598605,6.984472,7.249270,7.571968,8.875135,-9.887042,-7.543788,8.964668,-1.457275,-5.026761,4.280406,-9.297534,1.981144,4.406884],[-4.844198,9.957153,-6.134530,-9.944111,-3.433588,-0.258190,-9.353661,8.901782,1.697875,3.225548,-6.782722,9.137620,-5.093446,0.288881,1.528216],[1.186616,-3.336577,3.578825,2.712842,4.855355,-3.192007,5.415703,-5.561230,0.388275,4.230300,7.355646,-4.288242,8.619708,-9.217249,-3.696299],[6.033008,2.687018,7.887822,-5.995736,6.367617,-7.825384,5.652976,-0.582686,-9.807951,2.043520,-7.326702,9.321591,-5.958708,0.928168,0.440252],[-1.840451,1.942779,8.158347,-2.515485,4.589395,7.627409,5.306672,8.500793,-7.600858,-5.058557,5.727757,-6.379547,5.700513,-1.389483,-9.368840],[2.560764,-8.751045,-2.876443,7.137256,-5.896735,-5.685689,-5.199104,-9.133298,-3.257141,0.403940,7.029281,7.938780,-7.914416,-3.383499,-8.351705],[-0.097290,4.835563,-5.053419,-9.012010,-6.092176,7.524073,-2.353954,5.090447,0.648415,1.378742,-2.555863,-0.364874,1.562293,-6.010259,9.629476],[-0.672598,-2.695994,-8.281366,0.671780,-0.015954,8.577922,3.117167,1.706996,5.202992,-7.855354,-9.403575,8.926216,-4.537131,3.308249,-5.981586],[3.701193,-7.927932,-8.776166,1.615645,-2.666448,5.185727,3.902932,8.463083,5.153543,5.756058,-7.952421,-7.444485,-7.296126,-1.222149,-0.350774],[-9.909650,3.893054,7.052983,-0.611962,0.582219,5.187085,-0.823283,7.627386,1.497111,-5.526115,-0.589615,-9.018561,-9.901222,-8.165452,-9.067017],[3.609655,-3.574500,-7.924554,-0.887626,-0.101290,8.259273,9.893672,-4.629581,2.937846,0.120996,2.671416,-3.652186,0.639553,-0.469358,0.378835],[-6.867160,-2.151877,5.883177,-8.928267,7.772461,-6.665007,-3.113154,-3.531918,-0.211765,6.101187,-5.000198,-9.853951,-3.425160,0.748021,4.545326]],[[-8.842790,-1.326452,-9.185914,4.296770,9.290491,-9.376205,8.410207,9.426794,3.466871,9.264076,-8.306491,0.241250,4.163442,-6.349154,3.000878],[2.651677,6.695600,-2.910235,-0.693374,-9.930503,-0.537249,5.590202,-6.375900,9.469391,-4.686480,-9.836763,-7.848959,1.101575,4.517691,1.817854],[3.233507,-0.743087,-2.671368,9.683222,-5.095864,-9.204487,-9.380287,-1.737862,8.903642,-4.971907,3.590960,-9.851139,9.336104,2.958770,1.805162],[0.281332,0.231743,7.290094,-5.014303,-8.585663,-4.639089,8.114669,-7.616362,6.128425,3.163190,-8.053498,-4.512929,9.171552,-8.962359,9.137538],[7.679392,0.224590,-8.836795,-5.786261,1.417866,-1.660688,2.157112,-2.152711,8.032884,6.884916,8.659485,4.587603,-0.504948,9.403362,4.470823],[-4.498216,7.723895,-3.256475,-0.609179,-3.502570,8.414351,-4.522570,-8.873419,2.100798,-5.251176,5.683291,-0.974755,-7.972476,4.138060,8.712671],[-5.689821,4.029249,3.234849,3.209065,-2.232506,6.429914,-2.061029,-2.007069,-7.077750,5.480622,8.381563,9.073935,5.417516,-5.773826,5.272694],[-2.456072,-9.222225,-3.128541,3.970423,7.806121,4.308988,9.049758,-9.002019,8.870416,8.622466,-4.301070,4.640617,-1.619484,5.390457,2.505894],[9.764576,-5.643386,4.391087,4.185294,-0.584909,-3.469579,-9.116355,-5.656316,9.436619,0.270923,-3.710849,2.037471,3.838817,-9.707918,3.968026],[-6.935189,5.842199,-9.903367,1.770242,6.172485,-1.769440,8.162955,-7.964868,-8.822859,1.830787,-8.229285,6.158548,4.233089,-1.579947,6.450741],[6.065247,-2.326518,-5.724175,0.613544,-4.620260,7.094126,-0.799544,9.544139,-3.151640,7.433280,-1.203852,5.151986,4.159184,-5.577619,2.189466],[8.552741,7.527453,3.396028,-6.552453,3.237602,-8.082722,-0.139533,-3.098251,7.264168,8.110724,-3.297858,-5.920804,5.468925,2.424093,2.315530],[1.729752,9.468648,-6.879211,-9.331707,-4.275980,-2.565610,-8.625000,5.012965,-4.176665,-6.118982,9.166573,0.527738,-4.822173,-5.188622,7.848056],[-1.621877,-9.530830,4.336608,2.545581,-7.211353,-9.064794,-6.154977,8.010858,4.789823,-1.555022,4.819621,-6.165139,3.824691,4.541958,-7.162770],[-1.378605,5.830401,4.729012,4.203132,-6.650523,-3.270598,-2.325568,7.826727,-6.782490,-9.710186,-0.687823,9.962789,-6.406881,-1.283752,-3.790067]]], dtype = "float64")#candidate|7346|(9, 15, 15)|const|float64
uop_7347 = relay.log2(const_7346.astype('float64')) # shape=(9, 15, 15)
output = relay.Tuple([uop_7347,])
output2 = relay.Tuple([uop_7347,])
func_7361 = relay.Function([], output)
mod['func_7361'] = func_7361
mod = relay.transform.InferType()(mod)
output = func_7361()
func_7362 = relay.Function([], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6367_call = mod.get_global_var('func_6367')
func_6368_call = mutated_mod.get_global_var('func_6368')
call_7395 = func_6367_call()
call_7396 = func_6367_call()
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_7417 = relay.TupleGetItem(func_6124_call(), 0)
call_7418 = relay.TupleGetItem(func_6126_call(), 0)
output = relay.Tuple([call_7395,call_7417,])
output2 = relay.Tuple([call_7396,call_7418,])
func_7427 = relay.Function([], output)
mod['func_7427'] = func_7427
mod = relay.transform.InferType()(mod)
output = func_7427()
func_7428 = relay.Function([], output)
mutated_mod['func_7428'] = func_7428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7458 = relay.var("var_7458", dtype = "float32", shape = (15, 7, 9))#candidate|7458|(15, 7, 9)|var|float32
const_7459 = relay.const([[[3.580085,3.087306,-2.821676,-3.547192,-1.870554,-7.128930,5.107987,1.209455,5.440190],[8.415141,7.477628,9.148708,-4.281685,2.220570,-1.223778,-5.404166,-1.875319,0.682033],[-7.110357,3.515068,2.019818,4.887869,3.779613,9.642621,-9.684204,-8.859492,3.090364],[3.469519,-2.002008,3.214661,0.970020,-6.515379,2.259197,1.354912,3.020201,-9.949180],[-2.049915,-4.897097,8.232765,-1.746204,-7.961449,5.420398,-7.639881,9.554079,7.357513],[2.936527,-1.483515,-3.324326,3.079236,0.720194,-3.452949,1.822051,-5.873952,-7.036306],[8.691269,4.696711,7.224805,8.751239,6.049246,5.435029,5.597247,-8.755080,-2.901145]],[[-0.231393,-7.448291,9.268433,3.008665,6.908028,-1.014276,6.040023,-0.796468,3.581170],[-4.234249,9.268755,3.076629,-0.097452,9.709322,-2.297327,-6.706543,8.288609,-8.271019],[0.935202,1.158805,7.669064,1.631666,3.601457,-8.960583,7.153470,4.737559,-9.201040],[9.342402,5.531752,5.351017,2.846483,-2.527847,-4.671869,8.496718,7.222207,-6.355404],[-0.766069,4.374411,9.673786,-2.145428,-2.271798,9.461525,-4.402482,-8.229514,9.962317],[1.498494,9.614586,9.784410,-0.082180,3.303252,4.249705,4.553522,5.993219,1.153004],[-5.848840,-2.329442,6.949323,4.707673,-7.134597,-1.252151,-9.466278,-6.892736,1.330671]],[[0.796057,-1.679933,0.837972,3.025584,1.478288,-6.527499,4.317823,-0.297591,3.886356],[-2.223545,9.070874,-6.947673,-7.770221,8.412883,-2.801224,1.977989,6.730860,9.847198],[5.986158,9.247700,4.565428,-0.244817,-0.780471,-2.640115,-2.952771,-1.187670,-6.708771],[3.466461,8.862698,8.075973,-7.117614,-9.809133,3.470603,-4.276875,-0.657537,4.168756],[4.678294,-5.754732,5.124766,-0.864509,7.686454,5.042009,0.033845,3.177621,-9.407864],[8.884637,7.586675,-9.737522,4.323234,8.755600,-4.163119,7.003800,-0.943625,0.700326],[0.019532,-5.073103,-1.303266,-2.513151,-4.348714,1.399881,-5.956948,2.845687,-4.301967]],[[-9.487224,6.327163,5.224541,4.983299,2.641345,-1.764524,5.225702,-4.305545,3.737932],[2.536942,5.431210,5.770778,-7.299482,3.989506,1.712457,4.194867,5.890176,0.826837],[-8.221887,1.264481,8.927719,-8.828762,4.147776,-3.890567,-7.910795,-3.418250,2.627703],[-4.018534,-8.316794,-1.508579,7.811320,4.929866,-4.686651,2.975195,3.445267,-7.746705],[-0.515063,4.054135,-1.751003,-1.147345,-0.294078,-2.089139,-2.768833,1.897205,-4.016287],[-3.181164,-9.815385,-2.307648,2.631935,4.540131,-3.256119,3.523284,7.621121,7.094749],[-6.302813,-0.948780,-6.209179,-0.201651,8.482569,8.872911,0.315597,6.715510,-4.233324]],[[-9.263122,0.690969,-1.022198,-3.122871,-1.946356,2.065028,5.461028,-7.672278,-9.461758],[-8.498241,6.336078,-4.723280,4.261091,6.754468,1.728296,-9.072042,7.528945,-3.251921],[9.221321,9.668816,-6.740516,2.804141,-7.482537,7.018050,7.897446,5.551737,6.863049],[5.800949,-5.872762,2.133843,-1.536693,2.846139,6.599951,-2.288703,-4.554382,-4.471277],[-0.431996,-7.289533,8.526806,9.506650,3.704918,-7.142658,-5.390614,6.465534,-0.975077],[7.674154,-1.706806,-1.841120,-6.464209,5.498096,-0.046746,1.562606,9.762509,7.977888],[5.332165,7.577262,3.022387,0.298633,-2.042144,-2.970684,8.386221,2.688746,6.799544]],[[1.984505,-7.969351,-2.639776,-4.076207,0.341137,-9.569528,5.433995,7.530779,-7.915477],[-9.299268,3.484826,5.089766,5.251776,9.140665,-6.851613,-9.061439,-4.515993,-5.455674],[5.466199,-0.979712,7.827263,0.117101,-6.755309,9.463075,4.170109,-3.629908,-6.321341],[7.465940,-5.107263,9.417489,9.242249,-2.115455,-7.144264,-0.872237,4.450382,6.261678],[2.722386,6.323607,9.058712,7.787058,-4.727372,5.598972,4.378330,-2.931510,5.578199],[-6.559131,0.229282,-0.995719,-5.214618,1.150850,9.328213,-6.428534,8.108567,-0.957041],[-3.751974,-6.658628,9.895488,-2.656789,-2.015050,-1.758545,-2.518168,-4.134508,8.564975]],[[5.681009,2.677539,-4.487996,5.614904,-0.134737,-5.708510,-0.678175,-2.600219,-9.621237],[-3.504082,-7.531488,5.496294,4.829919,6.856814,-9.868341,-6.425042,-7.644926,-2.463102],[7.176116,7.930842,1.158936,-0.737721,9.540170,-7.351888,9.179236,-3.530171,3.928373],[-7.226552,2.051508,-6.935064,6.568986,6.555469,-5.206371,-4.766151,-1.703595,8.851988],[5.055989,1.216483,-3.142727,-8.836276,-2.837433,0.576114,6.202454,-6.824883,-4.908336],[-7.378732,-1.601495,9.637057,5.713955,-9.681717,-8.927295,7.706526,7.750901,-5.096052],[-3.380595,6.438715,4.510529,-4.419064,2.686449,2.094295,2.191379,7.083214,0.239131]],[[9.051052,-7.264121,-6.549790,9.035278,-7.478529,-0.589786,7.435405,-4.066263,-8.413223],[4.120513,-2.695520,6.833365,-0.192070,2.413771,-3.952983,6.208717,2.587060,5.463807],[-6.584064,-9.745950,-2.735857,1.964313,7.561848,-0.418362,9.935872,9.227060,-3.274554],[4.877184,3.910369,-0.272679,4.074010,2.400836,4.610803,4.988995,-4.794683,0.694845],[-7.318890,-1.325877,-9.810937,2.285935,-2.001853,3.154773,-7.658424,-0.216263,5.404415],[2.966366,-9.684463,7.119498,-5.598105,5.439401,-9.136850,7.000560,0.023123,2.266246],[-0.144600,6.268905,0.207918,-7.600496,0.098627,1.249325,2.959722,7.212941,-0.332394]],[[-5.884189,0.128749,5.115579,-5.057354,3.259936,-8.252334,8.327712,7.753920,1.721313],[7.012486,-4.483000,-4.845279,3.160191,3.051676,3.453299,5.266774,-7.085491,2.951112],[8.977309,-3.534268,7.022971,1.493504,5.343950,5.412167,9.006654,-8.309633,5.331753],[7.162895,3.744951,-3.715324,-0.246557,-3.769885,-1.876745,-8.298115,6.249427,-6.555911],[5.319413,0.164884,7.281809,-6.954942,5.265682,-2.311065,4.838072,2.960136,-0.356441],[-2.829512,9.832616,4.194086,-4.242523,6.222172,-4.462160,1.431444,5.871004,0.790245],[4.063526,4.064466,-6.390372,-4.171474,-1.449252,-1.715419,4.432139,0.308175,6.864744]],[[-7.844469,0.676264,3.389932,-8.734317,6.754138,7.381875,-7.100090,-8.474301,4.552365],[9.505030,0.447544,7.602961,0.728643,-0.899414,-3.130259,4.054721,6.560284,-0.024401],[5.035697,0.312810,6.680176,3.091749,-4.083619,1.508407,-0.737726,8.415987,-1.067028],[-3.521465,0.838814,1.986429,-1.477719,-6.624040,5.179825,0.652064,1.941866,3.858538],[7.427671,-6.182898,4.030010,-3.722669,8.100445,4.887874,-8.649151,1.340723,-9.322313],[7.887085,7.674115,-8.319104,6.143393,4.899241,4.645931,8.768163,8.479309,-4.298363],[2.842871,3.170852,-5.855867,6.769595,-2.917402,-2.767389,4.603718,6.911553,9.848133]],[[7.185448,3.530062,-4.588613,0.528647,-1.386210,6.512427,5.270571,3.762775,6.804011],[8.219801,-3.101903,1.695317,-1.811279,2.116716,-5.003613,-4.388262,6.165500,-2.201599],[-2.718348,6.327848,4.184399,0.441572,6.079362,6.568806,-4.974406,8.901633,-6.936767],[8.501501,7.693411,-3.838836,8.912331,8.097397,6.872807,-9.780091,-5.370336,-2.079902],[2.226881,-3.103753,-8.555331,2.371657,9.119712,8.732094,-7.613625,-1.898402,0.187695],[6.225238,8.080407,3.326472,-1.025634,-2.199325,4.193564,-5.366122,-6.428345,-3.964367],[-2.918257,5.884407,-1.776273,4.260957,5.889286,7.350647,0.747535,-4.697583,8.730055]],[[8.716030,0.888591,-1.117789,-7.083458,5.445820,-9.705978,1.647071,-1.094248,-2.034340],[1.304408,1.700267,9.888597,-1.426534,0.999480,-5.741069,-1.183684,-1.600904,0.290437],[2.370680,-8.339460,3.748783,-6.857715,5.048852,4.183730,0.080934,-5.747615,-0.632111],[1.269830,-1.331512,1.016175,-9.159172,-5.588933,5.940886,5.208070,6.338185,-4.547327],[-2.651648,1.043666,6.007103,6.862235,1.773581,3.577903,-4.005617,-6.428126,1.588784],[7.395812,-9.137314,-1.322584,7.064401,-8.336696,7.138838,3.172635,1.042548,-7.372315],[-8.056618,9.395650,7.118609,8.496579,-8.379463,-3.231410,1.068371,2.325025,7.489951]],[[3.671726,5.093137,3.715461,-4.095524,1.085852,1.827345,-7.683301,3.572004,7.023966],[-8.359643,-8.157587,8.091673,-4.231002,-2.009860,-7.022804,-5.277835,4.789740,4.158999],[-4.389649,8.504815,3.691734,0.658845,-0.943045,9.883996,0.465584,-8.262254,-1.061434],[-6.983846,-7.923046,-4.369551,-6.166038,1.044579,8.323512,-9.851203,-1.740386,2.488458],[-7.277444,-7.363644,8.732877,3.601285,5.258159,3.110651,0.386945,7.476240,-3.580475],[-0.167434,-7.485829,-7.447786,-4.044486,8.982486,4.627561,-0.664369,-1.642559,-1.143950],[-8.411032,-1.614587,-1.565834,-9.168642,-4.827376,8.682368,9.651485,3.574913,7.927504]],[[6.013291,5.375164,1.212248,8.073894,-1.636976,-8.736913,-8.270220,-9.836369,-8.958500],[-0.916161,-6.173884,-3.086672,4.989264,1.726150,4.376959,6.777540,-3.723748,-8.646207],[9.295901,9.025442,0.027339,-3.659960,1.146783,-2.202637,4.255374,-6.165780,1.524758],[-5.179437,-6.333594,-0.260782,-6.537452,6.112030,-7.335825,-4.564538,3.626716,2.415576],[2.988040,-5.523281,3.291622,5.581912,2.344562,-0.993342,-2.678493,-4.985500,2.652869],[7.185243,-0.542877,-7.976200,-4.202117,-2.777295,8.626000,-8.873454,8.360161,1.991271],[7.621942,-4.307304,-4.408075,-2.772885,7.322818,5.740767,5.972144,-3.722344,2.780031]],[[-6.350007,-1.864187,-9.234995,-8.150656,-9.133805,5.259776,-4.828477,-1.396778,-6.578183],[-1.866445,-7.579127,4.947582,-3.744961,-3.616251,-6.198723,7.244033,6.362456,3.830004],[2.813423,-7.067619,4.863410,4.641245,-5.528780,-4.248823,-4.003767,0.549652,-1.736234],[5.046640,1.841834,-2.149017,6.959757,-5.973486,6.205072,-1.212162,-0.091436,-7.865474],[6.935805,2.184627,-2.494292,-8.808526,-7.411393,6.884926,-7.475756,0.631196,-5.678969],[9.624459,-9.162044,-7.124061,5.544635,-2.218589,7.066969,2.450850,6.214010,-8.239795],[6.060251,-5.571674,9.448722,-6.854888,-5.994469,1.396187,6.252194,1.326893,6.639178]]], dtype = "float32")#candidate|7459|(15, 7, 9)|const|float32
bop_7460 = relay.floor_divide(var_7458.astype('float32'), relay.reshape(const_7459.astype('float32'), relay.shape_of(var_7458))) # shape=(15, 7, 9)
output = relay.Tuple([bop_7460,])
output2 = relay.Tuple([bop_7460,])
func_7467 = relay.Function([var_7458,], output)
mod['func_7467'] = func_7467
mod = relay.transform.InferType()(mod)
mutated_mod['func_7467'] = func_7467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7468 = relay.var("var_7468", dtype = "float32", shape = (15, 7, 9))#candidate|7468|(15, 7, 9)|var|float32
func_7467_call = mutated_mod.get_global_var('func_7467')
call_7469 = func_7467_call(var_7468)
output = call_7469
func_7470 = relay.Function([var_7468], output)
mutated_mod['func_7470'] = func_7470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7099_call = mod.get_global_var('func_7099')
func_7100_call = mutated_mod.get_global_var('func_7100')
call_7528 = relay.TupleGetItem(func_7099_call(), 0)
call_7529 = relay.TupleGetItem(func_7100_call(), 0)
var_7534 = relay.var("var_7534", dtype = "float64", shape = (15, 9, 13))#candidate|7534|(15, 9, 13)|var|float64
bop_7535 = relay.logical_or(call_7528.astype('bool'), relay.reshape(var_7534.astype('bool'), relay.shape_of(call_7528))) # shape=(15, 9, 13)
bop_7538 = relay.logical_or(call_7529.astype('bool'), relay.reshape(var_7534.astype('bool'), relay.shape_of(call_7529))) # shape=(15, 9, 13)
func_3553_call = mod.get_global_var('func_3553')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_7548 = relay.const([[0.137916,2.730826],[0.804025,-9.829499],[3.172532,4.171439],[-6.935350,8.109326],[-2.504959,7.621591],[4.806564,2.104055],[-3.431143,-1.283747],[-6.364794,5.341045],[-8.524201,1.116009],[-2.577265,-8.656644],[3.154841,-8.206920],[0.161061,-7.415112],[7.771693,2.268477],[-9.287777,-3.227341],[1.450847,3.034410],[0.324694,-4.072192],[4.842121,5.898515],[2.495231,9.538103],[8.764782,4.857768],[0.871435,6.093976],[5.688538,2.269259],[4.997386,-2.987444],[-2.055593,-0.559520],[-9.095468,5.062540],[9.452227,-2.411216],[9.966854,9.158860],[8.075179,5.524496],[-8.921139,-3.856077],[8.367435,1.429866],[1.981751,-8.240992],[8.218571,0.359803],[6.567387,2.570671],[1.009034,6.385430],[0.973604,1.922388],[4.094488,5.836231],[8.425559,-2.500975],[3.570671,-4.692340],[4.670009,9.941965],[7.813072,1.515804],[9.656964,9.302751],[-4.116882,7.449067],[0.297408,-0.938914],[2.406234,5.331462],[2.289241,-9.391886],[3.462668,1.067571],[0.583128,-5.294878],[4.533772,6.025748],[-5.030713,3.459104],[8.656323,6.666300],[-6.021049,-5.663288],[1.577611,-8.127156],[4.892925,-4.976363],[7.766344,3.966885],[-1.802370,-7.932180],[3.444902,-7.385691],[-2.132855,-8.103286],[2.823078,7.187539],[-6.597146,3.170938],[7.631694,-6.416061],[-5.144486,7.277685],[4.615598,-7.178831],[-8.596480,5.882614],[-1.620295,-4.631356],[-3.283210,2.357599],[-4.162496,4.644898],[-1.468093,-5.834338],[-7.697607,-9.023414],[1.882704,0.077666],[-5.510391,-0.629321],[-8.366410,4.254424],[-2.399133,7.259125],[-8.661625,-5.413190],[8.898397,9.034639],[-1.986715,5.633167],[5.460520,-9.510060],[-7.833105,0.125318],[1.964013,5.523366],[1.215824,8.083124],[-9.256717,-9.353938],[1.814610,5.427806],[-3.629325,-5.227368],[6.705672,-0.845088],[7.577706,8.246246],[-9.425296,-3.791748],[8.767517,0.105783],[-9.232462,-9.519377],[0.038508,-3.767681],[2.262331,-1.518625],[-5.693292,-1.087143],[-9.196339,-5.733893],[3.799530,4.156053],[-2.298996,-1.048880],[-1.373862,8.430668],[-1.276968,3.189550],[-3.347925,-4.326778],[-2.939956,-5.912510],[2.505725,-9.004605],[5.470539,2.886405],[-4.170741,-8.014148],[-4.419386,-2.581904],[-6.187637,-7.982989],[2.117040,-8.363666],[0.704163,4.293974],[1.779575,-9.472880],[6.032766,0.473256],[-2.102596,7.788961],[8.930890,1.449594],[-1.564070,-6.649961],[4.996390,2.377470],[9.544137,0.784302],[-1.806828,-9.356210],[-4.807650,-1.825131],[8.864645,-9.223438],[-7.132397,-8.701288],[6.270578,-9.041099],[-5.596254,-0.894065],[7.405786,-6.404933],[1.865353,0.869985],[4.212520,-7.598807],[-2.466008,1.371256],[-9.285776,5.639806],[4.662352,-9.924236],[-9.904065,9.246815],[-7.058399,-6.428426],[8.751125,-0.402724],[-7.766199,6.475469],[3.014182,5.354065],[-9.296905,3.830090],[-3.911239,-3.309299],[-5.939316,-1.359201],[5.462381,7.748725],[1.551984,4.726891],[1.813203,-6.419470],[5.565688,6.617479],[1.374980,-3.299502],[8.560898,-7.404474],[3.647340,3.920335],[0.142644,-0.900114],[4.625437,-0.192118],[8.606412,-6.168868],[1.020102,0.353797],[-2.349815,9.868384],[5.652353,6.882000],[5.074922,5.541561],[-9.684099,5.078208],[-4.628958,-3.437248],[6.755349,2.064364],[-5.778318,9.042354],[-3.961106,-7.954785],[3.994935,-4.185680],[-0.824821,9.420878],[0.633235,-4.475191],[-5.557306,8.866078],[6.320880,-1.501879],[8.403654,8.560328],[6.547947,3.332906],[1.105194,-1.966708],[-4.863709,-9.379915],[9.170499,-6.132635],[-5.799502,-4.821310],[-9.925083,8.657316],[-3.818976,1.411755],[5.530182,2.610191],[5.279805,-5.043297],[8.671880,-0.820197],[7.200255,-1.059304],[-7.244118,3.226635],[2.745591,9.111947],[-6.606761,2.049853],[8.336116,-4.934813],[0.990984,4.027933],[-2.208616,-6.995154],[3.957737,9.430715],[9.981348,7.180290],[4.278384,-0.391088],[-1.214790,-3.469146],[-9.122045,0.772399],[-0.797262,5.478770],[-8.841414,7.617349],[-6.130911,-6.103875],[-3.665744,3.026276],[0.057060,9.382358],[9.154966,3.132056],[-8.101421,-2.014613],[1.807055,-9.811229],[7.583968,4.057043],[-1.293336,3.007823],[-5.153282,-8.329724],[7.361176,-0.662992],[-8.816701,2.765882],[0.405978,-0.240975],[1.664244,9.250938],[-4.009592,-8.656735],[7.292352,5.298127],[-2.536463,-5.164487],[-1.824617,4.959526],[-1.347438,-9.850958],[-0.465133,5.410387],[-0.798436,8.787631],[-9.323536,-0.506629],[-3.418358,5.531872],[2.753809,2.641846],[9.101170,-2.583589],[9.534196,5.617749],[-2.912100,-7.102248],[-7.986064,-1.966819],[1.047288,-8.194498],[-9.271212,7.911152],[9.660767,-8.804715],[4.075861,7.260979],[-7.219664,4.733082],[6.339263,8.444342],[-4.078793,-0.689543],[2.331061,-9.239724],[-5.763972,0.678629],[1.234092,1.095222],[8.454770,8.700845],[-2.249145,8.512963],[7.488169,-1.904271],[2.399603,-6.799175],[9.701563,-8.800139],[8.990913,-7.016583],[7.968466,8.512647],[-2.764927,-4.180631],[-9.438397,-5.364285],[-7.729039,5.229621],[-8.408014,-5.799942],[-3.037195,-4.803855],[-8.763226,-7.850970],[0.749329,1.891332],[-2.691332,0.312625],[-0.854988,-6.285787],[-2.038891,4.014309],[-9.955743,-1.454441],[-3.642650,1.637567],[4.335283,-7.158303],[-3.730008,1.597229],[2.632367,5.894183],[1.309498,-6.361405],[-0.215062,3.336631],[-3.216729,7.110772],[1.953214,9.202306],[-3.955985,-8.553619],[-6.758759,2.941453],[-0.414036,-6.410215],[-8.777452,9.889046],[5.970896,3.737157],[0.006944,-4.474739],[0.466065,-2.492881],[5.616092,-6.207312],[-0.200473,5.187842],[7.992889,-4.359840],[6.721212,-9.093424],[-3.316028,-6.308587],[2.399548,1.999601],[-3.342000,-9.026975],[3.491069,-2.987578],[9.544978,-9.397573],[-6.820877,-4.100768],[2.568015,9.436006],[-5.197685,-0.282616],[6.495162,-1.012686],[-6.765744,7.104869],[1.428408,-9.062929],[0.201170,5.337792],[5.467158,-3.326874],[8.345125,4.393410],[5.480839,3.013722],[-3.226140,-7.697210],[-0.998816,1.981680],[-5.598401,0.599052],[-4.699851,-6.176050],[8.319374,-7.187323],[-2.856061,-4.336962],[-0.881149,-8.206348],[-0.368352,1.974030],[5.680889,-2.685274],[-7.103354,-2.599620],[2.432439,-6.337047],[8.621743,9.232816],[-2.078325,9.002346],[-8.652953,-8.663317],[8.455525,5.580393],[-8.642843,8.637734],[-4.154047,-9.925094],[8.132200,-0.194904],[-6.579213,-4.136968],[6.439411,-0.088711],[-5.301094,-6.191669],[8.378438,6.676264],[4.291496,-0.409551],[3.629293,1.331333],[-0.835989,-0.043673],[-7.663441,-4.482052],[4.874719,-5.864928],[-2.128195,-7.087835],[-7.743289,9.393848],[7.240775,7.160191],[7.218494,-1.165270],[5.274501,9.290954],[7.161366,2.681809],[-2.952186,8.588004],[-8.788530,-9.086463],[-3.028936,8.118758],[-9.794279,2.368238],[7.765261,-0.484963],[-1.969716,6.141357],[3.009639,9.351909],[-8.737780,-6.962973],[-2.110105,-9.650651],[-7.766553,8.656945],[5.302124,7.075877],[-1.810131,2.377711],[2.639923,-2.342350],[9.352257,8.959945],[-0.991995,4.973061],[6.553908,4.837665],[2.434836,8.951232],[5.752698,6.297386],[7.122193,-6.750903],[2.392244,-8.592676],[7.880257,-9.023497],[-1.264089,0.317252],[2.028971,-3.201143],[0.976439,-0.367444],[2.788011,-2.800645],[0.473876,-2.052652],[-2.107599,-0.901962],[-8.035702,0.695813],[0.227081,-7.311308],[1.041660,7.151864],[4.142009,-7.172072],[0.114480,4.680163],[-3.587839,6.055468],[1.460841,-8.495179],[-1.550730,4.010660],[5.772248,3.923672],[2.302830,5.919370],[7.056109,4.087767],[-4.219189,8.437423],[-9.349883,-9.316016],[-6.308741,-2.111809],[4.524811,-5.613746],[3.435986,4.383646],[-3.828463,-4.339874],[-9.891814,-9.490723],[-4.285370,-6.516797],[9.433468,-9.638445],[5.413778,-1.781013],[3.769929,5.381876],[-6.391988,-1.765780],[-1.762513,-4.509364],[-9.580524,-9.560178],[-0.960642,6.680815],[-1.890206,5.717944],[0.726535,1.971263],[9.250978,7.846699],[7.359866,9.423392],[-4.856023,0.940574],[0.166095,0.423820],[-9.114502,4.839409],[-6.288558,4.489210],[-7.097315,1.551198],[4.926628,-7.982690],[-5.175392,3.232944],[0.846427,7.383737],[-5.617421,-2.238614],[5.903147,-8.878832],[6.011472,-1.928435],[-8.525339,-0.958240],[7.548584,-7.685005],[-7.268770,0.081604],[-7.810705,-3.057554],[9.537322,3.713913],[1.416009,-7.468660],[2.930684,-5.402777],[-6.551838,3.671656],[1.423224,3.587515],[5.695438,4.476702],[7.466900,-6.326963],[6.634596,5.223922],[7.824006,-8.293499],[-7.758531,8.261721],[8.157292,-4.157434],[-6.519284,-2.004154],[7.203031,-3.843090],[-2.275870,-8.379737],[-2.155630,9.064748],[-7.384575,1.100826],[-4.081366,-9.205206],[-6.614899,-7.838087],[9.334919,6.423043],[-0.303381,1.131072],[0.222630,-3.104451],[3.804615,4.091274],[-7.005871,8.825738],[2.693185,-4.252510],[7.707691,-7.052901],[-1.379239,0.591893],[1.126640,5.116799],[5.986244,9.718512],[2.714295,-7.637333],[1.387862,-2.080293],[-4.806215,-9.925917],[-3.690874,5.343809],[9.649246,4.161186],[6.648977,8.282932],[1.404306,-0.394935],[-4.066042,-1.984207],[-0.058571,-2.410487],[-4.686202,5.309929],[8.331593,0.137656],[-9.364975,4.768930],[-6.802898,3.038656],[4.364164,3.981634],[7.285069,8.336569],[1.279882,8.646231],[-7.680852,4.106795],[1.295377,-3.634737],[-1.018517,-4.545172],[-1.520839,-9.732718],[4.846528,-5.783839],[1.401753,5.591975],[-6.863659,-6.772928],[-7.289474,4.952617],[2.412660,-0.167617],[8.172008,7.184626],[-9.945807,-0.007152],[7.404652,6.549110],[-7.809441,-1.709667],[5.792289,-7.723305],[-2.254579,-7.587107],[1.743244,-9.798340],[-1.732232,9.064563],[3.639398,-3.362590],[-9.996107,-8.361410],[2.981598,-3.505538],[-9.351993,4.581601],[9.247281,9.174606],[-8.979971,-0.377318],[8.758342,9.779642],[0.554061,2.912498],[3.337453,-9.438088],[-9.183398,-6.246440],[4.650501,4.848358],[6.432345,4.451573],[-9.024136,-9.486013],[-4.142990,-3.555714],[7.684710,-3.819990],[-6.252777,5.809255],[3.921035,-9.773822],[0.800278,7.194446],[2.988728,-8.255887],[-2.784919,7.777746],[-6.725560,5.296167],[0.802892,-7.105815],[1.546457,4.426478],[-8.458422,-0.805074],[3.585532,6.635623],[0.481673,8.566395],[5.401238,1.898033],[5.496298,-9.291283],[-2.299979,3.954307],[-1.805488,0.448641],[-5.690918,4.766690],[1.925975,-6.545106],[-6.599651,1.411863],[-8.078068,7.352672],[-2.017109,3.301292],[9.958558,9.670960],[-9.452341,6.277316],[-5.318912,-8.278904],[-9.445501,6.243943],[4.549913,-9.665016],[7.909584,5.939297],[-0.852115,7.678877],[7.180727,-8.060043],[8.468214,7.767538],[-3.926690,-8.727768],[2.306087,9.539442],[-0.138943,7.747196],[-6.254835,-8.700275],[-3.058302,-3.434196],[-7.079380,4.610254],[-3.785522,-2.040302],[-5.590145,6.587210],[2.978129,8.009641],[1.151089,-3.465849],[-2.512645,1.545686],[0.539906,-0.382963],[-0.568880,-8.226679],[2.983300,-6.678319],[1.819197,7.590429],[-5.784487,3.435256],[-4.244838,-5.678679],[3.386039,7.335602],[4.319708,0.753569],[-1.561287,-1.197904],[-1.185483,9.586046],[-2.384848,1.283635],[5.079834,8.703735],[-7.619408,0.627833],[-9.011167,-0.316820],[-9.359819,6.262664],[-9.912146,-4.842117],[-2.321369,2.026377],[2.512119,-0.120869],[1.430368,1.262195],[-1.619639,-9.916952],[3.976417,5.328506],[-7.182656,-8.093126],[-1.300852,-4.540126],[-6.906197,3.037386],[2.038909,7.109543],[-4.208181,-9.997197],[7.038560,-3.892632],[2.793826,-0.857570],[-0.982035,-5.079706],[0.663669,8.889309],[-5.167566,7.412165],[-3.440678,0.025835],[4.213201,-2.748225],[3.088408,8.007739],[-8.140859,-9.848902],[2.810202,2.812588],[7.721922,-5.927560],[-0.090046,-5.138140],[3.047438,5.780120],[-3.576357,0.641047],[0.364049,6.170041],[-2.968293,2.009367],[-4.808083,-3.945044],[0.588235,6.908034],[3.444798,2.909419],[3.210919,-0.778469],[8.524572,-6.909942],[7.872529,-2.546049],[9.899454,7.573479],[-7.618988,0.303385],[-0.270348,-5.175035],[3.465225,-5.252494],[6.680863,-2.142538],[6.193999,9.446076],[-6.057479,3.562745],[9.377251,-0.900641],[3.665529,1.526253],[-0.665730,6.791533],[-9.543999,-0.995587],[0.195856,4.537091],[2.132851,-6.845839],[-3.714641,4.640459],[3.299373,-0.338406],[-8.654299,-2.029686],[-7.753489,-6.935669],[-8.225419,-7.637952],[9.402957,-6.386521],[9.761579,-4.310629],[1.644397,-1.553831],[-7.815422,-1.619424],[-0.786906,5.730906],[7.882603,-7.305704],[2.944344,-8.411575],[-7.092874,-6.772025],[-7.474097,6.310301],[-6.683720,-2.022963],[-7.740067,-1.489470],[-0.779774,-1.705482],[2.503031,-9.637465],[5.274396,5.410333],[9.077066,-0.526544],[-8.531576,1.419051],[6.867755,-3.789292],[-0.005493,9.940661],[7.949254,-3.581405],[-8.614516,-6.135044],[-0.034291,-1.718417],[-9.884377,-7.007891],[-0.172742,1.775116],[7.532323,0.416593],[9.555832,9.759811],[-6.682227,-6.263918],[-1.235471,1.535234],[-0.781384,-8.207355],[-8.139374,-3.391583],[-7.346862,-6.153380],[-6.697148,7.716413],[4.178339,-0.970353],[6.808254,-6.297010],[6.897758,3.328976],[6.584401,-8.279497],[8.792790,-1.682163],[-9.734626,-0.564970],[3.062586,5.217507],[-8.494416,-3.680136]], dtype = "float64")#candidate|7548|(594, 2)|const|float64
call_7547 = relay.TupleGetItem(func_3553_call(relay.reshape(const_7548.astype('float64'), [9, 11, 12])), 0)
call_7549 = relay.TupleGetItem(func_3556_call(relay.reshape(const_7548.astype('float64'), [9, 11, 12])), 0)
uop_7556 = relay.atan(bop_7535.astype('float32')) # shape=(15, 9, 13)
uop_7558 = relay.atan(bop_7538.astype('float32')) # shape=(15, 9, 13)
output = relay.Tuple([call_7547,const_7548,uop_7556,])
output2 = relay.Tuple([call_7549,const_7548,uop_7558,])
func_7576 = relay.Function([var_7534,], output)
mod['func_7576'] = func_7576
mod = relay.transform.InferType()(mod)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7577 = relay.var("var_7577", dtype = "float64", shape = (15, 9, 13))#candidate|7577|(15, 9, 13)|var|float64
func_7576_call = mutated_mod.get_global_var('func_7576')
call_7578 = func_7576_call(var_7577)
output = call_7578
func_7579 = relay.Function([var_7577], output)
mutated_mod['func_7579'] = func_7579
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7626 = relay.const([[[-9.571861],[6.692034],[-9.775688],[5.067724],[4.071807],[-1.122969],[1.569973]],[[8.512865],[-1.743354],[-8.116027],[9.793197],[-0.326677],[7.891017],[-9.718428]],[[-3.709321],[6.155210],[-4.703796],[-1.001226],[-1.226791],[-8.701763],[-6.414246]],[[-3.866097],[-9.924427],[-6.488464],[3.763081],[-3.953951],[6.408426],[-4.594528]],[[-2.116110],[-3.254184],[-8.046989],[-2.606576],[-1.411666],[-9.898602],[-9.314232]],[[5.754382],[1.719208],[-7.844996],[6.972007],[-8.737069],[2.103973],[-6.336034]],[[0.171741],[9.047970],[9.247941],[-5.087366],[-9.603484],[-6.975600],[6.643441]],[[1.815955],[1.435479],[0.170620],[-0.840467],[1.602861],[-6.255713],[-3.219618]],[[-6.356807],[-5.687830],[6.426023],[2.321203],[0.544720],[-5.285263],[-5.561046]],[[4.700372],[8.304628],[7.347581],[4.352792],[2.832434],[1.945128],[1.891912]],[[5.184582],[3.635376],[-8.688963],[0.330708],[-6.298860],[-7.047761],[4.875945]],[[0.490006],[-4.580852],[8.725250],[4.143600],[-4.530565],[4.346764],[-0.955667]],[[-8.213961],[-4.778736],[1.871989],[9.003153],[-2.361665],[2.996200],[-4.039529]],[[-2.889720],[-3.054872],[1.630597],[-5.459950],[5.308921],[-0.168852],[-3.533332]]], dtype = "float32")#candidate|7626|(14, 7, 1)|const|float32
uop_7627 = relay.log2(const_7626.astype('float32')) # shape=(14, 7, 1)
output = relay.Tuple([uop_7627,])
output2 = relay.Tuple([uop_7627,])
func_7634 = relay.Function([], output)
mod['func_7634'] = func_7634
mod = relay.transform.InferType()(mod)
output = func_7634()
func_7635 = relay.Function([], output)
mutated_mod['func_7635'] = func_7635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mod.get_global_var('func_6316')
func_6318_call = mutated_mod.get_global_var('func_6318')
call_7667 = relay.TupleGetItem(func_6316_call(), 0)
call_7668 = relay.TupleGetItem(func_6318_call(), 0)
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
var_7685 = relay.var("var_7685", dtype = "int16", shape = (45, 1))#candidate|7685|(45, 1)|var|int16
const_7686 = relay.const([9,2,4,-6,8,-10,-6,-5,-7,1,-5,-3,1,3,6,7,-6,3,-1,-2,-6,-8,-5,-9,10,-6,10,3,-7,-7,4,6,-5,1,9,6,8,-10,-7,-7,8,-3,3,2,-10,-10,-4,-8,7,-4,-3,-4,6,-7,-4,1,8,-2,10,8,2,-6,-6,5,2,-2,4,9,3,-3,8,10,-8,6,6,-7,6,7,8,7,-5,-8,-6,-7,10,-7,3,-6,-2,10,8,8,-3,-8,-9,4,4,1,8,1,7,8,-7,-5,-9,-7,-2,-1,-2,-7,-3,-4,-2,9,2,-6,9,-3,8,-5,10,-6,-9,-7,-7,1,-5,7,10,5,-9,3,7,-4,3,-4,1,7,-6,-10,-1,2,-4,3,-8,-5,3,5,-5,7,-8,3,2,9,8,-2,8,7,5,-7,-10,10,-4,3,3,7,2,1,4,1,-9,3,7,3,-1,6,5,-7,2,8,10,5,7,-6,-5,-3,8,-4,-5,6,7,9,10,3,-6,7,6,7,-9,-6,-8,1,-6,-2,3,-9,1,-4,-4,3,8,5,2,-9,7,-5,8,-2,2,9,1,8,6,3,9,-9,5,-2,7,8,-9,-10,1,-3,-5,10,10,8,-2,-5,6,-9,-9,-8,2,-10,-10,-10,-2,6,7,3,-8,5,-3,-10,-6,2,9,10,9,-4,10,-10,1,10,-5,-5,-6,-2,1,-2,2,2,5,5,-4,2,5,6,1,-1,-9,-1,9,5,-7,6,-10,-3,10,10,-8,-8,6,8,10,-4,-8,-5,10,6,9,-9,10,-6,1,-6,8,-2,10,2,9,-10,-2,-3,-8,-10,-3,-6,2,-7,7,1,-9,-8,3,8,7,-9,6,-9,-5,9,-9,-2,6,1,-3,9,-7,1,-8,-2,-1,-1,-6,-9,-1,-8,-5,1,-2,-7,7,8,-4,4,10,-4,-6,7,-7,-3,-7,1,1,-7,4,-9,1,-7,-6,4,6,8,5,5,4,-2,-9,6,3,-5,9,-2,-9,5,7,-3,9,6,-9,-8,9,3,-3,9,2,6,8,-2,-6,-6,6,7,-3,3,-4,-2,-3,10,-3,5,-5,-7,-1,-1,3,10,-7,9,10,1,-5,6,9,7,6,-7,4,-5,-10,10,8,-7,8,6,-9,1,-1,5,4,-1,-5,3,-4,-4,9,-10,-7,1,-4,-1,-5,9,9,5,6,-6,-6,-2,-9,5,-4,6,-5,-5,5,3,10,5,6,5,-6,4,-9,-4,-5,-10,-5,8,-5,-10,1,-2,5,-10,-7,-4,-5,-9,-7,5,-2,-10,-1,-9,-1,9,-2,3,-8,10,-8,-10,-5,7,10,3,-7,10,-1,-8,-10,6,-8,9,4,3,6,-6,2,2,-5,5,7,-4,6,3,-7,-10,-10,4,10,5,-1,-4,4,7], dtype = "int16")#candidate|7686|(540,)|const|int16
call_7684 = func_938_call(relay.reshape(var_7685.astype('int16'), [1, 9, 5]), relay.reshape(const_7686.astype('int16'), [12, 9, 5]), )
call_7687 = func_938_call(relay.reshape(var_7685.astype('int16'), [1, 9, 5]), relay.reshape(const_7686.astype('int16'), [12, 9, 5]), )
output = relay.Tuple([call_7667,call_7684,var_7685,const_7686,])
output2 = relay.Tuple([call_7668,call_7687,var_7685,const_7686,])
func_7688 = relay.Function([var_7685,], output)
mod['func_7688'] = func_7688
mod = relay.transform.InferType()(mod)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7689 = relay.var("var_7689", dtype = "int16", shape = (45, 1))#candidate|7689|(45, 1)|var|int16
func_7688_call = mutated_mod.get_global_var('func_7688')
call_7690 = func_7688_call(var_7689)
output = call_7690
func_7691 = relay.Function([var_7689], output)
mutated_mod['func_7691'] = func_7691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6226_call = mutated_mod.get_global_var('func_6226')
call_7715 = relay.TupleGetItem(func_6224_call(), 0)
call_7716 = relay.TupleGetItem(func_6226_call(), 0)
output = relay.Tuple([call_7715,])
output2 = relay.Tuple([call_7716,])
func_7722 = relay.Function([], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7722_call = mutated_mod.get_global_var('func_7722')
call_7723 = func_7722_call()
output = call_7723
func_7724 = relay.Function([], output)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_7765 = func_6245_call()
call_7766 = func_6245_call()
output = call_7765
output2 = call_7766
func_7767 = relay.Function([], output)
mod['func_7767'] = func_7767
mod = relay.transform.InferType()(mod)
mutated_mod['func_7767'] = func_7767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7767_call = mutated_mod.get_global_var('func_7767')
call_7768 = func_7767_call()
output = call_7768
func_7769 = relay.Function([], output)
mutated_mod['func_7769'] = func_7769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7185_call = mod.get_global_var('func_7185')
func_7186_call = mutated_mod.get_global_var('func_7186')
call_7775 = func_7185_call()
call_7776 = func_7185_call()
output = call_7775
output2 = call_7776
func_7790 = relay.Function([], output)
mod['func_7790'] = func_7790
mod = relay.transform.InferType()(mod)
output = func_7790()
func_7791 = relay.Function([], output)
mutated_mod['func_7791'] = func_7791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6226_call = mutated_mod.get_global_var('func_6226')
call_7792 = relay.TupleGetItem(func_6224_call(), 0)
call_7793 = relay.TupleGetItem(func_6226_call(), 0)
output = call_7792
output2 = call_7793
func_7819 = relay.Function([], output)
mod['func_7819'] = func_7819
mod = relay.transform.InferType()(mod)
mutated_mod['func_7819'] = func_7819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7819_call = mutated_mod.get_global_var('func_7819')
call_7820 = func_7819_call()
output = call_7820
func_7821 = relay.Function([], output)
mutated_mod['func_7821'] = func_7821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_7839 = func_6245_call()
call_7840 = func_6245_call()
func_7281_call = mod.get_global_var('func_7281')
func_7284_call = mutated_mod.get_global_var('func_7284')
var_7859 = relay.var("var_7859", dtype = "int8", shape = (168,))#candidate|7859|(168,)|var|int8
call_7858 = relay.TupleGetItem(func_7281_call(relay.reshape(var_7859.astype('int8'), [6, 28])), 2)
call_7860 = relay.TupleGetItem(func_7284_call(relay.reshape(var_7859.astype('int8'), [6, 28])), 2)
output = relay.Tuple([call_7839,call_7858,var_7859,])
output2 = relay.Tuple([call_7840,call_7860,var_7859,])
func_7871 = relay.Function([var_7859,], output)
mod['func_7871'] = func_7871
mod = relay.transform.InferType()(mod)
var_7872 = relay.var("var_7872", dtype = "int8", shape = (168,))#candidate|7872|(168,)|var|int8
output = func_7871(var_7872)
func_7873 = relay.Function([var_7872], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mod.get_global_var('func_6316')
func_6318_call = mutated_mod.get_global_var('func_6318')
call_7907 = relay.TupleGetItem(func_6316_call(), 0)
call_7908 = relay.TupleGetItem(func_6318_call(), 0)
const_7925 = relay.const([[[-7,-3,-3,-7,2,7,7,4,4,-9,4],[2,7,-7,10,1,2,-2,10,3,5,6]],[[10,7,1,-10,-2,-4,-8,2,-8,5,6],[4,-5,8,7,-1,5,2,-4,2,-3,-4]],[[9,8,10,7,1,4,8,-7,5,3,5],[-7,-8,-2,-5,-3,-4,-2,-6,-10,2,-2]],[[-5,7,-6,3,8,8,-9,6,-1,-10,1],[9,1,-2,-5,-3,-5,2,3,-3,-5,4]],[[3,8,10,-9,10,-6,-1,-5,-5,9,-1],[3,8,2,9,7,-7,-8,-5,-7,8,7]]], dtype = "int8")#candidate|7925|(5, 2, 11)|const|int8
bop_7926 = relay.logical_and(call_7907.astype('bool'), const_7925.astype('bool')) # shape=(5, 2, 11)
bop_7929 = relay.logical_and(call_7908.astype('bool'), const_7925.astype('bool')) # shape=(5, 2, 11)
func_7819_call = mod.get_global_var('func_7819')
func_7821_call = mutated_mod.get_global_var('func_7821')
call_7933 = func_7819_call()
call_7934 = func_7819_call()
output = relay.Tuple([bop_7926,call_7933,])
output2 = relay.Tuple([bop_7929,call_7934,])
func_7940 = relay.Function([], output)
mod['func_7940'] = func_7940
mod = relay.transform.InferType()(mod)
output = func_7940()
func_7941 = relay.Function([], output)
mutated_mod['func_7941'] = func_7941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6657_call = mod.get_global_var('func_6657')
func_6659_call = mutated_mod.get_global_var('func_6659')
call_7947 = relay.TupleGetItem(func_6657_call(), 3)
call_7948 = relay.TupleGetItem(func_6659_call(), 3)
output = relay.Tuple([call_7947,])
output2 = relay.Tuple([call_7948,])
func_7950 = relay.Function([], output)
mod['func_7950'] = func_7950
mod = relay.transform.InferType()(mod)
output = func_7950()
func_7951 = relay.Function([], output)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_7967 = relay.TupleGetItem(func_6048_call(), 0)
call_7968 = relay.TupleGetItem(func_6050_call(), 0)
func_7950_call = mod.get_global_var('func_7950')
func_7951_call = mutated_mod.get_global_var('func_7951')
call_7988 = relay.TupleGetItem(func_7950_call(), 0)
call_7989 = relay.TupleGetItem(func_7951_call(), 0)
output = relay.Tuple([call_7967,call_7988,])
output2 = relay.Tuple([call_7968,call_7989,])
func_7991 = relay.Function([], output)
mod['func_7991'] = func_7991
mod = relay.transform.InferType()(mod)
mutated_mod['func_7991'] = func_7991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mutated_mod.get_global_var('func_7991')
call_7992 = func_7991_call()
output = call_7992
func_7993 = relay.Function([], output)
mutated_mod['func_7993'] = func_7993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8024 = relay.var("var_8024", dtype = "float64", shape = (10, 2, 15))#candidate|8024|(10, 2, 15)|var|float64
uop_8025 = relay.asin(var_8024.astype('float64')) # shape=(10, 2, 15)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
const_8029 = relay.const([-5.807564,-2.330322,5.570978,-1.077200,-7.080064,8.232052,-3.991428,4.229913,-0.965604,-6.109351,-9.297630,3.795041,-7.413147,-1.666085,1.111782,8.349245,6.445906,3.837611,0.259563,-1.647826,-8.501854,8.972630,-8.207816,-1.119441,-1.051835,-2.658141,0.300264,2.501246,-3.324800,9.398808,-8.334423,5.866014,-7.531060,-8.593639,-5.372557,-1.679390,-9.719941,-5.570224,-9.867921,0.051452,5.194152,-7.207347,0.760234,-0.196835,2.061030,3.954791,-4.477347,-2.306808,6.533968,-5.774627,5.199101,-9.023020,6.251073,-3.280525,-1.837747,-8.172611,-1.888971,-2.195473,3.178574,6.915998,-7.786322,-1.354402,4.856215,-8.720276,2.738293,2.748198,0.749523,-9.269529,-4.846616,-8.171093,-6.355872,-2.097982,0.240780,-5.703213,-7.567620,-2.305464,2.524460,9.324188,3.800326,8.950966,7.536307,7.229729,5.481228,5.108677,9.341351,-1.147647,-2.358394,-0.869637,6.890869,-5.005672,-5.984678,-5.526401,7.408516,-3.966640,7.134253,9.774365,-3.211531,5.517602,-4.464595,2.837376,9.409648,9.868864,5.944576,6.956072,9.555975,-3.997053,-3.028407,3.317328,-8.660989,-1.980072,0.976822,-1.831474,1.959022,6.082480,-7.811552,4.862052,-0.108776,-9.825703,-5.138514,-0.661852,2.407694,0.084314,-1.125393,-5.281220,-3.464759,-2.938170,-0.114496,-8.962920,2.838151,-1.006380,-6.920341,3.758945,-1.470660,-0.232918,2.799147,-3.279180,1.168971,3.982184,-9.719828,2.321132,-0.286443,7.961601,-4.583744,-2.730123,0.072431,-1.703325,-2.992712,0.942646,8.050045,4.746980,-7.923030,8.089145,8.122145,5.312469,-7.543952,0.960640,7.583200,-8.774555,-6.639402,3.922271,5.991867,4.564222,8.339649,-4.681131,1.305738,9.719627,-9.565382,4.180437,2.547908,3.843629,2.488381,7.828397,9.100400,7.284826,-1.558708,-5.599908,-9.110198,-4.953424,-4.605216,-1.372541,-0.075782,3.679388,-1.365493,6.496811,-4.936180,-2.257388,1.921770,-9.352390,3.814731,-8.129630,-2.507950,0.465623,-7.561970,-3.610125,-2.800105,-9.134570,-5.893991,1.555427,3.815553,2.980178,-7.530085,4.327958,0.748925,-0.984912,2.981366,-1.952278,2.217500,-4.086934,2.340556,-6.813817,4.307854,9.995342,5.613951,3.371857,9.780783,-2.656436,-4.647735,9.207437,4.973952,-9.339057,-8.689724,-1.612182,-8.779296,1.523411,8.231690,4.278581,8.026173,-9.416682,-5.596087,4.680118,-2.950048,4.480758,2.055811,-2.017108,-0.025971,-8.977334,-8.263600,0.067287,1.249941,-8.482040,-5.001628,-1.575491,-6.301483,-5.333883,-7.478628,-2.162161,6.762108,9.355679,-3.528086,0.947998,-2.381947,0.208116,-3.049968,2.431213,-7.595924,-0.159819,3.073074,-6.103203,-3.072256,-1.747168,-8.851472,5.462651,-3.117094,-5.598549,9.288183,-8.849521,8.353809,-9.175862,-6.991362,-1.871553,1.291540,5.105105,2.313335,7.445579,6.724117,-6.009292,-5.917085,5.881049,-7.452891,-9.527080,-3.107974,2.526164,-5.372724,4.924439,2.222156,5.875014,4.730652,1.697438,-8.638117,-4.015604,7.927775,1.071278,-1.212917,-1.720126,6.596280,-2.092517,8.240120,6.198430,3.112087,-9.604843,-7.616182,-8.332938,8.247692,-4.026969,-5.709574,3.885076,7.676586,7.959700,0.018506,-0.833783,-5.952052,-3.391225,-8.301953,-3.498224,0.385678,-3.920660,-0.703999,6.360882,1.185310,-9.048125,-1.964014,9.627789,-4.221128,2.841841,-4.091449,-4.083064,4.763959,0.754770,6.337914,2.861225,-3.623995,-3.849996,-6.514193,-3.504101,-0.334729,0.507488,-7.361127,-7.894839,-7.571679,2.142870,-9.009261,1.485766,-5.662588,7.719567,-2.456836,-9.575551,8.063893,-3.767355,-6.931618,3.520990,8.274973,9.149070,4.798980,-1.567868,-0.955221,-5.950578,-2.373431,-5.297666,-6.909232,-2.120792,-4.734931,-1.132569,6.345449,-9.631200,6.444993,-8.079354,-9.242751,8.809553,-7.498810,4.201775,0.452655,6.970669,-8.818790,-1.480036,2.423009,7.832937,-4.978519,1.242028,-5.954940,7.774190,5.507640,-7.505639,-5.789485,6.274206,-8.369935,8.798316,1.191316,0.357162,-4.365615,-8.434420,-2.937708,4.425889,3.841490,-3.579567,-6.820662,-4.298081,-7.046107,-8.629050,-4.498608,6.363463,-0.848030,-7.038631,3.186101,3.973030,9.007848,9.962200,-6.064912,-2.375185,-4.955916,4.874289,2.481402,-4.091475,5.471551,-4.674904,6.375274,-3.343097,-5.117206,9.039549,-7.920914,9.052384,-6.829787,3.841298,5.566362,0.276101,-1.313531,0.305992,-5.780082,8.830653,-3.725731,9.945442,0.673898,4.046906,-3.494975,9.277348,-5.321000,-0.560351,-4.959767,9.982023,-8.146950,2.210666], dtype = "float32")#candidate|8029|(440,)|const|float32
call_8028 = func_4332_call(relay.reshape(const_8029.astype('float32'), [4, 10, 11]))
call_8030 = func_4332_call(relay.reshape(const_8029.astype('float32'), [4, 10, 11]))
output = relay.Tuple([uop_8025,call_8028,const_8029,])
output2 = relay.Tuple([uop_8025,call_8030,const_8029,])
func_8039 = relay.Function([var_8024,], output)
mod['func_8039'] = func_8039
mod = relay.transform.InferType()(mod)
mutated_mod['func_8039'] = func_8039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8040 = relay.var("var_8040", dtype = "float64", shape = (10, 2, 15))#candidate|8040|(10, 2, 15)|var|float64
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8041 = func_8039_call(var_8040)
output = call_8041
func_8042 = relay.Function([var_8040], output)
mutated_mod['func_8042'] = func_8042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7099_call = mod.get_global_var('func_7099')
func_7100_call = mutated_mod.get_global_var('func_7100')
call_8052 = relay.TupleGetItem(func_7099_call(), 0)
call_8053 = relay.TupleGetItem(func_7100_call(), 0)
output = relay.Tuple([call_8052,])
output2 = relay.Tuple([call_8053,])
func_8059 = relay.Function([], output)
mod['func_8059'] = func_8059
mod = relay.transform.InferType()(mod)
output = func_8059()
func_8060 = relay.Function([], output)
mutated_mod['func_8060'] = func_8060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6226_call = mutated_mod.get_global_var('func_6226')
call_8177 = relay.TupleGetItem(func_6224_call(), 0)
call_8178 = relay.TupleGetItem(func_6226_call(), 0)
output = call_8177
output2 = call_8178
func_8193 = relay.Function([], output)
mod['func_8193'] = func_8193
mod = relay.transform.InferType()(mod)
mutated_mod['func_8193'] = func_8193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8193_call = mutated_mod.get_global_var('func_8193')
call_8194 = func_8193_call()
output = call_8194
func_8195 = relay.Function([], output)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7940_call = mod.get_global_var('func_7940')
func_7941_call = mutated_mod.get_global_var('func_7941')
call_8255 = relay.TupleGetItem(func_7940_call(), 0)
call_8256 = relay.TupleGetItem(func_7941_call(), 0)
output = relay.Tuple([call_8255,])
output2 = relay.Tuple([call_8256,])
func_8259 = relay.Function([], output)
mod['func_8259'] = func_8259
mod = relay.transform.InferType()(mod)
mutated_mod['func_8259'] = func_8259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8259_call = mutated_mod.get_global_var('func_8259')
call_8260 = func_8259_call()
output = call_8260
func_8261 = relay.Function([], output)
mutated_mod['func_8261'] = func_8261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_8274 = relay.TupleGetItem(func_6124_call(), 0)
call_8275 = relay.TupleGetItem(func_6126_call(), 0)
uop_8279 = relay.sin(call_8274.astype('float32')) # shape=(1, 2, 11)
uop_8281 = relay.sin(call_8275.astype('float32')) # shape=(1, 2, 11)
func_7950_call = mod.get_global_var('func_7950')
func_7951_call = mutated_mod.get_global_var('func_7951')
call_8282 = relay.TupleGetItem(func_7950_call(), 0)
call_8283 = relay.TupleGetItem(func_7951_call(), 0)
output = relay.Tuple([uop_8279,call_8282,])
output2 = relay.Tuple([uop_8281,call_8283,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
output = func_8284()
func_8285 = relay.Function([], output)
mutated_mod['func_8285'] = func_8285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8309 = relay.var("var_8309", dtype = "float64", shape = (9, 12, 3))#candidate|8309|(9, 12, 3)|var|float64
var_8310 = relay.var("var_8310", dtype = "float64", shape = (9, 12, 3))#candidate|8310|(9, 12, 3)|var|float64
bop_8311 = relay.mod(var_8309.astype('float64'), relay.reshape(var_8310.astype('float64'), relay.shape_of(var_8309))) # shape=(9, 12, 3)
var_8315 = relay.var("var_8315", dtype = "float64", shape = (9, 12, 3))#candidate|8315|(9, 12, 3)|var|float64
bop_8316 = relay.add(bop_8311.astype('float64'), relay.reshape(var_8315.astype('float64'), relay.shape_of(bop_8311))) # shape=(9, 12, 3)
output = relay.Tuple([bop_8316,])
output2 = relay.Tuple([bop_8316,])
func_8332 = relay.Function([var_8309,var_8310,var_8315,], output)
mod['func_8332'] = func_8332
mod = relay.transform.InferType()(mod)
mutated_mod['func_8332'] = func_8332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8332_call = mutated_mod.get_global_var('func_8332')
var_8334 = relay.var("var_8334", dtype = "float64", shape = (9, 12, 3))#candidate|8334|(9, 12, 3)|var|float64
var_8335 = relay.var("var_8335", dtype = "float64", shape = (9, 12, 3))#candidate|8335|(9, 12, 3)|var|float64
var_8336 = relay.var("var_8336", dtype = "float64", shape = (9, 12, 3))#candidate|8336|(9, 12, 3)|var|float64
call_8333 = func_8332_call(var_8334,var_8335,var_8336,)
output = call_8333
func_8337 = relay.Function([var_8334,var_8335,var_8336,], output)
mutated_mod['func_8337'] = func_8337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7051_call = mod.get_global_var('func_7051')
func_7052_call = mutated_mod.get_global_var('func_7052')
call_8376 = relay.TupleGetItem(func_7051_call(), 0)
call_8377 = relay.TupleGetItem(func_7052_call(), 0)
output = call_8376
output2 = call_8377
func_8388 = relay.Function([], output)
mod['func_8388'] = func_8388
mod = relay.transform.InferType()(mod)
output = func_8388()
func_8389 = relay.Function([], output)
mutated_mod['func_8389'] = func_8389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_8410 = relay.TupleGetItem(func_5989_call(), 4)
call_8411 = relay.TupleGetItem(func_5990_call(), 4)
var_8412 = relay.var("var_8412", dtype = "float64", shape = (585, 3))#candidate|8412|(585, 3)|var|float64
bop_8413 = relay.divide(call_8410.astype('float64'), relay.reshape(var_8412.astype('float64'), relay.shape_of(call_8410))) # shape=(585, 3)
bop_8416 = relay.divide(call_8411.astype('float64'), relay.reshape(var_8412.astype('float64'), relay.shape_of(call_8411))) # shape=(585, 3)
const_8417 = relay.const([[-7.325857,0.621816,-9.097001],[-4.044540,-4.182351,9.436620],[-3.492684,-8.500939,-4.870866],[4.390921,7.379381,-4.038268],[-5.840766,4.614741,5.530015],[-9.364198,7.760863,6.234154],[-6.885976,9.610972,-7.149782],[1.300886,0.347823,2.788938],[9.991108,3.036599,-7.498072],[-0.206849,6.818772,-9.779509],[9.631494,-9.591676,-3.805272],[-1.343429,7.477555,5.163052],[-1.972455,-3.325597,-1.894194],[-1.451600,0.985203,3.092897],[8.905531,-0.804055,9.171284],[5.655435,2.101899,6.760871],[-0.148666,7.999780,-5.132109],[6.940085,8.466177,-2.731274],[8.101955,4.570827,-8.973947],[-9.830113,-2.301490,-4.627816],[7.750123,-2.456640,4.212389],[-9.837820,0.045907,0.593131],[-9.583622,0.043175,6.281372],[-9.297007,-6.054912,3.651653],[-8.275187,-0.615447,-1.117804],[-0.426248,-1.193949,-4.494854],[-3.561067,0.819221,-0.170118],[8.079471,1.521657,-8.686051],[8.217372,3.975520,-5.719836],[-6.694792,9.264398,-2.047461],[-2.808024,7.793641,6.023757],[-9.010356,0.764986,-3.296390],[3.352137,-0.204227,-8.572965],[5.886989,8.969892,5.882433],[6.202058,-0.102192,-9.599733],[-5.977325,2.518733,2.182007],[0.805165,3.128195,-1.376870],[7.791355,7.797463,-4.449649],[-5.487874,6.037952,8.720244],[-7.636090,8.118898,6.487228],[8.084186,-8.279606,3.020855],[1.689266,7.076995,8.010122],[-5.621804,5.317615,9.081473],[9.129582,8.222342,5.231565],[1.309592,1.833380,4.924840],[-0.796293,-2.738982,1.543276],[5.017712,3.578931,8.173683],[-2.504964,2.271794,-6.089850],[2.776062,-9.745944,-0.500691],[7.250339,0.281885,-9.002388],[1.226604,8.205692,3.356111],[-1.755024,-4.778563,-4.717281],[-2.167714,4.107024,-8.875827],[-2.272844,-4.727681,6.524652],[5.067331,-7.703956,4.071723],[2.548284,-3.621889,9.729512],[1.048279,-9.745878,7.832394],[-8.558533,3.669782,4.078429],[7.268697,9.558547,-3.572446],[-4.328705,-1.598887,2.349261],[-0.065668,-5.518475,9.310558],[-3.383107,6.502959,-1.314539],[3.397400,6.836920,0.978842],[0.707968,-4.147477,-5.963489],[0.603893,-8.694941,1.457689],[5.105241,-5.207568,-7.241219],[6.161420,3.007465,8.110721],[2.058788,-7.236126,8.949119],[8.794077,-9.959834,-6.094947],[2.598569,0.969777,5.929066],[7.977403,-0.886608,-8.836712],[5.520680,-8.383142,7.766354],[9.016659,-3.049726,2.041740],[2.053938,-5.437730,-1.733430],[-8.547125,-6.618715,-1.918523],[-3.103185,7.122315,8.824479],[-9.892950,4.458854,2.058177],[-1.012513,-4.133505,-8.794733],[2.487910,-5.791000,4.727894],[-3.756151,-8.428655,-4.177060],[-7.376368,-3.189412,6.006763],[6.573103,7.565398,-1.949095],[7.772313,1.505043,-8.515633],[0.537568,4.716084,2.187493],[8.687402,-5.504164,3.693527],[-8.984136,2.697606,9.434235],[-3.142565,-9.740159,7.084752],[0.004182,-8.585508,-3.893468],[-7.962221,-3.588000,-9.384070],[4.552949,9.455655,2.329264],[-6.687738,-9.029785,6.221930],[-2.536249,-6.237213,4.035755],[-6.205894,3.909774,2.044564],[4.684829,0.929862,5.482489],[0.480284,5.915754,-6.840578],[7.585378,-2.226459,-6.418325],[8.296550,-6.208192,-4.070563],[-9.743640,-5.544835,6.387996],[8.830766,5.207592,-8.489933],[-6.927782,4.610551,-6.528951],[1.972659,-0.066236,9.550445],[5.936225,-0.089076,-1.710020],[7.293724,1.773446,-1.314678],[3.232107,6.361148,3.779995],[4.578468,0.741334,9.984088],[-6.360458,-8.584295,4.825662],[6.227556,-0.277571,-4.383522],[-9.417663,8.059088,3.640109],[-1.632736,-0.361028,0.854257],[6.922618,3.906528,-9.571295],[-3.153154,5.821757,1.338928],[-8.281986,2.534509,-8.291281],[-7.403345,2.494585,-3.649738],[6.120897,8.139515,-1.655426],[5.944723,7.967780,5.846215],[-8.881342,-6.674252,-1.885405],[-3.418645,0.078326,5.272925],[8.577841,-6.274339,-3.925098],[0.450888,-2.166228,8.652821],[8.249486,-4.290685,1.546713],[-0.989295,-9.310363,-2.270749],[0.990951,6.621697,-7.794102],[-4.275678,-5.546457,3.711795],[-3.165162,8.409076,3.667268],[4.515158,9.166590,-5.368139],[4.168465,-3.072642,6.820922],[-4.046736,4.324516,7.220183],[1.351363,7.751590,1.312674],[-6.681077,3.497633,-8.357615],[-4.361513,-2.233321,8.714552],[-8.015175,3.750997,-3.919434],[5.847717,2.231582,5.777437],[5.724520,4.528357,-9.743617],[7.929831,-7.348421,-3.217550],[6.571319,-3.889815,4.998156],[-1.628550,4.555071,-6.337311],[1.998119,-8.077033,7.647808],[9.544034,-9.967535,5.747697],[6.280858,2.203662,-1.545239],[-0.364173,-9.679235,0.681839],[1.851449,-5.369282,3.379009],[-6.893951,-2.060175,-0.616360],[-1.594928,-5.116686,-8.433407],[-6.046121,-5.526793,7.817335],[5.831135,4.232056,-8.846497],[1.636585,-0.982541,-1.295145],[3.181092,-8.589558,-5.918015],[6.019812,5.318029,2.763437],[1.961411,3.560907,-0.122242],[-4.657366,8.731842,2.762191],[-2.903703,8.013409,-5.645879],[3.463586,-2.719144,-2.032218],[-3.916766,-1.441111,4.641272],[4.769349,7.618712,3.905938],[7.344902,2.150818,4.089381],[-7.469128,-8.237916,-4.577381],[-0.846513,-4.190698,-2.424640],[7.019876,-2.319778,-1.373139],[8.410667,-4.186503,-2.420404],[-2.726844,-9.730200,-7.260622],[8.375710,0.948454,-7.515444],[-7.655535,7.119204,-8.803569],[0.844239,-5.691747,9.842127],[-0.651811,-8.666934,0.020662],[-1.266740,-6.611469,2.533605],[-3.838612,-0.736569,-4.018811],[8.395505,2.151898,3.171062],[-7.649123,3.138903,-3.347411],[7.409980,0.396972,-7.869060],[9.835710,6.665762,2.610392],[-9.672440,4.749498,4.628678],[-0.173355,-7.292094,-7.180522],[3.727841,4.221671,6.502851],[4.185054,-6.967616,5.849845],[8.414081,8.742154,-2.890868],[7.353285,-7.434936,9.070891],[2.099262,-7.820405,6.505206],[8.342549,-4.729114,9.186099],[9.569597,-4.007129,-4.932658],[-2.706599,-5.750083,-1.026907],[-5.374239,-1.660798,-3.826906],[-7.375136,3.115922,3.155985],[3.121330,4.146063,1.346652],[-1.171269,5.707739,-4.503207],[-6.565358,2.516912,-8.113918],[1.574109,9.433390,2.816501],[-8.212207,4.072603,5.716515],[-9.603206,-1.617642,-6.425503],[9.778230,-7.391528,0.001718],[-2.998038,1.547324,6.693894],[0.462388,-1.919236,-7.996006],[-2.683009,7.104156,-1.821625],[-4.125935,-2.152386,-2.240949],[1.737662,8.645686,-6.400436],[-5.632827,-4.734263,-3.452392],[-2.923559,-9.631869,-2.150355],[-3.942683,9.216455,6.477942],[-7.017327,5.581879,-4.507418],[2.373753,1.927349,7.850875],[-4.335109,-1.190785,0.808085],[-2.156048,-1.791727,-9.243723],[0.382907,4.941198,-5.687396],[-4.990287,-8.048005,2.861378],[0.155351,-6.168022,5.826325],[-2.288425,-1.698427,-5.714609],[6.502869,1.889001,-3.286352],[-1.609898,-6.170736,-3.981438],[-9.039373,-5.243289,-2.134465],[1.948194,-8.956402,-7.186654],[0.550136,4.021441,9.225575],[0.782945,-4.146436,-7.314907],[-1.660435,-9.518371,-3.947068],[-8.189870,5.001141,-8.299266],[-7.653640,8.091809,1.369945],[4.304078,-0.922185,-3.561201],[-9.780735,-8.806038,-0.709699],[4.346160,-7.706518,-1.968183],[5.413375,3.613808,4.400268],[-5.272599,-2.244694,-6.329977],[-9.689418,-2.411543,0.861067],[-2.232439,3.183893,-6.986916],[-5.098225,-0.363179,-1.206327],[2.879581,7.553361,-2.948401],[-7.815086,1.391372,3.576580],[0.358058,2.365337,-4.972670],[-7.148390,-1.884773,-7.525889],[-9.761112,2.731895,0.831219],[6.345101,3.011045,6.769990],[6.541633,-4.780684,-8.567404],[-3.761704,4.846007,-2.503550],[-3.557136,2.952577,-0.331781],[-9.010662,-6.236843,4.355908],[4.359307,-6.375168,-1.214694],[-0.442701,-5.743575,-9.772746],[-4.514087,-4.163512,-4.649416],[-4.007754,1.629182,0.362616],[9.259789,-9.442677,5.867176],[2.311131,-6.222482,2.572267],[6.388839,-1.761868,7.275681],[2.080756,-6.105286,9.423447],[-5.555649,4.695740,3.676829],[2.259700,-7.725972,-8.568951],[0.004594,-1.887533,-3.505220],[-4.554500,-6.473092,2.288225],[9.488719,3.007527,-2.507334],[-5.244163,-4.785943,-2.032514],[2.421365,-4.405665,-8.900200],[1.378203,-7.852845,3.578904],[-5.976991,9.086862,5.786731],[-4.855666,9.807336,-4.191739],[-2.810246,-4.199375,-5.401060],[4.393240,-7.162806,-7.675688],[-6.110536,-5.077032,9.206153],[4.492748,-3.911805,-8.854462],[3.772296,-3.172919,3.254012],[-2.615676,-5.872293,-0.395910],[-9.770696,-3.166774,-8.175062],[2.466142,-7.627962,7.443481],[4.706327,4.041446,5.729328],[2.123000,-3.299819,9.618063],[-3.920760,-9.831596,-0.553607],[-4.624413,-0.153077,2.717021],[9.507111,2.924188,2.355868],[8.305291,-0.676741,-2.638914],[5.197130,-2.220898,5.211046],[5.343876,-5.347852,-2.620518],[-5.168449,2.822877,2.987722],[8.759740,4.125707,0.688263],[-8.087994,2.441382,9.411928],[-8.448642,-3.728520,4.044087],[5.811584,5.486472,-4.600450],[-3.691492,-8.069317,4.252402],[2.271601,-0.519097,5.517947],[5.979455,1.485274,-6.819734],[-1.427670,8.336148,-5.192832],[-1.728212,2.560855,7.320352],[-5.554585,-3.169091,6.224108],[-7.673153,3.579895,4.573721],[-9.239530,-5.529530,3.647904],[1.205369,9.719029,-0.655343],[1.032905,9.269226,3.965901],[-3.498491,1.708264,-3.575071],[-7.594844,4.679979,-3.339665],[-9.511298,5.661350,-6.941965],[-6.266164,-7.720508,-5.842685],[6.996875,3.591064,-8.491753],[5.661716,-1.870793,4.922768],[6.210819,-5.192606,4.698803],[3.802217,1.000695,-4.965733],[9.148272,7.674182,1.365008],[6.838629,9.999038,8.552890],[6.434036,-3.053787,1.844208],[-7.725523,8.407099,1.119258],[0.818326,4.572258,7.106134],[-8.463523,-8.412748,-8.943557],[6.687237,-3.072888,6.796357],[-7.859851,-4.502173,-5.372288],[7.438617,-0.279235,0.649184],[9.678552,-4.753913,-6.319106],[8.360215,-9.350056,-0.980074],[1.830119,-7.489329,4.711501],[2.325363,-5.395003,-7.922216],[-8.046851,-3.166820,0.979541],[-0.180430,-6.256597,4.619054],[2.170371,-3.450591,-6.884997],[-7.321251,-1.744896,7.921725],[-0.022567,-6.525810,-0.663408],[-2.164641,-8.341540,3.209828],[-9.531331,-1.089875,-5.543332],[7.117788,-9.053471,1.086014],[3.154066,-4.882837,4.219141],[7.655501,2.143470,-6.752126],[-3.545254,-4.172365,2.496558],[-6.140909,5.402117,0.036008],[-7.471851,6.902749,-1.068636],[6.743981,0.088795,5.270617],[9.273338,-8.586527,-1.678008],[-7.716553,0.574836,6.859634],[-0.733003,2.928803,8.524989],[8.781826,4.292671,-3.956642],[-2.157248,1.686063,-4.510516],[-4.686144,0.216409,-3.814653],[4.748644,4.131572,2.762632],[-7.194070,-2.640128,4.169514],[-7.975267,-2.708804,-7.186295],[6.138986,-3.814651,-5.493358],[1.532488,2.803620,8.783798],[2.845177,-5.253929,-3.890935],[3.185925,-6.994318,-6.568903],[4.085805,-5.988594,-3.125960],[1.831528,3.780427,2.037632],[-8.999293,-2.616876,6.663645],[7.411303,6.404271,7.483595],[2.688567,-7.539022,5.878196],[9.644169,9.537864,-9.594097],[-7.006433,8.802724,2.419249],[0.039267,8.711963,8.933610],[-6.408839,2.017455,5.833966],[1.771036,-3.695830,-5.155469],[-9.506288,-3.677237,6.975015],[1.442166,-8.925949,-2.305588],[8.416442,0.123485,2.123487],[-2.266649,9.655943,0.105632],[-6.712002,9.743774,-3.242128],[-7.934296,-3.966400,-7.453693],[9.177070,8.026497,-1.924673],[-7.063158,-2.190699,9.666282],[-2.192451,9.898832,0.682466],[-7.525425,7.687634,-3.062907],[7.675278,-4.605552,-6.136245],[-9.043890,-1.834001,8.827205],[6.280720,4.915746,-5.388460],[0.962737,-0.571471,-9.407660],[-6.778822,6.483825,7.889549],[3.639758,0.914914,-6.360430],[9.654764,1.082280,-2.852574],[-2.177280,-7.269245,6.416492],[-4.762316,-1.831121,6.786906],[2.688891,4.422032,7.829608],[-3.303780,-5.760398,-2.078175],[4.319184,1.181680,-1.113663],[-5.316056,2.222297,-9.962563],[6.868141,2.460943,7.201358],[-0.470713,-4.768955,3.324719],[-2.594096,2.400357,8.279658],[4.853747,5.422009,-9.724741],[3.820891,-5.768922,1.928414],[0.388720,-8.481687,-9.127842],[-4.331199,-3.182893,8.887575],[-8.313971,5.233622,-9.024697],[-7.062894,-8.088031,-0.252648],[6.169697,6.962758,-3.189749],[-6.216980,1.141621,-2.347186],[-8.008391,-4.074474,-6.160283],[-5.130597,-2.822956,-6.364159],[4.115468,-0.262916,-7.891731],[-1.706578,-2.249644,7.652849],[-7.998486,5.867867,-4.348676],[-8.186574,-2.927438,4.572178],[-6.325650,0.312277,-8.417769],[5.606405,-9.642016,7.194208],[-8.963324,-3.473673,2.889164],[0.692993,2.297368,0.843902],[-3.801201,-8.007953,-1.098490],[6.975635,-2.982164,9.893984],[-4.748282,-6.770374,5.122668],[1.334773,7.318635,-5.608747],[-9.639575,-0.240225,-4.600650],[1.281324,4.510502,0.974380],[-0.253455,-9.071913,-1.794581],[7.386689,-8.473926,2.182089],[7.661476,5.280780,4.296001],[8.282949,0.090929,9.102121],[0.487637,9.511083,0.290294],[-6.448647,3.632866,-9.921330],[9.308006,2.440593,7.594506],[2.626799,9.654718,8.321729],[-5.055531,-1.285218,-9.523312],[-3.466833,1.385182,2.478637],[-2.650836,-0.281959,-0.852611],[9.067907,-1.660791,-2.652232],[-1.632719,-9.108629,-0.231921],[-7.352210,-7.000981,2.175134],[-3.515653,-3.841691,2.817906],[-1.414675,9.021993,1.769179],[6.537910,1.163896,0.464488],[1.793199,8.093538,-1.565788],[2.604768,3.267603,1.712618],[0.776747,-1.658044,9.994749],[7.593398,9.403094,-8.654176],[-4.584553,-5.248952,9.032649],[3.501992,5.559249,-4.988548],[7.718261,-3.085139,1.925311],[8.108257,1.976286,-0.113335],[2.255964,1.658565,7.322555],[6.568017,0.378610,2.997827],[-1.936227,-6.087796,-5.759440],[0.512024,-6.046168,-7.330472],[4.144478,-2.005681,4.031559],[-3.174691,-2.940296,0.271517],[9.146043,-6.393684,-8.231794],[-1.473193,-5.302382,-9.806109],[6.312805,-2.551475,0.683751],[-8.776139,-8.962343,-6.416760],[0.553643,-5.731698,-6.673708],[2.329232,8.947271,-1.553605],[-6.817123,-7.968580,2.889419],[8.024429,-7.251325,6.063001],[-2.330854,-2.306983,-7.441532],[-9.345885,6.553771,-2.035553],[-6.820438,-7.971146,2.031403],[-5.408697,7.433696,-3.475146],[7.287798,4.005512,-6.266552],[-8.983505,-2.634957,0.803450],[7.447960,3.215513,3.544261],[-8.537665,8.618361,3.163011],[4.608037,-7.663646,-2.631737],[-2.703350,-0.177811,6.098736],[-3.969030,4.939645,-4.426443],[4.467608,-3.079083,5.622346],[-9.544768,-5.027878,-7.989461],[-2.019704,6.199397,-9.352011],[-4.912117,9.661421,-2.123063],[0.121817,-0.050187,-2.399609],[0.235667,-4.112724,-4.653749],[7.339072,7.629407,-4.905575],[4.395809,-9.025304,-9.622747],[-4.675752,3.115975,9.997073],[-0.888742,-9.955909,-2.288834],[-2.487043,-4.349130,8.341550],[-7.220988,-2.965325,-9.081643],[3.737164,1.303678,-9.587391],[-5.500256,-8.305237,2.285770],[7.742817,-9.710537,-3.998074],[-5.409382,2.800475,-7.372670],[8.286029,2.032403,-9.003532],[8.156669,-1.520193,7.401892],[-9.478053,4.890644,5.162527],[-7.059480,0.598481,-7.244499],[9.916069,-1.485429,-1.497372],[-1.641476,5.824763,9.797037],[4.154781,2.699709,8.062938],[5.057740,-8.394148,7.297430],[9.842316,-1.089870,-7.876094],[-0.395198,-8.427631,-8.359204],[8.029752,-6.759564,2.479231],[1.883159,-7.305192,-7.269470],[2.458270,7.093998,-4.148639],[-8.558338,7.789980,-4.701195],[2.288886,0.294045,1.482380],[-8.228550,-1.265580,4.094094],[-6.513194,6.118384,8.548668],[6.342171,0.526368,-7.886805],[9.565861,6.047174,-7.938672],[-0.126105,-5.487424,7.014317],[-3.664905,0.599699,-0.331440],[-9.978798,0.082238,-7.914847],[0.625590,4.457491,-7.792607],[-1.590419,-4.139754,-3.850630],[-8.297381,0.444209,6.723644],[-1.316129,-3.275386,-7.255065],[8.920461,-8.183418,-5.915075],[2.231154,-0.218259,-1.587330],[9.649863,-8.517555,-4.401973],[-3.608406,5.416592,-3.273438],[-6.748676,-7.071751,-3.457956],[4.601231,4.839514,-8.145009],[-0.015523,3.505589,-6.884709],[-1.911210,6.620712,-8.601840],[7.351653,-7.928933,-2.524584],[1.708783,7.987740,0.034469],[9.375772,2.951852,-0.888625],[-1.994792,-4.881745,8.720207],[-3.971327,-5.861694,-9.821016],[2.187658,3.820769,6.256406],[-2.715747,-4.625521,-9.949189],[7.070043,-9.045719,2.644509],[-2.973836,-0.276885,5.678132],[-3.805716,2.139314,3.842215],[2.813661,5.686465,-1.772406],[-8.282823,-7.206173,1.636961],[-4.857729,-0.069684,2.887763],[-2.732064,6.679752,-7.301305],[-3.663510,-0.479147,1.010242],[-7.761952,4.229222,4.987382],[-4.958063,-5.488965,-7.494759],[8.180297,0.381462,-6.078455],[5.999765,-5.394041,2.342832],[-5.378248,9.963305,8.550061],[-5.507761,4.938707,4.769801],[-2.684556,-0.277840,-5.436230],[-3.994857,-2.118258,1.486464],[-1.272007,8.952800,-0.448872],[-1.081612,-2.724168,3.278462],[-7.331760,8.791760,8.656687],[4.336196,-5.160838,1.234396],[-9.570267,3.031735,4.852477],[0.601226,1.704566,-7.016468],[2.564477,-2.887619,9.971597],[3.380381,-7.143392,0.372095],[-1.028362,0.410914,6.502360],[9.552050,-3.289413,-7.094973],[-4.527024,0.795673,-0.724786],[0.649867,-1.329406,0.478489],[3.586388,-2.777966,-7.395982],[-5.557812,-4.663549,5.832870],[-5.522474,6.857801,7.197657],[-1.298983,-8.934670,-6.121946],[4.281283,-1.190952,6.080263],[8.247597,1.775634,-4.259287],[-4.233506,-1.310427,-7.036716],[-2.539398,-5.690397,4.967377],[3.672836,8.105271,-3.299978],[-2.635467,5.227576,4.223271],[-3.123417,-8.943661,-3.530543],[7.613130,6.514782,7.262100],[-5.028745,-3.712883,-0.700618],[-5.059954,0.964363,7.511809],[5.568066,5.409130,-3.989687],[-6.709062,-9.478550,-8.189426],[3.758346,4.187843,7.400628],[8.572495,-9.476401,9.365756],[7.979553,-2.454292,1.792621],[-1.978783,0.965908,-6.275639],[2.953337,-4.368826,1.839138],[-1.011975,8.971072,1.065181],[7.252037,-6.003893,-6.418763],[-2.008179,0.474080,-4.043654],[-4.004422,-1.632456,-1.164211],[9.159339,9.055775,9.810296],[3.221590,4.417166,2.858990],[7.012761,7.876041,-7.985928],[4.426368,-7.371502,8.609743],[-0.048209,0.142674,7.199645],[0.758926,6.430943,1.526615],[2.243007,5.689273,1.654885],[7.046352,9.841618,-7.233867],[-0.428108,-2.260714,-5.643076],[9.250625,0.512665,2.395500],[-1.202430,1.249639,0.653086],[6.408690,6.134146,-1.899111],[8.958477,-2.706721,-2.759639],[5.300634,-6.942157,5.351995],[2.763300,8.277759,-1.571195],[-5.004771,8.184040,-3.323875],[-8.363894,9.343417,-3.059722],[-6.018482,8.078370,-2.175912],[6.054216,-4.659725,3.412066],[-0.877029,-3.454995,3.947518],[7.687043,-5.121353,-0.696932],[3.595911,-1.028590,-2.990042],[-3.197121,-1.021954,8.405174],[-9.058550,-6.289944,6.990813],[-1.093478,6.217760,7.527694],[2.724448,-5.219291,-7.764151],[5.559158,1.980158,-6.620176],[-0.766168,-0.249361,8.448854],[-6.179384,-7.371363,-9.493633],[-6.070877,3.353279,-4.788383],[7.987134,3.205036,2.940489],[-4.998644,-0.546641,-9.952613],[5.742394,1.350699,6.158357],[-1.447874,-1.697852,8.968422],[-4.538165,-2.158803,8.848948],[-1.176049,-8.475692,-6.231461]], dtype = "float64")#candidate|8417|(585, 3)|const|float64
bop_8418 = relay.subtract(bop_8413.astype('uint8'), relay.reshape(const_8417.astype('uint8'), relay.shape_of(bop_8413))) # shape=(585, 3)
bop_8421 = relay.subtract(bop_8416.astype('uint8'), relay.reshape(const_8417.astype('uint8'), relay.shape_of(bop_8416))) # shape=(585, 3)
output = bop_8418
output2 = bop_8421
func_8424 = relay.Function([var_8412,], output)
mod['func_8424'] = func_8424
mod = relay.transform.InferType()(mod)
mutated_mod['func_8424'] = func_8424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8425 = relay.var("var_8425", dtype = "float64", shape = (585, 3))#candidate|8425|(585, 3)|var|float64
func_8424_call = mutated_mod.get_global_var('func_8424')
call_8426 = func_8424_call(var_8425)
output = call_8426
func_8427 = relay.Function([var_8425], output)
mutated_mod['func_8427'] = func_8427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6657_call = mod.get_global_var('func_6657')
func_6659_call = mutated_mod.get_global_var('func_6659')
call_8493 = relay.TupleGetItem(func_6657_call(), 0)
call_8494 = relay.TupleGetItem(func_6659_call(), 0)
func_4169_call = mod.get_global_var('func_4169')
func_4172_call = mutated_mod.get_global_var('func_4172')
const_8496 = relay.const([[-4.216529,0.103366,-5.203248,6.755964,3.340361,-9.377613,8.542230,9.181694,6.616385,5.590189,1.293198,2.911459,3.267582,-5.876494,-4.553658,5.623461,-4.490097,-8.278723,3.016071,-0.142437,-9.159198,4.682412,5.773806,-0.255366,5.219491,-7.429110],[-9.637077,-5.523297,-9.129162,3.435802,-4.735008,9.777097,2.272120,8.057558,-1.773106,-9.028592,4.205840,-3.821503,-9.495484,5.544540,-1.008582,-5.020857,8.707927,-2.422695,-8.834202,7.421276,5.644160,6.450895,-8.192365,1.832266,-5.452291,-2.107952],[9.989566,7.919743,5.516480,2.750097,-3.742162,-9.598187,-6.313989,-4.190657,7.584041,2.602766,-5.668435,4.109756,-7.048303,4.372478,-9.436529,-6.412392,4.769643,3.753929,-3.874846,-6.153986,7.534136,-0.294714,-3.381593,-4.977162,-6.757291,-5.696695],[-7.524335,-6.383436,-9.402549,-1.552069,7.939902,-6.792084,-5.828757,1.191574,-0.893538,1.743923,4.925618,-1.288889,-4.904727,5.953573,-1.030567,-8.783009,9.326344,0.164709,-3.963128,0.915887,-1.652428,-6.020159,0.406390,5.108541,-1.431824,1.531888],[9.386206,2.102918,-0.291240,-3.312474,-9.960446,-1.226770,6.224873,4.407665,5.624698,9.612551,-9.768691,-4.491997,-1.200199,9.027175,-1.673956,-8.697684,-0.154767,-3.311750,-9.214795,-0.262441,6.273924,-4.173006,-1.215200,-6.904046,-8.526322,-3.290097],[-8.355553,2.441321,-2.340256,2.639483,1.555273,-1.669141,1.490750,5.402746,-1.333195,-8.248971,-1.734305,-1.030578,-4.622633,-0.012031,4.252831,2.536878,5.882448,-7.979757,5.611904,-3.943494,3.196765,2.746545,9.388996,-2.272014,-9.829059,0.212294],[7.779400,2.330992,0.438044,6.501607,-0.879209,-7.739916,6.294041,-3.410989,-3.105003,4.606587,5.466074,-7.774988,1.176880,-5.714599,6.794763,-1.740648,-4.683314,-0.063932,6.270131,-6.055187,-5.525985,1.445276,8.268119,-7.665922,5.429377,6.524808],[-2.253883,7.565652,-3.656367,9.806909,-9.089809,-7.519671,-3.519832,-0.477011,-5.110966,6.139380,2.051645,-4.964706,-9.430625,-2.515216,5.995714,7.499057,0.894284,6.247342,-0.685086,7.534748,9.990515,3.711360,-1.438776,7.842800,-3.959777,2.779906],[-6.506292,-6.581856,-2.369960,-4.359783,-0.047503,-7.431893,-5.902414,4.859695,-3.361505,4.903391,9.624987,1.843973,-7.458386,-3.863456,-4.614836,-4.938215,-0.499457,7.246699,2.526348,-9.234825,3.242857,3.392027,-9.916033,6.787382,1.024493,-8.065699],[5.288327,-8.982009,8.258209,0.643694,-9.998609,-3.285151,-6.588922,-1.462463,4.776142,-2.045277,9.542477,-9.151085,-0.462759,-2.151107,7.163550,-7.040701,0.542605,-2.932141,-5.133630,-7.453798,-4.571057,9.408524,-6.829781,-8.231618,-9.383330,4.194060],[8.625196,0.182360,0.134476,8.098610,3.129925,4.222835,3.778061,6.923497,7.356525,-2.986069,-8.063163,5.914410,5.741498,-2.216860,-6.353441,0.442932,1.386792,0.399034,1.499931,0.587800,8.002359,8.331491,0.918968,-7.412161,-9.075222,-5.529308],[-2.140437,8.587660,8.772383,3.259284,6.532612,0.821805,4.016453,6.241741,-1.474961,9.107100,-4.425163,-2.139873,3.199822,-7.516400,1.873061,-8.800980,-1.362632,-8.680841,3.945723,0.365624,-0.802796,-7.220490,-8.097270,-2.359428,-8.292830,-5.152194],[-0.513708,-5.696189,7.467096,3.157336,2.130621,-5.683418,-5.777467,-3.528139,-3.524338,-3.987853,-9.168606,-9.016441,8.264165,9.559041,1.280439,-1.476238,-9.926524,8.417851,1.999356,6.319641,3.643073,7.054404,-6.010820,3.630338,6.827256,9.256621],[-9.193687,-6.640653,2.419116,-2.395169,6.543716,-8.966168,9.278834,8.268513,1.861413,-2.127462,-7.932790,-4.655944,6.894322,4.798475,0.403726,-1.621165,6.261746,1.722891,8.652856,2.096229,-9.884999,-4.116710,1.721439,9.266968,-3.467435,9.907343],[5.315569,3.266297,-6.303513,7.292468,-1.517289,2.235159,6.773361,-4.141098,-5.158712,9.401949,4.996326,7.806548,-7.576320,8.141441,-1.343599,7.139131,-0.378199,-7.606558,-8.954368,1.877760,4.388062,-6.414413,5.825843,9.747063,-0.291322,3.676535],[4.451994,-9.514803,6.632006,-7.555915,3.399545,5.846050,1.193766,-9.367672,4.341823,-8.639717,-6.085434,8.718691,9.771132,-0.925115,-6.144337,2.217569,-7.470993,6.167045,-4.182752,7.151706,1.833574,8.134667,-1.360475,-7.865597,1.001192,-5.772490],[6.345103,-9.894656,3.257274,-2.217284,-1.347431,4.800854,-5.767729,-9.129130,-7.439281,-4.263975,-2.126352,-6.318698,0.565069,-5.482316,5.779191,-8.596751,6.545908,5.044438,8.693604,-9.782120,-5.114530,-8.966997,-6.328148,1.456074,-8.701259,-6.277279],[2.111136,3.315051,-7.195528,-1.463994,3.639760,-9.574621,6.558257,3.418910,-9.232705,-0.727916,3.418312,7.575257,4.321294,-3.660588,-2.695711,-5.865457,-5.731759,-7.276006,4.662112,-2.080443,5.940435,5.479144,6.565431,-3.603813,-2.063018,-4.415686],[4.110098,7.779885,-4.490842,5.517402,9.134059,-6.694361,3.815412,-9.048425,2.761884,1.686790,7.043443,2.236783,1.556963,-6.071542,-8.938617,4.373243,-9.549875,-7.910096,3.175679,5.514689,0.112872,-2.759213,-4.895525,-8.488376,2.946962,0.297400],[-2.788432,5.108603,-9.050572,-7.166540,-0.742022,-6.669518,-2.919282,0.341062,-0.954118,-4.677046,6.080906,1.439747,6.333236,0.341651,0.687268,-8.507037,-5.789323,-1.977684,8.881935,9.738312,-6.504342,7.046236,4.014287,-3.829824,9.448217,7.533717],[8.433232,6.253652,-0.457812,-5.982377,4.657846,-0.144076,-6.690611,-2.494585,5.451137,-9.680239,5.972746,-9.326228,-7.750243,3.758608,-8.406138,-4.028011,8.169136,-0.940919,9.268633,7.270701,5.713059,-3.867830,-6.533463,-1.087317,-2.620651,-1.281833],[-0.966797,-1.527320,8.518907,-8.693316,2.094063,-7.706591,-3.354676,-5.193645,1.200297,-9.216294,1.056093,-3.401701,6.798586,8.432137,4.431454,-7.672571,4.819865,6.339942,-1.553698,-8.942955,-9.816571,-6.228303,7.717408,-4.610305,-4.362210,-9.784668],[1.838050,-4.171677,8.181806,1.190096,9.242514,-4.298357,-0.571791,0.389642,4.493737,-9.958698,-2.247080,2.330101,-4.702862,-3.447778,-0.957327,-4.571286,-5.784015,0.464849,5.540895,-2.126382,-6.188026,9.753724,-2.102362,3.213534,-3.855648,-8.820236],[-6.724517,-1.833683,7.381355,9.420106,0.944996,-5.845380,-1.181922,2.390164,-7.162397,-8.517040,-9.714323,7.556110,5.643251,7.840556,4.811033,-6.021736,9.641038,-7.668351,-0.174432,-8.648208,5.762821,8.266565,-3.041244,5.984692,-7.422117,8.375303],[5.926782,-7.944910,1.331007,-2.546225,0.300934,-2.824680,-4.978177,8.689351,6.150165,-8.349961,-1.800057,-0.302456,1.113908,5.494209,-2.874703,-8.561271,-0.377309,-7.658665,-6.731665,-9.110034,7.691190,-9.292664,6.666720,-3.330941,-4.909374,5.300759],[-6.830418,5.194037,-8.572066,-9.821095,-4.407017,-6.095315,1.661188,-3.395319,-9.497131,5.538831,-4.913266,5.823603,8.149189,-4.589945,-4.547973,2.071508,5.236664,-6.623432,4.400129,-8.795201,-6.679995,-9.309113,6.478634,7.531847,6.962849,-1.731960],[2.310186,7.603861,6.352007,-7.003992,-5.218765,8.028951,-8.522194,5.724185,-2.251888,9.508814,-9.559755,-4.260122,3.676123,6.541765,-6.604123,-8.234981,8.130113,-1.864391,0.995098,9.794606,-5.294946,7.407221,-5.949682,0.864981,6.887909,3.226109],[-5.742629,7.757320,-7.688305,7.615439,-1.855732,-8.794275,2.727255,0.354489,6.947113,-8.425360,1.053517,-3.350972,-0.533735,-4.391209,5.460094,-2.518812,8.920279,7.301568,-1.150281,-9.772649,-8.654937,0.072702,4.362026,-5.624527,8.517299,6.746563],[-0.779412,-5.483889,4.197351,-0.422928,3.459485,-9.953344,9.607946,-6.538515,-4.690857,-1.718720,4.621039,6.969952,-4.444696,5.909482,-7.584460,-4.034035,-2.479480,-3.836438,0.472056,-1.850801,2.387169,4.067464,-3.224221,-5.707519,-0.945386,0.942979],[-5.490442,3.950831,-4.417571,-1.444329,1.940490,-9.913810,-2.964982,5.796620,9.775254,-9.445528,-7.430926,2.856882,0.462057,-5.182202,9.052575,7.693523,-1.812844,-8.439529,9.694507,9.456990,-2.037728,-3.356209,-9.566698,-2.454821,-8.154183,-5.341884],[8.682407,4.277229,-5.178110,-6.398958,-7.214185,2.118811,-8.084944,1.191241,4.509909,-6.774544,-3.045580,-5.125091,-0.351871,1.370838,9.782241,-8.661953,1.624308,7.609866,4.234960,8.056363,9.507925,-5.027865,9.875163,8.872847,-2.920722,-6.064544],[-5.452193,-2.455139,5.951376,1.208401,2.442786,5.920626,-7.785017,-0.495478,1.699599,7.921021,7.795638,-5.898905,0.638991,8.114497,-7.225066,7.412484,-1.352967,2.107745,3.197719,-3.853348,-3.590941,8.404434,-4.866069,-9.769670,-7.805718,-7.065828],[9.663350,-3.223456,-6.982323,4.132429,4.583903,9.879334,-8.338020,2.313405,-3.210062,-3.669661,-2.782986,3.423313,-3.845058,-8.159218,8.059159,-0.869472,2.252088,4.085069,-6.324444,-2.948780,6.486158,0.448527,5.122252,5.955495,-5.136893,-9.189791],[-0.971643,7.523450,-9.967754,6.748484,-7.607951,-2.834079,-1.208102,2.200052,-8.500228,-4.572521,8.259393,0.958607,-6.661903,-9.334455,9.018102,8.787244,-9.825032,-3.859005,-5.595037,-7.158779,2.752957,2.833903,1.643240,-1.196083,-6.027973,1.969121],[-6.832794,-2.837123,-5.487411,2.925632,-4.713206,8.668001,5.334513,3.700485,5.364968,-1.327720,-0.591098,-2.762408,-8.487195,-8.249403,6.875573,-3.524718,-8.690210,-4.724369,-9.902037,-6.625122,2.498933,9.716072,7.027823,-3.539630,6.907107,8.984098],[-6.254023,7.379080,-0.059593,-2.540179,8.549819,4.983783,9.710282,-9.091338,7.794916,-2.059285,-2.514188,5.201236,-7.607063,-2.305288,-5.093577,-8.271525,4.502908,3.370880,1.302566,5.500111,2.353489,-4.400194,6.903640,-9.841111,-2.110546,5.349942],[-4.154132,-8.284331,-5.197233,-8.620939,9.818320,-5.287571,-7.388996,-1.323212,5.783597,1.732463,9.833475,1.216873,-5.094003,2.379732,9.350238,-8.326674,-5.940233,-4.909779,0.531589,7.264443,5.029936,-9.819116,-4.832051,8.104346,-2.435789,-8.282331],[8.174248,-8.398024,3.472641,-4.895848,-0.448783,-3.234786,8.508484,-1.901052,-1.873120,3.195557,8.774797,9.611007,3.136346,6.330328,7.988318,9.591524,9.226509,6.977519,4.249152,6.462662,-5.721725,-8.330685,0.218911,-2.702935,8.542538,2.124134],[1.215167,-2.764880,-9.536203,6.218496,5.361789,-7.503074,-5.787027,2.962393,1.734455,-4.683007,-7.871244,0.217555,7.295381,9.114726,-3.314527,8.985000,-7.334394,-6.844361,4.522084,-7.100803,-5.100099,6.836728,-6.059949,-9.184353,-0.571584,2.354172],[-0.598104,-6.733210,4.861746,-3.578197,-9.882556,9.538887,6.656412,7.803575,9.543541,6.364634,-8.190319,1.021180,3.152277,-6.014223,-9.249708,-1.024666,4.630316,-0.085840,5.231185,-5.842030,-2.491659,-6.589527,8.957020,-3.187475,8.909216,-6.173775],[-2.388114,5.388248,0.154541,0.767853,0.698928,-8.548956,-8.353251,2.390227,8.684066,-8.411254,-0.340962,3.431808,-6.814586,-6.108820,1.643219,-4.413033,-5.128148,1.312917,5.914056,2.203586,8.904239,1.451601,-6.919126,4.262032,-2.271280,0.900434],[-6.152632,-3.565245,-8.529069,-9.295395,0.644992,-3.812598,-2.756851,-9.744549,-0.532514,2.509201,4.105289,-3.139567,8.020461,-0.347782,1.577928,-0.061723,-8.995211,-1.885148,-4.745680,3.113672,5.007262,5.549433,4.082621,-0.380205,-8.158354,3.308257],[-0.994506,1.665713,3.423279,-2.981029,-9.862909,-1.768206,4.266722,0.432552,-8.642993,-2.138552,-5.335073,5.191756,6.926616,-7.606721,5.525308,3.926106,8.311840,-7.301707,-7.501802,7.130291,4.619073,-1.010719,-0.014521,-8.102651,-3.742929,0.580979],[6.358906,-5.333778,-2.773618,-3.356880,9.352674,1.279766,-6.700464,4.785045,-3.574252,6.184941,0.115223,0.648493,-4.700284,-9.585747,-1.637280,2.276270,-5.426299,-0.444620,-7.290571,6.894270,-3.459099,-3.032865,-7.824397,-3.022968,-3.030883,-7.857482],[7.130973,-2.465206,-6.855103,-1.896975,-0.401104,-2.837128,5.843676,3.385870,9.910583,3.860976,9.046824,-4.622631,-0.398104,4.682671,5.753023,-7.788458,4.750623,-5.014127,3.063795,-3.899652,-9.395575,-9.149092,9.986817,-5.560848,-9.087876,-8.113685],[3.273734,6.900881,1.085271,7.671384,4.031650,7.802384,-4.547196,-5.332328,-6.955466,7.134633,4.389690,8.867433,3.464241,9.180340,7.622305,7.784122,-4.761765,-2.955208,4.651585,-0.911471,6.755902,6.697706,8.082298,7.993746,-4.629252,8.994759],[8.397058,-0.691480,-6.935465,-5.778821,-4.525267,-0.921178,7.198697,-4.814575,-8.442795,2.152394,1.563585,7.173509,-6.098624,-1.315050,8.135282,-5.482557,-6.135910,6.059003,-8.137460,3.475401,-0.011689,0.584331,-8.580945,-2.219115,2.471535,0.050406],[6.826289,9.597235,1.623524,-2.008559,9.109671,7.060138,-4.863385,-3.629340,3.488559,1.257558,-8.143838,1.868453,-3.162616,6.660540,6.166711,-3.379771,-8.598622,-5.521986,-7.173820,-5.934885,1.538178,8.269351,5.022178,-5.710468,3.162898,-9.523338],[-0.975523,2.096804,2.747232,-1.322662,2.458207,2.952218,9.303441,3.642743,0.432947,4.717644,-9.808135,-1.662439,8.565848,-9.184863,-6.670534,-0.218154,-1.510986,5.562677,-1.703901,-1.045487,8.658269,1.194783,2.343007,-4.646670,9.260635,1.252882],[-9.214934,2.258988,-5.736885,7.231841,-1.451707,2.031245,6.027331,-7.868716,6.578086,1.348999,9.600193,5.433418,0.720861,5.125116,6.861237,-2.133963,-3.943561,6.589478,9.498053,6.509895,-1.671567,-3.544918,0.973354,-2.369085,5.117410,7.207635],[-7.267273,6.559568,-1.120363,-9.094351,3.800208,-5.334173,-0.350598,-6.058704,-8.902494,4.267570,3.870231,-3.814060,2.292997,4.921395,-9.861759,9.789421,0.991565,-1.803396,5.124074,6.314235,-3.294524,-9.699884,-7.239090,-1.022623,-0.008959,4.722232],[-6.529257,-4.608562,-8.147739,-4.994126,5.540992,-5.222772,2.336182,-6.123406,5.567018,5.155527,8.507089,8.406458,8.841955,-8.667130,7.071002,3.181338,4.306645,4.108146,2.792523,-0.106254,4.477969,9.453566,-2.435258,7.748699,4.332761,4.675026],[-4.526837,-0.281691,-3.084023,5.682377,1.715385,3.723394,0.602953,-7.949740,9.360043,5.664877,3.347203,1.613278,-3.891440,-5.035096,0.341023,3.751107,-1.484680,2.976257,-5.669228,-4.661079,8.239629,2.478279,8.832475,3.394093,-8.580579,7.697485],[0.471439,8.960685,-7.304652,-4.608696,7.550660,0.809543,0.571296,3.685276,-4.674795,7.431420,8.288999,-4.904584,0.216807,5.425046,-9.690974,1.847050,4.741255,4.088920,-6.479376,-2.661932,7.791394,1.028378,-0.019345,5.150382,3.271551,4.943665]], dtype = "float32")#candidate|8496|(54, 26)|const|float32
call_8495 = relay.TupleGetItem(func_4169_call(relay.reshape(const_8496.astype('float32'), [13, 9, 12]), relay.reshape(const_8496.astype('float32'), [13, 9, 12]), ), 0)
call_8497 = relay.TupleGetItem(func_4172_call(relay.reshape(const_8496.astype('float32'), [13, 9, 12]), relay.reshape(const_8496.astype('float32'), [13, 9, 12]), ), 0)
output = relay.Tuple([call_8493,call_8495,const_8496,])
output2 = relay.Tuple([call_8494,call_8497,const_8496,])
func_8503 = relay.Function([], output)
mod['func_8503'] = func_8503
mod = relay.transform.InferType()(mod)
output = func_8503()
func_8504 = relay.Function([], output)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8503_call = mod.get_global_var('func_8503')
func_8504_call = mutated_mod.get_global_var('func_8504')
call_8514 = relay.TupleGetItem(func_8503_call(), 2)
call_8515 = relay.TupleGetItem(func_8504_call(), 2)
uop_8522 = relay.cos(call_8514.astype('float32')) # shape=(54, 26)
uop_8524 = relay.cos(call_8515.astype('float32')) # shape=(54, 26)
const_8525 = relay.const([[2.863883,8.645842,-1.671799,-1.238404,-1.986969,-8.146394,-8.086429,-0.531287,8.004681,-2.768529,-4.102584,3.784400,6.358471,-1.200388,-1.541715,-9.848964,4.774546,-1.812323,0.503352,8.647165,3.174371,-9.672103,3.734600,-9.578280,-6.023575,7.974706],[7.626560,9.886866,6.456804,1.112976,1.354464,4.609492,0.312842,-1.260839,4.367466,-7.725765,-4.155693,-2.230653,-3.839076,-3.747876,2.721511,9.351617,-3.443679,-8.987727,1.906356,4.966733,5.206830,1.599148,-6.050012,-4.181883,-0.727791,-0.627949],[0.730861,-1.331680,2.937018,7.005931,-9.500702,7.385897,3.296866,-8.908188,1.986253,8.610594,3.548494,-8.603527,-0.593959,3.294252,9.544183,6.779414,-3.391307,-4.387506,-3.428188,7.423840,1.953162,4.158641,-6.015039,6.130131,4.686245,-6.328964],[9.158062,-6.427732,7.587991,-5.988753,9.830712,-4.411495,0.546983,1.490638,-3.985541,-7.796110,-1.780037,-4.837568,-8.205755,-4.215008,-9.315093,-9.272382,5.490957,6.250914,-2.569782,-5.206676,-9.688782,3.057279,3.640100,0.253068,8.180505,2.009195],[-1.134141,-4.550900,3.619638,-1.094943,-1.326654,-1.880135,-1.188257,-8.667122,5.880038,-0.206412,9.085483,-6.212831,3.466558,-2.861626,0.390912,-5.611845,6.986474,-3.161137,2.983631,-8.107249,0.091637,-7.956436,4.394533,-4.715950,8.225151,-6.128640],[2.837712,6.089580,-8.153027,0.109195,-3.882869,5.457900,7.597836,-5.661599,1.185334,-7.779374,3.180196,-7.834277,4.562540,-9.474465,3.507426,-9.572708,5.016356,9.071708,8.474008,1.799012,-0.957277,-7.513897,6.505140,7.601044,5.503928,2.067665],[-1.221681,9.447286,1.104878,-0.980577,-7.527876,3.955640,-0.282430,-1.927885,4.902393,9.251338,-1.080640,7.817603,1.576118,-4.928252,-4.623338,1.102861,9.425522,4.993440,-7.606075,-7.456515,-1.564780,-3.053313,-5.032890,-4.255951,1.975200,-6.926806],[9.909145,4.074318,-1.125545,-3.232984,5.944127,1.449231,-0.124984,7.980905,-6.461324,-8.108668,3.428205,2.582722,2.403118,-5.735232,-2.540330,-3.237930,-9.420929,-4.389994,-6.358550,-3.552055,-0.874317,-5.810719,-6.513110,-2.467070,4.105414,8.413446],[3.096386,4.548765,-3.893556,8.626916,-7.121842,9.987139,7.207494,5.906135,-6.742981,-6.189748,0.639581,4.510437,-9.091193,-8.764741,-7.900108,9.165919,-2.478892,-4.585697,-2.416146,6.073000,-4.334035,4.585392,-0.951702,4.183160,-9.421434,-7.736252],[-5.598461,1.033461,1.011709,1.470578,1.655383,7.375801,9.410672,6.753412,-5.488061,-4.641444,1.116947,-6.746598,-4.347054,-4.493688,1.184375,-7.177538,-3.829926,7.828328,0.233389,-2.194255,5.865778,-6.158552,9.861347,-8.702259,3.473654,-3.969204],[-0.480385,-1.940123,-4.930867,-0.465884,5.650937,-7.851404,-7.177240,8.504917,-6.026641,6.013779,-5.926552,-5.462119,0.770183,5.747153,8.750096,8.884790,-3.151670,-6.699137,-2.287693,6.104087,8.906341,7.601320,0.631195,8.935051,-2.702899,0.789841],[-0.761378,3.148658,-4.949842,-0.541267,-9.010246,2.285074,-4.810519,-8.021445,-4.333653,-3.259142,1.008613,-9.486425,3.891412,-2.259029,-9.826382,-4.426370,8.572561,-2.676660,-7.138852,6.769765,-5.803962,2.713781,-8.564109,9.579683,1.399891,-4.853882],[1.949291,1.000508,-4.912677,3.736321,3.871021,9.712260,9.358986,-1.989622,1.816836,-2.053864,1.789933,-3.219849,0.478614,-3.408159,7.244547,2.702990,3.405576,2.291879,-7.521075,-5.014219,-5.626943,-1.501508,8.714129,4.564745,-3.952896,-2.609657],[-9.234125,7.783923,-4.699326,-1.330685,-0.409435,4.201815,2.888611,9.439474,7.286728,7.666764,-9.173337,6.747401,3.420301,-1.279820,-1.577628,8.693962,6.940886,2.973380,-8.377504,0.440657,9.208206,8.793599,-5.809531,5.381875,-0.154102,9.956694],[-9.471053,2.587492,-5.528018,-1.440962,-6.777506,2.682763,-9.265969,-3.069976,-3.000379,-8.459402,-8.413739,-5.772529,-0.878861,-7.824665,1.898626,7.367906,-2.635812,2.250102,-8.931177,7.406748,5.696354,-5.935435,3.976691,-0.154613,0.106733,-4.790115],[-5.902216,-4.349103,-5.036236,-9.399298,-9.995799,5.348109,-5.448808,6.078377,-0.928534,5.920663,2.724151,-8.244402,-5.494572,8.089644,7.892168,5.306528,-2.295784,-9.515423,-2.660006,-2.835976,7.708955,7.625665,-2.402415,-3.792036,-0.907678,-4.516900],[-7.786559,-3.411357,-3.905076,-1.313991,1.323693,5.767147,2.669315,-5.155132,-9.940338,-2.014192,2.814479,2.921084,4.378988,-4.573960,-6.544115,4.362017,2.194993,7.290819,6.860247,8.640793,-0.012955,1.057257,1.726688,0.140236,-0.038394,5.590745],[-9.584515,-5.116596,-1.811968,8.563968,7.419808,3.438382,-8.216387,-5.773602,-3.587325,7.283263,6.275837,-1.284432,-6.732173,-7.042435,-9.641934,-5.017402,9.927937,-5.569228,-8.415765,-1.421752,-7.811852,-2.338239,-0.357953,9.342148,6.060472,1.343703],[7.868729,5.484264,-5.413382,-9.101931,3.004927,4.655105,5.909589,-6.425186,1.532754,-0.750286,0.738301,-8.854224,9.216230,-5.247493,-2.974802,3.557137,-4.693370,-5.133769,2.358412,5.857074,9.189422,0.866880,-2.419309,-0.842300,-4.309110,8.783221],[-2.495781,7.950456,5.737391,-8.684111,-9.992967,4.449563,-2.605833,7.667847,6.614692,-2.264405,8.985638,1.066490,8.051101,8.711966,-7.439869,3.594904,-6.928854,9.580088,7.246659,-8.312065,3.421723,-7.477973,8.198927,1.975317,-8.913420,8.284580],[4.872944,4.743583,8.407644,-8.415898,1.178923,-1.224002,2.598861,-9.003725,8.579500,-0.187479,-1.951654,-0.812166,-3.772868,-0.541696,6.635507,-0.824124,3.887557,7.385819,-7.226233,-0.799373,-8.396444,1.268058,-6.148390,-5.927910,-8.318329,5.646518],[5.975952,-2.747711,7.946449,-5.535780,1.953768,-1.902550,-9.879525,5.287354,1.297754,-4.604962,-2.781792,7.882384,0.959083,-1.157877,-8.156617,9.228491,9.896737,9.296389,-4.701658,4.452466,-3.964216,-7.158130,7.390935,5.956726,-6.967512,-0.511445],[-8.334837,7.195154,6.821349,2.383973,6.608999,0.125922,2.307002,-9.810235,-4.477149,0.449438,0.395310,4.725372,0.277576,4.110031,9.418823,-0.439546,-8.110281,5.331322,6.133655,6.118166,5.079084,7.014229,-9.613814,0.297887,7.230283,8.516103],[-9.669377,0.577393,-2.894946,9.409706,7.546909,7.052764,-8.442537,5.216635,6.355507,-5.871468,-0.458910,3.702931,8.833816,2.728190,6.543579,0.449897,-4.596712,7.495165,-8.225084,-7.064840,-6.459649,1.699881,-6.132052,-6.679822,3.018584,8.670014],[-5.076716,-0.582090,9.284211,-8.539935,8.402816,-2.534018,4.391916,-0.160194,6.163426,2.220379,-5.491628,-5.623597,4.453586,-2.763875,0.304661,-7.772049,0.705184,-2.143940,8.088626,5.751995,-4.507166,-5.533056,-7.944485,8.520317,5.464406,9.666059],[4.494478,-9.796090,7.704359,-1.878522,-7.133687,-3.290597,5.847828,-2.362893,-4.416870,7.763236,-6.299617,-2.103928,-2.074755,-8.865969,-6.867798,4.968680,3.709932,-5.148292,2.854540,2.253849,-2.545909,0.265777,-4.674357,-8.707401,6.265875,-6.521389],[1.394268,-6.658101,-4.764751,2.899510,4.213473,1.730194,-8.116296,1.742079,-3.663912,-1.656927,-1.794048,-8.955423,2.622415,4.958659,0.118465,-5.168656,-9.934039,-0.650810,9.193725,7.252761,4.965843,9.838632,1.798231,2.750518,-3.745884,-9.342538],[1.809032,4.298712,7.690670,8.218046,-5.863381,9.560570,1.743682,-6.270444,1.641162,2.324347,-3.248761,-1.281130,2.311497,4.381361,1.378659,-8.752716,-1.905974,-7.801709,6.340702,-8.728930,3.965331,-2.059139,-7.172393,-4.052899,4.812692,-0.421976],[-1.065515,8.330810,-2.365419,7.493566,-8.713253,-1.101127,-6.640172,-0.021048,-6.939975,9.930599,-8.376774,-1.289175,-0.017369,-6.991717,-4.444999,8.278371,5.078362,-1.647624,6.854664,-0.275927,-4.281797,8.525332,2.002604,-0.904249,-9.304136,0.417849],[2.901368,3.084034,-2.356661,0.226219,-7.997111,-2.297042,6.862764,6.125380,-0.291876,-9.442253,-1.929847,9.214392,0.516478,-1.263701,-3.289718,-4.195238,7.053514,0.106809,5.233170,2.680482,-7.943823,-2.132088,-8.595230,-6.337147,5.458724,7.520868],[-9.159605,7.892337,-6.820433,-6.387935,7.720241,1.107276,-4.720720,7.881638,6.235283,-9.437814,-4.893671,-0.237652,-5.722097,0.520136,2.915978,-7.564279,-8.095957,-8.653336,8.283790,6.559472,8.362568,2.894898,1.118116,-8.334323,3.209008,-8.304620],[8.883686,1.036337,-7.183034,5.882118,3.909682,3.497325,4.175670,8.905839,-3.351314,0.244560,6.186208,-3.435545,1.422735,0.695591,6.828678,-6.625000,-3.892378,-4.472537,9.822116,6.955991,2.144927,-8.769252,-4.338016,1.615211,-9.293917,-8.993867],[-7.555350,-1.292371,8.862594,-8.478999,-9.778215,4.923775,-1.670282,3.497550,4.801808,0.970875,3.941019,3.556932,9.419075,6.042298,-1.014770,0.568989,-5.571273,-5.343308,0.172808,-2.070291,-0.877315,9.392532,5.446930,-8.514763,6.752810,-8.159230],[0.026866,-0.834924,-6.695113,-9.399881,4.258020,1.536070,2.281276,-7.553200,7.506913,-1.277353,-0.771650,-5.263843,-0.571708,0.751633,-5.381603,6.544112,8.174641,-6.052249,8.134090,-2.376929,-9.562278,-3.572590,-5.245366,1.407766,2.180336,1.081922],[7.243680,5.431449,-9.208452,2.457932,-5.505136,-3.144214,-6.708385,-1.715983,3.415579,-1.046498,-3.145861,3.636872,9.008113,-7.399928,5.458938,8.695569,-3.228686,-1.252643,7.878847,1.131868,-6.645456,6.620307,1.943354,-2.122981,7.057233,-0.198462],[7.088984,-1.739248,-4.029262,6.569266,-7.337430,-3.883400,-8.877107,4.782833,-2.500164,3.915759,-1.323239,0.251524,-9.008512,-1.168578,8.939632,-3.685654,-0.919523,9.807540,0.912766,-4.647216,2.558087,-8.211710,-8.025776,2.189182,6.869899,2.124316],[-2.612486,3.755434,4.429908,-7.565578,-7.682527,1.827079,5.185885,-1.776330,-8.889959,-4.499288,2.801341,0.563120,-3.364773,0.217062,0.100740,1.342674,2.253860,1.011504,-6.677201,3.726226,-0.252880,3.923272,-7.315176,-4.633082,7.392783,-3.764511],[-4.320727,-1.166943,0.736980,-5.589688,-2.467028,-5.052646,-8.211507,-4.670853,0.391424,6.644755,5.295116,8.260731,-7.939772,-3.518699,-9.443276,4.876099,-1.945686,3.984626,8.915324,-3.587148,8.436879,4.560256,-5.235621,-5.994579,-2.734839,6.663051],[-9.096348,0.987046,3.412747,-6.213733,-5.831802,-4.963480,1.379368,-2.753152,8.504231,3.058313,9.791742,-9.823280,-3.941948,5.713669,-5.206111,-1.955473,2.431623,-3.243546,6.145464,-6.135534,-6.402803,-8.649821,-3.422073,-7.595519,-3.964580,-2.083337],[-1.991784,8.481573,1.032622,8.578904,-7.975783,4.689532,5.523430,-4.703921,-0.128147,6.452882,6.194136,9.275845,-8.401330,3.836652,9.386796,0.957601,-2.221958,-3.116546,3.463740,6.832561,-8.505945,-9.658457,-4.116169,-3.288662,0.485049,2.601307],[-5.263841,6.256620,-9.909487,7.080212,-3.938619,-5.457513,8.262740,4.796377,-5.301312,-3.411498,6.350174,6.562547,3.903169,-8.326472,7.318637,9.271154,-2.046086,-1.671209,4.281048,-5.501093,-2.322902,-8.527328,-6.120649,8.807661,6.117817,8.157078],[-9.225734,-2.456131,-3.178981,-3.099170,4.592204,3.303227,-3.467618,-6.852745,6.196402,-0.030936,4.298424,-8.932437,-8.125527,9.132443,1.754958,-3.786105,1.683052,-7.167857,5.352555,9.289616,-2.981340,6.273641,-4.062665,9.465276,-2.964738,-0.376057],[-7.250693,4.513396,-1.102388,-1.677131,9.088054,3.893343,-6.902786,3.372769,-6.622158,-6.947512,7.330869,-3.356194,7.220704,-4.283645,9.751452,-4.603670,9.085174,-1.436462,-3.841786,4.748397,4.686925,-0.388928,-0.716930,1.063173,-1.509928,-6.190543],[8.975182,3.107425,-0.687605,1.000172,-5.333920,6.326262,8.730263,5.642504,3.780787,-0.390506,4.829322,-8.479130,-1.757712,9.805015,9.450024,-9.018099,-0.798757,0.110787,0.684607,-4.024902,-4.543736,9.407105,2.036364,4.318299,-6.504843,6.613821],[-1.840158,3.925745,7.060803,4.222349,-8.725899,-5.182343,-1.765432,7.334709,-8.913317,5.820394,-0.840767,-5.923319,-8.877349,-6.540355,4.204258,-9.535183,1.946017,-1.600753,-2.107477,5.885272,-2.263007,8.874050,3.560516,-6.617576,-5.765897,4.652374],[4.559817,-6.693163,3.672425,-7.314282,-6.885281,9.982187,-5.357534,4.141016,7.752848,-0.507585,-0.727030,-0.034029,-9.838748,3.917588,6.404081,3.177271,-1.808405,-2.556440,-7.637024,6.924288,0.043279,-9.308567,-2.873868,2.445226,-0.521950,0.795024],[8.574972,2.044388,2.470940,6.833472,8.286746,5.305357,-9.039922,8.691518,-5.779656,-1.685573,6.076681,5.720749,-1.157013,-9.564075,-1.038400,9.759961,5.768702,-5.558543,7.044288,2.260559,-7.507338,-4.997293,-1.337828,-3.355474,-8.173562,9.609180],[4.778514,-3.482720,2.382240,5.149435,-2.173816,0.330479,5.346619,-7.790547,7.963635,1.502730,-9.576443,1.954914,3.455942,1.230550,-4.858375,-9.275328,-2.469817,1.643308,6.901590,5.242719,8.617519,7.603671,-8.541995,9.592702,-8.046874,-2.800933],[-5.541234,4.127561,8.225761,-2.746042,7.017905,3.226330,1.400255,9.731674,4.925152,-1.948159,-2.743756,5.578667,-5.281196,-2.925448,1.902623,7.427604,-0.188623,-1.955610,-3.350728,1.410558,5.600956,2.464732,8.542173,7.987926,6.097500,7.701356],[5.018715,9.534105,0.087254,-6.993769,-7.914267,5.624734,7.233934,-9.323682,-7.048534,0.804420,-4.230876,-3.895701,-2.985514,4.269196,5.921847,7.823606,2.337213,-7.894804,-9.008387,-4.348635,9.683139,-1.243801,8.326825,-8.393365,-2.774472,8.184764],[-1.914848,1.954650,5.728224,-2.559541,8.644249,4.916543,-3.139968,-4.158376,7.446495,7.242441,-0.311315,4.748371,-9.165162,0.490798,1.555977,-9.720498,-2.280130,-4.461939,-1.680784,-7.521235,-4.170361,-1.242665,-3.081826,-5.262912,2.824540,-7.223588],[3.786064,4.491263,3.238448,-9.477601,4.740717,-9.763792,-0.009288,3.561919,2.706505,2.917806,-2.560651,2.478901,-3.765573,-5.209737,2.317257,5.929132,-4.127595,3.519833,0.459815,-6.923611,-6.385271,-9.052137,-6.560700,7.213957,6.893987,0.707321],[-8.813515,-0.511759,-3.542820,0.698115,1.859431,-9.513509,3.139703,7.695953,-3.806800,-6.908257,-1.490597,6.582400,-1.873999,7.640339,4.094166,3.965876,1.090325,-6.123535,-1.277865,2.639615,-7.640012,6.268004,9.571837,-0.123309,3.930968,-8.359985],[0.803030,-5.466828,-6.354972,-1.861628,-9.644718,-0.715623,9.845053,-1.240765,-7.938665,-1.140304,9.862787,-9.204607,-8.018391,-2.418462,1.440803,-7.695478,8.210689,7.646236,-0.827898,7.962738,1.747909,-9.086173,6.434024,1.708515,-0.431129,-9.447485]], dtype = "float32")#candidate|8525|(54, 26)|const|float32
bop_8526 = relay.logical_and(uop_8522.astype('bool'), relay.reshape(const_8525.astype('bool'), relay.shape_of(uop_8522))) # shape=(54, 26)
bop_8529 = relay.logical_and(uop_8524.astype('bool'), relay.reshape(const_8525.astype('bool'), relay.shape_of(uop_8524))) # shape=(54, 26)
var_8534 = relay.var("var_8534", dtype = "float32", shape = (54, 26))#candidate|8534|(54, 26)|var|float32
bop_8535 = relay.not_equal(call_8514.astype('bool'), relay.reshape(var_8534.astype('bool'), relay.shape_of(call_8514))) # shape=(54, 26)
bop_8538 = relay.not_equal(call_8515.astype('bool'), relay.reshape(var_8534.astype('bool'), relay.shape_of(call_8515))) # shape=(54, 26)
func_7013_call = mod.get_global_var('func_7013')
func_7018_call = mutated_mod.get_global_var('func_7018')
const_8540 = relay.const([5,-3,6,-9,2,6,-4,4,6,8,6,-1,9,6,-4,10,2,8,-1,4,-10,1,-9,1,6,3,9,4,6,1,-9,-1,-6,9,-7,-3,3,-1,8,10,-3,5,8,7,9,6,-1,-9,8,-6,-2,2,-4,8,6,7,-2,9,-4,-4,6,-3,6,6,1,-9,-3,-8,5,-9,7,-8,10,9,-4,7,2,9,-1,4,-6,-6,-5,6,-4,10,-2,-8,-6,6,-9,-9,4,-1,-2,-10,-7,9,-1,-3,-1,6,-9,-6,3,-4,9,-3,3,2,8,-6,-6,-8,-10,-2,4,-4,4,10,4,-10,-9,-7,-7,-10,9,-2,2,2,3,-1,-3,1,-5,-5,-7,3,7,10,9,3,-7,2,6,-9,1,-5,-7,2,-9,10,-3,2,2,-6,-4,-8,-3,-10,6,8,-1,2,3,-9,-4,-6,5,6,2,10,-10,-4,-1,-4,6,-6,8,5,5,-2,7,3,8,9,1,3,-8,-6,3,-7,3,6,-3,-1,-6,-5,-2,5,8,-9,3,-10,-3,1,-8,5,-2,-1,3,-3,-8,4,-9,-2,-4,5,7,10,6,5,2,3,10,-10,9,-4,2,-7,-6,7,1,7,1,-7,-1,-1,10,-8,10,-5,-1,-8,-6,5,5,2,-6,-6,-10,-6,-3,5,-10,6,-9,1,-10,3,3,10,10,5,-2,-6,2,-3,-8,-10,1,10,-7,-10,-1,6,10,3,-7,9,1,-2,-9,8,5,-6,4,-6,9,1,-10,-6,-1,2,9,-7,-9,3,-8,-5,-1,-9,9,7,3,9,-2,-4,6,-3,9,7,-1,-8,-3,9,-6,-8,-6,-6,-10,-2,2,7,2,-4,10,-3,-2,-7,5,-7,-6,7,-10,1,-10,2,9,-9,-9,-3,4,9,8,1,2,6,4,2,-8,4,7,7,5,-6,1,-5,-5,3,10,7,-3,-2,8,-1,-8,-2,2,1,-9,4,-6,7,3,5,3,7,-6,-6,-4,1,-3,7,4,3,-4,-3,5,-4,-9,4,-2,1,2,4,-4,10,-8,1,6,7,-10,-2,2,5,-4,5,-4,6,4,3,-3,-7,9,-4,1,-7,-2,8,-3,-5,-6,5,-9,-5,10,-4,9,5,9,-5,1,-5,-10,-8,8,2,-6,-5,9,-1,-7,2,-6,6,-8,-10,-2,3,8,7,-5,-1,5,7,5,2,2,-8,3,-6,6,8,-8,1,2,-3,4,-5,9,4,-9,6,10,-2,1,-2,3,-4,-2,-9,3,-9,-6,-8,8,3,-8,-1,-4,-1,-10,-1,-4,-5,9,1,6,9,-8,-10,-8,-6,-1,-7,9,-9,1,-3,4,3,4,7,6,5,-2,-2,8,-1,4,-6,-3,3,5], dtype = "int64")#candidate|8540|(525,)|const|int64
const_8541 = relay.const([[6.398050,-5.334108,9.966156,-2.121947,1.152628,4.367349,8.970461,0.767841,0.715213,6.315511,4.551405,-5.200658,2.833010,-4.539789,0.341782,0.661418,-0.770357,4.501979,7.337048,-8.142223,-4.946595,-2.047767,-8.601787,0.560273,2.342632,5.562271,4.512688,6.793675,6.746835,3.693985,-0.230615,4.970880,-8.014364,-2.716314,-6.697582,-1.793848,-7.746783,-5.208280,2.964382,-7.149220,1.075381,6.382029,-9.922004,1.963682,-3.147132,-7.270589,8.992952,6.587933,-7.254750,9.956651,-8.199623,2.469355,7.120672,1.236508,-3.317496,8.205868,4.807659,-9.891923,9.992664,3.501934,-6.707217,1.543967,-8.779654,-5.440865,-6.995011,9.583332,5.913905,-4.972072,9.506058,0.090390,9.979120,1.588949,9.689510,-4.323373,5.638493,-7.467751,-1.955794,0.714698,-0.729312,2.153057,-7.572315,8.472246,-7.884213,-3.727244,-9.344781,9.964834,-3.091481,-7.951941,-4.048381,-3.289833,1.722045,-4.416282,-9.816249,-1.858115,4.641912,-5.111519,-8.822838,5.990423,2.686060,-1.000312,-1.995035,3.846828,-0.869714,-5.053122,3.713587,-0.537124,-1.609958,-5.927425,5.574686,8.288318,-4.082618,-5.777486,-1.929512,7.019256,6.786790,7.653281,0.949778,-5.506408,-8.910944,2.731951,2.356607,-0.900440,-0.752921,4.113414,8.539178,-4.180761,-1.562475,4.480542,-3.289643,-1.203373,-7.399197,7.188485,-3.418133,-7.191580,6.343511,-6.405808,2.274578,-9.842238,1.877158,0.841019,-4.707795,7.794853,-5.005418,0.340112,2.625334,-4.786163,5.215939,-0.921737,0.537438,9.608399,-5.060127,-2.005362,-5.441375,9.960141,-9.635100,7.761434,-4.006075,5.569810,1.452151,0.383800,-6.365720,-8.541906,-2.248642,2.665987,0.661891,-3.392382,0.503169,-4.220522,3.460252,8.929615,-4.529531,-1.259974,1.012867,-5.550366,5.932345,-0.490480,9.482974,8.369088,3.936369,-7.549354,8.324147,-4.497199,2.334937,8.313988,-0.289609,-5.063920,1.747608,9.141744,-8.172577,3.369895,5.504213,3.567909,-0.753032,-0.699097,3.134347,6.833392,3.100421,4.731574,-0.986588,1.879174,-2.762314,2.458450,1.666069,-1.746930,-3.095308,7.831854,2.379171,6.083738,4.295985,1.055129,-1.779080,-7.032545,-7.544267,-6.680542,-4.427412,2.042149,8.209441,-1.686213,8.312588,-1.449223,-3.563033,-9.457437,-2.793048,3.653452],[5.709775,-5.981044,3.047073,-7.874430,1.535300,-1.730115,-0.719702,-2.838794,6.146492,-6.410227,0.883053,-5.386333,-2.188653,-2.629145,-2.349305,2.969296,-2.648477,5.171744,-0.295058,-2.031520,-7.268951,0.637744,-8.003509,-6.764672,-1.310543,0.505841,8.376179,1.952629,-8.561914,-2.767880,5.401504,-4.575129,-3.460970,-4.922451,6.204070,-9.531603,6.726180,2.146878,4.624208,5.437858,-1.519648,7.243643,8.974139,-0.041339,-8.000853,-1.667551,-8.418020,-4.102305,2.166941,3.656772,5.403484,-2.556365,1.728561,-1.527224,-0.830284,-2.500547,-0.558971,-8.066750,-6.603918,4.824209,-6.590165,-5.424527,9.305566,2.414214,5.680551,5.406527,-4.412523,-1.323891,7.171753,-6.984169,-3.115669,6.127061,-9.846926,-5.421707,-2.922006,-3.240973,-6.721832,0.143928,8.429093,-9.917792,7.862774,6.059394,9.963519,8.480195,-2.202293,-6.175231,-0.132187,-1.680464,-6.787851,4.086530,-9.749848,5.774024,-4.083270,-2.067741,1.043079,4.832169,4.369795,-4.586985,-4.927922,6.620965,6.112319,0.766845,7.235131,-4.182808,4.346048,-4.219012,5.345847,-3.023805,-3.600206,6.412629,4.208087,-4.659678,8.998209,4.162715,-2.456735,2.070007,4.347427,4.280768,-9.807789,-9.571167,0.024009,2.727825,-7.811468,2.850960,8.915550,-8.624207,3.598257,5.672775,0.424414,-9.590455,3.157473,0.448722,-1.509388,-6.168648,-3.215303,-2.929069,2.406370,0.963800,7.848073,8.200545,0.089573,4.688302,-4.946408,-1.396945,-7.088799,-5.333091,-5.981169,-7.466363,-1.844548,5.826770,1.647726,0.871447,1.898399,-8.787841,8.685198,3.911649,7.564956,1.181983,5.644820,2.126196,-6.384007,-4.459759,0.171663,8.950731,7.202361,-2.343955,3.429369,4.586253,-8.572838,3.985665,2.011287,1.639608,-9.995624,0.322312,-2.582293,9.569408,-6.849103,3.815773,-3.387526,7.320973,0.846991,-1.152637,3.778869,6.113430,9.262835,5.312961,-9.113858,5.287579,9.051244,-0.588030,7.943881,-3.868071,6.913967,7.230550,7.351669,7.248667,-7.023482,5.112679,-1.078613,-3.866592,1.042904,-6.165242,-4.889211,-9.993057,-6.580551,6.751391,-5.420356,0.591682,2.732218,8.160002,-7.467720,6.031956,-7.516464,-7.244928,9.370531,-4.177470,6.272883,-9.306284,-9.992188,2.523028,-6.750259,-1.274739,3.074995,-5.218218],[-8.674645,9.503907,8.230402,-5.279943,4.053719,-3.145811,7.627646,0.572895,8.249356,-4.565928,3.174655,2.018298,-6.461239,-0.154078,6.552915,-5.518328,7.863835,-9.681957,-7.544738,-9.057472,-8.837411,-4.896775,-9.444092,-9.877799,-8.535021,2.924672,-1.792058,8.411361,9.803974,-8.118698,-2.410868,-8.763721,-2.485997,-6.605794,3.530699,-6.739157,0.688549,1.681224,6.602865,-0.472716,-7.687280,2.186856,-3.234420,4.951647,-3.565472,-2.761909,-3.934942,-8.573945,-5.215046,1.069437,-5.103751,6.171426,3.198303,9.104647,-8.986826,-9.875868,3.066401,7.800797,-5.065890,5.680010,3.649480,0.944557,9.832518,-9.579457,7.282030,1.454772,-9.168371,4.241308,-8.862212,-1.473384,-0.332140,9.219130,-0.992628,9.624694,-4.414215,7.391913,1.475685,2.754979,8.966916,-2.575795,-5.454498,-2.134647,-7.498629,-3.854562,-8.234237,6.196746,7.285394,-0.493572,3.304446,-1.173505,0.089380,0.854503,-0.017596,3.007046,0.515544,-0.825773,2.266799,-5.475754,4.545698,-0.412191,0.749994,-8.950370,6.083359,-6.553992,0.519667,-8.455980,-2.342250,7.688990,-9.743711,-6.542963,-3.170349,2.052032,2.761828,0.736754,-4.317275,-2.040573,4.495720,-1.847662,-2.586547,0.146711,7.187515,-4.029915,-2.163189,2.864199,-4.669549,-7.300471,-4.757641,-3.933303,1.157742,-2.428135,-3.883359,7.814469,-1.183987,-3.638763,-2.751410,-3.736989,3.686214,3.375564,-8.553463,-1.221697,5.007957,4.902070,3.167472,2.583359,4.539599,-8.189821,7.666892,0.159732,-7.279404,-2.159164,6.732436,-0.263861,4.164756,-2.538051,-3.461196,-0.436625,5.052012,-3.525893,4.470448,7.672081,3.061877,-7.553792,9.511439,-6.158469,7.865467,-6.107892,3.101208,1.058121,1.907735,-6.488452,4.719521,3.927040,-0.700107,7.134249,7.448498,-5.973068,-0.721580,3.795575,-3.487262,7.242393,-0.288156,4.326345,7.016739,-2.879728,-8.631094,-5.487923,2.130128,7.000579,1.197421,-5.292183,3.164271,-9.257447,3.483391,-2.932570,9.454328,-7.253383,8.975103,-9.360739,-7.475048,2.274976,2.819207,-9.058023,5.920759,0.632600,-2.370560,-4.833590,-0.155781,-4.332458,-4.943290,-9.522703,-4.466366,-1.517974,-9.869823,-9.708465,2.274713,4.226493,-6.040431,-5.289257,9.457388,-9.774562,5.893354,-3.602491,0.272639,3.039883],[0.010845,-0.915212,-2.324545,1.550812,6.399742,-9.903191,-8.313918,1.499469,5.310047,-8.297244,2.779287,1.531320,6.292335,7.557333,-1.918245,8.387423,-8.024532,9.609279,-0.353747,6.270343,1.291151,-4.673741,1.361605,-0.788588,8.566964,-6.978667,1.246256,2.735695,3.964048,-4.456475,-7.781373,9.529637,1.640321,4.341463,6.744282,8.322439,-4.843303,-7.481733,0.972359,7.377779,-3.686455,-1.375872,2.736441,-7.844229,-2.456889,-8.336829,-6.386369,7.479363,-8.314661,2.301780,4.363950,-5.897834,1.857308,0.980052,7.333481,9.365864,-6.939377,-9.155111,-3.300413,-4.490423,8.577026,4.412028,-9.816309,5.823113,4.277330,7.590197,8.924795,7.685504,-9.808204,1.793725,5.549370,4.508644,-1.466385,2.436665,0.619802,5.218679,-9.595716,-4.093264,4.403087,5.555968,5.659030,0.315453,9.248076,6.271145,-7.599405,5.247641,6.084883,4.067838,-4.413835,-2.855810,5.764939,-0.321539,-7.664162,-8.296331,-3.333748,8.932204,-6.882951,-2.626150,9.970310,-4.066698,5.369096,4.901042,-5.751198,-6.333976,4.074053,-5.984899,0.681104,-8.613979,-1.906557,2.454547,-8.666848,-5.741274,-8.576713,-0.341202,-2.878092,9.590405,3.901590,-0.860585,6.771478,-4.633838,-5.244138,6.392553,-1.088391,8.592313,3.226269,2.706785,3.343547,-3.738147,1.118365,5.396447,3.985729,7.628663,7.990095,4.277131,-0.031551,5.149986,-0.478420,-3.921358,-8.799826,1.660091,5.170772,-8.463467,-2.538987,-8.580498,3.322259,2.910124,-6.298916,2.393010,1.118851,-8.282579,5.440445,-2.133109,4.012313,-8.681873,-9.239767,6.301342,-8.899551,7.547797,-0.836413,-1.265791,5.313699,1.337278,-3.340762,-6.674296,9.653735,-2.765489,-9.792346,-1.380048,2.537886,-6.839038,3.333842,8.324954,7.306805,-4.414453,-7.211638,5.770381,8.137153,6.887153,-1.618009,2.121206,8.770157,-5.475434,-9.279811,9.233474,0.889505,5.114491,5.786715,-9.826874,5.729836,-9.098774,-5.551538,-7.790726,-4.392824,6.061142,7.936827,-3.123928,-0.188297,-9.176639,-5.175975,0.800898,0.579870,-0.478562,8.097441,0.636507,2.714113,5.070275,-6.823699,2.441820,0.094914,7.043097,2.299810,1.703046,-1.652129,-0.471362,7.724435,-8.680145,7.999107,9.662815,8.697961,9.864035,6.262456,-1.285450,-1.306868,-1.294600],[6.166104,-1.078954,-7.336201,-2.866286,-2.667187,6.869634,-8.565294,-7.805519,-4.246630,7.507181,4.679581,-1.569661,9.757043,-6.473438,5.072467,5.611066,-0.093853,1.900128,-0.677661,2.538836,0.172156,-7.178998,-6.115251,0.882900,5.919358,-5.006524,6.298448,6.232809,-8.697475,9.092579,-9.096920,-8.714628,-6.601392,2.122844,9.215605,1.811676,2.239686,3.637524,8.729046,-8.798980,1.881848,0.275754,-5.584942,5.515751,-0.777117,-7.656638,8.540495,9.937756,-2.169348,-0.196937,5.378744,-2.363771,-6.428336,-8.457304,-7.908711,-7.719788,7.784957,8.744557,-0.441940,-2.330885,0.431946,8.130496,4.426685,-0.177162,-8.206507,-4.890262,9.287982,-6.805341,-3.094616,5.570038,-4.864060,-0.106302,6.453184,8.501161,-6.773433,-2.221372,-7.468427,-2.534410,-8.085050,9.706926,-0.125517,-5.572099,2.888420,6.333390,1.359821,-2.709888,-0.810969,9.280918,-4.177941,9.499906,8.195469,-8.808868,4.867023,0.259319,-4.028973,-7.301414,-4.478574,-1.095435,-5.154219,5.454916,-0.694113,5.676282,-3.649064,-4.475652,5.506338,1.619370,4.413459,-0.879736,6.645067,-6.371796,-3.803897,-4.449253,8.095231,-9.398795,-8.500604,6.788075,-8.809304,9.199920,1.675578,8.381551,2.120089,7.609452,5.038165,4.253309,-9.119461,-3.256755,8.484864,1.198257,7.811145,-4.235971,-3.588511,-0.308950,-8.206541,9.925441,0.850821,-8.606386,-4.240613,4.538827,7.811456,-9.521552,-3.517994,-3.124052,7.799584,-6.173671,-9.202460,-4.882022,-1.970206,5.380459,-2.855559,-6.248958,6.120489,-4.409189,5.161119,7.596365,-8.265484,-0.980029,-2.060068,-2.935266,-9.523198,-2.397763,5.890708,7.174665,5.752966,-5.437251,-7.256264,3.193228,8.804477,7.776683,6.375957,8.683871,-0.309110,-0.684643,5.533733,-3.385818,2.286990,-5.657696,7.847082,-8.092194,-8.008640,-0.764068,-9.831770,-1.565413,1.980352,-0.078366,3.706732,-9.663767,0.778065,-0.339850,-5.884004,-4.946088,-5.776306,-9.153981,3.247316,-8.388119,-8.277970,-3.817952,8.981714,-7.799947,-3.656638,1.894765,7.127600,6.660987,9.011612,9.577103,-3.481821,8.460883,-3.535586,-5.360563,3.446714,6.660399,3.307456,-4.348834,-8.530214,7.833017,9.478829,-1.401246,-2.446989,8.571373,-7.387271,8.458295,-8.115319,6.940411,7.802982,-9.594337],[-8.651976,-9.664571,9.308157,-6.920760,9.592220,-1.083142,1.767780,0.197546,-1.209892,3.813189,0.087603,0.412832,0.527429,-2.527724,-4.240818,7.518640,-9.492255,-6.267958,-5.745409,-0.040202,-3.634142,-5.997371,4.986690,-0.987264,-6.908833,-5.066732,-7.285061,-6.417296,-0.510909,-6.609696,9.223717,-1.073202,8.832334,-4.993399,7.357764,-1.017413,3.621875,0.472777,-0.687751,2.342090,1.437788,8.757953,4.158401,-5.302452,-3.194357,3.930184,-5.203701,-7.261287,-4.852167,-6.574453,4.219834,-5.706506,5.575992,2.356378,4.378264,3.594502,6.683365,-7.223928,-1.210496,-4.828041,-6.169487,-1.835183,7.989903,-8.068998,9.329693,-9.635335,7.500738,-0.981682,-5.545837,8.263290,-5.971029,1.012189,8.002958,-4.419624,-5.996776,-7.573481,-7.371828,2.536056,0.622434,-9.474432,-7.892777,0.976260,1.367409,9.672811,-0.721006,9.213577,0.253109,-6.262985,-9.395821,-2.812195,2.552895,7.389976,6.839309,-9.438675,4.479457,-8.290614,4.231160,6.020752,7.936650,-9.428894,3.677267,-4.568618,-7.126735,0.909663,5.249106,2.448535,6.317808,3.219102,-5.840284,9.253253,-7.788143,8.121796,-9.831075,-3.815514,9.130425,7.943181,-4.376070,4.681511,-3.564831,6.077222,-8.846697,-3.433093,-3.591227,4.927026,3.374946,-5.085153,-2.342909,7.672028,-9.614838,-3.540905,7.724810,9.511754,3.717309,-7.641782,4.354254,8.276855,3.851229,0.322457,7.096924,-2.927633,-6.677972,-0.997021,-0.678224,8.595488,9.539074,9.046391,7.274632,-1.567078,1.212394,-0.430489,9.350148,9.465327,6.263970,-7.000424,9.764591,-0.088792,3.532405,-4.109113,-8.395615,-8.628614,2.699514,-2.242444,-1.367350,9.377530,-7.729794,5.436590,0.213399,-6.035954,4.251668,-2.420947,2.765521,-7.718835,1.108592,-7.409242,-2.492040,-5.419533,-3.250607,-9.718871,4.076291,9.022025,2.477666,2.172315,0.510745,-9.906505,-0.663584,9.330704,1.441210,-9.536234,-3.885609,-4.291173,-0.023999,-8.603367,-0.121090,4.684893,-6.158477,1.442926,3.952087,-0.894051,-0.746331,-9.192757,9.189384,-4.767520,1.655281,-3.441746,6.236717,4.347517,1.507556,9.067343,-1.817913,6.328964,3.102018,0.407572,-4.708239,3.681223,-9.641584,5.718620,3.289715,-3.465550,6.511425,-0.602068,2.666830,-0.786969,9.954753,-7.531136],[-8.626972,-6.265742,-3.191957,6.442460,5.912916,4.049229,-5.767233,-0.184219,-2.389452,-5.593392,6.247712,1.166394,-6.602547,3.437681,3.905466,-2.869735,2.058264,4.278084,-1.019146,-2.576266,4.678525,5.694454,2.177245,1.322061,-7.387141,8.976081,-9.782823,-9.067976,-6.269695,-3.238811,-0.826496,8.156352,2.024580,5.879323,4.555782,0.183149,-1.253526,-5.734910,-2.697963,3.071168,-1.705327,-9.990783,3.320035,3.668479,-5.632567,3.641158,-3.593127,8.426095,2.036081,9.849576,-3.572711,1.268472,8.394570,-1.738952,2.789977,-0.397416,-2.989378,-0.121630,-1.377141,0.871740,3.353063,5.707599,-0.045903,4.171782,3.953748,-2.385859,-1.548810,-7.727233,-3.389611,7.929055,4.068257,3.899217,5.058412,9.717815,7.273515,-2.603781,-3.775821,3.747996,-9.759758,-3.508049,7.345630,-5.543224,8.030233,-8.938999,7.356109,8.615368,7.852753,5.420827,0.762349,-6.227593,0.686474,2.208966,-4.648087,-9.134644,-7.456331,7.191975,-7.358368,0.486037,-5.552572,0.196892,3.365382,-7.561410,0.581011,4.567798,4.734549,1.452769,1.454191,-3.997988,4.177706,-1.380110,0.804571,-2.447649,9.048710,6.641640,2.810490,-2.785125,-8.418548,2.542298,-3.829982,-3.893850,1.264950,-2.905384,-4.987458,-6.840448,-8.279899,4.449805,-7.072911,0.211449,9.842175,-3.754481,1.504677,-6.714556,6.717365,6.087656,-3.952293,2.114512,4.825477,-7.388632,-5.630860,-5.136432,-2.220576,6.310587,6.414701,-8.860401,1.810646,5.262414,7.355616,-6.257065,3.228814,-7.750472,6.946917,2.117337,-0.524019,0.826997,3.819128,8.507089,5.358576,-3.548583,3.036141,-5.553918,7.798039,5.197731,7.735275,-2.990803,5.711716,-8.682797,-2.977857,2.731570,-5.996052,-5.146562,-7.753439,9.232461,-5.563838,-4.178690,-7.903521,-4.938110,-3.698563,3.618639,-3.167117,3.364250,-8.876401,-8.936670,8.724654,8.459709,-4.241063,1.946913,8.708313,8.184261,2.316350,6.661584,-0.847022,1.290695,7.582945,-3.795194,-6.129043,8.228408,1.520316,-5.218239,-7.632896,-4.397856,6.036632,0.770305,-3.422214,-9.225332,3.224857,-3.975219,1.250870,-6.220473,-0.080116,-6.835999,-8.862766,4.671109,-7.467271,0.325734,-2.254498,5.760019,7.946826,-1.607872,4.128749,6.140564,7.998614,-5.481516,-4.961841,3.211025],[9.514839,0.195476,-5.003095,-4.314307,-9.650346,8.297573,2.730285,-8.465151,6.976043,8.824286,6.998557,8.986793,-7.043169,-7.587302,9.981062,4.597527,4.514211,-5.787870,9.034107,-2.611505,-6.787491,-2.139301,9.910374,8.823872,-2.414138,4.935465,6.365835,-0.831130,3.532991,-0.559172,-8.486199,0.884217,8.713110,6.171815,-1.932702,-4.271050,5.451049,0.293113,-0.439094,-2.866447,5.938603,-1.250288,-8.914680,-6.275213,5.447033,-8.466466,-6.364365,-0.707222,-4.136800,-3.673768,6.728800,3.561592,-7.174497,9.831065,6.226273,5.895984,-0.575801,-8.584354,-9.032184,-8.297638,3.100348,3.162461,-8.597814,2.442295,-4.751473,-5.094730,8.902229,-2.419443,-0.420014,-4.835635,4.886131,-8.661330,9.962698,5.259520,0.168676,-0.371041,-3.973500,-2.303391,3.381780,2.680853,0.394881,4.194952,-9.800683,-1.240184,-3.616097,-5.571816,-0.391278,6.338789,0.041895,0.688759,-2.306516,-8.214908,-5.412912,9.243849,-4.920867,3.683451,-4.133371,-3.092670,-6.250334,5.235740,1.038939,3.300296,-8.410200,-0.462579,8.963879,-6.905929,0.241611,-4.731541,3.128264,9.925016,8.565555,-1.081044,2.027464,-1.561218,3.036982,-5.731302,0.448919,1.675306,-9.202754,-3.950044,2.844917,4.759676,7.289174,-0.734844,-1.993178,-2.495730,-3.133585,4.316632,-5.258781,-4.427117,-0.411658,-4.790564,-3.821553,3.554080,6.960999,-3.003731,3.526717,7.738095,6.006590,4.383991,9.779645,1.385807,-8.579858,-3.429549,-5.760985,3.146675,4.071158,1.542403,4.096500,4.821955,-5.033303,2.602301,8.802128,-7.297359,4.434105,-5.090621,1.135061,-6.915481,5.537794,-8.714570,7.686179,-4.645365,-4.733003,-3.585181,-0.618896,-8.689375,2.900086,-2.333846,5.787574,-4.312617,6.645415,8.348511,-1.601216,-3.657328,-8.460534,-7.660322,-3.644830,6.862222,-8.273823,-5.632835,3.924941,8.521955,3.418267,4.645896,-6.631723,8.802713,2.952577,-6.840078,-5.604068,7.129468,-8.424955,4.990553,-1.839315,4.076292,-8.988340,0.511206,-2.598898,8.145026,3.077688,-3.579772,-8.904233,5.466744,7.498858,0.572762,-3.668158,-2.387255,-4.840824,-2.038013,-0.269585,7.448866,1.281705,-0.783639,7.962145,7.899287,2.834922,-5.216348,9.156091,0.125043,-9.579018,1.223822,5.934800,7.176304,1.884535,-3.082766]], dtype = "float32")#candidate|8541|(8, 224)|const|float32
call_8539 = relay.TupleGetItem(func_7013_call(relay.reshape(const_8540.astype('int64'), [525,]), relay.reshape(const_8541.astype('float32'), [1792,]), relay.reshape(const_8541.astype('uint32'), [8, 16, 14]), ), 5)
call_8542 = relay.TupleGetItem(func_7018_call(relay.reshape(const_8540.astype('int64'), [525,]), relay.reshape(const_8541.astype('float32'), [1792,]), relay.reshape(const_8541.astype('uint32'), [8, 16, 14]), ), 5)
bop_8545 = relay.left_shift(uop_8522.astype('int16'), relay.reshape(const_8525.astype('int16'), relay.shape_of(uop_8522))) # shape=(54, 26)
bop_8548 = relay.left_shift(uop_8524.astype('int16'), relay.reshape(const_8525.astype('int16'), relay.shape_of(uop_8524))) # shape=(54, 26)
bop_8561 = relay.add(bop_8526.astype('uint16'), relay.reshape(bop_8545.astype('uint16'), relay.shape_of(bop_8526))) # shape=(54, 26)
bop_8564 = relay.add(bop_8529.astype('uint16'), relay.reshape(bop_8548.astype('uint16'), relay.shape_of(bop_8529))) # shape=(54, 26)
uop_8570 = relay.cos(call_8539.astype('float32')) # shape=(8, 16, 14)
uop_8572 = relay.cos(call_8542.astype('float32')) # shape=(8, 16, 14)
uop_8573 = relay.log(bop_8545.astype('float32')) # shape=(54, 26)
uop_8575 = relay.log(bop_8548.astype('float32')) # shape=(54, 26)
uop_8576 = relay.sinh(uop_8573.astype('float64')) # shape=(54, 26)
uop_8578 = relay.sinh(uop_8575.astype('float64')) # shape=(54, 26)
func_2523_call = mod.get_global_var('func_2523')
func_2526_call = mutated_mod.get_global_var('func_2526')
var_8580 = relay.var("var_8580", dtype = "int8", shape = ())#candidate|8580|()|var|int8
const_8581 = relay.const([-8,1,-3,8,-1,-7,-8,-5,9,-10,6,7,6,10,-2,2,-2,-7,-5,4,-2,1,9,-8,-9,-9,10,2,3,3,-5,-7,-9,-3,9,-10,-8,3,-6,-10,-1,-1,-5,6,7,5,-6,10,-7,10,8,-9,3,-8,4,6,-8,-6,-10,-1,4,10,8,-5,-10,-3,9,9,-5,-10,6,6,-3,-7,5,-9,-3,10,8,8,-2,-6,-2,-2,-1,-8,8,-1,6,-3], dtype = "int8")#candidate|8581|(90,)|const|int8
call_8579 = relay.TupleGetItem(func_2523_call(relay.reshape(var_8580.astype('int8'), []), relay.reshape(const_8581.astype('int8'), [2, 3, 15]), ), 0)
call_8582 = relay.TupleGetItem(func_2526_call(relay.reshape(var_8580.astype('int8'), []), relay.reshape(const_8581.astype('int8'), [2, 3, 15]), ), 0)
bop_8603 = relay.right_shift(uop_8576.astype('int16'), relay.reshape(var_8534.astype('int16'), relay.shape_of(uop_8576))) # shape=(54, 26)
bop_8606 = relay.right_shift(uop_8578.astype('int16'), relay.reshape(var_8534.astype('int16'), relay.shape_of(uop_8578))) # shape=(54, 26)
func_7722_call = mod.get_global_var('func_7722')
func_7724_call = mutated_mod.get_global_var('func_7724')
call_8612 = relay.TupleGetItem(func_7722_call(), 0)
call_8613 = relay.TupleGetItem(func_7724_call(), 0)
func_7991_call = mod.get_global_var('func_7991')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_8616 = relay.TupleGetItem(func_7991_call(), 1)
call_8617 = relay.TupleGetItem(func_7993_call(), 1)
uop_8622 = relay.acosh(uop_8576.astype('float64')) # shape=(54, 26)
uop_8624 = relay.acosh(uop_8578.astype('float64')) # shape=(54, 26)
func_7722_call = mod.get_global_var('func_7722')
func_7724_call = mutated_mod.get_global_var('func_7724')
call_8636 = relay.TupleGetItem(func_7722_call(), 0)
call_8637 = relay.TupleGetItem(func_7724_call(), 0)
uop_8639 = relay.rsqrt(uop_8573.astype('float64')) # shape=(54, 26)
uop_8641 = relay.rsqrt(uop_8575.astype('float64')) # shape=(54, 26)
bop_8661 = relay.logical_or(uop_8622.astype('bool'), relay.reshape(uop_8522.astype('bool'), relay.shape_of(uop_8622))) # shape=(54, 26)
bop_8664 = relay.logical_or(uop_8624.astype('bool'), relay.reshape(uop_8524.astype('bool'), relay.shape_of(uop_8624))) # shape=(54, 26)
bop_8671 = relay.greater_equal(uop_8573.astype('bool'), relay.reshape(uop_8622.astype('bool'), relay.shape_of(uop_8573))) # shape=(54, 26)
bop_8674 = relay.greater_equal(uop_8575.astype('bool'), relay.reshape(uop_8624.astype('bool'), relay.shape_of(uop_8575))) # shape=(54, 26)
bop_8686 = relay.greater(uop_8639.astype('bool'), relay.reshape(uop_8573.astype('bool'), relay.shape_of(uop_8639))) # shape=(54, 26)
bop_8689 = relay.greater(uop_8641.astype('bool'), relay.reshape(uop_8575.astype('bool'), relay.shape_of(uop_8641))) # shape=(54, 26)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_8702 = func_1651_call(relay.reshape(uop_8570.astype('float32'), [8, 16, 14]))
call_8703 = func_1651_call(relay.reshape(uop_8570.astype('float32'), [8, 16, 14]))
func_6367_call = mod.get_global_var('func_6367')
func_6368_call = mutated_mod.get_global_var('func_6368')
call_8708 = func_6367_call()
call_8709 = func_6367_call()
func_8503_call = mod.get_global_var('func_8503')
func_8504_call = mutated_mod.get_global_var('func_8504')
call_8710 = relay.TupleGetItem(func_8503_call(), 0)
call_8711 = relay.TupleGetItem(func_8504_call(), 0)
func_4169_call = mod.get_global_var('func_4169')
func_4172_call = mutated_mod.get_global_var('func_4172')
call_8714 = relay.TupleGetItem(func_4169_call(relay.reshape(const_8525.astype('float32'), [13, 9, 12]), relay.reshape(bop_8686.astype('float32'), [13, 9, 12]), ), 1)
call_8715 = relay.TupleGetItem(func_4172_call(relay.reshape(const_8525.astype('float32'), [13, 9, 12]), relay.reshape(bop_8686.astype('float32'), [13, 9, 12]), ), 1)
bop_8733 = relay.divide(uop_8622.astype('float32'), relay.reshape(bop_8526.astype('float32'), relay.shape_of(uop_8622))) # shape=(54, 26)
bop_8736 = relay.divide(uop_8624.astype('float32'), relay.reshape(bop_8529.astype('float32'), relay.shape_of(uop_8624))) # shape=(54, 26)
uop_8738 = relay.log2(bop_8661.astype('float64')) # shape=(54, 26)
uop_8740 = relay.log2(bop_8664.astype('float64')) # shape=(54, 26)
func_7281_call = mod.get_global_var('func_7281')
func_7284_call = mutated_mod.get_global_var('func_7284')
const_8755 = relay.const([3,2,10,-6,-9,3,4,7,-1,5,7,5,-2,-1,1,1,5,2,3,4,-10,-7,7,2,-8,3,4,-9,6,-7,-7,-1,-10,-2,2,6,-2,-10,7,-8,-1,-10,1,-1,-1,-4,-7,-3,-1,-1,-8,6,-9,9,-10,-3,-10,-8,-4,9,-7,4,-9,2,-1,-2,-9,-8,-7,-8,-6,10,6,10,-6,7,-2,-9,9,3,-2,8,-7,2,5,-3,-1,-10,10,8,9,-1,-6,5,2,5,3,7,-2,-6,-9,10,1,-8,10,-8,1,1,10,5,4,-5,-3,-8,1,4,10,-1,-5,-3,7,5,3,-5,4,6,-10,-4,5,-10,4,8,9,9,10,-3,5,5,6,2,2,7,-1,6,2,2,-3,4,-4,8,-4,3,8,9,9,-5,9,4,-2,-6,10,2,10,5,-8,-10,-1,4], dtype = "int8")#candidate|8755|(168,)|const|int8
call_8754 = relay.TupleGetItem(func_7281_call(relay.reshape(const_8755.astype('int8'), [6, 28])), 1)
call_8756 = relay.TupleGetItem(func_7284_call(relay.reshape(const_8755.astype('int8'), [6, 28])), 1)
func_7051_call = mod.get_global_var('func_7051')
func_7052_call = mutated_mod.get_global_var('func_7052')
call_8758 = relay.TupleGetItem(func_7051_call(), 1)
call_8759 = relay.TupleGetItem(func_7052_call(), 1)
func_7467_call = mod.get_global_var('func_7467')
func_7470_call = mutated_mod.get_global_var('func_7470')
var_8763 = relay.var("var_8763", dtype = "float32", shape = (945,))#candidate|8763|(945,)|var|float32
call_8762 = relay.TupleGetItem(func_7467_call(relay.reshape(var_8763.astype('float32'), [15, 7, 9])), 0)
call_8764 = relay.TupleGetItem(func_7470_call(relay.reshape(var_8763.astype('float32'), [15, 7, 9])), 0)
func_7991_call = mod.get_global_var('func_7991')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_8765 = relay.TupleGetItem(func_7991_call(), 1)
call_8766 = relay.TupleGetItem(func_7993_call(), 1)
func_7281_call = mod.get_global_var('func_7281')
func_7284_call = mutated_mod.get_global_var('func_7284')
call_8771 = relay.TupleGetItem(func_7281_call(relay.reshape(const_8755.astype('int8'), [6, 28])), 0)
call_8772 = relay.TupleGetItem(func_7284_call(relay.reshape(const_8755.astype('int8'), [6, 28])), 0)
func_6316_call = mod.get_global_var('func_6316')
func_6318_call = mutated_mod.get_global_var('func_6318')
call_8774 = relay.TupleGetItem(func_6316_call(), 0)
call_8775 = relay.TupleGetItem(func_6318_call(), 0)
func_8059_call = mod.get_global_var('func_8059')
func_8060_call = mutated_mod.get_global_var('func_8060')
call_8777 = relay.TupleGetItem(func_8059_call(), 0)
call_8778 = relay.TupleGetItem(func_8060_call(), 0)
uop_8784 = relay.tan(uop_8622.astype('float32')) # shape=(54, 26)
uop_8786 = relay.tan(uop_8624.astype('float32')) # shape=(54, 26)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
call_8791 = relay.TupleGetItem(func_290_call(relay.reshape(var_8580.astype('int8'), []), relay.reshape(const_8755.astype('int8'), [8, 3, 7]), ), 0)
call_8792 = relay.TupleGetItem(func_294_call(relay.reshape(var_8580.astype('int8'), []), relay.reshape(const_8755.astype('int8'), [8, 3, 7]), ), 0)
bop_8794 = relay.power(bop_8661.astype('float32'), relay.reshape(bop_8561.astype('float32'), relay.shape_of(bop_8661))) # shape=(54, 26)
bop_8797 = relay.power(bop_8664.astype('float32'), relay.reshape(bop_8564.astype('float32'), relay.shape_of(bop_8664))) # shape=(54, 26)
uop_8798 = relay.log10(uop_8738.astype('float32')) # shape=(54, 26)
uop_8800 = relay.log10(uop_8740.astype('float32')) # shape=(54, 26)
output = relay.Tuple([bop_8535,const_8540,const_8541,uop_8570,call_8579,var_8580,const_8581,bop_8603,call_8612,call_8616,call_8636,bop_8671,bop_8686,call_8702,call_8708,call_8710,call_8714,bop_8733,call_8754,const_8755,call_8758,call_8762,var_8763,call_8765,call_8771,call_8774,call_8777,uop_8784,call_8791,bop_8794,uop_8798,])
output2 = relay.Tuple([bop_8538,const_8540,const_8541,uop_8572,call_8582,var_8580,const_8581,bop_8606,call_8613,call_8617,call_8637,bop_8674,bop_8689,call_8703,call_8709,call_8711,call_8715,bop_8736,call_8756,const_8755,call_8759,call_8764,var_8763,call_8766,call_8772,call_8775,call_8778,uop_8786,call_8792,bop_8797,uop_8800,])
func_8801 = relay.Function([var_8534,var_8580,var_8763,], output)
mod['func_8801'] = func_8801
mod = relay.transform.InferType()(mod)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8801_call = mutated_mod.get_global_var('func_8801')
var_8803 = relay.var("var_8803", dtype = "float32", shape = (54, 26))#candidate|8803|(54, 26)|var|float32
var_8804 = relay.var("var_8804", dtype = "int8", shape = ())#candidate|8804|()|var|int8
var_8805 = relay.var("var_8805", dtype = "float32", shape = (945,))#candidate|8805|(945,)|var|float32
call_8802 = func_8801_call(var_8803,var_8804,var_8805,)
output = call_8802
func_8806 = relay.Function([var_8803,var_8804,var_8805,], output)
mutated_mod['func_8806'] = func_8806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8059_call = mod.get_global_var('func_8059')
func_8060_call = mutated_mod.get_global_var('func_8060')
call_8818 = relay.TupleGetItem(func_8059_call(), 0)
call_8819 = relay.TupleGetItem(func_8060_call(), 0)
func_7281_call = mod.get_global_var('func_7281')
func_7284_call = mutated_mod.get_global_var('func_7284')
var_8830 = relay.var("var_8830", dtype = "int8", shape = (168,))#candidate|8830|(168,)|var|int8
call_8829 = relay.TupleGetItem(func_7281_call(relay.reshape(var_8830.astype('int8'), [6, 28])), 1)
call_8831 = relay.TupleGetItem(func_7284_call(relay.reshape(var_8830.astype('int8'), [6, 28])), 1)
func_3553_call = mod.get_global_var('func_3553')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_8838 = relay.const([-9.527314,-0.985665,2.728485,0.708510,2.370694,-8.219054,6.870198,5.396771,-0.793305,-4.466840,-2.106428,0.824472,-3.677017,0.042643,6.333559,-4.376370,-3.928221,7.849522,-3.532237,6.327675,0.348732,-0.276830,1.436772,1.059853,3.500394,-2.659677,-0.856587,4.239788,6.928067,-1.275216,-6.077618,-4.323927,1.458555,-7.084766,-6.700699,-7.755515,5.651728,-6.651130,-4.882378,-5.393691,-2.585168,6.664428,-4.298654,7.017710,1.382703,-4.717917,-2.189574,-0.715830,-7.734111,1.080693,3.476744,5.626779,-7.572094,4.858860,6.648932,-4.559783,3.922943,2.868310,6.697363,4.281402,-0.166530,-2.256448,-7.941991,6.024537,9.529337,3.149322,-3.113549,7.684588,3.134543,3.064865,-0.037618,-2.324069,5.479283,9.453856,-0.417644,1.737980,-4.256211,4.529091,5.377280,2.278630,2.078536,1.093244,0.326156,-3.490498,0.813737,-0.536758,-4.163630,3.124252,-2.927464,-5.681393,0.834612,2.198639,5.949245,-4.287819,3.507316,9.047820,7.876712,-9.775421,7.867869,1.919108,-0.018080,-7.751150,-1.315540,-4.848869,-8.771783,5.479677,3.675528,1.149247,8.777039,8.233815,1.837069,9.904864,2.734942,-1.642697,-6.806296,8.179991,6.162267,8.834158,-6.587661,-2.689668,-7.390488,-1.240186,-4.845348,-5.434297,-7.219604,0.863470,-1.104392,-5.133566,-0.914134,-2.265027,-0.352330,-0.826747,3.598070,3.311167,8.351833,-3.785499,4.860309,7.712265,-2.699683,7.749628,5.605821,2.208699,2.641790,4.492847,-6.667377,-4.694738,-2.534881,-1.610055,7.591771,5.286332,8.233287,-9.533830,-0.671225,-5.190021,-1.137583,3.096522,-8.265754,7.012227,-1.657196,-1.634897,0.192455,9.126281,8.598441,6.737386,5.069924,1.214329,6.835345,9.263622,-3.522797,-8.756094,8.569016,-8.501022,-7.598208,6.642774,8.368880,1.421842,6.260772,-0.071364,-5.160671,9.662800,-6.151010,-5.384050,-0.508792,0.581617,-6.884373,3.115039,-3.582167,6.538577,-2.158053,7.172740,-2.266834,-1.685475,-9.489119,-4.715095,-6.237037,-2.654490,7.890929,-2.158119,8.194133,-0.137783,-8.048486,1.983083,2.355326,1.753136,-7.668542,7.007567,-0.263273,-9.423848,-8.091674,1.016039,-2.187152,3.093423,0.360576,0.309993,-1.430543,-4.705610,-6.063554,1.335811,-4.965830,1.534958,8.608537,-6.085783,-9.570915,-3.568161,0.158527,0.054650,-3.029822,7.750221,2.942387,-6.501380,-3.177964,-9.396413,-6.726738,8.175703,-2.348355,9.436869,9.021229,8.396678,-5.056424,7.852952,-0.610176,4.927646,0.483297,-6.458550,-3.367168,-3.169607,4.347260,5.092623,-6.104336,-8.124548,5.897128,8.264359,7.341505,-8.794789,-4.441384,-2.049503,-1.049794,4.633954,-9.915471,-6.470028,-4.052510,-3.337661,7.729475,-7.206671,-6.260512,6.418797,-9.132465,-6.290761,3.584586,-2.979047,-2.134725,-6.851838,-9.862118,2.734315,6.045790,6.079822,-6.800735,8.760749,2.650045,-7.079726,2.701907,7.705035,-0.368055,3.229813,-7.594100,2.329905,-3.187318,-4.844256,-9.375939,-2.760122,7.714758,2.069895,0.814350,-2.583228,-5.674925,-1.980536,-4.491268,-4.166807,5.718312,-6.401438,5.995016,2.954840,-3.777492,-7.256579,0.526673,-6.871577,2.424667,-9.118402,3.198213,7.394157,4.846401,0.384282,-0.134879,-2.035746,3.432983,5.821981,1.205753,7.565368,-8.254489,-3.717979,-3.153056,0.071632,-6.449367,-2.728531,-7.549830,-5.204948,8.308364,1.068983,4.419104,5.591534,-8.327470,7.319157,5.441607,4.565315,-4.599386,8.028553,6.935936,-7.477661,5.657686,3.085069,8.702144,7.778047,1.945520,-2.236696,3.429766,6.212477,-1.438365,9.709711,3.398001,-1.024829,-3.871028,-3.657006,-9.238980,5.657220,8.096648,7.860779,-0.047720,1.478048,5.508447,-3.978369,-4.243490,-3.358280,-2.608428,-1.195699,3.452454,-1.479242,3.502528,6.311232,7.643584,9.327987,0.543858,0.896276,1.131268,2.947395,-7.060289,9.279748,7.259885,-2.578450,3.993144,-6.724210,8.056817,-0.121699,4.617524,-1.098412,5.354147,-4.317775,-9.231028,-8.503701,-8.249678,-0.700595,-9.234710,9.979477,8.851625,8.641589,5.605777,2.199872,-3.131847,5.731814,7.470536,6.640793,1.453801,3.589815,3.459086,1.689636,0.047848,1.598013,-7.776975,-0.267532,-7.359900,-1.413140,5.267125,-7.937014,-2.161230,0.499216,5.530788,-1.051107,-9.638511,-0.118811,1.743104,-9.888309,1.287823,-8.309019,-5.220635,3.867055,3.575938,-9.185928,-8.090681,-5.006250,-8.774585,-3.796219,-2.953920,-6.791288,5.551852,1.844471,0.731118,4.918897,1.208115,-8.125063,-2.566082,-9.642170,9.960139,-3.356369,2.810256,-9.196010,2.137814,8.964502,1.394720,-7.893125,-7.541072,-0.354744,5.964395,-9.539346,6.407570,1.784572,-8.318228,4.584859,-8.213440,0.160049,6.350953,-1.050590,7.712265,-0.424870,4.778585,9.496104,-4.697523,7.217342,2.819884,-8.022281,-9.695300,7.054490,2.474938,6.014824,-6.455093,6.744066,-1.806730,-1.550475,5.049708,4.651071,-6.702591,-1.103024,-8.318933,-7.009504,0.203154,-0.970545,-9.135480,6.555060,3.202855,-6.149074,9.939296,0.651845,7.839588,4.895710,-1.074475,1.554182,2.938045,-3.198276,-3.117502,-7.982293,0.778138,3.455127,-3.697920,-4.167463,8.832218,5.710881,-8.557151,0.611795,9.788400,0.777298,3.401766,-1.922908,-6.346707,-5.742745,4.186869,1.908144,1.244154,9.666278,0.105409,9.799170,-4.633064,6.180545,0.730474,-4.008980,-5.876020,3.715777,-0.165336,-3.883896,-4.579345,6.597433,6.175392,-2.294321,-6.390531,-4.502938,5.925666,-5.526344,2.683446,7.553189,-8.419991,1.458555,8.431460,-7.132862,-6.464744,-8.825372,8.803295,-4.936726,-2.495533,-7.547265,-7.807836,-2.483956,-8.290862,8.593826,7.071422,7.800535,-9.942672,-2.769016,2.408692,-3.539364,9.567344,-9.772454,-3.065650,-2.332995,2.886647,5.190853,8.699862,-9.168581,5.069964,4.484523,-3.012664,-7.705300,0.596716,-7.021977,-4.152086,-8.166294,7.425932,-3.663513,-7.365366,9.481372,5.726723,4.731365,-4.068997,1.383059,-3.724950,-8.033701,9.852025,6.460897,7.089830,9.355871,-7.730252,-1.158186,-9.894110,-2.446304,2.061485,-8.688596,-1.331341,0.454889,4.536285,-8.929745,-0.452853,-3.293107,-3.563818,-3.691922,5.932150,5.171100,-0.233407,-0.593668,-8.931655,9.441529,-7.363304,9.402661,3.253348,8.107632,1.371943,-1.991049,3.167707,3.891742,0.864677,6.363167,8.669013,-2.199723,-3.857462,-9.235578,3.768544,-8.215916,6.052929,6.039663,5.953770,-5.480276,-1.681536,-3.781863,0.031269,1.079414,9.182523,-6.451819,2.770491,-7.343186,4.294640,0.744847,-4.892589,-7.432110,5.103041,0.432417,-3.138518,5.913098,-5.924974,-4.802735,1.722937,-1.556674,5.315506,3.648478,-5.217786,-5.363360,-3.235783,-7.859404,-1.875889,-3.394443,-4.319313,-5.793274,1.102345,-4.017033,5.626787,-0.350225,-5.503938,5.108091,8.316306,8.532606,2.393586,1.688190,5.563202,-2.608441,-1.913087,1.713846,-8.973118,9.783317,7.869618,-5.001691,8.070760,1.295102,7.505172,9.610464,7.262805,-8.124137,-0.431004,-8.849079,-7.387922,3.504891,0.749304,3.963167,-6.131381,-2.287339,-0.548293,-0.532605,9.630186,-2.093220,4.566339,1.895946,-2.665682,3.755849,8.383572,-1.847598,-7.351797,-8.941896,-4.817127,-2.383891,-3.288218,-5.260902,5.570862,-9.006191,-8.363589,5.159241,-4.690107,-4.104877,4.051008,-0.215962,9.164854,-2.943904,-3.110068,9.056458,-1.491490,-2.284663,-3.458781,-5.580659,9.119250,-6.771078,5.196814,2.533023,-1.577595,-9.431302,6.187199,-1.646968,9.729725,3.562378,8.223553,-2.767966,-4.180045,9.960776,6.493842,-5.678009,-4.667122,-1.529975,-9.551986,-7.010370,3.260791,-8.735480,0.905961,1.414700,6.004167,-7.219384,8.789279,5.062632,2.082644,9.339089,-9.122564,-2.440860,-7.833739,-8.692711,-0.292255,-1.266280,5.968874,0.914305,0.891448,5.719708,6.789393,-0.311023,-7.632333,-9.199083,-9.410081,-9.889346,6.655077,2.179515,2.010948,-0.252025,-5.041760,5.032815,-0.829235,-4.325886,4.307562,-2.310854,-3.568343,3.058668,-1.120220,-5.902494,3.607979,1.715626,5.354014,9.860767,-0.276513,3.924927,-7.284986,-9.629568,7.751282,-7.867836,-1.968757,9.898492,6.369701,0.150415,-1.629529,-2.129212,-9.730879,-4.583487,4.326829,-3.932651,2.363074,-5.104706,-8.115154,-5.725915,-7.664241,-8.730337,-1.889553,7.052678,0.146892,4.006064,-9.335119,0.237874,-5.882719,2.991437,6.930089,6.579115,5.746837,-5.963489,6.455906,7.415677,-7.932200,-2.398565,2.685755,-5.986151,1.909473,-5.821305,-0.917318,-5.229259,1.276071,-8.050291,-8.589086,0.280699,5.428135,9.148581,7.196506,-4.905871,3.743943,-5.522209,-5.088377,5.446923,-5.823557,-9.235946,1.159022,9.969421,-8.950215,-7.445273,-2.919939,-9.209933,0.224387,-5.682377,-9.228356,-5.543039,9.833838,-7.338179,-1.924941,6.708770,9.644353,3.120312,3.412278,1.754675,-6.864711,-0.915217,2.711593,-4.117169,-6.627709,8.598328,-9.486825,-6.877539,-1.021011,2.816628,-5.518387,-2.412914,-5.164238,1.318510,-2.258781,6.036804,-0.376946,2.498051,-9.224510,-5.415012,-5.242241,1.415059,-3.914810,9.819409,-3.142481,1.918173,3.389084,-8.314811,6.161064,1.835988,-7.918170,-5.475788,-4.366818,6.083001,8.065101,-4.686353,7.891140,-8.374399,1.410316,2.779326,6.228241,2.366587,-8.212941,-0.238629,1.915777,2.957626,9.890959,-1.670086,-7.353803,-6.044578,7.627518,8.012650,5.826846,-8.166539,8.631538,-4.085097,-0.907371,-5.800817,-4.884811,-4.692787,-1.644121,4.960082,5.306982,-6.278270,0.977697,-4.099851,8.537540,-0.085397,9.508852,8.717167,-1.802100,4.901783,5.908653,3.933489,7.627078,8.865300,8.032314,9.595829,-6.095721,-4.352538,-8.020149,3.408195,8.945649,-2.965778,-8.449302,6.191506,-5.023241,-5.150740,-5.472993,1.954166,9.771256,-7.038324,6.943104,-1.040269,7.870443,-9.341978,2.011765,0.567683,9.456735,0.226680,1.965674,-2.445867,-8.774465,-8.690715,-5.818277,-4.779441,-6.377480,-2.013409,-7.820594,-0.223854,-6.274004,8.643742,-4.074015,-5.665491,2.320482,0.712852,-2.274203,-8.398403,-5.990514,-2.269883,-0.013404,7.723460,8.421489,-2.613302,-3.698954,2.135617,3.462004,-5.211750,1.353713,0.276394,-4.316147,1.897845,-6.103162,5.330380,-2.179410,3.389849,-5.483407,-0.471146,5.067738,4.233136,7.307985,-5.373591,-0.193439,-1.251614,7.154608,-2.419483,-7.257560,-3.040206,6.576966,-7.163209,4.829211,-3.525489,-2.553257,4.638174,4.982449,7.739101,3.049573,-7.112598,-5.895653,0.951840,-5.365534,2.320108,-9.933236,-0.833287,-4.006280,3.180754,-6.066316,2.243033,-7.847266,-1.904643,-9.628145,-1.591752,9.437163,8.172721,2.071886,4.017444,-9.268136,0.868250,9.519414,-4.974146,-0.612041,5.412856,5.019118,8.135448,-8.090378,1.986744,3.651165,-8.428065,-6.945733,-1.965925,4.187673,-8.206091,-5.627347,-8.234246,5.753252,2.007953,-2.129801,-4.318847,-8.466579,-4.683370,-8.323301,8.919937,5.018131,-2.860016,3.963510,-6.474930,7.224928,-7.795126,-4.565762,9.720495,4.058204,8.118328,3.740423,0.311711,7.205314,-1.852788,1.803193,1.309668,-6.142352,7.090841,-1.181193,-6.855078,-9.347689,5.296291,1.940981,-3.648655,-4.686528,-3.411874,4.398800,3.356607,1.573690,-0.230262,4.858201,-6.090789,-4.923418,5.990458,3.208442,-4.926447,-1.535804,-4.141930,-3.060933,-2.722935,-6.738912,-3.269870,-3.404884,-7.720352,-2.306592,-5.854569,-1.049243,9.962505,-5.641863,8.611956,-0.551973,5.904576,6.582116,-7.697388,-8.813592,-7.745521,7.289358,2.099311,-0.313022,-3.340824,-3.236716,-5.728946,5.593353,8.199327,-0.890923,8.607205,-0.583729,5.728807,-6.693384,1.152946,-0.192906,9.656224,5.231210,8.998101,-0.273358,-6.027443,2.985291,3.055837,-8.514837,-2.684199,8.394729,5.257603,6.304649,2.858381,-1.354866,-4.906032,8.386819,-0.892977,-4.998027,-1.027363,3.980421,-7.334193,-6.160652,3.135735,-4.522213,4.154113,8.548058,-9.439626,-2.267963,-0.256790,-7.305673,1.274801,-8.847654,-7.625949,-0.805855,7.482303,1.983036,-3.202784,1.080703,-0.287996,4.637948,1.072791,-0.279068,6.865216,-7.812997,0.805829,7.504830,-1.182472,4.435709,-4.471085,2.029216,2.292313,9.655152,-6.217091,-9.392657,8.844126], dtype = "float64")#candidate|8838|(1188,)|const|float64
call_8837 = relay.TupleGetItem(func_3553_call(relay.reshape(const_8838.astype('float64'), [9, 11, 12])), 0)
call_8839 = relay.TupleGetItem(func_3556_call(relay.reshape(const_8838.astype('float64'), [9, 11, 12])), 0)
output = relay.Tuple([call_8818,call_8829,var_8830,call_8837,const_8838,])
output2 = relay.Tuple([call_8819,call_8831,var_8830,call_8839,const_8838,])
func_8851 = relay.Function([var_8830,], output)
mod['func_8851'] = func_8851
mod = relay.transform.InferType()(mod)
mutated_mod['func_8851'] = func_8851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8852 = relay.var("var_8852", dtype = "int8", shape = (168,))#candidate|8852|(168,)|var|int8
func_8851_call = mutated_mod.get_global_var('func_8851')
call_8853 = func_8851_call(var_8852)
output = call_8853
func_8854 = relay.Function([var_8852], output)
mutated_mod['func_8854'] = func_8854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8388_call = mod.get_global_var('func_8388')
func_8389_call = mutated_mod.get_global_var('func_8389')
call_8856 = func_8388_call()
call_8857 = func_8388_call()
func_7871_call = mod.get_global_var('func_7871')
func_7873_call = mutated_mod.get_global_var('func_7873')
var_8873 = relay.var("var_8873", dtype = "int8", shape = (168,))#candidate|8873|(168,)|var|int8
call_8872 = relay.TupleGetItem(func_7871_call(relay.reshape(var_8873.astype('int8'), [168,])), 2)
call_8874 = relay.TupleGetItem(func_7873_call(relay.reshape(var_8873.astype('int8'), [168,])), 2)
output = relay.Tuple([call_8856,call_8872,var_8873,])
output2 = relay.Tuple([call_8857,call_8874,var_8873,])
func_8891 = relay.Function([var_8873,], output)
mod['func_8891'] = func_8891
mod = relay.transform.InferType()(mod)
mutated_mod['func_8891'] = func_8891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8892 = relay.var("var_8892", dtype = "int8", shape = (168,))#candidate|8892|(168,)|var|int8
func_8891_call = mutated_mod.get_global_var('func_8891')
call_8893 = func_8891_call(var_8892)
output = call_8893
func_8894 = relay.Function([var_8892], output)
mutated_mod['func_8894'] = func_8894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8388_call = mod.get_global_var('func_8388')
func_8389_call = mutated_mod.get_global_var('func_8389')
call_8905 = func_8388_call()
call_8906 = func_8388_call()
output = relay.Tuple([call_8905,])
output2 = relay.Tuple([call_8906,])
func_8919 = relay.Function([], output)
mod['func_8919'] = func_8919
mod = relay.transform.InferType()(mod)
output = func_8919()
func_8920 = relay.Function([], output)
mutated_mod['func_8920'] = func_8920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mod.get_global_var('func_6061')
func_6062_call = mutated_mod.get_global_var('func_6062')
call_8929 = relay.TupleGetItem(func_6061_call(), 0)
call_8930 = relay.TupleGetItem(func_6062_call(), 0)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
const_8952 = relay.const(4, dtype = "int8")#candidate|8952|()|const|int8
const_8953 = relay.const([8,3,5,-8,1,9,9,-4,-8,5,-9,6,-10,3,2,9,3,-9,6,-7,1,-10,-2,1,1,5,6,-1,10,-10,-8,-6,5,-1,5,7,-4,4,-1,9,1,-2,-3,3,1,-10,4,-9,-1,7,10,10,9,1,9,2,4,-8,10,-2,5,-9,-8,-8,-1,-5,-9,7,10,-9,-10,10,-6,-10,-2,-7,-4,5,-5,1,8,-8,-2,6,-3,-1,-8,4,1,-2,6,-9,-8,-2,-7,-10,10,1,-1,2,-4,6,5,-9,3,9,-5,-10,5,7,-7,-5,6,-7,-5,-2,3,4,-7,-4,8,-10,6,-5,3,10,-10,-5,3,3,4,-10,1,-4,-8,-1,-6,9,-2,-2,8,-3,9,5,3,-1,-3,-3,-6,7,7,-2,8,4,8,4,-8,-6,-6,-8,-1,5,1,-2,-5,2,-4,7], dtype = "int8")#candidate|8953|(168,)|const|int8
call_8951 = relay.TupleGetItem(func_290_call(relay.reshape(const_8952.astype('int8'), []), relay.reshape(const_8953.astype('int8'), [8, 3, 7]), ), 0)
call_8954 = relay.TupleGetItem(func_294_call(relay.reshape(const_8952.astype('int8'), []), relay.reshape(const_8953.astype('int8'), [8, 3, 7]), ), 0)
func_8503_call = mod.get_global_var('func_8503')
func_8504_call = mutated_mod.get_global_var('func_8504')
call_8955 = relay.TupleGetItem(func_8503_call(), 2)
call_8956 = relay.TupleGetItem(func_8504_call(), 2)
func_6353_call = mod.get_global_var('func_6353')
func_6356_call = mutated_mod.get_global_var('func_6356')
const_8964 = relay.const([3,-4,-9,2,-6,-7,1,-9,-4,6,2,3,6,3,6,-4,9,-4,5,-6,-2,-1,9,-8,8,8,-9,-7,8,-4,2,-5,-8,-9,4,3,-10,-1,-2,-1,-4,10,9,10,-7,-4,-2,10,-6,2,6,-8,-10,5,-9,-10,-5,-6,-10,-2,1,-6,4,5,-4,-4,4,7,2,-6,8,3,8,8,8,-5,-7,-1,4,5,-5,-8,-10,3,-5,-4,-4,-8,8,2,-5,4,5,-5,3,7,-8,7,8,-9,-8,9,9,6,-1,-5,3,-2,-5,9,6,6,-1,-1,10,5,2,9,9,-3,4,-9,-5,7,-8,8,2,-8,-6,1,9,-5,10,-4,-9,-1,5,2,-3,-10,5,6,3,-8,3,6,-7,-4,-4,8,-7,10,1,2,1,6,3,1,8,-6,3,6,4,9,-10,5,7,1,-7,3,-8,-6,-3,-6,8,-5,-5,-1,10,-9,8,-10,-7,-5,6,4,1,5,-7,-6,-5,6,-9,-1,8,9,-3,-2,-2,9,-7,3,1,3,-3,2,9,9,6,8,3,-3,8,9,4,-1,-10,-10,-6,-8,-9,6,10,-9,7,-4,5,-7,3,-7,5,-8,4,-6,9,9,6,-10,-1,7,-4,-10,-6,-6,-4,-6,2,-6,1,9,5,2,3,2,-10,-4,7,5,-1,-4,5,6,5,-4,-3,8,10,3,-3,9,-1,-6,-7,4,4,-4,8,-6,1,9,4,-4,-1,-10,-10,-6,4,-1,-4,8,1,-9,-4,-1,-7,-9,-2,-9,-1,-5,-10,4,-2,-2,8,-6,-3,-7,10,-2,-10,9,-7,5,7,-9,-9,-10,7,-9,5,-5,10,5,-2,8,9,6,-8,-4,-8,-4,5,2,-8,-9,6,-1,-6,6,-7,-3,-6,2,9,10,8,-6,10,5,9,-2,7,-1,2,-4,4,5,6,3,-5,3,-9,-6,-9,8,6,2,3,-8,-3,-4,-10,8,-8,9,5,9,-1,4,10,7,-10,-1,4,-8,2,5,-2,-7,-5,-6,-8,-6,-1,-10,-10,9,6,3,-9,-9,2,4,7,4,8,4,-6,7,-9,-10,-2,9,9,1,2,3,-2,-7,10,2,-3,6,-5,1,-9,-4,-2,-10,6,2,-1,-3,-4,3,2,-6,2,-8,-6,-2,4,6,3,-8,9,-9,7,-5,-10,8,4,1,-7,-2,10,10,1,9,-3,-3,6,-3,3,7,6,9,9,-7,-9,-1,-4,2,-8,1,7,-4,-7,-8,-6,-8,-10,4,7,8,-10,-6,2,10,-8,-1,-5,7,-3,4,2,4,9,1,-7,3,-10,2,8,3,-2,-10,-1,-1,-4,6,7,7,-7,-3,7,-2,6,2,5,-9,-2,-4,-5,-7,-9,4,4,1,10,-4,1,-8,9,10,-5,-10,9,-10,-10,5,2,5,-3,-7,-2,1,-8,-10,-9,2,-3,-1,-8,-9,9,-10,-5,9,3,2,9,-1,-2,-4,1,-5,8,-7,8,-9,-1,-10,-3,-6,-6,-4,-4,10,5,-7,1,1,7,-8,-5,1,-5,2,-1,6,9,-10,4,6,-7,-6,-4,-8,8,-5,-2,-8,-7,-4,-1,6,10,-2,10,-4,3,-3,-10,8,-6,10,9,-4,-10,-7,-9,-2,10,3,-4,-5,8,5,-9,-5,-8,-3,-3,-5,5,4,6,-3,10,6,-3,-10,-1,9,10,6,-9,4,6,-4,3,5,6,4,1,1,-3,5,7,-3,-7,2,-8,9,8,-4,-5,-10,4,8,-6,-9,9,-2,-9,-3,3,-6,6,4,-1,4,-5,7,-10,5,4,-2,10,-1,-8,9,4,4,-9,3,-5,5,1,1,7,-7,10,3,-3,10,1,-5,-5,4,-7,5,3,-4,-2,-6,-1,-9,2,2,8,-9,5,3,-4,5,3,-3,-10,1,-4,-10,-1,7,-10,-9,4,7,-5,-9,-9,-10,2,1,2,5,-2,-2,-3,6,-9,4,-4,-3,5,-8,4,-1,1,10,5,-9,2,9,10,3,-10,-3,9,-5,-7,1,9,10,5,5,-9,8,-8,9,2,-9,8,-1,9,-5,7,10,9,9,-3,-3,-9,-4,-8,4,4,4,-7,-2,9,3,-3,-5,4,-4,8,-9,-8,3,7,-6,3,4,-5,4,-4,-3,1,-9,1,2,-1,-6,6,-5,-9,6,10,-1,8,10,-2,9,10,10,3,3,-5,-3,10,-5,-10,10,3,-7,-7,-5,2,4,-3,-7,4,-8,-9,-1,-2,8,7,2,-9,3,9,-5,-1,5,1,8,-2,-6,1,1,-6,-3,-9,5,5,-2,-5,5,5,-9,2,4,8,-8,-9,-10,8,-8,-10,4,2,-2,-2,2,-7,-4,10,6,9,-7,-10,3,-2,-6,-5,-10,8,-1,-6,-10,8,5,-3,8,-2,-2,1,2,-8,6,3,-8,7,-1,-4,10,-6,-2,4,3,-2,-8,-2,-6,3,2,9,6,1,3,-10,-7,-5,-7,8,5,-7,-3,-5,7,-5,3,1,2,-7,-7,-5,5,-5,9,2,-3,6,8,-7,9,-6,-7,-10,-8,3,5,-2,-2,-3,-8,4,6,9,1,-10,9,-3,-2,-5,-1,6,10,6,-2,-2,8,4,-8,-9,-1,1,5,-6,6,-7,-2,3,-10,-6,2,7,-6,5,5,4,4,-6,9,8,-3,-2,-8,9,-4,4,-2,7,1,-3,7,-2,5,10,8,-1,2,8,-8,2,1,-9,5,3,7,2,-3,5,-2,4,-2,1,-8,-8,5,10,3,8,-7,-6,5,8,-2,-8,7,-4,-8,-5,-5,3,-2,-5,6,5,-4,-8,8,-9,-9,7,-10,5,8,-4,-2,3,4,8,-1,3,-3,4,-7,4,-1,-9,1,-9,-5,-4,-2,10,-6,5,-3,-5,-9,8,4,-9,-10,-8,-4,2,3,-6,-6,10,7,1,4,-6,7,-7,3,-7,-6,-4,5,-10,5,-3,6,-2,1,-5,-1,5,5,10,10,1,-6,8,4,-2,-6,7,-10,-7,4,5,-2,-7,4,5,9,-10,2,8,6,4,-7,-5,1,8,-5,5,3,6,-9,1,-8,5,-9,-5,-5,10,-9,-8,9,8,-1,3,2,1,-10,-1,5,8,1,2,4,5,-7,6,1,3,-6,5,-6,1,-3,6,-10,-4,2,6,-8,-9,-6,-4,-8,8,-3,-2,-3,9,-9,6,3,-2,-5,-1,9,-1,-5,-3,-2,-7,-6,-8,-3,-7,-3,-4,2,-1,2,4,-10,-8,10,9,2,8,6,9,2,2,8,4,-1,8,5,-7,-7,-1,8,-10,6,10,-6,3,-6,5,-2,5,2,-7,7,3,2,-10,3,-1,-10,3,2,3,-1,-2,-9,-6,-2,9,10,-3,3,-3,5,-5,4,10,2,-4,4,-7,2,-6,-6,-6,-5,9,4,2,5,-6,-5,-5,-10,3,-2,8,2,2,9,4,-7,-9,2,-2,-3,6,-5,-7,7,-2,8,6,-6,-10,6,-6,-7,-8,8,-8,8,-9,4,-9,-7,3,-3,-7,-9,1,-1,10,3,8,8,4,-9,-1,10,5,3,5,9,2,-1,3,1,1,-3,-7,7,1,6,-9,3,6,-4,-9,-4,-10,5,8,-1,10,-10,-7,10,-10,-1,3,-7,-10,-1,-5,-10,-2,10,-3,-9,-5,1,3,-1,8,-4,-5,-1,3,4,6,2,-10,-6,-5,5,-3,3,8,8,7,-6,-6,-7,-6,6,-4,-10,3,7,-2,-8,-7,-8,7,10,2,8,10,5,-6,-9,-1,5,4,2,4,-10,2,-7,-6,5,-2,5,8,-9,-1,5,7,6], dtype = "int16")#candidate|8964|(1456,)|const|int16
const_8965 = relay.const([7.048895,5.892016,0.145103,8.180086,-7.815189,-3.378939,7.620614,9.041672,-9.144525,-7.830810,-8.095929,-6.403942,-9.974283,-7.146214,1.954927,8.026032,-2.769434,2.773969,5.792879,6.401811,-8.288328,4.196104,-9.752719,-3.492216,-8.481276,-3.584787,-5.742492,7.697266,-7.810521,-8.311206,3.185642,1.540423,-3.060894,6.083900,7.275604,-0.010343,-8.805839,1.991494,-9.942781,4.846892,1.307453,1.737682,-7.254899,-9.996990,-6.004901,6.980143,-8.518169,-5.873179,8.581696,4.330693,-2.629768,-4.705724,3.770661,7.290392,4.005248,-6.889498,-4.920259,-4.184816,-9.389747,-2.801333,4.166586,-8.968215,-6.849348,2.783304,-5.052019], dtype = "float32")#candidate|8965|(65,)|const|float32
call_8963 = relay.TupleGetItem(func_6353_call(relay.reshape(const_8964.astype('int16'), [1456,]), relay.reshape(const_8965.astype('float32'), [13, 5]), ), 1)
call_8966 = relay.TupleGetItem(func_6356_call(relay.reshape(const_8964.astype('int16'), [1456,]), relay.reshape(const_8965.astype('float32'), [13, 5]), ), 1)
output = relay.Tuple([call_8929,call_8951,const_8952,const_8953,call_8955,call_8963,const_8964,const_8965,])
output2 = relay.Tuple([call_8930,call_8954,const_8952,const_8953,call_8956,call_8966,const_8964,const_8965,])
func_8967 = relay.Function([], output)
mod['func_8967'] = func_8967
mod = relay.transform.InferType()(mod)
output = func_8967()
func_8968 = relay.Function([], output)
mutated_mod['func_8968'] = func_8968
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8974 = relay.const([[4.062476,3.837686],[-7.776075,-7.026861],[0.356661,0.956142],[-4.662706,-9.072317],[-7.703400,-8.728621],[-0.476305,1.533316],[9.604032,0.594694],[9.888768,3.266662],[-7.188257,-1.180600],[-9.321879,9.473336],[2.402505,-5.459559]], dtype = "float64")#candidate|8974|(11, 2)|const|float64
uop_8975 = relay.sigmoid(const_8974.astype('float64')) # shape=(11, 2)
output = relay.Tuple([uop_8975,])
output2 = relay.Tuple([uop_8975,])
func_9005 = relay.Function([], output)
mod['func_9005'] = func_9005
mod = relay.transform.InferType()(mod)
mutated_mod['func_9005'] = func_9005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9005_call = mutated_mod.get_global_var('func_9005')
call_9006 = func_9005_call()
output = call_9006
func_9007 = relay.Function([], output)
mutated_mod['func_9007'] = func_9007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mod.get_global_var('func_7991')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_9008 = relay.TupleGetItem(func_7991_call(), 0)
call_9009 = relay.TupleGetItem(func_7993_call(), 0)
var_9038 = relay.var("var_9038", dtype = "int8", shape = (5, 2, 11))#candidate|9038|(5, 2, 11)|var|int8
bop_9039 = relay.greater_equal(call_9008.astype('bool'), var_9038.astype('bool')) # shape=(5, 2, 11)
bop_9042 = relay.greater_equal(call_9009.astype('bool'), var_9038.astype('bool')) # shape=(5, 2, 11)
output = relay.Tuple([bop_9039,])
output2 = relay.Tuple([bop_9042,])
func_9055 = relay.Function([var_9038,], output)
mod['func_9055'] = func_9055
mod = relay.transform.InferType()(mod)
mutated_mod['func_9055'] = func_9055
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9056 = relay.var("var_9056", dtype = "int8", shape = (5, 2, 11))#candidate|9056|(5, 2, 11)|var|int8
func_9055_call = mutated_mod.get_global_var('func_9055')
call_9057 = func_9055_call(var_9056)
output = call_9057
func_9058 = relay.Function([var_9056], output)
mutated_mod['func_9058'] = func_9058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8259_call = mod.get_global_var('func_8259')
func_8261_call = mutated_mod.get_global_var('func_8261')
call_9082 = relay.TupleGetItem(func_8259_call(), 0)
call_9083 = relay.TupleGetItem(func_8261_call(), 0)
uop_9086 = relay.acos(call_9082.astype('float64')) # shape=(5, 2, 11)
uop_9088 = relay.acos(call_9083.astype('float64')) # shape=(5, 2, 11)
output = uop_9086
output2 = uop_9088
func_9090 = relay.Function([], output)
mod['func_9090'] = func_9090
mod = relay.transform.InferType()(mod)
output = func_9090()
func_9091 = relay.Function([], output)
mutated_mod['func_9091'] = func_9091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5990_call = mutated_mod.get_global_var('func_5990')
call_9148 = relay.TupleGetItem(func_5989_call(), 0)
call_9149 = relay.TupleGetItem(func_5990_call(), 0)
uop_9155 = relay.log2(call_9148.astype('float32')) # shape=(1, 2, 11)
uop_9157 = relay.log2(call_9149.astype('float32')) # shape=(1, 2, 11)
uop_9177 = relay.sigmoid(call_9148.astype('float64')) # shape=(1, 2, 11)
uop_9179 = relay.sigmoid(call_9149.astype('float64')) # shape=(1, 2, 11)
func_3553_call = mod.get_global_var('func_3553')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_9194 = relay.const([-6.123989,3.422008,-3.137695,-1.565682,1.799428,4.093354,-6.742554,2.565321,0.829373,-0.228119,4.822112,-0.536515,-3.213617,-1.573466,-2.374790,-3.641959,-6.258229,2.712485,-5.638744,9.611891,-1.764076,5.397458,8.052917,7.047303,-9.953622,-9.782484,-7.547234,-1.063613,7.977112,-8.651770,-8.961274,-2.632053,-6.958107,-3.936444,4.958602,-2.834545,-1.830955,-8.732964,-2.124454,-3.399834,-4.572756,0.385493,4.359662,2.414012,-9.565358,-8.452168,1.038630,8.131748,-3.491471,-7.212322,5.323077,7.699272,1.082870,4.819863,-4.198492,-0.236181,-9.624978,8.241222,1.213312,-4.354640,-5.237021,1.479419,4.876699,5.143954,-8.612879,-5.669062,6.525450,6.846334,0.758006,-6.220710,2.936032,-9.133972,-4.170627,0.675945,6.038003,-4.510860,9.380173,9.270609,-3.610973,-2.522328,-9.933235,0.639750,1.517287,-1.439665,0.553053,-9.583306,-8.507166,2.084664,-1.120884,-1.667592,-1.849149,6.197446,-3.856928,7.933101,8.384260,8.150870,-1.345390,6.100794,-1.895445,-8.445614,9.309664,-3.468678,-6.005586,-1.143219,-1.082424,-8.412552,6.562035,-8.286035,-7.941307,1.804395,-7.601207,5.896758,6.516302,-5.379385,6.914176,3.523941,5.543260,-8.114502,3.861974,-3.977210,5.406507,0.712818,-3.415069,9.457480,7.485944,-0.519588,0.465872,-3.573072,8.078975,-4.029021,7.281273,4.961675,7.995005,-9.455667,-1.843480,6.613625,4.286112,1.483552,-8.030389,-0.998098,7.650502,0.886352,4.078075,4.756523,-2.669720,6.640315,5.690836,-0.786179,-4.531243,-2.666023,9.032370,-0.910694,-2.711958,-6.095817,-6.965450,-4.253061,-5.511636,9.261221,8.879271,-3.130618,-4.355387,1.572722,-4.933476,0.202041,1.520582,1.215205,7.526664,3.718983,7.819055,-2.162361,3.960118,7.302455,3.919599,4.519630,3.961862,-1.475541,1.377161,-6.444093,-3.791821,-8.627643,1.636869,-6.859631,8.651987,-6.761004,-3.151728,6.672277,5.290988,6.242536,7.824315,7.115527,-9.483889,-3.197482,6.239142,0.608049,-5.491382,9.259393,8.869425,-8.719690,-2.855797,-5.168654,-3.094018,-3.368837,-3.154186,-6.711304,-6.545650,5.694331,5.827165,-9.340152,-0.089471,-5.520147,7.572874,-6.810377,-7.270128,5.268298,0.017338,0.444274,5.898899,1.110314,8.516937,0.218025,7.962916,-9.876713,6.750498,8.382192,-3.096865,-0.951966,-3.219833,-7.475855,-7.655643,1.022644,6.919093,0.627774,-9.946689,4.236753,-7.056321,6.236784,9.183265,-2.056052,-9.040976,-2.325234,-9.110938,-8.628948,0.222199,2.510312,-2.103106,6.432591,5.372731,9.225145,0.255082,9.171322,5.722831,5.882547,-6.814665,4.529861,0.775863,5.296069,6.124934,-9.031394,-1.197784,-3.761914,-1.994668,0.330428,-1.138419,9.519686,5.138479,3.286124,7.683003,8.022370,-4.278677,-4.277718,-0.292566,4.600694,3.223135,-6.090558,2.778908,8.058632,-1.000438,5.988638,7.718901,-0.384089,2.971778,9.128710,-8.956079,-5.230099,-4.096262,-5.115617,-7.339088,-6.971174,-0.495745,-4.521551,3.382097,5.190621,-8.248372,-3.439071,-9.493272,-3.193373,-2.647031,-8.954082,-5.254895,3.832049,-3.543313,0.281970,-3.738695,-7.421816,-3.289829,-2.472804,-1.218635,7.728620,7.516955,-7.117476,-8.044013,4.841351,2.661972,5.789152,3.022409,-5.990298,-0.884029,-8.750137,7.620730,4.267895,2.620355,8.808692,-4.587005,-4.130525,-0.653470,7.713951,3.365713,7.171676,-4.018120,-2.254836,0.104514,3.094790,-9.784079,-9.404755,0.417874,3.044885,-4.544062,-5.304626,2.582951,-7.157815,-4.732449,-1.462570,-4.191111,-7.532383,-2.653535,-9.209104,6.811613,-9.811142,-1.302467,4.666274,-2.128691,-9.363512,7.374137,5.068396,-0.608762,-2.301855,9.063262,-9.701219,-9.601236,9.446327,-0.519538,-0.864079,7.769802,7.471360,-4.879882,5.094388,-7.601357,5.808191,7.565484,-7.281736,-9.313245,-0.674143,-3.125987,1.775399,4.770136,7.117583,1.667555,0.928438,-9.324024,-5.145021,7.366931,-1.135714,4.633958,1.488294,-1.603948,-6.862870,-0.851870,4.975238,-3.840150,9.023138,0.665055,3.686758,-1.587564,3.123787,6.776160,6.880835,-6.312958,-5.553971,8.581220,-1.088925,-2.486063,-4.224412,0.465433,8.567755,6.378320,6.964604,1.996458,3.974512,0.372817,3.675408,-1.324196,1.768242,-7.239734,-2.892788,1.283597,1.423187,-6.088657,-8.757267,7.994860,3.334528,-2.249334,2.035211,0.215222,1.291945,-5.375302,0.216445,-0.654925,4.857712,6.838616,-3.975176,-2.757264,-2.210564,-7.535427,-7.320729,-4.808262,-2.212472,-0.003796,-5.079109,-4.408092,-9.750975,-9.706735,9.666649,-2.510536,5.742309,-3.215623,-1.711728,-5.973646,8.747278,5.714899,-3.270754,7.876603,-4.021282,3.033079,6.916980,-5.086764,-1.714549,-4.311300,1.440538,-2.521577,-4.688833,9.420989,5.716344,6.069849,-4.008151,-6.344183,-8.521801,7.458881,1.329132,1.684950,-6.932610,-6.098466,3.514857,-0.781675,9.616049,2.071150,5.844610,-3.421990,-4.674671,-1.220081,-4.836517,-1.317549,-1.122659,3.869824,-1.799770,0.683522,-3.553666,4.316222,-0.970719,1.515537,-0.342581,4.490458,8.437068,-6.529867,0.523184,-2.737112,6.433875,-0.354673,-0.260692,0.669677,-6.395560,8.365116,-5.837016,-9.775656,-5.832016,-6.812047,1.609638,-8.232223,7.272847,-5.291352,6.166743,-9.300250,6.147131,3.245163,-4.070028,-4.714750,8.176848,9.316748,-4.232858,-2.954745,8.580107,9.077403,-6.425719,2.916183,-5.036477,-4.872863,-3.609512,-1.018369,2.487095,1.801736,-8.524423,-6.752679,6.739849,6.956072,-3.405138,-7.096922,-7.731287,-5.325674,-5.677386,-5.813208,2.774722,-1.590967,9.751205,-7.131450,-3.321593,-9.563073,6.098341,-2.369354,0.143116,6.022466,4.060474,3.675301,5.720785,-5.744866,-8.433825,1.675826,2.113950,2.278311,-3.966029,7.958851,-8.458168,-3.029552,3.316981,-4.396718,-7.281323,-2.492248,-4.881010,-7.361654,0.931951,1.694048,5.441941,6.966129,-7.038623,-5.037738,-5.459989,-0.299840,6.242358,7.330235,7.732733,4.472714,9.713269,-1.240444,-0.143737,5.329305,2.869343,6.180194,0.083371,-5.851566,2.757394,8.342477,-5.249943,-1.636445,-7.485279,-7.339964,-1.366492,0.547244,1.062116,8.456173,-1.295795,3.355172,7.860891,2.924271,-0.065846,-6.739845,-8.118572,7.127117,2.678308,-9.452781,0.103670,-4.768807,6.307215,0.890852,2.915073,-9.393241,-4.197957,2.295378,-2.134899,-5.536212,-8.342969,-4.748298,-7.406471,-8.505845,-0.346066,3.026427,2.219407,2.857772,-3.594256,-0.919291,7.336080,2.040917,-5.782681,2.172693,7.535027,7.137995,-9.217196,-6.292559,-1.617226,6.651880,-5.884574,-8.853529,-7.226667,-8.488972,6.364920,-1.725279,5.006934,-9.650829,-8.174299,-9.555928,0.898824,-9.107986,1.947336,1.617840,4.812925,-2.042251,0.782833,3.930080,-5.322626,-6.361080,-7.098228,-6.596728,6.381720,-5.099186,-8.589719,4.761966,-6.183241,-0.468346,2.072092,6.757948,-6.122457,-5.607445,4.621417,2.452460,0.618651,0.507968,-4.337057,9.285417,-4.314614,7.322776,-2.080545,-7.713964,-6.171003,-4.856899,-4.127155,-9.629857,-7.550920,6.151747,2.145975,2.619602,-4.513332,-4.679617,5.157137,-7.421684,0.932469,-2.207804,0.492755,0.666762,8.031826,3.945980,2.891375,-7.616854,-9.154524,7.014206,-2.377386,-1.251186,6.732949,0.931198,-4.811807,-1.493944,-4.725538,6.263212,-2.332785,1.559389,-4.532574,4.989194,7.474466,4.487225,8.256722,3.024159,-7.072327,4.704050,-1.329065,-6.857485,-1.340625,2.817499,6.669735,-0.485048,7.360039,-1.419666,-5.959046,3.952131,3.657270,4.421672,-8.232870,9.975999,-8.716344,-6.805623,2.265562,4.944321,-3.884721,-0.690561,1.176111,9.725226,5.984585,5.816683,6.152533,7.477966,5.761198,-8.832417,5.234811,-1.755517,-0.394282,-3.376841,6.601232,9.913548,-4.022188,-2.179730,3.008810,-4.667391,1.995559,-5.994950,3.787307,2.024824,3.591999,-3.389159,3.659349,-8.974773,8.552724,-4.295086,3.812690,-0.295850,0.673542,1.374053,-9.209697,2.122045,0.274885,3.394930,7.217530,-0.894390,-5.239008,0.811467,7.260087,5.622691,8.354694,-3.891522,5.908106,-8.775263,3.351698,7.940877,-5.122954,8.163644,7.108232,-3.230443,6.341161,8.137059,4.147781,-7.972101,-4.950029,0.811280,4.415387,-3.293422,3.224445,5.191238,8.068677,-3.780687,-1.700196,5.996286,-1.014158,-0.142813,-4.369661,1.298806,7.259331,2.784919,1.385679,9.968083,-2.331149,-8.405474,-5.122771,-6.389682,-0.208878,3.700029,-6.843164,-9.877443,-9.584083,-3.244170,-7.081600,-4.114933,5.333112,-9.449816,5.562788,3.305320,3.733614,5.415492,-4.971093,6.634548,-3.725061,7.685998,-6.045859,-7.166075,-4.668812,9.904602,-8.009328,-5.463252,4.575597,4.632226,-8.562528,-0.430789,-1.294369,-1.126326,8.287236,1.064577,-0.176509,-8.811122,8.475652,-0.091951,-8.482104,-7.157030,3.640767,-6.542908,3.766791,1.925389,9.417282,-5.140427,3.357271,-6.490447,-0.426769,7.571353,-8.148800,9.160356,-4.482046,6.238108,-5.733696,3.311438,3.798104,-2.224631,7.467009,-5.951643,-9.752549,-2.054757,6.871857,-6.147577,2.137896,0.741926,-6.546926,9.456347,-6.029995,9.303982,-6.480526,-8.204938,-9.534621,4.359635,2.178587,-4.895036,-6.592069,8.993783,8.953236,2.798238,7.372828,-2.629078,-5.381121,-3.492396,3.806349,8.247407,0.522016,8.421256,-2.467162,4.302604,-2.864562,3.066574,7.520155,2.994262,3.447602,6.726948,5.535253,-3.448701,5.454799,-9.514427,-4.757167,-8.885462,8.972119,4.634787,-3.456690,2.803470,2.569248,0.265879,-0.555910,7.626442,-7.778987,-9.283787,5.811553,1.903828,-6.840998,8.346546,0.541580,-1.116791,2.166742,-5.321785,-9.268275,-8.981580,6.844871,-0.250649,-0.740235,9.437779,-8.099876,-9.591314,-7.086686,-4.179631,6.108031,6.184255,-7.166786,-0.631373,6.601238,2.181379,-3.998882,0.101775,-2.268496,9.856758,-4.456610,2.951225,5.148477,-4.254131,0.543721,-4.817785,-5.505288,3.041259,7.881953,-4.801988,-5.937076,-7.336230,5.720876,-3.304840,-4.735066,6.296491,-8.707008,5.424236,-8.315813,1.280738,0.366528,2.335475,2.361976,-0.028938,-4.626884,-3.285914,-4.522950,9.662929,-0.120640,7.308236,-8.998108,3.570128,9.362555,-6.132483,-3.550877,9.463805,8.534310,9.493841,2.709688,4.658063,-2.151996,3.567676,-1.636135,9.812250,-9.372566,5.800010,4.370646,-1.747449,-1.514123,-5.312849,-1.729694,-9.935087,-7.837521,6.531894,2.824114,3.667345,-3.733197,-8.854418,-1.667299,2.771116,7.014037,7.374760,-3.355446,3.974421,-8.298796,3.035758,-6.526404,-1.305314,-2.932129,-4.557912,-7.208261,5.636653,-2.072599,9.239603,2.294981,-6.215841,-8.217780,6.451883,8.614615,2.625086,9.602595,-0.869775,-4.233097,-0.477032,-3.388363,-5.700473,1.875856,7.270344,9.614292,-3.568358,-0.584113,4.100196,-1.533348,2.686765,-8.743584,1.799629,7.598735,8.836243,-5.309202,-8.712348,-1.847443,7.255334,4.456712,-8.434615,1.466426,9.134526,2.443497,-2.073635,-7.435954,6.171194,-8.410253,-7.968905,-5.275665,0.646880,4.512886,-3.242698,-6.837493,8.712015,-9.556193,7.714486,-4.069084,4.486517,9.118382,7.723179,7.370285,-6.518403,1.836553,-7.902624,-2.570116,-9.017640,1.627580,-5.089329,-3.091195,0.814865,7.779700,5.284101,-9.231065,5.092800,-7.637858,3.700544,0.492644,-5.857154,-1.153062,-5.838830,-4.786255,-2.637938,1.038211,-5.831488,8.443435,2.401562,-7.859105,-0.591497,6.633475,-6.201158,1.024429,-8.467373,-6.031776,1.305008,4.719675,8.416620,3.217932,8.529647,-3.468717,-5.245252,-1.707531,-3.599836,-6.924657,5.118856,-9.006058,-3.672479,5.650639,-1.844337,2.804309,-2.657384,-9.286859,-9.372088,5.364256,-1.532253,1.883497,2.117148,-9.519286,-8.230354,4.112603,3.899931,-4.178426,3.842551,-2.443548,2.347276,4.632670,-4.900938,8.290010,1.943593,-2.024278,1.370351,8.923600,5.281849,-7.524098,-0.435510,6.813538,-8.030029,3.744993,1.882992,1.165779,4.883782,-8.119499,-5.782970,8.256877,6.077586,-0.182675,6.912971,5.042661,7.547887,3.239811,8.040696,3.065575,-6.413528,8.085813,-7.395725,-0.447102,-6.158865,9.099352,-2.673360,-0.252387,4.240942,-4.687460,-5.667931,1.395865,-9.248800,-3.212060,-2.827271,4.400872,-6.894550,-5.613790], dtype = "float64")#candidate|9194|(1188,)|const|float64
call_9193 = relay.TupleGetItem(func_3553_call(relay.reshape(const_9194.astype('float64'), [9, 11, 12])), 0)
call_9195 = relay.TupleGetItem(func_3556_call(relay.reshape(const_9194.astype('float64'), [9, 11, 12])), 0)
output = relay.Tuple([uop_9155,uop_9177,call_9193,const_9194,])
output2 = relay.Tuple([uop_9157,uop_9179,call_9195,const_9194,])
func_9199 = relay.Function([], output)
mod['func_9199'] = func_9199
mod = relay.transform.InferType()(mod)
mutated_mod['func_9199'] = func_9199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mutated_mod.get_global_var('func_9199')
call_9200 = func_9199_call()
output = call_9200
func_9201 = relay.Function([], output)
mutated_mod['func_9201'] = func_9201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7361_call = mod.get_global_var('func_7361')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_9236 = relay.TupleGetItem(func_7361_call(), 0)
call_9237 = relay.TupleGetItem(func_7362_call(), 0)
output = call_9236
output2 = call_9237
func_9240 = relay.Function([], output)
mod['func_9240'] = func_9240
mod = relay.transform.InferType()(mod)
mutated_mod['func_9240'] = func_9240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9240_call = mutated_mod.get_global_var('func_9240')
call_9241 = func_9240_call()
output = call_9241
func_9242 = relay.Function([], output)
mutated_mod['func_9242'] = func_9242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9282 = relay.var("var_9282", dtype = "float64", shape = (5, 6, 13))#candidate|9282|(5, 6, 13)|var|float64
uop_9283 = relay.sinh(var_9282.astype('float64')) # shape=(5, 6, 13)
func_7634_call = mod.get_global_var('func_7634')
func_7635_call = mutated_mod.get_global_var('func_7635')
call_9303 = relay.TupleGetItem(func_7634_call(), 0)
call_9304 = relay.TupleGetItem(func_7635_call(), 0)
uop_9312 = relay.asin(call_9303.astype('float64')) # shape=(14, 7, 1)
uop_9314 = relay.asin(call_9304.astype('float64')) # shape=(14, 7, 1)
output = relay.Tuple([uop_9283,uop_9312,])
output2 = relay.Tuple([uop_9283,uop_9314,])
func_9318 = relay.Function([var_9282,], output)
mod['func_9318'] = func_9318
mod = relay.transform.InferType()(mod)
var_9319 = relay.var("var_9319", dtype = "float64", shape = (5, 6, 13))#candidate|9319|(5, 6, 13)|var|float64
output = func_9318(var_9319)
func_9320 = relay.Function([var_9319], output)
mutated_mod['func_9320'] = func_9320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9324 = relay.var("var_9324", dtype = "int16", shape = (13, 1, 12))#candidate|9324|(13, 1, 12)|var|int16
var_9325 = relay.var("var_9325", dtype = "int16", shape = (13, 1, 12))#candidate|9325|(13, 1, 12)|var|int16
bop_9326 = relay.left_shift(var_9324.astype('int16'), relay.reshape(var_9325.astype('int16'), relay.shape_of(var_9324))) # shape=(13, 1, 12)
output = relay.Tuple([bop_9326,])
output2 = relay.Tuple([bop_9326,])
func_9335 = relay.Function([var_9324,var_9325,], output)
mod['func_9335'] = func_9335
mod = relay.transform.InferType()(mod)
var_9336 = relay.var("var_9336", dtype = "int16", shape = (13, 1, 12))#candidate|9336|(13, 1, 12)|var|int16
var_9337 = relay.var("var_9337", dtype = "int16", shape = (13, 1, 12))#candidate|9337|(13, 1, 12)|var|int16
output = func_9335(var_9336,var_9337,)
func_9338 = relay.Function([var_9336,var_9337,], output)
mutated_mod['func_9338'] = func_9338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9358 = relay.var("var_9358", dtype = "float64", shape = (14, 5, 16))#candidate|9358|(14, 5, 16)|var|float64
uop_9359 = relay.erf(var_9358.astype('float64')) # shape=(14, 5, 16)
output = relay.Tuple([uop_9359,])
output2 = relay.Tuple([uop_9359,])
F = relay.Function([var_9358,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9358,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

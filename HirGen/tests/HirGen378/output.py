import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_168 = relay.var("var_168", dtype = "float64", shape = (13, 8, 15))#candidate|168|(13, 8, 15)|var|float64
uop_169 = relay.rsqrt(var_168.astype('float64')) # shape=(13, 8, 15)
output = uop_169
output2 = uop_169
func_177 = relay.Function([var_168,], output)
mod['func_177'] = func_177
mod = relay.transform.InferType()(mod)
var_178 = relay.var("var_178", dtype = "float64", shape = (13, 8, 15))#candidate|178|(13, 8, 15)|var|float64
output = func_177(var_178)
func_179 = relay.Function([var_178], output)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
const_364 = relay.const([[[6.498889,-3.701358,9.479773],[1.352999,0.416905,6.222014],[-5.250336,1.442799,5.359651],[9.205626,-7.335746,6.052081],[-0.190665,9.275807,0.921739],[-8.507277,-3.582073,-9.685061],[5.548290,0.658348,1.712899],[3.545641,0.072502,-3.734061],[-3.650643,6.781753,3.650583],[4.398351,-0.975590,2.772114]],[[0.348749,2.778420,-8.510281],[4.314934,9.156889,6.743337],[2.927528,-7.248363,0.373928],[-3.086510,3.539926,-2.936848],[-6.522979,-8.193757,-5.960807],[-3.702021,8.382258,-5.051312],[8.078563,-7.732650,-0.049979],[4.926558,-6.968946,-3.381044],[-9.520366,7.099547,-3.134642],[-8.117403,8.945863,-3.410344]],[[5.881504,6.807658,-1.071143],[-2.715446,4.294974,-2.797591],[-8.682855,-9.370033,6.070392],[-7.473373,4.915626,7.672195],[1.904224,-1.001205,-5.453648],[1.058487,-7.736130,8.698485],[-3.800423,-1.108334,-3.843426],[0.451439,7.787222,1.363555],[-6.205267,-2.343591,4.490472],[2.226803,-5.666491,5.740605]],[[-8.938187,-5.041973,2.603140],[6.741515,7.400012,9.129749],[-5.317376,6.854778,-3.560888],[2.833008,-8.727851,-4.321106],[4.661988,1.075742,-2.734627],[0.150357,3.467463,9.826161],[2.336047,-8.564851,-6.261113],[-5.088498,-0.775082,-3.360602],[-5.185967,8.323402,-0.275123],[-8.228412,0.089510,2.591733]],[[-6.327879,6.821603,-8.615354],[-0.626943,0.006951,-4.691477],[-5.795726,1.832411,-7.384939],[-3.724736,1.274717,-4.821533],[0.213018,3.034431,-2.778678],[-4.005005,6.109458,-4.913181],[-1.604814,3.128472,5.221031],[-4.967234,-4.981871,-9.972785],[8.279389,8.430227,-0.349008],[-6.309766,-8.106291,-7.901838]],[[-7.639399,7.189366,-8.149562],[8.569301,-5.956012,7.186274],[5.633566,-7.573789,6.647463],[-9.929989,9.470709,7.177903],[7.223598,8.713492,7.603464],[-1.060449,9.789687,-0.525237],[0.601014,-8.866257,-0.278092],[8.073592,3.684728,-6.726109],[-5.744357,-6.981412,-9.167280],[6.477067,5.778210,-7.527934]],[[9.259631,2.932357,-1.810615],[-9.606015,9.478741,-3.086392],[-7.562401,0.557901,0.088413],[-9.099191,9.936732,9.898656],[-8.028705,3.000194,2.267514],[1.345868,8.567651,9.080754],[-9.498641,5.960422,9.631620],[3.680354,-1.355238,2.759005],[-1.137135,1.291635,-2.289206],[-8.255231,-0.285873,3.323109]],[[9.606546,-8.109014,0.020906],[-9.977506,8.915442,9.543433],[4.686923,2.828831,-4.811914],[9.131269,-1.054347,-3.854425],[1.175701,-9.855048,-3.712826],[-1.334479,-7.342656,-3.056572],[-1.204122,9.678282,6.070693],[-4.874517,2.359991,-6.480969],[6.732354,2.598759,-4.552099],[-9.718825,-6.776595,6.477789]],[[-6.362433,-3.217433,-8.496299],[-6.149317,4.522320,4.915515],[1.312554,-0.724813,1.269626],[-2.416020,-1.067099,-0.443758],[5.336008,3.278912,9.315400],[-3.826657,-5.066102,-6.600274],[-2.900902,3.320432,-7.765188],[-5.868088,4.180781,6.303829],[5.244085,9.248789,2.675887],[-4.194939,-2.615057,-3.651116]],[[5.882473,-1.467763,8.424972],[-8.929878,4.144713,6.326548],[-9.604963,6.614141,-4.603925],[-3.467783,-9.657928,-8.274526],[-5.719419,-2.485480,-2.384032],[-1.620531,-4.927793,6.264541],[-0.953300,3.902424,6.358022],[7.914148,-9.638491,8.807751],[1.536404,-0.267246,4.764650],[0.516305,4.438417,0.212574]],[[-0.436837,0.216506,-5.923241],[-7.880298,6.946849,-4.954829],[2.693465,-0.942540,9.261547],[-1.611782,-4.262179,-4.001532],[6.912382,5.084407,-4.739049],[-5.643372,-8.943564,5.344444],[-1.464867,0.955397,9.130606],[9.035064,-5.342681,-7.155185],[7.123964,-0.669975,4.271236],[-2.170108,9.500272,7.339202]],[[-4.254220,-6.386516,-4.759612],[1.543073,-6.839480,-9.474057],[-8.391669,-6.244115,0.623379],[-6.691703,2.119652,-0.390132],[-9.567138,-6.339460,-7.087831],[6.866506,4.164350,-7.956400],[7.701871,7.715806,-3.870330],[7.305917,7.080962,2.969281],[-5.541213,2.822823,2.492130],[-1.078986,-8.448732,7.028608]]], dtype = "float64")#candidate|364|(12, 10, 3)|const|float64
uop_365 = relay.acos(const_364.astype('float64')) # shape=(12, 10, 3)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
var_387 = relay.var("var_387", dtype = "float64", shape = (1560,))#candidate|387|(1560,)|var|float64
call_386 = func_177_call(relay.reshape(var_387.astype('float64'), [13, 8, 15]))
call_388 = func_177_call(relay.reshape(var_387.astype('float64'), [13, 8, 15]))
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
call_390 = func_177_call(relay.reshape(call_386.astype('float64'), [13, 8, 15]))
call_391 = func_177_call(relay.reshape(call_386.astype('float64'), [13, 8, 15]))
bop_392 = relay.multiply(uop_365.astype('uint64'), relay.reshape(const_364.astype('uint64'), relay.shape_of(uop_365))) # shape=(12, 10, 3)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
call_397 = func_177_call(relay.reshape(call_390.astype('float64'), [13, 8, 15]))
call_398 = func_177_call(relay.reshape(call_390.astype('float64'), [13, 8, 15]))
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
call_402 = func_177_call(relay.reshape(call_397.astype('float64'), [13, 8, 15]))
call_403 = func_177_call(relay.reshape(call_397.astype('float64'), [13, 8, 15]))
output = relay.Tuple([call_386,var_387,call_390,bop_392,call_397,call_402,])
output2 = relay.Tuple([call_388,var_387,call_391,bop_392,call_398,call_403,])
func_405 = relay.Function([var_387,], output)
mod['func_405'] = func_405
mod = relay.transform.InferType()(mod)
mutated_mod['func_405'] = func_405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_406 = relay.var("var_406", dtype = "float64", shape = (1560,))#candidate|406|(1560,)|var|float64
func_405_call = mutated_mod.get_global_var('func_405')
call_407 = func_405_call(var_406)
output = call_407
func_408 = relay.Function([var_406], output)
mutated_mod['func_408'] = func_408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_476 = relay.var("var_476", dtype = "float32", shape = (1, 13, 14))#candidate|476|(1, 13, 14)|var|float32
uop_477 = relay.log2(var_476.astype('float32')) # shape=(1, 13, 14)
output = uop_477
output2 = uop_477
func_492 = relay.Function([var_476,], output)
mod['func_492'] = func_492
mod = relay.transform.InferType()(mod)
mutated_mod['func_492'] = func_492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_493 = relay.var("var_493", dtype = "float32", shape = (1, 13, 14))#candidate|493|(1, 13, 14)|var|float32
func_492_call = mutated_mod.get_global_var('func_492')
call_494 = func_492_call(var_493)
output = call_494
func_495 = relay.Function([var_493], output)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
const_815 = relay.const([[[4.162811,-0.844648,0.883931,8.185999,-2.616798,-4.422351,8.005159,-5.739606,-8.582845,8.366475],[-1.935053,0.941283,-3.596578,-1.307474,-3.642167,2.902940,-6.420475,7.158080,5.895329,-2.385639],[3.951713,5.752046,-8.567221,1.223957,-5.819517,1.130249,-8.579422,4.823029,5.657643,7.903452],[-7.042170,5.003237,8.866344,-3.684125,7.299841,-5.310852,8.087467,-3.155374,-6.153829,-7.482748],[-6.225882,3.117718,6.780136,4.943840,-3.419150,-1.380058,2.993006,0.948396,-6.315759,7.133414],[-0.334871,2.653657,8.609064,6.573698,2.976212,-4.160453,-6.509793,-8.747110,0.242135,-5.208543],[5.103720,-2.017988,0.589381,9.569135,0.697492,0.438942,-5.543918,-6.304286,-2.615933,6.748720]],[[6.433276,7.106913,4.266348,3.242980,5.819741,5.894081,-6.128733,8.688985,4.466641,-6.083795],[6.854084,4.171115,-8.833991,2.441273,1.409268,-8.351722,9.960362,-7.473391,7.355943,3.151409],[-5.095497,3.875537,-8.400969,-9.699218,0.746590,-2.674264,-5.122919,8.500818,8.713986,-1.879851],[8.520813,-1.696799,-4.468251,-5.648418,-2.558834,3.998145,-8.433783,-0.127732,8.515414,-5.634670],[3.290850,-2.777119,-3.286574,-3.221660,-2.585025,3.489249,2.991436,-2.752427,-0.618402,7.374904],[-0.734808,1.141777,-3.294472,3.109757,-7.860466,-9.548444,5.156284,-5.073349,-4.643230,2.479406],[3.547212,2.213927,-8.677847,-4.302841,-7.782471,-8.140838,-9.650941,3.253371,2.107094,7.515660]],[[-4.635915,3.121043,-9.087698,-3.022593,-6.760712,6.025168,-5.269948,-1.830382,2.395609,7.845710],[-4.067092,-0.942072,-1.990116,0.969505,6.975983,7.449781,7.342774,9.562901,-2.122666,-3.417759],[5.517489,-9.992088,-2.345956,3.039670,-6.542136,4.763199,-5.005687,1.417119,6.851399,-0.251490],[0.726020,8.981098,-0.875732,-9.315070,-0.015274,0.226223,9.325792,2.724286,-7.141682,6.463178],[8.326204,0.470999,-3.063161,-0.593425,-4.344375,-3.954989,4.137641,-8.987308,-1.369038,-5.555633],[2.513950,0.127656,-9.721710,0.189098,5.181040,6.573404,9.704187,-2.464064,1.669389,-5.509588],[5.139199,-8.965459,-2.639276,-8.125208,2.334558,2.807472,-5.834468,4.514065,6.018511,4.536159]],[[8.957656,5.815210,3.378983,9.162237,8.185548,-2.872460,-1.851739,6.505244,7.992035,-8.805286],[-8.214189,-0.454009,-5.166685,4.597215,-8.754705,-1.297727,4.966422,-0.915475,9.310315,-0.966590],[1.127070,7.085899,7.029511,-9.785142,-2.951239,0.592576,-7.082294,5.162083,-2.000442,-3.850223],[3.446825,-1.845371,6.266544,0.065263,-8.012471,7.702599,7.384795,-1.058517,8.407839,7.141314],[3.932264,-4.844361,-9.325878,-1.422729,5.547486,4.328895,7.862789,5.671969,0.628309,1.541975],[-8.181586,0.911445,0.634720,-0.700088,6.215703,-4.484678,5.085503,-5.602008,-2.604005,-3.650514],[-7.025656,-6.522228,8.049236,-8.952293,-2.261593,4.727125,-7.769012,-0.630160,-3.063053,-1.237809]],[[0.945862,-3.214162,6.906165,-0.191023,1.763228,6.958062,5.129564,6.642633,-9.990320,5.444900],[6.071531,4.130273,5.300724,4.310052,7.073459,8.685512,-8.580849,7.607093,6.490197,4.667204],[-5.421783,-6.673264,-8.990440,-5.225213,8.372940,5.634493,-5.638416,-5.041193,5.511851,1.297394],[9.524321,7.401684,-7.373237,9.891446,-2.062200,-0.088496,-4.599551,-1.834573,-3.312467,1.627118],[-5.044754,-3.615862,5.169295,9.481295,-1.592767,5.817563,4.992475,0.048732,8.402825,8.600817],[0.655040,-6.457451,-3.997943,-5.880286,-2.080062,-5.161315,1.389132,9.402842,6.631223,6.544502],[-0.919992,3.338880,1.596660,1.580892,-6.036393,-1.419400,4.984002,7.376347,-4.568469,-6.529167]],[[8.358266,3.887524,-0.316849,1.224680,0.822788,3.581154,-2.944839,-9.439782,-2.157185,-2.142147],[-2.723905,-7.628073,-3.669993,-0.773215,-2.667003,4.250625,3.526329,-4.150408,8.214831,-4.104587],[-8.629652,-5.984909,-2.857103,-1.897696,2.492759,4.983831,3.111885,2.185950,3.979791,-5.666646],[-6.227741,6.534535,9.380026,9.760532,-7.540129,6.765758,-0.985029,9.907602,-0.772642,3.079841],[-7.122384,-3.168366,-0.615761,6.762708,3.135488,5.880967,4.026501,1.681295,-9.216361,-6.269450],[-1.365660,7.544565,6.917763,-9.460681,-9.965207,9.654709,-0.536738,6.810916,6.231692,3.471786],[-9.402081,0.148539,2.642003,-7.534290,7.598063,-8.067504,2.876789,-8.968226,-2.661130,-3.625031]],[[-7.740233,-3.095158,2.158366,-7.685681,-5.094292,3.362258,-5.852573,7.005779,-0.745812,-4.510601],[-1.878764,6.674176,-2.395639,-4.225797,-0.932275,-0.640836,0.545189,-7.038790,-0.137644,3.978461],[-4.378288,8.544374,6.907230,-5.508321,7.901289,-0.206734,-4.757109,9.247127,1.873891,5.941477],[-0.621522,7.201053,-7.170166,0.044063,-0.886785,-7.036614,1.396023,7.102530,-0.300225,-7.174361],[-6.026151,7.170572,2.038873,-3.341886,-2.397413,-1.743060,4.494577,-6.796851,2.962113,-6.163184],[6.742532,-5.016213,-4.920858,1.547299,-6.120241,-4.100289,-1.268472,5.453297,-5.800277,2.119004],[0.430502,-5.077477,5.513807,2.309220,-6.827454,-6.449679,-7.556419,-9.401548,-2.200232,2.921932]],[[-8.262297,-4.035231,9.915042,-1.136566,9.177625,-0.484381,6.553320,1.974859,-9.012089,-7.048554],[-9.694491,-2.912081,6.412018,4.325374,-8.190545,-0.342698,2.111066,-3.063758,-2.977645,-5.209479],[-3.580852,0.967660,2.769151,-6.425338,3.747659,-5.175508,6.458951,-3.077475,-0.780258,-1.980921],[-8.685933,8.654267,7.954884,-7.029790,-6.812838,7.819247,3.882155,-9.863810,8.645583,-1.941073],[3.514182,-9.134329,8.265774,-8.540981,3.758558,9.623392,3.724471,8.259792,-4.398797,7.514268],[-2.176540,3.016765,4.893416,1.376479,-1.821722,8.627685,-8.327096,-7.595154,-9.931632,5.610482],[8.664436,4.708048,4.781921,-3.423355,-3.027796,-2.593529,-9.120954,-6.607535,-6.019069,3.380589]],[[-3.142038,-5.243142,-0.467389,-9.127439,1.168808,-4.526520,-8.702094,-9.854803,-4.682230,7.238293],[-3.321187,-7.060685,5.922467,-3.335170,-9.250935,-7.645684,-5.798070,1.796979,0.526609,0.505288],[-5.782707,-5.818313,6.844665,-5.502678,9.302996,-2.935717,-7.491787,-7.006348,2.171934,9.467844],[-3.319415,-2.378576,-9.779883,-9.712450,-1.939449,4.738433,8.378099,0.229385,-5.816292,8.564728],[-3.788216,7.859334,-9.509255,-7.647835,-1.914984,1.401333,-1.008197,3.384872,8.000306,-1.916379],[5.934105,-6.337888,4.640859,5.373085,-7.157045,4.481281,-0.076486,3.830508,8.380467,-7.811711],[1.647120,-3.786356,-3.880823,-7.050362,4.878276,3.671160,-7.273849,-8.966452,4.250105,8.945996]],[[-6.790964,-5.187141,3.454387,1.512393,-2.111018,-6.566842,7.220531,0.988653,-6.506128,0.098052],[-7.917805,-1.443659,5.069897,4.173050,-2.858141,-4.699003,9.598871,3.937189,-0.409649,9.274174],[4.607073,-7.953169,9.638571,-4.426109,3.433146,9.753533,-0.813054,2.117746,-9.004630,-5.690121],[3.280366,1.882326,-7.331240,-5.935052,2.919401,5.543129,0.610918,1.282262,1.256028,4.056418],[-2.126815,-7.310399,-6.260852,-9.993841,-4.749072,-4.700637,7.545829,3.344215,-8.468065,-3.510775],[7.130942,-0.686299,5.309955,0.734432,5.181487,2.143164,-2.701522,-7.632431,7.732458,6.616533],[-8.424024,-6.293258,-2.916858,1.109288,7.386048,-8.798342,0.935925,1.070984,3.237621,0.301675]],[[3.601012,-4.466769,-0.841785,0.035625,0.525661,-1.817916,-2.644476,4.812609,-1.980544,8.753125],[-6.225725,-8.876491,3.623563,-9.123667,5.514830,7.359712,-6.246136,-2.085890,3.824927,2.102728],[-3.729010,-4.725333,-8.069314,1.334994,-1.188709,-8.676642,2.936388,-4.645430,-4.170186,2.391606],[-2.456801,3.912057,-5.715752,1.043666,1.910742,-3.871436,-9.740519,-6.637339,-5.466162,3.511604],[-2.847857,7.050843,8.523947,-6.643164,-7.237627,5.484781,0.256928,4.766999,-4.655800,2.191861],[7.334563,9.937024,-5.270988,-5.122404,-2.747991,8.470427,2.023552,-3.109677,-7.845611,7.309725],[-7.668060,8.948561,8.544805,5.487708,0.472076,3.257325,-8.466632,7.579465,-8.789944,2.030224]],[[4.451172,1.212726,3.240059,0.748728,6.275008,-2.562346,7.017810,1.263565,-3.101169,-9.588658],[8.769379,8.935373,0.351865,-7.837931,-6.314983,-8.934205,-0.945729,6.962328,1.954006,4.126973],[8.271325,-6.173305,2.089532,3.610973,-2.741327,1.268633,6.538500,0.622897,1.672459,-7.761251],[4.014494,-3.301125,-8.248022,5.809726,-4.582284,-4.466103,-9.247329,8.319906,-0.911974,7.205529],[-4.830107,-2.157142,6.278654,-3.015795,5.843762,1.330443,2.438641,-6.594363,0.545519,7.280372],[-1.971474,4.805115,-4.682159,-8.387566,9.186717,3.578709,8.027884,4.597406,0.789553,1.049530],[-9.842197,8.530598,-4.390103,7.539743,8.012579,-6.776476,8.014728,-0.415389,-6.419438,-8.715820]],[[2.963478,7.208514,-0.575051,0.630662,4.209859,-9.176700,4.902013,0.931277,-7.200391,2.703690],[-6.277948,4.952820,8.879032,9.187979,0.763161,2.025434,-5.259916,7.578688,4.659264,-5.346955],[9.961626,-5.201726,7.246364,2.386921,2.895128,3.157991,-1.329731,6.279109,3.069347,9.541389],[-7.166205,4.795138,7.689904,2.347217,9.886846,7.006873,9.805199,-5.541438,-0.185937,-1.186467],[-9.347763,9.773391,-4.991080,7.591925,8.995056,-0.781813,3.929108,-1.606489,-3.536871,-8.402363],[-3.906987,9.457531,3.471108,-5.031670,7.154925,6.975139,-1.846263,-6.222055,3.987071,-5.806617],[-7.896837,0.562492,-2.633675,-4.235784,3.004960,2.101302,9.239944,7.143529,-7.147975,-5.993490]],[[-5.694922,4.719695,-6.973538,-3.535896,1.070787,-4.859743,2.101136,-3.587619,-8.706824,1.252069],[7.010376,2.606611,9.891777,6.647608,-4.562580,1.574296,-3.481518,3.815539,-1.139638,-5.873441],[6.081787,9.627931,-8.983503,-0.145372,-6.418921,0.465424,-3.066614,-7.859669,2.020501,9.814425],[2.370520,2.905941,-4.837952,-4.691924,-8.698299,-9.696271,-2.448096,-3.978713,8.685068,7.530191],[-1.605413,3.842914,0.371464,-2.067224,-1.031568,-8.614746,-2.332176,1.784891,-8.601936,0.458718],[-5.718704,-5.850577,9.329962,-2.398886,-9.912393,3.301380,-3.834124,4.452259,-0.461272,-3.947863],[-0.111299,2.390993,-3.016625,7.361731,-8.017384,2.566578,-2.103059,0.616137,3.356254,2.418203]]], dtype = "float32")#candidate|815|(14, 7, 10)|const|float32
uop_816 = relay.log2(const_815.astype('float32')) # shape=(14, 7, 10)
func_492_call = mod.get_global_var('func_492')
func_495_call = mutated_mod.get_global_var('func_495')
const_819 = relay.const([-2.730730,-7.037942,5.068496,-6.141953,-3.369254,-7.259776,-6.457279,8.888719,-2.647323,0.248181,-2.830028,-9.223101,-6.757943,3.759320,-7.368144,3.488594,-6.426735,-0.045729,3.861711,-7.075494,7.660634,0.540487,1.528876,-7.017438,8.357388,1.188109,-3.183583,9.287202,-0.748450,9.811891,-0.411181,2.078016,-0.016769,-4.324876,2.538709,7.609865,9.593367,-2.862476,-7.770230,6.455961,-8.722540,0.258025,-7.695730,8.436000,9.801253,4.864076,5.603374,-9.113516,-0.854334,5.685757,0.261005,0.194122,-0.977613,-1.676466,-6.175989,-3.120859,-0.694766,3.037818,-3.193965,2.569827,2.243602,4.086411,-5.567453,8.436342,9.910804,-0.651040,4.802827,5.706585,0.563370,-8.623893,5.185851,-2.594818,7.031791,9.684107,-1.092517,0.359260,2.168811,-1.254639,8.334795,8.671290,8.347082,6.674625,4.364504,-8.890278,-5.853913,-3.200233,7.382308,-8.628730,-5.619261,6.901185,-6.741279,5.102245,2.974971,0.694615,3.465136,0.277627,-8.891741,9.421777,-6.931582,-0.656616,4.346347,-0.479429,3.918767,0.839301,-4.911852,-8.373988,7.594144,1.801172,-8.665876,4.823527,2.057733,-4.357643,-1.599609,7.026180,2.529554,4.306808,-2.915223,0.017695,-6.926985,8.048742,8.930292,-6.886108,4.514803,-2.469330,-3.861417,8.023687,-6.608276,-8.680613,-5.657696,7.518894,0.386361,-9.468802,9.355329,-5.654674,-6.441119,-2.951258,3.348027,-4.123338,-2.380544,-4.953870,3.593688,-9.457467,2.011992,-1.027534,-7.103093,0.041126,-3.239690,3.096681,-7.492674,-2.370969,-3.523134,-0.578199,9.050246,-9.223113,4.334463,-4.339588,4.329332,0.461350,5.270876,-7.454690,5.457628,-0.867558,5.347280,3.906969,7.126336,-8.517713,0.300218,9.724548,9.535243,-6.761419,5.001180,0.768454,-5.308894,1.558036,-0.142212,7.300943,-6.502972,-3.175543,-9.750228,8.410444,0.975910,8.970613], dtype = "float32")#candidate|819|(182,)|const|float32
call_818 = func_492_call(relay.reshape(const_819.astype('float32'), [1, 13, 14]))
call_820 = func_492_call(relay.reshape(const_819.astype('float32'), [1, 13, 14]))
bop_821 = relay.power(const_819.astype('float64'), relay.reshape(call_818.astype('float64'), relay.shape_of(const_819))) # shape=(182,)
bop_824 = relay.power(const_819.astype('float64'), relay.reshape(call_820.astype('float64'), relay.shape_of(const_819))) # shape=(182,)
const_826 = relay.const([[[-3.710377,0.813305,-6.278382,5.262934,7.990457,3.225398,-3.338745,-8.603511,-9.489461,-3.479089],[-1.033184,-6.859171,1.126252,-0.411727,9.105703,1.086495,5.280669,2.040027,8.942157,7.643088],[0.870409,-1.462978,-0.438586,-7.898425,1.493348,8.828045,4.955768,-4.537226,3.708331,0.827461],[-0.065059,-4.764490,-5.694608,-8.074147,-3.656756,-8.334557,-2.841149,1.362852,7.183779,3.021927],[-1.540518,-8.255034,-4.794604,5.467905,2.155026,-2.510723,8.629035,2.164686,-7.562255,-7.921205],[-7.936324,1.973082,6.805157,4.886237,-8.229396,2.253221,-2.167629,-0.060289,-9.227068,-7.567994],[3.565773,0.714932,8.687789,-3.820487,-7.630691,6.022436,6.228206,7.402508,5.779159,4.535233]],[[1.193959,6.935789,-9.527601,-3.794235,0.678698,-0.770015,-5.924184,1.042945,-7.189411,2.439190],[-5.531278,6.379334,6.655848,-2.580939,-8.523002,-5.747077,-8.490118,4.150874,-7.071639,5.279030],[-1.886583,-1.680703,-5.591257,-8.594955,2.108298,2.042373,-6.081271,9.566643,-4.814253,0.847109],[7.666714,-1.426832,8.628811,-3.650759,-2.909115,5.848904,2.198750,7.410710,9.634500,-0.998748],[0.654554,7.566650,8.018390,-7.830750,-4.965717,-5.278788,5.165695,-3.414905,-7.908263,-6.415724],[-7.978595,4.973672,1.320571,3.967882,-0.768166,4.105796,-4.209368,-8.872205,0.213908,0.885419],[-6.654496,7.784821,-7.330227,-5.567265,-6.155289,2.004683,-8.479215,-4.005525,1.292126,-4.051930]],[[-7.029626,-0.593801,-7.823741,-5.452430,5.057154,-8.419826,9.536629,2.003369,2.733563,-5.917060],[6.533972,-7.540659,-0.778638,3.846569,3.172336,7.813738,-3.854120,-6.464517,-3.025401,-3.042499],[-8.731119,8.578912,9.069863,7.038808,-7.407008,-1.652830,-7.021637,0.331356,-2.278463,-5.447748],[8.692693,8.330911,6.780429,-1.367845,-4.101749,3.982525,0.183332,-9.150602,-5.520926,9.457752],[1.215756,-4.941244,1.722663,-9.067519,-1.916576,5.143779,-3.399327,2.506035,-4.097142,-5.539730],[4.750026,8.713107,-7.833670,1.596254,6.215184,-3.404580,-5.827792,-2.133578,-3.314925,9.382530],[-2.449063,-8.998076,9.379769,-5.035880,-0.756271,-2.242921,5.568591,-4.803471,7.967868,-4.039723]],[[6.190340,9.833797,5.301569,8.055930,-6.082273,-5.981421,5.673995,-9.829397,8.612295,-3.642463],[1.438567,8.644343,-5.718768,-7.506419,6.442915,-4.840888,5.428663,-3.926830,-1.669444,9.087124],[3.992538,0.888375,-5.419963,6.852655,-2.342550,3.260217,6.260015,-9.549237,3.100472,9.302936],[2.363291,3.227825,-2.405358,7.743576,0.538108,8.168370,4.382125,9.958343,-9.096421,5.026816],[-2.307808,-8.143234,9.272496,7.393191,-5.889609,7.996535,-8.112514,-2.227978,-4.034102,8.739946],[-3.569045,-7.200977,7.485662,-3.158066,0.925317,1.605442,-6.393724,3.142370,-5.884755,-7.084817],[7.194253,4.901692,-5.289065,-2.190568,6.013447,-7.217685,3.410390,5.161635,-8.803760,-6.488858]],[[9.905220,1.216571,-7.903016,4.509348,0.653205,6.943995,2.843068,5.406516,-1.842686,4.975527],[7.941415,-7.918838,-8.477178,-4.081430,8.423585,-5.331263,-4.272684,-9.750297,-0.972861,4.408401],[-4.450904,4.561791,9.671585,5.384041,-3.550577,-2.719117,7.159624,-3.083766,-9.866549,-5.007636],[-7.843985,2.790387,1.835387,9.189406,0.920026,1.603271,6.444546,-3.572404,8.878380,-9.322808],[-3.091622,-3.299244,4.718097,6.111168,2.599532,5.064108,0.330358,-4.903137,7.521839,-8.492904],[-9.883322,-7.858685,-1.420622,5.527884,-6.094948,-5.783833,-5.987887,-6.646521,0.102539,0.417419],[-4.044379,-1.728271,7.908540,-6.172508,-7.358949,-4.358637,-9.498376,-3.378971,9.087823,0.523383]],[[-7.498946,-6.298501,-3.764274,-4.076352,-8.610940,-1.685778,2.908629,-1.642292,3.722606,2.649731],[-9.357245,-6.887892,-7.713330,3.509235,-4.197423,9.466522,-8.797653,2.384203,7.920736,0.865175],[-6.427590,-3.099516,-8.592249,-1.921847,8.398627,-0.542920,8.523040,-5.818796,1.615125,8.473900],[-4.617341,-0.041331,-2.189603,5.365887,-3.736231,-7.305185,-4.884274,-9.350890,4.766145,-9.047767],[-0.104061,-3.225945,-1.635216,1.448257,1.894129,7.765384,5.125811,-9.800396,-5.908768,3.114122],[-5.526573,0.513277,-2.903920,-9.390231,-5.142483,-5.459458,3.334627,4.309542,-8.376412,6.067574],[0.617388,0.152321,6.864286,2.506987,-2.400933,-0.592715,-7.484785,1.143623,3.515061,-6.804185]],[[0.665900,-7.060249,-4.877199,-8.615005,-0.612866,-5.075446,-5.694443,-5.488123,8.878048,9.368378],[5.591565,1.991062,8.999663,-7.049522,-8.109873,0.144054,-4.560806,-2.421683,3.804867,0.020099],[-0.224808,6.701174,5.769183,-7.079883,8.546093,-5.358738,3.521333,-3.031885,9.256458,5.104016],[-0.731145,0.126662,-9.578015,6.489027,-6.143595,0.271234,-7.077113,5.733691,6.130911,-0.187344],[-9.780157,1.180211,-3.020176,-8.625924,-3.862422,0.867478,-6.002040,2.023370,-8.908792,-3.181980],[5.209161,-1.094062,7.424046,-0.054103,4.711989,0.056325,4.798956,-0.347458,9.935177,6.676027],[-4.672327,-3.340368,5.903725,-2.984429,-0.596385,-0.617362,-8.296244,9.966644,2.773139,-1.488821]],[[-6.208405,-2.906152,-7.807705,-4.104270,7.304492,-7.059290,-8.974454,6.680002,-1.818611,-0.253828],[-2.636320,2.944184,7.686418,-1.165736,-9.562528,1.014610,2.696004,-2.335937,-5.943253,2.396985],[2.524835,-3.157699,-3.905064,8.143301,7.534130,6.869512,6.472397,-3.900345,1.054832,5.066484],[-6.647639,-7.797985,-8.236897,0.423363,6.907107,-7.572777,-6.741705,5.780069,-0.896140,-8.181682],[-3.082470,-5.898475,-1.293971,-6.559569,5.530129,6.317488,-0.565599,4.224862,-8.476159,-4.656374],[6.270389,-6.707574,2.623283,-2.671875,1.665401,7.117628,-1.072002,5.117616,-5.138926,-0.955967],[3.322809,3.412526,-9.289322,-2.467464,-5.767850,-1.374186,5.660438,2.865323,-4.932416,3.059072]],[[-4.827000,7.166159,-3.766513,2.080900,-1.095834,-3.198158,5.289873,-4.111070,2.554752,2.483368],[1.004617,8.208315,-7.508597,4.419520,1.138794,-1.852991,8.822062,-6.901719,-1.327646,-1.880505],[-9.370780,-8.010185,8.143754,7.463838,7.976224,-9.088242,-9.984072,-0.316973,-3.083193,-4.938381],[-0.125497,-1.888320,-7.348142,1.763595,-1.733127,-2.803838,-2.143962,9.669534,8.281530,-5.629772],[7.738305,5.789906,2.636242,-6.666483,9.991012,4.773877,-1.362292,9.964371,-1.257495,5.550618],[-9.439080,3.131003,0.855824,-5.134183,4.170631,8.675361,3.755338,9.684337,-5.037448,4.424769],[-2.882045,7.633890,-6.863634,9.099273,1.243548,8.555182,-7.816733,2.125902,0.411641,-9.677591]],[[-1.507625,2.923059,-3.401244,-8.172397,0.208227,-9.347012,-7.462703,-3.732839,-1.941455,-1.677347],[-0.466440,-0.262495,-2.727643,-8.967819,2.963728,5.277761,4.634173,-2.742694,4.810605,-4.076829],[-5.991670,-7.700071,0.614421,9.507852,-8.289215,8.375059,5.058829,-4.659185,8.129930,-8.524242],[5.844626,9.837939,-8.741919,2.112375,-3.474400,-4.885472,-1.969157,-0.269928,0.526729,-9.738141],[5.213076,4.152593,4.402361,-5.131291,-3.050845,8.916636,-4.884039,-3.433666,-5.543350,-4.309918],[-7.794435,4.009342,2.330169,-9.419730,7.752072,0.174088,-4.200973,-1.582931,-9.727959,8.597296],[6.098452,-2.483299,5.666864,-9.457292,-9.619722,-1.143698,-4.558279,-2.686782,0.933404,-0.256305]],[[6.332867,8.698007,-2.193614,5.026428,9.433669,-2.066737,8.500372,-4.929116,4.807051,6.754715],[-2.271182,-5.898662,5.164994,-2.563216,1.058214,-3.769942,-0.416236,6.041227,4.962649,2.806924],[6.927666,5.919253,3.211094,2.833209,-8.345938,-2.961951,-4.991826,5.219536,3.746814,8.455306],[8.242398,7.698389,3.268264,-8.502276,0.318418,8.349011,5.874896,-3.260181,7.610086,-3.748081],[-5.881831,-4.961012,8.078107,-6.842454,1.724109,-4.933318,5.043592,4.555714,-9.596609,4.215631],[1.246153,-8.055783,9.765224,8.913217,-1.395410,4.235880,5.795104,1.273221,8.119284,3.093572],[8.351263,4.178374,-5.014778,-3.480633,2.032635,-6.972046,-5.940886,4.697164,8.297788,-9.953957]],[[-6.483504,-6.038962,0.742062,7.556534,-3.640037,-4.910295,-0.408312,-6.679767,-9.289951,9.279295],[8.427847,-3.732040,-1.303048,3.176017,3.608317,8.072141,8.272396,9.450818,0.588851,-0.522648],[2.493156,-2.586317,-8.418259,-4.165118,6.270185,-9.426449,-2.158599,-3.163656,5.377792,-1.522361],[-0.618050,-8.420724,-2.786231,-2.211415,-3.896127,6.013043,2.457931,0.658975,-3.740594,-8.930534],[1.040218,-2.189692,-4.489193,-3.585765,5.898874,-8.013431,-2.073001,1.490082,-7.810271,8.690951],[-7.627815,-7.032049,-7.130958,-8.487777,-0.631678,-4.635221,7.890495,3.708366,8.819975,8.253381],[-8.020874,-5.289319,2.056218,4.364411,-0.096414,-1.496583,1.777089,-6.052083,4.564402,5.500780]],[[-0.475983,7.333779,-2.046137,3.949785,1.359112,-5.889994,-0.236430,-1.626825,8.406664,5.485224],[-2.215554,-4.241349,-7.113334,8.456857,1.465110,2.921900,-7.164840,-4.490336,1.381574,3.664830],[-8.525629,2.139177,-2.554892,-0.106365,3.041709,8.853637,-2.093043,-7.349074,0.521063,-7.709509],[-9.278932,-7.607779,-8.808304,8.329174,-2.366700,-2.048503,4.274599,4.934826,-0.384342,0.744068],[4.017329,9.074713,-5.841962,-7.978862,-2.636549,2.550316,4.633650,9.818229,-6.404362,7.932559],[7.743481,4.566529,9.279370,5.196253,0.018905,-0.014794,1.897109,-8.021178,0.712092,0.924249],[9.695826,-3.055836,-3.793371,-5.115775,-7.287131,9.685802,-1.023917,-9.699461,8.857026,8.685749]],[[-1.618570,6.603430,8.568151,-3.042231,4.369984,-1.521432,-6.114210,0.074763,6.896336,1.510342],[5.515776,4.646110,5.556754,-5.663248,1.758537,6.323079,3.895329,-9.240329,-8.691442,4.168106],[-3.141691,-3.208116,-7.950444,-0.802701,-6.461876,4.339195,-5.501265,4.046181,9.150888,6.606651],[3.766255,-3.023915,5.249878,2.509247,3.137569,5.138150,9.380698,-3.850969,5.140303,5.517202],[-5.022865,-1.488039,1.724483,6.641500,3.680893,-1.595411,7.603906,1.510198,6.868590,0.948480],[6.591713,-7.743158,-0.735438,-1.128158,0.108086,3.409390,-5.239060,1.720789,7.991215,-8.585269],[6.364196,1.277503,-6.734747,7.468853,-9.900457,-5.536839,-2.836604,-1.397973,-4.218387,-9.407282]]], dtype = "float32")#candidate|826|(14, 7, 10)|const|float32
bop_827 = relay.bitwise_or(uop_816.astype('uint64'), relay.reshape(const_826.astype('uint64'), relay.shape_of(uop_816))) # shape=(14, 7, 10)
output = relay.Tuple([bop_821,bop_827,])
output2 = relay.Tuple([bop_824,bop_827,])
func_830 = relay.Function([], output)
mod['func_830'] = func_830
mod = relay.transform.InferType()(mod)
mutated_mod['func_830'] = func_830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mutated_mod.get_global_var('func_830')
call_831 = func_830_call()
output = call_831
func_832 = relay.Function([], output)
mutated_mod['func_832'] = func_832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_854 = relay.TupleGetItem(func_830_call(), 1)
call_855 = relay.TupleGetItem(func_832_call(), 1)
output = call_854
output2 = call_855
func_865 = relay.Function([], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mutated_mod.get_global_var('func_865')
call_866 = func_865_call()
output = call_866
func_867 = relay.Function([], output)
mutated_mod['func_867'] = func_867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_920 = relay.TupleGetItem(func_830_call(), 1)
call_921 = relay.TupleGetItem(func_832_call(), 1)
output = relay.Tuple([call_920,])
output2 = relay.Tuple([call_921,])
func_938 = relay.Function([], output)
mod['func_938'] = func_938
mod = relay.transform.InferType()(mod)
output = func_938()
func_939 = relay.Function([], output)
mutated_mod['func_939'] = func_939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1001 = func_865_call()
call_1002 = func_865_call()
output = relay.Tuple([call_1001,])
output2 = relay.Tuple([call_1002,])
func_1003 = relay.Function([], output)
mod['func_1003'] = func_1003
mod = relay.transform.InferType()(mod)
output = func_1003()
func_1004 = relay.Function([], output)
mutated_mod['func_1004'] = func_1004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1005 = relay.TupleGetItem(func_1003_call(), 0)
call_1006 = relay.TupleGetItem(func_1004_call(), 0)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_1024 = relay.TupleGetItem(func_938_call(), 0)
call_1025 = relay.TupleGetItem(func_939_call(), 0)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1027 = relay.TupleGetItem(func_830_call(), 1)
call_1028 = relay.TupleGetItem(func_832_call(), 1)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1029 = relay.TupleGetItem(func_830_call(), 1)
call_1030 = relay.TupleGetItem(func_832_call(), 1)
output = relay.Tuple([call_1005,call_1024,call_1027,call_1029,])
output2 = relay.Tuple([call_1006,call_1025,call_1028,call_1030,])
func_1035 = relay.Function([], output)
mod['func_1035'] = func_1035
mod = relay.transform.InferType()(mod)
output = func_1035()
func_1036 = relay.Function([], output)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1039 = relay.TupleGetItem(func_830_call(), 0)
call_1040 = relay.TupleGetItem(func_832_call(), 0)
output = call_1039
output2 = call_1040
func_1041 = relay.Function([], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
mutated_mod['func_1041'] = func_1041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mutated_mod.get_global_var('func_1041')
call_1042 = func_1041_call()
output = call_1042
func_1043 = relay.Function([], output)
mutated_mod['func_1043'] = func_1043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1060 = relay.var("var_1060", dtype = "int64", shape = ())#candidate|1060|()|var|int64
var_1061 = relay.var("var_1061", dtype = "int64", shape = (14, 13, 15))#candidate|1061|(14, 13, 15)|var|int64
bop_1062 = relay.bitwise_xor(var_1060.astype('int64'), var_1061.astype('int64')) # shape=(14, 13, 15)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1065 = func_1041_call()
call_1066 = func_1041_call()
output = relay.Tuple([bop_1062,call_1065,])
output2 = relay.Tuple([bop_1062,call_1066,])
func_1067 = relay.Function([var_1060,var_1061,], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
var_1068 = relay.var("var_1068", dtype = "int64", shape = ())#candidate|1068|()|var|int64
var_1069 = relay.var("var_1069", dtype = "int64", shape = (14, 13, 15))#candidate|1069|(14, 13, 15)|var|int64
output = func_1067(var_1068,var_1069,)
func_1070 = relay.Function([var_1068,var_1069,], output)
mutated_mod['func_1070'] = func_1070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1123 = func_1041_call()
call_1124 = func_1041_call()
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1129 = relay.TupleGetItem(func_1003_call(), 0)
call_1130 = relay.TupleGetItem(func_1004_call(), 0)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1133 = relay.TupleGetItem(func_1003_call(), 0)
call_1134 = relay.TupleGetItem(func_1004_call(), 0)
bop_1153 = relay.greater(call_1133.astype('bool'), relay.reshape(call_1129.astype('bool'), relay.shape_of(call_1133))) # shape=(14, 7, 10)
bop_1156 = relay.greater(call_1134.astype('bool'), relay.reshape(call_1130.astype('bool'), relay.shape_of(call_1134))) # shape=(14, 7, 10)
output = relay.Tuple([call_1123,bop_1153,])
output2 = relay.Tuple([call_1124,bop_1156,])
func_1157 = relay.Function([], output)
mod['func_1157'] = func_1157
mod = relay.transform.InferType()(mod)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1158 = func_1157_call()
output = call_1158
func_1159 = relay.Function([], output)
mutated_mod['func_1159'] = func_1159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1211 = relay.TupleGetItem(func_1003_call(), 0)
call_1212 = relay.TupleGetItem(func_1004_call(), 0)
var_1230 = relay.var("var_1230", dtype = "uint64", shape = (14, 7, 10))#candidate|1230|(14, 7, 10)|var|uint64
bop_1231 = relay.bitwise_and(call_1211.astype('int16'), relay.reshape(var_1230.astype('int16'), relay.shape_of(call_1211))) # shape=(14, 7, 10)
bop_1234 = relay.bitwise_and(call_1212.astype('int16'), relay.reshape(var_1230.astype('int16'), relay.shape_of(call_1212))) # shape=(14, 7, 10)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1245 = func_865_call()
call_1246 = func_865_call()
const_1249 = relay.const([[[8,-6,-4,-6,-2,-1,3,-5,6,1],[7,10,-4,-6,5,-5,-4,2,9,-2],[-7,5,7,-6,-10,-8,-8,2,1,-1],[8,7,-4,1,-9,8,3,5,-5,-2],[-9,-1,1,10,-1,-8,6,-10,-8,-6],[3,-4,-7,-8,-1,7,-3,6,-2,-7],[7,2,3,-6,5,8,7,-6,-3,7]],[[5,4,2,1,8,9,-5,3,-4,-9],[-10,-9,-10,-1,9,9,-4,1,6,-2],[-2,-2,-1,-5,3,-6,-2,9,-9,-7],[10,2,10,10,5,-2,2,-4,-8,-1],[-4,5,-1,-9,7,-1,-3,-1,-4,1],[-4,8,7,-2,-10,6,-10,-9,-5,1],[6,9,5,-2,-2,10,-6,-3,-10,-7]],[[-7,-6,6,-8,-4,5,3,9,5,-8],[-6,4,-9,-4,3,1,6,7,-3,-5],[5,8,3,5,1,-8,4,-9,-10,-1],[-4,-2,-8,-2,-5,-9,-6,-6,4,-10],[9,-10,-1,-5,1,3,10,6,8,10],[-7,-2,4,2,1,1,-10,-2,-1,2],[-5,-9,-4,-5,-5,4,4,4,3,-5]],[[10,6,-10,-10,7,5,9,-9,1,5],[-10,9,-4,1,-1,-4,6,-10,8,9],[4,-9,8,-7,-3,4,-1,7,-5,3],[-7,-4,6,-9,-6,10,-2,4,-9,8],[3,-3,-2,8,-9,3,5,-10,1,-5],[-10,6,6,-2,1,6,2,6,10,-3],[-4,-6,4,-4,-5,-4,6,7,-10,-8]],[[8,6,-3,-6,-8,-1,-3,-5,-3,2],[8,5,5,-7,-2,7,6,2,6,2],[4,8,10,-4,2,1,1,-1,9,-3],[-2,-2,6,10,9,7,5,1,-9,-8],[-3,9,8,-10,2,7,6,4,3,-5],[8,-6,-9,8,-1,9,7,8,1,-2],[5,-7,-1,4,-5,-6,3,5,8,10]],[[-2,-5,-8,-6,-5,10,-2,-1,-7,6],[-4,-6,4,-8,7,-6,-6,1,6,-1],[-8,8,-7,2,2,6,10,-4,5,9],[-10,2,5,-10,-3,-9,3,2,6,5],[-1,5,-5,8,-3,-10,3,10,7,9],[2,-10,5,6,3,-1,-2,-8,7,5],[-4,-4,-8,4,-4,-5,1,3,5,-9]],[[-9,-5,-9,8,-10,6,9,-2,4,-4],[1,5,3,9,-5,8,-1,7,-7,-5],[-7,4,1,-4,-4,-3,6,-6,-6,-8],[-7,9,1,-7,-10,-7,3,2,7,-9],[2,5,-10,8,-8,-8,-3,3,2,2],[10,8,1,7,4,9,8,6,7,-5],[-10,-1,2,7,-4,6,8,-9,-2,9]],[[2,3,-3,7,3,-6,5,-6,-1,-10],[1,1,10,10,-4,-9,8,8,3,5],[7,8,9,8,-4,7,6,5,-5,9],[6,10,2,-7,-1,-10,4,-2,-2,6],[-1,-1,10,1,3,-7,-8,2,4,4],[4,6,3,-4,8,-9,3,-4,-8,-8],[-6,9,-1,3,-2,3,-2,7,-4,-8]],[[-1,1,-9,-6,-9,7,9,-9,-8,-6],[-1,8,7,-1,-8,-3,-8,-4,-9,-5],[3,4,-9,-4,7,-7,10,-4,-3,-8],[-3,-2,7,-1,6,-7,-9,3,-5,-5],[9,-3,-7,6,1,3,-6,9,2,-2],[-6,-9,1,3,1,10,-9,-8,7,8],[-9,4,-7,1,-2,10,-3,3,3,1]],[[3,5,-2,8,-9,1,-7,-3,9,4],[10,-7,2,-8,5,8,-1,-10,8,-6],[4,4,4,6,5,3,3,-8,-2,-10],[8,-7,-5,-3,6,-9,-9,-2,4,4],[-9,5,-9,-8,1,-9,8,-9,-4,-5],[4,-1,-8,-3,4,-2,-6,-4,1,-7],[-10,3,-2,-2,-7,-7,10,3,2,8]],[[5,8,6,6,5,-10,-10,4,7,10],[-2,6,-6,8,7,5,-6,5,6,9],[-7,-6,-2,-10,-8,-5,-9,10,10,-7],[-6,10,7,3,-7,5,-1,-10,3,4],[-2,10,9,-9,10,7,8,7,1,9],[2,9,-4,10,8,-7,-4,2,-8,4],[8,-3,7,4,-10,5,4,9,2,5]],[[3,2,8,-3,-6,-4,6,-3,-7,-2],[-9,-1,10,10,9,-4,7,10,-2,4],[9,2,-7,-10,-1,3,9,2,-6,-1],[-10,-5,-3,-6,9,-10,-10,-6,9,-5],[-8,2,-4,7,9,-3,5,7,5,2],[3,-4,6,4,-6,10,5,3,6,-9],[10,-5,-10,-4,6,-10,-7,6,4,1]],[[-6,6,-2,-3,1,-5,-4,7,-3,-10],[6,-9,-4,-8,-4,-10,9,4,-7,2],[-8,10,-7,5,-9,-10,5,-9,6,-9],[6,1,-5,7,-3,-1,-5,-3,9,4],[-5,4,6,10,3,-2,-9,4,-9,8],[-1,-3,10,-1,-5,9,-1,-1,8,-1],[-1,10,10,-3,-7,3,10,6,-3,10]],[[-4,-10,-2,4,-10,-3,-7,-10,8,-6],[-6,3,-4,-7,6,6,4,6,7,-10],[-4,10,7,-8,5,10,-4,9,-3,-6],[-2,10,-8,-4,6,-4,6,-2,3,-7],[-8,10,-1,-2,5,-3,4,-3,-2,9],[-10,8,4,8,-2,6,4,-3,-6,9],[-5,-8,-8,3,-9,-7,3,6,7,-5]]], dtype = "uint64")#candidate|1249|(14, 7, 10)|const|uint64
bop_1250 = relay.greater_equal(var_1230.astype('bool'), relay.reshape(const_1249.astype('bool'), relay.shape_of(var_1230))) # shape=(14, 7, 10)
output = relay.Tuple([bop_1231,call_1245,bop_1250,])
output2 = relay.Tuple([bop_1234,call_1246,bop_1250,])
func_1253 = relay.Function([var_1230,], output)
mod['func_1253'] = func_1253
mod = relay.transform.InferType()(mod)
var_1254 = relay.var("var_1254", dtype = "uint64", shape = (14, 7, 10))#candidate|1254|(14, 7, 10)|var|uint64
output = func_1253(var_1254)
func_1255 = relay.Function([var_1254], output)
mutated_mod['func_1255'] = func_1255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1275 = func_865_call()
call_1276 = func_865_call()
uop_1278 = relay.erf(call_1275.astype('float32')) # shape=(14, 7, 10)
uop_1280 = relay.erf(call_1276.astype('float32')) # shape=(14, 7, 10)
output = relay.Tuple([uop_1278,])
output2 = relay.Tuple([uop_1280,])
func_1281 = relay.Function([], output)
mod['func_1281'] = func_1281
mod = relay.transform.InferType()(mod)
output = func_1281()
func_1282 = relay.Function([], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1301 = func_865_call()
call_1302 = func_865_call()
output = relay.Tuple([call_1301,])
output2 = relay.Tuple([call_1302,])
func_1321 = relay.Function([], output)
mod['func_1321'] = func_1321
mod = relay.transform.InferType()(mod)
mutated_mod['func_1321'] = func_1321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1321_call = mutated_mod.get_global_var('func_1321')
call_1322 = func_1321_call()
output = call_1322
func_1323 = relay.Function([], output)
mutated_mod['func_1323'] = func_1323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1333 = func_1041_call()
call_1334 = func_1041_call()
output = call_1333
output2 = call_1334
func_1338 = relay.Function([], output)
mod['func_1338'] = func_1338
mod = relay.transform.InferType()(mod)
output = func_1338()
func_1339 = relay.Function([], output)
mutated_mod['func_1339'] = func_1339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1340 = relay.var("var_1340", dtype = "int8", shape = (12, 14, 4))#candidate|1340|(12, 14, 4)|var|int8
var_1341 = relay.var("var_1341", dtype = "int8", shape = (12, 14, 4))#candidate|1341|(12, 14, 4)|var|int8
bop_1342 = relay.not_equal(var_1340.astype('bool'), relay.reshape(var_1341.astype('bool'), relay.shape_of(var_1340))) # shape=(12, 14, 4)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1346 = relay.TupleGetItem(func_1003_call(), 0)
call_1347 = relay.TupleGetItem(func_1004_call(), 0)
output = relay.Tuple([bop_1342,call_1346,])
output2 = relay.Tuple([bop_1342,call_1347,])
func_1355 = relay.Function([var_1340,var_1341,], output)
mod['func_1355'] = func_1355
mod = relay.transform.InferType()(mod)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1355_call = mutated_mod.get_global_var('func_1355')
var_1357 = relay.var("var_1357", dtype = "int8", shape = (12, 14, 4))#candidate|1357|(12, 14, 4)|var|int8
var_1358 = relay.var("var_1358", dtype = "int8", shape = (12, 14, 4))#candidate|1358|(12, 14, 4)|var|int8
call_1356 = func_1355_call(var_1357,var_1358,)
output = call_1356
func_1359 = relay.Function([var_1357,var_1358,], output)
mutated_mod['func_1359'] = func_1359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1372 = relay.TupleGetItem(func_1003_call(), 0)
call_1373 = relay.TupleGetItem(func_1004_call(), 0)
output = relay.Tuple([call_1372,])
output2 = relay.Tuple([call_1373,])
func_1374 = relay.Function([], output)
mod['func_1374'] = func_1374
mod = relay.transform.InferType()(mod)
mutated_mod['func_1374'] = func_1374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1374_call = mutated_mod.get_global_var('func_1374')
call_1375 = func_1374_call()
output = call_1375
func_1376 = relay.Function([], output)
mutated_mod['func_1376'] = func_1376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_1401 = func_1338_call()
call_1402 = func_1338_call()
func_492_call = mod.get_global_var('func_492')
func_495_call = mutated_mod.get_global_var('func_495')
call_1403 = func_492_call(relay.reshape(call_1401.astype('float32'), [1, 13, 14]))
call_1404 = func_492_call(relay.reshape(call_1401.astype('float32'), [1, 13, 14]))
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_1406 = relay.TupleGetItem(func_938_call(), 0)
call_1407 = relay.TupleGetItem(func_939_call(), 0)
output = relay.Tuple([call_1401,call_1403,call_1406,])
output2 = relay.Tuple([call_1402,call_1404,call_1407,])
func_1415 = relay.Function([], output)
mod['func_1415'] = func_1415
mod = relay.transform.InferType()(mod)
output = func_1415()
func_1416 = relay.Function([], output)
mutated_mod['func_1416'] = func_1416
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1446 = relay.const([[[True,False,False],[True,True,False],[False,False,False],[False,False,True],[False,False,False],[False,False,False],[True,True,False],[True,False,False],[True,True,True],[True,False,False],[True,True,False],[False,False,True],[False,True,True],[True,True,True]],[[False,True,True],[False,True,True],[True,False,False],[True,False,True],[True,True,False],[True,False,False],[True,False,True],[True,False,False],[False,False,True],[False,True,False],[True,False,False],[True,False,True],[False,True,False],[True,False,False]],[[False,False,True],[False,True,True],[False,False,True],[True,True,True],[True,True,False],[False,True,True],[True,True,True],[True,False,False],[False,False,True],[False,True,False],[False,True,False],[True,True,True],[True,True,True],[False,True,False]],[[False,False,True],[False,True,True],[True,False,False],[True,True,False],[True,True,False],[False,False,False],[False,False,True],[False,False,True],[True,True,False],[False,True,True],[False,True,False],[False,True,True],[True,True,True],[True,False,False]],[[True,True,True],[True,True,True],[True,False,False],[True,False,False],[False,False,True],[False,False,False],[False,True,False],[False,True,True],[True,False,False],[False,True,False],[False,False,True],[True,True,True],[True,True,True],[True,False,True]]], dtype = "bool")#candidate|1446|(5, 14, 3)|const|bool
var_1447 = relay.var("var_1447", dtype = "bool", shape = (5, 14, 3))#candidate|1447|(5, 14, 3)|var|bool
bop_1448 = relay.logical_and(const_1446.astype('bool'), relay.reshape(var_1447.astype('bool'), relay.shape_of(const_1446))) # shape=(5, 14, 3)
output = bop_1448
output2 = bop_1448
func_1457 = relay.Function([var_1447,], output)
mod['func_1457'] = func_1457
mod = relay.transform.InferType()(mod)
var_1458 = relay.var("var_1458", dtype = "bool", shape = (5, 14, 3))#candidate|1458|(5, 14, 3)|var|bool
output = func_1457(var_1458)
func_1459 = relay.Function([var_1458], output)
mutated_mod['func_1459'] = func_1459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_1471 = relay.TupleGetItem(func_938_call(), 0)
call_1472 = relay.TupleGetItem(func_939_call(), 0)
output = call_1471
output2 = call_1472
func_1483 = relay.Function([], output)
mod['func_1483'] = func_1483
mod = relay.transform.InferType()(mod)
mutated_mod['func_1483'] = func_1483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mutated_mod.get_global_var('func_1483')
call_1484 = func_1483_call()
output = call_1484
func_1485 = relay.Function([], output)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1510 = relay.TupleGetItem(func_830_call(), 1)
call_1511 = relay.TupleGetItem(func_832_call(), 1)
func_1067_call = mod.get_global_var('func_1067')
func_1070_call = mutated_mod.get_global_var('func_1070')
const_1522 = relay.const(5, dtype = "int64")#candidate|1522|()|const|int64
var_1523 = relay.var("var_1523", dtype = "int64", shape = (2730,))#candidate|1523|(2730,)|var|int64
call_1521 = relay.TupleGetItem(func_1067_call(relay.reshape(const_1522.astype('int64'), []), relay.reshape(var_1523.astype('int64'), [14, 13, 15]), ), 1)
call_1524 = relay.TupleGetItem(func_1070_call(relay.reshape(const_1522.astype('int64'), []), relay.reshape(var_1523.astype('int64'), [14, 13, 15]), ), 1)
output = relay.Tuple([call_1510,call_1521,const_1522,var_1523,])
output2 = relay.Tuple([call_1511,call_1524,const_1522,var_1523,])
func_1540 = relay.Function([var_1523,], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
var_1541 = relay.var("var_1541", dtype = "int64", shape = (2730,))#candidate|1541|(2730,)|var|int64
output = func_1540(var_1541)
func_1542 = relay.Function([var_1541], output)
mutated_mod['func_1542'] = func_1542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1550 = relay.var("var_1550", dtype = "int8", shape = ())#candidate|1550|()|var|int8
const_1551 = relay.const([[[-3,2,-5,-5,-6,-4,2,5,2,10,-6],[-2,2,3,-10,-10,5,10,1,-4,-2,1],[10,-7,-7,-10,10,9,-9,-10,1,3,-1],[6,10,-2,-10,-8,9,5,-4,1,6,-4],[4,-3,3,5,-10,-10,10,-5,-5,1,10],[-3,8,6,6,8,-5,9,8,6,4,8],[-7,4,-8,9,-10,2,-6,3,-10,4,-3],[-5,-6,1,-8,3,4,9,-2,-1,1,-4],[2,9,-8,7,-5,-4,-5,10,-4,9,10],[-1,4,-7,-3,-4,-8,-7,7,10,8,2],[1,-5,4,-4,-1,7,6,2,4,-6,-8],[-9,-7,-6,4,-8,-1,7,-8,10,-5,5],[-10,3,-5,-6,-4,-8,3,7,4,-2,10],[-10,10,6,-6,1,1,2,4,7,-5,10]],[[8,7,3,-7,-9,-9,-9,-8,-9,-3,-2],[-4,-6,-4,-7,1,10,-9,5,5,-5,5],[-3,-10,-10,3,-1,8,-10,-8,-5,-4,5],[7,1,6,-8,1,1,-2,-6,3,-3,-3],[-3,10,10,-2,-7,-4,1,-6,10,8,9],[-4,-6,2,-8,-2,8,9,-6,-2,10,-1],[6,9,5,7,9,10,-8,7,-9,-9,1],[-4,8,7,-2,10,6,-3,-9,4,4,5],[6,10,-1,2,-8,6,-2,6,3,-9,-5],[9,-5,-2,-9,-10,9,10,-10,1,-1,-8],[1,-5,9,-3,-8,-8,7,1,7,3,-3],[7,7,3,-8,-1,4,5,-1,8,3,4],[6,-8,-9,10,-5,-5,-6,10,-1,4,6],[1,-8,-9,-4,2,10,-4,2,3,10,10]],[[8,1,3,-7,5,-8,-6,3,-4,4,5],[-5,2,2,5,10,-4,-7,6,-5,1,-5],[2,8,3,10,-10,2,-4,-3,-8,4,-4],[8,4,-5,7,-3,8,-7,-5,-6,3,-8],[6,-5,4,6,-2,-2,-8,-5,-4,7,2],[-2,2,-4,10,1,-3,10,-8,5,-3,-10],[3,9,4,1,10,4,3,-7,10,-9,-6],[8,5,8,2,10,-3,-5,5,-2,-1,-6],[-4,7,3,-7,-5,5,-2,-8,10,2,-7],[2,-4,8,3,-10,-1,3,5,4,-4,-9],[-1,1,-7,9,-9,-7,-7,10,10,-7,1],[4,-7,-5,7,-7,3,4,-10,-5,3,-4],[8,10,-6,-1,-6,-2,-5,-6,-10,-5,-3],[-2,-1,4,8,4,-3,-6,-1,9,-3,-2]],[[7,3,5,8,-6,-10,7,2,-3,-3,-3],[9,-7,-3,9,-9,5,2,9,-7,2,3],[-3,-7,3,5,9,8,-2,6,-6,6,6],[-3,-1,9,10,-5,7,1,1,4,10,8],[4,-3,-9,-6,-8,10,-1,-5,3,6,-3],[1,-1,-8,8,-2,7,5,-4,-1,-9,-4],[-9,1,-2,-3,-4,-10,9,5,-1,-4,-4],[-4,-9,3,-5,-10,9,-8,10,5,-8,-8],[-5,6,2,6,-8,-4,-7,-9,-5,7,-2],[-4,-8,6,-6,-5,-9,-6,-1,-7,-5,10],[-10,-4,-7,1,-8,4,2,4,-6,8,9],[6,-8,-3,-4,7,-1,10,-4,9,-4,9],[-3,-5,-3,-4,-8,-4,-3,-1,7,2,-9],[-8,-1,-4,-10,-4,-10,-3,3,5,8,-8]]], dtype = "int8")#candidate|1551|(4, 14, 11)|const|int8
bop_1552 = relay.less_equal(var_1550.astype('bool'), const_1551.astype('bool')) # shape=(4, 14, 11)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1557 = func_1041_call()
call_1558 = func_1041_call()
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1567 = func_865_call()
call_1568 = func_865_call()
uop_1569 = relay.atanh(call_1567.astype('float64')) # shape=(14, 7, 10)
uop_1571 = relay.atanh(call_1568.astype('float64')) # shape=(14, 7, 10)
output = relay.Tuple([bop_1552,call_1557,uop_1569,])
output2 = relay.Tuple([bop_1552,call_1558,uop_1571,])
func_1574 = relay.Function([var_1550,], output)
mod['func_1574'] = func_1574
mod = relay.transform.InferType()(mod)
var_1575 = relay.var("var_1575", dtype = "int8", shape = ())#candidate|1575|()|var|int8
output = func_1574(var_1575)
func_1576 = relay.Function([var_1575], output)
mutated_mod['func_1576'] = func_1576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1581 = func_865_call()
call_1582 = func_865_call()
output = relay.Tuple([call_1581,])
output2 = relay.Tuple([call_1582,])
func_1596 = relay.Function([], output)
mod['func_1596'] = func_1596
mod = relay.transform.InferType()(mod)
output = func_1596()
func_1597 = relay.Function([], output)
mutated_mod['func_1597'] = func_1597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_1652 = func_1483_call()
call_1653 = func_1483_call()
output = relay.Tuple([call_1652,])
output2 = relay.Tuple([call_1653,])
func_1662 = relay.Function([], output)
mod['func_1662'] = func_1662
mod = relay.transform.InferType()(mod)
mutated_mod['func_1662'] = func_1662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1662_call = mutated_mod.get_global_var('func_1662')
call_1663 = func_1662_call()
output = call_1663
func_1664 = relay.Function([], output)
mutated_mod['func_1664'] = func_1664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1693 = relay.TupleGetItem(func_830_call(), 0)
call_1694 = relay.TupleGetItem(func_832_call(), 0)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1695 = relay.TupleGetItem(func_1281_call(), 0)
call_1696 = relay.TupleGetItem(func_1282_call(), 0)
uop_1698 = relay.log(call_1693.astype('float64')) # shape=(182,)
uop_1700 = relay.log(call_1694.astype('float64')) # shape=(182,)
func_1457_call = mod.get_global_var('func_1457')
func_1459_call = mutated_mod.get_global_var('func_1459')
const_1702 = relay.const([True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False], dtype = "bool")#candidate|1702|(210,)|const|bool
call_1701 = func_1457_call(relay.reshape(const_1702.astype('bool'), [5, 14, 3]))
call_1703 = func_1457_call(relay.reshape(const_1702.astype('bool'), [5, 14, 3]))
uop_1707 = relay.sigmoid(uop_1698.astype('float64')) # shape=(182,)
uop_1709 = relay.sigmoid(uop_1700.astype('float64')) # shape=(182,)
output = relay.Tuple([call_1695,call_1701,const_1702,uop_1707,])
output2 = relay.Tuple([call_1696,call_1703,const_1702,uop_1709,])
func_1717 = relay.Function([], output)
mod['func_1717'] = func_1717
mod = relay.transform.InferType()(mod)
output = func_1717()
func_1718 = relay.Function([], output)
mutated_mod['func_1718'] = func_1718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1800 = func_1041_call()
call_1801 = func_1041_call()
output = call_1800
output2 = call_1801
func_1808 = relay.Function([], output)
mod['func_1808'] = func_1808
mod = relay.transform.InferType()(mod)
output = func_1808()
func_1809 = relay.Function([], output)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1813 = func_1041_call()
call_1814 = func_1041_call()
output = call_1813
output2 = call_1814
func_1821 = relay.Function([], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
output = func_1821()
func_1822 = relay.Function([], output)
mutated_mod['func_1822'] = func_1822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1942 = relay.var("var_1942", dtype = "int32", shape = (11, 2, 10))#candidate|1942|(11, 2, 10)|var|int32
var_1943 = relay.var("var_1943", dtype = "int32", shape = (11, 2, 10))#candidate|1943|(11, 2, 10)|var|int32
bop_1944 = relay.greater_equal(var_1942.astype('bool'), relay.reshape(var_1943.astype('bool'), relay.shape_of(var_1942))) # shape=(11, 2, 10)
uop_1949 = relay.asinh(var_1943.astype('float64')) # shape=(11, 2, 10)
output = relay.Tuple([bop_1944,uop_1949,])
output2 = relay.Tuple([bop_1944,uop_1949,])
func_1959 = relay.Function([var_1942,var_1943,], output)
mod['func_1959'] = func_1959
mod = relay.transform.InferType()(mod)
mutated_mod['func_1959'] = func_1959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1959_call = mutated_mod.get_global_var('func_1959')
var_1961 = relay.var("var_1961", dtype = "int32", shape = (11, 2, 10))#candidate|1961|(11, 2, 10)|var|int32
var_1962 = relay.var("var_1962", dtype = "int32", shape = (11, 2, 10))#candidate|1962|(11, 2, 10)|var|int32
call_1960 = func_1959_call(var_1961,var_1962,)
output = call_1960
func_1963 = relay.Function([var_1961,var_1962,], output)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1982 = relay.TupleGetItem(func_1281_call(), 0)
call_1983 = relay.TupleGetItem(func_1282_call(), 0)
func_1355_call = mod.get_global_var('func_1355')
func_1359_call = mutated_mod.get_global_var('func_1359')
const_1986 = relay.const([2,-4,-8,-1,8,4,-10,2,10,-3,-8,-6,-3,4,-6,2,4,1,8,10,9,-5,-10,-2,-3,-3,-4,-6,2,10,-6,5,8,-4,7,6,8,6,10,-6,-1,-4,8,5,9,-7,8,6,10,-4,-4,5,-2,9,9,5,-6,8,-8,-3,6,5,-6,10,3,-4,-4,10,-10,-10,-6,-2,3,-8,10,-1,3,-10,8,-4,-6,7,-9,-8,8,9,-2,-8,-10,-7,8,-9,-5,-2,1,-2,-6,6,6,6,1,-7,6,-9,2,7,5,2,4,-1,-4,1,3,-5,1,-2,7,-5,-7,-1,2,10,3,7,8,4,2,1,-3,4,-10,-4,6,-3,-6,1,-2,5,-2,7,-10,-1,-6,-6,1,-1,-4,9,8,2,-4,-2,-3,6,-7,5,-3,10,9,6,-5,10,-4,1,10,-4,8,3,-2,7,3,9,-8,-3,2,-10,6,8,8,-10,5,-5,1,-4,-8,-2,-3,-4,9,-10,9,-8,10,5,-5,10,-8,-3,-2,1,6,-2,-6,9,-6,-6,1,-9,2,-2,-8,7,7,6,4,1,3,-10,2,6,-10,-2,-10,5,5,-9,2,-1,-7,-8,4,-3,-5,-10,2,-4,10,-5,-6,-2,-10,4,-8,-10,-9,6,-10,-2,1,1,-10,6,-8,10,-5,-5,-5,6,-3,10,5,-7,6,9,1,-1,-4,1,-9,-7,5,-9,2,-8,2,-7,6,3,1,-9,3,-5,8,2,-9,2,-3,-8,6,8,-6,6,-6,3,-2,-4,-4,-5,-7,10,6,-3,4,-1,-9,-10,-3,6,7,1,-4,6,3,2,8,7,-5,4,4,-10,6,10,6,1,7,-5,-6,-1,-4,-1,7,10,-10,1,-10,9,-3,-5,2,4,-7,-2,-4,2,-8,-2,-10,-8,5,-4,-2,-10,9,4,9,-3,-9,-9,-8,10,-1,10,7,2,7,6,9,4,1,-3,10,-7,1,-3,-7,6,7,1,-5,-7,-1,4,9,9,-10,10,-8,-8,-5,1,-3,-3,-4,6,9,4,6,-1,-9,-7,-3,-6,6,-2,-4,6,-2,10,5,-7,-7,6,10,8,-10,-6,-2,5,-8,-10,2,2,6,9,-5,-6,7,4,1,-7,-7,-3,-9,6,5,-2,3,-8,5,10,4,-2,10,-10,-8,-10,-4,-3,-9,-2,8,-1,7,1,9,-2,9,-3,10,8,2,4,-10,1,-7,-6,-7,7,8,-6,9,-9,-1,-5,-8,10,2,-8,-10,-2,1,3,6,-2,6,-9,-7,3,-3,-1,-3,2,3,-8,8,4,-9,-7,-7,-9,-8,-9,-7,7,1,10,6,-7,-2,4,6,-1,-4,-10,-9,5,-7,4,-5,3,-8,-9,-7,-5,-3,10,8,-2,2,-5,-1,8,-3,2,-5,5,10,-8,-2,7,-4,5,-10,6,1,1,-2,-7,-3,-2,-6,2,10,-4,-4,8,-9,2,9,1,1,-9,-5,7,-7,-6,5,8,7,10,4,1,-10,-5,5,9,10,-9,6,2,-5,8,-6,7,-8,-7,4,6,-3,3,6,3,1,10,-8,-5,-1,-6,9,2,-2,-2,7,2,-8,9,8,2,4,1,6,-8,6,6,7,3,-7,6,2,5,5,-7,-5,-4,-5,-4,8,-10,6,-10,-5,4,9,-5,10,-2,-5,-7,10,-1,4,-5,-7,-9,-2,8,3,9,-2,4,6,4,-6,2,-2,-10,8,9,4,-8,6,-4,-6,2,7,7,-3,-5,-3,7,-9,2], dtype = "int8")#candidate|1986|(672,)|const|int8
call_1985 = relay.TupleGetItem(func_1355_call(relay.reshape(const_1986.astype('int8'), [12, 14, 4]), relay.reshape(const_1986.astype('int8'), [12, 14, 4]), ), 1)
call_1987 = relay.TupleGetItem(func_1359_call(relay.reshape(const_1986.astype('int8'), [12, 14, 4]), relay.reshape(const_1986.astype('int8'), [12, 14, 4]), ), 1)
func_1374_call = mod.get_global_var('func_1374')
func_1376_call = mutated_mod.get_global_var('func_1376')
call_1989 = relay.TupleGetItem(func_1374_call(), 0)
call_1990 = relay.TupleGetItem(func_1376_call(), 0)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
const_1998 = relay.const([[6.272940],[-6.529383],[-0.884496],[7.762361],[5.920897],[9.019464],[-2.529490],[-8.732895],[5.739925],[6.566622],[8.646377],[6.188731],[-1.448507],[-7.693332],[4.422379],[-1.929575],[3.686057],[2.451030],[-7.552855],[8.935610],[-1.109698],[8.359197],[9.052866],[3.733165],[-3.979137],[-9.358233],[-3.689992],[1.122958],[-5.237415],[7.161017],[-1.275104],[-1.701066],[6.135887],[-6.843054],[-4.836707],[4.168130],[-8.209938],[0.119624],[-6.663875],[9.218720],[7.916516],[-4.656530],[1.734211],[-3.271148],[9.158850],[-8.540976],[7.571142],[2.236538],[-7.803803],[4.296600],[7.834217],[2.909775],[0.720646],[-9.697775],[-7.954249],[-1.869328],[4.322763],[4.041242],[-7.821215],[-3.219974],[0.365813],[-5.000264],[-1.755053],[0.752617],[7.902502],[2.653415],[-5.753238],[-3.095516],[-2.312739],[3.651114],[-2.671501],[-0.983122],[3.545137],[3.656906],[-3.061715],[4.798909],[-0.319046],[-6.381029],[-0.871880],[1.010044],[-3.670188],[-5.963207],[5.178173],[-8.297478],[7.521765],[-3.850946],[-4.087033],[2.878125],[-8.497616],[1.025475],[3.660621],[2.660930],[-7.861502],[-2.238662],[6.219088],[-3.754979],[-1.401725],[-2.171431],[-7.597039],[1.142391],[3.116015],[6.557309],[8.693713],[4.169850],[2.378141],[-9.131976],[9.964710],[-6.703173],[2.305560],[-7.301526],[-6.553891],[0.425347],[-4.706410],[6.295164],[-9.417458],[-0.268074],[-0.475248],[5.587363],[0.006461],[-7.146135],[-5.978717],[3.025482],[-9.921733],[5.865291],[-1.592599],[-0.075428],[6.716536],[0.478169],[-1.081119],[-4.829052],[-3.321239],[-4.127867],[-8.269442],[-1.513464],[-2.707772],[4.301365],[2.984837],[-5.180365],[-0.600983],[1.870358],[-7.089662],[-6.976797],[4.481661],[2.646126],[-4.974133],[1.690803],[-4.707877],[7.451654],[9.610436],[-0.033400],[-5.522396],[-0.589726],[-3.583625],[0.118515],[5.472735],[5.074529],[2.211927],[7.195650],[-7.699912],[-9.198511],[-4.974883],[9.961200],[3.278737],[5.300718],[-6.192222],[-5.578135],[9.345768],[-0.510849],[6.902511],[9.340567],[-7.646668],[-0.878616],[-4.042248],[5.369919],[-9.649878],[1.672074],[2.994707],[-6.338457],[9.239813],[6.757343],[7.519267],[2.288193],[0.858146],[5.425730],[9.787048],[1.814780],[4.552295],[4.954598],[9.286028],[-9.746513],[-0.953814],[-9.941111],[-4.660871],[-9.740461],[-5.262357],[7.164376],[1.779526],[6.539526],[-0.082081],[-5.135412],[0.709579],[-5.281506],[1.480176],[-7.560277],[-7.716620],[9.365834],[-4.742685],[-4.503987],[-5.955310],[-2.190129],[-3.895484],[-5.030754],[-7.365490],[-6.490684],[-6.486948],[2.223090],[-8.697175],[6.879944],[1.485260],[-9.466762],[-5.419341],[0.782593],[5.051213],[-1.719762],[-9.958960],[9.710129],[-7.445200],[6.696000],[7.634824],[-4.652177],[-8.032137],[3.589404],[9.094275],[-9.011009],[-5.665808],[-5.968310],[-8.514827],[5.385719],[4.668064],[0.760066],[-4.144676],[-0.180123],[2.325601],[-9.366055],[-3.370736],[-8.025289],[-8.369287],[6.130962],[-7.525880],[-9.984691],[3.079371],[-1.763033],[-5.866650],[7.452373],[4.990874],[-1.275209],[8.262617],[-4.056932],[-5.605633],[4.759679],[7.516355],[9.972931],[5.375691],[3.185403],[-0.742245],[-8.791145],[-0.493279],[-2.600866],[-9.422679],[-6.199392],[-0.270342],[-3.863457],[-7.924477],[-9.896841],[3.404461],[2.059304],[-6.715089],[-8.593418],[3.149619],[1.218656],[7.419679],[3.726101],[-6.058065],[4.322304],[-9.909299],[-8.157401],[-4.848565],[-8.254896],[-1.328518],[1.310902],[3.247824],[-2.792605],[1.308503],[4.568859],[8.912600],[-4.851692],[0.611390],[-3.485387],[5.945851],[-7.546440],[-1.828684],[7.101511],[3.492763],[4.191526],[-3.467317],[4.787846],[2.066130],[3.370113],[-7.307699],[6.953499],[-0.775628],[4.446149],[-2.764834],[6.163741],[8.531916],[9.193986],[6.809265],[-8.486322],[-6.237601],[-0.572540],[-9.949169],[-4.807001],[4.380436],[-1.961811],[8.384060],[6.879444],[5.439050],[4.203244],[1.202298],[-9.603585],[-1.878697],[-7.304288],[-4.206050],[3.394729],[-4.814482],[8.537894],[9.238380],[-2.866314],[-1.299738],[3.748727],[-7.430114],[0.229837],[8.511792],[8.130829],[9.575202],[6.368445],[1.469899],[7.149450],[-6.752932],[8.062751],[-7.028656],[6.638609],[-0.675962],[8.739442],[-3.636520],[-9.448756],[5.054462],[-7.480773],[-0.537701],[5.994361],[5.277622],[-0.469232],[-4.331141],[-4.884633],[-5.648564],[9.540103],[4.399219],[-0.841392],[-3.719050],[-1.365563],[-3.904964],[-4.570547],[-6.548934],[-4.474081],[-2.185051],[-0.049616],[-7.785371],[4.731572],[4.309431],[1.653302],[7.277140],[-1.006708],[6.468059],[-0.910540],[-7.057809],[-7.412588],[-0.479167],[2.408968],[-1.339837],[3.483693],[7.400882],[-5.500397],[-1.816024],[7.666769],[-5.198396],[4.119873],[3.628006],[-2.418182],[9.206866],[0.017010],[7.834719],[-0.917396],[-5.296795],[-9.807201],[-9.718234],[3.054337],[0.122722],[1.062080],[8.186076],[5.867915],[-8.446820],[1.237104],[5.493896],[-4.604395],[6.599515],[-7.418179],[-0.663387],[-2.304769],[-0.933605],[7.964926],[-8.293112],[0.471894],[-2.821645],[-3.321392],[8.303888],[9.925759],[-0.645279],[0.061531],[-6.384397],[-3.440389],[7.215693],[-6.918016],[-3.806070],[-8.863503],[0.872320],[6.065933],[4.013363],[-7.840292],[6.840575],[7.045320],[-5.766063],[-5.589192],[-3.014463],[-7.636887],[-0.075545],[-6.318786],[-5.547591],[8.670438],[7.125703],[0.899065],[5.053275],[-5.907025],[5.368602],[-7.872744],[8.499109],[3.087346],[5.794384],[3.657583],[-5.696037],[-9.580797],[-1.979607],[-7.469616],[-7.933585],[0.938105],[-9.927263],[-2.068936],[6.207149],[-3.864059],[0.744540],[-2.711527],[-9.015881],[5.580741],[8.938302],[6.983963],[-4.203117],[-5.309265],[-0.852640],[7.134826],[-2.042898],[-0.768720],[-5.876063],[-9.212839],[-9.258644],[-8.469460],[-9.322726],[-5.394372],[8.988211],[-5.328585],[-0.309577],[-0.998425],[0.355961],[-6.605026],[4.860781],[-4.152215],[-8.149146],[-8.464816],[-5.687299],[3.427451],[4.301703],[-0.046912],[-8.040293],[9.617730],[-5.376459],[-1.244053],[2.358229],[-3.157853],[-6.249329],[0.335481],[-9.537479],[9.124822],[-4.739135],[1.734201],[3.702811],[6.735872],[8.131438],[-8.846664],[9.069436],[8.635590],[9.176165],[-2.995479],[-2.297841],[6.683829],[0.202303],[-7.961117],[2.880337],[0.538615],[-6.412761],[-7.799475],[6.069449],[-1.701431],[7.995679],[-6.207856],[-2.969941],[6.054008],[2.343229],[7.694410],[-8.662629],[-1.952968],[4.043794],[1.663543],[8.689192],[-5.291726],[-9.083739],[3.526423],[3.393048],[-1.397818],[-4.409277],[3.705266],[-8.084090],[-8.827487],[-1.819934],[3.859933],[-2.003282],[9.859262],[-8.286154],[-8.941800],[3.099183],[3.319881],[5.116937],[8.778597],[2.181234],[-3.658170],[-6.169899],[-2.450258],[-6.091326],[-7.635350],[-4.316354],[7.755065],[-8.940490],[-6.436193],[9.085044],[-4.758077],[-7.533313],[-2.986176],[-8.961672],[-2.390614],[7.781271],[9.457659],[-9.265255],[-2.971913],[-6.891248],[7.260962],[-2.060840],[4.951370],[8.019834],[-3.890155],[9.477680],[7.156715],[-0.407627],[8.929841],[1.305555],[-8.200141],[-3.942850],[-1.787702],[-9.585981],[2.499944],[-5.216631],[6.562352],[3.575207],[4.720167],[5.097448],[-3.684205],[-7.252086],[-5.590339],[1.692844],[4.557717],[8.686703],[-6.719865],[1.786417],[-0.686969],[4.034033],[-3.808485],[-7.018316],[2.932749],[-5.359330],[2.145790],[-2.277952],[-9.169883],[5.531173],[6.394811],[9.720381],[-0.801637],[5.704428],[-0.898608],[1.077318],[-2.231983],[3.365492],[-7.503486],[-1.427078],[1.279435],[-1.717811],[-4.010369],[-7.255918],[4.754954],[1.466550],[9.810277],[2.499007],[7.397407],[-9.678697],[2.116436],[-5.036378],[-1.904576],[-4.310586],[-8.305119],[-7.277119],[-7.852326],[-4.475545],[5.559654],[5.056308],[-9.329144],[-9.046678],[3.302938],[3.623314],[-3.402778],[3.368207],[-7.803638],[7.148411],[5.936467],[7.099367],[-3.489290],[3.465758],[4.055321],[-7.641170],[7.178007],[3.530531],[-8.434534],[8.609043],[-9.196157],[8.573881],[-5.176077],[-3.463078],[-3.354912],[0.942313],[-8.480873],[4.501122],[2.060116],[3.804386],[-4.495303],[6.800923],[3.031580],[-4.212177],[-5.762518],[-2.182931],[-7.684592],[8.369545],[-3.889188],[5.744371],[6.689259],[-6.106801],[-8.618693],[9.787681],[-3.662544],[-0.611557],[-4.322041],[-5.502361],[-5.418660],[1.821330],[-0.931228],[0.602636],[4.877419],[3.071790],[0.538099],[0.434344],[-6.606976],[-3.453868],[9.516255],[-3.301350],[-5.555228],[8.184766],[-4.201645],[-0.912892],[-3.070722],[-1.178039],[2.857699],[1.125602],[-7.669109],[-4.730724],[-6.960297],[7.071000],[1.900170],[0.822486],[5.894669],[8.866120],[-2.319911],[-2.682804],[-3.975920],[7.487439],[-6.940306],[-3.131618],[-4.891306],[8.721603],[-2.207163],[-0.557215],[5.791865],[4.090338],[7.642192],[7.460710],[-3.017976],[-7.355215],[9.796669],[-5.738793],[7.633357],[-0.509646],[8.773658],[-8.108691],[8.590316],[-1.828783],[7.694960],[-9.429755],[-6.279379],[-9.558920],[-9.743139],[-5.387522],[-2.737423],[1.903513],[3.049897],[6.870220],[0.177159],[6.759368],[-5.217999],[-8.244992],[6.394549],[-3.028646],[0.642735],[8.083986],[-6.125938],[0.560646],[0.782019],[-7.106112],[-7.718711],[-5.963558],[7.793253],[2.257926],[2.523554],[0.452235],[-8.056171],[7.548385],[-5.307350],[-4.997363],[-4.476527],[-9.117911],[9.850566],[3.880825],[0.636877],[-8.712358],[3.631879],[-2.660421],[4.120169],[-0.869552],[-7.784532],[-7.486473],[0.456636],[-9.340141],[3.132350],[-5.323441],[-0.200596],[4.885323],[-8.436394],[-3.285986],[-8.775069],[-1.197068],[1.183089],[-2.795259],[-4.991261],[-4.090072],[-9.871028],[8.776684],[-9.933130],[8.323494],[-2.347739],[-0.266722],[-0.317551],[5.730087],[-3.402254],[0.288541],[-8.473657],[9.952703],[-0.300173],[-9.333200],[-1.394462],[1.032647],[-1.654969],[-7.584550],[-1.457162],[-6.293086],[0.878040],[1.144999],[-8.930530],[2.917618],[-9.750910],[1.925037],[-1.489216],[6.438778],[-5.356545],[8.265939],[-5.427394],[7.496005],[3.126261],[1.856596],[-9.772883],[-0.405014],[-0.644394],[9.664064],[-4.214556],[-4.592434],[5.497270],[-1.392401],[-6.788532],[-5.115953],[9.507276],[9.158441],[-5.781472],[-0.376081],[-5.317757],[2.217819],[-0.425914],[1.050331],[3.249482],[4.829134],[7.751899],[2.154165],[-5.690387],[-0.481589],[9.572265],[4.438463],[-4.030376],[-5.580288],[-5.207399],[-3.935820],[-0.463006],[8.566101],[8.775288],[-7.949729],[5.086766],[5.018478],[2.841673],[-3.861281],[-7.504712],[-8.472769],[1.264583],[-5.461829],[-5.579290],[2.008645],[-7.566396],[3.038400],[6.624748],[4.910742],[6.842691],[-3.245533],[6.743556],[0.106971],[-5.345892],[-3.047585],[-8.532233],[-6.307226],[0.935877],[2.931984],[8.562644],[-4.977762],[-0.020305],[-4.067669],[-3.536060],[7.700090],[2.608333],[-0.514194],[8.461606],[4.348902],[2.477818],[-2.931744],[-0.278844],[-7.658685],[2.617810],[1.806710],[-6.926018],[-1.344005],[-5.645486],[-9.478649],[-7.289076],[-4.810393],[7.430369],[2.804079],[0.425139],[-9.719055],[-2.809556],[-8.421543],[2.985337],[-3.490040],[5.509751],[9.900220],[5.267406],[-1.939731],[2.349445],[-1.574646],[-2.708014],[7.114593],[-9.893703],[-7.600714],[-8.939010],[-0.867414],[1.813543],[8.115843],[3.648057],[-8.008975],[-0.301386],[-7.931386],[2.513720],[2.372393],[-3.044674],[3.083173],[-1.924829],[-9.310474],[4.072804],[-5.522298],[-2.112935],[-8.566449],[-8.353831],[-1.715238],[-4.836292],[-8.084230],[6.331085],[-7.566992],[8.623099],[7.812364],[-6.681336],[6.244564],[3.332594],[1.685428],[-2.694505],[-3.380360],[-9.824095],[7.316120],[0.814347],[1.543605],[-5.577518],[-3.721181],[-9.794132],[-4.621931],[-5.215388],[5.287739],[-3.297990],[6.334045],[1.727087],[-5.292305],[3.966320],[-1.116087],[-0.644867],[-0.279417],[1.717594],[4.907557],[2.900703],[9.857274],[-1.248177],[1.167921],[4.478820],[4.361040],[9.936347],[-8.000310],[1.186718],[8.430836],[5.298497],[9.030831],[2.041100],[4.531337],[2.304592],[-1.557561],[-0.050479],[-2.024786],[8.787911],[9.196760],[4.413365],[4.582063],[-1.786544],[7.321112],[-7.497757],[-4.315748],[-4.184919],[3.309335],[9.308565],[-1.702706],[5.988895],[7.002843],[7.431499],[8.850396],[4.971558],[8.173646],[1.053811],[-7.018493],[-4.623234],[-3.815156],[-9.727677],[2.996923],[-1.484177],[-3.070361],[6.443230],[-9.419382],[9.265014],[9.697435],[1.288636],[8.640890],[2.213005],[4.785319],[2.699505],[-0.196287],[3.407032],[4.661881],[9.801966],[-2.218391],[1.893915],[2.895417],[-7.396393],[-3.652942],[3.659324],[-2.632125],[-9.108619],[-4.727619],[-4.578922],[-6.373961],[7.038922],[-0.384450],[8.916197],[-3.927785],[-1.111738],[-9.862722],[8.733266],[-5.740033],[6.172586],[6.273359],[-4.719654],[-1.053554],[8.781272],[0.468414],[-5.594206],[-5.857658],[-4.171967],[4.470417],[-2.124718],[1.729143],[-5.772077],[-6.906410],[2.771658],[8.068294],[1.101210],[-4.717355],[-7.865455],[-7.078620],[4.206271],[-2.945738],[-9.054519],[3.965443],[6.057877],[-0.328888],[-0.992071],[-8.980817],[-3.823299],[-8.277054],[3.792557],[-4.247861],[-2.212462],[9.104873],[3.801905],[-5.415901],[7.897452],[4.780791],[7.663546],[-3.420190],[4.158510],[-3.446479],[-6.350722],[-5.857559],[-1.994572],[4.592489],[6.805424],[-7.542717],[-1.905527],[-9.899953],[-0.069927],[-0.014786],[9.840972],[5.859774],[-9.521050],[5.347774],[-0.591099],[1.634340],[-1.377899],[1.751444],[-3.447985],[1.541216],[6.083553],[6.818593],[7.440763],[3.726316],[-4.702549],[9.176877],[3.773930],[8.487112],[-1.404089],[3.010841],[-4.090528],[-2.004390],[9.521995],[6.053890],[-3.654985],[1.645785],[9.216008],[3.923033],[-4.433304],[-6.372420],[-3.827689],[0.236658],[-1.616659],[5.768807],[0.535693],[2.138562],[4.177886],[7.174467],[-9.033917],[-2.681910],[7.529232],[-2.089436],[-8.471886],[9.327938],[-0.177285],[8.177973],[1.662300],[0.876068],[4.812953],[-3.767761],[7.841561],[7.438331],[8.153583],[0.687089],[7.812830],[-2.880721],[6.147458],[5.906594],[-9.110410],[3.463014],[-7.391046],[9.281415],[0.441959],[8.219464],[9.482129],[1.336560],[-2.336013],[8.476360],[3.178007],[2.587867],[-5.847002],[4.635742],[-8.927033],[3.256943],[7.949467],[3.406836],[-8.351048],[4.632727],[9.557619],[-6.144735],[7.910322],[-3.576443],[-0.603309],[9.395836],[-1.546535],[9.700393],[6.197196],[8.410137],[2.434750],[-0.712841],[0.447003],[9.127543],[4.445565],[9.293506],[7.635725],[4.870819],[7.163034],[-2.330070],[-5.644550],[-1.896580],[-5.431558],[1.756707],[-8.763676],[3.658035],[-5.925315],[9.599196],[-9.720059],[9.062771],[3.640979],[-6.940357],[-6.593324],[4.761758],[4.834798],[-2.459563],[-5.781029],[1.995826],[-9.270192],[-2.302473],[9.935152],[-0.007688],[0.916791],[7.772246],[-8.421959],[4.337503],[6.866025],[7.101815],[-7.824319],[6.102785],[-5.404127],[8.984056],[-1.612815],[-4.705212],[6.657745],[-4.742300],[-5.560595],[-2.644890],[-5.955047],[2.705718],[-8.072631],[-8.317402],[0.342681],[-6.987378],[4.715526],[3.823162],[7.479341],[-6.899207],[9.557654],[-4.063975],[7.995265],[6.661532],[7.941536],[7.125305],[7.193364],[0.894132],[-2.449015],[9.087236],[7.532576],[9.154541],[-4.256744],[-5.735729],[2.919292],[8.716020],[9.650013],[4.545289],[-7.344636],[0.408259],[8.153633],[4.635446],[9.892504],[-4.458493],[0.205978],[0.743963],[3.389307],[4.896339],[-3.418284],[8.232045],[-5.906362],[-4.463499],[-1.863354],[-9.159034],[2.306659],[4.764128],[-9.390618],[5.657322],[6.385199],[9.736766],[-1.507693],[6.724608],[8.746368],[4.235364],[-1.890983],[7.987124],[9.364286],[8.558913],[-1.182879],[2.466324],[6.466949],[-2.265908],[7.733012],[2.771082],[4.357970],[1.910241],[-8.690793],[-2.919810],[0.215638],[2.849661],[-0.725745],[-5.819953],[-9.286184],[-6.679650],[1.264765],[-5.494758],[-5.577853],[3.976341],[8.246928],[-0.868985],[0.268538],[-5.806537],[-5.117689],[-9.286036],[-4.886277],[2.365162],[-6.345910],[-1.807960],[6.981326],[1.222998],[-0.174890],[3.363332],[-3.767630],[3.461603],[-8.941315],[9.026768],[2.407922],[0.947801],[-2.372973],[-4.825393],[0.754902],[9.584607],[3.838568],[-0.718001],[-1.341795],[-7.983270],[-7.583771],[2.350028],[-7.163064],[-0.110977],[-8.830864],[-1.879668],[5.394061],[3.135922],[5.107020],[-9.673653],[-9.881231],[1.442041],[0.211450],[-1.042685],[2.304801],[0.271073],[7.492964],[5.242652],[9.835847],[-3.050786],[7.692008],[0.008433],[-6.728121],[-6.638342],[-0.807475],[-2.473448],[-2.745023],[6.363619],[0.204834],[-3.702328],[-2.435595],[-4.052482],[-8.795424],[5.801424],[8.190120],[-8.004562],[-4.324757],[4.895131],[-7.823200],[0.861675],[-0.798791],[0.706001],[7.438709],[9.176603],[0.178708],[5.385949],[9.510516],[8.562260],[0.499043],[5.200293],[-3.430113],[8.916882],[4.157735],[5.055132],[-8.680186],[7.950898],[-3.311678],[-4.326406],[5.140255],[-9.840132],[5.124586],[-8.794137],[-0.882054],[-1.008261],[-9.977472],[-5.390942],[8.916300],[7.402632],[4.173563],[7.366550],[1.697183],[-5.118975],[4.702151],[6.895379],[-3.097870],[8.981193],[-8.008223],[-0.376668],[4.296528],[-6.043504],[-3.239626],[-5.536381],[0.808516],[0.105672],[-0.809916],[-9.578802],[4.344559],[2.786377],[3.912259],[8.200309],[0.520880],[9.330085],[-3.252678],[-6.377664],[7.878994],[7.137163],[8.838530],[5.203757],[6.980960],[4.651488],[2.730691],[-1.969743],[9.417729],[-4.856711],[-2.978075],[-4.862143],[-0.291731],[5.386297],[-9.999128],[3.336177],[8.822568],[3.910585],[-2.809627],[1.065697],[7.367547],[-8.106633],[-1.708822],[0.302412],[-9.146923],[2.138818],[6.362151],[-7.256509],[0.991415],[-9.222153],[8.009378],[4.823245],[-0.564161],[-2.786321],[-2.975614],[9.244590],[-4.160990],[-6.807147],[-4.703832],[-8.082259],[5.820197],[6.498019],[-6.838160],[4.534530],[-4.724795],[2.521309],[2.980559],[-6.103428],[7.696227],[-8.208368],[-8.843366],[-4.222221],[5.515549],[1.928604],[-4.565684],[5.460770],[2.821908],[6.662390],[-7.721298],[-2.654345],[-1.540104],[7.861948],[-0.654300],[-9.283716],[-9.932048],[4.925359],[-7.266389],[5.418817],[5.240927],[4.971705],[1.278441],[8.934344],[7.649432],[-7.060241],[6.246356],[-0.038110],[-3.669409],[8.961559],[9.108548],[-6.878409],[6.340842],[-4.433427],[3.858827],[6.490663],[9.575000],[3.075275],[0.163072],[8.292236],[9.662523],[9.854527],[-8.597836],[-4.558367],[3.423660],[-0.248708],[0.292627],[-7.692359],[-4.376720],[-6.955868],[-1.632899],[-1.969650],[-6.667860],[-3.893138],[5.364993],[0.789766],[7.665337],[5.561101],[-2.252150]], dtype = "float64")#candidate|1998|(1560, 1)|const|float64
call_1997 = func_177_call(relay.reshape(const_1998.astype('float64'), [13, 8, 15]))
call_1999 = func_177_call(relay.reshape(const_1998.astype('float64'), [13, 8, 15]))
output = relay.Tuple([call_1982,call_1985,const_1986,call_1989,call_1997,const_1998,])
output2 = relay.Tuple([call_1983,call_1987,const_1986,call_1990,call_1999,const_1998,])
func_2005 = relay.Function([], output)
mod['func_2005'] = func_2005
mod = relay.transform.InferType()(mod)
mutated_mod['func_2005'] = func_2005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mutated_mod.get_global_var('func_2005')
call_2006 = func_2005_call()
output = call_2006
func_2007 = relay.Function([], output)
mutated_mod['func_2007'] = func_2007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1321_call = mod.get_global_var('func_1321')
func_1323_call = mutated_mod.get_global_var('func_1323')
call_2081 = relay.TupleGetItem(func_1321_call(), 0)
call_2082 = relay.TupleGetItem(func_1323_call(), 0)
output = relay.Tuple([call_2081,])
output2 = relay.Tuple([call_2082,])
func_2083 = relay.Function([], output)
mod['func_2083'] = func_2083
mod = relay.transform.InferType()(mod)
output = func_2083()
func_2084 = relay.Function([], output)
mutated_mod['func_2084'] = func_2084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_2110 = func_1483_call()
call_2111 = func_1483_call()
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_2112 = relay.TupleGetItem(func_2005_call(), 2)
call_2113 = relay.TupleGetItem(func_2007_call(), 2)
output = relay.Tuple([call_2110,call_2112,])
output2 = relay.Tuple([call_2111,call_2113,])
func_2115 = relay.Function([], output)
mod['func_2115'] = func_2115
mod = relay.transform.InferType()(mod)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2116 = func_2115_call()
output = call_2116
func_2117 = relay.Function([], output)
mutated_mod['func_2117'] = func_2117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_2121 = func_1808_call()
call_2122 = func_1808_call()
uop_2142 = relay.tan(call_2121.astype('float32')) # shape=(182,)
uop_2144 = relay.tan(call_2122.astype('float32')) # shape=(182,)
output = relay.Tuple([uop_2142,])
output2 = relay.Tuple([uop_2144,])
func_2155 = relay.Function([], output)
mod['func_2155'] = func_2155
mod = relay.transform.InferType()(mod)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2156 = func_2155_call()
output = call_2156
func_2157 = relay.Function([], output)
mutated_mod['func_2157'] = func_2157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2083_call = mod.get_global_var('func_2083')
func_2084_call = mutated_mod.get_global_var('func_2084')
call_2194 = relay.TupleGetItem(func_2083_call(), 0)
call_2195 = relay.TupleGetItem(func_2084_call(), 0)
output = call_2194
output2 = call_2195
func_2200 = relay.Function([], output)
mod['func_2200'] = func_2200
mod = relay.transform.InferType()(mod)
output = func_2200()
func_2201 = relay.Function([], output)
mutated_mod['func_2201'] = func_2201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_2295 = relay.TupleGetItem(func_1415_call(), 0)
call_2296 = relay.TupleGetItem(func_1416_call(), 0)
var_2302 = relay.var("var_2302", dtype = "float64", shape = (182,))#candidate|2302|(182,)|var|float64
bop_2303 = relay.floor_mod(call_2295.astype('float64'), relay.reshape(var_2302.astype('float64'), relay.shape_of(call_2295))) # shape=(182,)
bop_2306 = relay.floor_mod(call_2296.astype('float64'), relay.reshape(var_2302.astype('float64'), relay.shape_of(call_2296))) # shape=(182,)
output = bop_2303
output2 = bop_2306
func_2311 = relay.Function([var_2302,], output)
mod['func_2311'] = func_2311
mod = relay.transform.InferType()(mod)
mutated_mod['func_2311'] = func_2311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2312 = relay.var("var_2312", dtype = "float64", shape = (182,))#candidate|2312|(182,)|var|float64
func_2311_call = mutated_mod.get_global_var('func_2311')
call_2313 = func_2311_call(var_2312)
output = call_2313
func_2314 = relay.Function([var_2312], output)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_2349 = relay.TupleGetItem(func_2155_call(), 0)
call_2350 = relay.TupleGetItem(func_2157_call(), 0)
output = call_2349
output2 = call_2350
func_2362 = relay.Function([], output)
mod['func_2362'] = func_2362
mod = relay.transform.InferType()(mod)
mutated_mod['func_2362'] = func_2362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2362_call = mutated_mod.get_global_var('func_2362')
call_2363 = func_2362_call()
output = call_2363
func_2364 = relay.Function([], output)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1321_call = mod.get_global_var('func_1321')
func_1323_call = mutated_mod.get_global_var('func_1323')
call_2365 = relay.TupleGetItem(func_1321_call(), 0)
call_2366 = relay.TupleGetItem(func_1323_call(), 0)
uop_2380 = relay.rsqrt(call_2365.astype('float32')) # shape=(14, 7, 10)
uop_2382 = relay.rsqrt(call_2366.astype('float32')) # shape=(14, 7, 10)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_2383 = relay.TupleGetItem(func_2155_call(), 0)
call_2384 = relay.TupleGetItem(func_2157_call(), 0)
output = relay.Tuple([uop_2380,call_2383,])
output2 = relay.Tuple([uop_2382,call_2384,])
func_2399 = relay.Function([], output)
mod['func_2399'] = func_2399
mod = relay.transform.InferType()(mod)
mutated_mod['func_2399'] = func_2399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2399_call = mutated_mod.get_global_var('func_2399')
call_2400 = func_2399_call()
output = call_2400
func_2401 = relay.Function([], output)
mutated_mod['func_2401'] = func_2401
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2445 = relay.const([[[6],[5],[5],[3],[4],[9],[8],[-10],[8],[4],[-4],[7],[2],[-5],[8]],[[2],[-2],[-9],[-6],[-6],[6],[-10],[9],[-1],[-7],[3],[1],[7],[8],[2]],[[4],[9],[-10],[4],[1],[-6],[9],[-5],[-4],[-7],[9],[-4],[2],[6],[5]],[[-3],[1],[-6],[10],[-6],[-2],[-2],[-8],[9],[-1],[-3],[-6],[5],[-10],[7]],[[10],[-8],[-4],[3],[-6],[7],[-1],[1],[3],[-1],[6],[-9],[1],[-2],[6]],[[10],[-1],[-6],[-3],[-9],[7],[-9],[2],[-8],[-9],[3],[3],[2],[5],[-8]],[[-3],[-6],[5],[9],[2],[8],[-3],[-8],[6],[2],[-6],[-5],[-9],[6],[-10]],[[7],[-3],[10],[-7],[-7],[-7],[8],[2],[5],[-3],[5],[3],[10],[-4],[-6]],[[-9],[10],[7],[9],[8],[-5],[-2],[5],[9],[2],[-6],[-3],[5],[-9],[-10]],[[-5],[-7],[10],[-4],[-10],[-8],[7],[5],[2],[1],[-10],[-10],[-6],[-6],[8]],[[-1],[4],[8],[1],[-6],[4],[5],[-2],[3],[-6],[9],[-1],[-9],[-8],[1]],[[1],[-6],[9],[-1],[-6],[3],[-9],[-1],[-9],[-8],[-9],[3],[7],[-7],[8]],[[-8],[-10],[-6],[-10],[1],[-3],[4],[-3],[6],[1],[10],[-8],[2],[-6],[-10]],[[-8],[5],[-7],[-9],[7],[-1],[-6],[-4],[-1],[-2],[-4],[-2],[3],[10],[4]],[[-6],[-10],[-2],[-2],[-4],[-3],[-3],[1],[8],[10],[2],[-10],[6],[10],[-5]],[[-6],[9],[-1],[-5],[-2],[-4],[-3],[3],[-6],[5],[9],[-8],[4],[4],[-10]]], dtype = "int8")#candidate|2445|(16, 15, 1)|const|int8
var_2446 = relay.var("var_2446", dtype = "int8", shape = (16, 15, 14))#candidate|2446|(16, 15, 14)|var|int8
bop_2447 = relay.subtract(const_2445.astype('int8'), var_2446.astype('int8')) # shape=(16, 15, 14)
var_2467 = relay.var("var_2467", dtype = "int8", shape = (16, 15, 4))#candidate|2467|(16, 15, 4)|var|int8
bop_2468 = relay.not_equal(const_2445.astype('bool'), var_2467.astype('bool')) # shape=(16, 15, 4)
uop_2478 = relay.cos(const_2445.astype('float64')) # shape=(16, 15, 1)
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_2491 = relay.TupleGetItem(func_2115_call(), 0)
call_2492 = relay.TupleGetItem(func_2117_call(), 0)
output = relay.Tuple([bop_2447,bop_2468,uop_2478,call_2491,])
output2 = relay.Tuple([bop_2447,bop_2468,uop_2478,call_2492,])
func_2494 = relay.Function([var_2446,var_2467,], output)
mod['func_2494'] = func_2494
mod = relay.transform.InferType()(mod)
mutated_mod['func_2494'] = func_2494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2494_call = mutated_mod.get_global_var('func_2494')
var_2496 = relay.var("var_2496", dtype = "int8", shape = (16, 15, 14))#candidate|2496|(16, 15, 14)|var|int8
var_2497 = relay.var("var_2497", dtype = "int8", shape = (16, 15, 4))#candidate|2497|(16, 15, 4)|var|int8
call_2495 = func_2494_call(var_2496,var_2497,)
output = call_2495
func_2498 = relay.Function([var_2496,var_2497,], output)
mutated_mod['func_2498'] = func_2498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1321_call = mod.get_global_var('func_1321')
func_1323_call = mutated_mod.get_global_var('func_1323')
call_2518 = relay.TupleGetItem(func_1321_call(), 0)
call_2519 = relay.TupleGetItem(func_1323_call(), 0)
var_2521 = relay.var("var_2521", dtype = "uint64", shape = (14, 7, 10))#candidate|2521|(14, 7, 10)|var|uint64
bop_2522 = relay.less(call_2518.astype('bool'), relay.reshape(var_2521.astype('bool'), relay.shape_of(call_2518))) # shape=(14, 7, 10)
bop_2525 = relay.less(call_2519.astype('bool'), relay.reshape(var_2521.astype('bool'), relay.shape_of(call_2519))) # shape=(14, 7, 10)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
const_2535 = relay.const([4.795410,-5.234055,-1.411241,-4.623653,7.055039,-7.452346,-0.799104,3.940390,8.438904,9.899340,6.695546,-4.941910,-0.212867,-3.800461,-6.557845,-3.225408,5.086439,7.651594,-9.044758,2.899719,9.631507,-3.080538,-1.214164,-1.694909,4.362640,-2.379458,-8.784973,9.432696,4.640995,-5.663198,-8.343648,1.581802,-6.721289,2.463362,0.627583,-2.780587,0.705427,-9.691030,-0.086702,4.260810,-6.782907,2.529751,-0.649195,-6.252951,-5.825749,-5.951775,8.287446,-1.335580,-0.447934,6.298649,-2.062986,6.577818,-2.472975,8.095861,-0.184648,-2.975394,-3.390217,7.778318,-0.374970,-3.086268,8.153520,-0.706577,-7.049373,-7.804218,-2.419843,-6.242550,4.181706,-8.129518,-5.895532,-9.921350,-1.026125,8.985953,-8.950176,-9.468628,-5.518492,4.787718,0.240666,1.500863,-8.162619,-9.339390,7.449457,3.840880,-9.116964,-6.214735,7.712851,-0.574314,2.131484,-5.044873,-8.591783,-6.257409,0.440689,-7.803498,8.644552,1.011951,0.389710,4.903018,-0.273361,8.664718,-9.712647,7.022510,3.967364,-6.935368,-9.371415,-3.700809,0.679409,2.734011,7.821132,4.750249,6.999203,-2.585939,-0.076513,2.086535,1.822908,-4.633711,-8.535435,3.561877,0.055927,-3.572306,4.952734,-9.362835,-3.610721,8.888506,-3.424534,-1.522149,9.720258,-5.961038,-3.937372,0.226461,7.106440,-8.982679,3.988596,4.692846,1.573173,-8.611873,-4.351575,2.511867,7.190634,-9.766985,8.209947,1.608483,-2.108266,-5.565197,-0.583877,-2.704346,3.088329,4.871109,-5.369671,4.773779,9.950684,-8.602403,6.035780,-2.702252,7.845463,-3.696873,2.958219,3.436127,5.338716,1.453803,4.355557,5.065587,-8.779124,-6.058766,2.690576,-7.892927,7.433362,4.236345,-2.049999,0.574063,-0.449154,-5.690165,-9.632394,4.604899,4.626814,3.206912,-0.838767,-4.614927,2.139183,-2.104321,-7.195795,6.076861,5.537923,-7.686812,-8.410007,2.738487,6.922044,3.256324,-6.157394,-2.683785,6.431071,-2.893601,-3.456769,-0.513821,5.544665,1.712487,7.259580,-3.157875,9.722205,-0.204789,-9.329663,-3.271965,0.972680,3.691306,8.942821,3.321774,5.758516,-1.787539,-8.012070,-2.402081,6.421879,-8.634805,-4.901324,-2.889798,6.163904,-5.021925,-5.323539,-0.663190,-7.487947,3.859397,7.696639,-6.464877,7.066819,-7.621119,9.660262,2.464592,-9.357134,2.115690,-2.709887,-8.234956,-2.822278,-1.720085,-3.282317,-9.458945,-2.247655,-1.138820,-6.658279,5.296804,4.921109,-3.415459,-9.215652,-4.474825,0.392689,6.362216,1.486125,2.430607,-3.144176,-6.926897,-5.643984,7.167077,6.070216,-8.577667,-5.710223,1.365998,-9.549832,-5.744183,1.253167,6.765711,-9.665764,2.548643,5.843246,8.380634,-1.950891,-5.299472,-6.205964,5.406332,5.213869,-9.535373,1.982557,5.942927,1.300418,-6.438869,-8.522105,4.185821,1.795624,-8.300571,3.616299,-0.897232,-7.254604,8.653080,1.610083,-1.487170,-3.483778,-9.855096,-3.369877,8.072076,-2.793594,-9.796724,-9.966630,5.342084,-9.773350,-9.838453,-5.979284,4.983954,5.601762,3.792717,-2.264897,3.721395,-7.406834,-4.553607,8.439160,-8.494168,-9.434863,8.253104,-5.033920,-0.612111,-9.097391,2.341568,2.577344,9.908309,7.379246,3.708964,-4.043096,-9.914786,7.702748,2.150551,2.808963,-0.226332,9.810473,-2.439613,-3.622268,-2.534035,2.144402,2.026724,7.872561,3.885250,-3.924188,-7.310388,3.686416,8.298196,3.006162,4.923808,5.809050,-1.050556,9.780584,-6.278323,4.434379,6.646619,-0.172764,-6.251484,3.740842,-7.060443,-5.313339,7.944184,-1.862520,-3.157245,9.334433,-3.614316,7.683351,9.758414,4.805216,1.152753,5.340705,9.516955,3.185141,3.160290,3.033090,-4.005775,-4.191850,7.841985,1.912015,-5.893985,3.461667,9.372712,-7.853715,-8.534734,-2.670195,-7.675549,-0.830545,-1.937109,1.273854,-6.242117,9.253974,5.593989,-5.883022,-9.301893,-6.524170,6.713604,7.078582,0.401093,3.823531,7.152838,4.715514,6.572179,0.645782,4.139722,9.518144,5.320200,3.305682,-9.526947,0.145030,7.205401,-6.893439,-9.376172,6.301838,3.412425,9.729112,-8.315602,-7.798975,-2.017834,0.500798,9.873588,0.603529,-0.958605,6.202254,4.043731,7.609747,-1.160168,7.312061,-8.084246,-0.318248,2.236165,-3.823124,-0.225136,-8.394736,7.359907,7.627685,-7.316659,5.138169,4.265279,-8.875372,-9.386736,8.339553,4.672729,0.412199,3.882389,8.174423,5.040050,-1.354108,-0.802978,-2.003254,9.980094,-9.860324,-6.614022,-0.507584,-7.023124,-2.874788,-7.264519,-5.548182,-2.499228,7.631237,3.146949,6.177837,4.772093,8.921954,-8.426610,8.546909,3.076915,4.331477,2.486695,5.838203,-2.260045,-3.304255,1.393052,-2.404904,-9.078701,8.036936,-7.344853,-3.669896,-2.801313,-6.927989,5.605265,-3.670927,4.230530,5.754882,2.364254,8.006210,-6.163721,4.488973,-3.013672,-3.871086,3.483244,-5.289022,-5.455402,6.867403,-3.833432,9.886752,6.250738,-0.706591,5.163042,-3.107926,-3.938442,2.565307,3.755590,-2.310631,-6.035080,3.242721,-4.683464,-1.392941,-6.997913,-8.634343,1.604029,8.103811,4.163552,7.745808,8.815399,-0.332952,8.359512,-4.659803,-0.960064,-2.235799,5.336155,-7.223070,-3.366751,-5.427290,5.699391,0.957748,-1.390087,4.337728,4.486381,7.978745,-2.175496,-6.322726,6.848251,5.934266,-2.172688,-8.009362,3.658092,3.069132,0.982993,-4.948319,-5.839967,8.673012,-7.433294,8.717751,-5.464808,-5.523249,-0.318431,-9.287043,-2.515355,1.339100,-9.238510,-0.428895,-1.106207,2.116057,-7.891854,-2.406180,7.971349,5.585935,0.557005,3.894966,5.582890,-3.718275,2.591600,7.327627,-3.619147,-1.563298,3.367273,-4.127932,-7.610234,1.043333,-5.232740,-8.250183,-4.858966,9.056466,-9.698386,1.007188,9.304591,1.584262,-3.053610,-1.263477,6.728186,3.389777,8.841583,-2.299687,0.577516,-7.194619,-5.374786,-7.469444,1.234884,-3.603332,-3.196081,1.454382,6.710346,-8.996793,-2.755608,1.273476,3.728407,-2.505674,-8.695186,6.933476,-6.370501,0.390620,-9.268632,5.129585,-4.873337,3.588820,0.541756,-4.876646,0.932706,4.785054,5.878159,6.122855,8.062189,4.502198,-7.228403,-2.630873,2.880860,8.224657,5.516017,3.385271,-1.617371,-0.341513,9.810168,8.529943,-6.805617,-5.359078,8.598055,-5.405861,4.957077,-4.095385,-0.722208,5.468739,7.905217,0.773876,3.370608,-5.068834,8.093420,-7.798309,4.804564,3.986547,-2.245081,6.848820,0.432092,-0.878567,1.522030,7.460644,1.286384,2.583429,9.443443,6.702378,1.361101,7.448852,1.400822,-8.707758,0.727765,-1.143067,0.394968,9.406115,2.507974,-0.863728,-3.370208,1.823208,-8.285707,-6.078800,2.277700,-1.826470,0.170687,-0.895106,5.371834,4.962314,-8.069742,-4.836364,1.327186,3.430803,-0.801144,-8.921551,7.876004,-4.039318,-7.979087,7.837542,9.097744,7.188736,8.591029,3.420028,-0.826439,2.374146,-0.591163,-2.103269,1.077614,-9.603639,3.892265,0.163857,-8.942139,-9.958312,-1.307992,4.921305,-1.302469,9.038216,-7.530929,-3.398157,1.848115,6.313740,-3.263233,-6.710858,5.671932,9.646462,8.752126,4.008613,-2.652838,-6.315258,-3.332548,-0.795553,-9.592177,-7.578668,-1.283716,9.637526,8.970281,3.700941,5.797800,5.278805,6.105327,7.676915,2.218481,-5.582688,7.456127,2.630645,-6.040094,-3.695784,9.121133,9.725291,5.434244,5.677700,-0.443404,-6.198908,-7.418776,-1.199141,-9.224798,-0.105136,9.238441,-4.374796,-5.243133,-9.591250,3.306697,2.336980,4.921568,0.333690,-8.474555,4.212450,0.281628,-1.506214,-4.564799,8.765578,-3.002026,-5.574546,9.706079,-0.104256,-9.916495,-6.468619,6.579453,-5.152666,0.010866,-8.246825,1.842181,-8.964555,0.009505,-0.910155,9.970315,0.196142,-5.623961,5.954084,-2.320618,9.619170,-2.109882,-0.736248,6.801210,1.438973,-0.085753,-2.079249,6.759888,2.114156,4.993333,-7.107162,4.243271,8.028537,-3.247183,0.956198,-4.936523,3.592999,4.549642,0.536983,2.900979,1.918096,-2.176214,2.575416,-1.348493,-4.736918,-8.197140,-4.999122,-3.743498,8.834166,6.870837,8.343090,8.574700,-2.546079,2.039556,-2.784702,-9.808906,-9.383849,2.021381,3.669159,-6.840072,-1.539945,-8.115595,8.217329,-4.064885,4.729605,9.203816,0.375842,-1.806930,4.143955,0.326347,-6.820936,5.243224,-5.008645,-6.064380,-6.371770,-2.199937,8.982476,-7.568069,5.402488,-8.131134,-1.423794,-2.844059,-2.725405,3.699442,-1.789632,5.377191,9.043234,0.866400,-2.359073,3.697724,9.858708,4.107002,-0.574173,2.870536,-1.470127,7.638306,4.664689,-3.808923,-4.322009,-7.699674,5.496893,8.806253,-3.515285,-8.295247,-9.307829,-5.431418,6.132357,-5.377298,0.936457,-3.912903,2.654914,-4.844431,7.775986,4.853459,-7.345667,-2.395099,2.257326,-4.532856,-6.908528,-0.297600,-0.314329,-5.251573,-6.214310,-0.669011,-5.305309,3.510971,-4.997980,7.377037,5.345977,8.250033,-2.936777,9.306129,1.223964,7.463296,-5.931814,-1.652500,-1.839633,2.506748,3.542046,-8.646091,-3.655498,-7.107680,4.566941,-4.550464,-1.124514,7.062630,6.236144,-2.182295,-0.266550,-7.605081,-2.966723,-4.162991,-9.176551,6.675346,5.344492,5.030061,-5.307785,-9.696649,9.559164,-5.062620,-9.478913,-6.120529,-0.301379,-0.713866,6.880779,0.610590,0.221206,-4.721502,3.472910,9.035277,-7.942661,-3.731289,-9.037058,-0.667934,8.595679,8.218106,-9.421078,5.835365,9.180112,-3.733414,7.780086,-2.558608,8.396574,-0.796121,-9.385046,1.904047,-3.875085,4.516210,-6.410238,8.263965,-8.713893,0.978972,-6.092347,6.033886,-5.737235,-3.471076,-7.705586,-9.079804,-0.383004,-3.189355,-7.014508,7.690269,-4.472293,-6.596613,-8.061122,-9.714542,-5.354101,-5.247274,2.928924,-9.271484,6.662261,3.511737,2.858067,3.677229,-2.624999,6.089340,4.363654,9.038000,0.838764,-6.861502,9.326338,4.450778,-1.254082,1.112202,3.220340,6.770114,-4.708289,-1.264421,-3.400706,8.489545,-3.098510,0.167381,5.670063,7.742618,-7.557604,1.954791,-2.811147,-4.695935,-9.877507,-0.965473,8.083539,-7.195436,-9.164793,-7.778212,-4.792071,9.714016,-8.145477,-0.716842,-5.486325,-4.879921,1.394544,-6.698473,-1.796827,-3.766832,-4.007903,7.390635,-6.500939,-3.040011,-5.527378,9.044281,-9.636525,6.622773,7.010499,5.832912,6.448217,3.644854,1.332881,8.049904,-6.656778,-3.157237,-5.388743,-0.096739,0.517249,-7.401765,7.361404,-5.923049,-6.781997,-0.638773,5.670058,3.759192,-8.207925,8.190507,2.057297,9.509658,-1.808297,-1.117407,2.209520,6.149429,0.827670,0.371619,0.085242,2.674816,9.601943,0.372592,1.406309,-6.284980,1.055167,9.350358,-5.417025,-2.073607,-7.760066,1.884260,-2.951689,-9.546313,-9.424527,-8.374914,3.978381,-9.065494,-8.655197,1.915350,-1.295134,9.054092,9.359159,-0.192598,4.004454,-9.542283,-1.994295,-0.889366,-8.606308,-5.117861,-0.421160,-1.039610,-2.248135,-8.536099,-3.352420,-2.934781,6.283578,0.190051,-1.365458,-2.012353,-1.234035,5.059218,0.399098,8.312207,-2.749752,-9.628495,7.631379,-2.236960,6.745097,-6.438561,-5.262120,4.360320,-5.294460,-5.740717,-1.025774,-4.893776,5.504335,7.371222,4.034895,-0.439389,1.654119,-2.929801,2.498544,-1.147055,-3.405699,8.578430,-7.343455,-1.684298,1.781761,0.400219,-9.386152,-2.055549,-3.678313,-6.011015,0.393405,6.036716,2.725080,3.841772,8.081859,-6.495438,-6.341801,-7.146838,-3.182479,1.851483,-1.635430,5.675242,-8.259917,-8.141515,-2.399107,3.980063,-1.537250,-9.561345,-2.685278,-0.398570,5.038152,1.543801,-9.664910,-3.043966,5.451180,-7.299569,5.723901,-0.634295,-9.127068,-6.898274,7.429202,-3.795605,-8.964776,9.328190,-0.358696,-8.577471,-6.053456,9.480279,-1.202317,9.853628,3.437300,1.209594,-7.626201,-3.841346,-3.275411,4.122720,-1.210626,6.265955,-3.610729,-4.013810,0.473068,-3.588234,-5.609347,-0.275360,-3.232189,-7.904906,-3.428927,-5.349132,9.211430,2.455640,3.814558,3.445337,-9.160124,-3.072008,-2.712084,0.356385,-8.946068,2.184527,7.133561,8.188965,-2.302737,8.453068,5.727006,8.946629,-0.619399,-8.708391,2.722735,-5.581663,1.877451,-6.442294,7.444534,4.376441,2.037202,-6.969025,-1.982638,-4.948753,-4.251617,7.929838,5.123484,-6.477975,2.172826,7.149613,5.021056,-3.479209,8.534592,-9.911694,-1.311134,-8.783826,-3.491925,-1.474433,-7.085231,8.341508,-0.237541,-6.909764,0.006597,-9.352651,2.395632,4.177514,8.179741,7.834718,-8.311036,7.311705,7.216763,7.003726,-9.624550,8.179316,-1.258962,7.335016,2.459073,3.842084,2.464609,-8.258736,6.131406,1.030323,9.875018,1.773636,-4.736935,5.050932,-1.962108,9.965851,-9.262453,5.354849,-9.247249,-2.399627,-4.862801,-0.330441,9.605595,3.794715,5.455199,3.063323,8.012569,-2.750009,3.922183,-2.349399,-2.207245,-7.251767,-2.360433,-5.306402,9.907666,-0.044478,-4.325578,6.184809,8.043173,-2.555834,2.944878,-7.803894,8.818170,-6.542453,-3.841370,-4.688195,-4.544816,5.482159,9.500476,4.359319,-1.793572,-3.210724,9.960326,-8.452226,-4.645306,9.106467,-2.577173,0.808980,-8.854401,-8.742341,-4.495372,-9.133163,-2.570054,3.487995,6.827188,-5.823245,-8.188667,-0.802696,-9.967154,5.297811,9.267237,-5.904253,-0.027174,3.976377,7.553047,0.604030,5.359853,-1.392446,8.587965,8.681561,5.810999,3.425624,-3.275491,3.684392,-3.160559,-0.934497,2.402931,-2.451780,-9.366008,-5.016221,1.536130,4.960352,0.147847,-0.338212,2.432952,7.903708,4.939762,-9.952408,-9.779895,-0.865191,-6.324384,8.648957,5.815087,6.985635,1.871211,2.355750,9.922532,4.937002,4.527367,-0.834859,2.869694,8.958293,-6.438512,2.232835,6.687847,2.997708,-3.571329,1.298953,-9.894528,7.670886,-5.361426,6.657036,9.689234,8.626224,-7.477649,3.763433,4.822522,3.221265,-5.786284,1.935881,-9.712998,-7.607160,3.874655,2.910126,-9.454418,2.426750,7.947974,2.125193,-3.872785,9.323178,-1.388528,-5.473454,7.284155,8.583705,-0.728106,9.593937,8.261348,5.900824,5.719512,6.406127,3.055907,0.497070,4.976313,8.651324,8.520203,-5.905583,0.219005,2.513488,-1.204213,7.334246,6.708031,-5.167836,-9.483430,7.875054,-0.577025,5.134811,-9.527899,-4.087594,1.970039,3.678887,0.105789,-0.487373,-2.018567,0.958964,-7.180976,-8.766717,-7.379786,1.610837,-0.686875,-3.843723,3.328463,4.719043,-8.545015,5.673465,5.771110,-4.389262,-7.071408,-5.157990,7.520501,-5.651345,-1.177232,3.900582,1.410953,4.198632,-6.335599,-4.860469,6.754177,0.128065,7.376752,-3.520123,9.827366,0.375705,2.206580,-2.313661,-5.322854,0.649935,6.210735,6.275937,3.544858,6.476528,-3.484778,3.612418,4.939795,-0.245486,1.180361,7.738761,7.494888,-3.312953,-1.883201,3.873789,2.084866,8.973519,-7.320563,7.720575,9.262979,1.476186,-9.911650,-9.496747,9.383330,0.842310,5.640841,5.561248,6.713931,0.155846,-3.625449,-6.823462,2.482352,8.814966,-5.897609,0.602506,5.058004,-1.535852,1.741242,4.834428,6.938434,0.582319,3.358605,7.566396,4.025463,4.889275,-9.343970,3.800987,8.231791,0.580699,-2.407615,-4.885808,2.247659,7.185298,1.281116,8.605781,9.040349,8.763021,5.512363,-3.340236,7.479474,-9.047431,8.649139,-0.086058,-0.708435,6.499748,-5.174246,-8.382554,-6.873427,0.069713,-6.383370,-0.106620,0.124776,5.016486,-1.617600,6.780318,1.398325,4.096681,-0.396395,6.965777,5.246629,2.119234,-5.963828,4.620810,1.251923,-0.940280,2.989944,-6.201079,-7.427934,2.206589,3.052945,3.367146,2.479130,0.451053,-5.132621,-8.023789,4.806701,2.042282,-3.017903,-8.609172,8.075419,4.448022,1.182956,-7.324995,1.309827,2.323951,-4.933376,6.474599,6.019830,5.463787,-4.903688,-9.054702,4.047857,3.677838,-7.294545,-8.868930,0.865825,6.671879,9.969718,-4.299097,0.701887,9.336086,-0.547908,7.746869,7.182625,2.830569,1.164741,-1.438749,-3.389315,-4.555315,4.615980,-2.153751,-2.661184,-0.288593,8.552701,5.592521,-6.638192,1.364144,2.656359,-6.033633,2.676919,-9.934949,1.902863,-4.852368,7.902863,3.895476,4.694146,8.579233], dtype = "float64")#candidate|2535|(1560,)|const|float64
call_2534 = func_177_call(relay.reshape(const_2535.astype('float64'), [13, 8, 15]))
call_2536 = func_177_call(relay.reshape(const_2535.astype('float64'), [13, 8, 15]))
output = relay.Tuple([bop_2522,call_2534,const_2535,])
output2 = relay.Tuple([bop_2525,call_2536,const_2535,])
func_2540 = relay.Function([var_2521,], output)
mod['func_2540'] = func_2540
mod = relay.transform.InferType()(mod)
mutated_mod['func_2540'] = func_2540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2541 = relay.var("var_2541", dtype = "uint64", shape = (14, 7, 10))#candidate|2541|(14, 7, 10)|var|uint64
func_2540_call = mutated_mod.get_global_var('func_2540')
call_2542 = func_2540_call(var_2541)
output = call_2542
func_2543 = relay.Function([var_2541], output)
mutated_mod['func_2543'] = func_2543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2362_call = mod.get_global_var('func_2362')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_2548 = func_2362_call()
call_2549 = func_2362_call()
output = call_2548
output2 = call_2549
func_2552 = relay.Function([], output)
mod['func_2552'] = func_2552
mod = relay.transform.InferType()(mod)
mutated_mod['func_2552'] = func_2552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mutated_mod.get_global_var('func_2552')
call_2553 = func_2552_call()
output = call_2553
func_2554 = relay.Function([], output)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_2555 = func_1808_call()
call_2556 = func_1808_call()
func_1596_call = mod.get_global_var('func_1596')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_2557 = relay.TupleGetItem(func_1596_call(), 0)
call_2558 = relay.TupleGetItem(func_1597_call(), 0)
output = relay.Tuple([call_2555,call_2557,])
output2 = relay.Tuple([call_2556,call_2558,])
func_2560 = relay.Function([], output)
mod['func_2560'] = func_2560
mod = relay.transform.InferType()(mod)
mutated_mod['func_2560'] = func_2560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mutated_mod.get_global_var('func_2560')
call_2561 = func_2560_call()
output = call_2561
func_2562 = relay.Function([], output)
mutated_mod['func_2562'] = func_2562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_2592 = relay.TupleGetItem(func_1281_call(), 0)
call_2593 = relay.TupleGetItem(func_1282_call(), 0)
uop_2604 = relay.log10(call_2592.astype('float32')) # shape=(14, 7, 10)
uop_2606 = relay.log10(call_2593.astype('float32')) # shape=(14, 7, 10)
output = relay.Tuple([uop_2604,])
output2 = relay.Tuple([uop_2606,])
func_2609 = relay.Function([], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mutated_mod.get_global_var('func_2609')
call_2610 = func_2609_call()
output = call_2610
func_2611 = relay.Function([], output)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_2634 = relay.TupleGetItem(func_938_call(), 0)
call_2635 = relay.TupleGetItem(func_939_call(), 0)
output = relay.Tuple([call_2634,])
output2 = relay.Tuple([call_2635,])
func_2642 = relay.Function([], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
output = func_2642()
func_2643 = relay.Function([], output)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2782 = func_2552_call()
call_2783 = func_2552_call()
output = call_2782
output2 = call_2783
func_2790 = relay.Function([], output)
mod['func_2790'] = func_2790
mod = relay.transform.InferType()(mod)
output = func_2790()
func_2791 = relay.Function([], output)
mutated_mod['func_2791'] = func_2791
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2818 = relay.const([[[-7.474288,-4.553762,5.687517,-5.636951,0.747015],[7.228290,4.172323,-2.801172,3.149174,7.652795],[-6.131005,-7.119003,-0.691352,-1.113970,6.240789],[-9.387944,4.356281,-3.851797,-5.822278,7.241492],[0.763218,7.121621,0.555274,-8.258444,-4.166950],[6.651516,2.019357,2.414072,3.297124,3.408101],[-6.334210,-6.222811,-0.952837,-9.282462,2.906765],[-5.422481,-7.084413,8.508529,-0.174145,-7.431998],[-1.790597,6.004504,7.538216,1.617532,-9.381022],[-2.327846,-5.106855,-5.878464,5.802934,-6.212336],[-5.551348,2.809397,-4.801150,1.837972,-6.977037],[9.351226,2.078694,0.611029,-7.679651,4.412334],[7.558262,2.167160,-5.277969,6.901615,-8.199309],[5.901832,-9.928880,5.517917,9.539443,8.095934],[-4.768207,-6.570032,8.969886,-0.461715,-7.360748]],[[-1.990049,9.841547,-3.770115,6.488972,-4.748718],[0.606049,0.550980,-4.012829,-1.615023,0.378527],[-8.794306,1.916194,0.366976,-8.543351,-0.701286],[4.050904,-9.949145,-3.118669,-2.840294,-6.779967],[9.440959,-5.583482,-3.109471,7.920093,0.863690],[-0.251826,-8.842474,-7.553679,9.337381,2.080017],[-8.390570,-2.503045,-6.243877,7.971818,9.616770],[1.528939,8.336230,6.974633,-3.040534,-8.011906],[0.033966,6.997816,-5.907084,8.303343,-5.627601],[3.760905,3.491193,-6.590438,-1.168209,-9.233964],[1.791623,-9.419657,-6.414958,-6.656233,-1.551306],[-3.727021,-7.274138,6.196396,9.789001,-2.778275],[-5.063302,-1.322848,3.636313,1.865174,-3.210370],[5.405610,7.113073,-6.739856,7.019099,-7.332338],[-2.634267,7.646312,7.652645,1.848207,9.561274]],[[-7.772765,-4.931168,5.694862,6.985939,4.663950],[7.994550,-9.921247,3.211383,-5.566877,2.365092],[-5.449640,5.764613,-6.811969,1.917094,4.075493],[3.648940,-0.530679,9.385351,-4.793545,-4.141257],[-4.839924,-8.152387,-9.730986,-0.014972,1.867473],[8.930176,0.714234,0.371382,0.802596,6.399723],[-3.853012,8.647002,-2.255588,-7.502493,4.612963],[9.720549,-8.735202,-4.095544,0.347458,3.829553],[3.297955,-0.779805,6.796344,-3.919359,-8.002041],[-7.817462,4.340423,3.023997,-6.223981,-3.432358],[-6.975996,2.537456,8.838265,1.818195,-7.723169],[9.361385,-9.024442,-8.858044,-2.723339,-7.234705],[8.177663,3.714638,-4.297430,-2.307661,-8.203359],[3.300783,-4.395778,-1.443257,-9.669622,-0.339225],[-0.447605,-4.229941,-2.196572,6.095159,-5.154070]],[[7.588766,-1.783920,-1.891607,-2.920380,1.573069],[1.409742,3.447234,6.884875,7.891544,-2.529381],[3.108345,-3.806065,6.713609,-6.599257,6.859617],[-5.115499,-5.025899,3.434423,-2.062243,-6.850752],[-0.467582,-2.623003,4.052234,9.446229,4.710525],[2.282973,3.122983,8.222126,-7.973297,4.164172],[-6.540292,-4.066701,-6.185424,4.023725,6.154482],[-0.611824,4.016439,-2.500376,-8.378622,8.792596],[3.243261,-8.746560,-0.739919,7.381745,-4.436323],[-8.668081,-4.841023,9.198442,-1.230278,7.601797],[-2.880374,-3.010093,-0.151536,4.262620,-6.194462],[6.900814,7.572051,-6.791968,3.514475,-6.096622],[-4.581703,-6.295204,5.012533,5.121041,-7.638362],[-1.744172,-1.395558,-1.214433,3.674146,-3.604005],[-4.424795,9.617117,9.870445,-2.403504,8.236004]]], dtype = "float32")#candidate|2818|(4, 15, 5)|const|float32
uop_2819 = relay.rsqrt(const_2818.astype('float32')) # shape=(4, 15, 5)
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_2823 = relay.TupleGetItem(func_1035_call(), 0)
call_2824 = relay.TupleGetItem(func_1036_call(), 0)
uop_2828 = relay.sqrt(uop_2819.astype('float64')) # shape=(4, 15, 5)
bop_2831 = relay.bitwise_xor(uop_2828.astype('uint8'), relay.reshape(const_2818.astype('uint8'), relay.shape_of(uop_2828))) # shape=(4, 15, 5)
output = relay.Tuple([call_2823,bop_2831,])
output2 = relay.Tuple([call_2824,bop_2831,])
func_2843 = relay.Function([], output)
mod['func_2843'] = func_2843
mod = relay.transform.InferType()(mod)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mutated_mod.get_global_var('func_2843')
call_2844 = func_2843_call()
output = call_2844
func_2845 = relay.Function([], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_2848 = func_2200_call()
call_2849 = func_2200_call()
output = call_2848
output2 = call_2849
func_2850 = relay.Function([], output)
mod['func_2850'] = func_2850
mod = relay.transform.InferType()(mod)
output = func_2850()
func_2851 = relay.Function([], output)
mutated_mod['func_2851'] = func_2851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_2882 = relay.TupleGetItem(func_2843_call(), 0)
call_2883 = relay.TupleGetItem(func_2845_call(), 0)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_2884 = func_1808_call()
call_2885 = func_1808_call()
const_2889 = relay.const([0.030047,-4.443063,-6.381754,-1.072539,-9.883796,2.805371,5.380081,7.761077,-2.654269,-3.099742,1.926796,-4.880174,4.201440,-8.081592,5.890244,-8.385967,-1.103604,2.912542,8.696299,-6.522263,-6.335504,-5.676747,-8.627125,7.949196,2.428319,1.418183,-1.047090,-7.309567,3.032979,4.329180,-1.494251,0.453105,-8.579606,-5.228342,-4.216454,1.191691,-8.066322,-5.859004,9.472122,6.925741,-8.491240,-6.414175,2.974607,-9.478425,3.532025,1.542599,2.743189,-2.667077,1.992322,5.798657,8.916313,1.818561,9.502975,-1.265696,7.791103,5.533957,1.213402,-8.564349,-1.861592,1.332245,7.207336,-1.137594,5.862371,-9.002746,7.560255,-7.141308,1.928168,-2.384251,-0.742265,4.848047,-2.146738,7.226216,-4.205484,-0.866967,-1.895367,0.575304,0.770151,-1.802323,-6.987504,4.669782,3.213610,7.153935,9.871006,6.013417,-5.923037,3.835284,0.234820,-2.081727,0.515817,9.248666,-0.170509,9.690083,-3.635541,-3.494025,-1.543362,-6.317199,-7.441415,-8.748907,8.003487,1.645036,4.134080,-3.589982,7.939640,-4.678085,-7.241177,-0.554448,-1.867227,-9.378080,2.647451,-8.192025,-5.215770,2.462031,-2.086407,4.259541,5.610974,6.899073,6.685126,-2.645340,8.107211,7.816927,-0.156783,-8.992632,9.992352,1.670962,-6.122465,9.463995,-2.829120,4.594185,-5.765091,-8.785055,8.956603,-0.567479,2.340112,9.986730,-4.379605,-3.246898,-5.130202,1.132580,2.978386,-5.675049,-8.227438,1.646483,0.260197,2.835062,9.580068,9.327726,-5.844137,8.144182,-7.628394,-5.162324,-6.249596,8.990985,1.268136,-7.031113,4.770285,-0.716420,-7.315389,-3.545778,-5.448688,-2.055504,2.301057,-3.631713,7.628810,-7.496420,-2.740916,-8.678258,2.208997,1.454456,2.758109,-3.049301,7.062446,-6.161453,-1.943244,4.212686,6.767566,-4.469896,7.028102,-7.634768,-2.490818,9.449630,1.893862,6.164272], dtype = "float64")#candidate|2889|(182,)|const|float64
bop_2890 = relay.bitwise_xor(call_2884.astype('uint64'), relay.reshape(const_2889.astype('uint64'), relay.shape_of(call_2884))) # shape=(182,)
bop_2893 = relay.bitwise_xor(call_2885.astype('uint64'), relay.reshape(const_2889.astype('uint64'), relay.shape_of(call_2885))) # shape=(182,)
output = relay.Tuple([call_2882,bop_2890,])
output2 = relay.Tuple([call_2883,bop_2893,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
output = func_2901()
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_2915 = relay.TupleGetItem(func_2843_call(), 1)
call_2916 = relay.TupleGetItem(func_2845_call(), 1)
func_2399_call = mod.get_global_var('func_2399')
func_2401_call = mutated_mod.get_global_var('func_2401')
call_2918 = relay.TupleGetItem(func_2399_call(), 1)
call_2919 = relay.TupleGetItem(func_2401_call(), 1)
uop_2921 = relay.sqrt(call_2918.astype('float32')) # shape=(182,)
uop_2923 = relay.sqrt(call_2919.astype('float32')) # shape=(182,)
output = relay.Tuple([call_2915,uop_2921,])
output2 = relay.Tuple([call_2916,uop_2923,])
func_2925 = relay.Function([], output)
mod['func_2925'] = func_2925
mod = relay.transform.InferType()(mod)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mutated_mod.get_global_var('func_2925')
call_2926 = func_2925_call()
output = call_2926
func_2927 = relay.Function([], output)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_2948 = func_1041_call()
call_2949 = func_1041_call()
output = relay.Tuple([call_2948,])
output2 = relay.Tuple([call_2949,])
func_2954 = relay.Function([], output)
mod['func_2954'] = func_2954
mod = relay.transform.InferType()(mod)
mutated_mod['func_2954'] = func_2954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mutated_mod.get_global_var('func_2954')
call_2955 = func_2954_call()
output = call_2955
func_2956 = relay.Function([], output)
mutated_mod['func_2956'] = func_2956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1596_call = mod.get_global_var('func_1596')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_2957 = relay.TupleGetItem(func_1596_call(), 0)
call_2958 = relay.TupleGetItem(func_1597_call(), 0)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_2977 = func_1338_call()
call_2978 = func_1338_call()
output = relay.Tuple([call_2957,call_2977,])
output2 = relay.Tuple([call_2958,call_2978,])
func_2989 = relay.Function([], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
mutated_mod['func_2989'] = func_2989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2989_call = mutated_mod.get_global_var('func_2989')
call_2990 = func_2989_call()
output = call_2990
func_2991 = relay.Function([], output)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3020 = relay.var("var_3020", dtype = "float64", shape = (16, 8, 5))#candidate|3020|(16, 8, 5)|var|float64
uop_3021 = relay.asinh(var_3020.astype('float64')) # shape=(16, 8, 5)
output = uop_3021
output2 = uop_3021
func_3030 = relay.Function([var_3020,], output)
mod['func_3030'] = func_3030
mod = relay.transform.InferType()(mod)
var_3031 = relay.var("var_3031", dtype = "float64", shape = (16, 8, 5))#candidate|3031|(16, 8, 5)|var|float64
output = func_3030(var_3031)
func_3032 = relay.Function([var_3031], output)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3046 = relay.var("var_3046", dtype = "uint8", shape = (15, 9, 7))#candidate|3046|(15, 9, 7)|var|uint8
var_3047 = relay.var("var_3047", dtype = "uint8", shape = (15, 9, 7))#candidate|3047|(15, 9, 7)|var|uint8
bop_3048 = relay.less_equal(var_3046.astype('bool'), relay.reshape(var_3047.astype('bool'), relay.shape_of(var_3046))) # shape=(15, 9, 7)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_3056 = relay.TupleGetItem(func_2005_call(), 4)
call_3057 = relay.TupleGetItem(func_2007_call(), 4)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_3063 = relay.TupleGetItem(func_2925_call(), 1)
call_3064 = relay.TupleGetItem(func_2927_call(), 1)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_3066 = func_1338_call()
call_3067 = func_1338_call()
output = relay.Tuple([bop_3048,call_3056,call_3063,call_3066,])
output2 = relay.Tuple([bop_3048,call_3057,call_3064,call_3067,])
func_3068 = relay.Function([var_3046,var_3047,], output)
mod['func_3068'] = func_3068
mod = relay.transform.InferType()(mod)
mutated_mod['func_3068'] = func_3068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mutated_mod.get_global_var('func_3068')
var_3070 = relay.var("var_3070", dtype = "uint8", shape = (15, 9, 7))#candidate|3070|(15, 9, 7)|var|uint8
var_3071 = relay.var("var_3071", dtype = "uint8", shape = (15, 9, 7))#candidate|3071|(15, 9, 7)|var|uint8
call_3069 = func_3068_call(var_3070,var_3071,)
output = call_3069
func_3072 = relay.Function([var_3070,var_3071,], output)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_3172 = func_1821_call()
call_3173 = func_1821_call()
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_3183 = relay.TupleGetItem(func_1003_call(), 0)
call_3184 = relay.TupleGetItem(func_1004_call(), 0)
output = relay.Tuple([call_3172,call_3183,])
output2 = relay.Tuple([call_3173,call_3184,])
func_3193 = relay.Function([], output)
mod['func_3193'] = func_3193
mod = relay.transform.InferType()(mod)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3194 = func_3193_call()
output = call_3194
func_3195 = relay.Function([], output)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_3199 = func_1483_call()
call_3200 = func_1483_call()
func_2494_call = mod.get_global_var('func_2494')
func_2498_call = mutated_mod.get_global_var('func_2498')
var_3202 = relay.var("var_3202", dtype = "int8", shape = (3360,))#candidate|3202|(3360,)|var|int8
const_3203 = relay.const([-10,-1,-9,7,-1,-1,8,-5,-10,10,7,1,1,-5,1,-4,-3,10,-10,-4,-7,-1,8,-8,8,10,-5,-1,8,-3,-8,-1,-2,4,9,4,-4,-9,-2,9,-6,7,9,-8,-4,7,8,2,1,3,-6,4,-1,-10,-1,-2,9,10,7,-4,-9,-4,9,8,-4,7,-7,7,5,8,8,5,-9,-3,3,1,8,-10,3,-6,10,-6,6,4,3,-9,3,-10,1,1,3,-5,-7,-10,4,9,1,2,1,1,7,8,-6,-2,-2,-8,-7,7,-9,-6,5,10,3,5,7,9,-6,3,5,-8,2,-3,-10,-5,-7,5,-8,-10,-4,-4,-1,-6,-2,-10,8,-2,-5,-9,5,-5,9,-8,4,8,3,10,9,-2,4,-5,-9,3,4,-10,-8,-3,4,3,-9,5,-7,5,-10,6,-10,-6,-10,4,1,-2,8,5,9,9,1,10,-10,3,-4,4,9,-3,-7,2,-1,-6,-4,-1,8,-10,6,6,-7,-6,9,-2,-9,9,4,-3,-10,1,9,4,2,6,-6,-3,-3,-3,-8,3,2,3,-5,-10,-7,-8,3,-4,8,2,-4,6,-4,2,-3,-9,-8,10,1,10,-1,4,10,10,10,3,-8,3,-7,-4,-1,7,5,7,-9,2,5,5,-6,3,-8,-9,-5,-8,7,-3,5,10,-7,-6,3,-6,7,-4,-6,-6,3,-1,-8,-1,3,7,-3,-9,-5,-7,-4,7,-4,-4,-7,-5,6,9,6,-2,3,6,8,6,-10,-2,-6,8,9,10,-10,6,-2,-3,6,-5,7,-5,-7,-10,4,1,-2,-9,1,-7,-4,-9,10,5,1,7,3,5,-4,7,9,-9,-9,2,-8,10,-3,-8,-3,1,5,4,-3,-6,-3,7,10,-3,-6,8,-3,6,7,1,9,4,1,9,-6,-10,-9,3,7,-10,-8,-7,-5,8,-10,-2,10,-2,3,-4,-8,9,5,9,-5,-7,7,5,8,4,2,-7,-1,3,10,-4,-6,-6,-3,5,3,-3,5,-2,3,8,-1,8,-4,5,-10,2,2,-9,4,4,-3,10,7,8,8,-5,-3,-1,6,10,-7,-4,-2,-3,-6,-6,6,-6,7,-2,3,2,-10,2,-10,-4,5,-5,2,3,-7,-6,4,3,-5,4,4,-4,10,-2,8,-7,-5,-8,-10,-2,2,9,9,5,9,-2,7,7,1,10,-5,-2,1,5,3,-10,5,-8,3,8,5,7,9,-3,-3,-2,2,-9,4,-8,-3,-1,-10,-3,-4,-7,5,3,7,-6,1,-9,10,7,1,-2,-6,3,3,10,-10,-8,-10,1,-9,6,-3,-4,-2,-8,8,7,2,-9,7,4,-6,-2,-5,4,10,-5,-6,5,-10,10,2,10,-7,-10,-10,-2,9,3,-7,-10,-8,9,4,1,-8,1,-8,5,-2,8,3,10,-3,8,1,-6,-4,2,-8,1,-4,7,5,-5,-1,1,-4,6,6,-7,1,-6,10,-3,1,-6,10,6,7,2,-6,-2,6,8,-9,6,2,-6,-2,-1,-7,-9,-10,10,-8,-5,-7,-5,-4,-4,-1,6,-2,4,-3,6,-1,7,-10,9,1,-2,-5,-3,3,-4,8,6,2,4,6,-5,7,-10,-9,6,-5,10,7,-8,3,-3,-4,10,2,3,-8,-6,-10,-3,-5,1,-7,-9,6,-3,3,-9,8,5,3,-7,-6,-5,7,-7,7,2,1,-6,-3,6,-6,3,2,3,5,8,3,10,-3,2,-7,2,8,-4,9,-6,-5,-9,4,6,-4,-1,-10,-6,-9,3,-7,-3,6,-7,-7,2,-10,1,-4,5,1,-2,-8,6,-9,5,-5,-2,-6,-6,1,-7,8,7,4,8,8,8,10,-3,-2,-6,7,-8,6,7,1,-10,-3,8,9,-7,-6,2,9,-7,-6,-10,1,-5,1,8,-10,-10,5,4,-4,10,-6,-7,10,7,-7,8,-6,-6,-8,10,1,3,-8,2,6,3,6,8,-4,-3,-6,8,7,1,-8,-3,1,-9,-3,-4,-2,-2,8,6,8,4,4,6,-8,7,7,7,6,-10,6,9,-10,-6,-2,2,-6,4,8,1,6,-4,-10,3,-6,6,-7,-9,5,-7,2,6,6,9,-9,-2,10,8,-6,5,-5,3,3,1,9,-4,-9,-8,2,3,-8,4,10,6,-2,9,2,-1,5,-3,-10,-5,9,6,-1,-3,-3,-6,1,-2,-3,-2,2,-9,5,-1,-1,6,10,-3,2,-9,-5,1,-7,10,-1,-6,-6,-1,-7,8,1,-9,-7,-3,10,-5,6,-2,-6,-6,7,-1,7,3,-6,-3,4,-9,8,-9,3,5,1,-4,-2,-5,2,-1,10,4,-7,-7,1,-2,-8,-7,-7,10,-2,5,9,-4,-6,2,10,-5,3,8,8,2,2,-6,-4,5,5,1,-9,-4,1,-4,10,-10,3,-8,9,-6,-3,-8,-1,4,-4,-9,-1,2,9,-5,-7,-3,-4,-3,4,1,-4,-4,-3,-2,-5,-2,5,8,-9,-2], dtype = "int8")#candidate|3203|(960,)|const|int8
call_3201 = relay.TupleGetItem(func_2494_call(relay.reshape(var_3202.astype('int8'), [16, 15, 14]), relay.reshape(const_3203.astype('int8'), [16, 15, 4]), ), 2)
call_3204 = relay.TupleGetItem(func_2498_call(relay.reshape(var_3202.astype('int8'), [16, 15, 14]), relay.reshape(const_3203.astype('int8'), [16, 15, 4]), ), 2)
func_3068_call = mod.get_global_var('func_3068')
func_3072_call = mutated_mod.get_global_var('func_3072')
const_3208 = relay.const([[6,8,4,-2,-4,-9,-6,8,-6,-8,-4,1,-8,10,1,-4,9,3,-9,-2,-9,-3,7,-7,-2,10,-5,-2,7,2,1,5,9,5,4,-1,8,10,-5,-8,3,1,-8,2,8,-5,2,-6,9,-1,9,-6,5,-2,-2,-5,8,-6,10,4,-3,-4,-9,8,-4,-1,-10,-1,10,5,-6,8,6,-2,1,4,-5,1,-1,-1,9,-9,8,3,-3,-1,-9,-3,-4,-1,1,3,6,-9,4,-1,4,1,9,-2,-2,-1,6,6,-9,9,4,5,5,-6,-7,-9,6,5,-3,10,-3,-8,7,1,3,-5,9,7,-5,2,-10,5,2,-5,-6,-2,-6,-8,-4,-8,-8,-4,-6,-2,5,-2,-4,3,6,2,-3,-3,-5,-3,-9,-8,5,-3,-4,-1,-8,4,-2,9,-6,-2,-7,9,5,3,-4,-10,-2,9,9,-2,5,-10,-4,-4,1,-1,-10,-10,-4,-8,1,-7,-4,-8,-8,-1,-8,-1,1,-3,1,9,-6,-6,-2,-9,4,-8,6,-3,-8,-9,-5,-9,6,-9,7,8,-6,4,-1,-5,-10,-5,-10,-1,3,7,8,4,-9,3,-10,-9,-7,8,-5,3,5,4,-6,-6,-4,-7,-10,-8,-4,4,2,-2,-8,7,1,-1,-7,4,1,-2,-6,7,10,4,8,9,3,9,10,-7,5,9,-4,-7,6,9,-10,7,-4,5,-9,2,-6,7,8,-8,3,-8,2,-1,-5,-10,9,-5,8,-4,6,3,6,7,2,-10,-3,-4,-2,-5,5,3,3,-6,-10,10,-6,-8,-10,8,-8,-9,-7,-6,-5,-7,6,-6,-10,2,3,-5,-2,3,6,4,-10,-7,-5,5,3,2,-1,-2,5,10,3,-6,8,9,-1,-10,-7,7,9,1,5,5,6,-9,-9,-6,6,-1,3,10,4,-6,-6,-2,6,-1,9,-9,1,-3,-6,-5,4,7,-6,3,9,-1,-4,-2,-6,-3,6,9,9,8,-4,-10,-8,6,-5,2,-8,-1,-5,5,5,-8,2,-10,3,8,2,-4,6,4,8,-5,8,1,8,-7,-3,-8,6,6,10,5,-4,2,-10,3,-2,-6,-4,-6,-10,9,-9,8,7,-5,10,8,-10,3,-9,-7,5,-3,-10,-5,-1,-6,1,6,-10,4,-10,3,5,1,4,-4,3,10,-4,4,9,-6,5,-10,-2,4,-7,3,5,-5,-1,-8,6,-6,4,8,1,6,7,-1,-2,-2,-2,-2,-6,-3,-6,9,-10,-4,6,-8,7,5,1,4,10,4,-10,10,3,-3,6,-3,-9,-9,-1,6,-2,-6,6,8,-8,2,7,4,-5,9,10,-6,-10,-8,1,-3,-4,7,10,7,-6,-6,9,2,-8,5,-6,-1,-7,9,10,2,10,-3,5,-8,9,3,-5,-3,-10,3,1,-4,10,6,-5,5,8,-8,7,3,2,-3,-4,10,-7,2,6,4,-9,-9,1,-2,9,3,9,-2,-5,-6,3,5,-10,8,2,3,4,-6,5,5,9,1,-5,9,-10,-9,2,5,-2,9,4,-5,-5,5,-10,-3,8,9,9,-3,2,5,7,-7,2,-5,7,7,1,-1,10,-2,-9,2,-6,8,7,5,3,5,7,4,-9,5,10,-1,-1,9,-3,-8,3,10,-1,-6,-4,-4,10,-4,-6,9,6,-8,-6,-6,7,-9,-2,-4,3,-9,-10,7,-8,1,3,-4,3,-5,-9,7,5,-8,-4,-9,-2,-3,1,6,-2,-5,-8,-5,1,9,2,-7,9,-3,-8,9,3,6,-1,-3,-9,1,7,8,5,9,-3,-4,2,7,-2,-1,8,6,8,-6,10,-4,-1,-7,2,-6,10,7,-7,-1,-3,-3,8,2,-1,-4,-6,-7,1,-5,-10,7,-1,2,-1,9,7,-4,-1,2,-7,-2,5,9,-3,-10,-5,5,-3,4,-1,-9,2,5,2,-7,4,-9,7,6,2,3,2,3,-6,-1,-9,5,-4,7,8,4,-1,2,10,-10,-3,-2,-2,10,2,-4,2,2,-10,1,-3,1,-7,-2,10,-3,-6,7,8,3,-9,-10,-6,6,-1,5,3,8,10,8,3,-2,6,6,-9,5,5,10,8,-9,-4,-5,-10,-6,4,-10,-7,5,-4,-9,-9,10,10,7,-5,-8,-1,-5,-5,-3,4,5,8,7,2,-6,10,7,5,9,8,-10,-2,10,-5,-8,6,2,-5,7,-5,-8,-8,-5,7,-6,3,4,10,-5,-8,-8,8,8,9,1,-8,-8,-6,-1,7,9,-3,9,8,-10,9,-1,-8,-10,-6,-10,2,3,1,10,-1,-1,-4,8,4,-10,-4,10,2,8,3,-4,-7,4,3,7,-6,6,7,-4,2,4,7,-7,-5,8,-6,-4,1,3,3,8,8,-9,-8,8,9,5,7,4,10,10,4,8,-4,-1,-1,-6,3,-6,10,-2,-7,2,2,5,-8,7,-1,-9,-8,-1,1,1,-5]], dtype = "uint8")#candidate|3208|(1, 945)|const|uint8
call_3207 = relay.TupleGetItem(func_3068_call(relay.reshape(const_3208.astype('uint8'), [15, 9, 7]), relay.reshape(const_3208.astype('uint8'), [15, 9, 7]), ), 1)
call_3209 = relay.TupleGetItem(func_3072_call(relay.reshape(const_3208.astype('uint8'), [15, 9, 7]), relay.reshape(const_3208.astype('uint8'), [15, 9, 7]), ), 1)
output = relay.Tuple([call_3199,call_3201,var_3202,const_3203,call_3207,const_3208,])
output2 = relay.Tuple([call_3200,call_3204,var_3202,const_3203,call_3209,const_3208,])
func_3213 = relay.Function([var_3202,], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3214 = relay.var("var_3214", dtype = "int8", shape = (3360,))#candidate|3214|(3360,)|var|int8
func_3213_call = mutated_mod.get_global_var('func_3213')
call_3215 = func_3213_call(var_3214)
output = call_3215
func_3216 = relay.Function([var_3214], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_3311 = relay.TupleGetItem(func_1157_call(), 1)
call_3312 = relay.TupleGetItem(func_1159_call(), 1)
output = call_3311
output2 = call_3312
func_3322 = relay.Function([], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3323 = func_3322_call()
output = call_3323
func_3324 = relay.Function([], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3334 = func_2552_call()
call_3335 = func_2552_call()
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_3361 = relay.TupleGetItem(func_1003_call(), 0)
call_3362 = relay.TupleGetItem(func_1004_call(), 0)
uop_3381 = relay.cosh(call_3334.astype('float32')) # shape=(182,)
uop_3383 = relay.cosh(call_3335.astype('float32')) # shape=(182,)
func_1717_call = mod.get_global_var('func_1717')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_3417 = relay.TupleGetItem(func_1717_call(), 1)
call_3418 = relay.TupleGetItem(func_1718_call(), 1)
output = relay.Tuple([call_3361,uop_3381,call_3417,])
output2 = relay.Tuple([call_3362,uop_3383,call_3418,])
func_3434 = relay.Function([], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
mutated_mod['func_3434'] = func_3434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mutated_mod.get_global_var('func_3434')
call_3435 = func_3434_call()
output = call_3435
func_3436 = relay.Function([], output)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3437 = relay.var("var_3437", dtype = "float32", shape = ())#candidate|3437|()|var|float32
var_3438 = relay.var("var_3438", dtype = "float32", shape = (8, 2, 11))#candidate|3438|(8, 2, 11)|var|float32
bop_3439 = relay.divide(var_3437.astype('float32'), var_3438.astype('float32')) # shape=(8, 2, 11)
output = bop_3439
output2 = bop_3439
func_3449 = relay.Function([var_3437,var_3438,], output)
mod['func_3449'] = func_3449
mod = relay.transform.InferType()(mod)
var_3450 = relay.var("var_3450", dtype = "float32", shape = ())#candidate|3450|()|var|float32
var_3451 = relay.var("var_3451", dtype = "float32", shape = (8, 2, 11))#candidate|3451|(8, 2, 11)|var|float32
output = func_3449(var_3450,var_3451,)
func_3452 = relay.Function([var_3450,var_3451,], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3466 = relay.constdtype = "float64")#candidate|3466|(9, 16, 16)|const|float64
uop_3467 = relay.sigmoid(const_3466.astype('float64')) # shape=(9, 16, 16)
var_3473 = relay.var("var_3473", dtype = "float64", shape = (9, 16, 16))#candidate|3473|(9, 16, 16)|var|float64
bop_3474 = relay.right_shift(uop_3467.astype('uint32'), relay.reshape(var_3473.astype('uint32'), relay.shape_of(uop_3467))) # shape=(9, 16, 16)
output = bop_3474
output2 = bop_3474
func_3477 = relay.Function([var_3473,], output)
mod['func_3477'] = func_3477
mod = relay.transform.InferType()(mod)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3478 = relay.var("var_3478", dtype = "float64", shape = (9, 16, 16))#candidate|3478|(9, 16, 16)|var|float64
func_3477_call = mutated_mod.get_global_var('func_3477')
call_3479 = func_3477_call(var_3478)
output = call_3479
func_3480 = relay.Function([var_3478], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_3498 = relay.TupleGetItem(func_2901_call(), 0)
call_3499 = relay.TupleGetItem(func_2902_call(), 0)
const_3505 = relay.const([[[-8,-7,4,3,1,10,10,-5,1,10],[-1,-4,7,5,7,-9,8,4,-3,-3],[10,6,-7,-2,-2,8,1,4,-2,-10],[-2,5,-9,2,-7,-8,-8,6,-7,6],[3,3,-7,-1,-9,-9,-4,-10,5,-4],[-7,-1,9,2,8,-7,3,-6,-8,-9],[-8,7,5,4,9,4,2,-1,-5,-9]],[[1,5,-8,4,5,-3,4,-6,7,-8],[-8,10,-8,-3,6,-5,9,-10,-8,-3],[2,10,5,-4,6,7,-4,3,2,4],[-7,-6,6,3,2,1,-1,-9,-6,9],[7,-3,-6,5,-2,5,-8,8,-7,-10],[-7,5,1,-6,-9,7,2,-6,-8,-6],[10,4,2,-1,-2,-2,-1,9,-10,-9]],[[10,2,-7,8,-1,-8,6,8,3,-1],[-2,6,-9,-5,9,-8,9,-1,-10,4],[5,-4,-3,1,6,2,6,-1,-2,3],[-2,10,-1,-10,2,-4,-5,8,-5,-5],[-2,8,3,-2,-8,8,-6,-1,-9,-9],[4,-6,6,-6,-4,3,-6,-3,-10,5],[1,-8,-2,-5,-10,2,10,1,-3,-6]],[[-8,2,-9,4,-9,9,-4,7,6,7],[-4,9,8,-9,-9,-7,-3,-2,3,4],[-8,-9,10,8,-6,3,5,-6,-2,-5],[10,-9,-2,-5,-8,6,4,8,-1,-1],[3,-1,-3,-3,-1,-7,4,-4,-8,1],[10,4,3,7,10,5,9,4,-2,-9],[7,2,4,8,-4,8,6,-5,5,7]],[[9,1,-5,-2,-3,-7,-6,2,6,-2],[10,-4,3,9,3,-3,5,10,10,6],[2,-4,4,-10,7,-3,-1,7,-8,2],[-10,4,1,-7,4,2,9,-4,-3,5],[8,9,5,-5,-2,-4,4,-10,-2,5],[10,-1,5,-2,-2,10,-5,1,-7,-4],[-3,-1,-6,1,-8,5,-6,-5,-4,1]],[[3,7,-10,-9,5,6,-2,3,10,8],[-2,5,9,-9,8,2,1,9,-8,-8],[2,10,-3,-1,-7,-10,-2,-7,7,-6],[5,-6,9,-10,6,9,2,-1,2,-7],[-1,-10,-1,5,-2,-3,-1,5,-6,9],[5,-9,9,3,10,-2,6,-5,8,7],[5,1,8,-7,3,6,4,-4,-3,-4]],[[-6,5,8,-10,-2,-8,-8,-4,-5,3],[-5,-5,-2,1,3,-10,4,10,5,-10],[-1,-5,-9,7,8,-3,7,-3,4,-6],[-3,-7,-2,-9,-1,6,-7,-8,10,2],[3,2,-1,3,-2,6,5,-10,-10,-4],[8,-2,-10,3,6,-7,-1,3,5,1],[2,3,-9,-4,2,2,7,6,4,9]],[[-7,1,7,-1,-9,-2,-8,-10,-7,-9],[-4,10,-7,-1,10,-1,8,4,-9,2],[5,-10,-8,-1,-7,-8,3,4,-8,1],[7,-2,7,2,9,3,-7,-9,3,4],[2,1,-1,5,2,-7,9,3,5,9],[1,-10,-5,5,-2,-8,-2,2,-5,-5],[5,5,-1,-10,-8,-2,1,7,-2,-3]],[[-5,1,-1,-3,9,3,-9,-10,9,-5],[-8,-5,-9,-6,9,7,10,1,8,8],[-1,-5,-9,9,4,-8,2,-3,8,-4],[-9,-2,9,-10,9,-8,9,1,8,-10],[7,-5,1,-2,7,9,8,-7,-5,4],[7,4,-5,5,-8,-6,-3,6,10,7],[5,-7,5,10,1,4,7,-3,7,-8]],[[5,2,6,3,5,7,-6,-2,6,-1],[-5,-8,-6,-5,-1,8,6,3,7,1],[-6,1,-1,-2,-5,8,9,2,-7,10],[9,-1,7,10,9,-7,8,-6,-3,7],[-1,-9,9,8,8,3,8,-4,-9,9],[4,5,-6,-10,-9,-8,-2,-3,-8,-6],[-10,4,4,-3,2,2,-9,-7,-10,-5]],[[-6,9,10,8,6,-4,2,4,-8,8],[2,6,-9,-8,4,5,-8,5,-8,-8],[6,1,-2,3,-6,9,-2,-9,10,9],[-3,-1,1,-1,-10,5,2,3,3,-3],[-8,6,7,-3,3,10,-6,-4,-8,6],[-5,3,7,1,-3,-10,9,3,9,5],[-7,7,6,8,8,2,-7,9,3,7]],[[-6,-7,2,1,5,5,-8,5,4,10],[9,5,10,-3,8,7,6,-7,5,2],[-3,-3,-9,-7,-2,-7,2,1,10,3],[2,9,7,8,5,1,7,1,2,9],[6,7,9,-7,9,-6,3,1,-5,-9],[9,8,-6,9,6,4,-5,-9,-8,-5],[10,10,-1,1,-1,6,-4,3,-3,10]],[[2,3,-4,4,-1,-8,2,-6,10,9],[-10,1,-9,-8,7,-4,-9,-8,9,4],[3,-3,-10,10,-8,3,-5,-4,1,9],[-9,8,-7,-2,10,-8,-7,-8,2,9],[8,-8,8,-7,5,8,-8,1,-3,-2],[8,-6,3,-2,-3,-6,6,-3,-7,5],[8,-5,8,-2,8,3,-5,1,-2,-4]],[[-5,-7,-4,5,-3,-3,-2,7,-4,-2],[-2,10,-6,7,3,5,4,9,2,-1],[-4,6,-3,-7,-10,1,6,9,-2,1],[10,1,10,1,-4,7,-7,6,-5,-8],[4,9,1,-3,6,6,2,9,-9,-3],[1,5,-2,7,-3,-4,-6,-6,-3,-10],[5,-5,7,-10,-4,-1,1,-2,-6,10]]], dtype = "uint64")#candidate|3505|(14, 7, 10)|const|uint64
bop_3506 = relay.logical_or(call_3498.astype('bool'), relay.reshape(const_3505.astype('bool'), relay.shape_of(call_3498))) # shape=(14, 7, 10)
bop_3509 = relay.logical_or(call_3499.astype('bool'), relay.reshape(const_3505.astype('bool'), relay.shape_of(call_3499))) # shape=(14, 7, 10)
func_1596_call = mod.get_global_var('func_1596')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_3511 = relay.TupleGetItem(func_1596_call(), 0)
call_3512 = relay.TupleGetItem(func_1597_call(), 0)
output = relay.Tuple([bop_3506,call_3511,])
output2 = relay.Tuple([bop_3509,call_3512,])
func_3516 = relay.Function([], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
output = func_3516()
func_3517 = relay.Function([], output)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1374_call = mod.get_global_var('func_1374')
func_1376_call = mutated_mod.get_global_var('func_1376')
call_3528 = relay.TupleGetItem(func_1374_call(), 0)
call_3529 = relay.TupleGetItem(func_1376_call(), 0)
uop_3534 = relay.atan(call_3528.astype('float64')) # shape=(14, 7, 10)
uop_3536 = relay.atan(call_3529.astype('float64')) # shape=(14, 7, 10)
output = relay.Tuple([uop_3534,])
output2 = relay.Tuple([uop_3536,])
func_3538 = relay.Function([], output)
mod['func_3538'] = func_3538
mod = relay.transform.InferType()(mod)
mutated_mod['func_3538'] = func_3538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mutated_mod.get_global_var('func_3538')
call_3539 = func_3538_call()
output = call_3539
func_3540 = relay.Function([], output)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_3551 = relay.TupleGetItem(func_1415_call(), 2)
call_3552 = relay.TupleGetItem(func_1416_call(), 2)
var_3553 = relay.var("var_3553", dtype = "uint64", shape = (14, 7, 10))#candidate|3553|(14, 7, 10)|var|uint64
bop_3554 = relay.power(call_3551.astype('float32'), relay.reshape(var_3553.astype('float32'), relay.shape_of(call_3551))) # shape=(14, 7, 10)
bop_3557 = relay.power(call_3552.astype('float32'), relay.reshape(var_3553.astype('float32'), relay.shape_of(call_3552))) # shape=(14, 7, 10)
output = relay.Tuple([bop_3554,])
output2 = relay.Tuple([bop_3557,])
func_3568 = relay.Function([var_3553,], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3569 = relay.var("var_3569", dtype = "uint64", shape = (14, 7, 10))#candidate|3569|(14, 7, 10)|var|uint64
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3570 = func_3568_call(var_3569)
output = call_3570
func_3571 = relay.Function([var_3569], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_3604 = relay.TupleGetItem(func_1035_call(), 0)
call_3605 = relay.TupleGetItem(func_1036_call(), 0)
uop_3625 = relay.asinh(call_3604.astype('float64')) # shape=(14, 7, 10)
uop_3627 = relay.asinh(call_3605.astype('float64')) # shape=(14, 7, 10)
func_3068_call = mod.get_global_var('func_3068')
func_3072_call = mutated_mod.get_global_var('func_3072')
var_3638 = relay.var("var_3638", dtype = "uint8", shape = (945,))#candidate|3638|(945,)|var|uint8
call_3637 = relay.TupleGetItem(func_3068_call(relay.reshape(var_3638.astype('uint8'), [15, 9, 7]), relay.reshape(var_3638.astype('uint8'), [15, 9, 7]), ), 1)
call_3639 = relay.TupleGetItem(func_3072_call(relay.reshape(var_3638.astype('uint8'), [15, 9, 7]), relay.reshape(var_3638.astype('uint8'), [15, 9, 7]), ), 1)
output = relay.Tuple([uop_3625,call_3637,var_3638,])
output2 = relay.Tuple([uop_3627,call_3639,var_3638,])
func_3651 = relay.Function([var_3638,], output)
mod['func_3651'] = func_3651
mod = relay.transform.InferType()(mod)
var_3652 = relay.var("var_3652", dtype = "uint8", shape = (945,))#candidate|3652|(945,)|var|uint8
output = func_3651(var_3652)
func_3653 = relay.Function([var_3652], output)
mutated_mod['func_3653'] = func_3653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_3678 = relay.TupleGetItem(func_1415_call(), 2)
call_3679 = relay.TupleGetItem(func_1416_call(), 2)
output = call_3678
output2 = call_3679
func_3687 = relay.Function([], output)
mod['func_3687'] = func_3687
mod = relay.transform.InferType()(mod)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3688 = func_3687_call()
output = call_3688
func_3689 = relay.Function([], output)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3754 = relay.TupleGetItem(func_2843_call(), 1)
call_3755 = relay.TupleGetItem(func_2845_call(), 1)
output = call_3754
output2 = call_3755
func_3758 = relay.Function([], output)
mod['func_3758'] = func_3758
mod = relay.transform.InferType()(mod)
output = func_3758()
func_3759 = relay.Function([], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_3786 = relay.TupleGetItem(func_1035_call(), 2)
call_3787 = relay.TupleGetItem(func_1036_call(), 2)
func_1596_call = mod.get_global_var('func_1596')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_3791 = relay.TupleGetItem(func_1596_call(), 0)
call_3792 = relay.TupleGetItem(func_1597_call(), 0)
output = relay.Tuple([call_3786,call_3791,])
output2 = relay.Tuple([call_3787,call_3792,])
func_3798 = relay.Function([], output)
mod['func_3798'] = func_3798
mod = relay.transform.InferType()(mod)
output = func_3798()
func_3799 = relay.Function([], output)
mutated_mod['func_3799'] = func_3799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3856 = relay.var("var_3856", dtype = "uint64", shape = (16, 14, 6))#candidate|3856|(16, 14, 6)|var|uint64
var_3857 = relay.var("var_3857", dtype = "uint64", shape = (16, 14, 6))#candidate|3857|(16, 14, 6)|var|uint64
bop_3858 = relay.left_shift(var_3856.astype('uint64'), relay.reshape(var_3857.astype('uint64'), relay.shape_of(var_3856))) # shape=(16, 14, 6)
output = bop_3858
output2 = bop_3858
func_3864 = relay.Function([var_3856,var_3857,], output)
mod['func_3864'] = func_3864
mod = relay.transform.InferType()(mod)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mutated_mod.get_global_var('func_3864')
var_3866 = relay.var("var_3866", dtype = "uint64", shape = (16, 14, 6))#candidate|3866|(16, 14, 6)|var|uint64
var_3867 = relay.var("var_3867", dtype = "uint64", shape = (16, 14, 6))#candidate|3867|(16, 14, 6)|var|uint64
call_3865 = func_3864_call(var_3866,var_3867,)
output = call_3865
func_3868 = relay.Function([var_3866,var_3867,], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1321_call = mod.get_global_var('func_1321')
func_1323_call = mutated_mod.get_global_var('func_1323')
call_3973 = relay.TupleGetItem(func_1321_call(), 0)
call_3974 = relay.TupleGetItem(func_1323_call(), 0)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_3975 = func_1483_call()
call_3976 = func_1483_call()
output = relay.Tuple([call_3973,call_3975,])
output2 = relay.Tuple([call_3974,call_3976,])
func_3983 = relay.Function([], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
output = func_3983()
func_3984 = relay.Function([], output)
mutated_mod['func_3984'] = func_3984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1717_call = mod.get_global_var('func_1717')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_4033 = relay.TupleGetItem(func_1717_call(), 2)
call_4034 = relay.TupleGetItem(func_1718_call(), 2)
output = relay.Tuple([call_4033,])
output2 = relay.Tuple([call_4034,])
func_4040 = relay.Function([], output)
mod['func_4040'] = func_4040
mod = relay.transform.InferType()(mod)
output = func_4040()
func_4041 = relay.Function([], output)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_4052 = func_1338_call()
call_4053 = func_1338_call()
func_492_call = mod.get_global_var('func_492')
func_495_call = mutated_mod.get_global_var('func_495')
call_4057 = func_492_call(relay.reshape(call_4052.astype('float32'), [1, 13, 14]))
call_4058 = func_492_call(relay.reshape(call_4052.astype('float32'), [1, 13, 14]))
bop_4064 = relay.subtract(call_4057.astype('int64'), relay.reshape(call_4052.astype('int64'), relay.shape_of(call_4057))) # shape=(1, 13, 14)
bop_4067 = relay.subtract(call_4058.astype('int64'), relay.reshape(call_4053.astype('int64'), relay.shape_of(call_4058))) # shape=(1, 13, 14)
var_4079 = relay.var("var_4079", dtype = "float32", shape = (11, 13, 14))#candidate|4079|(11, 13, 14)|var|float32
bop_4080 = relay.bitwise_xor(call_4057.astype('uint64'), var_4079.astype('uint64')) # shape=(11, 13, 14)
bop_4083 = relay.bitwise_xor(call_4058.astype('uint64'), var_4079.astype('uint64')) # shape=(11, 13, 14)
func_2399_call = mod.get_global_var('func_2399')
func_2401_call = mutated_mod.get_global_var('func_2401')
call_4098 = relay.TupleGetItem(func_2399_call(), 0)
call_4099 = relay.TupleGetItem(func_2401_call(), 0)
uop_4103 = relay.sin(call_4057.astype('float32')) # shape=(1, 13, 14)
uop_4105 = relay.sin(call_4058.astype('float32')) # shape=(1, 13, 14)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_4112 = relay.TupleGetItem(func_1157_call(), 1)
call_4113 = relay.TupleGetItem(func_1159_call(), 1)
output = relay.Tuple([bop_4064,bop_4080,call_4098,uop_4103,call_4112,])
output2 = relay.Tuple([bop_4067,bop_4083,call_4099,uop_4105,call_4113,])
func_4124 = relay.Function([var_4079,], output)
mod['func_4124'] = func_4124
mod = relay.transform.InferType()(mod)
mutated_mod['func_4124'] = func_4124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4125 = relay.var("var_4125", dtype = "float32", shape = (11, 13, 14))#candidate|4125|(11, 13, 14)|var|float32
func_4124_call = mutated_mod.get_global_var('func_4124')
call_4126 = func_4124_call(var_4125)
output = call_4126
func_4127 = relay.Function([var_4125], output)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4182 = relay.var("var_4182", dtype = "float64", shape = ())#candidate|4182|()|var|float64
const_4183 = relay.const([[[7.105339,-0.755711,-0.903189,-4.581464,2.014086,-2.295968,3.560568,9.191669,2.700616,7.400064,5.400953,-7.486121,-1.328780,-4.181689,-2.204955],[-7.782248,3.025619,-8.059887,-0.166077,-4.546308,4.631568,-5.457319,7.607769,-8.950080,-9.706461,9.602763,4.041045,0.888250,-9.375004,8.968986]],[[1.964327,-4.481583,5.953088,4.064667,-0.713594,3.908715,-5.885255,-1.554879,1.270907,0.149523,0.456816,2.968647,-7.289123,-6.949203,-3.358324],[4.248870,2.316203,7.332810,-9.873972,-8.381097,-9.528708,7.886992,9.970220,0.209734,-6.940543,1.557702,7.885616,-6.856088,8.084223,-9.233983]],[[-1.461451,3.355282,-6.717427,-7.551117,8.559780,5.941199,-7.940554,0.187610,-4.642135,4.930895,4.601189,-3.844051,7.591150,-4.295635,0.266992],[1.985413,-3.014455,-3.450209,7.703033,-9.585095,3.089056,-6.801501,-2.385204,-5.516964,-7.917527,2.140193,-5.706711,-1.763691,-6.915461,-9.429198]],[[-9.930698,6.317352,-1.980572,1.746812,5.977287,1.856832,8.345486,-7.124945,6.059228,-0.090814,-2.783139,0.475269,-7.499781,4.532927,-6.782517],[-1.170761,0.052347,2.420854,2.845487,1.701180,-6.441380,-2.186178,-0.292044,9.700525,8.183491,-1.313118,6.251566,-3.414934,3.890608,-6.395479]],[[5.851701,-7.769639,9.786398,-5.842695,-0.385560,0.696771,-3.962339,-1.999510,-8.052189,-8.898760,-2.471143,-1.101370,-4.877644,6.532035,-4.657930],[0.716715,-7.328115,-9.655451,-9.820266,7.763602,-3.415395,4.517129,-3.591340,5.245606,-0.687970,-6.698672,-7.708830,-4.190546,3.805422,3.769026]],[[-1.943184,4.484586,-4.630525,-7.368591,-6.470973,-2.954040,-9.047693,-7.423603,0.151532,0.077074,1.208277,-7.827212,-6.410783,7.501232,-6.928610],[1.719962,2.003117,-9.041711,-4.781340,-7.914494,-9.727600,0.464416,1.410580,0.060318,-2.041251,-2.586982,-9.676446,8.790727,4.638617,-1.279368]],[[5.765354,-2.631876,-8.423286,2.581331,7.048969,1.443975,-7.995167,-8.124959,-4.105771,-5.882989,4.323866,7.946429,-5.509989,-9.136466,6.160646],[9.055401,0.330018,8.728660,-7.034429,-6.164059,5.521999,8.193518,3.337240,6.188177,7.877076,-3.714493,-2.006621,-9.611547,-4.096782,-3.202071]]], dtype = "float64")#candidate|4183|(7, 2, 15)|const|float64
bop_4184 = relay.mod(var_4182.astype('float64'), const_4183.astype('float64')) # shape=(7, 2, 15)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
const_4188 = relay.const([-1,-2,-3,-8,-9,3,-3,1,3,9,-8,5,5,-7,1,8,8,4,-2,-2,-9,3,10,-5,5,-4,-8,8,1,6,1,3,-5,-3,-9,-10,-10,2,6,-2,3,5,-7,3,-10,9,5,3,8,9,-10,8,1,-1,-9,-9,1,4,-8,-5,9,2,-7,-6,-10,4,3,2,-6,-2,-8,-7,-6,6,-1,-6,6,-4,2,9,4,-4,7,-2,8,8,-6,4,8,-8,2,9,2,2,5,8,5,8,-7,-5,-4,-3,-7,-2,7,-4,-6,9,-6,1,-2,-1,-10,-9,1,4,-6,-8,3,8,2,1,6,-5,2,-4,-3,-9,5,-2,1,-4,2,-8,3,-5,9,-4,-7,-7,-5,1,-7,-2,8,1,-9,-4,10,-4,-9,2,6,-3,5,3,-1,9,-7,-2,-7,4,-1,-7,-4,4,1,-3,1,1,6,-9,8,-8,-1,2,5,-5,6,-7,-6,-6,-8,5,5,-7,-2,1,-6,-7,-9,-8,4,-1,7,3,-1,-10,7,10,3,-2,-6,7,10,-1,-4,3,10,10,-4,-3,-3,-3,10,10,-1,-10,-5,-8,-2,4,-6,4,3,-7,9,1,3,-2,-7,6,-5,6,-3,5,-5,-3,-7,1,3,6,-6,-5,1,1,10,-10,4,-6,-2,4,9,-10,-6,-6,-9,-10,9,3,3,-10,1,-9,-7,4,6,-1,-7,1,2,-2,-10,-5,10,-9,-1,-7,10,-7,-2,10,-1,5,10,1,5,-4,-8,4,-6,-10,-3,-9,-6,3,9,6,-2,8,-8,5,-2,8,5,-7,-6,-8,-7,-5,-7,-9,-10,6,7,-4,-5,-8,-8,-9,10,-6,5,7,-2,5,9,-8,2,-10,10,-5,3,-3,2,3,-10,-10,4,-8,-10,-8,8,9,-9,-8,3,5,-9,-6,-10,4,-10,6,-2,10,9,4,-3,-7,1,1,-1,9,-7,-10,8,9,-6,1,9,-3,-1,-6,-9,-7,10,-4,6,-8,10,10,-2,5,-5,-8,-10,-3,-8,-3,1,7,8,2,-7,-7,-8,5,7,8,8,6,-6,7,7,-1,2,2,9,3,2,-3,8,-2,9,7,-5,7,4,-7,6,1,-8,-7,5,-3,2,1,5,5,3,-3,-8,2,-4,3,9,-9,7,3,6,2,1,7,5,2,-7,6,7,7,9,3,-6,-4,-10,6,3,5,-1,2,8,6,10,3,10,-9,10,6,8,-10,8,-4,5,-5,-4,4,10,7,2,7,10,2,2,7,-9,-6,-4,-8,-2,5,1,-7,-7,-2,6,2,5,-9,3,7,-2,9,-3,-5,1,10,7,-2,4,5,3,-8,-1,-7,3,-6,-7,3,1,7,-7,-3,-6,3,9,2,7,-2,8,-3,-1,8,-6,-10,-8,-1,5,9,1,3,-10,-3,6,-7,3,7,-1,-4,5,-5,2,-8,-2,-8,1,-4,-8,-9,-10,-1,6,-9,-3,5,-8,1,-8,6,-7,4,6,10,3,-10,-6,8,-9,3,3,-1,8,-10,2,8,-2,9,8,-2,1,-6,3,2,-2,-5,1,-7,-10,7,4,-3,-8,4,4,-1,-10,-1,-2,4,-8,-10,-4,9,-3,-6,-6,3,1,-1,5,-9,8,7,-5,-3,-3,3,9,3,-2,7,8,-1,-9,-6,-4,-9,-9,4,1,-8,-10,2,-4,-1,4,2,10,-4,8,3,-7,6,-3,1,-10,8,9,-1,-5,-9,10,2,7,-1,6,-6,-10,-10,-7,-7,-1,6,7,4,10,10,7,2,-7,-6,8,-7,-8,-1,1,9,5,3,3,-5,-3,4,6,-1,-8,-8,-2,-5,4,-5,-4,-7,2,-2,-9,9,-1,-1,7,-1,-10,-1,6,3,2,6,-2,6,3,10,-4,-4,-2,-3,9,-5,-5,-1,4,2,2,1,-1,2,4,5,-1,-4,-6,-5,3,3,-8,-10,10,6,9,8,4,-3,-1,8,-9,-8,-1,9,-3,-1,-7,-1,2,1,-5,-1,-8,-9,5,5,-2,-9,6,-5,2,-7,-7,-6,-6,-8,5,-9,-6,-5,6,6,-3,-10,-5,-5,3,6,2,6,-10,-10,8,1,8,6,6,-5,-9,7,2,-10,5,4,1,-7,6,5,7,-9,-2,2,-7,6,-1,-1,-6,-9,-9,2,3,-1,9,5,4,2,7,5,-10,-1,5,-6,-2,-3,8,-3,5,1,1,-1,-10,-2,-8,2,-7,10,4,4,3,-1,5,5,9,5,2,5,-8,8,4,-3,-4,7,-3,5,8,-8,-1,4,-8,10,-2,3,-3,-5,2,10,-3,5,-7,1,-8,10,-1,-1,-1,1,5,-5,-7,-5,-8,-5,1,-6,-2,-6,5,2,-10,5,4,-9,7,7,-4,-3,9,-3,9,1,-8,4,4,-9,10,10,-7,-3,10,-10,-4,7,2,6,-3,7,-5,-5,8,7,-8,-2,-3,3,6,-10,-8,-6,8,4,-2,-3,1,-7,-1,-6,1,-6,-2,-10,2,-9,-6,1,-10,5,5,8,-5,-6,1,-5,-10,7,-10,8,-6,2,-3,-7,-7,4,10,1,-9,4,-9,-4], dtype = "uint64")#candidate|4188|(980,)|const|uint64
call_4187 = relay.TupleGetItem(func_1253_call(relay.reshape(const_4188.astype('uint64'), [14, 7, 10])), 0)
call_4189 = relay.TupleGetItem(func_1255_call(relay.reshape(const_4188.astype('uint64'), [14, 7, 10])), 0)
bop_4195 = relay.logical_xor(call_4187.astype('uint16'), var_4182.astype('uint16')) # shape=(14, 7, 10)
bop_4198 = relay.logical_xor(call_4189.astype('uint16'), var_4182.astype('uint16')) # shape=(14, 7, 10)
output = relay.Tuple([bop_4184,const_4188,bop_4195,])
output2 = relay.Tuple([bop_4184,const_4188,bop_4198,])
func_4199 = relay.Function([var_4182,], output)
mod['func_4199'] = func_4199
mod = relay.transform.InferType()(mod)
mutated_mod['func_4199'] = func_4199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4200 = relay.var("var_4200", dtype = "float64", shape = ())#candidate|4200|()|var|float64
func_4199_call = mutated_mod.get_global_var('func_4199')
call_4201 = func_4199_call(var_4200)
output = call_4201
func_4202 = relay.Function([var_4200], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2362_call = mod.get_global_var('func_2362')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_4207 = func_2362_call()
call_4208 = func_2362_call()
output = call_4207
output2 = call_4208
func_4209 = relay.Function([], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mutated_mod.get_global_var('func_4209')
call_4210 = func_4209_call()
output = call_4210
func_4211 = relay.Function([], output)
mutated_mod['func_4211'] = func_4211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4248 = relay.TupleGetItem(func_2609_call(), 0)
call_4249 = relay.TupleGetItem(func_2611_call(), 0)
output = call_4248
output2 = call_4249
func_4251 = relay.Function([], output)
mod['func_4251'] = func_4251
mod = relay.transform.InferType()(mod)
output = func_4251()
func_4252 = relay.Function([], output)
mutated_mod['func_4252'] = func_4252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_4299 = func_1483_call()
call_4300 = func_1483_call()
output = relay.Tuple([call_4299,])
output2 = relay.Tuple([call_4300,])
func_4304 = relay.Function([], output)
mod['func_4304'] = func_4304
mod = relay.transform.InferType()(mod)
output = func_4304()
func_4305 = relay.Function([], output)
mutated_mod['func_4305'] = func_4305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2399_call = mod.get_global_var('func_2399')
func_2401_call = mutated_mod.get_global_var('func_2401')
call_4324 = relay.TupleGetItem(func_2399_call(), 1)
call_4325 = relay.TupleGetItem(func_2401_call(), 1)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
const_4327 = relay.const(2.339487, dtype = "float32")#candidate|4327|()|const|float32
var_4328 = relay.var("var_4328", dtype = "float32", shape = (176,))#candidate|4328|(176,)|var|float32
call_4326 = func_3449_call(relay.reshape(const_4327.astype('float32'), []), relay.reshape(var_4328.astype('float32'), [8, 2, 11]), )
call_4329 = func_3449_call(relay.reshape(const_4327.astype('float32'), []), relay.reshape(var_4328.astype('float32'), [8, 2, 11]), )
func_3516_call = mod.get_global_var('func_3516')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_4333 = relay.TupleGetItem(func_3516_call(), 1)
call_4334 = relay.TupleGetItem(func_3517_call(), 1)
func_4251_call = mod.get_global_var('func_4251')
func_4252_call = mutated_mod.get_global_var('func_4252')
call_4337 = func_4251_call()
call_4338 = func_4251_call()
output = relay.Tuple([call_4324,call_4326,const_4327,var_4328,call_4333,call_4337,])
output2 = relay.Tuple([call_4325,call_4329,const_4327,var_4328,call_4334,call_4338,])
func_4343 = relay.Function([var_4328,], output)
mod['func_4343'] = func_4343
mod = relay.transform.InferType()(mod)
var_4344 = relay.var("var_4344", dtype = "float32", shape = (176,))#candidate|4344|(176,)|var|float32
output = func_4343(var_4344)
func_4345 = relay.Function([var_4344], output)
mutated_mod['func_4345'] = func_4345
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4347 = relay.const([[[True,False,True,False,True,False,True,False,False,False,False,False,True,True,True],[False,True,False,True,True,False,False,True,True,True,False,False,False,True,False],[True,True,True,False,True,False,False,True,True,True,True,True,True,False,True],[False,False,False,False,False,True,False,False,False,False,False,True,False,False,False],[True,True,True,False,True,True,False,False,False,True,True,True,True,False,True],[False,False,False,False,False,False,True,True,False,False,True,False,True,True,True]],[[True,False,False,True,False,False,False,True,False,False,False,True,True,True,True],[False,True,True,False,True,True,False,True,False,True,True,True,True,False,True],[False,True,True,True,False,False,True,False,True,True,False,True,False,True,True],[True,False,False,False,False,False,True,True,True,False,False,False,True,True,False],[False,False,True,False,True,False,False,False,False,True,True,True,False,True,False],[True,False,False,False,False,True,False,True,False,True,True,False,True,True,True]],[[True,True,True,False,True,False,False,True,False,True,False,True,False,True,False],[False,False,False,True,False,False,False,False,False,False,True,True,False,False,False],[True,True,False,True,False,True,True,False,True,False,True,True,True,True,False],[False,False,True,False,True,True,True,True,False,True,True,True,False,True,False],[True,False,True,True,True,True,False,True,False,True,True,True,True,False,True],[True,False,True,False,True,False,False,False,True,False,True,False,True,True,True]],[[True,False,True,True,True,True,False,False,False,False,True,True,False,False,True],[True,False,False,False,False,True,False,False,True,True,False,False,True,False,True],[False,True,False,True,False,True,False,True,True,False,True,True,True,True,True],[True,False,True,True,False,False,False,False,False,True,True,True,True,False,True],[False,False,False,False,False,True,False,False,False,True,True,True,False,False,True],[False,True,True,True,False,False,True,False,False,False,True,False,True,False,False]],[[False,True,True,False,True,True,True,True,True,True,True,False,True,True,True],[False,True,False,True,True,True,True,False,True,False,False,True,False,True,True],[False,True,False,True,False,False,False,True,True,False,True,False,False,False,False],[True,False,True,False,True,False,True,True,True,False,True,True,True,True,True],[True,True,False,True,True,False,True,True,False,True,True,True,True,False,True],[True,True,True,True,True,False,True,False,True,False,True,False,False,False,True]],[[True,True,True,True,True,False,False,False,True,False,True,True,True,True,True],[False,False,False,True,True,False,True,True,False,True,True,True,True,True,False],[True,False,True,False,False,False,False,False,True,True,False,False,False,True,True],[True,True,False,False,False,True,False,True,False,False,False,False,False,False,True],[False,True,False,True,True,False,False,True,False,True,False,False,True,True,True],[True,False,False,True,False,False,False,False,True,True,True,False,True,True,False]]], dtype = "bool")#candidate|4347|(6, 6, 15)|const|bool
var_4348 = relay.var("var_4348", dtype = "bool", shape = (6, 6, 15))#candidate|4348|(6, 6, 15)|var|bool
bop_4349 = relay.logical_and(const_4347.astype('bool'), relay.reshape(var_4348.astype('bool'), relay.shape_of(const_4347))) # shape=(6, 6, 15)
output = relay.Tuple([bop_4349,])
output2 = relay.Tuple([bop_4349,])
func_4376 = relay.Function([var_4348,], output)
mod['func_4376'] = func_4376
mod = relay.transform.InferType()(mod)
var_4377 = relay.var("var_4377", dtype = "bool", shape = (6, 6, 15))#candidate|4377|(6, 6, 15)|var|bool
output = func_4376(var_4377)
func_4378 = relay.Function([var_4377], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1662_call = mod.get_global_var('func_1662')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_4431 = relay.TupleGetItem(func_1662_call(), 0)
call_4432 = relay.TupleGetItem(func_1664_call(), 0)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
const_4442 = relay.const(-8.054102, dtype = "float32")#candidate|4442|()|const|float32
const_4443 = relay.const([-1.712032,-0.090267,-3.643350,5.833612,6.590958,-1.015397,-0.511190,-0.035778,-8.476087,-5.278306,-9.938966,4.085993,-6.207756,8.549830,-9.047184,-5.556533,5.245807,7.006564,1.660434,-9.253824,-5.396351,3.484222,-3.971773,0.852217,-6.797937,-9.064875,-5.536376,-1.384196,9.152655,-4.680018,-9.599035,-6.399514,-5.735683,2.990608,-7.098874,-2.226749,0.819262,-5.158203,8.979313,-4.299340,7.201449,4.138529,7.943297,-2.535023,3.838204,-0.981548,8.673650,4.235512,-4.614574,-8.596537,3.254824,0.380475,-4.129203,-5.128760,2.994240,9.323528,2.324078,8.364047,-1.447346,6.630106,-0.392874,5.883727,-9.563127,7.453923,-3.978813,-9.223551,7.037958,-5.701841,7.918385,0.179408,1.164073,4.985835,6.057504,3.175779,-7.098091,3.728677,-2.921487,-0.243545,-1.619440,0.557789,7.023992,-9.387988,4.085733,2.338912,7.861501,-9.671909,2.693617,6.180277,-8.602894,7.057177,4.626579,7.294407,7.232346,-1.966759,-5.709965,-1.023342,3.724988,-2.955299,6.957670,5.525284,-7.659383,-5.275125,5.318898,9.734038,-2.463602,-3.796467,3.224043,-6.931270,-3.384923,-8.642866,-2.710483,-7.946853,8.591207,6.634558,-0.503676,6.627306,-3.133208,4.563658,3.623245,6.818044,0.486951,5.466068,3.494718,0.471142,2.991593,-8.811724,1.586005,5.739902,4.493100,1.225129,-6.545472,2.713788,-6.566138,-6.908330,3.300139,-4.329643,-9.454970,9.793171,9.883684,1.118898,7.382023,-0.799820,-2.099167,1.717371,-4.712358,-8.417219,-1.366863,5.925258,-1.683858,-9.921563,4.408025,-2.348506,7.557906,-5.636588,-4.145076,8.312057,3.862465,-8.245042,6.780064,-2.570550,4.467437,-6.339440,-1.110377,-3.082863,-2.611504,-2.499218,7.373175,2.914465,-6.396200,0.582343,4.341364,-5.257354,9.947145,-3.624484,1.859439,-3.610707], dtype = "float32")#candidate|4443|(176,)|const|float32
call_4441 = func_3449_call(relay.reshape(const_4442.astype('float32'), []), relay.reshape(const_4443.astype('float32'), [8, 2, 11]), )
call_4444 = func_3449_call(relay.reshape(const_4442.astype('float32'), []), relay.reshape(const_4443.astype('float32'), [8, 2, 11]), )
bop_4446 = relay.equal(call_4441.astype('bool'), const_4442.astype('bool')) # shape=(8, 2, 11)
bop_4449 = relay.equal(call_4444.astype('bool'), const_4442.astype('bool')) # shape=(8, 2, 11)
uop_4457 = relay.atanh(call_4441.astype('float32')) # shape=(8, 2, 11)
uop_4459 = relay.atanh(call_4444.astype('float32')) # shape=(8, 2, 11)
bop_4462 = relay.logical_or(uop_4457.astype('bool'), relay.reshape(bop_4446.astype('bool'), relay.shape_of(uop_4457))) # shape=(8, 2, 11)
bop_4465 = relay.logical_or(uop_4459.astype('bool'), relay.reshape(bop_4449.astype('bool'), relay.shape_of(uop_4459))) # shape=(8, 2, 11)
output = relay.Tuple([call_4431,const_4443,bop_4462,])
output2 = relay.Tuple([call_4432,const_4443,bop_4465,])
func_4466 = relay.Function([], output)
mod['func_4466'] = func_4466
mod = relay.transform.InferType()(mod)
output = func_4466()
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4466_call = mod.get_global_var('func_4466')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_4482 = relay.TupleGetItem(func_4466_call(), 2)
call_4483 = relay.TupleGetItem(func_4467_call(), 2)
output = relay.Tuple([call_4482,])
output2 = relay.Tuple([call_4483,])
func_4492 = relay.Function([], output)
mod['func_4492'] = func_4492
mod = relay.transform.InferType()(mod)
output = func_4492()
func_4493 = relay.Function([], output)
mutated_mod['func_4493'] = func_4493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_4524 = relay.TupleGetItem(func_938_call(), 0)
call_4525 = relay.TupleGetItem(func_939_call(), 0)
output = relay.Tuple([call_4524,])
output2 = relay.Tuple([call_4525,])
func_4537 = relay.Function([], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
output = func_4537()
func_4538 = relay.Function([], output)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4598 = relay.TupleGetItem(func_2609_call(), 0)
call_4599 = relay.TupleGetItem(func_2611_call(), 0)
func_4199_call = mod.get_global_var('func_4199')
func_4202_call = mutated_mod.get_global_var('func_4202')
var_4632 = relay.var("var_4632", dtype = "float64", shape = ())#candidate|4632|()|var|float64
call_4631 = relay.TupleGetItem(func_4199_call(relay.reshape(var_4632.astype('float64'), [])), 0)
call_4633 = relay.TupleGetItem(func_4202_call(relay.reshape(var_4632.astype('float64'), [])), 0)
func_4124_call = mod.get_global_var('func_4124')
func_4127_call = mutated_mod.get_global_var('func_4127')
const_4640 = relay.constdtype = "float32")#candidate|4640|(143, 14)|const|float32
call_4639 = relay.TupleGetItem(func_4124_call(relay.reshape(const_4640.astype('float32'), [11, 13, 14])), 2)
call_4641 = relay.TupleGetItem(func_4127_call(relay.reshape(const_4640.astype('float32'), [11, 13, 14])), 2)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_4660 = func_1483_call()
call_4661 = func_1483_call()
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_4677 = relay.TupleGetItem(func_1035_call(), 2)
call_4678 = relay.TupleGetItem(func_1036_call(), 2)
func_2642_call = mod.get_global_var('func_2642')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_4686 = relay.TupleGetItem(func_2642_call(), 0)
call_4687 = relay.TupleGetItem(func_2643_call(), 0)
output = relay.Tuple([call_4598,call_4631,var_4632,call_4639,const_4640,call_4660,call_4677,call_4686,])
output2 = relay.Tuple([call_4599,call_4633,var_4632,call_4641,const_4640,call_4661,call_4678,call_4687,])
func_4691 = relay.Function([var_4632,], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4692 = relay.var("var_4692", dtype = "float64", shape = ())#candidate|4692|()|var|float64
func_4691_call = mutated_mod.get_global_var('func_4691')
call_4693 = func_4691_call(var_4692)
output = call_4693
func_4694 = relay.Function([var_4692], output)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3193_call = mod.get_global_var('func_3193')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_4767 = relay.TupleGetItem(func_3193_call(), 1)
call_4768 = relay.TupleGetItem(func_3195_call(), 1)
uop_4773 = relay.acos(call_4767.astype('float32')) # shape=(14, 7, 10)
uop_4775 = relay.acos(call_4768.astype('float32')) # shape=(14, 7, 10)
func_2311_call = mod.get_global_var('func_2311')
func_2314_call = mutated_mod.get_global_var('func_2314')
const_4788 = relay.const([4.966369,-8.612043,-8.044638,-5.125563,5.231262,3.277108,5.518838,8.624597,8.669289,9.747622,4.773469,-4.993870,5.687855,-1.287236,-7.946630,-2.456940,-4.965217,0.202300,-6.793235,-0.100564,-3.195076,-9.953395,0.339360,-2.794980,-6.896122,1.536437,5.235520,3.341637,5.328688,7.831637,-0.777883,8.191686,-0.531988,6.549421,7.104729,-5.135838,-7.149178,5.493151,-7.341991,-5.653014,-5.715079,-9.741530,6.957310,-3.802065,3.379686,0.831158,4.078610,-0.942336,0.367924,-1.842452,-1.104266,6.903037,0.769361,-4.380101,-7.966210,2.273430,-5.895476,-6.004121,6.885590,-0.146118,-4.127551,5.200461,0.018850,-5.528584,6.069622,5.095128,0.177410,-1.982700,9.445464,2.805586,9.014963,-6.709704,-6.503489,-7.779888,6.752381,2.204244,-4.569813,-4.723334,-5.432534,-9.800010,3.573672,0.049676,-2.401429,-9.555689,-9.958329,8.046494,-1.357886,-1.742453,-2.611778,-4.028084,0.767412,-8.030139,-5.888283,0.675256,6.988207,0.597728,3.585148,3.722866,-3.747815,-7.403585,6.270594,2.174239,9.834404,9.664620,-5.616597,-1.710368,2.904835,2.720614,3.750089,-0.605276,-6.645650,2.535003,7.300129,-3.429613,-7.141999,-6.692828,-2.519216,9.132710,6.416421,-3.227878,3.446677,-3.448617,4.196331,-1.384132,-0.634042,6.856987,-4.993506,7.405312,6.775766,-8.978642,-4.568485,-2.177686,-4.291370,-3.192909,-6.448195,4.470529,6.574343,-5.281165,3.814646,9.047563,2.728357,-2.980545,-2.827481,6.055236,8.532409,1.184117,5.873304,2.553098,-8.320447,8.459664,-4.596244,-5.507078,-0.702031,-4.968053,6.860373,-6.084612,-0.684942,3.389353,-1.691284,-3.702570,-1.509908,3.053222,8.027396,1.535723,-8.375916,-4.075161,6.823150,0.871481,2.092853,7.773643,2.204829,-2.281383,-8.805231,-1.371199,-4.353676,3.459981,6.203327,-4.046203,1.620666,-5.536759,8.533343,-6.688544], dtype = "float64")#candidate|4788|(182,)|const|float64
call_4787 = func_2311_call(relay.reshape(const_4788.astype('float64'), [182,]))
call_4789 = func_2311_call(relay.reshape(const_4788.astype('float64'), [182,]))
output = relay.Tuple([uop_4773,call_4787,const_4788,])
output2 = relay.Tuple([uop_4775,call_4789,const_4788,])
func_4801 = relay.Function([], output)
mod['func_4801'] = func_4801
mod = relay.transform.InferType()(mod)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4801_call = mutated_mod.get_global_var('func_4801')
call_4802 = func_4801_call()
output = call_4802
func_4803 = relay.Function([], output)
mutated_mod['func_4803'] = func_4803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4807 = relay.var("var_4807", dtype = "float32", shape = ())#candidate|4807|()|var|float32
var_4808 = relay.var("var_4808", dtype = "float32", shape = (11, 6, 4))#candidate|4808|(11, 6, 4)|var|float32
bop_4809 = relay.greater_equal(var_4807.astype('bool'), var_4808.astype('bool')) # shape=(11, 6, 4)
uop_4824 = relay.exp(bop_4809.astype('float32')) # shape=(11, 6, 4)
output = uop_4824
output2 = uop_4824
func_4830 = relay.Function([var_4807,var_4808,], output)
mod['func_4830'] = func_4830
mod = relay.transform.InferType()(mod)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4830_call = mutated_mod.get_global_var('func_4830')
var_4832 = relay.var("var_4832", dtype = "float32", shape = ())#candidate|4832|()|var|float32
var_4833 = relay.var("var_4833", dtype = "float32", shape = (11, 6, 4))#candidate|4833|(11, 6, 4)|var|float32
call_4831 = func_4830_call(var_4832,var_4833,)
output = call_4831
func_4834 = relay.Function([var_4832,var_4833,], output)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_4846 = func_1041_call()
call_4847 = func_1041_call()
var_4850 = relay.var("var_4850", dtype = "float64", shape = (182,))#candidate|4850|(182,)|var|float64
bop_4851 = relay.less_equal(call_4846.astype('bool'), relay.reshape(var_4850.astype('bool'), relay.shape_of(call_4846))) # shape=(182,)
bop_4854 = relay.less_equal(call_4847.astype('bool'), relay.reshape(var_4850.astype('bool'), relay.shape_of(call_4847))) # shape=(182,)
func_4376_call = mod.get_global_var('func_4376')
func_4378_call = mutated_mod.get_global_var('func_4378')
var_4862 = relay.var("var_4862", dtype = "bool", shape = (540,))#candidate|4862|(540,)|var|bool
call_4861 = relay.TupleGetItem(func_4376_call(relay.reshape(var_4862.astype('bool'), [6, 6, 15])), 0)
call_4863 = relay.TupleGetItem(func_4378_call(relay.reshape(var_4862.astype('bool'), [6, 6, 15])), 0)
func_3516_call = mod.get_global_var('func_3516')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_4886 = relay.TupleGetItem(func_3516_call(), 0)
call_4887 = relay.TupleGetItem(func_3517_call(), 0)
func_3322_call = mod.get_global_var('func_3322')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_4888 = func_3322_call()
call_4889 = func_3322_call()
output = relay.Tuple([bop_4851,call_4861,var_4862,call_4886,call_4888,])
output2 = relay.Tuple([bop_4854,call_4863,var_4862,call_4887,call_4889,])
func_4890 = relay.Function([var_4850,var_4862,], output)
mod['func_4890'] = func_4890
mod = relay.transform.InferType()(mod)
mutated_mod['func_4890'] = func_4890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mutated_mod.get_global_var('func_4890')
var_4892 = relay.var("var_4892", dtype = "float64", shape = (182,))#candidate|4892|(182,)|var|float64
var_4893 = relay.var("var_4893", dtype = "bool", shape = (540,))#candidate|4893|(540,)|var|bool
call_4891 = func_4890_call(var_4892,var_4893,)
output = call_4891
func_4894 = relay.Function([var_4892,var_4893,], output)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_4898 = func_1808_call()
call_4899 = func_1808_call()
var_4907 = relay.var("var_4907", dtype = "float64", shape = (182,))#candidate|4907|(182,)|var|float64
bop_4908 = relay.add(call_4898.astype('uint64'), relay.reshape(var_4907.astype('uint64'), relay.shape_of(call_4898))) # shape=(182,)
bop_4911 = relay.add(call_4899.astype('uint64'), relay.reshape(var_4907.astype('uint64'), relay.shape_of(call_4899))) # shape=(182,)
const_4913 = relay.const([-4,4,-7,1,2,9,-10,-4,7,2,9,-7,9,-8,-3,8,-7,-3,7,-10,-8,10,5,-10,9,4,-4,-2,10,6,2,1,6,-4,9,-1,-3,6,-6,-2,10,4,9,-5,-8,2,-6,-9,-8,7,-7,4,-1,1,9,-2,-1,1,4,7,-8,4,-2,8,6,-9,4,-6,-6,-2,-10,1,3,-1,9,-1,-9,-3,-7,-2,4,9,-5,-3,-2,3,3,7,-8,-5,8,-6,-2,-7,7,6,-9,9,10,4,-1,7,-2,2,-3,-9,-4,6,-3,8,10,-3,-9,-4,8,-2,-8,-5,-5,2,-3,-7,-9,4,7,4,-6,-8,-1,5,-4,-10,-7,-3,-9,10,-8,-8,1,-9,-4,6,1,-6,-10,-4,9,5,7,8,-2,8,5,-5,8,5,-8,-3,-8,-1,-1,1,7,5,3,-9,-10,-5,3,-3,5,-4,-8,-9,-7,5,3,7,1,5,-5,-8], dtype = "uint64")#candidate|4913|(182,)|const|uint64
bop_4914 = relay.greater(bop_4908.astype('bool'), relay.reshape(const_4913.astype('bool'), relay.shape_of(bop_4908))) # shape=(182,)
bop_4917 = relay.greater(bop_4911.astype('bool'), relay.reshape(const_4913.astype('bool'), relay.shape_of(bop_4911))) # shape=(182,)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_4936 = func_1483_call()
call_4937 = func_1483_call()
output = relay.Tuple([bop_4914,call_4936,])
output2 = relay.Tuple([bop_4917,call_4937,])
func_4950 = relay.Function([var_4907,], output)
mod['func_4950'] = func_4950
mod = relay.transform.InferType()(mod)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4951 = relay.var("var_4951", dtype = "float64", shape = (182,))#candidate|4951|(182,)|var|float64
func_4950_call = mutated_mod.get_global_var('func_4950')
call_4952 = func_4950_call(var_4951)
output = call_4952
func_4953 = relay.Function([var_4951], output)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_5002 = func_2200_call()
call_5003 = func_2200_call()
output = relay.Tuple([call_5002,])
output2 = relay.Tuple([call_5003,])
func_5008 = relay.Function([], output)
mod['func_5008'] = func_5008
mod = relay.transform.InferType()(mod)
output = func_5008()
func_5009 = relay.Function([], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5013 = relay.const([[[-5,4,2,-6,-6,-5,2,-1,-8,-6,-9,10],[-1,9,-8,-4,5,2,9,4,-5,-2,-4,7],[9,-9,-10,-10,-3,-1,-8,-3,-4,10,3,7],[-2,-6,1,8,-7,-6,-8,-9,7,-10,-4,-8],[10,-10,-4,2,7,2,-3,7,7,-6,2,-4],[5,4,10,10,9,-4,8,-9,-4,-4,-1,-7],[-6,3,-10,7,-4,-5,-2,-4,-4,4,-4,8],[5,-5,2,-7,4,-6,-9,-10,-3,-5,1,-8],[8,8,6,-10,-5,-9,6,5,6,-6,4,7],[-4,-4,4,9,-3,-5,-2,-10,-1,-6,-7,-1],[-2,-7,5,-6,8,4,-2,-5,-10,4,7,-1],[-4,-7,7,3,7,8,4,2,3,-6,-9,-10],[3,-2,-7,-9,9,-10,-4,-8,5,-4,9,2],[10,-7,-9,9,-8,-10,-4,-5,-7,-9,-10,-3],[-2,-5,-2,5,3,10,-8,1,10,2,-2,-4]],[[6,1,10,-2,-2,-5,1,6,-1,-5,-5,-6],[10,8,-9,-5,8,2,2,2,8,-8,-7,-5],[1,9,8,3,-7,4,-5,-10,4,3,-3,-10],[2,4,-2,-10,-10,-9,6,8,4,7,10,-2],[-9,-10,10,5,-8,1,-5,3,10,4,5,-9],[-6,8,-6,-8,-7,-5,-8,9,9,-8,-3,-2],[6,-10,9,-9,8,9,-10,-8,7,2,-6,-3],[-2,-9,-5,-7,6,9,-9,-8,-8,10,6,-4],[3,-8,8,-2,-4,5,-2,8,2,-3,8,9],[-10,5,-8,9,-5,-8,10,-1,-3,-4,9,-2],[1,-3,9,-8,-10,7,10,-9,4,-5,-7,1],[-5,4,-6,6,-4,-10,-10,3,9,-9,-7,3],[-4,-8,-7,3,-1,-7,-3,-8,-1,-9,-7,2],[-4,7,7,-3,-8,-4,-7,8,-3,-8,-7,3],[-5,10,7,-9,5,2,-4,5,-7,1,-5,3]],[[6,-4,8,-3,-2,-6,-7,1,1,-3,10,10],[-6,-1,-2,9,-6,10,-10,10,8,-2,2,-6],[-7,-7,7,-4,8,4,-10,5,5,1,-10,9],[8,10,7,1,5,10,-7,4,10,5,-2,5],[8,5,8,4,5,5,2,-7,8,-10,4,10],[4,3,6,3,7,-1,-2,-2,-1,-1,5,-9],[-5,-7,2,2,-1,-2,-4,-2,-3,-5,-10,-1],[6,-3,10,-3,2,2,5,10,9,-4,8,-2],[-1,-5,-6,3,10,2,-9,-3,-4,4,10,-7],[7,2,9,6,2,2,-10,9,-4,-10,-3,3],[9,-7,3,-8,5,-8,5,-6,-7,-5,5,9],[-3,2,1,5,5,8,6,-10,7,7,4,-7],[2,-10,-5,8,-9,6,-8,-9,-3,-2,-7,9],[-2,4,-10,7,-4,-2,-9,7,-3,-5,1,7],[-4,-2,3,3,-10,1,9,-5,-8,-1,7,2]],[[-10,4,-4,-5,10,-9,1,-8,8,-2,-9,9],[-1,-4,-8,-2,-3,10,-7,-6,-4,-10,7,-5],[-9,-4,-3,-8,5,7,-6,2,5,-9,-8,-7],[-9,7,-7,3,-9,-6,1,-9,4,10,2,1],[5,-10,-6,5,-6,-3,7,10,-2,10,-8,8],[2,-2,-1,4,5,-8,2,8,6,-2,-5,10],[-9,-1,-7,9,-6,-6,7,2,3,-5,-1,-3],[-2,1,7,5,2,-3,4,10,4,-8,5,3],[7,-3,10,-9,-8,10,-2,1,2,4,-5,-7],[-2,10,-4,-7,2,9,-3,4,9,-9,10,8],[4,-9,8,-10,10,10,-6,5,5,9,4,-1],[7,5,-2,9,-7,-8,6,-5,-9,-10,-2,-2],[1,-6,7,10,-1,-3,-10,-10,-3,-9,-8,5],[3,-2,-2,-3,8,-10,9,10,4,5,-6,-10],[5,7,-6,-9,-8,4,-5,-5,-8,-7,4,9]],[[1,-2,8,7,3,-5,6,10,4,6,-10,-2],[5,-7,9,6,7,6,-2,-9,6,-4,7,-8],[7,-10,-6,-7,-6,-9,8,2,5,-3,10,2],[5,6,-9,4,-10,-4,1,-7,-6,9,-2,-1],[8,4,7,1,1,5,4,5,-6,-10,10,1],[4,2,-10,2,9,5,9,8,-7,-9,2,7],[-5,-2,-4,3,-2,3,7,1,1,-2,4,-10],[4,-2,-3,4,-7,3,3,9,-2,-9,-10,-7],[-6,1,10,3,-9,10,-5,10,-5,3,-10,3],[-9,-8,-5,-9,-3,-3,10,-7,-2,-10,5,8],[2,10,-6,-1,7,3,6,3,10,4,-3,-8],[-2,-1,-8,-9,-10,10,1,-10,-3,-2,-3,-10],[-2,-3,-7,-1,9,4,-1,-8,1,1,-3,2],[-4,-7,-9,1,1,-8,7,7,-1,5,-5,7],[3,10,8,2,-6,10,7,-9,-5,7,6,10]],[[-7,3,8,-6,7,6,7,9,8,9,1,2],[-4,-8,4,-10,-10,3,-3,8,-4,-9,-2,-6],[-6,-6,2,-2,8,7,-9,5,9,9,6,4],[-2,2,-9,-6,3,3,9,-10,-7,-1,3,6],[-3,-4,2,10,10,2,2,8,10,-1,-7,6],[-9,2,6,-1,-3,-9,-2,-3,-2,-4,10,10],[-1,9,-1,6,5,-1,6,-9,7,-5,8,1],[-10,-6,5,2,-8,-8,7,10,-9,-2,-3,3],[-10,8,8,-2,6,-1,-6,1,-4,-5,-10,-1],[-4,-4,-4,8,7,4,7,4,-3,-6,-5,-3],[5,-8,-2,4,3,-4,4,1,-8,-7,-10,-2],[-5,2,-5,-1,-4,5,-9,6,4,-9,2,10],[-4,8,-9,6,9,3,6,4,2,-8,8,-5],[3,-1,-3,-6,-1,2,5,3,8,7,10,4],[1,-5,5,1,3,5,-6,-4,7,4,-5,-5]],[[-3,-5,-2,-6,-2,-3,-2,-6,-8,-2,6,-1],[3,-7,4,-1,2,1,6,8,2,-6,-10,1],[7,-4,3,-6,-3,-5,2,-6,-2,10,-6,-8],[2,3,8,9,9,-6,9,9,6,-10,1,-5],[-5,-3,-3,-7,4,-8,6,-6,3,7,8,5],[-1,-4,-3,5,4,-6,8,-6,5,-5,-1,6],[-2,5,1,4,7,6,9,-5,-1,1,-6,2],[-1,2,7,-8,-5,1,-5,9,4,-9,9,5],[-4,-9,-5,2,9,10,6,-9,2,-6,-4,6],[-2,-1,10,-9,2,7,-1,5,-6,8,-2,-2],[6,1,5,-9,6,-8,-6,3,4,-7,-10,7],[-7,10,1,-4,-2,-8,-4,-3,-7,-7,7,10],[1,-8,-10,-6,1,6,8,10,7,-6,-3,3],[10,-2,1,10,-1,-2,-3,-6,4,8,-2,-3],[-4,-9,-8,8,2,6,-2,-5,5,4,6,4]]], dtype = "uint64")#candidate|5013|(7, 15, 12)|const|uint64
var_5014 = relay.var("var_5014", dtype = "uint64", shape = (7, 15, 12))#candidate|5014|(7, 15, 12)|var|uint64
bop_5015 = relay.equal(const_5013.astype('bool'), relay.reshape(var_5014.astype('bool'), relay.shape_of(const_5013))) # shape=(7, 15, 12)
output = bop_5015
output2 = bop_5015
func_5028 = relay.Function([var_5014,], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
var_5029 = relay.var("var_5029", dtype = "uint64", shape = (7, 15, 12))#candidate|5029|(7, 15, 12)|var|uint64
output = func_5028(var_5029)
func_5030 = relay.Function([var_5029], output)
mutated_mod['func_5030'] = func_5030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4040_call = mod.get_global_var('func_4040')
func_4041_call = mutated_mod.get_global_var('func_4041')
call_5074 = relay.TupleGetItem(func_4040_call(), 0)
call_5075 = relay.TupleGetItem(func_4041_call(), 0)
output = call_5074
output2 = call_5075
func_5087 = relay.Function([], output)
mod['func_5087'] = func_5087
mod = relay.transform.InferType()(mod)
output = func_5087()
func_5088 = relay.Function([], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_5100 = relay.TupleGetItem(func_830_call(), 1)
call_5101 = relay.TupleGetItem(func_832_call(), 1)
output = relay.Tuple([call_5100,])
output2 = relay.Tuple([call_5101,])
func_5118 = relay.Function([], output)
mod['func_5118'] = func_5118
mod = relay.transform.InferType()(mod)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5118_call = mutated_mod.get_global_var('func_5118')
call_5119 = func_5118_call()
output = call_5119
func_5120 = relay.Function([], output)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_5168 = func_865_call()
call_5169 = func_865_call()
output = call_5168
output2 = call_5169
func_5177 = relay.Function([], output)
mod['func_5177'] = func_5177
mod = relay.transform.InferType()(mod)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5178 = func_5177_call()
output = call_5178
func_5179 = relay.Function([], output)
mutated_mod['func_5179'] = func_5179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_5208 = func_1338_call()
call_5209 = func_1338_call()
func_2494_call = mod.get_global_var('func_2494')
func_2498_call = mutated_mod.get_global_var('func_2498')
const_5211 = relay.const([-2,-5,1,2,-7,3,-4,5,4,-6,-8,-4,-3,-4,2,1,10,-1,-9,1,7,-10,-3,-8,10,9,-3,4,-5,7,8,3,1,-1,8,-10,5,7,4,4,-9,1,5,-2,-4,10,-6,-9,7,-1,1,-2,-1,4,-4,9,-3,-7,-6,9,-9,-9,1,4,-2,-7,-6,1,9,3,6,-9,4,5,5,7,4,9,-8,7,7,2,4,1,9,-7,7,1,-1,1,-2,-2,-6,4,-3,3,5,-5,7,2,-1,-10,-4,2,-1,3,-1,10,5,3,-6,-10,-10,-10,1,4,9,-10,8,8,5,3,-6,7,-8,1,-7,-5,-8,-5,-4,-2,-6,8,6,-3,7,1,10,5,8,-2,-7,-1,1,-7,-6,10,3,6,-3,-2,-7,-4,-9,-7,-2,-2,-7,7,9,-4,1,5,-3,-5,1,7,-8,-7,9,-6,4,-2,-10,-2,3,2,-2,-9,-1,1,2,2,-2,-9,-4,2,4,2,4,-3,-9,-2,5,6,-6,7,-9,-9,1,-10,4,4,7,-10,-9,-10,9,7,-3,-7,2,-8,7,1,-5,3,-4,-7,-3,4,9,8,5,-1,10,9,4,-6,7,6,-10,-3,-6,-9,-7,-8,-6,6,4,10,-5,-10,10,-9,3,1,4,2,-2,8,-4,8,7,-1,-1,-6,4,5,-2,-1,2,10,3,8,1,-9,-4,-4,2,1,8,2,-3,-6,-3,-2,6,-1,-4,-8,-6,-9,-3,1,-10,-9,-2,-10,9,-4,10,7,7,-9,-8,-5,4,-5,9,-2,-2,5,5,-1,-1,7,10,-9,6,6,-5,-8,-5,5,3,-2,10,9,5,10,-6,9,-4,10,8,-4,9,1,-7,7,-4,4,-6,-1,-4,9,9,3,8,-3,-1,9,-1,3,5,-7,-9,-4,4,8,-8,6,-6,-3,4,1,5,5,-8,-3,8,-1,2,4,3,-4,10,8,-2,-8,-7,2,-9,-7,5,10,-1,-2,8,-9,-9,-2,6,5,-1,4,2,-9,5,7,-5,5,10,6,-5,-9,-1,-3,2,-7,-1,-2,-9,5,6,-5,-1,-4,-8,-8,-7,-7,-9,7,10,-6,-5,7,9,7,6,-4,-2,7,-1,5,2,-8,4,-2,-1,7,-7,9,8,1,8,2,-6,-2,-4,8,-10,-6,-4,-1,7,1,2,-1,-6,6,-10,5,-7,-4,5,6,-8,10,-1,7,8,-3,7,-3,-6,6,9,-3,-2,9,1,-3,-6,-3,3,-4,-9,3,10,-9,-7,2,10,-4,4,-8,-9,-4,-3,3,-8,-6,3,-2,-7,7,8,2,7,-8,9,6,6,-4,-8,2,-1,2,8,-5,7,-9,-5,2,-6,3,-6,-3,10,9,4,5,-2,9,2,-4,-10,-5,3,5,6,7,10,4,9,9,7,-7,2,8,2,5,7,6,-5,-1,10,5,-10,-9,2,-10,-3,-7,-7,-9,1,2,3,-9,-9,-1,10,1,5,-9,-10,-8,-10,-8,-2,-5,-10,-10,-4,-3,-1,4,-2,-1,4,6,1,-9,-10,9,3,-6,2,7,-5,9,-5,-9,-7,-6,2,-9,7,-5,4,-1,-9,-9,3,7,6,-5,-10,-10,5,-1,9,2,-7,-4,-3,5,2,-1,10,4,-3,-9,-5,1,6,-9,-10,-2,9,8,-1,-2,-9,-9,-10,-6,-5,-5,3,-2,-7,-5,-3,-4,3,4,6,-8,-8,5,1,10,-8,8,-2,2,3,-8,4,-1,-5,10,1,-6,4,-7,-5,-3,-6,4,-3,-9,4,5,1,-3,-10,-10,1,-2,-9,2,-7,-7,-7,-3,7,-7,1,-9,9,-1,-4,-2,10,2,2,-5,8,-2,-3,5,6,3,7,10,-3,-7,-5,-4,2,4,9,-2,1,3,-6,-6,-2,10,10,-5,2,-1,-10,9,10,-5,3,9,-1,8,1,-10,10,4,7,-2,-3,5,8,5,-7,9,10,-2,10,-6,3,-6,5,2,9,-2,-6,6,-9,4,-3,-6,10,-4,9,3,-8,-4,9,7,-1,-10,4,-3,-9,10,1,-9,-3,3,-4,3,-7,7,2,-6,10,4,-4,-8,-5,6,-4,8,7,1,-2,-5,1,5,-3,8,8,1,8,-4,-10,10,-7,-3,-2,8,-1,2,-3,5,9,1,-5,7,2,8,-6,-5,-7,-9,-5,4,8,-7,-3,8,6,-7,-4,6,-8,9,3,6,4,-8,2,6,7,2,-8,2,-4,6,-5,-7,7,8,-1,7,-2,6,-8,-4,10,5,-10,3,-7,-3,1,7,5,-5,10,2,10,5,-4,3,7,-1,8,-1,3,7,-4,-2,-8,5,-9,-1,5,-7,5,3,1,-10,-10,-3,-9,-6,5,-1,-3,2,-3,2,-8,-9,2,-8,-7,-9,-1,9,3,2,1,10,2,-9,4,5,4,-7,-9,9,-3,-5,3,6,-9,-1,-4,8,4,2,-1,-9,4,-3,-1,9,1,8,-5,-9,3,-7,-2,4,2,-1,5,-10,-8,-10,-5,2,-2,-1,5,3,1,-6,3,-6,-5,8,1,-7,-2,7,-7,-7,-1,5,-10,5,-8,-4,-2,8,9,7,7,-8,-2,-8,6,-5,-8,3,3,-9,1,-4,6,-8,9,7,-1,4,-2,2,10,2,-10,-5,-3,5,-10,4,-10,-4,-2,-4,-6,6,-1,-5,-8,8,-2,-2,-7,-8,4,4,-8,5,-9,-3,-9,4,-7,-10,6,2,1,4,1,-7,-7,10,-1,-5,6,-7,7,5,-8,9,-5,3,-7,5,2,2,7,5,9,-8,10,-9,7,-10,-1,1,4,-3,5,-8,2,-6,-3,8,-3,-6,4,-9,-1,5,10,5,4,-6,8,5,5,10,2,-10,6,7,3,-10,5,-6,3,-10,1,-5,-1,8,2,5,-8,1,3,4,4,-2,-1,-7,-10,-3,-4,-8,9,-2,-6,4,-2,-7,-3,-2,-5,9,3,-2,2,3,-4,-10,9,-3,-6,10,-4,-4,-8,-7,1,10,-9,-6,-6,4,2,-2,-5,-5,-3,-1,-1,-5,9,5,5,5,-6,4,2,3,-5,2,-9,1,3,1,6,7,8,-7,-5,-9,-5,-6,-5,8,1,10,-8,-4,-2,9,10,3,-7,-1,5,7,4,-5,-10,7,-3,-3,-7,-6,-3,8,10,-3,4,-1,-5,8,-10,6,-6,-3,-1,3,-7,-8,-1,-6,-10,10,-5,2,9,-9,3,-1,10,1,2,1,1,10,6,7,-6,-9,-7,-1,2,-9,5,5,6,9,10,-9,-9,-6,-6,-2,-9,-5,1,7,8,-8,8,10,-1,-3,-7,5,1,3,-6,2,-6,-6,-5,-2,-8,7,6,-9,-6,-2,-3,1,10,-3,-6,4,4,-9,-2,1,1,-6,-5,6,5,4,-6,-4,-8,-3,-2,6,-8,4,-4,-9,-4,4,10,-1,-7,-5,-2,9,7,-4,-2,6,3,-9,-6,-4,5,-2,-9,10,-9,-10,5,1,-3,5,-5,-5,-3,-7,-5,1,-10,-5,-7,-6,-1,9,6,-9,7,4,3,10,6,-6,8,-2,-10,7,1,4,-10,7,-5,4,-10,-3,10,10,-1,-10,2,7,-1,9,-8,4,-8,-3,-9,6,-7,-2,-4,-6,9,-2,-8,-4,5,-10,6,2,-7,8,4,-5,5,-8,2,-2,10,1,-6,6,8,-4,-2,-10,-1,-6,4,-6,1,-8,9,-3,5,-6,8,-2,-8,1,-3,8,9,1,-5,2,10,-8,-9,8,4,-7,-6,7,5,3,-8,4,-6,3,-1,-9,5,1,-10,-2,-3,-7,5,-4,-3,-8,9,-10,-6,-6,8,-9,-3,-10,9,7,10,2,1,8,4,-7,-10,6,10,3,7,4,10,3,8,3,6,-5,-3,1,9,-8,4,4,-8,-5,-9,-5,5,-10,7,-10,1,10,-6,-1,8,3,5,-8,-4,-10,-2,-2,4,-9,-7,4,4,-2,-2,5,-4,1,-8,4,2,3,-8,2,-6,3,-9,1,-10,4,-8,3,9,-1,5,-7,9,10,6,1,2,-7,-2,4,1,-5,7,1,4,-3,7,-5,-1,-6,-6,8,3,-10,-4,-9,4,-6,-6,7,8,8,-1,4,7,-8,10,-4,1,-10,-10,-2,6,5,4,1,-3,7,-1,5,-2,-2,9,5,-10,7,-5,4,6,3,-3,-1,-3,-2,1,2,-8,-6,-10,7,8,-2,4,4,7,-1,2,-9,-2,1,6,-9,-10,1,5,-2,1,-6,9,-6,-7,-9,1,-8,-8,-6,-4,1,9,-6,10,-7,-3,8,1,10,-1,9,-6,-4,-5,9,5,-5,-1,-9,10,-2,9,5,-3,9,4,3,6,4,-8,-3,4,9,1,-4,4,-2,-5,-2,-1,-2,1,-5,-5,-8,-4,5,-1,3,4,10,5,-2,10,1,-7,10,-10,-2,-6,7,-5,7,-9,-5,10,-3,-1,7,9,5,-5,-3,-10,10,-9,-5,3,8,2,7,1,7,4,-3,6,-8,-5,-5,-8,-10,-6,-9,6,-3,3,10,-9,-5,-5,-8,10,-1,9,-7,-5,-3,-1,9,10,-6,1,8,-5,3,-3,10,-6,-8,8,-1,-4,3,-7,-3,-4,9,-6,-3,1,-10,6,-8,2,-7,-3,3,-3,3,1,-6,-4,10,3,1,-1,8,3,-2,-4,-5,-9,4,-9,1,-2,4,-3,8,-10,-10,1,10,8,9,1,10,-6,-2,-9,4,-10,-7,-5,-9,-3,-5,10,10,-7,9,5,-10,4,-8,4,4,10,-9,6,9,-8,6,2,-6,-5,1,-6,4,4,3,-4,4,-8,-1,10,6,6,7,-7,9,8,5,10,4,-9,-1,-3,9,7,-8,9,8,7,5,6,8,-5,-8,2,8,8,-6,-6,4,6,2,-9,3,6,2,4,-8,4,-4,7,-10,1,7,3,-1,-7,-4,-5,-4,7,-5,-7,1,-6,-8,7,9,5,5,9,-7,-3,5,-10,-1,5,1,6,3,-7,6,-10,1,-2,3,6,-10,-1,-9,5,1,3,-4,-3,2,2,3,-2,7,-5,-7,-10,-2,-3,-5,8,-10,9,-9,-3,-4,8,6,6,-5,-6,3,-3,-1,5,-5,-4,-3,1,5,6,6,9,-5,-5,-5,7,9,3,4,-5,-1,8,-10,-10,2,6,-10,-9,-7,7,7,10,-2,5,-10,-9,-7,-5,-5,-4,10,4,-3,5,9,-2,4,4,4,1,10,-3,6,-6,6,5,-1,6,-2,-6,10,1,9,-9,-5,-4,-2,-3,-8,9,-10,10,5,-5,-4,2,-6,-8,-8,-7,9,9,-2,-2,-1,6,7,-1,1,-3,-7,-1,-8,10,-9,-9,2,-10,10,9,-2,3,3,6,-1,1,4,3,-4,-5,3,1,-2,2,-2,-1,7,6,9,-4,-10,10,-8,5,-7,-4,4,6,8,-8,-10,-7,-5,5,-6,6,-5,-2,-7,-6,7,5,-7,9,-10,6,-6,-4,-5,-4,-9,6,5,6,5,8,-4,-5,-5,-6,1,-2,-4,-7,7,-9,4,-10,-5,2,-8,6,-5,-3,-7,-5,3,-7,-4,-8,-8,7,6,10,4,3,-4,4,-10,-2,-7,5,-4,9,-7,-9,5,6,5,-3,1,1,-5,-7,-1,3,-5,10,-3,7,5,6,6,-3,9,10,-2,-7,5,5,4,5,-8,-9,5,10,4,2,-9,8,1,-10,-8,-3,1,-10,5,4,-2,6,-1,-7,-4,2,4,-1,-10,7,10,-3,-7,5,8,-7,6,-6,-10,1,-2,5,-5,-8,-9,-6,-4,-9,-2,2,8,8,3,-1,7,-4,5,4,10,-8,8,8,-3,-4,5,-2,-7,7,6,-10,-9,3,-6,5,-10,4,7,3,-3,2,5,1,6,-10,5,5,-6,8,-7,9,6,-9,-9,2,1,10,-9,8,10,-6,-9,10,1,-9,-1,-8,-4,-9,-9,-5,-4,-6,7,-8,3,-3,-7,10,-9,8,9,-6,-5,6,-7,-4,-5,5,6,10,-7,2,5,4,10,5,-10,-2,7,10,-8,-6,7,-8,3,10,10,6,3,3,-3,-5,-1,-9,5,-4,-4,-8,2,-1,4,8,5,-3,-3,-4,-5,1,-5,8,-10,7,-5,-2,-2,5,-6,2,-7,2,1,6,6,-6,8,5,8,-9,-6,1,5,4,9,5,-10,5,4,1,-1,-2,-3,-6,-6,2,-9,8,9,7,7,-3,8,2,9,1,2,-8,8,-6,2,-6,2,-5,7,10,-2,5,-9,4,-2,-8,8,-1,-2,3,-6,-5,5,3,1,-8,-4,-5,-9,3,-3,6,-8,10,-6,6,-1,4,10,-8,9,-4,-8,-8,-9,8,3,-3,-5,-3,-3,-4,-9,-10,6,-9,-5,-9,-3,10,7,4,-4,-1,2,-1,-2,-9,5,-9,9,-7,-3,7,-3,-8,5,-2,-10,9,6,7,6,8,-7,-2,5,1,8,-3,-5,3,4,-10,-10,-8,-2,4,-3,9,7,8,-3,-9,-9,1,-5,3,-10,6,5,-8,-1,2,3,5,3,4,-4,-4,-7,-4,-9,-4,1,1,-5,10,-1,9,-6,-6,8,4,6,5,-2,8,8,-2,-3,5,-2,-6,-1,-7,-9,-5,-4,1,6,-5,-6,4,6,-3,9,-9,-2,3,9,-10,2,7,4,-10,-3,3,-8,3,10,-3,1,1,-6,-9,-4,-3,-4,-4,6,1,9,-1,10,10,-8,-1,4,6,-4,-5,6,7,-6,-10,-5,6,-6,2,10,8,-7,-9,-10,-3,2,5,5,9,2,-8,4,-2,10,8,8,-8,-2,-7,3,-9,7,-4,3,-6,5,-2,5,-1,10,4,3,2,-8,10,-9,6,-2,-10,4,-9,-9,1,-7,-10,-2,-4,6,-2,4,-6,2,1,-2,8,7,6,10,-10,10,3,-4,-6,-2,-5,-10,-1,2,-6,-5,10,-2,7,-6,9,9,-5,-1,-5,9,9,-10,-4,4,-7,-4,2,3,-10,-10,-4,-4,-4,-10,-6,-9,-10,9,1,6,4,-5,8,8,9,-10,7,-2,9,-1,4,-1,-1,10,4,10,-8,4,4,-5,-10,-6,10,-9,1,-3,-10,-1,5,-4,7,-8,-10,-10,-6,7,-1,2,-2,-10,1,-10,-8,-3,-10,3,-1,-2,-5,5,-9,-7,7,2,2,-2,7,-3,1,-9,3,10,-5,6,5,1,-6,-4,10,2,-10,-5,8,-2,-6,-10,3,4,2,-5,-5,-1,-5,-6,3,-6,-4,-7,-9,-1,-10,-5,-3,-10,-2,4,-3,8,1,2,-2,6,9,10,4,6,-4,-8,1,6,5,9,-6,-6,1,-1,-8,10,-2,-9,2,2,-6,5,-8,-9,10,1,-4,-2,-4,-7,4,2,-8,4,-6,-7,7,-8,-2,8,-6,7,5,-7,6,3,-3,-6,8,2,6,-6,1,8,2,5,-6,-2,-4,1,-4,10,1,-10,-5,3,-2,-4,5,-6,1,-7,-6,9,-9,-1,-5,2,-8,3,9,-5,-8,-3,5,10,-3,-3,9,10,-2,-10,-2,1,9,3,3,-8,-1,2,2,-1,2,-3,-6,8,2,5,2,-5,-1,8,8,-2,7,-4,9,-4,-9,-1,-10,3,7,-9,3,2,2,-7,-8,-9,5,3,-9,7,6,1,7,9,3,6,1,1,10,4,-6,-2,-6,-7,4,3,1,7,9,5,5,9,1,-9,-5,-8,8,6,-7,-1,8,-2,-7,9,8,-7,7,-10,3,9,4,2,7,8,-2,6,2,-9,10,4,-3,-2,-6,-9,2,10,5,-10,2,6,-8,4,-2,-8,10,-10,-4,5,5,-10,2,-4,1,-7,3,-7,-8,8,1,-4,-9,-7,-9,4,6,2,5,-5,2,-9,7,-6,6,-9,-2,-9,-9,6,1,-3,-6,-5,3,-9,-3,-9,-6,-9,9,-1,-3,3,-9,2,-1,-6,-2,-1,-2,7,1,-8,-3,9,-7,2,-1,3,-6,-9,-10,7,8,6,-8,-7,-10,-6,-4,-4,5,10,-1,-7,8,5,5,-1,-9,4,9,-6,8,10,5,4,10,-8,-7,-1,5,4,-9,2,1,5,7,8,1,9,4,8,7,6,-2,-2,2,-6,2,-8,4,-2,-5,8,8,4,3,5,-9,-6,9,-10,6,3,4,1,-5,10,-5,7,-8,-7,-4,-10,5,-8,4,7,-3,-7,10,-4,-3,8,-5,-3,-8,1,-3,9,-7,-4,4,-10,-10,4,7,8,4,-9,-10,1,1,4,-3,3,9,-2,9,-9,-10,-10,3,-8,3,-8,-10,-5,-3,6,-1,7,-8,-2,-2,7,-6,-1,-6,-7,-8,6,-6,-8,9,4,-3,-1,-1,-8,-3,-6,-4,7,-6,1,-1,-2,7,3,-2,-7,1,5,-10,-6,-8,4,-9,-3,7,-1,-10,-3,-2,4,-7,-8,8,10,-8,3,-9,9,-7,-5,4,-3,10,1,6,6,6,-2,9,2,-10,-3,-1,-9,3,-5,1,-3,-5,2,2,5,-2,-4,-8,-6,9,-7,2,-9,9,3,-3,2,-3,-9,2,4,-8,-3,-5,3,10,6,-6,-8,10,-7,-10,-1,3,9,-4,7,3,8,-1,-2,3,-3,-5,-3,2,8,-9,4,-10,5,-8,-6,4,-9,-7,6,-10,-8,-1,10,1,5,8,1,-4,2,1,-5,3,2,8,1,-8,-5,-2,-4,4,4,-1,-9,-3,1,8,1,-1,-3,-10,8,-5,-8,-7,-1,-2,-2,2,-7,2,-9,5,4,-2,4,-1,-1,-3,-5,-1,-1,1,-3,-7,-6,-10,1,-8,1,4,-3,8,-3,-2,5,-3,4,2,-7,-2,1], dtype = "int8")#candidate|5211|(3360,)|const|int8
const_5212 = relay.const([[8,-10],[-2,-10],[-5,-10],[5,5],[-1,-1],[5,-2],[2,-4],[7,-3],[-8,3],[-1,6],[-5,6],[-4,8],[-1,2],[10,10],[-1,8],[-4,4],[-5,2],[1,3],[6,-7],[-8,8],[5,-7],[5,8],[-4,7],[-7,-2],[7,8],[3,3],[9,-4],[7,10],[3,7],[-5,-5],[3,-8],[2,-3],[-5,-6],[-2,-10],[10,-10],[7,9],[7,7],[2,2],[-5,-8],[-2,7],[-1,8],[3,-6],[3,2],[-6,-7],[8,5],[-9,7],[-9,10],[-5,-9],[-9,10],[4,-8],[2,6],[-10,10],[-10,-10],[-4,-2],[2,-4],[-8,-3],[-9,-10],[9,-3],[-8,8],[3,-8],[5,-1],[-4,3],[2,3],[10,6],[9,6],[2,8],[8,7],[-5,2],[2,-2],[6,-4],[-1,-10],[-5,2],[-2,3],[-8,5],[-8,-5],[9,7],[-3,-2],[2,-9],[7,6],[6,7],[8,4],[-4,2],[-3,-6],[-8,-6],[2,2],[-5,9],[-10,3],[4,-4],[3,-10],[6,8],[-3,-4],[7,-4],[9,3],[8,-6],[-8,6],[3,6],[-7,3],[-10,-7],[-5,-6],[2,-5],[7,-6],[1,-5],[3,9],[-1,-1],[1,6],[-5,6],[3,-4],[9,7],[-7,-3],[5,7],[7,-3],[3,9],[-8,-7],[7,2],[-3,-6],[-8,-10],[-5,5],[-1,7],[8,-6],[-4,5],[1,4],[5,-7],[-2,3],[-5,-5],[8,-10],[2,-6],[-9,-1],[9,-6],[10,-8],[6,5],[8,8],[-3,-6],[2,-9],[-5,-5],[9,-9],[6,1],[-7,-2],[4,-1],[-5,8],[1,-8],[-9,-7],[2,-1],[2,1],[7,-3],[-9,-7],[2,7],[-4,-3],[8,8],[-10,4],[-1,-5],[4,2],[-8,-6],[-9,1],[-1,-7],[3,10],[5,1],[-6,-9],[9,-1],[-2,6],[7,-8],[-5,8],[-9,-10],[8,6],[-1,9],[1,6],[2,4],[-2,3],[-2,-6],[9,-4],[-10,3],[-6,1],[5,5],[-8,9],[-10,-3],[3,2],[6,-4],[-3,-5],[3,-2],[6,-6],[-3,-10],[-2,10],[-2,-4],[10,2],[-3,5],[5,8],[-8,6],[-4,-7],[-3,-8],[6,7],[-5,-2],[-7,3],[1,4],[7,-3],[-2,9],[1,-5],[-2,1],[2,-3],[1,4],[-10,-7],[-4,-6],[-5,-6],[-9,-5],[2,7],[2,2],[-8,-1],[-2,6],[-1,-4],[4,-7],[-10,7],[9,-2],[-3,-7],[-6,9],[5,2],[6,-3],[1,-5],[9,5],[7,9],[-6,-9],[9,-4],[-6,-9],[-4,10],[9,10],[-3,6],[-6,-1],[6,1],[2,-3],[-5,-6],[-9,-1],[5,6],[7,3],[-8,3],[-1,7],[6,-1],[7,9],[-10,-2],[-9,-3],[-8,-8],[2,6],[2,6],[-6,3],[2,-10],[8,10],[4,9],[6,-6],[1,-1],[7,7],[-7,-5],[7,-4],[-1,-7],[-4,9],[10,1],[-9,2],[3,7],[1,7],[6,-10],[9,-1],[6,3],[4,10],[-9,-1],[10,-10],[-7,10],[10,3],[-1,-10],[-6,-5],[10,4],[10,-9],[-7,-7],[4,-7],[-4,-6],[-6,2],[-3,-10],[-3,1],[10,9],[-1,9],[7,-2],[-3,9],[-6,2],[5,9],[-6,6],[1,7],[5,3],[2,-4],[6,-9],[7,-8],[4,-6],[6,8],[-4,3],[4,-1],[6,4],[4,7],[4,-10],[-6,3],[-8,1],[-6,-8],[-5,-8],[-1,-7],[2,4],[-9,-7],[7,-3],[8,4],[-9,-2],[4,-3],[-10,-8],[-9,9],[6,7],[-4,-8],[4,5],[1,9],[-2,3],[10,-7],[-9,3],[-1,9],[-4,3],[-3,-1],[2,10],[-5,3],[2,5],[2,-4],[8,8],[10,7],[6,-3],[10,-7],[-2,-8],[-7,-4],[7,-3],[-3,9],[-4,3],[8,9],[-9,-2],[-8,1],[-7,-5],[-10,-3],[10,7],[1,-5],[4,-1],[9,6],[-2,-6],[9,-10],[-8,1],[4,6],[-10,-7],[8,-7],[1,5],[-8,7],[1,-10],[-5,-9],[5,-3],[-3,-3],[4,3],[-2,-6],[-8,5],[6,-6],[5,9],[6,3],[7,-2],[-8,5],[-5,-6],[1,-1],[5,-5],[-8,-7],[-8,-5],[4,8],[7,-4],[-3,7],[-9,6],[-4,-9],[5,-9],[-6,7],[3,-10],[1,10],[6,-1],[3,10],[10,4],[-4,-5],[8,3],[-2,-7],[4,4],[5,-1],[8,-1],[-1,-4],[8,-7],[10,3],[-5,1],[-9,-4],[8,-6],[2,4],[-3,-2],[10,7],[6,10],[5,-6],[-2,-8],[7,-1],[10,10],[9,3],[-2,10],[2,8],[1,-4],[1,-7],[-8,3],[-8,2],[4,-9],[7,8],[-4,-9],[-6,-4],[5,5],[9,1],[8,-5],[-8,4],[1,6],[-3,7],[-3,-6],[3,5],[-10,-6],[-4,-8],[-8,-9],[-2,-8],[-6,10],[1,1],[-2,-10],[-8,3],[-5,9],[-3,-2],[-10,7],[5,2],[2,-3],[9,-6],[10,6],[-10,6],[-7,7],[-1,-2],[1,2],[9,-7],[6,-5],[-1,-6],[6,1],[-10,-5],[3,10],[10,-5],[-3,7],[1,-4],[-4,-1],[-9,-8],[-8,5],[7,8],[2,1],[10,-3],[3,5],[-5,-10],[-8,-6],[10,4],[-2,-8],[8,8],[-4,10],[-7,6],[-4,-5],[-2,6],[7,-8],[5,-7],[-2,-7],[-10,8],[3,7],[4,1],[8,5],[-2,1],[6,-8],[-3,9],[9,4],[2,-3],[-4,7],[6,6],[-4,4],[-5,-5],[6,1],[6,5],[-7,-5],[4,5],[2,6],[10,2],[2,-9],[-2,-7]], dtype = "int8")#candidate|5212|(480, 2)|const|int8
call_5210 = relay.TupleGetItem(func_2494_call(relay.reshape(const_5211.astype('int8'), [16, 15, 14]), relay.reshape(const_5212.astype('int8'), [16, 15, 4]), ), 0)
call_5213 = relay.TupleGetItem(func_2498_call(relay.reshape(const_5211.astype('int8'), [16, 15, 14]), relay.reshape(const_5212.astype('int8'), [16, 15, 4]), ), 0)
func_4890_call = mod.get_global_var('func_4890')
func_4894_call = mutated_mod.get_global_var('func_4894')
const_5225 = relay.const([True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True], dtype = "bool")#candidate|5225|(540,)|const|bool
call_5224 = relay.TupleGetItem(func_4890_call(relay.reshape(call_5208.astype('float64'), [182,]), relay.reshape(const_5225.astype('bool'), [540,]), ), 1)
call_5226 = relay.TupleGetItem(func_4894_call(relay.reshape(call_5208.astype('float64'), [182,]), relay.reshape(const_5225.astype('bool'), [540,]), ), 1)
output = relay.Tuple([call_5208,call_5210,const_5211,const_5212,call_5224,const_5225,])
output2 = relay.Tuple([call_5209,call_5213,const_5211,const_5212,call_5226,const_5225,])
func_5229 = relay.Function([], output)
mod['func_5229'] = func_5229
mod = relay.transform.InferType()(mod)
output = func_5229()
func_5230 = relay.Function([], output)
mutated_mod['func_5230'] = func_5230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5229_call = mod.get_global_var('func_5229')
func_5230_call = mutated_mod.get_global_var('func_5230')
call_5250 = relay.TupleGetItem(func_5229_call(), 1)
call_5251 = relay.TupleGetItem(func_5230_call(), 1)
uop_5256 = relay.acosh(call_5250.astype('float64')) # shape=(16, 15, 14)
uop_5258 = relay.acosh(call_5251.astype('float64')) # shape=(16, 15, 14)
output = relay.Tuple([uop_5256,])
output2 = relay.Tuple([uop_5258,])
func_5265 = relay.Function([], output)
mod['func_5265'] = func_5265
mod = relay.transform.InferType()(mod)
output = func_5265()
func_5266 = relay.Function([], output)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2790_call = mod.get_global_var('func_2790')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_5313 = func_2790_call()
call_5314 = func_2790_call()
output = relay.Tuple([call_5313,])
output2 = relay.Tuple([call_5314,])
func_5315 = relay.Function([], output)
mod['func_5315'] = func_5315
mod = relay.transform.InferType()(mod)
output = func_5315()
func_5316 = relay.Function([], output)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3436_call = mutated_mod.get_global_var('func_3436')
call_5348 = relay.TupleGetItem(func_3434_call(), 2)
call_5349 = relay.TupleGetItem(func_3436_call(), 2)
var_5369 = relay.var("var_5369", dtype = "bool", shape = (5, 14, 3))#candidate|5369|(5, 14, 3)|var|bool
bop_5370 = relay.divide(call_5348.astype('float64'), relay.reshape(var_5369.astype('float64'), relay.shape_of(call_5348))) # shape=(5, 14, 3)
bop_5373 = relay.divide(call_5349.astype('float64'), relay.reshape(var_5369.astype('float64'), relay.shape_of(call_5349))) # shape=(5, 14, 3)
output = bop_5370
output2 = bop_5373
func_5374 = relay.Function([var_5369,], output)
mod['func_5374'] = func_5374
mod = relay.transform.InferType()(mod)
var_5375 = relay.var("var_5375", dtype = "bool", shape = (5, 14, 3))#candidate|5375|(5, 14, 3)|var|bool
output = func_5374(var_5375)
func_5376 = relay.Function([var_5375], output)
mutated_mod['func_5376'] = func_5376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_5394 = func_1821_call()
call_5395 = func_1821_call()
var_5417 = relay.var("var_5417", dtype = "float64", shape = (182,))#candidate|5417|(182,)|var|float64
bop_5418 = relay.divide(call_5394.astype('float64'), relay.reshape(var_5417.astype('float64'), relay.shape_of(call_5394))) # shape=(182,)
bop_5421 = relay.divide(call_5395.astype('float64'), relay.reshape(var_5417.astype('float64'), relay.shape_of(call_5395))) # shape=(182,)
output = bop_5418
output2 = bop_5421
func_5432 = relay.Function([var_5417,], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
var_5433 = relay.var("var_5433", dtype = "float64", shape = (182,))#candidate|5433|(182,)|var|float64
output = func_5432(var_5433)
func_5434 = relay.Function([var_5433], output)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5455 = relay.constdtype = "float32")#candidate|5455|(15, 12, 15)|const|float32
const_5456 = relay.const([[[-0.211495,1.481975,-9.939682,6.591127,1.695795,8.566057,-5.906922,-1.775563,1.454670,-1.043301,5.393784,5.413417,-4.927711,-5.873243,-3.826964],[0.373032,-3.576288,6.008039,-1.112762,1.042881,4.116539,1.792635,-3.312350,-0.732847,8.098084,-8.047378,5.877747,-0.129501,-0.646587,6.025151],[-0.311625,-4.277825,4.383425,1.200369,-5.094309,0.002643,0.782797,4.273909,-7.620369,8.160717,-1.217331,3.994482,-7.704942,2.506005,-3.645356],[7.891027,-8.617455,0.871921,9.445348,9.639560,-7.323842,7.377183,8.614897,6.065220,-6.404069,-0.225051,6.943883,8.530878,2.963769,-9.704396],[5.789093,-9.730155,1.490428,8.307191,-1.771813,-0.048204,4.879347,7.122219,-6.315337,-4.213893,6.543235,5.180017,-7.432547,-7.892697,-4.850029],[4.212120,-9.822602,4.609436,-1.190991,1.620072,4.732214,4.723571,7.999762,7.303566,4.722754,2.735446,-5.899213,0.916044,2.299456,-9.173948],[4.082356,7.997379,9.346693,8.878193,8.070243,2.342348,5.359930,4.807514,4.469825,-1.463911,-9.445508,9.117429,5.811225,-2.811134,1.950548],[-0.601052,-0.326401,-9.889397,-6.272423,2.376812,-5.585385,-4.957540,1.993732,5.737527,-4.505575,-5.778663,1.148611,-7.747112,-9.206129,2.535130],[8.203894,-3.115668,4.421099,-3.907388,4.359539,1.778636,-1.105409,4.951206,1.218295,-6.765700,-4.585925,-7.542327,-9.088450,-3.976420,7.840227],[-3.538803,4.165220,1.588205,-0.734500,-2.273240,2.227950,0.940996,3.551053,-8.845522,9.005095,6.634452,6.405145,2.219659,-9.182816,-4.744800],[3.745474,-4.371661,-9.684930,0.285626,9.938547,-4.430452,1.760823,-0.024642,-6.724252,5.903974,3.183453,2.735097,5.439131,4.058078,2.286342],[8.980684,-3.859261,8.822408,8.419180,6.156160,0.411299,-2.217808,-3.078792,2.248715,0.978424,-6.120700,5.719805,6.789531,0.037160,-6.621105]],[[-4.787525,3.733430,-5.329728,3.512203,-7.522223,-2.714983,-9.507207,-7.956818,-4.980753,6.364929,2.301328,-0.713543,-3.193439,9.372383,-4.393869],[-0.922423,5.218488,-9.979930,-2.545047,-7.896228,-5.806960,-3.671561,3.739713,6.908679,4.141379,1.269048,5.629891,8.347495,6.951983,8.394864],[1.192870,-4.417685,8.357411,-7.077086,3.647996,-9.409363,9.708482,-4.213571,-0.956568,-5.967811,7.593460,-0.990475,-2.777286,-8.654607,-3.835141],[4.337208,1.338554,-4.812788,-2.435382,-1.712597,9.540940,-4.206153,-5.994318,0.340563,-7.978837,-5.548504,7.301009,-1.528282,-6.781696,2.812247],[-2.634373,-1.944040,5.409491,6.118629,7.668738,9.868907,-0.076589,-3.584226,-7.716237,2.307302,2.739237,-0.830620,-0.583064,-5.507898,4.599538],[4.034941,2.074819,2.052841,7.585162,-4.950592,0.674830,5.406322,8.113431,-9.987082,-5.026774,1.690849,0.938054,-2.055811,-3.419620,-8.360796],[6.411310,-9.365204,-8.821324,4.347205,-5.727861,-8.359661,2.348545,1.015437,8.683357,-9.248937,-5.926277,-1.934190,-6.591283,0.244387,1.992549],[-8.466036,-3.281674,9.001804,3.526201,-3.854498,1.555038,3.084705,-0.364370,9.247836,-2.499336,6.973082,0.120610,-2.444496,1.066003,8.513039],[1.419190,8.353618,-0.625449,-5.152590,1.552107,7.449513,-8.070689,1.507557,1.731605,-6.142370,-6.156731,-0.915928,5.031889,8.273589,7.753467],[-4.833303,3.584618,-5.386454,-3.936331,7.615293,2.212894,-5.269285,8.188022,-4.983626,8.836292,-7.696057,2.109710,8.820436,4.763168,7.669339],[3.248702,3.647527,9.775998,-0.397688,4.907931,2.008861,-5.528726,-6.677030,4.184195,2.310830,8.733666,-4.892632,-9.246576,-5.847917,4.664296],[-3.468357,4.918783,2.463996,1.460996,-7.220203,8.467168,9.596224,-6.897526,0.685671,8.432087,-2.522877,-8.115732,0.056894,-9.845184,-1.875288]],[[8.279262,1.318253,-2.631353,3.799230,-4.160480,-3.816344,5.677354,-3.255835,5.857234,9.123718,-7.633318,-8.933614,-1.645438,1.141919,6.499349],[-1.668290,1.750039,3.516142,-0.925674,2.420968,-3.848136,-6.619064,-6.527185,7.060922,-6.093187,-5.010238,-1.165527,4.365614,-7.644107,-4.784942],[-6.059683,-3.073608,-7.493144,-3.614663,-5.423971,3.513779,8.495898,-7.297992,-4.516253,-9.139017,-7.289955,8.475584,3.283897,6.724311,-6.131991],[7.929842,8.413630,-9.181063,2.476487,-9.318121,-6.576082,-1.314271,-7.429076,4.629303,1.699792,6.122203,-5.126820,-6.165058,-4.407417,7.391712],[3.291485,6.993506,-1.213930,-7.221847,-9.691665,5.832857,1.679604,6.539065,-9.139820,-6.499071,-4.599487,5.510811,1.040454,-2.390277,-5.967674],[-5.382960,-1.200020,-9.059904,0.079553,-6.872998,6.186990,-4.324209,8.610708,-7.252138,1.849586,2.936333,2.707059,-2.319153,0.995714,-3.925004],[8.219414,3.249767,-8.319301,-3.829665,5.991329,-4.526153,5.964972,3.258679,-8.499849,-2.954764,-2.423618,1.665726,8.215366,-0.277981,-8.907846],[-9.581862,0.181792,7.084775,0.346625,7.839071,-5.181685,8.773761,2.007975,-6.964275,5.710274,1.837655,7.944042,2.325346,-9.390163,0.631409],[-8.717892,-4.241038,3.287085,6.802666,-4.274061,2.140788,-8.724612,-0.713789,7.897501,2.074769,8.453230,2.604837,7.174064,5.509170,-3.156145],[-1.063403,-6.609960,1.646459,-1.133105,-9.507360,9.190797,7.291457,6.496127,2.239020,8.237537,9.823439,7.237159,1.419922,6.156000,6.696037],[1.640415,-1.942667,-6.467651,9.715654,-0.736670,7.834133,-1.390545,-4.123804,-5.325944,-5.623815,-7.915572,5.053448,-2.359910,3.707825,9.984334],[-8.927708,-3.648826,8.686483,-4.358306,-3.452412,-2.372669,-2.742543,-6.200633,-3.738765,4.844691,-3.518794,-3.405043,8.134875,-3.706288,-4.687931]],[[4.062964,-2.768861,0.505738,0.104865,1.809878,4.843809,9.420524,-0.483910,-9.421968,9.699770,1.438904,5.631644,7.008113,5.666066,8.929539],[5.784034,-1.887748,1.179222,7.676115,5.568834,-3.279292,4.160611,-8.618116,7.517845,-5.392673,-9.067651,4.022703,-5.954620,8.233919,-9.689987],[7.770843,2.111010,-9.964831,-7.138021,2.838409,-3.887706,-2.628108,-2.614772,8.693810,4.468811,-2.794308,0.218037,1.193212,-3.674667,1.013469],[-0.426524,-0.261928,-1.231595,-3.615399,6.621761,-8.975695,6.960290,2.697175,-7.190022,5.804307,-6.395553,4.210831,3.564635,6.924434,5.463324],[5.016372,-9.864280,-0.247448,-2.918352,0.442294,-5.210208,6.487664,-2.600678,5.783719,7.418431,-3.206349,-0.584633,5.606441,-1.433835,3.201386],[-3.887158,6.028062,3.000240,7.136384,-0.773164,2.425774,0.404104,-6.247256,2.680030,-2.560376,1.484007,-5.897634,-7.612412,5.084486,3.164787],[2.799963,8.305839,-4.044321,-4.276091,-8.379512,-9.483370,3.826555,-0.952967,3.150710,-6.908862,-4.819759,-9.879231,2.356884,7.165442,7.157727],[-7.595451,-3.350253,-0.048167,-0.108320,-3.172135,5.993907,-9.712700,-8.215022,4.497859,-6.197647,3.617912,9.836873,3.458236,3.101808,4.273895],[2.839688,2.499317,-1.268847,-8.643447,-9.146007,3.187699,9.833187,-9.753626,2.159701,5.938060,4.325328,-1.703280,-4.880976,-4.959901,-2.641260],[9.450087,9.608706,1.158617,-4.606057,-7.833941,1.657320,-0.937228,7.677265,-1.687655,-4.966237,-3.753103,4.160089,-9.313713,-2.764269,3.550857],[5.138119,7.595150,0.394075,-4.975685,-7.418628,-6.262302,-6.852191,2.156312,6.841906,-3.550246,1.874238,-4.974059,-4.333760,1.457981,8.761559],[4.482325,0.609568,7.006979,-7.137593,-6.779344,-4.253100,-5.134786,3.978551,-4.647613,8.996986,1.130605,3.004355,9.772311,-7.972010,-7.674063]],[[0.424113,-5.068329,-3.784446,5.808538,2.778864,-2.460304,-6.867280,7.896786,-9.561397,7.771726,-6.177977,-0.570942,-3.590505,6.602682,-8.402075],[-7.307728,-6.537822,-5.368483,-4.593427,3.799714,9.597804,2.794522,-1.335305,-7.130577,-8.080523,-0.145597,-6.786227,-8.277953,9.124576,0.821467],[1.543120,0.400008,0.509609,8.832277,-8.037909,6.446240,-1.204693,2.882262,8.913372,5.096126,9.380927,0.189328,-0.466398,-8.013121,7.467924],[-2.312870,3.210785,-8.180892,5.642546,-1.050307,-1.805673,-3.636320,-3.411015,2.969964,5.494237,3.931652,6.781915,-9.928936,-3.804249,8.950713],[-0.250711,9.910955,2.040467,-7.967405,2.657114,-4.303535,0.605490,-1.823861,2.295507,2.997228,-1.967709,6.811431,5.117404,4.565601,7.362340],[-9.130903,-6.022084,6.989055,7.291213,9.935184,1.707485,0.659954,-9.870932,-7.866318,3.033449,-0.653575,9.591010,4.585287,0.249528,-4.602477],[0.354363,-2.778717,-6.693190,-9.425611,-6.116957,-0.052232,7.959246,-1.265758,2.145129,5.929768,-1.807603,-8.684582,-5.204589,3.400589,3.272377],[-1.416192,-4.695950,-1.582569,-0.068523,-8.319478,-0.991166,-5.495334,-2.830666,8.758862,-9.820442,1.567140,-4.462301,-5.461361,0.333629,-8.368349],[8.302114,-7.307930,-3.315244,7.879278,1.424324,7.813519,-4.066666,2.628024,-7.402125,0.991445,-3.607095,3.616767,-3.868620,3.447559,4.167574],[-4.220767,-7.083486,-4.593249,-4.139183,6.038555,-7.146167,3.428579,0.686657,9.587327,-5.184850,-3.095494,0.186658,9.527022,8.489471,-3.194095],[8.076561,7.925121,8.907141,-3.954592,5.798288,3.833841,-6.643380,8.461930,1.988703,0.624014,3.110463,-9.189654,5.500791,-0.131264,-9.913483],[-4.773945,-7.333458,3.962774,7.633596,8.909338,-4.882731,-3.691165,5.857462,-1.002160,2.272518,-1.892227,9.423659,0.172549,2.974933,6.354529]],[[-5.675586,0.855339,9.730566,-4.827378,-0.552528,-7.493284,-8.631312,3.063063,-5.436317,0.047788,9.438648,-3.549600,-9.181296,9.663499,2.603961],[-6.800381,-6.726654,-6.291380,-0.539678,3.934949,-2.751129,6.488907,-9.690774,1.212207,-0.645750,-1.580058,-8.600328,-4.956778,3.935749,-2.084489],[-2.052993,-1.714363,-2.111841,9.723011,-4.857052,9.603629,-2.996211,9.200871,1.929045,9.153506,5.171297,7.264377,-2.986042,2.911913,-5.152607],[-8.246552,-0.364497,3.771724,-5.498316,3.765316,4.028431,1.254433,-0.524076,0.294486,7.265039,9.603237,-1.228108,5.870787,3.708860,-0.106012],[-2.979714,-5.528519,-6.431616,-0.397147,-1.067128,8.058282,-8.367869,0.407337,1.049013,6.949631,1.279435,-8.061924,8.619768,-9.018805,-9.636594],[-6.284807,-7.815131,4.754473,3.460168,4.726073,6.199699,5.233325,1.489407,-4.305263,0.883619,-5.633000,4.479762,0.587938,-1.570349,0.625098],[-3.697414,6.752351,-8.511453,3.543846,-1.792372,-6.153710,2.945590,-5.085193,-0.774292,-5.054706,-4.602024,8.586327,5.566188,-0.027582,-5.640565],[-0.892737,-4.642941,7.624826,-6.282331,-6.265028,4.351790,-5.995123,-0.306759,-2.438462,-8.617409,0.978352,4.830373,-3.310621,9.149244,-4.530356],[-9.379155,-6.024236,-4.711158,9.851836,6.768559,-0.938304,-0.155486,8.609580,1.703713,-4.465345,-3.059187,-9.847300,-4.776182,-0.311406,5.639492],[6.210069,6.721386,-4.938491,-1.506596,-4.482396,1.066656,-9.682804,-2.261850,3.264112,9.946881,6.648568,3.759175,4.909249,-3.503847,5.746531],[-7.804236,9.809833,-3.650554,-1.663061,6.787329,-9.459073,7.834216,0.613559,4.209932,2.051045,-3.849830,-5.424224,-7.304834,4.321388,-4.835467],[-6.577090,6.066342,-3.782178,-2.009910,-9.730679,-0.645943,-7.207597,-8.699638,6.915975,-5.954724,-5.921420,5.066027,-1.057028,5.855977,-6.704403]],[[-2.678583,-1.939749,-3.395124,-9.499136,3.331323,-3.700614,3.364618,3.175905,-4.666423,1.211344,7.496433,5.597814,8.838974,-4.375778,7.138505],[-2.568387,-9.550644,-8.012833,7.306950,4.995219,3.382926,-6.970791,-2.192458,-3.665829,-4.157566,-5.192420,-3.684506,-2.756206,1.165570,-9.212725],[8.318148,5.859491,2.077981,-9.183369,-1.136958,-2.346059,-2.013047,-6.943522,-3.283505,4.817651,1.590964,6.613323,-9.346605,2.737129,-3.970969],[-2.905775,-5.756345,7.728597,5.763864,-9.784585,9.791837,-9.660768,-1.374425,5.972893,2.096648,6.177659,-0.472096,-1.378928,8.330132,-4.955765],[4.095310,0.852330,-4.191580,-6.059956,7.623392,3.688145,7.598502,-5.713244,9.575862,-2.575534,-5.863551,3.703535,-9.146862,9.460497,1.475743],[-3.096172,5.379252,-5.096060,-1.582287,6.860716,7.748438,5.790036,-8.427592,-2.111171,1.077338,8.242098,1.822128,-5.091516,-0.985534,0.887702],[1.344206,2.723751,6.084489,6.124296,-5.133108,9.734937,3.037024,-6.787199,-9.655722,2.080864,9.933165,-3.421796,0.506711,1.334861,-3.663749],[1.042304,-9.007698,-4.904558,-5.131926,0.044620,1.959450,8.448393,3.577775,-3.097660,-7.989987,1.722346,-3.816212,-5.379852,-5.338713,-7.098093],[-8.985431,2.012027,-8.626132,7.249874,1.353175,5.578146,4.491404,0.710894,-2.670725,0.852590,-5.360550,-4.535850,-8.065556,-8.517442,-7.216367],[8.601235,1.084097,2.935046,0.077906,-3.109717,-8.876633,9.022143,-1.831021,-3.949271,-4.611751,-8.319145,7.350136,-8.743260,7.981375,-4.696483],[2.770322,2.353654,-9.925438,-4.617887,0.176252,-7.712905,-4.164109,7.148827,4.826560,1.044111,8.192107,-0.888832,-4.992885,-2.797759,6.203748],[-2.459407,4.649164,5.914461,-1.799234,5.750202,7.845398,4.172721,0.230524,-3.165522,3.670561,-7.196746,0.011284,9.488644,4.773943,-3.114966]],[[-6.620328,8.419981,-0.853821,-1.118782,-5.317479,-6.819724,2.949756,0.228924,-8.994216,3.831979,7.013250,3.301146,-5.899445,4.427150,-4.550029],[5.812417,-5.812973,-2.313838,0.423631,5.573838,-9.501419,6.890647,-5.264063,-7.556196,5.592832,-1.480846,-5.923531,6.864155,-0.523421,-0.276734],[-3.695764,0.116298,1.679034,4.929017,-3.415645,-1.453845,-3.476794,5.191685,3.987238,-2.795771,7.948902,4.936418,-5.330014,2.427592,3.941421],[0.223031,2.725495,-8.310420,3.513006,7.340026,1.039630,-2.245744,-9.519206,-7.984826,-2.896906,-4.389826,1.967644,7.872268,-3.561523,-1.222323],[-7.949875,-6.086367,-0.327819,-6.693778,-0.965059,-8.671857,-2.263345,-4.830586,-1.498959,-7.467792,7.889703,-7.335959,-5.817089,-8.767158,-0.570520],[1.545061,-9.472048,-4.863143,-1.462151,-5.850233,6.118495,-8.887430,-3.391199,-7.759473,9.959405,4.295555,4.492897,8.059092,5.142415,-9.843301],[-7.405421,-9.995408,9.586469,-9.320079,-5.549856,9.232461,0.732147,2.265129,-3.170026,-7.906775,-7.868148,-9.379562,4.422729,9.697312,2.297654],[6.757104,5.386326,-4.719918,-7.641524,2.248131,-8.150093,-1.345115,-7.843108,9.073835,6.399747,0.799102,9.049479,1.308259,0.990766,1.645311],[5.826653,4.418819,-8.229850,4.634485,-5.088377,9.189499,4.870111,-7.235155,7.057675,-3.411277,7.635883,-8.264321,7.480757,5.197036,6.014560],[6.159027,8.180950,6.709390,2.116798,6.289603,0.856598,-9.448860,-9.488045,3.415782,-6.017860,0.220805,7.081012,-0.260944,3.056043,3.283315],[-3.662324,5.424982,3.208623,5.820902,-3.263882,-7.846530,-6.235397,-2.846886,4.925119,-0.941706,-3.625162,5.341219,-2.756704,-0.950220,-0.881035],[-6.191195,2.440125,-6.166485,-6.624865,4.540523,-0.576256,5.845539,-7.232890,-6.538682,6.453596,3.346620,-6.064493,8.861798,-7.350765,-5.450800]],[[9.396703,8.415779,0.394377,-3.106924,6.919839,-3.638740,4.994832,-5.412008,8.751903,-7.533673,-5.310770,-9.963298,-2.225400,9.495883,-6.486744],[9.650605,-3.611660,-5.174800,9.443645,9.624317,-9.756353,-0.903817,4.196739,0.024641,8.139665,1.845345,8.300683,-8.739842,1.714509,-2.420402],[-8.556785,-5.797310,-3.102607,-6.762898,4.443152,-6.525735,1.845343,3.505397,-8.959744,2.906648,-8.050268,2.988112,8.403780,-2.394373,4.521352],[-8.497272,-8.412610,-2.068985,9.814600,-1.199471,-8.508980,-4.342904,-5.025427,7.251825,-3.109864,-6.726694,5.342384,-1.956234,-7.382904,-6.759376],[7.686386,3.119022,6.721045,-2.309631,-0.141679,0.770612,8.459540,-0.840069,0.758237,-2.345700,-8.121405,8.932637,-1.743439,-8.684300,-0.930356],[-4.110557,3.796225,6.071550,3.733104,9.436218,0.831183,6.438667,-0.622563,-8.297625,3.131563,1.141043,6.197664,7.735444,-5.192740,-8.415109],[-7.168403,-7.257279,-8.346145,-6.048009,7.378861,2.946174,-0.296435,-3.689823,-0.944375,5.287232,9.935572,-5.358670,2.285927,0.942393,2.643447],[-9.156037,-4.896563,-9.814242,-0.722907,3.056734,-6.525135,-3.959140,0.038424,-4.681236,9.432074,4.059809,-0.084973,-0.306633,6.549315,-5.532559],[5.085285,9.285569,4.775342,8.159403,-0.225141,-4.712502,9.350245,-5.436149,6.977792,8.572159,-3.197804,1.656116,-6.249511,-9.918029,2.460587],[-4.839719,0.949258,1.670318,5.542441,-6.083415,4.687050,5.196679,-2.006322,5.894012,-3.825886,-1.699370,5.252518,8.504137,5.953271,1.040374],[-8.568032,-5.094310,1.358557,9.213383,-6.941513,8.532949,-8.358126,-1.888680,-8.146044,-3.353745,-6.886150,2.329939,-9.226162,0.176054,-3.637709],[1.322860,1.139822,-8.965679,2.190223,2.785133,1.952906,8.108772,3.446615,-3.718827,1.466843,-4.623302,-5.079846,8.580146,0.154223,-0.450396]],[[5.574773,-4.046942,9.929688,-6.202669,-7.262325,-4.733586,-6.225080,4.012367,-7.564379,2.122408,-0.282131,2.371967,0.250405,-1.071839,-5.002891],[-6.518499,-6.903822,-4.594722,1.038720,-3.018139,-2.609600,5.183851,-6.683059,0.620424,3.521119,-5.735383,-7.471275,-3.405566,-2.233642,-3.206102],[5.071563,-6.627095,-3.591291,-0.555766,4.732471,3.039843,3.893994,-4.513523,-0.912158,-5.814654,-0.564985,1.905214,9.192502,-9.853538,-4.448255],[-4.645594,7.479070,6.435038,3.539550,7.403594,-4.251753,-6.049521,-7.818275,4.502787,-3.141721,-4.664242,-3.825640,-7.021573,5.440484,5.202007],[9.072714,0.940868,0.515626,-8.793642,-7.319738,0.876466,7.195372,1.161781,8.807140,-6.279894,-9.708739,-5.467633,-2.455864,-9.358402,-3.605465],[-8.461396,8.209403,-2.328232,-6.898614,8.635890,7.383444,-0.381126,3.292665,-1.509624,-3.827690,-7.793041,7.841105,-2.247325,0.425246,0.003060],[-6.251664,-8.303223,2.995322,-5.387229,6.026196,7.560300,8.696409,8.579991,6.801130,7.633868,-7.094969,-8.814623,-6.089554,-2.240773,-7.656637],[0.249349,2.265437,-4.388997,9.106577,-1.863386,4.437022,3.050311,5.557182,0.399541,-5.954199,9.754562,-2.187906,-0.985799,-4.601305,0.867059],[-9.325210,9.320344,-3.878330,-5.063046,7.961716,-2.363986,-6.237136,5.915169,5.677880,-9.404391,9.216318,-8.476836,-6.541064,-2.302415,9.028686],[8.691374,9.217915,6.063893,-0.091576,4.420654,8.030428,-7.034248,5.034387,1.780728,-6.882183,-2.001038,9.375273,-9.602811,8.129092,-7.063748],[-0.187289,-7.551169,8.168383,7.547276,3.746536,8.887265,-0.998889,4.353851,2.617866,-7.408265,-0.147309,3.969798,-8.133530,6.181035,-1.396079],[-9.950790,8.290376,-5.055984,7.672961,0.264655,-5.958934,7.561012,-5.686351,-2.060905,5.621175,-6.641464,8.830544,-9.812775,8.215572,5.622833]],[[1.760055,-5.483101,-0.621156,4.984308,-1.555912,6.338428,6.944541,3.326190,2.464559,3.628877,8.863703,-4.178541,2.022549,-9.103127,3.269015],[1.117824,1.113854,6.638706,-3.113345,7.369588,0.508702,-3.751707,5.016680,5.181298,1.582258,-9.613878,-5.299690,-4.202361,6.224804,-6.297381],[-6.524304,4.651907,5.699300,-1.388650,-3.842162,-2.952899,-2.379936,-3.912827,-1.480906,-6.099835,8.560283,-5.684307,7.149589,4.968497,7.678895],[9.367109,9.994142,-9.973151,-5.460749,2.398919,-7.214336,-6.968955,-7.483190,0.082898,-2.045552,-2.720463,-2.502421,3.440591,8.711403,-6.818106],[-1.281056,3.899450,-7.895037,-0.116412,-8.949535,3.733988,1.129900,7.474980,3.102389,0.884228,-0.984043,3.312910,-9.233166,-4.648167,4.858706],[0.495390,4.060770,-6.232329,-1.922226,-7.496197,-0.857489,3.148834,2.006986,7.551444,2.706915,6.318614,-5.987279,-5.418996,9.104245,6.728854],[2.911594,7.386894,0.362479,6.096243,-5.031375,-8.279818,2.084340,8.826619,-4.206953,4.217363,3.134289,2.936263,8.001832,-5.544400,-6.706467],[-6.301471,-0.979888,-3.509019,4.870246,3.687554,4.084912,-8.219042,-6.893913,-2.186127,-8.731650,-5.171756,-8.444231,8.970697,-0.982448,-2.090738],[0.174150,-1.855806,-9.373934,5.348806,-0.031498,-5.535186,-6.755430,9.354907,-4.078426,6.761191,7.494113,-3.738698,1.513726,-5.595219,8.061870],[2.822092,8.960659,5.572203,-6.812010,3.173339,4.010845,7.540194,-4.836997,-5.565760,-4.681566,4.831943,-6.152663,6.744621,1.722196,0.674042],[-7.530490,-2.715432,-5.261305,-9.282215,-3.621173,-6.030511,5.499950,-2.889280,-8.429876,-9.978100,-8.172789,-1.932393,3.093827,3.772384,2.129547],[6.915658,0.971954,8.845271,8.751064,-4.723577,5.919976,-8.881023,-2.302187,-8.954484,7.491326,6.616993,-2.870980,-9.330023,8.259837,1.299304]],[[-4.762910,7.002610,-6.642116,-2.279346,-1.679373,8.176833,0.804660,-0.330678,-8.030483,-0.371542,5.764732,-6.510787,9.925802,4.123104,-9.661754],[-3.556784,7.543677,-6.874946,-2.471114,-0.643900,4.388830,9.418341,9.473800,9.252472,-6.620043,9.166749,8.279727,-3.585115,4.900927,-6.289798],[-8.338595,-4.584606,-7.406161,5.700522,6.411213,0.854049,3.900024,1.500021,-6.448852,0.478965,-8.052318,-1.733062,-9.731313,5.747242,-0.557048],[6.290876,-8.431043,-3.543539,-5.075552,3.575619,0.813252,-3.103960,2.551278,8.047022,-5.986612,6.205535,-6.512932,5.251406,-2.972890,-8.742009],[-1.500007,7.902538,5.454589,0.937204,1.797873,-2.653073,7.278938,6.368911,-9.228854,-4.260187,3.119429,-0.443825,0.897728,-1.499197,-3.927740],[-3.709907,-7.567187,4.166024,8.812223,4.498636,9.049009,-3.005136,3.901262,-3.626411,-3.884801,-6.320595,-9.091608,3.536775,-2.786877,1.312368],[-3.995998,3.152348,7.464745,5.714709,4.836816,1.528775,-4.332238,0.956269,3.620375,4.285133,-5.768233,-0.126186,-7.887387,-3.593218,0.475519],[7.555323,9.705005,6.859658,8.455470,-2.100526,9.962112,-5.147052,0.071847,2.477203,8.997163,-8.180138,6.124620,-7.021187,2.079768,-2.575496],[-5.967500,-9.336603,4.572088,-7.553231,-3.558591,4.762392,-4.335030,8.006455,-4.312188,-9.604700,-3.754757,3.268862,7.188219,4.243939,7.310424],[-6.989238,-5.388539,6.859762,-2.852459,-1.759392,-8.821573,-1.421701,8.794884,-4.034853,9.631951,1.121493,-9.816371,0.162154,-3.132761,-8.985549],[-9.608045,5.363942,0.118137,-5.510749,-5.992338,7.000496,2.311817,7.147275,1.051208,-5.757853,5.889846,-7.640595,-8.212779,0.741337,8.812316],[-6.283873,-4.633237,-8.048638,9.401421,1.865871,7.283646,-4.185927,1.660712,-6.770927,-2.050081,1.805670,-3.118739,5.433292,8.570753,-9.372372]],[[-2.332507,-6.676009,-2.201908,-2.442390,-7.389379,-7.511513,-2.039964,-4.459777,-6.935608,2.679782,1.115176,-8.258365,-3.052998,-2.793092,0.528036],[-1.533465,-5.566209,-7.844155,5.302089,-5.382795,0.608787,-9.098001,8.170477,8.381215,4.101130,-7.208495,5.107722,-7.925956,-3.689988,1.823917],[8.318579,3.710249,-0.949422,0.910276,8.639252,0.542048,-4.861982,-5.590915,-0.982512,0.279647,-1.404989,-5.720865,3.766691,-5.072102,-0.801772],[8.817309,4.462530,7.462078,-3.554685,-8.660491,-0.937436,-2.460192,9.275614,-5.100556,-3.630446,2.053006,-4.834657,-0.007549,-2.221435,4.425300],[-5.582202,8.043572,-5.737699,-1.029988,4.918540,-4.206886,-6.554544,-2.378234,9.962695,-7.449350,-8.488262,5.918733,7.949380,-9.833224,-7.676699],[-0.900796,-2.379947,-7.202742,-8.396144,-2.190713,3.748956,8.850310,0.850051,8.444530,4.324277,2.023333,2.036306,-1.145126,-9.998907,9.716230],[-9.729302,-3.425927,1.525495,5.071638,9.499807,5.775342,-6.360846,-4.338538,-2.132565,7.575825,3.167725,3.187382,7.229629,-2.692681,0.822068],[-6.954388,7.664067,-7.108707,6.882283,7.953165,1.534757,-2.786050,1.093690,-2.383774,-8.214186,2.860484,-7.116334,3.402063,-9.865465,6.502599],[8.110080,-8.077681,-0.615694,0.645981,-1.287790,-1.687448,2.309606,-4.917850,-1.304794,-0.720173,-8.229479,-7.381840,-5.848136,-6.568665,6.823904],[-8.534751,0.942567,-1.953041,-4.976986,3.383116,-6.339648,-4.842436,-4.087213,-1.265670,6.303005,-3.720186,2.966483,-7.956618,-1.032355,-7.640754],[1.579108,-7.005161,0.737410,-0.003134,-2.343386,2.739565,-5.359777,-1.656545,-0.891213,0.247903,5.923552,6.625252,-0.202303,-6.514236,-6.305801],[3.970562,-3.637296,-2.971046,-2.517544,5.351572,-9.343560,4.701658,-7.525549,-3.064101,-3.888383,8.910351,3.736035,-3.472167,-1.160120,-5.693325]],[[-3.193534,-2.838654,1.313143,-5.422496,-1.199382,-1.890217,-4.205836,3.755829,6.544627,9.537662,7.427351,7.817065,4.901520,-7.810773,-6.130085],[-1.548855,-3.399537,7.904909,2.440494,2.972611,9.382494,0.891608,7.151706,1.144296,-1.952728,2.282770,9.269211,-0.741070,-8.497323,-6.428653],[2.278270,1.893027,-1.624882,5.341937,0.182143,0.413319,-5.515184,-0.445076,0.503314,-9.288205,7.392428,0.559368,-5.708721,8.815718,-8.460432],[0.557953,5.807960,-3.588346,-7.287421,3.395863,-8.439055,-2.554539,6.204264,0.269497,-9.196232,-0.473772,0.580279,-1.234229,6.252003,-6.321144],[-7.503663,2.555178,6.693126,0.474943,1.348327,0.720810,3.997417,-0.321889,-5.507582,1.141988,1.880721,-7.414806,2.422074,-1.523047,8.141052],[-4.359149,9.864022,7.875392,2.512548,-1.578067,2.686260,0.767826,6.615743,-1.022235,3.078252,7.620080,8.245892,7.918034,-5.756495,-7.160293],[-1.149159,8.839907,-1.154558,-4.018581,3.779379,8.326852,-2.334981,3.138604,-8.811185,-2.016074,3.637520,4.049971,7.224382,2.997273,-1.522406],[8.866312,1.120150,-0.170738,4.375537,9.396252,1.880306,-1.435620,6.347070,-2.786725,6.912929,1.449355,-6.057899,8.450487,8.203443,7.880679],[-4.722426,5.649276,-4.290465,-1.582545,-0.340831,-0.535493,-4.623320,-4.994457,2.655817,5.679494,8.361436,6.278845,5.637713,2.345778,-2.052650],[8.732364,-2.644577,-7.820181,-2.131112,-3.950456,-2.853628,8.236323,2.261777,2.969724,-0.622151,2.780401,7.229508,1.643351,-6.531064,-2.913573],[1.066616,6.771232,-3.152150,-9.241094,-8.393785,3.989920,-0.851886,5.528411,-0.007442,-2.867587,-0.585886,-3.173392,-1.822175,-6.243039,4.990952],[4.709897,-7.166899,-6.082634,-9.167956,-5.978691,3.163206,-8.456404,-5.863075,-9.537992,-8.256763,9.304193,-4.153567,-1.033568,9.717664,0.073500]],[[2.667106,5.899875,-7.845698,-6.384983,2.935039,5.060853,6.931772,-7.144593,-4.253128,-5.691095,2.641137,9.662016,-6.233564,-7.658409,-8.571104],[-1.967018,6.977039,-8.773206,5.263765,-5.029592,8.132205,6.351398,2.173728,-7.628825,-3.521700,-9.192071,-3.857722,-5.767074,-8.110505,-1.930269],[-6.911090,-1.528339,-1.861721,2.750778,-8.649050,-8.328336,-0.349481,-7.328809,4.735130,2.986490,1.334935,6.280838,1.299812,-3.236020,6.169180],[-8.746340,7.454983,7.710498,1.605602,8.830077,-4.938278,1.632858,-4.143445,3.609436,-4.873142,4.660206,-1.595476,2.886321,-0.504373,8.284091],[-9.755395,-4.325061,3.603197,-6.811950,-2.663534,-6.365172,6.285954,5.744873,2.154374,-9.926332,0.022455,2.433352,-1.747535,7.119610,6.569777],[-1.724232,6.305469,8.478976,-0.342048,4.198390,-0.273816,-8.911957,-2.367689,3.768907,-7.963600,2.795575,4.863412,7.899562,-2.501933,6.240129],[-9.264155,2.874405,-1.614455,-0.466133,-8.945786,3.689585,9.226373,7.971682,-9.983706,7.085115,-0.800141,-2.665141,6.990849,8.544810,5.761221],[2.583036,9.538761,1.538611,-6.397284,-7.743585,5.319474,8.712774,9.399161,-9.888395,2.071166,-5.353516,3.056840,0.410080,0.807121,-0.734285],[0.085109,-3.678785,-5.784796,-6.565991,7.878777,-0.481469,8.102669,9.044554,-8.059393,-4.062422,6.002650,8.854842,9.216411,1.311098,7.182935],[1.959028,-4.440542,0.305071,1.833171,6.713504,0.268811,-5.683750,8.943018,9.510844,6.412033,3.189259,3.652783,3.379314,6.960959,6.165382],[-9.454839,-5.092643,-4.940489,-6.629502,8.613287,-5.835543,2.893578,0.872079,-4.865932,-1.469778,-7.490763,-6.713858,-6.631766,5.121939,-3.723552],[-3.882376,9.887201,1.571019,4.840785,-7.078574,1.932340,5.140587,2.691113,7.952518,5.330434,4.415545,7.673053,5.424720,-1.132527,-9.508465]]], dtype = "float32")#candidate|5456|(15, 12, 15)|const|float32
bop_5457 = relay.floor_mod(const_5455.astype('float32'), relay.reshape(const_5456.astype('float32'), relay.shape_of(const_5455))) # shape=(15, 12, 15)
output = relay.Tuple([bop_5457,])
output2 = relay.Tuple([bop_5457,])
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mutated_mod.get_global_var('func_5463')
call_5464 = func_5463_call()
output = call_5464
func_5465 = relay.Function([], output)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_5477 = relay.TupleGetItem(func_2901_call(), 0)
call_5478 = relay.TupleGetItem(func_2902_call(), 0)
output = relay.Tuple([call_5477,])
output2 = relay.Tuple([call_5478,])
func_5587 = relay.Function([], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mutated_mod.get_global_var('func_5587')
call_5588 = func_5587_call()
output = call_5588
func_5589 = relay.Function([], output)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_5674 = relay.TupleGetItem(func_2609_call(), 0)
call_5675 = relay.TupleGetItem(func_2611_call(), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_5677 = relay.var("var_5677", dtype = "int8", shape = (3360,))#candidate|5677|(3360,)|var|int8
call_5676 = relay.TupleGetItem(func_3213_call(relay.reshape(var_5677.astype('int8'), [3360,])), 4)
call_5678 = relay.TupleGetItem(func_3216_call(relay.reshape(var_5677.astype('int8'), [3360,])), 4)
output = relay.Tuple([call_5674,call_5676,var_5677,])
output2 = relay.Tuple([call_5675,call_5678,var_5677,])
func_5688 = relay.Function([var_5677,], output)
mod['func_5688'] = func_5688
mod = relay.transform.InferType()(mod)
mutated_mod['func_5688'] = func_5688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5689 = relay.var("var_5689", dtype = "int8", shape = (3360,))#candidate|5689|(3360,)|var|int8
func_5688_call = mutated_mod.get_global_var('func_5688')
call_5690 = func_5688_call(var_5689)
output = call_5690
func_5691 = relay.Function([var_5689], output)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mod.get_global_var('func_5315')
func_5316_call = mutated_mod.get_global_var('func_5316')
call_5790 = relay.TupleGetItem(func_5315_call(), 0)
call_5791 = relay.TupleGetItem(func_5316_call(), 0)
output = call_5790
output2 = call_5791
func_5803 = relay.Function([], output)
mod['func_5803'] = func_5803
mod = relay.transform.InferType()(mod)
output = func_5803()
func_5804 = relay.Function([], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mod.get_global_var('func_2560')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_5825 = relay.TupleGetItem(func_2560_call(), 0)
call_5826 = relay.TupleGetItem(func_2562_call(), 0)
output = relay.Tuple([call_5825,])
output2 = relay.Tuple([call_5826,])
func_5827 = relay.Function([], output)
mod['func_5827'] = func_5827
mod = relay.transform.InferType()(mod)
output = func_5827()
func_5828 = relay.Function([], output)
mutated_mod['func_5828'] = func_5828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_5852 = func_865_call()
call_5853 = func_865_call()
func_1321_call = mod.get_global_var('func_1321')
func_1323_call = mutated_mod.get_global_var('func_1323')
call_5854 = relay.TupleGetItem(func_1321_call(), 0)
call_5855 = relay.TupleGetItem(func_1323_call(), 0)
output = relay.Tuple([call_5852,call_5854,])
output2 = relay.Tuple([call_5853,call_5855,])
func_5856 = relay.Function([], output)
mod['func_5856'] = func_5856
mod = relay.transform.InferType()(mod)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mutated_mod.get_global_var('func_5856')
call_5857 = func_5856_call()
output = call_5857
func_5858 = relay.Function([], output)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mod.get_global_var('func_5315')
func_5316_call = mutated_mod.get_global_var('func_5316')
call_5880 = relay.TupleGetItem(func_5315_call(), 0)
call_5881 = relay.TupleGetItem(func_5316_call(), 0)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_5887 = func_1483_call()
call_5888 = func_1483_call()
uop_5919 = relay.log2(call_5880.astype('float64')) # shape=(182,)
uop_5921 = relay.log2(call_5881.astype('float64')) # shape=(182,)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_5922 = func_5177_call()
call_5923 = func_5177_call()
output = relay.Tuple([call_5887,uop_5919,call_5922,])
output2 = relay.Tuple([call_5888,uop_5921,call_5923,])
func_5942 = relay.Function([], output)
mod['func_5942'] = func_5942
mod = relay.transform.InferType()(mod)
output = func_5942()
func_5943 = relay.Function([], output)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_5949 = func_1808_call()
call_5950 = func_1808_call()
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_5954 = func_5432_call(relay.reshape(call_5949.astype('float64'), [182,]))
call_5955 = func_5432_call(relay.reshape(call_5949.astype('float64'), [182,]))
func_2642_call = mod.get_global_var('func_2642')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_5956 = relay.TupleGetItem(func_2642_call(), 0)
call_5957 = relay.TupleGetItem(func_2643_call(), 0)
uop_5959 = relay.acosh(call_5956.astype('float64')) # shape=(14, 7, 10)
uop_5961 = relay.acosh(call_5957.astype('float64')) # shape=(14, 7, 10)
output = relay.Tuple([call_5949,call_5954,uop_5959,])
output2 = relay.Tuple([call_5950,call_5955,uop_5961,])
func_5963 = relay.Function([], output)
mod['func_5963'] = func_5963
mod = relay.transform.InferType()(mod)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5963_call = mutated_mod.get_global_var('func_5963')
call_5964 = func_5963_call()
output = call_5964
func_5965 = relay.Function([], output)
mutated_mod['func_5965'] = func_5965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3540_call = mutated_mod.get_global_var('func_3540')
call_5966 = relay.TupleGetItem(func_3538_call(), 0)
call_5967 = relay.TupleGetItem(func_3540_call(), 0)
func_3322_call = mod.get_global_var('func_3322')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_5970 = func_3322_call()
call_5971 = func_3322_call()
output = relay.Tuple([call_5966,call_5970,])
output2 = relay.Tuple([call_5967,call_5971,])
func_5977 = relay.Function([], output)
mod['func_5977'] = func_5977
mod = relay.transform.InferType()(mod)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mutated_mod.get_global_var('func_5977')
call_5978 = func_5977_call()
output = call_5978
func_5979 = relay.Function([], output)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_5983 = func_2552_call()
call_5984 = func_2552_call()
output = call_5983
output2 = call_5984
func_5992 = relay.Function([], output)
mod['func_5992'] = func_5992
mod = relay.transform.InferType()(mod)
mutated_mod['func_5992'] = func_5992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5992_call = mutated_mod.get_global_var('func_5992')
call_5993 = func_5992_call()
output = call_5993
func_5994 = relay.Function([], output)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3798_call = mod.get_global_var('func_3798')
func_3799_call = mutated_mod.get_global_var('func_3799')
call_6059 = relay.TupleGetItem(func_3798_call(), 0)
call_6060 = relay.TupleGetItem(func_3799_call(), 0)
func_4466_call = mod.get_global_var('func_4466')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_6068 = relay.TupleGetItem(func_4466_call(), 1)
call_6069 = relay.TupleGetItem(func_4467_call(), 1)
output = relay.Tuple([call_6059,call_6068,])
output2 = relay.Tuple([call_6060,call_6069,])
func_6072 = relay.Function([], output)
mod['func_6072'] = func_6072
mod = relay.transform.InferType()(mod)
output = func_6072()
func_6073 = relay.Function([], output)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5963_call = mod.get_global_var('func_5963')
func_5965_call = mutated_mod.get_global_var('func_5965')
call_6080 = relay.TupleGetItem(func_5963_call(), 0)
call_6081 = relay.TupleGetItem(func_5965_call(), 0)
func_2642_call = mod.get_global_var('func_2642')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_6089 = relay.TupleGetItem(func_2642_call(), 0)
call_6090 = relay.TupleGetItem(func_2643_call(), 0)
output = relay.Tuple([call_6080,call_6089,])
output2 = relay.Tuple([call_6081,call_6090,])
func_6092 = relay.Function([], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mutated_mod.get_global_var('func_6092')
call_6093 = func_6092_call()
output = call_6093
func_6094 = relay.Function([], output)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_6228 = relay.TupleGetItem(func_2925_call(), 0)
call_6229 = relay.TupleGetItem(func_2927_call(), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_6234 = relay.TupleGetItem(func_1157_call(), 1)
call_6235 = relay.TupleGetItem(func_1159_call(), 1)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
const_6237 = relay.const(0.582690, dtype = "float32")#candidate|6237|()|const|float32
const_6238 = relay.const([7.715132,-7.989450,0.394566,-8.792198,6.698610,5.216542,-6.641770,-7.521507,-1.640201,7.422641,0.764793,4.858570,-3.412136,7.530595,-3.640478,-1.999411,0.999642,-3.246824,0.502331,-0.910128,-3.923989,-2.594663,2.309334,-5.291126,4.069712,6.712983,8.470542,5.494792,4.297811,0.517185,-8.694211,-9.224170,-1.191249,-5.371676,4.528428,-3.422327,0.257629,2.047636,0.079146,-7.720606,4.096572,5.470777,8.985397,8.290104,8.900900,-7.610432,-5.734352,3.561870,7.631816,-0.683120,2.541047,-2.724938,0.313386,6.162931,6.745901,9.281208,8.801793,2.514567,-3.864577,-5.254169,2.945674,0.305043,0.871756,-5.535504,8.742808,2.422455,-6.441325,5.183680,1.000633,-6.050702,-7.571633,-4.363689,3.328960,-9.776777,-2.493748,6.387854,5.568976,8.785436,-9.335959,-3.968878,-6.984692,-6.734874,7.354237,0.401756,-1.062182,-3.221478,9.330228,-9.483775,-0.455117,-0.694276,5.704366,1.670304,7.796742,4.276066,-2.135109,4.478672,-8.585198,8.534421,3.124332,-7.256155,0.962529,-9.274198,7.257312,1.859217,-7.969372,-2.715478,3.693728,-8.933205,-8.554654,-8.386542,8.844356,-5.333693,0.711182,-7.808887,-5.608462,-5.180716,3.944023,-8.716896,-1.634282,-1.595722,-8.844361,-5.251282,-2.317848,-5.836072,5.563838,-9.037379,-6.534392,-7.035694,-9.850742,-5.039525,7.789379,-3.188782,6.647276,-3.294022,-1.881298,-2.549661,9.414857,4.325816,-9.787503,4.093825,-0.073768,-7.939909,-8.923556,9.920662,5.093069,0.722935,-8.886126,5.857003,-0.059059,3.103463,5.773804,8.458829,9.205191,-6.017207,-7.503776,5.598988,2.720315,0.271331,-0.570143,4.960109,-2.265849,-7.410489,-5.409313,1.530003,3.419868,-1.378593,-0.115816,-4.174343,-2.337470,2.144640,-0.602320,1.931187,2.004174,5.947384,1.282642,3.180434], dtype = "float32")#candidate|6238|(176,)|const|float32
call_6236 = func_3449_call(relay.reshape(const_6237.astype('float32'), []), relay.reshape(const_6238.astype('float32'), [8, 2, 11]), )
call_6239 = func_3449_call(relay.reshape(const_6237.astype('float32'), []), relay.reshape(const_6238.astype('float32'), [8, 2, 11]), )
output = relay.Tuple([call_6228,call_6234,call_6236,const_6237,const_6238,])
output2 = relay.Tuple([call_6229,call_6235,call_6239,const_6237,const_6238,])
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
output = func_6245()
func_6246 = relay.Function([], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_6259 = relay.TupleGetItem(func_2609_call(), 0)
call_6260 = relay.TupleGetItem(func_2611_call(), 0)
func_2925_call = mod.get_global_var('func_2925')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_6275 = relay.TupleGetItem(func_2925_call(), 1)
call_6276 = relay.TupleGetItem(func_2927_call(), 1)
func_4691_call = mod.get_global_var('func_4691')
func_4694_call = mutated_mod.get_global_var('func_4694')
var_6289 = relay.var("var_6289", dtype = "float64", shape = ())#candidate|6289|()|var|float64
call_6288 = relay.TupleGetItem(func_4691_call(relay.reshape(var_6289.astype('float64'), [])), 0)
call_6290 = relay.TupleGetItem(func_4694_call(relay.reshape(var_6289.astype('float64'), [])), 0)
func_3068_call = mod.get_global_var('func_3068')
func_3072_call = mutated_mod.get_global_var('func_3072')
const_6308 = relay.const([9,9,-5,-3,-10,-2,-7,6,-10,-2,3,-10,-4,-9,9,-5,1,-10,10,-1,-10,7,7,-3,-6,3,-2,-8,-6,-1,9,3,1,6,-7,-2,-9,4,-6,-10,9,2,10,8,-5,1,5,5,7,7,-10,1,-10,5,4,-6,3,-4,8,-9,3,8,-1,-3,-8,-2,-9,-8,-10,7,-10,-6,-3,-6,-6,-3,-2,-4,7,1,10,-2,8,2,-4,-1,1,9,-10,4,-1,-5,-9,-8,-8,2,4,-1,-5,-10,9,3,-1,-4,9,-8,-5,3,-4,10,2,2,-7,8,-5,1,4,-3,-8,7,-3,8,-8,3,4,5,-7,-1,9,6,-2,5,-3,-10,-5,10,1,-9,-1,-10,6,-10,-2,5,10,5,-8,-7,-1,2,1,-8,-10,-3,7,-5,-1,-4,-5,4,2,-9,-2,-1,-3,-10,7,-9,3,9,5,3,-8,-1,-9,10,6,4,-6,-2,-10,-5,10,-3,6,-3,5,-9,4,-7,4,-4,7,-8,-3,-3,-3,-9,4,6,-3,3,6,4,-1,-4,-8,-7,6,-1,-6,-3,5,-3,-5,9,9,-7,-3,6,-2,10,7,-7,1,-4,-4,-7,1,8,-9,4,-6,-3,-4,4,7,7,9,9,-4,10,-1,7,-7,8,9,-3,2,5,-5,1,-2,8,-4,3,1,4,-10,-4,5,4,3,-10,-5,3,5,-2,4,-10,8,-4,7,-2,10,-6,7,8,9,-7,4,-4,3,6,7,-6,9,5,10,3,-3,-5,-10,2,-3,-4,8,4,6,-9,-5,-10,-6,10,-10,8,-5,4,7,5,-5,-7,-6,4,-10,-7,-9,1,9,1,-8,5,-3,-9,6,-2,-2,6,9,-2,-3,6,-5,9,-2,-5,1,-4,-2,-7,-8,1,-8,-1,-7,6,1,3,-10,-10,-5,3,-7,-2,-3,-7,-8,2,-5,2,6,-1,-1,1,-9,4,-7,9,7,3,10,8,8,5,2,3,-7,-5,1,10,6,-3,2,-7,5,6,7,7,-7,-9,2,-7,8,-5,-9,-10,-8,7,9,8,3,-1,-1,8,-3,-7,8,-3,-7,7,5,10,-2,-5,3,5,1,-8,4,-10,-2,-1,-2,-9,5,4,3,3,-3,4,-6,-1,5,-9,7,6,-6,-2,-1,7,6,6,-7,3,-1,-5,-8,-2,-8,-1,-2,-6,4,-7,8,-3,-7,-2,-9,-6,5,-5,-10,5,-2,6,-3,-10,-10,-2,-5,3,-3,8,-3,2,8,1,8,9,-4,4,7,6,3,6,-4,-9,3,1,-4,3,4,-1,2,4,4,5,2,-9,-9,2,-3,10,-10,3,6,5,10,4,-5,9,-4,3,8,-2,8,-10,-5,-8,-5,-9,6,1,-2,-9,-1,8,-5,-3,4,9,7,2,4,-9,2,-8,-3,-4,3,-4,2,-2,-3,-9,10,9,-1,-1,3,-4,1,-3,2,-1,-1,-1,-7,1,10,6,-1,-9,-6,-7,-2,5,-2,10,-8,-1,8,-3,7,-4,5,6,5,-8,8,3,4,-5,-8,10,-8,4,-3,10,8,-8,3,9,-1,-10,-2,-9,3,-3,-1,-5,-4,-6,6,8,9,9,1,-2,6,-9,7,3,4,-8,-10,5,-4,2,6,-5,7,-8,3,1,4,-6,-2,10,8,2,-5,-4,9,-10,-8,-1,-9,5,1,-1,-8,5,-7,-7,-4,-3,-7,7,-2,2,-2,-9,3,2,2,6,-10,1,7,2,-6,-10,1,10,6,5,6,-8,-10,3,-4,1,2,-9,9,-2,-6,7,-2,3,10,8,4,4,-6,5,6,2,-9,8,-4,-2,-3,-10,-7,-2,10,2,6,7,1,-2,9,6,4,-5,-4,-9,-9,1,1,-2,3,-7,10,-3,-8,-9,-8,5,10,-2,-9,9,-1,6,4,-3,2,8,-3,-4,-7,-8,-9,-8,-6,-1,-3,-5,-3,-4,-8,5,-6,3,-5,2,9,6,-6,-7,7,7,10,-4,-10,-9,-7,10,7,-5,-10,4,-9,-7,7,5,-4,1,4,-7,6,-3,-8,8,-6,-10,10,-6,-6,-3,-9,-4,1,-8,-3,-9,9,-3,7,-6,4,9,-2,4,10,-1,-6,-3,-4,-1,-6,-7,-2,-5,2,2,-9,-10,6,9,1,-6,-6,-1,-1,-7,-3,-3,-5,-4,10,-4,6,10,-8,-7,-10,6,-1,-6,1,9,-8,-9,-1,-3,-10,9,-9,-8,-7,-7,-8,-3,-10,-3,-10,5,7,4,-8,8,-2,-3,-6,-1,6,10,-1,-6,1,3,6,-1,1,-10,2,6,2,8,-2,3,-7,3,7,10,-3,-9,-3,9,-10,5,-6,10,2,-8,-7,2,3,3,-9,7,-9,8,-1,-6,-7,-4,3,10,10,-8,8,-2,-9,2,1,7,-8,-10,3,9,-8,-2,-5,-4,10,-3,-4,-1,1,1,3,-1,-5,9,8,10,2,-5,-6,-3,3,-7,4,-1,9,8,10,-2,-10], dtype = "uint8")#candidate|6308|(945,)|const|uint8
call_6307 = relay.TupleGetItem(func_3068_call(relay.reshape(const_6308.astype('uint8'), [15, 9, 7]), relay.reshape(const_6308.astype('uint8'), [15, 9, 7]), ), 1)
call_6309 = relay.TupleGetItem(func_3072_call(relay.reshape(const_6308.astype('uint8'), [15, 9, 7]), relay.reshape(const_6308.astype('uint8'), [15, 9, 7]), ), 1)
func_1662_call = mod.get_global_var('func_1662')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_6311 = relay.TupleGetItem(func_1662_call(), 0)
call_6312 = relay.TupleGetItem(func_1664_call(), 0)
output = relay.Tuple([call_6259,call_6275,call_6288,var_6289,call_6307,const_6308,call_6311,])
output2 = relay.Tuple([call_6260,call_6276,call_6290,var_6289,call_6309,const_6308,call_6312,])
func_6318 = relay.Function([var_6289,], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
mutated_mod['func_6318'] = func_6318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6319 = relay.var("var_6319", dtype = "float64", shape = ())#candidate|6319|()|var|float64
func_6318_call = mutated_mod.get_global_var('func_6318')
call_6320 = func_6318_call(var_6319)
output = call_6320
func_6321 = relay.Function([var_6319], output)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2956_call = mutated_mod.get_global_var('func_2956')
call_6430 = relay.TupleGetItem(func_2954_call(), 0)
call_6431 = relay.TupleGetItem(func_2956_call(), 0)
func_4251_call = mod.get_global_var('func_4251')
func_4252_call = mutated_mod.get_global_var('func_4252')
call_6454 = func_4251_call()
call_6455 = func_4251_call()
output = relay.Tuple([call_6430,call_6454,])
output2 = relay.Tuple([call_6431,call_6455,])
func_6456 = relay.Function([], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
output = func_6456()
func_6457 = relay.Function([], output)
mutated_mod['func_6457'] = func_6457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4305_call = mutated_mod.get_global_var('func_4305')
call_6506 = relay.TupleGetItem(func_4304_call(), 0)
call_6507 = relay.TupleGetItem(func_4305_call(), 0)
output = relay.Tuple([call_6506,])
output2 = relay.Tuple([call_6507,])
func_6508 = relay.Function([], output)
mod['func_6508'] = func_6508
mod = relay.transform.InferType()(mod)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mutated_mod.get_global_var('func_6508')
call_6509 = func_6508_call()
output = call_6509
func_6510 = relay.Function([], output)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6591 = relay.var("var_6591", dtype = "float32", shape = (10, 10, 7))#candidate|6591|(10, 10, 7)|var|float32
var_6592 = relay.var("var_6592", dtype = "float32", shape = (10, 10, 7))#candidate|6592|(10, 10, 7)|var|float32
bop_6593 = relay.divide(var_6591.astype('float32'), relay.reshape(var_6592.astype('float32'), relay.shape_of(var_6591))) # shape=(10, 10, 7)
const_6620 = relay.const([[[7.038209,0.632701,6.686614,4.496541,-2.688936,-0.547554,-7.529722],[-1.065840,5.881670,-4.833202,-9.240421,-9.878338,1.856215,7.641807],[6.337239,5.587641,-6.751351,6.198532,8.166457,6.483098,-6.064913],[-5.584053,-2.175114,-1.723597,7.142981,8.864062,-9.015072,-3.938902],[5.573097,7.630111,-4.577954,8.454197,-4.521013,-6.320629,-4.556396],[3.772015,2.142794,8.891189,-3.849343,4.466056,-3.827407,2.149721],[6.742024,-1.544956,1.762076,1.399691,-3.684608,8.085981,9.805493],[-9.754728,0.780223,-6.932363,9.305244,-4.877780,6.042210,0.793587],[-4.523970,-3.110728,5.958803,7.703101,8.533419,-5.093877,6.932442],[-5.916466,-4.059284,-2.992037,-3.592668,-7.176912,1.518719,-0.653423]],[[2.062994,-2.290656,-9.473366,0.274568,-5.921157,4.212095,1.010263],[4.416196,2.023478,8.599859,1.505477,4.939687,-1.297182,2.867161],[6.536576,6.571285,-4.502360,-3.025311,-8.613304,-5.659502,-5.701155],[-5.885350,7.541490,7.916737,7.515054,-2.152744,-9.317059,0.626114],[-6.267321,-7.546951,-6.971218,-2.314828,-5.068764,7.049318,-1.096918],[6.015789,5.959840,-8.870907,2.935219,9.821187,-9.426257,6.397916],[-1.623566,0.811404,-6.291126,-9.923435,4.484271,7.711326,1.360522],[7.058487,-4.577079,9.187826,-0.254369,-7.829505,0.102712,4.722636],[-4.422045,-4.921390,9.380289,9.469007,-9.789732,-8.807093,-0.838285],[9.094151,-9.733072,4.200516,0.333434,7.847849,-7.242855,9.419972]],[[6.884508,7.758375,-1.809218,-1.758005,6.017762,6.756607,0.303838],[-7.553376,8.385328,-7.315509,-6.310575,-9.371857,-6.802823,0.058529],[2.345998,-1.498413,6.403372,-4.651741,8.735900,9.601441,-3.582689],[-5.058776,-8.000987,7.431451,-0.797857,-8.156793,8.878008,-7.937879],[-7.996748,-7.927422,0.882697,-6.508665,-8.264374,-4.632104,-7.778019],[8.185596,-4.592420,-8.213421,-5.420217,-1.137898,5.347496,5.335743],[2.216022,-3.132327,3.689983,8.513441,9.326782,-9.419223,1.758411],[-0.584420,-6.860601,-4.488677,8.012835,-9.358284,6.825703,5.495697],[3.048483,1.168319,-7.331693,-3.672115,5.096365,-7.640185,2.965094],[-2.816735,5.290837,-4.487531,-5.314122,-1.390887,-0.199607,6.745967]],[[6.812914,-7.842459,6.617127,8.762299,-2.729236,-7.778536,-8.994988],[-1.705306,4.668092,-2.722907,6.996470,-9.217869,2.932689,-3.958277],[9.746847,4.831629,-6.385834,1.884918,-0.395327,8.576889,-6.312399],[-1.241664,3.277775,0.923304,0.038311,1.306540,-5.416731,1.337368],[9.870632,1.539245,2.017465,5.291235,5.421035,-8.448290,-3.174461],[-3.266667,8.561849,0.439322,8.658126,7.623640,-9.229424,-2.174185],[-8.749210,-9.793348,0.366036,5.641139,0.552974,-7.523182,3.105221],[-9.631199,-3.946542,7.176242,0.403294,-6.616972,6.501250,7.479352],[7.124890,-0.616859,1.315413,6.433295,4.906368,-0.347494,7.395543],[6.667223,1.796892,-6.263471,-8.608966,6.069943,-4.409893,-3.449257]],[[2.675875,8.449708,8.880655,-5.716290,6.118775,9.576318,-8.850017],[3.437339,-4.759665,7.985192,-2.707065,-4.917078,7.300227,-9.800698],[5.170414,3.309616,-3.647717,5.440342,-0.626710,2.278384,2.798948],[-0.669604,-2.603913,-1.200233,-9.248087,-8.951452,3.333189,4.887269],[-9.548320,0.602340,5.108684,-4.828832,8.301132,0.865245,9.037824],[6.180769,-8.593077,9.373637,4.919188,9.439093,3.244963,-8.161338],[-5.461371,1.519607,0.315514,6.837304,4.672548,7.382363,9.272942],[-2.383891,1.236024,-1.090151,-9.667250,-5.218825,2.908981,3.741151],[0.636488,2.384514,-9.182732,-8.978947,3.869061,-1.497680,6.229773],[-4.168012,-4.516592,0.874055,-3.705727,3.671057,1.967108,3.579475]],[[-6.867846,7.369994,-7.102459,6.891834,2.686401,0.938640,4.629182],[5.837014,4.869040,-6.020084,4.712427,5.827198,3.825161,-7.605514],[-7.645001,4.412507,-9.764995,-0.936996,7.273008,5.023077,7.797918],[-9.504289,-7.428891,6.999105,2.924338,-8.465411,1.905880,-6.466966],[-6.361375,-3.768646,-6.248692,8.211757,-4.311603,-3.824030,-2.314998],[6.265097,-8.963099,-5.041026,6.163570,-5.225557,0.347933,9.962572],[-7.316910,9.602992,-3.457773,8.410802,2.126759,-4.435081,-1.712678],[-6.863634,-7.083983,-5.891016,7.349083,-0.984798,-7.377202,4.565208],[6.568409,-7.114404,-7.353739,-1.251051,5.509214,-5.685113,0.501270],[4.613160,1.928577,-1.842820,6.028663,-3.001501,2.619766,5.846883]],[[8.941671,-7.973325,-2.840868,-8.892249,-3.009862,2.803124,-7.222675],[9.149113,-7.907476,6.298382,-8.895424,-5.714570,-1.263840,-1.442137],[8.710391,1.545834,-6.359421,0.179650,-0.390205,8.818484,-5.010658],[3.221937,-6.747921,-4.827668,2.147157,-0.450766,8.263766,1.845244],[7.974023,-7.342029,2.280562,8.136510,7.652001,-5.820340,-4.521981],[-6.393088,7.133832,3.080474,-5.326675,-8.442128,6.665043,5.527934],[6.921101,-4.960995,-8.457881,2.168953,-0.457253,8.202710,8.556331],[-9.837257,-9.720975,5.931071,-4.883444,4.999774,-0.061957,-1.799677],[8.811812,0.745895,-7.502638,4.718711,-7.533063,-3.195643,-5.249681],[-2.962692,-4.884985,9.186820,6.886092,-6.550955,-0.727462,0.054580]],[[1.931291,-8.895513,0.695421,-2.961822,-1.229149,7.349049,-5.234117],[3.537888,2.794819,8.731283,-4.783810,-4.152393,4.464534,6.631468],[4.244245,-3.962975,-3.136842,1.008831,-7.341559,3.400846,7.261767],[3.693110,9.276229,-7.425781,-4.764643,-5.581675,4.537950,6.455949],[9.756104,-5.900636,6.030543,5.642349,8.253283,7.578752,-7.548666],[-4.729421,2.558629,-8.332692,7.441725,-7.745267,-4.342407,-6.859978],[8.520126,-0.519337,1.691064,2.021815,9.447935,-1.033661,8.096785],[7.049114,5.149802,-9.310778,3.577952,3.952855,0.911878,9.022021],[-1.714638,0.172937,4.224959,-2.956954,-4.638723,2.736509,-9.400321],[5.841632,3.007754,-2.507504,-7.404642,-7.756565,7.647534,-1.632148]],[[0.466699,-0.639987,-0.213733,8.776348,6.651209,-1.268023,-9.942490],[5.034918,1.071581,-9.276148,6.302280,1.673728,7.423651,-7.543171],[0.795627,-0.872800,-9.419791,-1.587264,-9.158840,-9.323240,5.237709],[-1.548065,-5.559146,8.850895,-5.347784,-9.189651,-3.698829,8.137929],[0.383513,-0.835877,7.932957,7.912128,5.970840,-2.513803,-3.584510],[4.845508,2.468773,1.797239,2.872272,7.219752,-4.760171,-4.162631],[-1.509565,0.754172,5.088024,-1.440938,-6.763598,-5.075393,-5.117921],[9.587150,6.199725,-5.824778,-6.515482,-7.610629,-4.664535,5.849167],[1.460935,8.166051,-4.708101,-5.242594,-9.077602,-5.729586,-3.659907],[-0.455825,6.739576,3.279114,-9.350402,3.626828,1.786213,7.183211]],[[8.467833,6.945037,-4.013936,-4.040751,0.801569,-1.122780,-4.769848],[-4.797938,7.813570,7.932172,-8.579028,9.335121,-2.624741,-3.619090],[-6.861390,-2.408861,-4.186636,-9.779228,-8.196225,4.442095,5.317087],[-7.258223,-0.880937,7.063200,8.282432,-7.602068,4.350368,0.800185],[-6.304752,-7.221862,6.741249,7.308372,-7.187662,-0.461214,-8.922550],[-8.947782,7.748826,5.168681,5.232213,9.459130,5.808866,-6.987620],[9.823529,3.010850,4.824117,-9.704816,-4.507613,2.666844,3.390767],[2.858100,4.585012,-7.640079,-6.949462,6.870099,-7.473249,1.131449],[-2.507660,-6.285431,3.321072,-7.241313,7.067122,2.865104,-6.180515],[-8.200693,-7.275671,8.413169,1.944795,-7.417171,-6.201855,9.207386]]], dtype = "float32")#candidate|6620|(10, 10, 7)|const|float32
bop_6621 = relay.less(bop_6593.astype('bool'), relay.reshape(const_6620.astype('bool'), relay.shape_of(bop_6593))) # shape=(10, 10, 7)
func_4691_call = mod.get_global_var('func_4691')
func_4694_call = mutated_mod.get_global_var('func_4694')
const_6628 = relay.const(5.708138, dtype = "float64")#candidate|6628|()|const|float64
call_6627 = relay.TupleGetItem(func_4691_call(relay.reshape(const_6628.astype('float64'), [])), 0)
call_6629 = relay.TupleGetItem(func_4694_call(relay.reshape(const_6628.astype('float64'), [])), 0)
output = relay.Tuple([bop_6621,call_6627,const_6628,])
output2 = relay.Tuple([bop_6621,call_6629,const_6628,])
func_6630 = relay.Function([var_6591,var_6592,], output)
mod['func_6630'] = func_6630
mod = relay.transform.InferType()(mod)
mutated_mod['func_6630'] = func_6630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6630_call = mutated_mod.get_global_var('func_6630')
var_6632 = relay.var("var_6632", dtype = "float32", shape = (10, 10, 7))#candidate|6632|(10, 10, 7)|var|float32
var_6633 = relay.var("var_6633", dtype = "float32", shape = (10, 10, 7))#candidate|6633|(10, 10, 7)|var|float32
call_6631 = func_6630_call(var_6632,var_6633,)
output = call_6631
func_6634 = relay.Function([var_6632,var_6633,], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6072_call = mod.get_global_var('func_6072')
func_6073_call = mutated_mod.get_global_var('func_6073')
call_6644 = relay.TupleGetItem(func_6072_call(), 0)
call_6645 = relay.TupleGetItem(func_6073_call(), 0)
output = relay.Tuple([call_6644,])
output2 = relay.Tuple([call_6645,])
func_6658 = relay.Function([], output)
mod['func_6658'] = func_6658
mod = relay.transform.InferType()(mod)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6658_call = mutated_mod.get_global_var('func_6658')
call_6659 = func_6658_call()
output = call_6659
func_6660 = relay.Function([], output)
mutated_mod['func_6660'] = func_6660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3436_call = mutated_mod.get_global_var('func_3436')
call_6726 = relay.TupleGetItem(func_3434_call(), 1)
call_6727 = relay.TupleGetItem(func_3436_call(), 1)
output = call_6726
output2 = call_6727
func_6728 = relay.Function([], output)
mod['func_6728'] = func_6728
mod = relay.transform.InferType()(mod)
output = func_6728()
func_6729 = relay.Function([], output)
mutated_mod['func_6729'] = func_6729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mod.get_global_var('func_5977')
func_5979_call = mutated_mod.get_global_var('func_5979')
call_6763 = relay.TupleGetItem(func_5977_call(), 0)
call_6764 = relay.TupleGetItem(func_5979_call(), 0)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
const_6776 = relay.const(8.011857, dtype = "float32")#candidate|6776|()|const|float32
const_6777 = relay.const([0.646734,-6.925792,7.088959,6.613651,2.312493,1.677005,2.690810,-3.463951,-5.066833,-0.923812,-7.113332,-1.431977,-9.523826,9.768045,4.390252,9.075890,7.994241,-2.663885,-1.431401,-3.504175,-9.724280,-7.629860,1.317473,-9.973569,5.715239,-0.207888,-6.386598,2.003676,7.941316,-3.282140,3.528023,6.462392,8.528663,8.699507,-6.032298,1.134134,7.686206,-3.186917,7.689572,-3.874254,1.005983,-1.293254,-8.723750,-4.868834,0.884397,-4.965638,7.115170,4.595024,-0.026853,-5.744815,-3.422160,9.024623,5.785947,7.284765,5.773583,5.740035,-5.701142,-2.226524,9.846473,-4.742431,1.781795,2.837840,2.326131,-2.646743,3.658563,-4.027750,-6.718013,9.973108,6.724484,-5.764981,-0.820109,7.887029,-6.479514,2.738602,-9.365091,-5.649206,9.613343,-6.132974,-8.320916,-3.795948,7.587532,8.389566,-9.989511,6.776026,1.967043,-8.191916,5.425445,0.138814,1.437908,4.334735,-0.015372,-6.686696,0.588550,-6.226512,5.656024,5.833195,2.090710,-2.801895,1.022983,1.749230,-2.830245,5.978364,9.208749,2.198507,0.471125,7.431565,-4.791309,4.622651,-8.236750,2.249547,-9.928908,7.551687,2.734979,-1.035305,3.406474,-8.202573,2.813724,-9.830266,-5.479992,-8.896856,-6.757893,9.708895,8.501333,9.106834,8.299813,7.752627,4.430454,6.145504,-0.937414,-1.993836,-5.948063,5.769712,-6.115700,-5.015226,4.417466,-6.943133,-3.704810,-6.323411,9.118864,-0.081292,-7.293234,-2.151041,-6.239433,7.063459,9.877364,-7.911276,-8.897954,-0.114728,5.276015,1.303659,8.512746,2.987647,4.722339,2.269946,7.251226,4.079196,3.169075,9.981869,-1.378772,-5.525425,-4.945303,4.758363,5.215923,9.166851,-2.250331,1.638087,8.883560,-4.334723,5.894497,7.961642,0.564887,-6.170685,-1.991458,-5.450214,-9.180488,5.412563], dtype = "float32")#candidate|6777|(176,)|const|float32
call_6775 = func_3449_call(relay.reshape(const_6776.astype('float32'), []), relay.reshape(const_6777.astype('float32'), [8, 2, 11]), )
call_6778 = func_3449_call(relay.reshape(const_6776.astype('float32'), []), relay.reshape(const_6777.astype('float32'), [8, 2, 11]), )
output = relay.Tuple([call_6763,call_6775,const_6776,const_6777,])
output2 = relay.Tuple([call_6764,call_6778,const_6776,const_6777,])
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
output = func_6784()
func_6785 = relay.Function([], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mod.get_global_var('func_5977')
func_5979_call = mutated_mod.get_global_var('func_5979')
call_6786 = relay.TupleGetItem(func_5977_call(), 1)
call_6787 = relay.TupleGetItem(func_5979_call(), 1)
output = call_6786
output2 = call_6787
func_6789 = relay.Function([], output)
mod['func_6789'] = func_6789
mod = relay.transform.InferType()(mod)
output = func_6789()
func_6790 = relay.Function([], output)
mutated_mod['func_6790'] = func_6790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_6794 = func_1041_call()
call_6795 = func_1041_call()
func_3213_call = mod.get_global_var('func_3213')
func_3216_call = mutated_mod.get_global_var('func_3216')
const_6797 = relay.const([8,-4,8,5,-1,7,-7,4,3,-10,-3,-3,-7,4,6,-7,-5,3,6,-9,-5,1,-5,2,2,-6,3,1,2,-9,5,7,6,5,-5,1,1,6,10,5,1,8,-5,-6,-4,-7,1,-9,1,-3,8,-10,7,-6,3,-10,5,8,6,-6,1,1,5,-10,-6,7,-8,-5,-3,3,-2,-10,-10,-6,-4,-1,4,-6,-4,7,1,5,1,4,3,-9,10,-4,8,1,2,9,-1,-5,3,-4,10,-6,3,6,-7,3,-4,10,-6,-6,-10,-2,-9,-8,3,-9,-3,-5,-4,2,-3,9,-1,9,-9,-4,9,-9,-5,1,1,2,-4,10,-5,9,7,-7,-6,-4,3,-1,-5,1,9,9,-3,-2,7,4,4,2,-1,8,7,-10,1,5,4,-6,-7,3,-6,-8,8,-7,-7,-4,7,-4,7,7,7,-1,-7,4,-2,7,-1,-2,-6,1,-7,-10,10,-3,9,-2,3,7,-2,5,5,3,6,5,4,5,-3,-8,-10,10,10,-8,-7,2,-6,-1,-10,7,10,7,-9,7,-9,7,-5,-3,-8,9,-5,-3,1,-10,-8,8,2,-4,-10,-5,6,-10,-6,10,-1,-7,2,-7,-4,4,5,-2,9,-8,-8,8,2,7,-9,1,-5,-8,10,2,2,8,9,-4,9,-7,-2,1,3,3,-6,-3,7,-10,7,-3,-7,6,-4,-4,10,-9,6,-8,9,-2,8,-8,7,1,9,4,-6,5,1,-10,3,-5,1,-8,7,-7,-5,1,2,-7,6,10,2,-2,5,3,-3,-6,2,-5,4,-3,7,-3,5,-2,1,-5,-7,5,-10,7,5,-10,-9,-7,6,-4,-5,2,8,3,5,-4,8,4,8,-3,-7,1,7,9,-7,6,9,-3,3,-6,-5,-1,-10,1,8,-10,-5,1,8,-5,10,-10,-3,-5,7,5,4,5,2,-1,-7,5,3,-6,-5,-9,-4,5,-9,4,-4,10,-6,3,10,-10,8,-1,-1,-5,7,1,-2,-1,-9,-1,-3,-4,-7,-8,-4,3,4,-4,-10,3,-2,3,3,8,-6,-8,9,9,-8,2,3,-3,-1,4,-5,-3,3,2,9,-9,-7,5,8,4,8,9,1,-10,8,-6,-3,9,-2,-6,-9,5,4,3,-3,-10,-3,4,-9,-6,10,-2,-10,3,-10,-4,-3,-6,-10,-9,-6,-6,5,2,-6,-5,-2,-3,5,-4,-2,3,-9,2,-8,2,9,-2,8,10,-4,-10,9,-9,-9,1,-3,-9,-3,-2,2,-6,10,7,2,1,2,2,-7,8,-6,-7,3,-3,-7,-9,7,-1,-3,-6,-6,3,-2,-3,-8,3,2,-4,6,-3,-2,-1,10,-9,-10,8,-4,8,-5,-3,4,8,-7,-2,2,5,10,5,8,2,9,-4,10,8,-2,10,-8,3,1,-10,3,-6,-3,-2,5,9,-6,4,6,3,5,-6,-4,-10,-4,-9,-10,-9,-8,-4,-7,-4,7,-10,1,2,1,-9,-7,-9,1,-10,-4,2,2,-2,8,-3,-5,-7,-10,-10,-7,5,8,-8,3,10,7,-7,9,-9,9,-3,8,-1,-10,-1,-2,2,-2,10,8,-1,3,5,1,-2,-9,5,6,-8,-6,5,7,9,8,3,9,-5,5,-6,-8,-7,5,6,7,-10,-5,5,2,9,1,-8,-9,-5,-4,3,9,-9,-3,8,7,6,-10,-3,-3,4,6,4,-6,-2,-10,-2,-4,-5,-4,-8,10,-4,-3,3,-9,9,1,-5,-4,7,1,-5,8,3,-5,-4,2,-5,5,10,7,3,5,-2,4,-3,9,-1,9,1,-4,-1,5,1,6,-5,-1,10,6,-4,-3,5,-6,3,2,-1,10,-5,10,4,9,8,8,7,1,-4,8,-10,-8,10,-4,-8,-5,-9,9,10,5,-8,-7,6,-6,-4,-2,9,-5,1,3,6,-2,-2,10,-9,-9,9,1,4,8,2,-2,9,3,9,-1,2,3,4,-6,-10,9,-9,-5,-8,2,-10,-10,-2,-10,8,9,5,-6,5,2,-4,-5,9,-7,10,6,4,10,10,-8,-3,10,8,7,-5,9,9,-6,3,-5,3,-2,9,2,1,-10,6,2,-4,-9,7,-10,-1,7,10,-6,5,-1,-9,-6,2,5,-5,-3,-6,-10,10,3,6,7,2,-10,-1,-3,-3,-1,6,6,2,2,4,5,2,7,-8,6,10,-6,7,3,10,-9,-1,10,4,5,4,2,-8,3,-7,-3,-5,2,-10,-5,1,1,-7,-7,-4,1,-2,3,-3,-3,5,9,-9,-3,-6,-3,2,-10,6,-2,-10,8,3,10,-8,-8,3,3,8,2,4,-10,-9,5,-8,6,7,7,-5,-10,2,-6,-5,6,4,-5,3,-5,8,8,9,5,9,-8,1,-9,-5,-9,-1,2,-4,4,-6,2,2,-3,5,7,-2,-10,2,-7,4,7,-4,1,-10,7,-7,-2,-10,-8,-3,-9,-9,-7,8,-9,-3,-8,-7,-8,7,5,-6,-10,9,1,4,-8,-1,-5,-2,-1,-5,3,1,1,7,-9,10,-9,-9,5,-10,-8,8,10,-2,-5,2,-8,-7,1,4,7,1,-5,4,-6,2,5,-9,-8,-8,7,10,4,-4,-3,5,2,-6,8,8,-6,8,-10,8,6,-2,-5,8,-10,-6,-1,-3,-9,-2,8,-9,-2,-6,1,-2,-10,-2,5,-6,-4,-7,5,8,6,-1,1,9,-6,-8,10,8,2,-7,-1,3,-7,-10,10,-6,-1,-3,8,8,10,1,-3,10,-10,-4,1,-8,-10,3,-8,8,-8,4,6,8,-7,6,1,-7,4,-3,1,-5,2,10,-9,-1,-3,2,6,-5,-2,-3,10,3,-3,1,10,4,-4,-3,-7,9,-1,9,-3,-8,-7,6,-3,3,7,-2,10,10,4,-8,-2,-1,9,8,-4,7,-1,1,3,-2,8,9,1,3,-7,-6,-9,1,5,-10,-10,-4,-9,5,-9,-4,10,-4,-7,6,-5,4,-9,1,-8,5,-9,9,4,-2,2,9,-1,4,-9,5,-5,9,6,8,-3,10,-3,-10,4,1,7,-7,-2,-10,1,6,-4,10,5,4,2,-7,-4,2,-8,3,3,-8,8,8,3,5,-9,9,-2,9,8,9,-7,-9,3,2,1,5,-10,-1,8,-4,1,-10,-8,-9,9,10,8,-10,-3,-1,4,4,-10,7,-10,-7,-4,-6,-8,-9,-10,10,10,10,-2,-6,6,10,-4,6,-8,7,-9,-6,-7,-3,-6,6,5,-9,-7,-5,6,7,-2,4,-5,6,5,1,9,-8,7,2,9,10,6,-7,3,-2,8,-7,-8,-6,-6,-2,1,3,5,-1,-5,-2,-8,-3,6,6,-1,8,-9,-10,-1,2,-6,3,8,-10,7,-6,-1,-8,4,3,-8,-5,-5,-1,-9,2,8,9,-9,1,-10,-1,-7,10,-2,5,3,-6,-4,7,-10,3,4,5,10,7,4,3,-8,1,5,1,-7,-8,-6,6,-4,5,10,1,-6,2,-8,-9,7,8,7,1,8,5,-6,9,2,10,-4,6,9,9,-2,-8,10,4,-5,1,6,-7,-9,-2,10,4,1,5,-7,-9,-7,-1,-3,6,2,3,-5,8,-9,-4,-2,-5,10,7,8,-8,5,4,4,7,-7,-4,3,6,-4,-10,-1,-1,7,-8,-4,-10,6,6,-1,-6,5,1,-3,1,7,4,-6,-9,-5,-8,3,-7,-1,9,-9,-2,-6,-4,10,-4,7,-7,5,8,2,8,-5,2,-1,7,7,-6,-4,10,8,-3,4,-9,-5,-8,4,-2,-4,-2,7,-4,-1,-7,-3,-9,5,-7,1,9,-3,-4,-6,4,5,2,7,8,6,-1,4,-1,1,9,2,-7,-6,3,-9,9,-5,6,7,-10,-9,4,-10,-2,3,-2,-9,1,9,-5,-3,2,5,7,-10,-9,-9,-4,-9,1,-10,-8,-1,-4,5,1,-6,-3,9,-7,9,9,8,-9,10,9,-3,8,-6,-6,-6,6,-10,-4,-10,-9,4,9,1,-1,7,2,-6,4,5,-2,7,-2,8,-7,7,-9,3,-5,7,-5,5,-4,10,-3,-10,-5,-5,-5,2,-3,-5,2,-4,2,4,-6,7,-9,2,9,1,10,-2,10,6,-5,-8,10,-3,-3,-2,-7,3,-3,2,-6,9,-8,10,4,-1,-8,5,3,2,6,-9,2,-9,-4,10,-3,-5,-9,6,10,2,6,-7,7,7,5,6,-7,-4,-7,10,-5,-8,-7,-8,4,6,-9,-1,4,10,3,9,-5,10,9,-2,4,-9,-8,9,-8,2,-9,6,2,-3,3,4,4,10,5,-8,-5,9,3,-5,-2,-10,9,-4,-1,-5,-8,-4,6,-8,7,-7,4,-8,-3,-9,10,-4,5,-10,-7,-3,-8,9,-1,3,2,4,6,-4,3,-4,3,1,-7,8,-10,9,8,-9,5,-10,-4,5,-6,-8,2,-3,-1,-7,-7,-2,-6,4,9,4,5,-10,-8,-8,-6,5,-8,3,5,8,4,9,-1,3,-6,3,-1,-2,-10,3,-7,-3,9,6,7,5,6,-9,-9,-6,-9,6,-1,-9,9,8,2,-4,-7,-4,6,4,-5,10,7,-9,-4,6,-5,8,-7,-1,8,-2,8,7,-5,-6,8,-6,-4,3,2,-5,4,-1,2,2,9,-2,9,-1,-2,7,-4,7,10,6,-9,8,-4,8,3,3,3,-9,7,-9,6,1,10,8,9,-9,4,-4,6,-6,2,-1,7,9,9,-6,-3,4,6,1,-7,6,8,2,3,-3,7,2,-3,9,7,6,2,-3,-4,-6,5,-2,1,6,-2,-9,-2,-5,1,6,1,10,-2,4,7,6,-1,4,-4,5,9,7,4,6,-9,-5,-2,6,6,-1,1,5,-8,5,9,-10,-4,10,2,-5,-8,-3,-5,-6,10,-4,-5,-4,-7,-6,9,-7,-4,4,4,-9,2,-3,-1,-8,6,-4,2,-3,9,7,5,4,2,-7,9,-1,6,-10,4,-9,-3,-1,-3,3,-4,-1,-6,-10,2,7,3,-6,1,-7,-5,5,-1,2,9,-5,8,1,10,-4,-1,6,8,-7,8,-4,-2,3,-3,7,-10,4,8,-4,1,1,-1,-7,8,8,8,1,8,5,-8,-3,3,-8,7,1,2,-9,10,-9,-2,6,-8,-1,-2,-8,-9,9,-2,-4,9,-6,-7,1,3,-6,9,-6,-1,-3,-3,3,2,3,7,3,-3,6,-6,-7,-10,-5,-7,6,-7,-10,10,4,3,5,7,7,-7,-1,-3,3,1,2,10,-7,7,-9,1,8,-1,8,-1,7,10,-4,-6,6,-6,7,-8,-4,2,-1,-7,8,2,-5,1,-2,1,3,4,9,10,7,-2,3,4,-8,-1,-8,-4,-7,-6,5,-6,7,10,1,1,9,2,-9,6,-7,6,1,8,-5,6,2,-10,3,4,-3,-3,-2,4,1,-1,-8,-6,8,-4,10,3,-1,2,7,7,5,-4,-7,10,-8,-8,7,5,10,8,-9,-4,8,-4,6,-6,-1,9,9,-6,10,5,-8,3,-10,-9,-4,9,1,-6,5,9,10,-6,9,8,-5,-7,3,-4,2,2,-6,-5,-4,-3,3,-5,-2,-4,2,-2,-6,4,10,-4,9,8,9,-10,6,-10,-9,-2,5,-4,9,-3,-5,-6,-5,9,8,-7,1,-8,5,4,4,-7,-3,5,6,-4,-7,8,-1,-5,-4,-6,4,-2,3,-4,-3,5,1,5,-9,10,1,7,-5,-1,-5,-4,10,-9,-1,9,2,-9,5,10,-4,10,-8,-7,9,2,6,2,-9,10,-4,3,4,-6,-5,-3,-7,-4,9,-8,9,2,-3,1,7,-1,2,-4,-5,7,9,8,-2,2,4,-10,9,8,8,5,3,-6,-1,3,-3,7,10,-1,-10,8,5,6,-1,8,-8,-7,-1,5,-3,10,-1,-9,4,5,-5,9,10,3,-2,3,4,-10,-10,4,5,1,-1,-7,2,-1,7,-4,7,-10,-8,10,2,-4,-7,8,-4,-8,-9,4,-8,-10,-4,2,2,2,-7,-2,2,-1,-8,-1,-6,-9,-5,-10,-7,10,5,-5,-5,8,7,9,8,6,-9,-8,7,1,10,7,-2,-9,8,-3,-8,5,1,-5,-5,6,-10,-8,4,9,3,-1,2,9,1,4,-2,-7,4,3,4,3,4,3,3,1,-9,-8,-10,2,8,5,7,-3,5,-10,5,-5,5,6,3,1,-10,4,7,-3,1,6,-9,9,-7,5,2,-1,-9,4,-4,3,-5,4,-2,-10,-5,3,7,10,-2,-6,-4,-1,3,6,-10,3,-7,-1,6,-3,10,-4,1,1,-8,6,-5,6,2,-9,-2,-2,-1,-7,-6,7,10,3,7,5,-2,-7,9,6,7,6,8,-8,2,-6,-10,4,-6,1,2,9,6,2,-3,-9,-6,10,4,4,7,-4,-3,-7,3,4,-6,1,1,9,2,4,4,3,-6,-4,7,10,-4,10,-6,5,7,6,-9,-2,5,-10,-4,7,-8,-10,6,-4,6,-10,-8,6,10,3,-1,10,-5,-4,-3,-6,9,5,-8,8,5,-8,-2,10,8,-3,10,-4,-4,-3,-1,-8,-9,-6,4,-2,-1,-1,7,-6,5,-6,3,-2,-2,5,-8,-2,8,3,-3,10,-5,6,2,-1,-1,6,8,-2,4,4,10,6,-5,9,-4,-1,-10,5,10,3,-2,5,6,2,5,-2,1,3,1,-3,1,-5,4,-6,-5,-8,-7,-9,-2,-5,-7,4,-8,-4,-10,-3,-3,-3,10,3,-8,6,-6,10,-8,-5,-1,10,5,-8,1,8,-10,2,2,-7,8,8,10,2,-3,10,-5,5,4,-6,5,-2,-5,-6,10,9,-9,-2,5,5,-10,-1,-7,6,10,-8,-8,-9,-5,-1,-10,-4,5,6,-9,-7,-5,-3,-7,-4,3,-3,4,-3,8,-5,4,5,-7,-9,-3,-5,-7,1,-7,2,-10,-10,-6,5,-9,-10,2,-2,8,5,-10,-2,-9,2,9,-6,6,3,-9,5,9,-10,-5,-1,-6,6,7,2,10,-1,-7,-10,-5,4,-1,3,-8,-2,5,-8,10,-6,10,4,-3,1,-4,-2,3,-4,-7,-8,-7,-8,4,3,9,-2,9,-1,10,10,-10,-2,10,-9,2,4,8,4,-9,7,-8,7,4,10,1,-10,4,-5,-10,1,-10,3,-6,-1,6,3,8,1,-9,7,-3,-10,-9,-9,-9,-10,5,8,-10,8,-8,2,-10,-7,-4,-8,1,3,-5,8,-5,3,-4,5,10,2,2,-4,-6,3,5,-8,3,6,-6,-10,-5,-2,3,-4,1,-1,-1,7,-7,-7,4,-9,-7,-3,-1,5,-5,6,-4,-3,10,10,-10,-7,7,-9,3,8,-3,4,-5,2,6,9,2,-7,-7,-2,-3,-4,-6,3,-1,9,3,9,-2,9,-1,-10,-2,5,-3,6,7,6,3,1,10,7,5,3,-9,5,-5,-4,1,6,-8,10,2,-7,5,8,-1,-1,5,4,-8,-5,-4,-8,2,-9,-8,-4,-2,5,2,-5,8,-1,-7,6,-6,8,4,4,-2,6,9,8,4,1,7,-1,9,10,7,-3,1,-2,7,-10,-9,7,-8,-3,8,-8,-9,2,9,6,-9,10,10,2,-9,6,-1,-8,-10,9,5,5,-6,-2,8,-2,8,-5,-5,-10,3,2,1,-3,3,8,-9,1,-1,-2,-2,-6,-6,1,-1,-6,6,-6,-2,-7,3,2,-10,9,6,10,6,8,-8,5,-9,2,3,-4,1,9,-7,-5,-3,-10,-6,7,-8,-5,-4,-6,1,10,-9,8,-6,-1,-9,-1,3,-9,4,10,-1,-6,5,-9,1,-2,-6,8,9,-6,-8,-1,10,9,-6,-6,5,-3,6,-7,-3,-7,3,-2,5,-1,9,-3,1,-5,-2,-5,2,5,2,-3,5,6,5,8,-8,-4,-10,5,8,10,8,-7,5,-6,-6,-4,1,6,-7,-6,7,1,-7,-1,-6,-7,8,5,-5,-2,2,-1,7,-8,6,-1,-6,-10,-7,-9,4,7,9,-7,5,-5,-7,-9,-6,1,3,-2,-2,-1,5,-4,-8,-9,5,1,-7,-6,-3,-1,3,10,1,6,-8,4,9,-10,-1,3,-7,7,-1,10,-9,4,2,10,9,1,-5,9,-5,10,-10,-5,7,2,-4,-3,-5,4,2,5,2,-9,10,-2,8,4,-6,4,-8,3,-1,4,-3,7,4,7,7,6,5,-4,-1,1,-9,3,3,9,4,4,-2,3,1,6,9,5,10,-6,-2,-10,-6,-8,3,-7,-1,-2,-9,2,8,-8,-10,10,-6,4,-7,-9,-9,2,-2,-9,-9,7,8,8,7,-3,-10,-10,-9,-4,-1,9,-8,4,-9,5,3,-6,3,-7,9,-1,2,3,8,-8,-10,8,8,-10,-2,7,-8,6,-6,-2,-2,-3,-6,6,6,10,-10,4,10,-9,8,10,2,5,-1,-2,-4,9,-3,-2,8,-7,-2,-10,-4,9,-6,7,-8,-5,-3,-4,-6,-5,-8,10,-10,-6,-5,-7,7,2,-6,3,-3,-3,-9,-3,1,-4,6,-7,-8,-1,1,-3,-7,-4,-3,-6,-7,-5,9,-9,-6,9,6,8,-9,6,-10,-8,5,-9,1,7,6,4,7,-6,-8,-7,-3,6,-6,1,3,-3,3,7,7,4,7,1,-3,9,5,4,10,7,-4,4,-10,-8,-8,9,-10,-1,10,2,-2,-3,-6,-3,8,-2,10,4,2,-5,6,8,-6,2,2,9,5,-10,-10,-7,5,-5,-7,7,8,2,3,-9], dtype = "int8")#candidate|6797|(3360,)|const|int8
call_6796 = relay.TupleGetItem(func_3213_call(relay.reshape(const_6797.astype('int8'), [3360,])), 2)
call_6798 = relay.TupleGetItem(func_3216_call(relay.reshape(const_6797.astype('int8'), [3360,])), 2)
uop_6816 = relay.log(call_6796.astype('float64')) # shape=(3360,)
uop_6818 = relay.log(call_6798.astype('float64')) # shape=(3360,)
output = relay.Tuple([call_6794,const_6797,uop_6816,])
output2 = relay.Tuple([call_6795,const_6797,uop_6818,])
func_6836 = relay.Function([], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
output = func_6836()
func_6837 = relay.Function([], output)
mutated_mod['func_6837'] = func_6837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2083_call = mod.get_global_var('func_2083')
func_2084_call = mutated_mod.get_global_var('func_2084')
call_6858 = relay.TupleGetItem(func_2083_call(), 0)
call_6859 = relay.TupleGetItem(func_2084_call(), 0)
output = relay.Tuple([call_6858,])
output2 = relay.Tuple([call_6859,])
func_6860 = relay.Function([], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mutated_mod.get_global_var('func_6860')
call_6861 = func_6860_call()
output = call_6861
func_6862 = relay.Function([], output)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5229_call = mod.get_global_var('func_5229')
func_5230_call = mutated_mod.get_global_var('func_5230')
call_6882 = relay.TupleGetItem(func_5229_call(), 0)
call_6883 = relay.TupleGetItem(func_5230_call(), 0)
var_6892 = relay.var("var_6892", dtype = "float64", shape = (182,))#candidate|6892|(182,)|var|float64
bop_6893 = relay.not_equal(call_6882.astype('bool'), relay.reshape(var_6892.astype('bool'), relay.shape_of(call_6882))) # shape=(182,)
bop_6896 = relay.not_equal(call_6883.astype('bool'), relay.reshape(var_6892.astype('bool'), relay.shape_of(call_6883))) # shape=(182,)
func_2494_call = mod.get_global_var('func_2494')
func_2498_call = mutated_mod.get_global_var('func_2498')
const_6898 = relay.const([3,-3,1,-3,-10,-7,6,-10,3,-5,3,-1,8,-4,-3,2,-2,2,-4,10,-7,-4,-2,-7,8,-5,-3,1,-2,-8,5,1,-4,1,-8,-3,8,8,-4,9,7,1,4,-1,7,1,9,1,7,-1,-3,-9,-2,4,-2,-5,9,-10,8,-9,-3,6,4,-5,-9,5,-9,-6,-1,-4,-5,3,7,-9,5,9,-10,-9,-4,5,-1,9,3,10,6,-9,4,-7,5,7,1,9,-5,-6,-5,4,1,5,-9,-10,-8,7,10,5,7,-7,-10,-2,7,3,8,7,1,3,-6,6,-1,7,9,7,6,6,2,-10,-5,10,-10,-5,10,2,1,1,-3,3,2,7,6,3,-1,-7,-4,4,-8,7,-6,-6,-7,9,7,1,4,7,-3,-7,3,-3,-3,-3,7,-8,8,-10,-1,6,-2,7,-7,7,-5,4,-8,-9,7,1,3,-5,-1,6,5,-8,-1,5,9,7,6,-6,-2,7,-6,-1,6,-9,-2,-9,-7,4,-3,-5,10,-10,5,3,10,5,6,6,4,1,10,-1,-8,-6,-5,-7,5,1,3,5,2,1,8,2,-5,-7,2,6,4,-2,3,2,-7,7,-7,-5,-6,8,6,-5,-10,5,-2,-3,3,5,-5,5,2,-3,-4,-9,-3,-4,5,-9,6,7,7,4,5,5,8,3,-1,10,-3,8,4,-6,-5,-3,10,-9,-10,-6,-4,-5,10,2,-4,-9,-1,-4,10,1,-6,-4,-4,3,8,9,10,-4,-3,4,-1,4,-9,-7,10,-4,-4,-3,3,-2,-3,1,-4,6,3,5,-10,-6,-9,9,2,-4,-4,-5,-2,8,-8,1,-5,-1,4,2,7,6,-2,-5,-8,1,5,9,-2,5,5,4,-10,8,-3,1,-10,-5,-1,7,9,-3,5,-4,-8,-9,-2,3,-7,7,3,1,-4,-6,-9,4,4,-4,9,5,6,2,-6,1,8,-5,-7,-4,5,4,4,3,7,-6,9,6,5,5,-3,-5,6,1,10,-4,7,10,8,-9,5,1,-7,9,-5,3,9,-10,-2,10,-6,7,-2,7,2,-7,3,9,7,4,-2,-1,-7,-8,1,10,-10,-3,4,4,-5,-1,1,8,9,9,1,4,10,-6,10,8,-3,-4,-10,10,-1,4,2,9,4,-5,-7,-4,1,-8,5,10,-7,-4,-5,2,7,8,-6,3,5,8,6,-1,-9,9,4,-4,6,-8,4,6,6,1,1,5,-1,-7,2,-6,-6,-6,4,3,-10,10,-3,-5,2,-10,-7,6,7,-7,-1,9,-7,2,-7,-3,8,-2,4,9,-3,-7,-5,10,-6,10,-9,-9,-5,10,-5,-10,-8,3,2,-8,-4,-5,7,4,2,5,2,10,4,-9,4,-2,-6,6,1,-2,6,8,3,-9,6,8,5,-5,-9,7,-8,8,8,-1,-6,5,-10,-7,3,-10,7,6,6,-2,8,8,10,9,10,6,10,-9,-4,-3,-10,7,1,-9,7,-1,3,-10,-7,-3,-6,2,2,-6,8,5,-4,-3,-6,-1,-6,-7,-4,-5,3,-10,9,-4,-3,-7,-2,9,5,-9,6,3,4,4,6,-1,-7,7,-4,7,1,-8,-8,-7,1,-5,7,1,-9,-1,2,1,4,-5,9,6,8,3,3,1,7,10,-6,-5,-4,10,-8,-7,-1,1,-4,9,2,-10,-1,8,-8,2,-9,-9,-1,1,1,2,-2,-9,-1,-10,10,6,2,-9,-2,4,-8,-6,-1,-10,7,-2,6,-5,2,8,7,3,-9,8,5,-5,-7,2,8,-10,-4,3,-6,7,-4,-9,-2,-10,7,4,-2,-3,-2,6,-6,6,-1,-2,-7,-6,-7,-4,9,9,4,6,-4,4,5,-5,-8,-3,-8,-7,-5,10,10,-10,-7,-3,-4,-8,9,2,6,4,-8,3,1,3,-5,-9,-6,-3,10,8,6,-10,-10,6,-2,9,7,-8,-4,-6,5,-7,4,7,-6,6,1,-7,-2,6,-3,-6,7,-9,-6,-1,10,-3,7,-8,5,7,2,6,6,10,6,-10,-9,-3,1,7,3,-6,1,7,10,1,-7,7,-8,-3,-10,-7,-1,3,8,5,-1,-6,-5,-8,7,8,-8,-9,10,3,6,-9,2,-9,6,-6,7,9,2,-6,9,-5,8,3,6,8,-8,9,2,2,3,5,9,1,-3,2,-2,-7,9,-8,8,6,-6,-5,2,8,-7,-5,-9,8,3,4,-7,6,10,2,2,3,-5,-8,-8,-2,1,1,-4,-4,9,10,6,3,-2,6,-6,-3,9,-6,10,-4,-7,-3,-4,-6,2,2,-4,5,-1,-1,2,-6,5,-10,3,-6,-10,1,-3,-8,5,-4,-6,-6,-2,4,10,8,5,10,3,8,4,-7,6,-3,-7,1,-6,10,3,5,-5,9,-3,10,3,-9,-9,4,-4,-10,4,2,-10,1,8,7,8,-7,-4,-9,7,6,6,5,8,1,-7,-3,7,10,-1,9,4,-2,-3,7,-9,-9,-4,-3,2,-4,8,5,5,-9,6,-6,5,9,7,1,-1,-10,-7,-5,8,-7,1,10,-9,10,10,-6,-4,-5,2,-8,6,-6,-3,-1,4,-5,-10,-1,-5,-6,7,-2,-8,-3,-2,-3,-10,-3,-4,4,-2,3,8,-3,-4,-10,3,-3,8,1,-10,-2,5,-3,-10,7,10,4,-3,-10,7,10,-1,-1,3,-1,-10,3,-8,6,-5,-10,2,-2,-2,-2,2,1,4,-4,-7,10,-6,5,-7,-2,2,9,7,-9,-4,1,10,1,5,-3,-8,10,-3,-10,3,-5,5,3,5,-2,-10,5,5,7,1,10,2,5,-4,8,-8,-6,-6,6,8,2,-1,1,-3,5,10,-5,-7,6,7,1,-6,10,-6,7,4,-6,-6,-10,7,5,1,8,2,9,9,-5,-9,-10,1,10,5,-10,-3,2,-6,-7,-6,-4,10,-8,-3,5,7,-6,-1,6,10,-8,6,5,6,-8,-7,-1,-6,-8,-1,3,-8,-10,5,8,-2,2,-8,-2,9,9,2,4,10,-1,7,-2,-4,6,8,9,-2,-10,6,-7,1,10,7,-5,8,-1,-9,9,-5,5,1,-7,-2,5,8,4,7,5,8,2,-6,-10,-6,-10,-6,-8,6,-1,-2,-10,-6,2,-6,9,8,1,-4,9,-10,1,-4,4,-4,-10,-9,9,-3,-1,1,-7,9,3,9,-3,10,6,3,-6,2,7,6,-9,8,-2,-7,-10,-8,-2,-6,7,-9,2,2,-10,3,8,-3,2,6,-2,4,-1,-6,9,-6,-10,9,6,1,8,3,-5,4,10,3,2,6,10,-4,6,7,-4,9,10,8,-1,-5,-9,-6,-8,3,-8,5,2,9,1,3,2,7,-9,-1,6,-1,-8,4,-7,8,-5,-5,2,5,10,1,10,-6,-3,-3,5,-3,-10,1,-5,5,1,9,4,9,3,-7,-7,4,-10,-8,1,-9,10,8,-8,5,3,-3,7,-10,-1,5,-10,8,6,-6,-9,7,7,-7,8,-2,-6,-7,-6,-5,-4,5,-9,-3,-8,1,-5,9,6,7,-9,-5,6,10,-9,-1,5,-6,-8,9,-7,7,3,-6,-3,-2,-1,-7,-1,1,2,-2,7,-3,-6,-4,7,6,9,-6,4,3,7,4,-7,-7,-6,-7,-8,1,5,8,7,9,-10,6,-2,-1,9,6,-2,-4,-5,-3,-1,8,10,-7,4,2,-8,-7,-9,1,6,5,-2,8,2,-2,-6,1,8,2,2,5,-6,4,5,-5,-3,-10,-1,-4,-10,8,-7,-1,-8,1,8,-2,10,-2,-1,7,9,-1,-4,7,-1,9,5,7,2,3,-3,4,1,10,5,8,-3,-6,1,-2,-8,2,-10,7,4,3,5,1,-3,9,-6,-2,3,-9,-1,9,-3,-5,8,6,9,9,7,1,-1,-10,7,-10,-1,-7,10,-4,-4,10,8,-6,-5,1,7,2,2,6,3,2,-3,-8,4,9,-10,4,3,5,6,-10,9,10,-5,3,-2,-1,5,-9,-1,8,7,9,3,10,1,-2,-3,4,-9,-5,3,8,-7,-8,7,-10,-8,-4,5,10,-3,8,5,3,8,-6,4,-8,3,1,-2,4,-2,-2,-4,4,-5,3,-4,-7,-6,3,9,3,9,-3,7,-2,-6,7,-9,7,-5,7,9,-2,-8,-7,10,10,3,2,-9,-8,-1,6,10,-5,6,-4,5,-1,5,-10,7,-4,-1,10,-1,8,-5,-3,8,10,9,2,-4,-8,1,1,8,-8,-2,-1,-7,6,-3,-7,-6,-6,4,2,3,4,8,3,3,-4,-10,-9,-6,-10,-3,-2,5,7,-8,-7,8,4,-1,1,8,10,-2,4,-5,9,-1,-10,-10,10,-5,-8,10,-1,9,-6,7,5,-6,-9,5,-2,2,-7,-10,-2,-3,10,-6,-6,-10,4,-10,-1,9,-1,10,3,5,6,-4,-2,1,-2,-10,-2,1,-2,-4,-9,-2,7,4,-6,7,-6,-8,-10,10,-4,10,-5,-1,-4,-7,-7,-3,-3,-4,6,8,-4,10,-7,-8,3,8,-3,-2,-3,-1,-1,3,-1,-2,-10,-1,-9,10,3,7,-8,-1,-4,-9,3,-5,4,8,-7,-4,-1,1,8,-5,1,-7,7,-1,1,7,-2,10,-2,-3,9,8,-4,1,10,3,10,-10,7,9,5,-4,10,-3,4,-5,-3,6,-10,9,5,-1,1,-1,7,6,7,9,6,2,-7,-5,-10,10,-10,-1,-3,9,8,-2,-1,6,-10,5,-6,8,-6,4,5,-5,4,-7,10,9,-5,2,-9,4,-3,7,-8,1,-7,-1,10,5,-3,1,10,9,10,1,-10,-1,6,10,-1,9,7,-10,7,3,2,5,-3,-7,-8,4,-5,-10,-3,4,-3,-3,4,-1,1,-5,7,4,4,3,-2,-9,2,-8,2,-8,-7,-7,-4,-6,-2,9,10,-9,9,-6,1,-9,-7,-7,-1,3,-5,2,9,-8,10,-4,3,5,-7,4,-8,-10,-10,-1,-1,-2,5,10,2,8,-5,2,-6,-1,-10,3,-8,3,2,-10,10,-1,-5,-10,-7,1,-3,-2,-10,3,8,9,1,-5,-6,5,-6,-3,-7,10,-3,8,3,-6,4,4,7,7,5,-2,6,7,4,-5,-4,5,-3,5,4,1,-3,10,-8,10,1,-6,-9,-1,2,-4,-10,-4,-3,-10,-10,-4,8,5,-5,1,6,4,-10,-10,2,1,-2,-6,-5,1,7,-10,-3,1,9,5,9,3,-6,-2,-7,-2,-7,4,-5,7,4,7,2,5,-9,-7,10,8,4,-6,-2,-8,9,10,8,-5,7,-10,-7,-10,-3,-7,-10,-1,-4,3,-7,4,6,-9,-5,9,-4,3,-3,-10,-2,1,1,-4,9,10,2,-2,-1,-3,3,10,-10,-1,-8,9,-7,9,10,-2,5,-7,-7,5,9,-6,-1,-10,-1,-4,-1,8,5,5,-5,6,-8,-6,1,-2,-1,-3,-7,5,-3,9,-4,-1,4,-4,-2,8,-3,-4,6,-5,6,-1,-10,-3,7,-8,-8,-10,4,3,6,5,-6,6,-6,-10,8,9,10,-10,5,8,8,8,-3,9,2,1,-4,1,9,-6,5,-4,7,-1,-3,-8,6,2,-6,-9,4,4,8,-9,7,3,-1,8,-2,-2,10,5,-5,7,7,-8,7,-8,-9,3,2,-9,-6,1,-8,4,-3,5,-5,9,-10,4,3,2,1,-8,-3,8,-8,7,1,5,10,6,-4,-9,4,-10,7,8,9,-3,-7,-4,-9,10,-4,-8,4,-2,-8,3,-6,10,-6,3,8,-10,8,-9,-8,-9,-3,7,-8,8,-1,10,3,-1,8,-4,2,1,-1,7,7,-2,-10,10,9,5,-8,-5,3,-9,2,7,-1,-3,7,2,5,-6,4,-4,7,-2,2,-7,-5,-8,-2,-10,3,5,-3,-6,2,3,2,-8,-5,-4,-8,-4,7,-10,4,2,-3,-9,-6,5,9,-4,5,7,-4,9,-2,-7,-4,8,6,7,-6,6,-9,10,10,8,7,9,6,5,10,7,-8,-4,-4,4,5,-2,2,4,-5,9,-8,3,-6,-6,-2,-2,7,-5,-5,10,10,6,-3,3,-3,-10,-1,-8,5,5,6,-8,-3,3,1,-10,5,-2,-6,-8,9,1,5,1,3,5,-5,-10,5,8,9,8,4,4,-7,9,2,-8,-9,-5,4,2,3,8,7,8,4,10,8,-5,6,-2,4,-5,8,-7,-10,-2,1,4,5,-4,10,6,7,2,7,-4,-4,6,-9,-4,2,-3,-5,-2,1,-1,9,-8,1,2,3,-1,-6,-7,-1,-5,7,5,7,4,3,-8,5,9,-3,3,10,3,10,1,10,-2,6,-7,-7,10,8,-10,-1,6,3,-1,3,9,3,5,-7,-8,-6,-5,-8,3,-2,-9,-6,-8,6,2,-5,-3,2,-2,6,-4,-9,-7,4,4,-7,-9,-8,1,-10,3,5,-4,5,10,7,4,-10,2,-3,10,-9,-2,-7,1,8,-1,-2,-2,2,-8,3,-5,-5,7,-3,-9,-5,9,5,-9,6,6,6,2,-9,5,4,-6,-6,8,-1,4,-9,-10,-3,-7,-9,-4,2,-3,8,-6,-9,-3,7,-6,10,6,3,6,-5,4,8,10,-5,5,-2,-8,-3,-8,2,-1,-4,-4,3,2,4,5,-5,4,-10,5,-9,-7,-4,3,8,10,10,-10,3,4,-7,9,-6,2,-3,-1,2,7,10,-3,3,-2,-7,-10,4,8,-5,-5,-4,-8,-4,1,7,-1,7,7,7,-7,-4,5,-2,-1,-1,-9,-5,-4,-8,-6,-3,1,-1,10,-10,4,-5,-3,-3,-6,-3,9,-6,9,-8,-10,-2,-10,1,-2,-8,-6,7,-2,6,-5,4,8,-9,-5,-2,7,-8,-6,9,-2,8,10,9,-4,-1,-5,2,-7,10,7,7,-3,-1,3,-1,-6,3,2,9,7,4,-5,5,7,-3,5,-6,-4,1,6,-4,-1,-10,9,1,-9,9,-1,-3,-10,-3,-6,-5,-6,10,10,-6,-1,8,-6,-9,3,-7,10,5,8,-5,6,7,-8,-6,10,-1,-8,2,-7,-7,7,-7,5,9,1,-8,-5,9,-3,-4,-6,-4,4,-8,-7,1,8,2,-1,9,-8,9,3,9,-4,6,7,-6,-6,-2,-9,6,3,3,1,-8,-8,-2,-6,6,5,-9,2,5,-8,-10,10,-8,-5,8,4,5,-4,4,10,-7,-2,7,-10,3,-7,-6,-8,-1,7,9,5,5,10,9,-7,-3,1,-4,-2,10,9,-10,2,10,-1,3,10,7,-5,-10,-1,3,4,-4,4,10,9,10,9,1,8,8,-9,-10,1,1,6,5,-3,8,2,1,-8,-3,1,-7,-7,7,-1,-4,-8,8,9,3,4,-1,1,-6,-3,6,-4,-2,-9,8,-7,-6,-9,8,8,2,-5,8,5,5,-4,1,-5,8,-4,-5,3,6,8,10,7,7,2,-10,-1,4,-7,3,8,5,10,-2,3,-2,4,-6,3,3,-1,2,-7,7,-3,-5,2,4,-1,-4,6,5,10,-9,9,8,-4,-1,-9,6,-9,-5,-2,-10,5,7,-1,-9,6,-2,1,-4,-4,-7,-5,7,5,-2,8,10,-7,-5,9,-7,-4,-1,-1,-2,-2,-8,-4,-1,-6,8,7,9,4,2,2,2,10,-2,10,8,3,-1,2,7,-2,-3,-4,-3,-8,6,4,-7,3,7,-3,7,10,2,7,9,-4,-10,-5,-9,-10,5,2,10,1,-9,2,-10,-2,-4,2,10,-4,-6,-5,-3,9,9,-10,-7,6,-5,1,-1,-8,4,8,5,4,2,4,4,-5,-5,4,6,-9,10,-8,3,-8,3,-10,-10,8,4,9,-7,3,-9,-5,6,-10,2,-9,-2,-3,-5,-3,-7,-6,5,1,2,-6,-10,8,5,-4,5,-3,10,-2,-8,9,8,-8,-3,-4,4,7,-1,2,2,2,-9,4,10,4,3,-5,1,1,-2,-10,-5,2,2,1,-10,-3,7,-10,-5,6,10,-6,-5,-6,2,-5,4,4,-3,-2,-7,4,4,2,8,5,1,10,8,5,1,10,9,-3,-10,-5,-2,2,1,-5,-4,-9,-2,1,5,2,5,-3,-6,7,3,-3,-1,1,1,-2,-6,1,10,-8,7,-2,1,-9,2,-3,5,10,-10,-7,8,-5,-2,10,8,8,-7,-2,-8,3,4,-6,1,7,8,-2,5,9,-6,1,9,1,-10,2,3,-9,-3,-8,-3,-8,8,7,9,-1,7,1,1,-1,7,10,-1,9,-4,-10,3,-7,-10,-6,-4,-6,-1,8,10,-5,-3,9,4,9,8,-6,-9,-5,9,10,10,-6,-4,3,4,-3,2,2,-3,-3,-2,1,4,-2,7,8,-7,-10,-9,-5,10,-9,-1,6,3,2,-10,9,-10,9,-1,7,-3,9,2,2,-3,2,-3,-5,-2,2,-1,-8,-1,10,-5,-2,-6,8,-6,-9,3,-2,-2,1,-5,5,-5,8,-1,-10,7,-3,-4,2,3,-10,3,-3,10,-10,-8,-10,10,-10,6,7,3,-10,-3,8,4,-4,-1,-3,-2,5,-9,-4,-3,-10,-6,4,-7,8,-7,-7,6,9,8,-10,6,-10,-2,-4,1,-6,8,-8,-4,-6,3,-1,5,-8,-3,-5,6,4,10,-3,-1,-9,8,-6,4,-3,-5,7,6,5,8,8,5,-1,9,7,-4,-9,-6,5,6,6,-4,-1,2,8,6,-3,-8,-8,-10,-7,3,-9,10,6,1,5,-9,-6,2,1], dtype = "int8")#candidate|6898|(3360,)|const|int8
const_6899 = relay.const([-1,-10,-6,-3,-7,6,5,7,9,-7,5,-3,-7,6,5,1,4,4,-10,-2,5,-2,-3,-4,-8,1,7,6,-8,-9,10,10,9,-4,3,7,-4,-8,7,3,3,1,-5,1,9,-8,-9,-5,-2,-1,-4,3,-9,-7,3,4,-2,-3,3,-2,-5,3,1,-6,6,-10,-6,-10,-3,3,-9,-1,3,-9,9,1,4,-10,4,7,-1,-2,-9,-4,-3,8,6,-2,3,-7,3,-6,6,1,10,-1,5,2,8,-4,-4,3,-2,-3,4,-9,10,3,1,-5,2,-6,1,-8,-3,-2,-5,-1,7,3,-3,-2,8,-10,-9,-2,3,7,5,3,-8,-6,-9,1,10,1,4,10,-7,1,-9,9,2,-6,-9,-4,5,9,7,-1,-4,2,-4,-10,-5,10,-5,-6,3,3,-4,-1,4,-4,-10,10,7,-1,-6,-3,3,7,-2,-6,-8,7,3,2,7,-10,10,2,4,10,4,5,9,-7,6,6,-2,5,-2,-3,-4,10,7,-3,5,2,-9,9,8,10,1,7,2,9,10,7,-6,-8,-8,3,4,-5,4,-4,-1,-8,4,-4,-7,2,-6,9,-7,5,8,9,7,9,-7,6,9,10,9,-10,8,6,-3,6,-4,5,2,3,9,1,-5,6,10,5,-2,6,9,4,8,3,-4,1,-4,5,8,-1,-2,-9,3,-2,1,4,1,-3,9,-1,4,-9,10,-2,-10,3,10,-6,6,-5,-9,8,-7,1,4,-9,5,5,-1,-4,-9,-7,-1,-9,3,5,-5,4,-1,-9,6,-3,5,-4,6,9,7,4,9,4,-1,5,-1,9,-1,-8,6,6,9,8,-10,-1,-5,4,10,7,8,-7,-9,2,3,-9,-9,-2,6,6,-9,2,3,7,5,-7,5,3,-10,-8,-5,4,1,-4,6,-5,-8,8,-5,9,10,-5,9,1,-3,2,5,1,10,6,-7,10,8,-9,4,4,-1,10,-7,7,1,7,5,-3,5,-2,10,6,-3,-2,-10,-2,-5,10,5,-3,9,2,8,-1,-5,-5,-9,5,-5,-9,-3,-9,5,-2,9,5,-5,-3,4,-6,-9,4,-2,-9,5,-6,-3,9,-4,-8,-4,10,2,2,9,5,-1,-7,-7,1,-8,-10,-10,9,-10,7,-10,3,2,7,3,1,-10,-8,5,-9,-6,4,-10,2,-7,-3,-7,10,10,-3,7,9,-2,-4,-6,-2,4,10,8,-1,10,4,10,1,1,-5,5,8,2,-4,5,-1,-1,-10,-3,-4,6,-4,-1,-8,-6,1,-8,-1,-10,-1,3,1,-2,-3,-5,10,6,-10,7,-9,3,-8,-8,-3,6,-3,-5,2,-9,-4,3,-8,8,-6,-7,9,7,-3,8,5,-2,-2,-5,6,-1,-8,4,5,-5,-8,8,-4,-7,-1,-7,-9,-5,7,7,-3,4,5,9,-2,3,-9,-9,7,2,-1,2,-7,10,6,7,-6,-3,1,-2,-6,-2,7,8,5,10,8,-5,1,-8,3,-6,-6,-1,-1,-9,10,-10,1,1,-9,-2,-4,-1,-4,-2,4,-7,9,9,-3,-4,8,-9,3,4,2,-8,-7,-1,-10,8,-5,8,3,1,-6,6,-1,2,7,-8,6,-7,-9,-1,-5,4,-4,-1,10,10,7,9,-4,-3,-10,2,-1,8,1,-6,8,4,4,8,7,9,5,5,-10,-10,1,6,-5,1,-4,10,-9,-6,2,-5,2,-5,4,6,-10,6,-2,-3,-9,-1,-3,6,7,-5,8,8,-5,-6,-2,-3,-1,-6,-1,8,-5,-4,-1,-10,-4,5,-4,1,5,8,-10,-2,10,-3,-6,5,-9,-10,9,7,3,-3,-5,6,-2,9,-5,-2,-8,-10,-6,-6,1,-7,5,4,-8,-5,-1,-4,5,-4,6,-7,-1,-1,-1,-1,-4,-3,-2,7,3,-4,-2,7,4,8,-7,4,-10,-4,3,-3,6,8,-2,10,6,10,-2,5,-8,6,6,1,7,8,3,-9,-9,6,1,-9,-10,4,7,10,2,1,9,7,9,8,-7,8,-5,9,10,2,8,6,9,1,3,1,-5,-8,4,-6,-4,-8,1,-4,5,5,-5,-1,6,-6,-5,8,7,-4,-3,-1,7,5,-7,10,-6,7,3,-6,9,7,10,4,1,-8,8,-1,-9,2,-7,7,-7,-7,-10,1,-6,3,-4,-3,5,-9,-1,10,7,3,6,7,4,-6,-6,6,-5,-8,-8,-4,-2,-7,-5,2,-9,-6,-7,-8,7,-5,-3,5,-10,9,-3,2,-7,-10,-6,-4,9,1,5,5,7,6,-1,-8,-5,-10,1,8,8,10,-2,2,4,-7,5,2,-4,-2,1,-5,-8,-7,-6,6,-4,-10,1,-8,-5,6,9,-4,6,9,5,-6,-8,3,-9,-7,-7,9,-1,5,-2,-8,10,-7,5,6,9,-6,-6,-10,-7,-7,-6,-4,-3,-2,1,7,1,10,9,7,-1,-4,3,-1,3,-7,-4,7,-10,-2,1,4,3,-8,-3,10,-10], dtype = "int8")#candidate|6899|(960,)|const|int8
call_6897 = relay.TupleGetItem(func_2494_call(relay.reshape(const_6898.astype('int8'), [16, 15, 14]), relay.reshape(const_6899.astype('int8'), [16, 15, 4]), ), 3)
call_6900 = relay.TupleGetItem(func_2498_call(relay.reshape(const_6898.astype('int8'), [16, 15, 14]), relay.reshape(const_6899.astype('int8'), [16, 15, 4]), ), 3)
uop_6914 = relay.asin(bop_6893.astype('float32')) # shape=(182,)
uop_6916 = relay.asin(bop_6896.astype('float32')) # shape=(182,)
func_5463_call = mod.get_global_var('func_5463')
func_5465_call = mutated_mod.get_global_var('func_5465')
call_6924 = relay.TupleGetItem(func_5463_call(), 0)
call_6925 = relay.TupleGetItem(func_5465_call(), 0)
output = relay.Tuple([call_6897,const_6898,const_6899,uop_6914,call_6924,])
output2 = relay.Tuple([call_6900,const_6898,const_6899,uop_6916,call_6925,])
func_6931 = relay.Function([var_6892,], output)
mod['func_6931'] = func_6931
mod = relay.transform.InferType()(mod)
mutated_mod['func_6931'] = func_6931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6932 = relay.var("var_6932", dtype = "float64", shape = (182,))#candidate|6932|(182,)|var|float64
func_6931_call = mutated_mod.get_global_var('func_6931')
call_6933 = func_6931_call(var_6932)
output = call_6933
func_6934 = relay.Function([var_6932], output)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_6941 = func_1041_call()
call_6942 = func_1041_call()
output = relay.Tuple([call_6941,])
output2 = relay.Tuple([call_6942,])
func_6970 = relay.Function([], output)
mod['func_6970'] = func_6970
mod = relay.transform.InferType()(mod)
output = func_6970()
func_6971 = relay.Function([], output)
mutated_mod['func_6971'] = func_6971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_7014 = relay.TupleGetItem(func_6860_call(), 0)
call_7015 = relay.TupleGetItem(func_6862_call(), 0)
var_7021 = relay.var("var_7021", dtype = "uint64", shape = (14, 7, 10))#candidate|7021|(14, 7, 10)|var|uint64
bop_7022 = relay.subtract(call_7014.astype('uint8'), relay.reshape(var_7021.astype('uint8'), relay.shape_of(call_7014))) # shape=(14, 7, 10)
bop_7025 = relay.subtract(call_7015.astype('uint8'), relay.reshape(var_7021.astype('uint8'), relay.shape_of(call_7015))) # shape=(14, 7, 10)
output = bop_7022
output2 = bop_7025
func_7028 = relay.Function([var_7021,], output)
mod['func_7028'] = func_7028
mod = relay.transform.InferType()(mod)
var_7029 = relay.var("var_7029", dtype = "uint64", shape = (14, 7, 10))#candidate|7029|(14, 7, 10)|var|uint64
output = func_7028(var_7029)
func_7030 = relay.Function([var_7029], output)
mutated_mod['func_7030'] = func_7030
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7040 = relay.const([[[-2,-6,-2,-5,-6,4,-5,7],[-4,10,-5,2,-4,-8,1,-5],[-6,-8,-7,-3,-7,-8,10,2],[6,-1,-4,-6,9,9,1,1],[-4,8,-3,6,-6,6,-10,9],[8,-8,4,-3,7,10,-6,5]],[[-1,3,4,6,4,5,8,-1],[-5,-1,2,-1,-5,-6,2,-3],[6,9,-7,-9,8,-4,-1,5],[3,-6,-1,3,8,9,3,-6],[-9,-9,1,5,4,-6,-4,3],[-10,-10,6,6,-3,5,-8,4]],[[-6,-4,-1,-6,10,-1,6,2],[5,-4,-5,6,-7,5,1,-5],[-10,-6,9,7,-6,6,4,-8],[9,-9,-4,4,5,-1,9,-5],[-4,-2,-3,-6,7,2,7,-8],[4,3,-4,1,6,-8,-7,-4]],[[4,-6,2,7,-4,-1,-9,-9],[8,-10,9,-4,5,-10,2,5],[-9,-2,-5,-2,-8,-1,-4,9],[-4,-6,2,8,9,10,-3,9],[8,-4,-2,1,1,-6,-4,-1],[-4,9,-7,3,-8,-1,-10,6]],[[-4,8,-9,8,2,-7,1,-3],[4,-2,3,-9,10,4,10,5],[-10,-2,3,1,7,2,-7,-4],[-6,-2,-4,2,10,-2,-5,4],[2,-4,-7,-2,4,-4,-8,-2],[7,-5,-6,2,2,6,-3,-1]],[[-8,9,2,2,5,7,-4,-8],[-4,1,8,5,9,7,2,6],[5,-7,-7,4,-3,-3,-1,-10],[-4,4,8,3,-1,-1,8,-4],[5,3,8,-3,-8,2,1,-4],[-4,-6,10,-2,-10,5,-10,-5]],[[10,-6,5,1,-10,-3,-6,-6],[7,-5,-1,-7,7,3,3,-2],[-5,-1,-10,4,-7,10,7,-6],[-8,-9,-5,4,-10,-9,4,-6],[-2,1,-1,-3,-3,-4,9,-5],[10,-7,-2,-6,9,-5,-1,-4]],[[-8,-4,-10,-9,-9,5,4,6],[6,8,-6,2,2,-10,8,5],[-9,-7,5,3,-1,-4,10,7],[-5,4,9,-9,-3,5,3,9],[10,-10,-4,-1,-3,7,4,1],[-9,5,3,1,2,-9,-8,6]],[[6,3,1,4,8,9,-5,5],[7,2,-3,6,-10,2,-5,6],[-6,-3,2,3,9,3,-4,8],[8,9,-6,7,-2,-6,9,10],[2,4,-1,5,3,-3,-6,-8],[2,6,-4,2,1,-3,-9,-8]],[[6,-6,-3,6,8,-2,-10,-1],[-10,8,7,10,-9,2,5,10],[4,-8,-6,-4,4,1,8,6],[-6,-10,6,4,-2,-7,6,10],[-3,10,5,-6,-10,6,-8,4],[9,-8,7,-2,8,-7,7,8]],[[-8,-1,-2,5,-1,-10,3,2],[9,7,-4,6,-8,-8,-10,5],[7,-4,-3,9,-10,-3,-2,-3],[7,-8,8,-4,-6,-1,1,6],[-2,-4,-9,-8,-1,-10,-10,-5],[-4,9,-6,-2,5,9,-9,-3]]], dtype = "int32")#candidate|7040|(11, 6, 8)|const|int32
const_7041 = relay.const([[[7,-4,5,-1,-2,5,-1,-10],[2,-10,6,-10,9,-9,-7,9],[-7,5,2,-8,2,-10,-6,-8],[6,5,-9,3,10,10,-4,-3],[1,2,-5,8,4,2,8,10],[-5,8,-10,1,2,7,-2,7]],[[-10,7,-9,-7,-2,-3,-7,4],[8,8,-10,5,-2,-2,-7,-8],[-7,-4,-1,-7,10,-1,3,-10],[7,8,-7,-3,-7,3,-3,-1],[-9,7,8,1,6,-6,9,-9],[-4,-6,-9,-9,-4,-10,-7,-7]],[[6,4,-8,3,-9,4,-4,6],[9,10,1,-4,-4,-9,-5,-5],[10,8,-8,-3,-9,7,-9,3],[7,6,3,-2,-6,7,-7,6],[-4,7,-3,-1,7,-8,-10,-4],[4,-4,4,3,-7,3,3,-3]],[[-2,-10,-1,9,-8,-4,-8,5],[2,9,5,6,-2,-8,-6,5],[9,5,6,-10,3,-3,6,-4],[-1,-2,7,-10,7,-6,-7,3],[6,-10,3,7,3,8,-1,-8],[5,9,-10,-1,-7,1,7,1]],[[-3,-6,-10,2,-4,-5,-3,5],[4,10,-3,2,9,5,7,-7],[-7,-9,-5,-2,-1,4,-1,4],[5,9,6,-9,5,8,7,4],[-10,3,-4,-6,4,-3,-9,10],[10,1,1,10,3,9,5,6]],[[-6,5,-5,-9,9,6,8,1],[5,5,-3,3,-4,5,-6,7],[1,-6,-2,-9,-8,10,-9,7],[4,-2,-6,2,7,-1,2,7],[-1,2,-7,-4,-6,-4,-5,10],[10,8,-7,7,-10,7,8,5]],[[-6,-3,-10,9,-1,-2,1,-6],[4,-10,-6,4,-7,8,-4,7],[2,2,-8,9,-3,6,2,8],[7,8,-5,9,-5,1,10,1],[9,7,6,7,-6,5,6,-4],[1,8,6,2,-6,1,1,9]],[[5,7,1,-1,8,3,-1,-1],[-8,-2,8,-6,-7,10,8,9],[-5,-7,2,-1,5,-6,-10,-3],[-8,5,-9,8,-7,-3,8,-10],[-10,-9,-4,3,-4,-10,-10,5],[7,3,10,-1,10,1,8,2]],[[10,-10,-2,6,6,2,-10,-1],[8,3,5,-4,10,6,-9,-5],[10,3,-10,1,6,9,2,-3],[6,-8,-1,-8,10,-10,2,7],[-1,-5,-1,7,10,5,8,4],[-5,-4,7,-7,6,7,3,10]],[[-4,6,-3,-7,1,-7,-2,-2],[5,3,-10,8,-10,-3,-9,-10],[10,-10,-1,6,-9,-10,3,-7],[-7,-10,-3,-2,5,7,-10,9],[-2,-5,-8,-4,5,9,5,-4],[-6,-1,5,1,1,-4,-4,-3]],[[1,-1,10,-7,9,-2,-10,7],[3,5,3,7,-6,5,3,-8],[7,-5,-3,1,-8,6,-1,6],[-1,9,-8,8,-7,-6,4,-7],[3,9,4,-10,4,8,9,9],[-6,-5,-5,10,9,-4,-10,-5]]], dtype = "int32")#candidate|7041|(11, 6, 8)|const|int32
bop_7042 = relay.bitwise_and(const_7040.astype('int32'), relay.reshape(const_7041.astype('int32'), relay.shape_of(const_7040))) # shape=(11, 6, 8)
uop_7069 = relay.asin(const_7041.astype('float32')) # shape=(11, 6, 8)
output = relay.Tuple([bop_7042,uop_7069,])
output2 = relay.Tuple([bop_7042,uop_7069,])
func_7071 = relay.Function([], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
output = func_7071()
func_7072 = relay.Function([], output)
mutated_mod['func_7072'] = func_7072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_7086 = relay.TupleGetItem(func_5856_call(), 1)
call_7087 = relay.TupleGetItem(func_5858_call(), 1)
func_4466_call = mod.get_global_var('func_4466')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_7101 = relay.TupleGetItem(func_4466_call(), 0)
call_7102 = relay.TupleGetItem(func_4467_call(), 0)
func_1662_call = mod.get_global_var('func_1662')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_7103 = relay.TupleGetItem(func_1662_call(), 0)
call_7104 = relay.TupleGetItem(func_1664_call(), 0)
func_4343_call = mod.get_global_var('func_4343')
func_4345_call = mutated_mod.get_global_var('func_4345')
var_7108 = relay.var("var_7108", dtype = "float32", shape = (176, 1))#candidate|7108|(176, 1)|var|float32
call_7107 = relay.TupleGetItem(func_4343_call(relay.reshape(var_7108.astype('float32'), [176,])), 1)
call_7109 = relay.TupleGetItem(func_4345_call(relay.reshape(var_7108.astype('float32'), [176,])), 1)
output = relay.Tuple([call_7086,call_7101,call_7103,call_7107,var_7108,])
output2 = relay.Tuple([call_7087,call_7102,call_7104,call_7109,var_7108,])
func_7135 = relay.Function([var_7108,], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7136 = relay.var("var_7136", dtype = "float32", shape = (176, 1))#candidate|7136|(176, 1)|var|float32
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7137 = func_7135_call(var_7136)
output = call_7137
func_7138 = relay.Function([var_7136], output)
mutated_mod['func_7138'] = func_7138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_7145 = relay.TupleGetItem(func_5856_call(), 1)
call_7146 = relay.TupleGetItem(func_5858_call(), 1)
output = relay.Tuple([call_7145,])
output2 = relay.Tuple([call_7146,])
func_7179 = relay.Function([], output)
mod['func_7179'] = func_7179
mod = relay.transform.InferType()(mod)
output = func_7179()
func_7180 = relay.Function([], output)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2399_call = mod.get_global_var('func_2399')
func_2401_call = mutated_mod.get_global_var('func_2401')
call_7187 = relay.TupleGetItem(func_2399_call(), 1)
call_7188 = relay.TupleGetItem(func_2401_call(), 1)
output = call_7187
output2 = call_7188
func_7216 = relay.Function([], output)
mod['func_7216'] = func_7216
mod = relay.transform.InferType()(mod)
output = func_7216()
func_7217 = relay.Function([], output)
mutated_mod['func_7217'] = func_7217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_7296 = relay.TupleGetItem(func_938_call(), 0)
call_7297 = relay.TupleGetItem(func_939_call(), 0)
func_2560_call = mod.get_global_var('func_2560')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_7298 = relay.TupleGetItem(func_2560_call(), 0)
call_7299 = relay.TupleGetItem(func_2562_call(), 0)
output = relay.Tuple([call_7296,call_7298,])
output2 = relay.Tuple([call_7297,call_7299,])
func_7316 = relay.Function([], output)
mod['func_7316'] = func_7316
mod = relay.transform.InferType()(mod)
mutated_mod['func_7316'] = func_7316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7316_call = mutated_mod.get_global_var('func_7316')
call_7317 = func_7316_call()
output = call_7317
func_7318 = relay.Function([], output)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3193_call = mod.get_global_var('func_3193')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_7351 = relay.TupleGetItem(func_3193_call(), 1)
call_7352 = relay.TupleGetItem(func_3195_call(), 1)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_7407 = func_1338_call()
call_7408 = func_1338_call()
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_7429 = relay.TupleGetItem(func_2901_call(), 1)
call_7430 = relay.TupleGetItem(func_2902_call(), 1)
output = relay.Tuple([call_7351,call_7407,call_7429,])
output2 = relay.Tuple([call_7352,call_7408,call_7430,])
func_7441 = relay.Function([], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
output = func_7441()
func_7442 = relay.Function([], output)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5008_call = mod.get_global_var('func_5008')
func_5009_call = mutated_mod.get_global_var('func_5009')
call_7468 = relay.TupleGetItem(func_5008_call(), 0)
call_7469 = relay.TupleGetItem(func_5009_call(), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_7479 = relay.var("var_7479", dtype = "int8", shape = (3360,))#candidate|7479|(3360,)|var|int8
call_7478 = relay.TupleGetItem(func_3213_call(relay.reshape(var_7479.astype('int8'), [3360,])), 0)
call_7480 = relay.TupleGetItem(func_3216_call(relay.reshape(var_7479.astype('int8'), [3360,])), 0)
output = relay.Tuple([call_7468,call_7478,var_7479,])
output2 = relay.Tuple([call_7469,call_7480,var_7479,])
func_7483 = relay.Function([var_7479,], output)
mod['func_7483'] = func_7483
mod = relay.transform.InferType()(mod)
mutated_mod['func_7483'] = func_7483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7484 = relay.var("var_7484", dtype = "int8", shape = (3360,))#candidate|7484|(3360,)|var|int8
func_7483_call = mutated_mod.get_global_var('func_7483')
call_7485 = func_7483_call(var_7484)
output = call_7485
func_7486 = relay.Function([var_7484], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1596_call = mod.get_global_var('func_1596')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_7525 = relay.TupleGetItem(func_1596_call(), 0)
call_7526 = relay.TupleGetItem(func_1597_call(), 0)
output = call_7525
output2 = call_7526
func_7529 = relay.Function([], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
mutated_mod['func_7529'] = func_7529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mutated_mod.get_global_var('func_7529')
call_7530 = func_7529_call()
output = call_7530
func_7531 = relay.Function([], output)
mutated_mod['func_7531'] = func_7531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_7592 = func_1041_call()
call_7593 = func_1041_call()
output = relay.Tuple([call_7592,])
output2 = relay.Tuple([call_7593,])
func_7606 = relay.Function([], output)
mod['func_7606'] = func_7606
mod = relay.transform.InferType()(mod)
output = func_7606()
func_7607 = relay.Function([], output)
mutated_mod['func_7607'] = func_7607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_7691 = relay.TupleGetItem(func_6860_call(), 0)
call_7692 = relay.TupleGetItem(func_6862_call(), 0)
output = call_7691
output2 = call_7692
func_7710 = relay.Function([], output)
mod['func_7710'] = func_7710
mod = relay.transform.InferType()(mod)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7710_call = mutated_mod.get_global_var('func_7710')
call_7711 = func_7710_call()
output = call_7711
func_7712 = relay.Function([], output)
mutated_mod['func_7712'] = func_7712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7743 = relay.var("var_7743", dtype = "uint64", shape = (12, 13, 15))#candidate|7743|(12, 13, 15)|var|uint64
const_7744 = relay.const([[[-3,2,4,-1,6,3,9,-7,-3,-1,-8,7,-7,10,-10],[-1,-3,10,-3,-2,10,-8,1,3,-4,-5,9,10,10,-5],[-1,5,1,1,8,-4,-3,9,-8,8,-7,4,6,3,8],[-8,6,10,1,-5,7,1,-2,3,-3,1,5,-7,3,-7],[-7,7,8,-5,3,10,-9,-9,1,10,3,7,1,1,3],[-5,4,-8,-3,3,-10,5,6,-2,-4,-3,6,-8,-4,-10],[-6,-7,-9,5,7,8,-1,-9,-5,-3,3,-9,-4,5,6],[4,10,-2,-8,3,-5,5,1,4,-4,8,-3,-8,2,6],[9,-9,3,10,-10,-9,3,2,7,-2,3,10,-7,-4,2],[-8,-9,-1,-2,-6,-5,9,10,-4,7,9,7,7,-10,4],[2,4,-1,-6,8,-3,-8,1,-4,-6,-2,-5,8,3,-3],[-9,-9,6,8,10,5,-8,-8,2,5,-6,-5,-6,-3,1],[5,2,-5,-1,2,10,7,-4,-9,8,6,-3,-5,2,-7]],[[5,-2,-6,-5,1,-10,-7,-9,5,-9,1,9,4,2,-3],[10,-3,-2,1,-7,7,1,8,6,7,-6,-9,-4,-10,-1],[-7,10,-5,-8,2,-9,5,-4,10,-6,-5,7,9,9,10],[-4,-10,7,-1,-2,-4,-3,-10,2,6,1,2,5,9,-5],[-3,8,-5,1,-1,10,-5,-4,9,9,6,9,5,-9,8],[-7,-5,6,-9,-6,3,6,9,5,8,7,3,9,-10,6],[4,-10,-6,9,-5,-8,4,-8,-5,-3,8,-4,6,1,-6],[3,-8,-1,9,-10,6,5,-1,3,10,9,-7,-1,8,6],[-6,-6,-2,-1,-6,5,8,-1,5,-6,-3,-4,-10,1,6],[-2,8,9,4,9,10,1,4,-10,8,-5,-1,-9,-6,8],[10,4,-9,-8,-10,2,-2,9,-5,-6,-5,3,-2,8,7],[-9,10,-6,6,-4,2,-8,9,10,-8,-10,-9,-8,7,10],[4,2,-3,-2,4,-7,2,-9,-7,-8,7,-8,10,9,4]],[[3,1,9,-6,4,9,-6,-1,5,-6,-2,10,1,-6,1],[-4,-5,2,8,8,-9,5,9,2,1,6,3,3,-8,-8],[8,-5,-4,10,-6,6,-5,-9,-5,8,-9,1,-2,7,3],[9,7,6,-1,-5,-5,10,-10,-4,-2,-2,7,-4,-10,-9],[8,6,-3,9,1,3,-5,-5,4,3,-2,-8,10,7,6],[-5,-5,-2,-7,2,-6,-1,-10,7,6,1,-5,-6,-2,7],[9,2,4,2,-4,-7,-1,-1,-5,-4,-8,-8,3,-10,-6],[-3,-8,9,-9,-1,-5,-3,-7,7,5,-6,6,8,9,-4],[-4,10,-2,-3,-9,-5,-3,3,5,5,-1,4,4,-7,-1],[-7,-10,6,7,-4,-2,-5,7,6,-7,-3,1,-8,-9,-7],[7,-3,5,8,9,-2,-1,7,-4,2,-3,2,10,8,-6],[-8,-2,-8,2,-1,-8,-3,8,8,4,-5,-3,-10,10,4],[6,-9,-5,-5,4,2,-9,-10,-7,-10,8,-10,4,-6,10]],[[10,-4,-2,5,9,-5,1,6,-10,-2,3,-6,3,-3,-4],[-10,8,-3,-4,10,-8,-2,7,-2,10,7,-4,-8,-3,-7],[-5,3,-1,-4,5,-6,-8,-3,8,-2,-1,-6,4,-3,7],[5,-7,5,-7,2,-4,-4,-9,-9,-4,9,-2,10,9,2],[-3,9,-7,7,7,5,-10,-6,-8,7,-6,7,1,1,-1],[9,-1,-6,-5,2,2,5,-8,10,6,8,-4,-7,2,-5],[2,-9,-2,-1,7,3,1,-1,9,-5,-7,-6,-7,5,4],[4,-6,8,9,-7,3,6,-7,2,-8,-2,9,-7,-2,8],[4,1,7,10,-7,4,8,-5,-9,-1,-6,-4,-3,-3,-5],[1,5,1,-1,9,7,-7,5,10,-9,-3,-5,1,-7,-5],[5,2,-9,-1,-4,-6,6,-8,7,7,2,-2,6,-7,8],[-5,-9,3,2,6,-8,8,10,-5,7,-5,-1,-6,-2,9],[-4,-5,1,-8,-3,8,-9,-5,4,5,3,10,1,-10,8]],[[5,4,-4,-7,6,1,1,-2,-8,-6,10,7,3,6,2],[-3,-8,6,-9,-8,-3,1,-8,10,-1,-1,4,-1,-5,-2],[-2,4,1,-2,3,7,9,-9,3,5,6,5,5,8,-2],[8,5,-4,10,-7,7,8,-6,-7,8,2,-9,3,2,5],[-2,-8,5,-3,7,9,-6,4,-5,10,2,-7,-9,-6,-4],[3,-5,2,4,-6,-5,-6,1,-2,8,2,-4,-2,1,-1],[10,2,-8,7,10,-2,-8,8,8,-10,4,8,-10,10,-8],[-8,-9,-4,-5,-7,-4,-1,-7,4,1,-4,5,-2,10,-8],[-2,-7,-5,8,-3,4,-3,-2,6,-8,1,3,-3,2,-8],[2,-7,1,-9,1,-5,1,-1,-10,8,-7,9,-6,-6,6],[9,4,-6,-7,5,8,6,-7,2,-6,-7,-1,5,-9,-6],[-3,-4,10,-1,6,8,5,5,10,1,-2,-1,5,2,6],[-10,2,5,5,-8,3,6,9,2,-1,-5,1,7,3,1]],[[-5,8,6,-9,1,-1,3,-2,1,2,-9,6,-5,6,-10],[7,10,3,9,7,9,-4,-7,5,-2,-1,-3,1,-10,6],[-3,-5,8,-9,10,-9,-5,-1,1,2,2,6,-2,3,-3],[-2,-4,1,9,-1,7,-9,-2,7,-8,-9,-4,-6,-2,-8],[8,5,-9,5,8,6,-7,10,-5,5,5,4,6,6,8],[5,4,-1,-8,-8,4,2,8,1,10,-9,-9,-6,4,5],[6,10,-3,2,7,6,5,-3,3,-8,-1,9,1,-6,-7],[-7,-4,2,7,-7,-5,6,-2,-3,-4,-9,10,-4,3,-4],[-1,-5,9,10,-3,-2,1,-8,-8,9,4,6,6,-4,8],[-1,-10,-5,6,-5,-2,9,7,-6,2,7,-5,-9,1,-10],[-3,9,9,-2,-9,8,-6,-7,-6,-7,10,4,5,6,7],[6,-9,3,10,5,-4,3,9,2,4,-6,3,10,3,5],[-2,-2,-5,8,-2,-5,5,-6,-7,-2,8,-7,-7,-1,3]],[[-2,5,7,-1,-5,8,-7,7,9,-2,9,10,4,-3,6],[1,2,-2,-7,-3,-5,-4,6,-6,9,8,1,-2,-3,-8],[-2,1,-6,-2,-5,7,6,2,5,8,7,10,6,-3,-8],[10,-1,-3,-5,1,-9,-1,10,-8,-3,-8,4,10,-1,-1],[-3,8,-3,2,5,-7,2,1,1,-8,10,7,-4,-4,-10],[-4,7,9,-3,5,2,6,7,-7,-9,-3,1,-2,6,1],[-2,-1,7,8,-8,-9,2,8,3,10,-10,-2,4,7,-4],[8,-3,7,-8,1,-8,8,-6,-1,-2,4,5,-5,1,-1],[-2,3,9,-5,-4,2,-7,-4,-7,-3,-8,-2,-4,-4,-1],[-10,-5,8,4,8,10,-2,10,-1,8,7,2,9,-6,-10],[7,8,4,5,-9,-6,4,-7,3,-3,-3,-7,2,2,-10],[-3,-2,-8,-8,4,7,-8,9,5,-5,-5,3,-5,9,-10],[-10,5,-5,10,-5,1,-6,2,4,9,8,-8,-5,5,-2]],[[2,-10,-6,9,10,-10,-7,2,2,-7,-5,-5,7,8,4],[6,4,5,3,-3,2,-4,10,6,-1,-4,-9,1,-1,-9],[1,-2,-1,6,-5,-7,-4,3,8,-7,6,9,-2,-3,-1],[7,8,-8,8,-7,3,-7,-6,1,4,6,1,5,-6,-4],[3,-9,-9,-3,1,10,-3,-2,-7,-4,-3,1,8,5,8],[-8,-9,3,-6,-6,4,10,3,8,-7,3,5,-3,-1,6],[8,-10,3,-6,10,3,-10,-3,6,-2,-4,-2,10,1,-4],[1,-10,-8,6,9,9,-2,-6,-1,6,7,10,-8,-5,-2],[-5,10,5,10,5,7,-3,3,4,4,-7,10,10,-10,9],[3,-4,-1,2,-8,1,9,6,3,-5,-10,8,4,9,1],[3,-4,-9,-5,8,-8,-1,-5,10,-9,-5,-9,-10,-8,-4],[-9,-5,5,-9,6,4,-8,-10,1,1,5,10,8,7,-1],[9,10,-4,-9,-3,-2,-9,-3,-3,9,6,-1,-7,4,-7]],[[9,-4,1,3,-1,-6,-5,-5,-2,-3,-2,4,-5,2,-9],[4,-6,-4,-8,-8,-5,-4,-9,-1,5,3,-4,1,-10,-9],[-4,4,5,9,-6,2,3,-4,-5,5,-10,9,5,-3,5],[-1,-7,8,-4,-5,6,-4,5,1,-4,2,-3,5,-3,3],[10,-6,1,-9,3,-5,-3,-5,-8,8,3,3,-3,5,9],[-3,-2,-6,-4,-5,-10,3,-1,4,7,1,-4,-7,5,2],[-10,2,5,-4,-4,-6,-1,-2,9,4,-9,-5,1,9,-6],[1,7,7,-3,1,-9,-4,5,-3,-1,10,3,-3,9,-2],[5,10,-9,4,-7,-7,-9,7,6,-10,-8,-7,6,-5,3],[8,3,10,5,3,-8,-8,-3,2,-6,8,-3,-5,6,1],[-9,9,-9,3,-2,7,9,8,-2,-1,5,2,-4,-4,-9],[2,-4,-10,-10,8,-1,4,2,-2,-2,-5,-4,-2,6,-1],[-1,-10,3,-9,-5,5,-3,6,10,-2,-2,-1,5,-5,1]],[[3,8,-8,-5,2,-5,-8,7,-6,1,-1,-6,-7,6,-10],[-9,-1,-10,8,6,-7,-8,-9,-8,-1,-2,2,-5,-7,-3],[9,3,9,-7,-1,8,3,-1,-2,-7,8,5,7,10,-10],[4,5,7,3,10,8,9,5,-4,-1,-9,-2,10,4,-7],[3,4,-9,1,-5,-5,10,-4,6,-1,3,-7,-2,-6,6],[-1,-5,4,-5,5,7,-5,-3,-3,9,7,2,8,-10,-2],[-8,-3,7,-8,-4,2,-2,-10,8,-8,-7,-10,1,-5,-4],[9,-10,-6,2,1,6,9,2,7,-3,8,1,9,8,3],[2,6,4,1,6,4,-7,4,-2,-9,5,3,7,-8,-7],[-7,-2,-1,6,2,5,-6,9,-10,-10,-4,-8,10,10,-10],[-8,-5,9,7,-9,-7,-5,7,-2,4,9,8,-4,3,-8],[-2,10,-7,5,-4,2,-1,6,-2,-6,-4,-2,-2,-1,-4],[-6,5,6,-4,-3,7,2,2,-9,-10,-9,-10,7,1,7]],[[-6,2,10,1,-10,4,10,9,-8,8,-3,-2,-10,-5,6],[-6,6,4,-7,9,9,-7,1,-3,-2,7,-10,8,-8,2],[-6,6,8,9,-3,3,2,-3,5,4,-8,5,-9,-7,10],[1,-8,10,-5,1,7,-3,5,-4,3,10,-6,-9,-9,-4],[-8,5,-1,1,-3,-5,-6,9,-4,4,8,1,8,-1,-10],[4,-9,1,-3,4,-5,-4,9,4,4,-3,1,-8,-5,4],[3,1,-6,-2,7,2,-6,4,-10,9,6,8,-5,6,7],[-5,-7,-4,1,1,1,1,-10,3,3,5,3,7,-2,-5],[-3,1,9,5,1,-9,9,-2,-4,2,8,-9,1,-6,-10],[-1,-3,5,8,-1,5,-5,-1,7,3,-5,5,1,-3,-8],[-10,-8,-9,-5,2,-8,-8,-3,-2,-8,-8,-6,-8,-10,6],[4,4,6,-4,2,9,-2,3,-7,6,9,-8,-8,6,9],[-5,-5,-4,4,-2,-1,6,-9,1,-5,-1,2,3,-8,-9]],[[8,-8,4,-4,8,-3,-10,-4,-10,-2,1,-1,-3,-2,-3],[5,-6,-4,7,-7,7,-5,8,3,6,5,1,10,-10,6],[-5,7,-6,-10,-1,7,8,5,3,6,-5,9,-6,-1,-3],[-2,-8,10,9,8,-8,10,-8,1,-4,3,7,9,-10,10],[7,-2,2,-2,3,-1,-2,-6,-7,-2,-4,-2,6,4,2],[-9,-7,-8,4,-10,-10,7,-3,4,2,2,-2,8,-6,4],[-8,8,6,6,8,7,10,-9,1,-4,-9,10,1,-9,-2],[-8,8,10,4,3,4,7,8,-7,-7,-1,-7,8,-10,-8],[10,3,-2,1,8,5,6,8,-7,-2,-5,-3,-3,-2,-5],[-3,4,2,-10,-9,7,-4,7,-6,4,1,10,-2,4,-5],[-4,-6,8,-4,9,9,-9,-8,5,-3,3,-8,9,-7,6],[3,-4,-8,-5,3,6,-9,-6,-1,2,-10,7,9,10,8],[1,7,10,-10,-6,8,-8,6,3,-5,-9,-1,4,4,-9]]], dtype = "uint64")#candidate|7744|(12, 13, 15)|const|uint64
bop_7745 = relay.greater(var_7743.astype('bool'), relay.reshape(const_7744.astype('bool'), relay.shape_of(var_7743))) # shape=(12, 13, 15)
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_7755 = relay.TupleGetItem(func_938_call(), 0)
call_7756 = relay.TupleGetItem(func_939_call(), 0)
output = relay.Tuple([bop_7745,call_7755,])
output2 = relay.Tuple([bop_7745,call_7756,])
func_7767 = relay.Function([var_7743,], output)
mod['func_7767'] = func_7767
mod = relay.transform.InferType()(mod)
mutated_mod['func_7767'] = func_7767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7768 = relay.var("var_7768", dtype = "uint64", shape = (12, 13, 15))#candidate|7768|(12, 13, 15)|var|uint64
func_7767_call = mutated_mod.get_global_var('func_7767')
call_7769 = func_7767_call(var_7768)
output = call_7769
func_7770 = relay.Function([var_7768], output)
mutated_mod['func_7770'] = func_7770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7794 = relay.var("var_7794", dtype = "bool", shape = (1, 9, 11))#candidate|7794|(1, 9, 11)|var|bool
var_7795 = relay.var("var_7795", dtype = "bool", shape = (1, 9, 11))#candidate|7795|(1, 9, 11)|var|bool
bop_7796 = relay.logical_or(var_7794.astype('bool'), relay.reshape(var_7795.astype('bool'), relay.shape_of(var_7794))) # shape=(1, 9, 11)
output = relay.Tuple([bop_7796,])
output2 = relay.Tuple([bop_7796,])
func_7801 = relay.Function([var_7794,var_7795,], output)
mod['func_7801'] = func_7801
mod = relay.transform.InferType()(mod)
var_7802 = relay.var("var_7802", dtype = "bool", shape = (1, 9, 11))#candidate|7802|(1, 9, 11)|var|bool
var_7803 = relay.var("var_7803", dtype = "bool", shape = (1, 9, 11))#candidate|7803|(1, 9, 11)|var|bool
output = func_7801(var_7802,var_7803,)
func_7804 = relay.Function([var_7802,var_7803,], output)
mutated_mod['func_7804'] = func_7804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5963_call = mod.get_global_var('func_5963')
func_5965_call = mutated_mod.get_global_var('func_5965')
call_7833 = relay.TupleGetItem(func_5963_call(), 2)
call_7834 = relay.TupleGetItem(func_5965_call(), 2)
output = call_7833
output2 = call_7834
func_7837 = relay.Function([], output)
mod['func_7837'] = func_7837
mod = relay.transform.InferType()(mod)
mutated_mod['func_7837'] = func_7837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7837_call = mutated_mod.get_global_var('func_7837')
call_7838 = func_7837_call()
output = call_7838
func_7839 = relay.Function([], output)
mutated_mod['func_7839'] = func_7839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_7879 = relay.TupleGetItem(func_2115_call(), 0)
call_7880 = relay.TupleGetItem(func_2117_call(), 0)
output = call_7879
output2 = call_7880
func_7903 = relay.Function([], output)
mod['func_7903'] = func_7903
mod = relay.transform.InferType()(mod)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mutated_mod.get_global_var('func_7903')
call_7904 = func_7903_call()
output = call_7904
func_7905 = relay.Function([], output)
mutated_mod['func_7905'] = func_7905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3193_call = mod.get_global_var('func_3193')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_7919 = relay.TupleGetItem(func_3193_call(), 0)
call_7920 = relay.TupleGetItem(func_3195_call(), 0)
output = call_7919
output2 = call_7920
func_7921 = relay.Function([], output)
mod['func_7921'] = func_7921
mod = relay.transform.InferType()(mod)
output = func_7921()
func_7922 = relay.Function([], output)
mutated_mod['func_7922'] = func_7922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mod.get_global_var('func_6456')
func_6457_call = mutated_mod.get_global_var('func_6457')
call_7978 = relay.TupleGetItem(func_6456_call(), 1)
call_7979 = relay.TupleGetItem(func_6457_call(), 1)
func_3651_call = mod.get_global_var('func_3651')
func_3653_call = mutated_mod.get_global_var('func_3653')
var_7982 = relay.var("var_7982", dtype = "uint8", shape = (15, 63))#candidate|7982|(15, 63)|var|uint8
call_7981 = relay.TupleGetItem(func_3651_call(relay.reshape(var_7982.astype('uint8'), [945,])), 0)
call_7983 = relay.TupleGetItem(func_3653_call(relay.reshape(var_7982.astype('uint8'), [945,])), 0)
func_2362_call = mod.get_global_var('func_2362')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_8007 = func_2362_call()
call_8008 = func_2362_call()
output = relay.Tuple([call_7978,call_7981,var_7982,call_8007,])
output2 = relay.Tuple([call_7979,call_7983,var_7982,call_8008,])
func_8015 = relay.Function([var_7982,], output)
mod['func_8015'] = func_8015
mod = relay.transform.InferType()(mod)
mutated_mod['func_8015'] = func_8015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8016 = relay.var("var_8016", dtype = "uint8", shape = (15, 63))#candidate|8016|(15, 63)|var|uint8
func_8015_call = mutated_mod.get_global_var('func_8015')
call_8017 = func_8015_call(var_8016)
output = call_8017
func_8018 = relay.Function([var_8016], output)
mutated_mod['func_8018'] = func_8018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_8030 = func_4209_call()
call_8031 = func_4209_call()
var_8056 = relay.var("var_8056", dtype = "float32", shape = (182,))#candidate|8056|(182,)|var|float32
bop_8057 = relay.greater_equal(call_8030.astype('bool'), relay.reshape(var_8056.astype('bool'), relay.shape_of(call_8030))) # shape=(182,)
bop_8060 = relay.greater_equal(call_8031.astype('bool'), relay.reshape(var_8056.astype('bool'), relay.shape_of(call_8031))) # shape=(182,)
bop_8062 = relay.bitwise_or(call_8030.astype('uint64'), relay.reshape(var_8056.astype('uint64'), relay.shape_of(call_8030))) # shape=(182,)
bop_8065 = relay.bitwise_or(call_8031.astype('uint64'), relay.reshape(var_8056.astype('uint64'), relay.shape_of(call_8031))) # shape=(182,)
output = relay.Tuple([bop_8057,bop_8062,])
output2 = relay.Tuple([bop_8060,bop_8065,])
func_8069 = relay.Function([var_8056,], output)
mod['func_8069'] = func_8069
mod = relay.transform.InferType()(mod)
var_8070 = relay.var("var_8070", dtype = "float32", shape = (182,))#candidate|8070|(182,)|var|float32
output = func_8069(var_8070)
func_8071 = relay.Function([var_8070], output)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_8094 = func_1338_call()
call_8095 = func_1338_call()
output = relay.Tuple([call_8094,])
output2 = relay.Tuple([call_8095,])
func_8125 = relay.Function([], output)
mod['func_8125'] = func_8125
mod = relay.transform.InferType()(mod)
output = func_8125()
func_8126 = relay.Function([], output)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_8132 = relay.TupleGetItem(func_7441_call(), 1)
call_8133 = relay.TupleGetItem(func_7442_call(), 1)
uop_8150 = relay.acosh(call_8132.astype('float32')) # shape=(182,)
uop_8152 = relay.acosh(call_8133.astype('float32')) # shape=(182,)
func_5587_call = mod.get_global_var('func_5587')
func_5589_call = mutated_mod.get_global_var('func_5589')
call_8158 = relay.TupleGetItem(func_5587_call(), 0)
call_8159 = relay.TupleGetItem(func_5589_call(), 0)
output = relay.Tuple([uop_8150,call_8158,])
output2 = relay.Tuple([uop_8152,call_8159,])
func_8161 = relay.Function([], output)
mod['func_8161'] = func_8161
mod = relay.transform.InferType()(mod)
mutated_mod['func_8161'] = func_8161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8161_call = mutated_mod.get_global_var('func_8161')
call_8162 = func_8161_call()
output = call_8162
func_8163 = relay.Function([], output)
mutated_mod['func_8163'] = func_8163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mod.get_global_var('func_7071')
func_7072_call = mutated_mod.get_global_var('func_7072')
call_8199 = relay.TupleGetItem(func_7071_call(), 1)
call_8200 = relay.TupleGetItem(func_7072_call(), 1)
var_8205 = relay.var("var_8205", dtype = "float32", shape = (11, 6, 8))#candidate|8205|(11, 6, 8)|var|float32
bop_8206 = relay.power(call_8199.astype('float32'), relay.reshape(var_8205.astype('float32'), relay.shape_of(call_8199))) # shape=(11, 6, 8)
bop_8209 = relay.power(call_8200.astype('float32'), relay.reshape(var_8205.astype('float32'), relay.shape_of(call_8200))) # shape=(11, 6, 8)
output = bop_8206
output2 = bop_8209
func_8232 = relay.Function([var_8205,], output)
mod['func_8232'] = func_8232
mod = relay.transform.InferType()(mod)
var_8233 = relay.var("var_8233", dtype = "float32", shape = (11, 6, 8))#candidate|8233|(11, 6, 8)|var|float32
output = func_8232(var_8233)
func_8234 = relay.Function([var_8233], output)
mutated_mod['func_8234'] = func_8234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2083_call = mod.get_global_var('func_2083')
func_2084_call = mutated_mod.get_global_var('func_2084')
call_8251 = relay.TupleGetItem(func_2083_call(), 0)
call_8252 = relay.TupleGetItem(func_2084_call(), 0)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_8262 = relay.TupleGetItem(func_2005_call(), 5)
call_8263 = relay.TupleGetItem(func_2007_call(), 5)
func_6789_call = mod.get_global_var('func_6789')
func_6790_call = mutated_mod.get_global_var('func_6790')
call_8268 = func_6789_call()
call_8269 = func_6789_call()
output = relay.Tuple([call_8251,call_8262,call_8268,])
output2 = relay.Tuple([call_8252,call_8263,call_8269,])
func_8274 = relay.Function([], output)
mod['func_8274'] = func_8274
mod = relay.transform.InferType()(mod)
mutated_mod['func_8274'] = func_8274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mutated_mod.get_global_var('func_8274')
call_8275 = func_8274_call()
output = call_8275
func_8276 = relay.Function([], output)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6970_call = mod.get_global_var('func_6970')
func_6971_call = mutated_mod.get_global_var('func_6971')
call_8386 = relay.TupleGetItem(func_6970_call(), 0)
call_8387 = relay.TupleGetItem(func_6971_call(), 0)
func_1574_call = mod.get_global_var('func_1574')
func_1576_call = mutated_mod.get_global_var('func_1576')
const_8420 = relay.const(2, dtype = "int8")#candidate|8420|()|const|int8
call_8419 = relay.TupleGetItem(func_1574_call(relay.reshape(const_8420.astype('int8'), [])), 0)
call_8421 = relay.TupleGetItem(func_1576_call(relay.reshape(const_8420.astype('int8'), [])), 0)
output = relay.Tuple([call_8386,call_8419,const_8420,])
output2 = relay.Tuple([call_8387,call_8421,const_8420,])
func_8432 = relay.Function([], output)
mod['func_8432'] = func_8432
mod = relay.transform.InferType()(mod)
output = func_8432()
func_8433 = relay.Function([], output)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mod.get_global_var('func_7071')
func_7072_call = mutated_mod.get_global_var('func_7072')
call_8476 = relay.TupleGetItem(func_7071_call(), 0)
call_8477 = relay.TupleGetItem(func_7072_call(), 0)
func_8069_call = mod.get_global_var('func_8069')
func_8071_call = mutated_mod.get_global_var('func_8071')
const_8485 = relay.const([2.972115,8.253786,3.515160,7.554125,-1.183731,6.004036,2.014989,-3.517004,0.148562,-7.742905,-9.327256,8.842802,-6.388498,7.147844,-4.203413,5.975264,-0.444599,4.139089,6.130619,7.967338,8.435832,7.825200,-0.485271,6.505244,-9.299156,5.547903,7.151617,5.148893,4.471955,7.984186,-4.344398,6.077902,6.916609,-5.214263,-9.618114,0.663321,8.254093,-1.785227,-9.521808,4.052515,9.731795,5.322195,6.421391,-2.574629,-3.277367,-3.261677,7.643928,8.222419,0.256605,4.370977,2.012702,6.927617,7.766460,-0.381085,8.142194,2.924358,-7.105654,8.008343,8.782861,4.303602,-4.798203,-4.858382,0.357693,-3.658384,4.687944,-1.873445,-1.569595,9.467053,-0.472609,9.233781,5.708032,-9.533092,-7.134604,1.952076,-9.240541,9.879376,1.107649,-8.098268,5.678125,5.973690,-8.485960,5.279710,7.951235,3.652402,7.913509,2.645847,7.487772,-8.157813,-6.456650,5.215961,-9.848185,8.753748,-2.704719,3.303267,-2.572577,-0.174702,-4.982059,-9.238975,5.902167,7.777101,-8.634520,4.728366,9.580711,5.747472,-3.391118,-2.082557,2.524942,-9.679543,2.268581,5.617300,-8.174966,-7.356911,-3.104772,-6.148600,-5.591649,-6.162630,-2.373997,-6.571389,2.036153,9.515389,-1.581644,9.445831,6.501825,8.263867,9.089499,7.771229,8.358632,-4.181410,-7.954846,9.244834,4.456647,2.648508,1.763550,3.127498,-2.940254,-8.755274,-2.775164,-1.510609,7.834322,-9.342993,9.173930,-0.829007,2.156792,-3.030384,0.917877,2.598761,0.366653,5.499495,-3.143115,1.380405,0.282920,-0.994124,4.398401,-0.078395,-4.357942,3.895439,-9.334054,-6.716280,3.368069,5.375911,-5.110488,1.350107,6.072171,7.814239,0.232165,-5.943962,-1.468891,-4.774078,-4.915742,3.567804,1.568403,-5.660646,-1.568492,3.653384,7.560051,2.303131,9.543574,8.707980,8.042607,5.333026,0.340019,7.083021], dtype = "float32")#candidate|8485|(182,)|const|float32
call_8484 = relay.TupleGetItem(func_8069_call(relay.reshape(const_8485.astype('float32'), [182,])), 0)
call_8486 = relay.TupleGetItem(func_8071_call(relay.reshape(const_8485.astype('float32'), [182,])), 0)
output = relay.Tuple([call_8476,call_8484,const_8485,])
output2 = relay.Tuple([call_8477,call_8486,const_8485,])
func_8499 = relay.Function([], output)
mod['func_8499'] = func_8499
mod = relay.transform.InferType()(mod)
mutated_mod['func_8499'] = func_8499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mutated_mod.get_global_var('func_8499')
call_8500 = func_8499_call()
output = call_8500
func_8501 = relay.Function([], output)
mutated_mod['func_8501'] = func_8501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_8549 = relay.TupleGetItem(func_5856_call(), 1)
call_8550 = relay.TupleGetItem(func_5858_call(), 1)
output = relay.Tuple([call_8549,])
output2 = relay.Tuple([call_8550,])
func_8576 = relay.Function([], output)
mod['func_8576'] = func_8576
mod = relay.transform.InferType()(mod)
mutated_mod['func_8576'] = func_8576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8576_call = mutated_mod.get_global_var('func_8576')
call_8577 = func_8576_call()
output = call_8577
func_8578 = relay.Function([], output)
mutated_mod['func_8578'] = func_8578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3689_call = mutated_mod.get_global_var('func_3689')
call_8632 = func_3687_call()
call_8633 = func_3687_call()
output = call_8632
output2 = call_8633
func_8637 = relay.Function([], output)
mod['func_8637'] = func_8637
mod = relay.transform.InferType()(mod)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8637_call = mutated_mod.get_global_var('func_8637')
call_8638 = func_8637_call()
output = call_8638
func_8639 = relay.Function([], output)
mutated_mod['func_8639'] = func_8639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_8647 = relay.TupleGetItem(func_2155_call(), 0)
call_8648 = relay.TupleGetItem(func_2157_call(), 0)
const_8659 = relay.const([9.571379,0.660360,3.638974,3.669991,-1.254494,-2.251047,-0.925539,-0.593941,4.627483,2.795329,-6.269813,-1.253242,-0.982999,6.351441,0.991366,-0.135293,-4.179231,8.174473,-8.005177,6.888058,7.511680,2.966967,-6.884761,-0.661170,-8.806463,-2.795591,-9.560316,9.024329,-0.491262,7.094121,0.887618,-6.981463,-0.423648,3.285751,-7.700644,6.972134,1.368245,-1.010490,4.098704,5.020615,-4.316012,-8.768203,-5.665174,2.436620,9.840192,-2.404515,-2.709645,-6.060675,-4.935063,2.278465,-9.107978,-9.448929,8.005463,-8.396245,-7.127418,-6.727017,3.075376,1.758704,-5.823638,-3.883802,-8.953509,-6.586752,-3.569376,3.048496,1.372512,2.795407,9.333211,1.395350,-0.875361,2.125918,9.393002,0.072264,3.719365,-6.110120,6.541033,4.409816,-2.139251,-9.942679,-0.785359,4.056202,6.909931,-6.900664,7.742720,0.573147,8.569977,-8.327536,2.615207,6.782632,-2.820705,-4.654180,-7.087185,3.133102,-6.128189,2.556990,4.368200,-8.144239,-6.059581,-4.452458,-0.358438,8.362099,-0.484793,-4.440623,-6.597477,-2.433481,7.734057,-7.479331,-4.282625,-3.177884,-5.677494,-8.844524,9.793165,-5.793981,4.764736,9.709574,-1.809227,8.362954,-4.415328,-7.987000,7.083842,3.804207,-1.018848,-4.291922,-0.805132,8.650437,9.208394,-1.357601,-7.794993,-4.744158,9.382039,1.153734,-5.365091,6.532726,-9.239455,1.968025,-8.663809,-7.614848,1.890438,-5.283290,-2.941188,-0.114719,7.429168,-5.294951,1.187517,6.510107,-5.387989,-9.048475,4.964102,8.760146,-1.457175,0.905552,1.515720,3.296878,-3.209386,-6.148659,8.621339,-4.013413,-4.330093,-1.316405,6.166851,-4.330187,-0.367449,9.897573,-3.329784,0.767051,3.530216,-1.404068,-5.119058,5.134163,0.508476,3.312584,-9.602227,2.106437,-7.792397,-0.028281,4.059539,8.565122,-9.975241,9.829074,8.245018,5.981017,1.243229,-2.674170], dtype = "float32")#candidate|8659|(182,)|const|float32
bop_8660 = relay.maximum(call_8647.astype('int64'), relay.reshape(const_8659.astype('int64'), relay.shape_of(call_8647))) # shape=(182,)
bop_8663 = relay.maximum(call_8648.astype('int64'), relay.reshape(const_8659.astype('int64'), relay.shape_of(call_8648))) # shape=(182,)
output = relay.Tuple([bop_8660,])
output2 = relay.Tuple([bop_8663,])
func_8666 = relay.Function([], output)
mod['func_8666'] = func_8666
mod = relay.transform.InferType()(mod)
mutated_mod['func_8666'] = func_8666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8666_call = mutated_mod.get_global_var('func_8666')
call_8667 = func_8666_call()
output = call_8667
func_8668 = relay.Function([], output)
mutated_mod['func_8668'] = func_8668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_8703 = func_2200_call()
call_8704 = func_2200_call()
output = relay.Tuple([call_8703,])
output2 = relay.Tuple([call_8704,])
func_8708 = relay.Function([], output)
mod['func_8708'] = func_8708
mod = relay.transform.InferType()(mod)
output = func_8708()
func_8709 = relay.Function([], output)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1374_call = mod.get_global_var('func_1374')
func_1376_call = mutated_mod.get_global_var('func_1376')
call_8713 = relay.TupleGetItem(func_1374_call(), 0)
call_8714 = relay.TupleGetItem(func_1376_call(), 0)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_8721 = func_4209_call()
call_8722 = func_4209_call()
output = relay.Tuple([call_8713,call_8721,])
output2 = relay.Tuple([call_8714,call_8722,])
func_8725 = relay.Function([], output)
mod['func_8725'] = func_8725
mod = relay.transform.InferType()(mod)
mutated_mod['func_8725'] = func_8725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8725_call = mutated_mod.get_global_var('func_8725')
call_8726 = func_8725_call()
output = call_8726
func_8727 = relay.Function([], output)
mutated_mod['func_8727'] = func_8727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_8757 = relay.TupleGetItem(func_2005_call(), 5)
call_8758 = relay.TupleGetItem(func_2007_call(), 5)
output = call_8757
output2 = call_8758
func_8778 = relay.Function([], output)
mod['func_8778'] = func_8778
mod = relay.transform.InferType()(mod)
mutated_mod['func_8778'] = func_8778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8778_call = mutated_mod.get_global_var('func_8778')
call_8779 = func_8778_call()
output = call_8779
func_8780 = relay.Function([], output)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_8793 = relay.TupleGetItem(func_1035_call(), 2)
call_8794 = relay.TupleGetItem(func_1036_call(), 2)
output = call_8793
output2 = call_8794
func_8797 = relay.Function([], output)
mod['func_8797'] = func_8797
mod = relay.transform.InferType()(mod)
mutated_mod['func_8797'] = func_8797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mutated_mod.get_global_var('func_8797')
call_8798 = func_8797_call()
output = call_8798
func_8799 = relay.Function([], output)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_8836 = func_2200_call()
call_8837 = func_2200_call()
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_8852 = relay.TupleGetItem(func_1253_call(relay.reshape(call_8836.astype('uint64'), [14, 7, 10])), 1)
call_8853 = relay.TupleGetItem(func_1255_call(relay.reshape(call_8836.astype('uint64'), [14, 7, 10])), 1)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_8858 = relay.TupleGetItem(func_1157_call(), 1)
call_8859 = relay.TupleGetItem(func_1159_call(), 1)
output = relay.Tuple([call_8836,call_8852,call_8858,])
output2 = relay.Tuple([call_8837,call_8853,call_8859,])
func_8861 = relay.Function([], output)
mod['func_8861'] = func_8861
mod = relay.transform.InferType()(mod)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mutated_mod.get_global_var('func_8861')
call_8862 = func_8861_call()
output = call_8862
func_8863 = relay.Function([], output)
mutated_mod['func_8863'] = func_8863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_8893 = relay.TupleGetItem(func_6245_call(), 2)
call_8894 = relay.TupleGetItem(func_6246_call(), 2)
func_6245_call = mod.get_global_var('func_6245')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_8907 = relay.TupleGetItem(func_6245_call(), 2)
call_8908 = relay.TupleGetItem(func_6246_call(), 2)
func_2311_call = mod.get_global_var('func_2311')
func_2314_call = mutated_mod.get_global_var('func_2314')
var_8910 = relay.var("var_8910", dtype = "float64", shape = (182,))#candidate|8910|(182,)|var|float64
call_8909 = func_2311_call(relay.reshape(var_8910.astype('float64'), [182,]))
call_8911 = func_2311_call(relay.reshape(var_8910.astype('float64'), [182,]))
func_5229_call = mod.get_global_var('func_5229')
func_5230_call = mutated_mod.get_global_var('func_5230')
call_8934 = relay.TupleGetItem(func_5229_call(), 5)
call_8935 = relay.TupleGetItem(func_5230_call(), 5)
func_5688_call = mod.get_global_var('func_5688')
func_5691_call = mutated_mod.get_global_var('func_5691')
var_8938 = relay.var("var_8938", dtype = "int8", shape = (3360,))#candidate|8938|(3360,)|var|int8
call_8937 = relay.TupleGetItem(func_5688_call(relay.reshape(var_8938.astype('int8'), [3360,])), 2)
call_8939 = relay.TupleGetItem(func_5691_call(relay.reshape(var_8938.astype('int8'), [3360,])), 2)
output = relay.Tuple([call_8893,call_8907,call_8909,var_8910,call_8934,call_8937,var_8938,])
output2 = relay.Tuple([call_8894,call_8908,call_8911,var_8910,call_8935,call_8939,var_8938,])
func_8951 = relay.Function([var_8910,var_8938,], output)
mod['func_8951'] = func_8951
mod = relay.transform.InferType()(mod)
mutated_mod['func_8951'] = func_8951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8951_call = mutated_mod.get_global_var('func_8951')
var_8953 = relay.var("var_8953", dtype = "float64", shape = (182,))#candidate|8953|(182,)|var|float64
var_8954 = relay.var("var_8954", dtype = "int8", shape = (3360,))#candidate|8954|(3360,)|var|int8
call_8952 = func_8951_call(var_8953,var_8954,)
output = call_8952
func_8955 = relay.Function([var_8953,var_8954,], output)
mutated_mod['func_8955'] = func_8955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9020 = relay.var("var_9020", dtype = "float64", shape = (16, 14, 14))#candidate|9020|(16, 14, 14)|var|float64
uop_9021 = relay.acosh(var_9020.astype('float64')) # shape=(16, 14, 14)
func_5463_call = mod.get_global_var('func_5463')
func_5465_call = mutated_mod.get_global_var('func_5465')
call_9033 = relay.TupleGetItem(func_5463_call(), 0)
call_9034 = relay.TupleGetItem(func_5465_call(), 0)
uop_9035 = relay.log2(call_9033.astype('float64')) # shape=(15, 12, 15)
uop_9037 = relay.log2(call_9034.astype('float64')) # shape=(15, 12, 15)
func_405_call = mod.get_global_var('func_405')
func_408_call = mutated_mod.get_global_var('func_408')
var_9043 = relay.var("var_9043", dtype = "float64", shape = (1560,))#candidate|9043|(1560,)|var|float64
call_9042 = relay.TupleGetItem(func_405_call(relay.reshape(var_9043.astype('float64'), [1560,])), 3)
call_9044 = relay.TupleGetItem(func_408_call(relay.reshape(var_9043.astype('float64'), [1560,])), 3)
func_6072_call = mod.get_global_var('func_6072')
func_6073_call = mutated_mod.get_global_var('func_6073')
call_9057 = relay.TupleGetItem(func_6072_call(), 0)
call_9058 = relay.TupleGetItem(func_6073_call(), 0)
output = relay.Tuple([uop_9021,uop_9035,call_9042,var_9043,call_9057,])
output2 = relay.Tuple([uop_9021,uop_9037,call_9044,var_9043,call_9058,])
func_9059 = relay.Function([var_9020,var_9043,], output)
mod['func_9059'] = func_9059
mod = relay.transform.InferType()(mod)
var_9060 = relay.var("var_9060", dtype = "float64", shape = (16, 14, 14))#candidate|9060|(16, 14, 14)|var|float64
var_9061 = relay.var("var_9061", dtype = "float64", shape = (1560,))#candidate|9061|(1560,)|var|float64
output = func_9059(var_9060,var_9061,)
func_9062 = relay.Function([var_9060,var_9061,], output)
mutated_mod['func_9062'] = func_9062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3436_call = mutated_mod.get_global_var('func_3436')
call_9083 = relay.TupleGetItem(func_3434_call(), 1)
call_9084 = relay.TupleGetItem(func_3436_call(), 1)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_9089 = func_865_call()
call_9090 = func_865_call()
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_9095 = func_865_call()
call_9096 = func_865_call()
output = relay.Tuple([call_9083,call_9089,call_9095,])
output2 = relay.Tuple([call_9084,call_9090,call_9096,])
func_9109 = relay.Function([], output)
mod['func_9109'] = func_9109
mod = relay.transform.InferType()(mod)
output = func_9109()
func_9110 = relay.Function([], output)
mutated_mod['func_9110'] = func_9110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_9139 = relay.TupleGetItem(func_2155_call(), 0)
call_9140 = relay.TupleGetItem(func_2157_call(), 0)
output = call_9139
output2 = call_9140
func_9141 = relay.Function([], output)
mod['func_9141'] = func_9141
mod = relay.transform.InferType()(mod)
mutated_mod['func_9141'] = func_9141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mutated_mod.get_global_var('func_9141')
call_9142 = func_9141_call()
output = call_9142
func_9143 = relay.Function([], output)
mutated_mod['func_9143'] = func_9143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_9162 = func_4209_call()
call_9163 = func_4209_call()
func_2362_call = mod.get_global_var('func_2362')
func_2364_call = mutated_mod.get_global_var('func_2364')
call_9227 = func_2362_call()
call_9228 = func_2362_call()
func_7028_call = mod.get_global_var('func_7028')
func_7030_call = mutated_mod.get_global_var('func_7030')
const_9256 = relay.const([[-6,5,-10,7,-3,10,9,5,-5,6,4,3,3,-5,-9,6,-10,7,10,-8,4,-2,1,5,-8,8,-7,7,8,4,10,3,1,-10,4,3,-7,3,6,3,-8,-3,4,7,-1,9,1,3,-10,4,-2,-5,3,6,5,1,-2,8,-4,6,-8,-7,7,-2,3,-4,-2,-6,7,2,1,3,8,7,-8,7,10,-4,4,-3,-1,-3,-5,8,1,2,-3,-7,-8,-3,9,-2,-6,3,4,8,-4,2,2,-1,-10,-6,10,8,-8,-6,-2,6,-9,-7,-7,-2,-8,10,2,4,6,9,-5,-6,7,-2,2,-7,6,-6,9,-8,10,-6,1,6,-9,-3,-1,7,-3,-7,6,-6,7,9,-7,2,5,10,5,-3,-1,9,5,10,-5,-3,-2,-5,-10,-7,-1,4,5,2,-2,-4,-1,-4,9,4,-2,6,7,-5,8,-6,10,-7,-6,5,-3,-10,2,-1,-8,6,6,-6,-5,-2,2,4,-7,-7,9,10,10,6,-4,4,4,1,-2,-10,7,-10,9,-3,4,-1,3,-4,-3,-7,-7,-8,1,-8,-6,9,-2,4,-4,2,-8,-2,-6,4,-9,6,-3,7,-2,4,7,1,2,-3,-2,-4,-7,1,-3,3,-7,-7,3,-2,-1,3,2,7,1,8,-4,4,-9,5,2,-5,6,9,8,-4,-2,6,5,5,5,9,-8,-3,8,2,-5,-10,8,2,-3,-6,-7,8,-10,-8,-8,4,-10,4,4,-9,-2,-4,8,-8,-6,5,-9,-5,-6,1,10,10,4,-7,10,9,-4,-2,-9,-3,-5,8,3,-10,-6,3,-8,-7,6,1,1,8,3,6,-8,-6,-9,-6,8,1,9,-2,-6,-9,3,8,2,-9,-6,4,6,-9,-4,9,-3,6,4,-8,8,-3,-9,-7,9,-3,-3,-2,-7,-5,-8,-3,-5,-10,8,1,5,-9,5,5,-1,10,5,2,3,-5,2,-9,-10,7,-6,5,2,-8,-9,-2,1,-2,-4,-10,-2,7,6,2,-6,3,-7,5,-4,8,-6,-4,2,3,2,4,-2,-9,-8,4,10,-8,-8,8,-10,5,-7,-10,7,-7,-9,-3,2,9,1,-6,3,-1,10,4,8,-3,8,-5,9,4,-3,-10,6,-6,5,1,-5,10,2,3,-3,4,-2,-6,3,10,6,-10,1,3,-8,-3,-5,-6,5,6,6,9,8,-8,5,6,7,-4,-4,4,1,2,-10,-4,8,5,9,1,-9,-10,-6,-6,4,3,8,9,5,-7,4,10,-1,-7,8,2,8,2,8,-8,1,-2,7,8,7,-6,9,2,-10,-2,8,6,6,7,-7,8,-6,-6,-4,-6,-2,-3,-10,-10,-3,-1,-6,4,-4,-6,9,10,4,10,-2,2,-1,-4,-7,3,7,-2,10,3,-10,6,2,-5,-2,6,-5,8,3,-9,6,-2,-6,6,-4,-10,7,-4,-4,7,5,-9,-2,-6,-9,-7,7,-8,6,8,4,-2,6,1,-6,5,2,4,1,10,7,6,7,-8,9,-2,-6,5,-2,-3,5,-4,3,4,1,5,3,3,-5,-4,-9,-9,-3,-8,-1,5,-10,-4,10,7,3,-9,-3,-8,-5,3,9,8,6,-6,8,2,4,-3,3,-6,-1,-5,-7,-3,5,6,-7,7,2,-10,-7,-10,-6,5,-2,8,-6,-8,-7,-5,8,-8,8,10,-9,2,-1,-6,7,8,10,5,-10,9,5,-10,7,-9,3,9,-8,-5,5,-5,3,-4,-1,9,1,1,-5,-8,-8,9,6,3,-9,2,2,-10,3,7,10,-7,7,-8,8,-5,5,-10,-2,-5,-1,-8,-4,-7,-2,-3,4,5,10,4,-1,6,2,9,9,8,-8,-5,7,-3,8,-1,-8,4,4,-7,6,3,1,6,5,-10,-4,-7,-8,-10,-6,9,-9,-5,-2,8,-8,-9,-2,-9,-3,-9,-5,-8,7,-9,8,1,2,10,8,3,-10,5,9,10,4,-9,-8,-9,-2,1,6,-7,6,2,7,10,-10,-9,10,3,1,-2,-6,5,9,9,-6,6,4,-7,-5,-8,5,-6,-9,6,10,10,-9,7,10,7,-10,9,-1,5,-5,-3,-2,-5,9,-10,1,8,-4,-10,-8,-2,10,-4,-10,-8,-4,5,-3,5,-2,-2,7,-5,-2,-7,3,-1,-3,-5,4,7,-6,1,5,-1,5,1,3,6,10,8,-5,6,3,-10,-7,-6,1,4,7,2,1,5,7,3,-5,3,-1,-7,-2,-3,5,-6,9,10,-7,6,-6,-6,-2,-2,-2,-6,-4,7,-1,-7,-10,-1,-2,4,5,-1,-3,-6,6,2,3,-10,1,6,-8,6,-5,8,10,-1,2,-6,9,-7,-1,4,7,2,-1,-1,1,-8,6,6,-8,1,-8,-2,-10,-5,-10,-7,-5,8,-9,-9,-6,-9,-3,-8,-3,-10,7,-2,-4,10,-8,-2,5,-10,-9,-5,6,-5,8,-1,-4,1,-4,8,10,2,2,2,6,-2,-3,-9,-10,9,10,8,-10,3,4,1,-9,3,-9,-1,-8,-7,1,-9,10,8,7,-4,-8,10]], dtype = "uint64")#candidate|9256|(1, 980)|const|uint64
call_9255 = func_7028_call(relay.reshape(const_9256.astype('uint64'), [14, 7, 10]))
call_9257 = func_7028_call(relay.reshape(const_9256.astype('uint64'), [14, 7, 10]))
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_9260 = func_7529_call()
call_9261 = func_7529_call()
output = relay.Tuple([call_9162,call_9227,call_9255,const_9256,call_9260,])
output2 = relay.Tuple([call_9163,call_9228,call_9257,const_9256,call_9261,])
func_9263 = relay.Function([], output)
mod['func_9263'] = func_9263
mod = relay.transform.InferType()(mod)
mutated_mod['func_9263'] = func_9263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9263_call = mutated_mod.get_global_var('func_9263')
call_9264 = func_9263_call()
output = call_9264
func_9265 = relay.Function([], output)
mutated_mod['func_9265'] = func_9265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_9326 = relay.TupleGetItem(func_1281_call(), 0)
call_9327 = relay.TupleGetItem(func_1282_call(), 0)
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_9330 = relay.TupleGetItem(func_3983_call(), 1)
call_9331 = relay.TupleGetItem(func_3984_call(), 1)
func_5229_call = mod.get_global_var('func_5229')
func_5230_call = mutated_mod.get_global_var('func_5230')
call_9343 = relay.TupleGetItem(func_5229_call(), 2)
call_9344 = relay.TupleGetItem(func_5230_call(), 2)
const_9350 = relay.const([-6,2,8,1,2,1,5,1,-2,-5,6,-7,-1,5,3,-6,10,-8,3,-8,9,9,7,-2,-5,-1,2,7,10,-1,-6,3,6,2,-1,6,-4,-6,9,9,4,-4,-9,-10,-5,-2,-2,4,-8,-7,1,-1,-10,-5,4,2,5,6,9,4,9,-4,3,-8,6,-10,-1,-3,5,-2,3,8,-10,-1,10,-2,1,9,5,5,-5,10,3,8,9,-8,2,10,10,-2,9,1,-1,6,-10,-7,5,2,9,7,-8,2,-2,-3,-8,-5,10,-8,8,4,4,-4,9,6,-6,9,7,3,8,2,-10,4,2,-10,8,10,-7,1,-2,7,-2,-1,8,8,1,-3,-6,-10,8,1,-6,-8,-7,1,7,-9,-2,8,6,7,8,10,-6,-2,-2,10,6,-9,8,6,7,6,8,1,-2,5,10,-3,6,1,-10,4,-9,-1,-4,-2,-4,10,4,8,-2,7,-8,6,-10,2,8,-8,-10,3,7,4,-6,3,-6,10,-6,9,9,-6,2,1,-3,-6,9,8,7,-7,-6,4,1,-1,-1,1,-6,1,4,-10,8,-1,-5,2,10,-6,-10,-10,4,-10,-2,5,7,-7,-5,-1,3,3,-10,2,4,8,-8,-7,-2,7,7,3,7,8,-7,8,-10,9,-6,1,9,-4,-10,9,-9,7,8,1,-1,9,7,-7,-8,6,-5,4,6,3,2,-9,6,-6,-7,-10,-7,6,6,-10,10,-8,4,-1,3,-8,3,3,-5,-4,7,3,-2,-5,-2,3,-2,-7,5,9,-1,1,6,5,-5,6,-2,-4,-5,3,6,1,6,-6,-5,9,4,4,-5,1,-8,10,3,-6,-2,10,-6,-8,9,5,9,-2,3,-2,4,8,10,4,1,6,1,-1,-6,-9,-3,9,-8,4,8,2,9,4,8,-7,-9,4,10,7,4,-1,10,-8,4,10,8,-3,-3,-8,-8,2,7,-7,1,3,10,4,-5,-8,6,10,-1,-3,-2,5,-6,-7,-5,8,-10,3,4,-10,4,7,-6,-6,-9,-1,-9,-1,7,8,2,-8,-8,2,10,10,-2,4,3,6,8,-3,6,-2,9,5,-5,-4,3,4,10,5,-2,-9,-10,8,-4,7,-2,5,10,-5,-2,-9,-8,8,8,9,4,-6,5,-6,-5,-9,3,-10,-3,-9,5,1,2,1,-3,-3,-10,-5,3,4,-4,6,-6,-4,1,-5,3,2,-5,7,-7,9,9,4,5,1,10,9,-4,-6,-8,3,-9,9,10,-4,-6,4,-6,9,-6,-1,10,4,-4,-10,3,6,-8,4,10,-7,-10,2,-9,7,5,-4,1,10,-10,10,2,3,-10,10,-4,6,7,-10,-3,6,9,3,-9,7,-3,-1,2,7,-1,-4,3,1,-10,-8,1,8,-5,-10,-6,-4,-4,4,-8,-10,7,8,-3,-1,3,5,5,-4,6,5,-10,3,-3,-2,9,4,7,7,2,-5,1,-8,3,9,7,3,4,-1,-4,-9,-4,-10,-6,3,7,2,-7,-8,-4,10,-2,9,1,-4,3,-10,8,-10,-7,2,-10,-5,7,-7,-10,-6,-2,-8,-5,1,-6,6,1,8,-8,3,5,5,9,6,-1,-2,7,7,2,1,9,2,3,9,10,-1,9,-8,-8,-10,9,1,3,8,-7,5,-6,7,9,-1,7,-6,6,7,-10,-4,-10,-5,-2,-8,1,7,2,-5,10,-2,7,-7,1,8,2,10,-6,5,-9,-9,8,-8,-9,-3,-10,-10,-10,2,1,-3,-4,7,10,-8,-4,-9,-4,-3,1,-4,1,-10,2,-2,-1,-8,-2,5,-6,2,1,-4,-10,7,-3,4,6,-6,-5,-1,-5,-1,3,-8,-10,-1,-4,3,-2,-7,3,10,5,-8,-4,7,8,-6,-6,4,-7,-7,7,-4,2,5,-3,5,-1,-8,-1,-4,-5,-4,7,6,-2,-4,3,-10,-9,10,-10,-10,9,-5,3,3,-2,-10,4,2,9,5,-3,-8,-9,-4,5,-1,-10,-9,10,2,9,-10,9,9,7,9,10,-2,-6,-10,-8,7,1,-2,6,-2,7,-9,3,4,5,-2,1,-6,2,-9,-8,10,-2,2,-8,4,6,4,5,-3,-3,5,-1,-2,6,-3,8,6,8,8,10,-5,-7,-10,-7,3,8,-6,7,-1,-9,-7,-2,7,-1,-7,-8,1,-1,10,-2,10,8,-10,-3,-10,-9,-1,2,-8,4,-5,-8,-2,5,-7,-4,10,2,-9,-3,7,-7,-3,-6,-1,-8,7,-3,5,10,9,-10,5,9,8,4,5,4,10,9,-4,-10,-3,7,-4,-1,-10,4,-6,9,8,-9,-7,-9,7,-10,4,-10,-6,-6,-6,5,-1,-1,-3,-9,6,-2,-5,9,10,10,1,5,-9,-8,-10,-8,2,-6,-2,8,6,-10,-2,10,-8,9,10,-7,-5,-3,7,-5,-3,-6,7,2,5,-4,-10,-10,-5,-10,-3,6,-1,4,-10,-9,-2,-7,-10,-4,-2,-1,-3,1,-9,2,7,1,-7,-7,4,2,-2,8,-2,6,-1,4,-5,-1,-7,6,1,3,-2,6,6,-3,1,-10,-4,-4,-1,-6,-7,-3,-9,2,6,-9,8,6,7,2,-1,-10,-7,7,-7,6,-1,8,-8,2,-6,4,-10,7,10,-7,2,-5,6,-10,-6,-4,-5,-6,3,-1,-1,-2,-5,-10,8,7,7,-10,-1,-3,-7,3,9,7,7,2,4,9,-3,-6,6,-3,-5,-5,5,5,-3,4,-6,-6,10,3,2,-5,10,-7,7,1,-5,8,2,-2,10,1,-10,2,-4,5,-6,-2,2,-5,9,10,-2,-6,2,1,3,-9,-10,-4,-4,10,-7,-8,-2,-9,1,-9,-8,9,-10,-1,4,-7,-10,9,-7,-6,3,-7,-7,8,-6,2,1,-3,2,5,3,-10,-2,-7,-10,-7,-6,-8,3,-2,-4,-4,-6,7,2,-5,3,-7,6,7,-8,-9,-1,9,6,6,8,6,-8,3,2,-4,-5,3,7,-9,6,-1,-6,2,4,1,-9,-5,9,-6,5,-7,3,4,-10,6,1,-3,-8,1,5,3,1,3,-3,9,1,8,6,3,-5,1,6,4,-1,5,9,1,3,7,3,6,2,7,8,-3,10,-10,8,-10,1,4,-5,-7,9,6,10,5,8,1,1,-8,9,-9,1,5,-7,1,6,-10,-10,6,-10,1,2,-1,-7,5,-6,3,4,-1,-9,-2,-10,9,-3,-9,5,-1,5,3,3,-6,-2,6,6,-8,-10,9,5,10,-4,-10,-3,7,5,10,8,4,-6,6,10,9,6,-1,-8,10,-2,-9,3,4,6,3,9,-3,-2,7,5,-3,3,-2,7,-1,2,7,-9,-1,-3,8,4,7,10,-7,9,6,5,5,7,4,-9,5,10,-3,-10,4,-2,-1,4,-9,-9,-7,2,10,-9,1,3,-5,1,3,9,-9,-8,-5,-8,5,1,6,5,5,8,1,-3,4,4,-7,-7,-6,-7,-7,-5,-4,6,2,-6,5,-4,-5,5,-10,7,4,4,-8,8,5,10,2,1,-5,-10,9,9,2,3,4,1,-5,5,7,-1,-1,-4,-4,8,10,-4,-3,-6,6,8,1,-8,-4,2,-10,-6,3,-5,-4,8,10,-6,-4,9,2,-10,5,-9,-2,-2,3,3,-7,3,-1,9,3,-6,8,7,-3,10,6,10,-2,10,2,9,4,-3,5,6,-7,-4,-10,-2,-9,-2,4,5,-4,-1,-10,6,-4,-7,-10,6,-7,-2,-3,-9,-9,-7,3,-10,9,-5,-4,3,1,9,-4,1,-7,-8,7,3,10,-10,-4,-2,-2,1,8,-5,5,10,-9,3,-2,-6,-10,-5,-9,-3,-5,-3,2,2,8,-6,-1,4,-7,-8,8,10,-3,10,9,-2,-10,1,10,3,3,3,-8,-8,2,4,1,1,10,-3,-9,-5,-1,3,2,-9,5,-2,9,-8,7,-2,-5,-10,6,-5,-8,4,-9,-1,4,7,-2,-2,1,1,-1,4,-7,2,10,8,10,-9,2,-9,2,6,6,-4,-8,-5,-1,9,-5,-1,10,3,3,6,-2,2,10,-7,-5,-3,9,4,-7,5,-3,5,8,-3,9,-8,4,-4,-9,-1,3,9,-2,-9,-5,-10,-5,-4,-6,5,6,-6,-7,-7,1,-1,1,-4,3,3,10,-10,2,-9,3,-4,9,-1,10,3,5,-6,3,1,-5,-6,10,1,10,-10,6,-1,-2,3,10,5,-7,-2,-3,6,7,-7,6,9,-10,10,-1,-10,5,6,7,-3,-2,-7,-9,-3,5,-3,9,-10,3,2,-10,6,6,-3,3,9,2,-2,-1,9,-6,10,6,-2,-7,-2,9,-2,-2,-7,-2,2,-6,-7,9,4,8,-9,-3,5,7,9,-5,-10,8,4,8,6,-10,3,-8,-7,3,3,8,6,-5,-1,5,-9,-1,-3,-9,-10,-1,-2,-10,-5,4,-8,6,-8,-8,3,-10,-8,-5,9,9,5,-2,7,6,6,-10,2,8,-8,9,-2,4,-10,-1,3,8,-10,-4,6,-8,10,9,-7,10,-5,-9,-9,-7,9,10,9,-9,2,-5,3,-3,3,-5,-6,8,-5,10,-9,5,-6,8,-4,-2,2,7,1,8,-9,-8,9,8,-2,-8,-7,9,-1,-9,-5,3,10,-1,-9,9,-4,-5,-3,-5,-5,-6,-9,8,-3,6,9,3,9,-2,-7,-8,-6,-1,8,-5,-2,-5,-5,2,-9,-6,-6,-10,5,5,1,-2,-8,7,3,-1,3,8,1,6,6,10,2,-1,10,-8,1,9,5,7,9,2,4,-10,10,6,-9,-10,-4,8,6,6,-10,-7,2,4,10,3,-8,2,10,-1,-2,-10,1,2,-5,-3,5,1,-1,-1,1,-8,7,-6,-6,8,10,-6,-5,6,-7,7,8,1,3,4,-6,-2,2,1,-6,8,6,-5,-2,-3,10,5,7,9,8,5,-6,10,-6,-6,10,8,-9,7,4,2,-1,5,-5,-10,-8,8,2,1,-10,10,-2,6,-1,-3,-6,-10,6,-6,10,3,-1,-3,10,2,-5,-10,1,10,-2,7,-2,4,4,6,-8,-5,9,-3,-6,-8,7,7,3,-10,-2,2,7,9,-8,9,-1,6,-4,8,-5,-10,4,2,5,-4,-10,1,4,1,3,9,-6,-8,5,-8,-4,-5,-6,-8,9,-9,10,-10,-10,-10,3,-10,6,7,4,4,-6,6,3,6,-8,5,-7,-4,-6,-3,-4,7,-1,-3,-2,2,-3,-3,-4,2,-5,10,10,10,-8,6,-6,-6,-7,-3,-6,-10,-7,9,1,-3,-6,10,-9,-5,-3,-1,-2,-9,7,-2,9,4,-5,9,-4,-2,-7,10,3,3,6,9,2,-9,-10,-4,2,-6,10,-3,-8,-9,-7,1,4,-8,-9,-8,-2,1,-9,2,-2,-8,-4,9,6,-6,-6,-3,-10,-9,-7,-3,-8,-5,-9,8,-5,-6,-5,-10,-2,2,-3,8,-9,6,6,6,-6,-10,-8,-6,3,2,6,7,-10,6,7,1,-3,-1,-8,2,10,7,-10,-2,7,-1,10,1,-10,-5,2,-2,-5,-3,-3,-5,1,-4,-8,-4,-2,6,-4,2,-7,-10,5,4,-8,-2,-6,-6,10,-7,-4,-1,-5,-8,7,2,9,5,-5,-5,-7,-4,4,9,-9,4,7,-2,6,3,4,-9,9,-8,-10,7,-9,-2,2,9,-10,-5,-10,-1,-8,2,-2,-4,3,-5,-6,2,-5,8,-10,9,4,8,2,10,6,4,1,8,2,8,-6,-3,7,-8,-10,4,10,8,3,-2,10,-8,-5,-6,8,5,4,-4,-9,5,-7,3,-3,1,-9,-7,-10,3,-1,-2,-4,-4,-5,9,-1,3,-5,7,-7,6,-1,6,-7,-7,-9,9,6,-2,-2,-6,3,-2,6,-6,8,-1,-4,2,-8,-10,-10,10,2,8,1,4,-1,-4,-6,2,-4,-4,-9,-10,7,-6,10,-2,10,-4,-2,-6,-7,-2,3,-6,4,-3,-8,4,4,-10,-5,-7,-2,5,1,7,-4,-10,2,3,-8,10,1,1,3,-2,-6,5,-9,-10,-4,6,-5,-6,-2,4,5,-8,-8,-2,2,3,-2,-4,1,-3,2,-4,8,3,-6,2,10,8,8,-3,5,-8,4,-9,-7,-9,-4,5,2,-1,-4,-10,4,-6,-9,5,-5,-2,-5,4,-5,-1,10,10,2,2,6,-4,-1,5,7,3,-10,-3,-6,-9,1,-2,3,-3,-5,3,-7,4,-7,-6,-6,8,-4,3,7,-10,1,9,4,-1,7,10,10,9,-2,4,4,6,-3,7,-2,-8,1,-6,-9,3,10,-7,-7,10,3,-7,-5,4,-1,-8,10,-7,3,-5,10,-8,3,-1,-2,-10,-4,-4,2,-7,-1,-8,-8,1,6,-4,5,-7,7,-9,-8,6,9,-2,-7,4,3,6,-6,-3,-4,1,8,8,-5,-6,9,6,9,-9,-7,4,-4,1,9,4,-2,-5,-10,-8,1,9,-4,-7,7,1,8,5,-6,-2,2,-8,-1,-7,-5,8,-8,7,-4,-7,10,-6,-3,-10,5,6,10,-4,-9,1,-7,-2,-8,9,3,4,5,-2,8,9,-6,3,-9,8,-9,1,-10,8,-4,-1,-2,2,4,8,-10,9,2,-3,-10,-10,-9,-2,-6,8,-9,8,-5,-1,-8,3,5,-3,4,9,-6,3,-2,6,-7,-9,-3,-10,-1,9,1,7,-4,5,8,-3,5,-4,1,6,-4,6,5,-8,-6,-6,-9,-5,5,2,-3,10,1,6,1,9,8,7,-1,10,1,6,-8,4,10,7,-3,3,8,-5,3,6,-1,-5,-7,-2,10,10,-9,-1,4,-4,4,10,-7,1,-1,1,10,-4,10,7,6,-8,-4,5,9,-5,-7,5,2,-5,-4,4,-2,-3,6,4,7,-6,3,9,3,6,-2,5,6,-8,-6,-6,-3,-3,-9,1,-9,7,10,-5,-3,-10,-10,9,-5,-8,-7,9,3,9,7,6,-6,-7,10,-7,2,5,4,-10,1,10,-2,10,-9,7,-6,3,9,-8,3,-1,-5,-7,-2,-10,4,-3,-8,-4,-9,-4,-8,-8,-6,-8,-4,-4,-7,9,-5,-4,-8,-7,-7,3,6,2,-4,-2,7,-1,-9,1,3,9,9,-9,10,5,-1,-7,8,2,10,-4,4,-1,2,8,1,7,1,-9,4,-2,4,3,-9,-4,8,9,7,2,-9,7,10,-10,-10,3,4,-10,-5,10,7,-2,-4,-7,-8,-8,-1,-6,1,-3,-8,-6,4,-3,-10,-2,7,-1,4,9,9,10,4,-3,6,5,-4,6,-8,6,2,-4,3,-7,3,10,5,2,-10,4,10,-9,2,-2,-4,8,-8,4,-8,-8,-7,3,-10,1,1,-5,-7,-7,2,9,2,2,8,9,7,6,-6,3,-5,8,-10,-9,9,-5,-9,-5,-10,9,4,-5,-7,-2,10,-1,-2,3,1,-8,-1,-9,7,-9,2,-6,-8,-7,2,8,-7,-10,-7,10,6,8,2,10,-3,6,-9,-4,-5,-3,-10,-10,-9,5,-3,4,4,-1,-1,-6,9,10,6,6,4,-10,-10,3,-1,7,-5,7,5,8,8,10,5,5,5,5,-3,-6,-7,4,7,-4,-2,-4,1,-3,-5,6,3,3,7,7,-5,2,-2,-10,8,5,-6,-9,10,-6,6,-5,7,9,6,-3,1,-10,2,3,-5,9,7,8,1,2,-10,-8,-5,-3,3,3,-1,-6,-5,2,7,-1,1,-2,7,-2,3,4,-5,10,-2,1,-7,6,-5,-2,-10,-5,-4,3,-2,-8,5,2,8,-7,6,4,4,-5,-8,1,10,9,4,-5,9,1,7,3,5,8,9,-5,3,9,-7,-9,8,-2,4,-7,3,8,-1,-5,-2,-10,-6,3,4,-1,4,-7,10,3,9,8,9,-9,-8,9,-9,10,-3,-3,4,-10,-5,-1,8,-10,5,6,5,-4,-4,-2,3,6,-4,-5,-4,9,1,4,-3,6,-4,1,2,10,-10,6,-4,-1,3,7,10,5,-5,3,-3,5,5,-7,-1,2,-9,7,1,10,-4,9,2,-7,5,2,-3,7,2,3,-9,9,3,1,-3,-10,-7,-3,5,5,-4,-7,-5,4,-8,-1,2,-7,5,3,-9,7,1,5,3,-7,-9,3,1,-9,4,6,-1,5,10,-8,-8,-5,6,-9,9,8,-10,-10,-8,-10,3,2,-10,2,2,1,4,3,5,10,5,4,9,-8,6,-1,5,-3,-10,-7,2,6,-5,7,-8,7,-5,1,-6,-2,7,9,9,-9,4,3,5,3,6,-1,7,10,-7,-7,-9,5,-2,-8,-6,-2,-4,-8,4,-10,-3,9,-6,-3,7,8,-9,-2,7,4,8,4,10,-10,5,-9,8,8,4,-1,-1,6,1,-3,-9,-2,10,8,9,-6,-7,-1,-10,3,2,6,-2,-5,2,3,-2,8,-2,2,6,6,-3,-2,-9,1,-8,5,9,3,8,5,-3,-4,1,8,5,3,-4,5,8,5,10,6,-1,-3,6,-1,-10,4,10,-9,8,5,6,7,5,-2,3,-4,-8,5,6,-3,-2,8,-10,9,10,2,-5,10,1,4,-9,-8,7,10,-1,10,1,5,6,1,-9,3,-4,-3,4,-10,-6,-9,4,-6,2,8,5,-7,9,-8,3,-4,4,-5,-7,-3,-1,-7,6,10,1,-3,3,-9,8,-3,-9,-9,6,-5,-8,7,-5,-4,10,-8,4,-7,-9,-9,4,-9,9,-7,-3,10,-3,1,-1,-8,1], dtype = "int8")#candidate|9350|(3360,)|const|int8
bop_9351 = relay.add(call_9343.astype('int16'), relay.reshape(const_9350.astype('int16'), relay.shape_of(call_9343))) # shape=(3360,)
bop_9354 = relay.add(call_9344.astype('int16'), relay.reshape(const_9350.astype('int16'), relay.shape_of(call_9344))) # shape=(3360,)
func_4343_call = mod.get_global_var('func_4343')
func_4345_call = mutated_mod.get_global_var('func_4345')
var_9371 = relay.var("var_9371", dtype = "float32", shape = (176,))#candidate|9371|(176,)|var|float32
call_9370 = relay.TupleGetItem(func_4343_call(relay.reshape(var_9371.astype('float32'), [176,])), 4)
call_9372 = relay.TupleGetItem(func_4345_call(relay.reshape(var_9371.astype('float32'), [176,])), 4)
func_5229_call = mod.get_global_var('func_5229')
func_5230_call = mutated_mod.get_global_var('func_5230')
call_9376 = relay.TupleGetItem(func_5229_call(), 2)
call_9377 = relay.TupleGetItem(func_5230_call(), 2)
var_9381 = relay.var("var_9381", dtype = "int8", shape = (3360,))#candidate|9381|(3360,)|var|int8
bop_9382 = relay.floor_divide(call_9376.astype('float32'), relay.reshape(var_9381.astype('float32'), relay.shape_of(call_9376))) # shape=(3360,)
bop_9385 = relay.floor_divide(call_9377.astype('float32'), relay.reshape(var_9381.astype('float32'), relay.shape_of(call_9377))) # shape=(3360,)
func_3758_call = mod.get_global_var('func_3758')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_9388 = func_3758_call()
call_9389 = func_3758_call()
func_4890_call = mod.get_global_var('func_4890')
func_4894_call = mutated_mod.get_global_var('func_4894')
const_9394 = relay.const([2.566400,-8.988082,-4.236543,-7.757428,-4.161059,5.082657,-4.347695,-9.959677,-9.755622,-6.549154,-8.139651,-8.963861,-0.370589,-7.032294,9.146427,9.806359,-5.338585,-6.372054,8.159083,8.853859,-0.173991,7.808419,-7.759414,3.741275,7.843929,-2.876733,-9.292057,-8.635844,-4.110905,-8.564901,7.362698,3.008081,-1.415181,0.528340,-9.571705,5.201227,8.378100,6.425523,-2.488158,-9.252336,-9.517275,-4.117243,-6.833909,5.328558,5.158074,-2.070917,8.915789,8.571174,4.722615,-5.513055,4.369059,-8.587094,-9.689385,-1.320863,6.265779,-2.192246,-1.965519,-7.304515,9.161786,2.691408,8.703918,-9.076593,5.099073,-8.563479,-5.962891,-8.117318,5.171077,-5.608882,-2.349207,-5.914725,-5.362541,-5.823183,7.264533,0.121078,-9.265477,-8.239593,-7.007561,0.104951,-2.347065,0.383230,-1.739677,-8.186940,-0.404583,6.310884,-8.975387,-7.864807,-4.794862,6.476037,0.689211,0.851040,6.112469,-9.455902,-6.158762,-0.273384,0.986726,3.080109,7.394340,0.158488,-2.160913,9.586600,9.585531,6.025814,-8.997487,3.326949,2.880665,4.714307,-8.124080,7.696603,1.707645,9.836468,5.069801,-8.894727,6.375051,-9.789146,-6.129169,-5.482044,-5.307712,-5.783003,-9.896951,-6.553863,-6.432017,-1.516365,1.299140,8.562389,3.856399,-4.312648,3.953009,-9.310624,-8.817615,-8.161307,-2.255673,-5.976944,2.164713,6.344384,1.359839,8.223718,2.991487,-8.674178,6.956178,-3.475382,1.606666,1.876993,7.524892,5.873594,6.203897,1.719305,-8.985600,-4.839925,-3.646993,4.062945,4.005352,2.306353,-3.926629,-2.311342,3.234446,6.231591,0.533846,1.031524,-3.644290,-5.294900,-4.809370,5.396428,-5.898466,-6.951997,0.407045,-4.922830,6.942569,7.066861,6.797674,8.716619,-5.552734,3.726819,-2.789369,6.010937,3.671727,-5.227446,5.626448,-5.286212,1.774827,-5.806930,-6.280520,3.519989], dtype = "float64")#candidate|9394|(182,)|const|float64
var_9395 = relay.var("var_9395", dtype = "bool", shape = (9, 60))#candidate|9395|(9, 60)|var|bool
call_9393 = relay.TupleGetItem(func_4890_call(relay.reshape(const_9394.astype('float64'), [182,]), relay.reshape(var_9395.astype('bool'), [540,]), ), 2)
call_9396 = relay.TupleGetItem(func_4894_call(relay.reshape(const_9394.astype('float64'), [182,]), relay.reshape(var_9395.astype('bool'), [540,]), ), 2)
output = relay.Tuple([call_9326,call_9330,bop_9351,call_9370,var_9371,bop_9382,call_9388,call_9393,const_9394,var_9395,])
output2 = relay.Tuple([call_9327,call_9331,bop_9354,call_9372,var_9371,bop_9385,call_9389,call_9396,const_9394,var_9395,])
func_9403 = relay.Function([var_9371,var_9381,var_9395,], output)
mod['func_9403'] = func_9403
mod = relay.transform.InferType()(mod)
var_9404 = relay.var("var_9404", dtype = "float32", shape = (176,))#candidate|9404|(176,)|var|float32
var_9405 = relay.var("var_9405", dtype = "int8", shape = (3360,))#candidate|9405|(3360,)|var|int8
var_9406 = relay.var("var_9406", dtype = "bool", shape = (9, 60))#candidate|9406|(9, 60)|var|bool
output = func_9403(var_9404,var_9405,var_9406,)
func_9407 = relay.Function([var_9404,var_9405,var_9406,], output)
mutated_mod['func_9407'] = func_9407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9486 = relay.var("var_9486", dtype = "float64", shape = (12, 2, 4))#candidate|9486|(12, 2, 4)|var|float64
uop_9487 = relay.cos(var_9486.astype('float64')) # shape=(12, 2, 4)
output = uop_9487
output2 = uop_9487
func_9494 = relay.Function([var_9486,], output)
mod['func_9494'] = func_9494
mod = relay.transform.InferType()(mod)
mutated_mod['func_9494'] = func_9494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9495 = relay.var("var_9495", dtype = "float64", shape = (12, 2, 4))#candidate|9495|(12, 2, 4)|var|float64
func_9494_call = mutated_mod.get_global_var('func_9494')
call_9496 = func_9494_call(var_9495)
output = call_9496
func_9497 = relay.Function([var_9495], output)
mutated_mod['func_9497'] = func_9497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mod.get_global_var('func_6456')
func_6457_call = mutated_mod.get_global_var('func_6457')
call_9530 = relay.TupleGetItem(func_6456_call(), 1)
call_9531 = relay.TupleGetItem(func_6457_call(), 1)
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_9547 = relay.TupleGetItem(func_3983_call(), 0)
call_9548 = relay.TupleGetItem(func_3984_call(), 0)
func_7216_call = mod.get_global_var('func_7216')
func_7217_call = mutated_mod.get_global_var('func_7217')
call_9553 = func_7216_call()
call_9554 = func_7216_call()
output = relay.Tuple([call_9530,call_9547,call_9553,])
output2 = relay.Tuple([call_9531,call_9548,call_9554,])
func_9566 = relay.Function([], output)
mod['func_9566'] = func_9566
mod = relay.transform.InferType()(mod)
output = func_9566()
func_9567 = relay.Function([], output)
mutated_mod['func_9567'] = func_9567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9642 = relay.var("var_9642", dtype = "uint64", shape = ())#candidate|9642|()|var|uint64
var_9643 = relay.var("var_9643", dtype = "uint64", shape = (15, 16, 11))#candidate|9643|(15, 16, 11)|var|uint64
bop_9644 = relay.left_shift(var_9642.astype('uint64'), var_9643.astype('uint64')) # shape=(15, 16, 11)
output = bop_9644
output2 = bop_9644
func_9652 = relay.Function([var_9642,var_9643,], output)
mod['func_9652'] = func_9652
mod = relay.transform.InferType()(mod)
var_9653 = relay.var("var_9653", dtype = "uint64", shape = ())#candidate|9653|()|var|uint64
var_9654 = relay.var("var_9654", dtype = "uint64", shape = (15, 16, 11))#candidate|9654|(15, 16, 11)|var|uint64
output = func_9652(var_9653,var_9654,)
func_9655 = relay.Function([var_9653,var_9654,], output)
mutated_mod['func_9655'] = func_9655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1374_call = mod.get_global_var('func_1374')
func_1376_call = mutated_mod.get_global_var('func_1376')
call_9678 = relay.TupleGetItem(func_1374_call(), 0)
call_9679 = relay.TupleGetItem(func_1376_call(), 0)
output = relay.Tuple([call_9678,])
output2 = relay.Tuple([call_9679,])
func_9705 = relay.Function([], output)
mod['func_9705'] = func_9705
mod = relay.transform.InferType()(mod)
mutated_mod['func_9705'] = func_9705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9705_call = mutated_mod.get_global_var('func_9705')
call_9706 = func_9705_call()
output = call_9706
func_9707 = relay.Function([], output)
mutated_mod['func_9707'] = func_9707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mod.get_global_var('func_5587')
func_5589_call = mutated_mod.get_global_var('func_5589')
call_9801 = relay.TupleGetItem(func_5587_call(), 0)
call_9802 = relay.TupleGetItem(func_5589_call(), 0)
output = call_9801
output2 = call_9802
func_9824 = relay.Function([], output)
mod['func_9824'] = func_9824
mod = relay.transform.InferType()(mod)
output = func_9824()
func_9825 = relay.Function([], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1662_call = mod.get_global_var('func_1662')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_9837 = relay.TupleGetItem(func_1662_call(), 0)
call_9838 = relay.TupleGetItem(func_1664_call(), 0)
output = relay.Tuple([call_9837,])
output2 = relay.Tuple([call_9838,])
func_9847 = relay.Function([], output)
mod['func_9847'] = func_9847
mod = relay.transform.InferType()(mod)
output = func_9847()
func_9848 = relay.Function([], output)
mutated_mod['func_9848'] = func_9848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mod.get_global_var('func_8861')
func_8863_call = mutated_mod.get_global_var('func_8863')
call_9851 = relay.TupleGetItem(func_8861_call(), 1)
call_9852 = relay.TupleGetItem(func_8863_call(), 1)
output = relay.Tuple([call_9851,])
output2 = relay.Tuple([call_9852,])
func_9866 = relay.Function([], output)
mod['func_9866'] = func_9866
mod = relay.transform.InferType()(mod)
output = func_9866()
func_9867 = relay.Function([], output)
mutated_mod['func_9867'] = func_9867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_9883 = func_1808_call()
call_9884 = func_1808_call()
output = relay.Tuple([call_9883,])
output2 = relay.Tuple([call_9884,])
func_9890 = relay.Function([], output)
mod['func_9890'] = func_9890
mod = relay.transform.InferType()(mod)
output = func_9890()
func_9891 = relay.Function([], output)
mutated_mod['func_9891'] = func_9891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1338_call = mod.get_global_var('func_1338')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_9903 = func_1338_call()
call_9904 = func_1338_call()
func_938_call = mod.get_global_var('func_938')
func_939_call = mutated_mod.get_global_var('func_939')
call_9926 = relay.TupleGetItem(func_938_call(), 0)
call_9927 = relay.TupleGetItem(func_939_call(), 0)
func_9059_call = mod.get_global_var('func_9059')
func_9062_call = mutated_mod.get_global_var('func_9062')
const_9940 = relay.const([-1.675763,8.321714,4.265092,-5.237672,4.651921,-3.025042,0.449521,-8.435205,3.341590,-9.424247,-1.177816,-3.896057,3.776122,-6.498762,0.026511,-0.792650,-7.581754,-4.126124,6.949125,3.649892,7.628849,-9.586413,-5.294469,-7.680823,-1.880302,3.487619,5.979478,-9.655101,2.230838,2.328430,4.425596,-6.025346,6.676393,1.858450,5.363764,-6.125316,-1.354409,8.673532,5.253765,0.253814,4.515226,-1.252598,-5.864290,1.276596,0.340835,-1.721292,-1.727999,-3.520509,4.084008,-6.518652,9.979317,8.237551,6.797736,-3.286755,-8.268967,8.066638,-6.069845,-2.018332,-4.063508,-0.381876,0.755893,-0.630415,2.900318,5.671041,-9.952115,0.399694,-9.836560,-4.587004,-9.431621,-9.055492,-8.233515,-4.484977,-0.332436,8.086750,-4.559167,-5.573230,-3.836919,4.025522,-6.299076,-2.680716,-1.215293,-7.369936,-5.847734,5.386713,7.209337,-9.502559,8.715021,-2.153143,4.897884,-4.717877,-4.752519,1.450331,-1.028083,-2.884457,-6.660183,6.493378,9.994788,0.492617,-4.444779,-1.703634,9.461633,2.979598,5.600197,-8.433830,0.351129,-9.819646,8.988568,-0.271379,-3.774358,-9.069100,3.936933,0.996228,0.392151,8.525128,5.132082,0.942357,-7.275362,0.584199,6.798460,-4.602489,4.827059,-8.778737,6.558957,-6.947144,6.040817,-2.878982,-6.614361,4.644734,-8.677214,-3.666383,-7.196789,-0.642747,-4.177622,-5.098665,4.407079,0.588697,3.871865,-8.687601,-1.643340,-5.147807,5.537017,2.397100,7.854460,-4.509572,5.233148,5.412875,-3.538440,-5.916083,-5.793264,-9.937331,9.761606,-5.127984,2.955349,3.150459,5.469410,-2.890183,-8.632270,-9.102823,-0.870609,-4.640986,3.832965,-3.464733,5.778761,5.489089,1.534050,-3.758575,1.391330,-3.472555,9.845001,-8.264917,0.954282,7.999166,-9.575815,0.164066,-8.653499,-1.740354,-1.052170,-1.232073,4.463958,4.132001,7.479104,-1.081287,-9.434579,-7.295083,-9.535290,-6.814083,2.499647,-0.830251,1.899371,-7.031073,1.003598,-5.331682,4.729531,1.073599,-0.599131,-8.832424,-1.277414,-9.572868,4.583130,-5.762173,5.566742,5.839156,2.262949,8.617346,-7.153821,-2.454929,-3.433355,3.703011,1.400325,4.833952,0.358793,-6.067585,-5.916038,-5.320249,7.122245,1.543093,8.199594,2.520209,-5.143876,2.700481,-6.896542,-4.004088,-3.696896,3.011679,0.127060,1.755120,-2.751122,-4.609360,-2.802193,-9.688585,-2.308590,9.909616,-4.298168,-1.093599,8.975579,4.717421,7.182691,-2.032312,8.767034,-9.906462,-5.236172,0.885331,7.991090,5.148038,-5.018178,0.536703,-3.601752,-9.455553,3.164938,6.355252,0.896174,-6.441158,7.702905,-7.501473,-6.411653,9.399666,2.890031,7.443229,-5.456446,-1.836587,-2.514684,9.345242,-6.353490,-2.470253,-4.584030,-7.247577,-1.020161,4.501291,-1.103855,6.008242,-0.097821,5.948853,8.211264,-5.513731,-6.000613,9.888684,-1.303954,0.215084,-1.739822,-7.873196,3.798612,-0.578883,5.554847,5.085868,-2.024809,0.147395,3.953744,-1.830157,8.580825,7.821559,5.682942,6.510128,1.703450,1.954829,-6.430337,1.100145,-8.184566,8.707745,0.247256,4.770868,9.260606,-2.122055,-4.482710,-2.856450,5.650522,5.542057,-4.092017,-2.520956,8.666638,5.721072,7.900838,6.620600,2.447449,9.914141,-0.028872,-9.212862,1.811589,-7.962983,8.932879,-6.377681,-4.235074,4.380831,-3.363603,6.696367,5.302788,5.326310,5.182012,9.769919,3.474312,6.341124,7.234775,-8.770326,-8.080636,-9.877374,9.866892,-0.074534,-4.474138,-4.326992,5.012280,-4.468087,-8.914545,2.974995,2.620362,-0.506035,7.546038,-0.695411,8.977213,-8.233547,9.959403,5.788159,3.619628,6.560326,-7.224022,-4.345212,7.231525,-2.065710,-6.575278,2.181021,-9.463916,-6.424392,2.172892,0.573075,5.198258,-3.216917,-9.082278,7.195929,8.411245,-8.454769,-1.005221,8.156493,3.793666,-8.528502,1.904236,0.223619,8.313902,6.665611,-6.273082,-4.123572,-1.547803,2.307310,-5.610499,-5.029884,6.251884,6.664768,1.061336,8.623579,4.394017,-4.799914,1.448714,-5.159914,-8.802976,6.796917,-6.905019,-8.687971,-1.609537,-4.446145,4.697898,-3.224412,2.101801,-6.417144,-4.081095,6.974943,5.736873,-9.123346,-3.652130,-2.755380,-0.958084,2.207699,7.040667,-7.708369,4.284630,-6.769752,6.860526,0.155340,7.413405,-0.077848,4.704549,5.725870,4.199701,7.163193,-4.316421,-9.303224,8.003945,-8.231011,-6.494225,-1.891625,4.723718,-2.170248,9.275878,3.661188,9.516084,-3.465786,2.601005,-5.154970,7.412827,-6.000436,1.880533,2.632749,1.531896,7.679819,-7.559493,0.027445,-4.567555,-8.940792,-0.118882,-2.552527,6.351229,-5.436606,-5.038323,-6.082604,3.596770,-6.799517,0.270061,7.674788,5.205423,-8.659632,0.425341,5.731133,3.505774,0.951465,3.633763,-1.384485,9.378202,9.688724,8.941624,6.312621,9.303106,4.912824,2.430255,9.296184,5.432413,-4.127994,8.293720,-6.354877,-1.476485,-9.981389,-4.738110,-9.618978,-2.395559,6.150419,9.930831,-9.476396,-9.722988,-6.907865,-2.308704,-3.437738,2.414980,-3.786253,-5.469298,-9.827681,8.598990,-4.725974,0.966835,5.316940,5.861435,7.223236,9.426713,0.417125,8.874050,-1.608393,6.876621,8.754271,6.076739,6.569662,-3.333499,-5.613061,0.603055,9.361355,-6.815927,-7.148004,-4.725374,-2.815606,4.206853,2.730752,7.583262,-2.739013,1.988707,-0.559541,-8.342079,-0.175199,4.865678,-5.561516,-0.951732,5.639013,-3.488321,-6.700160,3.929301,-0.642685,-9.118060,6.733892,9.695046,-5.187581,6.399586,-1.271772,-0.617679,-7.087524,6.958797,-0.502559,6.858168,-7.965581,8.800191,-1.687874,-2.093779,0.779382,-6.008650,-9.154561,6.380331,-1.127974,0.687621,-3.235181,-1.336645,7.482706,2.931066,9.892593,3.874800,-7.248165,-2.785486,3.558225,3.049255,6.087769,4.141831,-7.591933,-6.426241,6.855344,0.810213,0.327620,7.941745,6.650693,3.516699,9.339195,8.660659,3.053805,-6.312743,-2.001769,-8.123795,3.683649,3.447238,-4.631295,1.533867,-9.994294,3.708357,-8.155714,-4.964892,2.715674,-5.580208,4.844643,-1.072777,3.646475,7.839360,-9.782231,4.121547,-5.257270,2.318367,-2.538107,-1.506930,3.259369,-9.745342,-4.865054,-9.293127,-1.605537,-8.717919,-4.762221,7.355393,3.052402,1.877658,-2.115445,-0.207610,1.201913,6.921408,-0.373179,-0.037394,5.051464,9.330500,-7.371754,2.140745,-8.607460,-0.573602,-5.974536,-9.213588,-5.526886,0.135803,-6.295226,4.833282,-0.683913,6.987010,0.738544,-7.465949,-4.882106,-4.233489,4.052287,-0.925115,-4.162199,-3.711402,-3.298129,-6.373334,-7.655690,2.996836,3.223064,8.818637,9.139802,-0.398831,-8.450678,5.624823,-0.832778,4.793061,8.061576,6.189812,-5.473386,-3.855691,-6.240600,-5.247774,-2.376431,4.439862,-2.848497,1.955053,0.983632,-2.465776,0.445870,0.590171,-6.476208,3.129070,-5.078219,1.944080,3.748922,9.332326,-5.222865,-7.351846,1.803090,8.498768,-3.133013,7.911949,-2.661837,-3.149813,5.234432,-9.620173,-4.663882,6.220406,-4.859791,-5.264375,-1.112584,-3.490344,1.327389,8.222264,-4.855129,-5.785065,-2.791392,5.647228,-4.540792,-1.436280,7.390668,5.495547,-5.802938,-0.435329,9.027921,-2.083994,-8.782225,-3.544705,-6.701368,-9.870061,-3.477644,6.677692,-9.778287,-4.037594,-3.705095,-4.834052,0.144653,-5.354442,-3.616898,-0.974633,8.956754,7.246001,8.853089,4.997211,4.931259,6.147542,-7.847504,-4.847825,5.308962,0.068318,9.647059,8.502580,6.359920,7.738138,-2.394662,7.012095,-8.160698,1.696711,4.203808,4.249746,-0.251647,-6.043018,-6.134201,6.442338,5.984194,9.405480,-3.903739,9.834825,-3.740762,9.192648,7.924619,-8.424843,8.884817,6.337623,-3.271897,2.149547,8.278106,-2.512612,8.509660,1.534610,-6.968908,8.962869,3.410830,1.524463,1.353964,-1.910273,8.851496,7.051877,-3.243262,7.471649,8.282970,5.270175,0.591719,-8.110568,3.434415,0.003939,9.838112,-6.137001,-0.102350,-6.888614,-8.782566,-8.525815,-5.613441,-0.871796,-7.444933,7.816690,4.362520,9.182778,-4.938311,9.608761,1.813550,-3.536241,4.242693,-4.950688,-3.355199,-2.352170,3.935818,-7.724407,-2.236775,2.446714,7.891443,-4.334591,2.237325,6.884147,-1.070536,-8.307185,4.748895,-2.224272,9.671221,-7.153297,0.617836,0.348123,5.662946,-6.671538,-7.707150,3.073989,4.118860,-0.782695,8.090182,-1.112028,-9.755554,4.518055,9.568388,8.684088,-7.240336,-4.880252,-2.293989,5.855403,-4.951161,6.826477,7.907563,-9.698100,-3.965441,9.243350,-1.509257,6.219696,-1.433406,-8.674299,-8.359891,9.548305,-8.552683,7.885861,4.191704,-0.507410,-3.490671,-4.732722,-3.889738,-1.676299,-5.012764,-7.637013,-6.750730,1.583936,7.850889,-5.860299,7.845679,-5.933141,-6.997623,-0.818978,-5.832573,0.169354,-6.486930,-5.643254,-8.109801,-7.650401,3.798247,4.638624,-0.646638,-6.805545,-7.187747,-7.727081,-9.826815,4.750788,-0.623744,-0.151346,7.473793,2.586363,-8.826458,-8.343763,1.828007,4.380845,-3.470924,-3.966512,2.291319,-8.936939,3.615713,-4.598294,2.164904,-5.728960,4.411914,1.028212,-9.492999,4.679554,-0.112330,9.798656,-8.952278,-8.805208,6.243214,9.453624,-0.326061,6.094594,-9.369863,2.010447,9.842124,1.243148,8.056167,3.077950,-4.811335,-5.426604,6.345189,-1.366010,-5.160560,-0.723965,6.704361,-9.368162,6.463544,3.885277,2.592142,4.460038,0.786350,-8.921150,4.251939,-8.136729,-6.193100,2.517483,6.638932,7.650432,-5.799248,5.560622,9.728992,8.060736,0.015491,2.512594,-4.908511,-2.598310,3.948562,-3.364811,-0.559482,-2.967053,5.431129,-8.866373,7.137585,-3.716460,3.336495,1.505810,6.630720,6.824991,-0.980410,-9.824744,-0.775401,-5.076377,2.704007,-8.431292,3.117414,-8.504980,-8.483400,8.847936,-3.406105,-0.356317,-8.902370,-6.853195,-9.132325,-5.677995,-9.017089,7.404041,6.332517,0.133331,-1.517197,6.036347,-2.849337,-3.999974,-4.534128,9.092979,0.810735,5.982021,1.074056,-2.382831,4.622685,-1.066122,2.179805,-4.404327,2.352343,7.020286,-6.784279,-3.757876,-2.462533,3.665195,-6.195514,1.052635,-3.244417,4.983183,-3.978811,-6.253212,4.179853,-9.826064,-5.289054,0.035151,-6.164773,-9.406628,0.158236,0.001429,1.232096,6.115442,2.440045,-9.532655,3.141523,-1.297714,1.520449,6.502309,2.685521,5.448526,7.650481,-9.313190,0.860901,-3.047696,2.741385,-1.343779,-9.537047,-4.998587,-4.972615,-2.606685,3.764784,8.319096,6.646577,8.218225,-9.134169,-0.945339,6.679872,3.936945,1.833092,-9.655916,-1.529614,-7.595606,-4.900605,-5.341793,5.224355,-7.474817,5.216723,5.184809,-2.460559,-5.945406,9.068263,-4.097471,1.416967,1.589955,8.148605,6.591714,-7.110360,0.998789,-0.897300,9.775042,-2.366109,-6.278922,4.337984,-9.171562,-1.610705,7.482469,0.412824,0.320218,7.419740,-0.443164,-3.378134,-7.424852,7.408425,5.758555,-7.569968,3.768917,-4.932518,-6.849343,3.517758,7.674690,3.898431,8.694780,9.974989,3.595236,6.025432,4.556510,5.867561,-9.644366,6.346713,7.435551,-4.173124,-9.982169,-8.854507,-5.932510,5.073522,-8.988975,-0.026299,-8.378589,-0.610604,8.811230,0.534712,2.804154,-7.228218,4.123138,0.411770,3.660101,9.673963,-2.518144,4.841429,7.282781,-8.697506,4.949990,1.876575,-5.047471,-6.847665,7.612943,2.623010,-9.671541,-7.381408,0.296989,-1.513693,7.953182,5.774832,-1.423017,-9.550939,8.043404,0.134425,-0.464224,-3.308327,-8.084335,-4.378482,-6.765434,-8.047562,3.827722,-2.401868,-4.385754,-1.531682,-2.962732,9.202383,-9.509524,-7.063708,-8.791346,-4.457590,-1.950912,-0.617914,2.850437,-3.681245,-2.684081,2.855357,8.662285,-8.513205,-9.736802,0.356376,-0.963773,0.040221,1.498563,1.529613,7.569421,-1.552319,-1.878510,-7.061012,9.510669,-2.082303,4.839731,9.438724,6.878626,-5.880537,-7.151350,2.344017,-6.760188,1.544038,-3.063998,-7.001565,4.250846,-0.224384,9.158297,4.182307,8.786924,-5.715397,3.166701,-4.563998,2.016673,2.415458,-7.939582,2.681848,5.871958,-1.389038,9.249982,-4.727226,3.827123,-0.155727,6.210663,1.183836,5.306484,-3.123751,-4.686329,-5.404675,2.240083,4.243180,-8.649465,8.082208,-2.908196,8.685851,-0.113609,-9.587941,-0.293278,-1.720547,-5.798545,1.221827,2.015888,1.854432,-3.942994,6.766141,0.282986,5.885833,0.979070,3.621636,1.131530,5.243239,-4.257351,9.169524,1.437011,5.100078,-1.944596,8.569843,-5.888037,3.770487,-3.896079,-2.117528,1.656334,7.308525,-6.788928,-5.441850,-3.112115,7.279758,2.304896,9.383780,-4.611063,1.738762,4.380089,-0.030936,7.201206,-0.268963,0.358150,4.228672,9.829750,2.065623,6.459371,3.780044,-8.498259,1.707443,9.028894,-6.447774,0.891584,-2.821467,-9.812661,-0.912973,-5.354941,-9.324336,5.203117,2.882925,-1.986936,4.471983,-6.346330,2.425176,3.890162,0.196699,-4.150098,6.156878,3.424283,-7.483483,-7.359908,7.402038,-5.486528,-3.662873,8.686978,-4.585011,9.898816,8.204738,-6.199031,-3.972332,6.406491,-2.217185,1.364685,6.702271,-2.728249,-0.350684,-3.966286,8.261152,8.942095,1.315408,6.703973,6.864692,9.672781,8.723833,4.104210,5.787900,5.779583,-2.718585,8.934966,1.486090,-6.581605,2.797986,5.225216,9.779519,-2.923759,8.735015,-2.416766,-1.847321,0.331176,3.681668,3.101549,-7.986130,-7.742010,3.502099,-1.835629,7.519644,3.997005,-0.454003,-8.098846,6.479095,-0.347745,-8.684121,5.378501,-3.012288,-0.039123,-7.829480,-2.682029,-1.753818,7.938266,5.412058,-7.980874,-5.015166,0.411931,-0.071746,-9.852719,-2.614132,-2.585885,5.612795,-7.897691,0.075801,0.474641,-5.870843,-2.354758,1.352863,0.713003,5.772016,2.222271,0.725641,-8.447540,-5.747231,2.601313,1.314465,-8.167533,-0.108960,-1.964367,1.569059,0.615013,-5.542454,8.124583,9.818476,-3.613998,-1.855131,1.539655,-2.039859,-3.617148,-7.630357,6.388137,1.643566,3.500743,-4.265002,4.052414,9.192665,-5.174264,-3.782379,9.493526,-8.353157,1.423837,-8.595429,-2.082935,-3.588190,6.200297,-9.013826,1.284139,-3.295771,1.327021,-2.449228,0.270404,2.752994,2.476134,4.495861,-7.500444,-7.771026,-8.125368,-9.544805,9.916958,8.804570,3.217620,-2.508641,-4.113719,9.236574,6.772349,-7.498085,-9.617058,-1.256181,-9.596737,-1.627131,0.591879,-6.736047,6.219206,-8.049699,6.524181,-0.175341,-1.962213,0.265257,9.234791,-2.226371,6.111439,5.153371,9.869103,8.737143,6.788743,-4.142991,6.414128,5.190251,4.274989,4.591112,0.428453,0.933446,-7.179390,-5.137830,-3.110438,6.566191,-1.153944,0.766561,-0.075936,1.738685,-6.205097,1.949038,-1.665456,2.057500,-0.545300,-2.555283,-7.648064,5.931245,9.786715,-9.340869,5.654396,7.991971,9.352721,0.660915,4.818853,0.229364,-6.120918,1.190557,0.863295,-0.152660,-7.941139,-1.212969,-1.233041,4.007800,4.985498,6.879133,8.026379,-1.853188,5.082248,7.714218,-4.423280,6.122480,0.642996,0.852041,4.205681,-3.788595,3.675088,-0.969588,5.614623,1.483459,9.089796,3.377188,0.949641,2.944550,8.905395,8.468889,-9.804169,-7.866910,-6.718794,-0.038503,1.858003,1.061562,3.648246,-8.646910,6.492223,-3.010240,0.729349,-1.530696,7.722732,3.406708,-2.137912,1.495269,3.273764,-7.519463,6.474211,8.849143,2.138644,6.128371,-0.295419,9.089177,7.387799,1.575949,2.734926,7.657327,4.906080,3.511883,-7.516298,-9.842441,-6.619207,1.063730,-2.033705,-7.808692,4.296042,-8.275605,-8.901533,6.932216,9.173969,-7.146516,-5.088492,-5.322412,-3.438348,0.061382,-7.562353,6.694630,-0.983271,-3.729717,3.629202,9.492866,5.481132,7.525663,4.765347,8.899522,9.636498,-8.160328,-4.536202,9.623667,-4.860440,8.141963,4.626533,-6.525443,4.334736,-1.211373,0.305524,6.048270,2.447546,-3.502874,6.118642,-0.446040,8.260483,4.463515,6.224535,4.074827,9.969420,-7.502766,3.611676,4.752761,5.658690,3.321107,1.296017,9.664769,3.740821,3.362712,-5.661703,1.555675,-3.526610,1.617952,-9.783205,-3.387046,3.557932,-8.934558,6.949887,8.490266,2.328830,8.379379,5.486836,9.085856,5.473569,9.365553,-3.948119,1.243134,2.356709,-7.876252,7.239034,-7.066087,8.745381,0.580949,-1.986349,-0.329008,-1.441745,-7.098784,-5.993249,-2.285923,-6.159319,6.576258,3.235807,-6.899144,3.975032,-3.843134,3.091379,5.314866,6.999690,5.294890,7.715155,0.340112,8.351144,7.783310,0.181209,7.700970,-4.835517,0.953944,-0.649844,-6.819123,-3.588977,-6.656564,4.229755,5.842754,9.629711,-6.530941,-4.976392,-3.842566,5.013028,6.534344,7.252467,5.696506,-0.573530,2.633853,-2.029569,-6.988737,-7.461325,-8.551121,1.802908,-0.566360,-5.807082,6.347526,-5.492594,-2.463059,-9.665024,7.534467,4.753609,0.340064,1.162585,-3.844754,-8.492830,-1.361521,0.318722,4.422397,-1.235434,2.044205,-1.011733,3.789158,-8.117504,3.763009,-1.347577,4.541379,5.973576,1.343537,4.727435,-6.631775,-4.172378,7.638748,2.348513,-3.080204,-6.044970,-3.893715,2.312326,-6.479327,1.582953,-1.924397,-6.065369,9.284179,-4.398203,-5.119516,-6.056891,8.432676,5.820700,6.772178,6.686856,7.262713,8.125666,5.156491,1.102779,6.602262,3.673785,-5.502913,8.142696,0.033376,-3.690919,9.545536,-9.727945,-0.985718,5.996803,-3.987076,5.756019,0.933115,0.538641,7.389849,-6.956251,7.823531,-6.704161,5.709091,-8.719016,0.190301,-4.266466,6.779804,-8.671412,-4.520653,3.810442,-8.363094,-7.595682,-2.870681,-1.796090,6.877681,-1.388289,-3.802057,-2.703475,-1.263738,-1.426253,-2.549814,-6.339540,1.430217,9.741997,9.098761,-3.619823,5.894124,8.128950,-2.843549,-4.308072,-1.484721,8.490290,1.194294,-8.807514,-1.780180,-2.111307,0.063165,-4.648238,9.827982,-3.873303,2.720912,-5.308859,-0.042302,-8.561155,-3.710083,-0.114693,4.062840,5.685531,8.160641,-9.663786,0.254775,-4.063610,5.368056,0.165125,-4.924168,8.669160,9.573965,6.713300,4.368309,-0.112618,-4.444376,-1.570756,-5.861704,-6.055312,5.714603,5.289515,1.159251,6.755767,3.076253,5.957867,6.519756,3.379453,3.843710,-2.401977,-4.730276,-1.006980,3.767468,-2.357102,-3.584471,9.608069,2.397521,-9.171559,3.229345,2.304567,1.763783,-2.379734,-3.085004,8.663697,-2.338827,-0.784810,-2.614826,2.325454,-3.730597,-8.304859,0.659502,-0.770768,-2.203243,7.601811,3.793322,-0.373201,-9.258150,7.493106,-8.161601,-9.420989,-6.957549,2.953192,7.949736,-9.461869,-8.357981,-8.512262,-2.694226,-2.458817,-4.490760,-9.301224,0.372998,-5.612101,-2.409742,-4.253048,-9.436687,1.841604,9.005836,7.219920,-7.598796,-5.715570,-3.545964,-8.959790,-0.865410,-6.240122,-3.771029,-1.665003,3.748047,3.477431,-3.454758,2.313996,-7.879356,6.413831,6.182421,-8.363497,-1.025411,5.222592,-3.417017,7.838822,-7.111461,3.144271,8.049633,-4.953358,-0.986989,-8.096011,7.737492,9.454673,-9.967938,-9.088863,6.716999,2.988331,5.121418,7.715099,-8.482919,-9.960884,-5.740914,-9.573952,3.476833,-1.439709,-2.316663,-8.787132,-4.898333,-6.528069,-4.730483,0.387744,6.782038,0.945783,1.440405,-9.698221,-7.511583,-7.098834,-6.103318,-7.849843,-3.788969,9.026826,8.423613,-1.855990,4.312502,-9.108070,8.260820,-4.231067,4.019096,-1.479346,-6.168625,-4.509323,6.111504,0.942266,6.124752,-9.096752,-2.696478,7.435609,3.987474,-0.587064,-1.469158,6.501406,-5.429268,-0.262241,4.997932,-2.271472,-8.740322,-8.847390,3.501697,0.095619,9.859107,-2.505636,-6.101243,7.463055,-7.199422,-7.706011,1.448070,-7.933977,8.023898,7.718738,7.580740,-7.331767,-6.423331,-3.317740,-1.766936,3.371565,9.637624,-3.065980,9.792213,2.042573,4.799665,-5.454561,1.070519,-5.000508,1.905689,-9.141323,4.439780,-1.205744,3.709445,6.432626,6.746698,-0.665229,5.388713,-2.461911,-6.813198,-2.832781,8.834977,-2.708996,7.649556,-5.276361,-9.781691,-8.119610,7.847021,-7.797446,5.224876,0.101679,-1.611292,3.462849,-5.688673,-4.942956,2.048775,-8.002953,3.628399,-6.443697,9.763532,0.453945,8.510454,8.888499,3.736411,0.859380,9.076716,7.584188,-3.873591,2.233070,-0.302892,-2.672556,-2.044038,-3.110890,8.996071,5.487180,4.499963,7.601165,-1.329306,-5.070160,-8.911687,-3.964571,-2.170593,2.686373,-1.149096,6.151214,-7.140776,-7.535575,-1.061271,-2.390352,3.757389,-9.506859,-1.309673,2.641308,-4.044533,-9.346307,-3.354377,-7.275878,-7.750988,2.708755,4.645856,3.676801,-7.707892,-0.363735,1.980214,7.497933,-8.114969,3.171753,0.045816,6.916508,-5.078228,-0.985304,-3.472173,9.539664,-0.081719,7.912110,1.517827,0.050309,5.071362,-1.111780,-0.119037,3.015502,9.988034,3.811231,-5.312507,-7.695059,4.810773,7.886858,-0.103046,-8.370562,7.023713,-7.859997,4.550099,1.488374,7.521247,9.865136,0.578042,0.447101,0.641664,8.525029,1.215327,8.813980,-0.738447,3.298855,0.811640,0.579023,1.773836,-2.988516,9.843170,6.217451,6.087796,-7.597291,-4.194898,-1.903205,-8.206892,9.685218,9.112692,-1.401283,7.413634,-2.273292,-5.598364,3.344017,1.399923,-9.135405,4.899824,-2.014614,-3.116625,0.316109,-2.894520,-1.287298,8.164783,-7.109104,-2.030802,-1.055664,-6.567549,4.651475,-7.076262,3.283489,-9.457923,-0.057916,6.133772,-5.713369,8.123110,-1.419898,7.777434,3.667239,-2.989937,-9.252343,-0.236263,-1.903994,3.814286,1.741705,2.969655,-7.681165,-8.637221,7.824080,1.325237,4.332309,-4.715518,-4.961644,5.330798,-7.794639,3.042951,-7.362604,-8.352719,5.229034,-8.063690,6.893076,6.387081,2.495734,6.699952,3.990803,4.207713,4.800458,8.315726,2.039767,2.915944,-1.054255,-2.064387,8.969395,-6.757381,0.349757,8.173995,-4.960638,-7.468504,9.952382,-0.202625,-7.792908,2.632472,9.476571,1.784149,9.133228,3.798737,3.723083,5.991126,-9.699259,7.432874,-0.219846,-6.443044,9.301364,8.696241,-4.429248,-0.591269,7.586707,5.606709,-4.181404,8.560023,8.897229,6.424639,3.875484,4.506479,-0.340180,7.673638,-3.321926,2.261211,-5.581299,-7.233488,1.618164,9.709609,-3.869993,1.180525,0.876219,6.196264,9.753333,9.465482,6.992914,-8.602894,-3.921204,-3.877740,-1.570444,-0.309667,-3.093918,9.892532,7.717806,-6.637419,2.303362,-3.178178,8.934742,-5.983368,7.158750,5.960423,-8.642906,-9.133335,1.850503,8.892416,1.713460,-0.395121,-4.590940,6.071890,-5.419965,-0.109638,1.112884,-1.235886,-4.785848,-8.202441,-6.000218,-7.093838,3.144846,1.838765,7.149713,-2.771532,1.750025,8.735512,4.460764,5.114489,-2.733068,1.939713,7.070433,-3.878311,-4.864793,4.371016,-3.139465,-6.714162,-2.402177,-4.825768,-7.199098,-2.832672,0.110176,-8.302365,-0.102313,-2.909164,0.825249,6.000882,0.525389,-7.932779,-3.509703,9.011779,4.404231,-8.449684,0.399945,5.847180,-9.077920,2.252742,2.155850,-9.850041,-9.502679,9.579695,-4.346361,-7.922404,-5.777583,-8.688536,-8.191278,-8.009049,1.475923,8.893532,0.735411,-5.095863,4.063380,-3.753981,6.805719,-1.212910,3.803869,9.988907,-9.355767,-5.061566,-4.368623,0.749505,-0.651570,-3.102972,2.091914,-0.636116,0.851928,-7.262447,0.418733,1.608878,4.477931,-4.936475,0.676835,-3.857898,0.903968,3.932845,5.833727,-5.559222,-0.553219,7.680670,-1.220824,-1.241595,0.059472,-8.800190,1.061847,8.665305,-0.248851,-6.555578,-2.666010,1.556589,4.993894,4.697108,-6.322329,-9.153999,0.137940,-2.316873,1.126677,3.196965,3.540712,1.086738,6.797052,5.125860,-0.488714,-6.362363,-4.366850,-9.340483,-3.025085,8.318766,9.139927,4.267544,6.134310,7.535316,-5.287305,0.283572,-8.658692,1.385395,-2.466512,9.539193,-9.778789,5.187892,-8.917970,-2.807624,9.826654,6.231813,4.596726,4.166308,-5.452373,3.917353,2.995885,-6.509975,-8.056947,-4.574740,-2.340733,2.098256,6.698501,1.837262,3.906041,-1.364210,7.588114,9.743489,-2.219585,-8.628954,1.277184,2.991727,-9.597490,8.153054,7.408687,9.964849,6.316421,-8.889459,2.379411,-8.635669,7.650746,-5.087259,-9.785690,1.675492,-5.345816,7.151111,-2.995058,6.365190,-8.218303,9.917222,-2.158576,8.367456,1.034422,-7.020171,-6.757804,5.362232,9.956571,-7.766855,-2.913060,-5.941173,0.508310,-9.353830,-4.406948,8.795182,-4.889063,5.699996,9.288849,3.592850,-8.123734,-5.886377,-9.211027,5.428886,1.888882,-9.166935,0.237990,-2.441813,-9.582547,-1.616542,-8.093163,-0.651503,-3.160258,1.028219,-1.120389,3.718441,-0.948270,1.763996,0.744588,-7.065741,9.032065,-5.117345,1.724282,0.656198,-8.922595,8.062272,2.126325,4.279751,0.670078,-9.900093,1.683400,-8.747986,6.248202,1.286272,-5.825836,7.258751,-6.724999,5.292575,-0.945845,0.274762,-7.919640,-2.523475,-6.985872,-3.324046,-7.724311,-7.272591,-3.194609,-7.691778,-0.563374,-5.219100,5.648899,-0.907380,-9.212563,-5.671467,6.730626,5.745245,-3.933707,8.775196,3.186763,-9.542186,-6.004600,-8.466194,4.030902,-1.875692,-9.804317,1.207964,-5.518989,3.272553,6.601206,-8.186969,5.218737,-1.319210,0.049084,5.992798,8.451163,-4.542180,-4.246253,-1.399764,1.065705,3.516457,-6.806965,-7.777414,6.413613,2.668718,3.448848,7.522418,4.713481,-1.356373,9.811597,4.816526,7.860083,5.330878,-3.362494,7.637793,-1.364315,1.429956,8.689319,-0.548329,2.812209,7.903094,0.497867,-2.470765,2.578302,0.722227,-6.794180,2.194714,-2.097481,4.883490,0.427653,0.439983,1.279568,-0.476740,-2.168330,8.285388,-1.501876,-1.394684,9.027417,-0.331883,0.849895,-6.278141,-2.644695,2.239477,-8.358103,-3.661960,2.365253,7.870739,-6.211186,-9.749754,-0.065213,3.544387,-9.398314,-5.708746,-9.825201,-3.430861,-3.261863,7.755436,5.943985,-9.535000,4.698066,8.376919,-6.359161,9.318235,-8.842678,4.446696,-9.348896,3.559314,-4.830410,-6.535493,-7.234701,-6.386021,1.574030,8.781625,-8.515548,-6.324560,-3.068657,-3.650798,4.350441,-8.778772,7.506788,-2.676204,-5.436978,8.075594,-9.565265,7.655840,-8.198351,7.502320,6.085823,-9.326617,-6.650191,9.994936,-2.505981,6.240440,9.621776,9.737609,1.532737,-3.678309,0.330270,-2.909367,-7.809763,-0.739939,6.769808,-5.675148,9.281102,-3.619346,-1.576788,-7.836056,-1.853449,-2.408676,9.929875,-0.407852,6.790597,-4.185979,-2.151735,-8.696200,-7.979762,-5.584748,8.163465,-1.152050,5.491762,-9.310089,-8.721959,3.649849,5.461990,8.532146,1.889407,7.278204,-2.502112,-4.234656,5.391498,3.876934,3.244737,7.046587,6.371108,9.791355,4.832013,-9.571021,4.289617,-9.149314,3.326513,7.072315,6.686162,8.859985,7.574171,8.313468,5.322290,-8.455581,-3.020687,7.161220,-8.403820,-3.845244,-5.104721,2.211456,-1.246404,-3.940884,2.592191,8.377154,1.914996,9.031892,-8.698856,5.838033,1.066045,-9.973644,4.912622,7.310550,2.542709,1.879258,-1.085045,9.660909,-1.022885,-3.028884,7.746415,3.993848,2.303132,9.083229,9.834341,0.401092,1.493131,-1.218099,9.874986,-7.870423,2.140063,-0.165947,-9.084082,2.829192,-5.635124,2.585790,8.705736,-7.845377,0.440584,-8.450295,-5.352098,7.457643,1.688124,-0.371413,-6.835816,9.149549,8.500385,3.842962,3.781492,-0.390986,1.660938,-0.809475,-7.917777,0.305483,-5.606262,-8.271823,5.135729,-3.380232,6.933000,0.248388,1.206961,-9.347715,-3.272100,6.055764,-0.885194,1.542548,9.114161,-6.673673,-0.600440,0.608570,4.383175,1.765552,6.706070,9.959493,5.644446,-6.767670,-7.406832,4.871060,2.900833,-8.466325,-9.374813,4.507904,9.232020,-7.734968,1.181463,5.633860,2.206933,9.727987,-3.135974,-6.225070,0.359540,8.554174,1.230734,-4.422413,7.873911,-0.283966,7.450711,3.350090,8.718829,-5.146959,2.136708,9.517604,9.257690,5.340733,7.528834,5.900228,5.363508,-2.768347,0.043865,0.168152,-3.772737,-1.792773,8.234360,-8.255344,5.365522,9.846285,-2.546798,-8.410804,7.150928,-0.670857,7.028007,4.817933,-9.941458,5.482365,-4.318625,-6.281654,-5.601400,-1.713872,-6.932775,-1.883955,-4.467016,-0.424677,-8.128001,-5.818699,-6.649779,-8.311549,-5.679336,-2.956519,-1.636189,-7.976894,-0.810004,2.575230,2.819112,-5.014513,-3.340801,-0.908669,-1.393256,-6.091352,4.802506,-5.336688,1.279881,1.620879,-0.664879,-1.842003,3.272916,-5.052699,3.613045,-5.101084,1.978873,-4.966762,5.106568,-9.624915,9.374843,-1.771591,2.386739,-4.713989,7.068398,-3.019302,-0.679692,-0.905116,2.823217,2.414223,-7.741060,-7.576511,9.515294,-2.896949,4.122033,-0.757819,1.394333,6.461424,-4.898672,4.715744,7.052276,0.072848,-2.875108,4.578929,-0.470482,-4.173027,-7.964500,5.841752,1.425604,-8.090823,-2.767310,7.890724,7.465238,3.325661,-0.610548,5.875292,-3.522573,7.797227,7.142122,3.516343,-2.821648,-5.184726,-3.588294,-5.707811,4.607886,-5.499258,4.769733,2.956167,-4.246322,-5.743206,8.506912,-4.214418,0.838211,-1.360604,-3.434107,-9.690413,4.070396,5.607567,-9.449626,2.182393,-0.899316,-5.591673,3.287509,-1.261701,-2.551889,2.771981,-0.858312,1.620116,2.625034,-2.922015,0.993556,-7.002273,-7.931393,-1.311219,1.634313,-2.031041,9.915691,-8.250411,1.253168,-5.612198,4.833951,8.456350,7.541682,3.239026,5.236836,-2.189023,6.433923,5.020965,-4.533535,-2.366413,-0.742150,3.857408,4.735769,-4.576830,-0.332512,-8.372698,-6.031918,-3.160969,0.499600,8.139489,0.740315,3.109463,-5.442474,-0.177014,8.764043,3.460073,-9.009129,4.888913,-7.337204,-3.061567,8.943195,-0.649306,-6.560440,5.071060,4.792595,-6.647679,5.338230,1.881992,0.524685,-6.012061,-5.554265,-2.682509,4.018408,0.175577,5.202106,-5.251178,-6.614115,1.548562,9.909772,-7.321975,2.095288,-2.266460,6.470746,-5.161887,8.519825,9.185934,-2.770574,-0.240985,9.872041,7.400388,0.801416,3.080617,9.627611,2.618603,-2.702614,0.203900,-7.756945,-7.811921,8.928394,-9.726422,2.268451,-1.502901,1.800133,6.757257,-1.847042,-1.310550,0.836317,-8.749637,-3.230766,8.538329,0.806855,-9.491098,-0.630213,6.368246,3.911940,7.440100,0.033599,6.993638,-1.152330,-4.660213,0.555834,0.387357,-9.176852,7.176925,6.834224,0.555304,2.125961,-4.093006,-2.109389,0.348733,-1.360999,8.684027,2.820122,-3.973530,7.186335,-2.250516,0.692621,2.917902,1.619271,-5.000094,-2.474644,-3.898701,2.705637,5.964417,-8.118778,-9.146058,6.345447,8.621142,-8.597278,7.130724,-8.371037,-3.186843,1.628288,1.124043,1.987152,1.622919,-2.972572,0.936697,-3.263979,5.506155,-9.215491,6.520072,7.531265,-5.833557,6.836082,-4.339439,0.970132,9.395459,-4.232078,-2.842389,3.476588,6.621907,6.366361,1.188967,-1.962166,-6.916654,-6.858462,-6.797298,-5.636743,4.767516,-7.359446,7.177803,7.466238,-3.866471,-1.280956,1.232401,-9.307850,0.869810,2.302612,-0.649004,6.747555,-8.059089,-9.164605,-5.488408,8.925512,-7.425247,4.843253,-3.102175,3.562615,-2.137723,7.251234,0.999701,2.505804,7.128118,4.032085,-9.924774,-2.362362,7.923743,6.111936,-8.906391,2.424163,7.627123,-1.485441,8.742385,-7.619434,1.645165,3.590607,-2.361407,0.166411,-4.107049,3.193705,-1.235016,9.782703,-3.827658,4.982107,-7.150805,-7.731365,2.528071,8.823926,-9.200346,-6.524761,0.028868,-8.382752,-1.811979,2.612750,-8.882847,4.424477,-2.219761,-7.562116,-7.576777,4.534394,5.490889,-3.822495,2.966931,5.869780,5.004026,1.400390,-1.065407,-7.573851,-5.009736,6.695684,-9.739238,9.309883,1.405951,-9.733453,9.916707,-3.883659,0.487644,5.952659,-8.518903,-6.823529,-3.345966,-0.095480,1.499966,-9.296619,-6.589320,-5.166865,-1.310191,-5.918749,-0.223205,8.312906,-3.162261,-6.672999,-7.126714,-4.905940,-1.062514,7.913397,1.177268,0.557735,-1.738389,-0.662896,2.913868,-3.532484,-1.735929,-0.970793,1.726129,-3.915675,6.695870,5.078842,-9.347059,2.464966,-2.808142,3.832910,-7.913992,-7.284040,-6.703472,-8.021075,5.569301,-9.083856,6.789254,-4.448050,-6.640093,-7.792348,8.299929,-4.910156,-1.351397,4.861189,-6.074638,-8.360043,8.239424,7.660955,2.644239,-3.102235,-8.364717,-9.390432,0.131849,-6.296388,5.875535,2.078603,-5.913446,-2.720325,1.256111,7.173109,-4.151766,8.419353,-6.656630,-9.985575,-3.086754,4.193999,5.506389,-6.660613,-5.473740,-8.385067,7.518189,7.173222,7.229681], dtype = "float64")#candidate|9940|(3136,)|const|float64
var_9941 = relay.var("var_9941", dtype = "float64", shape = (1560,))#candidate|9941|(1560,)|var|float64
call_9939 = relay.TupleGetItem(func_9059_call(relay.reshape(const_9940.astype('float64'), [16, 14, 14]), relay.reshape(var_9941.astype('float64'), [1560,]), ), 2)
call_9942 = relay.TupleGetItem(func_9062_call(relay.reshape(const_9940.astype('float64'), [16, 14, 14]), relay.reshape(var_9941.astype('float64'), [1560,]), ), 2)
func_1540_call = mod.get_global_var('func_1540')
func_1542_call = mutated_mod.get_global_var('func_1542')
var_9964 = relay.var("var_9964", dtype = "int64", shape = (2730,))#candidate|9964|(2730,)|var|int64
call_9963 = relay.TupleGetItem(func_1540_call(relay.reshape(var_9964.astype('int64'), [2730,])), 0)
call_9965 = relay.TupleGetItem(func_1542_call(relay.reshape(var_9964.astype('int64'), [2730,])), 0)
func_6728_call = mod.get_global_var('func_6728')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_9969 = func_6728_call()
call_9970 = func_6728_call()
func_6931_call = mod.get_global_var('func_6931')
func_6934_call = mutated_mod.get_global_var('func_6934')
call_9977 = relay.TupleGetItem(func_6931_call(relay.reshape(call_9903.astype('float64'), [182,])), 3)
call_9978 = relay.TupleGetItem(func_6934_call(relay.reshape(call_9903.astype('float64'), [182,])), 3)
uop_9991 = relay.log10(var_9941.astype('float64')) # shape=(1560,)
uop_9993 = relay.sigmoid(uop_9991.astype('float32')) # shape=(1560,)
func_5803_call = mod.get_global_var('func_5803')
func_5804_call = mutated_mod.get_global_var('func_5804')
call_9997 = func_5803_call()
call_9998 = func_5803_call()
func_4251_call = mod.get_global_var('func_4251')
func_4252_call = mutated_mod.get_global_var('func_4252')
call_10018 = func_4251_call()
call_10019 = func_4251_call()
output = relay.Tuple([call_9903,call_9926,call_9939,const_9940,call_9963,var_9964,call_9969,call_9977,uop_9993,call_9997,call_10018,])
output2 = relay.Tuple([call_9904,call_9927,call_9942,const_9940,call_9965,var_9964,call_9970,call_9978,uop_9993,call_9998,call_10019,])
func_10030 = relay.Function([var_9941,var_9964,], output)
mod['func_10030'] = func_10030
mod = relay.transform.InferType()(mod)
var_10031 = relay.var("var_10031", dtype = "float64", shape = (1560,))#candidate|10031|(1560,)|var|float64
var_10032 = relay.var("var_10032", dtype = "int64", shape = (2730,))#candidate|10032|(2730,)|var|int64
output = func_10030(var_10031,var_10032,)
func_10033 = relay.Function([var_10031,var_10032,], output)
mutated_mod['func_10033'] = func_10033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1483_call = mod.get_global_var('func_1483')
func_1485_call = mutated_mod.get_global_var('func_1485')
call_10041 = func_1483_call()
call_10042 = func_1483_call()
output = call_10041
output2 = call_10042
func_10057 = relay.Function([], output)
mod['func_10057'] = func_10057
mod = relay.transform.InferType()(mod)
output = func_10057()
func_10058 = relay.Function([], output)
mutated_mod['func_10058'] = func_10058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3758_call = mod.get_global_var('func_3758')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_10099 = func_3758_call()
call_10100 = func_3758_call()
output = relay.Tuple([call_10099,])
output2 = relay.Tuple([call_10100,])
func_10120 = relay.Function([], output)
mod['func_10120'] = func_10120
mod = relay.transform.InferType()(mod)
output = func_10120()
func_10121 = relay.Function([], output)
mutated_mod['func_10121'] = func_10121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8778_call = mod.get_global_var('func_8778')
func_8780_call = mutated_mod.get_global_var('func_8780')
call_10125 = func_8778_call()
call_10126 = func_8778_call()
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_10132 = func_7903_call()
call_10133 = func_7903_call()
output = relay.Tuple([call_10125,call_10132,])
output2 = relay.Tuple([call_10126,call_10133,])
func_10175 = relay.Function([], output)
mod['func_10175'] = func_10175
mod = relay.transform.InferType()(mod)
mutated_mod['func_10175'] = func_10175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10175_call = mutated_mod.get_global_var('func_10175')
call_10176 = func_10175_call()
output = call_10176
func_10177 = relay.Function([], output)
mutated_mod['func_10177'] = func_10177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_10187 = func_1808_call()
call_10188 = func_1808_call()
output = relay.Tuple([call_10187,])
output2 = relay.Tuple([call_10188,])
func_10204 = relay.Function([], output)
mod['func_10204'] = func_10204
mod = relay.transform.InferType()(mod)
output = func_10204()
func_10205 = relay.Function([], output)
mutated_mod['func_10205'] = func_10205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7179_call = mod.get_global_var('func_7179')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_10221 = relay.TupleGetItem(func_7179_call(), 0)
call_10222 = relay.TupleGetItem(func_7180_call(), 0)
output = relay.Tuple([call_10221,])
output2 = relay.Tuple([call_10222,])
func_10241 = relay.Function([], output)
mod['func_10241'] = func_10241
mod = relay.transform.InferType()(mod)
output = func_10241()
func_10242 = relay.Function([], output)
mutated_mod['func_10242'] = func_10242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9890_call = mod.get_global_var('func_9890')
func_9891_call = mutated_mod.get_global_var('func_9891')
call_10248 = relay.TupleGetItem(func_9890_call(), 0)
call_10249 = relay.TupleGetItem(func_9891_call(), 0)
func_1355_call = mod.get_global_var('func_1355')
func_1359_call = mutated_mod.get_global_var('func_1359')
const_10281 = relay.const([[-4,-3,-2,5],[8,3,10,-5],[3,9,-9,-5],[3,-8,7,-4],[-6,10,-7,9],[-10,-1,2,-1],[5,2,10,6],[-5,-4,10,-5],[-5,4,9,5],[6,4,-3,4],[5,-4,5,-8],[-4,-3,10,-1],[-3,7,8,3],[-10,-1,-2,-1],[-1,1,6,-6],[-4,5,7,1],[10,-3,-1,-2],[3,-4,-8,-3],[-3,-7,-6,9],[2,-5,1,10],[-5,-2,9,-9],[-7,7,-1,6],[-5,-3,8,2],[-8,-10,7,2],[2,10,8,-4],[-4,2,-3,9],[3,-10,4,2],[1,10,-1,1],[8,5,-3,-3],[-1,-4,3,-2],[-7,-7,6,-4],[-1,-6,9,-8],[-9,5,3,8],[-2,8,-8,-2],[-3,-8,8,10],[6,-6,3,4],[-10,-3,8,6],[-6,7,-5,6],[10,8,6,9],[-4,-9,-10,1],[5,-2,-7,-4],[3,4,-10,7],[-6,10,-5,-4],[-6,7,9,6],[4,-6,6,-2],[9,6,-8,-1],[-10,-6,2,5],[4,-3,-10,6],[7,-4,10,-4],[2,10,5,-2],[-2,1,10,-1],[-7,-9,3,10],[-5,-5,-10,6],[10,-10,9,9],[2,-7,-3,-7],[3,9,9,-10],[-6,3,-3,-8],[7,8,-9,9],[-7,4,-5,2],[6,5,-1,-2],[-9,2,4,-7],[-7,-6,1,10],[4,-2,4,6],[-5,5,-8,-4],[-2,9,6,8],[10,-10,1,-3],[-3,-3,-8,6],[2,1,10,6],[-2,1,-2,1],[-1,7,8,-7],[4,7,9,-7],[-9,-10,6,5],[3,-7,-3,9],[7,7,7,-8],[2,-2,3,3],[-2,10,-10,-7],[1,10,-2,7],[6,-7,-8,3],[-2,-2,-6,4],[-9,-7,1,2],[8,3,2,9],[6,10,-1,-5],[-9,8,3,5],[-8,10,6,9],[-5,-4,-4,4],[9,3,10,4],[4,-7,4,8],[-4,-3,-10,4],[7,-10,-1,1],[2,-9,-2,2],[-7,-3,-10,-4],[9,5,-10,-5],[-7,9,1,7],[6,6,2,-5],[6,9,3,10],[-1,-1,8,-1],[3,4,-2,9],[-10,9,4,9],[6,-8,3,8],[5,-6,-7,9],[-9,-6,-5,-2],[-2,4,-6,8],[1,8,-3,10],[8,-2,-5,9],[-3,6,1,-10],[-8,1,-9,4],[2,-6,10,5],[-1,5,10,-9],[-8,-1,-4,4],[-7,-8,1,-6],[5,9,7,-3],[5,-2,1,-7],[8,-2,1,4],[8,-4,-3,-3],[2,4,-10,-8],[5,7,1,9],[-2,-2,4,10],[-10,-10,-7,-3],[-4,10,4,-8],[-8,-6,-9,-10],[5,-5,-10,10],[1,4,2,-7],[-6,2,-5,-8],[-5,1,1,-6],[-3,-7,8,-6],[-9,7,8,2],[10,-4,4,7],[-10,5,10,-10],[-4,10,6,1],[4,9,-3,-8],[4,-10,-7,2],[-5,-9,-8,-10],[5,6,-5,7],[6,-3,-8,4],[6,2,2,1],[1,-4,8,-3],[3,-6,-6,-8],[-10,3,-6,8],[2,-7,6,-2],[7,-5,-10,-10],[8,1,-9,-8],[4,5,-8,-3],[-6,5,-8,6],[10,4,2,3],[10,-3,5,-9],[5,-8,-10,-5],[3,8,-4,-9],[-8,4,-9,-9],[1,9,7,6],[2,5,6,8],[-10,1,3,-10],[-6,-10,-1,3],[2,1,-10,1],[10,-5,8,6],[-10,-1,10,3],[-6,-9,1,-3],[4,2,9,-5],[9,-5,-3,-4],[1,-7,9,-7],[2,-5,9,-10],[10,-6,-7,-7],[-1,5,7,-9],[7,1,8,4],[-5,-5,-7,-7],[8,7,6,-2],[-10,3,6,-6],[-9,-10,5,7],[5,4,8,10]], dtype = "int8")#candidate|10281|(168, 4)|const|int8
call_10280 = relay.TupleGetItem(func_1355_call(relay.reshape(const_10281.astype('int8'), [12, 14, 4]), relay.reshape(const_10281.astype('int8'), [12, 14, 4]), ), 1)
call_10282 = relay.TupleGetItem(func_1359_call(relay.reshape(const_10281.astype('int8'), [12, 14, 4]), relay.reshape(const_10281.astype('int8'), [12, 14, 4]), ), 1)
func_4376_call = mod.get_global_var('func_4376')
func_4378_call = mutated_mod.get_global_var('func_4378')
const_10310 = relay.const([True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False], dtype = "bool")#candidate|10310|(540,)|const|bool
call_10309 = relay.TupleGetItem(func_4376_call(relay.reshape(const_10310.astype('bool'), [6, 6, 15])), 0)
call_10311 = relay.TupleGetItem(func_4378_call(relay.reshape(const_10310.astype('bool'), [6, 6, 15])), 0)
func_6728_call = mod.get_global_var('func_6728')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_10326 = func_6728_call()
call_10327 = func_6728_call()
func_9109_call = mod.get_global_var('func_9109')
func_9110_call = mutated_mod.get_global_var('func_9110')
call_10330 = relay.TupleGetItem(func_9109_call(), 0)
call_10331 = relay.TupleGetItem(func_9110_call(), 0)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_10348 = func_7903_call()
call_10349 = func_7903_call()
func_5265_call = mod.get_global_var('func_5265')
func_5266_call = mutated_mod.get_global_var('func_5266')
call_10352 = relay.TupleGetItem(func_5265_call(), 0)
call_10353 = relay.TupleGetItem(func_5266_call(), 0)
output = relay.Tuple([call_10248,call_10280,const_10281,call_10309,const_10310,call_10326,call_10330,call_10348,call_10352,])
output2 = relay.Tuple([call_10249,call_10282,const_10281,call_10311,const_10310,call_10327,call_10331,call_10349,call_10353,])
func_10358 = relay.Function([], output)
mod['func_10358'] = func_10358
mod = relay.transform.InferType()(mod)
mutated_mod['func_10358'] = func_10358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10358_call = mutated_mod.get_global_var('func_10358')
call_10359 = func_10358_call()
output = call_10359
func_10360 = relay.Function([], output)
mutated_mod['func_10360'] = func_10360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5008_call = mod.get_global_var('func_5008')
func_5009_call = mutated_mod.get_global_var('func_5009')
call_10369 = relay.TupleGetItem(func_5008_call(), 0)
call_10370 = relay.TupleGetItem(func_5009_call(), 0)
func_6970_call = mod.get_global_var('func_6970')
func_6971_call = mutated_mod.get_global_var('func_6971')
call_10374 = relay.TupleGetItem(func_6970_call(), 0)
call_10375 = relay.TupleGetItem(func_6971_call(), 0)
func_2850_call = mod.get_global_var('func_2850')
func_2851_call = mutated_mod.get_global_var('func_2851')
call_10394 = func_2850_call()
call_10395 = func_2850_call()
func_9866_call = mod.get_global_var('func_9866')
func_9867_call = mutated_mod.get_global_var('func_9867')
call_10426 = relay.TupleGetItem(func_9866_call(), 0)
call_10427 = relay.TupleGetItem(func_9867_call(), 0)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_10431 = relay.TupleGetItem(func_1003_call(), 0)
call_10432 = relay.TupleGetItem(func_1004_call(), 0)
uop_10437 = relay.sinh(call_10394.astype('float32')) # shape=(14, 7, 10)
uop_10439 = relay.sinh(call_10395.astype('float32')) # shape=(14, 7, 10)
func_9652_call = mod.get_global_var('func_9652')
func_9655_call = mutated_mod.get_global_var('func_9655')
const_10441 = relay.const(-2, dtype = "uint64")#candidate|10441|()|const|uint64
var_10442 = relay.var("var_10442", dtype = "uint64", shape = (2640,))#candidate|10442|(2640,)|var|uint64
call_10440 = func_9652_call(relay.reshape(const_10441.astype('uint64'), []), relay.reshape(var_10442.astype('uint64'), [15, 16, 11]), )
call_10443 = func_9652_call(relay.reshape(const_10441.astype('uint64'), []), relay.reshape(var_10442.astype('uint64'), [15, 16, 11]), )
func_9494_call = mod.get_global_var('func_9494')
func_9497_call = mutated_mod.get_global_var('func_9497')
const_10487 = relay.const([-8.723247,0.586012,-3.649617,-5.306351,7.660964,-6.241378,0.703752,-2.675586,9.122311,0.982470,-2.225854,7.137507,-3.931902,5.508348,3.721540,-4.448141,7.204939,4.516426,6.068405,-2.357994,-7.109921,3.365614,-5.219036,6.941684,6.485016,-9.453822,7.205158,2.101766,0.351693,3.386099,8.364576,-7.754329,4.196171,9.930273,-1.272766,9.313506,-8.114624,-6.587610,3.971153,-7.814164,-7.666205,-0.027240,-4.569403,7.253001,-3.119359,4.796805,1.432002,-0.906103,5.135637,0.470079,5.525216,1.672046,2.571992,-8.967215,5.395918,-0.996733,2.473561,-4.797120,-0.903610,5.047105,-8.012673,-0.733101,8.294251,2.095783,-6.428469,-1.857405,6.506750,-7.211868,0.244819,9.615366,1.880767,6.173432,-5.183027,5.533007,3.061623,3.445362,1.256407,0.908980,-2.307761,5.209417,4.379998,8.500465,8.966171,-8.560041,-8.988247,-4.818464,5.036346,5.373744,1.219121,-1.949830,3.355674,-1.739429,3.263999,6.165265,-7.866515,0.716670], dtype = "float64")#candidate|10487|(96,)|const|float64
call_10486 = func_9494_call(relay.reshape(const_10487.astype('float64'), [12, 2, 4]))
call_10488 = func_9494_call(relay.reshape(const_10487.astype('float64'), [12, 2, 4]))
func_492_call = mod.get_global_var('func_492')
func_495_call = mutated_mod.get_global_var('func_495')
call_10499 = func_492_call(relay.reshape(call_10374.astype('float32'), [1, 13, 14]))
call_10500 = func_492_call(relay.reshape(call_10374.astype('float32'), [1, 13, 14]))
output = relay.Tuple([call_10369,call_10374,call_10426,call_10431,uop_10437,call_10440,const_10441,var_10442,call_10486,const_10487,call_10499,])
output2 = relay.Tuple([call_10370,call_10375,call_10427,call_10432,uop_10439,call_10443,const_10441,var_10442,call_10488,const_10487,call_10500,])
func_10507 = relay.Function([var_10442,], output)
mod['func_10507'] = func_10507
mod = relay.transform.InferType()(mod)
mutated_mod['func_10507'] = func_10507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10508 = relay.var("var_10508", dtype = "uint64", shape = (2640,))#candidate|10508|(2640,)|var|uint64
func_10507_call = mutated_mod.get_global_var('func_10507')
call_10509 = func_10507_call(var_10508)
output = call_10509
func_10510 = relay.Function([var_10508], output)
mutated_mod['func_10510'] = func_10510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_10512 = func_5177_call()
call_10513 = func_5177_call()
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_10526 = relay.TupleGetItem(func_2115_call(), 1)
call_10527 = relay.TupleGetItem(func_2117_call(), 1)
func_7837_call = mod.get_global_var('func_7837')
func_7839_call = mutated_mod.get_global_var('func_7839')
call_10562 = func_7837_call()
call_10563 = func_7837_call()
func_9403_call = mod.get_global_var('func_9403')
func_9407_call = mutated_mod.get_global_var('func_9407')
const_10579 = relay.const([-0.337068,8.697445,-3.367995,-8.915815,2.057560,4.832365,4.228303,-2.949586,2.884096,-3.798940,-4.253757,4.920344,0.353627,-5.372997,-9.014281,8.396158,-6.075820,3.669837,-4.939474,-7.616720,-6.097313,4.907566,-1.140032,-0.430540,7.755351,9.419363,-7.685732,3.575881,1.445823,-9.615897,-2.752051,-2.946248,-3.640141,7.120480,2.080373,-9.523324,-2.932781,3.521714,1.363880,-4.578229,-7.067329,9.650882,-8.101205,2.672244,-0.689834,-0.626081,9.311096,9.694492,-1.919973,-8.752810,-3.899147,4.318754,-0.930685,9.974790,-8.604168,0.746338,-3.432721,4.380966,1.554990,-9.947649,-6.446204,-9.102235,0.092668,2.128499,0.774774,7.604500,0.323734,-6.909633,4.318741,3.832220,9.184810,-2.632403,6.234966,-7.165214,-7.015658,-3.513705,7.464136,-9.769589,-8.448481,-4.777036,-4.525906,-7.494117,-0.188429,5.699709,-8.159001,-0.894280,5.996965,6.839154,-3.795529,-4.966989,-5.518613,-3.482581,6.591719,-4.236975,-3.252569,1.525898,-8.378034,-0.975189,-2.405148,-6.475755,1.204706,-1.543891,-4.585600,2.536555,-2.876827,5.590016,6.546225,-3.964082,1.943497,-2.624504,-0.347424,-8.432323,0.456327,9.809737,-0.165122,9.053193,-1.448990,6.841416,9.910525,-5.090845,-6.401875,5.367126,5.494716,-6.659865,-7.142164,-3.301377,0.815404,-7.937462,-2.230231,-6.225853,4.643132,-2.890284,-5.405278,-7.438519,-3.264192,1.645270,7.750242,-4.722010,-5.393048,7.977222,-4.992016,0.135980,-1.633039,-6.783583,-4.577323,1.832690,-4.048584,6.039305,4.789197,4.635671,-8.616128,-0.100143,2.359207,-7.385709,-1.595899,-1.231425,-6.378248,-1.990806,8.926258,8.766330,9.850716,-0.056270,-5.872496,-4.979889,6.914010,2.923640,-3.939023,0.673707,5.840521,-2.488508,1.389759,-8.551276,-5.376787,-8.482081,7.429986,9.836435], dtype = "float32")#candidate|10579|(176,)|const|float32
const_10580 = relay.const([4,1,1,-7,-8,7,4,10,-1,-3,3,3,8,5,3,-7,7,1,7,-6,-4,8,9,1,7,2,2,5,1,5,5,-1,1,4,-1,-5,-3,6,-1,3,10,7,5,4,-4,-7,3,3,1,2,-6,-8,9,3,10,-9,3,6,10,1,-1,2,8,5,-3,-1,3,-9,3,4,8,-6,1,-7,2,-6,-8,-6,-6,-6,-8,-9,8,5,10,7,-3,8,-6,7,-5,-2,1,-3,-9,-5,8,7,-2,9,2,-1,-2,-10,-6,-6,-10,-7,-4,-8,-9,-9,-7,-5,9,-2,-4,9,-1,-2,-8,7,-7,-8,5,4,-1,3,1,6,5,-2,-2,-3,-10,10,-3,5,-3,3,-1,4,-1,-9,-6,-2,-4,10,-7,-8,7,-6,-5,2,-6,-6,1,-8,-6,3,-3,-4,3,-4,8,9,10,-6,8,4,3,10,9,-4,-6,-10,-4,-5,-10,-9,-1,-4,4,7,-9,6,1,4,6,7,-7,-1,3,9,-5,4,7,-6,-7,4,1,10,6,4,-3,5,9,-2,2,-8,2,-2,7,1,-2,-3,-5,-7,-6,4,-1,9,5,-4,5,-3,-1,5,4,5,-10,-8,-9,7,-5,3,10,-8,5,1,4,-4,-10,5,4,-1,-8,9,-6,-5,7,-9,-1,-3,10,4,-9,-1,9,4,-7,10,-4,5,7,-2,-7,5,-9,4,-6,5,9,6,-1,-3,-7,-6,-6,-2,-10,-1,-7,-4,-7,-8,-7,8,-9,3,-7,10,1,-7,-4,2,-3,-10,-9,9,-3,9,-9,7,3,10,8,6,-6,8,1,-6,3,7,2,-10,-2,-6,-5,-1,-3,-8,10,2,-6,8,2,-4,-9,9,-6,8,-7,10,-7,10,-1,1,-2,-9,-5,8,10,6,-10,3,-3,5,-3,-2,4,-10,-10,-8,6,-5,-6,-2,-2,6,-3,-9,7,-8,6,3,-4,9,-6,10,-6,-4,-5,-9,-5,10,-3,4,-2,-2,-4,10,-8,2,8,5,-5,8,-7,9,-1,8,6,6,6,-8,-5,-8,9,-6,-2,-3,-1,-8,-8,-8,4,5,-2,9,10,-10,-6,-9,-8,4,-7,-8,-7,-5,-3,-2,-3,-8,9,-2,-7,-6,-9,-9,-2,-9,-9,-7,5,-1,-9,5,1,4,3,9,-8,-4,-1,-8,-6,-2,-3,-3,-3,7,7,-3,-9,6,-4,-1,-9,-1,-8,5,-5,-10,8,-9,6,-4,-9,-1,3,-10,2,9,-8,4,-9,-1,8,5,5,-6,1,5,-6,-8,-4,3,-2,9,-3,8,-4,8,-10,-7,-6,-7,-2,7,-1,-6,-3,-10,3,7,-6,10,3,1,1,-10,10,4,-2,-9,-3,-7,-4,-1,10,-5,-2,6,10,-3,-3,8,2,5,-10,-8,-9,-1,-4,4,-2,-10,-1,-4,-4,-4,9,10,3,-5,2,-7,-10,8,5,-10,8,-3,-6,1,-1,-9,-6,-2,-6,1,-2,-1,-1,6,8,10,6,4,-10,4,-10,6,5,5,6,-1,8,-3,-10,2,-5,-3,-8,4,6,3,-4,3,6,-1,6,3,2,3,-6,-2,-9,-3,4,7,7,7,9,-9,8,9,1,-9,1,7,-7,8,3,-3,1,8,-1,1,3,-7,1,-4,-2,-5,5,10,-8,9,2,-10,-3,-2,1,6,-5,-4,1,-7,3,7,4,1,10,3,10,-6,10,-7,1,-5,-8,-1,7,3,-9,-9,2,5,7,-1,-3,-2,-6,6,-4,-4,-9,1,-4,-7,9,-8,-3,-10,-4,9,-9,-10,4,10,6,10,2,3,-8,-1,-6,7,-3,-4,-7,4,-6,8,-4,-7,6,-8,-1,-4,-3,7,5,1,-10,-7,-7,-2,7,4,10,-2,9,5,-10,10,-4,-3,2,7,10,-6,4,2,9,5,-7,8,-8,9,-3,-1,7,-8,-9,-8,8,6,3,-5,5,-4,8,10,8,-2,-10,8,9,4,-10,7,-8,1,-2,-6,6,-1,3,-10,3,-1,-7,8,-6,5,7,-3,-6,8,1,-7,5,3,9,8,5,3,-10,-9,-5,2,8,-7,-2,-4,-9,1,-9,4,8,-10,-3,7,5,-2,10,-2,-1,-5,-4,-5,-2,-8,3,-8,6,-5,4,4,8,10,2,-8,-9,-6,-2,7,-9,4,9,-6,4,3,3,-5,-5,-1,-5,10,2,8,-6,7,-1,9,4,4,7,4,-7,5,4,-1,-6,6,6,3,10,-7,-2,-1,-4,-4,4,-4,-7,-5,4,-3,-8,8,4,5,-3,4,-3,-2,2,1,-4,-7,4,3,9,-10,-4,10,-2,-1,-7,10,2,8,-8,7,2,2,-5,5,10,2,4,1,7,2,-8,6,4,1,-1,-3,-4,10,-9,-7,10,2,-1,3,6,-4,6,4,3,4,-6,8,2,-1,-5,-8,8,-3,5,-7,-9,-7,8,-9,-7,-5,-9,-4,3,10,6,6,-9,2,-5,9,9,-1,5,8,-2,-6,-9,2,8,1,1,9,-6,-6,-10,-5,10,8,7,-7,10,-9,-4,1,2,-7,9,3,-6,6,-5,-7,-10,-10,2,5,-1,-2,-5,8,-7,10,-10,1,5,6,-2,-5,-9,-9,-4,-4,1,9,-9,5,3,-3,-10,1,-4,7,1,6,9,-10,2,-8,-9,8,6,-5,-1,-2,-3,-8,1,2,-7,1,-6,7,-6,-10,3,-5,1,8,10,-3,-6,-1,6,8,-6,7,9,-1,-10,9,8,4,6,3,5,-1,7,-7,-9,-6,1,8,-9,4,9,5,-7,-7,3,1,6,-9,5,-7,1,9,7,4,4,7,3,-1,3,5,7,-3,7,-7,-8,-7,10,-10,1,4,4,-1,3,9,-9,1,-10,9,8,2,-4,4,-6,10,-2,5,6,-3,5,5,6,-9,2,-6,6,6,-8,4,9,-3,8,7,3,3,1,3,-5,4,10,10,9,-6,8,-2,3,6,-3,-3,4,-6,5,-2,10,10,7,8,5,4,-5,10,2,-9,-10,3,10,9,-9,-8,7,10,7,2,5,7,2,8,-3,1,1,7,3,7,-7,2,-4,-9,-2,4,5,-7,-9,1,2,-5,-5,-4,-8,-10,-9,-8,7,-3,8,-6,9,2,-10,9,-6,-5,-1,-9,4,-6,6,-4,-1,1,6,-4,3,-4,8,5,2,-3,10,1,-5,-7,-1,1,-9,3,4,-2,-1,9,2,1,7,6,-10,-3,4,-4,-10,8,1,-5,-9,1,-5,-9,-8,10,6,3,5,-1,-6,3,-3,-5,2,-9,-7,1,3,-9,-10,-6,-7,4,-5,-8,-9,-6,3,7,1,8,-6,-10,-9,-10,9,9,5,7,-6,2,7,-8,-9,-8,10,-8,5,5,-8,4,1,3,-7,-7,-5,-10,6,3,-2,-6,6,-1,2,6,-1,7,-6,-9,9,5,4,6,-3,5,-1,10,-5,-10,-6,-6,7,-2,-4,-5,8,8,-5,-2,-5,-6,6,-6,8,7,-10,-3,-8,1,8,6,-6,-8,9,9,-6,10,2,4,-10,4,-6,1,3,-8,8,9,-10,-4,8,5,-2,-8,1,-4,3,-2,-6,4,5,-2,-10,8,7,-1,7,9,-10,-4,6,-9,6,9,6,-3,7,-7,-4,7,7,6,-3,-3,-1,2,-5,-8,4,-2,1,5,-1,-3,7,8,-7,8,-9,-10,8,-10,5,-3,-5,1,-10,-4,-9,8,8,-10,10,6,8,10,10,-8,-7,-3,-6,8,1,9,-10,7,-10,-4,4,-10,6,8,-9,8,-7,-6,-5,1,8,-9,-8,8,-3,8,2,10,9,5,-6,2,6,-6,-6,-9,10,5,-2,6,5,5,-4,-7,-6,-1,-7,-6,2,-4,-1,-3,10,-9,-10,10,-10,5,1,-7,6,9,-10,6,7,2,-2,-10,-2,-5,-3,10,-1,7,8,-10,1,-8,2,-3,-4,8,-10,8,-7,-8,7,6,-2,-1,9,7,-9,-9,8,2,6,8,6,10,9,6,6,6,-6,-10,-6,-3,9,8,5,-1,-9,7,-5,1,-4,1,-10,8,4,1,3,7,-7,3,-4,-4,-3,8,-7,5,-5,-3,-5,-1,9,9,7,5,-10,9,-3,4,-2,-6,-1,-2,7,-1,6,-1,7,6,5,-9,10,-6,-9,-10,5,3,5,10,3,-4,7,-4,5,-8,3,-5,5,9,4,-8,3,4,-9,2,8,-10,3,-9,8,-1,5,6,-9,-8,2,1,9,5,-10,7,7,4,5,-10,-9,4,7,5,-4,-9,1,4,-7,-8,-10,-6,-4,8,-2,-2,1,6,-5,4,-8,-8,4,8,4,8,-1,-2,-3,-6,-3,7,-4,2,7,-9,-10,3,10,3,7,10,4,-5,-4,-3,1,1,-4,-3,10,6,-10,1,-2,3,-8,9,7,-10,-7,8,-4,1,3,-10,7,-2,-7,-6,1,-8,4,-10,1,2,2,6,-2,-7,5,9,-5,9,-5,-3,-6,-3,10,1,-3,1,-4,5,-6,-10,-10,-4,-1,-9,10,3,6,-6,1,-8,-10,-2,-8,10,-7,-6,3,-4,-3,-1,6,6,-1,-8,10,9,-7,-4,-9,-8,9,5,-1,4,-1,-4,-10,1,-3,-6,-7,2,-9,8,5,4,7,5,10,4,6,-10,-10,-10,4,-7,2,-4,8,-8,-5,4,-4,1,-10,-7,3,-3,-2,6,-8,4,2,10,9,10,2,7,-5,-10,-5,9,6,-1,-4,2,-1,3,-6,5,1,-1,-1,9,-9,1,7,2,-4,2,3,2,-4,-9,-8,-6,-10,-1,5,7,8,6,1,-1,-2,-5,-8,-8,1,-3,-10,7,-5,-2,-8,-2,8,4,-7,-4,-7,-1,7,-7,7,-9,-8,8,7,-4,9,-3,-6,-8,-1,10,-3,-5,10,-1,4,5,-8,-7,-5,2,-7,-2,-4,-3,-5,5,4,8,-3,-5,1,-9,5,6,7,3,-4,6,-7,5,4,10,9,3,7,1,8,-6,5,2,-1,7,-1,-3,2,10,7,3,8,-10,-6,4,10,-6,4,-1,2,-10,9,-3,5,-6,-5,-10,6,9,-2,3,-5,-1,6,5,7,1,3,6,7,-10,-2,-7,-2,-8,1,6,-2,-6,8,6,-9,1,3,7,3,4,8,2,8,-2,-3,7,-7,4,4,-1,9,4,1,-3,7,-10,1,-4,-3,-7,7,2,7,-9,5,6,4,-5,-9,1,-8,-2,-4,7,3,2,10,-3,-9,9,-4,6,-3,5,3,-10,9,-1,8,-8,4,10,3,10,-8,6,4,-10,-4,8,2,-10,2,2,7,-1,-2,-6,4,9,-5,-4,6,5,-10,9,3,-3,-9,4,-6,9,-6,5,1,4,8,4,-1,-5,-3,2,-4,-8,-9,10,-9,-5,4,-9,-5,-2,10,-6,6,-1,-8,3,-8,-4,7,-4,3,-3,1,-3,-2,1,2,2,-1,-6,-4,10,4,-10,-9,7,-6,-8,-10,-5,-7,-4,-6,-6,-9,-5,-5,-6,-10,-2,-9,-1,-9,3,-2,-4,7,-10,6,7,2,8,-10,6,9,8,-7,4,-2,5,-7,4,7,-6,-10,8,-6,9,1,7,5,9,-6,10,-3,-1,4,-6,-1,-5,5,5,10,-1,-1,-10,-4,10,5,10,-5,-8,-8,1,7,10,-7,-7,-9,7,-5,-8,-7,10,8,-8,1,-3,2,-8,-10,-3,3,6,-8,-2,10,-3,8,-7,-3,9,-2,-3,-6,3,9,-3,-8,4,1,-9,8,8,-5,-2,9,-4,-4,7,-8,-8,-10,3,1,2,-5,-3,-4,7,-5,10,10,6,9,-6,6,7,-6,-4,8,-8,-8,6,-9,1,-3,9,3,9,-1,-2,-10,4,1,-2,-3,-2,9,-5,4,-4,7,2,9,5,-8,-6,7,-4,-8,-7,-7,4,-8,6,-4,-9,-4,-4,-2,-2,7,-9,-7,-1,1,6,7,-6,10,9,4,7,-6,-10,2,-9,9,-1,2,1,-2,-5,-8,5,5,-2,-1,7,-1,-8,-9,10,-4,4,7,-3,-2,-9,9,8,10,-5,8,8,8,-4,2,7,-7,6,-4,-2,-9,-9,-6,4,-7,-7,-10,-6,-3,-7,4,-5,-3,-4,1,-7,6,-1,-1,8,-4,4,-2,-2,1,-9,5,6,6,7,8,8,-10,-6,-3,-8,9,-1,-2,-5,-4,8,10,-7,7,-4,10,9,-10,-10,9,-10,-9,9,-3,6,1,-7,1,-7,-2,1,4,3,-5,9,-10,-4,9,4,-8,-1,6,9,-6,4,-9,1,7,1,6,7,8,-6,-3,-1,1,-1,2,4,8,7,5,5,1,-5,4,2,3,1,10,-8,-5,-8,1,-6,-10,-10,-2,-8,-9,-7,-4,8,-9,-3,4,8,4,-8,-7,-6,9,1,-1,2,1,6,10,-3,5,-8,1,8,-3,10,3,5,4,-3,5,6,7,-1,7,8,4,-1,-1,8,-7,3,6,2,-6,-4,10,-4,3,-6,1,-4,-9,10,8,-5,8,-3,-6,4,-9,10,2,6,3,-8,7,9,-1,-5,9,-3,8,3,2,5,-10,1,-2,7,-3,10,-1,6,-10,-10,-1,-7,-3,-2,-10,8,-3,-1,-8,-8,5,10,9,-7,-7,9,4,-6,8,1,8,-9,-8,5,1,8,-3,4,-2,-2,-2,6,7,-2,-3,-5,2,-1,-6,-8,-2,-7,-5,-7,-3,-6,8,-8,8,-1,3,-2,-10,7,9,-5,2,-6,-2,-3,-1,-8,5,-5,-8,-3,-2,9,-10,-10,-2,2,6,10,-2,-2,4,-2,-8,1,3,10,-3,-7,-5,-3,-1,-10,4,6,-5,-7,-10,9,7,-5,-7,8,-4,-2,2,-6,4,-4,8,-4,-10,-3,1,-8,3,1,-10,10,1,-5,-9,10,8,2,3,10,-7,4,6,-8,-7,9,-5,-3,2,1,-8,-7,-6,4,-4,-5,-7,1,-2,4,-6,-9,3,9,-10,9,3,6,-6,1,5,3,4,7,2,7,6,1,8,5,10,7,3,-5,6,-8,-1,-4,6,-2,5,-8,-5,-8,-9,-2,10,-6,-5,-9,6,-9,-2,-1,6,-7,-3,10,6,-1,-5,-5,4,-6,-2,-7,6,-5,-3,-7,10,-10,10,10,-9,10,6,9,-7,-9,1,7,-6,-6,-9,-5,-6,3,-4,2,4,9,7,1,4,7,6,5,-8,-10,-3,-5,10,4,1,-9,-8,-6,-8,-3,7,-10,-3,6,5,6,10,6,1,6,-6,8,5,10,-3,10,10,6,6,-3,-9,-10,4,9,-5,-9,1,-6,-1,2,7,5,-3,-1,2,-9,-6,-10,-4,-6,-5,2,2,4,4,7,-9,1,5,8,-9,-8,5,-5,-8,-8,8,3,-7,3,-3,5,5,2,1,7,9,6,5,3,-4,10,-10,-2,-8,-2,-7,2,4,-2,-4,-6,-6,6,-6,7,-9,-2,8,10,8,6,9,-7,-2,2,10,10,2,9,7,10,1,-9,-5,-4,10,-10,9,-6,8,8,7,6,-8,-9,-9,2,-10,-10,9,10,5,10,9,5,-5,-7,-5,-4,-6,-7,-2,6,8,-7,-1,6,-10,9,4,7,1,10,7,-8,-6,1,-1,-10,-2,-6,5,-8,-10,-4,-3,2,7,9,-5,-10,-9,9,-7,-9,-7,3,-8,-6,-9,3,-3,7,6,-7,-2,-3,7,5,2,-2,-10,10,-5,-8,-9,6,3,-6,-9,1,-10,-6,-8,-1,-4,9,8,-4,6,-7,3,8,9,7,7,-1,4,-3,10,-3,7,-10,1,-9,-6,-5,2,-4,-7,8,1,-10,1,-9,5,7,6,-6,1,-6,-4,5,4,6,2,-5,7,10,-9,9,1,-8,3,-3,-9,-3,-2,8,10,7,-10,-7,-10,-5,7,4,9,-4,6,-7,10,10,8,8,-2,2,-1,-8,-7,9,6,2,5,-10,-7,6,6,-9,-3,-4,6,-6,-6,-8,-7,7,-2,1,-6,8,7,-3,1,-9,1,-1,3,3,-4,-2,-2,6,-1,3,7,3,7,-9,7,5,3,-4,5,-6,2,2,1,8,-7,9,4,8,-5,-2,-4,10,-4,6,4,8,1,10,2,-4,-10,-2,5,6,6,-2,-4,10,7,-7,9,6,7,-4,5,7,10,-10,9,5,-3,-6,9,4,3,6,-7,3,-10,3,6,-3,-9,-1,8,-4,3,7,-7,10,2,-1,10,-3,1,-8,-7,-3,-3,-5,-2,-9,10,-1,-6,-6,-6,-7,10,-1,-7,-10,-1,3,9,2,-8,8,-8,4,9,2,6,4,-1,-7,-5,5,1,-9,-7,-4,3,-2,1,6,-5,-7,-8,-4,-7,9,9,-7,1,3,-8,-2,8,-3,9,1,8,2,-1,4,1,-10,-7,-3,5,-8,-10,6,-4,7,6,7,7,9,8,-6,9,1,4,-8,-7,-4,5,-7,8,-2,3,10,1,-8,5,7,-1,-3,2,6,6,-10,-7,-1,10,-1,5,5,-1,2,-8,-1,9,3,-5,-5,-8,-1,-10,10,-8,-7,10,-6,6,6,-8,4,-3,3,6,9,10,9,-4,4,-1,2,2,4,-5,3,-9,5,5,-10,-3,-5,8,-5,-4,-2,-9,-8,-2,10,-3,3,1,6,5,9,4,2,-9,-4,-5,7,1,-6,8,-2,-8,-4,2,-7,5,-6,-9,1,-7,-10,-1,10,-2,7,-10,-2,-4,9,8,7,-1,4,-3,-7,-2,-7,-4,7,1,8,2,2,-6,-4,-9,8,5,-2,-9,-1,6,3,6,5,-3,1,-3,-3,-3,5,-9,-2,7,5], dtype = "int8")#candidate|10580|(3360,)|const|int8
var_10581 = relay.var("var_10581", dtype = "bool", shape = (540,))#candidate|10581|(540,)|var|bool
call_10578 = relay.TupleGetItem(func_9403_call(relay.reshape(const_10579.astype('float32'), [176,]), relay.reshape(const_10580.astype('int8'), [3360,]), relay.reshape(var_10581.astype('bool'), [9, 60]), ), 3)
call_10582 = relay.TupleGetItem(func_9407_call(relay.reshape(const_10579.astype('float32'), [176,]), relay.reshape(const_10580.astype('int8'), [3360,]), relay.reshape(var_10581.astype('bool'), [9, 60]), ), 3)
output = relay.Tuple([call_10512,call_10526,call_10562,call_10578,const_10579,const_10580,var_10581,])
output2 = relay.Tuple([call_10513,call_10527,call_10563,call_10582,const_10579,const_10580,var_10581,])
func_10611 = relay.Function([var_10581,], output)
mod['func_10611'] = func_10611
mod = relay.transform.InferType()(mod)
mutated_mod['func_10611'] = func_10611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10612 = relay.var("var_10612", dtype = "bool", shape = (540,))#candidate|10612|(540,)|var|bool
func_10611_call = mutated_mod.get_global_var('func_10611')
call_10613 = func_10611_call(var_10612)
output = call_10613
func_10614 = relay.Function([var_10612], output)
mutated_mod['func_10614'] = func_10614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_10652 = relay.TupleGetItem(func_2609_call(), 0)
call_10653 = relay.TupleGetItem(func_2611_call(), 0)
func_7710_call = mod.get_global_var('func_7710')
func_7712_call = mutated_mod.get_global_var('func_7712')
call_10675 = func_7710_call()
call_10676 = func_7710_call()
func_10120_call = mod.get_global_var('func_10120')
func_10121_call = mutated_mod.get_global_var('func_10121')
call_10678 = relay.TupleGetItem(func_10120_call(), 0)
call_10679 = relay.TupleGetItem(func_10121_call(), 0)
func_1374_call = mod.get_global_var('func_1374')
func_1376_call = mutated_mod.get_global_var('func_1376')
call_10695 = relay.TupleGetItem(func_1374_call(), 0)
call_10696 = relay.TupleGetItem(func_1376_call(), 0)
output = relay.Tuple([call_10652,call_10675,call_10678,call_10695,])
output2 = relay.Tuple([call_10653,call_10676,call_10679,call_10696,])
func_10705 = relay.Function([], output)
mod['func_10705'] = func_10705
mod = relay.transform.InferType()(mod)
mutated_mod['func_10705'] = func_10705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10705_call = mutated_mod.get_global_var('func_10705')
call_10706 = func_10705_call()
output = call_10706
func_10707 = relay.Function([], output)
mutated_mod['func_10707'] = func_10707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_10714 = relay.TupleGetItem(func_2155_call(), 0)
call_10715 = relay.TupleGetItem(func_2157_call(), 0)
func_492_call = mod.get_global_var('func_492')
func_495_call = mutated_mod.get_global_var('func_495')
call_10734 = func_492_call(relay.reshape(call_10714.astype('float32'), [1, 13, 14]))
call_10735 = func_492_call(relay.reshape(call_10714.astype('float32'), [1, 13, 14]))
func_7135_call = mod.get_global_var('func_7135')
func_7138_call = mutated_mod.get_global_var('func_7138')
var_10741 = relay.var("var_10741", dtype = "float32", shape = (176,))#candidate|10741|(176,)|var|float32
call_10740 = relay.TupleGetItem(func_7135_call(relay.reshape(var_10741.astype('float32'), [176, 1])), 4)
call_10742 = relay.TupleGetItem(func_7138_call(relay.reshape(var_10741.astype('float32'), [176, 1])), 4)
output = relay.Tuple([call_10714,call_10734,call_10740,var_10741,])
output2 = relay.Tuple([call_10715,call_10735,call_10742,var_10741,])
func_10743 = relay.Function([var_10741,], output)
mod['func_10743'] = func_10743
mod = relay.transform.InferType()(mod)
var_10744 = relay.var("var_10744", dtype = "float32", shape = (176,))#candidate|10744|(176,)|var|float32
output = func_10743(var_10744)
func_10745 = relay.Function([var_10744], output)
mutated_mod['func_10745'] = func_10745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_10756 = relay.TupleGetItem(func_6836_call(), 1)
call_10757 = relay.TupleGetItem(func_6837_call(), 1)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_10807 = relay.TupleGetItem(func_1157_call(), 1)
call_10808 = relay.TupleGetItem(func_1159_call(), 1)
func_5942_call = mod.get_global_var('func_5942')
func_5943_call = mutated_mod.get_global_var('func_5943')
call_10815 = relay.TupleGetItem(func_5942_call(), 1)
call_10816 = relay.TupleGetItem(func_5943_call(), 1)
output = relay.Tuple([call_10756,call_10807,call_10815,])
output2 = relay.Tuple([call_10757,call_10808,call_10816,])
func_10817 = relay.Function([], output)
mod['func_10817'] = func_10817
mod = relay.transform.InferType()(mod)
output = func_10817()
func_10818 = relay.Function([], output)
mutated_mod['func_10818'] = func_10818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_10821 = relay.TupleGetItem(func_2005_call(), 5)
call_10822 = relay.TupleGetItem(func_2007_call(), 5)
func_5803_call = mod.get_global_var('func_5803')
func_5804_call = mutated_mod.get_global_var('func_5804')
call_10823 = func_5803_call()
call_10824 = func_5803_call()
uop_10842 = relay.rsqrt(call_10821.astype('float32')) # shape=(1560, 1)
uop_10844 = relay.rsqrt(call_10822.astype('float32')) # shape=(1560, 1)
output = relay.Tuple([call_10823,uop_10842,])
output2 = relay.Tuple([call_10824,uop_10844,])
func_10845 = relay.Function([], output)
mod['func_10845'] = func_10845
mod = relay.transform.InferType()(mod)
output = func_10845()
func_10846 = relay.Function([], output)
mutated_mod['func_10846'] = func_10846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8799_call = mutated_mod.get_global_var('func_8799')
call_10890 = func_8797_call()
call_10891 = func_8797_call()
func_5963_call = mod.get_global_var('func_5963')
func_5965_call = mutated_mod.get_global_var('func_5965')
call_10893 = relay.TupleGetItem(func_5963_call(), 1)
call_10894 = relay.TupleGetItem(func_5965_call(), 1)
output = relay.Tuple([call_10890,call_10893,])
output2 = relay.Tuple([call_10891,call_10894,])
func_10913 = relay.Function([], output)
mod['func_10913'] = func_10913
mod = relay.transform.InferType()(mod)
mutated_mod['func_10913'] = func_10913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10913_call = mutated_mod.get_global_var('func_10913')
call_10914 = func_10913_call()
output = call_10914
func_10915 = relay.Function([], output)
mutated_mod['func_10915'] = func_10915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_10943 = relay.TupleGetItem(func_2901_call(), 0)
call_10944 = relay.TupleGetItem(func_2902_call(), 0)
output = call_10943
output2 = call_10944
func_10947 = relay.Function([], output)
mod['func_10947'] = func_10947
mod = relay.transform.InferType()(mod)
output = func_10947()
func_10948 = relay.Function([], output)
mutated_mod['func_10948'] = func_10948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_10980 = relay.TupleGetItem(func_6836_call(), 1)
call_10981 = relay.TupleGetItem(func_6837_call(), 1)
output = relay.Tuple([call_10980,])
output2 = relay.Tuple([call_10981,])
func_10992 = relay.Function([], output)
mod['func_10992'] = func_10992
mod = relay.transform.InferType()(mod)
output = func_10992()
func_10993 = relay.Function([], output)
mutated_mod['func_10993'] = func_10993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10175_call = mod.get_global_var('func_10175')
func_10177_call = mutated_mod.get_global_var('func_10177')
call_11013 = relay.TupleGetItem(func_10175_call(), 0)
call_11014 = relay.TupleGetItem(func_10177_call(), 0)
var_11019 = relay.var("var_11019", dtype = "float64", shape = (1560, 11))#candidate|11019|(1560, 11)|var|float64
bop_11020 = relay.power(call_11013.astype('float32'), var_11019.astype('float32')) # shape=(1560, 11)
bop_11023 = relay.power(call_11014.astype('float32'), var_11019.astype('float32')) # shape=(1560, 11)
func_9652_call = mod.get_global_var('func_9652')
func_9655_call = mutated_mod.get_global_var('func_9655')
var_11028 = relay.var("var_11028", dtype = "uint64", shape = ())#candidate|11028|()|var|uint64
var_11029 = relay.var("var_11029", dtype = "uint64", shape = (2640,))#candidate|11029|(2640,)|var|uint64
call_11027 = func_9652_call(relay.reshape(var_11028.astype('uint64'), []), relay.reshape(var_11029.astype('uint64'), [15, 16, 11]), )
call_11030 = func_9652_call(relay.reshape(var_11028.astype('uint64'), []), relay.reshape(var_11029.astype('uint64'), [15, 16, 11]), )
bop_11031 = relay.minimum(var_11019.astype('uint64'), relay.reshape(bop_11020.astype('uint64'), relay.shape_of(var_11019))) # shape=(1560, 11)
bop_11034 = relay.minimum(var_11019.astype('uint64'), relay.reshape(bop_11023.astype('uint64'), relay.shape_of(var_11019))) # shape=(1560, 11)
func_4950_call = mod.get_global_var('func_4950')
func_4953_call = mutated_mod.get_global_var('func_4953')
const_11045 = relay.const([3.920074,-2.354843,-2.398126,3.860779,-0.137108,1.157886,-5.206599,-6.516098,-1.427798,-2.980703,-3.531601,6.645177,-5.560176,-1.592116,6.849755,9.347378,-3.000353,-0.704696,8.014021,7.010954,-1.831488,-2.097934,8.095282,3.763189,-6.094190,5.178134,1.613578,-0.159444,-9.605088,1.197153,-0.357970,7.528218,2.647523,-8.887174,1.617809,-5.861780,-2.860526,-1.099252,7.757219,-7.686629,1.668754,6.707358,-5.592763,6.205684,-0.453754,-2.540537,9.887449,8.240165,4.844456,0.917492,6.686877,3.708458,-6.084527,-8.171108,8.905705,2.436075,-7.095410,0.744863,-0.540225,-0.979100,-8.477047,3.519467,-7.993231,-0.948288,-7.692424,-1.136158,3.242149,-2.506327,1.531888,-0.490569,4.438112,4.975282,-1.153622,-3.958309,4.947928,1.350768,7.736675,8.508584,5.177838,9.365726,9.864971,-6.277169,3.920789,-8.486540,5.845100,-1.545669,-0.687621,-5.600478,-5.065890,7.437857,2.486012,5.498590,-5.270576,-2.775826,-2.405900,3.986311,5.468646,2.740000,-2.481531,0.288339,-9.046461,-1.211867,-9.931564,1.571639,9.136579,-9.182257,5.373117,2.704790,4.183626,9.285500,-6.278259,1.521765,-0.860008,-4.584156,2.715990,-6.425052,6.964542,-8.395072,-5.288105,5.073672,2.427342,-2.431008,9.749732,-0.440854,-5.855199,7.594546,-5.919859,-9.828140,4.071685,-4.367561,5.636187,-7.379795,0.032781,-7.404443,-9.436748,-8.615348,1.687831,-3.710053,-3.435925,9.257608,-6.690227,5.133115,-7.729500,-1.370260,7.239147,-1.465575,6.794377,8.452004,5.231339,-7.567564,9.065993,2.662530,-5.349079,-9.459380,-5.606077,3.327918,-7.766506,-9.597149,-6.395186,-0.768631,0.909092,-9.074277,0.051050,3.372544,0.229345,-0.548826,-1.682702,-7.906652,2.135994,-4.826710,-9.409630,-3.729861,-6.449570,5.313064,4.604239,-8.271329,-8.348563,-3.396821,1.548036,9.930256,8.442789,2.723439], dtype = "float64")#candidate|11045|(182,)|const|float64
call_11044 = relay.TupleGetItem(func_4950_call(relay.reshape(const_11045.astype('float64'), [182,])), 1)
call_11046 = relay.TupleGetItem(func_4953_call(relay.reshape(const_11045.astype('float64'), [182,])), 1)
func_9705_call = mod.get_global_var('func_9705')
func_9707_call = mutated_mod.get_global_var('func_9707')
call_11049 = relay.TupleGetItem(func_9705_call(), 0)
call_11050 = relay.TupleGetItem(func_9707_call(), 0)
bop_11076 = relay.greater(bop_11020.astype('bool'), call_11013.astype('bool')) # shape=(1560, 11)
bop_11079 = relay.greater(bop_11023.astype('bool'), call_11014.astype('bool')) # shape=(1560, 11)
uop_11084 = relay.sinh(var_11019.astype('float32')) # shape=(1560, 11)
output = relay.Tuple([call_11027,var_11028,var_11029,bop_11031,call_11044,const_11045,call_11049,bop_11076,uop_11084,])
output2 = relay.Tuple([call_11030,var_11028,var_11029,bop_11034,call_11046,const_11045,call_11050,bop_11079,uop_11084,])
func_11086 = relay.Function([var_11019,var_11028,var_11029,], output)
mod['func_11086'] = func_11086
mod = relay.transform.InferType()(mod)
mutated_mod['func_11086'] = func_11086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11086_call = mutated_mod.get_global_var('func_11086')
var_11088 = relay.var("var_11088", dtype = "float64", shape = (1560, 11))#candidate|11088|(1560, 11)|var|float64
var_11089 = relay.var("var_11089", dtype = "uint64", shape = ())#candidate|11089|()|var|uint64
var_11090 = relay.var("var_11090", dtype = "uint64", shape = (2640,))#candidate|11090|(2640,)|var|uint64
call_11087 = func_11086_call(var_11088,var_11089,var_11090,)
output = call_11087
func_11091 = relay.Function([var_11088,var_11089,var_11090,], output)
mutated_mod['func_11091'] = func_11091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1035_call = mod.get_global_var('func_1035')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_11119 = relay.TupleGetItem(func_1035_call(), 2)
call_11120 = relay.TupleGetItem(func_1036_call(), 2)
func_7921_call = mod.get_global_var('func_7921')
func_7922_call = mutated_mod.get_global_var('func_7922')
call_11134 = func_7921_call()
call_11135 = func_7921_call()
output = relay.Tuple([call_11119,call_11134,])
output2 = relay.Tuple([call_11120,call_11135,])
func_11149 = relay.Function([], output)
mod['func_11149'] = func_11149
mod = relay.transform.InferType()(mod)
mutated_mod['func_11149'] = func_11149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11149_call = mutated_mod.get_global_var('func_11149')
call_11150 = func_11149_call()
output = call_11150
func_11151 = relay.Function([], output)
mutated_mod['func_11151'] = func_11151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6728_call = mod.get_global_var('func_6728')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_11154 = func_6728_call()
call_11155 = func_6728_call()
output = call_11154
output2 = call_11155
func_11163 = relay.Function([], output)
mod['func_11163'] = func_11163
mod = relay.transform.InferType()(mod)
mutated_mod['func_11163'] = func_11163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11163_call = mutated_mod.get_global_var('func_11163')
call_11164 = func_11163_call()
output = call_11164
func_11165 = relay.Function([], output)
mutated_mod['func_11165'] = func_11165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_11166 = func_1808_call()
call_11167 = func_1808_call()
func_4376_call = mod.get_global_var('func_4376')
func_4378_call = mutated_mod.get_global_var('func_4378')
var_11169 = relay.var("var_11169", dtype = "bool", shape = (540,))#candidate|11169|(540,)|var|bool
call_11168 = relay.TupleGetItem(func_4376_call(relay.reshape(var_11169.astype('bool'), [6, 6, 15])), 0)
call_11170 = relay.TupleGetItem(func_4378_call(relay.reshape(var_11169.astype('bool'), [6, 6, 15])), 0)
func_6658_call = mod.get_global_var('func_6658')
func_6660_call = mutated_mod.get_global_var('func_6660')
call_11174 = relay.TupleGetItem(func_6658_call(), 0)
call_11175 = relay.TupleGetItem(func_6660_call(), 0)
output = relay.Tuple([call_11166,call_11168,var_11169,call_11174,])
output2 = relay.Tuple([call_11167,call_11170,var_11169,call_11175,])
func_11191 = relay.Function([var_11169,], output)
mod['func_11191'] = func_11191
mod = relay.transform.InferType()(mod)
var_11192 = relay.var("var_11192", dtype = "bool", shape = (540,))#candidate|11192|(540,)|var|bool
output = func_11191(var_11192)
func_11193 = relay.Function([var_11192], output)
mutated_mod['func_11193'] = func_11193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_11195 = relay.TupleGetItem(func_4537_call(), 0)
call_11196 = relay.TupleGetItem(func_4538_call(), 0)
func_10120_call = mod.get_global_var('func_10120')
func_10121_call = mutated_mod.get_global_var('func_10121')
call_11240 = relay.TupleGetItem(func_10120_call(), 0)
call_11241 = relay.TupleGetItem(func_10121_call(), 0)
output = relay.Tuple([call_11195,call_11240,])
output2 = relay.Tuple([call_11196,call_11241,])
func_11253 = relay.Function([], output)
mod['func_11253'] = func_11253
mod = relay.transform.InferType()(mod)
output = func_11253()
func_11254 = relay.Function([], output)
mutated_mod['func_11254'] = func_11254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11274 = relay.var("var_11274", dtype = "uint16", shape = (1, 7, 9))#candidate|11274|(1, 7, 9)|var|uint16
var_11275 = relay.var("var_11275", dtype = "uint16", shape = (8, 7, 9))#candidate|11275|(8, 7, 9)|var|uint16
bop_11276 = relay.equal(var_11274.astype('bool'), var_11275.astype('bool')) # shape=(8, 7, 9)
output = relay.Tuple([bop_11276,])
output2 = relay.Tuple([bop_11276,])
func_11286 = relay.Function([var_11274,var_11275,], output)
mod['func_11286'] = func_11286
mod = relay.transform.InferType()(mod)
var_11287 = relay.var("var_11287", dtype = "uint16", shape = (1, 7, 9))#candidate|11287|(1, 7, 9)|var|uint16
var_11288 = relay.var("var_11288", dtype = "uint16", shape = (8, 7, 9))#candidate|11288|(8, 7, 9)|var|uint16
output = func_11286(var_11287,var_11288,)
func_11289 = relay.Function([var_11287,var_11288,], output)
mutated_mod['func_11289'] = func_11289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9705_call = mod.get_global_var('func_9705')
func_9707_call = mutated_mod.get_global_var('func_9707')
call_11312 = relay.TupleGetItem(func_9705_call(), 0)
call_11313 = relay.TupleGetItem(func_9707_call(), 0)
output = call_11312
output2 = call_11313
func_11314 = relay.Function([], output)
mod['func_11314'] = func_11314
mod = relay.transform.InferType()(mod)
mutated_mod['func_11314'] = func_11314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11314_call = mutated_mod.get_global_var('func_11314')
call_11315 = func_11314_call()
output = call_11315
func_11316 = relay.Function([], output)
mutated_mod['func_11316'] = func_11316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_11429 = relay.TupleGetItem(func_6784_call(), 0)
call_11430 = relay.TupleGetItem(func_6785_call(), 0)
output = relay.Tuple([call_11429,])
output2 = relay.Tuple([call_11430,])
func_11479 = relay.Function([], output)
mod['func_11479'] = func_11479
mod = relay.transform.InferType()(mod)
mutated_mod['func_11479'] = func_11479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11479_call = mutated_mod.get_global_var('func_11479')
call_11480 = func_11479_call()
output = call_11480
func_11481 = relay.Function([], output)
mutated_mod['func_11481'] = func_11481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_11506 = func_1821_call()
call_11507 = func_1821_call()
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_11521 = relay.TupleGetItem(func_1281_call(), 0)
call_11522 = relay.TupleGetItem(func_1282_call(), 0)
func_3516_call = mod.get_global_var('func_3516')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_11530 = relay.TupleGetItem(func_3516_call(), 1)
call_11531 = relay.TupleGetItem(func_3517_call(), 1)
func_6931_call = mod.get_global_var('func_6931')
func_6934_call = mutated_mod.get_global_var('func_6934')
call_11534 = relay.TupleGetItem(func_6931_call(relay.reshape(call_11506.astype('float64'), [182,])), 2)
call_11535 = relay.TupleGetItem(func_6934_call(relay.reshape(call_11506.astype('float64'), [182,])), 2)
output = relay.Tuple([call_11506,call_11521,call_11530,call_11534,])
output2 = relay.Tuple([call_11507,call_11522,call_11531,call_11535,])
func_11537 = relay.Function([], output)
mod['func_11537'] = func_11537
mod = relay.transform.InferType()(mod)
mutated_mod['func_11537'] = func_11537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11537_call = mutated_mod.get_global_var('func_11537')
call_11538 = func_11537_call()
output = call_11538
func_11539 = relay.Function([], output)
mutated_mod['func_11539'] = func_11539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10120_call = mod.get_global_var('func_10120')
func_10121_call = mutated_mod.get_global_var('func_10121')
call_11553 = relay.TupleGetItem(func_10120_call(), 0)
call_11554 = relay.TupleGetItem(func_10121_call(), 0)
var_11567 = relay.var("var_11567", dtype = "uint8", shape = (4, 15, 5))#candidate|11567|(4, 15, 5)|var|uint8
bop_11568 = relay.less_equal(call_11553.astype('bool'), relay.reshape(var_11567.astype('bool'), relay.shape_of(call_11553))) # shape=(4, 15, 5)
bop_11571 = relay.less_equal(call_11554.astype('bool'), relay.reshape(var_11567.astype('bool'), relay.shape_of(call_11554))) # shape=(4, 15, 5)
output = relay.Tuple([bop_11568,])
output2 = relay.Tuple([bop_11571,])
func_11582 = relay.Function([var_11567,], output)
mod['func_11582'] = func_11582
mod = relay.transform.InferType()(mod)
mutated_mod['func_11582'] = func_11582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11583 = relay.var("var_11583", dtype = "uint8", shape = (4, 15, 5))#candidate|11583|(4, 15, 5)|var|uint8
func_11582_call = mutated_mod.get_global_var('func_11582')
call_11584 = func_11582_call(var_11583)
output = call_11584
func_11585 = relay.Function([var_11583], output)
mutated_mod['func_11585'] = func_11585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mod.get_global_var('func_6508')
func_6510_call = mutated_mod.get_global_var('func_6510')
call_11625 = relay.TupleGetItem(func_6508_call(), 0)
call_11626 = relay.TupleGetItem(func_6510_call(), 0)
output = relay.Tuple([call_11625,])
output2 = relay.Tuple([call_11626,])
func_11632 = relay.Function([], output)
mod['func_11632'] = func_11632
mod = relay.transform.InferType()(mod)
mutated_mod['func_11632'] = func_11632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11632_call = mutated_mod.get_global_var('func_11632')
call_11633 = func_11632_call()
output = call_11633
func_11634 = relay.Function([], output)
mutated_mod['func_11634'] = func_11634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mod.get_global_var('func_6508')
func_6510_call = mutated_mod.get_global_var('func_6510')
call_11670 = relay.TupleGetItem(func_6508_call(), 0)
call_11671 = relay.TupleGetItem(func_6510_call(), 0)
output = relay.Tuple([call_11670,])
output2 = relay.Tuple([call_11671,])
func_11700 = relay.Function([], output)
mod['func_11700'] = func_11700
mod = relay.transform.InferType()(mod)
mutated_mod['func_11700'] = func_11700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11700_call = mutated_mod.get_global_var('func_11700')
call_11701 = func_11700_call()
output = call_11701
func_11702 = relay.Function([], output)
mutated_mod['func_11702'] = func_11702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8125_call = mod.get_global_var('func_8125')
func_8126_call = mutated_mod.get_global_var('func_8126')
call_11730 = relay.TupleGetItem(func_8125_call(), 0)
call_11731 = relay.TupleGetItem(func_8126_call(), 0)
output = relay.Tuple([call_11730,])
output2 = relay.Tuple([call_11731,])
func_11742 = relay.Function([], output)
mod['func_11742'] = func_11742
mod = relay.transform.InferType()(mod)
mutated_mod['func_11742'] = func_11742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11742_call = mutated_mod.get_global_var('func_11742')
call_11743 = func_11742_call()
output = call_11743
func_11744 = relay.Function([], output)
mutated_mod['func_11744'] = func_11744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3436_call = mutated_mod.get_global_var('func_3436')
call_11745 = relay.TupleGetItem(func_3434_call(), 2)
call_11746 = relay.TupleGetItem(func_3436_call(), 2)
func_4466_call = mod.get_global_var('func_4466')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_11753 = relay.TupleGetItem(func_4466_call(), 1)
call_11754 = relay.TupleGetItem(func_4467_call(), 1)
output = relay.Tuple([call_11745,call_11753,])
output2 = relay.Tuple([call_11746,call_11754,])
func_11767 = relay.Function([], output)
mod['func_11767'] = func_11767
mod = relay.transform.InferType()(mod)
mutated_mod['func_11767'] = func_11767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11767_call = mutated_mod.get_global_var('func_11767')
call_11768 = func_11767_call()
output = call_11768
func_11769 = relay.Function([], output)
mutated_mod['func_11769'] = func_11769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6728_call = mod.get_global_var('func_6728')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_11794 = func_6728_call()
call_11795 = func_6728_call()
output = relay.Tuple([call_11794,])
output2 = relay.Tuple([call_11795,])
func_11796 = relay.Function([], output)
mod['func_11796'] = func_11796
mod = relay.transform.InferType()(mod)
output = func_11796()
func_11797 = relay.Function([], output)
mutated_mod['func_11797'] = func_11797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_11809 = relay.TupleGetItem(func_8274_call(), 2)
call_11810 = relay.TupleGetItem(func_8276_call(), 2)
output = relay.Tuple([call_11809,])
output2 = relay.Tuple([call_11810,])
func_11828 = relay.Function([], output)
mod['func_11828'] = func_11828
mod = relay.transform.InferType()(mod)
output = func_11828()
func_11829 = relay.Function([], output)
mutated_mod['func_11829'] = func_11829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7710_call = mod.get_global_var('func_7710')
func_7712_call = mutated_mod.get_global_var('func_7712')
call_11853 = func_7710_call()
call_11854 = func_7710_call()
func_8499_call = mod.get_global_var('func_8499')
func_8501_call = mutated_mod.get_global_var('func_8501')
call_11862 = relay.TupleGetItem(func_8499_call(), 2)
call_11863 = relay.TupleGetItem(func_8501_call(), 2)
output = relay.Tuple([call_11853,call_11862,])
output2 = relay.Tuple([call_11854,call_11863,])
func_11871 = relay.Function([], output)
mod['func_11871'] = func_11871
mod = relay.transform.InferType()(mod)
mutated_mod['func_11871'] = func_11871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11871_call = mutated_mod.get_global_var('func_11871')
call_11872 = func_11871_call()
output = call_11872
func_11873 = relay.Function([], output)
mutated_mod['func_11873'] = func_11873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
call_11903 = relay.TupleGetItem(func_2155_call(), 0)
call_11904 = relay.TupleGetItem(func_2157_call(), 0)
output = call_11903
output2 = call_11904
func_11911 = relay.Function([], output)
mod['func_11911'] = func_11911
mod = relay.transform.InferType()(mod)
output = func_11911()
func_11912 = relay.Function([], output)
mutated_mod['func_11912'] = func_11912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11919 = relay.var("var_11919", dtype = "uint8", shape = (7, 8, 9))#candidate|11919|(7, 8, 9)|var|uint8
var_11920 = relay.var("var_11920", dtype = "uint8", shape = (7, 8, 9))#candidate|11920|(7, 8, 9)|var|uint8
bop_11921 = relay.logical_xor(var_11919.astype('uint8'), relay.reshape(var_11920.astype('uint8'), relay.shape_of(var_11919))) # shape=(7, 8, 9)
var_11931 = relay.var("var_11931", dtype = "uint8", shape = (7, 8, 9))#candidate|11931|(7, 8, 9)|var|uint8
bop_11932 = relay.logical_or(var_11920.astype('bool'), relay.reshape(var_11931.astype('bool'), relay.shape_of(var_11920))) # shape=(7, 8, 9)
output = relay.Tuple([bop_11921,bop_11932,])
output2 = relay.Tuple([bop_11921,bop_11932,])
func_11937 = relay.Function([var_11919,var_11920,var_11931,], output)
mod['func_11937'] = func_11937
mod = relay.transform.InferType()(mod)
mutated_mod['func_11937'] = func_11937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11937_call = mutated_mod.get_global_var('func_11937')
var_11939 = relay.var("var_11939", dtype = "uint8", shape = (7, 8, 9))#candidate|11939|(7, 8, 9)|var|uint8
var_11940 = relay.var("var_11940", dtype = "uint8", shape = (7, 8, 9))#candidate|11940|(7, 8, 9)|var|uint8
var_11941 = relay.var("var_11941", dtype = "uint8", shape = (7, 8, 9))#candidate|11941|(7, 8, 9)|var|uint8
call_11938 = func_11937_call(var_11939,var_11940,var_11941,)
output = call_11938
func_11942 = relay.Function([var_11939,var_11940,var_11941,], output)
mutated_mod['func_11942'] = func_11942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_11944 = func_7529_call()
call_11945 = func_7529_call()
func_3864_call = mod.get_global_var('func_3864')
func_3868_call = mutated_mod.get_global_var('func_3868')
var_11950 = relay.var("var_11950", dtype = "uint64", shape = (1, 1344))#candidate|11950|(1, 1344)|var|uint64
call_11949 = func_3864_call(relay.reshape(var_11950.astype('uint64'), [16, 14, 6]), relay.reshape(var_11950.astype('uint64'), [16, 14, 6]), )
call_11951 = func_3864_call(relay.reshape(var_11950.astype('uint64'), [16, 14, 6]), relay.reshape(var_11950.astype('uint64'), [16, 14, 6]), )
output = relay.Tuple([call_11944,call_11949,var_11950,])
output2 = relay.Tuple([call_11945,call_11951,var_11950,])
func_11954 = relay.Function([var_11950,], output)
mod['func_11954'] = func_11954
mod = relay.transform.InferType()(mod)
var_11955 = relay.var("var_11955", dtype = "uint64", shape = (1, 1344))#candidate|11955|(1, 1344)|var|uint64
output = func_11954(var_11955)
func_11956 = relay.Function([var_11955], output)
mutated_mod['func_11956'] = func_11956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5963_call = mod.get_global_var('func_5963')
func_5965_call = mutated_mod.get_global_var('func_5965')
call_11968 = relay.TupleGetItem(func_5963_call(), 1)
call_11969 = relay.TupleGetItem(func_5965_call(), 1)
func_3516_call = mod.get_global_var('func_3516')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_11970 = relay.TupleGetItem(func_3516_call(), 0)
call_11971 = relay.TupleGetItem(func_3517_call(), 0)
output = relay.Tuple([call_11968,call_11970,])
output2 = relay.Tuple([call_11969,call_11971,])
func_11974 = relay.Function([], output)
mod['func_11974'] = func_11974
mod = relay.transform.InferType()(mod)
mutated_mod['func_11974'] = func_11974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11974_call = mutated_mod.get_global_var('func_11974')
call_11975 = func_11974_call()
output = call_11975
func_11976 = relay.Function([], output)
mutated_mod['func_11976'] = func_11976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7710_call = mod.get_global_var('func_7710')
func_7712_call = mutated_mod.get_global_var('func_7712')
call_12041 = func_7710_call()
call_12042 = func_7710_call()
func_5087_call = mod.get_global_var('func_5087')
func_5088_call = mutated_mod.get_global_var('func_5088')
call_12044 = func_5087_call()
call_12045 = func_5087_call()
func_11796_call = mod.get_global_var('func_11796')
func_11797_call = mutated_mod.get_global_var('func_11797')
call_12051 = relay.TupleGetItem(func_11796_call(), 0)
call_12052 = relay.TupleGetItem(func_11797_call(), 0)
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_12056 = relay.TupleGetItem(func_6836_call(), 0)
call_12057 = relay.TupleGetItem(func_6837_call(), 0)
func_11632_call = mod.get_global_var('func_11632')
func_11634_call = mutated_mod.get_global_var('func_11634')
call_12061 = relay.TupleGetItem(func_11632_call(), 0)
call_12062 = relay.TupleGetItem(func_11634_call(), 0)
func_8161_call = mod.get_global_var('func_8161')
func_8163_call = mutated_mod.get_global_var('func_8163')
call_12087 = relay.TupleGetItem(func_8161_call(), 0)
call_12088 = relay.TupleGetItem(func_8163_call(), 0)
func_6658_call = mod.get_global_var('func_6658')
func_6660_call = mutated_mod.get_global_var('func_6660')
call_12098 = relay.TupleGetItem(func_6658_call(), 0)
call_12099 = relay.TupleGetItem(func_6660_call(), 0)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_12107 = relay.TupleGetItem(func_2005_call(), 4)
call_12108 = relay.TupleGetItem(func_2007_call(), 4)
func_11286_call = mod.get_global_var('func_11286')
func_11289_call = mutated_mod.get_global_var('func_11289')
var_12111 = relay.var("var_12111", dtype = "uint16", shape = (21, 3))#candidate|12111|(21, 3)|var|uint16
var_12112 = relay.var("var_12112", dtype = "uint16", shape = (504,))#candidate|12112|(504,)|var|uint16
call_12110 = relay.TupleGetItem(func_11286_call(relay.reshape(var_12111.astype('uint16'), [1, 7, 9]), relay.reshape(var_12112.astype('uint16'), [8, 7, 9]), ), 0)
call_12113 = relay.TupleGetItem(func_11289_call(relay.reshape(var_12111.astype('uint16'), [1, 7, 9]), relay.reshape(var_12112.astype('uint16'), [8, 7, 9]), ), 0)
func_405_call = mod.get_global_var('func_405')
func_408_call = mutated_mod.get_global_var('func_408')
call_12127 = relay.TupleGetItem(func_405_call(relay.reshape(call_12107.astype('float64'), [1560,])), 2)
call_12128 = relay.TupleGetItem(func_408_call(relay.reshape(call_12107.astype('float64'), [1560,])), 2)
uop_12130 = relay.sigmoid(call_12110.astype('float64')) # shape=(8, 7, 9)
uop_12132 = relay.sigmoid(call_12113.astype('float64')) # shape=(8, 7, 9)
output = relay.Tuple([call_12041,call_12044,call_12051,call_12056,call_12061,call_12087,call_12098,call_12107,var_12111,var_12112,call_12127,uop_12130,])
output2 = relay.Tuple([call_12042,call_12045,call_12052,call_12057,call_12062,call_12088,call_12099,call_12108,var_12111,var_12112,call_12128,uop_12132,])
F = relay.Function([var_12111,var_12112,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12111,var_12112,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

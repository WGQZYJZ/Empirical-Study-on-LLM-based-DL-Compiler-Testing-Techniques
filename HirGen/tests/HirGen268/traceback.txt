==========mod==========
#[version = "0.0.5"]
def @func_2938(%var_2915: Tensor[(15, 4, 12), float32]) -> (Tensor[(15, 4, 12), bool], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 4, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 4, 12), bool] */;
  %1 = shape_of(%var_2915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_2915, dtype="bool") /* ty=Tensor[(15, 4, 12), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %5 = reshape(%4, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %6 = not_equal(%2, %3) /* ty=Tensor[(15, 4, 12), bool] */;
  %7 = @func_783(%5) /* ty=Tensor[(11, 11, 4), uint16] */;
  (%6, %7, meta[relay.Constant][1] /* ty=Tensor[(484), uint16] */)
}

def @func_2488(%var_2456: Tensor[(4, 5, 14), uint64], %var_2471: int16, %var_2479: Tensor[(4, 5, 14), uint64]) -> (Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) {
  %8 = cast(%var_2456, dtype="bool") /* ty=Tensor[(4, 5, 14), bool] */;
  %9 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="bool") /* ty=Tensor[(4, 5, 14), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = cast(%var_2471, dtype="int16") /* ty=int16 */;
  %13 = cast(meta[relay.Constant][3] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %14 = reshape(%12, newshape=[]) /* ty=int16 */;
  %15 = reshape(%13, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %16 = cast(%var_2479, dtype="uint8") /* ty=Tensor[(4, 5, 14), uint8] */;
  %17 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="uint8") /* ty=Tensor[(4, 5, 14), uint8] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %20 = less(%10, %11) /* ty=Tensor[(4, 5, 14), bool] */;
  %21 = @func_1112(%14, %15) /* ty=Tensor[(12, 12, 16), int16] */;
  %22 = add(%18, %19) /* ty=Tensor[(4, 5, 14), uint8] */;
  (%20, %21, %var_2471, meta[relay.Constant][3] /* ty=Tensor[(2304), int16] */, %22)
}

def @func_8440() -> (Tensor[(6, 14, 16), bool],) {
  %23 = @func_7871() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %24 = %23.0;
  (%24,)
}

def @func_7710(%var_7687: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) {
  %25 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %26 = cast(%var_7687, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 14, 16), bool] */, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %31 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%25, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %34 = power(%28, %29) /* ty=Tensor[(6, 14, 16), float32] */;
  %35 = floor_mod(%32, %33) /* ty=Tensor[(6, 14, 16), float64] */;
  (%34, %35)
}

def @func_8923(%var_8864: Tensor[(1, 15, 4), float64], %var_8865: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float64], Tensor[(10, 2, 16), bool], Tensor[(320), int64], Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(7, 15, 4), float64]) {
  %36 = cast(%var_8864, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
  %37 = cast(%var_8865, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
  %39 = reshape(%38, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
  %40 = @func_2447(%39) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %43 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %44 = reshape(%41, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), float64] */;
  %45 = reshape(%42, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
  %46 = reshape(%43, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %47 = @func_4768(%44, %45, %46) /* ty=(Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) */;
  %48 = cast(%var_8865, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %49 = divide(%36, %37) /* ty=Tensor[(7, 15, 4), float64] */;
  %50 = %40.1;
  %51 = %47.4;
  %52 = atanh(%48) /* ty=Tensor[(7, 15, 4), float64] */;
  (%49, %50, meta[relay.Constant][5] /* ty=Tensor[(320), int64] */, %51, meta[relay.Constant][6] /* ty=Tensor[(468), float64] */, meta[relay.Constant][7] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, %52)
}

def @func_2788(%var_2726: Tensor[(3, 2, 10), float32], %var_2730: Tensor[(1, 468), int16], %var_2731: Tensor[(864), float64], %var_2739: Tensor[(567, 2), float64], %var_2757: Tensor[(3, 2, 10), float32], %var_2763: Tensor[(6), float64], %var_2776: int16) -> (Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) {
  %53 = cast(%var_2739, dtype="float64") /* ty=Tensor[(567, 2), float64] */;
  %54 = cast(%var_2731, dtype="float64") /* ty=Tensor[(864), float64] */;
  %55 = reshape(%53, newshape=[14, 9, 9]) /* ty=Tensor[(14, 9, 9), float64] */;
  %56 = reshape(%54, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %57 = @func_2597(%55, %56) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) */;
  %58 = cast(%var_2726, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
  %59 = log2(%58) /* ty=Tensor[(3, 2, 10), float32] */;
  %60 = cast(%var_2757, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = cast(%var_2763, dtype="float64") /* ty=Tensor[(6), float64] */;
  %65 = reshape(%64, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %66 = @func_1655(%65) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %67 = cast(%var_2776, dtype="int16") /* ty=int16 */;
  %68 = cast(meta[relay.Constant][9] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %69 = reshape(%67, newshape=[]) /* ty=int16 */;
  %70 = reshape(%68, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %71 = cast(%var_2730, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %72 = cast(%var_2731, dtype="float64") /* ty=Tensor[(864), float64] */;
  %73 = reshape(%71, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %74 = reshape(%72, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %75 = @func_648(%73, %74) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %76 = %75.5;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %78 = %57.3;
  %79 = less_equal(%62, %63) /* ty=Tensor[(3, 2, 10), bool] */;
  %80 = %66.0;
  %81 = @func_1112(%69, %70) /* ty=Tensor[(12, 12, 16), int16] */;
  %82 = sigmoid(%77) /* ty=Tensor[(12, 9, 8), float32] */;
  (%var_2730, %var_2731, %78, %var_2739, %79, %80, %var_2763, %81, %var_2776, meta[relay.Constant][9] /* ty=Tensor[(2304), int16] */, %82)
}

def @func_6775(%var_6730: Tensor[(2, 15), uint32], %var_6731: Tensor[(2, 15), uint32]) -> Tensor[(2, 15), bool] {
  %83 = cast(%var_6731, dtype="bool") /* ty=Tensor[(2, 15), bool] */;
  %84 = shape_of(%var_6730, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%var_6730, dtype="bool") /* ty=Tensor[(2, 15), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%85, %86) /* ty=Tensor[(2, 15), bool] */
}

def @func_1368(%var_1340: Tensor[(10, 13, 5), float32]) -> (Tensor[(10, 13, 5), bool], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(10, 13, 5), float32]) {
  %87 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
  %88 = acosh(%87) /* ty=Tensor[(10, 13, 5), float32] */;
  %89 = cast(%var_1340, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%88, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %93 = cast(meta[relay.Constant][11] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %94 = reshape(%93, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %95 = @func_177(%94) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %96 = cast(%88, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
  %97 = sinh(%96) /* ty=Tensor[(10, 13, 5), float32] */;
  %98 = cast(%var_1340, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %102 = not_equal(%91, %92) /* ty=Tensor[(10, 13, 5), bool] */;
  %103 = %95.0;
  %104 = floor_mod(%100, %101) /* ty=Tensor[(10, 13, 5), float32] */;
  (%102, %103, meta[relay.Constant][11] /* ty=Tensor[(792), int64] */, %104)
}

def @func_7116(%var_7073: Tensor[(12, 7, 12), int8], %var_7074: Tensor[(12, 7, 12), int8], %var_7079: Tensor[(392), uint32], %var_7080: Tensor[(2304), int16], %var_7081: Tensor[(320), int64]) -> (Tensor[(12, 7, 12), int8], Tensor[(12, 9, 8), float64], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(320), int64]) {
  %105 = cast(%var_7074, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %106 = shape_of(%var_7073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_7073, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %109 = cast(%var_7079, dtype="uint32") /* ty=Tensor[(392), uint32] */;
  %110 = cast(%var_7080, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %111 = cast(%var_7081, dtype="int64") /* ty=Tensor[(320), int64] */;
  %112 = reshape(%109, newshape=[14, 14, 2]) /* ty=Tensor[(14, 14, 2), uint32] */;
  %113 = reshape(%110, newshape=[2304, 1]) /* ty=Tensor[(2304, 1), int16] */;
  %114 = reshape(%111, newshape=[80, 4]) /* ty=Tensor[(80, 4), int64] */;
  %115 = @func_1954(%112, %113, %114) /* ty=(Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) */;
  %116 = subtract(%107, %108) /* ty=Tensor[(12, 7, 12), int8] */;
  %117 = %115.1;
  (%116, %117, %var_7079, %var_7080, %var_7081)
}

def @func_9959(%var_9902: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(6, 14, 16), int8], Tensor[(6, 14, 16), bool]) {
  %118 = cast(%var_9902, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %119 = reshape(%118, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %120 = @func_8849(%119) /* ty=(Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) */;
  %121 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %122 = %121.0;
  %123 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 14, 16), bool] */, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %127 = @func_8321() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %128 = %120.2;
  %129 = bitwise_or(%125, %126) /* ty=Tensor[(6, 14, 16), int8] */;
  %130 = %127.0;
  (%128, %var_9902, %129, %130)
}

def @func_7591(%var_7543: Tensor[(216), float32], %var_7546: Tensor[(455, 1), float64], %var_7569: Tensor[(1350), float64], %var_7571: Tensor[(455, 6), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(1, 156), float32], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(455, 1), float32], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(6, 15, 15), float64], Tensor[(1350), float64], Tensor[(455, 6), float32]) {
  %131 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %133 = cast(%var_7543, dtype="float32") /* ty=Tensor[(216), float32] */;
  %134 = cast(%var_7543, dtype="float32") /* ty=Tensor[(216), float32] */;
  %135 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %136 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 156), float32] */, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %137 = cast(%var_7546, dtype="float64") /* ty=Tensor[(455, 1), float64] */;
  %138 = reshape(%133, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %139 = reshape(%134, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %140 = reshape(%135, newshape=[]) /* ty=uint16 */;
  %141 = reshape(%136, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %142 = reshape(%137, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %143 = @func_5181(%138, %139, %140, %141, %142) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
  %144 = cast(meta[relay.Constant][15] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %145 = reshape(%144, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %146 = @func_177(%145) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %147 = cast(%var_7546, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %148 = cast(meta[relay.Constant][16] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
  %149 = reshape(%148, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %150 = @func_1081(%149) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %151 = cast(%var_7569, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %152 = reshape(%151, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %153 = @func_3506(%152) /* ty=(Tensor[(6, 15, 15), float64],) */;
  %154 = cast(%var_7546, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %155 = cast(%var_7571, dtype="float32") /* ty=Tensor[(455, 6), float32] */;
  %156 = log2(%132) /* ty=Tensor[(6, 14, 16), float32] */;
  %157 = %143.4;
  %158 = %146.0;
  %159 = erf(%147) /* ty=Tensor[(455, 1), float32] */;
  %160 = %150.1;
  %161 = %153.0;
  %162 = divide(%154, %155) /* ty=Tensor[(455, 6), float32] */;
  (%156, %157, %var_7543, meta[relay.Constant][13] /* ty=uint16 */, meta[relay.Constant][14] /* ty=Tensor[(1, 156), float32] */, %158, meta[relay.Constant][15] /* ty=Tensor[(792), int64] */, %159, %160, meta[relay.Constant][16] /* ty=Tensor[(320), int64] */, %161, %var_7569, %162)
}

def @func_9072() -> (Tensor[(6, 14, 16), bool],) {
  %163 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
  (%163,)
}

def @func_9520(%var_9506: Tensor[(2, 8, 7), float32]) -> (Tensor[(2, 8, 7), float32], Tensor[(12, 9, 8), float64], Tensor[(864), float64]) {
  %164 = cast(%var_9506, dtype="float32") /* ty=Tensor[(2, 8, 7), float32] */;
  %165 = cast(meta[relay.Constant][17] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %166 = reshape(%165, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %167 = rsqrt(%164) /* ty=Tensor[(2, 8, 7), float32] */;
  %168 = @func_536(%166) /* ty=Tensor[(12, 9, 8), float64] */;
  (%167, %168, meta[relay.Constant][17] /* ty=Tensor[(864), float64] */)
}

def @func_8091(%var_8068: Tensor[(14, 6, 11), float32]) -> Tensor[(14, 6, 11), bool] {
  %169 = cast(%var_8068, dtype="float32") /* ty=Tensor[(14, 6, 11), float32] */;
  %170 = sqrt(%169) /* ty=Tensor[(14, 6, 11), float32] */;
  %171 = cast(%170, dtype="bool") /* ty=Tensor[(14, 6, 11), bool] */;
  %172 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_8068, dtype="bool") /* ty=Tensor[(14, 6, 11), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%173, %174) /* ty=Tensor[(14, 6, 11), bool] */
}

def @func_1239(%var_1230: Tensor[(484), uint16]) -> (Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
  %175 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 8, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %176 = cast(%var_1230, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %177 = reshape(%176, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %178 = atanh(%175) /* ty=Tensor[(7, 8, 13), float64] */;
  %179 = @func_783(%177) /* ty=Tensor[(11, 11, 4), uint16] */;
  (%178, %179, %var_1230)
}

def @func_3947(%var_3937: Tensor[(2, 5, 4), uint8]) -> (Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
  %180 = cast(meta[relay.Constant][19] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %181 = cast(%var_3937, dtype="uint8") /* ty=Tensor[(2, 5, 4), uint8] */;
  %182 = cast(meta[relay.Constant][20] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %183 = reshape(%182, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %184 = @func_1655(%183) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %185 = maximum(%180, %181) /* ty=Tensor[(2, 5, 4), uint8] */;
  %186 = %184.0;
  (%185, %186, meta[relay.Constant][20] /* ty=Tensor[(6), float64] */)
}

def @func_4768(%var_4736: Tensor[(6, 6, 13), float64], %var_4755: Tensor[(1134), float64], %var_4756: Tensor[(6), float64]) -> (Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) {
  %187 = cast(%var_4736, dtype="float64") /* ty=Tensor[(6, 6, 13), float64] */;
  %188 = cast(%var_4736, dtype="float64") /* ty=Tensor[(6, 6, 13), float64] */;
  %189 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %190 = exp(%187) /* ty=Tensor[(6, 6, 13), float64] */;
  %191 = cast(%190, dtype="int16") /* ty=Tensor[(6, 6, 13), int16] */;
  %192 = cast(meta[relay.Constant][22] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %193 = cast(%var_4755, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %194 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %195 = cast(%var_4756, dtype="float64") /* ty=Tensor[(6), float64] */;
  %196 = cast(meta[relay.Constant][23] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %197 = reshape(%189, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %198 = reshape(%191, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %199 = reshape(%192, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %200 = reshape(%193, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
  %201 = reshape(%194, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %202 = reshape(%195, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %203 = reshape(%196, newshape=[]) /* ty=int16 */;
  %204 = @func_2788(%197, %198, %199, %200, %201, %202, %203) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
  %205 = sinh(%188) /* ty=Tensor[(6, 6, 13), float64] */;
  %206 = %204.1;
  (%190, %205, %206, meta[relay.Constant][21] /* ty=Tensor[(60), float32] */, meta[relay.Constant][22] /* ty=Tensor[(864), float64] */, %var_4755, %var_4756, meta[relay.Constant][23] /* ty=int16 */)
}

def @func_8312() -> Tensor[(6, 14, 16), bool] {
  %207 = @func_7975() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %207.0
}

def @func_4349(%var_4332: Tensor[(12, 13), float32], %var_4333: Tensor[(12, 13), float32], %var_4341: Tensor[(455), float64], %var_4343: Tensor[(288), int8]) -> (Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) {
  %208 = cast(%var_4333, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
  %209 = shape_of(%var_4332, dtype="int32") /* ty=Tensor[(2), int32] */;
  %210 = cast(%var_4332, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %212 = cast(meta[relay.Constant][24] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %213 = cast(meta[relay.Constant][25] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %214 = cast(%var_4341, dtype="float64") /* ty=Tensor[(455), float64] */;
  %215 = cast(meta[relay.Constant][26] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
  %216 = cast(%var_4343, dtype="int8") /* ty=Tensor[(288), int8] */;
  %217 = reshape(%212, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
  %218 = reshape(%213, newshape=[]) /* ty=int16 */;
  %219 = reshape(%214, newshape=[5, 13, 7]) /* ty=Tensor[(5, 13, 7), float64] */;
  %220 = reshape(%215, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %221 = reshape(%216, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %222 = @func_3385(%217, %218, %219, %220, %221) /* ty=(Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) */;
  %223 = power(%210, %211) /* ty=Tensor[(12, 13), float32] */;
  %224 = %222.2;
  (%223, %224, meta[relay.Constant][24] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][25] /* ty=int16 */, %var_4341, meta[relay.Constant][26] /* ty=Tensor[(320), int64] */, %var_4343)
}

def @func_9352(%var_9330: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), uint8],) {
  %225 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %226 = %225.0;
  %227 = cast(%var_9330, dtype="uint8") /* ty=Tensor[(6, 14, 16), uint8] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="uint8") /* ty=Tensor[(6, 14, 16), uint8] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %231 = add(%229, %230) /* ty=Tensor[(6, 14, 16), uint8] */;
  (%231,)
}

def @func_2597(%var_2558: Tensor[(14, 9, 9), float64], %var_2563: Tensor[(864), float64]) -> (Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) {
  %232 = cast(meta[relay.Constant][27] /* ty=Tensor[(78, 6), int16] */, dtype="int16") /* ty=Tensor[(78, 6), int16] */;
  %233 = cast(%var_2563, dtype="float64") /* ty=Tensor[(864), float64] */;
  %234 = reshape(%232, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %235 = reshape(%233, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %236 = @func_648(%234, %235) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %237 = cast(meta[relay.Constant][28] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
  %238 = reshape(%237, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %239 = @func_1081(%238) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %240 = %236.6;
  %241 = cast(%240, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
  %242 = reshape(%241, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %243 = @func_177(%242) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %244 = cast(%var_2558, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %245 = cosh(%244) /* ty=Tensor[(14, 9, 9), float64] */;
  %246 = cast(%var_2558, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %250 = floor_mod(%248, %249) /* ty=Tensor[(14, 9, 9), float64] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %252 = %239.2;
  %253 = %243.0;
  %254 = log2(%251) /* ty=Tensor[(14, 9, 9), float64] */;
  (%240, meta[relay.Constant][27] /* ty=Tensor[(78, 6), int16] */, %var_2563, %252, meta[relay.Constant][28] /* ty=Tensor[(320), int64] */, %253, %254)
}

def @func_8677(%var_8618: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(6, 14, 16), bool], Tensor[(1, 6, 1), float64], Tensor[(1200), float64], Tensor[(6, 14, 16), float64]) {
  %255 = cast(%var_8618, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %256 = reshape(%255, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %257 = @func_1239(%256) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %258 = cast(meta[relay.Constant][29] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %259 = %257.1;
  %260 = cast(%259, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
  %261 = reshape(%258, newshape=[12, 10, 10]) /* ty=Tensor[(12, 10, 10), float64] */;
  %262 = reshape(%260, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %263 = @func_6148(%261, %262) /* ty=(Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) */;
  %264 = @func_8312() /* ty=Tensor[(6, 14, 16), bool] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %266 = log(%265) /* ty=Tensor[(6, 14, 16), float32] */;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %268 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
  %269 = %263.2;
  %270 = sigmoid(%267) /* ty=Tensor[(6, 14, 16), float64] */;
  (%259, %var_8618, %268, %269, meta[relay.Constant][29] /* ty=Tensor[(1200), float64] */, %270)
}

def @func_8169(%var_8146: Tensor[(3, 16, 16), float32], %var_8147: Tensor[(3, 16, 16), float32], %var_8153: Tensor[(280), uint64], %var_8154: int16, %var_8161: Tensor[(540), float64]) -> (Tensor[(3, 16, 16), float32], Tensor[(2304), int16], Tensor[(280), uint64], int16, Tensor[(6, 14, 16), float32], Tensor[(1, 1344), bool], Tensor[(15, 4, 9), float64], Tensor[(540), float64]) {
  %271 = cast(%var_8147, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %272 = shape_of(%var_8146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_8146, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %275 = cast(%var_8153, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %276 = cast(%var_8154, dtype="int16") /* ty=int16 */;
  %277 = cast(%var_8153, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %278 = reshape(%275, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %279 = reshape(%276, newshape=[]) /* ty=int16 */;
  %280 = reshape(%277, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %281 = @func_2488(%278, %279, %280) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
  %282 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 1344), bool] */, dtype="bool") /* ty=Tensor[(1, 1344), bool] */;
  %283 = reshape(%282, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), bool] */;
  %284 = @func_7710(%283) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) */;
  %285 = cast(%var_8154, dtype="float64") /* ty=float64 */;
  %286 = cast(%var_8161, dtype="float64") /* ty=Tensor[(540), float64] */;
  %287 = reshape(%285, newshape=[]) /* ty=float64 */;
  %288 = reshape(%286, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float64] */;
  %289 = floor_mod(%273, %274) /* ty=Tensor[(3, 16, 16), float32] */;
  %290 = %281.3;
  %291 = %284.0;
  %292 = @func_5891(%287, %288) /* ty=Tensor[(15, 4, 9), float64] */;
  (%289, %290, %var_8153, %var_8154, %291, meta[relay.Constant][30] /* ty=Tensor[(1, 1344), bool] */, %292, %var_8161)
}

def @func_8752() -> (Tensor[(6, 14, 16), bool],) {
  %293 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %294 = %293.0;
  (%294,)
}

def @func_5334(%var_5318: Tensor[(7, 6, 5), float32], %var_5332: Tensor[(1350), float64]) -> (Tensor[(7, 6, 5), float32], Tensor[(6, 15, 15), float64], Tensor[(1350), float64]) {
  %295 = cast(%var_5318, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %296 = cast(%var_5332, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %297 = reshape(%296, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
  %298 = @func_3506(%297) /* ty=(Tensor[(6, 15, 15), float64],) */;
  %299 = log10(%295) /* ty=Tensor[(7, 6, 5), float32] */;
  %300 = %298.0;
  (%299, %300, %var_5332)
}

def @func_7436(%var_7411: Tensor[(2, 16, 4), int16], %var_7412: Tensor[(2, 16, 4), int16]) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), float32], Tensor[(16, 9, 16), float64], Tensor[(2304), float64]) {
  %301 = cast(%var_7412, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %302 = shape_of(%var_7411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%var_7411, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %305 = cast(%var_7411, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
  %306 = cast(meta[relay.Constant][31] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %307 = reshape(%306, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
  %308 = @func_2105(%307) /* ty=(Tensor[(16, 9, 16), float64],) */;
  %309 = less_equal(%303, %304) /* ty=Tensor[(2, 16, 4), bool] */;
  %310 = sqrt(%305) /* ty=Tensor[(2, 16, 4), float32] */;
  %311 = %308.0;
  (%309, %310, %311, meta[relay.Constant][31] /* ty=Tensor[(2304), float64] */)
}

def @func_6577(%var_6559: Tensor[(8, 13, 3), float32], %var_6575: Tensor[(6), float64]) -> (Tensor[(8, 13, 3), float32], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
  %312 = cast(%var_6559, dtype="float32") /* ty=Tensor[(8, 13, 3), float32] */;
  %313 = cast(%var_6575, dtype="float64") /* ty=Tensor[(6), float64] */;
  %314 = reshape(%313, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %315 = @func_1655(%314) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %316 = sin(%312) /* ty=Tensor[(8, 13, 3), float32] */;
  %317 = %315.0;
  (%316, %317, %var_6575)
}

def @func_8544(%var_8536: Tensor[(216), float32], %var_8538: Tensor[(156), float32]) -> (Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) {
  %318 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 225), int64] */, dtype="int64") /* ty=Tensor[(9, 225), int64] */;
  %319 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 225), int64] */, dtype="int64") /* ty=Tensor[(9, 225), int64] */;
  %320 = reshape(%318, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), int64] */;
  %321 = reshape(%319, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), int64] */;
  %322 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 225), int64] */, dtype="float32") /* ty=Tensor[(9, 225), float32] */;
  %323 = cast(%var_8536, dtype="float32") /* ty=Tensor[(216), float32] */;
  %324 = cast(%var_8536, dtype="float32") /* ty=Tensor[(216), float32] */;
  %325 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %326 = cast(%var_8538, dtype="float32") /* ty=Tensor[(156), float32] */;
  %327 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 455), float64] */, dtype="float64") /* ty=Tensor[(1, 455), float64] */;
  %328 = reshape(%323, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %329 = reshape(%324, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %330 = reshape(%325, newshape=[]) /* ty=uint16 */;
  %331 = reshape(%326, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %332 = reshape(%327, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %333 = @func_5181(%328, %329, %330, %331, %332) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
  %334 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %335 = @func_5562(%320, %321) /* ty=Tensor[(15, 15, 9), int64] */;
  %336 = sigmoid(%322) /* ty=Tensor[(9, 225), float32] */;
  %337 = %333.4;
  (%334, %335, %336, %337, %var_8536, meta[relay.Constant][33] /* ty=uint16 */, %var_8538, meta[relay.Constant][34] /* ty=Tensor[(1, 455), float64] */)
}

def @func_8582(%var_8577: Tensor[(12, 4, 6), uint32], %var_8578: Tensor[(12, 4, 6), uint32]) -> Tensor[(12, 4, 6), uint32] {
  %338 = cast(%var_8578, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
  %339 = shape_of(%var_8577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%var_8577, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%340, %341) /* ty=Tensor[(12, 4, 6), uint32] */
}

def @func_9103() -> Tensor[(8, 10, 9), float64] {
  %342 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 10, 9), float64] */;
  acos(%342) /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_9692(%var_9647: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool], Tensor[(156), float32], Tensor[(216), float32], Tensor[(156, 1), float32]) {
  %343 = @func_7871() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %344 = %343.0;
  %345 = cast(%var_9647, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%344, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = @func_9072() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %350 = cast(meta[relay.Constant][36] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %351 = cast(meta[relay.Constant][37] /* ty=Tensor[(156, 1), float32] */, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %352 = reshape(%350, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %353 = reshape(%351, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %354 = @func_8544(%352, %353) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) */;
  %355 = less_equal(%347, %348) /* ty=Tensor[(6, 14, 16), bool] */;
  %356 = %349.0;
  %357 = %354.6;
  (%355, %356, %357, meta[relay.Constant][36] /* ty=Tensor[(216), float32] */, meta[relay.Constant][37] /* ty=Tensor[(156, 1), float32] */)
}

def @func_8321() -> (Tensor[(6, 14, 16), bool],) {
  %358 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  (%358,)
}

def @func_7975() -> (Tensor[(6, 14, 16), bool],) {
  %359 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %360 = %359.0;
  (%360,)
}

def @func_783(%var_771: Tensor[(11, 11, 4), uint16]) -> Tensor[(11, 11, 4), uint16] {
  %361 = cast(%var_771, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
  %362 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(11, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%363, %364) /* ty=Tensor[(11, 11, 4), uint16] */
}

def @func_1081(%var_1034: Tensor[(10, 2, 16), int64]) -> (Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) {
  %365 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 2, 16), int64] */, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %366 = shape_of(%var_1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_1034, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %369 = greater(%367, %368) /* ty=Tensor[(10, 2, 16), bool] */;
  %370 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 2, 16), int64] */, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = cast(meta[relay.Constant][40] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %375 = cast(meta[relay.Constant][41] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %376 = reshape(%374, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %377 = reshape(%375, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %378 = @func_648(%376, %377) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %379 = less(%372, %373) /* ty=Tensor[(10, 2, 16), bool] */;
  %380 = %378.1;
  (%379, %380, meta[relay.Constant][40] /* ty=Tensor[(468), int16] */, meta[relay.Constant][41] /* ty=Tensor[(864), float64] */)
}

def @func_9994() -> (Tensor[(6, 14, 16), bool],) {
  %381 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  (%381,)
}

def @func_177(%var_167: Tensor[(11, 6, 12), int64]) -> (Tensor[(11, 6, 12), bool],) {
  %382 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 6, 12), int64] */, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
  %383 = shape_of(%var_167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_167, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %386 = add(%384, %385) /* ty=Tensor[(11, 6, 12), int64] */;
  %387 = cast(%var_167, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = logical_or(%389, %390) /* ty=Tensor[(11, 6, 12), bool] */;
  (%391,)
}

def @func_6508(%var_6500: Tensor[(1, 2, 7), float32]) -> (Tensor[(1, 2, 7), float32],) {
  %392 = cast(%var_6500, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %393 = atanh(%392) /* ty=Tensor[(1, 2, 7), float32] */;
  (%393,)
}

def @func_9014(%var_8979: Tensor[(312, 2), float64], %var_8980: Tensor[(320), int64], %var_8992: Tensor[(2304), int16], %var_9002: Tensor[(312, 2), float64]) -> (Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) {
  %394 = @func_8948() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) */;
  %395 = cast(meta[relay.Constant][43] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
  %396 = cast(meta[relay.Constant][44] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %397 = cast(%var_8979, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %398 = cast(%var_8980, dtype="int64") /* ty=Tensor[(320), int64] */;
  %399 = reshape(%395, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %400 = reshape(%396, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %401 = reshape(%397, newshape=[8, 6, 13]) /* ty=Tensor[(8, 6, 13), float64] */;
  %402 = reshape(%398, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %403 = @func_5865(%399, %400, %401, %402) /* ty=(Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) */;
  %404 = cast(meta[relay.Constant][45] /* ty=Tensor[(392), uint32] */, dtype="uint32") /* ty=Tensor[(392), uint32] */;
  %405 = cast(%var_8992, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %406 = cast(%var_8980, dtype="int64") /* ty=Tensor[(320), int64] */;
  %407 = reshape(%404, newshape=[14, 14, 2]) /* ty=Tensor[(14, 14, 2), uint32] */;
  %408 = reshape(%405, newshape=[2304, 1]) /* ty=Tensor[(2304, 1), int16] */;
  %409 = reshape(%406, newshape=[80, 4]) /* ty=Tensor[(80, 4), int64] */;
  %410 = @func_1954(%407, %408, %409) /* ty=(Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) */;
  %411 = cast(%var_9002, dtype="int32") /* ty=Tensor[(312, 2), int32] */;
  %412 = shape_of(%var_8979, dtype="int32") /* ty=Tensor[(2), int32] */;
  %413 = cast(%var_8979, dtype="int32") /* ty=Tensor[(312, 2), int32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %415 = %394.1;
  %416 = %403.2;
  %417 = %410.3;
  %418 = bitwise_xor(%413, %414) /* ty=Tensor[(312, 2), int32] */;
  (%415, %416, meta[relay.Constant][43] /* ty=Tensor[(864, 1), float64] */, meta[relay.Constant][44] /* ty=Tensor[(6), float64] */, %var_8980, %417, meta[relay.Constant][45] /* ty=Tensor[(392), uint32] */, %var_8992, %418)
}

def @func_7942(%var_7926: Tensor[(156), float32], %var_7927: Tensor[(455), float64], %var_7928: Tensor[(288), int8]) -> (Tensor[(6, 14, 16), bool], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(108, 8), float64], Tensor[(468), int16], Tensor[(156), float32], Tensor[(455), float64], Tensor[(288), int8], Tensor[(10, 2, 16), bool], Tensor[(160, 2), int64]) {
  %419 = cast(meta[relay.Constant][46] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %420 = cast(meta[relay.Constant][47] /* ty=Tensor[(108, 8), float64] */, dtype="float64") /* ty=Tensor[(108, 8), float64] */;
  %421 = reshape(%419, newshape=[14, 9, 9]) /* ty=Tensor[(14, 9, 9), float64] */;
  %422 = reshape(%420, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %423 = @func_2597(%421, %422) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) */;
  %424 = cast(%var_7926, dtype="float32") /* ty=Tensor[(156), float32] */;
  %425 = cast(%var_7926, dtype="float32") /* ty=Tensor[(156), float32] */;
  %426 = cast(%var_7927, dtype="float64") /* ty=Tensor[(455), float64] */;
  %427 = cast(%var_7928, dtype="int8") /* ty=Tensor[(288), int8] */;
  %428 = reshape(%424, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %429 = reshape(%425, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %430 = reshape(%426, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %431 = reshape(%427, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %432 = @func_4349(%428, %429, %430, %431) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
  %433 = cast(meta[relay.Constant][48] /* ty=Tensor[(160, 2), int64] */, dtype="int64") /* ty=Tensor[(160, 2), int64] */;
  %434 = reshape(%433, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
  %435 = @func_2447(%434) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
  %436 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %437 = %423.2;
  %438 = %432.1;
  %439 = %435.1;
  (%436, %437, meta[relay.Constant][46] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][47] /* ty=Tensor[(108, 8), float64] */, %438, %var_7926, %var_7927, %var_7928, %439, meta[relay.Constant][48] /* ty=Tensor[(160, 2), int64] */)
}

def @func_1954(%var_1886: Tensor[(14, 14, 2), uint32], %var_1911: Tensor[(2304, 1), int16], %var_1950: Tensor[(80, 4), int64]) -> (Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) {
  %440 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 14, 2), uint32] */, dtype="uint32") /* ty=Tensor[(1, 14, 2), uint32] */;
  %441 = cast(%var_1886, dtype="uint32") /* ty=Tensor[(14, 14, 2), uint32] */;
  %442 = cast(meta[relay.Constant][50] /* ty=Tensor[(216, 4), float64] */, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %443 = reshape(%442, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %444 = cast(meta[relay.Constant][51] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %445 = cast(%var_1911, dtype="int16") /* ty=Tensor[(2304, 1), int16] */;
  %446 = reshape(%444, newshape=[]) /* ty=int16 */;
  %447 = reshape(%445, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %448 = cast(meta[relay.Constant][51] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %449 = cast(%var_1911, dtype="int16") /* ty=Tensor[(2304, 1), int16] */;
  %450 = reshape(%448, newshape=[]) /* ty=int16 */;
  %451 = reshape(%449, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %452 = cast(meta[relay.Constant][51] /* ty=int16 */, dtype="float64") /* ty=float64 */;
  %453 = cast(%var_1886, dtype="float64") /* ty=Tensor[(14, 14, 2), float64] */;
  %454 = @func_536(%443) /* ty=Tensor[(12, 9, 8), float64] */;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
  %456 = reshape(%455, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %457 = cast(%var_1950, dtype="int64") /* ty=Tensor[(80, 4), int64] */;
  %458 = reshape(%457, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %459 = @func_1081(%458) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %460 = bitwise_or(%440, %441) /* ty=Tensor[(14, 14, 2), uint32] */;
  %461 = @func_1112(%446, %447) /* ty=Tensor[(12, 12, 16), int16] */;
  %462 = @func_1112(%450, %451) /* ty=Tensor[(12, 12, 16), int16] */;
  %463 = mod(%452, %453) /* ty=Tensor[(14, 14, 2), float64] */;
  %464 = @func_536(%456) /* ty=Tensor[(12, 9, 8), float64] */;
  %465 = %459.2;
  (%460, %454, meta[relay.Constant][50] /* ty=Tensor[(216, 4), float64] */, %461, %var_1911, %462, %463, %464, %465, %var_1950)
}

def @func_8283(%var_8268: Tensor[(216), float32], %var_8269: uint16, %var_8270: Tensor[(156), float32], %var_8271: Tensor[(455), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(330, 1), uint16], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(455), float64]) {
  %466 = cast(%var_8268, dtype="float32") /* ty=Tensor[(216), float32] */;
  %467 = cast(%var_8268, dtype="float32") /* ty=Tensor[(216), float32] */;
  %468 = cast(%var_8269, dtype="uint16") /* ty=uint16 */;
  %469 = cast(%var_8270, dtype="float32") /* ty=Tensor[(156), float32] */;
  %470 = cast(%var_8271, dtype="float64") /* ty=Tensor[(455), float64] */;
  %471 = reshape(%466, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %472 = reshape(%467, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %473 = reshape(%468, newshape=[]) /* ty=uint16 */;
  %474 = reshape(%469, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %475 = reshape(%470, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %476 = @func_5181(%471, %472, %473, %474, %475) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
  %477 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %478 = %476.3;
  (%477, %478, %var_8268, %var_8269, %var_8270, %var_8271)
}

def @func_5181(%var_5154: Tensor[(6, 4, 9), float32], %var_5155: Tensor[(6, 4, 9), float32], %var_5165: uint16, %var_5167: Tensor[(1, 156), float32], %var_5168: Tensor[(455), float64]) -> (Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) {
  %479 = cast(%var_5155, dtype="float32") /* ty=Tensor[(6, 4, 9), float32] */;
  %480 = shape_of(%var_5154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%var_5154, dtype="float32") /* ty=Tensor[(6, 4, 9), float32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %483 = cast(%var_5165, dtype="uint16") /* ty=uint16 */;
  %484 = cast(meta[relay.Constant][52] /* ty=Tensor[(330, 1), uint16] */, dtype="uint16") /* ty=Tensor[(330, 1), uint16] */;
  %485 = cast(%var_5167, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %486 = cast(%var_5168, dtype="float64") /* ty=Tensor[(455), float64] */;
  %487 = reshape(%483, newshape=[]) /* ty=uint16 */;
  %488 = reshape(%484, newshape=[10, 11, 3]) /* ty=Tensor[(10, 11, 3), uint16] */;
  %489 = reshape(%485, newshape=[156, 1]) /* ty=Tensor[(156, 1), float32] */;
  %490 = reshape(%486, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %491 = @func_5082(%487, %488, %489, %490) /* ty=(Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) */;
  %492 = cast(%var_5167, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %493 = add(%481, %482) /* ty=Tensor[(6, 4, 9), float32] */;
  %494 = %491.1;
  %495 = acos(%492) /* ty=Tensor[(1, 156), float32] */;
  (%493, %494, %var_5165, meta[relay.Constant][52] /* ty=Tensor[(330, 1), uint16] */, %var_5168, %495)
}

def @func_6698(%var_6670: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
  %496 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %497 = shape_of(%var_6670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%var_6670, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%498, %499) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_5891(%var_5876: float64, %var_5877: Tensor[(15, 4, 9), float64]) -> Tensor[(15, 4, 9), float64] {
  %500 = cast(%var_5876, dtype="float64") /* ty=float64 */;
  %501 = cast(%var_5877, dtype="float64") /* ty=Tensor[(15, 4, 9), float64] */;
  power(%500, %501) /* ty=Tensor[(15, 4, 9), float64] */
}

def @func_6362(%var_6341: Tensor[(13, 16, 2), uint32], %var_6342: Tensor[(13, 16, 2), uint32], %var_6348: Tensor[(1134), float64]) -> (Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], Tensor[(13, 16, 2), uint8]) {
  %502 = cast(meta[relay.Constant][54] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %503 = cast(%var_6348, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %504 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %505 = reshape(%502, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), float64] */;
  %506 = reshape(%503, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
  %507 = reshape(%504, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %508 = @func_4768(%505, %506, %507) /* ty=(Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) */;
  %509 = cast(%var_6342, dtype="uint32") /* ty=Tensor[(13, 16, 2), uint32] */;
  %510 = shape_of(%var_6341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%var_6341, dtype="uint32") /* ty=Tensor[(13, 16, 2), uint32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %513 = multiply(%511, %512) /* ty=Tensor[(13, 16, 2), uint32] */;
  %514 = cast(%513, dtype="float32") /* ty=Tensor[(13, 16, 2), float32] */;
  %515 = asinh(%514) /* ty=Tensor[(13, 16, 2), float32] */;
  %516 = cast(%513, dtype="uint8") /* ty=Tensor[(13, 16, 2), uint8] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="uint8") /* ty=Tensor[(13, 16, 2), uint8] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %520 = %508.2;
  %521 = bitwise_or(%518, %519) /* ty=Tensor[(13, 16, 2), uint8] */;
  (%520, meta[relay.Constant][54] /* ty=Tensor[(468), float64] */, %var_6348, meta[relay.Constant][55] /* ty=Tensor[(3, 2), float64] */, %521)
}

def @func_8849(%var_8841: Tensor[(40), uint8]) -> (Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) {
  %522 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %524 = cast(%var_8841, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %525 = reshape(%524, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), uint8] */;
  %526 = @func_3947(%525) /* ty=(Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */;
  %527 = asin(%523) /* ty=Tensor[(6, 14, 16), float64] */;
  %528 = %526.0;
  (%527, %528, %var_8841)
}

def @func_8948() -> (Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) {
  %529 = @func_8440() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %530 = cast(meta[relay.Constant][56] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %531 = reshape(%530, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %532 = @func_1239(%531) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %533 = cast(meta[relay.Constant][57] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %534 = reshape(%533, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), uint8] */;
  %535 = @func_3947(%534) /* ty=(Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */;
  %536 = %529.0;
  %537 = %532.0;
  %538 = %535.1;
  (%536, %537, meta[relay.Constant][56] /* ty=Tensor[(484), uint16] */, %538, meta[relay.Constant][57] /* ty=Tensor[(40), uint8] */)
}

def @func_648(%var_601: Tensor[(4, 9, 13), int16], %var_610: Tensor[(864), float64]) -> (Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) {
  %539 = cast(%var_601, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %540 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(4, 9, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 9, 13), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %543 = cast(%var_610, dtype="float64") /* ty=Tensor[(864), float64] */;
  %544 = reshape(%543, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %545 = cast(meta[relay.Constant][59] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %546 = reshape(%545, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %547 = @func_177(%546) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %548 = cast(%var_610, dtype="float64") /* ty=Tensor[(864), float64] */;
  %549 = reshape(%548, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %550 = %547.0;
  %551 = cast(%550, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
  %552 = reshape(%551, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %553 = @func_177(%552) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %554 = less(%541, %542) /* ty=Tensor[(4, 9, 13), bool] */;
  %555 = @func_536(%544) /* ty=Tensor[(12, 9, 8), float64] */;
  %556 = @func_536(%549) /* ty=Tensor[(12, 9, 8), float64] */;
  %557 = %553.0;
  (%554, %555, %var_610, %550, meta[relay.Constant][59] /* ty=Tensor[(792), int64] */, %556, %557)
}

def @func_3132(%var_3126: Tensor[(9, 8, 4), int8], %var_3127: Tensor[(9, 8, 4), int8]) -> Tensor[(9, 8, 4), int8] {
  %558 = cast(%var_3127, dtype="int8") /* ty=Tensor[(9, 8, 4), int8] */;
  %559 = shape_of(%var_3126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_3126, dtype="int8") /* ty=Tensor[(9, 8, 4), int8] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%560, %561) /* ty=Tensor[(9, 8, 4), int8] */
}

def @func_8343() -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) {
  %562 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %563 = %562.0;
  %564 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  (%563, %564)
}

def @func_7775(%var_7768: Tensor[(280), uint64]) -> (Tensor[(6, 14, 16), bool], int16, Tensor[(280), uint64], int16) {
  %565 = cast(%var_7768, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %566 = cast(meta[relay.Constant][60] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %567 = cast(%var_7768, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %568 = reshape(%565, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %569 = reshape(%566, newshape=[]) /* ty=int16 */;
  %570 = reshape(%567, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %571 = @func_2488(%568, %569, %570) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
  %572 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %573 = %571.2;
  (%572, %573, %var_7768, meta[relay.Constant][60] /* ty=int16 */)
}

def @func_1655(%var_1649: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64],) {
  %574 = cast(%var_1649, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
  %575 = cos(%574) /* ty=Tensor[(1, 6, 1), float64] */;
  (%575,)
}

def @func_7788() -> Tensor[(6, 14, 16), bool] {
  %576 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %576.0
}

def @func_5865(%var_5847: Tensor[(864), float64], %var_5849: Tensor[(3, 2), float64], %var_5856: Tensor[(8, 6, 13), float64], %var_5861: Tensor[(320), int64]) -> (Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) {
  %577 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 20), float32] */, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %578 = cast(meta[relay.Constant][62] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %579 = cast(%var_5847, dtype="float64") /* ty=Tensor[(864), float64] */;
  %580 = cast(meta[relay.Constant][63] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %581 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 20), float32] */, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %582 = cast(%var_5849, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %583 = cast(meta[relay.Constant][64] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %584 = reshape(%577, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %585 = reshape(%578, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %586 = reshape(%579, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %587 = reshape(%580, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
  %588 = reshape(%581, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %589 = reshape(%582, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %590 = reshape(%583, newshape=[]) /* ty=int16 */;
  %591 = @func_2788(%584, %585, %586, %587, %588, %589, %590) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
  %592 = cast(meta[relay.Constant][65] /* ty=Tensor[(8, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 13), float32] */;
  %593 = sigmoid(%592) /* ty=Tensor[(8, 6, 13), float32] */;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %595 = sinh(%594) /* ty=Tensor[(8, 6, 13), float64] */;
  %596 = cast(%var_5856, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %600 = cast(%var_5861, dtype="int64") /* ty=Tensor[(320), int64] */;
  %601 = reshape(%600, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %602 = @func_1081(%601) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %603 = %591.7;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
  %605 = reshape(%604, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
  %606 = @func_2105(%605) /* ty=(Tensor[(16, 9, 16), float64],) */;
  %607 = floor_mod(%598, %599) /* ty=Tensor[(8, 6, 13), float64] */;
  %608 = %602.1;
  %609 = %606.0;
  (%603, meta[relay.Constant][61] /* ty=Tensor[(3, 20), float32] */, meta[relay.Constant][62] /* ty=Tensor[(468, 1), int16] */, %var_5847, meta[relay.Constant][63] /* ty=Tensor[(1134), float64] */, %var_5849, meta[relay.Constant][64] /* ty=int16 */, %607, %608, %var_5861, %609)
}

def @func_3735(%var_3718: Tensor[(2, 9, 5), float64], %var_3726: Tensor[(864), float64]) -> (Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) {
  %610 = cast(%var_3718, dtype="float64") /* ty=Tensor[(2, 9, 5), float64] */;
  %611 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(2, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 5), float64] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %614 = cast(meta[relay.Constant][67] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %615 = cast(%var_3726, dtype="float64") /* ty=Tensor[(864), float64] */;
  %616 = reshape(%614, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %617 = reshape(%615, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %618 = @func_648(%616, %617) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %619 = mod(%612, %613) /* ty=Tensor[(2, 9, 5), float64] */;
  %620 = %618.2;
  (%619, %620, meta[relay.Constant][67] /* ty=Tensor[(468), int16] */, %var_3726)
}

def @func_3506(%var_3501: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64],) {
  %621 = cast(%var_3501, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
  %622 = acos(%621) /* ty=Tensor[(6, 15, 15), float64] */;
  (%622,)
}

def @func_6553(%var_6533: Tensor[(5, 14, 16), int8], %var_6534: Tensor[(5, 14, 16), int8], %var_6551: Tensor[(320), int64]) -> (Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) {
  %623 = cast(%var_6534, dtype="int8") /* ty=Tensor[(5, 14, 16), int8] */;
  %624 = shape_of(%var_6533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_6533, dtype="int8") /* ty=Tensor[(5, 14, 16), int8] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %627 = cast(meta[relay.Constant][68] /* ty=Tensor[(242, 2), uint16] */, dtype="uint16") /* ty=Tensor[(242, 2), uint16] */;
  %628 = reshape(%627, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %629 = @func_1239(%628) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %630 = %629.1;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
  %632 = cast(%var_6551, dtype="int64") /* ty=Tensor[(320), int64] */;
  %633 = reshape(%632, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
  %634 = @func_2447(%633) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
  %635 = bitwise_and(%625, %626) /* ty=Tensor[(5, 14, 16), int8] */;
  %636 = atan(%631) /* ty=Tensor[(11, 11, 4), float32] */;
  %637 = %634.2;
  (%635, meta[relay.Constant][68] /* ty=Tensor[(242, 2), uint16] */, %636, %637, %var_6551)
}

def @func_9301(%var_9283: Tensor[(90), float64], %var_9284: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280, 1), uint64], Tensor[(90), float64], Tensor[(864), float64]) {
  %638 = cast(meta[relay.Constant][69] /* ty=Tensor[(280, 1), uint64] */, dtype="uint64") /* ty=Tensor[(280, 1), uint64] */;
  %639 = cast(%var_9283, dtype="float64") /* ty=Tensor[(90), float64] */;
  %640 = cast(%var_9284, dtype="float64") /* ty=Tensor[(864), float64] */;
  %641 = reshape(%638, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %642 = reshape(%639, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %643 = reshape(%640, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %644 = @func_7662(%641, %642, %643) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) */;
  %645 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %646 = %644.1;
  (%645, %646, meta[relay.Constant][69] /* ty=Tensor[(280, 1), uint64] */, %var_9283, %var_9284)
}

def @func_5664(%var_5654: Tensor[(9, 11, 3), int64]) -> Tensor[(9, 11, 3), int64] {
  %647 = cast(meta[relay.Constant][70] /* ty=Tensor[(9, 11, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 11, 3), int64] */;
  %648 = shape_of(%var_5654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_5654, dtype="int64") /* ty=Tensor[(9, 11, 3), int64] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%649, %650) /* ty=Tensor[(9, 11, 3), int64] */
}

def @func_2105(%var_2102: Tensor[(16, 9, 16), float64]) -> (Tensor[(16, 9, 16), float64],) {
  %651 = cast(%var_2102, dtype="float64") /* ty=Tensor[(16, 9, 16), float64] */;
  %652 = sqrt(%651) /* ty=Tensor[(16, 9, 16), float64] */;
  (%652,)
}

def @func_9091() -> Tensor[(6, 14, 16), bool] {
  %653 = @func_7975() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %653.0
}

def @func_3237(%var_3232: Tensor[(12, 11, 2), int8], %var_3233: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), bool] {
  %654 = cast(%var_3233, dtype="bool") /* ty=Tensor[(12, 11, 2), bool] */;
  %655 = shape_of(%var_3232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_3232, dtype="bool") /* ty=Tensor[(12, 11, 2), bool] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%656, %657) /* ty=Tensor[(12, 11, 2), bool] */
}

def @func_4440(%var_4418: Tensor[(11, 13, 10), float32], %var_4419: Tensor[(11, 13, 10), float32]) -> (Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) {
  %658 = cast(%var_4419, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
  %659 = shape_of(%var_4418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_4418, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %662 = cast(meta[relay.Constant][71] /* ty=Tensor[(2, 432), float64] */, dtype="float64") /* ty=Tensor[(2, 432), float64] */;
  %663 = reshape(%662, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %664 = power(%660, %661) /* ty=Tensor[(11, 13, 10), float32] */;
  %665 = @func_536(%663) /* ty=Tensor[(12, 9, 8), float64] */;
  (%664, %665, meta[relay.Constant][71] /* ty=Tensor[(2, 432), float64] */)
}

def @func_9196(%var_9171: Tensor[(242, 2), uint16]) -> (Tensor[(6, 14, 16), float64], Tensor[(11, 11, 4), uint16], Tensor[(242, 2), uint16]) {
  %666 = @func_8440() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %667 = %666.0;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %669 = cast(%var_9171, dtype="uint16") /* ty=Tensor[(242, 2), uint16] */;
  %670 = reshape(%669, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %671 = cosh(%668) /* ty=Tensor[(6, 14, 16), float64] */;
  %672 = @func_783(%670) /* ty=Tensor[(11, 11, 4), uint16] */;
  (%671, %672, %var_9171)
}

def @func_9134() -> (Tensor[(6, 14, 16), bool],) {
  %673 = @func_8321() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %674 = %673.0;
  (%674,)
}

def @func_5562(%var_5556: Tensor[(15, 15, 9), int64], %var_5557: Tensor[(15, 15, 9), int64]) -> Tensor[(15, 15, 9), int64] {
  %675 = cast(%var_5557, dtype="int64") /* ty=Tensor[(15, 15, 9), int64] */;
  %676 = shape_of(%var_5556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_5556, dtype="int64") /* ty=Tensor[(15, 15, 9), int64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%677, %678) /* ty=Tensor[(15, 15, 9), int64] */
}

def @func_7750() -> (Tensor[(6, 14, 16), bool],) {
  %679 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  (%679,)
}

def @func_536(%var_533: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), float64] {
  %680 = cast(%var_533, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
  atanh(%680) /* ty=Tensor[(12, 9, 8), float64] */
}

def @func_8209(%var_8185: Tensor[(12, 7, 9), uint32]) -> (Tensor[(12, 7, 9), uint32], Tensor[(12, 7, 9), float64]) {
  %681 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 7, 9), uint32] */, dtype="uint32") /* ty=Tensor[(12, 7, 9), uint32] */;
  %682 = shape_of(%var_8185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%var_8185, dtype="uint32") /* ty=Tensor[(12, 7, 9), uint32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %685 = cast(%var_8185, dtype="float64") /* ty=Tensor[(12, 7, 9), float64] */;
  %686 = left_shift(%683, %684) /* ty=Tensor[(12, 7, 9), uint32] */;
  %687 = cosh(%685) /* ty=Tensor[(12, 7, 9), float64] */;
  (%686, %687)
}

def @func_8491(%var_8470: Tensor[(6, 14, 16), bool], %var_8482: Tensor[(65, 7), float64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(156), float32], Tensor[(65, 7), float64], Tensor[(144, 2), int8]) {
  %688 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %689 = cast(%var_8470, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %693 = cast(meta[relay.Constant][73] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %694 = cast(meta[relay.Constant][73] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %695 = cast(%var_8482, dtype="float64") /* ty=Tensor[(65, 7), float64] */;
  %696 = cast(meta[relay.Constant][74] /* ty=Tensor[(144, 2), int8] */, dtype="int8") /* ty=Tensor[(144, 2), int8] */;
  %697 = reshape(%693, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %698 = reshape(%694, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %699 = reshape(%695, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %700 = reshape(%696, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %701 = @func_4349(%697, %698, %699, %700) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
  %702 = bitwise_and(%691, %692) /* ty=Tensor[(6, 14, 16), uint32] */;
  %703 = %701.2;
  (%702, %703, meta[relay.Constant][73] /* ty=Tensor[(156), float32] */, %var_8482, meta[relay.Constant][74] /* ty=Tensor[(144, 2), int8] */)
}

def @func_9604() -> (Tensor[(6, 14, 16), bool], Tensor[(11, 11, 4), float64], Tensor[(6, 14, 16), bool]) {
  %704 = cast(meta[relay.Constant][75] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %705 = reshape(%704, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %706 = @func_783(%705) /* ty=Tensor[(11, 11, 4), uint16] */;
  %707 = cast(meta[relay.Constant][75] /* ty=Tensor[(484), uint16] */, dtype="bool") /* ty=Tensor[(484), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(11, 11, 4), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = less(%709, %710) /* ty=Tensor[(11, 11, 4), bool] */;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(11, 11, 4), float64] */;
  %713 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %714 = cosh(%712) /* ty=Tensor[(11, 11, 4), float64] */;
  %715 = @func_9091() /* ty=Tensor[(6, 14, 16), bool] */;
  (%713, %714, %715)
}

def @func_6148(%var_6108: Tensor[(12, 10, 10), float64], %var_6119: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) {
  %716 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %717 = reshape(%716, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %718 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %719 = reshape(%718, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %720 = @func_1239(%719) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %721 = cast(meta[relay.Constant][76] /* ty=Tensor[(6, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
  %722 = reshape(%721, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %723 = @func_1655(%722) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %724 = cast(%var_6108, dtype="float64") /* ty=Tensor[(12, 10, 10), float64] */;
  %725 = atan(%724) /* ty=Tensor[(12, 10, 10), float64] */;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
  %727 = cast(%var_6119, dtype="float32") /* ty=Tensor[(484), float32] */;
  %728 = atanh(%727) /* ty=Tensor[(484), float32] */;
  %729 = cast(meta[relay.Constant][76] /* ty=Tensor[(6, 1), float64] */, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %730 = cast(%728, dtype="bool") /* ty=Tensor[(484), bool] */;
  %731 = @func_783(%717) /* ty=Tensor[(11, 11, 4), uint16] */;
  %732 = %720.2;
  %733 = %723.0;
  %734 = atanh(%726) /* ty=Tensor[(12, 10, 10), float32] */;
  %735 = logical_or(%729, %730) /* ty=Tensor[(6, 484), bool] */;
  (%731, %732, %733, %734, %735)
}

def @func_9766(%var_9762: Tensor[(624), float64], %var_9763: Tensor[(8, 40), int64]) -> (Tensor[(6, 14, 16), bool], Tensor[(6), float64], Tensor[(624), float64], Tensor[(8, 40), int64], Tensor[(2304), int16]) {
  %736 = @func_9072() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %737 = cast(%var_9762, dtype="float64") /* ty=Tensor[(624), float64] */;
  %738 = cast(%var_9763, dtype="int64") /* ty=Tensor[(8, 40), int64] */;
  %739 = cast(meta[relay.Constant][77] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %740 = cast(%var_9762, dtype="float64") /* ty=Tensor[(624), float64] */;
  %741 = reshape(%737, newshape=[312, 2]) /* ty=Tensor[(312, 2), float64] */;
  %742 = reshape(%738, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %743 = reshape(%739, newshape=[2304]) /* ty=Tensor[(2304), int16] */;
  %744 = reshape(%740, newshape=[312, 2]) /* ty=Tensor[(312, 2), float64] */;
  %745 = @func_9014(%741, %742, %743, %744) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) */;
  %746 = %736.0;
  %747 = %745.3;
  (%746, %747, %var_9762, %var_9763, meta[relay.Constant][77] /* ty=Tensor[(2304), int16] */)
}

def @func_1112(%var_1096: int16, %var_1097: Tensor[(12, 12, 16), int16]) -> Tensor[(12, 12, 16), int16] {
  %748 = cast(%var_1096, dtype="int16") /* ty=int16 */;
  %749 = cast(%var_1097, dtype="int16") /* ty=Tensor[(12, 12, 16), int16] */;
  add(%748, %749) /* ty=Tensor[(12, 12, 16), int16] */
}

def @main(%var_10022: Tensor[(99, 3), int64]) -> (Tensor[(6, 14, 16), bool], Tensor[(1120, 1), int8], Tensor[(9, 11, 3), int64], Tensor[(99, 3), int64], Tensor[(4, 80), int8]) {
  %750 = cast(%var_10022, dtype="int64") /* ty=Tensor[(99, 3), int64] */;
  %751 = reshape(%750, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), int64] */;
  %752 = cast(meta[relay.Constant][78] /* ty=Tensor[(1120, 1), int8] */, dtype="int8") /* ty=Tensor[(1120, 1), int8] */;
  %753 = cast(meta[relay.Constant][78] /* ty=Tensor[(1120, 1), int8] */, dtype="int8") /* ty=Tensor[(1120, 1), int8] */;
  %754 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 80), int64] */, dtype="int64") /* ty=Tensor[(4, 80), int64] */;
  %755 = reshape(%752, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), int8] */;
  %756 = reshape(%753, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), int8] */;
  %757 = reshape(%754, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %758 = @func_6553(%755, %756, %757) /* ty=(Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) */;
  %759 = %758.3;
  %760 = cast(%759, dtype="int8") /* ty=Tensor[(8, 40), int8] */;
  %761 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(4, 80), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %762 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 80), int64] */, dtype="int8") /* ty=Tensor[(4, 80), int8] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %764 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
  %765 = @func_5664(%751) /* ty=Tensor[(9, 11, 3), int64] */;
  %766 = multiply(%762, %763) /* ty=Tensor[(4, 80), int8] */;
  (%764, meta[relay.Constant][78] /* ty=Tensor[(1120, 1), int8] */, %765, %var_10022, %766)
}

def @func_7521() -> Tensor[(6, 14, 16), bool] {
  %767 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
  %768 = cast(meta[relay.Constant][81] /* ty=Tensor[(6, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %769 = mod(%767, %768) /* ty=Tensor[(6, 14, 16), float32] */;
  %770 = cast(meta[relay.Constant][81] /* ty=Tensor[(6, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%772, %773) /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_7662(%var_7634: Tensor[(280), uint64], %var_7659: Tensor[(90), float64], %var_7660: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) {
  %774 = cast(%var_7634, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %775 = cast(meta[relay.Constant][82] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %776 = cast(%var_7634, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %777 = reshape(%774, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %778 = reshape(%775, newshape=[]) /* ty=int16 */;
  %779 = reshape(%776, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %780 = @func_2488(%777, %778, %779) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
  %781 = cast(meta[relay.Constant][83] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %782 = reshape(%781, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %783 = @func_1239(%782) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %784 = cast(%var_7659, dtype="float64") /* ty=Tensor[(90), float64] */;
  %785 = cast(%var_7660, dtype="float64") /* ty=Tensor[(864), float64] */;
  %786 = reshape(%784, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), float64] */;
  %787 = reshape(%785, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %788 = @func_3735(%786, %787) /* ty=(Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %789 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %790 = %780.1;
  %791 = %783.1;
  %792 = %788.3;
  (%789, %790, %var_7634, meta[relay.Constant][82] /* ty=int16 */, %791, meta[relay.Constant][83] /* ty=Tensor[(484), uint16] */, %792, %var_7659, %var_7660)
}

def @func_5082(%var_5063: uint16, %var_5064: Tensor[(10, 11, 3), uint16], %var_5072: Tensor[(156, 1), float32], %var_5073: Tensor[(455), float64]) -> (Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) {
  %793 = cast(%var_5063, dtype="bool") /* ty=bool */;
  %794 = cast(%var_5064, dtype="bool") /* ty=Tensor[(10, 11, 3), bool] */;
  %795 = cast(%var_5072, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %796 = cast(%var_5072, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %797 = cast(%var_5073, dtype="float64") /* ty=Tensor[(455), float64] */;
  %798 = cast(meta[relay.Constant][84] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %799 = reshape(%795, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %800 = reshape(%796, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %801 = reshape(%797, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %802 = reshape(%798, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %803 = @func_4349(%799, %800, %801, %802) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
  %804 = greater(%793, %794) /* ty=Tensor[(10, 11, 3), bool] */;
  %805 = %803.5;
  (%804, %805, %var_5072, %var_5073, meta[relay.Constant][84] /* ty=Tensor[(288), int8] */)
}

def @func_2447(%var_2440: Tensor[(8, 40), int64]) -> (Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) {
  %806 = cast(meta[relay.Constant][86] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %807 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(meta[relay.Constant][85] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %810 = cast(%var_2440, dtype="int64") /* ty=Tensor[(8, 40), int64] */;
  %811 = reshape(%810, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %812 = @func_1081(%811) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %813 = right_shift(%808, %809) /* ty=Tensor[(6, 4, 11), int16] */;
  %814 = %812.0;
  (%813, %814, %var_2440)
}

def @func_8506() -> Tensor[(6, 14, 16), bool] {
  %815 = @func_8343() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) */;
  %815.0
}

def @func_3385(%var_3293: Tensor[(1134), float64], %var_3295: int16, %var_3339: Tensor[(5, 13, 7), float64], %var_3355: Tensor[(320), int64], %var_3365: Tensor[(288), int8]) -> (Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) {
  %816 = cast(meta[relay.Constant][87] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %817 = cast(meta[relay.Constant][88] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %818 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 864), float64] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %819 = cast(%var_3293, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %820 = cast(meta[relay.Constant][87] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %821 = cast(meta[relay.Constant][90] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %822 = cast(%var_3295, dtype="int16") /* ty=int16 */;
  %823 = reshape(%816, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %824 = reshape(%817, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %825 = reshape(%818, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %826 = reshape(%819, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
  %827 = reshape(%820, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %828 = reshape(%821, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %829 = reshape(%822, newshape=[]) /* ty=int16 */;
  %830 = @func_2788(%823, %824, %825, %826, %827, %828, %829) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
  %831 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 864), float64] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %832 = reshape(%831, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %833 = @func_536(%832) /* ty=Tensor[(12, 9, 8), float64] */;
  %834 = cast(%833, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %835 = cast(%var_3295, dtype="bool") /* ty=bool */;
  %836 = cast(meta[relay.Constant][90] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %837 = reshape(%836, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %838 = @func_1655(%837) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %839 = cast(meta[relay.Constant][91] /* ty=Tensor[(5, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 7), float64] */;
  %840 = log(%839) /* ty=Tensor[(5, 1, 7), float64] */;
  %841 = cast(%840, dtype="uint32") /* ty=Tensor[(5, 1, 7), uint32] */;
  %842 = cast(%var_3339, dtype="uint32") /* ty=Tensor[(5, 13, 7), uint32] */;
  %843 = cast(%var_3355, dtype="int64") /* ty=Tensor[(320), int64] */;
  %844 = reshape(%843, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %845 = @func_1081(%844) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %846 = cast(%var_3365, dtype="int8") /* ty=Tensor[(288), int8] */;
  %847 = cast(%var_3365, dtype="int8") /* ty=Tensor[(288), int8] */;
  %848 = reshape(%846, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), int8] */;
  %849 = reshape(%847, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), int8] */;
  %850 = cast(%var_3295, dtype="int16") /* ty=int16 */;
  %851 = cast(meta[relay.Constant][92] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %852 = reshape(%850, newshape=[]) /* ty=int16 */;
  %853 = reshape(%851, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %854 = cast(%840, dtype="float32") /* ty=Tensor[(5, 1, 7), float32] */;
  %855 = sqrt(%854) /* ty=Tensor[(5, 1, 7), float32] */;
  %856 = cast(%840, dtype="uint8") /* ty=Tensor[(5, 1, 7), uint8] */;
  %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%855, dtype="uint8") /* ty=Tensor[(5, 1, 7), uint8] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %860 = minimum(%858, %859) /* ty=Tensor[(5, ?, 7), uint8] */;
  %861 = cast(%840, dtype="bool") /* ty=Tensor[(5, 1, 7), bool] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="bool") /* ty=Tensor[(5, ?, 7), bool] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %865 = %830.1;
  %866 = logical_or(%834, %835) /* ty=Tensor[(12, 9, 8), bool] */;
  %867 = %838.0;
  %868 = bitwise_xor(%841, %842) /* ty=Tensor[(5, 13, 7), uint32] */;
  %869 = %845.2;
  %870 = @func_3132(%848, %849) /* ty=Tensor[(9, 8, 4), int8] */;
  %871 = @func_1112(%852, %853) /* ty=Tensor[(12, 12, 16), int16] */;
  %872 = equal(%863, %864) /* ty=Tensor[(5, ?, 7), bool] */;
  (%865, meta[relay.Constant][87] /* ty=Tensor[(60), float32] */, meta[relay.Constant][88] /* ty=Tensor[(468), int16] */, meta[relay.Constant][89] /* ty=Tensor[(1, 864), float64] */, %var_3293, meta[relay.Constant][90] /* ty=Tensor[(6), float64] */, %866, %867, %868, %869, %var_3355, %870, %var_3365, %871, meta[relay.Constant][92] /* ty=Tensor[(2304), int16] */, %872)
}

def @func_7871() -> (Tensor[(6, 14, 16), bool],) {
  %873 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  (%873,)
}

def @func_7842() -> (Tensor[(6, 14, 16), bool],) {
  %874 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  (%874,)
}

def @func_9246() -> Tensor[(6, 14, 16), bool] {
  %875 = @func_8343() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) */;
  %875.1
}

def @func_8059(%var_8034: Tensor[(6, 14, 16), bool], %var_8041: int16, %var_8043: Tensor[(320), int64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8], Tensor[(11, 13, 10), float32], Tensor[(1430), float32]) {
  %876 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %877 = cast(%var_8034, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
  %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%876, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %881 = cast(meta[relay.Constant][93] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %882 = cast(%var_8041, dtype="int16") /* ty=int16 */;
  %883 = cast(meta[relay.Constant][94] /* ty=Tensor[(455), float64] */, dtype="float64") /* ty=Tensor[(455), float64] */;
  %884 = cast(%var_8043, dtype="int64") /* ty=Tensor[(320), int64] */;
  %885 = cast(meta[relay.Constant][95] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %886 = reshape(%881, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
  %887 = reshape(%882, newshape=[]) /* ty=int16 */;
  %888 = reshape(%883, newshape=[5, 13, 7]) /* ty=Tensor[(5, 13, 7), float64] */;
  %889 = reshape(%884, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %890 = reshape(%885, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %891 = @func_3385(%886, %887, %888, %889, %890) /* ty=(Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) */;
  %892 = cast(meta[relay.Constant][96] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %893 = cast(meta[relay.Constant][96] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %894 = reshape(%892, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %895 = reshape(%893, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %896 = @func_4440(%894, %895) /* ty=(Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) */;
  %897 = left_shift(%879, %880) /* ty=Tensor[(6, 14, 16), uint32] */;
  %898 = %891.4;
  %899 = %896.0;
  (%897, %898, meta[relay.Constant][93] /* ty=Tensor[(1134), float64] */, %var_8041, meta[relay.Constant][94] /* ty=Tensor[(455), float64] */, %var_8043, meta[relay.Constant][95] /* ty=Tensor[(288), int8] */, %899, meta[relay.Constant][96] /* ty=Tensor[(1430), float32] */)
}

def @func_4246(%var_4237: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), int64],) {
  %900 = cast(%var_4237, dtype="int64") /* ty=Tensor[(14, 2, 3), int64] */;
  %901 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(14, 2, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(meta[relay.Constant][97] /* ty=Tensor[(14, 2, 3), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 3), int64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %904 = multiply(%902, %903) /* ty=Tensor[(14, 2, 3), int64] */;
  (%904,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8926(%var_8924: Tensor[(1, 15, 4), float64], %var_8925: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float64], Tensor[(10, 2, 16), bool], Tensor[(320), int64], Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(7, 15, 4), float64]) {
  %17 = fn (%var_8864: Tensor[(1, 15, 4), float64], %var_8865: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float64], Tensor[(10, 2, 16), bool], Tensor[(320), int64], Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(7, 15, 4), float64]) {
    %0 = cast(%var_8864, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
    %1 = cast(%var_8865, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
    %3 = reshape(%2, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
    %4 = @func_2447(%3) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
    %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %6 = cast(meta[relay.Constant][2] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %7 = cast(meta[relay.Constant][3] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %8 = reshape(%5, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), float64] */;
    %9 = reshape(%6, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
    %10 = reshape(%7, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %11 = @func_4768(%8, %9, %10) /* ty=(Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) */;
    %12 = cast(%var_8865, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
    %13 = divide(%0, %1) /* ty=Tensor[(7, 15, 4), float64] */;
    %14 = %4.1;
    %15 = %11.4;
    %16 = atanh(%12) /* ty=Tensor[(7, 15, 4), float64] */;
    (%13, %14, meta[relay.Constant][0] /* ty=Tensor[(320), int64] */, %15, meta[relay.Constant][1] /* ty=Tensor[(468), float64] */, meta[relay.Constant][2] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][3] /* ty=Tensor[(6), float64] */, %16)
  };
  %17(%var_8924, %var_8925) /* ty=(Tensor[(7, 15, 4), float64], Tensor[(10, 2, 16), bool], Tensor[(320), int64], Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(7, 15, 4), float64]) */
}

def @func_6508(%var_6500: Tensor[(1, 2, 7), float32]) -> (Tensor[(1, 2, 7), float32],) {
  %18 = cast(%var_6500, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %19 = atanh(%18) /* ty=Tensor[(1, 2, 7), float32] */;
  (%19,)
}

def @func_8176(%var_8171: Tensor[(3, 16, 16), float32], %var_8172: Tensor[(3, 16, 16), float32], %var_8173: Tensor[(280), uint64], %var_8174: int16, %var_8175: Tensor[(540), float64]) -> (Tensor[(3, 16, 16), float32], Tensor[(2304), int16], Tensor[(280), uint64], int16, Tensor[(6, 14, 16), float32], Tensor[(1, 1344), bool], Tensor[(15, 4, 9), float64], Tensor[(540), float64]) {
  @func_8169(%var_8171, %var_8172, %var_8173, %var_8174, %var_8175) /* ty=(Tensor[(3, 16, 16), float32], Tensor[(2304), int16], Tensor[(280), uint64], int16, Tensor[(6, 14, 16), float32], Tensor[(1, 1344), bool], Tensor[(15, 4, 9), float64], Tensor[(540), float64]) */
}

def @func_9520(%var_9506: Tensor[(2, 8, 7), float32]) -> (Tensor[(2, 8, 7), float32], Tensor[(12, 9, 8), float64], Tensor[(864), float64]) {
  %20 = cast(%var_9506, dtype="float32") /* ty=Tensor[(2, 8, 7), float32] */;
  %21 = cast(meta[relay.Constant][4] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %22 = reshape(%21, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %23 = rsqrt(%20) /* ty=Tensor[(2, 8, 7), float32] */;
  %24 = @func_536(%22) /* ty=Tensor[(12, 9, 8), float64] */;
  (%23, %24, meta[relay.Constant][4] /* ty=Tensor[(864), float64] */)
}

def @func_3385(%var_3293: Tensor[(1134), float64], %var_3295: int16, %var_3339: Tensor[(5, 13, 7), float64], %var_3355: Tensor[(320), int64], %var_3365: Tensor[(288), int8]) -> (Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) {
  %25 = cast(meta[relay.Constant][5] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %26 = cast(meta[relay.Constant][6] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %27 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 864), float64] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %28 = cast(%var_3293, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %29 = cast(meta[relay.Constant][5] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %30 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %31 = cast(%var_3295, dtype="int16") /* ty=int16 */;
  %32 = reshape(%25, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %33 = reshape(%26, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %34 = reshape(%27, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %35 = reshape(%28, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
  %36 = reshape(%29, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %37 = reshape(%30, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %38 = reshape(%31, newshape=[]) /* ty=int16 */;
  %39 = @func_2788(%32, %33, %34, %35, %36, %37, %38) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
  %40 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 864), float64] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %41 = reshape(%40, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %42 = @func_536(%41) /* ty=Tensor[(12, 9, 8), float64] */;
  %43 = cast(%42, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %44 = cast(%var_3295, dtype="bool") /* ty=bool */;
  %45 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %46 = reshape(%45, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %47 = @func_1655(%46) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %48 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 7), float64] */;
  %49 = log(%48) /* ty=Tensor[(5, 1, 7), float64] */;
  %50 = cast(%49, dtype="uint32") /* ty=Tensor[(5, 1, 7), uint32] */;
  %51 = cast(%var_3339, dtype="uint32") /* ty=Tensor[(5, 13, 7), uint32] */;
  %52 = cast(%var_3355, dtype="int64") /* ty=Tensor[(320), int64] */;
  %53 = reshape(%52, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %54 = @func_1081(%53) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %55 = cast(%var_3365, dtype="int8") /* ty=Tensor[(288), int8] */;
  %56 = cast(%var_3365, dtype="int8") /* ty=Tensor[(288), int8] */;
  %57 = reshape(%55, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), int8] */;
  %58 = reshape(%56, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), int8] */;
  %59 = cast(%var_3295, dtype="int16") /* ty=int16 */;
  %60 = cast(meta[relay.Constant][10] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %61 = reshape(%59, newshape=[]) /* ty=int16 */;
  %62 = reshape(%60, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %63 = cast(%49, dtype="float32") /* ty=Tensor[(5, 1, 7), float32] */;
  %64 = sqrt(%63) /* ty=Tensor[(5, 1, 7), float32] */;
  %65 = cast(%49, dtype="uint8") /* ty=Tensor[(5, 1, 7), uint8] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="uint8") /* ty=Tensor[(5, 1, 7), uint8] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %69 = minimum(%67, %68) /* ty=Tensor[(5, ?, 7), uint8] */;
  %70 = cast(%49, dtype="bool") /* ty=Tensor[(5, 1, 7), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(5, ?, 7), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = %39.1;
  %75 = logical_or(%43, %44) /* ty=Tensor[(12, 9, 8), bool] */;
  %76 = %47.0;
  %77 = bitwise_xor(%50, %51) /* ty=Tensor[(5, 13, 7), uint32] */;
  %78 = %54.2;
  %79 = @func_3132(%57, %58) /* ty=Tensor[(9, 8, 4), int8] */;
  %80 = @func_1112(%61, %62) /* ty=Tensor[(12, 12, 16), int16] */;
  %81 = equal(%72, %73) /* ty=Tensor[(5, ?, 7), bool] */;
  (%74, meta[relay.Constant][5] /* ty=Tensor[(60), float32] */, meta[relay.Constant][6] /* ty=Tensor[(468), int16] */, meta[relay.Constant][7] /* ty=Tensor[(1, 864), float64] */, %var_3293, meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, %75, %76, %77, %78, %var_3355, %79, %var_3365, %80, meta[relay.Constant][10] /* ty=Tensor[(2304), int16] */, %81)
}

def @func_651(%var_649: Tensor[(4, 9, 13), int16], %var_650: Tensor[(864), float64]) -> (Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) {
  %101 = fn (%var_601: Tensor[(4, 9, 13), int16], %var_610: Tensor[(864), float64]) -> (Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) {
    %82 = cast(%var_601, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
    %83 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 9, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 9, 13), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %86 = cast(%var_610, dtype="float64") /* ty=Tensor[(864), float64] */;
    %87 = reshape(%86, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
    %88 = cast(meta[relay.Constant][12] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
    %89 = reshape(%88, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
    %90 = @func_177(%89) /* ty=(Tensor[(11, 6, 12), bool],) */;
    %91 = cast(%var_610, dtype="float64") /* ty=Tensor[(864), float64] */;
    %92 = reshape(%91, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
    %93 = %90.0;
    %94 = cast(%93, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
    %95 = reshape(%94, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
    %96 = @func_177(%95) /* ty=(Tensor[(11, 6, 12), bool],) */;
    %97 = less(%84, %85) /* ty=Tensor[(4, 9, 13), bool] */;
    %98 = @func_536(%87) /* ty=Tensor[(12, 9, 8), float64] */;
    %99 = @func_536(%92) /* ty=Tensor[(12, 9, 8), float64] */;
    %100 = %96.0;
    (%97, %98, %var_610, %93, meta[relay.Constant][12] /* ty=Tensor[(792), int64] */, %99, %100)
  };
  %101(%var_649, %var_650) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */
}

def @func_7777(%var_7776: Tensor[(280), uint64]) -> (Tensor[(6, 14, 16), bool], int16, Tensor[(280), uint64], int16) {
  %111 = fn (%var_7768: Tensor[(280), uint64]) -> (Tensor[(6, 14, 16), bool], int16, Tensor[(280), uint64], int16) {
    %102 = cast(%var_7768, dtype="uint64") /* ty=Tensor[(280), uint64] */;
    %103 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %104 = cast(%var_7768, dtype="uint64") /* ty=Tensor[(280), uint64] */;
    %105 = reshape(%102, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
    %106 = reshape(%103, newshape=[]) /* ty=int16 */;
    %107 = reshape(%104, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
    %108 = @func_2488(%105, %106, %107) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
    %109 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    %110 = %108.2;
    (%109, %110, %var_7768, meta[relay.Constant][13] /* ty=int16 */)
  };
  %111(%var_7776) /* ty=(Tensor[(6, 14, 16), bool], int16, Tensor[(280), uint64], int16) */
}

def @func_9074() -> (Tensor[(6, 14, 16), bool],) {
  @func_9072() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9072() -> (Tensor[(6, 14, 16), bool],) {
  %112 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
  (%112,)
}

def @func_7946(%var_7943: Tensor[(156), float32], %var_7944: Tensor[(455), float64], %var_7945: Tensor[(288), int8]) -> (Tensor[(6, 14, 16), bool], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(108, 8), float64], Tensor[(468), int16], Tensor[(156), float32], Tensor[(455), float64], Tensor[(288), int8], Tensor[(10, 2, 16), bool], Tensor[(160, 2), int64]) {
  %134 = fn (%var_7926: Tensor[(156), float32], %var_7927: Tensor[(455), float64], %var_7928: Tensor[(288), int8]) -> (Tensor[(6, 14, 16), bool], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(108, 8), float64], Tensor[(468), int16], Tensor[(156), float32], Tensor[(455), float64], Tensor[(288), int8], Tensor[(10, 2, 16), bool], Tensor[(160, 2), int64]) {
    %113 = cast(meta[relay.Constant][14] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %114 = cast(meta[relay.Constant][15] /* ty=Tensor[(108, 8), float64] */, dtype="float64") /* ty=Tensor[(108, 8), float64] */;
    %115 = reshape(%113, newshape=[14, 9, 9]) /* ty=Tensor[(14, 9, 9), float64] */;
    %116 = reshape(%114, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %117 = @func_2597(%115, %116) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) */;
    %118 = cast(%var_7926, dtype="float32") /* ty=Tensor[(156), float32] */;
    %119 = cast(%var_7926, dtype="float32") /* ty=Tensor[(156), float32] */;
    %120 = cast(%var_7927, dtype="float64") /* ty=Tensor[(455), float64] */;
    %121 = cast(%var_7928, dtype="int8") /* ty=Tensor[(288), int8] */;
    %122 = reshape(%118, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
    %123 = reshape(%119, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
    %124 = reshape(%120, newshape=[455]) /* ty=Tensor[(455), float64] */;
    %125 = reshape(%121, newshape=[288]) /* ty=Tensor[(288), int8] */;
    %126 = @func_4349(%122, %123, %124, %125) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
    %127 = cast(meta[relay.Constant][16] /* ty=Tensor[(160, 2), int64] */, dtype="int64") /* ty=Tensor[(160, 2), int64] */;
    %128 = reshape(%127, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
    %129 = @func_2447(%128) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
    %130 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
    %131 = %117.2;
    %132 = %126.1;
    %133 = %129.1;
    (%130, %131, meta[relay.Constant][14] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][15] /* ty=Tensor[(108, 8), float64] */, %132, %var_7926, %var_7927, %var_7928, %133, meta[relay.Constant][16] /* ty=Tensor[(160, 2), int64] */)
  };
  %134(%var_7943, %var_7944, %var_7945) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(108, 8), float64], Tensor[(468), int16], Tensor[(156), float32], Tensor[(455), float64], Tensor[(288), int8], Tensor[(10, 2, 16), bool], Tensor[(160, 2), int64]) */
}

def @func_8323() -> (Tensor[(6, 14, 16), bool],) {
  @func_8321() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9134() -> (Tensor[(6, 14, 16), bool],) {
  %135 = @func_8321() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %136 = %135.0;
  (%136,)
}

def @func_5337(%var_5335: Tensor[(7, 6, 5), float32], %var_5336: Tensor[(1350), float64]) -> (Tensor[(7, 6, 5), float32], Tensor[(6, 15, 15), float64], Tensor[(1350), float64]) {
  %143 = fn (%var_5318: Tensor[(7, 6, 5), float32], %var_5332: Tensor[(1350), float64]) -> (Tensor[(7, 6, 5), float32], Tensor[(6, 15, 15), float64], Tensor[(1350), float64]) {
    %137 = cast(%var_5318, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
    %138 = cast(%var_5332, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %139 = reshape(%138, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %140 = @func_3506(%139) /* ty=(Tensor[(6, 15, 15), float64],) */;
    %141 = log10(%137) /* ty=Tensor[(7, 6, 5), float32] */;
    %142 = %140.0;
    (%141, %142, %var_5332)
  };
  %143(%var_5335, %var_5336) /* ty=(Tensor[(7, 6, 5), float32], Tensor[(6, 15, 15), float64], Tensor[(1350), float64]) */
}

def @func_8312() -> Tensor[(6, 14, 16), bool] {
  %144 = @func_7975() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %144.0
}

def @func_536(%var_533: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), float64] {
  %145 = cast(%var_533, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
  atanh(%145) /* ty=Tensor[(12, 9, 8), float64] */
}

def @func_9606() -> (Tensor[(6, 14, 16), bool], Tensor[(11, 11, 4), float64], Tensor[(6, 14, 16), bool]) {
  @func_9604() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(11, 11, 4), float64], Tensor[(6, 14, 16), bool]) */
}

def @func_9959(%var_9902: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(6, 14, 16), int8], Tensor[(6, 14, 16), bool]) {
  %146 = cast(%var_9902, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %147 = reshape(%146, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %148 = @func_8849(%147) /* ty=(Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) */;
  %149 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %150 = %149.0;
  %151 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 14, 16), bool] */, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%150, dtype="int8") /* ty=Tensor[(6, 14, 16), int8] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %155 = @func_8321() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %156 = %148.2;
  %157 = bitwise_or(%153, %154) /* ty=Tensor[(6, 14, 16), int8] */;
  %158 = %155.0;
  (%156, %var_9902, %157, %158)
}

def @func_6700(%var_6699: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
  %163 = fn (%var_6670: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
    %159 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
    %160 = shape_of(%var_6670, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%var_6670, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%161, %162) /* ty=Tensor[(5, 5, 10), float64] */
  };
  %163(%var_6699) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_3738(%var_3736: Tensor[(2, 9, 5), float64], %var_3737: Tensor[(864), float64]) -> (Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) {
  %175 = fn (%var_3718: Tensor[(2, 9, 5), float64], %var_3726: Tensor[(864), float64]) -> (Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) {
    %164 = cast(%var_3718, dtype="float64") /* ty=Tensor[(2, 9, 5), float64] */;
    %165 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %166 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 5), float64] */;
    %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %168 = cast(meta[relay.Constant][20] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %169 = cast(%var_3726, dtype="float64") /* ty=Tensor[(864), float64] */;
    %170 = reshape(%168, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
    %171 = reshape(%169, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %172 = @func_648(%170, %171) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
    %173 = mod(%166, %167) /* ty=Tensor[(2, 9, 5), float64] */;
    %174 = %172.2;
    (%173, %174, meta[relay.Constant][20] /* ty=Tensor[(468), int16] */, %var_3726)
  };
  %175(%var_3736, %var_3737) /* ty=(Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) */
}

def @func_8289(%var_8285: Tensor[(216), float32], %var_8286: uint16, %var_8287: Tensor[(156), float32], %var_8288: Tensor[(455), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(330, 1), uint16], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(455), float64]) {
  @func_8283(%var_8285, %var_8286, %var_8287, %var_8288) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(330, 1), uint16], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(455), float64]) */
}

def @func_2597(%var_2558: Tensor[(14, 9, 9), float64], %var_2563: Tensor[(864), float64]) -> (Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) {
  %176 = cast(meta[relay.Constant][21] /* ty=Tensor[(78, 6), int16] */, dtype="int16") /* ty=Tensor[(78, 6), int16] */;
  %177 = cast(%var_2563, dtype="float64") /* ty=Tensor[(864), float64] */;
  %178 = reshape(%176, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %179 = reshape(%177, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %180 = @func_648(%178, %179) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %181 = cast(meta[relay.Constant][22] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
  %182 = reshape(%181, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %183 = @func_1081(%182) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %184 = %180.6;
  %185 = cast(%184, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
  %186 = reshape(%185, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
  %187 = @func_177(%186) /* ty=(Tensor[(11, 6, 12), bool],) */;
  %188 = cast(%var_2558, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %189 = cosh(%188) /* ty=Tensor[(14, 9, 9), float64] */;
  %190 = cast(%var_2558, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %194 = floor_mod(%192, %193) /* ty=Tensor[(14, 9, 9), float64] */;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %196 = %183.2;
  %197 = %187.0;
  %198 = log2(%195) /* ty=Tensor[(14, 9, 9), float64] */;
  (%184, meta[relay.Constant][21] /* ty=Tensor[(78, 6), int16] */, %var_2563, %196, meta[relay.Constant][22] /* ty=Tensor[(320), int64] */, %197, %198)
}

def @func_4354(%var_4350: Tensor[(12, 13), float32], %var_4351: Tensor[(12, 13), float32], %var_4352: Tensor[(455), float64], %var_4353: Tensor[(288), int8]) -> (Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) {
  %216 = fn (%var_4332: Tensor[(12, 13), float32], %var_4333: Tensor[(12, 13), float32], %var_4341: Tensor[(455), float64], %var_4343: Tensor[(288), int8]) -> (Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) {
    %199 = cast(%var_4333, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
    %200 = shape_of(%var_4332, dtype="int32") /* ty=Tensor[(2), int32] */;
    %201 = cast(%var_4332, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
    %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %203 = cast(meta[relay.Constant][23] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %204 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %205 = cast(%var_4341, dtype="float64") /* ty=Tensor[(455), float64] */;
    %206 = cast(meta[relay.Constant][25] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
    %207 = cast(%var_4343, dtype="int8") /* ty=Tensor[(288), int8] */;
    %208 = reshape(%203, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
    %209 = reshape(%204, newshape=[]) /* ty=int16 */;
    %210 = reshape(%205, newshape=[5, 13, 7]) /* ty=Tensor[(5, 13, 7), float64] */;
    %211 = reshape(%206, newshape=[320]) /* ty=Tensor[(320), int64] */;
    %212 = reshape(%207, newshape=[288]) /* ty=Tensor[(288), int8] */;
    %213 = @func_3385(%208, %209, %210, %211, %212) /* ty=(Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) */;
    %214 = power(%201, %202) /* ty=Tensor[(12, 13), float32] */;
    %215 = %213.2;
    (%214, %215, meta[relay.Constant][23] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][24] /* ty=int16 */, %var_4341, meta[relay.Constant][25] /* ty=Tensor[(320), int64] */, %var_4343)
  };
  %216(%var_4350, %var_4351, %var_4352, %var_4353) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */
}

def @func_8494(%var_8492: Tensor[(6, 14, 16), bool], %var_8493: Tensor[(65, 7), float64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(156), float32], Tensor[(65, 7), float64], Tensor[(144, 2), int8]) {
  %233 = fn (%var_8470: Tensor[(6, 14, 16), bool], %var_8482: Tensor[(65, 7), float64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(156), float32], Tensor[(65, 7), float64], Tensor[(144, 2), int8]) {
    %217 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    %218 = cast(%var_8470, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
    %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %220 = cast(%217, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
    %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %222 = cast(meta[relay.Constant][26] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %223 = cast(meta[relay.Constant][26] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %224 = cast(%var_8482, dtype="float64") /* ty=Tensor[(65, 7), float64] */;
    %225 = cast(meta[relay.Constant][27] /* ty=Tensor[(144, 2), int8] */, dtype="int8") /* ty=Tensor[(144, 2), int8] */;
    %226 = reshape(%222, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
    %227 = reshape(%223, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
    %228 = reshape(%224, newshape=[455]) /* ty=Tensor[(455), float64] */;
    %229 = reshape(%225, newshape=[288]) /* ty=Tensor[(288), int8] */;
    %230 = @func_4349(%226, %227, %228, %229) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
    %231 = bitwise_and(%220, %221) /* ty=Tensor[(6, 14, 16), uint32] */;
    %232 = %230.2;
    (%231, %232, meta[relay.Constant][26] /* ty=Tensor[(156), float32] */, %var_8482, meta[relay.Constant][27] /* ty=Tensor[(144, 2), int8] */)
  };
  %233(%var_8492, %var_8493) /* ty=(Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(156), float32], Tensor[(65, 7), float64], Tensor[(144, 2), int8]) */
}

def @func_8753() -> (Tensor[(6, 14, 16), bool],) {
  %236 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %234 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %235 = %234.0;
    (%235,)
  };
  %236() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9604() -> (Tensor[(6, 14, 16), bool], Tensor[(11, 11, 4), float64], Tensor[(6, 14, 16), bool]) {
  %237 = cast(meta[relay.Constant][28] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %238 = reshape(%237, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
  %239 = @func_783(%238) /* ty=Tensor[(11, 11, 4), uint16] */;
  %240 = cast(meta[relay.Constant][28] /* ty=Tensor[(484), uint16] */, dtype="bool") /* ty=Tensor[(484), bool] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="bool") /* ty=Tensor[(11, 11, 4), bool] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %244 = less(%242, %243) /* ty=Tensor[(11, 11, 4), bool] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(11, 11, 4), float64] */;
  %246 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %247 = cosh(%245) /* ty=Tensor[(11, 11, 4), float64] */;
  %248 = @func_9091() /* ty=Tensor[(6, 14, 16), bool] */;
  (%246, %247, %248)
}

def @func_8949() -> (Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) {
  %259 = fn () -> (Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) {
    %249 = @func_8440() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %250 = cast(meta[relay.Constant][29] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %251 = reshape(%250, newshape=[484]) /* ty=Tensor[(484), uint16] */;
    %252 = @func_1239(%251) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
    %253 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %254 = reshape(%253, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), uint8] */;
    %255 = @func_3947(%254) /* ty=(Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */;
    %256 = %249.0;
    %257 = %252.0;
    %258 = %255.1;
    (%256, %257, meta[relay.Constant][29] /* ty=Tensor[(484), uint16] */, %258, meta[relay.Constant][30] /* ty=Tensor[(40), uint8] */)
  };
  %259() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) */
}

def @func_7790() -> Tensor[(6, 14, 16), bool] {
  @func_7788() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_9694(%var_9693: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool], Tensor[(156), float32], Tensor[(216), float32], Tensor[(156, 1), float32]) {
  %275 = fn (%var_9647: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool], Tensor[(156), float32], Tensor[(216), float32], Tensor[(156, 1), float32]) {
    %260 = @func_7871() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %261 = %260.0;
    %262 = cast(%var_9647, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %266 = @func_9072() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %267 = cast(meta[relay.Constant][31] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %268 = cast(meta[relay.Constant][32] /* ty=Tensor[(156, 1), float32] */, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
    %269 = reshape(%267, newshape=[216]) /* ty=Tensor[(216), float32] */;
    %270 = reshape(%268, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %271 = @func_8544(%269, %270) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) */;
    %272 = less_equal(%264, %265) /* ty=Tensor[(6, 14, 16), bool] */;
    %273 = %266.0;
    %274 = %271.6;
    (%272, %273, %274, meta[relay.Constant][31] /* ty=Tensor[(216), float32] */, meta[relay.Constant][32] /* ty=Tensor[(156, 1), float32] */)
  };
  %275(%var_9693) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool], Tensor[(156), float32], Tensor[(216), float32], Tensor[(156, 1), float32]) */
}

def @func_1241(%var_1240: Tensor[(484), uint16]) -> (Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
  %281 = fn (%var_1230: Tensor[(484), uint16]) -> (Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
    %276 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 8, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
    %277 = cast(%var_1230, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %278 = reshape(%277, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
    %279 = atanh(%276) /* ty=Tensor[(7, 8, 13), float64] */;
    %280 = @func_783(%278) /* ty=Tensor[(11, 11, 4), uint16] */;
    (%279, %280, %var_1230)
  };
  %281(%var_1240) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */
}

def @func_8441() -> (Tensor[(6, 14, 16), bool],) {
  %284 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %282 = @func_7871() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %283 = %282.0;
    (%283,)
  };
  %284() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_8344() -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) {
  %288 = fn () -> (Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) {
    %285 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %286 = %285.0;
    %287 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    (%286, %287)
  };
  %288() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) */
}

def @func_1081(%var_1034: Tensor[(10, 2, 16), int64]) -> (Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) {
  %289 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 2, 16), int64] */, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %290 = shape_of(%var_1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_1034, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %293 = greater(%291, %292) /* ty=Tensor[(10, 2, 16), bool] */;
  %294 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 2, 16), int64] */, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="bool") /* ty=Tensor[(10, 2, 16), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = cast(meta[relay.Constant][35] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %299 = cast(meta[relay.Constant][36] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %300 = reshape(%298, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %301 = reshape(%299, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %302 = @func_648(%300, %301) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %303 = less(%296, %297) /* ty=Tensor[(10, 2, 16), bool] */;
  %304 = %302.1;
  (%303, %304, meta[relay.Constant][35] /* ty=Tensor[(468), int16] */, meta[relay.Constant][36] /* ty=Tensor[(864), float64] */)
}

def @func_6580(%var_6578: Tensor[(8, 13, 3), float32], %var_6579: Tensor[(6), float64]) -> (Tensor[(8, 13, 3), float32], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
  %311 = fn (%var_6559: Tensor[(8, 13, 3), float32], %var_6575: Tensor[(6), float64]) -> (Tensor[(8, 13, 3), float32], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
    %305 = cast(%var_6559, dtype="float32") /* ty=Tensor[(8, 13, 3), float32] */;
    %306 = cast(%var_6575, dtype="float64") /* ty=Tensor[(6), float64] */;
    %307 = reshape(%306, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
    %308 = @func_1655(%307) /* ty=(Tensor[(1, 6, 1), float64],) */;
    %309 = sin(%305) /* ty=Tensor[(8, 13, 3), float32] */;
    %310 = %308.0;
    (%309, %310, %var_6575)
  };
  %311(%var_6578, %var_6579) /* ty=(Tensor[(8, 13, 3), float32], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */
}

def @func_7662(%var_7634: Tensor[(280), uint64], %var_7659: Tensor[(90), float64], %var_7660: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) {
  %312 = cast(%var_7634, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %313 = cast(meta[relay.Constant][37] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %314 = cast(%var_7634, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %315 = reshape(%312, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %316 = reshape(%313, newshape=[]) /* ty=int16 */;
  %317 = reshape(%314, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %318 = @func_2488(%315, %316, %317) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
  %319 = cast(meta[relay.Constant][38] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
  %320 = reshape(%319, newshape=[484]) /* ty=Tensor[(484), uint16] */;
  %321 = @func_1239(%320) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
  %322 = cast(%var_7659, dtype="float64") /* ty=Tensor[(90), float64] */;
  %323 = cast(%var_7660, dtype="float64") /* ty=Tensor[(864), float64] */;
  %324 = reshape(%322, newshape=[2, 9, 5]) /* ty=Tensor[(2, 9, 5), float64] */;
  %325 = reshape(%323, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %326 = @func_3735(%324, %325) /* ty=(Tensor[(2, 9, 5), float64], Tensor[(864), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %327 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %328 = %318.1;
  %329 = %321.1;
  %330 = %326.3;
  (%327, %328, %var_7634, meta[relay.Constant][37] /* ty=int16 */, %329, meta[relay.Constant][38] /* ty=Tensor[(484), uint16] */, %330, %var_7659, %var_7660)
}

def @func_8679(%var_8678: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(6, 14, 16), bool], Tensor[(1, 6, 1), float64], Tensor[(1200), float64], Tensor[(6, 14, 16), float64]) {
  %347 = fn (%var_8618: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(6, 14, 16), bool], Tensor[(1, 6, 1), float64], Tensor[(1200), float64], Tensor[(6, 14, 16), float64]) {
    %331 = cast(%var_8618, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %332 = reshape(%331, newshape=[484]) /* ty=Tensor[(484), uint16] */;
    %333 = @func_1239(%332) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
    %334 = cast(meta[relay.Constant][39] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %335 = %333.1;
    %336 = cast(%335, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
    %337 = reshape(%334, newshape=[12, 10, 10]) /* ty=Tensor[(12, 10, 10), float64] */;
    %338 = reshape(%336, newshape=[484]) /* ty=Tensor[(484), uint16] */;
    %339 = @func_6148(%337, %338) /* ty=(Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) */;
    %340 = @func_8312() /* ty=Tensor[(6, 14, 16), bool] */;
    %341 = cast(%340, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
    %342 = log(%341) /* ty=Tensor[(6, 14, 16), float32] */;
    %343 = cast(%342, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
    %344 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
    %345 = %339.2;
    %346 = sigmoid(%343) /* ty=Tensor[(6, 14, 16), float64] */;
    (%335, %var_8618, %344, %345, meta[relay.Constant][39] /* ty=Tensor[(1200), float64] */, %346)
  };
  %347(%var_8678) /* ty=(Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(6, 14, 16), bool], Tensor[(1, 6, 1), float64], Tensor[(1200), float64], Tensor[(6, 14, 16), float64]) */
}

def @func_5870(%var_5866: Tensor[(864), float64], %var_5867: Tensor[(3, 2), float64], %var_5868: Tensor[(8, 6, 13), float64], %var_5869: Tensor[(320), int64]) -> (Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) {
  %381 = fn (%var_5847: Tensor[(864), float64], %var_5849: Tensor[(3, 2), float64], %var_5856: Tensor[(8, 6, 13), float64], %var_5861: Tensor[(320), int64]) -> (Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) {
    %348 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 20), float32] */, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %349 = cast(meta[relay.Constant][41] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
    %350 = cast(%var_5847, dtype="float64") /* ty=Tensor[(864), float64] */;
    %351 = cast(meta[relay.Constant][42] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %352 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 20), float32] */, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %353 = cast(%var_5849, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
    %354 = cast(meta[relay.Constant][43] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %355 = reshape(%348, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
    %356 = reshape(%349, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
    %357 = reshape(%350, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %358 = reshape(%351, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
    %359 = reshape(%352, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
    %360 = reshape(%353, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %361 = reshape(%354, newshape=[]) /* ty=int16 */;
    %362 = @func_2788(%355, %356, %357, %358, %359, %360, %361) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
    %363 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 13), float32] */;
    %364 = sigmoid(%363) /* ty=Tensor[(8, 6, 13), float32] */;
    %365 = cast(%364, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %366 = sinh(%365) /* ty=Tensor[(8, 6, 13), float64] */;
    %367 = cast(%var_5856, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %371 = cast(%var_5861, dtype="int64") /* ty=Tensor[(320), int64] */;
    %372 = reshape(%371, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
    %373 = @func_1081(%372) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
    %374 = %362.7;
    %375 = cast(%374, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
    %376 = reshape(%375, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
    %377 = @func_2105(%376) /* ty=(Tensor[(16, 9, 16), float64],) */;
    %378 = floor_mod(%369, %370) /* ty=Tensor[(8, 6, 13), float64] */;
    %379 = %373.1;
    %380 = %377.0;
    (%374, meta[relay.Constant][40] /* ty=Tensor[(3, 20), float32] */, meta[relay.Constant][41] /* ty=Tensor[(468, 1), int16] */, %var_5847, meta[relay.Constant][42] /* ty=Tensor[(1134), float64] */, %var_5849, meta[relay.Constant][43] /* ty=int16 */, %378, %379, %var_5861, %380)
  };
  %381(%var_5866, %var_5867, %var_5868, %var_5869) /* ty=(Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) */
}

def @func_5088(%var_5084: uint16, %var_5085: Tensor[(10, 11, 3), uint16], %var_5086: Tensor[(156, 1), float32], %var_5087: Tensor[(455), float64]) -> (Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) {
  @func_5082(%var_5084, %var_5085, %var_5086, %var_5087) /* ty=(Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) */
}

def @func_783(%var_771: Tensor[(11, 11, 4), uint16]) -> Tensor[(11, 11, 4), uint16] {
  %382 = cast(%var_771, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
  %383 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(11, 11, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 11, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 11, 4), uint16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%384, %385) /* ty=Tensor[(11, 11, 4), uint16] */
}

def @func_8314() -> Tensor[(6, 14, 16), bool] {
  @func_8312() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_5666(%var_5665: Tensor[(9, 11, 3), int64]) -> Tensor[(9, 11, 3), int64] {
  %390 = fn (%var_5654: Tensor[(9, 11, 3), int64]) -> Tensor[(9, 11, 3), int64] {
    %386 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 11, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 11, 3), int64] */;
    %387 = shape_of(%var_5654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(%var_5654, dtype="int64") /* ty=Tensor[(9, 11, 3), int64] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_xor(%388, %389) /* ty=Tensor[(9, 11, 3), int64] */
  };
  %390(%var_5665) /* ty=Tensor[(9, 11, 3), int64] */
}

def @func_7751() -> (Tensor[(6, 14, 16), bool],) {
  %392 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %391 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    (%391,)
  };
  %392() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9766(%var_9762: Tensor[(624), float64], %var_9763: Tensor[(8, 40), int64]) -> (Tensor[(6, 14, 16), bool], Tensor[(6), float64], Tensor[(624), float64], Tensor[(8, 40), int64], Tensor[(2304), int16]) {
  %393 = @func_9072() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %394 = cast(%var_9762, dtype="float64") /* ty=Tensor[(624), float64] */;
  %395 = cast(%var_9763, dtype="int64") /* ty=Tensor[(8, 40), int64] */;
  %396 = cast(meta[relay.Constant][47] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %397 = cast(%var_9762, dtype="float64") /* ty=Tensor[(624), float64] */;
  %398 = reshape(%394, newshape=[312, 2]) /* ty=Tensor[(312, 2), float64] */;
  %399 = reshape(%395, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %400 = reshape(%396, newshape=[2304]) /* ty=Tensor[(2304), int16] */;
  %401 = reshape(%397, newshape=[312, 2]) /* ty=Tensor[(312, 2), float64] */;
  %402 = @func_9014(%398, %399, %400, %401) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) */;
  %403 = %393.0;
  %404 = %402.3;
  (%403, %404, %var_9762, %var_9763, meta[relay.Constant][47] /* ty=Tensor[(2304), int16] */)
}

def @func_8094(%var_8092: Tensor[(14, 6, 11), float32]) -> Tensor[(14, 6, 11), bool] {
  @func_8091(%var_8092) /* ty=Tensor[(14, 6, 11), bool] */
}

def @func_3508(%var_3507: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64],) {
  %407 = fn (%var_3501: Tensor[(6, 15, 15), float64]) -> (Tensor[(6, 15, 15), float64],) {
    %405 = cast(%var_3501, dtype="float64") /* ty=Tensor[(6, 15, 15), float64] */;
    %406 = acos(%405) /* ty=Tensor[(6, 15, 15), float64] */;
    (%406,)
  };
  %407(%var_3507) /* ty=(Tensor[(6, 15, 15), float64],) */
}

def @func_6151(%var_6149: Tensor[(12, 10, 10), float64], %var_6150: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) {
  %428 = fn (%var_6108: Tensor[(12, 10, 10), float64], %var_6119: Tensor[(484), uint16]) -> (Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) {
    %408 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %409 = reshape(%408, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
    %410 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %411 = reshape(%410, newshape=[484]) /* ty=Tensor[(484), uint16] */;
    %412 = @func_1239(%411) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
    %413 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
    %414 = reshape(%413, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
    %415 = @func_1655(%414) /* ty=(Tensor[(1, 6, 1), float64],) */;
    %416 = cast(%var_6108, dtype="float64") /* ty=Tensor[(12, 10, 10), float64] */;
    %417 = atan(%416) /* ty=Tensor[(12, 10, 10), float64] */;
    %418 = cast(%417, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
    %419 = cast(%var_6119, dtype="float32") /* ty=Tensor[(484), float32] */;
    %420 = atanh(%419) /* ty=Tensor[(484), float32] */;
    %421 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 1), float64] */, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
    %422 = cast(%420, dtype="bool") /* ty=Tensor[(484), bool] */;
    %423 = @func_783(%409) /* ty=Tensor[(11, 11, 4), uint16] */;
    %424 = %412.2;
    %425 = %415.0;
    %426 = atanh(%418) /* ty=Tensor[(12, 10, 10), float32] */;
    %427 = logical_or(%421, %422) /* ty=Tensor[(6, 484), bool] */;
    (%423, %424, %425, %426, %427)
  };
  %428(%var_6149, %var_6150) /* ty=(Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(12, 10, 10), float32], Tensor[(6, 484), bool]) */
}

def @func_8091(%var_8068: Tensor[(14, 6, 11), float32]) -> Tensor[(14, 6, 11), bool] {
  %429 = cast(%var_8068, dtype="float32") /* ty=Tensor[(14, 6, 11), float32] */;
  %430 = sqrt(%429) /* ty=Tensor[(14, 6, 11), float32] */;
  %431 = cast(%430, dtype="bool") /* ty=Tensor[(14, 6, 11), bool] */;
  %432 = shape_of(%var_8068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%var_8068, dtype="bool") /* ty=Tensor[(14, 6, 11), bool] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%433, %434) /* ty=Tensor[(14, 6, 11), bool] */
}

def @func_2108(%var_2106: Tensor[(16, 9, 16), float64]) -> (Tensor[(16, 9, 16), float64],) {
  @func_2105(%var_2106) /* ty=(Tensor[(16, 9, 16), float64],) */
}

def @func_8852(%var_8850: Tensor[(40), uint8]) -> (Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) {
  @func_8849(%var_8850) /* ty=(Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) */
}

def @func_6511(%var_6509: Tensor[(1, 2, 7), float32]) -> (Tensor[(1, 2, 7), float32],) {
  @func_6508(%var_6509) /* ty=(Tensor[(1, 2, 7), float32],) */
}

def @func_9301(%var_9283: Tensor[(90), float64], %var_9284: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280, 1), uint64], Tensor[(90), float64], Tensor[(864), float64]) {
  %435 = cast(meta[relay.Constant][49] /* ty=Tensor[(280, 1), uint64] */, dtype="uint64") /* ty=Tensor[(280, 1), uint64] */;
  %436 = cast(%var_9283, dtype="float64") /* ty=Tensor[(90), float64] */;
  %437 = cast(%var_9284, dtype="float64") /* ty=Tensor[(864), float64] */;
  %438 = reshape(%435, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %439 = reshape(%436, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %440 = reshape(%437, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %441 = @func_7662(%438, %439, %440) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) */;
  %442 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %443 = %441.1;
  (%442, %443, meta[relay.Constant][49] /* ty=Tensor[(280, 1), uint64] */, %var_9283, %var_9284)
}

def @func_9136() -> (Tensor[(6, 14, 16), bool],) {
  @func_9134() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_4773(%var_4770: Tensor[(6, 6, 13), float64], %var_4771: Tensor[(1134), float64], %var_4772: Tensor[(6), float64]) -> (Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) {
  @func_4768(%var_4770, %var_4771, %var_4772) /* ty=(Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) */
}

def @func_5891(%var_5876: float64, %var_5877: Tensor[(15, 4, 9), float64]) -> Tensor[(15, 4, 9), float64] {
  %444 = cast(%var_5876, dtype="float64") /* ty=float64 */;
  %445 = cast(%var_5877, dtype="float64") /* ty=Tensor[(15, 4, 9), float64] */;
  power(%444, %445) /* ty=Tensor[(15, 4, 9), float64] */
}

def @func_2105(%var_2102: Tensor[(16, 9, 16), float64]) -> (Tensor[(16, 9, 16), float64],) {
  %446 = cast(%var_2102, dtype="float64") /* ty=Tensor[(16, 9, 16), float64] */;
  %447 = sqrt(%446) /* ty=Tensor[(16, 9, 16), float64] */;
  (%447,)
}

def @func_7871() -> (Tensor[(6, 14, 16), bool],) {
  %448 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  (%448,)
}

def @func_6557(%var_6554: Tensor[(5, 14, 16), int8], %var_6555: Tensor[(5, 14, 16), int8], %var_6556: Tensor[(320), int64]) -> (Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) {
  %464 = fn (%var_6533: Tensor[(5, 14, 16), int8], %var_6534: Tensor[(5, 14, 16), int8], %var_6551: Tensor[(320), int64]) -> (Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) {
    %449 = cast(%var_6534, dtype="int8") /* ty=Tensor[(5, 14, 16), int8] */;
    %450 = shape_of(%var_6533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %451 = cast(%var_6533, dtype="int8") /* ty=Tensor[(5, 14, 16), int8] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %453 = cast(meta[relay.Constant][50] /* ty=Tensor[(242, 2), uint16] */, dtype="uint16") /* ty=Tensor[(242, 2), uint16] */;
    %454 = reshape(%453, newshape=[484]) /* ty=Tensor[(484), uint16] */;
    %455 = @func_1239(%454) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */;
    %456 = %455.1;
    %457 = cast(%456, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
    %458 = cast(%var_6551, dtype="int64") /* ty=Tensor[(320), int64] */;
    %459 = reshape(%458, newshape=[8, 40]) /* ty=Tensor[(8, 40), int64] */;
    %460 = @func_2447(%459) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */;
    %461 = bitwise_and(%451, %452) /* ty=Tensor[(5, 14, 16), int8] */;
    %462 = atan(%457) /* ty=Tensor[(11, 11, 4), float32] */;
    %463 = %460.2;
    (%461, meta[relay.Constant][50] /* ty=Tensor[(242, 2), uint16] */, %462, %463, %var_6551)
  };
  %464(%var_6554, %var_6555, %var_6556) /* ty=(Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) */
}

def @func_2449(%var_2448: Tensor[(8, 40), int64]) -> (Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) {
  %474 = fn (%var_2440: Tensor[(8, 40), int64]) -> (Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) {
    %465 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
    %466 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %469 = cast(%var_2440, dtype="int64") /* ty=Tensor[(8, 40), int64] */;
    %470 = reshape(%469, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
    %471 = @func_1081(%470) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
    %472 = right_shift(%467, %468) /* ty=Tensor[(6, 4, 11), int16] */;
    %473 = %471.0;
    (%472, %473, %var_2440)
  };
  %474(%var_2448) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(10, 2, 16), bool], Tensor[(8, 40), int64]) */
}

def @func_7123(%var_7118: Tensor[(12, 7, 12), int8], %var_7119: Tensor[(12, 7, 12), int8], %var_7120: Tensor[(392), uint32], %var_7121: Tensor[(2304), int16], %var_7122: Tensor[(320), int64]) -> (Tensor[(12, 7, 12), int8], Tensor[(12, 9, 8), float64], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(320), int64]) {
  @func_7116(%var_7118, %var_7119, %var_7120, %var_7121, %var_7122) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(12, 9, 8), float64], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(320), int64]) */
}

def @func_2940(%var_2939: Tensor[(15, 4, 12), float32]) -> (Tensor[(15, 4, 12), bool], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
  %483 = fn (%var_2915: Tensor[(15, 4, 12), float32]) -> (Tensor[(15, 4, 12), bool], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) {
    %475 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 4, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 4, 12), bool] */;
    %476 = shape_of(%var_2915, dtype="int32") /* ty=Tensor[(3), int32] */;
    %477 = cast(%var_2915, dtype="bool") /* ty=Tensor[(15, 4, 12), bool] */;
    %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %479 = cast(meta[relay.Constant][54] /* ty=Tensor[(484), uint16] */, dtype="uint16") /* ty=Tensor[(484), uint16] */;
    %480 = reshape(%479, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
    %481 = not_equal(%477, %478) /* ty=Tensor[(15, 4, 12), bool] */;
    %482 = @func_783(%480) /* ty=Tensor[(11, 11, 4), uint16] */;
    (%481, %482, meta[relay.Constant][54] /* ty=Tensor[(484), uint16] */)
  };
  %483(%var_2939) /* ty=(Tensor[(15, 4, 12), bool], Tensor[(11, 11, 4), uint16], Tensor[(484), uint16]) */
}

def @func_7439(%var_7437: Tensor[(2, 16, 4), int16], %var_7438: Tensor[(2, 16, 4), int16]) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), float32], Tensor[(16, 9, 16), float64], Tensor[(2304), float64]) {
  %495 = fn (%var_7411: Tensor[(2, 16, 4), int16], %var_7412: Tensor[(2, 16, 4), int16]) -> (Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), float32], Tensor[(16, 9, 16), float64], Tensor[(2304), float64]) {
    %484 = cast(%var_7412, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %485 = shape_of(%var_7411, dtype="int32") /* ty=Tensor[(3), int32] */;
    %486 = cast(%var_7411, dtype="bool") /* ty=Tensor[(2, 16, 4), bool] */;
    %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %488 = cast(%var_7411, dtype="float32") /* ty=Tensor[(2, 16, 4), float32] */;
    %489 = cast(meta[relay.Constant][55] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %490 = reshape(%489, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
    %491 = @func_2105(%490) /* ty=(Tensor[(16, 9, 16), float64],) */;
    %492 = less_equal(%486, %487) /* ty=Tensor[(2, 16, 4), bool] */;
    %493 = sqrt(%488) /* ty=Tensor[(2, 16, 4), float32] */;
    %494 = %491.0;
    (%492, %493, %494, meta[relay.Constant][55] /* ty=Tensor[(2304), float64] */)
  };
  %495(%var_7437, %var_7438) /* ty=(Tensor[(2, 16, 4), bool], Tensor[(2, 16, 4), float32], Tensor[(16, 9, 16), float64], Tensor[(2304), float64]) */
}

def @func_6366(%var_6363: Tensor[(13, 16, 2), uint32], %var_6364: Tensor[(13, 16, 2), uint32], %var_6365: Tensor[(1134), float64]) -> (Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], Tensor[(13, 16, 2), uint8]) {
  %516 = fn (%var_6341: Tensor[(13, 16, 2), uint32], %var_6342: Tensor[(13, 16, 2), uint32], %var_6348: Tensor[(1134), float64]) -> (Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], Tensor[(13, 16, 2), uint8]) {
    %496 = cast(meta[relay.Constant][56] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %497 = cast(%var_6348, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %498 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
    %499 = reshape(%496, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), float64] */;
    %500 = reshape(%497, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
    %501 = reshape(%498, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %502 = @func_4768(%499, %500, %501) /* ty=(Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) */;
    %503 = cast(%var_6342, dtype="uint32") /* ty=Tensor[(13, 16, 2), uint32] */;
    %504 = shape_of(%var_6341, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%var_6341, dtype="uint32") /* ty=Tensor[(13, 16, 2), uint32] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %507 = multiply(%505, %506) /* ty=Tensor[(13, 16, 2), uint32] */;
    %508 = cast(%507, dtype="float32") /* ty=Tensor[(13, 16, 2), float32] */;
    %509 = asinh(%508) /* ty=Tensor[(13, 16, 2), float32] */;
    %510 = cast(%507, dtype="uint8") /* ty=Tensor[(13, 16, 2), uint8] */;
    %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
    %512 = cast(%509, dtype="uint8") /* ty=Tensor[(13, 16, 2), uint8] */;
    %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %514 = %502.2;
    %515 = bitwise_or(%512, %513) /* ty=Tensor[(13, 16, 2), uint8] */;
    (%514, meta[relay.Constant][56] /* ty=Tensor[(468), float64] */, %var_6348, meta[relay.Constant][57] /* ty=Tensor[(3, 2), float64] */, %515)
  };
  %516(%var_6363, %var_6364, %var_6365) /* ty=(Tensor[(864), float64], Tensor[(468), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], Tensor[(13, 16, 2), uint8]) */
}

def @func_5565(%var_5563: Tensor[(15, 15, 9), int64], %var_5564: Tensor[(15, 15, 9), int64]) -> Tensor[(15, 15, 9), int64] {
  %521 = fn (%var_5556: Tensor[(15, 15, 9), int64], %var_5557: Tensor[(15, 15, 9), int64]) -> Tensor[(15, 15, 9), int64] {
    %517 = cast(%var_5557, dtype="int64") /* ty=Tensor[(15, 15, 9), int64] */;
    %518 = shape_of(%var_5556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%var_5556, dtype="int64") /* ty=Tensor[(15, 15, 9), int64] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    maximum(%519, %520) /* ty=Tensor[(15, 15, 9), int64] */
  };
  %521(%var_5563, %var_5564) /* ty=Tensor[(15, 15, 9), int64] */
}

def @func_9198(%var_9197: Tensor[(242, 2), uint16]) -> (Tensor[(6, 14, 16), float64], Tensor[(11, 11, 4), uint16], Tensor[(242, 2), uint16]) {
  %529 = fn (%var_9171: Tensor[(242, 2), uint16]) -> (Tensor[(6, 14, 16), float64], Tensor[(11, 11, 4), uint16], Tensor[(242, 2), uint16]) {
    %522 = @func_8440() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %523 = %522.0;
    %524 = cast(%523, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
    %525 = cast(%var_9171, dtype="uint16") /* ty=Tensor[(242, 2), uint16] */;
    %526 = reshape(%525, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), uint16] */;
    %527 = cosh(%524) /* ty=Tensor[(6, 14, 16), float64] */;
    %528 = @func_783(%526) /* ty=Tensor[(11, 11, 4), uint16] */;
    (%527, %528, %var_9171)
  };
  %529(%var_9197) /* ty=(Tensor[(6, 14, 16), float64], Tensor[(11, 11, 4), uint16], Tensor[(242, 2), uint16]) */
}

def @func_3241(%var_3239: Tensor[(12, 11, 2), int8], %var_3240: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), bool] {
  @func_3237(%var_3239, %var_3240) /* ty=Tensor[(12, 11, 2), bool] */
}

def @func_9092() -> Tensor[(6, 14, 16), bool] {
  %531 = fn () -> Tensor[(6, 14, 16), bool] {
    %530 = @func_7975() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %530.0
  };
  %531() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_7116(%var_7073: Tensor[(12, 7, 12), int8], %var_7074: Tensor[(12, 7, 12), int8], %var_7079: Tensor[(392), uint32], %var_7080: Tensor[(2304), int16], %var_7081: Tensor[(320), int64]) -> (Tensor[(12, 7, 12), int8], Tensor[(12, 9, 8), float64], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(320), int64]) {
  %532 = cast(%var_7074, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %533 = shape_of(%var_7073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%var_7073, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %536 = cast(%var_7079, dtype="uint32") /* ty=Tensor[(392), uint32] */;
  %537 = cast(%var_7080, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %538 = cast(%var_7081, dtype="int64") /* ty=Tensor[(320), int64] */;
  %539 = reshape(%536, newshape=[14, 14, 2]) /* ty=Tensor[(14, 14, 2), uint32] */;
  %540 = reshape(%537, newshape=[2304, 1]) /* ty=Tensor[(2304, 1), int16] */;
  %541 = reshape(%538, newshape=[80, 4]) /* ty=Tensor[(80, 4), int64] */;
  %542 = @func_1954(%539, %540, %541) /* ty=(Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) */;
  %543 = subtract(%534, %535) /* ty=Tensor[(12, 7, 12), int8] */;
  %544 = %542.1;
  (%543, %544, %var_7079, %var_7080, %var_7081)
}

def @func_9247() -> Tensor[(6, 14, 16), bool] {
  %546 = fn () -> Tensor[(6, 14, 16), bool] {
    %545 = @func_8343() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) */;
    %545.1
  };
  %546() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_1370(%var_1369: Tensor[(10, 13, 5), float32]) -> (Tensor[(10, 13, 5), bool], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(10, 13, 5), float32]) {
  %565 = fn (%var_1340: Tensor[(10, 13, 5), float32]) -> (Tensor[(10, 13, 5), bool], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(10, 13, 5), float32]) {
    %547 = cast(meta[relay.Constant][58] /* ty=Tensor[(10, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
    %548 = acosh(%547) /* ty=Tensor[(10, 13, 5), float32] */;
    %549 = cast(%var_1340, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
    %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %551 = cast(%548, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
    %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %553 = cast(meta[relay.Constant][59] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
    %554 = reshape(%553, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
    %555 = @func_177(%554) /* ty=(Tensor[(11, 6, 12), bool],) */;
    %556 = cast(%548, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
    %557 = sinh(%556) /* ty=Tensor[(10, 13, 5), float32] */;
    %558 = cast(%var_1340, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
    %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%557, dtype="float32") /* ty=Tensor[(10, 13, 5), float32] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %562 = not_equal(%551, %552) /* ty=Tensor[(10, 13, 5), bool] */;
    %563 = %555.0;
    %564 = floor_mod(%560, %561) /* ty=Tensor[(10, 13, 5), float32] */;
    (%562, %563, meta[relay.Constant][59] /* ty=Tensor[(792), int64] */, %564)
  };
  %565(%var_1369) /* ty=(Tensor[(10, 13, 5), bool], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(10, 13, 5), float32]) */
}

def @func_9523(%var_9521: Tensor[(2, 8, 7), float32]) -> (Tensor[(2, 8, 7), float32], Tensor[(12, 9, 8), float64], Tensor[(864), float64]) {
  @func_9520(%var_9521) /* ty=(Tensor[(2, 8, 7), float32], Tensor[(12, 9, 8), float64], Tensor[(864), float64]) */
}

def @func_7710(%var_7687: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) {
  %566 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %567 = cast(%var_7687, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %571 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 14, 16), bool] */, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %572 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%566, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %575 = power(%569, %570) /* ty=Tensor[(6, 14, 16), float32] */;
  %576 = floor_mod(%573, %574) /* ty=Tensor[(6, 14, 16), float64] */;
  (%575, %576)
}

def @func_9352(%var_9330: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), uint8],) {
  %577 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %578 = %577.0;
  %579 = cast(%var_9330, dtype="uint8") /* ty=Tensor[(6, 14, 16), uint8] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%578, dtype="uint8") /* ty=Tensor[(6, 14, 16), uint8] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %583 = add(%581, %582) /* ty=Tensor[(6, 14, 16), uint8] */;
  (%583,)
}

def @func_9962(%var_9960: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(6, 14, 16), int8], Tensor[(6, 14, 16), bool]) {
  @func_9959(%var_9960) /* ty=(Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(6, 14, 16), int8], Tensor[(6, 14, 16), bool]) */
}

def @func_7596(%var_7592: Tensor[(216), float32], %var_7593: Tensor[(455, 1), float64], %var_7594: Tensor[(1350), float64], %var_7595: Tensor[(455, 6), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(1, 156), float32], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(455, 1), float32], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(6, 15, 15), float64], Tensor[(1350), float64], Tensor[(455, 6), float32]) {
  %616 = fn (%var_7543: Tensor[(216), float32], %var_7546: Tensor[(455, 1), float64], %var_7569: Tensor[(1350), float64], %var_7571: Tensor[(455, 6), float64]) -> (Tensor[(6, 14, 16), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(1, 156), float32], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(455, 1), float32], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(6, 15, 15), float64], Tensor[(1350), float64], Tensor[(455, 6), float32]) {
    %584 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    %585 = cast(%584, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
    %586 = cast(%var_7543, dtype="float32") /* ty=Tensor[(216), float32] */;
    %587 = cast(%var_7543, dtype="float32") /* ty=Tensor[(216), float32] */;
    %588 = cast(meta[relay.Constant][61] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %589 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 156), float32] */, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
    %590 = cast(%var_7546, dtype="float64") /* ty=Tensor[(455, 1), float64] */;
    %591 = reshape(%586, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
    %592 = reshape(%587, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
    %593 = reshape(%588, newshape=[]) /* ty=uint16 */;
    %594 = reshape(%589, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %595 = reshape(%590, newshape=[455]) /* ty=Tensor[(455), float64] */;
    %596 = @func_5181(%591, %592, %593, %594, %595) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
    %597 = cast(meta[relay.Constant][63] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
    %598 = reshape(%597, newshape=[11, 6, 12]) /* ty=Tensor[(11, 6, 12), int64] */;
    %599 = @func_177(%598) /* ty=(Tensor[(11, 6, 12), bool],) */;
    %600 = cast(%var_7546, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
    %601 = cast(meta[relay.Constant][64] /* ty=Tensor[(320), int64] */, dtype="int64") /* ty=Tensor[(320), int64] */;
    %602 = reshape(%601, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
    %603 = @func_1081(%602) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
    %604 = cast(%var_7569, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %605 = reshape(%604, newshape=[6, 15, 15]) /* ty=Tensor[(6, 15, 15), float64] */;
    %606 = @func_3506(%605) /* ty=(Tensor[(6, 15, 15), float64],) */;
    %607 = cast(%var_7546, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
    %608 = cast(%var_7571, dtype="float32") /* ty=Tensor[(455, 6), float32] */;
    %609 = log2(%585) /* ty=Tensor[(6, 14, 16), float32] */;
    %610 = %596.4;
    %611 = %599.0;
    %612 = erf(%600) /* ty=Tensor[(455, 1), float32] */;
    %613 = %603.1;
    %614 = %606.0;
    %615 = divide(%607, %608) /* ty=Tensor[(455, 6), float32] */;
    (%609, %610, %var_7543, meta[relay.Constant][61] /* ty=uint16 */, meta[relay.Constant][62] /* ty=Tensor[(1, 156), float32] */, %611, meta[relay.Constant][63] /* ty=Tensor[(792), int64] */, %612, %613, meta[relay.Constant][64] /* ty=Tensor[(320), int64] */, %614, %var_7569, %615)
  };
  %616(%var_7592, %var_7593, %var_7594, %var_7595) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(1, 156), float32], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(455, 1), float32], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(6, 15, 15), float64], Tensor[(1350), float64], Tensor[(455, 6), float32]) */
}

def @func_6775(%var_6730: Tensor[(2, 15), uint32], %var_6731: Tensor[(2, 15), uint32]) -> Tensor[(2, 15), bool] {
  %617 = cast(%var_6731, dtype="bool") /* ty=Tensor[(2, 15), bool] */;
  %618 = shape_of(%var_6730, dtype="int32") /* ty=Tensor[(2), int32] */;
  %619 = cast(%var_6730, dtype="bool") /* ty=Tensor[(2, 15), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%619, %620) /* ty=Tensor[(2, 15), bool] */
}

def @func_5082(%var_5063: uint16, %var_5064: Tensor[(10, 11, 3), uint16], %var_5072: Tensor[(156, 1), float32], %var_5073: Tensor[(455), float64]) -> (Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) {
  %621 = cast(%var_5063, dtype="bool") /* ty=bool */;
  %622 = cast(%var_5064, dtype="bool") /* ty=Tensor[(10, 11, 3), bool] */;
  %623 = cast(%var_5072, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %624 = cast(%var_5072, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %625 = cast(%var_5073, dtype="float64") /* ty=Tensor[(455), float64] */;
  %626 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %627 = reshape(%623, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %628 = reshape(%624, newshape=[12, 13]) /* ty=Tensor[(12, 13), float32] */;
  %629 = reshape(%625, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %630 = reshape(%626, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %631 = @func_4349(%627, %628, %629, %630) /* ty=(Tensor[(12, 13), float32], Tensor[(468), int16], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8]) */;
  %632 = greater(%621, %622) /* ty=Tensor[(10, 11, 3), bool] */;
  %633 = %631.5;
  (%632, %633, %var_5072, %var_5073, meta[relay.Constant][65] /* ty=Tensor[(288), int8] */)
}

def @func_8283(%var_8268: Tensor[(216), float32], %var_8269: uint16, %var_8270: Tensor[(156), float32], %var_8271: Tensor[(455), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(330, 1), uint16], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(455), float64]) {
  %634 = cast(%var_8268, dtype="float32") /* ty=Tensor[(216), float32] */;
  %635 = cast(%var_8268, dtype="float32") /* ty=Tensor[(216), float32] */;
  %636 = cast(%var_8269, dtype="uint16") /* ty=uint16 */;
  %637 = cast(%var_8270, dtype="float32") /* ty=Tensor[(156), float32] */;
  %638 = cast(%var_8271, dtype="float64") /* ty=Tensor[(455), float64] */;
  %639 = reshape(%634, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %640 = reshape(%635, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
  %641 = reshape(%636, newshape=[]) /* ty=uint16 */;
  %642 = reshape(%637, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %643 = reshape(%638, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %644 = @func_5181(%639, %640, %641, %642, %643) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
  %645 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  %646 = %644.3;
  (%645, %646, %var_8268, %var_8269, %var_8270, %var_8271)
}

def @func_7843() -> (Tensor[(6, 14, 16), bool],) {
  %648 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %647 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    (%647,)
  };
  %648() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9103() -> Tensor[(8, 10, 9), float64] {
  %649 = cast(meta[relay.Constant][66] /* ty=Tensor[(8, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 10, 9), float64] */;
  acos(%649) /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_8547(%var_8545: Tensor[(216), float32], %var_8546: Tensor[(156), float32]) -> (Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) {
  %670 = fn (%var_8536: Tensor[(216), float32], %var_8538: Tensor[(156), float32]) -> (Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) {
    %650 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 225), int64] */, dtype="int64") /* ty=Tensor[(9, 225), int64] */;
    %651 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 225), int64] */, dtype="int64") /* ty=Tensor[(9, 225), int64] */;
    %652 = reshape(%650, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), int64] */;
    %653 = reshape(%651, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), int64] */;
    %654 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 225), int64] */, dtype="float32") /* ty=Tensor[(9, 225), float32] */;
    %655 = cast(%var_8536, dtype="float32") /* ty=Tensor[(216), float32] */;
    %656 = cast(%var_8536, dtype="float32") /* ty=Tensor[(216), float32] */;
    %657 = cast(meta[relay.Constant][68] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %658 = cast(%var_8538, dtype="float32") /* ty=Tensor[(156), float32] */;
    %659 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 455), float64] */, dtype="float64") /* ty=Tensor[(1, 455), float64] */;
    %660 = reshape(%655, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
    %661 = reshape(%656, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float32] */;
    %662 = reshape(%657, newshape=[]) /* ty=uint16 */;
    %663 = reshape(%658, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %664 = reshape(%659, newshape=[455]) /* ty=Tensor[(455), float64] */;
    %665 = @func_5181(%660, %661, %662, %663, %664) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */;
    %666 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    %667 = @func_5562(%652, %653) /* ty=Tensor[(15, 15, 9), int64] */;
    %668 = sigmoid(%654) /* ty=Tensor[(9, 225), float32] */;
    %669 = %665.4;
    (%666, %667, %668, %669, %var_8536, meta[relay.Constant][68] /* ty=uint16 */, %var_8538, meta[relay.Constant][69] /* ty=Tensor[(1, 455), float64] */)
  };
  %670(%var_8545, %var_8546) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(15, 15, 9), int64], Tensor[(9, 225), float32], Tensor[(455), float64], Tensor[(216), float32], uint16, Tensor[(156), float32], Tensor[(1, 455), float64]) */
}

def @func_8321() -> (Tensor[(6, 14, 16), bool],) {
  %671 = @func_7788() /* ty=Tensor[(6, 14, 16), bool] */;
  (%671,)
}

def @func_5895(%var_5893: float64, %var_5894: Tensor[(15, 4, 9), float64]) -> Tensor[(15, 4, 9), float64] {
  @func_5891(%var_5893, %var_5894) /* ty=Tensor[(15, 4, 9), float64] */
}

def @func_9355(%var_9353: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), uint8],) {
  @func_9352(%var_9353) /* ty=(Tensor[(6, 14, 16), uint8],) */
}

def @func_9770(%var_9768: Tensor[(624), float64], %var_9769: Tensor[(8, 40), int64]) -> (Tensor[(6, 14, 16), bool], Tensor[(6), float64], Tensor[(624), float64], Tensor[(8, 40), int64], Tensor[(2304), int16]) {
  @func_9766(%var_9768, %var_9769) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6), float64], Tensor[(624), float64], Tensor[(8, 40), int64], Tensor[(2304), int16]) */
}

def @func_7873() -> (Tensor[(6, 14, 16), bool],) {
  @func_7871() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_7976() -> (Tensor[(6, 14, 16), bool],) {
  %674 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %672 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
    %673 = %672.0;
    (%673,)
  };
  %674() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_2493(%var_2490: Tensor[(4, 5, 14), uint64], %var_2491: int16, %var_2492: Tensor[(4, 5, 14), uint64]) -> (Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) {
  @func_2488(%var_2490, %var_2491, %var_2492) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */
}

def @func_7713(%var_7711: Tensor[(6, 14, 16), bool]) -> (Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) {
  @func_7710(%var_7711) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) */
}

def @func_7522() -> Tensor[(6, 14, 16), bool] {
  %682 = fn () -> Tensor[(6, 14, 16), bool] {
    %675 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
    %676 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 16), float32] */;
    %677 = mod(%675, %676) /* ty=Tensor[(6, 14, 16), float32] */;
    %678 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
    %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %680 = cast(%677, dtype="bool") /* ty=Tensor[(6, 14, 16), bool] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%680, %681) /* ty=Tensor[(6, 14, 16), bool] */
  };
  %682() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_8849(%var_8841: Tensor[(40), uint8]) -> (Tensor[(6, 14, 16), float64], Tensor[(2, 5, 4), uint8], Tensor[(40), uint8]) {
  %683 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(6, 14, 16), float64] */;
  %685 = cast(%var_8841, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %686 = reshape(%685, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), uint8] */;
  %687 = @func_3947(%686) /* ty=(Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */;
  %688 = asin(%684) /* ty=Tensor[(6, 14, 16), float64] */;
  %689 = %687.0;
  (%688, %689, %var_8841)
}

def @func_179(%var_178: Tensor[(11, 6, 12), int64]) -> (Tensor[(11, 6, 12), bool],) {
  %700 = fn (%var_167: Tensor[(11, 6, 12), int64]) -> (Tensor[(11, 6, 12), bool],) {
    %690 = cast(meta[relay.Constant][72] /* ty=Tensor[(11, 6, 12), int64] */, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
    %691 = shape_of(%var_167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_167, dtype="int64") /* ty=Tensor[(11, 6, 12), int64] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %694 = add(%692, %693) /* ty=Tensor[(11, 6, 12), int64] */;
    %695 = cast(%var_167, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
    %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%694, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %699 = logical_or(%697, %698) /* ty=Tensor[(11, 6, 12), bool] */;
    (%699,)
  };
  %700(%var_178) /* ty=(Tensor[(11, 6, 12), bool],) */
}

def @func_5181(%var_5154: Tensor[(6, 4, 9), float32], %var_5155: Tensor[(6, 4, 9), float32], %var_5165: uint16, %var_5167: Tensor[(1, 156), float32], %var_5168: Tensor[(455), float64]) -> (Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) {
  %701 = cast(%var_5155, dtype="float32") /* ty=Tensor[(6, 4, 9), float32] */;
  %702 = shape_of(%var_5154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%var_5154, dtype="float32") /* ty=Tensor[(6, 4, 9), float32] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %705 = cast(%var_5165, dtype="uint16") /* ty=uint16 */;
  %706 = cast(meta[relay.Constant][73] /* ty=Tensor[(330, 1), uint16] */, dtype="uint16") /* ty=Tensor[(330, 1), uint16] */;
  %707 = cast(%var_5167, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %708 = cast(%var_5168, dtype="float64") /* ty=Tensor[(455), float64] */;
  %709 = reshape(%705, newshape=[]) /* ty=uint16 */;
  %710 = reshape(%706, newshape=[10, 11, 3]) /* ty=Tensor[(10, 11, 3), uint16] */;
  %711 = reshape(%707, newshape=[156, 1]) /* ty=Tensor[(156, 1), float32] */;
  %712 = reshape(%708, newshape=[455]) /* ty=Tensor[(455), float64] */;
  %713 = @func_5082(%709, %710, %711, %712) /* ty=(Tensor[(10, 11, 3), bool], Tensor[(320), int64], Tensor[(156, 1), float32], Tensor[(455), float64], Tensor[(288), int8]) */;
  %714 = cast(%var_5167, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %715 = add(%703, %704) /* ty=Tensor[(6, 4, 9), float32] */;
  %716 = %713.1;
  %717 = acos(%714) /* ty=Tensor[(1, 156), float32] */;
  (%715, %716, %var_5165, meta[relay.Constant][73] /* ty=Tensor[(330, 1), uint16] */, %var_5168, %717)
}

def @func_8211(%var_8210: Tensor[(12, 7, 9), uint32]) -> (Tensor[(12, 7, 9), uint32], Tensor[(12, 7, 9), float64]) {
  %725 = fn (%var_8185: Tensor[(12, 7, 9), uint32]) -> (Tensor[(12, 7, 9), uint32], Tensor[(12, 7, 9), float64]) {
    %718 = cast(meta[relay.Constant][74] /* ty=Tensor[(12, 7, 9), uint32] */, dtype="uint32") /* ty=Tensor[(12, 7, 9), uint32] */;
    %719 = shape_of(%var_8185, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_8185, dtype="uint32") /* ty=Tensor[(12, 7, 9), uint32] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %722 = cast(%var_8185, dtype="float64") /* ty=Tensor[(12, 7, 9), float64] */;
    %723 = left_shift(%720, %721) /* ty=Tensor[(12, 7, 9), uint32] */;
    %724 = cosh(%722) /* ty=Tensor[(12, 7, 9), float64] */;
    (%723, %724)
  };
  %725(%var_8210) /* ty=(Tensor[(12, 7, 9), uint32], Tensor[(12, 7, 9), float64]) */
}

def @func_9014(%var_8979: Tensor[(312, 2), float64], %var_8980: Tensor[(320), int64], %var_8992: Tensor[(2304), int16], %var_9002: Tensor[(312, 2), float64]) -> (Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) {
  %726 = @func_8948() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(7, 8, 13), float64], Tensor[(484), uint16], Tensor[(1, 6, 1), float64], Tensor[(40), uint8]) */;
  %727 = cast(meta[relay.Constant][75] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
  %728 = cast(meta[relay.Constant][76] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %729 = cast(%var_8979, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %730 = cast(%var_8980, dtype="int64") /* ty=Tensor[(320), int64] */;
  %731 = reshape(%727, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %732 = reshape(%728, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %733 = reshape(%729, newshape=[8, 6, 13]) /* ty=Tensor[(8, 6, 13), float64] */;
  %734 = reshape(%730, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %735 = @func_5865(%731, %732, %733, %734) /* ty=(Tensor[(12, 12, 16), int16], Tensor[(3, 20), float32], Tensor[(468, 1), int16], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(3, 2), float64], int16, Tensor[(8, 6, 13), float64], Tensor[(12, 9, 8), float64], Tensor[(320), int64], Tensor[(16, 9, 16), float64]) */;
  %736 = cast(meta[relay.Constant][77] /* ty=Tensor[(392), uint32] */, dtype="uint32") /* ty=Tensor[(392), uint32] */;
  %737 = cast(%var_8992, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %738 = cast(%var_8980, dtype="int64") /* ty=Tensor[(320), int64] */;
  %739 = reshape(%736, newshape=[14, 14, 2]) /* ty=Tensor[(14, 14, 2), uint32] */;
  %740 = reshape(%737, newshape=[2304, 1]) /* ty=Tensor[(2304, 1), int16] */;
  %741 = reshape(%738, newshape=[80, 4]) /* ty=Tensor[(80, 4), int64] */;
  %742 = @func_1954(%739, %740, %741) /* ty=(Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) */;
  %743 = cast(%var_9002, dtype="int32") /* ty=Tensor[(312, 2), int32] */;
  %744 = shape_of(%var_8979, dtype="int32") /* ty=Tensor[(2), int32] */;
  %745 = cast(%var_8979, dtype="int32") /* ty=Tensor[(312, 2), int32] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %747 = %726.1;
  %748 = %735.2;
  %749 = %742.3;
  %750 = bitwise_xor(%745, %746) /* ty=Tensor[(312, 2), int32] */;
  (%747, %748, meta[relay.Constant][75] /* ty=Tensor[(864, 1), float64] */, meta[relay.Constant][76] /* ty=Tensor[(6), float64] */, %var_8980, %749, meta[relay.Constant][77] /* ty=Tensor[(392), uint32] */, %var_8992, %750)
}

def @func_6779(%var_6777: Tensor[(2, 15), uint32], %var_6778: Tensor[(2, 15), uint32]) -> Tensor[(2, 15), bool] {
  @func_6775(%var_6777, %var_6778) /* ty=Tensor[(2, 15), bool] */
}

def @func_3392(%var_3387: Tensor[(1134), float64], %var_3388: int16, %var_3389: Tensor[(5, 13, 7), float64], %var_3390: Tensor[(320), int64], %var_3391: Tensor[(288), int8]) -> (Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) {
  @func_3385(%var_3387, %var_3388, %var_3389, %var_3390, %var_3391) /* ty=(Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) */
}

def @func_3237(%var_3232: Tensor[(12, 11, 2), int8], %var_3233: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), bool] {
  %751 = cast(%var_3233, dtype="bool") /* ty=Tensor[(12, 11, 2), bool] */;
  %752 = shape_of(%var_3232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_3232, dtype="bool") /* ty=Tensor[(12, 11, 2), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%753, %754) /* ty=Tensor[(12, 11, 2), bool] */
}

def @func_4248(%var_4247: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), int64],) {
  %760 = fn (%var_4237: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), int64],) {
    %755 = cast(%var_4237, dtype="int64") /* ty=Tensor[(14, 2, 3), int64] */;
    %756 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(14, 2, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 2, 3), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 3), int64] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %759 = multiply(%757, %758) /* ty=Tensor[(14, 2, 3), int64] */;
    (%759,)
  };
  %760(%var_4247) /* ty=(Tensor[(14, 2, 3), int64],) */
}

def @func_8585(%var_8583: Tensor[(12, 4, 6), uint32], %var_8584: Tensor[(12, 4, 6), uint32]) -> Tensor[(12, 4, 6), uint32] {
  %765 = fn (%var_8577: Tensor[(12, 4, 6), uint32], %var_8578: Tensor[(12, 4, 6), uint32]) -> Tensor[(12, 4, 6), uint32] {
    %761 = cast(%var_8578, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
    %762 = shape_of(%var_8577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%var_8577, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%763, %764) /* ty=Tensor[(12, 4, 6), uint32] */
  };
  %765(%var_8583, %var_8584) /* ty=Tensor[(12, 4, 6), uint32] */
}

def @func_3947(%var_3937: Tensor[(2, 5, 4), uint8]) -> (Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
  %766 = cast(meta[relay.Constant][79] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %767 = cast(%var_3937, dtype="uint8") /* ty=Tensor[(2, 5, 4), uint8] */;
  %768 = cast(meta[relay.Constant][80] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %769 = reshape(%768, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %770 = @func_1655(%769) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %771 = maximum(%766, %767) /* ty=Tensor[(2, 5, 4), uint8] */;
  %772 = %770.0;
  (%771, %772, meta[relay.Constant][80] /* ty=Tensor[(6), float64] */)
}

def @func_786(%var_784: Tensor[(11, 11, 4), uint16]) -> Tensor[(11, 11, 4), uint16] {
  @func_783(%var_784) /* ty=Tensor[(11, 11, 4), uint16] */
}

def @func_9020(%var_9016: Tensor[(312, 2), float64], %var_9017: Tensor[(320), int64], %var_9018: Tensor[(2304), int16], %var_9019: Tensor[(312, 2), float64]) -> (Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) {
  @func_9014(%var_9016, %var_9017, %var_9018, %var_9019) /* ty=(Tensor[(7, 8, 13), float64], Tensor[(468, 1), int16], Tensor[(864, 1), float64], Tensor[(6), float64], Tensor[(320), int64], Tensor[(12, 12, 16), int16], Tensor[(392), uint32], Tensor[(2304), int16], Tensor[(312, 2), int32]) */
}

def @func_1959(%var_1956: Tensor[(14, 14, 2), uint32], %var_1957: Tensor[(2304, 1), int16], %var_1958: Tensor[(80, 4), int64]) -> (Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) {
  @func_1954(%var_1956, %var_1957, %var_1958) /* ty=(Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) */
}

def @func_539(%var_537: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), float64] {
  @func_536(%var_537) /* ty=Tensor[(12, 9, 8), float64] */
}

def @func_7788() -> Tensor[(6, 14, 16), bool] {
  %773 = @func_7750() /* ty=(Tensor[(6, 14, 16), bool],) */;
  %773.0
}

def @main(%var_10022: Tensor[(99, 3), int64]) -> (Tensor[(6, 14, 16), bool], Tensor[(1120, 1), int8], Tensor[(9, 11, 3), int64], Tensor[(99, 3), int64], Tensor[(4, 80), int8]) {
  %774 = cast(%var_10022, dtype="int64") /* ty=Tensor[(99, 3), int64] */;
  %775 = reshape(%774, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), int64] */;
  %776 = cast(meta[relay.Constant][81] /* ty=Tensor[(1120, 1), int8] */, dtype="int8") /* ty=Tensor[(1120, 1), int8] */;
  %777 = cast(meta[relay.Constant][81] /* ty=Tensor[(1120, 1), int8] */, dtype="int8") /* ty=Tensor[(1120, 1), int8] */;
  %778 = cast(meta[relay.Constant][82] /* ty=Tensor[(4, 80), int64] */, dtype="int64") /* ty=Tensor[(4, 80), int64] */;
  %779 = reshape(%776, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), int8] */;
  %780 = reshape(%777, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), int8] */;
  %781 = reshape(%778, newshape=[320]) /* ty=Tensor[(320), int64] */;
  %782 = @func_6557(%779, %780, %781) /* ty=(Tensor[(5, 14, 16), int8], Tensor[(242, 2), uint16], Tensor[(11, 11, 4), float32], Tensor[(8, 40), int64], Tensor[(320), int64]) */;
  %783 = %782.3;
  %784 = cast(%783, dtype="int8") /* ty=Tensor[(8, 40), int8] */;
  %785 = shape_of(meta[relay.Constant][82] /* ty=Tensor[(4, 80), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %786 = cast(meta[relay.Constant][82] /* ty=Tensor[(4, 80), int64] */, dtype="int8") /* ty=Tensor[(4, 80), int8] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %788 = @func_8506() /* ty=Tensor[(6, 14, 16), bool] */;
  %789 = @func_5664(%775) /* ty=Tensor[(9, 11, 3), int64] */;
  %790 = multiply(%786, %787) /* ty=Tensor[(4, 80), int8] */;
  (%788, meta[relay.Constant][81] /* ty=Tensor[(1120, 1), int8] */, %789, %var_10022, %790)
}

def @func_3135(%var_3133: Tensor[(9, 8, 4), int8], %var_3134: Tensor[(9, 8, 4), int8]) -> Tensor[(9, 8, 4), int8] {
  %795 = fn (%var_3126: Tensor[(9, 8, 4), int8], %var_3127: Tensor[(9, 8, 4), int8]) -> Tensor[(9, 8, 4), int8] {
    %791 = cast(%var_3127, dtype="int8") /* ty=Tensor[(9, 8, 4), int8] */;
    %792 = shape_of(%var_3126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%var_3126, dtype="int8") /* ty=Tensor[(9, 8, 4), int8] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%793, %794) /* ty=Tensor[(9, 8, 4), int8] */
  };
  %795(%var_3133, %var_3134) /* ty=Tensor[(9, 8, 4), int8] */
}

def @func_9995() -> (Tensor[(6, 14, 16), bool],) {
  %797 = fn () -> (Tensor[(6, 14, 16), bool],) {
    %796 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    (%796,)
  };
  %797() /* ty=(Tensor[(6, 14, 16), bool],) */
}

def @func_9305(%var_9303: Tensor[(90), float64], %var_9304: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280, 1), uint64], Tensor[(90), float64], Tensor[(864), float64]) {
  @func_9301(%var_9303, %var_9304) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280, 1), uint64], Tensor[(90), float64], Tensor[(864), float64]) */
}

def @func_9105() -> Tensor[(8, 10, 9), float64] {
  @func_9103() /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_2788(%var_2726: Tensor[(3, 2, 10), float32], %var_2730: Tensor[(1, 468), int16], %var_2731: Tensor[(864), float64], %var_2739: Tensor[(567, 2), float64], %var_2757: Tensor[(3, 2, 10), float32], %var_2763: Tensor[(6), float64], %var_2776: int16) -> (Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) {
  %798 = cast(%var_2739, dtype="float64") /* ty=Tensor[(567, 2), float64] */;
  %799 = cast(%var_2731, dtype="float64") /* ty=Tensor[(864), float64] */;
  %800 = reshape(%798, newshape=[14, 9, 9]) /* ty=Tensor[(14, 9, 9), float64] */;
  %801 = reshape(%799, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %802 = @func_2597(%800, %801) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) */;
  %803 = cast(%var_2726, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
  %804 = log2(%803) /* ty=Tensor[(3, 2, 10), float32] */;
  %805 = cast(%var_2757, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = cast(%var_2763, dtype="float64") /* ty=Tensor[(6), float64] */;
  %810 = reshape(%809, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %811 = @func_1655(%810) /* ty=(Tensor[(1, 6, 1), float64],) */;
  %812 = cast(%var_2776, dtype="int16") /* ty=int16 */;
  %813 = cast(meta[relay.Constant][83] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %814 = reshape(%812, newshape=[]) /* ty=int16 */;
  %815 = reshape(%813, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %816 = cast(%var_2730, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %817 = cast(%var_2731, dtype="float64") /* ty=Tensor[(864), float64] */;
  %818 = reshape(%816, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), int16] */;
  %819 = reshape(%817, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %820 = @func_648(%818, %819) /* ty=(Tensor[(4, 9, 13), bool], Tensor[(12, 9, 8), float64], Tensor[(864), float64], Tensor[(11, 6, 12), bool], Tensor[(792), int64], Tensor[(12, 9, 8), float64], Tensor[(11, 6, 12), bool]) */;
  %821 = %820.5;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %823 = %802.3;
  %824 = less_equal(%807, %808) /* ty=Tensor[(3, 2, 10), bool] */;
  %825 = %811.0;
  %826 = @func_1112(%814, %815) /* ty=Tensor[(12, 12, 16), int16] */;
  %827 = sigmoid(%822) /* ty=Tensor[(12, 9, 8), float32] */;
  (%var_2730, %var_2731, %823, %var_2739, %824, %825, %var_2763, %826, %var_2776, meta[relay.Constant][83] /* ty=Tensor[(2304), int16] */, %827)
}

def @func_7667(%var_7664: Tensor[(280), uint64], %var_7665: Tensor[(90), float64], %var_7666: Tensor[(864), float64]) -> (Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) {
  @func_7662(%var_7664, %var_7665, %var_7666) /* ty=(Tensor[(6, 14, 16), bool], Tensor[(12, 12, 16), int16], Tensor[(280), uint64], int16, Tensor[(11, 11, 4), uint16], Tensor[(484), uint16], Tensor[(864), float64], Tensor[(90), float64], Tensor[(864), float64]) */
}

def @func_5188(%var_5183: Tensor[(6, 4, 9), float32], %var_5184: Tensor[(6, 4, 9), float32], %var_5185: uint16, %var_5186: Tensor[(1, 156), float32], %var_5187: Tensor[(455), float64]) -> (Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) {
  @func_5181(%var_5183, %var_5184, %var_5185, %var_5186, %var_5187) /* ty=(Tensor[(6, 4, 9), float32], Tensor[(320), int64], uint16, Tensor[(330, 1), uint16], Tensor[(455), float64], Tensor[(1, 156), float32]) */
}

def @func_1115(%var_1113: int16, %var_1114: Tensor[(12, 12, 16), int16]) -> Tensor[(12, 12, 16), int16] {
  %830 = fn (%var_1096: int16, %var_1097: Tensor[(12, 12, 16), int16]) -> Tensor[(12, 12, 16), int16] {
    %828 = cast(%var_1096, dtype="int16") /* ty=int16 */;
    %829 = cast(%var_1097, dtype="int16") /* ty=Tensor[(12, 12, 16), int16] */;
    add(%828, %829) /* ty=Tensor[(12, 12, 16), int16] */
  };
  %830(%var_1113, %var_1114) /* ty=Tensor[(12, 12, 16), int16] */
}

def @func_2601(%var_2599: Tensor[(14, 9, 9), float64], %var_2600: Tensor[(864), float64]) -> (Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) {
  @func_2597(%var_2599, %var_2600) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(78, 6), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(320), int64], Tensor[(11, 6, 12), bool], Tensor[(14, 9, 9), float64]) */
}

def @func_1657(%var_1656: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64],) {
  %833 = fn (%var_1649: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64],) {
    %831 = cast(%var_1649, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
    %832 = cos(%831) /* ty=Tensor[(1, 6, 1), float64] */;
    (%832,)
  };
  %833(%var_1656) /* ty=(Tensor[(1, 6, 1), float64],) */
}

def @func_2797(%var_2790: Tensor[(3, 2, 10), float32], %var_2791: Tensor[(1, 468), int16], %var_2792: Tensor[(864), float64], %var_2793: Tensor[(567, 2), float64], %var_2794: Tensor[(3, 2, 10), float32], %var_2795: Tensor[(6), float64], %var_2796: int16) -> (Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) {
  @func_2788(%var_2790, %var_2791, %var_2792, %var_2793, %var_2794, %var_2795, %var_2796) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */
}

def @func_8507() -> Tensor[(6, 14, 16), bool] {
  %835 = fn () -> Tensor[(6, 14, 16), bool] {
    %834 = @func_8343() /* ty=(Tensor[(6, 14, 16), bool], Tensor[(6, 14, 16), bool]) */;
    %834.0
  };
  %835() /* ty=Tensor[(6, 14, 16), bool] */
}

def @func_8063(%var_8060: Tensor[(6, 14, 16), bool], %var_8061: int16, %var_8062: Tensor[(320), int64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8], Tensor[(11, 13, 10), float32], Tensor[(1430), float32]) {
  %860 = fn (%var_8034: Tensor[(6, 14, 16), bool], %var_8041: int16, %var_8043: Tensor[(320), int64]) -> (Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8], Tensor[(11, 13, 10), float32], Tensor[(1430), float32]) {
    %836 = @func_7521() /* ty=Tensor[(6, 14, 16), bool] */;
    %837 = cast(%var_8034, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
    %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%836, dtype="uint32") /* ty=Tensor[(6, 14, 16), uint32] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %841 = cast(meta[relay.Constant][84] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %842 = cast(%var_8041, dtype="int16") /* ty=int16 */;
    %843 = cast(meta[relay.Constant][85] /* ty=Tensor[(455), float64] */, dtype="float64") /* ty=Tensor[(455), float64] */;
    %844 = cast(%var_8043, dtype="int64") /* ty=Tensor[(320), int64] */;
    %845 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
    %846 = reshape(%841, newshape=[1134]) /* ty=Tensor[(1134), float64] */;
    %847 = reshape(%842, newshape=[]) /* ty=int16 */;
    %848 = reshape(%843, newshape=[5, 13, 7]) /* ty=Tensor[(5, 13, 7), float64] */;
    %849 = reshape(%844, newshape=[320]) /* ty=Tensor[(320), int64] */;
    %850 = reshape(%845, newshape=[288]) /* ty=Tensor[(288), int8] */;
    %851 = @func_3385(%846, %847, %848, %849, %850) /* ty=(Tensor[(864), float64], Tensor[(60), float32], Tensor[(468), int16], Tensor[(1, 864), float64], Tensor[(1134), float64], Tensor[(6), float64], Tensor[(12, 9, 8), bool], Tensor[(1, 6, 1), float64], Tensor[(5, 13, 7), uint32], Tensor[(468), int16], Tensor[(320), int64], Tensor[(9, 8, 4), int8], Tensor[(288), int8], Tensor[(12, 12, 16), int16], Tensor[(2304), int16], Tensor[(5, ?, 7), bool]) */;
    %852 = cast(meta[relay.Constant][87] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %853 = cast(meta[relay.Constant][87] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %854 = reshape(%852, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
    %855 = reshape(%853, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
    %856 = @func_4440(%854, %855) /* ty=(Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) */;
    %857 = left_shift(%839, %840) /* ty=Tensor[(6, 14, 16), uint32] */;
    %858 = %851.4;
    %859 = %856.0;
    (%857, %858, meta[relay.Constant][84] /* ty=Tensor[(1134), float64] */, %var_8041, meta[relay.Constant][85] /* ty=Tensor[(455), float64] */, %var_8043, meta[relay.Constant][86] /* ty=Tensor[(288), int8] */, %859, meta[relay.Constant][87] /* ty=Tensor[(1430), float32] */)
  };
  %860(%var_8060, %var_8061, %var_8062) /* ty=(Tensor[(6, 14, 16), uint32], Tensor[(1134), float64], Tensor[(1134), float64], int16, Tensor[(455), float64], Tensor[(320), int64], Tensor[(288), int8], Tensor[(11, 13, 10), float32], Tensor[(1430), float32]) */
}

def @func_8169(%var_8146: Tensor[(3, 16, 16), float32], %var_8147: Tensor[(3, 16, 16), float32], %var_8153: Tensor[(280), uint64], %var_8154: int16, %var_8161: Tensor[(540), float64]) -> (Tensor[(3, 16, 16), float32], Tensor[(2304), int16], Tensor[(280), uint64], int16, Tensor[(6, 14, 16), float32], Tensor[(1, 1344), bool], Tensor[(15, 4, 9), float64], Tensor[(540), float64]) {
  %861 = cast(%var_8147, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %862 = shape_of(%var_8146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%var_8146, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %865 = cast(%var_8153, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %866 = cast(%var_8154, dtype="int16") /* ty=int16 */;
  %867 = cast(%var_8153, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %868 = reshape(%865, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %869 = reshape(%866, newshape=[]) /* ty=int16 */;
  %870 = reshape(%867, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint64] */;
  %871 = @func_2488(%868, %869, %870) /* ty=(Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) */;
  %872 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 1344), bool] */, dtype="bool") /* ty=Tensor[(1, 1344), bool] */;
  %873 = reshape(%872, newshape=[6, 14, 16]) /* ty=Tensor[(6, 14, 16), bool] */;
  %874 = @func_7710(%873) /* ty=(Tensor[(6, 14, 16), float32], Tensor[(6, 14, 16), float64]) */;
  %875 = cast(%var_8154, dtype="float64") /* ty=float64 */;
  %876 = cast(%var_8161, dtype="float64") /* ty=Tensor[(540), float64] */;
  %877 = reshape(%875, newshape=[]) /* ty=float64 */;
  %878 = reshape(%876, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float64] */;
  %879 = floor_mod(%863, %864) /* ty=Tensor[(3, 16, 16), float32] */;
  %880 = %871.3;
  %881 = %874.0;
  %882 = @func_5891(%877, %878) /* ty=Tensor[(15, 4, 9), float64] */;
  (%879, %880, %var_8153, %var_8154, %881, meta[relay.Constant][88] /* ty=Tensor[(1, 1344), bool] */, %882, %var_8161)
}

def @func_1084(%var_1082: Tensor[(10, 2, 16), int64]) -> (Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) {
  @func_1081(%var_1082) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */
}

def @func_2488(%var_2456: Tensor[(4, 5, 14), uint64], %var_2471: int16, %var_2479: Tensor[(4, 5, 14), uint64]) -> (Tensor[(4, 5, 14), bool], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(4, 5, 14), uint8]) {
  %883 = cast(%var_2456, dtype="bool") /* ty=Tensor[(4, 5, 14), bool] */;
  %884 = shape_of(meta[relay.Constant][89] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(meta[relay.Constant][89] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="bool") /* ty=Tensor[(4, 5, 14), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = cast(%var_2471, dtype="int16") /* ty=int16 */;
  %888 = cast(meta[relay.Constant][90] /* ty=Tensor[(2304), int16] */, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %889 = reshape(%887, newshape=[]) /* ty=int16 */;
  %890 = reshape(%888, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %891 = cast(%var_2479, dtype="uint8") /* ty=Tensor[(4, 5, 14), uint8] */;
  %892 = shape_of(meta[relay.Constant][89] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(meta[relay.Constant][89] /* ty=Tensor[(4, 5, 14), uint64] */, dtype="uint8") /* ty=Tensor[(4, 5, 14), uint8] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %895 = less(%885, %886) /* ty=Tensor[(4, 5, 14), bool] */;
  %896 = @func_1112(%889, %890) /* ty=Tensor[(12, 12, 16), int16] */;
  %897 = add(%893, %894) /* ty=Tensor[(4, 5, 14), uint8] */;
  (%895, %896, %var_2471, meta[relay.Constant][90] /* ty=Tensor[(2304), int16] */, %897)
}

def @func_4443(%var_4441: Tensor[(11, 13, 10), float32], %var_4442: Tensor[(11, 13, 10), float32]) -> (Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) {
  %906 = fn (%var_4418: Tensor[(11, 13, 10), float32], %var_4419: Tensor[(11, 13, 10), float32]) -> (Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) {
    %898 = cast(%var_4419, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
    %899 = shape_of(%var_4418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%var_4418, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %902 = cast(meta[relay.Constant][91] /* ty=Tensor[(2, 432), float64] */, dtype="float64") /* ty=Tensor[(2, 432), float64] */;
    %903 = reshape(%902, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
    %904 = power(%900, %901) /* ty=Tensor[(11, 13, 10), float32] */;
    %905 = @func_536(%903) /* ty=Tensor[(12, 9, 8), float64] */;
    (%904, %905, meta[relay.Constant][91] /* ty=Tensor[(2, 432), float64] */)
  };
  %906(%var_4441, %var_4442) /* ty=(Tensor[(11, 13, 10), float32], Tensor[(12, 9, 8), float64], Tensor[(2, 432), float64]) */
}

def @func_4768(%var_4736: Tensor[(6, 6, 13), float64], %var_4755: Tensor[(1134), float64], %var_4756: Tensor[(6), float64]) -> (Tensor[(6, 6, 13), float64], Tensor[(6, 6, 13), float64], Tensor[(864), float64], Tensor[(60), float32], Tensor[(864), float64], Tensor[(1134), float64], Tensor[(6), float64], int16) {
  %907 = cast(%var_4736, dtype="float64") /* ty=Tensor[(6, 6, 13), float64] */;
  %908 = cast(%var_4736, dtype="float64") /* ty=Tensor[(6, 6, 13), float64] */;
  %909 = cast(meta[relay.Constant][92] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %910 = exp(%907) /* ty=Tensor[(6, 6, 13), float64] */;
  %911 = cast(%910, dtype="int16") /* ty=Tensor[(6, 6, 13), int16] */;
  %912 = cast(meta[relay.Constant][93] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %913 = cast(%var_4755, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %914 = cast(meta[relay.Constant][92] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %915 = cast(%var_4756, dtype="float64") /* ty=Tensor[(6), float64] */;
  %916 = cast(meta[relay.Constant][94] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %917 = reshape(%909, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %918 = reshape(%911, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %919 = reshape(%912, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %920 = reshape(%913, newshape=[567, 2]) /* ty=Tensor[(567, 2), float64] */;
  %921 = reshape(%914, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float32] */;
  %922 = reshape(%915, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %923 = reshape(%916, newshape=[]) /* ty=int16 */;
  %924 = @func_2788(%917, %918, %919, %920, %921, %922, %923) /* ty=(Tensor[(1, 468), int16], Tensor[(864), float64], Tensor[(468), int16], Tensor[(567, 2), float64], Tensor[(3, 2, 10), bool], Tensor[(1, 6, 1), float64], Tensor[(6), float64], Tensor[(12, 12, 16), int16], int16, Tensor[(2304), int16], Tensor[(12, 9, 8), float32]) */;
  %925 = sinh(%908) /* ty=Tensor[(6, 6, 13), float64] */;
  %926 = %924.1;
  (%910, %925, %926, meta[relay.Constant][92] /* ty=Tensor[(60), float32] */, meta[relay.Constant][93] /* ty=Tensor[(864), float64] */, %var_4755, %var_4756, meta[relay.Constant][94] /* ty=int16 */)
}

def @func_3950(%var_3948: Tensor[(2, 5, 4), uint8]) -> (Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) {
  @func_3947(%var_3948) /* ty=(Tensor[(2, 5, 4), uint8], Tensor[(1, 6, 1), float64], Tensor[(6), float64]) */
}

def @func_1954(%var_1886: Tensor[(14, 14, 2), uint32], %var_1911: Tensor[(2304, 1), int16], %var_1950: Tensor[(80, 4), int64]) -> (Tensor[(14, 14, 2), uint32], Tensor[(12, 9, 8), float64], Tensor[(216, 4), float64], Tensor[(12, 12, 16), int16], Tensor[(2304, 1), int16], Tensor[(12, 12, 16), int16], Tensor[(14, 14, 2), float64], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(80, 4), int64]) {
  %927 = cast(meta[relay.Constant][95] /* ty=Tensor[(1, 14, 2), uint32] */, dtype="uint32") /* ty=Tensor[(1, 14, 2), uint32] */;
  %928 = cast(%var_1886, dtype="uint32") /* ty=Tensor[(14, 14, 2), uint32] */;
  %929 = cast(meta[relay.Constant][96] /* ty=Tensor[(216, 4), float64] */, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %930 = reshape(%929, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %931 = cast(meta[relay.Constant][97] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %932 = cast(%var_1911, dtype="int16") /* ty=Tensor[(2304, 1), int16] */;
  %933 = reshape(%931, newshape=[]) /* ty=int16 */;
  %934 = reshape(%932, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %935 = cast(meta[relay.Constant][97] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %936 = cast(%var_1911, dtype="int16") /* ty=Tensor[(2304, 1), int16] */;
  %937 = reshape(%935, newshape=[]) /* ty=int16 */;
  %938 = reshape(%936, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), int16] */;
  %939 = cast(meta[relay.Constant][97] /* ty=int16 */, dtype="float64") /* ty=float64 */;
  %940 = cast(%var_1886, dtype="float64") /* ty=Tensor[(14, 14, 2), float64] */;
  %941 = @func_536(%930) /* ty=Tensor[(12, 9, 8), float64] */;
  %942 = cast(%941, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
  %943 = reshape(%942, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float64] */;
  %944 = cast(%var_1950, dtype="int64") /* ty=Tensor[(80, 4), int64] */;
  %945 = reshape(%944, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), int64] */;
  %946 = @func_1081(%945) /* ty=(Tensor[(10, 2, 16), bool], Tensor[(12, 9, 8), float64], Tensor[(468), int16], Tensor[(864), float64]) */;
  %947 = bitwise_or(%927, %928) /* ty=Tensor[(14, 14, 2), uint32] */;
  %948 = @func_1112(%933, %934) /* ty=Tensor[(12, 12, 16), int16] */;
  %949 = @func_1112(%937, %938) /* ty=Tensor[(12, 12, 16), int16] */;
  %950 = mod(%939, %940) /* ty=Tensor[(14, 14, 2), float64] */;
  %951 = @func_536(%943) /* ty=Tensor[(12, 9, 8), float64] */;
  %952 = %946.2;
  (%947, %941, meta[relay.Constant][96] /* ty=Tensor[(216, 4), float64] */, %948, %var_1911, %949, %950, %951, %952, %var_1950)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen268/build/output.py", line 1961, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:02:23] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


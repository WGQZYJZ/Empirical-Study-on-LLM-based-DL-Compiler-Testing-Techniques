import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_167 = relay.var("var_167", dtype = "int64", shape = (11, 6, 12))#candidate|167|(11, 6, 12)|var|int64
const_168 = relay.const([[[-2,8,8,6,-6,6,-9,-7,5,-9,2,-10],[10,8,-5,-5,-3,-2,8,3,-8,-4,-1,-7],[8,9,-4,4,9,5,6,-10,-2,4,-2,-6],[5,-7,-10,3,8,7,10,-7,3,2,-3,-2],[5,-7,-2,7,-2,6,-7,-9,2,9,9,-3],[-2,-4,9,2,-2,3,1,-1,-4,-4,-7,-8]],[[-10,1,6,4,10,3,-3,-5,5,7,8,8],[7,5,-6,1,1,-7,-7,-5,6,6,4,-2],[-1,-4,1,3,5,-9,10,-6,3,7,2,-7],[-1,-8,6,5,-3,6,-2,-9,4,5,10,-4],[3,-1,7,-5,-2,-5,-5,4,1,1,7,-8],[7,-7,-5,10,-4,4,10,10,-2,-8,7,-4]],[[-2,-2,4,1,3,8,1,-7,8,6,3,-10],[5,4,2,2,5,-4,-4,-2,-5,7,10,-10],[-7,8,4,-7,-8,1,-2,-3,-7,-8,5,1],[4,-7,4,-5,-6,5,3,-9,4,8,-4,-5],[-9,5,-4,-6,-4,3,10,3,10,-6,-9,-3],[-8,10,-3,5,9,8,6,-2,-6,-2,-2,2]],[[2,-7,4,5,1,4,-2,8,10,-7,-1,-9],[-5,-3,6,10,-1,9,5,7,-3,1,-9,7],[8,-6,-4,-6,-5,-3,-4,7,10,-3,3,-2],[-1,10,-6,1,-2,3,-1,-4,-9,5,9,-9],[9,-5,-1,7,-2,4,-7,-9,2,-6,2,7],[-6,-5,6,6,-7,10,-8,2,5,7,8,2]],[[10,3,9,-3,4,-3,-1,8,2,6,4,-9],[1,-4,1,-1,5,3,3,10,-4,-10,4,1],[-5,-5,4,-1,-1,5,10,-5,9,-2,3,-10],[4,2,-7,3,9,-2,-1,7,7,-4,-8,-3],[-8,-9,-6,10,8,-10,-4,-8,1,5,2,-4],[5,-7,8,2,-6,8,10,4,7,-7,-6,-3]],[[5,-9,-1,-8,-4,1,-5,-9,-6,3,-3,5],[10,1,7,5,4,-10,8,1,-3,3,9,-8],[-8,-10,7,-1,7,5,7,-9,3,-6,-9,2],[-3,-9,8,5,8,7,1,2,-3,4,-6,-1],[-4,1,-5,-5,-9,-9,4,3,7,7,9,6],[8,-9,4,-3,-8,2,-9,-2,-3,-5,4,1]],[[9,1,-9,7,-8,-2,-8,-1,-1,-10,9,-1],[2,3,6,-7,-4,-3,5,10,6,-6,-9,3],[-1,10,-6,4,7,-3,-3,-9,1,2,10,1],[-6,-2,-5,4,-9,-6,7,4,9,-10,2,-1],[-9,-8,9,-7,-8,1,-8,-9,-3,-4,7,6],[-7,-10,6,-1,8,-6,-1,-3,3,-4,1,8]],[[10,-4,-1,-7,-9,-5,-10,-7,-6,-7,-7,-5],[4,-1,-5,-9,-2,4,-5,2,-9,6,5,-10],[-8,7,-7,6,-6,-6,-8,5,-10,-5,-9,-1],[-4,-8,4,-10,-4,8,3,-3,-2,7,-6,2],[-3,-4,-2,3,-4,4,8,2,3,5,5,5],[9,-9,-6,2,8,4,-3,-7,-7,-6,-7,8]],[[10,9,3,5,8,8,3,-5,-8,-2,-5,9],[-1,8,-5,9,-2,-3,2,9,-9,6,-7,-4],[2,-5,4,9,-2,3,-3,-5,3,-2,-3,7],[-5,6,3,-6,-6,2,-8,-3,-7,-8,-1,5],[-8,-10,-9,-2,7,-8,-8,7,-7,1,-7,-4],[3,5,4,9,-9,10,6,-2,-10,5,-5,1]],[[9,-9,-6,-3,6,6,-9,9,-6,6,3,-6],[10,-2,-4,-9,4,-3,3,-1,3,-7,6,10],[7,5,6,4,3,-1,8,1,-9,2,10,9],[5,-4,1,3,2,9,-7,3,10,8,5,-2],[4,4,-1,5,-10,5,7,-1,-3,-6,-5,2],[-3,3,-10,2,-1,5,-9,6,-3,3,10,-6]],[[4,5,1,5,8,1,5,1,10,-7,-8,10],[-5,-9,7,-8,-7,10,-10,3,-3,5,10,3],[2,10,-3,9,-5,1,-6,-3,-1,3,10,-9],[-2,2,-10,9,4,-10,-2,-7,9,-7,8,-10],[-6,10,10,-10,4,2,6,-4,3,-9,6,9],[3,-2,9,10,4,-1,7,-5,-3,5,-10,-10]]], dtype = "int64")#candidate|168|(11, 6, 12)|const|int64
bop_169 = relay.add(var_167.astype('int64'), relay.reshape(const_168.astype('int64'), relay.shape_of(var_167))) # shape=(11, 6, 12)
bop_173 = relay.logical_or(bop_169.astype('bool'), relay.reshape(var_167.astype('bool'), relay.shape_of(bop_169))) # shape=(11, 6, 12)
output = relay.Tuple([bop_173,])
output2 = relay.Tuple([bop_173,])
func_177 = relay.Function([var_167,], output)
mod['func_177'] = func_177
mod = relay.transform.InferType()(mod)
var_178 = relay.var("var_178", dtype = "int64", shape = (11, 6, 12))#candidate|178|(11, 6, 12)|var|int64
output = func_177(var_178)
func_179 = relay.Function([var_178], output)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_533 = relay.var("var_533", dtype = "float64", shape = (12, 9, 8))#candidate|533|(12, 9, 8)|var|float64
uop_534 = relay.atanh(var_533.astype('float64')) # shape=(12, 9, 8)
output = uop_534
output2 = uop_534
func_536 = relay.Function([var_533,], output)
mod['func_536'] = func_536
mod = relay.transform.InferType()(mod)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_537 = relay.var("var_537", dtype = "float64", shape = (12, 9, 8))#candidate|537|(12, 9, 8)|var|float64
func_536_call = mutated_mod.get_global_var('func_536')
call_538 = func_536_call(var_537)
output = call_538
func_539 = relay.Function([var_537], output)
mutated_mod['func_539'] = func_539
mutated_mod = relay.transform.InferType()(mutated_mod)
const_600 = relay.const([[[-6,-3,-3,-7,-9,-2,-7,1,6,4,3,5,1],[-6,-8,8,-6,-4,4,-3,-10,-5,10,8,5,1],[4,-6,8,4,5,-9,-3,-3,8,9,10,5,-1],[6,-7,-5,-5,-5,-3,10,-3,2,-3,2,-10,1],[6,-2,9,4,-6,-6,-10,-7,-2,-2,7,-2,8],[4,-6,9,-1,10,8,-5,-4,7,-1,-10,1,-9],[-7,-1,-4,4,9,3,-2,-9,8,-5,4,10,-8],[10,2,10,-10,-6,-3,6,4,2,-4,-6,-5,-7],[-5,-4,-7,2,4,9,-2,-10,-5,-9,-8,5,-3]],[[6,-4,-5,-2,-9,5,-10,-5,3,-4,-4,-1,-10],[-5,-5,-9,-6,-6,9,-2,-10,-4,-8,-9,-8,-5],[-6,7,-7,2,-3,-3,-4,-2,10,3,-2,10,6],[10,2,8,2,-5,-10,-3,10,3,-6,6,10,-5],[6,2,-5,-8,8,7,1,-10,-9,-3,-8,2,3],[1,-9,6,4,-9,-10,7,3,9,6,-7,4,-5],[-8,8,6,5,-6,3,6,-8,-3,6,9,-1,5],[-1,8,1,6,7,9,-9,2,-4,8,-7,-6,-8],[-8,-9,7,-4,-9,-2,6,-9,3,9,-2,4,-2]],[[-10,3,3,-6,-6,6,9,7,-10,-3,8,-7,-1],[-10,10,5,-2,9,-4,10,8,-10,-1,8,-1,-2],[-7,8,9,-3,9,8,-10,7,-4,4,4,10,-2],[-9,-1,4,2,-6,-9,10,8,-1,7,-2,6,-2],[9,-6,-10,4,7,-9,-9,10,3,7,-9,2,6],[-4,8,-1,-6,6,3,7,-9,1,-1,-7,10,-8],[10,-5,-1,-7,5,-6,6,-8,3,10,-2,-9,1],[-7,-9,10,-4,6,-3,4,2,8,-1,8,2,5],[9,4,1,-1,-8,-10,7,8,8,8,2,-9,-4]],[[9,4,-9,10,-1,9,-3,-2,-7,-10,8,9,-7],[6,5,4,-6,-8,1,2,-10,5,-6,-8,-7,10],[-6,3,-9,1,9,-8,4,-1,3,-9,4,8,-3],[7,-5,-5,-5,4,7,7,-1,-10,10,-9,7,-8],[2,-5,4,-2,8,-2,8,-6,-3,1,-8,10,6],[-1,-7,-6,-6,-1,4,3,-3,-6,1,5,6,10],[9,-4,-9,-8,7,-3,-6,5,-10,-3,-3,1,2],[10,2,-4,1,-3,-6,-7,6,5,-6,3,9,6],[-6,6,3,-8,7,3,1,-8,-7,-7,7,-7,2]]], dtype = "int16")#candidate|600|(4, 9, 13)|const|int16
var_601 = relay.var("var_601", dtype = "int16", shape = (4, 9, 13))#candidate|601|(4, 9, 13)|var|int16
bop_602 = relay.less(const_600.astype('bool'), relay.reshape(var_601.astype('bool'), relay.shape_of(const_600))) # shape=(4, 9, 13)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
var_610 = relay.var("var_610", dtype = "float64", shape = (864,))#candidate|610|(864,)|var|float64
call_609 = func_536_call(relay.reshape(var_610.astype('float64'), [12, 9, 8]))
call_611 = func_536_call(relay.reshape(var_610.astype('float64'), [12, 9, 8]))
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
const_616 = relay.const([-4,-1,8,7,-7,7,-8,-4,3,-4,2,-3,-2,-9,8,-9,6,-3,5,6,-6,8,7,7,-7,-3,8,-5,2,7,7,2,-9,8,7,-8,8,-9,9,5,8,2,-5,-8,3,4,-5,-3,-5,8,8,5,1,3,1,-5,-5,2,-8,-4,10,-2,8,7,10,-5,3,-6,-5,6,6,-2,-10,10,7,-8,-4,1,-8,7,-6,-6,-2,5,3,1,3,-10,-10,-1,-6,3,1,-4,-2,9,-3,9,9,-3,3,2,9,-1,4,-7,2,2,4,6,-9,8,-10,-7,10,1,-6,-1,7,-6,-3,9,3,-1,-7,4,2,8,-8,-2,5,-4,-8,-7,-9,4,-6,-7,6,5,-5,-1,-3,-8,4,-1,-5,3,2,-8,3,-2,7,-7,7,8,2,-8,8,8,-8,-2,-8,4,-5,10,6,-6,-1,-6,4,2,-5,3,-10,5,1,-9,-4,-8,7,6,10,-6,6,1,8,-8,-6,6,3,2,-1,-3,-5,-4,1,-6,4,1,-6,2,6,6,-10,-7,-4,-6,-1,-9,-4,-9,-3,-7,8,8,2,7,1,-9,-8,3,7,-8,-2,7,2,-2,-2,3,-7,-4,-3,7,6,5,4,7,-1,2,-4,9,6,10,-10,-9,-7,6,-4,6,-8,-4,-10,8,6,7,10,5,-7,5,1,4,7,-8,2,-10,4,5,-7,-9,2,2,-2,-9,3,6,-7,9,-10,-4,-2,3,10,-2,-2,9,-7,-7,7,5,9,1,-4,10,9,8,-10,-9,-10,7,-2,-5,7,-5,7,6,5,-2,10,-5,-7,2,4,8,-2,6,-3,-4,-5,9,-1,8,2,5,3,3,-2,7,-6,-2,2,-4,-10,-7,7,7,-1,-6,-4,-7,2,6,4,-2,8,9,-1,-7,1,-8,-2,-10,1,-7,10,3,-1,6,2,-6,-1,2,-9,-6,7,-1,-10,-1,9,-7,2,-1,-9,-8,6,-3,10,2,6,-2,-4,1,5,7,2,3,4,-6,-2,5,-10,-6,6,2,5,-7,6,-3,2,5,3,-7,-1,-1,-9,10,5,-4,3,2,-1,-7,7,-9,1,4,-1,3,7,-6,10,-8,3,5,9,4,-8,-6,-2,-5,-9,6,-1,-2,3,-5,-4,-8,-6,-3,-2,-2,9,-5,-2,-5,-1,-1,-10,-9,2,3,-8,5,4,6,8,-6,7,-9,4,-2,-4,5,7,-4,9,-7,8,8,1,-10,3,7,7,-1,-9,-6,-5,5,-7,2,-6,-3,-4,-10,7,5,6,-10,-7,6,3,9,2,-1,-2,-7,4,7,-4,-3,7,-3,-8,-5,-5,1,4,-7,5,-7,8,7,7,10,-1,4,-10,10,-1,5,8,5,7,8,7,8,3,-1,-9,4,3,7,-7,1,4,8,-1,5,5,9,1,1,-3,6,3,-4,-10,-2,-10,6,9,7,7,10,-5,7,-6,-2,1,3,-10,2,7,-8,7,10,-10,-7,-9,2,-8,10,7,3,1,-4,2,-2,2,-6,6,6,-5,4,4,7,-4,5,2,9,-3,-6,-3,-4,8,5,-9,1,-7,-7,-2,-2,3,6,-5,-9,-10,-5,-3,7,2,7,-2,-3,-5,10,7,4,7,-7,4,3,1,6,-9,-7,-4,2,5,7,-8,-9,-6,8,2,-8,-1,2,-10,-10,-5,2,3,7,1,-10,-8,-5,4,10,9,4,-8,6,7,1,-2,1,-6,3,-10,-6,6,5,-5,5,10,3,-8,-9,4,-8,10,-2,-8,6,10,8,-5,7,7,-3,-3,-6,7,5,3,8,3,-4,4,10,-1,-1,1,-6,10,-5,8,-4,-9,4,2,-7,-1,7,10,9,-6,-10,8,5,-7,-9,-4,-10,1,4,6,-10,2,-2,5,-6,4,7,-3,-8,-3,-7,-1,7,-9,-7,2,-3,7,1,-1,-4,-4,-6,1,9,-2,-10,-1,5,8,8,3,6,-1,3,-5,-6,8,-8,-6,5,-5,-1,2,10,-1,-1,2,-4,6,2,4,10,9,-3,5,5,2,8,-3,5,-5,-8,-6,9,-10,5,10,-8,-3,4], dtype = "int64")#candidate|616|(792,)|const|int64
call_615 = relay.TupleGetItem(func_177_call(relay.reshape(const_616.astype('int64'), [11, 6, 12])), 0)
call_617 = relay.TupleGetItem(func_179_call(relay.reshape(const_616.astype('int64'), [11, 6, 12])), 0)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
call_629 = func_536_call(relay.reshape(var_610.astype('float64'), [12, 9, 8]))
call_630 = func_536_call(relay.reshape(var_610.astype('float64'), [12, 9, 8]))
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
call_636 = relay.TupleGetItem(func_177_call(relay.reshape(call_615.astype('int64'), [11, 6, 12])), 0)
call_637 = relay.TupleGetItem(func_179_call(relay.reshape(call_615.astype('int64'), [11, 6, 12])), 0)
output = relay.Tuple([bop_602,call_609,var_610,call_615,const_616,call_629,call_636,])
output2 = relay.Tuple([bop_602,call_611,var_610,call_617,const_616,call_630,call_637,])
func_648 = relay.Function([var_601,var_610,], output)
mod['func_648'] = func_648
mod = relay.transform.InferType()(mod)
var_649 = relay.var("var_649", dtype = "int16", shape = (4, 9, 13))#candidate|649|(4, 9, 13)|var|int16
var_650 = relay.var("var_650", dtype = "float64", shape = (864,))#candidate|650|(864,)|var|float64
output = func_648(var_649,var_650,)
func_651 = relay.Function([var_649,var_650,], output)
mutated_mod['func_651'] = func_651
mutated_mod = relay.transform.InferType()(mutated_mod)
const_770 = relay.const([[[8,-2,-6,6],[-10,-4,-7,5],[10,8,6,9],[4,-1,-3,4],[8,-4,4,-4],[10,-1,3,-8],[7,-8,2,9],[7,10,-10,-1],[-2,-1,-4,1],[4,-1,-10,-10],[7,-8,-7,6]],[[10,6,-10,-6],[-2,1,3,10],[-5,-4,3,10],[4,-8,8,7],[-10,5,1,-4],[-2,9,-4,5],[-1,4,5,-4],[5,-9,6,8],[2,7,9,-6],[-4,-6,-3,10],[2,-10,10,-3]],[[5,-6,2,8],[1,7,7,-1],[-6,3,-10,7],[-9,-6,-2,3],[-2,10,-7,8],[-6,-8,-6,-7],[-5,-6,-5,4],[2,4,8,-1],[8,-4,2,3],[-7,-2,-9,7],[-9,-9,-8,8]],[[-3,-3,-10,3],[10,5,1,9],[-6,-1,9,-8],[-3,-3,-10,-2],[-5,-5,-3,-5],[6,-2,-7,-7],[3,-9,-7,3],[4,2,8,4],[-1,10,-7,-7],[-6,-2,-2,-5],[8,-7,1,-7]],[[-7,6,7,1],[-10,3,8,2],[1,-7,2,7],[-8,-5,6,3],[-2,-9,2,8],[2,9,1,6],[-5,4,6,9],[8,4,-7,9],[7,-10,-9,1],[8,-1,-1,-1],[-9,6,-6,1]],[[9,2,-2,7],[9,10,-6,9],[-3,4,-9,-2],[10,6,-3,2],[4,-9,-4,-8],[6,1,1,9],[-2,7,8,2],[5,5,-6,-1],[-2,-7,-1,-9],[4,-10,-2,8],[1,-7,-5,8]],[[6,-10,-2,-1],[3,1,2,10],[4,3,-8,1],[-6,-10,-7,1],[-10,4,-3,-6],[-2,10,-1,-3],[2,-2,-7,-2],[3,-4,-10,4],[7,4,4,6],[-9,3,9,-4],[10,-3,-8,9]],[[-9,-2,7,9],[-5,-4,2,-6],[-8,-10,4,10],[-9,10,10,-1],[-4,5,10,-7],[-6,-3,-1,-9],[7,-10,5,-5],[-4,6,-8,-2],[9,-4,-1,3],[2,-6,-6,-5],[-6,5,4,-6]],[[7,-2,-8,-9],[-2,-7,6,10],[9,-2,-3,-9],[2,8,6,-6],[-7,-9,-3,-3],[1,-7,1,4],[7,4,-5,-7],[-9,-4,-1,7],[9,5,6,6],[-8,-4,-2,9],[-8,-7,6,-1]],[[1,9,8,-9],[3,8,2,9],[-6,-10,-3,8],[-10,4,1,2],[-1,-3,8,-5],[-8,2,-4,3],[-4,-10,10,8],[-7,9,-6,-1],[3,-5,9,-5],[10,8,-10,7],[4,3,-7,7]],[[3,-1,6,-7],[7,-1,1,-3],[5,8,4,9],[1,3,3,2],[-3,-7,5,1],[8,-6,10,-2],[3,-10,3,5],[3,4,6,-6],[-8,-2,-8,7],[-7,-5,-4,-3],[4,2,-5,5]]], dtype = "uint16")#candidate|770|(11, 11, 4)|const|uint16
var_771 = relay.var("var_771", dtype = "uint16", shape = (11, 11, 4))#candidate|771|(11, 11, 4)|var|uint16
bop_772 = relay.add(const_770.astype('uint16'), relay.reshape(var_771.astype('uint16'), relay.shape_of(const_770))) # shape=(11, 11, 4)
output = bop_772
output2 = bop_772
func_783 = relay.Function([var_771,], output)
mod['func_783'] = func_783
mod = relay.transform.InferType()(mod)
mutated_mod['func_783'] = func_783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_784 = relay.var("var_784", dtype = "uint16", shape = (11, 11, 4))#candidate|784|(11, 11, 4)|var|uint16
func_783_call = mutated_mod.get_global_var('func_783')
call_785 = func_783_call(var_784)
output = call_785
func_786 = relay.Function([var_784], output)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1034 = relay.var("var_1034", dtype = "int64", shape = (10, 2, 16))#candidate|1034|(10, 2, 16)|var|int64
const_1035 = relay.const([[[2,-8,9,-1,8,10,10,-2,-1,-10,-4,-10,2,1,10,8],[9,-8,-7,-5,-8,-5,-2,9,-6,6,1,4,7,-7,-5,-10]],[[1,3,8,-1,10,-5,4,8,3,10,10,-9,-1,-6,9,1],[4,8,-9,-8,-6,3,-7,10,5,-5,-5,-3,-1,3,3,-2]],[[7,10,-8,4,1,3,-8,-1,-4,7,-3,6,-7,5,-4,-8],[-6,6,7,9,-7,8,-7,8,7,3,-6,-3,-9,-5,-5,3]],[[-9,7,-10,4,1,5,-4,1,8,3,-2,-9,7,3,6,5],[-4,-3,-1,4,-2,-7,-9,8,-2,-3,9,5,-5,8,-4,-9]],[[7,5,-1,-7,-5,9,-7,-3,-8,-3,-8,3,-7,-7,5,-3],[7,2,6,-1,8,-9,7,-3,-10,-3,5,4,-8,4,4,-10]],[[5,9,3,-4,-1,5,-7,-4,5,5,-5,1,-7,-9,-2,4],[-2,1,-4,-4,8,-3,-8,-9,-4,10,-3,-3,7,5,-10,1]],[[1,-7,6,2,-3,-8,1,3,-4,-5,5,9,-9,-5,3,-2],[7,3,-3,5,1,-6,-1,-10,-1,3,-2,-1,-9,1,-2,8]],[[4,-3,6,2,1,10,6,-8,4,4,6,-8,-4,8,-3,5],[6,4,-6,-9,-6,-1,-10,1,4,1,-3,-6,-7,-2,9,-10]],[[7,-8,4,-2,-8,-3,5,2,9,9,2,8,-10,-2,10,-5],[-9,10,2,-2,-8,-9,-8,2,6,-9,9,-10,10,9,5,6]],[[8,-7,-9,-1,5,10,4,-1,3,9,-9,-10,-10,-6,-2,-10],[10,1,8,6,5,-7,8,-9,7,-1,-6,5,10,2,-6,4]]], dtype = "int64")#candidate|1035|(10, 2, 16)|const|int64
bop_1036 = relay.greater(var_1034.astype('bool'), relay.reshape(const_1035.astype('bool'), relay.shape_of(var_1034))) # shape=(10, 2, 16)
bop_1042 = relay.less(bop_1036.astype('bool'), relay.reshape(const_1035.astype('bool'), relay.shape_of(bop_1036))) # shape=(10, 2, 16)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_1047 = relay.const([6,1,10,-8,-1,5,-8,10,1,9,4,-10,-2,-10,-9,-1,-10,-10,6,-3,-6,1,-7,4,-6,3,-10,3,-9,7,2,4,2,4,4,7,8,-6,10,-2,-10,-6,-7,2,-4,5,-7,-9,2,9,3,-8,5,-5,-1,-1,1,3,6,5,4,-7,-8,2,-10,-8,8,-1,9,7,-2,-2,6,2,-3,-4,-6,10,7,-3,-4,7,8,-4,-3,-8,-7,-9,-8,-5,-7,-9,-9,-6,2,3,-2,-9,-8,9,2,-8,10,4,-8,10,-9,8,-8,6,4,8,-10,8,10,1,7,-4,9,-6,6,-2,-4,7,-5,-4,2,6,-10,10,-2,-5,2,-3,-7,10,4,10,-4,-2,10,9,9,-2,8,9,4,-6,-3,-1,-9,-4,3,-10,3,-8,-7,2,10,5,7,7,-9,-2,-5,3,-2,-6,-2,-3,-10,5,6,3,3,-6,-3,-4,10,-5,8,7,-6,6,1,3,10,1,7,-4,4,-3,-4,9,2,9,1,-10,10,5,5,5,7,-1,-1,-7,6,-2,-6,6,-5,9,-2,-5,7,8,-7,7,-8,-8,-5,4,4,6,8,-7,-9,-1,5,7,-7,4,-7,-7,1,-6,2,-2,7,-4,9,8,-10,-3,6,-7,-3,8,-3,-5,-4,-5,-10,-1,-2,-1,-8,3,9,-3,3,9,-2,-6,-4,1,3,-2,-2,9,8,7,9,4,-3,3,8,4,9,-8,2,-10,-7,7,5,-3,5,1,-9,10,-5,-2,4,-4,7,-7,3,-3,10,-8,-7,2,-3,4,9,6,6,6,3,5,3,-8,-9,-7,-4,-6,7,10,10,-2,9,-2,7,7,1,1,-5,-2,-1,-5,-5,-5,-8,4,1,6,7,7,9,3,7,4,4,-8,7,1,2,-6,-1,8,-8,1,6,9,-1,3,-8,-2,3,9,-1,1,6,-6,10,8,10,-5,-9,-10,-9,-10,10,-9,-2,-2,-9,-8,2,2,8,2,-3,-4,3,3,-7,-1,7,-1,-8,-1,9,2,3,-5,-5,-9,-6,-1,7,3,6,-2,-3,1,-9,10,4,-9,-9,-8,-1,-3,9,8,-9,-9,-6,-10,-3,2,-5,-10,-8,6,3,-2,-2,-1,-10,-7,3,-3,-7,10,4,-4,6,-8,2,4,9,-8,-2,3,2,-2,-6,-4,10,4,7,4,1,10,5,7,-1,-6,7,-6,1,-4,4,9,3,7], dtype = "int16")#candidate|1047|(468,)|const|int16
const_1048 = relay.const([0.380295,-2.049911,7.091081,-3.506790,-9.704194,-8.431402,-9.539686,-0.237990,-5.967807,-3.056367,7.695401,-6.034658,6.105345,5.645479,-2.888170,-9.507687,4.557459,-7.189326,-9.630599,-0.863913,-9.066609,-2.655826,-9.215425,-3.489818,-4.410862,-4.039744,-8.357492,8.590961,-4.216936,7.668745,6.043835,8.154343,-4.350422,5.390387,-7.935185,9.677640,-7.112084,-8.908397,-7.549366,-5.686983,4.699920,-1.085737,5.961378,-7.432287,-1.870193,-1.601267,5.600140,-7.276623,2.647944,8.653752,2.705409,-7.855800,-2.389620,-1.702236,-6.771962,4.067399,0.759375,8.493930,4.369622,7.953280,5.531442,3.145019,7.463882,-5.643228,-4.761174,-7.613768,-5.156286,9.486044,5.538391,4.031702,-5.263869,-4.636827,-2.189861,-2.916246,6.025742,-2.563937,2.632441,2.134083,7.280044,-7.550388,0.781712,-0.372878,6.722935,-7.495079,0.875690,-9.016610,3.506727,-2.991322,6.702352,0.859080,-1.727797,1.874500,-3.860353,-3.164175,2.837473,6.054566,5.235432,-5.650598,0.228857,-3.901553,9.058090,7.820306,8.237328,-7.117109,-6.120002,6.441070,1.104015,7.732116,8.697169,-6.628690,-0.407175,-7.706692,8.437221,-9.921443,9.513778,1.959419,-9.074329,0.090745,-0.319755,-9.200339,-3.570235,8.514125,-8.679704,5.112119,-8.023553,-4.466038,8.424283,6.448763,-5.111436,8.400648,-6.831356,-7.039036,2.031281,-2.751382,1.672076,2.701952,-6.341204,-6.481969,8.118958,-5.611864,5.942445,-5.994816,9.655944,9.461950,9.918072,-9.957680,3.113786,-5.329911,-6.740870,4.483657,6.609924,0.082431,9.596333,3.369826,5.957438,4.270029,-0.965191,8.038330,6.869406,8.954440,-4.402734,-2.748125,-3.230150,-7.283906,9.156923,7.951704,-9.579929,-0.001622,-9.372549,-0.432912,8.864999,-5.208145,4.336573,-1.668343,-6.190451,-1.931113,3.628961,-5.983668,4.586728,-4.656961,-6.819440,-7.477532,0.426545,6.188587,-6.744989,2.500315,7.917757,2.108021,-0.105640,0.041480,-6.058015,7.196932,-3.210716,3.454855,-9.829267,-8.338643,1.347358,-7.481169,4.742408,-1.939526,0.787227,5.826597,2.478033,-6.268451,-7.503380,-7.992918,7.242275,-0.385739,-9.828069,4.789175,-3.791161,4.736376,-1.776857,-8.809189,5.517722,7.651007,-4.375646,4.417457,-1.185616,9.816788,1.032554,9.559311,5.971018,-3.165328,4.739819,8.164740,3.252429,-5.675227,-7.888413,3.836446,7.897935,-9.160723,-9.108525,-4.270474,4.589475,4.001832,7.853317,5.110591,8.770210,-6.515660,-3.243549,-7.392175,7.190497,2.469065,3.841801,2.130658,-1.676622,-9.990702,-7.798615,3.856984,3.314456,-1.740246,8.335216,5.974289,-0.691226,1.551425,8.301058,-7.933791,-5.553049,-0.102771,7.918769,8.396540,-3.430918,-9.270538,-7.655556,-9.529849,-6.821388,-6.943267,0.988566,-6.556937,-7.098540,-7.658158,4.067914,-4.788550,-0.797322,1.568239,-1.348639,7.453639,8.779269,2.207202,9.396198,9.823439,0.199464,5.328180,2.341325,-6.820529,-6.187269,-3.099176,4.320781,1.805835,5.054810,0.385383,3.560920,-6.884076,-0.076381,-2.734751,-5.707388,-5.171745,-9.218708,-3.924864,5.429011,0.206634,9.911576,-3.783735,-1.765252,-1.802223,-6.048157,9.041417,8.459868,-2.981032,-4.141329,4.883224,-4.566565,-1.414138,-9.476420,9.689421,1.096317,0.269188,-8.043435,2.541563,9.077323,-2.599240,-2.811730,-6.466032,-1.874724,3.895236,4.533369,9.877485,-2.793519,-5.085033,-9.554960,1.986487,-9.089450,-3.537781,-9.276774,8.979899,1.270912,6.766660,-6.488374,4.368470,6.903239,7.321117,-1.746684,-5.601787,-8.855796,1.169740,-2.953834,-6.730214,2.433742,6.654863,-0.764023,3.513481,9.277603,0.857126,-4.986280,-4.363937,-5.801298,8.909295,-4.461002,2.831125,-8.235397,0.213774,2.962740,-5.217170,-0.064781,-8.521885,-5.777069,-0.046245,4.733718,8.402590,4.328305,4.760740,6.981548,-9.795712,-1.086550,-6.914949,-1.725545,-6.600227,5.066406,-6.233335,-9.631357,5.679790,-7.516599,-8.662748,8.296440,-4.927204,0.173631,-8.020294,-1.501625,-9.252245,7.599744,3.297145,-9.970967,7.091077,-2.754325,2.524270,4.132124,-4.027710,6.824269,1.920418,-3.628866,9.363093,7.150282,5.910756,-7.266574,-7.547268,-2.968401,3.160422,8.342447,6.384505,-2.970499,8.671861,2.655016,2.326869,-0.606071,9.325705,-9.688163,4.853630,2.232026,4.111886,-4.820820,0.471262,-4.656331,-9.439622,9.082914,3.194994,-3.448836,7.633661,-6.646069,-9.361284,7.649908,-2.307801,-6.770292,9.012961,-3.266553,7.934103,0.396073,9.171266,6.222130,1.364600,0.279520,-1.066076,0.694176,4.066637,5.061599,7.476157,-8.263690,-6.771422,8.057627,-4.447565,6.466795,-5.717962,-5.667137,-2.307945,1.990699,-6.316532,-6.674386,8.711425,5.062519,-6.464549,-2.385009,6.196418,9.094455,-5.164098,-1.275595,-8.434784,-7.702004,-4.962072,-4.465181,1.039251,-7.215580,2.042865,-0.863713,9.889972,7.928282,-2.573690,5.869973,-1.363369,-3.170320,6.753836,4.959580,-9.007214,-8.379344,-8.100777,8.338403,1.874927,-6.234588,-3.069887,5.269751,-4.968238,9.293379,-1.617095,-0.883529,3.499766,3.955169,3.253280,-0.712663,0.450203,-1.655650,-5.138897,0.631940,-6.414956,-7.143114,-4.574288,-5.732514,-2.815366,-9.599494,-6.156172,-1.677574,7.049522,-7.862756,-0.676909,-8.585951,3.718489,-9.669347,-4.173404,9.384952,0.953675,5.822310,2.661852,-0.601782,-7.745784,2.557553,7.671509,-0.590478,4.888325,-2.309750,-7.764704,6.922387,5.286628,5.473156,0.483555,-6.788062,-7.755187,4.198507,8.773983,7.865374,-7.848956,-7.836072,-8.362058,-3.808256,5.100976,-7.456014,9.149362,-4.694714,4.537744,-3.544176,-5.274495,1.833900,-7.367261,7.232489,-3.648498,7.121233,9.378190,-5.729221,4.590402,4.066051,2.648952,-0.025850,-7.553791,-0.562772,-8.254293,-3.614619,9.807107,4.085451,-8.765930,-4.569204,2.636372,4.697411,4.003187,3.442215,-9.373896,-6.038441,-6.740514,-5.688821,8.686420,-8.188102,4.670494,-5.614536,-2.381486,2.081677,-3.847695,2.983667,5.500038,-9.076250,-5.963770,1.026691,7.036667,2.279623,-6.299739,-6.136879,-7.039205,8.579688,4.597583,-0.707184,6.462226,6.588016,4.465451,-8.242141,2.819904,-2.403012,-3.094942,9.778254,1.823541,4.574169,-0.431239,9.257177,-5.165138,2.984470,-5.397095,5.987258,3.142207,-8.912644,7.746237,9.945886,4.500153,-3.394654,-1.614352,3.546089,-6.201327,8.294339,-2.715161,3.950365,-5.632462,2.983782,7.838233,-3.861031,7.446600,2.426119,4.943239,8.328674,-3.398575,-4.410291,3.510750,-1.554210,-4.916468,3.801004,-8.308276,6.878405,1.829663,-6.779588,2.499516,4.636583,2.273326,2.570024,8.600555,8.622296,5.708154,-8.941440,-5.122983,-1.400366,7.750905,5.830536,3.706542,-5.878675,9.075141,6.676668,4.088078,3.834902,4.194629,-4.996237,-9.544052,6.593809,2.211280,-3.711276,-6.687223,1.343002,-8.113614,-2.964425,1.985606,-6.084548,6.639668,-2.843243,-0.878157,1.379723,-4.032502,9.628752,0.680675,-2.439449,-4.622041,-4.988420,-7.910171,-4.075115,2.448303,-4.421884,5.165379,3.693480,-8.680745,-8.443361,-5.488818,-9.971743,6.397862,0.323523,-6.816026,8.626715,-7.340289,-2.953906,7.348315,-8.439237,9.841050,-5.709750,0.348717,6.684790,8.343344,0.071687,3.923600,-2.232228,1.459147,8.000744,-4.512308,-2.165056,7.269705,3.096550,-1.265631,5.651150,-3.442805,-3.764562,2.852892,3.924573,3.508124,-5.603187,-0.880484,2.719252,-1.247701,-5.705890,-1.017920,-4.124110,3.076532,-6.414195,1.893496,6.473262,8.206638,5.133548,2.727622,0.532967,9.354138,0.193918,0.009769,6.034772,1.513314,-7.222790,0.902939,2.082322,-3.577237,-2.535857,1.917233,0.819388,7.636663,-5.212087,0.693714,-2.400198,0.765022,-1.961734,-1.473153,3.305062,9.325843,6.380307,-2.104268,9.835180,4.321432,-5.197866,8.772156,3.526051,-1.850870,4.985483,-0.886594,9.339696,8.037179,-7.541248,4.618259,-7.033328,8.110183,4.956422,-4.222963,-1.249370,-5.496030,0.501372,-7.677232,8.558856,-3.734889,-8.691362,-6.357269,-0.813337,6.333998,9.095783,-3.238813,-9.300410,-7.879001,6.385715,-5.837775,-2.193265,-7.622172,6.936440,-9.497430,-5.707185,3.900287,1.559310,-6.304482,-3.232586,-5.248648,-5.376706,1.487336,-4.363002,8.471291,-8.197155,8.381294,-3.965328,-8.970224,-5.422077,-2.175197,8.337542,5.230457,5.134830,0.974019,-2.353210,-0.871042,-0.836224,7.874281,0.049894,6.598415,-6.692128,-6.833690,-5.171956,-8.510722,7.552897,2.186234,1.106759,-0.430446,-9.638480,-3.956719,5.286945,-6.400520,-4.220372,3.710205,-4.019810,9.208743,4.771109,9.606799,6.643777,5.085077,9.004032,4.392912,3.600016,4.005697,1.263152,-5.065091,-8.083897,7.014337,-1.393601,-9.703676,7.837056,-6.310336,6.349738,-9.728373,3.979596,-5.318166,7.580455,2.136392,3.623922,-9.427198,-0.232355,6.042792,8.143796,5.736286], dtype = "float64")#candidate|1048|(864,)|const|float64
call_1046 = relay.TupleGetItem(func_648_call(relay.reshape(const_1047.astype('int16'), [4, 9, 13]), relay.reshape(const_1048.astype('float64'), [864,]), ), 1)
call_1049 = relay.TupleGetItem(func_651_call(relay.reshape(const_1047.astype('int16'), [4, 9, 13]), relay.reshape(const_1048.astype('float64'), [864,]), ), 1)
output = relay.Tuple([bop_1042,call_1046,const_1047,const_1048,])
output2 = relay.Tuple([bop_1042,call_1049,const_1047,const_1048,])
func_1081 = relay.Function([var_1034,], output)
mod['func_1081'] = func_1081
mod = relay.transform.InferType()(mod)
mutated_mod['func_1081'] = func_1081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1082 = relay.var("var_1082", dtype = "int64", shape = (10, 2, 16))#candidate|1082|(10, 2, 16)|var|int64
func_1081_call = mutated_mod.get_global_var('func_1081')
call_1083 = func_1081_call(var_1082)
output = call_1083
func_1084 = relay.Function([var_1082], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1096 = relay.var("var_1096", dtype = "int16", shape = ())#candidate|1096|()|var|int16
var_1097 = relay.var("var_1097", dtype = "int16", shape = (12, 12, 16))#candidate|1097|(12, 12, 16)|var|int16
bop_1098 = relay.add(var_1096.astype('int16'), var_1097.astype('int16')) # shape=(12, 12, 16)
output = bop_1098
output2 = bop_1098
func_1112 = relay.Function([var_1096,var_1097,], output)
mod['func_1112'] = func_1112
mod = relay.transform.InferType()(mod)
var_1113 = relay.var("var_1113", dtype = "int16", shape = ())#candidate|1113|()|var|int16
var_1114 = relay.var("var_1114", dtype = "int16", shape = (12, 12, 16))#candidate|1114|(12, 12, 16)|var|int16
output = func_1112(var_1113,var_1114,)
func_1115 = relay.Function([var_1113,var_1114,], output)
mutated_mod['func_1115'] = func_1115
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1225 = relay.const([[[6.191384,-9.102264,-5.487057,9.460135,9.011889,-6.035921,0.007429,4.908159,9.328021,-9.522622,-4.619414,-8.475206,7.682890],[-1.995889,-7.388382,-7.896403,-2.987262,5.107110,2.528573,-9.793824,-5.481637,0.251845,-1.445984,5.820671,9.697922,-6.058052],[-3.206460,7.550935,9.708364,8.847315,7.419930,-1.853910,-9.884691,6.792708,-2.008914,-7.358854,-6.907360,-6.067410,-1.154978],[-6.296378,-3.485705,-7.077943,0.807757,-8.691450,2.384109,-1.148372,3.635016,-1.990303,-3.623993,3.807555,3.444192,0.393166],[2.590300,3.645354,-7.692893,0.672622,-3.518113,9.002438,6.746711,3.473081,0.794919,-7.721008,-3.491850,-3.050556,-0.472283],[5.270019,4.758563,3.409749,8.556944,3.196633,-8.562842,-9.065903,-7.541118,-4.616155,7.177126,-1.273163,9.623614,5.503172],[9.639844,9.993719,-0.501856,6.961595,7.498345,-9.665822,4.893684,-0.955358,0.176895,7.770971,6.596408,0.787492,8.952963],[5.563121,-3.606216,-3.972892,6.382127,1.009313,-4.209319,8.033079,5.008406,-8.029106,7.642630,-4.308438,8.762359,-8.332105]],[[7.409226,1.948993,8.701571,-2.681942,-2.518067,7.718255,-1.649526,9.021513,-8.500376,-9.091398,-7.789143,-2.329612,-0.824213],[-5.257472,-4.791402,-8.865078,9.134122,-9.126093,-7.734970,-7.726894,1.457098,-2.969438,0.146497,9.190574,5.159165,3.169409],[-6.032191,2.794408,2.361224,0.819890,7.157148,3.175531,5.646072,9.304883,-6.176937,-2.750557,-9.070066,0.790173,-5.931204],[0.672634,5.085642,-9.883270,-3.059082,-2.710302,5.854096,-7.180374,2.870097,8.952241,6.760454,-3.511633,9.907385,-8.352616],[-1.695693,9.111769,-9.643430,-9.064540,4.979674,2.995136,-0.410710,7.867502,3.852566,-6.433632,-1.976484,-4.240560,7.817793],[5.458371,7.581119,-0.589419,-1.168978,9.301047,-2.467336,-1.984939,-6.147049,8.948213,6.111731,-7.838012,-6.771412,5.977146],[2.954209,5.514271,-5.856790,4.864354,-8.983638,5.663322,8.139091,1.895300,-1.246213,2.689462,3.796847,-6.292229,-1.694347],[-9.091073,0.584261,3.969206,6.974638,9.362707,8.743403,4.876506,-4.635520,-0.126641,4.833754,9.807736,4.739804,-5.930673]],[[-9.359692,3.406127,-6.857445,0.614241,6.663725,-2.265265,7.930396,2.628014,-5.822788,-9.848398,3.219454,-2.339136,-6.703706],[5.092168,-4.735497,6.891370,-6.252844,5.719603,-0.669768,-9.037076,2.603178,-3.571416,9.722687,-7.929565,-6.573329,-8.412775],[2.002720,4.704573,6.041369,-8.444857,-6.321459,-6.028563,-1.964614,7.895514,-7.397625,8.228868,-2.911002,5.813086,1.738586],[0.903311,-6.111886,2.384899,-5.003664,-6.707604,7.201027,-4.749446,-2.300868,-2.816443,-7.349466,4.605216,-5.579491,0.875896],[-6.893037,-3.218952,-5.905310,0.454286,5.758346,-1.267423,9.082527,0.694709,8.824390,6.919470,-0.840839,9.670812,5.285890],[-5.716680,6.158823,3.394112,-9.612810,2.690845,8.483295,0.551879,0.393906,7.198620,-1.161324,-0.884862,-5.731261,9.084585],[5.907084,3.405448,3.615574,-8.436793,6.706589,-2.325747,0.876020,-9.856681,1.837887,-4.312685,-7.551776,2.684691,-4.745223],[-9.110590,1.334902,-3.279065,-7.230838,-5.810370,9.589067,-7.537745,-9.572501,-5.591506,-7.991611,-4.432995,-2.499596,2.124895]],[[-7.145655,-4.437171,-4.289916,1.152644,-1.062834,-4.170386,-4.768426,3.006677,-6.393217,-0.550778,-3.083160,-3.799636,-8.153130],[-4.300521,2.931373,7.503360,7.335074,2.243353,-5.237173,7.931307,-8.549433,-2.201298,-8.806839,-7.144490,6.156758,3.592909],[4.791309,2.237106,2.435552,-1.974471,0.794666,-4.675711,4.840144,-1.696935,3.872985,5.842611,0.816981,-7.577428,9.799528],[-2.124613,1.010115,-7.161398,-3.667053,-5.324766,-8.621840,-1.736239,-7.474779,-2.047649,-3.342208,-5.897892,-4.730289,6.689622],[9.908049,-6.307158,-7.181102,3.847861,-0.335347,-2.965187,0.664895,-5.689835,-0.636254,1.661506,-8.238717,-5.180599,-0.679695],[-7.136975,-7.325812,0.378014,6.672488,-4.811036,-3.582567,1.059436,-5.090410,2.713507,0.763671,8.250500,1.254811,-2.527955],[-9.081092,-5.382145,4.514338,4.195413,7.890890,5.605707,-9.318222,-0.606520,-6.951964,-1.365149,-3.501473,-1.964561,8.849409],[4.790632,1.567075,-6.671382,-2.764568,-8.544181,1.256259,-7.360303,-9.655775,7.729429,5.761198,-3.144206,-9.301183,-3.924958]],[[-0.290463,-3.662901,-6.487295,-2.061676,9.886096,8.363417,-7.937968,-8.206826,-8.249063,-2.109068,-8.035319,1.173900,1.329005],[7.687293,-6.226457,-1.634360,9.973148,5.349074,-2.469796,7.305662,-6.942365,-4.421964,-9.853304,8.652189,1.506292,-7.826375],[3.777223,4.466158,7.245824,-1.079193,5.601108,-1.217774,5.037931,-2.669665,-5.834722,-6.658390,5.205148,4.716966,1.808402],[-9.018860,-9.848881,-4.782143,-9.594205,-3.074659,4.154953,-9.331268,-2.215189,0.110354,-3.669845,9.132636,1.188559,9.123297],[-7.307310,-4.416027,3.311235,-6.409353,2.103655,-0.292415,7.084781,1.817054,8.929626,9.803735,1.541494,-5.472725,-5.579342],[-2.219176,1.426904,-3.447343,-4.736791,2.866917,3.106946,4.513629,-0.727376,3.566102,-2.011771,-2.596550,-4.845366,8.298121],[-3.280822,6.001929,-4.062181,-2.957969,3.636373,8.432677,-7.755280,-1.886117,3.760647,-3.998160,9.722744,4.684828,3.994953],[5.999204,4.962267,4.121418,-1.717013,-3.884141,-8.194393,-0.687348,-4.944327,5.555105,-4.364871,-7.195053,7.204179,-4.357706]],[[-0.053900,-0.762142,0.550506,3.110782,6.615668,0.774103,9.117959,-6.512352,-6.271278,-4.564836,-2.316698,7.610036,7.624197],[-6.660284,5.094476,4.430572,-2.288022,6.948382,7.539158,-2.041630,2.816748,6.199796,-0.388485,-4.801626,-1.048542,7.056992],[-6.772555,-3.995988,-0.980845,-2.425677,7.556324,-5.629901,8.781101,6.571972,-1.467372,7.009972,6.588748,7.599944,-0.709919],[5.692266,-5.574827,-1.893067,6.547476,-8.791201,7.014670,3.614996,-7.842463,5.297126,5.472960,-8.298273,-5.365120,0.228995],[-3.922596,1.373575,-8.076890,-2.061442,9.129234,1.190526,8.887024,1.252718,-9.685730,6.484300,-6.207013,3.717750,0.567916],[7.106106,0.879695,-9.869973,1.008788,2.022025,-4.949127,-4.302785,-7.941714,-5.031118,4.148393,-7.920420,5.744725,-4.711235],[-0.732529,7.027597,-6.223327,-9.275967,-5.113132,9.042031,-0.930076,0.433167,-4.256170,9.509242,-1.309184,-1.600013,7.718215],[6.860720,-6.112402,-6.646046,8.879850,7.533732,-8.878870,-5.534697,-8.840086,6.760798,-3.144606,5.454257,-8.417837,4.416629]],[[-9.871855,6.110034,-9.559347,-6.035218,-5.160676,-9.963595,9.609279,1.754314,4.557742,-0.082943,-2.554142,-0.179902,-1.683891],[7.517460,-2.790628,4.138471,1.827850,-9.718400,-1.484347,-7.919491,6.456283,-8.252438,-0.438633,5.398321,1.368582,7.381104],[1.809027,-2.015674,3.192698,-3.410738,-4.770865,8.834409,-3.529898,-3.069105,-6.968181,-3.660303,2.121642,-4.387943,-9.589474],[4.758152,6.799256,0.509547,-4.121968,5.814648,-0.334302,-8.200998,7.953915,-2.830420,6.467325,-1.427166,3.288425,-2.310213],[-2.240983,1.593063,-9.927082,-9.693435,5.672121,-3.967031,-4.667474,-2.400022,8.951031,4.769310,-3.963693,7.969536,-6.396015],[9.217015,-5.026241,-8.375905,9.234676,9.699472,-7.873460,6.988638,-8.530896,-6.115526,3.664620,0.426137,3.468692,-2.453493],[-1.075029,4.884817,7.364465,-2.602865,-2.100480,-5.764616,-1.747674,7.381118,-4.532638,4.092060,-5.319481,4.442153,-6.977021],[5.137150,4.847392,7.152574,6.843141,3.549503,1.588210,-2.693078,-7.740356,7.253359,-0.365830,-4.704246,-9.037574,8.577759]]], dtype = "float64")#candidate|1225|(7, 8, 13)|const|float64
uop_1226 = relay.atanh(const_1225.astype('float64')) # shape=(7, 8, 13)
func_783_call = mod.get_global_var('func_783')
func_786_call = mutated_mod.get_global_var('func_786')
var_1230 = relay.var("var_1230", dtype = "uint16", shape = (484,))#candidate|1230|(484,)|var|uint16
call_1229 = func_783_call(relay.reshape(var_1230.astype('uint16'), [11, 11, 4]))
call_1231 = func_783_call(relay.reshape(var_1230.astype('uint16'), [11, 11, 4]))
output = relay.Tuple([uop_1226,call_1229,var_1230,])
output2 = relay.Tuple([uop_1226,call_1231,var_1230,])
func_1239 = relay.Function([var_1230,], output)
mod['func_1239'] = func_1239
mod = relay.transform.InferType()(mod)
var_1240 = relay.var("var_1240", dtype = "uint16", shape = (484,))#candidate|1240|(484,)|var|uint16
output = func_1239(var_1240)
func_1241 = relay.Function([var_1240], output)
mutated_mod['func_1241'] = func_1241
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1329 = relay.const([[[-7.330241,1.301916,-8.724865,-7.955572,9.185033],[-4.613596,-1.677626,2.164830,-2.346308,0.596396],[0.932892,7.697922,5.003758,7.530266,2.502843],[5.423936,-7.983025,-5.277861,3.670259,5.202280],[8.535476,4.452382,-2.641489,9.479513,7.471769],[0.630244,-3.966631,9.324554,4.242464,9.446192],[7.297672,1.285530,1.226157,9.389334,-2.331174],[9.169798,-5.087211,-7.888355,-9.978415,3.937091],[-7.335392,-0.129697,8.105254,-1.113776,-7.162162],[-5.034216,5.385744,6.168957,4.389944,5.237212],[1.739406,5.770677,0.829849,-2.244048,3.554785],[8.822721,-4.850539,4.802618,5.490481,-6.506407],[1.120452,-4.726152,-6.968800,1.134500,-7.253685]],[[-7.641783,8.002540,4.428109,7.103274,-8.630536],[9.435548,-8.403622,3.570976,0.703513,7.255060],[-3.035437,-5.960673,6.396922,-0.680371,-0.022427],[1.358129,-8.084131,0.495093,4.059376,8.769312],[4.320475,-2.871296,-8.350134,1.966500,-7.505212],[-5.393315,4.157753,2.012121,9.550553,1.150671],[-2.206267,-4.735561,-0.214797,-0.808001,-3.829582],[2.577928,-1.807810,3.465671,-2.628828,2.577024],[-5.833372,7.922387,-3.027204,-3.535677,8.727459],[-4.893956,3.535665,-3.932812,-9.891153,2.240044],[3.111356,-3.497586,-0.431392,-5.555721,0.358798],[-3.091616,7.454765,6.509304,-6.852943,-2.328778],[-2.887577,-5.416675,0.332934,8.394434,3.822471]],[[1.230207,8.762575,7.143944,9.521923,-0.248036],[3.740832,-7.733611,7.478136,-8.970134,-2.824848],[3.654658,5.907195,-5.831126,-5.694450,-9.555112],[-5.927544,-4.576603,-8.646449,-1.704447,-3.493703],[-0.935218,4.749244,-3.569993,-8.619760,-5.053304],[8.203641,6.986970,3.397565,-4.247979,6.865622],[-6.091105,-3.743362,-2.632892,-0.541907,-2.889904],[6.865385,-5.998224,-0.277338,7.916449,0.668470],[6.713524,9.896845,-2.292806,-9.493961,9.409122],[0.600557,4.266037,-8.852353,-7.585859,-7.085093],[8.536242,8.685288,-4.093686,3.416057,0.396374],[-6.749698,7.463581,0.413831,-7.179190,-7.320751],[-4.397555,4.726913,2.922513,5.179038,-2.734064]],[[4.990109,2.908814,6.364930,-2.506162,-0.256710],[-4.452939,-9.949253,-3.926598,7.984380,7.979710],[-3.778337,1.280812,6.178653,-3.654622,3.220004],[6.447752,-6.437409,6.963222,-2.599804,-5.132239],[8.308347,0.245137,6.901044,-0.524682,8.267487],[-5.457289,5.891671,4.508900,6.142016,3.044452],[1.947730,8.166848,3.860615,4.869965,-0.456606],[-2.385271,-2.044791,2.712380,-4.056472,-9.773890],[5.866376,1.169524,4.611912,2.600841,-9.795233],[8.681599,5.318723,-7.843595,5.922531,0.965802],[6.826966,-9.417212,6.523964,0.228894,4.160119],[5.507064,2.906131,4.605898,-5.592796,0.103726],[5.716149,-9.636169,6.030448,3.605368,-7.687094]],[[-3.855401,7.154926,-9.244006,-5.496799,-8.652498],[7.529063,-3.781177,-8.458381,0.325980,-6.174295],[-3.530402,7.685256,0.320172,9.170998,-4.291786],[1.597878,5.797662,8.652591,0.447347,-1.908087],[7.472968,-0.503330,-8.678946,1.991327,1.188513],[-9.648631,8.371977,-8.586214,-4.024995,3.469734],[8.637689,3.069754,3.248140,-3.819530,-1.845893],[-8.951311,5.588782,9.913884,-6.333189,7.211444],[-9.198142,2.285140,-1.904659,-3.791656,4.013972],[2.769880,-4.062548,8.098718,1.049837,2.814478],[-1.061333,5.862257,-5.321404,3.434509,0.352733],[-8.867791,-5.641479,4.295331,2.051362,7.013291],[7.372859,9.397699,2.277598,-3.226889,6.705445]],[[-2.473227,4.561946,1.455995,-3.909680,-5.962012],[9.849250,-1.408487,-7.521134,-6.180905,0.128453],[-8.793655,-5.635928,8.065622,6.111535,-0.672718],[7.098975,-0.703904,-6.789555,-1.236060,8.029893],[-3.878513,4.312655,-8.597662,-5.084778,4.045024],[2.417079,3.978703,3.394239,1.633221,-4.745127],[6.979923,1.656470,-8.020517,5.572023,-3.447089],[-8.288534,-7.910123,8.099809,1.243102,5.892804],[-5.979230,1.366900,7.584684,-7.925280,7.748513],[-4.261934,-9.487472,-1.068336,-4.714585,0.925119],[-2.985537,8.627353,6.696625,-2.795523,4.567164],[5.925592,-0.250160,4.586899,4.978105,-3.440383],[-5.310909,-0.252319,-4.380586,1.914425,-1.075660]],[[-4.292000,-9.979149,9.026499,-7.859730,0.154231],[-9.939876,4.643142,5.316713,-2.533953,-9.542898],[3.499666,6.044250,1.813055,-9.938149,-1.010148],[7.705627,-4.159480,0.269149,9.303534,4.642672],[8.455311,5.349560,-1.836657,4.545865,-3.160462],[9.539084,-7.202450,5.552855,6.653460,-7.065858],[-5.681845,-0.144279,-3.742560,6.042079,2.606642],[-1.861693,-1.152821,-8.109650,-8.624682,9.618381],[7.058577,-7.658285,1.999518,-1.800096,6.769715],[4.413174,-9.509866,-2.715873,8.601098,5.770401],[-2.735117,5.182574,4.216408,2.903859,9.567754],[-9.888278,-6.306726,-2.043541,-9.123796,-6.668899],[5.906462,-4.536351,3.733720,-0.827638,-2.011658]],[[0.132002,3.316249,7.457344,-7.850920,-0.002951],[0.599815,1.694684,9.807239,8.651055,-0.090921],[-2.958159,7.714590,2.684705,8.577481,2.858198],[2.233645,5.628315,0.068991,-7.009032,1.141978],[4.566739,2.894430,-0.452078,-7.244464,5.729770],[8.377905,3.131973,-4.260306,2.731004,-3.288138],[4.920495,-6.357889,6.448618,5.359878,2.069004],[-0.121383,2.103058,3.480412,5.756260,3.658700],[-7.437753,-0.138061,-9.670151,8.694575,-7.813954],[-7.318755,1.475445,-6.827635,6.155776,-1.739816],[6.048070,5.340674,0.748276,-6.788122,1.277626],[1.517907,7.132948,9.354243,-2.581314,9.385580],[-4.805367,-3.445786,-7.622844,-2.543311,-7.168253]],[[2.832680,-4.958130,-4.119010,7.387686,-6.851960],[-1.362019,5.390321,9.150548,0.454385,5.400931],[-2.965572,4.691293,3.711325,-5.636233,6.241486],[4.251470,-3.718189,3.419494,2.143138,2.783450],[9.530665,3.239559,6.645454,2.912358,-5.032598],[-9.432079,8.858157,4.151205,8.868444,-4.613503],[-8.480067,8.683272,7.722953,6.999124,-6.229852],[-3.758645,-6.065305,-2.817028,-2.783068,7.602063],[-9.753314,-5.791026,4.234240,-8.384332,8.799754],[5.851436,-3.970793,-0.600417,2.407932,-9.938740],[-0.604999,-0.101269,-9.131558,9.473437,-8.400094],[3.727533,-5.132663,-9.030852,5.529250,-7.022188],[-4.271567,-8.908333,4.237458,-4.780131,-2.827046]],[[-9.092409,-2.160511,-5.943367,3.086973,8.182756],[-7.322793,-3.206481,-3.175601,-5.156137,4.526046],[-8.789020,-5.571512,8.393726,3.073098,-2.100385],[-5.482411,0.487254,1.018253,-1.064206,3.335827],[4.080943,-7.805821,-4.230596,-1.724534,6.401072],[7.200920,0.235587,-3.228088,6.479717,2.001605],[-8.189224,-8.943424,-3.931690,8.293489,-2.330513],[-7.974029,-0.817865,5.526460,-9.029626,0.176919],[-6.030917,2.371701,-3.535092,-4.018776,-6.253076],[6.403989,7.966058,-4.192127,-3.911606,-7.402672],[-8.921056,-4.678177,-1.430214,5.230888,0.576064],[-3.826831,5.925229,-9.037079,0.799082,-1.976235],[-6.194138,-1.669221,6.648281,4.511894,-2.214525]]], dtype = "float32")#candidate|1329|(10, 13, 5)|const|float32
uop_1330 = relay.acosh(const_1329.astype('float32')) # shape=(10, 13, 5)
uop_1333 = relay.sinh(uop_1330.astype('float32')) # shape=(10, 13, 5)
var_1340 = relay.var("var_1340", dtype = "float32", shape = (10, 13, 5))#candidate|1340|(10, 13, 5)|var|float32
bop_1341 = relay.not_equal(uop_1330.astype('bool'), relay.reshape(var_1340.astype('bool'), relay.shape_of(uop_1330))) # shape=(10, 13, 5)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
const_1359 = relay.const([3,-2,-7,-10,4,1,8,-7,-1,-5,10,-7,-1,-7,4,-9,6,-7,6,5,-9,4,-10,6,-3,6,-2,-2,-9,2,-10,10,2,-7,7,2,10,-1,-7,4,9,-1,-3,2,1,7,4,-7,7,9,-8,1,-7,8,1,-1,-2,-1,-5,-10,8,-8,-7,9,9,-9,8,-4,-4,6,4,8,-2,-2,-2,5,-10,-2,-10,-2,-10,-7,-2,-1,3,2,9,-7,8,9,-2,2,9,-8,5,-9,10,3,-7,8,6,-1,-1,5,8,1,-6,1,-7,6,10,8,3,3,8,2,-1,-8,-1,-2,-4,-8,-8,-10,1,-8,1,-2,7,-4,5,10,1,8,10,-3,-7,-7,-4,-9,-2,6,10,10,1,6,-2,-4,4,-6,-4,-3,4,5,8,2,10,5,-6,-1,9,-5,-4,5,-10,4,-4,8,-6,5,-6,4,-7,-10,-4,-1,6,5,6,-10,2,2,-3,-3,3,3,-7,9,-7,-8,-8,3,9,-6,7,1,9,3,-6,-1,6,-2,4,-10,10,2,-9,4,5,2,7,1,-9,-10,-3,-5,6,4,9,-2,2,-7,-1,10,2,-7,-5,4,3,10,4,4,3,3,2,10,-9,6,9,-5,-7,-9,1,8,-7,9,-6,-5,-3,-2,2,-10,1,3,1,1,2,-2,-5,-8,-1,-8,-2,-5,-1,-1,-8,-6,-6,-9,8,-4,-1,-5,7,3,-2,4,-3,-10,-3,-7,-3,-10,-1,5,8,-10,-8,-7,8,-4,2,4,-6,-2,-7,-9,-2,-9,-5,-10,6,4,-5,-10,3,-3,3,-2,2,-7,3,-9,-5,7,5,-5,-9,6,9,7,3,7,-5,-2,-1,8,-4,-8,-7,1,4,2,4,-7,7,5,2,-3,-10,-6,3,6,2,8,-9,-9,4,6,3,-3,5,-8,1,-6,8,2,5,-1,-2,-6,8,5,9,2,-5,2,-2,-9,-4,3,-6,-3,5,-7,5,-9,9,6,5,1,4,2,-4,10,5,-9,-10,-3,8,-1,5,5,6,-3,-1,1,-8,3,3,9,5,-10,-10,-10,-4,9,-5,-5,-8,-1,3,-4,4,-2,-9,6,6,-10,10,-5,3,4,-8,8,-7,5,-1,-10,4,-6,2,-8,-10,5,8,-6,5,8,1,9,3,10,3,-10,2,2,8,4,-8,-9,10,7,7,9,9,6,4,-7,5,-7,-3,-3,-1,-2,6,5,-7,1,8,-4,8,1,5,10,-7,-1,6,-3,10,5,-7,4,-3,-9,-3,-9,2,-2,8,-9,8,3,-3,-10,4,-3,-8,-4,-1,3,6,6,10,9,1,10,7,3,4,4,-1,-6,3,-9,4,10,-1,-10,-4,8,-6,-5,4,4,3,3,-7,10,-10,6,-10,4,3,-2,-2,2,-1,-10,7,4,-5,2,7,-4,3,-8,6,-4,-5,-6,9,2,7,6,9,-3,-6,-8,9,7,-4,4,-9,9,-7,9,-2,-9,-7,2,4,10,-2,-4,-10,4,-7,4,-9,10,-5,-3,1,8,6,2,7,1,-10,-4,-5,4,9,10,8,-3,8,-4,9,-5,-1,-6,-2,-2,1,5,-2,-9,-7,-8,-8,2,8,-3,5,1,-8,8,3,2,-4,1,-6,-7,-9,9,-8,3,6,-3,7,-9,-1,5,-7,-8,-6,6,-9,-6,-2,8,-8,5,9,5,2,-1,2,-4,4,9,9,3,-10,6,6,1,-5,7,2,9,7,6,-5,8,2,-1,-3,-9,-3,-7,1,2,4,-1,1,-10,-10,-8,7,-8,1,10,-4,-9,5,8,3,1,9,-4,2,9,-2,-8,-2,8,6,9,8,-8,5,-1,6,-8,4,7,9,9,-4,-10,5,-2,-7,-2,-1,10,-8,8,2,9,9,-5,4,10,3,6,10,-1,-9,4,7,7,6,7,9,-6,-4,9,-3,7,8,5,9,9,-3,7,-8,5,-8,-1,-10,9,6,-3,-6,-6,-2,-4,-1,9,5,-5,-10,6,1,-9,2,7,4,8,8,4,-9,1,3,-5,5,1,8,-5,5,-2,-2,7,-8,-5,3,6], dtype = "int64")#candidate|1359|(792,)|const|int64
call_1358 = relay.TupleGetItem(func_177_call(relay.reshape(const_1359.astype('int64'), [11, 6, 12])), 0)
call_1360 = relay.TupleGetItem(func_179_call(relay.reshape(const_1359.astype('int64'), [11, 6, 12])), 0)
bop_1365 = relay.floor_mod(uop_1333.astype('float32'), relay.reshape(var_1340.astype('float32'), relay.shape_of(uop_1333))) # shape=(10, 13, 5)
output = relay.Tuple([bop_1341,call_1358,const_1359,bop_1365,])
output2 = relay.Tuple([bop_1341,call_1360,const_1359,bop_1365,])
func_1368 = relay.Function([var_1340,], output)
mod['func_1368'] = func_1368
mod = relay.transform.InferType()(mod)
var_1369 = relay.var("var_1369", dtype = "float32", shape = (10, 13, 5))#candidate|1369|(10, 13, 5)|var|float32
output = func_1368(var_1369)
func_1370 = relay.Function([var_1369], output)
mutated_mod['func_1370'] = func_1370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1649 = relay.var("var_1649", dtype = "float64", shape = (1, 6, 1))#candidate|1649|(1, 6, 1)|var|float64
uop_1650 = relay.cos(var_1649.astype('float64')) # shape=(1, 6, 1)
output = relay.Tuple([uop_1650,])
output2 = relay.Tuple([uop_1650,])
func_1655 = relay.Function([var_1649,], output)
mod['func_1655'] = func_1655
mod = relay.transform.InferType()(mod)
var_1656 = relay.var("var_1656", dtype = "float64", shape = (1, 6, 1))#candidate|1656|(1, 6, 1)|var|float64
output = func_1655(var_1656)
func_1657 = relay.Function([var_1656], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1885 = relay.const([[[-10,-7],[-7,7],[-7,10],[5,8],[-2,2],[6,1],[-10,-6],[7,-5],[8,6],[-4,-3],[-4,-8],[4,8],[1,-7],[3,-1]]], dtype = "uint32")#candidate|1885|(1, 14, 2)|const|uint32
var_1886 = relay.var("var_1886", dtype = "uint32", shape = (14, 14, 2))#candidate|1886|(14, 14, 2)|var|uint32
bop_1887 = relay.bitwise_or(const_1885.astype('uint32'), var_1886.astype('uint32')) # shape=(14, 14, 2)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
const_1895 = relay.const([[8.869879,-9.143927,-1.871252,9.225348],[-4.407566,-2.365284,-5.359693,5.269078],[-2.083418,0.298470,-8.645047,2.556764],[-2.027327,-8.991942,8.070155,-5.742706],[-4.087334,-0.103981,-6.496254,-1.367619],[4.051911,-3.174182,-7.465328,2.182640],[-2.541930,-9.515105,3.071887,-2.438469],[-2.959891,-3.529150,1.682082,-7.850749],[-4.927829,3.543483,-6.989648,6.528260],[-1.976396,3.524251,9.088669,5.299659],[9.405643,8.208638,7.070266,-1.323043],[-1.507033,0.015122,-4.510783,8.721195],[4.872111,4.372403,2.397515,8.024682],[-1.520487,-8.446115,0.344089,4.096227],[3.459080,8.914717,-4.581342,-0.667523],[8.899238,8.349116,-1.842951,-8.419239],[1.498254,5.496284,-0.174403,-5.750077],[-8.276155,-2.746024,-1.363689,-7.873236],[-2.409198,-0.331802,-6.842753,-9.357941],[3.125295,0.294437,-6.879046,2.144761],[0.198110,-5.107011,5.976804,6.341489],[-8.525091,0.595712,7.705316,-3.015669],[7.178030,5.582873,-3.866705,2.287234],[1.029104,9.843494,-1.888282,4.127163],[8.514490,8.914862,-6.060863,-6.173485],[6.238491,6.916870,-3.742167,-9.474920],[-8.298458,6.810067,4.759432,-9.956718],[9.275589,8.405094,-9.717095,3.978534],[-7.281315,-5.623569,1.761611,1.196108],[-5.946296,-3.386631,5.338799,5.619240],[-3.781083,-1.355793,2.266643,-4.592854],[-7.408648,8.820808,-7.690215,-6.686631],[1.838542,5.418717,-6.362697,9.888383],[3.109900,0.887007,4.192193,-5.845661],[6.737017,5.239913,-8.488483,0.465381],[1.295631,7.595758,1.244818,8.915240],[3.490597,-2.827613,6.748269,-5.841890],[3.733254,9.003233,-2.058928,-6.646844],[-8.470966,2.155466,7.209299,7.466721],[3.480905,-6.158960,8.520214,7.695893],[-8.069684,-6.902050,-2.293567,-0.884543],[-7.255718,-2.675416,1.849194,-4.620390],[-2.732658,-4.579922,-9.667951,3.501014],[0.332687,-0.503871,0.075365,4.621333],[8.683577,2.918262,-0.625481,0.612168],[-5.584061,-3.251723,-8.826029,8.642950],[-8.816459,-4.227545,-6.194571,-5.365485],[9.042625,-6.214658,-2.647844,-5.535065],[8.736187,6.973252,6.607632,-7.628098],[-2.505989,-7.138391,8.645188,-2.504250],[9.502539,-7.457992,-8.596012,2.343509],[9.351156,-0.174432,2.838818,-6.337624],[-2.553313,9.644549,-4.951863,6.067045],[-4.639527,-4.404145,-9.074626,5.512375],[7.534379,9.655062,-3.677547,-5.275107],[-6.912973,1.860615,4.235369,-0.848036],[-4.113014,-2.438304,4.285993,7.464964],[8.777410,3.154541,-4.541695,3.635281],[-9.876733,2.405460,-9.946033,-9.011924],[-9.784996,-1.737252,0.027513,-6.439011],[-2.623204,9.428557,-2.743041,5.478320],[-6.319859,9.865870,4.386903,-8.858136],[3.748557,-2.844368,1.728491,-4.781010],[8.548225,-0.595245,4.762377,-7.836176],[0.821449,8.612091,-2.765820,0.887850],[8.536019,-1.337468,0.945090,-7.425728],[-1.647518,-5.336563,-6.423435,-6.592883],[-4.592113,-9.792148,3.028657,3.060908],[-2.676161,-9.252852,-3.177452,2.972013],[3.477723,-2.226544,7.317436,4.819809],[-6.067596,6.632098,6.826312,-5.627471],[-0.994935,0.121364,5.785148,-2.510415],[-6.511186,-4.464085,-3.773110,-9.631885],[9.667494,7.575229,-8.219034,5.647528],[-3.468078,7.186152,-9.947154,4.678637],[-3.797135,-7.402025,-7.683609,-0.666950],[6.921884,5.033025,-2.036025,0.068126],[-7.231283,-5.232246,-8.918677,5.980880],[6.697719,-0.941077,-6.320614,-0.736012],[-4.377814,-1.064664,-6.878730,6.165608],[-7.898274,4.993768,9.205220,-8.127785],[5.767909,-4.874185,-2.050201,3.375573],[-5.413497,0.360707,4.432947,4.297635],[-7.222443,-6.182776,-4.959993,6.487529],[-7.741981,-3.256504,8.641739,-4.593564],[7.076446,-8.131523,-4.049467,9.147474],[7.575196,-6.571173,1.929905,2.780796],[5.102270,-8.732236,1.119208,-1.328040],[-8.184530,7.920370,-4.229491,4.118240],[-6.075148,2.553695,1.603653,3.739703],[-5.088253,7.428160,-7.861246,6.363107],[2.779500,5.749467,9.177407,-4.057316],[-1.857324,-1.070276,3.334265,4.415648],[6.213353,6.082535,2.624779,-8.495132],[-0.691726,6.478559,-5.594433,-5.739235],[-9.591146,-4.409612,-9.743552,-7.963527],[7.277367,1.445931,-3.002962,-1.850557],[0.969136,-9.383764,8.452675,-9.101981],[-5.893257,-8.233866,9.237045,-3.225782],[-8.800803,6.874149,-8.289347,-7.445474],[-9.019210,-8.469615,-9.965310,2.326479],[-5.294265,-2.155701,-0.912969,5.296010],[3.366125,0.089016,5.602569,-2.125984],[-8.203006,-8.064466,0.320311,-3.574084],[-4.915640,-3.314122,-3.640755,-1.150465],[8.785458,-9.450212,-6.237569,1.322147],[6.274599,-2.557330,-2.412825,-5.036992],[-1.605620,6.662667,8.327989,-5.534566],[9.320572,-8.209529,-0.913876,-6.208412],[-5.182407,7.002744,9.299487,-8.973467],[1.548452,3.321964,3.044608,-5.519329],[-4.314900,-5.379775,-3.342727,1.125844],[4.946261,8.314111,-1.598990,-4.453837],[-6.399596,4.641584,-0.436588,-7.982631],[-2.149952,9.237992,2.334710,-6.982789],[-2.222897,-8.719389,8.136940,-4.860193],[1.616391,-4.101571,4.734774,-3.517382],[-5.846055,0.825785,2.367457,-8.832252],[5.017245,-8.817715,6.962488,-7.808176],[4.745690,-6.785652,-9.423764,0.688543],[-5.586723,-0.563963,-7.309664,0.702646],[-0.448627,2.657776,-6.870972,-8.285209],[-9.536795,9.017104,0.306661,1.925062],[-9.463285,4.563877,-0.451458,-0.476144],[-9.607607,-6.040532,-3.680719,7.206275],[3.223043,-4.915123,-4.703573,4.432038],[3.025955,-0.629083,2.839646,9.248542],[-1.082724,-6.242668,-0.839440,8.741542],[2.874744,8.195962,-6.834621,7.531866],[-2.256728,9.521889,-0.435272,9.942558],[0.014334,-3.425907,5.232519,-8.964010],[-0.993704,-3.600693,-5.991479,7.320671],[5.239129,0.920870,9.654247,6.379002],[-3.961531,-4.050478,-0.651930,6.320324],[6.268914,-2.358252,1.143174,-8.758685],[2.447944,-6.422730,5.765348,-6.425578],[2.388836,-1.840000,-8.921821,-0.049968],[-5.320994,1.457219,-8.417620,6.128261],[-4.446698,-7.140517,-3.330014,0.335513],[3.718355,2.246914,5.355072,4.536644],[4.024286,7.904117,-2.618610,5.169821],[-4.189015,4.159043,4.802133,-6.824574],[-6.879437,9.292845,-8.109977,-4.471288],[7.528210,-1.411324,7.263731,3.602416],[2.770146,-2.664917,-6.768420,-1.812733],[-6.521421,7.944722,-5.692119,0.241958],[-8.884367,-3.155139,1.174557,-2.518981],[-0.052649,0.605910,-6.953232,8.435170],[4.816423,2.304168,0.440096,-8.755688],[1.521886,2.048132,-4.128205,-8.391986],[5.969683,0.500218,-8.193032,9.260278],[-1.979511,-6.487019,3.203849,-6.761116],[-1.657423,-5.077214,0.994595,9.119024],[-5.862391,5.923262,-6.544047,9.823336],[-5.597286,-4.923131,-8.479977,7.063522],[7.875219,-9.343949,9.871119,4.015788],[-3.660883,7.085608,2.489178,8.790096],[5.493919,-0.284562,-2.457345,-0.105081],[-5.701404,0.185397,-1.307679,0.585531],[6.971252,3.966892,-2.817897,-2.779558],[-0.168452,-0.101781,-8.888358,-7.748468],[-4.324902,8.933149,-1.051597,9.380455],[3.970544,-4.581019,-8.998311,3.503856],[4.141142,-1.821213,4.135262,-0.025161],[5.106286,9.358556,-6.074577,3.946393],[-4.124421,-1.170129,-1.487389,7.073294],[-7.986875,-0.668780,9.619514,-0.728327],[-1.026330,-0.560626,5.282769,7.143468],[-2.098162,4.894930,-2.346728,3.285457],[0.753154,-7.163799,-7.133289,1.593474],[4.248027,7.314465,8.048987,4.851868],[-5.476835,-8.624483,-6.065366,-3.057242],[-3.834064,-0.787838,8.681105,-6.058412],[1.600855,-4.505166,-8.982249,-1.561002],[8.034366,6.362588,-8.791202,-8.854936],[-6.972969,-6.903664,3.448396,6.925642],[-8.790165,-1.059022,-2.473725,7.079791],[2.750547,7.811615,9.430566,5.489018],[0.566255,-6.326115,8.270123,-2.053539],[8.492653,1.420510,-8.640124,-7.245164],[-6.078422,-4.506290,6.158582,-0.290009],[9.213824,2.614004,6.756401,-8.022360],[2.509579,-7.629840,1.339334,-9.445063],[-4.582704,9.823988,5.645076,6.513296],[3.855134,-7.865896,7.731661,3.155597],[-6.509250,-4.140014,-3.937943,-2.425511],[4.875661,-5.308307,4.047388,5.596285],[-3.115187,-0.283285,-7.035669,4.871445],[2.435995,2.586904,-4.270106,-8.687977],[4.284169,9.806813,0.961104,6.888671],[-2.438361,8.046276,-6.940457,4.040032],[-6.368948,-9.470815,-9.303441,-1.174418],[4.253043,-7.192593,-7.726684,-3.284107],[2.989574,7.770220,5.580794,3.018676],[0.838671,-5.948379,1.466623,-4.953419],[8.138593,8.161822,7.801260,-4.918755],[4.663528,-3.531379,6.714478,8.621192],[-1.712796,6.140447,7.551979,-2.584010],[6.197125,-1.307329,-9.228280,-8.737886],[-4.709835,2.329623,6.955831,-5.732438],[7.723167,5.643621,-3.990422,1.850803],[1.365602,-1.040579,-6.775287,4.499249],[1.837979,-8.826986,9.383552,-3.302070],[-5.965650,2.754507,0.343119,-3.259006],[-1.728049,3.668600,-2.986709,-1.414527],[1.461781,-6.552428,6.411763,7.304980],[-8.923327,-3.652918,9.272487,4.673718],[4.304703,3.888890,-8.607045,0.174062],[1.692204,5.404905,9.507142,-1.221754],[8.167673,-9.391016,-4.675998,1.035415],[-3.592823,-9.821252,-6.033687,0.715324],[-9.476629,-1.785813,1.674109,-7.473753],[-4.641885,-0.820951,3.337644,-3.104694],[-4.929211,7.033543,1.024211,3.526600],[-2.407012,5.653248,4.347497,-6.675822],[9.691352,-5.620297,-1.020842,-6.134164]], dtype = "float64")#candidate|1895|(216, 4)|const|float64
call_1894 = func_536_call(relay.reshape(const_1895.astype('float64'), [12, 9, 8]))
call_1896 = func_536_call(relay.reshape(const_1895.astype('float64'), [12, 9, 8]))
func_1112_call = mod.get_global_var('func_1112')
func_1115_call = mutated_mod.get_global_var('func_1115')
const_1910 = relay.const(-7, dtype = "int16")#candidate|1910|()|const|int16
var_1911 = relay.var("var_1911", dtype = "int16", shape = (2304, 1))#candidate|1911|(2304, 1)|var|int16
call_1909 = func_1112_call(relay.reshape(const_1910.astype('int16'), []), relay.reshape(var_1911.astype('int16'), [12, 12, 16]), )
call_1912 = func_1112_call(relay.reshape(const_1910.astype('int16'), []), relay.reshape(var_1911.astype('int16'), [12, 12, 16]), )
func_1112_call = mod.get_global_var('func_1112')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_1919 = func_1112_call(relay.reshape(const_1910.astype('int16'), []), relay.reshape(var_1911.astype('int16'), [12, 12, 16]), )
call_1920 = func_1112_call(relay.reshape(const_1910.astype('int16'), []), relay.reshape(var_1911.astype('int16'), [12, 12, 16]), )
bop_1924 = relay.mod(const_1910.astype('float64'), var_1886.astype('float64')) # shape=(14, 14, 2)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
call_1940 = func_536_call(relay.reshape(call_1894.astype('float64'), [12, 9, 8]))
call_1941 = func_536_call(relay.reshape(call_1894.astype('float64'), [12, 9, 8]))
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_1950 = relay.var("var_1950", dtype = "int64", shape = (80, 4))#candidate|1950|(80, 4)|var|int64
call_1949 = relay.TupleGetItem(func_1081_call(relay.reshape(var_1950.astype('int64'), [10, 2, 16])), 2)
call_1951 = relay.TupleGetItem(func_1084_call(relay.reshape(var_1950.astype('int64'), [10, 2, 16])), 2)
output = relay.Tuple([bop_1887,call_1894,const_1895,call_1909,var_1911,call_1919,bop_1924,call_1940,call_1949,var_1950,])
output2 = relay.Tuple([bop_1887,call_1896,const_1895,call_1912,var_1911,call_1920,bop_1924,call_1941,call_1951,var_1950,])
func_1954 = relay.Function([var_1886,var_1911,var_1950,], output)
mod['func_1954'] = func_1954
mod = relay.transform.InferType()(mod)
mutated_mod['func_1954'] = func_1954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1954_call = mutated_mod.get_global_var('func_1954')
var_1956 = relay.var("var_1956", dtype = "uint32", shape = (14, 14, 2))#candidate|1956|(14, 14, 2)|var|uint32
var_1957 = relay.var("var_1957", dtype = "int16", shape = (2304, 1))#candidate|1957|(2304, 1)|var|int16
var_1958 = relay.var("var_1958", dtype = "int64", shape = (80, 4))#candidate|1958|(80, 4)|var|int64
call_1955 = func_1954_call(var_1956,var_1957,var_1958,)
output = call_1955
func_1959 = relay.Function([var_1956,var_1957,var_1958,], output)
mutated_mod['func_1959'] = func_1959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2102 = relay.var("var_2102", dtype = "float64", shape = (16, 9, 16))#candidate|2102|(16, 9, 16)|var|float64
uop_2103 = relay.sqrt(var_2102.astype('float64')) # shape=(16, 9, 16)
output = relay.Tuple([uop_2103,])
output2 = relay.Tuple([uop_2103,])
func_2105 = relay.Function([var_2102,], output)
mod['func_2105'] = func_2105
mod = relay.transform.InferType()(mod)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2106 = relay.var("var_2106", dtype = "float64", shape = (16, 9, 16))#candidate|2106|(16, 9, 16)|var|float64
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2107 = func_2105_call(var_2106)
output = call_2107
func_2108 = relay.Function([var_2106], output)
mutated_mod['func_2108'] = func_2108
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2432 = relay.const([[[3,-1,10,-1,-8,9,6,1,-5,-7,-9],[-1,8,6,-1,5,3,-8,9,-9,4,-8],[-5,2,-9,10,-5,-5,-5,8,1,9,-9],[-7,10,-3,4,-3,-2,9,-6,-1,2,-4]],[[4,10,-5,-1,7,1,6,10,-7,8,-9],[-1,8,6,6,4,1,-9,-4,-9,8,6],[3,-5,10,10,-2,6,2,9,-1,-10,-8],[7,7,3,-5,3,-7,-8,10,8,-8,-2]],[[-6,8,4,10,-7,6,-4,-3,-7,8,-3],[-1,-6,-6,3,7,-1,-5,-5,8,1,-7],[-2,5,-5,3,1,4,5,4,-10,-5,5],[7,-6,-1,-9,-3,7,8,3,3,-7,1]],[[-6,10,-5,-8,-7,-2,8,-10,-2,-5,1],[4,-9,7,-1,-8,3,-5,-2,-9,-6,10],[4,10,-4,-6,2,-8,6,-9,-4,-6,-4],[5,1,-7,-7,-10,8,1,-9,-7,-7,-4]],[[-2,10,9,-3,6,-2,-6,-4,5,-5,8],[-5,3,9,-8,-2,5,6,-9,-8,-1,-10],[9,-9,9,-9,10,-3,-5,4,5,-4,10],[-6,-1,4,7,6,-9,10,8,7,3,-2]],[[2,2,2,8,5,2,10,-5,-1,3,-7],[10,-4,5,6,-8,3,-6,7,8,-9,8],[-8,8,-6,-3,-4,8,1,7,-3,6,6],[-3,-7,5,-3,7,5,-3,4,4,1,8]]], dtype = "int16")#candidate|2432|(6, 4, 11)|const|int16
const_2433 = relay.const([[[6,-9,-4,-5,10,10,3,-4,-3,10,-2],[-3,7,8,2,-8,-7,9,5,-6,-3,5],[-6,-10,-7,-9,3,7,5,1,-7,4,-8],[-7,8,8,-2,7,3,8,-8,-10,-8,2]],[[-4,-1,-2,5,7,-2,7,-6,2,-8,-1],[-6,3,1,-5,-5,3,-10,-10,-4,-8,3],[6,-4,-5,7,9,6,-9,3,9,3,-3],[-7,-9,-1,-7,2,-6,-6,-1,8,6,1]],[[-10,-1,2,2,-8,-8,2,-4,4,6,4],[-2,3,-4,3,-4,10,5,-9,7,8,4],[5,-10,-4,2,6,-3,-5,8,4,2,-9],[-8,-3,-8,2,-8,-10,7,-5,-1,4,-10]],[[3,-6,3,-1,-4,1,-3,8,-2,2,7],[7,-10,-2,4,-3,1,-2,-7,7,1,9],[-8,7,5,2,-9,-1,9,5,-5,-2,8],[-3,8,-8,-7,-3,6,-4,9,3,7,7]],[[9,-1,10,3,9,5,-5,6,-2,6,7],[8,-6,-4,-5,6,4,-10,-1,2,-8,-7],[10,6,10,-9,-10,5,-8,-6,9,-8,-1],[7,1,4,-6,6,-4,-9,2,3,7,-7]],[[-6,-1,-9,8,-7,-4,4,-2,10,-8,8],[-1,7,4,4,10,-6,-3,-10,-5,-5,9],[-8,10,9,-4,-7,-9,1,-2,-5,-2,-3],[-6,-7,-10,-1,-2,10,-10,-1,-7,-9,7]]], dtype = "int16")#candidate|2433|(6, 4, 11)|const|int16
bop_2434 = relay.right_shift(const_2432.astype('int16'), relay.reshape(const_2433.astype('int16'), relay.shape_of(const_2432))) # shape=(6, 4, 11)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_2440 = relay.var("var_2440", dtype = "int64", shape = (8, 40))#candidate|2440|(8, 40)|var|int64
call_2439 = relay.TupleGetItem(func_1081_call(relay.reshape(var_2440.astype('int64'), [10, 2, 16])), 0)
call_2441 = relay.TupleGetItem(func_1084_call(relay.reshape(var_2440.astype('int64'), [10, 2, 16])), 0)
output = relay.Tuple([bop_2434,call_2439,var_2440,])
output2 = relay.Tuple([bop_2434,call_2441,var_2440,])
func_2447 = relay.Function([var_2440,], output)
mod['func_2447'] = func_2447
mod = relay.transform.InferType()(mod)
var_2448 = relay.var("var_2448", dtype = "int64", shape = (8, 40))#candidate|2448|(8, 40)|var|int64
output = func_2447(var_2448)
func_2449 = relay.Function([var_2448], output)
mutated_mod['func_2449'] = func_2449
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2455 = relay.const([[[2,-6,-10,5,-6,-8,4,9,-9,10,1,8,2,-10],[5,6,8,6,5,-1,-2,-5,3,8,3,4,1,7],[-3,-4,3,-8,3,10,-7,8,1,8,7,8,6,-2],[-5,2,10,-8,7,-5,-2,-6,-9,8,8,-6,2,5],[-7,6,-7,-9,6,1,5,-2,4,-6,6,5,-10,1]],[[6,-1,-2,-2,-7,8,-8,7,-7,-10,10,-2,-10,10],[-7,-1,6,5,-2,7,-9,5,5,1,-2,1,-7,-8],[-9,4,-1,10,-8,5,1,1,8,7,9,-3,9,5],[-6,-2,1,-4,2,10,-8,-1,-7,-1,10,8,8,-2],[-7,4,8,-2,-3,-3,-10,-6,-10,-9,1,3,10,3]],[[-5,8,10,5,9,10,4,8,8,2,2,4,3,-9],[1,2,6,5,-3,5,10,5,-1,-7,6,-7,-1,6],[-10,-7,-6,4,9,10,-4,4,-2,-9,10,2,-5,8],[1,10,-6,2,-5,6,10,4,10,-9,6,5,-5,-6],[3,-8,6,8,4,6,8,1,-5,-3,6,-9,-1,-8]],[[9,-1,-8,9,-7,-7,-6,-10,4,-4,8,-6,-9,-7],[-9,-9,1,-3,8,-2,-10,6,2,2,-7,7,-4,-2],[-9,-3,5,7,3,4,3,-6,7,-10,-10,-6,-1,-4],[5,-5,-4,3,2,5,9,7,-5,6,7,-10,-10,-5],[7,-5,-5,9,1,-9,3,8,-1,-5,-10,-8,-10,-5]]], dtype = "uint64")#candidate|2455|(4, 5, 14)|const|uint64
var_2456 = relay.var("var_2456", dtype = "uint64", shape = (4, 5, 14))#candidate|2456|(4, 5, 14)|var|uint64
bop_2457 = relay.less(const_2455.astype('bool'), relay.reshape(var_2456.astype('bool'), relay.shape_of(const_2455))) # shape=(4, 5, 14)
func_1112_call = mod.get_global_var('func_1112')
func_1115_call = mutated_mod.get_global_var('func_1115')
var_2471 = relay.var("var_2471", dtype = "int16", shape = ())#candidate|2471|()|var|int16
const_2472 = relay.const([-8,-2,-10,-6,5,-3,9,1,-7,-10,-5,-4,-8,2,-4,5,-3,-8,-3,9,-10,-2,4,-1,-10,-7,9,3,-4,5,5,9,6,1,2,7,2,-3,3,-7,-8,-7,-6,6,9,-10,-3,2,-6,1,3,-10,-5,9,-10,2,1,-6,-4,-8,6,-7,9,-10,-4,-3,-7,2,-7,-2,7,6,5,-6,-4,2,-4,-1,-2,-6,-2,-3,-1,2,6,-6,2,-1,-3,6,3,9,10,-8,3,-9,4,-3,-5,-6,3,-3,3,-1,-3,8,-6,-1,9,9,7,6,-9,8,-5,4,6,2,3,10,10,-2,-4,-5,6,4,3,5,-8,8,7,3,1,-7,-1,-2,4,7,9,-3,-7,8,-7,-4,6,-10,5,-10,-1,3,-5,-2,1,9,5,-6,-8,-4,7,-10,1,-10,7,5,9,1,6,-5,5,8,-5,-2,-1,8,4,3,-9,-2,-4,-4,8,1,9,1,-9,1,5,8,10,2,-5,-1,-1,-1,-1,-10,-10,-3,6,-2,2,10,9,-1,-6,-4,1,3,8,7,-9,-8,-7,-8,4,-7,-5,6,-6,2,-4,-1,2,7,10,-9,10,-9,-10,-9,7,3,-4,6,7,-10,-4,6,-6,6,-6,4,4,-4,-10,-9,10,9,-10,-1,-2,-8,3,6,6,5,9,-1,-3,-5,9,-10,-5,-4,-5,-2,8,-5,5,-10,3,4,-5,5,1,10,6,-2,10,-6,10,4,-1,9,-10,6,2,-5,6,-4,-2,10,6,-6,7,-3,-3,7,6,9,-4,-9,-6,5,6,10,6,5,3,10,7,-9,2,4,3,-4,-8,-7,-1,8,-2,5,-10,1,4,-5,7,-1,1,7,-9,-1,3,-3,10,2,-10,1,-9,-3,-6,-4,-4,1,10,-7,8,10,-6,8,2,10,-10,4,-5,-4,7,5,-5,-5,6,-6,2,8,8,-5,-7,-4,6,-6,-5,2,-10,-5,3,2,2,4,3,-3,7,3,3,-10,-5,9,-9,-6,-10,-6,9,-2,7,8,-7,2,8,-7,3,9,-6,-2,1,-5,-6,-4,10,-9,-4,-6,-7,7,4,-6,3,-6,4,-3,-5,6,1,8,9,-8,-6,8,-3,-9,-10,3,-10,4,7,9,-8,-3,6,-2,-3,-8,5,4,-10,6,-10,7,7,2,-1,-6,-5,-9,2,-5,-2,-4,8,6,3,-10,-10,-10,10,-3,-4,-9,-9,9,-8,8,5,8,2,-3,-5,-5,-2,3,9,-3,6,10,-10,7,-1,-9,-9,-2,-10,-3,10,1,-4,-5,2,-4,2,4,-2,2,-5,4,10,2,-2,5,4,-7,-2,-1,-2,3,-8,-8,7,8,10,8,9,-10,-7,-7,2,-1,-8,-9,7,4,10,-10,1,10,1,3,-10,-4,-7,9,-5,-6,-3,3,8,7,-9,-4,6,-4,-4,8,-10,-10,-3,8,1,1,6,6,-1,-1,-2,1,-1,-5,-1,-8,5,-8,6,6,-8,1,-1,10,-2,4,-8,-1,9,-5,-9,1,-8,2,-5,-1,-5,8,1,-8,1,-6,7,9,3,8,4,8,8,-7,-8,5,5,7,-1,1,-7,10,-4,9,2,1,-7,-1,-9,-10,-9,8,8,9,10,-3,7,-10,4,-10,9,4,10,-2,6,-4,7,-8,-7,6,9,8,-3,-6,-10,-3,8,4,7,-5,-10,-5,-10,3,1,9,-7,5,5,-6,8,1,-1,1,3,-8,-6,-1,7,6,-3,10,-9,-1,4,9,-9,7,-7,7,-6,-4,-9,9,-9,5,-9,2,-10,4,2,-8,-4,-10,-5,1,-3,6,-10,-9,-1,10,1,-9,7,-5,-7,-10,7,-1,9,6,7,-4,-8,-7,-9,-10,-1,9,2,-6,6,9,-8,-6,2,-8,5,-9,7,3,-5,6,1,5,-1,4,9,-1,-6,3,-10,-1,3,7,6,-5,2,-8,-9,8,-5,7,8,10,-4,5,2,-8,-6,6,-4,4,4,-9,-4,-3,1,-3,-8,4,4,8,5,-2,3,-6,8,-5,3,-5,2,6,-10,2,-1,-1,-6,-10,7,6,9,8,-2,-8,-6,-4,3,-2,10,-10,-10,6,4,-1,-10,-10,6,6,1,-5,-9,7,-8,4,5,-8,6,3,4,10,10,4,-10,-6,-6,-9,-9,-6,7,4,5,7,8,1,5,-7,-3,-2,1,3,-10,-2,-1,5,-2,8,-3,-7,4,-4,-9,-5,-1,-5,-5,-10,3,4,-4,-9,-10,-2,-1,-5,-8,5,1,2,-5,4,5,4,10,1,-9,-10,7,-1,4,-5,-8,-2,10,-10,-2,6,-10,7,-2,-2,9,9,6,6,7,-2,4,3,9,1,-8,1,1,6,6,-2,1,-3,-1,-7,-2,5,-5,10,-2,7,9,-7,-4,2,2,7,5,-2,-10,-7,10,-10,10,8,10,3,-3,-8,3,9,3,-3,-7,-7,6,1,5,2,1,9,-7,-1,-3,7,8,-3,3,9,3,-1,9,-6,5,-2,-9,-8,-5,7,5,-4,-2,-3,-7,7,6,10,1,-10,5,1,-4,10,-7,7,-1,-4,-10,-7,9,6,3,-3,-1,9,4,1,10,-7,-6,-8,5,-9,-8,3,-2,5,4,-10,-10,2,10,3,-5,-4,5,10,-3,-7,5,10,-7,-5,-4,8,5,-9,-3,2,5,1,-7,1,9,-2,-6,-4,-9,7,-5,7,-5,4,1,8,-1,5,7,9,-2,10,3,-4,-4,-6,-6,-8,9,8,7,5,4,-7,4,7,-5,5,-1,-10,1,-6,9,5,6,-8,-1,3,3,-6,-6,-4,-2,-10,-9,9,-6,-5,9,-3,-7,-9,5,6,4,4,7,-2,6,-3,2,-5,5,5,3,-10,-10,3,-3,-3,2,-6,5,9,9,8,-2,-2,-6,4,5,-2,-4,-8,3,-3,-9,6,-6,7,7,-9,-10,-9,-7,6,6,5,-4,-7,6,-3,-9,-1,6,-2,-3,1,9,-10,2,8,-5,-7,8,7,2,-1,1,-5,9,-9,8,6,1,-6,3,10,-7,-8,-9,-8,-8,-3,10,7,5,2,7,1,-5,10,10,-7,-9,9,1,-10,-6,-10,-10,6,3,9,7,8,8,1,10,-5,4,-6,1,5,-8,4,2,-5,9,6,7,-1,4,3,1,-2,1,-1,5,-2,3,-4,7,1,-5,-5,1,-9,7,8,9,-4,-9,5,-4,-10,4,-3,3,-8,-3,3,8,-10,4,-4,9,3,4,5,-4,5,8,8,4,-2,-10,10,6,2,9,3,3,-7,6,3,6,8,5,-5,-4,5,-1,10,6,-7,8,-2,-8,8,-10,3,-10,-10,-9,-4,-2,-8,6,2,2,7,-1,-10,10,2,8,6,6,-5,-2,9,7,-7,-5,-5,10,6,-2,8,-4,-2,6,2,-5,-9,5,-1,7,-9,8,-1,7,10,4,1,-10,2,-2,-10,-3,-6,-8,5,6,10,-8,-4,10,2,2,4,6,-8,2,7,-8,4,-1,-3,-2,3,-6,3,-1,-10,8,-4,9,5,9,-7,-7,3,9,-5,1,-9,4,-10,8,-7,3,-3,3,-4,-1,1,1,6,-2,-10,-8,9,-2,-7,1,7,5,-8,9,5,10,-8,2,10,-2,8,-9,3,7,2,-4,-4,8,-9,2,4,2,5,-5,-7,-7,-8,3,8,1,-8,8,8,-3,-10,3,-1,8,-8,-10,10,9,4,9,-1,-3,-9,-10,4,6,-10,-1,-3,-6,-2,5,6,1,-7,3,5,7,-6,3,-2,-7,7,3,9,-10,-6,4,-10,-3,7,4,-1,-8,-10,6,-9,6,10,-7,-9,-9,-3,-8,-10,-7,-6,-1,-4,3,-9,7,3,-5,3,2,-8,-10,6,3,10,6,-2,4,-5,7,-7,3,8,-4,9,-6,9,-9,5,-4,3,2,7,9,-4,-8,-3,-10,1,3,-10,-9,6,-5,-2,-9,-6,-10,8,5,-6,-2,5,1,7,-8,-4,7,6,4,-10,-5,-3,-1,2,10,10,8,-5,3,-4,1,7,9,-10,3,3,6,1,-6,3,5,-9,1,2,8,-5,4,-4,5,-6,-4,6,-5,-9,-2,-1,8,-9,-6,2,-9,-10,7,5,-10,10,-10,-5,-5,-7,7,-5,-8,3,-7,5,-10,-8,2,10,-4,5,-7,8,7,1,3,-8,-10,4,-5,-1,7,3,3,-1,-4,-9,-9,4,-4,9,-1,-10,-7,8,5,-9,1,2,-5,-8,-9,3,6,3,4,-9,10,-6,4,-1,3,1,-3,-7,8,-9,-4,5,2,2,-4,1,-8,3,10,1,5,9,-9,-6,2,1,2,8,8,7,2,-5,4,-4,-3,10,-1,6,3,-4,-1,-3,-5,-4,4,4,-3,6,-9,2,7,2,10,7,-1,-8,-8,-7,3,-5,-7,3,-9,7,-1,-2,2,-8,1,6,6,8,7,6,-7,9,1,-1,-2,10,7,4,5,2,5,2,1,5,3,10,-2,3,-10,4,3,5,-8,-1,-1,1,-10,7,-2,1,-2,7,-1,-9,-7,3,9,-1,-9,9,7,5,-2,-3,5,-2,-7,2,9,9,6,-7,-3,1,-3,3,-10,-9,3,9,-8,-6,9,-2,-9,6,6,10,2,-3,-2,4,9,6,-5,-9,-7,-7,2,9,-4,-7,-8,2,-6,4,-3,2,2,-3,5,10,-6,-10,-10,-10,-4,5,-3,2,3,-9,-4,10,9,5,-5,7,3,10,8,8,-6,-6,9,8,5,10,-8,-7,2,-10,6,10,7,-3,-9,-9,-3,6,4,-5,3,10,4,8,-7,4,-6,-5,6,7,8,-2,10,4,-4,-3,-4,10,-8,5,7,-3,6,7,3,-7,2,1,-9,-8,-5,4,1,9,-2,-9,6,3,7,5,-6,2,-4,-1,-9,10,9,-3,-5,2,-7,-8,2,-8,-3,-10,7,-8,6,-6,10,10,9,10,8,-3,2,9,-3,4,1,-5,-7,-1,-4,-9,-4,-2,4,7,5,-6,-3,10,3,-2,-7,1,1,8,-1,-10,7,6,-5,3,6,6,6,5,-1,2,-3,-3,-6,-10,9,2,3,9,-2,7,-4,7,-8,-9,-7,-8,-5,9,-1,10,8,-7,-9,-8,-1,-1,7,-6,8,5,-8,8,-1,7,-5,-5,7,5,-10,-9,9,7,5,10,-3,-9,-7,6,-5,1,2,-6,-7,6,-5,8,4,9,-3,5,5,6,-2,-9,7,-8,5,7,4,-9,8,-2,-5,4,-1,3,-2,5,3,-4,3,1,-7,-1,-4,1,-8,-6,5,2,-8,1,5,-7,-9,1,4,-1,10,3,2,6,8,-4,4,10,-2,4,-6,-6,-2,6,-8,-7,9,-2,4,3,-2,7,-5,-7,-6,4,2,7,-6,-1,2,-5,-8,1,7,-5,3,2,-7,-6,-10,6,-10,-7,6,3,6,8,-4,-7,5,9,-2,-7,-10,3,-3,1,2,2,-3,-5,-2,4,-3,9,3,-5,7,-5,5,6,-6,1,-2,-5,7,-4,4,7,9,5,-1,6,-2,-4,10,5,6,4,-9,3,-3,-5,6,-6,5,4,4,4,10,5,2,6,5,6,-2,-10,-9,-4,8,-8,3,-8,4,5,4,4,9,3,-3,-10,1,10,6,3,-5,-6,4,7,10,2,3,9,7,8,3,4,9,-4,-7,-10,9,-1,1,-3,-2,-6,-10,-7,-7,6,6,-5,-4,-1,-7,5,6,-3,6,2,8,2,-1,6,5,-1,3,-5,7,8,-6,4,-9,-3,-2,2,10,-9,-3,2,-8,-1,9,8,2,3,-10,-2,-3,-5,-7,-6,-1,10,1,-5,3,2,10,1,7,-9,-9,6,-5,9,-8,-1,-10,-6,-10,-2,5,-8,-5,8,-3,6,10,-5,3,-7,7,-1,-6,9,-5,3,-6,-6,10,-2,-3,-4,-2,-7,3,7,9,-10,-2,3,2,9,6,9,-3,8,1,8,3,8,9,-7,-3,5,5,-5,5,5,3,-9,4,2,-1,9,-6,-1], dtype = "int16")#candidate|2472|(2304,)|const|int16
call_2470 = func_1112_call(relay.reshape(var_2471.astype('int16'), []), relay.reshape(const_2472.astype('int16'), [12, 12, 16]), )
call_2473 = func_1112_call(relay.reshape(var_2471.astype('int16'), []), relay.reshape(const_2472.astype('int16'), [12, 12, 16]), )
var_2479 = relay.var("var_2479", dtype = "uint64", shape = (4, 5, 14))#candidate|2479|(4, 5, 14)|var|uint64
bop_2480 = relay.add(const_2455.astype('uint8'), relay.reshape(var_2479.astype('uint8'), relay.shape_of(const_2455))) # shape=(4, 5, 14)
output = relay.Tuple([bop_2457,call_2470,var_2471,const_2472,bop_2480,])
output2 = relay.Tuple([bop_2457,call_2473,var_2471,const_2472,bop_2480,])
func_2488 = relay.Function([var_2456,var_2471,var_2479,], output)
mod['func_2488'] = func_2488
mod = relay.transform.InferType()(mod)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2488_call = mutated_mod.get_global_var('func_2488')
var_2490 = relay.var("var_2490", dtype = "uint64", shape = (4, 5, 14))#candidate|2490|(4, 5, 14)|var|uint64
var_2491 = relay.var("var_2491", dtype = "int16", shape = ())#candidate|2491|()|var|int16
var_2492 = relay.var("var_2492", dtype = "uint64", shape = (4, 5, 14))#candidate|2492|(4, 5, 14)|var|uint64
call_2489 = func_2488_call(var_2490,var_2491,var_2492,)
output = call_2489
func_2493 = relay.Function([var_2490,var_2491,var_2492,], output)
mutated_mod['func_2493'] = func_2493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2558 = relay.var("var_2558", dtype = "float64", shape = (14, 9, 9))#candidate|2558|(14, 9, 9)|var|float64
uop_2559 = relay.cosh(var_2558.astype('float64')) # shape=(14, 9, 9)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_2562 = relay.const([[-4,9,6,6,8,-10],[8,-2,8,4,-8,7],[3,-7,-9,-7,10,4],[1,-4,8,10,7,-5],[-7,-2,-10,-10,-6,-9],[9,-7,-3,7,-2,3],[-4,-8,-8,-5,-3,-7],[-7,-5,3,7,9,1],[4,8,-8,10,5,-4],[-10,-5,7,6,-10,-6],[-7,4,-6,10,2,9],[-10,-3,-4,7,5,9],[-7,-5,-7,9,-3,-10],[8,10,7,-10,-6,-3],[10,-8,-3,5,3,-6],[-1,2,7,-5,-1,3],[-6,-8,-5,-5,-10,-8],[-2,-2,4,-5,2,1],[1,-4,-2,-4,-1,-1],[1,1,-10,4,-5,7],[6,-4,-1,-10,2,-7],[-1,3,3,-8,3,-6],[10,7,10,-3,-7,-7],[-4,3,10,-10,-2,5],[-10,-10,2,-8,-7,8],[-10,-6,-9,-9,9,-9],[-3,2,-4,1,-9,9],[-8,-6,1,-4,6,-9],[-2,-8,-10,2,7,-9],[10,-5,10,2,10,-4],[-1,-1,8,-2,6,-1],[-8,-10,-6,6,-8,7],[-6,9,-9,6,-1,7],[-6,-2,-2,1,-6,6],[9,-10,-6,8,-7,7],[-9,-6,-9,2,5,-8],[-8,8,9,6,8,6],[2,-6,-10,-5,-6,-1],[-3,8,8,-4,4,-8],[5,-10,1,-7,-1,-2],[-5,-10,-7,4,4,9],[-10,6,-4,-7,-2,2],[-7,6,1,9,-4,-5],[-7,-2,-2,3,-3,-6],[-7,8,3,3,-10,-8],[-7,-6,-5,6,1,5],[9,5,-10,1,-7,-7],[10,10,6,-8,6,-6],[7,5,9,1,-1,-4],[-1,-6,-5,-9,-2,-2],[9,-3,-5,10,-2,10],[-6,-3,-1,-5,3,9],[6,-2,8,-7,7,-4],[3,-4,8,8,7,2],[-10,8,-10,-1,6,-3],[1,-1,-3,9,-8,1],[-7,3,-2,-1,2,6],[-8,-6,-2,7,2,10],[-5,-9,3,1,1,-5],[-9,-5,-6,10,-8,8],[-7,1,-5,5,9,-2],[-6,-4,9,1,-6,8],[7,-7,6,5,2,-5],[7,6,-5,-10,-3,9],[-4,1,-7,3,7,-9],[7,6,-9,8,-10,4],[3,6,8,10,-6,-3],[8,-8,-8,-7,10,6],[-6,-7,-9,4,7,-1],[-7,-7,2,5,6,6],[-10,-8,-10,-4,-9,5],[-4,-3,10,5,5,-10],[4,8,9,-3,-8,-3],[-7,5,8,5,8,2],[-2,-5,9,-3,-3,2],[-4,2,5,-2,-2,10],[6,1,-3,-4,-10,-3],[6,-1,-6,10,-7,6]], dtype = "int16")#candidate|2562|(78, 6)|const|int16
var_2563 = relay.var("var_2563", dtype = "float64", shape = (864,))#candidate|2563|(864,)|var|float64
call_2561 = relay.TupleGetItem(func_648_call(relay.reshape(const_2562.astype('int16'), [4, 9, 13]), relay.reshape(var_2563.astype('float64'), [864,]), ), 6)
call_2564 = relay.TupleGetItem(func_651_call(relay.reshape(const_2562.astype('int16'), [4, 9, 13]), relay.reshape(var_2563.astype('float64'), [864,]), ), 6)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
const_2579 = relay.const([-9,-9,6,1,9,7,2,3,-6,6,1,3,3,4,7,2,-8,-2,-2,2,-6,9,3,-9,-1,1,2,-1,-3,7,-8,-7,-1,-9,-1,-6,9,4,-7,3,7,9,9,-2,-7,-4,9,1,2,3,-10,2,-4,1,9,-9,-7,-6,10,-9,-9,4,-6,-8,-7,-4,1,8,2,9,3,-8,6,-9,3,3,-2,-10,4,-7,-2,-7,4,-10,-5,8,5,-2,-9,7,-8,-6,9,-7,5,-3,-4,9,8,-2,6,-2,-5,4,-3,8,3,-4,-1,7,-6,2,-3,-5,10,-3,-9,-9,-7,-10,4,-4,3,9,-8,9,-7,3,2,10,-7,-8,7,-3,-10,7,-5,9,8,4,-4,-1,4,2,1,-7,6,9,1,-8,-8,-5,5,-3,-3,10,-1,-10,-4,-10,4,-5,3,4,7,4,-6,-8,-2,3,-7,-3,-3,-3,5,1,-3,2,2,9,-7,-5,-4,3,4,-1,10,-9,-7,7,10,-1,-6,-10,-6,-10,-3,-9,7,-3,9,-10,-8,-1,5,-6,8,7,-8,-4,5,-1,-8,7,2,4,6,2,7,10,1,-5,1,5,-9,6,-5,-6,7,8,-3,-3,-8,-2,6,7,8,-8,-5,10,2,-10,5,9,9,-3,8,1,1,-3,5,-4,-1,4,5,-2,2,-3,-7,-8,8,9,7,5,3,-5,-7,3,-1,-6,1,-3,-9,7,-1,-2,-8,6,-1,3,1,4,7,6,4,-4,9,7,6,-5,1,-7,-8,-4,5,5,-3,4,8,-8,3,9,-1,-1,10,-5,3,2,6,2,-3,-5,-8,8,8,-8,10,-4,-4,2], dtype = "int64")#candidate|2579|(320,)|const|int64
call_2578 = relay.TupleGetItem(func_1081_call(relay.reshape(const_2579.astype('int64'), [10, 2, 16])), 2)
call_2580 = relay.TupleGetItem(func_1084_call(relay.reshape(const_2579.astype('int64'), [10, 2, 16])), 2)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
call_2584 = relay.TupleGetItem(func_177_call(relay.reshape(call_2561.astype('int64'), [11, 6, 12])), 0)
call_2585 = relay.TupleGetItem(func_179_call(relay.reshape(call_2561.astype('int64'), [11, 6, 12])), 0)
bop_2591 = relay.floor_mod(uop_2559.astype('float64'), relay.reshape(var_2558.astype('float64'), relay.shape_of(uop_2559))) # shape=(14, 9, 9)
uop_2594 = relay.log2(bop_2591.astype('float64')) # shape=(14, 9, 9)
output = relay.Tuple([call_2561,const_2562,var_2563,call_2578,const_2579,call_2584,uop_2594,])
output2 = relay.Tuple([call_2564,const_2562,var_2563,call_2580,const_2579,call_2585,uop_2594,])
func_2597 = relay.Function([var_2558,var_2563,], output)
mod['func_2597'] = func_2597
mod = relay.transform.InferType()(mod)
mutated_mod['func_2597'] = func_2597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2597_call = mutated_mod.get_global_var('func_2597')
var_2599 = relay.var("var_2599", dtype = "float64", shape = (14, 9, 9))#candidate|2599|(14, 9, 9)|var|float64
var_2600 = relay.var("var_2600", dtype = "float64", shape = (864,))#candidate|2600|(864,)|var|float64
call_2598 = func_2597_call(var_2599,var_2600,)
output = call_2598
func_2601 = relay.Function([var_2599,var_2600,], output)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2726 = relay.var("var_2726", dtype = "float32", shape = (3, 2, 10))#candidate|2726|(3, 2, 10)|var|float32
uop_2727 = relay.log2(var_2726.astype('float32')) # shape=(3, 2, 10)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
var_2730 = relay.var("var_2730", dtype = "int16", shape = (1, 468))#candidate|2730|(1, 468)|var|int16
var_2731 = relay.var("var_2731", dtype = "float64", shape = (864,))#candidate|2731|(864,)|var|float64
call_2729 = relay.TupleGetItem(func_648_call(relay.reshape(var_2730.astype('int16'), [4, 9, 13]), relay.reshape(var_2731.astype('float64'), [864,]), ), 5)
call_2732 = relay.TupleGetItem(func_651_call(relay.reshape(var_2730.astype('int16'), [4, 9, 13]), relay.reshape(var_2731.astype('float64'), [864,]), ), 5)
func_2597_call = mod.get_global_var('func_2597')
func_2601_call = mutated_mod.get_global_var('func_2601')
var_2739 = relay.var("var_2739", dtype = "float64", shape = (567, 2))#candidate|2739|(567, 2)|var|float64
call_2738 = relay.TupleGetItem(func_2597_call(relay.reshape(var_2739.astype('float64'), [14, 9, 9]), relay.reshape(var_2731.astype('float64'), [864,]), ), 3)
call_2740 = relay.TupleGetItem(func_2601_call(relay.reshape(var_2739.astype('float64'), [14, 9, 9]), relay.reshape(var_2731.astype('float64'), [864,]), ), 3)
var_2757 = relay.var("var_2757", dtype = "float32", shape = (3, 2, 10))#candidate|2757|(3, 2, 10)|var|float32
bop_2758 = relay.less_equal(uop_2727.astype('bool'), relay.reshape(var_2757.astype('bool'), relay.shape_of(uop_2727))) # shape=(3, 2, 10)
func_1655_call = mod.get_global_var('func_1655')
func_1657_call = mutated_mod.get_global_var('func_1657')
var_2763 = relay.var("var_2763", dtype = "float64", shape = (6,))#candidate|2763|(6,)|var|float64
call_2762 = relay.TupleGetItem(func_1655_call(relay.reshape(var_2763.astype('float64'), [1, 6, 1])), 0)
call_2764 = relay.TupleGetItem(func_1657_call(relay.reshape(var_2763.astype('float64'), [1, 6, 1])), 0)
func_1112_call = mod.get_global_var('func_1112')
func_1115_call = mutated_mod.get_global_var('func_1115')
var_2776 = relay.var("var_2776", dtype = "int16", shape = ())#candidate|2776|()|var|int16
const_2777 = relay.const([5,6,-9,-6,6,7,-6,-8,-5,-6,1,5,8,8,-4,-9,8,3,-8,6,-8,4,9,3,-4,9,6,7,-3,8,-8,8,-4,3,-9,6,1,9,1,-4,-1,-2,-8,3,-4,3,-9,7,-4,-7,-9,-10,4,-2,3,2,2,-3,3,-4,-8,-8,-9,-4,5,-8,6,-9,-9,-3,-9,-6,-1,3,-8,10,5,-5,-4,9,-2,-8,-5,7,7,6,-7,9,3,1,-9,9,10,8,3,-7,-6,-1,1,-5,-10,-6,-5,-4,-5,2,-7,-7,3,4,7,-2,6,4,-3,-8,1,-1,-9,5,-1,9,7,6,-3,7,2,3,-5,9,-5,5,1,2,-3,3,5,-4,7,-2,10,2,-1,2,-9,7,8,-2,8,-8,-5,4,2,-4,-8,3,8,-2,8,6,-6,5,-5,-2,3,3,-2,1,7,-5,2,6,1,10,3,9,10,-5,1,9,9,5,3,5,1,-6,8,-2,2,-2,-9,6,5,6,1,3,9,3,-3,-1,-10,7,1,-1,-5,-7,4,-6,7,8,-7,-9,-10,-6,3,-7,-4,-3,8,-7,-6,7,-8,-2,5,2,-2,6,-7,5,2,3,10,3,1,-1,2,9,-9,6,3,-5,1,7,8,8,-5,5,8,-3,6,5,10,-2,7,4,-6,-4,-2,6,2,9,-6,3,2,2,10,10,1,2,7,-7,6,-3,2,-8,3,2,-2,5,2,4,5,3,-3,6,-10,-5,2,-5,-7,-9,-10,4,-7,-6,6,-3,1,9,-1,-5,7,7,10,-6,-7,-9,-7,9,-10,6,-4,-9,5,10,-2,-8,7,-10,9,3,-10,-3,3,-2,-6,1,7,4,7,-7,8,-7,3,9,-3,6,-3,2,-10,3,3,5,-3,2,-2,8,-6,-5,2,1,-6,-9,-7,-7,5,4,-3,10,9,-3,-4,-2,-5,9,1,-3,8,-8,-2,3,-4,-7,-7,10,-10,-10,-3,5,1,5,6,1,-9,9,1,-3,9,9,-7,-2,1,9,4,3,-10,7,6,7,6,-1,8,-1,1,10,10,-7,4,6,2,3,-8,5,10,-1,8,3,-5,-2,4,-6,-4,5,1,-7,-1,-4,-3,-2,10,9,-5,-5,-5,-7,-7,-5,-8,-10,-2,-1,-7,1,-3,-3,8,3,4,-4,-3,10,-5,-2,7,-1,8,3,6,-7,9,-2,-2,10,10,-7,-6,4,3,-6,9,1,-1,5,8,-6,2,4,2,-1,8,7,8,5,9,-4,-9,6,-7,7,4,2,3,1,-10,2,-4,-9,-10,4,6,-10,2,6,8,5,-9,8,-5,-1,-3,10,-10,8,3,-3,-1,-3,8,10,-3,8,6,-7,-4,3,-9,-5,-1,-1,8,-5,-5,-9,10,-9,-6,6,-4,2,-1,-7,9,-9,6,7,4,-2,10,3,1,-4,10,1,-5,2,-8,-4,3,-7,5,-3,-6,9,-6,-8,8,-6,-2,-2,7,-10,-5,2,-10,-6,-5,-4,-6,6,9,9,-6,6,9,4,2,-5,-10,4,7,5,-9,-2,-5,-6,-4,2,9,5,-5,-8,-3,-5,-9,3,7,10,10,-2,2,-9,-5,6,8,6,10,-2,6,-8,-4,-2,2,10,4,6,2,-2,-6,-2,10,8,1,-7,-7,3,7,-6,-5,-10,8,7,-1,8,-7,-4,10,9,3,-8,10,-2,7,5,-4,-3,2,4,-8,5,-7,-10,-10,-8,-4,3,-10,-10,-3,-8,-3,1,8,-3,10,-2,6,3,3,-10,10,9,-8,-4,6,-10,-1,-4,-6,7,-4,4,1,5,1,-10,-9,-8,10,10,5,4,-10,-7,7,2,-5,1,-6,-9,-4,-5,-8,1,-8,-3,-2,-9,7,-7,-1,8,-7,-3,5,-7,1,-3,-8,8,-7,9,9,-2,-5,1,-1,-4,-7,-1,-7,3,-4,-8,3,8,-6,-1,-4,-9,3,-5,-10,1,3,2,-2,-9,-5,9,-2,10,-4,1,4,-7,4,9,10,-5,-4,3,4,-4,-9,-9,-2,9,9,-5,3,-8,-5,-3,9,-6,-5,-2,-2,-9,9,-4,-6,8,4,-6,7,-4,-3,5,-4,-6,3,9,-4,6,6,-6,-4,8,10,-7,-10,-9,-9,-6,7,-2,-1,4,1,1,-4,2,3,-8,-5,-10,-5,9,-3,-6,8,9,-1,7,6,1,-4,8,6,10,10,-8,9,8,4,-2,-4,-4,-5,8,8,1,-4,-1,6,4,3,2,1,4,6,2,9,2,8,7,-9,7,-9,6,10,-3,3,-5,-7,-4,8,-10,3,-3,4,-8,-8,8,3,-7,5,-8,-7,-7,-5,-9,6,-10,-3,-1,-2,-10,3,-2,-4,-3,-8,1,5,2,-8,3,-10,4,-5,-10,5,-9,-8,7,7,2,1,3,-9,6,-7,3,1,1,-4,4,1,-10,-6,10,6,-1,3,-1,-10,-2,-5,2,-4,-3,-4,-10,2,-3,-6,2,-4,9,6,2,8,-2,-10,-10,-9,-5,-9,7,6,10,4,-5,4,6,5,-5,-5,-7,-1,-9,9,-3,-10,10,4,-9,-1,-7,-10,6,-4,-8,9,-1,-2,1,6,-10,8,-4,1,1,10,8,2,5,6,-2,-1,-5,5,6,2,10,7,2,-9,-1,-10,9,4,9,-7,3,6,-1,-4,4,5,5,2,-10,-10,-10,-2,4,10,6,-4,3,6,3,-3,7,-3,-9,-2,5,-2,4,-3,9,-4,1,5,10,-10,-3,-1,10,-5,-8,8,8,-10,3,3,-7,9,8,1,-5,-2,3,-9,7,2,10,1,-9,2,-4,-5,3,6,8,-9,8,1,3,4,5,-7,7,5,-3,-1,-2,-6,2,6,1,3,7,1,-6,-1,-5,8,-10,-10,-9,-10,9,6,9,-1,7,10,-10,5,-9,8,9,-6,8,2,8,8,7,7,6,-8,4,1,10,1,-4,-3,-7,-10,4,-2,-3,8,-4,7,4,7,3,1,3,3,1,10,3,-2,-3,1,-7,-5,-5,3,8,-7,-7,4,-8,-9,3,6,-9,-4,3,8,4,10,-8,9,4,-6,-4,-3,7,3,1,-7,8,-1,-9,-10,4,4,-5,-7,1,-10,-4,-9,-6,3,6,6,-3,6,7,5,-7,3,-2,-1,-4,9,-7,-8,-3,-8,1,2,2,6,-3,3,9,-4,-8,3,-7,9,3,6,-10,-4,8,-5,-5,2,-1,9,-2,-1,9,2,8,-1,9,-6,2,10,-9,2,5,1,-8,-3,5,-1,-8,2,4,-7,-3,-4,5,6,-8,-8,-10,-10,-1,-9,9,-5,-2,-4,-2,-1,-6,-1,6,6,4,10,3,2,-3,4,-2,-10,8,1,5,-7,7,-3,-3,-1,-1,3,-1,1,6,5,-6,2,-8,-6,-7,5,10,10,-5,2,-10,-3,8,4,-1,3,5,-3,-2,-8,-9,4,-1,5,-3,-5,10,5,-3,-5,9,4,-5,9,-6,-6,-1,4,-5,9,6,3,1,-7,9,1,-1,-6,-3,-4,3,4,2,-8,-9,-7,9,2,-9,8,-10,-8,7,-7,-10,-9,-3,-8,5,4,-1,10,2,-3,2,1,-10,2,2,8,-2,-6,2,-2,8,-2,8,10,-5,-2,-4,-8,9,-2,7,6,8,6,4,8,5,-10,3,4,-2,-4,7,-1,-10,-1,4,8,-7,-4,2,4,4,-2,-3,5,-1,2,-1,-6,7,-1,5,2,6,5,-6,7,3,6,-6,-3,-2,-6,-9,5,10,-6,-9,-6,-2,5,8,-9,3,-8,6,5,8,10,-4,5,5,8,10,9,7,-2,-7,-7,-6,-9,-6,-2,-8,4,-1,7,-2,10,-10,-4,2,-1,6,-1,-3,-7,-5,-7,-3,-4,-2,10,7,-4,8,4,-3,-1,5,3,2,-10,1,9,-6,8,-5,2,6,-9,-5,6,-9,6,9,-5,9,8,-1,-4,10,-7,-10,-7,6,-3,-10,-6,6,-5,3,-5,-5,4,10,3,10,6,-10,6,-10,4,8,9,5,-10,-5,-1,-8,4,-3,-9,-8,10,-10,1,-7,-8,-6,10,2,-10,-5,-7,7,2,-2,-2,-7,-8,1,7,-6,-5,-3,-6,5,3,-8,-4,6,5,-8,-6,-9,2,-6,10,-5,4,9,4,-5,-5,-9,-8,-6,1,-7,-9,-3,-6,1,1,-10,3,-7,3,-3,-7,-7,7,5,7,7,8,-8,-1,10,-2,-8,-10,-1,-9,3,-9,8,-6,-8,-6,-9,-6,-9,-4,10,-1,-3,3,6,-2,-7,-9,-1,-9,6,-3,-8,-1,-8,9,-3,6,3,-3,1,-8,-8,-3,-2,7,6,4,-3,-4,-2,-10,-5,-4,-6,-9,-4,-5,-4,3,-1,-5,-2,-4,5,-7,10,3,-4,6,-4,6,2,10,4,-3,6,3,-8,-3,4,2,-7,-9,-2,10,-10,3,2,9,9,-10,-1,-2,-9,-3,-7,6,8,7,-2,5,5,-5,3,2,5,6,-4,-6,5,7,2,10,-1,-1,3,-5,6,-7,4,-1,-3,9,-7,-2,4,-6,3,10,2,6,-7,-6,-3,-2,-6,7,1,-7,-1,-1,-10,-3,5,-8,-5,2,7,5,-5,-6,1,8,-1,8,-6,1,8,-9,-9,9,1,-6,-1,8,-9,7,-10,-9,10,7,8,3,1,-8,1,4,9,10,-2,-8,-3,-2,9,-5,1,-6,7,-5,-3,1,-10,-6,7,-3,-2,-2,5,7,-7,3,-4,7,10,2,-4,-5,-7,5,7,-3,-8,-6,-10,7,5,5,2,-1,-3,4,-3,4,-2,-4,-9,-7,-3,-4,-6,-10,2,2,-7,-6,5,10,1,-10,6,-1,2,-4,3,-7,10,1,1,5,6,10,1,1,-3,6,-6,4,9,2,7,-2,-5,8,6,-7,5,6,-5,-10,10,8,7,4,2,-7,-3,6,1,7,-9,4,10,-10,8,5,-7,4,7,-9,1,-9,-4,4,3,5,-4,4,8,10,5,4,8,-8,-3,5,-3,-10,-1,2,-6,4,7,-5,-3,1,-10,-9,-2,-3,-4,-10,-3,3,5,-8,4,4,-1,6,-5,3,1,-4,-9,-9,5,1,10,-4,1,9,-7,7,-1,3,2,-1,-7,8,-4,-2,-6,1,-7,2,-8,-3,1,6,-5,-10,-4,-9,-8,1,-4,2,-6,-6,9,-8,9,3,-3,4,7,-4,4,4,-2,3,9,-6,10,7,3,6,9,4,8,10,1,-6,7,5,6,3,-5,10,4,3,-3,9,-8,-3,-10,-2,5,4,-2,9,-10,5,5,1,3,9,4,-9,3,-1,-7,4,2,3,-8,4,-9,3,6,-5,9,8,-2,-8,-1,7,-3,-9,10,1,-6,-8,-3,1,7,10,-8,1,-5,6,-7,5,6,5,8,4,10,-1,4,-6,-7,-9,5,6,1,10,-7,-10,-9,-8,2,10,-5,8,-2,2,-3,4,-5,9,-4,-5,-2,-3,3,-5,-7,-8,-8,4,3,9,1,3,6,1,1,-1,3,3,9,-3,-4,9,-9,2,-10,-9,6,4,-4,-2,-3,7,10,1,9,-4,-5,5,-7,-10,-7,6,1,-7,-5,1,3,3,9,3,-10,-10,-1,2,1,-2,9,6,-8,-6,-2,-2,-6,-8,-2,4,7,8,-1,5,2,-2,7,-2,1,-9,-6,9,5,8,8,1,6,-7,-10,8,-2,-5,-8,-4,-5,-3,-2,-5,-10,6,3,-7,-7,-5,-7,-10,-5,5,-10,-4,2,9,8,4,-5,7,-10,-8,-7,3,-7,-2,-8,6,6,6,-7,-1,-7,4,7,-9,-4,-1,1,6,9,-2,2,6,10,-7,4,-2,5,2,-7,-7,9,3,-4,-10,4,-1,-2,6,6,10,3,9,-10,-8,-2,-8,-4,3,-8,2,-8,8,-9,-3,10,-3,7,-1,-4,2,3,-9,10,7,-6,10,2,-6,-4,6,-2,7,2,6,6,-4,-9,7,6,7,-3,-7,-7,-7,-10,7,3,-3,3,-3,-9,-9,1,-8,-2,-10,-4,-3,8], dtype = "int16")#candidate|2777|(2304,)|const|int16
call_2775 = func_1112_call(relay.reshape(var_2776.astype('int16'), []), relay.reshape(const_2777.astype('int16'), [12, 12, 16]), )
call_2778 = func_1112_call(relay.reshape(var_2776.astype('int16'), []), relay.reshape(const_2777.astype('int16'), [12, 12, 16]), )
uop_2785 = relay.sigmoid(call_2729.astype('float32')) # shape=(12, 9, 8)
uop_2787 = relay.sigmoid(call_2732.astype('float32')) # shape=(12, 9, 8)
output = relay.Tuple([var_2730,var_2731,call_2738,var_2739,bop_2758,call_2762,var_2763,call_2775,var_2776,const_2777,uop_2785,])
output2 = relay.Tuple([var_2730,var_2731,call_2740,var_2739,bop_2758,call_2764,var_2763,call_2778,var_2776,const_2777,uop_2787,])
func_2788 = relay.Function([var_2726,var_2730,var_2731,var_2739,var_2757,var_2763,var_2776,], output)
mod['func_2788'] = func_2788
mod = relay.transform.InferType()(mod)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mutated_mod.get_global_var('func_2788')
var_2790 = relay.var("var_2790", dtype = "float32", shape = (3, 2, 10))#candidate|2790|(3, 2, 10)|var|float32
var_2791 = relay.var("var_2791", dtype = "int16", shape = (1, 468))#candidate|2791|(1, 468)|var|int16
var_2792 = relay.var("var_2792", dtype = "float64", shape = (864,))#candidate|2792|(864,)|var|float64
var_2793 = relay.var("var_2793", dtype = "float64", shape = (567, 2))#candidate|2793|(567, 2)|var|float64
var_2794 = relay.var("var_2794", dtype = "float32", shape = (3, 2, 10))#candidate|2794|(3, 2, 10)|var|float32
var_2795 = relay.var("var_2795", dtype = "float64", shape = (6,))#candidate|2795|(6,)|var|float64
var_2796 = relay.var("var_2796", dtype = "int16", shape = ())#candidate|2796|()|var|int16
call_2789 = func_2788_call(var_2790,var_2791,var_2792,var_2793,var_2794,var_2795,var_2796,)
output = call_2789
func_2797 = relay.Function([var_2790,var_2791,var_2792,var_2793,var_2794,var_2795,var_2796,], output)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2915 = relay.var("var_2915", dtype = "float32", shape = (15, 4, 12))#candidate|2915|(15, 4, 12)|var|float32
const_2916 = relay.const([[[6.724462,-9.578084,-7.054240,-0.716695,-7.416873,-0.851937,-5.093676,7.896010,7.849912,-0.644755,5.208525,0.438025],[-9.570339,1.884467,-4.173942,5.199293,5.272870,8.933931,5.713834,-5.875976,5.386413,-1.577363,8.253512,-9.655662],[-4.212133,-9.715194,-4.243684,9.486952,-7.427218,0.842941,6.479766,-5.865291,3.450150,7.633925,-3.337661,-3.382490],[-9.932328,1.206074,-3.237233,-3.463574,-1.897224,-4.166347,-4.724819,2.233135,5.910787,8.764248,2.662085,8.481222]],[[2.331007,4.299377,-9.975267,5.607310,1.292963,-6.035518,-5.032580,-4.081596,1.441095,6.225267,-9.591675,-4.095909],[-2.125014,-8.957405,-2.750819,-7.125553,-5.004584,5.841864,3.412107,7.963603,3.291506,-5.380233,-6.794059,-5.249398],[9.854203,5.369071,-2.684778,4.008848,1.481852,-7.121041,6.301294,-3.308989,6.897906,-2.552513,-5.102814,3.878398],[4.310170,-2.544858,-9.353360,-7.036999,-3.788475,9.732061,2.186260,6.184765,-6.535826,-7.392740,-5.661144,-1.352159]],[[-1.280182,-8.123950,-2.707677,-8.488327,5.297612,-6.560708,4.543411,-3.384168,-8.827436,-4.510623,-5.004941,3.828701],[-8.373714,5.011782,-6.002818,-2.493443,-5.522595,7.655726,-9.162493,0.963603,-9.358447,6.552788,-0.081511,-9.000461],[1.656895,-8.680255,-2.788470,-2.708236,-3.514362,-0.870934,0.019528,9.631853,0.077446,9.215877,4.491628,-8.763180],[-2.864662,6.083392,7.050380,6.619627,9.229887,-2.433910,8.746861,-9.273970,-2.168673,-4.639632,6.077126,-7.315425]],[[7.637953,-7.881835,-2.784484,-9.019649,-4.100933,1.881191,7.097111,-1.596364,-8.346659,5.720787,0.984676,2.889239],[-3.974773,-4.360652,-9.729118,-3.285337,-8.566582,-5.405117,1.301026,3.274362,-6.758726,3.555844,9.054325,-3.823864],[0.020986,-5.668471,1.871813,-8.019193,0.752631,4.234754,8.719617,4.890862,-2.981938,-6.827683,6.426358,9.409554],[-9.242385,8.415260,-7.824238,-6.920301,8.838772,2.968339,-3.580413,-9.828357,-7.856913,9.622569,-7.963911,3.676131]],[[-3.954491,-1.405873,6.482902,-3.255058,3.188470,4.555956,0.126963,8.563505,-3.131506,-8.157152,-3.917498,8.491193],[-8.804919,3.909927,7.754164,-8.264816,-3.413667,4.466000,-5.412555,-0.103448,-0.275143,-5.295221,7.600163,-1.050634],[-1.574561,-1.423895,-5.182947,0.473858,4.691535,7.966797,1.856068,-3.399193,-8.115672,8.356747,1.499630,-9.446907],[6.273414,-5.521905,-7.267609,3.585498,1.679251,-1.658857,8.112319,-4.386508,-8.068874,3.111604,0.073375,6.075661]],[[-0.472119,3.309899,-5.303890,7.729088,-0.523880,-9.947245,-1.343800,7.989673,-0.039774,3.937583,6.633955,-2.327663],[1.815458,2.044787,8.879797,5.814907,0.742462,-6.130795,-5.302670,9.231383,6.587513,-7.491132,2.138403,4.997745],[6.869734,4.629155,-5.454246,-5.854692,-0.683166,6.491023,-6.051387,6.786316,4.446743,-4.201806,4.226462,-2.912850],[2.385762,-6.987783,-3.748843,-5.753160,8.900541,-6.729339,1.518381,8.104264,-6.651850,-8.771832,5.777737,-7.979302]],[[9.360423,4.422002,-3.677265,5.977357,-7.327905,8.584846,5.299432,-9.951056,4.589412,-8.071763,7.177748,-1.049254],[-5.269263,-2.871028,-5.589725,-3.436705,1.456326,-2.182778,4.503922,-1.701669,-8.422735,-7.823142,6.129957,-0.349202],[0.630257,-6.672723,-2.662259,-3.303689,8.813611,6.269487,2.613730,8.459448,0.207002,9.297271,2.527525,-6.206516],[6.515580,1.849944,7.503290,3.147855,-6.686331,8.772431,5.952300,-3.865354,-3.291649,-0.582320,3.590699,2.031764]],[[-0.415620,-0.992006,-8.115197,1.816109,8.642146,-0.244136,-0.884354,-4.146771,1.507363,5.134132,2.742629,7.433792],[1.914080,-7.958419,0.468895,9.236923,-7.252027,9.703356,-6.748281,-6.604296,7.040102,-2.922299,-9.647023,7.910078],[-5.132554,-3.638504,-7.129748,-9.572417,-3.613589,-3.508436,-8.176869,2.647677,4.683814,4.184149,1.745052,-8.250077],[-0.817646,-1.503055,6.346488,8.941800,-8.353387,3.998682,2.178543,5.442758,-5.336795,-7.605185,8.245350,6.735590]],[[-2.285516,8.585369,-7.399426,3.380843,-7.700277,-9.039659,5.471431,-8.402226,3.116750,-4.977541,1.881785,-0.114441],[9.740141,-8.524286,-5.342803,-5.446518,-0.206460,-5.044367,6.287994,8.937227,4.704446,6.624670,4.995033,2.194579],[0.406820,-1.499025,4.320014,1.470817,5.715573,2.794890,5.465238,-5.724487,0.942866,2.861378,-8.993311,5.145342],[-1.386744,-5.573171,-1.907504,-9.011473,4.650855,-9.515699,-8.297821,-5.374236,2.201566,3.333196,5.756770,-7.613326]],[[3.947021,8.871882,-8.555612,6.871801,5.291906,2.289538,6.203740,1.754233,-0.738753,5.552268,2.511534,-8.556950],[-2.085753,-1.221105,8.001660,-1.008329,-2.725670,4.342710,-3.693395,3.767348,-6.815808,1.795125,-1.719861,5.219749],[-4.544324,9.570763,-5.608811,-2.155719,-9.318485,-1.391458,3.873421,-2.350469,-4.147526,0.940015,-2.887772,-9.073268],[5.773042,7.594759,-9.834275,-9.814787,0.231997,5.642053,7.726063,-6.647309,-2.143068,8.366880,-3.095923,7.802925]],[[7.474398,3.109666,5.052980,7.345328,-0.457414,-3.376821,2.164112,8.448182,6.734165,-1.543931,9.009626,-7.862432],[5.428355,0.937060,6.951219,-1.291037,0.636252,-1.252767,1.542614,0.946230,-3.666198,-2.219784,-6.723258,8.333090],[-0.376602,-2.640763,-5.320000,4.318261,4.473464,3.546992,9.405719,0.848881,-0.156145,5.528346,3.979854,2.492923],[8.264573,7.897129,0.966618,9.236925,-4.860332,1.529936,-5.439650,-2.183324,-1.672349,-3.041494,2.846746,-8.732312]],[[5.825182,1.226647,4.479326,3.296299,5.786926,-3.534200,5.713499,-5.810971,-5.318200,-4.246041,9.917349,-4.056045],[5.335274,2.752212,-7.086144,-0.391326,-7.449144,0.949844,-4.038978,-8.598679,9.227395,-5.305471,-6.204761,3.391927],[5.437759,7.600137,-9.964176,-2.067956,-2.101310,9.841024,2.012271,-3.868640,8.367339,9.794605,-3.066532,0.140540],[8.845881,-1.832574,3.376891,-5.984376,-8.884640,0.670253,3.554996,-4.248383,3.446385,-1.311337,9.413922,-0.401125]],[[-7.891757,-2.429331,9.017156,0.674454,6.459427,-0.366001,9.507908,6.990045,-8.518547,-4.883108,-0.978419,2.296001],[-2.254174,2.176579,1.248779,1.522730,7.111102,-0.488566,8.353039,0.007503,-7.149357,4.961030,-5.916094,7.501657],[6.563106,-1.677118,-9.308873,-5.328062,-6.224568,-6.234090,2.443464,7.629266,4.037483,-9.736186,3.194549,0.968197],[9.500104,1.824460,-6.037629,8.120807,4.884162,8.015340,6.196714,-4.218721,7.781373,2.238689,-8.664083,-7.414105]],[[8.875313,5.973408,-0.020297,-5.331566,5.811447,-3.931735,-1.852573,-6.816518,8.222050,9.729504,6.069128,-1.961791],[-8.645322,4.478060,6.803078,-4.113837,-3.893688,7.676938,-1.138977,3.476974,-3.803582,6.983588,6.138599,-4.943637],[-4.246383,0.365342,1.551178,-0.231426,-7.848492,6.647408,7.645173,-9.400120,4.648413,7.182008,5.249141,2.194296],[-1.756320,-6.994797,-4.013587,-8.417671,-4.467300,-8.591964,-6.897697,6.466141,4.754552,-7.093363,-4.096787,-7.477342]],[[-1.955420,9.387364,-6.520516,4.711812,-8.197576,-6.775102,-0.828898,2.429096,0.874408,0.109909,-6.965157,-0.138516],[2.027153,6.447575,1.135331,2.120017,8.579081,1.072274,4.491404,-3.233607,-9.295132,1.693632,0.132071,1.924515],[-9.016718,-1.765606,6.625941,-6.052201,8.398833,-4.491179,-3.342878,9.923260,-6.931361,0.371227,5.368248,6.503449],[5.820289,7.565943,0.837914,4.406308,2.660414,4.164551,-5.624963,8.583746,0.245279,-7.531986,0.696509,6.652919]]], dtype = "float32")#candidate|2916|(15, 4, 12)|const|float32
bop_2917 = relay.not_equal(var_2915.astype('bool'), relay.reshape(const_2916.astype('bool'), relay.shape_of(var_2915))) # shape=(15, 4, 12)
func_783_call = mod.get_global_var('func_783')
func_786_call = mutated_mod.get_global_var('func_786')
const_2935 = relay.const([-5,7,-9,9,8,-10,7,1,-2,6,3,-8,-8,9,2,9,10,-3,-4,6,-10,10,-2,1,-5,1,-1,-8,-3,2,-8,1,6,9,-10,-9,-3,8,-1,1,-8,-5,-3,-9,-7,-2,-1,-6,-8,-6,-2,-7,-5,8,5,-3,4,-3,2,-3,-2,-5,-7,7,-6,4,-7,10,-5,9,10,5,1,-10,10,1,8,3,7,-1,-3,10,5,4,-10,1,5,5,4,9,1,-5,4,-4,-10,-3,-1,4,2,-7,-1,6,6,1,9,5,-8,8,-2,2,-9,-6,-7,-10,8,-3,8,6,3,6,-7,-9,-3,8,1,-7,6,-3,-4,2,-2,3,-6,-4,8,10,-2,2,-8,-3,10,-9,5,-9,-7,-3,6,9,-6,-1,-4,10,10,3,10,-6,8,-9,9,2,-9,-7,2,8,-8,2,2,7,-2,1,-8,6,-2,9,-3,9,7,-10,1,-8,-9,-10,2,4,-10,6,9,6,-7,5,7,5,-10,-4,2,-10,2,-3,-9,-8,9,-9,-8,-2,-3,8,-2,5,-5,-3,-2,-10,-4,1,-10,-4,-3,-1,-9,7,-1,1,7,5,8,-10,2,-7,5,-10,6,-5,-7,1,9,-10,-4,-4,-9,-2,-9,-7,4,-9,-1,5,-3,6,9,7,-7,8,8,-10,-1,3,-7,-2,4,2,-10,-1,-1,2,6,8,8,3,-10,-2,7,2,6,7,-5,5,7,-8,-5,-6,2,2,-2,6,8,-2,5,-9,7,-1,4,-8,4,-9,6,7,1,-8,4,4,3,-7,1,-1,1,-3,-10,5,-6,-10,-2,-10,6,-6,5,-2,-8,-9,4,-1,2,9,-4,-5,-1,-3,-1,5,-3,8,3,-8,-9,-3,-7,-10,-6,-10,-5,1,9,8,8,-7,-4,-9,-5,9,-4,-10,5,-9,-1,3,3,2,9,1,-3,8,-5,4,6,7,4,-2,-5,9,-9,2,8,5,5,-5,-6,8,2,5,-3,-9,-8,-5,-1,1,-1,-3,10,-6,-3,5,-6,3,5,7,8,7,8,-1,8,-8,-6,8,8,-2,7,-10,-10,-10,-1,-5,4,7,3,10,9,-10,10,2,2,-8,-1,1,-1,6,-1,-1,2,6,5,7,-3,-10,3,-10,3,-5,6,6,10,-1,5,-5,-1,2,-4,-1,-4,-1,-2,5,8,-10,7,-6,-1,5,1,3,-10,10,-4,2,-4,6,-3,-1,-10,-7,-10,3,2,-7,7,-6,7,-2,1,-8,6,-10,6,9,-4,-2], dtype = "uint16")#candidate|2935|(484,)|const|uint16
call_2934 = func_783_call(relay.reshape(const_2935.astype('uint16'), [11, 11, 4]))
call_2936 = func_783_call(relay.reshape(const_2935.astype('uint16'), [11, 11, 4]))
output = relay.Tuple([bop_2917,call_2934,const_2935,])
output2 = relay.Tuple([bop_2917,call_2936,const_2935,])
func_2938 = relay.Function([var_2915,], output)
mod['func_2938'] = func_2938
mod = relay.transform.InferType()(mod)
var_2939 = relay.var("var_2939", dtype = "float32", shape = (15, 4, 12))#candidate|2939|(15, 4, 12)|var|float32
output = func_2938(var_2939)
func_2940 = relay.Function([var_2939], output)
mutated_mod['func_2940'] = func_2940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3126 = relay.var("var_3126", dtype = "int8", shape = (9, 8, 4))#candidate|3126|(9, 8, 4)|var|int8
var_3127 = relay.var("var_3127", dtype = "int8", shape = (9, 8, 4))#candidate|3127|(9, 8, 4)|var|int8
bop_3128 = relay.right_shift(var_3126.astype('int8'), relay.reshape(var_3127.astype('int8'), relay.shape_of(var_3126))) # shape=(9, 8, 4)
output = bop_3128
output2 = bop_3128
func_3132 = relay.Function([var_3126,var_3127,], output)
mod['func_3132'] = func_3132
mod = relay.transform.InferType()(mod)
var_3133 = relay.var("var_3133", dtype = "int8", shape = (9, 8, 4))#candidate|3133|(9, 8, 4)|var|int8
var_3134 = relay.var("var_3134", dtype = "int8", shape = (9, 8, 4))#candidate|3134|(9, 8, 4)|var|int8
output = func_3132(var_3133,var_3134,)
func_3135 = relay.Function([var_3133,var_3134,], output)
mutated_mod['func_3135'] = func_3135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3232 = relay.var("var_3232", dtype = "int8", shape = (12, 11, 2))#candidate|3232|(12, 11, 2)|var|int8
var_3233 = relay.var("var_3233", dtype = "int8", shape = (12, 11, 2))#candidate|3233|(12, 11, 2)|var|int8
bop_3234 = relay.equal(var_3232.astype('bool'), relay.reshape(var_3233.astype('bool'), relay.shape_of(var_3232))) # shape=(12, 11, 2)
output = bop_3234
output2 = bop_3234
func_3237 = relay.Function([var_3232,var_3233,], output)
mod['func_3237'] = func_3237
mod = relay.transform.InferType()(mod)
mutated_mod['func_3237'] = func_3237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3237_call = mutated_mod.get_global_var('func_3237')
var_3239 = relay.var("var_3239", dtype = "int8", shape = (12, 11, 2))#candidate|3239|(12, 11, 2)|var|int8
var_3240 = relay.var("var_3240", dtype = "int8", shape = (12, 11, 2))#candidate|3240|(12, 11, 2)|var|int8
call_3238 = func_3237_call(var_3239,var_3240,)
output = call_3238
func_3241 = relay.Function([var_3239,var_3240,], output)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3276 = relay.const([[[-5.285124,0.128779,6.076487,0.751407,2.186150,3.763390,-4.388746]],[[-6.403127,0.167261,-8.505210,3.083887,9.717628,-8.440084,1.198207]],[[9.560119,4.123580,-3.354713,-0.186926,0.661799,-6.492200,1.980147]],[[-8.694150,3.980506,8.542151,-0.782165,7.586129,-8.338169,-2.699308]],[[4.439587,9.385119,-5.157313,9.842010,3.229391,9.573560,4.114935]]], dtype = "float64")#candidate|3276|(5, 1, 7)|const|float64
uop_3277 = relay.log(const_3276.astype('float64')) # shape=(5, 1, 7)
func_2788_call = mod.get_global_var('func_2788')
func_2797_call = mutated_mod.get_global_var('func_2797')
const_3290 = relay.const([4.389772,5.467212,-4.782939,1.799677,-4.561142,0.099774,-0.284106,7.127052,6.441992,4.127062,-8.157178,1.781134,-6.558002,-9.117511,-6.569881,5.101801,-3.505386,-7.705029,2.826040,3.001097,5.580849,2.253449,6.801881,-7.940182,-5.078416,0.602932,9.455950,-4.630400,0.877188,2.421489,-9.385787,8.833896,-0.614816,-6.201689,-3.898098,7.140752,-8.976692,8.992990,9.869619,-7.676931,1.857759,-6.051677,-5.559387,-8.965339,-1.529104,6.889180,9.034977,5.590093,0.436794,4.432167,4.097448,7.198091,7.353381,5.715838,-3.570877,-6.214232,2.065205,9.424214,9.282556,-1.578823], dtype = "float32")#candidate|3290|(60,)|const|float32
const_3291 = relay.const([-2,6,2,-9,10,-6,1,10,-3,3,7,-3,-6,-8,1,-6,6,-1,1,1,-2,-10,10,-8,-5,2,4,10,-10,-8,-8,7,4,4,8,5,-2,-4,6,-3,2,2,-3,-7,-3,-5,7,6,-10,7,8,7,-10,2,10,9,-5,7,5,10,-6,8,-6,9,9,-3,1,-8,-8,6,-8,-1,6,-8,1,9,-2,5,3,6,-9,8,-9,-8,9,-9,1,-1,-8,-9,8,6,-7,9,-2,-2,8,-10,10,-5,6,-5,4,7,4,8,-4,-1,-5,2,9,-2,-8,3,-2,7,4,4,-10,7,7,-8,-2,-3,-1,-8,-1,-7,-3,-4,-1,-3,-5,-3,8,-8,9,-7,5,10,6,-8,8,-3,10,-6,-10,-7,7,-9,2,-1,5,2,1,10,9,2,7,-10,7,-7,-6,4,-4,8,2,7,-1,-9,-10,-10,9,6,-1,1,2,-5,-2,-2,1,4,-3,-3,9,-9,-3,10,2,7,2,-1,8,5,-4,6,-8,1,1,-8,-7,1,-5,-3,-7,-10,8,7,7,8,10,-7,4,2,3,8,-6,-10,-2,-7,3,9,-9,9,-8,-7,1,-7,-1,10,8,4,9,-6,-6,9,2,-3,6,-7,9,5,10,-6,-2,5,-6,-5,-4,5,3,1,6,4,-6,-8,-7,-6,6,7,8,-9,2,1,-4,8,-4,1,-3,-2,8,-7,-5,-1,6,-3,4,1,6,4,10,-7,10,-2,3,-5,6,-5,6,-5,7,-7,2,7,-1,7,-2,4,2,-9,2,3,6,2,-7,-4,-7,-3,2,6,-10,3,-9,8,-4,4,8,7,-9,-8,6,-1,7,-1,-6,10,-1,-10,3,10,4,5,-3,-8,1,-9,9,1,5,-5,-8,9,-10,-8,6,2,3,-1,-2,-7,8,2,-7,5,5,-3,5,-2,10,9,9,-5,1,-7,9,-7,-3,4,2,-9,9,7,3,-8,9,-8,-1,1,1,4,-5,6,-10,7,10,-8,-10,-3,-4,6,10,-4,-9,2,4,-9,-9,-6,-5,-2,10,6,-4,-3,-9,4,2,-8,-4,10,-8,-8,6,-5,-8,8,6,-6,-2,-9,-9,-8,-10,2,7,-1,-3,-2,-4,9,-6,7,-2,4,-3,5,-7,-3,-9,2,-8,-3,-3,-7,-3,-6,7,3,-8,3,2,-5,1,8,4,-8,-5,1,-5,7,-9,7,8,-5,-6,2,-8,-9], dtype = "int16")#candidate|3291|(468,)|const|int16
const_3292 = relay.const([[-5.237134,-6.555396,-5.946811,6.034394,-5.543962,8.714071,-7.188067,1.069579,3.812578,5.806161,5.559464,8.386572,6.977852,-5.944562,4.540989,4.236330,-4.941214,4.537843,-6.972277,1.997767,8.340618,7.508878,-4.544792,0.319152,-3.177335,1.913950,4.753228,-5.829466,4.636337,-2.285167,-3.002415,8.178414,-6.336736,5.638744,1.821674,3.352481,3.275110,-1.051515,3.711283,8.577936,-0.814727,1.282382,8.553860,-7.344885,3.101103,-4.625846,2.017243,-4.571973,-6.698081,-0.036987,-4.196027,-1.190361,-6.541345,3.506929,3.437090,8.611734,5.873784,6.881981,-8.652232,-6.133864,0.336755,5.287235,-8.229037,-5.934839,3.361742,-0.466068,-9.055852,9.226468,-7.916378,4.052150,2.354342,3.963393,5.348944,-0.413235,6.211082,4.292865,9.353016,1.724369,-6.908181,-0.115965,-5.459041,3.321995,-7.491326,7.944101,0.357543,-6.637336,9.631356,-9.167197,-3.122342,6.398789,0.215176,-9.786195,8.714909,-4.930134,9.350078,-7.496184,7.484477,3.665179,-4.994803,-3.677409,9.497067,9.593973,7.645752,1.878439,-2.494173,4.333398,-8.790382,-1.743196,1.010620,8.972041,7.252259,-9.790925,-2.398816,-8.310103,-5.271946,-6.935235,2.027014,-8.437580,4.176187,2.544968,-8.780365,6.778019,-2.624122,4.365759,-6.494656,5.947778,-6.102883,6.656125,1.200693,5.040910,-9.287022,4.631650,1.541769,-1.136532,8.226710,-1.233427,-7.537178,-3.370909,4.752691,-4.594102,4.662336,-3.591086,3.373138,-7.793659,0.979792,-0.327378,5.497581,-2.335516,-4.733065,-3.329020,-2.254946,5.170847,-3.098727,7.705564,2.132525,-6.503132,8.936678,-8.446210,-1.995057,6.784564,8.510988,6.865506,4.987235,3.707974,1.367521,-8.307117,8.366772,-8.461154,8.186239,2.893403,-2.034259,3.711717,-4.150199,-3.192637,-0.681132,7.659783,-7.800791,5.428933,-3.447154,9.041617,-4.838667,0.614942,0.740322,2.464612,9.563748,-7.786065,-8.307555,-3.120848,7.253020,9.937817,-9.230069,2.241319,-8.658262,2.272260,-5.368543,-2.552621,-1.360710,-4.436988,9.612488,-8.427329,-3.435780,-2.148650,6.900754,-0.109541,-6.095952,-1.224812,-5.630541,7.262702,-8.414129,7.904280,5.878413,8.346747,0.884865,4.143406,-5.269539,1.460058,-0.201259,3.181949,-2.533476,0.276731,-6.692548,-9.558927,1.568776,9.566222,-1.960300,-1.111561,-6.024226,2.058834,5.609564,-0.105327,-1.994860,7.718929,-3.193446,-1.208834,-7.341147,1.884266,-0.172699,8.709351,8.122301,4.754668,9.453779,3.207347,-9.118820,5.998560,0.364231,4.996085,2.930014,8.108130,6.735133,7.306186,2.633953,-3.255073,-0.801529,9.326488,-4.643600,1.204852,5.238434,9.859222,7.500087,1.142043,4.873185,-8.954525,0.296158,-3.407277,-5.098049,-5.525286,-3.201151,8.370632,-0.238430,-4.893507,3.095387,-2.366911,-9.597994,-4.648345,-2.716504,-8.854652,-2.396177,8.168051,-2.340312,2.298919,9.832731,-1.899737,-2.023621,-9.642622,6.563533,-9.731377,-4.314554,8.943627,-2.343699,-6.712427,5.483239,-7.006667,0.246676,-0.391420,8.201336,-2.319189,0.108401,-1.836252,-9.776343,3.688107,9.545201,6.766073,-2.367296,-7.239081,-2.397005,-6.233957,-2.797388,-9.558727,-4.919368,9.225430,-7.907922,-7.160967,6.010649,1.648762,6.399123,6.113944,-1.090733,-7.649266,3.434938,-4.860591,6.433043,8.700838,9.500848,1.585494,-0.245752,-6.169114,0.672142,0.127893,5.084885,-1.298428,9.877659,-1.652833,-2.751026,-6.506893,1.891561,-3.398221,2.958209,-6.117244,2.280578,-0.459661,1.262812,-8.334039,1.610935,8.718204,-1.073981,5.144485,2.821840,-3.362763,-1.427252,1.611724,2.420065,-7.869285,4.989690,6.406445,1.189814,0.294107,-0.414837,6.983794,6.931812,3.722668,-3.066449,7.402741,-3.633690,-7.835033,-5.844275,-4.840155,2.145679,3.421385,-2.249088,6.680829,-2.146507,-2.141470,-4.380663,5.300372,-0.472745,0.237877,3.284555,-4.260049,-8.111907,8.215791,-5.617934,-6.719021,-2.895904,-4.782149,8.835281,-7.939727,-0.194199,-2.836897,-1.538034,-5.954451,-7.506077,-7.159404,-0.089076,3.713499,9.830277,-7.663218,7.396627,4.120898,-9.602748,-7.976409,9.880425,4.987948,3.555447,-4.536228,0.758642,-8.423745,-7.595315,-0.835145,4.364217,-4.729815,-7.959765,-8.428914,4.319811,2.091758,8.847692,6.054407,2.979742,3.281608,5.932243,-5.505928,-1.639035,-9.029771,6.326353,-9.230439,5.262928,9.090672,0.953989,1.854371,9.500823,-0.631705,-4.085231,0.879942,-6.079111,-3.676448,-0.512025,3.774112,0.548514,-3.323432,-8.765352,8.540003,5.389293,2.200633,-3.562561,3.509503,9.642216,-7.128233,-3.418620,2.398799,-9.329203,-5.717012,6.427094,-5.775062,0.877572,1.267081,0.498769,6.445017,-2.841090,2.342360,4.868420,-6.001580,-5.553927,-2.270601,9.761467,2.135814,8.887044,-3.782918,6.078903,3.376140,8.456209,-1.227170,0.906669,8.521613,-3.888254,-3.805421,-5.760282,3.429431,-6.733389,5.200924,4.106194,8.584993,-4.738457,2.908963,-3.837619,-6.184866,-7.254924,-2.902321,5.264814,2.541527,-2.124729,5.193536,-6.451542,1.995708,0.074335,-6.507046,-8.858605,7.236632,-1.050099,-9.514308,-1.369285,-9.225169,-0.015374,-3.120064,6.355747,3.893100,-2.839674,-5.210965,0.399587,7.961511,-5.761720,-6.118423,4.592775,0.580206,-9.332197,6.864940,-0.810910,2.349284,-5.142079,-7.997868,1.035135,-3.010375,1.123719,0.886124,-7.685936,1.255488,-0.658566,2.148667,3.096220,9.921340,0.828425,-3.517366,9.141062,-6.418907,-7.018671,4.749826,-8.706016,8.637310,-9.923861,2.661065,1.537692,1.648718,-0.470675,0.128025,6.844423,6.097782,9.126178,-5.034356,-8.585226,2.827911,-7.196807,-7.826623,-2.664923,-1.543543,-2.579091,6.455275,-6.155421,-6.370879,-0.890931,-0.237593,-4.094932,-1.213377,-5.374035,-2.320732,1.863169,8.587331,-3.450211,-4.640128,6.164347,4.607069,-0.680631,1.208173,8.032109,2.795092,9.339251,0.322929,-5.080428,-7.493184,9.470821,0.831077,-8.451678,-4.919417,-8.388838,4.514031,5.107863,-8.303015,9.400067,-8.769831,0.080120,-2.566491,0.730478,-5.575173,5.105180,-6.996496,-3.238197,5.396110,-4.313785,4.244865,2.891091,-8.877335,-3.370004,-5.394711,-7.038665,-0.378154,5.778478,4.647000,3.913294,-1.545448,-3.449270,8.786956,-4.774640,4.429940,-1.147457,9.113097,7.664128,-7.263617,-8.315719,6.398965,0.532180,-0.305053,6.986632,4.227548,-0.207337,4.337008,8.443106,3.279200,-1.967346,-8.437648,4.812322,-4.059202,-0.585578,-0.266298,4.866914,2.684380,-1.488403,6.187711,0.629813,-5.959939,-3.741831,-3.061827,-2.746176,3.449339,-3.882384,9.688504,-3.643260,-1.253589,-0.274357,0.453394,7.889138,-0.915687,3.353619,5.290067,-6.455829,-8.509465,1.395444,-7.183442,-8.035824,-2.373681,-9.357473,-1.479969,8.859993,7.710771,-0.814327,-0.247820,6.246325,0.532688,-0.138980,-7.744482,-8.009711,-0.750617,1.631858,9.701359,-1.131567,5.029120,8.675063,5.823707,-1.852479,-3.924502,-0.179261,-8.819546,4.249843,-0.574891,-6.134545,-5.439673,9.703300,9.857040,-3.436598,-0.372318,-3.426551,6.927830,9.680764,3.301907,5.774264,-3.743116,-2.242113,8.627912,-1.093239,9.563203,-0.582584,1.367446,-9.804041,5.599783,4.795374,-4.875867,9.488582,2.432747,-3.547230,-9.511251,-2.505253,0.244575,-4.455968,-7.345799,-2.687473,3.580972,-3.829597,-3.163097,5.012255,7.915775,4.551451,5.172293,6.245224,-7.288555,7.754851,5.016837,2.433870,-0.864092,1.827633,4.196263,-3.467267,1.648698,5.623838,-8.785007,3.897776,-6.194627,0.180201,2.473294,-1.197357,-3.912895,-0.160148,-7.157607,8.215317,9.831489,1.546397,-0.949949,-3.239303,-5.265290,-6.748261,-5.613843,-9.052516,-1.565801,-6.898178,-4.299149,7.311570,-3.415056,-3.687702,-8.240077,3.558610,7.208591,-0.111421,7.568309,2.658053,-4.795068,-0.454091,7.445434,0.011974,-7.588547,7.662999,8.210121,5.772838,-9.243257,-3.184085,6.888673,7.321444,-9.486362,7.890982,-0.746045,-2.165283,-3.905829,5.828861,1.579354,5.148136,1.156147,8.953658,-3.998032,-8.586735,-9.765763,4.841793,4.133264,-8.600170,-8.403682,6.750304,-7.534525,9.191054,-0.229761,-0.545165,-7.216529,2.609270,-1.441881,-0.328506,3.563458,-0.835983,8.269214,-1.106682,-5.803058,-2.213940,-2.578188,6.236051,5.253584,1.277284,6.380271,-6.418430,6.763063,4.892317,-9.862159,-3.547608,4.782801,0.456817,-4.236301,9.673203,8.416598,3.778478,5.410598,-5.361816,-7.762573,-7.545201,-8.318178,0.261276,-3.889271,5.963332,-9.002366,-6.102593,-9.915291,-5.809364,9.369051,7.452637,8.739266,-7.977375,2.952174,-4.617205,-9.428694,-7.118400,3.915743,3.009941,-4.274415,-1.703315,-5.110225,-4.652272,-0.821334,-7.566297,-0.162903,-9.458483,-9.909287,-5.004592,-2.991194,3.588636,8.148556,2.412866,2.149281,-6.867259,1.807494,-3.367217,-0.186495,2.500798,5.266069,-1.303072,2.571576]], dtype = "float64")#candidate|3292|(1, 864)|const|float64
var_3293 = relay.var("var_3293", dtype = "float64", shape = (1134,))#candidate|3293|(1134,)|var|float64
const_3294 = relay.const([4.650315,4.458708,6.843321,-9.924200,-0.776615,7.210585], dtype = "float64")#candidate|3294|(6,)|const|float64
var_3295 = relay.var("var_3295", dtype = "int16", shape = ())#candidate|3295|()|var|int16
call_3289 = relay.TupleGetItem(func_2788_call(relay.reshape(const_3290.astype('float32'), [3, 2, 10]), relay.reshape(const_3291.astype('int16'), [1, 468]), relay.reshape(const_3292.astype('float64'), [864,]), relay.reshape(var_3293.astype('float64'), [567, 2]), relay.reshape(const_3290.astype('float32'), [3, 2, 10]), relay.reshape(const_3294.astype('float64'), [6,]), relay.reshape(var_3295.astype('int16'), []), ), 1)
call_3296 = relay.TupleGetItem(func_2797_call(relay.reshape(const_3290.astype('float32'), [3, 2, 10]), relay.reshape(const_3291.astype('int16'), [1, 468]), relay.reshape(const_3292.astype('float64'), [864,]), relay.reshape(var_3293.astype('float64'), [567, 2]), relay.reshape(const_3290.astype('float32'), [3, 2, 10]), relay.reshape(const_3294.astype('float64'), [6,]), relay.reshape(var_3295.astype('int16'), []), ), 1)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
call_3297 = func_536_call(relay.reshape(const_3292.astype('float64'), [12, 9, 8]))
call_3298 = func_536_call(relay.reshape(const_3292.astype('float64'), [12, 9, 8]))
bop_3299 = relay.logical_or(call_3297.astype('bool'), var_3295.astype('bool')) # shape=(12, 9, 8)
bop_3302 = relay.logical_or(call_3298.astype('bool'), var_3295.astype('bool')) # shape=(12, 9, 8)
func_1655_call = mod.get_global_var('func_1655')
func_1657_call = mutated_mod.get_global_var('func_1657')
call_3319 = relay.TupleGetItem(func_1655_call(relay.reshape(const_3294.astype('float64'), [1, 6, 1])), 0)
call_3320 = relay.TupleGetItem(func_1657_call(relay.reshape(const_3294.astype('float64'), [1, 6, 1])), 0)
var_3339 = relay.var("var_3339", dtype = "float64", shape = (5, 13, 7))#candidate|3339|(5, 13, 7)|var|float64
bop_3340 = relay.bitwise_xor(uop_3277.astype('uint32'), var_3339.astype('uint32')) # shape=(5, 13, 7)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_3355 = relay.var("var_3355", dtype = "int64", shape = (320,))#candidate|3355|(320,)|var|int64
call_3354 = relay.TupleGetItem(func_1081_call(relay.reshape(var_3355.astype('int64'), [10, 2, 16])), 2)
call_3356 = relay.TupleGetItem(func_1084_call(relay.reshape(var_3355.astype('int64'), [10, 2, 16])), 2)
uop_3358 = relay.sqrt(uop_3277.astype('float32')) # shape=(5, 1, 7)
bop_3361 = relay.minimum(uop_3358.astype('uint8'), relay.reshape(uop_3277.astype('uint8'), relay.shape_of(uop_3358))) # shape=(5, 1, 7)
func_3132_call = mod.get_global_var('func_3132')
func_3135_call = mutated_mod.get_global_var('func_3135')
var_3365 = relay.var("var_3365", dtype = "int8", shape = (288,))#candidate|3365|(288,)|var|int8
call_3364 = func_3132_call(relay.reshape(var_3365.astype('int8'), [9, 8, 4]), relay.reshape(var_3365.astype('int8'), [9, 8, 4]), )
call_3366 = func_3132_call(relay.reshape(var_3365.astype('int8'), [9, 8, 4]), relay.reshape(var_3365.astype('int8'), [9, 8, 4]), )
func_1112_call = mod.get_global_var('func_1112')
func_1115_call = mutated_mod.get_global_var('func_1115')
const_3377 = relay.const([3,-9,-4,-9,2,-8,1,-4,9,4,6,-8,10,1,9,5,9,-9,6,-2,4,-7,-7,6,1,-4,1,-9,2,-2,3,10,-9,7,-9,-6,-10,-9,-6,-2,6,-3,8,7,9,10,7,5,1,3,-10,4,-4,6,-8,6,-6,1,10,-7,-7,2,-7,10,-9,-9,-4,9,-5,-7,-5,7,1,-9,-5,-1,-3,6,9,9,1,-7,2,2,-2,2,-1,1,6,2,-6,4,5,1,-8,-2,-10,-5,-4,2,7,5,3,-9,-8,2,3,5,-8,1,-7,-6,-1,-1,-9,3,9,3,4,2,-4,-7,-10,6,-9,1,-4,-6,9,2,-2,-3,4,4,-9,-1,-1,-1,-1,7,8,9,-7,8,4,-4,-6,-9,5,8,2,-7,8,-1,9,-2,-8,-10,7,2,8,10,-5,4,-4,3,2,8,10,-2,1,-9,-4,-5,6,4,5,8,3,-9,-4,5,-2,7,-6,4,-2,6,1,9,-1,3,-7,6,-3,-10,-7,5,2,5,1,-5,2,1,7,3,4,-3,-5,4,-6,-6,-9,-4,3,9,9,-10,-9,4,-2,-3,-1,1,7,-5,-10,-8,4,-10,-1,2,6,9,-3,-3,-10,-5,-5,8,-2,9,-5,-10,8,5,-2,-7,1,4,-1,-10,5,1,-4,6,-3,7,-1,-9,7,-6,1,7,-1,7,-2,-10,-4,9,-1,3,9,4,-7,6,-4,-4,8,-8,-4,1,-4,3,4,-6,-6,-9,-1,4,5,-1,-4,6,8,-3,1,-10,-4,2,4,3,9,4,4,-7,10,7,-4,-8,-1,7,-4,8,8,4,-10,-2,8,8,-4,2,-2,7,-6,-8,-5,-10,10,5,-7,-1,-7,-5,-7,-10,5,-4,-2,3,-8,-4,6,2,-1,-5,9,5,-9,2,3,-8,3,-5,4,3,-1,-5,-1,4,-7,10,4,-9,-6,-10,2,-7,-1,7,10,-7,7,7,-10,-9,9,10,-3,-8,-1,-5,-6,7,-5,-1,6,-8,-2,2,8,-9,-9,2,-2,-10,-9,-8,-7,10,-3,9,-1,-6,-5,-4,-8,-2,4,8,4,-10,2,8,5,3,9,9,10,2,4,8,9,-8,4,10,3,-3,-8,-6,8,-2,3,6,9,-1,-4,-4,1,-7,-9,4,-6,8,-9,6,-6,-4,-10,-6,-10,1,-8,-10,-8,-5,-5,8,8,-5,2,2,-10,1,-1,-8,-4,7,-5,-2,-6,-7,-7,-2,2,-10,9,-6,-10,-8,4,2,-6,-3,-9,-1,3,6,4,3,-9,2,-6,-6,7,-9,-1,-10,-1,-7,7,5,-5,-10,-3,7,-7,-10,1,-1,-10,-7,1,-8,-2,5,3,1,-3,9,5,5,-8,7,1,-6,-8,3,-2,-4,-8,-4,-10,-10,-6,-6,6,-5,8,-4,9,3,-4,-9,-1,-1,-3,-1,1,-4,2,-10,-5,5,-4,-6,8,10,-8,-10,-3,8,-7,-7,-10,-7,-4,3,9,-7,-6,8,2,7,9,9,-8,6,-5,4,-7,-10,-8,-2,-10,2,2,1,9,4,-5,10,9,9,-10,-1,-3,-1,5,-8,2,10,-1,10,9,8,6,-5,3,-10,8,3,4,2,5,4,-3,5,-7,4,8,8,-9,10,-9,-6,-6,6,-10,1,2,7,2,-9,-5,-5,-4,-9,-5,4,1,-9,-6,-9,7,4,-5,-7,10,-8,-9,-10,-5,8,9,-4,-4,9,9,-8,6,-8,-2,-10,10,-7,-10,-4,7,-6,5,-7,2,9,-4,2,1,-2,4,3,-1,-3,-9,-7,8,-5,3,2,-9,-1,-9,2,-10,1,8,7,6,2,4,6,-5,5,-2,-5,7,2,8,6,-8,-1,-10,-6,8,-6,1,6,-10,4,-7,10,7,-2,6,3,4,2,4,-2,10,-7,-7,-5,-4,-8,-1,7,-2,1,6,4,9,5,6,8,-3,-6,-7,-9,1,-4,-8,8,-3,-10,4,10,-3,-7,-10,4,-9,8,-1,-9,-6,5,-7,8,6,8,3,5,10,-5,-6,-6,9,-3,10,-7,4,-4,6,10,9,4,-5,-6,-1,-5,-9,-4,-4,-3,8,5,-1,-4,9,1,-1,8,3,10,6,-3,-8,-5,5,-9,7,8,2,-9,7,9,-6,-5,-2,3,2,-2,4,-3,7,-3,-7,-4,-4,-8,-4,10,-5,-9,1,6,9,-4,-7,-3,2,-1,-8,5,-8,2,1,2,-10,-6,2,-4,2,-5,8,5,3,-8,1,-2,8,2,9,-7,4,9,5,-8,-5,8,-10,-3,9,7,-7,-10,4,-4,8,1,-7,8,6,-9,-1,-4,9,6,-1,9,-2,10,-5,-1,10,-2,4,6,-8,-1,-3,-9,-2,-4,8,8,-4,-9,7,-9,4,1,-5,-10,-6,-9,-3,3,5,-6,-3,-4,5,6,-5,-8,-10,9,-7,-6,7,2,-6,-3,4,-4,6,-4,3,-4,6,-9,10,-10,4,-10,3,-1,10,-10,7,-1,-3,-3,-4,-7,10,5,-4,9,-2,1,2,2,7,-6,5,-7,-10,-9,9,3,1,-9,4,5,8,9,7,2,5,-8,5,3,6,-10,-7,6,2,5,5,1,-7,3,-6,-9,5,3,5,-7,-5,7,1,-10,-1,10,6,-9,-4,6,-9,10,4,-6,-9,-9,-2,-8,2,-8,4,6,1,-2,8,-6,-3,-5,-4,-6,-5,-9,5,-10,7,9,9,-1,3,-7,9,9,4,1,-4,10,5,-8,7,7,-7,-5,-4,-7,8,-7,1,-1,2,2,-10,-7,2,-5,-3,-6,9,-9,8,7,1,-2,-3,-7,8,3,2,5,5,-6,2,-1,3,-3,5,4,-5,-6,3,3,3,-9,6,-10,4,9,7,-7,1,9,2,-10,2,-5,-9,8,6,8,3,-3,3,-3,6,-1,1,-1,-5,-10,-8,6,7,9,1,-5,5,-1,4,1,7,-4,-3,-1,-5,7,-8,-1,5,8,9,-10,3,-3,7,-4,-5,1,5,-8,3,-6,-8,-5,8,1,-7,4,-2,5,-2,-4,-9,-6,-8,-7,-8,3,-9,-9,10,-4,10,-6,-4,4,2,-2,-4,7,1,-3,6,-6,-4,2,6,-2,-4,1,-1,-6,2,6,-6,-5,9,-7,8,8,10,-8,5,-3,8,9,-6,2,2,-3,3,7,-8,6,8,7,-5,-4,-5,-9,8,2,-4,-3,4,-5,4,10,-8,9,2,6,1,6,-5,-8,-7,-9,7,-7,8,8,6,3,6,-2,7,4,7,3,8,-7,4,-4,-9,-9,-3,-6,-7,-2,10,1,-1,-5,-6,-2,-2,7,-8,4,-4,-2,-2,-5,-9,3,-3,9,9,6,-6,10,-9,3,-2,3,-2,10,-5,-6,-5,8,-3,-4,2,-10,8,6,10,5,6,5,-6,5,-1,-8,10,-4,2,9,-10,2,-10,-9,6,2,3,2,-4,1,-8,4,6,2,8,1,2,-9,-2,5,-2,1,-8,-7,10,8,8,7,-1,-9,2,-8,3,-9,6,2,4,-7,6,3,-1,-7,4,-10,-5,-4,1,3,9,-1,-7,7,6,-2,-8,-10,9,-8,3,9,-9,7,5,5,4,-3,9,-4,5,-9,4,-2,9,7,-9,10,-7,9,-8,10,-2,-7,-2,-10,-9,-10,10,-6,-3,1,-9,-2,-9,-10,9,1,2,4,8,-3,-3,-10,6,-4,-8,2,7,4,7,10,-6,7,8,-6,-7,1,-3,-7,-6,-1,-5,4,7,5,-3,-1,-8,1,-4,-2,5,3,4,-10,-10,-9,-3,6,-10,-5,-7,-6,-9,-1,-1,3,6,-7,-5,-5,5,9,-6,10,-5,-2,3,9,2,-4,5,-10,-3,-3,3,5,-1,-8,9,-4,-2,1,2,-7,2,-9,7,9,-8,10,10,1,-10,-10,-6,-7,1,-2,-10,9,-10,-8,-2,9,-9,3,-4,3,-5,7,7,8,4,1,2,-3,-10,9,7,-4,-7,-8,-5,-7,3,-2,7,-8,-3,-2,-1,-5,-7,-5,-2,-1,-7,-10,-9,3,-10,-2,-4,-6,9,1,-3,1,3,-4,-6,-6,5,5,2,6,2,6,8,4,10,-7,2,-2,-5,-9,-3,-6,-10,2,1,-5,8,1,-5,-3,-10,9,10,6,8,-8,10,-1,7,4,3,-2,-1,5,8,1,8,-2,9,-6,5,2,-10,-8,8,4,9,2,-9,-6,-7,-6,4,5,-8,-4,7,-8,9,-3,-8,-8,-2,-7,-7,9,7,-1,5,-6,-7,6,6,-10,-2,2,1,-4,-10,4,-3,1,8,3,-8,-6,9,10,8,10,4,-7,-2,7,-4,-9,-6,9,4,7,2,8,3,-5,-9,-10,-9,-9,-8,2,1,-10,-4,1,4,-10,9,-6,-6,-5,9,10,-10,6,-7,-3,2,5,4,-3,-2,-5,-1,-5,-5,3,-6,10,2,-6,-6,1,-2,-3,-2,7,1,7,4,-10,4,2,6,6,10,1,8,-6,-8,-9,7,-6,-9,-2,-7,-3,-6,1,-7,-2,-6,4,2,-8,-9,1,-4,-6,-10,-7,1,-7,5,10,2,10,2,-6,4,-7,1,-2,-2,10,-7,8,7,6,3,3,-8,7,-8,8,-7,6,-10,-4,7,6,-3,3,-10,-3,6,10,10,8,10,-10,9,-4,-6,-3,4,-10,-6,8,-3,10,-8,7,-8,6,9,5,-5,8,9,6,-1,-2,-9,-2,1,6,-2,7,-6,-10,-2,2,3,-9,-1,8,3,-10,10,7,-6,3,5,-10,5,-5,-4,-4,-7,1,-10,-2,9,-7,6,4,-8,9,-9,4,10,2,-6,-5,1,-3,-7,6,-8,6,-7,-3,-7,8,-3,1,2,1,2,-3,4,-4,10,6,10,-10,-4,4,9,-9,-2,8,-6,2,-5,-10,10,9,-3,7,-8,-2,4,-4,-8,5,-3,-4,4,-8,-2,7,2,1,2,9,-9,-10,9,-5,-7,6,5,-1,-5,-7,7,8,-1,-5,9,3,-6,-2,-7,1,7,-3,5,-1,-5,9,4,9,8,-10,-9,6,4,-10,5,6,-7,6,5,6,6,9,-5,-7,4,10,10,9,-4,-6,10,-10,-1,3,-2,5,4,-1,-6,-2,8,4,-7,-4,3,7,4,-4,-4,2,-4,5,2,-9,-6,9,-2,-2,7,10,-5,-5,4,3,-6,3,1,10,-6,2,-9,-6,5,9,-3,3,-8,9,8,2,-9,4,5,-5,-4,-4,9,5,7,7,-5,-2,-7,-6,2,-8,3,3,7,-10,7,5,4,-2,-8,-5,-7,5,-5,-10,-9,10,-4,9,-10,-4,2,3,-3,-1,3,-3,2,-6,-9,5,-7,-9,9,4,-4,6,-10,-4,-5,-2,-10,1,-3,8,-5,1,10,-5,-5,-8,-7,-6,5,-8,4,9,6,-5,-8,10,-8,9,10,-8,-3,3,3,7,-9,8,-6,7,-8,-1,-5,-2,-2,4,-5,7,1,7,1,-9,10,4,-4,-10,-3,-1,-3,-5,5,9,2,-7,-5,-6,-10,-7,-4,-8,1,-5,10,3,10,-8,-7,-5,2,3,-8,-8,-8,1,-5,2,-1,-8,-2,4,-9,9,1,7,7,5,-1,-8,-7,10,-1,5,1,3,-4,-7,1,-1,1,-8,-7,8,7,6,-6,-5,1,7,3,7,-6,4,-2,10,2,6,2,-9,9,-4,-6,-9,6,10,5,9,-4,7,-8,3,-6,3,-2,-8,10,5,-8,4,10,3,3,-5,7,-5,10,6,5,-1,-2,8,-10,7,-7,1,-6,3,8,-6,-1,-9,9,4,-5,-10,5,-8,-1,2,-7,-5,9,2,-5,4,9,4,1,1,4,-2,1,5,-6,-2,-10,-7,5,8,-8,-6,8,-5,2,4,9,-5,7,-6,7,-5,7,9,3,-3,-2,10,-3,-10,2,10,-1,6,7,10,-2,-2,-8,2,-8,4,8,-1,-10,-5,-6,-6,10,-6,5,-10,4,-7,-4,-6,6,4,4,6,-8,-8,7,-3,7,-5,-9,9,-8,-6,5,-7,-1,-6,8,-9,-6,1], dtype = "int16")#candidate|3377|(2304,)|const|int16
call_3376 = func_1112_call(relay.reshape(var_3295.astype('int16'), []), relay.reshape(const_3377.astype('int16'), [12, 12, 16]), )
call_3378 = func_1112_call(relay.reshape(var_3295.astype('int16'), []), relay.reshape(const_3377.astype('int16'), [12, 12, 16]), )
bop_3381 = relay.equal(bop_3361.astype('bool'), relay.reshape(uop_3277.astype('bool'), relay.shape_of(bop_3361))) # shape=(5, 1, 7)
output = relay.Tuple([call_3289,const_3290,const_3291,const_3292,var_3293,const_3294,bop_3299,call_3319,bop_3340,call_3354,var_3355,call_3364,var_3365,call_3376,const_3377,bop_3381,])
output2 = relay.Tuple([call_3296,const_3290,const_3291,const_3292,var_3293,const_3294,bop_3302,call_3320,bop_3340,call_3356,var_3355,call_3366,var_3365,call_3378,const_3377,bop_3381,])
func_3385 = relay.Function([var_3293,var_3295,var_3339,var_3355,var_3365,], output)
mod['func_3385'] = func_3385
mod = relay.transform.InferType()(mod)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3385_call = mutated_mod.get_global_var('func_3385')
var_3387 = relay.var("var_3387", dtype = "float64", shape = (1134,))#candidate|3387|(1134,)|var|float64
var_3388 = relay.var("var_3388", dtype = "int16", shape = ())#candidate|3388|()|var|int16
var_3389 = relay.var("var_3389", dtype = "float64", shape = (5, 13, 7))#candidate|3389|(5, 13, 7)|var|float64
var_3390 = relay.var("var_3390", dtype = "int64", shape = (320,))#candidate|3390|(320,)|var|int64
var_3391 = relay.var("var_3391", dtype = "int8", shape = (288,))#candidate|3391|(288,)|var|int8
call_3386 = func_3385_call(var_3387,var_3388,var_3389,var_3390,var_3391,)
output = call_3386
func_3392 = relay.Function([var_3387,var_3388,var_3389,var_3390,var_3391,], output)
mutated_mod['func_3392'] = func_3392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3501 = relay.var("var_3501", dtype = "float64", shape = (6, 15, 15))#candidate|3501|(6, 15, 15)|var|float64
uop_3502 = relay.acos(var_3501.astype('float64')) # shape=(6, 15, 15)
output = relay.Tuple([uop_3502,])
output2 = relay.Tuple([uop_3502,])
func_3506 = relay.Function([var_3501,], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
var_3507 = relay.var("var_3507", dtype = "float64", shape = (6, 15, 15))#candidate|3507|(6, 15, 15)|var|float64
output = func_3506(var_3507)
func_3508 = relay.Function([var_3507], output)
mutated_mod['func_3508'] = func_3508
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3717 = relay.const([[[1.479859,-8.440516,-1.939232,-2.594925,-2.517023],[-3.572247,-1.902390,-1.648397,-8.361581,-1.550150],[4.264526,-7.722681,9.173233,3.952076,-9.109801],[0.627546,-9.541040,-6.940537,8.908528,8.189264],[9.991191,-3.078880,6.170240,5.113346,6.201361],[5.247233,-3.741026,-4.573146,6.100820,-5.759173],[-4.278355,4.243210,5.521646,-4.195783,9.597846],[-1.227311,2.720178,-7.814073,6.896272,-5.812890],[2.198819,8.927995,3.032657,5.028465,8.515680]],[[4.449885,-5.007000,4.569540,-6.354689,-5.156565],[2.602901,-0.388548,7.332262,3.124502,-8.633340],[4.786404,4.486544,0.234129,-1.464359,-2.397529],[-9.100965,-4.130919,-6.737294,-8.084263,1.873771],[-6.897729,-0.476701,8.599335,-9.694223,-4.236962],[4.161130,-1.204400,7.109811,3.453042,6.234727],[5.141187,3.448130,-3.365399,1.567955,6.244748],[9.178551,-5.609585,-7.813241,6.199180,-2.724598],[-2.912150,-6.339893,8.162688,-3.726827,5.041820]]], dtype = "float64")#candidate|3717|(2, 9, 5)|const|float64
var_3718 = relay.var("var_3718", dtype = "float64", shape = (2, 9, 5))#candidate|3718|(2, 9, 5)|var|float64
bop_3719 = relay.mod(const_3717.astype('float64'), relay.reshape(var_3718.astype('float64'), relay.shape_of(const_3717))) # shape=(2, 9, 5)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_3725 = relay.const([-8,10,-8,10,1,-8,-1,-6,-7,9,3,7,-6,-7,-3,-9,-7,-10,4,-2,-4,-7,-5,10,-3,-3,10,6,10,-4,-2,-6,4,3,-6,4,-5,4,3,-1,-6,5,-6,-3,6,9,-2,6,-3,-5,-6,-8,9,-1,10,3,10,-2,-10,-3,4,-6,-1,2,3,-2,6,10,-3,-10,-6,-9,-10,3,7,8,-1,6,9,5,-7,1,-6,9,-5,-4,-3,-7,5,-4,-9,-4,7,2,9,-7,4,-8,-2,-10,9,6,-9,6,5,6,4,-6,-9,-8,6,3,-5,8,9,2,4,-1,-5,6,-6,-5,2,1,10,8,-5,3,3,7,1,-1,1,9,10,7,-10,6,4,3,-9,9,3,5,-5,-9,6,-3,-3,-5,10,9,-4,1,-6,-3,7,-2,4,-6,4,5,-7,-6,-1,-3,3,-2,-1,-5,9,-6,10,5,-5,-2,6,8,-6,-6,-7,9,-3,7,5,-4,1,-1,8,-6,-8,-2,4,10,6,6,-4,-3,5,4,-5,-6,-8,7,4,-9,-2,9,-10,-5,-6,10,-7,1,-5,3,3,6,8,-7,9,-7,6,-6,-8,5,-3,3,7,1,9,2,5,5,-3,8,-8,-10,2,3,6,-3,2,-8,-10,-3,-5,2,4,5,-10,9,9,-4,-5,10,-6,2,-9,-9,1,9,-10,10,-8,1,-10,-8,10,-10,1,-10,-3,5,5,10,-7,-4,9,10,8,7,-2,9,-7,8,-10,-4,-3,6,2,-1,-6,3,8,-5,5,-6,-7,10,5,3,-8,-8,-4,6,10,-5,6,-4,-1,3,-10,-2,6,-4,-2,6,-2,1,-9,-3,6,-7,-6,-7,9,3,-8,8,-9,-5,-9,-10,-5,10,8,5,9,-8,-5,2,-4,-3,1,8,-4,-10,-6,-8,9,-7,9,-3,-5,3,-4,4,-1,-4,-8,10,-7,-9,-1,4,-2,9,4,-10,-10,9,-10,-6,9,1,4,1,6,-4,4,-6,-10,8,6,-3,4,10,6,-5,6,2,1,-1,3,1,5,6,4,-9,5,-7,-5,-1,5,-6,3,-2,1,-9,-1,6,2,3,-7,8,-6,8,-6,-2,6,5,-6,-4,-10,-3,-5,-5,10,-5,-2,-6,-2,10,5,10,-10,1,-9,2,7,-8,-4,-1,3,-1,1,-3,-4,-10,5,-2,-4,-2,9,-2,-1,3,7,2,-2,-7,10,7,-3,7,-8,4], dtype = "int16")#candidate|3725|(468,)|const|int16
var_3726 = relay.var("var_3726", dtype = "float64", shape = (864,))#candidate|3726|(864,)|var|float64
call_3724 = relay.TupleGetItem(func_648_call(relay.reshape(const_3725.astype('int16'), [4, 9, 13]), relay.reshape(var_3726.astype('float64'), [864,]), ), 2)
call_3727 = relay.TupleGetItem(func_651_call(relay.reshape(const_3725.astype('int16'), [4, 9, 13]), relay.reshape(var_3726.astype('float64'), [864,]), ), 2)
output = relay.Tuple([bop_3719,call_3724,const_3725,var_3726,])
output2 = relay.Tuple([bop_3719,call_3727,const_3725,var_3726,])
func_3735 = relay.Function([var_3718,var_3726,], output)
mod['func_3735'] = func_3735
mod = relay.transform.InferType()(mod)
var_3736 = relay.var("var_3736", dtype = "float64", shape = (2, 9, 5))#candidate|3736|(2, 9, 5)|var|float64
var_3737 = relay.var("var_3737", dtype = "float64", shape = (864,))#candidate|3737|(864,)|var|float64
output = func_3735(var_3736,var_3737,)
func_3738 = relay.Function([var_3736,var_3737,], output)
mutated_mod['func_3738'] = func_3738
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3936 = relay.const(-5, dtype = "uint8")#candidate|3936|()|const|uint8
var_3937 = relay.var("var_3937", dtype = "uint8", shape = (2, 5, 4))#candidate|3937|(2, 5, 4)|var|uint8
bop_3938 = relay.maximum(const_3936.astype('uint8'), var_3937.astype('uint8')) # shape=(2, 5, 4)
func_1655_call = mod.get_global_var('func_1655')
func_1657_call = mutated_mod.get_global_var('func_1657')
const_3942 = relay.const([2.031328,-9.205045,4.011390,9.196861,-6.664065,7.656321], dtype = "float64")#candidate|3942|(6,)|const|float64
call_3941 = relay.TupleGetItem(func_1655_call(relay.reshape(const_3942.astype('float64'), [1, 6, 1])), 0)
call_3943 = relay.TupleGetItem(func_1657_call(relay.reshape(const_3942.astype('float64'), [1, 6, 1])), 0)
output = relay.Tuple([bop_3938,call_3941,const_3942,])
output2 = relay.Tuple([bop_3938,call_3943,const_3942,])
func_3947 = relay.Function([var_3937,], output)
mod['func_3947'] = func_3947
mod = relay.transform.InferType()(mod)
mutated_mod['func_3947'] = func_3947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3948 = relay.var("var_3948", dtype = "uint8", shape = (2, 5, 4))#candidate|3948|(2, 5, 4)|var|uint8
func_3947_call = mutated_mod.get_global_var('func_3947')
call_3949 = func_3947_call(var_3948)
output = call_3949
func_3950 = relay.Function([var_3948], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4236 = relay.const([[[-3,9,-7],[-10,-9,2]],[[3,3,7],[7,2,-2]],[[-7,9,-7],[7,7,7]],[[-1,9,-7],[8,-9,1]],[[8,-7,-6],[-9,-1,4]],[[5,8,-5],[10,-4,-6]],[[9,3,4],[5,-6,4]],[[1,-6,-4],[-10,2,-2]],[[5,-3,-10],[9,2,9]],[[-10,9,7],[9,-9,-2]],[[-7,-1,-10],[-4,-7,-3]],[[-7,-10,6],[6,-4,-3]],[[2,-2,-7],[3,5,-3]],[[-9,2,-5],[6,-9,2]]], dtype = "int64")#candidate|4236|(14, 2, 3)|const|int64
var_4237 = relay.var("var_4237", dtype = "int64", shape = (14, 2, 3))#candidate|4237|(14, 2, 3)|var|int64
bop_4238 = relay.multiply(const_4236.astype('int64'), relay.reshape(var_4237.astype('int64'), relay.shape_of(const_4236))) # shape=(14, 2, 3)
output = relay.Tuple([bop_4238,])
output2 = relay.Tuple([bop_4238,])
func_4246 = relay.Function([var_4237,], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
var_4247 = relay.var("var_4247", dtype = "int64", shape = (14, 2, 3))#candidate|4247|(14, 2, 3)|var|int64
output = func_4246(var_4247)
func_4248 = relay.Function([var_4247], output)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4332 = relay.var("var_4332", dtype = "float32", shape = (12, 13))#candidate|4332|(12, 13)|var|float32
var_4333 = relay.var("var_4333", dtype = "float32", shape = (12, 13))#candidate|4333|(12, 13)|var|float32
bop_4334 = relay.power(var_4332.astype('float32'), relay.reshape(var_4333.astype('float32'), relay.shape_of(var_4332))) # shape=(12, 13)
func_3385_call = mod.get_global_var('func_3385')
func_3392_call = mutated_mod.get_global_var('func_3392')
const_4339 = relay.const([3.138653,-1.101142,-3.820763,2.321733,-9.207467,-6.192257,-4.672439,2.157989,-9.863000,9.600977,0.141415,-8.666038,9.391265,4.156365,1.103756,4.936938,-6.581187,-6.267376,7.316123,-6.448243,-4.575139,2.484685,8.310975,6.000681,3.749715,-8.316872,3.300374,-9.492905,8.516882,7.792354,4.255067,5.847215,-9.613736,-6.560428,8.634013,-2.086539,-6.189449,-8.853749,-4.721517,7.185330,-5.077812,-6.104066,-6.250450,6.477321,8.775706,-2.800360,3.022231,-3.343974,-3.900401,8.892298,9.000989,2.221012,-1.770438,7.891659,0.786411,-3.056062,4.596866,9.419554,4.896167,2.603192,5.473265,9.599459,0.537727,3.535652,8.309745,7.706910,-5.840409,-4.184856,-2.656290,9.281061,-9.142507,9.903918,3.120145,4.797094,2.540785,5.701527,-5.328465,9.352004,-6.415772,0.241150,-7.078327,-8.562070,4.784342,9.382358,6.605091,8.798372,-2.682785,9.687248,4.211518,-6.405277,8.992559,-2.062176,-6.663518,0.817201,-0.652520,-5.258318,3.245355,1.670131,8.117463,-7.957482,7.323669,-8.774238,-9.890120,3.526628,-2.407555,8.172537,0.811442,-1.375859,7.063609,-8.062052,-8.580471,-9.215997,-5.051914,9.860031,-4.220854,-2.762401,7.870938,1.087450,-0.241247,-5.790346,-8.958028,-4.533629,9.014219,-5.394086,-0.024289,-3.256640,0.728147,-5.887228,-6.586316,-3.759217,3.420586,-0.185680,6.035165,-5.526216,9.064570,1.024397,-3.047280,2.779538,-9.962745,2.892132,0.597796,7.903418,-7.462987,-5.494104,7.156721,-0.853526,0.241229,-8.591917,-5.028684,-7.844641,5.581496,-1.446006,3.633390,2.372844,8.257189,-9.479243,-0.402725,3.849071,9.257861,3.394946,-6.189538,2.652544,-6.943422,2.336145,-3.198855,-5.876995,9.317545,-8.287702,7.759861,-2.972747,-4.487259,3.076290,-6.441415,8.112357,-1.342254,2.665108,-6.033895,-2.858761,-4.415929,-5.538394,8.281415,-5.396693,4.459839,3.931455,-8.238041,0.947817,-1.905686,0.366573,0.926692,-0.394654,9.773200,0.883155,-0.803062,-4.694821,6.741187,6.786568,-4.079744,1.936531,-1.234108,-2.781402,-6.623291,5.051243,-0.094515,1.751165,-5.821338,9.473228,1.173322,5.970814,-1.123423,-7.940765,-5.694265,-6.004171,4.567048,-9.077817,-3.747874,-2.617874,-8.044619,2.843934,-2.135445,8.920713,-5.735664,-1.005072,3.086339,9.435997,-9.249238,2.623617,7.659768,3.399375,0.319687,8.865639,-4.629340,-1.766713,5.726984,9.293141,-7.875292,-9.289397,6.432757,2.977589,2.838459,-2.381211,-6.410497,-5.309150,1.200450,0.599529,-2.749297,-9.730120,-0.890652,3.450169,-4.444242,-7.004171,7.790762,2.434198,5.413531,4.977647,1.215336,-7.799986,2.230659,3.690743,-6.107466,3.650248,5.000682,0.267385,-5.972695,-9.129530,5.017122,-4.135332,5.527917,2.759279,-5.282093,0.541254,-4.191499,8.217933,2.617966,-5.512586,9.414655,-8.460077,4.110002,2.246083,-8.391456,-3.712401,-0.385674,4.814266,-2.985804,-7.686500,0.653281,-1.255087,-4.720849,-6.286902,4.636107,2.948148,-6.143373,5.114183,-0.402352,-4.371720,-0.375805,-2.075780,4.071661,4.761963,5.319020,-5.392836,7.259198,-5.924603,-8.808984,6.327792,-9.566884,6.371639,-6.764392,-5.527449,3.830122,-5.208307,-7.323142,-9.778226,-5.493380,4.902780,1.359543,-2.709932,4.390566,-2.035517,4.249032,3.535523,6.915768,8.710921,6.209751,-5.401599,-4.611004,5.078929,6.093524,-4.198069,4.404702,3.798431,9.295664,7.446957,0.521241,-5.035562,-1.253696,-1.943361,-8.483168,4.974882,9.025272,-0.298930,-1.777100,-6.270955,1.958182,7.228811,5.407009,-9.738944,8.784050,4.452834,5.486789,8.623035,9.142023,4.579443,4.763242,4.660451,-6.041754,-1.206076,4.764291,0.894196,9.856560,3.247418,8.351329,3.842734,-9.836941,0.390656,2.121023,2.418785,-9.573848,-4.079972,6.073885,5.965143,-7.828207,8.525001,-6.846257,-8.987265,3.307645,-2.536324,7.438742,6.319860,-9.252677,-4.332445,-6.674898,-9.612661,-4.235689,-7.749688,3.104255,-3.204532,-1.290832,4.558581,-2.466320,-6.241619,-5.768443,-8.048482,0.793073,3.365565,2.485741,9.426333,4.842962,-7.117211,-4.304485,4.362570,-2.107500,1.936119,0.625754,-6.428384,4.441147,-6.280464,1.375862,5.680991,-4.045452,1.341915,-0.899435,6.121008,-5.190097,-8.729311,8.918830,-7.384181,7.213040,-3.848575,3.300715,-5.235584,2.930106,-6.693347,3.915258,9.707246,-5.301177,3.089385,7.492518,-0.482220,8.349622,7.499199,-9.152566,-2.665207,1.122363,0.140235,0.849482,9.256394,-3.970450,-0.064304,-9.578931,9.498340,-7.277222,6.778169,-8.774637,7.171169,-8.759763,-0.625418,6.255074,-2.630025,5.714579,9.974624,1.715642,1.304712,-6.254184,-9.357930,-4.239971,2.719898,-7.058955,-6.742839,-4.813864,-4.883513,-0.675730,7.613571,-2.117713,9.873086,6.688888,-9.489248,7.431144,-4.450357,4.657791,-2.621632,1.323691,-9.459518,3.990266,-5.214288,4.744303,-2.650753,9.653510,4.386770,-7.787359,3.061660,6.770881,-5.954090,1.835436,-1.152809,9.299865,-7.223447,-1.437671,6.391412,-0.186691,2.032416,-7.181721,4.701726,6.561122,4.008377,3.733337,-4.026537,6.254216,-4.000787,9.604585,6.388092,2.622473,7.935936,3.784503,8.990586,-5.278338,0.355705,1.708827,-7.969812,2.247630,-4.220653,-1.833416,6.687730,0.724606,0.317645,-1.205570,-4.795475,-4.311189,4.585565,-0.496199,9.443537,9.845341,7.049633,-8.652695,9.528095,-6.192041,-3.538482,-5.510102,-8.010419,6.787665,2.197063,-3.238608,-4.002071,5.327518,-0.078129,-1.854173,3.499896,-0.819753,-0.219592,-8.803318,-0.520391,5.558206,-1.331656,-9.433522,-7.392803,-9.785571,2.320567,7.435762,8.426225,4.228940,-5.531070,-6.260606,7.862342,-1.299263,1.802768,-7.222585,4.903837,-7.828487,1.474720,-5.965253,0.630011,7.109893,-1.289224,-8.965336,-2.912777,9.039555,9.157618,-1.108502,2.339609,1.274820,3.080968,-2.747938,6.699696,-5.722147,-6.709374,-0.289220,0.160860,-8.317271,-6.012679,-1.466098,2.393482,0.663798,7.346260,3.477916,1.765762,8.858565,-8.394389,8.086919,-8.421120,2.502230,9.710906,-1.183492,8.057742,-5.759223,6.861848,-0.965414,-0.720422,-1.855977,8.377426,-0.446516,-5.188390,-4.110181,-5.482424,-8.582922,2.301023,3.341809,-9.292990,-3.208586,-6.783948,8.230715,0.534523,-8.642939,-6.794520,0.909769,4.884288,-8.832013,5.699101,-4.469282,-2.999716,-0.841736,-4.387883,-7.981224,-9.482978,7.253896,7.375523,-1.571157,-0.652967,7.649799,3.775127,1.063124,-1.622224,-6.298717,-7.491833,3.807131,-0.915935,-9.517032,5.173279,5.249699,2.422239,4.712791,7.348454,7.073930,-4.015298,-3.607220,3.401271,-5.497246,9.138232,8.787857,-2.359447,8.169175,8.075104,0.899089,-9.289491,-2.834507,6.004303,0.039968,6.816793,5.714089,3.496383,-0.212230,2.517888,-4.422755,2.650755,-6.557264,0.091879,-3.128500,0.355573,3.751497,-6.261030,-1.422096,2.576497,6.175633,-3.883050,6.953866,-1.991025,2.747866,-3.219542,7.583167,3.856209,4.356869,0.037725,9.754386,-4.996252,-6.078552,-1.132952,-5.868259,-8.896914,3.217492,-7.796911,-4.913857,-3.559386,-6.970886,-3.176337,-2.301552,3.767905,-7.770892,-4.784532,-5.884143,-9.880112,7.215747,3.329805,8.199848,8.637792,-5.079732,9.450184,5.969741,-7.726192,-3.024097,1.008867,3.093324,1.375279,3.554980,0.261590,-1.108851,-3.205019,3.844266,3.565585,-0.760683,0.317199,9.613045,0.914217,-8.589655,-6.674294,-2.765318,2.948953,2.027545,8.240433,-9.655858,-7.714986,0.100513,8.853714,-7.169615,2.408267,9.207392,0.562925,4.652694,8.475503,8.382847,-8.101201,2.636944,6.185761,-9.824347,1.651596,1.780902,9.189469,2.134215,1.930030,-0.404359,-6.481235,8.906697,-9.811762,-4.907467,-4.014076,3.131554,-3.024380,3.827170,2.733183,-3.452100,-1.549134,-3.972217,-5.864274,-1.876979,9.165739,-9.398436,8.574877,-9.453638,-1.586754,3.270352,-5.317874,-4.077520,-7.251630,-0.730438,8.339115,-0.333952,-0.788886,-4.623065,-2.420066,4.530397,7.958761,2.780420,8.045137,-6.231549,3.417483,1.446086,-5.842547,-7.458888,4.420045,1.637811,0.945646,-1.527494,-8.008586,4.622209,-3.799110,4.275394,-0.960325,-4.933311,-0.481694,-8.911959,-1.504768,2.512660,4.126712,5.190572,-3.998686,1.009989,8.398323,8.296557,-2.960614,-5.162062,5.497115,-6.612140,0.749510,-4.254339,2.754513,2.778457,-6.279915,9.348913,-7.858108,-1.546265,4.274131,-4.039977,4.533471,-6.270016,-7.914974,-3.354259,-4.145609,-8.982127,0.754315,9.807964,6.292487,3.693637,1.726857,5.295983,5.657935,-4.230100,7.463596,3.938249,3.382838,2.428066,7.514692,6.877861,-2.075479,9.979800,-2.146842,6.940698,2.733156,1.276588,1.856126,-8.312392,-1.594818,9.957227,0.411235,4.451925,-7.692330,0.473853,-4.396687,-3.329811,-3.758187,9.826189,-1.228247,-7.643473,3.231131,1.918955,-2.554197,1.189749,-2.063282,-5.285732,-6.873184,-5.241075,-6.073810,-1.240437,1.848020,-3.665925,-7.442019,-7.115306,-9.913621,-7.675473,5.904277,-4.518487,6.854587,-8.672607,-9.723071,0.810065,-4.074792,4.927241,2.100543,-3.793870,-4.367604,-2.096792,-1.618148,-3.053920,9.338412,-9.601936,-6.733476,-9.693371,-7.297149,6.299302,-4.837250,8.586095,1.341250,7.036514,-8.827061,0.792196,-3.145838,6.559435,-4.717224,7.619816,-5.725873,-7.923590,-0.655302,-6.442316,-9.733249,6.092004,2.534215,5.125194,-9.039472,1.058778,-4.181256,0.884010,7.064708,7.650105,-4.778236,2.612222,-8.067280,9.383132,5.454196,-0.562347,-3.928801,-9.805420,-9.889398,-7.587687,-0.755566,-6.624814,-8.321086,-5.270977,-1.718174,9.321734,-0.757025,-1.846451,6.614534,-7.163922,9.684689,-7.097985,-4.579458,1.459015,-5.546497,6.059317,-6.686315,-1.829920,-6.964090,-7.110077,-2.767226,9.802328,-6.697445,-8.259971,-9.658191,-6.239237,6.301201,9.519312,7.304032,-6.355240,-1.145791,9.763351,9.848991,4.456744,-0.395806,4.419514,9.466268,2.676380,-1.334358,1.867812,-3.758960,-9.816570,-1.682104,-1.782171,1.927050,-6.477724,-9.214054,-7.862810,9.488251,9.593455,2.145751,-8.545107,-9.491648,-1.561238,5.041906,8.799962,-8.963814,6.726011,6.015462,-0.362547,3.744717,-1.965965,-6.758872,6.830255,-5.273031,3.193190,6.323077,-0.089579,-8.668349,-1.202629,9.046604,9.037529,-9.495927,-0.772963,-5.700228,-3.403843,3.698022,-1.082491,6.299825,1.666393,-7.906170,9.765710,9.871860,8.723135,-8.999564,7.238919,2.438425,2.737261,-1.648165,6.907979,3.346690,-8.057288,-9.009846,-7.487040,-4.062443,8.248963,9.578712,6.000049,7.372464,-2.678260,-4.634895,8.951964,-4.815298,6.664323,-5.353625,-3.671374,-1.611802,6.902515,8.964071,-5.578273,8.824859,-1.993643,-9.778241,6.588958,4.648939,-3.667037,-9.914611,1.621922,-4.861685,5.240003,-3.064483,-8.118502,-2.510877,3.924510,-0.531362,3.396742,-5.226533,-9.467476,9.779388,-6.222190,2.365050,9.787339,-9.774269,-7.094544,6.857064,5.050331,9.254840,3.162818,1.683807,4.002948,-2.830891,-4.768469,1.882869,-9.960031,-9.294639,0.734897,0.123158,4.659521,4.169270,-6.541787,4.272347,-8.997688,-8.905478,-6.314706,3.927185,3.191583,5.171263,-0.890807,-4.465208,1.225796,0.360627,-8.061927,4.471238,-1.991758,6.220452,-1.132897,-3.522079,-0.674047,-1.512632,5.136899,-4.501171,0.707735,-9.573973,-8.336047,-5.180611,2.051603,-6.224608,-4.156575,-1.533324,2.580903,-8.304421,-7.861183,-2.693563,1.351731,-0.485262,-6.489183,6.594343,-6.664895,1.055259,-0.475537,-8.193115,0.291901,5.517503,2.244666,-8.620905,0.883935,-4.910946,-7.542333,-1.167940,7.422637,-8.430840,-0.502786,4.596319,0.708443,5.266479], dtype = "float64")#candidate|4339|(1134,)|const|float64
const_4340 = relay.const(1, dtype = "int16")#candidate|4340|()|const|int16
var_4341 = relay.var("var_4341", dtype = "float64", shape = (455,))#candidate|4341|(455,)|var|float64
const_4342 = relay.const([-8,1,4,-6,8,-1,-5,-3,-5,-2,7,-6,1,-6,-8,3,5,-9,-8,8,-9,5,1,-9,-10,3,10,-4,7,-4,-10,-1,2,6,7,6,-4,-9,8,1,-7,-7,-4,-10,10,5,10,7,-8,-2,8,10,-10,6,5,7,-2,10,3,6,-3,-5,9,-3,-6,3,-4,7,1,1,3,-9,10,2,9,-9,2,-5,8,9,4,8,-6,9,8,-3,-8,7,-4,-1,8,-7,-6,1,-10,-9,-2,-2,2,6,-3,-3,3,-1,1,-2,-4,9,-1,7,3,-8,3,-5,-5,-6,-2,-1,9,4,6,10,6,3,2,-1,-3,1,-10,10,-7,-4,-7,8,9,-7,9,-6,-7,-2,-8,-3,1,7,-10,7,-5,-8,7,8,7,4,3,1,-10,8,-8,-9,4,-10,-4,2,9,-4,4,-6,-9,9,10,-9,-2,8,-7,9,-2,-6,10,-8,5,-7,5,-2,-4,6,10,6,-4,4,-9,3,-5,-10,6,-4,-1,2,6,2,-6,8,6,9,-6,1,9,-9,-4,9,-8,-1,-6,6,-8,6,7,-9,7,10,5,1,9,8,10,3,2,6,6,2,10,-5,3,9,6,-3,3,2,-5,-5,-8,2,10,-8,10,10,1,7,3,-1,-7,7,2,2,-10,4,-5,7,-4,4,8,-6,-1,-2,8,1,-2,7,-8,1,8,-7,4,10,1,-2,10,-10,2,5,-5,-7,-5,-1,3,-2,-9,-6,2,-9,-2,4,10,2,5,-3,-4,-7,3,5,-10,-9,-7,-2,-10,4,5,-3,3,8,-3,-8,9,9,3,-10,-10,-4,5,-7,-6,-9], dtype = "int64")#candidate|4342|(320,)|const|int64
var_4343 = relay.var("var_4343", dtype = "int8", shape = (288,))#candidate|4343|(288,)|var|int8
call_4338 = relay.TupleGetItem(func_3385_call(relay.reshape(const_4339.astype('float64'), [1134,]), relay.reshape(const_4340.astype('int16'), []), relay.reshape(var_4341.astype('float64'), [5, 13, 7]), relay.reshape(const_4342.astype('int64'), [320,]), relay.reshape(var_4343.astype('int8'), [288,]), ), 2)
call_4344 = relay.TupleGetItem(func_3392_call(relay.reshape(const_4339.astype('float64'), [1134,]), relay.reshape(const_4340.astype('int16'), []), relay.reshape(var_4341.astype('float64'), [5, 13, 7]), relay.reshape(const_4342.astype('int64'), [320,]), relay.reshape(var_4343.astype('int8'), [288,]), ), 2)
output = relay.Tuple([bop_4334,call_4338,const_4339,const_4340,var_4341,const_4342,var_4343,])
output2 = relay.Tuple([bop_4334,call_4344,const_4339,const_4340,var_4341,const_4342,var_4343,])
func_4349 = relay.Function([var_4332,var_4333,var_4341,var_4343,], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
var_4350 = relay.var("var_4350", dtype = "float32", shape = (12, 13))#candidate|4350|(12, 13)|var|float32
var_4351 = relay.var("var_4351", dtype = "float32", shape = (12, 13))#candidate|4351|(12, 13)|var|float32
var_4352 = relay.var("var_4352", dtype = "float64", shape = (455,))#candidate|4352|(455,)|var|float64
var_4353 = relay.var("var_4353", dtype = "int8", shape = (288,))#candidate|4353|(288,)|var|int8
output = func_4349(var_4350,var_4351,var_4352,var_4353,)
func_4354 = relay.Function([var_4350,var_4351,var_4352,var_4353,], output)
mutated_mod['func_4354'] = func_4354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4418 = relay.var("var_4418", dtype = "float32", shape = (11, 13, 10))#candidate|4418|(11, 13, 10)|var|float32
var_4419 = relay.var("var_4419", dtype = "float32", shape = (11, 13, 10))#candidate|4419|(11, 13, 10)|var|float32
bop_4420 = relay.power(var_4418.astype('float32'), relay.reshape(var_4419.astype('float32'), relay.shape_of(var_4418))) # shape=(11, 13, 10)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
const_4432 = relay.const([[-3.980335,6.101178,-2.776005,-4.840644,-3.410942,-8.657964,8.038418,6.300855,-3.208086,-6.312341,-8.045289,-4.878127,8.857188,3.836297,1.685955,4.811768,-6.636622,-5.910623,-2.944368,1.970381,3.504128,-0.110559,-9.234552,-9.576818,-8.917802,0.253991,-0.491989,8.464904,3.469700,6.001915,6.549223,-3.804195,2.838495,-3.881554,2.020497,-1.398693,7.449149,6.242147,-5.817209,-3.512121,0.393630,1.985119,-3.785990,1.187636,-0.845077,-5.143235,6.740478,8.036401,9.054091,-4.474497,5.814302,0.319902,8.575604,-3.461501,-9.180787,-3.286100,-4.337461,9.281974,1.847225,-8.183641,3.219381,0.071566,6.393564,7.459581,7.697152,8.991980,-9.077427,1.054634,-7.635772,9.318435,7.494579,-7.814975,-3.672349,-9.023452,-4.608844,1.785580,8.260646,-2.536077,8.109817,2.762280,-8.361272,1.550928,-8.820334,-2.966708,-1.170107,0.025024,-9.826301,-0.274441,-7.885916,-4.311672,2.866388,-6.229380,-0.177384,-2.614271,9.276649,-6.585477,-8.873183,-8.340164,2.884358,9.938182,7.880172,1.341200,-0.381680,-9.028836,-4.839462,6.259618,-2.766080,-3.298344,1.276126,-9.491357,-0.110811,-8.922682,-1.147787,8.343008,7.736875,9.897076,-9.983535,-0.260947,-4.913976,8.618437,8.186427,2.241400,-0.062301,9.243422,-6.549168,-9.813170,-4.355221,8.335418,-8.312379,-9.135394,-0.026503,-4.699704,-4.124617,2.600840,1.714432,0.550423,-2.856860,-2.697450,-5.441756,-7.110588,6.953613,-6.499259,1.463493,-7.946473,-8.001110,1.574378,-2.623998,2.888808,0.466177,-0.145743,8.320939,8.535246,-6.777686,9.564252,4.997529,3.172530,-7.811742,0.516475,2.832833,5.858588,-0.911348,-4.300528,-4.591134,-2.205782,6.652995,-6.428639,-1.144574,-4.659526,8.137294,-7.733515,5.374914,8.841119,5.576528,9.945588,-3.991250,-8.792395,8.411191,-7.202627,1.599222,3.848595,5.904502,2.944529,-2.518977,-7.761658,5.244215,-3.399555,-7.727496,4.698724,-0.594487,-7.701475,9.229628,-4.573747,-3.878128,1.993032,7.409443,-3.668998,-3.335430,-0.352885,8.184824,2.545017,7.621174,4.530859,5.189375,1.287812,5.917821,5.798707,6.197949,6.722377,-2.427893,8.420129,-7.588093,-8.247237,8.301553,4.810796,3.708965,-4.937961,-9.475135,-0.934834,-8.011310,-8.317236,7.183161,-7.412480,4.727014,-0.580202,-6.594095,8.869328,6.828861,-3.009092,-6.974564,2.176344,-6.086579,5.631029,0.823421,-3.081342,9.254722,8.207184,-0.885867,6.551821,-1.258035,5.509974,6.305253,6.272016,-0.517722,-1.066975,4.552429,-7.458301,5.183549,-6.691436,1.389301,-1.769952,3.986282,-9.505076,0.876407,7.767576,6.924539,9.394046,1.932597,-2.136555,-9.718738,0.693594,-9.926911,2.309010,1.235571,2.069993,-7.702606,5.119872,1.614961,-5.783026,-8.183266,-2.811892,-1.293612,-6.368004,-2.916348,-3.300060,2.359028,-8.198926,2.480334,1.231101,-0.777749,-8.826899,-9.531677,-2.021525,7.247119,1.990141,3.725451,0.940152,8.053074,3.832767,-8.015069,-2.705851,6.346016,-6.933733,-7.337252,7.387887,-6.516015,1.462403,-3.216605,-4.550018,-9.576053,2.688521,-9.816829,-4.797495,-8.651165,9.940450,0.611178,6.716191,7.024592,3.214898,5.528041,-3.509210,-6.293077,8.386266,6.622362,-7.239393,4.733415,3.542168,3.185610,1.643621,-3.963427,-0.283127,-3.175568,-8.794288,9.494480,0.290392,6.078055,-7.029129,0.601457,-5.761202,-0.951484,0.969703,-1.882400,7.190317,-0.776788,3.067661,0.776786,-0.324210,0.203632,4.730538,-7.120097,-6.433020,-1.383824,-3.386423,-0.428836,4.974134,7.713703,-4.074641,8.838693,0.286531,-9.835991,-3.341372,4.619684,8.216339,-5.392179,5.999374,5.384538,-7.480360,3.388704,4.202199,1.124113,-3.185534,1.413351,-7.029612,-2.515706,-8.435046,-7.147747,-5.925441,3.538141,2.433127,6.483908,4.844728,-8.094255,-6.274794,-7.295010,8.299661,-7.700725,-0.606453,-8.470576,6.080108,9.143666,8.208172,-8.869313,2.268005,9.554491,9.372917,1.064085,7.428895,-5.774434,2.932371,3.467807,-5.635543,-3.285794,-2.744350,9.770389,1.357252,2.039589,9.766097,6.597349,-2.667887,2.343632,6.414030,-8.987942,-6.823384,-3.192333,5.266935,-1.295264,-9.104869,-1.966478,1.406266,-8.136141,-4.776568,1.266921,9.054977,-9.255744,6.004428,-9.801872,4.259069,4.157050,6.653582,4.096737,6.347844,2.129794,9.941784,-3.025405,7.830567,2.077530,0.890373,3.908043,7.087208,-4.670076,6.473087,0.122099,7.722815],[-8.349842,9.229238,9.831700,3.997971,-8.917712,-4.585184,3.257362,9.253830,-1.630992,5.786872,7.585167,3.113874,6.243069,-1.273641,9.783930,3.540964,5.423809,-2.817427,-1.772565,9.986464,-8.601163,7.116803,5.234964,-1.731826,4.114004,-1.182189,7.940567,-1.705030,-3.359781,7.513604,-3.205825,-4.893770,0.260343,-5.291606,-3.508192,-3.730003,-8.439192,6.308462,-3.985670,9.668995,9.049030,2.467083,0.725168,-9.103136,-0.681675,-3.816601,-7.529264,-2.401413,0.185577,7.487624,-7.815972,-2.346338,-8.571278,0.910630,7.979071,-7.935711,-2.952560,8.411263,-6.849307,1.958352,-3.885256,0.403063,-9.422888,-7.127644,6.611975,-7.636671,-3.724737,-4.851787,-1.589767,6.959009,-0.406337,-6.954004,8.554989,-6.168346,3.618785,3.839035,8.913558,7.109319,-1.654264,7.592778,5.827650,-2.270607,-6.456509,-8.436936,-3.767014,4.345595,-5.603166,5.866654,7.998328,4.186623,7.460662,-1.410474,3.853182,4.914271,-1.659421,4.456657,-4.845905,3.997339,-0.390884,4.039476,9.189731,6.707738,-8.622972,-8.203389,1.302419,8.667057,-5.334842,1.429456,6.702911,7.461310,-4.781135,8.324448,-7.238697,1.900981,6.330518,9.227037,0.637705,-0.334742,3.806534,-8.271677,-3.075339,-8.160979,9.340066,-1.221137,-8.869825,-5.056019,9.087277,4.520518,-3.293621,-7.398236,9.553183,8.994373,3.660146,-0.274321,-3.840828,2.873838,-5.467910,3.871115,7.432678,-3.943012,0.715541,-3.595750,2.398462,0.013887,8.477516,5.410713,2.663190,8.662100,-4.806440,-1.363404,-9.976586,4.326133,4.055660,1.901467,-4.744541,-5.213391,-5.984159,-7.430086,-0.843860,-9.751327,-8.813783,-5.088062,-0.593070,-4.579837,8.111210,4.506607,-6.667769,9.738229,1.769425,-1.981416,-3.763636,9.358687,-9.651607,-4.449143,5.063572,-9.071891,-1.633117,-2.271998,-1.873608,8.443447,5.278893,-2.607917,8.124381,1.340558,-6.108739,5.729566,-1.949868,1.429076,-2.637712,3.142179,-1.933461,7.726194,-8.641244,3.386601,-5.376150,-8.407217,1.343700,9.422207,-8.645910,9.058675,4.913636,-4.872652,-0.433558,-6.249034,1.941766,-6.799075,3.284739,0.321912,7.238700,-4.511967,1.316207,9.354821,8.830984,-4.548600,2.556336,-0.779790,-2.856857,-8.442322,0.170887,5.858986,-6.700739,-2.797190,-8.970731,6.588328,8.191894,0.149010,4.246664,3.483507,-8.741715,-6.094919,-1.660199,-1.707210,0.942191,3.682734,1.204291,-1.549287,-0.102470,0.063320,-1.426716,0.906690,-5.218526,-2.633353,6.399672,1.846381,0.868189,-8.739550,-9.347327,-8.825154,4.967548,-9.278785,6.769033,6.002881,-1.999357,-1.311935,8.124661,-2.192861,-5.579996,1.636445,-9.988310,5.407145,4.639866,0.007308,-9.834105,1.172348,0.702872,-7.605529,-4.967111,8.512291,-1.001240,8.498159,7.514630,-0.223797,4.182212,1.125992,-6.978711,4.164102,-9.517195,1.670761,0.514715,9.235290,1.150029,6.973766,8.780511,-9.496899,-2.012781,5.430495,0.090220,9.892526,-3.402096,-2.230136,-2.352335,-2.996952,3.611841,1.463595,-0.484254,7.931828,0.267328,-5.968917,9.734906,-2.306754,-2.509050,0.503655,2.899551,-8.370608,-9.518823,-8.821513,1.424978,5.888478,1.818734,3.860523,0.148250,7.746351,8.266874,3.165320,-3.798840,-9.838178,-7.853692,-5.663105,-8.227043,4.189308,5.775728,3.520954,-0.714692,3.346533,-1.611624,8.661129,-8.583317,-1.539929,-8.942937,-3.351866,2.099916,-1.794920,2.278944,-7.559182,0.651911,-4.760999,6.157391,2.301467,-9.118517,4.186826,7.350151,9.157018,4.980394,1.031020,8.161457,-9.417885,-4.215285,-6.916267,6.580689,-2.121797,-4.866362,-0.204962,-4.911291,5.980110,-3.391469,7.026929,-8.971111,6.271942,-7.327540,3.309045,9.638018,3.724773,-8.360944,2.939587,-0.683231,1.800319,-0.778090,-4.688276,8.477716,4.417314,7.949712,-2.484494,6.155650,7.645611,-4.246247,-3.046553,5.535706,-4.844807,1.619658,5.866140,4.592684,3.505932,-9.240803,-3.366011,8.659129,-3.061265,5.347719,-6.281842,-5.936747,-7.968697,9.750735,-7.872810,-0.094547,-1.512820,-3.539275,2.780547,-8.254092,6.082379,4.751280,7.021645,-3.256445,6.305497,-8.216655,-6.465835,3.905155,9.871539,2.231293,2.723940,-9.954806,-6.272124,-0.841398,-0.767819,-9.809168,8.213410,-1.170833,-4.022224,-5.813013,-7.040290,-6.726597,-0.654646,8.187151,-0.253538,3.190147,4.311038,1.367038,8.595970,6.506095,2.594565,4.615051,3.609174,1.795499,-7.392076]], dtype = "float64")#candidate|4432|(2, 432)|const|float64
call_4431 = func_536_call(relay.reshape(const_4432.astype('float64'), [12, 9, 8]))
call_4433 = func_536_call(relay.reshape(const_4432.astype('float64'), [12, 9, 8]))
output = relay.Tuple([bop_4420,call_4431,const_4432,])
output2 = relay.Tuple([bop_4420,call_4433,const_4432,])
func_4440 = relay.Function([var_4418,var_4419,], output)
mod['func_4440'] = func_4440
mod = relay.transform.InferType()(mod)
var_4441 = relay.var("var_4441", dtype = "float32", shape = (11, 13, 10))#candidate|4441|(11, 13, 10)|var|float32
var_4442 = relay.var("var_4442", dtype = "float32", shape = (11, 13, 10))#candidate|4442|(11, 13, 10)|var|float32
output = func_4440(var_4441,var_4442,)
func_4443 = relay.Function([var_4441,var_4442,], output)
mutated_mod['func_4443'] = func_4443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "float64", shape = (6, 6, 13))#candidate|4736|(6, 6, 13)|var|float64
uop_4737 = relay.exp(var_4736.astype('float64')) # shape=(6, 6, 13)
uop_4740 = relay.sinh(var_4736.astype('float64')) # shape=(6, 6, 13)
func_2788_call = mod.get_global_var('func_2788')
func_2797_call = mutated_mod.get_global_var('func_2797')
const_4753 = relay.const([-1.747397,2.583299,5.705193,-1.661487,-5.448458,3.716279,6.169586,-5.689155,2.949591,7.526316,2.258671,-1.672798,-3.571545,-7.241482,2.399531,8.388542,-9.848807,8.165836,8.182059,-4.629706,-3.021411,-9.854530,7.475459,3.319804,-8.909186,9.447069,-3.529257,5.411069,-3.747742,8.593142,8.322868,6.562325,3.039286,8.835302,-1.230448,-1.391901,3.658153,1.472629,0.111196,5.091910,6.753232,3.589481,-7.208165,-4.028076,4.718908,7.989917,-1.482716,-2.425708,0.598706,9.272708,2.358169,-6.732311,-8.171076,9.169455,-7.991053,8.535816,-3.182507,-0.356012,8.659023,3.866218], dtype = "float32")#candidate|4753|(60,)|const|float32
const_4754 = relay.const([-6.356762,4.376763,-9.902346,8.943139,8.827231,-1.462714,-9.692931,0.517137,2.736996,-3.375337,-1.333262,-8.158798,-5.976412,-9.451407,-4.319554,0.794594,-5.374491,-8.459430,1.977370,-9.755432,1.255299,-4.284803,7.269718,4.218161,9.924703,-2.253000,2.162864,8.094043,8.540033,1.283231,8.126723,-9.100139,3.193132,-9.145294,3.538688,9.610203,-6.425056,-4.401410,0.581870,-4.939200,1.486770,-9.549090,4.383552,7.584630,-2.951390,-6.497628,6.481056,6.538832,5.425679,-5.386028,-9.469068,4.914757,6.191120,7.158120,6.496648,8.141754,-8.946509,8.785564,9.958351,3.306701,1.317289,0.671067,-8.679055,9.180115,-4.990390,-4.419944,9.432815,8.877376,7.402595,2.581512,-8.413273,-0.458495,1.905089,5.124862,-4.048026,-4.387903,-3.947962,-7.026391,-7.320148,6.948224,7.243053,-6.765445,4.290621,4.131492,-3.393338,-8.367071,9.788306,6.962031,-5.087395,9.417860,7.092664,9.617692,5.896407,0.501020,4.170230,3.766914,-0.597417,-7.273342,9.768231,6.786872,-3.687942,3.863814,-6.403640,-2.403802,5.063572,9.300268,5.578242,-4.161507,-9.602633,1.627784,-0.938813,0.546954,-3.188851,2.494123,6.274247,4.791574,-4.640154,-7.108020,9.328802,1.546392,-5.239098,-9.510560,9.712196,9.642301,-9.353613,-8.020716,2.425913,7.648566,4.791538,2.951862,1.320845,-8.657213,4.057454,-0.658207,-1.912780,8.889546,-5.555861,-9.484999,0.822830,-1.824101,-5.102598,-6.721706,-6.486743,0.939950,-0.766498,-5.590626,3.188510,8.684664,0.336688,-2.261594,-7.764328,7.658585,2.622482,-3.729440,9.818253,-4.683053,4.902802,4.269386,-5.360900,4.581923,8.554185,6.899346,4.156353,-0.916341,-4.414344,-1.698478,-4.528087,-5.757135,6.718974,-2.758583,4.399438,4.212011,-6.713411,-3.732400,1.638233,0.937643,1.290022,-4.220213,-8.166353,-4.456862,6.592404,7.151463,-7.519549,4.834258,-3.761192,-7.879379,-7.733636,9.697506,-8.288082,4.696804,7.084734,-8.068246,8.087522,6.002995,5.864913,9.343602,-9.124397,3.945130,-4.890914,7.633840,-2.085473,-6.888208,2.142332,8.249057,0.675704,4.729102,-1.563614,6.248009,-5.378753,5.439774,-3.451779,-2.207701,4.670725,0.584623,-9.676825,-6.614309,-1.982994,2.088562,-1.884703,6.931064,-2.859649,3.369671,1.944899,-9.625970,0.705385,3.318566,-8.602902,1.520836,0.612879,5.090660,8.336564,3.909899,-9.541265,8.197155,5.228020,-6.950280,6.472570,-6.142745,1.646207,8.949962,-0.609668,-3.145831,-4.927810,-5.455171,5.291023,-1.447959,-8.748094,-6.285778,-7.268702,4.541192,0.611942,4.324678,0.368730,5.126473,3.130839,-1.215801,1.513703,-9.495543,-4.805219,-1.244121,9.496435,-8.465161,-2.439242,-9.547270,-6.811081,-4.506460,-4.457852,-1.914267,-4.073931,-6.495681,-2.497536,8.233871,3.953876,-0.964113,7.217371,8.958667,7.379333,-9.484938,8.193556,-2.929620,-2.523304,6.878900,2.705514,5.960660,0.106224,1.438958,-2.144052,6.157534,-7.060275,8.260800,-6.213922,-3.785738,-2.483501,8.716460,-3.695213,5.130912,6.610421,5.767272,-3.203345,-2.283338,-4.717303,-6.870131,-7.345066,-9.932249,6.290768,-2.987157,9.697221,6.241395,2.319285,8.943200,-6.923702,5.909079,8.913765,-5.669296,0.271972,0.491415,-7.286909,-0.090037,3.382409,-6.400052,-6.990281,2.343984,9.063583,8.665087,0.283317,-4.114141,1.444987,3.063462,-0.114200,-4.667357,-1.268400,6.490407,0.203354,-3.375887,0.293221,6.621033,3.391221,0.159222,1.488460,-3.067488,0.707860,8.141628,-8.339813,4.748834,-0.580258,-0.314658,5.725266,-8.355424,8.378638,4.555025,0.706981,-6.645184,4.780422,0.634367,-8.169745,-9.275976,8.213416,-8.882101,-0.947194,-8.809953,2.870853,-2.399456,7.125100,-1.395369,7.654603,9.135911,-4.590232,7.696507,9.604853,4.962916,-5.619201,1.739443,6.449350,8.055664,2.045809,-3.817431,-2.335835,1.172003,8.997395,-4.195641,1.587349,2.705584,3.134990,-1.846021,-0.533706,-0.544195,2.523543,-4.201778,7.534630,-9.908717,4.153526,-5.314143,5.404394,4.970277,0.123553,5.623906,6.990062,-0.347129,-0.667352,7.340506,-7.889494,6.116997,3.395262,-1.110457,-1.385208,9.258292,-8.105774,7.234568,0.544242,-4.679905,6.447119,-4.110001,1.023037,3.292931,1.621454,-3.778515,3.306057,2.979265,6.664333,8.624755,-1.526644,3.929733,-4.119709,9.645180,-5.146945,-3.511645,6.484971,-0.192582,-9.904981,-6.960481,4.291992,0.465136,6.805614,3.383863,7.391319,-0.848517,-8.472879,-6.683012,-2.381121,-2.970780,9.670164,-5.081028,7.751678,6.316457,7.403332,2.476508,-4.459613,8.515339,2.139872,-6.335403,1.664245,0.773856,9.723326,9.363530,9.738845,-1.264387,-2.945060,7.815491,2.350277,1.243347,3.382994,2.447916,-8.501007,4.279585,-2.951756,-0.824000,-1.778279,5.841165,2.192422,9.820094,-0.566170,8.015449,7.208439,7.701757,-8.931777,9.273873,0.160380,4.352350,8.888887,-7.962920,0.010595,2.625661,-9.053488,6.105037,2.095015,-9.594332,-9.405729,6.628620,-8.787687,-3.192937,5.155485,-0.006632,8.400782,-2.894196,-0.966898,-0.146054,9.591209,8.296470,-2.556777,7.062379,-5.154441,3.277866,-8.978044,-4.268411,5.311400,5.524034,-7.654015,-4.348211,3.425887,-2.161191,6.545080,2.881110,-5.968202,-9.656565,1.521408,8.814476,7.967302,-1.124735,3.562408,-4.758073,-2.769719,2.488511,-8.525486,-8.345801,7.686684,3.903720,1.716385,8.526089,-7.456347,-2.500187,-9.382548,6.280860,-7.323494,9.897132,-4.171787,4.865857,6.065024,2.910756,-5.926462,5.267251,-3.039429,-0.071708,-6.003460,0.770812,7.049502,-3.324912,5.789790,6.799432,-0.950444,3.444088,-5.494448,0.769126,-8.289662,2.910695,-8.593650,-8.242554,-7.091911,-7.791181,-7.497003,8.528979,4.906273,7.950692,6.228082,-1.079420,7.116780,-9.665144,-2.370787,7.402820,-4.592256,9.655401,-7.566830,7.687442,-7.843256,5.356570,3.644115,-1.025138,-8.378509,-6.774492,-4.538868,9.847977,-9.846867,-9.176373,8.339561,6.223879,-4.905888,-6.463246,-4.588666,7.617793,7.171700,-1.474987,3.804991,4.316610,-2.144073,9.876048,4.563112,6.987751,-3.811193,-7.689946,9.062494,8.749429,8.450346,-3.387308,5.389937,-7.194829,-2.684087,-5.760370,-7.790779,-8.267795,4.701136,8.047713,-5.359128,-7.117077,-5.584953,5.242663,1.508784,-7.840289,-5.980690,-5.569089,-6.759659,1.540970,6.007018,5.328983,9.814773,5.803547,6.727191,6.307213,1.847585,3.504316,1.978809,2.988357,3.501978,9.813411,7.578842,-3.557403,-4.603744,-5.454889,1.453361,7.270536,9.904245,5.574372,-0.372383,9.640556,-2.388361,1.467391,4.335252,-1.467806,-6.983059,-5.008974,-6.323258,-3.892984,-8.953900,-9.128337,-9.809375,9.410622,-6.142831,-7.751100,1.501546,-9.868384,-2.032840,2.209720,6.490712,1.724452,1.723952,0.127978,-4.727986,1.611315,-8.825907,-6.591981,5.649673,2.156079,-7.428943,-4.932932,9.436129,9.848731,4.402171,7.283956,2.183077,-2.872735,-9.760788,-2.080446,0.535187,-1.752963,2.588876,-9.403982,-2.378091,8.801909,-4.253293,-2.880636,-5.107225,3.808430,0.770343,-4.651144,3.180339,6.623940,-9.670476,-5.749937,4.246998,-6.922791,1.310129,-6.374263,-4.580316,-0.608828,7.371373,-5.431600,7.117306,5.128607,-7.224726,0.854896,5.253986,6.025880,-6.764954,0.086662,-5.391551,-1.121820,6.190060,8.264721,-4.327021,-6.341183,0.719938,-8.376835,-2.653454,0.696441,8.566481,4.656530,0.723614,2.257490,-5.213907,-7.348569,-5.070871,4.226698,2.643555,1.177897,-2.678495,8.882327,-3.124494,-9.015548,-8.178042,3.324367,-9.074814,-5.949398,0.292294,1.865208,-6.798144,0.927261,8.818211,-0.634806,6.921601,-3.050868,6.393130,2.189194,7.299487,5.174014,2.252656,-2.340211,0.169091,-3.641923,-2.634338,-4.605790,0.365716,2.443181,-9.101730,2.850687,8.508045,-0.639824,7.525542,-3.684497,1.668594,-0.234990,-5.723256,4.556687,8.592486,-7.948518,0.481963,3.382909,-9.667763,7.456002,-0.965445,8.813912,0.723216,4.073756,0.472263,7.264023,0.063105,-7.331928,-3.183950,9.444869,7.558441,2.890681,-5.652898,6.354246,4.927086,-8.188309,9.528588,7.387439,5.234249,3.477014,-5.788785,6.654488,4.456787,4.020874,9.482596,5.621222,2.866580,-8.657159,6.822187,-2.756109,-9.927847,0.482160,-9.406811,-7.883161,4.381110,9.881461,2.641121,7.384289,-8.591497,-0.029212,0.535208,-3.005084,3.145721,-1.749930,-3.870031,7.838288,2.905983,-2.195276,-9.925203,0.455641,-6.392617,6.855410,-5.245195,-6.392986,-9.350632,-3.526828,7.013649,-2.413403,3.635325,7.100564,7.183876,1.292024,6.417639,6.932782,-5.387072,3.765729,0.324592,-4.349174,6.890206,-9.727442,-4.700075,6.001187,2.042622,-0.116693,1.521249,-4.388133,-2.999217,8.270778,7.234169,5.609757,-7.496725,-8.696337,-5.240663,6.625445,-7.753634,4.636818,-5.252620,-8.075582], dtype = "float64")#candidate|4754|(864,)|const|float64
var_4755 = relay.var("var_4755", dtype = "float64", shape = (1134,))#candidate|4755|(1134,)|var|float64
var_4756 = relay.var("var_4756", dtype = "float64", shape = (6,))#candidate|4756|(6,)|var|float64
const_4757 = relay.const(-4, dtype = "int16")#candidate|4757|()|const|int16
call_4752 = relay.TupleGetItem(func_2788_call(relay.reshape(const_4753.astype('float32'), [3, 2, 10]), relay.reshape(uop_4737.astype('int16'), [1, 468]), relay.reshape(const_4754.astype('float64'), [864,]), relay.reshape(var_4755.astype('float64'), [567, 2]), relay.reshape(const_4753.astype('float32'), [3, 2, 10]), relay.reshape(var_4756.astype('float64'), [6,]), relay.reshape(const_4757.astype('int16'), []), ), 1)
call_4758 = relay.TupleGetItem(func_2797_call(relay.reshape(const_4753.astype('float32'), [3, 2, 10]), relay.reshape(uop_4737.astype('int16'), [1, 468]), relay.reshape(const_4754.astype('float64'), [864,]), relay.reshape(var_4755.astype('float64'), [567, 2]), relay.reshape(const_4753.astype('float32'), [3, 2, 10]), relay.reshape(var_4756.astype('float64'), [6,]), relay.reshape(const_4757.astype('int16'), []), ), 1)
output = relay.Tuple([uop_4737,uop_4740,call_4752,const_4753,const_4754,var_4755,var_4756,const_4757,])
output2 = relay.Tuple([uop_4737,uop_4740,call_4758,const_4753,const_4754,var_4755,var_4756,const_4757,])
func_4768 = relay.Function([var_4736,var_4755,var_4756,], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4768_call = mutated_mod.get_global_var('func_4768')
var_4770 = relay.var("var_4770", dtype = "float64", shape = (6, 6, 13))#candidate|4770|(6, 6, 13)|var|float64
var_4771 = relay.var("var_4771", dtype = "float64", shape = (1134,))#candidate|4771|(1134,)|var|float64
var_4772 = relay.var("var_4772", dtype = "float64", shape = (6,))#candidate|4772|(6,)|var|float64
call_4769 = func_4768_call(var_4770,var_4771,var_4772,)
output = call_4769
func_4773 = relay.Function([var_4770,var_4771,var_4772,], output)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5063 = relay.var("var_5063", dtype = "uint16", shape = ())#candidate|5063|()|var|uint16
var_5064 = relay.var("var_5064", dtype = "uint16", shape = (10, 11, 3))#candidate|5064|(10, 11, 3)|var|uint16
bop_5065 = relay.greater(var_5063.astype('bool'), var_5064.astype('bool')) # shape=(10, 11, 3)
func_4349_call = mod.get_global_var('func_4349')
func_4354_call = mutated_mod.get_global_var('func_4354')
var_5072 = relay.var("var_5072", dtype = "float32", shape = (156, 1))#candidate|5072|(156, 1)|var|float32
var_5073 = relay.var("var_5073", dtype = "float64", shape = (455,))#candidate|5073|(455,)|var|float64
const_5074 = relay.const([-9,-7,7,-1,-6,-4,-5,-4,-9,-3,5,9,-10,-7,3,6,-7,6,-8,-8,9,9,2,5,4,10,7,5,4,-2,7,1,-1,-9,-6,-5,-9,-9,8,4,-3,-3,4,8,9,-8,-7,2,8,9,8,-6,-6,10,10,8,-8,2,1,3,9,6,-10,6,-10,1,8,-9,-4,-10,4,-8,9,6,1,9,1,-7,-6,1,7,7,1,10,4,-2,8,-1,-1,8,-8,-1,4,10,-3,7,-2,7,-8,-1,-9,-3,4,-7,-2,-6,-3,9,-6,-7,-9,3,9,-9,9,3,4,8,-1,2,9,4,-4,9,-2,-3,3,6,-7,10,4,7,-9,-5,-9,4,6,2,-10,4,-7,7,-4,-9,6,9,3,10,-1,2,4,8,3,10,10,7,10,5,-5,-4,-8,-2,9,2,-7,-7,-10,10,6,-7,3,-4,-8,-8,-5,-5,-3,3,9,1,-10,8,5,3,10,-6,4,8,8,6,-6,6,1,3,-7,-7,-3,8,3,-9,-1,-5,-4,-8,9,-8,8,6,7,9,-6,-10,-1,6,10,-4,10,-6,2,-9,-2,6,4,9,-5,-3,7,9,2,10,3,-2,5,9,4,10,6,-7,-2,-10,-9,8,-8,1,-6,-1,9,10,-1,-3,7,-4,1,-3,-10,-2,10,4,-8,-10,-8,-1,-4,10,2,-4,-9,1,-10,5,-1,-8,6,9,-6,8,9,8,-2,1,-4,-2,1,-4,-2,-2,5,-2], dtype = "int8")#candidate|5074|(288,)|const|int8
call_5071 = relay.TupleGetItem(func_4349_call(relay.reshape(var_5072.astype('float32'), [12, 13]), relay.reshape(var_5072.astype('float32'), [12, 13]), relay.reshape(var_5073.astype('float64'), [455,]), relay.reshape(const_5074.astype('int8'), [288,]), ), 5)
call_5075 = relay.TupleGetItem(func_4354_call(relay.reshape(var_5072.astype('float32'), [12, 13]), relay.reshape(var_5072.astype('float32'), [12, 13]), relay.reshape(var_5073.astype('float64'), [455,]), relay.reshape(const_5074.astype('int8'), [288,]), ), 5)
output = relay.Tuple([bop_5065,call_5071,var_5072,var_5073,const_5074,])
output2 = relay.Tuple([bop_5065,call_5075,var_5072,var_5073,const_5074,])
func_5082 = relay.Function([var_5063,var_5064,var_5072,var_5073,], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mutated_mod.get_global_var('func_5082')
var_5084 = relay.var("var_5084", dtype = "uint16", shape = ())#candidate|5084|()|var|uint16
var_5085 = relay.var("var_5085", dtype = "uint16", shape = (10, 11, 3))#candidate|5085|(10, 11, 3)|var|uint16
var_5086 = relay.var("var_5086", dtype = "float32", shape = (156, 1))#candidate|5086|(156, 1)|var|float32
var_5087 = relay.var("var_5087", dtype = "float64", shape = (455,))#candidate|5087|(455,)|var|float64
call_5083 = func_5082_call(var_5084,var_5085,var_5086,var_5087,)
output = call_5083
func_5088 = relay.Function([var_5084,var_5085,var_5086,var_5087,], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5154 = relay.var("var_5154", dtype = "float32", shape = (6, 4, 9))#candidate|5154|(6, 4, 9)|var|float32
var_5155 = relay.var("var_5155", dtype = "float32", shape = (6, 4, 9))#candidate|5155|(6, 4, 9)|var|float32
bop_5156 = relay.add(var_5154.astype('float32'), relay.reshape(var_5155.astype('float32'), relay.shape_of(var_5154))) # shape=(6, 4, 9)
func_5082_call = mod.get_global_var('func_5082')
func_5088_call = mutated_mod.get_global_var('func_5088')
var_5165 = relay.var("var_5165", dtype = "uint16", shape = ())#candidate|5165|()|var|uint16
const_5166 = relay.const([[8],[8],[2],[-10],[-7],[-9],[-4],[-4],[9],[-4],[-7],[3],[2],[3],[-10],[5],[-6],[-6],[3],[3],[8],[-6],[4],[-3],[10],[-6],[-4],[2],[9],[-10],[-10],[-6],[5],[9],[7],[7],[5],[-2],[-7],[-3],[-4],[4],[6],[-4],[3],[3],[-6],[-2],[-3],[1],[4],[-7],[-5],[-7],[4],[9],[-7],[-4],[1],[9],[1],[-7],[-2],[-1],[3],[-5],[4],[-3],[3],[-3],[-8],[-2],[5],[1],[5],[10],[-3],[-6],[8],[-2],[-9],[-6],[-10],[-4],[-9],[-7],[7],[-5],[7],[-8],[5],[10],[-5],[-4],[4],[-5],[-2],[-8],[2],[-5],[-8],[1],[6],[-10],[1],[7],[8],[-5],[-6],[7],[5],[-2],[5],[-1],[-3],[9],[3],[-1],[-3],[1],[-10],[9],[6],[10],[-2],[-1],[-9],[6],[-5],[10],[-7],[3],[6],[-6],[4],[-4],[-6],[2],[-6],[3],[9],[7],[-6],[-1],[-3],[-3],[7],[-8],[-10],[3],[-4],[8],[-9],[-1],[1],[7],[9],[-8],[-10],[-8],[-8],[-1],[6],[2],[-6],[2],[2],[-9],[10],[-10],[-5],[1],[-2],[8],[9],[-4],[8],[-4],[5],[-2],[10],[2],[-4],[5],[-2],[-5],[3],[-2],[6],[-6],[8],[2],[5],[10],[-3],[-2],[6],[5],[6],[2],[-6],[-4],[2],[5],[-6],[4],[2],[9],[3],[9],[2],[9],[9],[6],[5],[-1],[4],[3],[3],[-5],[-10],[4],[7],[1],[-3],[-6],[-4],[-10],[10],[-6],[5],[-9],[7],[8],[-9],[-1],[-4],[-10],[8],[-8],[2],[5],[10],[10],[-3],[-6],[-6],[-9],[4],[-4],[-10],[3],[10],[2],[-5],[-9],[8],[-4],[9],[-8],[-10],[3],[7],[10],[-9],[6],[9],[-3],[3],[9],[10],[4],[3],[-6],[-9],[7],[7],[7],[1],[-7],[4],[-2],[-3],[2],[-4],[3],[-8],[-2],[2],[-3],[2],[-4],[9],[-3],[1],[-5],[-3],[7],[-3],[1],[9],[-1],[-8],[8],[-1],[-5],[-3],[10],[-10],[-4],[-4],[7],[-5],[-3],[-3],[-4],[-10],[-1],[-8],[-10],[-2],[-1],[-6],[8],[-5],[9],[3],[-7],[10],[7]], dtype = "uint16")#candidate|5166|(330, 1)|const|uint16
var_5167 = relay.var("var_5167", dtype = "float32", shape = (1, 156))#candidate|5167|(1, 156)|var|float32
var_5168 = relay.var("var_5168", dtype = "float64", shape = (455,))#candidate|5168|(455,)|var|float64
call_5164 = relay.TupleGetItem(func_5082_call(relay.reshape(var_5165.astype('uint16'), []), relay.reshape(const_5166.astype('uint16'), [10, 11, 3]), relay.reshape(var_5167.astype('float32'), [156, 1]), relay.reshape(var_5168.astype('float64'), [455,]), ), 1)
call_5169 = relay.TupleGetItem(func_5088_call(relay.reshape(var_5165.astype('uint16'), []), relay.reshape(const_5166.astype('uint16'), [10, 11, 3]), relay.reshape(var_5167.astype('float32'), [156, 1]), relay.reshape(var_5168.astype('float64'), [455,]), ), 1)
uop_5179 = relay.acos(var_5167.astype('float32')) # shape=(1, 156)
output = relay.Tuple([bop_5156,call_5164,var_5165,const_5166,var_5168,uop_5179,])
output2 = relay.Tuple([bop_5156,call_5169,var_5165,const_5166,var_5168,uop_5179,])
func_5181 = relay.Function([var_5154,var_5155,var_5165,var_5167,var_5168,], output)
mod['func_5181'] = func_5181
mod = relay.transform.InferType()(mod)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5181_call = mutated_mod.get_global_var('func_5181')
var_5183 = relay.var("var_5183", dtype = "float32", shape = (6, 4, 9))#candidate|5183|(6, 4, 9)|var|float32
var_5184 = relay.var("var_5184", dtype = "float32", shape = (6, 4, 9))#candidate|5184|(6, 4, 9)|var|float32
var_5185 = relay.var("var_5185", dtype = "uint16", shape = ())#candidate|5185|()|var|uint16
var_5186 = relay.var("var_5186", dtype = "float32", shape = (1, 156))#candidate|5186|(1, 156)|var|float32
var_5187 = relay.var("var_5187", dtype = "float64", shape = (455,))#candidate|5187|(455,)|var|float64
call_5182 = func_5181_call(var_5183,var_5184,var_5185,var_5186,var_5187,)
output = call_5182
func_5188 = relay.Function([var_5183,var_5184,var_5185,var_5186,var_5187,], output)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5318 = relay.var("var_5318", dtype = "float32", shape = (7, 6, 5))#candidate|5318|(7, 6, 5)|var|float32
uop_5319 = relay.log10(var_5318.astype('float32')) # shape=(7, 6, 5)
func_3506_call = mod.get_global_var('func_3506')
func_3508_call = mutated_mod.get_global_var('func_3508')
var_5332 = relay.var("var_5332", dtype = "float64", shape = (1350,))#candidate|5332|(1350,)|var|float64
call_5331 = relay.TupleGetItem(func_3506_call(relay.reshape(var_5332.astype('float64'), [6, 15, 15])), 0)
call_5333 = relay.TupleGetItem(func_3508_call(relay.reshape(var_5332.astype('float64'), [6, 15, 15])), 0)
output = relay.Tuple([uop_5319,call_5331,var_5332,])
output2 = relay.Tuple([uop_5319,call_5333,var_5332,])
func_5334 = relay.Function([var_5318,var_5332,], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
var_5335 = relay.var("var_5335", dtype = "float32", shape = (7, 6, 5))#candidate|5335|(7, 6, 5)|var|float32
var_5336 = relay.var("var_5336", dtype = "float64", shape = (1350,))#candidate|5336|(1350,)|var|float64
output = func_5334(var_5335,var_5336,)
func_5337 = relay.Function([var_5335,var_5336,], output)
mutated_mod['func_5337'] = func_5337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5556 = relay.var("var_5556", dtype = "int64", shape = (15, 15, 9))#candidate|5556|(15, 15, 9)|var|int64
var_5557 = relay.var("var_5557", dtype = "int64", shape = (15, 15, 9))#candidate|5557|(15, 15, 9)|var|int64
bop_5558 = relay.maximum(var_5556.astype('int64'), relay.reshape(var_5557.astype('int64'), relay.shape_of(var_5556))) # shape=(15, 15, 9)
output = bop_5558
output2 = bop_5558
func_5562 = relay.Function([var_5556,var_5557,], output)
mod['func_5562'] = func_5562
mod = relay.transform.InferType()(mod)
var_5563 = relay.var("var_5563", dtype = "int64", shape = (15, 15, 9))#candidate|5563|(15, 15, 9)|var|int64
var_5564 = relay.var("var_5564", dtype = "int64", shape = (15, 15, 9))#candidate|5564|(15, 15, 9)|var|int64
output = func_5562(var_5563,var_5564,)
func_5565 = relay.Function([var_5563,var_5564,], output)
mutated_mod['func_5565'] = func_5565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5654 = relay.var("var_5654", dtype = "int64", shape = (9, 11, 3))#candidate|5654|(9, 11, 3)|var|int64
const_5655 = relay.const([[[9,-5,-1],[4,-5,8],[3,-1,7],[8,-9,-1],[2,-4,-5],[-9,7,9],[-4,-2,4],[-7,3,-3],[7,-4,2],[-5,5,3],[2,-6,8]],[[9,-10,3],[10,-10,7],[-7,9,-9],[9,7,-7],[3,4,8],[-7,-4,-7],[-1,-6,-10],[-8,-7,8],[-8,-4,-10],[5,8,-3],[1,-3,-6]],[[-1,-7,-10],[2,-6,3],[-7,-3,-5],[-9,6,-2],[-6,-8,-10],[-9,-1,-10],[5,-1,10],[-7,6,-7],[-4,-3,-6],[9,10,8],[2,-2,6]],[[-8,-3,4],[-2,2,2],[10,6,6],[6,1,-5],[-5,10,1],[-9,-9,-7],[-10,5,-8],[-1,-4,-2],[10,-6,-6],[-4,7,8],[10,-9,2]],[[1,7,-3],[-2,5,-5],[6,7,-8],[4,-3,6],[1,9,-4],[-5,4,-2],[1,3,-1],[5,6,1],[4,-6,6],[-8,-7,-6],[9,-7,-7]],[[2,-2,-4],[-5,-10,8],[5,-5,-8],[-4,-10,3],[-1,7,-7],[-6,2,4],[-10,-4,2],[-2,-3,9],[-9,-8,-3],[5,7,-3],[-8,-3,-6]],[[6,-8,8],[2,6,-8],[9,-7,8],[-1,-3,7],[-3,4,5],[7,-9,2],[6,9,1],[8,-9,-10],[4,-2,-10],[-4,3,-10],[-9,2,1]],[[-7,-9,-10],[8,-2,-2],[5,-4,2],[5,-6,5],[9,-3,4],[-6,-3,-9],[-7,9,-5],[-2,7,-7],[-9,-7,1],[10,-6,2],[9,2,2]],[[4,-10,9],[-4,-6,-8],[-1,3,1],[-8,5,-4],[-3,-6,-4],[6,-10,-1],[-4,1,-5],[10,5,4],[9,-6,5],[3,2,4],[-8,6,-9]]], dtype = "int64")#candidate|5655|(9, 11, 3)|const|int64
bop_5656 = relay.bitwise_xor(var_5654.astype('int64'), relay.reshape(const_5655.astype('int64'), relay.shape_of(var_5654))) # shape=(9, 11, 3)
output = bop_5656
output2 = bop_5656
func_5664 = relay.Function([var_5654,], output)
mod['func_5664'] = func_5664
mod = relay.transform.InferType()(mod)
var_5665 = relay.var("var_5665", dtype = "int64", shape = (9, 11, 3))#candidate|5665|(9, 11, 3)|var|int64
output = func_5664(var_5665)
func_5666 = relay.Function([var_5665], output)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5818 = relay.const([[[-6.263715,8.848442,7.277128,5.380652,3.033063,-2.318274,7.499314,4.237761,4.560436,-1.354592,-1.743616,3.599059,2.128052],[3.080133,8.351099,-3.712242,9.529178,-3.418207,-8.620219,4.810734,0.867970,-0.676900,9.135498,-3.591348,6.078410,-6.009737],[9.604937,8.084810,-5.229607,9.154055,8.523029,2.401733,5.813798,1.983215,6.223149,-6.882964,5.876818,0.538766,-5.656940],[6.088208,-2.706911,4.556237,3.371952,-3.031790,8.153691,9.967813,8.876790,4.869153,8.630448,4.319340,7.526962,0.357519],[-7.456051,-6.350254,-0.721558,5.634405,2.468916,-2.091188,6.814843,-9.749439,-7.256869,3.214431,-6.241609,-5.764693,8.101654],[3.019596,1.434348,2.458903,3.224150,-8.154157,3.418033,8.424796,-7.562169,-1.450014,-7.558615,0.027654,-2.283270,5.687834]],[[1.290357,-1.168104,8.132183,-6.902824,-7.198374,-5.742467,0.867457,8.117688,-0.739265,1.057102,-3.703798,-0.981240,3.153243],[6.844874,-1.721648,-2.272945,8.829678,2.693596,-2.947597,5.810835,7.777071,4.715897,1.086390,-4.605946,0.997450,-2.973357],[1.067325,-8.978699,-8.654939,-0.079664,-0.652146,9.046925,-4.170276,-7.999900,-4.473587,0.873074,-8.189412,-0.862635,-2.862025],[3.604823,-5.156382,8.345162,2.672193,-9.613567,-3.290786,-4.886409,-9.709758,-0.935476,-6.694664,6.051982,-8.905929,7.886663],[8.031716,-6.199240,-9.538442,6.408786,-2.954682,-8.075814,7.899044,2.974505,0.627400,-1.990153,0.259918,-4.153689,-4.801764],[-8.913013,7.788450,0.472651,4.049121,-6.143241,4.017690,3.844090,-4.247062,5.590555,-7.723625,9.806401,7.345019,6.741217]],[[-5.379120,-3.211808,-8.841352,-2.065314,-6.975873,-8.726582,0.880795,8.119902,6.439641,-5.635963,-6.572496,1.970240,2.948028],[9.924859,-7.823979,3.049733,-5.512908,5.006719,0.357894,-9.375050,5.422376,2.961911,8.303172,-0.524608,6.567491,5.412951],[-4.992753,0.506210,3.891251,-6.370974,3.055362,6.146128,-1.880310,-3.085033,-3.368369,4.438104,-1.908639,-3.859179,-3.298988],[-4.503451,-3.262931,6.584641,-7.928891,-9.590851,8.809697,9.781567,-6.778993,2.536923,-9.270961,-7.235295,-7.069143,-0.131209],[0.498185,7.137321,6.250124,8.776179,4.017221,4.473516,1.276221,8.583234,-7.373279,-6.021338,1.500959,1.068711,3.426723],[-8.193576,-7.503042,-8.225497,-5.614558,9.442123,9.432763,8.739158,2.053651,-5.155254,-4.530167,-4.873709,7.657097,9.623970]],[[-1.065154,-6.820689,2.000877,5.954326,7.126855,3.041177,0.833577,-5.273749,7.081698,7.607315,-4.598309,-5.560196,-0.418548],[1.928015,2.970613,-4.274266,-8.567545,7.897157,-2.648725,5.116379,9.817483,5.902637,1.748541,7.992669,8.226415,9.807329],[5.490883,-9.641132,-0.704755,1.363661,-7.920281,3.700029,-3.135461,-5.388393,-5.339822,-6.789886,-1.111627,-8.362575,3.208329],[8.042920,5.339548,-9.020907,-7.113877,-8.996696,2.461743,-9.999128,0.580545,-8.180836,-0.406774,-9.279848,-0.739640,-9.267235],[-1.785341,-3.850093,4.150962,-7.637355,-6.305893,7.129680,5.054041,-3.725510,8.645338,1.381091,-3.926295,-2.134560,-9.843190],[8.754937,8.089053,-9.248349,5.749598,-5.029391,-3.714685,8.885589,5.516612,3.719764,-3.247150,0.703890,-9.535251,-6.678064]],[[-7.292621,3.016396,-7.231854,3.289452,4.098558,4.672388,-9.123851,2.184372,4.202167,-6.660357,9.560497,8.179338,9.428535],[5.635016,0.261880,-5.630670,-3.657077,5.604880,6.226475,-4.529103,-9.420718,8.179632,7.256397,8.446507,7.229683,-9.009616],[6.956367,-2.131283,-3.096443,-7.965433,6.748498,-8.485031,-9.794367,-3.289069,-2.599786,-0.711406,0.219033,-1.242228,-3.001253],[8.988454,5.907362,-7.723720,2.632553,6.926043,-6.771324,-0.566151,-0.494838,6.990393,-6.216097,-9.748301,1.037381,4.383161],[-6.307836,3.657218,8.138184,-2.692848,-3.647598,0.859978,5.176428,-4.673733,-1.257690,-7.514977,5.192215,0.285321,4.279480],[-2.759056,1.690742,2.810432,3.971842,-8.630573,3.636369,5.225784,-4.714829,-9.054529,2.007831,8.798481,1.466091,4.723269]],[[-2.025064,-3.473952,-1.042936,-4.108542,-6.134284,-2.976876,-2.612373,-3.400248,5.693756,-2.512223,-2.392908,-1.525557,5.142987],[7.498678,7.031385,8.158719,4.539646,1.191783,-1.902254,6.461152,-3.259504,3.650904,7.398907,-3.407580,6.068065,-4.332603],[3.501373,-7.579168,-5.754638,9.725336,-6.669620,0.426159,-6.735806,9.340039,-8.235764,4.340233,-1.482289,-5.437599,-4.541643],[5.590263,8.839993,0.725473,-4.238208,9.327983,6.387229,-9.358799,8.559142,-6.014954,-8.412587,-1.833274,-0.706496,8.677850],[-5.114859,-7.598729,3.665265,4.724729,1.831987,7.320324,-3.933847,9.091983,-6.744738,7.260674,7.280606,9.012620,3.881510],[8.322602,-5.854232,6.308549,-1.379791,8.404975,0.550544,-5.004886,-3.275952,-3.351797,-4.553002,-0.615387,7.789173,-2.359108]],[[3.190672,-6.156457,1.651261,0.526051,1.471372,1.730635,-8.889120,9.245032,5.202357,4.509530,9.182561,-7.237606,1.252136],[-2.675313,-8.343396,1.074233,0.500211,-2.713780,2.222346,-3.848827,-9.994901,-2.516073,-7.190070,-8.316192,7.018710,7.091414],[3.379263,-6.221613,4.149037,4.413148,8.828056,0.085727,2.648633,-8.419687,9.087191,0.841548,-5.219174,9.233148,2.964378],[-9.485392,2.453126,8.027547,5.961251,7.857000,9.094715,-5.790953,6.565262,9.483245,3.646525,-5.581507,-1.167993,1.838206],[5.651257,0.313886,-8.700570,-9.575757,-6.964984,6.988466,0.913947,-2.101173,3.511945,-4.318200,-1.370176,0.689508,7.409844],[7.566544,0.040314,-5.138557,0.299790,5.385973,4.942199,0.272790,-8.736652,8.922084,5.968547,-3.625956,-4.708740,6.067508]],[[-1.356530,-3.248674,-7.980867,4.733531,-6.603644,9.215333,6.313278,-7.377163,-3.261058,-3.861148,-1.905923,-0.578179,3.440803],[-5.931521,0.763543,9.932400,5.269735,5.528477,6.293720,5.099018,-1.557391,6.770194,-2.657300,-5.254559,5.675648,8.576638],[-5.512572,8.188239,-9.617752,9.907584,2.729295,2.497322,2.512770,7.219642,1.016249,-4.957817,4.127352,5.858800,7.209030],[-6.956646,4.246201,-5.310102,8.357930,0.305934,-6.245748,-8.595656,0.550725,-8.455387,-8.572396,3.084148,-7.164471,-0.471298],[7.238166,3.160830,7.311203,0.150371,3.674420,6.067557,7.821386,-6.281354,1.360336,-3.014492,-4.741993,9.745206,-9.244782],[-7.079719,5.413129,-8.043726,4.603135,1.930126,0.280456,3.033719,8.187251,1.574015,5.555100,-0.146992,-8.006819,-5.019122]]], dtype = "float32")#candidate|5818|(8, 6, 13)|const|float32
uop_5819 = relay.sigmoid(const_5818.astype('float32')) # shape=(8, 6, 13)
uop_5832 = relay.sinh(uop_5819.astype('float64')) # shape=(8, 6, 13)
func_2788_call = mod.get_global_var('func_2788')
func_2797_call = mutated_mod.get_global_var('func_2797')
const_5845 = relay.const([[-6.505674,-2.212786,9.439696,8.805072,9.984189,0.690259,4.694283,-7.470963,5.344495,-3.473973,4.363713,9.496433,7.455758,0.186561,-8.750914,-1.371679,2.631774,7.064092,-8.410465,-4.009373],[-7.362541,-8.429037,-7.900867,3.076334,-2.453184,0.969884,8.185196,-9.552364,8.063626,2.853485,-9.956634,-2.190826,-2.153966,-3.524700,-0.730184,-9.520778,-9.175185,3.196553,5.796818,-9.456599],[-9.544585,-4.766471,-2.433828,-8.204948,-5.139295,6.921372,4.328284,-9.966115,1.373322,6.842485,5.581370,8.149946,-6.535343,7.783381,1.337913,4.325969,7.299528,2.207420,-4.584009,2.893866]], dtype = "float32")#candidate|5845|(3, 20)|const|float32
const_5846 = relay.const([[2],[7],[1],[-2],[6],[-6],[-6],[-6],[-1],[2],[-3],[9],[6],[-1],[-8],[3],[-10],[-4],[6],[-4],[9],[-5],[-2],[-5],[8],[-6],[-8],[-5],[1],[-1],[-4],[8],[5],[-7],[-1],[3],[10],[7],[9],[-5],[-7],[9],[8],[-2],[-9],[-7],[-9],[9],[1],[7],[6],[2],[-8],[-7],[10],[5],[5],[-5],[-8],[-1],[3],[-4],[-4],[-10],[-10],[5],[-7],[-1],[5],[-3],[10],[-2],[-1],[-9],[5],[-10],[7],[-3],[-8],[6],[-10],[-1],[9],[3],[9],[-8],[-5],[5],[7],[-9],[-3],[3],[2],[3],[-10],[5],[1],[8],[-9],[3],[-6],[-1],[1],[-9],[2],[-5],[6],[7],[5],[-5],[2],[-7],[-9],[2],[-6],[7],[7],[-5],[4],[9],[1],[-10],[-1],[2],[-10],[10],[-10],[-4],[2],[6],[-4],[9],[1],[-8],[-7],[2],[10],[-4],[1],[-4],[4],[3],[-3],[-10],[7],[-2],[-1],[10],[7],[8],[6],[4],[9],[4],[6],[3],[6],[-4],[4],[-3],[-2],[-10],[7],[4],[10],[10],[9],[10],[1],[-10],[-4],[9],[-8],[8],[-8],[3],[-5],[2],[2],[4],[9],[8],[7],[8],[3],[-7],[4],[6],[8],[5],[4],[-6],[10],[-1],[-8],[-4],[8],[-7],[-9],[-4],[-4],[9],[8],[9],[3],[4],[2],[6],[-9],[-4],[-3],[-6],[-2],[7],[7],[-4],[-4],[-10],[-2],[10],[4],[3],[-3],[-8],[8],[-1],[-2],[-2],[-9],[6],[2],[-8],[4],[-1],[-6],[-10],[-5],[4],[1],[-2],[8],[10],[2],[4],[2],[-7],[1],[3],[3],[10],[6],[-8],[4],[-1],[-8],[6],[10],[-5],[9],[-6],[-1],[-5],[10],[6],[1],[1],[-9],[-10],[-2],[7],[-8],[5],[-8],[-10],[10],[-8],[-1],[-3],[-9],[2],[-6],[-9],[3],[7],[-4],[5],[-7],[10],[1],[-2],[10],[-1],[-1],[9],[3],[1],[-6],[6],[4],[5],[8],[-10],[10],[-10],[-3],[-1],[-10],[-1],[-7],[2],[4],[1],[8],[7],[3],[-9],[-2],[5],[10],[5],[6],[6],[8],[-9],[-10],[5],[6],[1],[-7],[5],[-2],[10],[3],[8],[-9],[-7],[-6],[-10],[-10],[9],[2],[1],[-4],[-2],[-5],[-1],[-1],[-3],[-4],[-8],[-1],[-7],[5],[5],[-8],[5],[-10],[8],[1],[5],[8],[2],[-6],[-2],[5],[5],[-4],[-7],[4],[4],[6],[-4],[6],[-2],[-3],[-2],[4],[-8],[1],[5],[1],[-2],[-4],[4],[10],[-2],[7],[-3],[-7],[9],[-2],[2],[-7],[8],[-2],[1],[-3],[-8],[5],[5],[-10],[-2],[-2],[-10],[-9],[-10],[10],[-1],[-4],[-4],[-2],[-2],[10],[-1],[2],[10],[4],[8],[6],[6],[9],[-10],[-8],[5],[-8],[10],[3],[-6],[-2],[10],[5],[-7],[-10],[7],[-5],[3],[1],[-2],[-4],[2],[-7],[3],[-4],[5],[-6],[-1],[2],[3],[3],[2],[-3],[3],[-8],[-4],[5],[4],[6],[-1],[6],[6],[2],[-2],[5],[8],[5],[9],[5],[-3]], dtype = "int16")#candidate|5846|(468, 1)|const|int16
var_5847 = relay.var("var_5847", dtype = "float64", shape = (864,))#candidate|5847|(864,)|var|float64
const_5848 = relay.const([9.521647,9.993407,-4.218851,-4.764435,8.778754,9.406348,5.699171,-4.794845,9.017179,0.549668,3.025289,0.681043,4.013857,-0.758188,-4.219122,7.686961,-7.055871,5.601635,-7.573881,4.628534,-6.605242,-6.967988,3.336103,-2.525269,3.210821,-7.680344,4.658840,-4.371807,4.682022,-3.858362,-0.904909,5.880762,-8.133865,0.130757,7.646887,-7.025438,5.186300,5.161709,9.882035,-0.070727,3.466268,7.746246,-2.053731,6.203592,6.861765,6.671798,-3.254119,-3.975342,0.957629,0.805850,-0.307853,-3.990539,-7.939664,3.803037,6.147015,-5.618010,-5.979925,-5.133135,-3.600754,-1.830361,4.263299,7.839798,2.277840,-2.435307,7.212134,9.229491,3.025473,-3.877688,2.724004,3.061328,9.177599,-6.165281,-4.175517,-5.666691,-1.303125,-8.676352,-2.652668,4.991122,9.606415,-0.920734,6.780250,5.802772,-6.248356,9.769014,4.424469,-3.031860,-5.444448,-6.190728,4.795060,9.217505,0.091962,2.935922,6.612833,5.282641,-7.076422,-4.472211,2.741807,-8.348623,8.672237,-1.469200,0.876879,4.984976,1.913406,-3.824938,-6.203301,-6.804521,0.696908,7.427595,1.338729,5.169963,-8.295192,5.081923,6.534111,2.452900,0.904704,8.922532,2.583549,3.861473,-7.449557,0.226188,1.045928,6.005788,-0.119027,-0.914628,2.876935,5.621680,1.043935,-2.942558,4.953870,7.419286,1.786488,3.097266,6.688292,6.928273,-0.051305,-2.541596,-6.908980,-9.026979,-4.188807,-5.422161,-4.785351,3.619087,7.354087,1.261646,-4.305148,8.550513,7.542822,-4.553111,0.870830,2.216513,-4.374919,-6.936881,6.412732,8.715845,8.766476,0.855200,-0.421945,1.545053,-1.542481,-8.188937,6.179798,-2.548985,-0.544962,7.987691,-7.398651,6.971701,-7.060058,-5.023855,-7.261553,4.976516,3.886819,6.722565,5.485380,3.940020,0.943175,-8.307478,-4.926335,-1.888148,5.274553,-5.970792,-4.909486,6.541664,4.646546,-7.762421,1.575860,8.000394,-7.900925,-7.320338,7.322681,-2.892371,8.825100,4.923109,6.826849,-1.027228,8.253299,4.975585,-7.875887,-5.694285,-1.756241,8.491732,-2.391138,-8.680073,-1.134461,8.496588,0.941851,-9.894340,-2.051850,-1.436974,1.881377,0.590919,9.457829,-1.185242,4.965154,-0.310919,4.522052,1.020606,-9.297790,3.892444,7.434348,1.277583,-2.631789,7.654585,7.566903,-4.192205,4.551118,-7.559912,-8.942515,-0.763052,1.776819,4.535155,2.582462,8.604867,6.361180,-2.537891,8.443899,8.112394,1.717134,-0.943016,-4.711239,-2.127423,-6.766542,-4.835131,4.450811,-9.920075,4.046186,-6.939665,7.025012,0.709437,-9.055460,0.655170,8.226501,7.626825,5.711877,4.363220,-9.420008,0.750469,-8.625154,-2.131827,3.653694,3.462167,-6.902449,0.006297,9.371148,-5.215804,-3.838987,5.220908,-1.335388,-4.261050,-3.372460,7.381026,9.241992,-7.386592,0.445936,-7.893630,2.338714,5.418238,0.503721,5.965089,1.427118,-1.696380,7.275135,0.003979,-0.564088,-8.861776,-9.522683,7.390073,-2.086143,8.982507,-9.974537,-4.212345,7.171455,-9.751206,-2.222698,6.848830,6.310065,2.871019,8.295202,8.849998,9.596512,9.920957,7.192368,4.305144,-8.378757,4.837959,-8.656990,-4.402557,-2.196872,-0.207303,7.929312,-1.627653,5.557391,2.089866,0.394312,-5.022570,-7.113500,-0.180395,6.230938,-0.839988,-8.551532,-6.734005,5.909922,8.823970,3.688080,2.833893,4.467513,-9.377405,8.638059,-6.397621,-3.653621,4.581633,-0.712910,-1.181682,-5.847813,6.925933,4.929846,6.852157,-2.239094,-9.816349,3.930002,-6.437722,4.923260,7.768306,1.785092,5.288500,0.907391,-6.190445,-7.500504,1.322179,6.550994,-4.225401,-6.256487,-4.596233,-4.423280,2.841769,-9.169457,-5.545524,-2.272985,-4.071664,4.000882,4.989727,7.383382,-1.917379,-5.192802,-7.925145,-6.024148,-4.786175,-1.358434,-3.223812,7.519751,-8.017449,1.871905,-9.683835,4.709404,1.396700,-0.718993,9.416788,3.627613,-7.172976,1.864900,2.164720,8.949678,-7.768407,-0.062580,-0.492507,-3.803990,5.436520,9.035555,8.919753,1.619433,-5.826306,8.855298,0.917012,1.198999,4.468563,-2.970027,5.162509,-9.822517,0.898607,-7.968485,8.246229,7.254743,-6.333164,-1.661182,5.275367,8.497282,1.001352,5.135907,9.704286,-9.775906,5.640846,5.960868,-9.597746,-7.448176,6.502054,6.445561,-5.953338,2.831684,-7.839932,-4.227691,7.531242,1.942571,4.577846,3.525742,0.756287,4.120820,-7.728631,3.230154,-0.871960,7.037145,-8.855387,-6.738814,8.503526,-2.941127,1.499762,1.699656,-6.908203,-2.841813,9.777856,-0.359071,8.078453,5.695867,-9.556057,7.479881,-7.551005,-7.656256,3.591089,9.848109,4.985543,-4.544679,1.165888,8.626270,-5.089149,3.943048,-3.518369,7.815578,5.770930,4.624284,5.096538,-5.918512,0.802620,2.855323,-6.642745,4.665331,-8.755159,-8.430082,6.154656,3.111560,3.984803,8.751967,-0.377368,-5.988330,1.066386,6.240846,-3.794963,6.423231,3.859043,-8.551414,1.624259,6.620993,-7.920811,4.059812,3.034009,1.306643,7.208202,-3.590738,1.455753,1.222954,7.162899,-2.405018,4.044237,9.809382,-6.254474,-4.527777,-7.824659,0.282458,3.633096,-7.555902,3.010076,-1.447455,4.459796,-2.229999,2.079350,0.611525,-9.068474,-7.583545,3.339078,-4.654380,7.795600,-9.792277,-3.018185,-6.896341,-8.390319,0.808947,5.911249,5.499674,-1.488922,2.189859,6.479478,-0.385787,-7.608954,0.404875,8.768984,3.356711,-7.547066,-5.218270,6.369906,0.448487,1.875325,6.314710,-3.578093,0.091828,-7.890592,-1.299757,-5.009355,-9.924164,4.727939,-4.606767,4.963336,7.262232,5.598009,2.185626,5.885336,6.692365,4.411617,5.672069,1.078014,-2.028976,2.328820,3.351266,-7.811122,4.724353,-4.048492,-6.162031,0.919332,5.013368,3.938053,-3.707109,1.989384,6.093097,-5.058112,-8.187728,-7.713919,-2.171040,4.794645,3.143949,0.640501,0.318318,-2.636514,2.812409,-6.743196,0.008844,8.741394,-6.072403,5.942461,0.780699,-8.213812,3.181533,6.221142,-7.563074,3.320388,-6.268331,-9.825579,-1.286652,1.815305,0.600837,7.270179,4.879244,-9.844592,1.701647,1.801544,7.595475,4.518970,-9.439631,-9.350927,0.766810,-2.366731,-7.170672,-8.125059,-2.311377,4.406247,8.493944,-5.050014,6.193164,-4.120891,-2.879385,-1.539237,6.577173,-5.758262,-6.212294,-9.800039,-9.409720,6.258476,-5.796800,-0.877436,8.548177,-2.282163,-8.385099,5.786917,0.751746,-3.861464,6.473142,4.336672,-4.368866,4.331949,0.119104,3.556111,-5.046999,-4.837849,-9.752892,7.850113,-1.318921,-8.014538,-6.673144,3.978777,1.514355,0.079417,-0.024172,8.318251,-9.704310,6.334841,-9.886455,-1.091245,2.035155,3.729808,9.685501,4.937011,-2.568647,-2.604136,6.268845,-7.715997,0.895509,3.724794,7.816817,3.534897,1.596832,8.333801,1.122881,5.747823,-1.637874,-3.602666,1.257602,-9.204631,0.713646,5.488355,-5.962482,4.414988,4.237098,8.832916,9.767947,4.559060,1.492338,-5.182751,-0.084882,8.692161,8.932935,-3.487834,0.766449,-6.623731,6.000529,9.920054,-8.041112,2.710941,5.359947,-7.422693,2.466486,-9.669868,-6.054646,6.675431,-6.189622,7.687404,-2.151850,-2.332195,-0.118966,-1.106122,-7.062064,7.392927,-5.997105,6.497589,6.503561,-1.850654,5.478366,1.902226,-6.815382,-7.902324,4.150632,-2.182292,6.990185,4.679961,9.529283,5.472361,6.607181,-2.609028,9.090805,-6.233408,4.085619,-6.043446,8.394619,-7.100802,-9.114958,-2.363988,9.522690,-6.241199,8.073607,-8.118630,4.131275,8.487531,1.588391,6.136224,7.460414,8.748118,-2.996016,5.486922,-6.609149,1.676596,-6.573175,-8.996389,-5.712614,-8.401995,0.661305,2.627782,-4.796468,7.532995,-7.083350,-7.075448,-7.972403,9.132620,9.408625,-0.164489,-9.548258,0.454266,2.164955,-3.254106,-5.149117,-0.128635,-4.819287,-0.488953,-3.527637,-3.746124,-2.345002,-6.094575,-5.480663,-5.890150,-1.800322,6.704257,-5.633295,4.044656,7.860999,-3.967693,-8.947786,1.760841,-3.201224,1.771368,3.330466,2.651683,-0.878429,0.993321,1.975909,0.687391,-0.170555,2.270096,1.847956,2.308579,-3.185886,-4.385060,-7.598121,8.169554,9.290921,2.667271,-8.208199,5.284226,-4.370659,-6.522601,-0.533735,6.970169,-7.466015,0.727605,3.927494,-6.073452,-5.032216,-6.925169,-9.928067,0.393054,-0.834766,9.287595,-6.002914,2.009255,2.671667,-8.289238,2.186559,-7.822491,-8.799984,3.333044,-3.579839,-2.842685,-5.078817,1.770332,-2.913109,0.086075,3.377961,-5.312316,5.828319,-6.897886,1.029148,-5.504433,-3.661999,-6.851681,-9.952268,-1.922327,-0.173989,-9.897862,7.710230,7.703509,-6.342870,-0.935006,2.186318,6.170680,0.837129,4.645945,2.004209,5.555057,7.229799,-7.423499,-2.121329,-0.766108,5.798861,3.523662,0.202850,6.579765,7.664138,4.229953,-7.107790,7.409541,3.826290,-5.401738,-0.965239,-5.803748,1.541126,-7.041535,-0.240363,-1.903533,9.048154,-4.842506,7.554335,-2.994994,-0.447876,4.886833,9.192152,-3.699055,-1.469189,7.982307,-6.622337,-3.053578,-3.679475,6.646822,5.158557,4.216856,-2.298116,0.914887,9.144976,-1.280041,-2.067940,-0.728023,2.431345,-8.675063,4.347277,-5.006695,4.993239,7.592143,5.180845,-0.781135,2.211035,5.338708,-7.547051,3.590405,0.654705,5.666534,3.824908,1.514690,-2.647659,-7.368726,4.177786,7.917504,3.614436,-8.789014,-6.924732,-1.876284,-6.126140,6.913010,-1.482375,-1.043409,-3.545065,3.295175,6.135572,-4.103672,-8.648851,7.533270,-6.784432,9.541585,-3.088591,-4.389290,-2.467819,-5.776154,7.343542,8.297296,-0.538506,4.673570,4.365772,-9.185833,7.973803,-2.708849,-2.892660,4.236297,9.806158,-2.977067,-2.367399,-2.806171,3.353515,-9.850794,-4.188256,7.102011,3.677729,4.914089,7.322996,-0.773581,8.484066,8.846714,-4.709473,-7.530049,8.601802,4.291274,9.311012,-5.811719,-6.941356,3.306722,4.501368,6.796169,0.528952,2.255776,9.403377,5.315546,8.730883,-4.566329,2.449682,0.626443,6.691326,9.704150,-2.859129,-5.500329,-0.211030,4.705643,-5.775577,-8.168268,7.141075,-3.685091,2.792031,6.841362,-7.799548,3.489037,-2.186431,-2.209362,7.426545,2.175069,-9.896770,9.217188,0.231344,-8.009143,4.648190,-9.530180,-1.450371,3.559009,-9.336227,-3.508812,-2.844170,4.208941,-2.360570,8.965043,2.020097,6.593071,-9.468981,-3.169287,1.227917,3.014497,9.578493,-0.212614,-0.997276,-4.327095,-4.138433,-0.418848,-2.004308,-4.694202,9.294551,-9.155441,-6.388981,-0.686998,-7.683997,-3.170447,0.300584,7.869185,4.486308,3.801587,4.224352,9.965193,-5.179666,6.666391,9.152858,-3.304618,4.115502,4.624826,-8.971289,-9.108369,-8.948790,8.359531,-9.238374,-7.238074,-2.443473,9.044115,1.553110,8.811595,-9.337993,-3.079817,-2.141983,5.669484,-1.808421,2.145435,-2.219232,9.502946,6.229878,1.353152,1.052424,6.447220,6.728319,-9.639368,9.763749,-3.718780,-7.448349,1.789121,6.473800,-5.622315,9.848286,4.526810,0.162037,-2.451295,6.952322,-1.177596,-0.150465,-6.352921,-0.485290,-5.004513,-8.136326,-7.920142,-1.657672,-3.122904,-6.176613,3.831027,-3.906265,4.692013,6.804710,-8.433905,0.288498,-7.629915,5.936566,0.139324,2.947576,6.498324,7.611418,-2.875615,-8.358054,3.026854,0.993536,-1.825995,3.749803,6.047058,-0.447384,1.201874,-4.130471,4.637023,-1.933515,8.239282,-1.453152,-7.875178,-1.589039,5.564634,3.701216,2.198841,1.882609,-3.556349,-9.206630,-7.987305,-1.564074,-3.462244,9.713519,-2.929404,5.316092,0.075581,-1.259856,1.644211,-8.414962,2.805834,5.303255,-5.889417,5.762244,-5.501664,-0.800314,-8.469691,-6.229590,3.102096,-0.341800,-5.591217,0.756930,9.754073,1.858000,6.702349,-3.842994,8.577877], dtype = "float64")#candidate|5848|(1134,)|const|float64
var_5849 = relay.var("var_5849", dtype = "float64", shape = (3, 2))#candidate|5849|(3, 2)|var|float64
const_5850 = relay.const(-9, dtype = "int16")#candidate|5850|()|const|int16
call_5844 = relay.TupleGetItem(func_2788_call(relay.reshape(const_5845.astype('float32'), [3, 2, 10]), relay.reshape(const_5846.astype('int16'), [1, 468]), relay.reshape(var_5847.astype('float64'), [864,]), relay.reshape(const_5848.astype('float64'), [567, 2]), relay.reshape(const_5845.astype('float32'), [3, 2, 10]), relay.reshape(var_5849.astype('float64'), [6,]), relay.reshape(const_5850.astype('int16'), []), ), 7)
call_5851 = relay.TupleGetItem(func_2797_call(relay.reshape(const_5845.astype('float32'), [3, 2, 10]), relay.reshape(const_5846.astype('int16'), [1, 468]), relay.reshape(var_5847.astype('float64'), [864,]), relay.reshape(const_5848.astype('float64'), [567, 2]), relay.reshape(const_5845.astype('float32'), [3, 2, 10]), relay.reshape(var_5849.astype('float64'), [6,]), relay.reshape(const_5850.astype('int16'), []), ), 7)
var_5856 = relay.var("var_5856", dtype = "float64", shape = (8, 6, 13))#candidate|5856|(8, 6, 13)|var|float64
bop_5857 = relay.floor_mod(uop_5832.astype('float64'), relay.reshape(var_5856.astype('float64'), relay.shape_of(uop_5832))) # shape=(8, 6, 13)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_5861 = relay.var("var_5861", dtype = "int64", shape = (320,))#candidate|5861|(320,)|var|int64
call_5860 = relay.TupleGetItem(func_1081_call(relay.reshape(var_5861.astype('int64'), [10, 2, 16])), 1)
call_5862 = relay.TupleGetItem(func_1084_call(relay.reshape(var_5861.astype('int64'), [10, 2, 16])), 1)
func_2105_call = mod.get_global_var('func_2105')
func_2108_call = mutated_mod.get_global_var('func_2108')
call_5863 = relay.TupleGetItem(func_2105_call(relay.reshape(call_5844.astype('float64'), [16, 9, 16])), 0)
call_5864 = relay.TupleGetItem(func_2108_call(relay.reshape(call_5844.astype('float64'), [16, 9, 16])), 0)
output = relay.Tuple([call_5844,const_5845,const_5846,var_5847,const_5848,var_5849,const_5850,bop_5857,call_5860,var_5861,call_5863,])
output2 = relay.Tuple([call_5851,const_5845,const_5846,var_5847,const_5848,var_5849,const_5850,bop_5857,call_5862,var_5861,call_5864,])
func_5865 = relay.Function([var_5847,var_5849,var_5856,var_5861,], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
var_5866 = relay.var("var_5866", dtype = "float64", shape = (864,))#candidate|5866|(864,)|var|float64
var_5867 = relay.var("var_5867", dtype = "float64", shape = (3, 2))#candidate|5867|(3, 2)|var|float64
var_5868 = relay.var("var_5868", dtype = "float64", shape = (8, 6, 13))#candidate|5868|(8, 6, 13)|var|float64
var_5869 = relay.var("var_5869", dtype = "int64", shape = (320,))#candidate|5869|(320,)|var|int64
output = func_5865(var_5866,var_5867,var_5868,var_5869,)
func_5870 = relay.Function([var_5866,var_5867,var_5868,var_5869,], output)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5876 = relay.var("var_5876", dtype = "float64", shape = ())#candidate|5876|()|var|float64
var_5877 = relay.var("var_5877", dtype = "float64", shape = (15, 4, 9))#candidate|5877|(15, 4, 9)|var|float64
bop_5878 = relay.power(var_5876.astype('float64'), var_5877.astype('float64')) # shape=(15, 4, 9)
output = bop_5878
output2 = bop_5878
func_5891 = relay.Function([var_5876,var_5877,], output)
mod['func_5891'] = func_5891
mod = relay.transform.InferType()(mod)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5891_call = mutated_mod.get_global_var('func_5891')
var_5893 = relay.var("var_5893", dtype = "float64", shape = ())#candidate|5893|()|var|float64
var_5894 = relay.var("var_5894", dtype = "float64", shape = (15, 4, 9))#candidate|5894|(15, 4, 9)|var|float64
call_5892 = func_5891_call(var_5893,var_5894,)
output = call_5892
func_5895 = relay.Function([var_5893,var_5894,], output)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6108 = relay.var("var_6108", dtype = "float64", shape = (12, 10, 10))#candidate|6108|(12, 10, 10)|var|float64
uop_6109 = relay.atan(var_6108.astype('float64')) # shape=(12, 10, 10)
func_783_call = mod.get_global_var('func_783')
func_786_call = mutated_mod.get_global_var('func_786')
var_6119 = relay.var("var_6119", dtype = "uint16", shape = (484,))#candidate|6119|(484,)|var|uint16
call_6118 = func_783_call(relay.reshape(var_6119.astype('uint16'), [11, 11, 4]))
call_6120 = func_783_call(relay.reshape(var_6119.astype('uint16'), [11, 11, 4]))
func_1239_call = mod.get_global_var('func_1239')
func_1241_call = mutated_mod.get_global_var('func_1241')
call_6124 = relay.TupleGetItem(func_1239_call(relay.reshape(var_6119.astype('uint16'), [484,])), 2)
call_6125 = relay.TupleGetItem(func_1241_call(relay.reshape(var_6119.astype('uint16'), [484,])), 2)
func_1655_call = mod.get_global_var('func_1655')
func_1657_call = mutated_mod.get_global_var('func_1657')
const_6129 = relay.const([[1.783480],[-8.808093],[-0.158792],[-7.752182],[-2.655144],[8.378435]], dtype = "float64")#candidate|6129|(6, 1)|const|float64
call_6128 = relay.TupleGetItem(func_1655_call(relay.reshape(const_6129.astype('float64'), [1, 6, 1])), 0)
call_6130 = relay.TupleGetItem(func_1657_call(relay.reshape(const_6129.astype('float64'), [1, 6, 1])), 0)
uop_6131 = relay.atanh(var_6119.astype('float32')) # shape=(484,)
uop_6140 = relay.atanh(uop_6109.astype('float32')) # shape=(12, 10, 10)
bop_6142 = relay.logical_or(const_6129.astype('bool'), uop_6131.astype('bool')) # shape=(6, 484)
output = relay.Tuple([call_6118,call_6124,call_6128,uop_6140,bop_6142,])
output2 = relay.Tuple([call_6120,call_6125,call_6130,uop_6140,bop_6142,])
func_6148 = relay.Function([var_6108,var_6119,], output)
mod['func_6148'] = func_6148
mod = relay.transform.InferType()(mod)
var_6149 = relay.var("var_6149", dtype = "float64", shape = (12, 10, 10))#candidate|6149|(12, 10, 10)|var|float64
var_6150 = relay.var("var_6150", dtype = "uint16", shape = (484,))#candidate|6150|(484,)|var|uint16
output = func_6148(var_6149,var_6150,)
func_6151 = relay.Function([var_6149,var_6150,], output)
mutated_mod['func_6151'] = func_6151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6341 = relay.var("var_6341", dtype = "uint32", shape = (13, 16, 2))#candidate|6341|(13, 16, 2)|var|uint32
var_6342 = relay.var("var_6342", dtype = "uint32", shape = (13, 16, 2))#candidate|6342|(13, 16, 2)|var|uint32
bop_6343 = relay.multiply(var_6341.astype('uint32'), relay.reshape(var_6342.astype('uint32'), relay.shape_of(var_6341))) # shape=(13, 16, 2)
func_4768_call = mod.get_global_var('func_4768')
func_4773_call = mutated_mod.get_global_var('func_4773')
const_6347 = relay.const([-9.686236,-4.742079,7.382543,8.517182,1.882708,0.890929,-2.745868,-1.577064,-1.662398,0.592096,4.024553,-9.507005,5.458641,9.096181,0.562807,8.991509,4.244384,-2.178089,2.806969,2.720137,-5.858661,-1.837019,-0.867247,-6.704659,-2.800848,6.337631,-6.263030,7.848560,2.342724,-8.449644,4.892359,-5.396132,-2.678159,-6.407109,-1.291465,-7.951768,-2.815230,2.512248,5.939318,-0.691452,-4.398033,-9.306815,0.757438,-8.846193,-8.758154,1.396721,-5.195134,3.319846,-4.581801,-1.989252,3.323708,0.795529,3.324449,-5.159184,0.425884,5.351100,6.292970,-5.182474,2.635495,1.181966,6.250630,-3.197480,9.267775,-7.974931,6.885992,-4.090694,8.620953,-5.034997,8.972549,-8.803534,1.844750,-9.527111,5.028126,5.660307,3.677285,-0.657493,0.416413,3.687642,-4.563702,-2.123365,-5.999748,-1.584151,6.203761,4.769725,-9.068860,0.188823,6.167367,-3.840498,-3.323613,0.159016,-4.441604,-1.708421,-7.887605,-1.463745,-1.334657,-9.971505,-9.539029,-0.657310,-8.973817,-3.469344,8.499647,-7.437147,4.194449,5.976398,0.147060,9.993324,4.666876,7.955932,6.859917,-9.839441,9.886761,0.835193,-3.935716,8.245248,9.359347,8.588697,1.866240,9.495028,-5.310149,-3.145493,8.554750,0.674734,5.299762,9.792722,0.217200,-6.224871,-0.977995,-8.330471,-9.655628,8.381530,6.502919,-3.888202,8.638189,6.572419,3.801938,4.048022,8.869605,3.576110,4.478653,-7.936120,-0.023333,6.373504,-8.572353,9.576741,3.116263,-6.551751,6.477497,6.152358,-7.410887,-5.926187,-5.224164,-2.408486,7.720673,1.097514,-3.399406,3.954781,-1.158582,-8.562848,-9.466487,4.196569,-7.262896,-1.338053,6.877098,-4.290722,-1.223069,8.021178,-6.971563,-6.766224,8.563329,4.208635,0.679937,-2.553008,7.803762,-9.641743,4.228410,-2.549526,1.304190,6.053179,-7.238283,-3.457910,2.440284,-1.330246,-5.909746,0.172764,-4.909283,3.998872,3.824602,7.278859,-8.874695,-7.930688,-4.761338,-2.641138,0.428892,-3.562618,1.641038,-1.275438,-2.065707,0.820786,2.152348,-8.322672,3.369057,-8.158902,0.250745,2.074851,0.143012,9.649005,-8.122019,-5.520190,-9.889200,-8.194645,2.398931,-4.156851,1.462509,-7.699242,-6.568045,-5.137633,4.458608,-4.222552,-4.571037,-0.942289,7.382876,8.704139,9.481112,2.607843,-8.331958,-2.805908,-4.320719,4.426957,-8.686157,-8.807854,-8.695341,-8.796959,7.986598,3.255375,-9.186844,-7.812940,8.157716,-1.731412,3.918278,-4.034433,8.840885,3.637749,0.569660,6.019018,6.205498,-9.380059,-5.601873,8.723210,1.615150,7.773345,-6.746828,5.253828,-6.421981,8.666334,8.176445,9.172455,-8.379659,-2.661978,-0.578152,7.918144,-8.047286,5.859379,-7.191331,-2.970645,0.310547,0.794061,4.740601,-2.254925,-1.836801,5.681448,1.284184,-2.440703,-0.498606,-4.060409,-7.918514,-3.731146,6.738962,1.645426,-0.732453,-9.301759,-1.421195,8.367684,-0.257644,2.399228,1.829590,4.526797,3.502435,-2.287440,-4.088947,-6.391899,-5.077443,7.230573,4.202724,9.522783,4.938613,6.601385,-7.289745,8.104719,-7.791415,4.008305,-4.015831,1.722843,2.082864,9.888893,-0.385576,-4.117233,-5.745941,-8.032751,2.820705,7.398862,0.652534,-1.944969,3.357180,6.223654,-0.027626,-7.983125,0.579850,-2.091512,3.244712,-6.853322,-0.169394,2.413783,1.287904,-3.352409,9.741549,2.346973,-5.701643,-7.468611,5.004558,-7.167750,4.552725,-5.773324,-4.893302,1.690283,-8.274032,1.913711,-6.935480,8.910550,-6.764567,-8.689381,3.435174,6.994250,4.633153,-0.409910,6.764259,-7.492740,2.159218,2.924581,-5.029857,5.566934,-3.995452,3.857902,5.722356,-7.739776,-4.681652,-4.109502,-7.437805,3.589441,4.362562,7.292096,-5.589547,6.473954,-4.360736,4.724054,9.663471,-4.381324,1.052361,2.707659,-0.793157,5.294835,-7.968426,6.286653,8.389407,4.823078,-4.553571,9.648968,-8.700873,-0.436165,4.573201,4.788551,-3.068233,-5.468130,1.002445,6.321117,-6.539571,-0.526177,-3.814252,1.465703,1.491793,-2.790969,0.430399,-6.323859,0.121622,2.647121,0.506783,4.084500,-2.110961,9.766361,4.626676,9.025528,2.347191,6.871041,7.782069,2.443383,1.421158,-0.407385,0.747778,-2.153728,8.330768,1.325403,6.904503,1.304121,7.920688,4.459904,5.213375,-1.498198,8.726548,-3.112025,-9.141367,6.335603,4.221692,9.991064,-9.865786,9.683087,1.357758,-2.809910,-4.514274,-8.191196,0.246385,-6.143307,-6.668502,3.495811,-4.376699,9.640334,-5.243899,-5.483518,-2.723220,-5.997361,-2.959963,7.677070,3.474615,-1.547417,9.154514,6.006930,-6.939849,1.832708,-0.865212,-2.725491,-3.520682,2.565317,-1.369032,-9.888934,7.682427,-6.875948,4.816165,3.273295,0.536808,-0.073046,-9.835455,4.379199,6.156791,-1.934648,-4.821802,9.930790,-5.408361,5.663361,-3.879139,5.025280], dtype = "float64")#candidate|6347|(468,)|const|float64
var_6348 = relay.var("var_6348", dtype = "float64", shape = (1134,))#candidate|6348|(1134,)|var|float64
const_6349 = relay.const([[4.714554,-8.436519],[-4.623963,7.297477],[4.844009,9.993850]], dtype = "float64")#candidate|6349|(3, 2)|const|float64
call_6346 = relay.TupleGetItem(func_4768_call(relay.reshape(const_6347.astype('float64'), [6, 6, 13]), relay.reshape(var_6348.astype('float64'), [1134,]), relay.reshape(const_6349.astype('float64'), [6,]), ), 2)
call_6350 = relay.TupleGetItem(func_4773_call(relay.reshape(const_6347.astype('float64'), [6, 6, 13]), relay.reshape(var_6348.astype('float64'), [1134,]), relay.reshape(const_6349.astype('float64'), [6,]), ), 2)
uop_6351 = relay.asinh(bop_6343.astype('float32')) # shape=(13, 16, 2)
bop_6353 = relay.bitwise_or(uop_6351.astype('uint8'), relay.reshape(bop_6343.astype('uint8'), relay.shape_of(uop_6351))) # shape=(13, 16, 2)
output = relay.Tuple([call_6346,const_6347,var_6348,const_6349,bop_6353,])
output2 = relay.Tuple([call_6350,const_6347,var_6348,const_6349,bop_6353,])
func_6362 = relay.Function([var_6341,var_6342,var_6348,], output)
mod['func_6362'] = func_6362
mod = relay.transform.InferType()(mod)
var_6363 = relay.var("var_6363", dtype = "uint32", shape = (13, 16, 2))#candidate|6363|(13, 16, 2)|var|uint32
var_6364 = relay.var("var_6364", dtype = "uint32", shape = (13, 16, 2))#candidate|6364|(13, 16, 2)|var|uint32
var_6365 = relay.var("var_6365", dtype = "float64", shape = (1134,))#candidate|6365|(1134,)|var|float64
output = func_6362(var_6363,var_6364,var_6365,)
func_6366 = relay.Function([var_6363,var_6364,var_6365,], output)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6500 = relay.var("var_6500", dtype = "float32", shape = (1, 2, 7))#candidate|6500|(1, 2, 7)|var|float32
uop_6501 = relay.atanh(var_6500.astype('float32')) # shape=(1, 2, 7)
output = relay.Tuple([uop_6501,])
output2 = relay.Tuple([uop_6501,])
func_6508 = relay.Function([var_6500,], output)
mod['func_6508'] = func_6508
mod = relay.transform.InferType()(mod)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6509 = relay.var("var_6509", dtype = "float32", shape = (1, 2, 7))#candidate|6509|(1, 2, 7)|var|float32
func_6508_call = mutated_mod.get_global_var('func_6508')
call_6510 = func_6508_call(var_6509)
output = call_6510
func_6511 = relay.Function([var_6509], output)
mutated_mod['func_6511'] = func_6511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6533 = relay.var("var_6533", dtype = "int8", shape = (5, 14, 16))#candidate|6533|(5, 14, 16)|var|int8
var_6534 = relay.var("var_6534", dtype = "int8", shape = (5, 14, 16))#candidate|6534|(5, 14, 16)|var|int8
bop_6535 = relay.bitwise_and(var_6533.astype('int8'), relay.reshape(var_6534.astype('int8'), relay.shape_of(var_6533))) # shape=(5, 14, 16)
func_1239_call = mod.get_global_var('func_1239')
func_1241_call = mutated_mod.get_global_var('func_1241')
const_6540 = relay.const([[1,3],[-3,-9],[-1,2],[-8,6],[-3,8],[5,7],[-1,9],[-8,2],[-10,9],[4,-10],[8,-2],[-10,6],[7,1],[9,9],[-10,2],[1,9],[8,7],[-5,6],[-9,-8],[9,10],[-9,7],[-2,7],[-7,10],[-2,-1],[7,2],[-5,3],[-9,2],[-4,-5],[7,2],[10,-1],[-10,-7],[2,-3],[-8,-8],[5,8],[4,-3],[6,3],[8,3],[7,-5],[7,-9],[1,-5],[-9,5],[-6,-8],[-5,-1],[9,-4],[-1,6],[-3,7],[4,6],[-10,-6],[7,4],[4,-6],[-3,2],[10,10],[5,3],[7,-9],[-8,8],[-7,10],[6,7],[-4,-1],[-9,10],[10,-5],[5,4],[-8,3],[-9,7],[-5,-10],[-8,3],[2,-10],[6,4],[-1,-3],[-7,-6],[-2,-4],[-2,-7],[-5,-10],[-7,-7],[-4,2],[9,7],[7,6],[-1,-10],[3,-5],[2,-4],[10,1],[4,6],[5,9],[6,-3],[8,-6],[4,-3],[9,-4],[8,1],[1,-5],[8,-2],[-9,-8],[-8,7],[-2,4],[-8,-5],[-3,-1],[6,-2],[4,1],[-7,6],[5,-1],[6,-9],[-1,-6],[-2,-8],[-9,-9],[-3,-1],[6,-8],[4,-1],[7,-2],[-9,5],[5,-1],[-2,1],[9,6],[9,-6],[9,10],[-7,4],[2,-1],[6,1],[7,8],[10,-3],[-9,1],[-8,3],[-3,3],[-3,-4],[-3,-7],[10,4],[-1,-7],[2,-2],[-10,-1],[1,6],[-8,-4],[5,7],[2,1],[-2,-9],[7,-4],[7,10],[-10,-6],[6,5],[-8,-4],[-6,5],[2,1],[-10,7],[-10,4],[8,5],[-6,8],[-2,3],[-3,-4],[-7,6],[4,-5],[10,10],[4,7],[2,9],[4,10],[-4,5],[2,-6],[-8,-8],[2,7],[-7,3],[-2,3],[-4,-2],[4,2],[4,5],[7,-5],[-4,7],[8,7],[10,-7],[10,-6],[4,1],[-7,6],[-10,-7],[10,2],[-7,-9],[5,-2],[-8,9],[1,-2],[-1,-7],[-8,2],[-3,5],[-3,9],[-7,8],[-6,7],[1,2],[9,-1],[9,-1],[-10,-4],[-3,10],[5,-9],[10,4],[-8,-10],[5,5],[5,6],[-3,-10],[-1,-7],[5,-2],[1,-3],[-9,-8],[6,-7],[1,-6],[-7,2],[-9,-4],[9,5],[-1,2],[-10,-2],[2,5],[-8,-2],[6,5],[8,3],[10,-10],[-1,10],[-3,3],[-9,-2],[6,2],[2,3],[2,1],[-5,-9],[-4,-5],[3,-8],[-10,-2],[7,-4],[1,-7],[2,3],[7,-3],[-10,9],[-9,-2],[2,1],[-10,-2],[4,10],[-4,10],[-6,-7],[9,-7],[-2,7],[-3,-4],[-7,-6],[5,-6],[6,6],[-4,5],[1,2],[3,1],[8,-5],[-4,-7],[-3,10],[10,8],[-3,-5],[3,6],[1,-4]], dtype = "uint16")#candidate|6540|(242, 2)|const|uint16
call_6539 = relay.TupleGetItem(func_1239_call(relay.reshape(const_6540.astype('uint16'), [484,])), 1)
call_6541 = relay.TupleGetItem(func_1241_call(relay.reshape(const_6540.astype('uint16'), [484,])), 1)
uop_6545 = relay.atan(call_6539.astype('float32')) # shape=(11, 11, 4)
uop_6547 = relay.atan(call_6541.astype('float32')) # shape=(11, 11, 4)
func_2447_call = mod.get_global_var('func_2447')
func_2449_call = mutated_mod.get_global_var('func_2449')
var_6551 = relay.var("var_6551", dtype = "int64", shape = (320,))#candidate|6551|(320,)|var|int64
call_6550 = relay.TupleGetItem(func_2447_call(relay.reshape(var_6551.astype('int64'), [8, 40])), 2)
call_6552 = relay.TupleGetItem(func_2449_call(relay.reshape(var_6551.astype('int64'), [8, 40])), 2)
output = relay.Tuple([bop_6535,const_6540,uop_6545,call_6550,var_6551,])
output2 = relay.Tuple([bop_6535,const_6540,uop_6547,call_6552,var_6551,])
func_6553 = relay.Function([var_6533,var_6534,var_6551,], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
var_6554 = relay.var("var_6554", dtype = "int8", shape = (5, 14, 16))#candidate|6554|(5, 14, 16)|var|int8
var_6555 = relay.var("var_6555", dtype = "int8", shape = (5, 14, 16))#candidate|6555|(5, 14, 16)|var|int8
var_6556 = relay.var("var_6556", dtype = "int64", shape = (320,))#candidate|6556|(320,)|var|int64
output = func_6553(var_6554,var_6555,var_6556,)
func_6557 = relay.Function([var_6554,var_6555,var_6556,], output)
mutated_mod['func_6557'] = func_6557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6559 = relay.var("var_6559", dtype = "float32", shape = (8, 13, 3))#candidate|6559|(8, 13, 3)|var|float32
uop_6560 = relay.sin(var_6559.astype('float32')) # shape=(8, 13, 3)
func_1655_call = mod.get_global_var('func_1655')
func_1657_call = mutated_mod.get_global_var('func_1657')
var_6575 = relay.var("var_6575", dtype = "float64", shape = (6,))#candidate|6575|(6,)|var|float64
call_6574 = relay.TupleGetItem(func_1655_call(relay.reshape(var_6575.astype('float64'), [1, 6, 1])), 0)
call_6576 = relay.TupleGetItem(func_1657_call(relay.reshape(var_6575.astype('float64'), [1, 6, 1])), 0)
output = relay.Tuple([uop_6560,call_6574,var_6575,])
output2 = relay.Tuple([uop_6560,call_6576,var_6575,])
func_6577 = relay.Function([var_6559,var_6575,], output)
mod['func_6577'] = func_6577
mod = relay.transform.InferType()(mod)
var_6578 = relay.var("var_6578", dtype = "float32", shape = (8, 13, 3))#candidate|6578|(8, 13, 3)|var|float32
var_6579 = relay.var("var_6579", dtype = "float64", shape = (6,))#candidate|6579|(6,)|var|float64
output = func_6577(var_6578,var_6579,)
func_6580 = relay.Function([var_6578,var_6579,], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6670 = relay.var("var_6670", dtype = "float64", shape = (5, 5, 10))#candidate|6670|(5, 5, 10)|var|float64
const_6671 = relay.const([[[-1.196699,-5.637990,-1.620331,-1.761454,1.566977,-8.643952,-4.705297,-4.142546,5.896746,-2.624140],[5.203218,6.822027,-5.671115,-0.744347,8.244749,1.456864,-8.850171,-0.068446,5.373802,-4.967542],[9.408330,-4.726048,5.511985,3.820779,6.156161,-1.326523,-4.028640,3.080948,6.905094,-4.293131],[6.451546,-8.506640,9.020415,4.473063,4.372956,4.899929,-0.341903,4.851105,-0.779071,7.906012],[-6.584588,3.250694,3.597217,5.867429,-0.683558,7.021826,6.281529,-5.570590,-9.705848,-1.939365]],[[0.739189,-8.315915,3.148771,7.337788,2.784232,8.712754,0.852050,-8.924613,-5.272901,0.653852],[2.410765,-1.864515,3.853793,5.421316,-7.965135,9.032731,2.211620,-0.266844,4.764521,-3.785841],[-0.379639,4.585935,-9.154933,-7.980403,9.452240,-9.335481,5.234006,-9.858098,4.157939,-5.108285],[8.926621,6.632803,-9.944702,5.905065,9.787728,-4.606510,-5.525167,6.605162,2.999858,7.963676],[-4.964401,5.156293,-7.553509,-9.110260,0.517420,-0.597071,-2.292081,2.536345,1.279299,9.735947]],[[-0.892710,-1.289044,3.552811,-1.688392,9.789934,4.922294,2.739755,1.313769,-4.720150,3.017686],[9.071089,-2.544043,9.075286,-8.288500,6.052088,8.356498,8.955418,-6.751510,-4.948705,5.698413],[-2.012256,0.646100,3.718848,7.064819,-0.442789,8.569490,-1.412837,3.798983,6.311535,-7.930294],[3.706207,-4.388265,3.870006,6.018997,6.340423,-2.246483,-6.389456,9.773138,-4.156567,9.169139],[3.689232,-5.145031,8.862729,4.375188,3.173896,3.624169,-4.571819,1.440994,-1.911856,2.715414]],[[0.367913,7.300665,5.034187,6.566293,8.474540,-8.651669,3.235366,1.566997,-0.122494,1.123066],[-1.430948,2.578730,0.737112,1.938445,6.385143,8.229641,-2.945638,-9.857203,-6.258917,6.581134],[4.158434,-3.892785,2.510012,5.477721,1.910779,2.491940,4.743465,-7.595135,-5.823161,-8.306790],[-2.241779,-9.798332,-2.307970,-3.663648,2.541244,-5.337823,1.353931,8.260287,-0.191889,-0.369680],[-4.251450,-6.144297,-5.886938,-0.027706,-4.674607,8.930403,-6.617651,3.429308,-9.632929,8.719761]],[[3.328251,-9.676353,7.462605,1.969151,-7.927550,8.976128,-4.107748,-9.562809,-5.416187,0.276012],[4.395534,1.998163,-3.375506,-4.745581,-5.220026,-5.888324,-1.941292,-0.532948,9.008347,0.925213],[0.127383,-8.047353,-8.998534,0.863040,5.385602,9.801161,3.425270,-3.186104,1.438564,-6.993187],[0.826124,-0.876392,-2.053272,1.821887,-5.992227,4.415687,7.373610,9.165215,9.031552,-9.382576],[3.061351,6.155216,-2.965259,7.000851,8.630405,4.136128,-2.684681,-2.531796,-1.127164,-5.362953]]], dtype = "float64")#candidate|6671|(5, 5, 10)|const|float64
bop_6672 = relay.divide(var_6670.astype('float64'), relay.reshape(const_6671.astype('float64'), relay.shape_of(var_6670))) # shape=(5, 5, 10)
output = bop_6672
output2 = bop_6672
func_6698 = relay.Function([var_6670,], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
var_6699 = relay.var("var_6699", dtype = "float64", shape = (5, 5, 10))#candidate|6699|(5, 5, 10)|var|float64
output = func_6698(var_6699)
func_6700 = relay.Function([var_6699], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6730 = relay.var("var_6730", dtype = "uint32", shape = (2, 15))#candidate|6730|(2, 15)|var|uint32
var_6731 = relay.var("var_6731", dtype = "uint32", shape = (2, 15))#candidate|6731|(2, 15)|var|uint32
bop_6732 = relay.greater_equal(var_6730.astype('bool'), relay.reshape(var_6731.astype('bool'), relay.shape_of(var_6730))) # shape=(2, 15)
output = bop_6732
output2 = bop_6732
func_6775 = relay.Function([var_6730,var_6731,], output)
mod['func_6775'] = func_6775
mod = relay.transform.InferType()(mod)
mutated_mod['func_6775'] = func_6775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6775_call = mutated_mod.get_global_var('func_6775')
var_6777 = relay.var("var_6777", dtype = "uint32", shape = (2, 15))#candidate|6777|(2, 15)|var|uint32
var_6778 = relay.var("var_6778", dtype = "uint32", shape = (2, 15))#candidate|6778|(2, 15)|var|uint32
call_6776 = func_6775_call(var_6777,var_6778,)
output = call_6776
func_6779 = relay.Function([var_6777,var_6778,], output)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7073 = relay.var("var_7073", dtype = "int8", shape = (12, 7, 12))#candidate|7073|(12, 7, 12)|var|int8
var_7074 = relay.var("var_7074", dtype = "int8", shape = (12, 7, 12))#candidate|7074|(12, 7, 12)|var|int8
bop_7075 = relay.subtract(var_7073.astype('int8'), relay.reshape(var_7074.astype('int8'), relay.shape_of(var_7073))) # shape=(12, 7, 12)
func_1954_call = mod.get_global_var('func_1954')
func_1959_call = mutated_mod.get_global_var('func_1959')
var_7079 = relay.var("var_7079", dtype = "uint32", shape = (392,))#candidate|7079|(392,)|var|uint32
var_7080 = relay.var("var_7080", dtype = "int16", shape = (2304,))#candidate|7080|(2304,)|var|int16
var_7081 = relay.var("var_7081", dtype = "int64", shape = (320,))#candidate|7081|(320,)|var|int64
call_7078 = relay.TupleGetItem(func_1954_call(relay.reshape(var_7079.astype('uint32'), [14, 14, 2]), relay.reshape(var_7080.astype('int16'), [2304, 1]), relay.reshape(var_7081.astype('int64'), [80, 4]), ), 1)
call_7082 = relay.TupleGetItem(func_1959_call(relay.reshape(var_7079.astype('uint32'), [14, 14, 2]), relay.reshape(var_7080.astype('int16'), [2304, 1]), relay.reshape(var_7081.astype('int64'), [80, 4]), ), 1)
output = relay.Tuple([bop_7075,call_7078,var_7079,var_7080,var_7081,])
output2 = relay.Tuple([bop_7075,call_7082,var_7079,var_7080,var_7081,])
func_7116 = relay.Function([var_7073,var_7074,var_7079,var_7080,var_7081,], output)
mod['func_7116'] = func_7116
mod = relay.transform.InferType()(mod)
mutated_mod['func_7116'] = func_7116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7116_call = mutated_mod.get_global_var('func_7116')
var_7118 = relay.var("var_7118", dtype = "int8", shape = (12, 7, 12))#candidate|7118|(12, 7, 12)|var|int8
var_7119 = relay.var("var_7119", dtype = "int8", shape = (12, 7, 12))#candidate|7119|(12, 7, 12)|var|int8
var_7120 = relay.var("var_7120", dtype = "uint32", shape = (392,))#candidate|7120|(392,)|var|uint32
var_7121 = relay.var("var_7121", dtype = "int16", shape = (2304,))#candidate|7121|(2304,)|var|int16
var_7122 = relay.var("var_7122", dtype = "int64", shape = (320,))#candidate|7122|(320,)|var|int64
call_7117 = func_7116_call(var_7118,var_7119,var_7120,var_7121,var_7122,)
output = call_7117
func_7123 = relay.Function([var_7118,var_7119,var_7120,var_7121,var_7122,], output)
mutated_mod['func_7123'] = func_7123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7411 = relay.var("var_7411", dtype = "int16", shape = (2, 16, 4))#candidate|7411|(2, 16, 4)|var|int16
var_7412 = relay.var("var_7412", dtype = "int16", shape = (2, 16, 4))#candidate|7412|(2, 16, 4)|var|int16
bop_7413 = relay.less_equal(var_7411.astype('bool'), relay.reshape(var_7412.astype('bool'), relay.shape_of(var_7411))) # shape=(2, 16, 4)
uop_7417 = relay.sqrt(var_7411.astype('float32')) # shape=(2, 16, 4)
func_2105_call = mod.get_global_var('func_2105')
func_2108_call = mutated_mod.get_global_var('func_2108')
const_7423 = relay.const([-0.809490,-9.955743,-9.561957,0.570381,-7.345124,6.183174,-5.761772,-9.568215,7.331044,-0.964178,-7.155983,9.293221,-7.204964,-8.503112,1.477829,-5.817853,7.609355,-0.153522,-2.125597,-8.337899,6.450473,-7.753818,-8.283853,-1.794640,-0.579095,-6.863047,6.036566,-5.688040,0.821224,2.886749,-8.617098,-4.835149,-2.557297,8.846778,-5.367786,1.362212,-8.664430,0.093356,7.288335,-3.142296,-8.183057,-3.591063,-0.630188,7.775476,5.325054,-4.207717,-3.633282,0.186274,7.973977,-0.145375,-0.696285,3.289653,2.718129,4.275474,5.929509,4.441015,-5.271837,8.848046,-4.416169,3.108061,1.238852,5.157419,-8.052638,-9.112650,2.176800,-1.732689,-2.373374,-4.429085,-0.479503,-1.994507,3.498287,-5.042091,3.539840,-7.064039,-5.542853,-3.441750,9.784116,-9.859437,-3.687522,-9.238726,0.157277,-7.044783,-9.395372,4.169623,-5.980800,-6.922631,6.132206,-4.983998,-7.031315,-6.693008,-0.138322,-3.978309,-3.533390,5.347638,5.063929,6.791972,-7.319091,0.070232,-0.953952,-3.685278,-3.504788,6.162219,1.614784,8.041969,-8.542172,-0.673353,-5.871285,5.513252,5.509131,2.456221,-8.595628,7.562527,-8.792164,9.199939,-0.951958,-7.622145,9.433164,-8.311518,6.366716,-5.481814,-6.613910,-7.635335,-3.258153,1.365081,-5.283124,-6.421364,2.542365,-5.953472,-6.315905,4.772244,0.483208,-1.515058,9.989927,8.500281,-2.969470,-9.546590,-3.127513,8.978936,-8.452242,8.498420,3.672646,4.164447,6.648228,4.783474,-7.128601,-1.161102,-0.506814,-2.352840,-0.811845,-3.863284,4.376699,5.366023,4.477305,-4.196376,2.506252,-3.267071,-5.516384,-7.766365,7.971904,6.920804,-0.209183,7.873830,-6.397426,-9.918252,8.365476,5.904596,8.091811,7.215214,3.150522,8.327007,8.603466,-0.923218,9.854673,1.042741,-3.780642,-8.016907,2.874290,6.286230,4.730723,-7.764417,-3.243900,-9.496692,-4.818294,-3.025749,9.554611,-3.422522,6.974160,-8.918029,0.820060,-8.401091,5.571034,-2.884290,-6.807766,-2.637136,8.058176,0.520438,2.129530,-3.382926,5.962475,9.551322,-6.826979,3.877604,-1.335527,-2.803724,2.473833,4.352569,-6.995680,0.206539,4.288394,-1.829313,-5.424041,-9.367688,8.846712,0.548145,4.375544,-1.634410,7.494984,-2.086230,3.656787,1.874651,2.510954,6.987038,8.696723,-9.675790,9.341078,4.875835,-4.237811,2.977842,-3.010046,-4.322856,9.337218,5.224378,-2.748373,9.366043,2.549548,8.784212,1.471755,-8.227573,1.054369,-1.530633,2.581198,7.688288,7.260309,-7.187279,0.913870,-4.835719,1.635168,6.465633,3.973945,6.633067,-7.885270,6.296648,-9.784122,-2.493104,-0.588072,-5.814889,-0.353986,-4.826595,-0.395904,-6.045115,2.667447,-1.809165,-9.187568,3.399093,-4.762332,-2.848860,5.825476,4.655712,9.634090,1.665726,-3.878546,-5.371029,2.519622,-3.470285,2.851659,-6.314528,2.811230,4.755728,-7.351018,3.580290,4.659511,7.835308,4.996338,-8.218416,-4.959025,6.289121,8.219923,-0.895460,-7.383695,-9.180537,7.424555,-2.252974,-5.465766,-8.427047,-5.090502,3.506044,-6.111664,-7.299234,3.443587,-1.916998,3.482798,-2.368188,5.211902,7.124359,-6.420979,8.018041,-2.097525,-4.473548,9.942220,-5.192235,2.371896,-7.435303,-8.328251,8.248629,8.436965,-1.153968,9.467465,-7.939179,1.249306,-9.519989,3.037513,3.444846,-6.854691,-3.236584,-3.353589,3.061217,2.102661,8.979732,1.230189,1.336238,7.787481,7.212593,4.748144,1.631120,7.450672,-3.999865,-8.147510,8.343553,7.227775,-2.221008,-8.655996,9.712317,5.127863,0.736446,-2.812216,-9.493496,-6.372763,-1.718219,4.850630,-2.031335,-9.081651,0.310532,-5.539929,2.323470,8.436097,-5.164894,5.733550,5.052752,-6.463705,2.513210,8.484875,-8.983780,0.223543,3.946903,2.739258,-1.767000,-8.493249,-7.283147,-2.927223,0.739262,0.333217,9.019912,9.609117,-4.087696,1.517864,-3.173503,3.715514,6.750444,-0.588483,7.754755,-8.087668,1.232762,4.531831,-0.214851,1.033960,9.904138,7.966721,8.849899,9.577134,-2.688780,-3.185995,-7.037548,-7.159722,-3.425855,-5.530587,-5.920253,6.808437,-7.877223,7.266442,-7.186483,-6.046497,2.290074,-1.663256,-2.743228,-7.562025,5.834294,-2.357669,-2.922882,2.623356,1.464715,-8.224763,-9.963266,2.259454,7.727852,9.370433,4.932629,2.342779,9.285220,8.360827,-8.604320,5.737642,-5.454563,3.898112,-3.316705,-3.995103,-9.374834,0.210640,-9.724568,8.583647,7.035900,-9.915795,-3.331617,2.405601,8.340677,-6.500804,7.605146,8.652168,9.734637,-0.623989,6.464925,3.812113,-7.438905,1.310563,0.366595,-7.922239,9.304131,4.279398,-1.507474,-1.110752,7.500002,1.804858,-8.396327,4.140398,1.831598,9.836988,-6.210667,4.009437,0.255264,1.476757,3.835074,7.883716,-7.620360,6.390244,8.603440,4.715162,-6.486458,4.894611,9.449958,-3.253666,4.021006,-6.652747,-3.757034,-9.739788,-7.687272,-0.206378,0.377448,-6.531069,-0.642663,-3.104874,7.486716,-6.163082,2.739172,-1.803741,-0.563497,9.134691,-4.268587,8.895058,5.691712,-5.834046,-5.344828,-2.141406,-3.279460,7.758725,-2.325210,2.033959,5.949859,3.790901,0.698180,-3.338157,-2.110556,6.275045,3.699857,7.211371,-2.875654,-2.076439,-1.373338,-6.861539,5.490121,5.531135,-4.297954,-6.749997,-7.662269,-1.387196,8.347728,-4.689327,-3.545805,0.374522,-4.076663,8.728171,-5.304258,0.407108,-3.327671,-4.378573,-7.975465,9.402362,-8.950357,-3.035531,2.863270,-3.373667,9.995986,-8.313680,8.506060,6.108801,-6.527953,-2.113028,-5.690820,6.003909,-0.870112,5.661859,9.184023,3.445299,-2.022917,-8.286077,-6.372010,-7.296140,6.825219,6.542045,-4.740017,6.687943,7.997009,-6.464298,5.558891,-6.189976,7.236658,-5.929322,-2.763396,-9.050538,-6.809063,-3.342315,3.912329,-9.142900,0.087728,4.718120,9.327717,-3.668082,7.463247,-3.377638,-9.504673,-9.184985,-7.266487,-9.351060,-5.520612,6.164302,-9.233442,2.633796,4.385651,-6.064304,3.982561,-2.273642,-3.951415,-2.566983,4.147386,7.959955,6.612128,7.004094,-3.868969,8.754823,-6.814144,9.781006,-8.127328,4.809063,9.656502,0.381652,9.892752,7.948310,-2.664836,9.724359,-0.672085,-3.056619,-2.916612,-7.703706,5.426820,8.871258,-1.258779,-6.323523,1.245920,-0.334814,-4.820327,-1.177754,-8.539675,4.152183,0.379585,-2.599693,5.024258,0.394672,9.370066,9.031056,7.009404,-2.584733,0.338037,2.067873,-4.590832,2.461851,6.196596,7.742227,7.609336,-9.977319,9.255431,4.097665,5.770953,0.478445,-0.736916,-4.553744,1.696244,7.052160,9.450044,-6.344814,7.913087,-3.153839,9.092285,-7.069050,8.936222,9.169202,0.129397,2.072163,4.653282,0.147852,0.236628,-1.463589,1.596495,-4.127128,-0.063165,-7.020510,-3.058029,-8.562566,-2.830960,1.179585,0.395959,5.917815,7.848033,-8.975287,6.823100,-9.572003,2.366045,0.160113,-3.364736,7.001108,-9.535115,-9.119631,9.044437,-3.336782,1.472542,7.246025,-2.666737,-6.527964,5.878622,0.543749,-2.888368,-6.235748,-0.155924,-7.285390,9.960789,4.234490,-5.505024,-9.075102,-1.897375,6.172082,-7.070256,-1.940813,4.626647,-9.675910,5.667971,9.847983,9.649372,4.698737,-7.819094,2.285514,-9.002148,0.629751,-3.465272,-6.657593,8.808640,4.262899,-2.711672,-9.994363,-3.943567,-3.333223,-9.907129,1.477196,1.989781,4.425962,6.113454,8.751039,1.483136,-1.181537,2.075818,-9.523631,-2.758771,-5.400387,-0.526235,0.183182,-4.418634,-1.969070,6.414717,-0.842626,7.870189,-6.469024,-2.229437,-4.328168,6.740067,-0.652733,1.031961,9.122749,-3.597514,-1.146441,-1.138928,2.051261,0.743494,-5.271150,3.919976,-8.743846,-8.128163,2.638937,-9.597921,3.828234,-6.702933,-5.279620,-9.617312,-1.901378,-3.263068,4.075352,-8.527704,7.213872,7.210465,-1.795109,-1.799344,6.108065,-6.451807,-1.645641,-9.795723,-0.658032,7.549103,-7.116978,-5.930605,-7.530223,7.862598,7.974742,-7.708691,9.513215,-4.341932,-9.325736,-2.370081,-5.052932,1.827666,-1.414511,-6.639632,-8.764631,2.054098,9.303572,8.627394,-3.733323,-2.786776,-8.928176,-8.481766,-6.991822,-2.132759,-8.593814,-9.921858,7.353371,2.951624,8.041162,-2.240468,7.500813,-0.652057,7.887668,-5.865265,-8.275476,5.132644,2.535506,-0.969381,7.653085,-2.399169,-2.178630,-0.098171,-8.076670,3.881100,0.110261,-4.164592,6.465913,7.846323,-5.172361,3.270180,-3.626378,-9.151561,-5.979261,5.201535,0.406862,7.567512,-4.210993,4.760321,7.211867,-2.402746,-1.367414,5.727601,6.970499,-1.549438,-5.731861,-4.810965,-5.015052,-4.850137,-2.519266,-9.812899,-4.072211,7.518747,4.772965,3.131108,5.015421,6.628020,-5.881632,6.202154,-3.752242,-4.426398,1.813361,1.097492,6.957379,1.678069,-3.773233,6.741607,2.226229,6.473463,1.627841,-0.811903,5.985711,-1.986375,-2.233668,1.430481,4.073303,-0.907207,3.576538,-5.366658,4.577446,-2.666864,-3.980634,-5.284609,-1.998829,-1.755988,8.351645,-6.049451,3.001922,-6.734119,-9.337347,-9.766636,9.354332,4.973809,-7.856125,5.572226,1.552095,7.786656,8.941806,3.741046,-7.834798,0.223099,-4.392617,-7.078190,-9.577583,-9.596751,-5.016210,-5.518097,6.946628,-8.665648,-7.891339,3.441959,2.310511,3.432972,6.273312,-9.502637,-7.386368,6.428632,7.737023,-9.009369,-4.351506,3.198414,4.176314,7.525001,7.686518,4.043816,3.997613,3.346729,5.550823,-7.300365,4.936470,-7.550704,-3.335391,4.145823,0.664511,-5.813103,-4.200765,4.366337,3.235673,-0.778498,-3.303891,-1.134354,-2.520029,4.978964,-6.347010,-2.671361,-0.625122,-4.741838,-6.094962,2.907582,2.218558,-7.305435,3.026993,-4.113471,-1.615894,8.956703,-5.960214,-9.735523,2.339002,-2.324889,2.864121,7.976189,-1.874415,7.448312,1.937831,-2.343316,-3.093681,-4.649000,-0.818789,-1.655688,9.026478,-2.111325,-5.042325,5.481172,-6.838161,6.751121,-9.127450,6.297741,-6.074776,-0.162971,2.257985,2.504091,0.826197,2.431880,-6.789845,-2.147416,3.573213,6.860411,0.501531,8.774550,-2.609999,-1.558560,-4.783248,5.272570,-0.111715,-7.520730,0.448158,0.920637,-9.193365,-6.511754,-8.849085,-4.445649,9.463194,6.417682,-4.945884,-5.294663,-9.096839,-5.438324,0.236277,0.034177,0.438330,0.154418,7.391468,1.290632,-8.428763,-1.768381,-0.627725,-1.105557,-8.448038,-3.767163,4.791997,-8.540594,8.948062,-9.572111,-7.056773,-7.517023,7.727265,-9.080933,-9.794830,-4.831839,-1.178372,-1.043101,-5.501722,-4.208244,-3.629628,7.250942,-8.863126,0.624546,-0.873326,-3.422027,-8.173360,-4.339128,-3.076427,-4.731616,-6.654268,6.456383,-3.427219,9.132533,3.186137,8.244512,8.424405,3.118878,-6.341236,6.148500,-0.339816,-0.331892,5.078609,-3.582025,0.683138,-7.956369,-6.762862,-2.522209,4.283473,1.387376,-6.557267,1.724621,9.103951,6.318949,8.197260,0.890000,-3.354080,-6.272755,-1.981805,5.808287,-5.413502,-7.189012,-3.208323,7.540545,-6.433264,-9.782836,7.757587,-3.826614,-0.745335,3.230636,5.738216,7.357963,-7.383829,7.640992,-6.877567,-4.703374,-9.695785,8.917209,-9.745220,7.962411,0.276253,6.620175,6.299299,-7.596410,7.766583,4.910881,-1.390284,-4.556862,9.875644,0.129598,-7.558460,-5.058165,-9.351600,2.267241,-5.540065,-3.568676,-8.510217,-5.601909,5.747528,8.316562,-6.112520,3.403619,8.159682,8.103293,6.667071,0.552475,1.961398,0.631101,5.803352,-0.385330,2.645831,-7.229341,-4.237782,6.339552,7.847947,-8.888154,8.092593,-9.520585,3.463606,4.925415,-2.790838,-7.724260,-4.641587,-3.667721,0.870608,6.618415,8.595188,-1.498599,2.198875,4.965277,2.190943,-0.108570,-5.076941,7.662494,1.562958,-1.835574,4.900171,8.853411,-1.809466,-0.747286,-2.881804,-4.763644,0.184313,0.691141,-8.942991,2.964854,-4.304070,3.011911,-3.109862,-0.773155,2.766042,2.094716,7.698988,7.025406,-7.118815,6.028659,7.426441,-4.200749,6.294622,5.247319,9.189698,2.710701,9.027288,-0.525357,5.884244,7.253118,0.426057,-1.083594,1.612494,2.454472,8.297317,-3.610821,-0.341166,1.120397,-3.114869,-3.242433,6.781402,5.811794,-7.743616,-1.660579,-1.389423,-9.164654,-6.795140,-2.354585,-4.606998,-5.319694,0.861278,6.414693,3.491538,3.247275,2.716977,5.512683,0.939548,2.856240,-8.376504,1.243394,9.391257,5.392811,-9.984918,3.732943,3.055491,-9.657699,-2.187135,-0.686244,-6.879046,4.223897,3.285913,-1.254215,1.890178,-1.930123,6.649244,-8.489474,-0.748862,6.835350,-4.825335,7.385747,-5.038046,-6.497566,7.037249,-5.635032,-0.672180,-9.550668,5.431261,-0.547139,-5.197196,-8.205996,-7.443724,4.219347,-2.706497,-5.776823,5.620890,-6.497566,6.283742,9.843231,-8.208027,4.543836,0.559556,-6.505789,-0.561305,-6.118395,-0.567634,3.491949,4.971514,0.739961,1.903016,-6.278317,2.549213,-9.430851,5.979573,-8.899354,3.701561,-5.020890,9.784821,5.690501,0.768699,-9.768522,7.438249,3.074580,-9.659624,-4.837683,-9.122437,0.901992,-5.841616,-0.554488,2.770648,8.005629,-0.558442,9.672593,-2.355304,-0.367145,-3.703680,2.936231,-2.920488,3.472199,4.168492,-8.100976,-3.618345,-8.509298,7.169981,7.125987,5.124974,3.823012,-7.195819,5.282770,-9.257325,6.045400,-3.778147,-8.464179,1.777985,-7.144026,0.527627,-7.588502,-8.421745,-7.473527,9.844446,-6.394076,-3.261356,8.721801,-3.961359,-0.726864,-1.241599,-3.521145,-7.603023,1.333737,-9.195856,2.235743,-4.646878,6.188274,-7.516671,-6.115770,4.031862,-9.721382,-6.000478,8.997744,-6.949536,9.313822,0.222127,1.067484,-6.941212,9.194941,-7.427382,0.774447,-3.838354,8.004544,-4.424784,-6.990233,-1.788002,-7.925983,-0.378602,-5.228709,4.913606,9.008251,8.914626,-0.344829,0.998982,-1.112049,-8.746859,-2.374163,-9.854822,2.772118,0.799647,4.050986,-6.685153,4.209972,0.940423,8.510556,3.477791,3.555003,-8.452126,9.921786,9.135894,6.020874,1.312886,-4.065753,-1.019277,-6.779525,9.631006,3.988037,5.488833,8.493536,-2.107173,6.965861,3.288404,-7.326905,7.601108,-8.085613,5.754653,-4.326823,7.600974,2.017055,7.235608,-3.605838,9.078082,-6.115415,-5.061010,5.955982,1.465237,-7.754799,5.437418,-3.454191,-5.738373,1.512543,-4.278337,-3.489242,-7.109876,7.763437,-1.745446,-6.590976,-7.905731,-1.478422,-4.435078,4.431316,2.890770,0.005501,3.621572,6.836480,-6.348840,9.653249,-1.460733,-6.664771,4.670343,-7.890288,5.922411,1.387174,-6.407124,-2.824887,8.624383,-0.580646,-4.095554,6.602073,6.558796,3.805072,8.006915,-2.942345,2.043010,-6.193946,2.133351,-0.594043,-5.944872,-1.753268,1.810268,5.347111,-6.823421,3.494242,5.721875,-6.569837,7.549066,-5.032171,6.974444,7.084835,-7.949241,7.815276,-0.554110,-4.398835,-4.310635,5.493906,-3.471973,-4.174640,-0.163734,2.383271,0.992308,-3.181911,3.870836,9.561609,-7.677828,6.784315,4.666119,-6.887142,-2.567453,-4.938671,8.400710,8.147665,-2.747920,-5.219728,1.699787,1.435941,-6.743488,-0.985595,-7.405435,-0.427203,-3.539177,0.114641,-3.331713,9.865870,8.911887,7.388638,-7.004904,-1.086700,5.340137,7.491509,-2.398157,9.313588,6.899558,-7.979980,4.654446,-0.761031,3.861276,2.940568,2.713129,-2.133216,-4.054894,9.105069,-8.121440,-6.520867,-2.404054,9.834581,-3.194286,3.609468,-3.118627,6.433087,-9.678772,0.620936,-5.492018,-2.732252,8.317918,-4.992931,-7.456009,-2.677373,3.589885,-4.390871,8.255794,-6.062611,-6.463797,2.317783,6.149420,1.847349,-2.462777,1.765452,4.222303,-8.355782,0.479338,1.003844,-1.054574,-8.420591,-5.139877,2.495812,-6.987186,8.201499,-3.735665,8.994770,9.078797,7.548488,7.533147,-5.979972,-4.161188,-8.044267,6.145702,-1.063218,9.510026,0.596368,8.629667,9.628329,-5.488220,8.428543,9.405562,7.781507,4.569657,-0.884522,4.179513,1.485778,9.404073,0.165931,9.936138,-4.248297,5.017077,-2.568147,3.520784,-8.639435,-2.414410,-0.145000,7.041787,7.944701,-6.915753,3.810905,-6.736853,-3.675315,-8.771235,9.097043,6.003494,2.591411,4.521105,7.809230,6.869753,0.249418,3.723853,-6.186587,5.968333,3.840868,0.960237,0.816627,-2.162675,-2.914885,-9.359983,-1.775858,6.245966,-3.125355,-1.386206,2.351913,2.536126,4.866691,-4.873606,0.867955,8.285920,-1.555676,-2.453344,4.182455,8.313485,1.943526,6.533552,2.462134,4.579137,3.797143,9.107098,-8.168136,5.552973,-9.243570,0.228540,2.056848,-3.254547,3.688608,-9.949886,6.415275,-7.608189,5.584583,4.490544,9.114056,-3.906806,-4.139000,3.656950,-3.449043,-0.096525,8.371650,6.087254,0.462626,-1.147450,-3.211800,1.487757,-5.967847,-4.456167,0.652578,-4.992112,4.099071,7.120097,-4.612116,-6.032607,-6.839579,3.304033,-0.613556,-6.049982,2.974692,-7.835549,8.203268,8.203941,-5.673063,7.800265,9.030822,-7.498732,-3.154548,-0.343937,-4.432308,-7.843733,-0.431385,-0.844133,-1.453812,-2.091384,0.997414,3.449206,-8.469475,-8.305137,-4.139488,-5.408895,5.177024,-8.748053,-6.243646,1.526463,8.087953,9.549201,7.466955,-6.993549,2.917553,3.813170,-5.707327,1.504750,-1.363078,2.297289,-5.014274,-9.284758,-2.070455,9.238197,-7.504595,8.536415,-5.847795,2.533033,1.738591,1.859478,-8.934786,4.368604,0.951952,9.399153,2.803601,6.525391,-0.933558,6.560769,-6.008966,1.081710,2.369183,5.194657,-6.475148,-7.135641,-3.475615,-3.401194,-9.859710,9.161393,-7.107653,4.145699,7.679497,7.903648,4.427118,-6.912117,-1.939105,-9.754490,2.957660,7.114806,-0.507433,8.787283,-7.820418,4.765838,7.016458,-4.368361,8.546827,9.157697,-8.880204,-9.063531,-4.297695,-5.810287,-6.388798,-9.490455,-5.266846,5.455256,0.150187,0.224703,-2.598943,7.903419,-6.972322,-8.686875,5.109747,-4.077438,-1.588246,9.950367,-2.808473,7.631336,-6.042640,-5.768766,-7.442185,0.911774,-4.680353,9.018959,1.554061,-3.201080,-8.021936,5.644757,3.824363,-9.967700,-7.598476,-9.594816,6.832040,-9.752220,6.849197,-2.589773,-8.813564,-1.112343,-7.247971,-6.497587,-8.794789,9.639806,2.267697,-0.737506,5.805091,-6.777040,1.098870,-5.301607,0.203692,-6.372181,6.455097,-6.649199,5.578035,-1.626627,-6.034270,4.295452,8.715635,7.657751,-9.951652,3.414501,-3.632841,0.273711,-4.793551,-6.993736,-5.753293,6.414317,3.300184,-4.313696,-2.252944,6.283187,1.662206,2.759025,2.156465,4.781733,-7.473447,5.485840,-5.342425,-6.111767,-0.643014,-2.106261,-8.776074,-0.073528,0.687565,-4.853334,9.273029,-2.914809,-8.440963,-5.309966,4.128654,6.285443,-2.778600,-9.980696,-3.306828,-0.719603,-9.637092,9.696623,-7.176817,-9.698876,-7.610769,7.630214,-9.467053,-2.515354,3.591484,4.064682,-0.011739,-6.213806,9.237821,-3.684497,-2.279493,6.339126,4.542745,8.455728,-9.176768,-8.952312,-7.926176,5.022692,0.866820,9.857667,-6.897683,1.280976,-9.336090,3.897709,4.581363,6.291143,-0.077609,-3.593181,7.486760,4.782909,9.214003,7.633354,3.395957,7.875243,-1.921158,4.624516,5.139242,-3.004750,9.067089,4.897293,9.027911,-9.021126,0.351002,7.042889,-2.813070,2.456832,-9.247730,1.551385,0.411873,6.931528,6.328412,-3.316748,7.522127,-1.847016,-6.489902,3.464900,-4.510942,-1.601399,-6.090365,1.438952,-8.429453,8.704794,1.092373,4.255381,8.042489,-0.243231,0.280990,6.702313,0.227272,4.949408,0.769682,5.869659,-9.646660,-8.319812,-3.376760,8.301502,-7.157677,4.955026,9.284001,-0.679796,2.690150,-6.265102,2.033220,-3.675241,0.330477,-5.110181,-1.739784,1.976269,4.316174,-6.345223,5.919916,4.602228,-6.969296,1.066742,8.417949,-5.162069,-4.856790,0.028515,-1.863544,1.949661,-5.136802,-3.507214,5.564463,1.312658,4.434773,-3.898190,-9.246814,-5.765016,4.500420,-7.261033,1.131265,6.594229,1.569179,7.110807,-0.072184,-2.005494,6.069013,-9.128194,-6.303905,7.602148,3.872214,-1.999964,2.285862,-1.313486,-4.384523,4.412702,9.475314,5.870790,-7.582388,-3.024035,9.813986,7.098394,0.742449,-3.454192,2.335603,-2.843925,5.061122,-2.334062,0.094760,9.192729,-9.735701,-0.054675,-5.387880,-4.383839,-2.444916,1.203703,8.999233,-8.030441,-7.075710,-7.769710,7.973919,-5.324302,6.148958,4.911323,2.282153,-1.930460,-0.063903,9.112197,5.227218,0.961989,-0.563831,6.664195,5.429085,7.084857,-3.042630,6.910078,-5.638075,2.252726,7.464132,-9.734836,1.021344,-8.280775,0.871040,-2.172659,7.568385,4.132979,6.803812,-2.905751,-4.086920,-7.688138,1.321277,-0.756608,-2.977624,-6.551208,4.592179,-1.141475,3.829576,-6.113967,2.753188,6.772394,-9.924206,-1.684879,-3.318294,-8.367456,-8.800331,2.799230,-1.871509,8.483809,2.981353,-6.532893,3.007440,-2.720777,7.693888,7.002603,3.063447,-8.202694,4.700636,0.381326,7.277883,0.343735,2.719957,7.962110,-1.756325,-4.993315,-7.532303,-2.967569,2.912482,1.038198,3.857472,5.132079,5.683799,-1.611116,6.729355,-4.911498,3.846269,-4.344987,7.659103,0.301391,1.926866,1.730311,-4.888660,2.900477,-5.281165,0.341914,7.745119,2.203936,-3.940542,-8.191950,3.710158,-6.152523,-6.522758,3.553357,-0.189959,9.870323,-7.316705,-1.437779,7.906514,4.090537,-3.704978,1.175622,6.401072,-6.374778,1.296091,1.945269,-8.737030,7.853512,9.451933,-0.469355,0.411475,2.680348,-5.285195,3.285895,5.089447,-8.711667,8.432126,9.283616,-0.846411,-5.901495,-2.228287,-5.590631,6.353325,9.669269,5.352632,-2.646325,-4.236136,-8.949512,2.233088,-3.969293,-7.894295,-3.519080,-3.487245,4.906575,-5.603863,-4.090948,4.396013,9.170264,0.579014,2.593440,-8.055226,4.236031,7.787814,4.796300,6.158132,1.132943,-3.699217,1.227816,-7.472998,0.430676,-5.779516,7.156542,3.065466,-0.384029,-8.066935,6.086978,-0.605504,2.598063,-0.412744,-0.679983,-7.324873,-6.650463,-7.127640,8.407453,-8.312462,2.130798,2.526187,-7.282595,5.923472,7.992515,8.938394,-4.120173,7.225041,7.539129,-3.229235,-2.085581,-6.557632,-4.547206,-0.748650,7.680715,-4.631519,-3.803449,4.728056,-8.436026,8.428738,-7.546493,-6.407537,-9.170643,-6.584770,-5.689134,-3.904345,6.873464,2.073793,4.158093,-5.240179,-1.962952,4.437151,-4.701342,4.518861,0.431392,-6.643812,7.571975,-9.994557,-9.857182,-1.403494,4.561886,3.246737,4.192727,-4.014609,0.639772,0.501324,-5.471475,-9.052704,3.561941,8.210027,-1.028350,6.157024,5.389590,-4.883310,-0.665509,-3.441253,4.322168,5.513957,-1.832397,1.298694,-0.380236,1.936751,1.302151,6.234319,0.271817,2.639364,-5.103737,-1.055084,-3.535681,0.852784,1.146448,-8.992264,-2.049853,4.609211,-8.271259,-7.947255,7.280719,3.019658,2.666602,1.161424,2.214403,-0.877120,3.730641,5.361361,6.406054,3.361149,-4.350111,8.283862,2.245118,3.791368,1.010119,-0.015797,9.431684,0.793922,-4.347362,-2.180878,9.268602,9.475397,2.991581,-6.513452,7.791012,5.759974,-8.965356,-8.234572,5.210427,4.553951,8.704713,3.982880,8.133908,2.123541,1.213267,2.869976,0.678634,-8.281377,-5.042553,2.865784,-0.230291,0.624901,-8.232781,-8.859232,-8.206135,-9.482824,9.897359,-6.433788,1.116295,-9.163338,0.668203,8.810995,-4.321552,1.939968,6.661340,-5.635345,2.443758,-4.042515,-4.857630,8.485670,-7.318350,-1.524436,7.480930,-7.000808,9.078340,-4.477137,-6.398183,6.741364,3.625200,0.979979,7.008285,-3.296728,-4.907976,-9.439259,8.050062,9.041029,-3.721412,7.116254,-2.388005,-4.370762,-7.284770,2.507082,-2.845363,2.406629,9.480902,-6.543689,-9.228236,-8.281168,8.589504,2.146540,-2.376078,-5.333925,7.417989,8.593747,9.414034,7.336347,-9.152626,0.236123,7.873619,-2.214475,9.316270,9.557833,8.927479,-9.069683,4.867443,4.026156,-9.990429,-7.886107,1.983436,-4.824990], dtype = "float64")#candidate|7423|(2304,)|const|float64
call_7422 = relay.TupleGetItem(func_2105_call(relay.reshape(const_7423.astype('float64'), [16, 9, 16])), 0)
call_7424 = relay.TupleGetItem(func_2108_call(relay.reshape(const_7423.astype('float64'), [16, 9, 16])), 0)
output = relay.Tuple([bop_7413,uop_7417,call_7422,const_7423,])
output2 = relay.Tuple([bop_7413,uop_7417,call_7424,const_7423,])
func_7436 = relay.Function([var_7411,var_7412,], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
var_7437 = relay.var("var_7437", dtype = "int16", shape = (2, 16, 4))#candidate|7437|(2, 16, 4)|var|int16
var_7438 = relay.var("var_7438", dtype = "int16", shape = (2, 16, 4))#candidate|7438|(2, 16, 4)|var|int16
output = func_7436(var_7437,var_7438,)
func_7439 = relay.Function([var_7437,var_7438,], output)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7487 = relay.constdtype = "float32")#candidate|7487|(1, 14, 16)|const|float32
const_7488 = relay.const([[[4.088491,-6.625056,-9.667210,-1.192566,5.967605,-3.105358,1.013068,3.536227,-7.322026,9.472210,-0.777650,-9.477013,6.112749,-3.641820,7.262886,-8.927234],[-2.649231,-4.562077,4.371789,6.965347,6.354711,5.154202,0.860165,-1.421613,-5.060269,-3.434693,-2.895140,4.511949,9.478850,-4.972038,2.498616,7.462370],[4.275892,-9.978739,-0.191730,0.543935,-9.847630,-4.690574,9.876398,7.496686,7.918743,9.570949,-3.101583,2.620671,-6.139564,-7.300927,-3.126204,6.171101],[-5.478988,0.427462,1.144488,-7.096684,6.770184,2.265501,1.949124,-8.269898,6.274446,5.768140,-0.011390,0.626606,-8.876921,-9.480001,2.006825,-3.317243],[-3.012438,9.870188,4.896130,3.653897,-0.688906,9.613634,2.380888,-4.976430,4.386588,-1.899206,-4.156801,-7.613716,-3.362775,-2.106074,-1.019047,6.033426],[-6.308046,4.048085,-4.596824,-1.323649,5.429948,9.240248,-1.358392,1.558760,6.398505,0.807444,0.515453,-1.529412,1.895961,-0.635160,3.656783,-8.892565],[-8.015520,5.061474,-0.800036,2.582063,-2.499539,-3.420938,7.548225,-4.591267,7.001361,-9.712881,-8.455826,-2.196071,7.314104,0.617573,-2.822232,-6.254367],[6.189919,-3.616334,-2.567085,-8.887643,-7.517328,5.245604,-5.433100,-4.615771,1.291281,2.680369,2.569757,8.881976,-8.518118,8.033943,-1.911775,6.561525],[-3.522087,7.230821,7.838057,0.833880,-7.951982,0.546658,-3.522658,6.524163,7.867175,0.287069,-0.331806,8.416809,-7.744146,-2.166785,0.802168,-1.142925],[2.861293,-5.007519,0.496729,-9.978863,-5.750987,3.279621,2.882185,-2.345201,1.707133,0.658142,1.273783,-7.236344,3.768053,-9.790152,-3.426929,-6.283108],[8.301828,-0.282772,-6.162505,-4.240999,6.384976,-5.198045,-1.290060,7.169639,-2.225441,-4.093606,8.171183,1.046784,7.916854,1.806317,5.953267,9.246352],[-4.757294,6.547255,-0.299428,5.765351,0.712085,-6.301267,1.532027,1.739254,-2.189597,9.115726,-5.972900,-9.394906,-9.978514,4.870201,-7.909441,-4.567661],[2.704194,6.747531,-7.638796,5.005444,-6.000802,0.689061,0.456539,-4.026015,-6.806757,1.197791,-8.551574,-8.277046,-4.825245,-3.032068,-2.460174,1.187245],[3.605535,8.546605,-1.818867,6.256654,-3.858121,-4.049565,-7.074636,7.966508,-6.488449,4.890497,4.602537,8.163903,-0.339193,-7.910612,1.008578,-7.561365]],[[-4.702523,-7.429850,-0.596978,-8.730797,-0.868677,-5.379507,6.642443,-2.462737,-8.749687,-7.062901,2.215861,9.307186,-4.443023,5.667041,-5.836790,-7.636505],[0.109306,4.324185,-8.173604,9.991478,-5.211665,0.512245,8.074168,1.784434,-5.433412,1.084768,0.101540,4.054989,-4.592163,2.640171,-5.350675,-0.800284],[-3.771421,4.341447,8.316722,-2.750082,-0.286739,7.382729,0.120613,0.449175,-3.329255,0.875896,-8.621819,1.464009,4.176349,9.004181,-2.281863,-7.083637],[3.053921,-2.976730,-8.352443,-1.241424,-0.774397,-8.787530,-7.041628,5.415904,9.381340,-2.696368,0.189390,-5.062919,1.277589,-2.054367,9.403724,-8.709788],[-7.497261,9.345053,6.793434,0.406062,1.677642,8.436109,-3.671097,7.392874,-5.335841,0.804762,3.770060,-9.014696,4.263624,9.842152,9.822562,9.499436],[-6.232065,-0.197125,-3.316453,7.375449,-3.370503,1.372111,-6.849613,-1.916082,-4.085328,-6.177778,3.428876,-1.655552,-2.639800,-9.840021,-9.621699,7.888536],[-8.700748,-8.115245,-2.659736,3.040280,1.483298,1.563349,5.094465,-3.126483,2.639804,5.838313,1.188405,7.142978,8.025392,-4.978653,5.266882,-7.132506],[2.068028,-7.351627,2.755377,-8.500439,-7.613573,-5.642901,9.898332,5.785223,2.370406,-7.884864,0.788071,-4.695984,5.494294,-9.365955,8.562361,-1.154031],[0.381803,-4.547185,-2.152915,4.189161,-4.609875,-3.805546,-9.015656,-4.106015,5.981427,8.514638,-5.116136,1.452886,-4.413202,-7.526565,4.239998,-9.022065],[0.004423,9.135611,-5.286943,-1.236157,-3.349330,-0.119628,-1.018728,-7.131060,1.411002,-6.948019,-2.906079,8.911251,6.548919,-7.644850,8.025927,-8.535628],[0.286327,-4.359735,-2.760099,-4.955470,-6.108214,-6.498014,9.101539,-9.643213,-7.497132,-2.501368,-2.209374,7.389518,1.699755,-2.428072,-2.524573,9.159820],[-8.723346,0.440788,-8.480953,6.611899,1.593739,2.503435,9.852997,4.497470,6.088311,-3.707056,-4.816180,8.963965,8.002369,-2.617010,-6.824149,0.209746],[5.245319,-9.618060,-6.131786,-6.359581,7.800782,-2.592725,0.453690,-2.823461,0.981021,3.590689,-4.584400,6.544149,-0.262682,8.114015,0.243212,-7.002733],[-9.872755,-0.081443,-2.994759,-9.760943,-8.492269,-8.971223,-9.484523,-8.343174,1.314561,2.549718,9.963817,1.730103,-3.482315,-1.784342,2.747562,1.473334]],[[7.339290,-2.071209,-2.994247,9.469153,0.176436,4.532114,-2.992279,8.037067,5.377064,1.805001,9.394214,-2.192090,-2.907178,6.528298,7.336514,9.520602],[-4.225903,5.496576,-2.673351,-4.191925,-9.582038,6.027545,2.917360,2.513332,-2.505459,7.819468,3.038483,1.966011,6.468275,-0.316631,5.999563,0.170853],[8.845077,6.035624,-3.772964,-5.427452,0.998176,0.422895,-6.141452,2.289348,-6.489490,1.027444,-5.244858,5.614952,5.766444,7.396623,1.948361,6.593980],[3.845982,-7.304194,-4.832704,-0.757265,-0.512683,-6.083372,-1.945089,4.063421,6.517218,4.944961,-6.634636,0.110483,-1.709715,-4.060845,5.057406,-7.850245],[-8.038392,-5.745469,8.593560,-0.187319,2.157082,1.029101,-5.316750,-2.263110,0.403846,-6.163415,-6.225795,4.947045,-2.426444,-1.407953,9.140118,-0.724393],[1.543212,-2.283831,0.820506,-3.670077,-7.815769,0.206894,2.082321,-7.964138,8.722939,-1.595121,-2.201979,-9.349963,8.395699,-6.427646,3.533939,4.698140],[-9.346421,-5.983322,-9.333557,-5.381423,-2.630335,-0.177184,1.509779,-8.572139,7.417445,-5.786072,-1.687859,-6.063958,9.431925,2.642349,5.999990,6.748710],[-8.336098,6.329804,-1.705847,1.590676,5.737857,-3.319710,-5.327236,7.898096,7.635384,9.382762,-1.800022,-0.526608,6.483571,5.371132,-3.857973,-1.175701],[-2.361624,7.095566,1.555523,8.357434,-4.452437,9.544300,-7.587345,-6.083299,-9.991530,8.968808,0.556010,-1.443135,7.342186,2.465664,-0.339339,0.552345],[-4.872533,4.493736,3.710515,-1.419135,6.419503,2.660553,6.525104,6.052548,7.151428,-2.703961,-2.824286,1.825567,-7.077000,0.176886,-4.171934,3.752392],[-1.305703,-2.619823,2.087802,9.223138,-6.755227,-0.581430,0.382605,0.394335,9.813575,8.090670,-8.094720,1.748199,-4.575609,1.319335,7.744430,7.260374],[-0.309075,-9.983448,-8.029920,-6.430244,-4.077165,-0.226124,-6.614080,-3.650114,-3.000435,-7.761529,2.408930,0.747228,-9.867055,-7.282799,-2.529635,8.612048],[-9.295198,-4.757473,-8.377868,6.457891,-8.336923,-5.558365,-4.090377,-3.875911,-1.577422,3.180874,-3.942136,6.622723,-6.471380,0.831978,7.416292,3.903186],[-8.267424,8.597465,-7.330820,5.448945,-8.411649,7.384572,-8.787748,6.957168,-6.103328,-5.459602,-5.136645,-9.758056,-8.651015,5.211292,-0.382088,1.814484]],[[-7.161630,0.832987,8.453658,5.615194,-4.912023,-5.133937,-9.012778,-9.911752,5.541613,-9.315544,-1.471280,-3.358327,-0.383377,9.769356,-4.169363,6.684925],[6.024328,4.749031,0.918756,-0.959740,1.887574,-3.600804,1.604894,9.730779,-2.960161,-0.151921,-7.555125,7.549873,-5.864494,4.369966,4.164966,7.490113],[-6.295431,2.245452,-9.063686,3.026535,7.061359,7.499565,-1.413972,6.230979,-9.166583,-1.885254,-8.812999,5.786732,-0.483947,0.961725,4.211620,-1.038492],[0.541328,5.928927,3.865803,9.167426,8.854273,8.350601,1.202313,-4.743282,-4.960118,-4.426493,-3.846495,9.665250,2.028372,-0.296662,-8.197110,-6.375383],[-0.403600,0.315505,-3.038268,-1.275885,1.014827,-0.150026,-4.769606,4.696591,6.154820,8.202816,8.118003,-7.713367,2.017633,-8.527491,2.308685,3.402071],[-5.083562,6.042513,-8.320906,-6.822347,-5.860293,-6.728923,1.452671,5.085790,-7.070695,-0.507615,-4.314238,-8.625515,8.119242,4.422631,7.042387,2.649307],[3.544228,-8.111787,-3.682488,2.414000,1.950966,-7.530438,3.023447,5.595838,-2.083494,-1.218065,-6.037742,3.984443,7.939394,-2.291484,0.951869,-1.063953],[5.889531,-4.187481,-4.919734,-3.104273,-5.193859,-5.209647,-8.015405,3.561209,-4.718803,1.702080,-1.427970,-4.128096,8.562529,-6.729298,-5.068975,5.129142],[6.514735,-2.331745,-1.430000,-8.201583,5.075994,-2.337663,-6.415700,-6.422324,2.557275,-2.972866,-4.512071,8.627910,5.193549,5.632296,6.584740,8.923424],[-3.637540,-3.618858,-3.563973,5.298025,1.151005,-9.132281,6.451002,-3.967402,-3.622769,-5.844301,-9.903216,9.274409,5.191792,9.632569,4.802826,-8.033665],[-1.892081,-0.361020,0.487798,-6.236525,-2.069052,-4.132620,-3.268808,-2.023082,4.533261,0.442514,8.990005,-9.207687,9.856472,2.569078,-9.696012,3.484257],[-2.597784,-9.455585,3.544953,-1.295263,7.348927,-5.332135,-5.150325,-2.229518,5.609616,0.160019,-5.476315,-5.741454,8.624942,2.153325,8.727967,6.018055],[-8.794013,3.200687,-3.769935,7.206124,-8.759266,4.629931,1.323962,3.657922,-9.331668,7.945856,-3.654195,-9.583031,4.433455,8.505867,-0.645050,-4.376585],[-1.600099,6.988164,4.679874,-4.566860,-2.303962,-7.831968,-9.738257,-6.149822,-0.444902,0.975690,9.906676,1.491626,6.343359,8.449418,9.867893,6.793400]],[[6.554857,-3.232783,5.527689,3.616476,1.053078,9.548856,8.546307,-0.143308,3.666273,-7.807885,3.350501,2.948483,-1.213522,0.625927,-2.616096,-4.341793],[3.052750,3.825001,0.706369,-6.038413,-5.322727,-6.768833,8.280657,-6.701987,7.556827,-0.689737,-0.603502,0.066019,-5.673686,-5.257673,0.094870,7.847431],[4.193922,-1.755592,9.122399,4.484545,-9.950580,3.805403,-0.751085,2.177513,-0.053181,5.273479,6.035332,2.685312,9.426294,5.398500,-5.952709,6.578329],[2.505164,4.398133,-5.497050,-1.408426,-4.940413,-7.207232,1.493440,-9.005691,5.792533,-8.241390,8.351643,5.634112,4.579362,4.680109,8.833350,-7.925652],[-0.613317,8.895227,-2.647432,-0.397499,7.629063,-4.149439,-0.658430,-5.705265,-8.371566,-0.709321,-3.921923,-9.670624,-2.212589,-5.688942,-9.997750,-3.567284],[-8.455082,7.609317,-4.132223,6.313801,-1.207494,-4.338398,7.323249,0.423841,-6.213592,1.357750,1.961630,-4.131202,8.152089,5.921901,4.647817,2.499860],[7.540551,9.427737,-2.710050,8.719092,-1.797775,0.756850,-3.668996,0.864619,-8.938423,0.182936,-5.305668,-8.659010,-0.061522,4.187844,3.109693,5.240520],[3.458524,-5.259929,-5.431380,-1.836529,-4.002999,-6.344393,-5.401274,0.330120,-2.049171,-8.870377,-6.270062,-7.685592,-4.769598,0.437500,-1.657037,-2.256667],[8.589735,9.357961,-2.453558,-5.735044,5.643192,2.280084,-7.678669,3.395596,-0.693996,6.865584,-3.790938,8.267785,7.221758,-1.704471,-9.778012,5.231296],[-0.767889,2.422476,-3.706561,9.536556,-8.868338,-4.918044,5.569113,3.462220,6.879166,-1.589819,-8.940249,3.256303,-1.686062,-3.878465,-6.528456,-6.219740],[-3.624758,-7.457837,5.108690,2.916128,-7.817389,-8.920055,2.636742,3.262226,-9.162955,-8.254716,-9.201261,-0.001436,2.221787,9.172586,-5.968603,-4.083086],[6.834638,-6.302551,-0.722781,-6.232759,4.880041,-1.867732,-8.039656,1.398193,-2.564500,3.508674,2.402741,8.615368,-0.527107,2.681518,2.066775,-8.546274],[-5.789375,4.168071,-3.886489,7.269596,4.229102,-9.020127,-2.337438,-5.275305,6.052552,3.071800,-7.192820,7.985178,0.362095,3.500391,7.942108,8.401961],[-5.542661,-6.584639,-4.315210,-0.263688,-1.183335,9.763821,5.584154,4.515738,4.039984,9.968469,5.668888,6.540402,1.419014,8.376826,-1.077013,-5.233858]],[[-7.571314,3.366540,7.024546,-2.147461,-8.189438,-4.670475,0.559591,-2.789420,-6.484246,-8.553666,-0.206035,-9.292749,4.592947,-4.149384,-2.872865,-0.401619],[-9.437531,5.822311,-8.362739,1.743583,0.490903,-4.666784,4.196964,0.888073,-1.638498,4.038038,9.173256,7.633371,-0.486523,-8.105433,-2.349464,8.324125],[-0.583316,-9.596038,-4.535222,6.596590,0.434747,-1.646785,-2.349295,-5.536432,-9.251407,-5.265699,0.369370,-3.922480,2.206308,-2.904156,9.754475,-9.467131],[-7.190845,-9.336519,-2.354753,-5.070711,1.353434,-2.919133,7.267443,2.788159,1.340728,6.843281,7.160894,-5.635365,8.820793,-7.095490,-4.441638,-7.270023],[-1.384786,4.319780,1.297957,-5.049905,-6.762090,-3.293868,-2.096261,7.808800,6.899994,-5.282332,-6.970086,-3.513717,-6.211138,1.036849,0.066220,8.599539],[-0.273384,2.317052,0.108061,1.808090,-3.649925,3.856506,7.649713,-8.673852,5.414994,9.704071,2.816310,1.925743,-0.465893,-4.805272,5.269970,2.892833],[-9.711115,4.060772,7.204197,-8.240727,-3.510833,-1.222697,-6.509483,2.093928,8.406247,-7.254448,-6.752404,-4.011962,-2.490213,-6.546846,1.890984,9.420448],[-4.699610,7.037465,2.777293,-3.793426,0.028575,4.313606,2.872537,8.005300,5.858521,-8.145568,-6.989522,0.534026,7.878906,-6.519847,6.901644,8.200703],[-8.621765,3.348387,-5.003576,1.798090,-4.331528,0.548800,3.198269,6.490391,-2.328217,-8.600655,-6.554380,6.350917,-6.132145,-1.740259,-2.708072,6.323686],[-3.529827,-1.468320,-2.244289,-2.477914,4.584423,9.390458,1.094591,4.922957,-3.475662,-9.968894,8.642807,-1.513074,1.949751,-8.947646,-1.726416,-6.704790],[-1.669800,1.004186,-7.743944,-7.873172,-0.733885,2.044131,-1.038888,6.630889,-8.710557,7.818399,-6.180882,8.215348,4.877781,3.174214,-1.762069,-3.994233],[-2.346303,2.336998,-7.430164,-0.653475,2.812087,-0.792673,4.906962,-0.263888,7.899479,5.091437,-0.336464,5.654679,-2.268019,5.988209,-3.233331,-4.134140],[-1.252366,7.725515,0.874430,9.654986,6.542405,-3.743512,2.177239,7.731672,-6.233540,-6.041362,5.382541,-6.940121,-2.797686,-1.348399,-0.746032,-2.289954],[9.492321,7.268443,5.761941,0.604344,-4.910160,8.341534,2.061870,-1.854973,-2.690347,-1.478873,-7.891129,6.455244,-1.074758,0.733632,-0.105607,3.760171]]], dtype = "float32")#candidate|7488|(6, 14, 16)|const|float32
bop_7489 = relay.mod(const_7487.astype('float32'), const_7488.astype('float32')) # shape=(6, 14, 16)
bop_7498 = relay.not_equal(bop_7489.astype('bool'), relay.reshape(const_7488.astype('bool'), relay.shape_of(bop_7489))) # shape=(6, 14, 16)
output = bop_7498
output2 = bop_7498
func_7521 = relay.Function([], output)
mod['func_7521'] = func_7521
mod = relay.transform.InferType()(mod)
output = func_7521()
func_7522 = relay.Function([], output)
mutated_mod['func_7522'] = func_7522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7526 = func_7521_call()
call_7527 = func_7521_call()
uop_7528 = relay.log2(call_7526.astype('float32')) # shape=(6, 14, 16)
uop_7530 = relay.log2(call_7527.astype('float32')) # shape=(6, 14, 16)
func_5181_call = mod.get_global_var('func_5181')
func_5188_call = mutated_mod.get_global_var('func_5188')
var_7543 = relay.var("var_7543", dtype = "float32", shape = (216,))#candidate|7543|(216,)|var|float32
const_7544 = relay.const(6, dtype = "uint16")#candidate|7544|()|const|uint16
const_7545 = relay.const([[-0.931876,0.685630,8.507252,-6.005611,4.136424,8.818586,-1.139935,9.392071,6.030948,0.337649,-9.310532,9.727762,3.660532,-4.045221,-3.700836,-0.885721,-6.038285,3.883664,-9.831846,6.025149,5.109980,0.459522,-6.691050,-1.174117,8.283404,-9.738920,7.503240,2.036873,7.456770,9.157068,2.074091,-1.355026,4.429285,6.166380,2.936962,1.821476,8.013069,-3.709411,0.679013,0.927714,4.296243,-9.030087,2.726064,0.881844,-1.298377,-5.536718,-6.955682,4.237754,-7.964460,-9.339489,4.598359,-2.025740,-7.308213,0.492754,8.248487,-2.257978,-6.810380,-9.940603,-6.327210,-8.624408,-1.181004,-4.125189,6.474290,-2.156282,-6.121025,-4.861235,9.471210,-1.902342,5.064475,3.884470,8.621478,8.304257,8.585550,9.093187,5.715687,-1.830478,9.509756,3.345438,-3.825545,-9.793012,-1.543594,-8.363796,-4.789778,7.941871,-1.444473,-8.040829,-9.661904,-5.901928,7.715904,6.834926,5.612361,-0.623446,9.479442,-4.962173,-7.642097,-2.311271,2.057973,-0.966964,-9.654170,2.130965,-0.787290,-5.948752,-9.161061,-7.945870,-7.654782,-9.411857,7.109328,-6.585221,-9.408711,-1.778543,-5.917059,8.481144,-2.986250,0.367148,7.346353,6.152861,-9.591103,-3.017083,-7.596751,1.733973,1.095128,8.505744,-5.435208,5.226232,-6.699550,3.445946,-9.981674,-8.493382,-3.584236,9.764572,-4.122460,-1.164243,-8.491257,0.831952,2.499837,-7.237014,3.729218,-6.295567,0.289548,-7.284106,9.919600,-8.658707,8.143359,-1.668259,-4.544949,7.925791,5.928226,-1.492866,6.688159,-0.641524,-4.624050,4.268495,-5.483065,8.490304,8.004376,5.266356]], dtype = "float32")#candidate|7545|(1, 156)|const|float32
var_7546 = relay.var("var_7546", dtype = "float64", shape = (455, 1))#candidate|7546|(455, 1)|var|float64
call_7542 = relay.TupleGetItem(func_5181_call(relay.reshape(var_7543.astype('float32'), [6, 4, 9]), relay.reshape(var_7543.astype('float32'), [6, 4, 9]), relay.reshape(const_7544.astype('uint16'), []), relay.reshape(const_7545.astype('float32'), [1, 156]), relay.reshape(var_7546.astype('float64'), [455,]), ), 4)
call_7547 = relay.TupleGetItem(func_5188_call(relay.reshape(var_7543.astype('float32'), [6, 4, 9]), relay.reshape(var_7543.astype('float32'), [6, 4, 9]), relay.reshape(const_7544.astype('uint16'), []), relay.reshape(const_7545.astype('float32'), [1, 156]), relay.reshape(var_7546.astype('float64'), [455,]), ), 4)
func_177_call = mod.get_global_var('func_177')
func_179_call = mutated_mod.get_global_var('func_179')
const_7556 = relay.const([1,-9,-9,-9,4,8,5,-7,-8,-4,3,4,1,10,-10,-10,-5,5,4,5,-1,-5,10,-9,-8,-1,-8,-9,-1,-1,-10,-3,2,8,-1,3,8,6,-10,8,1,-3,6,-8,-8,9,1,-4,-9,8,-7,-2,1,-5,-7,10,-4,-7,-2,-1,-5,2,-4,9,-9,5,-10,-3,7,1,-2,-1,6,9,4,-2,-10,-5,9,8,-2,5,10,-4,-5,2,-8,4,-3,-3,10,-8,-8,-5,-8,6,-7,-6,9,3,-7,-3,-10,-8,-9,1,-6,2,-1,-10,1,1,-9,5,6,-5,-5,-7,-5,-9,8,6,9,6,6,-9,6,-4,-8,6,-7,7,9,-6,-1,-1,-4,-2,4,1,8,6,1,-8,9,2,-4,7,-5,10,-7,-6,7,-4,-6,2,6,-7,-9,7,-8,3,10,-7,-2,-2,5,2,5,-4,2,6,-5,-6,-7,-4,3,-9,7,9,-3,2,10,2,1,-6,-4,-2,3,-5,2,7,7,10,4,-7,2,-4,3,-8,2,9,4,4,9,10,-1,7,-5,-3,-8,-3,-10,-5,-3,-9,-4,-10,10,-8,7,10,-4,-5,-6,5,1,-6,-7,3,-3,6,1,-10,3,-9,5,-8,8,10,-4,-10,5,3,7,5,-10,-1,-8,-1,-8,-1,2,4,3,-6,10,-1,1,8,-1,10,-3,-4,2,4,-8,3,-4,-3,-2,3,4,7,-9,-3,-10,-4,4,8,5,-3,4,-4,4,5,-6,-8,-4,4,-3,-6,10,10,9,-9,7,-7,10,1,-7,-2,7,-3,-8,-2,6,6,9,-1,3,3,3,-2,9,9,-2,-1,2,7,3,-10,9,-8,-3,9,10,-5,9,-8,-3,-8,-9,-3,5,10,3,-10,8,-3,6,7,3,8,1,4,-2,-10,-3,1,-7,7,-3,-4,-2,5,10,-3,4,-7,-9,9,-5,-4,4,-4,8,-10,-8,-5,-1,10,10,4,-7,9,4,-9,8,7,9,-2,-5,-10,-7,5,5,9,7,9,6,9,-9,1,2,-9,9,9,-6,-9,4,-10,7,4,5,-9,-3,-3,7,-10,-1,-1,2,8,-7,-10,-9,9,10,-2,-7,7,1,4,3,-8,-5,-9,-9,5,-2,-6,-5,-8,8,-1,-3,9,-6,2,9,6,-1,10,-9,-5,-10,-3,7,10,-1,4,-7,8,8,-5,-1,2,7,1,7,-9,8,1,-5,-3,-2,-10,2,6,-7,-8,3,2,1,10,-9,4,2,5,8,2,6,1,-2,-9,-10,-9,6,5,-3,5,3,-1,7,-10,3,3,8,9,-2,8,5,5,7,1,4,-3,-5,3,10,5,9,-3,5,-4,-10,9,10,-9,5,-10,-5,-9,9,2,-5,-3,6,-1,7,8,-10,5,10,-10,3,5,4,8,-5,-3,7,5,3,4,1,-9,8,2,9,6,-1,2,4,9,2,10,-9,5,-10,5,-3,-2,-10,3,-6,3,-10,3,7,-5,-5,6,-1,7,2,-3,-6,-5,1,6,-7,-7,6,-2,3,9,4,1,10,7,9,4,8,2,1,9,8,4,-9,8,4,9,7,-3,7,7,-3,1,-4,1,10,-3,7,4,-4,7,2,-5,-7,3,10,1,-3,-3,3,2,5,4,3,-9,2,4,-3,10,9,5,5,3,6,7,-1,7,-4,-1,10,-5,-9,8,-10,-3,4,-8,-1,9,8,-1,4,-8,-10,7,-10,-4,-1,-10,-3,-10,8,5,1,-1,9,10,1,-2,-7,-10,-9,-6,9,1,-7,-8,-9,8,-9,10,2,-9,-10,-1,10,-5,-8,-1,-7,8,3,8,-8,-3,5,3,5,-10,5,-5,-5,-5,-3,9,-7,3,2,2,-8,-7,10,2,-5,4,4,-6,2,-3,6,-5,10,4,9,-3,3,-4,3,-10,-10,8,-4,4,-6,2,-8,6,7,9,-8,-7,-4,5,8,-6,10,4,-8,1,-5,5,-4,-1,-1,-8,-5,-9,5,8,1,-2,8,6,-4,10,-2,1,4,-6,4,-3,9,10,7,-7,-4,9,5,-7,-4,8,-10,3,-3,-10], dtype = "int64")#candidate|7556|(792,)|const|int64
call_7555 = relay.TupleGetItem(func_177_call(relay.reshape(const_7556.astype('int64'), [11, 6, 12])), 0)
call_7557 = relay.TupleGetItem(func_179_call(relay.reshape(const_7556.astype('int64'), [11, 6, 12])), 0)
uop_7561 = relay.erf(var_7546.astype('float32')) # shape=(455, 1)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
const_7566 = relay.const([-5,-4,-6,10,-7,-10,-1,-2,-8,7,-10,10,-5,-4,-2,-3,-10,10,10,-9,6,1,2,8,-4,3,-7,-9,-4,5,-4,2,7,-3,-3,6,-4,5,-8,-5,10,-8,1,-1,-2,10,7,1,-4,-1,-9,-4,-3,8,-2,6,10,-10,9,7,-10,-9,-9,-8,-5,7,5,-6,10,10,6,7,9,-9,9,-2,-5,3,-1,4,-10,-9,-2,-3,-10,6,10,2,-9,8,10,-8,-8,6,1,-5,-1,-10,-3,5,8,9,-3,5,-3,1,-2,-6,-9,2,-4,-5,-3,-10,-7,-2,-6,-1,2,-2,-9,-8,-3,3,-9,-4,-2,-2,3,3,-6,-5,6,3,3,10,-10,5,5,7,-3,-10,1,9,-3,6,-9,-2,-8,-10,-2,-5,1,8,-9,3,-8,-6,3,3,-10,-5,-1,-4,4,1,8,-10,7,-6,-3,-8,-2,-9,2,10,2,-2,4,1,-2,6,8,9,-2,-4,6,5,6,2,8,9,9,3,7,-3,-6,-1,3,-2,6,1,7,7,-1,-1,-1,1,4,-3,-9,2,-3,2,2,2,-9,8,-10,1,-4,-2,-5,-4,8,9,-4,-3,-5,-7,-10,-5,-4,4,1,-7,8,-1,4,-1,5,-2,-3,7,1,-7,3,-9,-6,-2,8,4,-3,-10,-10,-1,-1,1,-7,5,2,-8,-3,-5,8,8,9,4,6,-10,5,9,-6,1,1,-1,8,-2,-4,2,4,-2,3,-8,-1,3,-2,1,5,1,-10,10,4,10,9,-2,5,8,9,7,6,6,-2,-8,-3,-2,-3,-2,2,-5,-4,-4,10,-7,1,10,3,5,-5,4], dtype = "int64")#candidate|7566|(320,)|const|int64
call_7565 = relay.TupleGetItem(func_1081_call(relay.reshape(const_7566.astype('int64'), [10, 2, 16])), 1)
call_7567 = relay.TupleGetItem(func_1084_call(relay.reshape(const_7566.astype('int64'), [10, 2, 16])), 1)
func_3506_call = mod.get_global_var('func_3506')
func_3508_call = mutated_mod.get_global_var('func_3508')
var_7569 = relay.var("var_7569", dtype = "float64", shape = (1350,))#candidate|7569|(1350,)|var|float64
call_7568 = relay.TupleGetItem(func_3506_call(relay.reshape(var_7569.astype('float64'), [6, 15, 15])), 0)
call_7570 = relay.TupleGetItem(func_3508_call(relay.reshape(var_7569.astype('float64'), [6, 15, 15])), 0)
var_7571 = relay.var("var_7571", dtype = "float64", shape = (455, 6))#candidate|7571|(455, 6)|var|float64
bop_7572 = relay.divide(var_7546.astype('float32'), var_7571.astype('float32')) # shape=(455, 6)
output = relay.Tuple([uop_7528,call_7542,var_7543,const_7544,const_7545,call_7555,const_7556,uop_7561,call_7565,const_7566,call_7568,var_7569,bop_7572,])
output2 = relay.Tuple([uop_7530,call_7547,var_7543,const_7544,const_7545,call_7557,const_7556,uop_7561,call_7567,const_7566,call_7570,var_7569,bop_7572,])
func_7591 = relay.Function([var_7543,var_7546,var_7569,var_7571,], output)
mod['func_7591'] = func_7591
mod = relay.transform.InferType()(mod)
var_7592 = relay.var("var_7592", dtype = "float32", shape = (216,))#candidate|7592|(216,)|var|float32
var_7593 = relay.var("var_7593", dtype = "float64", shape = (455, 1))#candidate|7593|(455, 1)|var|float64
var_7594 = relay.var("var_7594", dtype = "float64", shape = (1350,))#candidate|7594|(1350,)|var|float64
var_7595 = relay.var("var_7595", dtype = "float64", shape = (455, 6))#candidate|7595|(455, 6)|var|float64
output = func_7591(var_7592,var_7593,var_7594,var_7595,)
func_7596 = relay.Function([var_7592,var_7593,var_7594,var_7595,], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7615 = func_7521_call()
call_7616 = func_7521_call()
func_2488_call = mod.get_global_var('func_2488')
func_2493_call = mutated_mod.get_global_var('func_2493')
var_7634 = relay.var("var_7634", dtype = "uint64", shape = (280,))#candidate|7634|(280,)|var|uint64
const_7635 = relay.const(4, dtype = "int16")#candidate|7635|()|const|int16
call_7633 = relay.TupleGetItem(func_2488_call(relay.reshape(var_7634.astype('uint64'), [4, 5, 14]), relay.reshape(const_7635.astype('int16'), []), relay.reshape(var_7634.astype('uint64'), [4, 5, 14]), ), 1)
call_7636 = relay.TupleGetItem(func_2493_call(relay.reshape(var_7634.astype('uint64'), [4, 5, 14]), relay.reshape(const_7635.astype('int16'), []), relay.reshape(var_7634.astype('uint64'), [4, 5, 14]), ), 1)
func_1239_call = mod.get_global_var('func_1239')
func_1241_call = mutated_mod.get_global_var('func_1241')
const_7647 = relay.const([1,-8,7,-10,-7,-6,-9,-6,-9,-5,1,-3,1,-6,-7,-4,-9,3,-6,-2,6,-10,1,7,8,-8,-2,-4,4,1,3,2,-2,9,9,-10,1,7,6,3,-6,3,-5,2,8,-1,-1,-4,7,10,9,1,10,4,-2,1,2,-7,-2,-6,-2,-3,9,5,-3,2,-5,-1,-10,4,-4,1,9,-2,-9,-1,-5,-4,-10,-10,6,-4,-6,-7,-2,10,5,1,-1,5,1,-9,-8,1,-3,-4,5,-1,3,-7,10,10,-9,9,5,-8,-10,5,1,10,6,-5,2,-2,-6,1,-6,-1,-5,3,-6,8,-7,6,8,-1,9,-7,-4,7,8,3,-10,-7,7,-5,-10,-7,-6,4,-8,-10,3,-8,-4,4,-5,-6,-3,8,-4,1,5,-10,2,5,-8,-6,10,-7,-1,10,8,-10,10,1,2,9,-9,-8,-2,-10,10,3,-2,-6,-3,-10,2,-4,-10,8,4,-9,6,-5,-2,1,2,2,8,8,6,-2,10,3,-8,3,-8,-8,-10,5,7,6,3,5,7,3,-3,-2,-9,-4,5,3,-10,10,-6,-3,-4,-2,6,8,-1,7,-6,-9,-1,5,2,1,-1,-1,-7,-9,5,10,9,7,1,-5,2,-1,1,-10,4,-5,4,1,2,4,9,1,4,-1,-3,-9,2,-9,-7,-6,-2,-7,8,-10,6,-10,-10,5,10,-8,-4,-7,8,-1,-6,-8,-9,7,-1,-8,2,3,8,5,-4,10,-9,-6,6,2,6,2,-4,-3,-5,3,-8,9,-4,5,-7,-8,3,-5,-1,8,-8,-1,1,-9,-6,6,-9,-3,1,-3,-10,-7,4,9,-1,-1,1,-1,-9,-9,-3,10,-9,-6,-8,1,7,2,-1,7,1,-1,3,3,4,-6,4,-10,-8,3,3,-7,-1,-4,-9,4,-10,-2,-7,-4,6,8,7,-3,2,4,-10,-8,9,5,2,7,2,-8,4,-8,3,10,-3,8,1,-1,-2,-3,-8,8,-8,5,-6,-9,-6,-1,-4,-10,4,-2,-9,-5,1,-9,-6,2,-1,6,-1,-8,-3,-5,-9,-5,2,-7,2,1,2,4,-6,4,5,-7,-4,-5,-3,7,7,7,1,2,8,9,-3,9,-3,-9,2,5,10,-4,-10,6,-3,9,-7,-1,4,4,-7,9,6,6,-5,-6,3,-9,-1,2,-8,-1,-2,1,-4,-3,9,-9,-1,3,-8,-2,-10,-5,8,6,8,10,-2,4,-5,5,1,9,8,10,2,8,5,-3,-9,-8], dtype = "uint16")#candidate|7647|(484,)|const|uint16
call_7646 = relay.TupleGetItem(func_1239_call(relay.reshape(const_7647.astype('uint16'), [484,])), 1)
call_7648 = relay.TupleGetItem(func_1241_call(relay.reshape(const_7647.astype('uint16'), [484,])), 1)
func_3735_call = mod.get_global_var('func_3735')
func_3738_call = mutated_mod.get_global_var('func_3738')
var_7659 = relay.var("var_7659", dtype = "float64", shape = (90,))#candidate|7659|(90,)|var|float64
var_7660 = relay.var("var_7660", dtype = "float64", shape = (864,))#candidate|7660|(864,)|var|float64
call_7658 = relay.TupleGetItem(func_3735_call(relay.reshape(var_7659.astype('float64'), [2, 9, 5]), relay.reshape(var_7660.astype('float64'), [864,]), ), 3)
call_7661 = relay.TupleGetItem(func_3738_call(relay.reshape(var_7659.astype('float64'), [2, 9, 5]), relay.reshape(var_7660.astype('float64'), [864,]), ), 3)
output = relay.Tuple([call_7615,call_7633,var_7634,const_7635,call_7646,const_7647,call_7658,var_7659,var_7660,])
output2 = relay.Tuple([call_7616,call_7636,var_7634,const_7635,call_7648,const_7647,call_7661,var_7659,var_7660,])
func_7662 = relay.Function([var_7634,var_7659,var_7660,], output)
mod['func_7662'] = func_7662
mod = relay.transform.InferType()(mod)
mutated_mod['func_7662'] = func_7662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7662_call = mutated_mod.get_global_var('func_7662')
var_7664 = relay.var("var_7664", dtype = "uint64", shape = (280,))#candidate|7664|(280,)|var|uint64
var_7665 = relay.var("var_7665", dtype = "float64", shape = (90,))#candidate|7665|(90,)|var|float64
var_7666 = relay.var("var_7666", dtype = "float64", shape = (864,))#candidate|7666|(864,)|var|float64
call_7663 = func_7662_call(var_7664,var_7665,var_7666,)
output = call_7663
func_7667 = relay.Function([var_7664,var_7665,var_7666,], output)
mutated_mod['func_7667'] = func_7667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7674 = func_7521_call()
call_7675 = func_7521_call()
var_7687 = relay.var("var_7687", dtype = "bool", shape = (6, 14, 16))#candidate|7687|(6, 14, 16)|var|bool
bop_7688 = relay.power(call_7674.astype('float32'), relay.reshape(var_7687.astype('float32'), relay.shape_of(call_7674))) # shape=(6, 14, 16)
bop_7691 = relay.power(call_7675.astype('float32'), relay.reshape(var_7687.astype('float32'), relay.shape_of(call_7675))) # shape=(6, 14, 16)
const_7697 = relay.const([[[False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False],[True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False],[False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False],[True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False],[False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False],[False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False],[True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False],[True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True],[False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False],[False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False],[True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True],[True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False],[False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True],[True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False]],[[True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False],[True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False],[False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True],[True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False],[True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True],[False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False],[True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False],[False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,False],[True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False],[False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True],[True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True],[True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True],[True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False],[False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True]],[[False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True],[True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False],[True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True],[True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False],[True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True],[False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False],[True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True],[True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False],[False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True],[False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True],[False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False],[True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True],[False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True],[True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False]],[[True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False],[False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False],[True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True],[True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True],[False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True],[False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True],[False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False],[False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False],[False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False],[False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False],[True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True],[False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False],[True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False],[False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False]],[[True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True],[True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True],[True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False],[False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True],[True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False],[False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True],[False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False],[False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False],[False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True],[False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True],[False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True],[True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True],[False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True],[True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True]],[[False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True],[True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False],[True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False],[False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False],[True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True],[False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True],[True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False],[True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True],[True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True],[False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True],[False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False],[False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False],[False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False],[False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True]]], dtype = "bool")#candidate|7697|(6, 14, 16)|const|bool
bop_7698 = relay.floor_mod(call_7674.astype('float64'), relay.reshape(const_7697.astype('float64'), relay.shape_of(call_7674))) # shape=(6, 14, 16)
bop_7701 = relay.floor_mod(call_7675.astype('float64'), relay.reshape(const_7697.astype('float64'), relay.shape_of(call_7675))) # shape=(6, 14, 16)
output = relay.Tuple([bop_7688,bop_7698,])
output2 = relay.Tuple([bop_7691,bop_7701,])
func_7710 = relay.Function([var_7687,], output)
mod['func_7710'] = func_7710
mod = relay.transform.InferType()(mod)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7711 = relay.var("var_7711", dtype = "bool", shape = (6, 14, 16))#candidate|7711|(6, 14, 16)|var|bool
func_7710_call = mutated_mod.get_global_var('func_7710')
call_7712 = func_7710_call(var_7711)
output = call_7712
func_7713 = relay.Function([var_7711], output)
mutated_mod['func_7713'] = func_7713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7734 = func_7521_call()
call_7735 = func_7521_call()
output = relay.Tuple([call_7734,])
output2 = relay.Tuple([call_7735,])
func_7750 = relay.Function([], output)
mod['func_7750'] = func_7750
mod = relay.transform.InferType()(mod)
output = func_7750()
func_7751 = relay.Function([], output)
mutated_mod['func_7751'] = func_7751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7756 = func_7521_call()
call_7757 = func_7521_call()
func_2488_call = mod.get_global_var('func_2488')
func_2493_call = mutated_mod.get_global_var('func_2493')
var_7768 = relay.var("var_7768", dtype = "uint64", shape = (280,))#candidate|7768|(280,)|var|uint64
const_7769 = relay.const(8, dtype = "int16")#candidate|7769|()|const|int16
call_7767 = relay.TupleGetItem(func_2488_call(relay.reshape(var_7768.astype('uint64'), [4, 5, 14]), relay.reshape(const_7769.astype('int16'), []), relay.reshape(var_7768.astype('uint64'), [4, 5, 14]), ), 2)
call_7770 = relay.TupleGetItem(func_2493_call(relay.reshape(var_7768.astype('uint64'), [4, 5, 14]), relay.reshape(const_7769.astype('int16'), []), relay.reshape(var_7768.astype('uint64'), [4, 5, 14]), ), 2)
output = relay.Tuple([call_7756,call_7767,var_7768,const_7769,])
output2 = relay.Tuple([call_7757,call_7770,var_7768,const_7769,])
func_7775 = relay.Function([var_7768,], output)
mod['func_7775'] = func_7775
mod = relay.transform.InferType()(mod)
var_7776 = relay.var("var_7776", dtype = "uint64", shape = (280,))#candidate|7776|(280,)|var|uint64
output = func_7775(var_7776)
func_7777 = relay.Function([var_7776], output)
mutated_mod['func_7777'] = func_7777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_7779 = relay.TupleGetItem(func_7750_call(), 0)
call_7780 = relay.TupleGetItem(func_7751_call(), 0)
output = call_7779
output2 = call_7780
func_7788 = relay.Function([], output)
mod['func_7788'] = func_7788
mod = relay.transform.InferType()(mod)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mutated_mod.get_global_var('func_7788')
call_7789 = func_7788_call()
output = call_7789
func_7790 = relay.Function([], output)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7823 = func_7521_call()
call_7824 = func_7521_call()
output = relay.Tuple([call_7823,])
output2 = relay.Tuple([call_7824,])
func_7842 = relay.Function([], output)
mod['func_7842'] = func_7842
mod = relay.transform.InferType()(mod)
output = func_7842()
func_7843 = relay.Function([], output)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_7853 = func_7788_call()
call_7854 = func_7788_call()
output = relay.Tuple([call_7853,])
output2 = relay.Tuple([call_7854,])
func_7871 = relay.Function([], output)
mod['func_7871'] = func_7871
mod = relay.transform.InferType()(mod)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mutated_mod.get_global_var('func_7871')
call_7872 = func_7871_call()
output = call_7872
func_7873 = relay.Function([], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_7912 = func_7788_call()
call_7913 = func_7788_call()
func_2597_call = mod.get_global_var('func_2597')
func_2601_call = mutated_mod.get_global_var('func_2601')
const_7920 = relay.const([-9.910312,3.734502,1.756383,0.346714,-7.721878,-1.047156,0.529437,-6.205305,-2.232949,1.648826,-3.714335,-4.463675,-8.778155,-0.496966,5.405091,8.761196,4.784000,-6.729778,-2.988277,2.071021,6.120725,8.448283,1.465601,-2.106331,-6.480237,-6.960126,-1.593669,-9.485300,3.469491,-6.146455,3.523205,-2.356211,-4.599639,7.165587,7.206793,1.857560,-0.782502,9.583939,-8.289901,2.162361,7.645167,7.176622,-9.975975,-5.778431,-3.561612,-6.902164,3.714692,8.188047,1.580303,-0.274522,4.419066,7.075183,-1.911671,-7.618135,-2.586150,2.219120,4.121017,1.569479,-2.999506,-0.079285,-6.571607,8.369189,6.734668,8.900179,6.391416,0.694775,2.376205,8.015656,-3.202311,1.759276,3.007437,-8.012070,3.956439,7.801143,-3.466660,1.234159,-5.939616,-5.150164,7.436433,4.954075,9.208976,5.345379,5.754872,-4.834831,-4.554475,6.755793,5.245150,2.841497,0.124289,-3.427648,-9.988011,7.480811,-7.857982,-2.271335,8.018982,2.449797,4.118197,-6.148444,0.234615,-5.092067,-1.381349,7.069699,6.863425,-4.966838,8.056622,-1.054367,-3.240512,3.410353,8.174082,-1.399054,4.222957,3.097818,9.228910,9.683402,2.242545,-7.272759,3.471738,8.769701,-7.169853,-0.364010,-5.911432,8.005603,-2.253017,-5.354422,5.668569,-2.292083,-0.570575,2.664248,8.118474,-9.799810,-3.358862,-2.446825,-0.013459,-1.387347,-1.756646,4.468855,-7.731690,3.848362,9.405025,-0.352895,2.270048,6.550517,8.703090,2.844377,2.982744,9.672201,-4.163057,-7.597662,2.377084,-0.771767,4.553964,-1.632230,-7.945818,-4.092661,9.128795,-8.634653,2.978257,-8.581210,-0.217049,-4.786405,4.532538,9.044728,9.960988,0.910425,4.220605,-5.453937,8.616562,-4.263197,1.089302,4.601170,0.735600,8.915662,8.374713,1.545508,5.820805,7.148825,9.454110,-4.549610,-9.215191,7.207966,8.024865,-5.511363,7.963836,8.882963,0.503995,9.471407,-5.971093,-7.891323,6.345243,-4.521105,3.785157,5.816486,-0.061551,3.564280,2.561364,-8.091009,8.747296,2.241900,5.302904,0.537037,0.292778,-2.797778,4.747302,2.476140,-6.400175,7.845836,-9.123996,3.956902,-2.323356,7.648261,4.564236,0.001083,1.336848,9.324380,1.906293,6.158512,-0.916854,-2.277431,-8.724856,-2.454445,5.978254,-5.857266,-0.600198,7.143084,6.797917,6.881722,-0.913102,2.369386,4.088347,8.630049,7.521235,-8.224051,-3.950281,9.884341,-8.713174,8.668036,9.826877,6.198306,7.557976,-6.964215,-2.435484,-9.322607,-6.757966,-2.201536,-8.647681,-5.049709,-5.047454,2.934511,-9.959222,-8.931864,-4.325208,-2.998632,5.762142,-0.327446,-4.527092,4.071177,-4.438125,-5.151583,9.283642,-4.635558,-2.667996,2.567477,0.850295,8.876093,9.978015,7.561896,5.731012,0.047605,8.641355,-0.168562,1.208393,-9.477222,8.214624,-5.951213,0.876305,-3.051538,-0.374771,8.868030,4.575938,1.970597,-5.381838,-0.691401,-0.588447,-9.327147,9.738083,-0.262960,8.653094,-7.924756,2.693046,6.800264,-6.121865,-6.346362,-8.006001,-0.673683,-5.523672,-7.833756,-6.959212,-9.302982,5.058266,7.605451,4.181001,3.847128,-0.911848,2.436054,-8.755019,2.824497,9.453664,7.485714,9.550535,7.070187,5.214005,-2.737325,-1.963537,4.808538,2.033180,0.539696,-6.808942,2.765735,-1.581035,-6.105156,-9.726347,9.939883,6.835726,8.157946,1.312252,-8.979864,-7.114965,-3.008275,7.545682,-3.797556,-0.004562,-7.907387,-6.998078,-7.482103,-8.185628,-1.004065,-3.878266,-4.664386,-3.545448,-5.974597,-9.867481,3.208100,2.175562,-9.962640,2.684306,1.087009,-7.266873,-2.853658,-9.513197,3.798524,7.169711,9.035904,-5.930587,3.017386,9.710981,-2.309406,-2.644009,-4.478580,1.366225,-9.064162,-3.982715,3.103565,4.034204,9.573858,-3.358528,0.916031,-4.394859,2.195469,-8.489655,-3.057261,-9.237596,-3.861989,-1.536102,-1.278838,3.086569,-9.036820,-1.351813,-7.235509,7.368803,1.210110,-9.278551,4.427197,7.911762,6.220366,9.071881,6.603551,-2.481442,-4.679790,9.882728,9.427438,4.943956,-9.880704,9.606587,-6.857661,-4.247089,-1.005786,-8.013967,-8.592923,-3.339011,0.399770,6.545336,9.960663,-1.847742,-7.414212,-2.061569,-0.280678,2.055609,8.781245,0.074401,8.608620,-9.647531,2.339024,7.925031,-1.599643,7.841597,1.763816,6.300776,8.948822,-4.601685,1.834272,2.878563,-8.450879,-3.777601,3.471669,9.258079,6.139680,-6.446001,-1.641332,-9.031328,5.826656,4.824056,-5.339138,8.061979,-9.484515,4.364386,-7.230056,-4.387116,1.384443,-6.507655,-1.551264,9.032970,1.943252,-5.876527,5.266770,6.278656,0.490424,7.977701,4.423341,3.649074,-9.179167,2.963388,0.478205,-8.088074,-4.907025,7.911887,-4.468753,-0.897965,-4.629941,-4.054875,-1.623674,-3.988065,-3.950025,8.773397,-7.767844,1.747198,-6.663240,2.004830,-3.854945,-3.472045,-4.454854,-6.141562,5.123748,8.408104,9.445032,1.806856,4.820531,5.834109,-6.076484,5.935819,6.054755,4.446513,7.344029,2.900526,-7.530522,-3.633670,2.583094,-4.875389,0.869482,-6.313825,6.952935,-0.656303,2.637798,-9.627069,6.989288,-9.032777,-6.075127,-1.910846,-2.112705,-9.707874,1.049427,-5.393271,3.416734,0.282283,-6.018040,7.390754,-1.022293,-3.333548,-8.943022,1.249638,-9.415254,-4.617240,1.278204,-1.874841,3.584416,6.619773,8.549570,9.866057,-8.954430,3.940064,5.107008,-4.012603,4.606089,9.373166,4.401978,5.099818,5.533073,-9.112083,-4.720858,-0.631479,0.490923,-6.113539,3.351110,0.465795,8.277852,-0.764704,-9.098443,-3.728983,2.633015,7.863036,-6.593683,-3.743755,-2.073405,-5.316452,3.537898,-1.335154,-2.110750,7.644387,5.973140,3.191040,-0.584648,5.531755,-0.594966,-3.565032,0.366502,-9.810344,-1.217733,0.845754,-2.126311,7.159353,7.816477,-5.292740,-3.850851,6.956300,9.697234,-8.475188,3.994764,-3.732510,4.597889,8.226066,-8.498839,-0.425439,4.252235,9.656951,-4.592775,8.308301,0.812824,8.953407,-7.422818,4.298583,-7.976493,5.565476,5.308499,8.182165,-6.266820,9.167908,5.460753,4.814369,-6.657814,-5.283250,3.026348,-2.766948,4.361806,-8.163731,-2.650467,0.594518,-1.556718,-6.110594,-6.498868,-8.503344,7.783820,4.972650,-6.228604,6.868387,-0.524081,5.470535,4.214100,-2.026236,1.661598,-8.231666,-0.086188,-4.117137,-3.886136,-6.577522,7.316870,9.412246,-9.999552,5.208452,9.261052,2.227094,-6.857006,9.153591,-1.045557,-7.908140,6.585637,-5.717882,6.071728,-7.483823,2.575097,-8.181348,8.348116,6.337618,3.316877,-9.401040,9.512515,-9.802989,-8.034797,-2.807518,4.196030,0.576994,9.881128,-9.775640,-4.211998,8.611004,2.827744,-9.547837,2.531557,-1.250607,-9.957069,-3.045715,8.180461,4.347565,-7.930551,-9.842993,4.856484,-5.590939,4.815242,7.597536,8.326456,-1.231369,-5.367324,-6.152241,-8.312907,-2.084407,1.489519,0.953436,6.432578,9.552665,-6.267088,1.371709,3.770213,-9.518887,-5.153029,-0.976465,-3.271030,-7.751193,-5.199247,3.100662,-7.668417,7.399955,-6.762294,-8.221999,-2.041989,7.489830,0.111077,-2.786456,0.844984,-9.138766,-1.836658,5.247133,1.295364,2.554037,-6.584077,-6.450390,5.553680,8.295846,-8.657316,3.483350,0.241031,5.832911,-6.302584,3.628894,9.932859,3.482841,-1.687945,-0.847034,1.489572,4.484408,-5.763517,-7.854741,-4.630258,3.560254,1.427879,8.951793,-4.513998,4.716580,-7.576757,-2.863494,-1.469316,8.584140,-1.995313,-0.655455,5.923512,-9.239668,-6.853207,9.158877,-0.182460,5.937841,-0.092511,-1.957565,-7.040469,8.144981,-1.709457,-7.044973,6.155674,3.875408,8.067104,5.512883,-2.917113,5.607701,-4.479391,7.294900,8.360348,-8.185956,5.199304,-8.462321,7.606810,-0.882370,1.258161,-8.222112,-2.395839,3.678303,-7.231273,-5.615343,-0.734894,4.018988,8.577193,5.066311,6.418949,-6.586605,-0.800350,-2.679075,-0.581454,1.221207,7.371838,-0.210437,0.857705,-7.925417,0.601035,-7.612158,-9.168493,-8.863285,-4.090957,-1.073410,-7.038391,-5.348699,-9.869346,-5.014842,4.756099,-4.221267,7.969697,-0.170923,-5.635438,-3.507222,-0.222592,0.460692,-3.416014,-6.483578,8.995487,3.582414,1.880451,-2.231204,-4.101486,-0.951595,-0.035504,8.158582,9.544400,9.335599,-5.301743,6.003015,-9.157178,1.438494,3.681910,-6.992656,-2.047672,-7.105483,0.587427,0.062977,0.925212,-7.034459,5.571757,7.711875,3.733151,-8.781655,8.965148,-8.563149,9.652092,-3.566978,4.631663,2.921245,-1.232154,0.675382,6.577715,-7.941665,-7.671574,-8.588765,-7.741823,2.586735,-4.568772,3.801400,3.540782,-5.971118,1.129617,2.083687,1.763273,-8.154876,-2.173480,0.224523,9.401105,-7.916858,-3.716903,3.987902,7.491578,1.141428,-5.702908,8.734540,-1.346086,-8.597956,-1.930579,6.006969,8.221768,-4.367109,3.538244,9.303336,7.608399,4.470923,-7.164468,-2.208708,1.832491,-5.041027,-5.162780,6.762420,6.116139,-0.203641,-5.802553,4.793789,1.760807,4.237922,6.505170,8.830960,6.274322,7.001113,7.062325,3.289943,4.737648,1.703702,7.383144,-0.919036,-0.539771,-1.591801,-6.799623,-6.253030,0.294889,3.496592,-8.178957,1.006034,8.861249,-7.361545,-1.844277,0.178973,8.419399,2.487298,6.421928,8.895376,-8.306566,-6.368774,7.075218,5.161191,0.136937,2.552142,0.224780,4.085159,5.645068,-6.301420,7.408443,8.699865,-5.995300,5.622083,9.210513,9.091863,-9.596694,-2.831391,7.473000,8.686156,-3.357369,-6.192373,4.849409,-5.980031,1.930880,1.993747,-4.817009,6.708009,7.797673,9.222516,8.472127,0.016579,-8.519459,3.887285,7.961529,-7.844723,-6.812664,2.907547,-2.157765,-9.765201,-2.235763,-0.076521,8.672697,8.159659,-0.057841,0.477061,-8.799581,-9.619244,-3.294464,-5.294767,-6.118508,-7.685211,9.383681,-6.009432,0.239700,-1.746696,-2.498974,4.609103,-1.473227,9.750031,5.006841,6.738055,8.793866,-6.663113,6.409783,8.693715,-3.319374,-7.528599,6.193428,3.385793,-4.267982,8.871055,8.966107,-9.493689,6.312311,-0.173926,-3.940498,-7.320662,5.729080,7.645826,8.870526,-6.066512,-3.735291,-3.672035,-9.706479,4.425175,0.155466,6.811272,2.629503,-4.749050,8.975951,7.151265,-1.000645,7.086130,-7.807465,3.580061,2.389548,2.591108,-3.780149,-5.524294,-7.218070,5.785644,-1.065624,-3.771300,-5.065574,-7.014468,6.322723,1.191848,-0.993674,-8.578060,-5.267237,-3.034721,7.858228,6.477350,8.197885,-7.564823,4.915563,0.886873,8.249044,8.129250,2.911914,7.069512,5.882556,-0.352273,-2.585738,6.413618,-8.330915,-8.778787,0.420125,-4.319579,1.499097,-8.814321,-1.302871,-5.330682,1.647490,-9.904384,-9.259094,-5.753369,-0.097420,6.717408,7.889778,6.526689,-0.615140,7.607155,-4.232033,0.346701,6.458027,-6.364489,0.484275,3.528149,5.574315,5.923455,4.127256,1.808131,3.691807,-6.451245,2.045134,-5.398161,-5.805973,-3.699578,6.617331,-7.724180,4.538858,7.653413,-5.325324,-5.399665,-7.575113,2.603941,0.908260,2.083621,2.385280,1.020434,-2.982641,-8.978871,9.267596,0.952090,-4.682131,2.812389,-6.958151,4.825893,1.795381,-8.171383,4.654047,-9.796838,6.094505,0.152125,2.253661,8.327526,2.063021,-6.165183,-2.488157,9.474136,-1.318000,8.162211,3.848893,5.976709,-1.594758,-9.473702,8.821715,-8.023669,2.440417,2.930726,-7.880007,-6.718515,-7.401045,-5.144870,-6.826369,-5.331428,9.980382,8.695700,-6.526930,5.954510,9.068403,-3.852988,-9.725551,3.463202,4.804863,7.392863,8.982057,1.892702,-2.036775,8.137280,6.517066,5.678970,3.993220,-0.611157,6.776421,-2.711463,2.636199,3.493086,5.783434,8.288348,3.779736,-4.918425,-5.413012,8.279421,1.732864,7.968220,-0.849815,1.816678,-2.234821], dtype = "float64")#candidate|7920|(1134,)|const|float64
const_7921 = relay.const([[-1.265508,2.714942,-7.053572,-0.364914,1.816915,-0.461541,-5.906790,0.519042],[-3.979380,5.484913,0.576330,-2.664346,-3.818024,-1.585842,2.504732,-3.235284],[-5.691670,1.465994,9.558217,7.439614,-2.323142,-6.631694,7.633693,4.395812],[0.761106,-1.583126,9.959150,-6.231997,-9.324816,-1.122339,0.942085,9.687543],[6.639521,-8.754125,7.666046,8.574156,7.654724,-8.481758,6.868693,1.934830],[-8.970546,-3.062928,-5.329757,9.632020,1.361543,8.730744,8.675096,-8.577271],[9.984208,3.533726,-5.526178,5.695360,-0.220901,-9.252348,1.884910,-2.573153],[2.537569,0.544800,8.908038,-2.783750,1.457004,0.325494,2.841606,0.332812],[-8.393744,1.020858,6.347376,9.889337,-6.458070,-0.902460,0.760950,-8.897563],[1.644639,-5.183835,-4.887679,2.225398,-1.388625,-6.126590,-5.223919,1.165632],[-8.071794,-0.213468,5.838062,-5.326062,7.134091,3.321274,2.492488,-1.152819],[8.886186,-5.361983,7.615838,6.245025,-0.033330,4.766331,1.524795,-6.178957],[9.727233,-7.327517,-6.563836,9.266275,4.075032,-0.142561,-4.478584,5.536791],[0.044553,0.906272,0.783162,1.161328,8.727190,-5.802096,6.020947,-0.005969],[7.129241,0.247893,0.871240,-5.628531,4.974285,-2.009665,5.058414,5.771707],[6.858538,1.988624,-6.987484,-5.630622,-7.957404,-9.449255,6.540364,-6.472876],[0.076254,-9.109800,-8.502981,1.554540,1.667948,5.849190,8.984593,-6.417533],[-3.767374,1.492487,-8.219044,-0.415225,5.438372,-5.187596,3.599758,7.336004],[-5.040364,-5.734320,-4.383147,-0.142805,0.119751,-9.296086,-1.407986,0.666702],[9.618809,8.355881,-6.014821,-3.124760,2.831820,6.006983,1.985284,5.497162],[-5.381698,7.119339,-9.597714,5.860009,6.434347,-1.242671,-0.215219,-3.622810],[5.996826,9.697628,0.873056,6.806089,-3.755784,-0.290364,5.938048,4.599622],[1.987187,2.111007,-4.248737,9.045699,-1.644586,8.693326,1.461408,-3.593568],[-0.539799,-7.250885,6.504878,-6.346567,-2.192131,-7.889160,-7.842334,-6.180850],[-8.247806,6.008626,-8.305755,-8.836408,5.682949,8.346122,-4.492917,5.711711],[9.739197,-1.484294,2.316242,-7.086506,1.906184,7.085584,-9.796116,9.770710],[1.518131,6.808874,3.232476,6.157580,5.946062,8.803356,-8.840537,-4.431579],[3.338485,3.709966,0.610910,-5.546848,-7.353733,1.127754,1.613257,2.921149],[5.560705,-1.268000,-4.598645,7.824881,-2.241805,2.042953,6.908259,-5.364784],[6.092327,3.995601,6.608385,3.461863,-0.049324,-0.536152,-3.364614,-3.564065],[-0.802802,-1.730851,-3.366350,6.938119,1.152904,-0.473547,-7.708998,6.343170],[-6.964681,4.761464,-2.150255,2.090244,8.358495,1.253351,2.668004,9.594265],[-0.477489,-6.671308,-6.423427,-6.599510,1.019900,-1.864811,9.604714,3.120987],[7.560906,-3.280780,9.172304,-9.087722,0.674047,-6.382000,2.876635,8.144422],[-0.071709,4.034577,7.615183,-1.052379,-6.415135,-7.235761,-8.544262,0.111923],[-3.664292,8.146621,9.288251,-2.843640,7.059842,2.955431,6.342380,0.870589],[-4.906160,-5.246155,-6.390424,-0.649494,6.017611,-3.272450,-5.250238,7.968643],[9.620484,9.183498,-8.618740,-6.204138,-3.295279,8.402750,-6.374425,0.507769],[2.310005,-5.329438,-1.279646,-9.825559,4.370829,3.842275,-9.064161,3.713185],[-5.921393,-3.352979,-2.273265,-5.719638,-0.792368,-7.159208,-1.510736,3.959242],[0.600780,9.558390,6.995212,-8.638943,7.832310,-1.633963,-6.603706,3.618485],[-5.831292,-0.449169,-1.793339,-0.612818,-6.409907,3.902558,-9.094883,-7.155078],[-7.922212,-2.564821,6.045349,8.684726,-1.958071,-7.008327,4.318852,3.979300],[7.978537,-0.012823,6.173300,-0.658409,-8.235031,-8.684389,-8.258865,-2.003022],[1.237519,-8.497096,1.366744,4.381390,-1.172820,2.874292,3.866705,9.904848],[-8.779540,2.489556,-7.039526,4.892516,1.123165,-9.299318,-0.697463,4.913916],[9.810981,-3.489618,5.405074,-6.150396,5.475812,8.155477,3.767213,5.147179],[-9.057300,8.330416,-5.129771,0.671286,-1.952974,3.029810,6.108485,-8.774801],[5.394016,0.998038,-9.348302,-4.692373,3.297999,9.633348,-2.878842,-6.286633],[7.061365,-9.027208,-8.755335,7.686356,4.714036,5.235090,1.985959,7.098496],[-6.224541,2.668252,-1.573968,-7.168633,3.737703,-3.098761,-3.602973,0.416459],[-7.024783,1.858815,1.841952,-3.169581,-3.558420,2.362988,2.307711,-1.540075],[-0.306082,6.652079,6.832810,-3.254636,9.991386,-2.505846,-8.498536,3.926263],[1.554742,2.587529,3.502590,3.673668,-1.642594,-8.077624,0.123848,5.539009],[-5.542778,3.964928,4.198440,9.187577,-5.264377,-7.787842,7.152808,-9.357513],[9.480891,1.683184,5.010159,-4.528916,-7.766103,4.585808,0.872909,9.624833],[5.956662,3.718384,-3.056188,9.325292,-4.391440,6.449134,1.710393,4.519160],[-6.456402,-5.961482,9.907991,9.073700,7.875475,-3.551629,7.663551,-7.294579],[-0.092794,2.163884,-8.814580,1.260926,5.168755,-6.262180,-5.160233,7.361036],[4.607540,-7.026823,-9.592951,-1.059562,3.733297,-0.695990,-5.456815,8.910765],[-2.746538,3.522271,-4.453960,3.408605,-1.621110,-2.216451,0.768916,7.728431],[0.842781,-4.942044,2.690536,7.883471,9.206856,6.836580,4.815772,-0.535092],[-1.020825,-0.816893,-3.216005,-0.068192,-3.567271,-5.716416,-2.174257,-2.142795],[8.378217,2.607711,1.478788,4.845772,-0.691298,-2.433439,-1.624964,2.233241],[-1.718639,8.027670,7.013477,6.137587,-3.118782,-6.810996,7.325816,0.381667],[3.087583,7.123150,9.542126,9.143006,-5.349462,5.678954,-1.480491,8.953539],[2.510660,6.484694,-8.093521,-4.397260,-4.139819,9.309296,4.220969,8.518693],[1.805427,4.194910,4.971386,-3.284367,-2.035254,-2.655255,-2.497020,5.091543],[-5.770936,-7.727332,-9.211292,-4.784799,6.729984,-3.944377,-5.854667,1.175157],[9.377782,-5.237132,9.059016,-2.889338,7.225426,-8.778984,-0.954137,1.308261],[7.707037,9.193417,-9.535315,-2.417938,6.747125,-0.853307,-1.471573,4.410822],[-9.508923,6.234046,-6.332421,2.623733,-2.334459,8.017301,6.882788,-8.209759],[-5.159672,-3.234190,2.175625,4.449769,-7.993047,-3.004950,7.234421,-1.922707],[7.534646,-7.433407,0.245856,9.310776,1.516434,-6.728576,3.364039,0.737787],[-3.894203,-6.275287,8.492619,-7.195188,1.847029,-1.550330,-1.362397,-3.202580],[-7.052699,9.861265,-2.211944,-9.713369,6.744518,9.914699,2.398672,-9.772372],[-4.226365,2.616951,-5.930624,5.030884,-3.309692,9.116743,-3.049254,-9.083937],[-7.998513,-1.390374,6.240103,-8.668529,8.513743,4.190809,3.414562,-8.562738],[9.565714,5.492229,3.778459,9.157782,-9.873508,-1.574764,7.352021,-0.281467],[-7.778053,-6.834351,8.469114,-4.668707,-6.047830,4.468829,-0.686067,-6.931871],[2.059243,8.340440,-0.748472,-2.137713,8.296013,-6.622946,6.920360,-4.487941],[3.593614,0.211929,-1.121061,-0.014804,-0.111777,-4.815655,7.479604,-6.282685],[-3.823166,-2.695538,-6.347110,3.454208,9.995412,-9.857561,-2.697888,7.543881],[-0.363420,-7.991492,-1.309715,3.074264,-3.241712,2.923160,-7.296659,-7.455957],[-5.126599,-6.261231,4.767796,-9.070527,9.318946,-7.482024,-1.604235,0.078435],[-8.113485,4.434763,-9.466600,6.419505,-8.534449,0.816913,-0.689262,0.470546],[-6.826634,-0.092630,3.598954,-2.438437,7.340411,0.900598,-4.682412,-6.596741],[-4.290389,-2.178376,9.560085,-8.084645,-3.929437,-0.696194,3.496942,8.371685],[1.051547,-1.395640,4.498376,5.429598,3.701001,-9.990920,-6.520634,-6.520094],[-9.041140,8.197157,8.498812,0.862874,0.922767,-3.029915,8.803353,-2.130203],[3.361868,1.297742,-8.797336,-4.850182,4.787954,5.775752,6.238350,7.075933],[-2.633396,9.853599,-3.857938,-9.820828,9.356405,-7.318840,-1.801405,3.770994],[9.114120,-2.709515,-5.363212,6.832199,2.252001,2.052843,6.999922,-3.133836],[6.006510,4.575962,-1.981416,-2.790359,-7.039529,-6.530786,6.211697,1.948235],[0.674219,-5.838752,-6.730822,1.462054,7.463453,-7.825358,4.010877,-8.125610],[0.284841,-1.205032,0.281118,1.247964,-5.956989,7.370195,4.995309,-5.566823],[-2.097170,-9.644897,3.750568,8.620770,-5.061069,2.311178,-6.903973,7.769517],[4.946610,-0.435516,-6.757926,-0.075649,8.372128,-7.670269,-8.034354,0.177404],[-6.130656,2.083415,-1.294233,-1.581975,1.784293,-6.850828,4.963508,2.462954],[-8.024387,-9.838795,8.833080,8.784548,-2.580282,7.939822,-6.331913,3.479044],[9.052377,-2.887536,1.296402,-1.618004,-7.954867,7.691893,-1.025085,-3.732772],[-1.458192,4.883511,-5.530182,-4.498802,6.240416,5.328845,5.519444,-0.871728],[-1.926151,-9.944624,4.349384,-1.105826,6.165952,6.307373,-0.857792,-2.092522],[-9.847659,-0.239810,-9.372742,3.693896,-8.627542,-8.853711,-2.326414,-1.756629],[1.486915,-7.620600,-2.914194,2.067521,-6.180640,8.906949,-3.976110,8.702197],[-4.989918,9.408400,5.590823,-4.697846,-6.644048,0.729957,0.340937,7.054853],[-6.621321,8.900051,-6.587173,-1.773763,1.149664,4.173861,-3.042573,4.361536],[-5.752409,3.245750,0.909541,8.874079,-3.264188,-5.321188,1.839837,0.594589]], dtype = "float64")#candidate|7921|(108, 8)|const|float64
call_7919 = relay.TupleGetItem(func_2597_call(relay.reshape(const_7920.astype('float64'), [14, 9, 9]), relay.reshape(const_7921.astype('float64'), [864,]), ), 2)
call_7922 = relay.TupleGetItem(func_2601_call(relay.reshape(const_7920.astype('float64'), [14, 9, 9]), relay.reshape(const_7921.astype('float64'), [864,]), ), 2)
func_4349_call = mod.get_global_var('func_4349')
func_4354_call = mutated_mod.get_global_var('func_4354')
var_7926 = relay.var("var_7926", dtype = "float32", shape = (156,))#candidate|7926|(156,)|var|float32
var_7927 = relay.var("var_7927", dtype = "float64", shape = (455,))#candidate|7927|(455,)|var|float64
var_7928 = relay.var("var_7928", dtype = "int8", shape = (288,))#candidate|7928|(288,)|var|int8
call_7925 = relay.TupleGetItem(func_4349_call(relay.reshape(var_7926.astype('float32'), [12, 13]), relay.reshape(var_7926.astype('float32'), [12, 13]), relay.reshape(var_7927.astype('float64'), [455,]), relay.reshape(var_7928.astype('int8'), [288,]), ), 1)
call_7929 = relay.TupleGetItem(func_4354_call(relay.reshape(var_7926.astype('float32'), [12, 13]), relay.reshape(var_7926.astype('float32'), [12, 13]), relay.reshape(var_7927.astype('float64'), [455,]), relay.reshape(var_7928.astype('int8'), [288,]), ), 1)
func_2447_call = mod.get_global_var('func_2447')
func_2449_call = mutated_mod.get_global_var('func_2449')
const_7938 = relay.const([[-9,-4],[6,-7],[9,9],[10,-1],[-1,4],[8,9],[-9,4],[6,-1],[-4,-4],[-6,-3],[-6,5],[4,-2],[2,2],[3,2],[2,7],[8,4],[2,-2],[8,-3],[2,2],[-4,10],[-4,6],[2,1],[-3,-3],[-4,-5],[-5,-5],[4,9],[6,1],[8,7],[-4,1],[-10,9],[9,-6],[-8,-9],[8,6],[-2,10],[-8,9],[2,2],[-7,-1],[3,10],[-1,5],[5,-2],[10,7],[-5,-9],[9,3],[-3,9],[-5,-7],[-10,10],[-3,-1],[-3,-3],[1,4],[-8,10],[-10,-1],[5,-3],[8,-1],[-8,2],[-10,-2],[-7,3],[-9,-5],[9,-6],[-8,3],[5,-8],[-7,5],[-1,-9],[-1,-1],[7,8],[10,-3],[-9,-9],[-6,-4],[8,7],[-10,1],[9,-2],[10,-9],[-9,3],[10,-10],[4,8],[2,2],[6,7],[2,-7],[7,-3],[3,4],[-1,-1],[2,10],[3,-8],[3,-6],[9,-5],[1,-2],[-1,5],[-9,6],[-5,-10],[10,-5],[-1,-7],[2,1],[7,2],[8,-6],[1,5],[-2,9],[-9,8],[-1,4],[5,4],[7,7],[-3,-3],[3,10],[-3,-5],[5,6],[-4,-5],[7,-5],[-3,8],[-6,3],[5,8],[5,3],[4,-5],[-3,5],[5,-10],[-1,5],[-4,1],[9,7],[10,-4],[-5,3],[7,10],[-10,5],[5,10],[-10,10],[-9,4],[-5,-3],[-10,7],[4,-7],[-9,10],[2,-7],[-3,-2],[1,7],[-3,7],[3,2],[-5,-9],[1,1],[-2,1],[8,-10],[-4,-4],[-6,-4],[-3,6],[9,1],[7,6],[-7,9],[-9,3],[8,-8],[6,7],[4,-1],[-10,-5],[5,4],[6,-1],[6,2],[10,-5],[-9,-1],[7,-8],[-7,10],[-8,-8],[-10,6],[-4,-1],[-6,-6],[-8,-5],[5,3],[1,-5]], dtype = "int64")#candidate|7938|(160, 2)|const|int64
call_7937 = relay.TupleGetItem(func_2447_call(relay.reshape(const_7938.astype('int64'), [8, 40])), 1)
call_7939 = relay.TupleGetItem(func_2449_call(relay.reshape(const_7938.astype('int64'), [8, 40])), 1)
output = relay.Tuple([call_7912,call_7919,const_7920,const_7921,call_7925,var_7926,var_7927,var_7928,call_7937,const_7938,])
output2 = relay.Tuple([call_7913,call_7922,const_7920,const_7921,call_7929,var_7926,var_7927,var_7928,call_7939,const_7938,])
func_7942 = relay.Function([var_7926,var_7927,var_7928,], output)
mod['func_7942'] = func_7942
mod = relay.transform.InferType()(mod)
var_7943 = relay.var("var_7943", dtype = "float32", shape = (156,))#candidate|7943|(156,)|var|float32
var_7944 = relay.var("var_7944", dtype = "float64", shape = (455,))#candidate|7944|(455,)|var|float64
var_7945 = relay.var("var_7945", dtype = "int8", shape = (288,))#candidate|7945|(288,)|var|int8
output = func_7942(var_7943,var_7944,var_7945,)
func_7946 = relay.Function([var_7943,var_7944,var_7945,], output)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_7967 = relay.TupleGetItem(func_7750_call(), 0)
call_7968 = relay.TupleGetItem(func_7751_call(), 0)
output = relay.Tuple([call_7967,])
output2 = relay.Tuple([call_7968,])
func_7975 = relay.Function([], output)
mod['func_7975'] = func_7975
mod = relay.transform.InferType()(mod)
output = func_7975()
func_7976 = relay.Function([], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_8024 = func_7521_call()
call_8025 = func_7521_call()
var_8034 = relay.var("var_8034", dtype = "bool", shape = (6, 14, 16))#candidate|8034|(6, 14, 16)|var|bool
bop_8035 = relay.left_shift(call_8024.astype('uint32'), relay.reshape(var_8034.astype('uint32'), relay.shape_of(call_8024))) # shape=(6, 14, 16)
bop_8038 = relay.left_shift(call_8025.astype('uint32'), relay.reshape(var_8034.astype('uint32'), relay.shape_of(call_8025))) # shape=(6, 14, 16)
func_3385_call = mod.get_global_var('func_3385')
func_3392_call = mutated_mod.get_global_var('func_3392')
const_8040 = relay.const([-1.476972,-0.099729,-8.250544,-7.035091,0.364534,-7.491742,-4.592315,-0.313669,3.098564,-7.183936,0.088770,5.058416,-1.516302,2.038902,9.280740,-2.517720,-6.950352,6.800288,3.550307,2.957535,-5.371962,-8.352727,2.929453,-6.515248,-1.750226,6.286725,-1.994122,7.646895,1.551236,7.908694,-4.949339,8.368075,-4.944920,1.526599,-5.388122,-8.442864,8.305911,4.178680,2.181142,5.123197,6.887191,9.223477,-9.990293,-4.865013,-2.349727,-5.284095,3.104089,6.348877,-5.082669,1.553832,5.392847,1.099911,-9.083308,-9.556770,1.182697,2.216601,-4.926562,-8.840369,-0.547444,1.374756,-3.097171,2.545307,9.742192,6.343654,-9.451787,-2.321549,-9.615757,-7.535747,5.574971,8.912223,-5.002605,1.840669,8.723326,1.319087,-2.193334,-9.951938,1.098425,-4.346899,-6.968510,-1.222025,-6.920153,4.145583,9.272668,0.193819,-2.928252,4.691204,8.563870,3.298392,-4.260708,-9.865780,1.930111,-3.500530,1.109849,6.295896,-3.604948,-8.471546,7.476442,-7.640158,5.736722,2.763641,-0.819582,-1.666243,5.722750,-7.745146,3.553481,-3.261271,-8.969649,0.498225,6.229199,2.894390,-8.350737,-6.918387,8.075598,-6.404487,-5.416314,-5.055852,-4.239811,-7.759041,7.759885,-6.490528,-8.288009,6.816326,0.718588,-8.253485,-9.288674,-2.431372,5.909539,-5.338061,3.184313,0.631957,-4.881621,-4.731216,-5.718911,-9.326529,-1.111781,-6.874222,2.350348,5.853092,-3.401035,1.384570,4.216893,-6.087359,-9.923733,-3.005573,4.781867,4.667106,4.284781,1.730277,-5.959650,7.977012,-6.216083,1.123843,-0.365700,-7.255227,-8.689676,3.049412,5.319929,-4.890962,-3.136248,-8.996705,-5.603208,2.874970,4.526191,-5.998339,-8.488890,-2.166585,9.380752,-1.978676,-5.024444,8.627549,-6.994816,5.103291,-6.234566,8.774567,-8.237215,-8.158855,3.540833,-5.391805,-0.995054,-8.901512,1.876310,5.122817,6.958864,-5.541880,-9.268107,-0.623351,-0.397479,2.778853,-2.461221,3.292643,-1.707201,1.371682,3.222782,-3.557095,-3.609928,-7.067374,-0.806217,3.678053,7.760152,0.164861,6.807915,-5.108055,7.782518,-8.600057,-9.897988,-8.417740,0.376768,-3.893573,-7.360891,3.293554,5.091280,-9.284939,9.951911,4.765307,4.555963,7.127737,0.757081,-4.904195,5.128266,-1.083615,-0.833851,-8.087924,-3.852881,-8.959660,3.127069,-2.161839,2.473170,-6.381461,-5.199055,1.378600,1.250934,-1.274849,-2.472913,0.999911,2.791829,8.264512,4.416837,9.698261,-0.405170,-2.264574,4.313385,-4.843784,2.438686,-7.223285,4.861686,2.110227,-2.788200,3.872992,-6.266132,-0.252296,-8.627341,8.114873,5.110669,1.001718,-8.910414,0.440946,-4.072941,-8.033554,1.150561,7.023092,-8.224130,7.841419,-8.076178,5.347029,3.145093,-9.512428,7.855394,1.626065,8.311414,-1.173533,-8.054066,6.903623,5.881797,-1.081849,-4.294348,6.953810,-7.280793,0.042940,2.638465,3.365389,-3.037479,-9.108067,5.868949,-6.218655,3.870107,-7.643289,8.727173,-3.918354,6.854389,8.715734,2.392831,-2.946580,4.615033,-0.337760,-5.098828,4.108046,-6.188392,-8.414966,-1.919804,-1.728556,0.857976,2.429056,-2.318583,-8.740923,5.542731,-0.414024,-2.545380,-7.458538,-4.057704,6.434641,6.469897,-3.273723,-1.327455,2.997418,1.739679,-2.380661,4.056727,0.589308,-4.012728,4.627527,8.610876,-6.107021,7.072728,3.472410,0.840577,-3.949062,-1.560557,-5.808498,-8.825670,8.108700,2.377790,-1.640350,1.799077,6.335575,8.960584,8.162272,-8.980694,4.666467,0.565691,2.986308,1.956767,0.031236,-5.537448,-1.472370,6.685576,7.756804,-6.254577,8.678285,5.634047,9.706255,-5.596302,-3.281351,-8.677289,-2.529194,-0.935719,-3.832111,1.006619,5.462070,-4.874577,-0.936028,6.479770,-8.819343,-8.129697,-5.378364,-6.807912,-4.293627,-8.468876,4.092383,-2.001781,-5.001251,-2.502754,-0.712158,-1.865064,3.259502,-7.152839,5.255403,2.043227,1.370948,7.063196,-9.789884,8.863558,-4.923220,2.177251,-9.133106,0.678063,-1.213778,6.062942,-3.627789,7.650241,-5.409600,1.771411,8.114312,-1.842757,-8.936943,-9.394698,9.262294,-1.290531,-8.532657,-9.303444,0.877519,0.572345,0.405035,7.862296,5.309940,0.903927,-4.287923,1.854522,-0.907542,-4.009011,4.200639,2.012060,-4.596940,1.401757,5.944551,2.515540,2.224148,-9.221534,9.369971,-7.838667,-2.811893,1.423364,5.659034,5.873291,-3.306522,-5.080225,-3.135787,-6.150586,2.548056,4.435079,5.828133,-9.466466,-2.059143,6.921240,-3.036005,-4.797235,-8.216591,3.688834,-7.645313,8.224982,-2.712236,-5.617837,5.746053,7.793994,-1.380059,1.296655,6.625265,0.717465,-3.081685,3.888529,-6.214929,-5.351958,4.228128,-8.824108,-0.826616,-2.243440,-2.151982,9.803592,-7.584592,-7.002537,-6.955954,-3.135217,8.865147,9.316172,2.622909,-4.235148,-1.335698,-6.294002,-6.884293,3.881342,-2.747489,5.424290,-9.471864,-7.042135,3.854815,-6.481167,-0.410752,5.764684,-2.567109,9.877769,-8.117506,9.976460,-9.246923,-3.911633,0.505171,4.628818,-1.177546,-3.515570,-1.777956,2.667191,7.144481,8.209085,-1.785449,-0.951237,8.782196,-5.830909,5.363532,-8.734183,7.403596,8.415841,-2.678554,-8.335970,0.260490,7.688153,7.337608,-1.244782,-9.322394,-6.425391,-3.229473,4.148561,6.940640,5.327829,-0.876136,-8.778726,0.356104,-4.530334,6.529132,-3.784345,3.630742,-1.305994,-0.930663,3.420858,-2.266449,4.560853,-4.245173,-3.333319,7.304944,7.317149,0.665439,1.586904,6.902730,-9.262242,1.943526,4.502715,-5.086223,6.446613,-1.741608,-8.045777,3.176765,-8.761501,-1.021325,2.193694,-1.489181,2.858019,-2.120012,-7.993606,-7.872095,-1.247498,5.961368,-5.022576,8.281267,-5.757505,0.395201,-8.772944,1.395526,-0.972024,7.428697,1.772463,-9.675149,8.473288,4.606362,-7.751876,-2.772694,4.360572,9.680914,-5.211477,-9.796243,-9.276318,5.049720,-0.754714,8.331486,-0.612474,-4.656532,9.524911,1.484130,0.495932,-4.020285,-5.315808,9.398005,2.272012,-9.026720,9.026867,-6.375892,-4.178919,6.065210,-0.430213,8.086784,0.924156,-1.516177,5.150314,-6.179089,6.147869,-3.277160,4.480489,9.267464,-8.456249,-8.897130,-0.365635,-5.834150,-7.987461,5.207175,-7.468734,-6.111557,-3.594237,-0.312901,-8.540269,4.958323,-1.490575,0.773085,9.282647,-8.215395,-1.561184,2.011521,0.727226,8.484509,7.779130,5.354275,-3.988414,-0.499410,-5.398204,-1.768304,9.113752,-3.113034,0.403221,8.699660,5.465944,8.306516,3.156013,-5.166056,-4.830049,-8.900327,7.812817,9.594599,3.455495,-3.682544,4.554424,-6.594141,-4.642527,-5.405225,6.543137,-6.713418,4.700899,-8.218564,0.611961,0.401549,3.372762,2.577720,1.904542,-2.658276,-1.676650,8.727557,4.994574,-7.105630,-7.711989,8.716599,9.938781,-7.611714,8.226206,3.920420,-6.496556,-5.216937,-5.502211,-3.832862,8.427648,3.307488,7.977980,3.857168,-3.320118,5.365579,-9.940420,-1.360781,-4.844724,-2.257095,-4.916907,-6.216928,-3.835438,-3.195887,8.940923,3.112499,9.409163,-5.279226,8.169487,6.746133,-7.585913,-5.066949,0.718999,-2.618940,-6.722952,-2.476801,-0.218800,8.659370,4.280905,0.206109,-1.322130,6.342137,2.824360,-1.670474,0.316124,3.592922,-1.243942,-4.188013,-6.691202,-7.973550,2.489676,8.805239,2.529878,1.121644,-1.050772,9.174566,2.795376,-4.573446,3.116124,8.211401,-5.695971,-7.916350,-6.013879,2.765028,7.596811,9.313842,-8.541125,-5.020871,4.666874,-5.220646,-2.673413,-7.474712,2.534795,2.470072,-3.769919,2.484930,1.881425,6.803111,7.127845,-5.096209,-2.879373,4.569923,4.115237,2.904101,1.293306,-3.811012,9.285361,3.700486,-6.801637,7.055818,6.787434,5.740482,-3.653044,5.618996,6.953519,-9.060547,1.958349,-3.599752,6.892827,-0.272965,-5.399007,6.280464,8.824354,-5.406624,9.070540,-8.175520,-3.926280,9.548879,7.115042,-2.500347,-2.380343,-6.220905,9.964663,-8.539878,-2.050209,3.851140,-4.395501,5.602262,-3.728753,0.601430,5.210721,-9.687974,2.052284,4.357953,-2.647537,-3.388735,-5.258930,3.204258,1.923779,0.773042,-8.136860,-2.484916,1.141792,-3.244422,4.518890,9.828407,-7.769276,9.629981,0.943408,-8.757372,-7.524679,-9.621645,2.578943,-3.271437,-0.153516,8.241236,0.709321,0.311137,2.603492,-2.494545,6.670663,5.685379,8.196818,5.594501,8.612532,8.776518,-5.294732,1.181280,4.503243,4.270821,9.722345,-7.616413,-8.364999,3.887554,2.208209,1.409402,3.475298,-2.228473,3.362747,4.562659,9.930615,-6.771876,-7.441578,-3.886299,-8.501601,9.066920,-3.457095,-3.804163,8.661577,-2.999906,9.551285,7.487822,-2.433839,2.020495,-4.466999,1.334853,9.013244,5.408683,0.679243,1.461418,8.416146,1.611794,-2.522487,2.886152,0.880010,1.953481,0.303918,2.973651,-2.087384,6.942283,0.930391,0.375940,-7.636056,-3.390651,-9.250699,7.702371,6.640378,5.424345,-4.049344,3.032702,-1.304653,-9.048573,-5.852930,0.072607,4.349369,3.108730,2.545556,3.458335,6.046257,0.858811,-0.532839,-6.182747,4.447047,3.656042,-6.680569,8.798620,4.845625,-4.966509,1.844916,1.853561,-7.390655,3.760958,4.648965,4.971718,4.246604,-6.324306,-4.322567,8.378974,-4.450750,3.175019,7.642356,2.315946,4.743300,-3.773000,8.487468,0.619266,-2.521378,-8.287360,2.644010,3.750642,-5.644379,-3.095490,-6.571617,7.481913,0.912530,0.525999,8.679621,3.739226,-8.446765,-9.714186,2.333063,6.083488,-8.192145,1.588331,8.263315,-3.767704,-6.710621,-8.085958,-8.748690,5.185890,2.715105,6.914219,6.175874,2.266895,-1.338942,-5.794222,2.165874,-2.676761,8.356912,1.819833,-5.619790,-3.190362,3.549143,9.072308,-0.028978,9.859559,7.272061,7.102857,8.932803,-8.272699,-6.939837,-6.148682,-7.684873,4.028157,-4.093352,-9.613992,6.268058,-9.404992,-1.189986,-2.113411,-4.891159,-3.883237,-0.273135,1.233574,-2.195790,-7.692958,-1.873797,-0.070317,1.198256,-0.462024,-8.340758,-0.382904,6.032286,-4.428673,-2.087641,5.476422,-5.791319,-7.999975,4.066674,8.960938,2.655530,-7.771407,-6.240591,-5.317339,-7.270462,8.171738,3.696933,-2.031358,-6.208677,-3.823773,-3.886170,-8.908079,9.581074,8.498318,-3.516011,-1.787352,-1.969511,7.423774,5.713237,-2.256053,-0.934722,1.369544,8.452967,-1.151169,-0.734682,-9.525183,-1.758337,-1.688467,1.238664,-0.886451,-7.100346,2.982563,3.461823,0.703187,-2.774174,7.677201,1.662936,8.685220,-1.562353,9.525566,-6.584824,5.339698,-8.498248,6.121960,-5.102333,8.770450,-8.352035,9.508287,6.573050,0.887968,5.477062,-9.579603,8.726374,7.871498,4.518227,-0.701429,0.960320,4.182475,0.178517,7.220769,-7.533095,-1.107747,-1.081869,0.414812,-8.198106,8.794807,2.623234,0.647845,3.304338,-0.116447,5.883269,7.589772,2.908105,-5.770974,1.180256,-0.904802,-1.283299,-0.945754,-8.885135,-3.408148,-2.835667,-2.289907,6.046142,-5.812355,7.130786,2.942194,-5.448085,8.477408,3.970021,-3.511732,5.486713,8.482541,-2.429005,-2.078928,4.979231,4.750666,7.792847,0.673179,3.817035,0.315879,-0.566754,7.098139,1.150449,-7.781276,-0.034629,9.732879,9.364579,6.769111,1.602153,4.832466,-8.760851,-3.290374,-8.120222,-7.645594,-7.255227,-1.148509,1.183528,2.431426,-2.884978,7.879591,-6.219066,6.221644,8.526385,0.934481,-1.575440,7.352119,-0.479853,-2.413618,4.018212,-9.526144,4.800219,2.475265,9.934608,3.297665,-5.822535,-7.949609,-2.522105,5.701393,5.791704,-1.406480,9.999817,-4.785437,8.915428,-6.370755,-3.333390,-3.780577,-5.020024,-1.311896,-5.745814,4.046653,-5.415028,-0.954079,9.168929,7.640707,-9.960822,3.880599,4.096154,5.905089,-0.411466,-5.017076,6.865129,-5.112904], dtype = "float64")#candidate|8040|(1134,)|const|float64
var_8041 = relay.var("var_8041", dtype = "int16", shape = ())#candidate|8041|()|var|int16
const_8042 = relay.const([8.125577,-6.007351,-8.192960,9.503773,-3.364539,4.277539,0.873601,-4.155601,0.622907,6.532605,8.737692,9.526822,-3.542367,-0.179811,-7.706216,-6.785494,8.246500,7.552604,2.742968,6.343415,2.240041,0.396615,-5.634130,4.153068,-2.263843,1.395830,0.389823,-9.457839,-9.183171,4.750183,-1.394389,-0.246267,9.590423,7.398032,3.211589,-2.409871,8.070646,2.839327,4.944548,4.201700,3.058892,1.941906,5.930481,-4.194480,-3.875052,7.999899,-7.639962,9.642906,3.729568,-0.720677,3.828621,3.227104,-5.397632,-7.975163,-4.858253,7.855375,-8.150311,-0.636935,-2.161309,0.987383,6.953184,6.787609,8.268700,7.458325,6.546290,8.099892,-8.206048,3.326942,7.684873,2.136362,-5.055748,-4.013157,5.160623,-1.195287,4.696938,0.952349,-8.878279,-0.783990,0.255226,1.592756,3.231055,1.364181,5.617792,-3.396941,9.289551,-2.010959,6.174258,-2.074651,-4.372031,-5.733268,7.538818,-1.992751,1.778126,8.140208,-5.124442,1.080818,6.384766,4.592628,-3.217807,2.964796,2.484398,3.251256,-5.914316,-9.143838,-3.934542,0.870753,-5.862420,-4.816825,-3.565483,-5.690268,-4.943350,5.543758,-4.299339,-6.387848,-2.986644,-4.756006,-2.203596,-5.539264,-2.769589,6.759179,-5.737910,-1.438962,-6.460959,-0.353722,-8.469316,4.893716,-1.603723,-1.393804,5.101988,7.804986,-5.946080,-5.410841,3.518237,-3.604446,9.603303,0.442253,-5.048281,-1.978764,-1.392133,6.581295,6.379402,7.581612,6.825483,-8.711201,-9.838959,6.030150,-6.159225,8.228467,-9.831621,8.739167,2.936483,7.910807,-9.175847,-1.305560,-5.481940,4.342343,-2.379044,-8.744031,-5.992258,5.884374,-6.014679,8.256162,-2.208791,6.729349,-6.223950,-0.094868,5.888053,4.942166,1.408044,-5.692743,-5.263108,3.634600,-9.303773,-3.598980,-8.947529,9.815322,-3.854987,6.823709,-6.368142,-8.010359,1.870805,-5.265340,-3.903189,-3.984484,-9.775286,-9.213620,-3.464732,9.671424,1.582998,2.353074,9.115573,-4.982859,-0.617062,-8.362006,-2.377856,9.816794,0.215068,-1.425349,-9.284252,3.516710,8.603133,1.473429,5.883802,-8.253242,-8.162260,3.450560,5.931715,-0.210523,5.407931,-2.557551,1.544891,-5.352585,1.947607,-9.966163,3.687117,-5.611599,7.366154,1.163167,7.918555,1.998086,4.114992,3.797229,0.482819,-9.013234,7.638551,-5.179098,7.537304,7.657714,-5.572286,-3.859413,-0.956380,-6.283144,-1.540997,-0.597475,-1.708725,9.590999,-7.499980,-7.517439,-3.231892,2.990639,0.090298,-9.068429,-4.152809,8.250608,-1.428430,-3.654444,5.707282,-5.555961,-8.681558,4.698558,3.575898,7.137493,6.454523,8.015382,-9.142673,7.296669,-6.173215,-7.317768,-3.481997,6.087615,8.312349,4.862017,5.189976,-6.189911,-1.467118,-9.317467,7.471101,-7.036427,8.675931,-8.475486,-8.420450,6.360144,-1.734523,0.972446,9.375603,9.099916,-5.710589,0.145948,-7.959518,-9.513592,1.697078,-8.452762,-7.346471,-9.561109,-2.334825,7.774750,-3.272026,-1.637238,7.031119,4.087548,-4.295714,7.940257,2.470039,-2.895948,5.412711,5.533624,1.327952,0.234292,-0.727070,6.566456,-0.735732,6.211132,2.305560,2.741490,5.897171,-9.153395,2.589066,-5.295947,-8.959407,6.165699,9.761174,8.514010,-5.116809,-9.826406,-4.515334,-8.407531,3.297185,5.475911,2.024620,8.502202,-2.562523,-6.255236,3.967692,-6.837060,-4.660280,6.870391,-2.089784,-8.759827,8.774804,7.000194,5.920587,6.633333,2.857745,1.891235,2.750092,2.678272,-3.725916,-3.260302,6.744064,-8.404246,-3.723466,6.003929,-0.231213,6.012944,1.988745,8.012009,-5.028151,2.438563,4.582260,-2.274164,6.733722,-6.678099,-3.501827,3.071285,-8.344168,7.196982,-7.417805,7.691073,-8.589236,-0.506385,-8.642413,-1.912857,-1.062638,-3.856834,8.912499,8.188162,4.991868,-8.862383,-2.257487,3.926112,5.718049,7.079175,2.915519,-4.184012,2.159959,2.270925,-3.957781,6.662828,9.046087,8.360266,-1.509822,7.757412,-5.691687,4.768983,-8.484252,3.126950,8.592930,6.242949,-6.242841,1.313104,-1.059197,8.041467,-5.875903,-4.213434,-6.655173,-3.325922,-8.229393,-2.743655,-0.002934,8.655080,-0.685647,-5.208129,9.402374,5.198072,-5.365388,0.600556,3.677723,6.860675,4.305600,-8.989777,8.597110,7.546138,-0.324840,5.995538,5.166724,3.460602,1.575074,-3.331789,6.718091,-6.785217,-4.785796,8.460047,-2.292811,6.279763,-3.278586,-5.527050,1.332274,3.120219,2.406044,-3.762476,5.054011,7.780512,5.430944,5.728805,1.900603,-1.320737,0.808675,7.418613,8.204323,-3.955794,-4.916463,5.273983,-2.637141,-1.203275,5.065679,-1.750341,-7.927781,-8.273551,3.103395,6.184685,9.490154,-5.119950,2.547004,3.194032,1.988579], dtype = "float64")#candidate|8042|(455,)|const|float64
var_8043 = relay.var("var_8043", dtype = "int64", shape = (320,))#candidate|8043|(320,)|var|int64
const_8044 = relay.const([-10,-8,-2,-10,8,10,-4,4,-1,-3,8,-10,-7,-4,-5,1,-9,-10,-9,-5,-6,3,-10,-8,-5,5,-6,-6,2,-5,10,-4,-4,-9,-7,-9,1,-2,1,1,10,9,-3,-10,-4,1,2,2,4,-10,8,-3,-3,10,-7,-8,-9,5,-4,6,-10,2,4,10,5,-8,-9,-4,8,-4,6,-1,3,-8,1,-6,3,-4,2,-5,-4,-2,6,3,1,-10,-3,6,1,4,-8,-4,8,7,2,9,-7,-6,10,-10,1,9,-4,-8,9,-6,2,-7,8,2,-8,-5,-3,-9,-4,-3,-8,7,-9,5,-8,-6,-1,-3,-9,-8,-8,-1,5,6,-6,4,-5,-5,7,2,-3,8,-3,2,7,-8,-4,-10,6,10,-6,7,-5,-6,4,-8,8,2,6,-3,5,-10,10,-10,5,-8,4,2,10,2,10,3,-5,-1,-1,5,-8,7,-6,-2,-6,-2,10,8,4,5,9,1,-5,4,-7,-3,8,2,-4,-3,-7,-9,-10,6,-6,-7,-9,8,3,1,4,6,2,4,-2,-8,-3,-5,-5,-9,4,-7,-6,-6,-8,-8,10,2,10,10,6,-3,5,2,-1,-5,6,-7,-7,-1,1,-7,5,-1,-7,9,8,-2,9,7,6,-6,-1,7,5,3,9,-7,1,-1,10,2,9,-3,2,2,-1,2,-1,-2,-9,4,-6,4,8,8,3,-8,-5,-5,-2,-5,-5,-6,6,-3,-4,-2,-8,10,10,-6,7,7,4,9], dtype = "int8")#candidate|8044|(288,)|const|int8
call_8039 = relay.TupleGetItem(func_3385_call(relay.reshape(const_8040.astype('float64'), [1134,]), relay.reshape(var_8041.astype('int16'), []), relay.reshape(const_8042.astype('float64'), [5, 13, 7]), relay.reshape(var_8043.astype('int64'), [320,]), relay.reshape(const_8044.astype('int8'), [288,]), ), 4)
call_8045 = relay.TupleGetItem(func_3392_call(relay.reshape(const_8040.astype('float64'), [1134,]), relay.reshape(var_8041.astype('int16'), []), relay.reshape(const_8042.astype('float64'), [5, 13, 7]), relay.reshape(var_8043.astype('int64'), [320,]), relay.reshape(const_8044.astype('int8'), [288,]), ), 4)
func_4440_call = mod.get_global_var('func_4440')
func_4443_call = mutated_mod.get_global_var('func_4443')
const_8056 = relay.const([-3.689422,0.012304,-6.346970,0.229348,-1.548565,8.444833,-5.680790,4.176953,3.330238,-2.788769,-2.131689,0.871271,-6.119302,9.930262,2.193009,6.392994,-6.951161,-7.124518,-0.438693,-4.233712,5.278402,-8.687270,-7.474239,-2.898589,-4.918259,0.409572,-0.545403,6.850314,-5.637912,-2.561933,8.858063,7.019242,-1.888490,-9.372988,2.353695,-8.537444,-2.199467,-1.854661,-4.591225,5.092533,0.024920,-7.895485,4.200144,-9.635729,-1.813843,3.012264,0.909133,6.284238,-4.057292,-8.551298,-2.787169,-2.428114,-5.650007,6.819560,-6.935135,8.830283,-7.625828,6.283139,6.138962,3.548311,-6.689344,7.100623,6.267697,5.150657,0.269162,7.298156,-2.916869,-3.171496,-8.410555,-1.679232,-2.655130,5.172808,8.840822,-3.625870,-2.947596,-7.018600,-5.020815,-1.508663,-7.398026,5.122416,-0.649843,2.790382,9.752495,7.254358,-7.005903,-9.322502,2.137305,6.116141,-0.525776,-6.549558,8.401710,5.996266,-3.776671,8.632426,6.901754,-8.394208,9.265507,2.050245,-9.183683,-0.758207,-0.798932,1.926778,-0.083897,-1.379520,6.569121,-8.332717,2.374892,-5.584695,8.129576,-6.692115,8.425580,-9.925759,-5.930401,1.533822,-2.755067,8.471167,-0.765228,7.333906,6.959829,3.581197,-1.398940,4.957844,7.778389,5.755761,2.008231,6.968309,6.591445,1.583446,7.063489,-7.701320,8.620879,-1.942130,-9.868204,-9.001347,9.200673,-6.100749,1.553679,7.104467,-0.500996,-0.937901,-2.711344,-0.474553,1.292955,-9.074971,-4.925553,0.928314,-9.271756,4.320083,3.393122,6.219386,1.481402,-2.825824,3.979900,4.981817,-1.007554,-0.022116,7.456980,-6.191474,-3.660275,-9.298366,2.853211,-3.032885,5.737887,6.989687,-9.475615,-4.161170,-7.280986,-3.439695,-5.501341,8.455467,3.314377,-8.518801,-3.627026,-7.562979,5.866784,3.966329,-4.632214,-4.492835,8.153139,-3.640473,-7.507857,6.409612,7.278649,5.740831,2.795043,-4.267579,-9.274206,-6.581678,-5.075772,3.039521,5.843626,-5.696619,0.932148,1.334043,-0.660663,-1.168062,-9.232515,-7.291311,6.868516,-9.448318,-2.396791,-6.873533,4.753545,-9.422087,7.173561,7.797831,-9.138300,-9.453895,-4.170793,0.593945,5.641472,-4.509635,5.168713,2.572322,-5.072245,-7.852566,-2.926873,3.138940,6.124759,3.640384,9.007621,7.255554,6.939282,2.046239,7.348449,-5.233992,-5.141571,3.766035,7.362748,9.769155,-2.479973,4.986132,-8.051018,-5.508059,-9.226849,-6.552424,-4.837192,6.010980,5.255699,5.320395,2.451254,0.364512,-4.358119,-4.461128,1.731518,3.514011,4.839992,-4.055128,0.543095,8.028840,6.349176,-5.534227,6.506014,4.198068,-4.943136,4.885698,-5.595445,-0.968144,3.708768,9.400712,-0.488238,-7.740018,6.052770,1.021901,3.405831,-1.045472,-0.477869,-8.941623,-0.608224,-1.140834,4.990500,5.645890,-1.254485,-2.063259,-5.650565,-2.675392,5.014004,-2.312017,5.405391,0.702906,-4.097069,6.698080,-6.390565,-3.651658,4.724792,-9.745592,-0.420719,6.319817,4.999648,1.314011,5.524658,-3.800651,-2.936419,0.680337,-4.737464,6.062534,-2.728881,5.292543,-2.844309,0.499952,-7.690194,-3.920954,3.071642,0.484128,-2.829081,-8.788217,-3.278598,-9.066026,0.262508,-3.000782,-7.082586,-3.699487,7.877557,-7.752769,6.451290,2.497454,6.105780,6.041450,0.702783,3.375700,6.883157,1.944521,-9.708429,-5.687162,9.750870,4.380390,-3.440239,-3.786272,4.846112,-5.004643,3.019571,-9.659756,5.274431,6.716356,-9.328868,-0.025480,9.908721,8.095807,0.611296,0.004135,-9.810120,5.477744,1.629190,-2.062367,-3.500291,3.466107,4.006856,-3.969854,4.711546,4.882556,-6.938709,7.409367,-7.631443,4.835575,2.156524,-5.717779,1.431180,-9.062245,-8.490488,4.669183,1.633476,-5.899365,-1.173930,-2.495708,-9.952985,8.788850,2.978402,-9.313345,2.395728,-6.554725,6.253553,-9.458148,-9.920109,1.636553,-5.084711,9.862120,5.205449,-3.636945,-1.781089,-2.284261,-9.869482,0.149285,-8.904955,0.626815,6.578454,-8.012685,9.819331,3.871288,-2.153333,-7.802199,1.362884,-2.472757,8.137429,-9.081873,7.088185,-5.634383,-6.006820,-6.452027,-8.720207,-2.066800,1.279002,-5.198742,5.134222,-8.322226,-9.606799,-8.018178,-1.937782,-1.673417,5.669939,5.921922,8.458604,7.439480,5.918773,4.453217,9.849777,6.168459,-5.878335,8.284374,1.987688,6.051070,-1.540392,3.403297,9.886241,-9.483268,-7.251901,9.823234,-8.156140,7.025880,-7.017430,6.910677,-4.011455,-0.534684,-7.115789,-9.564082,3.830510,5.811342,-6.324712,-7.857628,-8.311873,-3.471454,-8.414136,6.565533,-5.803678,-3.676438,6.736394,3.575536,-8.234157,-8.437852,5.157264,-9.774873,0.822483,8.466273,-3.332744,9.405514,-4.341253,9.472510,1.801331,8.402423,9.916346,8.935793,8.254780,-8.854271,-9.281382,-9.774960,-9.973835,0.994792,-6.790920,4.685459,-7.289677,-6.196943,-9.433049,-7.203037,-7.862319,-9.940580,2.302342,-2.916307,-3.740124,2.497716,4.237154,-2.425963,-0.344624,0.259997,-0.224416,-1.335481,5.152908,-7.685094,-9.081472,-3.367065,-5.525206,8.388906,-6.040543,2.172790,-4.272444,0.627903,-8.330069,1.463955,5.590723,-9.390586,2.464689,9.901889,7.463737,8.608350,-3.730035,-8.416567,-8.285563,-3.926004,7.216239,0.396359,-8.935034,0.205123,-9.181632,-9.241767,-5.937984,-2.096997,3.120395,-7.315717,9.552098,-3.975703,1.939531,-8.915778,-2.787483,-3.162903,-6.933867,-0.296554,1.797520,-5.969535,-5.566231,2.089191,2.325949,3.633305,5.347384,7.710663,8.281472,-1.260613,-8.383291,-6.304270,-4.522687,-4.631623,-6.757975,0.061246,-2.891294,6.868503,-0.692203,4.507436,-1.846522,-8.109417,0.994747,-0.042388,-6.093791,3.138777,-4.405879,0.928680,2.998896,7.989130,-4.929183,0.934972,-9.687505,-3.262297,2.485018,-3.922390,-9.802774,-6.724563,-5.614463,-0.614023,6.694903,4.937213,5.559293,-6.954383,-7.440985,-6.868718,8.270305,-2.347872,-6.891008,-3.854096,-3.746751,-9.549321,-9.910077,-0.686118,9.999729,7.791619,0.439369,-1.714168,7.378666,3.497452,9.585171,2.077920,5.111675,-1.425786,-0.279308,4.917559,-7.925095,6.504407,-7.027110,7.242888,-6.195824,5.462018,-9.142749,-1.708990,-0.258560,3.238352,0.164670,-5.606241,-5.091503,-2.275895,-3.505058,-0.290375,2.069897,3.028397,8.501218,-2.810423,7.585085,3.246741,5.857022,1.520581,8.484767,2.098327,9.419568,3.540862,3.908860,-5.403064,-2.350820,-1.457892,-8.932439,1.989216,-9.867129,0.060020,2.666389,3.032591,-1.811283,3.662357,-1.200134,-1.542056,-0.510398,4.356792,-7.725714,0.220589,-2.608342,-8.030640,3.297634,2.075164,5.060214,6.972447,0.165282,-1.670301,-5.044729,-6.383997,-5.889889,-3.671001,-7.695720,-4.269357,-5.899376,6.680597,4.215495,7.366438,-4.027229,0.616343,-3.726198,-8.767007,3.258870,7.406239,-0.690574,-8.136856,1.326795,-3.382001,0.151373,-5.810333,-1.652462,-6.967669,5.475562,4.757572,-1.792209,-4.485765,3.319154,6.044038,8.957753,-9.242932,-8.567898,-6.069616,-9.106224,5.270359,-2.350539,8.542290,-7.532292,-1.628824,1.384742,6.729079,-3.298678,-2.021831,-1.432181,7.549539,1.089451,-4.910559,-0.838611,5.113523,3.530970,-2.791013,-1.878172,-2.202864,-1.667733,-7.595629,-6.648623,1.429006,7.378758,3.944898,1.900350,9.375146,-7.648812,-6.402229,1.953064,0.361243,6.381751,-8.545892,7.100616,-0.558382,7.943460,-9.731235,-8.727111,1.235364,8.730339,1.598145,4.312196,0.326936,-4.854255,-6.432323,0.955109,-1.339471,-5.765880,-4.526818,-5.283678,7.283810,-7.079382,9.126772,3.546330,-9.467978,7.759877,-5.184257,7.479048,9.100682,1.308783,8.705586,8.323934,4.724418,-8.964725,-0.805964,-3.516241,-7.020009,5.081996,5.315091,-6.821859,5.052945,-8.114648,-9.452783,-4.920515,4.352890,-0.325056,-0.121732,6.767029,7.976808,-7.944617,-4.356569,1.038996,2.719749,-3.617643,3.694387,-5.688111,4.788653,-7.389612,-0.753050,0.541085,2.219774,-7.501873,9.357110,7.096476,3.553679,-7.488383,8.083776,0.457358,-8.273108,4.510222,-9.595880,8.975453,-2.111037,-6.143365,-1.277682,7.166266,2.749180,7.159072,4.261554,3.872686,-3.310720,-8.129114,8.294669,-7.216584,3.327797,0.401465,-6.463211,4.330278,3.247402,7.650649,2.449769,1.154299,3.148956,-0.359437,8.545171,3.365373,0.504251,4.129968,6.939839,8.097649,-9.462127,6.244868,2.098100,4.332889,-8.163666,-6.270044,3.225449,-0.609244,-2.644284,8.988060,-9.862538,-3.148482,-7.056150,-4.269863,3.670959,1.455761,-7.831466,-5.724066,9.701652,-4.071886,3.927146,-6.664204,-6.570539,9.507486,2.314317,5.669885,1.730156,4.238814,2.336994,-2.907256,8.532972,-4.200569,-1.935511,2.328112,8.226494,5.960289,-8.515715,2.518514,-3.756179,-4.831943,-1.543922,9.939555,0.730029,6.076447,-7.582633,4.722990,2.033894,1.353807,4.073252,-1.455055,3.953668,7.929301,7.035874,-9.944085,9.340470,7.459848,-5.991651,6.739099,2.055688,4.373726,-7.850570,-9.946240,-0.632180,0.368212,-2.821294,-3.286591,2.779271,-9.638877,0.815904,-0.269916,8.552418,-1.386333,-6.229511,0.998217,-0.967829,6.938247,3.407438,5.965750,-4.625177,4.220808,-8.868178,-4.104005,4.884190,-0.117969,7.569727,8.685301,-8.875221,4.576557,-4.401551,-6.847571,7.025100,3.185227,4.681591,-8.007724,-1.850479,2.976089,-5.593021,-8.159110,-7.173509,-5.842695,-3.533076,-6.906052,0.287398,1.458711,-3.384357,-6.795907,-8.888259,-9.403266,-0.139077,0.564163,8.257682,3.713034,-8.739178,9.458172,-1.243059,-2.747981,-2.176494,0.417911,-0.125415,1.363238,7.218289,-3.453870,8.288632,8.700985,-6.807440,-5.519605,1.701473,6.630278,-2.169810,-8.234457,-1.919039,7.369834,4.274770,-8.803397,5.512231,-6.542050,6.604101,-3.267225,-2.188800,3.014878,-7.896928,-9.950844,9.215516,4.948325,-4.350613,9.589552,8.277096,8.507689,9.150152,-4.291832,7.711523,1.636509,-6.863677,-9.856830,-4.630556,8.971477,5.868559,-3.127743,9.206189,-9.294135,-8.781973,-0.257906,-0.055091,-6.181524,6.363996,5.623382,-4.516308,1.911348,-2.202512,4.215916,2.168562,-1.626312,-9.046834,-9.884348,-7.754133,4.746048,-2.104277,-4.636746,-7.761283,-9.548392,-0.418152,-2.093406,5.351869,7.708092,4.324702,-1.180514,4.000716,-5.512534,4.681536,5.339238,4.246536,-2.423938,-0.221271,7.183005,-7.836137,-6.159098,3.336255,8.179963,-4.630735,-0.810231,4.539529,5.693705,8.756588,-4.854375,-1.470791,2.873873,-9.304942,8.593532,-9.532204,6.363308,-2.566425,1.033393,8.828686,-0.597577,1.168818,5.130571,7.790679,9.593373,-1.626008,-1.733546,8.324881,8.556560,9.162093,-6.952719,5.317743,-6.017033,6.586589,7.855357,-1.930293,0.598640,-7.258827,-3.693919,1.091648,7.829665,7.309032,-4.564280,1.563353,8.840978,-2.970323,-4.561357,1.568175,0.449528,7.767783,2.050369,9.680037,2.883336,-5.449584,5.986286,-7.839698,2.490334,-5.137695,-5.106548,4.012682,2.786645,-5.299300,6.966504,-2.055720,-9.490156,2.655873,-2.363660,-2.333660,6.880336,3.157408,-2.000288,7.916248,-7.493634,3.525940,6.628824,-8.336481,-3.754597,-1.143732,-2.107775,8.199523,-1.918026,1.227673,3.142757,4.484801,-6.851434,9.354805,-3.098703,-7.941771,8.504795,9.019505,4.609470,7.007853,-4.805198,0.360891,-2.651481,-0.256873,-1.431228,5.833609,5.751303,-8.044183,-1.870583,9.169456,-0.207483,1.538564,6.898005,-9.940086,-5.370915,6.844067,6.562720,9.179800,4.316665,2.589128,9.245193,3.650637,4.437360,-5.608524,3.223122,-2.601508,-6.693628,3.655054,-7.732611,-5.184796,3.360036,-9.097150,-5.752621,5.579879,2.762927,1.006818,6.171112,7.004378,-2.985760,-5.595819,4.372462,3.926901,-5.454674,-4.002150,-9.101522,6.520696,-4.591527,3.059343,-6.632863,-5.168898,5.864680,-7.652583,-3.267261,7.928738,-8.715940,-2.364296,-8.552818,4.475669,6.055846,6.583429,-2.755656,1.993293,-0.864786,6.701179,8.765218,-9.290321,-9.313239,-4.772313,8.860987,3.984971,8.679054,4.273399,-4.559020,3.390417,-9.118057,8.630273,3.347021,2.425516,0.994607,-7.935392,-2.612610,6.954957,-2.007409,2.924968,2.509055,3.677844,9.114979,-2.898450,6.505723,5.591563,0.501726,-9.441569,7.796862,-5.904059,-4.078828,-3.414852,-9.501305,7.244433,3.961440,-0.989385,-8.754578,4.255802,-4.395361,9.035240,2.363537,-5.140226,7.294267,-6.601310,-0.314736,-8.678027,8.116138,-3.716579,-6.328333,-7.235067,-5.152407,4.447795,-6.639192,-6.759279,-8.948827,-0.934524,-9.933493,-4.530895,9.272500,8.864309,-0.484524,7.500886,-0.611091,3.062148,4.299528,-0.395669,-3.562008,-3.287505,-2.975083,3.659171,-3.878579,2.303556,-8.466843,1.508789,-5.460168,-1.372638,-0.832252,-9.353410,4.494924,4.188286,-9.046371,-4.998955,6.155069,6.655521,-3.196832,8.763737,1.562013,4.148499,-2.740808,6.166247,3.984753,7.279212,5.664202,-1.134897,5.855541,-0.730387,1.495017,-4.414912,0.598480,3.585448,8.097337,0.988330,2.493490,-3.976008,1.689665,-0.481367,5.782560,-5.007721,7.316720,4.711559,-6.491321,-5.366164,3.785858,8.586488,9.893861,-7.389133,9.427726,3.978233,-4.374419,-3.812559,0.543717,0.063618,5.088019,-8.569019,-6.199078,0.575240,5.168524,7.818488,1.659390,1.678426,6.857705,9.781978,7.803735,2.528729,-4.603471,8.393362,-5.656973,0.975176,-3.508100,-9.674019,8.595449,-0.620317,-2.887164,4.378506,-5.062816,-3.563052,-6.642265,-1.327446,-0.397900,-4.347384,1.945677,-5.036992,-3.280703,3.088596,8.565260,7.479716,-6.417967,3.408120,7.149600,-5.018539,-7.431322,3.881865,-8.977032,-5.724343,8.133713,8.981263,5.518386,-9.400945,8.357306,-7.118639,-2.162406,-4.373917,4.149336,5.580004,-7.237139,-4.327121,-0.719110,-4.504032,1.439481,6.162904,3.277058,-6.447131,-4.890513,-7.644167,-0.600324,3.987852,-9.802558,1.852758,1.107049,0.378280,-9.470449,-8.377639,5.370922,9.617304,-6.233417,-0.975145,-9.263588,-1.022133,0.761798,-6.365920,6.906560,-8.793393,3.033122,-7.529146,-4.984575,0.559486,5.807218,8.091287,-8.676769,-5.534267,4.499573,-9.375571,7.979524,5.164453,0.446799,-8.497143,5.908374,-5.582442,4.279565,9.471707,-8.291103,-9.112215,2.838217,8.794365,8.080087,-8.970097,-2.399054,-5.879234,1.817020,-7.686674,9.731638,7.605780,-3.386547,-0.155245,-4.009638,6.586270,-5.707097,1.710076,-3.451146,8.505290,-6.148738,-4.300102,-8.752766,-4.996876,-3.316580,-0.423644,8.439452,-9.828118,0.059378,7.445733,1.427813,7.355912,8.677585,7.095625,8.275477,1.560494,-4.354239,-8.430868,-4.716204,-3.326275,5.739284,-5.529399,-5.082698,-1.283260,8.490717,-1.769148,7.761684,-4.723897,-5.142223,-2.473126,-8.553226,2.762144], dtype = "float32")#candidate|8056|(1430,)|const|float32
call_8055 = relay.TupleGetItem(func_4440_call(relay.reshape(const_8056.astype('float32'), [11, 13, 10]), relay.reshape(const_8056.astype('float32'), [11, 13, 10]), ), 0)
call_8057 = relay.TupleGetItem(func_4443_call(relay.reshape(const_8056.astype('float32'), [11, 13, 10]), relay.reshape(const_8056.astype('float32'), [11, 13, 10]), ), 0)
output = relay.Tuple([bop_8035,call_8039,const_8040,var_8041,const_8042,var_8043,const_8044,call_8055,const_8056,])
output2 = relay.Tuple([bop_8038,call_8045,const_8040,var_8041,const_8042,var_8043,const_8044,call_8057,const_8056,])
func_8059 = relay.Function([var_8034,var_8041,var_8043,], output)
mod['func_8059'] = func_8059
mod = relay.transform.InferType()(mod)
var_8060 = relay.var("var_8060", dtype = "bool", shape = (6, 14, 16))#candidate|8060|(6, 14, 16)|var|bool
var_8061 = relay.var("var_8061", dtype = "int16", shape = ())#candidate|8061|()|var|int16
var_8062 = relay.var("var_8062", dtype = "int64", shape = (320,))#candidate|8062|(320,)|var|int64
output = func_8059(var_8060,var_8061,var_8062,)
func_8063 = relay.Function([var_8060,var_8061,var_8062,], output)
mutated_mod['func_8063'] = func_8063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8068 = relay.var("var_8068", dtype = "float32", shape = (14, 6, 11))#candidate|8068|(14, 6, 11)|var|float32
uop_8069 = relay.sqrt(var_8068.astype('float32')) # shape=(14, 6, 11)
bop_8086 = relay.equal(var_8068.astype('bool'), relay.reshape(uop_8069.astype('bool'), relay.shape_of(var_8068))) # shape=(14, 6, 11)
output = bop_8086
output2 = bop_8086
func_8091 = relay.Function([var_8068,], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8092 = relay.var("var_8092", dtype = "float32", shape = (14, 6, 11))#candidate|8092|(14, 6, 11)|var|float32
func_8091_call = mutated_mod.get_global_var('func_8091')
call_8093 = func_8091_call(var_8092)
output = call_8093
func_8094 = relay.Function([var_8092], output)
mutated_mod['func_8094'] = func_8094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8146 = relay.var("var_8146", dtype = "float32", shape = (3, 16, 16))#candidate|8146|(3, 16, 16)|var|float32
var_8147 = relay.var("var_8147", dtype = "float32", shape = (3, 16, 16))#candidate|8147|(3, 16, 16)|var|float32
bop_8148 = relay.floor_mod(var_8146.astype('float32'), relay.reshape(var_8147.astype('float32'), relay.shape_of(var_8146))) # shape=(3, 16, 16)
func_2488_call = mod.get_global_var('func_2488')
func_2493_call = mutated_mod.get_global_var('func_2493')
var_8153 = relay.var("var_8153", dtype = "uint64", shape = (280,))#candidate|8153|(280,)|var|uint64
var_8154 = relay.var("var_8154", dtype = "int16", shape = ())#candidate|8154|()|var|int16
call_8152 = relay.TupleGetItem(func_2488_call(relay.reshape(var_8153.astype('uint64'), [4, 5, 14]), relay.reshape(var_8154.astype('int16'), []), relay.reshape(var_8153.astype('uint64'), [4, 5, 14]), ), 3)
call_8155 = relay.TupleGetItem(func_2493_call(relay.reshape(var_8153.astype('uint64'), [4, 5, 14]), relay.reshape(var_8154.astype('int16'), []), relay.reshape(var_8153.astype('uint64'), [4, 5, 14]), ), 3)
func_7710_call = mod.get_global_var('func_7710')
func_7713_call = mutated_mod.get_global_var('func_7713')
const_8157 = relay.const([[True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True]], dtype = "bool")#candidate|8157|(1, 1344)|const|bool
call_8156 = relay.TupleGetItem(func_7710_call(relay.reshape(const_8157.astype('bool'), [6, 14, 16])), 0)
call_8158 = relay.TupleGetItem(func_7713_call(relay.reshape(const_8157.astype('bool'), [6, 14, 16])), 0)
func_5891_call = mod.get_global_var('func_5891')
func_5895_call = mutated_mod.get_global_var('func_5895')
var_8161 = relay.var("var_8161", dtype = "float64", shape = (540,))#candidate|8161|(540,)|var|float64
call_8160 = func_5891_call(relay.reshape(var_8154.astype('float64'), []), relay.reshape(var_8161.astype('float64'), [15, 4, 9]), )
call_8162 = func_5891_call(relay.reshape(var_8154.astype('float64'), []), relay.reshape(var_8161.astype('float64'), [15, 4, 9]), )
output = relay.Tuple([bop_8148,call_8152,var_8153,var_8154,call_8156,const_8157,call_8160,var_8161,])
output2 = relay.Tuple([bop_8148,call_8155,var_8153,var_8154,call_8158,const_8157,call_8162,var_8161,])
func_8169 = relay.Function([var_8146,var_8147,var_8153,var_8154,var_8161,], output)
mod['func_8169'] = func_8169
mod = relay.transform.InferType()(mod)
mutated_mod['func_8169'] = func_8169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8169_call = mutated_mod.get_global_var('func_8169')
var_8171 = relay.var("var_8171", dtype = "float32", shape = (3, 16, 16))#candidate|8171|(3, 16, 16)|var|float32
var_8172 = relay.var("var_8172", dtype = "float32", shape = (3, 16, 16))#candidate|8172|(3, 16, 16)|var|float32
var_8173 = relay.var("var_8173", dtype = "uint64", shape = (280,))#candidate|8173|(280,)|var|uint64
var_8174 = relay.var("var_8174", dtype = "int16", shape = ())#candidate|8174|()|var|int16
var_8175 = relay.var("var_8175", dtype = "float64", shape = (540,))#candidate|8175|(540,)|var|float64
call_8170 = func_8169_call(var_8171,var_8172,var_8173,var_8174,var_8175,)
output = call_8170
func_8176 = relay.Function([var_8171,var_8172,var_8173,var_8174,var_8175,], output)
mutated_mod['func_8176'] = func_8176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8185 = relay.var("var_8185", dtype = "uint32", shape = (12, 7, 9))#candidate|8185|(12, 7, 9)|var|uint32
const_8186 = relay.const([[[-4,-6,-10,-6,6,3,-4,7,2],[-5,-8,-2,3,-5,3,-6,10,7],[2,-6,-7,-2,-7,8,-3,-4,9],[-1,1,-7,-5,-1,-5,-4,-2,-7],[-9,-1,-10,-6,4,-5,10,-9,1],[5,-9,10,7,-2,4,7,2,10],[8,6,-9,-5,4,-8,-10,-10,1]],[[4,6,4,-9,5,-10,-5,2,10],[-10,-10,1,-1,5,3,-5,-2,4],[1,9,-5,1,-9,9,6,-6,-6],[-6,-1,2,7,-10,-6,-4,-8,-1],[4,-4,4,-4,-5,-7,-9,-9,6],[-4,-9,-1,-9,-2,-8,1,-4,8],[-8,-10,-3,3,-2,4,-4,-2,-3]],[[7,-5,-10,-1,-8,-5,5,-9,6],[2,5,4,1,-8,-2,-5,4,8],[-5,-6,-4,-9,4,-3,-9,-4,6],[-4,7,-1,6,7,-6,-3,-6,5],[-9,10,-10,8,6,2,9,3,9],[-4,-10,4,-8,10,-7,5,-7,1],[-5,-5,-10,-5,4,-4,1,-9,-9]],[[-10,1,2,-3,3,-1,5,3,9],[8,2,-3,6,-4,-7,-7,1,-7],[5,-9,7,-5,6,-4,-1,2,-6],[-2,8,-7,-9,4,-6,3,8,-2],[-2,9,4,4,8,1,-10,6,6],[-3,-2,5,5,-9,-7,-9,-7,6],[4,7,7,-5,8,3,7,-9,4]],[[-6,9,3,6,7,-2,3,5,5],[-7,-7,2,-6,-7,-7,-8,-1,8],[-5,5,8,-4,-1,-2,-3,9,-1],[-1,1,4,10,-10,-9,2,-3,-5],[-4,5,-10,-4,-5,4,-5,4,4],[3,-10,-4,1,4,-4,-8,-9,-4],[7,1,-2,-7,9,-10,-9,-6,5]],[[-1,-7,2,-3,-2,3,-1,-5,-4],[7,-1,-3,9,5,5,7,-8,-9],[6,3,4,5,8,-8,-4,-4,-3],[-7,2,-8,-3,3,1,-4,-5,6],[-2,-5,-8,3,-9,-8,-7,-3,-10],[8,-9,-5,-4,-7,5,-8,-2,-9],[5,-4,-10,-7,9,10,4,-3,8]],[[1,-6,-10,-2,7,-1,-4,-8,-3],[1,9,-9,-9,6,5,-9,-7,7],[-5,-6,-2,-9,-7,5,7,-9,5],[-5,2,8,7,-4,-2,2,9,-10],[-8,7,7,-3,-9,-3,2,-1,-3],[-2,6,-5,-8,-6,8,7,-8,-9],[-10,1,7,-6,-6,-5,-7,9,4]],[[2,2,8,5,-6,-4,7,-1,3],[-4,9,5,-9,1,-6,2,7,-7],[6,2,6,-6,8,-1,5,2,-7],[10,-1,-4,5,4,-1,-7,-4,8],[-5,-3,4,-5,-1,-5,-4,-6,5],[2,5,-2,-9,-3,9,3,6,6],[9,-10,-8,1,-9,7,-7,4,6]],[[-10,8,-8,-7,-9,-4,-2,6,-5],[7,6,-3,10,3,3,3,-4,9],[7,10,8,1,-9,3,3,2,-6],[4,4,-3,9,-2,-6,-3,-4,9],[9,1,-8,1,-4,3,-7,-9,8],[-10,7,-8,-1,-8,-3,5,8,9],[-10,-9,3,-6,1,-3,-5,-6,5]],[[9,-6,-10,-3,-1,3,-7,2,7],[10,-6,-7,1,-4,-8,10,2,4],[5,9,8,-7,4,3,-3,-5,3],[1,-7,1,-1,-3,-9,7,2,-1],[5,-7,5,2,-10,-10,10,9,6],[5,2,-10,-2,-6,-2,-7,5,8],[2,2,7,-7,3,6,-5,-7,-8]],[[-8,6,7,3,5,-7,-9,-2,-3],[3,10,5,5,7,-6,9,-5,10],[-2,-7,-10,-1,5,8,-6,1,6],[2,-7,3,5,-9,-8,-4,3,-1],[-8,-2,10,3,2,2,10,-9,-4],[-2,8,-1,2,9,9,-8,4,9],[1,-8,8,1,5,-4,-6,-7,-8]],[[1,6,-7,1,3,7,-9,-6,1],[8,-3,-6,1,-5,-6,-9,-5,10],[3,7,-9,9,-5,7,-10,-2,8],[-10,-9,9,8,-6,-6,-6,8,-4],[10,-4,-10,-10,6,3,-9,-2,10],[8,1,2,10,8,-3,-6,-8,7],[1,-8,1,-2,-6,3,-8,-5,-4]]], dtype = "uint32")#candidate|8186|(12, 7, 9)|const|uint32
bop_8187 = relay.left_shift(var_8185.astype('uint32'), relay.reshape(const_8186.astype('uint32'), relay.shape_of(var_8185))) # shape=(12, 7, 9)
uop_8199 = relay.cosh(var_8185.astype('float64')) # shape=(12, 7, 9)
output = relay.Tuple([bop_8187,uop_8199,])
output2 = relay.Tuple([bop_8187,uop_8199,])
func_8209 = relay.Function([var_8185,], output)
mod['func_8209'] = func_8209
mod = relay.transform.InferType()(mod)
var_8210 = relay.var("var_8210", dtype = "uint32", shape = (12, 7, 9))#candidate|8210|(12, 7, 9)|var|uint32
output = func_8209(var_8210)
func_8211 = relay.Function([var_8210], output)
mutated_mod['func_8211'] = func_8211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_8257 = func_7788_call()
call_8258 = func_7788_call()
func_5181_call = mod.get_global_var('func_5181')
func_5188_call = mutated_mod.get_global_var('func_5188')
var_8268 = relay.var("var_8268", dtype = "float32", shape = (216,))#candidate|8268|(216,)|var|float32
var_8269 = relay.var("var_8269", dtype = "uint16", shape = ())#candidate|8269|()|var|uint16
var_8270 = relay.var("var_8270", dtype = "float32", shape = (156,))#candidate|8270|(156,)|var|float32
var_8271 = relay.var("var_8271", dtype = "float64", shape = (455,))#candidate|8271|(455,)|var|float64
call_8267 = relay.TupleGetItem(func_5181_call(relay.reshape(var_8268.astype('float32'), [6, 4, 9]), relay.reshape(var_8268.astype('float32'), [6, 4, 9]), relay.reshape(var_8269.astype('uint16'), []), relay.reshape(var_8270.astype('float32'), [1, 156]), relay.reshape(var_8271.astype('float64'), [455,]), ), 3)
call_8272 = relay.TupleGetItem(func_5188_call(relay.reshape(var_8268.astype('float32'), [6, 4, 9]), relay.reshape(var_8268.astype('float32'), [6, 4, 9]), relay.reshape(var_8269.astype('uint16'), []), relay.reshape(var_8270.astype('float32'), [1, 156]), relay.reshape(var_8271.astype('float64'), [455,]), ), 3)
output = relay.Tuple([call_8257,call_8267,var_8268,var_8269,var_8270,var_8271,])
output2 = relay.Tuple([call_8258,call_8272,var_8268,var_8269,var_8270,var_8271,])
func_8283 = relay.Function([var_8268,var_8269,var_8270,var_8271,], output)
mod['func_8283'] = func_8283
mod = relay.transform.InferType()(mod)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8283_call = mutated_mod.get_global_var('func_8283')
var_8285 = relay.var("var_8285", dtype = "float32", shape = (216,))#candidate|8285|(216,)|var|float32
var_8286 = relay.var("var_8286", dtype = "uint16", shape = ())#candidate|8286|()|var|uint16
var_8287 = relay.var("var_8287", dtype = "float32", shape = (156,))#candidate|8287|(156,)|var|float32
var_8288 = relay.var("var_8288", dtype = "float64", shape = (455,))#candidate|8288|(455,)|var|float64
call_8284 = func_8283_call(var_8285,var_8286,var_8287,var_8288,)
output = call_8284
func_8289 = relay.Function([var_8285,var_8286,var_8287,var_8288,], output)
mutated_mod['func_8289'] = func_8289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7975_call = mod.get_global_var('func_7975')
func_7976_call = mutated_mod.get_global_var('func_7976')
call_8294 = relay.TupleGetItem(func_7975_call(), 0)
call_8295 = relay.TupleGetItem(func_7976_call(), 0)
output = call_8294
output2 = call_8295
func_8312 = relay.Function([], output)
mod['func_8312'] = func_8312
mod = relay.transform.InferType()(mod)
mutated_mod['func_8312'] = func_8312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8312_call = mutated_mod.get_global_var('func_8312')
call_8313 = func_8312_call()
output = call_8313
func_8314 = relay.Function([], output)
mutated_mod['func_8314'] = func_8314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_8315 = func_7788_call()
call_8316 = func_7788_call()
output = relay.Tuple([call_8315,])
output2 = relay.Tuple([call_8316,])
func_8321 = relay.Function([], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mutated_mod.get_global_var('func_8321')
call_8322 = func_8321_call()
output = call_8322
func_8323 = relay.Function([], output)
mutated_mod['func_8323'] = func_8323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_8333 = relay.TupleGetItem(func_7750_call(), 0)
call_8334 = relay.TupleGetItem(func_7751_call(), 0)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_8339 = func_7521_call()
call_8340 = func_7521_call()
output = relay.Tuple([call_8333,call_8339,])
output2 = relay.Tuple([call_8334,call_8340,])
func_8343 = relay.Function([], output)
mod['func_8343'] = func_8343
mod = relay.transform.InferType()(mod)
output = func_8343()
func_8344 = relay.Function([], output)
mutated_mod['func_8344'] = func_8344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mod.get_global_var('func_7871')
func_7873_call = mutated_mod.get_global_var('func_7873')
call_8435 = relay.TupleGetItem(func_7871_call(), 0)
call_8436 = relay.TupleGetItem(func_7873_call(), 0)
output = relay.Tuple([call_8435,])
output2 = relay.Tuple([call_8436,])
func_8440 = relay.Function([], output)
mod['func_8440'] = func_8440
mod = relay.transform.InferType()(mod)
output = func_8440()
func_8441 = relay.Function([], output)
mutated_mod['func_8441'] = func_8441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_8468 = func_7521_call()
call_8469 = func_7521_call()
var_8470 = relay.var("var_8470", dtype = "bool", shape = (6, 14, 16))#candidate|8470|(6, 14, 16)|var|bool
bop_8471 = relay.bitwise_and(call_8468.astype('uint32'), relay.reshape(var_8470.astype('uint32'), relay.shape_of(call_8468))) # shape=(6, 14, 16)
bop_8474 = relay.bitwise_and(call_8469.astype('uint32'), relay.reshape(var_8470.astype('uint32'), relay.shape_of(call_8469))) # shape=(6, 14, 16)
func_4349_call = mod.get_global_var('func_4349')
func_4354_call = mutated_mod.get_global_var('func_4354')
const_8481 = relay.const([1.641861,-7.929922,-9.654548,-3.618497,-5.300299,8.500499,3.388281,7.848563,-4.755672,-3.718973,-6.467980,-2.234205,-4.744208,7.382301,-1.666696,2.304906,-5.846506,9.888180,-9.057172,9.186888,8.965908,-7.186841,-5.050143,8.957059,1.678119,9.028324,8.794389,-6.026391,-6.636126,0.270035,-5.294906,-4.949630,-3.557446,-8.604019,2.116364,3.690982,-7.805785,9.513619,4.325688,5.300936,-8.656807,-6.777001,-2.986350,1.417861,9.718610,3.480095,4.222805,-4.832483,-8.449624,-8.647833,-3.521642,-9.449751,9.884727,-5.058386,-1.910396,5.393421,-4.307590,-0.847605,-5.316720,3.044210,-7.936004,-6.912003,-9.047429,9.497882,7.869188,-4.518232,1.041182,-9.116513,-5.906678,-2.915829,-5.317508,0.181475,0.416700,-0.260022,8.352886,5.708909,-6.690289,-2.500236,3.270345,7.952241,6.325733,-6.067292,-8.600377,-9.983215,8.185547,-5.782962,-7.025068,-0.794973,3.196596,-0.240588,-4.848882,6.675193,5.447976,9.704876,4.088944,1.338418,-8.284395,-6.878767,-6.109337,0.693993,4.999249,7.313530,9.538506,6.852455,-2.674995,-1.712555,-9.751068,-0.923344,9.513692,-8.046634,-7.962984,1.611579,4.847015,-1.281465,-5.718437,-9.235234,5.903588,-6.620427,0.905978,4.802828,7.660397,0.025766,4.178153,8.141485,6.652312,-7.124480,8.787753,4.922304,7.900883,-1.124193,5.013811,3.105218,-4.922235,-9.509357,1.720861,-3.178895,7.576764,-7.679263,6.159303,3.166425,8.385114,-5.128972,2.322336,-8.724083,1.107775,1.402648,7.447754,3.336662,-5.038133,0.345402,-4.025726,-2.125762,3.041910,-2.019565,-7.940979,-0.977672], dtype = "float32")#candidate|8481|(156,)|const|float32
var_8482 = relay.var("var_8482", dtype = "float64", shape = (65, 7))#candidate|8482|(65, 7)|var|float64
const_8483 = relay.const([[4,4],[9,3],[8,4],[-1,-9],[5,-9],[-2,7],[-5,6],[6,8],[8,-8],[-5,-7],[-6,4],[-3,4],[-1,-10],[-3,2],[5,-6],[5,-10],[7,10],[-1,-7],[-9,6],[4,-7],[-10,7],[-5,3],[-6,-10],[4,-4],[10,-3],[10,-9],[2,10],[-5,10],[-7,9],[5,-1],[-3,-2],[4,6],[-9,-6],[2,9],[-1,10],[7,1],[9,5],[4,-5],[-10,3],[-4,-8],[9,-3],[1,5],[-10,-8],[-4,-8],[-1,-7],[10,1],[10,1],[-3,6],[-5,5],[8,8],[4,4],[6,-3],[6,3],[1,-3],[8,-2],[3,4],[-6,3],[-10,3],[-8,-4],[-10,1],[-6,-9],[10,7],[-5,8],[-8,7],[-5,9],[3,9],[-10,6],[-9,-3],[3,1],[5,1],[6,10],[-4,-9],[1,-4],[3,-4],[8,2],[-8,2],[8,-3],[1,5],[-3,-3],[-5,-10],[4,9],[-9,8],[-4,7],[-7,1],[4,10],[-10,-5],[1,-2],[2,-1],[5,-2],[4,6],[-2,7],[-1,5],[-4,1],[2,-7],[-3,9],[2,-10],[1,-5],[-3,2],[3,-5],[10,10],[-6,10],[-8,-1],[9,-6],[2,-9],[-9,-8],[5,-8],[-1,-3],[-2,9],[-7,-6],[-5,5],[6,4],[-9,-1],[-9,-3],[-10,3],[3,-6],[-10,-10],[1,9],[2,-9],[-7,-8],[-8,-7],[9,1],[10,-5],[-9,-5],[-4,-5],[3,-3],[10,-7],[9,-3],[6,3],[-1,-7],[8,3],[2,8],[5,3],[5,-4],[9,2],[-7,-4],[9,8],[-2,1],[6,-9],[2,-4],[-1,4],[2,3],[-9,7],[1,9],[-9,-10]], dtype = "int8")#candidate|8483|(144, 2)|const|int8
call_8480 = relay.TupleGetItem(func_4349_call(relay.reshape(const_8481.astype('float32'), [12, 13]), relay.reshape(const_8481.astype('float32'), [12, 13]), relay.reshape(var_8482.astype('float64'), [455,]), relay.reshape(const_8483.astype('int8'), [288,]), ), 2)
call_8484 = relay.TupleGetItem(func_4354_call(relay.reshape(const_8481.astype('float32'), [12, 13]), relay.reshape(const_8481.astype('float32'), [12, 13]), relay.reshape(var_8482.astype('float64'), [455,]), relay.reshape(const_8483.astype('int8'), [288,]), ), 2)
output = relay.Tuple([bop_8471,call_8480,const_8481,var_8482,const_8483,])
output2 = relay.Tuple([bop_8474,call_8484,const_8481,var_8482,const_8483,])
func_8491 = relay.Function([var_8470,var_8482,], output)
mod['func_8491'] = func_8491
mod = relay.transform.InferType()(mod)
var_8492 = relay.var("var_8492", dtype = "bool", shape = (6, 14, 16))#candidate|8492|(6, 14, 16)|var|bool
var_8493 = relay.var("var_8493", dtype = "float64", shape = (65, 7))#candidate|8493|(65, 7)|var|float64
output = func_8491(var_8492,var_8493,)
func_8494 = relay.Function([var_8492,var_8493,], output)
mutated_mod['func_8494'] = func_8494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8343_call = mod.get_global_var('func_8343')
func_8344_call = mutated_mod.get_global_var('func_8344')
call_8499 = relay.TupleGetItem(func_8343_call(), 0)
call_8500 = relay.TupleGetItem(func_8344_call(), 0)
output = call_8499
output2 = call_8500
func_8506 = relay.Function([], output)
mod['func_8506'] = func_8506
mod = relay.transform.InferType()(mod)
output = func_8506()
func_8507 = relay.Function([], output)
mutated_mod['func_8507'] = func_8507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_8511 = func_7521_call()
call_8512 = func_7521_call()
func_5562_call = mod.get_global_var('func_5562')
func_5565_call = mutated_mod.get_global_var('func_5565')
const_8514 = relay.const([[-6,8,7,-3,-3,6,-5,1,8,-7,-8,8,-4,2,4,2,9,9,9,-4,1,10,7,-5,5,-6,5,-9,-6,10,8,-7,2,-4,1,5,8,-9,7,1,-6,-6,-10,9,-5,3,2,2,-9,-7,4,2,7,8,3,-5,8,-9,8,4,8,-1,-1,-4,-1,9,-3,9,2,4,-1,-4,4,-9,3,10,-3,4,3,-2,-9,10,-4,3,-6,-1,8,6,-1,6,8,-9,-6,5,-1,4,2,3,2,-1,-5,-7,-10,-6,-8,6,10,-9,8,-8,4,8,-5,-9,-9,7,-5,-8,9,-5,-8,-7,6,-5,-1,-3,4,-9,2,-9,-2,-4,3,1,6,9,7,-2,-1,9,-1,-6,-4,7,-5,-9,-3,4,-5,-7,1,6,-3,2,9,-7,6,7,-10,-7,1,4,1,9,2,-8,4,-10,-6,3,6,6,-3,3,7,10,10,-1,1,6,8,6,-1,8,-9,-1,-1,8,-1,-7,4,6,1,-4,9,-8,5,-8,-10,-2,-7,5,-1,2,-5,10,-8,5,8,-4,9,-4,3,1,-10,4,7,7,-2,7,10,1,6,9,-3],[-10,2,7,10,1,-10,-1,-4,-4,-9,-6,-10,9,2,1,9,-8,-7,-10,-2,7,8,8,6,10,4,-6,-2,-10,3,10,3,6,-2,9,9,-7,-3,9,-6,9,-7,-4,-2,-3,-8,-8,2,4,-10,9,8,6,-10,3,6,-8,8,1,-8,2,9,10,-4,5,-5,3,10,-5,6,6,3,-2,8,9,-10,-4,1,-10,6,10,2,5,5,-10,-1,1,-4,2,-10,8,4,-9,-3,1,-6,3,6,-8,1,10,-8,-5,-7,4,10,5,3,-8,-5,-8,-1,1,-10,-6,8,-2,-8,9,-5,-3,5,8,4,-6,6,3,4,5,-10,-4,9,-7,2,2,-10,-4,-5,-5,-8,-1,5,-2,-6,5,-7,6,-5,-3,-10,-6,-2,-7,1,-7,3,5,-1,-8,-5,-3,-2,-8,-4,5,8,6,10,-8,-7,3,-4,-9,7,-2,-2,5,-5,-2,4,5,-9,-1,-6,1,5,-3,-4,3,-4,6,-1,-2,3,-7,1,8,-3,-8,-9,2,5,-2,2,2,2,1,-8,2,-7,10,-1,6,1,-4,-5,4,-4,8,-4,1,6,-1,-5,8],[10,-9,-8,6,1,10,6,7,-10,5,5,2,-10,-8,6,6,-5,8,2,-3,-3,10,-6,-9,-1,-4,2,8,9,-6,3,2,7,-1,3,1,-8,-5,-7,3,-1,-4,3,5,-9,10,3,8,-3,10,-7,-1,-3,1,3,7,3,6,-5,-9,-2,-4,10,-6,5,8,-6,-6,7,8,-1,5,8,9,4,8,8,2,6,-10,3,-10,1,7,-3,-10,-4,8,6,-7,-5,6,-7,-1,6,1,-3,6,8,2,10,6,6,-6,-1,-3,-8,-10,-7,5,4,1,-10,9,-4,-9,-2,-8,9,1,9,-6,4,9,7,-5,3,-8,6,-10,8,-3,-6,-1,7,7,-7,-2,-9,2,-8,-6,-6,-3,-2,1,6,-4,-8,-9,8,-2,9,8,6,5,-9,-4,-7,-7,4,1,-3,2,10,4,-9,5,-10,-7,2,-2,-3,6,-5,-1,1,7,-6,3,2,6,-6,1,-3,-6,-10,-6,5,5,6,-7,7,-1,6,-3,-3,-2,-1,7,-1,6,9,6,-5,4,-8,-10,-6,10,-5,2,3,7,7,7,-6,1,7,1,-2,-5,5,-5,-4],[-5,-9,7,1,7,7,-7,-5,10,8,5,-8,2,6,6,-4,9,10,-7,-1,8,-6,-2,-3,-4,6,5,-10,7,4,-5,6,4,-1,6,5,9,1,6,-6,7,10,7,-8,-7,10,1,-8,-2,7,-1,4,-6,5,-8,-2,4,8,-5,6,9,4,9,-6,-10,-3,-5,-3,3,-3,-9,-10,9,4,4,-6,3,-4,1,-7,3,2,-8,-7,4,-4,6,-8,1,1,-2,-10,-6,-9,-6,-7,-6,-7,7,7,-5,-6,6,6,-8,5,-3,-6,1,5,10,8,-5,2,8,-3,2,-2,7,-6,-6,-6,-7,-7,6,8,7,5,1,-2,-1,-10,8,1,-3,-2,-9,-7,1,-5,-7,4,-8,-6,10,-6,6,-2,-1,10,2,-10,-8,-7,10,-7,-4,-4,2,3,-9,1,-6,-8,9,-10,9,4,-6,6,3,-6,-6,1,-10,10,-3,3,-5,8,-10,-5,-8,-6,-9,4,-8,1,1,-2,8,10,-2,-5,-7,-2,-1,4,7,-8,2,10,-4,-4,7,-8,7,-8,-3,7,-8,-7,-6,-10,10,-9,2,4,2,-1,-3,4,6,-8,-5],[-9,6,1,6,6,1,-10,-5,-9,10,4,6,3,9,3,8,6,9,-7,3,2,-9,7,5,-10,5,-10,1,-4,-7,-6,-8,-3,2,-1,1,8,-6,-3,2,-7,7,-9,1,3,-8,-6,-3,-5,-9,1,10,2,-6,-6,-8,7,-10,-8,-10,2,-9,-6,7,9,-8,8,2,5,-6,-10,3,2,6,4,-2,-5,5,5,-5,-2,7,-4,-9,-8,-9,9,-6,7,2,7,10,-7,5,8,6,-4,9,3,6,-5,8,1,7,-5,9,-5,5,-3,3,2,-1,-4,6,-10,-9,-9,1,10,-8,-8,-6,-6,-4,1,2,9,-10,6,2,-8,3,7,-7,-1,-1,-2,4,10,-6,-7,4,4,1,-2,7,4,-9,-3,10,-3,-3,-10,4,-6,10,-1,-9,2,6,-5,-6,-3,1,-5,-10,-2,5,1,-1,-10,-10,7,7,-1,3,-7,6,6,-8,10,1,-2,-3,6,1,7,8,-3,3,-9,10,7,-6,5,8,-3,-7,-5,-1,6,-6,3,5,8,-10,6,3,-7,-10,4,-10,-7,3,9,1,-5,-8,-1,-4,3,-8,-5,-4,-1],[-7,-4,-1,7,-3,9,2,10,-2,-3,2,4,6,-10,-2,-7,-5,9,2,-1,2,10,1,6,-3,-4,6,6,5,-2,-6,-9,2,8,-6,10,6,-4,9,4,10,8,4,-5,1,-10,-8,9,-7,-3,-3,-10,2,8,3,-7,10,8,1,-4,3,-1,-3,1,5,-2,9,-9,-8,-6,1,-6,1,4,9,4,2,-3,4,-6,1,9,-1,-3,-7,4,4,-8,3,-5,-4,4,-6,2,2,1,5,3,10,7,-7,-5,10,-6,-7,-7,1,6,8,-9,5,6,-10,6,-7,7,-5,-4,6,-1,-2,4,10,1,10,-10,10,3,-7,1,-5,7,-9,-6,-3,-7,-5,-8,-3,-3,-9,-7,1,8,-10,-1,7,6,2,-10,9,2,10,-9,9,5,-4,-8,2,-4,-6,9,6,-7,7,5,-7,-10,-7,10,-10,7,-5,1,-10,2,-2,7,-6,6,4,-9,-8,-7,-7,-4,-2,-1,3,-6,6,9,9,-6,2,6,5,8,4,10,-2,8,-3,-1,-10,-1,3,8,6,6,-8,-4,8,6,-5,3,1,1,2,-2,9,1,-3,-5,-5],[-5,-3,-5,8,3,8,-5,9,4,-10,-4,-2,-2,-5,2,-9,-4,5,-3,1,-10,-6,-7,-1,-6,9,-1,-6,4,9,5,4,-10,7,3,1,-6,-8,-2,5,-1,10,3,-2,-9,-4,3,-2,-6,8,6,3,-6,4,-2,-8,3,-3,-3,-5,10,-7,-7,5,9,-3,3,-8,8,9,-2,1,4,-2,-10,9,8,4,6,-9,3,1,-9,-6,-10,-5,1,-6,3,-2,-6,-5,-7,-10,-8,-10,-10,-6,-8,5,5,-10,9,3,-5,5,8,-6,8,-9,-4,7,10,4,-4,-7,1,7,-5,-10,-7,-6,6,1,-9,-10,9,-8,1,-6,2,-3,-3,3,-5,10,9,-7,7,8,-8,8,6,-6,-9,1,8,-2,-6,-6,-9,3,2,4,-7,7,1,-5,-1,-3,3,-2,7,1,1,4,-6,10,6,9,-4,-1,2,-1,8,5,-9,-4,1,10,3,-1,-1,-6,5,-4,-2,6,-2,-8,3,2,8,-8,1,8,4,-2,-2,-5,6,6,4,-3,-8,-7,-2,-5,-4,9,3,-9,9,-5,10,8,9,5,5,-10,-6,-6,-5,-1,3],[2,7,4,-3,-9,-9,10,-2,-1,-2,1,-7,8,-9,-9,-9,10,-4,-4,-3,1,-1,-10,-5,-1,2,-7,-1,9,6,-4,-10,-2,9,1,-10,-6,3,-3,6,5,6,-7,9,-10,-3,-1,-1,7,-9,-3,-3,2,-4,-4,9,-8,-3,3,-10,-6,-7,8,-10,-7,-5,1,-1,4,8,-6,7,-3,9,-2,-8,2,7,-3,-4,9,-3,7,-3,-9,-9,7,9,4,-5,6,5,9,9,1,4,-5,8,1,5,2,5,9,9,-1,-2,-6,-9,8,-6,-1,9,-7,10,-8,-10,-10,-2,-8,-2,5,-7,10,-5,4,-9,4,-3,-7,-1,-1,-7,-5,-7,10,-1,3,6,-6,4,-4,6,-3,9,3,6,8,-2,2,5,1,7,-7,-9,-3,2,-8,-5,7,-2,3,-4,-1,5,8,-5,7,-4,6,7,8,9,8,-8,10,-5,6,-6,-8,10,1,6,9,4,5,7,1,-9,3,-3,-5,-8,10,8,2,-3,-3,-3,-10,10,-8,-7,4,-9,-3,-2,3,-9,-1,-10,-3,8,-3,-10,7,8,-10,6,3,3,-2,-2,2,-9,-6],[-9,-5,7,-9,-2,-1,-4,7,5,9,-4,2,5,7,10,-4,-4,-6,-8,-10,-3,-3,1,1,8,5,-1,9,-4,2,2,1,-7,-9,-5,-7,1,7,8,10,-8,-9,4,6,4,2,-8,-4,-1,1,-3,4,10,5,-1,-5,2,9,4,3,-7,-6,9,9,-2,-6,3,-8,-3,-1,10,5,-2,7,2,-3,-7,4,-6,6,5,2,3,-1,5,-3,7,-6,-4,2,4,-7,-4,-7,-5,-8,-4,-8,-2,-5,10,1,-6,6,-9,8,-4,4,-5,8,-1,-10,-1,-2,-9,2,-5,-7,-8,-2,1,-10,-2,-5,-3,-7,-1,1,-7,-5,-2,-6,-9,-9,-5,-6,1,-1,10,2,-9,10,-5,-2,-4,7,-5,4,-5,3,-3,6,4,-9,-3,10,9,2,10,6,-2,-1,-5,2,-5,-10,3,4,-3,-2,1,8,1,-4,3,-7,3,3,1,10,8,6,-7,-9,-3,-7,-4,-4,3,7,8,-1,10,-10,9,6,-9,-1,5,7,2,2,-6,-2,-4,5,1,-4,-1,-1,-2,8,-3,10,-8,4,10,7,-2,-7,7,10,-9,8,-9]], dtype = "int64")#candidate|8514|(9, 225)|const|int64
call_8513 = func_5562_call(relay.reshape(const_8514.astype('int64'), [15, 15, 9]), relay.reshape(const_8514.astype('int64'), [15, 15, 9]), )
call_8515 = func_5562_call(relay.reshape(const_8514.astype('int64'), [15, 15, 9]), relay.reshape(const_8514.astype('int64'), [15, 15, 9]), )
uop_8522 = relay.sigmoid(const_8514.astype('float32')) # shape=(9, 225)
func_5181_call = mod.get_global_var('func_5181')
func_5188_call = mutated_mod.get_global_var('func_5188')
var_8536 = relay.var("var_8536", dtype = "float32", shape = (216,))#candidate|8536|(216,)|var|float32
const_8537 = relay.const(-9, dtype = "uint16")#candidate|8537|()|const|uint16
var_8538 = relay.var("var_8538", dtype = "float32", shape = (156,))#candidate|8538|(156,)|var|float32
const_8539 = relay.const([[1.147322,-1.391506,8.860233,-0.307150,8.685204,4.860861,9.792866,8.275564,-1.524401,4.960917,-2.986598,2.138739,-4.515311,-6.338317,-8.895541,-8.635084,-0.173957,7.277649,-6.097843,-3.778832,-2.421814,9.438125,4.362677,8.358906,0.528162,-6.369599,-9.286099,-2.386206,-5.088711,0.544327,-1.177302,-3.836211,-5.906306,-3.145184,4.168193,-9.481912,6.242178,3.202733,-1.398083,-0.546701,3.319902,-7.776814,-8.369231,-9.209618,2.477085,6.554472,-6.325883,-5.121277,-0.063495,5.060365,0.884536,7.831636,4.053366,1.512711,3.414829,-6.783058,1.709379,-0.443142,3.227176,-6.256984,-9.879137,-4.812575,-1.685792,-5.565896,8.947846,-1.312237,5.397849,2.739213,8.324031,9.639730,-6.762651,0.413873,-7.382991,-2.207822,0.303162,-6.689893,-4.729436,-4.247517,5.883474,8.827537,-2.387623,7.833009,-6.127071,-4.248618,2.492256,-9.518602,9.546002,1.552936,-1.106018,0.908600,5.945743,2.300547,-4.142543,-8.322528,-9.918091,8.546870,0.933522,7.341557,3.415835,6.521070,9.097599,5.679032,-4.262135,-4.813925,-6.994680,-0.151941,6.000485,9.026795,1.459663,5.920307,-0.310258,-6.927183,7.748965,9.339935,2.185854,6.717493,-6.969180,-0.955263,-1.145731,8.063901,-7.328976,-7.706975,-4.377520,-6.328858,9.754298,3.955509,-9.685318,8.663343,6.469197,-4.784726,-7.710408,6.398357,-2.588670,7.329023,-4.142525,7.238917,-2.645821,-1.312178,-1.433878,-7.159651,-8.012302,1.056989,4.087973,-9.878459,9.586364,8.730027,5.892058,-9.497588,-1.741267,-0.132386,9.156203,-5.565578,6.874397,-3.879714,5.347762,2.199352,-4.760970,-5.688529,3.326610,6.734168,9.693755,-2.594728,6.767513,3.825126,-0.693920,9.378489,1.683906,2.294455,-0.971895,-0.803074,-0.981240,-3.244303,-8.217603,-3.753529,1.383513,-2.113179,0.084364,8.048154,-1.018159,-0.481133,-5.027973,-5.948401,6.260352,-4.950890,9.404576,2.426873,-1.830499,-3.214311,-1.521163,5.565770,-2.558379,5.797116,-9.161079,2.106942,6.823857,-5.537305,2.731616,0.946438,-6.986112,-5.253515,6.229834,-0.872759,3.141616,-1.257848,3.306646,-5.174680,-2.775535,0.509744,-3.354020,5.604759,9.412695,-7.707318,-5.200392,5.527109,0.204335,-2.273224,-4.831215,5.745812,6.205258,1.721290,8.586642,1.498246,3.561240,-0.796609,4.915084,4.564940,4.686994,4.743546,-9.266127,9.364131,-5.250674,-1.679840,-4.436528,0.298861,9.204163,-0.577380,-7.165031,-4.874744,0.113760,8.954579,-8.509539,5.796416,-1.269164,2.420456,9.652386,2.787977,-9.681646,-6.337276,3.979497,3.544336,7.130532,0.923760,4.725577,7.370092,-3.775995,3.556665,-8.436573,5.792049,3.176835,8.068372,5.382043,-9.245192,-7.362796,-3.351021,-1.195748,-7.498644,6.396837,3.932711,-4.330916,8.017562,-3.501293,6.128516,8.603881,8.216332,-7.859594,-9.664225,1.089980,5.793766,2.490139,3.837524,2.703629,0.206125,3.758963,7.631106,-3.429853,4.449986,6.814186,5.741942,9.982585,0.429118,4.292576,5.578785,2.061879,-1.930893,-3.649258,-3.340154,2.629099,-6.057090,8.928532,-7.612350,9.713312,-6.603090,4.238615,1.848736,-1.771982,-0.383709,-2.870589,2.692375,-6.859163,1.800989,6.877007,8.387382,7.855289,-3.624997,5.223206,-2.219326,-3.630168,-8.138733,-3.860698,-1.941847,-0.935048,-0.143461,-9.147710,-7.784811,7.026818,3.606728,-3.418514,-6.137403,-9.471467,-2.403747,6.065330,-9.720661,2.304040,9.379028,9.456241,-7.105964,-6.926566,-2.373636,-9.483328,-7.899856,-7.267904,1.894442,-9.820509,0.369731,-2.627086,-9.805169,-9.004242,7.611878,7.285963,-6.714968,-3.828708,4.849631,0.682994,7.016907,-5.045115,-5.547109,8.071309,8.638438,4.743913,-7.382303,-7.291898,5.790887,-5.357288,-6.601326,-7.338345,-0.021595,-2.712056,8.740231,0.447034,4.495001,-8.931017,0.339250,4.069377,7.108548,7.047824,-8.762058,4.207955,-2.162749,-5.130397,2.340151,9.555128,7.827180,2.880016,-6.642444,5.129045,6.760253,7.494564,6.907124,8.885198,1.262700,6.860409,9.086503,6.675643,-2.119867,-3.420498,-0.526988,2.997460,4.855159,8.794668,9.523220,-8.425590,-4.593372,1.426928,-5.098904,1.570775,9.232635,-2.857542,5.697356,8.173281,3.182143,3.576624,9.366296,-9.055595,-6.129607,-3.442542,-2.635914,-6.554560,-4.164673,8.543636,-8.091371,-5.789436,4.796230,-2.862329,3.291000,-6.811984,-3.612128,-8.930900,-1.891619,-6.946357,-6.091091,-2.332080,9.330446,-6.141285,8.477928,2.175820,-4.868928,8.489013,-7.960252,-9.423365,3.599607,-2.226426,-7.578976,-4.735382,6.381371,0.100954,8.798407,6.665107,-4.515284,2.803339,2.573988,-5.358635,-9.800919,6.675111,2.494338,-0.578899]], dtype = "float64")#candidate|8539|(1, 455)|const|float64
call_8535 = relay.TupleGetItem(func_5181_call(relay.reshape(var_8536.astype('float32'), [6, 4, 9]), relay.reshape(var_8536.astype('float32'), [6, 4, 9]), relay.reshape(const_8537.astype('uint16'), []), relay.reshape(var_8538.astype('float32'), [1, 156]), relay.reshape(const_8539.astype('float64'), [455,]), ), 4)
call_8540 = relay.TupleGetItem(func_5188_call(relay.reshape(var_8536.astype('float32'), [6, 4, 9]), relay.reshape(var_8536.astype('float32'), [6, 4, 9]), relay.reshape(const_8537.astype('uint16'), []), relay.reshape(var_8538.astype('float32'), [1, 156]), relay.reshape(const_8539.astype('float64'), [455,]), ), 4)
output = relay.Tuple([call_8511,call_8513,uop_8522,call_8535,var_8536,const_8537,var_8538,const_8539,])
output2 = relay.Tuple([call_8512,call_8515,uop_8522,call_8540,var_8536,const_8537,var_8538,const_8539,])
func_8544 = relay.Function([var_8536,var_8538,], output)
mod['func_8544'] = func_8544
mod = relay.transform.InferType()(mod)
var_8545 = relay.var("var_8545", dtype = "float32", shape = (216,))#candidate|8545|(216,)|var|float32
var_8546 = relay.var("var_8546", dtype = "float32", shape = (156,))#candidate|8546|(156,)|var|float32
output = func_8544(var_8545,var_8546,)
func_8547 = relay.Function([var_8545,var_8546,], output)
mutated_mod['func_8547'] = func_8547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8577 = relay.var("var_8577", dtype = "uint32", shape = (12, 4, 6))#candidate|8577|(12, 4, 6)|var|uint32
var_8578 = relay.var("var_8578", dtype = "uint32", shape = (12, 4, 6))#candidate|8578|(12, 4, 6)|var|uint32
bop_8579 = relay.add(var_8577.astype('uint32'), relay.reshape(var_8578.astype('uint32'), relay.shape_of(var_8577))) # shape=(12, 4, 6)
output = bop_8579
output2 = bop_8579
func_8582 = relay.Function([var_8577,var_8578,], output)
mod['func_8582'] = func_8582
mod = relay.transform.InferType()(mod)
var_8583 = relay.var("var_8583", dtype = "uint32", shape = (12, 4, 6))#candidate|8583|(12, 4, 6)|var|uint32
var_8584 = relay.var("var_8584", dtype = "uint32", shape = (12, 4, 6))#candidate|8584|(12, 4, 6)|var|uint32
output = func_8582(var_8583,var_8584,)
func_8585 = relay.Function([var_8583,var_8584,], output)
mutated_mod['func_8585'] = func_8585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8312_call = mod.get_global_var('func_8312')
func_8314_call = mutated_mod.get_global_var('func_8314')
call_8606 = func_8312_call()
call_8607 = func_8312_call()
func_1239_call = mod.get_global_var('func_1239')
func_1241_call = mutated_mod.get_global_var('func_1241')
var_8618 = relay.var("var_8618", dtype = "uint16", shape = (484,))#candidate|8618|(484,)|var|uint16
call_8617 = relay.TupleGetItem(func_1239_call(relay.reshape(var_8618.astype('uint16'), [484,])), 1)
call_8619 = relay.TupleGetItem(func_1241_call(relay.reshape(var_8618.astype('uint16'), [484,])), 1)
uop_8620 = relay.log(call_8606.astype('float32')) # shape=(6, 14, 16)
uop_8622 = relay.log(call_8607.astype('float32')) # shape=(6, 14, 16)
func_8506_call = mod.get_global_var('func_8506')
func_8507_call = mutated_mod.get_global_var('func_8507')
call_8624 = func_8506_call()
call_8625 = func_8506_call()
func_6148_call = mod.get_global_var('func_6148')
func_6151_call = mutated_mod.get_global_var('func_6151')
const_8649 = relay.const([4.140079,2.140082,-8.885620,-5.572713,-9.135401,3.136732,-7.938937,8.859948,9.627044,-5.819163,-5.040724,-5.449523,9.659607,9.260870,9.999957,-5.458984,-4.461093,7.732524,-4.681862,7.111389,-0.914369,6.005017,-7.777196,-1.494577,-1.516206,4.669732,0.663502,-0.019913,-2.463687,0.012771,-2.778671,-5.182340,3.809649,-7.558636,7.237079,-9.962482,-8.838645,1.579192,-1.621079,-4.142848,-5.999506,-9.932326,4.427238,6.136253,-0.141963,3.547569,-8.099615,0.075632,-6.853238,8.380125,-5.647205,4.010132,8.413529,8.413460,-6.992906,8.365023,-9.558907,-2.611400,-7.641491,4.846936,-3.127486,2.889501,-0.623232,-8.652405,-7.732744,-7.379441,-1.247672,1.195514,-2.923391,2.224970,-6.651851,-8.566414,-3.092061,-2.071145,-8.709189,6.498231,8.399184,5.611719,-7.372391,-4.909864,6.941688,4.308630,-7.480808,-0.425054,9.132754,-0.520447,-4.240549,-3.818190,3.723398,2.603318,-8.733428,5.694549,7.055370,2.893129,-5.124564,2.368634,9.255504,5.184102,3.186275,-2.510425,-5.648611,5.370252,6.821846,2.186464,-5.976714,-1.008426,-4.392316,-0.590264,-4.474164,7.081438,4.980660,1.428955,9.890279,4.398528,-1.066221,4.329197,-2.832432,8.818015,8.365229,-6.352334,4.108842,-8.446127,-3.054782,2.415817,5.152450,-3.598880,2.011870,1.512469,-3.247103,-5.039229,-1.765864,7.203840,-9.775367,2.887719,-1.688257,7.108362,-8.883682,1.563790,9.904064,-4.285803,4.915548,9.964192,-9.650365,6.363104,6.666415,2.835167,2.709007,-3.454567,9.164749,9.936537,-1.710343,7.110336,6.569381,2.405644,6.491342,2.210606,-8.583775,-1.291500,3.708471,-8.279728,7.665062,-5.151192,-9.934539,-8.575806,-1.466443,3.837659,-7.412917,-6.711058,6.583487,-9.834109,9.277957,0.949766,8.716087,-3.453967,7.781790,5.683179,-8.862255,-0.116245,9.888018,-3.702213,-9.398016,-6.753251,-2.180495,-7.812411,-5.701567,-0.092789,-0.939476,-1.849029,9.206616,-6.544385,4.274263,0.724805,-5.924188,-7.354768,-1.605149,2.325969,4.879967,-0.612000,-8.546268,4.210378,6.863792,-5.053823,-6.415020,2.100896,7.285587,-7.694614,-7.991073,-1.983817,2.961328,-8.185765,4.608038,6.822586,2.540136,-3.468081,-8.898642,-6.042870,-2.756269,-9.584479,6.467379,-8.329465,5.387892,6.645890,5.236543,-0.962005,5.643366,-2.586037,7.570307,3.955477,1.652625,-3.631771,8.718261,-8.720887,-3.268009,-1.225192,-9.839699,-4.961681,-6.516867,3.335820,-0.574833,-4.972755,-5.966521,-5.636957,-2.169171,-1.035634,-6.139794,-4.072868,-9.356134,3.240797,5.653266,-1.681340,-5.085236,2.146053,7.398931,-7.122665,2.210172,2.219491,-0.359033,0.245966,2.362909,-3.900742,-1.315425,5.225814,6.884127,2.416240,8.924305,2.446705,0.891852,-1.529486,8.607236,-1.274798,6.731667,0.309436,6.195994,8.367718,-2.944039,-7.704650,-5.681179,9.998667,-9.645438,-0.130053,5.378778,-5.473269,-6.671623,9.238756,6.198612,-4.205299,1.978912,-0.334094,-0.856305,1.281397,-3.311600,-1.557619,6.316091,-0.650687,-2.311204,8.670515,-4.110923,-9.422803,-6.162604,1.229734,6.724965,4.259236,9.155279,-4.793648,9.536914,-1.525228,2.788413,-1.087554,6.152872,6.032065,7.028698,4.206330,-6.519174,-1.068902,1.964995,-4.836929,-5.635338,5.751760,-0.602855,1.184036,0.867269,9.841453,-5.567004,2.706730,-1.379352,-9.293203,-0.553337,-7.203184,8.915050,7.936443,-8.768569,-6.606160,1.657852,-5.176360,3.369605,5.281820,1.970276,4.044970,-5.957080,8.687137,7.093769,-2.793783,1.513347,-2.960189,-0.039175,4.297351,-3.989013,7.176100,8.916859,7.438895,6.470452,2.130532,9.399685,8.390941,-5.492129,-8.353381,-7.422253,0.947512,3.822144,-5.398586,6.238370,-0.957821,5.284630,-7.067052,7.300564,3.153070,-6.814394,-0.032929,-6.072157,-5.489754,-3.281830,-0.871710,0.439121,8.415383,-3.901622,-7.911022,1.106199,5.683278,-1.368756,-1.841200,5.005860,1.434585,-0.841303,9.363279,8.094930,8.225487,-9.067555,-5.732026,5.576679,9.650444,3.684241,-0.005238,-3.060806,-0.286953,0.444741,7.458937,-9.084847,-9.942777,-1.698617,5.010777,6.836228,9.890564,8.148526,-4.996104,9.113316,-3.954589,9.497242,-1.687212,-3.825170,1.137978,6.615201,-2.123229,0.069046,-2.607161,-9.077785,5.043275,4.912516,1.828711,-5.349698,1.675401,4.946697,-0.777142,-0.752135,1.487662,5.872136,-5.544090,3.691030,0.522409,-0.786486,-3.066306,7.447298,-8.362582,-6.704538,4.635879,5.374901,6.764647,-0.564918,-9.428491,-4.276577,5.108699,-3.271301,-9.413570,-2.505748,-6.892056,7.483481,7.795875,-4.786549,2.462364,-9.017227,6.896230,-4.314722,-0.154776,-8.252337,0.395431,-1.331930,2.687910,9.502750,-7.925232,0.862692,-6.610721,0.851529,5.633311,0.250432,5.287172,-9.830473,-0.499505,1.409805,0.454768,8.288793,-7.745376,-8.801076,-6.004522,8.650018,5.168011,0.761668,0.428508,-7.924480,-8.276757,-3.144296,7.116677,-1.460600,0.901854,-0.141175,0.637837,6.059973,-5.238360,9.136151,3.413080,9.478885,0.220170,-6.636246,-2.812386,-2.988362,3.945862,-0.609495,3.577701,-9.684520,-0.087841,4.921754,-5.153279,8.660969,-0.792442,4.292615,8.499729,2.295675,0.491768,6.787136,-3.515867,-9.722139,-0.169187,-5.681474,0.882071,-1.169567,3.954065,9.922477,3.731373,-9.902687,-9.770215,7.578911,2.121751,-2.419272,1.266967,-8.108034,5.864376,0.242945,3.856740,9.880997,-7.321915,-5.573366,-9.531983,9.936664,-0.358208,2.402534,0.888279,-9.555600,5.324890,8.792375,-5.565184,-1.805636,-4.859549,-0.410138,3.421727,-4.591566,1.501423,-0.096046,-4.210715,4.365899,0.107774,6.528475,-7.662149,7.446590,5.802252,-4.267733,-5.693679,8.149949,-2.806681,-5.130724,-4.486379,1.214933,0.745648,5.057542,3.914389,-8.567554,3.941576,5.967913,8.293602,-2.392667,7.214303,0.622691,7.552909,-9.784393,-5.572387,-6.958646,0.249473,-9.657921,7.609351,-0.715686,1.528558,7.562245,7.588283,-4.024893,-1.505236,9.707250,9.375235,2.771342,0.762331,-1.011841,5.735519,-8.539465,-6.194141,0.176836,-6.671604,-5.932440,4.213345,9.790210,-1.609793,7.186604,-3.836739,-4.434077,8.864988,-2.703733,6.598434,-1.483027,4.967235,7.288515,-1.266703,9.019169,-6.115010,-5.997062,-5.064995,-4.786238,6.992478,6.799587,-4.387868,1.299806,7.871172,6.220077,-1.557483,5.111556,-0.662235,9.498479,-8.792206,-5.108979,-0.355203,-3.024987,-7.372961,6.675247,-3.996363,9.293532,-2.171921,6.509966,-5.330794,-0.123191,-0.182008,9.442338,-2.413699,6.031644,5.616382,3.102094,-9.931441,-0.264839,5.442213,-2.038524,-6.275214,-8.111495,-5.270581,6.328077,-5.793837,9.515745,3.261686,-2.151251,4.186947,-8.748190,9.199518,-0.692599,7.987222,-2.480824,-6.867147,3.495486,-1.309592,3.529420,5.467983,9.082966,-9.273058,-4.477038,6.989518,5.514862,3.447749,-5.348216,-8.162694,-1.756929,1.386661,-8.148464,-9.059070,4.853780,5.220218,5.668626,1.442316,8.211873,-9.235705,5.363453,-9.116053,-2.800319,4.641105,-9.882943,-7.115161,2.821942,6.141040,1.795248,3.973719,-1.679507,-9.194801,6.751082,-9.501323,9.326222,4.197928,2.677373,-8.374829,0.407286,-0.022215,0.071367,-7.173066,-0.741679,-4.218930,0.857860,-3.774118,-0.497679,-3.835933,-9.225648,-7.021948,9.253132,5.002111,4.874325,-4.913283,2.376797,-1.274208,8.806412,1.692863,-4.210326,-8.559931,-3.827628,9.530493,1.084545,-7.129301,6.176469,1.266133,-7.337086,2.176655,-9.821570,-3.320505,-7.391169,-0.460275,-1.546025,5.151517,5.402921,-6.262255,5.630319,1.054250,3.750800,-1.167574,-7.722669,7.809464,-1.677223,1.922925,8.468734,-9.058062,-2.926729,5.372382,9.470655,-6.886126,-9.193286,-5.543204,-9.851947,-3.400834,6.137942,-5.046113,5.268406,6.747294,-7.635975,-7.194282,-7.245441,7.126968,-1.187447,7.330124,-5.896502,-4.145544,0.341916,-0.874758,-7.064560,0.314285,8.277622,-3.318183,-6.044574,3.350092,-7.891213,-7.073425,-4.354750,6.665760,-2.717076,-5.527795,-5.034773,-2.631423,1.194460,-7.788920,4.969324,-1.415076,8.829847,1.795664,-1.485056,2.256027,5.995479,7.684131,0.928819,-3.579545,-6.154453,-6.774513,9.909173,-6.377392,2.629871,5.508371,-0.822717,-8.412110,-7.701244,8.532834,-1.388506,4.621546,-5.681101,6.063098,4.373349,-3.627768,2.050267,4.587081,3.951979,4.124406,-0.797269,7.304178,-4.580410,-2.784147,-6.340407,8.016328,-9.863103,-1.776836,-7.976241,1.737487,1.481879,0.257677,-7.275881,4.920418,-4.571016,5.002605,1.370258,5.362638,-0.434886,-3.150111,-9.197457,1.448929,-0.496215,7.592771,1.551681,5.957991,-5.959938,0.366912,6.988634,-0.038611,-1.998901,-3.123715,2.036137,9.939315,0.046989,-5.167342,-7.832048,8.727937,6.522536,9.230838,3.004238,3.074428,6.180677,-3.603166,9.817608,-2.288260,-3.519453,-6.524261,-8.279252,3.742334,0.865370,9.892649,5.351711,8.663952,-6.752305,-5.907898,6.802519,8.941742,-4.341873,8.215561,0.486178,6.017554,-9.948097,1.649344,-8.570235,-5.104084,-6.636290,2.540978,-9.973951,-2.793653,6.411412,-3.952259,-2.703530,7.333363,-5.570137,-8.422520,-1.924312,1.289412,8.196629,7.104337,-2.529148,-6.739096,-2.095647,-6.056278,-6.010942,3.691546,5.871676,-8.887458,0.856720,4.061121,-9.051216,9.708013,1.679340,1.903819,6.863187,-9.599789,-7.597369,-2.459340,-9.069956,-8.652270,1.413721,-3.726000,1.667607,-6.675048,-6.942543,-0.298956,-9.844251,4.999567,7.184589,-8.147892,-4.680023,-4.369438,1.989562,1.592474,6.121169,-5.518128,5.609640,-5.796041,7.899997,6.609057,-1.363986,-8.756255,-5.346870,-6.392009,-1.819475,-7.007990,-7.883937,-5.735345,-8.298456,4.895670,1.378798,-0.700853,8.525341,5.714630,-1.167829,-7.562834,7.214820,6.810800,4.444177,4.946517,-1.622977,-2.897241,-3.578951,1.170365,-2.653928,-8.174373,-4.789420,-4.063796,3.421363,2.338489,-9.847579,-2.369727,-6.948198,7.591543,-8.223561,-1.900999,1.576143,1.739735,3.726820,-0.901474,3.048620,8.694004,2.140928,9.570625,8.890021,-5.027538,7.974401,3.466798,-1.091069,7.564227,0.691629,-8.287381,-9.989064,-0.271305,-7.278765,2.121217,-5.783552,2.607528,-7.712066,-6.372155,9.706347,9.236846,-6.818447,6.934107,-7.807129,7.423024,-2.369093,-3.664059,5.222543,-1.921253,9.530879,5.619013,-7.798292,0.785651,-4.237814,-9.740915,9.534692,-3.796601,0.200642,-1.089971,-0.468783,3.649464,2.835834,2.727327,9.484588,-7.635290,5.960373,-7.667109,0.171446,-7.713766,8.096880,7.650085,-6.618357,-6.071425,0.604504,7.768269,-1.864439,-3.628997,-2.026195,-1.314100,2.397392,-4.741137,5.921616,-0.861148,0.422076,-7.493522,-2.161714,4.116686,6.010923,-8.270697,-5.178010,-7.130669,-4.545154,6.459691,-2.088992,-0.934486,-3.431064,-2.736535,3.577411,-2.959834,2.281760,-4.904020,7.640049,-0.388050,4.299985,1.595805,3.220586,9.798128,2.863501,-1.642832,-7.928395,8.993072,-3.666709,-2.770673,9.482148,-5.049825,9.223592,-1.585689,-1.157702,4.139018,4.670315,7.936177,-9.821557,-1.094338,3.331797,9.067584,-6.443049,4.622609,-7.483330,-0.530684,-6.697016,-6.709377,6.165405,-8.315633,-2.478733,-0.941242,0.357275,-6.135481,-9.094399,0.558736,2.950812,7.161602,1.520889,-3.602452,5.257886,7.837388,5.842707,2.323548,-3.037654,-4.321878,-2.850684,-4.920512,9.753239,4.467071,-5.119866,4.450481,-3.352236,3.351240,5.561122,1.787168,-7.416874,9.686333,3.495268,2.005101,-1.694797,-2.226064,-6.182272,-8.433973,4.854171,9.184276,-1.553263,0.100172,5.500246,5.624895,5.411269,7.055462,3.954728,4.692226,-5.663989,1.431560,5.792750,4.058530,-1.595370,0.892727,7.661195,6.689782,9.663659,-9.213693,4.505325,-4.044150,9.292480,3.351731,-7.262764,0.916739,2.783285,1.942324,-8.298338,-2.063682,6.329290,-7.256301,-7.986530,-8.956376,-5.240678,-4.664407,-5.151040,-0.220587,6.487546,4.032396,9.090262,-6.094242,0.948899,9.503215,-9.896635,-2.263905,7.894463,-6.273745,3.168777,1.984592,-5.551899,2.677700,-1.046526,-9.276141,5.743536,2.990742,-1.127915,7.007692,-4.850411,1.661002,-7.069953,-3.415913,-8.891971,0.518636,0.173150,5.024615,7.568402,9.942063,0.203150,1.778146,0.277789,2.820435,-8.552729,6.725524,4.078433,5.030073,-6.157522,5.156586], dtype = "float64")#candidate|8649|(1200,)|const|float64
call_8648 = relay.TupleGetItem(func_6148_call(relay.reshape(const_8649.astype('float64'), [12, 10, 10]), relay.reshape(call_8617.astype('uint16'), [484,]), ), 2)
call_8650 = relay.TupleGetItem(func_6151_call(relay.reshape(const_8649.astype('float64'), [12, 10, 10]), relay.reshape(call_8617.astype('uint16'), [484,]), ), 2)
uop_8659 = relay.sigmoid(uop_8620.astype('float64')) # shape=(6, 14, 16)
uop_8661 = relay.sigmoid(uop_8622.astype('float64')) # shape=(6, 14, 16)
output = relay.Tuple([call_8617,var_8618,call_8624,call_8648,const_8649,uop_8659,])
output2 = relay.Tuple([call_8619,var_8618,call_8625,call_8650,const_8649,uop_8661,])
func_8677 = relay.Function([var_8618,], output)
mod['func_8677'] = func_8677
mod = relay.transform.InferType()(mod)
var_8678 = relay.var("var_8678", dtype = "uint16", shape = (484,))#candidate|8678|(484,)|var|uint16
output = func_8677(var_8678)
func_8679 = relay.Function([var_8678], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_8749 = relay.TupleGetItem(func_7750_call(), 0)
call_8750 = relay.TupleGetItem(func_7751_call(), 0)
output = relay.Tuple([call_8749,])
output2 = relay.Tuple([call_8750,])
func_8752 = relay.Function([], output)
mod['func_8752'] = func_8752
mod = relay.transform.InferType()(mod)
output = func_8752()
func_8753 = relay.Function([], output)
mutated_mod['func_8753'] = func_8753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_8830 = func_7521_call()
call_8831 = func_7521_call()
uop_8836 = relay.asin(call_8830.astype('float64')) # shape=(6, 14, 16)
uop_8838 = relay.asin(call_8831.astype('float64')) # shape=(6, 14, 16)
func_3947_call = mod.get_global_var('func_3947')
func_3950_call = mutated_mod.get_global_var('func_3950')
var_8841 = relay.var("var_8841", dtype = "uint8", shape = (40,))#candidate|8841|(40,)|var|uint8
call_8840 = relay.TupleGetItem(func_3947_call(relay.reshape(var_8841.astype('uint8'), [2, 5, 4])), 0)
call_8842 = relay.TupleGetItem(func_3950_call(relay.reshape(var_8841.astype('uint8'), [2, 5, 4])), 0)
output = relay.Tuple([uop_8836,call_8840,var_8841,])
output2 = relay.Tuple([uop_8838,call_8842,var_8841,])
func_8849 = relay.Function([var_8841,], output)
mod['func_8849'] = func_8849
mod = relay.transform.InferType()(mod)
mutated_mod['func_8849'] = func_8849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8850 = relay.var("var_8850", dtype = "uint8", shape = (40,))#candidate|8850|(40,)|var|uint8
func_8849_call = mutated_mod.get_global_var('func_8849')
call_8851 = func_8849_call(var_8850)
output = call_8851
func_8852 = relay.Function([var_8850], output)
mutated_mod['func_8852'] = func_8852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8864 = relay.var("var_8864", dtype = "float64", shape = (1, 15, 4))#candidate|8864|(1, 15, 4)|var|float64
var_8865 = relay.var("var_8865", dtype = "float64", shape = (7, 15, 4))#candidate|8865|(7, 15, 4)|var|float64
bop_8866 = relay.divide(var_8864.astype('float64'), var_8865.astype('float64')) # shape=(7, 15, 4)
func_2447_call = mod.get_global_var('func_2447')
func_2449_call = mutated_mod.get_global_var('func_2449')
const_8894 = relay.const([7,4,2,8,7,-4,-2,5,-10,8,-4,5,-9,5,6,9,-1,-1,7,5,-5,-2,10,8,8,7,8,4,-9,-1,6,8,3,2,-1,7,8,2,7,-9,3,-5,-1,8,-9,-7,-9,2,-4,-5,3,-10,9,2,-9,1,8,3,-6,-1,10,-7,3,-2,-6,-4,8,2,6,-5,7,-7,3,-6,2,1,-7,4,2,9,-4,-8,8,2,-6,-9,5,7,9,-7,5,5,-8,2,-7,-7,7,-5,-7,-1,6,-7,-7,8,-10,-6,-3,-6,2,-3,10,-1,-7,-4,-3,-9,-4,-7,1,-6,10,-5,-5,-6,-9,-7,8,8,4,10,-6,6,5,2,1,-8,-9,6,4,-2,-10,3,-7,-3,-2,10,-6,-7,-2,-9,-6,7,-10,1,4,6,-2,-2,-10,10,2,8,-8,8,-6,4,4,9,-4,-7,-2,4,3,-3,-3,-3,-4,-2,7,-2,-5,-5,10,2,-4,6,-5,2,-8,-9,9,-5,-6,-5,5,6,-6,10,6,-3,4,-8,10,4,-4,-7,8,6,-1,7,-10,7,-7,-3,-10,3,6,2,3,1,1,-2,4,-1,1,-10,-10,-9,5,-9,-10,10,8,-1,-7,8,-2,5,8,-10,5,-2,-8,-3,2,-9,-6,8,2,5,-4,5,3,2,7,2,4,6,-4,-7,1,-9,-9,-1,8,8,8,8,5,-5,-5,-4,-1,-3,9,1,7,9,9,-5,-5,-9,-8,6,-8,-6,10,-2,-10,5,-4,-1,6,-7,9,2,-6,-9,-7,-8,8,5,-5,8,-1,-9,9,6,-10,-2,6,5,4,-8,8,3,-1,-3,-7,-4], dtype = "int64")#candidate|8894|(320,)|const|int64
call_8893 = relay.TupleGetItem(func_2447_call(relay.reshape(const_8894.astype('int64'), [8, 40])), 1)
call_8895 = relay.TupleGetItem(func_2449_call(relay.reshape(const_8894.astype('int64'), [8, 40])), 1)
func_4768_call = mod.get_global_var('func_4768')
func_4773_call = mutated_mod.get_global_var('func_4773')
const_8901 = relay.const([-3.040759,4.625771,0.300449,7.034074,-4.402875,-9.184187,-0.018771,7.642932,0.424653,-4.573390,-1.430343,0.910320,-0.721077,6.413793,-3.479959,-7.084576,-9.880841,4.352600,-9.514726,-8.672182,-5.276400,-2.051466,-1.624764,1.193276,-0.963731,-7.020972,-6.080071,-9.626299,-9.960835,-7.764749,-8.874509,-2.060350,-5.519542,-7.651466,-3.950930,-0.888634,6.479198,-1.910178,-7.468175,-3.460260,7.866502,7.045961,-7.714752,-0.547426,9.737370,7.373256,-9.275119,1.605295,8.309995,9.020011,-5.703632,7.039036,3.397837,8.220381,7.118848,-0.949099,-0.923147,-0.236704,0.173673,-1.628577,9.030522,-4.088803,6.801908,-3.056524,-0.776292,-9.974624,4.409954,-0.410604,9.892857,-2.822711,0.093451,9.272758,1.743269,-6.020644,4.163336,3.612518,-8.219423,-0.652809,9.979499,1.351109,-4.578024,6.201630,7.862040,-6.747290,7.465697,6.640184,3.407899,9.212936,-6.054835,4.913258,-9.089623,-7.816652,9.930016,-1.418193,3.689319,-5.553399,4.529732,-8.916910,2.784683,-7.175228,5.645051,-1.499666,-2.352385,8.834270,6.900724,-3.262137,-6.492287,6.417227,3.253491,-0.836296,9.185805,7.325795,-7.587179,5.462586,-0.448499,0.897295,5.929122,3.296738,0.757266,-1.542269,3.409470,-4.508590,5.397765,1.139371,7.406645,5.542468,-0.106173,0.169571,-3.299126,4.517343,-9.103077,7.968533,-3.582517,-8.945873,5.337254,-6.922960,6.676730,-2.532353,-5.170646,-6.478507,-9.812756,-9.573418,-0.969229,9.912569,-9.333524,0.463873,2.305216,-1.483736,5.013785,6.727103,1.860191,-8.601232,-1.167497,5.868575,-2.245502,-4.090187,-5.416999,-0.447423,7.617218,9.078086,-6.648040,-5.515679,7.069282,9.807028,5.680337,-1.671489,-5.911374,-4.322996,0.248413,-3.146173,1.521217,-5.031675,1.125898,-2.699119,2.163763,8.275517,-8.368114,0.386591,-4.546499,9.589858,-0.339216,0.440060,-0.961626,7.554413,2.129838,4.957566,5.299918,-6.816397,-0.816294,1.026204,3.825125,0.164131,-7.608996,4.778289,2.083263,3.052407,-3.698871,4.980400,-9.387976,3.082592,-9.423436,-7.353558,-4.543781,-5.113795,9.195111,-1.602898,-8.220314,-0.783748,5.151157,-5.916571,-3.076371,-2.428050,-4.165945,7.379424,-0.301089,-5.117934,-5.115338,-1.471963,-6.411670,8.937402,-7.088589,-0.710603,-7.010774,-1.729069,-8.763497,-2.656110,-7.031330,-8.011371,-0.022746,5.696827,-3.289311,0.845894,-8.110763,4.992018,1.097909,-0.961514,7.709049,-4.484223,3.976761,8.392697,4.717480,2.383418,-6.659816,-5.425274,0.939073,1.312750,-2.405971,-0.422814,8.808732,0.758512,2.129988,-0.181994,-1.977904,-1.736802,0.860630,9.553584,3.602945,-5.451559,-0.844924,7.685947,-6.243634,9.790018,9.495963,7.976521,-8.858619,4.270165,-8.115249,-8.147638,7.781786,8.011258,-0.231746,7.410627,0.686606,0.031787,0.228663,9.513247,7.138187,-6.907039,4.161480,5.679878,-0.059007,1.286943,3.154958,7.017313,-9.392384,8.507657,9.825736,-9.940009,0.013135,7.013676,-0.587706,-5.648991,4.454631,0.131257,2.715955,-9.622264,6.128875,-9.194061,0.077742,7.110659,-8.640474,-9.546807,-4.349461,-3.703211,-0.512781,-6.216378,8.678352,7.019770,7.281499,3.487306,7.784236,-9.419519,1.228292,7.111006,-3.105029,-1.557879,-8.021134,-8.097043,2.598280,-6.229508,-0.593751,0.203415,3.344562,2.268513,0.263841,6.242919,-1.179784,9.681355,1.858023,6.443166,-4.203225,-2.611277,-3.429991,0.476874,-6.171150,-1.249138,-9.291184,-0.057812,-0.029161,-5.734628,-5.832534,-9.850077,7.944796,-4.320127,9.945855,-6.709397,6.915050,-8.021811,5.135502,8.852435,8.055358,4.756750,5.441318,5.755592,4.574303,2.703377,-5.699596,-5.256205,-2.738943,-7.331054,-3.791658,2.333331,1.468423,-7.083079,6.862715,-8.794335,6.573996,-6.807558,5.446912,-5.748578,6.348011,-8.102508,2.961971,6.926642,3.284367,1.492323,-2.363079,1.857943,-8.285151,-1.916233,-1.939115,-8.082831,-3.926121,-3.529484,0.120235,-0.822464,7.045283,-6.249912,-0.051003,-1.405803,7.945267,1.369470,-4.511786,5.008297,-2.355662,-0.165582,3.857680,-0.649454,0.802968,5.935360,0.719846,1.497722,0.364092,-9.213242,8.006332,6.212697,-9.099187,-2.907664,-9.374777,-5.160274,8.950350,4.311182,7.319625,5.263956,-6.600557,1.289962,-2.902747,-4.476114,-5.910390,2.501772,3.952780,-3.516362,-6.985036,-4.669732,4.384694,7.732042,6.681639,4.964633,1.029702,9.257829,1.078855,6.526877,0.252004,3.909095,-6.527259,7.878279,-9.725355,-7.477352,-2.988947,6.128691,4.923666,0.185601,1.887148,3.193433,8.907148,-0.066769,-6.833603,-9.077961,-3.519428,4.262126,2.296289,-3.600666,4.163486,-9.094807,-7.893001,0.022097,-0.179694,-5.377544,3.432372,-8.523932,5.051486,6.611670,9.252970,1.661816,-8.161251,-6.876156,-8.416785,1.963073], dtype = "float64")#candidate|8901|(468,)|const|float64
const_8902 = relay.const([4.617464,7.701452,4.978721,8.407285,-7.505703,7.399358,-1.116249,4.993837,5.604059,4.941053,4.552809,8.822743,0.461307,2.966999,-5.396924,-2.471563,6.695318,6.293662,3.150929,4.261328,4.075575,1.268845,-8.081900,1.945596,-5.863613,1.423366,-4.957740,1.153182,6.461629,2.160524,1.590675,7.245435,1.395170,-7.756539,9.916119,-8.200070,-9.509272,-8.810958,-9.139256,-7.334889,9.661027,2.055860,-5.603251,9.449766,5.782940,1.821452,-8.339931,-3.549629,-1.916300,-8.427604,-0.347388,-7.993378,6.685603,7.815037,-4.716454,-0.460009,5.628600,0.953794,-7.302208,6.904385,3.493259,-1.568297,9.821279,-8.329711,0.293961,9.057290,6.661884,0.206294,5.474825,7.213315,-7.841737,1.917624,1.716975,-6.893209,5.496601,6.888692,-6.256055,-4.440137,-8.645125,9.073200,6.772643,-5.937430,-1.311313,0.317114,-5.296569,4.253182,-9.554403,5.583197,-3.793931,1.255925,3.844357,-1.526910,1.586680,-3.982103,4.162199,2.137618,-8.488767,-1.406428,9.338058,-2.032787,-2.167187,9.376521,-7.182800,-1.706094,-5.494222,-0.856540,-1.807866,3.962972,7.933309,-3.925242,-5.677348,-2.221782,0.042705,1.169818,-7.078125,-0.118234,-1.044335,-9.824276,-4.073639,7.018886,-6.517836,9.372414,-0.925496,-3.687888,-0.368761,2.427448,7.152859,2.336610,-7.815619,2.095827,3.491341,8.695270,6.352957,-0.120337,-8.354112,-5.597439,-8.857796,7.119003,6.760732,-4.920558,-9.013625,-6.180466,5.362221,-9.789708,-6.739633,0.829128,-2.608648,4.811986,-9.692515,8.221879,3.076395,6.837342,0.718994,1.352698,8.433042,-6.609574,5.523260,5.934918,9.110060,-0.118673,0.028504,4.496702,-0.439574,-6.211162,-8.739896,7.549505,4.504149,5.592212,1.850975,5.143320,0.711333,2.891675,-8.947391,7.761829,-8.049595,-8.165019,9.262972,8.160545,-0.208173,-2.722075,-5.461602,9.188521,4.397041,-4.709108,3.085403,4.815187,-0.585108,0.206539,3.547747,-5.693596,-7.348466,7.297516,-5.225827,9.912416,-8.868381,6.057894,9.200605,2.147179,-3.242053,6.999206,8.057215,-7.982518,7.024252,0.779855,-5.687927,1.136586,-7.404359,4.584934,8.301735,1.058582,-6.313875,-1.826217,5.472252,-2.688832,-3.565264,6.405703,-9.102149,2.892297,5.070892,-5.741941,-0.011432,-2.050588,2.288161,6.106333,-8.948948,-8.808736,0.241398,-4.855599,-1.414816,-2.111132,1.237959,2.174180,6.060590,5.206058,7.729755,0.924496,8.706436,-9.807506,4.961964,-4.278128,-1.571008,-0.308163,1.911255,8.928927,-2.683710,-3.297428,8.970210,2.563796,-5.630610,-6.330965,8.480944,9.270145,4.525359,8.055415,7.443830,7.525995,-9.486492,-8.792882,-9.711073,-9.365774,1.355223,-4.283728,-9.196572,-1.743759,6.888497,-8.221761,-8.195364,5.482817,1.334200,-6.191614,-6.819993,-4.074863,7.315643,6.140222,-4.149035,-5.363630,-4.940438,3.513620,9.901319,-6.603315,-2.965903,2.718259,-9.958595,-2.864877,2.861594,2.781759,-0.882773,-6.261835,-4.361833,-6.608263,0.706586,-4.853012,7.604784,-9.471479,9.020587,1.173178,9.636360,-2.467052,-6.368632,6.553200,7.758967,5.213844,1.733836,-6.817610,4.731312,-5.231242,3.433712,1.612481,-1.485235,4.080703,-4.589845,3.882995,0.369597,6.144045,2.290519,1.212948,0.360359,-4.779788,5.546162,-3.469015,8.158982,3.207020,-4.963741,-4.306067,4.810889,-5.972675,-2.266310,6.741342,-5.258205,5.187954,-0.212344,-3.102015,-3.837135,-7.607381,3.722961,-7.629130,3.557706,-8.617809,-9.155031,4.037096,-5.397579,3.259744,2.997253,1.079104,-3.286868,7.197840,4.013484,-6.900481,3.336940,4.919973,-1.565816,5.821519,-3.320137,4.980758,-8.227962,-6.524701,-5.679756,-7.412509,-4.216887,4.942148,-6.512633,1.187185,2.413210,6.192482,-5.128882,8.170336,2.029520,4.607306,-9.608551,-1.421151,8.754356,-1.943494,8.961046,6.100558,-2.536504,-6.090172,-2.732625,-4.502681,6.011817,-6.877397,5.659531,-7.354244,-0.367695,-5.583625,-4.079143,-7.636533,1.615995,-3.149324,3.446430,-2.775853,-4.944193,-7.115417,5.174221,-1.018570,5.391588,-4.711340,0.563852,5.839658,-9.173524,-4.566370,-1.050080,-4.113854,3.045440,-0.529543,5.659844,-6.489250,7.630424,-7.083141,-3.939601,-0.847793,4.289625,-3.216942,6.745334,-5.650754,4.801404,0.493181,8.876650,9.400713,-3.180265,9.284139,-9.708153,5.425019,1.233127,-7.745272,2.269962,1.575051,-2.901526,4.337898,9.576555,6.337595,-3.614234,-7.664167,1.521665,9.675863,-0.480813,6.429323,-7.533966,-3.755179,-3.856701,8.232868,4.717374,-6.266933,-2.351508,-6.783132,1.053993,-0.780538,-4.963321,-3.279089,-8.822171,0.606777,-3.957530,-8.731288,7.404490,-5.786903,0.732366,8.010316,-3.363023,-2.970088,4.511876,-2.398663,3.253738,0.086315,-4.376792,5.249577,3.507445,5.871490,6.656352,-6.456459,-8.553771,-9.590963,3.685762,2.166614,5.446767,-8.239988,-3.366961,7.497715,-5.071227,3.272311,-5.738684,0.435267,3.573068,-4.798195,-8.744862,5.461012,0.208822,7.461475,-6.693203,1.754472,-8.058956,-6.316988,-8.425566,-1.543691,-8.812876,5.104359,-8.621808,-6.865895,9.515006,-1.044547,-4.736258,5.334534,2.213490,-4.774372,5.516436,9.845996,6.363577,-9.010265,-4.242342,-8.596257,-9.897654,8.499267,8.223358,-0.380051,-3.936716,-7.126113,-2.653479,8.629624,-8.951664,5.872685,5.932897,-0.954745,8.021682,-8.530868,1.275992,-3.982660,8.168921,3.533723,-7.919410,7.000403,-7.293856,7.433474,1.976546,6.836111,-7.327411,7.642784,5.714840,-8.440921,-4.177907,-1.240915,-2.065339,3.396837,5.465952,-3.930156,-8.886397,-1.484751,5.570440,-1.620865,-5.158381,9.336253,-7.951380,-6.735994,-5.891456,-3.502045,-7.057779,-3.116990,-2.784268,-6.082088,-0.317710,4.506993,-9.769386,-4.438240,5.035978,0.169650,-2.739513,-6.878226,6.603910,-8.392516,3.190169,5.817654,-7.181176,-6.898541,8.903772,-1.477585,7.605483,9.079135,7.755841,-0.265772,-7.726097,0.585645,-6.466483,1.175521,-8.193630,0.212729,1.581838,6.578659,-8.453576,-2.695459,-5.290861,-4.190916,-8.025187,-7.250716,7.176326,-5.101552,-7.556376,-9.692067,6.167498,-9.251625,8.491724,4.900322,-1.533329,-2.227171,6.314139,3.714206,0.569525,7.635339,4.062297,-3.237269,-1.283066,-6.389676,-6.962889,5.130242,-3.726731,4.447503,7.391027,-2.607399,-2.795168,0.325591,8.243846,9.482695,-7.938926,-5.085042,-7.606484,-7.038896,4.732738,8.704901,1.260599,3.125816,0.935521,9.782872,-4.224291,-9.714608,1.145037,-0.122779,-5.763622,6.946026,-3.287653,-3.907085,-6.601199,-7.890744,8.774342,0.185444,-8.972143,7.632616,-0.208351,6.536756,-9.051257,3.334675,5.344034,2.646494,1.281107,-4.569311,-5.237890,0.202405,5.348239,3.463095,9.014140,4.328567,1.760710,8.894245,2.001020,-3.098290,8.104030,4.541768,5.030416,-3.565247,-3.676667,1.547571,-6.410633,8.902127,-0.528112,-7.935678,-3.985691,2.629769,-6.372904,1.554466,3.986090,-6.829063,9.542671,2.404820,-5.413217,3.742304,-8.681990,6.087599,0.571538,-2.626438,7.230073,-1.887327,-5.450485,-6.897325,-4.982354,1.096160,2.495651,-1.454584,4.513450,-1.264479,-7.137158,-3.614287,-3.393357,6.439662,5.395751,0.226792,-2.461385,-1.171355,6.071188,-7.937572,-0.158865,-9.307185,7.068065,-6.065719,-2.806353,-0.982647,-3.355702,-0.388039,-9.232496,4.613967,7.787835,8.420913,-6.792144,5.303833,-7.085543,9.241544,1.515033,-0.791152,7.844010,6.687956,8.056073,-5.680541,9.639605,-4.963816,-4.030654,2.215349,-9.029298,3.683770,-8.882034,6.212697,-0.128168,5.934755,-3.413637,-6.368684,-3.996237,8.448027,0.759611,3.121251,-9.289045,2.755532,5.655216,9.737768,0.428281,-4.516246,9.451997,-8.863432,5.136031,7.859388,4.229588,3.037599,2.320267,-1.730930,-2.146659,0.892735,8.191772,2.362510,6.675354,7.522954,2.850129,-2.924262,8.064956,2.888134,-4.962099,-6.947566,-4.071883,9.455665,-8.344612,7.376971,-3.280758,-3.264572,8.119434,-3.677959,-5.446666,6.346273,-0.732899,-3.814803,-3.958842,-1.154164,-1.947825,-1.985977,-1.891231,-8.078769,1.451271,9.183922,6.865385,-8.875672,1.973833,1.064131,-6.148406,5.325284,4.500824,-2.486162,6.789646,-7.552119,4.324383,3.824206,9.977955,-8.669720,3.889411,-4.976756,1.248169,2.946018,3.352564,-5.735852,7.821250,-1.214041,3.763006,-8.185351,7.470946,-2.330128,2.430965,-5.766102,-0.158541,-5.806358,-8.992578,-2.363679,6.485674,-9.798185,-4.790050,-4.629342,1.961615,-7.719143,0.966174,6.467407,-1.997021,4.376479,3.051929,-0.570556,-9.256020,8.401416,8.845391,6.046959,5.128082,6.683321,-7.317319,3.462202,5.533024,6.851298,-0.012881,8.000003,-7.600738,4.946800,3.680266,0.028431,-9.029481,-5.485516,-3.792134,-4.126505,-3.302026,-4.287758,8.484134,-7.669578,3.240103,3.672255,-4.234596,-8.970380,6.788067,3.853901,7.872212,-3.895183,4.139172,9.198037,-7.489846,-4.799896,-2.167992,-8.629795,-1.317332,-0.973242,-6.608629,-2.759972,-2.510754,2.351435,-7.592099,-9.666723,-0.667890,3.655678,-2.061994,9.445326,-8.462836,0.492243,-1.537723,-3.772762,-7.003833,3.411705,-3.980434,7.692317,-5.956202,-5.353812,2.201270,2.715843,5.560490,-7.286996,2.667052,2.426008,5.732753,-1.947563,-4.939890,-9.461136,6.504290,4.460545,4.034650,9.047541,8.381682,-2.760224,-9.650407,-5.002205,-0.101547,4.275091,7.683317,0.831109,2.976965,-0.398302,-0.836010,-5.443449,-6.649052,2.258541,8.132463,-9.539078,-9.957376,1.023971,-2.576190,9.498368,-6.079922,-9.538859,0.031849,-2.025090,-5.662822,-9.301061,-4.726121,-4.794337,-7.035244,-4.582938,-1.622229,-7.102941,-8.376051,-5.823027,-6.317780,4.121626,-3.396920,-6.237128,-8.399950,2.823205,7.173649,6.278701,-7.241280,6.665568,-0.151309,-8.073289,-3.278198,1.973843,6.578442,8.246569,8.665655,-9.067455,-4.251245,5.751303,-4.204536,3.269167,-4.412369,8.988109,6.536933,1.044787,-8.024835,-4.723800,8.579346,1.251363,1.788788,-7.892407,-5.302084,1.784112,6.813874,3.925144,8.605535,5.022262,0.928993,-7.885984,1.974987,-8.516933,-0.582945,-2.983474,0.765862,-7.913352,-5.433856,8.420489,1.087756,-2.446332,-4.711174,-5.080968,-2.722943,4.745593,-7.180525,-3.646699,-4.673249,-3.761727,-4.546662,-3.973134,-0.789334,-4.898730,0.906113,0.009261,-9.482363,3.728590,8.825276,-9.817877,7.383261,-3.440229,-3.768520,-0.327622,9.141208,5.217014,4.015680,4.958170,-8.727800,0.667766,-6.490712,-7.671532,-5.499842,0.350604,-4.717339,1.010069,7.158040,4.297962,4.267566,-5.152210,-6.633290,-1.813231,0.495183,-7.311868,0.060175,6.013325,-2.542724,6.087128,5.745338,0.705103,-4.415661,-2.756755,-8.466189,0.363528,8.087429,-2.522277,1.016147,2.416977,3.955400,-4.330294,7.664605,-9.411016,-1.185505,-8.864107,-5.820398,3.759540,3.183533,-1.852366,3.407524,5.382516,-1.137816,5.248835,-5.825910,-7.067534,-8.816926,-2.442294,6.394528,6.065594,-6.487232,1.904086,7.010641,-6.779619,-4.937346,-1.972016,-9.944193,-5.391017,-6.669412,7.849428,9.342905,-0.448657,-0.704876,5.336161,1.611339,6.429038,8.331022,-8.049432,1.266155,5.729353,4.690752,-8.511979,8.142760,-5.362274,-9.752541,-0.791979,-3.966867,3.032838,7.475678,-4.825743,4.240674,4.070676,-4.168530,-7.331156,-6.591594,-2.884850,3.076576,5.133149,9.492248,-1.971269,3.412846,7.397206,1.256888,7.441689,-8.466562,9.281548,2.193750,-2.570859,-0.788913,-6.312513,-8.854007,6.749726,3.763297,-0.746774,-5.283541,-2.082448,6.068375,7.052790,-0.283320,1.716271,-8.907730,-2.845022,5.167228,-5.701996,4.384779,-3.836352,6.215535,-4.491446], dtype = "float64")#candidate|8902|(1134,)|const|float64
const_8903 = relay.const([9.375051,8.807713,-0.225111,-7.316968,9.277914,4.695671], dtype = "float64")#candidate|8903|(6,)|const|float64
call_8900 = relay.TupleGetItem(func_4768_call(relay.reshape(const_8901.astype('float64'), [6, 6, 13]), relay.reshape(const_8902.astype('float64'), [1134,]), relay.reshape(const_8903.astype('float64'), [6,]), ), 4)
call_8904 = relay.TupleGetItem(func_4773_call(relay.reshape(const_8901.astype('float64'), [6, 6, 13]), relay.reshape(const_8902.astype('float64'), [1134,]), relay.reshape(const_8903.astype('float64'), [6,]), ), 4)
uop_8919 = relay.atanh(var_8865.astype('float64')) # shape=(7, 15, 4)
output = relay.Tuple([bop_8866,call_8893,const_8894,call_8900,const_8901,const_8902,const_8903,uop_8919,])
output2 = relay.Tuple([bop_8866,call_8895,const_8894,call_8904,const_8901,const_8902,const_8903,uop_8919,])
func_8923 = relay.Function([var_8864,var_8865,], output)
mod['func_8923'] = func_8923
mod = relay.transform.InferType()(mod)
var_8924 = relay.var("var_8924", dtype = "float64", shape = (1, 15, 4))#candidate|8924|(1, 15, 4)|var|float64
var_8925 = relay.var("var_8925", dtype = "float64", shape = (7, 15, 4))#candidate|8925|(7, 15, 4)|var|float64
output = func_8923(var_8924,var_8925,)
func_8926 = relay.Function([var_8924,var_8925,], output)
mutated_mod['func_8926'] = func_8926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8440_call = mod.get_global_var('func_8440')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_8930 = relay.TupleGetItem(func_8440_call(), 0)
call_8931 = relay.TupleGetItem(func_8441_call(), 0)
func_1239_call = mod.get_global_var('func_1239')
func_1241_call = mutated_mod.get_global_var('func_1241')
const_8939 = relay.const([-5,-8,-5,1,-9,-8,-9,1,9,-3,-1,-6,-5,-3,5,9,-1,1,4,-1,10,-4,-8,10,-8,-6,-1,-5,9,1,8,-4,-7,-2,-6,5,-2,-2,4,10,7,3,2,8,-6,5,-9,2,5,-6,-6,-6,10,1,-2,-7,10,-10,-8,4,-5,5,-2,-9,-10,10,10,8,-6,3,1,8,10,6,4,9,2,5,-2,1,-3,-9,6,2,-6,9,-5,-3,-3,-2,-10,8,6,4,-10,-1,5,-6,9,3,5,5,9,4,6,2,-6,7,-6,9,5,2,9,-3,6,-4,-7,10,6,1,9,-9,6,6,-5,9,-2,-2,-9,-9,-10,-7,-1,-7,2,-8,-1,-7,-3,8,-9,-9,-8,-3,-5,-1,3,-4,-6,1,8,8,-8,-8,-9,8,3,-8,-10,7,3,-4,7,-3,8,-10,5,10,4,-6,-4,10,4,8,1,3,7,-10,-5,7,9,2,5,9,9,4,-4,1,-4,-3,-6,9,-4,-8,-4,-4,2,8,7,-9,-5,-10,-7,8,-9,6,-9,-9,-6,2,3,4,2,-7,9,7,-8,4,5,-9,-3,10,-2,5,-7,7,-2,7,2,5,9,7,7,5,3,6,8,8,-4,-7,7,-3,6,-3,2,-10,-9,8,-8,8,6,-7,-10,8,5,7,9,3,7,-4,5,10,8,-8,1,-8,-9,-5,8,-3,9,7,7,5,-5,5,-2,-1,-2,-9,-6,2,-1,-4,-8,-4,-6,-7,10,-9,9,-4,-8,3,6,3,-6,7,9,8,8,-6,-4,9,5,10,3,-6,9,-1,9,8,6,-5,-9,-6,-9,-5,-5,7,-4,5,1,2,-9,6,6,5,9,9,-5,7,7,-6,-6,-4,10,-2,1,10,7,-9,-9,-5,4,-8,-10,2,-9,-4,1,-7,-9,3,-3,1,-10,2,-3,-8,2,-6,3,10,8,6,3,-2,2,-2,2,-4,-4,-2,3,3,-5,8,9,-9,3,6,-9,-8,-8,8,6,2,10,6,-3,-1,-10,-8,8,-5,1,6,-4,2,5,-3,6,8,7,-1,4,1,-10,2,4,-8,-3,-6,-7,10,-10,2,6,4,-5,-6,-7,-3,-5,7,-4,-6,-9,3,-3,-9,-6,9,-4,-7,-7,10,-1,-3,9,6,6,10,6,-3,-8,2,-5,8,-5,10,10,-8,-2,9,-2,7,-9,-5,-2,-2,5,8,6,-1,3,-10,1,5,-8,5,9,2,-8,-1,-7,5,-6,4,-9,2,4,4], dtype = "uint16")#candidate|8939|(484,)|const|uint16
call_8938 = relay.TupleGetItem(func_1239_call(relay.reshape(const_8939.astype('uint16'), [484,])), 0)
call_8940 = relay.TupleGetItem(func_1241_call(relay.reshape(const_8939.astype('uint16'), [484,])), 0)
func_3947_call = mod.get_global_var('func_3947')
func_3950_call = mutated_mod.get_global_var('func_3950')
const_8943 = relay.const([-10,-10,9,5,-1,-7,2,8,7,-8,9,9,-7,-3,7,-4,-7,8,-4,-10,-4,8,2,-2,9,-1,7,6,4,-7,-1,6,3,-6,6,2,4,10,5,6], dtype = "uint8")#candidate|8943|(40,)|const|uint8
call_8942 = relay.TupleGetItem(func_3947_call(relay.reshape(const_8943.astype('uint8'), [2, 5, 4])), 1)
call_8944 = relay.TupleGetItem(func_3950_call(relay.reshape(const_8943.astype('uint8'), [2, 5, 4])), 1)
output = relay.Tuple([call_8930,call_8938,const_8939,call_8942,const_8943,])
output2 = relay.Tuple([call_8931,call_8940,const_8939,call_8944,const_8943,])
func_8948 = relay.Function([], output)
mod['func_8948'] = func_8948
mod = relay.transform.InferType()(mod)
output = func_8948()
func_8949 = relay.Function([], output)
mutated_mod['func_8949'] = func_8949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8948_call = mod.get_global_var('func_8948')
func_8949_call = mutated_mod.get_global_var('func_8949')
call_8971 = relay.TupleGetItem(func_8948_call(), 1)
call_8972 = relay.TupleGetItem(func_8949_call(), 1)
func_5865_call = mod.get_global_var('func_5865')
func_5870_call = mutated_mod.get_global_var('func_5870')
const_8977 = relay.const([[7.980827],[5.922879],[-8.756109],[-9.999378],[-8.022816],[-3.549411],[-2.798479],[-9.686589],[-3.271244],[-1.464042],[2.845671],[-2.901295],[7.563162],[3.414897],[9.509836],[-0.055449],[-8.208723],[-4.178239],[-6.038380],[-4.451138],[-4.664405],[8.963738],[-1.774209],[8.722533],[2.561547],[-3.801490],[-5.952560],[-3.652096],[5.845918],[6.925036],[-3.600323],[1.541182],[5.152956],[1.120350],[3.644792],[-9.680870],[1.830423],[-4.699125],[1.266938],[-5.659244],[3.207374],[-1.923941],[-9.984722],[-3.312960],[-1.947056],[-8.064750],[8.698739],[7.584284],[1.130711],[-7.981662],[-5.649431],[-8.440972],[-8.323755],[1.203473],[-1.497569],[-9.918230],[2.487494],[2.334489],[2.918363],[2.967879],[9.803716],[3.912838],[1.589629],[6.051456],[4.026309],[1.855432],[9.498062],[5.341957],[7.313357],[1.959539],[9.879055],[4.398172],[-5.001815],[-4.830744],[-1.975727],[-1.731957],[1.851262],[4.597635],[-9.324396],[8.752212],[-7.171987],[-5.869169],[3.175323],[-3.378752],[-7.004343],[-6.327328],[4.900029],[-5.756525],[4.878115],[-9.666612],[-8.096207],[3.535425],[-2.448820],[5.793553],[-0.227467],[-2.134032],[0.366046],[-7.263511],[0.573344],[6.998987],[-2.457386],[6.777710],[-9.117661],[-9.076855],[-4.623056],[5.690676],[0.867954],[-7.358819],[5.567999],[-8.717726],[-9.885390],[2.949730],[7.573292],[-7.318773],[-1.728330],[1.796921],[-7.555984],[-2.082741],[-4.957933],[-8.599422],[5.301111],[-3.217416],[-1.302925],[-4.045637],[-3.796270],[8.235006],[-1.877513],[-3.784040],[-8.976015],[-0.613316],[7.409168],[-2.131673],[-6.406204],[-2.127443],[7.081254],[0.959864],[-2.740610],[3.042602],[-7.636878],[9.199249],[-4.258800],[2.674280],[7.080423],[4.555408],[7.711890],[-9.620234],[4.834057],[-0.929518],[0.108734],[-5.206458],[0.289294],[-4.463833],[4.498998],[-4.590031],[1.043546],[-9.513464],[8.051649],[-3.588817],[-3.131414],[-3.806315],[5.448517],[-8.478788],[4.820138],[-3.600908],[7.222783],[0.156381],[-3.289652],[-9.824307],[9.762451],[0.735218],[-8.031337],[8.334538],[-4.221364],[-3.274622],[8.089678],[-3.818505],[6.367489],[7.445458],[8.198877],[-3.400265],[-1.763248],[7.702373],[0.638055],[4.257223],[-2.919842],[7.848933],[-3.962636],[-4.116205],[1.897190],[7.063915],[-3.439186],[5.643276],[-9.898816],[-2.706977],[8.131231],[-9.447132],[3.450736],[-4.027844],[-6.207306],[6.357752],[6.571070],[6.326919],[2.244737],[-1.387914],[9.944400],[6.443578],[5.777046],[6.794695],[4.175540],[8.045400],[-5.911073],[9.463799],[7.435566],[-0.069353],[9.382144],[-1.894669],[3.838880],[-5.755202],[-0.049067],[3.163813],[0.457188],[6.356874],[6.333651],[-4.547730],[-9.974076],[9.385238],[-7.462708],[-8.804311],[8.815486],[8.923894],[3.499213],[7.440971],[6.838938],[2.174124],[-7.201556],[5.008445],[-5.557576],[-9.607544],[-2.730639],[-7.591451],[-5.105455],[0.504447],[-1.503860],[-1.592687],[4.709650],[-0.889698],[5.251414],[8.808744],[-6.811549],[-6.134178],[5.911245],[-6.381919],[-3.468050],[0.166643],[9.326234],[-5.958421],[-0.574659],[-0.713699],[6.418327],[-4.759460],[-2.673112],[0.030241],[-9.328512],[6.551344],[-5.262831],[6.379491],[5.651479],[6.582544],[-2.405140],[-0.933356],[-9.452414],[6.281179],[5.303565],[-5.852643],[-6.398782],[5.836932],[3.124420],[-0.423205],[7.964832],[-2.268793],[-3.095529],[3.844620],[4.522950],[2.315152],[1.172606],[-4.578761],[-7.748011],[-6.588516],[5.413480],[5.589095],[6.144820],[0.820197],[9.908495],[-1.448303],[5.892933],[-3.417451],[-0.384934],[7.402555],[-9.227635],[5.847497],[9.792741],[-9.076562],[9.872050],[5.090381],[6.696382],[-1.339039],[4.419001],[6.177449],[-0.698883],[8.886389],[7.638192],[6.283728],[3.603780],[3.467269],[9.140991],[7.041355],[-3.823614],[9.158575],[1.050005],[7.564487],[8.115316],[3.826289],[7.517081],[3.925258],[6.238710],[1.775755],[8.878116],[-4.493573],[3.008501],[-2.588830],[6.274665],[8.440592],[8.465158],[1.939230],[9.642245],[2.102570],[1.609691],[2.630291],[-7.267379],[-0.166151],[6.512811],[-2.801977],[-5.531792],[4.375840],[-9.531963],[-6.478580],[-2.943567],[-1.767669],[-2.076920],[-3.400443],[-4.921036],[-6.205629],[-4.014739],[-3.464547],[0.665701],[-3.016835],[-0.270304],[6.535541],[-5.908013],[-3.424115],[-2.037641],[-4.708798],[9.953018],[6.953288],[-5.413116],[8.743780],[9.510045],[-5.122968],[-2.249279],[-0.999497],[0.330864],[-0.632085],[4.205299],[-6.369545],[6.113753],[0.976194],[-2.185300],[-4.278121],[-2.618643],[5.596889],[0.508611],[6.566151],[0.975834],[-8.360049],[-8.777047],[7.455175],[-5.225298],[2.101707],[6.196854],[9.532090],[-4.854507],[-4.175870],[-1.067652],[-4.904664],[-9.278604],[5.282276],[3.722947],[7.542216],[2.425988],[-1.299322],[-0.919229],[7.673472],[1.894124],[0.611272],[9.288717],[6.888654],[0.699798],[-8.998578],[-9.214198],[-9.175354],[-4.423087],[-9.055324],[-6.678715],[-4.088541],[-1.506218],[1.833884],[-2.442880],[8.249982],[3.867450],[-6.415607],[7.934730],[-3.446596],[-5.106472],[-5.045042],[-0.465494],[8.132484],[-5.675381],[-3.789390],[4.461297],[-9.810814],[5.864352],[5.227490],[3.804092],[5.928086],[6.999934],[1.674125],[-0.430103],[3.927331],[-2.008122],[9.355443],[-3.921532],[7.068773],[4.456338],[3.560408],[1.982817],[-2.109912],[8.160190],[-5.107441],[-6.959571],[6.522753],[-3.582976],[-6.149020],[-2.911544],[4.491963],[5.195412],[5.243108],[0.402089],[-9.988821],[-2.647817],[-9.773487],[-0.777925],[-1.994860],[-6.553224],[-4.387160],[4.959598],[-2.460305],[-9.390772],[-1.495406],[-7.625030],[7.728460],[-6.144857],[6.177155],[6.101186],[-6.467359],[3.385567],[8.161382],[2.481477],[6.281341],[9.373767],[-3.605589],[8.486819],[-8.668559],[9.523313],[-0.689645],[-5.074678],[7.002793],[2.892487],[-2.495605],[6.443449],[-6.135435],[5.824056],[-6.967552],[-8.288017],[-9.722392],[0.161215],[-7.761952],[2.060957],[-0.116640],[5.978727],[-8.283543],[-8.897121],[-4.822668],[-1.199677],[-8.111816],[-3.339693],[-2.052406],[5.737341],[-3.620056],[-4.499292],[6.320768],[-0.359491],[-2.632834],[-4.194469],[-7.519889],[-3.223646],[9.623353],[7.556432],[-2.370310],[-3.020396],[3.668674],[7.383750],[0.857687],[-4.068672],[-0.861135],[-1.569816],[-1.806325],[1.149069],[2.119732],[2.708244],[7.401301],[-5.374310],[-5.723387],[2.508514],[-1.792047],[8.746867],[-3.041559],[4.537115],[0.550607],[0.204013],[2.274705],[2.401966],[-3.537981],[-3.187588],[-4.240853],[-6.767944],[4.351856],[-0.100549],[-6.828031],[-4.953739],[-1.101889],[-1.675863],[7.301862],[-1.724708],[8.559655],[-6.355262],[5.977586],[-6.103992],[8.335878],[2.970873],[-8.930649],[7.339557],[8.798610],[8.045355],[4.737564],[-8.113263],[3.724363],[-4.532133],[-7.994134],[-0.353538],[2.373800],[-8.485663],[-2.115038],[-9.697491],[-9.934304],[-1.846349],[5.476747],[-7.421012],[0.767295],[-7.670106],[-2.717176],[-1.856281],[2.728967],[-8.557564],[4.864071],[3.965499],[4.721052],[-0.302976],[-3.002101],[3.439124],[-7.203965],[8.521640],[-7.820940],[-0.391613],[0.449820],[-9.125585],[3.609024],[-5.935829],[-4.722172],[9.276836],[1.176188],[-4.940183],[-0.872058],[-6.835171],[7.186552],[6.423999],[4.495473],[-0.387148],[6.303177],[-6.264364],[1.901309],[-0.107420],[2.856447],[-1.593931],[4.691535],[-5.082079],[-5.795875],[0.108013],[4.100382],[-9.262876],[-6.277315],[-0.085335],[-2.067511],[7.467330],[-2.535658],[3.366287],[-2.986005],[-4.249901],[-1.546205],[3.156501],[-2.410980],[-8.916407],[-3.638965],[-3.095299],[9.423822],[9.835476],[-1.743728],[-8.323137],[-5.203723],[-0.378617],[8.005749],[-4.747057],[2.455439],[5.248806],[2.283581],[4.961249],[-8.044459],[6.215074],[-3.324969],[-1.488113],[-9.986234],[3.333202],[-4.966114],[7.168271],[3.468330],[5.740907],[5.138550],[-1.190384],[-9.547398],[-2.897863],[3.127704],[-5.871043],[6.481331],[-2.133930],[4.190087],[-8.598526],[-1.432504],[-0.751922],[4.252134],[8.402567],[-6.175350],[8.350752],[1.513595],[-8.570018],[4.475785],[5.782724],[2.697597],[1.778900],[1.280808],[-2.395664],[-1.407604],[-3.531115],[-8.664378],[3.352811],[4.802997],[-9.871322],[4.726511],[4.587067],[3.567960],[1.218856],[5.525980],[5.800715],[-1.027056],[3.970587],[7.879177],[-6.485420],[-4.576166],[-3.991642],[0.050202],[-8.987418],[1.795865],[-4.474973],[-1.858127],[2.245448],[-8.845517],[0.906224],[8.350813],[-8.934027],[3.953105],[-0.771267],[5.306715],[-9.611180],[5.289392],[-7.207391],[8.853929],[5.953053],[0.402263],[7.578933],[-4.935599],[4.243411],[7.213896],[-6.563341],[-5.600809],[-5.648721],[-0.390223],[-6.583565],[7.182118],[-7.572809],[1.517103],[-3.347912],[1.381908],[7.365473],[3.202923],[8.503973],[7.159061],[-8.848743],[2.474429],[-8.073215],[4.789979],[3.226579],[3.874155],[2.580988],[-3.730231],[9.413100],[-7.779912],[-2.365753],[-7.113611],[-6.461521],[6.193584],[4.678714],[4.727934],[0.918551],[-3.829174],[-8.540828],[2.416748],[4.989013],[0.067233],[2.025354],[-3.448896],[1.159392],[-3.312181],[3.339396],[-6.447300],[0.804474],[1.761564],[-3.548153],[-6.669425],[1.352521],[1.110125],[0.781873],[1.515101],[0.197561],[8.546569],[-0.646325],[-5.390482],[4.337676],[-2.553290],[1.208104],[-5.691705],[-9.275737],[4.814248],[-4.040896],[-0.584277],[-6.596297],[9.971931],[-0.530095],[-2.065364],[1.017066],[7.043291],[-9.271272],[-1.981036],[-6.254682],[-1.527739],[7.747668],[-2.548258],[-8.387046],[-9.070288],[-7.479217],[-3.968013],[6.447633],[-0.365214],[-1.703590],[2.050037],[-4.302458],[1.125015],[-0.141994],[-9.845529],[-2.153838],[-1.508144],[-8.898100],[3.870767],[-3.516711],[3.745751],[5.334831],[9.411296],[-8.922002],[-2.195916],[5.446911],[-3.977676],[-3.768707],[-0.561266],[1.131285],[-1.911708],[4.883566],[5.608649],[8.619843],[-6.943867],[8.639816],[-0.346620],[1.651232],[2.521842],[5.404234],[-7.035929],[0.812387],[1.776730],[-0.519725],[9.728182],[-4.072984],[-9.912914],[-0.763925],[6.212729],[-3.388851],[-3.518558],[-7.876540],[-5.985409],[-0.415004],[5.231175],[-0.152864],[-1.711857],[-1.501763],[8.372018],[0.310765],[7.165008],[-7.445245],[2.968822],[3.126080],[9.637994],[-3.815051],[4.133399],[-6.992212],[-1.919710],[8.870080],[5.499691],[9.606405],[-7.320828]], dtype = "float64")#candidate|8977|(864, 1)|const|float64
const_8978 = relay.const([-1.986349,-4.082280,-6.995325,1.946005,9.142614,0.678304], dtype = "float64")#candidate|8978|(6,)|const|float64
var_8979 = relay.var("var_8979", dtype = "float64", shape = (312, 2))#candidate|8979|(312, 2)|var|float64
var_8980 = relay.var("var_8980", dtype = "int64", shape = (320,))#candidate|8980|(320,)|var|int64
call_8976 = relay.TupleGetItem(func_5865_call(relay.reshape(const_8977.astype('float64'), [864,]), relay.reshape(const_8978.astype('float64'), [3, 2]), relay.reshape(var_8979.astype('float64'), [8, 6, 13]), relay.reshape(var_8980.astype('int64'), [320,]), ), 2)
call_8981 = relay.TupleGetItem(func_5870_call(relay.reshape(const_8977.astype('float64'), [864,]), relay.reshape(const_8978.astype('float64'), [3, 2]), relay.reshape(var_8979.astype('float64'), [8, 6, 13]), relay.reshape(var_8980.astype('int64'), [320,]), ), 2)
func_1954_call = mod.get_global_var('func_1954')
func_1959_call = mutated_mod.get_global_var('func_1959')
const_8991 = relay.const([-5,-7,5,5,-2,5,2,-5,-10,5,-3,4,-7,10,-9,-8,-5,-1,-2,10,9,-2,-1,-7,5,-10,8,-6,1,2,2,6,5,-10,6,-3,-7,-5,1,9,4,4,-5,9,-8,-6,1,8,9,-6,-7,-9,3,5,8,10,3,-5,6,-4,5,7,-2,-3,-2,-6,-8,-5,3,-7,-4,-4,-2,-7,5,5,1,-9,6,4,10,8,8,-1,3,-1,-6,6,-8,-6,-6,6,-2,10,6,7,7,6,-7,4,6,9,-4,9,9,6,8,-3,-4,10,1,8,3,1,2,1,5,-1,6,1,-5,1,9,-6,8,-3,-3,5,4,7,-5,5,8,-7,5,-10,-4,-6,6,6,-9,-3,1,-10,7,-10,-4,10,-2,-8,6,-9,-10,3,-8,10,-7,10,4,-2,5,-1,8,3,-10,-7,9,-7,3,-5,-7,6,1,-4,4,-5,-2,10,-10,2,-5,6,-6,-5,1,8,6,-5,-10,1,9,-4,2,10,6,4,2,-7,3,5,-1,-5,1,-3,1,6,10,10,4,6,2,3,-9,2,10,7,4,-8,2,-3,-7,-2,9,-3,-3,-2,8,-1,-4,1,10,-7,8,9,-9,4,1,5,9,2,-6,7,10,2,-10,-7,-1,-7,10,-10,8,6,-1,1,8,1,8,7,7,1,4,-10,-4,5,-2,-4,-10,-2,-1,10,6,1,-9,-3,10,4,4,1,10,2,3,-4,6,6,9,-7,9,-1,10,5,-8,4,-2,7,-10,-3,7,-8,3,4,-1,-7,1,-9,1,-1,-2,10,9,-5,8,-2,5,-10,5,2,-5,6,-8,6,-8,8,-1,3,6,9,-6,-1,-4,-1,4,-4,-2,-4,-7,10,9,-5,-8,10,-6,8,-3,-5,9,-5,9,2,2,-2,8,6,1,8,2,3,-1,10,-1,1,10,3,-5,-1,-2,-10,8,-10,1,-8,9,1,-6,4,-5,-7,10,4,-6,-6,1,-3,-4,-10,2,-8,-1,3,-1,5,3,-10], dtype = "uint32")#candidate|8991|(392,)|const|uint32
var_8992 = relay.var("var_8992", dtype = "int16", shape = (2304,))#candidate|8992|(2304,)|var|int16
call_8990 = relay.TupleGetItem(func_1954_call(relay.reshape(const_8991.astype('uint32'), [14, 14, 2]), relay.reshape(var_8992.astype('int16'), [2304, 1]), relay.reshape(var_8980.astype('int64'), [80, 4]), ), 3)
call_8993 = relay.TupleGetItem(func_1959_call(relay.reshape(const_8991.astype('uint32'), [14, 14, 2]), relay.reshape(var_8992.astype('int16'), [2304, 1]), relay.reshape(var_8980.astype('int64'), [80, 4]), ), 3)
var_9002 = relay.var("var_9002", dtype = "float64", shape = (312, 2))#candidate|9002|(312, 2)|var|float64
bop_9003 = relay.bitwise_xor(var_8979.astype('int32'), relay.reshape(var_9002.astype('int32'), relay.shape_of(var_8979))) # shape=(312, 2)
output = relay.Tuple([call_8971,call_8976,const_8977,const_8978,var_8980,call_8990,const_8991,var_8992,bop_9003,])
output2 = relay.Tuple([call_8972,call_8981,const_8977,const_8978,var_8980,call_8993,const_8991,var_8992,bop_9003,])
func_9014 = relay.Function([var_8979,var_8980,var_8992,var_9002,], output)
mod['func_9014'] = func_9014
mod = relay.transform.InferType()(mod)
mutated_mod['func_9014'] = func_9014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9014_call = mutated_mod.get_global_var('func_9014')
var_9016 = relay.var("var_9016", dtype = "float64", shape = (312, 2))#candidate|9016|(312, 2)|var|float64
var_9017 = relay.var("var_9017", dtype = "int64", shape = (320,))#candidate|9017|(320,)|var|int64
var_9018 = relay.var("var_9018", dtype = "int16", shape = (2304,))#candidate|9018|(2304,)|var|int16
var_9019 = relay.var("var_9019", dtype = "float64", shape = (312, 2))#candidate|9019|(312, 2)|var|float64
call_9015 = func_9014_call(var_9016,var_9017,var_9018,var_9019,)
output = call_9015
func_9020 = relay.Function([var_9016,var_9017,var_9018,var_9019,], output)
mutated_mod['func_9020'] = func_9020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8506_call = mod.get_global_var('func_8506')
func_8507_call = mutated_mod.get_global_var('func_8507')
call_9052 = func_8506_call()
call_9053 = func_8506_call()
output = relay.Tuple([call_9052,])
output2 = relay.Tuple([call_9053,])
func_9072 = relay.Function([], output)
mod['func_9072'] = func_9072
mod = relay.transform.InferType()(mod)
mutated_mod['func_9072'] = func_9072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9072_call = mutated_mod.get_global_var('func_9072')
call_9073 = func_9072_call()
output = call_9073
func_9074 = relay.Function([], output)
mutated_mod['func_9074'] = func_9074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7975_call = mod.get_global_var('func_7975')
func_7976_call = mutated_mod.get_global_var('func_7976')
call_9084 = relay.TupleGetItem(func_7975_call(), 0)
call_9085 = relay.TupleGetItem(func_7976_call(), 0)
output = call_9084
output2 = call_9085
func_9091 = relay.Function([], output)
mod['func_9091'] = func_9091
mod = relay.transform.InferType()(mod)
output = func_9091()
func_9092 = relay.Function([], output)
mutated_mod['func_9092'] = func_9092
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9099 = relay.const([[[-5.531728,5.178029,-1.344478,-0.628732,-2.603834,-8.694864,3.538327,2.534407,7.103139],[8.698406,0.492823,1.898453,4.938634,9.600984,6.935590,0.191556,-3.104772,-2.868298],[3.623036,-2.872808,8.382944,9.957580,5.875141,-2.101081,2.886897,1.107617,3.189461],[-2.462048,-6.022609,4.547238,-9.047017,7.360475,-3.996534,9.465728,-1.169544,7.253150],[8.449966,3.106415,6.581187,6.914511,1.590080,2.469177,3.647595,0.463850,3.929311],[2.554960,5.094542,-6.157757,-4.869163,-9.725431,7.080399,-1.068587,-3.135508,5.281321],[-8.284171,-9.432123,2.723017,-7.518628,5.825662,4.270152,9.184802,1.383799,9.977178],[-4.097753,3.976155,4.483329,-5.749416,2.144718,7.720003,-0.982891,3.047261,6.049471],[-1.028630,-9.026442,9.951217,6.956271,-0.633170,-1.499698,-9.718618,-2.813651,4.366392],[6.078478,8.111661,-7.418558,5.667772,-4.276916,1.185869,-5.632091,-7.453077,1.110941]],[[-1.152959,-5.399100,2.840532,-2.596881,1.306607,-1.068986,-1.385256,-2.579084,-4.870410],[-3.542121,1.542372,7.392415,-9.513562,-7.568474,-7.617281,5.651054,-4.570943,9.720722],[-2.463991,-7.357826,-6.978510,-0.659293,-8.044066,3.159315,8.642472,-2.321008,-9.706097],[9.263263,6.294512,2.707650,7.803105,-3.355308,-1.974045,-1.979336,-7.952586,-5.683307],[6.951420,5.066940,2.183244,-9.670038,3.913700,9.860914,-9.369734,-5.437164,4.199543],[7.546443,-2.914947,-9.198361,-8.420743,5.422211,6.060412,9.311597,-7.261361,-3.684018],[9.903040,-4.648700,-8.091836,1.090434,-0.994549,-8.074427,6.873220,8.564690,-6.926203],[8.630048,-2.883009,5.638327,-0.705132,-3.493253,3.358030,2.332390,2.934373,2.424277],[5.988411,7.312650,1.916729,0.338636,2.060999,-6.763476,9.776625,-3.705538,0.275266],[7.408476,1.349171,-7.018084,6.681226,5.777095,-3.256132,-7.878794,0.080287,1.554131]],[[7.036270,-1.323593,7.413703,-1.959048,-3.496627,-1.023257,-4.457912,1.692380,2.992696],[5.872758,9.543302,-2.982927,0.040215,-6.326659,-6.441385,4.477822,-5.520584,-4.454228],[5.490402,-1.190561,-4.962354,1.770601,0.817683,-7.388136,-7.082490,2.573452,-4.950043],[2.201223,-3.565148,0.178994,-9.612429,-9.834022,-6.219752,-3.487165,-0.159256,7.304973],[-9.791434,6.635695,1.482869,-4.815246,9.359802,-8.931669,2.756740,-9.736238,4.053751],[-1.301875,-4.080813,-6.600253,-2.889448,-0.212032,-9.156310,0.664842,-5.185063,-8.742446],[-8.670863,-0.675891,-8.103493,5.382494,-9.318355,0.812717,1.233135,6.104126,-1.401768],[-3.965563,2.630700,5.013963,-0.283357,-0.565544,-1.178118,9.065699,2.577933,-6.820360],[-6.238385,-7.823178,2.051038,-7.771444,7.992484,2.066334,0.378209,-8.527745,-5.687719],[-0.759306,-6.689214,-0.389282,2.035902,0.854797,8.528110,-7.848964,-0.577298,-8.712039]],[[-2.614378,-4.227668,8.039238,-4.129440,-1.247983,1.335282,-7.443652,1.992863,-1.084304],[5.826817,7.248416,-4.838486,4.737273,-6.309713,1.492142,5.943763,1.794886,-5.691590],[9.083918,-5.963474,5.453358,6.911325,8.721911,3.389976,-9.917424,-1.937542,7.779319],[-4.402266,1.317441,-3.583206,1.582338,3.927815,-5.657440,9.544977,-5.732466,2.576508],[3.659515,1.361911,6.425892,-4.662862,-0.429695,-0.855052,-9.084676,-2.878457,0.863608],[-3.417005,-5.809018,-9.378423,9.022641,6.760123,7.154992,-0.195968,9.244190,1.815033],[-5.008432,-1.331015,-3.507344,-9.647092,4.587720,8.963407,-8.187675,4.232107,6.776071],[9.752820,-5.004777,-6.607025,2.539654,-5.751510,-2.311446,6.016467,-4.911104,1.634727],[-9.327236,3.172693,-7.965512,6.580006,-4.416811,-1.640676,-1.645185,4.645653,-3.634954],[-4.488073,-4.776161,-8.473746,-7.148149,7.680738,3.990458,-0.067654,-3.088077,1.966332]],[[-1.694438,6.198204,3.151397,-3.870765,6.179262,-4.395512,3.248547,2.510608,-1.485837],[-1.594242,-0.660753,5.366415,1.109672,1.332087,0.498073,-0.302217,7.036212,-3.431237],[3.012339,-3.289600,-2.961354,-7.901317,4.594711,6.309409,3.868278,7.965095,1.629757],[4.390215,-2.759282,1.421254,1.957521,1.743808,7.224688,-5.412454,-0.483226,-3.650005],[1.732837,-7.989691,-8.019506,-8.014953,2.397951,8.015917,-0.636254,1.452075,-5.542271],[-9.296500,2.214918,-1.354019,-5.721540,8.365327,-7.446298,8.732276,4.941977,-2.609414],[-2.897300,0.231963,-1.118995,-0.747662,-5.917408,0.265996,-9.156848,-8.167311,4.643300],[4.542708,6.253384,-3.570698,-9.712249,-1.514292,1.349643,2.006578,3.973559,-2.607468],[-7.055979,8.427385,-2.682983,1.866568,-6.915335,-8.606849,-1.854620,7.057364,5.862197],[2.888695,-5.955851,4.557761,1.315400,7.314839,8.051892,-9.811429,-9.610781,-2.965221]],[[2.247049,-9.107159,-0.209090,0.747957,-0.103354,-0.328788,2.677643,1.913907,9.684832],[4.406853,2.088069,-5.848565,-3.023642,-8.474378,-6.456963,-6.198577,-4.957322,6.957637],[5.168123,-6.984055,-5.184902,9.945955,-1.651815,5.881498,6.365165,-2.888476,3.562414],[-0.661909,-7.414862,-8.896508,8.436492,-0.956926,8.941138,-9.964890,-3.493273,-5.727154],[-5.763505,-8.892909,-3.824728,-9.831008,3.728927,8.651672,7.753939,-7.671381,-3.282418],[-6.666175,6.684201,-4.897373,0.884786,-4.254492,1.458620,-3.448726,-9.695440,-7.808688],[-7.278613,2.117024,-4.335046,-4.657999,-4.801290,5.856521,6.639632,-3.241190,-2.614297],[-7.363996,-3.455191,6.637714,2.449696,1.239631,5.783377,5.428312,-8.005899,1.461298],[0.467684,5.353867,-8.506789,-4.789522,-7.595224,4.630563,5.407198,-1.363129,-5.970232],[3.653398,4.443161,5.725842,2.635884,-7.206988,2.606820,-3.736175,5.980529,-1.647219]],[[-0.087490,-7.668936,-5.826573,3.816196,6.934321,5.716930,6.344348,3.700543,9.082764],[5.920621,2.612677,-4.016653,0.160216,6.006537,-0.938932,0.013160,7.975608,-1.921546],[7.737253,2.642022,5.115600,-9.206183,-5.165573,-9.439249,-6.422533,-6.253574,7.319435],[8.626594,9.499298,-9.420795,-5.074682,-0.402650,6.639840,5.593876,-5.186614,2.693467],[3.453669,-3.078725,7.380180,0.740228,8.371887,-6.593315,1.697750,0.690201,-1.310579],[-0.298365,7.702536,-4.920352,6.986332,2.815216,4.522306,-9.910887,-0.922370,-5.119691],[8.475392,-0.485373,4.243396,7.152596,-5.114486,3.479329,-2.827745,5.548855,-8.476989],[-8.347689,-6.075078,6.874700,-3.726253,-5.694454,-8.473251,2.214904,4.326999,-7.234997],[-5.414799,6.305728,0.510385,6.434092,-5.852115,6.409472,8.566613,2.071865,-6.168433],[7.201942,-1.615477,6.720902,-2.111372,-5.299877,-4.756837,-5.566035,-0.446282,8.280222]],[[-1.828768,-6.757618,-0.125107,7.493075,3.473171,8.709249,9.857791,5.203466,-2.088739],[-5.747569,0.549221,-6.051221,-1.967039,-8.386320,-0.356430,-6.262532,-4.290096,-1.345704],[-3.344667,-2.763791,-4.650987,2.144776,-9.226511,2.701021,-7.137980,8.579277,-9.780279],[0.664460,-8.195087,0.096980,-1.264716,9.219980,-7.637736,0.248291,6.382960,4.922158],[6.586188,2.049692,9.287551,-4.727642,4.413566,4.119251,-3.698897,-8.857088,-2.608658],[8.287339,8.253879,3.956100,-3.827148,-3.687737,7.996231,4.246149,1.770563,-8.073447],[5.830323,-5.315340,7.831623,-4.363760,-7.023213,-8.505721,6.858545,8.331514,4.638047],[-3.485774,1.236787,7.461127,-8.121218,2.146466,-6.442406,-1.138825,2.617789,-6.131415],[-1.213536,-3.019569,5.409378,7.076141,-9.410731,6.999741,-7.582143,-8.062567,-3.370723],[-7.380381,-0.801454,-2.448147,2.202756,7.006409,6.282033,9.374233,-2.854968,9.911685]]], dtype = "float64")#candidate|9099|(8, 10, 9)|const|float64
uop_9100 = relay.acos(const_9099.astype('float64')) # shape=(8, 10, 9)
output = uop_9100
output2 = uop_9100
func_9103 = relay.Function([], output)
mod['func_9103'] = func_9103
mod = relay.transform.InferType()(mod)
mutated_mod['func_9103'] = func_9103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9103_call = mutated_mod.get_global_var('func_9103')
call_9104 = func_9103_call()
output = call_9104
func_9105 = relay.Function([], output)
mutated_mod['func_9105'] = func_9105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mod.get_global_var('func_8321')
func_8323_call = mutated_mod.get_global_var('func_8323')
call_9123 = relay.TupleGetItem(func_8321_call(), 0)
call_9124 = relay.TupleGetItem(func_8323_call(), 0)
output = relay.Tuple([call_9123,])
output2 = relay.Tuple([call_9124,])
func_9134 = relay.Function([], output)
mod['func_9134'] = func_9134
mod = relay.transform.InferType()(mod)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9134_call = mutated_mod.get_global_var('func_9134')
call_9135 = func_9134_call()
output = call_9135
func_9136 = relay.Function([], output)
mutated_mod['func_9136'] = func_9136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8440_call = mod.get_global_var('func_8440')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_9162 = relay.TupleGetItem(func_8440_call(), 0)
call_9163 = relay.TupleGetItem(func_8441_call(), 0)
uop_9167 = relay.cosh(call_9162.astype('float64')) # shape=(6, 14, 16)
uop_9169 = relay.cosh(call_9163.astype('float64')) # shape=(6, 14, 16)
func_783_call = mod.get_global_var('func_783')
func_786_call = mutated_mod.get_global_var('func_786')
var_9171 = relay.var("var_9171", dtype = "uint16", shape = (242, 2))#candidate|9171|(242, 2)|var|uint16
call_9170 = func_783_call(relay.reshape(var_9171.astype('uint16'), [11, 11, 4]))
call_9172 = func_783_call(relay.reshape(var_9171.astype('uint16'), [11, 11, 4]))
output = relay.Tuple([uop_9167,call_9170,var_9171,])
output2 = relay.Tuple([uop_9169,call_9172,var_9171,])
func_9196 = relay.Function([var_9171,], output)
mod['func_9196'] = func_9196
mod = relay.transform.InferType()(mod)
var_9197 = relay.var("var_9197", dtype = "uint16", shape = (242, 2))#candidate|9197|(242, 2)|var|uint16
output = func_9196(var_9197)
func_9198 = relay.Function([var_9197], output)
mutated_mod['func_9198'] = func_9198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8343_call = mod.get_global_var('func_8343')
func_8344_call = mutated_mod.get_global_var('func_8344')
call_9237 = relay.TupleGetItem(func_8343_call(), 1)
call_9238 = relay.TupleGetItem(func_8344_call(), 1)
output = call_9237
output2 = call_9238
func_9246 = relay.Function([], output)
mod['func_9246'] = func_9246
mod = relay.transform.InferType()(mod)
output = func_9246()
func_9247 = relay.Function([], output)
mutated_mod['func_9247'] = func_9247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_9277 = func_7788_call()
call_9278 = func_7788_call()
func_7662_call = mod.get_global_var('func_7662')
func_7667_call = mutated_mod.get_global_var('func_7667')
const_9282 = relay.const([[9],[2],[2],[-6],[1],[9],[9],[-1],[-5],[1],[7],[-1],[-5],[1],[-8],[-4],[7],[-9],[-4],[-5],[-8],[-2],[4],[-9],[-4],[-5],[4],[-1],[8],[8],[9],[5],[8],[6],[-10],[-6],[5],[-7],[-3],[-8],[-9],[-7],[-8],[-3],[4],[-2],[-3],[-10],[10],[-4],[5],[9],[10],[-1],[-4],[-2],[-3],[-7],[-9],[7],[4],[-6],[-8],[-8],[2],[-1],[2],[9],[7],[4],[10],[-6],[5],[3],[-4],[7],[4],[4],[2],[2],[-6],[3],[2],[9],[-1],[-1],[-9],[5],[10],[7],[-10],[3],[10],[6],[1],[-7],[1],[-4],[-9],[10],[-8],[-4],[-10],[10],[-7],[-6],[-1],[-3],[-8],[4],[8],[-6],[-1],[-2],[5],[-2],[-5],[-7],[-5],[4],[4],[-3],[1],[-10],[6],[8],[-7],[-3],[-5],[9],[-8],[-1],[9],[-9],[7],[-10],[-5],[9],[-6],[7],[-5],[8],[-9],[10],[-7],[-2],[-2],[-10],[-4],[-7],[2],[3],[-8],[-5],[3],[8],[7],[10],[8],[-10],[9],[-2],[6],[3],[-10],[-1],[8],[2],[-8],[2],[-1],[9],[-8],[-3],[-9],[1],[-6],[10],[-4],[-2],[-3],[-9],[-10],[-7],[-9],[10],[-1],[9],[-8],[-6],[-5],[4],[2],[3],[-6],[4],[-1],[8],[-3],[-10],[4],[-4],[10],[4],[6],[-4],[1],[-2],[3],[2],[-2],[9],[-9],[-5],[-4],[7],[-6],[2],[-4],[4],[10],[-1],[-8],[-5],[10],[-2],[-4],[-8],[-10],[7],[1],[-9],[-7],[-2],[1],[3],[4],[2],[8],[-2],[-7],[-3],[-5],[-3],[-7],[6],[-6],[-2],[10],[-6],[-10],[10],[-2],[5],[-2],[-10],[-1],[-9],[5],[3],[4],[-9],[-8],[3],[-7],[-7],[-7],[-10],[-1],[-1],[-1],[-1],[4],[-1],[2],[3],[5],[6],[3],[9]], dtype = "uint64")#candidate|9282|(280, 1)|const|uint64
var_9283 = relay.var("var_9283", dtype = "float64", shape = (90,))#candidate|9283|(90,)|var|float64
var_9284 = relay.var("var_9284", dtype = "float64", shape = (864,))#candidate|9284|(864,)|var|float64
call_9281 = relay.TupleGetItem(func_7662_call(relay.reshape(const_9282.astype('uint64'), [280,]), relay.reshape(var_9283.astype('float64'), [90,]), relay.reshape(var_9284.astype('float64'), [864,]), ), 1)
call_9285 = relay.TupleGetItem(func_7667_call(relay.reshape(const_9282.astype('uint64'), [280,]), relay.reshape(var_9283.astype('float64'), [90,]), relay.reshape(var_9284.astype('float64'), [864,]), ), 1)
output = relay.Tuple([call_9277,call_9281,const_9282,var_9283,var_9284,])
output2 = relay.Tuple([call_9278,call_9285,const_9282,var_9283,var_9284,])
func_9301 = relay.Function([var_9283,var_9284,], output)
mod['func_9301'] = func_9301
mod = relay.transform.InferType()(mod)
mutated_mod['func_9301'] = func_9301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9301_call = mutated_mod.get_global_var('func_9301')
var_9303 = relay.var("var_9303", dtype = "float64", shape = (90,))#candidate|9303|(90,)|var|float64
var_9304 = relay.var("var_9304", dtype = "float64", shape = (864,))#candidate|9304|(864,)|var|float64
call_9302 = func_9301_call(var_9303,var_9304,)
output = call_9302
func_9305 = relay.Function([var_9303,var_9304,], output)
mutated_mod['func_9305'] = func_9305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_9309 = relay.TupleGetItem(func_7750_call(), 0)
call_9310 = relay.TupleGetItem(func_7751_call(), 0)
var_9330 = relay.var("var_9330", dtype = "bool", shape = (6, 14, 16))#candidate|9330|(6, 14, 16)|var|bool
bop_9331 = relay.add(call_9309.astype('uint8'), relay.reshape(var_9330.astype('uint8'), relay.shape_of(call_9309))) # shape=(6, 14, 16)
bop_9334 = relay.add(call_9310.astype('uint8'), relay.reshape(var_9330.astype('uint8'), relay.shape_of(call_9310))) # shape=(6, 14, 16)
output = relay.Tuple([bop_9331,])
output2 = relay.Tuple([bop_9334,])
func_9352 = relay.Function([var_9330,], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
mutated_mod['func_9352'] = func_9352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9353 = relay.var("var_9353", dtype = "bool", shape = (6, 14, 16))#candidate|9353|(6, 14, 16)|var|bool
func_9352_call = mutated_mod.get_global_var('func_9352')
call_9354 = func_9352_call(var_9353)
output = call_9354
func_9355 = relay.Function([var_9353], output)
mutated_mod['func_9355'] = func_9355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9506 = relay.var("var_9506", dtype = "float32", shape = (2, 8, 7))#candidate|9506|(2, 8, 7)|var|float32
uop_9507 = relay.rsqrt(var_9506.astype('float32')) # shape=(2, 8, 7)
func_536_call = mod.get_global_var('func_536')
func_539_call = mutated_mod.get_global_var('func_539')
const_9510 = relay.const([2.191888,5.079523,7.997149,-2.071178,-9.858724,-9.882581,-7.312189,-8.661329,-9.325406,9.648067,9.627811,-6.870252,6.412252,-6.182850,1.324299,-1.283192,7.161356,6.428523,-9.748920,8.369315,-2.415779,7.630863,-6.343311,-3.378087,5.840475,-4.067543,-3.749830,-9.790802,9.324914,-1.201801,2.395077,-0.504484,1.719655,9.911597,9.146898,-7.540539,-2.746151,-5.462061,6.250842,5.754170,-2.365829,0.293225,-2.611977,8.116814,3.360339,-2.688282,-5.653871,4.125448,-4.046102,5.953190,-7.593918,-9.019428,-3.658190,9.696380,9.694910,-3.561052,-0.108604,-4.714089,9.673554,2.533009,-1.452613,2.677932,-2.067610,-6.028356,5.220377,-4.214440,3.509344,-5.915931,-0.230258,6.268258,-3.431978,1.679140,6.718409,-3.702359,5.481879,0.925509,2.316463,6.580672,-6.597183,0.303781,8.674240,5.685154,-0.705519,-8.003911,6.564306,-3.665658,-2.227537,6.248344,7.634111,-5.126689,3.811284,-1.894969,3.942807,-6.529591,9.967856,4.080968,8.031704,4.539033,3.476080,-8.220956,5.235341,-0.240530,4.589837,-6.760613,8.769117,7.912561,-4.809903,-7.046642,4.578370,3.251731,-2.043975,-9.718192,4.257154,1.690165,6.374087,-8.780465,-9.275487,-5.041743,-9.071838,-2.724471,-3.410806,-4.286918,-6.913590,-0.194369,2.049065,-0.182448,-3.352099,6.584961,6.752367,-3.278523,9.292621,4.959106,-0.155830,1.578124,-7.061564,-3.208147,6.921901,-0.354922,3.257443,-1.312268,-4.970262,-6.585386,9.491482,3.230099,-7.929722,9.999636,-6.732588,0.279560,8.623784,8.496153,1.314109,-6.182813,-3.231875,-3.857564,2.902408,-2.425680,3.777476,-0.891212,-2.518861,4.310112,-5.063219,-9.590184,-1.318830,8.688291,-9.794156,4.076768,-4.544444,2.515634,-3.399336,1.598133,-9.490944,-8.828864,-0.703266,-6.589596,-9.534188,-6.339338,-0.800423,2.241717,-2.695841,-1.570480,3.835694,-3.896522,9.439200,-1.174976,4.114729,3.596198,3.251252,-4.287589,5.746325,-4.990124,-0.770492,-0.740387,-8.697782,1.434462,-2.320482,0.340847,-2.467644,1.260168,6.845768,4.583309,2.654012,-3.791784,-4.355769,9.292218,4.433252,8.114781,-7.671218,8.486168,2.522850,9.965804,-0.862756,9.238556,7.990690,0.982380,-3.317944,7.651855,9.314036,-6.926592,-2.254460,7.186959,-9.813329,-2.053999,-4.042937,6.751509,-6.476932,6.204585,5.619885,0.836557,-3.538188,-3.242486,-9.201876,-4.315482,8.166073,0.319885,-3.821393,-4.495164,-8.978205,2.002157,-0.245844,-9.931874,-3.681802,1.300741,1.171910,-4.421127,2.724901,-3.126754,-9.537984,-8.524450,-7.092816,-8.920574,-3.463490,5.086527,6.396165,-2.537968,8.082809,-9.660346,-1.648860,6.820871,0.380656,3.301648,-1.186292,-3.498554,6.898780,5.260941,-9.381144,-3.484507,-9.781638,1.209562,9.671001,8.509309,3.987141,-6.797243,7.220021,8.647438,7.714358,-8.603634,-1.715790,-0.551649,5.470010,6.266181,6.836295,-6.609109,9.011892,1.797006,8.295132,4.526745,5.732433,6.405510,-3.998401,8.455661,2.994348,4.311946,-5.463518,0.911745,5.686491,9.838079,6.790146,-2.888270,-7.605725,7.039369,-0.285161,-1.081233,-0.446032,8.790110,-4.506622,-6.541049,-2.455216,8.603451,2.885762,-3.712012,-7.884588,-8.188864,8.154088,-1.210352,-7.218281,-3.299088,3.853937,-6.120304,-9.488444,-7.074412,-6.811109,-6.158115,-6.070330,4.261415,5.299761,2.716954,-5.259305,5.967338,-5.705799,1.797844,3.612764,-1.759334,-1.974322,-9.555820,-2.753019,3.884189,5.459266,7.214015,9.630009,1.963501,-7.415160,-8.023875,-1.362823,-7.709334,-0.796911,-2.263530,4.556870,-6.862581,2.745744,-4.285559,6.239741,6.934666,-8.648511,-3.631795,6.292892,-8.038572,-4.933969,-2.725158,-1.100770,-0.875825,-8.676531,-5.684111,3.621546,3.005466,6.689597,-6.211418,1.666578,3.136534,-2.163216,-6.815035,3.960437,4.446135,9.441145,6.462951,-9.203185,-3.703895,-5.342304,8.758309,3.369423,-3.090102,-6.074025,5.134348,-9.292098,8.248628,1.433084,6.107438,-8.961743,-5.041165,-1.363306,6.796065,2.226880,-1.480386,-9.668650,6.982921,-7.261856,-4.311306,-4.784804,3.814877,-7.444024,5.851799,-8.192157,9.037246,0.729760,-7.176105,7.508431,8.586273,-3.180625,-7.956359,6.496760,-5.436691,9.555093,-2.086450,5.895042,8.756017,8.353781,4.270765,4.955916,-5.498046,-6.959220,-7.136025,9.816379,0.830047,5.762458,-1.478566,4.132130,6.631180,-2.661346,5.942072,9.479557,5.123126,6.624693,-5.658206,5.020090,-2.724940,3.876657,6.918297,-4.081147,-8.886265,-7.058130,-2.929642,-1.323624,2.677720,4.647032,-1.284826,0.641171,6.727090,-3.631308,8.023280,2.854203,2.226962,-1.953817,7.356327,4.004319,0.361034,-8.696151,-0.135697,8.158105,6.918338,-1.839965,0.632156,-7.629248,-0.245615,-5.363401,-4.686728,6.822115,-2.569700,1.772061,-1.484208,-0.505160,-3.763604,5.200570,1.574516,-0.876877,-8.972253,-6.473170,-9.806434,-0.995295,3.345210,-0.302398,-5.000158,9.815113,-7.702858,-5.470779,-7.344776,-4.684425,-0.214960,4.643438,-9.957415,-3.027035,-2.829021,-7.503324,1.645712,9.578330,7.663342,9.053281,-6.712437,-2.697192,3.897849,2.698062,4.967604,-0.725795,-7.973596,9.783039,-2.742269,5.700501,-6.578087,0.867031,-7.880450,-5.124049,7.642617,-8.402305,4.396013,-2.971955,9.257808,-9.022638,6.443296,-2.278497,-0.366166,-4.224180,-9.572187,4.919081,9.233213,-4.399700,7.677917,9.632870,-4.971660,-8.071510,-9.031872,-4.189248,1.802556,0.893952,-5.608743,-1.306258,6.355322,2.390847,-8.563955,7.050146,6.854348,0.239494,-6.778398,9.089550,-1.803958,-7.628606,-9.766988,4.791879,8.386739,-9.253261,-0.894075,-2.440422,2.155491,0.065163,-7.598188,7.989041,2.953590,0.105016,8.815952,-9.306876,-1.624914,4.267379,-3.889211,-7.321904,5.231586,6.627949,7.911882,5.553383,3.551162,-9.120164,8.188848,7.671752,3.548865,8.790644,-6.614132,-4.849592,-7.784841,4.807134,-0.656030,9.897459,7.664788,-1.872026,-2.501245,1.712652,-4.637603,-0.005875,-9.049426,-5.270188,-3.691352,-0.670429,-8.620830,3.303123,-2.051876,5.980476,5.454283,-7.903572,3.581838,3.648355,8.877972,1.153478,5.821554,3.649579,1.327310,1.176419,5.750237,-4.481800,-7.329662,1.697604,1.569737,-3.952300,9.957222,4.953958,5.596706,-6.159012,8.139945,-0.157255,2.676568,-2.561745,-2.577234,-8.424565,-4.862217,7.272162,1.200446,7.317379,9.682750,1.428701,8.914594,2.348314,8.602499,0.258062,3.066480,1.106810,5.894461,3.741628,6.735659,-2.522453,8.055222,0.014112,-6.942501,6.155889,-9.932246,-8.116417,5.986752,-9.473382,9.950176,8.156120,7.843381,-2.251223,7.264553,-1.961014,6.065230,-4.323754,-5.574126,1.865892,-0.714665,-9.484999,0.368612,-6.299870,-6.168566,-9.578040,-1.336561,-6.478599,-8.219627,8.891124,6.028094,2.741815,-9.732096,7.403307,7.459231,8.352070,4.862075,-9.523518,-3.032636,2.369357,0.426913,-9.654624,2.923175,0.781881,6.508585,2.396648,9.161663,-5.407917,-6.071625,-6.042121,-9.844479,-4.161490,-1.717476,6.307663,6.164532,0.811776,-1.640987,9.566647,8.780238,2.665707,0.275615,3.256802,9.457488,-6.368361,0.415047,6.968765,-5.957913,1.900084,-8.050552,4.925031,2.680487,-2.137974,-6.196774,4.471191,3.761930,3.634060,-5.579634,9.021632,-0.339607,0.470508,-2.942998,5.312631,-5.351162,8.601717,4.421935,4.985324,-2.991740,-8.672280,8.235262,-6.038864,0.490823,8.059929,-2.049784,9.252052,-6.127496,-0.645176,-2.685748,3.932346,-5.164041,9.508103,4.251606,-4.261255,0.842031,-2.232174,-2.882434,2.789066,-1.035349,5.339762,4.029229,3.610899,-1.144008,-0.766306,-8.804002,8.004032,3.304618,-5.089209,5.521991,-4.680610,-1.419232,8.756163,0.742572,-4.508169,8.074408,-1.265001,-8.915450,-1.110061,4.859284,3.973595,-0.675453,-5.366170,-5.121478,-3.019758,6.011984,-8.218266,-2.446153,-6.068400,-5.809843,7.400131,0.951067,-2.463874,-0.187101,-6.918908,9.499159,1.345528,-0.933621,4.727422,-7.723203,5.469212,-3.296888,8.029791,2.901472,-0.835067,-5.351649,-6.104074,2.242799,-3.263981,7.834070,3.552293,-4.395965,1.647398,-1.801737,0.777965,-8.727992,-1.478601,-2.457512,8.429668,-6.034279,3.715556,-7.844507,-1.180572,-2.683568,2.372946,1.653589,7.915707,8.054588,-7.682521,9.328500,-9.079056,-6.077290,8.623783,0.072179,7.152713,-1.774335,-5.132592,-4.332472,7.190132,9.661956,-9.291178,6.429249,8.569268,-3.737705,2.827674,0.739555,-9.816723,-4.548076,2.791071,-7.149603,7.073922,8.843285,5.323224,-1.331320,9.458968,4.287184,-2.253503,5.245894,5.241681,-9.163857,7.420117,5.926339,5.284027,3.014329,2.293907,9.270934,0.674039,-8.597364,-4.562521,1.527835,8.148900,-5.021058,7.256084,6.753954,4.106975,3.788051,9.134800,-9.086296,4.797605,2.387990,-5.411097,8.741678,-4.487612,-2.064599,7.944707,-0.029977], dtype = "float64")#candidate|9510|(864,)|const|float64
call_9509 = func_536_call(relay.reshape(const_9510.astype('float64'), [12, 9, 8]))
call_9511 = func_536_call(relay.reshape(const_9510.astype('float64'), [12, 9, 8]))
output = relay.Tuple([uop_9507,call_9509,const_9510,])
output2 = relay.Tuple([uop_9507,call_9511,const_9510,])
func_9520 = relay.Function([var_9506,], output)
mod['func_9520'] = func_9520
mod = relay.transform.InferType()(mod)
mutated_mod['func_9520'] = func_9520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9521 = relay.var("var_9521", dtype = "float32", shape = (2, 8, 7))#candidate|9521|(2, 8, 7)|var|float32
func_9520_call = mutated_mod.get_global_var('func_9520')
call_9522 = func_9520_call(var_9521)
output = call_9522
func_9523 = relay.Function([var_9521], output)
mutated_mod['func_9523'] = func_9523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_9566 = func_7788_call()
call_9567 = func_7788_call()
func_783_call = mod.get_global_var('func_783')
func_786_call = mutated_mod.get_global_var('func_786')
const_9574 = relay.const([6,10,-10,5,-7,8,5,-5,8,-6,9,-2,2,-5,2,-8,-10,8,-1,9,3,-4,-3,-3,5,1,-9,-5,7,-8,3,-7,-4,-7,10,-3,-5,5,-5,9,6,-4,-1,9,-8,-4,3,-8,-8,10,-10,3,1,3,6,6,10,-8,10,8,4,-10,5,2,4,-1,6,-2,-4,2,9,-2,9,-1,-7,8,-2,8,8,-1,1,-1,-8,1,9,9,-1,-8,-1,9,7,9,6,9,7,-8,-3,-5,-1,-2,2,-10,-4,-3,-7,-3,2,6,-1,-3,8,-7,2,4,10,6,1,7,2,10,-4,6,7,5,-8,8,-2,6,9,-7,-8,-3,9,-2,-9,2,5,1,-9,-2,7,-10,-7,4,6,4,-4,-1,-6,6,7,-3,8,-6,2,-2,10,-9,10,-2,5,-10,-5,-4,6,-8,-1,-7,7,-4,5,-10,-1,3,-2,-8,1,6,9,-6,-1,9,-7,1,-2,-3,-4,-4,-1,6,10,-10,10,-8,9,3,10,2,-10,3,9,-9,-10,7,7,-7,-5,-1,-5,3,3,-4,10,4,10,-2,-3,3,3,7,1,-1,10,-1,-1,1,-2,10,-4,4,10,-4,-8,-8,-4,4,-8,-4,-7,5,1,3,-4,9,-5,-1,-10,10,1,10,-5,-5,-9,1,-5,-5,6,-4,-9,6,6,9,-4,4,10,-5,10,8,-8,-9,-9,3,-10,-4,10,1,1,1,-2,3,1,-9,-7,-2,7,-1,-4,10,3,-3,7,-8,5,-4,-6,-10,-4,-8,5,-7,3,-9,-2,3,4,-8,-9,7,-8,4,7,-9,-3,3,10,2,-6,2,-7,-3,10,-10,-10,6,10,-1,4,-10,-10,-6,-3,-4,7,-6,1,-5,-3,-4,4,2,-8,10,5,-8,3,3,-10,4,3,2,-3,8,4,10,10,1,-5,1,-3,2,2,-1,-4,-10,6,2,-10,5,2,1,7,1,5,1,10,-3,9,-5,-10,10,8,5,-4,-2,-6,-10,5,5,3,7,9,6,-5,-1,-5,-10,4,-10,6,5,-7,4,-8,3,7,7,-1,4,-5,10,7,-4,3,-9,8,-10,-9,-6,-7,10,-10,-10,1,6,10,-5,-3,-5,-5,-7,8,-7,-4,-6,3,-5,-3,3,-8,10,-4,-4,-6,-5,-3,5,10,10,6,-4,-10,-3,3,-6,4,8,1,-6,1,9,4,7,5,-7,-1,-9,10,-5,9,-4,9,2,6,-8,-9,-2,8,-4,-5,3,2,9,5,4], dtype = "uint16")#candidate|9574|(484,)|const|uint16
call_9573 = func_783_call(relay.reshape(const_9574.astype('uint16'), [11, 11, 4]))
call_9575 = func_783_call(relay.reshape(const_9574.astype('uint16'), [11, 11, 4]))
bop_9586 = relay.less(call_9573.astype('bool'), relay.reshape(const_9574.astype('bool'), relay.shape_of(call_9573))) # shape=(11, 11, 4)
bop_9589 = relay.less(call_9575.astype('bool'), relay.reshape(const_9574.astype('bool'), relay.shape_of(call_9575))) # shape=(11, 11, 4)
uop_9590 = relay.cosh(bop_9586.astype('float64')) # shape=(11, 11, 4)
uop_9592 = relay.cosh(bop_9589.astype('float64')) # shape=(11, 11, 4)
func_9091_call = mod.get_global_var('func_9091')
func_9092_call = mutated_mod.get_global_var('func_9092')
call_9597 = func_9091_call()
call_9598 = func_9091_call()
output = relay.Tuple([call_9566,uop_9590,call_9597,])
output2 = relay.Tuple([call_9567,uop_9592,call_9598,])
func_9604 = relay.Function([], output)
mod['func_9604'] = func_9604
mod = relay.transform.InferType()(mod)
mutated_mod['func_9604'] = func_9604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9604_call = mutated_mod.get_global_var('func_9604')
call_9605 = func_9604_call()
output = call_9605
func_9606 = relay.Function([], output)
mutated_mod['func_9606'] = func_9606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mod.get_global_var('func_7871')
func_7873_call = mutated_mod.get_global_var('func_7873')
call_9645 = relay.TupleGetItem(func_7871_call(), 0)
call_9646 = relay.TupleGetItem(func_7873_call(), 0)
var_9647 = relay.var("var_9647", dtype = "bool", shape = (6, 14, 16))#candidate|9647|(6, 14, 16)|var|bool
bop_9648 = relay.less_equal(call_9645.astype('bool'), relay.reshape(var_9647.astype('bool'), relay.shape_of(call_9645))) # shape=(6, 14, 16)
bop_9651 = relay.less_equal(call_9646.astype('bool'), relay.reshape(var_9647.astype('bool'), relay.shape_of(call_9646))) # shape=(6, 14, 16)
func_9072_call = mod.get_global_var('func_9072')
func_9074_call = mutated_mod.get_global_var('func_9074')
call_9656 = relay.TupleGetItem(func_9072_call(), 0)
call_9657 = relay.TupleGetItem(func_9074_call(), 0)
func_8544_call = mod.get_global_var('func_8544')
func_8547_call = mutated_mod.get_global_var('func_8547')
const_9664 = relay.const([-5.895546,5.691833,-7.320426,-2.918158,-8.271347,-4.172319,4.913929,5.978205,8.633223,3.039786,4.464066,-8.249212,0.328609,5.059425,-1.459375,6.481074,4.576031,-9.161781,7.145446,3.927001,6.293352,-4.746216,9.177943,-8.080102,2.033881,2.608447,-2.875952,-9.689748,6.795621,-4.717304,-0.142688,-2.173394,1.294718,5.636355,6.720182,-7.861207,-3.060905,-1.146938,3.969554,-7.430843,-1.579748,7.909576,-0.805661,-8.015352,8.964714,8.733857,-5.109128,-7.556379,-8.971694,4.294128,-0.444768,-7.126413,-6.776027,8.761636,-5.463992,0.782879,0.359712,5.711563,-1.966054,2.480565,-5.498547,5.457862,3.755642,-5.787352,9.606982,1.677333,-4.458929,5.790178,-6.598024,-8.641052,-7.756142,5.555643,-1.734882,0.328187,5.235740,0.083347,-5.409717,-6.841914,-1.502982,7.701028,-0.008572,9.118674,5.546884,-4.722821,2.934172,-5.280901,-6.449564,7.637850,-3.069755,7.700807,-9.526884,6.417565,1.233404,-1.534838,6.361966,4.862425,-1.871891,-6.611086,8.822129,-6.821512,3.708746,3.789269,-5.778041,-1.604613,8.391848,-2.339912,-0.280976,-2.291378,-1.912778,9.239154,1.643519,5.922238,-9.760094,0.279558,-6.633815,-7.514053,-0.758753,8.222191,4.475890,7.373467,3.122107,-4.810575,8.821759,1.777475,2.200679,3.442063,-1.348615,-0.115413,-6.681726,-0.749489,4.143738,-7.645818,-0.317736,2.609423,-5.708518,1.202118,-1.870224,7.918417,-7.559636,6.801333,-1.958161,-4.075502,-3.272726,8.928539,-5.482593,1.783170,-2.447253,1.377183,-2.741124,-2.720664,9.699500,-1.573961,6.138802,-4.668601,6.047761,8.290857,-9.284070,-5.623231,1.247439,-8.168715,7.076238,6.970780,6.715537,7.853035,3.850741,-5.635567,2.345923,0.466538,2.861054,-7.795907,3.365782,-1.258080,-1.544559,-2.766011,-6.808289,3.122483,1.926995,7.504540,-8.780231,-1.321783,3.786553,-9.830330,1.412498,5.763562,7.708488,0.226959,-7.541168,9.693103,-9.306800,-5.298951,-5.646780,0.283007,-0.018391,-8.468660,1.424765,3.640471,-5.663978,5.159575,6.012882,-6.839961,-6.279336,5.614694,9.946773,9.501285,9.155201,-9.530792,-1.658193,4.374295,-7.553292,5.578754,-6.820103,-5.621719,-9.941352,-3.219489,4.060656,5.341415], dtype = "float32")#candidate|9664|(216,)|const|float32
const_9665 = relay.const([[-8.173168],[9.531130],[-0.833911],[-6.325565],[-2.774622],[5.254025],[-3.763887],[-1.887609],[-0.114939],[-4.779808],[-2.461513],[2.369443],[-5.481737],[5.597739],[4.612664],[-2.413477],[1.641627],[-3.060660],[2.270340],[8.185759],[-6.573555],[1.922937],[-4.473938],[8.102842],[5.408830],[4.888833],[1.820739],[3.352237],[7.109547],[-6.634853],[8.744444],[2.699595],[-2.493635],[-7.345383],[-9.831294],[-0.186784],[-3.781742],[-9.869774],[6.907960],[-3.209268],[7.202419],[0.307955],[-3.152988],[-7.094266],[2.558130],[0.491289],[-7.382351],[9.440423],[-2.637689],[-4.442836],[8.707939],[7.648126],[1.074343],[-9.642936],[-3.016358],[0.618306],[-6.626915],[-6.494191],[9.573338],[5.125424],[-8.966534],[2.693690],[2.115069],[6.673874],[-3.518527],[-9.197125],[-9.740530],[1.763226],[9.302197],[6.745357],[-7.478789],[-4.713624],[4.442265],[-4.460645],[4.359744],[0.227166],[-5.388687],[-2.113885],[9.954406],[7.334837],[-5.756153],[3.725156],[-8.043253],[-3.480865],[-2.414047],[9.585754],[-4.599958],[5.917949],[-2.057898],[-2.546088],[1.644311],[1.023984],[-8.119355],[9.469041],[-1.938110],[2.379897],[6.252053],[2.491060],[9.749082],[2.409601],[4.529029],[7.370802],[-4.588273],[0.034119],[-0.200031],[8.707370],[0.770881],[3.802671],[-1.904596],[9.332297],[1.201804],[3.968335],[2.826734],[-7.096073],[-8.197131],[-7.426284],[-1.681222],[4.567199],[1.885641],[-5.078837],[-5.353004],[5.854582],[-2.338787],[1.216264],[-7.452150],[7.884601],[6.368377],[-6.908550],[-1.463987],[-0.477981],[-8.140736],[-0.180320],[-3.878270],[-0.613244],[5.583497],[5.544901],[-6.669541],[5.801040],[7.561499],[4.792854],[-3.135211],[3.672929],[-9.232035],[-9.092368],[7.344972],[8.059854],[-1.351447],[-3.086847],[-4.695496],[-9.860198],[9.833745],[2.131280],[-8.373012],[3.818373],[-8.828562],[1.706614]], dtype = "float32")#candidate|9665|(156, 1)|const|float32
call_9663 = relay.TupleGetItem(func_8544_call(relay.reshape(const_9664.astype('float32'), [216,]), relay.reshape(const_9665.astype('float32'), [156,]), ), 6)
call_9666 = relay.TupleGetItem(func_8547_call(relay.reshape(const_9664.astype('float32'), [216,]), relay.reshape(const_9665.astype('float32'), [156,]), ), 6)
output = relay.Tuple([bop_9648,call_9656,call_9663,const_9664,const_9665,])
output2 = relay.Tuple([bop_9651,call_9657,call_9666,const_9664,const_9665,])
func_9692 = relay.Function([var_9647,], output)
mod['func_9692'] = func_9692
mod = relay.transform.InferType()(mod)
var_9693 = relay.var("var_9693", dtype = "bool", shape = (6, 14, 16))#candidate|9693|(6, 14, 16)|var|bool
output = func_9692(var_9693)
func_9694 = relay.Function([var_9693], output)
mutated_mod['func_9694'] = func_9694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9072_call = mod.get_global_var('func_9072')
func_9074_call = mutated_mod.get_global_var('func_9074')
call_9759 = relay.TupleGetItem(func_9072_call(), 0)
call_9760 = relay.TupleGetItem(func_9074_call(), 0)
func_9014_call = mod.get_global_var('func_9014')
func_9020_call = mutated_mod.get_global_var('func_9020')
var_9762 = relay.var("var_9762", dtype = "float64", shape = (624,))#candidate|9762|(624,)|var|float64
var_9763 = relay.var("var_9763", dtype = "int64", shape = (8, 40))#candidate|9763|(8, 40)|var|int64
const_9764 = relay.const([-6,-9,-3,4,-5,7,-6,-3,-4,1,3,-9,4,-10,-2,-10,-10,-7,-6,-4,1,-6,-2,-9,9,8,1,1,-7,-10,3,-9,1,-8,9,9,-3,7,6,-4,8,-1,1,4,2,-7,6,-8,4,-5,7,-2,-10,8,7,-5,3,-3,5,-2,-3,-3,-7,-9,8,5,-9,6,8,-9,5,1,7,2,-5,-10,7,9,-6,-6,-4,8,10,5,9,4,-6,-1,10,7,-2,-4,-10,-3,-5,1,-10,3,4,-7,-9,-4,-7,-10,-10,4,3,9,5,2,-10,7,1,-9,7,-5,-10,-5,-3,6,9,-7,10,-8,7,6,2,-9,-5,-5,6,-1,8,-5,-9,6,1,-4,1,-9,-1,-8,-8,3,7,6,-9,-2,-2,-10,6,-1,-9,-1,7,9,-4,-1,5,-6,4,-6,8,10,4,3,5,-10,-8,-7,2,-5,4,-1,-1,-1,-10,8,4,-9,7,10,-5,6,-1,10,-8,10,-2,1,9,-8,9,-6,-5,3,7,2,2,-7,1,-6,4,-1,8,-10,3,3,-6,-5,4,-3,-9,-2,4,-6,7,-6,-8,7,-8,-3,7,-3,7,-5,5,-5,-4,-7,-6,-5,-5,-6,-7,-10,-2,-6,-1,5,6,-2,-10,7,-3,2,7,4,8,4,-7,-8,9,9,4,1,-5,-3,1,-9,-4,8,10,-3,4,-2,4,-9,6,7,3,2,-5,3,4,-2,4,-10,-2,1,-2,6,-4,1,4,-2,7,6,-8,8,2,-10,10,1,3,-7,-4,1,9,-10,1,1,-7,-2,6,8,-9,-4,-8,-10,-6,6,-1,2,8,-2,-5,10,8,8,1,-3,6,-9,4,-5,-8,2,7,-7,5,5,10,3,-7,-3,-9,-9,6,9,-9,8,-5,-7,4,7,-3,1,-10,-3,-5,5,3,-1,4,-6,-2,2,-7,-10,-3,2,1,-9,-8,-8,-7,1,7,-8,9,5,2,-1,-6,-4,7,-3,1,-9,-4,-6,-8,-2,8,-5,8,10,-7,9,-1,-10,-8,7,7,-10,1,-4,10,5,8,5,-1,-3,6,-2,4,-5,9,4,10,-8,10,1,8,8,-7,9,9,-6,4,2,-2,-2,1,-8,2,1,6,9,-9,7,3,-3,7,-7,-9,-1,-8,-3,-1,-9,5,-2,-3,6,-2,-9,10,-5,-1,-10,-1,-3,-5,7,7,8,9,4,5,-5,4,1,-6,-3,-1,9,-3,1,9,6,8,-8,6,-9,4,7,10,2,-4,-2,5,7,6,-7,-7,-2,7,-2,-4,3,6,3,-7,1,9,6,-7,-5,-2,9,-5,6,1,-8,-8,-2,-2,2,2,-3,-7,7,4,6,-4,7,5,3,1,2,2,-6,1,-6,-9,3,7,-9,-2,9,1,-7,-9,-4,-4,10,2,-2,3,-5,-4,8,10,4,-4,10,-1,2,7,-10,6,-7,-9,-1,-7,-5,-7,-2,-2,-3,-1,2,9,-4,3,9,8,-8,-7,7,7,4,-7,-3,5,7,-8,-10,4,5,-7,-7,-2,-2,-3,-2,-1,6,-3,8,6,3,-4,-3,6,8,-4,-10,9,7,1,6,-4,-1,-3,4,-6,-5,4,1,-8,5,1,10,9,5,7,-3,4,-9,-5,-6,3,-3,9,-7,10,-1,-1,-4,10,-2,1,-9,9,1,2,7,9,2,-4,5,3,5,-10,-6,-8,-7,-2,-3,-4,-9,2,-10,7,-8,-1,3,10,-9,8,-3,4,5,-6,-10,-5,-7,-4,7,-10,-2,-10,8,4,-2,-5,-1,5,-6,8,-3,5,-1,10,-2,-3,-5,9,2,-1,8,-9,4,6,-7,7,7,-4,3,-6,-6,9,-1,3,4,10,-1,-10,3,6,-10,1,-5,6,9,-2,1,4,-10,7,-2,-5,-6,-5,-2,-10,-6,-2,6,-8,9,7,3,-4,-8,-6,-6,1,-7,10,9,-4,10,5,-5,8,5,6,7,-1,-10,5,-8,-7,-5,4,6,-1,5,10,-9,8,4,-3,3,-5,-1,-9,7,5,3,-7,9,-3,4,-6,10,10,-7,4,-7,5,9,10,-9,9,-4,9,6,2,5,-4,4,-8,7,3,1,3,-3,6,-7,6,-1,9,-6,9,8,6,-7,3,8,-9,5,7,-6,1,-7,-7,1,8,-6,1,-10,6,-5,1,-6,-2,-4,-2,-3,-6,-2,-1,-10,2,-7,9,-2,-7,5,-10,-10,-1,-1,-5,-8,5,3,-2,-8,-8,-9,-4,-4,-10,9,-10,-2,3,6,8,-8,-1,-2,3,-7,-4,-10,7,-7,4,7,-5,7,-2,6,8,-6,5,1,-5,1,-5,8,-6,9,3,4,-4,-7,-5,-10,-9,1,2,3,2,-7,-4,9,1,10,5,-3,-4,-7,5,3,2,9,-5,1,6,-4,-2,2,2,-9,-5,-6,-7,1,8,8,-5,-4,-9,10,3,-10,9,-2,4,-6,6,-2,-4,-4,5,4,9,4,5,7,-10,-4,-1,-9,-10,7,-8,-8,10,-5,-8,-6,-9,6,4,1,-4,-2,1,-1,-8,-6,7,-9,10,1,4,-4,6,6,-7,4,10,-6,7,2,8,-4,-6,4,-6,3,-2,5,-8,8,6,7,-9,-8,4,4,2,9,-8,1,7,7,10,7,-3,-3,8,6,5,-4,8,1,3,-5,2,-8,-1,-8,7,10,10,-10,3,4,3,-7,5,8,-9,-2,2,-1,4,-5,3,-4,9,1,-1,-10,-2,-3,6,-6,8,-7,7,3,-7,6,-4,-5,4,2,9,-2,-2,10,8,-4,-4,-7,1,6,-8,8,-3,-2,-8,-6,10,-10,3,-10,-5,-7,5,4,6,4,2,-6,6,4,6,-1,-6,-9,-10,-9,-3,-8,2,6,1,2,3,-6,7,1,10,10,-2,4,-7,-8,1,9,-5,-1,-5,10,10,7,8,1,-9,-3,-9,4,1,-4,-8,-4,-8,-9,-8,2,-7,-7,4,-2,-8,-5,-3,1,-1,-6,10,1,-5,-4,1,4,3,-2,1,2,-2,-6,-8,-9,-6,9,5,5,-2,6,2,-3,1,-2,3,2,4,10,-9,-2,-4,-10,-3,-10,3,-10,5,-2,1,9,-9,-9,10,-5,-8,3,-8,-10,9,5,3,-9,-1,5,4,-5,-4,5,4,5,5,-4,1,5,4,-4,-5,7,1,-7,-5,-7,9,-7,2,-4,9,1,10,2,5,-2,8,-6,9,-5,6,-7,5,-5,-5,-3,7,-6,1,-2,3,-5,-1,-1,4,9,7,-2,-10,-9,-10,-9,8,5,-5,-4,-10,9,-1,4,-6,3,10,6,-6,5,7,2,-1,-3,-1,5,7,3,-6,-1,-1,-6,4,1,6,6,3,-7,3,3,6,-7,3,10,8,-2,8,2,-1,-1,-2,-8,-3,1,6,1,-1,-4,-8,-8,8,7,-9,7,5,-4,-5,10,-9,3,5,7,2,-4,8,9,1,1,9,9,5,9,-8,-7,1,2,6,6,1,-10,-2,-4,-7,3,4,-7,7,-1,4,2,2,3,-3,7,9,-4,6,-5,4,8,2,-7,1,4,7,-3,9,-6,7,6,-3,-8,-8,-4,3,-8,-7,-5,-4,6,-4,10,-6,-4,2,-10,10,-3,-3,1,-9,2,-6,4,6,1,10,-3,-2,1,9,-10,-1,7,2,-3,-7,-6,-4,2,2,-1,-9,-1,3,6,5,-1,8,2,8,-2,-2,9,-1,-5,-8,-5,1,9,-8,-6,-8,-9,6,10,-9,-2,-1,7,6,4,10,-1,7,-7,-5,-8,-9,-1,10,-1,-4,-2,-6,6,2,-5,1,-7,8,-3,-6,-5,-8,2,-10,9,-7,-8,9,-4,3,-5,-5,-3,6,-3,-7,-9,-7,-6,-5,-2,5,9,3,7,3,10,-4,-1,9,5,4,-2,7,9,-3,8,10,-2,-1,9,-10,-1,2,-9,8,6,7,5,7,6,7,-8,9,10,-10,3,-7,-8,-6,7,-10,6,-2,1,-8,-9,-1,4,8,2,-2,-10,9,6,-5,-9,-8,2,7,9,-2,-10,5,5,-7,-1,-3,-8,1,8,-8,10,-2,-6,-6,4,-3,-3,10,2,-4,-8,8,-9,-1,2,4,7,-4,4,-8,-10,-5,-9,-10,10,-8,10,6,2,6,7,7,5,9,-3,-8,-9,-3,-5,1,-8,-6,4,10,9,1,-8,-2,-10,-2,7,4,-2,4,2,7,-6,-8,4,6,6,9,-6,6,-9,6,10,-2,9,-2,-3,10,-1,-2,6,8,7,-5,8,6,-2,5,-4,-6,5,3,8,-1,-4,6,1,4,-1,1,-2,1,1,8,5,8,2,1,-9,-1,-3,4,8,2,-7,-3,1,-5,-9,10,6,3,-1,8,-5,2,-5,-4,4,-6,-10,-2,-10,3,-9,-3,-1,3,-1,4,1,7,-4,-10,-6,1,-5,7,1,5,3,5,4,-9,-2,-2,1,-10,8,-5,-8,10,-9,-7,7,10,-7,5,4,6,-7,10,8,2,2,2,-4,-1,9,3,9,-7,8,-10,4,-2,-4,8,2,10,9,-4,-6,6,-5,5,-2,-2,2,7,-8,8,1,6,8,-9,-9,8,10,-5,4,-10,-2,-9,6,2,-2,6,6,7,7,1,-1,-3,4,7,-10,2,-1,6,-6,-1,-1,-4,-6,-1,8,-1,2,9,4,1,5,3,6,-5,-10,-3,-1,7,7,-2,-1,-2,-7,-8,9,4,-5,-1,-10,3,3,8,2,-3,5,-4,8,-9,8,-7,-7,2,10,2,4,-8,3,2,5,-4,1,-7,3,6,-5,2,-4,5,10,3,-5,10,9,3,7,4,-5,-7,-9,4,5,-8,-10,2,2,-5,-6,-5,7,1,-9,-2,-8,-5,-3,4,2,-7,-5,-4,4,-4,-4,-9,10,5,-7,-4,-7,5,-7,-7,1,3,5,-2,5,-1,-6,-2,-2,-6,3,5,6,-1,9,1,-4,-5,-2,-9,-5,-7,-3,-7,-5,6,-2,9,3,2,8,3,8,4,-6,-8,-5,2,-4,-5,-4,7,3,6,6,9,9,-7,-1,8,3,-8,1,-8,-1,-3,3,-2,8,4,4,-9,7,-4,8,-6,10,-9,4,-7,10,1,-4,2,1,-7,1,-1,-3,-9,-9,-1,-6,9,10,6,-7,-5,-10,-2,-3,9,2,-6,-7,5,-7,4,-9,-5,10,-8,8,6,10,-2,-7,-9,-1,4,-8,-3,-5,10,9,-2,-9,-5,-4,7,-1,7,10,-6,10,10,-1,7,-9,2,4,-8,-6,10,-4,-4,-7,-4,8,9,-2,-10,-3,2,5,1,-10,2,2,8,10,4,6,6,5,-5,-8,1,1,-5,-9,-6,7,-9,-2,6,10,3,5,-1,7,-1,-9,6,8,-8,8,-8,-4,6,3,-1,-2,-10,-4,-1,-4,-5,5,-5,-3,-9,-9,-7,-5,10,-7,-2,5,-7,-10,-9,-1,9,8,-10,-7,3,8,-8,5,1,-8,10,-5,-2,9,1,-8,7,-4,-8,-6,8,4,-8,-3,2,4,-5,-1,5,-8,2,-7,-5,-6,4,7,7,-8,-10,-6,2,-6,-8,-4,9,-1,2,-9,-1,-2,-8,-8,10,-2,9,-5,-5,-10,8,-7,-7,-5,8,-8,9,-5,8,-4,9,9,1,9,-4,2,-2,-6,-7,10,7,4,9,-4,1,5,1,8,-7,1,-7,-3,10,-9,-2,-4,-8,-6,-8,-4,-8,10,3,3,-6,-3,-5,-3,-6,6,3,9,-8,10,7,4,-5,5,4,-1,-4,5,-9,-6,1,2,-2,7,6,-4,3,8,-4,-7,-3,-1,1,8,-4,-4,8,9,7,-10,3,-5,3,4,8,-6,-10,-10,2,-10,4,-1,9,2,8,-10,5,-9,9,-4,7,-8,6,9,-5,6,4,-2,1,-1,-4,-2,-4,-5,-8,-10,10,3,7,8,10,1,-1,-9,7,-1,-8,-1,-8,7,-9,1,6,-7,-8,5,7,2,-1,2,10,10,-8,2,9,-10,-6,-8,-6,5,10,-2,6,-6,-6,4,4,3,6,8,5,-4], dtype = "int16")#candidate|9764|(2304,)|const|int16
call_9761 = relay.TupleGetItem(func_9014_call(relay.reshape(var_9762.astype('float64'), [312, 2]), relay.reshape(var_9763.astype('int64'), [320,]), relay.reshape(const_9764.astype('int16'), [2304,]), relay.reshape(var_9762.astype('float64'), [312, 2]), ), 3)
call_9765 = relay.TupleGetItem(func_9020_call(relay.reshape(var_9762.astype('float64'), [312, 2]), relay.reshape(var_9763.astype('int64'), [320,]), relay.reshape(const_9764.astype('int16'), [2304,]), relay.reshape(var_9762.astype('float64'), [312, 2]), ), 3)
output = relay.Tuple([call_9759,call_9761,var_9762,var_9763,const_9764,])
output2 = relay.Tuple([call_9760,call_9765,var_9762,var_9763,const_9764,])
func_9766 = relay.Function([var_9762,var_9763,], output)
mod['func_9766'] = func_9766
mod = relay.transform.InferType()(mod)
mutated_mod['func_9766'] = func_9766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9766_call = mutated_mod.get_global_var('func_9766')
var_9768 = relay.var("var_9768", dtype = "float64", shape = (624,))#candidate|9768|(624,)|var|float64
var_9769 = relay.var("var_9769", dtype = "int64", shape = (8, 40))#candidate|9769|(8, 40)|var|int64
call_9767 = func_9766_call(var_9768,var_9769,)
output = call_9767
func_9770 = relay.Function([var_9768,var_9769,], output)
mutated_mod['func_9770'] = func_9770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mod.get_global_var('func_7750')
func_7751_call = mutated_mod.get_global_var('func_7751')
call_9897 = relay.TupleGetItem(func_7750_call(), 0)
call_9898 = relay.TupleGetItem(func_7751_call(), 0)
func_8849_call = mod.get_global_var('func_8849')
func_8852_call = mutated_mod.get_global_var('func_8852')
var_9902 = relay.var("var_9902", dtype = "uint8", shape = (40,))#candidate|9902|(40,)|var|uint8
call_9901 = relay.TupleGetItem(func_8849_call(relay.reshape(var_9902.astype('uint8'), [40,])), 2)
call_9903 = relay.TupleGetItem(func_8852_call(relay.reshape(var_9902.astype('uint8'), [40,])), 2)
const_9916 = relay.const([[[True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True],[False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True],[True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True],[False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False],[False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False],[False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False],[True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True],[True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False],[True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False],[True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False],[False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False],[False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True],[False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False],[False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False]],[[False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True],[True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False],[True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False],[True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True],[True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True],[False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False],[False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True],[True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False],[False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True],[True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False],[False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False],[True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True],[True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False]],[[True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True],[False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True],[True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True],[True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False],[True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False],[False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True],[False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False],[False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False],[True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True],[False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True],[False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True],[False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False],[False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False],[True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False]],[[True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False],[False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False],[False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True],[False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False],[True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False],[False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True],[False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False],[False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True],[True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False],[False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True],[True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False],[False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True],[True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False],[False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True]],[[False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True],[False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True],[False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False],[False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False],[False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True],[True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False],[False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True],[False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True],[False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False],[True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True],[True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True],[True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True],[False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False],[False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True]],[[True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True],[False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True],[False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False],[False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True],[False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False],[False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False],[True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True],[True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False],[True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False],[True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True],[False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True],[True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False],[False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False],[False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True]]], dtype = "bool")#candidate|9916|(6, 14, 16)|const|bool
bop_9917 = relay.bitwise_or(call_9897.astype('int8'), relay.reshape(const_9916.astype('int8'), relay.shape_of(call_9897))) # shape=(6, 14, 16)
bop_9920 = relay.bitwise_or(call_9898.astype('int8'), relay.reshape(const_9916.astype('int8'), relay.shape_of(call_9898))) # shape=(6, 14, 16)
func_8321_call = mod.get_global_var('func_8321')
func_8323_call = mutated_mod.get_global_var('func_8323')
call_9946 = relay.TupleGetItem(func_8321_call(), 0)
call_9947 = relay.TupleGetItem(func_8323_call(), 0)
output = relay.Tuple([call_9901,var_9902,bop_9917,call_9946,])
output2 = relay.Tuple([call_9903,var_9902,bop_9920,call_9947,])
func_9959 = relay.Function([var_9902,], output)
mod['func_9959'] = func_9959
mod = relay.transform.InferType()(mod)
mutated_mod['func_9959'] = func_9959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9960 = relay.var("var_9960", dtype = "uint8", shape = (40,))#candidate|9960|(40,)|var|uint8
func_9959_call = mutated_mod.get_global_var('func_9959')
call_9961 = func_9959_call(var_9960)
output = call_9961
func_9962 = relay.Function([var_9960], output)
mutated_mod['func_9962'] = func_9962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_9988 = func_7521_call()
call_9989 = func_7521_call()
output = relay.Tuple([call_9988,])
output2 = relay.Tuple([call_9989,])
func_9994 = relay.Function([], output)
mod['func_9994'] = func_9994
mod = relay.transform.InferType()(mod)
output = func_9994()
func_9995 = relay.Function([], output)
mutated_mod['func_9995'] = func_9995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8506_call = mod.get_global_var('func_8506')
func_8507_call = mutated_mod.get_global_var('func_8507')
call_10007 = func_8506_call()
call_10008 = func_8506_call()
func_6553_call = mod.get_global_var('func_6553')
func_6557_call = mutated_mod.get_global_var('func_6557')
const_10017 = relay.const([[3],[10],[-10],[-7],[4],[-9],[3],[4],[-7],[5],[2],[-10],[3],[-4],[5],[7],[-9],[1],[8],[6],[-2],[-4],[-6],[-10],[-7],[-4],[7],[1],[-9],[6],[2],[9],[2],[1],[-7],[-1],[1],[-5],[6],[-3],[-10],[-1],[-10],[-6],[-9],[10],[-8],[1],[8],[-10],[-10],[-6],[-8],[9],[6],[-6],[10],[3],[10],[-6],[2],[10],[-4],[1],[-4],[8],[2],[6],[-5],[-6],[8],[7],[-9],[-5],[-10],[10],[8],[3],[1],[-5],[5],[-1],[-9],[8],[2],[7],[6],[-8],[-4],[8],[4],[7],[7],[4],[-6],[-5],[2],[9],[-2],[7],[3],[-4],[10],[7],[-4],[10],[-10],[2],[9],[-5],[4],[-5],[5],[2],[-2],[-3],[-3],[-5],[-8],[-8],[5],[2],[5],[3],[1],[8],[-10],[-6],[8],[4],[6],[-7],[4],[-3],[6],[7],[-7],[9],[5],[7],[-1],[-1],[-9],[-8],[4],[-1],[1],[9],[-1],[2],[-2],[-1],[9],[3],[1],[2],[-7],[7],[-2],[7],[8],[4],[5],[7],[-4],[5],[7],[4],[-5],[4],[1],[2],[-8],[5],[3],[-4],[1],[2],[-1],[-4],[-7],[10],[-7],[4],[3],[8],[1],[-3],[-8],[-9],[-2],[1],[10],[9],[-4],[4],[-6],[-9],[-1],[2],[10],[-10],[-1],[-10],[-1],[7],[-1],[-7],[4],[2],[-3],[-1],[-3],[9],[-3],[9],[-3],[4],[2],[-3],[4],[-6],[-10],[8],[9],[4],[-8],[-10],[-7],[-6],[1],[2],[2],[10],[-10],[7],[-2],[-1],[-6],[-10],[8],[-8],[1],[9],[8],[-6],[1],[-5],[-6],[9],[9],[-9],[8],[7],[10],[-10],[3],[7],[5],[-2],[3],[2],[-10],[7],[5],[1],[3],[-6],[2],[5],[-1],[10],[-3],[10],[5],[1],[-1],[-2],[-9],[6],[-6],[-7],[-7],[-9],[8],[-2],[-1],[5],[-9],[1],[6],[-2],[4],[-10],[2],[8],[-3],[6],[-10],[10],[9],[9],[4],[5],[8],[9],[-10],[10],[4],[7],[-6],[-3],[-2],[10],[4],[-9],[3],[4],[-1],[-1],[4],[2],[-1],[-8],[-4],[1],[1],[-10],[3],[-4],[1],[-1],[-1],[-10],[-1],[-9],[10],[-9],[-6],[8],[-1],[10],[2],[-5],[-10],[-3],[10],[3],[-8],[-4],[-5],[4],[-6],[10],[9],[10],[6],[-1],[9],[-5],[-5],[-10],[-4],[-6],[8],[-9],[-5],[-2],[-7],[3],[-10],[-7],[-2],[-5],[6],[-8],[10],[-6],[2],[5],[6],[-5],[-1],[1],[1],[6],[-6],[6],[-1],[9],[-10],[-10],[6],[5],[10],[10],[-5],[6],[-3],[-6],[1],[-4],[4],[7],[10],[5],[-4],[10],[-1],[-7],[-4],[6],[1],[-7],[-10],[-9],[-4],[-10],[-4],[4],[-4],[3],[3],[5],[8],[-4],[9],[2],[-3],[6],[-2],[6],[9],[-2],[4],[6],[6],[5],[3],[-1],[2],[-3],[-7],[-2],[-6],[8],[3],[-5],[2],[5],[5],[6],[-1],[1],[1],[-6],[9],[-5],[-8],[9],[-7],[-5],[-10],[3],[8],[-10],[9],[6],[-6],[-5],[9],[9],[5],[-4],[-3],[9],[1],[10],[-4],[5],[-1],[7],[-10],[-10],[-10],[-1],[-6],[-4],[-8],[-4],[-5],[-3],[-6],[-10],[-6],[-4],[-10],[6],[4],[4],[9],[-10],[10],[8],[6],[1],[6],[8],[6],[4],[-2],[2],[-9],[-2],[2],[-6],[5],[-10],[2],[5],[1],[-1],[-9],[-2],[-8],[-1],[-7],[2],[9],[9],[-2],[-6],[1],[-2],[-3],[4],[2],[-2],[-4],[-7],[3],[5],[-9],[3],[3],[-1],[7],[1],[-3],[-4],[1],[-2],[-5],[5],[-1],[4],[-8],[-1],[5],[5],[8],[-10],[1],[-4],[8],[3],[-7],[-4],[9],[2],[10],[3],[4],[-5],[8],[5],[-5],[-10],[10],[-3],[3],[8],[10],[4],[1],[-1],[-3],[-9],[8],[6],[-5],[1],[-9],[8],[-6],[-8],[6],[-3],[-7],[-6],[-5],[9],[1],[7],[-3],[7],[-5],[10],[1],[3],[-1],[-8],[-6],[5],[-8],[-2],[-10],[-4],[-1],[2],[5],[4],[10],[-6],[-5],[10],[-2],[5],[9],[-3],[-1],[-3],[6],[-3],[8],[2],[7],[-5],[-1],[-9],[2],[4],[-10],[-1],[-7],[8],[-9],[-10],[-8],[-3],[10],[-2],[-1],[-7],[-10],[1],[-6],[7],[2],[-6],[2],[10],[7],[-8],[4],[-3],[-7],[3],[-6],[10],[-7],[-9],[6],[10],[3],[8],[10],[-7],[-9],[-1],[-6],[-7],[-3],[-1],[-3],[4],[-4],[4],[10],[7],[-9],[-9],[4],[-5],[-2],[-3],[-3],[3],[3],[5],[-7],[-7],[-4],[10],[-4],[-7],[3],[-2],[-3],[7],[3],[8],[-2],[-2],[-7],[2],[-7],[-6],[9],[-5],[4],[-4],[10],[-1],[2],[2],[7],[3],[-3],[6],[-1],[-7],[-9],[-9],[10],[9],[-8],[10],[-10],[-4],[-8],[-10],[-6],[-8],[-10],[-10],[-5],[9],[-9],[-10],[4],[2],[4],[-1],[2],[9],[-2],[7],[-5],[-9],[-9],[4],[-8],[-8],[3],[6],[9],[9],[-10],[10],[-8],[2],[-9],[9],[3],[-7],[-1],[-8],[7],[-5],[-4],[-8],[-1],[-6],[9],[-10],[4],[-8],[10],[7],[9],[8],[8],[-8],[10],[3],[-8],[-6],[-10],[-7],[8],[-8],[1],[5],[5],[-5],[-9],[-4],[-6],[10],[-8],[1],[8],[5],[2],[6],[1],[-4],[2],[-2],[-3],[-3],[9],[-7],[-4],[3],[4],[7],[3],[-7],[-4],[-9],[-1],[-7],[-10],[3],[-9],[6],[-6],[5],[2],[1],[3],[-7],[2],[3],[8],[-2],[3],[-1],[-2],[8],[1],[-9],[7],[-8],[-1],[-2],[-8],[1],[2],[5],[8],[-1],[9],[-5],[6],[-2],[7],[7],[-5],[-2],[5],[1],[4],[1],[-7],[-8],[-6],[-7],[-10],[-7],[10],[-7],[-3],[3],[-9],[-4],[-9],[-8],[-8],[1],[-7],[-2],[7],[-1],[-6],[5],[-8],[-2],[-7],[8],[-10],[-10],[9],[3],[7],[5],[-2],[-1],[10],[8],[-10],[1],[5],[10],[-8],[8],[3],[8],[6],[-3],[7],[8],[-9],[-10],[1],[-5],[1],[9],[-1],[6],[7],[9],[1],[-6],[-1],[1],[9],[9],[8],[-4],[-9],[10],[-7],[6],[7],[-7],[-5],[8],[4],[-5],[3],[4],[5],[7],[-7],[4],[2],[-6],[2],[6],[5],[6],[8],[7],[6],[-10],[8],[-10],[-1],[10],[-9],[-4],[8],[-9],[3],[10],[9],[-7],[7],[-10],[8],[3],[-5],[-2],[-9],[-4],[5],[-1],[-7],[3],[-8],[-5],[8],[3],[-8],[8],[6],[-5],[-4],[9],[7],[4],[-1],[-7],[7],[-8],[3],[-1],[7],[-6],[-10],[2],[-8],[9],[4],[-7],[-1],[-7],[8],[-9],[-3],[2],[-2],[9],[-9],[-4],[-9],[-5],[7],[-9],[1],[-4],[-7],[-3],[4],[-1],[-10],[-5],[4],[-2],[6],[3],[4],[2],[-3],[-2],[7],[7],[8],[10],[-5],[-9],[2],[7],[-7],[-10],[-5],[-10],[-3],[4],[-5],[10],[-4],[-5],[-8],[-4],[-4],[8],[-8],[-1],[-4],[-2],[3],[1],[6],[2],[2],[1],[-9],[-8],[-1],[-10],[7],[10],[-4],[2],[3],[-8],[6],[2],[7],[-3],[-6],[-4],[-5],[5],[-7],[1],[-4],[-9],[4],[-6],[-5],[-3],[6],[-5],[1],[-1],[-6],[-5],[-9],[7],[5],[10],[-10],[8],[8],[1]], dtype = "int8")#candidate|10017|(1120, 1)|const|int8
const_10018 = relay.const([[-1,-10,-9,-1,-10,-6,-5,5,-10,1,-3,4,-5,-7,-10,5,-2,-6,-8,7,-1,6,-7,-8,-5,-9,-8,-2,-9,-9,1,-2,9,-7,-5,4,9,-6,1,3,2,6,4,-2,6,6,5,2,6,-10,4,-10,2,-9,-9,8,-6,-1,4,-5,-7,10,9,-6,9,-9,-10,8,-5,4,3,3,-8,-10,-10,-5,-8,-8,4,5],[2,10,2,-3,-7,1,10,-9,-10,3,6,6,-2,4,-8,3,4,1,3,5,10,-10,-1,1,8,1,3,-1,-4,4,3,-4,-3,2,-9,-6,4,1,4,7,7,9,7,-8,-4,-5,-2,-3,1,10,4,-1,1,4,-4,-1,-10,5,-10,-10,-7,-1,-3,-1,10,6,-7,-2,7,-8,-6,-3,9,6,1,2,-3,7,7,-10],[-9,-3,-1,5,-1,-8,1,-5,-9,10,9,10,-6,7,4,4,-4,-10,-4,-3,-7,3,-4,10,9,5,-5,1,-9,9,-6,7,-10,4,-1,8,-10,7,9,-7,-1,-8,5,-10,-8,10,-9,-3,-1,10,4,1,9,7,-7,-6,-5,7,-4,6,5,5,10,-5,-4,4,-5,3,-3,9,5,2,-10,9,5,5,1,8,-9,-4],[-7,5,5,5,-10,-10,10,4,1,5,1,8,1,3,8,-6,-10,-7,1,-3,-6,4,4,-7,3,1,-3,6,-4,5,8,6,-2,-3,7,-2,8,1,5,-5,10,-2,4,7,9,-1,-3,7,4,-8,5,-3,7,-2,-4,5,-2,8,-5,7,7,10,-7,-7,6,-1,7,-3,10,1,4,-9,-2,-4,2,-2,-1,10,1,8]], dtype = "int64")#candidate|10018|(4, 80)|const|int64
call_10016 = relay.TupleGetItem(func_6553_call(relay.reshape(const_10017.astype('int8'), [5, 14, 16]), relay.reshape(const_10017.astype('int8'), [5, 14, 16]), relay.reshape(const_10018.astype('int64'), [320,]), ), 3)
call_10019 = relay.TupleGetItem(func_6557_call(relay.reshape(const_10017.astype('int8'), [5, 14, 16]), relay.reshape(const_10017.astype('int8'), [5, 14, 16]), relay.reshape(const_10018.astype('int64'), [320,]), ), 3)
func_5664_call = mod.get_global_var('func_5664')
func_5666_call = mutated_mod.get_global_var('func_5666')
var_10022 = relay.var("var_10022", dtype = "int64", shape = (99, 3))#candidate|10022|(99, 3)|var|int64
call_10021 = func_5664_call(relay.reshape(var_10022.astype('int64'), [9, 11, 3]))
call_10023 = func_5664_call(relay.reshape(var_10022.astype('int64'), [9, 11, 3]))
bop_10026 = relay.multiply(const_10018.astype('int8'), relay.reshape(call_10016.astype('int8'), relay.shape_of(const_10018))) # shape=(4, 80)
bop_10029 = relay.multiply(const_10018.astype('int8'), relay.reshape(call_10019.astype('int8'), relay.shape_of(const_10018))) # shape=(4, 80)
output = relay.Tuple([call_10007,const_10017,call_10021,var_10022,bop_10026,])
output2 = relay.Tuple([call_10008,const_10017,call_10023,var_10022,bop_10029,])
F = relay.Function([var_10022,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10022,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

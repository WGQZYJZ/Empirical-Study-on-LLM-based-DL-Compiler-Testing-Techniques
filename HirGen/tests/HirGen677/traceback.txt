==========mod==========
#[version = "0.0.5"]
def @func_9216() -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32]) {
  %0 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %1 = @func_8873() /* ty=(Tensor[(112), float32],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_11417(%var_11393: Tensor[(112), float32], %var_11394: Tensor[(1, 588), int64]) -> (uint64, Tensor[(336), uint64], Tensor[(112), float32], Tensor[(1, 588), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32]) {
  %4 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
  %5 = cast(%var_11393, dtype="float32") /* ty=Tensor[(112), float32] */;
  %6 = cast(%var_11394, dtype="int64") /* ty=Tensor[(1, 588), int64] */;
  %7 = reshape(%5, newshape=[1, 7, 16]) /* ty=Tensor[(1, 7, 16), float32] */;
  %8 = reshape(%6, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %9 = @func_10045(%7, %8) /* ty=(Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) */;
  %10 = @func_9713() /* ty=(Tensor[(112), float32],) */;
  %11 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %12 = %4.2;
  %13 = %9.0;
  %14 = %10.0;
  %15 = %11.0;
  (%12, %13, %var_11393, %var_11394, %14, %15)
}

def @func_10903() -> Tensor[(?, 7, 16), float32] {
  %16 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
  %16.4
}

def @func_12740() -> (Tensor[(28), int8], Tensor[(1008), float64], Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32]) {
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %19 = reshape(%17, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %20 = reshape(%18, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %21 = @func_8004(%19, %20) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) */;
  %22 = @func_8335() /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) */;
  %23 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %24 = @func_5860() /* ty=(Tensor[(1, 7, 16), float64],) */;
  %25 = %24.0;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %27 = cosh(%26) /* ty=Tensor[(1, 7, 16), float64] */;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %29 = %21.2;
  %30 = %22.0;
  %31 = %23.0;
  %32 = log(%28) /* ty=Tensor[(1, 7, 16), float32] */;
  (%29, meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, %30, %31, %32)
}

def @func_4193() -> (Tensor[(1, 7, 16), float32],) {
  %33 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %34 = %33.0;
  (%34,)
}

def @func_6896() -> (Tensor[(1, 7, 16), float32],) {
  %35 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  (%35,)
}

def @func_5680() -> (Tensor[(1, 7, 16), float32],) {
  %36 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %37 = %36.0;
  (%37,)
}

def @func_5229() -> (Tensor[(112), float32],) {
  %38 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %39 = %38.2;
  (%39,)
}

def @func_237(%var_221: Tensor[(1, 4, 5), uint32]) -> (Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) {
  %40 = cast(%var_221, dtype="bool") /* ty=Tensor[(1, 4, 5), bool] */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 4, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 4, 5), bool] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 42), int64] */, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 42), int64] */, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
  %44 = reshape(%42, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %45 = reshape(%43, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %46 = greater(%40, %41) /* ty=Tensor[(7, 4, 5), bool] */;
  %47 = @func_123(%44, %45) /* ty=Tensor[(6, 7, 14), bool] */;
  (%46, %47, meta[relay.Constant][2] /* ty=Tensor[(14, 42), int64] */)
}

def @func_10182() -> (Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) {
  %48 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %49 = @func_9467() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) */;
  %50 = %49.1;
  %51 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %52 = %51.1;
  %53 = cast(%52, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %54 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%50, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %57 = %48.0;
  %58 = equal(%55, %56) /* ty=Tensor[(?, 7, 16), bool] */;
  %59 = @func_9790() /* ty=Tensor[(?, 7, 16), float64] */;
  (%57, %58, %59)
}

def @func_10955() -> Tensor[(6, 6, 8), int8] {
  %60 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %60.0
}

def @func_4049() -> (Tensor[(336), uint64],) {
  %61 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %62 = %61.2;
  (%62,)
}

def @func_6057() -> (Tensor[(288), int8],) {
  %63 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %64 = %63.5;
  (%64,)
}

def @func_11138() -> Tensor[(1, 7, 16), float32] {
  @func_8589() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_8523(%var_8516: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), uint64],) {
  %65 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %66 = %65.0;
  %67 = cast(%var_8516, dtype="uint64") /* ty=Tensor[(6, 6, 8), uint64] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="uint64") /* ty=Tensor[(6, 6, 8), uint64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %71 = bitwise_or(%69, %70) /* ty=Tensor[(6, 6, 8), uint64] */;
  (%71,)
}

def @func_11634(%var_11614: Tensor[(14, 42), int64]) -> (Tensor[(336), uint64], Tensor[(14, 42), float64], Tensor[(14, 42), float64]) {
  %72 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
  %73 = cast(%var_11614, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %74 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %75 = %74.3;
  %76 = cast(%var_11614, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(%75, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %80 = divide(%78, %79) /* ty=Tensor[(14, 42), float32] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %82 = %72.0;
  %83 = cosh(%73) /* ty=Tensor[(14, 42), float64] */;
  %84 = acos(%81) /* ty=Tensor[(14, 42), float64] */;
  (%82, %83, %84)
}

def @func_11808() -> Tensor[(1, 7, 16), float32] {
  @func_6560() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_12358() -> (Tensor[(6, 6, 8), float32],) {
  %85 = @func_6449() /* ty=(Tensor[(6, 6, 8), float32],) */;
  %86 = %85.0;
  (%86,)
}

def @func_13846() -> (Tensor[(1, 7, 16), float32],) {
  %87 = @func_10582() /* ty=(Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %88 = %87.2;
  (%88,)
}

def @func_10123(%var_10099: Tensor[(72), bool]) -> (Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) {
  %89 = cast(meta[relay.Constant][3] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %90 = cast(%var_10099, dtype="bool") /* ty=Tensor[(72), bool] */;
  %91 = reshape(%89, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %92 = reshape(%90, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
  %93 = @func_1891(%91, %92) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
  %94 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
  %95 = %93.0;
  (%94, %95, meta[relay.Constant][3] /* ty=Tensor[(336), uint64] */, %var_10099)
}

def @func_8401(%var_8371: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) {
  %96 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %98 = cast(meta[relay.Constant][5] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %99 = cast(%var_8371, dtype="int64") /* ty=Tensor[(588), int64] */;
  %100 = reshape(%97, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %101 = reshape(%98, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %102 = reshape(%99, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %103 = @func_1113(%100, %101, %102) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %104 = %103.1;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(6, 7, 14), float32] */;
  %106 = @func_6914() /* ty=Tensor[(336), uint64] */;
  %107 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %108 = %96.0;
  %109 = log(%105) /* ty=Tensor[(6, 7, 14), float32] */;
  (%106, %107, meta[relay.Constant][4] /* ty=Tensor[(112), float32] */, meta[relay.Constant][5] /* ty=Tensor[(784), uint16] */, %var_8371, %108, %109)
}

def @func_7590() -> Tensor[(?, 7, 16), int8] {
  @func_7413() /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_6225(%var_6148: Tensor[(8, 8, 6), int32], %var_6152: Tensor[(8, 8, 6), bool], %var_6216: Tensor[(588), int64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) {
  %110 = cast(%var_6148, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %111 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(8, 8, 6), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 8, 6), int32] */, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %114 = equal(%112, %113) /* ty=Tensor[(8, 8, 6), bool] */;
  %115 = cast(%var_6152, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %120 = reshape(%119, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
  %121 = cast(%var_6216, dtype="int64") /* ty=Tensor[(588), int64] */;
  %122 = reshape(%121, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %123 = @func_5454(%122) /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) */;
  %124 = power(%117, %118) /* ty=Tensor[(8, 8, 6), float64] */;
  %125 = @func_1790(%120) /* ty=Tensor[(8, 3, 12), uint16] */;
  %126 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %127 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  %128 = %123.2;
  (%124, %125, meta[relay.Constant][7] /* ty=Tensor[(3), float64] */, %126, %127, %128, %var_6216)
}

def @func_13079() -> (Tensor[(5, 7, 16), uint16],) {
  %129 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
  %132 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 7, 16), float32] */, dtype="uint16") /* ty=Tensor[(5, 7, 16), uint16] */;
  %133 = right_shift(%131, %132) /* ty=Tensor[(5, 7, 16), uint16] */;
  (%133,)
}

def @func_13713() -> (Tensor[(1, 7, 16), float64], int8, Tensor[(1, 7, 16), float32]) {
  %134 = @func_11962() /* ty=(Tensor[(6, 6, 8), int8], int8) */;
  %135 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %136 = %134.1;
  %137 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  (%135, %136, %137)
}

def @main(%var_14039: Tensor[(6, 6, 8), int8]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), bool]) {
  %138 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %139 = @func_13506() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) */;
  %140 = %139.1;
  %141 = cast(%var_14039, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%140, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = %138.0;
  %146 = greater_equal(%143, %144) /* ty=Tensor[(6, 6, 8), bool] */;
  (%145, %146)
}

def @func_4990() -> Tensor[(336), uint64] {
  %147 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %147.0
}

def @func_4269(%var_4248: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) {
  %148 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %149 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %150 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %151 = reshape(%149, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %152 = reshape(%150, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %153 = %148.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %155 = cast(meta[relay.Constant][9] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %156 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %157 = reshape(%154, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %158 = reshape(%155, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %159 = reshape(%156, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %160 = @func_1113(%157, %158, %159) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %161 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %162 = @func_123(%151, %152) /* ty=Tensor[(6, 7, 14), bool] */;
  %163 = %160.3;
  %164 = %161.5;
  (%153, %162, %var_4248, %163, meta[relay.Constant][9] /* ty=Tensor[(784), uint16] */, %164)
}

def @func_11523() -> Tensor[(1, 7, 16), float32] {
  @func_8589() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_11200() -> (Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) {
  %165 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %166 = %165.0;
  %167 = cast(%166, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %168 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %169 = cast(meta[relay.Constant][11] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %170 = reshape(%168, newshape=[]) /* ty=int8 */;
  %171 = reshape(%169, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %172 = @func_5573(%170, %171) /* ty=(Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) */;
  %173 = sinh(%167) /* ty=Tensor[(6, 6, 8), float32] */;
  %174 = %172.1;
  (%173, %174, meta[relay.Constant][10] /* ty=int8 */, meta[relay.Constant][11] /* ty=Tensor[(28), int8] */)
}

def @func_7183(%var_7165: Tensor[(156), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], bool, Tensor[(156), bool], Tensor[(1, 7, 16), float32]) {
  %175 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %176 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %177 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %178 = cast(%var_7165, dtype="bool") /* ty=Tensor[(156), bool] */;
  %179 = reshape(%177, newshape=[]) /* ty=bool */;
  %180 = reshape(%178, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
  %181 = @func_6639(%179, %180) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
  %182 = @func_4704() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %183 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
  %184 = %175.0;
  %185 = %176.0;
  %186 = %181.1;
  %187 = %182.0;
  (%183, %184, %185, %186, False /* ty=bool */, %var_7165, %187)
}

def @func_10762() -> (Tensor[(336), uint64],) {
  %188 = @func_4990() /* ty=Tensor[(336), uint64] */;
  (%188,)
}

def @func_3955() -> (Tensor[(1, 7, 16), float32],) {
  %189 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
  (%189,)
}

def @func_8118(%var_8110: Tensor[(784), uint16], %var_8111: Tensor[(588), int64]) -> (Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
  %190 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(660), uint16] */, dtype="uint16") /* ty=Tensor[(660), uint16] */;
  %192 = cast(%var_8110, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %193 = cast(%var_8111, dtype="int64") /* ty=Tensor[(588), int64] */;
  %194 = reshape(%191, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
  %195 = reshape(%192, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
  %196 = reshape(%193, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %197 = @func_4510(%194, %195, %196) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
  %198 = %190.3;
  %199 = %197.5;
  (%198, %199, meta[relay.Constant][12] /* ty=Tensor[(660), uint16] */, %var_8110, %var_8111)
}

def @func_4510(%var_4464: Tensor[(11, 10, 6), uint16], %var_4505: Tensor[(392, 2), uint16], %var_4506: Tensor[(588), int64]) -> (Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) {
  %200 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(11, 10, 6), uint16] */;
  %201 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 10, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 10, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 6), uint16] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %204 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %205 = cast(%var_4505, dtype="uint16") /* ty=Tensor[(392, 2), uint16] */;
  %206 = cast(%var_4506, dtype="int64") /* ty=Tensor[(588), int64] */;
  %207 = reshape(%205, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %208 = reshape(%206, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %209 = @func_168(%207, %208) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %210 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %211 = maximum(%202, %203) /* ty=Tensor[(11, 10, 6), uint16] */;
  %212 = %204.0;
  %213 = %209.4;
  %214 = %210.3;
  (%211, %212, %213, %var_4505, %var_4506, %214)
}

def @func_11892() -> Tensor[(1, 7, 16), float32] {
  %215 = @func_9216() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(112), float32]) */;
  %215.0
}

def @func_5171() -> (Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) {
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %218 = cast(meta[relay.Constant][16] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %219 = reshape(%216, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %220 = reshape(%217, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %221 = reshape(%218, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %222 = @func_1113(%219, %220, %221) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %223 = @func_5054() /* ty=(uint64,) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="bool") /* ty=bool */;
  %226 = cast(meta[relay.Constant][16] /* ty=Tensor[(588), int64] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %227 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %228 = %222.5;
  %229 = greater_equal(%225, %226) /* ty=Tensor[(588), bool] */;
  %230 = @func_4990() /* ty=Tensor[(336), uint64] */;
  (%227, %228, meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, meta[relay.Constant][15] /* ty=Tensor[(784), uint16] */, %229, %230)
}

def @func_4752(%var_4719: Tensor[(1, 336), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) {
  %231 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %232 = cast(%var_4719, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %233 = cast(meta[relay.Constant][17] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %234 = reshape(%232, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %235 = reshape(%233, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %236 = @func_4325(%234, %235) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %237 = %231.0;
  %238 = %236.0;
  (%237, %238, %var_4719, meta[relay.Constant][17] /* ty=Tensor[(588), int64] */)
}

def @func_12249() -> Tensor[(?, 7, 16), int8] {
  %239 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
  %240 = @func_9713() /* ty=(Tensor[(112), float32],) */;
  %241 = %240.0;
  %242 = cast(%241, dtype="int8") /* ty=Tensor[(112), int8] */;
  %243 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%239, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%244, %245) /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_13164() -> (Tensor[(1, 7, 16), float32], Tensor[(72), bool], Tensor[(72), bool]) {
  %246 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %247 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %248 = reshape(%247, newshape=[72]) /* ty=Tensor[(72), bool] */;
  %249 = @func_10123(%248) /* ty=(Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) */;
  %250 = %246.0;
  %251 = %249.3;
  (%250, %251, meta[relay.Constant][18] /* ty=Tensor[(72), bool] */)
}

def @func_12594() -> Tensor[(336), uint64] {
  %252 = @func_8033() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %252.1
}

def @func_13350(%var_13346: Tensor[(588), int64]) -> (Tensor[(405), uint8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
  %253 = @func_12822() /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %255 = cast(%var_13346, dtype="int64") /* ty=Tensor[(588), int64] */;
  %256 = reshape(%254, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %257 = reshape(%255, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %258 = @func_168(%256, %257) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %259 = %253.3;
  %260 = %258.0;
  (%259, %260, meta[relay.Constant][19] /* ty=Tensor[(784), uint16] */, %var_13346)
}

def @func_6030(%var_6013: Tensor[(28), int8], %var_6014: Tensor[(448), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) {
  %261 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %262 = cast(meta[relay.Constant][20] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %263 = cast(%var_6013, dtype="int8") /* ty=Tensor[(28), int8] */;
  %264 = cast(%var_6014, dtype="float64") /* ty=Tensor[(448), float64] */;
  %265 = reshape(%262, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float64] */;
  %266 = reshape(%263, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %267 = reshape(%264, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %268 = @func_5525(%265, %266, %267) /* ty=(Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) */;
  %269 = %261.0;
  %270 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %271 = %268.2;
  (%269, %270, %271, meta[relay.Constant][20] /* ty=Tensor[(1008), float64] */, %var_6013, %var_6014)
}

def @func_8165(%var_8155: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float32], Tensor[(1, 336), float32], Tensor[(336), float32], Tensor[(?, 7, 16), int8]) {
  %272 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %273 = cast(%var_8155, dtype="float32") /* ty=Tensor[(336), float32] */;
  %274 = reshape(%273, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
  %275 = @func_4752(%274) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) */;
  %276 = @func_7788() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) */;
  %277 = %272.0;
  %278 = %275.2;
  %279 = %276.0;
  (%277, %278, %var_8155, %279)
}

def @func_13333(%var_13255: int64, %var_13256: Tensor[(15, 8, 13), int64]) -> (Tensor[(15, 8, 13), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32], Tensor[(288), int8], Tensor[(15, 8, 13), bool], Tensor[(336), uint64], Tensor[(336), float32]) {
  %280 = cast(%var_13255, dtype="int64") /* ty=int64 */;
  %281 = cast(%var_13256, dtype="int64") /* ty=Tensor[(15, 8, 13), int64] */;
  %282 = @func_9713() /* ty=(Tensor[(112), float32],) */;
  %283 = @func_6057() /* ty=(Tensor[(288), int8],) */;
  %284 = cast(%var_13256, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
  %285 = cast(%var_13255, dtype="bool") /* ty=bool */;
  %286 = @func_8770() /* ty=(Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) */;
  %287 = maximum(%280, %281) /* ty=Tensor[(15, 8, 13), int64] */;
  %288 = %282.0;
  %289 = @func_9173() /* ty=Tensor[(1, 7, 16), float32] */;
  %290 = %283.0;
  %291 = logical_or(%284, %285) /* ty=Tensor[(15, 8, 13), bool] */;
  %292 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %293 = %286.2;
  (%287, %288, %289, %290, %291, %292, %293)
}

def @func_7087() -> (Tensor[(1, 7, 16), float32],) {
  %294 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %295 = %294.0;
  (%295,)
}

def @func_5119() -> Tensor[(336), uint64] {
  @func_4990() /* ty=Tensor[(336), uint64] */
}

def @func_12068(%var_12054: Tensor[(12, 3, 2), uint32], %var_12055: Tensor[(12, 3, 2), uint32]) -> (Tensor[(12, 3, 2), uint32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %296 = cast(%var_12055, dtype="uint32") /* ty=Tensor[(12, 3, 2), uint32] */;
  %297 = shape_of(%var_12054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_12054, dtype="uint32") /* ty=Tensor[(12, 3, 2), uint32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %300 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %301 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
  %302 = multiply(%298, %299) /* ty=Tensor[(12, 3, 2), uint32] */;
  %303 = %300.0;
  %304 = %301.1;
  (%302, %303, %304)
}

def @func_7053() -> (Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) {
  %305 = cast(meta[relay.Constant][21] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %306 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 448), float64] */, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
  %307 = reshape(%305, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %308 = reshape(%306, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %309 = @func_6030(%307, %308) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) */;
  %310 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %311 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
  %312 = reshape(%311, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
  %313 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
  %314 = %309.1;
  %315 = %310.1;
  %316 = @func_1790(%312) /* ty=Tensor[(8, 3, 12), uint16] */;
  (%313, %314, meta[relay.Constant][21] /* ty=Tensor[(28), int8] */, meta[relay.Constant][22] /* ty=Tensor[(1, 448), float64] */, %315, %316, meta[relay.Constant][23] /* ty=Tensor[(3, 1), float64] */)
}

def @func_4023() -> (Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
  %317 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %318 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %319 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %320 = reshape(%318, newshape=[]) /* ty=uint64 */;
  %321 = reshape(%319, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %322 = @func_1809(%320, %321) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %323 = %322.0;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %325 = cast(meta[relay.Constant][26] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %326 = reshape(%325, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %327 = @func_2430(%326) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %328 = %317.0;
  %329 = exp(%324) /* ty=Tensor[(6, 4, 14), float64] */;
  %330 = %327.0;
  (%328, meta[relay.Constant][24] /* ty=uint64 */, meta[relay.Constant][25] /* ty=Tensor[(336), uint64] */, %329, %330, meta[relay.Constant][26] /* ty=Tensor[(288), int8] */)
}

def @func_5021() -> Tensor[(6, 6, 8), int8] {
  %331 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %331.4
}

def @func_8250(%var_8209: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) {
  %332 = cast(%var_8209, dtype="float32") /* ty=Tensor[(336), float32] */;
  %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(294, 2), int64] */, dtype="int64") /* ty=Tensor[(294, 2), int64] */;
  %334 = reshape(%332, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %335 = reshape(%333, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %336 = @func_4325(%334, %335) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %337 = @func_6943() /* ty=Tensor[(?, 7, 16), float64] */;
  %338 = %336.5;
  (%337, %338, %var_8209, meta[relay.Constant][27] /* ty=Tensor[(294, 2), int64] */)
}

def @func_12311() -> (Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
  %339 = @func_8770() /* ty=(Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) */;
  %340 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %341 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %342 = reshape(%340, newshape=[]) /* ty=uint64 */;
  %343 = reshape(%341, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %344 = @func_1809(%342, %343) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %345 = %339.0;
  %346 = %344.0;
  (%345, %346, meta[relay.Constant][28] /* ty=uint64 */, meta[relay.Constant][29] /* ty=Tensor[(336), uint64] */)
}

def @func_12144(%var_12098: Tensor[(1, 9, 12), uint64], %var_12105: Tensor[(660, 1), uint16], %var_12107: Tensor[(588), int64], %var_12110: Tensor[(11, 9, 12), uint64]) -> (Tensor[(1, 9, 12), uint64], Tensor[(1, 7, 16), float32], Tensor[(660, 1), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(11, 9, 12), float64], Tensor[(2, 504), float32], Tensor[(1008), float64]) {
  %347 = cast(meta[relay.Constant][30] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %348 = cast(%var_12098, dtype="uint64") /* ty=Tensor[(1, 9, 12), uint64] */;
  %349 = cast(%var_12105, dtype="uint16") /* ty=Tensor[(660, 1), uint16] */;
  %350 = cast(meta[relay.Constant][31] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %351 = cast(%var_12107, dtype="int64") /* ty=Tensor[(588), int64] */;
  %352 = reshape(%349, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
  %353 = reshape(%350, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
  %354 = reshape(%351, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %355 = @func_4510(%352, %353, %354) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
  %356 = cast(%var_12098, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
  %357 = cast(%var_12110, dtype="float64") /* ty=Tensor[(11, 9, 12), float64] */;
  %358 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %359 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %360 = reshape(%358, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %361 = reshape(%359, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %362 = @func_8004(%360, %361) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) */;
  %363 = maximum(%347, %348) /* ty=Tensor[(1, 9, 12), uint64] */;
  %364 = %355.1;
  %365 = floor_mod(%356, %357) /* ty=Tensor[(11, 9, 12), float64] */;
  %366 = %362.6;
  (%363, %364, %var_12105, meta[relay.Constant][31] /* ty=Tensor[(784), uint16] */, %var_12107, %365, %366, meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */)
}

def @func_13981() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
  %367 = @func_10182() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) */;
  %368 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %369 = cast(meta[relay.Constant][33] /* ty=Tensor[(156), bool] */, dtype="bool") /* ty=Tensor[(156), bool] */;
  %370 = reshape(%368, newshape=[]) /* ty=bool */;
  %371 = reshape(%369, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
  %372 = @func_6639(%370, %371) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
  %373 = %367.0;
  %374 = %372.2;
  (%373, %374, False /* ty=bool */, meta[relay.Constant][33] /* ty=Tensor[(156), bool] */)
}

def @func_6328() -> (Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) {
  %375 = @func_5965() /* ty=(Tensor[(112), float32],) */;
  %376 = %375.0;
  %377 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %378 = @func_4990() /* ty=Tensor[(336), uint64] */;
  (%376, %377, %378)
}

def @func_8873() -> (Tensor[(112), float32],) {
  %379 = @func_8335() /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) */;
  %380 = %379.2;
  (%380,)
}

def @func_13795() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], uint64) {
  %381 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %382 = @func_12311() /* ty=(Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
  %383 = %381.0;
  %384 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
  %385 = %382.2;
  (%383, %384, %385)
}

def @func_6704() -> (Tensor[(6, 6, 8), int8],) {
  %386 = @func_6541() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %387 = %386.1;
  (%387,)
}

def @func_11962() -> (Tensor[(6, 6, 8), int8], int8) {
  %388 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %389 = @func_11200() /* ty=(Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) */;
  %390 = %388.0;
  %391 = %389.2;
  (%390, %391)
}

def @func_8770() -> (Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) {
  %392 = @func_6872() /* ty=(Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) */;
  %393 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %394 = reshape(%393, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %395 = @func_8250(%394) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
  %396 = %392.1;
  %397 = %395.0;
  (%396, %397, meta[relay.Constant][34] /* ty=Tensor[(336), float32] */)
}

def @func_4665() -> (Tensor[(288), int8],) {
  %398 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %399 = %398.5;
  (%399,)
}

def @func_9686() -> Tensor[(1, 7, 16), float32] {
  %400 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %400.1
}

def @func_6121(%var_6075: Tensor[(13, 2, 13), float64], %var_6089: Tensor[(784), uint16], %var_6090: Tensor[(588), int64]) -> (Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) {
  %401 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), uint16] */, dtype="uint16") /* ty=Tensor[(660), uint16] */;
  %402 = cast(%var_6089, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %403 = cast(%var_6090, dtype="int64") /* ty=Tensor[(588), int64] */;
  %404 = reshape(%401, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
  %405 = reshape(%402, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
  %406 = reshape(%403, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %407 = @func_4510(%404, %405, %406) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
  %408 = cast(meta[relay.Constant][36] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %409 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 42), uint64] */, dtype="uint64") /* ty=Tensor[(8, 42), uint64] */;
  %410 = reshape(%408, newshape=[]) /* ty=uint64 */;
  %411 = reshape(%409, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %412 = @func_1809(%410, %411) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %413 = cast(%var_6075, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %414 = acosh(%413) /* ty=Tensor[(13, 2, 13), float64] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %416 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %417 = %407.4;
  %418 = %412.0;
  %419 = log2(%415) /* ty=Tensor[(13, 2, 13), float64] */;
  %420 = %416.0;
  (%417, meta[relay.Constant][35] /* ty=Tensor[(660), uint16] */, %var_6089, %var_6090, %418, meta[relay.Constant][36] /* ty=uint64 */, meta[relay.Constant][37] /* ty=Tensor[(8, 42), uint64] */, %419, %420)
}

def @func_7413() -> Tensor[(?, 7, 16), int8] {
  %421 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %421.0
}

def @func_8478() -> Tensor[(336), uint64] {
  @func_4990() /* ty=Tensor[(336), uint64] */
}

def @func_2430(%var_2418: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), int8],) {
  %422 = cast(%var_2418, dtype="int8") /* ty=Tensor[(6, 6, 8), int8] */;
  %423 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 8), int8] */, dtype="int8") /* ty=Tensor[(6, 6, 8), int8] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %426 = minimum(%424, %425) /* ty=Tensor[(6, 6, 8), int8] */;
  (%426,)
}

def @func_5454(%var_5415: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) {
  %427 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
  %428 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
  %429 = reshape(%427, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %430 = reshape(%428, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %431 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %432 = %431.0;
  %433 = cast(%432, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %434 = erf(%433) /* ty=Tensor[(1, 7, 16), float64] */;
  %435 = cast(%432, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %436 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 7, 16), float32] */, dtype="float64") /* ty=Tensor[(15, 7, 16), float64] */;
  %437 = power(%435, %436) /* ty=Tensor[(15, 7, 16), float64] */;
  %438 = cast(%434, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %439 = cast(%437, dtype="bool") /* ty=Tensor[(15, 7, 16), bool] */;
  %440 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 32), float64] */, dtype="float64") /* ty=Tensor[(1, 32), float64] */;
  %441 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
  %442 = cast(meta[relay.Constant][41] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %443 = @func_4990() /* ty=Tensor[(336), uint64] */;
  %444 = cast(%443, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %445 = reshape(%440, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), float64] */;
  %446 = reshape(%441, newshape=[98, 6]) /* ty=Tensor[(98, 6), int64] */;
  %447 = reshape(%442, newshape=[]) /* ty=uint64 */;
  %448 = reshape(%444, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %449 = @func_3527(%445, %446, %447, %448) /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
  %450 = @func_123(%429, %430) /* ty=Tensor[(6, 7, 14), bool] */;
  %451 = greater(%438, %439) /* ty=Tensor[(15, 7, 16), bool] */;
  %452 = %449.6;
  (%443, %450, %var_5415, %451, %452, meta[relay.Constant][40] /* ty=Tensor[(1, 32), float64] */, meta[relay.Constant][41] /* ty=uint64 */)
}

def @func_7024() -> Tensor[(6, 6, 8), int8] {
  @func_5021() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_1891(%var_1879: Tensor[(336), uint64], %var_1882: Tensor[(4, 6, 3), bool]) -> (Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) {
  %453 = cast(10 /* ty=int32 */, dtype="uint64") /* ty=uint64 */;
  %454 = cast(%var_1879, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %455 = reshape(%453, newshape=[]) /* ty=uint64 */;
  %456 = reshape(%454, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %457 = @func_1809(%455, %456) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %458 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %459 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 6, 3), int32] */, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %460 = greater(%458, %459) /* ty=Tensor[(4, 6, 3), bool] */;
  %461 = cast(%var_1882, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %465 = %457.0;
  %466 = bitwise_or(%463, %464) /* ty=Tensor[(4, 6, 3), uint32] */;
  (%465, %var_1879, %466)
}

def @func_4401(%var_4366: Tensor[(5, 9, 1), uint8], %var_4367: Tensor[(5, 9, 9), uint8], %var_4377: Tensor[(112), float32], %var_4389: Tensor[(4, 8), float64], %var_4391: Tensor[(168, 2), uint64]) -> (Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) {
  %467 = cast(%var_4366, dtype="uint8") /* ty=Tensor[(5, 9, 1), uint8] */;
  %468 = cast(%var_4367, dtype="uint8") /* ty=Tensor[(5, 9, 9), uint8] */;
  %469 = cast(meta[relay.Constant][43] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %470 = reshape(%469, newshape=[20]) /* ty=Tensor[(20), uint32] */;
  %471 = @func_875(%470) /* ty=(Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) */;
  %472 = cast(%var_4389, dtype="float64") /* ty=Tensor[(4, 8), float64] */;
  %473 = %471.4;
  %474 = cast(%473, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %475 = cast(meta[relay.Constant][45] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %476 = cast(%var_4391, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
  %477 = reshape(%472, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), float64] */;
  %478 = reshape(%474, newshape=[98, 6]) /* ty=Tensor[(98, 6), int64] */;
  %479 = reshape(%475, newshape=[]) /* ty=uint64 */;
  %480 = reshape(%476, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %481 = @func_3527(%477, %478, %479, %480) /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
  %482 = cast(%var_4377, dtype="float32") /* ty=Tensor[(112), float32] */;
  %483 = cast(meta[relay.Constant][44] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %484 = cast(%473, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %485 = reshape(%482, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %486 = reshape(%483, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %487 = reshape(%484, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %488 = @func_1113(%485, %486, %487) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %489 = %488.3;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  %491 = tan(%490) /* ty=Tensor[(588, 1), float64] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  %493 = cast(meta[relay.Constant][45] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %494 = cast(%var_4391, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
  %495 = reshape(%493, newshape=[]) /* ty=uint64 */;
  %496 = reshape(%494, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %497 = @func_1809(%495, %496) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %498 = bitwise_or(%467, %468) /* ty=Tensor[(5, 9, 9), uint8] */;
  %499 = %481.6;
  %500 = acosh(%492) /* ty=Tensor[(588, 1), float64] */;
  %501 = %497.0;
  (%498, %473, meta[relay.Constant][43] /* ty=Tensor[(20), uint32] */, %var_4377, meta[relay.Constant][44] /* ty=Tensor[(784), uint16] */, %499, %var_4389, meta[relay.Constant][45] /* ty=uint64 */, %var_4391, %500, %501)
}

def @func_9542() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %502 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %503 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %504 = %502.0;
  %505 = %503.1;
  %506 = @func_6914() /* ty=Tensor[(336), uint64] */;
  (%504, %505, %506)
}

def @func_5908() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %507 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %508 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %509 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %510 = %507.0;
  %511 = %508.0;
  %512 = %509.0;
  (%510, %511, %512)
}

def @func_8695() -> (Tensor[(6, 6, 8), float32], Tensor[(?, 7, 16), float32]) {
  %513 = @func_6449() /* ty=(Tensor[(6, 6, 8), float32],) */;
  %514 = %513.0;
  %515 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
  (%514, %515)
}

def @func_168(%var_136: Tensor[(8, 7, 14), uint16], %var_151: Tensor[(588), int64]) -> (Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) {
  %516 = cast(meta[relay.Constant][46] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %517 = cast(%var_136, dtype="uint16") /* ty=Tensor[(8, 7, 14), uint16] */;
  %518 = cast(%var_136, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %519 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %520 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %521 = reshape(%519, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %522 = reshape(%520, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %523 = @func_123(%521, %522) /* ty=Tensor[(6, 7, 14), bool] */;
  %524 = cast(%523, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %525 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %526 = reshape(%524, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %527 = reshape(%525, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %528 = @func_123(%526, %527) /* ty=Tensor[(6, 7, 14), bool] */;
  %529 = cast(%528, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %530 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %531 = reshape(%529, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %532 = reshape(%530, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %533 = left_shift(%516, %517) /* ty=Tensor[(8, 7, 14), uint16] */;
  %534 = sigmoid(%518) /* ty=Tensor[(8, 7, 14), float64] */;
  %535 = @func_123(%531, %532) /* ty=Tensor[(6, 7, 14), bool] */;
  (%533, %534, %523, %var_151, %528, %535)
}

def @func_10045(%var_10023: Tensor[(1, 7, 16), float32], %var_10029: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) {
  %536 = @func_7295() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) */;
  %537 = @func_9289() /* ty=Tensor[(1, 7, 16), float32] */;
  %538 = cast(%var_10023, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %542 = cast(%var_10029, dtype="int64") /* ty=Tensor[(588), int64] */;
  %543 = reshape(%542, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %544 = @func_8401(%543) /* ty=(Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) */;
  %545 = %536.0;
  %546 = subtract(%540, %541) /* ty=Tensor[(?, 7, 16), float64] */;
  %547 = %544.1;
  %548 = @func_8478() /* ty=Tensor[(336), uint64] */;
  (%545, %546, %547, %var_10029, %548)
}

def @func_10853() -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
  %549 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %550 = @func_9289() /* ty=Tensor[(1, 7, 16), float32] */;
  %551 = %549.4;
  (%550, %551)
}

def @func_11601(%var_11579: Tensor[(1, 7, 16), float64]) -> (Tensor[(?, 7, 16), uint16], Tensor[(1, 7, 16), float32]) {
  %552 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %555 = sqrt(%554) /* ty=Tensor[(1, 7, 16), float64] */;
  %556 = cast(%var_11579, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
  %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%555, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %560 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %561 = right_shift(%558, %559) /* ty=Tensor[(?, 7, 16), uint16] */;
  %562 = %560.0;
  (%561, %562)
}

def @func_4704() -> (Tensor[(1, 7, 16), float32],) {
  %563 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %564 = %563.1;
  (%564,)
}

def @func_9029() -> Tensor[(6, 4, 14), float64] {
  %565 = @func_6756() /* ty=(Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) */;
  %565.0
}

def @func_4325(%var_4292: Tensor[(3, 7, 16), float32], %var_4322: Tensor[(588), int64]) -> (Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) {
  %566 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %567 = %566.0;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %569 = cast(%var_4292, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
  %570 = cast(meta[relay.Constant][47] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %571 = reshape(%570, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %572 = @func_2430(%571) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %573 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %574 = cast(%567, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %575 = cast(meta[relay.Constant][48] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %576 = cast(%var_4322, dtype="int64") /* ty=Tensor[(588), int64] */;
  %577 = reshape(%574, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %578 = reshape(%575, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %579 = reshape(%576, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %580 = @func_1113(%577, %578, %579) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %581 = power(%568, %569) /* ty=Tensor[(3, 7, 16), float64] */;
  %582 = %572.0;
  %583 = %573.0;
  %584 = %580.0;
  (%581, %582, meta[relay.Constant][47] /* ty=Tensor[(288), int8] */, %583, %584, meta[relay.Constant][48] /* ty=Tensor[(784), uint16] */, %var_4322)
}

def @func_9289() -> Tensor[(1, 7, 16), float32] {
  %585 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %585.0
}

def @func_8826() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %586 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %587 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
  %588 = %586.0;
  (%587, %588)
}

def @func_1113(%var_1054: Tensor[(4, 4, 7), float32], %var_1089: Tensor[(784), uint16], %var_1090: Tensor[(588, 1), int64]) -> (Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) {
  %589 = cast(%var_1054, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %590 = cast(%var_1089, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %591 = cast(%var_1090, dtype="int64") /* ty=Tensor[(588, 1), int64] */;
  %592 = reshape(%590, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %593 = reshape(%591, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %594 = @func_168(%592, %593) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %595 = cast(meta[relay.Constant][49] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %596 = reshape(%595, newshape=[20]) /* ty=Tensor[(20), uint32] */;
  %597 = @func_875(%596) /* ty=(Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) */;
  %598 = acos(%589) /* ty=Tensor[(4, 4, 7), float32] */;
  %599 = %594.4;
  %600 = %597.0;
  (%598, %599, %var_1089, %var_1090, %600, meta[relay.Constant][49] /* ty=Tensor[(20), uint32] */)
}

def @func_6560() -> Tensor[(1, 7, 16), float32] {
  %601 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %601.0
}

def @func_4931() -> (Tensor[(?, 7, 16), float64],) {
  %602 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(?, 7, 16), float32] */;
  %605 = asinh(%604) /* ty=Tensor[(?, 7, 16), float32] */;
  %606 = cast(%603, dtype="float64") /* ty=Tensor[(?, 7, 16), float64] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="float64") /* ty=Tensor[(?, 7, 16), float64] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %610 = divide(%608, %609) /* ty=Tensor[(?, 7, 16), float64] */;
  (%610,)
}

def @func_12277() -> Tensor[(1, 7, 16), float32] {
  %611 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %611.0
}

def @func_13506() -> (Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) {
  %612 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
  %613 = %612.0;
  %614 = @func_10955() /* ty=Tensor[(6, 6, 8), int8] */;
  (%613, %614)
}

def @func_13738(%var_13733: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), uint8] {
  %615 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %616 = cast(%615, dtype="uint8") /* ty=Tensor[(1, 7, 16), uint8] */;
  %617 = cast(%var_13733, dtype="uint8") /* ty=Tensor[(6, 7, 16), uint8] */;
  bitwise_xor(%616, %617) /* ty=Tensor[(6, 7, 16), uint8] */
}

def @func_6262(%var_6251: Tensor[(3, 16, 9), uint32]) -> (Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) {
  %618 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 16, 9), uint32] */, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %619 = shape_of(%var_6251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_6251, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = greater_equal(%620, %621) /* ty=Tensor[(3, 16, 9), bool] */;
  %623 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
  (%622, %623)
}

def @func_8589() -> Tensor[(1, 7, 16), float32] {
  %624 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %624.0
}

def @func_13597() -> (Tensor[(?, 7, 16), float64],) {
  %625 = @func_9790() /* ty=Tensor[(?, 7, 16), float64] */;
  (%625,)
}

def @func_5289() -> (Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) {
  %626 = @func_4665() /* ty=(Tensor[(288), int8],) */;
  %627 = @func_5054() /* ty=(uint64,) */;
  %628 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %629 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %631 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%628, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %634 = %626.0;
  %635 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %636 = %627.0;
  %637 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %638 = add(%632, %633) /* ty=Tensor[(?, 7, 16), float32] */;
  (%634, %635, %636, %637, %638)
}

def @func_10992() -> (Tensor[(14, 42), float64],) {
  %639 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %640 = %639.0;
  (%640,)
}

def @func_6914() -> Tensor[(336), uint64] {
  %641 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
  %641.1
}

def @func_3527(%var_3491: Tensor[(4, 4, 2), float64], %var_3509: Tensor[(98, 6), int64], %var_3512: uint64, %var_3513: Tensor[(336), uint64]) -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
  %642 = cast(%var_3491, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %643 = log10(%642) /* ty=Tensor[(4, 4, 2), float64] */;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %645 = log(%644) /* ty=Tensor[(4, 4, 2), float32] */;
  %646 = cast(%645, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
  %647 = shape_of(%var_3491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_3491, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = cast(%643, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %651 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%645, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %654 = cast(%var_3509, dtype="int64") /* ty=Tensor[(98, 6), int64] */;
  %655 = cast(%var_3509, dtype="int64") /* ty=Tensor[(98, 6), int64] */;
  %656 = reshape(%654, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %657 = reshape(%655, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %658 = cast(%var_3512, dtype="uint64") /* ty=uint64 */;
  %659 = cast(%var_3513, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %660 = reshape(%658, newshape=[]) /* ty=uint64 */;
  %661 = reshape(%659, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %662 = @func_1809(%660, %661) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %663 = greater(%648, %649) /* ty=Tensor[(4, 4, 2), bool] */;
  %664 = power(%652, %653) /* ty=Tensor[(4, 4, 2), float64] */;
  %665 = @func_123(%656, %657) /* ty=Tensor[(6, 7, 14), bool] */;
  %666 = %662.0;
  (%663, %664, %665, %var_3509, %666, %var_3512, %var_3513)
}

def @func_4235() -> (Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) {
  %667 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %668 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %669 = cast(%668, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
  %670 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%667, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %673 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %674 = minimum(%671, %672) /* ty=Tensor[(?, 7, 16), int8] */;
  %675 = %673.0;
  (%674, %675)
}

def @func_9404(%var_9398: Tensor[(8, 7, 16), float64]) -> (Tensor[(588), bool], Tensor[(8, 7, 16), float64]) {
  %676 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %677 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %680 = tan(%679) /* ty=Tensor[(1, 7, 16), float64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %682 = cast(%var_9398, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
  %683 = %676.4;
  %684 = mod(%681, %682) /* ty=Tensor[(8, 7, 16), float64] */;
  (%683, %684)
}

def @func_9071() -> (Tensor[(6, 6, 8), int8],) {
  %685 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  (%685,)
}

def @func_9412() -> (Tensor[(1, 7, 16), float32],) {
  %686 = @func_6541() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %687 = %686.0;
  (%687,)
}

def @func_11260(%var_11246: Tensor[(784), uint16], %var_11247: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(784), uint16], Tensor[(588), int64]) {
  %688 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %689 = cast(%var_11246, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %690 = cast(%var_11247, dtype="int64") /* ty=Tensor[(588), int64] */;
  %691 = reshape(%689, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %692 = reshape(%690, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %693 = @func_8118(%691, %692) /* ty=(Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %694 = %688.0;
  %695 = %693.4;
  (%694, %695, %var_11246, %var_11247)
}

def @func_11357() -> Tensor[(336), uint64] {
  %696 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %696.0
}

def @func_10083(%var_10080: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(384), int32], Tensor[(588), int64]) {
  %697 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %698 = cast(meta[relay.Constant][51] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %699 = cast(meta[relay.Constant][51] /* ty=Tensor[(384), int32] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %700 = cast(%var_10080, dtype="int64") /* ty=Tensor[(588), int64] */;
  %701 = reshape(%698, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), int32] */;
  %702 = reshape(%699, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), bool] */;
  %703 = reshape(%700, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %704 = @func_6225(%701, %702, %703) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) */;
  %705 = %697.0;
  %706 = @func_6914() /* ty=Tensor[(336), uint64] */;
  %707 = %704.5;
  (%705, %706, %707, meta[relay.Constant][51] /* ty=Tensor[(384), int32] */, %var_10080)
}

def @func_11040(%var_10998: Tensor[(12, 10, 9), float32], %var_11005: Tensor[(448), float64], %var_11017: Tensor[(12, 10, 9), float32]) -> (int8, Tensor[(1, 28), int8], Tensor[(448), float64], Tensor[(1, 7, 16), float32], Tensor[(12, 10, 9), float32], Tensor[(336), uint64]) {
  %708 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %709 = cast(%var_11005, dtype="float64") /* ty=Tensor[(448), float64] */;
  %710 = reshape(%708, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %711 = reshape(%709, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %712 = @func_6030(%710, %711) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) */;
  %713 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %714 = cast(%var_10998, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %715 = asin(%714) /* ty=Tensor[(12, 10, 9), float32] */;
  %716 = cast(%var_11017, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %720 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
  %721 = %712.2;
  %722 = %713.0;
  %723 = divide(%718, %719) /* ty=Tensor[(12, 10, 9), float32] */;
  %724 = %720.0;
  (%721, meta[relay.Constant][52] /* ty=Tensor[(1, 28), int8] */, %var_11005, %722, %723, %724)
}

def @func_13678(%var_13671: bool, %var_13672: Tensor[(156), bool]) -> (Tensor[(8, 3, 12), uint16], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
  %725 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %726 = cast(%var_13671, dtype="bool") /* ty=bool */;
  %727 = cast(%var_13672, dtype="bool") /* ty=Tensor[(156), bool] */;
  %728 = reshape(%726, newshape=[]) /* ty=bool */;
  %729 = reshape(%727, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
  %730 = @func_6639(%728, %729) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
  %731 = %725.5;
  %732 = %730.2;
  (%731, %732, %var_13671, %var_13672)
}

def @func_13101() -> Tensor[(6, 6, 8), int8] {
  %733 = @func_11744() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) */;
  %733.0
}

def @func_2181(%var_2139: int16, %var_2172: Tensor[(336), uint64], %var_2176: Tensor[(3), float64]) -> (Tensor[(1, 3, 9), uint64], Tensor[(1, 3, 9), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool], Tensor[(8, 3, 12), uint16], Tensor[(3), float64]) {
  %734 = cast(%var_2139, dtype="int16") /* ty=int16 */;
  %735 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 3, 9), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 9), int16] */;
  %736 = multiply(%734, %735) /* ty=Tensor[(1, 3, 9), int16] */;
  %737 = cast(%736, dtype="uint64") /* ty=Tensor[(1, 3, 9), uint64] */;
  %738 = cast(%var_2139, dtype="uint64") /* ty=uint64 */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %740 = cast(%var_2139, dtype="bool") /* ty=bool */;
  %741 = cast(%var_2172, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %742 = cast(meta[relay.Constant][54] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %743 = reshape(%741, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %744 = reshape(%742, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
  %745 = @func_1891(%743, %744) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
  %746 = cast(%var_2176, dtype="float64") /* ty=Tensor[(3), float64] */;
  %747 = reshape(%746, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
  %748 = left_shift(%737, %738) /* ty=Tensor[(1, 3, 9), uint64] */;
  %749 = equal(%739, %740) /* ty=Tensor[(1, 3, 9), bool] */;
  %750 = %745.0;
  %751 = @func_1790(%747) /* ty=Tensor[(8, 3, 12), uint16] */;
  (%748, %749, %750, %var_2172, meta[relay.Constant][54] /* ty=Tensor[(72), bool] */, %751, %var_2176)
}

def @func_5525(%var_5481: Tensor[(9, 7, 16), float64], %var_5498: Tensor[(28), int8], %var_5513: Tensor[(4, 7, 16), float64]) -> (Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) {
  %752 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="bool") /* ty=Tensor[(?, 7, 16), bool] */;
  %755 = cast(%var_5481, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
  %756 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %757 = cast(%var_5498, dtype="int8") /* ty=Tensor[(28), int8] */;
  %758 = reshape(%756, newshape=[]) /* ty=int8 */;
  %759 = reshape(%757, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
  %760 = @func_3356(%758, %759) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
  %761 = cast(%753, dtype="int16") /* ty=Tensor[(?, 7, 16), int16] */;
  %762 = cast(%var_5513, dtype="int16") /* ty=Tensor[(4, 7, 16), int16] */;
  %763 = not_equal(%754, %755) /* ty=Tensor[(9, 7, 16), bool] */;
  %764 = %760.2;
  %765 = logical_xor(%761, %762) /* ty=Tensor[(4, 7, 16), int16] */;
  (%763, %764, meta[relay.Constant][55] /* ty=int8 */, %var_5498, %765)
}

def @func_123(%var_112: Tensor[(6, 7, 14), int64], %var_113: Tensor[(6, 7, 14), int64]) -> Tensor[(6, 7, 14), bool] {
  %766 = cast(%var_113, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %767 = shape_of(%var_112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%var_112, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%768, %769) /* ty=Tensor[(6, 7, 14), bool] */
}

def @func_12848() -> (Tensor[(16, 9, 7), float32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %770 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 1, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 7), float32] */;
  %771 = cast(meta[relay.Constant][57] /* ty=Tensor[(16, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %772 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %773 = maximum(%770, %771) /* ty=Tensor[(16, 9, 7), float32] */;
  %774 = %772.0;
  %775 = @func_12594() /* ty=Tensor[(336), uint64] */;
  (%773, %774, %775)
}

def @func_12519(%var_12481: int8, %var_12495: Tensor[(14, 42), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(3, 16, 9), bool], Tensor[(432), uint32], Tensor[(6, 4, 14), uint64], Tensor[(28, 1), int8], Tensor[(14, 42), float32], Tensor[(14, 42), float64], Tensor[(3, 7, 16), float64], Tensor[(784), uint16], Tensor[(6, 6, 8), int8]) {
  %776 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
  %777 = @func_9713() /* ty=(Tensor[(112), float32],) */;
  %778 = cast(meta[relay.Constant][58] /* ty=Tensor[(432), uint32] */, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %779 = reshape(%778, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), uint32] */;
  %780 = @func_6262(%779) /* ty=(Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) */;
  %781 = cast(%var_12481, dtype="int8") /* ty=int8 */;
  %782 = cast(meta[relay.Constant][59] /* ty=Tensor[(28, 1), int8] */, dtype="int8") /* ty=Tensor[(28, 1), int8] */;
  %783 = reshape(%781, newshape=[]) /* ty=int8 */;
  %784 = reshape(%782, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
  %785 = @func_3356(%783, %784) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
  %786 = @func_10992() /* ty=(Tensor[(14, 42), float64],) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %789 = asinh(%788) /* ty=Tensor[(14, 42), float32] */;
  %790 = cast(%787, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(2), int32] */;
  %792 = cast(%789, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %794 = mod(%792, %793) /* ty=Tensor[(14, 42), float64] */;
  %795 = cast(%var_12495, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(2), int32] */;
  %797 = cast(%794, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %799 = power(%797, %798) /* ty=Tensor[(14, 42), float64] */;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %801 = cast(%789, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %802 = cast(%var_12481, dtype="float64") /* ty=float64 */;
  %803 = %785.1;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %805 = cast(%787, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
  %806 = reshape(%804, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %807 = reshape(%805, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %808 = @func_4325(%806, %807) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %809 = %808.0;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
  %811 = reshape(%810, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %812 = @func_8250(%811) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
  %813 = @func_11331() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %814 = %776.1;
  %815 = %777.0;
  %816 = %780.0;
  %817 = acosh(%800) /* ty=Tensor[(14, 42), float32] */;
  %818 = floor_mod(%801, %802) /* ty=Tensor[(14, 42), float64] */;
  %819 = %812.1;
  %820 = %813.0;
  (%814, %815, %816, meta[relay.Constant][58] /* ty=Tensor[(432), uint32] */, %803, meta[relay.Constant][59] /* ty=Tensor[(28, 1), int8] */, %817, %818, %809, %819, %820)
}

def @func_1790(%var_1757: Tensor[(1, 3, 1), float64]) -> Tensor[(8, 3, 12), uint16] {
  %821 = cast(%var_1757, dtype="float64") /* ty=Tensor[(1, 3, 1), float64] */;
  %822 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 12), float64] */;
  %823 = divide(%821, %822) /* ty=Tensor[(8, 3, 12), float64] */;
  %824 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 3, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = not_equal(%826, %827) /* ty=Tensor[(8, 3, 12), bool] */;
  %829 = cast(%828, dtype="uint16") /* ty=Tensor[(8, 3, 12), uint16] */;
  %830 = cast(%var_1757, dtype="uint16") /* ty=Tensor[(1, 3, 1), uint16] */;
  bitwise_or(%829, %830) /* ty=Tensor[(8, 3, 12), uint16] */
}

def @func_5860() -> (Tensor[(1, 7, 16), float64],) {
  %831 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  (%831,)
}

def @func_8654() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %832 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %833 = %832.0;
  %834 = @func_8478() /* ty=Tensor[(336), uint64] */;
  (%833, %834)
}

def @func_8917() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %835 = @func_8654() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %836 = @func_8478() /* ty=Tensor[(336), uint64] */;
  %837 = %835.0;
  (%836, %837)
}

def @func_9173() -> Tensor[(1, 7, 16), float32] {
  %838 = @func_8654() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %838.0
}

def @func_7788() -> (Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) {
  %839 = cast(meta[relay.Constant][61] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %840 = cast(meta[relay.Constant][61] /* ty=Tensor[(384), int32] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %841 = cast(meta[relay.Constant][62] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %842 = reshape(%839, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), int32] */;
  %843 = reshape(%840, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), bool] */;
  %844 = reshape(%841, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %845 = @func_6225(%842, %843, %844) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) */;
  %846 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %847 = cast(meta[relay.Constant][63] /* ty=Tensor[(338), float64] */, dtype="float64") /* ty=Tensor[(338), float64] */;
  %848 = cast(meta[relay.Constant][64] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %849 = cast(meta[relay.Constant][62] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %850 = reshape(%847, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), float64] */;
  %851 = reshape(%848, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %852 = reshape(%849, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %853 = @func_6121(%850, %851, %852) /* ty=(Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) */;
  %854 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
  %855 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
  %856 = %845.3;
  %857 = %846.2;
  %858 = %853.8;
  (%854, %855, %856, meta[relay.Constant][61] /* ty=Tensor[(384), int32] */, meta[relay.Constant][62] /* ty=Tensor[(588), int64] */, %857, %858, meta[relay.Constant][63] /* ty=Tensor[(338), float64] */, meta[relay.Constant][64] /* ty=Tensor[(784), uint16] */)
}

def @func_11744() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) {
  %859 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %860 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %861 = @func_6756() /* ty=(Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) */;
  %862 = %859.0;
  %863 = %860.0;
  %864 = %861.1;
  (%862, %863, %864)
}

def @func_6541() -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
  %865 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %866 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %867 = reshape(%866, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %868 = @func_2430(%867) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %869 = %865.0;
  %870 = %868.0;
  (%869, %870, meta[relay.Constant][65] /* ty=Tensor[(288), int8] */)
}

def @func_12202() -> Tensor[(336), uint64] {
  %871 = @func_10762() /* ty=(Tensor[(336), uint64],) */;
  %871.0
}

def @func_4144() -> Tensor[(1, 7, 16), float32] {
  @func_3910() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_9790() -> Tensor[(?, 7, 16), float64] {
  @func_6943() /* ty=Tensor[(?, 7, 16), float64] */
}

def @func_10582() -> (Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %872 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 12), float64] */;
  %873 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %874 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %875 = log10(%872) /* ty=Tensor[(3, 7, 12), float64] */;
  %876 = @func_7413() /* ty=Tensor[(?, 7, 16), int8] */;
  %877 = %873.0;
  %878 = %874.0;
  (%875, %876, %877, %878)
}

def @func_7511() -> (Tensor[(336), uint64],) {
  %879 = @func_7455() /* ty=(Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %880 = %879.0;
  (%880,)
}

def @func_8033() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %881 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %882 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %883 = %881.0;
  %884 = %882.0;
  (%883, %884)
}

def @func_7678(%var_7666: Tensor[(4, 6, 12), float64]) -> (Tensor[(4, 6, 12), float64], Tensor[(6, 6, 8), int8]) {
  %885 = cast(%var_7666, dtype="float64") /* ty=Tensor[(4, 6, 12), float64] */;
  %886 = atan(%885) /* ty=Tensor[(4, 6, 12), float64] */;
  %887 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  (%886, %887)
}

def @func_1809(%var_1803: uint64, %var_1804: Tensor[(6, 4, 14), uint64]) -> (Tensor[(6, 4, 14), uint64],) {
  %888 = cast(%var_1803, dtype="uint64") /* ty=uint64 */;
  %889 = cast(%var_1804, dtype="uint64") /* ty=Tensor[(6, 4, 14), uint64] */;
  %890 = subtract(%888, %889) /* ty=Tensor[(6, 4, 14), uint64] */;
  (%890,)
}

def @func_8004(%var_7977: Tensor[(2, 504), float64], %var_7985: Tensor[(2, 504), float64]) -> (Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) {
  %891 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %892 = cast(%var_7977, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %893 = cast(meta[relay.Constant][67] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %894 = cast(meta[relay.Constant][68] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %895 = reshape(%892, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float64] */;
  %896 = reshape(%893, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %897 = reshape(%894, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %898 = @func_5525(%895, %896, %897) /* ty=(Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) */;
  %899 = cast(%var_7985, dtype="bool") /* ty=Tensor[(2, 504), bool] */;
  %900 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(2), int32] */;
  %901 = cast(%var_7977, dtype="bool") /* ty=Tensor[(2, 504), bool] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %903 = cast(%var_7977, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %904 = %891.0;
  %905 = %898.3;
  %906 = logical_or(%901, %902) /* ty=Tensor[(2, 504), bool] */;
  %907 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  %908 = log(%903) /* ty=Tensor[(2, 504), float32] */;
  (%904, %905, meta[relay.Constant][67] /* ty=Tensor[(28), int8] */, meta[relay.Constant][68] /* ty=Tensor[(448), float64] */, %906, %907, %908)
}

def @func_5573(%var_5560: int8, %var_5561: Tensor[(28), int8]) -> (Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) {
  %909 = cast(%var_5560, dtype="int8") /* ty=int8 */;
  %910 = cast(%var_5561, dtype="int8") /* ty=Tensor[(28), int8] */;
  %911 = reshape(%909, newshape=[]) /* ty=int8 */;
  %912 = reshape(%910, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
  %913 = @func_3356(%911, %912) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
  %914 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %915 = %914.3;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %917 = %913.3;
  %918 = exp(%916) /* ty=Tensor[(14, 42), float32] */;
  (%917, %var_5560, %var_5561, %918)
}

def @func_7357(%var_7311: Tensor[(15, 4, 13), float32], %var_7312: Tensor[(15, 4, 13), float32]) -> (Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) {
  %919 = cast(meta[relay.Constant][69] /* ty=Tensor[(288, 1), int8] */, dtype="int8") /* ty=Tensor[(288, 1), int8] */;
  %920 = reshape(%919, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %921 = @func_2430(%920) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %922 = cast(%var_7312, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %923 = shape_of(%var_7311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%var_7311, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %926 = mod(%924, %925) /* ty=Tensor[(15, 4, 13), float32] */;
  %927 = cast(%var_7311, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%926, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %931 = %921.0;
  %932 = floor_divide(%929, %930) /* ty=Tensor[(15, 4, 13), float64] */;
  (%931, meta[relay.Constant][69] /* ty=Tensor[(288, 1), int8] */, %932)
}

def @func_11331() -> (Tensor[(6, 6, 8), int8],) {
  %933 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %934 = %933.1;
  (%934,)
}

def @func_4600() -> (Tensor[(1, 7, 16), float32],) {
  %935 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %936 = %935.0;
  (%936,)
}

def @func_10280(%var_10264: Tensor[(10, 8, 6), int64], %var_10265: Tensor[(10, 8, 6), int64]) -> (Tensor[(10, 8, 6), bool], Tensor[(1, 7, 16), float32]) {
  %937 = cast(%var_10265, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %938 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%var_10264, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %941 = greater_equal(%939, %940) /* ty=Tensor[(10, 8, 6), bool] */;
  %942 = @func_8589() /* ty=Tensor[(1, 7, 16), float32] */;
  (%941, %942)
}

def @func_9609(%var_9595: Tensor[(8, 42), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(784), uint16], Tensor[(8, 42), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8]) {
  %943 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %944 = cast(%var_9595, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
  %945 = reshape(%944, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %946 = @func_8250(%945) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
  %947 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %948 = %943.0;
  %949 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
  %950 = %946.1;
  %951 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %952 = %947.0;
  (%948, %949, %950, %var_9595, %951, %952)
}

def @func_7295() -> (Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) {
  %953 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %954 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %955 = %954.0;
  %956 = cast(meta[relay.Constant][70] /* ty=Tensor[(6, 6, 8), int8] */, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%955, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %960 = %953.0;
  %961 = less(%958, %959) /* ty=Tensor[(6, 6, 8), bool] */;
  (%960, %961)
}

def @func_10528(%var_10519: Tensor[(1, 588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), float32], Tensor[(588), float32]) {
  %962 = cast(meta[relay.Constant][71] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %963 = cast(%var_10519, dtype="int64") /* ty=Tensor[(1, 588), int64] */;
  %964 = reshape(%962, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %965 = reshape(%963, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %966 = @func_4325(%964, %965) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %967 = %966.6;
  %968 = cast(%var_10519, dtype="float32") /* ty=Tensor[(1, 588), float32] */;
  %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(1), int32] */;
  %970 = cast(%967, dtype="float32") /* ty=Tensor[(588), float32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?), float32] */;
  %972 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  %973 = floor_divide(%970, %971) /* ty=Tensor[(588), float32] */;
  (%972, meta[relay.Constant][71] /* ty=Tensor[(336), float32] */, %973)
}

def @func_5054() -> (uint64,) {
  %974 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %975 = %974.1;
  (%975,)
}

def @func_12160() -> Tensor[(6, 6, 8), int8] {
  @func_5021() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_13940() -> Tensor[(112), float32] {
  %976 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %976.2
}

def @func_10441() -> (Tensor[(1, 7, 16), float32],) {
  %977 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
  (%977,)
}

def @func_4204() -> (Tensor[(1, 7, 16), float32],) {
  %978 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %979 = %978.0;
  (%979,)
}

def @func_13581() -> (Tensor[(1, 7, 16), float32],) {
  %980 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %981 = %980.0;
  (%981,)
}

def @func_6639(%var_6563: bool, %var_6564: Tensor[(1, 13, 12), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) {
  %982 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %983 = cast(%var_6563, dtype="bool") /* ty=bool */;
  %984 = cast(%var_6564, dtype="bool") /* ty=Tensor[(1, 13, 12), bool] */;
  %985 = logical_and(%983, %984) /* ty=Tensor[(1, 13, 12), bool] */;
  %986 = cast(%985, dtype="bool") /* ty=Tensor[(1, 13, 12), bool] */;
  %987 = cast(%var_6563, dtype="bool") /* ty=bool */;
  %988 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %989 = %982.0;
  %990 = greater(%986, %987) /* ty=Tensor[(1, 13, 12), bool] */;
  %991 = %988.2;
  (%989, %990, %991)
}

def @func_6449() -> (Tensor[(6, 6, 8), float32],) {
  %992 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %993 = cast(%992, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %994 = atan(%993) /* ty=Tensor[(6, 6, 8), float32] */;
  (%994,)
}

def @func_9467() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) {
  %995 = @func_5860() /* ty=(Tensor[(1, 7, 16), float64],) */;
  %996 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %997 = %995.0;
  (%996, %997)
}

def @func_7652(%var_7606: Tensor[(8, 7, 7), float64], %var_7633: Tensor[(588), int64], %var_7641: Tensor[(588), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(288), int8], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), uint8], Tensor[(336), uint64]) {
  %998 = cast(%var_7606, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
  %999 = @func_4665() /* ty=(Tensor[(288), int8],) */;
  %1000 = @func_4704() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1001 = cast(%var_7633, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1002 = reshape(%1001, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1003 = @func_4269(%1002) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) */;
  %1004 = cast(%var_7633, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1005 = acos(%1004) /* ty=Tensor[(588), float64] */;
  %1006 = cast(%var_7641, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1008 = cast(%1005, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1010 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
  %1011 = tan(%998) /* ty=Tensor[(8, 7, 7), float64] */;
  %1012 = %999.0;
  %1013 = %1000.0;
  %1014 = %1003.2;
  %1015 = left_shift(%1008, %1009) /* ty=Tensor[(588), uint8] */;
  %1016 = %1010.1;
  (%1011, %1012, %1013, %1014, %1015, %1016)
}

def @func_4838() -> Tensor[(1, 7, 16), float64] {
  %1017 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  asin(%1018) /* ty=Tensor[(1, 7, 16), float64] */
}

def @func_3356(%var_3331: int8, %var_3332: Tensor[(1, 14, 2), int8]) -> (Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) {
  %1019 = cast(%var_3331, dtype="bool") /* ty=bool */;
  %1020 = cast(%var_3332, dtype="bool") /* ty=Tensor[(1, 14, 2), bool] */;
  %1021 = cast(meta[relay.Constant][72] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %1022 = cast(meta[relay.Constant][73] /* ty=Tensor[(6, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 12), bool] */;
  %1023 = reshape(%1021, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %1024 = reshape(%1022, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
  %1025 = @func_1891(%1023, %1024) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
  %1026 = greater(%1019, %1020) /* ty=Tensor[(1, 14, 2), bool] */;
  %1027 = %1025.0;
  (%1026, %1027, meta[relay.Constant][72] /* ty=Tensor[(336), uint64] */, meta[relay.Constant][73] /* ty=Tensor[(6, 12), bool] */)
}

def @func_7455() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %1028 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %1029 = %1028.1;
  %1030 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  (%1029, %1030)
}

def @func_12672() -> Tensor[(1, 7, 16), float32] {
  %1031 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %1031.1
}

def @func_8989(%var_8949: Tensor[(5, 14, 4), float32], %var_8984: Tensor[(784, 1), uint16]) -> (Tensor[(5, 14, 4), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(784, 1), uint16], Tensor[(588), int64]) {
  %1032 = cast(%var_8949, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %1033 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1034 = %1033.0;
  %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1036 = cast(%var_8984, dtype="uint16") /* ty=Tensor[(784, 1), uint16] */;
  %1037 = cast(meta[relay.Constant][74] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1038 = reshape(%1035, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %1039 = reshape(%1036, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %1040 = reshape(%1037, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %1041 = @func_1113(%1038, %1039, %1040) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %1042 = tan(%1032) /* ty=Tensor[(5, 14, 4), float32] */;
  %1043 = %1041.1;
  (%1042, %1034, %1043, %var_8984, meta[relay.Constant][74] /* ty=Tensor[(588), int64] */)
}

def @func_8335() -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) {
  %1044 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %1045 = cast(%1044, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %1046 = asin(%1045) /* ty=Tensor[(6, 6, 8), float64] */;
  %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %1048 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %1049 = @func_5965() /* ty=(Tensor[(112), float32],) */;
  %1050 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %1051 = sqrt(%1047) /* ty=Tensor[(6, 6, 8), float64] */;
  %1052 = %1048.0;
  %1053 = %1049.0;
  %1054 = %1050.0;
  (%1051, %1052, %1053, %1054)
}

def @func_5770() -> Tensor[(?, 7, 16), float32] {
  %1055 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %1057 = atanh(%1056) /* ty=Tensor[(1, 7, 16), float64] */;
  %1058 = cast(%1055, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1059 = shape_of(%1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%1057, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1060, %1061) /* ty=Tensor[(?, 7, 16), float32] */
}

def @func_12031(%var_12016: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), int8],) {
  %1062 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %1063 = %1062.0;
  %1064 = cast(%1063, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %1065 = cast(%var_12016, dtype="bool") /* ty=Tensor[(16, 7, 16), bool] */;
  %1066 = less(%1064, %1065) /* ty=Tensor[(16, 7, 16), bool] */;
  %1067 = cast(%1066, dtype="int8") /* ty=Tensor[(16, 7, 16), int8] */;
  %1068 = cast(%1063, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
  %1069 = logical_xor(%1067, %1068) /* ty=Tensor[(16, 7, 16), int8] */;
  (%1069,)
}

def @func_7918() -> (Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) {
  %1070 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %1071 = %1070.3;
  %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %1073 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1074 = sqrt(%1072) /* ty=Tensor[(14, 42), float64] */;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_9360() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %1076 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1077 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1078 = %1076.0;
  %1079 = %1077.0;
  (%1078, %1079)
}

def @func_6943() -> Tensor[(?, 7, 16), float64] {
  %1080 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %1080.0
}

def @func_4081() -> (Tensor[(1, 7, 16), float32],) {
  %1081 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_875(%var_872: Tensor[(20), uint32]) -> (Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) {
  %1083 = cast(meta[relay.Constant][76] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int8") /* ty=Tensor[(13, 8, 11), int8] */;
  %1084 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(meta[relay.Constant][75] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int8") /* ty=Tensor[(13, 8, 11), int8] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1087 = cast(meta[relay.Constant][77] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1088 = cast(meta[relay.Constant][78] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1089 = reshape(%1087, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %1090 = reshape(%1088, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1091 = @func_168(%1089, %1090) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %1092 = cast(%var_872, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %1093 = reshape(%1092, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), uint32] */;
  %1094 = @func_237(%1093) /* ty=(Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) */;
  %1095 = minimum(%1085, %1086) /* ty=Tensor[(13, 8, 11), int8] */;
  %1096 = %1091.0;
  %1097 = %1094.1;
  (%1095, %1096, meta[relay.Constant][77] /* ty=Tensor[(784), uint16] */, meta[relay.Constant][78] /* ty=Tensor[(588), int64] */, %1097, %var_872)
}

def @func_6872() -> (Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) {
  %1098 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %1099 = @func_6057() /* ty=(Tensor[(288), int8],) */;
  %1100 = %1099.0;
  %1101 = cast(%1100, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1102 = reshape(%1101, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %1103 = @func_2430(%1102) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %1104 = cast(meta[relay.Constant][79] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1105 = reshape(%1104, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1106 = @func_4269(%1105) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) */;
  %1107 = %1098.1;
  %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1109 = cast(meta[relay.Constant][79] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1110 = reshape(%1108, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %1111 = reshape(%1109, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1112 = @func_4325(%1110, %1111) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %1113 = %1103.0;
  %1114 = %1106.4;
  %1115 = %1112.4;
  (%1107, %1100, %1113, %1114, meta[relay.Constant][79] /* ty=Tensor[(588), int64] */, %1115)
}

def @func_6765() -> (Tensor[(1, 7, 16), float32],) {
  %1116 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1117 = %1116.0;
  (%1117,)
}

def @func_9713() -> (Tensor[(112), float32],) {
  %1118 = @func_5229() /* ty=(Tensor[(112), float32],) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_10722(%var_10712: Tensor[(780), float32], %var_10716: Tensor[(780), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(780), uint16]) {
  %1120 = @func_7788() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) */;
  %1121 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %1122 = @func_9467() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) */;
  %1123 = cast(%var_10712, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1124 = cast(%var_10712, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1125 = reshape(%1123, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %1126 = reshape(%1124, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %1127 = @func_7357(%1125, %1126) /* ty=(Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) */;
  %1128 = cast(%var_10716, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %1129 = shape_of(%var_10712, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1130 = cast(%var_10712, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1132 = %1120.6;
  %1133 = %1121.1;
  %1134 = %1122.0;
  %1135 = %1127.0;
  %1136 = multiply(%1130, %1131) /* ty=Tensor[(780), uint16] */;
  (%1132, %1133, %1134, %1135, %1136)
}

def @func_5370() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) {
  %1137 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1138 = cast(meta[relay.Constant][80] /* ty=Tensor[(10, 2), uint32] */, dtype="uint32") /* ty=Tensor[(10, 2), uint32] */;
  %1139 = reshape(%1138, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), uint32] */;
  %1140 = @func_237(%1139) /* ty=(Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) */;
  %1141 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %1142 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %1143 = %1137.0;
  %1144 = %1140.2;
  %1145 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
  (%1141, %1142, %1143, %1144, meta[relay.Constant][80] /* ty=Tensor[(10, 2), uint32] */, %1145)
}

def @func_5965() -> (Tensor[(112), float32],) {
  %1146 = @func_5229() /* ty=(Tensor[(112), float32],) */;
  %1147 = %1146.0;
  (%1147,)
}

def @func_4811() -> Tensor[(1, 7, 16), float32] {
  %1148 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1148.0
}

def @func_6756() -> (Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) {
  %1149 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %1150 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %1151 = %1149.3;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_12925() -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
  %1153 = @func_9412() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1154 = @func_10853() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(588), bool]) */;
  %1155 = %1153.0;
  %1156 = %1154.1;
  (%1155, %1156)
}

def @func_3910() -> Tensor[(1, 7, 16), float32] {
  %1157 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  acos(%1157) /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_12822() -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) {
  %1158 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
  %1159 = cast(meta[relay.Constant][82] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %1160 = cast(meta[relay.Constant][83] /* ty=Tensor[(405), uint8] */, dtype="uint8") /* ty=Tensor[(405), uint8] */;
  %1161 = cast(meta[relay.Constant][84] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1162 = cast(meta[relay.Constant][85] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %1163 = %1158.0;
  %1164 = cast(%1163, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %1165 = reshape(%1159, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint8] */;
  %1166 = reshape(%1160, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), uint8] */;
  %1167 = reshape(%1161, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %1168 = reshape(%1162, newshape=[4, 8]) /* ty=Tensor[(4, 8), float64] */;
  %1169 = reshape(%1164, newshape=[168, 2]) /* ty=Tensor[(168, 2), uint64] */;
  %1170 = @func_4401(%1165, %1166, %1167, %1168, %1169) /* ty=(Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) */;
  %1171 = %1170.1;
  (%1163, %1171, meta[relay.Constant][82] /* ty=Tensor[(45), uint8] */, meta[relay.Constant][83] /* ty=Tensor[(405), uint8] */, meta[relay.Constant][84] /* ty=Tensor[(112), float32] */, meta[relay.Constant][85] /* ty=Tensor[(32), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12251() -> Tensor[(?, 7, 16), int8] {
  @func_12249() /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_1895(%var_1893: Tensor[(336), uint64], %var_1894: Tensor[(4, 6, 3), bool]) -> (Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) {
  @func_1891(%var_1893, %var_1894) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */
}

def @func_6560() -> Tensor[(1, 7, 16), float32] {
  %0 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %0.0
}

def @func_11040(%var_10998: Tensor[(12, 10, 9), float32], %var_11005: Tensor[(448), float64], %var_11017: Tensor[(12, 10, 9), float32]) -> (int8, Tensor[(1, 28), int8], Tensor[(448), float64], Tensor[(1, 7, 16), float32], Tensor[(12, 10, 9), float32], Tensor[(336), uint64]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %2 = cast(%var_11005, dtype="float64") /* ty=Tensor[(448), float64] */;
  %3 = reshape(%1, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %4 = reshape(%2, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %5 = @func_6030(%3, %4) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) */;
  %6 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %7 = cast(%var_10998, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %8 = asin(%7) /* ty=Tensor[(12, 10, 9), float32] */;
  %9 = cast(%var_11017, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="float32") /* ty=Tensor[(12, 10, 9), float32] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %13 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
  %14 = %5.2;
  %15 = %6.0;
  %16 = divide(%11, %12) /* ty=Tensor[(12, 10, 9), float32] */;
  %17 = %13.0;
  (%14, meta[relay.Constant][0] /* ty=Tensor[(1, 28), int8] */, %var_11005, %15, %16, %17)
}

def @func_6229(%var_6226: Tensor[(8, 8, 6), int32], %var_6227: Tensor[(8, 8, 6), bool], %var_6228: Tensor[(588), int64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) {
  %37 = fn (%var_6148: Tensor[(8, 8, 6), int32], %var_6152: Tensor[(8, 8, 6), bool], %var_6216: Tensor[(588), int64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) {
    %18 = cast(%var_6148, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %19 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(8, 8, 6), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 8, 6), int32] */, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %22 = equal(%20, %21) /* ty=Tensor[(8, 8, 6), bool] */;
    %23 = cast(%var_6152, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(%22, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
    %28 = reshape(%27, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
    %29 = cast(%var_6216, dtype="int64") /* ty=Tensor[(588), int64] */;
    %30 = reshape(%29, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %31 = @func_5454(%30) /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) */;
    %32 = power(%25, %26) /* ty=Tensor[(8, 8, 6), float64] */;
    %33 = @func_1790(%28) /* ty=Tensor[(8, 3, 12), uint16] */;
    %34 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %35 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
    %36 = %31.2;
    (%32, %33, meta[relay.Constant][2] /* ty=Tensor[(3), float64] */, %34, %35, %36, %var_6216)
  };
  %37(%var_6226, %var_6227, %var_6228) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) */
}

def @func_13847() -> (Tensor[(1, 7, 16), float32],) {
  %40 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %38 = @func_10582() /* ty=(Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
    %39 = %38.2;
    (%39,)
  };
  %40() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_11138() -> Tensor[(1, 7, 16), float32] {
  @func_8589() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_10284(%var_10282: Tensor[(10, 8, 6), int64], %var_10283: Tensor[(10, 8, 6), int64]) -> (Tensor[(10, 8, 6), bool], Tensor[(1, 7, 16), float32]) {
  @func_10280(%var_10282, %var_10283) /* ty=(Tensor[(10, 8, 6), bool], Tensor[(1, 7, 16), float32]) */
}

def @func_9542() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %41 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %42 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %43 = %41.0;
  %44 = %42.1;
  %45 = @func_6914() /* ty=Tensor[(336), uint64] */;
  (%43, %44, %45)
}

def @func_13678(%var_13671: bool, %var_13672: Tensor[(156), bool]) -> (Tensor[(8, 3, 12), uint16], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
  %46 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %47 = cast(%var_13671, dtype="bool") /* ty=bool */;
  %48 = cast(%var_13672, dtype="bool") /* ty=Tensor[(156), bool] */;
  %49 = reshape(%47, newshape=[]) /* ty=bool */;
  %50 = reshape(%48, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
  %51 = @func_6639(%49, %50) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
  %52 = %46.5;
  %53 = %51.2;
  (%52, %53, %var_13671, %var_13672)
}

def @func_6873() -> (Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) {
  %72 = fn () -> (Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) {
    %54 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
    %55 = @func_6057() /* ty=(Tensor[(288), int8],) */;
    %56 = %55.0;
    %57 = cast(%56, dtype="int8") /* ty=Tensor[(288), int8] */;
    %58 = reshape(%57, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
    %59 = @func_2430(%58) /* ty=(Tensor[(6, 6, 8), int8],) */;
    %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %61 = reshape(%60, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %62 = @func_4269(%61) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) */;
    %63 = %54.1;
    %64 = cast(%63, dtype="float32") /* ty=Tensor[(336), float32] */;
    %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %66 = reshape(%64, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
    %67 = reshape(%65, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %68 = @func_4325(%66, %67) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
    %69 = %59.0;
    %70 = %62.4;
    %71 = %68.4;
    (%63, %56, %69, %70, meta[relay.Constant][3] /* ty=Tensor[(588), int64] */, %71)
  };
  %72() /* ty=(Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) */
}

def @func_8525(%var_8524: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), uint64],) {
  %80 = fn (%var_8516: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), uint64],) {
    %73 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
    %74 = %73.0;
    %75 = cast(%var_8516, dtype="uint64") /* ty=Tensor[(6, 6, 8), uint64] */;
    %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%74, dtype="uint64") /* ty=Tensor[(6, 6, 8), uint64] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %79 = bitwise_or(%77, %78) /* ty=Tensor[(6, 6, 8), uint64] */;
    (%79,)
  };
  %80(%var_8524) /* ty=(Tensor[(6, 6, 8), uint64],) */
}

def @func_4515(%var_4512: Tensor[(11, 10, 6), uint16], %var_4513: Tensor[(392, 2), uint16], %var_4514: Tensor[(588), int64]) -> (Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) {
  @func_4510(%var_4512, %var_4513, %var_4514) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */
}

def @func_4049() -> (Tensor[(336), uint64],) {
  %81 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %82 = %81.2;
  (%82,)
}

def @func_6945() -> Tensor[(?, 7, 16), float64] {
  @func_6943() /* ty=Tensor[(?, 7, 16), float64] */
}

def @func_10048(%var_10046: Tensor[(1, 7, 16), float32], %var_10047: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) {
  %96 = fn (%var_10023: Tensor[(1, 7, 16), float32], %var_10029: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) {
    %83 = @func_7295() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) */;
    %84 = @func_9289() /* ty=Tensor[(1, 7, 16), float32] */;
    %85 = cast(%var_10023, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
    %87 = cast(%84, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %89 = cast(%var_10029, dtype="int64") /* ty=Tensor[(588), int64] */;
    %90 = reshape(%89, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %91 = @func_8401(%90) /* ty=(Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) */;
    %92 = %83.0;
    %93 = subtract(%87, %88) /* ty=Tensor[(?, 7, 16), float64] */;
    %94 = %91.1;
    %95 = @func_8478() /* ty=Tensor[(336), uint64] */;
    (%92, %93, %94, %var_10029, %95)
  };
  %96(%var_10046, %var_10047) /* ty=(Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) */
}

def @func_12740() -> (Tensor[(28), int8], Tensor[(1008), float64], Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32]) {
  %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %99 = reshape(%97, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %100 = reshape(%98, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %101 = @func_8004(%99, %100) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) */;
  %102 = @func_8335() /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) */;
  %103 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %104 = @func_5860() /* ty=(Tensor[(1, 7, 16), float64],) */;
  %105 = %104.0;
  %106 = cast(%105, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %107 = cosh(%106) /* ty=Tensor[(1, 7, 16), float64] */;
  %108 = cast(%107, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %109 = %101.2;
  %110 = %102.0;
  %111 = %103.0;
  %112 = log(%108) /* ty=Tensor[(1, 7, 16), float32] */;
  (%109, meta[relay.Constant][4] /* ty=Tensor[(1008), float64] */, %110, %111, %112)
}

def @func_172(%var_170: Tensor[(8, 7, 14), uint16], %var_171: Tensor[(588), int64]) -> (Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) {
  @func_168(%var_170, %var_171) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */
}

def @func_12204() -> Tensor[(336), uint64] {
  @func_12202() /* ty=Tensor[(336), uint64] */
}

def @func_8034() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %117 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
    %113 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %114 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
    %115 = %113.0;
    %116 = %114.0;
    (%115, %116)
  };
  %117() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */
}

def @func_12594() -> Tensor[(336), uint64] {
  %118 = @func_8033() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %118.1
}

def @func_8008(%var_8006: Tensor[(2, 504), float64], %var_8007: Tensor[(2, 504), float64]) -> (Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) {
  @func_8004(%var_8006, %var_8007) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) */
}

def @func_6943() -> Tensor[(?, 7, 16), float64] {
  %119 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %119.0
}

def @func_11601(%var_11579: Tensor[(1, 7, 16), float64]) -> (Tensor[(?, 7, 16), uint16], Tensor[(1, 7, 16), float32]) {
  %120 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %121 = %120.0;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %123 = sqrt(%122) /* ty=Tensor[(1, 7, 16), float64] */;
  %124 = cast(%var_11579, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%123, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %128 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %129 = right_shift(%126, %127) /* ty=Tensor[(?, 7, 16), uint16] */;
  %130 = %128.0;
  (%129, %130)
}

def @func_5172() -> (Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) {
  %146 = fn () -> (Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) {
    %131 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %132 = cast(meta[relay.Constant][6] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
    %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %134 = reshape(%131, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
    %135 = reshape(%132, newshape=[784]) /* ty=Tensor[(784), uint16] */;
    %136 = reshape(%133, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
    %137 = @func_1113(%134, %135, %136) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
    %138 = @func_5054() /* ty=(uint64,) */;
    %139 = %138.0;
    %140 = cast(%139, dtype="bool") /* ty=bool */;
    %141 = cast(meta[relay.Constant][7] /* ty=Tensor[(588), int64] */, dtype="bool") /* ty=Tensor[(588), bool] */;
    %142 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
    %143 = %137.5;
    %144 = greater_equal(%140, %141) /* ty=Tensor[(588), bool] */;
    %145 = @func_4990() /* ty=Tensor[(336), uint64] */;
    (%142, %143, meta[relay.Constant][5] /* ty=Tensor[(112), float32] */, meta[relay.Constant][6] /* ty=Tensor[(784), uint16] */, %144, %145)
  };
  %146() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */
}

def @func_9611(%var_9610: Tensor[(8, 42), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(784), uint16], Tensor[(8, 42), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8]) {
  %157 = fn (%var_9595: Tensor[(8, 42), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(784), uint16], Tensor[(8, 42), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8]) {
    %147 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %148 = cast(%var_9595, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
    %149 = reshape(%148, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %150 = @func_8250(%149) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
    %151 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
    %152 = %147.0;
    %153 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
    %154 = %150.1;
    %155 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %156 = %151.0;
    (%152, %153, %154, %var_9595, %155, %156)
  };
  %157(%var_9610) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(784), uint16], Tensor[(8, 42), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8]) */
}

def @func_7054() -> (Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) {
  %170 = fn () -> (Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) {
    %158 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %159 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 448), float64] */, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
    %160 = reshape(%158, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %161 = reshape(%159, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %162 = @func_6030(%160, %161) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) */;
    %163 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
    %164 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
    %165 = reshape(%164, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
    %166 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
    %167 = %162.1;
    %168 = %163.1;
    %169 = @func_1790(%165) /* ty=Tensor[(8, 3, 12), uint16] */;
    (%166, %167, meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, meta[relay.Constant][9] /* ty=Tensor[(1, 448), float64] */, %168, %169, meta[relay.Constant][10] /* ty=Tensor[(3, 1), float64] */)
  };
  %170() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */
}

def @func_6125(%var_6122: Tensor[(13, 2, 13), float64], %var_6123: Tensor[(784), uint16], %var_6124: Tensor[(588), int64]) -> (Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) {
  %191 = fn (%var_6075: Tensor[(13, 2, 13), float64], %var_6089: Tensor[(784), uint16], %var_6090: Tensor[(588), int64]) -> (Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) {
    %171 = cast(meta[relay.Constant][11] /* ty=Tensor[(660), uint16] */, dtype="uint16") /* ty=Tensor[(660), uint16] */;
    %172 = cast(%var_6089, dtype="uint16") /* ty=Tensor[(784), uint16] */;
    %173 = cast(%var_6090, dtype="int64") /* ty=Tensor[(588), int64] */;
    %174 = reshape(%171, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
    %175 = reshape(%172, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
    %176 = reshape(%173, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %177 = @func_4510(%174, %175, %176) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
    %178 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %179 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 42), uint64] */, dtype="uint64") /* ty=Tensor[(8, 42), uint64] */;
    %180 = reshape(%178, newshape=[]) /* ty=uint64 */;
    %181 = reshape(%179, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
    %182 = @func_1809(%180, %181) /* ty=(Tensor[(6, 4, 14), uint64],) */;
    %183 = cast(%var_6075, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
    %184 = acosh(%183) /* ty=Tensor[(13, 2, 13), float64] */;
    %185 = cast(%184, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
    %186 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
    %187 = %177.4;
    %188 = %182.0;
    %189 = log2(%185) /* ty=Tensor[(13, 2, 13), float64] */;
    %190 = %186.0;
    (%187, meta[relay.Constant][11] /* ty=Tensor[(660), uint16] */, %var_6089, %var_6090, %188, meta[relay.Constant][12] /* ty=uint64 */, meta[relay.Constant][13] /* ty=Tensor[(8, 42), uint64] */, %189, %190)
  };
  %191(%var_6122, %var_6123, %var_6124) /* ty=(Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) */
}

def @func_11045(%var_11042: Tensor[(12, 10, 9), float32], %var_11043: Tensor[(448), float64], %var_11044: Tensor[(12, 10, 9), float32]) -> (int8, Tensor[(1, 28), int8], Tensor[(448), float64], Tensor[(1, 7, 16), float32], Tensor[(12, 10, 9), float32], Tensor[(336), uint64]) {
  @func_11040(%var_11042, %var_11043, %var_11044) /* ty=(int8, Tensor[(1, 28), int8], Tensor[(448), float64], Tensor[(1, 7, 16), float32], Tensor[(12, 10, 9), float32], Tensor[(336), uint64]) */
}

def @func_6264(%var_6263: Tensor[(3, 16, 9), uint32]) -> (Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) {
  %198 = fn (%var_6251: Tensor[(3, 16, 9), uint32]) -> (Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) {
    %192 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 16, 9), uint32] */, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
    %193 = shape_of(%var_6251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %194 = cast(%var_6251, dtype="bool") /* ty=Tensor[(3, 16, 9), bool] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %196 = greater_equal(%194, %195) /* ty=Tensor[(3, 16, 9), bool] */;
    %197 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
    (%196, %197)
  };
  %198(%var_6263) /* ty=(Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) */
}

def @func_10583() -> (Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %206 = fn () -> (Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
    %199 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 12), float64] */;
    %200 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %201 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %202 = log10(%199) /* ty=Tensor[(3, 7, 12), float64] */;
    %203 = @func_7413() /* ty=Tensor[(?, 7, 16), int8] */;
    %204 = %200.0;
    %205 = %201.0;
    (%202, %203, %204, %205)
  };
  %206() /* ty=(Tensor[(3, 7, 12), float64], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */
}

def @func_127(%var_125: Tensor[(6, 7, 14), int64], %var_126: Tensor[(6, 7, 14), int64]) -> Tensor[(6, 7, 14), bool] {
  @func_123(%var_125, %var_126) /* ty=Tensor[(6, 7, 14), bool] */
}

def @func_12823() -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) {
  %221 = fn () -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) {
    %207 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
    %208 = cast(meta[relay.Constant][16] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
    %209 = cast(meta[relay.Constant][17] /* ty=Tensor[(405), uint8] */, dtype="uint8") /* ty=Tensor[(405), uint8] */;
    %210 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %211 = cast(meta[relay.Constant][19] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %212 = %207.0;
    %213 = cast(%212, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %214 = reshape(%208, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint8] */;
    %215 = reshape(%209, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), uint8] */;
    %216 = reshape(%210, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %217 = reshape(%211, newshape=[4, 8]) /* ty=Tensor[(4, 8), float64] */;
    %218 = reshape(%213, newshape=[168, 2]) /* ty=Tensor[(168, 2), uint64] */;
    %219 = @func_4401(%214, %215, %216, %217, %218) /* ty=(Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) */;
    %220 = %219.1;
    (%212, %220, meta[relay.Constant][16] /* ty=Tensor[(45), uint8] */, meta[relay.Constant][17] /* ty=Tensor[(405), uint8] */, meta[relay.Constant][18] /* ty=Tensor[(112), float32] */, meta[relay.Constant][19] /* ty=Tensor[(32), float64] */)
  };
  %221() /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) */
}

def @func_5054() -> (uint64,) {
  %222 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %223 = %222.1;
  (%223,)
}

def @func_875(%var_872: Tensor[(20), uint32]) -> (Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) {
  %224 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int8") /* ty=Tensor[(13, 8, 11), int8] */;
  %225 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 8, 11), int8] */, dtype="int8") /* ty=Tensor[(13, 8, 11), int8] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %228 = cast(meta[relay.Constant][22] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %229 = cast(meta[relay.Constant][23] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %230 = reshape(%228, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %231 = reshape(%229, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %232 = @func_168(%230, %231) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %233 = cast(%var_872, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %234 = reshape(%233, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), uint32] */;
  %235 = @func_237(%234) /* ty=(Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) */;
  %236 = minimum(%226, %227) /* ty=Tensor[(13, 8, 11), int8] */;
  %237 = %232.0;
  %238 = %235.1;
  (%236, %237, meta[relay.Constant][22] /* ty=Tensor[(784), uint16] */, meta[relay.Constant][23] /* ty=Tensor[(588), int64] */, %238, %var_872)
}

def @func_9217() -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32]) {
  %243 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32]) {
    %239 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
    %240 = @func_8873() /* ty=(Tensor[(112), float32],) */;
    %241 = %239.0;
    %242 = %240.0;
    (%241, %242)
  };
  %243() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(112), float32]) */
}

def @func_12150(%var_12146: Tensor[(1, 9, 12), uint64], %var_12147: Tensor[(660, 1), uint16], %var_12148: Tensor[(588), int64], %var_12149: Tensor[(11, 9, 12), uint64]) -> (Tensor[(1, 9, 12), uint64], Tensor[(1, 7, 16), float32], Tensor[(660, 1), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(11, 9, 12), float64], Tensor[(2, 504), float32], Tensor[(1008), float64]) {
  @func_12144(%var_12146, %var_12147, %var_12148, %var_12149) /* ty=(Tensor[(1, 9, 12), uint64], Tensor[(1, 7, 16), float32], Tensor[(660, 1), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(11, 9, 12), float64], Tensor[(2, 504), float32], Tensor[(1008), float64]) */
}

def @func_1790(%var_1757: Tensor[(1, 3, 1), float64]) -> Tensor[(8, 3, 12), uint16] {
  %244 = cast(%var_1757, dtype="float64") /* ty=Tensor[(1, 3, 1), float64] */;
  %245 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 12), float64] */;
  %246 = divide(%244, %245) /* ty=Tensor[(8, 3, 12), float64] */;
  %247 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %248 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%246, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %251 = not_equal(%249, %250) /* ty=Tensor[(8, 3, 12), bool] */;
  %252 = cast(%251, dtype="uint16") /* ty=Tensor[(8, 3, 12), uint16] */;
  %253 = cast(%var_1757, dtype="uint16") /* ty=Tensor[(1, 3, 1), uint16] */;
  bitwise_or(%252, %253) /* ty=Tensor[(8, 3, 12), uint16] */
}

def @func_9792() -> Tensor[(?, 7, 16), float64] {
  @func_9790() /* ty=Tensor[(?, 7, 16), float64] */
}

def @func_4025() -> (Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
  @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */
}

def @func_8478() -> Tensor[(336), uint64] {
  @func_4990() /* ty=Tensor[(336), uint64] */
}

def @func_2185(%var_2182: int16, %var_2183: Tensor[(336), uint64], %var_2184: Tensor[(3), float64]) -> (Tensor[(1, 3, 9), uint64], Tensor[(1, 3, 9), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool], Tensor[(8, 3, 12), uint16], Tensor[(3), float64]) {
  %272 = fn (%var_2139: int16, %var_2172: Tensor[(336), uint64], %var_2176: Tensor[(3), float64]) -> (Tensor[(1, 3, 9), uint64], Tensor[(1, 3, 9), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool], Tensor[(8, 3, 12), uint16], Tensor[(3), float64]) {
    %254 = cast(%var_2139, dtype="int16") /* ty=int16 */;
    %255 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 3, 9), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 9), int16] */;
    %256 = multiply(%254, %255) /* ty=Tensor[(1, 3, 9), int16] */;
    %257 = cast(%256, dtype="uint64") /* ty=Tensor[(1, 3, 9), uint64] */;
    %258 = cast(%var_2139, dtype="uint64") /* ty=uint64 */;
    %259 = cast(%256, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
    %260 = cast(%var_2139, dtype="bool") /* ty=bool */;
    %261 = cast(%var_2172, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %262 = cast(meta[relay.Constant][26] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
    %263 = reshape(%261, newshape=[336]) /* ty=Tensor[(336), uint64] */;
    %264 = reshape(%262, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
    %265 = @func_1891(%263, %264) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
    %266 = cast(%var_2176, dtype="float64") /* ty=Tensor[(3), float64] */;
    %267 = reshape(%266, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), float64] */;
    %268 = left_shift(%257, %258) /* ty=Tensor[(1, 3, 9), uint64] */;
    %269 = equal(%259, %260) /* ty=Tensor[(1, 3, 9), bool] */;
    %270 = %265.0;
    %271 = @func_1790(%267) /* ty=Tensor[(8, 3, 12), uint16] */;
    (%268, %269, %270, %var_2172, meta[relay.Constant][26] /* ty=Tensor[(72), bool] */, %271, %var_2176)
  };
  %272(%var_2182, %var_2183, %var_2184) /* ty=(Tensor[(1, 3, 9), uint64], Tensor[(1, 3, 9), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool], Tensor[(8, 3, 12), uint16], Tensor[(3), float64]) */
}

def @func_5456(%var_5455: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) {
  %299 = fn (%var_5415: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) {
    %273 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
    %274 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
    %275 = reshape(%273, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %276 = reshape(%274, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %277 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %278 = %277.0;
    %279 = cast(%278, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %280 = erf(%279) /* ty=Tensor[(1, 7, 16), float64] */;
    %281 = cast(%278, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %282 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 7, 16), float32] */, dtype="float64") /* ty=Tensor[(15, 7, 16), float64] */;
    %283 = power(%281, %282) /* ty=Tensor[(15, 7, 16), float64] */;
    %284 = cast(%280, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
    %285 = cast(%283, dtype="bool") /* ty=Tensor[(15, 7, 16), bool] */;
    %286 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 32), float64] */, dtype="float64") /* ty=Tensor[(1, 32), float64] */;
    %287 = cast(%var_5415, dtype="int64") /* ty=Tensor[(588), int64] */;
    %288 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %289 = @func_4990() /* ty=Tensor[(336), uint64] */;
    %290 = cast(%289, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %291 = reshape(%286, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), float64] */;
    %292 = reshape(%287, newshape=[98, 6]) /* ty=Tensor[(98, 6), int64] */;
    %293 = reshape(%288, newshape=[]) /* ty=uint64 */;
    %294 = reshape(%290, newshape=[336]) /* ty=Tensor[(336), uint64] */;
    %295 = @func_3527(%291, %292, %293, %294) /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
    %296 = @func_123(%275, %276) /* ty=Tensor[(6, 7, 14), bool] */;
    %297 = greater(%284, %285) /* ty=Tensor[(15, 7, 16), bool] */;
    %298 = %295.6;
    (%289, %296, %var_5415, %297, %298, meta[relay.Constant][28] /* ty=Tensor[(1, 32), float64] */, meta[relay.Constant][29] /* ty=uint64 */)
  };
  %299(%var_5455) /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(15, 7, 16), bool], Tensor[(336), uint64], Tensor[(1, 32), float64], uint64) */
}

def @func_13797() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], uint64) {
  @func_13795() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], uint64) */
}

def @func_6705() -> (Tensor[(6, 6, 8), int8],) {
  %302 = fn () -> (Tensor[(6, 6, 8), int8],) {
    %300 = @func_6541() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
    %301 = %300.1;
    (%301,)
  };
  %302() /* ty=(Tensor[(6, 6, 8), int8],) */
}

def @func_7590() -> Tensor[(?, 7, 16), int8] {
  @func_7413() /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_7413() -> Tensor[(?, 7, 16), int8] {
  %303 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %303.0
}

def @func_4812() -> Tensor[(1, 7, 16), float32] {
  %305 = fn () -> Tensor[(1, 7, 16), float32] {
    %304 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %304.0
  };
  %305() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_8917() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %306 = @func_8654() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %307 = @func_8478() /* ty=Tensor[(336), uint64] */;
  %308 = %306.0;
  (%307, %308)
}

def @func_11200() -> (Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) {
  %309 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %310 = %309.0;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %312 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %313 = cast(meta[relay.Constant][31] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %314 = reshape(%312, newshape=[]) /* ty=int8 */;
  %315 = reshape(%313, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %316 = @func_5573(%314, %315) /* ty=(Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) */;
  %317 = sinh(%311) /* ty=Tensor[(6, 6, 8), float32] */;
  %318 = %316.1;
  (%317, %318, meta[relay.Constant][30] /* ty=int8 */, meta[relay.Constant][31] /* ty=Tensor[(28), int8] */)
}

def @func_11744() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) {
  %319 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %320 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %321 = @func_6756() /* ty=(Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) */;
  %322 = %319.0;
  %323 = %320.0;
  %324 = %321.1;
  (%322, %323, %324)
}

def @func_4991() -> Tensor[(336), uint64] {
  %326 = fn () -> Tensor[(336), uint64] {
    %325 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
    %325.0
  };
  %326() /* ty=Tensor[(336), uint64] */
}

def @func_8875() -> (Tensor[(112), float32],) {
  @func_8873() /* ty=(Tensor[(112), float32],) */
}

def @func_5529(%var_5526: Tensor[(9, 7, 16), float64], %var_5527: Tensor[(28), int8], %var_5528: Tensor[(4, 7, 16), float64]) -> (Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) {
  %341 = fn (%var_5481: Tensor[(9, 7, 16), float64], %var_5498: Tensor[(28), int8], %var_5513: Tensor[(4, 7, 16), float64]) -> (Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) {
    %327 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
    %328 = %327.0;
    %329 = cast(%328, dtype="bool") /* ty=Tensor[(?, 7, 16), bool] */;
    %330 = cast(%var_5481, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
    %331 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %332 = cast(%var_5498, dtype="int8") /* ty=Tensor[(28), int8] */;
    %333 = reshape(%331, newshape=[]) /* ty=int8 */;
    %334 = reshape(%332, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
    %335 = @func_3356(%333, %334) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
    %336 = cast(%328, dtype="int16") /* ty=Tensor[(?, 7, 16), int16] */;
    %337 = cast(%var_5513, dtype="int16") /* ty=Tensor[(4, 7, 16), int16] */;
    %338 = not_equal(%329, %330) /* ty=Tensor[(9, 7, 16), bool] */;
    %339 = %335.2;
    %340 = logical_xor(%336, %337) /* ty=Tensor[(4, 7, 16), int16] */;
    (%338, %339, meta[relay.Constant][32] /* ty=int8 */, %var_5498, %340)
  };
  %341(%var_5526, %var_5527, %var_5528) /* ty=(Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) */
}

def @func_11202() -> (Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) {
  @func_11200() /* ty=(Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) */
}

def @func_13336(%var_13334: int64, %var_13335: Tensor[(15, 8, 13), int64]) -> (Tensor[(15, 8, 13), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32], Tensor[(288), int8], Tensor[(15, 8, 13), bool], Tensor[(336), uint64], Tensor[(336), float32]) {
  %356 = fn (%var_13255: int64, %var_13256: Tensor[(15, 8, 13), int64]) -> (Tensor[(15, 8, 13), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32], Tensor[(288), int8], Tensor[(15, 8, 13), bool], Tensor[(336), uint64], Tensor[(336), float32]) {
    %342 = cast(%var_13255, dtype="int64") /* ty=int64 */;
    %343 = cast(%var_13256, dtype="int64") /* ty=Tensor[(15, 8, 13), int64] */;
    %344 = @func_9713() /* ty=(Tensor[(112), float32],) */;
    %345 = @func_6057() /* ty=(Tensor[(288), int8],) */;
    %346 = cast(%var_13256, dtype="bool") /* ty=Tensor[(15, 8, 13), bool] */;
    %347 = cast(%var_13255, dtype="bool") /* ty=bool */;
    %348 = @func_8770() /* ty=(Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) */;
    %349 = maximum(%342, %343) /* ty=Tensor[(15, 8, 13), int64] */;
    %350 = %344.0;
    %351 = @func_9173() /* ty=Tensor[(1, 7, 16), float32] */;
    %352 = %345.0;
    %353 = logical_or(%346, %347) /* ty=Tensor[(15, 8, 13), bool] */;
    %354 = @func_5119() /* ty=Tensor[(336), uint64] */;
    %355 = %348.2;
    (%349, %350, %351, %352, %353, %354, %355)
  };
  %356(%var_13334, %var_13335) /* ty=(Tensor[(15, 8, 13), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32], Tensor[(288), int8], Tensor[(15, 8, 13), bool], Tensor[(336), uint64], Tensor[(336), float32]) */
}

def @func_13352(%var_13351: Tensor[(588), int64]) -> (Tensor[(405), uint8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
  %365 = fn (%var_13346: Tensor[(588), int64]) -> (Tensor[(405), uint8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
    %357 = @func_12822() /* ty=(Tensor[(336), uint64], Tensor[(6, 7, 14), bool], Tensor[(45), uint8], Tensor[(405), uint8], Tensor[(112), float32], Tensor[(32), float64]) */;
    %358 = cast(meta[relay.Constant][33] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
    %359 = cast(%var_13346, dtype="int64") /* ty=Tensor[(588), int64] */;
    %360 = reshape(%358, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
    %361 = reshape(%359, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %362 = @func_168(%360, %361) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
    %363 = %357.3;
    %364 = %362.0;
    (%363, %364, meta[relay.Constant][33] /* ty=Tensor[(784), uint16] */, %var_13346)
  };
  %365(%var_13351) /* ty=(Tensor[(405), uint8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64]) */
}

def @func_5021() -> Tensor[(6, 6, 8), int8] {
  %366 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %366.4
}

def @func_12249() -> Tensor[(?, 7, 16), int8] {
  %367 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
  %368 = @func_9713() /* ty=(Tensor[(112), float32],) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="int8") /* ty=Tensor[(112), int8] */;
  %371 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%367, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%372, %373) /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_8873() -> (Tensor[(112), float32],) {
  %374 = @func_8335() /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) */;
  %375 = %374.2;
  (%375,)
}

def @func_5967() -> (Tensor[(112), float32],) {
  @func_5965() /* ty=(Tensor[(112), float32],) */
}

def @func_5291() -> (Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) {
  @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */
}

def @func_12033(%var_12032: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), int8],) {
  %384 = fn (%var_12016: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), int8],) {
    %376 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
    %377 = %376.0;
    %378 = cast(%377, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
    %379 = cast(%var_12016, dtype="bool") /* ty=Tensor[(16, 7, 16), bool] */;
    %380 = less(%378, %379) /* ty=Tensor[(16, 7, 16), bool] */;
    %381 = cast(%380, dtype="int8") /* ty=Tensor[(16, 7, 16), int8] */;
    %382 = cast(%377, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
    %383 = logical_xor(%381, %382) /* ty=Tensor[(16, 7, 16), int8] */;
    (%383,)
  };
  %384(%var_12032) /* ty=(Tensor[(16, 7, 16), int8],) */
}

def @func_8404(%var_8402: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) {
  @func_8401(%var_8402) /* ty=(Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) */
}

def @func_8122(%var_8120: Tensor[(784), uint16], %var_8121: Tensor[(588), int64]) -> (Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
  @func_8118(%var_8120, %var_8121) /* ty=(Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) */
}

def @func_9406(%var_9405: Tensor[(8, 7, 16), float64]) -> (Tensor[(588), bool], Tensor[(8, 7, 16), float64]) {
  %394 = fn (%var_9398: Tensor[(8, 7, 16), float64]) -> (Tensor[(588), bool], Tensor[(8, 7, 16), float64]) {
    %385 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
    %386 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %387 = %386.0;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %389 = tan(%388) /* ty=Tensor[(1, 7, 16), float64] */;
    %390 = cast(%389, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %391 = cast(%var_9398, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
    %392 = %385.4;
    %393 = mod(%390, %391) /* ty=Tensor[(8, 7, 16), float64] */;
    (%392, %393)
  };
  %394(%var_9405) /* ty=(Tensor[(588), bool], Tensor[(8, 7, 16), float64]) */
}

def @func_7790() -> (Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) {
  @func_7788() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) */
}

def @func_13795() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], uint64) {
  %395 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %396 = @func_12311() /* ty=(Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
  %397 = %395.0;
  %398 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
  %399 = %396.2;
  (%397, %398, %399)
}

def @func_4754(%var_4753: Tensor[(1, 336), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) {
  %408 = fn (%var_4719: Tensor[(1, 336), float32]) -> (Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) {
    %400 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %401 = cast(%var_4719, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
    %402 = cast(meta[relay.Constant][34] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %403 = reshape(%401, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
    %404 = reshape(%402, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %405 = @func_4325(%403, %404) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
    %406 = %400.0;
    %407 = %405.0;
    (%406, %407, %var_4719, meta[relay.Constant][34] /* ty=Tensor[(588), int64] */)
  };
  %408(%var_4753) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) */
}

def @func_7297() -> (Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) {
  @func_7295() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) */
}

def @func_8118(%var_8110: Tensor[(784), uint16], %var_8111: Tensor[(588), int64]) -> (Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) {
  %409 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %410 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), uint16] */, dtype="uint16") /* ty=Tensor[(660), uint16] */;
  %411 = cast(%var_8110, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %412 = cast(%var_8111, dtype="int64") /* ty=Tensor[(588), int64] */;
  %413 = reshape(%410, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
  %414 = reshape(%411, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
  %415 = reshape(%412, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %416 = @func_4510(%413, %414, %415) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
  %417 = %409.3;
  %418 = %416.5;
  (%417, %418, meta[relay.Constant][35] /* ty=Tensor[(660), uint16] */, %var_8110, %var_8111)
}

def @func_1812(%var_1810: uint64, %var_1811: Tensor[(6, 4, 14), uint64]) -> (Tensor[(6, 4, 14), uint64],) {
  %422 = fn (%var_1803: uint64, %var_1804: Tensor[(6, 4, 14), uint64]) -> (Tensor[(6, 4, 14), uint64],) {
    %419 = cast(%var_1803, dtype="uint64") /* ty=uint64 */;
    %420 = cast(%var_1804, dtype="uint64") /* ty=Tensor[(6, 4, 14), uint64] */;
    %421 = subtract(%419, %420) /* ty=Tensor[(6, 4, 14), uint64] */;
    (%421,)
  };
  %422(%var_1810, %var_1811) /* ty=(Tensor[(6, 4, 14), uint64],) */
}

def @func_9071() -> (Tensor[(6, 6, 8), int8],) {
  %423 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  (%423,)
}

def @func_6642(%var_6640: bool, %var_6641: Tensor[(1, 13, 12), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) {
  %434 = fn (%var_6563: bool, %var_6564: Tensor[(1, 13, 12), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) {
    %424 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %425 = cast(%var_6563, dtype="bool") /* ty=bool */;
    %426 = cast(%var_6564, dtype="bool") /* ty=Tensor[(1, 13, 12), bool] */;
    %427 = logical_and(%425, %426) /* ty=Tensor[(1, 13, 12), bool] */;
    %428 = cast(%427, dtype="bool") /* ty=Tensor[(1, 13, 12), bool] */;
    %429 = cast(%var_6563, dtype="bool") /* ty=bool */;
    %430 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
    %431 = %424.0;
    %432 = greater(%428, %429) /* ty=Tensor[(1, 13, 12), bool] */;
    %433 = %430.2;
    (%431, %432, %433)
  };
  %434(%var_6640, %var_6641) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */
}

def @func_5681() -> (Tensor[(1, 7, 16), float32],) {
  %437 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %435 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %436 = %435.0;
    (%436,)
  };
  %437() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_8335() -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) {
  %438 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %440 = asin(%439) /* ty=Tensor[(6, 6, 8), float64] */;
  %441 = cast(%440, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %442 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %443 = @func_5965() /* ty=(Tensor[(112), float32],) */;
  %444 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %445 = sqrt(%441) /* ty=Tensor[(6, 6, 8), float64] */;
  %446 = %442.0;
  %447 = %443.0;
  %448 = %444.0;
  (%445, %446, %447, %448)
}

def @func_10442() -> (Tensor[(1, 7, 16), float32],) {
  %450 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %449 = @func_9686() /* ty=Tensor[(1, 7, 16), float32] */;
    (%449,)
  };
  %450() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_8253(%var_8251: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) {
  @func_8250(%var_8251) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */
}

def @func_4932() -> (Tensor[(?, 7, 16), float64],) {
  %460 = fn () -> (Tensor[(?, 7, 16), float64],) {
    %451 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
    %452 = %451.0;
    %453 = cast(%452, dtype="float32") /* ty=Tensor[(?, 7, 16), float32] */;
    %454 = asinh(%453) /* ty=Tensor[(?, 7, 16), float32] */;
    %455 = cast(%452, dtype="float64") /* ty=Tensor[(?, 7, 16), float64] */;
    %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%454, dtype="float64") /* ty=Tensor[(?, 7, 16), float64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %459 = divide(%457, %458) /* ty=Tensor[(?, 7, 16), float64] */;
    (%459,)
  };
  %460() /* ty=(Tensor[(?, 7, 16), float64],) */
}

def @func_7513() -> (Tensor[(336), uint64],) {
  @func_7511() /* ty=(Tensor[(336), uint64],) */
}

def @func_4236() -> (Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) {
  %470 = fn () -> (Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) {
    %461 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %462 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %463 = cast(%462, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
    %464 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %465 = cast(%461, dtype="int8") /* ty=Tensor[(1, 7, 16), int8] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %467 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %468 = minimum(%465, %466) /* ty=Tensor[(?, 7, 16), int8] */;
    %469 = %467.0;
    (%468, %469)
  };
  %470() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */
}

def @func_9291() -> Tensor[(1, 7, 16), float32] {
  @func_9289() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_9175() -> Tensor[(1, 7, 16), float32] {
  @func_9173() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_3911() -> Tensor[(1, 7, 16), float32] {
  %472 = fn () -> Tensor[(1, 7, 16), float32] {
    %471 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
    acos(%471) /* ty=Tensor[(1, 7, 16), float32] */
  };
  %472() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_7088() -> (Tensor[(1, 7, 16), float32],) {
  %475 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %473 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %474 = %473.0;
    (%474,)
  };
  %475() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_12277() -> Tensor[(1, 7, 16), float32] {
  %476 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %476.0
}

def @func_13080() -> (Tensor[(5, 7, 16), uint16],) {
  %482 = fn () -> (Tensor[(5, 7, 16), uint16],) {
    %477 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %478 = %477.0;
    %479 = cast(%478, dtype="uint16") /* ty=Tensor[(1, 7, 16), uint16] */;
    %480 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 7, 16), float32] */, dtype="uint16") /* ty=Tensor[(5, 7, 16), uint16] */;
    %481 = right_shift(%479, %480) /* ty=Tensor[(5, 7, 16), uint16] */;
    (%481,)
  };
  %482() /* ty=(Tensor[(5, 7, 16), uint16],) */
}

def @func_12162() -> Tensor[(6, 6, 8), int8] {
  @func_12160() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_11893() -> Tensor[(1, 7, 16), float32] {
  %484 = fn () -> Tensor[(1, 7, 16), float32] {
    %483 = @func_9216() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(112), float32]) */;
    %483.0
  };
  %484() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_13741(%var_13739: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), uint8] {
  @func_13738(%var_13739) /* ty=Tensor[(6, 7, 16), uint8] */
}

def @func_13164() -> (Tensor[(1, 7, 16), float32], Tensor[(72), bool], Tensor[(72), bool]) {
  %485 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %486 = cast(meta[relay.Constant][38] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %487 = reshape(%486, newshape=[72]) /* ty=Tensor[(72), bool] */;
  %488 = @func_10123(%487) /* ty=(Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) */;
  %489 = %485.0;
  %490 = %488.3;
  (%489, %490, meta[relay.Constant][38] /* ty=Tensor[(72), bool] */)
}

def @func_8770() -> (Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) {
  %491 = @func_6872() /* ty=(Tensor[(336), uint64], Tensor[(288), int8], Tensor[(6, 6, 8), int8], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(4, 4, 7), float32]) */;
  %492 = cast(meta[relay.Constant][39] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %493 = reshape(%492, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %494 = @func_8250(%493) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
  %495 = %491.1;
  %496 = %494.0;
  (%495, %496, meta[relay.Constant][39] /* ty=Tensor[(336), float32] */)
}

def @func_6542() -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
  %503 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
    %497 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %498 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
    %499 = reshape(%498, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
    %500 = @func_2430(%499) /* ty=(Tensor[(6, 6, 8), int8],) */;
    %501 = %497.0;
    %502 = %500.0;
    (%501, %502, meta[relay.Constant][40] /* ty=Tensor[(288), int8] */)
  };
  %503() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */
}

def @func_13713() -> (Tensor[(1, 7, 16), float64], int8, Tensor[(1, 7, 16), float32]) {
  %504 = @func_11962() /* ty=(Tensor[(6, 6, 8), int8], int8) */;
  %505 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %506 = %504.1;
  %507 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  (%505, %506, %507)
}

def @func_13582() -> (Tensor[(1, 7, 16), float32],) {
  %510 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %508 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %509 = %508.0;
    (%509,)
  };
  %510() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @main(%var_14039: Tensor[(6, 6, 8), int8]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), bool]) {
  %511 = @func_7088() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %512 = @func_13507() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) */;
  %513 = %512.1;
  %514 = cast(%var_14039, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = %511.0;
  %519 = greater_equal(%516, %517) /* ty=Tensor[(6, 6, 8), bool] */;
  (%518, %519)
}

def @func_10085(%var_10084: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(384), int32], Tensor[(588), int64]) {
  %531 = fn (%var_10080: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(384), int32], Tensor[(588), int64]) {
    %520 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %521 = cast(meta[relay.Constant][41] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %522 = cast(meta[relay.Constant][41] /* ty=Tensor[(384), int32] */, dtype="bool") /* ty=Tensor[(384), bool] */;
    %523 = cast(%var_10080, dtype="int64") /* ty=Tensor[(588), int64] */;
    %524 = reshape(%521, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), int32] */;
    %525 = reshape(%522, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), bool] */;
    %526 = reshape(%523, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %527 = @func_6225(%524, %525, %526) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) */;
    %528 = %520.0;
    %529 = @func_6914() /* ty=Tensor[(336), uint64] */;
    %530 = %527.5;
    (%528, %529, %530, meta[relay.Constant][41] /* ty=Tensor[(384), int32] */, %var_10080)
  };
  %531(%var_10084) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(384), int32], Tensor[(588), int64]) */
}

def @func_4145() -> Tensor[(1, 7, 16), float32] {
  %532 = fn () -> Tensor[(1, 7, 16), float32] {
    @func_3910() /* ty=Tensor[(1, 7, 16), float32] */
  };
  %532() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_10957() -> Tensor[(6, 6, 8), int8] {
  @func_10955() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_7185(%var_7184: Tensor[(156), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], bool, Tensor[(156), bool], Tensor[(1, 7, 16), float32]) {
  %546 = fn (%var_7165: Tensor[(156), bool]) -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], bool, Tensor[(156), bool], Tensor[(1, 7, 16), float32]) {
    %533 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %534 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %535 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %536 = cast(%var_7165, dtype="bool") /* ty=Tensor[(156), bool] */;
    %537 = reshape(%535, newshape=[]) /* ty=bool */;
    %538 = reshape(%536, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
    %539 = @func_6639(%537, %538) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
    %540 = @func_4704() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %541 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
    %542 = %533.0;
    %543 = %534.0;
    %544 = %539.1;
    %545 = %540.0;
    (%541, %542, %543, %544, False /* ty=bool */, %var_7165, %545)
  };
  %546(%var_7184) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], bool, Tensor[(156), bool], Tensor[(1, 7, 16), float32]) */
}

def @func_5229() -> (Tensor[(112), float32],) {
  %547 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %548 = %547.2;
  (%548,)
}

def @func_10722(%var_10712: Tensor[(780), float32], %var_10716: Tensor[(780), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(780), uint16]) {
  %549 = @func_7788() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) */;
  %550 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %551 = @func_9467() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) */;
  %552 = cast(%var_10712, dtype="float32") /* ty=Tensor[(780), float32] */;
  %553 = cast(%var_10712, dtype="float32") /* ty=Tensor[(780), float32] */;
  %554 = reshape(%552, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %555 = reshape(%553, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %556 = @func_7357(%554, %555) /* ty=(Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) */;
  %557 = cast(%var_10716, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %558 = shape_of(%var_10712, dtype="int32") /* ty=Tensor[(1), int32] */;
  %559 = cast(%var_10712, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %561 = %549.6;
  %562 = %550.1;
  %563 = %551.0;
  %564 = %556.0;
  %565 = multiply(%559, %560) /* ty=Tensor[(780), uint16] */;
  (%561, %562, %563, %564, %565)
}

def @func_9413() -> (Tensor[(1, 7, 16), float32],) {
  %568 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %566 = @func_6541() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
    %567 = %566.0;
    (%567,)
  };
  %568() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_13166() -> (Tensor[(1, 7, 16), float32], Tensor[(72), bool], Tensor[(72), bool]) {
  @func_13164() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(72), bool], Tensor[(72), bool]) */
}

def @func_4082() -> (Tensor[(1, 7, 16), float32],) {
  %571 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %569 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_3955() -> (Tensor[(1, 7, 16), float32],) {
  %572 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
  (%572,)
}

def @func_8004(%var_7977: Tensor[(2, 504), float64], %var_7985: Tensor[(2, 504), float64]) -> (Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) {
  %573 = @func_4931() /* ty=(Tensor[(?, 7, 16), float64],) */;
  %574 = cast(%var_7977, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %575 = cast(meta[relay.Constant][42] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %576 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %577 = reshape(%574, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float64] */;
  %578 = reshape(%575, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %579 = reshape(%576, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %580 = @func_5525(%577, %578, %579) /* ty=(Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) */;
  %581 = cast(%var_7985, dtype="bool") /* ty=Tensor[(2, 504), bool] */;
  %582 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(2), int32] */;
  %583 = cast(%var_7977, dtype="bool") /* ty=Tensor[(2, 504), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %585 = cast(%var_7977, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %586 = %573.0;
  %587 = %580.3;
  %588 = logical_or(%583, %584) /* ty=Tensor[(2, 504), bool] */;
  %589 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  %590 = log(%585) /* ty=Tensor[(2, 504), float32] */;
  (%586, %587, meta[relay.Constant][42] /* ty=Tensor[(28), int8] */, meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, %588, %589, %590)
}

def @func_6058() -> (Tensor[(288), int8],) {
  %593 = fn () -> (Tensor[(288), int8],) {
    %591 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
    %592 = %591.5;
    (%592,)
  };
  %593() /* ty=(Tensor[(288), int8],) */
}

def @func_7360(%var_7358: Tensor[(15, 4, 13), float32], %var_7359: Tensor[(15, 4, 13), float32]) -> (Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) {
  %608 = fn (%var_7311: Tensor[(15, 4, 13), float32], %var_7312: Tensor[(15, 4, 13), float32]) -> (Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) {
    %594 = cast(meta[relay.Constant][44] /* ty=Tensor[(288, 1), int8] */, dtype="int8") /* ty=Tensor[(288, 1), int8] */;
    %595 = reshape(%594, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
    %596 = @func_2430(%595) /* ty=(Tensor[(6, 6, 8), int8],) */;
    %597 = cast(%var_7312, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
    %598 = shape_of(%var_7311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%var_7311, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %601 = mod(%599, %600) /* ty=Tensor[(15, 4, 13), float32] */;
    %602 = cast(%var_7311, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
    %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
    %604 = cast(%601, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %606 = %596.0;
    %607 = floor_divide(%604, %605) /* ty=Tensor[(15, 4, 13), float64] */;
    (%606, meta[relay.Constant][44] /* ty=Tensor[(288, 1), int8] */, %607)
  };
  %608(%var_7358, %var_7359) /* ty=(Tensor[(6, 6, 8), int8], Tensor[(288, 1), int8], Tensor[(15, 4, 13), float64]) */
}

def @func_3356(%var_3331: int8, %var_3332: Tensor[(1, 14, 2), int8]) -> (Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) {
  %609 = cast(%var_3331, dtype="bool") /* ty=bool */;
  %610 = cast(%var_3332, dtype="bool") /* ty=Tensor[(1, 14, 2), bool] */;
  %611 = cast(meta[relay.Constant][45] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %612 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 12), bool] */;
  %613 = reshape(%611, newshape=[336]) /* ty=Tensor[(336), uint64] */;
  %614 = reshape(%612, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
  %615 = @func_1891(%613, %614) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
  %616 = greater(%609, %610) /* ty=Tensor[(1, 14, 2), bool] */;
  %617 = %615.0;
  (%616, %617, meta[relay.Constant][45] /* ty=Tensor[(336), uint64] */, meta[relay.Constant][46] /* ty=Tensor[(6, 12), bool] */)
}

def @func_13682(%var_13680: bool, %var_13681: Tensor[(156), bool]) -> (Tensor[(8, 3, 12), uint16], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
  @func_13678(%var_13680, %var_13681) /* ty=(Tensor[(8, 3, 12), uint16], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) */
}

def @func_123(%var_112: Tensor[(6, 7, 14), int64], %var_113: Tensor[(6, 7, 14), int64]) -> Tensor[(6, 7, 14), bool] {
  %618 = cast(%var_113, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %619 = shape_of(%var_112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_112, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%620, %621) /* ty=Tensor[(6, 7, 14), bool] */
}

def @func_7455() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %622 = @func_5908() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %623 = %622.1;
  %624 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
  (%623, %624)
}

def @func_13103() -> Tensor[(6, 6, 8), int8] {
  @func_13101() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_12596() -> Tensor[(336), uint64] {
  @func_12594() /* ty=Tensor[(336), uint64] */
}

def @func_11604(%var_11602: Tensor[(1, 7, 16), float64]) -> (Tensor[(?, 7, 16), uint16], Tensor[(1, 7, 16), float32]) {
  @func_11601(%var_11602) /* ty=(Tensor[(?, 7, 16), uint16], Tensor[(1, 7, 16), float32]) */
}

def @func_9360() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %625 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %626 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %627 = %625.0;
  %628 = %626.0;
  (%627, %628)
}

def @func_3532(%var_3528: Tensor[(4, 4, 2), float64], %var_3529: Tensor[(98, 6), int64], %var_3530: uint64, %var_3531: Tensor[(336), uint64]) -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
  %654 = fn (%var_3491: Tensor[(4, 4, 2), float64], %var_3509: Tensor[(98, 6), int64], %var_3512: uint64, %var_3513: Tensor[(336), uint64]) -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
    %629 = cast(%var_3491, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %630 = log10(%629) /* ty=Tensor[(4, 4, 2), float64] */;
    %631 = cast(%630, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
    %632 = log(%631) /* ty=Tensor[(4, 4, 2), float32] */;
    %633 = cast(%632, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
    %634 = shape_of(%var_3491, dtype="int32") /* ty=Tensor[(3), int32] */;
    %635 = cast(%var_3491, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
    %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %637 = cast(%630, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %638 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%632, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %641 = cast(%var_3509, dtype="int64") /* ty=Tensor[(98, 6), int64] */;
    %642 = cast(%var_3509, dtype="int64") /* ty=Tensor[(98, 6), int64] */;
    %643 = reshape(%641, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %644 = reshape(%642, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %645 = cast(%var_3512, dtype="uint64") /* ty=uint64 */;
    %646 = cast(%var_3513, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %647 = reshape(%645, newshape=[]) /* ty=uint64 */;
    %648 = reshape(%646, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
    %649 = @func_1809(%647, %648) /* ty=(Tensor[(6, 4, 14), uint64],) */;
    %650 = greater(%635, %636) /* ty=Tensor[(4, 4, 2), bool] */;
    %651 = power(%639, %640) /* ty=Tensor[(4, 4, 2), float64] */;
    %652 = @func_123(%643, %644) /* ty=Tensor[(6, 7, 14), bool] */;
    %653 = %649.0;
    (%650, %651, %652, %var_3509, %653, %var_3512, %var_3513)
  };
  %654(%var_3528, %var_3529, %var_3530, %var_3531) /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */
}

def @func_11264(%var_11262: Tensor[(784), uint16], %var_11263: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(784), uint16], Tensor[(588), int64]) {
  @func_11260(%var_11262, %var_11263) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(784), uint16], Tensor[(588), int64]) */
}

def @func_11962() -> (Tensor[(6, 6, 8), int8], int8) {
  %655 = @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %656 = @func_11200() /* ty=(Tensor[(6, 6, 8), float32], int8, int8, Tensor[(28), int8]) */;
  %657 = %655.0;
  %658 = %656.2;
  (%657, %658)
}

def @func_9362() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */
}

def @func_11358() -> Tensor[(336), uint64] {
  %660 = fn () -> Tensor[(336), uint64] {
    %659 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
    %659.0
  };
  %660() /* ty=Tensor[(336), uint64] */
}

def @func_4407(%var_4402: Tensor[(5, 9, 1), uint8], %var_4403: Tensor[(5, 9, 9), uint8], %var_4404: Tensor[(112), float32], %var_4405: Tensor[(4, 8), float64], %var_4406: Tensor[(168, 2), uint64]) -> (Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) {
  %696 = fn (%var_4366: Tensor[(5, 9, 1), uint8], %var_4367: Tensor[(5, 9, 9), uint8], %var_4377: Tensor[(112), float32], %var_4389: Tensor[(4, 8), float64], %var_4391: Tensor[(168, 2), uint64]) -> (Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) {
    %661 = cast(%var_4366, dtype="uint8") /* ty=Tensor[(5, 9, 1), uint8] */;
    %662 = cast(%var_4367, dtype="uint8") /* ty=Tensor[(5, 9, 9), uint8] */;
    %663 = cast(meta[relay.Constant][47] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
    %664 = reshape(%663, newshape=[20]) /* ty=Tensor[(20), uint32] */;
    %665 = @func_875(%664) /* ty=(Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) */;
    %666 = cast(%var_4389, dtype="float64") /* ty=Tensor[(4, 8), float64] */;
    %667 = %665.4;
    %668 = cast(%667, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
    %669 = cast(meta[relay.Constant][49] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %670 = cast(%var_4391, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
    %671 = reshape(%666, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), float64] */;
    %672 = reshape(%668, newshape=[98, 6]) /* ty=Tensor[(98, 6), int64] */;
    %673 = reshape(%669, newshape=[]) /* ty=uint64 */;
    %674 = reshape(%670, newshape=[336]) /* ty=Tensor[(336), uint64] */;
    %675 = @func_3527(%671, %672, %673, %674) /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float64], Tensor[(6, 7, 14), bool], Tensor[(98, 6), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */;
    %676 = cast(%var_4377, dtype="float32") /* ty=Tensor[(112), float32] */;
    %677 = cast(meta[relay.Constant][48] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
    %678 = cast(%667, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
    %679 = reshape(%676, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
    %680 = reshape(%677, newshape=[784]) /* ty=Tensor[(784), uint16] */;
    %681 = reshape(%678, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
    %682 = @func_1113(%679, %680, %681) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
    %683 = %682.3;
    %684 = cast(%683, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
    %685 = tan(%684) /* ty=Tensor[(588, 1), float64] */;
    %686 = cast(%685, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
    %687 = cast(meta[relay.Constant][49] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %688 = cast(%var_4391, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
    %689 = reshape(%687, newshape=[]) /* ty=uint64 */;
    %690 = reshape(%688, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
    %691 = @func_1809(%689, %690) /* ty=(Tensor[(6, 4, 14), uint64],) */;
    %692 = bitwise_or(%661, %662) /* ty=Tensor[(5, 9, 9), uint8] */;
    %693 = %675.6;
    %694 = acosh(%686) /* ty=Tensor[(588, 1), float64] */;
    %695 = %691.0;
    (%692, %667, meta[relay.Constant][47] /* ty=Tensor[(20), uint32] */, %var_4377, meta[relay.Constant][48] /* ty=Tensor[(784), uint16] */, %693, %var_4389, meta[relay.Constant][49] /* ty=uint64 */, %var_4391, %694, %695)
  };
  %696(%var_4402, %var_4403, %var_4404, %var_4405, %var_4406) /* ty=(Tensor[(5, 9, 9), uint8], Tensor[(6, 7, 14), bool], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(336), uint64], Tensor[(4, 8), float64], uint64, Tensor[(168, 2), uint64], Tensor[(588, 1), float64], Tensor[(6, 4, 14), uint64]) */
}

def @func_878(%var_876: Tensor[(20), uint32]) -> (Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) {
  @func_875(%var_876) /* ty=(Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) */
}

def @func_9289() -> Tensor[(1, 7, 16), float32] {
  %697 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %697.0
}

def @func_5289() -> (Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) {
  %698 = @func_4665() /* ty=(Tensor[(288), int8],) */;
  %699 = @func_5054() /* ty=(uint64,) */;
  %700 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %701 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %703 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%700, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %706 = %698.0;
  %707 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %708 = %699.0;
  %709 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %710 = add(%704, %705) /* ty=Tensor[(?, 7, 16), float32] */;
  (%706, %707, %708, %709, %710)
}

def @func_4205() -> (Tensor[(1, 7, 16), float32],) {
  %713 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %711 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %712 = %711.0;
    (%712,)
  };
  %713() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_5056() -> (uint64,) {
  @func_5054() /* ty=(uint64,) */
}

def @func_3360(%var_3358: int8, %var_3359: Tensor[(1, 14, 2), int8]) -> (Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) {
  @func_3356(%var_3358, %var_3359) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */
}

def @func_13738(%var_13733: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), uint8] {
  %714 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
  %715 = cast(%714, dtype="uint8") /* ty=Tensor[(1, 7, 16), uint8] */;
  %716 = cast(%var_13733, dtype="uint8") /* ty=Tensor[(6, 7, 16), uint8] */;
  bitwise_xor(%715, %716) /* ty=Tensor[(6, 7, 16), uint8] */
}

def @func_8989(%var_8949: Tensor[(5, 14, 4), float32], %var_8984: Tensor[(784, 1), uint16]) -> (Tensor[(5, 14, 4), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(784, 1), uint16], Tensor[(588), int64]) {
  %717 = cast(%var_8949, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %718 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %719 = %718.0;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %721 = cast(%var_8984, dtype="uint16") /* ty=Tensor[(784, 1), uint16] */;
  %722 = cast(meta[relay.Constant][50] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %723 = reshape(%720, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %724 = reshape(%721, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %725 = reshape(%722, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %726 = @func_1113(%723, %724, %725) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %727 = tan(%717) /* ty=Tensor[(5, 14, 4), float32] */;
  %728 = %726.1;
  (%727, %719, %728, %var_8984, meta[relay.Constant][50] /* ty=Tensor[(588), int64] */)
}

def @func_10904() -> Tensor[(?, 7, 16), float32] {
  %730 = fn () -> Tensor[(?, 7, 16), float32] {
    %729 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
    %729.4
  };
  %730() /* ty=Tensor[(?, 7, 16), float32] */
}

def @func_11809() -> Tensor[(1, 7, 16), float32] {
  %731 = fn () -> Tensor[(1, 7, 16), float32] {
    @func_6560() /* ty=Tensor[(1, 7, 16), float32] */
  };
  %731() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_6450() -> (Tensor[(6, 6, 8), float32],) {
  %735 = fn () -> (Tensor[(6, 6, 8), float32],) {
    %732 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
    %733 = cast(%732, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
    %734 = atan(%733) /* ty=Tensor[(6, 6, 8), float32] */;
    (%734,)
  };
  %735() /* ty=(Tensor[(6, 6, 8), float32],) */
}

def @func_11964() -> (Tensor[(6, 6, 8), int8], int8) {
  @func_11962() /* ty=(Tensor[(6, 6, 8), int8], int8) */
}

def @func_9173() -> Tensor[(1, 7, 16), float32] {
  %736 = @func_8654() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
  %736.0
}

def @func_4051() -> (Tensor[(336), uint64],) {
  @func_4049() /* ty=(Tensor[(336), uint64],) */
}

def @func_9544() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */
}

def @func_5862() -> (Tensor[(1, 7, 16), float64],) {
  @func_5860() /* ty=(Tensor[(1, 7, 16), float64],) */
}

def @func_2430(%var_2418: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), int8],) {
  %737 = cast(%var_2418, dtype="int8") /* ty=Tensor[(6, 6, 8), int8] */;
  %738 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(6, 6, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 6, 8), int8] */, dtype="int8") /* ty=Tensor[(6, 6, 8), int8] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %741 = minimum(%739, %740) /* ty=Tensor[(6, 6, 8), int8] */;
  (%741,)
}

def @func_12359() -> (Tensor[(6, 6, 8), float32],) {
  %744 = fn () -> (Tensor[(6, 6, 8), float32],) {
    %742 = @func_6449() /* ty=(Tensor[(6, 6, 8), float32],) */;
    %743 = %742.0;
    (%743,)
  };
  %744() /* ty=(Tensor[(6, 6, 8), float32],) */
}

def @func_8919() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  @func_8917() /* ty=(Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */
}

def @func_11420(%var_11418: Tensor[(112), float32], %var_11419: Tensor[(1, 588), int64]) -> (uint64, Tensor[(336), uint64], Tensor[(112), float32], Tensor[(1, 588), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32]) {
  %757 = fn (%var_11393: Tensor[(112), float32], %var_11394: Tensor[(1, 588), int64]) -> (uint64, Tensor[(336), uint64], Tensor[(112), float32], Tensor[(1, 588), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32]) {
    %745 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
    %746 = cast(%var_11393, dtype="float32") /* ty=Tensor[(112), float32] */;
    %747 = cast(%var_11394, dtype="int64") /* ty=Tensor[(1, 588), int64] */;
    %748 = reshape(%746, newshape=[1, 7, 16]) /* ty=Tensor[(1, 7, 16), float32] */;
    %749 = reshape(%747, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %750 = @func_10045(%748, %749) /* ty=(Tensor[(336), uint64], Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(588), int64], Tensor[(336), uint64]) */;
    %751 = @func_9713() /* ty=(Tensor[(112), float32],) */;
    %752 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %753 = %745.2;
    %754 = %750.0;
    %755 = %751.0;
    %756 = %752.0;
    (%753, %754, %var_11393, %var_11394, %755, %756)
  };
  %757(%var_11418, %var_11419) /* ty=(uint64, Tensor[(336), uint64], Tensor[(112), float32], Tensor[(1, 588), int64], Tensor[(112), float32], Tensor[(1, 7, 16), float32]) */
}

def @func_10994() -> (Tensor[(14, 42), float64],) {
  @func_10992() /* ty=(Tensor[(14, 42), float64],) */
}

def @func_7788() -> (Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) {
  %758 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %759 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), int32] */, dtype="bool") /* ty=Tensor[(384), bool] */;
  %760 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %761 = reshape(%758, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), int32] */;
  %762 = reshape(%759, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), bool] */;
  %763 = reshape(%760, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %764 = @func_6225(%761, %762, %763) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 3, 12), uint16], Tensor[(3), float64], Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), int64]) */;
  %765 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %766 = cast(meta[relay.Constant][54] /* ty=Tensor[(338), float64] */, dtype="float64") /* ty=Tensor[(338), float64] */;
  %767 = cast(meta[relay.Constant][55] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %768 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %769 = reshape(%766, newshape=[13, 2, 13]) /* ty=Tensor[(13, 2, 13), float64] */;
  %770 = reshape(%767, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %771 = reshape(%768, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %772 = @func_6121(%769, %770, %771) /* ty=(Tensor[(588), int64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), uint64], uint64, Tensor[(8, 42), uint64], Tensor[(13, 2, 13), float64], Tensor[(?, 7, 16), float64]) */;
  %773 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
  %774 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
  %775 = %764.3;
  %776 = %765.2;
  %777 = %772.8;
  (%773, %774, %775, meta[relay.Constant][52] /* ty=Tensor[(384), int32] */, meta[relay.Constant][53] /* ty=Tensor[(588), int64] */, %776, %777, meta[relay.Constant][54] /* ty=Tensor[(338), float64] */, meta[relay.Constant][55] /* ty=Tensor[(784), uint16] */)
}

def @func_10855() -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
  @func_10853() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(588), bool]) */
}

def @func_7511() -> (Tensor[(336), uint64],) {
  %778 = @func_7455() /* ty=(Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */;
  %779 = %778.0;
  (%779,)
}

def @func_5772() -> Tensor[(?, 7, 16), float32] {
  @func_5770() /* ty=Tensor[(?, 7, 16), float32] */
}

def @func_12312() -> (Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
  %788 = fn () -> (Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) {
    %780 = @func_8770() /* ty=(Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) */;
    %781 = cast(meta[relay.Constant][56] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %782 = cast(meta[relay.Constant][57] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %783 = reshape(%781, newshape=[]) /* ty=uint64 */;
    %784 = reshape(%782, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
    %785 = @func_1809(%783, %784) /* ty=(Tensor[(6, 4, 14), uint64],) */;
    %786 = %780.0;
    %787 = %785.0;
    (%786, %787, meta[relay.Constant][56] /* ty=uint64 */, meta[relay.Constant][57] /* ty=Tensor[(336), uint64] */)
  };
  %788() /* ty=(Tensor[(288), int8], Tensor[(6, 4, 14), uint64], uint64, Tensor[(336), uint64]) */
}

def @func_12522(%var_12520: int8, %var_12521: Tensor[(14, 42), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(3, 16, 9), bool], Tensor[(432), uint32], Tensor[(6, 4, 14), uint64], Tensor[(28, 1), int8], Tensor[(14, 42), float32], Tensor[(14, 42), float64], Tensor[(3, 7, 16), float64], Tensor[(784), uint16], Tensor[(6, 6, 8), int8]) {
  %834 = fn (%var_12481: int8, %var_12495: Tensor[(14, 42), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(3, 16, 9), bool], Tensor[(432), uint32], Tensor[(6, 4, 14), uint64], Tensor[(28, 1), int8], Tensor[(14, 42), float32], Tensor[(14, 42), float64], Tensor[(3, 7, 16), float64], Tensor[(784), uint16], Tensor[(6, 6, 8), int8]) {
    %789 = @func_5289() /* ty=(Tensor[(288), int8], Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(?, 7, 16), float32]) */;
    %790 = @func_9713() /* ty=(Tensor[(112), float32],) */;
    %791 = cast(meta[relay.Constant][58] /* ty=Tensor[(432), uint32] */, dtype="uint32") /* ty=Tensor[(432), uint32] */;
    %792 = reshape(%791, newshape=[3, 16, 9]) /* ty=Tensor[(3, 16, 9), uint32] */;
    %793 = @func_6262(%792) /* ty=(Tensor[(3, 16, 9), bool], Tensor[(?, 7, 16), float32]) */;
    %794 = cast(%var_12481, dtype="int8") /* ty=int8 */;
    %795 = cast(meta[relay.Constant][59] /* ty=Tensor[(28, 1), int8] */, dtype="int8") /* ty=Tensor[(28, 1), int8] */;
    %796 = reshape(%794, newshape=[]) /* ty=int8 */;
    %797 = reshape(%795, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
    %798 = @func_3356(%796, %797) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
    %799 = @func_10992() /* ty=(Tensor[(14, 42), float64],) */;
    %800 = %799.0;
    %801 = cast(%800, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
    %802 = asinh(%801) /* ty=Tensor[(14, 42), float32] */;
    %803 = cast(%800, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(2), int32] */;
    %805 = cast(%802, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %807 = mod(%805, %806) /* ty=Tensor[(14, 42), float64] */;
    %808 = cast(%var_12495, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(2), int32] */;
    %810 = cast(%807, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %812 = power(%810, %811) /* ty=Tensor[(14, 42), float64] */;
    %813 = cast(%812, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
    %814 = cast(%802, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %815 = cast(%var_12481, dtype="float64") /* ty=float64 */;
    %816 = %798.1;
    %817 = cast(%816, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
    %818 = cast(%800, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
    %819 = reshape(%817, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
    %820 = reshape(%818, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %821 = @func_4325(%819, %820) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
    %822 = %821.0;
    %823 = cast(%822, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
    %824 = reshape(%823, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %825 = @func_8250(%824) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) */;
    %826 = @func_11331() /* ty=(Tensor[(6, 6, 8), int8],) */;
    %827 = %789.1;
    %828 = %790.0;
    %829 = %793.0;
    %830 = acosh(%813) /* ty=Tensor[(14, 42), float32] */;
    %831 = floor_mod(%814, %815) /* ty=Tensor[(14, 42), float64] */;
    %832 = %825.1;
    %833 = %826.0;
    (%827, %828, %829, meta[relay.Constant][58] /* ty=Tensor[(432), uint32] */, %816, meta[relay.Constant][59] /* ty=Tensor[(28, 1), int8] */, %830, %831, %822, %832, %833)
  };
  %834(%var_12520, %var_12521) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(112), float32], Tensor[(3, 16, 9), bool], Tensor[(432), uint32], Tensor[(6, 4, 14), uint64], Tensor[(28, 1), int8], Tensor[(14, 42), float32], Tensor[(14, 42), float64], Tensor[(3, 7, 16), float64], Tensor[(784), uint16], Tensor[(6, 6, 8), int8]) */
}

def @func_8250(%var_8209: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(784), uint16], Tensor[(336), float32], Tensor[(294, 2), int64]) {
  %835 = cast(%var_8209, dtype="float32") /* ty=Tensor[(336), float32] */;
  %836 = cast(meta[relay.Constant][60] /* ty=Tensor[(294, 2), int64] */, dtype="int64") /* ty=Tensor[(294, 2), int64] */;
  %837 = reshape(%835, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %838 = reshape(%836, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %839 = @func_4325(%837, %838) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %840 = @func_6943() /* ty=Tensor[(?, 7, 16), float64] */;
  %841 = %839.5;
  (%840, %841, %var_8209, meta[relay.Constant][60] /* ty=Tensor[(294, 2), int64] */)
}

def @func_12926() -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
  %846 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
    %842 = @func_9412() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %843 = @func_10853() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(588), bool]) */;
    %844 = %842.0;
    %845 = %843.1;
    (%844, %845)
  };
  %846() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(588), bool]) */
}

def @func_5023() -> Tensor[(6, 6, 8), int8] {
  @func_5021() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_13101() -> Tensor[(6, 6, 8), int8] {
  %847 = @func_11744() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) */;
  %847.0
}

def @func_8337() -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) {
  @func_8335() /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(112), float32], Tensor[(336), uint64]) */
}

def @func_4601() -> (Tensor[(1, 7, 16), float32],) {
  %850 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %848 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %849 = %848.0;
    (%849,)
  };
  %850() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_9687() -> Tensor[(1, 7, 16), float32] {
  %852 = fn () -> Tensor[(1, 7, 16), float32] {
    %851 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
    %851.1
  };
  %852() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_4272(%var_4270: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) {
  @func_4269(%var_4270) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) */
}

def @func_1793(%var_1791: Tensor[(1, 3, 1), float64]) -> Tensor[(8, 3, 12), uint16] {
  @func_1790(%var_1791) /* ty=Tensor[(8, 3, 12), uint16] */
}

def @func_4194() -> (Tensor[(1, 7, 16), float32],) {
  %855 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %853 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %854 = %853.0;
    (%854,)
  };
  %855() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_12202() -> Tensor[(336), uint64] {
  %856 = @func_10762() /* ty=(Tensor[(336), uint64],) */;
  %856.0
}

def @func_8480() -> Tensor[(336), uint64] {
  @func_8478() /* ty=Tensor[(336), uint64] */
}

def @func_13715() -> (Tensor[(1, 7, 16), float64], int8, Tensor[(1, 7, 16), float32]) {
  @func_13713() /* ty=(Tensor[(1, 7, 16), float64], int8, Tensor[(1, 7, 16), float32]) */
}

def @func_1891(%var_1879: Tensor[(336), uint64], %var_1882: Tensor[(4, 6, 3), bool]) -> (Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) {
  %857 = cast(10 /* ty=int32 */, dtype="uint64") /* ty=uint64 */;
  %858 = cast(%var_1879, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %859 = reshape(%857, newshape=[]) /* ty=uint64 */;
  %860 = reshape(%858, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %861 = @func_1809(%859, %860) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %862 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %863 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 6, 3), int32] */, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %864 = greater(%862, %863) /* ty=Tensor[(4, 6, 3), bool] */;
  %865 = cast(%var_1882, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %869 = %861.0;
  %870 = bitwise_or(%867, %868) /* ty=Tensor[(4, 6, 3), uint32] */;
  (%869, %var_1879, %870)
}

def @func_7457() -> (Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  @func_7455() /* ty=(Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */
}

def @func_11332() -> (Tensor[(6, 6, 8), int8],) {
  %873 = fn () -> (Tensor[(6, 6, 8), int8],) {
    %871 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
    %872 = %871.1;
    (%872,)
  };
  %873() /* ty=(Tensor[(6, 6, 8), int8],) */
}

def @func_6562() -> Tensor[(1, 7, 16), float32] {
  @func_6560() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_4023() -> (Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) {
  %874 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %875 = cast(meta[relay.Constant][62] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %876 = cast(meta[relay.Constant][63] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %877 = reshape(%875, newshape=[]) /* ty=uint64 */;
  %878 = reshape(%876, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint64] */;
  %879 = @func_1809(%877, %878) /* ty=(Tensor[(6, 4, 14), uint64],) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %882 = cast(meta[relay.Constant][64] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %883 = reshape(%882, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
  %884 = @func_2430(%883) /* ty=(Tensor[(6, 6, 8), int8],) */;
  %885 = %874.0;
  %886 = exp(%881) /* ty=Tensor[(6, 4, 14), float64] */;
  %887 = %884.0;
  (%885, meta[relay.Constant][62] /* ty=uint64 */, meta[relay.Constant][63] /* ty=Tensor[(336), uint64] */, %886, %887, meta[relay.Constant][64] /* ty=Tensor[(288), int8] */)
}

def @func_4328(%var_4326: Tensor[(3, 7, 16), float32], %var_4327: Tensor[(588), int64]) -> (Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) {
  %907 = fn (%var_4292: Tensor[(3, 7, 16), float32], %var_4322: Tensor[(588), int64]) -> (Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) {
    %888 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %889 = %888.0;
    %890 = cast(%889, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    %891 = cast(%var_4292, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
    %892 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
    %893 = reshape(%892, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), int8] */;
    %894 = @func_2430(%893) /* ty=(Tensor[(6, 6, 8), int8],) */;
    %895 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
    %896 = cast(%889, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
    %897 = cast(meta[relay.Constant][66] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
    %898 = cast(%var_4322, dtype="int64") /* ty=Tensor[(588), int64] */;
    %899 = reshape(%896, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
    %900 = reshape(%897, newshape=[784]) /* ty=Tensor[(784), uint16] */;
    %901 = reshape(%898, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
    %902 = @func_1113(%899, %900, %901) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
    %903 = power(%890, %891) /* ty=Tensor[(3, 7, 16), float64] */;
    %904 = %894.0;
    %905 = %895.0;
    %906 = %902.0;
    (%903, %904, meta[relay.Constant][65] /* ty=Tensor[(288), int8] */, %905, %906, meta[relay.Constant][66] /* ty=Tensor[(784), uint16] */, %var_4322)
  };
  %907(%var_4326, %var_4327) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */
}

def @func_9468() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) {
  %911 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) {
    %908 = @func_5860() /* ty=(Tensor[(1, 7, 16), float64],) */;
    %909 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %910 = %908.0;
    (%909, %910)
  };
  %911() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) */
}

def @func_9790() -> Tensor[(?, 7, 16), float64] {
  @func_6943() /* ty=Tensor[(?, 7, 16), float64] */
}

def @func_8695() -> (Tensor[(6, 6, 8), float32], Tensor[(?, 7, 16), float32]) {
  %912 = @func_6449() /* ty=(Tensor[(6, 6, 8), float32],) */;
  %913 = %912.0;
  %914 = @func_5770() /* ty=Tensor[(?, 7, 16), float32] */;
  (%913, %914)
}

def @func_7295() -> (Tensor[(336), uint64], Tensor[(6, 6, 8), bool]) {
  %915 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
  %916 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %917 = %916.0;
  %918 = cast(meta[relay.Constant][67] /* ty=Tensor[(6, 6, 8), int8] */, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%917, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = %915.0;
  %923 = less(%920, %921) /* ty=Tensor[(6, 6, 8), bool] */;
  (%922, %923)
}

def @func_6034(%var_6032: Tensor[(28), int8], %var_6033: Tensor[(448), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) {
  @func_6030(%var_6032, %var_6033) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) */
}

def @func_6758() -> (Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) {
  @func_6756() /* ty=(Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) */
}

def @func_6030(%var_6013: Tensor[(28), int8], %var_6014: Tensor[(448), float64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], int8, Tensor[(1008), float64], Tensor[(28), int8], Tensor[(448), float64]) {
  %924 = @func_5680() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %925 = cast(meta[relay.Constant][68] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %926 = cast(%var_6013, dtype="int8") /* ty=Tensor[(28), int8] */;
  %927 = cast(%var_6014, dtype="float64") /* ty=Tensor[(448), float64] */;
  %928 = reshape(%925, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float64] */;
  %929 = reshape(%926, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %930 = reshape(%927, newshape=[4, 7, 16]) /* ty=Tensor[(4, 7, 16), float64] */;
  %931 = @func_5525(%928, %929, %930) /* ty=(Tensor[(9, 7, 16), bool], Tensor[(336), uint64], int8, Tensor[(28), int8], Tensor[(4, 7, 16), int16]) */;
  %932 = %924.0;
  %933 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  %934 = %931.2;
  (%932, %933, %934, meta[relay.Constant][68] /* ty=Tensor[(1008), float64] */, %var_6013, %var_6014)
}

def @func_168(%var_136: Tensor[(8, 7, 14), uint16], %var_151: Tensor[(588), int64]) -> (Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) {
  %935 = cast(meta[relay.Constant][69] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %936 = cast(%var_136, dtype="uint16") /* ty=Tensor[(8, 7, 14), uint16] */;
  %937 = cast(%var_136, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %938 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %939 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %940 = reshape(%938, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %941 = reshape(%939, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %942 = @func_123(%940, %941) /* ty=Tensor[(6, 7, 14), bool] */;
  %943 = cast(%942, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %944 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %945 = reshape(%943, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %946 = reshape(%944, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %947 = @func_123(%945, %946) /* ty=Tensor[(6, 7, 14), bool] */;
  %948 = cast(%947, dtype="int64") /* ty=Tensor[(6, 7, 14), int64] */;
  %949 = cast(%var_151, dtype="int64") /* ty=Tensor[(588), int64] */;
  %950 = reshape(%948, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %951 = reshape(%949, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %952 = left_shift(%935, %936) /* ty=Tensor[(8, 7, 14), uint16] */;
  %953 = sigmoid(%937) /* ty=Tensor[(8, 7, 14), float64] */;
  %954 = @func_123(%950, %951) /* ty=Tensor[(6, 7, 14), bool] */;
  (%952, %953, %942, %var_151, %947, %954)
}

def @func_6897() -> (Tensor[(1, 7, 16), float32],) {
  %956 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %955 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    (%955,)
  };
  %956() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_4705() -> (Tensor[(1, 7, 16), float32],) {
  %959 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %957 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
    %958 = %957.1;
    (%958,)
  };
  %959() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_8993(%var_8991: Tensor[(5, 14, 4), float32], %var_8992: Tensor[(784, 1), uint16]) -> (Tensor[(5, 14, 4), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(784, 1), uint16], Tensor[(588), int64]) {
  @func_8989(%var_8991, %var_8992) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(784, 1), uint16], Tensor[(588), int64]) */
}

def @func_12673() -> Tensor[(1, 7, 16), float32] {
  %961 = fn () -> Tensor[(1, 7, 16), float32] {
    %960 = @func_9542() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */;
    %960.1
  };
  %961() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_10182() -> (Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) {
  %962 = @func_6765() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %963 = @func_9467() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float64]) */;
  %964 = %963.1;
  %965 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %966 = %965.1;
  %967 = cast(%966, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %968 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%964, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %971 = %962.0;
  %972 = equal(%969, %970) /* ty=Tensor[(?, 7, 16), bool] */;
  %973 = @func_9790() /* ty=Tensor[(?, 7, 16), float64] */;
  (%971, %972, %973)
}

def @func_13598() -> (Tensor[(?, 7, 16), float64],) {
  %975 = fn () -> (Tensor[(?, 7, 16), float64],) {
    %974 = @func_9790() /* ty=Tensor[(?, 7, 16), float64] */;
    (%974,)
  };
  %975() /* ty=(Tensor[(?, 7, 16), float64],) */
}

def @func_3957() -> (Tensor[(1, 7, 16), float32],) {
  @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_12742() -> (Tensor[(28), int8], Tensor[(1008), float64], Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32]) {
  @func_12740() /* ty=(Tensor[(28), int8], Tensor[(1008), float64], Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32]) */
}

def @func_8168(%var_8166: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float32], Tensor[(1, 336), float32], Tensor[(336), float32], Tensor[(?, 7, 16), int8]) {
  @func_8165(%var_8166) /* ty=(Tensor[(?, 7, 16), float32], Tensor[(1, 336), float32], Tensor[(336), float32], Tensor[(?, 7, 16), int8]) */
}

def @func_12279() -> Tensor[(1, 7, 16), float32] {
  @func_12277() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_11636(%var_11635: Tensor[(14, 42), int64]) -> (Tensor[(336), uint64], Tensor[(14, 42), float64], Tensor[(14, 42), float64]) {
  %989 = fn (%var_11614: Tensor[(14, 42), int64]) -> (Tensor[(336), uint64], Tensor[(14, 42), float64], Tensor[(14, 42), float64]) {
    %976 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
    %977 = cast(%var_11614, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %978 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
    %979 = %978.3;
    %980 = cast(%var_11614, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
    %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(2), int32] */;
    %982 = cast(%979, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
    %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %984 = divide(%982, %983) /* ty=Tensor[(14, 42), float32] */;
    %985 = cast(%984, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
    %986 = %976.0;
    %987 = cosh(%977) /* ty=Tensor[(14, 42), float64] */;
    %988 = acos(%985) /* ty=Tensor[(14, 42), float64] */;
    (%986, %987, %988)
  };
  %989(%var_11635) /* ty=(Tensor[(336), uint64], Tensor[(14, 42), float64], Tensor[(14, 42), float64]) */
}

def @func_6330() -> (Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) {
  @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */
}

def @func_5119() -> Tensor[(336), uint64] {
  @func_4990() /* ty=Tensor[(336), uint64] */
}

def @func_9714() -> (Tensor[(112), float32],) {
  %992 = fn () -> (Tensor[(112), float32],) {
    %990 = @func_5229() /* ty=(Tensor[(112), float32],) */;
    %991 = %990.0;
    (%991,)
  };
  %992() /* ty=(Tensor[(112), float32],) */
}

def @func_239(%var_238: Tensor[(1, 4, 5), uint32]) -> (Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) {
  %1001 = fn (%var_221: Tensor[(1, 4, 5), uint32]) -> (Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) {
    %993 = cast(%var_221, dtype="bool") /* ty=Tensor[(1, 4, 5), bool] */;
    %994 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 4, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 4, 5), bool] */;
    %995 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 42), int64] */, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
    %996 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 42), int64] */, dtype="int64") /* ty=Tensor[(14, 42), int64] */;
    %997 = reshape(%995, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %998 = reshape(%996, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
    %999 = greater(%993, %994) /* ty=Tensor[(7, 4, 5), bool] */;
    %1000 = @func_123(%997, %998) /* ty=Tensor[(6, 7, 14), bool] */;
    (%999, %1000, meta[relay.Constant][71] /* ty=Tensor[(14, 42), int64] */)
  };
  %1001(%var_238) /* ty=(Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) */
}

def @func_5860() -> (Tensor[(1, 7, 16), float64],) {
  %1002 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  (%1002,)
}

def @func_11260(%var_11246: Tensor[(784), uint16], %var_11247: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(784), uint16], Tensor[(588), int64]) {
  %1003 = @func_9360() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
  %1004 = cast(%var_11246, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1005 = cast(%var_11247, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1006 = reshape(%1004, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %1007 = reshape(%1005, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1008 = @func_8118(%1006, %1007) /* ty=(Tensor[(1, 448), float64], Tensor[(6, 4, 14), float64], Tensor[(660), uint16], Tensor[(784), uint16], Tensor[(588), int64]) */;
  %1009 = %1003.0;
  %1010 = %1008.4;
  (%1009, %1010, %var_11246, %var_11247)
}

def @func_7656(%var_7653: Tensor[(8, 7, 7), float64], %var_7654: Tensor[(588), int64], %var_7655: Tensor[(588), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(288), int8], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), uint8], Tensor[(336), uint64]) {
  %1030 = fn (%var_7606: Tensor[(8, 7, 7), float64], %var_7633: Tensor[(588), int64], %var_7641: Tensor[(588), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(288), int8], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), uint8], Tensor[(336), uint64]) {
    %1011 = cast(%var_7606, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
    %1012 = @func_4665() /* ty=(Tensor[(288), int8],) */;
    %1013 = @func_4704() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1014 = cast(%var_7633, dtype="int64") /* ty=Tensor[(588), int64] */;
    %1015 = reshape(%1014, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %1016 = @func_4269(%1015) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) */;
    %1017 = cast(%var_7633, dtype="float64") /* ty=Tensor[(588), float64] */;
    %1018 = acos(%1017) /* ty=Tensor[(588), float64] */;
    %1019 = cast(%var_7641, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1021 = cast(%1018, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1023 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
    %1024 = tan(%1011) /* ty=Tensor[(8, 7, 7), float64] */;
    %1025 = %1012.0;
    %1026 = %1013.0;
    %1027 = %1016.2;
    %1028 = left_shift(%1021, %1022) /* ty=Tensor[(588), uint8] */;
    %1029 = %1023.1;
    (%1024, %1025, %1026, %1027, %1028, %1029)
  };
  %1030(%var_7653, %var_7654, %var_7655) /* ty=(Tensor[(8, 7, 7), float64], Tensor[(288), int8], Tensor[(1, 7, 16), float32], Tensor[(588), int64], Tensor[(588), uint8], Tensor[(336), uint64]) */
}

def @func_10955() -> Tensor[(6, 6, 8), int8] {
  %1031 = @func_6704() /* ty=(Tensor[(6, 6, 8), int8],) */;
  %1031.0
}

def @func_12144(%var_12098: Tensor[(1, 9, 12), uint64], %var_12105: Tensor[(660, 1), uint16], %var_12107: Tensor[(588), int64], %var_12110: Tensor[(11, 9, 12), uint64]) -> (Tensor[(1, 9, 12), uint64], Tensor[(1, 7, 16), float32], Tensor[(660, 1), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(11, 9, 12), float64], Tensor[(2, 504), float32], Tensor[(1008), float64]) {
  %1032 = cast(meta[relay.Constant][72] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1033 = cast(%var_12098, dtype="uint64") /* ty=Tensor[(1, 9, 12), uint64] */;
  %1034 = cast(%var_12105, dtype="uint16") /* ty=Tensor[(660, 1), uint16] */;
  %1035 = cast(meta[relay.Constant][73] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1036 = cast(%var_12107, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1037 = reshape(%1034, newshape=[11, 10, 6]) /* ty=Tensor[(11, 10, 6), uint16] */;
  %1038 = reshape(%1035, newshape=[392, 2]) /* ty=Tensor[(392, 2), uint16] */;
  %1039 = reshape(%1036, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1040 = @func_4510(%1037, %1038, %1039) /* ty=(Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) */;
  %1041 = cast(%var_12098, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
  %1042 = cast(%var_12110, dtype="float64") /* ty=Tensor[(11, 9, 12), float64] */;
  %1043 = cast(meta[relay.Constant][74] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1044 = cast(meta[relay.Constant][74] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1045 = reshape(%1043, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %1046 = reshape(%1044, newshape=[2, 504]) /* ty=Tensor[(2, 504), float64] */;
  %1047 = @func_8004(%1045, %1046) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(28), int8], Tensor[(28), int8], Tensor[(448), float64], Tensor[(2, 504), bool], Tensor[(1, 7, 16), float32], Tensor[(2, 504), float32]) */;
  %1048 = maximum(%1032, %1033) /* ty=Tensor[(1, 9, 12), uint64] */;
  %1049 = %1040.1;
  %1050 = floor_mod(%1041, %1042) /* ty=Tensor[(11, 9, 12), float64] */;
  %1051 = %1047.6;
  (%1048, %1049, %var_12105, meta[relay.Constant][73] /* ty=Tensor[(784), uint16] */, %var_12107, %1050, %1051, meta[relay.Constant][74] /* ty=Tensor[(1008), float64] */)
}

def @func_11525() -> Tensor[(1, 7, 16), float32] {
  @func_11523() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_5577(%var_5575: int8, %var_5576: Tensor[(28), int8]) -> (Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) {
  @func_5573(%var_5575, %var_5576) /* ty=(Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) */
}

def @func_2433(%var_2431: Tensor[(6, 6, 8), int8]) -> (Tensor[(6, 6, 8), int8],) {
  @func_2430(%var_2431) /* ty=(Tensor[(6, 6, 8), int8],) */
}

def @func_5573(%var_5560: int8, %var_5561: Tensor[(28), int8]) -> (Tensor[(6, 12), bool], int8, Tensor[(28), int8], Tensor[(14, 42), float32]) {
  %1052 = cast(%var_5560, dtype="int8") /* ty=int8 */;
  %1053 = cast(%var_5561, dtype="int8") /* ty=Tensor[(28), int8] */;
  %1054 = reshape(%1052, newshape=[]) /* ty=int8 */;
  %1055 = reshape(%1053, newshape=[1, 14, 2]) /* ty=Tensor[(1, 14, 2), int8] */;
  %1056 = @func_3356(%1054, %1055) /* ty=(Tensor[(1, 14, 2), bool], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(6, 12), bool]) */;
  %1057 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %1058 = %1057.3;
  %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(14, 42), float32] */;
  %1060 = %1056.3;
  %1061 = exp(%1059) /* ty=Tensor[(14, 42), float32] */;
  (%1060, %var_5560, %var_5561, %1061)
}

def @func_10184() -> (Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) {
  @func_10182() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) */
}

def @func_7681(%var_7679: Tensor[(4, 6, 12), float64]) -> (Tensor[(4, 6, 12), float64], Tensor[(6, 6, 8), int8]) {
  @func_7678(%var_7679) /* ty=(Tensor[(4, 6, 12), float64], Tensor[(6, 6, 8), int8]) */
}

def @func_10280(%var_10264: Tensor[(10, 8, 6), int64], %var_10265: Tensor[(10, 8, 6), int64]) -> (Tensor[(10, 8, 6), bool], Tensor[(1, 7, 16), float32]) {
  %1062 = cast(%var_10265, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %1063 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%var_10264, dtype="bool") /* ty=Tensor[(10, 8, 6), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = greater_equal(%1064, %1065) /* ty=Tensor[(10, 8, 6), bool] */;
  %1067 = @func_8589() /* ty=Tensor[(1, 7, 16), float32] */;
  (%1066, %1067)
}

def @func_8772() -> (Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) {
  @func_8770() /* ty=(Tensor[(288), int8], Tensor[(?, 7, 16), float64], Tensor[(336), float32]) */
}

def @func_7678(%var_7666: Tensor[(4, 6, 12), float64]) -> (Tensor[(4, 6, 12), float64], Tensor[(6, 6, 8), int8]) {
  %1068 = cast(%var_7666, dtype="float64") /* ty=Tensor[(4, 6, 12), float64] */;
  %1069 = atan(%1068) /* ty=Tensor[(4, 6, 12), float64] */;
  %1070 = @func_5021() /* ty=Tensor[(6, 6, 8), int8] */;
  (%1069, %1070)
}

def @func_6766() -> (Tensor[(1, 7, 16), float32],) {
  %1073 = fn () -> (Tensor[(1, 7, 16), float32],) {
    %1071 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1072 = %1071.0;
    (%1072,)
  };
  %1073() /* ty=(Tensor[(1, 7, 16), float32],) */
}

def @func_8827() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
  %1077 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) {
    %1074 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1075 = @func_6560() /* ty=Tensor[(1, 7, 16), float32] */;
    %1076 = %1074.0;
    (%1075, %1076)
  };
  %1077() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */
}

def @func_13941() -> Tensor[(112), float32] {
  %1079 = fn () -> Tensor[(112), float32] {
    %1078 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
    %1078.2
  };
  %1079() /* ty=Tensor[(112), float32] */
}

def @func_4666() -> (Tensor[(288), int8],) {
  %1082 = fn () -> (Tensor[(288), int8],) {
    %1080 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
    %1081 = %1080.5;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(288), int8],) */
}

def @func_7025() -> Tensor[(6, 6, 8), int8] {
  %1083 = fn () -> Tensor[(6, 6, 8), int8] {
    @func_5021() /* ty=Tensor[(6, 6, 8), int8] */
  };
  %1083() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_11746() -> (Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) {
  @func_11744() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), int8]) */
}

def @func_7920() -> (Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) {
  @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */
}

def @func_4510(%var_4464: Tensor[(11, 10, 6), uint16], %var_4505: Tensor[(392, 2), uint16], %var_4506: Tensor[(588), int64]) -> (Tensor[(11, 10, 6), uint16], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(392, 2), uint16], Tensor[(588), int64], Tensor[(6, 4, 14), float64]) {
  %1084 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(11, 10, 6), uint16] */;
  %1085 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(11, 10, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1086 = cast(meta[relay.Constant][75] /* ty=Tensor[(11, 10, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 6), uint16] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1088 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1089 = cast(%var_4505, dtype="uint16") /* ty=Tensor[(392, 2), uint16] */;
  %1090 = cast(%var_4506, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1091 = reshape(%1089, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %1092 = reshape(%1090, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1093 = @func_168(%1091, %1092) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %1094 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %1095 = maximum(%1086, %1087) /* ty=Tensor[(11, 10, 6), uint16] */;
  %1096 = %1088.0;
  %1097 = %1093.4;
  %1098 = %1094.3;
  (%1095, %1096, %1097, %var_4505, %var_4506, %1098)
}

def @func_7918() -> (Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) {
  %1099 = @func_5370() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */;
  %1100 = %1099.3;
  %1101 = cast(%1100, dtype="float64") /* ty=Tensor[(14, 42), float64] */;
  %1102 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1103 = sqrt(%1101) /* ty=Tensor[(14, 42), float64] */;
  %1104 = %1102.0;
  (%1103, %1104)
}

def @func_6756() -> (Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) {
  %1105 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %1106 = @func_4235() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32]) */;
  %1107 = %1105.3;
  %1108 = %1106.0;
  (%1107, %1108)
}

def @func_1118(%var_1115: Tensor[(4, 4, 7), float32], %var_1116: Tensor[(784), uint16], %var_1117: Tensor[(588, 1), int64]) -> (Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) {
  @func_1113(%var_1115, %var_1116, %var_1117) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */
}

def @func_6328() -> (Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) {
  %1109 = @func_5965() /* ty=(Tensor[(112), float32],) */;
  %1110 = %1109.0;
  %1111 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %1112 = @func_4990() /* ty=Tensor[(336), uint64] */;
  (%1110, %1111, %1112)
}

def @func_13982() -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
  %1121 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) {
    %1113 = @func_10182() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), bool], Tensor[(?, 7, 16), float64]) */;
    %1114 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1115 = cast(meta[relay.Constant][76] /* ty=Tensor[(156), bool] */, dtype="bool") /* ty=Tensor[(156), bool] */;
    %1116 = reshape(%1114, newshape=[]) /* ty=bool */;
    %1117 = reshape(%1115, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), bool] */;
    %1118 = @func_6639(%1116, %1117) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 13, 12), bool], Tensor[(1, 7, 16), float32]) */;
    %1119 = %1113.0;
    %1120 = %1118.2;
    (%1119, %1120, False /* ty=bool */, meta[relay.Constant][76] /* ty=Tensor[(156), bool] */)
  };
  %1121() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32], bool, Tensor[(156), bool]) */
}

def @func_5121() -> Tensor[(336), uint64] {
  @func_5119() /* ty=Tensor[(336), uint64] */
}

def @func_8165(%var_8155: Tensor[(336), float32]) -> (Tensor[(?, 7, 16), float32], Tensor[(1, 336), float32], Tensor[(336), float32], Tensor[(?, 7, 16), int8]) {
  %1122 = @func_7053() /* ty=(Tensor[(?, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(28), int8], Tensor[(1, 448), float64], uint64, Tensor[(8, 3, 12), uint16], Tensor[(3, 1), float64]) */;
  %1123 = cast(%var_8155, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1124 = reshape(%1123, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
  %1125 = @func_4752(%1124) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(3, 7, 16), float64], Tensor[(1, 336), float32], Tensor[(588), int64]) */;
  %1126 = @func_7788() /* ty=(Tensor[(?, 7, 16), int8], Tensor[(?, 7, 16), int8], Tensor[(1, 7, 16), float32], Tensor[(384), int32], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(?, 7, 16), float64], Tensor[(338), float64], Tensor[(784), uint16]) */;
  %1127 = %1122.0;
  %1128 = %1125.2;
  %1129 = %1126.0;
  (%1127, %1128, %var_8155, %1129)
}

def @func_11523() -> Tensor[(1, 7, 16), float32] {
  @func_8589() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_8655() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %1133 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
    %1130 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1131 = %1130.0;
    %1132 = @func_8478() /* ty=Tensor[(336), uint64] */;
    (%1131, %1132)
  };
  %1133() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */
}

def @func_10530(%var_10529: Tensor[(1, 588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), float32], Tensor[(588), float32]) {
  %1146 = fn (%var_10519: Tensor[(1, 588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(336), float32], Tensor[(588), float32]) {
    %1134 = cast(meta[relay.Constant][77] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %1135 = cast(%var_10519, dtype="int64") /* ty=Tensor[(1, 588), int64] */;
    %1136 = reshape(%1134, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
    %1137 = reshape(%1135, newshape=[588]) /* ty=Tensor[(588), int64] */;
    %1138 = @func_4325(%1136, %1137) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8], Tensor[(336), uint64], Tensor[(4, 4, 7), float32], Tensor[(784), uint16], Tensor[(588), int64]) */;
    %1139 = %1138.6;
    %1140 = cast(%var_10519, dtype="float32") /* ty=Tensor[(1, 588), float32] */;
    %1141 = shape_of(%1139, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1142 = cast(%1139, dtype="float32") /* ty=Tensor[(588), float32] */;
    %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1144 = @func_4811() /* ty=Tensor[(1, 7, 16), float32] */;
    %1145 = floor_divide(%1142, %1143) /* ty=Tensor[(588), float32] */;
    (%1144, meta[relay.Constant][77] /* ty=Tensor[(336), float32] */, %1145)
  };
  %1146(%var_10529) /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), float32], Tensor[(588), float32]) */
}

def @func_5770() -> Tensor[(?, 7, 16), float32] {
  %1147 = @func_4838() /* ty=Tensor[(1, 7, 16), float64] */;
  %1148 = cast(%1147, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
  %1149 = atanh(%1148) /* ty=Tensor[(1, 7, 16), float64] */;
  %1150 = cast(%1147, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1152 = cast(%1149, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1152, %1153) /* ty=Tensor[(?, 7, 16), float32] */
}

def @func_10853() -> (Tensor[(1, 7, 16), float32], Tensor[(588), bool]) {
  %1154 = @func_5171() /* ty=(Tensor[(6, 6, 8), int8], Tensor[(20), uint32], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), bool], Tensor[(336), uint64]) */;
  %1155 = @func_9289() /* ty=Tensor[(1, 7, 16), float32] */;
  %1156 = %1154.4;
  (%1155, %1156)
}

def @func_5965() -> (Tensor[(112), float32],) {
  %1157 = @func_5229() /* ty=(Tensor[(112), float32],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_9030() -> Tensor[(6, 4, 14), float64] {
  %1160 = fn () -> Tensor[(6, 4, 14), float64] {
    %1159 = @func_6756() /* ty=(Tensor[(6, 4, 14), float64], Tensor[(?, 7, 16), int8]) */;
    %1159.0
  };
  %1160() /* ty=Tensor[(6, 4, 14), float64] */
}

def @func_7415() -> Tensor[(?, 7, 16), int8] {
  @func_7413() /* ty=Tensor[(?, 7, 16), int8] */
}

def @func_1113(%var_1054: Tensor[(4, 4, 7), float32], %var_1089: Tensor[(784), uint16], %var_1090: Tensor[(588, 1), int64]) -> (Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) {
  %1161 = cast(%var_1054, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %1162 = cast(%var_1089, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1163 = cast(%var_1090, dtype="int64") /* ty=Tensor[(588, 1), int64] */;
  %1164 = reshape(%1162, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint16] */;
  %1165 = reshape(%1163, newshape=[588]) /* ty=Tensor[(588), int64] */;
  %1166 = @func_168(%1164, %1165) /* ty=(Tensor[(8, 7, 14), uint16], Tensor[(8, 7, 14), float64], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), bool]) */;
  %1167 = cast(meta[relay.Constant][78] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %1168 = reshape(%1167, newshape=[20]) /* ty=Tensor[(20), uint32] */;
  %1169 = @func_875(%1168) /* ty=(Tensor[(13, 8, 11), int8], Tensor[(8, 7, 14), uint16], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(6, 7, 14), bool], Tensor[(20), uint32]) */;
  %1170 = acos(%1161) /* ty=Tensor[(4, 4, 7), float32] */;
  %1171 = %1166.4;
  %1172 = %1169.0;
  (%1170, %1171, %var_1089, %var_1090, %1172, meta[relay.Constant][78] /* ty=Tensor[(20), uint32] */)
}

def @func_8697() -> (Tensor[(6, 6, 8), float32], Tensor[(?, 7, 16), float32]) {
  @func_8695() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(?, 7, 16), float32]) */
}

def @func_10726(%var_10724: Tensor[(780), float32], %var_10725: Tensor[(780), float32]) -> (Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(780), uint16]) {
  @func_10722(%var_10724, %var_10725) /* ty=(Tensor[(?, 7, 16), float64], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(6, 6, 8), int8], Tensor[(780), uint16]) */
}

def @func_10763() -> (Tensor[(336), uint64],) {
  %1174 = fn () -> (Tensor[(336), uint64],) {
    %1173 = @func_4990() /* ty=Tensor[(336), uint64] */;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(336), uint64],) */
}

def @func_13507() -> (Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) {
  %1178 = fn () -> (Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) {
    %1175 = @func_7511() /* ty=(Tensor[(336), uint64],) */;
    %1176 = %1175.0;
    %1177 = @func_10955() /* ty=Tensor[(6, 6, 8), int8] */;
    (%1176, %1177)
  };
  %1178() /* ty=(Tensor[(336), uint64], Tensor[(6, 6, 8), int8]) */
}

def @func_12849() -> (Tensor[(16, 9, 7), float32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %1185 = fn () -> (Tensor[(16, 9, 7), float32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
    %1179 = cast(meta[relay.Constant][79] /* ty=Tensor[(16, 1, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 7), float32] */;
    %1180 = cast(meta[relay.Constant][80] /* ty=Tensor[(16, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
    %1181 = @func_8826() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(1, 7, 16), float32]) */;
    %1182 = maximum(%1179, %1180) /* ty=Tensor[(16, 9, 7), float32] */;
    %1183 = %1181.0;
    %1184 = @func_12594() /* ty=Tensor[(336), uint64] */;
    (%1182, %1183, %1184)
  };
  %1185() /* ty=(Tensor[(16, 9, 7), float32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */
}

def @func_8401(%var_8371: Tensor[(588), int64]) -> (Tensor[(336), uint64], Tensor[(336), uint64], Tensor[(112), float32], Tensor[(784), uint16], Tensor[(588), int64], Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), float32]) {
  %1186 = @func_6896() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1187 = cast(meta[relay.Constant][81] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1188 = cast(meta[relay.Constant][82] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1189 = cast(%var_8371, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1190 = reshape(%1187, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %1191 = reshape(%1188, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %1192 = reshape(%1189, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %1193 = @func_1113(%1190, %1191, %1192) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %1194 = %1193.1;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(6, 7, 14), float32] */;
  %1196 = @func_6914() /* ty=Tensor[(336), uint64] */;
  %1197 = @func_5119() /* ty=Tensor[(336), uint64] */;
  %1198 = %1186.0;
  %1199 = log(%1195) /* ty=Tensor[(6, 7, 14), float32] */;
  (%1196, %1197, meta[relay.Constant][81] /* ty=Tensor[(112), float32] */, meta[relay.Constant][82] /* ty=Tensor[(784), uint16] */, %var_8371, %1198, %1199)
}

def @func_8590() -> Tensor[(1, 7, 16), float32] {
  %1201 = fn () -> Tensor[(1, 7, 16), float32] {
    %1200 = @func_4081() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1200.0
  };
  %1201() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_12071(%var_12069: Tensor[(12, 3, 2), uint32], %var_12070: Tensor[(12, 3, 2), uint32]) -> (Tensor[(12, 3, 2), uint32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
  %1211 = fn (%var_12054: Tensor[(12, 3, 2), uint32], %var_12055: Tensor[(12, 3, 2), uint32]) -> (Tensor[(12, 3, 2), uint32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) {
    %1202 = cast(%var_12055, dtype="uint32") /* ty=Tensor[(12, 3, 2), uint32] */;
    %1203 = shape_of(%var_12054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1204 = cast(%var_12054, dtype="uint32") /* ty=Tensor[(12, 3, 2), uint32] */;
    %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1206 = @func_7087() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1207 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
    %1208 = multiply(%1204, %1205) /* ty=Tensor[(12, 3, 2), uint32] */;
    %1209 = %1206.0;
    %1210 = %1207.1;
    (%1208, %1209, %1210)
  };
  %1211(%var_12069, %var_12070) /* ty=(Tensor[(12, 3, 2), uint32], Tensor[(1, 7, 16), float32], Tensor[(336), uint64]) */
}

def @func_10125(%var_10124: Tensor[(72), bool]) -> (Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) {
  %1219 = fn (%var_10099: Tensor[(72), bool]) -> (Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) {
    %1212 = cast(meta[relay.Constant][83] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %1213 = cast(%var_10099, dtype="bool") /* ty=Tensor[(72), bool] */;
    %1214 = reshape(%1212, newshape=[336]) /* ty=Tensor[(336), uint64] */;
    %1215 = reshape(%1213, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), bool] */;
    %1216 = @func_1891(%1214, %1215) /* ty=(Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(4, 6, 3), uint32]) */;
    %1217 = @func_7590() /* ty=Tensor[(?, 7, 16), int8] */;
    %1218 = %1216.0;
    (%1217, %1218, meta[relay.Constant][83] /* ty=Tensor[(336), uint64] */, %var_10099)
  };
  %1219(%var_10124) /* ty=(Tensor[(?, 7, 16), int8], Tensor[(6, 4, 14), uint64], Tensor[(336), uint64], Tensor[(72), bool]) */
}

def @func_9073() -> (Tensor[(6, 6, 8), int8],) {
  @func_9071() /* ty=(Tensor[(6, 6, 8), int8],) */
}

def @func_11140() -> Tensor[(1, 7, 16), float32] {
  @func_11138() /* ty=Tensor[(1, 7, 16), float32] */
}

def @func_4269(%var_4248: Tensor[(588), int64]) -> (Tensor[(1, 7, 16), float32], Tensor[(6, 7, 14), bool], Tensor[(588), int64], Tensor[(588, 1), int64], Tensor[(784), uint16], Tensor[(288), int8]) {
  %1220 = @func_4204() /* ty=(Tensor[(1, 7, 16), float32],) */;
  %1221 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1222 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1223 = reshape(%1221, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %1224 = reshape(%1222, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), int64] */;
  %1225 = %1220.0;
  %1226 = cast(%1225, dtype="float32") /* ty=Tensor[(1, 7, 16), float32] */;
  %1227 = cast(meta[relay.Constant][84] /* ty=Tensor[(784), uint16] */, dtype="uint16") /* ty=Tensor[(784), uint16] */;
  %1228 = cast(%var_4248, dtype="int64") /* ty=Tensor[(588), int64] */;
  %1229 = reshape(%1226, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float32] */;
  %1230 = reshape(%1227, newshape=[784]) /* ty=Tensor[(784), uint16] */;
  %1231 = reshape(%1228, newshape=[588, 1]) /* ty=Tensor[(588, 1), int64] */;
  %1232 = @func_1113(%1229, %1230, %1231) /* ty=(Tensor[(4, 4, 7), float32], Tensor[(6, 7, 14), bool], Tensor[(784), uint16], Tensor[(588, 1), int64], Tensor[(13, 8, 11), int8], Tensor[(20), uint32]) */;
  %1233 = @func_4023() /* ty=(Tensor[(1, 7, 16), float32], uint64, Tensor[(336), uint64], Tensor[(6, 4, 14), float64], Tensor[(6, 6, 8), int8], Tensor[(288), int8]) */;
  %1234 = @func_123(%1223, %1224) /* ty=Tensor[(6, 7, 14), bool] */;
  %1235 = %1232.3;
  %1236 = %1233.5;
  (%1225, %1234, %var_4248, %1235, meta[relay.Constant][84] /* ty=Tensor[(784), uint16] */, %1236)
}

def @func_4839() -> Tensor[(1, 7, 16), float64] {
  %1239 = fn () -> Tensor[(1, 7, 16), float64] {
    %1237 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(1, 7, 16), float64] */;
    asin(%1238) /* ty=Tensor[(1, 7, 16), float64] */
  };
  %1239() /* ty=Tensor[(1, 7, 16), float64] */
}

def @func_12160() -> Tensor[(6, 6, 8), int8] {
  @func_5021() /* ty=Tensor[(6, 6, 8), int8] */
}

def @func_6915() -> Tensor[(336), uint64] {
  %1241 = fn () -> Tensor[(336), uint64] {
    %1240 = @func_6328() /* ty=(Tensor[(112), float32], Tensor[(336), uint64], Tensor[(336), uint64]) */;
    %1240.1
  };
  %1241() /* ty=Tensor[(336), uint64] */
}

def @func_10992() -> (Tensor[(14, 42), float64],) {
  %1242 = @func_7918() /* ty=(Tensor[(14, 42), float64], Tensor[(1, 7, 16), float32]) */;
  %1243 = %1242.0;
  (%1243,)
}

def @func_5371() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) {
  %1253 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) {
    %1244 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1245 = cast(meta[relay.Constant][85] /* ty=Tensor[(10, 2), uint32] */, dtype="uint32") /* ty=Tensor[(10, 2), uint32] */;
    %1246 = reshape(%1245, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), uint32] */;
    %1247 = @func_237(%1246) /* ty=(Tensor[(7, 4, 5), bool], Tensor[(6, 7, 14), bool], Tensor[(14, 42), int64]) */;
    %1248 = @func_4144() /* ty=Tensor[(1, 7, 16), float32] */;
    %1249 = @func_5119() /* ty=Tensor[(336), uint64] */;
    %1250 = %1244.0;
    %1251 = %1247.2;
    %1252 = @func_3910() /* ty=Tensor[(1, 7, 16), float32] */;
    (%1248, %1249, %1250, %1251, meta[relay.Constant][85] /* ty=Tensor[(10, 2), uint32] */, %1252)
  };
  %1253() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32], Tensor[(14, 42), int64], Tensor[(10, 2), uint32], Tensor[(1, 7, 16), float32]) */
}

def @func_5231() -> (Tensor[(112), float32],) {
  @func_5229() /* ty=(Tensor[(112), float32],) */
}

def @func_5909() -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
  %1260 = fn () -> (Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) {
    %1254 = @func_4193() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1255 = @func_4049() /* ty=(Tensor[(336), uint64],) */;
    %1256 = @func_3955() /* ty=(Tensor[(1, 7, 16), float32],) */;
    %1257 = %1254.0;
    %1258 = %1255.0;
    %1259 = %1256.0;
    (%1257, %1258, %1259)
  };
  %1260() /* ty=(Tensor[(1, 7, 16), float32], Tensor[(336), uint64], Tensor[(1, 7, 16), float32]) */
}

def @func_7592() -> Tensor[(?, 7, 16), int8] {
  @func_7590() /* ty=Tensor[(?, 7, 16), int8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_21633(%var_21621: uint64, %var_21628: Tensor[(42), uint16], %var_21629: Tensor[(1, 210), uint16]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(3, 14, 16), bool], uint64, Tensor[(1, 210), uint16], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
  %0 = cast(%var_21621, dtype="uint64") /* ty=uint64 */;
  %1 = reshape(%0, newshape=[]) /* ty=uint64 */;
  %2 = @func_10545(%1) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
  %3 = cast(%var_21628, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %4 = cast(%var_21629, dtype="uint16") /* ty=Tensor[(1, 210), uint16] */;
  %5 = reshape(%3, newshape=[42]) /* ty=Tensor[(42), uint16] */;
  %6 = reshape(%4, newshape=[1, 210]) /* ty=Tensor[(1, 210), uint16] */;
  %7 = @func_16891(%5, %6) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) */;
  %8 = @func_13072() /* ty=Tensor[(4, 9, 14), bool] */;
  %9 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %10 = %2.0;
  %11 = %7.4;
  (%8, %9, %10, %var_21621, %11, %var_21628, %var_21629)
}

def @func_3016(%var_2974: Tensor[(15, 7, 5), int8], %var_2975: Tensor[(15, 7, 5), int8]) -> (Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) {
  %12 = cast(%var_2975, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %13 = shape_of(%var_2974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_2974, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = less_equal(%14, %15) /* ty=Tensor[(15, 7, 5), bool] */;
  %17 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  (%16, %17)
}

def @func_2319() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %18 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %19 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%18, %19)
}

def @func_9307(%var_9298: Tensor[(525), int8]) -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %20 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
  %21 = %20.0;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %23 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %24 = cast(%var_9298, dtype="int8") /* ty=Tensor[(525), int8] */;
  %25 = cast(%var_9298, dtype="int8") /* ty=Tensor[(525), int8] */;
  %26 = reshape(%24, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
  %27 = reshape(%25, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
  %28 = @func_3016(%26, %27) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) */;
  %29 = acosh(%22) /* ty=Tensor[(4, 9, 14), float64] */;
  %30 = %23.1;
  %31 = %28.1;
  (%29, %30, %31, %var_9298)
}

def @func_4477(%var_4451: Tensor[(16, 4), uint64]) -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) {
  %32 = cast(%var_4451, dtype="uint64") /* ty=Tensor[(16, 4), uint64] */;
  %33 = cast(%var_4451, dtype="uint64") /* ty=Tensor[(16, 4), uint64] */;
  %34 = reshape(%32, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), uint64] */;
  %35 = reshape(%33, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), uint64] */;
  %36 = @func_593(%34, %35) /* ty=(Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) */;
  %37 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %38 = %37.0;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %40 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
  %41 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %42 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %43 = %36.3;
  %44 = cos(%39) /* ty=Tensor[(12, 14, 3), float64] */;
  (%40, %41, %42, %43, %var_4451, %44)
}

def @func_10785() -> Tensor[(12, 14, 3), float64] {
  %45 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %45.2
}

def @func_8847() -> (Tensor[(4, 9, 14), float32],) {
  %46 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %47 = %46.1;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %49 = asin(%48) /* ty=Tensor[(4, 9, 14), float32] */;
  (%49,)
}

def @func_5146(%var_5142: Tensor[(4, 10, 12), float32]) -> (Tensor[(4, 10, 12), float32],) {
  %50 = cast(-3.10184f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %51 = cast(%var_5142, dtype="float32") /* ty=Tensor[(4, 10, 12), float32] */;
  %52 = divide(%50, %51) /* ty=Tensor[(4, 10, 12), float32] */;
  (%52,)
}

def @func_15104(%var_15083: Tensor[(396), float32]) -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(22, 64), float64], Tensor[(12, 14, 3), float64], Tensor[(11, 3, 12), float32], Tensor[(396), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %53 = @func_11276() /* ty=(Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %54 = @func_11991() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %55 = %54.0;
  %56 = cast(%55, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %57 = reshape(%56, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %58 = @func_4553(%57) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) */;
  %59 = @func_14677() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) */;
  %60 = %59.1;
  %61 = cast(%60, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %62 = reshape(%61, newshape=[22, 64]) /* ty=Tensor[(22, 64), int64] */;
  %63 = @func_5993(%62) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) */;
  %64 = %63.4;
  %65 = cast(%60, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
  %67 = cast(%64, dtype="float32") /* ty=Tensor[(22, 64), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %69 = floor_mod(%67, %68) /* ty=Tensor[(22, 64), float32] */;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(22, 64), float64] */;
  %71 = @func_13419() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %72 = cast(%var_15083, dtype="float32") /* ty=Tensor[(396), float32] */;
  %73 = reshape(%72, newshape=[11, 3, 12]) /* ty=Tensor[(11, 3, 12), float32] */;
  %74 = @func_12236(%73) /* ty=(Tensor[(11, 3, 12), float32],) */;
  %75 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %76 = %53.0;
  %77 = %58.0;
  %78 = log10(%70) /* ty=Tensor[(22, 64), float64] */;
  %79 = %71.0;
  %80 = %74.0;
  %81 = %75.1;
  %82 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%76, %55, %77, %78, %79, %80, %var_15083, %81, %82)
}

def @func_16847() -> Tensor[(12, 14, 3), float64] {
  @func_2228() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_8043() -> (Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) {
  %83 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %84 = %83.0;
  %85 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
  (%84, %85)
}

def @func_3444() -> (Tensor[(4, 9, 14), bool],) {
  %86 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %87 = %86.1;
  (%87,)
}

def @func_6459() -> (Tensor[(12, 14, 3), float64],) {
  %88 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %89 = %88.0;
  (%89,)
}

def @func_2643() -> (Tensor[(12, 14, 3), float64],) {
  %90 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%90,)
}

def @func_13054() -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float32]) {
  %91 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %92 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %95 = tan(%94) /* ty=Tensor[(11, 5, 3), float32] */;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %97 = %91.0;
  %98 = acos(%96) /* ty=Tensor[(11, 5, 3), float32] */;
  (%97, %98)
}

def @func_22200() -> (Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) {
  %99 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %100 = %99.1;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %102 = reshape(%101, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %103 = @func_16386(%102) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %104 = %103.0;
  %105 = cast(%100, dtype="int32") /* ty=Tensor[(12, 14, 3), int32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int32") /* ty=Tensor[(12, 6, 7), int32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %109 = @func_21449() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %110 = minimum(%107, %108) /* ty=Tensor[(12, 6, 7), int32] */;
  %111 = %109.0;
  (%110, %111)
}

def @func_18426() -> (Tensor[(12, 14, 3), float64],) {
  %112 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %113 = %112.1;
  (%113,)
}

def @func_14850() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1, 1408), float32], Tensor[(1408), int64]) {
  %114 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %115 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %116 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1408), int64] */, dtype="int64") /* ty=Tensor[(1, 1408), int64] */;
  %117 = reshape(%116, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %118 = @func_12498(%117) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) */;
  %119 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %120 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1408), int64] */, dtype="float32") /* ty=Tensor[(1, 1408), float32] */;
  %121 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1408), int64] */, dtype="int64") /* ty=Tensor[(1, 1408), int64] */;
  %122 = reshape(%121, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %123 = @func_4149(%122) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %124 = %114.0;
  %125 = %115.0;
  %126 = %118.0;
  %127 = %119.0;
  %128 = sigmoid(%120) /* ty=Tensor[(1, 1408), float32] */;
  %129 = %123.3;
  (%124, %125, %126, %127, %128, %129)
}

def @func_12541() -> Tensor[(12, 14, 3), float64] {
  %130 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %130.0
}

def @func_22738() -> Tensor[(12, 14, 3), float64] {
  %131 = @func_18132() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %131.2
}

def @func_12024() -> (Tensor[(12, 14, 3), float32],) {
  %132 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  (%132,)
}

def @func_17468() -> Tensor[(12, 14, 3), int64] {
  %133 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %133.0
}

def @func_5043() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  %134 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %137 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %138 = atanh(%136) /* ty=Tensor[(12, 14, 3), float32] */;
  %139 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %140 = %137.2;
  (%138, %139, %140)
}

def @func_5596() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %141 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %142 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  (%141, %142)
}

def @func_9749() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_10741() -> (Tensor[(12, 14, 3), float32],) {
  %143 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %144 = %143.0;
  (%144,)
}

def @func_20529() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  %145 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %146 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %147 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %148 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %149 = %145.0;
  %150 = %146.1;
  %151 = %147.0;
  %152 = %148.0;
  (%149, %150, %151, %152)
}

def @func_6831() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %153 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %154 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %155 = %153.0;
  %156 = %154.1;
  (%155, %156)
}

def @func_20047() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16], Tensor[(12, 14, 3), float64]) {
  %157 = @func_15868() /* ty=(bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) */;
  %158 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %159 = @func_7165() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) */;
  %160 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %161 = %157.2;
  %162 = cast(%161, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %163 = reshape(%162, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %164 = @func_2393(%163) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %165 = @func_16223() /* ty=(Tensor[(8, 11, 16), int64],) */;
  %166 = cast(meta[relay.Constant][1] /* ty=Tensor[(162, 4), uint16] */, dtype="uint16") /* ty=Tensor[(162, 4), uint16] */;
  %167 = reshape(%166, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
  %168 = @func_5895(%167) /* ty=(Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) */;
  %169 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %170 = %158.0;
  %171 = %159.0;
  %172 = %160.0;
  %173 = %164.0;
  %174 = %165.0;
  %175 = %168.0;
  %176 = %169.0;
  (%161, %170, %171, %172, %173, %174, %175, meta[relay.Constant][1] /* ty=Tensor[(162, 4), uint16] */, %176)
}

def @func_12498(%var_12488: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) {
  %177 = cast(meta[relay.Constant][2] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %178 = reshape(%177, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %179 = @func_2739(%178) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
  %180 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %182 = cast(%180, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %183 = cast(%var_12488, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %184 = reshape(%181, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %185 = reshape(%182, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
  %186 = reshape(%183, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %187 = @func_3549(%184, %185, %186) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
  %188 = %179.0;
  %189 = %187.1;
  (%180, %188, meta[relay.Constant][2] /* ty=Tensor[(660), int32] */, %189, %var_12488)
}

def @func_23149(%var_23141: Tensor[(660, 1), int32]) -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(660, 1), int32]) {
  %190 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %191 = cast(%var_23141, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
  %192 = reshape(%191, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %193 = @func_13968(%192) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) */;
  %194 = %190.0;
  %195 = %193.2;
  (%194, %195, %var_23141)
}

def @func_2153() -> (Tensor[(12, 14, 3), float32],) {
  %196 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %198 = asinh(%197) /* ty=Tensor[(12, 14, 3), float32] */;
  (%198,)
}

def @func_17409() -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %199 = @func_14877() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %200 = @func_12082() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %201 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %202 = %199.0;
  %203 = %200.1;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_4329() -> Tensor[(7, 14, 2), int32] {
  %205 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %205.1
}

def @func_7398() -> (Tensor[(12, 14, 3), float32],) {
  %206 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %207 = %206.0;
  (%207,)
}

def @func_14740() -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %208 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %209 = cast(meta[relay.Constant][3] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %210 = reshape(%209, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int64] */;
  %211 = @func_6585(%210) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) */;
  %212 = @func_14086() /* ty=(Tensor[(1408), int64],) */;
  %213 = %208.0;
  %214 = %211.1;
  %215 = %212.0;
  (%213, %214, meta[relay.Constant][3] /* ty=Tensor[(1408), int64] */, %215)
}

def @func_17239() -> Tensor[(12, 14, 3), float32] {
  %216 = @func_13324() /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) */;
  %216.1
}

def @func_21428() -> Tensor[(1408), int64] {
  %217 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %217.1
}

def @func_20555() -> (Tensor[(12, 14, 3), float64],) {
  %218 = @func_19461() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %219 = %218.0;
  (%219,)
}

def @func_4669() -> Tensor[(12, 14, 3), float32] {
  %220 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %220.0
}

def @func_6632() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) {
  %221 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %222 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %223 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %224 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %225 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %226 = %221.0;
  %227 = %222.1;
  %228 = %223.0;
  %229 = %224.0;
  %230 = %225.0;
  (%226, %227, %228, %229, %230)
}

def @func_2228() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_13324() -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) {
  %231 = @func_7398() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %232 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
  %233 = %231.0;
  (%232, %233)
}

def @func_21211() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_6736(%var_6722: Tensor[(14, 15, 1), bool], %var_6723: Tensor[(14, 15, 1), bool]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) {
  %234 = cast(%var_6723, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %235 = shape_of(%var_6722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_6722, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %239 = logical_or(%236, %237) /* ty=Tensor[(14, 15, ?), bool] */;
  %240 = %238.0;
  (%239, %240)
}

def @func_22605() -> (Tensor[(9, 8, 9), float32],) {
  %241 = @func_17736() /* ty=Tensor[(9, 8, 9), float32] */;
  (%241,)
}

def @func_9046() -> Tensor[(12, 14, 3), float32] {
  %242 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %242.0
}

def @func_3688() -> (Tensor[(12, 14, 3), float32],) {
  %243 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  (%243,)
}

def @func_9203(%var_9150: Tensor[(480), float32], %var_9154: Tensor[(480), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(480), uint16], Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %244 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %245 = cast(%var_9150, dtype="float32") /* ty=Tensor[(480), float32] */;
  %246 = reshape(%245, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %247 = @func_7471(%246) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %248 = cast(%var_9154, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %249 = shape_of(%var_9150, dtype="int32") /* ty=Tensor[(1), int32] */;
  %250 = cast(%var_9150, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %252 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %253 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %254 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %255 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %256 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %257 = %244.0;
  %258 = %247.0;
  %259 = right_shift(%250, %251) /* ty=Tensor[(480), uint16] */;
  %260 = %252.0;
  %261 = %253.0;
  %262 = %254.0;
  %263 = %255.1;
  %264 = %256.0;
  (%257, %258, %259, %260, %261, %262, %263, %264)
}

def @func_5895(%var_5876: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) {
  %265 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 6, 9), uint16] */, dtype="uint16") /* ty=Tensor[(12, 6, 9), uint16] */;
  %266 = shape_of(%var_5876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_5876, dtype="uint16") /* ty=Tensor[(12, 6, 9), uint16] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %269 = multiply(%267, %268) /* ty=Tensor[(12, 6, 9), uint16] */;
  %270 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  (%269, %270)
}

def @func_7521() -> Tensor[(12, 14, 3), float32] {
  %271 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %271.0
}

def @func_9512() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %272 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %273 = %272.0;
  %274 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%273, %274)
}

def @func_16891(%var_16887: Tensor[(42), uint16], %var_16888: Tensor[(1, 210), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
  %275 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %276 = cast(%var_16887, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %277 = cast(%var_16888, dtype="uint16") /* ty=Tensor[(1, 210), uint16] */;
  %278 = reshape(%276, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), uint16] */;
  %279 = reshape(%277, newshape=[14, 5, 3]) /* ty=Tensor[(14, 5, 3), uint16] */;
  %280 = @func_10853(%278, %279) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */;
  %281 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
  %282 = %275.0;
  %283 = %280.1;
  (%281, %282, %283, %var_16887, %var_16888)
}

def @func_13537(%var_13524: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
  %284 = cast(%var_13524, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
  sin(%284) /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_4941() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %285 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %286 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %287 = %285.0;
  %288 = %286.0;
  (%287, %288)
}

def @func_14237() -> Tensor[(12, 14, 3), float64] {
  @func_11203() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_6916() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %289 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %290 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %291 = %290.0;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %293 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %294 = %289.4;
  %295 = log10(%292) /* ty=Tensor[(12, 14, 3), float64] */;
  %296 = %293.0;
  (%294, %295, %296)
}

def @func_21130() -> Tensor[(1408), int64] {
  %297 = @func_14086() /* ty=(Tensor[(1408), int64],) */;
  %297.0
}

def @func_2260() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_20134() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %298 = @func_17319() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %299 = @func_6632() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) */;
  %300 = %298.0;
  %301 = %299.2;
  (%300, %301)
}

def @func_6585(%var_6576: Tensor[(1408, 1), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) {
  %302 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %303 = cast(%var_6576, dtype="int64") /* ty=Tensor[(1408, 1), int64] */;
  %304 = cast(%var_6576, dtype="int64") /* ty=Tensor[(1408, 1), int64] */;
  %305 = reshape(%303, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %306 = reshape(%304, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %307 = @func_1841(%305, %306) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %308 = %302.0;
  %309 = %307.0;
  (%308, %309, %var_6576)
}

def @func_8405(%var_8399: Tensor[(2, 11, 11), float32]) -> (Tensor[(2, 11, 11), float32],) {
  %310 = cast(%var_8399, dtype="float32") /* ty=Tensor[(2, 11, 11), float32] */;
  %311 = sigmoid(%310) /* ty=Tensor[(2, 11, 11), float32] */;
  (%311,)
}

def @func_20471() -> (Tensor[(4, 9, 14), float32],) {
  %312 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
  %313 = %312.1;
  (%313,)
}

def @func_6541() -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %314 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %315 = %314.1;
  %316 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
  %317 = @func_6515() /* ty=Tensor[(12, 14, 3), float64] */;
  (%315, %316, %317)
}

def @func_2066() -> Tensor[(12, 14, 3), bool] {
  %318 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %319 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%321, %322) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_3408() -> (Tensor[(12, 14, 3), float32],) {
  %323 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  (%323,)
}

def @func_20786() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %324 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %325 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
  %326 = %324.0;
  (%325, %326)
}

def @func_4642() -> Tensor[(12, 14, 3), float32] {
  %327 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %327.0
}

def @func_3279() -> Tensor[(12, 14, 3), float32] {
  %328 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %328.0
}

def @func_10926() -> (Tensor[(12, 14, 3), int64],) {
  %329 = @func_5315() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %330 = %329.0;
  (%330,)
}

def @func_22363() -> Tensor[(1408), int64] {
  %331 = @func_19304() /* ty=(Tensor[(1408), int64],) */;
  %331.0
}

def @func_13481() -> (Tensor[(12, 14, 3), float64],) {
  %332 = @func_7759() /* ty=Tensor[(12, 14, 3), float64] */;
  (%332,)
}

def @func_14086() -> (Tensor[(1408), int64],) {
  %333 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %334 = %333.2;
  (%334,)
}

def @func_10491(%var_10473: bool) -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %335 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %336 = cast(%var_10473, dtype="bool") /* ty=bool */;
  %337 = reshape(%336, newshape=[]) /* ty=bool */;
  %338 = @func_5291(%337) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
  %339 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %340 = %335.1;
  %341 = %338.3;
  %342 = %339.0;
  %343 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
  (%340, %341, %var_10473, %342, %343)
}

def @func_14311() -> Tensor[(12, 14, 3), float32] {
  %344 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %344.0
}

def @func_18652(%var_18597: Tensor[(540), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(9, 4, 15), bool], Tensor[(540), uint16], Tensor[(12, 14, 3), float64], Tensor[(10, 6, 11), bool], Tensor[(660, 1), int32], Tensor[(12, 14, 3), float64]) {
  %345 = @func_16790() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %346 = @func_18132() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %347 = cast(%var_18597, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %348 = reshape(%347, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), uint16] */;
  %349 = @func_13683() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %350 = cast(meta[relay.Constant][6] /* ty=Tensor[(660, 1), int32] */, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
  %351 = cast(meta[relay.Constant][6] /* ty=Tensor[(660, 1), int32] */, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
  %352 = reshape(%350, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %353 = reshape(%351, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %354 = %345.1;
  %355 = %346.1;
  %356 = @func_17448(%348) /* ty=Tensor[(9, 4, 15), bool] */;
  %357 = %349.0;
  %358 = @func_462(%352, %353) /* ty=Tensor[(10, 6, 11), bool] */;
  %359 = @func_13844() /* ty=Tensor[(12, 14, 3), float64] */;
  (%354, %355, %356, %var_18597, %357, %358, meta[relay.Constant][6] /* ty=Tensor[(660, 1), int32] */, %359)
}

def @func_23301() -> (Tensor[(12, 14, 3), float64],) {
  %360 = @func_20762() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) */;
  %361 = %360.1;
  (%361,)
}

def @func_14052(%var_14035: int8) -> (Tensor[(12, 4, 9), bool], Tensor[(12, 14, 3), float64]) {
  %362 = cast(%var_14035, dtype="bool") /* ty=bool */;
  %363 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 4, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 4, 9), bool] */;
  %364 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %365 = less(%362, %363) /* ty=Tensor[(12, 4, 9), bool] */;
  %366 = %364.0;
  (%365, %366)
}

def @func_17340() -> (Tensor[(12, 14, 3), float64],) {
  %367 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%367,)
}

def @func_22600() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %368 = @func_22200() /* ty=(Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) */;
  %369 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %370 = @func_14373() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %371 = %368.1;
  %372 = %369.0;
  %373 = %370.1;
  (%371, %372, %373)
}

def @func_3381() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  %374 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %375 = cast(%374, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %376 = reshape(%375, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %377 = @func_2875(%376) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %378 = %377.0;
  %379 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  (%374, %378, %379)
}

def @func_22810() -> Tensor[(12, 14, 3), float32] {
  @func_21211() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_7697() -> (Tensor[(12, 14, 3), float32],) {
  %380 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %381 = %380.1;
  (%381,)
}

def @func_14258() -> (Tensor[(12, 14, 3), float64],) {
  %382 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  (%382,)
}

def @func_12042() -> Tensor[(12, 14, 3), float64] {
  %383 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %383.2
}

def @func_17557() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) {
  %384 = @func_10673() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %385 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
  %386 = %384.0;
  %387 = %385.0;
  (%386, %387)
}

def @func_20926(%var_20923: Tensor[(8, 8, 1), float32]) -> (Tensor[(8, 8, 1), float32],) {
  %388 = cast(%var_20923, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %389 = asin(%388) /* ty=Tensor[(8, 8, 1), float32] */;
  (%389,)
}

def @func_22558() -> (Tensor[(12, 14, 3), float64],) {
  %390 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
  (%390,)
}

def @func_10003() -> (Tensor[(12, 14, 3), bool],) {
  %391 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%391,)
}

def @func_24184() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(660), int32], Tensor[(1408), float64]) {
  %392 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %393 = cast(meta[relay.Constant][8] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %394 = reshape(%393, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %395 = @func_11880(%394) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) */;
  %396 = %392.3;
  %397 = %395.3;
  %398 = @func_10076() /* ty=Tensor[(1408), float64] */;
  (%396, %397, meta[relay.Constant][8] /* ty=Tensor[(660), int32] */, %398)
}

def @func_24411() -> Tensor[(12, 14, 3), float64] {
  %399 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %399.0
}

def @func_12281() -> Tensor[(8, 1, 12), float64] {
  %400 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
  atan(%400) /* ty=Tensor[(8, 1, 12), float64] */
}

def @func_7471(%var_7459: Tensor[(480), float32]) -> (Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
  %401 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %402 = cast(%var_7459, dtype="float32") /* ty=Tensor[(480), float32] */;
  %403 = reshape(%402, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %404 = @func_5146(%403) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %405 = %401.0;
  %406 = %404.0;
  (%405, %406, %var_7459)
}

def @func_9550() -> Tensor[(12, 14, 3), float32] {
  %407 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %407.0
}

def @func_23272() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %408 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %409 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %410 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %411 = %408.0;
  %412 = @func_23087() /* ty=Tensor[(12, 14, 3), float64] */;
  %413 = %409.0;
  %414 = %410.0;
  (%411, %412, %413, %414)
}

def @func_22132() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %415 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %416 = @func_10076() /* ty=Tensor[(1408), float64] */;
  %417 = %415.0;
  %418 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%416, %417, %418)
}

def @main(%var_24572: uint64, %var_24592: Tensor[(64), float32], %var_24613: Tensor[(8, 60), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], uint64, Tensor[(8, 8, 1), float32], Tensor[(4, 10, 12), float32], Tensor[(8, 60), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(64), float64]) {
  %419 = cast(%var_24572, dtype="uint64") /* ty=uint64 */;
  %420 = reshape(%419, newshape=[]) /* ty=uint64 */;
  %421 = @func_14916(%420) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) */;
  %422 = cast(%var_24592, dtype="float32") /* ty=Tensor[(64), float32] */;
  %423 = reshape(%422, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float32] */;
  %424 = @func_20926(%423) /* ty=(Tensor[(8, 8, 1), float32],) */;
  %425 = cast(%var_24613, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %426 = reshape(%425, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %427 = @func_7471(%426) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %428 = @func_15365() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %429 = @func_18220() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %430 = cast(%var_24592, dtype="float64") /* ty=Tensor[(64), float64] */;
  %431 = @func_24411() /* ty=Tensor[(12, 14, 3), float64] */;
  %432 = %421.0;
  %433 = %424.0;
  %434 = %427.1;
  %435 = %428.0;
  %436 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
  %437 = %429.0;
  %438 = log10(%430) /* ty=Tensor[(64), float64] */;
  (%431, %432, %var_24572, %433, %434, %var_24613, %435, %436, %437, %438)
}

def @func_22528() -> Tensor[(14, 13, 1), float32] {
  %439 = @func_15212() /* ty=(Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) */;
  %439.0
}

def @func_10869() -> (Tensor[(12, 14, 3), float32],) {
  %440 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %441 = %440.0;
  (%441,)
}

def @func_19836() -> (Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %442 = @func_17161() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) */;
  %443 = @func_17211() /* ty=Tensor[(4, 9, 14), bool] */;
  %444 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
  %445 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
  %446 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
  %447 = %442.0;
  (%443, %444, %445, %446, %447)
}

def @func_9958() -> (Tensor[(12, 14, 3), bool],) {
  %448 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %449 = %448.1;
  (%449,)
}

def @func_2393(%var_2368: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %450 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %451 = cast(%var_2368, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %452 = cast(%var_2368, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %453 = reshape(%451, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %454 = reshape(%452, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %455 = @func_1841(%453, %454) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %456 = @func_2228() /* ty=Tensor[(12, 14, 3), float64] */;
  %457 = %450.0;
  %458 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %459 = %455.0;
  %460 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %461 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  (%456, %457, %458, %459, %var_2368, %460, %461)
}

def @func_17161() -> (Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) {
  %462 = @func_7165() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) */;
  %463 = cast(meta[relay.Constant][10] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %464 = reshape(%463, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
  %465 = %462.2;
  %466 = @func_13537(%464) /* ty=Tensor[(16, 8, 6), float32] */;
  %467 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%465, %466, meta[relay.Constant][10] /* ty=Tensor[(768), float32] */, %467)
}

def @func_23357() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
  %468 = @func_16404() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %469 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %470 = %468.0;
  %471 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  (%469, %470, %471)
}

def @func_14677() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  %472 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %473 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %474 = %472.1;
  (%473, %474)
}

def @func_12082() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %475 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %476 = %475.0;
  %477 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  (%476, %477)
}

def @func_19675() -> Tensor[(12, 14, 3), float64] {
  %478 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %478.0
}

def @func_13560() -> (Tensor[(12, 14, 3), float64],) {
  %479 = @func_13419() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %480 = %479.0;
  (%480,)
}

def @func_8254() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %481 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %482 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %483 = cast(meta[relay.Constant][11] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %484 = cast(meta[relay.Constant][11] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %485 = reshape(%483, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %486 = reshape(%484, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %487 = @func_1841(%485, %486) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %488 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %489 = %481.1;
  %490 = %482.0;
  %491 = %487.0;
  %492 = %488.1;
  (%489, %490, %491, meta[relay.Constant][11] /* ty=Tensor[(1408), int64] */, %492)
}

def @func_10114() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %493 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  %494 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  (%493, %494)
}

def @func_2529() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %495 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %496 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%495, %496)
}

def @func_19304() -> (Tensor[(1408), int64],) {
  %497 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %498 = %497.0;
  (%498,)
}

def @func_12141() -> (Tensor[(12, 14, 3), float32],) {
  %499 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %500 = %499.0;
  (%500,)
}

def @func_10673() -> (Tensor[(12, 14, 3), float64],) {
  %501 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %502 = %501.2;
  (%502,)
}

def @func_12760(%var_12732: Tensor[(660), int32]) -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) {
  %503 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %504 = cast(%var_12732, dtype="int32") /* ty=Tensor[(660), int32] */;
  %505 = reshape(%504, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %506 = @func_2739(%505) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
  %507 = @func_11948() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %508 = %503.0;
  %509 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %510 = %506.0;
  %511 = %507.0;
  (%508, %509, %510, %var_12732, %511)
}

def @func_20442() -> Tensor[(12, 14, 3), float32] {
  %512 = @func_10602() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %512.1
}

def @func_7013() -> Tensor[(12, 14, 3), float32] {
  %513 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %513.0
}

def @func_6165() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %514 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %515 = @func_3408() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %516 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
  %517 = %514.3;
  %518 = %515.0;
  %519 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
  (%516, %517, %518, %519)
}

def @func_13470() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %520 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %521 = @func_9046() /* ty=Tensor[(12, 14, 3), float32] */;
  %522 = %520.0;
  %523 = @func_8499() /* ty=Tensor[(12, 14, 3), float64] */;
  (%521, %522, %523)
}

def @func_12901() -> Tensor[(12, 14, 3), float64] {
  @func_12042() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_13968(%var_13962: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  %524 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %525 = cast(meta[relay.Constant][12] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %526 = reshape(%525, newshape=[22, 64]) /* ty=Tensor[(22, 64), int64] */;
  %527 = @func_5993(%526) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) */;
  %528 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %529 = cast(%var_13962, dtype="int32") /* ty=Tensor[(660), int32] */;
  %530 = reshape(%529, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %531 = @func_2739(%530) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
  %532 = %524.0;
  %533 = %527.3;
  %534 = %528.1;
  %535 = %531.0;
  (%532, %533, meta[relay.Constant][12] /* ty=Tensor[(1408), int64] */, %534, %535, %var_13962)
}

def @func_6195() -> Tensor[(12, 14, 3), float64] {
  %536 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %536.0
}

def @func_13167(%var_13087: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), float32], Tensor[(196), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float64]) {
  %537 = cast(%var_13087, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  %538 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %539 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %540 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
  %541 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %542 = cosh(%537) /* ty=Tensor[(4, 8, 14), float32] */;
  %543 = %538.2;
  %544 = %539.0;
  %545 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %546 = %540.0;
  %547 = %541.1;
  (%542, %543, %544, %545, %546, %547)
}

def @func_16049() -> (Tensor[(12, 14, 3), float32],) {
  %548 = @func_11406() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %549 = %548.3;
  (%549,)
}

def @func_16423() -> (Tensor[(1408), int64],) {
  %550 = @func_16021() /* ty=Tensor[(1408), int64] */;
  (%550,)
}

def @func_18760() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
  %551 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %552 = @func_7892() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %553 = %551.1;
  %554 = %552.1;
  (%553, %554)
}

def @func_19023() -> (Tensor[(12, 14, 3), float32],) {
  %555 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
  (%555,)
}

def @func_22307() -> Tensor[(12, 14, 3), bool] {
  %556 = @func_10003() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %556.0
}

def @func_8499() -> Tensor[(12, 14, 3), float64] {
  %557 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %557.0
}

def @func_14012() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %558 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %559 = cast(meta[relay.Constant][13] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
  %560 = reshape(%559, newshape=[525]) /* ty=Tensor[(525), int8] */;
  %561 = @func_12568(%560) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) */;
  %562 = %558.0;
  %563 = %561.0;
  (%562, %563, meta[relay.Constant][13] /* ty=Tensor[(525), int8] */)
}

def @func_15409(%var_15406: Tensor[(162, 4), uint16]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16]) {
  %564 = @func_13610() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %565 = cast(%var_15406, dtype="uint16") /* ty=Tensor[(162, 4), uint16] */;
  %566 = reshape(%565, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
  %567 = @func_5895(%566) /* ty=(Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) */;
  %568 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
  %569 = %564.0;
  %570 = %567.0;
  (%568, %569, %570, %var_15406)
}

def @func_21779() -> Tensor[(11, 5, 3), float64] {
  @func_5663() /* ty=Tensor[(11, 5, 3), float64] */
}

def @func_21535() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %571 = @func_18330() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %572 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
  %573 = @func_16738() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %574 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %575 = %571.2;
  %576 = %572.0;
  %577 = %573.2;
  %578 = %574.2;
  (%575, %576, %577, %578)
}

def @func_21232() -> (Tensor[(12, 14, 3), float32],) {
  %579 = @func_8788() /* ty=Tensor[(12, 14, 3), float32] */;
  (%579,)
}

def @func_8788() -> Tensor[(12, 14, 3), float32] {
  @func_4642() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_3734() -> (Tensor[(11, 5, 3), float64],) {
  %580 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 3), float64] */;
  %581 = rsqrt(%580) /* ty=Tensor[(11, 5, 3), float64] */;
  (%581,)
}

def @func_22480() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %582 = @func_22200() /* ty=(Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) */;
  %583 = @func_14768() /* ty=Tensor[(12, 14, 3), float64] */;
  %584 = %582.1;
  (%583, %584)
}

def @func_22549() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %585 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %586 = @func_19461() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %587 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %588 = %585.0;
  %589 = %586.0;
  %590 = %587.1;
  (%588, %589, %590)
}

def @func_24107() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float64]) {
  %591 = @func_18220() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %592 = @func_16352() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) */;
  %593 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %594 = @func_10076() /* ty=Tensor[(1408), float64] */;
  %595 = %591.0;
  %596 = %592.2;
  %597 = %593.1;
  (%594, %595, %596, %597)
}

def @func_19492() -> (Tensor[(12, 14, 3), float32],) {
  %598 = @func_18143() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %599 = %598.0;
  (%599,)
}

def @func_12236(%var_12219: Tensor[(11, 3, 12), float32]) -> (Tensor[(11, 3, 12), float32],) {
  %600 = cast(%var_12219, dtype="float32") /* ty=Tensor[(11, 3, 12), float32] */;
  %601 = tan(%600) /* ty=Tensor[(11, 3, 12), float32] */;
  (%601,)
}

def @func_5663() -> Tensor[(11, 5, 3), float64] {
  %602 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %602.0
}

def @func_13351() -> Tensor[(4, 9, 14), bool] {
  @func_4674() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_17319() -> (Tensor[(12, 14, 3), float32],) {
  %603 = @func_14211() /* ty=Tensor[(12, 14, 3), float32] */;
  (%603,)
}

def @func_7892() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %604 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %605 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %606 = %604.1;
  %607 = %605.0;
  (%606, %607)
}

def @func_15493() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) {
  %608 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %609 = %608.2;
  %610 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
  (%609, %610)
}

def @func_18330() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %611 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %612 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %613 = %611.0;
  %614 = %612.0;
  %615 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
  (%613, %614, %615)
}

def @func_15771() -> Tensor[(12, 14, 3), float64] {
  %616 = @func_5184() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %616.0
}

def @func_2739(%var_2705: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) {
  %617 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %618 = cast(%var_2705, dtype="int32") /* ty=Tensor[(660), int32] */;
  %619 = cast(%var_2705, dtype="int32") /* ty=Tensor[(660), int32] */;
  %620 = reshape(%618, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %621 = reshape(%619, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %622 = @func_462(%620, %621) /* ty=Tensor[(10, 6, 11), bool] */;
  %623 = cast(%var_2705, dtype="int64") /* ty=Tensor[(660), int64] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="int64") /* ty=Tensor[(10, 6, 11), int64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %627 = bitwise_and(%625, %626) /* ty=Tensor[(10, 6, 11), int64] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(10, 6, 11), float64] */;
  %629 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%622, dtype="float64") /* ty=Tensor[(10, 6, 11), float64] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %632 = %617.0;
  %633 = floor_divide(%630, %631) /* ty=Tensor[(10, 6, 11), float64] */;
  (%632, %633)
}

def @func_16517() -> Tensor[(12, 14, 3), bool] {
  @func_9072() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_9006() -> Tensor[(12, 14, 3), float64] {
  %634 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %634.0
}

def @func_13769(%var_13754: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) {
  %635 = cast(%var_13754, dtype="int32") /* ty=Tensor[(660), int32] */;
  %636 = cast(%var_13754, dtype="int32") /* ty=Tensor[(660), int32] */;
  %637 = reshape(%635, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %638 = reshape(%636, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %639 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %640 = %639.2;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %642 = @func_12454() /* ty=Tensor[(12, 14, 3), bool] */;
  %643 = @func_462(%637, %638) /* ty=Tensor[(10, 6, 11), bool] */;
  %644 = cosh(%641) /* ty=Tensor[(1408), float64] */;
  (%642, %643, %var_13754, %644)
}

def @func_14916(%var_14905: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) {
  %645 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %646 = cast(%var_14905, dtype="uint64") /* ty=uint64 */;
  %647 = reshape(%646, newshape=[]) /* ty=uint64 */;
  %648 = @func_10545(%647) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
  %649 = %645.0;
  %650 = %648.0;
  (%649, %650, %var_14905)
}

def @func_3788(%var_3780: Tensor[(10, 2, 9), bool]) -> Tensor[(10, 2, 9), bool] {
  %651 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 2, 9), bool] */, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %652 = shape_of(%var_3780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%var_3780, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%653, %654) /* ty=Tensor[(10, 2, 9), bool] */
}

def @func_2574() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %655 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %657 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %658 = log2(%656) /* ty=Tensor[(12, 14, 3), float32] */;
  (%657, %658)
}

def @func_20621() -> Tensor[(4, 9, 14), bool] {
  %659 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %659.0
}

def @func_10139() -> (Tensor[(12, 14, 3), float32],) {
  %660 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %661 = %660.1;
  (%661,)
}

def @func_6085() -> (Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %662 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %663 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %664 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %665 = %662.0;
  %666 = %663.0;
  %667 = %664.0;
  %668 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
  (%665, %666, %667, %668)
}

def @func_11677() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %669 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %670 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %671 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %672 = @func_6165() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */;
  %673 = %669.0;
  %674 = %670.0;
  %675 = %671.1;
  %676 = %672.0;
  (%673, %674, %675, %676)
}

def @func_4553(%var_4546: Tensor[(4, 9, 14), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) {
  %677 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %678 = cast(meta[relay.Constant][16] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
  %679 = cast(meta[relay.Constant][16] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
  %680 = reshape(%678, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
  %681 = reshape(%679, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
  %682 = @func_3016(%680, %681) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) */;
  %683 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %684 = %683.1;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %686 = cos(%685) /* ty=Tensor[(4, 9, 14), float32] */;
  %687 = cast(%var_4546, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %691 = %677.0;
  %692 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %693 = %682.0;
  %694 = subtract(%689, %690) /* ty=Tensor[(4, 9, 14), float32] */;
  (%691, %692, %693, meta[relay.Constant][16] /* ty=Tensor[(525), int8] */, %694)
}

def @func_4895() -> (Tensor[(12, 14, 3), float32],) {
  %695 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  (%695,)
}

def @func_5725() -> (Tensor[(12, 14, 3), float64],) {
  %696 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%696,)
}

def @func_23087() -> Tensor[(12, 14, 3), float64] {
  %697 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %697.0
}

def @func_18866() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %698 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %699 = @func_15365() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %700 = %698.0;
  %701 = %699.0;
  %702 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
  (%700, %701, %702)
}

def @func_20370() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %703 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %704 = @func_15771() /* ty=Tensor[(12, 14, 3), float64] */;
  %705 = %703.0;
  (%704, %705)
}

def @func_22092() -> Tensor[(1408), int64] {
  %706 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %706.2
}

def @func_22293(%var_22272: Tensor[(5, 132), int32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(5, 132), int32]) {
  %707 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %708 = @func_8395() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %709 = cast(%var_22272, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
  %710 = reshape(%709, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %711 = @func_11247(%710) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) */;
  %712 = %707.0;
  %713 = %708.0;
  %714 = %711.3;
  (%712, %713, %714, %var_22272)
}

def @func_15212() -> (Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) {
  %715 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 1), float64] */;
  %716 = sqrt(%715) /* ty=Tensor[(14, 13, 1), float64] */;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %718 = @func_14204() /* ty=(Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) */;
  %719 = asin(%717) /* ty=Tensor[(14, 13, 1), float32] */;
  %720 = %718.1;
  (%719, %720)
}

def @func_21049() -> Tensor[(12, 14, 3), float32] {
  %721 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %721.1
}

def @func_4167() -> Tensor[(12, 14, 3), float32] {
  %722 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %722.0
}

def @func_5291(%var_5239: bool) -> (Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) {
  %723 = cast(%var_5239, dtype="bool") /* ty=bool */;
  %724 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 16, 1), bool] */, dtype="bool") /* ty=Tensor[(3, 16, 1), bool] */;
  %725 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %726 = %725.2;
  %727 = cast(%726, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %728 = cast(%726, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %729 = reshape(%727, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %730 = reshape(%728, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %731 = @func_1841(%729, %730) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %732 = logical_and(%723, %724) /* ty=Tensor[(3, 16, 1), bool] */;
  %733 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %734 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
  %735 = %731.0;
  (%732, %726, %733, %734, %735)
}

def @func_10195() -> (Tensor[(12, 14, 3), float32], Tensor[(110, 6), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %736 = cast(meta[relay.Constant][19] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(110, 6), int32] */;
  %737 = cast(meta[relay.Constant][19] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(110, 6), int32] */;
  %738 = reshape(%736, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %739 = reshape(%737, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %740 = @func_462(%738, %739) /* ty=Tensor[(10, 6, 11), bool] */;
  %741 = cast(%740, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %742 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %743 = cast(meta[relay.Constant][19] /* ty=Tensor[(110, 6), int32] */, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %745 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %746 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %747 = mod(%743, %744) /* ty=Tensor[(110, 6), float32] */;
  %748 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  %749 = %745.0;
  (%746, %747, %748, %749)
}

def @func_21366(%var_21309: bool, %var_21356: Tensor[(5, 42), uint16]) -> (Tensor[(12, 14, 3), float64], bool, Tensor[(8, 11, 16), float32], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), int64], Tensor[(14, 5, 3), bool], Tensor[(42), uint16], Tensor[(5, 42), uint16]) {
  %750 = cast(%var_21309, dtype="bool") /* ty=bool */;
  %751 = reshape(%750, newshape=[]) /* ty=bool */;
  %752 = @func_14125(%751) /* ty=(Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) */;
  %753 = %752.1;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
  %755 = cast(meta[relay.Constant][20] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %756 = reshape(%755, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
  %757 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %758 = cast(meta[relay.Constant][21] /* ty=Tensor[(42), uint16] */, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %759 = cast(%var_21356, dtype="uint16") /* ty=Tensor[(5, 42), uint16] */;
  %760 = reshape(%758, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), uint16] */;
  %761 = reshape(%759, newshape=[14, 5, 3]) /* ty=Tensor[(14, 5, 3), uint16] */;
  %762 = @func_10853(%760, %761) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */;
  %763 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %764 = log(%754) /* ty=Tensor[(8, 11, 16), float32] */;
  %765 = @func_13537(%756) /* ty=Tensor[(16, 8, 6), float32] */;
  %766 = %757.4;
  %767 = %762.0;
  (%763, %var_21309, %764, %765, meta[relay.Constant][20] /* ty=Tensor[(768), float32] */, %766, %767, meta[relay.Constant][21] /* ty=Tensor[(42), uint16] */, %var_21356)
}

def @func_23938() -> (Tensor[(12, 14, 3), float32],) {
  %768 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %769 = %768.0;
  (%769,)
}

def @func_5738(%var_5728: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64],) {
  %770 = cast(%var_5728, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %771 = log2(%770) /* ty=Tensor[(5, 7, 6), float64] */;
  (%771,)
}

def @func_23513() -> Tensor[(12, 14, 3), float32] {
  %772 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %772.0
}

def @func_10757() -> Tensor[(12, 14, 3), float64] {
  %773 = @func_7892() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %773.0
}

def @func_5211(%var_5186: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, ?), int64],) {
  %774 = cast(%var_5186, dtype="float32") /* ty=Tensor[(12, 7, 1), float32] */;
  %775 = asinh(%774) /* ty=Tensor[(12, 7, 1), float32] */;
  %776 = cast(%775, dtype="int64") /* ty=Tensor[(12, 7, 1), int64] */;
  %777 = shape_of(%var_5186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%var_5186, dtype="int64") /* ty=Tensor[(12, 7, 1), int64] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %780 = right_shift(%778, %779) /* ty=Tensor[(12, 7, ?), int64] */;
  (%780,)
}

def @func_18981() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %781 = @func_16847() /* ty=Tensor[(12, 14, 3), float64] */;
  %782 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  (%781, %782)
}

def @func_19271(%var_19260: Tensor[(9, 14, 12), float64], %var_19261: Tensor[(9, 14, 12), float64]) -> (Tensor[(9, 14, 12), bool], Tensor[(9, 14, 12), bool]) {
  %783 = cast(%var_19261, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %784 = shape_of(%var_19260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_19260, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %787 = cast(%var_19261, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %788 = shape_of(%var_19260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_19260, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = less_equal(%785, %786) /* ty=Tensor[(9, 14, 12), bool] */;
  %792 = greater(%789, %790) /* ty=Tensor[(9, 14, 12), bool] */;
  (%791, %792)
}

def @func_9119() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) {
  %793 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %794 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %795 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %796 = %793.0;
  %797 = %794.0;
  (%795, %796, %797)
}

def @func_8440(%var_8423: Tensor[(13, 4, 2), float32], %var_8424: Tensor[(13, 4, 2), float32]) -> (Tensor[(13, 4, 2), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %798 = cast(%var_8424, dtype="float32") /* ty=Tensor[(13, 4, 2), float32] */;
  %799 = shape_of(%var_8423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%var_8423, dtype="float32") /* ty=Tensor[(13, 4, 2), float32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %802 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %803 = floor_divide(%800, %801) /* ty=Tensor[(13, 4, 2), float32] */;
  %804 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %805 = %802.0;
  (%803, %804, %805)
}

def @func_18220() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %806 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %807 = @func_7398() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %808 = %806.4;
  %809 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %810 = %807.0;
  (%808, %809, %810)
}

def @func_16179() -> (Tensor[(12, 14, 3), float32],) {
  %811 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  (%811,)
}

def @func_8395() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %812 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %813 = %812.1;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %815 = cast(%813, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %816 = reshape(%815, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %817 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %818 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %819 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %820 = sigmoid(%814) /* ty=Tensor[(12, 14, 3), float32] */;
  %821 = @func_3949(%816) /* ty=Tensor[(12, 14, 3), bool] */;
  %822 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
  %823 = %817.4;
  %824 = %818.0;
  %825 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
  %826 = %819.2;
  %827 = @func_6515() /* ty=Tensor[(12, 14, 3), float64] */;
  (%820, %821, %822, %823, %824, %825, %826, %827)
}

def @func_18502() -> Tensor[(12, 14, 3), float64] {
  @func_11203() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_11723() -> (Tensor[(12, 14, 3), float64],) {
  %828 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %829 = %828.1;
  (%829,)
}

def @func_5443() -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %830 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %831 = cast(meta[relay.Constant][22] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %832 = cast(meta[relay.Constant][22] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %833 = reshape(%831, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %834 = reshape(%832, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %835 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %836 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %837 = %830.0;
  %838 = @func_462(%833, %834) /* ty=Tensor[(10, 6, 11), bool] */;
  %839 = %835.1;
  %840 = %836.2;
  (%837, %838, meta[relay.Constant][22] /* ty=Tensor[(660), int32] */, %839, %840)
}

def @func_15967() -> Tensor[(1408), int64] {
  @func_5873() /* ty=Tensor[(1408), int64] */
}

def @func_5603() -> (Tensor[(12, 14, 3), float32],) {
  %841 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %842 = %841.0;
  (%842,)
}

def @func_16790() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %843 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %844 = %843.0;
  %845 = @func_8788() /* ty=Tensor[(12, 14, 3), float32] */;
  (%844, %845)
}

def @func_2462() -> Tensor[(12, 14, 3), float32] {
  %846 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %846.0
}

def @func_5315() -> (Tensor[(12, 14, 3), int64],) {
  %847 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
  (%847,)
}

def @func_19371() -> (Tensor[(12, 14, 3), float64],) {
  %848 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %849 = %848.0;
  (%849,)
}

def @func_19537() -> Tensor[(12, 14, 3), float64] {
  @func_2228() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_14877() -> (Tensor[(11, 5, 3), float64],) {
  %850 = @func_8940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) */;
  %851 = %850.1;
  (%851,)
}

def @func_20247() -> (Tensor[(12, 14, 3), float32],) {
  %852 = @func_13187() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %853 = %852.0;
  (%853,)
}

def @func_3869() -> Tensor[(12, 14, 3), float32] {
  %854 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %854.0
}

def @func_2762() -> (Tensor[(12, 14, 3), float64],) {
  %855 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  (%855,)
}

def @func_10853(%var_10813: Tensor[(14, 1, 3), uint16], %var_10814: Tensor[(14, 5, 3), uint16]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
  %856 = cast(%var_10813, dtype="bool") /* ty=Tensor[(14, 1, 3), bool] */;
  %857 = cast(%var_10814, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
  %858 = cast(%var_10814, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %859 = log2(%858) /* ty=Tensor[(14, 5, 3), float64] */;
  %860 = cast(%859, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
  %861 = cast(%var_10813, dtype="float32") /* ty=Tensor[(14, 1, 3), float32] */;
  %862 = divide(%860, %861) /* ty=Tensor[(14, 5, 3), float32] */;
  %863 = cast(%var_10814, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %864 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%862, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %867 = floor_divide(%865, %866) /* ty=Tensor[(14, 5, 3), float64] */;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
  %869 = less(%856, %857) /* ty=Tensor[(14, 5, 3), bool] */;
  %870 = tan(%868) /* ty=Tensor[(14, 5, 3), float32] */;
  (%869, %870)
}

def @func_12568(%var_12565: Tensor[(525), int8]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) {
  %871 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %872 = cast(%var_12565, dtype="int8") /* ty=Tensor[(525), int8] */;
  %873 = reshape(%872, newshape=[525]) /* ty=Tensor[(525), int8] */;
  %874 = @func_9307(%873) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) */;
  %875 = %871.0;
  %876 = %874.0;
  (%875, %876, %var_12565)
}

def @func_12940() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %877 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %878 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %879 = %877.3;
  (%878, %879)
}

def @func_8809() -> (Tensor[(12, 14, 3), int64],) {
  %880 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %881 = %880.0;
  (%881,)
}

def @func_2841() -> (Tensor[(12, 14, 3), float32],) {
  %882 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %883 = %882.0;
  (%883,)
}

def @func_19288() -> (Tensor[(12, 14, 3), float32],) {
  %884 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
  (%884,)
}

def @func_4288() -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) {
  %885 = cast(meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %886 = cast(meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %887 = reshape(%885, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float32] */;
  %888 = reshape(%886, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float32] */;
  %889 = @func_2912(%887, %888) /* ty=(Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) */;
  %890 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %892 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
  %893 = %889.1;
  %894 = rsqrt(%891) /* ty=Tensor[(12, 14, 3), float64] */;
  (%892, %893, meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, %894)
}

def @func_7085() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %895 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %896 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %897 = %895.0;
  %898 = %896.0;
  (%897, %898)
}

def @func_24319() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %899 = @func_22132() /* ty=(Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %900 = @func_22600() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %901 = %899.2;
  %902 = %900.1;
  (%901, %902)
}

def @func_5300() -> (Tensor[(12, 14, 3), float64],) {
  %903 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %904 = %903.0;
  (%904,)
}

def @func_17661() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), bool]) {
  %905 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %906 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %907 = %905.0;
  %908 = %906.0;
  (%907, %908)
}

def @func_2182() -> Tensor[(12, 14, 3), float32] {
  %909 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %909.0
}

def @func_7912(%var_7903: Tensor[(2, 16, 15), uint32], %var_7904: Tensor[(2, 16, 15), uint32]) -> (Tensor[(2, 16, 15), bool], Tensor[(480), float32]) {
  %910 = cast(%var_7904, dtype="bool") /* ty=Tensor[(2, 16, 15), bool] */;
  %911 = shape_of(%var_7903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_7903, dtype="bool") /* ty=Tensor[(2, 16, 15), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = not_equal(%912, %913) /* ty=Tensor[(2, 16, 15), bool] */;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(2, 16, 15), float32] */;
  %916 = reshape(%915, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %917 = @func_7471(%916) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %918 = %917.2;
  (%914, %918)
}

def @func_11948() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %919 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %920 = %919.2;
  %921 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %922 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
  (%920, %921, %922)
}

def @func_17948() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %923 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %924 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %925 = %923.2;
  %926 = %924.0;
  (%925, %926)
}

def @func_1841(%var_1836: Tensor[(8, 11, 16), int64], %var_1837: Tensor[(8, 11, 16), int64]) -> (Tensor[(8, 11, 16), int64],) {
  %927 = cast(%var_1837, dtype="int64") /* ty=Tensor[(8, 11, 16), int64] */;
  %928 = shape_of(%var_1836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%var_1836, dtype="int64") /* ty=Tensor[(8, 11, 16), int64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %931 = right_shift(%929, %930) /* ty=Tensor[(8, 11, 16), int64] */;
  (%931,)
}

def @func_12986() -> Tensor[(12, 14, 3), float64] {
  @func_8499() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_17211() -> Tensor[(4, 9, 14), bool] {
  %932 = @func_16404() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %932.0
}

def @func_12010() -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float64]) {
  %933 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %934 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %935 = %933.0;
  %936 = %934.3;
  (%935, %936)
}

def @func_11276() -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %937 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %938 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %939 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %940 = %937.2;
  %941 = %938.0;
  %942 = %939.0;
  (%940, %941, %942)
}

def @func_9825() -> (Tensor[(12, 14, 3), float32],) {
  %943 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
  (%943,)
}

def @func_9714() -> (Tensor[(12, 14, 3), float32],) {
  %944 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
  (%944,)
}

def @func_5692() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %945 = @func_5088() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %946 = @func_2228() /* ty=Tensor[(12, 14, 3), float64] */;
  %947 = %945.0;
  (%946, %947)
}

def @func_8606() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %948 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %949 = %948.0;
  %950 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
  (%949, %950)
}

def @func_9072() -> Tensor[(12, 14, 3), bool] {
  %951 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %952 = %951.1;
  %953 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%955, %956) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_14420() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %957 = @func_8940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) */;
  %958 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %959 = %957.0;
  %960 = %958.0;
  (%959, %960)
}

def @func_2417() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_16694(%var_16691: Tensor[(84), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool, Tensor[(84), float32]) {
  %961 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %962 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %963 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %964 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %965 = cast(%var_16691, dtype="float32") /* ty=Tensor[(84), float32] */;
  %966 = reshape(%964, newshape=[]) /* ty=bool */;
  %967 = reshape(%965, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %968 = @func_12420(%966, %967) /* ty=(Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) */;
  %969 = %961.0;
  %970 = %962.1;
  %971 = %963.1;
  %972 = %968.10;
  (%969, %970, %971, %972, True /* ty=bool */, %var_16691)
}

def @func_3233() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %973 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %974 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%973, %974)
}

def @func_7759() -> Tensor[(12, 14, 3), float64] {
  %975 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %975.1
}

def @func_20708() -> Tensor[(12, 14, 3), float32] {
  @func_4669() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_20202() -> Tensor[(12, 14, 3), float64] {
  %976 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %976.0
}

def @func_22388() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
  %977 = @func_20621() /* ty=Tensor[(4, 9, 14), bool] */;
  %978 = @func_19537() /* ty=Tensor[(12, 14, 3), float64] */;
  (%977, %978)
}

def @func_5557(%var_5498: Tensor[(16, 3, 8), int32], %var_5499: Tensor[(16, 3, 8), int32], %var_5552: Tensor[(480), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 7, ?), bool], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
  %979 = cast(%var_5499, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %980 = shape_of(%var_5498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_5498, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %983 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %984 = cast(meta[relay.Constant][25] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %985 = reshape(%984, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
  %986 = @func_5211(%985) /* ty=(Tensor[(12, 7, ?), int64],) */;
  %987 = %986.0;
  %988 = cast(meta[relay.Constant][25] /* ty=Tensor[(84), float32] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %989 = shape_of(%987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%987, dtype="bool") /* ty=Tensor[(12, 7, ?), bool] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %992 = cast(%var_5552, dtype="float32") /* ty=Tensor[(480), float32] */;
  %993 = reshape(%992, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %994 = @func_5146(%993) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %995 = greater_equal(%981, %982) /* ty=Tensor[(16, 3, 8), bool] */;
  %996 = %983.0;
  %997 = greater_equal(%990, %991) /* ty=Tensor[(12, 7, ?), bool] */;
  %998 = %994.0;
  (%995, %996, %997, %998, %var_5552)
}

def @func_17121(%var_17116: float32) -> Tensor[(13, 10, 4), float32] {
  %999 = cast(%var_17116, dtype="float32") /* ty=float32 */;
  %1000 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 10, 4), float32] */;
  divide(%999, %1000) /* ty=Tensor[(13, 10, 4), float32] */
}

def @func_8940() -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) {
  %1001 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1002 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1003 = %1001.0;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_2912(%var_2893: Tensor[(7, 14, 2), float32], %var_2906: Tensor[(7, 14, 2), float32]) -> (Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) {
  %1005 = cast(%var_2893, dtype="float32") /* ty=Tensor[(7, 14, 2), float32] */;
  %1006 = cast(%var_2906, dtype="int32") /* ty=Tensor[(7, 14, 2), int32] */;
  %1007 = shape_of(%var_2893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%var_2893, dtype="int32") /* ty=Tensor[(7, 14, 2), int32] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1010 = log(%1005) /* ty=Tensor[(7, 14, 2), float32] */;
  %1011 = logical_xor(%1008, %1009) /* ty=Tensor[(7, 14, 2), int32] */;
  (%1010, %1011)
}

def @func_19346(%var_19338: Tensor[(15, 8, 10), uint32]) -> Tensor[(15, 8, 10), uint32] {
  %1012 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 8, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 8, 10), uint32] */;
  %1013 = shape_of(%var_19338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%var_19338, dtype="uint32") /* ty=Tensor[(15, 8, 10), uint32] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%1014, %1015) /* ty=Tensor[(15, 8, 10), uint32] */
}

def @func_15634(%var_15625: Tensor[(1, 660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(1, 660), int32], Tensor[(4, 9, 14), float64]) {
  %1016 = cast(%var_15625, dtype="int32") /* ty=Tensor[(1, 660), int32] */;
  %1017 = reshape(%1016, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1018 = @func_13769(%1017) /* ty=(Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) */;
  %1019 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
  %1020 = cast(%1019, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %1021 = %1018.0;
  %1022 = asinh(%1020) /* ty=Tensor[(4, 9, 14), float64] */;
  (%1021, %var_15625, %1022)
}

def @func_13072() -> Tensor[(4, 9, 14), bool] {
  %1023 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1023.0
}

def @func_14125(%var_14123: bool) -> (Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) {
  %1024 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1025 = cast(%var_14123, dtype="bool") /* ty=bool */;
  %1026 = reshape(%1025, newshape=[]) /* ty=bool */;
  %1027 = @func_5291(%1026) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
  %1028 = %1024.1;
  %1029 = %1027.4;
  (%1028, %1029, %var_14123)
}

def @func_17797() -> Tensor[(12, 14, 3), float32] {
  @func_9437() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_5485(%var_5481: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), float32] {
  %1030 = cast(%var_5481, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  erf(%1030) /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_16738() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1031 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1032 = %1031.4;
  %1033 = cast(%1032, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %1034 = reshape(%1033, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %1035 = @func_2875(%1034) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1036 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1037 = %1035.1;
  %1038 = %1036.1;
  (%1032, %1037, %1038)
}

def @func_3549(%var_3469: Tensor[(12, 14, 3), float64], %var_3525: Tensor[(12, 14, 3), bool], %var_3541: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
  %1039 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1040 = cast(%var_3469, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%1039, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1044 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1045 = cast(%var_3525, dtype="uint16") /* ty=Tensor[(12, 14, 3), uint16] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%1044, dtype="uint16") /* ty=Tensor[(12, 14, 3), uint16] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1049 = cast(%var_3541, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1050 = cast(%var_3541, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1051 = reshape(%1049, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %1052 = reshape(%1050, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %1053 = @func_1841(%1051, %1052) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %1054 = divide(%1042, %1043) /* ty=Tensor[(12, 14, 3), float64] */;
  %1055 = maximum(%1047, %1048) /* ty=Tensor[(12, 14, 3), uint16] */;
  %1056 = %1053.0;
  (%1054, %1055, %1056, %var_3541)
}

def @func_15906() -> (Tensor[(4, 9, 14), bool],) {
  %1057 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_10602() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1059 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %1060 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1061 = %1059.1;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_15724() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1063 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1064 = @func_14420() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1065 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %1066 = %1063.1;
  %1067 = %1064.1;
  (%1065, %1066, %1067)
}

def @func_23668() -> Tensor[(12, 14, 3), float32] {
  %1068 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %1068.0
}

def @func_4674() -> Tensor[(4, 9, 14), bool] {
  %1069 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1069.0
}

def @func_19461() -> (Tensor[(12, 14, 3), float64],) {
  %1070 = @func_12541() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1070,)
}

def @func_17299() -> (Tensor[(12, 14, 3), float32],) {
  %1071 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_21278() -> (Tensor[(12, 14, 3), float32],) {
  %1073 = @func_16179() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1074 = %1073.0;
  (%1074,)
}

def @func_8906() -> (Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) {
  %1075 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %1076 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %1077 = reshape(%1075, newshape=[2, 16, 15]) /* ty=Tensor[(2, 16, 15), uint32] */;
  %1078 = reshape(%1076, newshape=[2, 16, 15]) /* ty=Tensor[(2, 16, 15), uint32] */;
  %1079 = @func_7912(%1077, %1078) /* ty=(Tensor[(2, 16, 15), bool], Tensor[(480), float32]) */;
  %1080 = @func_8110() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) */;
  %1081 = cast(meta[relay.Constant][29] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1082 = reshape(%1081, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
  %1083 = @func_5211(%1082) /* ty=(Tensor[(12, 7, ?), int64],) */;
  %1084 = %1083.0;
  %1085 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), uint32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1086 = cast(%1084, dtype="float32") /* ty=Tensor[(12, 7, ?), float32] */;
  %1087 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %1088 = %1079.0;
  %1089 = %1080.1;
  %1090 = maximum(%1085, %1086) /* ty=Tensor[(12, 7, 480), float32] */;
  (%1087, %1088, %1089, meta[relay.Constant][29] /* ty=Tensor[(84), float32] */, %1090)
}

def @func_14559(%var_14554: Tensor[(13, 15, 11), float32], %var_14555: Tensor[(13, 15, 11), float32]) -> Tensor[(13, 15, 11), float32] {
  %1091 = cast(%var_14555, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
  %1092 = shape_of(%var_14554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%var_14554, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1093, %1094) /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_15133() -> (Tensor[(12, 14, 3), float64],) {
  %1095 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1096 = %1095.1;
  (%1096,)
}

def @func_11497() -> (Tensor[(12, 14, 3), float32],) {
  %1097 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1098 = %1097.0;
  (%1098,)
}

def @func_4067() -> Tensor[(12, 14, 3), int64] {
  %1099 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %1100 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1101 = %1100.0;
  %1102 = cast(%1101, dtype="int64") /* ty=Tensor[(12, 14, 3), int64] */;
  %1103 = shape_of(%1099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%1099, dtype="int64") /* ty=Tensor[(12, 14, 3), int64] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%1104, %1105) /* ty=Tensor[(12, 14, 3), int64] */
}

def @func_23958() -> (Tensor[(4, 9, 14), bool],) {
  %1106 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1107 = %1106.0;
  (%1107,)
}

def @func_10993() -> (Tensor[(12, 14, 3), float64],) {
  %1108 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1109 = %1108.1;
  (%1109,)
}

def @func_8731() -> (Tensor[(12, 14, 3), float64],) {
  %1110 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1111 = %1110.0;
  (%1111,)
}

def @func_20762() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %1112 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1113 = cast(meta[relay.Constant][30] /* ty=Tensor[(64), uint64] */, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %1114 = reshape(%1113, newshape=[64]) /* ty=Tensor[(64), uint64] */;
  %1115 = @func_8001(%1114) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1116 = @func_19288() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1117 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1118 = %1112.0;
  %1119 = %1115.0;
  %1120 = @func_17239() /* ty=Tensor[(12, 14, 3), float32] */;
  %1121 = %1116.0;
  %1122 = %1117.0;
  (%1118, %1119, meta[relay.Constant][30] /* ty=Tensor[(64), uint64] */, %1120, %1121, %1122)
}

def @func_21023(%var_21009: Tensor[(2, 14, 7), float32], %var_21010: Tensor[(2, 14, 7), float32]) -> (Tensor[(2, 14, 7), float32], Tensor[(12, 14, 3), float32]) {
  %1123 = cast(%var_21010, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
  %1124 = shape_of(%var_21009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%var_21009, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1127 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1128 = divide(%1125, %1126) /* ty=Tensor[(2, 14, 7), float32] */;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_24125() -> (Tensor[(12, 14, 3), bool],) {
  %1130 = @func_22006() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) */;
  %1131 = %1130.0;
  (%1131,)
}

def @func_3255() -> (Tensor[(12, 14, 3), float64],) {
  %1132 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_4736() -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %1134 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
  %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %1136 = cast(%1134, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %1137 = cast(meta[relay.Constant][31] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1138 = reshape(%1135, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1139 = reshape(%1136, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
  %1140 = reshape(%1137, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1141 = @func_3549(%1138, %1139, %1140) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
  %1142 = %1141.3;
  (%1134, %1142, meta[relay.Constant][31] /* ty=Tensor[(1408), int64] */)
}

def @func_13419() -> (Tensor[(12, 14, 3), float64],) {
  %1143 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_9437() -> Tensor[(12, 14, 3), float32] {
  %1145 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1146 = %1145.0;
  %1147 = cast(%1146, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  asin(%1147) /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_11991() -> (Tensor[(12, 14, 3), float64],) {
  %1148 = @func_9006() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1148,)
}

def @func_11123(%var_11104: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
  %1149 = cast(%var_11104, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
  %1150 = cos(%1149) /* ty=Tensor[(7, 4, 1), float64] */;
  (%1150,)
}

def @func_12420(%var_12364: bool, %var_12395: Tensor[(84), float32]) -> (Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) {
  %1151 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1152 = cast(%var_12364, dtype="bool") /* ty=bool */;
  %1153 = reshape(%1152, newshape=[]) /* ty=bool */;
  %1154 = @func_5291(%1153) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
  %1155 = cast(meta[relay.Constant][32] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1156 = reshape(%1155, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1157 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1158 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1159 = cast(meta[relay.Constant][33] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1160 = cast(%var_12395, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1161 = cast(meta[relay.Constant][33] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1162 = reshape(%1159, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %1163 = reshape(%1160, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1164 = reshape(%1161, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %1165 = @func_11911(%1162, %1163, %1164) /* ty=(Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) */;
  %1166 = cast(meta[relay.Constant][33] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1167 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1168 = %1151.0;
  %1169 = %1154.4;
  %1170 = @func_3949(%1156) /* ty=Tensor[(12, 14, 3), bool] */;
  %1171 = %1157.2;
  %1172 = %1158.0;
  %1173 = %1165.0;
  %1174 = rsqrt(%1166) /* ty=Tensor[(507), float32] */;
  %1175 = %1167.0;
  (%1168, %1169, %var_12364, %1170, meta[relay.Constant][32] /* ty=Tensor[(504), float64] */, %1171, %1172, %1173, %var_12395, %1174, %1175)
}

def @func_18948() -> (Tensor[(12, 14, 3), float64],) {
  %1176 = @func_8499() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1176,)
}

def @func_16021() -> Tensor[(1408), int64] {
  @func_12623() /* ty=Tensor[(1408), int64] */
}

def @func_21747() -> Tensor[(16, 8, 6), float32] {
  %1177 = @func_17161() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) */;
  %1177.1
}

def @func_4023() -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) {
  %1178 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %1179 = %1178.1;
  %1180 = cast(%1179, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %1181 = exp(%1180) /* ty=Tensor[(4, 9, 14), float64] */;
  %1182 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1181, %1182)
}

def @func_9933() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1183 = @func_8731() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1184 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1185 = %1183.0;
  %1186 = %1184.0;
  (%1185, %1186)
}

def @func_15436() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %1187 = @func_6165() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */;
  %1188 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1189 = %1187.1;
  %1190 = %1188.0;
  (%1189, %1190)
}

def @func_17754() -> (Tensor[(12, 14, 3), float64],) {
  %1191 = @func_7085() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1192 = %1191.1;
  (%1192,)
}

def @func_9356() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
  %1193 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1194 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1195 = %1193.2;
  %1196 = @func_9072() /* ty=Tensor[(12, 14, 3), bool] */;
  %1197 = %1194.1;
  (%1195, %1196, %1197)
}

def @func_6382() -> (Tensor[(12, 14, 3), float32],) {
  %1198 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1199 = %1198.1;
  (%1199,)
}

def @func_2952() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1200 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %1201 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%1200, %1201)
}

def @func_20061() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1202 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %1203 = @func_17583() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1204 = %1202.0;
  %1205 = %1203.0;
  (%1204, %1205)
}

def @func_12169() -> Tensor[(12, 14, 3), float32] {
  %1206 = @func_9512() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1206.0
}

def @func_2039() -> Tensor[(12, 14, 3), float64] {
  %1207 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1208 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(12, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1209 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1209, %1210) /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_8753() -> Tensor[(12, 14, 3), float32] {
  %1211 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1211.0
}

def @func_13610() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1212 = @func_6632() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) */;
  %1213 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %1214 = %1212.2;
  %1215 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1213, %1214, %1215)
}

def @func_7165() -> (Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) {
  %1216 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1217 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %1218 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1219 = %1216.2;
  %1220 = %1217.1;
  %1221 = %1218.0;
  (%1219, %1220, %1221)
}

def @func_5873() -> Tensor[(1408), int64] {
  %1222 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1222.1
}

def @func_19204() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1223 = cast(meta[relay.Constant][36] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1224 = reshape(%1223, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1225 = @func_7471(%1224) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %1226 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
  %1227 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %1228 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
  %1229 = %1225.1;
  %1230 = %1226.1;
  %1231 = %1227.2;
  %1232 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1228, %1229, meta[relay.Constant][36] /* ty=Tensor[(480), float32] */, %1230, %1231, %1232)
}

def @func_21735() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1233 = @func_8606() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1234 = %1233.1;
  %1235 = cast(%1234, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1236 = reshape(%1235, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1237 = @func_20442() /* ty=Tensor[(12, 14, 3), float32] */;
  %1238 = @func_3949(%1236) /* ty=Tensor[(12, 14, 3), bool] */;
  (%1234, %1237, %1238)
}

def @func_6320(%var_6305: uint32, %var_6306: Tensor[(14, 1, 2), uint32]) -> (Tensor[(14, ?, 2), int8],) {
  %1239 = cast(%var_6305, dtype="bool") /* ty=bool */;
  %1240 = cast(%var_6306, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
  %1241 = less(%1239, %1240) /* ty=Tensor[(14, 1, 2), bool] */;
  %1242 = cast(%1241, dtype="int8") /* ty=Tensor[(14, 1, 2), int8] */;
  %1243 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1244 = cast(%var_6306, dtype="int8") /* ty=Tensor[(14, 1, 2), int8] */;
  %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1246 = bitwise_and(%1244, %1245) /* ty=Tensor[(14, ?, 2), int8] */;
  (%1246,)
}

def @func_9276() -> (Tensor[(12, 14, 3), bool],) {
  %1247 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %1248 = %1247.0;
  (%1248,)
}

def @func_9682() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1249 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
  %1250 = cast(%1249, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1251 = reshape(%1250, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1252 = @func_3949(%1251) /* ty=Tensor[(12, 14, 3), bool] */;
  (%1249, %1252)
}

def @func_14373() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %1253 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1254 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1255 = %1253.1;
  (%1254, %1255)
}

def @func_4149(%var_4147: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  %1256 = cast(%var_4147, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1257 = reshape(%1256, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1258 = @func_2393(%1257) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1259 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1260 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
  %1261 = %1258.0;
  (%1259, %1260, %1261, %var_4147)
}

def @func_21928() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  %1262 = @func_18948() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1263 = cast(meta[relay.Constant][37] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1264 = reshape(%1263, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1265 = @func_11247(%1264) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) */;
  %1266 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %1267 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  %1268 = %1262.0;
  %1269 = %1265.1;
  (%1266, %1267, %1268, %1269, meta[relay.Constant][37] /* ty=Tensor[(660), int32] */)
}

def @func_3825() -> (Tensor[(12, 14, 3), float32],) {
  %1270 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1270,)
}

def @func_10684() -> (Tensor[(12, 14, 3), bool],) {
  %1271 = @func_5184() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1272 = %1271.1;
  (%1272,)
}

def @func_16223() -> (Tensor[(8, 11, 16), int64],) {
  %1273 = @func_14740() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1274 = %1273.1;
  (%1274,)
}

def @func_24481() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %1275 = @func_20786() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1276 = %1275.1;
  %1277 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
  (%1276, %1277)
}

def @func_5843() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %1278 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1279 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1280 = cast(meta[relay.Constant][38] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1281 = reshape(%1280, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1282 = @func_2393(%1281) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1283 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1284 = %1278.1;
  %1285 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
  %1286 = %1279.0;
  %1287 = %1282.0;
  %1288 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %1289 = %1283.0;
  (%1284, %1285, %1286, %1287, meta[relay.Constant][38] /* ty=Tensor[(1408), int64] */, %1288, %1289)
}

def @func_7832() -> (Tensor[(12, 14, 3), int64],) {
  %1290 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1291 = %1290.1;
  (%1291,)
}

def @func_12454() -> Tensor[(12, 14, 3), bool] {
  %1292 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1292.0
}

def @func_21769() -> (Tensor[(12, 14, 3), int64],) {
  %1293 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_15365() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1295 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %1296 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1297 = %1295.0;
  %1298 = %1296.1;
  (%1297, %1298)
}

def @func_23156() -> Tensor[(12, 14, 3), float64] {
  @func_19675() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_23413() -> (Tensor[(12, 14, 3), float32],) {
  %1299 = @func_22783() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %1300 = %1299.2;
  (%1300,)
}

def @func_16404() -> (Tensor[(4, 9, 14), bool],) {
  %1301 = @func_15493() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) */;
  %1302 = %1301.1;
  (%1302,)
}

def @func_21449() -> (Tensor[(12, 14, 3), float32],) {
  %1303 = @func_20786() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1304 = %1303.1;
  (%1304,)
}

def @func_10076() -> Tensor[(1408), float64] {
  %1305 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1306 = %1305.0;
  %1307 = cast(%1306, dtype="float64") /* ty=Tensor[(1408), float64] */;
  sinh(%1307) /* ty=Tensor[(1408), float64] */
}

def @func_8001(%var_7985: Tensor[(64), uint64]) -> (Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1308 = cast(%var_7985, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %1309 = reshape(%1308, newshape=[16, 4]) /* ty=Tensor[(16, 4), uint64] */;
  %1310 = @func_4477(%1309) /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) */;
  %1311 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1312 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1313 = %1310.4;
  %1314 = %1311.1;
  %1315 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1312, %1313, %var_7985, %1314, %1315)
}

def @func_5377() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
  %1316 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1317 = @func_5315() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1318 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1319 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1320 = %1316.0;
  %1321 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %1322 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1323 = %1317.0;
  %1324 = %1318.1;
  (%1319, %1320, %1321, %1322, %1323, %1324)
}

def @func_19030() -> (Tensor[(12, 14, 3), float64],) {
  %1325 = @func_15152() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_10545(%var_10527: uint64) -> (Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) {
  %1327 = cast(%var_10527, dtype="bool") /* ty=bool */;
  %1328 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 14, 16), uint64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %1329 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1330 = less(%1327, %1328) /* ty=Tensor[(3, 14, 16), bool] */;
  %1331 = %1329.0;
  (%1330, %1331)
}

def @func_3109() -> Tensor[(12, 14, 3), float64] {
  @func_2043() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_3643() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %1332 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %1333 = cast(meta[relay.Constant][40] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1334 = reshape(%1333, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1335 = @func_2393(%1334) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1336 = %1332.0;
  %1337 = %1335.4;
  (%1336, %1337, meta[relay.Constant][40] /* ty=Tensor[(1408), int64] */)
}

def @func_20301() -> Tensor[(12, 14, 3), float32] {
  %1338 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1338.0
}

def @func_8110() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) {
  %1339 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1340 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1341 = %1339.1;
  %1342 = %1340.0;
  (%1341, %1342)
}

def @func_14204() -> (Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) {
  %1343 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="bool") /* ty=Tensor[(12, 3, 5), bool] */;
  %1344 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1345 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="bool") /* ty=Tensor[(12, 3, 5), bool] */;
  %1346 = dyn.reshape(%1343, %1344, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1347 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %1348 = less(%1345, %1346) /* ty=Tensor[(12, 3, 5), bool] */;
  %1349 = atanh(%1347) /* ty=Tensor[(12, 3, 5), float32] */;
  %1350 = @func_12169() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1348, %1349, %1350)
}

def @func_17448(%var_17430: Tensor[(9, 4, 15), uint16]) -> Tensor[(9, 4, 15), bool] {
  %1351 = cast(%var_17430, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %1352 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(9, 4, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1353 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 4, 15), uint16] */, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %1354 = dyn.reshape(%1351, %1352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1353, %1354) /* ty=Tensor[(9, 4, 15), bool] */
}

def @func_10397() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1355 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1356 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1357 = %1355.0;
  %1358 = %1356.0;
  (%1357, %1358)
}

def @func_20117() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1359 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1360 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1361 = %1359.0;
  %1362 = %1360.3;
  (%1361, %1362)
}

def @func_18132() -> (Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
  %1363 = @func_9119() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) */;
  %1364 = @func_15906() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1365 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1366 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1367 = @func_8606() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1368 = %1363.1;
  %1369 = %1364.0;
  %1370 = %1365.0;
  %1371 = %1366.0;
  %1372 = @func_16517() /* ty=Tensor[(12, 14, 3), bool] */;
  %1373 = %1367.0;
  (%1368, %1369, %1370, %1371, %1372, %1373)
}

def @func_15868() -> (bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
  %1374 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %1375 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1376 = reshape(%1375, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1377 = @func_2393(%1376) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1378 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1379 = %1374.2;
  %1380 = %1377.6;
  %1381 = %1378.0;
  (%1379, %1380, meta[relay.Constant][44] /* ty=Tensor[(1408), int64] */, %1381)
}

def @func_19586(%var_19555: Tensor[(6, 2, 1), bool]) -> (Tensor[(6, 2, ?), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1382 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(6, 2, 1), bool] */;
  %1383 = shape_of(%var_19555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1384 = cast(%var_19555, dtype="bool") /* ty=Tensor[(6, 2, 1), bool] */;
  %1385 = dyn.reshape(%1382, %1383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1386 = @func_17097() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1387 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1388 = logical_or(%1384, %1385) /* ty=Tensor[(6, 2, ?), bool] */;
  %1389 = %1386.0;
  %1390 = %1387.1;
  (%1388, %1389, %1390)
}

def @func_10971() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) {
  %1391 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1392 = reshape(%1391, newshape=[]) /* ty=bool */;
  %1393 = @func_10491(%1392) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1394 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %1395 = %1393.3;
  (%1394, %1395, False /* ty=bool */)
}

def @func_4803() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1396 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1397 = %1396.0;
  %1398 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1397, %1398)
}

def @func_17194() -> (Tensor[(11, 5, 3), float64], Tensor[(1408), int64]) {
  %1399 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1400 = @func_16423() /* ty=(Tensor[(1408), int64],) */;
  %1401 = %1399.1;
  %1402 = %1400.0;
  (%1401, %1402)
}

def @func_5993(%var_5985: Tensor[(22, 64), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) {
  %1403 = cast(meta[relay.Constant][46] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1404 = reshape(%1403, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %1405 = @func_5146(%1404) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %1406 = cast(%var_5985, dtype="int64") /* ty=Tensor[(22, 64), int64] */;
  %1407 = reshape(%1406, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1408 = @func_2393(%1407) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1409 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1410 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1411 = %1405.0;
  %1412 = %1408.4;
  %1413 = %1409.1;
  (%1410, %1411, meta[relay.Constant][46] /* ty=Tensor[(480), float32] */, %1412, %var_5985, %1413)
}

def @func_18786() -> Tensor[(12, 14, 3), bool] {
  %1414 = @func_10003() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1414.0
}

def @func_23626(%var_23616: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], uint64, Tensor[(1408), bool], Tensor[(660), int32]) {
  %1415 = cast(%var_23616, dtype="uint64") /* ty=uint64 */;
  %1416 = reshape(%1415, newshape=[]) /* ty=uint64 */;
  %1417 = @func_10545(%1416) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
  %1418 = cast(meta[relay.Constant][47] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1419 = reshape(%1418, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1420 = @func_11880(%1419) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) */;
  %1421 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %1422 = @func_15771() /* ty=Tensor[(12, 14, 3), float64] */;
  %1423 = %1417.1;
  %1424 = %1420.7;
  (%1421, %1422, %1423, %var_23616, %1424, meta[relay.Constant][47] /* ty=Tensor[(660), int32] */)
}

def @func_22783() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1425 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1426 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %1427 = @func_18330() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1428 = %1425.1;
  %1429 = %1426.1;
  %1430 = %1427.1;
  (%1428, %1429, %1430)
}

def @func_5078() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1431 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1432 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_12623() -> Tensor[(1408), int64] {
  @func_5873() /* ty=Tensor[(1408), int64] */
}

def @func_6369() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %1434 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1435 = cast(%1434, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1436 = reshape(%1435, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1437 = @func_3949(%1436) /* ty=Tensor[(12, 14, 3), bool] */;
  %1438 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1434, %1437, %1438)
}

def @func_14768() -> Tensor[(12, 14, 3), float64] {
  @func_6515() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_17097() -> (Tensor[(12, 14, 3), float32],) {
  %1439 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1440 = %1439.1;
  (%1440,)
}

def @func_15579() -> (Tensor[(12, 14, 3), float32],) {
  %1441 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1442 = %1441.0;
  (%1442,)
}

def @func_10241() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1443 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1444 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1445 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1446 = %1443.0;
  %1447 = %1444.0;
  %1448 = %1445.0;
  (%1446, %1447, %1448)
}

def @func_5088() -> (Tensor[(12, 14, 3), bool],) {
  %1449 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1450 = %1449.2;
  (%1450,)
}

def @func_20866(%var_20856: Tensor[(5, 6, 16), uint32]) -> (Tensor[(5, 6, 16), bool],) {
  %1451 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 6, 16), uint32] */, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %1452 = shape_of(%var_20856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1453 = cast(%var_20856, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %1454 = dyn.reshape(%1451, %1452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1455 = greater_equal(%1453, %1454) /* ty=Tensor[(5, 6, 16), bool] */;
  (%1455,)
}

def @func_16777() -> (Tensor[(12, 14, 3), float64],) {
  %1456 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1457 = %1456.2;
  (%1457,)
}

def @func_17583() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1458 = @func_9006() /* ty=Tensor[(12, 14, 3), float64] */;
  %1459 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1458, %1459)
}

def @func_24376() -> (Tensor[(12, 14, 3), float64],) {
  %1460 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1461 = %1460.2;
  (%1461,)
}

def @func_10364() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1462 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1463 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1464 = @func_10139() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1465 = %1462.1;
  %1466 = %1463.0;
  %1467 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  %1468 = %1464.0;
  (%1465, %1466, %1467, %1468)
}

def @func_21809() -> (Tensor[(12, 14, 3), bool],) {
  %1469 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1470 = %1469.1;
  (%1470,)
}

def @func_13844() -> Tensor[(12, 14, 3), float64] {
  %1471 = @func_13481() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1471.0
}

def @func_22006() -> (Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) {
  %1472 = @func_5088() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1473 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
  %1474 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
  %1475 = reshape(%1473, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), bool] */;
  %1476 = reshape(%1474, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), bool] */;
  %1477 = @func_6736(%1475, %1476) /* ty=(Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) */;
  %1478 = %1472.0;
  %1479 = %1477.0;
  %1480 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1478, %1479, meta[relay.Constant][49] /* ty=Tensor[(210), bool] */, %1480)
}

def @func_23749() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %1481 = @func_12792() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) */;
  %1482 = %1481.2;
  %1483 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1482, %1483)
}

def @func_11055() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
  %1484 = @func_10993() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1485 = cast(meta[relay.Constant][50] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1486 = reshape(%1485, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %1487 = @func_5146(%1486) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %1488 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  %1489 = cast(%1488, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1490 = cast(%1488, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %1491 = cast(meta[relay.Constant][51] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1492 = reshape(%1489, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1493 = reshape(%1490, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
  %1494 = reshape(%1491, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1495 = @func_3549(%1492, %1493, %1494) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
  %1496 = %1484.0;
  %1497 = %1487.0;
  %1498 = %1495.2;
  (%1496, %1497, meta[relay.Constant][50] /* ty=Tensor[(480), float32] */, %1488, %1498, meta[relay.Constant][51] /* ty=Tensor[(1408), int64] */)
}

def @func_17736() -> Tensor[(9, 8, 9), float32] {
  %1499 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 9), float32] */;
  atanh(%1499) /* ty=Tensor[(9, 8, 9), float32] */
}

def @func_24197() -> Tensor[(12, 14, 3), float32] {
  %1500 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1500.0
}

def @func_593(%var_544: Tensor[(16, 2, 2), uint64], %var_545: Tensor[(16, 2, 2), uint64]) -> (Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) {
  %1501 = cast(%var_545, dtype="uint64") /* ty=Tensor[(16, 2, 2), uint64] */;
  %1502 = shape_of(%var_544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1503 = cast(%var_544, dtype="uint64") /* ty=Tensor[(16, 2, 2), uint64] */;
  %1504 = dyn.reshape(%1501, %1502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1505 = cast(%var_545, dtype="int8") /* ty=Tensor[(16, 2, 2), int8] */;
  %1506 = shape_of(%var_544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1507 = cast(%var_544, dtype="int8") /* ty=Tensor[(16, 2, 2), int8] */;
  %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1509 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1510 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1511 = reshape(%1509, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1512 = reshape(%1510, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1513 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1514 = @func_462(%1511, %1512) /* ty=Tensor[(10, 6, 11), bool] */;
  %1515 = cast(%1514, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1516 = reshape(%1513, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1517 = reshape(%1515, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1518 = @func_462(%1516, %1517) /* ty=Tensor[(10, 6, 11), bool] */;
  %1519 = cast(%1518, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1520 = cast(%1514, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1521 = reshape(%1519, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1522 = reshape(%1520, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1523 = add(%1503, %1504) /* ty=Tensor[(16, 2, 2), uint64] */;
  %1524 = minimum(%1507, %1508) /* ty=Tensor[(16, 2, 2), int8] */;
  %1525 = @func_462(%1521, %1522) /* ty=Tensor[(10, 6, 11), bool] */;
  (%1523, %1524, %1514, meta[relay.Constant][53] /* ty=Tensor[(660), int32] */, %1518, %1525)
}

def @func_9876(%var_9843: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1526 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1527 = %1526.0;
  %1528 = cast(%var_9843, dtype="uint64") /* ty=Tensor[(4, 9, 14), uint64] */;
  %1529 = shape_of(%1527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1530 = cast(%1527, dtype="uint64") /* ty=Tensor[(4, 9, 14), uint64] */;
  %1531 = dyn.reshape(%1528, %1529, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1532 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1533 = minimum(%1530, %1531) /* ty=Tensor[(4, 9, 14), uint64] */;
  %1534 = %1532.0;
  %1535 = @func_9046() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1533, %1534, %1535)
}

def @func_16936() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), int64]) {
  %1536 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1537 = @func_10076() /* ty=Tensor[(1408), float64] */;
  %1538 = %1536.1;
  (%1537, %1538)
}

def @func_11406() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1539 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1540 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1541 = %1539.0;
  %1542 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1543 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
  %1544 = %1540.0;
  (%1541, %1542, %1543, %1544)
}

def @func_23800() -> (Tensor[(12, 14, 3), float32],) {
  %1545 = @func_18143() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1546 = %1545.0;
  (%1546,)
}

def @func_16352() -> (Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) {
  %1547 = @func_10684() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1548 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1549 = reshape(%1548, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1550 = @func_12760(%1549) /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) */;
  %1551 = %1547.0;
  %1552 = %1550.3;
  (%1551, %1552, meta[relay.Constant][54] /* ty=Tensor[(660), int32] */)
}

def @func_12792() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) {
  %1553 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1554 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %1555 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %1556 = %1553.1;
  %1557 = %1554.1;
  (%1555, %1556, %1557)
}

def @func_3949(%var_3936: Tensor[(12, 14, 3), float64]) -> Tensor[(12, 14, 3), bool] {
  %1558 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1559 = %1558.0;
  %1560 = cast(%var_3936, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %1561 = shape_of(%1559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1562 = cast(%1559, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %1563 = dyn.reshape(%1560, %1561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1562, %1563) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_6688() -> (Tensor[(4, 9, 14), bool],) {
  %1564 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
  (%1564,)
}

def @func_11203() -> Tensor[(12, 14, 3), float64] {
  %1565 = @func_8906() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) */;
  %1565.0
}

def @func_5634() -> Tensor[(12, 14, 3), float32] {
  %1566 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1566.0
}

def @func_24545(%var_24530: Tensor[(11, 22), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(2, 11, 11), float32], Tensor[(11, 22), float32]) {
  %1567 = @func_15724() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1568 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1569 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1570 = cast(%var_24530, dtype="float32") /* ty=Tensor[(11, 22), float32] */;
  %1571 = reshape(%1570, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), float32] */;
  %1572 = @func_8405(%1571) /* ty=(Tensor[(2, 11, 11), float32],) */;
  %1573 = %1567.0;
  %1574 = %1568.0;
  %1575 = %1569.3;
  %1576 = %1572.0;
  (%1573, %1574, %1575, %1576, %var_24530)
}

def @func_13683() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1577 = @func_11948() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1578 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1579 = %1577.2;
  (%1578, %1579)
}

def @func_16483() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1580 = @func_12082() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1581 = %1580.1;
  %1582 = @func_8753() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1581, %1582)
}

def @func_4887() -> (Tensor[(12, 14, 3), float32],) {
  %1583 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1584 = %1583.0;
  (%1584,)
}

def @func_18488() -> Tensor[(12, 14, 3), float32] {
  %1585 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1585.0
}

def @func_3924() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1586 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1587 = cast(%1586, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1588 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1589 = acosh(%1587) /* ty=Tensor[(12, 14, 3), float64] */;
  %1590 = %1588.0;
  %1591 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%1589, %1590, %1591)
}

def @func_18143() -> (Tensor[(12, 14, 3), float32],) {
  %1592 = @func_16483() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1593 = %1592.1;
  (%1593,)
}

def @func_6296() -> (Tensor[(12, 14, 3), bool],) {
  %1594 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1595 = %1594.1;
  (%1595,)
}

def @func_23057() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1596 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1597 = %1596.2;
  %1598 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1599 = @func_20708() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1597, %1598, %1599)
}

def @func_5184() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1600 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1601 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1602 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1603 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1604 = %1600.0;
  %1605 = %1601.1;
  %1606 = %1602.1;
  %1607 = %1603.0;
  (%1604, %1605, %1606, %1607)
}

def @func_11880(%var_11850: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) {
  %1608 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1609 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1610 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1611 = @func_7085() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1612 = cast(%var_11850, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1613 = reshape(%1612, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1614 = @func_2739(%1613) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
  %1615 = @func_8043() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) */;
  %1616 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1617 = %1616.0;
  %1618 = cast(%1617, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1619 = sin(%1618) /* ty=Tensor[(1408), float32] */;
  %1620 = cast(%1619, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %1621 = log10(%1620) /* ty=Tensor[(1408), float32] */;
  %1622 = cast(%1621, dtype="bool") /* ty=Tensor[(1408), bool] */;
  %1623 = shape_of(%1619, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1624 = cast(%1619, dtype="bool") /* ty=Tensor[(1408), bool] */;
  %1625 = dyn.reshape(%1622, %1623, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1626 = %1608.0;
  %1627 = %1609.3;
  %1628 = %1610.1;
  %1629 = %1611.1;
  %1630 = %1614.0;
  %1631 = %1615.1;
  %1632 = less(%1624, %1625) /* ty=Tensor[(1408), bool] */;
  (%1626, %1627, %1628, %1629, %1630, %var_11850, %1631, %1632)
}

def @func_11247(%var_11238: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) {
  %1633 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1634 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1635 = cast(%var_11238, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1636 = cast(%var_11238, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1637 = reshape(%1635, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1638 = reshape(%1636, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1639 = %1633.0;
  %1640 = %1634.0;
  %1641 = @func_462(%1637, %1638) /* ty=Tensor[(10, 6, 11), bool] */;
  (%1639, %1640, %1641, %var_11238)
}

def @func_6515() -> Tensor[(12, 14, 3), float64] {
  %1642 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1642.1
}

def @func_5818() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %1643 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1644 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %1645 = %1643.2;
  %1646 = %1644.4;
  (%1645, %1646)
}

def @func_14211() -> Tensor[(12, 14, 3), float32] {
  %1647 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1647.0
}

def @func_18462() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %1648 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1649 = @func_17948() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1650 = %1648.1;
  %1651 = @func_15967() /* ty=Tensor[(1408), int64] */;
  %1652 = %1649.0;
  (%1650, %1651, %1652)
}

def @func_21828() -> Tensor[(12, 14, 3), bool] {
  %1653 = @func_21809() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1653.0
}

def @func_21140() -> (Tensor[(12, 14, 3), float32],) {
  %1654 = @func_15670() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %1655 = %1654.1;
  (%1655,)
}

def @func_23895() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1656 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %1657 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1656, %1657)
}

def @func_4850() -> (Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) {
  %1658 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1659 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
  (%1658, %1659)
}

def @func_15670() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
  %1660 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1661 = %1660.1;
  %1662 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1661, %1662)
}

def @func_462(%var_456: Tensor[(10, 6, 11), int32], %var_457: Tensor[(10, 6, 11), int32]) -> Tensor[(10, 6, 11), bool] {
  %1663 = cast(%var_457, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %1664 = shape_of(%var_456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1665 = cast(%var_456, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %1666 = dyn.reshape(%1663, %1664, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1665, %1666) /* ty=Tensor[(10, 6, 11), bool] */
}

def @func_16122() -> (Tensor[(12, 14, 3), float64],) {
  %1667 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1668 = %1667.0;
  (%1668,)
}

def @func_11911(%var_11884: Tensor[(13, 13, 3), float32], %var_11891: Tensor[(84), float32], %var_11897: Tensor[(13, 13, 3), float32]) -> (Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) {
  %1669 = cast(%var_11891, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1670 = reshape(%1669, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
  %1671 = @func_5211(%1670) /* ty=(Tensor[(12, 7, ?), int64],) */;
  %1672 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1673 = cast(%var_11884, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
  %1674 = rsqrt(%1673) /* ty=Tensor[(13, 13, 3), float32] */;
  %1675 = cast(%var_11897, dtype="uint16") /* ty=Tensor[(13, 13, 3), uint16] */;
  %1676 = shape_of(%1674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1677 = cast(%1674, dtype="uint16") /* ty=Tensor[(13, 13, 3), uint16] */;
  %1678 = dyn.reshape(%1675, %1676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1679 = %1671.0;
  %1680 = %1672.0;
  %1681 = bitwise_xor(%1677, %1678) /* ty=Tensor[(13, 13, 3), uint16] */;
  (%1679, %var_11891, %1680, %1681)
}

def @func_15152() -> (Tensor[(12, 14, 3), float64],) {
  %1682 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1683 = %1682.0;
  (%1683,)
}

def @func_18237(%var_18229: Tensor[(3, 4, 1), float64]) -> (Tensor[(3, 4, 1), float64],) {
  %1684 = cast(%var_18229, dtype="float64") /* ty=Tensor[(3, 4, 1), float64] */;
  %1685 = erf(%1684) /* ty=Tensor[(3, 4, 1), float64] */;
  (%1685,)
}

def @func_18956() -> (Tensor[(12, 14, 3), int64],) {
  %1686 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1687 = %1686.0;
  (%1687,)
}

def @func_14635(%var_14614: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), uint8], Tensor[(11, 5, 3), float64]) {
  %1688 = @func_9119() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) */;
  %1689 = %1688.1;
  %1690 = cast(%var_14614, dtype="uint8") /* ty=Tensor[(4, 9, 14), uint8] */;
  %1691 = shape_of(%1689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1692 = cast(%1689, dtype="uint8") /* ty=Tensor[(4, 9, 14), uint8] */;
  %1693 = dyn.reshape(%1690, %1691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1694 = bitwise_and(%1692, %1693) /* ty=Tensor[(4, 9, 14), uint8] */;
  %1695 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
  (%1694, %1695)
}

def @func_2043() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_15563() -> (Tensor[(12, 14, 3), float32],) {
  %1696 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1696,)
}

def @func_7619() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1697 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1698 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %1699 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1700 = %1697.0;
  %1701 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1702 = %1698.1;
  %1703 = %1699.0;
  (%1700, %1701, %1702, %1703)
}

def @func_18698(%var_18675: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %1704 = cast(%var_18675, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %1705 = cast(meta[relay.Constant][55] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
  %1706 = reshape(%1705, newshape=[525]) /* ty=Tensor[(525), int8] */;
  %1707 = @func_12568(%1706) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) */;
  %1708 = erf(%1704) /* ty=Tensor[(5, 14, 4), float64] */;
  %1709 = %1707.0;
  (%1708, %1709, meta[relay.Constant][55] /* ty=Tensor[(525), int8] */)
}

def @func_2875(%var_2860: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1710 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %1711 = shape_of(%var_2860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1712 = cast(%var_2860, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
  %1713 = dyn.reshape(%1710, %1711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1714 = logical_and(%1712, %1713) /* ty=Tensor[(4, 9, 14), bool] */;
  %1715 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %1716 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1714, %1715, %1716)
}

def @func_13187() -> (Tensor[(12, 14, 3), float32],) {
  %1717 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1718 = %1717.3;
  (%1718,)
}

def @func_6760() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  %1719 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1720 = cast(meta[relay.Constant][57] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1721 = reshape(%1720, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1722 = @func_4149(%1721) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1723 = %1719.0;
  %1724 = %1722.0;
  (%1723, %1724, meta[relay.Constant][57] /* ty=Tensor[(1408), int64] */)
}

def @func_16386(%var_16360: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1725 = cast(%var_16360, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %1726 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1727 = cos(%1725) /* ty=Tensor[(12, 6, 7), float32] */;
  %1728 = @func_8753() /* ty=Tensor[(12, 14, 3), float32] */;
  %1729 = %1726.0;
  (%1727, %1728, %1729)
}

def @func_7054() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1730 = @func_6831() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %1731 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1732 = %1730.0;
  %1733 = %1731.0;
  (%1732, %1733)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4676() -> Tensor[(4, 9, 14), bool] {
  @func_4674() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_3871() -> Tensor[(12, 14, 3), float32] {
  @func_3869() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_3644() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %6 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
    %0 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %2 = reshape(%1, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %3 = @func_2393(%2) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %4 = %0.0;
    %5 = %3.4;
    (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(1408), int64] */)
  };
  %6() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */
}

def @func_4674() -> Tensor[(4, 9, 14), bool] {
  %7 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %7.0
}

def @func_8940() -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) {
  %8 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %9 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %10 = %8.0;
  %11 = %9.0;
  (%10, %11)
}

def @func_19586(%var_19555: Tensor[(6, 2, 1), bool]) -> (Tensor[(6, 2, ?), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(6, 2, 1), bool] */;
  %13 = shape_of(%var_19555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_19555, dtype="bool") /* ty=Tensor[(6, 2, 1), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = @func_17097() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %17 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %18 = logical_or(%14, %15) /* ty=Tensor[(6, 2, ?), bool] */;
  %19 = %16.0;
  %20 = %17.1;
  (%18, %19, %20)
}

def @func_22293(%var_22272: Tensor[(5, 132), int32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(5, 132), int32]) {
  %21 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %22 = @func_8395() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %23 = cast(%var_22272, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
  %24 = reshape(%23, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %25 = @func_11247(%24) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) */;
  %26 = %21.0;
  %27 = %22.0;
  %28 = %25.3;
  (%26, %27, %28, %var_22272)
}

def @func_8810() -> (Tensor[(12, 14, 3), int64],) {
  %31 = fn () -> (Tensor[(12, 14, 3), int64],) {
    %29 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
    %30 = %29.0;
    (%30,)
  };
  %31() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_18490() -> Tensor[(12, 14, 3), float32] {
  @func_18488() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_24199() -> Tensor[(12, 14, 3), float32] {
  @func_24197() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_22296(%var_22294: Tensor[(5, 132), int32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(5, 132), int32]) {
  @func_22293(%var_22294) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(5, 132), int32]) */
}

def @func_13685() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_13683() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_16181() -> (Tensor[(12, 14, 3), float32],) {
  @func_16179() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_5293(%var_5292: bool) -> (Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) {
  %45 = fn (%var_5239: bool) -> (Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) {
    %32 = cast(%var_5239, dtype="bool") /* ty=bool */;
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 16, 1), bool] */, dtype="bool") /* ty=Tensor[(3, 16, 1), bool] */;
    %34 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %35 = %34.2;
    %36 = cast(%35, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %37 = cast(%35, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %38 = reshape(%36, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %39 = reshape(%37, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %40 = @func_1841(%38, %39) /* ty=(Tensor[(8, 11, 16), int64],) */;
    %41 = logical_and(%32, %33) /* ty=Tensor[(3, 16, 1), bool] */;
    %42 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %43 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
    %44 = %40.0;
    (%41, %35, %42, %43, %44)
  };
  %45(%var_5292) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */
}

def @func_9358() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
  @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */
}

def @func_9513() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %49 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %46 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %47 = %46.0;
    %48 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    (%47, %48)
  };
  %49() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_8396() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %66 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
    %50 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
    %51 = %50.1;
    %52 = cast(%51, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
    %53 = cast(%51, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %54 = reshape(%53, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
    %55 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %56 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %57 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %58 = sigmoid(%52) /* ty=Tensor[(12, 14, 3), float32] */;
    %59 = @func_3949(%54) /* ty=Tensor[(12, 14, 3), bool] */;
    %60 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
    %61 = %55.4;
    %62 = %56.0;
    %63 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
    %64 = %57.2;
    %65 = @func_6515() /* ty=Tensor[(12, 14, 3), float64] */;
    (%58, %59, %60, %61, %62, %63, %64, %65)
  };
  %66() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_10853(%var_10813: Tensor[(14, 1, 3), uint16], %var_10814: Tensor[(14, 5, 3), uint16]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
  %67 = cast(%var_10813, dtype="bool") /* ty=Tensor[(14, 1, 3), bool] */;
  %68 = cast(%var_10814, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
  %69 = cast(%var_10814, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %70 = log2(%69) /* ty=Tensor[(14, 5, 3), float64] */;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
  %72 = cast(%var_10813, dtype="float32") /* ty=Tensor[(14, 1, 3), float32] */;
  %73 = divide(%71, %72) /* ty=Tensor[(14, 5, 3), float32] */;
  %74 = cast(%var_10814, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="float64") /* ty=Tensor[(14, 5, 3), float64] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %78 = floor_divide(%76, %77) /* ty=Tensor[(14, 5, 3), float64] */;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
  %80 = less(%67, %68) /* ty=Tensor[(14, 5, 3), bool] */;
  %81 = tan(%79) /* ty=Tensor[(14, 5, 3), float32] */;
  (%80, %81)
}

def @func_14679() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  @func_14677() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) */
}

def @func_17469() -> Tensor[(12, 14, 3), int64] {
  %83 = fn () -> Tensor[(12, 14, 3), int64] {
    %82 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
    %82.0
  };
  %83() /* ty=Tensor[(12, 14, 3), int64] */
}

def @func_5043() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  %84 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %87 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %88 = atanh(%86) /* ty=Tensor[(12, 14, 3), float32] */;
  %89 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %90 = %87.2;
  (%88, %89, %90)
}

def @func_22307() -> Tensor[(12, 14, 3), bool] {
  %91 = @func_10003() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %91.0
}

def @func_5089() -> (Tensor[(12, 14, 3), bool],) {
  %94 = fn () -> (Tensor[(12, 14, 3), bool],) {
    %92 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %93 = %92.2;
    (%93,)
  };
  %94() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_21780() -> Tensor[(11, 5, 3), float64] {
  %95 = fn () -> Tensor[(11, 5, 3), float64] {
    @func_5663() /* ty=Tensor[(11, 5, 3), float64] */
  };
  %95() /* ty=Tensor[(11, 5, 3), float64] */
}

def @func_17738() -> Tensor[(9, 8, 9), float32] {
  @func_17736() /* ty=Tensor[(9, 8, 9), float32] */
}

def @func_5725() -> (Tensor[(12, 14, 3), float64],) {
  %96 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  (%96,)
}

def @func_9749() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_9072() -> Tensor[(12, 14, 3), bool] {
  %97 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %98 = %97.1;
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%101, %102) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_10242() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %109 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %103 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %104 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %105 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %106 = %103.0;
    %107 = %104.0;
    %108 = %105.0;
    (%106, %107, %108)
  };
  %109() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_3949(%var_3936: Tensor[(12, 14, 3), float64]) -> Tensor[(12, 14, 3), bool] {
  %110 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %111 = %110.0;
  %112 = cast(%var_3936, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%111, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%114, %115) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_2763() -> (Tensor[(12, 14, 3), float64],) {
  %117 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %116 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    (%116,)
  };
  %117() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_7013() -> Tensor[(12, 14, 3), float32] {
  %118 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %118.0
}

def @func_19348(%var_19347: Tensor[(15, 8, 10), uint32]) -> Tensor[(15, 8, 10), uint32] {
  %123 = fn (%var_19338: Tensor[(15, 8, 10), uint32]) -> Tensor[(15, 8, 10), uint32] {
    %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 8, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 8, 10), uint32] */;
    %120 = shape_of(%var_19338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(%var_19338, dtype="uint32") /* ty=Tensor[(15, 8, 10), uint32] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    maximum(%121, %122) /* ty=Tensor[(15, 8, 10), uint32] */
  };
  %123(%var_19347) /* ty=Tensor[(15, 8, 10), uint32] */
}

def @func_17584() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %126 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %124 = @func_9006() /* ty=Tensor[(12, 14, 3), float64] */;
    %125 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
    (%124, %125)
  };
  %126() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_17559() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) {
  @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */
}

def @func_14088() -> (Tensor[(1408), int64],) {
  @func_14086() /* ty=(Tensor[(1408), int64],) */
}

def @func_18488() -> Tensor[(12, 14, 3), float32] {
  %127 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %127.0
}

def @func_7055() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %132 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
    %128 = @func_6831() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
    %129 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %130 = %128.0;
    %131 = %129.0;
    (%130, %131)
  };
  %132() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_5604() -> (Tensor[(12, 14, 3), float32],) {
  %135 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %133 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %134 = %133.0;
    (%134,)
  };
  %135() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_8405(%var_8399: Tensor[(2, 11, 11), float32]) -> (Tensor[(2, 11, 11), float32],) {
  %136 = cast(%var_8399, dtype="float32") /* ty=Tensor[(2, 11, 11), float32] */;
  %137 = sigmoid(%136) /* ty=Tensor[(2, 11, 11), float32] */;
  (%137,)
}

def @func_3255() -> (Tensor[(12, 14, 3), float64],) {
  %138 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %139 = %138.0;
  (%139,)
}

def @func_17162() -> (Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) {
  %146 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) {
    %140 = @func_7165() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) */;
    %141 = cast(meta[relay.Constant][5] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
    %142 = reshape(%141, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
    %143 = %140.2;
    %144 = @func_13537(%142) /* ty=Tensor[(16, 8, 6), float32] */;
    %145 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
    (%143, %144, meta[relay.Constant][5] /* ty=Tensor[(768), float32] */, %145)
  };
  %146() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_21809() -> (Tensor[(12, 14, 3), bool],) {
  %147 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %148 = %147.1;
  (%148,)
}

def @func_19372() -> (Tensor[(12, 14, 3), float64],) {
  %151 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %149 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %150 = %149.0;
    (%150,)
  };
  %151() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_22605() -> (Tensor[(9, 8, 9), float32],) {
  %152 = @func_17736() /* ty=Tensor[(9, 8, 9), float32] */;
  (%152,)
}

def @func_10076() -> Tensor[(1408), float64] {
  %153 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(1408), float64] */;
  sinh(%155) /* ty=Tensor[(1408), float64] */
}

def @func_19537() -> Tensor[(12, 14, 3), float64] {
  @func_2228() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_14052(%var_14035: int8) -> (Tensor[(12, 4, 9), bool], Tensor[(12, 14, 3), float64]) {
  %156 = cast(%var_14035, dtype="bool") /* ty=bool */;
  %157 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 4, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 4, 9), bool] */;
  %158 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %159 = less(%156, %157) /* ty=Tensor[(12, 4, 9), bool] */;
  %160 = %158.0;
  (%159, %160)
}

def @func_24411() -> Tensor[(12, 14, 3), float64] {
  %161 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %161.0
}

def @func_5315() -> (Tensor[(12, 14, 3), int64],) {
  %162 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
  (%162,)
}

def @func_2841() -> (Tensor[(12, 14, 3), float32],) {
  %163 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %164 = %163.0;
  (%164,)
}

def @func_21637(%var_21634: uint64, %var_21635: Tensor[(42), uint16], %var_21636: Tensor[(1, 210), uint16]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(3, 14, 16), bool], uint64, Tensor[(1, 210), uint16], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
  %177 = fn (%var_21621: uint64, %var_21628: Tensor[(42), uint16], %var_21629: Tensor[(1, 210), uint16]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(3, 14, 16), bool], uint64, Tensor[(1, 210), uint16], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
    %165 = cast(%var_21621, dtype="uint64") /* ty=uint64 */;
    %166 = reshape(%165, newshape=[]) /* ty=uint64 */;
    %167 = @func_10545(%166) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
    %168 = cast(%var_21628, dtype="uint16") /* ty=Tensor[(42), uint16] */;
    %169 = cast(%var_21629, dtype="uint16") /* ty=Tensor[(1, 210), uint16] */;
    %170 = reshape(%168, newshape=[42]) /* ty=Tensor[(42), uint16] */;
    %171 = reshape(%169, newshape=[1, 210]) /* ty=Tensor[(1, 210), uint16] */;
    %172 = @func_16891(%170, %171) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) */;
    %173 = @func_13072() /* ty=Tensor[(4, 9, 14), bool] */;
    %174 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
    %175 = %167.0;
    %176 = %172.4;
    (%173, %174, %175, %var_21621, %176, %var_21628, %var_21629)
  };
  %177(%var_21634, %var_21635, %var_21636) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(3, 14, 16), bool], uint64, Tensor[(1, 210), uint16], Tensor[(42), uint16], Tensor[(1, 210), uint16]) */
}

def @func_3690() -> (Tensor[(12, 14, 3), float32],) {
  @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_17195() -> (Tensor[(11, 5, 3), float64], Tensor[(1408), int64]) {
  %182 = fn () -> (Tensor[(11, 5, 3), float64], Tensor[(1408), int64]) {
    %178 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %179 = @func_16423() /* ty=(Tensor[(1408), int64],) */;
    %180 = %178.1;
    %181 = %179.0;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(1408), int64]) */
}

def @func_16406() -> (Tensor[(4, 9, 14), bool],) {
  @func_16404() /* ty=(Tensor[(4, 9, 14), bool],) */
}

def @func_12424(%var_12422: bool, %var_12423: Tensor[(84), float32]) -> (Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) {
  @func_12420(%var_12422, %var_12423) /* ty=(Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_4942() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %187 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %183 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %184 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %185 = %183.0;
    %186 = %184.0;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_15214() -> (Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) {
  @func_15212() /* ty=(Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) */
}

def @func_4644() -> Tensor[(12, 14, 3), float32] {
  @func_4642() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_21737() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  @func_21735() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_19275(%var_19273: Tensor[(9, 14, 12), float64], %var_19274: Tensor[(9, 14, 12), float64]) -> (Tensor[(9, 14, 12), bool], Tensor[(9, 14, 12), bool]) {
  @func_19271(%var_19273, %var_19274) /* ty=(Tensor[(9, 14, 12), bool], Tensor[(9, 14, 12), bool]) */
}

def @func_18428() -> (Tensor[(12, 14, 3), float64],) {
  @func_18426() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_16779() -> (Tensor[(12, 14, 3), float64],) {
  @func_16777() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_15634(%var_15625: Tensor[(1, 660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(1, 660), int32], Tensor[(4, 9, 14), float64]) {
  %188 = cast(%var_15625, dtype="int32") /* ty=Tensor[(1, 660), int32] */;
  %189 = reshape(%188, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %190 = @func_13769(%189) /* ty=(Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) */;
  %191 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
  %192 = cast(%191, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
  %193 = %190.0;
  %194 = asinh(%192) /* ty=Tensor[(4, 9, 14), float64] */;
  (%193, %var_15625, %194)
}

def @func_14313() -> Tensor[(12, 14, 3), float32] {
  @func_14311() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_4479(%var_4478: Tensor[(16, 4), uint64]) -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) {
  %208 = fn (%var_4451: Tensor[(16, 4), uint64]) -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) {
    %195 = cast(%var_4451, dtype="uint64") /* ty=Tensor[(16, 4), uint64] */;
    %196 = cast(%var_4451, dtype="uint64") /* ty=Tensor[(16, 4), uint64] */;
    %197 = reshape(%195, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), uint64] */;
    %198 = reshape(%196, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), uint64] */;
    %199 = @func_593(%197, %198) /* ty=(Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) */;
    %200 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
    %201 = %200.0;
    %202 = cast(%201, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %203 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
    %204 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %205 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
    %206 = %199.3;
    %207 = cos(%202) /* ty=Tensor[(12, 14, 3), float64] */;
    (%203, %204, %205, %206, %var_4451, %207)
  };
  %208(%var_4478) /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) */
}

def @func_15579() -> (Tensor[(12, 14, 3), float32],) {
  %209 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %210 = %209.0;
  (%210,)
}

def @func_13471() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %215 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %211 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %212 = @func_9046() /* ty=Tensor[(12, 14, 3), float32] */;
    %213 = %211.0;
    %214 = @func_8499() /* ty=Tensor[(12, 14, 3), float64] */;
    (%212, %213, %214)
  };
  %215() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_21049() -> Tensor[(12, 14, 3), float32] {
  %216 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %216.1
}

def @func_6371() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_13561() -> (Tensor[(12, 14, 3), float64],) {
  %219 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %217 = @func_13419() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %218 = %217.0;
    (%218,)
  };
  %219() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_24108() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float64]) {
  %227 = fn () -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float64]) {
    %220 = @func_18220() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
    %221 = @func_16352() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) */;
    %222 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %223 = @func_10076() /* ty=Tensor[(1408), float64] */;
    %224 = %220.0;
    %225 = %221.2;
    %226 = %222.1;
    (%223, %224, %225, %226)
  };
  %227() /* ty=(Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float64]) */
}

def @func_16051() -> (Tensor[(12, 14, 3), float32],) {
  @func_16049() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_10139() -> (Tensor[(12, 14, 3), float32],) {
  %228 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %229 = %228.1;
  (%229,)
}

def @func_5378() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
  %239 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
    %230 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %231 = @func_5315() /* ty=(Tensor[(12, 14, 3), int64],) */;
    %232 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %233 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %234 = %230.0;
    %235 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
    %236 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    %237 = %231.0;
    %238 = %232.1;
    (%233, %234, %235, %236, %237, %238)
  };
  %239() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */
}

def @func_21928() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  %240 = @func_18948() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %242 = reshape(%241, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %243 = @func_11247(%242) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) */;
  %244 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  %245 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  %246 = %240.0;
  %247 = %243.1;
  (%244, %245, %246, %247, meta[relay.Constant][7] /* ty=Tensor[(660), int32] */)
}

def @func_20764() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  @func_20762() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) */
}

def @func_12988() -> Tensor[(12, 14, 3), float64] {
  @func_12986() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_12986() -> Tensor[(12, 14, 3), float64] {
  @func_8499() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_11126(%var_11124: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
  @func_11123(%var_11124) /* ty=(Tensor[(7, 4, 1), float64],) */
}

def @func_3688() -> (Tensor[(12, 14, 3), float32],) {
  %248 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  (%248,)
}

def @func_22201() -> (Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) {
  %262 = fn () -> (Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) {
    %249 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %250 = %249.1;
    %251 = cast(%250, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
    %252 = reshape(%251, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
    %253 = @func_16386(%252) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %254 = %253.0;
    %255 = cast(%250, dtype="int32") /* ty=Tensor[(12, 14, 3), int32] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %257 = cast(%254, dtype="int32") /* ty=Tensor[(12, 6, 7), int32] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %259 = @func_21449() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %260 = minimum(%257, %258) /* ty=Tensor[(12, 6, 7), int32] */;
    %261 = %259.0;
    (%260, %261)
  };
  %262() /* ty=(Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) */
}

def @func_18948() -> (Tensor[(12, 14, 3), float64],) {
  %263 = @func_8499() /* ty=Tensor[(12, 14, 3), float64] */;
  (%263,)
}

def @func_20555() -> (Tensor[(12, 14, 3), float64],) {
  %264 = @func_19461() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %265 = %264.0;
  (%265,)
}

def @func_12043() -> Tensor[(12, 14, 3), float64] {
  %267 = fn () -> Tensor[(12, 14, 3), float64] {
    %266 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %266.2
  };
  %267() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_10399() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  @func_10397() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_15104(%var_15083: Tensor[(396), float32]) -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(22, 64), float64], Tensor[(12, 14, 3), float64], Tensor[(11, 3, 12), float32], Tensor[(396), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %268 = @func_11276() /* ty=(Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %269 = @func_11991() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %270 = %269.0;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %272 = reshape(%271, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %273 = @func_4553(%272) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) */;
  %274 = @func_14677() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) */;
  %275 = %274.1;
  %276 = cast(%275, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %277 = reshape(%276, newshape=[22, 64]) /* ty=Tensor[(22, 64), int64] */;
  %278 = @func_5993(%277) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) */;
  %279 = %278.4;
  %280 = cast(%275, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(%279, dtype="float32") /* ty=Tensor[(22, 64), float32] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %284 = floor_mod(%282, %283) /* ty=Tensor[(22, 64), float32] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(22, 64), float64] */;
  %286 = @func_13419() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %287 = cast(%var_15083, dtype="float32") /* ty=Tensor[(396), float32] */;
  %288 = reshape(%287, newshape=[11, 3, 12]) /* ty=Tensor[(11, 3, 12), float32] */;
  %289 = @func_12236(%288) /* ty=(Tensor[(11, 3, 12), float32],) */;
  %290 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %291 = %268.0;
  %292 = %273.0;
  %293 = log10(%285) /* ty=Tensor[(22, 64), float64] */;
  %294 = %286.0;
  %295 = %289.0;
  %296 = %290.1;
  %297 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%291, %270, %292, %293, %294, %295, %var_15083, %296, %297)
}

def @func_16023() -> Tensor[(1408), int64] {
  @func_16021() /* ty=Tensor[(1408), int64] */
}

def @func_20529() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  %298 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %299 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %300 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %301 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %302 = %298.0;
  %303 = %299.1;
  %304 = %300.0;
  %305 = %301.0;
  (%302, %303, %304, %305)
}

def @func_3281() -> Tensor[(12, 14, 3), float32] {
  @func_3279() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_6459() -> (Tensor[(12, 14, 3), float64],) {
  %306 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %307 = %306.0;
  (%307,)
}

def @func_17411() -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_17409() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_20118() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %312 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %308 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %309 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %310 = %308.0;
    %311 = %309.3;
    (%310, %311)
  };
  %312() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_23156() -> Tensor[(12, 14, 3), float64] {
  @func_19675() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9715() -> (Tensor[(12, 14, 3), float32],) {
  %314 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %313 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
    (%313,)
  };
  %314() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_6689() -> (Tensor[(4, 9, 14), bool],) {
  %316 = fn () -> (Tensor[(4, 9, 14), bool],) {
    %315 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
    (%315,)
  };
  %316() /* ty=(Tensor[(4, 9, 14), bool],) */
}

def @func_3827() -> (Tensor[(12, 14, 3), float32],) {
  @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_13167(%var_13087: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), float32], Tensor[(196), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float64]) {
  %317 = cast(%var_13087, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  %318 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %319 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %320 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
  %321 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %322 = cosh(%317) /* ty=Tensor[(4, 8, 14), float32] */;
  %323 = %318.2;
  %324 = %319.0;
  %325 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %326 = %320.0;
  %327 = %321.1;
  (%322, %323, %324, %325, %326, %327)
}

def @func_2184() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_7165() -> (Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) {
  %328 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %329 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %330 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %331 = %328.2;
  %332 = %329.1;
  %333 = %330.0;
  (%331, %332, %333)
}

def @func_12942() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  @func_12940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_12794() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) {
  @func_12792() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) */
}

def @func_9277() -> (Tensor[(12, 14, 3), bool],) {
  %336 = fn () -> (Tensor[(12, 14, 3), bool],) {
    %334 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
    %335 = %334.0;
    (%335,)
  };
  %336() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_13482() -> (Tensor[(12, 14, 3), float64],) {
  %338 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %337 = @func_7759() /* ty=Tensor[(12, 14, 3), float64] */;
    (%337,)
  };
  %338() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_17756() -> (Tensor[(12, 14, 3), float64],) {
  @func_17754() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_19493() -> (Tensor[(12, 14, 3), float32],) {
  %341 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %339 = @func_18143() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %340 = %339.0;
    (%340,)
  };
  %341() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_23669() -> Tensor[(12, 14, 3), float32] {
  %343 = fn () -> Tensor[(12, 14, 3), float32] {
    %342 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
    %342.0
  };
  %343() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_5844() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %356 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
    %344 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %345 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
    %346 = cast(meta[relay.Constant][8] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %347 = reshape(%346, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %348 = @func_2393(%347) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %349 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %350 = %344.1;
    %351 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
    %352 = %345.0;
    %353 = %348.0;
    %354 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %355 = %349.0;
    (%350, %351, %352, %353, meta[relay.Constant][8] /* ty=Tensor[(1408), int64] */, %354, %355)
  };
  %356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */
}

def @func_20135() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %361 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %357 = @func_17319() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %358 = @func_6632() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) */;
    %359 = %357.0;
    %360 = %358.2;
    (%359, %360)
  };
  %361() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_14086() -> (Tensor[(1408), int64],) {
  %362 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %363 = %362.2;
  (%363,)
}

def @func_14677() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  %364 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %365 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %366 = %364.1;
  (%365, %366)
}

def @func_16777() -> (Tensor[(12, 14, 3), float64],) {
  %367 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %368 = %367.2;
  (%368,)
}

def @func_18144() -> (Tensor[(12, 14, 3), float32],) {
  %371 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %369 = @func_16483() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %370 = %369.1;
    (%370,)
  };
  %371() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_20203() -> Tensor[(12, 14, 3), float64] {
  %373 = fn () -> Tensor[(12, 14, 3), float64] {
    %372 = @func_16122() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %372.0
  };
  %373() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_23413() -> (Tensor[(12, 14, 3), float32],) {
  %374 = @func_22783() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %375 = %374.2;
  (%375,)
}

def @main(%var_24572: uint64, %var_24592: Tensor[(64), float32], %var_24613: Tensor[(8, 60), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], uint64, Tensor[(8, 8, 1), float32], Tensor[(4, 10, 12), float32], Tensor[(8, 60), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(64), float64]) {
  %376 = cast(%var_24572, dtype="uint64") /* ty=uint64 */;
  %377 = reshape(%376, newshape=[]) /* ty=uint64 */;
  %378 = @func_14919(%377) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) */;
  %379 = cast(%var_24592, dtype="float32") /* ty=Tensor[(64), float32] */;
  %380 = reshape(%379, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float32] */;
  %381 = @func_20929(%380) /* ty=(Tensor[(8, 8, 1), float32],) */;
  %382 = cast(%var_24613, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %383 = reshape(%382, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %384 = @func_7474(%383) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %385 = @func_15366() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %386 = @func_18221() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %387 = cast(%var_24592, dtype="float64") /* ty=Tensor[(64), float64] */;
  %388 = @func_24411() /* ty=Tensor[(12, 14, 3), float64] */;
  %389 = %378.0;
  %390 = %381.0;
  %391 = %384.1;
  %392 = %385.0;
  %393 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
  %394 = %386.0;
  %395 = log10(%387) /* ty=Tensor[(64), float64] */;
  (%388, %389, %var_24572, %390, %391, %var_24613, %392, %393, %394, %395)
}

def @func_7697() -> (Tensor[(12, 14, 3), float32],) {
  %396 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %397 = %396.1;
  (%397,)
}

def @func_17557() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) {
  %398 = @func_10673() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %399 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
  %400 = %398.0;
  %401 = %399.0;
  (%400, %401)
}

def @func_12011() -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float64]) {
  %406 = fn () -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float64]) {
    %402 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
    %403 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
    %404 = %402.0;
    %405 = %403.3;
    (%404, %405)
  };
  %406() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_22558() -> (Tensor[(12, 14, 3), float64],) {
  %407 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
  (%407,)
}

def @func_19030() -> (Tensor[(12, 14, 3), float64],) {
  %408 = @func_15152() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %409 = %408.0;
  (%409,)
}

def @func_7015() -> Tensor[(12, 14, 3), float32] {
  @func_7013() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_20710() -> Tensor[(12, 14, 3), float32] {
  @func_20708() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_2912(%var_2893: Tensor[(7, 14, 2), float32], %var_2906: Tensor[(7, 14, 2), float32]) -> (Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) {
  %410 = cast(%var_2893, dtype="float32") /* ty=Tensor[(7, 14, 2), float32] */;
  %411 = cast(%var_2906, dtype="int32") /* ty=Tensor[(7, 14, 2), int32] */;
  %412 = shape_of(%var_2893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_2893, dtype="int32") /* ty=Tensor[(7, 14, 2), int32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %415 = log(%410) /* ty=Tensor[(7, 14, 2), float32] */;
  %416 = logical_xor(%413, %414) /* ty=Tensor[(7, 14, 2), int32] */;
  (%415, %416)
}

def @func_12762(%var_12761: Tensor[(660), int32]) -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) {
  %426 = fn (%var_12732: Tensor[(660), int32]) -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) {
    %417 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %418 = cast(%var_12732, dtype="int32") /* ty=Tensor[(660), int32] */;
    %419 = reshape(%418, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %420 = @func_2739(%419) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
    %421 = @func_11948() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %422 = %417.0;
    %423 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %424 = %420.0;
    %425 = %421.0;
    (%422, %423, %424, %var_12732, %425)
  };
  %426(%var_12761) /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) */
}

def @func_14852() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1, 1408), float32], Tensor[(1408), int64]) {
  @func_14850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1, 1408), float32], Tensor[(1408), int64]) */
}

def @func_2045() -> Tensor[(12, 14, 3), float64] {
  @func_2043() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_10397() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %427 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %428 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %429 = %427.0;
  %430 = %428.0;
  (%429, %430)
}

def @func_15411(%var_15410: Tensor[(162, 4), uint16]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16]) {
  %438 = fn (%var_15406: Tensor[(162, 4), uint16]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16]) {
    %431 = @func_13610() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %432 = cast(%var_15406, dtype="uint16") /* ty=Tensor[(162, 4), uint16] */;
    %433 = reshape(%432, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
    %434 = @func_5895(%433) /* ty=(Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) */;
    %435 = @func_11203() /* ty=Tensor[(12, 14, 3), float64] */;
    %436 = %431.0;
    %437 = %434.0;
    (%435, %436, %437, %var_15406)
  };
  %438(%var_15410) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16]) */
}

def @func_13611() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %443 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %439 = @func_6632() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) */;
    %440 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
    %441 = %439.2;
    %442 = @func_4669() /* ty=Tensor[(12, 14, 3), float32] */;
    (%440, %441, %442)
  };
  %443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_16791() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %447 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %444 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %445 = %444.0;
    %446 = @func_8788() /* ty=Tensor[(12, 14, 3), float32] */;
    (%445, %446)
  };
  %447() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_11882(%var_11881: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) {
  %473 = fn (%var_11850: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) {
    %448 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %449 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %450 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %451 = @func_7085() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %452 = cast(%var_11850, dtype="int32") /* ty=Tensor[(660), int32] */;
    %453 = reshape(%452, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %454 = @func_2739(%453) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
    %455 = @func_8043() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) */;
    %456 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %457 = %456.0;
    %458 = cast(%457, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %459 = sin(%458) /* ty=Tensor[(1408), float32] */;
    %460 = cast(%459, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %461 = log10(%460) /* ty=Tensor[(1408), float32] */;
    %462 = cast(%461, dtype="bool") /* ty=Tensor[(1408), bool] */;
    %463 = shape_of(%459, dtype="int32") /* ty=Tensor[(1), int32] */;
    %464 = cast(%459, dtype="bool") /* ty=Tensor[(1408), bool] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?), bool] */;
    %466 = %448.0;
    %467 = %449.3;
    %468 = %450.1;
    %469 = %451.1;
    %470 = %454.0;
    %471 = %455.1;
    %472 = less(%464, %465) /* ty=Tensor[(1408), bool] */;
    (%466, %467, %468, %469, %470, %var_11850, %471, %472)
  };
  %473(%var_11881) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) */
}

def @func_4805() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_19836() -> (Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %474 = @func_17161() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) */;
  %475 = @func_17211() /* ty=Tensor[(4, 9, 14), bool] */;
  %476 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
  %477 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
  %478 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
  %479 = %474.0;
  (%475, %476, %477, %478, %479)
}

def @func_16225() -> (Tensor[(8, 11, 16), int64],) {
  @func_16223() /* ty=(Tensor[(8, 11, 16), int64],) */
}

def @func_6762() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */
}

def @func_12792() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) {
  %480 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %481 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %482 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %483 = %480.1;
  %484 = %481.1;
  (%482, %483, %484)
}

def @func_23303() -> (Tensor[(12, 14, 3), float64],) {
  @func_23301() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_20061() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %485 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
  %486 = @func_17583() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %487 = %485.0;
  %488 = %486.0;
  (%487, %488)
}

def @func_2182() -> Tensor[(12, 14, 3), float32] {
  %489 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %489.0
}

def @func_19271(%var_19260: Tensor[(9, 14, 12), float64], %var_19261: Tensor[(9, 14, 12), float64]) -> (Tensor[(9, 14, 12), bool], Tensor[(9, 14, 12), bool]) {
  %490 = cast(%var_19261, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %491 = shape_of(%var_19260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_19260, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %494 = cast(%var_19261, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %495 = shape_of(%var_19260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%var_19260, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = less_equal(%492, %493) /* ty=Tensor[(9, 14, 12), bool] */;
  %499 = greater(%496, %497) /* ty=Tensor[(9, 14, 12), bool] */;
  (%498, %499)
}

def @func_20302() -> Tensor[(12, 14, 3), float32] {
  %501 = fn () -> Tensor[(12, 14, 3), float32] {
    %500 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %500.0
  };
  %501() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_23750() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %505 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
    %502 = @func_12792() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64]) */;
    %503 = %502.2;
    %504 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
    (%503, %504)
  };
  %505() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_4737() -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %515 = fn () -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) {
    %506 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
    %507 = cast(%506, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
    %508 = cast(%506, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
    %509 = cast(meta[relay.Constant][9] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %510 = reshape(%507, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
    %511 = reshape(%508, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
    %512 = reshape(%509, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %513 = @func_3549(%510, %511, %512) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
    %514 = %513.3;
    (%506, %514, meta[relay.Constant][9] /* ty=Tensor[(1408), int64] */)
  };
  %515() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */
}

def @func_12024() -> (Tensor[(12, 14, 3), float32],) {
  %516 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  (%516,)
}

def @func_9437() -> Tensor[(12, 14, 3), float32] {
  %517 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %518 = %517.0;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  asin(%519) /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_20248() -> (Tensor[(12, 14, 3), float32],) {
  %522 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %520 = @func_13187() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %521 = %520.0;
    (%521,)
  };
  %522() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_6298() -> (Tensor[(12, 14, 3), bool],) {
  @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_14013() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %529 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
    %523 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %524 = cast(meta[relay.Constant][10] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
    %525 = reshape(%524, newshape=[525]) /* ty=Tensor[(525), int8] */;
    %526 = @func_12568(%525) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) */;
    %527 = %523.0;
    %528 = %526.0;
    (%527, %528, meta[relay.Constant][10] /* ty=Tensor[(525), int8] */)
  };
  %529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) */
}

def @func_14211() -> Tensor[(12, 14, 3), float32] {
  %530 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %530.0
}

def @func_8847() -> (Tensor[(4, 9, 14), float32],) {
  %531 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %532 = %531.1;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %534 = asin(%533) /* ty=Tensor[(4, 9, 14), float32] */;
  (%534,)
}

def @func_17448(%var_17430: Tensor[(9, 4, 15), uint16]) -> Tensor[(9, 4, 15), bool] {
  %535 = cast(%var_17430, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %536 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(9, 4, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 4, 15), uint16] */, dtype="bool") /* ty=Tensor[(9, 4, 15), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%537, %538) /* ty=Tensor[(9, 4, 15), bool] */
}

def @func_6916() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %539 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %540 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %541 = %540.0;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %543 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %544 = %539.4;
  %545 = log10(%542) /* ty=Tensor[(12, 14, 3), float64] */;
  %546 = %543.0;
  (%544, %545, %546)
}

def @func_24378() -> (Tensor[(12, 14, 3), float64],) {
  @func_24376() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_17301() -> (Tensor[(12, 14, 3), float32],) {
  @func_17299() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_11992() -> (Tensor[(12, 14, 3), float64],) {
  %548 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %547 = @func_9006() /* ty=Tensor[(12, 14, 3), float64] */;
    (%547,)
  };
  %548() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_2260() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_18950() -> (Tensor[(12, 14, 3), float64],) {
  @func_18948() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_20762() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %549 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %550 = cast(meta[relay.Constant][12] /* ty=Tensor[(64), uint64] */, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %551 = reshape(%550, newshape=[64]) /* ty=Tensor[(64), uint64] */;
  %552 = @func_8001(%551) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %553 = @func_19288() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %554 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %555 = %549.0;
  %556 = %552.0;
  %557 = @func_17239() /* ty=Tensor[(12, 14, 3), float32] */;
  %558 = %553.0;
  %559 = %554.0;
  (%555, %556, meta[relay.Constant][12] /* ty=Tensor[(64), uint64] */, %557, %558, %559)
}

def @func_23629(%var_23627: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], uint64, Tensor[(1408), bool], Tensor[(660), int32]) {
  @func_23626(%var_23627) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], uint64, Tensor[(1408), bool], Tensor[(660), int32]) */
}

def @func_2417() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_2462() -> Tensor[(12, 14, 3), float32] {
  %560 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %560.0
}

def @func_3279() -> Tensor[(12, 14, 3), float32] {
  %561 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %561.0
}

def @func_15212() -> (Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) {
  %562 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 1), float64] */;
  %563 = sqrt(%562) /* ty=Tensor[(14, 13, 1), float64] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %565 = @func_14204() /* ty=(Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) */;
  %566 = asin(%564) /* ty=Tensor[(14, 13, 1), float32] */;
  %567 = %565.1;
  (%566, %567)
}

def @func_2953() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %570 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
    %568 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
    %569 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    (%568, %569)
  };
  %570() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_9934() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %575 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %571 = @func_8731() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %572 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %573 = %571.0;
    %574 = %572.0;
    (%573, %574)
  };
  %575() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_14238() -> Tensor[(12, 14, 3), float64] {
  %576 = fn () -> Tensor[(12, 14, 3), float64] {
    @func_11203() /* ty=Tensor[(12, 14, 3), float64] */
  };
  %576() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9121() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) {
  @func_9119() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) */
}

def @func_18464() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
  @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */
}

def @func_5444() -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %588 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %577 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %578 = cast(meta[relay.Constant][14] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
    %579 = cast(meta[relay.Constant][14] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
    %580 = reshape(%578, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %581 = reshape(%579, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %582 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %583 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
    %584 = %577.0;
    %585 = @func_462(%580, %581) /* ty=Tensor[(10, 6, 11), bool] */;
    %586 = %582.1;
    %587 = %583.2;
    (%584, %585, meta[relay.Constant][14] /* ty=Tensor[(660), int32] */, %586, %587)
  };
  %588() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_15725() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %594 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %589 = @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %590 = @func_14420() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %591 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
    %592 = %589.1;
    %593 = %590.1;
    (%591, %592, %593)
  };
  %594() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_12455() -> Tensor[(12, 14, 3), bool] {
  %596 = fn () -> Tensor[(12, 14, 3), bool] {
    %595 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %595.0
  };
  %596() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_4067() -> Tensor[(12, 14, 3), int64] {
  %597 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %598 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %599 = %598.0;
  %600 = cast(%599, dtype="int64") /* ty=Tensor[(12, 14, 3), int64] */;
  %601 = shape_of(%597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%597, dtype="int64") /* ty=Tensor[(12, 14, 3), int64] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%602, %603) /* ty=Tensor[(12, 14, 3), int64] */
}

def @func_5875() -> Tensor[(1408), int64] {
  @func_5873() /* ty=Tensor[(1408), int64] */
}

def @func_1844(%var_1842: Tensor[(8, 11, 16), int64], %var_1843: Tensor[(8, 11, 16), int64]) -> (Tensor[(8, 11, 16), int64],) {
  %609 = fn (%var_1836: Tensor[(8, 11, 16), int64], %var_1837: Tensor[(8, 11, 16), int64]) -> (Tensor[(8, 11, 16), int64],) {
    %604 = cast(%var_1837, dtype="int64") /* ty=Tensor[(8, 11, 16), int64] */;
    %605 = shape_of(%var_1836, dtype="int32") /* ty=Tensor[(3), int32] */;
    %606 = cast(%var_1836, dtype="int64") /* ty=Tensor[(8, 11, 16), int64] */;
    %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %608 = right_shift(%606, %607) /* ty=Tensor[(8, 11, 16), int64] */;
    (%608,)
  };
  %609(%var_1842, %var_1843) /* ty=(Tensor[(8, 11, 16), int64],) */
}

def @func_4642() -> Tensor[(12, 14, 3), float32] {
  %610 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %610.0
}

def @func_15564() -> (Tensor[(12, 14, 3), float32],) {
  %612 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %611 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
    (%611,)
  };
  %612() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_21771() -> (Tensor[(12, 14, 3), int64],) {
  @func_21769() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_12238(%var_12237: Tensor[(11, 3, 12), float32]) -> (Tensor[(11, 3, 12), float32],) {
  %615 = fn (%var_12219: Tensor[(11, 3, 12), float32]) -> (Tensor[(11, 3, 12), float32],) {
    %613 = cast(%var_12219, dtype="float32") /* ty=Tensor[(11, 3, 12), float32] */;
    %614 = tan(%613) /* ty=Tensor[(11, 3, 12), float32] */;
    (%614,)
  };
  %615(%var_12237) /* ty=(Tensor[(11, 3, 12), float32],) */
}

def @func_11723() -> (Tensor[(12, 14, 3), float64],) {
  %616 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %617 = %616.1;
  (%617,)
}

def @func_2319() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %618 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %619 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%618, %619)
}

def @func_5665() -> Tensor[(11, 5, 3), float64] {
  @func_5663() /* ty=Tensor[(11, 5, 3), float64] */
}

def @func_21451() -> (Tensor[(12, 14, 3), float32],) {
  @func_21449() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_5693() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %623 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
    %620 = @func_5088() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %621 = @func_2228() /* ty=Tensor[(12, 14, 3), float64] */;
    %622 = %620.0;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */
}

def @func_22810() -> Tensor[(12, 14, 3), float32] {
  @func_21211() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_6087() -> (Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_20370() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %624 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %625 = @func_15771() /* ty=Tensor[(12, 14, 3), float64] */;
  %626 = %624.0;
  (%625, %626)
}

def @func_4331() -> Tensor[(7, 14, 2), int32] {
  @func_4329() /* ty=Tensor[(7, 14, 2), int32] */
}

def @func_3109() -> Tensor[(12, 14, 3), float64] {
  @func_2043() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_2419() -> Tensor[(12, 14, 3), float32] {
  @func_2417() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_20063() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  @func_20061() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_24483() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  @func_24481() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) */
}

def @func_17097() -> (Tensor[(12, 14, 3), float32],) {
  %627 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %628 = %627.1;
  (%628,)
}

def @func_2230() -> Tensor[(12, 14, 3), float64] {
  @func_2228() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_11123(%var_11104: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
  %629 = cast(%var_11104, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
  %630 = cos(%629) /* ty=Tensor[(7, 4, 1), float64] */;
  (%630,)
}

def @func_16423() -> (Tensor[(1408), int64],) {
  %631 = @func_16021() /* ty=Tensor[(1408), int64] */;
  (%631,)
}

def @func_13189() -> (Tensor[(12, 14, 3), float32],) {
  @func_13187() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_18221() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %637 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
    %632 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %633 = @func_7398() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %634 = %632.4;
    %635 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %636 = %633.0;
    (%634, %635, %636)
  };
  %637() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_23088() -> Tensor[(12, 14, 3), float64] {
  %639 = fn () -> Tensor[(12, 14, 3), float64] {
    %638 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %638.0
  };
  %639() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_11725() -> (Tensor[(12, 14, 3), float64],) {
  @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_10926() -> (Tensor[(12, 14, 3), int64],) {
  %640 = @func_5315() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %641 = %640.0;
  (%641,)
}

def @func_15581() -> (Tensor[(12, 14, 3), float32],) {
  @func_15579() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_10141() -> (Tensor[(12, 14, 3), float32],) {
  @func_10139() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_22529() -> Tensor[(14, 13, 1), float32] {
  %643 = fn () -> Tensor[(14, 13, 1), float32] {
    %642 = @func_15212() /* ty=(Tensor[(14, 13, 1), float32], Tensor[(12, 3, 5), float32]) */;
    %642.0
  };
  %643() /* ty=Tensor[(14, 13, 1), float32] */
}

def @func_23415() -> (Tensor[(12, 14, 3), float32],) {
  @func_23413() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_6739(%var_6737: Tensor[(14, 15, 1), bool], %var_6738: Tensor[(14, 15, 1), bool]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) {
  %651 = fn (%var_6722: Tensor[(14, 15, 1), bool], %var_6723: Tensor[(14, 15, 1), bool]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) {
    %644 = cast(%var_6723, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %645 = shape_of(%var_6722, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%var_6722, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %648 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %649 = logical_or(%646, %647) /* ty=Tensor[(14, 15, ?), bool] */;
    %650 = %648.0;
    (%649, %650)
  };
  %651(%var_6737, %var_6738) /* ty=(Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_2916(%var_2914: Tensor[(7, 14, 2), float32], %var_2915: Tensor[(7, 14, 2), float32]) -> (Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) {
  @func_2912(%var_2914, %var_2915) /* ty=(Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) */
}

def @func_3409() -> (Tensor[(12, 14, 3), float32],) {
  %653 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %652 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
    (%652,)
  };
  %653() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_13353() -> Tensor[(4, 9, 14), bool] {
  @func_13351() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_12170() -> Tensor[(12, 14, 3), float32] {
  %655 = fn () -> Tensor[(12, 14, 3), float32] {
    %654 = @func_9512() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %654.0
  };
  %655() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_3234() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %658 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %656 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
    %657 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    (%656, %657)
  };
  %658() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_14055(%var_14053: int8) -> (Tensor[(12, 4, 9), bool], Tensor[(12, 14, 3), float64]) {
  @func_14052(%var_14053) /* ty=(Tensor[(12, 4, 9), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_21811() -> (Tensor[(12, 14, 3), bool],) {
  @func_21809() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_7760() -> Tensor[(12, 14, 3), float64] {
  %660 = fn () -> Tensor[(12, 14, 3), float64] {
    %659 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
    %659.1
  };
  %660() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_10494(%var_10492: bool) -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  @func_10491(%var_10492) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_18655(%var_18653: Tensor[(540), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(9, 4, 15), bool], Tensor[(540), uint16], Tensor[(12, 14, 3), float64], Tensor[(10, 6, 11), bool], Tensor[(660, 1), int32], Tensor[(12, 14, 3), float64]) {
  @func_18652(%var_18653) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(9, 4, 15), bool], Tensor[(540), uint16], Tensor[(12, 14, 3), float64], Tensor[(10, 6, 11), bool], Tensor[(660, 1), int32], Tensor[(12, 14, 3), float64]) */
}

def @func_14559(%var_14554: Tensor[(13, 15, 11), float32], %var_14555: Tensor[(13, 15, 11), float32]) -> Tensor[(13, 15, 11), float32] {
  %661 = cast(%var_14555, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
  %662 = shape_of(%var_14554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_14554, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%663, %664) /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_10674() -> (Tensor[(12, 14, 3), float64],) {
  %667 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %665 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %666 = %665.2;
    (%666,)
  };
  %667() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_7894() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_7892() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_12940() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %668 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %669 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %670 = %668.3;
  (%669, %670)
}

def @func_21535() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %671 = @func_18330() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %672 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
  %673 = @func_16738() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %674 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %675 = %671.2;
  %676 = %672.0;
  %677 = %673.2;
  %678 = %674.2;
  (%675, %676, %677, %678)
}

def @func_21279() -> (Tensor[(12, 14, 3), float32],) {
  %681 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %679 = @func_16179() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %680 = %679.0;
    (%680,)
  };
  %681() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_20708() -> Tensor[(12, 14, 3), float32] {
  @func_4669() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_14421() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %686 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %682 = @func_8940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) */;
    %683 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %684 = %682.0;
    %685 = %683.0;
    (%684, %685)
  };
  %686() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_19206() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  @func_19204() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_8607() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %690 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
    %687 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %688 = %687.0;
    %689 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_12568(%var_12565: Tensor[(525), int8]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) {
  %691 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %692 = cast(%var_12565, dtype="int8") /* ty=Tensor[(525), int8] */;
  %693 = reshape(%692, newshape=[525]) /* ty=Tensor[(525), int8] */;
  %694 = @func_9307(%693) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) */;
  %695 = %691.0;
  %696 = %694.0;
  (%695, %696, %var_12565)
}

def @func_6166() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %703 = fn () -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
    %697 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
    %698 = @func_3408() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %699 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
    %700 = %697.3;
    %701 = %698.0;
    %702 = @func_4067() /* ty=Tensor[(12, 14, 3), int64] */;
    (%699, %700, %701, %702)
  };
  %703() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */
}

def @func_18462() -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %704 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %705 = @func_17948() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %706 = %704.1;
  %707 = @func_15967() /* ty=Tensor[(1408), int64] */;
  %708 = %705.0;
  (%706, %707, %708)
}

def @func_21140() -> (Tensor[(12, 14, 3), float32],) {
  %709 = @func_15670() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
  %710 = %709.1;
  (%710,)
}

def @func_23513() -> Tensor[(12, 14, 3), float32] {
  %711 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %711.0
}

def @func_11408() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_11406() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_4329() -> Tensor[(7, 14, 2), int32] {
  %712 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %712.1
}

def @func_9007() -> Tensor[(12, 14, 3), float64] {
  %714 = fn () -> Tensor[(12, 14, 3), float64] {
    %713 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
    %713.0
  };
  %714() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_3111() -> Tensor[(12, 14, 3), float64] {
  @func_3109() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9827() -> (Tensor[(12, 14, 3), float32],) {
  @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_15153() -> (Tensor[(12, 14, 3), float64],) {
  %717 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %715 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %716 = %715.0;
    (%716,)
  };
  %717() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_3791(%var_3789: Tensor[(10, 2, 9), bool]) -> Tensor[(10, 2, 9), bool] {
  @func_3788(%var_3789) /* ty=Tensor[(10, 2, 9), bool] */
}

def @func_13187() -> (Tensor[(12, 14, 3), float32],) {
  %718 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %719 = %718.3;
  (%719,)
}

def @func_19204() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %720 = cast(meta[relay.Constant][15] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %721 = reshape(%720, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %722 = @func_7471(%721) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
  %723 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
  %724 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %725 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
  %726 = %722.1;
  %727 = %723.1;
  %728 = %724.2;
  %729 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
  (%725, %726, meta[relay.Constant][15] /* ty=Tensor[(480), float32] */, %727, %728, %729)
}

def @func_17661() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), bool]) {
  %730 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %731 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_18958() -> (Tensor[(12, 14, 3), int64],) {
  @func_18956() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_22738() -> Tensor[(12, 14, 3), float64] {
  %734 = @func_18132() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %734.2
}

def @func_24321() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_24319() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_12543() -> Tensor[(12, 14, 3), float64] {
  @func_12541() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9751() -> Tensor[(12, 14, 3), float32] {
  @func_9749() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_5045() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) {
  @func_5043() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(1408), int64]) */
}

def @func_24127() -> (Tensor[(12, 14, 3), bool],) {
  @func_24125() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_21749() -> Tensor[(16, 8, 6), float32] {
  @func_21747() /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_10741() -> (Tensor[(12, 14, 3), float32],) {
  %735 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %736 = %735.0;
  (%736,)
}

def @func_15436() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %737 = @func_6165() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */;
  %738 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %739 = %737.1;
  %740 = %738.0;
  (%739, %740)
}

def @func_3734() -> (Tensor[(11, 5, 3), float64],) {
  %741 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 3), float64] */;
  %742 = rsqrt(%741) /* ty=Tensor[(11, 5, 3), float64] */;
  (%742,)
}

def @func_24125() -> (Tensor[(12, 14, 3), bool],) {
  %743 = @func_22006() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) */;
  %744 = %743.0;
  (%744,)
}

def @func_13769(%var_13754: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) {
  %745 = cast(%var_13754, dtype="int32") /* ty=Tensor[(660), int32] */;
  %746 = cast(%var_13754, dtype="int32") /* ty=Tensor[(660), int32] */;
  %747 = reshape(%745, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %748 = reshape(%746, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %749 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %750 = %749.2;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %752 = @func_12454() /* ty=Tensor[(12, 14, 3), bool] */;
  %753 = @func_462(%747, %748) /* ty=Tensor[(10, 6, 11), bool] */;
  %754 = cosh(%751) /* ty=Tensor[(1408), float64] */;
  (%752, %753, %var_13754, %754)
}

def @func_20622() -> Tensor[(4, 9, 14), bool] {
  %756 = fn () -> Tensor[(4, 9, 14), bool] {
    %755 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %755.0
  };
  %756() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_19539() -> Tensor[(12, 14, 3), float64] {
  @func_19537() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_22482() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_22480() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_24413() -> Tensor[(12, 14, 3), float64] {
  @func_24411() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_4803() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %757 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %758 = %757.0;
  %759 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  (%758, %759)
}

def @func_2067() -> Tensor[(12, 14, 3), bool] {
  %765 = fn () -> Tensor[(12, 14, 3), bool] {
    %760 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %761 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%763, %764) /* ty=Tensor[(12, 14, 3), bool] */
  };
  %765() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_15366() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %770 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
    %766 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
    %767 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %768 = %766.0;
    %769 = %767.1;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_9206(%var_9204: Tensor[(480), float32], %var_9205: Tensor[(480), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(480), uint16], Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %792 = fn (%var_9150: Tensor[(480), float32], %var_9154: Tensor[(480), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(480), uint16], Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
    %771 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %772 = cast(%var_9150, dtype="float32") /* ty=Tensor[(480), float32] */;
    %773 = reshape(%772, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %774 = @func_7471(%773) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
    %775 = cast(%var_9154, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %776 = shape_of(%var_9150, dtype="int32") /* ty=Tensor[(1), int32] */;
    %777 = cast(%var_9150, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %779 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %780 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
    %781 = @func_6688() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %782 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
    %783 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
    %784 = %771.0;
    %785 = %774.0;
    %786 = right_shift(%777, %778) /* ty=Tensor[(480), uint16] */;
    %787 = %779.0;
    %788 = %780.0;
    %789 = %781.0;
    %790 = %782.1;
    %791 = %783.0;
    (%784, %785, %786, %787, %788, %789, %790, %791)
  };
  %792(%var_9204, %var_9205) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(480), uint16], Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_19676() -> Tensor[(12, 14, 3), float64] {
  %794 = fn () -> Tensor[(12, 14, 3), float64] {
    %793 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
    %793.0
  };
  %794() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_17299() -> (Tensor[(12, 14, 3), float32],) {
  %795 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %796 = %795.0;
  (%796,)
}

def @func_17212() -> Tensor[(4, 9, 14), bool] {
  %798 = fn () -> Tensor[(4, 9, 14), bool] {
    %797 = @func_16404() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %797.0
  };
  %798() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_17342() -> (Tensor[(12, 14, 3), float64],) {
  @func_17340() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_10196() -> (Tensor[(12, 14, 3), float32], Tensor[(110, 6), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %813 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(110, 6), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
    %799 = cast(meta[relay.Constant][18] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(110, 6), int32] */;
    %800 = cast(meta[relay.Constant][18] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(110, 6), int32] */;
    %801 = reshape(%799, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %802 = reshape(%800, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %803 = @func_462(%801, %802) /* ty=Tensor[(10, 6, 11), bool] */;
    %804 = cast(%803, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
    %805 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(110, 6), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %806 = cast(meta[relay.Constant][18] /* ty=Tensor[(110, 6), int32] */, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %808 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
    %809 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
    %810 = mod(%806, %807) /* ty=Tensor[(110, 6), float32] */;
    %811 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
    %812 = %808.0;
    (%809, %810, %811, %812)
  };
  %813() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(110, 6), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */
}

def @func_21211() -> Tensor[(12, 14, 3), float32] {
  @func_2182() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_22480() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %814 = @func_22200() /* ty=(Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) */;
  %815 = @func_14768() /* ty=Tensor[(12, 14, 3), float64] */;
  %816 = %814.1;
  (%815, %816)
}

def @func_18426() -> (Tensor[(12, 14, 3), float64],) {
  %817 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %818 = %817.1;
  (%818,)
}

def @func_5897(%var_5896: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) {
  %825 = fn (%var_5876: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) {
    %819 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 6, 9), uint16] */, dtype="uint16") /* ty=Tensor[(12, 6, 9), uint16] */;
    %820 = shape_of(%var_5876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %821 = cast(%var_5876, dtype="uint16") /* ty=Tensor[(12, 6, 9), uint16] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %823 = multiply(%821, %822) /* ty=Tensor[(12, 6, 9), uint16] */;
    %824 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    (%823, %824)
  };
  %825(%var_5896) /* ty=(Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) */
}

def @func_16179() -> (Tensor[(12, 14, 3), float32],) {
  %826 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  (%826,)
}

def @func_16697(%var_16695: Tensor[(84), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool, Tensor[(84), float32]) {
  @func_16694(%var_16695) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool, Tensor[(84), float32]) */
}

def @func_2040() -> Tensor[(12, 14, 3), float64] {
  %831 = fn () -> Tensor[(12, 14, 3), float64] {
    %827 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %828 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(12, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%829, %830) /* ty=Tensor[(12, 14, 3), float64] */
  };
  %831() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_16738() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %832 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %833 = %832.4;
  %834 = cast(%833, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %835 = reshape(%834, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %836 = @func_2875(%835) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %837 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %838 = %836.1;
  %839 = %837.1;
  (%833, %838, %839)
}

def @func_13968(%var_13962: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  %840 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %841 = cast(meta[relay.Constant][22] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %842 = reshape(%841, newshape=[22, 64]) /* ty=Tensor[(22, 64), int64] */;
  %843 = @func_5993(%842) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) */;
  %844 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %845 = cast(%var_13962, dtype="int32") /* ty=Tensor[(660), int32] */;
  %846 = reshape(%845, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %847 = @func_2739(%846) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
  %848 = %840.0;
  %849 = %843.3;
  %850 = %844.1;
  %851 = %847.0;
  (%848, %849, meta[relay.Constant][22] /* ty=Tensor[(1408), int64] */, %850, %851, %var_13962)
}

def @func_19025() -> (Tensor[(12, 14, 3), float32],) {
  @func_19023() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_16740() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_16738() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_15671() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
  %855 = fn () -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) {
    %852 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %853 = %852.1;
    %854 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
    (%853, %854)
  };
  %855() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */
}

def @func_17451(%var_17449: Tensor[(9, 4, 15), uint16]) -> Tensor[(9, 4, 15), bool] {
  @func_17448(%var_17449) /* ty=Tensor[(9, 4, 15), bool] */
}

def @func_6384() -> (Tensor[(12, 14, 3), float32],) {
  @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_17241() -> Tensor[(12, 14, 3), float32] {
  @func_17239() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_20929(%var_20927: Tensor[(8, 8, 1), float32]) -> (Tensor[(8, 8, 1), float32],) {
  @func_20926(%var_20927) /* ty=(Tensor[(8, 8, 1), float32],) */
}

def @func_2464() -> Tensor[(12, 14, 3), float32] {
  @func_2462() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_4897() -> (Tensor[(12, 14, 3), float32],) {
  @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_7471(%var_7459: Tensor[(480), float32]) -> (Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
  %856 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %857 = cast(%var_7459, dtype="float32") /* ty=Tensor[(480), float32] */;
  %858 = reshape(%857, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %859 = @func_5146(%858) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %860 = %856.0;
  %861 = %859.0;
  (%860, %861, %var_7459)
}

def @func_23940() -> (Tensor[(12, 14, 3), float32],) {
  @func_23938() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_21233() -> (Tensor[(12, 14, 3), float32],) {
  %863 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %862 = @func_8788() /* ty=Tensor[(12, 14, 3), float32] */;
    (%862,)
  };
  %863() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_7522() -> Tensor[(12, 14, 3), float32] {
  %865 = fn () -> Tensor[(12, 14, 3), float32] {
    %864 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %864.0
  };
  %865() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_14311() -> Tensor[(12, 14, 3), float32] {
  %866 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %866.0
}

def @func_18330() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %867 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %868 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %869 = %867.0;
  %870 = %868.0;
  %871 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
  (%869, %870, %871)
}

def @func_8043() -> (Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) {
  %872 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %873 = %872.0;
  %874 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
  (%873, %874)
}

def @func_16123() -> (Tensor[(12, 14, 3), float64],) {
  %877 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %875 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %876 = %875.0;
    (%876,)
  };
  %877() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_4289() -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) {
  %888 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) {
    %878 = cast(meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %879 = cast(meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %880 = reshape(%878, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float32] */;
    %881 = reshape(%879, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float32] */;
    %882 = @func_2912(%880, %881) /* ty=(Tensor[(7, 14, 2), float32], Tensor[(7, 14, 2), int32]) */;
    %883 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
    %884 = cast(%883, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %885 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
    %886 = %882.1;
    %887 = rsqrt(%884) /* ty=Tensor[(12, 14, 3), float64] */;
    (%885, %886, meta[relay.Constant][23] /* ty=Tensor[(196), float32] */, %887)
  };
  %888() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_5317() -> (Tensor[(12, 14, 3), int64],) {
  @func_5315() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_6195() -> Tensor[(12, 14, 3), float64] {
  %889 = @func_2762() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %889.0
}

def @func_2043() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9683() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %894 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
    %890 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
    %891 = cast(%890, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %892 = reshape(%891, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
    %893 = @func_3949(%892) /* ty=Tensor[(12, 14, 3), bool] */;
    (%890, %893)
  };
  %894() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_3444() -> (Tensor[(4, 9, 14), bool],) {
  %895 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
  %896 = %895.1;
  (%896,)
}

def @func_17239() -> Tensor[(12, 14, 3), float32] {
  %897 = @func_13324() /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) */;
  %897.1
}

def @func_5996(%var_5994: Tensor[(22, 64), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) {
  @func_5993(%var_5994) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) */
}

def @func_6382() -> (Tensor[(12, 14, 3), float32],) {
  %898 = @func_5843() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %899 = %898.1;
  (%899,)
}

def @func_8732() -> (Tensor[(12, 14, 3), float64],) {
  %902 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %900 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %901 = %900.0;
    (%901,)
  };
  %902() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_12624() -> Tensor[(1408), int64] {
  %903 = fn () -> Tensor[(1408), int64] {
    @func_5873() /* ty=Tensor[(1408), int64] */
  };
  %903() /* ty=Tensor[(1408), int64] */
}

def @func_15637(%var_15635: Tensor[(1, 660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(1, 660), int32], Tensor[(4, 9, 14), float64]) {
  @func_15634(%var_15635) /* ty=(Tensor[(12, 14, 3), bool], Tensor[(1, 660), int32], Tensor[(4, 9, 14), float64]) */
}

def @func_15967() -> Tensor[(1408), int64] {
  @func_5873() /* ty=Tensor[(1408), int64] */
}

def @func_16894(%var_16892: Tensor[(42), uint16], %var_16893: Tensor[(1, 210), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
  %913 = fn (%var_16887: Tensor[(42), uint16], %var_16888: Tensor[(1, 210), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) {
    %904 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %905 = cast(%var_16887, dtype="uint16") /* ty=Tensor[(42), uint16] */;
    %906 = cast(%var_16888, dtype="uint16") /* ty=Tensor[(1, 210), uint16] */;
    %907 = reshape(%905, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), uint16] */;
    %908 = reshape(%906, newshape=[14, 5, 3]) /* ty=Tensor[(14, 5, 3), uint16] */;
    %909 = @func_10853(%907, %908) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */;
    %910 = @func_3279() /* ty=Tensor[(12, 14, 3), float32] */;
    %911 = %904.0;
    %912 = %909.1;
    (%910, %911, %912, %var_16887, %var_16888)
  };
  %913(%var_16892, %var_16893) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(14, 5, 3), float32], Tensor[(42), uint16], Tensor[(1, 210), uint16]) */
}

def @func_19838() -> (Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_18504() -> Tensor[(12, 14, 3), float64] {
  @func_18502() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_9119() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) {
  %914 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
  %915 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %916 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %917 = %914.0;
  %918 = %915.0;
  (%916, %917, %918)
}

def @func_2843() -> (Tensor[(12, 14, 3), float32],) {
  @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_16354() -> (Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) {
  @func_16352() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) */
}

def @func_24481() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %919 = @func_20786() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %920 = %919.1;
  %921 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
  (%920, %921)
}

def @func_15107(%var_15105: Tensor[(396), float32]) -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(22, 64), float64], Tensor[(12, 14, 3), float64], Tensor[(11, 3, 12), float32], Tensor[(396), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  @func_15104(%var_15105) /* ty=(Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(22, 64), float64], Tensor[(12, 14, 3), float64], Tensor[(11, 3, 12), float32], Tensor[(396), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_18868() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  @func_18866() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_5597() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %924 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
    %922 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %923 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_14768() -> Tensor[(12, 14, 3), float64] {
  @func_6515() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_12541() -> Tensor[(12, 14, 3), float64] {
  %925 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %925.0
}

def @func_21930() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  @func_21928() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) */
}

def @func_16404() -> (Tensor[(4, 9, 14), bool],) {
  %926 = @func_15493() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) */;
  %927 = %926.1;
  (%927,)
}

def @func_4895() -> (Tensor[(12, 14, 3), float32],) {
  %928 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
  (%928,)
}

def @func_6833() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  @func_6831() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_5727() -> (Tensor[(12, 14, 3), float64],) {
  @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_6918() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_9552() -> Tensor[(12, 14, 3), float32] {
  @func_9550() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_18698(%var_18675: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %929 = cast(%var_18675, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %930 = cast(meta[relay.Constant][24] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
  %931 = reshape(%930, newshape=[525]) /* ty=Tensor[(525), int8] */;
  %932 = @func_12568(%931) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) */;
  %933 = erf(%929) /* ty=Tensor[(5, 14, 4), float64] */;
  %934 = %932.0;
  (%933, %934, meta[relay.Constant][24] /* ty=Tensor[(525), int8] */)
}

def @func_20868(%var_20867: Tensor[(5, 6, 16), uint32]) -> (Tensor[(5, 6, 16), bool],) {
  %940 = fn (%var_20856: Tensor[(5, 6, 16), uint32]) -> (Tensor[(5, 6, 16), bool],) {
    %935 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 6, 16), uint32] */, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
    %936 = shape_of(%var_20856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %937 = cast(%var_20856, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
    %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %939 = greater_equal(%937, %938) /* ty=Tensor[(5, 6, 16), bool] */;
    (%939,)
  };
  %940(%var_20867) /* ty=(Tensor[(5, 6, 16), bool],) */
}

def @func_21213() -> Tensor[(12, 14, 3), float32] {
  @func_21211() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_23800() -> (Tensor[(12, 14, 3), float32],) {
  %941 = @func_18143() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %942 = %941.0;
  (%942,)
}

def @func_20531() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  @func_20529() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_9878(%var_9877: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %953 = fn (%var_9843: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %943 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %944 = %943.0;
    %945 = cast(%var_9843, dtype="uint64") /* ty=Tensor[(4, 9, 14), uint64] */;
    %946 = shape_of(%944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %947 = cast(%944, dtype="uint64") /* ty=Tensor[(4, 9, 14), uint64] */;
    %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %949 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %950 = minimum(%947, %948) /* ty=Tensor[(4, 9, 14), uint64] */;
    %951 = %949.0;
    %952 = @func_9046() /* ty=Tensor[(12, 14, 3), float32] */;
    (%950, %951, %952)
  };
  %953(%var_9877) /* ty=(Tensor[(4, 9, 14), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_17754() -> (Tensor[(12, 14, 3), float64],) {
  %954 = @func_7085() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %955 = %954.1;
  (%955,)
}

def @func_21026(%var_21024: Tensor[(2, 14, 7), float32], %var_21025: Tensor[(2, 14, 7), float32]) -> (Tensor[(2, 14, 7), float32], Tensor[(12, 14, 3), float32]) {
  %963 = fn (%var_21009: Tensor[(2, 14, 7), float32], %var_21010: Tensor[(2, 14, 7), float32]) -> (Tensor[(2, 14, 7), float32], Tensor[(12, 14, 3), float32]) {
    %956 = cast(%var_21010, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
    %957 = shape_of(%var_21009, dtype="int32") /* ty=Tensor[(3), int32] */;
    %958 = cast(%var_21009, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %960 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %961 = divide(%958, %959) /* ty=Tensor[(2, 14, 7), float32] */;
    %962 = %960.0;
    (%961, %962)
  };
  %963(%var_21024, %var_21025) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_22602() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  @func_22600() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_18502() -> Tensor[(12, 14, 3), float64] {
  @func_11203() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_2321() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_3257() -> (Tensor[(12, 14, 3), float64],) {
  @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_597(%var_595: Tensor[(16, 2, 2), uint64], %var_596: Tensor[(16, 2, 2), uint64]) -> (Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) {
  @func_593(%var_595, %var_596) /* ty=(Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) */
}

def @func_11278() -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_11276() /* ty=(Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_22549() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  %964 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %965 = @func_19461() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %966 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %967 = %964.0;
  %968 = %965.0;
  %969 = %966.1;
  (%967, %968, %969)
}

def @func_10857(%var_10855: Tensor[(14, 1, 3), uint16], %var_10856: Tensor[(14, 5, 3), uint16]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
  @func_10853(%var_10855, %var_10856) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */
}

def @func_13420() -> (Tensor[(12, 14, 3), float64],) {
  %972 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %970 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %971 = %970.0;
    (%971,)
  };
  %972() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_24376() -> (Tensor[(12, 14, 3), float64],) {
  %973 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %974 = %973.2;
  (%974,)
}

def @func_21449() -> (Tensor[(12, 14, 3), float32],) {
  %975 = @func_20786() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %976 = %975.1;
  (%976,)
}

def @func_21829() -> Tensor[(12, 14, 3), bool] {
  %978 = fn () -> Tensor[(12, 14, 3), bool] {
    %977 = @func_21809() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %977.0
  };
  %978() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_9074() -> Tensor[(12, 14, 3), bool] {
  @func_9072() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_5079() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %982 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %979 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %980 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
    %981 = %979.0;
    (%980, %981)
  };
  %982() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_19305() -> (Tensor[(1408), int64],) {
  %985 = fn () -> (Tensor[(1408), int64],) {
    %983 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(1408), int64],) */
}

def @func_23273() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %993 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %986 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %987 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %988 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %989 = %986.0;
    %990 = @func_23087() /* ty=Tensor[(12, 14, 3), float64] */;
    %991 = %987.0;
    %992 = %988.0;
    (%989, %990, %991, %992)
  };
  %993() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_5740(%var_5739: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64],) {
  %996 = fn (%var_5728: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64],) {
    %994 = cast(%var_5728, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
    %995 = log2(%994) /* ty=Tensor[(5, 7, 6), float64] */;
    (%995,)
  };
  %996(%var_5739) /* ty=(Tensor[(5, 7, 6), float64],) */
}

def @func_22309() -> Tensor[(12, 14, 3), bool] {
  @func_22307() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_22740() -> Tensor[(12, 14, 3), float64] {
  @func_22738() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_6633() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) {
  %1007 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) {
    %997 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %998 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
    %999 = @func_5725() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1000 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %1001 = @func_6296() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %1002 = %997.0;
    %1003 = %998.1;
    %1004 = %999.0;
    %1005 = %1000.0;
    %1006 = %1001.0;
    (%1002, %1003, %1004, %1005, %1006)
  };
  %1007() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), bool]) */
}

def @func_16425() -> (Tensor[(1408), int64],) {
  @func_16423() /* ty=(Tensor[(1408), int64],) */
}

def @func_4669() -> Tensor[(12, 14, 3), float32] {
  %1008 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1008.0
}

def @func_5214(%var_5212: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, ?), int64],) {
  @func_5211(%var_5212) /* ty=(Tensor[(12, 7, ?), int64],) */
}

def @func_7834() -> (Tensor[(12, 14, 3), int64],) {
  @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_3788(%var_3780: Tensor[(10, 2, 9), bool]) -> Tensor[(10, 2, 9), bool] {
  %1009 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 2, 9), bool] */, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %1010 = shape_of(%var_3780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_3780, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1011, %1012) /* ty=Tensor[(10, 2, 9), bool] */
}

def @func_6515() -> Tensor[(12, 14, 3), float64] {
  %1013 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1013.1
}

def @func_13845() -> Tensor[(12, 14, 3), float64] {
  %1015 = fn () -> Tensor[(12, 14, 3), float64] {
    %1014 = @func_13481() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1014.0
  };
  %1015() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_7399() -> (Tensor[(12, 14, 3), float32],) {
  %1018 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %1016 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1017 = %1016.0;
    (%1017,)
  };
  %1018() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_10758() -> Tensor[(12, 14, 3), float64] {
  %1020 = fn () -> Tensor[(12, 14, 3), float64] {
    %1019 = @func_7892() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1019.0
  };
  %1020() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_11915(%var_11912: Tensor[(13, 13, 3), float32], %var_11913: Tensor[(84), float32], %var_11914: Tensor[(13, 13, 3), float32]) -> (Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) {
  %1034 = fn (%var_11884: Tensor[(13, 13, 3), float32], %var_11891: Tensor[(84), float32], %var_11897: Tensor[(13, 13, 3), float32]) -> (Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) {
    %1021 = cast(%var_11891, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1022 = reshape(%1021, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
    %1023 = @func_5211(%1022) /* ty=(Tensor[(12, 7, ?), int64],) */;
    %1024 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %1025 = cast(%var_11884, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
    %1026 = rsqrt(%1025) /* ty=Tensor[(13, 13, 3), float32] */;
    %1027 = cast(%var_11897, dtype="uint16") /* ty=Tensor[(13, 13, 3), uint16] */;
    %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1029 = cast(%1026, dtype="uint16") /* ty=Tensor[(13, 13, 3), uint16] */;
    %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1031 = %1023.0;
    %1032 = %1024.0;
    %1033 = bitwise_xor(%1029, %1030) /* ty=Tensor[(13, 13, 3), uint16] */;
    (%1031, %var_11891, %1032, %1033)
  };
  %1034(%var_11912, %var_11913, %var_11914) /* ty=(Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) */
}

def @func_20926(%var_20923: Tensor[(8, 8, 1), float32]) -> (Tensor[(8, 8, 1), float32],) {
  %1035 = cast(%var_20923, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %1036 = asin(%1035) /* ty=Tensor[(8, 8, 1), float32] */;
  (%1036,)
}

def @func_22607() -> (Tensor[(9, 8, 9), float32],) {
  @func_22605() /* ty=(Tensor[(9, 8, 9), float32],) */
}

def @func_21130() -> Tensor[(1408), int64] {
  %1037 = @func_14086() /* ty=(Tensor[(1408), int64],) */;
  %1037.0
}

def @func_21769() -> (Tensor[(12, 14, 3), int64],) {
  %1038 = @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1039 = %1038.0;
  (%1039,)
}

def @func_10871() -> (Tensor[(12, 14, 3), float32],) {
  @func_10869() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_16849() -> Tensor[(12, 14, 3), float64] {
  @func_16847() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_4168() -> Tensor[(12, 14, 3), float32] {
  %1041 = fn () -> Tensor[(12, 14, 3), float32] {
    %1040 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_2262() -> Tensor[(12, 14, 3), float64] {
  @func_2260() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_7167() -> (Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) {
  @func_7165() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) */
}

def @func_3825() -> (Tensor[(12, 14, 3), float32],) {
  %1042 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1042,)
}

def @func_23938() -> (Tensor[(12, 14, 3), float32],) {
  %1043 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_17736() -> Tensor[(9, 8, 9), float32] {
  %1045 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 9), float32] */;
  atanh(%1045) /* ty=Tensor[(9, 8, 9), float32] */
}

def @func_5636() -> Tensor[(12, 14, 3), float32] {
  @func_5634() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_13073() -> Tensor[(4, 9, 14), bool] {
  %1047 = fn () -> Tensor[(4, 9, 14), bool] {
    %1046 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1046.0
  };
  %1047() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_8754() -> Tensor[(12, 14, 3), float32] {
  %1049 = fn () -> Tensor[(12, 14, 3), float32] {
    %1048 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1048.0
  };
  %1049() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_11204() -> Tensor[(12, 14, 3), float64] {
  %1051 = fn () -> Tensor[(12, 14, 3), float64] {
    %1050 = @func_8906() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) */;
    %1050.0
  };
  %1051() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_8256() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */
}

def @func_23301() -> (Tensor[(12, 14, 3), float64],) {
  %1052 = @func_20762() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(64), uint64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) */;
  %1053 = %1052.1;
  (%1053,)
}

def @func_23626(%var_23616: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], uint64, Tensor[(1408), bool], Tensor[(660), int32]) {
  %1054 = cast(%var_23616, dtype="uint64") /* ty=uint64 */;
  %1055 = reshape(%1054, newshape=[]) /* ty=uint64 */;
  %1056 = @func_10545(%1055) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
  %1057 = cast(meta[relay.Constant][28] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1058 = reshape(%1057, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1059 = @func_11880(%1058) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) */;
  %1060 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %1061 = @func_15771() /* ty=Tensor[(12, 14, 3), float64] */;
  %1062 = %1056.1;
  %1063 = %1059.7;
  (%1060, %1061, %1062, %var_23616, %1063, meta[relay.Constant][28] /* ty=Tensor[(660), int32] */)
}

def @func_2877(%var_2876: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1071 = fn (%var_2860: Tensor[(4, 9, 14), bool]) -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %1064 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
    %1065 = shape_of(%var_2860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1066 = cast(%var_2860, dtype="bool") /* ty=Tensor[(4, 9, 14), bool] */;
    %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1068 = logical_and(%1066, %1067) /* ty=Tensor[(4, 9, 14), bool] */;
    %1069 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
    %1070 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1068, %1069, %1070)
  };
  %1071(%var_2876) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_13170(%var_13168: Tensor[(4, 8, 14), float32]) -> (Tensor[(4, 8, 14), float32], Tensor[(196), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float64]) {
  @func_13167(%var_13168) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(196), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_10743() -> (Tensor[(12, 14, 3), float32],) {
  @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_15773() -> Tensor[(12, 14, 3), float64] {
  @func_15771() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_18956() -> (Tensor[(12, 14, 3), int64],) {
  %1072 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1073 = %1072.0;
  (%1073,)
}

def @func_6587(%var_6586: Tensor[(1408, 1), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) {
  %1082 = fn (%var_6576: Tensor[(1408, 1), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) {
    %1074 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1075 = cast(%var_6576, dtype="int64") /* ty=Tensor[(1408, 1), int64] */;
    %1076 = cast(%var_6576, dtype="int64") /* ty=Tensor[(1408, 1), int64] */;
    %1077 = reshape(%1075, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1078 = reshape(%1076, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1079 = @func_1841(%1077, %1078) /* ty=(Tensor[(8, 11, 16), int64],) */;
    %1080 = %1074.0;
    %1081 = %1079.0;
    (%1080, %1081, %var_6576)
  };
  %1082(%var_6586) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) */
}

def @func_23895() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1083 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %1084 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1083, %1084)
}

def @func_23802() -> (Tensor[(12, 14, 3), float32],) {
  @func_23800() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_9825() -> (Tensor[(12, 14, 3), float32],) {
  %1085 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1085,)
}

def @func_15969() -> Tensor[(1408), int64] {
  @func_15967() /* ty=Tensor[(1408), int64] */
}

def @func_8906() -> (Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) {
  %1086 = cast(meta[relay.Constant][30] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %1087 = cast(meta[relay.Constant][30] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %1088 = reshape(%1086, newshape=[2, 16, 15]) /* ty=Tensor[(2, 16, 15), uint32] */;
  %1089 = reshape(%1087, newshape=[2, 16, 15]) /* ty=Tensor[(2, 16, 15), uint32] */;
  %1090 = @func_7912(%1088, %1089) /* ty=(Tensor[(2, 16, 15), bool], Tensor[(480), float32]) */;
  %1091 = @func_8110() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) */;
  %1092 = cast(meta[relay.Constant][31] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1093 = reshape(%1092, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
  %1094 = @func_5211(%1093) /* ty=(Tensor[(12, 7, ?), int64],) */;
  %1095 = %1094.0;
  %1096 = cast(meta[relay.Constant][30] /* ty=Tensor[(480), uint32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1097 = cast(%1095, dtype="float32") /* ty=Tensor[(12, 7, ?), float32] */;
  %1098 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
  %1099 = %1090.0;
  %1100 = %1091.1;
  %1101 = maximum(%1096, %1097) /* ty=Tensor[(12, 7, 480), float32] */;
  (%1098, %1099, %1100, meta[relay.Constant][31] /* ty=Tensor[(84), float32] */, %1101)
}

def @func_16937() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), int64]) {
  %1105 = fn () -> (Tensor[(1408), float64], Tensor[(12, 14, 3), int64]) {
    %1102 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %1103 = @func_10076() /* ty=Tensor[(1408), float64] */;
    %1104 = %1102.1;
    (%1103, %1104)
  };
  %1105() /* ty=(Tensor[(1408), float64], Tensor[(12, 14, 3), int64]) */
}

def @func_3381() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  %1106 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
  %1107 = cast(%1106, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
  %1108 = reshape(%1107, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), bool] */;
  %1109 = @func_2875(%1108) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1110 = %1109.0;
  %1111 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1106, %1110, %1111)
}

def @func_7832() -> (Tensor[(12, 14, 3), int64],) {
  %1112 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1113 = %1112.1;
  (%1113,)
}

def @func_9356() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
  %1114 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1115 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1116 = %1114.2;
  %1117 = @func_9072() /* ty=Tensor[(12, 14, 3), bool] */;
  %1118 = %1115.1;
  (%1116, %1117, %1118)
}

def @func_14259() -> (Tensor[(12, 14, 3), float64],) {
  %1120 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %1119 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_20372() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_20370() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_21747() -> Tensor[(16, 8, 6), float32] {
  %1121 = @func_17161() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), float64]) */;
  %1121.1
}

def @func_9309(%var_9308: Tensor[(525), int8]) -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  %1134 = fn (%var_9298: Tensor[(525), int8]) -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
    %1122 = @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */;
    %1123 = %1122.0;
    %1124 = cast(%1123, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
    %1125 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %1126 = cast(%var_9298, dtype="int8") /* ty=Tensor[(525), int8] */;
    %1127 = cast(%var_9298, dtype="int8") /* ty=Tensor[(525), int8] */;
    %1128 = reshape(%1126, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
    %1129 = reshape(%1127, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
    %1130 = @func_3016(%1128, %1129) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) */;
    %1131 = acosh(%1124) /* ty=Tensor[(4, 9, 14), float64] */;
    %1132 = %1125.1;
    %1133 = %1130.1;
    (%1131, %1132, %1133, %var_9298)
  };
  %1134(%var_9308) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) */
}

def @func_10786() -> Tensor[(12, 14, 3), float64] {
  %1136 = fn () -> Tensor[(12, 14, 3), float64] {
    %1135 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %1135.2
  };
  %1136() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_8790() -> Tensor[(12, 14, 3), float32] {
  @func_8788() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_22551() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) {
  @func_22549() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */
}

def @func_13537(%var_13524: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
  %1137 = cast(%var_13524, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
  sin(%1137) /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_10078() -> Tensor[(1408), float64] {
  @func_10076() /* ty=Tensor[(1408), float64] */
}

def @func_12571(%var_12569: Tensor[(525), int8]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) {
  @func_12568(%var_12569) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), float64], Tensor[(525), int8]) */
}

def @func_5993(%var_5985: Tensor[(22, 64), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(1408), int64], Tensor[(22, 64), int64], Tensor[(12, 14, 3), float64]) {
  %1138 = cast(meta[relay.Constant][32] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1139 = reshape(%1138, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %1140 = @func_5146(%1139) /* ty=(Tensor[(4, 10, 12), float32],) */;
  %1141 = cast(%var_5985, dtype="int64") /* ty=Tensor[(22, 64), int64] */;
  %1142 = reshape(%1141, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1143 = @func_2393(%1142) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1144 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1145 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1146 = %1140.0;
  %1147 = %1143.4;
  %1148 = %1144.1;
  (%1145, %1146, meta[relay.Constant][32] /* ty=Tensor[(480), float32] */, %1147, %var_5985, %1148)
}

def @func_24547(%var_24546: Tensor[(11, 22), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(2, 11, 11), float32], Tensor[(11, 22), float32]) {
  %1159 = fn (%var_24530: Tensor[(11, 22), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(2, 11, 11), float32], Tensor[(11, 22), float32]) {
    %1149 = @func_15724() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1150 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %1151 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1152 = cast(%var_24530, dtype="float32") /* ty=Tensor[(11, 22), float32] */;
    %1153 = reshape(%1152, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), float32] */;
    %1154 = @func_8405(%1153) /* ty=(Tensor[(2, 11, 11), float32],) */;
    %1155 = %1149.0;
    %1156 = %1150.0;
    %1157 = %1151.3;
    %1158 = %1154.0;
    (%1155, %1156, %1157, %1158, %var_24530)
  };
  %1159(%var_24546) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(2, 11, 11), float32], Tensor[(11, 22), float32]) */
}

def @func_7699() -> (Tensor[(12, 14, 3), float32],) {
  @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_2395(%var_2394: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %1172 = fn (%var_2368: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
    %1160 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %1161 = cast(%var_2368, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1162 = cast(%var_2368, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1163 = reshape(%1161, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1164 = reshape(%1162, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1165 = @func_1841(%1163, %1164) /* ty=(Tensor[(8, 11, 16), int64],) */;
    %1166 = @func_2228() /* ty=Tensor[(12, 14, 3), float64] */;
    %1167 = %1160.0;
    %1168 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    %1169 = %1165.0;
    %1170 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %1171 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1166, %1167, %1168, %1169, %var_2368, %1170, %1171)
  };
  %1172(%var_2394) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_8111() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) {
  %1177 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) {
    %1173 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %1174 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
    %1175 = %1173.1;
    %1176 = %1174.0;
    (%1175, %1176)
  };
  %1177() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64]) */
}

def @func_11498() -> (Tensor[(12, 14, 3), float32],) {
  %1180 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %1178 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %1179 = %1178.0;
    (%1179,)
  };
  %1180() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_21429() -> Tensor[(1408), int64] {
  %1182 = fn () -> Tensor[(1408), int64] {
    %1181 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1181.1
  };
  %1182() /* ty=Tensor[(1408), int64] */
}

def @func_12902() -> Tensor[(12, 14, 3), float64] {
  %1183 = fn () -> Tensor[(12, 14, 3), float64] {
    @func_12042() /* ty=Tensor[(12, 14, 3), float64] */
  };
  %1183() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_15133() -> (Tensor[(12, 14, 3), float64],) {
  %1184 = @func_2529() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1185 = %1184.1;
  (%1185,)
}

def @func_18701(%var_18699: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) {
  @func_18698(%var_18699) /* ty=(Tensor[(5, 14, 4), float64], Tensor[(12, 14, 3), float32], Tensor[(525), int8]) */
}

def @func_19462() -> (Tensor[(12, 14, 3), float64],) {
  %1187 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %1186 = @func_12541() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1186,)
  };
  %1187() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_24197() -> Tensor[(12, 14, 3), float32] {
  %1188 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1188.0
}

def @func_14637(%var_14636: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), uint8], Tensor[(11, 5, 3), float64]) {
  %1197 = fn (%var_14614: Tensor[(4, 9, 14), float64]) -> (Tensor[(4, 9, 14), uint8], Tensor[(11, 5, 3), float64]) {
    %1189 = @func_9119() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) */;
    %1190 = %1189.1;
    %1191 = cast(%var_14614, dtype="uint8") /* ty=Tensor[(4, 9, 14), uint8] */;
    %1192 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1193 = cast(%1190, dtype="uint8") /* ty=Tensor[(4, 9, 14), uint8] */;
    %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1195 = bitwise_and(%1193, %1194) /* ty=Tensor[(4, 9, 14), uint8] */;
    %1196 = @func_5663() /* ty=Tensor[(11, 5, 3), float64] */;
    (%1195, %1196)
  };
  %1197(%var_14636) /* ty=(Tensor[(4, 9, 14), uint8], Tensor[(11, 5, 3), float64]) */
}

def @func_12141() -> (Tensor[(12, 14, 3), float32],) {
  %1198 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1199 = %1198.0;
  (%1199,)
}

def @func_17121(%var_17116: float32) -> Tensor[(13, 10, 4), float32] {
  %1200 = cast(%var_17116, dtype="float32") /* ty=float32 */;
  %1201 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 10, 4), float32] */;
  divide(%1200, %1201) /* ty=Tensor[(13, 10, 4), float32] */
}

def @func_3736() -> (Tensor[(11, 5, 3), float64],) {
  @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */
}

def @func_17124(%var_17122: float32) -> Tensor[(13, 10, 4), float32] {
  @func_17121(%var_17122) /* ty=Tensor[(13, 10, 4), float32] */
}

def @func_22093() -> Tensor[(1408), int64] {
  %1203 = fn () -> Tensor[(1408), int64] {
    %1202 = @func_18462() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1202.2
  };
  %1203() /* ty=Tensor[(1408), int64] */
}

def @func_2228() -> Tensor[(12, 14, 3), float64] {
  @func_2039() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_2644() -> (Tensor[(12, 14, 3), float64],) {
  %1205 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %1204 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_14563(%var_14561: Tensor[(13, 15, 11), float32], %var_14562: Tensor[(13, 15, 11), float32]) -> Tensor[(13, 15, 11), float32] {
  @func_14559(%var_14561, %var_14562) /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_10547(%var_10546: uint64) -> (Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) {
  %1211 = fn (%var_10527: uint64) -> (Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) {
    %1206 = cast(%var_10527, dtype="bool") /* ty=bool */;
    %1207 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 14, 16), uint64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
    %1208 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1209 = less(%1206, %1207) /* ty=Tensor[(3, 14, 16), bool] */;
    %1210 = %1208.0;
    (%1209, %1210)
  };
  %1211(%var_10546) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_5819() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %1216 = fn () -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
    %1212 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1213 = @func_5377() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32]) */;
    %1214 = %1212.2;
    %1215 = %1213.4;
    (%1214, %1215)
  };
  %1216() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */
}

def @func_3924() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1217 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  %1218 = cast(%1217, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1219 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1220 = acosh(%1218) /* ty=Tensor[(12, 14, 3), float64] */;
  %1221 = %1219.0;
  %1222 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%1220, %1221, %1222)
}

def @func_20472() -> (Tensor[(4, 9, 14), float32],) {
  %1225 = fn () -> (Tensor[(4, 9, 14), float32],) {
    %1223 = @func_17557() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float32]) */;
    %1224 = %1223.1;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(4, 9, 14), float32],) */
}

def @func_6542() -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1230 = fn () -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %1226 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1227 = %1226.1;
    %1228 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
    %1229 = @func_6515() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1227, %1228, %1229)
  };
  %1230() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_4888() -> (Tensor[(12, 14, 3), float32],) {
  %1233 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %1231 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1232 = %1231.0;
    (%1232,)
  };
  %1233() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_6831() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1234 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1235 = @func_6541() /* ty=(Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1236 = %1234.0;
  %1237 = %1235.1;
  (%1236, %1237)
}

def @func_23358() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
  %1242 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
    %1238 = @func_16404() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %1239 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    %1240 = %1238.0;
    %1241 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1239, %1240, %1241)
  };
  %1242() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_2741(%var_2740: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) {
  %1260 = fn (%var_2705: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) {
    %1243 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1244 = cast(%var_2705, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1245 = cast(%var_2705, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1246 = reshape(%1244, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %1247 = reshape(%1245, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %1248 = @func_462(%1246, %1247) /* ty=Tensor[(10, 6, 11), bool] */;
    %1249 = cast(%var_2705, dtype="int64") /* ty=Tensor[(660), int64] */;
    %1250 = shape_of(%1248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1251 = cast(%1248, dtype="int64") /* ty=Tensor[(10, 6, 11), int64] */;
    %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1253 = bitwise_and(%1251, %1252) /* ty=Tensor[(10, 6, 11), int64] */;
    %1254 = cast(%1253, dtype="float64") /* ty=Tensor[(10, 6, 11), float64] */;
    %1255 = shape_of(%1248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1256 = cast(%1248, dtype="float64") /* ty=Tensor[(10, 6, 11), float64] */;
    %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1258 = %1243.0;
    %1259 = floor_divide(%1256, %1257) /* ty=Tensor[(10, 6, 11), float64] */;
    (%1258, %1259)
  };
  %1260(%var_2740) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */
}

def @func_13540(%var_13538: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
  @func_13537(%var_13538) /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_17409() -> (Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1261 = @func_14877() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %1262 = @func_12082() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1263 = @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1264 = %1261.0;
  %1265 = %1262.1;
  %1266 = %1263.0;
  (%1264, %1265, %1266)
}

def @func_10115() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1269 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %1267 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
    %1268 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1267, %1268)
  };
  %1269() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_16517() -> Tensor[(12, 14, 3), bool] {
  @func_9072() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_18786() -> Tensor[(12, 14, 3), bool] {
  %1270 = @func_10003() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1270.0
}

def @func_11056() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
  %1286 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
    %1271 = @func_10993() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1272 = cast(meta[relay.Constant][35] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1273 = reshape(%1272, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
    %1274 = @func_5146(%1273) /* ty=(Tensor[(4, 10, 12), float32],) */;
    %1275 = @func_4642() /* ty=Tensor[(12, 14, 3), float32] */;
    %1276 = cast(%1275, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %1277 = cast(%1275, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
    %1278 = cast(meta[relay.Constant][36] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1279 = reshape(%1276, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
    %1280 = reshape(%1277, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
    %1281 = reshape(%1278, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %1282 = @func_3549(%1279, %1280, %1281) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
    %1283 = %1271.0;
    %1284 = %1274.0;
    %1285 = %1282.2;
    (%1283, %1284, meta[relay.Constant][35] /* ty=Tensor[(480), float32] */, %1275, %1285, meta[relay.Constant][36] /* ty=Tensor[(1408), int64] */)
  };
  %1286() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32], Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */
}

def @func_14879() -> (Tensor[(11, 5, 3), float64],) {
  @func_14877() /* ty=(Tensor[(11, 5, 3), float64],) */
}

def @func_18652(%var_18597: Tensor[(540), uint16]) -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(9, 4, 15), bool], Tensor[(540), uint16], Tensor[(12, 14, 3), float64], Tensor[(10, 6, 11), bool], Tensor[(660, 1), int32], Tensor[(12, 14, 3), float64]) {
  %1287 = @func_16790() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1288 = @func_18132() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
  %1289 = cast(%var_18597, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1290 = reshape(%1289, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), uint16] */;
  %1291 = @func_13683() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1292 = cast(meta[relay.Constant][37] /* ty=Tensor[(660, 1), int32] */, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
  %1293 = cast(meta[relay.Constant][37] /* ty=Tensor[(660, 1), int32] */, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
  %1294 = reshape(%1292, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1295 = reshape(%1293, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1296 = %1287.1;
  %1297 = %1288.1;
  %1298 = @func_17448(%1290) /* ty=Tensor[(9, 4, 15), bool] */;
  %1299 = %1291.0;
  %1300 = @func_462(%1294, %1295) /* ty=Tensor[(10, 6, 11), bool] */;
  %1301 = @func_13844() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1296, %1297, %1298, %var_18597, %1299, %1300, meta[relay.Constant][37] /* ty=Tensor[(660, 1), int32] */, %1301)
}

def @func_17340() -> (Tensor[(12, 14, 3), float64],) {
  %1302 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1302,)
}

def @func_5148(%var_5147: Tensor[(4, 10, 12), float32]) -> (Tensor[(4, 10, 12), float32],) {
  %1306 = fn (%var_5142: Tensor[(4, 10, 12), float32]) -> (Tensor[(4, 10, 12), float32],) {
    %1303 = cast(-3.10184f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1304 = cast(%var_5142, dtype="float32") /* ty=Tensor[(4, 10, 12), float32] */;
    %1305 = divide(%1303, %1304) /* ty=Tensor[(4, 10, 12), float32] */;
    (%1305,)
  };
  %1306(%var_5147) /* ty=(Tensor[(4, 10, 12), float32],) */
}

def @func_14205() -> (Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) {
  %1315 = fn () -> (Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) {
    %1307 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="bool") /* ty=Tensor[(12, 3, 5), bool] */;
    %1308 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1309 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="bool") /* ty=Tensor[(12, 3, 5), bool] */;
    %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1311 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 3, 5), uint16] */, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
    %1312 = less(%1309, %1310) /* ty=Tensor[(12, 3, 5), bool] */;
    %1313 = atanh(%1311) /* ty=Tensor[(12, 3, 5), float32] */;
    %1314 = @func_12169() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1312, %1313, %1314)
  };
  %1315() /* ty=(Tensor[(12, 3, 5), bool], Tensor[(12, 3, 5), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_22133() -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1320 = fn () -> (Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %1316 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
    %1317 = @func_10076() /* ty=Tensor[(1408), float64] */;
    %1318 = %1316.0;
    %1319 = @func_12901() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1317, %1318, %1319)
  };
  %1320() /* ty=(Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_16223() -> (Tensor[(8, 11, 16), int64],) {
  %1321 = @func_14740() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1322 = %1321.1;
  (%1322,)
}

def @func_8001(%var_7985: Tensor[(64), uint64]) -> (Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1323 = cast(%var_7985, dtype="uint64") /* ty=Tensor[(64), uint64] */;
  %1324 = reshape(%1323, newshape=[16, 4]) /* ty=Tensor[(16, 4), uint64] */;
  %1325 = @func_4477(%1324) /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(16, 4), uint64], Tensor[(12, 14, 3), float64]) */;
  %1326 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1327 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1328 = %1325.4;
  %1329 = %1326.1;
  %1330 = @func_4167() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1327, %1328, %var_7985, %1329, %1330)
}

def @func_6296() -> (Tensor[(12, 14, 3), bool],) {
  %1331 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1332 = %1331.1;
  (%1332,)
}

def @func_21132() -> Tensor[(1408), int64] {
  @func_21130() /* ty=Tensor[(1408), int64] */
}

def @func_8788() -> Tensor[(12, 14, 3), float32] {
  @func_4642() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_22784() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1339 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
    %1333 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1334 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
    %1335 = @func_18330() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1336 = %1333.1;
    %1337 = %1334.1;
    %1338 = %1335.1;
    (%1336, %1337, %1338)
  };
  %1339() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_23960() -> (Tensor[(4, 9, 14), bool],) {
  @func_23958() /* ty=(Tensor[(4, 9, 14), bool],) */
}

def @func_9959() -> (Tensor[(12, 14, 3), bool],) {
  %1342 = fn () -> (Tensor[(12, 14, 3), bool],) {
    %1340 = @func_9682() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %1341 = %1340.1;
    (%1341,)
  };
  %1342() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_5301() -> (Tensor[(12, 14, 3), float64],) {
  %1345 = fn () -> (Tensor[(12, 14, 3), float64],) {
    %1343 = @func_2574() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1344 = %1343.0;
    (%1344,)
  };
  %1345() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_10003() -> (Tensor[(12, 14, 3), bool],) {
  %1346 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
  (%1346,)
}

def @func_10928() -> (Tensor[(12, 14, 3), int64],) {
  @func_10926() /* ty=(Tensor[(12, 14, 3), int64],) */
}

def @func_24185() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(660), int32], Tensor[(1408), float64]) {
  %1354 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(660), int32], Tensor[(1408), float64]) {
    %1347 = @func_19836() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(11, 5, 3), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %1348 = cast(meta[relay.Constant][40] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1349 = reshape(%1348, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %1350 = @func_11880(%1349) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(11, 5, 3), float64], Tensor[(1408), bool]) */;
    %1351 = %1347.3;
    %1352 = %1350.3;
    %1353 = @func_10076() /* ty=Tensor[(1408), float64] */;
    (%1351, %1352, meta[relay.Constant][40] /* ty=Tensor[(660), int32] */, %1353)
  };
  %1354() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(660), int32], Tensor[(1408), float64]) */
}

def @func_7620() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1362 = fn () -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %1355 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1356 = @func_4023() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */;
    %1357 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1358 = %1355.0;
    %1359 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
    %1360 = %1356.1;
    %1361 = %1357.0;
    (%1358, %1359, %1360, %1361)
  };
  %1362() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_11249(%var_11248: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) {
  %1372 = fn (%var_11238: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) {
    %1363 = @func_7697() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1364 = @func_3688() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1365 = cast(%var_11238, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1366 = cast(%var_11238, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1367 = reshape(%1365, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %1368 = reshape(%1366, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
    %1369 = %1363.0;
    %1370 = %1364.0;
    %1371 = @func_462(%1367, %1368) /* ty=Tensor[(10, 6, 11), bool] */;
    (%1369, %1370, %1371, %var_11238)
  };
  %1372(%var_11248) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32]) */
}

def @func_5185() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1381 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %1373 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1374 = @func_2952() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
    %1375 = @func_5078() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1376 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %1377 = %1373.0;
    %1378 = %1374.1;
    %1379 = %1375.1;
    %1380 = %1376.0;
    (%1377, %1378, %1379, %1380)
  };
  %1381() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_11276() -> (Tensor[(196), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1382 = @func_4288() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], Tensor[(196), float32], Tensor[(12, 14, 3), float64]) */;
  %1383 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1384 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1385 = %1382.2;
  %1386 = %1383.0;
  %1387 = %1384.0;
  (%1385, %1386, %1387)
}

def @func_22560() -> (Tensor[(12, 14, 3), float64],) {
  @func_22558() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_6197() -> Tensor[(12, 14, 3), float64] {
  @func_6195() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_16049() -> (Tensor[(12, 14, 3), float32],) {
  %1388 = @func_11406() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1389 = %1388.3;
  (%1389,)
}

def @func_5634() -> Tensor[(12, 14, 3), float32] {
  %1390 = @func_4895() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1390.0
}

def @func_6323(%var_6321: uint32, %var_6322: Tensor[(14, 1, 2), uint32]) -> (Tensor[(14, ?, 2), int8],) {
  %1399 = fn (%var_6305: uint32, %var_6306: Tensor[(14, 1, 2), uint32]) -> (Tensor[(14, ?, 2), int8],) {
    %1391 = cast(%var_6305, dtype="bool") /* ty=bool */;
    %1392 = cast(%var_6306, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
    %1393 = less(%1391, %1392) /* ty=Tensor[(14, 1, 2), bool] */;
    %1394 = cast(%1393, dtype="int8") /* ty=Tensor[(14, 1, 2), int8] */;
    %1395 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1396 = cast(%var_6306, dtype="int8") /* ty=Tensor[(14, 1, 2), int8] */;
    %1397 = dyn.reshape(%1394, %1395, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1398 = bitwise_and(%1396, %1397) /* ty=Tensor[(14, ?, 2), int8] */;
    (%1398,)
  };
  %1399(%var_6321, %var_6322) /* ty=(Tensor[(14, ?, 2), int8],) */
}

def @func_10869() -> (Tensor[(12, 14, 3), float32],) {
  %1400 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1401 = %1400.0;
  (%1401,)
}

def @func_16847() -> Tensor[(12, 14, 3), float64] {
  @func_2228() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_10995() -> (Tensor[(12, 14, 3), float64],) {
  @func_10993() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_15869() -> (bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
  %1410 = fn () -> (bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
    %1402 = @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */;
    %1403 = cast(meta[relay.Constant][41] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1404 = reshape(%1403, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %1405 = @func_2393(%1404) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %1406 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1407 = %1402.2;
    %1408 = %1405.6;
    %1409 = %1406.0;
    (%1407, %1408, meta[relay.Constant][41] /* ty=Tensor[(1408), int64] */, %1409)
  };
  %1410() /* ty=(bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) */
}

def @func_8254() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %1411 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %1412 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1413 = cast(meta[relay.Constant][42] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1414 = cast(meta[relay.Constant][42] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1415 = reshape(%1413, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %1416 = reshape(%1414, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
  %1417 = @func_1841(%1415, %1416) /* ty=(Tensor[(8, 11, 16), int64],) */;
  %1418 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1419 = %1411.1;
  %1420 = %1412.0;
  %1421 = %1417.0;
  %1422 = %1418.1;
  (%1419, %1420, %1421, meta[relay.Constant][42] /* ty=Tensor[(1408), int64] */, %1422)
}

def @func_21051() -> Tensor[(12, 14, 3), float32] {
  @func_21049() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_23958() -> (Tensor[(4, 9, 14), bool],) {
  %1423 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_3553(%var_3550: Tensor[(12, 14, 3), float64], %var_3551: Tensor[(12, 14, 3), bool], %var_3552: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
  %1443 = fn (%var_3469: Tensor[(12, 14, 3), float64], %var_3525: Tensor[(12, 14, 3), bool], %var_3541: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) {
    %1425 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
    %1426 = cast(%var_3469, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %1427 = shape_of(%1425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1428 = cast(%1425, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %1429 = dyn.reshape(%1426, %1427, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1430 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %1431 = cast(%var_3525, dtype="uint16") /* ty=Tensor[(12, 14, 3), uint16] */;
    %1432 = shape_of(%1430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1433 = cast(%1430, dtype="uint16") /* ty=Tensor[(12, 14, 3), uint16] */;
    %1434 = dyn.reshape(%1431, %1432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1435 = cast(%var_3541, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1436 = cast(%var_3541, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1437 = reshape(%1435, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1438 = reshape(%1436, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int64] */;
    %1439 = @func_1841(%1437, %1438) /* ty=(Tensor[(8, 11, 16), int64],) */;
    %1440 = divide(%1428, %1429) /* ty=Tensor[(12, 14, 3), float64] */;
    %1441 = maximum(%1433, %1434) /* ty=Tensor[(12, 14, 3), uint16] */;
    %1442 = %1439.0;
    (%1440, %1441, %1442, %var_3541)
  };
  %1443(%var_3550, %var_3551, %var_3552) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */
}

def @func_4671() -> Tensor[(12, 14, 3), float32] {
  @func_4669() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_23897() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_23895() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_19023() -> (Tensor[(12, 14, 3), float32],) {
  %1444 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1444,)
}

def @func_10685() -> (Tensor[(12, 14, 3), bool],) {
  %1447 = fn () -> (Tensor[(12, 14, 3), bool],) {
    %1445 = @func_5184() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1446 = %1445.1;
    (%1446,)
  };
  %1447() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_15135() -> (Tensor[(12, 14, 3), float64],) {
  @func_15133() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_21142() -> (Tensor[(12, 14, 3), float32],) {
  @func_21140() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_8500() -> Tensor[(12, 14, 3), float64] {
  %1449 = fn () -> Tensor[(12, 14, 3), float64] {
    %1448 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1448.0
  };
  %1449() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_16352() -> (Tensor[(12, 14, 3), bool], Tensor[(660), int32], Tensor[(660), int32]) {
  %1450 = @func_10684() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1451 = cast(meta[relay.Constant][43] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1452 = reshape(%1451, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %1453 = @func_12760(%1452) /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), float32]) */;
  %1454 = %1450.0;
  %1455 = %1453.3;
  (%1454, %1455, meta[relay.Constant][43] /* ty=Tensor[(660), int32] */)
}

def @func_14741() -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) {
  %1464 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) {
    %1456 = @func_9825() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1457 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1458 = reshape(%1457, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int64] */;
    %1459 = @func_6585(%1458) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408, 1), int64]) */;
    %1460 = @func_14086() /* ty=(Tensor[(1408), int64],) */;
    %1461 = %1456.0;
    %1462 = %1459.1;
    %1463 = %1460.0;
    (%1461, %1462, meta[relay.Constant][44] /* ty=Tensor[(1408), int64] */, %1463)
  };
  %1464() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(1408), int64]) */
}

def @func_16021() -> Tensor[(1408), int64] {
  @func_12623() /* ty=Tensor[(1408), int64] */
}

def @func_3869() -> Tensor[(12, 14, 3), float32] {
  %1465 = @func_2841() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1465.0
}

def @func_20557() -> (Tensor[(12, 14, 3), float64],) {
  @func_20555() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_10604() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_10602() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_23158() -> Tensor[(12, 14, 3), float64] {
  @func_23156() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_3446() -> (Tensor[(4, 9, 14), bool],) {
  @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */
}

def @func_17663() -> (Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), bool]) {
  @func_17661() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), bool]) */
}

def @func_22008() -> (Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) {
  @func_22006() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_12500(%var_12499: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) {
  %1479 = fn (%var_12488: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) {
    %1466 = cast(meta[relay.Constant][45] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
    %1467 = reshape(%1466, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %1468 = @func_2739(%1467) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), float64]) */;
    %1469 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
    %1470 = cast(%1469, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
    %1471 = cast(%1469, dtype="bool") /* ty=Tensor[(12, 14, 3), bool] */;
    %1472 = cast(%var_12488, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1473 = reshape(%1470, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
    %1474 = reshape(%1471, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), bool] */;
    %1475 = reshape(%1472, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %1476 = @func_3549(%1473, %1474, %1475) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), uint16], Tensor[(8, 11, 16), int64], Tensor[(1408), int64]) */;
    %1477 = %1468.0;
    %1478 = %1476.1;
    (%1469, %1477, meta[relay.Constant][45] /* ty=Tensor[(660), int32] */, %1478, %var_12488)
  };
  %1479(%var_12499) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) */
}

def @func_15494() -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) {
  %1483 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) {
    %1480 = @func_6085() /* ty=(Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1481 = %1480.2;
    %1482 = @func_13351() /* ty=Tensor[(4, 9, 14), bool] */;
    (%1481, %1482)
  };
  %1483() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), bool]) */
}

def @func_12282() -> Tensor[(8, 1, 12), float64] {
  %1485 = fn () -> Tensor[(8, 1, 12), float64] {
    %1484 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
    atan(%1484) /* ty=Tensor[(8, 1, 12), float64] */
  };
  %1485() /* ty=Tensor[(8, 1, 12), float64] */
}

def @func_3952(%var_3950: Tensor[(12, 14, 3), float64]) -> Tensor[(12, 14, 3), bool] {
  @func_3949(%var_3950) /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_7474(%var_7472: Tensor[(480), float32]) -> (Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
  @func_7471(%var_7472) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */
}

def @func_9047() -> Tensor[(12, 14, 3), float32] {
  %1487 = fn () -> Tensor[(12, 14, 3), float32] {
    %1486 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
    %1486.0
  };
  %1487() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_11406() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1488 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1489 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1490 = %1488.0;
  %1491 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1492 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
  %1493 = %1489.0;
  (%1490, %1491, %1492, %1493)
}

def @func_17950() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  @func_17948() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */
}

def @func_11678() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
  %1502 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) {
    %1494 = @func_9714() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1495 = @func_6916() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %1496 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1497 = @func_6165() /* ty=(Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */;
    %1498 = %1494.0;
    %1499 = %1495.0;
    %1500 = %1496.1;
    %1501 = %1497.0;
    (%1498, %1499, %1500, %1501)
  };
  %1502() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), int64]) */
}

def @func_16694(%var_16691: Tensor[(84), float32]) -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool, Tensor[(84), float32]) {
  %1503 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1504 = @func_5692() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool]) */;
  %1505 = @func_4803() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1506 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1507 = cast(%var_16691, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1508 = reshape(%1506, newshape=[]) /* ty=bool */;
  %1509 = reshape(%1507, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1510 = @func_12420(%1508, %1509) /* ty=(Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) */;
  %1511 = %1503.0;
  %1512 = %1504.1;
  %1513 = %1505.1;
  %1514 = %1510.10;
  (%1511, %1512, %1513, %1514, True /* ty=bool */, %var_16691)
}

def @func_14127(%var_14126: bool) -> (Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) {
  %1521 = fn (%var_14123: bool) -> (Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) {
    %1515 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
    %1516 = cast(%var_14123, dtype="bool") /* ty=bool */;
    %1517 = reshape(%1516, newshape=[]) /* ty=bool */;
    %1518 = @func_5291(%1517) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
    %1519 = %1515.1;
    %1520 = %1518.4;
    (%1519, %1520, %var_14123)
  };
  %1521(%var_14126) /* ty=(Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) */
}

def @func_7892() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1522 = @func_3233() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1523 = @func_2319() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1524 = %1522.1;
  %1525 = %1523.0;
  (%1524, %1525)
}

def @func_6760() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  %1526 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1527 = cast(meta[relay.Constant][47] /* ty=Tensor[(1408), int64] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1528 = reshape(%1527, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1529 = @func_4149(%1528) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1530 = %1526.0;
  %1531 = %1529.0;
  (%1530, %1531, meta[relay.Constant][47] /* ty=Tensor[(1408), int64] */)
}

def @func_12143() -> (Tensor[(12, 14, 3), float32],) {
  @func_12141() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_19289() -> (Tensor[(12, 14, 3), float32],) {
  %1533 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %1532 = @func_9437() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1532,)
  };
  %1533() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_12026() -> (Tensor[(12, 14, 3), float32],) {
  @func_12024() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_23151(%var_23150: Tensor[(660, 1), int32]) -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(660, 1), int32]) {
  %1540 = fn (%var_23141: Tensor[(660, 1), int32]) -> (Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(660, 1), int32]) {
    %1534 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %1535 = cast(%var_23141, dtype="int32") /* ty=Tensor[(660, 1), int32] */;
    %1536 = reshape(%1535, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %1537 = @func_13968(%1536) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) */;
    %1538 = %1534.0;
    %1539 = %1537.2;
    (%1538, %1539, %var_23141)
  };
  %1540(%var_23150) /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(660, 1), int32]) */
}

def @func_8408(%var_8406: Tensor[(2, 11, 11), float32]) -> (Tensor[(2, 11, 11), float32],) {
  @func_8405(%var_8406) /* ty=(Tensor[(2, 11, 11), float32],) */
}

def @func_8942() -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) {
  @func_8940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) */
}

def @func_18761() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
  %1545 = fn () -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) {
    %1541 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
    %1542 = @func_7892() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1543 = %1541.1;
    %1544 = %1542.1;
    (%1543, %1544)
  };
  %1545() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) */
}

def @func_22364() -> Tensor[(1408), int64] {
  %1547 = fn () -> Tensor[(1408), int64] {
    %1546 = @func_19304() /* ty=(Tensor[(1408), int64],) */;
    %1546.0
  };
  %1547() /* ty=Tensor[(1408), int64] */
}

def @func_4555(%var_4554: Tensor[(4, 9, 14), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) {
  %1566 = fn (%var_4546: Tensor[(4, 9, 14), float32]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) {
    %1548 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1549 = cast(meta[relay.Constant][48] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
    %1550 = cast(meta[relay.Constant][48] /* ty=Tensor[(525), int8] */, dtype="int8") /* ty=Tensor[(525), int8] */;
    %1551 = reshape(%1549, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
    %1552 = reshape(%1550, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), int8] */;
    %1553 = @func_3016(%1551, %1552) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) */;
    %1554 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
    %1555 = %1554.1;
    %1556 = cast(%1555, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
    %1557 = cos(%1556) /* ty=Tensor[(4, 9, 14), float32] */;
    %1558 = cast(%var_4546, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
    %1559 = shape_of(%1557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1560 = cast(%1557, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
    %1561 = dyn.reshape(%1558, %1559, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1562 = %1548.0;
    %1563 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %1564 = %1553.0;
    %1565 = subtract(%1560, %1561) /* ty=Tensor[(4, 9, 14), float32] */;
    (%1562, %1563, %1564, meta[relay.Constant][48] /* ty=Tensor[(525), int8] */, %1565)
  };
  %1566(%var_4554) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(15, 7, 5), bool], Tensor[(525), int8], Tensor[(4, 9, 14), float32]) */
}

def @func_13683() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1567 = @func_11948() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1568 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1569 = %1567.2;
  (%1568, %1569)
}

def @func_22388() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
  %1570 = @func_20621() /* ty=Tensor[(4, 9, 14), bool] */;
  %1571 = @func_19537() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1570, %1571)
}

def @func_21366(%var_21309: bool, %var_21356: Tensor[(5, 42), uint16]) -> (Tensor[(12, 14, 3), float64], bool, Tensor[(8, 11, 16), float32], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), int64], Tensor[(14, 5, 3), bool], Tensor[(42), uint16], Tensor[(5, 42), uint16]) {
  %1572 = cast(%var_21309, dtype="bool") /* ty=bool */;
  %1573 = reshape(%1572, newshape=[]) /* ty=bool */;
  %1574 = @func_14125(%1573) /* ty=(Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], bool) */;
  %1575 = %1574.1;
  %1576 = cast(%1575, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
  %1577 = cast(meta[relay.Constant][49] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1578 = reshape(%1577, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
  %1579 = @func_8254() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), int64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1580 = cast(meta[relay.Constant][50] /* ty=Tensor[(42), uint16] */, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %1581 = cast(%var_21356, dtype="uint16") /* ty=Tensor[(5, 42), uint16] */;
  %1582 = reshape(%1580, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), uint16] */;
  %1583 = reshape(%1581, newshape=[14, 5, 3]) /* ty=Tensor[(14, 5, 3), uint16] */;
  %1584 = @func_10853(%1582, %1583) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */;
  %1585 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
  %1586 = log(%1576) /* ty=Tensor[(8, 11, 16), float32] */;
  %1587 = @func_13537(%1578) /* ty=Tensor[(16, 8, 6), float32] */;
  %1588 = %1579.4;
  %1589 = %1584.0;
  (%1585, %var_21309, %1586, %1587, meta[relay.Constant][49] /* ty=Tensor[(768), float32] */, %1588, %1589, meta[relay.Constant][50] /* ty=Tensor[(42), uint16] */, %var_21356)
}

def @func_3926() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_4149(%var_4147: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  %1590 = cast(%var_4147, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %1591 = reshape(%1590, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1592 = @func_2393(%1591) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1593 = @func_3109() /* ty=Tensor[(12, 14, 3), float64] */;
  %1594 = @func_3869() /* ty=Tensor[(12, 14, 3), float32] */;
  %1595 = %1592.0;
  (%1593, %1594, %1595, %var_4147)
}

def @func_16519() -> Tensor[(12, 14, 3), bool] {
  @func_16517() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_19589(%var_19587: Tensor[(6, 2, 1), bool]) -> (Tensor[(6, 2, ?), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_19586(%var_19587) /* ty=(Tensor[(6, 2, ?), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_3019(%var_3017: Tensor[(15, 7, 5), int8], %var_3018: Tensor[(15, 7, 5), int8]) -> (Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) {
  %1602 = fn (%var_2974: Tensor[(15, 7, 5), int8], %var_2975: Tensor[(15, 7, 5), int8]) -> (Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) {
    %1596 = cast(%var_2975, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
    %1597 = shape_of(%var_2974, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1598 = cast(%var_2974, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
    %1599 = dyn.reshape(%1596, %1597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1600 = less_equal(%1598, %1599) /* ty=Tensor[(15, 7, 5), bool] */;
    %1601 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1600, %1601)
  };
  %1602(%var_3017, %var_3018) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_12420(%var_12364: bool, %var_12395: Tensor[(84), float32]) -> (Tensor[(1408), int64], Tensor[(8, 11, 16), int64], bool, Tensor[(12, 14, 3), bool], Tensor[(504), float64], Tensor[(660), int32], Tensor[(12, 14, 3), float64], Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(507), float32], Tensor[(12, 14, 3), float64]) {
  %1603 = @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1604 = cast(%var_12364, dtype="bool") /* ty=bool */;
  %1605 = reshape(%1604, newshape=[]) /* ty=bool */;
  %1606 = @func_5291(%1605) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
  %1607 = cast(meta[relay.Constant][51] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1608 = reshape(%1607, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1609 = @func_5443() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1610 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1611 = cast(meta[relay.Constant][52] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1612 = cast(%var_12395, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1613 = cast(meta[relay.Constant][52] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1614 = reshape(%1611, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %1615 = reshape(%1612, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1616 = reshape(%1613, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %1617 = @func_11911(%1614, %1615, %1616) /* ty=(Tensor[(12, 7, ?), int64], Tensor[(84), float32], Tensor[(12, 14, 3), float32], Tensor[(13, 13, 3), uint16]) */;
  %1618 = cast(meta[relay.Constant][52] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1619 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1620 = %1603.0;
  %1621 = %1606.4;
  %1622 = @func_3949(%1608) /* ty=Tensor[(12, 14, 3), bool] */;
  %1623 = %1609.2;
  %1624 = %1610.0;
  %1625 = %1617.0;
  %1626 = rsqrt(%1618) /* ty=Tensor[(507), float32] */;
  %1627 = %1619.0;
  (%1620, %1621, %var_12364, %1622, meta[relay.Constant][51] /* ty=Tensor[(504), float64] */, %1623, %1624, %1625, %var_12395, %1626, %1627)
}

def @func_17798() -> Tensor[(12, 14, 3), float32] {
  %1628 = fn () -> Tensor[(12, 14, 3), float32] {
    @func_9437() /* ty=Tensor[(12, 14, 3), float32] */
  };
  %1628() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_19032() -> (Tensor[(12, 14, 3), float64],) {
  @func_19030() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_22600() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1629 = @func_22200() /* ty=(Tensor[(12, 6, 7), int32], Tensor[(12, 14, 3), float32]) */;
  %1630 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1631 = @func_14373() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1632 = %1629.1;
  %1633 = %1630.0;
  %1634 = %1631.1;
  (%1632, %1633, %1634)
}

def @func_21735() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1635 = @func_8606() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1636 = %1635.1;
  %1637 = cast(%1636, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1638 = reshape(%1637, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1639 = @func_20442() /* ty=Tensor[(12, 14, 3), float32] */;
  %1640 = @func_3949(%1638) /* ty=Tensor[(12, 14, 3), bool] */;
  (%1636, %1639, %1640)
}

def @func_14919(%var_14917: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) {
  @func_14916(%var_14917) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) */
}

def @func_11949() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1645 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %1641 = @func_10241() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1642 = %1641.2;
    %1643 = @func_10757() /* ty=Tensor[(12, 14, 3), float64] */;
    %1644 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1642, %1643, %1644)
  };
  %1645() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_4069() -> Tensor[(12, 14, 3), int64] {
  @func_4067() /* ty=Tensor[(12, 14, 3), int64] */
}

def @func_10602() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1646 = @func_7054() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %1647 = @func_10114() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1648 = %1646.1;
  %1649 = %1647.0;
  (%1648, %1649)
}

def @func_10971() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) {
  %1650 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1651 = reshape(%1650, newshape=[]) /* ty=bool */;
  %1652 = @func_10491(%1651) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
  %1653 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  %1654 = %1652.3;
  (%1653, %1654, False /* ty=bool */)
}

def @func_14770() -> Tensor[(12, 14, 3), float64] {
  @func_14768() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_4851() -> (Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) {
  %1657 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) {
    %1655 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %1656 = @func_4674() /* ty=Tensor[(4, 9, 14), bool] */;
    (%1655, %1656)
  };
  %1657() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */
}

def @func_5561(%var_5558: Tensor[(16, 3, 8), int32], %var_5559: Tensor[(16, 3, 8), int32], %var_5560: Tensor[(480), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 7, ?), bool], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
  %1678 = fn (%var_5498: Tensor[(16, 3, 8), int32], %var_5499: Tensor[(16, 3, 8), int32], %var_5552: Tensor[(480), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 7, ?), bool], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) {
    %1658 = cast(%var_5499, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
    %1659 = shape_of(%var_5498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1660 = cast(%var_5498, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
    %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1662 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1663 = cast(meta[relay.Constant][53] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1664 = reshape(%1663, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float32] */;
    %1665 = @func_5211(%1664) /* ty=(Tensor[(12, 7, ?), int64],) */;
    %1666 = %1665.0;
    %1667 = cast(meta[relay.Constant][53] /* ty=Tensor[(84), float32] */, dtype="bool") /* ty=Tensor[(84), bool] */;
    %1668 = shape_of(%1666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1669 = cast(%1666, dtype="bool") /* ty=Tensor[(12, 7, ?), bool] */;
    %1670 = dyn.reshape(%1667, %1668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1671 = cast(%var_5552, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1672 = reshape(%1671, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
    %1673 = @func_5146(%1672) /* ty=(Tensor[(4, 10, 12), float32],) */;
    %1674 = greater_equal(%1660, %1661) /* ty=Tensor[(16, 3, 8), bool] */;
    %1675 = %1662.0;
    %1676 = greater_equal(%1669, %1670) /* ty=Tensor[(12, 7, ?), bool] */;
    %1677 = %1673.0;
    (%1674, %1675, %1676, %1677, %var_5552)
  };
  %1678(%var_5558, %var_5559, %var_5560) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 7, ?), bool], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */
}

def @func_13055() -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float32]) {
  %1687 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float32]) {
    %1679 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1680 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
    %1681 = %1680.0;
    %1682 = cast(%1681, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
    %1683 = tan(%1682) /* ty=Tensor[(11, 5, 3), float32] */;
    %1684 = cast(%1683, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
    %1685 = %1679.0;
    %1686 = acos(%1684) /* ty=Tensor[(11, 5, 3), float32] */;
    (%1685, %1686)
  };
  %1687() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float32]) */
}

def @func_7915(%var_7913: Tensor[(2, 16, 15), uint32], %var_7914: Tensor[(2, 16, 15), uint32]) -> (Tensor[(2, 16, 15), bool], Tensor[(480), float32]) {
  %1697 = fn (%var_7903: Tensor[(2, 16, 15), uint32], %var_7904: Tensor[(2, 16, 15), uint32]) -> (Tensor[(2, 16, 15), bool], Tensor[(480), float32]) {
    %1688 = cast(%var_7904, dtype="bool") /* ty=Tensor[(2, 16, 15), bool] */;
    %1689 = shape_of(%var_7903, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1690 = cast(%var_7903, dtype="bool") /* ty=Tensor[(2, 16, 15), bool] */;
    %1691 = dyn.reshape(%1688, %1689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1692 = not_equal(%1690, %1691) /* ty=Tensor[(2, 16, 15), bool] */;
    %1693 = cast(%1692, dtype="float32") /* ty=Tensor[(2, 16, 15), float32] */;
    %1694 = reshape(%1693, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1695 = @func_7471(%1694) /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 10, 12), float32], Tensor[(480), float32]) */;
    %1696 = %1695.2;
    (%1692, %1696)
  };
  %1697(%var_7913, %var_7914) /* ty=(Tensor[(2, 16, 15), bool], Tensor[(480), float32]) */
}

def @func_593(%var_544: Tensor[(16, 2, 2), uint64], %var_545: Tensor[(16, 2, 2), uint64]) -> (Tensor[(16, 2, 2), uint64], Tensor[(16, 2, 2), int8], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(10, 6, 11), bool], Tensor[(10, 6, 11), bool]) {
  %1698 = cast(%var_545, dtype="uint64") /* ty=Tensor[(16, 2, 2), uint64] */;
  %1699 = shape_of(%var_544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1700 = cast(%var_544, dtype="uint64") /* ty=Tensor[(16, 2, 2), uint64] */;
  %1701 = dyn.reshape(%1698, %1699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1702 = cast(%var_545, dtype="int8") /* ty=Tensor[(16, 2, 2), int8] */;
  %1703 = shape_of(%var_544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1704 = cast(%var_544, dtype="int8") /* ty=Tensor[(16, 2, 2), int8] */;
  %1705 = dyn.reshape(%1702, %1703, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1706 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1707 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1708 = reshape(%1706, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1709 = reshape(%1707, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1710 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %1711 = @func_462(%1708, %1709) /* ty=Tensor[(10, 6, 11), bool] */;
  %1712 = cast(%1711, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1713 = reshape(%1710, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1714 = reshape(%1712, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1715 = @func_462(%1713, %1714) /* ty=Tensor[(10, 6, 11), bool] */;
  %1716 = cast(%1715, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1717 = cast(%1711, dtype="int32") /* ty=Tensor[(10, 6, 11), int32] */;
  %1718 = reshape(%1716, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1719 = reshape(%1717, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), int32] */;
  %1720 = add(%1700, %1701) /* ty=Tensor[(16, 2, 2), uint64] */;
  %1721 = minimum(%1704, %1705) /* ty=Tensor[(16, 2, 2), int8] */;
  %1722 = @func_462(%1718, %1719) /* ty=Tensor[(10, 6, 11), bool] */;
  (%1720, %1721, %1711, meta[relay.Constant][54] /* ty=Tensor[(660), int32] */, %1715, %1722)
}

def @func_8004(%var_8002: Tensor[(64), uint64]) -> (Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_8001(%var_8002) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(16, 4), uint64], Tensor[(64), uint64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_10364() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1723 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1724 = @func_3825() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1725 = @func_10139() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1726 = %1723.1;
  %1727 = %1724.0;
  %1728 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
  %1729 = %1725.0;
  (%1726, %1727, %1728, %1729)
}

def @func_15907() -> (Tensor[(4, 9, 14), bool],) {
  %1732 = fn () -> (Tensor[(4, 9, 14), bool],) {
    %1730 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %1731 = %1730.0;
    (%1731,)
  };
  %1732() /* ty=(Tensor[(4, 9, 14), bool],) */
}

def @func_10993() -> (Tensor[(12, 14, 3), float64],) {
  %1733 = @func_5596() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
  %1734 = %1733.1;
  (%1734,)
}

def @func_18866() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) {
  %1735 = @func_11723() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1736 = @func_15365() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32]) */;
  %1737 = %1735.0;
  %1738 = %1736.0;
  %1739 = @func_9550() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1737, %1738, %1739)
}

def @func_5487(%var_5486: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), float32] {
  %1741 = fn (%var_5481: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), float32] {
    %1740 = cast(%var_5481, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    erf(%1740) /* ty=Tensor[(13, 13, 13), float32] */
  };
  %1741(%var_5486) /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_4024() -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) {
  %1747 = fn () -> (Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) {
    %1742 = @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */;
    %1743 = %1742.1;
    %1744 = cast(%1743, dtype="float64") /* ty=Tensor[(4, 9, 14), float64] */;
    %1745 = exp(%1744) /* ty=Tensor[(4, 9, 14), float64] */;
    %1746 = @func_2417() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1745, %1746)
  };
  %1747() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_18788() -> Tensor[(12, 14, 3), bool] {
  @func_18786() /* ty=Tensor[(12, 14, 3), bool] */
}

def @func_24319() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1748 = @func_22132() /* ty=(Tensor[(1408), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1749 = @func_22600() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */;
  %1750 = %1748.2;
  %1751 = %1749.1;
  (%1750, %1751)
}

def @func_465(%var_463: Tensor[(10, 6, 11), int32], %var_464: Tensor[(10, 6, 11), int32]) -> Tensor[(10, 6, 11), bool] {
  %1756 = fn (%var_456: Tensor[(10, 6, 11), int32], %var_457: Tensor[(10, 6, 11), int32]) -> Tensor[(10, 6, 11), bool] {
    %1752 = cast(%var_457, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
    %1753 = shape_of(%var_456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1754 = cast(%var_456, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
    %1755 = dyn.reshape(%1752, %1753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%1754, %1755) /* ty=Tensor[(10, 6, 11), bool] */
  };
  %1756(%var_463, %var_464) /* ty=Tensor[(10, 6, 11), bool] */
}

def @func_22006() -> (Tensor[(12, 14, 3), bool], Tensor[(14, 15, ?), bool], Tensor[(210), bool], Tensor[(12, 14, 3), float32]) {
  %1757 = @func_5088() /* ty=(Tensor[(12, 14, 3), bool],) */;
  %1758 = cast(meta[relay.Constant][55] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
  %1759 = cast(meta[relay.Constant][55] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
  %1760 = reshape(%1758, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), bool] */;
  %1761 = reshape(%1759, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), bool] */;
  %1762 = @func_6736(%1760, %1761) /* ty=(Tensor[(14, 15, ?), bool], Tensor[(12, 14, 3), float32]) */;
  %1763 = %1757.0;
  %1764 = %1762.0;
  %1765 = @func_2182() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1763, %1764, meta[relay.Constant][55] /* ty=Tensor[(210), bool] */, %1765)
}

def @func_18239(%var_18238: Tensor[(3, 4, 1), float64]) -> (Tensor[(3, 4, 1), float64],) {
  %1768 = fn (%var_18229: Tensor[(3, 4, 1), float64]) -> (Tensor[(3, 4, 1), float64],) {
    %1766 = cast(%var_18229, dtype="float64") /* ty=Tensor[(3, 4, 1), float64] */;
    %1767 = erf(%1766) /* ty=Tensor[(3, 4, 1), float64] */;
    (%1767,)
  };
  %1768(%var_18238) /* ty=(Tensor[(3, 4, 1), float64],) */
}

def @func_9550() -> Tensor[(12, 14, 3), float32] {
  %1769 = @func_5603() /* ty=(Tensor[(12, 14, 3), float32],) */;
  %1769.0
}

def @func_7086() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %1774 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
    %1770 = @func_6369() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %1771 = @func_5300() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1772 = %1770.0;
    %1773 = %1771.0;
    (%1772, %1773)
  };
  %1774() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_14877() -> (Tensor[(11, 5, 3), float64],) {
  %1775 = @func_8940() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(11, 5, 3), float64]) */;
  %1776 = %1775.1;
  (%1776,)
}

def @func_16388(%var_16387: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
  %1782 = fn (%var_16360: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) {
    %1777 = cast(%var_16360, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %1778 = @func_9958() /* ty=(Tensor[(12, 14, 3), bool],) */;
    %1779 = cos(%1777) /* ty=Tensor[(12, 6, 7), float32] */;
    %1780 = @func_8753() /* ty=Tensor[(12, 14, 3), float32] */;
    %1781 = %1778.0;
    (%1779, %1780, %1781)
  };
  %1782(%var_16387) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */
}

def @func_10973() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) {
  @func_10971() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], bool) */
}

def @func_21370(%var_21368: bool, %var_21369: Tensor[(5, 42), uint16]) -> (Tensor[(12, 14, 3), float64], bool, Tensor[(8, 11, 16), float32], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), int64], Tensor[(14, 5, 3), bool], Tensor[(42), uint16], Tensor[(5, 42), uint16]) {
  @func_21366(%var_21368, %var_21369) /* ty=(Tensor[(12, 14, 3), float64], bool, Tensor[(8, 11, 16), float32], Tensor[(16, 8, 6), float32], Tensor[(768), float32], Tensor[(12, 14, 3), int64], Tensor[(14, 5, 3), bool], Tensor[(42), uint16], Tensor[(5, 42), uint16]) */
}

def @func_14916(%var_14905: uint64) -> (Tensor[(12, 14, 3), float64], Tensor[(3, 14, 16), bool], uint64) {
  %1783 = @func_9933() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
  %1784 = cast(%var_14905, dtype="uint64") /* ty=uint64 */;
  %1785 = reshape(%1784, newshape=[]) /* ty=uint64 */;
  %1786 = @func_10545(%1785) /* ty=(Tensor[(3, 14, 16), bool], Tensor[(12, 14, 3), float32]) */;
  %1787 = %1783.0;
  %1788 = %1786.0;
  (%1787, %1788, %var_14905)
}

def @func_17948() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) {
  %1789 = @func_3643() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1790 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1791 = %1789.2;
  %1792 = %1790.0;
  (%1791, %1792)
}

def @func_23515() -> Tensor[(12, 14, 3), float32] {
  @func_23513() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_21537() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  @func_21535() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_3383() -> (Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) {
  @func_3381() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float32]) */
}

def @func_10005() -> (Tensor[(12, 14, 3), bool],) {
  @func_10003() /* ty=(Tensor[(12, 14, 3), bool],) */
}

def @func_5211(%var_5186: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, ?), int64],) {
  %1793 = cast(%var_5186, dtype="float32") /* ty=Tensor[(12, 7, 1), float32] */;
  %1794 = asinh(%1793) /* ty=Tensor[(12, 7, 1), float32] */;
  %1795 = cast(%1794, dtype="int64") /* ty=Tensor[(12, 7, 1), int64] */;
  %1796 = shape_of(%var_5186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1797 = cast(%var_5186, dtype="int64") /* ty=Tensor[(12, 7, 1), int64] */;
  %1798 = dyn.reshape(%1795, %1796, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1799 = right_shift(%1797, %1798) /* ty=Tensor[(12, 7, ?), int64] */;
  (%1799,)
}

def @func_13971(%var_13969: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) {
  @func_13968(%var_13969) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(1408), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32]) */
}

def @func_22390() -> (Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) {
  @func_22388() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_10366() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_10364() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_20443() -> Tensor[(12, 14, 3), float32] {
  %1801 = fn () -> Tensor[(12, 14, 3), float32] {
    %1800 = @func_10602() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
    %1800.1
  };
  %1801() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_8440(%var_8423: Tensor[(13, 4, 2), float32], %var_8424: Tensor[(13, 4, 2), float32]) -> (Tensor[(13, 4, 2), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  %1802 = cast(%var_8424, dtype="float32") /* ty=Tensor[(13, 4, 2), float32] */;
  %1803 = shape_of(%var_8423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1804 = cast(%var_8423, dtype="float32") /* ty=Tensor[(13, 4, 2), float32] */;
  %1805 = dyn.reshape(%1802, %1803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1806 = @func_3444() /* ty=(Tensor[(4, 9, 14), bool],) */;
  %1807 = floor_divide(%1804, %1805) /* ty=Tensor[(13, 4, 2), float32] */;
  %1808 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
  %1809 = %1806.0;
  (%1807, %1808, %1809)
}

def @func_5873() -> Tensor[(1408), int64] {
  %1810 = @func_4736() /* ty=(Tensor[(4, 9, 14), bool], Tensor[(1408), int64], Tensor[(1408), int64]) */;
  %1810.1
}

def @func_8444(%var_8442: Tensor[(13, 4, 2), float32], %var_8443: Tensor[(13, 4, 2), float32]) -> (Tensor[(13, 4, 2), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) {
  @func_8440(%var_8442, %var_8443) /* ty=(Tensor[(13, 4, 2), float32], Tensor[(12, 14, 3), float32], Tensor[(4, 9, 14), bool]) */
}

def @func_14374() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %1814 = fn () -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
    %1811 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
    %1812 = @func_2066() /* ty=Tensor[(12, 14, 3), bool] */;
    %1813 = %1811.1;
    (%1812, %1813)
  };
  %1814() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */
}

def @func_10491(%var_10473: bool) -> (Tensor[(12, 14, 3), float32], Tensor[(7, 14, 2), int32], bool, Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  %1815 = @func_4941() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1816 = cast(%var_10473, dtype="bool") /* ty=bool */;
  %1817 = reshape(%1816, newshape=[]) /* ty=bool */;
  %1818 = @func_5291(%1817) /* ty=(Tensor[(3, 16, 1), bool], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(7, 14, 2), int32], Tensor[(8, 11, 16), int64]) */;
  %1819 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1820 = %1815.1;
  %1821 = %1818.3;
  %1822 = %1819.0;
  %1823 = @func_6195() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1820, %1821, %var_10473, %1822, %1823)
}

def @func_6369() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) {
  %1824 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1825 = cast(%1824, dtype="float64") /* ty=Tensor[(12, 14, 3), float64] */;
  %1826 = reshape(%1825, newshape=[12, 14, 3]) /* ty=Tensor[(12, 14, 3), float64] */;
  %1827 = @func_3949(%1826) /* ty=Tensor[(12, 14, 3), bool] */;
  %1828 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  (%1824, %1827, %1828)
}

def @func_2575() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1833 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %1829 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    %1830 = cast(%1829, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
    %1831 = @func_2260() /* ty=Tensor[(12, 14, 3), float64] */;
    %1832 = log2(%1830) /* ty=Tensor[(12, 14, 3), float32] */;
    (%1831, %1832)
  };
  %1833() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_2530() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
  %1836 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) {
    %1834 = @func_2462() /* ty=Tensor[(12, 14, 3), float32] */;
    %1835 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
    (%1834, %1835)
  };
  %1836() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64]) */
}

def @func_17099() -> (Tensor[(12, 14, 3), float32],) {
  @func_17097() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_14850() -> (Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1, 1408), float32], Tensor[(1408), int64]) {
  %1837 = @func_4850() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(4, 9, 14), bool]) */;
  %1838 = @func_7832() /* ty=(Tensor[(12, 14, 3), int64],) */;
  %1839 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 1408), int64] */, dtype="int64") /* ty=Tensor[(1, 1408), int64] */;
  %1840 = reshape(%1839, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1841 = @func_12498(%1840) /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(660), int32], Tensor[(12, 14, 3), uint16], Tensor[(1408), int64]) */;
  %1842 = @func_3924() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool]) */;
  %1843 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 1408), int64] */, dtype="float32") /* ty=Tensor[(1, 1408), float32] */;
  %1844 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 1408), int64] */, dtype="int64") /* ty=Tensor[(1, 1408), int64] */;
  %1845 = reshape(%1844, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
  %1846 = @func_4149(%1845) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1847 = %1837.0;
  %1848 = %1838.0;
  %1849 = %1841.0;
  %1850 = %1842.0;
  %1851 = sigmoid(%1843) /* ty=Tensor[(1, 1408), float32] */;
  %1852 = %1846.3;
  (%1847, %1848, %1849, %1850, %1851, %1852)
}

def @func_18332() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  @func_18330() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_23057() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1853 = @func_6760() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */;
  %1854 = %1853.2;
  %1855 = @func_2039() /* ty=Tensor[(12, 14, 3), float64] */;
  %1856 = @func_20708() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1854, %1855, %1856)
}

def @func_23059() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  @func_23057() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_8045() -> (Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) {
  @func_8043() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(11, 5, 3), float64]) */
}

def @func_22812() -> Tensor[(12, 14, 3), float32] {
  @func_22810() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_14213() -> Tensor[(12, 14, 3), float32] {
  @func_14211() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_13325() -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) {
  %1860 = fn () -> (Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) {
    %1857 = @func_7398() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1858 = @func_4329() /* ty=Tensor[(7, 14, 2), int32] */;
    %1859 = %1857.0;
    (%1858, %1859)
  };
  %1860() /* ty=(Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float32]) */
}

def @func_17320() -> (Tensor[(12, 14, 3), float32],) {
  %1862 = fn () -> (Tensor[(12, 14, 3), float32],) {
    %1861 = @func_14211() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1861,)
  };
  %1862() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_15438() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) {
  @func_15436() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */
}

def @func_6461() -> (Tensor[(12, 14, 3), float64],) {
  @func_6459() /* ty=(Tensor[(12, 14, 3), float64],) */
}

def @func_13772(%var_13770: Tensor[(660), int32]) -> (Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) {
  @func_13769(%var_13770) /* ty=(Tensor[(12, 14, 3), bool], Tensor[(10, 6, 11), bool], Tensor[(660), int32], Tensor[(1408), float64]) */
}

def @func_8849() -> (Tensor[(4, 9, 14), float32],) {
  @func_8847() /* ty=(Tensor[(4, 9, 14), float32],) */
}

def @func_8908() -> (Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) {
  @func_8906() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(2, 16, 15), bool], Tensor[(12, 14, 3), int64], Tensor[(84), float32], Tensor[(12, 7, 480), float32]) */
}

def @func_4152(%var_4150: Tensor[(1408), int64]) -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) {
  @func_4149(%var_4150) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(1408), int64]) */
}

def @func_12083() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1866 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %1863 = @func_2643() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1864 = %1863.0;
    %1865 = @func_9749() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1864, %1865)
  };
  %1866() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_18133() -> (Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
  %1878 = fn () -> (Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) {
    %1867 = @func_9119() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool]) */;
    %1868 = @func_15906() /* ty=(Tensor[(4, 9, 14), bool],) */;
    %1869 = @func_14258() /* ty=(Tensor[(12, 14, 3), float64],) */;
    %1870 = @func_10741() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1871 = @func_8606() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float64]) */;
    %1872 = %1867.1;
    %1873 = %1868.0;
    %1874 = %1869.0;
    %1875 = %1870.0;
    %1876 = @func_16517() /* ty=Tensor[(12, 14, 3), bool] */;
    %1877 = %1871.0;
    (%1872, %1873, %1874, %1875, %1876, %1877)
  };
  %1878() /* ty=(Tensor[(4, 9, 14), float64], Tensor[(4, 9, 14), bool], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */
}

def @func_18982() -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1881 = fn () -> (Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
    %1879 = @func_16847() /* ty=Tensor[(12, 14, 3), float64] */;
    %1880 = @func_7013() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1879, %1880)
  };
  %1881() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */
}

def @func_20787() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1885 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %1882 = @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1883 = @func_7521() /* ty=Tensor[(12, 14, 3), float32] */;
    %1884 = %1882.0;
    (%1883, %1884)
  };
  %1885() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_15771() -> Tensor[(12, 14, 3), float64] {
  %1886 = @func_5184() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */;
  %1886.0
}

def @func_9439() -> Tensor[(12, 14, 3), float32] {
  @func_9437() /* ty=Tensor[(12, 14, 3), float32] */
}

def @func_6085() -> (Tensor[(1408), int64], Tensor[(11, 5, 3), float64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) {
  %1887 = @func_5818() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), int64]) */;
  %1888 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %1889 = @func_3255() /* ty=(Tensor[(12, 14, 3), float64],) */;
  %1890 = %1887.0;
  %1891 = %1888.0;
  %1892 = %1889.0;
  %1893 = @func_5634() /* ty=Tensor[(12, 14, 3), float32] */;
  (%1890, %1891, %1892, %1893)
}

def @func_6517() -> Tensor[(12, 14, 3), float64] {
  @func_6515() /* ty=Tensor[(12, 14, 3), float64] */
}

def @func_13351() -> Tensor[(4, 9, 14), bool] {
  @func_4674() /* ty=Tensor[(4, 9, 14), bool] */
}

def @func_2153() -> (Tensor[(12, 14, 3), float32],) {
  %1894 = @func_2043() /* ty=Tensor[(12, 14, 3), float64] */;
  %1895 = cast(%1894, dtype="float32") /* ty=Tensor[(12, 14, 3), float32] */;
  %1896 = asinh(%1895) /* ty=Tensor[(12, 14, 3), float32] */;
  (%1896,)
}

def @func_20048() -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16], Tensor[(12, 14, 3), float64]) {
  %1917 = fn () -> (Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16], Tensor[(12, 14, 3), float64]) {
    %1897 = @func_15868() /* ty=(bool, Tensor[(12, 14, 3), float64], Tensor[(1408), int64], Tensor[(12, 14, 3), float32]) */;
    %1898 = @func_6382() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1899 = @func_7165() /* ty=(Tensor[(12, 14, 3), bool], Tensor[(7, 14, 2), int32], Tensor[(12, 14, 3), float64]) */;
    %1900 = @func_4887() /* ty=(Tensor[(12, 14, 3), float32],) */;
    %1901 = %1897.2;
    %1902 = cast(%1901, dtype="int64") /* ty=Tensor[(1408), int64] */;
    %1903 = reshape(%1902, newshape=[1408]) /* ty=Tensor[(1408), int64] */;
    %1904 = @func_2393(%1903) /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(1408), int64], Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float64]) */;
    %1905 = @func_16223() /* ty=(Tensor[(8, 11, 16), int64],) */;
    %1906 = cast(meta[relay.Constant][57] /* ty=Tensor[(162, 4), uint16] */, dtype="uint16") /* ty=Tensor[(162, 4), uint16] */;
    %1907 = reshape(%1906, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
    %1908 = @func_5895(%1907) /* ty=(Tensor[(12, 6, 9), uint16], Tensor[(12, 14, 3), float64]) */;
    %1909 = @func_9356() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), bool]) */;
    %1910 = %1898.0;
    %1911 = %1899.0;
    %1912 = %1900.0;
    %1913 = %1904.0;
    %1914 = %1905.0;
    %1915 = %1908.0;
    %1916 = %1909.0;
    (%1901, %1910, %1911, %1912, %1913, %1914, %1915, meta[relay.Constant][57] /* ty=Tensor[(162, 4), uint16] */, %1916)
  };
  %1917() /* ty=(Tensor[(1408), int64], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), bool], Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float64], Tensor[(8, 11, 16), int64], Tensor[(12, 6, 9), uint16], Tensor[(162, 4), uint16], Tensor[(12, 14, 3), float64]) */
}

def @func_2155() -> (Tensor[(12, 14, 3), float32],) {
  @func_2153() /* ty=(Tensor[(12, 14, 3), float32],) */
}

def @func_16484() -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
  %1921 = fn () -> (Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) {
    %1918 = @func_12082() /* ty=(Tensor[(12, 14, 3), float64], Tensor[(12, 14, 3), float32]) */;
    %1919 = %1918.1;
    %1920 = @func_8753() /* ty=Tensor[(12, 14, 3), float32] */;
    (%1919, %1920)
  };
  %1921() /* ty=(Tensor[(12, 14, 3), float32], Tensor[(12, 14, 3), float32]) */
}

def @func_5663() -> Tensor[(11, 5, 3), float64] {
  %1922 = @func_3734() /* ty=(Tensor[(11, 5, 3), float64],) */;
  %1922.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen679/build/output.py", line 7799, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:50:30] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


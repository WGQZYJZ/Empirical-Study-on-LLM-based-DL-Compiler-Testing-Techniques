import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_22 = relay.var("var_22", dtype = "float32", shape = (9, 6, 8))#candidate|22|(9, 6, 8)|var|float32
uop_23 = relay.log2(var_22.astype('float32')) # shape=(9, 6, 8)
output = uop_23
output2 = uop_23
func_30 = relay.Function([var_22,], output)
mod['func_30'] = func_30
mod = relay.transform.InferType()(mod)
mutated_mod['func_30'] = func_30
mutated_mod = relay.transform.InferType()(mutated_mod)
var_31 = relay.var("var_31", dtype = "float32", shape = (9, 6, 8))#candidate|31|(9, 6, 8)|var|float32
func_30_call = mutated_mod.get_global_var('func_30')
call_32 = func_30_call(var_31)
output = call_32
func_33 = relay.Function([var_31], output)
mutated_mod['func_33'] = func_33
mutated_mod = relay.transform.InferType()(mutated_mod)
var_288 = relay.var("var_288", dtype = "float32", shape = ())#candidate|288|()|var|float32
var_289 = relay.var("var_289", dtype = "float32", shape = (12, 4, 6))#candidate|289|(12, 4, 6)|var|float32
bop_290 = relay.floor_divide(var_288.astype('float32'), var_289.astype('float32')) # shape=(12, 4, 6)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
const_307 = relay.const([-0.330182,-4.536050,3.944547,-6.088339,-5.361323,9.202204,3.882847,-3.686251,4.670676,7.219351,0.713135,-0.653722,-3.533056,5.404887,-4.435352,3.049661,-4.095050,0.993210,4.413831,-5.729410,8.821926,6.808517,-5.198651,-3.778794,-7.301414,5.544094,8.759128,-0.745865,-4.411959,2.762672,5.583466,4.110937,-9.835541,8.790191,-7.213935,6.854777,3.764695,9.242779,1.009344,7.078258,3.162044,3.070982,-4.684990,-9.311888,5.604388,-8.747961,-2.263266,-3.054022,-5.031458,5.090349,8.789905,-1.343866,8.977490,-0.839919,4.230252,-6.205428,-1.797941,7.530375,1.720143,7.801408,-8.762867,3.791599,9.879868,8.861548,6.336612,3.388051,-7.014389,7.605447,5.486318,-3.309355,5.003977,2.242475,-1.373765,-5.864227,9.942698,-2.917005,7.308232,-2.196555,0.052064,-0.571920,-5.908456,8.300187,0.216456,-3.786404,-1.653104,-0.831750,8.299961,6.411285,-4.341601,5.758479,-7.717181,6.237312,0.472039,-9.298352,-2.620608,5.154071,-2.858288,4.958306,7.230721,-1.595693,-6.659154,6.360491,8.601504,0.329327,1.995660,1.417633,-9.141061,7.694886,-3.773675,-7.991050,6.674491,-7.572958,-6.487253,0.876817,0.035282,7.584339,-3.155341,-4.244586,5.954481,-2.092246,-3.854887,-1.842915,-4.830009,0.458031,-8.528910,7.594956,3.862336,3.130116,3.811927,-0.687396,3.451598,-2.929470,-2.795444,3.346642,-8.192479,-7.820773,6.703160,4.419447,5.579025,-3.711496,-8.835648,4.565940,8.738715,4.442664,0.484075,-7.020807,8.975829,3.766393,1.754563,-6.096111,-3.242724,-2.873064,3.521587,0.260854,-0.099423,-5.405364,-8.699131,1.218414,6.480716,-0.765339,-8.105098,8.447988,-1.218089,3.573406,2.129340,9.193205,1.433660,9.880099,-0.005666,3.974714,-3.261183,4.459073,5.582224,1.071193,-3.127823,3.256405,-5.189917,-0.481920,6.716884,-2.633228,3.057440,-0.460812,1.864414,-4.266868,1.672066,5.403541,0.833076,-4.509249,6.260368,0.847876,8.203493,-1.950199,8.643020,-3.003202,-4.900987,8.790936,5.654373,-5.434687,2.970122,-9.557553,-1.030605,4.306588,-8.055413,-0.047529,4.835398,2.249313,6.556143,-5.108506,8.836484,6.635904,9.807354,8.171202,7.874188,9.547623,-4.009591,9.712958,0.813313,2.270503,-4.021487,9.230747,1.134294,-9.133818,-2.363962,-9.028447,-2.886193,-5.007650,-2.329616,-9.920054,6.227651,7.136290,6.553817,5.212930,7.704450,-8.761179,-1.421293,0.930093,2.787426,-4.921637,-0.346284,3.469461,9.079058,-7.536918,3.786222,4.619513,-6.376099,1.002132,0.903113,5.991539,4.872710,-2.711139,9.996762,0.026885,9.377971,3.791366,-0.988134,-0.502626,-3.753548,-0.764592,4.004469,-2.179077,-8.599201,1.434905,-1.893507,-1.480313,3.674618,-3.422245,-1.693827,8.570567,6.313653,4.440570,6.716672,6.554166,-2.815006,6.142946,6.859485,9.002255,9.567132,9.253329,2.808565,3.363506,-1.539880,-3.738063,-9.730263,5.427862,-8.774694,7.606702,-0.757030,6.599940,-3.457326,0.173535,-1.077404,4.173330,4.465640,-4.348275,-6.581774,1.434455,0.430029,3.314581,2.399882,1.844677,1.163865,2.936890,-0.551127,-4.705402,-0.098425,-0.457613,7.265139,-7.818821,6.529711,2.390789,6.151132,-6.828639,-9.928931,-5.098020,-9.966170,7.317676,-7.293054,-1.388479,7.491988,-7.551114,-2.171533,1.826331,-5.840803,-0.220666,-1.934646,-2.359782,0.507951,-6.188722,-4.603845,7.339304,-9.366889,8.912747,-4.837710,0.623566,-2.517630,0.806864,1.289001,-0.225702,-7.806436,0.746484,5.717481,-5.391992,-0.654393,-4.433978,1.937520,-5.181028,6.073784,7.745814,7.731366,3.908848,-8.136418,-2.657220,7.765161,4.081371,1.101295,-6.148843,-9.008569,3.736125,5.820338,-9.079125,-8.110785,3.067387,-0.935899,8.385898,9.673448,0.290777,3.854267,1.673089,9.063687,-1.866264,3.547395,7.105987,-7.071396,5.797416,-5.303138,-7.066465,-6.115941,-7.247270,-3.544155,-5.851534,9.621396,3.933623,9.604516,9.108170,-5.183739,1.050685,0.099475,2.451614,-3.687518,9.820877,-6.633545,2.416137,4.740737,9.894239,8.633059,-0.560731,-8.856598,5.050134,-8.378209,-3.622063,-3.427148,0.002921,-9.108677,9.500050,7.932312,4.545057,1.164613,-7.707535,8.320645,-6.711540,3.828630,5.677088,3.543623,1.396916,1.702183,-9.482661,9.977351,7.379084,-2.614514,-7.339120,-8.118772,-8.300617,-6.100136,-0.629944,-4.466068,-8.227721,4.691258,5.081003,-4.810702,1.548898,-4.122410,-5.475332], dtype = "float32")#candidate|307|(432,)|const|float32
call_306 = func_30_call(relay.reshape(const_307.astype('float32'), [9, 6, 8]))
call_308 = func_30_call(relay.reshape(const_307.astype('float32'), [9, 6, 8]))
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
call_309 = func_30_call(relay.reshape(call_306.astype('float32'), [9, 6, 8]))
call_310 = func_30_call(relay.reshape(call_306.astype('float32'), [9, 6, 8]))
output = relay.Tuple([bop_290,call_306,const_307,call_309,])
output2 = relay.Tuple([bop_290,call_308,const_307,call_310,])
func_311 = relay.Function([var_288,var_289,], output)
mod['func_311'] = func_311
mod = relay.transform.InferType()(mod)
var_312 = relay.var("var_312", dtype = "float32", shape = ())#candidate|312|()|var|float32
var_313 = relay.var("var_313", dtype = "float32", shape = (12, 4, 6))#candidate|313|(12, 4, 6)|var|float32
output = func_311(var_312,var_313,)
func_314 = relay.Function([var_312,var_313,], output)
mutated_mod['func_314'] = func_314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_515 = relay.var("var_515", dtype = "int32", shape = (2, 7, 1))#candidate|515|(2, 7, 1)|var|int32
var_516 = relay.var("var_516", dtype = "int32", shape = (2, 7, 5))#candidate|516|(2, 7, 5)|var|int32
bop_517 = relay.left_shift(var_515.astype('int32'), var_516.astype('int32')) # shape=(2, 7, 5)
output = bop_517
output2 = bop_517
func_527 = relay.Function([var_515,var_516,], output)
mod['func_527'] = func_527
mod = relay.transform.InferType()(mod)
var_528 = relay.var("var_528", dtype = "int32", shape = (2, 7, 1))#candidate|528|(2, 7, 1)|var|int32
var_529 = relay.var("var_529", dtype = "int32", shape = (2, 7, 5))#candidate|529|(2, 7, 5)|var|int32
output = func_527(var_528,var_529,)
func_530 = relay.Function([var_528,var_529,], output)
mutated_mod['func_530'] = func_530
mutated_mod = relay.transform.InferType()(mutated_mod)
const_640 = relay.const([[[-2,-2,-8,-3,9,6,3,5,3,-6,3,-4,2,-7,-5,-9]],[[-4,9,5,-6,10,-8,-6,-10,10,-1,-1,1,6,-10,-3,-10]],[[-9,-10,3,-1,-7,-5,-3,3,3,10,1,-7,7,10,8,8]],[[10,-4,-1,-5,5,3,-7,1,10,-3,-3,10,2,2,1,-7]],[[-6,-4,-7,9,-1,10,-9,-9,4,-2,6,7,-3,8,-8,6]],[[8,-5,1,7,-4,-1,9,2,1,10,-7,5,-7,5,-8,9]],[[1,10,-8,5,3,-5,-3,4,2,-3,-3,10,-1,-3,-5,4]]], dtype = "uint32")#candidate|640|(7, 1, 16)|const|uint32
var_641 = relay.var("var_641", dtype = "uint32", shape = (7, 12, 16))#candidate|641|(7, 12, 16)|var|uint32
bop_642 = relay.greater(const_640.astype('bool'), var_641.astype('bool')) # shape=(7, 12, 16)
uop_651 = relay.log10(var_641.astype('float32')) # shape=(7, 12, 16)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
var_668 = relay.var("var_668", dtype = "float32", shape = (432,))#candidate|668|(432,)|var|float32
call_667 = func_30_call(relay.reshape(var_668.astype('float32'), [9, 6, 8]))
call_669 = func_30_call(relay.reshape(var_668.astype('float32'), [9, 6, 8]))
uop_676 = relay.erf(bop_642.astype('float64')) # shape=(7, 12, 16)
output = relay.Tuple([uop_651,call_667,var_668,uop_676,])
output2 = relay.Tuple([uop_651,call_669,var_668,uop_676,])
func_679 = relay.Function([var_641,var_668,], output)
mod['func_679'] = func_679
mod = relay.transform.InferType()(mod)
var_680 = relay.var("var_680", dtype = "uint32", shape = (7, 12, 16))#candidate|680|(7, 12, 16)|var|uint32
var_681 = relay.var("var_681", dtype = "float32", shape = (432,))#candidate|681|(432,)|var|float32
output = func_679(var_680,var_681,)
func_682 = relay.Function([var_680,var_681,], output)
mutated_mod['func_682'] = func_682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_981 = relay.var("var_981", dtype = "int8", shape = (6, 8, 12))#candidate|981|(6, 8, 12)|var|int8
var_982 = relay.var("var_982", dtype = "int8", shape = (6, 8, 12))#candidate|982|(6, 8, 12)|var|int8
bop_983 = relay.add(var_981.astype('int8'), relay.reshape(var_982.astype('int8'), relay.shape_of(var_981))) # shape=(6, 8, 12)
output = relay.Tuple([bop_983,])
output2 = relay.Tuple([bop_983,])
func_994 = relay.Function([var_981,var_982,], output)
mod['func_994'] = func_994
mod = relay.transform.InferType()(mod)
mutated_mod['func_994'] = func_994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_994_call = mutated_mod.get_global_var('func_994')
var_996 = relay.var("var_996", dtype = "int8", shape = (6, 8, 12))#candidate|996|(6, 8, 12)|var|int8
var_997 = relay.var("var_997", dtype = "int8", shape = (6, 8, 12))#candidate|997|(6, 8, 12)|var|int8
call_995 = func_994_call(var_996,var_997,)
output = call_995
func_998 = relay.Function([var_996,var_997,], output)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1108 = relay.var("var_1108", dtype = "float32", shape = (8, 2, 10))#candidate|1108|(8, 2, 10)|var|float32
uop_1109 = relay.atan(var_1108.astype('float32')) # shape=(8, 2, 10)
bop_1112 = relay.equal(uop_1109.astype('bool'), relay.reshape(var_1108.astype('bool'), relay.shape_of(uop_1109))) # shape=(8, 2, 10)
output = bop_1112
output2 = bop_1112
func_1121 = relay.Function([var_1108,], output)
mod['func_1121'] = func_1121
mod = relay.transform.InferType()(mod)
var_1122 = relay.var("var_1122", dtype = "float32", shape = (8, 2, 10))#candidate|1122|(8, 2, 10)|var|float32
output = func_1121(var_1122)
func_1123 = relay.Function([var_1122], output)
mutated_mod['func_1123'] = func_1123
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1857 = relay.const([[[7.610009,2.851195,-3.864131,-5.179221,-4.661549,-2.425447,6.571450,8.933970],[-3.171085,9.334378,-8.021773,8.977818,-0.042646,-1.026689,4.823000,-8.595949],[3.535201,0.194659,-1.395377,7.381561,5.981998,-4.802655,8.601419,5.992953]],[[-0.490520,-6.763316,-3.697907,5.303714,-6.424324,-3.892231,-7.239708,5.056238],[-1.652306,3.437391,-7.585488,8.614787,-4.526432,1.475962,6.032783,7.746114],[9.092168,-9.748309,-0.927377,4.435469,-9.615691,-9.354580,-2.461106,-7.087778]],[[-5.659467,8.837518,-0.412993,-3.885662,-0.014210,8.420809,1.955100,6.870584],[-5.670601,-0.992265,-2.991145,4.796268,0.715547,4.598917,4.360961,-6.997951],[6.776828,3.523948,-1.877490,-6.353202,2.780139,9.284549,-4.216053,7.490758]],[[-6.767809,1.629419,1.107003,9.331406,0.426122,-7.428222,-6.593243,-3.429312],[-0.933352,-9.770163,-7.865708,8.614328,-2.441828,-5.476764,-0.644403,0.799456],[4.903927,3.270142,8.911455,-8.874004,6.630143,-2.095161,0.879260,7.175838]],[[-6.916103,8.868257,-7.379451,-7.695354,1.088738,6.693808,-9.333259,-1.972940],[-0.223724,8.719086,0.449659,-3.480007,-9.546833,-0.747178,8.050122,-2.908400],[8.423958,-9.678981,-8.813443,-4.344124,2.144566,4.145661,-4.267380,-7.049778]],[[3.192664,7.792731,3.738315,4.379407,-0.574496,3.713454,3.701796,5.153058],[4.536783,-5.469153,-7.148234,3.120265,4.996866,6.163957,8.661735,-1.819273],[7.262946,1.467959,7.183414,0.287237,-9.775131,7.289516,-1.010070,1.334951]],[[9.523978,9.699159,-8.920442,5.210369,-8.856883,-3.244262,-1.716222,-0.014412],[-2.314280,-0.663535,5.412055,4.459590,6.944662,3.015219,7.818419,2.181357],[8.851630,-7.785420,-2.418960,7.765159,-3.771835,-8.438120,-5.467343,9.739645]],[[-1.905294,-7.221508,3.394078,4.911930,-3.774283,-7.105655,6.442268,-1.551531],[-5.267942,4.758453,1.177617,2.951215,-2.131412,-4.994598,1.460258,5.064490],[-3.205721,7.047497,0.719407,-0.122919,9.080071,2.161856,-0.328911,1.058035]]], dtype = "float64")#candidate|1857|(8, 3, 8)|const|float64
uop_1858 = relay.log10(const_1857.astype('float64')) # shape=(8, 3, 8)
func_527_call = mod.get_global_var('func_527')
func_530_call = mutated_mod.get_global_var('func_530')
const_1863 = relay.const([[-8],[-8],[-2],[2],[-4],[7],[8],[4],[1],[-1],[-8],[7],[3],[-10]], dtype = "int32")#candidate|1863|(14, 1)|const|int32
var_1864 = relay.var("var_1864", dtype = "int32", shape = (70,))#candidate|1864|(70,)|var|int32
call_1862 = func_527_call(relay.reshape(const_1863.astype('int32'), [2, 7, 1]), relay.reshape(var_1864.astype('int32'), [2, 7, 5]), )
call_1865 = func_527_call(relay.reshape(const_1863.astype('int32'), [2, 7, 1]), relay.reshape(var_1864.astype('int32'), [2, 7, 5]), )
func_994_call = mod.get_global_var('func_994')
func_998_call = mutated_mod.get_global_var('func_998')
const_1877 = relay.const([-1,2,8,2,9,-9,-8,8,4,-10,6,-6,5,7,8,-6,-1,-9,-2,5,1,-8,2,-10,-9,-9,-4,-3,-6,1,-4,-7,7,4,-6,-3,-4,-5,6,-1,6,9,-6,-7,1,-8,-8,2,8,-5,6,3,-10,6,-4,10,-8,-9,1,9,-5,9,-2,9,10,8,3,-7,10,8,2,-3,6,7,8,-9,4,6,-2,10,8,-7,-9,-3,-8,2,-8,-10,-7,-2,-4,-7,3,-6,10,-7,6,-1,-10,4,5,10,3,8,7,-2,-2,-1,4,-2,-5,-3,4,-8,8,6,9,7,-4,-9,-4,3,-4,3,-4,-2,-5,-2,1,-5,3,2,-7,-4,-3,-3,-8,7,3,-9,4,-7,-6,-7,-10,-6,6,-5,-7,4,-3,-9,5,10,5,-6,1,-9,6,-4,2,9,7,1,-4,6,-3,-10,-2,-10,-10,-9,4,7,-5,6,2,7,1,5,-4,7,-7,-10,7,-9,6,7,-5,-10,7,8,-1,-3,3,-2,-1,6,5,-1,6,9,-6,-4,3,1,-9,-1,4,-5,-4,-5,5,4,-9,-2,3,-7,-8,-9,-4,-2,9,-3,9,-3,-6,-5,2,-3,-4,-4,-6,5,-3,-4,-3,9,-2,-9,2,-2,-10,9,8,-1,-7,-9,-9,9,-7,8,-1,-5,3,2,4,4,-10,-4,-7,1,3,6,-2,-3,-10,-10,9,-2,9,-8,5,-7,-8,-5,7,8,-6,9,1,-9,-2,-10,4,5,-5,6,-8,-8,3,1,9,-9,6,-5,1,-8,10,-8,-1,10,8,9,-7,2,10,2,-3,-6,-3,7,-2,-9,-4,-1,-1,-4,-4,-7,-10,3,-4,-9,5,7,-6,-2,-9,3,9,2,-2,1,9,-9,6,-9,4,-7,-3,9,-9,8,-3,5,4,1,6,-3,9,6,-1,-6,-2,6,-7,7,-5,4,-7,-9,6,6,-4,-7,-9,8,9,-7,-7,8,-9,8,1,1,2,-8,1,-2,-3,6,3,5,8,-3,-6,-8,10,-8,-9,9,-10,2,3,6,3,1,8,8,-6,10,3,-7,-6,-2,-8,8,1,9,4,-1,9,-2,8,2,8,7,2,4,1,-2,-8,8,10,5,-5,8,-10,3,-10,-1,-9,-2,2,-10,2,3,2,-1,-9,4,-5,-9,5,-1,7,3,-10,-8,1,-7,-9,10,4,-4,8,-6,-2,-7,7,2,-2,1,-2,-6,8,-3,-6,8,6,2,10,8,4,-1,-5,-4,-9,-9,-3,-3,10,8,1,-5,-8,3,-6,-1,8,1,6,2,-2,6,6,8,5,2,-2,5,6,9,10,-4,6,4,3,-7,7,-10,-3,10,4,6,-1,-7,10,8,-8,8,8,-5,-10,-5,6,-1,-6,8,3,6,-6,8,9,-6,10,2,-8,8,7,-6,-1,-1,5,6,7,1,-5,9,-9,-2,1,-7,-8,8,10,-8,8,-9,1,3,7,1,-5,5,-7,10,-8,-8,4,2,7,-7,1,10], dtype = "int8")#candidate|1877|(576,)|const|int8
call_1876 = relay.TupleGetItem(func_994_call(relay.reshape(const_1877.astype('int8'), [6, 8, 12]), relay.reshape(const_1877.astype('int8'), [6, 8, 12]), ), 0)
call_1878 = relay.TupleGetItem(func_998_call(relay.reshape(const_1877.astype('int8'), [6, 8, 12]), relay.reshape(const_1877.astype('int8'), [6, 8, 12]), ), 0)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_1883 = relay.var("var_1883", dtype = "float32", shape = ())#candidate|1883|()|var|float32
var_1884 = relay.var("var_1884", dtype = "float32", shape = (4, 72))#candidate|1884|(4, 72)|var|float32
call_1882 = relay.TupleGetItem(func_311_call(relay.reshape(var_1883.astype('float32'), []), relay.reshape(var_1884.astype('float32'), [12, 4, 6]), ), 0)
call_1885 = relay.TupleGetItem(func_314_call(relay.reshape(var_1883.astype('float32'), []), relay.reshape(var_1884.astype('float32'), [12, 4, 6]), ), 0)
output = relay.Tuple([uop_1858,call_1862,const_1863,var_1864,call_1876,const_1877,call_1882,var_1883,var_1884,])
output2 = relay.Tuple([uop_1858,call_1865,const_1863,var_1864,call_1878,const_1877,call_1885,var_1883,var_1884,])
func_1888 = relay.Function([var_1864,var_1883,var_1884,], output)
mod['func_1888'] = func_1888
mod = relay.transform.InferType()(mod)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mutated_mod.get_global_var('func_1888')
var_1890 = relay.var("var_1890", dtype = "int32", shape = (70,))#candidate|1890|(70,)|var|int32
var_1891 = relay.var("var_1891", dtype = "float32", shape = ())#candidate|1891|()|var|float32
var_1892 = relay.var("var_1892", dtype = "float32", shape = (4, 72))#candidate|1892|(4, 72)|var|float32
call_1889 = func_1888_call(var_1890,var_1891,var_1892,)
output = call_1889
func_1893 = relay.Function([var_1890,var_1891,var_1892,], output)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2131 = relay.var("var_2131", dtype = "float64", shape = (7, 16, 5))#candidate|2131|(7, 16, 5)|var|float64
var_2132 = relay.var("var_2132", dtype = "float64", shape = (7, 16, 5))#candidate|2132|(7, 16, 5)|var|float64
bop_2133 = relay.divide(var_2131.astype('float64'), relay.reshape(var_2132.astype('float64'), relay.shape_of(var_2131))) # shape=(7, 16, 5)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
var_2140 = relay.var("var_2140", dtype = "float32", shape = (432,))#candidate|2140|(432,)|var|float32
call_2139 = func_30_call(relay.reshape(var_2140.astype('float32'), [9, 6, 8]))
call_2141 = func_30_call(relay.reshape(var_2140.astype('float32'), [9, 6, 8]))
uop_2153 = relay.erf(var_2131.astype('float64')) # shape=(7, 16, 5)
output = relay.Tuple([bop_2133,call_2139,var_2140,uop_2153,])
output2 = relay.Tuple([bop_2133,call_2141,var_2140,uop_2153,])
func_2164 = relay.Function([var_2131,var_2132,var_2140,], output)
mod['func_2164'] = func_2164
mod = relay.transform.InferType()(mod)
mutated_mod['func_2164'] = func_2164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2164_call = mutated_mod.get_global_var('func_2164')
var_2166 = relay.var("var_2166", dtype = "float64", shape = (7, 16, 5))#candidate|2166|(7, 16, 5)|var|float64
var_2167 = relay.var("var_2167", dtype = "float64", shape = (7, 16, 5))#candidate|2167|(7, 16, 5)|var|float64
var_2168 = relay.var("var_2168", dtype = "float32", shape = (432,))#candidate|2168|(432,)|var|float32
call_2165 = func_2164_call(var_2166,var_2167,var_2168,)
output = call_2165
func_2169 = relay.Function([var_2166,var_2167,var_2168,], output)
mutated_mod['func_2169'] = func_2169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2387 = relay.var("var_2387", dtype = "float64", shape = (2, 14, 4))#candidate|2387|(2, 14, 4)|var|float64
var_2388 = relay.var("var_2388", dtype = "float64", shape = (2, 14, 4))#candidate|2388|(2, 14, 4)|var|float64
bop_2389 = relay.power(var_2387.astype('float64'), relay.reshape(var_2388.astype('float64'), relay.shape_of(var_2387))) # shape=(2, 14, 4)
output = bop_2389
output2 = bop_2389
func_2392 = relay.Function([var_2387,var_2388,], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
var_2393 = relay.var("var_2393", dtype = "float64", shape = (2, 14, 4))#candidate|2393|(2, 14, 4)|var|float64
var_2394 = relay.var("var_2394", dtype = "float64", shape = (2, 14, 4))#candidate|2394|(2, 14, 4)|var|float64
output = func_2392(var_2393,var_2394,)
func_2395 = relay.Function([var_2393,var_2394,], output)
mutated_mod['func_2395'] = func_2395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2608 = relay.var("var_2608", dtype = "bool", shape = (5, 2, 8))#candidate|2608|(5, 2, 8)|var|bool
const_2609 = relay.const([[[False,False,False,True,False,False,True,True],[False,True,False,True,False,False,True,True]],[[False,False,False,False,False,True,False,True],[False,True,False,True,False,True,True,False]],[[True,False,False,True,False,True,False,True],[False,False,False,False,False,True,True,False]],[[True,True,True,True,False,True,False,False],[False,False,False,True,True,True,True,False]],[[True,True,True,False,False,True,True,True],[False,True,True,False,False,True,True,True]]], dtype = "bool")#candidate|2609|(5, 2, 8)|const|bool
bop_2610 = relay.logical_and(var_2608.astype('bool'), relay.reshape(const_2609.astype('bool'), relay.shape_of(var_2608))) # shape=(5, 2, 8)
output = bop_2610
output2 = bop_2610
func_2630 = relay.Function([var_2608,], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
mutated_mod['func_2630'] = func_2630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2631 = relay.var("var_2631", dtype = "bool", shape = (5, 2, 8))#candidate|2631|(5, 2, 8)|var|bool
func_2630_call = mutated_mod.get_global_var('func_2630')
call_2632 = func_2630_call(var_2631)
output = call_2632
func_2633 = relay.Function([var_2631], output)
mutated_mod['func_2633'] = func_2633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2729 = relay.var("var_2729", dtype = "float64", shape = (12, 15, 10))#candidate|2729|(12, 15, 10)|var|float64
var_2730 = relay.var("var_2730", dtype = "float64", shape = (12, 15, 10))#candidate|2730|(12, 15, 10)|var|float64
bop_2731 = relay.floor_mod(var_2729.astype('float64'), relay.reshape(var_2730.astype('float64'), relay.shape_of(var_2729))) # shape=(12, 15, 10)
func_2392_call = mod.get_global_var('func_2392')
func_2395_call = mutated_mod.get_global_var('func_2395')
const_2737 = relay.const([4.519020,5.487390,-9.788895,-4.600810,3.080675,9.990123,-1.829515,-3.738617,-6.004581,6.133783,9.783253,-0.054076,-4.449979,-8.107066,-3.676923,-3.078964,-3.943696,-0.175243,8.460457,-1.838500,-6.468837,7.058731,-0.988378,-6.215070,4.178798,8.436805,8.340703,2.253169,2.267557,7.064564,-7.276359,-7.275284,9.315890,3.310770,4.182710,2.882042,9.092890,-8.173254,-2.452566,-1.628527,-1.162139,4.070753,-1.486179,3.147014,-9.782781,1.934027,-4.332085,-9.447801,0.713407,-8.330015,9.763726,-7.853570,6.975589,0.793640,8.372424,0.839986,6.705861,-9.395483,7.972312,-9.763462,-1.185253,-5.910771,6.941039,9.172966,-3.350649,3.034339,4.195674,1.559999,5.951049,6.903937,-0.442037,-6.134966,9.857905,5.058765,5.831480,-1.869288,-5.803671,-2.402745,2.244940,-5.439110,-2.979757,-4.155378,7.164964,-9.261238,-0.638815,-1.221745,-2.995695,-8.326636,6.713797,-4.645447,2.954390,-5.028575,-2.898852,5.730897,-0.441017,8.100254,-3.017307,2.083921,8.286941,-2.442298,9.650581,9.594991,5.177424,6.658020,1.635364,8.213628,-2.412794,-6.748088,5.801867,6.474554,4.439309,-7.773403], dtype = "float64")#candidate|2737|(112,)|const|float64
call_2736 = func_2392_call(relay.reshape(const_2737.astype('float64'), [2, 14, 4]), relay.reshape(const_2737.astype('float64'), [2, 14, 4]), )
call_2738 = func_2392_call(relay.reshape(const_2737.astype('float64'), [2, 14, 4]), relay.reshape(const_2737.astype('float64'), [2, 14, 4]), )
bop_2739 = relay.equal(bop_2731.astype('bool'), relay.reshape(var_2730.astype('bool'), relay.shape_of(bop_2731))) # shape=(12, 15, 10)
bop_2743 = relay.logical_xor(bop_2731.astype('uint16'), relay.reshape(var_2729.astype('uint16'), relay.shape_of(bop_2731))) # shape=(12, 15, 10)
output = relay.Tuple([call_2736,const_2737,bop_2739,bop_2743,])
output2 = relay.Tuple([call_2738,const_2737,bop_2739,bop_2743,])
func_2749 = relay.Function([var_2729,var_2730,], output)
mod['func_2749'] = func_2749
mod = relay.transform.InferType()(mod)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mutated_mod.get_global_var('func_2749')
var_2751 = relay.var("var_2751", dtype = "float64", shape = (12, 15, 10))#candidate|2751|(12, 15, 10)|var|float64
var_2752 = relay.var("var_2752", dtype = "float64", shape = (12, 15, 10))#candidate|2752|(12, 15, 10)|var|float64
call_2750 = func_2749_call(var_2751,var_2752,)
output = call_2750
func_2753 = relay.Function([var_2751,var_2752,], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3111 = relay.const([[[-6.116645,3.661766,-9.771802,-8.910408,-5.504585,1.286667,5.068589,-3.384290,2.165641,-5.348376,-1.241762],[4.249037,-1.487536,-1.550680,0.194058,-0.867890,1.070610,-3.584017,-5.924356,-7.099692,1.470046,7.690547],[-9.082037,-7.932053,-0.442977,1.655948,4.154974,-7.280159,2.566712,8.852785,-0.592845,-5.855034,0.573477],[5.275745,9.404456,-7.102298,4.424535,6.848021,-5.611602,-9.634468,3.467132,4.689465,-9.591112,-9.937674],[-9.436554,5.721046,7.561359,-0.234502,-9.145373,-7.069754,-9.131093,-6.787832,-4.592936,4.904867,4.885888],[6.161654,-3.297241,0.846333,-6.079559,-4.945715,8.966345,5.927703,3.959508,5.350244,1.510126,6.983394],[7.287177,-1.336420,-9.032174,-2.210740,4.888000,-1.985409,-9.597776,-7.456647,2.796144,7.652838,-0.960951],[7.988987,-5.143381,6.396931,1.525114,4.023376,-3.243496,-3.118075,-0.828840,-5.180802,1.752625,3.617696],[-7.724214,-1.958008,-2.341565,-5.875516,2.252927,-6.461443,1.796865,1.055665,-7.648709,3.517180,-9.798052],[7.448631,-8.076732,-1.117962,-3.297297,9.910051,-2.663164,-0.547767,2.880541,0.345121,7.654437,-8.532296],[-8.579312,0.544184,7.485031,7.327809,-3.188168,-7.363915,0.664794,-5.591901,-3.902241,-7.062438,-6.957145],[6.980049,-5.063808,-6.494697,-7.405063,-9.120593,-7.443385,0.231213,-5.106784,-1.684992,-3.860501,9.079855],[6.056258,6.784322,1.093705,-3.993759,4.260945,5.490806,5.692982,7.925212,-5.505579,-6.429070,9.270933],[-0.557631,-3.457972,-2.030151,0.714840,-8.273862,-4.203046,-5.984760,-9.162287,9.145773,-9.598985,0.524806]],[[-4.737687,4.258160,-9.593861,5.050113,-9.012489,3.500909,-5.123614,3.642958,4.579257,5.487030,6.509424],[6.289399,-1.731343,9.162870,4.726207,-7.664487,0.613527,-3.215981,6.094477,0.799791,-3.012525,3.754656],[6.284215,-2.078269,-7.514688,-8.553221,-7.475376,7.576793,-7.999853,9.329669,9.562505,1.372614,-2.149687],[-5.928557,3.056512,9.871293,-9.299562,6.523413,8.714765,-1.212118,9.988846,5.497321,-1.078881,-8.119582],[-2.139157,-2.100195,-7.351809,-1.779921,-8.820160,-8.415734,1.250280,4.641800,-9.358884,5.549953,-3.402163],[-1.307170,-1.632813,0.853717,-7.326942,5.409979,-7.733793,5.672013,4.285334,5.733041,-0.391055,8.477653],[8.112106,-7.168366,4.182609,7.636014,2.366564,4.846082,3.809251,3.614300,7.782921,-0.621702,-6.638566],[-3.138812,-2.234688,1.881800,4.597088,-6.295002,9.574382,7.433728,-6.814590,5.612853,-6.735552,9.381109],[0.478161,9.489243,8.316565,-7.364692,9.174742,4.789061,-1.475091,0.747542,1.615970,-9.478524,-8.504258],[-2.315007,-1.427739,-5.316533,-6.251999,0.377442,-5.605840,-8.326170,-2.998521,-2.731566,1.600229,3.489721],[-5.838167,-1.710113,-0.983894,9.943646,-3.284922,6.314928,7.416728,1.026060,6.359587,6.182147,0.542615],[1.372875,1.339250,-9.685286,3.716165,-4.307316,-4.493457,-2.630589,-5.326122,4.811480,9.601611,0.441240],[-2.733141,-0.853121,9.430903,-6.230070,-1.239726,6.440637,0.934500,-4.518418,5.933618,-3.310499,8.693919],[8.042597,-5.151506,-3.969105,7.335047,-4.115011,-6.962656,-5.817173,0.024013,8.556078,-6.155006,0.648586]],[[-6.065480,2.188764,-5.169407,6.067854,-9.990787,4.485970,8.436521,-2.020422,-6.725564,-4.664530,2.693059],[-3.525894,5.143171,-5.109793,-3.432724,5.351630,-3.372766,7.140552,0.170625,-6.521772,2.051701,-6.993823],[-3.701840,5.888010,-5.960755,6.977276,-3.255565,-9.676687,0.280612,-9.755990,-0.455564,-7.242766,-4.376285],[5.322317,-7.949455,1.482514,-2.045446,-0.520353,-2.036875,2.387801,-7.484750,-3.751789,-9.087794,-2.606206],[-7.448491,-3.188277,0.019580,5.538034,-7.692715,1.955012,-8.177371,-1.058814,-2.957374,0.480602,-5.649397],[3.878594,-3.995137,-2.214483,-5.853469,-4.068697,2.712265,5.975362,-0.321928,-1.334539,-5.348153,0.069656],[-1.450425,5.216792,7.601186,7.214930,3.084381,-1.440706,-9.343282,-5.335542,4.607294,6.064453,4.081713],[3.303323,4.765255,-9.389114,8.245801,9.612894,3.218205,2.776485,0.565499,0.109929,9.139056,-5.658725],[-8.030524,0.526774,-4.204464,-6.198420,0.282495,7.651674,4.062216,-9.471490,1.764708,-0.521633,-2.056162],[0.844381,-7.576667,-4.894645,-8.716383,5.347989,-9.170753,4.147585,-4.535589,-8.246191,5.401218,-9.178107],[-1.807703,-5.426376,-9.916185,-8.721097,-1.081281,4.764056,-8.123258,-9.855609,-2.999115,7.487987,-6.517767],[9.932190,-3.964572,2.458265,5.389458,-2.985410,-2.154508,-9.366675,4.701144,-7.654605,-0.668922,-5.222033],[4.405267,-7.199353,8.344898,-4.805127,-1.602836,-4.635594,-1.679422,-8.230006,8.474871,8.603130,6.176652],[5.610092,-2.533686,-7.795442,3.500403,-0.158500,-3.729874,-4.263298,-8.035203,7.702550,8.616255,-5.380988]]], dtype = "float32")#candidate|3111|(3, 14, 11)|const|float32
uop_3112 = relay.cosh(const_3111.astype('float32')) # shape=(3, 14, 11)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
const_3116 = relay.const([-4,4,3,-9,-7,5,-9,10,-5,2,-5,-3,-1,-5,6,4,-6,3,10,-8,-4,8,6,-3,-7,4,9,-4,6,3,-7,1,3,-5,-7,1,-7,-7,7,5,4,-7,-9,-1,10,7,9,1,2,-7,8,-2,-9,10,-8,9,6,-3,6,-10,-6,-4,-4,8,-10,7,-5,4,8,9,1,-6,-3,-4,2,5,-10,4,-1,-2,-9,10,-9,-5,8,-3,-1,8,9,-1,5,-1,-5,2,9,-9,-4,10,1,10,-1,-10,3,4,-1,5,3,2,-2,5,8,-2,3,6,9,-5,3,3,-5,-10,-6,-2,-4,8,-9,-9,-9,1,-3,5,-7,4,-6,-5,-4,7,3,-10,8,-3,10,-5,-5,8,3,1,4,9,-10,2,3,-5,-3,-3,2,-7,2,-1,8,4,-5,-3,-8,-10,1,4,3,10,4,-6,-3,-9,5,-9,-1,4,6,6,2,-4,-10,-6,-8,1,-2,-10,-8,-2,-1,5,6,10,7,-7,4,1,-10,8,-3,-1,4,4,10,-6,-6,3,-10,-3,-8,5,2,7,3,1,4,5,-3,1,-2,6,-8,10,-3,5,3,-3,-6,-6,-6,8,-9,8,-9,-9,6,9,-8,1,3,-3,6,3,6,2,8,-10,1,3,6,3,1,7,-2,-9,2,3,-7,1,-8,3,-3,5,2,-5,1,-2,1,-10,-8,8,-10,-10,-7,-10,4,-3,10,-2,-5,1,-7,8,2,1,-8,10,1,-7,-8,5,2,-8,3,5,1,4,8,-7,10,8,8,6,-7,8,-1,9,1,8,-9,4,6,9,-1,-4,-4,-9,-2,10,1,7,10,-5,-3,-5,-3,-4,6,-5,-8,8,-3,2,5,9,9,5,-1,-10,-5,-1,-5,-9,8,8,5,8,6,-5,4,-6,-1,-4,-3,-1,1,-7,6,-7,-2,-8,4,6,8,8,7,-6,-5,1,7,8,-3,-4,1,-1,10,-1,-7,-2,-8,6,-6,-4,-3,1,-6,-7,4,-5,-7,-9,8,-9,4,-10,2,10,10,-9,10,2,10,4,-5,8,-9,-6,4,-2,7,-3,-1,6,-8,6,-8,-3,-10,-10,-9,-4,5,5,-5,8,-10,10,-5,-3,-5,8,-7,-10,9,1,-8,6,7,3,-8,-6,3,10,-4,10,1,-3,-10,-5,-4,-8,-3,6,-6,4,1,2,7,1,-4,3,8,4,-10,6,7,-6,10,4,2,-2,7,-6,-8,8,-9,-7,-6,6,2,-9,8,3,7,4,5,-2,-9,-9,-9,-9,7,-5,7,-10,-3,-9,-2,9,-8,-9,-6,-5,1,-2,-10,-9,6,-1,-5,-3,-10,1,5,-1,10,7,-1,5,-8,-2,-9,-7,-5,10,-9,-10,5,3,1,2,4,-1,4,8,-2,-2,3,6,8,-10,6,8,-3,-1,4,8,-5,-6,-5,-2,-7,6,2,10,5,-8,3,-4,6,-3,-9,2,-1,4,3,3,-10,1,-10,-3,2,7,7,4,-7,6,9,1,-4,-8,-4,-8,7,-6,2,-3,1,2,1,1,-2,-5,5,-4,2,-10,10,-1,-9,5,8,-6,6,-7,3,-7,9,9,-8,6,3,-6,-4,-10,-6,4,3,-5,9,7,3,8,-4,5,8,-3,7,-3,-8,4,10,-10,-2,-1,10,-3,-2,5,10,9,1,-8,-1,1,-6,5,-5,-8,-3,-7,8,4,-5,-9,10,2,10,-2,-2,2,8,-7,-4,1,5,8,2,-5,-4,-1,-4,6,4,5,-8,6,-6,-10,-8,-8,1,-8,2,9,10,8,10,8,-1,1,-1,9,10,8,2,-2,-3,-5,6,9,-1,-1,-3,6,1,-7,-4,10,4,5,5,9,10,1,8,-5,10,-4,5,9,9,10,10,1,-9,2,-4,10,-6,3,2,7,-1,5,4,2,7,9,2,-3,-6,5,-5,7,5,-7,5,-10,-6,-4,8,4,-8,5,4,-10,-1,2,9,1,-7,-2,-4,-3,-7,1,-3,-3,7,-10,3,1,7,4,-3,10,3,4,-6,8,-4,-1,1,5,-1,8,6,-10,3,7,-10,7,10,-1,-10,2,-5,8,-6,-5,-9,2,4,-8,-7,6,5,1,7,-4,10,-1,-10,2,-4,-4,3,8,-8,-6,-5,-2,-6,-6,4,9,7,-8,9,-4,8,5,1,-1,-4,-4,1,-9,-1,-1,-6,-9,-10,-1,-9,-3,-10,10,-2,2,8,-4,4,-8,-8,-7,9,9,-3,10,5,10,-2,9,-1,-1,-7,-10,8,-3,4,3,6,-5,-4,2,10,7,2,7,6,-2,3,-3,7,9,8,9,8,4,10,-3,9,2,5,5,-7,6,9,3,7,-9,8,8,1,7,-9,-2,10,10,-3,-9,-1,2,-6,8,-9,-6,-7,2,-8,9,-7,8,7,5,2,-2,-10,-5,-1,10,9,8,2,-4,-9,10,6,-5,5,-2,-3,1,9,10,8,10,5,5,-8,-10,4,4,7,10,9,-8,-6,-4,5,-7,-3,2,6,9,-8,2,-8,-9,-6,-8,5,-7,-5,8,-6,-4,-3,-9,6,5,-7,-4,-3,-4,6,-6,-8,-1,-6,4,5,3,6,7,1,6,8,5,-6,2,10,2,5,-2,6,4,-6,9,10,4,9,9,9,-9,-4,-7,-1,2,-4,-8,10,2,-9,-6,1,10,9,5,5,2,-7,2,8,3,-8,-2,2,-2,7,10,9,5,-1,-5,6,-8,6,10,-5,6,5,2,4,-8,6,-10,-10,-5,7,9,-9,6,-6,9,-9,-5,-5,-2,2,1,-8,3,7,-10,7,-10,8,-2,-2,8,-6,-6,9,-1,7,-7,4,-4,-7,7,-6,8,1,-10,1,-4,10,-9,9,-2,-5,-1,10,-1,-2,8,-3,3,8,-7,-9,7,3,10,7,8,10,2,9,-6,-10,-8,-3,-9,2,10,-8,-5,-5,3,-7,-6,4,-9,-1,-1,-9,6,-2,3,-10,7,1,7,7,8,4,-2,-3,-9,-6,-5,-3,-7,5,-9,4,-1,10,-1,-9,-2,4,-1,-7,-3,-5,7,1,-3,5,-1,7,-4,-1,5,-5,-5,1,7,-8,-10,-9,1,3,6,5,7,-9,-1,5,2,-3,8,-3,-3,-5,4,-1,4,10,-2,-7,-8,-9,9,-7,1,-6,-3,3,-9,-8,-2,9,-3,-8,-3,5,3,2,-7,1,-6,-6,-7,4,9,1,1,9,-1,2,-2,-7,10,-7,10,-4,8,-7,2,10,-3,5,5,1,-3,-1,-1,-3,10,9,-9,-6,4,-1,5,10,-4,-6,-2,-4,2,-3,-4,6,-6,3,10,10,3,10,3,-7,-8,-8,2,5,-7,-6,3,-4,9,-4,-7,10,-8,-9,4,-9,-1,-3,9,4,6,-5,-4,-10,8,-1,-10,6,-5,10,1,2,-6,-4,2,-9,9,-9,-4,-7,5,-7,9,3,-8,-3,-2,-2,7,3,3,-8,-7,7,-6,-4,-10,-5,4,-5,3,-3,1,5,-9,-7,-2], dtype = "uint32")#candidate|3116|(1344,)|const|uint32
const_3117 = relay.const([-8.364857,3.278627,2.582062,5.498418,-9.256121,-8.067870,-0.333668,-6.311359,0.951577,-8.650159,1.024744,5.591892,7.958908,2.317789,-0.008134,3.342494,-8.026731,-3.384944,-5.886600,-1.935367,-3.720894,4.919297,-5.420771,0.126739,-2.452138,4.996959,-6.904393,9.013604,-4.007904,-4.247928,4.397647,9.350051,-8.501887,2.971584,0.286077,-0.640726,-2.397597,-1.915636,2.180538,8.425870,-5.394685,1.100537,9.554955,-0.911647,-4.207385,-2.041430,-1.665534,2.114383,6.729558,9.515712,-4.946823,3.456754,3.355560,3.871854,8.471717,-5.265364,8.638095,-7.578946,1.143122,3.832898,4.031326,2.625303,4.775512,-4.652317,-9.298538,-7.709599,0.497342,4.612635,8.555445,2.850727,5.355482,-8.119167,-5.703276,6.838634,5.250848,6.927645,-8.467916,-7.786311,8.694016,8.022722,3.450178,-1.887322,1.913026,6.601884,-1.532177,2.606084,9.666209,3.473250,-7.730527,6.922982,0.060562,-9.512164,8.528299,7.077010,2.714406,-6.886930,-9.919041,-4.912307,9.976278,1.759392,-8.506257,4.569716,-9.302387,9.760120,-5.652389,9.856753,1.828696,2.184474,-0.261801,1.907842,2.125357,-8.404182,-1.033732,5.652204,0.103660,-4.085350,4.130633,8.633225,-6.397484,-2.386217,7.541380,-8.744830,0.493024,5.441022,-2.817796,-2.631227,3.493417,-5.809135,8.437868,8.041653,-7.862891,-9.211914,4.067062,1.908937,8.123798,-4.456205,6.032840,9.454284,4.414182,7.059157,-1.485175,5.933279,-1.897993,9.995846,-0.921746,-8.937337,-8.499369,-5.633351,-9.234669,0.813276,-6.178789,-1.704604,-3.876829,-5.016919,3.210965,-9.713662,0.376530,3.141358,9.121169,7.303883,9.878613,-6.174712,6.388614,0.434593,-1.685599,0.628423,1.861200,4.522762,0.018567,0.325083,7.443588,-4.444404,6.927129,-4.287726,1.213237,-2.922015,-2.477390,-4.994820,-4.621666,3.657516,0.570037,5.463578,8.831705,-1.707823,-6.504271,9.309957,8.313575,7.019151,4.043488,5.871889,3.275875,1.845544,-4.591891,9.705236,1.289041,-7.518620,6.866979,9.102694,-2.373335,-4.795909,6.689552,-2.455013,4.264230,-4.137881,1.180949,8.671087,4.549696,-2.875580,8.354488,-5.611065,9.010506,8.012838,-6.068861,2.773242,-3.289713,-8.827949,8.693572,4.215899,-9.161312,2.193609,3.125188,-1.073439,5.494784,3.562727,2.861784,0.563906,-3.794650,2.943904,-1.319083,9.833944,-1.737624,-2.962137,-7.246617,8.280668,0.199773,-3.337327,3.993678,-9.166759,-0.660513,9.881087,4.687228,-1.361787,0.641421,2.172267,-2.222573,4.698784,-6.661008,-2.683266,3.003273,1.592426,-3.014410,4.161072,-7.821336,-4.177909,5.265743,-1.524345,-2.797643,-0.675982,3.643290,6.602746,-0.315750,-9.093066,5.114949,7.969158,-3.880028,4.492236,4.779218,9.546861,-8.671940,-2.665428,1.534340,2.525109,9.908733,-5.991309,6.094770,-3.870421,-2.214696,-7.176800,9.173096,-2.181912,-8.727886,-2.750980,-1.003321,7.531325,3.759333,7.894438,6.832756,-3.973308,-3.069681,7.584282,5.340414,-7.668808,-3.850034,1.781192,-7.920818,-7.073315,3.860885,-1.286091,-8.841544,4.191236,3.328483,-6.954872,5.773514,8.231659,4.897554,5.562424,-6.055929,-9.642363,-1.682045,-5.851310,6.388652,4.367002,4.800312,5.460734,7.469778,0.129117,1.818840,8.825406,1.693810,-2.740324,5.023396,7.801604,3.475387,4.939368,1.241610,6.866450,-5.834298,0.600491,-0.084536,0.525848,4.531515,4.900097,-8.837189,4.787798,0.248457,1.918521,6.652805,6.669720,-3.466818,-6.047307,-7.862476,7.715783,-0.008865,7.476616,5.490261,4.439148,6.260989,7.141598,3.090083,1.829589,-8.394322,-0.594975,9.087605,4.686161,-2.520641,6.882182,5.924171,5.902036,-4.819429,-1.053903,0.398569,-4.657964,-8.477036,-7.927463,1.893044,3.881356,-7.679102,6.934513,7.013382,-8.851412,0.967881,-4.457337,-9.761523,-6.510180,-6.716424,-8.746536,-6.119426,1.228822,-8.068413,5.983823,6.034297,1.211758,-4.147516,-4.354217,7.487602,0.505732,-9.733997,9.113003,3.275662,9.666239,7.399005,6.293577,8.202646,-6.809014,-3.675331,8.517587,-1.375045,-0.820214,0.585127,-6.320986,1.314495,2.567747,-3.701602,-8.123684,8.178316,5.688733,2.335008,-5.383790,3.009175,-9.125322,-8.749473,-6.281271,-5.624293,2.447627,9.479895,7.956637,4.935997,-1.741624,9.668092,5.354530,0.518733,1.599719,3.018877,5.360722,9.300493,1.509440,4.379005,-7.316123,-8.331981,0.486174,-5.788072,-6.777273], dtype = "float32")#candidate|3117|(432,)|const|float32
call_3115 = relay.TupleGetItem(func_679_call(relay.reshape(const_3116.astype('uint32'), [7, 12, 16]), relay.reshape(const_3117.astype('float32'), [432,]), ), 1)
call_3118 = relay.TupleGetItem(func_682_call(relay.reshape(const_3116.astype('uint32'), [7, 12, 16]), relay.reshape(const_3117.astype('float32'), [432,]), ), 1)
uop_3121 = relay.atan(uop_3112.astype('float32')) # shape=(3, 14, 11)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_3133 = relay.var("var_3133", dtype = "float32", shape = ())#candidate|3133|()|var|float32
const_3134 = relay.const([6.833042,7.970539,-7.490186,2.184600,-9.927419,7.779592,6.826987,-9.260586,7.218715,-8.457278,-2.453850,2.332919,-6.922908,-6.592713,-5.126327,-6.901884,1.225963,3.421070,3.783658,-8.181594,-1.994115,5.746520,-2.464445,-7.559430,-9.094610,7.242012,7.770377,6.764221,2.652990,5.568862,-5.420549,9.021439,4.224815,4.306543,-4.522561,-4.740247,0.215119,-0.448807,-7.759327,-8.500609,3.093190,6.301463,-3.464187,-5.311102,-8.546050,-5.019788,-6.670648,8.017969,-7.617270,-1.371717,-9.183093,-2.508704,-8.231207,5.493017,7.513369,2.217398,-5.173051,7.467448,-4.864911,-6.288639,8.309740,6.748883,-7.064854,-8.145493,-1.961625,1.774536,1.374344,-3.349421,-9.766533,-8.699514,6.589386,0.684965,9.231251,0.140281,-3.496613,-0.918944,-8.111225,9.975180,-8.752941,4.337025,-8.942076,0.872391,-6.894627,-3.887619,-9.455647,-3.113740,-2.216811,4.888736,-4.773715,4.759556,-4.242442,5.257618,-0.987973,2.171358,-2.153685,4.691822,-1.728848,-3.126223,-9.378860,1.405323,-9.613869,6.218350,8.791576,-8.316995,8.496964,8.863597,1.345582,-8.469992,1.736084,3.482088,-8.626456,0.414155,5.569371,-3.530549,-3.358631,-2.957566,0.330739,9.735037,-4.897370,1.808370,-0.042548,4.999578,2.974891,0.724969,-2.291954,-9.439646,0.655920,2.237159,4.107115,-9.674768,8.521419,-4.032043,-8.634776,-5.020630,8.211719,-2.375609,-7.808110,-2.939902,3.294595,-3.619823,-0.155048,3.805312,-5.438151,-2.692333,-7.347915,9.460780,-2.537814,-9.284841,-2.972583,2.931137,-0.455408,8.839514,-0.303459,-9.005090,9.916740,8.406427,2.654717,9.539926,6.752544,-7.835719,-0.266300,6.189037,5.604664,-9.803163,-1.661031,-6.846134,2.042197,1.884174,9.122355,-5.360534,3.540084,-0.329310,-7.887177,-5.733544,2.364029,9.552548,2.282149,-2.586328,-8.002778,-6.714157,9.190975,-0.265041,-3.578222,-5.656965,4.360471,-4.631046,-3.847398,-9.198906,-3.247013,-6.161854,9.519415,3.300034,-8.150751,9.559500,-2.724274,-7.261342,-9.789590,7.024797,-1.937329,-1.974063,-6.754319,-3.219745,5.142956,1.554761,-0.921600,-3.137094,7.847298,-1.922843,0.859272,-5.322530,0.830828,0.026903,3.665600,-5.115074,-4.847362,-6.827454,7.972361,5.946787,2.121071,-4.018490,-9.863278,6.814475,-0.983572,-8.453105,4.177359,-7.754214,2.221120,9.355653,-6.381430,-1.289807,-5.347785,9.550280,-3.613665,6.577007,6.190438,4.016066,-5.121241,6.601220,-6.430457,-2.677331,-7.080119,-7.513531,3.472912,7.773797,7.306718,-4.739229,-9.991724,6.360704,8.628426,-0.102496,-1.019110,-8.760276,-7.523689,5.820977,6.184052,-8.305074,-4.544479,7.112607,-6.978924,4.248976,4.923632,-0.980080,6.287356,-1.278109,-8.740114,7.912618,-3.990069,0.923689,2.998845,5.954556,-8.433543,1.357536,-3.797730,-0.329081,1.159698,-9.517617,-9.178781,-6.317287,-2.852838,-6.231599,3.655686,9.582869,1.200261,-4.739616,5.783065,-3.861402,9.029745,8.015668], dtype = "float32")#candidate|3134|(288,)|const|float32
call_3132 = relay.TupleGetItem(func_311_call(relay.reshape(var_3133.astype('float32'), []), relay.reshape(const_3134.astype('float32'), [12, 4, 6]), ), 1)
call_3135 = relay.TupleGetItem(func_314_call(relay.reshape(var_3133.astype('float32'), []), relay.reshape(const_3134.astype('float32'), [12, 4, 6]), ), 1)
uop_3143 = relay.sinh(uop_3121.astype('float64')) # shape=(3, 14, 11)
bop_3145 = relay.left_shift(uop_3121.astype('int8'), relay.reshape(uop_3112.astype('int8'), relay.shape_of(uop_3121))) # shape=(3, 14, 11)
output = relay.Tuple([call_3115,const_3116,const_3117,call_3132,var_3133,const_3134,uop_3143,bop_3145,])
output2 = relay.Tuple([call_3118,const_3116,const_3117,call_3135,var_3133,const_3134,uop_3143,bop_3145,])
func_3167 = relay.Function([var_3133,], output)
mod['func_3167'] = func_3167
mod = relay.transform.InferType()(mod)
mutated_mod['func_3167'] = func_3167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3168 = relay.var("var_3168", dtype = "float32", shape = ())#candidate|3168|()|var|float32
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3169 = func_3167_call(var_3168)
output = call_3169
func_3170 = relay.Function([var_3168], output)
mutated_mod['func_3170'] = func_3170
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3516 = relay.const(-3.526180, dtype = "float64")#candidate|3516|()|const|float64
var_3517 = relay.var("var_3517", dtype = "float64", shape = (9, 1, 11))#candidate|3517|(9, 1, 11)|var|float64
bop_3518 = relay.subtract(const_3516.astype('float64'), var_3517.astype('float64')) # shape=(9, 1, 11)
func_679_call = mod.get_global_var('func_679')
func_682_call = mutated_mod.get_global_var('func_682')
var_3522 = relay.var("var_3522", dtype = "uint32", shape = (1344,))#candidate|3522|(1344,)|var|uint32
var_3523 = relay.var("var_3523", dtype = "float32", shape = (432,))#candidate|3523|(432,)|var|float32
call_3521 = relay.TupleGetItem(func_679_call(relay.reshape(var_3522.astype('uint32'), [7, 12, 16]), relay.reshape(var_3523.astype('float32'), [432,]), ), 3)
call_3524 = relay.TupleGetItem(func_682_call(relay.reshape(var_3522.astype('uint32'), [7, 12, 16]), relay.reshape(var_3523.astype('float32'), [432,]), ), 3)
output = relay.Tuple([bop_3518,call_3521,var_3522,var_3523,])
output2 = relay.Tuple([bop_3518,call_3524,var_3522,var_3523,])
func_3541 = relay.Function([var_3517,var_3522,var_3523,], output)
mod['func_3541'] = func_3541
mod = relay.transform.InferType()(mod)
var_3542 = relay.var("var_3542", dtype = "float64", shape = (9, 1, 11))#candidate|3542|(9, 1, 11)|var|float64
var_3543 = relay.var("var_3543", dtype = "uint32", shape = (1344,))#candidate|3543|(1344,)|var|uint32
var_3544 = relay.var("var_3544", dtype = "float32", shape = (432,))#candidate|3544|(432,)|var|float32
output = func_3541(var_3542,var_3543,var_3544,)
func_3545 = relay.Function([var_3542,var_3543,var_3544,], output)
mutated_mod['func_3545'] = func_3545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3567 = relay.var("var_3567", dtype = "float64", shape = (13, 8, 12))#candidate|3567|(13, 8, 12)|var|float64
uop_3568 = relay.tan(var_3567.astype('float64')) # shape=(13, 8, 12)
bop_3576 = relay.less(uop_3568.astype('bool'), relay.reshape(var_3567.astype('bool'), relay.shape_of(uop_3568))) # shape=(13, 8, 12)
bop_3581 = relay.multiply(uop_3568.astype('int32'), relay.reshape(bop_3576.astype('int32'), relay.shape_of(uop_3568))) # shape=(13, 8, 12)
uop_3587 = relay.cosh(var_3567.astype('float64')) # shape=(13, 8, 12)
func_527_call = mod.get_global_var('func_527')
func_530_call = mutated_mod.get_global_var('func_530')
var_3590 = relay.var("var_3590", dtype = "int32", shape = (14,))#candidate|3590|(14,)|var|int32
var_3591 = relay.var("var_3591", dtype = "int32", shape = (70,))#candidate|3591|(70,)|var|int32
call_3589 = func_527_call(relay.reshape(var_3590.astype('int32'), [2, 7, 1]), relay.reshape(var_3591.astype('int32'), [2, 7, 5]), )
call_3592 = func_527_call(relay.reshape(var_3590.astype('int32'), [2, 7, 1]), relay.reshape(var_3591.astype('int32'), [2, 7, 5]), )
output = relay.Tuple([bop_3581,uop_3587,call_3589,var_3590,var_3591,])
output2 = relay.Tuple([bop_3581,uop_3587,call_3592,var_3590,var_3591,])
func_3593 = relay.Function([var_3567,var_3590,var_3591,], output)
mod['func_3593'] = func_3593
mod = relay.transform.InferType()(mod)
var_3594 = relay.var("var_3594", dtype = "float64", shape = (13, 8, 12))#candidate|3594|(13, 8, 12)|var|float64
var_3595 = relay.var("var_3595", dtype = "int32", shape = (14,))#candidate|3595|(14,)|var|int32
var_3596 = relay.var("var_3596", dtype = "int32", shape = (70,))#candidate|3596|(70,)|var|int32
output = func_3593(var_3594,var_3595,var_3596,)
func_3597 = relay.Function([var_3594,var_3595,var_3596,], output)
mutated_mod['func_3597'] = func_3597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3658 = relay.var("var_3658", dtype = "float32", shape = (9, 3, 7))#candidate|3658|(9, 3, 7)|var|float32
uop_3659 = relay.sqrt(var_3658.astype('float32')) # shape=(9, 3, 7)
func_2392_call = mod.get_global_var('func_2392')
func_2395_call = mutated_mod.get_global_var('func_2395')
var_3689 = relay.var("var_3689", dtype = "float64", shape = (2, 56))#candidate|3689|(2, 56)|var|float64
call_3688 = func_2392_call(relay.reshape(var_3689.astype('float64'), [2, 14, 4]), relay.reshape(var_3689.astype('float64'), [2, 14, 4]), )
call_3690 = func_2392_call(relay.reshape(var_3689.astype('float64'), [2, 14, 4]), relay.reshape(var_3689.astype('float64'), [2, 14, 4]), )
uop_3712 = relay.cos(var_3689.astype('float32')) # shape=(2, 56)
output = relay.Tuple([uop_3659,call_3688,uop_3712,])
output2 = relay.Tuple([uop_3659,call_3690,uop_3712,])
func_3714 = relay.Function([var_3658,var_3689,], output)
mod['func_3714'] = func_3714
mod = relay.transform.InferType()(mod)
var_3715 = relay.var("var_3715", dtype = "float32", shape = (9, 3, 7))#candidate|3715|(9, 3, 7)|var|float32
var_3716 = relay.var("var_3716", dtype = "float64", shape = (2, 56))#candidate|3716|(2, 56)|var|float64
output = func_3714(var_3715,var_3716,)
func_3717 = relay.Function([var_3715,var_3716,], output)
mutated_mod['func_3717'] = func_3717
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3773 = relay.const([[[7.303867,-9.706178,1.868830,5.794844,2.732012,-5.084507,-3.508566,9.614058,-8.530418,-8.015077],[7.753601,-9.745120,6.802694,2.522437,3.399607,-5.617509,8.284672,-6.186967,-3.937365,0.056105],[7.036065,-1.242676,8.259338,-3.929087,4.439322,-1.632085,-4.268156,3.289386,-0.458883,5.357389],[1.971116,-1.642650,9.333375,3.556993,-3.444649,4.291654,-3.172678,0.683710,8.900479,8.389412],[-0.902557,5.951408,7.758995,-6.125660,4.455740,2.130752,-8.527726,-0.057470,-7.018226,9.201885],[-6.330832,-0.528640,-8.673116,-4.893913,-2.629555,-7.273133,-7.779184,0.373140,-2.801134,0.209130],[9.943184,-5.743188,-9.176545,9.598062,7.076622,9.330670,-2.871944,-7.999001,2.442639,-7.295784],[0.647632,-7.013780,8.959803,1.823382,-9.450543,3.788093,5.824576,5.805317,-7.714838,-4.707677],[6.085739,6.243678,-5.531508,-1.601979,0.759824,0.350290,-3.130010,-6.141825,2.662245,8.474152],[-6.561770,0.856304,8.410353,2.310343,-3.539821,7.682867,6.579239,5.107239,-2.987453,9.246015],[-4.086128,-5.269598,-0.139703,-8.116440,-8.234477,9.200729,1.585300,-4.666976,7.977033,-3.363493],[-4.350915,1.284100,9.092774,7.726498,5.160541,5.434409,3.814814,-3.227490,-5.144597,7.388482],[-8.525638,9.813602,8.688637,-7.561489,4.992904,-6.311440,-2.365939,8.127479,-5.755436,-7.532617],[3.553676,-6.610937,2.403162,-2.903476,7.201490,0.221891,1.460626,1.030259,-4.058872,5.323136]],[[9.575938,2.588304,-4.828144,7.095084,4.585555,-5.116039,3.974032,0.493679,0.391662,-0.452817],[9.970617,-0.755203,-7.209308,-7.109968,-8.732110,-6.500895,4.681521,7.018841,-9.700281,5.632016],[-9.019660,-0.682172,-9.573339,5.484440,0.199412,-2.599698,9.269652,6.866703,1.352930,-4.844402],[-0.251485,2.387079,2.569673,8.654944,8.625787,3.301964,-4.278701,2.108421,-8.876041,-4.596049],[-7.255899,-9.492470,6.775892,6.835248,0.556426,-9.673821,-6.817678,-2.198472,6.655808,9.841024],[-8.976222,-4.957315,-5.563564,0.002122,-5.832875,-8.078063,-8.077917,-3.214364,9.891582,-8.596109],[-7.685920,-3.429395,-4.068164,-8.661773,-6.683365,-9.879276,-9.779007,9.724111,-1.575012,1.374868],[-5.370241,0.894579,6.289126,-0.966587,9.919632,0.441425,-2.667872,-4.239114,-7.849093,-5.232748],[-6.491261,3.377576,1.548907,0.084150,2.690892,4.113521,0.824726,0.345836,-6.827397,8.400322],[-9.079525,6.200312,-2.148532,-4.567401,-0.656420,0.481172,9.901283,-3.116759,4.006887,5.065044],[-2.425119,-0.753953,7.594856,-3.698859,5.786947,-5.596212,2.955125,-5.688656,8.772776,-1.384908],[6.118661,9.243203,0.656012,-3.778400,8.570740,8.338916,-6.020296,9.024824,6.768364,6.988273],[3.598481,3.554567,-7.364136,-3.015169,-5.106475,2.898094,-4.343390,-6.891290,-1.496334,-8.370481],[-9.487831,-6.850255,1.296843,1.452464,2.232396,-8.353445,-8.061532,8.251968,5.203641,-7.816750]],[[5.143140,-5.342998,-5.319126,1.186711,0.024362,0.204544,9.344991,-7.523486,8.881909,-4.813750],[-1.640623,-9.296040,-8.193183,3.793749,0.850419,8.956047,-1.747773,0.913068,-1.618972,0.205123],[-5.929362,-3.047055,-1.106402,3.859145,-8.251082,3.687499,-8.921664,0.553011,1.772090,-4.573774],[-0.553430,3.517067,0.130520,-5.321163,2.069865,6.400623,-9.921713,-8.049526,-8.604296,-4.806762],[1.173579,-6.606695,8.080685,-5.215143,-2.197945,-0.040311,-1.362822,7.336363,-0.065857,2.957668],[-2.100769,1.871693,-7.369838,7.079094,3.916551,5.451946,0.172530,-5.206901,0.054800,-0.125674],[-6.564682,7.140796,-6.146067,-9.289557,-1.150118,5.286005,0.731512,8.931311,-7.689466,-7.032067],[-9.229702,-4.204224,9.332244,8.329153,0.927870,9.610801,-8.140634,-1.764405,9.052496,8.062069],[-0.455386,-6.414586,1.977281,-5.338773,3.180147,-3.366651,-8.135662,3.245156,6.288255,9.581378],[-5.946532,-0.913028,9.448575,-6.485163,-1.532918,-2.871544,-3.461849,-1.349724,-8.833965,8.031909],[9.916268,5.565983,-1.950567,-4.250887,0.357616,-0.209262,-5.772506,-4.509147,2.617479,-6.765190],[-3.939558,-3.222391,-2.093031,2.871985,1.833069,-3.328976,-4.063600,3.526611,-8.286750,-1.919266],[6.448526,-4.023267,-8.644491,6.347099,2.186996,5.277863,-3.898995,-2.191245,-5.537368,1.931963],[-3.195878,-9.374011,9.724904,3.079705,5.242517,-7.330883,-1.571812,-2.407981,4.764952,-8.983592]],[[-7.032778,9.778491,4.442484,3.510860,7.591452,-4.404920,-3.139543,-8.671728,-7.376159,3.292403],[8.113833,-1.542048,-3.550243,-6.984838,-3.433659,-1.960421,-4.548648,4.902445,4.518764,6.416250],[6.186068,-7.547075,8.122374,1.752668,-6.808690,4.343523,-1.043496,3.849383,8.868797,7.844258],[-3.286292,-5.187921,7.933212,4.796491,-8.797134,6.575561,-7.198472,0.964038,-7.924150,1.826022],[1.344547,-8.632241,-0.242957,9.637778,-8.609199,6.909061,-4.968591,8.387884,2.858854,5.956620],[-7.600308,5.930740,-1.405045,-6.063491,1.117637,-6.203054,-4.922247,2.222009,-1.887258,-6.190016],[6.837938,-5.614182,9.830249,4.114382,-0.900789,-6.959691,2.412150,9.112330,-0.284562,-6.356256],[9.539458,9.203924,0.392438,-6.275712,7.327729,-6.083449,-8.853152,-2.574324,1.045023,-6.161522],[-3.471834,-4.199809,-1.720125,-0.547212,3.749406,-3.213104,2.033132,-7.778740,-6.266215,-9.438907],[-7.623171,-3.965189,4.598604,-9.752389,-2.548481,-9.312230,-9.278014,-1.321120,-2.283314,4.148574],[1.762804,-6.819202,6.781189,-2.418134,1.755115,1.951124,9.956754,-6.902527,9.413495,8.654316],[0.360454,-0.830554,-4.903851,-4.044481,7.783810,-3.806816,-5.824306,8.634024,-8.414868,1.158947],[7.100751,7.997434,0.595035,4.865691,-2.515104,-5.243336,3.987102,0.592004,-7.788049,-4.452369],[-4.645032,-6.929093,-9.977486,-9.255832,5.226635,-6.472871,1.130004,-1.621234,-7.310786,8.970341]],[[-8.079818,-3.253033,-7.518823,-7.026434,-1.069457,7.669560,6.870572,2.393842,0.566260,-3.312072],[7.116720,4.319616,-0.806418,7.107788,-6.958169,-6.792145,2.737058,-0.209167,-6.975374,-9.982307],[3.881622,7.307105,3.234333,-6.939793,5.919440,-5.362186,-8.761633,9.456255,4.000606,0.144963],[6.149163,-1.965195,-1.919980,-3.554785,7.709898,4.165743,-7.512408,-4.492981,2.741924,4.813828],[8.465855,-3.158178,2.027130,0.107863,-8.257204,-2.359352,-9.806998,-3.908256,8.602938,3.117494],[6.523617,-9.524982,-2.244200,-1.707027,2.156210,-4.026286,5.206193,-0.968742,-9.642707,0.769024],[-7.136509,-6.289546,-5.671360,-7.305068,1.680877,8.895822,-5.306374,7.312766,-9.713843,9.056335],[9.910479,-9.311456,-4.560846,6.434647,-6.722738,6.437828,8.411627,8.587612,3.306779,4.397452],[-1.420530,2.424526,-6.117611,4.188003,-8.500357,1.559298,-5.487543,-0.310939,-9.335043,7.702231],[-9.866012,-1.045296,-1.265527,-6.408034,0.634849,-3.701440,-7.879037,-0.287320,-7.312540,1.023122],[-9.558868,-5.863229,-8.005231,1.833038,9.392638,-2.227101,-9.666029,3.461146,-9.071895,-9.418006],[2.461647,7.531636,-2.436212,3.990857,4.875023,-1.552616,9.984256,-4.089137,3.199355,-8.024744],[-7.122322,7.746565,7.378343,0.956513,-7.436684,9.680942,3.724622,3.057198,3.504586,-9.277075],[0.222088,-3.022904,-4.921003,-3.980200,6.542012,-7.928013,8.524058,-5.711260,-7.868385,6.025387]],[[2.454983,-1.906119,5.056766,-8.528736,-9.480710,-2.049644,0.213416,-7.429687,7.801211,-6.311256],[-4.427707,5.670336,-2.764951,-8.279299,6.471372,5.839683,1.744078,5.392516,0.222041,9.551896],[3.041332,0.031242,-3.938094,-4.202970,-6.436546,-0.864429,6.755409,7.856691,0.516553,-0.903329],[6.418470,0.408978,9.728335,3.319679,8.498946,2.170974,-7.175486,0.541878,-9.034641,2.636325],[-6.486998,5.160067,6.271509,6.653630,7.876207,9.683658,3.223471,6.773268,-6.691408,8.268246],[7.826758,-2.868549,0.539954,-7.595312,4.337914,7.897405,-4.186739,2.477134,8.308785,-5.518373],[-2.492440,2.909501,3.261612,-2.437044,9.182709,7.760776,-0.016863,3.114769,2.270393,-9.149048],[3.054198,0.328633,-4.755522,2.023703,9.585756,-1.443789,0.939626,-4.995383,-4.135147,-3.130987],[-6.490690,-6.000277,9.108496,0.466566,-6.304367,1.656572,5.110182,6.559620,8.219140,4.635472],[-4.682111,-5.189795,2.613018,-0.754357,-6.423600,0.023125,-1.834159,7.788712,0.667711,1.475464],[-8.867648,5.672590,4.222554,-0.733860,9.265041,1.097695,9.594077,-1.591756,-0.689047,1.543300],[7.184132,-1.130084,-4.583802,-5.868605,-4.922680,5.824615,-9.466728,-1.061442,8.920522,3.301610],[-5.350637,6.071603,-7.551791,-3.365009,-8.556842,6.179591,-4.607101,-5.311719,-9.193268,3.616897],[-3.377441,0.454275,3.225497,-6.885170,-2.882483,-0.823865,-0.735847,8.769231,5.172749,-9.637876]],[[5.866843,6.389055,4.241232,-4.274454,-2.532248,-7.740887,0.979439,-2.593913,9.240220,5.305150],[-5.836672,-0.029317,4.080994,9.622965,0.682801,1.337926,-2.973667,-8.589998,-4.601373,9.404072],[-3.704655,2.377264,0.968913,7.716041,-1.941733,0.706059,-6.033024,2.624933,2.345388,-0.258437],[-6.218638,2.111959,-0.493609,-0.507823,-5.879230,-1.819101,5.543654,-3.184099,3.692370,7.055690],[3.966447,-2.349413,-2.814860,8.810804,-2.348808,-1.154550,2.686062,0.675981,-3.999589,-8.091195],[8.540288,1.560952,-1.689767,-1.685257,8.912769,8.022310,-5.532496,-8.798939,-1.138045,-8.102172],[6.413469,7.269352,-1.549414,8.798033,2.187007,5.938012,-7.558286,1.601196,1.939000,-1.100432],[-4.913131,1.857173,9.061707,5.890436,5.236614,-1.029410,5.957056,-5.378691,4.327730,-3.354244],[0.557035,7.761953,-8.932657,0.330809,-8.602967,7.868214,7.159922,3.055190,-6.754751,-8.794617],[-8.481879,8.272779,4.029383,6.603156,5.256110,8.242204,-2.917989,-8.298232,1.814697,-2.758468],[6.421859,-0.323901,-2.314308,6.464192,0.210989,-3.088302,-6.785991,9.690361,3.173089,-3.246123],[-9.613669,-7.473893,4.932356,2.392619,-1.212377,-2.290439,4.048355,-0.285610,9.302777,7.700549],[-6.088454,-3.645318,4.000968,-9.782505,5.748492,4.427493,-5.326735,-7.933241,-0.170700,-3.998335],[4.913425,-3.257327,-9.927920,-3.051070,-3.313945,-0.263158,2.869008,8.736734,-1.576008,-1.270543]]], dtype = "float32")#candidate|3773|(7, 14, 10)|const|float32
var_3774 = relay.var("var_3774", dtype = "float32", shape = (7, 14, 10))#candidate|3774|(7, 14, 10)|var|float32
bop_3775 = relay.floor_divide(const_3773.astype('float32'), relay.reshape(var_3774.astype('float32'), relay.shape_of(const_3773))) # shape=(7, 14, 10)
output = relay.Tuple([bop_3775,])
output2 = relay.Tuple([bop_3775,])
func_3781 = relay.Function([var_3774,], output)
mod['func_3781'] = func_3781
mod = relay.transform.InferType()(mod)
mutated_mod['func_3781'] = func_3781
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3782 = relay.var("var_3782", dtype = "float32", shape = (7, 14, 10))#candidate|3782|(7, 14, 10)|var|float32
func_3781_call = mutated_mod.get_global_var('func_3781')
call_3783 = func_3781_call(var_3782)
output = call_3783
func_3784 = relay.Function([var_3782], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4057 = relay.var("var_4057", dtype = "int32", shape = ())#candidate|4057|()|var|int32
var_4058 = relay.var("var_4058", dtype = "int32", shape = (6, 16, 11))#candidate|4058|(6, 16, 11)|var|int32
bop_4059 = relay.less_equal(var_4057.astype('bool'), var_4058.astype('bool')) # shape=(6, 16, 11)
output = relay.Tuple([bop_4059,])
output2 = relay.Tuple([bop_4059,])
func_4081 = relay.Function([var_4057,var_4058,], output)
mod['func_4081'] = func_4081
mod = relay.transform.InferType()(mod)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4081_call = mutated_mod.get_global_var('func_4081')
var_4083 = relay.var("var_4083", dtype = "int32", shape = ())#candidate|4083|()|var|int32
var_4084 = relay.var("var_4084", dtype = "int32", shape = (6, 16, 11))#candidate|4084|(6, 16, 11)|var|int32
call_4082 = func_4081_call(var_4083,var_4084,)
output = call_4082
func_4085 = relay.Function([var_4083,var_4084,], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4133 = relay.const([[[False,False,True,False],[True,False,False,False],[True,True,True,False],[False,False,True,False],[False,True,False,False],[True,True,False,True],[False,False,False,False],[True,False,False,False],[False,False,False,True],[False,False,False,False],[False,True,False,False],[False,False,True,False],[True,True,False,False],[False,False,False,False]],[[False,False,True,False],[False,True,False,True],[True,False,False,False],[False,False,False,False],[False,False,True,False],[False,False,False,True],[True,False,False,False],[False,False,False,True],[False,True,True,True],[True,True,False,False],[True,False,False,True],[True,False,False,True],[True,True,True,True],[True,True,True,False]],[[True,True,False,True],[True,True,False,True],[False,True,False,True],[False,False,False,True],[True,False,True,False],[True,True,True,False],[False,False,True,True],[True,False,True,False],[True,False,True,False],[True,False,False,True],[True,False,True,False],[True,True,True,False],[True,False,False,False],[True,True,False,True]],[[True,False,False,False],[False,False,False,False],[False,True,False,True],[True,False,False,True],[True,True,True,False],[False,False,False,False],[True,False,False,False],[True,True,False,False],[True,False,False,True],[False,False,True,False],[True,False,True,True],[False,False,False,True],[True,True,True,False],[True,True,False,False]],[[True,False,True,False],[True,True,False,False],[True,False,False,False],[False,True,False,False],[True,False,True,False],[False,True,True,True],[False,True,True,True],[False,True,False,False],[False,True,False,True],[False,True,False,True],[True,False,True,False],[True,False,False,True],[False,True,True,False],[False,False,True,False]],[[True,True,True,False],[False,True,False,False],[False,False,False,False],[True,False,False,True],[False,True,True,True],[True,True,False,True],[False,True,True,False],[False,True,False,True],[False,True,True,False],[True,True,True,True],[False,True,False,True],[True,False,False,True],[True,True,False,True],[False,True,False,False]],[[False,False,False,False],[True,False,False,True],[False,True,True,True],[True,False,False,True],[True,False,False,False],[False,True,True,False],[False,False,True,True],[True,True,True,True],[True,False,False,False],[False,False,True,False],[True,True,True,False],[True,False,True,True],[False,False,True,True],[True,True,True,True]],[[True,False,False,False],[True,False,True,True],[False,True,True,False],[True,True,True,True],[False,False,True,True],[False,True,False,True],[True,False,False,False],[True,True,True,False],[True,False,False,False],[False,True,True,False],[True,True,False,False],[False,True,True,False],[False,True,True,False],[False,False,True,True]],[[False,True,True,True],[False,False,True,True],[False,True,False,False],[False,True,False,True],[False,True,False,False],[False,True,False,False],[False,False,True,False],[False,False,True,False],[False,False,True,False],[True,False,False,True],[True,False,False,True],[True,False,True,False],[True,True,False,False],[False,True,False,True]]], dtype = "bool")#candidate|4133|(9, 14, 4)|const|bool
var_4134 = relay.var("var_4134", dtype = "bool", shape = (9, 14, 4))#candidate|4134|(9, 14, 4)|var|bool
bop_4135 = relay.logical_and(const_4133.astype('bool'), relay.reshape(var_4134.astype('bool'), relay.shape_of(const_4133))) # shape=(9, 14, 4)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
const_4142 = relay.const([-5.101701,7.947411,1.752156,0.525664,1.657864,2.077557,3.368584,8.663108,-0.383962,-6.244983,-5.595740,-7.714596,7.009314,-6.370817,2.865036,9.419651,-0.660702,-2.773922,1.385162,-8.277156,5.175818,4.355161,-7.866668,-6.276934,0.696215,9.335928,2.325847,-0.519153,-6.399582,-4.058045,9.290487,-0.833519,-0.749895,3.518980,-9.351035,-2.292671,3.794328,-1.538084,2.512302,-8.508096,2.062764,-6.526337,5.406576,8.246357,-0.417166,-6.615227,9.215283,1.805248,5.877018,-7.833303,-1.275608,-8.015182,-5.676284,3.803891,9.480502,-9.027187,2.340142,-6.910742,-9.928815,2.170462,0.794353,-2.175662,-4.316002,-3.874295,-1.563227,1.924639,8.184679,-4.752026,6.836069,2.649387,2.152397,7.016650,6.946562,3.783176,-4.872805,-0.046610,-0.929532,-2.870995,-9.735300,4.204049,9.872146,3.173644,-4.268286,-9.126061,3.743287,-0.724364,-8.784288,-5.769095,9.521203,7.350872,-0.516176,5.811667,-9.596896,5.943217,-1.466386,5.398266,1.824996,0.955302,-3.315282,6.855353,7.823073,-5.739770,-9.393753,9.692717,-7.282117,5.092552,-2.025177,-4.084503,-2.538755,6.874555,-0.681071,8.107883,3.964955,1.555392,-3.761277,-9.835944,-1.057021,3.410002,8.066060,2.086417,4.018822,-2.886849,5.936919,-1.364012,-6.798503,8.248881,-4.482736,-7.125218,6.216526,1.256417,9.477932,7.684804,-8.554117,-3.469316,-2.115390,-9.257545,-7.848719,8.068144,2.146413,7.633032,-1.288248,-2.436032,1.830491,-0.019867,-2.751002,0.268984,5.835636,1.615862,4.663431,2.068455,6.854599,-0.277050,-1.216906,-8.526690,9.976701,7.591862,-6.464272,2.754651,2.665218,-1.856301,3.735604,9.579172,-2.209394,8.217134,-7.639248,8.016981,-2.656941,7.404941,-7.790273,-8.991062,2.695030,4.137486,7.394728,-1.791562,-8.956881,-6.742335,-4.086305,3.263223,-4.592290,-7.639389,1.254714,5.135613,7.702838,3.373300,-5.749666,-1.960272,5.574001,6.628262,-4.233277,5.831696,-9.136909,-0.877146,6.248512,3.705089,-6.550032,-1.323163,-7.046957,5.236699,-5.975735,3.309877,-2.882207,1.707415,0.691778,-1.302647,-9.584049,-9.295585,4.771692,6.887235,-3.880771,7.005906,-7.144077,7.766355,4.765372,8.524966,2.544763,-4.371362,-0.182376,1.310875,-3.505954,0.574059,-4.936830,1.736069,-3.041926,-9.249437,3.492112,-5.340287,-2.369877,-5.594301,-6.405090,2.740412,-6.031675,-2.495255,1.262221,-5.244710,5.593200,-3.521166,-2.106880,-9.516709,-5.748199,9.458713,-6.474526,-2.118922,5.635078,-4.000520,-0.623901,5.019600,7.078547,0.266322,-6.500826,-6.284082,1.148878,6.497656,-8.012405,-2.221271,-2.362636,-2.075495,4.220122,6.070489,-1.117771,1.411375,-2.399392,2.082813,-0.941932,-5.739801,3.442839,-1.967214,-3.348978,-4.661573,1.211912,5.850236,-1.542794,-8.240841,-0.568347,2.110578,4.168070,1.351322,8.750992,9.751725,8.361394,-2.779612,-9.533761,2.567001,-9.483987,8.542464,5.547577,-4.574129,5.843072,6.451059,-5.106364,-1.315882,5.852861,1.351196,-9.149014,-4.275494,9.614352,-8.861434,-0.243469,-2.542769,6.363499,-0.171883,-8.787316,9.077339,-5.998175,-0.272834,8.376702,-1.784041,-8.977156,3.223302,3.805947,5.667847,9.060322,-4.807530,0.928937,-9.113287,0.749598,5.990041,2.969238,0.545523,-9.167293,2.247812,-2.087072,-2.056810,2.490635,2.181475,-5.603373,4.444927,6.825902,9.956364,-9.153384,0.195523,-5.396243,-0.489500,9.535208,7.544195,7.802190,3.374669,0.547690,-6.415895,-0.717113,2.175799,-9.816513,-1.542435,-1.618986,2.413323,0.908950,-1.965442,8.145506,-6.344748,-6.581561,-5.844613,-6.384988,7.852974,-4.952739,-6.866641,-9.984286,3.028452,2.380279,-5.677596,1.546462,-1.657671,-3.079887,-1.460047,6.756667,2.923024,7.218768,3.719985,3.605464,5.071645,5.414415,-3.558585,5.759491,-4.867470,4.763932,-0.891749,-6.025753,-2.892571,-3.891594,5.383229,5.384250,8.934723,-6.396063,-7.254461,-6.380074,7.917206,9.084210,3.655536,5.574490,4.602421,-8.227080,9.051408,9.630999,7.585084,5.710606,7.773456,3.434658,6.154026,-3.914340,-7.408846,0.100530,-2.863243,6.247462,9.121570,8.140030,-3.853770,-2.848895,3.475383,1.044894,8.608683,2.737989,0.579136,-4.474402,-3.912773,-3.315350,3.097929,5.926907,-5.130279,4.465066,3.819369,7.200046,-4.487011,-0.311106,5.055293,-7.912926,-6.629318,0.381573,3.211254,-8.897601,-9.823792,-9.132192,-6.583741,5.313860,-3.805598], dtype = "float32")#candidate|4142|(432,)|const|float32
call_4141 = func_30_call(relay.reshape(const_4142.astype('float32'), [9, 6, 8]))
call_4143 = func_30_call(relay.reshape(const_4142.astype('float32'), [9, 6, 8]))
uop_4151 = relay.asin(bop_4135.astype('float32')) # shape=(9, 14, 4)
uop_4154 = relay.log(uop_4151.astype('float64')) # shape=(9, 14, 4)
output = relay.Tuple([call_4141,const_4142,uop_4154,])
output2 = relay.Tuple([call_4143,const_4142,uop_4154,])
func_4158 = relay.Function([var_4134,], output)
mod['func_4158'] = func_4158
mod = relay.transform.InferType()(mod)
var_4159 = relay.var("var_4159", dtype = "bool", shape = (9, 14, 4))#candidate|4159|(9, 14, 4)|var|bool
output = func_4158(var_4159)
func_4160 = relay.Function([var_4159], output)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4441 = relay.const([[[2,2,10,1,5,6,-3,3,8,9,-1],[-2,2,1,5,-1,1,5,5,5,-4,-2],[-2,9,2,-3,-4,-9,-1,8,-2,3,10],[5,5,-7,-3,-6,-4,4,-4,-1,3,5],[-2,-10,-1,8,-2,-9,2,-6,5,-1,-8]],[[6,-3,-10,-9,-10,7,-5,-2,10,-5,1],[-4,-4,2,7,2,3,10,-4,8,10,-4],[4,8,-2,-4,2,-3,-7,2,4,-7,9],[-10,-6,5,-6,1,-8,7,-3,6,-6,-2],[3,-7,7,-6,3,7,6,5,4,-1,6]],[[2,-8,-7,-7,-7,10,-7,-10,-3,-9,-4],[4,-5,7,9,-6,5,1,-8,10,7,1],[-8,7,6,2,10,-1,-4,-3,-4,-6,-2],[-2,5,6,-1,-8,-2,2,10,9,-10,7],[9,-7,-8,1,-9,-2,4,-6,7,-5,8]],[[8,-1,-10,-5,3,6,6,-2,-7,9,-3],[7,9,-1,4,4,-7,-7,4,-5,-8,6],[6,1,8,3,5,9,6,10,1,-2,-9],[-7,-2,1,-5,4,-6,7,6,-5,1,-9],[-6,-7,-5,5,-7,-6,-7,9,-5,-3,9]],[[-4,9,-8,-3,-7,7,8,-2,-3,-7,8],[-7,6,-1,4,-9,4,8,-8,10,2,9],[7,-2,10,3,-5,-4,-2,-10,-4,-7,-6],[-2,-7,-2,-8,-8,-4,-7,-2,-2,-1,-6],[3,1,4,6,2,8,8,8,-3,-3,7]],[[-9,2,-5,-10,-8,-8,8,9,-4,2,10],[-2,-8,-5,1,-2,-2,-4,7,-10,6,-8],[-10,10,7,5,-4,6,-3,-2,6,7,-8],[6,6,4,2,8,-6,5,2,1,-9,5],[-1,-10,-3,-4,9,-8,-4,9,-2,-9,5]],[[2,-7,3,-3,10,7,8,7,1,-1,-3],[1,4,-10,2,10,5,8,-3,-8,2,5],[7,5,9,7,3,-5,1,-2,3,6,9],[-3,4,7,9,9,5,-4,-10,-10,8,1],[-3,10,-7,1,2,-8,7,6,1,-2,1]]], dtype = "uint64")#candidate|4441|(7, 5, 11)|const|uint64
var_4442 = relay.var("var_4442", dtype = "uint64", shape = (7, 5, 11))#candidate|4442|(7, 5, 11)|var|uint64
bop_4443 = relay.add(const_4441.astype('uint64'), relay.reshape(var_4442.astype('uint64'), relay.shape_of(const_4441))) # shape=(7, 5, 11)
output = bop_4443
output2 = bop_4443
func_4448 = relay.Function([var_4442,], output)
mod['func_4448'] = func_4448
mod = relay.transform.InferType()(mod)
mutated_mod['func_4448'] = func_4448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4449 = relay.var("var_4449", dtype = "uint64", shape = (7, 5, 11))#candidate|4449|(7, 5, 11)|var|uint64
func_4448_call = mutated_mod.get_global_var('func_4448')
call_4450 = func_4448_call(var_4449)
output = call_4450
func_4451 = relay.Function([var_4449], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4612 = relay.var("var_4612", dtype = "int16", shape = (16, 11, 3))#candidate|4612|(16, 11, 3)|var|int16
var_4613 = relay.var("var_4613", dtype = "int16", shape = (16, 11, 3))#candidate|4613|(16, 11, 3)|var|int16
bop_4614 = relay.less(var_4612.astype('bool'), relay.reshape(var_4613.astype('bool'), relay.shape_of(var_4612))) # shape=(16, 11, 3)
output = relay.Tuple([bop_4614,])
output2 = relay.Tuple([bop_4614,])
func_4617 = relay.Function([var_4612,var_4613,], output)
mod['func_4617'] = func_4617
mod = relay.transform.InferType()(mod)
mutated_mod['func_4617'] = func_4617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4617_call = mutated_mod.get_global_var('func_4617')
var_4619 = relay.var("var_4619", dtype = "int16", shape = (16, 11, 3))#candidate|4619|(16, 11, 3)|var|int16
var_4620 = relay.var("var_4620", dtype = "int16", shape = (16, 11, 3))#candidate|4620|(16, 11, 3)|var|int16
call_4618 = func_4617_call(var_4619,var_4620,)
output = call_4618
func_4621 = relay.Function([var_4619,var_4620,], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4733 = relay.const(3, dtype = "uint8")#candidate|4733|()|const|uint8
var_4734 = relay.var("var_4734", dtype = "uint8", shape = (15, 12, 10))#candidate|4734|(15, 12, 10)|var|uint8
bop_4735 = relay.less_equal(const_4733.astype('bool'), var_4734.astype('bool')) # shape=(15, 12, 10)
func_4448_call = mod.get_global_var('func_4448')
func_4451_call = mutated_mod.get_global_var('func_4451')
var_4743 = relay.var("var_4743", dtype = "uint64", shape = (385,))#candidate|4743|(385,)|var|uint64
call_4742 = func_4448_call(relay.reshape(var_4743.astype('uint64'), [7, 5, 11]))
call_4744 = func_4448_call(relay.reshape(var_4743.astype('uint64'), [7, 5, 11]))
func_3541_call = mod.get_global_var('func_3541')
func_3545_call = mutated_mod.get_global_var('func_3545')
const_4762 = relay.const([[8.515511],[3.292510],[-0.260514],[3.118726],[-2.692820],[6.659280],[-8.029699],[5.845320],[1.529812],[9.642810],[-0.148327],[1.355350],[4.615188],[-8.790813],[8.117187],[0.697450],[7.715708],[6.175580],[-8.080618],[5.938750],[-3.397971],[-7.491260],[-8.598000],[7.768610],[9.987950],[-0.789091],[8.977430],[-8.504913],[9.662134],[-2.083397],[-1.077411],[6.119046],[1.709880],[2.475022],[3.877992],[-9.324695],[5.824351],[7.797229],[-2.242563],[8.335700],[6.117042],[3.537112],[-0.670724],[6.667490],[-7.171375],[-4.385077],[5.787192],[-0.859599],[-2.965480],[5.703126],[-8.769694],[1.739050],[-4.757501],[-2.464461],[1.102292],[-2.803917],[2.608276],[-4.598719],[-2.095678],[3.770755],[9.869615],[9.298280],[3.673368],[1.230517],[4.975601],[-4.807211],[1.477480],[7.195129],[-1.420990],[-1.668778],[-6.610256],[-2.835314],[2.291276],[4.875697],[-0.535648],[-3.073047],[-2.063527],[-4.004089],[-2.627399],[8.499208],[-0.200178],[2.363486],[6.206381],[2.967899],[-7.620598],[-6.619221],[9.254433],[1.419814],[0.967138],[-1.330696],[6.330651],[5.507619],[-8.578211],[-4.056327],[-6.321178],[-5.975343],[1.588614],[-5.688702],[-6.649064]], dtype = "float64")#candidate|4762|(99, 1)|const|float64
var_4763 = relay.var("var_4763", dtype = "uint32", shape = (1344,))#candidate|4763|(1344,)|var|uint32
const_4764 = relay.const([5.901072,9.651055,-8.354704,0.827988,-8.071234,6.489054,-2.055989,-9.775720,7.038296,-4.365154,9.567063,5.235183,-5.552606,-4.833022,3.305262,-0.327244,-3.625977,-5.169286,-5.202731,-7.249926,0.344629,9.489996,8.342227,-7.127424,1.423521,-8.964526,-2.665164,-1.491468,0.706322,-3.490732,-6.197968,2.594570,1.482641,0.874161,9.837205,-3.196442,-0.447251,-8.439846,-8.117159,-7.292814,-6.335328,-3.703961,-8.454925,7.581064,9.282274,8.104175,-7.629676,-7.960886,-5.227950,4.727813,4.329311,6.134222,-4.700349,-1.438385,-8.015425,-8.186890,6.868300,0.257759,-0.038284,4.224870,0.641648,9.209930,-8.260660,5.461991,-3.663598,-7.124420,-4.587335,7.736615,-9.455298,5.013355,-2.545544,3.731379,-4.316023,6.114656,9.132937,-1.292331,0.447373,-4.357994,4.783262,6.011904,-4.339931,-4.923634,9.417997,5.387455,0.744313,-5.536652,9.398721,4.733165,7.060938,-9.402269,-8.860292,0.384331,-2.093841,0.860886,0.748418,4.963908,-3.679301,-8.723293,4.430221,4.172250,9.847180,-9.776353,4.952963,-1.686942,3.787253,3.761382,-8.107751,2.754678,-4.709022,-1.247500,3.250702,-5.052330,6.300864,0.995045,-8.710377,4.800028,5.327433,-3.487395,-3.872824,6.107289,2.013784,6.064717,1.913479,7.985577,9.678398,2.886870,5.690028,-3.695612,-7.798988,-0.120654,2.859047,-1.130906,1.305961,2.046873,-7.126551,3.719931,-8.729767,4.304730,-5.939649,9.775925,-4.508259,-6.957981,-9.946300,7.198038,2.946520,-0.266700,4.876662,1.792160,5.223043,-3.968861,4.974281,-1.225283,-7.603659,9.854916,-6.474067,-1.807545,4.621527,-3.835103,-2.450481,-6.170276,1.100443,-5.954316,-0.255559,-7.823838,-1.580572,5.321203,-1.720061,0.766980,6.581555,7.565677,-4.450246,-5.579354,3.678846,2.220197,-6.513706,1.947175,-9.027551,5.281558,5.116035,1.393816,-2.404531,2.737834,-0.860810,-2.957695,1.646433,0.340914,7.192482,9.163780,-6.413343,-7.276830,-8.518280,8.310899,9.064241,7.179542,-2.349188,6.755936,5.385451,2.929594,3.732366,6.113718,-9.698545,-9.499792,3.895479,-0.361868,6.358285,-1.770852,-3.535591,-9.114567,-9.501904,-4.871828,-1.406590,-9.261183,-0.693737,8.236040,3.831506,-0.524039,6.956352,2.669903,-3.442630,5.340755,4.320677,2.239688,9.323171,4.729962,-1.816798,-7.402950,6.506430,-5.710840,-1.414914,-7.158101,9.773798,8.552728,8.366295,9.424472,-1.630874,2.724772,-6.680524,1.631823,4.615995,-8.354209,-7.022130,-1.554145,6.854038,8.133390,2.532814,6.101843,-9.656804,0.441903,5.216148,3.699234,4.455409,5.069740,-5.771593,6.514749,-8.384035,2.192590,-1.903688,-7.067415,-0.440899,-7.970451,4.484702,-5.824620,-9.782489,-6.461047,-6.843866,-7.296859,-2.764298,-4.053883,-3.141442,-8.198037,5.372300,-5.507014,-8.360995,2.835576,-9.123308,-9.262019,9.786999,-6.200314,-4.317305,2.979197,-4.891907,0.315751,-3.228601,0.444741,0.848149,0.151433,9.678792,7.262507,-4.177865,8.222099,-8.953176,2.531487,-6.123602,4.736143,-8.685298,-6.129106,-6.070488,1.785723,5.504795,-7.090374,2.827928,9.291032,4.253035,-5.385833,4.124219,-7.795827,8.776719,8.584810,1.016917,-5.291193,7.444848,1.838828,-7.205204,-7.971146,8.581597,3.789659,-6.619374,-3.004412,6.150258,-6.894684,-0.854191,-7.214200,-8.924789,0.990488,-6.104685,1.100800,-9.656147,-0.123691,3.673290,-0.491191,0.625262,7.821130,-9.784914,0.549190,-7.141275,-8.800201,-3.204888,-9.226079,-2.290138,9.072441,-8.848211,1.052360,4.783403,8.487395,-5.105399,5.899303,0.167154,-0.936672,-0.191235,1.325398,9.111535,7.814386,-9.966888,-8.909072,-8.865907,-3.599787,-7.661274,9.819150,5.205305,-6.863062,9.251420,3.973792,5.736489,-8.467710,0.483810,-7.706730,-9.383472,-2.202221,-2.889765,1.998445,-7.067372,8.567132,9.567383,-5.237289,2.700311,7.201121,2.622901,-8.917042,-4.457736,-6.796520,-6.386915,-6.465189,6.281559,-8.802439,4.938622,-3.278680,6.664454,-3.896510,-3.616530,4.386600,5.460938,-4.739993,4.709072,3.055797,-7.659716,9.646986,6.190853,1.484499,-6.692679,-9.662090,0.521216,-2.623740,-0.736236,-0.380755,0.944210,-7.210467,-5.306148,9.741770,2.916570,9.287072,8.102990,5.177202,-3.025899,0.581081,-1.274218,-6.473501,-1.955277,-1.088673,3.835762,0.739570,-5.750048,4.732406,7.746056,-9.030219,-4.003995,-8.134367,-4.090146,-7.633825,-6.472720,4.687626,9.132237,-5.770975], dtype = "float32")#candidate|4764|(432,)|const|float32
call_4761 = relay.TupleGetItem(func_3541_call(relay.reshape(const_4762.astype('float64'), [9, 1, 11]), relay.reshape(var_4763.astype('uint32'), [1344,]), relay.reshape(const_4764.astype('float32'), [432,]), ), 3)
call_4765 = relay.TupleGetItem(func_3545_call(relay.reshape(const_4762.astype('float64'), [9, 1, 11]), relay.reshape(var_4763.astype('uint32'), [1344,]), relay.reshape(const_4764.astype('float32'), [432,]), ), 3)
output = relay.Tuple([bop_4735,call_4742,var_4743,call_4761,const_4762,var_4763,const_4764,])
output2 = relay.Tuple([bop_4735,call_4744,var_4743,call_4765,const_4762,var_4763,const_4764,])
func_4773 = relay.Function([var_4734,var_4743,var_4763,], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mutated_mod.get_global_var('func_4773')
var_4775 = relay.var("var_4775", dtype = "uint8", shape = (15, 12, 10))#candidate|4775|(15, 12, 10)|var|uint8
var_4776 = relay.var("var_4776", dtype = "uint64", shape = (385,))#candidate|4776|(385,)|var|uint64
var_4777 = relay.var("var_4777", dtype = "uint32", shape = (1344,))#candidate|4777|(1344,)|var|uint32
call_4774 = func_4773_call(var_4775,var_4776,var_4777,)
output = call_4774
func_4778 = relay.Function([var_4775,var_4776,var_4777,], output)
mutated_mod['func_4778'] = func_4778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4945 = relay.var("var_4945", dtype = "int64", shape = (3, 8, 7))#candidate|4945|(3, 8, 7)|var|int64
const_4946 = relay.const([[[1,-5,-1,9,8,10,-9],[1,-9,4,-7,10,4,1],[2,-8,-3,5,-8,8,4],[1,10,3,-9,3,-1,-1],[-7,-1,-4,-1,-3,-2,3],[-7,8,2,-2,-9,-3,6],[5,1,4,2,10,-4,4],[-4,-6,5,8,5,-4,2]],[[-7,3,8,6,7,-9,-3],[-10,10,3,-4,1,-8,6],[1,1,-6,1,-10,7,7],[6,8,-7,1,-4,10,9],[-2,-2,-10,-2,-7,10,2],[-7,-3,10,-9,2,9,-3],[3,-9,-8,7,-3,-4,-4],[10,-4,-6,9,10,3,6]],[[-10,-2,-2,8,-3,-9,6],[1,-10,7,-9,2,-10,-4],[6,6,-10,9,-1,-3,3],[-5,5,-10,-8,-10,-3,2],[7,-4,-7,-1,1,8,-8],[-8,-1,10,10,3,-1,2],[-5,5,10,7,2,-4,-7],[-4,-3,5,-7,2,-7,3]]], dtype = "int64")#candidate|4946|(3, 8, 7)|const|int64
bop_4947 = relay.greater(var_4945.astype('bool'), relay.reshape(const_4946.astype('bool'), relay.shape_of(var_4945))) # shape=(3, 8, 7)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
const_4965 = relay.const([8,-7,2,1,8,6,-7,-4,-8,-1,8,8,-4,2,4,5,-1,-3,10,8,4,-10,5,-9,7,-9,10,6,-4,4,-2,-2,-3,9,10,3,-1,2,9,3,1,-2,1,3,-8,5,-7,-4,3,4,-1,7,4,-10,-3,8,6,5,7,3,6,-5,9,1,-5,5,-6,7,-2,-10], dtype = "int32")#candidate|4965|(70,)|const|int32
const_4966 = relay.const(9.957697, dtype = "float32")#candidate|4966|()|const|float32
var_4967 = relay.var("var_4967", dtype = "float32", shape = (288,))#candidate|4967|(288,)|var|float32
call_4964 = relay.TupleGetItem(func_1888_call(relay.reshape(const_4965.astype('int32'), [70,]), relay.reshape(const_4966.astype('float32'), []), relay.reshape(var_4967.astype('float32'), [4, 72]), ), 6)
call_4968 = relay.TupleGetItem(func_1893_call(relay.reshape(const_4965.astype('int32'), [70,]), relay.reshape(const_4966.astype('float32'), []), relay.reshape(var_4967.astype('float32'), [4, 72]), ), 6)
func_2164_call = mod.get_global_var('func_2164')
func_2169_call = mutated_mod.get_global_var('func_2169')
var_4976 = relay.var("var_4976", dtype = "float64", shape = (560,))#candidate|4976|(560,)|var|float64
var_4977 = relay.var("var_4977", dtype = "float32", shape = (432,))#candidate|4977|(432,)|var|float32
call_4975 = relay.TupleGetItem(func_2164_call(relay.reshape(var_4976.astype('float64'), [7, 16, 5]), relay.reshape(var_4976.astype('float64'), [7, 16, 5]), relay.reshape(var_4977.astype('float32'), [432,]), ), 0)
call_4978 = relay.TupleGetItem(func_2169_call(relay.reshape(var_4976.astype('float64'), [7, 16, 5]), relay.reshape(var_4976.astype('float64'), [7, 16, 5]), relay.reshape(var_4977.astype('float32'), [432,]), ), 0)
uop_4995 = relay.log2(var_4977.astype('float32')) # shape=(432,)
func_527_call = mod.get_global_var('func_527')
func_530_call = mutated_mod.get_global_var('func_530')
var_4998 = relay.var("var_4998", dtype = "int32", shape = (14,))#candidate|4998|(14,)|var|int32
call_4997 = func_527_call(relay.reshape(var_4998.astype('int32'), [2, 7, 1]), relay.reshape(const_4965.astype('int32'), [2, 7, 5]), )
call_4999 = func_527_call(relay.reshape(var_4998.astype('int32'), [2, 7, 1]), relay.reshape(const_4965.astype('int32'), [2, 7, 5]), )
func_4448_call = mod.get_global_var('func_4448')
func_4451_call = mutated_mod.get_global_var('func_4451')
var_5012 = relay.var("var_5012", dtype = "uint64", shape = (385,))#candidate|5012|(385,)|var|uint64
call_5011 = func_4448_call(relay.reshape(var_5012.astype('uint64'), [7, 5, 11]))
call_5013 = func_4448_call(relay.reshape(var_5012.astype('uint64'), [7, 5, 11]))
output = relay.Tuple([bop_4947,call_4964,const_4965,const_4966,var_4967,call_4975,var_4976,uop_4995,call_4997,var_4998,call_5011,var_5012,])
output2 = relay.Tuple([bop_4947,call_4968,const_4965,const_4966,var_4967,call_4978,var_4976,uop_4995,call_4999,var_4998,call_5013,var_5012,])
func_5014 = relay.Function([var_4945,var_4967,var_4976,var_4977,var_4998,var_5012,], output)
mod['func_5014'] = func_5014
mod = relay.transform.InferType()(mod)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5014_call = mutated_mod.get_global_var('func_5014')
var_5016 = relay.var("var_5016", dtype = "int64", shape = (3, 8, 7))#candidate|5016|(3, 8, 7)|var|int64
var_5017 = relay.var("var_5017", dtype = "float32", shape = (288,))#candidate|5017|(288,)|var|float32
var_5018 = relay.var("var_5018", dtype = "float64", shape = (560,))#candidate|5018|(560,)|var|float64
var_5019 = relay.var("var_5019", dtype = "float32", shape = (432,))#candidate|5019|(432,)|var|float32
var_5020 = relay.var("var_5020", dtype = "int32", shape = (14,))#candidate|5020|(14,)|var|int32
var_5021 = relay.var("var_5021", dtype = "uint64", shape = (385,))#candidate|5021|(385,)|var|uint64
call_5015 = func_5014_call(var_5016,var_5017,var_5018,var_5019,var_5020,var_5021,)
output = call_5015
func_5022 = relay.Function([var_5016,var_5017,var_5018,var_5019,var_5020,var_5021,], output)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5392 = relay.var("var_5392", dtype = "float32", shape = (11, 12, 4))#candidate|5392|(11, 12, 4)|var|float32
uop_5393 = relay.asin(var_5392.astype('float32')) # shape=(11, 12, 4)
func_2392_call = mod.get_global_var('func_2392')
func_2395_call = mutated_mod.get_global_var('func_2395')
var_5396 = relay.var("var_5396", dtype = "float64", shape = (112,))#candidate|5396|(112,)|var|float64
call_5395 = func_2392_call(relay.reshape(var_5396.astype('float64'), [2, 14, 4]), relay.reshape(var_5396.astype('float64'), [2, 14, 4]), )
call_5397 = func_2392_call(relay.reshape(var_5396.astype('float64'), [2, 14, 4]), relay.reshape(var_5396.astype('float64'), [2, 14, 4]), )
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
const_5400 = relay.const([True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True], dtype = "bool")#candidate|5400|(504,)|const|bool
call_5399 = relay.TupleGetItem(func_4158_call(relay.reshape(const_5400.astype('bool'), [9, 14, 4])), 2)
call_5401 = relay.TupleGetItem(func_4160_call(relay.reshape(const_5400.astype('bool'), [9, 14, 4])), 2)
output = relay.Tuple([uop_5393,call_5395,var_5396,call_5399,const_5400,])
output2 = relay.Tuple([uop_5393,call_5397,var_5396,call_5401,const_5400,])
func_5405 = relay.Function([var_5392,var_5396,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
var_5406 = relay.var("var_5406", dtype = "float32", shape = (11, 12, 4))#candidate|5406|(11, 12, 4)|var|float32
var_5407 = relay.var("var_5407", dtype = "float64", shape = (112,))#candidate|5407|(112,)|var|float64
output = func_5405(var_5406,var_5407,)
func_5408 = relay.Function([var_5406,var_5407,], output)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5524 = relay.const([[[5.485054,-2.357253,-7.543039,-4.537579,6.429317,-1.156389,0.361598,-2.032058],[7.520614,-3.939328,3.051944,-3.665700,2.399237,-8.047123,-7.517377,-4.080128]],[[-1.520393,-5.402817,7.496442,-6.553754,5.797469,-2.898136,1.091031,-2.351216],[4.672746,4.576508,0.321526,4.020164,-8.791804,-3.484844,-5.838799,3.705665]],[[6.984134,2.857900,-7.228113,0.091144,-3.513296,-9.906332,6.520537,4.269670],[9.144804,1.755492,-7.397024,-0.976085,7.167454,-3.075700,4.471408,-8.044738]],[[3.932972,4.562365,8.087653,8.689603,0.610264,8.586893,-9.554781,2.693647],[0.275050,-3.982147,5.346520,1.590134,3.896886,-3.714121,3.300995,-1.771004]],[[7.722618,-6.564554,-7.551382,-5.934681,-4.058553,-1.301433,-0.623805,-6.370761],[4.515587,-3.402041,6.528306,3.560210,7.266839,-1.690012,-8.846158,3.186347]],[[-0.762503,-6.631498,2.922241,-9.385435,-7.835312,-2.845683,-4.652884,2.915823],[0.959932,7.982981,2.847337,6.182088,-1.042041,6.589993,-6.579300,-2.722308]],[[-0.045274,-6.314003,-3.470242,2.335435,7.621181,5.055926,2.172628,8.375829],[-2.047802,8.214278,7.487374,-8.797858,-2.319004,-1.085454,-3.437484,-9.569735]],[[0.060469,-7.887620,8.316871,9.438538,1.821267,8.088829,5.533022,5.461223],[7.387280,3.683335,-5.149140,-7.836218,1.447626,2.222468,-7.995074,-5.910058]],[[-5.853921,0.430964,8.324325,3.809685,5.132130,3.509400,5.062738,9.286937],[5.970636,-6.647649,-4.764028,4.356969,6.604288,-7.003698,-6.348215,-9.014473]]], dtype = "float32")#candidate|5524|(9, 2, 8)|const|float32
var_5525 = relay.var("var_5525", dtype = "float32", shape = (9, 2, 8))#candidate|5525|(9, 2, 8)|var|float32
bop_5526 = relay.divide(const_5524.astype('float32'), relay.reshape(var_5525.astype('float32'), relay.shape_of(const_5524))) # shape=(9, 2, 8)
output = relay.Tuple([bop_5526,])
output2 = relay.Tuple([bop_5526,])
func_5550 = relay.Function([var_5525,], output)
mod['func_5550'] = func_5550
mod = relay.transform.InferType()(mod)
mutated_mod['func_5550'] = func_5550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5551 = relay.var("var_5551", dtype = "float32", shape = (9, 2, 8))#candidate|5551|(9, 2, 8)|var|float32
func_5550_call = mutated_mod.get_global_var('func_5550')
call_5552 = func_5550_call(var_5551)
output = call_5552
func_5553 = relay.Function([var_5551], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6204 = relay.const([[[5.221589,1.750911,3.071492,-0.906238,-7.950766,-1.554844,-7.011798,7.963646,-9.596243,2.484418,-2.701830,5.828491,1.393425,-6.016661,4.767592,-3.286375],[-2.490169,1.362737,-2.147048,4.754209,9.854907,-3.853514,6.558104,-2.991837,-4.304458,-5.694066,-7.811585,4.846964,-3.630750,4.191940,1.312154,-7.149922],[-9.061994,-8.097711,7.695335,8.434141,1.759066,-1.367191,1.874271,3.261369,6.256181,5.844563,7.997947,9.059719,-4.495507,8.777243,-9.809071,4.933405],[6.980221,-8.032951,4.924358,8.976443,9.564107,4.951720,-9.441551,-8.972128,4.947839,9.652521,-8.998620,-2.577120,-9.627339,3.794918,-5.911782,8.839532],[-9.003962,-6.319117,8.063557,-7.332807,-4.842952,-1.703955,-1.648578,-1.290868,-2.670875,-2.353866,-0.582619,0.209019,-9.243701,1.366599,-8.746443,-5.256433],[-1.193085,-8.529106,-1.062281,-8.066314,0.078647,-8.590833,7.323564,0.029884,-1.223916,8.717418,-3.946508,3.752644,9.782546,9.309110,2.104649,-6.586271],[2.351051,-9.550767,9.992697,-9.749089,7.277583,0.862979,2.560577,-5.475407,-0.412767,-3.270231,-5.385421,-9.083682,-2.528598,6.141852,0.434845,-1.581347],[0.525216,1.226096,7.576131,4.808786,-5.079815,-8.114751,4.531429,4.743634,-4.736067,-3.446005,-4.040146,-7.117082,3.734419,-4.745964,2.218825,2.065250],[8.580338,1.906713,-6.078539,1.068530,1.737219,-0.863118,-3.223719,5.669796,2.537336,-2.751307,-3.848869,-0.334265,-7.691735,-1.846259,1.534154,-8.129871],[-9.848150,-4.760609,-7.013745,2.198027,8.623937,-9.476967,-7.726347,-0.598838,-3.789048,7.329451,3.123962,-3.474909,-4.705998,6.570118,-5.626537,1.338011],[1.860480,0.500290,0.380026,-0.403717,-2.974234,2.943467,-8.065398,-4.205306,-1.056103,5.241397,5.563530,4.671397,-7.358949,-1.143248,7.777457,-8.438437],[7.111645,-4.284420,-2.411854,3.726895,-4.332622,7.813683,-5.876024,7.226608,6.833145,-0.251063,-7.880927,4.511978,-5.647341,0.759796,6.877716,-4.560989],[1.356976,0.164362,2.195701,-5.842577,6.107455,-4.682102,2.529047,-6.479822,-9.786444,8.876009,0.675268,-0.856307,-3.790267,9.686014,7.038547,-1.699394]],[[-4.474853,-1.256695,-6.009764,2.871179,5.982866,1.533776,4.212195,3.708598,-3.687387,-7.167400,6.451502,2.228716,-1.548185,4.348197,6.644465,-0.657622],[-6.585803,2.008088,0.983295,-2.570157,3.451665,4.664509,-5.556201,-5.000679,-9.980562,-5.644002,6.275550,1.721039,-6.313348,5.085117,9.241125,2.708959],[8.367304,-0.222232,-9.666596,8.916308,1.473287,-9.489370,4.656158,-2.146277,-5.036611,-1.405117,0.158812,6.318385,-3.743783,6.254489,6.805671,0.307697],[8.144835,8.894839,0.418308,2.836109,-7.618172,-3.591961,5.748850,2.424092,6.379957,1.254057,0.236033,-5.046671,-4.279970,4.271315,-1.336879,-9.713082],[1.889852,6.921602,-8.882539,9.300873,7.737044,-7.928538,-6.669227,-1.119200,4.889561,-3.119233,-4.041647,7.497263,-2.850259,-8.132794,0.279759,4.732303],[7.376572,7.849841,1.161409,-7.685794,-6.116121,8.520301,-6.622415,-2.387276,-3.592106,-0.892748,9.894935,8.853836,1.415118,4.361507,-5.288754,7.821793],[6.275862,1.585727,4.356222,2.533494,-7.495739,-7.184975,-5.702641,9.302415,-0.188988,-7.382392,4.879834,8.643738,1.644818,5.800333,7.114404,0.182035],[-1.399575,-5.227867,-1.383574,9.358341,-5.332899,3.760213,6.879828,6.750518,6.579909,5.840054,0.957949,4.441122,1.593080,-9.427557,0.267471,-2.560590],[-7.379397,2.263410,-5.392077,-9.274864,-6.864970,-7.553475,-7.910586,9.979311,7.056220,-1.462787,-4.914813,6.010293,-0.013541,-9.923694,-3.844959,5.437174],[5.962009,8.796673,-8.731568,3.332864,-6.877199,-2.056754,7.455101,-3.212176,-8.358982,-7.512436,-1.069491,1.044101,0.417306,-1.411943,-3.822516,7.157870],[-7.514695,3.952540,-1.489798,1.561238,-7.363473,9.166588,-4.600494,-2.440359,-1.370605,7.857388,1.324113,6.442491,-0.853206,-9.315412,-3.778178,3.628112],[-5.957750,9.068523,8.815372,0.899813,-8.734013,0.608925,-5.732657,2.227099,-0.911499,9.650086,1.279601,3.101284,-9.908671,-5.251141,7.853639,9.514752],[3.767479,-9.877058,-6.692497,-9.521536,-7.321956,4.896486,-9.422325,6.821666,6.739990,-7.487816,4.565990,-4.128125,2.238555,-5.835173,-9.033931,-7.667720]],[[-3.010429,-1.599586,3.814828,1.888142,5.243754,-5.202929,-8.834876,-0.387162,8.523781,-9.914579,-5.383803,-8.498151,-3.323204,-5.349713,3.921244,-3.856870],[1.839377,-2.544165,8.470126,-9.628855,-8.441499,-5.169712,-2.958013,-7.985972,7.220591,7.976623,2.606115,3.166761,-8.771421,2.166956,1.729358,-0.045240],[-3.532663,8.007132,-8.900396,-8.058972,-5.316037,5.778774,-4.051079,-9.550021,7.852718,2.868314,-5.629952,-6.317972,7.240300,-5.920672,8.152454,4.219641],[2.939501,0.176688,6.259134,-0.460968,9.282417,-8.824910,7.703009,6.818514,-0.034110,4.743907,-7.155615,-7.222955,6.645444,-3.732233,7.962211,9.308590],[-1.120991,-0.168454,-0.976379,0.887177,3.661177,5.113404,1.217187,9.226138,-3.617686,-6.869167,-9.867795,-8.093700,5.621142,-9.796261,-3.774307,8.400073],[-8.976707,-1.505864,-4.695447,-9.736521,-5.280567,-3.015361,6.890661,8.381423,-4.785707,-1.050197,-1.821228,1.257585,6.690988,-9.525920,2.996278,-8.216605],[-2.033603,-0.945327,-1.908566,-8.504168,2.339033,-8.869518,-5.908197,-1.565977,6.146392,9.355207,9.560534,2.352422,-9.072328,-8.631542,4.056947,3.810921],[-4.362515,-6.609249,9.223638,7.638266,6.307339,0.357011,3.808109,3.421698,-5.698502,6.848387,2.901217,-0.958767,-1.240551,1.418114,3.776057,5.292923],[-2.481824,-7.242160,-5.668651,-2.089372,-7.176805,2.599298,8.828244,-1.663888,6.629470,4.403166,3.234506,-3.171305,9.589758,0.093304,7.997404,-5.749793],[4.839066,5.783705,-4.024032,8.013505,3.079968,-6.019899,6.658474,-9.466856,-5.020699,9.138903,0.643679,-9.581095,2.947875,1.039302,-9.120773,4.697017],[-4.792944,-8.685326,-2.968771,8.977076,-0.549892,7.583437,4.241284,9.125323,1.945017,9.810021,-5.708438,8.615579,1.547404,-1.050841,-5.107327,5.340162],[-9.382372,7.569403,-0.157069,-2.650925,4.940337,-4.417904,3.478626,-4.166090,3.496370,8.883853,8.533159,7.425707,1.372896,5.154270,9.741640,2.076791],[-7.397600,0.122833,2.155247,2.684754,9.779391,2.537856,3.136455,4.260938,3.375464,4.780379,-1.442977,-6.583059,-2.729368,3.670403,-3.261761,-3.628537]],[[-6.926058,0.034220,6.136600,-7.713250,3.521303,-4.074957,3.187558,7.470620,-0.805080,-2.089384,0.132767,6.239992,-1.033771,-1.786578,1.350594,6.091921],[-4.740994,5.031397,5.458566,-7.548332,-5.994057,-0.851429,-2.070505,-0.219181,-6.749653,8.602064,3.140427,4.922098,-0.621702,1.884360,-2.418102,4.593719],[4.112510,2.250541,-3.441495,7.058910,-2.032392,-2.617393,8.965691,6.461857,1.126789,-1.369832,5.071873,-3.953657,6.058799,5.113600,-5.376321,-9.953268],[-1.149732,4.185059,6.708254,6.072254,-9.789667,-9.662457,-4.922069,3.567317,7.487175,1.459198,5.620017,-2.780601,2.226783,7.683001,-1.556195,4.878578],[2.090541,2.017301,-5.069522,-5.187707,-1.892520,-1.637214,-1.595407,3.652691,0.768084,1.910278,-7.068604,9.061113,5.451158,-4.500268,-1.967940,-9.761156],[-7.276999,-7.512616,-1.310488,7.798762,-7.770611,-7.857559,2.562619,-0.946923,-0.146859,5.581952,9.308231,-8.624187,7.941862,-4.888270,-1.467015,1.787173],[-4.050974,2.512187,-8.752362,7.536921,1.463899,-5.548365,3.374439,4.908265,-3.717083,5.353262,-1.130156,-2.797552,-8.502560,6.134455,-8.364413,5.029768],[3.059875,8.145673,6.247950,-7.880067,-9.981781,6.665204,7.859610,2.720804,6.192202,7.137269,-2.918355,-4.369658,-2.855838,-3.842676,-3.295692,3.558320],[-0.741383,-3.415968,0.872591,-3.131843,0.933485,-0.776808,1.296482,-6.374817,-4.809896,-7.818703,9.795727,0.267062,-4.555389,-1.168052,8.546985,-5.511733],[4.081434,4.513493,9.073288,-1.998503,0.833148,1.665422,9.070108,0.533189,1.817486,-5.300345,-5.925365,-6.128563,1.861000,-3.325453,-7.930646,2.936304],[0.476135,9.547749,-4.162134,5.610848,-0.555829,-1.898991,-8.994396,9.702011,0.522336,-9.974520,3.858740,3.942758,-0.070871,1.342020,-2.750309,-2.096229],[8.484018,2.253961,1.418557,8.488703,8.632963,7.433341,2.823836,-8.445176,5.386171,2.357747,9.758116,5.152176,-7.171653,0.251045,8.006534,-1.284463],[5.464681,2.597613,-4.380262,-9.348598,-3.986318,6.854176,-9.471202,4.154462,-2.426916,-3.664730,4.958584,0.635317,-2.168656,-6.681423,-5.213361,-4.591146]]], dtype = "float32")#candidate|6204|(4, 13, 16)|const|float32
var_6205 = relay.var("var_6205", dtype = "float32", shape = (4, 13, 16))#candidate|6205|(4, 13, 16)|var|float32
bop_6206 = relay.power(const_6204.astype('float32'), relay.reshape(var_6205.astype('float32'), relay.shape_of(const_6204))) # shape=(4, 13, 16)
bop_6217 = relay.logical_xor(const_6204.astype('uint32'), relay.reshape(bop_6206.astype('uint32'), relay.shape_of(const_6204))) # shape=(4, 13, 16)
func_5405_call = mod.get_global_var('func_5405')
func_5408_call = mutated_mod.get_global_var('func_5408')
var_6222 = relay.var("var_6222", dtype = "float32", shape = (528,))#candidate|6222|(528,)|var|float32
const_6223 = relay.const([-8.039837,1.379441,-1.330429,7.175190,-7.714456,3.285056,-1.220810,8.888595,-5.782604,5.316732,8.708118,-4.145575,2.264724,-1.604927,-0.267349,1.968047,6.173484,-1.551941,-7.487056,6.386020,5.372208,2.673417,-9.119202,-7.732640,9.101983,-8.198522,-9.883999,1.050065,-7.564961,7.531729,6.512704,-4.559778,5.457185,-1.027029,-6.196408,-4.001573,-9.267385,7.801912,-4.422809,-6.414426,-8.690011,-5.234858,7.437522,-8.314070,-4.741771,6.069245,-8.434945,-5.829886,-8.091658,6.831882,-0.199379,-6.694974,5.454940,-8.018751,8.490112,-6.499034,6.368289,-5.305004,-4.774882,3.094406,-5.415549,-4.382982,-7.988898,-1.511013,3.478222,5.023629,4.366108,0.553813,-6.877076,-0.753012,-1.471566,3.700978,-7.879281,-5.093900,-1.027959,1.127421,-6.703550,-9.237614,-4.088366,8.213470,-2.006594,5.875182,-7.634729,0.095789,-0.004402,-3.315729,-3.411329,5.171499,-5.457993,9.831800,7.406865,5.387355,-8.128466,-1.165069,5.048797,-8.386533,-2.291187,9.099593,-6.010799,9.333801,1.818268,6.659163,0.094184,-0.146969,1.146069,6.646959,-7.640045,-9.854236,-0.580459,2.815735,9.588140,8.054245], dtype = "float64")#candidate|6223|(112,)|const|float64
call_6221 = relay.TupleGetItem(func_5405_call(relay.reshape(var_6222.astype('float32'), [11, 12, 4]), relay.reshape(const_6223.astype('float64'), [112,]), ), 0)
call_6224 = relay.TupleGetItem(func_5408_call(relay.reshape(var_6222.astype('float32'), [11, 12, 4]), relay.reshape(const_6223.astype('float64'), [112,]), ), 0)
uop_6226 = relay.asin(bop_6217.astype('float32')) # shape=(4, 13, 16)
output = relay.Tuple([call_6221,var_6222,const_6223,uop_6226,])
output2 = relay.Tuple([call_6224,var_6222,const_6223,uop_6226,])
func_6228 = relay.Function([var_6205,var_6222,], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6228_call = mutated_mod.get_global_var('func_6228')
var_6230 = relay.var("var_6230", dtype = "float32", shape = (4, 13, 16))#candidate|6230|(4, 13, 16)|var|float32
var_6231 = relay.var("var_6231", dtype = "float32", shape = (528,))#candidate|6231|(528,)|var|float32
call_6229 = func_6228_call(var_6230,var_6231,)
output = call_6229
func_6232 = relay.Function([var_6230,var_6231,], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6270 = relay.var("var_6270", dtype = "float32", shape = (6, 13, 9))#candidate|6270|(6, 13, 9)|var|float32
var_6271 = relay.var("var_6271", dtype = "float32", shape = (6, 13, 9))#candidate|6271|(6, 13, 9)|var|float32
bop_6272 = relay.less_equal(var_6270.astype('bool'), relay.reshape(var_6271.astype('bool'), relay.shape_of(var_6270))) # shape=(6, 13, 9)
func_4773_call = mod.get_global_var('func_4773')
func_4778_call = mutated_mod.get_global_var('func_4778')
var_6291 = relay.var("var_6291", dtype = "uint8", shape = (3, 600))#candidate|6291|(3, 600)|var|uint8
var_6292 = relay.var("var_6292", dtype = "uint64", shape = (385,))#candidate|6292|(385,)|var|uint64
const_6293 = relay.const([[8,10,-3,-1,3,5,1,-4,-1,6,2,8,-8,3,-4,4,10,-6,-4,1,8,-7,-3,4,7,-5,5,-3,6,6,10,3,-6,4,-8,9,2,-9,-8,1,4,-4,-9,-3,2,8,1,-3,-2,7,3,-10,-2,2,-1,-5,8,7,8,-4,-1,-6,6,1,6,10,4,6,8,-7,-10,-5,6,6,1,-6,-4,5,2,8,4,1,7,-5,5,5,8,4,1,8,1,4,-8,7,-5,-10,-4,-8,-8,7,6,-7,-1,6,10,-4,2,10,9,10,2,-2,2,-7,-2,2,-6,2,-1,-9,-4,5,1,6,1,-3,-7,-9,-4,9,-1,-3,3,2,6,6,4,-8,7,6,-1,2,3,-6,10,-2,8,7,1,-5,1,-6,5,2,7,3,-7,5,8,9,-9,-8,6,-8,3,3,7,10,5,-7,2,-2,6,-10,-1,10,-10,10,-2,-1,4,-2,5,-6,-8,3,-2,8,2,-2,-9,-6,-1,-2,-7,-1,-9,3,-6,4,-1,-3,-4,10,-1,1,-5,8,5,2,-3,10,-7,-5,1,7,8,4,-3,8,-7,5,-7,-9,-10,-4,-3,4,9,-2,-3,-2,-1,3,-3,7,1,3,4,10,-4,-7,-1,6,4,-10,-9,8,-9,3,1,1,3,-9,7,-8,-6,-7,-8,6,-4,-9,-9,2,-7,9,6,-9,7,3,1,-4,-8,5,5,-10,-6,-2,7,2,-9,-1,4,-4,-1,-4,8,-1,-8,-4,6,3,-4,-8,9,6,-4,2,8,6,3,-2,-7,-7,9,-9,7,8,7,4,-7,-3,-7,6,3,5,-3,6,1,-6,-7,5,9,7,1,-1,2,-9,2,-4,-1,-2,-7,-6,-4,-1,1,6,3,-7,5,-3,5,5,9,-2,-8,5,-3,-8,-5,-9,-6,8,8,-4,-5,-1,-10,6,6,10,-4,-3,-5,-5,1,9,-1,-9,-2,4,-9,-6,1,-8,1,5,2,2,9,10,-3,7,5,3,-8,-3,-1,-8,10,-3,6,8,-4,-5,-10,-4,3,-7,7,6,-6,-6,7,-3,-2,1,4,5,-10,2,-7,-4,-8,-1,-10,2,-5,5,4,2,-2,-3,-2,4,-9,3,3,-6,-8,-7,3,2,-8,3,-5,-8,-10,3,9,6,-8,-6,6,-1,1,1,-7,-6,-2,-9,-6,3,-7,-9,-8,6,4,6,-4,-4,-4,10,10,8,-5,-10,-5,-6,-3,-1,-10,6,9,-3,10,-9,-2,8,5,5,-5,2,10,-2,-2,4,2,-5,-4,5,6,8,4,-2,-4,-10,4,10,-9,8,7,-5,-4,9,1,-1,9,8,7,-4,-7,-1,8,6,6,-3,6,4,-10,-7,1,1,7,-5,9,5,-6,8,10,3,10,10,6,5,9,9,7,-9,-1,-9,6,6,-10,7,-10,7,8,5,1,10,-1,-1,-2,5,5,-2,7,2,-4,-9,-1,4,4,-5,-1,-9,7,3,10,-3,-1,5,-4,-5,-8,-3,-1,-2,8,1,4,2,-10,1,2,-5,8,10,9,-10,-2,-9,2,1,9,-1,-4,4,-9,-3,8,3,10,-8,1,-9,1,-9,9,2,1,-5,-8,8,4,8,9,-8,7,9,3,2,-6,-6,-10,-7,4,8,8,9,7,-6,3,5,-1,9,-2,8,3,-3,2,3,-9,-8,-7,1,-8,-10,2,-10,-2,4,9,2,-8,4,6,-8,10,-3,4,-1,-4,3,10,8,-2,8,6,3],[6,4,5,-8,-7,-2,-9,-5,-5,9,-10,7,-9,3,-6,9,-4,-5,-4,-5,-6,-4,-1,-9,7,-2,-5,1,4,9,-2,4,-1,6,2,8,2,6,-3,2,3,9,4,9,-5,10,7,3,10,5,3,-1,-7,8,2,-10,-3,10,-8,-5,-9,8,6,-6,-1,10,4,8,-10,9,-6,6,7,-7,7,6,7,-2,5,9,8,-1,3,-6,-6,7,-6,-1,1,6,10,-3,-7,-9,-4,-2,10,-7,-3,-7,7,-2,9,6,3,-7,5,1,-5,-8,-9,-1,2,-5,10,5,-8,-2,10,4,-9,8,10,-10,10,-4,-6,1,5,-2,-7,-4,-4,9,-4,9,5,1,-9,-10,7,-7,1,3,-3,10,-2,3,1,-1,-7,2,10,-7,4,-7,3,6,-3,9,3,-3,4,-4,8,-3,8,8,9,-6,-5,6,6,-4,-10,-4,-4,2,3,-4,1,-5,-3,6,8,-6,6,5,-1,-2,1,8,1,3,3,-4,-7,5,3,3,-5,6,-9,3,9,-5,-1,8,-10,-5,-10,-1,-9,-8,-6,-4,10,-2,1,2,-1,2,9,-4,-1,-4,-10,-2,9,-1,-3,-8,5,5,-5,5,4,-8,7,2,2,1,-8,1,2,-4,7,9,4,-7,9,-7,-1,-5,-6,6,-10,-10,-7,8,10,-6,6,8,-7,10,-9,10,1,-8,-2,-5,-9,-3,-3,-8,4,2,9,-1,5,2,-8,5,10,4,-6,-4,-3,5,-7,1,-7,1,-2,-2,-4,2,9,-1,1,-8,-6,3,-9,-7,1,8,-10,-4,3,-9,10,-1,9,7,7,8,-10,-3,1,-5,-8,10,2,-8,10,6,-1,1,8,1,-5,-9,9,-4,-1,-3,-2,7,-9,-2,2,-10,-2,-2,-9,6,-1,-7,-6,-1,9,-6,-6,-6,-7,3,4,-4,-2,-7,-9,-5,7,-1,2,-9,-7,-4,7,-8,-10,-4,6,-3,4,1,2,-4,-7,-9,8,-2,3,7,-7,4,8,4,-6,2,6,5,-9,-6,-5,-5,-4,-7,-4,7,-1,-1,-9,-5,-1,-6,2,6,10,6,-10,10,8,3,4,-3,10,-8,-8,-7,9,7,-5,-3,-4,4,-1,-8,-4,1,10,4,10,3,4,9,3,5,9,-7,-8,-9,-5,-8,-7,-8,-4,10,-4,-6,-3,2,-2,-8,-6,6,-5,-2,9,1,10,-6,2,10,9,4,10,-9,-4,3,-1,-5,3,9,9,9,-9,-6,1,9,-2,1,1,-6,7,7,10,6,-3,-5,-7,2,1,1,5,-9,2,-1,-10,-10,-10,-6,-2,4,-9,8,7,-6,-9,10,6,1,9,-3,-2,-7,3,-1,-6,-10,5,-5,-7,1,-7,-10,-10,10,-6,8,5,8,-9,-3,-3,-1,9,1,6,-4,10,-5,6,10,8,7,5,3,4,10,7,8,-7,3,-10,8,10,2,1,-7,-2,-4,2,1,-3,5,-2,7,-3,-5,-9,5,-8,-9,-1,-10,3,-1,1,-10,3,-6,10,6,-8,-6,-6,8,2,-5,-4,-5,6,1,-8,-4,10,-9,5,-4,8,2,3,-10,-7,-7,7,-9,7,-4,5,-9,-10,-3,-4,10,7,8,3,-6,-10,-3,-4,-3,4,-10,-5,-2,-7,-4,2,-3,-7,2,6,10,10,6,-8,6,6,9,-5,10,7,-3,7,9,-6,6,6,1,-1,-1,5,9,5,5,-10,-4,-9,6,-2,2,6,1,3,-2,-8,-3]], dtype = "uint32")#candidate|6293|(2, 672)|const|uint32
call_6290 = relay.TupleGetItem(func_4773_call(relay.reshape(var_6291.astype('uint8'), [15, 12, 10]), relay.reshape(var_6292.astype('uint64'), [385,]), relay.reshape(const_6293.astype('uint32'), [1344,]), ), 3)
call_6294 = relay.TupleGetItem(func_4778_call(relay.reshape(var_6291.astype('uint8'), [15, 12, 10]), relay.reshape(var_6292.astype('uint64'), [385,]), relay.reshape(const_6293.astype('uint32'), [1344,]), ), 3)
func_994_call = mod.get_global_var('func_994')
func_998_call = mutated_mod.get_global_var('func_998')
var_6298 = relay.var("var_6298", dtype = "int8", shape = (576,))#candidate|6298|(576,)|var|int8
call_6297 = relay.TupleGetItem(func_994_call(relay.reshape(var_6298.astype('int8'), [6, 8, 12]), relay.reshape(var_6298.astype('int8'), [6, 8, 12]), ), 0)
call_6299 = relay.TupleGetItem(func_998_call(relay.reshape(var_6298.astype('int8'), [6, 8, 12]), relay.reshape(var_6298.astype('int8'), [6, 8, 12]), ), 0)
uop_6302 = relay.cos(var_6291.astype('float64')) # shape=(3, 600)
output = relay.Tuple([bop_6272,call_6290,var_6292,const_6293,call_6297,var_6298,uop_6302,])
output2 = relay.Tuple([bop_6272,call_6294,var_6292,const_6293,call_6299,var_6298,uop_6302,])
func_6306 = relay.Function([var_6270,var_6271,var_6291,var_6292,var_6298,], output)
mod['func_6306'] = func_6306
mod = relay.transform.InferType()(mod)
var_6307 = relay.var("var_6307", dtype = "float32", shape = (6, 13, 9))#candidate|6307|(6, 13, 9)|var|float32
var_6308 = relay.var("var_6308", dtype = "float32", shape = (6, 13, 9))#candidate|6308|(6, 13, 9)|var|float32
var_6309 = relay.var("var_6309", dtype = "uint8", shape = (3, 600))#candidate|6309|(3, 600)|var|uint8
var_6310 = relay.var("var_6310", dtype = "uint64", shape = (385,))#candidate|6310|(385,)|var|uint64
var_6311 = relay.var("var_6311", dtype = "int8", shape = (576,))#candidate|6311|(576,)|var|int8
output = func_6306(var_6307,var_6308,var_6309,var_6310,var_6311,)
func_6312 = relay.Function([var_6307,var_6308,var_6309,var_6310,var_6311,], output)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6435 = relay.var("var_6435", dtype = "float64", shape = (12, 2, 8))#candidate|6435|(12, 2, 8)|var|float64
var_6436 = relay.var("var_6436", dtype = "float64", shape = (12, 2, 8))#candidate|6436|(12, 2, 8)|var|float64
bop_6437 = relay.divide(var_6435.astype('float64'), relay.reshape(var_6436.astype('float64'), relay.shape_of(var_6435))) # shape=(12, 2, 8)
output = relay.Tuple([bop_6437,])
output2 = relay.Tuple([bop_6437,])
func_6440 = relay.Function([var_6435,var_6436,], output)
mod['func_6440'] = func_6440
mod = relay.transform.InferType()(mod)
var_6441 = relay.var("var_6441", dtype = "float64", shape = (12, 2, 8))#candidate|6441|(12, 2, 8)|var|float64
var_6442 = relay.var("var_6442", dtype = "float64", shape = (12, 2, 8))#candidate|6442|(12, 2, 8)|var|float64
output = func_6440(var_6441,var_6442,)
func_6443 = relay.Function([var_6441,var_6442,], output)
mutated_mod['func_6443'] = func_6443
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6686 = relay.const([[[-10,-9,-9,2,-2,-8,-5,-5,-2],[2,-10,7,9,6,-8,-3,10,-5],[-6,-6,5,7,9,-10,6,-10,-4],[2,7,-7,-9,-1,-2,-9,5,-5],[9,10,-4,10,-4,-8,9,2,-10],[-9,9,9,8,10,-5,-6,6,4],[-6,-2,9,1,-2,4,-1,-10,-4],[-4,8,8,6,10,7,4,10,-6],[-7,-7,-9,10,5,-4,10,-1,-9],[-4,2,9,-9,5,-2,-10,-9,10],[9,9,2,3,1,-2,5,-5,9],[-8,-8,8,5,9,-5,3,-8,8],[-8,-6,6,-9,-6,-10,10,-5,-5],[8,-3,6,-5,3,-3,-7,-3,10],[-1,-2,3,3,-4,-2,1,8,7],[3,-5,7,-9,-9,-5,4,7,-2]],[[2,4,4,-4,5,1,8,-4,-2],[8,-3,-4,5,-4,-5,-5,-4,2],[6,-4,-10,3,-1,-10,5,-4,7],[7,-7,-6,-1,-9,1,-4,-9,-8],[-5,6,7,9,-6,-10,-3,6,-10],[-2,7,-6,5,7,-2,3,-7,5],[7,-6,9,7,-3,-9,7,-3,-5],[3,1,-3,7,10,7,8,1,6],[-9,1,-5,-4,4,-7,6,-8,-1],[10,7,4,7,-9,-7,8,7,8],[10,6,-9,2,6,4,10,-7,-6],[-2,-2,-9,5,5,-9,-6,6,2],[9,-5,-3,-10,3,-2,8,-1,-3],[1,10,-2,10,-7,-3,4,-4,-5],[-7,1,-4,-8,5,5,2,9,-2],[10,-2,8,5,-7,10,7,1,-7]],[[1,9,7,-5,2,10,5,-9,6],[-2,1,1,3,9,5,9,5,1],[6,10,10,-5,9,-1,1,-5,3],[4,-3,-10,-10,4,8,9,1,-1],[1,-3,-8,-7,-10,-1,-8,8,7],[10,6,-5,9,-6,3,-9,-3,-5],[9,-10,-4,-1,-6,-4,7,-10,-9],[-7,7,1,1,4,-4,-7,-3,-1],[9,-9,-1,6,10,10,1,10,-1],[1,10,-5,6,-9,-8,4,-2,-2],[8,2,-6,-7,-2,-8,-7,4,-4],[-6,-1,-7,-5,8,-6,2,-8,1],[-9,-2,5,-3,-9,-4,5,3,-2],[7,-3,-7,-7,2,5,1,2,-6],[-3,1,-5,-5,4,-8,-8,6,-2],[-2,-3,-4,10,4,-9,10,1,-6]],[[-8,-7,-8,-3,-2,2,1,4,-10],[4,-6,-1,9,8,5,-6,-4,-9],[10,3,-10,-7,-8,-7,-1,-8,7],[3,3,6,5,4,7,-6,-3,10],[-3,-4,-1,-9,10,-9,-9,5,-6],[-1,-6,-2,6,1,-6,-1,-1,-10],[-6,5,6,-4,-8,6,-3,5,-2],[2,5,-7,4,2,5,-8,-2,-8],[6,-5,3,8,-10,3,10,-10,-7],[-9,-5,8,4,-10,6,-9,9,9],[-7,6,-10,9,-4,-6,-6,-4,8],[10,6,10,-7,6,-3,8,2,9],[-2,-5,-7,-7,-7,-3,-3,-7,-2],[-2,-6,-7,-3,-10,6,10,-8,-4],[5,-10,-2,-7,8,3,9,-1,4],[-5,-2,6,4,5,1,1,-1,-10]],[[3,-8,-9,3,8,4,-1,-1,-4],[10,-4,-2,-6,-3,-3,2,10,9],[2,-9,5,2,-2,10,9,4,4],[-8,-10,-9,-6,8,-10,-3,-10,-1],[-6,2,6,-4,1,8,-7,-8,-9],[-9,-6,1,6,8,-6,1,-2,2],[5,2,-5,3,-9,8,-8,5,3],[-9,9,7,8,9,-10,-7,8,-1],[4,-4,5,-4,-10,6,-4,4,-4],[-1,8,-2,3,-1,3,-4,6,-1],[-2,3,-2,7,5,1,2,-2,4],[-9,5,5,-4,6,-9,-10,-10,2],[1,9,-1,-7,-2,3,3,2,2],[8,8,-5,-1,-7,7,2,-7,5],[-1,10,1,9,5,-4,9,-2,-7],[2,-9,8,8,-5,-1,2,-3,5]],[[-8,-8,4,-10,7,9,-7,2,2],[6,-10,-5,-1,2,1,-8,2,2],[7,10,-5,7,-2,10,1,-3,6],[3,-7,1,-4,9,-4,-3,-4,-4],[2,1,-4,-7,8,7,10,-3,-7],[-6,-5,7,7,-10,-3,-10,-10,10],[-5,-1,8,6,10,-6,-6,-9,7],[-10,-6,-7,-7,-5,-9,2,-1,-6],[-9,-9,-4,7,5,-2,-2,9,5],[8,-3,10,7,8,3,8,-8,2],[-10,-5,4,9,10,-3,-4,-6,5],[2,7,1,6,1,-8,10,-3,5],[2,3,-4,8,7,-8,1,-6,2],[8,1,-3,-6,7,10,7,7,-6],[6,2,10,-8,2,1,5,1,3],[-3,9,-8,-3,10,3,-5,-2,4]],[[7,-4,8,-2,-7,7,8,-8,-3],[5,9,7,3,-5,-9,6,-1,-6],[10,-1,2,8,1,7,2,9,-7],[-5,10,-5,9,6,4,8,-1,-2],[9,1,5,2,-9,-9,9,9,6],[-10,-5,-4,10,6,2,-4,-7,-1],[-4,2,-5,-2,-6,6,4,6,2],[-2,-3,6,6,4,-3,-8,9,-10],[2,1,-4,-2,2,-10,10,-9,-8],[-8,-2,-8,9,-4,7,-3,8,6],[10,10,8,8,-2,2,-3,4,3],[2,7,2,-2,2,-8,3,8,2],[5,-3,9,7,-6,-7,3,2,-7],[-6,1,10,6,-9,-1,8,3,3],[7,-3,-10,-3,-10,-3,-9,-6,6],[-10,-1,7,-2,-8,-8,-6,-10,9]],[[7,-5,7,4,6,8,7,-4,-9],[-2,8,5,-2,3,9,-4,-6,-5],[-6,10,-8,5,6,-6,10,5,10],[4,-8,6,10,4,-8,8,-8,7],[7,-5,-3,8,-1,-3,-1,-2,5],[8,7,-3,3,-10,-10,-8,9,9],[-4,-5,-8,-7,7,-9,7,-10,-9],[9,2,4,-6,-10,6,9,4,9],[4,10,3,-4,5,5,4,-8,3],[2,-4,6,-10,2,-9,-6,4,4],[3,10,-9,6,8,4,3,1,-6],[9,-10,-10,1,1,1,-7,-3,-4],[9,-8,3,-8,-5,6,-6,7,-8],[-4,-4,6,-10,10,9,6,6,-7],[-5,5,-4,3,-8,5,-9,4,-5],[9,-3,-9,-4,2,-10,-7,4,6]],[[5,-9,2,-8,2,-4,-2,2,-1],[10,7,-5,9,-5,6,-10,-3,-5],[-2,7,4,-10,-4,4,3,-1,3],[9,-8,4,6,-6,-4,5,5,-1],[3,7,-4,-5,4,9,-3,-1,5],[-6,1,1,4,-3,-7,-10,-6,10],[-10,6,2,-5,-6,-8,4,-3,8],[2,1,5,-10,10,3,-5,-6,9],[6,7,-8,2,-10,7,-8,-4,-6],[9,-3,1,1,-7,7,-9,7,7],[-10,9,4,8,7,-3,10,-1,2],[-6,-10,-2,-8,9,4,5,5,-1],[-10,-4,-2,1,10,-4,-4,5,-5],[10,-5,-1,5,2,9,-2,6,-7],[-5,-10,-10,5,-7,7,-7,-5,4],[-1,3,-2,9,-5,-9,5,3,-9]],[[2,-7,6,10,9,-6,-1,-5,-2],[-1,10,-10,-8,-3,10,4,-7,10],[-4,-7,-6,-7,1,3,8,8,8],[9,1,-9,-5,3,-3,-3,3,-2],[-2,6,-1,-9,-3,-7,3,8,-9],[6,-1,5,-4,-3,-10,-6,3,8],[-10,-3,3,5,7,3,2,3,8],[1,10,-9,-8,5,-6,5,9,9],[9,2,-9,5,2,-7,8,2,-2],[8,-5,-3,-5,7,10,10,9,-9],[-6,-2,-4,1,-8,10,6,-2,-1],[2,-7,2,4,-9,3,-5,-2,-7],[7,6,3,-7,-4,-9,-6,-10,1],[-10,-5,2,-7,-7,2,-3,4,-6],[5,-5,2,3,7,1,-5,-5,-2],[-8,-1,-5,-1,-4,8,-1,3,4]],[[-9,3,10,6,-9,-8,9,9,3],[5,-4,10,-10,7,-6,-1,9,3],[-10,-7,-3,9,10,-1,3,10,6],[-9,10,10,-8,1,4,7,4,-4],[-8,8,-2,3,-3,-1,3,-5,-8],[9,7,3,5,-9,3,-7,-6,-1],[1,4,-8,-5,6,6,-7,2,-4],[-7,-7,9,10,3,8,-4,7,-5],[4,-8,9,6,8,10,-3,2,-3],[-1,8,9,-5,6,-1,-9,-10,5],[10,5,-9,9,-2,-3,-3,-8,-6],[6,7,5,3,-5,10,2,1,-5],[10,4,6,-7,-10,9,-1,7,-9],[8,-8,-4,-2,8,2,6,1,6],[-7,-8,7,3,4,-5,-6,-4,-5],[3,-3,-1,-6,8,4,5,-6,-8]],[[-2,-10,3,-9,10,3,10,-3,7],[-9,-8,8,-1,-5,6,2,6,-4],[9,8,-7,-5,7,3,1,-4,-8],[-2,7,-8,3,-3,-3,-10,2,-2],[-8,-9,6,-8,-3,7,-7,4,8],[-9,3,-2,8,-9,-9,-1,-9,-4],[2,3,6,-9,-8,-7,7,9,-7],[-4,-2,-7,-3,10,1,-8,-9,10],[-8,-8,-4,-3,2,-10,-3,-8,-9],[-6,5,6,-1,1,-5,5,10,2],[-10,-6,8,-5,-2,6,10,-6,9],[3,8,1,-4,9,-2,9,-7,-6],[3,-6,4,8,5,1,10,7,7],[-3,8,7,4,-4,5,4,1,4],[-3,3,10,3,7,10,-9,7,7],[-7,-1,10,1,5,3,1,-4,3]],[[6,4,7,7,8,-3,-9,-4,1],[8,7,6,-3,-7,1,2,7,1],[1,9,-4,-2,5,5,9,10,9],[7,4,10,3,3,10,-3,-3,-2],[-7,2,-2,9,-10,-9,-8,-10,8],[8,-4,3,-4,-8,-9,4,7,-9],[10,-10,9,-1,4,9,-3,-7,-7],[-2,-7,6,1,5,5,-6,-1,7],[-6,9,10,-5,-5,2,3,3,-6],[-7,10,-6,-5,9,-1,-8,-5,-10],[-6,-9,-9,5,7,-3,8,2,1],[2,-2,-4,7,1,-2,8,6,-1],[10,-7,5,-2,2,-2,1,1,-4],[6,8,7,8,7,5,-1,5,4],[9,-4,1,6,-9,7,3,-9,1],[-10,-1,5,7,5,-3,4,6,-5]]], dtype = "int64")#candidate|6686|(13, 16, 9)|const|int64
var_6687 = relay.var("var_6687", dtype = "int64", shape = (13, 16, 9))#candidate|6687|(13, 16, 9)|var|int64
bop_6688 = relay.minimum(const_6686.astype('int64'), relay.reshape(var_6687.astype('int64'), relay.shape_of(const_6686))) # shape=(13, 16, 9)
func_994_call = mod.get_global_var('func_994')
func_998_call = mutated_mod.get_global_var('func_998')
var_6714 = relay.var("var_6714", dtype = "int8", shape = (576,))#candidate|6714|(576,)|var|int8
call_6713 = relay.TupleGetItem(func_994_call(relay.reshape(var_6714.astype('int8'), [6, 8, 12]), relay.reshape(var_6714.astype('int8'), [6, 8, 12]), ), 0)
call_6715 = relay.TupleGetItem(func_998_call(relay.reshape(var_6714.astype('int8'), [6, 8, 12]), relay.reshape(var_6714.astype('int8'), [6, 8, 12]), ), 0)
output = relay.Tuple([bop_6688,call_6713,var_6714,])
output2 = relay.Tuple([bop_6688,call_6715,var_6714,])
func_6719 = relay.Function([var_6687,var_6714,], output)
mod['func_6719'] = func_6719
mod = relay.transform.InferType()(mod)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6719_call = mutated_mod.get_global_var('func_6719')
var_6721 = relay.var("var_6721", dtype = "int64", shape = (13, 16, 9))#candidate|6721|(13, 16, 9)|var|int64
var_6722 = relay.var("var_6722", dtype = "int8", shape = (576,))#candidate|6722|(576,)|var|int8
call_6720 = func_6719_call(var_6721,var_6722,)
output = call_6720
func_6723 = relay.Function([var_6721,var_6722,], output)
mutated_mod['func_6723'] = func_6723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6813 = relay.var("var_6813", dtype = "int64", shape = ())#candidate|6813|()|var|int64
const_6814 = relay.const([[[2,-9,5,-4,-3,3,-6,10],[5,2,-5,2,-6,6,7,2],[-1,-8,10,1,1,-9,-8,10],[-8,-1,-9,8,4,-5,-3,-2],[8,3,2,-3,7,-1,2,-10],[6,-5,6,10,9,-1,-2,1]],[[1,-8,-5,7,5,-8,-9,-9],[-2,10,10,-8,-7,5,1,9],[-7,6,-10,-3,9,3,-10,3],[-9,-1,-6,7,-7,-3,8,2],[-1,-7,-1,5,4,8,-2,-7],[7,-9,-7,6,-9,-10,-1,2]],[[1,2,-2,2,6,-9,2,-9],[-3,1,5,2,4,-2,-6,-6],[4,9,-6,-9,10,3,5,10],[-2,-10,6,-4,-7,7,1,-10],[-3,10,-9,-4,-8,-2,8,-2],[1,-9,5,-9,-10,-6,4,-5]],[[-7,6,5,-7,-6,-9,-1,7],[5,10,9,-2,10,1,4,-10],[-2,-6,-8,-1,2,-1,1,4],[3,-5,7,-5,-3,-10,-2,-7],[7,-1,-6,9,2,-10,7,-8],[2,-7,1,4,6,-3,4,-1]],[[5,8,-4,-9,7,9,7,-6],[-3,6,3,-1,5,9,6,-2],[2,2,9,4,5,1,3,9],[-10,-9,6,-4,-4,2,-3,-2],[-6,-4,-8,-2,2,-4,-1,-10],[-7,-6,10,6,4,-5,4,-3]],[[2,5,8,2,1,4,9,4],[4,1,-1,10,-4,-2,4,9],[7,-5,-1,4,5,5,1,-1],[1,-2,8,-8,9,-1,9,9],[3,-10,5,6,9,3,3,8],[-6,6,2,-6,-8,-4,-6,5]],[[-10,-4,7,4,-1,10,3,-8],[8,-2,-2,1,-5,6,-1,1],[-6,-6,-4,10,1,1,-8,4],[-5,-4,7,6,2,3,5,-5],[-8,-3,-3,-10,-3,-10,-10,-4],[-1,3,-6,9,-2,-9,8,-9]],[[5,1,-5,4,-9,-10,7,7],[4,5,10,-8,-6,-1,-3,3],[2,-7,4,-8,6,-6,-2,2],[-3,-6,10,-7,-2,-5,9,-4],[1,-10,3,-9,-6,3,-8,-5],[-1,-3,-6,-9,9,5,1,10]],[[1,8,10,2,-4,5,7,4],[1,-10,10,-5,-5,-8,10,-10],[-8,2,8,5,8,-8,7,4],[9,-5,3,-9,-10,5,-3,-10],[5,-2,-7,-7,-4,-9,-6,1],[7,6,5,10,-2,-5,2,-7]],[[-9,-10,-5,-1,-3,-4,-3,6],[-10,-2,10,10,9,-9,3,7],[-7,8,7,3,-10,-1,-9,-5],[-1,-3,8,-3,1,9,-9,5],[5,-8,-3,-2,-5,7,10,-2],[-6,-2,-10,-3,-8,-2,1,3]]], dtype = "int64")#candidate|6814|(10, 6, 8)|const|int64
bop_6815 = relay.maximum(var_6813.astype('int64'), const_6814.astype('int64')) # shape=(10, 6, 8)
output = bop_6815
output2 = bop_6815
func_6825 = relay.Function([var_6813,], output)
mod['func_6825'] = func_6825
mod = relay.transform.InferType()(mod)
var_6826 = relay.var("var_6826", dtype = "int64", shape = ())#candidate|6826|()|var|int64
output = func_6825(var_6826)
func_6827 = relay.Function([var_6826], output)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7057 = relay.const([[[-8.948392],[-7.963144],[0.183791],[-7.439466],[9.211895],[-7.409493],[-8.485571],[6.630423],[-9.158052],[-0.131052]],[[7.067773],[8.001732],[8.539080],[-5.881988],[0.069557],[9.559533],[-5.772560],[1.693778],[4.522001],[3.165146]],[[4.921124],[4.366003],[9.149444],[8.132556],[-2.935111],[-4.571525],[-9.524798],[7.702700],[1.107768],[-5.457799]],[[-1.423523],[-1.520760],[9.107271],[-5.472637],[1.784195],[6.044181],[9.718676],[5.764148],[3.753216],[-8.691910]]], dtype = "float32")#candidate|7057|(4, 10, 1)|const|float32
uop_7058 = relay.atanh(const_7057.astype('float32')) # shape=(4, 10, 1)
output = relay.Tuple([uop_7058,])
output2 = relay.Tuple([uop_7058,])
func_7060 = relay.Function([], output)
mod['func_7060'] = func_7060
mod = relay.transform.InferType()(mod)
output = func_7060()
func_7061 = relay.Function([], output)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7135 = relay.TupleGetItem(func_7060_call(), 0)
call_7136 = relay.TupleGetItem(func_7061_call(), 0)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_7161 = relay.var("var_7161", dtype = "int32", shape = (70,))#candidate|7161|(70,)|var|int32
const_7162 = relay.const(-7.619002, dtype = "float32")#candidate|7162|()|const|float32
var_7163 = relay.var("var_7163", dtype = "float32", shape = (288,))#candidate|7163|(288,)|var|float32
call_7160 = relay.TupleGetItem(func_1888_call(relay.reshape(var_7161.astype('int32'), [70,]), relay.reshape(const_7162.astype('float32'), []), relay.reshape(var_7163.astype('float32'), [4, 72]), ), 7)
call_7164 = relay.TupleGetItem(func_1893_call(relay.reshape(var_7161.astype('int32'), [70,]), relay.reshape(const_7162.astype('float32'), []), relay.reshape(var_7163.astype('float32'), [4, 72]), ), 7)
func_2749_call = mod.get_global_var('func_2749')
func_2753_call = mutated_mod.get_global_var('func_2753')
var_7169 = relay.var("var_7169", dtype = "float64", shape = (1800,))#candidate|7169|(1800,)|var|float64
call_7168 = relay.TupleGetItem(func_2749_call(relay.reshape(var_7169.astype('float64'), [12, 15, 10]), relay.reshape(var_7169.astype('float64'), [12, 15, 10]), ), 3)
call_7170 = relay.TupleGetItem(func_2753_call(relay.reshape(var_7169.astype('float64'), [12, 15, 10]), relay.reshape(var_7169.astype('float64'), [12, 15, 10]), ), 3)
output = relay.Tuple([call_7135,call_7160,var_7161,const_7162,var_7163,call_7168,var_7169,])
output2 = relay.Tuple([call_7136,call_7164,var_7161,const_7162,var_7163,call_7170,var_7169,])
func_7177 = relay.Function([var_7161,var_7163,var_7169,], output)
mod['func_7177'] = func_7177
mod = relay.transform.InferType()(mod)
var_7178 = relay.var("var_7178", dtype = "int32", shape = (70,))#candidate|7178|(70,)|var|int32
var_7179 = relay.var("var_7179", dtype = "float32", shape = (288,))#candidate|7179|(288,)|var|float32
var_7180 = relay.var("var_7180", dtype = "float64", shape = (1800,))#candidate|7180|(1800,)|var|float64
output = func_7177(var_7178,var_7179,var_7180,)
func_7181 = relay.Function([var_7178,var_7179,var_7180,], output)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7190 = relay.TupleGetItem(func_7060_call(), 0)
call_7191 = relay.TupleGetItem(func_7061_call(), 0)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
var_7193 = relay.var("var_7193", dtype = "float32", shape = (432,))#candidate|7193|(432,)|var|float32
call_7192 = func_30_call(relay.reshape(var_7193.astype('float32'), [9, 6, 8]))
call_7194 = func_30_call(relay.reshape(var_7193.astype('float32'), [9, 6, 8]))
func_3714_call = mod.get_global_var('func_3714')
func_3717_call = mutated_mod.get_global_var('func_3717')
var_7207 = relay.var("var_7207", dtype = "float32", shape = (189, 1))#candidate|7207|(189, 1)|var|float32
var_7208 = relay.var("var_7208", dtype = "float64", shape = (112,))#candidate|7208|(112,)|var|float64
call_7206 = relay.TupleGetItem(func_3714_call(relay.reshape(var_7207.astype('float32'), [9, 3, 7]), relay.reshape(var_7208.astype('float64'), [2, 56]), ), 0)
call_7209 = relay.TupleGetItem(func_3717_call(relay.reshape(var_7207.astype('float32'), [9, 3, 7]), relay.reshape(var_7208.astype('float64'), [2, 56]), ), 0)
func_527_call = mod.get_global_var('func_527')
func_530_call = mutated_mod.get_global_var('func_530')
var_7217 = relay.var("var_7217", dtype = "int32", shape = (14,))#candidate|7217|(14,)|var|int32
const_7218 = relay.const([7,-1,-5,-5,1,-9,3,-10,-9,8,1,-6,-3,-3,1,4,4,-10,-8,-1,2,-1,3,-10,4,-10,-3,2,-1,7,-7,-9,6,-9,-8,-3,-10,3,-6,8,1,7,-8,2,-3,1,-9,2,4,8,-2,10,7,-5,-8,-3,3,-7,-10,-10,9,7,-2,3,-10,7,4,-4,-3,-4], dtype = "int32")#candidate|7218|(70,)|const|int32
call_7216 = func_527_call(relay.reshape(var_7217.astype('int32'), [2, 7, 1]), relay.reshape(const_7218.astype('int32'), [2, 7, 5]), )
call_7219 = func_527_call(relay.reshape(var_7217.astype('int32'), [2, 7, 1]), relay.reshape(const_7218.astype('int32'), [2, 7, 5]), )
bop_7221 = relay.floor_mod(var_7193.astype('float32'), var_7207.astype('float32')) # shape=(189, 432)
output = relay.Tuple([call_7190,call_7192,call_7206,var_7208,call_7216,var_7217,const_7218,bop_7221,])
output2 = relay.Tuple([call_7191,call_7194,call_7209,var_7208,call_7219,var_7217,const_7218,bop_7221,])
func_7231 = relay.Function([var_7193,var_7207,var_7208,var_7217,], output)
mod['func_7231'] = func_7231
mod = relay.transform.InferType()(mod)
var_7232 = relay.var("var_7232", dtype = "float32", shape = (432,))#candidate|7232|(432,)|var|float32
var_7233 = relay.var("var_7233", dtype = "float32", shape = (189, 1))#candidate|7233|(189, 1)|var|float32
var_7234 = relay.var("var_7234", dtype = "float64", shape = (112,))#candidate|7234|(112,)|var|float64
var_7235 = relay.var("var_7235", dtype = "int32", shape = (14,))#candidate|7235|(14,)|var|int32
output = func_7231(var_7232,var_7233,var_7234,var_7235,)
func_7236 = relay.Function([var_7232,var_7233,var_7234,var_7235,], output)
mutated_mod['func_7236'] = func_7236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7266 = relay.TupleGetItem(func_7060_call(), 0)
call_7267 = relay.TupleGetItem(func_7061_call(), 0)
uop_7272 = relay.log(call_7266.astype('float64')) # shape=(4, 10, 1)
uop_7274 = relay.log(call_7267.astype('float64')) # shape=(4, 10, 1)
func_7177_call = mod.get_global_var('func_7177')
func_7181_call = mutated_mod.get_global_var('func_7181')
var_7277 = relay.var("var_7277", dtype = "int32", shape = (70,))#candidate|7277|(70,)|var|int32
const_7278 = relay.const([2.515736,-7.892263,9.512730,0.257652,-6.630080,-6.402504,-6.590085,6.695362,4.260741,2.501512,7.812841,-1.273661,-9.532049,5.694826,-0.658647,1.577242,9.583213,8.492400,4.443115,-7.114498,1.748503,4.700128,8.260027,5.443341,3.326971,-0.334366,7.644947,-4.988510,-1.893439,6.027829,-9.102458,-1.591194,3.031223,-7.521368,-0.444270,-7.895479,3.948931,-8.622888,-9.938234,7.664599,-6.308045,-2.844323,-8.085874,8.611795,-9.213466,-2.482906,6.859060,-6.853474,-1.417922,-0.398058,6.192709,-0.066067,-9.167454,-6.557255,-8.505020,-0.316044,2.706695,6.916595,-6.338714,-7.898527,4.169139,6.704736,1.434175,7.420994,-7.765882,-3.320855,-2.649273,-6.686608,9.018307,-6.358890,8.987618,2.848525,2.033520,-4.995447,1.980484,7.979159,3.936871,-6.695680,-3.240303,-6.302805,9.725122,0.972159,9.536764,-9.630975,-6.644381,5.703715,-3.505083,-6.129678,7.104503,8.906423,6.540460,7.826317,7.277919,7.316191,-9.880470,-7.323672,-6.230148,4.997025,1.191951,7.264302,-8.278190,4.773540,1.551908,6.291325,8.746388,9.902143,8.980979,8.177901,-3.335986,-7.350664,0.201194,-2.941269,-3.840038,7.518572,-8.623318,0.123397,7.979902,6.153489,-4.621023,3.938024,2.763794,-8.279416,-0.007247,7.248245,-5.098133,8.806236,-5.638622,-5.747831,2.806386,-9.405854,-9.194478,5.926801,1.522146,-5.823478,3.900773,5.178664,-3.014557,0.042382,6.712714,-0.463079,-5.785236,2.308308,6.106645,-6.272691,-0.892675,-7.813927,-3.551301,-9.248079,-0.641295,-0.229258,3.056364,-9.640388,9.179377,-5.897275,-7.268436,0.392721,-7.514678,2.435508,-4.013344,-0.356265,3.959364,4.918622,-0.313336,5.307316,-9.597999,-5.431722,3.994455,4.124056,-0.053065,7.113649,-3.711313,-0.316596,-5.986832,0.365706,9.508033,8.417730,-3.689130,-4.333058,-5.553872,-0.551372,8.282532,-5.992705,5.260210,-6.295354,9.139427,2.877298,-1.254473,-1.114411,8.634594,1.516667,-7.751636,8.156134,0.837431,7.412655,0.401190,-0.840102,2.576195,8.841802,-7.649004,-2.756212,-5.316339,-9.015479,0.977229,6.456668,-8.604557,2.666366,5.496792,5.036681,5.295219,-9.874461,-5.511996,9.056846,-4.961407,6.848344,-3.747625,-6.382710,4.220838,5.346372,-0.277059,8.778023,3.716122,7.379583,-4.956691,4.693329,8.074394,-6.581711,-2.173803,9.783481,8.676283,-0.638996,9.727296,-6.694885,4.952585,4.950485,-7.371269,-9.601962,-8.940619,-2.932093,-5.915963,-9.297808,3.136499,-3.379930,-8.288238,-4.807809,-1.020734,-5.157794,-3.902853,-8.004723,-6.862590,5.844102,-9.938534,5.581079,5.017039,9.800922,0.323916,1.835291,0.658142,8.489141,-7.523067,4.137902,-9.892736,-2.280732,-7.060764,-8.551896,-8.464492,3.785973,1.976084,7.931810,-5.655342,-9.868489,-5.270133,-2.412836,5.338529,-1.079092,-3.839864,-4.236750,6.565411,8.857079,5.780191,-9.779104,4.792330,1.651901,-2.629725,9.357754,3.565652,6.000172,4.690711,4.274679], dtype = "float32")#candidate|7278|(288,)|const|float32
const_7279 = relay.const([[-3.303496,8.252455,-4.164306,1.569174,8.322765,-7.998099,9.072932,7.625274,7.611972,-8.193478,9.362319,6.024097,5.250770,-8.399778,-7.195803,-2.988237,-7.623255,-7.148537,6.802471,1.859916,-1.201751,8.023306,5.554001,-6.363569,1.792556,3.108973,-4.782695,-6.040266,9.329248,-8.376731,-3.641340,-6.100254,-7.808822,-7.987293,-4.799982,-9.120650,6.441641,-3.750068,1.262375,-9.338008,9.779821,9.457995,-5.074621,1.966184,-3.161694,2.112819,4.877597,2.276745,-4.121490,1.746060,4.273244,2.200209,1.272145,7.791880,-3.514443,9.740223,7.637961,8.527527,-9.069048,6.154902,-9.641833,-3.831096,-0.719592,-7.957176,4.951900,2.055008,8.814388,1.770269,-9.181263,0.567023,-8.607898,6.315605,6.836364,9.988213,4.666631,-1.414815,8.291742,1.813592,-5.707509,-8.214869,5.022173,3.913767,-8.674538,9.595291,6.346154,6.142040,-1.135464,-4.280011,-2.275045,5.729018,-1.371988,1.186477,-7.521476,-9.179189,-2.381309,-9.211065,-9.421770,0.239949,2.416169,-5.938783,4.672645,-5.509473,-1.971913,-9.204960,8.234868,-0.465823,5.118955,9.843645,8.554094,4.605949,6.666029,6.321392,5.481526,-5.013531,-7.322827,2.953002,1.735228,6.615487,-2.962710,-0.017539,1.002759,-2.175829,-6.021669,7.794124,0.378411,-8.435453,-4.274586,-6.545458,-5.694365,-1.894711,1.318617,-5.171554,-4.299077,-7.469395,0.866477,-0.634270,-7.424182,-5.651028,-3.515462,-6.755839,-5.201975,-6.196512,-1.255797,-5.040363,-1.392459,6.425916,-0.795619,-2.930187,9.777491,-6.078195,2.414912,-8.393132,9.111217,-1.665434,-5.742629,5.708721,1.314130,1.700328,-2.334718,-2.298786,6.105783,7.457811,-9.370068,-1.069974,-6.760876,-3.507955,9.157812,4.893416,7.128630,-8.725165,-6.968766,-9.182675,-9.650344,-3.719851,9.009506,0.306985,-6.573135,7.091743,-6.173109,6.076951,-7.251392,-1.755505,-4.297715,-1.658112,5.907383,8.573201,-1.141576,-8.276390,6.332542,4.969118,5.693962,9.595972,6.892202,-7.097910,-6.889721,5.006169,-3.998092,-4.699627,5.758428,-3.941555,-0.264396,6.547159,-6.988645,9.184348,-9.914928,-4.981286,5.996469,7.889848,-1.061643,-0.949826,4.765135,7.684945,7.686652,-1.283366,-9.327700,5.285107,-1.834717,8.332707,-4.501902,3.305790,-0.909959,6.634437,2.859335,-9.438001,-8.148863,9.870891,-3.460302,9.210226,-8.911044,7.050530,8.188465,2.670625,3.228450,-4.869069,1.223423,-3.662286,6.718607,9.936800,-1.401880,6.699767,-7.236417,3.523428,6.788023,-8.074823,-1.299073,5.288710,3.719947,-2.440844,9.409740,-7.566020,-5.029728,-2.877497,-7.367463,-6.609811,-8.757992,-0.688074,-7.669971,3.382956,-3.673296,-5.929989,1.589055,-1.337933,-7.306987,5.576845,5.273772,1.004818,-7.873219,-5.450153,3.648993,-6.032595,-6.012619,1.954610,-0.257610,-6.186712,-4.192188,5.349562,-0.701144,-7.206399,-1.746663,9.318104,-8.843760,0.594617,-8.516989,1.373399,1.980625,6.242878,-9.405767,-5.301368,-4.408178,-1.086716,0.052105,-8.487041,4.950839,4.255375,4.303373,-3.396629,5.718947,-9.976543,5.387403,4.668284],[6.091099,-7.410398,7.083604,-1.870932,0.816734,1.208909,0.051913,9.941875,-8.824126,-7.652276,0.661335,5.025677,0.780136,-8.723071,-7.979951,8.776575,9.808262,9.230543,-1.699496,-6.813671,-4.040816,6.149813,8.721563,4.903250,7.859740,9.696747,-9.041356,1.097884,5.898557,-0.520065,4.940882,8.524568,2.029502,-4.428472,5.398485,2.433944,-8.169995,1.073968,8.824783,2.311243,-6.365026,4.402172,-5.144322,-4.698827,9.228703,7.329472,-9.650597,7.225232,6.648629,-4.431415,-9.992395,1.512769,-0.306194,-2.936229,4.934854,-3.748553,5.849819,-7.830035,-0.610912,0.008281,5.836893,-4.423329,3.390502,6.636581,8.187816,3.071677,9.519027,-2.594839,1.248536,-1.469750,7.401441,2.807264,-6.806233,-7.900865,-9.828883,-1.929961,-3.640801,-3.816708,-6.862139,-5.440833,8.355342,1.539678,-7.969239,-2.669227,5.055812,-8.914816,0.495326,1.269898,7.916682,-1.096587,0.456422,4.442359,8.939754,1.917746,5.193723,-8.848253,-2.597579,-7.524247,5.049908,-7.413471,3.099042,5.592321,-5.973194,-4.738841,-4.515576,-4.660976,-2.283828,3.946926,9.052315,0.472046,5.186034,3.384392,-4.551314,-3.660816,-3.348048,-7.600488,-7.869420,-7.003033,-5.240021,-2.235270,1.137357,-8.168379,2.265377,0.133692,-2.505862,2.736064,-1.954587,5.907844,-4.195498,3.163189,3.019348,-2.122557,1.175537,-4.326102,-4.779646,4.892649,0.752220,8.576704,6.578701,9.430460,8.495198,8.824929,1.835404,-6.472108,4.066266,-8.827673,1.976252,-2.316263,3.528933,-0.472699,1.457951,1.415041,4.627490,3.036401,-3.230716,8.360494,-3.391000,8.205103,3.630739,2.854416,3.490714,1.881936,8.817765,-9.586360,0.099668,-3.166856,-9.186570,4.703496,-2.364510,-5.393438,-2.001358,-8.500676,0.588453,-1.755848,-1.238210,1.623090,-9.561411,-2.627108,-6.913201,-7.858219,-6.606565,-1.958386,8.219296,-4.582349,7.631426,-9.681951,-3.115160,-4.723765,-5.898940,4.844859,-5.994516,6.693827,2.044510,-1.101778,-6.088657,2.646036,4.824194,0.380528,-6.924561,-4.257334,-1.444825,2.305986,-2.778060,-2.978884,-7.314010,4.441289,-1.004236,0.421123,-9.498076,1.900504,4.059474,0.371718,5.095177,5.977308,0.476662,4.811855,-8.227594,-6.014819,-1.137602,5.775413,-2.614178,9.563600,3.588342,2.346192,3.763068,-8.203967,2.055577,7.993630,-1.664875,-1.948019,4.164734,-0.537361,-8.831888,-0.361541,9.754126,-7.449921,-3.784027,1.833056,-6.989300,6.644598,6.539174,-7.057248,-0.330734,8.322401,-7.750303,-7.786231,3.995411,3.332873,9.866483,-7.861992,-8.934621,0.254561,6.163286,-6.986143,8.968633,0.558155,-6.986272,4.303586,0.441808,9.380297,3.329409,3.401840,-0.464426,-8.573763,-2.172133,9.451676,0.394675,1.655770,9.815373,9.831938,-4.868121,2.445094,-0.660063,0.519065,-5.929441,-4.546210,-9.013969,-6.872009,-8.691059,-4.271371,-5.853245,4.202395,-5.217738,-9.741048,3.298046,-0.029433,-5.865212,-4.310564,1.142961,-8.954390,-3.516459,7.781416,0.586423,-0.748371,-1.454933,-7.968373,-1.256851,2.558241,6.837105,-9.012816],[8.961207,-0.214940,-0.383098,-7.830726,-7.209309,4.925262,8.349427,1.829242,7.961569,7.207905,-8.841997,-8.048778,0.757451,-8.477465,8.612367,2.867110,3.257065,-7.652374,-5.604086,7.710812,3.374522,-4.967257,9.379941,0.626512,0.152598,2.053396,1.295023,-0.827027,5.952840,9.425255,0.586864,3.955005,-3.298224,-8.924958,-3.458047,3.301419,0.305927,1.043496,2.142033,8.564219,0.937544,-3.390755,-8.923766,3.474962,9.346191,-5.985035,-4.986724,-3.043311,2.833464,7.258586,-4.672788,4.714833,-3.822252,4.117087,-0.964456,-3.772910,4.050555,-8.074365,1.289827,9.031713,-8.448700,7.445835,8.780997,3.307485,7.587139,-6.215122,8.616187,8.863165,-7.595139,3.785173,6.086229,-1.830430,-2.170265,-7.272346,1.325154,6.025579,0.570177,-7.750080,-5.244164,2.525485,-6.819172,3.926741,2.831235,-2.624826,3.626418,-0.174896,6.940113,6.695298,5.109168,-4.306606,2.841519,-1.851977,-5.486041,7.533527,-8.913978,-3.071564,5.474364,-2.060126,-7.337806,-4.855117,-1.526495,-4.978128,-7.523687,-3.389829,4.007039,-8.339864,-6.489979,9.216415,1.052751,0.521830,5.453040,-3.815624,2.995692,-1.863637,2.524370,-8.495450,9.767165,-7.805778,-2.591243,-3.603619,4.704557,6.934941,8.555582,-9.416023,8.039847,4.368437,-3.768632,6.230050,-8.603053,1.297274,3.053980,-5.593035,1.085595,-4.067889,3.658259,0.193958,4.889826,-4.726697,-3.831947,1.402977,-2.427679,-6.508347,-9.296902,-5.413570,2.675559,4.333618,1.578160,-2.178290,-0.587313,2.520423,2.646904,-9.774344,5.585662,9.430867,9.230805,1.882932,7.875397,-8.001807,-2.099163,6.627003,2.722492,-6.430867,-9.163125,9.220281,9.475182,-7.470652,5.131938,7.503969,5.476755,-1.861403,3.134291,-1.576116,-7.986398,-0.602412,1.981683,-5.696028,-8.756545,-3.512904,7.211682,2.088634,-4.949741,4.384475,-2.796661,-3.883781,-6.250541,2.948504,-7.721105,-5.377990,-9.299889,0.027359,-8.894411,-2.466152,-3.104528,6.835995,-1.977116,-7.537963,-4.349502,5.485628,-4.353839,-4.915894,-9.993923,-8.500178,8.935100,9.371632,-6.117023,-8.202003,1.726788,6.657645,0.203782,2.420001,-1.554518,-0.928030,-1.676881,9.518473,8.440216,8.107236,5.225468,-5.143464,-9.741201,7.178069,8.940971,-9.169984,-3.479563,-2.617260,-9.983635,-1.203334,-1.452286,-7.315818,-7.378506,2.293417,4.655629,5.442892,2.912033,-2.766378,-2.324731,-3.473643,6.241980,-3.608302,-6.341898,8.288159,-1.370157,3.064810,-6.296807,4.036899,-9.303423,-9.158116,9.124771,-8.846038,0.275638,8.661139,-6.640923,9.769568,-9.968296,-0.239416,1.258752,0.641540,8.394171,-2.136857,-4.725296,-4.863860,-5.925021,9.372051,-6.837060,-7.528155,-7.080782,7.514075,2.679778,-3.225832,-2.416910,4.565296,-5.620109,-6.102351,7.094985,0.657269,-2.754014,-6.510918,-4.134770,0.624942,-8.157063,-4.144869,0.532970,8.578611,5.889917,-0.055019,-6.871040,5.548084,-2.325736,-8.247335,-8.137723,-0.227582,0.538623,8.659476,-4.739103,3.038629,8.932299,7.261019,5.926297,4.044354,-3.799588,5.613708],[6.900664,8.047492,-7.996836,-4.633737,9.823932,3.322905,6.866322,-8.718042,4.088267,-7.627224,6.250352,2.743052,2.550967,1.791516,-9.158259,-9.369365,2.881483,-1.627265,-1.501868,-7.842268,8.171959,-6.371688,6.037085,-4.926147,-0.008759,3.005480,-0.057488,3.650237,3.394613,9.167956,9.578845,-3.559597,7.093563,-8.941356,7.389111,5.615559,-4.548540,8.968169,-2.763840,8.852982,4.361150,-3.330035,7.433895,7.897545,1.691115,6.836134,-0.384388,2.406653,-5.126439,1.047461,5.223464,-9.110433,6.844271,7.260013,9.866397,-5.927542,3.261475,-3.293878,-2.837161,0.708473,-3.117306,-7.281103,-0.271588,-7.766470,0.733575,-4.150024,-9.136151,2.173314,7.947365,9.460665,9.798503,3.462706,-1.050061,3.745066,6.628681,-5.398906,9.024833,-4.801754,2.166030,-3.723756,2.554060,5.090916,3.625314,2.875728,8.986036,3.841945,-1.494620,2.308188,-6.924625,-3.283742,5.095842,1.256432,7.464446,7.232227,-8.021883,-8.260531,-7.094181,0.909508,-3.563054,-2.628742,2.371478,-7.920245,-9.671873,9.706324,-1.295900,-0.747283,-1.737222,0.327240,-5.947543,-7.908237,-8.471584,-6.335666,-5.981427,2.650401,-9.031323,-7.848442,2.606871,5.512913,-3.742160,8.699924,-0.197961,5.825030,8.468264,9.609711,9.920561,0.546456,-5.956645,-6.410941,0.228990,8.603191,-3.978056,-5.790158,-9.283558,3.324908,-0.111259,6.566329,0.590797,5.117086,2.382335,-0.949020,1.821430,7.340178,2.931038,-9.095469,8.984114,-0.474653,-0.262482,3.433706,-2.494410,0.549125,0.142328,-9.161962,9.985639,-2.242372,-3.954796,3.836960,-6.774877,3.318047,1.215094,-8.590972,0.393105,-5.653949,1.017583,-5.489554,-9.103946,-9.941733,-2.061861,-2.429689,2.053763,0.472645,1.324973,0.199550,7.854642,2.643558,-4.092121,7.564459,-0.452530,1.591012,1.281145,-3.237007,-6.185522,-8.074971,2.236950,-8.725448,4.138070,-2.359838,1.207945,-8.702894,-8.350384,9.399064,4.065536,-3.693243,-6.046840,-1.509435,9.744002,5.604994,4.920058,-4.621187,5.999612,6.830219,-9.073337,8.130564,8.575882,-2.022352,-9.771884,3.262541,-1.735413,8.090052,3.540931,4.654039,-6.788154,-4.299877,-1.707833,-1.784832,-3.478240,-8.642904,0.766045,-8.927116,2.612606,-5.968807,-2.499600,1.996919,5.221769,3.788760,-3.869756,5.866845,7.068863,1.671297,6.949571,3.558707,9.852284,-3.144929,-3.351299,-6.104705,-1.643544,2.491412,-6.706549,9.477542,1.570728,-9.571089,7.179128,2.648191,-7.941944,-1.125633,-7.949536,0.263462,0.901518,1.374434,-2.011342,3.210731,-6.476785,5.106492,-7.048751,0.933449,5.262686,7.903180,4.860720,5.398301,9.214218,9.986693,-5.909161,-8.113331,3.363791,7.140298,0.104215,-7.693775,1.888302,-9.346626,-5.644496,1.237966,0.323078,2.483989,3.558492,-7.096607,-0.927918,8.715660,-9.445160,1.058671,0.934964,4.046949,2.550403,-1.842638,4.087147,-4.434964,-3.536599,2.597478,0.607750,8.521304,-8.903710,7.161848,2.885455,6.365040,-0.721219,2.762095,8.566214,-4.780899,-6.543980,1.292933,5.817506,-3.645386],[2.715109,-9.078621,-1.330838,-6.686728,2.375978,0.037707,-4.796568,1.054622,3.026831,-1.972813,0.998284,-1.577634,8.975089,-7.611580,2.065250,6.194551,-6.020811,7.465909,5.713916,6.905019,-5.888704,0.195319,2.041341,3.289484,-9.210208,6.644441,0.337835,6.028964,0.352186,5.730279,-9.286013,-0.119438,-1.761077,4.842329,8.637896,1.585569,-6.319578,-3.020767,7.588408,-7.721128,5.385415,5.876275,4.341311,8.305740,-5.351712,-7.565676,6.859709,-8.593356,-3.106426,5.541294,-5.824324,5.254172,-1.710244,9.876381,-0.133768,7.194386,1.325611,-1.781709,6.323363,-4.201959,-5.282166,8.873891,1.412053,-1.264255,1.591847,9.690407,-0.395614,-1.436281,-6.516819,-0.961500,-8.163356,-4.071403,-7.895138,-5.439638,-4.566951,-0.303269,3.231398,8.225485,0.494636,8.986792,8.256358,-3.479740,5.920383,-6.354896,-1.417996,-8.611091,-1.754492,0.145188,4.312394,1.699617,-2.564994,0.461059,4.711363,-2.279309,-3.325792,8.958098,-9.192892,0.795105,5.539951,1.929333,-7.356976,-8.686503,-6.804432,8.419046,3.405422,7.104310,-7.890503,-3.213986,4.463590,-9.122065,-7.640465,-8.732426,-4.340041,-7.422645,6.382768,3.748368,-5.402219,7.272378,0.664702,-4.399522,9.318611,-2.831957,-9.537136,8.650371,3.158061,5.444304,2.535624,-7.762086,8.161895,1.059727,-5.839993,-0.423045,-5.838294,1.747805,2.873212,0.881598,-9.812495,-6.051686,-8.697291,-0.022464,-3.591660,6.712104,6.735616,5.838653,-6.458057,-3.568901,4.565396,4.009389,-9.656035,-9.634269,6.531960,-6.994914,5.950867,-5.359310,-3.847022,-4.337345,5.456715,-0.518951,1.685059,2.842998,0.761528,9.964269,7.772743,-5.383553,2.934022,1.102522,-9.851593,-3.694179,-3.674361,4.710381,-1.666825,0.605871,6.293106,-0.210315,6.106958,4.327555,5.497454,-1.648575,1.355148,-2.310103,8.912662,7.050579,0.947149,1.590977,1.715575,-2.000168,-6.758929,0.364057,-1.741941,5.591456,6.938106,-7.207688,6.879752,3.199818,4.089133,9.662192,3.745330,6.417962,0.973524,0.147584,9.502533,-5.508544,4.957013,-7.947343,2.547550,-7.918501,-8.772077,-7.159290,7.721288,-6.380929,4.353827,4.465769,5.075918,-3.330180,8.721412,7.815638,4.467117,3.754812,2.978318,-8.405334,2.594162,9.862444,5.870987,9.830882,-8.052990,-1.428817,0.089450,-7.651388,-6.476835,3.930729,-2.579860,-9.899912,-7.643923,9.256718,7.214037,8.357541,-9.240160,-9.476967,-9.663610,-6.629301,-8.866411,-8.189264,-4.882292,-9.803436,6.526152,-7.492891,-4.718117,-8.301619,-5.846373,-0.798519,4.523269,-2.149847,-8.900029,-0.048125,-0.203625,6.067317,2.237407,0.614322,9.440301,-7.731748,0.076834,-4.205736,9.917791,0.063692,-7.814707,-4.485784,2.008699,0.809630,6.370636,-2.838114,-0.717791,-9.117652,8.844212,1.017815,4.601972,-4.703258,4.071221,-7.550178,7.665851,-6.856034,6.492776,1.950242,-3.919024,0.990161,-6.172567,1.909753,4.169290,-8.423473,1.792724,9.730985,9.062867,-1.319753,1.034712,-7.469031,-2.187009,-0.026088,3.015901,-0.969217,3.915996,1.716662],[8.304593,-2.110587,4.045093,4.274963,6.938166,6.470831,-8.398741,6.084133,7.176331,-7.500032,-0.181737,4.434287,4.314985,1.116807,4.461319,-1.638585,-7.519358,-0.523973,-7.593295,-7.403256,-4.198699,-9.334817,7.540684,-4.536760,3.278082,-2.385389,-6.878066,4.971762,8.946966,-3.245226,-3.335229,2.431446,9.099710,-7.531106,-2.537030,1.832592,-3.304890,0.379941,8.757958,-3.151059,3.375697,8.486701,1.456150,9.170883,3.407011,4.666350,-9.443719,-0.913405,-8.668898,7.846144,-8.427943,-7.614077,1.917661,-1.907875,9.843599,9.585997,-1.399281,-5.620454,-7.271180,-2.065783,2.325452,5.878106,6.379781,-2.031114,-6.701237,-7.552879,-3.172325,9.229704,-1.863829,9.902421,0.864442,-8.839357,6.387466,0.020301,-9.601329,1.249684,0.698968,-7.185820,1.321345,8.172330,-0.068343,-4.850425,-4.489627,-0.976221,2.294865,-0.736219,3.971442,-3.937132,-4.964448,-9.490791,-8.196610,-8.982284,-1.429714,-8.428448,6.378544,2.807765,0.466467,4.043601,0.686025,-4.493247,2.333210,1.687585,-7.746777,4.355670,0.514346,7.614006,2.142198,-7.476666,-1.185737,6.470031,-4.423253,-0.913172,-0.889873,8.960431,4.260042,1.073387,-3.548571,6.770075,-3.085178,1.768949,-4.135823,4.765778,7.838335,3.898767,-6.929558,4.095454,3.737817,-2.709026,0.648259,-4.529230,-2.868733,4.108952,-2.269446,3.098622,3.812491,5.297185,8.055593,-9.476558,-5.627899,6.838094,-6.995092,4.947158,-6.219931,-7.064963,4.709011,-3.514568,-7.756067,-1.416658,6.422743,9.868157,7.336606,-3.554516,-2.852890,0.729224,6.113233,6.943865,9.406904,3.750840,3.111906,-1.822120,-6.867799,-6.772149,-0.293518,-3.560478,-4.596281,7.111803,-7.664440,-7.788087,-5.752279,6.699227,-2.379806,3.060183,1.323824,0.688962,-0.136835,5.391854,1.839476,3.227444,-0.397050,6.717290,-3.832421,-3.501935,-1.575046,3.736110,-9.752715,-8.582237,2.313491,1.197754,2.253718,4.821219,-4.961388,-9.375682,-6.853119,4.658835,5.651817,3.839667,3.818601,-1.969663,7.674525,-1.253736,-7.077181,-5.562171,6.085787,-6.274162,0.412291,-1.660009,-9.803442,1.184032,6.686208,-5.370321,7.327297,-9.165478,2.015224,-4.463580,-1.766295,6.056566,-4.620096,-4.821414,2.718803,-6.044159,5.199087,-9.478206,4.721287,-5.328616,-6.936352,-8.598161,0.862756,2.792607,6.127093,4.316457,-0.442987,0.419382,-4.180191,-3.806210,-3.728160,-2.167284,-7.701225,-4.509476,-9.153928,-0.319519,6.294108,-9.333073,8.371880,5.191178,-1.936884,-9.586542,1.805522,2.748488,3.096935,4.862852,-1.840058,7.541127,-6.979728,-1.232848,6.614782,-7.393993,5.934686,9.845305,-2.138465,-9.763456,1.411186,4.691933,-0.162214,-0.088374,9.058605,6.691926,-4.265114,-4.235840,-2.058539,1.016056,2.551111,-2.952328,5.986623,0.267261,6.997144,-0.996101,-6.896713,5.494890,-4.962021,-0.273753,-1.064164,5.975583,2.658871,9.415153,-0.070659,6.721643,-9.313786,7.628738,9.937189,9.123554,-2.211388,8.877732,-9.654907,6.955227,-2.040326,-2.678013,9.030654,6.567902,7.037430,6.705558]], dtype = "float64")#candidate|7279|(6, 300)|const|float64
call_7276 = relay.TupleGetItem(func_7177_call(relay.reshape(var_7277.astype('int32'), [70,]), relay.reshape(const_7278.astype('float32'), [288,]), relay.reshape(const_7279.astype('float64'), [1800,]), ), 0)
call_7280 = relay.TupleGetItem(func_7181_call(relay.reshape(var_7277.astype('int32'), [70,]), relay.reshape(const_7278.astype('float32'), [288,]), relay.reshape(const_7279.astype('float64'), [1800,]), ), 0)
output = relay.Tuple([uop_7272,call_7276,var_7277,const_7278,const_7279,])
output2 = relay.Tuple([uop_7274,call_7280,var_7277,const_7278,const_7279,])
func_7285 = relay.Function([var_7277,], output)
mod['func_7285'] = func_7285
mod = relay.transform.InferType()(mod)
mutated_mod['func_7285'] = func_7285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7286 = relay.var("var_7286", dtype = "int32", shape = (70,))#candidate|7286|(70,)|var|int32
func_7285_call = mutated_mod.get_global_var('func_7285')
call_7287 = func_7285_call(var_7286)
output = call_7287
func_7288 = relay.Function([var_7286], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7354 = relay.TupleGetItem(func_7060_call(), 0)
call_7355 = relay.TupleGetItem(func_7061_call(), 0)
output = call_7354
output2 = call_7355
func_7358 = relay.Function([], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mutated_mod.get_global_var('func_7358')
call_7359 = func_7358_call()
output = call_7359
func_7360 = relay.Function([], output)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7371 = func_7358_call()
call_7372 = func_7358_call()
func_1121_call = mod.get_global_var('func_1121')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_7376 = relay.var("var_7376", dtype = "float32", shape = (1, 160))#candidate|7376|(1, 160)|var|float32
call_7375 = func_1121_call(relay.reshape(var_7376.astype('float32'), [8, 2, 10]))
call_7377 = func_1121_call(relay.reshape(var_7376.astype('float32'), [8, 2, 10]))
output = relay.Tuple([call_7371,call_7375,var_7376,])
output2 = relay.Tuple([call_7372,call_7377,var_7376,])
func_7378 = relay.Function([var_7376,], output)
mod['func_7378'] = func_7378
mod = relay.transform.InferType()(mod)
var_7379 = relay.var("var_7379", dtype = "float32", shape = (1, 160))#candidate|7379|(1, 160)|var|float32
output = func_7378(var_7379)
func_7380 = relay.Function([var_7379], output)
mutated_mod['func_7380'] = func_7380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7389 = func_7358_call()
call_7390 = func_7358_call()
func_3593_call = mod.get_global_var('func_3593')
func_3597_call = mutated_mod.get_global_var('func_3597')
const_7400 = relay.const([[6.741456,-6.116025,7.396202,0.219005,-5.966764,-8.136289,1.659565,-5.242151,-9.244831,-9.548715,5.441498,-8.241441,-5.031481,-6.122237,-0.580034,9.035213,-8.764761,8.697588,-0.064868,-3.976658,-4.065876,3.277493,1.394347,-6.534292,9.607677,-7.631039,6.527289,9.326844,-8.616318,-4.114771,6.961443,-0.649249,5.186208,-0.001887,6.359088,5.903738,9.734271,9.779464,-9.834487,-7.638650,-5.691530,7.711953,2.834304,4.616751,-2.798353,-0.641529,-2.342765,6.446445,5.325232,0.608194,-6.853603,-7.367552,5.097269,-1.724534,-4.731730,7.145997,7.646752,-8.821060,-6.357418,-8.324318,-0.537002,-0.457455,6.315310,-8.622566,8.023459,0.924061,-6.595852,8.266348,3.831539,-2.415397,-0.384401,9.856327,-3.707854,8.615274,5.287168,0.431364,-0.466935,-1.139086,8.812649,-2.665235,3.059957,-1.255498,-1.404907,2.493308,0.889594,2.233325,-8.842878,7.087579,-3.047851,1.927496,-6.790670,8.902048,-9.268106,-6.434818,9.235506,5.596016,1.313843,-5.522790,5.113300,7.805925,2.600757,8.636325,2.775871,-9.294211,2.377705,-2.157495,-0.945436,-6.487981,2.980595,-0.447843,-9.156252,0.246588,2.785645,0.245468,-7.310738,0.947931,0.685453,3.795740,8.459233,-0.637035,1.185820,-6.695649,4.523795,-7.498006,-3.560646,7.407765,-3.360796,-8.542757,-7.913336,9.698603,-4.835246,2.383516,0.848228,5.106267,-8.744435,8.313248,-1.380333,-8.442438,-7.300378,-8.280981,5.333872,8.755926,6.665555,-8.244822,8.130752,-7.509586,-8.446464,3.791320,-9.524866,9.555244,9.007827,-6.077476,-9.414564,5.603464,1.932273,0.840063,3.338353,8.090531,-7.278877,-6.028798,5.737170,-3.463330,-2.552606,6.346917,-6.111289,-9.575277,9.870405,2.679269,1.060570,-4.036892,-0.221299,0.498387,9.294099,-5.315512,-6.689909,9.693866,9.316765,-7.877040,-2.394714,-5.425632,-3.179412,-3.243168,0.050041,3.615273,-1.985133,-3.852304,-6.396654,-1.669163,-6.755786,9.496930,2.137050,-7.920055,-7.246690,0.184007,-2.862043,1.173387,-3.816646,-5.550099,4.309382,-9.945976,5.116155,4.188053,-0.298769,7.876598,-3.995645,-3.859735,-8.198116,6.797773,7.834549,1.012554,-8.720000,-2.851110,-3.324740,7.227988,-5.244508,3.461498,-0.281470,3.945115,-1.241656,1.736303,-3.659176,-1.836098,-4.839507,3.533764,-1.592257,7.884340,-4.892655,2.539834,-6.331112,-8.511600,-0.049451,-9.479242,-9.640939,-8.208984,1.651360,-3.176464,6.693781,-6.980429,-2.156501,8.808365,-4.977812,3.586926,-1.402960,9.488202,3.435154,3.891437,5.797769,-4.677149,-0.361710,-0.204278,-2.491944,8.955242,0.745859,9.737381,0.085526,9.095208,8.940883,-1.697537,4.790151,-8.791600,-1.815474,3.947340,-7.547238,4.552101,-9.185836,-0.085520,-9.483638,-0.826273,7.728264,1.426870,-5.115733,-5.863002,-7.954816,4.948075,-5.755490,-4.780107,1.849752,-2.109683,-6.057677,-7.324251,0.526635,9.346083,-9.874147,7.493693,-1.610306,6.380490,1.622352,-6.606323,-2.440080,-5.604262,-4.819501,0.808732,-1.068749,3.775110,-4.085995,2.715348,-2.681932,5.274441,-9.022206,-0.112149,-7.131006,1.644692,6.485072,5.590642,0.754690,-3.255264,-8.570544,2.330387,5.859545,0.893463,5.791861,6.215337],[-1.686692,-9.357935,6.084800,6.100277,-9.501363,-9.717480,-0.162027,-1.248468,9.946334,1.372852,-8.211448,-1.373992,8.220827,1.277810,-4.650398,-7.754977,-5.444226,9.388599,5.200740,6.097485,4.160567,1.685646,2.062563,3.533002,-3.307191,-7.732367,9.929823,-7.584633,7.314191,9.426512,-6.338798,-8.209364,4.329647,8.079951,-7.862201,-7.582078,-9.424856,9.499066,7.270916,-5.041567,-2.596563,6.432334,6.515203,-7.306316,6.188452,-5.927113,-9.188513,-7.354646,-8.723287,-0.976032,-3.518279,-4.283612,0.843492,-1.488714,-8.987415,-6.204625,-9.166050,-5.917861,-4.510060,-1.918522,0.617694,7.143203,6.141496,2.961619,9.485854,-2.622274,-1.870659,-9.125891,-1.641499,9.238240,0.810578,6.601110,2.125539,2.508124,1.504786,2.387666,-6.312703,-9.437419,5.510487,2.691517,4.426972,-5.896495,-3.437699,5.530624,-2.171172,8.203884,9.589273,8.327168,3.034219,-1.451577,-8.688305,3.735919,-0.908050,-3.345181,5.258750,5.705199,7.629321,-6.747022,-1.402929,-4.104045,-1.365127,7.164880,7.707528,-0.860252,1.506311,0.488795,3.835383,1.098338,-2.603094,9.771630,4.897674,-9.605423,-0.123615,8.970902,3.976517,6.094640,4.405027,2.070639,8.807654,0.053437,-2.831068,-9.983214,2.703534,7.308793,7.583963,1.700445,3.897258,0.201050,9.059259,0.629668,6.084717,-4.221784,3.113412,6.793259,-0.385881,4.535902,4.342566,-8.155058,3.563928,-4.203254,-3.082896,-9.355842,2.874903,8.890804,-3.174492,5.867881,-0.365712,-0.510823,5.611780,-8.217366,8.178434,-3.952315,-3.028710,3.456269,9.330474,-1.862716,-6.276137,6.348774,8.292288,-7.212960,0.951719,4.740957,7.006693,3.042351,0.468666,-2.494763,-4.635078,2.515524,1.359847,-2.350371,-0.861330,-3.294799,7.485388,-6.984451,6.372754,-3.166194,0.426961,-3.192954,-6.874288,9.717416,4.196783,-5.904556,6.107344,-1.903532,-2.473267,8.241254,-8.564843,2.484035,1.179485,-3.479337,-8.125185,-0.171564,-1.002008,3.065665,-2.363030,-5.796063,-0.256870,3.912377,-2.503881,1.251864,1.477871,1.986838,-8.952406,4.851239,-6.332100,-4.087216,2.780307,-4.481344,4.189533,-1.902582,9.600598,-1.833753,0.877501,7.842532,6.326688,-4.871663,3.812196,-7.125289,2.400859,1.022550,8.878992,-8.147699,-5.148872,-7.360184,-0.954487,-3.801383,6.877719,-1.530574,-2.284985,-3.373930,-3.300886,-8.828938,-8.245656,5.925728,8.068042,-8.022490,0.995797,1.265663,8.390143,0.705975,-6.135987,4.233208,-5.725007,-6.719980,7.594717,1.186816,2.840614,6.915898,-4.562137,6.701562,-9.707568,5.514156,4.769472,8.012146,-3.910201,-1.424639,-4.803628,3.803285,4.542490,-6.068288,-8.045258,-6.374745,6.734671,-1.976407,7.943739,3.397165,6.348210,9.513137,3.185771,5.741846,7.634679,-6.491070,-3.213338,1.691796,5.376936,-8.222477,3.857285,-2.310464,2.477834,-9.056461,-2.276985,-9.775765,-8.519071,-5.183503,-3.187469,-9.337837,-6.756278,-9.003243,-6.716864,-3.421346,9.213214,8.541831,-6.535366,0.289361,-7.619043,-6.356550,-9.049462,-6.491436,-5.127660,-2.917815,0.862351,-5.647046,-4.572654,-2.995056,-1.930825,-3.981408,7.615753,-7.442161,0.590214,8.682358,-0.593889,7.475280],[-3.690232,3.809993,-1.975096,-1.922438,-0.286694,8.525255,4.276339,5.525625,6.459708,5.742799,-8.355458,-3.285982,2.870821,7.793020,6.719884,-0.108264,1.548672,-8.025672,-5.853779,2.439242,4.525221,1.697952,-5.646087,8.297954,-8.547873,-4.898729,-2.825539,8.965476,3.250802,7.298063,9.686786,-2.891139,-6.629353,-7.987531,1.713189,1.787446,5.910942,1.510496,-6.465297,7.902042,2.842960,2.619045,-5.782550,-2.578829,0.378219,-7.717750,9.713776,6.644672,6.727928,-1.395861,1.409591,3.834203,-5.004370,-8.455380,8.287652,-2.548820,-8.391971,6.322803,-0.519246,-4.023127,8.986685,-5.754485,3.965585,-7.479576,1.088269,-0.445469,4.020779,1.765049,-8.906906,-7.248272,4.293563,9.501185,-0.643352,-5.645349,-6.258354,-1.014104,2.981727,-0.808338,9.145206,3.556886,-1.851991,9.123658,-0.467377,6.740560,0.408337,-0.744682,-6.764961,-0.312930,-6.880486,1.457739,2.187327,2.631031,-5.589760,6.736575,-5.541231,4.395524,-6.003343,-4.080046,3.036336,-8.607003,1.347221,-8.676620,-1.366734,-8.570462,3.259450,1.798936,-5.784076,-4.707195,-4.657512,-3.413760,-9.166940,9.077875,-5.323697,3.169148,-2.362229,-7.691789,7.614110,0.295888,9.921816,-4.385692,-8.250738,3.593301,-5.362659,9.135762,-7.321945,-6.640562,1.202594,8.629184,2.056519,-3.849671,-8.174901,-6.522859,7.569391,4.432323,0.075975,4.150691,2.182443,-5.886668,-9.551267,0.734218,8.520478,-2.545663,9.043724,4.469979,-5.934877,-2.632821,-1.164312,-0.536882,9.154865,4.151238,-9.600561,-3.152259,9.842592,3.536985,-0.525296,-6.270796,-5.447454,4.150051,6.994033,8.117369,-3.653080,-1.686550,-8.912565,-0.606586,6.709753,-0.461595,-1.711658,9.452403,-8.802458,-1.035601,2.464992,-9.920312,1.476834,-2.163487,-2.926220,-1.016937,3.577681,-3.359785,-7.592697,3.145752,-5.259533,4.845381,-6.446008,-8.812527,3.257380,-5.564842,-4.623898,5.323032,-7.929967,-2.653811,8.627325,1.854962,6.424281,-0.991712,-8.418857,6.721711,4.571832,6.727843,-1.983331,-3.732227,-5.891931,-4.486738,-1.624906,-9.405842,9.960578,2.670035,-5.176909,-2.110117,-4.623045,7.646641,-3.759289,2.687129,1.854432,-7.447144,7.713962,9.544029,4.207618,-9.244791,6.962994,-5.768663,6.826404,0.468870,-6.250581,7.524210,-6.810028,0.208867,-4.452377,7.574857,8.328109,8.668681,-5.640986,3.115168,-2.229012,2.345566,-3.397556,1.742450,-8.582971,8.243241,-4.206772,6.373290,0.989593,3.914322,-5.107263,4.055703,-4.246492,-2.471377,-3.066382,-4.472280,2.835669,-4.039976,7.382361,1.414717,2.335409,-4.745640,8.567682,-4.373308,-4.578480,-8.026477,-4.896556,3.691289,-8.812917,-8.473004,4.136011,-2.798229,-9.712037,-2.988783,-9.456781,8.364927,1.189489,2.391411,-4.922248,4.258647,1.108807,5.247524,-9.955780,1.726400,-7.201983,4.905685,-1.803223,-9.965076,-0.578405,3.828732,-7.803755,-6.270526,-6.262199,-4.930916,-9.122706,-2.357195,-8.530983,7.290701,-2.626798,5.767895,-4.171348,-6.227924,-1.296252,-9.124299,1.265874,6.325066,-5.741646,7.957979,8.121730,3.932486,-7.499629,-7.224316,7.108354,4.042504,-0.223564,-4.684657,8.256068,3.793596,3.913951,-4.944870],[5.067851,-9.285354,-9.995896,6.066738,-9.041808,7.640720,-6.320663,0.735629,5.263839,2.128163,8.709767,8.133824,-7.846165,4.329572,-0.079904,-8.701468,0.571685,3.814963,1.640268,-7.533172,-6.736277,-8.590673,7.877533,-8.598566,-9.705644,-5.258795,-1.864873,-3.062262,-8.537803,-6.543496,0.934914,8.412420,-5.920850,-9.538775,5.558846,3.425783,-6.414041,-4.098127,9.171205,1.049855,-9.837681,9.695800,2.914747,3.368988,3.460384,-9.406791,-6.063209,-4.733109,-2.966787,-7.495290,9.052894,5.517085,9.344920,4.346572,7.471792,-7.201842,-2.411350,-8.113964,3.982613,6.398423,5.693550,-3.269685,8.551667,-1.674772,6.804190,8.285059,-5.890989,7.666222,-4.860571,-8.111835,3.841104,1.424711,6.959107,8.859188,3.944273,4.970867,-4.097161,2.953153,-3.032498,3.776157,-3.774199,-3.625507,-2.855457,5.093382,-1.705107,-3.903046,-7.837225,7.348771,0.588615,2.801736,-1.808145,9.086395,-0.405749,-2.983355,1.109503,-8.108257,7.262188,-0.132055,-8.806255,-6.417801,-6.872507,-5.106882,0.747885,-6.622508,-2.330922,6.952526,-3.625652,3.176848,4.904126,-9.877981,-2.482011,8.744642,6.189106,2.397756,7.999158,2.992237,-6.350714,-4.175175,0.925202,-9.577501,-8.797109,-7.413126,-9.831087,1.699329,-2.185186,-2.249834,7.498043,-0.761387,-7.103346,-2.710809,5.161162,3.507559,-4.740808,5.505988,-7.091142,6.505912,-8.635303,7.293973,-4.345546,-4.046030,-9.160233,4.963204,-2.851003,3.614282,3.654105,-0.905872,6.613838,-0.468760,-3.860547,1.038971,3.910745,5.532218,8.262193,-9.325878,-8.666280,-2.823121,-4.311093,-7.802764,5.830293,8.611989,9.606942,7.233057,4.833157,-4.266518,-5.422805,-4.449557,9.285180,8.729963,-4.720087,-8.896697,-7.246614,-7.783133,-7.554602,-1.190209,-4.278791,-3.993437,4.161282,-7.176356,8.013119,-9.735058,-5.141883,4.009301,5.297521,-6.943790,-6.568420,-9.858605,3.996042,9.612260,6.579137,6.582002,9.217527,1.439366,-7.805157,4.563478,5.251091,9.833944,-4.434540,5.809779,3.645504,-2.837568,-2.428156,-0.429836,1.265547,4.843018,9.907569,-8.402016,-6.328993,-6.115215,1.857285,-1.416633,3.359478,-6.295637,-0.952887,1.475637,-8.431554,9.106537,-6.109511,-5.582004,-5.278662,-1.856167,3.599769,-3.184040,2.514901,-1.617767,1.047378,2.725788,-1.080134,-2.605484,7.350112,-4.447970,3.551090,-6.368070,7.829557,6.437323,-8.975673,-9.363515,-2.735255,5.464487,8.018765,-1.491750,-5.893777,1.888917,-3.182231,0.468206,-6.709027,0.431546,9.228264,9.431129,-1.445681,-0.068740,6.109927,-1.909431,-3.192631,6.369349,8.511799,-7.200500,3.375899,-0.304244,8.208880,3.244052,1.777073,-4.070400,-5.854307,-1.379254,-4.459859,4.858580,7.844247,-1.740341,2.745662,0.125551,7.172060,-5.160745,9.149092,-9.936057,-8.307722,-9.480932,-6.443341,-0.378465,4.216610,-8.614373,-6.774713,0.166970,1.570857,9.016743,9.294745,-0.160187,-5.281249,2.625095,3.669163,-2.076082,0.078342,-7.659308,8.324416,-5.887079,5.108953,4.877926,-0.205407,7.478968,-8.137688,-9.718129,4.437998,-8.054742,9.089960,1.214749,-0.436289,-5.627023,1.264698,4.804814,5.694947,0.149884,-1.392011,-0.394457]], dtype = "float64")#candidate|7400|(4, 312)|const|float64
const_7401 = relay.const([2,10,-5,1,7,4,7,-3,2,-6,10,-5,1,4], dtype = "int32")#candidate|7401|(14,)|const|int32
const_7402 = relay.const([[-2,6,6,-5,8],[-7,2,5,2,6],[-2,7,5,6,3],[5,-2,1,10,2],[-9,-1,8,1,-9],[1,10,-3,10,-2],[-9,8,-9,-3,4],[1,4,-2,-9,4],[2,9,-3,-8,2],[-8,8,-4,5,-7],[3,-2,-9,7,9],[-6,-9,4,9,-5],[-3,-2,8,-9,-3],[4,2,3,2,9]], dtype = "int32")#candidate|7402|(14, 5)|const|int32
call_7399 = relay.TupleGetItem(func_3593_call(relay.reshape(const_7400.astype('float64'), [13, 8, 12]), relay.reshape(const_7401.astype('int32'), [14,]), relay.reshape(const_7402.astype('int32'), [70,]), ), 1)
call_7403 = relay.TupleGetItem(func_3597_call(relay.reshape(const_7400.astype('float64'), [13, 8, 12]), relay.reshape(const_7401.astype('int32'), [14,]), relay.reshape(const_7402.astype('int32'), [70,]), ), 1)
output = relay.Tuple([call_7389,call_7399,const_7400,const_7401,const_7402,])
output2 = relay.Tuple([call_7390,call_7403,const_7400,const_7401,const_7402,])
func_7427 = relay.Function([], output)
mod['func_7427'] = func_7427
mod = relay.transform.InferType()(mod)
output = func_7427()
func_7428 = relay.Function([], output)
mutated_mod['func_7428'] = func_7428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7461 = relay.var("var_7461", dtype = "float32", shape = (2, 7, 1))#candidate|7461|(2, 7, 1)|var|float32
uop_7462 = relay.erf(var_7461.astype('float32')) # shape=(2, 7, 1)
uop_7468 = relay.sinh(uop_7462.astype('float64')) # shape=(2, 7, 1)
output = relay.Tuple([uop_7468,])
output2 = relay.Tuple([uop_7468,])
func_7470 = relay.Function([var_7461,], output)
mod['func_7470'] = func_7470
mod = relay.transform.InferType()(mod)
var_7471 = relay.var("var_7471", dtype = "float32", shape = (2, 7, 1))#candidate|7471|(2, 7, 1)|var|float32
output = func_7470(var_7471)
func_7472 = relay.Function([var_7471], output)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7487 = relay.TupleGetItem(func_7060_call(), 0)
call_7488 = relay.TupleGetItem(func_7061_call(), 0)
func_5405_call = mod.get_global_var('func_5405')
func_5408_call = mutated_mod.get_global_var('func_5408')
var_7490 = relay.var("var_7490", dtype = "float32", shape = (528,))#candidate|7490|(528,)|var|float32
var_7491 = relay.var("var_7491", dtype = "float64", shape = (28, 4))#candidate|7491|(28, 4)|var|float64
call_7489 = relay.TupleGetItem(func_5405_call(relay.reshape(var_7490.astype('float32'), [11, 12, 4]), relay.reshape(var_7491.astype('float64'), [112,]), ), 3)
call_7492 = relay.TupleGetItem(func_5408_call(relay.reshape(var_7490.astype('float32'), [11, 12, 4]), relay.reshape(var_7491.astype('float64'), [112,]), ), 3)
uop_7493 = relay.acos(var_7491.astype('float32')) # shape=(28, 4)
output = relay.Tuple([call_7487,call_7489,var_7490,uop_7493,])
output2 = relay.Tuple([call_7488,call_7492,var_7490,uop_7493,])
func_7497 = relay.Function([var_7490,var_7491,], output)
mod['func_7497'] = func_7497
mod = relay.transform.InferType()(mod)
var_7498 = relay.var("var_7498", dtype = "float32", shape = (528,))#candidate|7498|(528,)|var|float32
var_7499 = relay.var("var_7499", dtype = "float64", shape = (28, 4))#candidate|7499|(28, 4)|var|float64
output = func_7497(var_7498,var_7499,)
func_7500 = relay.Function([var_7498,var_7499,], output)
mutated_mod['func_7500'] = func_7500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_7540 = relay.TupleGetItem(func_7427_call(), 1)
call_7541 = relay.TupleGetItem(func_7428_call(), 1)
func_4617_call = mod.get_global_var('func_4617')
func_4621_call = mutated_mod.get_global_var('func_4621')
var_7551 = relay.var("var_7551", dtype = "int16", shape = (528,))#candidate|7551|(528,)|var|int16
call_7550 = relay.TupleGetItem(func_4617_call(relay.reshape(var_7551.astype('int16'), [16, 11, 3]), relay.reshape(var_7551.astype('int16'), [16, 11, 3]), ), 0)
call_7552 = relay.TupleGetItem(func_4621_call(relay.reshape(var_7551.astype('int16'), [16, 11, 3]), relay.reshape(var_7551.astype('int16'), [16, 11, 3]), ), 0)
output = relay.Tuple([call_7540,call_7550,var_7551,])
output2 = relay.Tuple([call_7541,call_7552,var_7551,])
func_7553 = relay.Function([var_7551,], output)
mod['func_7553'] = func_7553
mod = relay.transform.InferType()(mod)
var_7554 = relay.var("var_7554", dtype = "int16", shape = (528,))#candidate|7554|(528,)|var|int16
output = func_7553(var_7554)
func_7555 = relay.Function([var_7554], output)
mutated_mod['func_7555'] = func_7555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_7562 = relay.TupleGetItem(func_7427_call(), 0)
call_7563 = relay.TupleGetItem(func_7428_call(), 0)
output = call_7562
output2 = call_7563
func_7575 = relay.Function([], output)
mod['func_7575'] = func_7575
mod = relay.transform.InferType()(mod)
mutated_mod['func_7575'] = func_7575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mutated_mod.get_global_var('func_7575')
call_7576 = func_7575_call()
output = call_7576
func_7577 = relay.Function([], output)
mutated_mod['func_7577'] = func_7577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_7581 = func_7575_call()
call_7582 = func_7575_call()
output = call_7581
output2 = call_7582
func_7586 = relay.Function([], output)
mod['func_7586'] = func_7586
mod = relay.transform.InferType()(mod)
mutated_mod['func_7586'] = func_7586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mutated_mod.get_global_var('func_7586')
call_7587 = func_7586_call()
output = call_7587
func_7588 = relay.Function([], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7594 = relay.var("var_7594", dtype = "float32", shape = (12, 8, 8))#candidate|7594|(12, 8, 8)|var|float32
uop_7595 = relay.sigmoid(var_7594.astype('float32')) # shape=(12, 8, 8)
output = uop_7595
output2 = uop_7595
func_7600 = relay.Function([var_7594,], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
var_7601 = relay.var("var_7601", dtype = "float32", shape = (12, 8, 8))#candidate|7601|(12, 8, 8)|var|float32
output = func_7600(var_7601)
func_7602 = relay.Function([var_7601], output)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7611 = relay.TupleGetItem(func_7060_call(), 0)
call_7612 = relay.TupleGetItem(func_7061_call(), 0)
output = call_7611
output2 = call_7612
func_7613 = relay.Function([], output)
mod['func_7613'] = func_7613
mod = relay.transform.InferType()(mod)
output = func_7613()
func_7614 = relay.Function([], output)
mutated_mod['func_7614'] = func_7614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_7653 = func_7586_call()
call_7654 = func_7586_call()
func_7285_call = mod.get_global_var('func_7285')
func_7288_call = mutated_mod.get_global_var('func_7288')
const_7662 = relay.const([-2,-5,9,-7,-8,9,8,2,-7,-4,-3,-8,6,7,6,9,10,-4,-3,10,-10,1,-10,1,-1,10,10,10,-5,-3,-10,-8,8,9,-2,3,5,1,-1,5,-7,-6,2,-4,5,-5,-2,5,-6,1,3,-2,-10,-6,-7,-10,3,-1,4,-9,5,-5,-8,6,7,3,-3,-8,10,-3], dtype = "int32")#candidate|7662|(70,)|const|int32
call_7661 = relay.TupleGetItem(func_7285_call(relay.reshape(const_7662.astype('int32'), [70,])), 4)
call_7663 = relay.TupleGetItem(func_7288_call(relay.reshape(const_7662.astype('int32'), [70,])), 4)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_7668 = func_7575_call()
call_7669 = func_7575_call()
bop_7687 = relay.less(call_7653.astype('bool'), relay.reshape(call_7668.astype('bool'), relay.shape_of(call_7653))) # shape=(4, 10, 1)
bop_7690 = relay.less(call_7654.astype('bool'), relay.reshape(call_7669.astype('bool'), relay.shape_of(call_7654))) # shape=(4, 10, 1)
func_2749_call = mod.get_global_var('func_2749')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_7721 = relay.TupleGetItem(func_2749_call(relay.reshape(call_7661.astype('float64'), [12, 15, 10]), relay.reshape(call_7661.astype('float64'), [12, 15, 10]), ), 3)
call_7722 = relay.TupleGetItem(func_2753_call(relay.reshape(call_7661.astype('float64'), [12, 15, 10]), relay.reshape(call_7661.astype('float64'), [12, 15, 10]), ), 3)
output = relay.Tuple([call_7661,const_7662,bop_7687,call_7721,])
output2 = relay.Tuple([call_7663,const_7662,bop_7690,call_7722,])
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7724 = func_7723_call()
output = call_7724
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7733 = relay.TupleGetItem(func_7060_call(), 0)
call_7734 = relay.TupleGetItem(func_7061_call(), 0)
func_1121_call = mod.get_global_var('func_1121')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_7755 = relay.var("var_7755", dtype = "float32", shape = (160,))#candidate|7755|(160,)|var|float32
call_7754 = func_1121_call(relay.reshape(var_7755.astype('float32'), [8, 2, 10]))
call_7756 = func_1121_call(relay.reshape(var_7755.astype('float32'), [8, 2, 10]))
output = relay.Tuple([call_7733,call_7754,var_7755,])
output2 = relay.Tuple([call_7734,call_7756,var_7755,])
func_7764 = relay.Function([var_7755,], output)
mod['func_7764'] = func_7764
mod = relay.transform.InferType()(mod)
var_7765 = relay.var("var_7765", dtype = "float32", shape = (160,))#candidate|7765|(160,)|var|float32
output = func_7764(var_7765)
func_7766 = relay.Function([var_7765], output)
mutated_mod['func_7766'] = func_7766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_7831 = relay.TupleGetItem(func_7427_call(), 1)
call_7832 = relay.TupleGetItem(func_7428_call(), 1)
output = relay.Tuple([call_7831,])
output2 = relay.Tuple([call_7832,])
func_7858 = relay.Function([], output)
mod['func_7858'] = func_7858
mod = relay.transform.InferType()(mod)
output = func_7858()
func_7859 = relay.Function([], output)
mutated_mod['func_7859'] = func_7859
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7941 = relay.const([[[8,2,2,3,8,-4,-2],[-6,-7,-4,3,4,4,-8],[-8,8,8,-9,5,-6,9],[-3,-1,5,-1,-8,10,2],[7,-8,2,2,-3,2,-4],[-4,-8,-5,5,-6,3,-3],[-7,-7,-6,1,3,9,6],[-6,10,5,-5,7,-2,-8],[-9,8,-5,-2,1,10,7]],[[-10,3,-5,-7,10,-1,-4],[2,-8,1,8,-10,-9,-2],[-7,-10,-3,-4,-5,1,3],[-2,6,6,-4,-9,-3,3],[-4,-2,-7,7,-3,-10,-9],[4,2,-8,-10,2,1,6],[-2,7,5,4,-2,-4,1],[-5,-3,-4,-5,-3,9,8],[-9,-6,-5,-5,-4,4,2]],[[-3,2,-7,9,1,-8,-10],[2,-6,2,9,9,-10,7],[-1,4,3,-3,10,-6,7],[-7,-8,3,-7,-8,-4,4],[-9,2,9,-3,-1,-5,-10],[3,-4,4,-7,-5,-4,5],[-9,-6,8,-8,3,1,10],[6,-8,9,9,-3,-10,5],[5,-4,6,5,-7,5,8]],[[5,-4,10,-9,-6,-10,-7],[1,-6,9,-3,7,3,2],[-5,3,-8,8,3,-7,-8],[-1,-1,4,-9,5,-9,9],[-8,1,-1,1,3,9,9],[-6,7,1,-10,-3,-7,2],[-3,-2,-1,-6,7,-4,-9],[8,-1,6,-4,3,-1,4],[5,5,-6,-10,-10,-1,-4]],[[-7,8,-4,2,4,-4,-9],[-3,2,-6,7,6,8,4],[2,4,2,5,-2,5,-2],[-5,5,-3,-8,-7,-2,2],[8,-1,5,-2,-9,4,-5],[-7,9,9,10,2,10,4],[-2,-3,-4,5,-2,-8,-3],[2,3,-6,-3,-8,-4,2],[-2,7,5,-8,-4,10,-7]],[[7,-3,9,-10,10,-7,-8],[-1,-6,-7,8,-5,-2,-9],[-7,1,6,4,-1,10,10],[10,-8,-8,-5,-9,10,-1],[-3,5,5,-3,-1,8,-3],[-3,-6,3,-5,8,8,7],[1,10,-6,-1,10,-6,3],[3,2,1,9,2,6,8],[-9,-4,10,-4,1,-1,-1]],[[2,-1,-2,-10,-1,-8,7],[-4,10,7,-6,7,5,-3],[-9,-3,8,7,-7,2,10],[-2,4,9,1,-7,4,7],[4,-6,-6,-5,5,4,-10],[1,-8,6,-10,7,10,-10],[-2,4,7,-8,-10,-5,4],[6,-10,6,9,2,-7,-1],[-7,-9,-8,-2,4,-5,-2]],[[7,2,3,-2,1,-1,1],[4,-4,4,9,-8,-4,2],[7,2,9,9,7,1,3],[1,-1,-7,-7,2,-3,-10],[5,8,5,7,-3,7,8],[-8,-1,4,-5,1,-1,9],[-5,1,-8,-3,-9,6,-7],[-4,3,7,-2,-8,-1,10],[-3,-8,-7,-10,9,9,-4]],[[-2,9,7,9,-6,4,-9],[-2,-8,7,5,6,8,-1],[-3,-3,7,10,-4,7,-1],[1,-7,-8,-9,-3,-8,8],[-6,4,-5,4,-9,-5,5],[-2,-4,-8,-7,7,1,8],[1,-5,6,-6,-8,-2,-7],[9,-2,10,-3,8,5,6],[9,5,-10,7,-2,7,-5]],[[7,8,4,7,6,2,-2],[1,-3,1,-10,-10,9,2],[-2,-6,7,-4,-4,4,-5],[-3,-5,4,-5,-8,8,-4],[2,4,2,-4,4,1,3],[7,2,-4,4,-7,-4,6],[4,10,5,-3,-4,6,-7],[7,2,5,-1,3,8,6],[4,6,1,6,-10,3,-6]],[[-5,7,10,-3,5,5,-1],[9,-4,1,-3,-6,8,-7],[-3,1,-5,-9,8,-9,5],[-3,6,-6,-5,10,9,8],[-3,6,10,-5,6,10,-3],[-8,-5,-9,-5,1,3,-9],[-9,-8,3,-10,3,-8,9],[-4,-6,-3,5,2,-8,-1],[6,3,-8,8,7,2,3]]], dtype = "uint64")#candidate|7941|(11, 9, 7)|const|uint64
var_7942 = relay.var("var_7942", dtype = "uint64", shape = (11, 9, 7))#candidate|7942|(11, 9, 7)|var|uint64
bop_7943 = relay.less_equal(const_7941.astype('bool'), relay.reshape(var_7942.astype('bool'), relay.shape_of(const_7941))) # shape=(11, 9, 7)
func_6440_call = mod.get_global_var('func_6440')
func_6443_call = mutated_mod.get_global_var('func_6443')
const_7961 = relay.const([[4.499066,-2.179280,0.515719,-0.797522,-5.955173,4.251908,-1.045272,5.242096],[2.280337,-7.777696,8.406172,-5.117453,-8.089066,1.087509,3.884066,-7.321609],[4.184580,4.737546,7.012500,0.318338,-6.827145,2.295919,-1.552508,-0.352196],[-1.278504,-9.696820,8.275342,-7.987873,0.636769,-5.777579,-7.964362,7.434990],[-6.200392,-3.434031,-2.139068,9.275394,-8.230181,-2.304101,2.096199,-2.111894],[9.239454,-7.886656,6.126408,-6.210548,-6.097983,-5.163077,7.957692,1.919994],[-2.040051,7.491982,3.539158,-2.157859,-4.381191,-9.389589,7.127631,9.486642],[-0.711031,0.137523,-5.319983,-5.886447,6.237836,9.970592,-6.149884,-6.370105],[0.836416,-1.084720,-8.859982,-1.613918,0.091497,-9.278425,-7.476971,7.840728],[6.618958,-2.575280,2.274955,1.054595,3.493781,7.193332,6.314813,0.390471],[-2.290551,9.057700,-3.328115,0.192441,-7.524507,-8.049811,4.876741,2.432327],[2.574466,9.086950,-3.994486,0.663423,8.071981,-9.966514,-0.386995,5.902648],[3.383212,3.118686,0.177085,7.829450,-5.190472,-6.638697,9.070882,5.824676],[9.583798,3.070444,5.961935,-3.638731,-2.096912,9.890829,-5.355912,8.005230],[4.918328,9.683230,9.590255,-6.211975,-7.039436,8.384166,3.567062,-0.911048],[0.505223,-8.473175,-3.485481,-9.876075,9.607688,3.548935,-6.596320,4.651210],[7.531497,-0.100327,4.017921,7.594691,7.294671,-0.005081,9.964054,-1.595738],[-6.706765,5.372355,0.777854,9.999303,9.761575,-9.753313,6.552497,6.359123],[-5.390344,2.958802,-7.112168,4.573635,-4.603894,-7.718632,9.300191,-0.911644],[-9.821772,-2.384994,7.137896,-9.620401,7.424748,3.631663,0.772821,2.810622],[-1.898732,7.297729,2.579632,9.613558,-4.746759,2.058078,-5.861050,-9.498380],[6.194936,-8.265892,-3.133608,6.799762,1.612661,4.305925,4.509945,-1.085465],[7.111415,5.147013,-1.913007,-3.494513,-7.904014,-0.086693,-6.595831,6.466484],[-0.204926,-0.820968,9.547933,-1.241034,-7.956900,2.724766,-5.592080,-7.204332]], dtype = "float64")#candidate|7961|(24, 8)|const|float64
call_7960 = relay.TupleGetItem(func_6440_call(relay.reshape(const_7961.astype('float64'), [12, 2, 8]), relay.reshape(const_7961.astype('float64'), [12, 2, 8]), ), 0)
call_7962 = relay.TupleGetItem(func_6443_call(relay.reshape(const_7961.astype('float64'), [12, 2, 8]), relay.reshape(const_7961.astype('float64'), [12, 2, 8]), ), 0)
bop_7977 = relay.divide(const_7941.astype('float32'), relay.reshape(bop_7943.astype('float32'), relay.shape_of(const_7941))) # shape=(11, 9, 7)
func_3593_call = mod.get_global_var('func_3593')
func_3597_call = mutated_mod.get_global_var('func_3597')
var_7982 = relay.var("var_7982", dtype = "float64", shape = (1248,))#candidate|7982|(1248,)|var|float64
const_7983 = relay.const([[-2,7],[-4,1],[3,10],[10,-3],[-10,8],[-6,-7],[5,3]], dtype = "int32")#candidate|7983|(7, 2)|const|int32
const_7984 = relay.const([-9,2,10,-7,6,4,-3,3,-7,7,-5,2,-9,3,6,-7,-10,1,5,-2,5,-8,-10,8,-3,3,-7,9,3,-10,-3,-6,-6,-4,6,-3,-2,3,1,1,4,2,-10,-9,-5,4,8,3,-10,6,-3,-8,9,10,3,-5,-5,10,10,-10,2,4,-5,-5,-4,-2,-7,5,-4,-7], dtype = "int32")#candidate|7984|(70,)|const|int32
call_7981 = relay.TupleGetItem(func_3593_call(relay.reshape(var_7982.astype('float64'), [13, 8, 12]), relay.reshape(const_7983.astype('int32'), [14,]), relay.reshape(const_7984.astype('int32'), [70,]), ), 1)
call_7985 = relay.TupleGetItem(func_3597_call(relay.reshape(var_7982.astype('float64'), [13, 8, 12]), relay.reshape(const_7983.astype('int32'), [14,]), relay.reshape(const_7984.astype('int32'), [70,]), ), 1)
output = relay.Tuple([call_7960,const_7961,bop_7977,call_7981,var_7982,const_7983,const_7984,])
output2 = relay.Tuple([call_7962,const_7961,bop_7977,call_7985,var_7982,const_7983,const_7984,])
func_7986 = relay.Function([var_7942,var_7982,], output)
mod['func_7986'] = func_7986
mod = relay.transform.InferType()(mod)
var_7987 = relay.var("var_7987", dtype = "uint64", shape = (11, 9, 7))#candidate|7987|(11, 9, 7)|var|uint64
var_7988 = relay.var("var_7988", dtype = "float64", shape = (1248,))#candidate|7988|(1248,)|var|float64
output = func_7986(var_7987,var_7988,)
func_7989 = relay.Function([var_7987,var_7988,], output)
mutated_mod['func_7989'] = func_7989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_8002 = relay.TupleGetItem(func_7427_call(), 4)
call_8003 = relay.TupleGetItem(func_7428_call(), 4)
func_6825_call = mod.get_global_var('func_6825')
func_6827_call = mutated_mod.get_global_var('func_6827')
const_8009 = relay.const(6, dtype = "int64")#candidate|8009|()|const|int64
call_8008 = func_6825_call(relay.reshape(const_8009.astype('int64'), []))
call_8010 = func_6825_call(relay.reshape(const_8009.astype('int64'), []))
func_3714_call = mod.get_global_var('func_3714')
func_3717_call = mutated_mod.get_global_var('func_3717')
const_8012 = relay.const([-8.757022,6.569036,5.562133,3.900290,7.829160,1.671401,1.974840,1.398047,3.543757,-5.289858,-3.617633,5.587745,8.355068,7.722994,2.919687,-9.486831,7.602964,2.288685,-2.064632,2.206631,8.760023,-4.869532,-4.093826,-7.103966,1.750723,-0.604306,-0.245346,3.781546,-0.794113,-7.731657,6.853611,1.429310,-0.288777,1.359618,-8.351176,3.044625,-7.919920,-8.697690,0.726763,-6.037239,2.893559,-7.693035,6.487918,-2.722046,3.096152,8.165907,9.206248,5.390341,-0.772876,-0.177366,-7.250850,-6.932167,8.032371,7.589703,8.329670,7.613672,4.113666,5.066182,-2.545715,-0.562899,-2.191898,-9.122831,0.251066,-8.422483,7.107829,-0.037198,-8.863216,-9.826097,9.666399,-0.047056,3.927765,2.710167,7.251866,6.257933,-1.614474,2.484769,-0.154141,-6.020529,-6.510894,8.742204,-3.881188,0.085870,-0.620651,-1.347025,6.289531,9.696513,9.427889,0.093045,0.277402,-7.143566,2.092587,-1.888117,3.305340,1.362219,1.234305,7.247497,-4.438990,-5.979609,-0.683230,-9.004987,1.265944,0.254844,-6.792100,-4.802350,0.866519,-1.744907,-2.860438,-5.326300,9.268079,2.180123,-9.774006,-2.317664,3.885381,-6.081055,-4.660603,-7.386427,-2.195026,-8.392536,-2.849579,-0.940952,5.002585,-2.903330,6.385330,8.784817,-2.714257,-1.962046,-0.836885,7.558632,5.825304,9.372326,-4.919861,-2.044569,5.237594,-0.119832,1.209041,-4.956114,5.726763,-0.864319,8.111924,9.456257,4.368402,8.526046,5.629739,8.312338,-7.222911,-1.672288,-5.562806,4.549518,9.969461,-4.520663,-2.186119,0.221522,4.072869,-7.284690,6.080403,5.968446,2.308987,-9.379286,8.474804,-5.232407,3.010316,4.067569,3.343831,5.849457,-6.669952,6.195487,-7.408925,-8.991155,-5.562805,5.740394,-0.366796,-6.512195,0.849025,-0.208233,3.907464,-6.247443,9.852890,-2.894179,-4.489255,4.587197,0.161643,7.362644,0.699530,-2.837391,-6.689496,-7.311246,-7.067688,6.385627,1.897513], dtype = "float32")#candidate|8012|(189,)|const|float32
var_8013 = relay.var("var_8013", dtype = "float64", shape = (1, 112))#candidate|8013|(1, 112)|var|float64
call_8011 = relay.TupleGetItem(func_3714_call(relay.reshape(const_8012.astype('float32'), [9, 3, 7]), relay.reshape(var_8013.astype('float64'), [2, 56]), ), 1)
call_8014 = relay.TupleGetItem(func_3717_call(relay.reshape(const_8012.astype('float32'), [9, 3, 7]), relay.reshape(var_8013.astype('float64'), [2, 56]), ), 1)
uop_8037 = relay.tan(const_8012.astype('float32')) # shape=(189,)
uop_8039 = relay.log(uop_8037.astype('float64')) # shape=(189,)
func_6719_call = mod.get_global_var('func_6719')
func_6723_call = mutated_mod.get_global_var('func_6723')
const_8049 = relay.const([-9,1,-8,-1,-7,9,-1,-8,-10,-6,2,-9,5,1,-7,-2,-3,4,9,8,-8,-1,-5,-6,5,-9,-7,6,-8,-3,-3,-3,9,10,1,-6,-4,-8,8,-3,7,10,10,5,4,3,5,6,1,4,3,-3,-8,5,4,-9,-9,4,-6,5,6,-7,-6,-7,-6,-1,2,5,2,6,-7,-8,3,-6,-10,6,1,-1,6,-5,8,3,-7,-9,-10,8,9,6,7,-8,-4,-7,10,3,-3,-10,2,2,-6,10,-6,-5,-4,7,-4,-10,-9,-5,-2,-5,-7,-9,-10,10,-2,2,-9,-4,-10,4,-4,-2,1,4,-8,-2,5,5,2,3,-6,-3,4,7,8,9,8,-7,-1,-6,-9,3,10,9,-3,-8,-7,-3,-8,-6,4,8,-9,2,-3,10,-7,-6,-10,8,7,-2,7,-7,8,1,1,5,-4,1,-5,1,-3,-8,-2,-6,-4,-5,-4,8,-8,-3,10,-10,-4,4,-1,3,2,6,-2,4,1,-7,-2,6,-5,8,6,10,10,-3,-10,4,10,7,4,-7,9,-9,-10,2,5,-1,-9,-3,6,9,-2,10,-2,-5,-6,-1,-8,-7,-5,-6,-8,-1,9,-5,2,10,6,-8,-7,-7,5,8,-8,4,4,6,-6,-1,3,-9,-10,8,1,4,-9,10,7,-1,-5,-10,6,2,-5,8,-9,-2,8,-2,-8,-6,7,2,6,-1,-10,-1,-9,8,-8,-1,-3,-5,-4,1,-5,-10,-5,-6,-8,1,10,-2,-6,2,-9,10,-7,-5,2,-5,-5,9,7,-10,-6,3,-4,4,7,2,10,-10,-7,-8,-2,-5,-7,-8,2,1,10,4,1,2,6,4,5,3,-10,10,3,1,-2,4,9,-5,-1,3,-9,-8,2,-2,-7,-1,-3,8,-8,6,10,-7,-7,-9,1,8,10,4,-1,9,1,-6,-10,-2,5,-10,10,-3,-10,-7,6,-1,-3,-6,-3,-4,-4,-9,-5,5,-1,-5,4,9,-2,-7,2,-5,-4,1,6,2,-8,-8,-3,4,-10,4,9,-10,-8,1,4,6,5,-5,-5,-4,-7,-5,-7,-4,-8,-3,-2,9,-1,-1,-6,-4,6,-5,6,1,2,-6,5,-8,-10,3,7,3,4,-4,3,-3,-9,10,-8,1,-9,10,8,-10,-10,-10,6,-4,9,1,8,-3,-2,4,-5,9,3,9,-9,10,1,6,-5,-8,-10,8,-2,-5,-5,-4,8,-4,7,4,2,5,6,-1,-2,7,9,-10,-8,7,5,-2,9,4,9,9,-4,7,8,2,8,-1,-5,-7,-7,-4,8,-7,-4,-10,-1,-6,-5,-4,2,2,3,4,4,1,-6,6,-3,-8,4,-1,8,7,-4,-4,-6,4,-10,9,10,7,-7,9,-6,8,-6,2,-10,-5,1,-9,-8,10,1,-5,-1,8,-7,-7,-7,-10,6,5,2,-8,-3,-4,10,-2,3,-4,2,-2,1,10,4,1,4,6,9,-3,-1,-5,10,3,-5,-8,9,5,-9,9,7,-3,-7,-8,-5,9,7,6,-1,1,-6,-4,8,8,-4,-9,9,1,5,2,-2,5,-7,9,9,-8,8,1,-3,1,6,-8,6,-10,-9,-10,-7,2,-3,6,8,9,7,-2,-9,-6,7,-9,-3,3,-3,-5,-7,6,6,3,5,-4,2,-1,-10,-5,2,1,4,9,6,-8,1,-4,6,-4,9,-1,3,1,10,-2,1,6,-7,3,-1,8,-4,10,8,-1,10,-10,-6,6,-9,6,10,-3,1,10,-6,-3,-9,-2,-4,5,-7,-7,-6,-10,-1,-4,2,-8,3,2,-8,-2,7,5,-7,7,7,-10,7,9,8,-1,-1,1,8,-3,-10,3,-9,1,1,3,-2,-3,2,-10,-5,1,9,10,-9,4,-8,-9,5,4,-7,-6,-1,-1,2,3,10,3,-10,-7,-6,8,-7,-2,6,10,4,-4,6,-7,-7,-8,-6,6,-2,5,-3,-3,-10,5,-10,9,3,-10,-1,9,-7,2,-6,1,3,-7,9,-9,4,6,8,-9,-1,10,-5,-7,-6,8,-1,-3,7,3,9,-6,7,-6,-7,8,5,9,8,2,7,7,9,4,-9,1,-10,-10,8,6,2,-1,-1,-5,-6,-5,7,3,-4,-3,6,3,-2,7,-1,-3,-6,-2,-5,-5,5,8,-2,9,9,-10,-7,-3,6,-7,2,1,-6,-4,-9,-4,9,-8,2,-8,9,-6,-1,-3,10,7,2,9,-1,9,-1,6,-2,2,2,-6,10,-7,-2,9,10,3,3,10,-4,8,1,-5,10,10,9,-3,8,9,8,-10,-5,-4,5,-4,4,-2,6,1,-5,8,-5,-3,10,-10,2,-9,-3,7,9,-6,-3,-8,-6,-7,-10,-6,-5,-7,-3,-3,9,5,-9,9,-4,-10,3,-8,-9,-1,9,3,6,-10,6,-7,-9,6,-3,-3,10,-5,-3,2,-7,8,-10,-3,10,-7,-9,9,7,4,-10,8,-10,5,-6,-3,1,1,4,-8,-7,9,9,2,5,7,-2,-7,8,6,-10,6,-4,-3,-3,1,5,-8,7,-2,5,-8,-4,3,-9,-5,10,10,-10,-2,-3,-3,-2,5,-10,-2,8,-5,-6,-4,9,-6,3,-3,-1,6,-8,4,-1,-9,-8,7,2,-8,-2,5,-4,-10,-9,7,-10,3,3,5,-6,4,-5,8,5,-8,-10,8,-4,-10,1,-2,-2,8,2,-7,10,-2,2,-4,8,4,7,-2,10,3,-9,4,-1,5,8,2,1,4,-4,10,2,-7,-8,9,9,1,8,7,8,1,-4,-3,-6,10,-7,9,-6,8,7,2,-9,6,-8,7,7,-1,2,7,3,8,-10,7,5,-10,3,10,6,-9,1,10,3,-10,-7,3,-4,8,-9,-10,2,-9,-3,-5,7,5,10,-9,-9,10,-5,4,5,5,-6,-8,-6,-1,8,-2,-2,4,-2,-8,1,7,-10,-7,-2,9,-9,6,2,8,7,-4,7,-4,-10,-2,-8,-8,9,-5,10,-10,-9,-6,-6,-2,4,-6,3,-4,10,-5,-6,-9,8,7,-6,-7,-3,-7,-7,6,4,-6,9,3,5,-8,-10,-5,10,8,-9,4,-8,-5,-9,-10,-10,-3,4,10,5,8,6,-6,5,4,-9,-6,-9,-3,1,-3,-8,1,4,9,9,5,-3,2,4,-10,6,9,-8,-6,-4,9,7,3,-1,-9,2,-6,4,2,5,9,9,-7,-8,5,1,-3,-6,-8,-1,-7,-10,7,-2,1,1,9,8,9,6,-2,-10,5,-3,2,9,-6,-4,-2,4,-6,-3,-6,-10,1,-9,-4,7,-4,2,4,-5,10,-3,-8,8,-1,8,6,-4,-7,-9,3,-8,-6,-3,2,1,9,-8,1,10,9,-1,9,3,10,5,-7,10,-5,-4,-1,1,-8,-7,-7,3,9,2,-3,2,-6,-5,-1,-8,8,-5,8,-8,-7,7,6,-1,-8,-2,7,-2,-2,9,4,2,-1,10,5,8,-7,-5,9,-5,-8,-7,1,-9,10,8,5,-7,-9,8,7,5,4,-6,-5,-9,-7,7,8,3,-3,-4,-5,9,-8,-7,4,10,1,3,6,-8,-8,5,10,-6,2,-3,10,8,-10,2,8,-4,-7,-6,8,-10,-6,4,4,1,1,1,-8,9,6,2,5,-5,-2,7,-5,-6,-1,-7,4,1,3,-7,2,9,-9,-4,-6,7,1,7,3,7,8,9,3,9,1,-7,4,-1,-6,7,5,9,10,-10,-1,-6,-2,-3,4,-2,-8,8,-4,6,3,1,7,-3,-8,-9,1,-10,-10,-7,2,1,-8,-3,7,4,3,9,-7,-9,7,-4,5,1,-4,2,-10,10,-2,-2,-2,-1,4,-7,2,6,5,-8,-5,-8,9,-8,2,7,-1,-5,9,-8,-5,6,2,-9,-3,1,-7,-8,10,-3,2,-6,-3,5,-6,5,-9,-3,2,-10,-2,-4,10,3,-7,-10,-10,-1,-9,5,9,-1,2,9,-9,-10,10,7,-5,7,9,-1,8,-2,-8,6,-8,6,-2,-3,-4,1,-8,-1,9,4,-7,-6,7,-2,4,2,5,-1,5,-10,-8,2,-7,8,-2,5,9,4,9,3,-6,-7,-5,9,-2,-10,10,-6,-6,5,9,9,3,-4,-1,-8,-3,9,-3,9,-7,-6,10,4,-6,-4,-10,3,-6,8,3,6,2,4,-4,-1,-2,8,10,-6,2,1,2,-5,-2,-8,10,-1,-7,-8,-9,-2,5,-1,-3,-1,-8,4,8,-8,4,-5,10,-9,-4,10,3,6,-3,2,5,-8,8,3,-3,8,9,-4,-1,7,-9,1,-8,-1,-4,-6,8,2,-8,-6,7,2,7,-4,10,-6,-8,-10,-3,-9,4,8,1,-10,6,-4,9,-9,-2,7,-4,-1,-1,9,2,3,-5,-9,-10,7,-6,8,-5,-2,-2,10,-1,10,-4,7,9,3,10,10,3,-7,6,-4,4,9,2,-4,2,6,3,1,3,5,10,-5,-3,-1,10,10,-1,2,8,-8,-9,4,8,-5,-3,-4,8,-5,-4,7,-4,-9,-6,10,-8,4,-3,-1,-6,-3,9,-2,-9,-7,7,-8,-1,-8,8,10,-4,-5,-3,-9,-3,9,-2,-8,-2,-7,-8,-2,1,-7,5,7,4,-8,8,-9,2,4,1,-8,-8,-3,-9,7,-2,1,4,9,-9,8,-4,8,-4,-3,-4,-9,-5,9,7,6,-2,9,2,-5,-2,-8,-9,6,7,-8,10,5,2,-1,-10,10,-1,-8,-6,-6,8,-9,-10,-10,-4,-10,-8,10,-9,-10,-8,-10,1,6,3,-8,-7,7,1,6,8,10,3,7,-2,2,9,-3,-10,-10,2,-3,6,-8,-9,-4,2,-2,-3,8,8,-9,2,9,-10,6,-6,3,-10,1,-5,6,-7,4,-1,-9,-2], dtype = "int64")#candidate|8049|(1872,)|const|int64
var_8050 = relay.var("var_8050", dtype = "int8", shape = (576,))#candidate|8050|(576,)|var|int8
call_8048 = relay.TupleGetItem(func_6719_call(relay.reshape(const_8049.astype('int64'), [13, 16, 9]), relay.reshape(var_8050.astype('int8'), [576,]), ), 1)
call_8051 = relay.TupleGetItem(func_6723_call(relay.reshape(const_8049.astype('int64'), [13, 16, 9]), relay.reshape(var_8050.astype('int8'), [576,]), ), 1)
uop_8052 = relay.asinh(uop_8039.astype('float32')) # shape=(189,)
func_7285_call = mod.get_global_var('func_7285')
func_7288_call = mutated_mod.get_global_var('func_7288')
call_8065 = relay.TupleGetItem(func_7285_call(relay.reshape(call_8002.astype('int32'), [70,])), 2)
call_8066 = relay.TupleGetItem(func_7288_call(relay.reshape(call_8002.astype('int32'), [70,])), 2)
output = relay.Tuple([call_8002,call_8008,const_8009,call_8011,var_8013,call_8048,const_8049,var_8050,uop_8052,call_8065,])
output2 = relay.Tuple([call_8003,call_8010,const_8009,call_8014,var_8013,call_8051,const_8049,var_8050,uop_8052,call_8066,])
func_8067 = relay.Function([var_8013,var_8050,], output)
mod['func_8067'] = func_8067
mod = relay.transform.InferType()(mod)
var_8068 = relay.var("var_8068", dtype = "float64", shape = (1, 112))#candidate|8068|(1, 112)|var|float64
var_8069 = relay.var("var_8069", dtype = "int8", shape = (576,))#candidate|8069|(576,)|var|int8
output = func_8067(var_8068,var_8069,)
func_8070 = relay.Function([var_8068,var_8069,], output)
mutated_mod['func_8070'] = func_8070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8146 = func_7586_call()
call_8147 = func_7586_call()
output = call_8146
output2 = call_8147
func_8148 = relay.Function([], output)
mod['func_8148'] = func_8148
mod = relay.transform.InferType()(mod)
mutated_mod['func_8148'] = func_8148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mutated_mod.get_global_var('func_8148')
call_8149 = func_8148_call()
output = call_8149
func_8150 = relay.Function([], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8151 = func_7586_call()
call_8152 = func_7586_call()
func_2749_call = mod.get_global_var('func_2749')
func_2753_call = mutated_mod.get_global_var('func_2753')
const_8177 = relay.const([[4.896969,-8.404706],[0.723521,-8.293586],[7.327925,6.166472],[-5.809506,6.995656],[6.526421,5.646675],[-5.920923,5.395195],[-2.410013,7.442102],[5.868596,-5.556492],[-0.675204,1.097046],[9.160956,8.318347],[3.139226,-9.920193],[9.000752,-5.249084],[4.516458,-4.056524],[1.712332,4.916627],[-7.700755,-1.256876],[2.208972,5.884611],[1.932461,7.940305],[-3.043405,8.347558],[-7.763830,-8.422163],[-0.304408,-7.131810],[-8.676887,5.343289],[-1.705063,9.080081],[8.362609,0.781115],[-0.593123,-7.679932],[1.221383,-3.525379],[-7.892199,0.295236],[5.166934,9.616244],[3.500866,9.065619],[-0.469432,6.809494],[1.959172,4.697266],[-4.890438,0.705645],[5.236486,-8.608277],[-8.967952,4.030998],[4.179535,1.757581],[-3.864337,-2.221990],[-3.608637,5.890064],[-3.510660,8.055014],[8.924389,6.922600],[5.381304,-8.445194],[-2.696852,3.136663],[-0.764381,-7.265379],[-3.048147,-1.460819],[-9.555299,-9.958822],[3.415113,4.100582],[-8.363455,3.444411],[1.500026,7.925491],[-3.640986,-8.295726],[-8.380467,0.386733],[-5.038729,-0.442615],[5.284990,5.293227],[2.296475,-0.855890],[9.035222,0.801416],[-0.146244,8.544299],[1.745448,9.665518],[-4.900408,-5.511456],[6.473008,0.367755],[4.027055,-3.251849],[9.338458,-0.574559],[0.729669,0.929712],[-3.573587,-8.310841],[3.492089,8.472673],[-4.447987,-8.831148],[-3.355062,-9.541815],[-7.235513,4.579813],[5.729448,-8.501933],[5.386068,-9.230521],[3.802315,0.700465],[-1.877027,5.697191],[0.924502,-5.016422],[3.250360,-9.484020],[2.063321,3.823782],[4.574485,-0.802376],[0.464258,2.823784],[7.307871,6.640354],[3.206204,8.249149],[0.441024,8.825453],[6.572290,-8.297455],[3.823964,-5.802762],[0.950353,-9.523004],[-2.368349,-5.012460],[-9.545523,-2.634606],[7.712244,-0.847062],[-6.377435,-9.458913],[-7.591124,-9.830165],[3.623701,-0.088196],[9.387311,9.266438],[4.595973,5.975467],[-5.305504,5.697975],[9.994637,3.464883],[2.848604,5.471029],[0.360140,2.037642],[-4.421888,5.677884],[9.563934,-2.110413],[-6.634008,4.118318],[5.259688,5.021988],[-6.209953,-1.505328],[-6.490935,-1.677092],[-5.589097,8.694857],[5.784666,9.302226],[-4.713212,7.488094],[7.588534,-3.153093],[-1.139166,2.766739],[3.302453,3.162397],[9.461664,4.420356],[5.846981,9.735103],[-9.236465,3.706158],[-3.324141,3.792502],[6.184990,-2.214013],[-9.979421,-5.695679],[-7.158999,-0.369753],[-7.159917,-0.356331],[-2.760472,7.904949],[4.898843,0.869317],[6.552823,-9.486748],[9.326479,-6.346758],[-4.888122,8.823849],[-9.837381,4.451253],[1.713061,-0.107874],[-7.610661,0.972042],[-4.596842,-5.368368],[-3.329985,9.820750],[0.997215,4.056533],[7.461822,4.552601],[-2.420292,-4.932955],[2.888489,0.038534],[-1.301045,-1.487020],[-0.639184,9.737239],[2.748453,4.322616],[6.193232,1.912715],[-7.619875,6.452012],[0.519650,4.115510],[-4.302184,-1.686646],[-5.517424,-1.524767],[7.332339,5.664221],[0.840487,-4.363394],[-1.217899,-9.070675],[6.028370,-3.283877],[-6.997282,1.322155],[4.535599,5.492906],[4.279829,1.065394],[3.885791,-0.350234],[-7.479223,5.528328],[-8.355394,-5.619765],[6.801579,-1.751755],[2.764670,-1.027051],[-0.500687,7.791897],[-7.667774,7.220246],[-3.187727,6.752900],[7.978372,-9.543870],[2.590699,8.470917],[2.516354,3.248811],[-2.859725,3.360436],[-3.891083,4.753972],[-5.473768,-8.638596],[3.573955,-9.130445],[-1.508887,5.097329],[8.288465,-6.487855],[1.513742,-5.865971],[5.159951,7.045855],[5.055426,1.771692],[-3.276075,-7.153343],[6.860428,-0.386222],[8.009180,-3.665254],[-5.093001,2.936174],[6.164985,4.733482],[3.834551,-2.586925],[5.789470,-7.324771],[-6.668630,-3.960608],[-9.703199,0.625566],[-3.067758,-7.951792],[-4.307017,8.502028],[-8.488217,-3.902369],[-4.675145,0.991616],[8.093917,1.921461],[4.493266,6.050239],[8.819655,5.115607],[1.983077,-6.402488],[-7.255437,0.160601],[5.636632,2.715974],[8.174128,-2.398446],[4.938953,1.586825],[3.914139,7.290570],[-9.787421,-7.564485],[4.004663,5.617952],[8.970231,-5.052165],[-7.744880,-4.476936],[-5.776584,9.073507],[-8.909457,-4.122343],[4.377317,-5.201723],[-8.986536,-6.673433],[5.972061,-3.835314],[-6.128394,0.850424],[2.325569,6.142039],[1.032799,-3.401134],[4.240395,2.418535],[6.583834,-1.216333],[8.474807,6.517993],[-0.185773,-0.332515],[-9.043506,-9.185368],[-7.510200,-3.942188],[8.453076,5.288683],[-8.768765,6.173294],[4.719595,0.171906],[-8.750631,-8.886602],[-8.500008,5.981042],[7.136042,-6.540132],[-5.815814,-8.840233],[-2.778539,8.507298],[-1.429532,-1.787023],[-4.787973,-4.203182],[-6.458230,-5.003260],[9.013373,-8.291809],[-7.342315,6.936043],[8.158790,6.255274],[-1.728215,-5.242874],[7.011191,0.500382],[-6.715447,-6.422573],[1.522166,9.378768],[-6.484035,-1.836400],[-8.922344,2.821407],[-3.857153,-5.070663],[9.669798,9.957473],[5.274645,-8.468980],[8.541184,-3.279724],[-1.617424,-4.894743],[0.464634,8.074854],[3.737024,-7.050152],[1.757578,-2.496728],[-6.214642,9.804096],[2.912042,4.214620],[7.991036,3.119306],[7.839077,-9.695467],[-1.009110,2.270875],[-2.270981,2.492137],[-5.776953,7.451877],[7.503610,8.190142],[-7.501436,7.978602],[-7.955696,-1.903844],[1.797216,-3.770356],[3.316746,-5.769811],[-0.180049,-0.508927],[-8.797805,-3.563362],[9.756502,-7.629253],[-2.283792,-2.880315],[1.074514,-3.607457],[-0.062392,9.771992],[-3.599955,8.741122],[-5.747089,3.754528],[8.413816,-6.400261],[9.367065,9.675337],[-9.890529,1.392046],[6.618858,-5.199359],[-8.664805,-8.342539],[5.626904,-8.843718],[-5.437144,-8.045960],[3.282940,2.777549],[6.636068,-9.857291],[-1.326294,8.144613],[-7.879398,7.651107],[-1.104840,-8.562785],[-0.402138,0.951413],[-5.495682,1.416946],[7.016708,6.943833],[3.559073,-0.121167],[-5.510378,1.121305],[-2.272695,-1.153568],[-7.056267,-7.289545],[9.832337,4.135005],[-3.649973,5.750343],[-7.626544,9.707894],[-5.683013,-2.947937],[4.636824,-7.840207],[7.354497,-3.586967],[-1.371781,-8.569238],[1.299831,2.185557],[0.636789,-5.061435],[-5.214664,-7.132285],[7.502504,-5.806702],[9.978364,2.036782],[3.043691,-0.340813],[-2.009857,-3.447710],[6.259788,7.147765],[-6.922828,9.931222],[3.304837,0.559104],[-9.598164,-0.385873],[0.125911,9.600835],[9.894477,9.968300],[7.339872,2.482978],[-4.370435,-9.544583],[5.972973,-0.156018],[4.639767,1.314531],[-6.214471,-0.938109],[0.295808,-7.595829],[5.888118,8.689601],[-8.256562,-3.295739],[-0.319118,2.825475],[1.175030,1.524880],[8.950417,-3.182811],[8.652527,7.120977],[-0.329601,-5.500326],[-0.088709,-0.209025],[7.652567,-5.034746],[-2.957226,4.520925],[5.862629,-4.071834],[-1.281136,4.236233],[9.498460,-0.690188],[5.369433,-1.232273],[2.772421,6.687937],[0.041379,-2.223715],[6.912480,0.038061],[9.570170,3.036971],[8.909811,4.449531],[2.392667,-2.056725],[0.926997,3.105217],[-3.274062,-6.892672],[0.506474,-3.377492],[-9.636853,0.852119],[3.487429,5.756341],[6.410074,5.250809],[-1.044378,-0.578906],[9.582443,3.627655],[-0.248231,-1.758008],[-8.017909,-0.454312],[-1.615422,7.046589],[8.229306,8.082866],[6.727230,6.760204],[7.594999,8.784073],[-4.730170,0.401494],[-4.333279,-2.924209],[9.093062,-4.924590],[9.367982,5.275383],[4.525471,-0.470263],[4.992753,5.851902],[9.338584,8.487923],[-2.728333,-4.852599],[2.347006,-3.302823],[-6.821378,-2.400168],[0.512251,-5.484810],[4.915202,1.266041],[-0.949875,-8.329818],[7.268113,-0.944710],[-4.467079,5.619160],[-0.943774,5.130918],[5.887582,-5.276179],[-2.239879,2.931505],[5.728232,6.365080],[-7.230697,7.475990],[-2.879496,-1.944971],[6.168403,-4.175996],[5.182257,-9.633038],[-7.730098,1.905585],[-4.461881,4.716447],[-1.836749,-6.096880],[-1.246952,-0.998612],[-2.251642,9.518223],[7.753980,-7.710015],[-8.734854,8.495771],[-2.645472,-3.690125],[7.637862,-6.920426],[7.413607,4.058048],[6.483573,9.477282],[3.992326,-3.848616],[4.397636,-9.590933],[1.050241,7.366342],[-9.317549,3.248231],[4.471568,8.472573],[5.543270,-8.263701],[4.383883,-3.828728],[3.516757,9.777848],[-3.533149,7.853908],[7.574451,-9.175947],[-8.105703,4.588512],[-6.900780,-5.356478],[-1.525927,4.001775],[6.983544,-1.883897],[2.171950,9.280868],[-9.788575,4.400946],[-7.231126,-1.687678],[-2.220296,5.062546],[-8.412034,6.954016],[0.599964,-7.631269],[4.252676,-9.059715],[6.504076,-9.540050],[8.186943,-1.010815],[-1.288528,-5.511044],[-7.933883,-4.516611],[-6.134701,1.133113],[-9.786635,3.802476],[-2.725315,1.330320],[8.943758,9.326814],[-8.900406,4.044772],[4.262675,1.603628],[2.352861,7.910444],[-1.023797,9.243437],[1.221932,-6.846686],[8.816259,2.344093],[9.340450,-2.315755],[-3.674786,-9.145949],[1.210957,5.685778],[3.562543,-6.343121],[-3.846805,-8.194944],[5.021631,9.608994],[-4.524749,3.715809],[-0.882638,-7.611932],[2.700484,-8.444236],[-4.893979,4.581998],[9.446954,-2.571262],[4.525877,5.138368],[-4.620467,0.023731],[1.340403,-8.183374],[-3.876369,-6.171132],[6.953680,-8.854802],[6.113935,-1.844881],[0.843189,3.516605],[-0.040429,2.905674],[-3.879792,-0.016449],[-9.863306,-3.662085],[-4.071055,-9.946573],[-2.272771,4.126109],[2.645060,8.157297],[5.294653,-5.875271],[4.349033,1.578923],[5.262555,7.171601],[6.649119,0.129111],[0.938674,-0.475998],[-0.361952,-9.251843],[2.396556,-5.505509],[-6.171905,1.542331],[-9.541966,-7.351690],[5.677463,7.046348],[4.758668,-2.215158],[-9.978359,-3.631645],[0.725225,-2.999474],[4.417349,5.504055],[-2.809476,6.416104],[8.546648,-2.929394],[-3.633851,3.167735],[-2.574885,2.776772],[0.865108,0.429730],[6.950314,-4.987143],[-8.701097,-7.836223],[9.206736,-2.635692],[-7.543583,-1.304236],[-9.159072,8.555397],[-8.498886,-0.037300],[9.180037,-5.715984],[4.810692,8.835358],[5.644456,6.070124],[-3.112664,-3.950094],[1.564829,2.788025],[-9.727216,8.611023],[9.966836,-5.751920],[2.444819,-9.863349],[-1.792987,-8.755184],[-9.184047,-7.316586],[9.260582,5.268368],[7.269992,4.493513],[-4.186144,-9.928466],[7.973875,1.041947],[-1.019266,-1.705144],[-4.501021,9.240361],[2.621361,-5.415721],[5.310007,9.064757],[0.343009,-8.822836],[-1.540863,8.828788],[-0.002509,-1.459867],[-8.669197,-7.368854],[5.724725,-9.171699],[-2.556653,-4.027613],[0.871012,2.289063],[1.829457,7.005917],[-6.682228,6.090212],[-5.631662,3.829818],[6.902702,-5.853298],[-1.788810,-6.462642],[3.495305,6.363169],[-5.521321,1.329229],[6.523954,-8.989708],[8.996958,1.583884],[2.677861,9.660177],[8.225301,8.754601],[-0.508370,-9.161919],[-2.019865,-6.608241],[-3.580987,0.295062],[8.880908,-9.528271],[-2.113297,6.362499],[6.111033,8.080117],[3.922418,-8.988893],[8.420259,4.801378],[8.464306,-1.247831],[1.436501,5.548650],[6.509035,-9.570162],[1.502979,3.678286],[-7.070326,0.559477],[3.623792,-0.427583],[4.694778,8.080247],[-0.656326,-4.725402],[8.631974,-6.960277],[6.068902,-4.625585],[-1.046461,6.184123],[2.761199,6.133744],[3.634298,6.128550],[0.969145,-6.523877],[-4.503867,-4.589023],[-9.870304,-5.335202],[6.657073,-4.291427],[-2.093430,8.474296],[-9.290714,-7.575943],[2.749076,1.299724],[4.503292,3.286806],[-1.548986,4.448093],[-3.616692,-5.418303],[5.992401,-8.714236],[7.509265,4.483195],[4.203450,-5.945645],[-5.970732,4.043225],[2.283536,-7.328213],[-5.926800,8.712611],[1.172711,1.960114],[-0.577935,4.838000],[6.947821,6.504206],[-5.883362,-4.035946],[9.620501,3.695658],[-6.311105,-2.388231],[4.807639,-0.184871],[-7.863006,7.743778],[-1.173170,9.631866],[-6.689819,-7.395535],[-1.298191,-0.785704],[0.390199,-1.493016],[7.220564,-9.067697],[2.906619,2.406150],[5.790074,-5.969610],[-9.728304,-8.527606],[-1.383781,1.216800],[-3.830318,-3.573810],[8.945151,0.102091],[-6.203207,-2.192692],[-5.984730,8.800867],[5.195186,-5.999901],[-2.178302,-5.303445],[-8.307126,4.014706],[7.129146,5.559943],[8.358081,-4.247037],[-3.747345,9.976720],[-3.680407,9.373797],[-5.906356,-5.481177],[2.646433,-1.137277],[1.802888,-3.817007],[6.636895,-4.201382],[2.051111,-4.669575],[-4.829537,3.991535],[1.037764,5.014895],[-3.640968,-5.674638],[6.584954,-3.325298],[3.996894,-5.143821],[-7.143982,4.522407],[-6.173323,-8.566941],[3.511574,-8.569578],[6.530484,9.109840],[-7.176788,-1.624896],[9.497159,8.063514],[6.941765,4.296084],[5.409270,6.087002],[7.018826,8.549154],[2.850595,4.968441],[7.085025,-3.565340],[7.264860,8.361718],[-6.253811,5.046364],[-9.921688,-6.201453],[-2.973667,-0.645914],[8.738433,6.894409],[-4.319014,-5.705379],[-2.323798,2.311613],[-4.034402,2.784211],[9.364399,5.920322],[-8.963662,1.133201],[-4.769024,0.118381],[9.120103,-8.142155],[6.561335,4.618894],[-2.891100,5.697678],[5.017851,-3.287979],[-5.932702,-8.480679],[-4.469040,0.423935],[-1.139028,3.054956],[-7.052323,1.300952],[5.593094,-9.459767],[-3.119274,-2.603751],[-2.693239,5.920098],[-4.874271,7.108133],[1.674264,-8.187650],[7.406842,8.789014],[-3.620905,-6.601474],[3.017748,2.725649],[6.539107,2.332202],[9.839583,0.965983],[-6.127911,-8.057269],[-3.951472,4.291306],[3.212721,-5.982929],[-6.702849,-6.994917],[-6.192056,4.904633],[-9.490638,-6.645322],[6.534900,7.508663],[-7.693606,-5.242860],[-7.789311,7.235466],[-7.356197,-3.049321],[9.740184,-3.800114],[-3.593661,-1.842978],[-1.121173,-4.220289],[-4.141875,-9.610406],[3.064369,1.749913],[-3.645389,-8.394119],[-0.820616,-1.814029],[-0.463411,-2.998972],[1.420224,7.931938],[2.956481,-3.040401],[-2.199112,-7.535720],[-7.103934,-9.950372],[4.598194,6.062283],[4.025804,-9.470754],[6.520687,-3.352997],[3.294870,9.536833],[1.380319,7.527593],[8.424590,-1.104569],[-3.219641,-5.585313],[-4.047967,-9.670444],[-8.711972,0.301414],[6.946143,9.382883],[-3.486260,8.339538],[-4.378555,-3.088389],[2.523886,-1.810791],[-0.316862,-7.986956],[-0.409331,2.216202],[7.966048,-4.718801],[2.823730,2.087535],[4.938610,3.076704],[-0.453305,0.801511],[-1.301318,5.211091],[8.489967,-9.468504],[-8.287067,4.814794],[2.600361,1.785712],[-6.864538,1.289025],[-8.190798,2.729775],[2.867927,5.716753],[8.332141,2.934952],[0.668298,2.441904],[-5.962082,-4.983058],[5.504808,8.035931],[-1.303641,6.586371],[-8.976462,-5.137033],[-7.450045,-4.599631],[-0.831528,1.035601],[9.199327,8.584616],[1.131659,4.149149],[-7.787161,0.932769],[8.600610,5.298827],[4.590106,5.562073],[1.746078,-7.136328],[1.599494,1.788566],[6.960648,5.504052],[9.285764,8.380453],[5.942755,8.738844],[-9.220215,3.034984],[4.235499,1.334398],[-1.039684,6.092588],[-7.517937,2.866901],[-3.934902,6.217036],[5.726806,-5.621116],[-2.912066,-3.831879],[9.805026,3.733421],[-8.615532,9.967638],[7.684250,-2.790399],[6.022127,1.887850],[-0.306000,3.641820],[-9.661882,-2.182097],[7.652968,-4.733873],[-5.836886,-3.459056],[-1.196983,4.289750],[-3.506457,3.410231],[0.586697,3.611652],[0.854770,-8.843422],[8.857491,-1.576334],[-9.202891,-0.745424],[-7.028546,5.993939],[7.466882,-5.257966],[-0.035258,-0.046815],[-3.751102,-0.012005],[9.318555,8.346867],[8.877215,-3.989120],[0.036165,-3.534965],[3.903201,-9.328132],[9.502186,-8.077115],[2.272766,9.130630],[-9.310698,-0.486479],[9.045674,-5.568208],[6.545077,3.700701],[4.947824,2.573319],[-9.913227,4.932661],[-9.080489,3.187358],[9.261197,-7.193237],[-0.594364,-5.625634],[2.381345,-2.014305],[-4.572069,-3.509204],[-3.927418,-1.628727],[9.081119,-0.691486],[9.262647,-4.608730],[0.090939,6.680761],[8.718742,1.591021],[7.434627,3.906569],[2.995153,3.211292],[-9.305687,3.640844],[0.587210,8.262781],[8.385427,5.272630],[2.909740,9.602038],[7.709971,9.057391],[-8.368929,5.311825],[7.684746,5.788859],[-1.892037,-3.417732],[-9.365739,2.535601],[5.668444,-1.361767],[-3.054665,7.969005],[6.329358,9.067601],[0.087968,-9.612921],[3.987640,-6.116412],[-5.735300,9.685665],[-8.736657,7.238024],[6.466954,3.734994],[6.342223,-7.590398],[7.376197,2.808815],[-4.133131,1.462066],[-6.115649,3.010003],[5.201889,-6.928474],[6.624504,-6.635452],[7.198377,-5.920281],[-8.546915,7.449988],[-8.581748,-3.707517],[4.392829,-5.214172],[-1.589996,3.956573],[2.182449,-7.923432],[-2.016893,-5.541042],[6.464537,-4.545386],[8.664866,9.994577],[-6.596189,5.097006],[-8.829881,-9.963724],[-1.079010,3.033601],[-9.123835,9.688347],[-2.744104,8.631650],[-1.923131,-6.324541],[-0.960011,-6.335592],[-3.963163,-5.873855],[-5.258541,4.730057],[6.807649,-6.424535],[-9.086831,-5.142902],[-5.068381,5.568783],[1.093445,-7.158479],[-5.744964,5.525530],[1.321912,-8.043338],[-9.061326,-6.407712],[4.911746,4.114721],[3.208830,-5.528673],[-8.304161,-4.848776],[-6.195916,8.277801],[-0.557866,7.447648],[-5.000626,-6.848283],[-6.387949,9.238652],[5.411167,7.115318],[3.209148,3.151635],[-3.929789,1.675645],[-3.000693,7.464483],[0.473650,-6.358194],[-3.435090,-2.187264],[9.030370,-1.092718],[-3.689376,-5.062338],[4.394336,-0.316747],[-4.156174,3.417935],[8.849472,0.679904],[1.788576,-2.968800],[3.976059,-4.992825],[-9.186331,9.888429],[3.956506,2.049274],[7.926287,6.224241],[6.805517,-6.370952],[9.652386,-2.787518],[-6.348669,-0.108630],[-6.345151,-8.164554],[-8.287241,-7.470191],[6.457730,-8.160467],[7.820130,-6.259704],[4.702179,-2.333825],[1.056386,-3.501358],[-4.339766,4.172070],[1.443699,-3.282144],[-4.498824,2.188308],[-8.225169,9.641389],[8.687546,-2.858273],[2.900284,-0.842010],[7.377205,5.197469],[4.987053,0.671738],[-7.684164,-4.069470],[7.440202,-7.849173],[1.156393,-2.931434],[0.805902,0.540944],[0.683898,1.379913],[0.462613,5.713034],[-9.972070,2.413315],[-9.734990,-1.604911],[-6.299725,-0.528627],[6.295329,0.708100],[7.488651,-0.774436],[-7.914698,4.465644],[-1.674914,-2.684962],[-3.897108,-3.368736],[3.813508,-4.588850],[-5.374830,-7.812600],[9.150256,-1.869314],[0.741328,5.285618],[6.862274,6.136283],[-8.535064,7.837692],[-3.127292,-3.641209],[7.029650,4.215841],[-0.874630,4.276802],[-8.512685,8.380453],[-9.901966,5.643482],[-3.230577,-8.289103],[-6.615052,4.614282],[5.891539,1.201065],[-4.094223,-7.420699],[-0.632356,-6.687239],[-8.521182,-7.086405],[-9.342904,-4.022419],[3.821691,-2.168415],[0.083094,-2.463528],[9.393068,-9.554356],[-4.473679,-4.414439],[8.230502,3.224359],[-9.855062,-9.369114],[3.794885,-2.327534],[0.286301,-4.574362],[-4.790941,-6.742024],[-3.291339,4.338651],[-0.401271,-7.378305],[-5.110105,9.540882],[8.539355,4.619960],[6.757756,-3.301236],[-3.959187,-3.256065],[-0.152411,4.252970],[2.395197,-3.423421],[-1.448088,1.630137],[4.030805,9.065006],[-6.677770,6.603465],[4.644506,-1.464710],[-3.515654,4.659534],[3.274781,-1.015971],[1.860577,-7.428664],[7.513691,-0.415353],[-5.832098,-8.644088],[9.983423,5.881297],[2.880001,5.965803],[-0.351172,2.333295],[3.627155,2.462916],[-2.299941,-2.643658],[7.074988,-1.200179],[7.603903,-7.916589],[7.131241,4.886458],[0.772034,-6.853244],[7.775718,8.301174],[0.086795,-3.296768],[-5.435082,5.993006],[-7.435569,-6.002048],[-0.445084,-4.958752],[5.479587,-3.678249],[-0.132593,4.521245],[-3.719835,-2.175429],[6.185334,7.583047],[-2.861363,6.767407],[-0.056458,8.605193],[-2.675377,-5.643113],[-8.894447,-7.006669],[-5.739672,-2.853101],[-2.928397,-5.014008],[-0.922657,-9.828932],[-7.643237,-7.770184],[-8.507358,9.424184],[4.102415,9.960796],[-2.327647,-6.980452],[-2.818601,-2.280500],[9.222430,4.401886],[-2.197602,8.838497],[-5.663956,5.679252],[0.110190,7.736592],[8.380395,-1.574012],[8.787211,1.885093],[-1.927619,6.770640],[-4.669757,2.506132],[-3.935760,-0.614247],[-1.649955,4.978013],[8.076148,0.540577],[7.124746,-7.521515],[-1.766187,4.475312],[-0.270386,2.918265]], dtype = "float64")#candidate|8177|(900, 2)|const|float64
call_8176 = relay.TupleGetItem(func_2749_call(relay.reshape(const_8177.astype('float64'), [12, 15, 10]), relay.reshape(const_8177.astype('float64'), [12, 15, 10]), ), 2)
call_8178 = relay.TupleGetItem(func_2753_call(relay.reshape(const_8177.astype('float64'), [12, 15, 10]), relay.reshape(const_8177.astype('float64'), [12, 15, 10]), ), 2)
output = relay.Tuple([call_8151,call_8176,const_8177,])
output2 = relay.Tuple([call_8152,call_8178,const_8177,])
func_8185 = relay.Function([], output)
mod['func_8185'] = func_8185
mod = relay.transform.InferType()(mod)
mutated_mod['func_8185'] = func_8185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8185_call = mutated_mod.get_global_var('func_8185')
call_8186 = func_8185_call()
output = call_8186
func_8187 = relay.Function([], output)
mutated_mod['func_8187'] = func_8187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7858_call = mod.get_global_var('func_7858')
func_7859_call = mutated_mod.get_global_var('func_7859')
call_8205 = relay.TupleGetItem(func_7858_call(), 0)
call_8206 = relay.TupleGetItem(func_7859_call(), 0)
uop_8209 = relay.erf(call_8205.astype('float32')) # shape=(13, 8, 12)
uop_8211 = relay.erf(call_8206.astype('float32')) # shape=(13, 8, 12)
output = uop_8209
output2 = uop_8211
func_8235 = relay.Function([], output)
mod['func_8235'] = func_8235
mod = relay.transform.InferType()(mod)
output = func_8235()
func_8236 = relay.Function([], output)
mutated_mod['func_8236'] = func_8236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8239 = func_7358_call()
call_8240 = func_7358_call()
func_8185_call = mod.get_global_var('func_8185')
func_8187_call = mutated_mod.get_global_var('func_8187')
call_8258 = relay.TupleGetItem(func_8185_call(), 2)
call_8259 = relay.TupleGetItem(func_8187_call(), 2)
output = relay.Tuple([call_8239,call_8258,])
output2 = relay.Tuple([call_8240,call_8259,])
func_8260 = relay.Function([], output)
mod['func_8260'] = func_8260
mod = relay.transform.InferType()(mod)
output = func_8260()
func_8261 = relay.Function([], output)
mutated_mod['func_8261'] = func_8261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8235_call = mod.get_global_var('func_8235')
func_8236_call = mutated_mod.get_global_var('func_8236')
call_8267 = func_8235_call()
call_8268 = func_8235_call()
output = call_8267
output2 = call_8268
func_8274 = relay.Function([], output)
mod['func_8274'] = func_8274
mod = relay.transform.InferType()(mod)
mutated_mod['func_8274'] = func_8274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mutated_mod.get_global_var('func_8274')
call_8275 = func_8274_call()
output = call_8275
func_8276 = relay.Function([], output)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8299 = func_7586_call()
call_8300 = func_7586_call()
func_7858_call = mod.get_global_var('func_7858')
func_7859_call = mutated_mod.get_global_var('func_7859')
call_8332 = relay.TupleGetItem(func_7858_call(), 0)
call_8333 = relay.TupleGetItem(func_7859_call(), 0)
output = relay.Tuple([call_8299,call_8332,])
output2 = relay.Tuple([call_8300,call_8333,])
func_8336 = relay.Function([], output)
mod['func_8336'] = func_8336
mod = relay.transform.InferType()(mod)
output = func_8336()
func_8337 = relay.Function([], output)
mutated_mod['func_8337'] = func_8337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8338 = func_7358_call()
call_8339 = func_7358_call()
func_8148_call = mod.get_global_var('func_8148')
func_8150_call = mutated_mod.get_global_var('func_8150')
call_8340 = func_8148_call()
call_8341 = func_8148_call()
uop_8346 = relay.asinh(call_8340.astype('float32')) # shape=(4, 10, 1)
uop_8348 = relay.asinh(call_8341.astype('float32')) # shape=(4, 10, 1)
func_3593_call = mod.get_global_var('func_3593')
func_3597_call = mutated_mod.get_global_var('func_3597')
var_8353 = relay.var("var_8353", dtype = "float64", shape = (1248,))#candidate|8353|(1248,)|var|float64
const_8354 = relay.const([1,5,-6,-10,-3,-6,-2,1,-8,8,6,-6,-3,-1], dtype = "int32")#candidate|8354|(14,)|const|int32
var_8355 = relay.var("var_8355", dtype = "int32", shape = (70,))#candidate|8355|(70,)|var|int32
call_8352 = relay.TupleGetItem(func_3593_call(relay.reshape(var_8353.astype('float64'), [13, 8, 12]), relay.reshape(const_8354.astype('int32'), [14,]), relay.reshape(var_8355.astype('int32'), [70,]), ), 0)
call_8356 = relay.TupleGetItem(func_3597_call(relay.reshape(var_8353.astype('float64'), [13, 8, 12]), relay.reshape(const_8354.astype('int32'), [14,]), relay.reshape(var_8355.astype('int32'), [70,]), ), 0)
func_8260_call = mod.get_global_var('func_8260')
func_8261_call = mutated_mod.get_global_var('func_8261')
call_8357 = relay.TupleGetItem(func_8260_call(), 0)
call_8358 = relay.TupleGetItem(func_8261_call(), 0)
output = relay.Tuple([call_8338,uop_8346,call_8352,var_8353,const_8354,var_8355,call_8357,])
output2 = relay.Tuple([call_8339,uop_8348,call_8356,var_8353,const_8354,var_8355,call_8358,])
func_8363 = relay.Function([var_8353,var_8355,], output)
mod['func_8363'] = func_8363
mod = relay.transform.InferType()(mod)
mutated_mod['func_8363'] = func_8363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8363_call = mutated_mod.get_global_var('func_8363')
var_8365 = relay.var("var_8365", dtype = "float64", shape = (1248,))#candidate|8365|(1248,)|var|float64
var_8366 = relay.var("var_8366", dtype = "int32", shape = (70,))#candidate|8366|(70,)|var|int32
call_8364 = func_8363_call(var_8365,var_8366,)
output = call_8364
func_8367 = relay.Function([var_8365,var_8366,], output)
mutated_mod['func_8367'] = func_8367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8378 = func_7358_call()
call_8379 = func_7358_call()
output = call_8378
output2 = call_8379
func_8385 = relay.Function([], output)
mod['func_8385'] = func_8385
mod = relay.transform.InferType()(mod)
output = func_8385()
func_8386 = relay.Function([], output)
mutated_mod['func_8386'] = func_8386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8392 = func_7586_call()
call_8393 = func_7586_call()
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8401 = func_8274_call()
call_8402 = func_8274_call()
func_3781_call = mod.get_global_var('func_3781')
func_3784_call = mutated_mod.get_global_var('func_3784')
var_8404 = relay.var("var_8404", dtype = "float32", shape = (7, 140))#candidate|8404|(7, 140)|var|float32
call_8403 = relay.TupleGetItem(func_3781_call(relay.reshape(var_8404.astype('float32'), [7, 14, 10])), 0)
call_8405 = relay.TupleGetItem(func_3784_call(relay.reshape(var_8404.astype('float32'), [7, 14, 10])), 0)
uop_8408 = relay.log10(var_8404.astype('float32')) # shape=(7, 140)
func_8385_call = mod.get_global_var('func_8385')
func_8386_call = mutated_mod.get_global_var('func_8386')
call_8418 = func_8385_call()
call_8419 = func_8385_call()
uop_8422 = relay.tan(uop_8408.astype('float64')) # shape=(7, 140)
bop_8426 = relay.greater(uop_8422.astype('bool'), relay.reshape(var_8404.astype('bool'), relay.shape_of(uop_8422))) # shape=(7, 140)
output = relay.Tuple([call_8392,call_8401,call_8403,call_8418,bop_8426,])
output2 = relay.Tuple([call_8393,call_8402,call_8405,call_8419,bop_8426,])
func_8429 = relay.Function([var_8404,], output)
mod['func_8429'] = func_8429
mod = relay.transform.InferType()(mod)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8430 = relay.var("var_8430", dtype = "float32", shape = (7, 140))#candidate|8430|(7, 140)|var|float32
func_8429_call = mutated_mod.get_global_var('func_8429')
call_8431 = func_8429_call(var_8430)
output = call_8431
func_8432 = relay.Function([var_8430], output)
mutated_mod['func_8432'] = func_8432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_8465 = func_7575_call()
call_8466 = func_7575_call()
output = relay.Tuple([call_8465,])
output2 = relay.Tuple([call_8466,])
func_8470 = relay.Function([], output)
mod['func_8470'] = func_8470
mod = relay.transform.InferType()(mod)
output = func_8470()
func_8471 = relay.Function([], output)
mutated_mod['func_8471'] = func_8471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8518 = func_8274_call()
call_8519 = func_8274_call()
func_7858_call = mod.get_global_var('func_7858')
func_7859_call = mutated_mod.get_global_var('func_7859')
call_8529 = relay.TupleGetItem(func_7858_call(), 0)
call_8530 = relay.TupleGetItem(func_7859_call(), 0)
func_7497_call = mod.get_global_var('func_7497')
func_7500_call = mutated_mod.get_global_var('func_7500')
var_8539 = relay.var("var_8539", dtype = "float32", shape = (528,))#candidate|8539|(528,)|var|float32
const_8540 = relay.const([0.665926,7.337860,-4.738319,5.488946,-6.044668,0.729539,-8.784119,-8.030762,9.404704,-4.031009,-2.954881,7.634840,-2.631915,-7.804409,1.038312,-0.723011,3.879846,6.596468,-2.235542,-5.396826,-4.533629,2.840221,-7.477033,-0.984317,4.894495,3.686240,0.238933,-4.574697,0.557621,6.141798,0.085680,8.884647,7.437635,-6.851766,0.051627,-9.899498,-8.837060,5.567096,5.458383,6.102881,-9.350823,7.581071,3.816671,3.271433,-2.389499,0.850985,8.546913,7.281191,-1.538707,-9.957442,-5.403938,2.584204,-3.970202,8.203268,-0.901999,-3.143876,2.885823,-5.787462,-4.209597,-1.498466,-7.515488,-3.600670,-8.571584,-4.541167,0.989532,1.101287,5.974283,8.677682,4.299001,-5.552518,3.604752,-5.276085,-5.888561,7.845376,3.443176,3.418789,-1.822898,0.406965,6.808943,5.851255,-0.014713,8.655693,7.023951,8.223564,6.998111,-1.968813,-1.720932,-5.473333,-4.790839,0.722536,1.569592,8.286397,-7.586862,-6.894118,9.425530,6.216900,-6.528888,1.305946,7.331830,-1.036351,-2.850992,2.927910,-7.993917,5.917547,0.051887,-7.826683,-2.795917,-9.906065,-3.900937,-4.323954,-1.117737,5.768821], dtype = "float64")#candidate|8540|(112,)|const|float64
call_8538 = relay.TupleGetItem(func_7497_call(relay.reshape(var_8539.astype('float32'), [528,]), relay.reshape(const_8540.astype('float64'), [28, 4]), ), 2)
call_8541 = relay.TupleGetItem(func_7500_call(relay.reshape(var_8539.astype('float32'), [528,]), relay.reshape(const_8540.astype('float64'), [28, 4]), ), 2)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_8545 = relay.var("var_8545", dtype = "int32", shape = (70,))#candidate|8545|(70,)|var|int32
var_8546 = relay.var("var_8546", dtype = "float32", shape = ())#candidate|8546|()|var|float32
const_8547 = relay.const([-2.704965,8.466457,-5.436404,-6.760456,-6.004932,2.525830,-0.447837,4.618842,-7.791977,9.126400,-4.997486,1.451605,-6.293639,2.175753,-5.010109,-7.274060,5.849210,-8.671840,6.649730,3.018168,-5.199760,-6.692274,7.047621,1.433528,-4.010513,0.713111,-0.540957,7.993455,-7.668609,-2.258142,0.113317,-2.332169,-5.823135,-5.557978,8.313341,-6.066506,3.848572,6.746741,-8.044361,-3.813898,9.396707,-3.962525,-8.182964,-4.863790,-9.660533,9.550717,2.440399,9.698423,-5.726971,-8.239259,1.579725,5.136361,5.452244,5.162289,2.095087,4.389812,6.703491,-8.077711,3.434501,3.263384,-5.494889,8.097105,-7.240405,9.578840,0.977754,-3.021995,-7.354010,9.618896,-2.688661,-7.125625,-9.788125,-9.706283,9.730954,7.160030,-9.905087,-1.654589,5.351094,-2.265789,-3.791606,0.829571,4.035934,6.755204,1.548063,-6.428540,8.818188,-5.551591,-2.422375,-3.160786,9.951039,-6.074076,-3.927806,-6.989789,-8.501220,8.338684,7.860376,-1.926350,-7.308353,-8.863692,-9.857809,-7.738687,3.279666,9.848405,9.160380,2.907908,4.893720,-4.336030,5.579133,-3.452166,-5.877405,-8.419146,-0.568950,-9.249009,-1.346392,-1.741633,7.530725,9.240489,9.321500,-9.538971,-1.921285,-6.494151,1.409931,5.126767,8.634495,4.543266,9.766449,2.356448,-2.766921,-4.203108,5.242789,-0.220591,0.278554,1.000465,-8.469214,-1.843647,-6.282249,7.637376,8.046040,-2.813380,-7.415791,-4.426069,3.108221,1.522210,-8.196731,2.520613,-8.338792,-6.148647,0.625514,3.475470,-6.869995,-1.736489,-8.215331,-5.978565,-2.805038,-2.943587,-1.154355,-7.100083,3.677607,-4.087114,8.872784,6.406605,9.052331,-5.307502,9.769829,-6.890384,9.245886,-0.136533,-5.834653,9.972205,5.992548,6.796337,4.424268,-3.649236,8.919336,-8.534532,-8.455235,1.908314,9.308560,-1.764375,4.234134,-6.788136,6.374672,-8.530040,-7.983636,-0.399363,5.842155,3.057448,5.645765,2.103292,-6.277792,5.975382,0.604242,-0.156544,-1.676539,-3.227068,-8.609631,-9.425106,8.494681,3.766575,4.434480,-7.358519,-5.949156,7.443999,6.520088,-3.168232,-8.042889,-1.212566,-7.879223,-4.563509,5.088914,-7.658235,-3.662554,0.166451,6.690957,5.123485,-0.994036,-8.207995,2.136590,-4.463854,-9.177505,7.537226,-7.166502,7.652366,-0.296376,-8.376613,-0.828814,2.786268,2.377772,-4.724390,-1.140741,1.191926,2.528915,1.220624,5.131719,4.493110,-0.329999,-2.484589,-8.144811,-7.611554,-9.798850,-7.620838,9.531933,3.023822,-8.241865,-6.675116,3.234715,9.515583,3.193423,2.913118,-6.159711,-4.350828,9.230265,-7.067514,-2.907336,7.882036,8.466115,0.413567,2.412827,0.687421,4.095977,-8.743260,-5.198962,5.896472,-5.316050,-4.327309,-3.557920,-9.713992,-0.654542,3.963720,0.673209,5.911889,4.489329,3.193677,8.012292,-0.656585,-2.410035,0.551102,4.789491,-0.068120,7.802878,-8.683903,-2.622227,-8.735712,6.259843,3.993823,-5.471575,2.463909,-8.109618,-2.910711], dtype = "float32")#candidate|8547|(288,)|const|float32
call_8544 = relay.TupleGetItem(func_1888_call(relay.reshape(var_8545.astype('int32'), [70,]), relay.reshape(var_8546.astype('float32'), []), relay.reshape(const_8547.astype('float32'), [4, 72]), ), 7)
call_8548 = relay.TupleGetItem(func_1893_call(relay.reshape(var_8545.astype('int32'), [70,]), relay.reshape(var_8546.astype('float32'), []), relay.reshape(const_8547.astype('float32'), [4, 72]), ), 7)
output = relay.Tuple([call_8518,call_8529,call_8538,var_8539,const_8540,call_8544,var_8545,var_8546,const_8547,])
output2 = relay.Tuple([call_8519,call_8530,call_8541,var_8539,const_8540,call_8548,var_8545,var_8546,const_8547,])
func_8560 = relay.Function([var_8539,var_8545,var_8546,], output)
mod['func_8560'] = func_8560
mod = relay.transform.InferType()(mod)
mutated_mod['func_8560'] = func_8560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8560_call = mutated_mod.get_global_var('func_8560')
var_8562 = relay.var("var_8562", dtype = "float32", shape = (528,))#candidate|8562|(528,)|var|float32
var_8563 = relay.var("var_8563", dtype = "int32", shape = (70,))#candidate|8563|(70,)|var|int32
var_8564 = relay.var("var_8564", dtype = "float32", shape = ())#candidate|8564|()|var|float32
call_8561 = func_8560_call(var_8562,var_8563,var_8564,)
output = call_8561
func_8565 = relay.Function([var_8562,var_8563,var_8564,], output)
mutated_mod['func_8565'] = func_8565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8336_call = mod.get_global_var('func_8336')
func_8337_call = mutated_mod.get_global_var('func_8337')
call_8567 = relay.TupleGetItem(func_8336_call(), 0)
call_8568 = relay.TupleGetItem(func_8337_call(), 0)
output = relay.Tuple([call_8567,])
output2 = relay.Tuple([call_8568,])
func_8573 = relay.Function([], output)
mod['func_8573'] = func_8573
mod = relay.transform.InferType()(mod)
mutated_mod['func_8573'] = func_8573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8573_call = mutated_mod.get_global_var('func_8573')
call_8574 = func_8573_call()
output = call_8574
func_8575 = relay.Function([], output)
mutated_mod['func_8575'] = func_8575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8621 = func_7358_call()
call_8622 = func_7358_call()
var_8624 = relay.var("var_8624", dtype = "float32", shape = (4, 10, 15))#candidate|8624|(4, 10, 15)|var|float32
bop_8625 = relay.floor_mod(call_8621.astype('float32'), var_8624.astype('float32')) # shape=(4, 10, 15)
bop_8628 = relay.floor_mod(call_8622.astype('float32'), var_8624.astype('float32')) # shape=(4, 10, 15)
uop_8636 = relay.cosh(var_8624.astype('float64')) # shape=(4, 10, 15)
output = relay.Tuple([bop_8625,uop_8636,])
output2 = relay.Tuple([bop_8628,uop_8636,])
func_8646 = relay.Function([var_8624,], output)
mod['func_8646'] = func_8646
mod = relay.transform.InferType()(mod)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8647 = relay.var("var_8647", dtype = "float32", shape = (4, 10, 15))#candidate|8647|(4, 10, 15)|var|float32
func_8646_call = mutated_mod.get_global_var('func_8646')
call_8648 = func_8646_call(var_8647)
output = call_8648
func_8649 = relay.Function([var_8647], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8655 = relay.var("var_8655", dtype = "float32", shape = (12, 15, 10))#candidate|8655|(12, 15, 10)|var|float32
uop_8656 = relay.sqrt(var_8655.astype('float32')) # shape=(12, 15, 10)
output = uop_8656
output2 = uop_8656
func_8661 = relay.Function([var_8655,], output)
mod['func_8661'] = func_8661
mod = relay.transform.InferType()(mod)
mutated_mod['func_8661'] = func_8661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8662 = relay.var("var_8662", dtype = "float32", shape = (12, 15, 10))#candidate|8662|(12, 15, 10)|var|float32
func_8661_call = mutated_mod.get_global_var('func_8661')
call_8663 = func_8661_call(var_8662)
output = call_8663
func_8664 = relay.Function([var_8662], output)
mutated_mod['func_8664'] = func_8664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_8666 = relay.TupleGetItem(func_7060_call(), 0)
call_8667 = relay.TupleGetItem(func_7061_call(), 0)
output = call_8666
output2 = call_8667
func_8668 = relay.Function([], output)
mod['func_8668'] = func_8668
mod = relay.transform.InferType()(mod)
mutated_mod['func_8668'] = func_8668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8668_call = mutated_mod.get_global_var('func_8668')
call_8669 = func_8668_call()
output = call_8669
func_8670 = relay.Function([], output)
mutated_mod['func_8670'] = func_8670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7613_call = mod.get_global_var('func_7613')
func_7614_call = mutated_mod.get_global_var('func_7614')
call_8676 = func_7613_call()
call_8677 = func_7613_call()
func_4773_call = mod.get_global_var('func_4773')
func_4778_call = mutated_mod.get_global_var('func_4778')
var_8725 = relay.var("var_8725", dtype = "uint8", shape = (1800,))#candidate|8725|(1800,)|var|uint8
const_8726 = relay.const([-6,10,10,4,-3,-6,-6,7,-4,8,-7,2,4,9,2,1,-2,1,-9,2,7,1,6,7,-8,-6,2,8,-5,7,10,-7,-10,-4,3,-9,2,6,-7,8,10,10,-3,-7,7,8,-1,-10,3,-8,-8,9,-8,-7,-7,-2,-2,8,-3,4,10,-9,-8,2,3,-10,-8,2,-1,4,-6,5,-1,3,-8,5,-10,-9,-5,10,10,10,8,-7,-1,-6,-9,4,4,5,-6,-1,7,7,-2,10,8,1,2,-2,1,9,-1,-2,-4,-8,-9,9,1,-10,4,7,9,-7,-8,-3,8,-8,7,-3,-9,3,2,-4,9,-7,3,4,-4,5,9,10,2,-8,10,-1,-4,6,6,2,3,8,-5,-8,-3,-8,2,2,8,2,1,8,8,3,2,-1,5,1,-2,-7,-3,-7,-5,-7,-9,2,2,5,-1,-6,-4,-10,-6,10,-1,3,4,-6,-1,3,-4,9,-4,-8,3,-10,2,-9,-2,-8,-6,4,1,10,-5,-1,9,-6,4,-9,-9,5,10,2,3,-4,1,10,10,-5,4,-5,-5,5,5,6,3,-7,-5,5,-9,8,7,-1,7,-3,3,3,8,-7,4,-7,7,1,5,2,5,3,6,-10,-9,4,-10,9,-7,-1,10,-7,5,10,4,-1,2,2,9,10,4,1,-1,1,7,-8,-3,-5,-2,6,7,-4,3,-6,5,-10,2,-2,2,-2,7,-7,4,7,-4,-10,2,9,-10,-10,1,-6,3,-5,-3,-3,6,1,1,5,-2,-8,1,-4,4,-7,-5,-9,3,3,-2,8,-6,7,-8,-5,-7,9,-2,-10,6,-3,-2,-7,-6,-5,-7,-8,4,2,-10,-4,-10,5,-5,-8,2,-2,-2,1,1,10,-9,-3,-6,4,-4,10,-1,-5,2,7,-5,-10,10,-6,-7,9,5,-8,-8,4,3,5,-3,-2,6,-10,-10,7,-4,-1,1,9,-1,-6,1,1,8,-10,10,7,-3,6,-7,-5,8,-2,-3], dtype = "uint64")#candidate|8726|(385,)|const|uint64
const_8727 = relay.const([-9,-3,5,-4,3,5,6,-9,8,4,10,6,3,-9,10,2,-8,-8,10,7,8,9,1,4,-3,5,-6,-3,1,-7,5,8,4,-6,10,10,-3,-3,-6,6,-3,-5,3,2,-8,-3,-6,-6,-9,-7,-6,-8,-5,-7,-7,-4,-3,-3,-7,-10,-2,9,6,-10,-10,5,-5,6,5,5,-6,2,8,-8,8,1,3,-2,7,-5,1,4,-4,-8,-6,8,-1,-1,-8,3,9,8,4,-2,-3,10,8,2,6,8,4,-2,-10,4,-6,-4,9,-8,3,5,-6,8,9,-5,-9,-5,-2,-7,-3,-8,8,-3,-5,1,8,4,1,9,3,4,-8,-6,-9,-3,-4,9,-5,10,-3,10,8,-7,-5,10,-2,-9,-5,-1,7,-7,4,-2,8,1,-4,-3,4,-1,8,-6,-6,-1,1,7,5,-1,-8,10,-7,-9,1,-1,-4,3,-4,4,-5,2,8,-5,1,-4,9,9,4,-6,2,7,2,9,10,-7,-10,-2,-10,5,-3,2,-4,7,-1,-2,-2,8,-8,9,2,-2,7,-3,1,8,-7,-7,3,7,-8,-6,8,4,3,-6,1,7,4,-7,-6,-2,-7,-3,2,6,-1,-10,-8,-6,10,-8,-2,3,5,-4,4,5,4,2,8,-5,2,-7,-2,5,-7,-4,-10,-8,6,-7,9,-2,1,-8,-3,9,6,8,-1,9,8,10,2,-2,-1,1,-2,-2,10,-4,-2,-10,9,6,1,-9,-3,-6,8,-5,8,10,2,4,3,-3,-1,3,1,9,7,2,8,4,7,-6,9,8,7,1,2,-4,7,2,-7,3,-10,1,-4,-5,-8,7,-4,-7,8,2,2,-2,3,8,-6,1,5,-5,1,-1,10,4,-2,6,9,-2,4,-1,-10,7,1,4,-2,-6,-1,-1,4,7,-8,-9,-1,-7,5,-3,6,-2,10,4,9,6,-6,2,-4,-9,-2,-9,-7,9,2,-8,-4,7,8,-9,-9,8,-3,7,-9,-10,-3,3,5,6,8,8,-4,-7,4,1,10,-1,10,-2,4,-10,-1,9,-7,-3,-8,-6,-4,7,8,3,7,-2,-2,6,6,-3,6,-5,6,7,-1,-8,-7,-4,3,4,-1,-9,-9,-7,8,4,-1,-9,8,-10,-1,5,3,3,-7,10,-1,9,1,-7,-5,2,-9,-2,9,8,-2,5,2,-5,-3,7,1,6,-3,2,-1,5,-7,10,2,-5,-1,-2,-8,-4,-10,-7,-8,-7,-3,2,-3,-7,-5,-6,7,9,-2,2,8,3,6,10,-2,-8,6,-2,-4,-9,7,4,-9,-1,6,2,-9,3,-4,3,10,2,9,4,4,4,1,5,-5,-10,10,-4,-7,-4,9,-9,-9,4,-7,-3,2,-4,5,2,6,10,3,4,-2,3,8,-2,-4,-4,7,-4,5,3,-9,-2,8,-10,-8,3,3,-3,7,-7,-4,-4,8,-9,7,-5,-8,1,10,6,-4,-8,-6,-9,8,6,6,-10,-9,9,2,4,2,-5,5,-10,10,-7,1,-9,-1,-1,-6,-1,-2,3,-4,-6,-10,-7,-10,-5,7,9,9,6,-5,-5,8,6,-6,-5,-3,7,10,10,10,-4,-1,-6,-3,8,-9,-8,1,-8,4,7,4,3,-7,6,2,6,-3,2,5,3,-5,1,-9,-4,2,-2,-5,-2,2,10,10,-5,-10,-8,-9,9,3,3,-10,-7,-8,1,-6,4,3,-9,-1,5,-3,6,-5,9,4,-2,-7,-9,7,-6,4,-10,5,-9,8,-10,6,-5,3,-9,-4,-3,1,5,1,1,-3,-2,2,9,-3,1,6,-2,-9,-6,-3,5,-1,2,-6,-7,5,9,9,9,8,-5,9,-5,-8,3,-10,-5,-1,-2,1,-5,-9,8,-6,-1,-1,1,4,8,7,-5,-2,-9,-9,-1,10,-1,-2,-8,7,3,6,10,9,1,-1,-2,-7,7,2,8,-4,3,-7,-6,-10,6,2,5,-8,-9,5,4,-4,9,9,-2,-6,10,-7,2,5,3,-6,3,9,2,3,5,7,3,-9,10,1,-1,-6,4,-10,1,9,9,3,-9,7,6,-6,-1,-6,-2,-1,-3,-5,10,-6,-1,-4,1,4,-6,4,7,2,6,-9,3,9,-8,-5,-2,-9,5,5,-1,-8,10,-10,1,-6,-8,-5,-6,-8,-1,-3,3,-5,-5,4,9,-2,1,7,4,1,8,-6,10,-9,7,3,-3,-6,-9,4,-2,9,10,7,9,7,-2,10,-7,5,10,-1,6,-1,10,3,2,5,-7,-6,-10,4,4,-6,-2,4,-6,-6,4,9,1,-8,-5,-2,5,1,-1,-9,-8,5,-5,3,-3,6,-4,-3,-7,7,4,-4,-7,6,9,-2,-2,6,-5,-1,-6,8,-1,5,2,10,1,-6,-1,6,-10,7,-7,-1,10,3,-8,7,1,-7,-4,-8,-3,1,9,-3,8,-4,3,-7,5,10,-10,5,9,-4,-9,5,-9,7,8,10,10,-10,7,-7,-7,10,-3,9,-4,-4,7,6,-8,5,-5,-1,-9,9,6,2,2,-1,4,-7,-2,3,2,7,-4,-7,9,5,7,-6,7,-8,-10,4,-8,-2,1,2,-7,-3,-1,-2,-8,-8,1,2,4,7,-1,-5,1,1,-5,7,-2,-4,3,-5,5,8,9,-3,9,4,2,-1,9,7,7,-5,-4,-5,-9,8,4,-1,3,4,6,4,-7,3,8,-9,1,5,-7,4,1,-1,7,5,-5,-4,7,1,4,10,-3,7,5,1,4,-9,7,-9,-9,4,3,7,7,-4,1,3,2,-7,-5,2,-6,-6,8,-7,10,-3,1,-3,-5,1,10,9,7,-3,-4,4,4,3,7,-1,3,-10,-1,7,9,-1,4,-2,-5,3,-8,9,7,3,4,-1,-5,3,5,1,8,4,3,-2,1,-8,-2,-10,-1,-5,9,3,-10,-2,-6,10,7,5,9,8,1,-8,3,4,-3,2,-8,7,-1,2,4,-1,-5,10,-2,-4,4,-7,-2,-4,3,-6,-1,6,4,9,-9,8,5,-10,6,-1,5,-9,3,1,-7,7,-2,10,-3,1,-9,8,6,-2,-1,5,3,3,5,-1,3,-2,3,10,-3,9,-1,-8,4,-9,5,1,8,-5,1,7,6,-8,1,6,-10,-8,4,8,-7,5,3,-1,1,5,-2,6,2,-6,6,9,-8,9,-2,-10,-7,3,2,-2,8,4,10,5,-6,6,-4,9,9,-4,4,2,-8,1,6,2,1,-3,8,4,10,7,3,6,4,7,-3,-9,-3,-10,4,-3,9,-9,-6,4,-2,-10,9,-1,5,10,4,-8,2,7,1,4,-6,1,-5,-7,-8,-2,-4,-1,-10,6,2,2,-1,9,-9,-6,-5,8,-1,-7,-4,7,3,-7,-9,-8,7,7,6,-2,1,1,-4,-6,-6,6,-3,9,3,8,1,4,-5,-5,-7,8,-6,3,-10,5,-3,5,5,1,-4,-9,6,-2,-4,-4,6,10,2,10,-2,7,7], dtype = "uint32")#candidate|8727|(1344,)|const|uint32
call_8724 = relay.TupleGetItem(func_4773_call(relay.reshape(var_8725.astype('uint8'), [15, 12, 10]), relay.reshape(const_8726.astype('uint64'), [385,]), relay.reshape(const_8727.astype('uint32'), [1344,]), ), 2)
call_8728 = relay.TupleGetItem(func_4778_call(relay.reshape(var_8725.astype('uint8'), [15, 12, 10]), relay.reshape(const_8726.astype('uint64'), [385,]), relay.reshape(const_8727.astype('uint32'), [1344,]), ), 2)
func_994_call = mod.get_global_var('func_994')
func_998_call = mutated_mod.get_global_var('func_998')
const_8736 = relay.const([[-6,-4,8,-6,-10,-7,5,10],[3,-4,3,6,-7,6,9,-5],[5,-8,5,-9,8,7,-3,-1],[5,1,-7,5,-6,-10,-2,-9],[-2,9,-10,-2,2,4,-4,-4],[-2,6,-2,3,-3,2,-8,2],[8,9,10,6,1,-9,-5,-6],[8,6,3,9,-10,3,1,-10],[-7,-9,-8,-8,3,6,10,4],[-1,9,8,4,-10,10,10,-2],[-6,-3,6,-5,-9,-8,10,7],[2,9,-8,2,8,1,9,-7],[4,1,-1,10,7,7,10,3],[3,-2,5,-9,5,2,-3,8],[9,9,8,-8,-5,-4,-10,-7],[-1,4,-4,-6,2,2,7,5],[1,-5,-3,-6,9,-5,9,4],[2,3,-2,6,8,-1,10,-2],[4,-2,10,9,-7,8,8,-5],[1,-8,-10,-9,4,5,10,7],[-5,-2,8,-4,-6,3,6,6],[-8,2,-1,-8,5,-9,3,8],[8,2,-1,-10,-1,-1,-3,-4],[-1,8,-9,7,2,-8,3,-2],[8,-6,2,-8,-1,10,5,-4],[4,8,-2,7,10,-8,5,-3],[-6,4,5,3,-10,-1,-8,-1],[8,-6,-4,-4,-2,7,-2,2],[9,8,-7,-9,3,-2,-4,-5],[-4,-3,-8,5,9,5,4,1],[-3,-5,-9,9,-6,-7,6,5],[5,-10,-4,10,1,-7,5,6],[7,10,10,10,-10,6,-8,-6],[8,-3,5,8,-1,8,-2,-5],[10,7,-5,-3,3,-1,-2,-4],[-6,-5,-2,-4,-9,-8,9,-4],[-9,6,-9,10,-2,-4,1,5],[7,-8,-4,-2,7,5,-5,4],[9,9,2,-1,4,9,3,3],[-7,-9,-3,5,4,5,-1,5],[-10,-10,-6,9,6,3,3,9],[7,2,-10,-10,-8,-4,-6,1],[-3,-8,-1,9,4,-7,10,-8],[6,8,6,-10,3,-1,3,4],[-2,7,1,3,9,-4,-5,-7],[2,-7,-3,3,3,6,-8,3],[5,5,7,-3,7,-9,-10,3],[4,-2,-9,5,-1,-9,3,10],[4,-6,-5,-9,-6,5,5,-2],[2,-5,1,4,-3,2,6,6],[9,-1,2,-7,8,-6,1,-1],[-4,-3,-6,-6,1,5,-9,-7],[4,1,10,4,-9,3,10,5],[8,-8,7,3,1,-3,-8,7],[10,8,7,10,-2,-7,4,-6],[-2,-9,8,6,2,8,-2,4],[6,-4,1,10,-4,8,1,-4],[-8,-1,-5,-6,6,8,10,2],[1,-8,7,-10,6,-2,-3,9],[9,8,7,-2,-7,-3,-10,4],[10,-6,1,-9,-3,4,-7,-7],[-5,10,-10,-8,-1,-5,-5,-4],[4,-1,7,4,3,8,-4,-6],[-4,2,-7,1,1,-2,-7,-1],[-8,8,2,-9,-9,-5,-4,2],[7,9,6,3,8,-2,-4,7],[-5,9,-4,-2,-5,-8,8,-6],[5,9,7,-7,-9,-1,-3,-5],[1,6,10,10,7,-4,-7,-9],[8,-4,-2,-2,-1,2,-1,-4],[10,-8,2,-6,6,-3,10,7],[-10,5,-1,2,9,-10,2,-1]], dtype = "int8")#candidate|8736|(72, 8)|const|int8
call_8735 = relay.TupleGetItem(func_994_call(relay.reshape(const_8736.astype('int8'), [6, 8, 12]), relay.reshape(const_8736.astype('int8'), [6, 8, 12]), ), 0)
call_8737 = relay.TupleGetItem(func_998_call(relay.reshape(const_8736.astype('int8'), [6, 8, 12]), relay.reshape(const_8736.astype('int8'), [6, 8, 12]), ), 0)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_8754 = func_7575_call()
call_8755 = func_7575_call()
output = relay.Tuple([call_8676,call_8724,var_8725,const_8726,const_8727,call_8735,const_8736,call_8754,])
output2 = relay.Tuple([call_8677,call_8728,var_8725,const_8726,const_8727,call_8737,const_8736,call_8755,])
func_8756 = relay.Function([var_8725,], output)
mod['func_8756'] = func_8756
mod = relay.transform.InferType()(mod)
mutated_mod['func_8756'] = func_8756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8757 = relay.var("var_8757", dtype = "uint8", shape = (1800,))#candidate|8757|(1800,)|var|uint8
func_8756_call = mutated_mod.get_global_var('func_8756')
call_8758 = func_8756_call(var_8757)
output = call_8758
func_8759 = relay.Function([var_8757], output)
mutated_mod['func_8759'] = func_8759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8385_call = mod.get_global_var('func_8385')
func_8386_call = mutated_mod.get_global_var('func_8386')
call_8801 = func_8385_call()
call_8802 = func_8385_call()
output = call_8801
output2 = call_8802
func_8812 = relay.Function([], output)
mod['func_8812'] = func_8812
mod = relay.transform.InferType()(mod)
mutated_mod['func_8812'] = func_8812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8812_call = mutated_mod.get_global_var('func_8812')
call_8813 = func_8812_call()
output = call_8813
func_8814 = relay.Function([], output)
mutated_mod['func_8814'] = func_8814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8835 = func_7358_call()
call_8836 = func_7358_call()
const_8837 = relay.const([[[-3.226743,-7.629051],[-6.959784,-5.703999],[0.040852,-1.625314],[8.545886,-0.413235],[7.311422,-9.896296],[-8.567446,-0.817216],[8.807059,-3.408230],[2.578963,-7.895248],[-2.943889,-6.451249],[3.640274,7.459337]],[[3.017577,5.856739],[-4.659283,5.602129],[-0.494238,9.850469],[-9.293355,-1.891556],[-9.238639,0.022946],[-5.952306,3.888898],[3.992768,6.056604],[-4.855201,5.902771],[-8.946251,8.278256],[-9.879968,-2.300548]],[[-3.065137,7.218014],[8.160245,-7.244379],[3.761240,2.812385],[-3.996984,-8.193750],[9.764711,-3.151011],[-3.053587,2.756313],[-2.584617,-4.800216],[5.932495,8.932938],[-8.312172,-4.066848],[-9.317657,2.755196]],[[-5.800710,-6.453896],[2.640097,-4.177786],[-2.687622,-2.282321],[-1.809536,-5.098003],[-5.670669,3.559673],[8.865002,5.136517],[-3.870213,-9.020410],[7.812601,-0.601417],[-0.854277,-2.432822],[5.147476,-6.098530]]], dtype = "float32")#candidate|8837|(4, 10, 2)|const|float32
bop_8838 = relay.left_shift(call_8835.astype('int16'), const_8837.astype('int16')) # shape=(4, 10, 2)
bop_8841 = relay.left_shift(call_8836.astype('int16'), const_8837.astype('int16')) # shape=(4, 10, 2)
output = relay.Tuple([bop_8838,])
output2 = relay.Tuple([bop_8841,])
func_8846 = relay.Function([], output)
mod['func_8846'] = func_8846
mod = relay.transform.InferType()(mod)
output = func_8846()
func_8847 = relay.Function([], output)
mutated_mod['func_8847'] = func_8847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8150_call = mutated_mod.get_global_var('func_8150')
call_8854 = func_8148_call()
call_8855 = func_8148_call()
func_6719_call = mod.get_global_var('func_6719')
func_6723_call = mutated_mod.get_global_var('func_6723')
var_8863 = relay.var("var_8863", dtype = "int64", shape = (1872,))#candidate|8863|(1872,)|var|int64
const_8864 = relay.const([-7,5,-8,-10,10,-4,-1,6,-2,-7,-1,4,9,8,-7,5,6,5,3,-4,5,3,-1,-6,-2,-3,-3,-6,-5,2,-1,-8,-9,4,8,-6,8,-1,-10,9,-9,-4,-1,9,-7,8,9,7,-8,-1,9,-3,7,-5,10,9,-8,4,-5,5,-5,2,-8,-4,-9,5,2,-6,-10,4,-5,-1,-5,-2,9,2,8,-10,4,3,8,-3,5,-7,-10,-7,3,-8,5,1,-7,8,9,-4,-1,-6,4,-9,-3,-6,-7,-8,10,-3,7,-9,-6,-2,6,-8,2,5,-7,6,1,3,-2,-2,-8,-9,8,-1,-6,1,-8,10,7,5,2,-4,-1,2,-7,-8,-1,3,-7,-8,-9,9,-2,-5,-4,2,10,-8,-2,-6,7,7,-3,9,-7,4,-6,3,-2,6,9,-2,4,1,10,-7,1,5,6,-5,1,-9,4,4,10,-2,9,-1,-3,1,10,-10,-3,7,9,2,-1,8,5,-9,-3,6,-4,5,9,-1,-3,2,-8,-5,8,8,10,-5,7,10,7,-1,4,10,-1,2,4,2,-2,-10,6,-2,-1,1,-4,-9,6,-6,6,-4,9,-3,-2,6,3,6,3,6,-8,-3,8,5,-1,-6,7,8,-6,8,7,1,9,9,-9,5,4,10,-9,7,4,-9,-3,-6,7,6,7,1,-9,9,7,-5,-1,4,10,9,7,6,4,-9,-5,4,4,-1,8,-1,3,8,1,-3,5,6,2,2,-3,7,-5,3,8,4,-1,3,-3,7,4,6,1,-3,-5,9,5,-7,6,-2,1,10,-3,7,3,9,-1,9,8,-5,7,10,-9,-6,8,-9,6,-2,-4,4,-2,-7,9,-6,-7,9,-4,-10,9,-8,-4,5,-10,-10,5,-2,-6,-1,-6,-3,8,9,-2,-7,-2,7,5,7,-8,-10,10,1,10,2,-8,8,-6,2,-5,10,-5,7,-8,5,-1,2,-6,7,6,-3,4,-2,10,2,-2,-5,1,7,4,7,7,-7,6,-9,3,7,-5,2,5,-1,8,6,-7,9,4,-7,7,4,-9,-6,-6,2,3,7,9,7,-3,7,5,-1,1,-10,3,-2,10,5,-2,-9,2,-5,3,10,-4,-4,-10,7,-3,10,4,8,-1,-10,-1,-9,5,6,5,-2,3,-9,-10,-4,5,1,-9,5,-4,-4,4,-8,5,-6,1,1,-3,9,-7,8,-9,3,-8,10,3,-4,5,-7,9,-3,1,-4,-4,-10,8,-7,5,-6,8,4,10,-10,4,-7,9,3,6,4,2,5,2,-6,-1,1,-8,1,-4,5,8,-1,4,9,-3,3,9,-5,9,-7,6,10,-4,4,-3,8,-2,10,-4,7,-2,-7,8,9,5,-6,5,-7,-8,-8,9,-2,-6,-7,1,-2,-2,-1,10,6,9,6,-9,-4,-3,7,10,-1,2,-9,-1,6,-9,-4,1,4,-3,4,3,-8,-2,-6,-6,1,6,1,-2,-1,-3,7,6,-4,2,-2], dtype = "int8")#candidate|8864|(576,)|const|int8
call_8862 = relay.TupleGetItem(func_6719_call(relay.reshape(var_8863.astype('int64'), [13, 16, 9]), relay.reshape(const_8864.astype('int8'), [576,]), ), 1)
call_8865 = relay.TupleGetItem(func_6723_call(relay.reshape(var_8863.astype('int64'), [13, 16, 9]), relay.reshape(const_8864.astype('int8'), [576,]), ), 1)
output = relay.Tuple([call_8854,call_8862,var_8863,const_8864,])
output2 = relay.Tuple([call_8855,call_8865,var_8863,const_8864,])
func_8873 = relay.Function([var_8863,], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
var_8874 = relay.var("var_8874", dtype = "int64", shape = (1872,))#candidate|8874|(1872,)|var|int64
output = func_8873(var_8874)
func_8875 = relay.Function([var_8874], output)
mutated_mod['func_8875'] = func_8875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8901 = relay.var("var_8901", dtype = "float32", shape = (14, 4, 1))#candidate|8901|(14, 4, 1)|var|float32
uop_8902 = relay.asin(var_8901.astype('float32')) # shape=(14, 4, 1)
output = relay.Tuple([uop_8902,])
output2 = relay.Tuple([uop_8902,])
func_8906 = relay.Function([var_8901,], output)
mod['func_8906'] = func_8906
mod = relay.transform.InferType()(mod)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8907 = relay.var("var_8907", dtype = "float32", shape = (14, 4, 1))#candidate|8907|(14, 4, 1)|var|float32
func_8906_call = mutated_mod.get_global_var('func_8906')
call_8908 = func_8906_call(var_8907)
output = call_8908
func_8909 = relay.Function([var_8907], output)
mutated_mod['func_8909'] = func_8909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8970 = func_7586_call()
call_8971 = func_7586_call()
output = relay.Tuple([call_8970,])
output2 = relay.Tuple([call_8971,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
output = func_8974()
func_8975 = relay.Function([], output)
mutated_mod['func_8975'] = func_8975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8336_call = mod.get_global_var('func_8336')
func_8337_call = mutated_mod.get_global_var('func_8337')
call_8983 = relay.TupleGetItem(func_8336_call(), 0)
call_8984 = relay.TupleGetItem(func_8337_call(), 0)
uop_8989 = relay.cos(call_8983.astype('float32')) # shape=(4, 10, 1)
uop_8991 = relay.cos(call_8984.astype('float32')) # shape=(4, 10, 1)
func_8429_call = mod.get_global_var('func_8429')
func_8432_call = mutated_mod.get_global_var('func_8432')
var_9001 = relay.var("var_9001", dtype = "float32", shape = (980,))#candidate|9001|(980,)|var|float32
call_9000 = relay.TupleGetItem(func_8429_call(relay.reshape(var_9001.astype('float32'), [7, 140])), 4)
call_9002 = relay.TupleGetItem(func_8432_call(relay.reshape(var_9001.astype('float32'), [7, 140])), 4)
func_8573_call = mod.get_global_var('func_8573')
func_8575_call = mutated_mod.get_global_var('func_8575')
call_9003 = relay.TupleGetItem(func_8573_call(), 0)
call_9004 = relay.TupleGetItem(func_8575_call(), 0)
output = relay.Tuple([uop_8989,call_9000,var_9001,call_9003,])
output2 = relay.Tuple([uop_8991,call_9002,var_9001,call_9004,])
func_9006 = relay.Function([var_9001,], output)
mod['func_9006'] = func_9006
mod = relay.transform.InferType()(mod)
var_9007 = relay.var("var_9007", dtype = "float32", shape = (980,))#candidate|9007|(980,)|var|float32
output = func_9006(var_9007)
func_9008 = relay.Function([var_9007], output)
mutated_mod['func_9008'] = func_9008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_9018 = func_7575_call()
call_9019 = func_7575_call()
func_8661_call = mod.get_global_var('func_8661')
func_8664_call = mutated_mod.get_global_var('func_8664')
const_9021 = relay.const([8.449504,-3.895258,-9.370506,6.211167,0.486668,-8.888559,-9.763516,-9.669075,-8.970541,-5.065574,-1.636190,-5.324398,-8.698799,7.390426,-4.779571,-8.436716,-2.045639,5.009077,7.368326,4.973115,-9.836539,7.680929,3.883379,7.923287,-4.446210,4.387893,2.555269,-4.382927,-3.335756,-7.799590,-6.379381,-3.670214,6.046474,5.257126,-3.354448,5.249089,7.397691,-4.887429,5.732567,-9.753049,4.949909,-5.850256,7.697930,-0.359078,-3.981400,9.410724,7.762912,6.658859,2.269356,1.373177,9.957236,-1.070022,5.507998,-0.948888,-8.918037,-0.298236,-3.345874,1.322911,1.427198,5.690555,-1.323722,7.446116,8.672341,-7.953213,5.720586,-8.111937,6.540152,5.094877,6.188196,6.170794,1.667050,-4.838631,-4.919925,1.381780,4.845010,5.032265,1.349143,-8.456976,5.580447,8.753501,-7.983810,-2.938828,2.536298,8.107989,1.569649,-1.352689,-3.599314,-8.944092,-6.105171,2.198611,-7.602611,7.635903,9.548349,-0.793951,2.251687,1.441261,-1.849068,6.763484,-7.577225,-0.576732,9.002324,-0.931229,0.704378,-3.583891,-0.398176,-1.574495,-7.478649,8.839310,6.435393,-9.494608,3.243247,-3.295190,1.710006,4.961891,-5.548096,0.890298,7.549796,-1.512021,-8.463463,-8.111888,-6.092289,-1.046087,3.762265,-6.442631,9.374292,3.789411,-4.729807,-8.850046,1.432950,1.477976,-5.717912,9.948270,-8.702727,-3.769746,-9.528014,-0.663162,7.144866,0.103098,-7.558046,4.205116,-0.991120,-1.413610,1.136545,0.289612,8.992384,-0.212271,1.333388,8.248160,1.345517,6.519472,-0.585575,-8.942092,-6.489726,-0.667409,2.267814,-7.869625,-7.435736,8.920029,-5.194223,-8.129957,2.055409,2.095020,-3.841461,0.532490,-2.320811,8.414379,-2.488020,9.821481,2.758455,8.637547,6.937901,3.094008,-9.864102,0.368698,8.643855,-9.420769,6.138081,6.976824,-4.843588,4.882505,1.871154,-0.250979,2.308255,-3.256899,1.878231,1.475935,-5.049663,6.421725,6.592177,7.873589,-3.655541,-1.712610,0.680799,-2.666782,-1.838254,-1.230615,-5.305528,8.793738,-4.472526,1.511096,4.887543,7.225281,3.525291,-6.765737,6.785551,2.920435,-9.586866,9.457916,1.853218,3.346264,-5.698264,-7.907737,-4.602485,-3.599679,4.652197,4.317745,-5.237668,-2.475766,4.220595,1.761814,-5.997920,-8.263141,-2.790597,-5.785983,5.063909,2.542985,-5.250303,2.138109,4.726087,2.095260,5.757277,8.871517,5.462812,3.576516,-7.777179,-7.369178,5.125143,2.937718,-2.941314,2.581610,-1.925959,3.353590,-8.905219,3.459770,-2.786946,6.106296,6.077558,-1.150253,-9.081760,8.026477,-3.406238,-8.157178,0.289663,0.776805,8.891086,7.251482,1.215344,-5.456377,0.371840,3.507491,7.139201,6.826550,1.522755,8.074532,1.310245,-6.369720,-6.904312,5.947555,4.838885,-4.893395,-1.045668,-4.493343,-3.937009,4.725411,-6.487087,-6.946508,6.432340,7.100640,9.797765,1.567547,4.035365,-9.020386,-6.695375,9.682690,-3.288308,-3.787696,-3.106400,-3.718267,-6.067254,-2.068904,-9.833150,-2.082579,2.356253,-1.955263,-5.275521,5.786788,2.294449,-5.166755,-4.689378,1.046302,7.909856,2.974829,-6.640444,-0.834520,4.137435,-1.185443,5.365443,-9.906745,-4.090102,8.979337,-9.865224,-7.738609,-3.299982,6.072300,7.260381,8.389113,-2.026216,-3.109829,-4.080764,6.604488,2.409169,8.719124,-9.951889,4.748710,-4.479721,-1.407402,-4.193331,7.020577,1.319743,3.298283,8.573366,0.814586,4.866893,8.079724,-6.832425,9.247979,-4.017864,0.407433,-0.546808,2.250762,2.983999,1.813196,-9.731032,5.267139,9.279814,-7.556697,7.479003,2.691862,6.521153,9.814009,2.027062,-5.867656,6.095589,4.061064,-5.111106,9.669982,-7.971531,5.877003,0.900837,-1.333337,6.395610,3.343382,-9.880627,6.965820,8.501969,6.100164,-8.964881,-1.470495,8.934105,1.913578,-6.043126,-9.809680,-8.230529,-4.252256,-1.400058,-1.805436,2.805931,-9.329781,-5.292159,-9.110420,-1.695960,3.262781,2.909801,4.225480,4.818908,-2.234079,7.277830,-0.828089,2.887510,8.176860,6.680634,6.313200,7.164530,-9.242469,-9.277799,-2.315701,-1.811593,9.500514,3.025938,6.259841,3.166461,2.084424,-0.445228,-2.094953,-1.675294,3.424033,-4.457904,-1.229407,-1.641661,9.807438,0.764916,-5.375709,0.652466,2.615612,-6.083166,7.379099,7.892186,-1.583819,-8.387617,8.736045,-6.013054,-2.946725,3.253927,-7.679313,1.698002,-2.494085,5.168975,4.847314,-1.302420,-1.460213,9.424925,9.090473,-2.811527,-9.262402,-6.066828,8.471446,-2.443620,9.100454,-4.033290,7.294898,-2.336699,3.823042,-5.592033,-9.101434,2.368532,3.232237,0.320734,0.224259,-0.585715,-2.110445,1.032822,3.538292,-1.202799,-2.597027,3.949748,-4.426275,5.979932,5.809090,-6.918906,9.542001,-9.374576,-8.941072,7.293481,0.349813,1.359768,-7.922858,5.478915,-2.505036,2.739359,9.968688,4.330301,-4.566844,6.481761,-5.653292,9.757710,2.314814,1.644972,6.053399,-6.164627,-5.445493,0.201995,-6.496889,4.172668,-2.513367,1.767672,1.774220,8.848715,-5.685995,0.789060,1.297839,-7.505460,5.227206,-1.648678,-1.885637,0.603420,2.436260,5.634546,-6.365257,-3.643477,5.616449,-1.716430,-7.211787,-2.888269,-6.450127,-8.248855,6.635283,-2.448498,-2.495474,5.455191,9.334236,1.105939,1.323954,8.458403,5.827811,-1.695340,5.907759,4.541654,7.275126,-4.072516,-2.759616,9.458397,6.776920,-7.375098,-1.393021,-7.969116,-0.462726,-2.891296,3.902879,8.355102,-9.226878,2.148786,-8.062934,7.961152,6.731014,4.793251,-2.335650,8.141564,8.911128,8.269577,2.356612,5.060658,-4.858022,-8.014372,0.751312,-6.614581,4.065083,-4.544927,4.280041,2.747442,5.979979,-1.539175,1.052217,-8.874697,0.360677,1.614488,6.810675,-0.857843,-0.953807,3.409252,5.741271,5.170484,-1.140553,-6.696340,-9.153756,-4.802861,0.766904,7.007825,-4.497183,5.264187,-0.482004,-4.333814,5.224150,6.757068,6.830934,-3.847204,-2.972353,-6.160241,0.479281,-7.533644,-6.061553,4.581030,8.788408,3.832673,-5.146904,2.228554,0.573201,1.486834,2.679947,-1.128951,2.639395,9.943204,7.501633,-0.299082,-4.203468,-5.817182,3.614993,-3.068334,-3.292668,-2.306233,-1.047898,1.781871,-7.213267,8.712823,9.860309,-9.871524,-5.456909,8.078020,5.530841,-1.974138,-5.417562,9.456932,-4.912972,3.628568,1.711815,-5.365426,6.345381,3.497966,-0.561539,3.825938,-4.536032,-9.376073,9.205190,-5.277851,-5.649230,5.719392,0.893393,-6.909521,-2.856157,1.199776,-2.513191,-2.231720,7.019618,5.441463,-5.028954,-0.198157,-1.251217,8.059279,-5.713629,7.047029,-1.455090,6.465361,8.585494,1.507612,3.509793,2.322399,-6.780556,-2.331452,1.929989,2.631252,-8.146105,-0.429219,6.607888,1.686646,-5.219305,-3.331397,0.044751,-6.951015,7.738237,-4.512331,-4.997254,-0.260032,8.354547,0.571358,-8.366671,-0.421760,-3.816969,-5.616085,-5.458525,8.036347,-1.338868,1.106083,5.838858,-7.953567,-0.269046,-9.761171,-7.037532,6.191260,1.922026,-9.236756,-9.581804,-0.010565,7.082135,-7.134622,-8.239206,-7.724798,5.382682,-5.187609,-8.424089,1.713638,-1.288568,8.350823,4.331983,-2.057924,3.610501,-0.174011,-3.205762,-2.043332,5.104200,4.696821,-9.422112,-3.737542,-8.575449,0.444560,5.258436,2.879778,-7.911292,-0.335415,0.650503,-0.941837,8.252357,-8.193729,2.134178,-0.093147,5.206370,2.736406,3.858704,1.785736,-4.053418,-0.252671,-3.434203,3.633570,9.393593,-1.408661,7.870876,6.416951,4.351553,-1.616406,5.991119,-8.950379,-8.901011,-4.694409,1.559846,1.353359,-4.525275,-2.654742,5.296343,5.791688,4.081420,-7.537069,-9.822825,-8.916892,2.783886,3.729243,6.106989,-8.466844,6.027896,1.565440,-5.359348,-6.409759,8.529612,3.467905,5.441270,2.975777,-8.746124,0.337923,8.103486,7.236375,-7.896439,6.055025,-8.222384,7.660223,5.678996,-9.436108,-5.743416,-8.892501,1.156855,-3.407329,9.046919,-0.666345,3.937802,-5.959578,1.638524,-3.412684,-6.627520,7.008536,4.414148,-3.733649,3.247740,-5.242836,-0.561096,2.920137,4.198533,-3.525417,2.437656,-5.485874,-6.778972,-8.918258,-7.033804,5.296946,-4.257895,5.528430,1.969804,-3.708761,0.785818,-3.981508,-6.559374,3.891949,-7.818026,-6.635392,-0.876974,-7.032311,6.374622,-5.763185,0.857010,1.086853,-6.813644,4.808576,-3.174700,1.313043,3.594325,0.045234,9.522202,2.108473,-3.223678,-1.915328,-3.367878,0.036287,7.065222,-5.791909,1.396427,-1.949493,-0.875967,-3.158065,-6.495655,-4.909245,0.239185,4.476127,8.138664,-6.637406,-2.492434,-5.307071,-4.709179,-9.406777,-2.658120,-2.165401,-5.794464,3.267392,2.762213,-3.454349,7.967176,8.762220,-2.510129,-4.437634,5.953549,-0.993078,8.456640,-9.503275,-2.303785,0.521841,8.107482,1.641573,-2.678177,3.785851,-9.823793,3.967950,-7.870154,-7.710191,7.123471,-6.564169,-9.079530,-5.743334,-1.846975,1.386575,-7.454875,8.618636,-8.582447,0.312156,9.035797,-2.792151,-8.166757,-5.818304,-8.548368,-6.166024,1.802920,-3.544879,7.258969,2.775585,-7.090806,-9.641286,8.324959,-3.243972,-4.266504,-7.728291,-9.312364,5.684198,2.419586,-0.047628,1.930950,7.653495,1.259561,-0.120195,5.771754,-1.284877,-9.256382,-4.725287,-7.409088,6.251857,-7.453869,5.517377,7.563258,-7.786792,-3.152368,-4.621308,7.782707,-0.385394,-0.047106,9.378113,-3.758739,2.433279,-5.602255,-6.540997,-0.833074,-1.651458,5.162325,-7.248161,-1.499821,6.005440,2.568397,-6.822121,-0.767286,4.966712,8.697669,-7.311162,5.687510,-4.548139,0.812493,-9.641574,4.531667,-6.395135,-4.211062,0.253650,8.482751,0.802388,-5.826353,4.504334,-1.751297,3.490723,2.152678,1.012171,4.297757,6.132661,-2.903872,1.855675,-1.936469,6.217272,-3.527418,3.902876,8.970901,-7.590785,5.500656,-0.824244,-2.690013,4.192216,7.349486,-4.945987,5.807671,9.408473,-8.835816,8.462209,8.447757,4.711796,4.559103,4.683255,-0.656812,-6.555991,-3.805631,7.841682,4.001141,-3.679897,-3.117532,6.848136,-9.730099,9.598092,2.175123,6.119486,7.792987,-0.614908,-6.703857,-3.942957,8.999203,-8.037161,9.283916,4.175196,-3.950121,-0.116653,-0.336697,-4.493017,-1.313828,2.553587,-4.413316,-4.691876,-5.008966,-3.483860,2.988985,6.879686,-8.793462,-7.274977,8.754084,-2.316713,0.931941,-5.049431,-0.790658,6.932136,3.675981,3.761043,6.430451,3.472365,-6.131909,-3.087763,-6.133499,7.337105,6.302489,6.174220,3.705069,1.145047,-1.340599,-2.058737,-1.566231,5.217896,1.329535,-1.591025,6.554245,-5.300701,3.860707,2.093005,-4.511514,-9.375186,-0.101402,-6.530856,3.963687,-2.919260,-8.174060,0.175312,-9.746116,-0.635338,8.274518,3.710074,-5.452539,-0.866020,-8.679576,-7.608682,-5.601115,4.520188,-9.192156,-1.994995,8.050507,3.781108,-0.856751,-5.127072,6.651096,-1.293556,8.688365,5.463850,4.100655,-2.685055,9.387110,-0.263332,1.359529,-4.468053,8.304680,-0.753445,-3.415657,-2.368346,-3.756577,5.126063,7.790771,-9.960339,7.079988,9.715315,0.304757,4.992814,-8.187850,2.421085,8.952615,0.965033,-3.724740,2.601051,2.589254,5.451776,-1.329014,7.990159,-7.519701,7.164024,-3.622358,-8.635771,-5.322501,-4.041008,7.933631,-0.148554,-6.292048,-0.543138,2.936252,6.945430,1.239579,-0.890450,5.637666,-0.194948,2.922012,-6.173013,-3.643661,-8.800843,-4.438047,2.490608,-6.404661,-2.510781,1.808668,6.273421,-9.370581,8.125762,-8.270959,7.255545,8.160182,8.068205,2.739450,-6.096992,7.814033,-5.249582,-9.296905,1.029213,-0.322152,9.121432,-7.613061,-6.394419,0.936238,9.156313,-5.079935,8.065471,-7.711903,-2.515635,-7.230010,2.916213,2.060780,8.992871,4.415187,-7.716776,-5.875740,4.406633,9.356555,8.499178,4.582715,-3.700034,-7.414641,6.325131,-7.427995,-7.636505,1.867975,-9.551960,-3.300427,-0.564756,0.689166,5.915783,-6.994984,-1.021389,-9.017772,-1.616462,-7.724309,5.022631,-4.331395,6.123554,0.117563,-1.771237,8.408731,7.493424,-8.339598,7.594340,2.671035,-1.365360,4.734412,1.456939,-4.313970,7.588679,-6.090307,6.818656,-1.117981,6.068340,7.934994,-4.115654,7.901257,-5.544307,1.364676,3.205787,-3.392915,-9.551176,-1.060664,8.964645,6.666698,-3.413232,-7.848481,-6.463543,-3.062137,-6.131405,8.050337,3.857251,-5.980239,4.456303,8.910075,-8.823543,-4.519426,-3.636558,-5.429766,2.580419,-6.611112,0.185175,-4.955271,7.244655,-6.080218,-9.137379,-9.882615,-9.042143,7.382827,-6.169336,-1.662768,-6.840233,3.586263,1.761649,-8.809305,0.560870,-1.245317,5.848611,5.483172,-7.698123,-6.698117,4.761424,-0.893481,-9.259034,7.914510,-1.154360,6.812262,-3.842334,2.397744,0.996431,3.267639,1.068705,5.901978,-8.202361,6.269973,-7.962114,0.819834,3.798018,2.597057,1.656755,-2.066830,-4.939847,-4.214837,0.647093,6.165417,1.260546,2.512216,-8.134988,-5.951186,0.461380,6.244222,9.688706,-2.546576,-8.660514,-0.958811,-2.267897,-3.074415,6.318298,-1.068656,-2.406255,5.622054,-8.680464,-5.952421,9.094014,7.493890,4.500154,5.657734,4.764362,4.634189,5.335585,4.449357,-8.421981,1.885114,-8.702782,-2.548836,4.193992,-0.199778,9.481486,-5.481170,5.703595,3.541009,1.085875,-6.490979,-0.759292,-7.785906,7.989787,-9.003489,4.659022,7.421204,9.319987,5.151596,3.989164,-5.814795,-2.879135,-7.116335,-3.497796,-9.626116,-2.053852,-9.665800,-6.136803,-8.654725,-9.412120,-2.575696,-9.899852,6.536365,3.486970,-4.641464,-6.223782,2.052191,-2.106060,5.247099,-9.602684,-8.786129,-8.710479,5.923818,6.049293,-4.284736,-9.934668,-2.951329,4.174077,-1.227709,-0.369075,1.182287,7.357641,4.098253,-7.308377,-9.623840,5.253587,2.310299,1.199935,-9.946165,5.474888,-8.792907,8.874083,-9.795363,-9.146950,-2.823840,-2.571043,-1.836932,-5.294715,8.983940,-3.601118,3.340556,-2.703325,0.911854,-2.626331,-2.348052,-9.357376,8.430965,6.888233,-1.954728,6.831512,-3.640558,5.648155,1.038932,5.941444,-0.758719,3.996180,9.732696,4.970520,0.918984,-4.521888,2.170659,1.423754,3.252270,-0.719671,-1.125002,-7.354593,1.643107,3.957497,5.689718,7.335789,-3.998558,-8.122121,-1.303622,-2.804654,0.046634,-1.592219,-0.141286,5.930590,-2.228160,6.794217,5.646948,-3.099582,8.998468,-9.619883,-2.062517,3.677328,-3.720890,-9.812710,4.272417,-1.644436,4.068193,6.541714,-1.822409,9.661075,-7.425391,-8.827007,-1.829936,0.070757,-4.183030,1.709907,4.906966,-8.361427,-6.865491,2.249475,3.351172,-3.052007,-1.552575,-4.109427,-1.881034,7.847269,2.250932,9.906751,-6.655818,9.366384,-0.466487,7.703175,9.602373,3.308398,-8.592484,5.004401,-5.788597,8.821223,6.430231,-3.823758,6.780625,6.797978,6.920794,1.307210,7.281846,-1.600643,6.677082,4.412708,7.029052,-2.690283,3.187804,-6.665826,7.301953,-1.765229,2.458917,-4.024209,8.057423,9.047625,-0.212569,-3.114313,-3.911878,5.762562,9.754253,-2.620329,0.926638,-0.915689,2.253789,7.631139,-7.959324,6.184498,-0.535682,1.244650,0.024739,-7.093991,3.275918,9.259957,0.382049,6.826875,-1.159912,-1.269398,-1.611890,-5.284923,1.823449,-6.455225,-2.447560,0.650191,1.044676,-1.060149,-8.824116,1.230085,1.090748,2.520511,2.880735,3.543647,-2.269022,-6.971142,2.095190,-4.674131,-0.171284,-9.845648,2.982334,7.820161,-2.881824,2.553604,-2.360963,-8.124131,-8.232552,-3.687754,-0.987391,8.058567,7.369486,8.195717,-8.386960,9.039726,-9.837793,3.320514,-7.301880,6.329853,-3.332962,1.042590,3.224552,8.204628,7.889435,3.536534,6.622185,-9.842619,-7.296813,8.431072,-8.333096,7.978436,7.568216,-0.388823,7.591750,-5.695282,-0.252513,-3.420486,-6.496464,4.341554,-8.079678,8.922187,2.148876,-9.902184,-8.697764,2.966541,4.707102,5.836880,4.951492,-2.160267,9.850863,7.026009,-1.576109,8.588176,9.672543,-5.206041,-3.380459,5.681079,6.136077,3.251124,-9.780728,-3.125914,-1.100278,-6.226105,9.660373,-8.732150,8.315280,8.126436,-9.692334,-6.258579,3.750133,8.044184,9.044852,-4.083432,-8.012538,-7.779126,-4.259126,-7.602280,-6.041703,-7.802078,6.873018,6.471508,-3.796727,-4.205168,9.677871,-6.877828,4.412434,-7.595663,9.083711,-7.485291,1.979964,-7.940774,3.052401,-1.789368,0.277136,-2.429141,4.898958,7.261103,-0.796866,-6.148649,4.191505,-7.423114,-3.807703,4.203391,0.998976,-7.620300,-2.425544,-6.586369,9.679429,6.108011,-1.823883,-1.089217,4.749904,3.581737,3.134913,-8.383687,0.287521,-0.321048,2.112282,8.620708,2.663304,6.424113,-2.689642,9.421578,-9.554973,-7.222048,-0.565812,9.215056,-5.635590,6.585300,-6.597846,-8.098507,5.688087,-6.311806,-9.366328,4.487748,7.248894,1.684568,3.952910,7.577231,-0.546058,-1.496723,-7.527197,-2.121167,-7.394953,8.182311,9.397017,-6.516404,-5.864943,-1.576086,-3.564746,-2.098522,-1.205281,6.233945,-5.328924,-4.471835,-5.230191,-3.649468,-2.196655,-7.541815,-7.131057,1.491622,2.582178,-8.455895,-6.774341,3.327866,6.795352,-6.186391,7.828049,8.295268,7.620243,-8.265322,-1.198808,-9.534687,-2.086839,4.509796,-6.551096,-7.188551,6.307099,7.879814,9.386673,-8.661514,-6.732048,4.347628,1.551050,-7.912987,-0.744315,-4.189344,0.872265,0.894722,0.302526,-8.110708,7.993722,-8.930739,-1.258600,1.889708,-0.645936,-4.305654,-3.274363,-8.912065,-1.460741,-5.316675,-8.229521,0.230255,-0.992655,6.084662,8.104835,2.746782,-7.664675,8.604614,-6.801133,3.685993,8.606766,7.832639,7.699332,4.280582,-8.745799,-4.013270,-1.030669,-9.733761,-4.636253,6.093059,-6.717159,-4.890628,-1.466970,6.544746,-8.955197,1.206399,-0.849071,-7.612343,-0.383340,4.234565,2.475040,3.545918,4.367768,-5.621984,3.092564,0.659117,5.942592,8.881883,-3.306951,-4.828066,9.999434,-7.442553,-1.449416,1.626734,-9.343571,-3.490650,-5.967333,8.610360,8.591414,1.459710,3.709171,-0.946997,-9.958373,-7.169755,-8.682854,-7.804863,-3.917409,1.656662,1.134181,-4.999794,9.446263,3.762530,-5.572277,0.994539,4.100242,8.908828,-8.176010,2.197117,5.206763,7.265749,-7.517508,6.130221,-8.136872,0.607636,2.289071,8.171223,-7.143465,-3.260003,7.646299,1.132806,-3.561051,-7.462564,-3.078531,9.350199,0.742973,-5.504592,-4.549324,2.185581,-3.812673,-9.356808,-1.652555,2.232628,3.264930,8.809258,2.329764,8.967145,6.107730,-3.099331,4.146584,7.699954,-7.757978,-6.016229,8.007693,8.484709,-6.203195,6.429427,8.456448,-8.725090,-0.337554,-8.312792,-7.150824,7.568975,4.100537], dtype = "float32")#candidate|9021|(1800,)|const|float32
call_9020 = func_8661_call(relay.reshape(const_9021.astype('float32'), [12, 15, 10]))
call_9022 = func_8661_call(relay.reshape(const_9021.astype('float32'), [12, 15, 10]))
output = relay.Tuple([call_9018,call_9020,const_9021,])
output2 = relay.Tuple([call_9019,call_9022,const_9021,])
func_9026 = relay.Function([], output)
mod['func_9026'] = func_9026
mod = relay.transform.InferType()(mod)
output = func_9026()
func_9027 = relay.Function([], output)
mutated_mod['func_9027'] = func_9027
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9038 = relay.const([[[5.981749,3.050882,-6.290949,-6.351026,8.137192,-9.955364,-8.661794],[-6.330068,-0.929807,7.891461,-4.164842,-2.874058,-8.492566,2.049449],[-9.652900,-7.204627,5.883963,5.642224,-6.313124,-5.556408,8.882400],[-1.366794,-9.054304,-4.458144,6.969171,6.651706,4.523652,7.710788],[-7.254814,-0.698907,7.375321,8.942721,-6.171504,2.741378,-5.125051],[2.393083,-0.222523,-9.961521,-1.552685,8.750795,-3.840339,8.679370],[-0.844454,-4.916677,8.556311,-3.950225,7.665317,9.888687,-4.922892],[-2.596748,-4.210344,-9.651733,2.085714,1.743146,3.594162,2.453156],[9.229114,-8.936495,7.227870,2.917333,0.243467,9.548100,3.252618],[-1.587858,7.428885,-0.982763,-7.275926,-1.379986,7.032370,8.281651],[2.066220,1.069874,8.989294,-9.395970,-3.345052,9.861013,0.133764],[-3.292250,-7.019918,1.394608,8.875528,5.074112,-7.800928,7.061137],[-3.469358,2.469840,4.941945,-5.567162,-9.083010,3.229586,-8.493607],[-1.191116,0.054571,-3.046891,3.867862,-2.693868,-6.703721,8.736132]],[[0.701718,-9.712630,4.250325,4.823088,-4.058555,-7.074649,2.787165],[1.433405,-3.516384,9.111173,-9.293654,2.503442,3.313935,-1.939566],[-0.356096,2.295925,-4.915851,2.012190,2.543037,-0.937340,-3.149413],[-4.420987,-8.784261,-6.419265,6.108893,9.910137,6.761834,6.829556],[-2.788061,-2.410663,7.677750,-6.653982,-8.643230,-2.842822,1.026437],[1.703466,6.942551,0.590590,-9.572262,-0.012180,0.570936,0.179662],[1.248286,-2.511401,7.186046,-7.737132,-0.551760,-1.636872,-7.584125],[-7.003151,-0.279669,8.956479,1.279445,1.558889,-2.235057,7.579005],[4.104792,3.726869,5.493977,-0.743964,-8.710634,-5.888087,-7.480793],[1.623560,6.251240,-9.482974,-8.572836,8.065895,-8.231583,6.414526],[-1.416007,-9.878709,2.452329,-9.174569,6.387639,5.163916,3.593715],[-1.947624,2.996572,-5.208253,9.989622,-2.769640,6.207147,5.315839],[-2.989858,-2.301400,1.147475,3.038283,-1.815865,-2.517680,-0.187413],[-6.767253,5.147989,3.484114,-0.911731,6.746803,-2.585399,4.034362]],[[5.627832,5.607766,8.236866,-9.780174,8.738745,-7.796218,-7.349257],[0.528795,-3.595264,-0.370887,4.559157,-3.276097,-8.845119,6.138652],[3.934418,-9.273637,-4.183635,5.227677,2.018829,-4.483145,2.195196],[0.888606,6.955695,-5.424915,-5.768514,1.677061,3.322835,7.824180],[4.870479,-8.512018,-5.636704,0.369869,3.610467,-1.433460,3.343788],[1.839985,6.660374,-9.302907,9.221418,9.818545,7.595349,6.638996],[-0.025198,-6.819340,-9.879549,8.799749,4.758242,5.070925,3.810218],[-3.204903,-3.740641,2.565453,-8.488713,4.507083,-4.361750,5.737181],[0.582571,-2.639365,1.964815,-9.849332,-7.044888,-7.336085,-0.166729],[-7.906272,-4.478730,-5.737872,-5.552575,-6.540546,6.899378,-2.213258],[-5.568345,-7.923852,6.264926,-9.590140,8.295099,-9.135139,-2.204845],[-6.544056,-9.569460,-3.001918,6.859167,5.420375,-7.288330,-2.640150],[6.877650,2.222105,-9.398633,-8.622341,0.175777,-7.402876,5.766325],[-3.001239,-6.086630,-9.745440,5.369338,9.009573,-4.257845,-2.529326]],[[-1.855823,-4.358538,4.723431,-0.722515,9.134186,7.251675,8.521918],[-4.297085,-3.110981,-2.747056,9.974320,9.398170,4.234873,5.448817],[-6.325028,-7.373285,-7.890875,-1.977532,-4.624676,8.446530,0.921407],[-1.333457,-6.904576,1.026108,7.059496,7.339042,9.105971,7.647062],[3.831284,-3.846115,-1.880024,3.767792,7.805288,0.878454,-4.310831],[-5.030783,7.631149,-2.818230,0.931801,8.269769,7.813746,6.633290],[1.256179,6.492501,3.093872,-9.230730,-7.686876,-7.817789,-7.683212],[9.971145,-3.118580,-6.309192,2.840157,7.522873,4.331903,9.183559],[-6.764655,8.448930,-0.399012,-6.625909,-2.526080,4.401602,-2.178461],[-4.094359,4.629202,6.688220,5.108995,-7.803303,-9.455938,0.081259],[-3.264432,-4.269472,6.397996,-1.536958,-6.956239,0.631152,-0.698929],[6.306507,-0.842697,3.958926,-8.139677,9.339230,-6.105971,-4.293664],[-0.739748,-8.367896,-2.566370,6.333929,-0.985057,7.469224,-8.284669],[9.069439,-8.033128,-4.451407,5.121676,-2.679105,-1.668308,5.010421]],[[0.671869,-8.201585,-0.797440,-5.935509,2.592474,-0.291338,-5.499272],[3.040426,0.353317,3.487739,2.737445,-2.136757,6.162079,-5.179583],[4.368105,-2.296696,5.392146,-7.655839,-2.397261,4.412021,-6.834829],[5.942515,7.201566,6.104943,-1.401782,-0.075536,-4.529077,-7.376161],[-6.572627,-4.582726,-9.531273,-2.747746,7.607711,3.584616,-9.856592],[9.761685,2.175068,7.291670,8.513155,0.453934,2.757645,-1.708238],[-0.187317,5.040425,9.828771,-1.463943,-5.068915,-5.853890,0.505866],[0.651639,-0.196416,-4.998217,-8.514315,-1.362364,1.197548,5.374353],[-2.217351,-7.871181,-3.471197,7.768241,8.744853,2.095455,-4.356383],[0.941889,-2.737742,5.136569,-5.557911,-9.274159,3.329064,-7.957804],[-7.473627,0.812857,7.734192,9.608848,0.996219,-7.760056,2.580532],[8.172214,6.780827,0.411399,8.259695,-8.357083,2.955415,-1.402750],[4.788560,0.219832,-5.913459,-4.088877,-3.452917,5.761116,-5.437339],[2.708060,-8.919557,-0.845261,3.283835,7.608770,-0.687999,-4.539352]],[[-4.338721,1.059503,-1.440998,4.328282,8.296616,-0.602247,7.667508],[-4.391572,0.121694,2.421866,-9.669100,2.697283,-1.367010,-7.158541],[-6.808345,-7.324568,-6.582848,4.434387,-9.858899,8.132199,-9.781696],[5.860554,-8.603771,-4.404683,8.848662,9.901755,8.567444,-9.507712],[1.451900,-5.313299,3.305195,-4.104865,-8.262231,-6.153862,-6.714289],[3.687604,-9.163543,-2.735574,-8.877000,-4.410250,7.776213,0.927721],[7.505041,-2.618427,-6.298893,-5.640693,0.106669,5.876554,-6.986184],[-7.843811,-3.584487,-5.211692,-2.087035,6.626954,5.552410,4.357397],[7.393672,4.861561,-8.343730,4.138186,-9.498479,-3.379263,-8.034763],[-1.526440,-1.610809,3.351500,-2.324508,2.699849,-6.564781,8.661833],[-1.634920,-5.296378,2.826863,-8.761395,1.798074,-7.689249,-4.634338],[2.181943,5.068405,0.012164,-8.547800,-2.959399,-5.390481,-7.359791],[-9.835670,-1.252089,-7.083310,-5.333849,-7.228696,9.807409,-6.715108],[-4.390488,-0.967792,7.334102,1.104471,1.591867,8.572234,-9.321788]],[[7.402808,-9.190384,-1.162464,7.840552,-0.659957,-1.738676,-1.767283],[-7.008075,6.451376,3.221097,5.395496,9.079750,-2.901222,-9.520689],[-0.730216,4.991416,6.041506,7.200082,3.727039,-7.024374,-3.113052],[-7.494334,-4.679696,0.522917,3.927076,-4.210799,2.764019,9.639623],[-5.056927,9.264712,-2.559254,5.970791,2.814210,0.020818,8.437383],[-5.634993,-4.907170,-1.850993,7.128273,2.401297,1.426742,2.281962],[2.996773,-4.361269,4.996181,0.619732,-2.504095,1.499254,0.834303],[-7.755631,3.429901,7.012815,-0.684533,-3.645724,4.749427,-0.602379],[5.881627,-6.868674,0.370328,1.490838,-4.370233,-3.310268,3.666370],[-8.761013,0.009219,0.029228,9.136972,-0.941027,-8.097124,-0.288233],[-9.118495,-0.417465,-0.352406,3.786682,5.936188,-8.781239,7.903972],[6.233529,7.966014,1.794464,-3.899864,2.382521,0.846410,6.327898],[-4.429353,-3.441741,1.052622,9.879470,4.487105,4.249437,6.482982],[-6.767440,-7.019021,8.954226,-8.819210,-1.502735,0.486212,-4.443278]]], dtype = "float32")#candidate|9038|(7, 14, 7)|const|float32
uop_9039 = relay.log10(const_9038.astype('float32')) # shape=(7, 14, 7)
func_8573_call = mod.get_global_var('func_8573')
func_8575_call = mutated_mod.get_global_var('func_8575')
call_9053 = relay.TupleGetItem(func_8573_call(), 0)
call_9054 = relay.TupleGetItem(func_8575_call(), 0)
output = relay.Tuple([uop_9039,call_9053,])
output2 = relay.Tuple([uop_9039,call_9054,])
func_9058 = relay.Function([], output)
mod['func_9058'] = func_9058
mod = relay.transform.InferType()(mod)
output = func_9058()
func_9059 = relay.Function([], output)
mutated_mod['func_9059'] = func_9059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8668_call = mod.get_global_var('func_8668')
func_8670_call = mutated_mod.get_global_var('func_8670')
call_9079 = func_8668_call()
call_9080 = func_8668_call()
output = call_9079
output2 = call_9080
func_9082 = relay.Function([], output)
mod['func_9082'] = func_9082
mod = relay.transform.InferType()(mod)
mutated_mod['func_9082'] = func_9082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9082_call = mutated_mod.get_global_var('func_9082')
call_9083 = func_9082_call()
output = call_9083
func_9084 = relay.Function([], output)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9085 = relay.var("var_9085", dtype = "bool", shape = (9, 15, 3))#candidate|9085|(9, 15, 3)|var|bool
var_9086 = relay.var("var_9086", dtype = "bool", shape = (9, 15, 3))#candidate|9086|(9, 15, 3)|var|bool
bop_9087 = relay.logical_and(var_9085.astype('bool'), relay.reshape(var_9086.astype('bool'), relay.shape_of(var_9085))) # shape=(9, 15, 3)
bop_9090 = relay.multiply(var_9085.astype('int16'), relay.reshape(bop_9087.astype('int16'), relay.shape_of(var_9085))) # shape=(9, 15, 3)
bop_9095 = relay.logical_or(var_9085.astype('bool'), relay.reshape(bop_9087.astype('bool'), relay.shape_of(var_9085))) # shape=(9, 15, 3)
func_5550_call = mod.get_global_var('func_5550')
func_5553_call = mutated_mod.get_global_var('func_5553')
const_9110 = relay.const([8.824849,5.395927,3.360060,6.535074,-0.089574,7.533451,-5.500152,2.660290,-6.750086,-6.248477,8.487535,-3.287831,-2.473181,7.941088,5.143350,-8.916969,9.538949,4.734104,2.847330,7.822733,5.088911,-4.362799,-8.515106,-4.010680,-7.636477,-3.389288,-4.337046,8.024479,-4.493193,3.307867,7.267497,7.412376,4.826443,4.139469,4.988306,-8.433920,6.679740,-9.279136,6.286765,-6.753973,2.216452,0.443808,-4.983586,4.984785,4.875373,-1.480358,-5.312163,8.427218,-6.293437,-3.759830,8.458159,-0.862248,2.266850,1.843379,2.574919,5.106462,-4.548704,8.977742,4.807146,-2.655014,6.450161,1.356727,-5.179148,6.007821,2.884886,-7.151725,3.610048,-1.884078,0.955848,8.532932,3.320332,-2.805090,7.865663,-3.547059,-1.719896,6.624632,8.881373,7.771238,3.463907,5.936652,-7.652068,-1.298232,-0.514286,6.447857,-9.200615,1.215243,2.031527,1.043504,3.884417,2.277553,-6.506944,5.764009,7.465635,1.084254,0.407677,0.139536,-3.796917,3.796112,-6.549268,8.912086,2.331068,9.672358,-6.938271,0.699114,-7.810986,2.516489,5.979093,5.118947,2.248437,-2.594031,6.686534,-2.402278,0.491466,-1.495791,-7.562028,-0.246531,-4.905820,-7.272192,-1.357244,-4.302753,-4.445669,-8.963517,-3.720063,-6.606955,-4.292959,2.556375,2.464379,-6.412494,1.550741,-7.879297,-8.687100,-6.271570,-9.573253,2.823188,-7.588950,-1.175425,1.714370,9.687561,-0.664859,0.936743,-6.535003,-0.292776,-3.741148,-4.465459], dtype = "float32")#candidate|9110|(144,)|const|float32
call_9109 = relay.TupleGetItem(func_5550_call(relay.reshape(const_9110.astype('float32'), [9, 2, 8])), 0)
call_9111 = relay.TupleGetItem(func_5553_call(relay.reshape(const_9110.astype('float32'), [9, 2, 8])), 0)
output = relay.Tuple([bop_9090,bop_9095,call_9109,const_9110,])
output2 = relay.Tuple([bop_9090,bop_9095,call_9111,const_9110,])
func_9112 = relay.Function([var_9085,var_9086,], output)
mod['func_9112'] = func_9112
mod = relay.transform.InferType()(mod)
var_9113 = relay.var("var_9113", dtype = "bool", shape = (9, 15, 3))#candidate|9113|(9, 15, 3)|var|bool
var_9114 = relay.var("var_9114", dtype = "bool", shape = (9, 15, 3))#candidate|9114|(9, 15, 3)|var|bool
output = func_9112(var_9113,var_9114,)
func_9115 = relay.Function([var_9113,var_9114,], output)
mutated_mod['func_9115'] = func_9115
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9169 = relay.const([[[4.723904,-7.545099,3.558827,-5.285154,-6.227110,-0.330105,6.190593,-2.670066,-4.753394],[-5.808335,-2.421540,3.609412,0.921942,-1.584832,6.309979,-1.645554,-4.696584,-0.072412],[7.248367,-5.111653,-6.228449,-1.771170,9.357986,6.561426,-7.906851,-9.630043,-6.996114],[4.591106,-7.677210,2.769263,-2.072166,-2.396660,-6.170139,-6.222539,-1.424071,4.829029],[4.862326,-6.561607,-0.721246,-8.629068,4.590820,2.125790,1.154960,-7.440167,-2.680128],[0.850082,8.568232,0.055802,-1.084683,3.466426,-0.064131,-4.168014,-1.585892,9.870317],[-4.122350,-3.876957,-4.360707,-3.508708,-1.069249,1.940531,-0.778767,9.805994,9.683074],[0.128225,-0.706195,-8.196914,-7.700216,-8.318349,0.982208,7.788507,-6.802412,6.532522],[-6.038058,-1.357935,-2.504283,6.186025,-9.848692,0.574323,-4.536937,-9.176668,4.162712],[5.924038,0.623113,2.326762,2.095095,-3.978663,-7.426207,-3.136990,4.861892,2.642554],[8.588495,-1.602794,-5.685733,7.492717,4.329256,0.043262,-1.971811,-3.689128,7.506361],[-6.895605,-0.232392,-8.651152,-7.546325,1.115155,0.191066,-2.555827,-9.150029,-5.231367],[-1.588807,5.127230,0.622200,-1.947522,0.405600,1.199696,-0.120922,-0.363775,3.103794]],[[1.053636,1.015643,2.985491,-1.385483,1.397890,5.452150,4.213724,1.627589,3.814233],[1.276294,-2.725886,-6.983340,7.475221,2.920560,6.165329,-7.624654,8.527966,-0.811115],[-1.559453,-5.108054,1.586962,-6.047606,8.147731,0.053246,-9.308976,-0.036609,5.052882],[7.583829,-4.130423,-6.533226,4.788561,-8.495135,0.660837,6.340791,2.383491,3.700501],[8.524241,6.675465,-4.939609,8.398728,-9.943054,3.074555,-4.708294,-0.063930,-9.658730],[2.093571,-8.126534,-8.159667,-7.033454,8.513759,1.009462,-0.226182,-2.513252,6.025571],[-4.730337,-5.052537,-1.377123,-4.879546,-7.337791,9.713967,-8.470178,-6.864799,3.514697],[-7.667373,-6.100661,9.132154,-9.851640,3.535682,-1.222797,1.878642,4.566015,5.777201],[-6.106181,6.383972,-7.319018,7.520128,6.903739,5.430370,-1.918310,-6.709534,-2.694947],[-7.152439,2.570174,1.127100,-0.965568,-4.457923,-3.733397,4.646348,9.944945,1.828125],[-9.612766,-9.949790,-0.466044,-6.459301,7.077561,-2.831139,-2.109171,0.322380,-8.466553],[7.493908,1.318306,-4.411042,5.738816,-9.803574,-6.684252,1.041742,-3.589393,-2.337124],[2.679284,5.113141,4.406914,-3.816387,-9.160328,0.287320,4.312363,7.843717,-1.787737]],[[-1.594928,-9.648275,5.448336,7.770443,9.229598,-7.882405,-5.677020,-4.873104,8.509144],[8.034898,4.610147,4.712011,-9.771612,-4.972266,8.932632,-0.739255,-3.077881,3.921984],[1.164059,-2.359897,-9.533299,0.421327,4.952064,6.872769,0.347599,-1.837265,-9.729998],[-6.193102,-2.716140,2.357407,4.345435,-9.458580,-6.772649,9.039347,-1.307853,-9.659513],[3.962465,9.006930,9.268184,6.058360,-4.830917,0.294520,6.709084,2.340027,-3.494550],[0.257194,-9.239741,-8.439267,1.509180,1.339184,7.151812,5.587263,9.553837,2.908763],[9.779871,8.705620,5.925997,-4.233110,-8.652641,-9.569208,-3.831182,1.442649,1.308048],[1.677052,5.516064,-9.626475,-6.272079,1.959942,2.809817,-2.383586,2.681884,-6.414684],[7.132560,7.557409,-5.841081,-1.576472,-0.673774,-9.119123,7.047949,-3.128283,-2.364593],[-1.675876,-4.100662,-8.244422,-4.161782,-2.699166,-0.135768,-3.191280,-9.207199,-6.513069],[-1.678315,2.730311,-0.862399,-6.788726,-5.520927,-4.256886,-5.272353,7.506364,1.646996],[-5.125995,6.142234,6.705629,3.507882,7.299727,-2.386432,-9.185170,-0.469634,7.935162],[7.545452,8.815106,-3.614068,-4.290374,-3.406826,-4.067265,2.226148,5.696425,6.711574]],[[1.017193,3.550686,-4.881272,-9.186896,-5.304856,2.122977,2.851521,1.295218,-5.384322],[-8.126392,-4.842438,-7.462712,-3.783076,3.931431,-2.968263,6.587339,2.877259,-9.261307],[-7.594138,3.443017,-4.565251,-0.687185,6.686273,-0.657431,7.860244,9.111994,3.461301],[-3.150515,9.669271,2.679071,3.706285,2.269048,3.866167,-7.859153,-5.357790,-9.974370],[-8.541943,-8.307075,7.031498,1.771075,-0.984300,-5.877753,3.380937,7.426637,2.097611],[-7.142455,5.442473,3.024057,-9.716216,-9.170062,3.202589,4.963364,7.504922,-1.643796],[-6.266583,-0.081742,-0.446433,-9.244421,1.941970,-1.329465,-7.417005,7.014066,9.989656],[3.990780,9.281161,-8.034836,-4.310896,-5.747567,-4.986157,-9.307506,6.603408,3.920897],[-8.708976,4.029404,9.395494,-8.215357,-0.515790,-9.128295,-7.225575,3.037277,8.113845],[7.212317,3.187512,-2.506914,-5.372909,-4.098932,0.696465,9.518826,9.533083,8.099485],[-9.839352,5.403172,-7.583909,-4.130445,8.924745,-0.952412,-4.945590,-8.786496,8.103163],[2.074501,-8.671524,1.240198,9.454682,2.776247,1.350846,4.716453,-4.230144,6.304094],[-3.085967,2.484709,8.542486,5.569690,7.742766,-7.204601,-8.620029,-8.142949,5.697590]],[[-6.922022,-1.291886,-9.112427,-2.800729,-1.372043,-8.674242,8.231494,3.701096,-9.022959],[-5.940591,-1.189590,1.946492,7.344304,-9.954817,-6.802584,4.928289,-5.689320,-3.338965],[-3.340734,8.985233,1.173487,-1.906627,-7.238658,-6.936401,-4.821322,-3.717077,-4.466979],[1.372556,9.007044,-7.759851,-2.136722,-2.899041,9.948043,0.965138,-6.180827,-0.588036],[-2.750082,-0.396013,4.489395,8.601073,-6.502807,-0.315285,3.535675,-9.131406,-3.156361],[6.839087,-4.148092,8.291831,-4.223706,8.860127,5.545620,5.553169,-1.883215,1.306372],[-0.177175,-9.789579,-9.091473,2.697593,-8.738637,1.812962,-3.285999,7.507421,-9.278804],[1.182201,9.370591,5.649910,-7.940640,-2.822889,1.012612,-8.734638,-4.236557,-4.857971],[-5.320091,9.410026,0.145814,9.283544,5.663483,-7.378448,6.618367,-3.443539,1.025946],[-7.972430,-3.489190,-6.206226,-6.336110,3.776092,3.614264,1.231870,-3.533381,3.283295],[2.205238,4.369094,8.462277,9.224837,6.419028,-1.769530,3.003796,8.079822,0.619750],[3.262633,-1.593050,9.559689,-3.782042,3.923988,3.392848,-4.626177,1.737875,9.596655],[-9.145896,-6.723687,-8.768652,-7.687057,9.753732,-9.867408,9.743367,-5.761114,-0.207332]],[[-8.616964,-7.382040,0.688208,-8.630771,2.043477,-0.356379,-3.493242,1.508085,-0.043836],[5.569408,4.879818,-7.220665,-6.230239,-0.786987,-9.824158,-2.160918,2.736775,-3.685119],[-2.429920,5.021775,0.090858,-1.269076,-5.392140,-9.093305,4.325439,4.582775,-7.186405],[-7.298843,4.118999,7.260239,-8.096733,-2.901068,-5.519718,-0.106505,3.790705,-1.732475],[1.103317,1.674045,-3.908892,9.533854,2.518105,1.051335,-0.771024,-5.816257,-7.198313],[4.217002,2.066861,-5.858484,9.657347,-3.758752,-6.581262,1.489974,6.800650,5.628842],[-2.164761,-3.052065,4.379517,2.100827,6.319867,-9.299146,2.538720,-3.488609,3.618086],[-8.128943,-4.384548,-8.180558,-6.597242,-7.439826,-5.351285,9.349747,-9.289173,-6.445000],[6.570466,-5.817425,-0.324226,-8.876963,-7.491731,-9.325247,-2.424061,-7.943686,-9.964098],[1.046400,-5.825253,-5.680113,-6.985823,4.077108,8.009155,-3.969225,0.627649,-1.470071],[4.071122,0.559026,0.178628,-9.736697,2.268171,-3.264514,4.576630,-7.178845,-5.348695],[-0.378873,-8.971165,2.640596,8.591898,2.377414,-4.989073,-3.855872,-9.989705,-8.579267],[-8.501363,9.696221,8.080703,4.033507,-6.451342,6.253300,-1.465763,6.522880,7.469207]],[[1.009120,-1.849181,-7.410415,-1.548977,7.212838,-1.486921,-3.491785,-3.490158,-4.757341],[-7.710971,-3.514777,1.297708,7.122628,6.013373,1.654926,0.829103,8.235550,1.579197],[9.694716,6.796405,-5.341606,-1.042214,-2.128758,6.281950,-7.936264,-9.032722,-4.670118],[-0.277082,4.027619,-2.120681,5.880050,8.011217,8.954596,-4.122090,-8.999348,3.167872],[1.611306,-4.091066,-6.784863,7.686097,8.662708,0.963711,3.055955,6.089089,0.932191],[7.647860,6.764814,-8.893075,5.084876,8.028377,-7.634926,6.425402,-2.772982,5.220019],[0.929919,-4.780833,-3.307012,-3.966554,4.084299,-0.774335,7.141762,5.135119,8.711324],[7.475464,-4.802541,-6.144445,-1.922968,6.718647,6.764794,1.389578,8.091591,5.848655],[-7.766314,4.047698,8.244539,-9.133863,-8.696520,-4.983796,2.624990,-4.377153,-0.734304],[-4.240163,-8.972299,-5.353782,-2.339774,-9.016343,8.626146,1.295588,0.905023,9.304474],[0.188603,3.155216,-5.525179,1.191367,-0.310526,4.092018,-0.241223,5.998135,7.779293],[5.903370,5.030984,7.749705,9.718552,-7.234475,-6.300807,-2.660867,-9.153838,4.132361],[4.577968,-1.849094,-5.385100,-1.423283,-2.693672,-6.524915,5.220185,4.452156,3.025740]],[[7.049242,-2.445956,-6.629533,-2.504678,-6.632020,-5.996366,7.171790,-4.084917,0.491641],[5.356040,4.940631,4.122435,-4.194038,8.660285,-8.626848,-1.866663,-8.615842,5.333180],[0.855282,4.052532,-3.937401,6.273978,6.539184,-3.459241,0.972101,-7.624367,3.362866],[-6.625350,5.199255,7.408662,-8.194133,0.197388,-8.131300,9.554794,-7.176166,0.488510],[2.506858,-1.879997,-9.648696,0.070413,9.552538,6.103815,-0.788772,-2.947035,6.856190],[7.458161,3.487729,-0.515174,0.752598,-7.550952,-0.217831,9.834957,-0.989633,-4.322792],[-1.155989,-6.893100,-6.889179,-9.407915,6.493384,-8.837077,-9.373758,7.507934,-9.468611],[-3.444002,9.618979,-9.521316,-6.181087,3.296337,3.738988,-2.175904,-6.155216,5.845265],[-6.207846,7.328374,-5.743235,-0.409973,6.999137,8.067165,-4.779249,8.836181,-0.636609],[1.505498,2.826751,9.251977,9.565662,-1.826726,3.910565,-2.163661,1.036830,0.614458],[3.517028,3.664528,6.133121,-4.591244,-9.866388,-1.470801,0.154493,4.212099,-5.222055],[-5.935947,-0.633871,7.760912,-5.277897,7.206993,8.526905,-5.236881,8.944266,0.168859],[-5.981007,-0.478806,-3.663565,9.878266,-7.793002,-5.654388,5.987611,-8.918068,-2.344307]]], dtype = "float64")#candidate|9169|(8, 13, 9)|const|float64
uop_9170 = relay.log2(const_9169.astype('float64')) # shape=(8, 13, 9)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
var_9175 = relay.var("var_9175", dtype = "float32", shape = (432,))#candidate|9175|(432,)|var|float32
call_9174 = func_30_call(relay.reshape(var_9175.astype('float32'), [9, 6, 8]))
call_9176 = func_30_call(relay.reshape(var_9175.astype('float32'), [9, 6, 8]))
func_7586_call = mod.get_global_var('func_7586')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_9181 = func_7586_call()
call_9182 = func_7586_call()
output = relay.Tuple([uop_9170,call_9174,var_9175,call_9181,])
output2 = relay.Tuple([uop_9170,call_9176,var_9175,call_9182,])
func_9187 = relay.Function([var_9175,], output)
mod['func_9187'] = func_9187
mod = relay.transform.InferType()(mod)
mutated_mod['func_9187'] = func_9187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9188 = relay.var("var_9188", dtype = "float32", shape = (432,))#candidate|9188|(432,)|var|float32
func_9187_call = mutated_mod.get_global_var('func_9187')
call_9189 = func_9187_call(var_9188)
output = call_9189
func_9190 = relay.Function([var_9188], output)
mutated_mod['func_9190'] = func_9190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8385_call = mod.get_global_var('func_8385')
func_8386_call = mutated_mod.get_global_var('func_8386')
call_9192 = func_8385_call()
call_9193 = func_8385_call()
const_9195 = relay.const([[[4.465239,2.057243,1.894855,5.871212],[-9.461769,-1.389670,-1.049984,8.876527],[4.820315,-3.398248,7.661910,7.537851],[-7.201430,6.205982,-4.084823,6.373042],[-4.131909,1.942008,-1.450531,2.334004],[9.236404,-7.425581,2.538079,2.591129],[-1.333424,9.185724,8.475014,-8.443436],[-2.348468,-6.562122,-6.444624,-7.850668],[-4.736149,3.051918,-6.126138,6.739139],[-8.185408,4.937543,0.563304,4.703066]],[[-8.974366,7.007388,4.468022,6.605922],[-2.061581,4.862141,6.801783,0.352114],[1.905925,-8.676867,5.084247,2.879687],[6.184481,-0.766556,0.928310,-2.513911],[-1.449623,7.920152,4.688887,5.078913],[-4.798941,4.087713,-3.581376,2.290275],[3.188617,5.338155,-5.228299,-2.125090],[7.163227,-5.012151,-4.567780,-1.338762],[6.826203,5.185341,-2.068565,-0.246906],[0.384465,1.986373,-9.898596,3.903367]],[[-9.433725,-9.054760,5.565973,5.913302],[3.402544,-3.701771,-7.422780,7.243349],[-2.328506,0.868323,1.287169,-8.109558],[7.919368,7.731732,-7.418632,5.096809],[8.987994,7.718660,-7.863730,-7.768839],[4.254803,-6.996921,7.733081,1.991169],[-0.152821,0.780618,-1.266719,-3.605419],[0.126975,3.041866,-3.227105,-5.909643],[-2.020619,-6.783234,-8.560596,3.070220],[2.160978,-5.597553,4.604487,9.552717]],[[-5.630430,7.496377,-9.399700,-4.848407],[4.429644,7.859146,-0.930663,-0.677952],[-3.329360,6.778023,8.153927,-4.263335],[-1.947256,9.780183,-8.536645,0.620799],[3.486841,6.544435,-1.671402,6.607923],[9.262248,4.710587,6.886025,-2.110147],[9.359636,-2.104340,-8.804617,4.866258],[8.949841,-7.844197,0.409276,-1.814134],[9.464481,-8.850185,9.303090,4.856931],[1.973384,-6.575731,-2.871471,-8.858184]]], dtype = "float32")#candidate|9195|(4, 10, 4)|const|float32
bop_9196 = relay.not_equal(call_9192.astype('bool'), const_9195.astype('bool')) # shape=(4, 10, 4)
bop_9199 = relay.not_equal(call_9193.astype('bool'), const_9195.astype('bool')) # shape=(4, 10, 4)
bop_9213 = relay.equal(const_9195.astype('bool'), call_9192.astype('bool')) # shape=(4, 10, 4)
bop_9216 = relay.equal(const_9195.astype('bool'), call_9193.astype('bool')) # shape=(4, 10, 4)
func_8185_call = mod.get_global_var('func_8185')
func_8187_call = mutated_mod.get_global_var('func_8187')
call_9223 = relay.TupleGetItem(func_8185_call(), 2)
call_9224 = relay.TupleGetItem(func_8187_call(), 2)
output = relay.Tuple([bop_9196,bop_9213,call_9223,])
output2 = relay.Tuple([bop_9199,bop_9216,call_9224,])
func_9233 = relay.Function([], output)
mod['func_9233'] = func_9233
mod = relay.transform.InferType()(mod)
mutated_mod['func_9233'] = func_9233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9233_call = mutated_mod.get_global_var('func_9233')
call_9234 = func_9233_call()
output = call_9234
func_9235 = relay.Function([], output)
mutated_mod['func_9235'] = func_9235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8185_call = mod.get_global_var('func_8185')
func_8187_call = mutated_mod.get_global_var('func_8187')
call_9250 = relay.TupleGetItem(func_8185_call(), 0)
call_9251 = relay.TupleGetItem(func_8187_call(), 0)
output = call_9250
output2 = call_9251
func_9254 = relay.Function([], output)
mod['func_9254'] = func_9254
mod = relay.transform.InferType()(mod)
mutated_mod['func_9254'] = func_9254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mutated_mod.get_global_var('func_9254')
call_9255 = func_9254_call()
output = call_9255
func_9256 = relay.Function([], output)
mutated_mod['func_9256'] = func_9256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_9260 = func_7575_call()
call_9261 = func_7575_call()
func_3781_call = mod.get_global_var('func_3781')
func_3784_call = mutated_mod.get_global_var('func_3784')
var_9281 = relay.var("var_9281", dtype = "float32", shape = (980,))#candidate|9281|(980,)|var|float32
call_9280 = relay.TupleGetItem(func_3781_call(relay.reshape(var_9281.astype('float32'), [7, 14, 10])), 0)
call_9282 = relay.TupleGetItem(func_3784_call(relay.reshape(var_9281.astype('float32'), [7, 14, 10])), 0)
output = relay.Tuple([call_9260,call_9280,var_9281,])
output2 = relay.Tuple([call_9261,call_9282,var_9281,])
func_9284 = relay.Function([var_9281,], output)
mod['func_9284'] = func_9284
mod = relay.transform.InferType()(mod)
var_9285 = relay.var("var_9285", dtype = "float32", shape = (980,))#candidate|9285|(980,)|var|float32
output = func_9284(var_9285)
func_9286 = relay.Function([var_9285], output)
mutated_mod['func_9286'] = func_9286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8812_call = mod.get_global_var('func_8812')
func_8814_call = mutated_mod.get_global_var('func_8814')
call_9298 = func_8812_call()
call_9299 = func_8812_call()
var_9300 = relay.var("var_9300", dtype = "float32", shape = (4, 10, 4))#candidate|9300|(4, 10, 4)|var|float32
bop_9301 = relay.less(call_9298.astype('bool'), var_9300.astype('bool')) # shape=(4, 10, 4)
bop_9304 = relay.less(call_9299.astype('bool'), var_9300.astype('bool')) # shape=(4, 10, 4)
func_6440_call = mod.get_global_var('func_6440')
func_6443_call = mutated_mod.get_global_var('func_6443')
var_9307 = relay.var("var_9307", dtype = "float64", shape = (192,))#candidate|9307|(192,)|var|float64
call_9306 = relay.TupleGetItem(func_6440_call(relay.reshape(var_9307.astype('float64'), [12, 2, 8]), relay.reshape(var_9307.astype('float64'), [12, 2, 8]), ), 0)
call_9308 = relay.TupleGetItem(func_6443_call(relay.reshape(var_9307.astype('float64'), [12, 2, 8]), relay.reshape(var_9307.astype('float64'), [12, 2, 8]), ), 0)
output = relay.Tuple([bop_9301,call_9306,var_9307,])
output2 = relay.Tuple([bop_9304,call_9308,var_9307,])
func_9310 = relay.Function([var_9300,var_9307,], output)
mod['func_9310'] = func_9310
mod = relay.transform.InferType()(mod)
mutated_mod['func_9310'] = func_9310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9310_call = mutated_mod.get_global_var('func_9310')
var_9312 = relay.var("var_9312", dtype = "float32", shape = (4, 10, 4))#candidate|9312|(4, 10, 4)|var|float32
var_9313 = relay.var("var_9313", dtype = "float64", shape = (192,))#candidate|9313|(192,)|var|float64
call_9311 = func_9310_call(var_9312,var_9313,)
output = call_9311
func_9314 = relay.Function([var_9312,var_9313,], output)
mutated_mod['func_9314'] = func_9314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9233_call = mod.get_global_var('func_9233')
func_9235_call = mutated_mod.get_global_var('func_9235')
call_9354 = relay.TupleGetItem(func_9233_call(), 1)
call_9355 = relay.TupleGetItem(func_9235_call(), 1)
var_9367 = relay.var("var_9367", dtype = "bool", shape = (4, 10, 4))#candidate|9367|(4, 10, 4)|var|bool
bop_9368 = relay.bitwise_or(call_9354.astype('int32'), relay.reshape(var_9367.astype('int32'), relay.shape_of(call_9354))) # shape=(4, 10, 4)
bop_9371 = relay.bitwise_or(call_9355.astype('int32'), relay.reshape(var_9367.astype('int32'), relay.shape_of(call_9355))) # shape=(4, 10, 4)
uop_9377 = relay.cosh(call_9354.astype('float64')) # shape=(4, 10, 4)
uop_9379 = relay.cosh(call_9355.astype('float64')) # shape=(4, 10, 4)
func_7600_call = mod.get_global_var('func_7600')
func_7602_call = mutated_mod.get_global_var('func_7602')
var_9396 = relay.var("var_9396", dtype = "float32", shape = (768,))#candidate|9396|(768,)|var|float32
call_9395 = func_7600_call(relay.reshape(var_9396.astype('float32'), [12, 8, 8]))
call_9397 = func_7600_call(relay.reshape(var_9396.astype('float32'), [12, 8, 8]))
output = relay.Tuple([bop_9368,uop_9377,call_9395,var_9396,])
output2 = relay.Tuple([bop_9371,uop_9379,call_9397,var_9396,])
func_9403 = relay.Function([var_9367,var_9396,], output)
mod['func_9403'] = func_9403
mod = relay.transform.InferType()(mod)
var_9404 = relay.var("var_9404", dtype = "bool", shape = (4, 10, 4))#candidate|9404|(4, 10, 4)|var|bool
var_9405 = relay.var("var_9405", dtype = "float32", shape = (768,))#candidate|9405|(768,)|var|float32
output = func_9403(var_9404,var_9405,)
func_9406 = relay.Function([var_9404,var_9405,], output)
mutated_mod['func_9406'] = func_9406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_9408 = func_7358_call()
call_9409 = func_7358_call()
output = call_9408
output2 = call_9409
func_9414 = relay.Function([], output)
mod['func_9414'] = func_9414
mod = relay.transform.InferType()(mod)
mutated_mod['func_9414'] = func_9414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9414_call = mutated_mod.get_global_var('func_9414')
call_9415 = func_9414_call()
output = call_9415
func_9416 = relay.Function([], output)
mutated_mod['func_9416'] = func_9416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8150_call = mutated_mod.get_global_var('func_8150')
call_9431 = func_8148_call()
call_9432 = func_8148_call()
func_2630_call = mod.get_global_var('func_2630')
func_2633_call = mutated_mod.get_global_var('func_2633')
const_9436 = relay.const([True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True], dtype = "bool")#candidate|9436|(80,)|const|bool
call_9435 = func_2630_call(relay.reshape(const_9436.astype('bool'), [5, 2, 8]))
call_9437 = func_2630_call(relay.reshape(const_9436.astype('bool'), [5, 2, 8]))
uop_9457 = relay.sqrt(call_9435.astype('float64')) # shape=(5, 2, 8)
uop_9459 = relay.sqrt(call_9437.astype('float64')) # shape=(5, 2, 8)
output = relay.Tuple([call_9431,const_9436,uop_9457,])
output2 = relay.Tuple([call_9432,const_9436,uop_9459,])
func_9462 = relay.Function([], output)
mod['func_9462'] = func_9462
mod = relay.transform.InferType()(mod)
mutated_mod['func_9462'] = func_9462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9462_call = mutated_mod.get_global_var('func_9462')
call_9463 = func_9462_call()
output = call_9463
func_9464 = relay.Function([], output)
mutated_mod['func_9464'] = func_9464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_9488 = relay.TupleGetItem(func_7427_call(), 2)
call_9489 = relay.TupleGetItem(func_7428_call(), 2)
uop_9503 = relay.sigmoid(call_9488.astype('float32')) # shape=(4, 312)
uop_9505 = relay.sigmoid(call_9489.astype('float32')) # shape=(4, 312)
bop_9508 = relay.right_shift(call_9488.astype('int32'), relay.reshape(uop_9503.astype('int32'), relay.shape_of(call_9488))) # shape=(4, 312)
bop_9511 = relay.right_shift(call_9489.astype('int32'), relay.reshape(uop_9505.astype('int32'), relay.shape_of(call_9489))) # shape=(4, 312)
bop_9513 = relay.less(uop_9503.astype('bool'), relay.reshape(bop_9508.astype('bool'), relay.shape_of(uop_9503))) # shape=(4, 312)
bop_9516 = relay.less(uop_9505.astype('bool'), relay.reshape(bop_9511.astype('bool'), relay.shape_of(uop_9505))) # shape=(4, 312)
func_7764_call = mod.get_global_var('func_7764')
func_7766_call = mutated_mod.get_global_var('func_7766')
var_9518 = relay.var("var_9518", dtype = "float32", shape = (4, 40))#candidate|9518|(4, 40)|var|float32
call_9517 = relay.TupleGetItem(func_7764_call(relay.reshape(var_9518.astype('float32'), [160,])), 1)
call_9519 = relay.TupleGetItem(func_7766_call(relay.reshape(var_9518.astype('float32'), [160,])), 1)
output = relay.Tuple([bop_9513,call_9517,var_9518,])
output2 = relay.Tuple([bop_9516,call_9519,var_9518,])
func_9525 = relay.Function([var_9518,], output)
mod['func_9525'] = func_9525
mod = relay.transform.InferType()(mod)
mutated_mod['func_9525'] = func_9525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9526 = relay.var("var_9526", dtype = "float32", shape = (4, 40))#candidate|9526|(4, 40)|var|float32
func_9525_call = mutated_mod.get_global_var('func_9525')
call_9527 = func_9525_call(var_9526)
output = call_9527
func_9528 = relay.Function([var_9526], output)
mutated_mod['func_9528'] = func_9528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8974_call = mod.get_global_var('func_8974')
func_8975_call = mutated_mod.get_global_var('func_8975')
call_9530 = relay.TupleGetItem(func_8974_call(), 0)
call_9531 = relay.TupleGetItem(func_8975_call(), 0)
output = call_9530
output2 = call_9531
func_9540 = relay.Function([], output)
mod['func_9540'] = func_9540
mod = relay.transform.InferType()(mod)
mutated_mod['func_9540'] = func_9540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9540_call = mutated_mod.get_global_var('func_9540')
call_9541 = func_9540_call()
output = call_9541
func_9542 = relay.Function([], output)
mutated_mod['func_9542'] = func_9542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_9613 = relay.TupleGetItem(func_7060_call(), 0)
call_9614 = relay.TupleGetItem(func_7061_call(), 0)
output = relay.Tuple([call_9613,])
output2 = relay.Tuple([call_9614,])
func_9620 = relay.Function([], output)
mod['func_9620'] = func_9620
mod = relay.transform.InferType()(mod)
output = func_9620()
func_9621 = relay.Function([], output)
mutated_mod['func_9621'] = func_9621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_9631 = func_8274_call()
call_9632 = func_8274_call()
func_8873_call = mod.get_global_var('func_8873')
func_8875_call = mutated_mod.get_global_var('func_8875')
var_9639 = relay.var("var_9639", dtype = "int64", shape = (12, 156))#candidate|9639|(12, 156)|var|int64
call_9638 = relay.TupleGetItem(func_8873_call(relay.reshape(var_9639.astype('int64'), [1872,])), 0)
call_9640 = relay.TupleGetItem(func_8875_call(relay.reshape(var_9639.astype('int64'), [1872,])), 0)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_9663 = func_8274_call()
call_9664 = func_8274_call()
var_9681 = relay.var("var_9681", dtype = "int64", shape = (12, 156))#candidate|9681|(12, 156)|var|int64
bop_9682 = relay.mod(var_9639.astype('float32'), relay.reshape(var_9681.astype('float32'), relay.shape_of(var_9639))) # shape=(12, 156)
output = relay.Tuple([call_9631,call_9638,call_9663,bop_9682,])
output2 = relay.Tuple([call_9632,call_9640,call_9664,bop_9682,])
func_9689 = relay.Function([var_9639,var_9681,], output)
mod['func_9689'] = func_9689
mod = relay.transform.InferType()(mod)
var_9690 = relay.var("var_9690", dtype = "int64", shape = (12, 156))#candidate|9690|(12, 156)|var|int64
var_9691 = relay.var("var_9691", dtype = "int64", shape = (12, 156))#candidate|9691|(12, 156)|var|int64
output = func_9689(var_9690,var_9691,)
func_9692 = relay.Function([var_9690,var_9691,], output)
mutated_mod['func_9692'] = func_9692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9414_call = mod.get_global_var('func_9414')
func_9416_call = mutated_mod.get_global_var('func_9416')
call_9778 = func_9414_call()
call_9779 = func_9414_call()
func_6228_call = mod.get_global_var('func_6228')
func_6232_call = mutated_mod.get_global_var('func_6232')
var_9783 = relay.var("var_9783", dtype = "float32", shape = (4, 208))#candidate|9783|(4, 208)|var|float32
const_9784 = relay.const([[3.900551,4.539611,-1.891974,0.685164,8.904827,2.467528,9.325709,-9.957748,-3.192662,-9.593605,-2.115250,-5.409495,3.994312,-7.055982,-5.446454,6.534299,7.690285,-3.746987,3.182980,4.068398,-9.235630,-5.275308,-0.877947,-4.842150,-9.873981,2.665534,3.162501,-7.196011,9.515131,-5.422855,-3.236588,-1.515470,9.384002,0.176159,-8.662041,7.504082,4.056593,1.070482,-9.982013,6.887591,-9.379525,0.576342,-1.556870,-3.220526,-7.012555,5.199682,-1.940018,9.314811,0.522718,-7.928907,8.598506,-7.730314,-8.220936,-8.569631,6.404275,0.456908,-2.239065,1.447381,-7.209149,-5.962129,2.999569,1.601320,8.864625,3.327336,-7.238391,0.947274,9.350248,-6.955608,9.986328,0.303473,-1.039265,-6.320346,2.164299,6.694492,-7.038778,7.692936,-5.291399,1.946465,5.797876,-2.581110,5.940350,3.852254,1.472704,-1.601676,-4.305071,2.509155,-5.283463,3.908584,9.389323,3.492570,-0.210310,6.417627,5.981491,6.347850,2.169346,-3.394316,5.957385,-7.887568,-1.629766,5.153017,-7.691256,9.138896,-3.746945,-6.915236,-4.976354,1.532266,-2.658706,6.103369,-4.165857,-1.611250,-0.812358,-0.587908,-3.240152,-4.550413,3.908880,5.903931,-4.782784,-1.651155,1.169229,-4.216436,-9.793151,2.740327,5.157145,-8.705363,6.312496,7.444237,-7.831631,0.484078,-7.168521,1.114603,2.255436,4.341199],[0.898689,-5.286087,1.461724,-7.120629,6.274618,-0.626393,-8.676309,-9.346158,-4.070308,2.815481,4.029214,3.268609,-1.355892,2.208465,-4.070416,1.689092,-8.393187,-3.535533,7.750277,3.696477,-0.896761,0.444745,-4.111208,-3.517851,5.095696,0.157439,-9.897972,7.660272,1.342645,-1.572680,0.010697,-8.257433,-3.941296,3.286037,3.876808,-9.907616,8.487090,0.763340,1.089147,-8.790899,7.321758,2.511632,-6.974055,1.839732,6.161515,9.985640,5.144329,-8.748781,7.492881,9.517044,-8.656832,-3.658900,5.550447,9.305575,-8.721216,-7.810286,-4.464063,2.883937,-4.298771,-9.123713,2.269392,-5.311459,1.830163,-5.708025,7.273998,-1.530702,7.329095,6.017970,-5.196908,4.544144,-0.392250,-4.557075,7.067037,7.246120,-4.261594,1.580935,-6.511918,8.143402,-9.481002,-7.793644,7.856376,7.021191,9.931242,-6.014857,8.795985,-4.004259,5.336889,-4.550725,9.731411,-9.663221,-9.396089,2.507637,3.577395,-7.845254,-0.456388,7.721464,7.035948,-2.960913,1.453837,-6.904255,-0.441832,-0.168233,-9.063481,-9.767586,3.649428,5.809841,-6.009114,-8.865179,7.197449,6.883209,5.817827,-6.414347,8.823015,8.451088,4.301163,7.959741,2.107274,6.813569,3.272604,4.634905,-6.723451,-2.064489,9.725346,-3.052161,7.815711,-4.385484,8.136549,-9.909712,3.498919,5.294798,5.289586,-8.803764],[5.715168,-9.974518,7.075591,2.760043,1.317648,-6.516979,-8.724871,1.638951,-4.909436,-6.225024,-9.262448,-0.520340,-1.284151,-3.269392,-3.311214,-5.478675,-1.101880,-3.891352,-5.237948,4.909798,3.049626,-3.352461,3.864598,-6.896037,1.682594,4.545205,0.990206,4.880693,2.083251,5.910561,-6.272550,1.285387,0.340106,-4.942842,2.256423,2.601529,0.448305,-8.040340,3.701468,-3.392893,7.046718,0.883394,9.027829,3.372586,-3.358587,7.602884,-9.424933,-2.116585,-6.540196,-3.287233,-6.840998,7.579383,5.522705,-6.615260,-8.110434,-2.433975,-4.837145,-7.801532,-8.984837,4.265452,-0.952936,-1.227833,3.467180,-8.643095,7.660004,-8.762726,-0.131997,-5.178646,7.229374,1.877407,2.146198,-9.133478,0.532922,-4.620905,-7.812718,-1.016980,-6.542406,0.935837,9.966455,9.772758,-8.643392,3.342998,8.103699,5.009074,-9.295682,-7.933697,-2.100711,-1.197897,6.107336,6.583410,-5.314485,9.650091,-9.288204,-5.496146,-1.781985,7.523783,0.340598,-3.847928,-4.220515,-3.282055,-2.460546,-1.236153,0.783094,-6.142740,4.082197,-0.958778,5.100860,-7.536869,-6.152992,-2.662602,4.909139,-5.724363,-7.231904,7.690688,-3.148217,7.907552,0.656437,9.475896,-6.294352,8.989465,8.088904,3.325234,7.240510,4.360155,1.464095,7.065529,0.597625,9.771329,-4.762447,-8.720527,-2.742796,9.391891],[5.058960,-0.609657,-4.682569,-3.229752,6.431485,-1.299415,1.103427,3.438203,9.612440,7.212290,-8.773406,-3.358752,-7.255826,1.984792,7.169741,-3.268765,8.560203,-3.250827,-4.429593,7.618959,4.546714,7.977917,6.872156,8.919253,5.524138,5.713226,4.045044,-2.282225,-5.764367,7.332068,-4.913173,6.917709,-0.431359,0.406657,-9.082947,1.977538,-9.396646,-3.615006,1.153570,9.478714,2.015825,-3.753499,-0.122850,-3.263759,-5.649215,-0.169613,2.364604,-2.378671,-9.444558,-3.908890,-3.433903,-0.390895,-3.676622,2.788565,-9.957437,-8.621551,4.451034,-3.858529,3.569503,1.383170,-9.097786,-2.960818,6.680951,-1.822323,-7.259754,-3.591642,-2.452191,-4.865644,7.264164,-2.084798,-1.367857,8.403405,7.734044,6.705400,-9.662747,-1.880076,6.034362,-2.893059,1.255544,-9.319443,-1.691946,-3.767574,3.179159,8.742518,-1.431046,-8.567196,2.175792,7.920168,0.177280,3.760654,8.413390,0.868781,7.227760,5.804266,-5.351616,-9.271561,-2.317700,1.313876,0.498260,-2.351159,-8.918080,-0.710703,8.541198,-0.329937,4.953242,-1.852420,7.977717,6.360674,-2.454174,6.650041,-8.097833,2.164344,-5.162544,-6.708975,7.998976,-3.668759,6.493789,1.521578,-6.388913,0.856616,-3.767832,-8.139712,3.459147,-3.093230,-0.507201,-9.718372,6.774547,8.255643,-7.666874,-1.009474,-1.486147,9.013974]], dtype = "float32")#candidate|9784|(4, 132)|const|float32
call_9782 = relay.TupleGetItem(func_6228_call(relay.reshape(var_9783.astype('float32'), [4, 13, 16]), relay.reshape(const_9784.astype('float32'), [528,]), ), 3)
call_9785 = relay.TupleGetItem(func_6232_call(relay.reshape(var_9783.astype('float32'), [4, 13, 16]), relay.reshape(const_9784.astype('float32'), [528,]), ), 3)
output = relay.Tuple([call_9778,call_9782,var_9783,const_9784,])
output2 = relay.Tuple([call_9779,call_9785,var_9783,const_9784,])
func_9788 = relay.Function([var_9783,], output)
mod['func_9788'] = func_9788
mod = relay.transform.InferType()(mod)
var_9789 = relay.var("var_9789", dtype = "float32", shape = (4, 208))#candidate|9789|(4, 208)|var|float32
output = func_9788(var_9789)
func_9790 = relay.Function([var_9789], output)
mutated_mod['func_9790'] = func_9790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9871 = relay.var("var_9871", dtype = "uint64", shape = (3, 4, 15))#candidate|9871|(3, 4, 15)|var|uint64
const_9872 = relay.const([[[4,-10,8,6,-2,-1,-1,5,-3,-7,-2,5,-1,9,-1],[-3,-8,5,7,-10,-10,-5,9,-6,6,-3,4,4,7,5],[8,-4,5,2,1,-2,-4,1,8,-4,-1,-1,-7,10,-2],[-3,-7,7,-4,-3,-3,-5,-3,-8,6,-3,3,1,3,-5]],[[10,-7,2,-8,-5,3,-7,4,-7,-9,6,-1,10,-8,-7],[9,-10,-4,-10,-9,5,-2,-10,-10,-9,-3,5,-4,6,-9],[7,-10,-2,-9,9,7,10,6,-6,-1,9,9,-6,10,-9],[6,-5,-2,3,1,-9,-7,10,3,4,-10,-7,-9,-6,-8]],[[-8,-2,3,3,-5,-9,5,-7,3,-10,5,-10,-10,5,9],[-10,8,-3,-6,-8,-1,9,-4,10,6,4,9,-4,-4,5],[-4,10,7,-4,10,-5,-8,-6,1,-10,7,10,10,6,-3],[-7,8,-1,-3,-7,9,-3,-6,-1,-6,-4,7,-10,6,-10]]], dtype = "uint64")#candidate|9872|(3, 4, 15)|const|uint64
bop_9873 = relay.greater(var_9871.astype('bool'), relay.reshape(const_9872.astype('bool'), relay.shape_of(var_9871))) # shape=(3, 4, 15)
uop_9876 = relay.acosh(const_9872.astype('float64')) # shape=(3, 4, 15)
func_994_call = mod.get_global_var('func_994')
func_998_call = mutated_mod.get_global_var('func_998')
const_9885 = relay.const([1,1,10,8,-6,-1,-5,-2,8,7,8,-10,-6,8,-8,1,6,9,-7,1,1,-10,6,5,6,5,-1,-8,1,6,2,9,1,-3,5,10,7,-2,-4,8,-6,-3,-7,-5,4,10,-1,1,6,-8,9,9,-10,8,6,5,8,-3,6,5,-1,5,5,2,1,4,-8,5,-4,3,10,3,5,-4,6,-2,-8,9,-4,-5,-10,6,-4,7,5,-7,9,4,8,4,9,10,-2,1,9,2,8,9,-10,-9,10,9,-8,1,1,7,-1,7,6,-9,5,4,1,5,-4,6,2,3,-8,-7,2,-1,1,-4,8,-3,7,8,3,-9,10,10,1,-6,-8,8,-5,2,-8,6,-2,-9,-6,-6,2,5,1,6,1,-10,2,-8,8,-6,6,2,-1,-6,-10,6,-6,-4,8,-10,3,-7,-10,4,7,-6,-2,-3,-1,-9,-9,-3,-8,5,-10,-5,5,-5,-9,4,-9,-8,-1,5,10,-3,9,-6,-6,2,-6,-8,-9,5,-4,-3,-1,5,2,4,-3,10,6,10,-7,-7,-1,3,9,-9,6,5,3,-9,-1,-6,3,-8,-4,-10,-3,5,3,-6,-5,-5,-7,10,2,6,4,8,1,-6,-4,-7,3,-1,-9,9,3,5,-4,-1,-4,-8,10,8,3,6,8,6,-5,-8,-5,-6,-10,-8,6,1,-6,-2,6,-10,2,6,-1,-1,-9,-1,-7,3,-10,2,-10,-9,1,-5,-9,-3,2,1,2,-10,-3,5,9,-7,-9,-4,1,5,5,6,4,-5,1,-2,7,3,-2,-2,-8,-10,10,-6,-9,1,-3,-6,-8,-5,-6,-3,-8,5,-7,-3,-9,-4,6,10,-2,-7,-9,4,-3,-8,8,4,-10,-8,-9,3,-1,-7,-6,-2,7,3,-4,5,8,8,7,-1,-2,-3,1,9,3,-1,-2,-7,-4,-4,7,-8,3,10,10,8,-2,5,6,-5,9,-8,-9,-9,-5,-1,-2,-7,5,-4,1,-8,-2,-6,6,-9,-7,5,4,-1,7,-1,-1,4,8,-2,10,1,1,-4,7,2,-2,2,-1,5,4,-6,6,2,8,2,2,-1,9,9,-1,-1,-8,-1,7,8,3,8,-4,3,4,9,9,8,7,5,10,5,1,10,3,9,2,5,-6,7,6,-6,7,-2,-5,4,-2,-5,6,-1,3,-5,5,-10,-2,3,-10,2,4,4,10,-5,9,-7,5,-4,-6,-3,2,-4,-8,-10,-5,-8,8,-8,-9,3,3,5,-6,4,9,-4,1,-5,6,-7,-10,2,6,6,-1,7,7,-1,10,-6,5,10,-8,4,2,5,-8,-10,6,-4,-5,2,1,-6,3,10,1,-3,-6,-3,10,-2,6,3,-10,-1,-7,8,8,-9,-5,8,-8,5,2,2,-7,-10,-8,8,-1,-2,2,4,-5,3,-1,-4,-6,1,-8,-7,9,9,-2,5,6,10,9,-1,9,4,7,-7,6,8,-4,8,-2,-9,6,8,1,-1,3,7], dtype = "int8")#candidate|9885|(576,)|const|int8
call_9884 = relay.TupleGetItem(func_994_call(relay.reshape(const_9885.astype('int8'), [6, 8, 12]), relay.reshape(const_9885.astype('int8'), [6, 8, 12]), ), 0)
call_9886 = relay.TupleGetItem(func_998_call(relay.reshape(const_9885.astype('int8'), [6, 8, 12]), relay.reshape(const_9885.astype('int8'), [6, 8, 12]), ), 0)
output = relay.Tuple([bop_9873,uop_9876,call_9884,const_9885,])
output2 = relay.Tuple([bop_9873,uop_9876,call_9886,const_9885,])
func_9890 = relay.Function([var_9871,], output)
mod['func_9890'] = func_9890
mod = relay.transform.InferType()(mod)
var_9891 = relay.var("var_9891", dtype = "uint64", shape = (3, 4, 15))#candidate|9891|(3, 4, 15)|var|uint64
output = func_9890(var_9891)
func_9892 = relay.Function([var_9891], output)
mutated_mod['func_9892'] = func_9892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8185_call = mod.get_global_var('func_8185')
func_8187_call = mutated_mod.get_global_var('func_8187')
call_9898 = relay.TupleGetItem(func_8185_call(), 2)
call_9899 = relay.TupleGetItem(func_8187_call(), 2)
func_6228_call = mod.get_global_var('func_6228')
func_6232_call = mutated_mod.get_global_var('func_6232')
const_9904 = relay.const([8.239650,-2.105049,3.958233,6.196617,-2.650892,-3.626271,1.230211,-9.441621,2.590465,-5.414914,0.067127,-2.763630,-9.372779,9.426893,1.772447,1.303440,-4.019128,-1.059969,-6.910696,9.773924,-1.500867,-0.560710,-2.568554,-9.877171,-2.995955,1.902734,-3.836937,-9.053244,-8.034017,-9.530087,-8.190031,1.422805,8.333447,-5.173425,2.493936,7.115540,-8.020238,-0.849371,-4.664653,-9.115596,4.186867,-7.163129,7.152513,-5.186311,4.552722,2.835437,-1.542449,-9.555370,-6.477342,5.338537,-3.522185,-9.754052,-4.299003,7.826232,6.655485,7.105696,-1.741246,-1.634531,-7.366563,5.692488,-4.744204,8.140270,6.771187,-6.628269,3.019683,-7.717726,-8.920289,-3.931511,6.535312,-8.858923,8.466961,7.536191,7.350799,0.109286,2.465971,2.298741,-1.784088,-4.230053,-5.031578,5.095710,7.001846,-9.176051,-7.481475,-2.949269,-9.279506,-8.136197,6.858000,6.803380,-5.241463,-0.499615,-0.670579,7.499999,7.907107,-7.118814,-3.638290,9.780125,8.158311,-6.471450,-0.572174,7.840069,9.070804,-0.715633,-9.177990,4.307100,-0.384069,-8.474820,-8.388598,5.528092,9.108582,4.570181,-0.834407,8.455617,-0.776678,6.623366,7.391880,-4.819755,0.769257,4.435900,-5.434251,-9.790141,-5.901132,1.823098,-8.680097,-9.444802,8.099297,4.314169,-4.632125,6.503946,-5.768616,2.668378,-6.211104,-5.113056,-7.266898,7.034068,1.123625,-8.959740,-1.195166,-6.180110,-8.419135,-9.217429,-0.350403,2.171791,0.276380,-6.662332,-4.373564,8.505741,7.116455,-8.880815,6.056015,-4.971461,7.443524,-1.919583,3.939491,-9.199242,-8.020518,7.235403,-9.241529,1.145325,3.888504,-9.715607,-6.156811,-5.812207,3.714604,0.876344,-5.381691,4.886588,-9.974230,3.898486,-0.061912,-9.566592,2.146001,-7.288365,-8.495174,3.395961,8.360005,0.558482,4.073253,7.063201,-8.958590,3.722948,-0.581474,-9.993391,-0.573814,-9.240436,5.274980,7.962506,-3.393084,4.310514,-0.537106,9.685604,-8.293637,7.426360,-4.527391,-7.523576,8.843305,-8.171904,9.350348,1.138199,-7.134542,-7.882463,-3.245235,-7.026602,6.612081,4.313577,-3.862944,0.847421,-5.728015,-1.239981,3.362845,9.194617,-7.455528,6.274717,7.855533,-0.483570,-1.374261,7.592585,-4.447133,-8.496494,3.188212,5.499977,-7.897218,-8.302225,2.798495,3.886459,-9.874996,-7.525881,-7.723680,-5.013257,-4.568457,-4.242815,2.209865,6.618093,3.496004,-1.338557,3.007883,9.730962,-0.660475,-9.350680,-6.176590,5.088614,9.692184,-5.235985,4.700992,9.487960,8.196470,-6.886453,4.224839,-3.170577,6.417007,-5.129050,9.119271,-1.876946,0.349763,4.364596,1.309085,-7.797890,-7.919262,-8.083204,1.614885,7.509720,6.269294,-2.748752,8.570589,-0.101554,2.779534,-6.814062,-7.188301,-0.948774,5.554132,2.163212,-0.562595,4.478367,-3.471152,-9.582338,9.898328,-6.438152,-2.732027,-0.969464,-2.880419,-2.676511,5.377954,-4.971011,-6.843947,8.081416,-7.605887,-9.942443,7.080027,-9.277239,4.984048,6.800283,-1.068526,-9.828592,-6.598580,2.284136,4.589078,-3.123717,-4.549710,-0.018327,-8.090260,-5.641229,-3.395629,4.252649,4.054449,-6.896426,9.249971,0.080012,1.343681,-7.544864,-9.757828,-6.933211,6.389184,-7.022073,8.721895,-9.351157,0.189171,2.118579,7.635688,9.365653,-5.365733,-8.351424,2.484767,7.567588,3.356210,0.829139,5.971391,0.008056,-2.142954,-8.296138,-4.836950,1.731457,-5.376123,8.184494,-4.246569,-2.004819,-6.511139,-7.764624,-7.710296,1.567457,1.029843,-1.471888,-8.757072,9.767308,7.340167,0.293318,5.857404,9.395927,6.787690,1.728671,3.641133,-3.605658,-0.067686,-5.337894,-2.692658,-1.541486,-4.992799,1.737893,-8.821618,0.204751,-2.356407,0.819786,-9.007663,1.412192,-3.153964,6.321836,-8.549954,6.626600,-3.926709,-2.745661,6.943218,-3.337838,4.728422,9.970483,-0.134825,5.319468,8.848028,-4.684317,-8.817480,2.842559,0.167543,-9.430545,-3.211998,-9.192632,5.313967,6.403543,-7.382734,-6.399430,9.388700,2.862973,4.184345,1.845428,-9.022887,-3.724383,2.780041,1.340682,-6.583081,5.847425,0.927622,7.626009,-1.148420,-0.215332,-6.690812,-1.643777,-1.169326,8.344414,-4.038052,-4.739969,2.221706,4.240608,-6.824738,5.637019,5.794227,5.026329,-6.005349,4.336511,3.494550,2.405461,9.524763,-3.310181,-5.688746,0.956234,-8.009848,1.831640,-3.162596,-4.585584,8.194584,5.493306,-9.250604,5.482811,2.420954,0.927727,-6.195442,-6.449242,-2.454195,3.504050,-8.963340,-5.003317,-7.021320,-7.806540,-5.973249,0.118043,-0.550167,-8.821030,0.307618,-7.464237,8.472413,-5.010161,-8.081505,6.021139,1.416150,8.739055,9.124471,-3.591553,2.299224,-7.552992,1.791931,3.486396,-2.044385,9.874530,-1.358551,-6.798901,3.719193,6.879263,6.255630,8.154666,-2.995506,-1.316810,-2.190083,1.014499,-9.473919,2.087452,-7.453661,0.640435,2.440241,-3.238644,-9.994023,9.187779,2.551917,-7.904137,3.403898,1.091202,-1.967895,4.696367,-2.303201,2.281869,-3.753074,3.753655,2.972874,4.809509,4.221885,-8.917891,-6.763592,9.577369,4.497059,-3.813563,8.487501,-7.770608,0.949136,-3.081600,-8.481396,-1.468825,4.613951,2.863817,8.516262,6.058415,2.525846,-3.827990,1.841548,3.273439,3.521608,5.920243,-1.979798,6.218397,6.228595,1.354213,3.349112,-0.256540,6.612114,5.090011,-3.637598,3.168870,6.703509,8.457139,-5.569657,5.244102,-3.026134,-1.547639,-9.115467,-5.762089,-9.284008,0.032361,-5.329601,-8.895883,-8.490044,-7.111486,-1.481209,-1.361179,2.622724,-0.596425,-2.688616,-8.843718,-2.529280,8.034592,-3.362667,-9.824684,-3.573630,-9.675874,0.341192,-6.860879,-9.331103,-2.788088,3.354128,-7.109580,-5.692789,-7.061613,-3.544301,2.530722,4.044145,9.793456,-1.306439,-6.653072,-8.413601,5.079390,4.570443,0.949963,-1.946593,-9.340747,-0.681958,5.050868,6.225680,1.070892,-2.949858,-7.551469,-7.063965,0.917363,8.972138,6.032464,-4.273586,9.129659,-6.044341,1.222929,-2.853367,-5.282849,3.397306,2.506579,5.100841,-5.621526,5.395160,-9.237911,2.528667,8.486969,2.498362,-8.487093,0.632874,-4.914170,-6.577726,4.943012,6.828394,8.454169,0.347905,-3.139829,4.023316,-7.913196,9.571231,-4.852128,-6.910989,-3.037945,-4.467968,2.646271,-9.128717,-8.098925,5.270735,-8.816863,0.343821,4.193081,-0.538605,-8.224003,7.989416,6.636517,6.886470,7.072674,2.012463,6.895583,-6.987988,7.776247,-4.702673,0.898234,6.764267,4.300418,2.750029,1.193545,-2.648016,0.183815,-3.674039,-6.532642,5.381038,1.335562,8.628106,-9.655789,5.045183,7.147796,2.177736,-9.881710,-2.691736,-6.080693,-3.622202,4.196242,8.378757,-2.295337,4.628253,4.461044,-5.355511,1.715925,4.760561,7.487117,-4.122577,6.697057,4.081287,-7.089257,3.129539,2.009664,6.222093,-1.214565,-6.241733,-7.358691,7.623076,-8.791888,2.752931,-9.637827,1.612668,9.615890,-7.753048,-0.195442,-4.749424,2.085052,6.762482,-7.568102,4.719999,2.868445,1.845114,-5.382691,8.428208,4.562315,-7.522016,6.477952,2.519090,7.725006,5.194628,-0.265627,5.000609,7.795129,-1.483806,5.583834,-0.136995,8.731862,-6.651786,8.623696,-0.841987,-0.248420,-0.731607,1.829423,1.485854,1.581352,-1.909755,-9.538023,1.005377,-5.327176,3.389680,3.247989,-5.411368,-3.169930,-2.079405,-7.956306,-9.117125,-5.341734,-2.127599,-2.168161,-4.042800,3.765230,9.769501,-1.972167,1.994584,6.133392,-3.620024,9.949971,7.660163,-2.207405,1.403805,7.917703,5.437994,-9.454914,4.040986,7.969421,-7.625196,-1.133186,1.587849,-7.214576,8.699855,6.378496,-0.938152,-3.629593,-6.396806,-7.751289,0.490438,9.550424,3.128917,-4.759239,4.432553,-3.251794,-1.894211,8.803965,-3.842993,4.274469,5.305108,1.127642,6.984395,-5.402943,-3.481083,6.962394,-2.610159,1.627602,-5.160709,-0.544536,6.437574,6.232512,0.812906,2.168859,-8.421372,7.890187,-6.426883,2.889409,-5.297275,2.582728,-9.615702,-0.963786,-8.735021,-0.612873,6.034395,-6.625720,-8.065417,7.441310,-3.661573,4.979621,9.330525,1.510490,6.277876,3.445839,-2.261464,4.100764,1.863001,2.413008,1.449145,-5.092049,-4.666774,7.616234,-5.591606,-8.378958,-0.198357,6.172758,-5.728480,5.028373,1.847377,3.980389,7.849623,3.421445,-6.266989,-0.847590,-3.195182,-5.759693,8.849162,6.567435,-3.267062,7.613617,7.381737,-9.701483,6.862834,-6.313961,-3.513546,-6.985125,-4.212537,-6.718815,-5.751662,-2.369191,1.411169,4.844038,-3.778521,-3.762282,-1.932536,3.924546,-4.399158,9.610685,9.181653,7.913069], dtype = "float32")#candidate|9904|(832,)|const|float32
const_9905 = relay.const([4.842525,-1.095846,9.668853,-9.475676,2.800543,-8.838798,0.332463,2.399929,-0.223530,6.515232,-2.085407,-4.475059,-9.956638,-2.417720,4.698731,9.928421,1.850594,-6.733656,-0.862191,-4.246793,-8.092733,-3.788414,0.550425,0.536116,-1.396614,1.183341,3.217524,8.191640,9.307848,7.254472,-0.398173,6.138124,-1.791806,-0.029986,-0.693358,-8.968641,5.969693,-2.252569,-4.922049,-1.313822,6.760743,-3.931318,1.081959,-3.771635,8.483919,5.790797,6.572856,0.710828,-6.816340,-7.812852,-2.538291,0.698993,6.481311,0.035258,1.738360,4.200609,3.053619,1.797602,9.524276,3.273755,6.880226,-3.719729,8.540169,-5.134859,5.522351,-8.521777,-6.879136,-4.405672,-0.198185,5.475932,1.096744,-4.582546,-0.235165,-6.156063,1.335828,-2.195820,-8.647053,5.795291,8.965567,-9.875083,2.580297,-8.187480,-6.221784,9.837448,-1.380302,8.614556,6.304972,-9.396718,7.877033,5.300811,-5.214916,-0.655593,-9.727840,-1.059639,1.820243,4.070693,-5.282384,-8.695362,-9.887933,6.945147,9.010313,-3.098701,-8.629572,-5.396843,9.634259,-1.506919,-7.753813,9.908841,6.140050,-7.428924,-3.183497,6.000921,7.478707,0.490044,4.174164,4.404496,3.910724,-8.189268,-8.538989,-4.741509,-8.597260,-6.614821,9.660679,-5.479283,9.243089,4.917421,-6.453945,-6.268769,1.272808,6.928074,-0.833558,0.750176,-1.314325,5.607722,-4.273462,4.879103,7.945402,6.385196,2.838717,3.706354,-4.344408,-6.036570,8.835190,0.483887,-1.442526,6.478590,0.736994,0.032987,-5.325478,-8.780346,-6.404795,-5.901997,2.740777,-9.828037,6.231697,-1.561178,-9.966776,-6.712856,6.501737,-3.204982,-3.000079,7.275654,-6.902381,0.612220,0.066877,-5.138055,8.477982,7.654261,-2.134746,8.834022,4.284964,-3.544108,-3.792098,5.892538,-9.860080,-2.572558,-1.602671,-7.645355,-8.721634,2.403044,3.382416,4.909614,-4.609290,-8.567633,-8.791232,-6.495253,1.519950,9.365496,0.536182,1.647922,6.197048,-1.923623,3.703106,-8.677850,8.015867,-3.969597,0.359074,3.089396,-4.152870,2.474716,-0.695983,6.644673,-7.330681,7.401175,2.681963,2.318432,-2.410338,-3.166671,-3.467718,4.466995,7.103337,-3.674204,4.338390,-2.769150,0.017962,-0.722759,-8.225172,6.668669,2.155102,-5.990458,-7.571503,9.824246,-6.675678,-7.635311,-8.407961,-1.017447,2.342309,4.200802,-1.704782,6.264511,0.227419,7.629673,9.100355,-5.562784,-8.308988,4.608476,-1.807495,6.771080,9.342320,9.698311,-8.273565,1.238880,-1.986823,-9.840950,-0.254333,9.897750,-4.447905,9.967696,6.245611,-0.514412,9.317046,-7.199253,-1.968045,-0.054177,-2.225696,5.578427,6.462561,-6.134396,7.199439,-9.326104,-7.627139,7.212985,4.191131,-7.376792,-0.373735,-9.431530,3.781135,0.464398,-1.035391,8.168646,3.138719,9.102660,8.497995,1.050134,1.886648,-7.637909,1.083878,-1.762261,7.189988,8.290165,8.625724,9.430800,4.058232,-9.334289,-7.115877,-3.942450,-8.973264,-6.521803,9.777468,0.164620,6.521267,8.970917,9.790772,7.071189,-0.313752,3.233980,-0.410446,-3.843337,8.498568,-8.270457,-1.979259,-8.426332,-7.577279,-6.926867,-6.720331,-6.701326,-4.105672,-9.534193,8.620673,-9.665262,-3.616098,3.744604,-5.342877,-5.432393,-5.254841,1.325998,4.258057,-4.945449,-5.871141,-4.544414,-9.745280,-7.827629,-0.589388,-8.526083,7.704701,8.435034,-7.971617,-4.332027,2.824223,1.541584,2.635819,-2.701055,-6.662698,8.487907,-5.390423,0.328849,-3.299635,9.787475,-6.447531,1.666386,-9.430317,7.624438,9.074757,2.757873,9.830498,4.497091,2.671545,5.775261,-0.706980,-5.429201,-8.754458,1.157990,1.624795,3.104510,-2.106198,5.385456,-3.809468,-2.590909,3.599608,-2.181343,-2.143997,2.467352,8.211097,4.474746,6.772136,-4.696984,8.444571,5.464432,-4.295677,-5.391406,3.859491,1.357636,-7.886991,0.039276,6.829560,-5.609984,8.020954,0.481554,5.382288,-9.476860,-4.578929,-7.709709,-1.806999,7.857827,2.484884,-8.259559,6.666263,-8.729369,0.470739,6.245386,2.408839,-7.466167,-8.808740,6.335163,-5.829169,-2.849451,4.408162,-8.724030,-2.314793,-3.559283,2.212162,-9.150071,6.418757,-9.358164,9.632453,1.529101,-0.489267,1.020113,-7.936844,-6.938789,5.783226,7.419620,8.376339,-2.862648,9.873547,4.779618,0.238915,-7.362615,-7.113133,9.519774,-7.849302,-8.101176,-1.112818,9.162601,0.670416,9.809783,8.903548,3.560189,-7.381152,-3.201946,-2.626330,-4.641034,-5.155483,-2.805225,-1.262348,-8.538621,8.945267,1.273923,-9.775608,-5.197339,-5.902866,-5.638652,-4.607660,-2.413688,-0.822072,4.387734,2.386570,-6.666598,-5.735496,-4.498714,6.214450,4.965481,-1.908836,-5.321261,-0.500456,-0.513014,0.256297,-9.335815,-0.420888,-7.186545,7.871628,9.701456,-5.078269,-4.804158,7.573036,6.024265,5.598296,3.982951,0.565353,1.944475,-8.863695,-8.322091,-0.132239,7.971759,1.839577,0.647235,9.509459,4.503119,6.438677,-0.857874,3.284918,4.195998,1.354677,-1.831300,-4.157239,-8.203122,3.389695,-5.026103,5.417124,-5.934832,-2.630702,4.452239,-2.870606,3.260291,0.766395,-5.717672,7.884054,9.625952,-6.386001,8.925561,6.797963,6.939018,-4.514021,5.391459,-5.962388,-2.638444,9.638649,-3.766175,5.530647,5.477418,-1.923934,4.471730,3.165014,-4.792565,-9.406595,3.447596,9.733649,-8.207880,-3.177040,4.998649,2.796531,4.392128,5.400933,-3.549484,2.185662,7.032402,-8.152181,8.140451], dtype = "float32")#candidate|9905|(528,)|const|float32
call_9903 = relay.TupleGetItem(func_6228_call(relay.reshape(const_9904.astype('float32'), [4, 13, 16]), relay.reshape(const_9905.astype('float32'), [528,]), ), 1)
call_9906 = relay.TupleGetItem(func_6232_call(relay.reshape(const_9904.astype('float32'), [4, 13, 16]), relay.reshape(const_9905.astype('float32'), [528,]), ), 1)
output = relay.Tuple([call_9898,call_9903,const_9904,const_9905,])
output2 = relay.Tuple([call_9899,call_9906,const_9904,const_9905,])
func_9909 = relay.Function([], output)
mod['func_9909'] = func_9909
mod = relay.transform.InferType()(mod)
output = func_9909()
func_9910 = relay.Function([], output)
mutated_mod['func_9910'] = func_9910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9233_call = mod.get_global_var('func_9233')
func_9235_call = mutated_mod.get_global_var('func_9235')
call_9911 = relay.TupleGetItem(func_9233_call(), 1)
call_9912 = relay.TupleGetItem(func_9235_call(), 1)
var_9940 = relay.var("var_9940", dtype = "bool", shape = (4, 10, 4))#candidate|9940|(4, 10, 4)|var|bool
bop_9941 = relay.maximum(call_9911.astype('uint32'), relay.reshape(var_9940.astype('uint32'), relay.shape_of(call_9911))) # shape=(4, 10, 4)
bop_9944 = relay.maximum(call_9912.astype('uint32'), relay.reshape(var_9940.astype('uint32'), relay.shape_of(call_9912))) # shape=(4, 10, 4)
bop_9947 = relay.divide(bop_9941.astype('float32'), relay.reshape(var_9940.astype('float32'), relay.shape_of(bop_9941))) # shape=(4, 10, 4)
bop_9950 = relay.divide(bop_9944.astype('float32'), relay.reshape(var_9940.astype('float32'), relay.shape_of(bop_9944))) # shape=(4, 10, 4)
output = relay.Tuple([bop_9947,])
output2 = relay.Tuple([bop_9950,])
func_9969 = relay.Function([var_9940,], output)
mod['func_9969'] = func_9969
mod = relay.transform.InferType()(mod)
var_9970 = relay.var("var_9970", dtype = "bool", shape = (4, 10, 4))#candidate|9970|(4, 10, 4)|var|bool
output = func_9969(var_9970)
func_9971 = relay.Function([var_9970], output)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7613_call = mod.get_global_var('func_7613')
func_7614_call = mutated_mod.get_global_var('func_7614')
call_10054 = func_7613_call()
call_10055 = func_7613_call()
var_10058 = relay.var("var_10058", dtype = "float32", shape = (4, 10, 1))#candidate|10058|(4, 10, 1)|var|float32
bop_10059 = relay.floor_divide(call_10054.astype('float32'), relay.reshape(var_10058.astype('float32'), relay.shape_of(call_10054))) # shape=(4, 10, 1)
bop_10062 = relay.floor_divide(call_10055.astype('float32'), relay.reshape(var_10058.astype('float32'), relay.shape_of(call_10055))) # shape=(4, 10, 1)
output = bop_10059
output2 = bop_10062
func_10066 = relay.Function([var_10058,], output)
mod['func_10066'] = func_10066
mod = relay.transform.InferType()(mod)
var_10067 = relay.var("var_10067", dtype = "float32", shape = (4, 10, 1))#candidate|10067|(4, 10, 1)|var|float32
output = func_10066(var_10067)
func_10068 = relay.Function([var_10067], output)
mutated_mod['func_10068'] = func_10068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10095 = relay.var("var_10095", dtype = "int64", shape = (10, 2, 7))#candidate|10095|(10, 2, 7)|var|int64
var_10096 = relay.var("var_10096", dtype = "int64", shape = (10, 2, 7))#candidate|10096|(10, 2, 7)|var|int64
bop_10097 = relay.greater_equal(var_10095.astype('bool'), relay.reshape(var_10096.astype('bool'), relay.shape_of(var_10095))) # shape=(10, 2, 7)
output = relay.Tuple([bop_10097,])
output2 = relay.Tuple([bop_10097,])
func_10111 = relay.Function([var_10095,var_10096,], output)
mod['func_10111'] = func_10111
mod = relay.transform.InferType()(mod)
var_10112 = relay.var("var_10112", dtype = "int64", shape = (10, 2, 7))#candidate|10112|(10, 2, 7)|var|int64
var_10113 = relay.var("var_10113", dtype = "int64", shape = (10, 2, 7))#candidate|10113|(10, 2, 7)|var|int64
output = func_10111(var_10112,var_10113,)
func_10114 = relay.Function([var_10112,var_10113,], output)
mutated_mod['func_10114'] = func_10114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9462_call = mod.get_global_var('func_9462')
func_9464_call = mutated_mod.get_global_var('func_9464')
call_10152 = relay.TupleGetItem(func_9462_call(), 0)
call_10153 = relay.TupleGetItem(func_9464_call(), 0)
var_10158 = relay.var("var_10158", dtype = "float32", shape = (4, 10, 3))#candidate|10158|(4, 10, 3)|var|float32
bop_10159 = relay.logical_xor(call_10152.astype('int64'), var_10158.astype('int64')) # shape=(4, 10, 3)
bop_10162 = relay.logical_xor(call_10153.astype('int64'), var_10158.astype('int64')) # shape=(4, 10, 3)
func_7613_call = mod.get_global_var('func_7613')
func_7614_call = mutated_mod.get_global_var('func_7614')
call_10164 = func_7613_call()
call_10165 = func_7613_call()
func_7285_call = mod.get_global_var('func_7285')
func_7288_call = mutated_mod.get_global_var('func_7288')
var_10177 = relay.var("var_10177", dtype = "int32", shape = (14, 5))#candidate|10177|(14, 5)|var|int32
call_10176 = relay.TupleGetItem(func_7285_call(relay.reshape(var_10177.astype('int32'), [70,])), 0)
call_10178 = relay.TupleGetItem(func_7288_call(relay.reshape(var_10177.astype('int32'), [70,])), 0)
func_9403_call = mod.get_global_var('func_9403')
func_9406_call = mutated_mod.get_global_var('func_9406')
var_10183 = relay.var("var_10183", dtype = "bool", shape = (160,))#candidate|10183|(160,)|var|bool
var_10184 = relay.var("var_10184", dtype = "float32", shape = (768,))#candidate|10184|(768,)|var|float32
call_10182 = relay.TupleGetItem(func_9403_call(relay.reshape(var_10183.astype('bool'), [4, 10, 4]), relay.reshape(var_10184.astype('float32'), [768,]), ), 1)
call_10185 = relay.TupleGetItem(func_9406_call(relay.reshape(var_10183.astype('bool'), [4, 10, 4]), relay.reshape(var_10184.astype('float32'), [768,]), ), 1)
bop_10192 = relay.logical_or(var_10183.astype('bool'), call_10164.astype('bool')) # shape=(4, 10, 160)
bop_10195 = relay.logical_or(var_10183.astype('bool'), call_10165.astype('bool')) # shape=(4, 10, 160)
output = relay.Tuple([bop_10159,call_10176,var_10177,call_10182,var_10184,bop_10192,])
output2 = relay.Tuple([bop_10162,call_10178,var_10177,call_10185,var_10184,bop_10195,])
func_10196 = relay.Function([var_10158,var_10177,var_10183,var_10184,], output)
mod['func_10196'] = func_10196
mod = relay.transform.InferType()(mod)
mutated_mod['func_10196'] = func_10196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10196_call = mutated_mod.get_global_var('func_10196')
var_10198 = relay.var("var_10198", dtype = "float32", shape = (4, 10, 3))#candidate|10198|(4, 10, 3)|var|float32
var_10199 = relay.var("var_10199", dtype = "int32", shape = (14, 5))#candidate|10199|(14, 5)|var|int32
var_10200 = relay.var("var_10200", dtype = "bool", shape = (160,))#candidate|10200|(160,)|var|bool
var_10201 = relay.var("var_10201", dtype = "float32", shape = (768,))#candidate|10201|(768,)|var|float32
call_10197 = func_10196_call(var_10198,var_10199,var_10200,var_10201,)
output = call_10197
func_10202 = relay.Function([var_10198,var_10199,var_10200,var_10201,], output)
mutated_mod['func_10202'] = func_10202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9909_call = mod.get_global_var('func_9909')
func_9910_call = mutated_mod.get_global_var('func_9910')
call_10257 = relay.TupleGetItem(func_9909_call(), 1)
call_10258 = relay.TupleGetItem(func_9910_call(), 1)
func_9026_call = mod.get_global_var('func_9026')
func_9027_call = mutated_mod.get_global_var('func_9027')
call_10263 = relay.TupleGetItem(func_9026_call(), 1)
call_10264 = relay.TupleGetItem(func_9027_call(), 1)
func_7613_call = mod.get_global_var('func_7613')
func_7614_call = mutated_mod.get_global_var('func_7614')
call_10266 = func_7613_call()
call_10267 = func_7613_call()
bop_10268 = relay.floor_divide(call_10266.astype('float64'), call_10257.astype('float64')) # shape=(4, 10, 528)
bop_10271 = relay.floor_divide(call_10267.astype('float64'), call_10258.astype('float64')) # shape=(4, 10, 528)
output = relay.Tuple([call_10263,bop_10268,])
output2 = relay.Tuple([call_10264,bop_10271,])
func_10282 = relay.Function([], output)
mod['func_10282'] = func_10282
mod = relay.transform.InferType()(mod)
output = func_10282()
func_10283 = relay.Function([], output)
mutated_mod['func_10283'] = func_10283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9026_call = mod.get_global_var('func_9026')
func_9027_call = mutated_mod.get_global_var('func_9027')
call_10284 = relay.TupleGetItem(func_9026_call(), 1)
call_10285 = relay.TupleGetItem(func_9027_call(), 1)
func_9969_call = mod.get_global_var('func_9969')
func_9971_call = mutated_mod.get_global_var('func_9971')
const_10288 = relay.const([False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True], dtype = "bool")#candidate|10288|(160,)|const|bool
call_10287 = relay.TupleGetItem(func_9969_call(relay.reshape(const_10288.astype('bool'), [4, 10, 4])), 0)
call_10289 = relay.TupleGetItem(func_9971_call(relay.reshape(const_10288.astype('bool'), [4, 10, 4])), 0)
output = relay.Tuple([call_10284,call_10287,const_10288,])
output2 = relay.Tuple([call_10285,call_10289,const_10288,])
func_10321 = relay.Function([], output)
mod['func_10321'] = func_10321
mod = relay.transform.InferType()(mod)
mutated_mod['func_10321'] = func_10321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10321_call = mutated_mod.get_global_var('func_10321')
call_10322 = func_10321_call()
output = call_10322
func_10323 = relay.Function([], output)
mutated_mod['func_10323'] = func_10323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10282_call = mod.get_global_var('func_10282')
func_10283_call = mutated_mod.get_global_var('func_10283')
call_10332 = relay.TupleGetItem(func_10282_call(), 0)
call_10333 = relay.TupleGetItem(func_10283_call(), 0)
uop_10340 = relay.cos(call_10332.astype('float32')) # shape=(12, 15, 10)
uop_10342 = relay.cos(call_10333.astype('float32')) # shape=(12, 15, 10)
output = uop_10340
output2 = uop_10342
func_10351 = relay.Function([], output)
mod['func_10351'] = func_10351
mod = relay.transform.InferType()(mod)
output = func_10351()
func_10352 = relay.Function([], output)
mutated_mod['func_10352'] = func_10352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_10362 = relay.TupleGetItem(func_7723_call(), 0)
call_10363 = relay.TupleGetItem(func_7725_call(), 0)
uop_10367 = relay.atanh(call_10362.astype('float32')) # shape=(6, 300)
uop_10369 = relay.atanh(call_10363.astype('float32')) # shape=(6, 300)
output = uop_10367
output2 = uop_10369
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8260_call = mod.get_global_var('func_8260')
func_8261_call = mutated_mod.get_global_var('func_8261')
call_10420 = relay.TupleGetItem(func_8260_call(), 0)
call_10421 = relay.TupleGetItem(func_8261_call(), 0)
func_8336_call = mod.get_global_var('func_8336')
func_8337_call = mutated_mod.get_global_var('func_8337')
call_10422 = relay.TupleGetItem(func_8336_call(), 0)
call_10423 = relay.TupleGetItem(func_8337_call(), 0)
uop_10434 = relay.sin(call_10420.astype('float32')) # shape=(4, 10, 1)
uop_10436 = relay.sin(call_10421.astype('float32')) # shape=(4, 10, 1)
func_9403_call = mod.get_global_var('func_9403')
func_9406_call = mutated_mod.get_global_var('func_9406')
const_10442 = relay.const([True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True], dtype = "bool")#candidate|10442|(160,)|const|bool
var_10443 = relay.var("var_10443", dtype = "float32", shape = (768,))#candidate|10443|(768,)|var|float32
call_10441 = relay.TupleGetItem(func_9403_call(relay.reshape(const_10442.astype('bool'), [4, 10, 4]), relay.reshape(var_10443.astype('float32'), [768,]), ), 1)
call_10444 = relay.TupleGetItem(func_9406_call(relay.reshape(const_10442.astype('bool'), [4, 10, 4]), relay.reshape(var_10443.astype('float32'), [768,]), ), 1)
func_7858_call = mod.get_global_var('func_7858')
func_7859_call = mutated_mod.get_global_var('func_7859')
call_10448 = relay.TupleGetItem(func_7858_call(), 0)
call_10449 = relay.TupleGetItem(func_7859_call(), 0)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_10464 = relay.TupleGetItem(func_7427_call(), 0)
call_10465 = relay.TupleGetItem(func_7428_call(), 0)
var_10472 = relay.var("var_10472", dtype = "float64", shape = (4, 10, 4))#candidate|10472|(4, 10, 4)|var|float64
bop_10473 = relay.greater(call_10441.astype('bool'), relay.reshape(var_10472.astype('bool'), relay.shape_of(call_10441))) # shape=(4, 10, 4)
bop_10476 = relay.greater(call_10444.astype('bool'), relay.reshape(var_10472.astype('bool'), relay.shape_of(call_10444))) # shape=(4, 10, 4)
output = relay.Tuple([call_10422,uop_10434,const_10442,var_10443,call_10448,call_10464,bop_10473,])
output2 = relay.Tuple([call_10423,uop_10436,const_10442,var_10443,call_10449,call_10465,bop_10476,])
F = relay.Function([var_10443,var_10472,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10443,var_10472,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

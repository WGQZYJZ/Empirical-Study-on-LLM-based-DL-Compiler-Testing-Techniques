==========mod==========
#[version = "0.0.5"]
def @func_8363(%var_8353: Tensor[(1248), float64], %var_8355: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), int32], Tensor[(1248), float64], Tensor[(14), int32], Tensor[(70), int32], Tensor[(4, 10, 1), float32]) {
  %0 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
  %1 = cast(%0, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %2 = cast(%var_8353, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(14), int32] */, dtype="int32") /* ty=Tensor[(14), int32] */;
  %4 = cast(%var_8355, dtype="int32") /* ty=Tensor[(70), int32] */;
  %5 = reshape(%2, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
  %6 = reshape(%3, newshape=[14]) /* ty=Tensor[(14), int32] */;
  %7 = reshape(%4, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %8 = @func_3593(%5, %6, %7) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
  %9 = @func_8260() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) */;
  %10 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %11 = asinh(%1) /* ty=Tensor[(4, 10, 1), float32] */;
  %12 = %8.0;
  %13 = %9.0;
  (%10, %11, %12, %var_8353, meta[relay.Constant][0] /* ty=Tensor[(14), int32] */, %var_8355, %13)
}

def @func_8185() -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) {
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(900, 2), float64] */, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(900, 2), float64] */, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %16 = reshape(%14, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %17 = reshape(%15, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %18 = @func_2749(%16, %17) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
  %19 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %20 = %18.2;
  (%19, %20, meta[relay.Constant][1] /* ty=Tensor[(900, 2), float64] */)
}

def @func_9414() -> Tensor[(4, 10, 1), float32] {
  @func_7358() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_10370() -> Tensor[(6, 300), float32] {
  %21 = @func_7723() /* ty=(Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(6, 300), float32] */;
  atanh(%23) /* ty=Tensor[(6, 300), float32] */
}

def @func_4773(%var_4734: Tensor[(15, 12, 10), uint8], %var_4743: Tensor[(385), uint64], %var_4763: Tensor[(1344), uint32]) -> (Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
  %24 = cast(meta[relay.Constant][2] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %25 = cast(%var_4734, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %26 = cast(%var_4743, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %27 = reshape(%26, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), uint64] */;
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(99, 1), float64] */, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %29 = cast(%var_4763, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %31 = reshape(%28, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float64] */;
  %32 = reshape(%29, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %33 = reshape(%30, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %34 = @func_3541(%31, %32, %33) /* ty=(Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
  %35 = less_equal(%24, %25) /* ty=Tensor[(15, 12, 10), bool] */;
  %36 = @func_4448(%27) /* ty=Tensor[(7, 5, 11), uint64] */;
  %37 = %34.3;
  (%35, %36, %var_4743, %37, meta[relay.Constant][3] /* ty=Tensor[(99, 1), float64] */, %var_4763, meta[relay.Constant][4] /* ty=Tensor[(432), float32] */)
}

def @func_9006(%var_9001: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool], Tensor[(980), float32], Tensor[(4, 10, 1), float32]) {
  %38 = @func_8336() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %41 = cast(%var_9001, dtype="float32") /* ty=Tensor[(980), float32] */;
  %42 = reshape(%41, newshape=[7, 140]) /* ty=Tensor[(7, 140), float32] */;
  %43 = @func_8429(%42) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) */;
  %44 = @func_8573() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %45 = cos(%40) /* ty=Tensor[(4, 10, 1), float32] */;
  %46 = %43.4;
  %47 = %44.0;
  (%45, %46, %var_9001, %47)
}

def @func_30(%var_22: Tensor[(9, 6, 8), float32]) -> Tensor[(9, 6, 8), float32] {
  %48 = cast(%var_22, dtype="float32") /* ty=Tensor[(9, 6, 8), float32] */;
  log2(%48) /* ty=Tensor[(9, 6, 8), float32] */
}

def @func_9890(%var_9871: Tensor[(3, 4, 15), uint64]) -> (Tensor[(3, 4, 15), bool], Tensor[(3, 4, 15), float64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 4, 15), uint64] */, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
  %50 = shape_of(%var_9871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_9871, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 4, 15), uint64] */, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %55 = cast(meta[relay.Constant][6] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %56 = reshape(%54, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %57 = reshape(%55, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %58 = @func_994(%56, %57) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %59 = greater(%51, %52) /* ty=Tensor[(3, 4, 15), bool] */;
  %60 = acosh(%53) /* ty=Tensor[(3, 4, 15), float64] */;
  %61 = %58.0;
  (%59, %60, %61, meta[relay.Constant][6] /* ty=Tensor[(576), int8] */)
}

def @func_8336() -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) {
  %62 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %63 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %64 = %62.0;
  (%63, %64)
}

def @func_6440(%var_6435: Tensor[(12, 2, 8), float64], %var_6436: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), float64],) {
  %65 = cast(%var_6436, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %66 = shape_of(%var_6435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_6435, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %69 = divide(%67, %68) /* ty=Tensor[(12, 2, 8), float64] */;
  (%69,)
}

def @main(%var_10443: Tensor[(768), float32], %var_10472: Tensor[(4, 10, 4), float64]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(160), bool], Tensor[(768), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 10, 1), float32], Tensor[(4, 10, 4), bool]) {
  %70 = @func_8336() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
  %71 = @func_8260() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) */;
  %72 = %71.0;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %74 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %75 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %77 = cast(%var_10443, dtype="float32") /* ty=Tensor[(768), float32] */;
  %78 = reshape(%76, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %79 = reshape(%77, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %80 = @func_9403(%78, %79) /* ty=(Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) */;
  %81 = %80.1;
  %82 = cast(%var_10472, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = %70.0;
  %87 = sin(%73) /* ty=Tensor[(4, 10, 1), float32] */;
  %88 = %74.0;
  %89 = %75.0;
  %90 = greater(%84, %85) /* ty=Tensor[(4, 10, 4), bool] */;
  (%86, %87, meta[relay.Constant][7] /* ty=Tensor[(160), bool] */, %var_10443, %88, %89, %90)
}

def @func_8573() -> (Tensor[(4, 10, 1), float32],) {
  %91 = @func_8336() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
  %92 = %91.0;
  (%92,)
}

def @func_1888(%var_1864: Tensor[(70), int32], %var_1883: float32, %var_1884: Tensor[(4, 72), float32]) -> (Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) {
  %93 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 8), float64] */;
  %94 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 1), int32] */;
  %95 = cast(%var_1864, dtype="int32") /* ty=Tensor[(70), int32] */;
  %96 = reshape(%94, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %97 = reshape(%95, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %98 = cast(meta[relay.Constant][10] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %99 = cast(meta[relay.Constant][10] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %100 = reshape(%98, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %101 = reshape(%99, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %102 = @func_994(%100, %101) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %103 = cast(%var_1883, dtype="float32") /* ty=float32 */;
  %104 = cast(%var_1884, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %105 = reshape(%103, newshape=[]) /* ty=float32 */;
  %106 = reshape(%104, newshape=[12, 4, 6]) /* ty=Tensor[(12, 4, 6), float32] */;
  %107 = @func_311(%105, %106) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) */;
  %108 = log10(%93) /* ty=Tensor[(8, 3, 8), float64] */;
  %109 = @func_527(%96, %97) /* ty=Tensor[(2, 7, 5), int32] */;
  %110 = %102.0;
  %111 = %107.0;
  (%108, %109, meta[relay.Constant][9] /* ty=Tensor[(14, 1), int32] */, %var_1864, %110, meta[relay.Constant][10] /* ty=Tensor[(576), int8] */, %111, %var_1883, %var_1884)
}

def @func_6719(%var_6687: Tensor[(13, 16, 9), int64], %var_6714: Tensor[(576), int8]) -> (Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
  %112 = cast(%var_6687, dtype="int64") /* ty=Tensor[(13, 16, 9), int64] */;
  %113 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(13, 16, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 16, 9), int64] */, dtype="int64") /* ty=Tensor[(13, 16, 9), int64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %116 = cast(%var_6714, dtype="int8") /* ty=Tensor[(576), int8] */;
  %117 = cast(%var_6714, dtype="int8") /* ty=Tensor[(576), int8] */;
  %118 = reshape(%116, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %119 = reshape(%117, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %120 = @func_994(%118, %119) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %121 = minimum(%114, %115) /* ty=Tensor[(13, 16, 9), int64] */;
  %122 = %120.0;
  (%121, %122, %var_6714)
}

def @func_7470(%var_7461: Tensor[(2, 7, 1), float32]) -> (Tensor[(2, 7, 1), float64],) {
  %123 = cast(%var_7461, dtype="float32") /* ty=Tensor[(2, 7, 1), float32] */;
  %124 = erf(%123) /* ty=Tensor[(2, 7, 1), float32] */;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
  %126 = sinh(%125) /* ty=Tensor[(2, 7, 1), float64] */;
  (%126,)
}

def @func_8470() -> (Tensor[(4, 10, 1), float32],) {
  %127 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  (%127,)
}

def @func_9689(%var_9639: Tensor[(12, 156), int64], %var_9681: Tensor[(12, 156), int64]) -> (Tensor[(13, 8, 12), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(12, 156), float32]) {
  %128 = cast(%var_9639, dtype="int64") /* ty=Tensor[(12, 156), int64] */;
  %129 = reshape(%128, newshape=[1872]) /* ty=Tensor[(1872), int64] */;
  %130 = @func_8873(%129) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) */;
  %131 = cast(%var_9681, dtype="float32") /* ty=Tensor[(12, 156), float32] */;
  %132 = shape_of(%var_9639, dtype="int32") /* ty=Tensor[(2), int32] */;
  %133 = cast(%var_9639, dtype="float32") /* ty=Tensor[(12, 156), float32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %135 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %136 = %130.0;
  %137 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %138 = mod(%133, %134) /* ty=Tensor[(12, 156), float32] */;
  (%135, %136, %137, %138)
}

def @func_8274() -> Tensor[(13, 8, 12), float32] {
  @func_8235() /* ty=Tensor[(13, 8, 12), float32] */
}

def @func_10111(%var_10095: Tensor[(10, 2, 7), int64], %var_10096: Tensor[(10, 2, 7), int64]) -> (Tensor[(10, 2, 7), bool],) {
  %139 = cast(%var_10096, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
  %140 = shape_of(%var_10095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%var_10095, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = greater_equal(%141, %142) /* ty=Tensor[(10, 2, 7), bool] */;
  (%143,)
}

def @func_10196(%var_10158: Tensor[(4, 10, 3), float32], %var_10177: Tensor[(14, 5), int32], %var_10183: Tensor[(160), bool], %var_10184: Tensor[(768), float32]) -> (Tensor[(4, 10, 3), int64], Tensor[(4, 10, 1), float64], Tensor[(14, 5), int32], Tensor[(4, 10, 4), float64], Tensor[(768), float32], Tensor[(4, 10, 160), bool]) {
  %144 = @func_9462() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) */;
  %145 = %144.0;
  %146 = cast(%145, dtype="int64") /* ty=Tensor[(4, 10, 1), int64] */;
  %147 = cast(%var_10158, dtype="int64") /* ty=Tensor[(4, 10, 3), int64] */;
  %148 = cast(%var_10177, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
  %149 = reshape(%148, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %150 = @func_7285(%149) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
  %151 = cast(%var_10183, dtype="bool") /* ty=Tensor[(160), bool] */;
  %152 = cast(%var_10184, dtype="float32") /* ty=Tensor[(768), float32] */;
  %153 = reshape(%151, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %154 = reshape(%152, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %155 = @func_9403(%153, %154) /* ty=(Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) */;
  %156 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %157 = cast(%var_10183, dtype="bool") /* ty=Tensor[(160), bool] */;
  %158 = cast(%156, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %159 = logical_xor(%146, %147) /* ty=Tensor[(4, 10, 3), int64] */;
  %160 = %150.0;
  %161 = %155.1;
  %162 = logical_or(%157, %158) /* ty=Tensor[(4, 10, 160), bool] */;
  (%159, %160, %var_10177, %161, %var_10184, %162)
}

def @func_9233() -> (Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) {
  %163 = @func_8385() /* ty=Tensor[(4, 10, 1), float32] */;
  %164 = cast(%163, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %167 = cast(%163, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %168 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %169 = not_equal(%164, %165) /* ty=Tensor[(4, 10, 4), bool] */;
  %170 = equal(%166, %167) /* ty=Tensor[(4, 10, 4), bool] */;
  %171 = %168.2;
  (%169, %170, %171)
}

def @func_1121(%var_1108: Tensor[(8, 2, 10), float32]) -> Tensor[(8, 2, 10), bool] {
  %172 = cast(%var_1108, dtype="float32") /* ty=Tensor[(8, 2, 10), float32] */;
  %173 = atan(%172) /* ty=Tensor[(8, 2, 10), float32] */;
  %174 = cast(%var_1108, dtype="bool") /* ty=Tensor[(8, 2, 10), bool] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="bool") /* ty=Tensor[(8, 2, 10), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%176, %177) /* ty=Tensor[(8, 2, 10), bool] */
}

def @func_4448(%var_4442: Tensor[(7, 5, 11), uint64]) -> Tensor[(7, 5, 11), uint64] {
  %178 = cast(%var_4442, dtype="uint64") /* ty=Tensor[(7, 5, 11), uint64] */;
  %179 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(7, 5, 11), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 5, 11), uint64] */, dtype="uint64") /* ty=Tensor[(7, 5, 11), uint64] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%180, %181) /* ty=Tensor[(7, 5, 11), uint64] */
}

def @func_994(%var_981: Tensor[(6, 8, 12), int8], %var_982: Tensor[(6, 8, 12), int8]) -> (Tensor[(6, 8, 12), int8],) {
  %182 = cast(%var_982, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %183 = shape_of(%var_981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_981, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %186 = add(%184, %185) /* ty=Tensor[(6, 8, 12), int8] */;
  (%186,)
}

def @func_9082() -> Tensor[(4, 10, 1), float32] {
  @func_8668() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_8646(%var_8624: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(4, 10, 15), float64]) {
  %187 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %189 = cast(%var_8624, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
  %190 = cast(%var_8624, dtype="float64") /* ty=Tensor[(4, 10, 15), float64] */;
  %191 = floor_mod(%188, %189) /* ty=Tensor[(4, 10, 15), float32] */;
  %192 = cosh(%190) /* ty=Tensor[(4, 10, 15), float64] */;
  (%191, %192)
}

def @func_3714(%var_3658: Tensor[(9, 3, 7), float32], %var_3689: Tensor[(2, 56), float64]) -> (Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) {
  %193 = cast(%var_3658, dtype="float32") /* ty=Tensor[(9, 3, 7), float32] */;
  %194 = cast(%var_3689, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
  %195 = cast(%var_3689, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
  %196 = reshape(%194, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %197 = reshape(%195, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %198 = cast(%var_3689, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
  %199 = sqrt(%193) /* ty=Tensor[(9, 3, 7), float32] */;
  %200 = @func_2392(%196, %197) /* ty=Tensor[(2, 14, 4), float64] */;
  %201 = cos(%198) /* ty=Tensor[(2, 56), float32] */;
  (%199, %200, %201)
}

def @func_5014(%var_4945: Tensor[(3, 8, 7), int64], %var_4967: Tensor[(288), float32], %var_4976: Tensor[(560), float64], %var_4977: Tensor[(432), float32], %var_4998: Tensor[(14), int32], %var_5012: Tensor[(385), uint64]) -> (Tensor[(3, 8, 7), bool], Tensor[(12, 4, 6), float32], Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(7, 16, 5), float64], Tensor[(560), float64], Tensor[(432), float32], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64]) {
  %202 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 8, 7), int64] */, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %203 = shape_of(%var_4945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%var_4945, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %206 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %207 = cast(9.9577f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %208 = cast(%var_4967, dtype="float32") /* ty=Tensor[(288), float32] */;
  %209 = reshape(%206, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %210 = reshape(%207, newshape=[]) /* ty=float32 */;
  %211 = reshape(%208, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %212 = @func_1888(%209, %210, %211) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
  %213 = cast(%var_4976, dtype="float64") /* ty=Tensor[(560), float64] */;
  %214 = cast(%var_4976, dtype="float64") /* ty=Tensor[(560), float64] */;
  %215 = cast(%var_4977, dtype="float32") /* ty=Tensor[(432), float32] */;
  %216 = reshape(%213, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float64] */;
  %217 = reshape(%214, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float64] */;
  %218 = reshape(%215, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %219 = @func_2164(%216, %217, %218) /* ty=(Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) */;
  %220 = cast(%var_4977, dtype="float32") /* ty=Tensor[(432), float32] */;
  %221 = cast(%var_4998, dtype="int32") /* ty=Tensor[(14), int32] */;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %223 = reshape(%221, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %224 = reshape(%222, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %225 = cast(%var_5012, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %226 = reshape(%225, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), uint64] */;
  %227 = greater(%204, %205) /* ty=Tensor[(3, 8, 7), bool] */;
  %228 = %212.6;
  %229 = %219.0;
  %230 = log2(%220) /* ty=Tensor[(432), float32] */;
  %231 = @func_527(%223, %224) /* ty=Tensor[(2, 7, 5), int32] */;
  %232 = @func_4448(%226) /* ty=Tensor[(7, 5, 11), uint64] */;
  (%227, %228, meta[relay.Constant][15] /* ty=Tensor[(70), int32] */, 9.9577f /* ty=float32 */, %var_4967, %229, %var_4976, %230, %231, %var_4998, %232, %var_5012)
}

def @func_8668() -> Tensor[(4, 10, 1), float32] {
  %233 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %233.0
}

def @func_9620() -> (Tensor[(4, 10, 1), float32],) {
  %234 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %235 = %234.0;
  (%235,)
}

def @func_6228(%var_6205: Tensor[(4, 13, 16), float32], %var_6222: Tensor[(528), float32]) -> (Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) {
  %236 = cast(%var_6222, dtype="float32") /* ty=Tensor[(528), float32] */;
  %237 = cast(meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %238 = reshape(%236, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %239 = reshape(%237, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %240 = @func_5405(%238, %239) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) */;
  %241 = cast(%var_6205, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %242 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %245 = power(%243, %244) /* ty=Tensor[(4, 13, 16), float32] */;
  %246 = cast(%245, dtype="uint32") /* ty=Tensor[(4, 13, 16), uint32] */;
  %247 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 16), float32] */, dtype="uint32") /* ty=Tensor[(4, 13, 16), uint32] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %250 = logical_xor(%248, %249) /* ty=Tensor[(4, 13, 16), uint32] */;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %252 = %240.0;
  %253 = asin(%251) /* ty=Tensor[(4, 13, 16), float32] */;
  (%252, %var_6222, meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, %253)
}

def @func_8560(%var_8539: Tensor[(528), float32], %var_8545: Tensor[(70), int32], %var_8546: float32) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), float64], Tensor[(528), float32], Tensor[(528), float32], Tensor[(112), float64], float32, Tensor[(70), int32], float32, Tensor[(288), float32]) {
  %254 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %255 = cast(%var_8539, dtype="float32") /* ty=Tensor[(528), float32] */;
  %256 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %257 = reshape(%255, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %258 = reshape(%256, newshape=[28, 4]) /* ty=Tensor[(28, 4), float64] */;
  %259 = @func_7497(%257, %258) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) */;
  %260 = cast(%var_8545, dtype="int32") /* ty=Tensor[(70), int32] */;
  %261 = cast(%var_8546, dtype="float32") /* ty=float32 */;
  %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %263 = reshape(%260, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %264 = reshape(%261, newshape=[]) /* ty=float32 */;
  %265 = reshape(%262, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %266 = @func_1888(%263, %264, %265) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
  %267 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %268 = %254.0;
  %269 = %259.2;
  %270 = %266.7;
  (%267, %268, %269, %var_8539, meta[relay.Constant][18] /* ty=Tensor[(112), float64] */, %270, %var_8545, %var_8546, meta[relay.Constant][19] /* ty=Tensor[(288), float32] */)
}

def @func_6306(%var_6270: Tensor[(6, 13, 9), float32], %var_6271: Tensor[(6, 13, 9), float32], %var_6291: Tensor[(3, 600), uint8], %var_6292: Tensor[(385), uint64], %var_6298: Tensor[(576), int8]) -> (Tensor[(6, 13, 9), bool], Tensor[(432), float32], Tensor[(385), uint64], Tensor[(2, 672), uint32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(3, 600), float64]) {
  %271 = cast(%var_6271, dtype="bool") /* ty=Tensor[(6, 13, 9), bool] */;
  %272 = shape_of(%var_6270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_6270, dtype="bool") /* ty=Tensor[(6, 13, 9), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(%var_6291, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
  %276 = cast(%var_6292, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %277 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 672), uint32] */, dtype="uint32") /* ty=Tensor[(2, 672), uint32] */;
  %278 = reshape(%275, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), uint8] */;
  %279 = reshape(%276, newshape=[385]) /* ty=Tensor[(385), uint64] */;
  %280 = reshape(%277, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %281 = @func_4773(%278, %279, %280) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
  %282 = cast(%var_6298, dtype="int8") /* ty=Tensor[(576), int8] */;
  %283 = cast(%var_6298, dtype="int8") /* ty=Tensor[(576), int8] */;
  %284 = reshape(%282, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %285 = reshape(%283, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %286 = @func_994(%284, %285) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %287 = cast(%var_6291, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
  %288 = less_equal(%273, %274) /* ty=Tensor[(6, 13, 9), bool] */;
  %289 = %281.3;
  %290 = %286.0;
  %291 = cos(%287) /* ty=Tensor[(3, 600), float64] */;
  (%288, %289, %var_6292, meta[relay.Constant][20] /* ty=Tensor[(2, 672), uint32] */, %290, %var_6298, %291)
}

def @func_8385() -> Tensor[(4, 10, 1), float32] {
  @func_7358() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9187(%var_9175: Tensor[(432), float32]) -> (Tensor[(8, 13, 9), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(4, 10, 1), float32]) {
  %292 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 9), float64] */;
  %293 = cast(%var_9175, dtype="float32") /* ty=Tensor[(432), float32] */;
  %294 = reshape(%293, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %295 = log2(%292) /* ty=Tensor[(8, 13, 9), float64] */;
  %296 = @func_30(%294) /* ty=Tensor[(9, 6, 8), float32] */;
  %297 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  (%295, %296, %var_9175, %297)
}

def @func_8260() -> (Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) {
  %298 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %299 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %300 = %298.2;
  (%299, %300)
}

def @func_9525(%var_9518: Tensor[(4, 40), float32]) -> (Tensor[(4, 312), bool], Tensor[(8, 2, 10), bool], Tensor[(4, 40), float32]) {
  %301 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %302 = %301.2;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(4, 312), float32] */;
  %304 = sigmoid(%303) /* ty=Tensor[(4, 312), float32] */;
  %305 = cast(%304, dtype="int32") /* ty=Tensor[(4, 312), int32] */;
  %306 = shape_of(%302, dtype="int32") /* ty=Tensor[(2), int32] */;
  %307 = cast(%302, dtype="int32") /* ty=Tensor[(4, 312), int32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %309 = right_shift(%307, %308) /* ty=Tensor[(4, 312), int32] */;
  %310 = cast(%309, dtype="bool") /* ty=Tensor[(4, 312), bool] */;
  %311 = shape_of(%304, dtype="int32") /* ty=Tensor[(2), int32] */;
  %312 = cast(%304, dtype="bool") /* ty=Tensor[(4, 312), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %314 = cast(%var_9518, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %315 = reshape(%314, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %316 = @func_7764(%315) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) */;
  %317 = less(%312, %313) /* ty=Tensor[(4, 312), bool] */;
  %318 = %316.1;
  (%317, %318, %var_9518)
}

def @func_311(%var_288: float32, %var_289: Tensor[(12, 4, 6), float32]) -> (Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) {
  %319 = cast(%var_288, dtype="float32") /* ty=float32 */;
  %320 = cast(%var_289, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
  %321 = cast(meta[relay.Constant][22] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %322 = reshape(%321, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %323 = @func_30(%322) /* ty=Tensor[(9, 6, 8), float32] */;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(9, 6, 8), float32] */;
  %325 = reshape(%324, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %326 = floor_divide(%319, %320) /* ty=Tensor[(12, 4, 6), float32] */;
  %327 = @func_30(%325) /* ty=Tensor[(9, 6, 8), float32] */;
  (%326, %323, meta[relay.Constant][22] /* ty=Tensor[(432), float32] */, %327)
}

def @func_2392(%var_2387: Tensor[(2, 14, 4), float64], %var_2388: Tensor[(2, 14, 4), float64]) -> Tensor[(2, 14, 4), float64] {
  %328 = cast(%var_2388, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
  %329 = shape_of(%var_2387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%var_2387, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%330, %331) /* ty=Tensor[(2, 14, 4), float64] */
}

def @func_7586() -> Tensor[(4, 10, 1), float32] {
  @func_7575() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9540() -> Tensor[(4, 10, 1), float32] {
  %332 = @func_8974() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %332.0
}

def @func_7764(%var_7755: Tensor[(160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) {
  %333 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %334 = cast(%var_7755, dtype="float32") /* ty=Tensor[(160), float32] */;
  %335 = reshape(%334, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), float32] */;
  %336 = %333.0;
  %337 = @func_1121(%335) /* ty=Tensor[(8, 2, 10), bool] */;
  (%336, %337, %var_7755)
}

def @func_10282() -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) {
  %338 = @func_9026() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) */;
  %339 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %340 = @func_9909() /* ty=(Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) */;
  %341 = %340.1;
  %342 = cast(%339, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
  %343 = cast(%341, dtype="float64") /* ty=Tensor[(528), float64] */;
  %344 = %338.1;
  %345 = floor_divide(%342, %343) /* ty=Tensor[(4, 10, 528), float64] */;
  (%344, %345)
}

def @func_8846() -> (Tensor[(4, 10, 2), int16],) {
  %346 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %347 = cast(%346, dtype="int16") /* ty=Tensor[(4, 10, 1), int16] */;
  %348 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 10, 2), float32] */, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
  %349 = left_shift(%347, %348) /* ty=Tensor[(4, 10, 2), int16] */;
  (%349,)
}

def @func_8812() -> Tensor[(4, 10, 1), float32] {
  @func_8385() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7600(%var_7594: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
  %350 = cast(%var_7594, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  sigmoid(%350) /* ty=Tensor[(12, 8, 8), float32] */
}

def @func_6825(%var_6813: int64) -> Tensor[(10, 6, 8), int64] {
  %351 = cast(%var_6813, dtype="int64") /* ty=int64 */;
  %352 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 6, 8), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 8), int64] */;
  maximum(%351, %352) /* ty=Tensor[(10, 6, 8), int64] */
}

def @func_8148() -> Tensor[(4, 10, 1), float32] {
  @func_7586() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9058() -> (Tensor[(7, 14, 7), float32], Tensor[(4, 10, 1), float32]) {
  %353 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
  %354 = @func_8573() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %355 = log10(%353) /* ty=Tensor[(7, 14, 7), float32] */;
  %356 = %354.0;
  (%355, %356)
}

def @func_7497(%var_7490: Tensor[(528), float32], %var_7491: Tensor[(28, 4), float64]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) {
  %357 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %358 = cast(%var_7490, dtype="float32") /* ty=Tensor[(528), float32] */;
  %359 = cast(%var_7491, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %360 = reshape(%358, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %361 = reshape(%359, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %362 = @func_5405(%360, %361) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) */;
  %363 = cast(%var_7491, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
  %364 = %357.0;
  %365 = %362.3;
  %366 = acos(%363) /* ty=Tensor[(28, 4), float32] */;
  (%364, %365, %var_7490, %366)
}

def @func_10066(%var_10058: Tensor[(4, 10, 1), float32]) -> Tensor[(4, 10, ?), float32] {
  %367 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %368 = cast(%var_10058, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%370, %371) /* ty=Tensor[(4, 10, ?), float32] */
}

def @func_8974() -> (Tensor[(4, 10, 1), float32],) {
  %372 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  (%372,)
}

def @func_7231(%var_7193: Tensor[(432), float32], %var_7207: Tensor[(189, 1), float32], %var_7208: Tensor[(112), float64], %var_7217: Tensor[(14), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 6, 8), float32], Tensor[(9, 3, 7), float32], Tensor[(112), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32], Tensor[(189, 432), float32]) {
  %373 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %374 = cast(%var_7193, dtype="float32") /* ty=Tensor[(432), float32] */;
  %375 = reshape(%374, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %376 = cast(%var_7207, dtype="float32") /* ty=Tensor[(189, 1), float32] */;
  %377 = cast(%var_7208, dtype="float64") /* ty=Tensor[(112), float64] */;
  %378 = reshape(%376, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float32] */;
  %379 = reshape(%377, newshape=[2, 56]) /* ty=Tensor[(2, 56), float64] */;
  %380 = @func_3714(%378, %379) /* ty=(Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) */;
  %381 = cast(%var_7217, dtype="int32") /* ty=Tensor[(14), int32] */;
  %382 = cast(meta[relay.Constant][26] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %383 = reshape(%381, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %384 = reshape(%382, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %385 = cast(%var_7193, dtype="float32") /* ty=Tensor[(432), float32] */;
  %386 = cast(%var_7207, dtype="float32") /* ty=Tensor[(189, 1), float32] */;
  %387 = %373.0;
  %388 = @func_30(%375) /* ty=Tensor[(9, 6, 8), float32] */;
  %389 = %380.0;
  %390 = @func_527(%383, %384) /* ty=Tensor[(2, 7, 5), int32] */;
  %391 = floor_mod(%385, %386) /* ty=Tensor[(189, 432), float32] */;
  (%387, %388, %389, %var_7208, %390, %var_7217, meta[relay.Constant][26] /* ty=Tensor[(70), int32] */, %391)
}

def @func_7553(%var_7551: Tensor[(528), int16]) -> (Tensor[(13, 8, 12), float64], Tensor[(16, 11, 3), bool], Tensor[(528), int16]) {
  %392 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %393 = cast(%var_7551, dtype="int16") /* ty=Tensor[(528), int16] */;
  %394 = cast(%var_7551, dtype="int16") /* ty=Tensor[(528), int16] */;
  %395 = reshape(%393, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), int16] */;
  %396 = reshape(%394, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), int16] */;
  %397 = @func_4617(%395, %396) /* ty=(Tensor[(16, 11, 3), bool],) */;
  %398 = %392.1;
  %399 = %397.0;
  (%398, %399, %var_7551)
}

def @func_8906(%var_8901: Tensor[(14, 4, 1), float32]) -> (Tensor[(14, 4, 1), float32],) {
  %400 = cast(%var_8901, dtype="float32") /* ty=Tensor[(14, 4, 1), float32] */;
  %401 = asin(%400) /* ty=Tensor[(14, 4, 1), float32] */;
  (%401,)
}

def @func_3781(%var_3774: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %402 = cast(%var_3774, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %403 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(7, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %406 = floor_divide(%404, %405) /* ty=Tensor[(7, 14, 10), float32] */;
  (%406,)
}

def @func_9310(%var_9300: Tensor[(4, 10, 4), float32], %var_9307: Tensor[(192), float64]) -> (Tensor[(4, 10, 4), bool], Tensor[(12, 2, 8), float64], Tensor[(192), float64]) {
  %407 = @func_8812() /* ty=Tensor[(4, 10, 1), float32] */;
  %408 = cast(%407, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %409 = cast(%var_9300, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %410 = cast(%var_9307, dtype="float64") /* ty=Tensor[(192), float64] */;
  %411 = cast(%var_9307, dtype="float64") /* ty=Tensor[(192), float64] */;
  %412 = reshape(%410, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %413 = reshape(%411, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %414 = @func_6440(%412, %413) /* ty=(Tensor[(12, 2, 8), float64],) */;
  %415 = less(%408, %409) /* ty=Tensor[(4, 10, 4), bool] */;
  %416 = %414.0;
  (%415, %416, %var_9307)
}

def @func_10321() -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 4), float32], Tensor[(160), bool]) {
  %417 = @func_9026() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) */;
  %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %419 = reshape(%418, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %420 = @func_9969(%419) /* ty=(Tensor[(4, 10, 4), float32],) */;
  %421 = %417.1;
  %422 = %420.0;
  (%421, %422, meta[relay.Constant][28] /* ty=Tensor[(160), bool] */)
}

def @func_7575() -> Tensor[(4, 10, 1), float32] {
  %423 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %423.0
}

def @func_9026() -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) {
  %424 = cast(meta[relay.Constant][29] /* ty=Tensor[(1800), float32] */, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %425 = reshape(%424, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
  %426 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  %427 = @func_8661(%425) /* ty=Tensor[(12, 15, 10), float32] */;
  (%426, %427, meta[relay.Constant][29] /* ty=Tensor[(1800), float32] */)
}

def @func_4158(%var_4134: Tensor[(9, 14, 4), bool]) -> (Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) {
  %428 = cast(meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %429 = reshape(%428, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %430 = cast(%var_4134, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %431 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(9, 14, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = logical_and(%432, %433) /* ty=Tensor[(9, 14, 4), bool] */;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %436 = asin(%435) /* ty=Tensor[(9, 14, 4), float32] */;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
  %438 = @func_30(%429) /* ty=Tensor[(9, 6, 8), float32] */;
  %439 = log(%437) /* ty=Tensor[(9, 14, 4), float64] */;
  (%438, meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, %439)
}

def @func_9403(%var_9367: Tensor[(4, 10, 4), bool], %var_9396: Tensor[(768), float32]) -> (Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) {
  %440 = @func_9233() /* ty=(Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) */;
  %441 = %440.1;
  %442 = cast(%var_9367, dtype="int32") /* ty=Tensor[(4, 10, 4), int32] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="int32") /* ty=Tensor[(4, 10, 4), int32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %446 = cast(%441, dtype="float64") /* ty=Tensor[(4, 10, 4), float64] */;
  %447 = cast(%var_9396, dtype="float32") /* ty=Tensor[(768), float32] */;
  %448 = reshape(%447, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
  %449 = bitwise_or(%444, %445) /* ty=Tensor[(4, 10, 4), int32] */;
  %450 = cosh(%446) /* ty=Tensor[(4, 10, 4), float64] */;
  %451 = @func_7600(%448) /* ty=Tensor[(12, 8, 8), float32] */;
  (%449, %450, %451, %var_9396)
}

def @func_10351() -> Tensor[(12, 15, 10), float32] {
  %452 = @func_10282() /* ty=(Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  cos(%454) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_3593(%var_3567: Tensor[(13, 8, 12), float64], %var_3590: Tensor[(14), int32], %var_3591: Tensor[(70), int32]) -> (Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) {
  %455 = cast(%var_3567, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
  %456 = tan(%455) /* ty=Tensor[(13, 8, 12), float64] */;
  %457 = cast(%var_3567, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = less(%459, %460) /* ty=Tensor[(13, 8, 12), bool] */;
  %462 = cast(%461, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
  %463 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%456, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %466 = cast(%var_3567, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
  %467 = cast(%var_3590, dtype="int32") /* ty=Tensor[(14), int32] */;
  %468 = cast(%var_3591, dtype="int32") /* ty=Tensor[(70), int32] */;
  %469 = reshape(%467, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %470 = reshape(%468, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %471 = multiply(%464, %465) /* ty=Tensor[(13, 8, 12), int32] */;
  %472 = cosh(%466) /* ty=Tensor[(13, 8, 12), float64] */;
  %473 = @func_527(%469, %470) /* ty=Tensor[(2, 7, 5), int32] */;
  (%471, %472, %473, %var_3590, %var_3591)
}

def @func_9909() -> (Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) {
  %474 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %475 = cast(meta[relay.Constant][32] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %476 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %477 = reshape(%475, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), float32] */;
  %478 = reshape(%476, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %479 = @func_6228(%477, %478) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) */;
  %480 = %474.2;
  %481 = %479.1;
  (%480, %481, meta[relay.Constant][32] /* ty=Tensor[(832), float32] */, meta[relay.Constant][33] /* ty=Tensor[(528), float32] */)
}

def @func_9284(%var_9281: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 14, 10), float32], Tensor[(980), float32]) {
  %482 = cast(%var_9281, dtype="float32") /* ty=Tensor[(980), float32] */;
  %483 = reshape(%482, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), float32] */;
  %484 = @func_3781(%483) /* ty=(Tensor[(7, 14, 10), float32],) */;
  %485 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  %486 = %484.0;
  (%485, %486, %var_9281)
}

def @func_9788(%var_9783: Tensor[(4, 208), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 13, 16), float32], Tensor[(4, 208), float32], Tensor[(4, 132), float32]) {
  %487 = cast(%var_9783, dtype="float32") /* ty=Tensor[(4, 208), float32] */;
  %488 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
  %489 = reshape(%487, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), float32] */;
  %490 = reshape(%488, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %491 = @func_6228(%489, %490) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) */;
  %492 = @func_9414() /* ty=Tensor[(4, 10, 1), float32] */;
  %493 = %491.3;
  (%492, %493, %var_9783, meta[relay.Constant][34] /* ty=Tensor[(4, 132), float32] */)
}

def @func_4081(%var_4057: int32, %var_4058: Tensor[(6, 16, 11), int32]) -> (Tensor[(6, 16, 11), bool],) {
  %494 = cast(%var_4057, dtype="bool") /* ty=bool */;
  %495 = cast(%var_4058, dtype="bool") /* ty=Tensor[(6, 16, 11), bool] */;
  %496 = less_equal(%494, %495) /* ty=Tensor[(6, 16, 11), bool] */;
  (%496,)
}

def @func_8235() -> Tensor[(13, 8, 12), float32] {
  %497 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  erf(%499) /* ty=Tensor[(13, 8, 12), float32] */
}

def @func_7427() -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) {
  %500 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 312), float64] */, dtype="float64") /* ty=Tensor[(4, 312), float64] */;
  %501 = cast(meta[relay.Constant][36] /* ty=Tensor[(14), int32] */, dtype="int32") /* ty=Tensor[(14), int32] */;
  %502 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 5), int32] */, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
  %503 = reshape(%500, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
  %504 = reshape(%501, newshape=[14]) /* ty=Tensor[(14), int32] */;
  %505 = reshape(%502, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %506 = @func_3593(%503, %504, %505) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
  %507 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %508 = %506.1;
  (%507, %508, meta[relay.Constant][35] /* ty=Tensor[(4, 312), float64] */, meta[relay.Constant][36] /* ty=Tensor[(14), int32] */, meta[relay.Constant][37] /* ty=Tensor[(14, 5), int32] */)
}

def @func_7177(%var_7161: Tensor[(70), int32], %var_7163: Tensor[(288), float32], %var_7169: Tensor[(1800), float64]) -> (Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) {
  %509 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %510 = cast(%var_7161, dtype="int32") /* ty=Tensor[(70), int32] */;
  %511 = cast(-7.619f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %512 = cast(%var_7163, dtype="float32") /* ty=Tensor[(288), float32] */;
  %513 = reshape(%510, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %514 = reshape(%511, newshape=[]) /* ty=float32 */;
  %515 = reshape(%512, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %516 = @func_1888(%513, %514, %515) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
  %517 = cast(%var_7169, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %518 = cast(%var_7169, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %519 = reshape(%517, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %520 = reshape(%518, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %521 = @func_2749(%519, %520) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
  %522 = %509.0;
  %523 = %516.7;
  %524 = %521.3;
  (%522, %523, %var_7161, -7.619f /* ty=float32 */, %var_7163, %524, %var_7169)
}

def @func_9462() -> (Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) {
  %525 = cast(meta[relay.Constant][38] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %526 = reshape(%525, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), bool] */;
  %527 = @func_2630(%526) /* ty=Tensor[(5, 2, 8), bool] */;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
  %529 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
  %530 = sqrt(%528) /* ty=Tensor[(5, 2, 8), float64] */;
  (%529, meta[relay.Constant][38] /* ty=Tensor[(80), bool] */, %530)
}

def @func_7858() -> (Tensor[(13, 8, 12), float64],) {
  %531 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %532 = %531.1;
  (%532,)
}

def @func_7285(%var_7277: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) {
  %533 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %534 = %533.0;
  %535 = cast(%534, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
  %536 = cast(%var_7277, dtype="int32") /* ty=Tensor[(70), int32] */;
  %537 = cast(meta[relay.Constant][39] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %538 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 300), float64] */, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %539 = reshape(%536, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %540 = reshape(%537, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %541 = reshape(%538, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %542 = @func_7177(%539, %540, %541) /* ty=(Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) */;
  %543 = log(%535) /* ty=Tensor[(4, 10, 1), float64] */;
  %544 = %542.0;
  (%543, %544, %var_7277, meta[relay.Constant][39] /* ty=Tensor[(288), float32] */, meta[relay.Constant][40] /* ty=Tensor[(6, 300), float64] */)
}

def @func_679(%var_641: Tensor[(7, 12, 16), uint32], %var_668: Tensor[(432), float32]) -> (Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) {
  %545 = cast(%var_641, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
  %546 = cast(%var_668, dtype="float32") /* ty=Tensor[(432), float32] */;
  %547 = reshape(%546, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %548 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 1, 16), uint32] */, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
  %549 = cast(%var_641, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
  %550 = greater(%548, %549) /* ty=Tensor[(7, 12, 16), bool] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(7, 12, 16), float64] */;
  %552 = log10(%545) /* ty=Tensor[(7, 12, 16), float32] */;
  %553 = @func_30(%547) /* ty=Tensor[(9, 6, 8), float32] */;
  %554 = erf(%551) /* ty=Tensor[(7, 12, 16), float64] */;
  (%552, %553, %var_668, %554)
}

def @func_527(%var_515: Tensor[(2, 7, 1), int32], %var_516: Tensor[(2, 7, 5), int32]) -> Tensor[(2, 7, 5), int32] {
  %555 = cast(%var_515, dtype="int32") /* ty=Tensor[(2, 7, 1), int32] */;
  %556 = cast(%var_516, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
  left_shift(%555, %556) /* ty=Tensor[(2, 7, 5), int32] */
}

def @func_7723() -> (Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) {
  %557 = cast(meta[relay.Constant][42] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %558 = reshape(%557, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %559 = @func_7285(%558) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
  %560 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %561 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  %562 = cast(%561, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %563 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%560, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %566 = %559.4;
  %567 = cast(%566, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %568 = cast(%566, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %569 = reshape(%567, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %570 = reshape(%568, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %571 = @func_2749(%569, %570) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
  %572 = less(%564, %565) /* ty=Tensor[(4, 10, ?), bool] */;
  %573 = %571.3;
  (%566, meta[relay.Constant][42] /* ty=Tensor[(70), int32] */, %572, %573)
}

def @func_8756(%var_8725: Tensor[(1800), uint8]) -> (Tensor[(4, 10, 1), float32], Tensor[(385), uint64], Tensor[(1800), uint8], Tensor[(385), uint64], Tensor[(1344), uint32], Tensor[(6, 8, 12), int8], Tensor[(72, 8), int8], Tensor[(4, 10, 1), float32]) {
  %574 = cast(%var_8725, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %575 = cast(meta[relay.Constant][43] /* ty=Tensor[(385), uint64] */, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %576 = cast(meta[relay.Constant][44] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %577 = reshape(%574, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), uint8] */;
  %578 = reshape(%575, newshape=[385]) /* ty=Tensor[(385), uint64] */;
  %579 = reshape(%576, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %580 = @func_4773(%577, %578, %579) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
  %581 = cast(meta[relay.Constant][45] /* ty=Tensor[(72, 8), int8] */, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
  %582 = cast(meta[relay.Constant][45] /* ty=Tensor[(72, 8), int8] */, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
  %583 = reshape(%581, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %584 = reshape(%582, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %585 = @func_994(%583, %584) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %586 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %587 = %580.2;
  %588 = %585.0;
  %589 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  (%586, %587, %var_8725, meta[relay.Constant][43] /* ty=Tensor[(385), uint64] */, meta[relay.Constant][44] /* ty=Tensor[(1344), uint32] */, %588, meta[relay.Constant][45] /* ty=Tensor[(72, 8), int8] */, %589)
}

def @func_8661(%var_8655: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
  %590 = cast(%var_8655, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  sqrt(%590) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_8429(%var_8404: Tensor[(7, 140), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) {
  %591 = cast(%var_8404, dtype="float32") /* ty=Tensor[(7, 140), float32] */;
  %592 = reshape(%591, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), float32] */;
  %593 = @func_3781(%592) /* ty=(Tensor[(7, 14, 10), float32],) */;
  %594 = cast(%var_8404, dtype="float32") /* ty=Tensor[(7, 140), float32] */;
  %595 = log10(%594) /* ty=Tensor[(7, 140), float32] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(7, 140), float64] */;
  %597 = tan(%596) /* ty=Tensor[(7, 140), float64] */;
  %598 = cast(%var_8404, dtype="bool") /* ty=Tensor[(7, 140), bool] */;
  %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(%597, dtype="bool") /* ty=Tensor[(7, 140), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %602 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %603 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %604 = %593.0;
  %605 = @func_8385() /* ty=Tensor[(4, 10, 1), float32] */;
  %606 = greater(%600, %601) /* ty=Tensor[(7, 140), bool] */;
  (%602, %603, %604, %605, %606)
}

def @func_7358() -> Tensor[(4, 10, 1), float32] {
  %607 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %607.0
}

def @func_9254() -> Tensor[(4, 10, 1), float32] {
  %608 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %608.0
}

def @func_7613() -> Tensor[(4, 10, 1), float32] {
  %609 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %609.0
}

def @func_7060() -> (Tensor[(4, 10, 1), float32],) {
  %610 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %611 = atanh(%610) /* ty=Tensor[(4, 10, 1), float32] */;
  (%611,)
}

def @func_4617(%var_4612: Tensor[(16, 11, 3), int16], %var_4613: Tensor[(16, 11, 3), int16]) -> (Tensor[(16, 11, 3), bool],) {
  %612 = cast(%var_4613, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %613 = shape_of(%var_4612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_4612, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %616 = less(%614, %615) /* ty=Tensor[(16, 11, 3), bool] */;
  (%616,)
}

def @func_8873(%var_8863: Tensor[(1872), int64]) -> (Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) {
  %617 = cast(%var_8863, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %618 = cast(meta[relay.Constant][47] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %619 = reshape(%617, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), int64] */;
  %620 = reshape(%618, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %621 = @func_6719(%619, %620) /* ty=(Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */;
  %622 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
  %623 = %621.1;
  (%622, %623, %var_8863, meta[relay.Constant][47] /* ty=Tensor[(576), int8] */)
}

def @func_7986(%var_7942: Tensor[(11, 9, 7), uint64], %var_7982: Tensor[(1248), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(24, 8), float64], Tensor[(11, 9, 7), float32], Tensor[(13, 8, 12), float64], Tensor[(1248), float64], Tensor[(7, 2), int32], Tensor[(70), int32]) {
  %624 = cast(meta[relay.Constant][48] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %625 = cast(meta[relay.Constant][48] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %626 = reshape(%624, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %627 = reshape(%625, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %628 = @func_6440(%626, %627) /* ty=(Tensor[(12, 2, 8), float64],) */;
  %629 = cast(%var_7942, dtype="bool") /* ty=Tensor[(11, 9, 7), bool] */;
  %630 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="bool") /* ty=Tensor[(11, 9, 7), bool] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %633 = less_equal(%631, %632) /* ty=Tensor[(11, 9, 7), bool] */;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(11, 9, 7), float32] */;
  %635 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="float32") /* ty=Tensor[(11, 9, 7), float32] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %638 = cast(%var_7982, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %639 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 2), int32] */, dtype="int32") /* ty=Tensor[(7, 2), int32] */;
  %640 = cast(meta[relay.Constant][51] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %641 = reshape(%638, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
  %642 = reshape(%639, newshape=[14]) /* ty=Tensor[(14), int32] */;
  %643 = reshape(%640, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %644 = @func_3593(%641, %642, %643) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
  %645 = %628.0;
  %646 = divide(%636, %637) /* ty=Tensor[(11, 9, 7), float32] */;
  %647 = %644.1;
  (%645, meta[relay.Constant][48] /* ty=Tensor[(24, 8), float64] */, %646, %647, %var_7982, meta[relay.Constant][50] /* ty=Tensor[(7, 2), int32] */, meta[relay.Constant][51] /* ty=Tensor[(70), int32] */)
}

def @func_2630(%var_2608: Tensor[(5, 2, 8), bool]) -> Tensor[(5, 2, 8), bool] {
  %648 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 2, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %649 = shape_of(%var_2608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_2608, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%650, %651) /* ty=Tensor[(5, 2, 8), bool] */
}

def @func_5550(%var_5525: Tensor[(9, 2, 8), float32]) -> (Tensor[(9, 2, 8), float32],) {
  %652 = cast(%var_5525, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %653 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(9, 2, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %656 = divide(%654, %655) /* ty=Tensor[(9, 2, 8), float32] */;
  (%656,)
}

def @func_3167(%var_3133: float32) -> (Tensor[(9, 6, 8), float32], Tensor[(1344), uint32], Tensor[(432), float32], Tensor[(9, 6, 8), float32], float32, Tensor[(288), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), int8]) {
  %657 = cast(meta[relay.Constant][54] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %658 = cast(meta[relay.Constant][55] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %659 = reshape(%657, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint32] */;
  %660 = reshape(%658, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %661 = @func_679(%659, %660) /* ty=(Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) */;
  %662 = cast(%var_3133, dtype="float32") /* ty=float32 */;
  %663 = cast(meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %664 = reshape(%662, newshape=[]) /* ty=float32 */;
  %665 = reshape(%663, newshape=[12, 4, 6]) /* ty=Tensor[(12, 4, 6), float32] */;
  %666 = @func_311(%664, %665) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) */;
  %667 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %668 = cosh(%667) /* ty=Tensor[(3, 14, 11), float32] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %670 = atan(%669) /* ty=Tensor[(3, 14, 11), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %672 = cast(%668, dtype="int8") /* ty=Tensor[(3, 14, 11), int8] */;
  %673 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%670, dtype="int8") /* ty=Tensor[(3, 14, 11), int8] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %676 = %661.1;
  %677 = %666.1;
  %678 = sinh(%671) /* ty=Tensor[(3, 14, 11), float64] */;
  %679 = left_shift(%674, %675) /* ty=Tensor[(3, 14, 11), int8] */;
  (%676, meta[relay.Constant][54] /* ty=Tensor[(1344), uint32] */, meta[relay.Constant][55] /* ty=Tensor[(432), float32] */, %677, %var_3133, meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, %678, %679)
}

def @func_3541(%var_3517: Tensor[(9, 1, 11), float64], %var_3522: Tensor[(1344), uint32], %var_3523: Tensor[(432), float32]) -> (Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
  %680 = cast(-3.52618f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %681 = cast(%var_3517, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %682 = cast(%var_3522, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %683 = cast(%var_3523, dtype="float32") /* ty=Tensor[(432), float32] */;
  %684 = reshape(%682, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint32] */;
  %685 = reshape(%683, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %686 = @func_679(%684, %685) /* ty=(Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) */;
  %687 = subtract(%680, %681) /* ty=Tensor[(9, 1, 11), float64] */;
  %688 = %686.3;
  (%687, %688, %var_3522, %var_3523)
}

def @func_8067(%var_8013: Tensor[(1, 112), float64], %var_8050: Tensor[(576), int8]) -> (Tensor[(14, 5), int32], Tensor[(10, 6, 8), int64], int64, Tensor[(2, 14, 4), float64], Tensor[(1, 112), float64], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8], Tensor[(189), float32], Tensor[(70), int32]) {
  %689 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %690 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %691 = reshape(%690, newshape=[]) /* ty=int64 */;
  %692 = cast(meta[relay.Constant][58] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %693 = cast(%var_8013, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %694 = reshape(%692, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float32] */;
  %695 = reshape(%693, newshape=[2, 56]) /* ty=Tensor[(2, 56), float64] */;
  %696 = @func_3714(%694, %695) /* ty=(Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) */;
  %697 = cast(meta[relay.Constant][59] /* ty=Tensor[(1872), int64] */, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %698 = cast(%var_8050, dtype="int8") /* ty=Tensor[(576), int8] */;
  %699 = reshape(%697, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), int64] */;
  %700 = reshape(%698, newshape=[576]) /* ty=Tensor[(576), int8] */;
  %701 = @func_6719(%699, %700) /* ty=(Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */;
  %702 = cast(meta[relay.Constant][58] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %703 = tan(%702) /* ty=Tensor[(189), float32] */;
  %704 = cast(%703, dtype="float64") /* ty=Tensor[(189), float64] */;
  %705 = log(%704) /* ty=Tensor[(189), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(189), float32] */;
  %707 = %689.4;
  %708 = cast(%707, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
  %709 = reshape(%708, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %710 = @func_7285(%709) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
  %711 = @func_6825(%691) /* ty=Tensor[(10, 6, 8), int64] */;
  %712 = %696.1;
  %713 = %701.1;
  %714 = asinh(%706) /* ty=Tensor[(189), float32] */;
  %715 = %710.2;
  (%707, %711, 6 /* ty=int64 */, %712, %var_8013, %713, meta[relay.Constant][59] /* ty=Tensor[(1872), int64] */, %var_8050, %714, %715)
}

def @func_5405(%var_5392: Tensor[(11, 12, 4), float32], %var_5396: Tensor[(112), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) {
  %716 = cast(%var_5392, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  %717 = cast(%var_5396, dtype="float64") /* ty=Tensor[(112), float64] */;
  %718 = cast(%var_5396, dtype="float64") /* ty=Tensor[(112), float64] */;
  %719 = reshape(%717, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %720 = reshape(%718, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %721 = cast(meta[relay.Constant][60] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %722 = reshape(%721, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), bool] */;
  %723 = @func_4158(%722) /* ty=(Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) */;
  %724 = asin(%716) /* ty=Tensor[(11, 12, 4), float32] */;
  %725 = @func_2392(%719, %720) /* ty=Tensor[(2, 14, 4), float64] */;
  %726 = %723.2;
  (%724, %725, %var_5396, %726, meta[relay.Constant][60] /* ty=Tensor[(504), bool] */)
}

def @func_2164(%var_2131: Tensor[(7, 16, 5), float64], %var_2132: Tensor[(7, 16, 5), float64], %var_2140: Tensor[(432), float32]) -> (Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) {
  %727 = cast(%var_2132, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %728 = shape_of(%var_2131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_2131, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %731 = cast(%var_2140, dtype="float32") /* ty=Tensor[(432), float32] */;
  %732 = reshape(%731, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %733 = cast(%var_2131, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %734 = divide(%729, %730) /* ty=Tensor[(7, 16, 5), float64] */;
  %735 = @func_30(%732) /* ty=Tensor[(9, 6, 8), float32] */;
  %736 = erf(%733) /* ty=Tensor[(7, 16, 5), float64] */;
  (%734, %735, %var_2140, %736)
}

def @func_9112(%var_9085: Tensor[(9, 15, 3), bool], %var_9086: Tensor[(9, 15, 3), bool]) -> (Tensor[(9, 15, 3), int16], Tensor[(9, 15, 3), bool], Tensor[(9, 2, 8), float32], Tensor[(144), float32]) {
  %737 = cast(%var_9086, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %738 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_9085, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = logical_and(%739, %740) /* ty=Tensor[(9, 15, 3), bool] */;
  %742 = cast(%741, dtype="int16") /* ty=Tensor[(9, 15, 3), int16] */;
  %743 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_9085, dtype="int16") /* ty=Tensor[(9, 15, 3), int16] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %746 = cast(%741, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %747 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_9085, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = cast(meta[relay.Constant][61] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %751 = reshape(%750, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float32] */;
  %752 = @func_5550(%751) /* ty=(Tensor[(9, 2, 8), float32],) */;
  %753 = multiply(%744, %745) /* ty=Tensor[(9, 15, 3), int16] */;
  %754 = logical_or(%748, %749) /* ty=Tensor[(9, 15, 3), bool] */;
  %755 = %752.0;
  (%753, %754, %755, meta[relay.Constant][61] /* ty=Tensor[(144), float32] */)
}

def @func_2749(%var_2729: Tensor[(12, 15, 10), float64], %var_2730: Tensor[(12, 15, 10), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) {
  %756 = cast(meta[relay.Constant][62] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %757 = cast(meta[relay.Constant][62] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %758 = reshape(%756, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %759 = reshape(%757, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %760 = cast(%var_2730, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %761 = shape_of(%var_2729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_2729, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %764 = floor_mod(%762, %763) /* ty=Tensor[(12, 15, 10), float64] */;
  %765 = cast(%var_2730, dtype="bool") /* ty=Tensor[(12, 15, 10), bool] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="bool") /* ty=Tensor[(12, 15, 10), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = cast(%var_2729, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %770 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%764, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %773 = @func_2392(%758, %759) /* ty=Tensor[(2, 14, 4), float64] */;
  %774 = equal(%767, %768) /* ty=Tensor[(12, 15, 10), bool] */;
  %775 = logical_xor(%771, %772) /* ty=Tensor[(12, 15, 10), uint16] */;
  (%773, meta[relay.Constant][62] /* ty=Tensor[(112), float64] */, %774, %775)
}

def @func_9969(%var_9940: Tensor[(4, 10, 4), bool]) -> (Tensor[(4, 10, 4), float32],) {
  %776 = @func_9233() /* ty=(Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) */;
  %777 = %776.1;
  %778 = cast(%var_9940, dtype="uint32") /* ty=Tensor[(4, 10, 4), uint32] */;
  %779 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%777, dtype="uint32") /* ty=Tensor[(4, 10, 4), uint32] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %782 = maximum(%780, %781) /* ty=Tensor[(4, 10, 4), uint32] */;
  %783 = cast(%var_9940, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %787 = divide(%785, %786) /* ty=Tensor[(4, 10, 4), float32] */;
  (%787,)
}

def @func_7378(%var_7376: Tensor[(1, 160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(1, 160), float32]) {
  %788 = cast(%var_7376, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
  %789 = reshape(%788, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), float32] */;
  %790 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %791 = @func_1121(%789) /* ty=Tensor[(8, 2, 10), bool] */;
  (%790, %791, %var_7376)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2630(%var_2608: Tensor[(5, 2, 8), bool]) -> Tensor[(5, 2, 8), bool] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 2, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %1 = shape_of(%var_2608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_2608, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%2, %3) /* ty=Tensor[(5, 2, 8), bool] */
}

def @func_2395(%var_2393: Tensor[(2, 14, 4), float64], %var_2394: Tensor[(2, 14, 4), float64]) -> Tensor[(2, 14, 4), float64] {
  %8 = fn (%var_2387: Tensor[(2, 14, 4), float64], %var_2388: Tensor[(2, 14, 4), float64]) -> Tensor[(2, 14, 4), float64] {
    %4 = cast(%var_2388, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
    %5 = shape_of(%var_2387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %6 = cast(%var_2387, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
    %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%6, %7) /* ty=Tensor[(2, 14, 4), float64] */
  };
  %8(%var_2393, %var_2394) /* ty=Tensor[(2, 14, 4), float64] */
}

def @func_6312(%var_6307: Tensor[(6, 13, 9), float32], %var_6308: Tensor[(6, 13, 9), float32], %var_6309: Tensor[(3, 600), uint8], %var_6310: Tensor[(385), uint64], %var_6311: Tensor[(576), int8]) -> (Tensor[(6, 13, 9), bool], Tensor[(432), float32], Tensor[(385), uint64], Tensor[(2, 672), uint32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(3, 600), float64]) {
  %30 = fn (%var_6270: Tensor[(6, 13, 9), float32], %var_6271: Tensor[(6, 13, 9), float32], %var_6291: Tensor[(3, 600), uint8], %var_6292: Tensor[(385), uint64], %var_6298: Tensor[(576), int8]) -> (Tensor[(6, 13, 9), bool], Tensor[(432), float32], Tensor[(385), uint64], Tensor[(2, 672), uint32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(3, 600), float64]) {
    %9 = cast(%var_6271, dtype="bool") /* ty=Tensor[(6, 13, 9), bool] */;
    %10 = shape_of(%var_6270, dtype="int32") /* ty=Tensor[(3), int32] */;
    %11 = cast(%var_6270, dtype="bool") /* ty=Tensor[(6, 13, 9), bool] */;
    %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %13 = cast(%var_6291, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
    %14 = cast(%var_6292, dtype="uint64") /* ty=Tensor[(385), uint64] */;
    %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 672), uint32] */, dtype="uint32") /* ty=Tensor[(2, 672), uint32] */;
    %16 = reshape(%13, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), uint8] */;
    %17 = reshape(%14, newshape=[385]) /* ty=Tensor[(385), uint64] */;
    %18 = reshape(%15, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
    %19 = @func_4773(%16, %17, %18) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
    %20 = cast(%var_6298, dtype="int8") /* ty=Tensor[(576), int8] */;
    %21 = cast(%var_6298, dtype="int8") /* ty=Tensor[(576), int8] */;
    %22 = reshape(%20, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
    %23 = reshape(%21, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
    %24 = @func_994(%22, %23) /* ty=(Tensor[(6, 8, 12), int8],) */;
    %25 = cast(%var_6291, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
    %26 = less_equal(%11, %12) /* ty=Tensor[(6, 13, 9), bool] */;
    %27 = %19.3;
    %28 = %24.0;
    %29 = cos(%25) /* ty=Tensor[(3, 600), float64] */;
    (%26, %27, %var_6292, meta[relay.Constant][1] /* ty=Tensor[(2, 672), uint32] */, %28, %var_6298, %29)
  };
  %30(%var_6307, %var_6308, %var_6309, %var_6310, %var_6311) /* ty=(Tensor[(6, 13, 9), bool], Tensor[(432), float32], Tensor[(385), uint64], Tensor[(2, 672), uint32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(3, 600), float64]) */
}

def @func_314(%var_312: float32, %var_313: Tensor[(12, 4, 6), float32]) -> (Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) {
  %40 = fn (%var_288: float32, %var_289: Tensor[(12, 4, 6), float32]) -> (Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) {
    %31 = cast(%var_288, dtype="float32") /* ty=float32 */;
    %32 = cast(%var_289, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %34 = reshape(%33, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
    %35 = @func_30(%34) /* ty=Tensor[(9, 6, 8), float32] */;
    %36 = cast(%35, dtype="float32") /* ty=Tensor[(9, 6, 8), float32] */;
    %37 = reshape(%36, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
    %38 = floor_divide(%31, %32) /* ty=Tensor[(12, 4, 6), float32] */;
    %39 = @func_30(%37) /* ty=Tensor[(9, 6, 8), float32] */;
    (%38, %35, meta[relay.Constant][2] /* ty=Tensor[(432), float32] */, %39)
  };
  %40(%var_312, %var_313) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) */
}

def @func_8575() -> (Tensor[(4, 10, 1), float32],) {
  @func_8573() /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_1893(%var_1890: Tensor[(70), int32], %var_1891: float32, %var_1892: Tensor[(4, 72), float32]) -> (Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) {
  @func_1888(%var_1890, %var_1891, %var_1892) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */
}

def @func_8814() -> Tensor[(4, 10, 1), float32] {
  @func_8812() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7577() -> Tensor[(4, 10, 1), float32] {
  @func_7575() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_8471() -> (Tensor[(4, 10, 1), float32],) {
  %42 = fn () -> (Tensor[(4, 10, 1), float32],) {
    %41 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
    (%41,)
  };
  %42() /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_10068(%var_10067: Tensor[(4, 10, 1), float32]) -> Tensor[(4, 10, ?), float32] {
  %48 = fn (%var_10058: Tensor[(4, 10, 1), float32]) -> Tensor[(4, 10, ?), float32] {
    %43 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
    %44 = cast(%var_10058, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
    %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(%43, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%46, %47) /* ty=Tensor[(4, 10, ?), float32] */
  };
  %48(%var_10067) /* ty=Tensor[(4, 10, ?), float32] */
}

def @func_8565(%var_8562: Tensor[(528), float32], %var_8563: Tensor[(70), int32], %var_8564: float32) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), float64], Tensor[(528), float32], Tensor[(528), float32], Tensor[(112), float64], float32, Tensor[(70), int32], float32, Tensor[(288), float32]) {
  @func_8560(%var_8562, %var_8563, %var_8564) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), float64], Tensor[(528), float32], Tensor[(528), float32], Tensor[(112), float64], float32, Tensor[(70), int32], float32, Tensor[(288), float32]) */
}

def @func_8670() -> Tensor[(4, 10, 1), float32] {
  @func_8668() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_3170(%var_3168: float32) -> (Tensor[(9, 6, 8), float32], Tensor[(1344), uint32], Tensor[(432), float32], Tensor[(9, 6, 8), float32], float32, Tensor[(288), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), int8]) {
  @func_3167(%var_3168) /* ty=(Tensor[(9, 6, 8), float32], Tensor[(1344), uint32], Tensor[(432), float32], Tensor[(9, 6, 8), float32], float32, Tensor[(288), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), int8]) */
}

def @func_7725() -> (Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) {
  @func_7723() /* ty=(Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) */
}

def @func_8756(%var_8725: Tensor[(1800), uint8]) -> (Tensor[(4, 10, 1), float32], Tensor[(385), uint64], Tensor[(1800), uint8], Tensor[(385), uint64], Tensor[(1344), uint32], Tensor[(6, 8, 12), int8], Tensor[(72, 8), int8], Tensor[(4, 10, 1), float32]) {
  %49 = cast(%var_8725, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(385), uint64] */, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %52 = reshape(%49, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), uint8] */;
  %53 = reshape(%50, newshape=[385]) /* ty=Tensor[(385), uint64] */;
  %54 = reshape(%51, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %55 = @func_4773(%52, %53, %54) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
  %56 = cast(meta[relay.Constant][5] /* ty=Tensor[(72, 8), int8] */, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(72, 8), int8] */, dtype="int8") /* ty=Tensor[(72, 8), int8] */;
  %58 = reshape(%56, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %59 = reshape(%57, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %60 = @func_994(%58, %59) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %61 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %62 = %55.2;
  %63 = %60.0;
  %64 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  (%61, %62, %var_8725, meta[relay.Constant][3] /* ty=Tensor[(385), uint64] */, meta[relay.Constant][4] /* ty=Tensor[(1344), uint32] */, %63, meta[relay.Constant][5] /* ty=Tensor[(72, 8), int8] */, %64)
}

def @func_9286(%var_9285: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 14, 10), float32], Tensor[(980), float32]) {
  %70 = fn (%var_9281: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 14, 10), float32], Tensor[(980), float32]) {
    %65 = cast(%var_9281, dtype="float32") /* ty=Tensor[(980), float32] */;
    %66 = reshape(%65, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), float32] */;
    %67 = @func_3781(%66) /* ty=(Tensor[(7, 14, 10), float32],) */;
    %68 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
    %69 = %67.0;
    (%68, %69, %var_9281)
  };
  %70(%var_9285) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(7, 14, 10), float32], Tensor[(980), float32]) */
}

def @func_530(%var_528: Tensor[(2, 7, 1), int32], %var_529: Tensor[(2, 7, 5), int32]) -> Tensor[(2, 7, 5), int32] {
  %73 = fn (%var_515: Tensor[(2, 7, 1), int32], %var_516: Tensor[(2, 7, 5), int32]) -> Tensor[(2, 7, 5), int32] {
    %71 = cast(%var_515, dtype="int32") /* ty=Tensor[(2, 7, 1), int32] */;
    %72 = cast(%var_516, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
    left_shift(%71, %72) /* ty=Tensor[(2, 7, 5), int32] */
  };
  %73(%var_528, %var_529) /* ty=Tensor[(2, 7, 5), int32] */
}

def @func_9525(%var_9518: Tensor[(4, 40), float32]) -> (Tensor[(4, 312), bool], Tensor[(8, 2, 10), bool], Tensor[(4, 40), float32]) {
  %74 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %75 = %74.2;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(4, 312), float32] */;
  %77 = sigmoid(%76) /* ty=Tensor[(4, 312), float32] */;
  %78 = cast(%77, dtype="int32") /* ty=Tensor[(4, 312), int32] */;
  %79 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %80 = cast(%75, dtype="int32") /* ty=Tensor[(4, 312), int32] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %82 = right_shift(%80, %81) /* ty=Tensor[(4, 312), int32] */;
  %83 = cast(%82, dtype="bool") /* ty=Tensor[(4, 312), bool] */;
  %84 = shape_of(%77, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%77, dtype="bool") /* ty=Tensor[(4, 312), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %87 = cast(%var_9518, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %88 = reshape(%87, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %89 = @func_7764(%88) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) */;
  %90 = less(%85, %86) /* ty=Tensor[(4, 312), bool] */;
  %91 = %89.1;
  (%90, %91, %var_9518)
}

def @func_2749(%var_2729: Tensor[(12, 15, 10), float64], %var_2730: Tensor[(12, 15, 10), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) {
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %94 = reshape(%92, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %95 = reshape(%93, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
  %96 = cast(%var_2730, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %97 = shape_of(%var_2729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_2729, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %100 = floor_mod(%98, %99) /* ty=Tensor[(12, 15, 10), float64] */;
  %101 = cast(%var_2730, dtype="bool") /* ty=Tensor[(12, 15, 10), bool] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%100, dtype="bool") /* ty=Tensor[(12, 15, 10), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %105 = cast(%var_2729, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %106 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%100, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %109 = @func_2392(%94, %95) /* ty=Tensor[(2, 14, 4), float64] */;
  %110 = equal(%103, %104) /* ty=Tensor[(12, 15, 10), bool] */;
  %111 = logical_xor(%107, %108) /* ty=Tensor[(12, 15, 10), uint16] */;
  (%109, meta[relay.Constant][6] /* ty=Tensor[(112), float64] */, %110, %111)
}

def @func_8148() -> Tensor[(4, 10, 1), float32] {
  @func_7586() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_682(%var_680: Tensor[(7, 12, 16), uint32], %var_681: Tensor[(432), float32]) -> (Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) {
  %122 = fn (%var_641: Tensor[(7, 12, 16), uint32], %var_668: Tensor[(432), float32]) -> (Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) {
    %112 = cast(%var_641, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
    %113 = cast(%var_668, dtype="float32") /* ty=Tensor[(432), float32] */;
    %114 = reshape(%113, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
    %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 1, 16), uint32] */, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
    %116 = cast(%var_641, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
    %117 = greater(%115, %116) /* ty=Tensor[(7, 12, 16), bool] */;
    %118 = cast(%117, dtype="float64") /* ty=Tensor[(7, 12, 16), float64] */;
    %119 = log10(%112) /* ty=Tensor[(7, 12, 16), float32] */;
    %120 = @func_30(%114) /* ty=Tensor[(9, 6, 8), float32] */;
    %121 = erf(%118) /* ty=Tensor[(7, 12, 16), float64] */;
    (%119, %120, %var_668, %121)
  };
  %122(%var_680, %var_681) /* ty=(Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) */
}

def @func_7723() -> (Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) {
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %124 = reshape(%123, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %125 = @func_7285(%124) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
  %126 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %127 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
  %128 = cast(%127, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %129 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%126, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %132 = %125.4;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %134 = cast(%132, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %135 = reshape(%133, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %136 = reshape(%134, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %137 = @func_2749(%135, %136) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
  %138 = less(%130, %131) /* ty=Tensor[(4, 10, ?), bool] */;
  %139 = %137.3;
  (%132, meta[relay.Constant][8] /* ty=Tensor[(70), int32] */, %138, %139)
}

def @func_9310(%var_9300: Tensor[(4, 10, 4), float32], %var_9307: Tensor[(192), float64]) -> (Tensor[(4, 10, 4), bool], Tensor[(12, 2, 8), float64], Tensor[(192), float64]) {
  %140 = @func_8812() /* ty=Tensor[(4, 10, 1), float32] */;
  %141 = cast(%140, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %142 = cast(%var_9300, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %143 = cast(%var_9307, dtype="float64") /* ty=Tensor[(192), float64] */;
  %144 = cast(%var_9307, dtype="float64") /* ty=Tensor[(192), float64] */;
  %145 = reshape(%143, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %146 = reshape(%144, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %147 = @func_6440(%145, %146) /* ty=(Tensor[(12, 2, 8), float64],) */;
  %148 = less(%141, %142) /* ty=Tensor[(4, 10, 4), bool] */;
  %149 = %147.0;
  (%148, %149, %var_9307)
}

def @func_7586() -> Tensor[(4, 10, 1), float32] {
  @func_7575() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_8812() -> Tensor[(4, 10, 1), float32] {
  @func_8385() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9190(%var_9188: Tensor[(432), float32]) -> (Tensor[(8, 13, 9), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(4, 10, 1), float32]) {
  @func_9187(%var_9188) /* ty=(Tensor[(8, 13, 9), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(4, 10, 1), float32]) */
}

def @func_6232(%var_6230: Tensor[(4, 13, 16), float32], %var_6231: Tensor[(528), float32]) -> (Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) {
  @func_6228(%var_6230, %var_6231) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) */
}

def @func_9008(%var_9007: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool], Tensor[(980), float32], Tensor[(4, 10, 1), float32]) {
  %160 = fn (%var_9001: Tensor[(980), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool], Tensor[(980), float32], Tensor[(4, 10, 1), float32]) {
    %150 = @func_8336() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
    %151 = %150.0;
    %152 = cast(%151, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
    %153 = cast(%var_9001, dtype="float32") /* ty=Tensor[(980), float32] */;
    %154 = reshape(%153, newshape=[7, 140]) /* ty=Tensor[(7, 140), float32] */;
    %155 = @func_8429(%154) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) */;
    %156 = @func_8573() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %157 = cos(%152) /* ty=Tensor[(4, 10, 1), float32] */;
    %158 = %155.4;
    %159 = %156.0;
    (%157, %158, %var_9001, %159)
  };
  %160(%var_9007) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool], Tensor[(980), float32], Tensor[(4, 10, 1), float32]) */
}

def @func_8759(%var_8757: Tensor[(1800), uint8]) -> (Tensor[(4, 10, 1), float32], Tensor[(385), uint64], Tensor[(1800), uint8], Tensor[(385), uint64], Tensor[(1344), uint32], Tensor[(6, 8, 12), int8], Tensor[(72, 8), int8], Tensor[(4, 10, 1), float32]) {
  @func_8756(%var_8757) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(385), uint64], Tensor[(1800), uint8], Tensor[(385), uint64], Tensor[(1344), uint32], Tensor[(6, 8, 12), int8], Tensor[(72, 8), int8], Tensor[(4, 10, 1), float32]) */
}

def @func_8386() -> Tensor[(4, 10, 1), float32] {
  %161 = fn () -> Tensor[(4, 10, 1), float32] {
    @func_7358() /* ty=Tensor[(4, 10, 1), float32] */
  };
  %161() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_3717(%var_3715: Tensor[(9, 3, 7), float32], %var_3716: Tensor[(2, 56), float64]) -> (Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) {
  %171 = fn (%var_3658: Tensor[(9, 3, 7), float32], %var_3689: Tensor[(2, 56), float64]) -> (Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) {
    %162 = cast(%var_3658, dtype="float32") /* ty=Tensor[(9, 3, 7), float32] */;
    %163 = cast(%var_3689, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
    %164 = cast(%var_3689, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
    %165 = reshape(%163, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
    %166 = reshape(%164, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
    %167 = cast(%var_3689, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
    %168 = sqrt(%162) /* ty=Tensor[(9, 3, 7), float32] */;
    %169 = @func_2392(%165, %166) /* ty=Tensor[(2, 14, 4), float64] */;
    %170 = cos(%167) /* ty=Tensor[(2, 56), float32] */;
    (%168, %169, %170)
  };
  %171(%var_3715, %var_3716) /* ty=(Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) */
}

def @func_9254() -> Tensor[(4, 10, 1), float32] {
  %172 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %172.0
}

def @func_7472(%var_7471: Tensor[(2, 7, 1), float32]) -> (Tensor[(2, 7, 1), float64],) {
  %177 = fn (%var_7461: Tensor[(2, 7, 1), float32]) -> (Tensor[(2, 7, 1), float64],) {
    %173 = cast(%var_7461, dtype="float32") /* ty=Tensor[(2, 7, 1), float32] */;
    %174 = erf(%173) /* ty=Tensor[(2, 7, 1), float32] */;
    %175 = cast(%174, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
    %176 = sinh(%175) /* ty=Tensor[(2, 7, 1), float64] */;
    (%176,)
  };
  %177(%var_7471) /* ty=(Tensor[(2, 7, 1), float64],) */
}

def @func_9464() -> (Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) {
  @func_9462() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) */
}

def @func_9542() -> Tensor[(4, 10, 1), float32] {
  @func_9540() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_8875(%var_8874: Tensor[(1872), int64]) -> (Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) {
  %185 = fn (%var_8863: Tensor[(1872), int64]) -> (Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) {
    %178 = cast(%var_8863, dtype="int64") /* ty=Tensor[(1872), int64] */;
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
    %180 = reshape(%178, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), int64] */;
    %181 = reshape(%179, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %182 = @func_6719(%180, %181) /* ty=(Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */;
    %183 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
    %184 = %182.1;
    (%183, %184, %var_8863, meta[relay.Constant][9] /* ty=Tensor[(576), int8] */)
  };
  %185(%var_8874) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) */
}

def @func_8560(%var_8539: Tensor[(528), float32], %var_8545: Tensor[(70), int32], %var_8546: float32) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), float64], Tensor[(528), float32], Tensor[(528), float32], Tensor[(112), float64], float32, Tensor[(70), int32], float32, Tensor[(288), float32]) {
  %186 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %187 = cast(%var_8539, dtype="float32") /* ty=Tensor[(528), float32] */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %189 = reshape(%187, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %190 = reshape(%188, newshape=[28, 4]) /* ty=Tensor[(28, 4), float64] */;
  %191 = @func_7497(%189, %190) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) */;
  %192 = cast(%var_8545, dtype="int32") /* ty=Tensor[(70), int32] */;
  %193 = cast(%var_8546, dtype="float32") /* ty=float32 */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %195 = reshape(%192, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %196 = reshape(%193, newshape=[]) /* ty=float32 */;
  %197 = reshape(%194, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %198 = @func_1888(%195, %196, %197) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
  %199 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %200 = %186.0;
  %201 = %191.2;
  %202 = %198.7;
  (%199, %200, %201, %var_8539, meta[relay.Constant][10] /* ty=Tensor[(112), float64] */, %202, %var_8545, %var_8546, meta[relay.Constant][11] /* ty=Tensor[(288), float32] */)
}

def @func_9971(%var_9970: Tensor[(4, 10, 4), bool]) -> (Tensor[(4, 10, 4), float32],) {
  %215 = fn (%var_9940: Tensor[(4, 10, 4), bool]) -> (Tensor[(4, 10, 4), float32],) {
    %203 = @func_9233() /* ty=(Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) */;
    %204 = %203.1;
    %205 = cast(%var_9940, dtype="uint32") /* ty=Tensor[(4, 10, 4), uint32] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%204, dtype="uint32") /* ty=Tensor[(4, 10, 4), uint32] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %209 = maximum(%207, %208) /* ty=Tensor[(4, 10, 4), uint32] */;
    %210 = cast(%var_9940, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
    %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %212 = cast(%209, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
    %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %214 = divide(%212, %213) /* ty=Tensor[(4, 10, 4), float32] */;
    (%214,)
  };
  %215(%var_9970) /* ty=(Tensor[(4, 10, 4), float32],) */
}

def @func_2169(%var_2166: Tensor[(7, 16, 5), float64], %var_2167: Tensor[(7, 16, 5), float64], %var_2168: Tensor[(432), float32]) -> (Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) {
  @func_2164(%var_2166, %var_2167, %var_2168) /* ty=(Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) */
}

def @func_7575() -> Tensor[(4, 10, 1), float32] {
  %216 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %216.0
}

def @func_8236() -> Tensor[(13, 8, 12), float32] {
  %220 = fn () -> Tensor[(13, 8, 12), float32] {
    %217 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
    %218 = %217.0;
    %219 = cast(%218, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
    erf(%219) /* ty=Tensor[(13, 8, 12), float32] */
  };
  %220() /* ty=Tensor[(13, 8, 12), float32] */
}

def @func_4773(%var_4734: Tensor[(15, 12, 10), uint8], %var_4743: Tensor[(385), uint64], %var_4763: Tensor[(1344), uint32]) -> (Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
  %221 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %222 = cast(%var_4734, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %223 = cast(%var_4743, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %224 = reshape(%223, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), uint64] */;
  %225 = cast(meta[relay.Constant][13] /* ty=Tensor[(99, 1), float64] */, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %226 = cast(%var_4763, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %227 = cast(meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %228 = reshape(%225, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float64] */;
  %229 = reshape(%226, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %230 = reshape(%227, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %231 = @func_3541(%228, %229, %230) /* ty=(Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */;
  %232 = less_equal(%221, %222) /* ty=Tensor[(15, 12, 10), bool] */;
  %233 = @func_4448(%224) /* ty=Tensor[(7, 5, 11), uint64] */;
  %234 = %231.3;
  (%232, %233, %var_4743, %234, meta[relay.Constant][13] /* ty=Tensor[(99, 1), float64] */, %var_4763, meta[relay.Constant][14] /* ty=Tensor[(432), float32] */)
}

def @func_9621() -> (Tensor[(4, 10, 1), float32],) {
  %237 = fn () -> (Tensor[(4, 10, 1), float32],) {
    %235 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %236 = %235.0;
    (%236,)
  };
  %237() /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_5550(%var_5525: Tensor[(9, 2, 8), float32]) -> (Tensor[(9, 2, 8), float32],) {
  %238 = cast(%var_5525, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %239 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(9, 2, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %242 = divide(%240, %241) /* ty=Tensor[(9, 2, 8), float32] */;
  (%242,)
}

def @func_7285(%var_7277: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) {
  %243 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
  %246 = cast(%var_7277, dtype="int32") /* ty=Tensor[(70), int32] */;
  %247 = cast(meta[relay.Constant][16] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 300), float64] */, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %249 = reshape(%246, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %250 = reshape(%247, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %251 = reshape(%248, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %252 = @func_7177(%249, %250, %251) /* ty=(Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) */;
  %253 = log(%245) /* ty=Tensor[(4, 10, 1), float64] */;
  %254 = %252.0;
  (%253, %254, %var_7277, meta[relay.Constant][16] /* ty=Tensor[(288), float32] */, meta[relay.Constant][17] /* ty=Tensor[(6, 300), float64] */)
}

def @func_4448(%var_4442: Tensor[(7, 5, 11), uint64]) -> Tensor[(7, 5, 11), uint64] {
  %255 = cast(%var_4442, dtype="uint64") /* ty=Tensor[(7, 5, 11), uint64] */;
  %256 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(7, 5, 11), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 5, 11), uint64] */, dtype="uint64") /* ty=Tensor[(7, 5, 11), uint64] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%257, %258) /* ty=Tensor[(7, 5, 11), uint64] */
}

def @func_33(%var_31: Tensor[(9, 6, 8), float32]) -> Tensor[(9, 6, 8), float32] {
  @func_30(%var_31) /* ty=Tensor[(9, 6, 8), float32] */
}

def @func_8187() -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) {
  @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */
}

def @func_8432(%var_8430: Tensor[(7, 140), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) {
  @func_8429(%var_8430) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) */
}

def @func_7181(%var_7178: Tensor[(70), int32], %var_7179: Tensor[(288), float32], %var_7180: Tensor[(1800), float64]) -> (Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) {
  %275 = fn (%var_7161: Tensor[(70), int32], %var_7163: Tensor[(288), float32], %var_7169: Tensor[(1800), float64]) -> (Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) {
    %259 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %260 = cast(%var_7161, dtype="int32") /* ty=Tensor[(70), int32] */;
    %261 = cast(-7.619f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %262 = cast(%var_7163, dtype="float32") /* ty=Tensor[(288), float32] */;
    %263 = reshape(%260, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %264 = reshape(%261, newshape=[]) /* ty=float32 */;
    %265 = reshape(%262, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
    %266 = @func_1888(%263, %264, %265) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
    %267 = cast(%var_7169, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %268 = cast(%var_7169, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %269 = reshape(%267, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
    %270 = reshape(%268, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
    %271 = @func_2749(%269, %270) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
    %272 = %259.0;
    %273 = %266.7;
    %274 = %271.3;
    (%272, %273, %var_7161, -7.619f /* ty=float32 */, %var_7163, %274, %var_7169)
  };
  %275(%var_7178, %var_7179, %var_7180) /* ty=(Tensor[(4, 10, 1), float32], float32, Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(12, 15, 10), uint16], Tensor[(1800), float64]) */
}

def @func_6228(%var_6205: Tensor[(4, 13, 16), float32], %var_6222: Tensor[(528), float32]) -> (Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) {
  %276 = cast(%var_6222, dtype="float32") /* ty=Tensor[(528), float32] */;
  %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %278 = reshape(%276, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %279 = reshape(%277, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %280 = @func_5405(%278, %279) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) */;
  %281 = cast(%var_6205, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %282 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 13, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %285 = power(%283, %284) /* ty=Tensor[(4, 13, 16), float32] */;
  %286 = cast(%285, dtype="uint32") /* ty=Tensor[(4, 13, 16), uint32] */;
  %287 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 13, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 13, 16), float32] */, dtype="uint32") /* ty=Tensor[(4, 13, 16), uint32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %290 = logical_xor(%288, %289) /* ty=Tensor[(4, 13, 16), uint32] */;
  %291 = cast(%290, dtype="float32") /* ty=Tensor[(4, 13, 16), float32] */;
  %292 = %280.0;
  %293 = asin(%291) /* ty=Tensor[(4, 13, 16), float32] */;
  (%292, %var_6222, meta[relay.Constant][19] /* ty=Tensor[(112), float64] */, %293)
}

def @func_7360() -> Tensor[(4, 10, 1), float32] {
  @func_7358() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7288(%var_7286: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) {
  @func_7285(%var_7286) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */
}

def @func_8276() -> Tensor[(13, 8, 12), float32] {
  @func_8274() /* ty=Tensor[(13, 8, 12), float32] */
}

def @func_7859() -> (Tensor[(13, 8, 12), float64],) {
  %296 = fn () -> (Tensor[(13, 8, 12), float64],) {
    %294 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
    %295 = %294.1;
    (%295,)
  };
  %296() /* ty=(Tensor[(13, 8, 12), float64],) */
}

def @func_8646(%var_8624: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(4, 10, 15), float64]) {
  %297 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %299 = cast(%var_8624, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
  %300 = cast(%var_8624, dtype="float64") /* ty=Tensor[(4, 10, 15), float64] */;
  %301 = floor_mod(%298, %299) /* ty=Tensor[(4, 10, 15), float32] */;
  %302 = cosh(%300) /* ty=Tensor[(4, 10, 15), float64] */;
  (%301, %302)
}

def @func_8363(%var_8353: Tensor[(1248), float64], %var_8355: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), int32], Tensor[(1248), float64], Tensor[(14), int32], Tensor[(70), int32], Tensor[(4, 10, 1), float32]) {
  %303 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %305 = cast(%var_8353, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %306 = cast(meta[relay.Constant][21] /* ty=Tensor[(14), int32] */, dtype="int32") /* ty=Tensor[(14), int32] */;
  %307 = cast(%var_8355, dtype="int32") /* ty=Tensor[(70), int32] */;
  %308 = reshape(%305, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
  %309 = reshape(%306, newshape=[14]) /* ty=Tensor[(14), int32] */;
  %310 = reshape(%307, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %311 = @func_3593(%308, %309, %310) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
  %312 = @func_8260() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) */;
  %313 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
  %314 = asinh(%304) /* ty=Tensor[(4, 10, 1), float32] */;
  %315 = %311.0;
  %316 = %312.0;
  (%313, %314, %315, %var_8353, meta[relay.Constant][21] /* ty=Tensor[(14), int32] */, %var_8355, %316)
}

def @func_994(%var_981: Tensor[(6, 8, 12), int8], %var_982: Tensor[(6, 8, 12), int8]) -> (Tensor[(6, 8, 12), int8],) {
  %317 = cast(%var_982, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %318 = shape_of(%var_981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_981, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %321 = add(%319, %320) /* ty=Tensor[(6, 8, 12), int8] */;
  (%321,)
}

def @func_8847() -> (Tensor[(4, 10, 2), int16],) {
  %326 = fn () -> (Tensor[(4, 10, 2), int16],) {
    %322 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
    %323 = cast(%322, dtype="int16") /* ty=Tensor[(4, 10, 1), int16] */;
    %324 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 10, 2), float32] */, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
    %325 = left_shift(%323, %324) /* ty=Tensor[(4, 10, 2), int16] */;
    (%325,)
  };
  %326() /* ty=(Tensor[(4, 10, 2), int16],) */
}

def @func_8975() -> (Tensor[(4, 10, 1), float32],) {
  %328 = fn () -> (Tensor[(4, 10, 1), float32],) {
    %327 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
    (%327,)
  };
  %328() /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_3167(%var_3133: float32) -> (Tensor[(9, 6, 8), float32], Tensor[(1344), uint32], Tensor[(432), float32], Tensor[(9, 6, 8), float32], float32, Tensor[(288), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), int8]) {
  %329 = cast(meta[relay.Constant][23] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %330 = cast(meta[relay.Constant][24] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %331 = reshape(%329, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint32] */;
  %332 = reshape(%330, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %333 = @func_679(%331, %332) /* ty=(Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) */;
  %334 = cast(%var_3133, dtype="float32") /* ty=float32 */;
  %335 = cast(meta[relay.Constant][25] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %336 = reshape(%334, newshape=[]) /* ty=float32 */;
  %337 = reshape(%335, newshape=[12, 4, 6]) /* ty=Tensor[(12, 4, 6), float32] */;
  %338 = @func_311(%336, %337) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) */;
  %339 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %340 = cosh(%339) /* ty=Tensor[(3, 14, 11), float32] */;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %342 = atan(%341) /* ty=Tensor[(3, 14, 11), float32] */;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %344 = cast(%340, dtype="int8") /* ty=Tensor[(3, 14, 11), int8] */;
  %345 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%342, dtype="int8") /* ty=Tensor[(3, 14, 11), int8] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %348 = %333.1;
  %349 = %338.1;
  %350 = sinh(%343) /* ty=Tensor[(3, 14, 11), float64] */;
  %351 = left_shift(%346, %347) /* ty=Tensor[(3, 14, 11), int8] */;
  (%348, meta[relay.Constant][23] /* ty=Tensor[(1344), uint32] */, meta[relay.Constant][24] /* ty=Tensor[(432), float32] */, %349, %var_3133, meta[relay.Constant][25] /* ty=Tensor[(288), float32] */, %350, %351)
}

def @func_10283() -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) {
  %360 = fn () -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) {
    %352 = @func_9026() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) */;
    %353 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
    %354 = @func_9909() /* ty=(Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) */;
    %355 = %354.1;
    %356 = cast(%353, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
    %357 = cast(%355, dtype="float64") /* ty=Tensor[(528), float64] */;
    %358 = %352.1;
    %359 = floor_divide(%356, %357) /* ty=Tensor[(4, 10, 528), float64] */;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) */
}

def @func_8906(%var_8901: Tensor[(14, 4, 1), float32]) -> (Tensor[(14, 4, 1), float32],) {
  %361 = cast(%var_8901, dtype="float32") /* ty=Tensor[(14, 4, 1), float32] */;
  %362 = asin(%361) /* ty=Tensor[(14, 4, 1), float32] */;
  (%362,)
}

def @func_7989(%var_7987: Tensor[(11, 9, 7), uint64], %var_7988: Tensor[(1248), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(24, 8), float64], Tensor[(11, 9, 7), float32], Tensor[(13, 8, 12), float64], Tensor[(1248), float64], Tensor[(7, 2), int32], Tensor[(70), int32]) {
  %387 = fn (%var_7942: Tensor[(11, 9, 7), uint64], %var_7982: Tensor[(1248), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(24, 8), float64], Tensor[(11, 9, 7), float32], Tensor[(13, 8, 12), float64], Tensor[(1248), float64], Tensor[(7, 2), int32], Tensor[(70), int32]) {
    %363 = cast(meta[relay.Constant][27] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %364 = cast(meta[relay.Constant][27] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %365 = reshape(%363, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
    %366 = reshape(%364, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
    %367 = @func_6440(%365, %366) /* ty=(Tensor[(12, 2, 8), float64],) */;
    %368 = cast(%var_7942, dtype="bool") /* ty=Tensor[(11, 9, 7), bool] */;
    %369 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="bool") /* ty=Tensor[(11, 9, 7), bool] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %372 = less_equal(%370, %371) /* ty=Tensor[(11, 9, 7), bool] */;
    %373 = cast(%372, dtype="float32") /* ty=Tensor[(11, 9, 7), float32] */;
    %374 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %375 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 7), uint64] */, dtype="float32") /* ty=Tensor[(11, 9, 7), float32] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %377 = cast(%var_7982, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %378 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 2), int32] */, dtype="int32") /* ty=Tensor[(7, 2), int32] */;
    %379 = cast(meta[relay.Constant][30] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
    %380 = reshape(%377, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
    %381 = reshape(%378, newshape=[14]) /* ty=Tensor[(14), int32] */;
    %382 = reshape(%379, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %383 = @func_3593(%380, %381, %382) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
    %384 = %367.0;
    %385 = divide(%375, %376) /* ty=Tensor[(11, 9, 7), float32] */;
    %386 = %383.1;
    (%384, meta[relay.Constant][27] /* ty=Tensor[(24, 8), float64] */, %385, %386, %var_7982, meta[relay.Constant][29] /* ty=Tensor[(7, 2), int32] */, meta[relay.Constant][30] /* ty=Tensor[(70), int32] */)
  };
  %387(%var_7987, %var_7988) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(24, 8), float64], Tensor[(11, 9, 7), float32], Tensor[(13, 8, 12), float64], Tensor[(1248), float64], Tensor[(7, 2), int32], Tensor[(70), int32]) */
}

def @func_8070(%var_8068: Tensor[(1, 112), float64], %var_8069: Tensor[(576), int8]) -> (Tensor[(14, 5), int32], Tensor[(10, 6, 8), int64], int64, Tensor[(2, 14, 4), float64], Tensor[(1, 112), float64], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8], Tensor[(189), float32], Tensor[(70), int32]) {
  %415 = fn (%var_8013: Tensor[(1, 112), float64], %var_8050: Tensor[(576), int8]) -> (Tensor[(14, 5), int32], Tensor[(10, 6, 8), int64], int64, Tensor[(2, 14, 4), float64], Tensor[(1, 112), float64], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8], Tensor[(189), float32], Tensor[(70), int32]) {
    %388 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
    %389 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %390 = reshape(%389, newshape=[]) /* ty=int64 */;
    %391 = cast(meta[relay.Constant][31] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
    %392 = cast(%var_8013, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
    %393 = reshape(%391, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float32] */;
    %394 = reshape(%392, newshape=[2, 56]) /* ty=Tensor[(2, 56), float64] */;
    %395 = @func_3714(%393, %394) /* ty=(Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) */;
    %396 = cast(meta[relay.Constant][32] /* ty=Tensor[(1872), int64] */, dtype="int64") /* ty=Tensor[(1872), int64] */;
    %397 = cast(%var_8050, dtype="int8") /* ty=Tensor[(576), int8] */;
    %398 = reshape(%396, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), int64] */;
    %399 = reshape(%397, newshape=[576]) /* ty=Tensor[(576), int8] */;
    %400 = @func_6719(%398, %399) /* ty=(Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */;
    %401 = cast(meta[relay.Constant][31] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
    %402 = tan(%401) /* ty=Tensor[(189), float32] */;
    %403 = cast(%402, dtype="float64") /* ty=Tensor[(189), float64] */;
    %404 = log(%403) /* ty=Tensor[(189), float64] */;
    %405 = cast(%404, dtype="float32") /* ty=Tensor[(189), float32] */;
    %406 = %388.4;
    %407 = cast(%406, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
    %408 = reshape(%407, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %409 = @func_7285(%408) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
    %410 = @func_6825(%390) /* ty=Tensor[(10, 6, 8), int64] */;
    %411 = %395.1;
    %412 = %400.1;
    %413 = asinh(%405) /* ty=Tensor[(189), float32] */;
    %414 = %409.2;
    (%406, %410, 6 /* ty=int64 */, %411, %var_8013, %412, meta[relay.Constant][32] /* ty=Tensor[(1872), int64] */, %var_8050, %413, %414)
  };
  %415(%var_8068, %var_8069) /* ty=(Tensor[(14, 5), int32], Tensor[(10, 6, 8), int64], int64, Tensor[(2, 14, 4), float64], Tensor[(1, 112), float64], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8], Tensor[(189), float32], Tensor[(70), int32]) */
}

def @func_4085(%var_4083: int32, %var_4084: Tensor[(6, 16, 11), int32]) -> (Tensor[(6, 16, 11), bool],) {
  @func_4081(%var_4083, %var_4084) /* ty=(Tensor[(6, 16, 11), bool],) */
}

def @func_2164(%var_2131: Tensor[(7, 16, 5), float64], %var_2132: Tensor[(7, 16, 5), float64], %var_2140: Tensor[(432), float32]) -> (Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) {
  %416 = cast(%var_2132, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %417 = shape_of(%var_2131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%var_2131, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %420 = cast(%var_2140, dtype="float32") /* ty=Tensor[(432), float32] */;
  %421 = reshape(%420, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %422 = cast(%var_2131, dtype="float64") /* ty=Tensor[(7, 16, 5), float64] */;
  %423 = divide(%418, %419) /* ty=Tensor[(7, 16, 5), float64] */;
  %424 = @func_30(%421) /* ty=Tensor[(9, 6, 8), float32] */;
  %425 = erf(%422) /* ty=Tensor[(7, 16, 5), float64] */;
  (%423, %424, %var_2140, %425)
}

def @func_4617(%var_4612: Tensor[(16, 11, 3), int16], %var_4613: Tensor[(16, 11, 3), int16]) -> (Tensor[(16, 11, 3), bool],) {
  %426 = cast(%var_4613, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %427 = shape_of(%var_4612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%var_4612, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = less(%428, %429) /* ty=Tensor[(16, 11, 3), bool] */;
  (%430,)
}

def @func_9115(%var_9113: Tensor[(9, 15, 3), bool], %var_9114: Tensor[(9, 15, 3), bool]) -> (Tensor[(9, 15, 3), int16], Tensor[(9, 15, 3), bool], Tensor[(9, 2, 8), float32], Tensor[(144), float32]) {
  %450 = fn (%var_9085: Tensor[(9, 15, 3), bool], %var_9086: Tensor[(9, 15, 3), bool]) -> (Tensor[(9, 15, 3), int16], Tensor[(9, 15, 3), bool], Tensor[(9, 2, 8), float32], Tensor[(144), float32]) {
    %431 = cast(%var_9086, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
    %432 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%var_9085, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = logical_and(%433, %434) /* ty=Tensor[(9, 15, 3), bool] */;
    %436 = cast(%435, dtype="int16") /* ty=Tensor[(9, 15, 3), int16] */;
    %437 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
    %438 = cast(%var_9085, dtype="int16") /* ty=Tensor[(9, 15, 3), int16] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %440 = cast(%435, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
    %441 = shape_of(%var_9085, dtype="int32") /* ty=Tensor[(3), int32] */;
    %442 = cast(%var_9085, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %444 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %445 = reshape(%444, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float32] */;
    %446 = @func_5550(%445) /* ty=(Tensor[(9, 2, 8), float32],) */;
    %447 = multiply(%438, %439) /* ty=Tensor[(9, 15, 3), int16] */;
    %448 = logical_or(%442, %443) /* ty=Tensor[(9, 15, 3), bool] */;
    %449 = %446.0;
    (%447, %448, %449, meta[relay.Constant][33] /* ty=Tensor[(144), float32] */)
  };
  %450(%var_9113, %var_9114) /* ty=(Tensor[(9, 15, 3), int16], Tensor[(9, 15, 3), bool], Tensor[(9, 2, 8), float32], Tensor[(144), float32]) */
}

def @func_8668() -> Tensor[(4, 10, 1), float32] {
  %451 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %451.0
}

def @func_1888(%var_1864: Tensor[(70), int32], %var_1883: float32, %var_1884: Tensor[(4, 72), float32]) -> (Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) {
  %452 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 8), float64] */;
  %453 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 1), int32] */;
  %454 = cast(%var_1864, dtype="int32") /* ty=Tensor[(70), int32] */;
  %455 = reshape(%453, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %456 = reshape(%454, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %457 = cast(meta[relay.Constant][36] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %458 = cast(meta[relay.Constant][36] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
  %459 = reshape(%457, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %460 = reshape(%458, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %461 = @func_994(%459, %460) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %462 = cast(%var_1883, dtype="float32") /* ty=float32 */;
  %463 = cast(%var_1884, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %464 = reshape(%462, newshape=[]) /* ty=float32 */;
  %465 = reshape(%463, newshape=[12, 4, 6]) /* ty=Tensor[(12, 4, 6), float32] */;
  %466 = @func_311(%464, %465) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 6, 8), float32]) */;
  %467 = log10(%452) /* ty=Tensor[(8, 3, 8), float64] */;
  %468 = @func_527(%455, %456) /* ty=Tensor[(2, 7, 5), int32] */;
  %469 = %461.0;
  %470 = %466.0;
  (%467, %468, meta[relay.Constant][35] /* ty=Tensor[(14, 1), int32] */, %var_1864, %469, meta[relay.Constant][36] /* ty=Tensor[(576), int8] */, %470, %var_1883, %var_1884)
}

def @func_3597(%var_3594: Tensor[(13, 8, 12), float64], %var_3595: Tensor[(14), int32], %var_3596: Tensor[(70), int32]) -> (Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) {
  %490 = fn (%var_3567: Tensor[(13, 8, 12), float64], %var_3590: Tensor[(14), int32], %var_3591: Tensor[(70), int32]) -> (Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) {
    %471 = cast(%var_3567, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
    %472 = tan(%471) /* ty=Tensor[(13, 8, 12), float64] */;
    %473 = cast(%var_3567, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
    %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%472, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %477 = less(%475, %476) /* ty=Tensor[(13, 8, 12), bool] */;
    %478 = cast(%477, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
    %479 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%472, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %482 = cast(%var_3567, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
    %483 = cast(%var_3590, dtype="int32") /* ty=Tensor[(14), int32] */;
    %484 = cast(%var_3591, dtype="int32") /* ty=Tensor[(70), int32] */;
    %485 = reshape(%483, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
    %486 = reshape(%484, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
    %487 = multiply(%480, %481) /* ty=Tensor[(13, 8, 12), int32] */;
    %488 = cosh(%482) /* ty=Tensor[(13, 8, 12), float64] */;
    %489 = @func_527(%485, %486) /* ty=Tensor[(2, 7, 5), int32] */;
    (%487, %488, %489, %var_3590, %var_3591)
  };
  %490(%var_3594, %var_3595, %var_3596) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */
}

def @func_7555(%var_7554: Tensor[(528), int16]) -> (Tensor[(13, 8, 12), float64], Tensor[(16, 11, 3), bool], Tensor[(528), int16]) {
  %499 = fn (%var_7551: Tensor[(528), int16]) -> (Tensor[(13, 8, 12), float64], Tensor[(16, 11, 3), bool], Tensor[(528), int16]) {
    %491 = @func_7427() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
    %492 = cast(%var_7551, dtype="int16") /* ty=Tensor[(528), int16] */;
    %493 = cast(%var_7551, dtype="int16") /* ty=Tensor[(528), int16] */;
    %494 = reshape(%492, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), int16] */;
    %495 = reshape(%493, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), int16] */;
    %496 = @func_4617(%494, %495) /* ty=(Tensor[(16, 11, 3), bool],) */;
    %497 = %491.1;
    %498 = %496.0;
    (%497, %498, %var_7551)
  };
  %499(%var_7554) /* ty=(Tensor[(13, 8, 12), float64], Tensor[(16, 11, 3), bool], Tensor[(528), int16]) */
}

def @func_6719(%var_6687: Tensor[(13, 16, 9), int64], %var_6714: Tensor[(576), int8]) -> (Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
  %500 = cast(%var_6687, dtype="int64") /* ty=Tensor[(13, 16, 9), int64] */;
  %501 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(13, 16, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 16, 9), int64] */, dtype="int64") /* ty=Tensor[(13, 16, 9), int64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %504 = cast(%var_6714, dtype="int8") /* ty=Tensor[(576), int8] */;
  %505 = cast(%var_6714, dtype="int8") /* ty=Tensor[(576), int8] */;
  %506 = reshape(%504, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %507 = reshape(%505, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
  %508 = @func_994(%506, %507) /* ty=(Tensor[(6, 8, 12), int8],) */;
  %509 = minimum(%502, %503) /* ty=Tensor[(13, 16, 9), int64] */;
  %510 = %508.0;
  (%509, %510, %var_6714)
}

def @func_6723(%var_6721: Tensor[(13, 16, 9), int64], %var_6722: Tensor[(576), int8]) -> (Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
  @func_6719(%var_6721, %var_6722) /* ty=(Tensor[(13, 16, 9), int64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */
}

def @func_9059() -> (Tensor[(7, 14, 7), float32], Tensor[(4, 10, 1), float32]) {
  %515 = fn () -> (Tensor[(7, 14, 7), float32], Tensor[(4, 10, 1), float32]) {
    %511 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 7), float32] */;
    %512 = @func_8573() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %513 = log10(%511) /* ty=Tensor[(7, 14, 7), float32] */;
    %514 = %512.0;
    (%513, %514)
  };
  %515() /* ty=(Tensor[(7, 14, 7), float32], Tensor[(4, 10, 1), float32]) */
}

def @func_8261() -> (Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) {
  %519 = fn () -> (Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) {
    %516 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
    %517 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
    %518 = %516.2;
    (%517, %518)
  };
  %519() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) */
}

def @func_8367(%var_8365: Tensor[(1248), float64], %var_8366: Tensor[(70), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), int32], Tensor[(1248), float64], Tensor[(14), int32], Tensor[(70), int32], Tensor[(4, 10, 1), float32]) {
  @func_8363(%var_8365, %var_8366) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), int32], Tensor[(1248), float64], Tensor[(14), int32], Tensor[(70), int32], Tensor[(4, 10, 1), float32]) */
}

def @func_9235() -> (Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) {
  @func_9233() /* ty=(Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) */
}

def @func_30(%var_22: Tensor[(9, 6, 8), float32]) -> Tensor[(9, 6, 8), float32] {
  %520 = cast(%var_22, dtype="float32") /* ty=Tensor[(9, 6, 8), float32] */;
  log2(%520) /* ty=Tensor[(9, 6, 8), float32] */
}

def @func_9082() -> Tensor[(4, 10, 1), float32] {
  @func_8668() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_3784(%var_3782: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  @func_3781(%var_3782) /* ty=(Tensor[(7, 14, 10), float32],) */
}

def @func_4778(%var_4775: Tensor[(15, 12, 10), uint8], %var_4776: Tensor[(385), uint64], %var_4777: Tensor[(1344), uint32]) -> (Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
  @func_4773(%var_4775, %var_4776, %var_4777) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64], Tensor[(432), float32], Tensor[(99, 1), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */
}

def @func_8185() -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) {
  %521 = cast(meta[relay.Constant][39] /* ty=Tensor[(900, 2), float64] */, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %522 = cast(meta[relay.Constant][39] /* ty=Tensor[(900, 2), float64] */, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %523 = reshape(%521, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %524 = reshape(%522, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %525 = @func_2749(%523, %524) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */;
  %526 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %527 = %525.2;
  (%526, %527, meta[relay.Constant][39] /* ty=Tensor[(900, 2), float64] */)
}

def @func_4160(%var_4159: Tensor[(9, 14, 4), bool]) -> (Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) {
  %540 = fn (%var_4134: Tensor[(9, 14, 4), bool]) -> (Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) {
    %528 = cast(meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %529 = reshape(%528, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
    %530 = cast(%var_4134, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
    %531 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(9, 14, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %534 = logical_and(%532, %533) /* ty=Tensor[(9, 14, 4), bool] */;
    %535 = cast(%534, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
    %536 = asin(%535) /* ty=Tensor[(9, 14, 4), float32] */;
    %537 = cast(%536, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
    %538 = @func_30(%529) /* ty=Tensor[(9, 6, 8), float32] */;
    %539 = log(%537) /* ty=Tensor[(9, 14, 4), float64] */;
    (%538, meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, %539)
  };
  %540(%var_4159) /* ty=(Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) */
}

def @func_8649(%var_8647: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(4, 10, 15), float64]) {
  @func_8646(%var_8647) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(4, 10, 15), float64]) */
}

def @func_5022(%var_5016: Tensor[(3, 8, 7), int64], %var_5017: Tensor[(288), float32], %var_5018: Tensor[(560), float64], %var_5019: Tensor[(432), float32], %var_5020: Tensor[(14), int32], %var_5021: Tensor[(385), uint64]) -> (Tensor[(3, 8, 7), bool], Tensor[(12, 4, 6), float32], Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(7, 16, 5), float64], Tensor[(560), float64], Tensor[(432), float32], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64]) {
  @func_5014(%var_5016, %var_5017, %var_5018, %var_5019, %var_5020, %var_5021) /* ty=(Tensor[(3, 8, 7), bool], Tensor[(12, 4, 6), float32], Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(7, 16, 5), float64], Tensor[(560), float64], Tensor[(432), float32], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64]) */
}

def @func_7766(%var_7765: Tensor[(160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) {
  %546 = fn (%var_7755: Tensor[(160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) {
    %541 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %542 = cast(%var_7755, dtype="float32") /* ty=Tensor[(160), float32] */;
    %543 = reshape(%542, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), float32] */;
    %544 = %541.0;
    %545 = @func_1121(%543) /* ty=Tensor[(8, 2, 10), bool] */;
    (%544, %545, %var_7755)
  };
  %546(%var_7765) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(160), float32]) */
}

def @func_9790(%var_9789: Tensor[(4, 208), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 13, 16), float32], Tensor[(4, 208), float32], Tensor[(4, 132), float32]) {
  %554 = fn (%var_9783: Tensor[(4, 208), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 13, 16), float32], Tensor[(4, 208), float32], Tensor[(4, 132), float32]) {
    %547 = cast(%var_9783, dtype="float32") /* ty=Tensor[(4, 208), float32] */;
    %548 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
    %549 = reshape(%547, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), float32] */;
    %550 = reshape(%548, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %551 = @func_6228(%549, %550) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) */;
    %552 = @func_9414() /* ty=Tensor[(4, 10, 1), float32] */;
    %553 = %551.3;
    (%552, %553, %var_9783, meta[relay.Constant][42] /* ty=Tensor[(4, 132), float32] */)
  };
  %554(%var_9789) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(4, 13, 16), float32], Tensor[(4, 208), float32], Tensor[(4, 132), float32]) */
}

def @func_9187(%var_9175: Tensor[(432), float32]) -> (Tensor[(8, 13, 9), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(4, 10, 1), float32]) {
  %555 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 9), float64] */;
  %556 = cast(%var_9175, dtype="float32") /* ty=Tensor[(432), float32] */;
  %557 = reshape(%556, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
  %558 = log2(%555) /* ty=Tensor[(8, 13, 9), float64] */;
  %559 = @func_30(%557) /* ty=Tensor[(9, 6, 8), float32] */;
  %560 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  (%558, %559, %var_9175, %560)
}

def @main(%var_10443: Tensor[(768), float32], %var_10472: Tensor[(4, 10, 4), float64]) -> (Tensor[(4, 10, 1), float32], Tensor[(4, 10, 1), float32], Tensor[(160), bool], Tensor[(768), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 10, 1), float32], Tensor[(4, 10, 4), bool]) {
  %561 = @func_8337() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
  %562 = @func_8261() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(900, 2), float64]) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %565 = @func_7859() /* ty=(Tensor[(13, 8, 12), float64],) */;
  %566 = @func_7428() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */;
  %567 = cast(meta[relay.Constant][44] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %568 = cast(%var_10443, dtype="float32") /* ty=Tensor[(768), float32] */;
  %569 = reshape(%567, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %570 = reshape(%568, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %571 = @func_9406(%569, %570) /* ty=(Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) */;
  %572 = %571.1;
  %573 = cast(%var_10472, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = %561.0;
  %578 = sin(%564) /* ty=Tensor[(4, 10, 1), float32] */;
  %579 = %565.0;
  %580 = %566.0;
  %581 = greater(%575, %576) /* ty=Tensor[(4, 10, 4), bool] */;
  (%577, %578, meta[relay.Constant][44] /* ty=Tensor[(160), bool] */, %var_10443, %579, %580, %581)
}

def @func_10370() -> Tensor[(6, 300), float32] {
  %582 = @func_7723() /* ty=(Tensor[(6, 300), float64], Tensor[(70), int32], Tensor[(4, 10, ?), bool], Tensor[(12, 15, 10), uint16]) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(6, 300), float32] */;
  atanh(%584) /* ty=Tensor[(6, 300), float32] */
}

def @func_7588() -> Tensor[(4, 10, 1), float32] {
  @func_7586() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_10114(%var_10112: Tensor[(10, 2, 7), int64], %var_10113: Tensor[(10, 2, 7), int64]) -> (Tensor[(10, 2, 7), bool],) {
  %590 = fn (%var_10095: Tensor[(10, 2, 7), int64], %var_10096: Tensor[(10, 2, 7), int64]) -> (Tensor[(10, 2, 7), bool],) {
    %585 = cast(%var_10096, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
    %586 = shape_of(%var_10095, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%var_10095, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %589 = greater_equal(%587, %588) /* ty=Tensor[(10, 2, 7), bool] */;
    (%589,)
  };
  %590(%var_10112, %var_10113) /* ty=(Tensor[(10, 2, 7), bool],) */
}

def @func_8909(%var_8907: Tensor[(14, 4, 1), float32]) -> (Tensor[(14, 4, 1), float32],) {
  @func_8906(%var_8907) /* ty=(Tensor[(14, 4, 1), float32],) */
}

def @func_5553(%var_5551: Tensor[(9, 2, 8), float32]) -> (Tensor[(9, 2, 8), float32],) {
  @func_5550(%var_5551) /* ty=(Tensor[(9, 2, 8), float32],) */
}

def @func_2753(%var_2751: Tensor[(12, 15, 10), float64], %var_2752: Tensor[(12, 15, 10), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) {
  @func_2749(%var_2751, %var_2752) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(12, 15, 10), bool], Tensor[(12, 15, 10), uint16]) */
}

def @func_4621(%var_4619: Tensor[(16, 11, 3), int16], %var_4620: Tensor[(16, 11, 3), int16]) -> (Tensor[(16, 11, 3), bool],) {
  @func_4617(%var_4619, %var_4620) /* ty=(Tensor[(16, 11, 3), bool],) */
}

def @func_2633(%var_2631: Tensor[(5, 2, 8), bool]) -> Tensor[(5, 2, 8), bool] {
  @func_2630(%var_2631) /* ty=Tensor[(5, 2, 8), bool] */
}

def @func_7061() -> (Tensor[(4, 10, 1), float32],) {
  %593 = fn () -> (Tensor[(4, 10, 1), float32],) {
    %591 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
    %592 = atanh(%591) /* ty=Tensor[(4, 10, 1), float32] */;
    (%592,)
  };
  %593() /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_9910() -> (Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) {
  %602 = fn () -> (Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) {
    %594 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
    %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %596 = cast(meta[relay.Constant][47] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %597 = reshape(%595, newshape=[4, 13, 16]) /* ty=Tensor[(4, 13, 16), float32] */;
    %598 = reshape(%596, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %599 = @func_6228(%597, %598) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(528), float32], Tensor[(112), float64], Tensor[(4, 13, 16), float32]) */;
    %600 = %594.2;
    %601 = %599.1;
    (%600, %601, meta[relay.Constant][46] /* ty=Tensor[(832), float32] */, meta[relay.Constant][47] /* ty=Tensor[(528), float32] */)
  };
  %602() /* ty=(Tensor[(900, 2), float64], Tensor[(528), float32], Tensor[(832), float32], Tensor[(528), float32]) */
}

def @func_8274() -> Tensor[(13, 8, 12), float32] {
  @func_8235() /* ty=Tensor[(13, 8, 12), float32] */
}

def @func_10202(%var_10198: Tensor[(4, 10, 3), float32], %var_10199: Tensor[(14, 5), int32], %var_10200: Tensor[(160), bool], %var_10201: Tensor[(768), float32]) -> (Tensor[(4, 10, 3), int64], Tensor[(4, 10, 1), float64], Tensor[(14, 5), int32], Tensor[(4, 10, 4), float64], Tensor[(768), float32], Tensor[(4, 10, 160), bool]) {
  @func_10196(%var_10198, %var_10199, %var_10200, %var_10201) /* ty=(Tensor[(4, 10, 3), int64], Tensor[(4, 10, 1), float64], Tensor[(14, 5), int32], Tensor[(4, 10, 4), float64], Tensor[(768), float32], Tensor[(4, 10, 160), bool]) */
}

def @func_4451(%var_4449: Tensor[(7, 5, 11), uint64]) -> Tensor[(7, 5, 11), uint64] {
  @func_4448(%var_4449) /* ty=Tensor[(7, 5, 11), uint64] */
}

def @func_9027() -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) {
  %607 = fn () -> (Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) {
    %603 = cast(meta[relay.Constant][48] /* ty=Tensor[(1800), float32] */, dtype="float32") /* ty=Tensor[(1800), float32] */;
    %604 = reshape(%603, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
    %605 = @func_7575() /* ty=Tensor[(4, 10, 1), float32] */;
    %606 = @func_8661(%604) /* ty=Tensor[(12, 15, 10), float32] */;
    (%605, %606, meta[relay.Constant][48] /* ty=Tensor[(1800), float32] */)
  };
  %607() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) */
}

def @func_9692(%var_9690: Tensor[(12, 156), int64], %var_9691: Tensor[(12, 156), int64]) -> (Tensor[(13, 8, 12), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(12, 156), float32]) {
  %619 = fn (%var_9639: Tensor[(12, 156), int64], %var_9681: Tensor[(12, 156), int64]) -> (Tensor[(13, 8, 12), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(12, 156), float32]) {
    %608 = cast(%var_9639, dtype="int64") /* ty=Tensor[(12, 156), int64] */;
    %609 = reshape(%608, newshape=[1872]) /* ty=Tensor[(1872), int64] */;
    %610 = @func_8873(%609) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(6, 8, 12), int8], Tensor[(1872), int64], Tensor[(576), int8]) */;
    %611 = cast(%var_9681, dtype="float32") /* ty=Tensor[(12, 156), float32] */;
    %612 = shape_of(%var_9639, dtype="int32") /* ty=Tensor[(2), int32] */;
    %613 = cast(%var_9639, dtype="float32") /* ty=Tensor[(12, 156), float32] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %615 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
    %616 = %610.0;
    %617 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
    %618 = mod(%613, %614) /* ty=Tensor[(12, 156), float32] */;
    (%615, %616, %617, %618)
  };
  %619(%var_9690, %var_9691) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(12, 156), float32]) */
}

def @func_9416() -> Tensor[(4, 10, 1), float32] {
  @func_9414() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_8150() -> Tensor[(4, 10, 1), float32] {
  @func_8148() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7358() -> Tensor[(4, 10, 1), float32] {
  %620 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %620.0
}

def @func_10196(%var_10158: Tensor[(4, 10, 3), float32], %var_10177: Tensor[(14, 5), int32], %var_10183: Tensor[(160), bool], %var_10184: Tensor[(768), float32]) -> (Tensor[(4, 10, 3), int64], Tensor[(4, 10, 1), float64], Tensor[(14, 5), int32], Tensor[(4, 10, 4), float64], Tensor[(768), float32], Tensor[(4, 10, 160), bool]) {
  %621 = @func_9462() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) */;
  %622 = %621.0;
  %623 = cast(%622, dtype="int64") /* ty=Tensor[(4, 10, 1), int64] */;
  %624 = cast(%var_10158, dtype="int64") /* ty=Tensor[(4, 10, 3), int64] */;
  %625 = cast(%var_10177, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
  %626 = reshape(%625, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %627 = @func_7285(%626) /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float32], Tensor[(70), int32], Tensor[(288), float32], Tensor[(6, 300), float64]) */;
  %628 = cast(%var_10183, dtype="bool") /* ty=Tensor[(160), bool] */;
  %629 = cast(%var_10184, dtype="float32") /* ty=Tensor[(768), float32] */;
  %630 = reshape(%628, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %631 = reshape(%629, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %632 = @func_9403(%630, %631) /* ty=(Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) */;
  %633 = @func_7613() /* ty=Tensor[(4, 10, 1), float32] */;
  %634 = cast(%var_10183, dtype="bool") /* ty=Tensor[(160), bool] */;
  %635 = cast(%633, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %636 = logical_xor(%623, %624) /* ty=Tensor[(4, 10, 3), int64] */;
  %637 = %627.0;
  %638 = %632.1;
  %639 = logical_or(%634, %635) /* ty=Tensor[(4, 10, 160), bool] */;
  (%636, %637, %var_10177, %638, %var_10184, %639)
}

def @func_10321() -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 4), float32], Tensor[(160), bool]) {
  %640 = @func_9026() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), float32], Tensor[(1800), float32]) */;
  %641 = cast(meta[relay.Constant][49] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %642 = reshape(%641, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), bool] */;
  %643 = @func_9969(%642) /* ty=(Tensor[(4, 10, 4), float32],) */;
  %644 = %640.1;
  %645 = %643.0;
  (%644, %645, meta[relay.Constant][49] /* ty=Tensor[(160), bool] */)
}

def @func_6443(%var_6441: Tensor[(12, 2, 8), float64], %var_6442: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), float64],) {
  %651 = fn (%var_6435: Tensor[(12, 2, 8), float64], %var_6436: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), float64],) {
    %646 = cast(%var_6436, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %647 = shape_of(%var_6435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %648 = cast(%var_6435, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %650 = divide(%648, %649) /* ty=Tensor[(12, 2, 8), float64] */;
    (%650,)
  };
  %651(%var_6441, %var_6442) /* ty=(Tensor[(12, 2, 8), float64],) */
}

def @func_10352() -> Tensor[(12, 15, 10), float32] {
  %655 = fn () -> Tensor[(12, 15, 10), float32] {
    %652 = @func_10282() /* ty=(Tensor[(12, 15, 10), float32], Tensor[(4, 10, 528), float64]) */;
    %653 = %652.0;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
    cos(%654) /* ty=Tensor[(12, 15, 10), float32] */
  };
  %655() /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_9462() -> (Tensor[(4, 10, 1), float32], Tensor[(80), bool], Tensor[(5, 2, 8), float64]) {
  %656 = cast(meta[relay.Constant][50] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %657 = reshape(%656, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), bool] */;
  %658 = @func_2630(%657) /* ty=Tensor[(5, 2, 8), bool] */;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
  %660 = @func_8148() /* ty=Tensor[(4, 10, 1), float32] */;
  %661 = sqrt(%659) /* ty=Tensor[(5, 2, 8), float64] */;
  (%660, meta[relay.Constant][50] /* ty=Tensor[(80), bool] */, %661)
}

def @func_5014(%var_4945: Tensor[(3, 8, 7), int64], %var_4967: Tensor[(288), float32], %var_4976: Tensor[(560), float64], %var_4977: Tensor[(432), float32], %var_4998: Tensor[(14), int32], %var_5012: Tensor[(385), uint64]) -> (Tensor[(3, 8, 7), bool], Tensor[(12, 4, 6), float32], Tensor[(70), int32], float32, Tensor[(288), float32], Tensor[(7, 16, 5), float64], Tensor[(560), float64], Tensor[(432), float32], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(7, 5, 11), uint64], Tensor[(385), uint64]) {
  %662 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 8, 7), int64] */, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %663 = shape_of(%var_4945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%var_4945, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %666 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %667 = cast(9.9577f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %668 = cast(%var_4967, dtype="float32") /* ty=Tensor[(288), float32] */;
  %669 = reshape(%666, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %670 = reshape(%667, newshape=[]) /* ty=float32 */;
  %671 = reshape(%668, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %672 = @func_1888(%669, %670, %671) /* ty=(Tensor[(8, 3, 8), float64], Tensor[(2, 7, 5), int32], Tensor[(14, 1), int32], Tensor[(70), int32], Tensor[(6, 8, 12), int8], Tensor[(576), int8], Tensor[(12, 4, 6), float32], float32, Tensor[(4, 72), float32]) */;
  %673 = cast(%var_4976, dtype="float64") /* ty=Tensor[(560), float64] */;
  %674 = cast(%var_4976, dtype="float64") /* ty=Tensor[(560), float64] */;
  %675 = cast(%var_4977, dtype="float32") /* ty=Tensor[(432), float32] */;
  %676 = reshape(%673, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float64] */;
  %677 = reshape(%674, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float64] */;
  %678 = reshape(%675, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %679 = @func_2164(%676, %677, %678) /* ty=(Tensor[(7, 16, 5), float64], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 16, 5), float64]) */;
  %680 = cast(%var_4977, dtype="float32") /* ty=Tensor[(432), float32] */;
  %681 = cast(%var_4998, dtype="int32") /* ty=Tensor[(14), int32] */;
  %682 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %683 = reshape(%681, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
  %684 = reshape(%682, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
  %685 = cast(%var_5012, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %686 = reshape(%685, newshape=[7, 5, 11]) /* ty=Tensor[(7, 5, 11), uint64] */;
  %687 = greater(%664, %665) /* ty=Tensor[(3, 8, 7), bool] */;
  %688 = %672.6;
  %689 = %679.0;
  %690 = log2(%680) /* ty=Tensor[(432), float32] */;
  %691 = @func_527(%683, %684) /* ty=Tensor[(2, 7, 5), int32] */;
  %692 = @func_4448(%686) /* ty=Tensor[(7, 5, 11), uint64] */;
  (%687, %688, meta[relay.Constant][52] /* ty=Tensor[(70), int32] */, 9.9577f /* ty=float32 */, %var_4967, %689, %var_4976, %690, %691, %var_4998, %692, %var_5012)
}

def @func_9084() -> Tensor[(4, 10, 1), float32] {
  @func_9082() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9256() -> Tensor[(4, 10, 1), float32] {
  @func_9254() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7602(%var_7601: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
  %694 = fn (%var_7594: Tensor[(12, 8, 8), float32]) -> Tensor[(12, 8, 8), float32] {
    %693 = cast(%var_7594, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
    sigmoid(%693) /* ty=Tensor[(12, 8, 8), float32] */
  };
  %694(%var_7601) /* ty=Tensor[(12, 8, 8), float32] */
}

def @func_9540() -> Tensor[(4, 10, 1), float32] {
  %695 = @func_8974() /* ty=(Tensor[(4, 10, 1), float32],) */;
  %695.0
}

def @func_9528(%var_9526: Tensor[(4, 40), float32]) -> (Tensor[(4, 312), bool], Tensor[(8, 2, 10), bool], Tensor[(4, 40), float32]) {
  @func_9525(%var_9526) /* ty=(Tensor[(4, 312), bool], Tensor[(8, 2, 10), bool], Tensor[(4, 40), float32]) */
}

def @func_9414() -> Tensor[(4, 10, 1), float32] {
  @func_7358() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_9892(%var_9891: Tensor[(3, 4, 15), uint64]) -> (Tensor[(3, 4, 15), bool], Tensor[(3, 4, 15), float64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
  %709 = fn (%var_9871: Tensor[(3, 4, 15), uint64]) -> (Tensor[(3, 4, 15), bool], Tensor[(3, 4, 15), float64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) {
    %696 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 4, 15), uint64] */, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
    %697 = shape_of(%var_9871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_9871, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %700 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 4, 15), uint64] */, dtype="float64") /* ty=Tensor[(3, 4, 15), float64] */;
    %701 = cast(meta[relay.Constant][54] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
    %702 = cast(meta[relay.Constant][54] /* ty=Tensor[(576), int8] */, dtype="int8") /* ty=Tensor[(576), int8] */;
    %703 = reshape(%701, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
    %704 = reshape(%702, newshape=[6, 8, 12]) /* ty=Tensor[(6, 8, 12), int8] */;
    %705 = @func_994(%703, %704) /* ty=(Tensor[(6, 8, 12), int8],) */;
    %706 = greater(%698, %699) /* ty=Tensor[(3, 4, 15), bool] */;
    %707 = acosh(%700) /* ty=Tensor[(3, 4, 15), float64] */;
    %708 = %705.0;
    (%706, %707, %708, meta[relay.Constant][54] /* ty=Tensor[(576), int8] */)
  };
  %709(%var_9891) /* ty=(Tensor[(3, 4, 15), bool], Tensor[(3, 4, 15), float64], Tensor[(6, 8, 12), int8], Tensor[(576), int8]) */
}

def @func_8573() -> (Tensor[(4, 10, 1), float32],) {
  %710 = @func_8336() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */;
  %711 = %710.0;
  (%711,)
}

def @func_998(%var_996: Tensor[(6, 8, 12), int8], %var_997: Tensor[(6, 8, 12), int8]) -> (Tensor[(6, 8, 12), int8],) {
  @func_994(%var_996, %var_997) /* ty=(Tensor[(6, 8, 12), int8],) */
}

def @func_8429(%var_8404: Tensor[(7, 140), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float32], Tensor[(7, 14, 10), float32], Tensor[(4, 10, 1), float32], Tensor[(7, 140), bool]) {
  %712 = cast(%var_8404, dtype="float32") /* ty=Tensor[(7, 140), float32] */;
  %713 = reshape(%712, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), float32] */;
  %714 = @func_3781(%713) /* ty=(Tensor[(7, 14, 10), float32],) */;
  %715 = cast(%var_8404, dtype="float32") /* ty=Tensor[(7, 140), float32] */;
  %716 = log10(%715) /* ty=Tensor[(7, 140), float32] */;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(7, 140), float64] */;
  %718 = tan(%717) /* ty=Tensor[(7, 140), float64] */;
  %719 = cast(%var_8404, dtype="bool") /* ty=Tensor[(7, 140), bool] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %721 = cast(%718, dtype="bool") /* ty=Tensor[(7, 140), bool] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %723 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
  %724 = @func_8274() /* ty=Tensor[(13, 8, 12), float32] */;
  %725 = %714.0;
  %726 = @func_8385() /* ty=Tensor[(4, 10, 1), float32] */;
  %727 = greater(%721, %722) /* ty=Tensor[(7, 140), bool] */;
  (%723, %724, %725, %726, %727)
}

def @func_9233() -> (Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) {
  %728 = @func_8385() /* ty=Tensor[(4, 10, 1), float32] */;
  %729 = cast(%728, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %730 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %731 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 10, 4), float32] */, dtype="bool") /* ty=Tensor[(4, 10, 4), bool] */;
  %732 = cast(%728, dtype="bool") /* ty=Tensor[(4, 10, 1), bool] */;
  %733 = @func_8185() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(12, 15, 10), bool], Tensor[(900, 2), float64]) */;
  %734 = not_equal(%729, %730) /* ty=Tensor[(4, 10, 4), bool] */;
  %735 = equal(%731, %732) /* ty=Tensor[(4, 10, 4), bool] */;
  %736 = %733.2;
  (%734, %735, %736)
}

def @func_7428() -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) {
  %746 = fn () -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) {
    %737 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 312), float64] */, dtype="float64") /* ty=Tensor[(4, 312), float64] */;
    %738 = cast(meta[relay.Constant][57] /* ty=Tensor[(14), int32] */, dtype="int32") /* ty=Tensor[(14), int32] */;
    %739 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 5), int32] */, dtype="int32") /* ty=Tensor[(14, 5), int32] */;
    %740 = reshape(%737, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), float64] */;
    %741 = reshape(%738, newshape=[14]) /* ty=Tensor[(14), int32] */;
    %742 = reshape(%739, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %743 = @func_3593(%740, %741, %742) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(13, 8, 12), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32]) */;
    %744 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
    %745 = %743.1;
    (%744, %745, meta[relay.Constant][56] /* ty=Tensor[(4, 312), float64] */, meta[relay.Constant][57] /* ty=Tensor[(14), int32] */, meta[relay.Constant][58] /* ty=Tensor[(14, 5), int32] */)
  };
  %746() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64], Tensor[(4, 312), float64], Tensor[(14), int32], Tensor[(14, 5), int32]) */
}

def @func_8661(%var_8655: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
  %747 = cast(%var_8655, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  sqrt(%747) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_7380(%var_7379: Tensor[(1, 160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(1, 160), float32]) {
  %752 = fn (%var_7376: Tensor[(1, 160), float32]) -> (Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(1, 160), float32]) {
    %748 = cast(%var_7376, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
    %749 = reshape(%748, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), float32] */;
    %750 = @func_7358() /* ty=Tensor[(4, 10, 1), float32] */;
    %751 = @func_1121(%749) /* ty=Tensor[(8, 2, 10), bool] */;
    (%750, %751, %var_7376)
  };
  %752(%var_7379) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(8, 2, 10), bool], Tensor[(1, 160), float32]) */
}

def @func_7614() -> Tensor[(4, 10, 1), float32] {
  %754 = fn () -> Tensor[(4, 10, 1), float32] {
    %753 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %753.0
  };
  %754() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_7500(%var_7498: Tensor[(528), float32], %var_7499: Tensor[(28, 4), float64]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) {
  %765 = fn (%var_7490: Tensor[(528), float32], %var_7491: Tensor[(28, 4), float64]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) {
    %755 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %756 = cast(%var_7490, dtype="float32") /* ty=Tensor[(528), float32] */;
    %757 = cast(%var_7491, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
    %758 = reshape(%756, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
    %759 = reshape(%757, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %760 = @func_5405(%758, %759) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) */;
    %761 = cast(%var_7491, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
    %762 = %755.0;
    %763 = %760.3;
    %764 = acos(%761) /* ty=Tensor[(28, 4), float32] */;
    (%762, %763, %var_7490, %764)
  };
  %765(%var_7498, %var_7499) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(9, 14, 4), float64], Tensor[(528), float32], Tensor[(28, 4), float32]) */
}

def @func_3781(%var_3774: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %766 = cast(%var_3774, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %767 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(7, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %770 = floor_divide(%768, %769) /* ty=Tensor[(7, 14, 10), float32] */;
  (%770,)
}

def @func_8664(%var_8662: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
  @func_8661(%var_8662) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_9314(%var_9312: Tensor[(4, 10, 4), float32], %var_9313: Tensor[(192), float64]) -> (Tensor[(4, 10, 4), bool], Tensor[(12, 2, 8), float64], Tensor[(192), float64]) {
  @func_9310(%var_9312, %var_9313) /* ty=(Tensor[(4, 10, 4), bool], Tensor[(12, 2, 8), float64], Tensor[(192), float64]) */
}

def @func_3545(%var_3542: Tensor[(9, 1, 11), float64], %var_3543: Tensor[(1344), uint32], %var_3544: Tensor[(432), float32]) -> (Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
  %780 = fn (%var_3517: Tensor[(9, 1, 11), float64], %var_3522: Tensor[(1344), uint32], %var_3523: Tensor[(432), float32]) -> (Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) {
    %771 = cast(-3.52618f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %772 = cast(%var_3517, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
    %773 = cast(%var_3522, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %774 = cast(%var_3523, dtype="float32") /* ty=Tensor[(432), float32] */;
    %775 = reshape(%773, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint32] */;
    %776 = reshape(%774, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %777 = @func_679(%775, %776) /* ty=(Tensor[(7, 12, 16), float32], Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(7, 12, 16), float64]) */;
    %778 = subtract(%771, %772) /* ty=Tensor[(9, 1, 11), float64] */;
    %779 = %777.3;
    (%778, %779, %var_3522, %var_3523)
  };
  %780(%var_3542, %var_3543, %var_3544) /* ty=(Tensor[(9, 1, 11), float64], Tensor[(7, 12, 16), float64], Tensor[(1344), uint32], Tensor[(432), float32]) */
}

def @func_6827(%var_6826: int64) -> Tensor[(10, 6, 8), int64] {
  %783 = fn (%var_6813: int64) -> Tensor[(10, 6, 8), int64] {
    %781 = cast(%var_6813, dtype="int64") /* ty=int64 */;
    %782 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 6, 8), int64] */, dtype="int64") /* ty=Tensor[(10, 6, 8), int64] */;
    maximum(%781, %782) /* ty=Tensor[(10, 6, 8), int64] */
  };
  %783(%var_6826) /* ty=Tensor[(10, 6, 8), int64] */
}

def @func_8337() -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) {
  %787 = fn () -> (Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) {
    %784 = @func_7858() /* ty=(Tensor[(13, 8, 12), float64],) */;
    %785 = @func_7586() /* ty=Tensor[(4, 10, 1), float32] */;
    %786 = %784.0;
    (%785, %786)
  };
  %787() /* ty=(Tensor[(4, 10, 1), float32], Tensor[(13, 8, 12), float64]) */
}

def @func_7236(%var_7232: Tensor[(432), float32], %var_7233: Tensor[(189, 1), float32], %var_7234: Tensor[(112), float64], %var_7235: Tensor[(14), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 6, 8), float32], Tensor[(9, 3, 7), float32], Tensor[(112), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32], Tensor[(189, 432), float32]) {
  %807 = fn (%var_7193: Tensor[(432), float32], %var_7207: Tensor[(189, 1), float32], %var_7208: Tensor[(112), float64], %var_7217: Tensor[(14), int32]) -> (Tensor[(4, 10, 1), float32], Tensor[(9, 6, 8), float32], Tensor[(9, 3, 7), float32], Tensor[(112), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32], Tensor[(189, 432), float32]) {
    %788 = @func_7060() /* ty=(Tensor[(4, 10, 1), float32],) */;
    %789 = cast(%var_7193, dtype="float32") /* ty=Tensor[(432), float32] */;
    %790 = reshape(%789, newshape=[9, 6, 8]) /* ty=Tensor[(9, 6, 8), float32] */;
    %791 = cast(%var_7207, dtype="float32") /* ty=Tensor[(189, 1), float32] */;
    %792 = cast(%var_7208, dtype="float64") /* ty=Tensor[(112), float64] */;
    %793 = reshape(%791, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), float32] */;
    %794 = reshape(%792, newshape=[2, 56]) /* ty=Tensor[(2, 56), float64] */;
    %795 = @func_3714(%793, %794) /* ty=(Tensor[(9, 3, 7), float32], Tensor[(2, 14, 4), float64], Tensor[(2, 56), float32]) */;
    %796 = cast(%var_7217, dtype="int32") /* ty=Tensor[(14), int32] */;
    %797 = cast(meta[relay.Constant][61] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
    %798 = reshape(%796, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), int32] */;
    %799 = reshape(%797, newshape=[2, 7, 5]) /* ty=Tensor[(2, 7, 5), int32] */;
    %800 = cast(%var_7193, dtype="float32") /* ty=Tensor[(432), float32] */;
    %801 = cast(%var_7207, dtype="float32") /* ty=Tensor[(189, 1), float32] */;
    %802 = %788.0;
    %803 = @func_30(%790) /* ty=Tensor[(9, 6, 8), float32] */;
    %804 = %795.0;
    %805 = @func_527(%798, %799) /* ty=Tensor[(2, 7, 5), int32] */;
    %806 = floor_mod(%800, %801) /* ty=Tensor[(189, 432), float32] */;
    (%802, %803, %804, %var_7208, %805, %var_7217, meta[relay.Constant][61] /* ty=Tensor[(70), int32] */, %806)
  };
  %807(%var_7232, %var_7233, %var_7234, %var_7235) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(9, 6, 8), float32], Tensor[(9, 3, 7), float32], Tensor[(112), float64], Tensor[(2, 7, 5), int32], Tensor[(14), int32], Tensor[(70), int32], Tensor[(189, 432), float32]) */
}

def @func_4081(%var_4057: int32, %var_4058: Tensor[(6, 16, 11), int32]) -> (Tensor[(6, 16, 11), bool],) {
  %808 = cast(%var_4057, dtype="bool") /* ty=bool */;
  %809 = cast(%var_4058, dtype="bool") /* ty=Tensor[(6, 16, 11), bool] */;
  %810 = less_equal(%808, %809) /* ty=Tensor[(6, 16, 11), bool] */;
  (%810,)
}

def @func_1123(%var_1122: Tensor[(8, 2, 10), float32]) -> Tensor[(8, 2, 10), bool] {
  %817 = fn (%var_1108: Tensor[(8, 2, 10), float32]) -> Tensor[(8, 2, 10), bool] {
    %811 = cast(%var_1108, dtype="float32") /* ty=Tensor[(8, 2, 10), float32] */;
    %812 = atan(%811) /* ty=Tensor[(8, 2, 10), float32] */;
    %813 = cast(%var_1108, dtype="bool") /* ty=Tensor[(8, 2, 10), bool] */;
    %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%812, dtype="bool") /* ty=Tensor[(8, 2, 10), bool] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%815, %816) /* ty=Tensor[(8, 2, 10), bool] */
  };
  %817(%var_1122) /* ty=Tensor[(8, 2, 10), bool] */
}

def @func_5408(%var_5406: Tensor[(11, 12, 4), float32], %var_5407: Tensor[(112), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) {
  %829 = fn (%var_5392: Tensor[(11, 12, 4), float32], %var_5396: Tensor[(112), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) {
    %818 = cast(%var_5392, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
    %819 = cast(%var_5396, dtype="float64") /* ty=Tensor[(112), float64] */;
    %820 = cast(%var_5396, dtype="float64") /* ty=Tensor[(112), float64] */;
    %821 = reshape(%819, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
    %822 = reshape(%820, newshape=[2, 14, 4]) /* ty=Tensor[(2, 14, 4), float64] */;
    %823 = cast(meta[relay.Constant][62] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %824 = reshape(%823, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), bool] */;
    %825 = @func_4158(%824) /* ty=(Tensor[(9, 6, 8), float32], Tensor[(432), float32], Tensor[(9, 14, 4), float64]) */;
    %826 = asin(%818) /* ty=Tensor[(11, 12, 4), float32] */;
    %827 = @func_2392(%821, %822) /* ty=Tensor[(2, 14, 4), float64] */;
    %828 = %825.2;
    (%826, %827, %var_5396, %828, meta[relay.Constant][62] /* ty=Tensor[(504), bool] */)
  };
  %829(%var_5406, %var_5407) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 14, 4), float64], Tensor[(112), float64], Tensor[(9, 14, 4), float64], Tensor[(504), bool]) */
}

def @func_9406(%var_9404: Tensor[(4, 10, 4), bool], %var_9405: Tensor[(768), float32]) -> (Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) {
  %842 = fn (%var_9367: Tensor[(4, 10, 4), bool], %var_9396: Tensor[(768), float32]) -> (Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) {
    %830 = @func_9233() /* ty=(Tensor[(4, 10, 4), bool], Tensor[(4, 10, 4), bool], Tensor[(900, 2), float64]) */;
    %831 = %830.1;
    %832 = cast(%var_9367, dtype="int32") /* ty=Tensor[(4, 10, 4), int32] */;
    %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %834 = cast(%831, dtype="int32") /* ty=Tensor[(4, 10, 4), int32] */;
    %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %836 = cast(%831, dtype="float64") /* ty=Tensor[(4, 10, 4), float64] */;
    %837 = cast(%var_9396, dtype="float32") /* ty=Tensor[(768), float32] */;
    %838 = reshape(%837, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
    %839 = bitwise_or(%834, %835) /* ty=Tensor[(4, 10, 4), int32] */;
    %840 = cosh(%836) /* ty=Tensor[(4, 10, 4), float64] */;
    %841 = @func_7600(%838) /* ty=Tensor[(12, 8, 8), float32] */;
    (%839, %840, %841, %var_9396)
  };
  %842(%var_9404, %var_9405) /* ty=(Tensor[(4, 10, 4), int32], Tensor[(4, 10, 4), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32]) */
}

def @func_10372() -> Tensor[(6, 300), float32] {
  @func_10370() /* ty=Tensor[(6, 300), float32] */
}

def @func_10323() -> (Tensor[(12, 15, 10), float32], Tensor[(4, 10, 4), float32], Tensor[(160), bool]) {
  @func_10321() /* ty=(Tensor[(12, 15, 10), float32], Tensor[(4, 10, 4), float32], Tensor[(160), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

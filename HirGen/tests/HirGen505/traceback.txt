==========mod==========
#[version = "0.0.5"]
def @func_7447() -> (Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) {
  %0 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %1 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %3 = reshape(%2, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %4 = @func_2202(%3) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) */;
  %5 = %0.3;
  %6 = %1.1;
  %7 = %4.5;
  (%5, %6, %7, meta[relay.Constant][0] /* ty=Tensor[(840), int16] */)
}

def @func_2550() -> (Tensor[(16, 12, 10), float32],) {
  %8 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%8,)
}

def @func_4455(%var_4447: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), float64],) {
  %9 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %10 = %9.0;
  %11 = cast(%var_4447, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(2), int32] */;
  %13 = cast(%10, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %15 = floor_mod(%13, %14) /* ty=Tensor[(3, 40), float64] */;
  (%15,)
}

def @func_10398(%var_10334: Tensor[(1, 5, 2), int64], %var_10335: Tensor[(12, 5, 2), int64], %var_10362: Tensor[(72), float32]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), bool], Tensor[(72), float32], Tensor[(12, 5, 2), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %16 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %17 = cast(%var_10362, dtype="float32") /* ty=Tensor[(72), float32] */;
  %18 = cast(%var_10362, dtype="float32") /* ty=Tensor[(72), float32] */;
  %19 = reshape(%17, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %20 = reshape(%18, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %21 = @func_8413(%19, %20) /* ty=(Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) */;
  %22 = cast(%var_10334, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
  %23 = cast(%var_10335, dtype="int64") /* ty=Tensor[(12, 5, 2), int64] */;
  %24 = subtract(%22, %23) /* ty=Tensor[(12, 5, 2), int64] */;
  %25 = cast(%var_10335, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %29 = not_equal(%27, %28) /* ty=Tensor[(12, 5, 2), bool] */;
  %30 = cast(%24, dtype="float32") /* ty=Tensor[(12, 5, 2), float32] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%29, dtype="float32") /* ty=Tensor[(12, 5, 2), float32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %34 = @func_8770() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %35 = @func_4756() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %36 = %16.0;
  %37 = %21.0;
  %38 = floor_mod(%32, %33) /* ty=Tensor[(12, 5, 2), float32] */;
  %39 = %34.1;
  %40 = %35.1;
  (%36, %37, %var_10362, %38, %39, %40)
}

def @func_8188() -> Tensor[(16, 12, 10), float32] {
  %41 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %41.1
}

def @func_10994() -> (Tensor[(16, 12, 10), float32],) {
  %42 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %43 = %42.0;
  (%43,)
}

def @func_5593() -> Tensor[(16, 12, 10), float32] {
  %44 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %44.0
}

def @func_8722() -> (Tensor[(16, 12, 10), float32],) {
  %45 = @func_3753() /* ty=Tensor[(16, 12, 10), float32] */;
  (%45,)
}

def @func_1788(%var_1758: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) {
  %46 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %47 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %48 = %47.0;
  %49 = cast(%var_1758, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(2), int32] */;
  %51 = cast(%48, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %53 = cast(%var_1758, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %54 = cast(%48, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %55 = %46.0;
  %56 = subtract(%51, %52) /* ty=Tensor[(3, 40), float32] */;
  %57 = log(%53) /* ty=Tensor[(3, 40), float32] */;
  %58 = acos(%54) /* ty=Tensor[(3, 40), float64] */;
  (%55, %56, %57, %58)
}

def @func_671(%var_651: int64, %var_652: Tensor[(15, 8, 3), int64], %var_663: Tensor[(9), float64], %var_665: Tensor[(840), int16]) -> (Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  %59 = cast(%var_651, dtype="bool") /* ty=bool */;
  %60 = cast(%var_652, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %61 = cast(%var_663, dtype="float64") /* ty=Tensor[(9), float64] */;
  %62 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %63 = cast(%var_665, dtype="int16") /* ty=Tensor[(840), int16] */;
  %64 = reshape(%61, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %65 = reshape(%62, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %66 = reshape(%63, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %67 = @func_353(%64, %65, %66) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %68 = equal(%59, %60) /* ty=Tensor[(15, 8, 3), bool] */;
  %69 = %67.2;
  (%68, %69, %var_663, meta[relay.Constant][1] /* ty=Tensor[(120), int16] */, %var_665)
}

def @func_6980() -> Tensor[(16, 12, 10), float64] {
  %70 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %70.0
}

def @func_10172() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 5, 7), int64], Tensor[(21, 5), int64]) {
  %71 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %72 = cast(meta[relay.Constant][2] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %74 = cast(meta[relay.Constant][2] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %75 = reshape(%72, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %76 = reshape(%73, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %77 = reshape(%74, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %78 = @func_1190(%75, %76, %77) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %79 = %71.1;
  %80 = %78.0;
  (%79, %80, meta[relay.Constant][2] /* ty=Tensor[(21, 5), int64] */)
}

def @func_3942() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %81 = @func_3498() /* ty=Tensor[(16, 12, 10), float32] */;
  %82 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  (%81, %82)
}

def @func_5062(%var_5039: Tensor[(240), float32], %var_5040: int64) -> (Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) {
  %83 = cast(%var_5039, dtype="float32") /* ty=Tensor[(240), float32] */;
  %84 = cast(%var_5040, dtype="int64") /* ty=int64 */;
  %85 = reshape(%83, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %86 = reshape(%84, newshape=[]) /* ty=int64 */;
  %87 = @func_4890(%85, %86) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) */;
  %88 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %89 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %90 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %91 = %90.1;
  %92 = cast(%91, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %93 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%89, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %96 = %87.2;
  %97 = %88.0;
  %98 = greater(%94, %95) /* ty=Tensor[(16, 12, 10), bool] */;
  (%96, %var_5039, %var_5040, %97, %98)
}

def @func_7040() -> Tensor[(16, 12, 10), float32] {
  %99 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %99.0
}

def @func_10924() -> Tensor[(16, 12, 10), float32] {
  %100 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %100.0
}

def @func_5890(%var_5857: Tensor[(105), int64], %var_5884: Tensor[(240), int8]) -> (Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) {
  %101 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %103 = cast(%101, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %104 = cast(%var_5857, dtype="int64") /* ty=Tensor[(105), int64] */;
  %105 = reshape(%103, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
  %106 = reshape(%104, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %107 = @func_1410(%105, %106) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
  %108 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %109 = cast(%var_5884, dtype="int8") /* ty=Tensor[(240), int8] */;
  %110 = cast(%var_5884, dtype="int8") /* ty=Tensor[(240), int8] */;
  %111 = reshape(%109, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int8] */;
  %112 = reshape(%110, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int8] */;
  %113 = @func_3805(%111, %112) /* ty=(Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) */;
  %114 = sqrt(%102) /* ty=Tensor[(16, 12, 10), float32] */;
  %115 = %107.4;
  %116 = %108.0;
  %117 = %113.0;
  (%114, %115, %var_5857, %116, %117, %var_5884)
}

def @func_9129() -> (Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
  %118 = @func_8964() /* ty=(Tensor[(11, 3, 8), float64],) */;
  %119 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %120 = %118.0;
  %121 = %119.4;
  (%120, %121)
}

def @func_9327() -> (Tensor[(16, 12, 10), float32],) {
  %122 = @func_4584() /* ty=Tensor[(16, 12, 10), float32] */;
  (%122,)
}

def @func_8515() -> Tensor[(240), float32] {
  %123 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
  %123.2
}

def @func_4890(%var_4871: Tensor[(240), float32], %var_4880: int64) -> (Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) {
  %124 = @func_4191() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %125 = cast(%var_4871, dtype="float32") /* ty=Tensor[(240), float32] */;
  %126 = reshape(%125, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %127 = cast(%var_4880, dtype="int64") /* ty=int64 */;
  %128 = reshape(%127, newshape=[]) /* ty=int64 */;
  %129 = @func_1837(%128) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) */;
  %130 = %124.0;
  %131 = @func_2017(%126) /* ty=Tensor[(8, 2, 15), float32] */;
  %132 = %129.3;
  (%130, %131, %var_4871, %132, %var_4880)
}

def @func_6910(%var_6885: Tensor[(16, 12, 10), float64], %var_6905: Tensor[(3, 3), float64]) -> (Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  %133 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %134 = cast(%var_6885, dtype="uint8") /* ty=Tensor[(16, 12, 10), uint8] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%133, dtype="uint8") /* ty=Tensor[(16, 12, 10), uint8] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %138 = cast(%var_6905, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %139 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %140 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %141 = reshape(%138, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %142 = reshape(%139, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %143 = reshape(%140, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %144 = @func_353(%141, %142, %143) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %145 = left_shift(%136, %137) /* ty=Tensor[(16, 12, 10), uint8] */;
  %146 = %144.4;
  (%145, %146, %var_6905, meta[relay.Constant][3] /* ty=Tensor[(120), int16] */, meta[relay.Constant][4] /* ty=Tensor[(840), int16] */)
}

def @func_8549() -> Tensor[(240), float32] {
  @func_8515() /* ty=Tensor[(240), float32] */
}

def @func_9364(%var_9346: Tensor[(8, 7, 5), float64]) -> Tensor[(8, 7, 5), float64] {
  %147 = cast(%var_9346, dtype="float64") /* ty=Tensor[(8, 7, 5), float64] */;
  rsqrt(%147) /* ty=Tensor[(8, 7, 5), float64] */
}

def @func_9467() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) {
  %148 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %149 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %150 = @func_8371() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %151 = %148.0;
  %152 = @func_8647() /* ty=Tensor[(16, 12, 10), float32] */;
  %153 = %149.0;
  %154 = %150.0;
  (%151, %152, %153, %154)
}

def @func_1873() -> Tensor[(16, 12, 10), float64] {
  @func_909() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8928(%var_8924: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
  %155 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
  %156 = cast(%var_8924, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %157 = reshape(%156, newshape=[35]) /* ty=Tensor[(35), uint64] */;
  %158 = @func_3379(%157) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) */;
  %159 = %155.0;
  %160 = %158.2;
  (%159, %160, %var_8924)
}

def @func_3180(%var_3169: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) {
  %161 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %162 = %161.1;
  %163 = cast(%var_3169, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(2), int32] */;
  %165 = cast(%162, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %167 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %168 = logical_or(%165, %166) /* ty=Tensor[(3, 40), bool] */;
  (%167, %168)
}

def @func_10480() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %169 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %170 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %171 = %169.0;
  %172 = %170.0;
  (%171, %172)
}

def @func_2449() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) {
  %173 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %174 = %173.5;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %176 = erf(%175) /* ty=Tensor[(3, 40), float32] */;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %178 = sin(%177) /* ty=Tensor[(3, 40), float64] */;
  %179 = cast(%176, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(2), int32] */;
  %181 = cast(%178, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %183 = cast(%174, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %184 = shape_of(%176, dtype="int32") /* ty=Tensor[(2), int32] */;
  %185 = cast(%176, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %187 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %188 = floor_divide(%181, %182) /* ty=Tensor[(3, 40), float32] */;
  %189 = less(%185, %186) /* ty=Tensor[(3, 40), bool] */;
  (%187, %188, %189)
}

def @func_7259(%var_7238: Tensor[(8, 11, 13), float64]) -> (Tensor[(8, 11, 13), float64], Tensor[(16, 12, 10), bool]) {
  %190 = cast(%var_7238, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %191 = @func_4498() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) */;
  %192 = sin(%190) /* ty=Tensor[(8, 11, 13), float64] */;
  %193 = %191.1;
  (%192, %193)
}

def @func_10968() -> Tensor[(2, 11, 5), float64] {
  %194 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
  %195 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%196, %197) /* ty=Tensor[(2, 11, 5), float64] */
}

def @func_8149() -> Tensor[(16, 12, 10), float64] {
  %198 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %198.0
}

def @func_965() -> (Tensor[(16, 12, 10), bool],) {
  %199 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %200 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 12, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%199, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %204 = greater_equal(%202, %203) /* ty=Tensor[(16, 12, 10), bool] */;
  (%204,)
}

def @func_190(%var_141: Tensor[(11, 7, 9), bool], %var_142: Tensor[(11, 7, 9), bool], %var_187: Tensor[(840), int16]) -> (Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) {
  %205 = cast(%var_142, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %206 = shape_of(%var_141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_141, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = cast(%var_141, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %210 = log2(%209) /* ty=Tensor[(11, 7, 9), float64] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %212 = cast(%210, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %213 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 40), int16] */, dtype="int16") /* ty=Tensor[(3, 40), int16] */;
  %214 = cast(%var_187, dtype="int16") /* ty=Tensor[(840), int16] */;
  %215 = reshape(%213, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %216 = reshape(%214, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %217 = logical_and(%207, %208) /* ty=Tensor[(11, 7, 9), bool] */;
  %218 = exp(%211) /* ty=Tensor[(11, 7, 9), float64] */;
  %219 = acos(%212) /* ty=Tensor[(11, 7, 9), float64] */;
  %220 = @func_19(%215, %216) /* ty=Tensor[(7, 15, 8), int16] */;
  (%217, %218, %219, %220, meta[relay.Constant][8] /* ty=Tensor[(3, 40), int16] */, %var_187)
}

def @func_6718(%var_6695: Tensor[(16, 3, 9), bool], %var_6696: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(16, 3, 9), int8]) {
  %221 = cast(%var_6696, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %222 = shape_of(%var_6695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_6695, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %225 = cast(%var_6695, dtype="int8") /* ty=Tensor[(16, 3, 9), int8] */;
  %226 = shape_of(%var_6696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6696, dtype="int8") /* ty=Tensor[(16, 3, 9), int8] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %229 = logical_or(%223, %224) /* ty=Tensor[(16, 3, 9), bool] */;
  %230 = add(%227, %228) /* ty=Tensor[(16, 3, 9), int8] */;
  (%229, %230)
}

def @func_2943(%var_2921: int64) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) {
  %231 = cast(%var_2921, dtype="int64") /* ty=int64 */;
  %232 = cast(meta[relay.Constant][9] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %233 = reshape(%231, newshape=[]) /* ty=int64 */;
  %234 = reshape(%232, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %235 = @func_2086(%233, %234) /* ty=(Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %236 = %235.3;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %238 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %239 = asin(%237) /* ty=Tensor[(360, 1), float64] */;
  (%238, %var_2921, meta[relay.Constant][9] /* ty=Tensor[(840), int16] */, %239)
}

def @func_3753() -> Tensor[(16, 12, 10), float32] {
  @func_1218() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_8964() -> (Tensor[(11, 3, 8), float64],) {
  %240 = @func_7317() /* ty=(Tensor[(11, 3, 8), float64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_7477() -> (Tensor[(16, 12, 10), float64],) {
  %242 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %243 = %242.0;
  (%243,)
}

def @func_8308() -> Tensor[(16, 12, 10), float64] {
  @func_4902() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_6389() -> Tensor[(9, 2, 8), float64] {
  %244 = @func_4756() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %244.0
}

def @func_4399() -> Tensor[(16, 12, 10), float64] {
  %245 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %245.0
}

def @func_6166() -> (Tensor[(16, 12, 10), float32],) {
  %246 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %247 = %246.0;
  (%247,)
}

def @func_8012() -> (Tensor[(16, 12, 10), float64],) {
  %248 = @func_6637() /* ty=Tensor[(16, 12, 10), float64] */;
  (%248,)
}

def @func_9237(%var_9219: Tensor[(360, 1), int64], %var_9220: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) {
  %249 = @func_4394() /* ty=Tensor[(16, 12, 10), bool] */;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %251 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %252 = cast(%var_9219, dtype="int64") /* ty=Tensor[(360, 1), int64] */;
  %253 = cast(%var_9220, dtype="float64") /* ty=Tensor[(9), float64] */;
  %254 = cast(meta[relay.Constant][10] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %255 = reshape(%251, newshape=[]) /* ty=int64 */;
  %256 = reshape(%252, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
  %257 = reshape(%253, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %258 = reshape(%254, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %259 = @func_671(%255, %256, %257, %258) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %260 = cast(%249, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %261 = reshape(%260, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float32] */;
  %262 = @func_6020(%261) /* ty=(Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) */;
  %263 = atan(%250) /* ty=Tensor[(16, 12, 10), float32] */;
  %264 = @func_8060() /* ty=Tensor[(16, 12, 10), float32] */;
  %265 = %259.3;
  %266 = %262.1;
  (%263, %264, %265, -5 /* ty=int64 */, %var_9219, %var_9220, meta[relay.Constant][10] /* ty=Tensor[(840), int16] */, %266)
}

def @func_124(%var_111: Tensor[(12, 10, 16), bool]) -> (Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) {
  %267 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 120), int16] */, dtype="int16") /* ty=Tensor[(1, 120), int16] */;
  %268 = cast(meta[relay.Constant][12] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %269 = reshape(%267, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %270 = reshape(%268, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %272 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = not_equal(%273, %274) /* ty=Tensor[(12, 10, 16), bool] */;
  %276 = cast(%var_111, dtype="uint64") /* ty=Tensor[(12, 10, 16), uint64] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="uint64") /* ty=Tensor[(12, 10, 16), uint64] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %280 = @func_19(%269, %270) /* ty=Tensor[(7, 15, 8), int16] */;
  %281 = bitwise_xor(%278, %279) /* ty=Tensor[(12, 10, 16), uint64] */;
  (%280, meta[relay.Constant][11] /* ty=Tensor[(1, 120), int16] */, meta[relay.Constant][12] /* ty=Tensor[(840), int16] */, %281)
}

def @func_1218() -> Tensor[(16, 12, 10), float32] {
  @func_999() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_4394() -> Tensor[(16, 12, 10), bool] {
  %282 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %282.0
}

def @func_10684() -> (Tensor[(16, 12, 10), float32],) {
  %283 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %284 = %283.0;
  (%284,)
}

def @func_6637() -> Tensor[(16, 12, 10), float64] {
  @func_4399() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_6831(%var_6781: Tensor[(3, 40), int16], %var_6821: Tensor[(3, 40), float64]) -> (Tensor[(3, 40), float32], Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool], Tensor[(360, 1), float64], int64) {
  %285 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %286 = %285.1;
  %287 = cast(%var_6781, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %289 = cast(%286, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %291 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 40), int16] */, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %292 = shape_of(%286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %293 = cast(%286, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %295 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 40), int16] */, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %296 = shape_of(%286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %297 = cast(%286, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %299 = add(%297, %298) /* ty=Tensor[(3, 40), float64] */;
  %300 = cast(%var_6821, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(2), int32] */;
  %302 = cast(%299, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %304 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %305 = reshape(%304, newshape=[]) /* ty=int64 */;
  %306 = @func_2943(%305) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) */;
  %307 = power(%289, %290) /* ty=Tensor[(3, 40), float32] */;
  %308 = bitwise_xor(%293, %294) /* ty=Tensor[(3, 40), uint8] */;
  %309 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %310 = logical_and(%302, %303) /* ty=Tensor[(3, 40), bool] */;
  %311 = %306.3;
  (%307, %308, %309, %310, %311, -5 /* ty=int64 */)
}

def @func_3601(%var_3589: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float32]) {
  %312 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %315 = asin(%314) /* ty=Tensor[(3, 40), float32] */;
  %316 = cast(%var_3589, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(2), int32] */;
  %318 = cast(%315, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %320 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %321 = maximum(%318, %319) /* ty=Tensor[(3, 40), uint8] */;
  %322 = %320.0;
  (%321, %322)
}

def @func_9385(%var_9369: int32) -> (Tensor[(13, 13, 3), bool], Tensor[(11, 3, 8), float64], Tensor[(66, 4), float64]) {
  %323 = cast(%var_9369, dtype="bool") /* ty=bool */;
  %324 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
  %325 = cast(meta[relay.Constant][17] /* ty=Tensor[(66, 4), float64] */, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
  %326 = cast(meta[relay.Constant][17] /* ty=Tensor[(66, 4), float64] */, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
  %327 = reshape(%325, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %328 = reshape(%326, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %329 = @func_2496(%327, %328) /* ty=(Tensor[(11, 3, 8), float64],) */;
  %330 = greater_equal(%323, %324) /* ty=Tensor[(13, 13, 3), bool] */;
  %331 = %329.0;
  (%330, %331, meta[relay.Constant][17] /* ty=Tensor[(66, 4), float64] */)
}

def @func_8698(%var_8693: Tensor[(10, 13, 3), int32]) -> (Tensor[(10, 13, 3), int32],) {
  %332 = cast(%var_8693, dtype="int32") /* ty=Tensor[(10, 13, 3), int32] */;
  %333 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(10, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(10, 13, 3), int32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %336 = left_shift(%334, %335) /* ty=Tensor[(10, 13, 3), int32] */;
  (%336,)
}

def @func_4780() -> Tensor[(16, 12, 10), float64] {
  @func_1873() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_4701(%var_4682: Tensor[(3, 15, 7), int32]) -> (Tensor[(3, 15, 7), bool],) {
  %337 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 15, 7), int32] */, dtype="bool") /* ty=Tensor[(3, 15, 7), bool] */;
  %338 = shape_of(%var_4682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_4682, dtype="bool") /* ty=Tensor[(3, 15, 7), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %341 = less(%339, %340) /* ty=Tensor[(3, 15, 7), bool] */;
  (%341,)
}

def @func_9907(%var_9866: Tensor[(105, 3), int32]) -> (Tensor[(7, 10, 9), bool], Tensor[(105, 3), float32]) {
  %342 = @func_8568() /* ty=(Tensor[(7, 10, 9), bool],) */;
  %343 = cast(%var_9866, dtype="int32") /* ty=Tensor[(105, 3), int32] */;
  %344 = reshape(%343, newshape=[3, 15, 7]) /* ty=Tensor[(3, 15, 7), int32] */;
  %345 = @func_4701(%344) /* ty=(Tensor[(3, 15, 7), bool],) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="float32") /* ty=Tensor[(3, 15, 7), float32] */;
  %348 = shape_of(%var_9866, dtype="int32") /* ty=Tensor[(2), int32] */;
  %349 = cast(%var_9866, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %351 = %342.0;
  %352 = floor_mod(%349, %350) /* ty=Tensor[(105, 3), float32] */;
  (%351, %352)
}

def @func_4051() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
  %353 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %354 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %355 = %353.2;
  %356 = %354.1;
  (%355, %356)
}

def @func_2722(%var_2667: Tensor[(16, 12, 10), float64], %var_2715: Tensor[(693), bool], %var_2716: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) {
  %357 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %358 = cast(%var_2667, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %362 = less(%360, %361) /* ty=Tensor[(16, 12, 10), bool] */;
  %363 = cast(%362, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %364 = shape_of(%var_2667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_2667, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %367 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %368 = %367.0;
  %369 = cast(%368, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %370 = cast(%var_2667, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %371 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %372 = reshape(%370, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
  %373 = reshape(%371, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %374 = @func_1410(%372, %373) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
  %375 = %374.2;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(3, 1, 3), float32] */;
  %377 = cast(%var_2715, dtype="bool") /* ty=Tensor[(693), bool] */;
  %378 = cast(%var_2715, dtype="bool") /* ty=Tensor[(693), bool] */;
  %379 = cast(%var_2716, dtype="int16") /* ty=Tensor[(840), int16] */;
  %380 = reshape(%377, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %381 = reshape(%378, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %382 = reshape(%379, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %383 = @func_190(%380, %381, %382) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %384 = floor_mod(%365, %366) /* ty=Tensor[(16, 12, 10), float32] */;
  %385 = asinh(%369) /* ty=Tensor[(3, 40), float32] */;
  %386 = tan(%376) /* ty=Tensor[(3, 1, 3), float32] */;
  %387 = %383.2;
  (%384, meta[relay.Constant][20] /* ty=Tensor[(105), int64] */, %385, %386, %387, %var_2715, %var_2716)
}

def @func_4676() -> (Tensor[(16, 12, 10), uint64],) {
  %388 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %389 = %388.2;
  (%389,)
}

def @func_4293() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) {
  %390 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %391 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %392 = %390.3;
  (%391, %392)
}

def @func_9057() -> (Tensor[(7, 15, 8), int16], Tensor[(16, 8, 7), bool], Tensor[(896), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(5, 7, ?), float32]) {
  %393 = @func_6609() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) */;
  %394 = cast(meta[relay.Constant][21] /* ty=Tensor[(896), float32] */, dtype="float32") /* ty=Tensor[(896), float32] */;
  %395 = reshape(%394, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), float32] */;
  %396 = cast(meta[relay.Constant][22] /* ty=Tensor[(35), uint64] */, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %397 = reshape(%396, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
  %398 = @func_1355(%397) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
  %399 = %398.0;
  %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(35), uint64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%399, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %404 = floor_mod(%402, %403) /* ty=Tensor[(5, 7, ?), float64] */;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(5, 7, ?), float32] */;
  %406 = %393.2;
  %407 = @func_7077(%395) /* ty=Tensor[(16, 8, 7), bool] */;
  %408 = @func_4854() /* ty=Tensor[(16, 12, 10), bool] */;
  %409 = @func_6742() /* ty=Tensor[(16, 12, 10), float32] */;
  %410 = @func_8060() /* ty=Tensor[(16, 12, 10), float32] */;
  %411 = exp(%405) /* ty=Tensor[(5, 7, ?), float32] */;
  (%406, %407, meta[relay.Constant][21] /* ty=Tensor[(896), float32] */, %408, %409, %410, %411)
}

def @func_4191() -> (Tensor[(16, 12, 10), float32],) {
  %412 = @func_3309() /* ty=Tensor[(16, 12, 10), float32] */;
  (%412,)
}

def @func_3267() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %413 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %414 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %415 = %413.0;
  %416 = %414.0;
  (%415, %416)
}

def @func_1710(%var_1672: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) {
  %417 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %418 = cast(%var_1672, dtype="int16") /* ty=Tensor[(120), int16] */;
  %419 = cast(meta[relay.Constant][23] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %420 = reshape(%418, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %421 = reshape(%419, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %422 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %423 = %417.0;
  %424 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  %425 = @func_19(%420, %421) /* ty=Tensor[(7, 15, 8), int16] */;
  %426 = %422.0;
  (%423, %424, %425, %var_1672, meta[relay.Constant][23] /* ty=Tensor[(840), int16] */, %426)
}

def @func_3805(%var_3766: Tensor[(4, 5, 12), int8], %var_3767: Tensor[(4, 5, 12), int8]) -> (Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) {
  %427 = cast(%var_3767, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %428 = shape_of(%var_3766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_3766, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %432 = greater_equal(%429, %430) /* ty=Tensor[(4, 5, 12), bool] */;
  %433 = %431.0;
  (%432, %433)
}

def @func_1190(%var_1155: Tensor[(3, 5, 7), int64], %var_1156: Tensor[(3, 5, 7), int64], %var_1170: Tensor[(3, 5, 7), int64]) -> (Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) {
  %434 = cast(%var_1156, dtype="int64") /* ty=Tensor[(3, 5, 7), int64] */;
  %435 = shape_of(%var_1155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%var_1155, dtype="int64") /* ty=Tensor[(3, 5, 7), int64] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %438 = cast(%var_1156, dtype="float64") /* ty=Tensor[(3, 5, 7), float64] */;
  %439 = cast(%var_1170, dtype="float32") /* ty=Tensor[(3, 5, 7), float32] */;
  %440 = shape_of(%var_1155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_1155, dtype="float32") /* ty=Tensor[(3, 5, 7), float32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %443 = cast(meta[relay.Constant][24] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %444 = cast(meta[relay.Constant][24] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %445 = reshape(%443, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %446 = reshape(%444, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %447 = @func_1103(%445, %446) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %448 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %449 = cast(meta[relay.Constant][26] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %450 = %447.1;
  %451 = cast(%450, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
  %452 = reshape(%448, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %453 = reshape(%449, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %454 = reshape(%451, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %455 = @func_353(%452, %453, %454) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %456 = bitwise_and(%436, %437) /* ty=Tensor[(3, 5, 7), int64] */;
  %457 = sin(%438) /* ty=Tensor[(3, 5, 7), float64] */;
  %458 = floor_divide(%441, %442) /* ty=Tensor[(3, 5, 7), float32] */;
  %459 = %455.0;
  (%456, %457, %458, %450, meta[relay.Constant][24] /* ty=Tensor[(693), bool] */, %459, meta[relay.Constant][25] /* ty=Tensor[(3, 3), float64] */, meta[relay.Constant][26] /* ty=Tensor[(120), int16] */)
}

def @func_1598(%var_1587: Tensor[(8, 12, 7), float64], %var_1596: Tensor[(105), int64]) -> (Tensor[(8, 12, 7), float64], Tensor[(105), int64], Tensor[(1920), bool], Tensor[(105), int64]) {
  %460 = cast(%var_1587, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %461 = cast(meta[relay.Constant][27] /* ty=Tensor[(1920), bool] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %462 = cast(%var_1596, dtype="int64") /* ty=Tensor[(105), int64] */;
  %463 = reshape(%461, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
  %464 = reshape(%462, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %465 = @func_1410(%463, %464) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
  %466 = log2(%460) /* ty=Tensor[(8, 12, 7), float64] */;
  %467 = %465.3;
  (%466, %467, meta[relay.Constant][27] /* ty=Tensor[(1920), bool] */, %var_1596)
}

def @func_6188(%var_6173: uint16) -> (Tensor[(4, 13, 1), uint16], Tensor[(16, 12, 10), bool], Tensor[(35), uint64], Tensor[(16, 12, 10), float32]) {
  %468 = cast(%var_6173, dtype="uint16") /* ty=uint16 */;
  %469 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 13, 1), uint16] */, dtype="uint16") /* ty=Tensor[(4, 13, 1), uint16] */;
  %470 = cast(meta[relay.Constant][29] /* ty=Tensor[(35), uint64] */, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %471 = reshape(%470, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
  %472 = @func_1355(%471) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
  %473 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %474 = bitwise_and(%468, %469) /* ty=Tensor[(4, 13, 1), uint16] */;
  %475 = %472.2;
  %476 = %473.0;
  (%474, %475, meta[relay.Constant][29] /* ty=Tensor[(35), uint64] */, %476)
}

def @func_1813() -> (Tensor[(3, 40), float32],) {
  %477 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %478 = %477.0;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %480 = acosh(%479) /* ty=Tensor[(3, 40), float32] */;
  (%480,)
}

def @func_4317() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
  %481 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %482 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %483 = %481.0;
  %484 = %482.0;
  (%483, %484)
}

def @func_5020() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  %485 = @func_4293() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) */;
  %486 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %487 = cast(meta[relay.Constant][30] /* ty=Tensor[(120, 1), int16] */, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %488 = reshape(%487, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %489 = @func_1710(%488) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) */;
  %490 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %491 = reshape(%490, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %492 = %485.0;
  %493 = %486.0;
  %494 = %489.3;
  %495 = @func_2017(%491) /* ty=Tensor[(8, 2, 15), float32] */;
  (%492, %493, %494, meta[relay.Constant][30] /* ty=Tensor[(120, 1), int16] */, %495, meta[relay.Constant][31] /* ty=Tensor[(240), float32] */)
}

def @func_7077(%var_7050: Tensor[(16, 8, 7), float32]) -> Tensor[(16, 8, 7), bool] {
  %496 = cast(%var_7050, dtype="float32") /* ty=Tensor[(16, 8, 7), float32] */;
  %497 = atan(%496) /* ty=Tensor[(16, 8, 7), float32] */;
  %498 = cast(%497, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
  %499 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_7050, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%500, %501) /* ty=Tensor[(16, 8, 7), bool] */
}

def @func_3477() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %502 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %503 = %502.4;
  %504 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%503, %504)
}

def @func_4756() -> (Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %505 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
  %506 = @func_3942() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %507 = asin(%505) /* ty=Tensor[(9, 2, 8), float64] */;
  %508 = %506.1;
  %509 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  (%507, %508, %509)
}

def @func_1462() -> (Tensor[(3, 40), int16],) {
  %510 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %511 = %510.5;
  (%511,)
}

def @func_8060() -> Tensor[(16, 12, 10), float32] {
  @func_3318() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_5802() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %512 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %513 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %514 = %512.1;
  %515 = %513.1;
  (%514, %515)
}

def @func_5419() -> Tensor[(16, 12, 10), float32] {
  %516 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %516.0
}

def @func_10034(%var_10015: Tensor[(7, 99), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 99), bool], Tensor[(840), int16], Tensor[(8, 7, 5), float64], Tensor[(280), float64]) {
  %517 = cast(%var_10015, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %518 = cast(%var_10015, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %519 = cast(meta[relay.Constant][33] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %520 = reshape(%517, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %521 = reshape(%518, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %522 = reshape(%519, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %523 = @func_190(%520, %521, %522) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %524 = cast(meta[relay.Constant][34] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %525 = reshape(%524, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float64] */;
  %526 = @func_6637() /* ty=Tensor[(16, 12, 10), float64] */;
  %527 = %523.2;
  %528 = @func_9364(%525) /* ty=Tensor[(8, 7, 5), float64] */;
  (%526, %527, %var_10015, meta[relay.Constant][33] /* ty=Tensor[(840), int16] */, %528, meta[relay.Constant][34] /* ty=Tensor[(280), float64] */)
}

def @func_6742() -> Tensor[(16, 12, 10), float32] {
  %529 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %529.2
}

def @func_8110() -> (Tensor[(693), bool], Tensor[(120), int16], Tensor[(120), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float64]) {
  %530 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
  %531 = cast(meta[relay.Constant][35] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %532 = cast(meta[relay.Constant][36] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %533 = reshape(%531, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %534 = reshape(%532, newshape=[105, 1]) /* ty=Tensor[(105, 1), int64] */;
  %535 = @func_6347(%533, %534) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) */;
  %536 = %530.3;
  %537 = %535.5;
  %538 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%536, %537, meta[relay.Constant][35] /* ty=Tensor[(120), int16] */, meta[relay.Constant][36] /* ty=Tensor[(105), int64] */, %538)
}

def @func_6347(%var_6301: Tensor[(120), int16], %var_6334: Tensor[(105, 1), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) {
  %539 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %540 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %541 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %542 = cast(%var_6301, dtype="int16") /* ty=Tensor[(120), int16] */;
  %543 = reshape(%542, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %544 = @func_1710(%543) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) */;
  %545 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %546 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %547 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %548 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %549 = reshape(%546, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %550 = reshape(%547, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %551 = reshape(%548, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %552 = @func_1190(%549, %550, %551) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %553 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %554 = @func_4854() /* ty=Tensor[(16, 12, 10), bool] */;
  %555 = %539.0;
  %556 = %540.0;
  %557 = %541.3;
  %558 = %544.2;
  %559 = %545.1;
  %560 = %552.1;
  %561 = %553.2;
  (%554, %555, %556, %557, %558, %var_6301, %559, %560, %var_6334, %561)
}

def @func_10082() -> (Tensor[(16, 12, 10), float32],) {
  %562 = @func_6166() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %563 = %562.0;
  (%563,)
}

def @func_11085(%var_11037: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), bool], Tensor[(16, 12, 10), float32], Tensor[(10, 13, 3), int32], Tensor[(390), int32], Tensor[(16, 8, 7), bool], Tensor[(896), float32]) {
  %564 = cast(%var_11037, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %565 = sinh(%564) /* ty=Tensor[(12, 3, 6), float64] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %567 = sigmoid(%566) /* ty=Tensor[(12, 3, 6), float32] */;
  %568 = cast(%565, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %572 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %573 = cast(meta[relay.Constant][37] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %574 = reshape(%573, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %575 = @func_8698(%574) /* ty=(Tensor[(10, 13, 3), int32],) */;
  %576 = cast(meta[relay.Constant][38] /* ty=Tensor[(896), float32] */, dtype="float32") /* ty=Tensor[(896), float32] */;
  %577 = reshape(%576, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), float32] */;
  %578 = logical_and(%570, %571) /* ty=Tensor[(12, 3, 6), bool] */;
  %579 = %572.0;
  %580 = %575.0;
  %581 = @func_7077(%577) /* ty=Tensor[(16, 8, 7), bool] */;
  (%578, %579, %580, meta[relay.Constant][37] /* ty=Tensor[(390), int32] */, %581, meta[relay.Constant][38] /* ty=Tensor[(896), float32] */)
}

def @func_3704(%var_3666: Tensor[(840), int16], %var_3693: Tensor[(231, 3), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) {
  %582 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %583 = cast(%582, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %584 = cast(meta[relay.Constant][39] /* ty=Tensor[(231, 3), bool] */, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %585 = cast(%var_3666, dtype="int16") /* ty=Tensor[(840), int16] */;
  %586 = reshape(%583, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %587 = reshape(%584, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %588 = reshape(%585, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %589 = @func_2722(%586, %587, %588) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) */;
  %590 = cast(meta[relay.Constant][39] /* ty=Tensor[(231, 3), bool] */, dtype="float32") /* ty=Tensor[(231, 3), float32] */;
  %591 = erf(%590) /* ty=Tensor[(231, 3), float32] */;
  %592 = cast(%var_3693, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(2), int32] */;
  %594 = cast(%591, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %596 = cast(%591, dtype="float64") /* ty=Tensor[(231, 3), float64] */;
  %597 = %589.2;
  %598 = greater_equal(%594, %595) /* ty=Tensor[(231, 3), bool] */;
  %599 = sigmoid(%596) /* ty=Tensor[(231, 3), float64] */;
  (%582, %597, %var_3666, %598, %599)
}

def @func_999() -> Tensor[(16, 12, 10), float32] {
  %600 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  log10(%602) /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_4271() -> Tensor[(16, 12, 10), float64] {
  %603 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %603.1
}

def @func_8664(%var_8655: Tensor[(11, 13, 14), int32], %var_8662: Tensor[(9), float64]) -> (Tensor[(11, 13, 14), int32], Tensor[(16, 12, 10), uint8], Tensor[(1920), float64], Tensor[(9), float64]) {
  %604 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 13, 14), int32] */, dtype="int32") /* ty=Tensor[(11, 13, 14), int32] */;
  %605 = shape_of(%var_8655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%var_8655, dtype="int32") /* ty=Tensor[(11, 13, 14), int32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %608 = cast(meta[relay.Constant][41] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %609 = cast(%var_8662, dtype="float64") /* ty=Tensor[(9), float64] */;
  %610 = reshape(%608, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %611 = reshape(%609, newshape=[3, 3]) /* ty=Tensor[(3, 3), float64] */;
  %612 = @func_6910(%610, %611) /* ty=(Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %613 = maximum(%606, %607) /* ty=Tensor[(11, 13, 14), int32] */;
  %614 = %612.0;
  (%613, %614, meta[relay.Constant][41] /* ty=Tensor[(1920), float64] */, %var_8662)
}

def @func_5136(%var_5128: int64, %var_5129: Tensor[(360), int64]) -> (Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) {
  %615 = @func_4317() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %616 = cast(%var_5128, dtype="int64") /* ty=int64 */;
  %617 = cast(%var_5129, dtype="int64") /* ty=Tensor[(360), int64] */;
  %618 = reshape(%616, newshape=[]) /* ty=int64 */;
  %619 = reshape(%617, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %620 = @func_1576(%618, %619) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %621 = %615.1;
  %622 = %620.0;
  (%621, %622, %var_5128, %var_5129)
}

def @func_3309() -> Tensor[(16, 12, 10), float32] {
  %623 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %623.0
}

def @func_2787() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) {
  %624 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %625 = cast(meta[relay.Constant][42] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %626 = cast(meta[relay.Constant][42] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %627 = reshape(%625, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %628 = reshape(%626, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %629 = @func_2496(%627, %628) /* ty=(Tensor[(11, 3, 8), float64],) */;
  %630 = cast(meta[relay.Constant][43] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %631 = reshape(%630, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %632 = @func_2247(%631) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) */;
  %633 = %624.0;
  %634 = %629.0;
  %635 = %632.1;
  (%633, %634, meta[relay.Constant][42] /* ty=Tensor[(264), float64] */, %635, meta[relay.Constant][43] /* ty=Tensor[(693), bool] */)
}

def @func_5553() -> Tensor[(16, 12, 10), float64] {
  @func_909() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_5660(%var_5646: uint16, %var_5647: Tensor[(8, 7, 9), uint16]) -> (Tensor[(8, 7, 9), uint16],) {
  %636 = cast(%var_5646, dtype="uint16") /* ty=uint16 */;
  %637 = cast(%var_5647, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
  %638 = left_shift(%636, %637) /* ty=Tensor[(8, 7, 9), uint16] */;
  (%638,)
}

def @func_2813() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
  %639 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %640 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
  %641 = %639.0;
  %642 = %640.1;
  %643 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  (%641, %642, %643)
}

def @func_8338() -> Tensor[(16, 12, 10), float32] {
  %644 = @func_7447() /* ty=(Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) */;
  %644.1
}

def @func_5298() -> (Tensor[(16, 12, 10), float32],) {
  %645 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
  (%645,)
}

def @func_10326() -> (Tensor[(16, 12, 10), float64],) {
  %646 = @func_5298() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %649 = asin(%648) /* ty=Tensor[(16, 12, 10), float64] */;
  (%649,)
}

def @func_9317() -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], int64, int64, int64, Tensor[(16, 12, 10), float64]) {
  %650 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %651 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %652 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %653 = reshape(%652, newshape=[]) /* ty=int64 */;
  %654 = @func_2943(%653) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) */;
  %655 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %656 = reshape(%655, newshape=[]) /* ty=int64 */;
  %657 = @func_5718(%656) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) */;
  %658 = @func_4394() /* ty=Tensor[(16, 12, 10), bool] */;
  %659 = %650.0;
  %660 = %651.0;
  %661 = %654.1;
  %662 = %657.4;
  %663 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%658, %659, %660, %661, -5 /* ty=int64 */, %662, %663)
}

def @func_5187(%var_5170: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16]) {
  %664 = @func_2550() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %665 = cast(%var_5170, dtype="int16") /* ty=Tensor[(120), int16] */;
  %666 = reshape(%665, newshape=[3, 40]) /* ty=Tensor[(3, 40), int16] */;
  %667 = @func_1788(%666) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) */;
  %668 = %664.0;
  %669 = %667.0;
  (%668, %669, %var_5170)
}

def @func_8795() -> (Tensor[(16, 12, 10), float32], int64, int64, Tensor[(1, 105), int64]) {
  %670 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %671 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 105), int64] */, dtype="int64") /* ty=Tensor[(1, 105), int64] */;
  %672 = reshape(%670, newshape=[]) /* ty=int64 */;
  %673 = reshape(%671, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %674 = @func_7301(%672, %673) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) */;
  %675 = @func_6198() /* ty=Tensor[(16, 12, 10), float32] */;
  %676 = %674.2;
  (%675, %676, 10 /* ty=int64 */, meta[relay.Constant][44] /* ty=Tensor[(1, 105), int64] */)
}

def @func_6540(%var_6453: int64, %var_6458: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %677 = cast(meta[relay.Constant][45] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %678 = cast(%var_6453, dtype="int64") /* ty=int64 */;
  %679 = reshape(%677, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %680 = reshape(%678, newshape=[]) /* ty=int64 */;
  %681 = @func_5062(%679, %680) /* ty=(Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) */;
  %682 = cast(%var_6458, dtype="int64") /* ty=Tensor[(105), int64] */;
  %683 = cast(meta[relay.Constant][45] /* ty=Tensor[(240), float32] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %684 = reshape(%682, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %685 = reshape(%683, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %686 = @func_5890(%684, %685) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) */;
  %687 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %688 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %689 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %690 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %691 = %681.2;
  %692 = %686.2;
  %693 = %687.0;
  %694 = %688.1;
  %695 = %689.1;
  (%690, %691, meta[relay.Constant][45] /* ty=Tensor[(240), float32] */, %var_6453, %692, %var_6458, %693, %694, %695)
}

def @func_2496(%var_2475: Tensor[(11, 3, 8), float64], %var_2476: Tensor[(11, 3, 8), float64]) -> (Tensor[(11, 3, 8), float64],) {
  %696 = cast(%var_2476, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %697 = shape_of(%var_2475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%var_2475, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %700 = floor_divide(%698, %699) /* ty=Tensor[(11, 3, 8), float64] */;
  (%700,)
}

def @func_1614() -> (Tensor[(16, 12, 10), float64],) {
  %701 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%701,)
}

def @func_3999() -> (Tensor[(16, 12, 10), float32],) {
  %702 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%702,)
}

def @func_4498() -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) {
  %703 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %704 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %705 = %703.0;
  %706 = %704.0;
  (%705, %706)
}

def @func_7103() -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) {
  %707 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
  %708 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %709 = @func_4902() /* ty=Tensor[(16, 12, 10), float64] */;
  %710 = %707.4;
  %711 = %708.0;
  (%709, %710, %711)
}

def @func_10213(%var_10210: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), bool], Tensor[(9), float64], Tensor[(360), int64], Tensor[(9), float64]) {
  %712 = @func_8049() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %713 = cast(meta[relay.Constant][46] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %714 = cast(%var_10210, dtype="float64") /* ty=Tensor[(9), float64] */;
  %715 = reshape(%713, newshape=[360, 1]) /* ty=Tensor[(360, 1), int64] */;
  %716 = reshape(%714, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %717 = @func_9237(%715, %716) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) */;
  %718 = %712.0;
  %719 = %717.5;
  (%718, %719, meta[relay.Constant][46] /* ty=Tensor[(360), int64] */, %var_10210)
}

def @func_10902() -> Tensor[(240), float32] {
  @func_8549() /* ty=Tensor[(240), float32] */
}

def @func_1576(%var_1567: int64, %var_1568: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) {
  %720 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %721 = cast(%var_1567, dtype="int64") /* ty=int64 */;
  %722 = cast(%var_1568, dtype="int64") /* ty=Tensor[(360), int64] */;
  %723 = cast(meta[relay.Constant][47] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %725 = reshape(%721, newshape=[]) /* ty=int64 */;
  %726 = reshape(%722, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
  %727 = reshape(%723, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %728 = reshape(%724, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %729 = @func_671(%725, %726, %727, %728) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %730 = %720.0;
  %731 = %729.4;
  (%730, %731, %var_1567, %var_1568, meta[relay.Constant][47] /* ty=Tensor[(9), float64] */, meta[relay.Constant][48] /* ty=Tensor[(840), int16] */)
}

def @func_7610(%var_7567: Tensor[(7, 15, 2), float32]) -> Tensor[(7, 15, 2), float32] {
  %732 = cast(%var_7567, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
  erf(%732) /* ty=Tensor[(7, 15, 2), float32] */
}

def @func_4902() -> Tensor[(16, 12, 10), float64] {
  @func_1873() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8388() -> Tensor[(240), float32] {
  %733 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
  %733.1
}

def @func_9634() -> (Tensor[(16, 12, 10), float64],) {
  %734 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%734,)
}

def @func_8413(%var_8394: Tensor[(3, 6, 4), float32], %var_8406: Tensor[(3, 6, 4), float32]) -> (Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) {
  %735 = cast(%var_8394, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
  %736 = erf(%735) /* ty=Tensor[(3, 6, 4), float32] */;
  %737 = cast(%var_8394, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = cast(%var_8406, dtype="int16") /* ty=Tensor[(3, 6, 4), int16] */;
  %742 = shape_of(%var_8394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%var_8394, dtype="int16") /* ty=Tensor[(3, 6, 4), int16] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %745 = equal(%739, %740) /* ty=Tensor[(3, 6, 4), bool] */;
  %746 = bitwise_and(%743, %744) /* ty=Tensor[(3, 6, 4), int16] */;
  (%745, %746)
}

def @func_10148() -> (Tensor[(16, 12, 10), float32],) {
  %747 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %748 = %747.1;
  (%748,)
}

def @func_1410(%var_1384: Tensor[(1920), bool], %var_1388: Tensor[(105), int64]) -> (Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) {
  %749 = cast(%var_1384, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %750 = reshape(%749, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
  %751 = @func_124(%750) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
  %752 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
  %753 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
  %754 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
  %755 = reshape(%752, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %756 = reshape(%753, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %757 = reshape(%754, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %758 = @func_1190(%755, %756, %757) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %759 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %760 = sin(%759) /* ty=Tensor[(6, 1, 16), float32] */;
  %761 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 1, 16), float32] */, dtype="int16") /* ty=Tensor[(6, 1, 16), int16] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="int16") /* ty=Tensor[(6, 1, 16), int16] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %765 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %766 = %751.2;
  %767 = %758.5;
  %768 = logical_xor(%763, %764) /* ty=Tensor[(6, ?, 16), int16] */;
  %769 = %765.1;
  (%766, %var_1384, %767, %var_1388, %768, %769)
}

def @func_8647() -> Tensor[(16, 12, 10), float32] {
  @func_6742() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_1915() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %770 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %771 = %770.4;
  %772 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  (%771, %772)
}

def @func_8294() -> (Tensor[(16, 12, 10), float32],) {
  %773 = @func_7197() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) */;
  %774 = %773.0;
  (%774,)
}

def @func_6020(%var_5972: Tensor[(16, 12, 10), float32]) -> (Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) {
  %775 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  %776 = cast(%var_5972, dtype="int32") /* ty=Tensor[(16, 12, 10), int32] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="int32") /* ty=Tensor[(16, 12, 10), int32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %780 = cast(meta[relay.Constant][50] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %781 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %782 = reshape(%780, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %783 = reshape(%781, newshape=[240]) /* ty=Tensor[(240), int8] */;
  %784 = @func_5890(%782, %783) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) */;
  %785 = logical_xor(%778, %779) /* ty=Tensor[(16, 12, 10), int32] */;
  %786 = %784.4;
  (%785, %786, meta[relay.Constant][50] /* ty=Tensor[(105), int64] */, meta[relay.Constant][51] /* ty=Tensor[(240), int8] */)
}

def @func_10541(%var_10492: int64, %var_10493: Tensor[(105), int64], %var_10538: Tensor[(840, 1), int16]) -> (int64, int64, int64, Tensor[(36, 10), int64], Tensor[(16, 12, 10), float32], Tensor[(120, 105), float64], Tensor[(231, 3), float64], Tensor[(840, 1), int16], Tensor[(693), float32]) {
  %787 = cast(%var_10492, dtype="int64") /* ty=int64 */;
  %788 = cast(%var_10493, dtype="int64") /* ty=Tensor[(105), int64] */;
  %789 = reshape(%787, newshape=[]) /* ty=int64 */;
  %790 = reshape(%788, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %791 = @func_6540(%789, %790) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %792 = %791.1;
  %793 = cast(%792, dtype="int64") /* ty=int64 */;
  %794 = cast(meta[relay.Constant][52] /* ty=Tensor[(36, 10), int64] */, dtype="int64") /* ty=Tensor[(36, 10), int64] */;
  %795 = reshape(%793, newshape=[]) /* ty=int64 */;
  %796 = reshape(%794, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %797 = @func_5136(%795, %796) /* ty=(Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) */;
  %798 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %799 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %800 = %799.3;
  %801 = cast(%var_10493, dtype="float64") /* ty=Tensor[(105), float64] */;
  %802 = cast(%800, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %803 = floor_mod(%801, %802) /* ty=Tensor[(120, 105), float64] */;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(120, 105), float64] */;
  %805 = cast(%var_10538, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %806 = cast(meta[relay.Constant][53] /* ty=Tensor[(693), float32] */, dtype="float32") /* ty=Tensor[(693), float32] */;
  %807 = reshape(%805, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %808 = reshape(%806, newshape=[231, 3]) /* ty=Tensor[(231, 3), float32] */;
  %809 = @func_3704(%807, %808) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) */;
  %810 = %797.2;
  %811 = %798.0;
  %812 = erf(%804) /* ty=Tensor[(120, 105), float64] */;
  %813 = %809.4;
  (%792, %var_10492, %810, meta[relay.Constant][52] /* ty=Tensor[(36, 10), int64] */, %811, %812, %813, %var_10538, meta[relay.Constant][53] /* ty=Tensor[(693), float32] */)
}

def @func_3498() -> Tensor[(16, 12, 10), float32] {
  %814 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %814.0
}

def @func_5302() -> Tensor[(16, 12, 10), float64] {
  @func_4399() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_2002(%var_1976: Tensor[(693), bool]) -> (Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) {
  %815 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %816 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %817 = cast(%var_1976, dtype="bool") /* ty=Tensor[(693), bool] */;
  %818 = cast(%var_1976, dtype="bool") /* ty=Tensor[(693), bool] */;
  %819 = cast(meta[relay.Constant][54] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %820 = reshape(%817, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %821 = reshape(%818, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %822 = reshape(%819, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %823 = @func_190(%820, %821, %822) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %824 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %825 = %824.0;
  %826 = cast(%825, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %827 = reshape(%826, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
  %828 = @func_124(%827) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
  %829 = %815.0;
  %830 = %816.0;
  %831 = %823.4;
  %832 = %828.3;
  (%829, %830, %831, %var_1976, meta[relay.Constant][54] /* ty=Tensor[(840), int16] */, %825, %832)
}

def @func_2086(%var_2075: int64, %var_2078: Tensor[(840), int16]) -> (Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) {
  %833 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %834 = cast(%var_2075, dtype="int64") /* ty=int64 */;
  %835 = cast(meta[relay.Constant][55] /* ty=Tensor[(360, 1), int64] */, dtype="int64") /* ty=Tensor[(360, 1), int64] */;
  %836 = cast(meta[relay.Constant][56] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %837 = cast(%var_2078, dtype="int16") /* ty=Tensor[(840), int16] */;
  %838 = reshape(%834, newshape=[]) /* ty=int64 */;
  %839 = reshape(%835, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
  %840 = reshape(%836, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %841 = reshape(%837, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %842 = @func_671(%838, %839, %840, %841) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %843 = %833.0;
  %844 = %842.0;
  (%843, %844, %var_2075, meta[relay.Constant][55] /* ty=Tensor[(360, 1), int64] */, meta[relay.Constant][56] /* ty=Tensor[(9), float64] */, %var_2078)
}

def @func_4854() -> Tensor[(16, 12, 10), bool] {
  %845 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %845.0
}

def @func_1364() -> (Tensor[(16, 12, 10), float32],) {
  %846 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%846,)
}

def @func_1355(%var_1313: Tensor[(5, 7, 1), uint64]) -> (Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) {
  %847 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %848 = cast(%var_1313, dtype="uint64") /* ty=Tensor[(5, 7, 1), uint64] */;
  %849 = cast(%var_1313, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %850 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %851 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %852 = cast(%850, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %853 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %854 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %855 = maximum(%847, %848) /* ty=Tensor[(5, 7, 1), uint64] */;
  %856 = cosh(%849) /* ty=Tensor[(5, 7, 1), float64] */;
  %857 = not_equal(%851, %852) /* ty=Tensor[(16, 12, 10), bool] */;
  %858 = %853.0;
  %859 = %854.1;
  (%855, %856, %857, %858, %859)
}

def @func_6846() -> Tensor[(16, 12, 10), bool] {
  @func_4394() /* ty=Tensor[(16, 12, 10), bool] */
}

def @func_1626() -> (Tensor[(16, 12, 10), float32],) {
  %860 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%860,)
}

def @func_8568() -> (Tensor[(7, 10, 9), bool],) {
  %861 = cast(meta[relay.Constant][58] /* ty=Tensor[(7, 1, 9), bool] */, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
  %862 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 10, 9), bool] */, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
  %863 = logical_or(%861, %862) /* ty=Tensor[(7, 10, 9), bool] */;
  (%863,)
}

def @func_2202(%var_2188: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) {
  %864 = cast(meta[relay.Constant][60] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %865 = cast(%var_2188, dtype="int16") /* ty=Tensor[(840), int16] */;
  %866 = reshape(%864, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %867 = reshape(%865, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %868 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %869 = reshape(%868, newshape=[]) /* ty=int64 */;
  %870 = @func_1837(%869) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) */;
  %871 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %872 = @func_19(%866, %867) /* ty=Tensor[(7, 15, 8), int16] */;
  %873 = %870.2;
  (%871, %872, meta[relay.Constant][60] /* ty=Tensor[(120), int16] */, %var_2188, %873, -7 /* ty=int64 */)
}

def @func_10841() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32]) {
  %874 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %875 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %876 = %874.0;
  %877 = @func_8149() /* ty=Tensor[(16, 12, 10), float64] */;
  %878 = %875.0;
  (%876, %877, %878)
}

def @func_7301(%var_7289: int64, %var_7290: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) {
  %879 = cast(%var_7289, dtype="int64") /* ty=int64 */;
  %880 = cast(%var_7290, dtype="int64") /* ty=Tensor[(105), int64] */;
  %881 = reshape(%879, newshape=[]) /* ty=int64 */;
  %882 = reshape(%880, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %883 = @func_6540(%881, %882) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %884 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %885 = %883.5;
  %886 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%884, %885, %var_7289, %var_7290, %886)
}

def @func_1133() -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) {
  %887 = cast(meta[relay.Constant][61] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %888 = cast(meta[relay.Constant][61] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %889 = reshape(%887, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %890 = reshape(%888, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %891 = @func_1103(%889, %890) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %892 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %893 = %891.1;
  (%892, %893, meta[relay.Constant][61] /* ty=Tensor[(693), bool] */)
}

def @func_909() -> Tensor[(16, 12, 10), float64] {
  %894 = cast(meta[relay.Constant][62] /* ty=Tensor[(16, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  log(%894) /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8371() -> (Tensor[(16, 12, 10), float64],) {
  %895 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %896 = %895.0;
  (%896,)
}

def @func_6198() -> Tensor[(16, 12, 10), float32] {
  %897 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %897.0
}

def @func_1103(%var_1066: Tensor[(693), bool], %var_1095: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) {
  %898 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %899 = cast(%898, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %900 = reshape(%899, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
  %901 = @func_124(%900) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
  %902 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %903 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %904 = %901.0;
  %905 = cast(%904, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
  %906 = reshape(%902, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %907 = reshape(%903, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %908 = reshape(%905, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %909 = @func_190(%906, %907, %908) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %910 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %911 = cast(%var_1095, dtype="bool") /* ty=Tensor[(693), bool] */;
  %912 = shape_of(%var_1066, dtype="int32") /* ty=Tensor[(1), int32] */;
  %913 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?), bool] */;
  %915 = %909.4;
  %916 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %917 = %910.0;
  %918 = less(%913, %914) /* ty=Tensor[(693), bool] */;
  (%898, %904, %915, %916, %917, %918)
}

def @main(%var_11326: Tensor[(2, 11, 1), uint16], %var_11327: Tensor[(2, 11, 10), uint16]) -> (Tensor[(2, 11, 10), uint16],) {
  %919 = cast(%var_11326, dtype="uint16") /* ty=Tensor[(2, 11, 1), uint16] */;
  %920 = cast(%var_11327, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %921 = right_shift(%919, %920) /* ty=Tensor[(2, 11, 10), uint16] */;
  (%921,)
}

def @func_2463() -> (Tensor[(16, 12, 10), bool],) {
  %922 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %923 = %922.0;
  (%923,)
}

def @func_2875() -> (Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) {
  %924 = cast(meta[relay.Constant][63] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %925 = cast(meta[relay.Constant][64] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %926 = reshape(%924, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %927 = reshape(%925, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %928 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %929 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %930 = @func_19(%926, %927) /* ty=Tensor[(7, 15, 8), int16] */;
  %931 = %928.0;
  (%929, %930, meta[relay.Constant][63] /* ty=Tensor[(120), int16] */, meta[relay.Constant][64] /* ty=Tensor[(840), int16] */, %931)
}

def @func_7719() -> (Tensor[(16, 12, 10), float64],) {
  %932 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %933 = %932.0;
  (%933,)
}

def @func_7327(%var_7322: Tensor[(16, 12, 13), float32]) -> (Tensor[(16, 12, 13), float32],) {
  %934 = cast(%var_7322, dtype="float32") /* ty=Tensor[(16, 12, 13), float32] */;
  %935 = sin(%934) /* ty=Tensor[(16, 12, 13), float32] */;
  (%935,)
}

def @func_3379(%var_3368: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
  %936 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %937 = cast(%var_3368, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %938 = reshape(%937, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
  %939 = @func_1355(%938) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
  %940 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %941 = %936.0;
  %942 = %939.2;
  (%940, %941, %942, %var_3368)
}

def @func_9343() -> Tensor[(3, 40), int16] {
  %943 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %943.1
}

def @func_10623() -> (Tensor[(240), float32], Tensor[(16, 12, 10), float64]) {
  %944 = @func_8515() /* ty=Tensor[(240), float32] */;
  %945 = @func_4271() /* ty=Tensor[(16, 12, 10), float64] */;
  (%944, %945)
}

def @func_6684() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %946 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %947 = %946.2;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %949 = erf(%948) /* ty=Tensor[(16, 12, 10), float64] */;
  %950 = @func_5593() /* ty=Tensor[(16, 12, 10), float32] */;
  (%949, %950)
}

def @func_11195(%var_11168: Tensor[(840), int16], %var_11169: Tensor[(693), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(840), int16], Tensor[(693), float32], Tensor[(16, 12, 10), float32]) {
  %951 = @func_7558() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %952 = @func_9467() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) */;
  %953 = cast(%var_11168, dtype="int16") /* ty=Tensor[(840), int16] */;
  %954 = cast(%var_11169, dtype="float32") /* ty=Tensor[(693), float32] */;
  %955 = reshape(%953, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %956 = reshape(%954, newshape=[231, 3]) /* ty=Tensor[(231, 3), float32] */;
  %957 = @func_3704(%955, %956) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) */;
  %958 = %951.0;
  %959 = %952.1;
  %960 = %957.0;
  %961 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%958, %959, %960, %var_11168, %var_11169, %961)
}

def @func_9539() -> Tensor[(16, 12, 10), float32] {
  %962 = @func_4191() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %962.0
}

def @func_8049() -> (Tensor[(16, 12, 10), bool],) {
  %963 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %964 = %963.0;
  (%964,)
}

def @func_7197() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) {
  %965 = @func_6166() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %966 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 315), int32] */, dtype="int32") /* ty=Tensor[(1, 315), int32] */;
  %967 = reshape(%966, newshape=[3, 15, 7]) /* ty=Tensor[(3, 15, 7), int32] */;
  %968 = @func_4701(%967) /* ty=(Tensor[(3, 15, 7), bool],) */;
  %969 = %965.0;
  %970 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %971 = %968.0;
  (%969, %970, %971, meta[relay.Constant][65] /* ty=Tensor[(1, 315), int32] */)
}

def @func_8770() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %972 = @func_5802() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %973 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %974 = %972.0;
  %975 = %973.0;
  (%974, %975)
}

def @func_19(%var_3: Tensor[(1, 15, 8), int16], %var_4: Tensor[(7, 15, 8), int16]) -> Tensor[(7, 15, 8), int16] {
  %976 = cast(%var_3, dtype="int16") /* ty=Tensor[(1, 15, 8), int16] */;
  %977 = cast(%var_4, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
  logical_xor(%976, %977) /* ty=Tensor[(7, 15, 8), int16] */
}

def @func_11290(%var_11260: Tensor[(360), int64], %var_11265: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(9), float64], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(3, 5, 7), float32], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %978 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %979 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %980 = cast(%var_11260, dtype="int64") /* ty=Tensor[(360), int64] */;
  %981 = cast(meta[relay.Constant][66] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %982 = cast(meta[relay.Constant][67] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %983 = reshape(%979, newshape=[]) /* ty=int64 */;
  %984 = reshape(%980, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
  %985 = reshape(%981, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %986 = reshape(%982, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %987 = @func_671(%983, %984, %985, %986) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %988 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
  %989 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
  %990 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
  %991 = reshape(%988, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %992 = reshape(%989, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %993 = reshape(%990, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %994 = @func_1190(%991, %992, %993) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %995 = @func_9467() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) */;
  %996 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %997 = %978.1;
  %998 = %987.2;
  %999 = %994.2;
  %1000 = %995.0;
  %1001 = @func_8149() /* ty=Tensor[(16, 12, 10), float64] */;
  %1002 = %996.0;
  (%997, %998, -3 /* ty=int64 */, %var_11260, meta[relay.Constant][66] /* ty=Tensor[(9), float64] */, meta[relay.Constant][67] /* ty=Tensor[(840), int16] */, %999, %var_11265, %1000, %1001, %1002)
}

def @func_4584() -> Tensor[(16, 12, 10), float32] {
  %1003 = @func_2550() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1003.0
}

def @func_6735() -> (Tensor[(16, 12, 10), float64],) {
  %1004 = @func_5302() /* ty=Tensor[(16, 12, 10), float64] */;
  (%1004,)
}

def @func_7819(%var_7726: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(210), float32], Tensor[(16, 12, 10), float64], Tensor[(1, 315), int32], Tensor[(7, 15, 2), float32]) {
  %1005 = cast(%var_7726, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
  %1006 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %1007 = @func_7197() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) */;
  %1008 = cast(meta[relay.Constant][68] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %1009 = reshape(%1008, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
  %1010 = @func_7610(%1009) /* ty=Tensor[(7, 15, 2), float32] */;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
  %1012 = log10(%1005) /* ty=Tensor[(11, 13, 3), float32] */;
  %1013 = %1006.0;
  %1014 = %1007.3;
  %1015 = asinh(%1011) /* ty=Tensor[(7, 15, 2), float32] */;
  (%1012, meta[relay.Constant][68] /* ty=Tensor[(210), float32] */, %1013, %1014, %1015)
}

def @func_353(%var_320: Tensor[(3, 1, 3), float64], %var_338: Tensor[(120), int16], %var_339: Tensor[(840), int16]) -> (Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) {
  %1016 = cast(%var_320, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
  %1017 = cast(%var_320, dtype="uint64") /* ty=Tensor[(3, 1, 3), uint64] */;
  %1018 = cast(meta[relay.Constant][69] /* ty=Tensor[(3, 12, 3), float64] */, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
  %1019 = cast(%var_338, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1020 = cast(%var_339, dtype="int16") /* ty=Tensor[(840), int16] */;
  %1021 = reshape(%1019, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %1022 = reshape(%1020, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %1023 = sinh(%1016) /* ty=Tensor[(3, 1, 3), float64] */;
  %1024 = multiply(%1017, %1018) /* ty=Tensor[(3, 12, 3), uint64] */;
  %1025 = @func_19(%1021, %1022) /* ty=Tensor[(7, 15, 8), int16] */;
  (%1023, %1024, %1025, %var_338, %var_339)
}

def @func_5718(%var_5704: int64) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) {
  %1026 = cast(meta[relay.Constant][70] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1027 = reshape(%1026, newshape=[3, 40]) /* ty=Tensor[(3, 40), int16] */;
  %1028 = @func_3180(%1027) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) */;
  %1029 = cast(%var_5704, dtype="int64") /* ty=int64 */;
  %1030 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1031 = reshape(%1029, newshape=[]) /* ty=int64 */;
  %1032 = reshape(%1030, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1033 = @func_5136(%1031, %1032) /* ty=(Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) */;
  %1034 = @func_4317() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %1035 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %1036 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %1037 = %1028.0;
  %1038 = %1033.0;
  %1039 = %1034.1;
  %1040 = %1035.0;
  (%1036, %1037, meta[relay.Constant][70] /* ty=Tensor[(120), int16] */, %1038, %var_5704, meta[relay.Constant][71] /* ty=Tensor[(360), int64] */, %1039, %1040)
}

def @func_3890() -> (Tensor[(16, 12, 10), float32], Tensor[(693), float32]) {
  %1041 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %1042 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %1043 = %1042.2;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(693), float32] */;
  %1045 = %1041.0;
  %1046 = cos(%1044) /* ty=Tensor[(693), float32] */;
  (%1045, %1046)
}

def @func_1292() -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
  %1047 = cast(meta[relay.Constant][72] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1048 = cast(meta[relay.Constant][72] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1049 = reshape(%1047, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1050 = reshape(%1048, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1051 = @func_1103(%1049, %1050) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %1052 = %1051.4;
  %1053 = cast(%1052, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1054 = asinh(%1053) /* ty=Tensor[(16, 12, 10), float64] */;
  %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1056 = sin(%1055) /* ty=Tensor[(16, 12, 10), float64] */;
  %1057 = cast(%1054, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%1056, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1061 = cast(%1056, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %1062 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1054, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1065 = cast(meta[relay.Constant][72] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1066 = cast(meta[relay.Constant][72] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1067 = reshape(%1065, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1068 = reshape(%1066, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1069 = @func_1103(%1067, %1068) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %1070 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %1071 = minimum(%1059, %1060) /* ty=Tensor[(16, 12, 10), uint64] */;
  %1072 = subtract(%1063, %1064) /* ty=Tensor[(16, 12, 10), uint64] */;
  %1073 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  %1074 = %1069.2;
  (%1070, meta[relay.Constant][72] /* ty=Tensor[(693), bool] */, %1071, %1072, %1073, %1074)
}

def @func_7317() -> (Tensor[(11, 3, 8), float64],) {
  %1075 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %1076 = %1075.1;
  (%1076,)
}

def @func_7211() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %1077 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %1078 = @func_3753() /* ty=Tensor[(16, 12, 10), float32] */;
  (%1077, %1078)
}

def @func_8211() -> Tensor[(16, 12, 10), float64] {
  %1079 = @func_7103() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) */;
  %1079.0
}

def @func_8850(%var_8845: int64, %var_8846: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), int16], Tensor[(72), float32], Tensor[(9), float64], int64, Tensor[(360), int64]) {
  %1080 = cast(meta[relay.Constant][73] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1081 = cast(meta[relay.Constant][73] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1082 = reshape(%1080, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %1083 = reshape(%1081, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %1084 = @func_8413(%1082, %1083) /* ty=(Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) */;
  %1085 = cast(%var_8845, dtype="int64") /* ty=int64 */;
  %1086 = cast(%var_8846, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1087 = reshape(%1085, newshape=[]) /* ty=int64 */;
  %1088 = reshape(%1086, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1089 = @func_1576(%1087, %1088) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %1090 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
  %1091 = %1084.1;
  %1092 = %1089.4;
  (%1090, %1091, meta[relay.Constant][73] /* ty=Tensor[(72), float32] */, %1092, %var_8845, %var_8846)
}

def @func_1837(%var_1822: int64) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) {
  %1093 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1094 = cast(%var_1822, dtype="int64") /* ty=int64 */;
  %1095 = cast(meta[relay.Constant][74] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1096 = reshape(%1094, newshape=[]) /* ty=int64 */;
  %1097 = reshape(%1095, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1098 = @func_1576(%1096, %1097) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %1099 = cast(%var_1822, dtype="int64") /* ty=int64 */;
  %1100 = cast(meta[relay.Constant][74] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1101 = reshape(%1099, newshape=[]) /* ty=int64 */;
  %1102 = reshape(%1100, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1103 = @func_1576(%1101, %1102) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %1104 = %1093.0;
  %1105 = %1098.1;
  %1106 = %1103.1;
  (%1104, %1105, %var_1822, meta[relay.Constant][74] /* ty=Tensor[(360), int64] */, %1106)
}

def @func_3318() -> Tensor[(16, 12, 10), float32] {
  %1107 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %1107.0
}

def @func_2247(%var_2230: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) {
  %1108 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1109 = cast(%var_2230, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1110 = reshape(%1109, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1111 = @func_2002(%1110) /* ty=(Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) */;
  %1112 = %1111.1;
  %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1114 = %1108.0;
  %1115 = exp(%1113) /* ty=Tensor[(16, 12, 10), float64] */;
  (%1114, %var_2230, %1115)
}

def @func_7558() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  %1116 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %1117 = cast(meta[relay.Constant][75] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1118 = reshape(%1117, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %1119 = @func_4780() /* ty=Tensor[(16, 12, 10), float64] */;
  %1120 = %1116.1;
  %1121 = @func_2017(%1118) /* ty=Tensor[(8, 2, 15), float32] */;
  (%1119, %1120, %1121, meta[relay.Constant][75] /* ty=Tensor[(240), float32] */)
}

def @func_2623() -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) {
  %1122 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1123 = %1122.0;
  %1124 = cast(%1123, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1125 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %1126 = acosh(%1124) /* ty=Tensor[(16, 12, 10), float64] */;
  %1127 = %1125.0;
  (%1126, %1127)
}

def @func_7984() -> (Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) {
  %1128 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1129 = cast(meta[relay.Constant][76] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1130 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1131 = reshape(%1129, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1132 = reshape(%1130, newshape=[]) /* ty=int64 */;
  %1133 = @func_4890(%1131, %1132) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) */;
  %1134 = %1128.0;
  %1135 = %1133.2;
  (%1134, %1135, meta[relay.Constant][76] /* ty=Tensor[(240), float32] */, -7 /* ty=int64 */)
}

def @func_6609() -> (Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) {
  %1136 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1137 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %1138 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %1139 = %1136.0;
  %1140 = %1137.3;
  %1141 = %1138.1;
  (%1139, %1140, %1141)
}

def @func_10593() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %1142 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1143 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %1144 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %1145 = %1142.0;
  %1146 = %1143.0;
  %1147 = %1144.0;
  %1148 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%1145, %1146, %1147, %1148)
}

def @func_2017(%var_2009: Tensor[(8, 2, 15), float32]) -> Tensor[(8, 2, 15), float32] {
  %1149 = cast(%var_2009, dtype="float32") /* ty=Tensor[(8, 2, 15), float32] */;
  log10(%1149) /* ty=Tensor[(8, 2, 15), float32] */
}

def @func_5517(%var_5508: Tensor[(1, 9), float64]) -> (Tensor[(840), int16], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(1, 9), float64], Tensor[(120), int16]) {
  %1150 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %1151 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1152 = cast(%var_5508, dtype="float64") /* ty=Tensor[(1, 9), float64] */;
  %1153 = cast(meta[relay.Constant][77] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1154 = %1150.3;
  %1155 = cast(%1154, dtype="int16") /* ty=Tensor[(840), int16] */;
  %1156 = reshape(%1152, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1157 = reshape(%1153, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %1158 = reshape(%1155, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %1159 = @func_353(%1156, %1157, %1158) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %1160 = %1151.0;
  %1161 = %1159.3;
  (%1154, %1160, %1161, %var_5508, meta[relay.Constant][77] /* ty=Tensor[(120), int16] */)
}

def @func_9831() -> Tensor[(16, 12, 10), float64] {
  %1162 = @func_7719() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %1162.0
}

def @func_8626(%var_8622: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), float64] {
  %1163 = cast(%var_8622, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  asinh(%1163) /* ty=Tensor[(16, 8, 9), float64] */
}

def @func_3544() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
  %1164 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
  %1165 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  (%1164, %1165)
}

def @func_4833(%var_4822: Tensor[(693), float32]) -> (Tensor[(3, 40), int16], Tensor[(693), int64]) {
  %1166 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %1167 = @func_3890() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), float32]) */;
  %1168 = %1167.1;
  %1169 = cast(%var_4822, dtype="int64") /* ty=Tensor[(693), int64] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1171 = cast(%1168, dtype="int64") /* ty=Tensor[(693), int64] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1173 = %1166.0;
  %1174 = right_shift(%1171, %1172) /* ty=Tensor[(693), int64] */;
  (%1173, %1174)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2875() -> (Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1 = cast(meta[relay.Constant][1] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %2 = reshape(%0, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %3 = reshape(%1, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %4 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %5 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %6 = @func_19(%2, %3) /* ty=Tensor[(7, 15, 8), int16] */;
  %7 = %4.0;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(120), int16] */, meta[relay.Constant][1] /* ty=Tensor[(840), int16] */, %7)
}

def @func_7984() -> (Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) {
  %8 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %10 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %11 = reshape(%9, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %12 = reshape(%10, newshape=[]) /* ty=int64 */;
  %13 = @func_4890(%11, %12) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) */;
  %14 = %8.0;
  %15 = %13.2;
  (%14, %15, meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, -7 /* ty=int64 */)
}

def @func_8965() -> (Tensor[(11, 3, 8), float64],) {
  %18 = fn () -> (Tensor[(11, 3, 8), float64],) {
    %16 = @func_7317() /* ty=(Tensor[(11, 3, 8), float64],) */;
    %17 = %16.0;
    (%17,)
  };
  %18() /* ty=(Tensor[(11, 3, 8), float64],) */
}

def @func_8294() -> (Tensor[(16, 12, 10), float32],) {
  %19 = @func_7197() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) */;
  %20 = %19.0;
  (%20,)
}

def @func_10926() -> Tensor[(16, 12, 10), float32] {
  @func_10924() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_8112() -> (Tensor[(693), bool], Tensor[(120), int16], Tensor[(120), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float64]) {
  @func_8110() /* ty=(Tensor[(693), bool], Tensor[(120), int16], Tensor[(120), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float64]) */
}

def @func_8390() -> Tensor[(240), float32] {
  @func_8388() /* ty=Tensor[(240), float32] */
}

def @func_2465() -> (Tensor[(16, 12, 10), bool],) {
  @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */
}

def @func_10403(%var_10400: Tensor[(1, 5, 2), int64], %var_10401: Tensor[(12, 5, 2), int64], %var_10402: Tensor[(72), float32]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), bool], Tensor[(72), float32], Tensor[(12, 5, 2), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  @func_10398(%var_10400, %var_10401, %var_10402) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), bool], Tensor[(72), float32], Tensor[(12, 5, 2), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */
}

def @func_4500() -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) {
  @func_4498() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) */
}

def @func_9057() -> (Tensor[(7, 15, 8), int16], Tensor[(16, 8, 7), bool], Tensor[(896), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(5, 7, ?), float32]) {
  %21 = @func_6609() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(896), float32] */, dtype="float32") /* ty=Tensor[(896), float32] */;
  %23 = reshape(%22, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), float32] */;
  %24 = cast(meta[relay.Constant][4] /* ty=Tensor[(35), uint64] */, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %25 = reshape(%24, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
  %26 = @func_1355(%25) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
  %27 = %26.0;
  %28 = cast(meta[relay.Constant][4] /* ty=Tensor[(35), uint64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %32 = floor_mod(%30, %31) /* ty=Tensor[(5, 7, ?), float64] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(5, 7, ?), float32] */;
  %34 = %21.2;
  %35 = @func_7077(%23) /* ty=Tensor[(16, 8, 7), bool] */;
  %36 = @func_4854() /* ty=Tensor[(16, 12, 10), bool] */;
  %37 = @func_6742() /* ty=Tensor[(16, 12, 10), float32] */;
  %38 = @func_8060() /* ty=Tensor[(16, 12, 10), float32] */;
  %39 = exp(%33) /* ty=Tensor[(5, 7, ?), float32] */;
  (%34, %35, meta[relay.Constant][3] /* ty=Tensor[(896), float32] */, %36, %37, %38, %39)
}

def @func_7261(%var_7260: Tensor[(8, 11, 13), float64]) -> (Tensor[(8, 11, 13), float64], Tensor[(16, 12, 10), bool]) {
  %44 = fn (%var_7238: Tensor[(8, 11, 13), float64]) -> (Tensor[(8, 11, 13), float64], Tensor[(16, 12, 10), bool]) {
    %40 = cast(%var_7238, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
    %41 = @func_4498() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) */;
    %42 = sin(%40) /* ty=Tensor[(8, 11, 13), float64] */;
    %43 = %41.1;
    (%42, %43)
  };
  %44(%var_7260) /* ty=(Tensor[(8, 11, 13), float64], Tensor[(16, 12, 10), bool]) */
}

def @func_1615() -> (Tensor[(16, 12, 10), float64],) {
  %46 = fn () -> (Tensor[(16, 12, 10), float64],) {
    %45 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    (%45,)
  };
  %46() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_2877() -> (Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) {
  @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */
}

def @func_2946(%var_2944: int64) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) {
  @func_2943(%var_2944) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) */
}

def @func_22(%var_20: Tensor[(1, 15, 8), int16], %var_21: Tensor[(7, 15, 8), int16]) -> Tensor[(7, 15, 8), int16] {
  %49 = fn (%var_3: Tensor[(1, 15, 8), int16], %var_4: Tensor[(7, 15, 8), int16]) -> Tensor[(7, 15, 8), int16] {
    %47 = cast(%var_3, dtype="int16") /* ty=Tensor[(1, 15, 8), int16] */;
    %48 = cast(%var_4, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
    logical_xor(%47, %48) /* ty=Tensor[(7, 15, 8), int16] */
  };
  %49(%var_20, %var_21) /* ty=Tensor[(7, 15, 8), int16] */
}

def @func_1103(%var_1066: Tensor[(693), bool], %var_1095: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) {
  %50 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %51 = cast(%50, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %52 = reshape(%51, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
  %53 = @func_124(%52) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
  %54 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %55 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %56 = %53.0;
  %57 = cast(%56, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
  %58 = reshape(%54, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %59 = reshape(%55, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %60 = reshape(%57, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %61 = @func_190(%58, %59, %60) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %62 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %63 = cast(%var_1095, dtype="bool") /* ty=Tensor[(693), bool] */;
  %64 = shape_of(%var_1066, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(%var_1066, dtype="bool") /* ty=Tensor[(693), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), bool] */;
  %67 = %61.4;
  %68 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %69 = %62.0;
  %70 = less(%65, %66) /* ty=Tensor[(693), bool] */;
  (%50, %56, %67, %68, %69, %70)
}

def @func_5420() -> Tensor[(16, 12, 10), float32] {
  %72 = fn () -> Tensor[(16, 12, 10), float32] {
    %71 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %71.0
  };
  %72() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_3999() -> (Tensor[(16, 12, 10), float32],) {
  %73 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%73,)
}

def @func_6611() -> (Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) {
  @func_6609() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) */
}

def @func_8339() -> Tensor[(16, 12, 10), float32] {
  %75 = fn () -> Tensor[(16, 12, 10), float32] {
    %74 = @func_7447() /* ty=(Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) */;
    %74.1
  };
  %75() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_3478() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %79 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
    %76 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
    %77 = %76.4;
    %78 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    (%77, %78)
  };
  %79() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_4396() -> Tensor[(16, 12, 10), bool] {
  @func_4394() /* ty=Tensor[(16, 12, 10), bool] */
}

def @func_2500(%var_2498: Tensor[(11, 3, 8), float64], %var_2499: Tensor[(11, 3, 8), float64]) -> (Tensor[(11, 3, 8), float64],) {
  @func_2496(%var_2498, %var_2499) /* ty=(Tensor[(11, 3, 8), float64],) */
}

def @func_4703(%var_4702: Tensor[(3, 15, 7), int32]) -> (Tensor[(3, 15, 7), bool],) {
  %85 = fn (%var_4682: Tensor[(3, 15, 7), int32]) -> (Tensor[(3, 15, 7), bool],) {
    %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 15, 7), int32] */, dtype="bool") /* ty=Tensor[(3, 15, 7), bool] */;
    %81 = shape_of(%var_4682, dtype="int32") /* ty=Tensor[(3), int32] */;
    %82 = cast(%var_4682, dtype="bool") /* ty=Tensor[(3, 15, 7), bool] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %84 = less(%82, %83) /* ty=Tensor[(3, 15, 7), bool] */;
    (%84,)
  };
  %85(%var_4702) /* ty=(Tensor[(3, 15, 7), bool],) */
}

def @func_126(%var_125: Tensor[(12, 10, 16), bool]) -> (Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) {
  %101 = fn (%var_111: Tensor[(12, 10, 16), bool]) -> (Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) {
    %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 120), int16] */, dtype="int16") /* ty=Tensor[(1, 120), int16] */;
    %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
    %88 = reshape(%86, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
    %89 = reshape(%87, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
    %90 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
    %91 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 10, 16), uint8] */, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %94 = not_equal(%92, %93) /* ty=Tensor[(12, 10, 16), bool] */;
    %95 = cast(%var_111, dtype="uint64") /* ty=Tensor[(12, 10, 16), uint64] */;
    %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%94, dtype="uint64") /* ty=Tensor[(12, 10, 16), uint64] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %99 = @func_19(%88, %89) /* ty=Tensor[(7, 15, 8), int16] */;
    %100 = bitwise_xor(%97, %98) /* ty=Tensor[(12, 10, 16), uint64] */;
    (%99, meta[relay.Constant][6] /* ty=Tensor[(1, 120), int16] */, meta[relay.Constant][7] /* ty=Tensor[(840), int16] */, %100)
  };
  %101(%var_125) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */
}

def @func_6190(%var_6189: uint16) -> (Tensor[(4, 13, 1), uint16], Tensor[(16, 12, 10), bool], Tensor[(35), uint64], Tensor[(16, 12, 10), float32]) {
  %111 = fn (%var_6173: uint16) -> (Tensor[(4, 13, 1), uint16], Tensor[(16, 12, 10), bool], Tensor[(35), uint64], Tensor[(16, 12, 10), float32]) {
    %102 = cast(%var_6173, dtype="uint16") /* ty=uint16 */;
    %103 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 1), uint16] */, dtype="uint16") /* ty=Tensor[(4, 13, 1), uint16] */;
    %104 = cast(meta[relay.Constant][11] /* ty=Tensor[(35), uint64] */, dtype="uint64") /* ty=Tensor[(35), uint64] */;
    %105 = reshape(%104, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
    %106 = @func_1355(%105) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
    %107 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %108 = bitwise_and(%102, %103) /* ty=Tensor[(4, 13, 1), uint16] */;
    %109 = %106.2;
    %110 = %107.0;
    (%108, %109, meta[relay.Constant][11] /* ty=Tensor[(35), uint64] */, %110)
  };
  %111(%var_6189) /* ty=(Tensor[(4, 13, 1), uint16], Tensor[(16, 12, 10), bool], Tensor[(35), uint64], Tensor[(16, 12, 10), float32]) */
}

def @func_10084() -> (Tensor[(16, 12, 10), float32],) {
  @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_7329(%var_7328: Tensor[(16, 12, 13), float32]) -> (Tensor[(16, 12, 13), float32],) {
  %114 = fn (%var_7322: Tensor[(16, 12, 13), float32]) -> (Tensor[(16, 12, 13), float32],) {
    %112 = cast(%var_7322, dtype="float32") /* ty=Tensor[(16, 12, 13), float32] */;
    %113 = sin(%112) /* ty=Tensor[(16, 12, 13), float32] */;
    (%113,)
  };
  %114(%var_7328) /* ty=(Tensor[(16, 12, 13), float32],) */
}

def @func_9909(%var_9908: Tensor[(105, 3), int32]) -> (Tensor[(7, 10, 9), bool], Tensor[(105, 3), float32]) {
  %126 = fn (%var_9866: Tensor[(105, 3), int32]) -> (Tensor[(7, 10, 9), bool], Tensor[(105, 3), float32]) {
    %115 = @func_8568() /* ty=(Tensor[(7, 10, 9), bool],) */;
    %116 = cast(%var_9866, dtype="int32") /* ty=Tensor[(105, 3), int32] */;
    %117 = reshape(%116, newshape=[3, 15, 7]) /* ty=Tensor[(3, 15, 7), int32] */;
    %118 = @func_4701(%117) /* ty=(Tensor[(3, 15, 7), bool],) */;
    %119 = %118.0;
    %120 = cast(%119, dtype="float32") /* ty=Tensor[(3, 15, 7), float32] */;
    %121 = shape_of(%var_9866, dtype="int32") /* ty=Tensor[(2), int32] */;
    %122 = cast(%var_9866, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %124 = %115.0;
    %125 = floor_mod(%122, %123) /* ty=Tensor[(105, 3), float32] */;
    (%124, %125)
  };
  %126(%var_9908) /* ty=(Tensor[(7, 10, 9), bool], Tensor[(105, 3), float32]) */
}

def @func_6910(%var_6885: Tensor[(16, 12, 10), float64], %var_6905: Tensor[(3, 3), float64]) -> (Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  %127 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %128 = cast(%var_6885, dtype="uint8") /* ty=Tensor[(16, 12, 10), uint8] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%127, dtype="uint8") /* ty=Tensor[(16, 12, 10), uint8] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %132 = cast(%var_6905, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %133 = cast(meta[relay.Constant][12] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %134 = cast(meta[relay.Constant][13] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %135 = reshape(%132, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %136 = reshape(%133, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %137 = reshape(%134, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %138 = @func_353(%135, %136, %137) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %139 = left_shift(%130, %131) /* ty=Tensor[(16, 12, 10), uint8] */;
  %140 = %138.4;
  (%139, %140, %var_6905, meta[relay.Constant][12] /* ty=Tensor[(120), int16] */, meta[relay.Constant][13] /* ty=Tensor[(840), int16] */)
}

def @func_1364() -> (Tensor[(16, 12, 10), float32],) {
  %141 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%141,)
}

def @func_6198() -> Tensor[(16, 12, 10), float32] {
  %142 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %142.0
}

def @func_6167() -> (Tensor[(16, 12, 10), float32],) {
  %145 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %143 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %144 = %143.0;
    (%144,)
  };
  %145() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_2086(%var_2075: int64, %var_2078: Tensor[(840), int16]) -> (Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) {
  %146 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %147 = cast(%var_2075, dtype="int64") /* ty=int64 */;
  %148 = cast(meta[relay.Constant][14] /* ty=Tensor[(360, 1), int64] */, dtype="int64") /* ty=Tensor[(360, 1), int64] */;
  %149 = cast(meta[relay.Constant][15] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %150 = cast(%var_2078, dtype="int16") /* ty=Tensor[(840), int16] */;
  %151 = reshape(%147, newshape=[]) /* ty=int64 */;
  %152 = reshape(%148, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
  %153 = reshape(%149, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %154 = reshape(%150, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %155 = @func_671(%151, %152, %153, %154) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %156 = %146.0;
  %157 = %155.0;
  (%156, %157, %var_2075, meta[relay.Constant][14] /* ty=Tensor[(360, 1), int64] */, meta[relay.Constant][15] /* ty=Tensor[(9), float64] */, %var_2078)
}

def @func_4677() -> (Tensor[(16, 12, 10), uint64],) {
  %160 = fn () -> (Tensor[(16, 12, 10), uint64],) {
    %158 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %159 = %158.2;
    (%159,)
  };
  %160() /* ty=(Tensor[(16, 12, 10), uint64],) */
}

def @func_2813() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
  %161 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %162 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
  %163 = %161.0;
  %164 = %162.1;
  %165 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  (%163, %164, %165)
}

def @func_8698(%var_8693: Tensor[(10, 13, 3), int32]) -> (Tensor[(10, 13, 3), int32],) {
  %166 = cast(%var_8693, dtype="int32") /* ty=Tensor[(10, 13, 3), int32] */;
  %167 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(10, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(10, 13, 3), int32] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %170 = left_shift(%168, %169) /* ty=Tensor[(10, 13, 3), int32] */;
  (%170,)
}

def @func_5302() -> Tensor[(16, 12, 10), float64] {
  @func_4399() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_4498() -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool]) {
  %171 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %172 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %173 = %171.0;
  %174 = %172.0;
  (%173, %174)
}

def @func_9343() -> Tensor[(3, 40), int16] {
  %175 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %175.1
}

def @func_1358(%var_1356: Tensor[(5, 7, 1), uint64]) -> (Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) {
  @func_1355(%var_1356) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */
}

def @func_7986() -> (Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) {
  @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */
}

def @func_2722(%var_2667: Tensor[(16, 12, 10), float64], %var_2715: Tensor[(693), bool], %var_2716: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) {
  %176 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %177 = cast(%var_2667, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %181 = less(%179, %180) /* ty=Tensor[(16, 12, 10), bool] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %183 = shape_of(%var_2667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_2667, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %189 = cast(%var_2667, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %190 = cast(meta[relay.Constant][17] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %191 = reshape(%189, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
  %192 = reshape(%190, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %193 = @func_1410(%191, %192) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
  %194 = %193.2;
  %195 = cast(%194, dtype="float32") /* ty=Tensor[(3, 1, 3), float32] */;
  %196 = cast(%var_2715, dtype="bool") /* ty=Tensor[(693), bool] */;
  %197 = cast(%var_2715, dtype="bool") /* ty=Tensor[(693), bool] */;
  %198 = cast(%var_2716, dtype="int16") /* ty=Tensor[(840), int16] */;
  %199 = reshape(%196, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %200 = reshape(%197, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %201 = reshape(%198, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %202 = @func_190(%199, %200, %201) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %203 = floor_mod(%184, %185) /* ty=Tensor[(16, 12, 10), float32] */;
  %204 = asinh(%188) /* ty=Tensor[(3, 40), float32] */;
  %205 = tan(%195) /* ty=Tensor[(3, 1, 3), float32] */;
  %206 = %202.2;
  (%203, meta[relay.Constant][17] /* ty=Tensor[(105), int64] */, %204, %205, %206, %var_2715, %var_2716)
}

def @func_5804() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  @func_5802() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */
}

def @func_2250(%var_2248: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) {
  @func_2247(%var_2248) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) */
}

def @func_4890(%var_4871: Tensor[(240), float32], %var_4880: int64) -> (Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) {
  %207 = @func_4191() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %208 = cast(%var_4871, dtype="float32") /* ty=Tensor[(240), float32] */;
  %209 = reshape(%208, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %210 = cast(%var_4880, dtype="int64") /* ty=int64 */;
  %211 = reshape(%210, newshape=[]) /* ty=int64 */;
  %212 = @func_1837(%211) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) */;
  %213 = %207.0;
  %214 = @func_2017(%209) /* ty=Tensor[(8, 2, 15), float32] */;
  %215 = %212.3;
  (%213, %214, %var_4871, %215, %var_4880)
}

def @func_10903() -> Tensor[(240), float32] {
  %216 = fn () -> Tensor[(240), float32] {
    @func_8549() /* ty=Tensor[(240), float32] */
  };
  %216() /* ty=Tensor[(240), float32] */
}

def @func_3604(%var_3602: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float32]) {
  @func_3601(%var_3602) /* ty=(Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float32]) */
}

def @func_3944() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  @func_3942() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_7719() -> (Tensor[(16, 12, 10), float64],) {
  %217 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %218 = %217.0;
  (%218,)
}

def @main(%var_11326: Tensor[(2, 11, 1), uint16], %var_11327: Tensor[(2, 11, 10), uint16]) -> (Tensor[(2, 11, 10), uint16],) {
  %219 = cast(%var_11326, dtype="uint16") /* ty=Tensor[(2, 11, 1), uint16] */;
  %220 = cast(%var_11327, dtype="uint16") /* ty=Tensor[(2, 11, 10), uint16] */;
  %221 = right_shift(%219, %220) /* ty=Tensor[(2, 11, 10), uint16] */;
  (%221,)
}

def @func_1579(%var_1577: int64, %var_1578: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) {
  %234 = fn (%var_1567: int64, %var_1568: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) {
    %222 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %223 = cast(%var_1567, dtype="int64") /* ty=int64 */;
    %224 = cast(%var_1568, dtype="int64") /* ty=Tensor[(360), int64] */;
    %225 = cast(meta[relay.Constant][18] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
    %226 = cast(meta[relay.Constant][19] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
    %227 = reshape(%223, newshape=[]) /* ty=int64 */;
    %228 = reshape(%224, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
    %229 = reshape(%225, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %230 = reshape(%226, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %231 = @func_671(%227, %228, %229, %230) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
    %232 = %222.0;
    %233 = %231.4;
    (%232, %233, %var_1567, %var_1568, meta[relay.Constant][18] /* ty=Tensor[(9), float64] */, meta[relay.Constant][19] /* ty=Tensor[(840), int16] */)
  };
  %234(%var_1577, %var_1578) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */
}

def @func_357(%var_354: Tensor[(3, 1, 3), float64], %var_355: Tensor[(120), int16], %var_356: Tensor[(840), int16]) -> (Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) {
  %245 = fn (%var_320: Tensor[(3, 1, 3), float64], %var_338: Tensor[(120), int16], %var_339: Tensor[(840), int16]) -> (Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) {
    %235 = cast(%var_320, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
    %236 = cast(%var_320, dtype="uint64") /* ty=Tensor[(3, 1, 3), uint64] */;
    %237 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 12, 3), float64] */, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
    %238 = cast(%var_338, dtype="int16") /* ty=Tensor[(120), int16] */;
    %239 = cast(%var_339, dtype="int16") /* ty=Tensor[(840), int16] */;
    %240 = reshape(%238, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
    %241 = reshape(%239, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
    %242 = sinh(%235) /* ty=Tensor[(3, 1, 3), float64] */;
    %243 = multiply(%236, %237) /* ty=Tensor[(3, 12, 3), uint64] */;
    %244 = @func_19(%240, %241) /* ty=Tensor[(7, 15, 8), int16] */;
    (%242, %243, %244, %var_338, %var_339)
  };
  %245(%var_354, %var_355, %var_356) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */
}

def @func_2787() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) {
  %246 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %247 = cast(meta[relay.Constant][21] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %248 = cast(meta[relay.Constant][21] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %249 = reshape(%247, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %250 = reshape(%248, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %251 = @func_2496(%249, %250) /* ty=(Tensor[(11, 3, 8), float64],) */;
  %252 = cast(meta[relay.Constant][22] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %253 = reshape(%252, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %254 = @func_2247(%253) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) */;
  %255 = %246.0;
  %256 = %251.0;
  %257 = %254.1;
  (%255, %256, meta[relay.Constant][21] /* ty=Tensor[(264), float64] */, %257, meta[relay.Constant][22] /* ty=Tensor[(693), bool] */)
}

def @func_1875() -> Tensor[(16, 12, 10), float64] {
  @func_1873() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_10843() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32]) {
  @func_10841() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32]) */
}

def @func_4894(%var_4892: Tensor[(240), float32], %var_4893: int64) -> (Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) {
  @func_4890(%var_4892, %var_4893) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) */
}

def @func_10034(%var_10015: Tensor[(7, 99), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 99), bool], Tensor[(840), int16], Tensor[(8, 7, 5), float64], Tensor[(280), float64]) {
  %258 = cast(%var_10015, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %259 = cast(%var_10015, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %260 = cast(meta[relay.Constant][23] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %261 = reshape(%258, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %262 = reshape(%259, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
  %263 = reshape(%260, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %264 = @func_190(%261, %262, %263) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
  %265 = cast(meta[relay.Constant][24] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %266 = reshape(%265, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float64] */;
  %267 = @func_6637() /* ty=Tensor[(16, 12, 10), float64] */;
  %268 = %264.2;
  %269 = @func_9364(%266) /* ty=Tensor[(8, 7, 5), float64] */;
  (%267, %268, %var_10015, meta[relay.Constant][23] /* ty=Tensor[(840), int16] */, %269, meta[relay.Constant][24] /* ty=Tensor[(280), float64] */)
}

def @func_3754() -> Tensor[(16, 12, 10), float32] {
  %270 = fn () -> Tensor[(16, 12, 10), float32] {
    @func_1218() /* ty=Tensor[(16, 12, 10), float32] */
  };
  %270() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_11088(%var_11086: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), bool], Tensor[(16, 12, 10), float32], Tensor[(10, 13, 3), int32], Tensor[(390), int32], Tensor[(16, 8, 7), bool], Tensor[(896), float32]) {
  @func_11085(%var_11086) /* ty=(Tensor[(12, 3, 6), bool], Tensor[(16, 12, 10), float32], Tensor[(10, 13, 3), int32], Tensor[(390), int32], Tensor[(16, 8, 7), bool], Tensor[(896), float32]) */
}

def @func_6742() -> Tensor[(16, 12, 10), float32] {
  %271 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %271.2
}

def @func_5894(%var_5892: Tensor[(105), int64], %var_5893: Tensor[(240), int8]) -> (Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) {
  @func_5890(%var_5892, %var_5893) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) */
}

def @func_3319() -> Tensor[(16, 12, 10), float32] {
  %273 = fn () -> Tensor[(16, 12, 10), float32] {
    %272 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
    %272.0
  };
  %273() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10841() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32]) {
  %274 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %275 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %276 = %274.0;
  %277 = @func_8149() /* ty=Tensor[(16, 12, 10), float64] */;
  %278 = %275.0;
  (%276, %277, %278)
}

def @func_6639() -> Tensor[(16, 12, 10), float64] {
  @func_6637() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_9318() -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], int64, int64, int64, Tensor[(16, 12, 10), float64]) {
  %293 = fn () -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], int64, int64, int64, Tensor[(16, 12, 10), float64]) {
    %279 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
    %280 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %281 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %282 = reshape(%281, newshape=[]) /* ty=int64 */;
    %283 = @func_2943(%282) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) */;
    %284 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %285 = reshape(%284, newshape=[]) /* ty=int64 */;
    %286 = @func_5718(%285) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) */;
    %287 = @func_4394() /* ty=Tensor[(16, 12, 10), bool] */;
    %288 = %279.0;
    %289 = %280.0;
    %290 = %283.1;
    %291 = %286.4;
    %292 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    (%287, %288, %289, %290, -5 /* ty=int64 */, %291, %292)
  };
  %293() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], int64, int64, int64, Tensor[(16, 12, 10), float64]) */
}

def @func_5593() -> Tensor[(16, 12, 10), float32] {
  %294 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %294.0
}

def @func_9364(%var_9346: Tensor[(8, 7, 5), float64]) -> Tensor[(8, 7, 5), float64] {
  %295 = cast(%var_9346, dtype="float64") /* ty=Tensor[(8, 7, 5), float64] */;
  rsqrt(%295) /* ty=Tensor[(8, 7, 5), float64] */
}

def @func_5555() -> Tensor[(16, 12, 10), float64] {
  @func_5553() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_11293(%var_11291: Tensor[(360), int64], %var_11292: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(9), float64], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(3, 5, 7), float32], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %321 = fn (%var_11260: Tensor[(360), int64], %var_11265: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(9), float64], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(3, 5, 7), float32], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
    %296 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %297 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %298 = cast(%var_11260, dtype="int64") /* ty=Tensor[(360), int64] */;
    %299 = cast(meta[relay.Constant][25] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
    %300 = cast(meta[relay.Constant][26] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
    %301 = reshape(%297, newshape=[]) /* ty=int64 */;
    %302 = reshape(%298, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
    %303 = reshape(%299, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %304 = reshape(%300, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %305 = @func_671(%301, %302, %303, %304) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
    %306 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
    %307 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
    %308 = cast(%var_11265, dtype="int64") /* ty=Tensor[(105), int64] */;
    %309 = reshape(%306, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %310 = reshape(%307, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %311 = reshape(%308, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %312 = @func_1190(%309, %310, %311) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
    %313 = @func_9467() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) */;
    %314 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %315 = %296.1;
    %316 = %305.2;
    %317 = %312.2;
    %318 = %313.0;
    %319 = @func_8149() /* ty=Tensor[(16, 12, 10), float64] */;
    %320 = %314.0;
    (%315, %316, -3 /* ty=int64 */, %var_11260, meta[relay.Constant][25] /* ty=Tensor[(9), float64] */, meta[relay.Constant][26] /* ty=Tensor[(840), int16] */, %317, %var_11265, %318, %319, %320)
  };
  %321(%var_11291, %var_11292) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(9), float64], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(3, 5, 7), float32], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */
}

def @func_1355(%var_1313: Tensor[(5, 7, 1), uint64]) -> (Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) {
  %322 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %323 = cast(%var_1313, dtype="uint64") /* ty=Tensor[(5, 7, 1), uint64] */;
  %324 = cast(%var_1313, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %325 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %326 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %327 = cast(%325, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %328 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %329 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %330 = maximum(%322, %323) /* ty=Tensor[(5, 7, 1), uint64] */;
  %331 = cosh(%324) /* ty=Tensor[(5, 7, 1), float64] */;
  %332 = not_equal(%326, %327) /* ty=Tensor[(16, 12, 10), bool] */;
  %333 = %328.0;
  %334 = %329.1;
  (%330, %331, %332, %333, %334)
}

def @func_3805(%var_3766: Tensor[(4, 5, 12), int8], %var_3767: Tensor[(4, 5, 12), int8]) -> (Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) {
  %335 = cast(%var_3767, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %336 = shape_of(%var_3766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%var_3766, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %339 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %340 = greater_equal(%337, %338) /* ty=Tensor[(4, 5, 12), bool] */;
  %341 = %339.0;
  (%340, %341)
}

def @func_2496(%var_2475: Tensor[(11, 3, 8), float64], %var_2476: Tensor[(11, 3, 8), float64]) -> (Tensor[(11, 3, 8), float64],) {
  %342 = cast(%var_2476, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %343 = shape_of(%var_2475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%var_2475, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %346 = floor_divide(%344, %345) /* ty=Tensor[(11, 3, 8), float64] */;
  (%346,)
}

def @func_5022() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */
}

def @func_3544() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
  %347 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
  %348 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  (%347, %348)
}

def @func_2943(%var_2921: int64) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) {
  %349 = cast(%var_2921, dtype="int64") /* ty=int64 */;
  %350 = cast(meta[relay.Constant][28] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %351 = reshape(%349, newshape=[]) /* ty=int64 */;
  %352 = reshape(%350, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %353 = @func_2086(%351, %352) /* ty=(Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %354 = %353.3;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %356 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %357 = asin(%355) /* ty=Tensor[(360, 1), float64] */;
  (%356, %var_2921, meta[relay.Constant][28] /* ty=Tensor[(840), int16] */, %357)
}

def @func_6835(%var_6833: Tensor[(3, 40), int16], %var_6834: Tensor[(3, 40), float64]) -> (Tensor[(3, 40), float32], Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool], Tensor[(360, 1), float64], int64) {
  @func_6831(%var_6833, %var_6834) /* ty=(Tensor[(3, 40), float32], Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool], Tensor[(360, 1), float64], int64) */
}

def @func_5062(%var_5039: Tensor[(240), float32], %var_5040: int64) -> (Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) {
  %358 = cast(%var_5039, dtype="float32") /* ty=Tensor[(240), float32] */;
  %359 = cast(%var_5040, dtype="int64") /* ty=int64 */;
  %360 = reshape(%358, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %361 = reshape(%359, newshape=[]) /* ty=int64 */;
  %362 = @func_4890(%360, %361) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32], Tensor[(360), int64], int64) */;
  %363 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %364 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %365 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %366 = %365.1;
  %367 = cast(%366, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %368 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%364, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %371 = %362.2;
  %372 = %363.0;
  %373 = greater(%369, %370) /* ty=Tensor[(16, 12, 10), bool] */;
  (%371, %var_5039, %var_5040, %372, %373)
}

def @func_2463() -> (Tensor[(16, 12, 10), bool],) {
  %374 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %375 = %374.0;
  (%375,)
}

def @func_1292() -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
  %376 = cast(meta[relay.Constant][29] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %377 = cast(meta[relay.Constant][29] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %378 = reshape(%376, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %379 = reshape(%377, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %380 = @func_1103(%378, %379) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %381 = %380.4;
  %382 = cast(%381, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %383 = asinh(%382) /* ty=Tensor[(16, 12, 10), float64] */;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %385 = sin(%384) /* ty=Tensor[(16, 12, 10), float64] */;
  %386 = cast(%383, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %390 = cast(%385, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %391 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%383, dtype="uint64") /* ty=Tensor[(16, 12, 10), uint64] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %394 = cast(meta[relay.Constant][29] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %395 = cast(meta[relay.Constant][29] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %396 = reshape(%394, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %397 = reshape(%395, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %398 = @func_1103(%396, %397) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %399 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %400 = minimum(%388, %389) /* ty=Tensor[(16, 12, 10), uint64] */;
  %401 = subtract(%392, %393) /* ty=Tensor[(16, 12, 10), uint64] */;
  %402 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  %403 = %398.2;
  (%399, meta[relay.Constant][29] /* ty=Tensor[(693), bool] */, %400, %401, %402, %403)
}

def @func_9130() -> (Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
  %408 = fn () -> (Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
    %404 = @func_8964() /* ty=(Tensor[(11, 3, 8), float64],) */;
    %405 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
    %406 = %404.0;
    %407 = %405.4;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */
}

def @func_10174() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 5, 7), int64], Tensor[(21, 5), int64]) {
  @func_10172() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 5, 7), int64], Tensor[(21, 5), int64]) */
}

def @func_4400() -> Tensor[(16, 12, 10), float64] {
  %410 = fn () -> Tensor[(16, 12, 10), float64] {
    %409 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
    %409.0
  };
  %410() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_10686() -> (Tensor[(16, 12, 10), float32],) {
  @func_10684() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_3382(%var_3380: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
  @func_3379(%var_3380) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) */
}

def @func_2090(%var_2088: int64, %var_2089: Tensor[(840), int16]) -> (Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) {
  @func_2086(%var_2088, %var_2089) /* ty=(Tensor[(3, 40), float32], Tensor[(15, 8, 3), bool], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16]) */
}

def @func_7478() -> (Tensor[(16, 12, 10), float64],) {
  %413 = fn () -> (Tensor[(16, 12, 10), float64],) {
    %411 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
    %412 = %411.0;
    (%412,)
  };
  %413() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_3183(%var_3181: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) {
  @func_3180(%var_3181) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) */
}

def @func_6543(%var_6541: int64, %var_6542: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %433 = fn (%var_6453: int64, %var_6458: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
    %414 = cast(meta[relay.Constant][30] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %415 = cast(%var_6453, dtype="int64") /* ty=int64 */;
    %416 = reshape(%414, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %417 = reshape(%415, newshape=[]) /* ty=int64 */;
    %418 = @func_5062(%416, %417) /* ty=(Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) */;
    %419 = cast(%var_6458, dtype="int64") /* ty=Tensor[(105), int64] */;
    %420 = cast(meta[relay.Constant][30] /* ty=Tensor[(240), float32] */, dtype="int8") /* ty=Tensor[(240), int8] */;
    %421 = reshape(%419, newshape=[105]) /* ty=Tensor[(105), int64] */;
    %422 = reshape(%420, newshape=[240]) /* ty=Tensor[(240), int8] */;
    %423 = @func_5890(%421, %422) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) */;
    %424 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
    %425 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
    %426 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %427 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    %428 = %418.2;
    %429 = %423.2;
    %430 = %424.0;
    %431 = %425.1;
    %432 = %426.1;
    (%427, %428, meta[relay.Constant][30] /* ty=Tensor[(240), float32] */, %var_6453, %429, %var_6458, %430, %431, %432)
  };
  %433(%var_6541, %var_6542) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_5720(%var_5719: int64) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) {
  %449 = fn (%var_5704: int64) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) {
    %434 = cast(meta[relay.Constant][31] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %435 = reshape(%434, newshape=[3, 40]) /* ty=Tensor[(3, 40), int16] */;
    %436 = @func_3180(%435) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) */;
    %437 = cast(%var_5704, dtype="int64") /* ty=int64 */;
    %438 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %439 = reshape(%437, newshape=[]) /* ty=int64 */;
    %440 = reshape(%438, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %441 = @func_5136(%439, %440) /* ty=(Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) */;
    %442 = @func_4317() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %443 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
    %444 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
    %445 = %436.0;
    %446 = %441.0;
    %447 = %442.1;
    %448 = %443.0;
    (%444, %445, meta[relay.Constant][31] /* ty=Tensor[(120), int16] */, %446, %var_5704, meta[relay.Constant][32] /* ty=Tensor[(360), int64] */, %447, %448)
  };
  %449(%var_5719) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(120), int16], Tensor[(3, 40), int16], int64, Tensor[(360), int64], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32]) */
}

def @func_6847() -> Tensor[(16, 12, 10), bool] {
  %450 = fn () -> Tensor[(16, 12, 10), bool] {
    @func_4394() /* ty=Tensor[(16, 12, 10), bool] */
  };
  %450() /* ty=Tensor[(16, 12, 10), bool] */
}

def @func_5020() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  %451 = @func_4293() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) */;
  %452 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %453 = cast(meta[relay.Constant][33] /* ty=Tensor[(120, 1), int16] */, dtype="int16") /* ty=Tensor[(120, 1), int16] */;
  %454 = reshape(%453, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %455 = @func_1710(%454) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) */;
  %456 = cast(meta[relay.Constant][34] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %457 = reshape(%456, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %458 = %451.0;
  %459 = %452.0;
  %460 = %455.3;
  %461 = @func_2017(%457) /* ty=Tensor[(8, 2, 15), float32] */;
  (%458, %459, %460, meta[relay.Constant][33] /* ty=Tensor[(120, 1), int16] */, %461, meta[relay.Constant][34] /* ty=Tensor[(240), float32] */)
}

def @func_6347(%var_6301: Tensor[(120), int16], %var_6334: Tensor[(105, 1), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) {
  %462 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %463 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %464 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %465 = cast(%var_6301, dtype="int16") /* ty=Tensor[(120), int16] */;
  %466 = reshape(%465, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %467 = @func_1710(%466) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) */;
  %468 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %469 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %470 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %471 = cast(%var_6334, dtype="int64") /* ty=Tensor[(105, 1), int64] */;
  %472 = reshape(%469, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %473 = reshape(%470, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %474 = reshape(%471, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %475 = @func_1190(%472, %473, %474) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %476 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %477 = @func_4854() /* ty=Tensor[(16, 12, 10), bool] */;
  %478 = %462.0;
  %479 = %463.0;
  %480 = %464.3;
  %481 = %467.2;
  %482 = %468.1;
  %483 = %475.1;
  %484 = %476.2;
  (%477, %478, %479, %480, %481, %var_6301, %482, %483, %var_6334, %484)
}

def @func_10037(%var_10035: Tensor[(7, 99), bool]) -> (Tensor[(16, 12, 10), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 99), bool], Tensor[(840), int16], Tensor[(8, 7, 5), float64], Tensor[(280), float64]) {
  @func_10034(%var_10035) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 99), bool], Tensor[(840), int16], Tensor[(8, 7, 5), float64], Tensor[(280), float64]) */
}

def @func_8569() -> (Tensor[(7, 10, 9), bool],) {
  %488 = fn () -> (Tensor[(7, 10, 9), bool],) {
    %485 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 1, 9), bool] */, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
    %486 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 10, 9), bool] */, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
    %487 = logical_or(%485, %486) /* ty=Tensor[(7, 10, 9), bool] */;
    (%487,)
  };
  %488() /* ty=(Tensor[(7, 10, 9), bool],) */
}

def @func_1840(%var_1838: int64) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) {
  @func_1837(%var_1838) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) */
}

def @func_966() -> (Tensor[(16, 12, 10), bool],) {
  %495 = fn () -> (Tensor[(16, 12, 10), bool],) {
    %489 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    %490 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 12, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
    %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(%489, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %494 = greater_equal(%492, %493) /* ty=Tensor[(16, 12, 10), bool] */;
    (%494,)
  };
  %495() /* ty=(Tensor[(16, 12, 10), bool],) */
}

def @func_7198() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) {
  %503 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) {
    %496 = @func_6166() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %497 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 315), int32] */, dtype="int32") /* ty=Tensor[(1, 315), int32] */;
    %498 = reshape(%497, newshape=[3, 15, 7]) /* ty=Tensor[(3, 15, 7), int32] */;
    %499 = @func_4701(%498) /* ty=(Tensor[(3, 15, 7), bool],) */;
    %500 = %496.0;
    %501 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
    %502 = %499.0;
    (%500, %501, %502, meta[relay.Constant][38] /* ty=Tensor[(1, 315), int32] */)
  };
  %503() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) */
}

def @func_7612(%var_7611: Tensor[(7, 15, 2), float32]) -> Tensor[(7, 15, 2), float32] {
  %505 = fn (%var_7567: Tensor[(7, 15, 2), float32]) -> Tensor[(7, 15, 2), float32] {
    %504 = cast(%var_7567, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
    erf(%504) /* ty=Tensor[(7, 15, 2), float32] */
  };
  %505(%var_7611) /* ty=Tensor[(7, 15, 2), float32] */
}

def @func_6351(%var_6349: Tensor[(120), int16], %var_6350: Tensor[(105, 1), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) {
  @func_6347(%var_6349, %var_6350) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) */
}

def @func_4272() -> Tensor[(16, 12, 10), float64] {
  %507 = fn () -> Tensor[(16, 12, 10), float64] {
    %506 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %506.1
  };
  %507() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_6637() -> Tensor[(16, 12, 10), float64] {
  @func_4399() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_3309() -> Tensor[(16, 12, 10), float32] {
  %508 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %508.0
}

def @func_4855() -> Tensor[(16, 12, 10), bool] {
  %510 = fn () -> Tensor[(16, 12, 10), bool] {
    %509 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %509.0
  };
  %510() /* ty=Tensor[(16, 12, 10), bool] */
}

def @func_6686() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */
}

def @func_3180(%var_3169: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool]) {
  %511 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %512 = %511.1;
  %513 = cast(%var_3169, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(2), int32] */;
  %515 = cast(%512, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %517 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %518 = logical_or(%515, %516) /* ty=Tensor[(3, 40), bool] */;
  (%517, %518)
}

def @func_3379(%var_3368: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
  %519 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %520 = cast(%var_3368, dtype="uint64") /* ty=Tensor[(35), uint64] */;
  %521 = reshape(%520, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), uint64] */;
  %522 = @func_1355(%521) /* ty=(Tensor[(5, 7, 1), uint64], Tensor[(5, 7, 1), float64], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(7, 15, 8), int16]) */;
  %523 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  %524 = %519.0;
  %525 = %522.2;
  (%523, %524, %525, %var_3368)
}

def @func_4318() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
  %530 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
    %526 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %527 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
    %528 = %526.0;
    %529 = %527.0;
    (%528, %529)
  };
  %530() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */
}

def @func_1107(%var_1105: Tensor[(693), bool], %var_1106: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) {
  @func_1103(%var_1105, %var_1106) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */
}

def @func_8628(%var_8627: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), float64] {
  %532 = fn (%var_8622: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), float64] {
    %531 = cast(%var_8622, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
    asinh(%531) /* ty=Tensor[(16, 8, 9), float64] */
  };
  %532(%var_8627) /* ty=Tensor[(16, 8, 9), float64] */
}

def @func_9367(%var_9365: Tensor[(8, 7, 5), float64]) -> Tensor[(8, 7, 5), float64] {
  @func_9364(%var_9365) /* ty=Tensor[(8, 7, 5), float64] */
}

def @func_9328() -> (Tensor[(16, 12, 10), float32],) {
  %534 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %533 = @func_4584() /* ty=Tensor[(16, 12, 10), float32] */;
    (%533,)
  };
  %534() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_3601(%var_3589: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float32]) {
  %535 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %538 = asin(%537) /* ty=Tensor[(3, 40), float32] */;
  %539 = cast(%var_3589, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%538, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %543 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %544 = maximum(%541, %542) /* ty=Tensor[(3, 40), uint8] */;
  %545 = %543.0;
  (%544, %545)
}

def @func_8668(%var_8666: Tensor[(11, 13, 14), int32], %var_8667: Tensor[(9), float64]) -> (Tensor[(11, 13, 14), int32], Tensor[(16, 12, 10), uint8], Tensor[(1920), float64], Tensor[(9), float64]) {
  @func_8664(%var_8666, %var_8667) /* ty=(Tensor[(11, 13, 14), int32], Tensor[(16, 12, 10), uint8], Tensor[(1920), float64], Tensor[(9), float64]) */
}

def @func_3546() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
  @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */
}

def @func_8722() -> (Tensor[(16, 12, 10), float32],) {
  %546 = @func_3753() /* ty=Tensor[(16, 12, 10), float32] */;
  (%546,)
}

def @func_2625() -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) {
  @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */
}

def @func_3942() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %547 = @func_3498() /* ty=Tensor[(16, 12, 10), float32] */;
  %548 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
  (%547, %548)
}

def @func_8664(%var_8655: Tensor[(11, 13, 14), int32], %var_8662: Tensor[(9), float64]) -> (Tensor[(11, 13, 14), int32], Tensor[(16, 12, 10), uint8], Tensor[(1920), float64], Tensor[(9), float64]) {
  %549 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 13, 14), int32] */, dtype="int32") /* ty=Tensor[(11, 13, 14), int32] */;
  %550 = shape_of(%var_8655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_8655, dtype="int32") /* ty=Tensor[(11, 13, 14), int32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %553 = cast(meta[relay.Constant][40] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %554 = cast(%var_8662, dtype="float64") /* ty=Tensor[(9), float64] */;
  %555 = reshape(%553, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %556 = reshape(%554, newshape=[3, 3]) /* ty=Tensor[(3, 3), float64] */;
  %557 = @func_6910(%555, %556) /* ty=(Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
  %558 = maximum(%551, %552) /* ty=Tensor[(11, 13, 14), int32] */;
  %559 = %557.0;
  (%558, %559, meta[relay.Constant][40] /* ty=Tensor[(1920), float64] */, %var_8662)
}

def @func_3499() -> Tensor[(16, 12, 10), float32] {
  %561 = fn () -> Tensor[(16, 12, 10), float32] {
    %560 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %560.0
  };
  %561() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10625() -> (Tensor[(240), float32], Tensor[(16, 12, 10), float64]) {
  @func_10623() /* ty=(Tensor[(240), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_6744() -> Tensor[(16, 12, 10), float32] {
  @func_6742() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_190(%var_141: Tensor[(11, 7, 9), bool], %var_142: Tensor[(11, 7, 9), bool], %var_187: Tensor[(840), int16]) -> (Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) {
  %562 = cast(%var_142, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %563 = shape_of(%var_141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_141, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %566 = cast(%var_141, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %567 = log2(%566) /* ty=Tensor[(11, 7, 9), float64] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %569 = cast(%567, dtype="float64") /* ty=Tensor[(11, 7, 9), float64] */;
  %570 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 40), int16] */, dtype="int16") /* ty=Tensor[(3, 40), int16] */;
  %571 = cast(%var_187, dtype="int16") /* ty=Tensor[(840), int16] */;
  %572 = reshape(%570, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %573 = reshape(%571, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %574 = logical_and(%564, %565) /* ty=Tensor[(11, 7, 9), bool] */;
  %575 = exp(%568) /* ty=Tensor[(11, 7, 9), float64] */;
  %576 = acos(%569) /* ty=Tensor[(11, 7, 9), float64] */;
  %577 = @func_19(%572, %573) /* ty=Tensor[(7, 15, 8), int16] */;
  (%574, %575, %576, %577, meta[relay.Constant][41] /* ty=Tensor[(3, 40), int16] */, %var_187)
}

def @func_3311() -> Tensor[(16, 12, 10), float32] {
  @func_3309() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10481() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %582 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
    %578 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %579 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
    %580 = %578.0;
    %581 = %579.0;
    (%580, %581)
  };
  %582() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_8795() -> (Tensor[(16, 12, 10), float32], int64, int64, Tensor[(1, 105), int64]) {
  %583 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %584 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 105), int64] */, dtype="int64") /* ty=Tensor[(1, 105), int64] */;
  %585 = reshape(%583, newshape=[]) /* ty=int64 */;
  %586 = reshape(%584, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %587 = @func_7301(%585, %586) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) */;
  %588 = @func_6198() /* ty=Tensor[(16, 12, 10), float32] */;
  %589 = %587.2;
  (%588, %589, 10 /* ty=int64 */, meta[relay.Constant][42] /* ty=Tensor[(1, 105), int64] */)
}

def @func_1000() -> Tensor[(16, 12, 10), float32] {
  %593 = fn () -> Tensor[(16, 12, 10), float32] {
    %590 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %591 = %590.0;
    %592 = cast(%591, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
    log10(%592) /* ty=Tensor[(16, 12, 10), float32] */
  };
  %593() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_8013() -> (Tensor[(16, 12, 10), float64],) {
  %595 = fn () -> (Tensor[(16, 12, 10), float64],) {
    %594 = @func_6637() /* ty=Tensor[(16, 12, 10), float64] */;
    (%594,)
  };
  %595() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_8060() -> Tensor[(16, 12, 10), float32] {
  @func_3318() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_8373() -> (Tensor[(16, 12, 10), float64],) {
  @func_8371() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_7305(%var_7303: int64, %var_7304: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) {
  @func_7301(%var_7303, %var_7304) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) */
}

def @func_3704(%var_3666: Tensor[(840), int16], %var_3693: Tensor[(231, 3), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) {
  %596 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %598 = cast(meta[relay.Constant][43] /* ty=Tensor[(231, 3), bool] */, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %599 = cast(%var_3666, dtype="int16") /* ty=Tensor[(840), int16] */;
  %600 = reshape(%597, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %601 = reshape(%598, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %602 = reshape(%599, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %603 = @func_2722(%600, %601, %602) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) */;
  %604 = cast(meta[relay.Constant][43] /* ty=Tensor[(231, 3), bool] */, dtype="float32") /* ty=Tensor[(231, 3), float32] */;
  %605 = erf(%604) /* ty=Tensor[(231, 3), float32] */;
  %606 = cast(%var_3693, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(2), int32] */;
  %608 = cast(%605, dtype="bool") /* ty=Tensor[(231, 3), bool] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %610 = cast(%605, dtype="float64") /* ty=Tensor[(231, 3), float64] */;
  %611 = %603.2;
  %612 = greater_equal(%608, %609) /* ty=Tensor[(231, 3), bool] */;
  %613 = sigmoid(%610) /* ty=Tensor[(231, 3), float64] */;
  (%596, %611, %var_3666, %612, %613)
}

def @func_8853(%var_8851: int64, %var_8852: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), int16], Tensor[(72), float32], Tensor[(9), float64], int64, Tensor[(360), int64]) {
  %627 = fn (%var_8845: int64, %var_8846: Tensor[(360), int64]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), int16], Tensor[(72), float32], Tensor[(9), float64], int64, Tensor[(360), int64]) {
    %614 = cast(meta[relay.Constant][44] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %615 = cast(meta[relay.Constant][44] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %616 = reshape(%614, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %617 = reshape(%615, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %618 = @func_8413(%616, %617) /* ty=(Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) */;
    %619 = cast(%var_8845, dtype="int64") /* ty=int64 */;
    %620 = cast(%var_8846, dtype="int64") /* ty=Tensor[(360), int64] */;
    %621 = reshape(%619, newshape=[]) /* ty=int64 */;
    %622 = reshape(%620, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %623 = @func_1576(%621, %622) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
    %624 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
    %625 = %618.1;
    %626 = %623.4;
    (%624, %625, meta[relay.Constant][44] /* ty=Tensor[(72), float32] */, %626, %var_8845, %var_8846)
  };
  %627(%var_8851, %var_8852) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), int16], Tensor[(72), float32], Tensor[(9), float64], int64, Tensor[(360), int64]) */
}

def @func_9467() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) {
  %628 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
  %629 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %630 = @func_8371() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %631 = %628.0;
  %632 = @func_8647() /* ty=Tensor[(16, 12, 10), float32] */;
  %633 = %629.0;
  %634 = %630.0;
  (%631, %632, %633, %634)
}

def @func_8110() -> (Tensor[(693), bool], Tensor[(120), int16], Tensor[(120), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float64]) {
  %635 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
  %636 = cast(meta[relay.Constant][45] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %637 = cast(meta[relay.Constant][46] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %638 = reshape(%636, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %639 = reshape(%637, newshape=[105, 1]) /* ty=Tensor[(105, 1), int64] */;
  %640 = @func_6347(%638, %639) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(3, 40), float32], Tensor[(3, 5, 7), float64], Tensor[(105, 1), int64], Tensor[(16, 12, 10), uint64]) */;
  %641 = %635.3;
  %642 = %640.5;
  %643 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  (%641, %642, meta[relay.Constant][45] /* ty=Tensor[(120), int16] */, meta[relay.Constant][46] /* ty=Tensor[(105), int64] */, %643)
}

def @func_5189(%var_5188: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16]) {
  %650 = fn (%var_5170: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16]) {
    %644 = @func_2550() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %645 = cast(%var_5170, dtype="int16") /* ty=Tensor[(120), int16] */;
    %646 = reshape(%645, newshape=[3, 40]) /* ty=Tensor[(3, 40), int16] */;
    %647 = @func_1788(%646) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) */;
    %648 = %644.0;
    %649 = %647.0;
    (%648, %649, %var_5170)
  };
  %650(%var_5188) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16]) */
}

def @func_677(%var_673: int64, %var_674: Tensor[(15, 8, 3), int64], %var_675: Tensor[(9), float64], %var_676: Tensor[(840), int16]) -> (Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  @func_671(%var_673, %var_674, %var_675, %var_676) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */
}

def @func_1788(%var_1758: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) {
  %651 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %652 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %653 = %652.0;
  %654 = cast(%var_1758, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(2), int32] */;
  %656 = cast(%653, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %658 = cast(%var_1758, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %659 = cast(%653, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %660 = %651.0;
  %661 = subtract(%656, %657) /* ty=Tensor[(3, 40), float32] */;
  %662 = log(%658) /* ty=Tensor[(3, 40), float32] */;
  %663 = acos(%659) /* ty=Tensor[(3, 40), float64] */;
  (%660, %661, %662, %663)
}

def @func_5136(%var_5128: int64, %var_5129: Tensor[(360), int64]) -> (Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) {
  %664 = @func_4317() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %665 = cast(%var_5128, dtype="int64") /* ty=int64 */;
  %666 = cast(%var_5129, dtype="int64") /* ty=Tensor[(360), int64] */;
  %667 = reshape(%665, newshape=[]) /* ty=int64 */;
  %668 = reshape(%666, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %669 = @func_1576(%667, %668) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %670 = %664.1;
  %671 = %669.0;
  (%670, %671, %var_5128, %var_5129)
}

def @func_8516() -> Tensor[(240), float32] {
  %673 = fn () -> Tensor[(240), float32] {
    %672 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
    %672.2
  };
  %673() /* ty=Tensor[(240), float32] */
}

def @func_1873() -> Tensor[(16, 12, 10), float64] {
  @func_909() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_6200() -> Tensor[(16, 12, 10), float32] {
  @func_6198() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_2551() -> (Tensor[(16, 12, 10), float32],) {
  %675 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %674 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    (%674,)
  };
  %675() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_1791(%var_1789: Tensor[(3, 40), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) {
  @func_1788(%var_1789) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float32], Tensor[(3, 40), float64]) */
}

def @func_10623() -> (Tensor[(240), float32], Tensor[(16, 12, 10), float64]) {
  %676 = @func_8515() /* ty=Tensor[(240), float32] */;
  %677 = @func_4271() /* ty=Tensor[(16, 12, 10), float64] */;
  (%676, %677)
}

def @func_10541(%var_10492: int64, %var_10493: Tensor[(105), int64], %var_10538: Tensor[(840, 1), int16]) -> (int64, int64, int64, Tensor[(36, 10), int64], Tensor[(16, 12, 10), float32], Tensor[(120, 105), float64], Tensor[(231, 3), float64], Tensor[(840, 1), int16], Tensor[(693), float32]) {
  %678 = cast(%var_10492, dtype="int64") /* ty=int64 */;
  %679 = cast(%var_10493, dtype="int64") /* ty=Tensor[(105), int64] */;
  %680 = reshape(%678, newshape=[]) /* ty=int64 */;
  %681 = reshape(%679, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %682 = @func_6540(%680, %681) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %683 = %682.1;
  %684 = cast(%683, dtype="int64") /* ty=int64 */;
  %685 = cast(meta[relay.Constant][47] /* ty=Tensor[(36, 10), int64] */, dtype="int64") /* ty=Tensor[(36, 10), int64] */;
  %686 = reshape(%684, newshape=[]) /* ty=int64 */;
  %687 = reshape(%685, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %688 = @func_5136(%686, %687) /* ty=(Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) */;
  %689 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %690 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %691 = %690.3;
  %692 = cast(%var_10493, dtype="float64") /* ty=Tensor[(105), float64] */;
  %693 = cast(%691, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %694 = floor_mod(%692, %693) /* ty=Tensor[(120, 105), float64] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(120, 105), float64] */;
  %696 = cast(%var_10538, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %697 = cast(meta[relay.Constant][48] /* ty=Tensor[(693), float32] */, dtype="float32") /* ty=Tensor[(693), float32] */;
  %698 = reshape(%696, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %699 = reshape(%697, newshape=[231, 3]) /* ty=Tensor[(231, 3), float32] */;
  %700 = @func_3704(%698, %699) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) */;
  %701 = %688.2;
  %702 = %689.0;
  %703 = erf(%695) /* ty=Tensor[(120, 105), float64] */;
  %704 = %700.4;
  (%683, %var_10492, %701, meta[relay.Constant][47] /* ty=Tensor[(36, 10), int64] */, %702, %703, %704, %var_10538, meta[relay.Constant][48] /* ty=Tensor[(693), float32] */)
}

def @func_10398(%var_10334: Tensor[(1, 5, 2), int64], %var_10335: Tensor[(12, 5, 2), int64], %var_10362: Tensor[(72), float32]) -> (Tensor[(16, 12, 10), float32], Tensor[(3, 6, 4), bool], Tensor[(72), float32], Tensor[(12, 5, 2), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %705 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %706 = cast(%var_10362, dtype="float32") /* ty=Tensor[(72), float32] */;
  %707 = cast(%var_10362, dtype="float32") /* ty=Tensor[(72), float32] */;
  %708 = reshape(%706, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %709 = reshape(%707, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %710 = @func_8413(%708, %709) /* ty=(Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) */;
  %711 = cast(%var_10334, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
  %712 = cast(%var_10335, dtype="int64") /* ty=Tensor[(12, 5, 2), int64] */;
  %713 = subtract(%711, %712) /* ty=Tensor[(12, 5, 2), int64] */;
  %714 = cast(%var_10335, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%713, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %718 = not_equal(%716, %717) /* ty=Tensor[(12, 5, 2), bool] */;
  %719 = cast(%713, dtype="float32") /* ty=Tensor[(12, 5, 2), float32] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%718, dtype="float32") /* ty=Tensor[(12, 5, 2), float32] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %723 = @func_8770() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %724 = @func_4756() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %725 = %705.0;
  %726 = %710.0;
  %727 = floor_mod(%721, %722) /* ty=Tensor[(12, 5, 2), float32] */;
  %728 = %723.1;
  %729 = %724.1;
  (%725, %726, %var_10362, %727, %728, %729)
}

def @func_5066(%var_5064: Tensor[(240), float32], %var_5065: int64) -> (Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) {
  @func_5062(%var_5064, %var_5065) /* ty=(Tensor[(240), float32], Tensor[(240), float32], int64, Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool]) */
}

def @func_4394() -> Tensor[(16, 12, 10), bool] {
  %730 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %730.0
}

def @func_5520(%var_5518: Tensor[(1, 9), float64]) -> (Tensor[(840), int16], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(1, 9), float64], Tensor[(120), int16]) {
  @func_5517(%var_5518) /* ty=(Tensor[(840), int16], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(1, 9), float64], Tensor[(120), int16]) */
}

def @func_2204(%var_2203: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) {
  %741 = fn (%var_2188: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) {
    %731 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
    %732 = cast(%var_2188, dtype="int16") /* ty=Tensor[(840), int16] */;
    %733 = reshape(%731, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
    %734 = reshape(%732, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
    %735 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %736 = reshape(%735, newshape=[]) /* ty=int64 */;
    %737 = @func_1837(%736) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) */;
    %738 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    %739 = @func_19(%733, %734) /* ty=Tensor[(7, 15, 8), int16] */;
    %740 = %737.2;
    (%738, %739, meta[relay.Constant][49] /* ty=Tensor[(120), int16] */, %var_2188, %740, -7 /* ty=int64 */)
  };
  %741(%var_2203) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) */
}

def @func_10148() -> (Tensor[(16, 12, 10), float32],) {
  %742 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
  %743 = %742.1;
  (%743,)
}

def @func_8724() -> (Tensor[(16, 12, 10), float32],) {
  @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_7213() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */
}

def @func_4294() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) {
  %747 = fn () -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) {
    %744 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %745 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    %746 = %744.3;
    (%745, %746)
  };
  %747() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), uint64]) */
}

def @func_7721() -> (Tensor[(16, 12, 10), float64],) {
  @func_7719() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_9832() -> Tensor[(16, 12, 10), float64] {
  %749 = fn () -> Tensor[(16, 12, 10), float64] {
    %748 = @func_7719() /* ty=(Tensor[(16, 12, 10), float64],) */;
    %748.0
  };
  %749() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8550() -> Tensor[(240), float32] {
  %750 = fn () -> Tensor[(240), float32] {
    @func_8515() /* ty=Tensor[(240), float32] */
  };
  %750() /* ty=Tensor[(240), float32] */
}

def @func_8151() -> Tensor[(16, 12, 10), float64] {
  @func_8149() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_5517(%var_5508: Tensor[(1, 9), float64]) -> (Tensor[(840), int16], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(1, 9), float64], Tensor[(120), int16]) {
  %751 = @func_2875() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float32]) */;
  %752 = @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %753 = cast(%var_5508, dtype="float64") /* ty=Tensor[(1, 9), float64] */;
  %754 = cast(meta[relay.Constant][50] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %755 = %751.3;
  %756 = cast(%755, dtype="int16") /* ty=Tensor[(840), int16] */;
  %757 = reshape(%753, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %758 = reshape(%754, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %759 = reshape(%756, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %760 = @func_353(%757, %758, %759) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %761 = %752.0;
  %762 = %760.3;
  (%755, %761, %762, %var_5508, meta[relay.Constant][50] /* ty=Tensor[(120), int16] */)
}

def @func_7318() -> (Tensor[(11, 3, 8), float64],) {
  %765 = fn () -> (Tensor[(11, 3, 8), float64],) {
    %763 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
    %764 = %763.1;
    (%764,)
  };
  %765() /* ty=(Tensor[(11, 3, 8), float64],) */
}

def @func_3892() -> (Tensor[(16, 12, 10), float32], Tensor[(693), float32]) {
  @func_3890() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), float32]) */
}

def @func_5553() -> Tensor[(16, 12, 10), float64] {
  @func_909() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8797() -> (Tensor[(16, 12, 10), float32], int64, int64, Tensor[(1, 105), int64]) {
  @func_8795() /* ty=(Tensor[(16, 12, 10), float32], int64, int64, Tensor[(1, 105), int64]) */
}

def @func_4903() -> Tensor[(16, 12, 10), float64] {
  %766 = fn () -> Tensor[(16, 12, 10), float64] {
    @func_1873() /* ty=Tensor[(16, 12, 10), float64] */
  };
  %766() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_4457(%var_4456: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), float64],) {
  %774 = fn (%var_4447: Tensor[(3, 40), float32]) -> (Tensor[(3, 40), float64],) {
    %767 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
    %768 = %767.0;
    %769 = cast(%var_4447, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
    %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(2), int32] */;
    %771 = cast(%768, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %773 = floor_mod(%771, %772) /* ty=Tensor[(3, 40), float64] */;
    (%773,)
  };
  %774(%var_4456) /* ty=(Tensor[(3, 40), float64],) */
}

def @func_10328() -> (Tensor[(16, 12, 10), float64],) {
  @func_10326() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_5595() -> Tensor[(16, 12, 10), float32] {
  @func_5593() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10172() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 5, 7), int64], Tensor[(21, 5), int64]) {
  %775 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %776 = cast(meta[relay.Constant][51] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %777 = cast(meta[relay.Constant][51] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %778 = cast(meta[relay.Constant][51] /* ty=Tensor[(21, 5), int64] */, dtype="int64") /* ty=Tensor[(21, 5), int64] */;
  %779 = reshape(%776, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %780 = reshape(%777, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %781 = reshape(%778, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
  %782 = @func_1190(%779, %780, %781) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
  %783 = %775.1;
  %784 = %782.0;
  (%783, %784, meta[relay.Constant][51] /* ty=Tensor[(21, 5), int64] */)
}

def @func_5660(%var_5646: uint16, %var_5647: Tensor[(8, 7, 9), uint16]) -> (Tensor[(8, 7, 9), uint16],) {
  %785 = cast(%var_5646, dtype="uint16") /* ty=uint16 */;
  %786 = cast(%var_5647, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
  %787 = left_shift(%785, %786) /* ty=Tensor[(8, 7, 9), uint16] */;
  (%787,)
}

def @func_9635() -> (Tensor[(16, 12, 10), float64],) {
  %789 = fn () -> (Tensor[(16, 12, 10), float64],) {
    %788 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    (%788,)
  };
  %789() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_4192() -> (Tensor[(16, 12, 10), float32],) {
  %791 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %790 = @func_3309() /* ty=Tensor[(16, 12, 10), float32] */;
    (%790,)
  };
  %791() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_1220() -> Tensor[(16, 12, 10), float32] {
  @func_1218() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_2789() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) {
  @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */
}

def @func_6022(%var_6021: Tensor[(16, 12, 10), float32]) -> (Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) {
  %804 = fn (%var_5972: Tensor[(16, 12, 10), float32]) -> (Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) {
    %792 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
    %793 = cast(%var_5972, dtype="int32") /* ty=Tensor[(16, 12, 10), int32] */;
    %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(%792, dtype="int32") /* ty=Tensor[(16, 12, 10), int32] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %797 = cast(meta[relay.Constant][52] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
    %798 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
    %799 = reshape(%797, newshape=[105]) /* ty=Tensor[(105), int64] */;
    %800 = reshape(%798, newshape=[240]) /* ty=Tensor[(240), int8] */;
    %801 = @func_5890(%799, %800) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) */;
    %802 = logical_xor(%795, %796) /* ty=Tensor[(16, 12, 10), int32] */;
    %803 = %801.4;
    (%802, %803, meta[relay.Constant][52] /* ty=Tensor[(105), int64] */, meta[relay.Constant][53] /* ty=Tensor[(240), int8] */)
  };
  %804(%var_6021) /* ty=(Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) */
}

def @func_7041() -> Tensor[(16, 12, 10), float32] {
  %806 = fn () -> Tensor[(16, 12, 10), float32] {
    %805 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %805.0
  };
  %806() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10594() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %814 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
    %807 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %808 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
    %809 = @func_4051() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
    %810 = %807.0;
    %811 = %808.0;
    %812 = %809.0;
    %813 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
    (%810, %811, %812, %813)
  };
  %814() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_2019(%var_2018: Tensor[(8, 2, 15), float32]) -> Tensor[(8, 2, 15), float32] {
  %816 = fn (%var_2009: Tensor[(8, 2, 15), float32]) -> Tensor[(8, 2, 15), float32] {
    %815 = cast(%var_2009, dtype="float32") /* ty=Tensor[(8, 2, 15), float32] */;
    log10(%815) /* ty=Tensor[(8, 2, 15), float32] */
  };
  %816(%var_2018) /* ty=Tensor[(8, 2, 15), float32] */
}

def @func_6722(%var_6720: Tensor[(16, 3, 9), bool], %var_6721: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(16, 3, 9), int8]) {
  @func_6718(%var_6720, %var_6721) /* ty=(Tensor[(16, 3, 9), bool], Tensor[(16, 3, 9), int8]) */
}

def @func_3269() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_8296() -> (Tensor[(16, 12, 10), float32],) {
  @func_8294() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_1601(%var_1599: Tensor[(8, 12, 7), float64], %var_1600: Tensor[(105), int64]) -> (Tensor[(8, 12, 7), float64], Tensor[(105), int64], Tensor[(1920), bool], Tensor[(105), int64]) {
  %825 = fn (%var_1587: Tensor[(8, 12, 7), float64], %var_1596: Tensor[(105), int64]) -> (Tensor[(8, 12, 7), float64], Tensor[(105), int64], Tensor[(1920), bool], Tensor[(105), int64]) {
    %817 = cast(%var_1587, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
    %818 = cast(meta[relay.Constant][54] /* ty=Tensor[(1920), bool] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %819 = cast(%var_1596, dtype="int64") /* ty=Tensor[(105), int64] */;
    %820 = reshape(%818, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
    %821 = reshape(%819, newshape=[105]) /* ty=Tensor[(105), int64] */;
    %822 = @func_1410(%820, %821) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
    %823 = log2(%817) /* ty=Tensor[(8, 12, 7), float64] */;
    %824 = %822.3;
    (%823, %824, meta[relay.Constant][54] /* ty=Tensor[(1920), bool] */, %var_1596)
  };
  %825(%var_1599, %var_1600) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(105), int64], Tensor[(1920), bool], Tensor[(105), int64]) */
}

def @func_1195(%var_1192: Tensor[(3, 5, 7), int64], %var_1193: Tensor[(3, 5, 7), int64], %var_1194: Tensor[(3, 5, 7), int64]) -> (Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) {
  @func_1190(%var_1192, %var_1193, %var_1194) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */
}

def @func_1366() -> (Tensor[(16, 12, 10), float32],) {
  @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_9469() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) {
  @func_9467() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) */
}

def @func_3809(%var_3807: Tensor[(4, 5, 12), int8], %var_3808: Tensor[(4, 5, 12), int8]) -> (Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) {
  @func_3805(%var_3807, %var_3808) /* ty=(Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) */
}

def @func_7558() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  %826 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %827 = cast(meta[relay.Constant][55] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %828 = reshape(%827, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), float32] */;
  %829 = @func_4780() /* ty=Tensor[(16, 12, 10), float64] */;
  %830 = %826.1;
  %831 = @func_2017(%828) /* ty=Tensor[(8, 2, 15), float32] */;
  (%829, %830, %831, meta[relay.Constant][55] /* ty=Tensor[(240), float32] */)
}

def @func_9540() -> Tensor[(16, 12, 10), float32] {
  %833 = fn () -> Tensor[(16, 12, 10), float32] {
    %832 = @func_4191() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %832.0
  };
  %833() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_10082() -> (Tensor[(16, 12, 10), float32],) {
  %834 = @func_6166() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %835 = %834.0;
  (%835,)
}

def @func_1464() -> (Tensor[(3, 40), int16],) {
  @func_1462() /* ty=(Tensor[(3, 40), int16],) */
}

def @func_8770() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %836 = @func_5802() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
  %837 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %838 = %836.0;
  %839 = %837.0;
  (%838, %839)
}

def @func_7560() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) {
  @func_7558() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */
}

def @func_4781() -> Tensor[(16, 12, 10), float64] {
  %840 = fn () -> Tensor[(16, 12, 10), float64] {
    @func_1873() /* ty=Tensor[(16, 12, 10), float64] */
  };
  %840() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_10924() -> Tensor[(16, 12, 10), float32] {
  %841 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %841.0
}

def @func_10994() -> (Tensor[(16, 12, 10), float32],) {
  %842 = @func_8722() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %843 = %842.0;
  (%843,)
}

def @func_10215(%var_10214: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), bool], Tensor[(9), float64], Tensor[(360), int64], Tensor[(9), float64]) {
  %852 = fn (%var_10210: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), bool], Tensor[(9), float64], Tensor[(360), int64], Tensor[(9), float64]) {
    %844 = @func_8049() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %845 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %846 = cast(%var_10210, dtype="float64") /* ty=Tensor[(9), float64] */;
    %847 = reshape(%845, newshape=[360, 1]) /* ty=Tensor[(360, 1), int64] */;
    %848 = reshape(%846, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %849 = @func_9237(%847, %848) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) */;
    %850 = %844.0;
    %851 = %849.5;
    (%850, %851, meta[relay.Constant][56] /* ty=Tensor[(360), int64] */, %var_10210)
  };
  %852(%var_10214) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(9), float64], Tensor[(360), int64], Tensor[(9), float64]) */
}

def @func_1916() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %856 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
    %853 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %854 = %853.4;
    %855 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
    (%854, %855)
  };
  %856() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */
}

def @func_8309() -> Tensor[(16, 12, 10), float64] {
  %857 = fn () -> Tensor[(16, 12, 10), float64] {
    @func_4902() /* ty=Tensor[(16, 12, 10), float64] */
  };
  %857() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_5299() -> (Tensor[(16, 12, 10), float32],) {
  %859 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %858 = @func_3318() /* ty=Tensor[(16, 12, 10), float32] */;
    (%858,)
  };
  %859() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_10546(%var_10543: int64, %var_10544: Tensor[(105), int64], %var_10545: Tensor[(840, 1), int16]) -> (int64, int64, int64, Tensor[(36, 10), int64], Tensor[(16, 12, 10), float32], Tensor[(120, 105), float64], Tensor[(231, 3), float64], Tensor[(840, 1), int16], Tensor[(693), float32]) {
  @func_10541(%var_10543, %var_10544, %var_10545) /* ty=(int64, int64, int64, Tensor[(36, 10), int64], Tensor[(16, 12, 10), float32], Tensor[(120, 105), float64], Tensor[(231, 3), float64], Tensor[(840, 1), int16], Tensor[(693), float32]) */
}

def @func_1814() -> (Tensor[(3, 40), float32],) {
  %864 = fn () -> (Tensor[(3, 40), float32],) {
    %860 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
    %861 = %860.0;
    %862 = cast(%861, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
    %863 = acosh(%862) /* ty=Tensor[(3, 40), float32] */;
    (%863,)
  };
  %864() /* ty=(Tensor[(3, 40), float32],) */
}

def @func_5890(%var_5857: Tensor[(105), int64], %var_5884: Tensor[(240), int8]) -> (Tensor[(16, 12, 10), float32], Tensor[(6, ?, 16), int16], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(4, 5, 12), bool], Tensor[(240), int8]) {
  %865 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
  %867 = cast(%865, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %868 = cast(%var_5857, dtype="int64") /* ty=Tensor[(105), int64] */;
  %869 = reshape(%867, newshape=[1920]) /* ty=Tensor[(1920), bool] */;
  %870 = reshape(%868, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %871 = @func_1410(%869, %870) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */;
  %872 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %873 = cast(%var_5884, dtype="int8") /* ty=Tensor[(240), int8] */;
  %874 = cast(%var_5884, dtype="int8") /* ty=Tensor[(240), int8] */;
  %875 = reshape(%873, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int8] */;
  %876 = reshape(%874, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), int8] */;
  %877 = @func_3805(%875, %876) /* ty=(Tensor[(4, 5, 12), bool], Tensor[(16, 12, 10), float64]) */;
  %878 = sqrt(%866) /* ty=Tensor[(16, 12, 10), float32] */;
  %879 = %871.4;
  %880 = %872.0;
  %881 = %877.0;
  (%878, %879, %var_5857, %880, %881, %var_5884)
}

def @func_10326() -> (Tensor[(16, 12, 10), float64],) {
  %882 = @func_5298() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %885 = asin(%884) /* ty=Tensor[(16, 12, 10), float64] */;
  (%885,)
}

def @func_8212() -> Tensor[(16, 12, 10), float64] {
  %887 = fn () -> Tensor[(16, 12, 10), float64] {
    %886 = @func_7103() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) */;
    %886.0
  };
  %887() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_2815() -> (Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) {
  @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */
}

def @func_910() -> Tensor[(16, 12, 10), float64] {
  %889 = fn () -> Tensor[(16, 12, 10), float64] {
    %888 = cast(meta[relay.Constant][57] /* ty=Tensor[(16, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
    log(%888) /* ty=Tensor[(16, 12, 10), float64] */
  };
  %889() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_8388() -> Tensor[(240), float32] {
  %890 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
  %890.1
}

def @func_6914(%var_6912: Tensor[(16, 12, 10), float64], %var_6913: Tensor[(3, 3), float64]) -> (Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  @func_6910(%var_6912, %var_6913) /* ty=(Tensor[(16, 12, 10), uint8], Tensor[(840), int16], Tensor[(3, 3), float64], Tensor[(120), int16], Tensor[(840), int16]) */
}

def @func_7104() -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) {
  %896 = fn () -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) {
    %891 = @func_2787() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(264), float64], Tensor[(693), bool], Tensor[(693), bool]) */;
    %892 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %893 = @func_4902() /* ty=Tensor[(16, 12, 10), float64] */;
    %894 = %891.4;
    %895 = %892.0;
    (%893, %894, %895)
  };
  %896() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), float32]) */
}

def @func_1627() -> (Tensor[(16, 12, 10), float32],) {
  %898 = fn () -> (Tensor[(16, 12, 10), float32],) {
    %897 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_8648() -> Tensor[(16, 12, 10), float32] {
  %899 = fn () -> Tensor[(16, 12, 10), float32] {
    @func_6742() /* ty=Tensor[(16, 12, 10), float32] */
  };
  %899() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_4052() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
  %904 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) {
    %900 = @func_2813() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(11, 3, 8), float64], Tensor[(16, 12, 10), float32]) */;
    %901 = @func_3544() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */;
    %902 = %900.2;
    %903 = %901.1;
    (%902, %903)
  };
  %904() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32]) */
}

def @func_3708(%var_3706: Tensor[(840), int16], %var_3707: Tensor[(231, 3), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) {
  @func_3704(%var_3706, %var_3707) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) */
}

def @func_1713(%var_1711: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) {
  @func_1710(%var_1711) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) */
}

def @func_5304() -> Tensor[(16, 12, 10), float64] {
  @func_5302() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_6736() -> (Tensor[(16, 12, 10), float64],) {
  %906 = fn () -> (Tensor[(16, 12, 10), float64],) {
    %905 = @func_5302() /* ty=Tensor[(16, 12, 10), float64] */;
    (%905,)
  };
  %906() /* ty=(Tensor[(16, 12, 10), float64],) */
}

def @func_1294() -> (Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) {
  @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */
}

def @func_8371() -> (Tensor[(16, 12, 10), float64],) {
  %907 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %908 = %907.0;
  (%908,)
}

def @func_2623() -> (Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) {
  %909 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %910 = %909.0;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %912 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
  %913 = acosh(%911) /* ty=Tensor[(16, 12, 10), float64] */;
  %914 = %912.0;
  (%913, %914)
}

def @func_195(%var_192: Tensor[(11, 7, 9), bool], %var_193: Tensor[(11, 7, 9), bool], %var_194: Tensor[(840), int16]) -> (Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) {
  @func_190(%var_192, %var_193, %var_194) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */
}

def @func_1134() -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) {
  %922 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) {
    %915 = cast(meta[relay.Constant][58] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
    %916 = cast(meta[relay.Constant][58] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
    %917 = reshape(%915, newshape=[693]) /* ty=Tensor[(693), bool] */;
    %918 = reshape(%916, newshape=[693]) /* ty=Tensor[(693), bool] */;
    %919 = @func_1103(%917, %918) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
    %920 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    %921 = %919.1;
    (%920, %921, meta[relay.Constant][58] /* ty=Tensor[(693), bool] */)
  };
  %922() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */
}

def @func_6390() -> Tensor[(9, 2, 8), float64] {
  %924 = fn () -> Tensor[(9, 2, 8), float64] {
    %923 = @func_4756() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */;
    %923.0
  };
  %924() /* ty=Tensor[(9, 2, 8), float64] */
}

def @func_3890() -> (Tensor[(16, 12, 10), float32], Tensor[(693), float32]) {
  %925 = @func_2449() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */;
  %926 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %927 = %926.2;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(693), float32] */;
  %929 = %925.0;
  %930 = cos(%928) /* ty=Tensor[(693), float32] */;
  (%929, %930)
}

def @func_6684() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %931 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %932 = %931.2;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %934 = erf(%933) /* ty=Tensor[(16, 12, 10), float64] */;
  %935 = @func_5593() /* ty=Tensor[(16, 12, 10), float32] */;
  (%934, %935)
}

def @func_7079(%var_7078: Tensor[(16, 8, 7), float32]) -> Tensor[(16, 8, 7), bool] {
  %942 = fn (%var_7050: Tensor[(16, 8, 7), float32]) -> Tensor[(16, 8, 7), bool] {
    %936 = cast(%var_7050, dtype="float32") /* ty=Tensor[(16, 8, 7), float32] */;
    %937 = atan(%936) /* ty=Tensor[(16, 8, 7), float32] */;
    %938 = cast(%937, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
    %939 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%var_7050, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%940, %941) /* ty=Tensor[(16, 8, 7), bool] */
  };
  %942(%var_7078) /* ty=Tensor[(16, 8, 7), bool] */
}

def @func_8772() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  @func_8770() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */
}

def @func_11198(%var_11196: Tensor[(840), int16], %var_11197: Tensor[(693), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(840), int16], Tensor[(693), float32], Tensor[(16, 12, 10), float32]) {
  %954 = fn (%var_11168: Tensor[(840), int16], %var_11169: Tensor[(693), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(840), int16], Tensor[(693), float32], Tensor[(16, 12, 10), float32]) {
    %943 = @func_7558() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
    %944 = @func_9467() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float64]) */;
    %945 = cast(%var_11168, dtype="int16") /* ty=Tensor[(840), int16] */;
    %946 = cast(%var_11169, dtype="float32") /* ty=Tensor[(693), float32] */;
    %947 = reshape(%945, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %948 = reshape(%946, newshape=[231, 3]) /* ty=Tensor[(231, 3), float32] */;
    %949 = @func_3704(%947, %948) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), float32], Tensor[(840), int16], Tensor[(231, 3), bool], Tensor[(231, 3), float64]) */;
    %950 = %943.0;
    %951 = %944.1;
    %952 = %949.0;
    %953 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    (%950, %951, %952, %var_11168, %var_11169, %953)
  };
  %954(%var_11196, %var_11197) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(840), int16], Tensor[(693), float32], Tensor[(16, 12, 10), float32]) */
}

def @func_9240(%var_9238: Tensor[(360, 1), int64], %var_9239: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) {
  %973 = fn (%var_9219: Tensor[(360, 1), int64], %var_9220: Tensor[(9), float64]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) {
    %955 = @func_4394() /* ty=Tensor[(16, 12, 10), bool] */;
    %956 = cast(%955, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
    %957 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %958 = cast(%var_9219, dtype="int64") /* ty=Tensor[(360, 1), int64] */;
    %959 = cast(%var_9220, dtype="float64") /* ty=Tensor[(9), float64] */;
    %960 = cast(meta[relay.Constant][59] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
    %961 = reshape(%957, newshape=[]) /* ty=int64 */;
    %962 = reshape(%958, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), int64] */;
    %963 = reshape(%959, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %964 = reshape(%960, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %965 = @func_671(%961, %962, %963, %964) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) */;
    %966 = cast(%955, dtype="float32") /* ty=Tensor[(16, 12, 10), float32] */;
    %967 = reshape(%966, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float32] */;
    %968 = @func_6020(%967) /* ty=(Tensor[(16, 12, 10), int32], Tensor[(4, 5, 12), bool], Tensor[(105), int64], Tensor[(240), int8]) */;
    %969 = atan(%956) /* ty=Tensor[(16, 12, 10), float32] */;
    %970 = @func_8060() /* ty=Tensor[(16, 12, 10), float32] */;
    %971 = %965.3;
    %972 = %968.1;
    (%969, %970, %971, -5 /* ty=int64 */, %var_9219, %var_9220, meta[relay.Constant][59] /* ty=Tensor[(840), int16] */, %972)
  };
  %973(%var_9238, %var_9239) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(120), int16], int64, Tensor[(360, 1), int64], Tensor[(9), float64], Tensor[(840), int16], Tensor[(4, 5, 12), bool]) */
}

def @func_8149() -> Tensor[(16, 12, 10), float64] {
  %974 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %974.0
}

def @func_11085(%var_11037: Tensor[(12, 3, 6), float64]) -> (Tensor[(12, 3, 6), bool], Tensor[(16, 12, 10), float32], Tensor[(10, 13, 3), int32], Tensor[(390), int32], Tensor[(16, 8, 7), bool], Tensor[(896), float32]) {
  %975 = cast(%var_11037, dtype="float64") /* ty=Tensor[(12, 3, 6), float64] */;
  %976 = sinh(%975) /* ty=Tensor[(12, 3, 6), float64] */;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %978 = sigmoid(%977) /* ty=Tensor[(12, 3, 6), float32] */;
  %979 = cast(%976, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%978, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %983 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %984 = cast(meta[relay.Constant][60] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %985 = reshape(%984, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %986 = @func_8698(%985) /* ty=(Tensor[(10, 13, 3), int32],) */;
  %987 = cast(meta[relay.Constant][61] /* ty=Tensor[(896), float32] */, dtype="float32") /* ty=Tensor[(896), float32] */;
  %988 = reshape(%987, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), float32] */;
  %989 = logical_and(%981, %982) /* ty=Tensor[(12, 3, 6), bool] */;
  %990 = %983.0;
  %991 = %986.0;
  %992 = @func_7077(%988) /* ty=Tensor[(16, 8, 7), bool] */;
  (%989, %990, %991, meta[relay.Constant][60] /* ty=Tensor[(390), int32] */, %992, meta[relay.Constant][61] /* ty=Tensor[(896), float32] */)
}

def @func_8930(%var_8929: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
  %999 = fn (%var_8924: Tensor[(35), uint64]) -> (Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) {
    %993 = @func_7984() /* ty=(Tensor[(16, 12, 10), bool], Tensor[(240), float32], Tensor[(240), float32], int64) */;
    %994 = cast(%var_8924, dtype="uint64") /* ty=Tensor[(35), uint64] */;
    %995 = reshape(%994, newshape=[35]) /* ty=Tensor[(35), uint64] */;
    %996 = @func_3379(%995) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) */;
    %997 = %993.0;
    %998 = %996.2;
    (%997, %998, %var_8924)
  };
  %999(%var_8929) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), bool], Tensor[(35), uint64]) */
}

def @func_6609() -> (Tensor[(16, 12, 10), bool], Tensor[(120, 1), int16], Tensor[(7, 15, 8), int16]) {
  %1000 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1001 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %1002 = @func_1133() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool]) */;
  %1003 = %1000.0;
  %1004 = %1001.3;
  %1005 = %1002.1;
  (%1003, %1004, %1005)
}

def @func_1710(%var_1672: Tensor[(120), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], Tensor[(16, 12, 10), float64]) {
  %1006 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1007 = cast(%var_1672, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1008 = cast(meta[relay.Constant][62] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %1009 = reshape(%1007, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), int16] */;
  %1010 = reshape(%1008, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int16] */;
  %1011 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %1012 = %1006.0;
  %1013 = @func_1218() /* ty=Tensor[(16, 12, 10), float32] */;
  %1014 = @func_19(%1009, %1010) /* ty=Tensor[(7, 15, 8), int16] */;
  %1015 = %1011.0;
  (%1012, %1013, %1014, %var_1672, meta[relay.Constant][62] /* ty=Tensor[(840), int16] */, %1015)
}

def @func_5140(%var_5138: int64, %var_5139: Tensor[(360), int64]) -> (Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) {
  @func_5136(%var_5138, %var_5139) /* ty=(Tensor[(3, 40), int16], Tensor[(16, 12, 10), bool], int64, Tensor[(360), int64]) */
}

def @func_7821(%var_7820: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(210), float32], Tensor[(16, 12, 10), float64], Tensor[(1, 315), int32], Tensor[(7, 15, 2), float32]) {
  %1027 = fn (%var_7726: Tensor[(11, 13, 3), float32]) -> (Tensor[(11, 13, 3), float32], Tensor[(210), float32], Tensor[(16, 12, 10), float64], Tensor[(1, 315), int32], Tensor[(7, 15, 2), float32]) {
    %1016 = cast(%var_7726, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
    %1017 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
    %1018 = @func_7197() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64], Tensor[(3, 15, 7), bool], Tensor[(1, 315), int32]) */;
    %1019 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %1020 = reshape(%1019, newshape=[7, 15, 2]) /* ty=Tensor[(7, 15, 2), float32] */;
    %1021 = @func_7610(%1020) /* ty=Tensor[(7, 15, 2), float32] */;
    %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(7, 15, 2), float32] */;
    %1023 = log10(%1016) /* ty=Tensor[(11, 13, 3), float32] */;
    %1024 = %1017.0;
    %1025 = %1018.3;
    %1026 = asinh(%1022) /* ty=Tensor[(7, 15, 2), float32] */;
    (%1023, meta[relay.Constant][63] /* ty=Tensor[(210), float32] */, %1024, %1025, %1026)
  };
  %1027(%var_7820) /* ty=(Tensor[(11, 13, 3), float32], Tensor[(210), float32], Tensor[(16, 12, 10), float64], Tensor[(1, 315), int32], Tensor[(7, 15, 2), float32]) */
}

def @func_8190() -> Tensor[(16, 12, 10), float32] {
  @func_8188() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_7211() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) {
  %1028 = @func_5553() /* ty=Tensor[(16, 12, 10), float64] */;
  %1029 = @func_3753() /* ty=Tensor[(16, 12, 10), float32] */;
  (%1028, %1029)
}

def @func_4585() -> Tensor[(16, 12, 10), float32] {
  %1031 = fn () -> Tensor[(16, 12, 10), float32] {
    %1030 = @func_2550() /* ty=(Tensor[(16, 12, 10), float32],) */;
    %1030.0
  };
  %1031() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_4001() -> (Tensor[(16, 12, 10), float32],) {
  @func_3999() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_2247(%var_2230: Tensor[(693), bool]) -> (Tensor[(16, 12, 10), float32], Tensor[(693), bool], Tensor[(16, 12, 10), float64]) {
  %1032 = @func_1626() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1033 = cast(%var_2230, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1034 = reshape(%1033, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1035 = @func_2002(%1034) /* ty=(Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) */;
  %1036 = %1035.1;
  %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1038 = %1032.0;
  %1039 = exp(%1037) /* ty=Tensor[(16, 12, 10), float64] */;
  (%1038, %var_2230, %1039)
}

def @func_10684() -> (Tensor[(16, 12, 10), float32],) {
  %1040 = @func_10082() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_10996() -> (Tensor[(16, 12, 10), float32],) {
  @func_10994() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_1462() -> (Tensor[(3, 40), int16],) {
  %1042 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
  %1043 = %1042.5;
  (%1043,)
}

def @func_6981() -> Tensor[(16, 12, 10), float64] {
  %1045 = fn () -> Tensor[(16, 12, 10), float64] {
    %1044 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
    %1044.0
  };
  %1045() /* ty=Tensor[(16, 12, 10), float64] */
}

def @func_1190(%var_1155: Tensor[(3, 5, 7), int64], %var_1156: Tensor[(3, 5, 7), int64], %var_1170: Tensor[(3, 5, 7), int64]) -> (Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) {
  %1046 = cast(%var_1156, dtype="int64") /* ty=Tensor[(3, 5, 7), int64] */;
  %1047 = shape_of(%var_1155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1048 = cast(%var_1155, dtype="int64") /* ty=Tensor[(3, 5, 7), int64] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1050 = cast(%var_1156, dtype="float64") /* ty=Tensor[(3, 5, 7), float64] */;
  %1051 = cast(%var_1170, dtype="float32") /* ty=Tensor[(3, 5, 7), float32] */;
  %1052 = shape_of(%var_1155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(%var_1155, dtype="float32") /* ty=Tensor[(3, 5, 7), float32] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1055 = cast(meta[relay.Constant][64] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1056 = cast(meta[relay.Constant][64] /* ty=Tensor[(693), bool] */, dtype="bool") /* ty=Tensor[(693), bool] */;
  %1057 = reshape(%1055, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1058 = reshape(%1056, newshape=[693]) /* ty=Tensor[(693), bool] */;
  %1059 = @func_1103(%1057, %1058) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), bool], Tensor[(693), bool]) */;
  %1060 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %1061 = cast(meta[relay.Constant][66] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1062 = %1059.1;
  %1063 = cast(%1062, dtype="int16") /* ty=Tensor[(7, 15, 8), int16] */;
  %1064 = reshape(%1060, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1065 = reshape(%1061, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %1066 = reshape(%1063, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %1067 = @func_353(%1064, %1065, %1066) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %1068 = bitwise_and(%1048, %1049) /* ty=Tensor[(3, 5, 7), int64] */;
  %1069 = sin(%1050) /* ty=Tensor[(3, 5, 7), float64] */;
  %1070 = floor_divide(%1053, %1054) /* ty=Tensor[(3, 5, 7), float32] */;
  %1071 = %1067.0;
  (%1068, %1069, %1070, %1062, meta[relay.Constant][64] /* ty=Tensor[(693), bool] */, %1071, meta[relay.Constant][65] /* ty=Tensor[(3, 3), float64] */, meta[relay.Constant][66] /* ty=Tensor[(120), int16] */)
}

def @func_9059() -> (Tensor[(7, 15, 8), int16], Tensor[(16, 8, 7), bool], Tensor[(896), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(5, 7, ?), float32]) {
  @func_9057() /* ty=(Tensor[(7, 15, 8), int16], Tensor[(16, 8, 7), bool], Tensor[(896), float32], Tensor[(16, 12, 10), bool], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(5, 7, ?), float32]) */
}

def @func_8050() -> (Tensor[(16, 12, 10), bool],) {
  %1074 = fn () -> (Tensor[(16, 12, 10), bool],) {
    %1072 = @func_2463() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %1073 = %1072.0;
    (%1073,)
  };
  %1074() /* ty=(Tensor[(16, 12, 10), bool],) */
}

def @func_6718(%var_6695: Tensor[(16, 3, 9), bool], %var_6696: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(16, 3, 9), int8]) {
  %1075 = cast(%var_6696, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %1076 = shape_of(%var_6695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1077 = cast(%var_6695, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1079 = cast(%var_6695, dtype="int8") /* ty=Tensor[(16, 3, 9), int8] */;
  %1080 = shape_of(%var_6696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%var_6696, dtype="int8") /* ty=Tensor[(16, 3, 9), int8] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1083 = logical_or(%1077, %1078) /* ty=Tensor[(16, 3, 9), bool] */;
  %1084 = add(%1081, %1082) /* ty=Tensor[(16, 3, 9), int8] */;
  (%1083, %1084)
}

def @func_2727(%var_2724: Tensor[(16, 12, 10), float64], %var_2725: Tensor[(693), bool], %var_2726: Tensor[(840), int16]) -> (Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) {
  @func_2722(%var_2724, %var_2725, %var_2726) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(105), int64], Tensor[(3, 40), float32], Tensor[(3, 1, 3), float32], Tensor[(11, 7, 9), float64], Tensor[(693), bool], Tensor[(840), int16]) */
}

def @func_7301(%var_7289: int64, %var_7290: Tensor[(105), int64]) -> (Tensor[(16, 12, 10), float64], Tensor[(105), int64], int64, Tensor[(105), int64], Tensor[(16, 12, 10), float32]) {
  %1085 = cast(%var_7289, dtype="int64") /* ty=int64 */;
  %1086 = cast(%var_7290, dtype="int64") /* ty=Tensor[(105), int64] */;
  %1087 = reshape(%1085, newshape=[]) /* ty=int64 */;
  %1088 = reshape(%1086, newshape=[105]) /* ty=Tensor[(105), int64] */;
  %1089 = @func_6540(%1087, %1088) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(240), float32], int64, Tensor[(105), int64], Tensor[(105), int64], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %1090 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %1091 = %1089.5;
  %1092 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
  (%1090, %1091, %var_7289, %var_7290, %1092)
}

def @func_2004(%var_2003: Tensor[(693), bool]) -> (Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) {
  %1111 = fn (%var_1976: Tensor[(693), bool]) -> (Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) {
    %1093 = @func_1813() /* ty=(Tensor[(3, 40), float32],) */;
    %1094 = @func_1915() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %1095 = cast(%var_1976, dtype="bool") /* ty=Tensor[(693), bool] */;
    %1096 = cast(%var_1976, dtype="bool") /* ty=Tensor[(693), bool] */;
    %1097 = cast(meta[relay.Constant][67] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
    %1098 = reshape(%1095, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
    %1099 = reshape(%1096, newshape=[11, 7, 9]) /* ty=Tensor[(11, 7, 9), bool] */;
    %1100 = reshape(%1097, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %1101 = @func_190(%1098, %1099, %1100) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(11, 7, 9), float64], Tensor[(11, 7, 9), float64], Tensor[(7, 15, 8), int16], Tensor[(3, 40), int16], Tensor[(840), int16]) */;
    %1102 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
    %1103 = %1102.0;
    %1104 = cast(%1103, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
    %1105 = reshape(%1104, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
    %1106 = @func_124(%1105) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
    %1107 = %1093.0;
    %1108 = %1094.0;
    %1109 = %1101.4;
    %1110 = %1106.3;
    (%1107, %1108, %1109, %var_1976, meta[relay.Constant][67] /* ty=Tensor[(840), int16] */, %1103, %1110)
  };
  %1111(%var_2003) /* ty=(Tensor[(3, 40), float32], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16], Tensor[(693), bool], Tensor[(840), int16], Tensor[(16, 12, 10), bool], Tensor[(12, 10, 16), uint64]) */
}

def @func_8062() -> Tensor[(16, 12, 10), float32] {
  @func_8060() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_9387(%var_9386: int32) -> (Tensor[(13, 13, 3), bool], Tensor[(11, 3, 8), float64], Tensor[(66, 4), float64]) {
  %1121 = fn (%var_9369: int32) -> (Tensor[(13, 13, 3), bool], Tensor[(11, 3, 8), float64], Tensor[(66, 4), float64]) {
    %1112 = cast(%var_9369, dtype="bool") /* ty=bool */;
    %1113 = cast(meta[relay.Constant][68] /* ty=Tensor[(13, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
    %1114 = cast(meta[relay.Constant][69] /* ty=Tensor[(66, 4), float64] */, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
    %1115 = cast(meta[relay.Constant][69] /* ty=Tensor[(66, 4), float64] */, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
    %1116 = reshape(%1114, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
    %1117 = reshape(%1115, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
    %1118 = @func_2496(%1116, %1117) /* ty=(Tensor[(11, 3, 8), float64],) */;
    %1119 = greater_equal(%1112, %1113) /* ty=Tensor[(13, 13, 3), bool] */;
    %1120 = %1118.0;
    (%1119, %1120, meta[relay.Constant][69] /* ty=Tensor[(66, 4), float64] */)
  };
  %1121(%var_9386) /* ty=(Tensor[(13, 13, 3), bool], Tensor[(11, 3, 8), float64], Tensor[(66, 4), float64]) */
}

def @func_1413(%var_1411: Tensor[(1920), bool], %var_1412: Tensor[(105), int64]) -> (Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) {
  %1143 = fn (%var_1384: Tensor[(1920), bool], %var_1388: Tensor[(105), int64]) -> (Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) {
    %1122 = cast(%var_1384, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %1123 = reshape(%1122, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), bool] */;
    %1124 = @func_124(%1123) /* ty=(Tensor[(7, 15, 8), int16], Tensor[(1, 120), int16], Tensor[(840), int16], Tensor[(12, 10, 16), uint64]) */;
    %1125 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
    %1126 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
    %1127 = cast(%var_1388, dtype="int64") /* ty=Tensor[(105), int64] */;
    %1128 = reshape(%1125, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %1129 = reshape(%1126, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %1130 = reshape(%1127, newshape=[3, 5, 7]) /* ty=Tensor[(3, 5, 7), int64] */;
    %1131 = @func_1190(%1128, %1129, %1130) /* ty=(Tensor[(3, 5, 7), int64], Tensor[(3, 5, 7), float64], Tensor[(3, 5, 7), float32], Tensor[(7, 15, 8), int16], Tensor[(693), bool], Tensor[(3, 1, 3), float64], Tensor[(3, 3), float64], Tensor[(120), int16]) */;
    %1132 = cast(meta[relay.Constant][70] /* ty=Tensor[(6, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
    %1133 = sin(%1132) /* ty=Tensor[(6, 1, 16), float32] */;
    %1134 = cast(meta[relay.Constant][70] /* ty=Tensor[(6, 1, 16), float32] */, dtype="int16") /* ty=Tensor[(6, 1, 16), int16] */;
    %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1136 = cast(%1133, dtype="int16") /* ty=Tensor[(6, 1, 16), int16] */;
    %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1138 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %1139 = %1124.2;
    %1140 = %1131.5;
    %1141 = logical_xor(%1136, %1137) /* ty=Tensor[(6, ?, 16), int16] */;
    %1142 = %1138.1;
    (%1139, %var_1384, %1140, %var_1388, %1141, %1142)
  };
  %1143(%var_1411, %var_1412) /* ty=(Tensor[(840), int16], Tensor[(1920), bool], Tensor[(3, 1, 3), float64], Tensor[(105), int64], Tensor[(6, ?, 16), int16], Tensor[(693), bool]) */
}

def @func_5802() -> (Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %1144 = @func_3267() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %1145 = @func_3477() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
  %1146 = %1144.1;
  %1147 = %1145.1;
  (%1146, %1147)
}

def @func_8701(%var_8699: Tensor[(10, 13, 3), int32]) -> (Tensor[(10, 13, 3), int32],) {
  @func_8698(%var_8699) /* ty=(Tensor[(10, 13, 3), int32],) */
}

def @func_5664(%var_5662: uint16, %var_5663: Tensor[(8, 7, 9), uint16]) -> (Tensor[(8, 7, 9), uint16],) {
  @func_5660(%var_5662, %var_5663) /* ty=(Tensor[(8, 7, 9), uint16],) */
}

def @func_4835(%var_4834: Tensor[(693), float32]) -> (Tensor[(3, 40), int16], Tensor[(693), int64]) {
  %1157 = fn (%var_4822: Tensor[(693), float32]) -> (Tensor[(3, 40), int16], Tensor[(693), int64]) {
    %1148 = @func_1462() /* ty=(Tensor[(3, 40), int16],) */;
    %1149 = @func_3890() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(693), float32]) */;
    %1150 = %1149.1;
    %1151 = cast(%var_4822, dtype="int64") /* ty=Tensor[(693), int64] */;
    %1152 = shape_of(%1150, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1153 = cast(%1150, dtype="int64") /* ty=Tensor[(693), int64] */;
    %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1155 = %1148.0;
    %1156 = right_shift(%1153, %1154) /* ty=Tensor[(693), int64] */;
    (%1155, %1156)
  };
  %1157(%var_4834) /* ty=(Tensor[(3, 40), int16], Tensor[(693), int64]) */
}

def @func_1218() -> Tensor[(16, 12, 10), float32] {
  @func_999() /* ty=Tensor[(16, 12, 10), float32] */
}

def @func_1837(%var_1822: int64) -> (Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(840), int16]) {
  %1158 = @func_965() /* ty=(Tensor[(16, 12, 10), bool],) */;
  %1159 = cast(%var_1822, dtype="int64") /* ty=int64 */;
  %1160 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1161 = reshape(%1159, newshape=[]) /* ty=int64 */;
  %1162 = reshape(%1160, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1163 = @func_1576(%1161, %1162) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %1164 = cast(%var_1822, dtype="int64") /* ty=int64 */;
  %1165 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1166 = reshape(%1164, newshape=[]) /* ty=int64 */;
  %1167 = reshape(%1165, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1168 = @func_1576(%1166, %1167) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(840), int16], int64, Tensor[(360), int64], Tensor[(9), float64], Tensor[(840), int16]) */;
  %1169 = %1158.0;
  %1170 = %1163.1;
  %1171 = %1168.1;
  (%1169, %1170, %var_1822, meta[relay.Constant][71] /* ty=Tensor[(360), int64] */, %1171)
}

def @func_7447() -> (Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) {
  %1172 = @func_5020() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32], Tensor[(120), int16], Tensor[(120, 1), int16], Tensor[(8, 2, 15), float32], Tensor[(240), float32]) */;
  %1173 = @func_6684() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %1174 = cast(meta[relay.Constant][72] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %1175 = reshape(%1174, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %1176 = @func_2202(%1175) /* ty=(Tensor[(16, 12, 10), float32], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16], int64, int64) */;
  %1177 = %1172.3;
  %1178 = %1173.1;
  %1179 = %1176.5;
  (%1177, %1178, %1179, meta[relay.Constant][72] /* ty=Tensor[(840), int16] */)
}

def @func_4757() -> (Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
  %1185 = fn () -> (Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) {
    %1180 = cast(meta[relay.Constant][73] /* ty=Tensor[(9, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
    %1181 = @func_3942() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) */;
    %1182 = asin(%1180) /* ty=Tensor[(9, 2, 8), float64] */;
    %1183 = %1181.1;
    %1184 = @func_1873() /* ty=Tensor[(16, 12, 10), float64] */;
    (%1182, %1183, %1184)
  };
  %1185() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float64]) */
}

def @func_8188() -> Tensor[(16, 12, 10), float32] {
  %1186 = @func_7211() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(16, 12, 10), float32]) */;
  %1186.1
}

def @func_7449() -> (Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) {
  @func_7447() /* ty=(Tensor[(120, 1), int16], Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16]) */
}

def @func_9345() -> Tensor[(3, 40), int16] {
  @func_9343() /* ty=Tensor[(3, 40), int16] */
}

def @func_6831(%var_6781: Tensor[(3, 40), int16], %var_6821: Tensor[(3, 40), float64]) -> (Tensor[(3, 40), float32], Tensor[(3, 40), uint8], Tensor[(16, 12, 10), float64], Tensor[(3, 40), bool], Tensor[(360, 1), float64], int64) {
  %1187 = @func_2623() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(3, 40), int16]) */;
  %1188 = %1187.1;
  %1189 = cast(%var_6781, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1191 = cast(%1188, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1193 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 40), int16] */, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %1194 = shape_of(%1188, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1195 = cast(%1188, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %1196 = dyn.reshape(%1193, %1194, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1197 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 40), int16] */, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %1198 = shape_of(%1188, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1199 = cast(%1188, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1201 = add(%1199, %1200) /* ty=Tensor[(3, 40), float64] */;
  %1202 = cast(%var_6821, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1204 = cast(%1201, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1206 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1207 = reshape(%1206, newshape=[]) /* ty=int64 */;
  %1208 = @func_2943(%1207) /* ty=(Tensor[(16, 12, 10), float32], int64, Tensor[(840), int16], Tensor[(360, 1), float64]) */;
  %1209 = power(%1191, %1192) /* ty=Tensor[(3, 40), float32] */;
  %1210 = bitwise_xor(%1195, %1196) /* ty=Tensor[(3, 40), uint8] */;
  %1211 = @func_909() /* ty=Tensor[(16, 12, 10), float64] */;
  %1212 = logical_and(%1204, %1205) /* ty=Tensor[(3, 40), bool] */;
  %1213 = %1208.3;
  (%1209, %1210, %1211, %1212, %1213, -5 /* ty=int64 */)
}

def @func_10150() -> (Tensor[(16, 12, 10), float32],) {
  @func_10148() /* ty=(Tensor[(16, 12, 10), float32],) */
}

def @func_10969() -> Tensor[(2, 11, 5), float64] {
  %1218 = fn () -> Tensor[(2, 11, 5), float64] {
    %1214 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
    %1215 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(2, 11, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1216 = cast(meta[relay.Constant][75] /* ty=Tensor[(2, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 5), float64] */;
    %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%1216, %1217) /* ty=Tensor[(2, 11, 5), float64] */
  };
  %1218() /* ty=Tensor[(2, 11, 5), float64] */
}

def @func_8416(%var_8414: Tensor[(3, 6, 4), float32], %var_8415: Tensor[(3, 6, 4), float32]) -> (Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) {
  %1231 = fn (%var_8394: Tensor[(3, 6, 4), float32], %var_8406: Tensor[(3, 6, 4), float32]) -> (Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) {
    %1219 = cast(%var_8394, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
    %1220 = erf(%1219) /* ty=Tensor[(3, 6, 4), float32] */;
    %1221 = cast(%var_8394, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
    %1222 = shape_of(%1220, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1223 = cast(%1220, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
    %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1225 = cast(%var_8406, dtype="int16") /* ty=Tensor[(3, 6, 4), int16] */;
    %1226 = shape_of(%var_8394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1227 = cast(%var_8394, dtype="int16") /* ty=Tensor[(3, 6, 4), int16] */;
    %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1229 = equal(%1223, %1224) /* ty=Tensor[(3, 6, 4), bool] */;
    %1230 = bitwise_and(%1227, %1228) /* ty=Tensor[(3, 6, 4), int16] */;
    (%1229, %1230)
  };
  %1231(%var_8414, %var_8415) /* ty=(Tensor[(3, 6, 4), bool], Tensor[(3, 6, 4), int16]) */
}

def @func_2450() -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) {
  %1249 = fn () -> (Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) {
    %1232 = @func_1292() /* ty=(Tensor[(16, 12, 10), float64], Tensor[(693), bool], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), uint64], Tensor[(16, 12, 10), float32], Tensor[(3, 40), int16]) */;
    %1233 = %1232.5;
    %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
    %1235 = erf(%1234) /* ty=Tensor[(3, 40), float32] */;
    %1236 = cast(%1235, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
    %1237 = sin(%1236) /* ty=Tensor[(3, 40), float64] */;
    %1238 = cast(%1235, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
    %1239 = shape_of(%1237, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1240 = cast(%1237, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
    %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1242 = cast(%1233, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
    %1243 = shape_of(%1235, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1244 = cast(%1235, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
    %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1246 = @func_999() /* ty=Tensor[(16, 12, 10), float32] */;
    %1247 = floor_divide(%1240, %1241) /* ty=Tensor[(3, 40), float32] */;
    %1248 = less(%1244, %1245) /* ty=Tensor[(3, 40), bool] */;
    (%1246, %1247, %1248)
  };
  %1249() /* ty=(Tensor[(16, 12, 10), float32], Tensor[(3, 40), float32], Tensor[(3, 40), bool]) */
}

def @func_3267() -> (Tensor[(16, 12, 10), float32], Tensor[(16, 12, 10), float64]) {
  %1250 = @func_1364() /* ty=(Tensor[(16, 12, 10), float32],) */;
  %1251 = @func_1614() /* ty=(Tensor[(16, 12, 10), float64],) */;
  %1252 = %1250.0;
  %1253 = %1251.0;
  (%1252, %1253)
}

def @func_671(%var_651: int64, %var_652: Tensor[(15, 8, 3), int64], %var_663: Tensor[(9), float64], %var_665: Tensor[(840), int16]) -> (Tensor[(15, 8, 3), bool], Tensor[(7, 15, 8), int16], Tensor[(9), float64], Tensor[(120), int16], Tensor[(840), int16]) {
  %1254 = cast(%var_651, dtype="bool") /* ty=bool */;
  %1255 = cast(%var_652, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %1256 = cast(%var_663, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1257 = cast(meta[relay.Constant][77] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %1258 = cast(%var_665, dtype="int16") /* ty=Tensor[(840), int16] */;
  %1259 = reshape(%1256, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1260 = reshape(%1257, newshape=[120]) /* ty=Tensor[(120), int16] */;
  %1261 = reshape(%1258, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %1262 = @func_353(%1259, %1260, %1261) /* ty=(Tensor[(3, 1, 3), float64], Tensor[(3, 12, 3), uint64], Tensor[(7, 15, 8), int16], Tensor[(120), int16], Tensor[(840), int16]) */;
  %1263 = equal(%1254, %1255) /* ty=Tensor[(15, 8, 3), bool] */;
  %1264 = %1262.2;
  (%1263, %1264, %var_663, meta[relay.Constant][77] /* ty=Tensor[(120), int16] */, %var_665)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen505/build/output.py:3780: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen505/build/output.py", line 3785, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(220) tvmgen_default_fused_right_shift_kernel0(ushort* __restrict__ T_right_shift, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[((((int)threadIdx.x) / 10))] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_9127(%var_9115: Tensor[(11, 11, 2), float64], %var_9116: Tensor[(11, 11, 2), float64]) -> (Tensor[(11, 11, 2), float64],) {
  %0 = cast(%var_9116, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
  %1 = shape_of(%var_9115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_9115, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = divide(%2, %3) /* ty=Tensor[(11, 11, 2), float64] */;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
  %6 = asinh(%5) /* ty=Tensor[(11, 11, 2), float64] */;
  (%6,)
}

def @func_9834() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %7 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %8 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %9 = %7.0;
  (%8, %9)
}

def @func_3958() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %10 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %11 = @func_3779() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %12 = %10.0;
  %13 = %11.0;
  (%12, %13)
}

def @func_9776() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %14 = @func_8604() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %15 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
  %16 = %14.0;
  (%15, %16)
}

def @func_7783(%var_7759: Tensor[(96, 1), int32]) -> (Tensor[(12, 12, 13), float64], Tensor[(2, 4, 12), int32], Tensor[(96, 1), int32], Tensor[(1, 16, 14), float64]) {
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %18 = cast(%var_7759, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
  %19 = cast(%var_7759, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
  %20 = reshape(%18, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %21 = reshape(%19, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %22 = @func_1938(%20, %21) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %23 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %24 = acosh(%17) /* ty=Tensor[(12, 12, 13), float64] */;
  %25 = %22.0;
  %26 = %23.0;
  (%24, %25, %var_7759, %26)
}

def @func_9625() -> (Tensor[(1, 16, 14), float64],) {
  %27 = @func_8723() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %28 = %27.1;
  (%28,)
}

def @func_6259(%var_6254: Tensor[(45, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) {
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %31 = reshape(%29, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %32 = reshape(%30, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %33 = @func_3012(%31, %32) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %34 = cast(%var_6254, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %36 = reshape(%34, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %37 = reshape(%35, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
  %38 = @func_2527(%36, %37) /* ty=(Tensor[(6, 14, 15), bool],) */;
  %39 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
  %40 = %33.0;
  %41 = %38.0;
  (%39, %40, meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, meta[relay.Constant][2] /* ty=Tensor[(720), float64] */, %41, %var_6254, meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */)
}

def @func_9356() -> Tensor[(1, 16, 14), float64] {
  %42 = @func_6148() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %42.0
}

def @func_9759() -> Tensor[(1, 16, 14), float64] {
  @func_5258() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_6864() -> Tensor[(1, 16, 14), float64] {
  %43 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %43.1
}

def @func_8558(%var_8521: Tensor[(1260), float64], %var_8533: Tensor[(2688), float64], %var_8543: Tensor[(90), float64], %var_8552: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 14), float32], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), int8], Tensor[(168), float32], Tensor[(90), float64], Tensor[(9, 16, 14), float32], Tensor[(16), float64]) {
  %44 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %47 = cast(%var_8521, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %48 = reshape(%45, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
  %49 = reshape(%46, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %50 = reshape(%47, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %51 = @func_6948(%48, %49, %50) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
  %52 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %53 = cast(%var_8533, dtype="int8") /* ty=Tensor[(2688), int8] */;
  %54 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2688), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(2688), float64] */, dtype="int8") /* ty=Tensor[(2688), int8] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?), int8] */;
  %57 = cast(%var_8543, dtype="float64") /* ty=Tensor[(90), float64] */;
  %58 = reshape(%57, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %59 = @func_6259(%58) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) */;
  %60 = cast(%var_8552, dtype="float64") /* ty=Tensor[(16), float64] */;
  %61 = reshape(%60, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %62 = @func_6481(%61) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) */;
  %63 = %51.5;
  %64 = %52.0;
  %65 = bitwise_or(%55, %56) /* ty=Tensor[(2688), int8] */;
  %66 = %59.2;
  %67 = %62.2;
  (%44, %63, %var_8521, %64, %65, %66, %var_8543, %67, %var_8552)
}

def @func_4899() -> Tensor[(1, 16, 14), float64] {
  %68 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %68.0
}

def @func_5998(%var_5996: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) {
  %69 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %71 = cast(%var_5996, dtype="float64") /* ty=Tensor[(720), float64] */;
  %72 = reshape(%70, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %73 = reshape(%71, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %74 = @func_2954(%72, %73) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %75 = %69.0;
  %76 = @func_4916() /* ty=Tensor[(1, 16, 14), float64] */;
  %77 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %78 = %74.0;
  (%75, %76, %77, %78, meta[relay.Constant][5] /* ty=Tensor[(1260), float64] */, %var_5996)
}

def @func_10169() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %79 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
  %80 = @func_7021() /* ty=Tensor[(1, 16, 14), float64] */;
  %81 = %79.0;
  (%80, %81)
}

def @main(%var_10314: Tensor[(11, 1, 4), float64]) -> Tensor[(11, ?, 4), float32] {
  %82 = cast(%var_10314, dtype="float64") /* ty=Tensor[(11, 1, 4), float64] */;
  %83 = erf(%82) /* ty=Tensor[(11, 1, 4), float64] */;
  %84 = cast(%var_10314, dtype="float32") /* ty=Tensor[(11, 1, 4), float32] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="float32") /* ty=Tensor[(11, 1, 4), float32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%86, %87) /* ty=Tensor[(11, ?, 4), float32] */
}

def @func_2801() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %88 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %89 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %90 = reshape(%89, newshape=[]) /* ty=int64 */;
  %91 = @func_100(%90) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(1, 15, 12), float32] */;
  %94 = cast(3 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %95 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %96 = %95.0;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %98 = acosh(%97) /* ty=Tensor[(1, 16, 14), float32] */;
  %99 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %100 = %99.0;
  %101 = cast(%100, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %102 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%98, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %105 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %106 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %107 = %88.0;
  %108 = floor_mod(%93, %94) /* ty=Tensor[(1, 15, 12), float32] */;
  %109 = less(%103, %104) /* ty=Tensor[(?, 16, 14), bool] */;
  %110 = %105.1;
  %111 = %106.0;
  (%107, %108, %109, %110, %111)
}

def @func_7661() -> (Tensor[(1, 16, 14), float64],) {
  %112 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  (%112,)
}

def @func_886(%var_881: Tensor[(1, 2, 7), float32]) -> Tensor[(1, 2, 7), float32] {
  %113 = cast(%var_881, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  tan(%113) /* ty=Tensor[(1, 2, 7), float32] */
}

def @func_2159(%var_2065: Tensor[(1, 1, 16), float64], %var_2066: Tensor[(7, 4, 16), float64], %var_2080: Tensor[(96), int32]) -> (Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) {
  %114 = cast(%var_2080, dtype="int32") /* ty=Tensor[(96), int32] */;
  %115 = cast(%var_2080, dtype="int32") /* ty=Tensor[(96), int32] */;
  %116 = reshape(%114, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %117 = reshape(%115, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %118 = @func_1938(%116, %117) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %120 = reshape(%119, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %121 = cast(%var_2065, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %122 = cast(%var_2066, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  %123 = divide(%121, %122) /* ty=Tensor[(7, 4, 16), float64] */;
  %124 = cast(%var_2065, dtype="float32") /* ty=Tensor[(1, 1, 16), float32] */;
  %125 = cast(%123, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %126 = mod(%124, %125) /* ty=Tensor[(7, 4, 16), float32] */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 4, 16), float32] */, dtype="int32") /* ty=Tensor[(7, 4, 16), int32] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="int32") /* ty=Tensor[(7, 4, 16), int32] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %131 = %118.0;
  %132 = @func_153(%120) /* ty=Tensor[(9, 8, 10), float64] */;
  %133 = logical_xor(%129, %130) /* ty=Tensor[(7, 4, 16), int32] */;
  (%131, %var_2080, %132, meta[relay.Constant][6] /* ty=Tensor[(720), float64] */, %133)
}

def @func_6326(%var_6294: Tensor[(2, 15, 4), uint64], %var_6295: Tensor[(2, 15, 4), uint64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 15, 4), float64]) {
  %134 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %135 = cast(%var_6295, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
  %136 = shape_of(%var_6294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_6294, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = less(%137, %138) /* ty=Tensor[(2, 15, 4), bool] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
  %141 = shape_of(%var_6295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_6295, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %144 = floor_mod(%142, %143) /* ty=Tensor[(2, 15, 4), float32] */;
  %145 = cast(%139, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %149 = %134.0;
  %150 = floor_divide(%147, %148) /* ty=Tensor[(2, 15, 4), float64] */;
  (%149, %150)
}

def @func_5571(%var_5537: Tensor[(16, 10, 16), float32]) -> (Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %152 = shape_of(%var_5537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_5537, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %155 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %156 = floor_mod(%153, %154) /* ty=Tensor[(16, 10, 16), float32] */;
  %157 = %155.0;
  %158 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
  (%156, %157, %158)
}

def @func_8107() -> (Tensor[(1, 16, 14), float64],) {
  %159 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %160 = %159.1;
  (%160,)
}

def @func_7638() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %161 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
  %162 = @func_6148() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %163 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
  %164 = %161.3;
  %165 = %162.0;
  (%163, %164, %165)
}

def @func_3012(%var_2994: Tensor[(2, 6, 14), float32], %var_3002: Tensor[(720), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) {
  %166 = cast(%var_2994, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %167 = cast(%var_3002, dtype="float64") /* ty=Tensor[(720), float64] */;
  %168 = reshape(%167, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %169 = @func_1108(%168) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
  %170 = cosh(%166) /* ty=Tensor[(2, 6, 14), float32] */;
  %171 = %169.2;
  (%170, %171, %var_3002)
}

def @func_5402() -> (Tensor[(1, 16, 14), float64],) {
  %172 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %173 = %172.1;
  (%173,)
}

def @func_7841(%var_7816: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), float64]) {
  %174 = cast(%var_7816, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %175 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(14, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 16, 5), float64] */, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = cast(%var_7816, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %179 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %180 = @func_7093() /* ty=(Tensor[(?, 16, 14), float64],) */;
  %181 = greater_equal(%176, %177) /* ty=Tensor[(14, 16, 5), bool] */;
  %182 = log(%178) /* ty=Tensor[(14, 16, 5), float64] */;
  %183 = %179.0;
  %184 = %180.0;
  (%181, %182, %183, %184)
}

def @func_6889() -> Tensor[(9, 16, 14), int8] {
  %185 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %185.0
}

def @func_5638() -> (Tensor[(1, 16, 14), float64],) {
  %186 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
  (%186,)
}

def @func_3927(%var_3914: Tensor[(630, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) {
  %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %190 = reshape(%187, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %191 = reshape(%188, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %192 = reshape(%189, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
  %193 = @func_3508(%190, %191, %192) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) */;
  %194 = cast(meta[relay.Constant][13] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %195 = reshape(%194, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %196 = @func_386(%195) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %197 = cast(meta[relay.Constant][11] /* ty=Tensor[(630, 2), float64] */, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
  %198 = cast(%var_3914, dtype="uint32") /* ty=Tensor[(630, 2), uint32] */;
  %199 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(630, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(630, 2), float64] */, dtype="uint32") /* ty=Tensor[(630, 2), uint32] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %202 = @func_3779() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %203 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  %204 = %193.3;
  %205 = %196.0;
  %206 = @func_3284() /* ty=Tensor[(1, 16, 14), float64] */;
  %207 = tan(%197) /* ty=Tensor[(630, 2), float32] */;
  %208 = maximum(%200, %201) /* ty=Tensor[(630, 2), uint32] */;
  %209 = %202.0;
  (%203, %204, meta[relay.Constant][10] /* ty=Tensor[(90), float64] */, meta[relay.Constant][12] /* ty=Tensor[(14), float32] */, %205, meta[relay.Constant][13] /* ty=Tensor[(300), bool] */, %206, %207, %208, %209)
}

def @func_8695() -> Tensor[(1, 16, 14), float64] {
  @func_3284() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_6148() -> (Tensor[(1, 16, 14), float64],) {
  %210 = @func_4974() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %211 = %210.0;
  (%211,)
}

def @func_5115() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %212 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %213 = %212.0;
  %214 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  (%213, %214)
}

def @func_3203() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %215 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %216 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %217 = %215.0;
  (%216, %217)
}

def @func_7360() -> (Tensor[(?, 16, 14), float64],) {
  %218 = @func_7093() /* ty=(Tensor[(?, 16, 14), float64],) */;
  %219 = %218.0;
  (%219,)
}

def @func_2635(%var_2597: Tensor[(14, 1), float32]) -> (Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) {
  %220 = cast(%var_2597, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %221 = reshape(%220, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %222 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %223 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %224 = reshape(%222, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %225 = reshape(%223, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %226 = @func_1938(%224, %225) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %227 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %230 = rsqrt(%229) /* ty=Tensor[(1, 16, 14), float32] */;
  %231 = cast(%228, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %235 = less_equal(%233, %234) /* ty=Tensor[(?, 16, 14), bool] */;
  %236 = cast(%235, dtype="float32") /* ty=Tensor[(?, 16, 14), float32] */;
  %237 = cast(%230, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %238 = log10(%237) /* ty=Tensor[(1, 16, 14), float64] */;
  %239 = cast(%235, dtype="int16") /* ty=Tensor[(?, 16, 14), int16] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %243 = @func_886(%221) /* ty=Tensor[(1, 2, 7), float32] */;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %245 = reshape(%244, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %246 = %226.0;
  %247 = asinh(%236) /* ty=Tensor[(?, 16, 14), float32] */;
  %248 = minimum(%241, %242) /* ty=Tensor[(?, 16, 14), int16] */;
  %249 = @func_886(%245) /* ty=Tensor[(1, 2, 7), float32] */;
  (%243, %var_2597, %246, meta[relay.Constant][14] /* ty=Tensor[(96), int32] */, %247, %248, %249)
}

def @func_10194() -> Tensor[(1, 16, 14), float64] {
  %250 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %250.0
}

def @func_9071() -> (Tensor[(1, 16, 14), float64],) {
  %251 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_4103(%var_4097: Tensor[(90), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(630, 2), float64]) {
  %253 = @func_3233() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %254 = cast(%var_4097, dtype="float64") /* ty=Tensor[(90), float64] */;
  %255 = cast(meta[relay.Constant][15] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
  %256 = reshape(%254, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %257 = reshape(%255, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
  %258 = @func_2527(%256, %257) /* ty=(Tensor[(6, 14, 15), bool],) */;
  %259 = %253.1;
  %260 = %258.0;
  (%259, %260, %var_4097, meta[relay.Constant][15] /* ty=Tensor[(630, 2), float64] */)
}

def @func_4529() -> (Tensor[(9, 16, 14), int8],) {
  %261 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %262 = cast(%261, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
  %263 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 16, 14), float64] */, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
  %264 = minimum(%262, %263) /* ty=Tensor[(9, 16, 14), int8] */;
  (%264,)
}

def @func_5477(%var_5470: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], int64) {
  %265 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %266 = cast(%var_5470, dtype="int64") /* ty=int64 */;
  %267 = reshape(%266, newshape=[]) /* ty=int64 */;
  %268 = @func_5149(%267) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) */;
  %269 = %265.1;
  %270 = %268.0;
  (%269, %270, %var_5470)
}

def @func_8723() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %271 = @func_6037() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %272 = @func_4916() /* ty=Tensor[(1, 16, 14), float64] */;
  %273 = %271.0;
  (%272, %273)
}

def @func_6606(%var_6588: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(1260), float64], Tensor[(720), float64]) {
  %274 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %275 = %274.0;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %277 = cast(meta[relay.Constant][17] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %278 = cast(%var_6588, dtype="float64") /* ty=Tensor[(720), float64] */;
  %279 = reshape(%277, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %280 = reshape(%278, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %281 = @func_2954(%279, %280) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %282 = acos(%276) /* ty=Tensor[(1, 16, 14), float32] */;
  %283 = %281.6;
  (%282, %283, meta[relay.Constant][17] /* ty=Tensor[(1260), float64] */, %var_6588)
}

def @func_10270() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %284 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %285 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %286 = %284.0;
  %287 = %285.0;
  (%286, %287)
}

def @func_7093() -> (Tensor[(?, 16, 14), float64],) {
  %288 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %289 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %291 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%288, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %294 = divide(%292, %293) /* ty=Tensor[(?, 16, 14), float64] */;
  (%294,)
}

def @func_4750(%var_4748: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(5, 6), uint32], Tensor[(360), uint32], int64) {
  %295 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %296 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 6), uint32] */, dtype="uint32") /* ty=Tensor[(5, 6), uint32] */;
  %297 = cast(meta[relay.Constant][19] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %298 = cast(%var_4748, dtype="int64") /* ty=int64 */;
  %299 = reshape(%296, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), uint32] */;
  %300 = reshape(%297, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), uint32] */;
  %301 = reshape(%298, newshape=[]) /* ty=int64 */;
  %302 = @func_3388(%299, %300, %301) /* ty=(Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) */;
  %303 = %295.1;
  %304 = %302.2;
  (%303, %304, meta[relay.Constant][18] /* ty=Tensor[(5, 6), uint32] */, meta[relay.Constant][19] /* ty=Tensor[(360), uint32] */, %var_4748)
}

def @func_9240() -> (Tensor[(1, 16, 14), float64],) {
  %305 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %306 = %305.1;
  (%306,)
}

def @func_5258() -> Tensor[(1, 16, 14), float64] {
  %307 = @func_3233() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %307.1
}

def @func_3727(%var_3637: Tensor[(720), float64]) -> (Tensor[(?, 16, 14), uint16], Tensor[(3, 420), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float64]) {
  %308 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %309 = %308.2;
  %310 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  %311 = cast(%310, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %312 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%309, dtype="uint16") /* ty=Tensor[(?, 16, 14), uint16] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %315 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %316 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %317 = reshape(%316, newshape=[]) /* ty=int64 */;
  %318 = @func_100(%317) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %319 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 420), float64] */, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %320 = cast(%var_3637, dtype="float64") /* ty=Tensor[(720), float64] */;
  %321 = reshape(%319, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %322 = reshape(%320, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %323 = @func_2954(%321, %322) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %324 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 420), float64] */, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %325 = cast(%var_3637, dtype="float64") /* ty=Tensor[(720), float64] */;
  %326 = reshape(%324, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %327 = reshape(%325, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %328 = @func_2954(%326, %327) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %331 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %332 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %333 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %334 = reshape(%333, newshape=[]) /* ty=int64 */;
  %335 = @func_100(%334) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %336 = %335.0;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(1, 15, 12), float64] */;
  %338 = multiply(%313, %314) /* ty=Tensor[(?, 16, 14), uint16] */;
  %339 = %315.0;
  %340 = %318.0;
  %341 = %323.7;
  %342 = log(%330) /* ty=Tensor[(1, 16, 14), float64] */;
  %343 = %331.1;
  %344 = %332.0;
  %345 = sqrt(%337) /* ty=Tensor[(1, 15, 12), float64] */;
  (%338, meta[relay.Constant][20] /* ty=Tensor[(3, 420), float64] */, %var_3637, %339, %340, -8 /* ty=int64 */, %341, %342, %343, %344, %345)
}

def @func_1108(%var_1079: Tensor[(720), float64]) -> (Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) {
  %346 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 1, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 1, 16), uint64] */;
  %347 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 8, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 8, 16), uint64] */;
  %348 = cast(%var_1079, dtype="float64") /* ty=Tensor[(720), float64] */;
  %349 = reshape(%348, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %350 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 1, 16), uint64] */, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
  %351 = cos(%350) /* ty=Tensor[(16, 1, 16), float64] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(16, 1, 16), float32] */;
  %353 = right_shift(%346, %347) /* ty=Tensor[(16, 8, 16), uint64] */;
  %354 = @func_153(%349) /* ty=Tensor[(9, 8, 10), float64] */;
  %355 = asin(%352) /* ty=Tensor[(16, 1, 16), float32] */;
  (%353, %354, %var_1079, %355)
}

def @func_7489(%var_7477: Tensor[(2, 16, 14), float64], %var_7487: Tensor[(1260), float64]) -> (Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) {
  %356 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="uint32") /* ty=Tensor[(1, 16, 14), uint32] */;
  %359 = cast(%var_7477, dtype="uint32") /* ty=Tensor[(2, 16, 14), uint32] */;
  %360 = cast(%357, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %361 = cast(meta[relay.Constant][23] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %362 = cast(%var_7487, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %363 = reshape(%360, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
  %364 = reshape(%361, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %365 = reshape(%362, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %366 = @func_6948(%363, %364, %365) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
  %367 = subtract(%358, %359) /* ty=Tensor[(2, 16, 14), uint32] */;
  %368 = %366.0;
  (%367, %368, meta[relay.Constant][23] /* ty=Tensor[(2688), float64] */, %var_7487)
}

def @func_4346() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %369 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %370 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %371 = %369.0;
  %372 = %370.0;
  (%371, %372)
}

def @func_9528() -> (Tensor[(1, 16, 14), float64], int64, Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %373 = cast(meta[relay.Constant][24] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %374 = reshape(%373, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %375 = @func_9007(%374) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) */;
  %376 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %377 = @func_8702() /* ty=Tensor[(1, 16, 14), float64] */;
  %378 = %375.2;
  %379 = @func_6864() /* ty=Tensor[(1, 16, 14), float64] */;
  %380 = %376.1;
  (%377, %378, meta[relay.Constant][24] /* ty=Tensor[(1260), float64] */, %379, %380)
}

def @func_8380() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %381 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %382 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %383 = %381.0;
  %384 = %382.0;
  (%383, %384)
}

def @func_3779() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %385 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %386 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %387 = %385.1;
  %388 = %386.0;
  (%387, %388)
}

def @func_2527(%var_2515: Tensor[(6, 1, 15), float64], %var_2516: Tensor[(6, 14, 15), float64]) -> (Tensor[(6, 14, 15), bool],) {
  %389 = cast(%var_2515, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %390 = cast(%var_2516, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
  %391 = less(%389, %390) /* ty=Tensor[(6, 14, 15), bool] */;
  (%391,)
}

def @func_4974() -> (Tensor[(1, 16, 14), float64],) {
  %392 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %393 = %392.0;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %395 = sqrt(%394) /* ty=Tensor[(1, 16, 14), float64] */;
  (%395,)
}

def @func_4916() -> Tensor[(1, 16, 14), float64] {
  @func_3102() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2413() -> Tensor[(1, 16, 14), float64] {
  %396 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %396.0
}

def @func_4432(%var_4370: float32, %var_4371: Tensor[(14, 7, 4), float32]) -> (Tensor[(14, 7, 4), bool], Tensor[(1, 16, 14), float64], Tensor[(720), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(14, 7, 4), float64], Tensor[(14, 7, 4), int64]) {
  %397 = cast(%var_4370, dtype="bool") /* ty=bool */;
  %398 = cast(%var_4371, dtype="bool") /* ty=Tensor[(14, 7, 4), bool] */;
  %399 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %400 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %401 = reshape(%400, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %402 = @func_1108(%401) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
  %403 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %404 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %405 = cast(%var_4370, dtype="float64") /* ty=float64 */;
  %406 = cast(%var_4371, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
  %407 = cast(%var_4371, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
  %408 = tan(%407) /* ty=Tensor[(14, 7, 4), float32] */;
  %409 = cast(%408, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
  %410 = erf(%409) /* ty=Tensor[(14, 7, 4), float32] */;
  %411 = cast(%408, dtype="int64") /* ty=Tensor[(14, 7, 4), int64] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="int64") /* ty=Tensor[(14, 7, 4), int64] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %415 = not_equal(%397, %398) /* ty=Tensor[(14, 7, 4), bool] */;
  %416 = %399.1;
  %417 = %402.2;
  %418 = %403.0;
  %419 = %404.0;
  %420 = floor_mod(%405, %406) /* ty=Tensor[(14, 7, 4), float64] */;
  %421 = bitwise_xor(%413, %414) /* ty=Tensor[(14, 7, 4), int64] */;
  (%415, %416, %417, meta[relay.Constant][25] /* ty=Tensor[(720), float64] */, %418, %419, %420, %421)
}

def @func_8501(%var_8476: Tensor[(13, 9, 7), float32], %var_8484: Tensor[(3, 420), float64], %var_8485: Tensor[(60, 12), float64]) -> (Tensor[(13, 9, 7), float32], Tensor[(720), float64], Tensor[(3, 420), float64], Tensor[(60, 12), float64], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64]) {
  %422 = cast(%var_8476, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %423 = cast(%var_8484, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %424 = cast(%var_8485, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %425 = reshape(%423, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %426 = reshape(%424, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %427 = @func_2954(%425, %426) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %428 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %429 = reshape(%428, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %430 = @func_386(%429) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %431 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %432 = erf(%422) /* ty=Tensor[(13, 9, 7), float32] */;
  %433 = %427.7;
  %434 = %430.0;
  %435 = %431.0;
  (%432, %433, %var_8484, %var_8485, %434, meta[relay.Constant][26] /* ty=Tensor[(300), bool] */, %435)
}

def @func_10115() -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), bool], Tensor[(42), float64], Tensor[(18, 70), float64], Tensor[(1, 16, 14), float32], Tensor[(1, 16, 14), float64]) {
  %436 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %437 = cast(meta[relay.Constant][27] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %438 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 70), float64] */, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %439 = reshape(%437, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float64] */;
  %440 = reshape(%438, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %441 = @func_8039(%439, %440) /* ty=(Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) */;
  %442 = @func_9240() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %443 = %442.0;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %445 = %441.4;
  %446 = cast(%445, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
  %447 = reshape(%446, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), int8] */;
  %448 = @func_6094(%447) /* ty=(Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) */;
  %449 = %436.0;
  %450 = cos(%444) /* ty=Tensor[(1, 16, 14), float32] */;
  %451 = %448.1;
  (%449, %445, meta[relay.Constant][27] /* ty=Tensor[(42), float64] */, meta[relay.Constant][28] /* ty=Tensor[(18, 70), float64] */, %450, %451)
}

def @func_3996() -> Tensor[(?, 16, 14), int16] {
  %452 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  %453 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 16, 14), float64] */, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%452, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%455, %456) /* ty=Tensor[(?, 16, 14), int16] */
}

def @func_4133() -> (Tensor[(1, 16, 14), float64],) {
  %457 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  (%457,)
}

def @func_9059() -> Tensor[(1, 16, 14), float64] {
  @func_8690() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9607(%var_9591: Tensor[(2560), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  %458 = cast(%var_9591, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %459 = reshape(%458, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float32] */;
  %460 = @func_5571(%459) /* ty=(Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %461 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %462 = @func_9059() /* ty=Tensor[(1, 16, 14), float64] */;
  %463 = %460.2;
  (%461, %462, %463, %var_9591)
}

def @func_100(%var_89: int64) -> (Tensor[(1, 15, 12), int64],) {
  %464 = cast(%var_89, dtype="int64") /* ty=int64 */;
  %465 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 15, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 15, 12), int64] */;
  %466 = bitwise_or(%464, %465) /* ty=Tensor[(1, 15, 12), int64] */;
  (%466,)
}

def @func_5079(%var_5064: Tensor[(96), float64], %var_5066: Tensor[(14), float32]) -> (Tensor[(9, 16, 14), int8], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(1, 16, 14), float64]) {
  %467 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %468 = cast(%var_5064, dtype="float64") /* ty=Tensor[(96), float64] */;
  %469 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %470 = cast(%var_5066, dtype="float32") /* ty=Tensor[(14), float32] */;
  %471 = reshape(%468, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
  %472 = reshape(%469, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
  %473 = reshape(%470, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
  %474 = @func_1904(%471, %472, %473) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
  %475 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %476 = %467.0;
  %477 = %474.5;
  %478 = %475.0;
  (%476, %477, %var_5064, meta[relay.Constant][31] /* ty=Tensor[(768), float64] */, %var_5066, %478)
}

def @func_6948(%var_6935: Tensor[(1, 16, 14), float64], %var_6941: Tensor[(2688), float64], %var_6942: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) {
  %479 = @func_4133() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %480 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %481 = cast(%var_6935, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %485 = cast(%var_6941, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %486 = cast(%var_6942, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %487 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %488 = cast(meta[relay.Constant][33] /* ty=Tensor[(2560), float32] */, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %489 = reshape(%485, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %490 = reshape(%486, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %491 = reshape(%487, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %492 = reshape(%488, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
  %493 = @func_5788(%489, %490, %491, %492) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */;
  %494 = %479.0;
  %495 = greater_equal(%483, %484) /* ty=Tensor[(?, 16, 14), bool] */;
  %496 = %493.5;
  (%494, %495, %496, %var_6941, %var_6942, meta[relay.Constant][32] /* ty=Tensor[(1, 14), float32] */, meta[relay.Constant][33] /* ty=Tensor[(2560), float32] */)
}

def @func_2974() -> Tensor[(1, 16, 14), float64] {
  %497 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %497.0
}

def @func_8690() -> Tensor[(1, 16, 14), float64] {
  %498 = @func_8604() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %498.0
}

def @func_5788(%var_5738: Tensor[(12, 16, 14), float64], %var_5746: Tensor[(1260), float64], %var_5747: Tensor[(14, 1), float32], %var_5785: Tensor[(2560), float32]) -> (Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  %499 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %502 = cast(%var_5738, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %503 = cast(meta[relay.Constant][34] /* ty=Tensor[(60, 10), uint16] */, dtype="uint16") /* ty=Tensor[(60, 10), uint16] */;
  %504 = cast(meta[relay.Constant][34] /* ty=Tensor[(60, 10), uint16] */, dtype="uint16") /* ty=Tensor[(60, 10), uint16] */;
  %505 = cast(%var_5746, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %506 = cast(%var_5747, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %507 = reshape(%503, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), uint16] */;
  %508 = reshape(%504, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), uint16] */;
  %509 = reshape(%505, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %510 = reshape(%506, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %511 = @func_4306(%507, %508, %509, %510) /* ty=(Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) */;
  %512 = cast(%var_5785, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %513 = reshape(%512, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float32] */;
  %514 = @func_5571(%513) /* ty=(Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %515 = less(%501, %502) /* ty=Tensor[(12, 16, 14), bool] */;
  %516 = %511.1;
  %517 = %514.2;
  (%515, %516, meta[relay.Constant][34] /* ty=Tensor[(60, 10), uint16] */, %var_5746, %var_5747, %517, %var_5785)
}

def @func_5213(%var_5203: Tensor[(96), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) {
  %518 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %519 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %520 = %519.0;
  %521 = cast(%518, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %522 = cast(%520, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %523 = cast(%var_5203, dtype="float64") /* ty=Tensor[(96), float64] */;
  %524 = cast(meta[relay.Constant][35] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %525 = cast(meta[relay.Constant][36] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %526 = reshape(%523, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
  %527 = reshape(%524, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
  %528 = reshape(%525, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
  %529 = @func_1904(%526, %527, %528) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
  %530 = cast(%518, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
  %531 = cast(%520, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
  %532 = greater_equal(%521, %522) /* ty=Tensor[(9, 16, 14), bool] */;
  %533 = %529.5;
  %534 = maximum(%530, %531) /* ty=Tensor[(9, 16, 14), int8] */;
  (%532, %533, %var_5203, meta[relay.Constant][35] /* ty=Tensor[(768), float64] */, meta[relay.Constant][36] /* ty=Tensor[(14), float32] */, %534)
}

def @func_4306(%var_4278: Tensor[(15, 10, 4), uint16], %var_4289: Tensor[(15, 10, 4), uint16], %var_4303: Tensor[(1260), float64], %var_4304: Tensor[(14), float32]) -> (Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) {
  %535 = cast(%var_4278, dtype="bool") /* ty=Tensor[(15, 10, 4), bool] */;
  %536 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="bool") /* ty=Tensor[(15, 10, 4), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %539 = cast(%var_4289, dtype="uint32") /* ty=Tensor[(15, 10, 4), uint32] */;
  %540 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="uint32") /* ty=Tensor[(15, 10, 4), uint32] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %543 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %544 = cast(%var_4303, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %545 = cast(%var_4304, dtype="float32") /* ty=Tensor[(14), float32] */;
  %546 = reshape(%543, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %547 = reshape(%544, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %548 = reshape(%545, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
  %549 = @func_3508(%546, %547, %548) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) */;
  %550 = not_equal(%537, %538) /* ty=Tensor[(15, 10, 4), bool] */;
  %551 = right_shift(%541, %542) /* ty=Tensor[(15, 10, 4), uint32] */;
  %552 = %549.5;
  (%550, %551, %552, meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, %var_4303, %var_4304)
}

def @func_6758() -> (Tensor[(1, 15, 12), int64], Tensor[(?, 16, 14), uint8]) {
  %553 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %554 = reshape(%553, newshape=[]) /* ty=int64 */;
  %555 = @func_5149(%554) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) */;
  %556 = @func_3996() /* ty=Tensor[(?, 16, 14), int16] */;
  %557 = cast(-5 /* ty=int64 */, dtype="uint8") /* ty=uint8 */;
  %558 = cast(%556, dtype="uint8") /* ty=Tensor[(?, 16, 14), uint8] */;
  %559 = %555.1;
  %560 = maximum(%557, %558) /* ty=Tensor[(?, 16, 14), uint8] */;
  (%559, %560)
}

def @func_3284() -> Tensor[(1, 16, 14), float64] {
  %561 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  atanh(%563) /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_8604() -> (Tensor[(1, 16, 14), float64],) {
  %564 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  (%564,)
}

def @func_4699(%var_4672: Tensor[(18, 70), float64], %var_4679: Tensor[(360), uint32]) -> (Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) {
  %565 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %567 = cast(%var_4672, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %568 = reshape(%567, newshape=[630, 2]) /* ty=Tensor[(630, 2), float64] */;
  %569 = @func_3927(%568) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) */;
  %570 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %571 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 30), uint32] */, dtype="uint32") /* ty=Tensor[(1, 30), uint32] */;
  %572 = cast(%var_4679, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %573 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %574 = reshape(%571, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), uint32] */;
  %575 = reshape(%572, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), uint32] */;
  %576 = reshape(%573, newshape=[]) /* ty=int64 */;
  %577 = @func_3388(%574, %575, %576) /* ty=(Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) */;
  %578 = cosh(%566) /* ty=Tensor[(1, 16, 14), float32] */;
  %579 = %569.7;
  %580 = %570.2;
  %581 = %577.2;
  (%578, %579, %var_4672, %580, %581, meta[relay.Constant][39] /* ty=Tensor[(1, 30), uint32] */, %var_4679, -10 /* ty=int64 */)
}

def @func_9438() -> (Tensor[(15, 16, 14), int8],) {
  %582 = @func_8380() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */;
  %583 = %582.1;
  %584 = cast(%583, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
  %585 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 16, 14), float64] */, dtype="int8") /* ty=Tensor[(15, 16, 14), int8] */;
  %586 = logical_xor(%584, %585) /* ty=Tensor[(15, 16, 14), int8] */;
  (%586,)
}

def @func_2273(%var_2268: Tensor[(8, 7, 9), float64]) -> (Tensor[(8, 7, 9), bool],) {
  %587 = cast(%var_2268, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %588 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = less(%589, %590) /* ty=Tensor[(8, 7, 9), bool] */;
  (%591,)
}

def @func_1938(%var_1926: Tensor[(2, 4, 12), int32], %var_1927: Tensor[(2, 4, 12), int32]) -> (Tensor[(2, 4, 12), int32],) {
  %592 = cast(%var_1927, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %593 = shape_of(%var_1926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%var_1926, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %596 = right_shift(%594, %595) /* ty=Tensor[(2, 4, 12), int32] */;
  (%596,)
}

def @func_5446(%var_5440: Tensor[(10, 15, 13), uint8]) -> Tensor[(10, 15, 13), uint8] {
  %597 = cast(%var_5440, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
  %598 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(10, 15, 13), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(meta[relay.Constant][42] /* ty=Tensor[(10, 15, 13), uint8] */, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%599, %600) /* ty=Tensor[(10, 15, 13), uint8] */
}

def @func_8857() -> Tensor[(1, 16, 14), float64] {
  %601 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %601.0
}

def @func_10217() -> Tensor[(1, 16, 14), float64] {
  %602 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %602.0
}

def @func_4468() -> (Tensor[(1, 16, 14), float64],) {
  %603 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %604 = %603.4;
  (%604,)
}

def @func_4561(%var_4550: Tensor[(7, 2), float32]) -> (Tensor[(1, 15, 12), float32], Tensor[(1, 16, 14), float64], Tensor[(96), int32], Tensor[(7, 2), float32]) {
  %605 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %606 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %607 = cast(%var_4550, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %608 = reshape(%607, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %609 = @func_2635(%608) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) */;
  %610 = %605.1;
  %611 = %606.1;
  %612 = %609.3;
  (%610, %611, %612, %var_4550)
}

def @func_9007(%var_8974: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) {
  %613 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %614 = reshape(%613, newshape=[]) /* ty=int64 */;
  %615 = @func_100(%614) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %616 = cast(%var_8974, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %617 = reshape(%616, newshape=[630, 2]) /* ty=Tensor[(630, 2), float64] */;
  %618 = @func_3927(%617) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) */;
  %619 = %618.7;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
  %621 = sinh(%620) /* ty=Tensor[(630, 2), float32] */;
  %622 = cast(%619, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
  %623 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %624 = reshape(%622, newshape=[18, 70]) /* ty=Tensor[(18, 70), float64] */;
  %625 = reshape(%623, newshape=[360]) /* ty=Tensor[(360), uint32] */;
  %626 = @func_4699(%624, %625) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) */;
  %627 = %626.1;
  %628 = cast(%627, dtype="bool") /* ty=Tensor[(630, 2), bool] */;
  %629 = shape_of(%621, dtype="int32") /* ty=Tensor[(2), int32] */;
  %630 = cast(%621, dtype="bool") /* ty=Tensor[(630, 2), bool] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %632 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %633 = %615.0;
  %634 = not_equal(%630, %631) /* ty=Tensor[(630, 2), bool] */;
  (%632, %633, 6 /* ty=int64 */, %var_8974, meta[relay.Constant][43] /* ty=Tensor[(360), uint32] */, %634)
}

def @func_8702() -> Tensor[(1, 16, 14), float64] {
  %635 = @func_4133() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %635.0
}

def @func_6689(%var_6669: Tensor[(14, 12, 7), uint16], %var_6670: Tensor[(14, 12, 7), uint16]) -> Tensor[(14, 12, 7), int16] {
  %636 = cast(%var_6670, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %637 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%var_6669, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = not_equal(%638, %639) /* ty=Tensor[(14, 12, 7), bool] */;
  %641 = cast(%640, dtype="int16") /* ty=Tensor[(14, 12, 7), int16] */;
  %642 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_6669, dtype="int16") /* ty=Tensor[(14, 12, 7), int16] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%643, %644) /* ty=Tensor[(14, 12, 7), int16] */
}

def @func_8915() -> (Tensor[(9, 16, 14), int8], Tensor[(720), float64], Tensor[(168), float32], Tensor[(720), float64], Tensor[(1, 16, 14), float64]) {
  %645 = @func_8380() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */;
  %646 = cast(meta[relay.Constant][44] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %647 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %648 = reshape(%646, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %649 = reshape(%647, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %650 = @func_3012(%648, %649) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %651 = %650.2;
  %652 = cast(%651, dtype="float64") /* ty=Tensor[(720), float64] */;
  %653 = reshape(%652, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %654 = @func_5998(%653) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) */;
  %655 = %645.0;
  %656 = %654.3;
  (%655, %651, meta[relay.Constant][44] /* ty=Tensor[(168), float32] */, meta[relay.Constant][45] /* ty=Tensor[(720), float64] */, %656)
}

def @func_8807(%var_8799: Tensor[(6, 16, 14), float64]) -> (Tensor[(6, 16, 14), int16],) {
  %657 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
  %658 = cast(%657, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
  %659 = cast(%var_8799, dtype="int16") /* ty=Tensor[(6, 16, 14), int16] */;
  %660 = bitwise_and(%658, %659) /* ty=Tensor[(6, 16, 14), int16] */;
  (%660,)
}

def @func_4200() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) {
  %661 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %662 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %663 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %664 = %663.0;
  %665 = cast(%664, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %666 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%662, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %669 = %661.4;
  %670 = bitwise_or(%667, %668) /* ty=Tensor[(?, 16, 14), uint16] */;
  (%669, %670)
}

def @func_9873() -> Tensor[(1, 16, 14), float64] {
  %671 = @func_7638() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %671.1
}

def @func_6094(%var_6061: Tensor[(9, 16, 14), int8]) -> (Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) {
  %672 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %673 = %672.0;
  %674 = cast(%var_6061, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = equal(%676, %677) /* ty=Tensor[(9, 16, 14), bool] */;
  %679 = cast(%678, dtype="int64") /* ty=Tensor[(9, 16, 14), int64] */;
  %680 = shape_of(%var_6061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_6061, dtype="int64") /* ty=Tensor[(9, 16, 14), int64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %683 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %684 = logical_xor(%681, %682) /* ty=Tensor[(9, 16, 14), int64] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_7699() -> (Tensor[(1, 16, 14), float64],) {
  %686 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %687 = %686.0;
  (%687,)
}

def @func_3233() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %688 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %689 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %690 = %688.1;
  %691 = %689.0;
  (%690, %691)
}

def @func_3109() -> (Tensor[(1, 16, 14), float64],) {
  %692 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  (%692,)
}

def @func_8039(%var_8013: Tensor[(1, 7, 6), float64], %var_8025: Tensor[(1260), float64]) -> (Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) {
  %693 = cast(%var_8013, dtype="float64") /* ty=Tensor[(1, 7, 6), float64] */;
  %694 = log10(%693) /* ty=Tensor[(1, 7, 6), float64] */;
  %695 = cast(%694, dtype="uint64") /* ty=Tensor[(1, 7, 6), uint64] */;
  %696 = shape_of(%var_8013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%var_8013, dtype="uint64") /* ty=Tensor[(1, 7, 6), uint64] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %699 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %700 = cast(%var_8025, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %701 = reshape(%699, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %702 = reshape(%700, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %703 = @func_7489(%701, %702) /* ty=(Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) */;
  %704 = cast(meta[relay.Constant][47] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %705 = reshape(%704, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %706 = @func_6380(%705) /* ty=(Tensor[(96), float64], Tensor[(9, 16, 14), bool]) */;
  %707 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
  %708 = subtract(%697, %698) /* ty=Tensor[(?, 7, 6), uint64] */;
  %709 = %703.1;
  %710 = %706.1;
  %711 = %707.0;
  (%708, %709, meta[relay.Constant][46] /* ty=Tensor[(2, 224), float64] */, %var_8025, %710, meta[relay.Constant][47] /* ty=Tensor[(96), float64] */, %711)
}

def @func_9407() -> (Tensor[(6, 14, 3), uint8],) {
  %712 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %713 = sinh(%712) /* ty=Tensor[(6, 14, 3), float32] */;
  %714 = cast(%713, dtype="uint8") /* ty=Tensor[(6, 14, 3), uint8] */;
  %715 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(6, 14, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 14, 3), float32] */, dtype="uint8") /* ty=Tensor[(6, 14, 3), uint8] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %718 = right_shift(%716, %717) /* ty=Tensor[(6, 14, 3), uint8] */;
  (%718,)
}

def @func_3508(%var_3474: Tensor[(90), float64], %var_3475: Tensor[(1260), float64], %var_3486: Tensor[(7, 2), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) {
  %719 = cast(%var_3474, dtype="float64") /* ty=Tensor[(90), float64] */;
  %720 = cast(%var_3475, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %721 = reshape(%719, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %722 = reshape(%720, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
  %723 = @func_2527(%721, %722) /* ty=(Tensor[(6, 14, 15), bool],) */;
  %724 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %725 = cast(%var_3486, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %726 = reshape(%725, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %727 = @func_3133(%726) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) */;
  %728 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
  %729 = %723.0;
  %730 = %724.1;
  %731 = %727.3;
  (%728, %729, %var_3474, %var_3475, %730, %731, %var_3486)
}

def @func_6568() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
  %732 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %733 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %734 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %735 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %736 = reshape(%735, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %737 = @func_1108(%736) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
  %738 = %732.0;
  %739 = %733.0;
  %740 = %734.1;
  %741 = %737.3;
  (%738, %739, %740, %741, meta[relay.Constant][49] /* ty=Tensor[(720), float64] */)
}

def @func_7892() -> (Tensor[(15, 9, 2), float32],) {
  %742 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
  %743 = atan(%742) /* ty=Tensor[(15, 9, 2), float32] */;
  (%743,)
}

def @func_6037() -> (Tensor[(1, 16, 14), float64],) {
  %744 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %745 = %744.0;
  (%745,)
}

def @func_9150() -> Tensor[(1, 16, 14), float64] {
  %746 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %746.1
}

def @func_6481(%var_6471: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) {
  %747 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %748 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %749 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %752 = sinh(%751) /* ty=Tensor[(9, 16, 14), float32] */;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %754 = cast(meta[relay.Constant][51] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %755 = cast(meta[relay.Constant][51] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %756 = cast(%var_6471, dtype="float64") /* ty=Tensor[(16), float64] */;
  %757 = cast(meta[relay.Constant][52] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %758 = cast(meta[relay.Constant][51] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %759 = reshape(%754, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %760 = reshape(%755, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %761 = reshape(%756, newshape=[2, 8]) /* ty=Tensor[(2, 8), float64] */;
  %762 = reshape(%757, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %763 = reshape(%758, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %764 = @func_2708(%759, %760, %761, %762, %763) /* ty=(Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) */;
  %765 = %747.0;
  %766 = %748.0;
  %767 = asinh(%753) /* ty=Tensor[(9, 16, 14), float32] */;
  %768 = %764.1;
  (%765, %766, %767, %768, meta[relay.Constant][51] /* ty=Tensor[(147), uint32] */, %var_6471, meta[relay.Constant][52] /* ty=Tensor[(448), float64] */)
}

def @func_10075() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16], Tensor[(1, 16, 14), float64]) {
  %769 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %770 = @func_4200() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) */;
  %771 = %769.0;
  %772 = %770.1;
  %773 = @func_8690() /* ty=Tensor[(1, 16, 14), float64] */;
  (%771, %772, %773)
}

def @func_7202() -> (Tensor[(1, 16, 14), float64],) {
  %774 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
  (%774,)
}

def @func_4962() -> (Tensor[(1, 16, 14), float64],) {
  %775 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %776 = %775.3;
  (%776,)
}

def @func_8472(%var_8459: Tensor[(2688), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(7, 5, 13), float32]) {
  %777 = @func_6864() /* ty=Tensor[(1, 16, 14), float64] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %779 = cast(%var_8459, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %780 = cast(meta[relay.Constant][53] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %781 = reshape(%778, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
  %782 = reshape(%779, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %783 = reshape(%780, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %784 = @func_6948(%781, %782, %783) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
  %785 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
  %786 = exp(%785) /* ty=Tensor[(7, 5, 13), float64] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(7, 5, 13), float32] */;
  %788 = %784.2;
  %789 = erf(%787) /* ty=Tensor[(7, 5, 13), float32] */;
  (%777, %788, %var_8459, meta[relay.Constant][53] /* ty=Tensor[(1260), float64] */, %789)
}

def @func_3176() -> (Tensor[(1, 16, 14), float64],) {
  %790 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  (%790,)
}

def @func_9994() -> (Tensor[(1, 16, 14), float64],) {
  %791 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %792 = %791.1;
  (%792,)
}

def @func_9302() -> Tensor[(1, 16, 14), float64] {
  %793 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %793.0
}

def @func_3102() -> Tensor[(1, 16, 14), float64] {
  @func_3053() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3587() -> Tensor[(1, 16, 14), float64] {
  %794 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %794.0
}

def @func_2708(%var_2672: Tensor[(3, 7, 7), uint32], %var_2673: Tensor[(3, 7, 7), uint32], %var_2686: Tensor[(2, 8), float64], %var_2687: Tensor[(448), float64], %var_2694: Tensor[(3, 7, 7), uint32]) -> (Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) {
  %795 = cast(%var_2686, dtype="float64") /* ty=Tensor[(2, 8), float64] */;
  %796 = cast(%var_2687, dtype="float64") /* ty=Tensor[(448), float64] */;
  %797 = cast(meta[relay.Constant][55] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %798 = reshape(%795, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
  %799 = reshape(%796, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), float64] */;
  %800 = reshape(%797, newshape=[96]) /* ty=Tensor[(96), int32] */;
  %801 = @func_2159(%798, %799, %800) /* ty=(Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) */;
  %802 = cast(%var_2673, dtype="uint32") /* ty=Tensor[(3, 7, 7), uint32] */;
  %803 = shape_of(%var_2672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%var_2672, dtype="uint32") /* ty=Tensor[(3, 7, 7), uint32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %806 = right_shift(%804, %805) /* ty=Tensor[(3, 7, 7), uint32] */;
  %807 = cast(%var_2694, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = %801.3;
  %812 = greater(%809, %810) /* ty=Tensor[(3, 7, 7), bool] */;
  (%811, %var_2686, %var_2687, meta[relay.Constant][55] /* ty=Tensor[(96), int32] */, %812)
}

def @func_6180() -> Tensor[(1, 16, 14), float64] {
  %813 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %813.4
}

def @func_3388(%var_3314: Tensor[(6, 5, 1), uint32], %var_3315: Tensor[(6, 5, 12), uint32], %var_3354: int64) -> (Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) {
  %814 = cast(%var_3314, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  %815 = cast(%var_3315, dtype="bool") /* ty=Tensor[(6, 5, 12), bool] */;
  %816 = cast(meta[relay.Constant][56] /* ty=Tensor[(300), bool] */, dtype="int8") /* ty=Tensor[(300), int8] */;
  %817 = cast(%var_3314, dtype="int8") /* ty=Tensor[(6, 5, 1), int8] */;
  %818 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %819 = cast(%var_3354, dtype="int64") /* ty=int64 */;
  %820 = reshape(%819, newshape=[]) /* ty=int64 */;
  %821 = @func_100(%820) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %822 = cast(meta[relay.Constant][56] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %823 = reshape(%822, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %824 = @func_386(%823) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %825 = %824.0;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %827 = erf(%826) /* ty=Tensor[(6, 10, 5), float32] */;
  %828 = cast(%827, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %829 = cast(%var_3354, dtype="bool") /* ty=bool */;
  %830 = greater(%814, %815) /* ty=Tensor[(6, 5, 12), bool] */;
  %831 = maximum(%816, %817) /* ty=Tensor[(6, 5, 300), int8] */;
  %832 = %818.1;
  %833 = %821.0;
  %834 = less(%828, %829) /* ty=Tensor[(6, 10, 5), bool] */;
  (%830, %831, %832, %833, %834)
}

def @func_153(%var_138: Tensor[(9, 8, 10), float64]) -> Tensor[(9, 8, 10), float64] {
  %835 = cast(%var_138, dtype="float64") /* ty=Tensor[(9, 8, 10), float64] */;
  acos(%835) /* ty=Tensor[(9, 8, 10), float64] */
}

def @func_2954(%var_2936: Tensor[(1260, 1), float64], %var_2944: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
  %836 = cast(meta[relay.Constant][57] /* ty=Tensor[(50, 6), bool] */, dtype="bool") /* ty=Tensor[(50, 6), bool] */;
  %837 = reshape(%836, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %838 = @func_386(%837) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %839 = cast(meta[relay.Constant][57] /* ty=Tensor[(50, 6), bool] */, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
  %840 = log2(%839) /* ty=Tensor[(50, 6), float32] */;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
  %842 = cast(meta[relay.Constant][58] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %843 = cast(%var_2936, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
  %844 = reshape(%842, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %845 = reshape(%843, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
  %846 = @func_2527(%844, %845) /* ty=(Tensor[(6, 14, 15), bool],) */;
  %847 = cast(%var_2944, dtype="float64") /* ty=Tensor[(720), float64] */;
  %848 = reshape(%847, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %849 = @func_1108(%848) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
  %850 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %851 = %838.0;
  %852 = asin(%841) /* ty=Tensor[(50, 6), float32] */;
  %853 = %846.0;
  %854 = %849.3;
  (%850, %851, %852, %853, meta[relay.Constant][58] /* ty=Tensor[(90), float64] */, %var_2936, %854, %var_2944)
}

def @func_7021() -> Tensor[(1, 16, 14), float64] {
  @func_3053() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_7398() -> Tensor[(1, 16, 14), float64] {
  %855 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %855.1
}

def @func_1904(%var_1840: Tensor[(12, 8, 1), float64], %var_1841: Tensor[(12, 8, 8), float64], %var_1884: Tensor[(7, 2), float32]) -> (Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) {
  %856 = cast(%var_1840, dtype="float64") /* ty=Tensor[(12, 8, 1), float64] */;
  %857 = cast(%var_1841, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %858 = cast(%var_1884, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %859 = reshape(%858, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %860 = cast(%var_1841, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %861 = tan(%860) /* ty=Tensor[(12, 8, 8), float64] */;
  %862 = cast(%861, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %863 = log(%862) /* ty=Tensor[(12, 8, 8), float32] */;
  %864 = cast(%863, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %865 = cast(meta[relay.Constant][59] /* ty=Tensor[(720, 1), float64] */, dtype="float64") /* ty=Tensor[(720, 1), float64] */;
  %866 = reshape(%865, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %867 = mod(%856, %857) /* ty=Tensor[(12, 8, 8), float64] */;
  %868 = @func_886(%859) /* ty=Tensor[(1, 2, 7), float32] */;
  %869 = log10(%864) /* ty=Tensor[(12, 8, 8), float64] */;
  %870 = @func_153(%866) /* ty=Tensor[(9, 8, 10), float64] */;
  (%867, %868, %var_1884, %869, %870, meta[relay.Constant][59] /* ty=Tensor[(720, 1), float64] */)
}

def @func_8404() -> (Tensor[(1, 16, 14), float64],) {
  %871 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %872 = %871.0;
  (%872,)
}

def @func_5331() -> (Tensor[(9, 16, 14), int8],) {
  %873 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %874 = %873.0;
  (%874,)
}

def @func_3053() -> Tensor[(1, 16, 14), float64] {
  %875 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  erf(%876) /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2429() -> (Tensor[(1, 16, 14), float64],) {
  %877 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  (%877,)
}

def @func_9810() -> (Tensor[(1, 16, 14), float64],) {
  %878 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %879 = %878.0;
  (%879,)
}

def @func_7166() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) {
  %880 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %881 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %882 = %881.0;
  %883 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 16, 14), float64] */, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = @func_4974() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %888 = %880.0;
  %889 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
  %890 = greater(%885, %886) /* ty=Tensor[(?, 16, 14), bool] */;
  %891 = %887.0;
  (%888, %889, %890, %891)
}

def @func_2477() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %892 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %893 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %894 = %892.0;
  (%893, %894)
}

def @func_5525() -> (Tensor[(1, 16, 14), float64],) {
  %895 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %896 = %895.0;
  (%896,)
}

def @func_6663() -> (Tensor[(1, 16, 14), float64],) {
  %897 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %898 = %897.0;
  (%898,)
}

def @func_7265(%var_7249: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(16), float64]) {
  %899 = cast(%var_7249, dtype="float64") /* ty=Tensor[(16), float64] */;
  %900 = reshape(%899, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %901 = @func_6481(%900) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) */;
  %902 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %903 = %901.1;
  (%902, %903, %var_7249)
}

def @func_5149(%var_5141: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) {
  %904 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %905 = cast(%var_5141, dtype="int64") /* ty=int64 */;
  %906 = reshape(%905, newshape=[]) /* ty=int64 */;
  %907 = @func_100(%906) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %908 = %904.0;
  %909 = %907.0;
  (%908, %909, %var_5141)
}

def @func_5949(%var_5915: Tensor[(720), float64], %var_5921: Tensor[(90, 14), float64], %var_5922: Tensor[(2560), float32]) -> (Tensor[(?, 16, 14), float32], Tensor[(96), float64], Tensor[(14), float32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(15, 10, 4), uint32], Tensor[(2688), float64], Tensor[(90, 14), float64], Tensor[(2560), float32]) {
  %910 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %911 = %910.0;
  %912 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %914 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%911, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %917 = cast(meta[relay.Constant][61] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %918 = reshape(%917, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %919 = @func_3133(%918) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) */;
  %920 = cast(%var_5915, dtype="float64") /* ty=Tensor[(720), float64] */;
  %921 = reshape(%920, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %922 = cast(meta[relay.Constant][62] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %923 = cast(%var_5921, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
  %924 = cast(meta[relay.Constant][61] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %925 = cast(%var_5922, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %926 = reshape(%922, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %927 = reshape(%923, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %928 = reshape(%924, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %929 = reshape(%925, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
  %930 = @func_5788(%926, %927, %928, %929) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */;
  %931 = power(%915, %916) /* ty=Tensor[(?, 16, 14), float32] */;
  %932 = %919.2;
  %933 = @func_153(%921) /* ty=Tensor[(9, 8, 10), float64] */;
  %934 = %930.1;
  (%931, %932, meta[relay.Constant][61] /* ty=Tensor[(14), float32] */, %933, %var_5915, %934, meta[relay.Constant][62] /* ty=Tensor[(2688), float64] */, %var_5921, %var_5922)
}

def @func_2359() -> (Tensor[(1, 16, 14), float64],) {
  %935 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 16, 14), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %936 = sinh(%935) /* ty=Tensor[(1, 16, 14), float64] */;
  (%936,)
}

def @func_6380(%var_6354: Tensor[(96), float64]) -> (Tensor[(96), float64], Tensor[(9, 16, 14), bool]) {
  %937 = cast(%var_6354, dtype="float64") /* ty=Tensor[(96), float64] */;
  %938 = reshape(%937, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %939 = @func_5213(%938) /* ty=(Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) */;
  %940 = %939.0;
  %941 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  %942 = cast(%940, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %943 = cast(%941, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %944 = less_equal(%942, %943) /* ty=Tensor[(9, 16, 14), bool] */;
  (%var_6354, %944)
}

def @func_9957(%var_9940: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), int8],) {
  %945 = @func_9071() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %946 = %945.0;
  %947 = cast(%946, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
  %948 = cast(%var_9940, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %949 = logical_xor(%947, %948) /* ty=Tensor[(12, 16, 14), int8] */;
  (%949,)
}

def @func_7873() -> Tensor[(1, 16, 14), float64] {
  @func_2413() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3133(%var_3125: Tensor[(14), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) {
  %950 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %951 = cast(meta[relay.Constant][64] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %952 = cast(meta[relay.Constant][65] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %953 = cast(%var_3125, dtype="float32") /* ty=Tensor[(14), float32] */;
  %954 = reshape(%951, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
  %955 = reshape(%952, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
  %956 = reshape(%953, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
  %957 = @func_1904(%954, %955, %956) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
  %958 = %950.0;
  %959 = %957.1;
  (%958, %959, meta[relay.Constant][64] /* ty=Tensor[(96), float64] */, meta[relay.Constant][65] /* ty=Tensor[(768), float64] */, %var_3125)
}

def @func_5297(%var_5275: Tensor[(10, 2, 1), float64], %var_5293: Tensor[(1, 720), float64]) -> (Tensor[(10, 2, ?), int32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(9, 8, 10), float64], Tensor[(1, 720), float64]) {
  %960 = cast(3.613f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %961 = cast(%var_5275, dtype="bool") /* ty=Tensor[(10, 2, 1), bool] */;
  %962 = less(%960, %961) /* ty=Tensor[(10, 2, 1), bool] */;
  %963 = cast(%var_5275, dtype="int32") /* ty=Tensor[(10, 2, 1), int32] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="int32") /* ty=Tensor[(10, 2, 1), int32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %967 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %968 = cast(%var_5293, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %969 = reshape(%968, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %970 = left_shift(%965, %966) /* ty=Tensor[(10, 2, ?), int32] */;
  %971 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
  %972 = %967.0;
  %973 = @func_153(%969) /* ty=Tensor[(9, 8, 10), float64] */;
  (%970, %971, %972, %973, %var_5293)
}

def @func_386(%var_373: Tensor[(6, 10, 5), bool]) -> (Tensor[(6, 10, 5), bool],) {
  %974 = cast(meta[relay.Constant][66] /* ty=Tensor[(6, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %975 = shape_of(%var_373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_373, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %978 = logical_or(%976, %977) /* ty=Tensor[(6, 10, 5), bool] */;
  (%978,)
}

def @func_7579() -> Tensor[(1, 16, 14), float64] {
  @func_6864() /* ty=Tensor[(1, 16, 14), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4750(%var_4748: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(5, 6), uint32], Tensor[(360), uint32], int64) {
  %0 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 6), uint32] */, dtype="uint32") /* ty=Tensor[(5, 6), uint32] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %3 = cast(%var_4748, dtype="int64") /* ty=int64 */;
  %4 = reshape(%1, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), uint32] */;
  %5 = reshape(%2, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), uint32] */;
  %6 = reshape(%3, newshape=[]) /* ty=int64 */;
  %7 = @func_3388(%4, %5, %6) /* ty=(Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) */;
  %8 = %0.1;
  %9 = %7.2;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(5, 6), uint32] */, meta[relay.Constant][1] /* ty=Tensor[(360), uint32] */, %var_4748)
}

def @func_10169() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %10 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
  %11 = @func_7021() /* ty=Tensor[(1, 16, 14), float64] */;
  %12 = %10.0;
  (%11, %12)
}

def @func_2638(%var_2636: Tensor[(14, 1), float32]) -> (Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) {
  @func_2635(%var_2636) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) */
}

def @main(%var_10314: Tensor[(11, 1, 4), float64]) -> Tensor[(11, ?, 4), float32] {
  %13 = cast(%var_10314, dtype="float64") /* ty=Tensor[(11, 1, 4), float64] */;
  %14 = erf(%13) /* ty=Tensor[(11, 1, 4), float64] */;
  %15 = cast(%var_10314, dtype="float32") /* ty=Tensor[(11, 1, 4), float32] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="float32") /* ty=Tensor[(11, 1, 4), float32] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%17, %18) /* ty=Tensor[(11, ?, 4), float32] */
}

def @func_9812() -> (Tensor[(1, 16, 14), float64],) {
  @func_9810() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_8809(%var_8808: Tensor[(6, 16, 14), float64]) -> (Tensor[(6, 16, 14), int16],) {
  %23 = fn (%var_8799: Tensor[(6, 16, 14), float64]) -> (Tensor[(6, 16, 14), int16],) {
    %19 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
    %20 = cast(%19, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
    %21 = cast(%var_8799, dtype="int16") /* ty=Tensor[(6, 16, 14), int16] */;
    %22 = bitwise_and(%20, %21) /* ty=Tensor[(6, 16, 14), int16] */;
    (%22,)
  };
  %23(%var_8808) /* ty=(Tensor[(6, 16, 14), int16],) */
}

def @func_4469() -> (Tensor[(1, 16, 14), float64],) {
  %26 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %24 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %25 = %24.4;
    (%25,)
  };
  %26() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_9303() -> Tensor[(1, 16, 14), float64] {
  %28 = fn () -> Tensor[(1, 16, 14), float64] {
    %27 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %27.0
  };
  %28() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3997() -> Tensor[(?, 16, 14), int16] {
  %34 = fn () -> Tensor[(?, 16, 14), int16] {
    %29 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 16, 14), float64] */, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
    %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%29, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    right_shift(%32, %33) /* ty=Tensor[(?, 16, 14), int16] */
  };
  %34() /* ty=Tensor[(?, 16, 14), int16] */
}

def @func_10195() -> Tensor[(1, 16, 14), float64] {
  %36 = fn () -> Tensor[(1, 16, 14), float64] {
    %35 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %35.0
  };
  %36() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3203() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %37 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %38 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %39 = %37.0;
  (%38, %39)
}

def @func_3177() -> (Tensor[(1, 16, 14), float64],) {
  %41 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %40 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
    (%40,)
  };
  %41() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_3512(%var_3509: Tensor[(90), float64], %var_3510: Tensor[(1260), float64], %var_3511: Tensor[(7, 2), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) {
  %55 = fn (%var_3474: Tensor[(90), float64], %var_3475: Tensor[(1260), float64], %var_3486: Tensor[(7, 2), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) {
    %42 = cast(%var_3474, dtype="float64") /* ty=Tensor[(90), float64] */;
    %43 = cast(%var_3475, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %44 = reshape(%42, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
    %45 = reshape(%43, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
    %46 = @func_2527(%44, %45) /* ty=(Tensor[(6, 14, 15), bool],) */;
    %47 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %48 = cast(%var_3486, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
    %49 = reshape(%48, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %50 = @func_3133(%49) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) */;
    %51 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
    %52 = %46.0;
    %53 = %47.1;
    %54 = %50.3;
    (%51, %52, %var_3474, %var_3475, %53, %54, %var_3486)
  };
  %55(%var_3509, %var_3510, %var_3511) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) */
}

def @func_7400() -> Tensor[(1, 16, 14), float64] {
  @func_7398() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_7700() -> (Tensor[(1, 16, 14), float64],) {
  %58 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %56 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %57 = %56.0;
    (%57,)
  };
  %58() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_6889() -> Tensor[(9, 16, 14), int8] {
  %59 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %59.0
}

def @func_5404() -> (Tensor[(1, 16, 14), float64],) {
  @func_5402() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_5794(%var_5790: Tensor[(12, 16, 14), float64], %var_5791: Tensor[(1260), float64], %var_5792: Tensor[(14, 1), float32], %var_5793: Tensor[(2560), float32]) -> (Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  @func_5788(%var_5790, %var_5791, %var_5792, %var_5793) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */
}

def @func_6037() -> (Tensor[(1, 16, 14), float64],) {
  %60 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %61 = %60.0;
  (%61,)
}

def @func_9010(%var_9008: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) {
  @func_9007(%var_9008) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) */
}

def @func_9060() -> Tensor[(1, 16, 14), float64] {
  %62 = fn () -> Tensor[(1, 16, 14), float64] {
    @func_8690() /* ty=Tensor[(1, 16, 14), float64] */
  };
  %62() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2414() -> Tensor[(1, 16, 14), float64] {
  %64 = fn () -> Tensor[(1, 16, 14), float64] {
    %63 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %63.0
  };
  %64() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_5571(%var_5537: Tensor[(16, 10, 16), float32]) -> (Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %66 = shape_of(%var_5537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_5537, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %69 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %70 = floor_mod(%67, %68) /* ty=Tensor[(16, 10, 16), float32] */;
  %71 = %69.0;
  %72 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
  (%70, %71, %72)
}

def @func_5448(%var_5447: Tensor[(10, 15, 13), uint8]) -> Tensor[(10, 15, 13), uint8] {
  %77 = fn (%var_5440: Tensor[(10, 15, 13), uint8]) -> Tensor[(10, 15, 13), uint8] {
    %73 = cast(%var_5440, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
    %74 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(10, 15, 13), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 15, 13), uint8] */, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
    %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_xor(%75, %76) /* ty=Tensor[(10, 15, 13), uint8] */
  };
  %77(%var_5447) /* ty=Tensor[(10, 15, 13), uint8] */
}

def @func_6693(%var_6691: Tensor[(14, 12, 7), uint16], %var_6692: Tensor[(14, 12, 7), uint16]) -> Tensor[(14, 12, 7), int16] {
  @func_6689(%var_6691, %var_6692) /* ty=Tensor[(14, 12, 7), int16] */
}

def @func_386(%var_373: Tensor[(6, 10, 5), bool]) -> (Tensor[(6, 10, 5), bool],) {
  %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %79 = shape_of(%var_373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_373, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = logical_or(%80, %81) /* ty=Tensor[(6, 10, 5), bool] */;
  (%82,)
}

def @func_8696() -> Tensor[(1, 16, 14), float64] {
  %83 = fn () -> Tensor[(1, 16, 14), float64] {
    @func_3284() /* ty=Tensor[(1, 16, 14), float64] */
  };
  %83() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9073() -> (Tensor[(1, 16, 14), float64],) {
  @func_9071() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_2976() -> Tensor[(1, 16, 14), float64] {
  @func_2974() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9835() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %87 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %84 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %85 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
    %86 = %84.0;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_7268(%var_7266: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(16), float64]) {
  @func_7265(%var_7266) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(16), float64]) */
}

def @func_3780() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %92 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %88 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %89 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %90 = %88.1;
    %91 = %89.0;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_9610(%var_9608: Tensor[(2560), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  @func_9607(%var_9608) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */
}

def @func_7265(%var_7249: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(16), float64]) {
  %93 = cast(%var_7249, dtype="float64") /* ty=Tensor[(16), float64] */;
  %94 = reshape(%93, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %95 = @func_6481(%94) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) */;
  %96 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %97 = %95.1;
  (%96, %97, %var_7249)
}

def @func_7023() -> Tensor[(1, 16, 14), float64] {
  @func_7021() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_8558(%var_8521: Tensor[(1260), float64], %var_8533: Tensor[(2688), float64], %var_8543: Tensor[(90), float64], %var_8552: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 14), float32], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), int8], Tensor[(168), float32], Tensor[(90), float64], Tensor[(9, 16, 14), float32], Tensor[(16), float64]) {
  %98 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %101 = cast(%var_8521, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %102 = reshape(%99, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
  %103 = reshape(%100, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %104 = reshape(%101, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %105 = @func_6948(%102, %103, %104) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
  %106 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %107 = cast(%var_8533, dtype="int8") /* ty=Tensor[(2688), int8] */;
  %108 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2688), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(2688), float64] */, dtype="int8") /* ty=Tensor[(2688), int8] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?), int8] */;
  %111 = cast(%var_8543, dtype="float64") /* ty=Tensor[(90), float64] */;
  %112 = reshape(%111, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %113 = @func_6259(%112) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) */;
  %114 = cast(%var_8552, dtype="float64") /* ty=Tensor[(16), float64] */;
  %115 = reshape(%114, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %116 = @func_6481(%115) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) */;
  %117 = %105.5;
  %118 = %106.0;
  %119 = bitwise_or(%109, %110) /* ty=Tensor[(2688), int8] */;
  %120 = %113.2;
  %121 = %116.2;
  (%98, %117, %var_8521, %118, %119, %120, %var_8543, %121, %var_8552)
}

def @func_10218() -> Tensor[(1, 16, 14), float64] {
  %123 = fn () -> Tensor[(1, 16, 14), float64] {
    %122 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %122.0
  };
  %123() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_1111(%var_1109: Tensor[(720), float64]) -> (Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) {
  @func_1108(%var_1109) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */
}

def @func_5333() -> (Tensor[(9, 16, 14), int8],) {
  @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */
}

def @func_3234() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %128 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %124 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %125 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %126 = %124.1;
    %127 = %125.0;
    (%126, %127)
  };
  %128() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_5638() -> (Tensor[(1, 16, 14), float64],) {
  %129 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
  (%129,)
}

def @func_8692() -> Tensor[(1, 16, 14), float64] {
  @func_8690() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2273(%var_2268: Tensor[(8, 7, 9), float64]) -> (Tensor[(8, 7, 9), bool],) {
  %130 = cast(%var_2268, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %131 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(8, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %134 = less(%132, %133) /* ty=Tensor[(8, 7, 9), bool] */;
  (%134,)
}

def @func_10075() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16], Tensor[(1, 16, 14), float64]) {
  %135 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %136 = @func_4200() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) */;
  %137 = %135.0;
  %138 = %136.1;
  %139 = @func_8690() /* ty=Tensor[(1, 16, 14), float64] */;
  (%137, %138, %139)
}

def @func_1108(%var_1079: Tensor[(720), float64]) -> (Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) {
  %140 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 1, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 1, 16), uint64] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 8, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 8, 16), uint64] */;
  %142 = cast(%var_1079, dtype="float64") /* ty=Tensor[(720), float64] */;
  %143 = reshape(%142, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 1, 16), uint64] */, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
  %145 = cos(%144) /* ty=Tensor[(16, 1, 16), float64] */;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(16, 1, 16), float32] */;
  %147 = right_shift(%140, %141) /* ty=Tensor[(16, 8, 16), uint64] */;
  %148 = @func_153(%143) /* ty=Tensor[(9, 8, 10), float64] */;
  %149 = asin(%146) /* ty=Tensor[(16, 1, 16), float32] */;
  (%147, %148, %var_1079, %149)
}

def @func_3110() -> (Tensor[(1, 16, 14), float64],) {
  %151 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %150 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
    (%150,)
  };
  %151() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_8405() -> (Tensor[(1, 16, 14), float64],) {
  %154 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %152 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %153 = %152.0;
    (%153,)
  };
  %154() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_7167() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) {
  %167 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) {
    %155 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %156 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %157 = %156.0;
    %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 14), float64] */, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%157, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %162 = @func_4974() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %163 = %155.0;
    %164 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
    %165 = greater(%160, %161) /* ty=Tensor[(?, 16, 14), bool] */;
    %166 = %162.0;
    (%163, %164, %165, %166)
  };
  %167() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */
}

def @func_4530() -> (Tensor[(9, 16, 14), int8],) {
  %172 = fn () -> (Tensor[(9, 16, 14), int8],) {
    %168 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
    %169 = cast(%168, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
    %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 16, 14), float64] */, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
    %171 = minimum(%169, %170) /* ty=Tensor[(9, 16, 14), int8] */;
    (%171,)
  };
  %172() /* ty=(Tensor[(9, 16, 14), int8],) */
}

def @func_2361() -> (Tensor[(1, 16, 14), float64],) {
  @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_3205() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_2164(%var_2161: Tensor[(1, 1, 16), float64], %var_2162: Tensor[(7, 4, 16), float64], %var_2163: Tensor[(96), int32]) -> (Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) {
  @func_2159(%var_2161, %var_2162, %var_2163) /* ty=(Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) */
}

def @func_5527() -> (Tensor[(1, 16, 14), float64],) {
  @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_8916() -> (Tensor[(9, 16, 14), int8], Tensor[(720), float64], Tensor[(168), float32], Tensor[(720), float64], Tensor[(1, 16, 14), float64]) {
  %185 = fn () -> (Tensor[(9, 16, 14), int8], Tensor[(720), float64], Tensor[(168), float32], Tensor[(720), float64], Tensor[(1, 16, 14), float64]) {
    %173 = @func_8380() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */;
    %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %175 = cast(meta[relay.Constant][13] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %176 = reshape(%174, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
    %177 = reshape(%175, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %178 = @func_3012(%176, %177) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
    %179 = %178.2;
    %180 = cast(%179, dtype="float64") /* ty=Tensor[(720), float64] */;
    %181 = reshape(%180, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %182 = @func_5998(%181) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) */;
    %183 = %173.0;
    %184 = %182.3;
    (%183, %179, meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, meta[relay.Constant][13] /* ty=Tensor[(720), float64] */, %184)
  };
  %185() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(720), float64], Tensor[(168), float32], Tensor[(720), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_4563(%var_4562: Tensor[(7, 2), float32]) -> (Tensor[(1, 15, 12), float32], Tensor[(1, 16, 14), float64], Tensor[(96), int32], Tensor[(7, 2), float32]) {
  %194 = fn (%var_4550: Tensor[(7, 2), float32]) -> (Tensor[(1, 15, 12), float32], Tensor[(1, 16, 14), float64], Tensor[(96), int32], Tensor[(7, 2), float32]) {
    %186 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %187 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %188 = cast(%var_4550, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
    %189 = reshape(%188, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
    %190 = @func_2635(%189) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) */;
    %191 = %186.1;
    %192 = %187.1;
    %193 = %190.3;
    (%191, %192, %193, %var_4550)
  };
  %194(%var_4562) /* ty=(Tensor[(1, 15, 12), float32], Tensor[(1, 16, 14), float64], Tensor[(96), int32], Tensor[(7, 2), float32]) */
}

def @func_7662() -> (Tensor[(1, 16, 14), float64],) {
  %196 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %195 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
    (%195,)
  };
  %196() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_9439() -> (Tensor[(15, 16, 14), int8],) {
  %202 = fn () -> (Tensor[(15, 16, 14), int8],) {
    %197 = @func_8380() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */;
    %198 = %197.1;
    %199 = cast(%198, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
    %200 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 16, 14), float64] */, dtype="int8") /* ty=Tensor[(15, 16, 14), int8] */;
    %201 = logical_xor(%199, %200) /* ty=Tensor[(15, 16, 14), int8] */;
    (%201,)
  };
  %202() /* ty=(Tensor[(15, 16, 14), int8],) */
}

def @func_1908(%var_1905: Tensor[(12, 8, 1), float64], %var_1906: Tensor[(12, 8, 8), float64], %var_1907: Tensor[(7, 2), float32]) -> (Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) {
  %218 = fn (%var_1840: Tensor[(12, 8, 1), float64], %var_1841: Tensor[(12, 8, 8), float64], %var_1884: Tensor[(7, 2), float32]) -> (Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) {
    %203 = cast(%var_1840, dtype="float64") /* ty=Tensor[(12, 8, 1), float64] */;
    %204 = cast(%var_1841, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
    %205 = cast(%var_1884, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
    %206 = reshape(%205, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
    %207 = cast(%var_1841, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
    %208 = tan(%207) /* ty=Tensor[(12, 8, 8), float64] */;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
    %210 = log(%209) /* ty=Tensor[(12, 8, 8), float32] */;
    %211 = cast(%210, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
    %212 = cast(meta[relay.Constant][15] /* ty=Tensor[(720, 1), float64] */, dtype="float64") /* ty=Tensor[(720, 1), float64] */;
    %213 = reshape(%212, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
    %214 = mod(%203, %204) /* ty=Tensor[(12, 8, 8), float64] */;
    %215 = @func_886(%206) /* ty=Tensor[(1, 2, 7), float32] */;
    %216 = log10(%211) /* ty=Tensor[(12, 8, 8), float64] */;
    %217 = @func_153(%213) /* ty=Tensor[(9, 8, 10), float64] */;
    (%214, %215, %var_1884, %216, %217, meta[relay.Constant][15] /* ty=Tensor[(720, 1), float64] */)
  };
  %218(%var_1905, %var_1906, %var_1907) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */
}

def @func_8725() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_8723() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_3727(%var_3637: Tensor[(720), float64]) -> (Tensor[(?, 16, 14), uint16], Tensor[(3, 420), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float64]) {
  %219 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %220 = %219.2;
  %221 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
  %222 = cast(%221, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %223 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%220, dtype="uint16") /* ty=Tensor[(?, 16, 14), uint16] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %226 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %227 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %228 = reshape(%227, newshape=[]) /* ty=int64 */;
  %229 = @func_100(%228) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 420), float64] */, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %231 = cast(%var_3637, dtype="float64") /* ty=Tensor[(720), float64] */;
  %232 = reshape(%230, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %233 = reshape(%231, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %234 = @func_2954(%232, %233) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %235 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 420), float64] */, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %236 = cast(%var_3637, dtype="float64") /* ty=Tensor[(720), float64] */;
  %237 = reshape(%235, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %238 = reshape(%236, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %239 = @func_2954(%237, %238) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %240 = %239.0;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %242 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %243 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %244 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %245 = reshape(%244, newshape=[]) /* ty=int64 */;
  %246 = @func_100(%245) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(1, 15, 12), float64] */;
  %249 = multiply(%224, %225) /* ty=Tensor[(?, 16, 14), uint16] */;
  %250 = %226.0;
  %251 = %229.0;
  %252 = %234.7;
  %253 = log(%241) /* ty=Tensor[(1, 16, 14), float64] */;
  %254 = %242.1;
  %255 = %243.0;
  %256 = sqrt(%248) /* ty=Tensor[(1, 15, 12), float64] */;
  (%249, meta[relay.Constant][16] /* ty=Tensor[(3, 420), float64] */, %var_3637, %250, %251, -8 /* ty=int64 */, %252, %253, %254, %255, %256)
}

def @func_5258() -> Tensor[(1, 16, 14), float64] {
  %257 = @func_3233() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %257.1
}

def @func_3388(%var_3314: Tensor[(6, 5, 1), uint32], %var_3315: Tensor[(6, 5, 12), uint32], %var_3354: int64) -> (Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) {
  %258 = cast(%var_3314, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  %259 = cast(%var_3315, dtype="bool") /* ty=Tensor[(6, 5, 12), bool] */;
  %260 = cast(meta[relay.Constant][17] /* ty=Tensor[(300), bool] */, dtype="int8") /* ty=Tensor[(300), int8] */;
  %261 = cast(%var_3314, dtype="int8") /* ty=Tensor[(6, 5, 1), int8] */;
  %262 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %263 = cast(%var_3354, dtype="int64") /* ty=int64 */;
  %264 = reshape(%263, newshape=[]) /* ty=int64 */;
  %265 = @func_100(%264) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %266 = cast(meta[relay.Constant][17] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %267 = reshape(%266, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %268 = @func_386(%267) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %269 = %268.0;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %271 = erf(%270) /* ty=Tensor[(6, 10, 5), float32] */;
  %272 = cast(%271, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %273 = cast(%var_3354, dtype="bool") /* ty=bool */;
  %274 = greater(%258, %259) /* ty=Tensor[(6, 5, 12), bool] */;
  %275 = maximum(%260, %261) /* ty=Tensor[(6, 5, 300), int8] */;
  %276 = %262.1;
  %277 = %265.0;
  %278 = less(%272, %273) /* ty=Tensor[(6, 10, 5), bool] */;
  (%274, %275, %276, %277, %278)
}

def @func_4347() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %283 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %279 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %280 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %281 = %279.0;
    %282 = %280.0;
    (%281, %282)
  };
  %283() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_6382(%var_6381: Tensor[(96), float64]) -> (Tensor[(96), float64], Tensor[(9, 16, 14), bool]) {
  %292 = fn (%var_6354: Tensor[(96), float64]) -> (Tensor[(96), float64], Tensor[(9, 16, 14), bool]) {
    %284 = cast(%var_6354, dtype="float64") /* ty=Tensor[(96), float64] */;
    %285 = reshape(%284, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %286 = @func_5213(%285) /* ty=(Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) */;
    %287 = %286.0;
    %288 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
    %289 = cast(%287, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %290 = cast(%288, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %291 = less_equal(%289, %290) /* ty=Tensor[(9, 16, 14), bool] */;
    (%var_6354, %291)
  };
  %292(%var_6381) /* ty=(Tensor[(96), float64], Tensor[(9, 16, 14), bool]) */
}

def @func_9607(%var_9591: Tensor[(2560), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  %293 = cast(%var_9591, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %294 = reshape(%293, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float32] */;
  %295 = @func_5571(%294) /* ty=(Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %296 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  %297 = @func_9059() /* ty=Tensor[(1, 16, 14), float64] */;
  %298 = %295.2;
  (%296, %297, %298, %var_9591)
}

def @func_8703() -> Tensor[(1, 16, 14), float64] {
  %300 = fn () -> Tensor[(1, 16, 14), float64] {
    %299 = @func_4133() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %299.0
  };
  %300() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3960() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_5082(%var_5080: Tensor[(96), float64], %var_5081: Tensor[(14), float32]) -> (Tensor[(9, 16, 14), int8], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(1, 16, 14), float64]) {
  %313 = fn (%var_5064: Tensor[(96), float64], %var_5066: Tensor[(14), float32]) -> (Tensor[(9, 16, 14), int8], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(1, 16, 14), float64]) {
    %301 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
    %302 = cast(%var_5064, dtype="float64") /* ty=Tensor[(96), float64] */;
    %303 = cast(meta[relay.Constant][18] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %304 = cast(%var_5066, dtype="float32") /* ty=Tensor[(14), float32] */;
    %305 = reshape(%302, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
    %306 = reshape(%303, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
    %307 = reshape(%304, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
    %308 = @func_1904(%305, %306, %307) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
    %309 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %310 = %301.0;
    %311 = %308.5;
    %312 = %309.0;
    (%310, %311, %var_5064, meta[relay.Constant][18] /* ty=Tensor[(768), float64] */, %var_5066, %312)
  };
  %313(%var_5080, %var_5081) /* ty=(Tensor[(9, 16, 14), int8], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(1, 16, 14), float64]) */
}

def @func_7875() -> Tensor[(1, 16, 14), float64] {
  @func_7873() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_7094() -> (Tensor[(?, 16, 14), float64],) {
  %321 = fn () -> (Tensor[(?, 16, 14), float64],) {
    %314 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
    %315 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
    %316 = cast(%315, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    %317 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
    %318 = cast(%314, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %320 = divide(%318, %319) /* ty=Tensor[(?, 16, 14), float64] */;
    (%320,)
  };
  %321() /* ty=(Tensor[(?, 16, 14), float64],) */
}

def @func_5788(%var_5738: Tensor[(12, 16, 14), float64], %var_5746: Tensor[(1260), float64], %var_5747: Tensor[(14, 1), float32], %var_5785: Tensor[(2560), float32]) -> (Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) {
  %322 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %323 = %322.0;
  %324 = cast(%323, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %325 = cast(%var_5738, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %326 = cast(meta[relay.Constant][19] /* ty=Tensor[(60, 10), uint16] */, dtype="uint16") /* ty=Tensor[(60, 10), uint16] */;
  %327 = cast(meta[relay.Constant][19] /* ty=Tensor[(60, 10), uint16] */, dtype="uint16") /* ty=Tensor[(60, 10), uint16] */;
  %328 = cast(%var_5746, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %329 = cast(%var_5747, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %330 = reshape(%326, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), uint16] */;
  %331 = reshape(%327, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), uint16] */;
  %332 = reshape(%328, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %333 = reshape(%329, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %334 = @func_4306(%330, %331, %332, %333) /* ty=(Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) */;
  %335 = cast(%var_5785, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %336 = reshape(%335, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float32] */;
  %337 = @func_5571(%336) /* ty=(Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %338 = less(%324, %325) /* ty=Tensor[(12, 16, 14), bool] */;
  %339 = %334.1;
  %340 = %337.2;
  (%338, %339, meta[relay.Constant][19] /* ty=Tensor[(60, 10), uint16] */, %var_5746, %var_5747, %340, %var_5785)
}

def @func_2431() -> (Tensor[(1, 16, 14), float64],) {
  @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_8382() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  @func_8380() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */
}

def @func_5525() -> (Tensor[(1, 16, 14), float64],) {
  %341 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %342 = %341.0;
  (%342,)
}

def @func_9528() -> (Tensor[(1, 16, 14), float64], int64, Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %343 = cast(meta[relay.Constant][20] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %344 = reshape(%343, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %345 = @func_9007(%344) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) */;
  %346 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %347 = @func_8702() /* ty=Tensor[(1, 16, 14), float64] */;
  %348 = %345.2;
  %349 = @func_6864() /* ty=Tensor[(1, 16, 14), float64] */;
  %350 = %346.1;
  (%347, %348, meta[relay.Constant][20] /* ty=Tensor[(1260), float64] */, %349, %350)
}

def @func_10272() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  @func_10270() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */
}

def @func_9761() -> Tensor[(1, 16, 14), float64] {
  @func_9759() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_7361() -> (Tensor[(?, 16, 14), float64],) {
  %353 = fn () -> (Tensor[(?, 16, 14), float64],) {
    %351 = @func_7093() /* ty=(Tensor[(?, 16, 14), float64],) */;
    %352 = %351.0;
    (%352,)
  };
  %353() /* ty=(Tensor[(?, 16, 14), float64],) */
}

def @func_5260() -> Tensor[(1, 16, 14), float64] {
  @func_5258() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_6665() -> (Tensor[(1, 16, 14), float64],) {
  @func_6663() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_9777() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %357 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %354 = @func_8604() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %355 = @func_4899() /* ty=Tensor[(1, 16, 14), float64] */;
    %356 = %354.0;
    (%355, %356)
  };
  %357() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_889(%var_887: Tensor[(1, 2, 7), float32]) -> Tensor[(1, 2, 7), float32] {
  @func_886(%var_887) /* ty=Tensor[(1, 2, 7), float32] */
}

def @func_3285() -> Tensor[(1, 16, 14), float64] {
  %361 = fn () -> Tensor[(1, 16, 14), float64] {
    %358 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %359 = %358.0;
    %360 = cast(%359, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    atanh(%360) /* ty=Tensor[(1, 16, 14), float64] */
  };
  %361() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_8605() -> (Tensor[(1, 16, 14), float64],) {
  %363 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %362 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
    (%362,)
  };
  %363() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_2479() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_4202() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) {
  @func_4200() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) */
}

def @func_5402() -> (Tensor[(1, 16, 14), float64],) {
  %364 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %365 = %364.1;
  (%365,)
}

def @func_3135(%var_3134: Tensor[(14), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) {
  %376 = fn (%var_3125: Tensor[(14), float32]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) {
    %366 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %367 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %369 = cast(%var_3125, dtype="float32") /* ty=Tensor[(14), float32] */;
    %370 = reshape(%367, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
    %371 = reshape(%368, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
    %372 = reshape(%369, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
    %373 = @func_1904(%370, %371, %372) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
    %374 = %366.0;
    %375 = %373.1;
    (%374, %375, meta[relay.Constant][21] /* ty=Tensor[(96), float64] */, meta[relay.Constant][22] /* ty=Tensor[(768), float64] */, %var_3125)
  };
  %376(%var_3134) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) */
}

def @func_2714(%var_2709: Tensor[(3, 7, 7), uint32], %var_2710: Tensor[(3, 7, 7), uint32], %var_2711: Tensor[(2, 8), float64], %var_2712: Tensor[(448), float64], %var_2713: Tensor[(3, 7, 7), uint32]) -> (Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) {
  %395 = fn (%var_2672: Tensor[(3, 7, 7), uint32], %var_2673: Tensor[(3, 7, 7), uint32], %var_2686: Tensor[(2, 8), float64], %var_2687: Tensor[(448), float64], %var_2694: Tensor[(3, 7, 7), uint32]) -> (Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) {
    %377 = cast(%var_2686, dtype="float64") /* ty=Tensor[(2, 8), float64] */;
    %378 = cast(%var_2687, dtype="float64") /* ty=Tensor[(448), float64] */;
    %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
    %380 = reshape(%377, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), float64] */;
    %381 = reshape(%378, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), float64] */;
    %382 = reshape(%379, newshape=[96]) /* ty=Tensor[(96), int32] */;
    %383 = @func_2159(%380, %381, %382) /* ty=(Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) */;
    %384 = cast(%var_2673, dtype="uint32") /* ty=Tensor[(3, 7, 7), uint32] */;
    %385 = shape_of(%var_2672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%var_2672, dtype="uint32") /* ty=Tensor[(3, 7, 7), uint32] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %388 = right_shift(%386, %387) /* ty=Tensor[(3, 7, 7), uint32] */;
    %389 = cast(%var_2694, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
    %391 = cast(%388, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %393 = %383.3;
    %394 = greater(%391, %392) /* ty=Tensor[(3, 7, 7), bool] */;
    (%393, %var_2686, %var_2687, meta[relay.Constant][23] /* ty=Tensor[(96), int32] */, %394)
  };
  %395(%var_2709, %var_2710, %var_2711, %var_2712, %var_2713) /* ty=(Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) */
}

def @func_6663() -> (Tensor[(1, 16, 14), float64],) {
  %396 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %397 = %396.0;
  (%397,)
}

def @func_2974() -> Tensor[(1, 16, 14), float64] {
  %398 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %398.0
}

def @func_6481(%var_6471: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) {
  %399 = @func_4468() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %400 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %401 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %402 = %401.0;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %404 = sinh(%403) /* ty=Tensor[(9, 16, 14), float32] */;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(9, 16, 14), float32] */;
  %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %407 = cast(meta[relay.Constant][24] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %408 = cast(%var_6471, dtype="float64") /* ty=Tensor[(16), float64] */;
  %409 = cast(meta[relay.Constant][25] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %410 = cast(meta[relay.Constant][24] /* ty=Tensor[(147), uint32] */, dtype="uint32") /* ty=Tensor[(147), uint32] */;
  %411 = reshape(%406, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %412 = reshape(%407, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %413 = reshape(%408, newshape=[2, 8]) /* ty=Tensor[(2, 8), float64] */;
  %414 = reshape(%409, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %415 = reshape(%410, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint32] */;
  %416 = @func_2708(%411, %412, %413, %414, %415) /* ty=(Tensor[(720), float64], Tensor[(2, 8), float64], Tensor[(448), float64], Tensor[(96), int32], Tensor[(3, 7, 7), bool]) */;
  %417 = %399.0;
  %418 = %400.0;
  %419 = asinh(%405) /* ty=Tensor[(9, 16, 14), float32] */;
  %420 = %416.1;
  (%417, %418, %419, %420, meta[relay.Constant][24] /* ty=Tensor[(147), uint32] */, %var_6471, meta[relay.Constant][25] /* ty=Tensor[(448), float64] */)
}

def @func_6760() -> (Tensor[(1, 15, 12), int64], Tensor[(?, 16, 14), uint8]) {
  @func_6758() /* ty=(Tensor[(1, 15, 12), int64], Tensor[(?, 16, 14), uint8]) */
}

def @func_4900() -> Tensor[(1, 16, 14), float64] {
  %422 = fn () -> Tensor[(1, 16, 14), float64] {
    %421 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %421.0
  };
  %422() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2957(%var_2955: Tensor[(1260, 1), float64], %var_2956: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
  %442 = fn (%var_2936: Tensor[(1260, 1), float64], %var_2944: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
    %423 = cast(meta[relay.Constant][26] /* ty=Tensor[(50, 6), bool] */, dtype="bool") /* ty=Tensor[(50, 6), bool] */;
    %424 = reshape(%423, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
    %425 = @func_386(%424) /* ty=(Tensor[(6, 10, 5), bool],) */;
    %426 = cast(meta[relay.Constant][26] /* ty=Tensor[(50, 6), bool] */, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
    %427 = log2(%426) /* ty=Tensor[(50, 6), float32] */;
    %428 = cast(%427, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
    %429 = cast(meta[relay.Constant][27] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %430 = cast(%var_2936, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
    %431 = reshape(%429, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
    %432 = reshape(%430, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
    %433 = @func_2527(%431, %432) /* ty=(Tensor[(6, 14, 15), bool],) */;
    %434 = cast(%var_2944, dtype="float64") /* ty=Tensor[(720), float64] */;
    %435 = reshape(%434, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %436 = @func_1108(%435) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
    %437 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
    %438 = %425.0;
    %439 = asin(%428) /* ty=Tensor[(50, 6), float32] */;
    %440 = %433.0;
    %441 = %436.3;
    (%437, %438, %439, %440, meta[relay.Constant][27] /* ty=Tensor[(90), float64] */, %var_2936, %441, %var_2944)
  };
  %442(%var_2955, %var_2956) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */
}

def @func_8039(%var_8013: Tensor[(1, 7, 6), float64], %var_8025: Tensor[(1260), float64]) -> (Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) {
  %443 = cast(%var_8013, dtype="float64") /* ty=Tensor[(1, 7, 6), float64] */;
  %444 = log10(%443) /* ty=Tensor[(1, 7, 6), float64] */;
  %445 = cast(%444, dtype="uint64") /* ty=Tensor[(1, 7, 6), uint64] */;
  %446 = shape_of(%var_8013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_8013, dtype="uint64") /* ty=Tensor[(1, 7, 6), uint64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %449 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %450 = cast(%var_8025, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %451 = reshape(%449, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %452 = reshape(%450, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %453 = @func_7489(%451, %452) /* ty=(Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) */;
  %454 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %455 = reshape(%454, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %456 = @func_6380(%455) /* ty=(Tensor[(96), float64], Tensor[(9, 16, 14), bool]) */;
  %457 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
  %458 = subtract(%447, %448) /* ty=Tensor[(?, 7, 6), uint64] */;
  %459 = %453.1;
  %460 = %456.1;
  %461 = %457.0;
  (%458, %459, meta[relay.Constant][28] /* ty=Tensor[(2, 224), float64] */, %var_8025, %460, meta[relay.Constant][29] /* ty=Tensor[(96), float64] */, %461)
}

def @func_6262(%var_6260: Tensor[(45, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) {
  @func_6259(%var_6260) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) */
}

def @func_4699(%var_4672: Tensor[(18, 70), float64], %var_4679: Tensor[(360), uint32]) -> (Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) {
  %462 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %464 = cast(%var_4672, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %465 = reshape(%464, newshape=[630, 2]) /* ty=Tensor[(630, 2), float64] */;
  %466 = @func_3927(%465) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) */;
  %467 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %468 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 30), uint32] */, dtype="uint32") /* ty=Tensor[(1, 30), uint32] */;
  %469 = cast(%var_4679, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %470 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %471 = reshape(%468, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), uint32] */;
  %472 = reshape(%469, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), uint32] */;
  %473 = reshape(%470, newshape=[]) /* ty=int64 */;
  %474 = @func_3388(%471, %472, %473) /* ty=(Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) */;
  %475 = cosh(%463) /* ty=Tensor[(1, 16, 14), float32] */;
  %476 = %466.7;
  %477 = %467.2;
  %478 = %474.2;
  (%475, %476, %var_4672, %477, %478, meta[relay.Constant][30] /* ty=Tensor[(1, 30), uint32] */, %var_4679, -10 /* ty=int64 */)
}

def @func_389(%var_387: Tensor[(6, 10, 5), bool]) -> (Tensor[(6, 10, 5), bool],) {
  @func_386(%var_387) /* ty=(Tensor[(6, 10, 5), bool],) */
}

def @func_7493(%var_7491: Tensor[(2, 16, 14), float64], %var_7492: Tensor[(1260), float64]) -> (Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) {
  @func_7489(%var_7491, %var_7492) /* ty=(Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) */
}

def @func_9007(%var_8974: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(1260), float64], Tensor[(360), uint32], Tensor[(630, 2), bool]) {
  %479 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %480 = reshape(%479, newshape=[]) /* ty=int64 */;
  %481 = @func_100(%480) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %482 = cast(%var_8974, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %483 = reshape(%482, newshape=[630, 2]) /* ty=Tensor[(630, 2), float64] */;
  %484 = @func_3927(%483) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) */;
  %485 = %484.7;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
  %487 = sinh(%486) /* ty=Tensor[(630, 2), float32] */;
  %488 = cast(%485, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
  %489 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %490 = reshape(%488, newshape=[18, 70]) /* ty=Tensor[(18, 70), float64] */;
  %491 = reshape(%489, newshape=[360]) /* ty=Tensor[(360), uint32] */;
  %492 = @func_4699(%490, %491) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) */;
  %493 = %492.1;
  %494 = cast(%493, dtype="bool") /* ty=Tensor[(630, 2), bool] */;
  %495 = shape_of(%487, dtype="int32") /* ty=Tensor[(2), int32] */;
  %496 = cast(%487, dtype="bool") /* ty=Tensor[(630, 2), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %498 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %499 = %481.0;
  %500 = not_equal(%496, %497) /* ty=Tensor[(630, 2), bool] */;
  (%498, %499, 6 /* ty=int64 */, %var_8974, meta[relay.Constant][31] /* ty=Tensor[(360), uint32] */, %500)
}

def @func_3958() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %501 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %502 = @func_3779() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %503 = %501.0;
  %504 = %502.0;
  (%503, %504)
}

def @func_4311(%var_4307: Tensor[(15, 10, 4), uint16], %var_4308: Tensor[(15, 10, 4), uint16], %var_4309: Tensor[(1260), float64], %var_4310: Tensor[(14), float32]) -> (Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) {
  %523 = fn (%var_4278: Tensor[(15, 10, 4), uint16], %var_4289: Tensor[(15, 10, 4), uint16], %var_4303: Tensor[(1260), float64], %var_4304: Tensor[(14), float32]) -> (Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) {
    %505 = cast(%var_4278, dtype="bool") /* ty=Tensor[(15, 10, 4), bool] */;
    %506 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %507 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="bool") /* ty=Tensor[(15, 10, 4), bool] */;
    %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %509 = cast(%var_4289, dtype="uint32") /* ty=Tensor[(15, 10, 4), uint32] */;
    %510 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %511 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 4), uint16] */, dtype="uint32") /* ty=Tensor[(15, 10, 4), uint32] */;
    %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %513 = cast(meta[relay.Constant][33] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %514 = cast(%var_4303, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %515 = cast(%var_4304, dtype="float32") /* ty=Tensor[(14), float32] */;
    %516 = reshape(%513, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %517 = reshape(%514, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %518 = reshape(%515, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
    %519 = @func_3508(%516, %517, %518) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) */;
    %520 = not_equal(%507, %508) /* ty=Tensor[(15, 10, 4), bool] */;
    %521 = right_shift(%511, %512) /* ty=Tensor[(15, 10, 4), uint32] */;
    %522 = %519.5;
    (%520, %521, %522, meta[relay.Constant][33] /* ty=Tensor[(90), float64] */, %var_4303, %var_4304)
  };
  %523(%var_4307, %var_4308, %var_4309, %var_4310) /* ty=(Tensor[(15, 10, 4), bool], Tensor[(15, 10, 4), uint32], Tensor[(768), float64], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(14), float32]) */
}

def @func_8043(%var_8041: Tensor[(1, 7, 6), float64], %var_8042: Tensor[(1260), float64]) -> (Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) {
  @func_8039(%var_8041, %var_8042) /* ty=(Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_10270() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %524 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %525 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %526 = %524.0;
  %527 = %525.0;
  (%526, %527)
}

def @func_8380() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %528 = @func_5331() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %529 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %530 = %528.0;
  %531 = %529.0;
  (%530, %531)
}

def @func_9873() -> Tensor[(1, 16, 14), float64] {
  %532 = @func_7638() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %532.1
}

def @func_5215(%var_5214: Tensor[(96), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) {
  %550 = fn (%var_5203: Tensor[(96), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) {
    %533 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
    %534 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
    %535 = %534.0;
    %536 = cast(%533, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %537 = cast(%535, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %538 = cast(%var_5203, dtype="float64") /* ty=Tensor[(96), float64] */;
    %539 = cast(meta[relay.Constant][34] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %540 = cast(meta[relay.Constant][35] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %541 = reshape(%538, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), float64] */;
    %542 = reshape(%539, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float64] */;
    %543 = reshape(%540, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
    %544 = @func_1904(%541, %542, %543) /* ty=(Tensor[(12, 8, 8), float64], Tensor[(1, 2, 7), float32], Tensor[(7, 2), float32], Tensor[(12, 8, 8), float64], Tensor[(9, 8, 10), float64], Tensor[(720, 1), float64]) */;
    %545 = cast(%533, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
    %546 = cast(%535, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
    %547 = greater_equal(%536, %537) /* ty=Tensor[(9, 16, 14), bool] */;
    %548 = %544.5;
    %549 = maximum(%545, %546) /* ty=Tensor[(9, 16, 14), int8] */;
    (%547, %548, %var_5203, meta[relay.Constant][34] /* ty=Tensor[(768), float64] */, meta[relay.Constant][35] /* ty=Tensor[(14), float32] */, %549)
  };
  %550(%var_5214) /* ty=(Tensor[(9, 16, 14), bool], Tensor[(720, 1), float64], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32], Tensor[(9, 16, 14), int8]) */
}

def @func_6891() -> Tensor[(9, 16, 14), int8] {
  @func_6889() /* ty=Tensor[(9, 16, 14), int8] */
}

def @func_7873() -> Tensor[(1, 16, 14), float64] {
  @func_2413() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_4703(%var_4701: Tensor[(18, 70), float64], %var_4702: Tensor[(360), uint32]) -> (Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) {
  @func_4699(%var_4701, %var_4702) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(630, 2), float32], Tensor[(18, 70), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 30), uint32], Tensor[(360), uint32], int64) */
}

def @func_5116() -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
  %554 = fn () -> (Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) {
    %551 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
    %552 = %551.0;
    %553 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
    (%552, %553)
  };
  %554() /* ty=(Tensor[(9, 16, 14), int8], Tensor[(1, 16, 14), float64]) */
}

def @func_8506(%var_8503: Tensor[(13, 9, 7), float32], %var_8504: Tensor[(3, 420), float64], %var_8505: Tensor[(60, 12), float64]) -> (Tensor[(13, 9, 7), float32], Tensor[(720), float64], Tensor[(3, 420), float64], Tensor[(60, 12), float64], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64]) {
  @func_8501(%var_8503, %var_8504, %var_8505) /* ty=(Tensor[(13, 9, 7), float32], Tensor[(720), float64], Tensor[(3, 420), float64], Tensor[(60, 12), float64], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64]) */
}

def @func_6149() -> (Tensor[(1, 16, 14), float64],) {
  %557 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %555 = @func_4974() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %556 = %555.0;
    (%556,)
  };
  %557() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_6181() -> Tensor[(1, 16, 14), float64] {
  %559 = fn () -> Tensor[(1, 16, 14), float64] {
    %558 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %558.4
  };
  %559() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9150() -> Tensor[(1, 16, 14), float64] {
  %560 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %560.1
}

def @func_4135() -> (Tensor[(1, 16, 14), float64],) {
  @func_4133() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_6484(%var_6482: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) {
  @func_6481(%var_6482) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), int8], Tensor[(9, 16, 14), float32], Tensor[(2, 8), float64], Tensor[(147), uint32], Tensor[(16), float64], Tensor[(448), float64]) */
}

def @func_6096(%var_6095: Tensor[(9, 16, 14), int8]) -> (Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) {
  %575 = fn (%var_6061: Tensor[(9, 16, 14), int8]) -> (Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) {
    %561 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
    %562 = %561.0;
    %563 = cast(%var_6061, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %565 = cast(%562, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %567 = equal(%565, %566) /* ty=Tensor[(9, 16, 14), bool] */;
    %568 = cast(%567, dtype="int64") /* ty=Tensor[(9, 16, 14), int64] */;
    %569 = shape_of(%var_6061, dtype="int32") /* ty=Tensor[(3), int32] */;
    %570 = cast(%var_6061, dtype="int64") /* ty=Tensor[(9, 16, 14), int64] */;
    %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %572 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %573 = logical_xor(%570, %571) /* ty=Tensor[(9, 16, 14), int64] */;
    %574 = %572.0;
    (%573, %574)
  };
  %575(%var_6095) /* ty=(Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) */
}

def @func_8723() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %576 = @func_6037() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %577 = @func_4916() /* ty=Tensor[(1, 16, 14), float64] */;
  %578 = %576.0;
  (%577, %578)
}

def @func_2159(%var_2065: Tensor[(1, 1, 16), float64], %var_2066: Tensor[(7, 4, 16), float64], %var_2080: Tensor[(96), int32]) -> (Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(7, 4, 16), int32]) {
  %579 = cast(%var_2080, dtype="int32") /* ty=Tensor[(96), int32] */;
  %580 = cast(%var_2080, dtype="int32") /* ty=Tensor[(96), int32] */;
  %581 = reshape(%579, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %582 = reshape(%580, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %583 = @func_1938(%581, %582) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %584 = cast(meta[relay.Constant][36] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %585 = reshape(%584, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
  %586 = cast(%var_2065, dtype="float64") /* ty=Tensor[(1, 1, 16), float64] */;
  %587 = cast(%var_2066, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  %588 = divide(%586, %587) /* ty=Tensor[(7, 4, 16), float64] */;
  %589 = cast(%var_2065, dtype="float32") /* ty=Tensor[(1, 1, 16), float32] */;
  %590 = cast(%588, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %591 = mod(%589, %590) /* ty=Tensor[(7, 4, 16), float32] */;
  %592 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 4, 16), float32] */, dtype="int32") /* ty=Tensor[(7, 4, 16), int32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="int32") /* ty=Tensor[(7, 4, 16), int32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %596 = %583.0;
  %597 = @func_153(%585) /* ty=Tensor[(9, 8, 10), float64] */;
  %598 = logical_xor(%594, %595) /* ty=Tensor[(7, 4, 16), int32] */;
  (%596, %var_2080, %597, meta[relay.Constant][36] /* ty=Tensor[(720), float64] */, %598)
}

def @func_9625() -> (Tensor[(1, 16, 14), float64],) {
  %599 = @func_8723() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %600 = %599.1;
  (%600,)
}

def @func_156(%var_154: Tensor[(9, 8, 10), float64]) -> Tensor[(9, 8, 10), float64] {
  @func_153(%var_154) /* ty=Tensor[(9, 8, 10), float64] */
}

def @func_103(%var_101: int64) -> (Tensor[(1, 15, 12), int64],) {
  @func_100(%var_101) /* ty=(Tensor[(1, 15, 12), int64],) */
}

def @func_7489(%var_7477: Tensor[(2, 16, 14), float64], %var_7487: Tensor[(1260), float64]) -> (Tensor[(2, 16, 14), uint32], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64]) {
  %601 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %602 = %601.0;
  %603 = cast(%602, dtype="uint32") /* ty=Tensor[(1, 16, 14), uint32] */;
  %604 = cast(%var_7477, dtype="uint32") /* ty=Tensor[(2, 16, 14), uint32] */;
  %605 = cast(%602, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %606 = cast(meta[relay.Constant][38] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %607 = cast(%var_7487, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %608 = reshape(%605, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
  %609 = reshape(%606, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %610 = reshape(%607, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %611 = @func_6948(%608, %609, %610) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
  %612 = subtract(%603, %604) /* ty=Tensor[(2, 16, 14), uint32] */;
  %613 = %611.0;
  (%612, %613, meta[relay.Constant][38] /* ty=Tensor[(2688), float64] */, %var_7487)
}

def @func_9152() -> Tensor[(1, 16, 14), float64] {
  @func_9150() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9530() -> (Tensor[(1, 16, 14), float64], int64, Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_9528() /* ty=(Tensor[(1, 16, 14), float64], int64, Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_6865() -> Tensor[(1, 16, 14), float64] {
  %615 = fn () -> Tensor[(1, 16, 14), float64] {
    %614 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %614.1
  };
  %615() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_153(%var_138: Tensor[(9, 8, 10), float64]) -> Tensor[(9, 8, 10), float64] {
  %616 = cast(%var_138, dtype="float64") /* ty=Tensor[(9, 8, 10), float64] */;
  acos(%616) /* ty=Tensor[(9, 8, 10), float64] */
}

def @func_5574(%var_5572: Tensor[(16, 10, 16), float32]) -> (Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_5571(%var_5572) /* ty=(Tensor[(16, 10, 16), float32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_6952(%var_6949: Tensor[(1, 16, 14), float64], %var_6950: Tensor[(2688), float64], %var_6951: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) {
  %635 = fn (%var_6935: Tensor[(1, 16, 14), float64], %var_6941: Tensor[(2688), float64], %var_6942: Tensor[(1260), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) {
    %617 = @func_4133() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %618 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
    %619 = cast(%var_6935, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%618, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %623 = cast(%var_6941, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %624 = cast(%var_6942, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %625 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
    %626 = cast(meta[relay.Constant][40] /* ty=Tensor[(2560), float32] */, dtype="float32") /* ty=Tensor[(2560), float32] */;
    %627 = reshape(%623, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
    %628 = reshape(%624, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %629 = reshape(%625, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
    %630 = reshape(%626, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
    %631 = @func_5788(%627, %628, %629, %630) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */;
    %632 = %617.0;
    %633 = greater_equal(%621, %622) /* ty=Tensor[(?, 16, 14), bool] */;
    %634 = %631.5;
    (%632, %633, %634, %var_6941, %var_6942, meta[relay.Constant][39] /* ty=Tensor[(1, 14), float32] */, meta[relay.Constant][40] /* ty=Tensor[(2560), float32] */)
  };
  %635(%var_6949, %var_6950, %var_6951) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */
}

def @func_8474(%var_8473: Tensor[(2688), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(7, 5, 13), float32]) {
  %649 = fn (%var_8459: Tensor[(2688), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(7, 5, 13), float32]) {
    %636 = @func_6864() /* ty=Tensor[(1, 16, 14), float64] */;
    %637 = cast(%636, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    %638 = cast(%var_8459, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %639 = cast(meta[relay.Constant][41] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %640 = reshape(%637, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float64] */;
    %641 = reshape(%638, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
    %642 = reshape(%639, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %643 = @func_6948(%640, %641, %642) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(1, 14), float32], Tensor[(2560), float32]) */;
    %644 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
    %645 = exp(%644) /* ty=Tensor[(7, 5, 13), float64] */;
    %646 = cast(%645, dtype="float32") /* ty=Tensor[(7, 5, 13), float32] */;
    %647 = %643.2;
    %648 = erf(%646) /* ty=Tensor[(7, 5, 13), float32] */;
    (%636, %647, %var_8459, meta[relay.Constant][41] /* ty=Tensor[(1260), float64] */, %648)
  };
  %649(%var_8473) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), float64], Tensor[(1260), float64], Tensor[(7, 5, 13), float32]) */
}

def @func_3393(%var_3390: Tensor[(6, 5, 1), uint32], %var_3391: Tensor[(6, 5, 12), uint32], %var_3392: int64) -> (Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) {
  @func_3388(%var_3390, %var_3391, %var_3392) /* ty=(Tensor[(6, 5, 12), bool], Tensor[(6, 5, 300), int8], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], Tensor[(6, 10, 5), bool]) */
}

def @func_7202() -> (Tensor[(1, 16, 14), float64],) {
  %650 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
  (%650,)
}

def @func_9875() -> Tensor[(1, 16, 14), float64] {
  @func_9873() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_7204() -> (Tensor[(1, 16, 14), float64],) {
  @func_7202() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_2477() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %651 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %652 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  %653 = %651.0;
  (%652, %653)
}

def @func_9071() -> (Tensor[(1, 16, 14), float64],) {
  %654 = @func_7699() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %655 = %654.0;
  (%655,)
}

def @func_3015(%var_3013: Tensor[(2, 6, 14), float32], %var_3014: Tensor[(720), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) {
  %662 = fn (%var_2994: Tensor[(2, 6, 14), float32], %var_3002: Tensor[(720), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) {
    %656 = cast(%var_2994, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
    %657 = cast(%var_3002, dtype="float64") /* ty=Tensor[(720), float64] */;
    %658 = reshape(%657, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %659 = @func_1108(%658) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
    %660 = cosh(%656) /* ty=Tensor[(2, 6, 14), float32] */;
    %661 = %659.2;
    (%660, %661, %var_3002)
  };
  %662(%var_3013, %var_3014) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) */
}

def @func_9996() -> (Tensor[(1, 16, 14), float64],) {
  @func_9994() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_3587() -> Tensor[(1, 16, 14), float64] {
  %663 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %663.0
}

def @func_8858() -> Tensor[(1, 16, 14), float64] {
  %665 = fn () -> Tensor[(1, 16, 14), float64] {
    %664 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %664.0
  };
  %665() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_9409() -> (Tensor[(6, 14, 3), uint8],) {
  @func_9407() /* ty=(Tensor[(6, 14, 3), uint8],) */
}

def @func_4975() -> (Tensor[(1, 16, 14), float64],) {
  %670 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %666 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %667 = %666.0;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    %669 = sqrt(%668) /* ty=Tensor[(1, 16, 14), float64] */;
    (%669,)
  };
  %670() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_7021() -> Tensor[(1, 16, 14), float64] {
  @func_3053() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_6758() -> (Tensor[(1, 15, 12), int64], Tensor[(?, 16, 14), uint8]) {
  %671 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %672 = reshape(%671, newshape=[]) /* ty=int64 */;
  %673 = @func_5149(%672) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) */;
  %674 = @func_3996() /* ty=Tensor[(?, 16, 14), int16] */;
  %675 = cast(-5 /* ty=int64 */, dtype="uint8") /* ty=uint8 */;
  %676 = cast(%674, dtype="uint8") /* ty=Tensor[(?, 16, 14), uint8] */;
  %677 = %673.1;
  %678 = maximum(%675, %676) /* ty=Tensor[(?, 16, 14), uint8] */;
  (%677, %678)
}

def @func_9627() -> (Tensor[(1, 16, 14), float64],) {
  @func_9625() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_7843(%var_7842: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), float64]) {
  %690 = fn (%var_7816: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), float64]) {
    %679 = cast(%var_7816, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %680 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 16, 5), float64] */, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %683 = cast(%var_7816, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
    %684 = @func_5525() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %685 = @func_7093() /* ty=(Tensor[(?, 16, 14), float64],) */;
    %686 = greater_equal(%681, %682) /* ty=Tensor[(14, 16, 5), bool] */;
    %687 = log(%683) /* ty=Tensor[(14, 16, 5), float64] */;
    %688 = %684.0;
    %689 = %685.0;
    (%686, %687, %688, %689)
  };
  %690(%var_7842) /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), float64]) */
}

def @func_7639() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %696 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
    %691 = @func_7166() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64]) */;
    %692 = @func_6148() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %693 = @func_7579() /* ty=Tensor[(1, 16, 14), float64] */;
    %694 = %691.3;
    %695 = %692.0;
    (%693, %694, %695)
  };
  %696() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_8564(%var_8560: Tensor[(1260), float64], %var_8561: Tensor[(2688), float64], %var_8562: Tensor[(90), float64], %var_8563: Tensor[(16), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 14), float32], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), int8], Tensor[(168), float32], Tensor[(90), float64], Tensor[(9, 16, 14), float32], Tensor[(16), float64]) {
  @func_8558(%var_8560, %var_8561, %var_8562, %var_8563) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 14), float32], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(2688), int8], Tensor[(168), float32], Tensor[(90), float64], Tensor[(9, 16, 14), float32], Tensor[(16), float64]) */
}

def @func_7580() -> Tensor[(1, 16, 14), float64] {
  %697 = fn () -> Tensor[(1, 16, 14), float64] {
    @func_6864() /* ty=Tensor[(1, 16, 14), float64] */
  };
  %697() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2276(%var_2274: Tensor[(8, 7, 9), float64]) -> (Tensor[(8, 7, 9), bool],) {
  @func_2273(%var_2274) /* ty=(Tensor[(8, 7, 9), bool],) */
}

def @func_9810() -> (Tensor[(1, 16, 14), float64],) {
  %698 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %699 = %698.0;
  (%699,)
}

def @func_5152(%var_5150: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) {
  @func_5149(%var_5150) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) */
}

def @func_8690() -> Tensor[(1, 16, 14), float64] {
  %700 = @func_8604() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %700.0
}

def @func_5640() -> (Tensor[(1, 16, 14), float64],) {
  @func_5638() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_1941(%var_1939: Tensor[(2, 4, 12), int32], %var_1940: Tensor[(2, 4, 12), int32]) -> (Tensor[(2, 4, 12), int32],) {
  %706 = fn (%var_1926: Tensor[(2, 4, 12), int32], %var_1927: Tensor[(2, 4, 12), int32]) -> (Tensor[(2, 4, 12), int32],) {
    %701 = cast(%var_1927, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
    %702 = shape_of(%var_1926, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(%var_1926, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %705 = right_shift(%703, %704) /* ty=Tensor[(2, 4, 12), int32] */;
    (%705,)
  };
  %706(%var_1939, %var_1940) /* ty=(Tensor[(2, 4, 12), int32],) */
}

def @func_9759() -> Tensor[(1, 16, 14), float64] {
  @func_5258() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_4753(%var_4751: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(5, 6), uint32], Tensor[(360), uint32], int64) {
  @func_4750(%var_4751) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(5, 6), uint32], Tensor[(360), uint32], int64) */
}

def @func_4133() -> (Tensor[(1, 16, 14), float64],) {
  %707 = @func_3102() /* ty=Tensor[(1, 16, 14), float64] */;
  (%707,)
}

def @func_3589() -> Tensor[(1, 16, 14), float64] {
  @func_3587() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_8501(%var_8476: Tensor[(13, 9, 7), float32], %var_8484: Tensor[(3, 420), float64], %var_8485: Tensor[(60, 12), float64]) -> (Tensor[(13, 9, 7), float32], Tensor[(720), float64], Tensor[(3, 420), float64], Tensor[(60, 12), float64], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64]) {
  %708 = cast(%var_8476, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %709 = cast(%var_8484, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %710 = cast(%var_8485, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %711 = reshape(%709, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
  %712 = reshape(%710, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %713 = @func_2954(%711, %712) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
  %714 = cast(meta[relay.Constant][44] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %715 = reshape(%714, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
  %716 = @func_386(%715) /* ty=(Tensor[(6, 10, 5), bool],) */;
  %717 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %718 = erf(%708) /* ty=Tensor[(13, 9, 7), float32] */;
  %719 = %713.7;
  %720 = %716.0;
  %721 = %717.0;
  (%718, %719, %var_8484, %var_8485, %720, meta[relay.Constant][44] /* ty=Tensor[(300), bool] */, %721)
}

def @func_6569() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
  %732 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) {
    %722 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %723 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %724 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %725 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %726 = reshape(%725, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %727 = @func_1108(%726) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
    %728 = %722.0;
    %729 = %723.0;
    %730 = %724.1;
    %731 = %727.3;
    (%728, %729, %730, %731, meta[relay.Constant][45] /* ty=Tensor[(720), float64] */)
  };
  %732() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */
}

def @func_9358() -> Tensor[(1, 16, 14), float64] {
  @func_9356() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_4917() -> Tensor[(1, 16, 14), float64] {
  %733 = fn () -> Tensor[(1, 16, 14), float64] {
    @func_3102() /* ty=Tensor[(1, 16, 14), float64] */
  };
  %733() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_10077() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16], Tensor[(1, 16, 14), float64]) {
  @func_10075() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16], Tensor[(1, 16, 14), float64]) */
}

def @func_6000(%var_5999: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) {
  %744 = fn (%var_5996: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) {
    %734 = @func_3176() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %735 = cast(meta[relay.Constant][46] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %736 = cast(%var_5996, dtype="float64") /* ty=Tensor[(720), float64] */;
    %737 = reshape(%735, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
    %738 = reshape(%736, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %739 = @func_2954(%737, %738) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
    %740 = %734.0;
    %741 = @func_4916() /* ty=Tensor[(1, 16, 14), float64] */;
    %742 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
    %743 = %739.0;
    (%740, %741, %742, %743, meta[relay.Constant][46] /* ty=Tensor[(1260), float64] */, %var_5996)
  };
  %744(%var_5999) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(720), float64]) */
}

def @func_2803() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_2429() -> (Tensor[(1, 16, 14), float64],) {
  %745 = @func_2413() /* ty=Tensor[(1, 16, 14), float64] */;
  (%745,)
}

def @func_100(%var_89: int64) -> (Tensor[(1, 15, 12), int64],) {
  %746 = cast(%var_89, dtype="int64") /* ty=int64 */;
  %747 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 15, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 15, 12), int64] */;
  %748 = bitwise_or(%746, %747) /* ty=Tensor[(1, 15, 12), int64] */;
  (%748,)
}

def @func_9356() -> Tensor[(1, 16, 14), float64] {
  %749 = @func_6148() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %749.0
}

def @func_3054() -> Tensor[(1, 16, 14), float64] {
  %752 = fn () -> Tensor[(1, 16, 14), float64] {
    %750 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
    %751 = cast(%750, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
    erf(%751) /* ty=Tensor[(1, 16, 14), float64] */
  };
  %752() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_5953(%var_5950: Tensor[(720), float64], %var_5951: Tensor[(90, 14), float64], %var_5952: Tensor[(2560), float32]) -> (Tensor[(?, 16, 14), float32], Tensor[(96), float64], Tensor[(14), float32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(15, 10, 4), uint32], Tensor[(2688), float64], Tensor[(90, 14), float64], Tensor[(2560), float32]) {
  %778 = fn (%var_5915: Tensor[(720), float64], %var_5921: Tensor[(90, 14), float64], %var_5922: Tensor[(2560), float32]) -> (Tensor[(?, 16, 14), float32], Tensor[(96), float64], Tensor[(14), float32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(15, 10, 4), uint32], Tensor[(2688), float64], Tensor[(90, 14), float64], Tensor[(2560), float32]) {
    %753 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %754 = %753.0;
    %755 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
    %756 = cast(%755, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
    %757 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%754, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %760 = cast(meta[relay.Constant][48] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %761 = reshape(%760, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %762 = @func_3133(%761) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 2, 7), float32], Tensor[(96), float64], Tensor[(768), float64], Tensor[(14), float32]) */;
    %763 = cast(%var_5915, dtype="float64") /* ty=Tensor[(720), float64] */;
    %764 = reshape(%763, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
    %765 = cast(meta[relay.Constant][49] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %766 = cast(%var_5921, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
    %767 = cast(meta[relay.Constant][48] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %768 = cast(%var_5922, dtype="float32") /* ty=Tensor[(2560), float32] */;
    %769 = reshape(%765, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
    %770 = reshape(%766, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %771 = reshape(%767, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
    %772 = reshape(%768, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
    %773 = @func_5788(%769, %770, %771, %772) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(15, 10, 4), uint32], Tensor[(60, 10), uint16], Tensor[(1260), float64], Tensor[(14, 1), float32], Tensor[(1, 16, 14), float64], Tensor[(2560), float32]) */;
    %774 = power(%758, %759) /* ty=Tensor[(?, 16, 14), float32] */;
    %775 = %762.2;
    %776 = @func_153(%764) /* ty=Tensor[(9, 8, 10), float64] */;
    %777 = %773.1;
    (%774, %775, meta[relay.Constant][48] /* ty=Tensor[(14), float32] */, %776, %var_5915, %777, meta[relay.Constant][49] /* ty=Tensor[(2688), float64] */, %var_5921, %var_5922)
  };
  %778(%var_5950, %var_5951, %var_5952) /* ty=(Tensor[(?, 16, 14), float32], Tensor[(96), float64], Tensor[(14), float32], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(15, 10, 4), uint32], Tensor[(2688), float64], Tensor[(90, 14), float64], Tensor[(2560), float32]) */
}

def @func_4435(%var_4433: float32, %var_4434: Tensor[(14, 7, 4), float32]) -> (Tensor[(14, 7, 4), bool], Tensor[(1, 16, 14), float64], Tensor[(720), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(14, 7, 4), float64], Tensor[(14, 7, 4), int64]) {
  %804 = fn (%var_4370: float32, %var_4371: Tensor[(14, 7, 4), float32]) -> (Tensor[(14, 7, 4), bool], Tensor[(1, 16, 14), float64], Tensor[(720), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(14, 7, 4), float64], Tensor[(14, 7, 4), int64]) {
    %779 = cast(%var_4370, dtype="bool") /* ty=bool */;
    %780 = cast(%var_4371, dtype="bool") /* ty=Tensor[(14, 7, 4), bool] */;
    %781 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %782 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %783 = reshape(%782, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %784 = @func_1108(%783) /* ty=(Tensor[(16, 8, 16), uint64], Tensor[(9, 8, 10), float64], Tensor[(720), float64], Tensor[(16, 1, 16), float32]) */;
    %785 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %786 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %787 = cast(%var_4370, dtype="float64") /* ty=float64 */;
    %788 = cast(%var_4371, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
    %789 = cast(%var_4371, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
    %790 = tan(%789) /* ty=Tensor[(14, 7, 4), float32] */;
    %791 = cast(%790, dtype="float32") /* ty=Tensor[(14, 7, 4), float32] */;
    %792 = erf(%791) /* ty=Tensor[(14, 7, 4), float32] */;
    %793 = cast(%790, dtype="int64") /* ty=Tensor[(14, 7, 4), int64] */;
    %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(%792, dtype="int64") /* ty=Tensor[(14, 7, 4), int64] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %797 = not_equal(%779, %780) /* ty=Tensor[(14, 7, 4), bool] */;
    %798 = %781.1;
    %799 = %784.2;
    %800 = %785.0;
    %801 = %786.0;
    %802 = floor_mod(%787, %788) /* ty=Tensor[(14, 7, 4), float64] */;
    %803 = bitwise_xor(%795, %796) /* ty=Tensor[(14, 7, 4), int64] */;
    (%797, %798, %799, meta[relay.Constant][50] /* ty=Tensor[(720), float64] */, %800, %801, %802, %803)
  };
  %804(%var_4433, %var_4434) /* ty=(Tensor[(14, 7, 4), bool], Tensor[(1, 16, 14), float64], Tensor[(720), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(14, 7, 4), float64], Tensor[(14, 7, 4), int64]) */
}

def @func_3104() -> Tensor[(1, 16, 14), float64] {
  @func_3102() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_2530(%var_2528: Tensor[(6, 1, 15), float64], %var_2529: Tensor[(6, 14, 15), float64]) -> (Tensor[(6, 14, 15), bool],) {
  %808 = fn (%var_2515: Tensor[(6, 1, 15), float64], %var_2516: Tensor[(6, 14, 15), float64]) -> (Tensor[(6, 14, 15), bool],) {
    %805 = cast(%var_2515, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %806 = cast(%var_2516, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
    %807 = less(%805, %806) /* ty=Tensor[(6, 14, 15), bool] */;
    (%807,)
  };
  %808(%var_2528, %var_2529) /* ty=(Tensor[(6, 14, 15), bool],) */
}

def @func_3102() -> Tensor[(1, 16, 14), float64] {
  @func_3053() /* ty=Tensor[(1, 16, 14), float64] */
}

def @func_3929(%var_3928: Tensor[(630, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) {
  %832 = fn (%var_3914: Tensor[(630, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) {
    %809 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %810 = cast(meta[relay.Constant][52] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
    %811 = cast(meta[relay.Constant][53] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %812 = reshape(%809, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %813 = reshape(%810, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %814 = reshape(%811, newshape=[7, 2]) /* ty=Tensor[(7, 2), float32] */;
    %815 = @func_3508(%812, %813, %814) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260), float64], Tensor[(1, 16, 14), float64], Tensor[(768), float64], Tensor[(7, 2), float32]) */;
    %816 = cast(meta[relay.Constant][54] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %817 = reshape(%816, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), bool] */;
    %818 = @func_386(%817) /* ty=(Tensor[(6, 10, 5), bool],) */;
    %819 = cast(meta[relay.Constant][52] /* ty=Tensor[(630, 2), float64] */, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
    %820 = cast(%var_3914, dtype="uint32") /* ty=Tensor[(630, 2), uint32] */;
    %821 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(630, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %822 = cast(meta[relay.Constant][52] /* ty=Tensor[(630, 2), float64] */, dtype="uint32") /* ty=Tensor[(630, 2), uint32] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %824 = @func_3779() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %825 = @func_3053() /* ty=Tensor[(1, 16, 14), float64] */;
    %826 = %815.3;
    %827 = %818.0;
    %828 = @func_3284() /* ty=Tensor[(1, 16, 14), float64] */;
    %829 = tan(%819) /* ty=Tensor[(630, 2), float32] */;
    %830 = maximum(%822, %823) /* ty=Tensor[(630, 2), uint32] */;
    %831 = %824.0;
    (%825, %826, meta[relay.Constant][51] /* ty=Tensor[(90), float64] */, meta[relay.Constant][53] /* ty=Tensor[(14), float32] */, %827, meta[relay.Constant][54] /* ty=Tensor[(300), bool] */, %828, %829, %830, %831)
  };
  %832(%var_3928) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1260), float64], Tensor[(90), float64], Tensor[(14), float32], Tensor[(6, 10, 5), bool], Tensor[(300), bool], Tensor[(1, 16, 14), float64], Tensor[(630, 2), float32], Tensor[(630, 2), uint32], Tensor[(1, 16, 14), float64]) */
}

def @func_9130(%var_9128: Tensor[(11, 11, 2), float64], %var_9129: Tensor[(11, 11, 2), float64]) -> (Tensor[(11, 11, 2), float64],) {
  %840 = fn (%var_9115: Tensor[(11, 11, 2), float64], %var_9116: Tensor[(11, 11, 2), float64]) -> (Tensor[(11, 11, 2), float64],) {
    %833 = cast(%var_9116, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
    %834 = shape_of(%var_9115, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(%var_9115, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %837 = divide(%835, %836) /* ty=Tensor[(11, 11, 2), float64] */;
    %838 = cast(%837, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
    %839 = asinh(%838) /* ty=Tensor[(11, 11, 2), float64] */;
    (%839,)
  };
  %840(%var_9128, %var_9129) /* ty=(Tensor[(11, 11, 2), float64],) */
}

def @func_5149(%var_5141: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) {
  %841 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %842 = cast(%var_5141, dtype="int64") /* ty=int64 */;
  %843 = reshape(%842, newshape=[]) /* ty=int64 */;
  %844 = @func_100(%843) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %845 = %841.0;
  %846 = %844.0;
  (%845, %846, %var_5141)
}

def @func_6039() -> (Tensor[(1, 16, 14), float64],) {
  @func_6037() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_5331() -> (Tensor[(9, 16, 14), int8],) {
  %847 = @func_4529() /* ty=(Tensor[(9, 16, 14), int8],) */;
  %848 = %847.0;
  (%848,)
}

def @func_9241() -> (Tensor[(1, 16, 14), float64],) {
  %851 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %849 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %850 = %849.1;
    (%850,)
  };
  %851() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_6259(%var_6254: Tensor[(45, 2), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 6, 14), float32], Tensor[(168), float32], Tensor[(720), float64], Tensor[(6, 14, 15), bool], Tensor[(45, 2), float64], Tensor[(1260), float64]) {
  %852 = cast(meta[relay.Constant][55] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %853 = cast(meta[relay.Constant][56] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %854 = reshape(%852, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %855 = reshape(%853, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %856 = @func_3012(%854, %855) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %857 = cast(%var_6254, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %858 = cast(meta[relay.Constant][57] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %859 = reshape(%857, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %860 = reshape(%858, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
  %861 = @func_2527(%859, %860) /* ty=(Tensor[(6, 14, 15), bool],) */;
  %862 = @func_6180() /* ty=Tensor[(1, 16, 14), float64] */;
  %863 = %856.0;
  %864 = %861.0;
  (%862, %863, meta[relay.Constant][55] /* ty=Tensor[(168), float32] */, meta[relay.Constant][56] /* ty=Tensor[(720), float64] */, %864, %var_6254, meta[relay.Constant][57] /* ty=Tensor[(1260), float64] */)
}

def @func_9407() -> (Tensor[(6, 14, 3), uint8],) {
  %865 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 14, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 3), float32] */;
  %866 = sinh(%865) /* ty=Tensor[(6, 14, 3), float32] */;
  %867 = cast(%866, dtype="uint8") /* ty=Tensor[(6, 14, 3), uint8] */;
  %868 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(6, 14, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 14, 3), float32] */, dtype="uint8") /* ty=Tensor[(6, 14, 3), uint8] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %871 = right_shift(%869, %870) /* ty=Tensor[(6, 14, 3), uint8] */;
  (%871,)
}

def @func_7398() -> Tensor[(1, 16, 14), float64] {
  %872 = @func_3203() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %872.1
}

def @func_10171() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  @func_10169() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */
}

def @func_9959(%var_9958: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), int8],) {
  %878 = fn (%var_9940: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), int8],) {
    %873 = @func_9071() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %874 = %873.0;
    %875 = cast(%874, dtype="int8") /* ty=Tensor[(1, 16, 14), int8] */;
    %876 = cast(%var_9940, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
    %877 = logical_xor(%875, %876) /* ty=Tensor[(12, 16, 14), int8] */;
    (%877,)
  };
  %878(%var_9958) /* ty=(Tensor[(12, 16, 14), int8],) */
}

def @func_2801() -> (Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) {
  %879 = @func_2429() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %880 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %881 = reshape(%880, newshape=[]) /* ty=int64 */;
  %882 = @func_100(%881) /* ty=(Tensor[(1, 15, 12), int64],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(1, 15, 12), float32] */;
  %885 = cast(3 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %886 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %887 = %886.0;
  %888 = cast(%887, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %889 = acosh(%888) /* ty=Tensor[(1, 16, 14), float32] */;
  %890 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %891 = %890.0;
  %892 = cast(%891, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %893 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%889, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %896 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %897 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %898 = %879.0;
  %899 = floor_mod(%884, %885) /* ty=Tensor[(1, 15, 12), float32] */;
  %900 = less(%894, %895) /* ty=Tensor[(?, 16, 14), bool] */;
  %901 = %896.1;
  %902 = %897.0;
  (%898, %899, %900, %901, %902)
}

def @func_8109() -> (Tensor[(1, 16, 14), float64],) {
  @func_8107() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_3730(%var_3728: Tensor[(720), float64]) -> (Tensor[(?, 16, 14), uint16], Tensor[(3, 420), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float64]) {
  @func_3727(%var_3728) /* ty=(Tensor[(?, 16, 14), uint16], Tensor[(3, 420), float64], Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64, Tensor[(720), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float64]) */
}

def @func_7893() -> (Tensor[(15, 9, 2), float32],) {
  %905 = fn () -> (Tensor[(15, 9, 2), float32],) {
    %903 = cast(meta[relay.Constant][59] /* ty=Tensor[(15, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
    %904 = atan(%903) /* ty=Tensor[(15, 9, 2), float32] */;
    (%904,)
  };
  %905() /* ty=(Tensor[(15, 9, 2), float32],) */
}

def @func_4105(%var_4104: Tensor[(90), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(630, 2), float64]) {
  %914 = fn (%var_4097: Tensor[(90), float64]) -> (Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(630, 2), float64]) {
    %906 = @func_3233() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %907 = cast(%var_4097, dtype="float64") /* ty=Tensor[(90), float64] */;
    %908 = cast(meta[relay.Constant][60] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
    %909 = reshape(%907, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
    %910 = reshape(%908, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), float64] */;
    %911 = @func_2527(%909, %910) /* ty=(Tensor[(6, 14, 15), bool],) */;
    %912 = %906.1;
    %913 = %911.0;
    (%912, %913, %var_4097, meta[relay.Constant][60] /* ty=Tensor[(630, 2), float64] */)
  };
  %914(%var_4104) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(630, 2), float64]) */
}

def @func_2359() -> (Tensor[(1, 16, 14), float64],) {
  %915 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 16, 14), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %916 = sinh(%915) /* ty=Tensor[(1, 16, 14), float64] */;
  (%916,)
}

def @func_5479(%var_5478: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], int64) {
  %923 = fn (%var_5470: int64) -> (Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], int64) {
    %917 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %918 = cast(%var_5470, dtype="int64") /* ty=int64 */;
    %919 = reshape(%918, newshape=[]) /* ty=int64 */;
    %920 = @func_5149(%919) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), int64], int64) */;
    %921 = %917.1;
    %922 = %920.0;
    (%921, %922, %var_5470)
  };
  %923(%var_5478) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], int64) */
}

def @func_6608(%var_6607: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(1260), float64], Tensor[(720), float64]) {
  %934 = fn (%var_6588: Tensor[(720), float64]) -> (Tensor[(1, 16, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(1260), float64], Tensor[(720), float64]) {
    %924 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %925 = %924.0;
    %926 = cast(%925, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
    %927 = cast(meta[relay.Constant][62] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %928 = cast(%var_6588, dtype="float64") /* ty=Tensor[(720), float64] */;
    %929 = reshape(%927, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float64] */;
    %930 = reshape(%928, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %931 = @func_2954(%929, %930) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(6, 10, 5), bool], Tensor[(50, 6), float32], Tensor[(6, 14, 15), bool], Tensor[(90), float64], Tensor[(1260, 1), float64], Tensor[(16, 1, 16), float32], Tensor[(720), float64]) */;
    %932 = acos(%926) /* ty=Tensor[(1, 16, 14), float32] */;
    %933 = %931.6;
    (%932, %933, meta[relay.Constant][62] /* ty=Tensor[(1260), float64] */, %var_6588)
  };
  %934(%var_6607) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(1260), float64], Tensor[(720), float64]) */
}

def @func_4963() -> (Tensor[(1, 16, 14), float64],) {
  %937 = fn () -> (Tensor[(1, 16, 14), float64],) {
    %935 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
    %936 = %935.3;
    (%936,)
  };
  %937() /* ty=(Tensor[(1, 16, 14), float64],) */
}

def @func_5300(%var_5298: Tensor[(10, 2, 1), float64], %var_5299: Tensor[(1, 720), float64]) -> (Tensor[(10, 2, ?), int32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(9, 8, 10), float64], Tensor[(1, 720), float64]) {
  %952 = fn (%var_5275: Tensor[(10, 2, 1), float64], %var_5293: Tensor[(1, 720), float64]) -> (Tensor[(10, 2, ?), int32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(9, 8, 10), float64], Tensor[(1, 720), float64]) {
    %938 = cast(3.613f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %939 = cast(%var_5275, dtype="bool") /* ty=Tensor[(10, 2, 1), bool] */;
    %940 = less(%938, %939) /* ty=Tensor[(10, 2, 1), bool] */;
    %941 = cast(%var_5275, dtype="int32") /* ty=Tensor[(10, 2, 1), int32] */;
    %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
    %943 = cast(%940, dtype="int32") /* ty=Tensor[(10, 2, 1), int32] */;
    %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %945 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %946 = cast(%var_5293, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
    %947 = reshape(%946, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), float64] */;
    %948 = left_shift(%943, %944) /* ty=Tensor[(10, 2, ?), int32] */;
    %949 = @func_2974() /* ty=Tensor[(1, 16, 14), float64] */;
    %950 = %945.0;
    %951 = @func_153(%947) /* ty=Tensor[(9, 8, 10), float64] */;
    (%948, %949, %950, %951, %var_5293)
  };
  %952(%var_5298, %var_5299) /* ty=(Tensor[(10, 2, ?), int32], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64], Tensor[(9, 8, 10), float64], Tensor[(1, 720), float64]) */
}

def @func_8107() -> (Tensor[(1, 16, 14), float64],) {
  %953 = @func_4346() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %954 = %953.1;
  (%954,)
}

def @func_6329(%var_6327: Tensor[(2, 15, 4), uint64], %var_6328: Tensor[(2, 15, 4), uint64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 15, 4), float64]) {
  %972 = fn (%var_6294: Tensor[(2, 15, 4), uint64], %var_6295: Tensor[(2, 15, 4), uint64]) -> (Tensor[(1, 16, 14), float64], Tensor[(2, 15, 4), float64]) {
    %955 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %956 = cast(%var_6295, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
    %957 = shape_of(%var_6294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %958 = cast(%var_6294, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %960 = less(%958, %959) /* ty=Tensor[(2, 15, 4), bool] */;
    %961 = cast(%960, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
    %962 = shape_of(%var_6295, dtype="int32") /* ty=Tensor[(3), int32] */;
    %963 = cast(%var_6295, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
    %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %965 = floor_mod(%963, %964) /* ty=Tensor[(2, 15, 4), float32] */;
    %966 = cast(%960, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
    %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
    %968 = cast(%965, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %970 = %955.0;
    %971 = floor_divide(%968, %969) /* ty=Tensor[(2, 15, 4), float64] */;
    (%970, %971)
  };
  %972(%var_6327, %var_6328) /* ty=(Tensor[(1, 16, 14), float64], Tensor[(2, 15, 4), float64]) */
}

def @func_9994() -> (Tensor[(1, 16, 14), float64],) {
  %973 = @func_2477() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %974 = %973.1;
  (%974,)
}

def @func_10116() -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), bool], Tensor[(42), float64], Tensor[(18, 70), float64], Tensor[(1, 16, 14), float32], Tensor[(1, 16, 14), float64]) {
  %991 = fn () -> (Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), bool], Tensor[(42), float64], Tensor[(18, 70), float64], Tensor[(1, 16, 14), float32], Tensor[(1, 16, 14), float64]) {
    %975 = @func_3109() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %976 = cast(meta[relay.Constant][63] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %977 = cast(meta[relay.Constant][64] /* ty=Tensor[(18, 70), float64] */, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
    %978 = reshape(%976, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float64] */;
    %979 = reshape(%977, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %980 = @func_8039(%978, %979) /* ty=(Tensor[(?, 7, 6), uint64], Tensor[(1, 16, 14), float64], Tensor[(2, 224), float64], Tensor[(1260), float64], Tensor[(9, 16, 14), bool], Tensor[(96), float64], Tensor[(1, 16, 14), float64]) */;
    %981 = @func_9240() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %982 = %981.0;
    %983 = cast(%982, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
    %984 = %980.4;
    %985 = cast(%984, dtype="int8") /* ty=Tensor[(9, 16, 14), int8] */;
    %986 = reshape(%985, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), int8] */;
    %987 = @func_6094(%986) /* ty=(Tensor[(9, 16, 14), int64], Tensor[(1, 16, 14), float64]) */;
    %988 = %975.0;
    %989 = cos(%983) /* ty=Tensor[(1, 16, 14), float32] */;
    %990 = %987.1;
    (%988, %984, meta[relay.Constant][63] /* ty=Tensor[(42), float64] */, meta[relay.Constant][64] /* ty=Tensor[(18, 70), float64] */, %989, %990)
  };
  %991() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(9, 16, 14), bool], Tensor[(42), float64], Tensor[(18, 70), float64], Tensor[(1, 16, 14), float32], Tensor[(1, 16, 14), float64]) */
}

def @func_6689(%var_6669: Tensor[(14, 12, 7), uint16], %var_6670: Tensor[(14, 12, 7), uint16]) -> Tensor[(14, 12, 7), int16] {
  %992 = cast(%var_6670, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %993 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%var_6669, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %996 = not_equal(%994, %995) /* ty=Tensor[(14, 12, 7), bool] */;
  %997 = cast(%996, dtype="int16") /* ty=Tensor[(14, 12, 7), int16] */;
  %998 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_6669, dtype="int16") /* ty=Tensor[(14, 12, 7), int16] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%999, %1000) /* ty=Tensor[(14, 12, 7), int16] */
}

def @func_4200() -> (Tensor[(1, 16, 14), float64], Tensor[(?, 16, 14), uint16]) {
  %1001 = @func_2801() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 15, 12), float32], Tensor[(?, 16, 14), bool], Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %1002 = @func_3587() /* ty=Tensor[(1, 16, 14), float64] */;
  %1003 = @func_3958() /* ty=(Tensor[(1, 16, 14), float64], Tensor[(1, 16, 14), float64]) */;
  %1004 = %1003.0;
  %1005 = cast(%1004, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %1006 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1002, dtype="uint16") /* ty=Tensor[(1, 16, 14), uint16] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1009 = %1001.4;
  %1010 = bitwise_or(%1007, %1008) /* ty=Tensor[(?, 16, 14), uint16] */;
  (%1009, %1010)
}

def @func_7785(%var_7784: Tensor[(96, 1), int32]) -> (Tensor[(12, 12, 13), float64], Tensor[(2, 4, 12), int32], Tensor[(96, 1), int32], Tensor[(1, 16, 14), float64]) {
  %1021 = fn (%var_7759: Tensor[(96, 1), int32]) -> (Tensor[(12, 12, 13), float64], Tensor[(2, 4, 12), int32], Tensor[(96, 1), int32], Tensor[(1, 16, 14), float64]) {
    %1011 = cast(meta[relay.Constant][65] /* ty=Tensor[(12, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
    %1012 = cast(%var_7759, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
    %1013 = cast(%var_7759, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
    %1014 = reshape(%1012, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
    %1015 = reshape(%1013, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
    %1016 = @func_1938(%1014, %1015) /* ty=(Tensor[(2, 4, 12), int32],) */;
    %1017 = @func_4962() /* ty=(Tensor[(1, 16, 14), float64],) */;
    %1018 = acosh(%1011) /* ty=Tensor[(12, 12, 13), float64] */;
    %1019 = %1016.0;
    %1020 = %1017.0;
    (%1018, %1019, %var_7759, %1020)
  };
  %1021(%var_7784) /* ty=(Tensor[(12, 12, 13), float64], Tensor[(2, 4, 12), int32], Tensor[(96, 1), int32], Tensor[(1, 16, 14), float64]) */
}

def @func_886(%var_881: Tensor[(1, 2, 7), float32]) -> Tensor[(1, 2, 7), float32] {
  %1022 = cast(%var_881, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  tan(%1022) /* ty=Tensor[(1, 2, 7), float32] */
}

def @func_2635(%var_2597: Tensor[(14, 1), float32]) -> (Tensor[(1, 2, 7), float32], Tensor[(14, 1), float32], Tensor[(2, 4, 12), int32], Tensor[(96), int32], Tensor[(?, 16, 14), float32], Tensor[(?, 16, 14), int16], Tensor[(1, 2, 7), float32]) {
  %1023 = cast(%var_2597, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %1024 = reshape(%1023, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %1025 = cast(meta[relay.Constant][66] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %1026 = cast(meta[relay.Constant][66] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %1027 = reshape(%1025, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %1028 = reshape(%1026, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), int32] */;
  %1029 = @func_1938(%1027, %1028) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %1030 = @func_2359() /* ty=(Tensor[(1, 16, 14), float64],) */;
  %1031 = %1030.0;
  %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %1033 = rsqrt(%1032) /* ty=Tensor[(1, 16, 14), float32] */;
  %1034 = cast(%1031, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %1035 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%1033, dtype="bool") /* ty=Tensor[(1, 16, 14), bool] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1038 = less_equal(%1036, %1037) /* ty=Tensor[(?, 16, 14), bool] */;
  %1039 = cast(%1038, dtype="float32") /* ty=Tensor[(?, 16, 14), float32] */;
  %1040 = cast(%1033, dtype="float64") /* ty=Tensor[(1, 16, 14), float64] */;
  %1041 = log10(%1040) /* ty=Tensor[(1, 16, 14), float64] */;
  %1042 = cast(%1038, dtype="int16") /* ty=Tensor[(?, 16, 14), int16] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1041, dtype="int16") /* ty=Tensor[(1, 16, 14), int16] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1046 = @func_886(%1024) /* ty=Tensor[(1, 2, 7), float32] */;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %1048 = reshape(%1047, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %1049 = %1029.0;
  %1050 = asinh(%1039) /* ty=Tensor[(?, 16, 14), float32] */;
  %1051 = minimum(%1044, %1045) /* ty=Tensor[(?, 16, 14), int16] */;
  %1052 = @func_886(%1048) /* ty=Tensor[(1, 2, 7), float32] */;
  (%1046, %var_2597, %1049, meta[relay.Constant][66] /* ty=Tensor[(96), int32] */, %1050, %1051, %1052)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen660/build/output.py:2949: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen660/build/output.py", line 2954, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(44) tvmgen_default_fused_erf_cast_cast_reshape_mod_kernel0(float* __restrict__ T_mod, double* __restrict__ placeholder) {
  T_mod[(((int)threadIdx.x))] = fmodf(((float)erf(placeholder[(((int)threadIdx.x))])), ((float)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_176(%var_154: Tensor[(2, 1, 14), int32], %var_155: Tensor[(2, 1, 14), int32], %var_165: Tensor[(2, 9, 14), int32]) -> (Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) {
  %0 = cast(%var_155, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
  %1 = shape_of(%var_154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_154, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_155, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
  %5 = cast(%var_165, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
  %6 = cast(%var_155, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
  %7 = less_equal(%2, %3) /* ty=Tensor[(2, ?, 14), bool] */;
  %8 = greater(%4, %5) /* ty=Tensor[(2, 9, 14), bool] */;
  %9 = sin(%6) /* ty=Tensor[(2, 1, 14), float32] */;
  (%7, %8, %9)
}

def @func_6042() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) {
  %10 = @func_4745() /* ty=Tensor[(16, 8, 14), float32] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %12 = reshape(%11, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
  %13 = @func_2337(%12) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %15 = reshape(%14, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %16 = @func_2128(%15) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
  %17 = %13.0;
  %18 = %16.1;
  (%10, %17, %18, meta[relay.Constant][0] /* ty=Tensor[(252), int32] */)
}

def @func_2184(%var_2162: Tensor[(16, 5, 2), uint32], %var_2163: Tensor[(16, 5, 2), uint32]) -> (Tensor[(16, 5, 2), int16],) {
  %19 = cast(%var_2163, dtype="uint32") /* ty=Tensor[(16, 5, 2), uint32] */;
  %20 = shape_of(%var_2162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_2162, dtype="uint32") /* ty=Tensor[(16, 5, 2), uint32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %23 = minimum(%21, %22) /* ty=Tensor[(16, 5, 2), uint32] */;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 5, 2), uint32] */, dtype="int16") /* ty=Tensor[(16, 5, 2), int16] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%23, dtype="int16") /* ty=Tensor[(16, 5, 2), int16] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %28 = logical_xor(%26, %27) /* ty=Tensor[(16, 5, 2), int16] */;
  (%28,)
}

def @func_4241() -> (Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) {
  %29 = @func_3413() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %30 = %29.0;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 8, 14), float32] */, dtype="uint8") /* ty=Tensor[(16, 8, 14), uint8] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="uint8") /* ty=Tensor[(16, 8, 14), uint8] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %35 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 2), uint32] */, dtype="uint32") /* ty=Tensor[(13, 2), uint32] */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 208), uint32] */, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %39 = reshape(%36, newshape=[2, 1, 13]) /* ty=Tensor[(2, 1, 13), uint32] */;
  %40 = reshape(%37, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), uint32] */;
  %41 = reshape(%38, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %42 = @func_4055(%39, %40, %41) /* ty=(Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) */;
  %43 = add(%33, %34) /* ty=Tensor[(16, 8, 14), uint8] */;
  %44 = %35.0;
  %45 = %42.1;
  (%43, %44, %45, meta[relay.Constant][3] /* ty=Tensor[(13, 2), uint32] */, meta[relay.Constant][4] /* ty=Tensor[(2, 208), uint32] */, meta[relay.Constant][5] /* ty=Tensor[(3, 2), float64] */)
}

def @func_4055(%var_4016: Tensor[(2, 1, 13), uint32], %var_4017: Tensor[(2, 16, 13), uint32], %var_4048: Tensor[(6), float64]) -> (Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) {
  %46 = cast(%var_4016, dtype="uint32") /* ty=Tensor[(2, 1, 13), uint32] */;
  %47 = cast(%var_4017, dtype="uint32") /* ty=Tensor[(2, 16, 13), uint32] */;
  %48 = logical_xor(%46, %47) /* ty=Tensor[(2, 16, 13), uint32] */;
  %49 = cast(%var_4016, dtype="bool") /* ty=Tensor[(2, 1, 13), bool] */;
  %50 = cast(%48, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %51 = cast(%var_4048, dtype="float64") /* ty=Tensor[(6), float64] */;
  %52 = reshape(%51, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
  %53 = @func_3828(%52) /* ty=(Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) */;
  %54 = greater_equal(%49, %50) /* ty=Tensor[(2, 16, 13), bool] */;
  %55 = %53.2;
  (%54, %55, %var_4048)
}

def @func_1397(%var_1393: Tensor[(12, 2, 2), float64]) -> Tensor[(12, 2, 2), float64] {
  %56 = cast(%var_1393, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %57 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(12, 2, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  minimum(%58, %59) /* ty=Tensor[(12, 2, 2), float64] */
}

def @func_2642(%var_2623: Tensor[(28), int32], %var_2624: Tensor[(420), float64], %var_2632: Tensor[(39, 1), float32]) -> (Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) {
  %60 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
  %61 = sigmoid(%60) /* ty=Tensor[(8, 3, 13), float32] */;
  %62 = cast(%61, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
  %63 = sinh(%62) /* ty=Tensor[(8, 3, 13), float32] */;
  %64 = cast(%61, dtype="int8") /* ty=Tensor[(8, 3, 13), int8] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="int8") /* ty=Tensor[(8, 3, 13), int8] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %68 = cast(meta[relay.Constant][8] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %69 = cast(meta[relay.Constant][8] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %70 = cast(%var_2623, dtype="int32") /* ty=Tensor[(28), int32] */;
  %71 = cast(%var_2624, dtype="float64") /* ty=Tensor[(420), float64] */;
  %72 = reshape(%68, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %73 = reshape(%69, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %74 = reshape(%70, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %75 = reshape(%71, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %76 = @func_1375(%72, %73, %74, %75) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %77 = cast(%var_2632, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
  %78 = cast(%var_2623, dtype="int32") /* ty=Tensor[(28), int32] */;
  %79 = cast(meta[relay.Constant][9] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %80 = reshape(%77, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %81 = reshape(%78, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %82 = reshape(%79, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %83 = @func_547(%80, %81, %82) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %84 = right_shift(%66, %67) /* ty=Tensor[(8, 3, 13), int8] */;
  %85 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  %86 = %76.0;
  %87 = %83.0;
  (%84, %85, %86, meta[relay.Constant][8] /* ty=Tensor[(1365), float64] */, %var_2623, %var_2624, %87, %var_2632, meta[relay.Constant][9] /* ty=Tensor[(252), int32] */)
}

def @func_3413() -> (Tensor[(16, 8, 14), float32],) {
  %88 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %89 = %88.0;
  (%89,)
}

def @func_6639(%var_6598: Tensor[(1050), float32], %var_6600: Tensor[(26), uint32], %var_6601: Tensor[(416), uint32], %var_6605: Tensor[(1024), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(14, 2), int32], Tensor[(10, 66), float64], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %90 = @func_5626() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %91 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %92 = cast(%var_6598, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %93 = cast(meta[relay.Constant][11] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %94 = cast(%var_6600, dtype="uint32") /* ty=Tensor[(26), uint32] */;
  %95 = cast(%var_6601, dtype="uint32") /* ty=Tensor[(416), uint32] */;
  %96 = cast(meta[relay.Constant][12] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %97 = reshape(%91, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
  %98 = reshape(%92, newshape=[1050]) /* ty=Tensor[(1050), float32] */;
  %99 = reshape(%93, newshape=[14, 2]) /* ty=Tensor[(14, 2), int32] */;
  %100 = reshape(%94, newshape=[26]) /* ty=Tensor[(26), uint32] */;
  %101 = reshape(%95, newshape=[416]) /* ty=Tensor[(416), uint32] */;
  %102 = reshape(%96, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %103 = @func_4509(%97, %98, %99, %100, %101, %102) /* ty=(Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) */;
  %104 = cast(%var_6605, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %105 = reshape(%104, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %106 = @func_4880(%105) /* ty=(Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) */;
  %107 = %90.0;
  %108 = %103.2;
  %109 = %106.0;
  (%107, %108, meta[relay.Constant][10] /* ty=Tensor[(10, 66), float64] */, %var_6598, meta[relay.Constant][11] /* ty=Tensor[(28), int32] */, %var_6600, %var_6601, meta[relay.Constant][12] /* ty=Tensor[(6), float64] */, %109, %var_6605)
}

def @func_3640() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %110 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %111 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %112 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %113 = %110.0;
  (%111, %112, %113)
}

def @func_5626() -> (Tensor[(16, 8, 14), float32],) {
  %114 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %115 = %114.1;
  (%115,)
}

def @func_3426(%var_3418: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64],) {
  %116 = cast(%var_3418, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
  %117 = log(%116) /* ty=Tensor[(15, 1, 7), float64] */;
  (%117,)
}

def @func_6710() -> Tensor[(16, 8, 14), float32] {
  %118 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %118.0
}

def @func_2705(%var_2692: Tensor[(16, 8, 14), float32]) -> Tensor[(16, 8, 14), float32] {
  %119 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %120 = cast(%var_2692, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%122, %123) /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_1375(%var_1334: Tensor[(13, 7, 15), float64], %var_1335: Tensor[(13, 7, 15), float64], %var_1344: Tensor[(28), int32], %var_1358: Tensor[(420), float64]) -> (Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
  %124 = cast(%var_1335, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
  %125 = shape_of(%var_1334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_1334, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = cast(meta[relay.Constant][13] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %129 = cast(%var_1344, dtype="int32") /* ty=Tensor[(28), int32] */;
  %130 = cast(meta[relay.Constant][14] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %131 = reshape(%128, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %132 = reshape(%129, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %133 = reshape(%130, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %134 = @func_547(%131, %132, %133) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %135 = cast(%var_1358, dtype="float64") /* ty=Tensor[(420), float64] */;
  %136 = reshape(%135, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %137 = @func_149(%136) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %138 = mod(%126, %127) /* ty=Tensor[(13, 7, 15), float64] */;
  %139 = %134.1;
  %140 = %137.0;
  (%138, %139, meta[relay.Constant][13] /* ty=Tensor[(39), float32] */, %var_1344, meta[relay.Constant][14] /* ty=Tensor[(252), int32] */, %140, %var_1358)
}

def @func_4284() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %141 = @func_3640() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %142 = %141.0;
  %143 = @func_3258() /* ty=Tensor[(16, 8, 14), float32] */;
  (%142, %143)
}

def @func_935(%var_932: Tensor[(3, 84), int32]) -> (Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) {
  %144 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %145 = acosh(%144) /* ty=Tensor[(9, 13, 5), float32] */;
  %146 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 13, 5), float32] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %150 = not_equal(%148, %149) /* ty=Tensor[(9, 13, 5), bool] */;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(9, 13, 5), float64] */;
  %152 = asinh(%151) /* ty=Tensor[(9, 13, 5), float64] */;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(9, 13, 5), float64] */;
  %154 = exp(%153) /* ty=Tensor[(9, 13, 5), float64] */;
  %155 = cast(%150, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %156 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%145, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %159 = maximum(%157, %158) /* ty=Tensor[(9, 13, 5), float32] */;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %161 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%154, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %164 = cast(meta[relay.Constant][16] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %165 = cast(meta[relay.Constant][16] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %166 = cast(%var_932, dtype="int32") /* ty=Tensor[(3, 84), int32] */;
  %167 = reshape(%164, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %168 = reshape(%165, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %169 = reshape(%166, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %170 = @func_176(%167, %168, %169) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %171 = floor_divide(%162, %163) /* ty=Tensor[(9, 13, 5), float32] */;
  %172 = %170.0;
  (%171, %172, meta[relay.Constant][16] /* ty=Tensor[(28), int32] */, %var_932)
}

def @func_5202() -> Tensor[(16, 8, 14), float32] {
  %173 = @func_4284() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %173.1
}

def @func_5925() -> Tensor[(16, 8, 14), float32] {
  %174 = @func_5626() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %174.0
}

def @func_6155() -> (Tensor[(16, 8, 14), float32],) {
  %175 = @func_5925() /* ty=Tensor[(16, 8, 14), float32] */;
  (%175,)
}

def @func_4555(%var_4548: Tensor[(10, 14, 8), float32]) -> (Tensor[(10, 14, 8), float32],) {
  %176 = cast(%var_4548, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %177 = atan(%176) /* ty=Tensor[(10, 14, 8), float32] */;
  (%177,)
}

def @func_4813(%var_4764: Tensor[(420), float64], %var_4798: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(13, 7, 15), float32], Tensor[(350, 3), float64], Tensor[(350), float32], Tensor[(350), float32], Tensor[(216), float32], Tensor[(252), int32]) {
  %178 = cast(%var_4764, dtype="float64") /* ty=Tensor[(420), float64] */;
  %179 = reshape(%178, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %180 = @func_4336(%179) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) */;
  %181 = %180.4;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(13, 7, 15), float32] */;
  %183 = cast(meta[relay.Constant][18] /* ty=Tensor[(70, 15), float32] */, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
  %184 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %185 = reshape(%183, newshape=[350, 3]) /* ty=Tensor[(350, 3), float32] */;
  %186 = reshape(%184, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %187 = @func_2088(%185, %186) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) */;
  %188 = %187.2;
  %189 = cast(meta[relay.Constant][18] /* ty=Tensor[(70, 15), float32] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(2), int32] */;
  %191 = cast(%188, dtype="float64") /* ty=Tensor[(350, 3), float64] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %193 = cast(meta[relay.Constant][19] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %194 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %195 = cast(%var_4798, dtype="int32") /* ty=Tensor[(252), int32] */;
  %196 = reshape(%193, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %197 = reshape(%194, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %198 = reshape(%195, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %199 = @func_2862(%196, %197, %198) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
  %200 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %201 = sigmoid(%182) /* ty=Tensor[(13, 7, 15), float32] */;
  %202 = mod(%191, %192) /* ty=Tensor[(350, 3), float64] */;
  %203 = %199.2;
  (%200, %var_4764, meta[relay.Constant][17] /* ty=Tensor[(28), int32] */, %201, %202, %203, meta[relay.Constant][19] /* ty=Tensor[(350), float32] */, meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, %var_4798)
}

def @func_1904(%var_1880: Tensor[(5, 5, 14), float32], %var_1898: Tensor[(5, 5, 14), float32]) -> Tensor[(5, 5, 14), bool] {
  %204 = cast(%var_1880, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %205 = acosh(%204) /* ty=Tensor[(5, 5, 14), float32] */;
  %206 = cast(%var_1898, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%208, %209) /* ty=Tensor[(5, 5, 14), bool] */
}

def @func_4579() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %210 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %211 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  (%210, %211)
}

def @func_5221(%var_5208: Tensor[(15, 3, 5), float32]) -> (Tensor[(15, 3, 5), float32],) {
  %212 = cast(%var_5208, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %213 = atanh(%212) /* ty=Tensor[(15, 3, 5), float32] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %215 = asin(%214) /* ty=Tensor[(15, 3, 5), float32] */;
  %216 = cast(%213, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %220 = multiply(%218, %219) /* ty=Tensor[(15, 3, 5), float32] */;
  (%220,)
}

def @func_2136() -> Tensor[(16, 8, 14), float32] {
  @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_1168(%var_1097: Tensor[(12, 3, 6), float32], %var_1152: Tensor[(252), int32]) -> (Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) {
  %221 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 400), int16] */, dtype="int16") /* ty=Tensor[(1, 400), int16] */;
  %222 = cast(meta[relay.Constant][22] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %223 = reshape(%221, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), int16] */;
  %224 = reshape(%222, newshape=[39]) /* ty=Tensor[(39), float32] */;
  %225 = @func_793(%223, %224) /* ty=(Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) */;
  %226 = cast(%var_1097, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %227 = sqrt(%226) /* ty=Tensor[(12, 3, 6), float32] */;
  %228 = cast(%227, dtype="uint64") /* ty=Tensor[(12, 3, 6), uint64] */;
  %229 = shape_of(%var_1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_1097, dtype="uint64") /* ty=Tensor[(12, 3, 6), uint64] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %232 = left_shift(%230, %231) /* ty=Tensor[(12, 3, 6), uint64] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %234 = %225.3;
  %235 = cast(%234, dtype="int32") /* ty=Tensor[(28), int32] */;
  %236 = cast(%234, dtype="int32") /* ty=Tensor[(28), int32] */;
  %237 = cast(%var_1152, dtype="int32") /* ty=Tensor[(252), int32] */;
  %238 = reshape(%235, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %239 = reshape(%236, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %240 = reshape(%237, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %241 = @func_176(%238, %239, %240) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %242 = acosh(%233) /* ty=Tensor[(12, 3, 6), float32] */;
  %243 = %241.1;
  (%234, meta[relay.Constant][21] /* ty=Tensor[(1, 400), int16] */, meta[relay.Constant][22] /* ty=Tensor[(39), float32] */, %242, %243, %var_1152)
}

def @func_4336(%var_4315: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) {
  %244 = cast(meta[relay.Constant][23] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %245 = cast(meta[relay.Constant][24] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %246 = reshape(%244, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %247 = reshape(%245, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %248 = @func_1168(%246, %247) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %249 = cast(meta[relay.Constant][25] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %250 = cast(meta[relay.Constant][25] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %251 = cast(meta[relay.Constant][26] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %252 = cast(%var_4315, dtype="float64") /* ty=Tensor[(420), float64] */;
  %253 = reshape(%249, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %254 = reshape(%250, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %255 = reshape(%251, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %256 = reshape(%252, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %257 = @func_1375(%253, %254, %255, %256) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %258 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %259 = %248.2;
  %260 = %257.0;
  (%258, %259, meta[relay.Constant][23] /* ty=Tensor[(216), float32] */, meta[relay.Constant][24] /* ty=Tensor[(252), int32] */, %260, meta[relay.Constant][25] /* ty=Tensor[(1365), float64] */, meta[relay.Constant][26] /* ty=Tensor[(28), int32] */, %var_4315)
}

def @func_5578(%var_5560: int8, %var_5561: Tensor[(12, 10, 16), int8]) -> Tensor[(12, 10, 16), bool] {
  %261 = cast(%var_5560, dtype="bool") /* ty=bool */;
  %262 = cast(%var_5561, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  equal(%261, %262) /* ty=Tensor[(12, 10, 16), bool] */
}

def @func_3725(%var_3719: Tensor[(15, 4, 14), uint8]) -> Tensor[(15, 4, 14), uint8] {
  %263 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(15, 4, 14), uint8] */;
  %264 = shape_of(%var_3719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_3719, dtype="uint8") /* ty=Tensor[(15, 4, 14), uint8] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%265, %266) /* ty=Tensor[(15, 4, 14), uint8] */
}

def @func_5889(%var_5827: Tensor[(6), int8], %var_5828: Tensor[(28), int32], %var_5832: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(3, 84), int32], Tensor[(216), float32], Tensor[(420), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), float32], Tensor[(15, 3, 5), float32], Tensor[(225), float32], Tensor[(16, 8, 14), float32]) {
  %267 = cast(%var_5827, dtype="int8") /* ty=Tensor[(6), int8] */;
  %268 = cast(%var_5828, dtype="int32") /* ty=Tensor[(28), int32] */;
  %269 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 84), int32] */, dtype="int32") /* ty=Tensor[(3, 84), int32] */;
  %270 = reshape(%267, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %271 = reshape(%268, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %272 = reshape(%269, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %273 = @func_1659(%270, %271, %272) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) */;
  %274 = cast(%var_5832, dtype="float64") /* ty=Tensor[(420), float64] */;
  %275 = reshape(%274, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %276 = @func_4336(%275) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) */;
  %277 = cast(meta[relay.Constant][29] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %278 = reshape(%277, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), float32] */;
  %279 = @func_3510(%278) /* ty=(Tensor[(12, 11, 16), float32],) */;
  %280 = cast(meta[relay.Constant][30] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %281 = reshape(%280, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), float32] */;
  %282 = @func_5221(%281) /* ty=(Tensor[(15, 3, 5), float32],) */;
  %283 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %284 = %273.2;
  %285 = %276.2;
  %286 = %279.0;
  %287 = %282.0;
  %288 = @func_3297() /* ty=Tensor[(16, 8, 14), float32] */;
  (%283, %284, %var_5827, %var_5828, meta[relay.Constant][28] /* ty=Tensor[(3, 84), int32] */, %285, %var_5832, %286, meta[relay.Constant][29] /* ty=Tensor[(2112), float32] */, %287, meta[relay.Constant][30] /* ty=Tensor[(225), float32] */, %288)
}

def @func_4859(%var_4836: Tensor[(4, 14, 3), float64]) -> (Tensor[(4, 14, 3), bool],) {
  %289 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 3), float64] */;
  %290 = log(%289) /* ty=Tensor[(4, 14, 3), float64] */;
  %291 = cast(%var_4836, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%290, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %295 = not_equal(%293, %294) /* ty=Tensor[(4, 14, 3), bool] */;
  %296 = cast(%295, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %297 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(4, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = less_equal(%298, %299) /* ty=Tensor[(4, 14, 3), bool] */;
  (%300,)
}

def @func_3555() -> (Tensor[(16, 8, 14), float32],) {
  %301 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  (%301,)
}

def @func_640(%var_622: Tensor[(15, 11, 12), uint8], %var_623: Tensor[(15, 11, 12), uint8], %var_636: Tensor[(13, 3), float32], %var_637: Tensor[(28, 1), int32], %var_638: Tensor[(252), int32]) -> (Tensor[(15, 11, 12), float32], Tensor[(2, 1, 14), float32], Tensor[(13, 3), float32], Tensor[(28, 1), int32], Tensor[(252), int32]) {
  %302 = cast(%var_623, dtype="uint8") /* ty=Tensor[(15, 11, 12), uint8] */;
  %303 = shape_of(%var_622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_622, dtype="uint8") /* ty=Tensor[(15, 11, 12), uint8] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %306 = add(%304, %305) /* ty=Tensor[(15, 11, 12), uint8] */;
  %307 = cast(%var_622, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %311 = cast(%var_636, dtype="float32") /* ty=Tensor[(13, 3), float32] */;
  %312 = cast(%var_637, dtype="int32") /* ty=Tensor[(28, 1), int32] */;
  %313 = cast(%var_638, dtype="int32") /* ty=Tensor[(252), int32] */;
  %314 = reshape(%311, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %315 = reshape(%312, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %316 = reshape(%313, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %317 = @func_547(%314, %315, %316) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %318 = floor_mod(%309, %310) /* ty=Tensor[(15, 11, 12), float32] */;
  %319 = %317.0;
  (%318, %319, %var_636, %var_637, %var_638)
}

def @func_4509(%var_4356: Tensor[(10, 11, 6), float64], %var_4389: Tensor[(1050), float32], %var_4390: Tensor[(14, 2), int32], %var_4446: Tensor[(26), uint32], %var_4447: Tensor[(416), uint32], %var_4448: Tensor[(6), float64]) -> (Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) {
  %320 = cast(%var_4389, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %321 = cast(%var_4390, dtype="int32") /* ty=Tensor[(14, 2), int32] */;
  %322 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %323 = reshape(%320, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %324 = reshape(%321, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %325 = reshape(%322, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %326 = @func_427(%323, %324, %325) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %327 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %328 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %332 = cast(%var_4446, dtype="uint32") /* ty=Tensor[(26), uint32] */;
  %333 = cast(%var_4447, dtype="uint32") /* ty=Tensor[(416), uint32] */;
  %334 = cast(%var_4448, dtype="float64") /* ty=Tensor[(6), float64] */;
  %335 = reshape(%332, newshape=[2, 1, 13]) /* ty=Tensor[(2, 1, 13), uint32] */;
  %336 = reshape(%333, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), uint32] */;
  %337 = reshape(%334, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %338 = @func_4055(%335, %336, %337) /* ty=(Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) */;
  %339 = cast(meta[relay.Constant][34] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %340 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %341 = reshape(%339, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %342 = reshape(%340, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %343 = @func_1168(%341, %342) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %344 = cast(%var_4389, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %345 = cast(%var_4390, dtype="int32") /* ty=Tensor[(14, 2), int32] */;
  %346 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %347 = reshape(%344, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %348 = reshape(%345, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %349 = reshape(%346, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %350 = @func_427(%347, %348, %349) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %351 = cast(%var_4356, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %352 = atan(%351) /* ty=Tensor[(10, 11, 6), float64] */;
  %353 = cast(%var_4356, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %354 = exp(%353) /* ty=Tensor[(10, 11, 6), float64] */;
  %355 = cast(%var_4356, dtype="int8") /* ty=Tensor[(10, 11, 6), int8] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="int8") /* ty=Tensor[(10, 11, 6), int8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %359 = left_shift(%357, %358) /* ty=Tensor[(10, 11, 6), int8] */;
  %360 = cast(%359, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %361 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%352, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = less(%362, %363) /* ty=Tensor[(10, 11, 6), bool] */;
  %365 = cast(%354, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %369 = %350.3;
  %370 = cast(%369, dtype="int32") /* ty=Tensor[(252), int32] */;
  %371 = reshape(%370, newshape=[3, 84]) /* ty=Tensor[(3, 84), int32] */;
  %372 = @func_935(%371) /* ty=(Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) */;
  %373 = %326.2;
  %374 = floor_divide(%330, %331) /* ty=Tensor[(16, 8, 14), float64] */;
  %375 = %338.0;
  %376 = %343.3;
  %377 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %378 = floor_mod(%367, %368) /* ty=Tensor[(10, 11, 6), float64] */;
  %379 = %372.0;
  (%373, %var_4389, %var_4390, meta[relay.Constant][32] /* ty=Tensor[(252), int32] */, %374, %375, %var_4446, %var_4447, %var_4448, %376, meta[relay.Constant][34] /* ty=Tensor[(216), float32] */, %369, %377, %378, %379)
}

def @func_4880(%var_4863: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) {
  %380 = cast(%var_4863, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %381 = log2(%380) /* ty=Tensor[(4, 16, 16), float64] */;
  %382 = cast(%381, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %383 = sigmoid(%382) /* ty=Tensor[(4, 16, 16), float64] */;
  %384 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%383, %384)
}

def @func_2275() -> Tensor[(16, 8, 14), float32] {
  @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_5443(%var_5423: Tensor[(12, 78), float64], %var_5424: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(350), float32], Tensor[(350), float32], Tensor[(12, 78), float32]) {
  %385 = @func_5326() /* ty=(Tensor[(16, 8, 14), float64],) */;
  %386 = @func_5280() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %387 = cast(%var_5423, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
  %388 = cast(%var_5424, dtype="float32") /* ty=Tensor[(350), float32] */;
  %389 = reshape(%387, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
  %390 = reshape(%388, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %391 = @func_3793(%389, %390) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
  %392 = cast(%var_5423, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %393 = %385.0;
  %394 = %386.0;
  %395 = %391.2;
  %396 = atanh(%392) /* ty=Tensor[(12, 78), float32] */;
  (%393, %394, %395, %var_5424, %396)
}

def @func_6511() -> Tensor[(16, 8, 14), float32] {
  @func_2136() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_1856() -> Tensor[(16, 8, 14), float32] {
  %397 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  sinh(%397) /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3028() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %398 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %400 = asin(%399) /* ty=Tensor[(16, 8, 14), float32] */;
  %401 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%400, %401)
}

def @func_5183() -> Tensor[(16, 8, 14), float64] {
  %402 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  erf(%403) /* ty=Tensor[(16, 8, 14), float64] */
}

def @func_6272() -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  %404 = @func_6042() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) */;
  %405 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %406 = @func_5716() /* ty=(Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) */;
  %407 = %404.1;
  %408 = %405.0;
  %409 = %406.1;
  (%407, %408, %409)
}

def @func_6338(%var_6297: Tensor[(10, 3, 2), float32]) -> (Tensor[(10, 3, 2), bool], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32], Tensor[(16, 8, 14), float32], Tensor[(10, 3, 2), int32], Tensor[(16, 8, 14), float64]) {
  %410 = cast(%var_6297, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %411 = asin(%410) /* ty=Tensor[(10, 3, 2), float32] */;
  %412 = cast(%411, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %413 = shape_of(%var_6297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_6297, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = cast(meta[relay.Constant][36] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %417 = cast(meta[relay.Constant][36] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %418 = reshape(%416, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %419 = reshape(%417, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %420 = @func_5256(%418, %419) /* ty=(Tensor[(8, 12, 15), uint32],) */;
  %421 = @func_3488() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %422 = cast(%411, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %423 = cosh(%422) /* ty=Tensor[(10, 3, 2), float32] */;
  %424 = cast(%411, dtype="int32") /* ty=Tensor[(10, 3, 2), int32] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="int32") /* ty=Tensor[(10, 3, 2), int32] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %428 = @func_6272() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
  %429 = not_equal(%414, %415) /* ty=Tensor[(10, 3, 2), bool] */;
  %430 = %420.0;
  %431 = %421.0;
  %432 = bitwise_xor(%426, %427) /* ty=Tensor[(10, 3, 2), int32] */;
  %433 = %428.2;
  (%429, %430, meta[relay.Constant][36] /* ty=Tensor[(1440), uint32] */, %431, %432, %433)
}

def @func_6440() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), bool]) {
  %434 = @func_6272() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
  %435 = %434.1;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %437 = reshape(%436, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
  %438 = @func_2337(%437) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
  %439 = %438.1;
  (%435, %439)
}

def @func_3258() -> Tensor[(16, 8, 14), float32] {
  %440 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %440.0
}

def @func_793(%var_782: Tensor[(16, 5, 5), int16], %var_789: Tensor[(39), float32]) -> (Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) {
  %441 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 1, 5), int16] */, dtype="int16") /* ty=Tensor[(16, 1, 5), int16] */;
  %442 = cast(%var_782, dtype="int16") /* ty=Tensor[(16, 5, 5), int16] */;
  %443 = cast(%var_789, dtype="float32") /* ty=Tensor[(39), float32] */;
  %444 = cast(meta[relay.Constant][38] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %445 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 42), int32] */, dtype="int32") /* ty=Tensor[(6, 42), int32] */;
  %446 = reshape(%443, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %447 = reshape(%444, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %448 = reshape(%445, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %449 = @func_547(%446, %447, %448) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %450 = left_shift(%441, %442) /* ty=Tensor[(16, 5, 5), int16] */;
  %451 = %449.2;
  (%450, %451, %var_789, meta[relay.Constant][38] /* ty=Tensor[(28), int32] */, meta[relay.Constant][39] /* ty=Tensor[(6, 42), int32] */)
}

def @func_3510(%var_3502: Tensor[(12, 11, 16), float32]) -> (Tensor[(12, 11, 16), float32],) {
  %452 = cast(%var_3502, dtype="float32") /* ty=Tensor[(12, 11, 16), float32] */;
  %453 = rsqrt(%452) /* ty=Tensor[(12, 11, 16), float32] */;
  (%453,)
}

def @func_3047() -> Tensor[(16, 8, 14), float32] {
  @func_2136() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4981(%var_4974: Tensor[(39), float32], %var_4975: Tensor[(28), int32], %var_4976: Tensor[(1, 252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(12, 2, 2), float64], Tensor[(48), float64], Tensor[(4, 14, 3), bool], Tensor[(168), float64], Tensor[(1050), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(1, 252), int32]) {
  %454 = cast(meta[relay.Constant][40] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %455 = reshape(%454, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %456 = cast(meta[relay.Constant][41] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %457 = reshape(%456, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), float64] */;
  %458 = @func_4859(%457) /* ty=(Tensor[(4, 14, 3), bool],) */;
  %459 = cast(%var_4974, dtype="float32") /* ty=Tensor[(39), float32] */;
  %460 = cast(%var_4975, dtype="int32") /* ty=Tensor[(28), int32] */;
  %461 = cast(%var_4976, dtype="int32") /* ty=Tensor[(1, 252), int32] */;
  %462 = reshape(%459, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %463 = reshape(%460, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %464 = reshape(%461, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %465 = @func_547(%462, %463, %464) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %466 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  %467 = @func_1397(%455) /* ty=Tensor[(12, 2, 2), float64] */;
  %468 = %458.0;
  %469 = %465.6;
  (%466, %467, meta[relay.Constant][40] /* ty=Tensor[(48), float64] */, %468, meta[relay.Constant][41] /* ty=Tensor[(168), float64] */, %469, %var_4974, %var_4975, %var_4976)
}

def @func_2252(%var_2205: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) {
  %470 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %471 = cast(%var_2205, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %475 = cast(%470, dtype="int64") /* ty=Tensor[(16, 8, 14), int64] */;
  %476 = shape_of(%var_2205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_2205, dtype="int64") /* ty=Tensor[(16, 8, 14), int64] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %479 = logical_and(%473, %474) /* ty=Tensor[(16, 8, 14), bool] */;
  %480 = subtract(%477, %478) /* ty=Tensor[(16, 8, 14), int64] */;
  %481 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%479, %480, %481)
}

def @func_2862(%var_2781: Tensor[(350), float32], %var_2816: Tensor[(216), float32], %var_2817: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  %482 = cast(%var_2781, dtype="float32") /* ty=Tensor[(350), float32] */;
  %483 = cast(%var_2781, dtype="float32") /* ty=Tensor[(350), float32] */;
  %484 = reshape(%482, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %485 = reshape(%483, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %486 = cast(%var_2816, dtype="float32") /* ty=Tensor[(216), float32] */;
  %487 = cast(%var_2817, dtype="int32") /* ty=Tensor[(252), int32] */;
  %488 = reshape(%486, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %489 = reshape(%487, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %490 = @func_1168(%488, %489) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %491 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %493 = sin(%492) /* ty=Tensor[(16, 8, 14), float64] */;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %495 = %490.5;
  %496 = cast(%495, dtype="int32") /* ty=Tensor[(252), int32] */;
  %497 = reshape(%496, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %498 = @func_2128(%497) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
  %499 = cast(%var_2817, dtype="int32") /* ty=Tensor[(252), int32] */;
  %500 = reshape(%499, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %501 = @func_2128(%500) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
  %502 = cast(%493, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %503 = cosh(%502) /* ty=Tensor[(16, 8, 14), float64] */;
  %504 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %505 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%491, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %508 = floor_mod(%506, %507) /* ty=Tensor[(16, 8, 14), float32] */;
  %509 = cast(%508, dtype="int32") /* ty=Tensor[(16, 8, 14), int32] */;
  %510 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%503, dtype="int32") /* ty=Tensor[(16, 8, 14), int32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %513 = right_shift(%511, %512) /* ty=Tensor[(16, 8, 14), int32] */;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %515 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  %516 = @func_1904(%484, %485) /* ty=Tensor[(5, 5, 14), bool] */;
  %517 = exp(%494) /* ty=Tensor[(16, 8, 14), float32] */;
  %518 = %498.2;
  %519 = %501.0;
  %520 = log10(%514) /* ty=Tensor[(16, 8, 14), float64] */;
  (%515, %516, %var_2781, %495, %var_2816, %var_2817, %517, %518, %519, %520)
}

def @func_4745() -> Tensor[(16, 8, 14), float32] {
  %521 = @func_4284() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %521.0
}

def @func_5326() -> (Tensor[(16, 8, 14), float64],) {
  %522 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %523 = %522.0;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %525 = sigmoid(%524) /* ty=Tensor[(16, 8, 14), float64] */;
  (%525,)
}

def @func_5716() -> (Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) {
  %526 = @func_5313() /* ty=(Tensor[(9, 15, 11), float64],) */;
  %527 = %526.0;
  %528 = @func_5183() /* ty=Tensor[(16, 8, 14), float64] */;
  (%527, %528)
}

def @func_5754() -> (Tensor[(16, 8, 14), float32],) {
  %529 = @func_3297() /* ty=Tensor[(16, 8, 14), float32] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %531 = cos(%530) /* ty=Tensor[(16, 8, 14), float32] */;
  (%531,)
}

def @func_6228() -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) {
  %532 = @func_6042() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) */;
  %533 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %534 = %532.1;
  %535 = %533.0;
  (%534, %535)
}

def @func_4652(%var_4607: Tensor[(39, 1), float32], %var_4650: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(39, 420), bool], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(5, 5, 14), bool], Tensor[(1, 936), float64], Tensor[(350), float32]) {
  %536 = cast(%var_4607, dtype="bool") /* ty=Tensor[(39, 1), bool] */;
  %537 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %538 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %539 = cast(meta[relay.Constant][43] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
  %540 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %541 = cast(%var_4607, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
  %542 = reshape(%539, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %543 = reshape(%540, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %544 = reshape(%541, newshape=[39, 1]) /* ty=Tensor[(39, 1), float32] */;
  %545 = @func_2642(%542, %543, %544) /* ty=(Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) */;
  %546 = %545.2;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(13, 7, 15), float32] */;
  %548 = acos(%547) /* ty=Tensor[(13, 7, 15), float32] */;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
  %550 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 936), float64] */, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
  %551 = cast(%var_4650, dtype="float32") /* ty=Tensor[(350), float32] */;
  %552 = reshape(%550, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
  %553 = reshape(%551, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %554 = @func_3793(%552, %553) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
  %555 = @func_3258() /* ty=Tensor[(16, 8, 14), float32] */;
  %556 = greater(%536, %537) /* ty=Tensor[(39, 420), bool] */;
  %557 = %538.1;
  %558 = log2(%549) /* ty=Tensor[(13, 7, 15), float64] */;
  %559 = %554.1;
  (%555, meta[relay.Constant][43] /* ty=Tensor[(28), int32] */, %556, %557, %558, %559, meta[relay.Constant][45] /* ty=Tensor[(1, 936), float64] */, %var_4650)
}

def @func_3182(%var_3109: Tensor[(400), int16], %var_3140: Tensor[(216), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(400), int16], Tensor[(39), float32], Tensor[(252), int32], Tensor[(1, 350), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(70, 15), float32]) {
  %560 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %561 = cast(%var_3109, dtype="int16") /* ty=Tensor[(400), int16] */;
  %562 = cast(meta[relay.Constant][46] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %563 = reshape(%561, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), int16] */;
  %564 = reshape(%562, newshape=[39]) /* ty=Tensor[(39), float32] */;
  %565 = @func_793(%563, %564) /* ty=(Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) */;
  %566 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 350), float32] */, dtype="float32") /* ty=Tensor[(1, 350), float32] */;
  %567 = cast(%var_3140, dtype="float32") /* ty=Tensor[(216), float32] */;
  %568 = cast(meta[relay.Constant][48] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %569 = reshape(%566, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %570 = reshape(%567, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %571 = reshape(%568, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %572 = @func_2862(%569, %570, %571) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
  %573 = %560.0;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %575 = reshape(%574, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
  %576 = @func_2337(%575) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
  %577 = cast(meta[relay.Constant][49] /* ty=Tensor[(70, 15), float32] */, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
  %578 = %565.3;
  %579 = cast(%578, dtype="int32") /* ty=Tensor[(28), int32] */;
  %580 = reshape(%577, newshape=[350, 3]) /* ty=Tensor[(350, 3), float32] */;
  %581 = reshape(%579, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %582 = @func_2088(%580, %581) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) */;
  %583 = %572.5;
  %584 = %576.0;
  %585 = %582.3;
  (%573, %578, %var_3109, meta[relay.Constant][46] /* ty=Tensor[(39), float32] */, %583, meta[relay.Constant][47] /* ty=Tensor[(1, 350), float32] */, %var_3140, meta[relay.Constant][48] /* ty=Tensor[(252), int32] */, %584, %585, meta[relay.Constant][49] /* ty=Tensor[(70, 15), float32] */)
}

def @func_2088(%var_2066: Tensor[(350, 3), float32], %var_2067: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) {
  %586 = cast(%var_2066, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
  %587 = cast(%var_2067, dtype="int32") /* ty=Tensor[(28), int32] */;
  %588 = cast(meta[relay.Constant][50] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %589 = reshape(%586, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %590 = reshape(%587, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %591 = reshape(%588, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %592 = @func_427(%589, %590, %591) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %593 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %594 = %592.0;
  %595 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  (%593, %594, %var_2066, %var_2067, meta[relay.Constant][50] /* ty=Tensor[(252), int32] */, %595)
}

def @func_5313() -> (Tensor[(9, 15, 11), float64],) {
  %596 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 11), float64] */;
  %597 = acosh(%596) /* ty=Tensor[(9, 15, 11), float64] */;
  (%597,)
}

def @func_2591(%var_2581: Tensor[(6), int8], %var_2582: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(252), int32]) {
  %598 = cast(%var_2581, dtype="int8") /* ty=Tensor[(6), int8] */;
  %599 = cast(%var_2582, dtype="int32") /* ty=Tensor[(28), int32] */;
  %600 = cast(meta[relay.Constant][52] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %601 = reshape(%598, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %602 = reshape(%599, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %603 = reshape(%600, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %604 = @func_1659(%601, %602, %603) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) */;
  %605 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  %606 = %604.1;
  (%605, %606, %var_2581, %var_2582, meta[relay.Constant][52] /* ty=Tensor[(252), int32] */)
}

def @func_5519(%var_5515: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %607 = cast(%var_5515, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %608 = asin(%607) /* ty=Tensor[(7, 14, 10), float32] */;
  (%608,)
}

def @func_5903() -> (Tensor[(16, 8, 14), float32],) {
  %609 = @func_5280() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %610 = %609.0;
  (%610,)
}

def @func_4125(%var_4116: Tensor[(28), int32], %var_4117: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(252), int32]) {
  %611 = cast(meta[relay.Constant][53] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %612 = cast(%var_4116, dtype="int32") /* ty=Tensor[(28), int32] */;
  %613 = cast(%var_4117, dtype="int32") /* ty=Tensor[(252), int32] */;
  %614 = reshape(%611, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %615 = reshape(%612, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %616 = reshape(%613, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %617 = @func_427(%614, %615, %616) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %618 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  %619 = %617.0;
  (%618, %619, meta[relay.Constant][53] /* ty=Tensor[(1050), float32] */, %var_4116, %var_4117)
}

def @func_5805(%var_5798: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(7, 195), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32]) {
  %620 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %621 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %622 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %623 = cast(%var_5798, dtype="int32") /* ty=Tensor[(28), int32] */;
  %624 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %625 = reshape(%621, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %626 = reshape(%622, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %627 = reshape(%623, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %628 = reshape(%624, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %629 = @func_1375(%625, %626, %627, %628) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %630 = cast(meta[relay.Constant][56] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %631 = cast(meta[relay.Constant][56] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %632 = reshape(%630, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %633 = reshape(%631, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %634 = @func_5256(%632, %633) /* ty=(Tensor[(8, 12, 15), uint32],) */;
  %635 = %620.0;
  %636 = %629.2;
  %637 = %634.0;
  (%635, %636, meta[relay.Constant][54] /* ty=Tensor[(7, 195), float64] */, %var_5798, meta[relay.Constant][55] /* ty=Tensor[(420), float64] */, %637, meta[relay.Constant][56] /* ty=Tensor[(1440), uint32] */)
}

def @func_3948(%var_3909: Tensor[(1, 28), int32], %var_3910: Tensor[(252, 1), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39, 1), float32], Tensor[(1, 28), int32], Tensor[(252, 1), int32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(39), float64]) {
  %638 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %639 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %640 = cast(meta[relay.Constant][57] /* ty=Tensor[(39, 1), float32] */, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
  %641 = cast(%var_3909, dtype="int32") /* ty=Tensor[(1, 28), int32] */;
  %642 = cast(%var_3910, dtype="int32") /* ty=Tensor[(252, 1), int32] */;
  %643 = reshape(%640, newshape=[39]) /* ty=Tensor[(39), float32] */;
  %644 = reshape(%641, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %645 = reshape(%642, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %646 = @func_2516(%643, %644, %645) /* ty=(Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(39), float64] */;
  %649 = %638.0;
  %650 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %651 = %639.0;
  %652 = log10(%648) /* ty=Tensor[(39), float64] */;
  (%649, meta[relay.Constant][57] /* ty=Tensor[(39, 1), float32] */, %var_3909, %var_3910, %650, %651, %652)
}

def @func_3773() -> Tensor[(16, 8, 14), float32] {
  @func_3203() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3828(%var_3804: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) {
  %653 = cast(%var_3804, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
  %654 = cast(%var_3804, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
  %655 = acosh(%653) /* ty=Tensor[(1, 6, 1), float64] */;
  %656 = atanh(%654) /* ty=Tensor[(1, 6, 1), float64] */;
  %657 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  (%655, %656, %657)
}

def @func_6420(%var_6416: Tensor[(936), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), float32], Tensor[(350), bool], Tensor[(936), float64]) {
  %658 = @func_6155() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %659 = cast(meta[relay.Constant][58] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %660 = cast(meta[relay.Constant][59] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %661 = reshape(%659, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
  %662 = reshape(%660, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %663 = @func_3793(%661, %662) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
  %664 = %658.0;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %666 = reshape(%665, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
  %667 = @func_2252(%666) /* ty=(Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) */;
  %668 = @func_6228() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) */;
  %669 = cast(meta[relay.Constant][59] /* ty=Tensor[(350), float32] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %670 = sin(%669) /* ty=Tensor[(350), float64] */;
  %671 = cast(meta[relay.Constant][60] /* ty=Tensor[(350), float64] */, dtype="bool") /* ty=Tensor[(350), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(1), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(350), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?), bool] */;
  %675 = cast(%var_6416, dtype="float64") /* ty=Tensor[(936), float64] */;
  %676 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(936), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %677 = cast(meta[relay.Constant][58] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?), float64] */;
  %679 = %663.1;
  %680 = %667.0;
  %681 = %668.1;
  %682 = logical_and(%673, %674) /* ty=Tensor[(350), bool] */;
  %683 = mod(%677, %678) /* ty=Tensor[(936), float64] */;
  (%664, %679, %680, %681, %682, %683)
}

def @func_5280() -> (Tensor[(16, 8, 14), float32],) {
  %684 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %685 = %684.1;
  (%685,)
}

def @func_5558() -> (Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) {
  %686 = @func_5313() /* ty=(Tensor[(9, 15, 11), float64],) */;
  %687 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  %688 = %686.0;
  %689 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  (%687, %688, %689)
}

def @func_5256(%var_5232: Tensor[(8, 12, 15), uint32], %var_5233: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), uint32],) {
  %690 = cast(%var_5233, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %691 = shape_of(%var_5232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_5232, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %694 = bitwise_or(%692, %693) /* ty=Tensor[(8, 12, 15), uint32] */;
  (%694,)
}

def @func_5019(%var_5012: Tensor[(28), int32], %var_5013: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(39), float32]) {
  %695 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %696 = cast(%var_5012, dtype="int32") /* ty=Tensor[(28), int32] */;
  %697 = cast(%var_5013, dtype="float64") /* ty=Tensor[(420), float64] */;
  %698 = cast(meta[relay.Constant][61] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %699 = reshape(%696, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %700 = reshape(%697, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %701 = reshape(%698, newshape=[39, 1]) /* ty=Tensor[(39, 1), float32] */;
  %702 = @func_2642(%699, %700, %701) /* ty=(Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) */;
  %703 = %695.0;
  %704 = %702.5;
  (%703, %704, %var_5012, %var_5013, meta[relay.Constant][61] /* ty=Tensor[(39), float32] */)
}

def @func_5976() -> (Tensor[(16, 8, 14), float32],) {
  %705 = @func_5754() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %706 = %705.0;
  (%706,)
}

def @func_6103() -> (Tensor[(16, 8, 14), float32],) {
  %707 = @func_5558() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) */;
  %708 = %707.0;
  (%708,)
}

def @func_2128(%var_2123: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) {
  %709 = cast(meta[relay.Constant][62] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %710 = cast(%var_2123, dtype="int32") /* ty=Tensor[(252), int32] */;
  %711 = reshape(%709, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %712 = reshape(%710, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %713 = @func_1168(%711, %712) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %714 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %715 = %713.0;
  (%714, %715, meta[relay.Constant][62] /* ty=Tensor[(216), float32] */, %var_2123)
}

def @func_427(%var_406: Tensor[(5, 14, 15), float32], %var_416: Tensor[(28), int32], %var_417: Tensor[(252), int32]) -> (Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) {
  %716 = cast(%var_406, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %717 = cast(%var_416, dtype="int32") /* ty=Tensor[(28), int32] */;
  %718 = cast(%var_416, dtype="int32") /* ty=Tensor[(28), int32] */;
  %719 = cast(%var_417, dtype="int32") /* ty=Tensor[(252), int32] */;
  %720 = reshape(%717, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %721 = reshape(%718, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %722 = reshape(%719, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %723 = @func_176(%720, %721, %722) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %724 = cosh(%716) /* ty=Tensor[(5, 14, 15), float32] */;
  %725 = %723.1;
  (%724, %725, %var_416, %var_417)
}

def @func_3488() -> (Tensor[(16, 8, 14), float32],) {
  %726 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  (%726,)
}

def @func_149(%var_121: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
  %727 = cast(%var_121, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
  %728 = sinh(%727) /* ty=Tensor[(14, 3, 10), float64] */;
  (%728,)
}

def @func_2680() -> Tensor[(16, 8, 14), float32] {
  @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_2516(%var_2499: Tensor[(39), float32], %var_2500: Tensor[(28), int32], %var_2501: Tensor[(252), int32]) -> (Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) {
  %729 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %730 = exp(%729) /* ty=Tensor[(5, 1, 16), float32] */;
  %731 = cast(%730, dtype="int8") /* ty=Tensor[(5, 1, 16), int8] */;
  %732 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(5, 1, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 1, 16), float32] */, dtype="int8") /* ty=Tensor[(5, 1, 16), int8] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %735 = minimum(%733, %734) /* ty=Tensor[(5, ?, 16), int8] */;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(5, ?, 16), float64] */;
  %737 = cast(%var_2499, dtype="float32") /* ty=Tensor[(39), float32] */;
  %738 = cast(%var_2500, dtype="int32") /* ty=Tensor[(28), int32] */;
  %739 = cast(%var_2501, dtype="int32") /* ty=Tensor[(252), int32] */;
  %740 = reshape(%737, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %741 = reshape(%738, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %742 = reshape(%739, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %743 = @func_547(%740, %741, %742) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %744 = %743.2;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(252), float64] */;
  %746 = shape_of(%var_2501, dtype="int32") /* ty=Tensor[(1), int32] */;
  %747 = cast(%var_2501, dtype="float64") /* ty=Tensor[(252), float64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?), float64] */;
  %749 = acos(%736) /* ty=Tensor[(5, ?, 16), float64] */;
  %750 = power(%747, %748) /* ty=Tensor[(252), float64] */;
  (%var_2499, %var_2500, %749, %750)
}

def @func_3793(%var_3775: Tensor[(6, 12, 13), float64], %var_3785: Tensor[(350), float32]) -> (Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) {
  %751 = cast(%var_3775, dtype="float64") /* ty=Tensor[(6, 12, 13), float64] */;
  %752 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %753 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %754 = reshape(%752, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %755 = reshape(%753, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %756 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %757 = rsqrt(%751) /* ty=Tensor[(6, 12, 13), float64] */;
  %758 = @func_1904(%754, %755) /* ty=Tensor[(5, 5, 14), bool] */;
  %759 = rsqrt(%756) /* ty=Tensor[(350), float32] */;
  (%757, %758, %759)
}

def @func_1659(%var_1627: Tensor[(6, 1), int8], %var_1645: Tensor[(28), int32], %var_1646: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) {
  %760 = cast(meta[relay.Constant][64] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %761 = cast(%var_1645, dtype="int32") /* ty=Tensor[(28), int32] */;
  %762 = cast(%var_1646, dtype="int32") /* ty=Tensor[(252), int32] */;
  %763 = reshape(%760, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %764 = reshape(%761, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %765 = reshape(%762, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %766 = @func_547(%763, %764, %765) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %767 = cast(meta[relay.Constant][65] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %768 = cast(%var_1627, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %769 = equal(%767, %768) /* ty=Tensor[(6, 1), bool] */;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
  %771 = cast(%var_1646, dtype="float64") /* ty=Tensor[(252), float64] */;
  %772 = %766.4;
  %773 = mod(%770, %771) /* ty=Tensor[(6, 252), float64] */;
  (%772, meta[relay.Constant][64] /* ty=Tensor[(39), float32] */, %var_1645, %773)
}

def @func_5135(%var_5103: Tensor[(9, 14, 7), float64], %var_5104: Tensor[(9, 14, 7), float64]) -> (Tensor[(9, 14, 7), float32], Tensor[(9, 14, 7), float64], Tensor[(2, 208), uint32]) {
  %774 = cast(%var_5104, dtype="bool") /* ty=Tensor[(9, 14, 7), bool] */;
  %775 = shape_of(%var_5103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_5103, dtype="bool") /* ty=Tensor[(9, 14, 7), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = not_equal(%776, %777) /* ty=Tensor[(9, 14, 7), bool] */;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(9, 14, 7), float32] */;
  %780 = cast(%778, dtype="float64") /* ty=Tensor[(9, 14, 7), float64] */;
  %781 = shape_of(%var_5104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_5104, dtype="float64") /* ty=Tensor[(9, 14, 7), float64] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %784 = @func_4241() /* ty=(Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) */;
  %785 = erf(%779) /* ty=Tensor[(9, 14, 7), float32] */;
  %786 = divide(%782, %783) /* ty=Tensor[(9, 14, 7), float64] */;
  %787 = %784.4;
  (%785, %786, %787)
}

def @func_2920() -> (Tensor[(16, 8, 14), float32],) {
  %788 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%788,)
}

def @func_5491() -> Tensor[(16, 8, 14), float32] {
  @func_5202() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3203() -> Tensor[(16, 8, 14), float32] {
  @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_2337(%var_2325: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) {
  %789 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %791 = cast(%789, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %792 = rsqrt(%791) /* ty=Tensor[(16, 8, 14), float64] */;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %794 = tan(%793) /* ty=Tensor[(16, 8, 14), float32] */;
  %795 = cast(%var_2325, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %799 = atan(%790) /* ty=Tensor[(16, 8, 14), float64] */;
  %800 = less(%797, %798) /* ty=Tensor[(16, 8, 14), bool] */;
  (%799, %800)
}

def @func_3297() -> Tensor[(16, 8, 14), float32] {
  %801 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %801.0
}

def @func_3077() -> (Tensor[(16, 8, 14), float32],) {
  %802 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  (%802,)
}

def @func_547(%var_502: Tensor[(1, 3, 13), float32], %var_507: Tensor[(28), int32], %var_508: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) {
  %803 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %804 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %805 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %806 = reshape(%803, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %807 = reshape(%804, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %808 = reshape(%805, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %809 = @func_176(%806, %807, %808) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %810 = cast(%var_502, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
  %811 = atan(%810) /* ty=Tensor[(1, 3, 13), float32] */;
  %812 = cast(%var_502, dtype="uint64") /* ty=Tensor[(1, 3, 13), uint64] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="uint64") /* ty=Tensor[(1, 3, 13), uint64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %816 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %817 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %818 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %819 = reshape(%816, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %820 = reshape(%817, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %821 = reshape(%818, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %822 = @func_176(%819, %820, %821) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %823 = cast(meta[relay.Constant][66] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %824 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %825 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %826 = reshape(%823, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %827 = reshape(%824, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %828 = reshape(%825, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %829 = @func_427(%826, %827, %828) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %830 = cast(%811, dtype="bool") /* ty=Tensor[(1, 3, 13), bool] */;
  %831 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 13), bool] */;
  %832 = %809.2;
  %833 = logical_xor(%814, %815) /* ty=Tensor[(?, 3, 13), uint64] */;
  %834 = %822.2;
  %835 = %829.3;
  %836 = logical_and(%830, %831) /* ty=Tensor[(15, 3, 13), bool] */;
  (%832, %var_507, %var_508, %833, %834, %835, meta[relay.Constant][66] /* ty=Tensor[(1050), float32] */, %836)
}

def @main(%var_6727: Tensor[(16, 12, 6), uint8], %var_6728: Tensor[(16, 12, 6), uint8]) -> Tensor[(16, 12, 6), bool] {
  %837 = cast(%var_6728, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %838 = shape_of(%var_6727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_6727, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%839, %840) /* ty=Tensor[(16, 12, 6), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5978() -> (Tensor[(16, 8, 14), float32],) {
  @func_5976() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_2188(%var_2186: Tensor[(16, 5, 2), uint32], %var_2187: Tensor[(16, 5, 2), uint32]) -> (Tensor[(16, 5, 2), int16],) {
  @func_2184(%var_2186, %var_2187) /* ty=(Tensor[(16, 5, 2), int16],) */
}

def @func_3793(%var_3775: Tensor[(6, 12, 13), float64], %var_3785: Tensor[(350), float32]) -> (Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) {
  %0 = cast(%var_3775, dtype="float64") /* ty=Tensor[(6, 12, 13), float64] */;
  %1 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %2 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %3 = reshape(%1, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %4 = reshape(%2, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %5 = cast(%var_3785, dtype="float32") /* ty=Tensor[(350), float32] */;
  %6 = rsqrt(%0) /* ty=Tensor[(6, 12, 13), float64] */;
  %7 = @func_1904(%3, %4) /* ty=Tensor[(5, 5, 14), bool] */;
  %8 = rsqrt(%5) /* ty=Tensor[(350), float32] */;
  (%6, %7, %8)
}

def @func_552(%var_549: Tensor[(1, 3, 13), float32], %var_550: Tensor[(28), int32], %var_551: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) {
  @func_547(%var_549, %var_550, %var_551) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */
}

def @func_2276() -> Tensor[(16, 8, 14), float32] {
  %9 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %9() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4558(%var_4556: Tensor[(10, 14, 8), float32]) -> (Tensor[(10, 14, 8), float32],) {
  @func_4555(%var_4556) /* ty=(Tensor[(10, 14, 8), float32],) */
}

def @func_4816(%var_4814: Tensor[(420), float64], %var_4815: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(13, 7, 15), float32], Tensor[(350, 3), float64], Tensor[(350), float32], Tensor[(350), float32], Tensor[(216), float32], Tensor[(252), int32]) {
  %36 = fn (%var_4764: Tensor[(420), float64], %var_4798: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(13, 7, 15), float32], Tensor[(350, 3), float64], Tensor[(350), float32], Tensor[(350), float32], Tensor[(216), float32], Tensor[(252), int32]) {
    %10 = cast(%var_4764, dtype="float64") /* ty=Tensor[(420), float64] */;
    %11 = reshape(%10, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %12 = @func_4336(%11) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) */;
    %13 = %12.4;
    %14 = cast(%13, dtype="float32") /* ty=Tensor[(13, 7, 15), float32] */;
    %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(70, 15), float32] */, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %17 = reshape(%15, newshape=[350, 3]) /* ty=Tensor[(350, 3), float32] */;
    %18 = reshape(%16, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %19 = @func_2088(%17, %18) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) */;
    %20 = %19.2;
    %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(70, 15), float32] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
    %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(2), int32] */;
    %23 = cast(%20, dtype="float64") /* ty=Tensor[(350, 3), float64] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %27 = cast(%var_4798, dtype="int32") /* ty=Tensor[(252), int32] */;
    %28 = reshape(%25, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %29 = reshape(%26, newshape=[216]) /* ty=Tensor[(216), float32] */;
    %30 = reshape(%27, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %31 = @func_2862(%28, %29, %30) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
    %32 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
    %33 = sigmoid(%14) /* ty=Tensor[(13, 7, 15), float32] */;
    %34 = mod(%23, %24) /* ty=Tensor[(350, 3), float64] */;
    %35 = %31.2;
    (%32, %var_4764, meta[relay.Constant][0] /* ty=Tensor[(28), int32] */, %33, %34, %35, meta[relay.Constant][2] /* ty=Tensor[(350), float32] */, meta[relay.Constant][3] /* ty=Tensor[(216), float32] */, %var_4798)
  };
  %36(%var_4814, %var_4815) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(13, 7, 15), float32], Tensor[(350, 3), float64], Tensor[(350), float32], Tensor[(350), float32], Tensor[(216), float32], Tensor[(252), int32]) */
}

def @func_4745() -> Tensor[(16, 8, 14), float32] {
  %37 = @func_4284() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %37.0
}

def @func_1375(%var_1334: Tensor[(13, 7, 15), float64], %var_1335: Tensor[(13, 7, 15), float64], %var_1344: Tensor[(28), int32], %var_1358: Tensor[(420), float64]) -> (Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
  %38 = cast(%var_1335, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
  %39 = shape_of(%var_1334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_1334, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %43 = cast(%var_1344, dtype="int32") /* ty=Tensor[(28), int32] */;
  %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %45 = reshape(%42, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %46 = reshape(%43, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %47 = reshape(%44, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %48 = @func_547(%45, %46, %47) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %49 = cast(%var_1358, dtype="float64") /* ty=Tensor[(420), float64] */;
  %50 = reshape(%49, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), float64] */;
  %51 = @func_149(%50) /* ty=(Tensor[(14, 3, 10), float64],) */;
  %52 = mod(%40, %41) /* ty=Tensor[(13, 7, 15), float64] */;
  %53 = %48.1;
  %54 = %51.0;
  (%52, %53, meta[relay.Constant][4] /* ty=Tensor[(39), float32] */, %var_1344, meta[relay.Constant][5] /* ty=Tensor[(252), int32] */, %54, %var_1358)
}

def @func_3830(%var_3829: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) {
  %60 = fn (%var_3804: Tensor[(1, 6, 1), float64]) -> (Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) {
    %55 = cast(%var_3804, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
    %56 = cast(%var_3804, dtype="float64") /* ty=Tensor[(1, 6, 1), float64] */;
    %57 = acosh(%55) /* ty=Tensor[(1, 6, 1), float64] */;
    %58 = atanh(%56) /* ty=Tensor[(1, 6, 1), float64] */;
    %59 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
    (%57, %58, %59)
  };
  %60(%var_3829) /* ty=(Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) */
}

def @func_1172(%var_1170: Tensor[(12, 3, 6), float32], %var_1171: Tensor[(252), int32]) -> (Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) {
  @func_1168(%var_1170, %var_1171) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */
}

def @func_646(%var_641: Tensor[(15, 11, 12), uint8], %var_642: Tensor[(15, 11, 12), uint8], %var_643: Tensor[(13, 3), float32], %var_644: Tensor[(28, 1), int32], %var_645: Tensor[(252), int32]) -> (Tensor[(15, 11, 12), float32], Tensor[(2, 1, 14), float32], Tensor[(13, 3), float32], Tensor[(28, 1), int32], Tensor[(252), int32]) {
  %79 = fn (%var_622: Tensor[(15, 11, 12), uint8], %var_623: Tensor[(15, 11, 12), uint8], %var_636: Tensor[(13, 3), float32], %var_637: Tensor[(28, 1), int32], %var_638: Tensor[(252), int32]) -> (Tensor[(15, 11, 12), float32], Tensor[(2, 1, 14), float32], Tensor[(13, 3), float32], Tensor[(28, 1), int32], Tensor[(252), int32]) {
    %61 = cast(%var_623, dtype="uint8") /* ty=Tensor[(15, 11, 12), uint8] */;
    %62 = shape_of(%var_622, dtype="int32") /* ty=Tensor[(3), int32] */;
    %63 = cast(%var_622, dtype="uint8") /* ty=Tensor[(15, 11, 12), uint8] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %65 = add(%63, %64) /* ty=Tensor[(15, 11, 12), uint8] */;
    %66 = cast(%var_622, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %70 = cast(%var_636, dtype="float32") /* ty=Tensor[(13, 3), float32] */;
    %71 = cast(%var_637, dtype="int32") /* ty=Tensor[(28, 1), int32] */;
    %72 = cast(%var_638, dtype="int32") /* ty=Tensor[(252), int32] */;
    %73 = reshape(%70, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
    %74 = reshape(%71, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %75 = reshape(%72, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %76 = @func_547(%73, %74, %75) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
    %77 = floor_mod(%68, %69) /* ty=Tensor[(15, 11, 12), float32] */;
    %78 = %76.0;
    (%77, %78, %var_636, %var_637, %var_638)
  };
  %79(%var_641, %var_642, %var_643, %var_644, %var_645) /* ty=(Tensor[(15, 11, 12), float32], Tensor[(2, 1, 14), float32], Tensor[(13, 3), float32], Tensor[(28, 1), int32], Tensor[(252), int32]) */
}

def @func_2862(%var_2781: Tensor[(350), float32], %var_2816: Tensor[(216), float32], %var_2817: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  %80 = cast(%var_2781, dtype="float32") /* ty=Tensor[(350), float32] */;
  %81 = cast(%var_2781, dtype="float32") /* ty=Tensor[(350), float32] */;
  %82 = reshape(%80, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %83 = reshape(%81, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), float32] */;
  %84 = cast(%var_2816, dtype="float32") /* ty=Tensor[(216), float32] */;
  %85 = cast(%var_2817, dtype="int32") /* ty=Tensor[(252), int32] */;
  %86 = reshape(%84, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %87 = reshape(%85, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %88 = @func_1168(%86, %87) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %89 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %91 = sin(%90) /* ty=Tensor[(16, 8, 14), float64] */;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %93 = %88.5;
  %94 = cast(%93, dtype="int32") /* ty=Tensor[(252), int32] */;
  %95 = reshape(%94, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %96 = @func_2128(%95) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
  %97 = cast(%var_2817, dtype="int32") /* ty=Tensor[(252), int32] */;
  %98 = reshape(%97, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %99 = @func_2128(%98) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
  %100 = cast(%91, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %101 = cosh(%100) /* ty=Tensor[(16, 8, 14), float64] */;
  %102 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %103 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%89, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %106 = floor_mod(%104, %105) /* ty=Tensor[(16, 8, 14), float32] */;
  %107 = cast(%106, dtype="int32") /* ty=Tensor[(16, 8, 14), int32] */;
  %108 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%101, dtype="int32") /* ty=Tensor[(16, 8, 14), int32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %111 = right_shift(%109, %110) /* ty=Tensor[(16, 8, 14), int32] */;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %113 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  %114 = @func_1904(%82, %83) /* ty=Tensor[(5, 5, 14), bool] */;
  %115 = exp(%92) /* ty=Tensor[(16, 8, 14), float32] */;
  %116 = %96.2;
  %117 = %99.0;
  %118 = log10(%112) /* ty=Tensor[(16, 8, 14), float64] */;
  (%113, %114, %var_2781, %93, %var_2816, %var_2817, %115, %116, %117, %118)
}

def @func_3952(%var_3950: Tensor[(1, 28), int32], %var_3951: Tensor[(252, 1), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39, 1), float32], Tensor[(1, 28), int32], Tensor[(252, 1), int32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(39), float64]) {
  @func_3948(%var_3950, %var_3951) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39, 1), float32], Tensor[(1, 28), int32], Tensor[(252, 1), int32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(39), float64]) */
}

def @func_4882(%var_4881: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) {
  %124 = fn (%var_4863: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) {
    %119 = cast(%var_4863, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
    %120 = log2(%119) /* ty=Tensor[(4, 16, 16), float64] */;
    %121 = cast(%120, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
    %122 = sigmoid(%121) /* ty=Tensor[(4, 16, 16), float64] */;
    %123 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
    (%122, %123)
  };
  %124(%var_4881) /* ty=(Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) */
}

def @func_5256(%var_5232: Tensor[(8, 12, 15), uint32], %var_5233: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), uint32],) {
  %125 = cast(%var_5233, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %126 = shape_of(%var_5232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_5232, dtype="uint32") /* ty=Tensor[(8, 12, 15), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %129 = bitwise_or(%127, %128) /* ty=Tensor[(8, 12, 15), uint32] */;
  (%129,)
}

def @func_5976() -> (Tensor[(16, 8, 14), float32],) {
  %130 = @func_5754() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %131 = %130.0;
  (%131,)
}

def @func_3203() -> Tensor[(16, 8, 14), float32] {
  @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_6043() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) {
  %141 = fn () -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) {
    %132 = @func_4745() /* ty=Tensor[(16, 8, 14), float32] */;
    %133 = cast(%132, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %134 = reshape(%133, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
    %135 = @func_2337(%134) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
    %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
    %137 = reshape(%136, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %138 = @func_2128(%137) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */;
    %139 = %135.0;
    %140 = %138.1;
    (%132, %139, %140, meta[relay.Constant][7] /* ty=Tensor[(252), int32] */)
  };
  %141() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) */
}

def @func_3259() -> Tensor[(16, 8, 14), float32] {
  %143 = fn () -> Tensor[(16, 8, 14), float32] {
    %142 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
    %142.0
  };
  %143() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_5447(%var_5445: Tensor[(12, 78), float64], %var_5446: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(350), float32], Tensor[(350), float32], Tensor[(12, 78), float32]) {
  @func_5443(%var_5445, %var_5446) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(350), float32], Tensor[(350), float32], Tensor[(12, 78), float32]) */
}

def @func_3555() -> (Tensor[(16, 8, 14), float32],) {
  %144 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  (%144,)
}

def @func_1908(%var_1906: Tensor[(5, 5, 14), float32], %var_1907: Tensor[(5, 5, 14), float32]) -> Tensor[(5, 5, 14), bool] {
  @func_1904(%var_1906, %var_1907) /* ty=Tensor[(5, 5, 14), bool] */
}

def @func_3078() -> (Tensor[(16, 8, 14), float32],) {
  %146 = fn () -> (Tensor[(16, 8, 14), float32],) {
    %145 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
    (%145,)
  };
  %146() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_6712() -> Tensor[(16, 8, 14), float32] {
  @func_6710() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3413() -> (Tensor[(16, 8, 14), float32],) {
  %147 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %148 = %147.0;
  (%148,)
}

def @func_3185(%var_3183: Tensor[(400), int16], %var_3184: Tensor[(216), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(400), int16], Tensor[(39), float32], Tensor[(252), int32], Tensor[(1, 350), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(70, 15), float32]) {
  %175 = fn (%var_3109: Tensor[(400), int16], %var_3140: Tensor[(216), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(400), int16], Tensor[(39), float32], Tensor[(252), int32], Tensor[(1, 350), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(70, 15), float32]) {
    %149 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %150 = cast(%var_3109, dtype="int16") /* ty=Tensor[(400), int16] */;
    %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
    %152 = reshape(%150, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), int16] */;
    %153 = reshape(%151, newshape=[39]) /* ty=Tensor[(39), float32] */;
    %154 = @func_793(%152, %153) /* ty=(Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) */;
    %155 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 350), float32] */, dtype="float32") /* ty=Tensor[(1, 350), float32] */;
    %156 = cast(%var_3140, dtype="float32") /* ty=Tensor[(216), float32] */;
    %157 = cast(meta[relay.Constant][10] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
    %158 = reshape(%155, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %159 = reshape(%156, newshape=[216]) /* ty=Tensor[(216), float32] */;
    %160 = reshape(%157, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %161 = @func_2862(%158, %159, %160) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
    %162 = %149.0;
    %163 = cast(%162, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %164 = reshape(%163, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
    %165 = @func_2337(%164) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
    %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(70, 15), float32] */, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
    %167 = %154.3;
    %168 = cast(%167, dtype="int32") /* ty=Tensor[(28), int32] */;
    %169 = reshape(%166, newshape=[350, 3]) /* ty=Tensor[(350, 3), float32] */;
    %170 = reshape(%168, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %171 = @func_2088(%169, %170) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) */;
    %172 = %161.5;
    %173 = %165.0;
    %174 = %171.3;
    (%162, %167, %var_3109, meta[relay.Constant][8] /* ty=Tensor[(39), float32] */, %172, meta[relay.Constant][9] /* ty=Tensor[(1, 350), float32] */, %var_3140, meta[relay.Constant][10] /* ty=Tensor[(252), int32] */, %173, %174, meta[relay.Constant][11] /* ty=Tensor[(70, 15), float32] */)
  };
  %175(%var_3183, %var_3184) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(400), int16], Tensor[(39), float32], Tensor[(252), int32], Tensor[(1, 350), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(70, 15), float32]) */
}

def @func_5135(%var_5103: Tensor[(9, 14, 7), float64], %var_5104: Tensor[(9, 14, 7), float64]) -> (Tensor[(9, 14, 7), float32], Tensor[(9, 14, 7), float64], Tensor[(2, 208), uint32]) {
  %176 = cast(%var_5104, dtype="bool") /* ty=Tensor[(9, 14, 7), bool] */;
  %177 = shape_of(%var_5103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_5103, dtype="bool") /* ty=Tensor[(9, 14, 7), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %180 = not_equal(%178, %179) /* ty=Tensor[(9, 14, 7), bool] */;
  %181 = cast(%180, dtype="float32") /* ty=Tensor[(9, 14, 7), float32] */;
  %182 = cast(%180, dtype="float64") /* ty=Tensor[(9, 14, 7), float64] */;
  %183 = shape_of(%var_5104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_5104, dtype="float64") /* ty=Tensor[(9, 14, 7), float64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %186 = @func_4241() /* ty=(Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) */;
  %187 = erf(%181) /* ty=Tensor[(9, 14, 7), float32] */;
  %188 = divide(%184, %185) /* ty=Tensor[(9, 14, 7), float64] */;
  %189 = %186.4;
  (%187, %188, %189)
}

def @func_2705(%var_2692: Tensor[(16, 8, 14), float32]) -> Tensor[(16, 8, 14), float32] {
  %190 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %191 = cast(%var_2692, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%193, %194) /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3029() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %199 = fn () -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
    %195 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
    %196 = cast(%195, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %197 = asin(%196) /* ty=Tensor[(16, 8, 14), float32] */;
    %198 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
    (%197, %198)
  };
  %199() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */
}

def @func_2339(%var_2338: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) {
  %212 = fn (%var_2325: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) {
    %200 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
    %201 = cast(%200, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
    %202 = cast(%200, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
    %203 = rsqrt(%202) /* ty=Tensor[(16, 8, 14), float64] */;
    %204 = cast(%203, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %205 = tan(%204) /* ty=Tensor[(16, 8, 14), float32] */;
    %206 = cast(%var_2325, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
    %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
    %208 = cast(%205, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
    %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %210 = atan(%201) /* ty=Tensor[(16, 8, 14), float64] */;
    %211 = less(%208, %209) /* ty=Tensor[(16, 8, 14), bool] */;
    (%210, %211)
  };
  %212(%var_2338) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */
}

def @func_4284() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %213 = @func_3640() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %214 = %213.0;
  %215 = @func_3258() /* ty=Tensor[(16, 8, 14), float32] */;
  (%214, %215)
}

def @func_5139(%var_5137: Tensor[(9, 14, 7), float64], %var_5138: Tensor[(9, 14, 7), float64]) -> (Tensor[(9, 14, 7), float32], Tensor[(9, 14, 7), float64], Tensor[(2, 208), uint32]) {
  @func_5135(%var_5137, %var_5138) /* ty=(Tensor[(9, 14, 7), float32], Tensor[(9, 14, 7), float64], Tensor[(2, 208), uint32]) */
}

def @func_5204() -> Tensor[(16, 8, 14), float32] {
  @func_5202() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_5578(%var_5560: int8, %var_5561: Tensor[(12, 10, 16), int8]) -> Tensor[(12, 10, 16), bool] {
  %216 = cast(%var_5560, dtype="bool") /* ty=bool */;
  %217 = cast(%var_5561, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  equal(%216, %217) /* ty=Tensor[(12, 10, 16), bool] */
}

def @func_5280() -> (Tensor[(16, 8, 14), float32],) {
  %218 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %219 = %218.1;
  (%219,)
}

def @func_6157() -> (Tensor[(16, 8, 14), float32],) {
  @func_6155() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_5559() -> (Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) {
  %224 = fn () -> (Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) {
    %220 = @func_5313() /* ty=(Tensor[(9, 15, 11), float64],) */;
    %221 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
    %222 = %220.0;
    %223 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
    (%221, %222, %223)
  };
  %224() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) */
}

def @main(%var_6727: Tensor[(16, 12, 6), uint8], %var_6728: Tensor[(16, 12, 6), uint8]) -> Tensor[(16, 12, 6), bool] {
  %225 = cast(%var_6728, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %226 = shape_of(%var_6727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6727, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%227, %228) /* ty=Tensor[(16, 12, 6), bool] */
}

def @func_1168(%var_1097: Tensor[(12, 3, 6), float32], %var_1152: Tensor[(252), int32]) -> (Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) {
  %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 400), int16] */, dtype="int16") /* ty=Tensor[(1, 400), int16] */;
  %230 = cast(meta[relay.Constant][13] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %231 = reshape(%229, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), int16] */;
  %232 = reshape(%230, newshape=[39]) /* ty=Tensor[(39), float32] */;
  %233 = @func_793(%231, %232) /* ty=(Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) */;
  %234 = cast(%var_1097, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %235 = sqrt(%234) /* ty=Tensor[(12, 3, 6), float32] */;
  %236 = cast(%235, dtype="uint64") /* ty=Tensor[(12, 3, 6), uint64] */;
  %237 = shape_of(%var_1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_1097, dtype="uint64") /* ty=Tensor[(12, 3, 6), uint64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %240 = left_shift(%238, %239) /* ty=Tensor[(12, 3, 6), uint64] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(12, 3, 6), float32] */;
  %242 = %233.3;
  %243 = cast(%242, dtype="int32") /* ty=Tensor[(28), int32] */;
  %244 = cast(%242, dtype="int32") /* ty=Tensor[(28), int32] */;
  %245 = cast(%var_1152, dtype="int32") /* ty=Tensor[(252), int32] */;
  %246 = reshape(%243, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %247 = reshape(%244, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %248 = reshape(%245, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %249 = @func_176(%246, %247, %248) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %250 = acosh(%241) /* ty=Tensor[(12, 3, 6), float32] */;
  %251 = %249.1;
  (%242, meta[relay.Constant][12] /* ty=Tensor[(1, 400), int16] */, meta[relay.Constant][13] /* ty=Tensor[(39), float32] */, %250, %251, %var_1152)
}

def @func_2252(%var_2205: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) {
  %252 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %253 = cast(%var_2205, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="bool") /* ty=Tensor[(16, 8, 14), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = cast(%252, dtype="int64") /* ty=Tensor[(16, 8, 14), int64] */;
  %258 = shape_of(%var_2205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_2205, dtype="int64") /* ty=Tensor[(16, 8, 14), int64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %261 = logical_and(%255, %256) /* ty=Tensor[(16, 8, 14), bool] */;
  %262 = subtract(%259, %260) /* ty=Tensor[(16, 8, 14), int64] */;
  %263 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%261, %262, %263)
}

def @func_149(%var_121: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
  %264 = cast(%var_121, dtype="float64") /* ty=Tensor[(14, 3, 10), float64] */;
  %265 = sinh(%264) /* ty=Tensor[(14, 3, 10), float64] */;
  (%265,)
}

def @func_1663(%var_1660: Tensor[(6, 1), int8], %var_1661: Tensor[(28), int32], %var_1662: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) {
  %280 = fn (%var_1627: Tensor[(6, 1), int8], %var_1645: Tensor[(28), int32], %var_1646: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) {
    %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
    %267 = cast(%var_1645, dtype="int32") /* ty=Tensor[(28), int32] */;
    %268 = cast(%var_1646, dtype="int32") /* ty=Tensor[(252), int32] */;
    %269 = reshape(%266, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
    %270 = reshape(%267, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %271 = reshape(%268, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %272 = @func_547(%269, %270, %271) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
    %273 = cast(meta[relay.Constant][15] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %274 = cast(%var_1627, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
    %275 = equal(%273, %274) /* ty=Tensor[(6, 1), bool] */;
    %276 = cast(%275, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
    %277 = cast(%var_1646, dtype="float64") /* ty=Tensor[(252), float64] */;
    %278 = %272.4;
    %279 = mod(%276, %277) /* ty=Tensor[(6, 252), float64] */;
    (%278, meta[relay.Constant][14] /* ty=Tensor[(39), float32] */, %var_1645, %279)
  };
  %280(%var_1660, %var_1661, %var_1662) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) */
}

def @func_3774() -> Tensor[(16, 8, 14), float32] {
  %281 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_3203() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %281() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4125(%var_4116: Tensor[(28), int32], %var_4117: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(252), int32]) {
  %282 = cast(meta[relay.Constant][16] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %283 = cast(%var_4116, dtype="int32") /* ty=Tensor[(28), int32] */;
  %284 = cast(%var_4117, dtype="int32") /* ty=Tensor[(252), int32] */;
  %285 = reshape(%282, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %286 = reshape(%283, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %287 = reshape(%284, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %288 = @func_427(%285, %286, %287) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %289 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  %290 = %288.0;
  (%289, %290, meta[relay.Constant][16] /* ty=Tensor[(1050), float32] */, %var_4116, %var_4117)
}

def @func_1400(%var_1398: Tensor[(12, 2, 2), float64]) -> Tensor[(12, 2, 2), float64] {
  @func_1397(%var_1398) /* ty=Tensor[(12, 2, 2), float64] */
}

def @func_1397(%var_1393: Tensor[(12, 2, 2), float64]) -> Tensor[(12, 2, 2), float64] {
  %291 = cast(%var_1393, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %292 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(12, 2, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  minimum(%293, %294) /* ty=Tensor[(12, 2, 2), float64] */
}

def @func_3428(%var_3427: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64],) {
  %297 = fn (%var_3418: Tensor[(15, 1, 7), float64]) -> (Tensor[(15, 1, 7), float64],) {
    %295 = cast(%var_3418, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
    %296 = log(%295) /* ty=Tensor[(15, 1, 7), float64] */;
    (%296,)
  };
  %297(%var_3427) /* ty=(Tensor[(15, 1, 7), float64],) */
}

def @func_4581() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  @func_4579() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */
}

def @func_5893(%var_5890: Tensor[(6), int8], %var_5891: Tensor[(28), int32], %var_5892: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(3, 84), int32], Tensor[(216), float32], Tensor[(420), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), float32], Tensor[(15, 3, 5), float32], Tensor[(225), float32], Tensor[(16, 8, 14), float32]) {
  %320 = fn (%var_5827: Tensor[(6), int8], %var_5828: Tensor[(28), int32], %var_5832: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(3, 84), int32], Tensor[(216), float32], Tensor[(420), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), float32], Tensor[(15, 3, 5), float32], Tensor[(225), float32], Tensor[(16, 8, 14), float32]) {
    %298 = cast(%var_5827, dtype="int8") /* ty=Tensor[(6), int8] */;
    %299 = cast(%var_5828, dtype="int32") /* ty=Tensor[(28), int32] */;
    %300 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 84), int32] */, dtype="int32") /* ty=Tensor[(3, 84), int32] */;
    %301 = reshape(%298, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
    %302 = reshape(%299, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %303 = reshape(%300, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %304 = @func_1659(%301, %302, %303) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) */;
    %305 = cast(%var_5832, dtype="float64") /* ty=Tensor[(420), float64] */;
    %306 = reshape(%305, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %307 = @func_4336(%306) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) */;
    %308 = cast(meta[relay.Constant][19] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %309 = reshape(%308, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), float32] */;
    %310 = @func_3510(%309) /* ty=(Tensor[(12, 11, 16), float32],) */;
    %311 = cast(meta[relay.Constant][20] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
    %312 = reshape(%311, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), float32] */;
    %313 = @func_5221(%312) /* ty=(Tensor[(15, 3, 5), float32],) */;
    %314 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
    %315 = %304.2;
    %316 = %307.2;
    %317 = %310.0;
    %318 = %313.0;
    %319 = @func_3297() /* ty=Tensor[(16, 8, 14), float32] */;
    (%314, %315, %var_5827, %var_5828, meta[relay.Constant][18] /* ty=Tensor[(3, 84), int32] */, %316, %var_5832, %317, meta[relay.Constant][19] /* ty=Tensor[(2112), float32] */, %318, meta[relay.Constant][20] /* ty=Tensor[(225), float32] */, %319)
  };
  %320(%var_5890, %var_5891, %var_5892) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(3, 84), int32], Tensor[(216), float32], Tensor[(420), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), float32], Tensor[(15, 3, 5), float32], Tensor[(225), float32], Tensor[(16, 8, 14), float32]) */
}

def @func_2092(%var_2090: Tensor[(350, 3), float32], %var_2091: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) {
  @func_2088(%var_2090, %var_2091) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) */
}

def @func_2867(%var_2864: Tensor[(350), float32], %var_2865: Tensor[(216), float32], %var_2866: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  @func_2862(%var_2864, %var_2865, %var_2866) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(350), float32], Tensor[(252), int32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(216), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */
}

def @func_4129(%var_4127: Tensor[(28), int32], %var_4128: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(252), int32]) {
  @func_4125(%var_4127, %var_4128) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(252), int32]) */
}

def @func_5808(%var_5806: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(7, 195), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32]) {
  @func_5805(%var_5806) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(7, 195), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32]) */
}

def @func_6644(%var_6640: Tensor[(1050), float32], %var_6641: Tensor[(26), uint32], %var_6642: Tensor[(416), uint32], %var_6643: Tensor[(1024), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(14, 2), int32], Tensor[(10, 66), float64], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %341 = fn (%var_6598: Tensor[(1050), float32], %var_6600: Tensor[(26), uint32], %var_6601: Tensor[(416), uint32], %var_6605: Tensor[(1024), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(14, 2), int32], Tensor[(10, 66), float64], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
    %321 = @func_5626() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %322 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %323 = cast(%var_6598, dtype="float32") /* ty=Tensor[(1050), float32] */;
    %324 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %325 = cast(%var_6600, dtype="uint32") /* ty=Tensor[(26), uint32] */;
    %326 = cast(%var_6601, dtype="uint32") /* ty=Tensor[(416), uint32] */;
    %327 = cast(meta[relay.Constant][23] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %328 = reshape(%322, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
    %329 = reshape(%323, newshape=[1050]) /* ty=Tensor[(1050), float32] */;
    %330 = reshape(%324, newshape=[14, 2]) /* ty=Tensor[(14, 2), int32] */;
    %331 = reshape(%325, newshape=[26]) /* ty=Tensor[(26), uint32] */;
    %332 = reshape(%326, newshape=[416]) /* ty=Tensor[(416), uint32] */;
    %333 = reshape(%327, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %334 = @func_4509(%328, %329, %330, %331, %332, %333) /* ty=(Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) */;
    %335 = cast(%var_6605, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %336 = reshape(%335, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
    %337 = @func_4880(%336) /* ty=(Tensor[(4, 16, 16), float64], Tensor[(16, 8, 14), float32]) */;
    %338 = %321.0;
    %339 = %334.2;
    %340 = %337.0;
    (%338, %339, meta[relay.Constant][21] /* ty=Tensor[(10, 66), float64] */, %var_6598, meta[relay.Constant][22] /* ty=Tensor[(28), int32] */, %var_6600, %var_6601, meta[relay.Constant][23] /* ty=Tensor[(6), float64] */, %340, %var_6605)
  };
  %341(%var_6640, %var_6641, %var_6642, %var_6643) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(14, 2), int32], Tensor[(10, 66), float64], Tensor[(1050), float32], Tensor[(28), int32], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */
}

def @func_6274() -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  @func_6272() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */
}

def @func_2591(%var_2581: Tensor[(6), int8], %var_2582: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(252), int32]) {
  %342 = cast(%var_2581, dtype="int8") /* ty=Tensor[(6), int8] */;
  %343 = cast(%var_2582, dtype="int32") /* ty=Tensor[(28), int32] */;
  %344 = cast(meta[relay.Constant][24] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %345 = reshape(%342, newshape=[6, 1]) /* ty=Tensor[(6, 1), int8] */;
  %346 = reshape(%343, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %347 = reshape(%344, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %348 = @func_1659(%345, %346, %347) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 252), float64]) */;
  %349 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  %350 = %348.1;
  (%349, %350, %var_2581, %var_2582, meta[relay.Constant][24] /* ty=Tensor[(252), int32] */)
}

def @func_2255(%var_2253: Tensor[(16, 8, 14), float32]) -> (Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) {
  @func_2252(%var_2253) /* ty=(Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) */
}

def @func_3948(%var_3909: Tensor[(1, 28), int32], %var_3910: Tensor[(252, 1), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39, 1), float32], Tensor[(1, 28), int32], Tensor[(252, 1), int32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(39), float64]) {
  %351 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %352 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %353 = cast(meta[relay.Constant][25] /* ty=Tensor[(39, 1), float32] */, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
  %354 = cast(%var_3909, dtype="int32") /* ty=Tensor[(1, 28), int32] */;
  %355 = cast(%var_3910, dtype="int32") /* ty=Tensor[(252, 1), int32] */;
  %356 = reshape(%353, newshape=[39]) /* ty=Tensor[(39), float32] */;
  %357 = reshape(%354, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %358 = reshape(%355, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %359 = @func_2516(%356, %357, %358) /* ty=(Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(39), float64] */;
  %362 = %351.0;
  %363 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %364 = %352.0;
  %365 = log10(%361) /* ty=Tensor[(39), float64] */;
  (%362, meta[relay.Constant][25] /* ty=Tensor[(39, 1), float32] */, %var_3909, %var_3910, %363, %364, %365)
}

def @func_5805(%var_5798: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(7, 195), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32]) {
  %366 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %367 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %368 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %369 = cast(%var_5798, dtype="int32") /* ty=Tensor[(28), int32] */;
  %370 = cast(meta[relay.Constant][27] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %371 = reshape(%367, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %372 = reshape(%368, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
  %373 = reshape(%369, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %374 = reshape(%370, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %375 = @func_1375(%371, %372, %373, %374) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
  %376 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %377 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %378 = reshape(%376, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %379 = reshape(%377, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %380 = @func_5256(%378, %379) /* ty=(Tensor[(8, 12, 15), uint32],) */;
  %381 = %366.0;
  %382 = %375.2;
  %383 = %380.0;
  (%381, %382, meta[relay.Constant][26] /* ty=Tensor[(7, 195), float64] */, %var_5798, meta[relay.Constant][27] /* ty=Tensor[(420), float64] */, %383, meta[relay.Constant][28] /* ty=Tensor[(1440), uint32] */)
}

def @func_2681() -> Tensor[(16, 8, 14), float32] {
  %384 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %384() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4986(%var_4983: Tensor[(39), float32], %var_4984: Tensor[(28), int32], %var_4985: Tensor[(1, 252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(12, 2, 2), float64], Tensor[(48), float64], Tensor[(4, 14, 3), bool], Tensor[(168), float64], Tensor[(1050), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(1, 252), int32]) {
  @func_4981(%var_4983, %var_4984, %var_4985) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(12, 2, 2), float64], Tensor[(48), float64], Tensor[(4, 14, 3), bool], Tensor[(168), float64], Tensor[(1050), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(1, 252), int32]) */
}

def @func_6422(%var_6421: Tensor[(936), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), float32], Tensor[(350), bool], Tensor[(936), float64]) {
  %411 = fn (%var_6416: Tensor[(936), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), float32], Tensor[(350), bool], Tensor[(936), float64]) {
    %385 = @func_6155() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %386 = cast(meta[relay.Constant][29] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %387 = cast(meta[relay.Constant][30] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %388 = reshape(%386, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
    %389 = reshape(%387, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %390 = @func_3793(%388, %389) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
    %391 = %385.0;
    %392 = cast(%391, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %393 = reshape(%392, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
    %394 = @func_2252(%393) /* ty=(Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), int64], Tensor[(16, 8, 14), float32]) */;
    %395 = @func_6228() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) */;
    %396 = cast(meta[relay.Constant][30] /* ty=Tensor[(350), float32] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %397 = sin(%396) /* ty=Tensor[(350), float64] */;
    %398 = cast(meta[relay.Constant][31] /* ty=Tensor[(350), float64] */, dtype="bool") /* ty=Tensor[(350), bool] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(1), int32] */;
    %400 = cast(%397, dtype="bool") /* ty=Tensor[(350), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), bool] */;
    %402 = cast(%var_6416, dtype="float64") /* ty=Tensor[(936), float64] */;
    %403 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(936), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %404 = cast(meta[relay.Constant][29] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?), float64] */;
    %406 = %390.1;
    %407 = %394.0;
    %408 = %395.1;
    %409 = logical_and(%400, %401) /* ty=Tensor[(350), bool] */;
    %410 = mod(%404, %405) /* ty=Tensor[(936), float64] */;
    (%391, %406, %407, %408, %409, %410)
  };
  %411(%var_6421) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(5, 5, 14), bool], Tensor[(16, 8, 14), bool], Tensor[(16, 8, 14), float32], Tensor[(350), bool], Tensor[(936), float64]) */
}

def @func_5185() -> Tensor[(16, 8, 14), float64] {
  @func_5183() /* ty=Tensor[(16, 8, 14), float64] */
}

def @func_3642() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  @func_3640() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */
}

def @func_5282() -> (Tensor[(16, 8, 14), float32],) {
  @func_5280() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_2708(%var_2706: Tensor[(16, 8, 14), float32]) -> Tensor[(16, 8, 14), float32] {
  @func_2705(%var_2706) /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4655(%var_4653: Tensor[(39, 1), float32], %var_4654: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(39, 420), bool], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(5, 5, 14), bool], Tensor[(1, 936), float64], Tensor[(350), float32]) {
  %436 = fn (%var_4607: Tensor[(39, 1), float32], %var_4650: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(39, 420), bool], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(5, 5, 14), bool], Tensor[(1, 936), float64], Tensor[(350), float32]) {
    %412 = cast(%var_4607, dtype="bool") /* ty=Tensor[(39, 1), bool] */;
    %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), float64] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %414 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
    %415 = cast(meta[relay.Constant][32] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %416 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %417 = cast(%var_4607, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
    %418 = reshape(%415, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %419 = reshape(%416, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %420 = reshape(%417, newshape=[39, 1]) /* ty=Tensor[(39, 1), float32] */;
    %421 = @func_2642(%418, %419, %420) /* ty=(Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) */;
    %422 = %421.2;
    %423 = cast(%422, dtype="float32") /* ty=Tensor[(13, 7, 15), float32] */;
    %424 = acos(%423) /* ty=Tensor[(13, 7, 15), float32] */;
    %425 = cast(%424, dtype="float64") /* ty=Tensor[(13, 7, 15), float64] */;
    %426 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 936), float64] */, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
    %427 = cast(%var_4650, dtype="float32") /* ty=Tensor[(350), float32] */;
    %428 = reshape(%426, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
    %429 = reshape(%427, newshape=[350]) /* ty=Tensor[(350), float32] */;
    %430 = @func_3793(%428, %429) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
    %431 = @func_3258() /* ty=Tensor[(16, 8, 14), float32] */;
    %432 = greater(%412, %413) /* ty=Tensor[(39, 420), bool] */;
    %433 = %414.1;
    %434 = log2(%425) /* ty=Tensor[(13, 7, 15), float64] */;
    %435 = %430.1;
    (%431, meta[relay.Constant][32] /* ty=Tensor[(28), int32] */, %432, %433, %434, %435, meta[relay.Constant][34] /* ty=Tensor[(1, 936), float64] */, %var_4650)
  };
  %436(%var_4653, %var_4654) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(39, 420), bool], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(5, 5, 14), bool], Tensor[(1, 936), float64], Tensor[(350), float32]) */
}

def @func_4861(%var_4860: Tensor[(4, 14, 3), float64]) -> (Tensor[(4, 14, 3), bool],) {
  %449 = fn (%var_4836: Tensor[(4, 14, 3), float64]) -> (Tensor[(4, 14, 3), bool],) {
    %437 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 3), float64] */;
    %438 = log(%437) /* ty=Tensor[(4, 14, 3), float64] */;
    %439 = cast(%var_4836, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
    %441 = cast(%438, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %443 = not_equal(%441, %442) /* ty=Tensor[(4, 14, 3), bool] */;
    %444 = cast(%443, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %445 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(4, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %448 = less_equal(%446, %447) /* ty=Tensor[(4, 14, 3), bool] */;
    (%448,)
  };
  %449(%var_4860) /* ty=(Tensor[(4, 14, 3), bool],) */
}

def @func_5223(%var_5222: Tensor[(15, 3, 5), float32]) -> (Tensor[(15, 3, 5), float32],) {
  %459 = fn (%var_5208: Tensor[(15, 3, 5), float32]) -> (Tensor[(15, 3, 5), float32],) {
    %450 = cast(%var_5208, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %451 = atanh(%450) /* ty=Tensor[(15, 3, 5), float32] */;
    %452 = cast(%451, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %453 = asin(%452) /* ty=Tensor[(15, 3, 5), float32] */;
    %454 = cast(%451, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%453, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %458 = multiply(%456, %457) /* ty=Tensor[(15, 3, 5), float32] */;
    (%458,)
  };
  %459(%var_5222) /* ty=(Tensor[(15, 3, 5), float32],) */
}

def @func_5582(%var_5580: int8, %var_5581: Tensor[(12, 10, 16), int8]) -> Tensor[(12, 10, 16), bool] {
  @func_5578(%var_5580, %var_5581) /* ty=Tensor[(12, 10, 16), bool] */
}

def @func_6512() -> Tensor[(16, 8, 14), float32] {
  %460 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_2136() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %460() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_180(%var_177: Tensor[(2, 1, 14), int32], %var_178: Tensor[(2, 1, 14), int32], %var_179: Tensor[(2, 9, 14), int32]) -> (Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) {
  %471 = fn (%var_154: Tensor[(2, 1, 14), int32], %var_155: Tensor[(2, 1, 14), int32], %var_165: Tensor[(2, 9, 14), int32]) -> (Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) {
    %461 = cast(%var_155, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
    %462 = shape_of(%var_154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%var_154, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %465 = cast(%var_155, dtype="bool") /* ty=Tensor[(2, 1, 14), bool] */;
    %466 = cast(%var_165, dtype="bool") /* ty=Tensor[(2, 9, 14), bool] */;
    %467 = cast(%var_155, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
    %468 = less_equal(%463, %464) /* ty=Tensor[(2, ?, 14), bool] */;
    %469 = greater(%465, %466) /* ty=Tensor[(2, 9, 14), bool] */;
    %470 = sin(%467) /* ty=Tensor[(2, 1, 14), float32] */;
    (%468, %469, %470)
  };
  %471(%var_177, %var_178, %var_179) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */
}

def @func_427(%var_406: Tensor[(5, 14, 15), float32], %var_416: Tensor[(28), int32], %var_417: Tensor[(252), int32]) -> (Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) {
  %472 = cast(%var_406, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %473 = cast(%var_416, dtype="int32") /* ty=Tensor[(28), int32] */;
  %474 = cast(%var_416, dtype="int32") /* ty=Tensor[(28), int32] */;
  %475 = cast(%var_417, dtype="int32") /* ty=Tensor[(252), int32] */;
  %476 = reshape(%473, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %477 = reshape(%474, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %478 = reshape(%475, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %479 = @func_176(%476, %477, %478) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %480 = cosh(%472) /* ty=Tensor[(5, 14, 15), float32] */;
  %481 = %479.1;
  (%480, %481, %var_416, %var_417)
}

def @func_5492() -> Tensor[(16, 8, 14), float32] {
  %482 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_5202() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %482() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4555(%var_4548: Tensor[(10, 14, 8), float32]) -> (Tensor[(10, 14, 8), float32],) {
  %483 = cast(%var_4548, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %484 = atan(%483) /* ty=Tensor[(10, 14, 8), float32] */;
  (%484,)
}

def @func_6229() -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) {
  %489 = fn () -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) {
    %485 = @func_6042() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) */;
    %486 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %487 = %485.1;
    %488 = %486.0;
    (%487, %488)
  };
  %489() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32]) */
}

def @func_1381(%var_1377: Tensor[(13, 7, 15), float64], %var_1378: Tensor[(13, 7, 15), float64], %var_1379: Tensor[(28), int32], %var_1380: Tensor[(420), float64]) -> (Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) {
  @func_1375(%var_1377, %var_1378, %var_1379, %var_1380) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */
}

def @func_3513(%var_3511: Tensor[(12, 11, 16), float32]) -> (Tensor[(12, 11, 16), float32],) {
  @func_3510(%var_3511) /* ty=(Tensor[(12, 11, 16), float32],) */
}

def @func_5023(%var_5021: Tensor[(28), int32], %var_5022: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(39), float32]) {
  @func_5019(%var_5021, %var_5022) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(39), float32]) */
}

def @func_4509(%var_4356: Tensor[(10, 11, 6), float64], %var_4389: Tensor[(1050), float32], %var_4390: Tensor[(14, 2), int32], %var_4446: Tensor[(26), uint32], %var_4447: Tensor[(416), uint32], %var_4448: Tensor[(6), float64]) -> (Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) {
  %490 = cast(%var_4389, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %491 = cast(%var_4390, dtype="int32") /* ty=Tensor[(14, 2), int32] */;
  %492 = cast(meta[relay.Constant][36] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %493 = reshape(%490, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %494 = reshape(%491, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %495 = reshape(%492, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %496 = @func_427(%493, %494, %495) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %497 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %498 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = cast(%var_4446, dtype="uint32") /* ty=Tensor[(26), uint32] */;
  %503 = cast(%var_4447, dtype="uint32") /* ty=Tensor[(416), uint32] */;
  %504 = cast(%var_4448, dtype="float64") /* ty=Tensor[(6), float64] */;
  %505 = reshape(%502, newshape=[2, 1, 13]) /* ty=Tensor[(2, 1, 13), uint32] */;
  %506 = reshape(%503, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), uint32] */;
  %507 = reshape(%504, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %508 = @func_4055(%505, %506, %507) /* ty=(Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) */;
  %509 = cast(meta[relay.Constant][38] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %510 = cast(meta[relay.Constant][36] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %511 = reshape(%509, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %512 = reshape(%510, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %513 = @func_1168(%511, %512) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %514 = cast(%var_4389, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %515 = cast(%var_4390, dtype="int32") /* ty=Tensor[(14, 2), int32] */;
  %516 = cast(meta[relay.Constant][36] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %517 = reshape(%514, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %518 = reshape(%515, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %519 = reshape(%516, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %520 = @func_427(%517, %518, %519) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %521 = cast(%var_4356, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %522 = atan(%521) /* ty=Tensor[(10, 11, 6), float64] */;
  %523 = cast(%var_4356, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %524 = exp(%523) /* ty=Tensor[(10, 11, 6), float64] */;
  %525 = cast(%var_4356, dtype="int8") /* ty=Tensor[(10, 11, 6), int8] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="int8") /* ty=Tensor[(10, 11, 6), int8] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %529 = left_shift(%527, %528) /* ty=Tensor[(10, 11, 6), int8] */;
  %530 = cast(%529, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %531 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%522, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %534 = less(%532, %533) /* ty=Tensor[(10, 11, 6), bool] */;
  %535 = cast(%524, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%534, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %539 = %520.3;
  %540 = cast(%539, dtype="int32") /* ty=Tensor[(252), int32] */;
  %541 = reshape(%540, newshape=[3, 84]) /* ty=Tensor[(3, 84), int32] */;
  %542 = @func_935(%541) /* ty=(Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) */;
  %543 = %496.2;
  %544 = floor_divide(%500, %501) /* ty=Tensor[(16, 8, 14), float64] */;
  %545 = %508.0;
  %546 = %513.3;
  %547 = @func_3047() /* ty=Tensor[(16, 8, 14), float32] */;
  %548 = floor_mod(%537, %538) /* ty=Tensor[(10, 11, 6), float64] */;
  %549 = %542.0;
  (%543, %var_4389, %var_4390, meta[relay.Constant][36] /* ty=Tensor[(252), int32] */, %544, %545, %var_4446, %var_4447, %var_4448, %546, meta[relay.Constant][38] /* ty=Tensor[(216), float32] */, %539, %547, %548, %549)
}

def @func_5903() -> (Tensor[(16, 8, 14), float32],) {
  %550 = @func_5280() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %551 = %550.0;
  (%551,)
}

def @func_3048() -> Tensor[(16, 8, 14), float32] {
  %552 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_2136() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %552() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3557() -> (Tensor[(16, 8, 14), float32],) {
  @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_3205() -> Tensor[(16, 8, 14), float32] {
  @func_3203() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3640() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %553 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %554 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %555 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %556 = %553.0;
  (%554, %555, %556)
}

def @func_5627() -> (Tensor[(16, 8, 14), float32],) {
  %559 = fn () -> (Tensor[(16, 8, 14), float32],) {
    %557 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
    %558 = %557.1;
    (%558,)
  };
  %559() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_3510(%var_3502: Tensor[(12, 11, 16), float32]) -> (Tensor[(12, 11, 16), float32],) {
  %560 = cast(%var_3502, dtype="float32") /* ty=Tensor[(12, 11, 16), float32] */;
  %561 = rsqrt(%560) /* ty=Tensor[(12, 11, 16), float32] */;
  (%561,)
}

def @func_2184(%var_2162: Tensor[(16, 5, 2), uint32], %var_2163: Tensor[(16, 5, 2), uint32]) -> (Tensor[(16, 5, 2), int16],) {
  %562 = cast(%var_2163, dtype="uint32") /* ty=Tensor[(16, 5, 2), uint32] */;
  %563 = shape_of(%var_2162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_2162, dtype="uint32") /* ty=Tensor[(16, 5, 2), uint32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %566 = minimum(%564, %565) /* ty=Tensor[(16, 5, 2), uint32] */;
  %567 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 5, 2), uint32] */, dtype="int16") /* ty=Tensor[(16, 5, 2), int16] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="int16") /* ty=Tensor[(16, 5, 2), int16] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %571 = logical_xor(%569, %570) /* ty=Tensor[(16, 5, 2), int16] */;
  (%571,)
}

def @func_4243() -> (Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) {
  @func_4241() /* ty=(Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) */
}

def @func_4517(%var_4511: Tensor[(10, 11, 6), float64], %var_4512: Tensor[(1050), float32], %var_4513: Tensor[(14, 2), int32], %var_4514: Tensor[(26), uint32], %var_4515: Tensor[(416), uint32], %var_4516: Tensor[(6), float64]) -> (Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) {
  @func_4509(%var_4511, %var_4512, %var_4513, %var_4514, %var_4515, %var_4516) /* ty=(Tensor[(28), int32], Tensor[(1050), float32], Tensor[(14, 2), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float64], Tensor[(2, 16, 13), bool], Tensor[(26), uint32], Tensor[(416), uint32], Tensor[(6), float64], Tensor[(12, 3, 6), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(16, 8, 14), float32], Tensor[(10, 11, 6), float64], Tensor[(9, 13, 5), float32]) */
}

def @func_6272() -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) {
  %572 = @func_6042() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64], Tensor[(28), int32], Tensor[(252), int32]) */;
  %573 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %574 = @func_5716() /* ty=(Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) */;
  %575 = %572.1;
  %576 = %573.0;
  %577 = %574.1;
  (%575, %576, %577)
}

def @func_3415() -> (Tensor[(16, 8, 14), float32],) {
  @func_3413() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_4241() -> (Tensor[(16, 8, 14), uint8], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32], Tensor[(13, 2), uint32], Tensor[(2, 208), uint32], Tensor[(3, 2), float64]) {
  %578 = @func_3413() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %579 = %578.0;
  %580 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 8, 14), float32] */, dtype="uint8") /* ty=Tensor[(16, 8, 14), uint8] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%579, dtype="uint8") /* ty=Tensor[(16, 8, 14), uint8] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %584 = @func_3555() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %585 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 2), uint32] */, dtype="uint32") /* ty=Tensor[(13, 2), uint32] */;
  %586 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 208), uint32] */, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
  %587 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %588 = reshape(%585, newshape=[2, 1, 13]) /* ty=Tensor[(2, 1, 13), uint32] */;
  %589 = reshape(%586, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), uint32] */;
  %590 = reshape(%587, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %591 = @func_4055(%588, %589, %590) /* ty=(Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) */;
  %592 = add(%582, %583) /* ty=Tensor[(16, 8, 14), uint8] */;
  %593 = %584.0;
  %594 = %591.1;
  (%592, %593, %594, meta[relay.Constant][41] /* ty=Tensor[(13, 2), uint32] */, meta[relay.Constant][42] /* ty=Tensor[(2, 208), uint32] */, meta[relay.Constant][43] /* ty=Tensor[(3, 2), float64] */)
}

def @func_6338(%var_6297: Tensor[(10, 3, 2), float32]) -> (Tensor[(10, 3, 2), bool], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32], Tensor[(16, 8, 14), float32], Tensor[(10, 3, 2), int32], Tensor[(16, 8, 14), float64]) {
  %595 = cast(%var_6297, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %596 = asin(%595) /* ty=Tensor[(10, 3, 2), float32] */;
  %597 = cast(%596, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %598 = shape_of(%var_6297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_6297, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = cast(meta[relay.Constant][44] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %602 = cast(meta[relay.Constant][44] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %603 = reshape(%601, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %604 = reshape(%602, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), uint32] */;
  %605 = @func_5256(%603, %604) /* ty=(Tensor[(8, 12, 15), uint32],) */;
  %606 = @func_3488() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %607 = cast(%596, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %608 = cosh(%607) /* ty=Tensor[(10, 3, 2), float32] */;
  %609 = cast(%596, dtype="int32") /* ty=Tensor[(10, 3, 2), int32] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="int32") /* ty=Tensor[(10, 3, 2), int32] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %613 = @func_6272() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
  %614 = not_equal(%599, %600) /* ty=Tensor[(10, 3, 2), bool] */;
  %615 = %605.0;
  %616 = %606.0;
  %617 = bitwise_xor(%611, %612) /* ty=Tensor[(10, 3, 2), int32] */;
  %618 = %613.2;
  (%614, %615, meta[relay.Constant][44] /* ty=Tensor[(1440), uint32] */, %616, %617, %618)
}

def @func_5327() -> (Tensor[(16, 8, 14), float64],) {
  %623 = fn () -> (Tensor[(16, 8, 14), float64],) {
    %619 = @func_3077() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %620 = %619.0;
    %621 = cast(%620, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
    %622 = sigmoid(%621) /* ty=Tensor[(16, 8, 14), float64] */;
    (%622,)
  };
  %623() /* ty=(Tensor[(16, 8, 14), float64],) */
}

def @func_2922() -> (Tensor[(16, 8, 14), float32],) {
  @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_2646(%var_2643: Tensor[(28), int32], %var_2644: Tensor[(420), float64], %var_2645: Tensor[(39, 1), float32]) -> (Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) {
  %652 = fn (%var_2623: Tensor[(28), int32], %var_2624: Tensor[(420), float64], %var_2632: Tensor[(39, 1), float32]) -> (Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) {
    %624 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
    %625 = sigmoid(%624) /* ty=Tensor[(8, 3, 13), float32] */;
    %626 = cast(%625, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
    %627 = sinh(%626) /* ty=Tensor[(8, 3, 13), float32] */;
    %628 = cast(%625, dtype="int8") /* ty=Tensor[(8, 3, 13), int8] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%627, dtype="int8") /* ty=Tensor[(8, 3, 13), int8] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %632 = cast(meta[relay.Constant][46] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %633 = cast(meta[relay.Constant][46] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %634 = cast(%var_2623, dtype="int32") /* ty=Tensor[(28), int32] */;
    %635 = cast(%var_2624, dtype="float64") /* ty=Tensor[(420), float64] */;
    %636 = reshape(%632, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
    %637 = reshape(%633, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
    %638 = reshape(%634, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %639 = reshape(%635, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %640 = @func_1375(%636, %637, %638, %639) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
    %641 = cast(%var_2632, dtype="float32") /* ty=Tensor[(39, 1), float32] */;
    %642 = cast(%var_2623, dtype="int32") /* ty=Tensor[(28), int32] */;
    %643 = cast(meta[relay.Constant][47] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
    %644 = reshape(%641, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
    %645 = reshape(%642, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %646 = reshape(%643, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %647 = @func_547(%644, %645, %646) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
    %648 = right_shift(%630, %631) /* ty=Tensor[(8, 3, 13), int8] */;
    %649 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
    %650 = %640.0;
    %651 = %647.0;
    (%648, %649, %650, meta[relay.Constant][46] /* ty=Tensor[(1365), float64] */, %var_2623, %var_2624, %651, %var_2632, meta[relay.Constant][47] /* ty=Tensor[(252), int32] */)
  };
  %652(%var_2643, %var_2644, %var_2645) /* ty=(Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) */
}

def @func_5202() -> Tensor[(16, 8, 14), float32] {
  %653 = @func_4284() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %653.1
}

def @func_3797(%var_3795: Tensor[(6, 12, 13), float64], %var_3796: Tensor[(350), float32]) -> (Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) {
  @func_3793(%var_3795, %var_3796) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */
}

def @func_5905() -> (Tensor[(16, 8, 14), float32],) {
  @func_5903() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_547(%var_502: Tensor[(1, 3, 13), float32], %var_507: Tensor[(28), int32], %var_508: Tensor[(252), int32]) -> (Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) {
  %654 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %655 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %656 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %657 = reshape(%654, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %658 = reshape(%655, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %659 = reshape(%656, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %660 = @func_176(%657, %658, %659) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %661 = cast(%var_502, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
  %662 = atan(%661) /* ty=Tensor[(1, 3, 13), float32] */;
  %663 = cast(%var_502, dtype="uint64") /* ty=Tensor[(1, 3, 13), uint64] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%662, dtype="uint64") /* ty=Tensor[(1, 3, 13), uint64] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %667 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %668 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %669 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %670 = reshape(%667, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %671 = reshape(%668, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
  %672 = reshape(%669, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
  %673 = @func_176(%670, %671, %672) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
  %674 = cast(meta[relay.Constant][48] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %675 = cast(%var_507, dtype="int32") /* ty=Tensor[(28), int32] */;
  %676 = cast(%var_508, dtype="int32") /* ty=Tensor[(252), int32] */;
  %677 = reshape(%674, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %678 = reshape(%675, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %679 = reshape(%676, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %680 = @func_427(%677, %678, %679) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %681 = cast(%662, dtype="bool") /* ty=Tensor[(1, 3, 13), bool] */;
  %682 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 13), bool] */;
  %683 = %660.2;
  %684 = logical_xor(%665, %666) /* ty=Tensor[(?, 3, 13), uint64] */;
  %685 = %673.2;
  %686 = %680.3;
  %687 = logical_and(%681, %682) /* ty=Tensor[(15, 3, 13), bool] */;
  (%683, %var_507, %var_508, %684, %685, %686, meta[relay.Constant][48] /* ty=Tensor[(1050), float32] */, %687)
}

def @func_152(%var_150: Tensor[(14, 3, 10), float64]) -> (Tensor[(14, 3, 10), float64],) {
  @func_149(%var_150) /* ty=(Tensor[(14, 3, 10), float64],) */
}

def @func_4981(%var_4974: Tensor[(39), float32], %var_4975: Tensor[(28), int32], %var_4976: Tensor[(1, 252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(12, 2, 2), float64], Tensor[(48), float64], Tensor[(4, 14, 3), bool], Tensor[(168), float64], Tensor[(1050), float32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(1, 252), int32]) {
  %688 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %689 = reshape(%688, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %690 = cast(meta[relay.Constant][51] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %691 = reshape(%690, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), float64] */;
  %692 = @func_4859(%691) /* ty=(Tensor[(4, 14, 3), bool],) */;
  %693 = cast(%var_4974, dtype="float32") /* ty=Tensor[(39), float32] */;
  %694 = cast(%var_4975, dtype="int32") /* ty=Tensor[(28), int32] */;
  %695 = cast(%var_4976, dtype="int32") /* ty=Tensor[(1, 252), int32] */;
  %696 = reshape(%693, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
  %697 = reshape(%694, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %698 = reshape(%695, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %699 = @func_547(%696, %697, %698) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
  %700 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
  %701 = @func_1397(%689) /* ty=Tensor[(12, 2, 2), float64] */;
  %702 = %692.0;
  %703 = %699.6;
  (%700, %701, meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, %702, meta[relay.Constant][51] /* ty=Tensor[(168), float64] */, %703, %var_4974, %var_4975, %var_4976)
}

def @func_6104() -> (Tensor[(16, 8, 14), float32],) {
  %706 = fn () -> (Tensor[(16, 8, 14), float32],) {
    %704 = @func_5558() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float32]) */;
    %705 = %704.0;
    (%705,)
  };
  %706() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_432(%var_429: Tensor[(5, 14, 15), float32], %var_430: Tensor[(28), int32], %var_431: Tensor[(252), int32]) -> (Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) {
  @func_427(%var_429, %var_430, %var_431) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */
}

def @func_4579() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  %707 = @func_3203() /* ty=Tensor[(16, 8, 14), float32] */;
  %708 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  (%707, %708)
}

def @func_2131(%var_2129: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) {
  @func_2128(%var_2129) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) */
}

def @func_4747() -> Tensor[(16, 8, 14), float32] {
  @func_4745() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_5314() -> (Tensor[(9, 15, 11), float64],) {
  %711 = fn () -> (Tensor[(9, 15, 11), float64],) {
    %709 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 11), float64] */;
    %710 = acosh(%709) /* ty=Tensor[(9, 15, 11), float64] */;
    (%710,)
  };
  %711() /* ty=(Tensor[(9, 15, 11), float64],) */
}

def @func_2920() -> (Tensor[(16, 8, 14), float32],) {
  %712 = @func_2136() /* ty=Tensor[(16, 8, 14), float32] */;
  (%712,)
}

def @func_5926() -> Tensor[(16, 8, 14), float32] {
  %714 = fn () -> Tensor[(16, 8, 14), float32] {
    %713 = @func_5626() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %713.0
  };
  %714() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_3298() -> Tensor[(16, 8, 14), float32] {
  %716 = fn () -> Tensor[(16, 8, 14), float32] {
    %715 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
    %715.0
  };
  %716() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_937(%var_936: Tensor[(3, 84), int32]) -> (Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) {
  %746 = fn (%var_932: Tensor[(3, 84), int32]) -> (Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) {
    %717 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    %718 = acosh(%717) /* ty=Tensor[(9, 13, 5), float32] */;
    %719 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 13, 5), float32] */, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
    %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%718, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = not_equal(%721, %722) /* ty=Tensor[(9, 13, 5), bool] */;
    %724 = cast(%723, dtype="float64") /* ty=Tensor[(9, 13, 5), float64] */;
    %725 = asinh(%724) /* ty=Tensor[(9, 13, 5), float64] */;
    %726 = cast(%725, dtype="float64") /* ty=Tensor[(9, 13, 5), float64] */;
    %727 = exp(%726) /* ty=Tensor[(9, 13, 5), float64] */;
    %728 = cast(%723, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    %729 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
    %730 = cast(%718, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %732 = maximum(%730, %731) /* ty=Tensor[(9, 13, 5), float32] */;
    %733 = cast(%732, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    %734 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%727, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %737 = cast(meta[relay.Constant][54] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %738 = cast(meta[relay.Constant][54] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %739 = cast(%var_932, dtype="int32") /* ty=Tensor[(3, 84), int32] */;
    %740 = reshape(%737, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
    %741 = reshape(%738, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), int32] */;
    %742 = reshape(%739, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), int32] */;
    %743 = @func_176(%740, %741, %742) /* ty=(Tensor[(2, ?, 14), bool], Tensor[(2, 9, 14), bool], Tensor[(2, 1, 14), float32]) */;
    %744 = floor_divide(%735, %736) /* ty=Tensor[(9, 13, 5), float32] */;
    %745 = %743.0;
    (%744, %745, meta[relay.Constant][54] /* ty=Tensor[(28), int32] */, %var_932)
  };
  %746(%var_936) /* ty=(Tensor[(9, 13, 5), float32], Tensor[(2, ?, 14), bool], Tensor[(28), int32], Tensor[(3, 84), int32]) */
}

def @func_4338(%var_4337: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) {
  %764 = fn (%var_4315: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) {
    %747 = cast(meta[relay.Constant][55] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %748 = cast(meta[relay.Constant][56] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
    %749 = reshape(%747, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
    %750 = reshape(%748, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %751 = @func_1168(%749, %750) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
    %752 = cast(meta[relay.Constant][57] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %753 = cast(meta[relay.Constant][57] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %754 = cast(meta[relay.Constant][58] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %755 = cast(%var_4315, dtype="float64") /* ty=Tensor[(420), float64] */;
    %756 = reshape(%752, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
    %757 = reshape(%753, newshape=[13, 7, 15]) /* ty=Tensor[(13, 7, 15), float64] */;
    %758 = reshape(%754, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %759 = reshape(%755, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %760 = @func_1375(%756, %757, %758, %759) /* ty=(Tensor[(13, 7, 15), float64], Tensor[(28), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(14, 3, 10), float64], Tensor[(420), float64]) */;
    %761 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
    %762 = %751.2;
    %763 = %760.0;
    (%761, %762, meta[relay.Constant][55] /* ty=Tensor[(216), float32] */, meta[relay.Constant][56] /* ty=Tensor[(252), int32] */, %763, meta[relay.Constant][57] /* ty=Tensor[(1365), float64] */, meta[relay.Constant][58] /* ty=Tensor[(28), int32] */, %var_4315)
  };
  %764(%var_4337) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(216), float32], Tensor[(252), int32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64]) */
}

def @func_5519(%var_5515: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %765 = cast(%var_5515, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %766 = asin(%765) /* ty=Tensor[(7, 14, 10), float32] */;
  (%766,)
}

def @func_796(%var_794: Tensor[(16, 5, 5), int16], %var_795: Tensor[(39), float32]) -> (Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) {
  %778 = fn (%var_782: Tensor[(16, 5, 5), int16], %var_789: Tensor[(39), float32]) -> (Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) {
    %767 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 1, 5), int16] */, dtype="int16") /* ty=Tensor[(16, 1, 5), int16] */;
    %768 = cast(%var_782, dtype="int16") /* ty=Tensor[(16, 5, 5), int16] */;
    %769 = cast(%var_789, dtype="float32") /* ty=Tensor[(39), float32] */;
    %770 = cast(meta[relay.Constant][60] /* ty=Tensor[(28), int32] */, dtype="int32") /* ty=Tensor[(28), int32] */;
    %771 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 42), int32] */, dtype="int32") /* ty=Tensor[(6, 42), int32] */;
    %772 = reshape(%769, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
    %773 = reshape(%770, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %774 = reshape(%771, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %775 = @func_547(%772, %773, %774) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
    %776 = left_shift(%767, %768) /* ty=Tensor[(16, 5, 5), int16] */;
    %777 = %775.2;
    (%776, %777, %var_789, meta[relay.Constant][60] /* ty=Tensor[(28), int32] */, meta[relay.Constant][61] /* ty=Tensor[(6, 42), int32] */)
  };
  %778(%var_794, %var_795) /* ty=(Tensor[(16, 5, 5), int16], Tensor[(252), int32], Tensor[(39), float32], Tensor[(28), int32], Tensor[(6, 42), int32]) */
}

def @func_2088(%var_2066: Tensor[(350, 3), float32], %var_2067: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(5, 14, 15), float32], Tensor[(350, 3), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(16, 8, 14), float32]) {
  %779 = cast(%var_2066, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
  %780 = cast(%var_2067, dtype="int32") /* ty=Tensor[(28), int32] */;
  %781 = cast(meta[relay.Constant][62] /* ty=Tensor[(252), int32] */, dtype="int32") /* ty=Tensor[(252), int32] */;
  %782 = reshape(%779, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %783 = reshape(%780, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %784 = reshape(%781, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %785 = @func_427(%782, %783, %784) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(2, 9, 14), bool], Tensor[(28), int32], Tensor[(252), int32]) */;
  %786 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %787 = %785.0;
  %788 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  (%786, %787, %var_2066, %var_2067, meta[relay.Constant][62] /* ty=Tensor[(252), int32] */, %788)
}

def @func_1857() -> Tensor[(16, 8, 14), float32] {
  %790 = fn () -> Tensor[(16, 8, 14), float32] {
    %789 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    sinh(%789) /* ty=Tensor[(16, 8, 14), float32] */
  };
  %790() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_4059(%var_4056: Tensor[(2, 1, 13), uint32], %var_4057: Tensor[(2, 16, 13), uint32], %var_4058: Tensor[(6), float64]) -> (Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) {
  %801 = fn (%var_4016: Tensor[(2, 1, 13), uint32], %var_4017: Tensor[(2, 16, 13), uint32], %var_4048: Tensor[(6), float64]) -> (Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) {
    %791 = cast(%var_4016, dtype="uint32") /* ty=Tensor[(2, 1, 13), uint32] */;
    %792 = cast(%var_4017, dtype="uint32") /* ty=Tensor[(2, 16, 13), uint32] */;
    %793 = logical_xor(%791, %792) /* ty=Tensor[(2, 16, 13), uint32] */;
    %794 = cast(%var_4016, dtype="bool") /* ty=Tensor[(2, 1, 13), bool] */;
    %795 = cast(%793, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
    %796 = cast(%var_4048, dtype="float64") /* ty=Tensor[(6), float64] */;
    %797 = reshape(%796, newshape=[1, 6, 1]) /* ty=Tensor[(1, 6, 1), float64] */;
    %798 = @func_3828(%797) /* ty=(Tensor[(1, 6, 1), float64], Tensor[(1, 6, 1), float64], Tensor[(16, 8, 14), float32]) */;
    %799 = greater_equal(%794, %795) /* ty=Tensor[(2, 16, 13), bool] */;
    %800 = %798.2;
    (%799, %800, %var_4048)
  };
  %801(%var_4056, %var_4057, %var_4058) /* ty=(Tensor[(2, 16, 13), bool], Tensor[(16, 8, 14), float32], Tensor[(6), float64]) */
}

def @func_1904(%var_1880: Tensor[(5, 5, 14), float32], %var_1898: Tensor[(5, 5, 14), float32]) -> Tensor[(5, 5, 14), bool] {
  %802 = cast(%var_1880, dtype="float32") /* ty=Tensor[(5, 5, 14), float32] */;
  %803 = acosh(%802) /* ty=Tensor[(5, 5, 14), float32] */;
  %804 = cast(%var_1898, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="bool") /* ty=Tensor[(5, 5, 14), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%806, %807) /* ty=Tensor[(5, 5, 14), bool] */
}

def @func_5755() -> (Tensor[(16, 8, 14), float32],) {
  %811 = fn () -> (Tensor[(16, 8, 14), float32],) {
    %808 = @func_3297() /* ty=Tensor[(16, 8, 14), float32] */;
    %809 = cast(%808, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %810 = cos(%809) /* ty=Tensor[(16, 8, 14), float32] */;
    (%810,)
  };
  %811() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_5183() -> Tensor[(16, 8, 14), float64] {
  %812 = @func_2680() /* ty=Tensor[(16, 8, 14), float32] */;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(16, 8, 14), float64] */;
  erf(%813) /* ty=Tensor[(16, 8, 14), float64] */
}

def @func_5019(%var_5012: Tensor[(28), int32], %var_5013: Tensor[(420), float64]) -> (Tensor[(16, 8, 14), float32], Tensor[(420), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(39), float32]) {
  %814 = @func_3028() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */;
  %815 = cast(%var_5012, dtype="int32") /* ty=Tensor[(28), int32] */;
  %816 = cast(%var_5013, dtype="float64") /* ty=Tensor[(420), float64] */;
  %817 = cast(meta[relay.Constant][64] /* ty=Tensor[(39), float32] */, dtype="float32") /* ty=Tensor[(39), float32] */;
  %818 = reshape(%815, newshape=[28]) /* ty=Tensor[(28), int32] */;
  %819 = reshape(%816, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %820 = reshape(%817, newshape=[39, 1]) /* ty=Tensor[(39, 1), float32] */;
  %821 = @func_2642(%818, %819, %820) /* ty=(Tensor[(8, 3, 13), int8], Tensor[(16, 8, 14), float32], Tensor[(13, 7, 15), float64], Tensor[(1365), float64], Tensor[(28), int32], Tensor[(420), float64], Tensor[(2, 1, 14), float32], Tensor[(39, 1), float32], Tensor[(252), int32]) */;
  %822 = %814.0;
  %823 = %821.5;
  (%822, %823, %var_5012, %var_5013, meta[relay.Constant][64] /* ty=Tensor[(39), float32] */)
}

def @func_5260(%var_5258: Tensor[(8, 12, 15), uint32], %var_5259: Tensor[(8, 12, 15), uint32]) -> (Tensor[(8, 12, 15), uint32],) {
  @func_5256(%var_5258, %var_5259) /* ty=(Tensor[(8, 12, 15), uint32],) */
}

def @func_2595(%var_2593: Tensor[(6), int8], %var_2594: Tensor[(28), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(252), int32]) {
  @func_2591(%var_2593, %var_2594) /* ty=(Tensor[(16, 8, 14), float32], Tensor[(39), float32], Tensor[(6), int8], Tensor[(28), int32], Tensor[(252), int32]) */
}

def @func_4286() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) {
  @func_4284() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float32]) */
}

def @func_5718() -> (Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) {
  @func_5716() /* ty=(Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) */
}

def @func_2137() -> Tensor[(16, 8, 14), float32] {
  %824 = fn () -> Tensor[(16, 8, 14), float32] {
    @func_1856() /* ty=Tensor[(16, 8, 14), float32] */
  };
  %824() /* ty=Tensor[(16, 8, 14), float32] */
}

def @func_5443(%var_5423: Tensor[(12, 78), float64], %var_5424: Tensor[(350), float32]) -> (Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(350), float32], Tensor[(350), float32], Tensor[(12, 78), float32]) {
  %825 = @func_5326() /* ty=(Tensor[(16, 8, 14), float64],) */;
  %826 = @func_5280() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %827 = cast(%var_5423, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
  %828 = cast(%var_5424, dtype="float32") /* ty=Tensor[(350), float32] */;
  %829 = reshape(%827, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float64] */;
  %830 = reshape(%828, newshape=[350]) /* ty=Tensor[(350), float32] */;
  %831 = @func_3793(%829, %830) /* ty=(Tensor[(6, 12, 13), float64], Tensor[(5, 5, 14), bool], Tensor[(350), float32]) */;
  %832 = cast(%var_5423, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %833 = %825.0;
  %834 = %826.0;
  %835 = %831.2;
  %836 = atanh(%832) /* ty=Tensor[(12, 78), float32] */;
  (%833, %834, %835, %var_5424, %836)
}

def @func_6341(%var_6339: Tensor[(10, 3, 2), float32]) -> (Tensor[(10, 3, 2), bool], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32], Tensor[(16, 8, 14), float32], Tensor[(10, 3, 2), int32], Tensor[(16, 8, 14), float64]) {
  @func_6338(%var_6339) /* ty=(Tensor[(10, 3, 2), bool], Tensor[(8, 12, 15), uint32], Tensor[(1440), uint32], Tensor[(16, 8, 14), float32], Tensor[(10, 3, 2), int32], Tensor[(16, 8, 14), float64]) */
}

def @func_6155() -> (Tensor[(16, 8, 14), float32],) {
  %837 = @func_5925() /* ty=Tensor[(16, 8, 14), float32] */;
  (%837,)
}

def @func_3489() -> (Tensor[(16, 8, 14), float32],) {
  %839 = fn () -> (Tensor[(16, 8, 14), float32],) {
    %838 = @func_2275() /* ty=Tensor[(16, 8, 14), float32] */;
    (%838,)
  };
  %839() /* ty=(Tensor[(16, 8, 14), float32],) */
}

def @func_2128(%var_2123: Tensor[(252), int32]) -> (Tensor[(16, 8, 14), float32], Tensor[(28), int32], Tensor[(216), float32], Tensor[(252), int32]) {
  %840 = cast(meta[relay.Constant][65] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %841 = cast(%var_2123, dtype="int32") /* ty=Tensor[(252), int32] */;
  %842 = reshape(%840, newshape=[12, 3, 6]) /* ty=Tensor[(12, 3, 6), float32] */;
  %843 = reshape(%841, newshape=[252]) /* ty=Tensor[(252), int32] */;
  %844 = @func_1168(%842, %843) /* ty=(Tensor[(28), int32], Tensor[(1, 400), int16], Tensor[(39), float32], Tensor[(12, 3, 6), float32], Tensor[(2, 9, 14), bool], Tensor[(252), int32]) */;
  %845 = @func_1856() /* ty=Tensor[(16, 8, 14), float32] */;
  %846 = %844.0;
  (%845, %846, meta[relay.Constant][65] /* ty=Tensor[(216), float32] */, %var_2123)
}

def @func_2520(%var_2517: Tensor[(39), float32], %var_2518: Tensor[(28), int32], %var_2519: Tensor[(252), int32]) -> (Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) {
  %869 = fn (%var_2499: Tensor[(39), float32], %var_2500: Tensor[(28), int32], %var_2501: Tensor[(252), int32]) -> (Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) {
    %847 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
    %848 = exp(%847) /* ty=Tensor[(5, 1, 16), float32] */;
    %849 = cast(%848, dtype="int8") /* ty=Tensor[(5, 1, 16), int8] */;
    %850 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(5, 1, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 1, 16), float32] */, dtype="int8") /* ty=Tensor[(5, 1, 16), int8] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %853 = minimum(%851, %852) /* ty=Tensor[(5, ?, 16), int8] */;
    %854 = cast(%853, dtype="float64") /* ty=Tensor[(5, ?, 16), float64] */;
    %855 = cast(%var_2499, dtype="float32") /* ty=Tensor[(39), float32] */;
    %856 = cast(%var_2500, dtype="int32") /* ty=Tensor[(28), int32] */;
    %857 = cast(%var_2501, dtype="int32") /* ty=Tensor[(252), int32] */;
    %858 = reshape(%855, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float32] */;
    %859 = reshape(%856, newshape=[28]) /* ty=Tensor[(28), int32] */;
    %860 = reshape(%857, newshape=[252]) /* ty=Tensor[(252), int32] */;
    %861 = @func_547(%858, %859, %860) /* ty=(Tensor[(2, 1, 14), float32], Tensor[(28), int32], Tensor[(252), int32], Tensor[(?, 3, 13), uint64], Tensor[(2, 1, 14), float32], Tensor[(252), int32], Tensor[(1050), float32], Tensor[(15, 3, 13), bool]) */;
    %862 = %861.2;
    %863 = cast(%862, dtype="float64") /* ty=Tensor[(252), float64] */;
    %864 = shape_of(%var_2501, dtype="int32") /* ty=Tensor[(1), int32] */;
    %865 = cast(%var_2501, dtype="float64") /* ty=Tensor[(252), float64] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?), float64] */;
    %867 = acos(%854) /* ty=Tensor[(5, ?, 16), float64] */;
    %868 = power(%865, %866) /* ty=Tensor[(252), float64] */;
    (%var_2499, %var_2500, %867, %868)
  };
  %869(%var_2517, %var_2518, %var_2519) /* ty=(Tensor[(39), float32], Tensor[(28), int32], Tensor[(5, ?, 16), float64], Tensor[(252), float64]) */
}

def @func_5716() -> (Tensor[(9, 15, 11), float64], Tensor[(16, 8, 14), float64]) {
  %870 = @func_5313() /* ty=(Tensor[(9, 15, 11), float64],) */;
  %871 = %870.0;
  %872 = @func_5183() /* ty=Tensor[(16, 8, 14), float64] */;
  (%871, %872)
}

def @func_6441() -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), bool]) {
  %879 = fn () -> (Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), bool]) {
    %873 = @func_6272() /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), float64]) */;
    %874 = %873.1;
    %875 = cast(%874, dtype="float32") /* ty=Tensor[(16, 8, 14), float32] */;
    %876 = reshape(%875, newshape=[16, 8, 14]) /* ty=Tensor[(16, 8, 14), float32] */;
    %877 = @func_2337(%876) /* ty=(Tensor[(16, 8, 14), float64], Tensor[(16, 8, 14), bool]) */;
    %878 = %877.1;
    (%874, %878)
  };
  %879() /* ty=(Tensor[(16, 8, 14), float32], Tensor[(16, 8, 14), bool]) */
}

def @func_3727(%var_3726: Tensor[(15, 4, 14), uint8]) -> Tensor[(15, 4, 14), uint8] {
  %884 = fn (%var_3719: Tensor[(15, 4, 14), uint8]) -> Tensor[(15, 4, 14), uint8] {
    %880 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(15, 4, 14), uint8] */;
    %881 = shape_of(%var_3719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%var_3719, dtype="uint8") /* ty=Tensor[(15, 4, 14), uint8] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_or(%882, %883) /* ty=Tensor[(15, 4, 14), uint8] */
  };
  %884(%var_3726) /* ty=Tensor[(15, 4, 14), uint8] */
}

def @func_6710() -> Tensor[(16, 8, 14), float32] {
  %885 = @func_2920() /* ty=(Tensor[(16, 8, 14), float32],) */;
  %885.0
}

def @func_5522(%var_5520: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  @func_5519(%var_5520) /* ty=(Tensor[(7, 14, 10), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen231/build/output.py:2039: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen231/build/output.py", line 2044, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_reshape_not_equal_kernel0(signed char* __restrict__ T_not_equal, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1152) {
    T_not_equal[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) != ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_121 = relay.var("var_121", dtype = "float64", shape = (14, 3, 10))#candidate|121|(14, 3, 10)|var|float64
uop_122 = relay.sinh(var_121.astype('float64')) # shape=(14, 3, 10)
output = relay.Tuple([uop_122,])
output2 = relay.Tuple([uop_122,])
func_149 = relay.Function([var_121,], output)
mod['func_149'] = func_149
mod = relay.transform.InferType()(mod)
mutated_mod['func_149'] = func_149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_150 = relay.var("var_150", dtype = "float64", shape = (14, 3, 10))#candidate|150|(14, 3, 10)|var|float64
func_149_call = mutated_mod.get_global_var('func_149')
call_151 = func_149_call(var_150)
output = call_151
func_152 = relay.Function([var_150], output)
mutated_mod['func_152'] = func_152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_154 = relay.var("var_154", dtype = "int32", shape = (2, 1, 14))#candidate|154|(2, 1, 14)|var|int32
var_155 = relay.var("var_155", dtype = "int32", shape = (2, 1, 14))#candidate|155|(2, 1, 14)|var|int32
bop_156 = relay.less_equal(var_154.astype('bool'), relay.reshape(var_155.astype('bool'), relay.shape_of(var_154))) # shape=(2, 1, 14)
var_165 = relay.var("var_165", dtype = "int32", shape = (2, 9, 14))#candidate|165|(2, 9, 14)|var|int32
bop_166 = relay.greater(var_155.astype('bool'), var_165.astype('bool')) # shape=(2, 9, 14)
uop_174 = relay.sin(var_155.astype('float32')) # shape=(2, 1, 14)
output = relay.Tuple([bop_156,bop_166,uop_174,])
output2 = relay.Tuple([bop_156,bop_166,uop_174,])
func_176 = relay.Function([var_154,var_155,var_165,], output)
mod['func_176'] = func_176
mod = relay.transform.InferType()(mod)
var_177 = relay.var("var_177", dtype = "int32", shape = (2, 1, 14))#candidate|177|(2, 1, 14)|var|int32
var_178 = relay.var("var_178", dtype = "int32", shape = (2, 1, 14))#candidate|178|(2, 1, 14)|var|int32
var_179 = relay.var("var_179", dtype = "int32", shape = (2, 9, 14))#candidate|179|(2, 9, 14)|var|int32
output = func_176(var_177,var_178,var_179,)
func_180 = relay.Function([var_177,var_178,var_179,], output)
mutated_mod['func_180'] = func_180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_406 = relay.var("var_406", dtype = "float32", shape = (5, 14, 15))#candidate|406|(5, 14, 15)|var|float32
uop_407 = relay.cosh(var_406.astype('float32')) # shape=(5, 14, 15)
func_176_call = mod.get_global_var('func_176')
func_180_call = mutated_mod.get_global_var('func_180')
var_416 = relay.var("var_416", dtype = "int32", shape = (28,))#candidate|416|(28,)|var|int32
var_417 = relay.var("var_417", dtype = "int32", shape = (252,))#candidate|417|(252,)|var|int32
call_415 = relay.TupleGetItem(func_176_call(relay.reshape(var_416.astype('int32'), [2, 1, 14]), relay.reshape(var_416.astype('int32'), [2, 1, 14]), relay.reshape(var_417.astype('int32'), [2, 9, 14]), ), 1)
call_418 = relay.TupleGetItem(func_180_call(relay.reshape(var_416.astype('int32'), [2, 1, 14]), relay.reshape(var_416.astype('int32'), [2, 1, 14]), relay.reshape(var_417.astype('int32'), [2, 9, 14]), ), 1)
output = relay.Tuple([uop_407,call_415,var_416,var_417,])
output2 = relay.Tuple([uop_407,call_418,var_416,var_417,])
func_427 = relay.Function([var_406,var_416,var_417,], output)
mod['func_427'] = func_427
mod = relay.transform.InferType()(mod)
mutated_mod['func_427'] = func_427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_427_call = mutated_mod.get_global_var('func_427')
var_429 = relay.var("var_429", dtype = "float32", shape = (5, 14, 15))#candidate|429|(5, 14, 15)|var|float32
var_430 = relay.var("var_430", dtype = "int32", shape = (28,))#candidate|430|(28,)|var|int32
var_431 = relay.var("var_431", dtype = "int32", shape = (252,))#candidate|431|(252,)|var|int32
call_428 = func_427_call(var_429,var_430,var_431,)
output = call_428
func_432 = relay.Function([var_429,var_430,var_431,], output)
mutated_mod['func_432'] = func_432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_502 = relay.var("var_502", dtype = "float32", shape = (1, 3, 13))#candidate|502|(1, 3, 13)|var|float32
uop_503 = relay.atan(var_502.astype('float32')) # shape=(1, 3, 13)
func_176_call = mod.get_global_var('func_176')
func_180_call = mutated_mod.get_global_var('func_180')
var_507 = relay.var("var_507", dtype = "int32", shape = (28,))#candidate|507|(28,)|var|int32
var_508 = relay.var("var_508", dtype = "int32", shape = (252,))#candidate|508|(252,)|var|int32
call_506 = relay.TupleGetItem(func_176_call(relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_508.astype('int32'), [2, 9, 14]), ), 2)
call_509 = relay.TupleGetItem(func_180_call(relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_508.astype('int32'), [2, 9, 14]), ), 2)
bop_521 = relay.logical_xor(uop_503.astype('uint64'), relay.reshape(var_502.astype('uint64'), relay.shape_of(uop_503))) # shape=(1, 3, 13)
func_176_call = mod.get_global_var('func_176')
func_180_call = mutated_mod.get_global_var('func_180')
call_524 = relay.TupleGetItem(func_176_call(relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_508.astype('int32'), [2, 9, 14]), ), 2)
call_525 = relay.TupleGetItem(func_180_call(relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_507.astype('int32'), [2, 1, 14]), relay.reshape(var_508.astype('int32'), [2, 9, 14]), ), 2)
func_427_call = mod.get_global_var('func_427')
func_432_call = mutated_mod.get_global_var('func_432')
const_529 = relay.const([-1.745898,-0.811505,6.001049,9.175528,-1.792734,-9.909246,4.023893,1.927248,-9.515097,-9.779002,8.884616,6.141673,-8.210171,-3.523671,1.094816,7.267237,-7.467711,-7.758170,-4.862446,3.007699,-3.344415,5.794266,-7.328653,1.181470,-6.192046,-3.255461,6.645213,8.308064,5.611024,1.545048,-7.540552,7.891429,-8.865206,-6.578344,8.083225,6.515278,-6.089180,1.034280,-9.511275,1.873132,3.800231,-8.582201,0.110214,-8.716054,1.838016,-0.265387,-3.026774,6.121217,6.636603,8.363457,5.517306,-5.270376,7.388903,-6.557123,-3.674819,-6.258750,1.722601,-9.279271,-9.115383,-3.935585,-3.024583,7.571400,-4.281208,1.380687,1.277618,-3.482431,-2.891301,-2.177500,8.489708,4.053247,-2.251519,5.283175,-0.445402,2.528895,-8.851916,5.166191,-2.076518,9.115909,3.550265,-4.422058,2.537490,7.616569,1.770377,2.809062,3.050111,-0.288260,-3.595285,1.320177,-9.074076,-8.149858,-2.919416,9.097131,-2.451092,4.068975,-0.044527,-8.657676,0.100191,0.954935,7.023034,2.361917,2.554070,1.647367,2.530284,-2.715533,0.870542,-3.432372,-9.166695,-7.582033,-3.861578,-6.273518,2.893235,-2.399134,4.245868,2.267680,-3.362512,5.793619,-4.714019,2.864226,4.088980,7.147070,-4.472649,8.309419,-0.830403,-8.699099,3.319176,9.350344,8.805397,1.556779,7.401452,-5.033721,3.113891,1.360808,-0.019493,3.484642,-8.331035,-8.495985,-6.503333,-7.123827,8.992182,7.778997,2.691147,1.971087,-2.851434,3.588522,5.381841,7.691899,2.859781,-9.267442,-8.162576,-7.616012,2.545141,9.290068,-7.929744,-9.844514,-4.613745,-5.864356,-0.536414,8.445847,7.335979,-5.832710,-1.978081,1.589535,-3.474730,0.887885,-5.900320,6.122588,-6.593606,5.845265,-3.119772,-3.534332,-7.220714,6.924774,-8.762898,7.191270,6.064946,-3.581817,-1.939983,-1.952396,0.104896,4.241430,9.751659,3.950246,8.436430,-5.277396,-6.641168,9.011533,1.730501,0.901994,5.140321,0.990091,-5.656078,-4.376597,-1.966628,6.050759,-9.672169,2.287805,-6.787415,8.461966,0.363388,9.768935,-7.116370,-4.627984,3.600948,1.771784,8.918783,-0.837231,-7.881990,-1.848027,4.826744,-0.201210,-7.359330,1.374596,1.121202,-9.416846,-2.283062,-5.759545,-4.266438,-1.150200,7.372817,-1.567728,9.961589,-8.436159,2.348779,-7.470333,5.429052,-9.650078,-3.569998,-9.832851,-1.008522,-3.012887,-8.231600,6.423256,-2.625169,3.628353,8.309377,-4.854902,-2.053631,-4.053253,2.499001,-0.137532,-6.216540,-1.227071,-5.770010,-1.391125,5.727265,2.056543,7.781515,2.173235,-0.434111,6.204658,-8.646633,-8.743257,8.560636,9.044990,9.811225,3.039779,-8.241861,-7.642715,-0.383331,-2.284625,-3.699676,4.137367,-1.644453,1.759793,5.477824,7.586120,-0.430028,-6.501542,-1.028115,-6.919493,1.158478,6.076798,8.543135,-0.113991,-7.441600,4.110393,-8.345327,6.717736,9.330381,-2.054405,0.545044,4.524532,9.438713,7.697273,5.203898,-4.286769,8.478738,-4.303329,6.997130,-7.693320,9.805958,-6.103885,6.206222,6.394498,-4.707946,0.453154,7.432125,1.707295,2.949383,-8.485175,-7.380248,4.538961,0.778078,-8.502916,0.835701,-0.758525,2.059107,-9.387802,-5.135958,2.637137,4.159288,3.006048,4.536641,-0.699576,4.482738,2.113694,4.185306,-6.952581,2.146199,8.535514,0.278814,2.939537,3.894427,5.572818,3.604962,-2.916218,-8.542616,9.009002,5.036039,-1.617765,4.830536,-9.183683,-2.160906,2.112419,-8.467929,-9.435975,-6.671906,-6.580765,-0.667288,-5.395755,-1.330047,-2.627806,-5.988220,3.119709,1.432471,-0.221155,0.738664,7.070869,4.199646,0.008809,-8.249756,-6.547067,-5.034658,-4.337538,-8.660178,-6.678567,7.498032,5.945648,4.730762,5.968469,-8.779113,9.576554,1.541211,-8.045828,0.712753,-6.132447,5.934727,-3.483148,7.272471,-3.973720,1.078834,-9.605874,-6.911699,-1.485661,-9.105146,-9.355448,-4.000662,5.779992,3.427306,-1.674774,6.084434,-3.841005,6.468460,-6.164607,1.644942,0.108857,-1.980329,1.542739,4.571324,-9.743938,-2.921368,7.415569,-5.141583,-7.996509,-1.989173,-8.913684,3.307016,-7.936401,8.129701,2.223166,-7.700922,-6.188012,-0.745067,4.058059,9.879219,-2.348507,-6.830288,-0.693128,-6.949589,-0.234067,-6.099500,-7.609804,5.612937,-5.323097,-5.650410,3.684252,-6.306951,9.635936,-7.099552,7.710707,-2.206605,6.432858,6.315634,6.120396,-9.808875,-2.940041,-3.463860,-2.656664,1.275166,-5.970745,-4.812770,-9.960344,6.610513,9.923499,-2.597011,-9.063203,-3.644146,-4.814938,7.578239,2.925697,1.533613,-8.094184,3.569461,-0.079120,-8.460157,-0.899484,-9.906034,4.272162,-2.805862,3.594164,1.975067,9.494513,6.091645,4.418541,0.495166,-1.722426,-3.175752,-4.505819,4.450439,4.190215,5.024355,-6.563311,-4.304880,-3.479310,2.962327,-1.342236,9.607050,-3.056465,4.955501,2.071092,7.551602,1.344489,2.763057,7.210614,-9.302178,-4.866836,-7.861648,-7.512502,-5.059345,2.642552,-9.252426,7.694226,9.138051,5.575230,5.772479,1.150888,-8.680016,6.404097,-1.943896,8.602106,4.801601,-0.227914,-9.457923,-7.491507,5.319403,-3.837674,6.747340,0.105433,-4.779633,5.493819,-1.969054,-8.328610,-8.588917,-3.143767,-1.309563,9.890471,2.579139,8.016292,-0.965812,-8.424243,1.291716,-1.910275,-1.987126,7.667955,-7.842615,3.744544,2.706463,7.810110,2.901335,-9.707078,2.186611,1.681787,5.581149,1.831353,-0.003327,-4.167131,-5.569885,0.958115,-6.702948,0.210345,1.662249,0.726013,-2.193614,-2.416260,-6.124045,6.586022,8.052068,-9.816446,2.898524,-0.569646,-9.205908,2.794788,7.675489,1.961498,1.522184,-9.993175,9.568542,9.343608,1.545165,8.148192,-9.362761,4.294593,6.488190,8.718498,3.799092,0.850561,-6.407728,1.122589,4.363755,8.270821,8.666515,9.270126,-2.909268,0.008471,3.856385,0.301404,3.728581,0.028669,2.756818,-7.110482,-1.540534,-5.040357,-8.504368,3.183063,-2.121236,6.834156,-4.123137,0.293310,9.181479,-5.884847,1.763547,0.414895,0.454461,-7.846968,3.787297,5.387303,-4.456194,-4.142559,4.820044,-2.744030,-5.003548,-0.644017,-5.076852,5.063900,-2.097891,-7.424413,-6.203966,-8.318417,-7.958620,-0.183203,5.235773,-9.287282,2.478463,2.859747,-4.973593,-8.739859,0.968344,2.254108,-5.936381,8.578500,4.475389,0.494886,8.293033,6.074914,-7.046788,7.294631,3.594224,2.842698,-3.136916,-8.738248,-3.643788,-1.555435,0.352254,1.766840,-4.629333,-0.913874,3.411364,3.519014,0.375643,-0.052150,-7.432327,-4.240077,2.554640,-1.467713,-8.736830,-1.641402,-4.841719,-5.073250,3.846331,3.733244,-0.582320,5.447922,7.225118,5.170951,8.959097,-3.279048,7.152699,1.642095,-3.263127,3.082580,-7.587109,3.928562,-0.388310,-9.268760,-6.835449,5.498423,8.927646,-7.014861,-5.713926,-4.834977,8.048952,4.624359,1.445343,-3.378571,7.697457,-0.426899,8.575087,-2.317528,8.616608,4.814395,-7.619057,-7.683116,2.151046,9.570998,-9.297819,7.879194,-4.119088,4.803436,-9.192434,-3.290385,2.818367,6.921623,-5.584157,-8.820534,9.627084,7.473559,-1.101168,6.955260,-6.296104,2.706598,-4.847488,3.577181,-7.432684,-0.715081,-4.509425,-8.628964,6.039516,-1.450258,7.600358,2.504214,0.114554,-6.293628,8.601054,0.344107,-8.885095,-6.962948,-5.752073,-1.533952,-1.883434,6.316842,7.263544,-5.196521,8.719972,-0.129736,2.150414,8.012200,8.181818,8.755871,-1.138750,-2.771060,3.540716,5.967551,-4.422313,-6.854797,0.154602,2.112064,1.860909,8.421074,5.392490,0.374635,-9.492648,7.730222,7.627702,-3.040203,5.440555,-9.252100,2.102310,-6.179867,6.926944,4.782212,-7.710211,3.254168,-5.454835,9.182947,4.741111,1.276921,6.318510,5.108238,2.359833,-2.253605,-9.710659,1.127453,6.252092,-2.993915,5.428569,9.370176,-3.678580,7.456238,4.617547,-1.755358,-4.371921,-0.914749,-5.183669,-1.419074,7.617813,7.584808,5.147165,-0.034118,-2.230341,-3.197163,-7.377200,-0.456593,-5.640815,5.463845,-4.669727,-6.074672,1.852362,-6.441982,-7.473971,9.699717,-1.850999,-6.538499,-8.048188,-8.051863,2.554222,-7.900626,-9.000273,-5.018341,-9.318621,-7.890690,-7.564786,5.312751,-1.365163,5.430674,-9.985273,-1.984669,1.171095,9.548065,6.337261,0.582912,-0.400487,-4.936933,-3.216670,5.327781,0.722673,0.774265,9.193135,9.308087,-7.648248,-4.981601,-8.957139,0.755517,0.880189,9.304408,-3.592422,3.438625,-8.622667,3.934902,1.392794,6.584419,3.647208,-3.470325,-4.759959,-4.164360,-6.493973,9.195963,9.120853,8.795435,6.063711,-4.684079,0.450634,-7.967864,7.390563,-7.217118,5.012789,3.997877,-8.826858,7.170056,-4.377194,7.792150,-9.650654,7.488679,-7.586685,4.917506,2.898207,3.235127,0.966892,-8.657261,-3.226250,5.304212,-8.812003,-9.187215,-4.996994,0.506283,1.905020,-4.394195,-6.693551,1.729927,-0.806781,-4.328085,-3.931495,-7.523862,-9.108428,8.830769,6.427108,-6.030729,7.708791,-1.702203,-0.204234,-5.437086,-9.075643,2.568502,-8.500399,0.345890,7.854290,-0.737911,-6.240164,-4.931455,5.961934,1.116841,-9.188426,5.695797,-7.411110,-8.417748,8.191419,-7.308714,8.836505,-9.712361,-0.454993,-3.439694,-8.935262,-9.260268,3.188032,6.984119,-3.726538,6.474732,-8.578227,-7.578918,-7.784028,7.362407,-0.908841,2.711541,2.313714,6.013905,-4.474028,-6.801274,4.842491,9.516730,7.722535,9.245107,0.168714,-6.259808,8.106043,-3.824246,5.506449,-5.646092,8.477253,0.160077,2.871669,-0.985215,-7.853972,-0.333681,0.812816,-4.651255,-8.305963,-5.857887,-2.014135,2.657042,-8.836682,1.797379,8.104774,9.031619,-7.801500,-6.037419,5.118600,6.656874,4.499537,6.696108,5.497722,7.464367,-9.514286,7.727337,-5.515498,-8.129064,-6.201312,1.476505,2.229943,-2.728212,7.638777,-9.526400,1.003930,6.105701,0.704525,-5.109693,-1.294557,8.763640,1.302227,-9.658495,1.256630,-1.956306,-5.507896,-2.889704,-1.487763,8.652837,3.286261,3.291017,1.254319,5.975384,3.005287,8.689101,7.586423,-7.471138,1.269684,-9.849725,-5.214346,-7.078717,-0.556733,-0.507538,5.732450,8.277393,0.207086,-7.939776,1.520901,-0.160251,2.191209,-0.728315,-2.255874,9.621727,9.185478,-8.889762,1.503734,8.752387,3.490362,-1.382560,9.279245,2.293947,-0.683809,-3.248051,1.349190,8.795299,-0.358672,0.839668,-9.537866,4.250498,2.846599,9.765884,-7.456832,-9.766228,1.416916,0.568240,-9.681629,9.729936,-0.717180,-7.264936,-2.018267,-1.869016,-9.748220,6.975779,-1.161001,-1.441103,8.207764,-7.983731,-9.537616,7.104744,-8.289822,0.315718,-7.614844,6.611372,-6.313476,-1.249394,8.489606,7.577051,3.937102,3.211434,2.732865,3.348999,4.012418,1.138170,-2.171924,7.292816,5.209118,-5.123653,-2.725190,-9.433397,0.044070,3.583009,5.428262,-9.209511,-7.057722,-5.731050], dtype = "float32")#candidate|529|(1050,)|const|float32
call_528 = relay.TupleGetItem(func_427_call(relay.reshape(const_529.astype('float32'), [5, 14, 15]), relay.reshape(var_507.astype('int32'), [28,]), relay.reshape(var_508.astype('int32'), [252,]), ), 3)
call_530 = relay.TupleGetItem(func_432_call(relay.reshape(const_529.astype('float32'), [5, 14, 15]), relay.reshape(var_507.astype('int32'), [28,]), relay.reshape(var_508.astype('int32'), [252,]), ), 3)
const_535 = relay.const([[[-3.075803,-7.862363,8.633619,2.626639,2.759101,6.555749,3.836144,1.590594,-7.835138,-0.775075,-2.077951,6.358473,-1.471518],[3.480079,1.549556,-0.564232,9.593957,0.606058,-3.395505,-0.438392,-9.928331,-3.955701,3.215893,8.016440,1.852634,7.513400],[5.977776,0.812785,-0.559024,0.458647,6.580101,6.130542,0.524143,5.919112,-9.921296,7.321058,6.375031,-9.665483,0.465937]],[[-8.773917,-6.390031,7.351621,2.678647,8.142836,8.035263,9.375251,-4.612217,3.956904,7.122232,8.758211,0.069944,-3.575352],[-7.557774,7.330658,1.121277,6.145626,6.543357,5.200102,4.085134,-9.092699,-3.540418,-8.658249,0.098127,-9.318634,-0.141266],[-3.072395,-6.648558,8.253217,9.544095,-3.052413,-7.552274,-0.812179,-2.335258,-2.122009,-5.556204,7.822963,-2.705525,5.450427]],[[2.925464,1.644841,-7.448335,7.214194,-1.735484,3.285742,5.833282,-8.203106,8.235715,7.830128,0.129731,-2.467688,6.561809],[-4.665295,6.048312,6.980475,5.483029,-0.293300,-6.040374,-2.099264,-2.866060,-5.919800,4.643280,-1.746763,-9.800961,8.359636],[3.982244,6.756263,8.813932,9.110482,-2.219448,0.340819,0.391943,6.529399,-3.503499,-7.322403,9.702034,-5.878750,-5.956366]],[[-8.595464,8.095381,-4.071239,2.806827,5.454754,4.077849,1.525878,3.581570,5.850543,-3.625340,-8.355786,-5.987242,-6.604932],[7.222079,-1.044462,9.749937,-8.083092,-4.164250,6.355170,3.716789,-7.477570,2.320642,-9.111707,5.003071,3.502449,-8.051431],[-8.826547,0.129998,-8.064279,6.077915,-7.183908,1.096545,5.680190,3.019923,8.873101,4.276294,6.730871,5.178089,1.144198]],[[0.994673,3.335246,-3.348468,-3.137711,-8.391641,1.464839,6.306850,-7.013557,-4.916659,6.714464,-3.029015,-5.839019,-2.382835],[3.705694,9.180017,-4.691715,6.455164,-7.868398,0.958383,5.463994,-7.045776,-6.406420,-5.970528,-6.807952,-0.650427,-5.009524],[4.905492,9.864540,-7.426260,9.714983,3.766602,-5.575538,7.635892,6.652268,8.405117,-0.735710,7.831626,-1.998176,7.944432]],[[-9.037131,-1.750238,7.525298,-5.363772,3.201838,0.684682,-4.801625,9.138279,7.342433,-6.339800,0.211678,-4.726295,6.407765],[-9.360304,6.012206,-5.222138,-2.103061,4.320165,-8.725739,-5.282777,-8.594724,1.933873,-3.208050,-8.574711,5.425789,-9.413805],[-9.321869,7.227910,-0.658150,3.152193,9.764780,-4.345707,-4.763000,3.535637,3.203325,8.040110,0.331014,-7.268530,5.256545]],[[-0.092801,6.064533,0.810123,6.324220,2.933325,6.792826,2.032479,7.778590,-5.034782,0.855064,-6.556530,3.451295,8.395775],[-3.013003,-0.046861,-5.075132,7.437029,-1.386101,4.091992,3.083340,6.110542,-3.488823,3.303997,-1.245167,7.736582,-3.842326],[-7.386504,3.901495,-8.572413,-5.580349,4.457555,0.436116,-9.761935,-6.914575,8.112794,0.381246,-7.305572,-0.400062,7.540914]],[[7.962646,-7.396212,-9.979925,3.790247,-9.761650,-6.482847,-3.683375,9.959602,-3.462625,8.884887,-4.928672,-5.581719,-3.173969],[4.909308,-2.356981,0.919549,5.989514,4.319480,4.814013,-1.795907,4.790207,-2.141779,-5.942023,6.669710,7.028371,6.588240],[-0.786813,1.103428,-7.902981,3.537929,6.429754,-3.646464,-7.228221,9.344391,-4.238397,-1.033335,-1.708796,-5.283460,-9.797178]],[[9.228476,-6.283664,8.665968,-2.543676,7.080453,8.647869,8.496286,-7.635923,-1.657166,-6.729114,-1.064504,0.933212,-4.125195],[5.995858,-6.471203,-7.434998,9.300398,3.102257,7.662501,-9.627316,-6.219600,8.771330,-0.235961,-3.918454,2.057851,-3.519612],[1.029886,-1.906729,1.952001,-3.910958,8.917489,3.962620,-4.592950,-9.811225,-6.174274,-1.640376,-8.413007,3.193096,8.253900]],[[7.100792,-7.324240,-4.143531,4.176459,3.522556,-8.819001,8.448147,-2.798723,2.145690,3.434265,7.257070,-9.550346,-8.216694],[6.228037,7.826849,4.643483,4.180606,5.132336,-8.875732,-0.891589,1.761663,6.746884,2.468454,-7.727749,-7.596252,-9.468540],[0.210285,-9.158301,1.975160,7.595374,-8.318826,-6.458537,-5.070680,-0.916452,-5.848432,-5.323057,7.597458,-6.898555,-2.910458]],[[8.719641,-3.574163,-2.435400,-4.613322,-6.286308,-9.758583,3.521867,-8.280724,6.614189,4.142892,7.201406,-3.207583,1.651669],[-5.251928,-3.251850,-9.068057,7.288369,6.017786,1.823601,-7.092062,-0.182604,8.042746,-9.585207,6.524068,4.801611,7.169103],[-5.070662,-5.865200,5.207047,-6.647055,4.455780,-0.991596,5.344536,-5.677106,8.015441,-2.097205,-0.028043,9.295373,-0.485987]],[[-4.087711,5.197088,-6.466018,7.861712,-2.449895,7.448461,3.902274,9.481113,-0.945754,9.960302,6.562908,2.366235,-1.928176],[-1.419892,-6.035867,-6.871193,-5.610351,-5.442845,-2.066840,0.498943,3.642595,0.076762,-1.394388,-5.613271,0.925099,2.521453],[-4.319154,3.942155,-1.721771,9.062762,-9.947177,3.930789,7.974470,1.370749,-8.027607,-7.483407,-9.263662,-9.717029,4.086093]],[[3.454502,-5.483138,6.806758,7.790105,-6.869046,-8.003307,4.234421,7.502221,0.412092,-0.940205,-6.472947,-7.406576,-4.011807],[-4.777058,6.991332,4.898909,4.715066,5.673336,5.302929,2.145689,3.170534,5.033324,-0.956169,5.743210,5.064923,-6.479169],[-8.753882,9.264685,5.007833,7.416078,4.454921,6.042596,7.226693,7.722637,-4.960958,-3.502239,2.503259,-7.920881,-3.496659]],[[2.161763,0.161688,-3.729167,-0.207072,7.589478,1.144093,-3.093393,2.857400,0.143143,5.301624,8.703377,7.654172,9.883467],[0.270652,-9.625380,0.731782,-0.961345,-8.881745,4.528550,-8.682888,-1.969113,9.281016,-9.308875,1.475293,9.925037,-3.418790],[-7.029527,-6.950712,-4.749566,1.583444,-1.736107,1.677134,6.991779,0.338793,-5.872037,0.961724,3.957595,-4.097849,-6.908790]],[[-4.557469,-9.625523,-2.354153,-7.693831,-4.375721,5.654899,-4.418557,-7.112924,-4.527773,6.053139,-1.245518,4.079430,-2.176519],[6.151171,-1.330485,-5.048827,2.473587,1.035678,7.426709,6.287402,5.743740,9.545425,-8.957323,7.063120,-7.480109,-1.337726],[-6.239948,-2.822121,-4.136723,0.220579,1.746250,9.568228,-1.138438,0.509603,1.006694,1.425317,1.685249,-7.986015,8.048211]]], dtype = "float32")#candidate|535|(15, 3, 13)|const|float32
bop_536 = relay.logical_and(uop_503.astype('bool'), const_535.astype('bool')) # shape=(15, 3, 13)
output = relay.Tuple([call_506,var_507,var_508,bop_521,call_524,call_528,const_529,bop_536,])
output2 = relay.Tuple([call_509,var_507,var_508,bop_521,call_525,call_530,const_529,bop_536,])
func_547 = relay.Function([var_502,var_507,var_508,], output)
mod['func_547'] = func_547
mod = relay.transform.InferType()(mod)
mutated_mod['func_547'] = func_547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_547_call = mutated_mod.get_global_var('func_547')
var_549 = relay.var("var_549", dtype = "float32", shape = (1, 3, 13))#candidate|549|(1, 3, 13)|var|float32
var_550 = relay.var("var_550", dtype = "int32", shape = (28,))#candidate|550|(28,)|var|int32
var_551 = relay.var("var_551", dtype = "int32", shape = (252,))#candidate|551|(252,)|var|int32
call_548 = func_547_call(var_549,var_550,var_551,)
output = call_548
func_552 = relay.Function([var_549,var_550,var_551,], output)
mutated_mod['func_552'] = func_552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_622 = relay.var("var_622", dtype = "uint8", shape = (15, 11, 12))#candidate|622|(15, 11, 12)|var|uint8
var_623 = relay.var("var_623", dtype = "uint8", shape = (15, 11, 12))#candidate|623|(15, 11, 12)|var|uint8
bop_624 = relay.add(var_622.astype('uint8'), relay.reshape(var_623.astype('uint8'), relay.shape_of(var_622))) # shape=(15, 11, 12)
bop_627 = relay.floor_mod(bop_624.astype('float32'), relay.reshape(var_622.astype('float32'), relay.shape_of(bop_624))) # shape=(15, 11, 12)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
var_636 = relay.var("var_636", dtype = "float32", shape = (13, 3))#candidate|636|(13, 3)|var|float32
var_637 = relay.var("var_637", dtype = "int32", shape = (28, 1))#candidate|637|(28, 1)|var|int32
var_638 = relay.var("var_638", dtype = "int32", shape = (252,))#candidate|638|(252,)|var|int32
call_635 = relay.TupleGetItem(func_547_call(relay.reshape(var_636.astype('float32'), [1, 3, 13]), relay.reshape(var_637.astype('int32'), [28,]), relay.reshape(var_638.astype('int32'), [252,]), ), 0)
call_639 = relay.TupleGetItem(func_552_call(relay.reshape(var_636.astype('float32'), [1, 3, 13]), relay.reshape(var_637.astype('int32'), [28,]), relay.reshape(var_638.astype('int32'), [252,]), ), 0)
output = relay.Tuple([bop_627,call_635,var_636,var_637,var_638,])
output2 = relay.Tuple([bop_627,call_639,var_636,var_637,var_638,])
func_640 = relay.Function([var_622,var_623,var_636,var_637,var_638,], output)
mod['func_640'] = func_640
mod = relay.transform.InferType()(mod)
var_641 = relay.var("var_641", dtype = "uint8", shape = (15, 11, 12))#candidate|641|(15, 11, 12)|var|uint8
var_642 = relay.var("var_642", dtype = "uint8", shape = (15, 11, 12))#candidate|642|(15, 11, 12)|var|uint8
var_643 = relay.var("var_643", dtype = "float32", shape = (13, 3))#candidate|643|(13, 3)|var|float32
var_644 = relay.var("var_644", dtype = "int32", shape = (28, 1))#candidate|644|(28, 1)|var|int32
var_645 = relay.var("var_645", dtype = "int32", shape = (252,))#candidate|645|(252,)|var|int32
output = func_640(var_641,var_642,var_643,var_644,var_645,)
func_646 = relay.Function([var_641,var_642,var_643,var_644,var_645,], output)
mutated_mod['func_646'] = func_646
mutated_mod = relay.transform.InferType()(mutated_mod)
const_781 = relay.const([[[1,-7,-4,4,5]],[[-9,-3,-8,-8,2]],[[2,3,2,8,-4]],[[-1,6,7,8,6]],[[-7,2,5,-6,10]],[[7,2,5,-2,5]],[[3,10,5,-9,-9]],[[4,10,-7,-7,2]],[[-8,1,-6,5,1]],[[-3,5,4,-1,5]],[[-10,7,9,6,4]],[[3,-4,-2,-1,10]],[[7,6,9,6,-3]],[[-9,9,4,9,-4]],[[-8,4,3,4,-5]],[[8,8,-5,-6,-4]]], dtype = "int16")#candidate|781|(16, 1, 5)|const|int16
var_782 = relay.var("var_782", dtype = "int16", shape = (16, 5, 5))#candidate|782|(16, 5, 5)|var|int16
bop_783 = relay.left_shift(const_781.astype('int16'), var_782.astype('int16')) # shape=(16, 5, 5)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
var_789 = relay.var("var_789", dtype = "float32", shape = (39,))#candidate|789|(39,)|var|float32
const_790 = relay.const([5,-4,1,9,4,4,-6,-4,-10,-4,2,-3,-10,6,-8,-2,6,-6,-6,9,-9,-6,7,7,5,-2,-3,-5], dtype = "int32")#candidate|790|(28,)|const|int32
const_791 = relay.const([[10,-6,-8,-1,-9,-6,4,-5,6,-8,-9,-7,5,-2,7,2,5,4,-1,10,1,10,-3,-8,9,5,-9,7,-8,-2,-3,4,4,-1,-10,7,-6,9,-2,-10,2,-10],[-10,6,-6,-4,-5,-8,4,-4,-2,-8,-9,-10,3,-3,5,-8,10,4,-2,-4,-5,-6,4,5,-2,-4,1,4,-4,-1,-8,-6,4,-4,-6,-3,-1,-2,-8,10,-2,-3],[-10,9,3,5,-10,10,8,-10,2,-7,-4,-7,8,4,-4,4,-5,-8,-6,2,1,-2,7,3,-7,4,1,-4,1,-10,-9,6,9,4,4,-3,-7,-6,-7,6,1,-7],[-1,1,1,6,-8,-5,6,-2,5,-7,-10,-9,-4,-3,4,7,-1,9,2,3,8,6,-9,-4,6,1,6,5,6,5,7,7,-4,1,2,5,4,-1,4,9,1,-7],[9,-7,1,-5,5,8,10,5,-7,-1,-6,6,-10,-1,5,7,2,-1,5,-5,9,10,-5,3,-9,-3,-7,-6,-5,7,5,-6,-8,-3,-4,-3,-4,-6,2,-2,-4,-8],[5,-9,1,2,1,-4,-6,2,-7,-7,-10,1,2,2,8,6,-4,-6,2,2,6,10,4,6,-7,-2,5,6,7,-3,10,8,6,-8,2,10,7,-3,-2,-2,-9,-3]], dtype = "int32")#candidate|791|(6, 42)|const|int32
call_788 = relay.TupleGetItem(func_547_call(relay.reshape(var_789.astype('float32'), [1, 3, 13]), relay.reshape(const_790.astype('int32'), [28,]), relay.reshape(const_791.astype('int32'), [252,]), ), 2)
call_792 = relay.TupleGetItem(func_552_call(relay.reshape(var_789.astype('float32'), [1, 3, 13]), relay.reshape(const_790.astype('int32'), [28,]), relay.reshape(const_791.astype('int32'), [252,]), ), 2)
output = relay.Tuple([bop_783,call_788,var_789,const_790,const_791,])
output2 = relay.Tuple([bop_783,call_792,var_789,const_790,const_791,])
func_793 = relay.Function([var_782,var_789,], output)
mod['func_793'] = func_793
mod = relay.transform.InferType()(mod)
var_794 = relay.var("var_794", dtype = "int16", shape = (16, 5, 5))#candidate|794|(16, 5, 5)|var|int16
var_795 = relay.var("var_795", dtype = "float32", shape = (39,))#candidate|795|(39,)|var|float32
output = func_793(var_794,var_795,)
func_796 = relay.Function([var_794,var_795,], output)
mutated_mod['func_796'] = func_796
mutated_mod = relay.transform.InferType()(mutated_mod)
const_871 = relay.const([[[-1.691228,3.385128,7.826366,8.183821,6.303302],[8.190772,4.425335,-8.864226,-7.150256,-6.831913],[7.393138,-2.474570,7.879885,-1.511095,-4.230027],[-5.626512,-0.045650,-0.891144,1.081712,-8.370833],[-8.665015,9.723812,-2.610043,5.578075,-5.397206],[2.296219,-6.032196,0.335628,6.628858,7.439745],[3.833800,2.708007,8.022156,8.046805,7.406284],[2.222035,-4.657820,1.176305,-4.275670,5.042671],[2.726129,9.846546,-0.780160,1.211326,-7.908102],[-9.934496,-6.744421,5.062443,7.675837,-4.981177],[1.332114,-1.287445,-0.163131,-7.420080,4.566369],[1.745209,-5.512714,-5.488535,4.162917,-6.789350],[-0.752110,-0.372488,-2.250136,-8.283413,-4.848263]],[[-0.341248,7.381162,7.628666,3.133053,-9.674112],[-3.114933,7.237290,-6.855924,6.616136,1.855187],[-8.148854,-7.074424,-3.356141,-1.231736,-4.102270],[4.479022,-8.131828,-2.665385,-0.417679,7.980192],[-0.885697,-1.975474,-5.872150,4.057572,3.030680],[-6.197052,0.587666,-4.595128,6.947275,-6.296600],[3.391338,4.024062,-6.482502,-5.999764,4.351941],[-1.536079,1.981483,6.532982,4.237367,7.613928],[8.008283,-2.901057,0.095483,-0.281614,-3.713316],[-9.080578,-9.688532,5.761186,8.887471,5.045689],[-0.890339,-0.067372,-6.165330,8.324917,7.930531],[-4.353683,-8.197406,8.261072,8.030973,1.698981],[-8.874651,-0.008930,9.434199,-0.111753,7.872061]],[[3.358320,0.175429,0.804623,8.684502,6.881203],[7.359592,1.097382,5.290530,0.139776,-5.573982],[-0.631952,0.041718,2.038375,-8.507615,3.450341],[9.818050,0.492273,7.089927,-3.778640,-1.122790],[8.325513,-3.010470,6.235351,5.200304,-5.533099],[7.310893,-9.960293,6.924705,9.225480,2.239829],[9.926671,0.629087,2.652080,7.737371,4.269291],[-9.032524,-3.832038,6.257577,-3.423427,-1.305366],[-0.254386,5.094331,-6.739175,-0.196165,-9.794336],[6.683156,-0.222649,4.049687,5.164174,-2.103312],[-4.676575,9.743056,0.812805,-8.089535,8.722021],[-9.712481,8.218446,-2.354295,0.908936,0.494658],[0.076643,2.913059,-8.066089,9.543041,-3.617629]],[[-0.163523,-6.152452,8.243250,4.417985,7.631566],[-6.171189,-8.549103,1.814690,-0.319057,-0.565624],[9.907238,-9.654983,3.262771,7.484577,-8.492732],[-8.149931,-4.052437,-9.087243,-7.388471,9.543606],[-3.813623,-5.162378,9.595696,0.447228,-2.955831],[-3.348362,2.103870,-4.760999,6.613750,-4.618081],[3.767998,-7.768353,7.056301,3.547066,-3.043023],[-1.711325,2.127673,-5.903184,-5.172637,-9.282631],[9.377841,-7.413610,9.053404,1.119763,-2.914645],[-1.644065,0.468384,9.163806,6.097100,-4.878972],[-8.891620,-0.721118,4.125047,-1.521510,-1.664801],[-8.862876,1.907113,9.061872,-2.517964,1.635369],[-8.074376,-3.197529,7.509716,-9.657726,0.640063]],[[-0.370066,7.069138,5.963517,1.247224,9.198768],[-1.274576,0.140031,-2.425367,-2.213414,-9.686175],[-5.092358,2.823115,-1.205723,-5.910901,1.229493],[6.767662,1.478057,-1.974235,-5.987824,0.682524],[6.316631,8.237979,4.694922,6.757690,-7.164725],[-2.340555,-2.911147,-5.545074,-3.030600,-9.147011],[-6.567323,4.382034,-4.555544,-4.554009,-4.358907],[-6.118901,2.319112,-6.174974,-1.212662,-0.347462],[5.415980,1.689568,-8.202934,-7.428398,-7.389550],[-1.516051,0.912501,6.494877,8.430969,-9.266895],[2.382166,1.647905,-0.847894,5.123713,-1.011834],[-8.343686,-2.742630,1.413142,1.209760,3.373069],[-4.455745,-8.053969,-6.079285,-4.890933,2.937464]],[[9.911203,5.786607,6.655818,-5.096841,-4.696904],[-3.231346,3.340239,-1.287641,1.997626,-7.837351],[-5.516811,-3.780045,-2.447448,-3.721725,-8.847578],[1.228836,-2.804438,-6.817122,5.586656,-0.273537],[7.028575,-6.844959,-2.896798,-6.711108,-4.235930],[-5.927191,6.729536,7.422302,6.258184,-6.736167],[9.210840,2.719598,2.451102,5.598349,2.272286],[-4.653387,-3.626479,5.869191,-8.931782,-9.605785],[-2.387808,0.156877,3.303433,-1.533325,-1.901862],[-0.284995,-6.307872,6.230218,5.904800,-8.554011],[-9.685727,-3.747953,0.081598,9.979272,6.964976],[-5.270364,9.639350,7.640187,-8.030074,3.297572],[8.481473,-5.855337,-3.098448,4.003049,-4.420606]],[[-4.423968,-7.415269,9.112576,-3.529033,2.675531],[-9.614483,2.318720,4.450896,-5.065450,-1.217318],[-1.126778,6.877985,-7.964973,-3.286385,-3.537939],[9.735752,-9.592865,8.427267,-6.315189,-1.133692],[0.057645,5.977588,-9.135654,3.597547,9.337325],[7.758424,0.882082,-0.060361,-3.167392,4.562974],[-6.086584,5.606451,2.105290,-5.201944,-2.738747],[1.525037,-6.679260,-8.590360,-7.546998,9.742983],[-3.499569,0.586194,-5.546820,0.911648,5.175756],[4.923993,2.419380,-5.587926,7.500187,-2.329535],[9.159560,2.874385,2.698274,4.679644,4.012318],[9.798443,4.408452,-2.463179,-7.609189,-6.296389],[-6.360335,6.558094,-3.446575,-6.609312,9.851476]],[[0.608098,7.057039,-0.127742,-4.221935,-8.670344],[-4.039871,1.290214,-2.092485,9.240159,3.971766],[-5.963536,8.291171,-9.660107,6.867318,3.549826],[2.345505,-4.177755,3.672032,7.606374,-2.791850],[-0.573195,3.018153,-4.085625,8.473883,2.452937],[5.631810,-6.083140,9.814980,-6.713282,-3.197460],[4.566098,-6.515189,-6.024584,-6.010876,9.616972],[2.915939,-5.182074,-6.855352,-5.315816,-2.798573],[-6.005710,-2.918706,2.295789,7.468003,-6.995758],[7.381452,-2.359897,7.166343,-1.109121,-2.313128],[-6.612836,5.138608,1.009070,5.661982,1.913738],[9.160564,2.424692,-6.634372,8.293273,-2.126029],[1.812238,-4.495176,3.796868,-6.498317,7.833035]],[[-2.413430,-7.838950,-2.250067,9.494915,-9.919111],[-3.906839,-2.578086,0.244542,-4.991655,9.639645],[-5.441282,-6.021494,-3.468557,1.770790,1.296492],[7.638586,-7.429459,6.523251,6.702988,6.106253],[8.356117,8.825063,5.843102,0.509850,-1.575564],[4.726749,5.079768,4.499539,9.598980,6.281970],[2.758349,-1.332769,-6.977842,5.547719,-1.197206],[7.747908,-7.817022,-9.937263,4.627687,3.584447],[-4.712649,4.462121,-6.526659,2.726389,4.538063],[5.021996,3.592264,-4.549338,5.783629,-5.687800],[-0.587430,-8.933447,-1.035544,1.274464,-6.950543],[5.230802,4.183936,-2.041299,2.116460,0.247688],[-0.091052,-5.122244,2.814466,-6.915325,-6.506725]]], dtype = "float32")#candidate|871|(9, 13, 5)|const|float32
uop_872 = relay.acosh(const_871.astype('float32')) # shape=(9, 13, 5)
bop_878 = relay.not_equal(uop_872.astype('bool'), relay.reshape(const_871.astype('bool'), relay.shape_of(uop_872))) # shape=(9, 13, 5)
uop_883 = relay.asinh(bop_878.astype('float64')) # shape=(9, 13, 5)
bop_887 = relay.maximum(uop_872.astype('float32'), relay.reshape(bop_878.astype('float32'), relay.shape_of(uop_872))) # shape=(9, 13, 5)
uop_891 = relay.exp(uop_883.astype('float64')) # shape=(9, 13, 5)
bop_895 = relay.floor_divide(uop_891.astype('float32'), relay.reshape(bop_887.astype('float32'), relay.shape_of(uop_891))) # shape=(9, 13, 5)
func_176_call = mod.get_global_var('func_176')
func_180_call = mutated_mod.get_global_var('func_180')
const_931 = relay.const([-3,1,3,-2,4,-7,-2,-1,-2,-10,-7,1,9,-6,6,5,4,3,-5,10,-7,-4,-8,7,-1,2,-5,5], dtype = "int32")#candidate|931|(28,)|const|int32
var_932 = relay.var("var_932", dtype = "int32", shape = (3, 84))#candidate|932|(3, 84)|var|int32
call_930 = relay.TupleGetItem(func_176_call(relay.reshape(const_931.astype('int32'), [2, 1, 14]), relay.reshape(const_931.astype('int32'), [2, 1, 14]), relay.reshape(var_932.astype('int32'), [2, 9, 14]), ), 0)
call_933 = relay.TupleGetItem(func_180_call(relay.reshape(const_931.astype('int32'), [2, 1, 14]), relay.reshape(const_931.astype('int32'), [2, 1, 14]), relay.reshape(var_932.astype('int32'), [2, 9, 14]), ), 0)
output = relay.Tuple([bop_895,call_930,const_931,var_932,])
output2 = relay.Tuple([bop_895,call_933,const_931,var_932,])
func_935 = relay.Function([var_932,], output)
mod['func_935'] = func_935
mod = relay.transform.InferType()(mod)
var_936 = relay.var("var_936", dtype = "int32", shape = (3, 84))#candidate|936|(3, 84)|var|int32
output = func_935(var_936)
func_937 = relay.Function([var_936], output)
mutated_mod['func_937'] = func_937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1097 = relay.var("var_1097", dtype = "float32", shape = (12, 3, 6))#candidate|1097|(12, 3, 6)|var|float32
uop_1098 = relay.sqrt(var_1097.astype('float32')) # shape=(12, 3, 6)
bop_1108 = relay.left_shift(var_1097.astype('uint64'), relay.reshape(uop_1098.astype('uint64'), relay.shape_of(var_1097))) # shape=(12, 3, 6)
func_793_call = mod.get_global_var('func_793')
func_796_call = mutated_mod.get_global_var('func_796')
const_1133 = relay.const([[5,5,-4,9,-10,-10,6,-9,8,3,-4,-3,10,-6,5,-5,7,-6,-7,-3,-4,8,-10,-2,-1,-6,6,9,-1,2,-10,-4,-7,8,-7,-2,3,1,-7,2,6,6,-9,1,9,-4,10,-5,-10,2,-3,-8,-4,-2,2,10,3,-1,2,-2,5,1,-6,2,-1,-3,9,-3,-10,4,10,-9,4,7,2,-7,7,-2,-4,9,1,10,-5,2,9,-9,-2,3,-10,9,2,-9,-4,2,-5,1,-6,5,5,9,5,-2,8,-2,10,10,-9,-10,10,-1,6,-3,3,4,-7,-2,2,-9,3,-1,-7,4,-2,1,8,-8,-3,7,-1,4,5,-2,1,-9,5,7,1,-7,6,6,9,-10,-7,8,7,5,7,-9,9,5,6,-7,3,-1,-4,-5,-2,-3,2,-6,3,-1,9,1,5,-3,7,-9,5,-1,8,-10,-3,-9,4,3,7,10,-1,-5,6,-7,-9,5,-8,-1,-6,-9,5,3,-1,9,-8,5,9,-6,-9,7,-1,4,-3,-8,-7,10,-2,3,9,3,-10,-7,-8,3,-7,-7,-5,8,7,8,10,6,-1,7,-3,-7,9,-10,-8,6,3,6,6,9,9,-7,-7,2,4,-8,-2,-9,-1,-9,2,-8,1,-7,5,2,3,-2,-4,8,4,6,3,6,-4,4,-2,-3,4,2,3,-3,5,7,-10,7,1,9,-9,-7,-1,9,3,8,1,9,6,-10,-9,-8,2,-4,-1,6,-1,-10,-3,-8,10,-4,-6,5,-6,2,-4,8,-10,-8,7,-8,6,-3,-9,-3,-4,2,-1,3,5,-5,-8,4,5,-8,7,-3,5,2,-4,5,-4,-10,-5,4,-10,9,-2,-7,-9,9,10,1,-7,-1,1,-1,-6,-2,5,1,7,-5,-6,-5,-5,3,8,3,10,-10,-2,6,3,-9,5,6,-1,-10,1,-4,-10,4,-2,7,10,2,8,8,-7,-2,6,-4,-6,5,-10,8,7,-9,-8,2,-4,8,4,3,-2,6,2,-6,-6,8,2,-7,-7,-10,5,-10,8,-2]], dtype = "int16")#candidate|1133|(1, 400)|const|int16
const_1134 = relay.const([-7.844332,-8.235434,-8.588275,9.779811,-1.025180,-7.272153,3.462217,2.846950,4.976906,9.793450,5.362962,-2.121098,1.043532,-1.954952,-8.431262,-5.547250,9.835205,-3.427726,8.514338,-3.920157,1.476142,5.276064,2.577854,-1.226176,-4.501820,-1.845001,9.315229,1.135075,5.150879,4.322520,6.504495,-8.909572,5.871995,8.938749,-7.655306,-1.726140,-6.931871,2.726555,7.322566], dtype = "float32")#candidate|1134|(39,)|const|float32
call_1132 = relay.TupleGetItem(func_793_call(relay.reshape(const_1133.astype('int16'), [16, 5, 5]), relay.reshape(const_1134.astype('float32'), [39,]), ), 3)
call_1135 = relay.TupleGetItem(func_796_call(relay.reshape(const_1133.astype('int16'), [16, 5, 5]), relay.reshape(const_1134.astype('float32'), [39,]), ), 3)
uop_1143 = relay.acosh(bop_1108.astype('float32')) # shape=(12, 3, 6)
func_176_call = mod.get_global_var('func_176')
func_180_call = mutated_mod.get_global_var('func_180')
var_1152 = relay.var("var_1152", dtype = "int32", shape = (252,))#candidate|1152|(252,)|var|int32
call_1151 = relay.TupleGetItem(func_176_call(relay.reshape(call_1132.astype('int32'), [2, 1, 14]), relay.reshape(call_1132.astype('int32'), [2, 1, 14]), relay.reshape(var_1152.astype('int32'), [2, 9, 14]), ), 1)
call_1153 = relay.TupleGetItem(func_180_call(relay.reshape(call_1132.astype('int32'), [2, 1, 14]), relay.reshape(call_1132.astype('int32'), [2, 1, 14]), relay.reshape(var_1152.astype('int32'), [2, 9, 14]), ), 1)
output = relay.Tuple([call_1132,const_1133,const_1134,uop_1143,call_1151,var_1152,])
output2 = relay.Tuple([call_1135,const_1133,const_1134,uop_1143,call_1153,var_1152,])
func_1168 = relay.Function([var_1097,var_1152,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
mutated_mod['func_1168'] = func_1168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1168_call = mutated_mod.get_global_var('func_1168')
var_1170 = relay.var("var_1170", dtype = "float32", shape = (12, 3, 6))#candidate|1170|(12, 3, 6)|var|float32
var_1171 = relay.var("var_1171", dtype = "int32", shape = (252,))#candidate|1171|(252,)|var|int32
call_1169 = func_1168_call(var_1170,var_1171,)
output = call_1169
func_1172 = relay.Function([var_1170,var_1171,], output)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1334 = relay.var("var_1334", dtype = "float64", shape = (13, 7, 15))#candidate|1334|(13, 7, 15)|var|float64
var_1335 = relay.var("var_1335", dtype = "float64", shape = (13, 7, 15))#candidate|1335|(13, 7, 15)|var|float64
bop_1336 = relay.mod(var_1334.astype('float64'), relay.reshape(var_1335.astype('float64'), relay.shape_of(var_1334))) # shape=(13, 7, 15)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
const_1343 = relay.const([5.862474,-4.287703,-8.761258,-1.833610,-3.019149,5.106680,-8.406247,9.324237,1.063520,-5.721958,2.425296,-2.053501,-8.127820,-0.585846,-1.632602,-6.770659,-6.818202,7.114493,5.164180,3.612585,-6.981760,5.320051,7.052403,6.916710,2.359297,5.938393,-5.949824,-2.915475,-2.725230,-6.027841,-7.453537,5.212186,1.013625,7.117649,-6.483956,8.418519,-8.853681,1.972975,1.517071], dtype = "float32")#candidate|1343|(39,)|const|float32
var_1344 = relay.var("var_1344", dtype = "int32", shape = (28,))#candidate|1344|(28,)|var|int32
const_1345 = relay.const([-1,-2,-6,-4,4,-4,3,3,4,-8,-9,7,-3,3,-5,-5,7,-3,4,8,3,2,1,5,-5,6,6,-8,-6,-10,9,-7,-3,-9,-10,-7,-7,10,6,-5,8,7,-5,-3,-7,-1,-8,-3,1,-10,-9,5,-5,5,-10,-4,-4,-2,-9,-1,10,1,2,-1,-5,7,9,9,-9,-7,7,-7,6,3,8,10,-7,8,-6,-2,3,5,3,7,-10,-1,8,1,9,9,-7,-7,-1,-4,5,8,-7,-9,-8,-10,-1,-7,-9,4,2,9,-4,4,1,-2,5,-6,2,-3,-2,-1,4,-3,-6,-4,2,-8,10,-2,9,9,4,6,-3,-8,-4,9,7,-2,2,-1,-9,-1,-10,-2,-8,5,-8,-10,2,7,9,3,-1,10,2,8,-10,-10,3,-1,5,-3,-7,-6,-10,-4,-1,4,-1,-5,-6,4,-3,6,8,-9,3,6,4,8,4,-3,-8,-7,1,-4,7,1,-2,-8,-4,3,-10,7,8,-7,7,7,7,6,6,-3,6,2,2,-10,8,4,-2,-1,-6,5,10,-9,-4,5,5,-2,3,-10,-4,1,-6,2,-6,10,-1,7,7,-8,-3,10,2,-8,7,-10,-2,5,-6,6,9,-5,-3,4,10,-10,7,-10,3,6,8,3,6,8,4,-5], dtype = "int32")#candidate|1345|(252,)|const|int32
call_1342 = relay.TupleGetItem(func_547_call(relay.reshape(const_1343.astype('float32'), [1, 3, 13]), relay.reshape(var_1344.astype('int32'), [28,]), relay.reshape(const_1345.astype('int32'), [252,]), ), 1)
call_1346 = relay.TupleGetItem(func_552_call(relay.reshape(const_1343.astype('float32'), [1, 3, 13]), relay.reshape(var_1344.astype('int32'), [28,]), relay.reshape(const_1345.astype('int32'), [252,]), ), 1)
func_149_call = mod.get_global_var('func_149')
func_152_call = mutated_mod.get_global_var('func_152')
var_1358 = relay.var("var_1358", dtype = "float64", shape = (420,))#candidate|1358|(420,)|var|float64
call_1357 = relay.TupleGetItem(func_149_call(relay.reshape(var_1358.astype('float64'), [14, 3, 10])), 0)
call_1359 = relay.TupleGetItem(func_152_call(relay.reshape(var_1358.astype('float64'), [14, 3, 10])), 0)
output = relay.Tuple([bop_1336,call_1342,const_1343,var_1344,const_1345,call_1357,var_1358,])
output2 = relay.Tuple([bop_1336,call_1346,const_1343,var_1344,const_1345,call_1359,var_1358,])
func_1375 = relay.Function([var_1334,var_1335,var_1344,var_1358,], output)
mod['func_1375'] = func_1375
mod = relay.transform.InferType()(mod)
mutated_mod['func_1375'] = func_1375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1375_call = mutated_mod.get_global_var('func_1375')
var_1377 = relay.var("var_1377", dtype = "float64", shape = (13, 7, 15))#candidate|1377|(13, 7, 15)|var|float64
var_1378 = relay.var("var_1378", dtype = "float64", shape = (13, 7, 15))#candidate|1378|(13, 7, 15)|var|float64
var_1379 = relay.var("var_1379", dtype = "int32", shape = (28,))#candidate|1379|(28,)|var|int32
var_1380 = relay.var("var_1380", dtype = "float64", shape = (420,))#candidate|1380|(420,)|var|float64
call_1376 = func_1375_call(var_1377,var_1378,var_1379,var_1380,)
output = call_1376
func_1381 = relay.Function([var_1377,var_1378,var_1379,var_1380,], output)
mutated_mod['func_1381'] = func_1381
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1392 = relay.const([[[-2.349213,-3.095470],[8.037030,-7.364072]],[[-8.728231,3.134826],[4.055165,-4.128637]],[[1.160199,6.997284],[-9.938165,3.154636]],[[-6.648690,8.512184],[0.860607,-6.070283]],[[-8.849035,8.505139],[-8.986632,-5.826175]],[[-4.181833,-9.670341],[-2.377932,-0.704742]],[[1.234811,5.241140],[5.160996,-4.655513]],[[-3.197135,3.961095],[-1.160079,7.172390]],[[-1.109402,-0.591441],[-9.378966,1.206121]],[[-2.075579,-7.076584],[4.305211,1.539703]],[[-8.628655,-0.336937],[6.521895,8.057117]],[[-4.738753,4.974063],[3.198519,-5.335685]]], dtype = "float64")#candidate|1392|(12, 2, 2)|const|float64
var_1393 = relay.var("var_1393", dtype = "float64", shape = (12, 2, 2))#candidate|1393|(12, 2, 2)|var|float64
bop_1394 = relay.minimum(const_1392.astype('float64'), relay.reshape(var_1393.astype('float64'), relay.shape_of(const_1392))) # shape=(12, 2, 2)
output = bop_1394
output2 = bop_1394
func_1397 = relay.Function([var_1393,], output)
mod['func_1397'] = func_1397
mod = relay.transform.InferType()(mod)
mutated_mod['func_1397'] = func_1397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1398 = relay.var("var_1398", dtype = "float64", shape = (12, 2, 2))#candidate|1398|(12, 2, 2)|var|float64
func_1397_call = mutated_mod.get_global_var('func_1397')
call_1399 = func_1397_call(var_1398)
output = call_1399
func_1400 = relay.Function([var_1398], output)
mutated_mod['func_1400'] = func_1400
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1626 = relay.const(6, dtype = "int8")#candidate|1626|()|const|int8
var_1627 = relay.var("var_1627", dtype = "int8", shape = (6, 1))#candidate|1627|(6, 1)|var|int8
bop_1628 = relay.equal(const_1626.astype('bool'), var_1627.astype('bool')) # shape=(6, 1)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
const_1644 = relay.const([-5.530912,-8.824704,8.511186,2.842424,2.983773,-7.883228,-9.299497,7.437161,1.742165,0.937458,2.483544,9.152896,-3.088736,-6.414114,-7.924409,1.713274,0.935525,-0.298913,1.277017,9.336334,8.400840,3.002171,-8.592466,-6.098676,-7.081778,-9.544141,-4.280311,-2.802406,1.934951,-7.325880,-3.988816,-7.090565,6.207138,-4.109103,4.890736,0.260200,-5.411051,-2.598236,3.360298], dtype = "float32")#candidate|1644|(39,)|const|float32
var_1645 = relay.var("var_1645", dtype = "int32", shape = (28,))#candidate|1645|(28,)|var|int32
var_1646 = relay.var("var_1646", dtype = "int32", shape = (252,))#candidate|1646|(252,)|var|int32
call_1643 = relay.TupleGetItem(func_547_call(relay.reshape(const_1644.astype('float32'), [1, 3, 13]), relay.reshape(var_1645.astype('int32'), [28,]), relay.reshape(var_1646.astype('int32'), [252,]), ), 4)
call_1647 = relay.TupleGetItem(func_552_call(relay.reshape(const_1644.astype('float32'), [1, 3, 13]), relay.reshape(var_1645.astype('int32'), [28,]), relay.reshape(var_1646.astype('int32'), [252,]), ), 4)
bop_1648 = relay.mod(bop_1628.astype('float64'), var_1646.astype('float64')) # shape=(6, 252)
output = relay.Tuple([call_1643,const_1644,var_1645,bop_1648,])
output2 = relay.Tuple([call_1647,const_1644,var_1645,bop_1648,])
func_1659 = relay.Function([var_1627,var_1645,var_1646,], output)
mod['func_1659'] = func_1659
mod = relay.transform.InferType()(mod)
var_1660 = relay.var("var_1660", dtype = "int8", shape = (6, 1))#candidate|1660|(6, 1)|var|int8
var_1661 = relay.var("var_1661", dtype = "int32", shape = (28,))#candidate|1661|(28,)|var|int32
var_1662 = relay.var("var_1662", dtype = "int32", shape = (252,))#candidate|1662|(252,)|var|int32
output = func_1659(var_1660,var_1661,var_1662,)
func_1663 = relay.Function([var_1660,var_1661,var_1662,], output)
mutated_mod['func_1663'] = func_1663
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1839 = relay.constdtype = "float32")#candidate|1839|(16, 8, 14)|const|float32
uop_1840 = relay.sinh(const_1839.astype('float32')) # shape=(16, 8, 14)
output = uop_1840
output2 = uop_1840
func_1856 = relay.Function([], output)
mod['func_1856'] = func_1856
mod = relay.transform.InferType()(mod)
output = func_1856()
func_1857 = relay.Function([], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1880 = relay.var("var_1880", dtype = "float32", shape = (5, 5, 14))#candidate|1880|(5, 5, 14)|var|float32
uop_1881 = relay.acosh(var_1880.astype('float32')) # shape=(5, 5, 14)
var_1898 = relay.var("var_1898", dtype = "float32", shape = (5, 5, 14))#candidate|1898|(5, 5, 14)|var|float32
bop_1899 = relay.less_equal(uop_1881.astype('bool'), relay.reshape(var_1898.astype('bool'), relay.shape_of(uop_1881))) # shape=(5, 5, 14)
output = bop_1899
output2 = bop_1899
func_1904 = relay.Function([var_1880,var_1898,], output)
mod['func_1904'] = func_1904
mod = relay.transform.InferType()(mod)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1904_call = mutated_mod.get_global_var('func_1904')
var_1906 = relay.var("var_1906", dtype = "float32", shape = (5, 5, 14))#candidate|1906|(5, 5, 14)|var|float32
var_1907 = relay.var("var_1907", dtype = "float32", shape = (5, 5, 14))#candidate|1907|(5, 5, 14)|var|float32
call_1905 = func_1904_call(var_1906,var_1907,)
output = call_1905
func_1908 = relay.Function([var_1906,var_1907,], output)
mutated_mod['func_1908'] = func_1908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2030 = func_1856_call()
call_2031 = func_1856_call()
func_427_call = mod.get_global_var('func_427')
func_432_call = mutated_mod.get_global_var('func_432')
var_2066 = relay.var("var_2066", dtype = "float32", shape = (350, 3))#candidate|2066|(350, 3)|var|float32
var_2067 = relay.var("var_2067", dtype = "int32", shape = (28,))#candidate|2067|(28,)|var|int32
const_2068 = relay.const([7,-3,4,-1,-1,-6,-9,3,10,8,-4,-10,9,2,3,6,-7,-5,4,-1,6,-8,-4,1,-10,10,7,10,-5,9,8,-10,-4,-8,-2,-3,-8,-3,2,6,4,-10,3,7,10,8,1,7,-4,4,-5,4,8,4,3,3,-6,-6,-3,-9,-9,5,8,5,-6,-7,6,4,9,3,10,9,1,4,-10,-8,-1,-9,4,10,3,-1,-1,4,-5,-1,-4,-8,8,10,-7,7,3,9,-9,9,8,-4,5,8,4,-4,2,5,5,7,6,-2,-9,-6,1,2,-5,10,-2,-1,-10,7,8,1,7,-5,-2,-10,7,-9,1,-10,8,8,8,8,-6,-1,7,8,-2,7,-2,-2,4,9,-3,-4,9,-2,-5,9,5,6,2,8,-10,5,-1,-3,10,-10,3,3,8,-10,-6,-4,9,-5,-5,4,-5,7,7,10,-4,-2,6,8,1,-7,-9,9,3,8,6,-5,-2,-8,-4,8,-1,-4,6,-1,2,-5,10,-10,10,3,1,-1,-10,-3,9,2,-2,5,8,6,-5,-2,6,8,-1,6,-6,-4,7,-1,-1,-6,-7,2,8,-7,10,8,3,-6,4,8,-10,-6,-10,-7,10,-5,-6,-4,6,9,-5,5,-2,4,-4,8,5,-5,3,-7,5,9], dtype = "int32")#candidate|2068|(252,)|const|int32
call_2065 = relay.TupleGetItem(func_427_call(relay.reshape(var_2066.astype('float32'), [5, 14, 15]), relay.reshape(var_2067.astype('int32'), [28,]), relay.reshape(const_2068.astype('int32'), [252,]), ), 0)
call_2069 = relay.TupleGetItem(func_432_call(relay.reshape(var_2066.astype('float32'), [5, 14, 15]), relay.reshape(var_2067.astype('int32'), [28,]), relay.reshape(const_2068.astype('int32'), [252,]), ), 0)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2074 = func_1856_call()
call_2075 = func_1856_call()
output = relay.Tuple([call_2030,call_2065,var_2066,var_2067,const_2068,call_2074,])
output2 = relay.Tuple([call_2031,call_2069,var_2066,var_2067,const_2068,call_2075,])
func_2088 = relay.Function([var_2066,var_2067,], output)
mod['func_2088'] = func_2088
mod = relay.transform.InferType()(mod)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2088_call = mutated_mod.get_global_var('func_2088')
var_2090 = relay.var("var_2090", dtype = "float32", shape = (350, 3))#candidate|2090|(350, 3)|var|float32
var_2091 = relay.var("var_2091", dtype = "int32", shape = (28,))#candidate|2091|(28,)|var|int32
call_2089 = func_2088_call(var_2090,var_2091,)
output = call_2089
func_2092 = relay.Function([var_2090,var_2091,], output)
mutated_mod['func_2092'] = func_2092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2114 = func_1856_call()
call_2115 = func_1856_call()
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
const_2122 = relay.const([8.893154,6.287643,-2.906318,-6.080717,-1.537694,-2.979167,-6.051511,3.693685,6.497681,0.809347,-4.897337,0.038804,-0.776834,2.662181,7.180949,-9.983461,6.310105,-8.369071,8.845722,-5.197824,9.854086,-1.622223,0.089209,2.901126,-8.026585,9.891201,-9.614754,-0.385375,0.429255,3.379563,2.484672,2.648799,6.603916,-2.057618,-8.178977,-2.512251,9.891071,-0.985601,4.574353,-9.161357,-3.680034,-7.913635,-6.408524,0.554214,-7.488594,-3.828008,-7.950943,-6.526341,-3.988550,1.358884,8.243917,-5.034251,-5.873766,7.239518,-7.928076,6.621452,-3.159504,-6.156074,-5.337844,-3.824153,-3.805219,-9.566059,5.429750,-3.063045,-4.694510,-3.983177,-2.332952,-2.783058,0.118103,-6.811806,2.542753,-3.529893,0.721304,-6.487435,2.026693,0.138886,-1.032206,-7.366678,-4.600967,9.777549,-7.590930,7.666937,-9.095842,4.729336,0.013663,1.565691,-0.645112,-2.321441,-1.743884,2.698577,-5.829091,5.171324,9.003320,-1.984397,9.744355,-3.537780,1.135270,-4.004626,8.377700,-9.989575,7.252542,-3.950884,3.292270,7.452075,2.619214,0.746467,4.970728,-8.112323,9.568486,0.052169,-1.901592,-6.463441,5.797705,9.382411,7.925072,7.368406,-7.828299,-6.963580,3.422362,2.797262,-9.762882,-7.747854,-2.906089,-3.859160,3.446074,-1.703103,4.269378,7.025232,6.460014,-4.567517,-0.155275,7.416856,8.178425,0.701085,0.132379,5.703291,0.713486,-1.505430,5.384032,0.776121,-2.480286,-0.346378,7.580996,-1.025614,6.330493,5.101507,-6.445794,-9.821922,-7.863332,-4.470087,-3.946770,0.930109,7.742500,9.588365,7.689051,7.609048,-0.614691,7.382032,-3.785793,-9.685259,-0.994109,9.056474,-1.829111,-3.201105,3.156985,8.992313,4.101976,-4.468569,-0.321886,7.004524,-3.762107,9.860104,-9.339298,-2.756302,-2.685116,-8.239523,-3.559612,4.957138,2.668148,3.965286,3.766406,8.354116,-5.533485,7.516186,0.947253,-7.161651,-5.745770,2.282370,-7.292653,6.233519,-2.379698,-5.435201,9.404052,-6.305441,4.896516,-9.161497,-7.708237,8.728247,3.045242,4.310538,6.392696,-7.626010,4.038772,0.149446,-4.748306,-5.419219,-6.423904,0.660134,-0.801768,5.648200,-2.724381,-0.304720,1.848132,7.575220,1.352642,5.000440], dtype = "float32")#candidate|2122|(216,)|const|float32
var_2123 = relay.var("var_2123", dtype = "int32", shape = (252,))#candidate|2123|(252,)|var|int32
call_2121 = relay.TupleGetItem(func_1168_call(relay.reshape(const_2122.astype('float32'), [12, 3, 6]), relay.reshape(var_2123.astype('int32'), [252,]), ), 0)
call_2124 = relay.TupleGetItem(func_1172_call(relay.reshape(const_2122.astype('float32'), [12, 3, 6]), relay.reshape(var_2123.astype('int32'), [252,]), ), 0)
output = relay.Tuple([call_2114,call_2121,const_2122,var_2123,])
output2 = relay.Tuple([call_2115,call_2124,const_2122,var_2123,])
func_2128 = relay.Function([var_2123,], output)
mod['func_2128'] = func_2128
mod = relay.transform.InferType()(mod)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2129 = relay.var("var_2129", dtype = "int32", shape = (252,))#candidate|2129|(252,)|var|int32
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2130 = func_2128_call(var_2129)
output = call_2130
func_2131 = relay.Function([var_2129], output)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2133 = func_1856_call()
call_2134 = func_1856_call()
output = call_2133
output2 = call_2134
func_2136 = relay.Function([], output)
mod['func_2136'] = func_2136
mod = relay.transform.InferType()(mod)
output = func_2136()
func_2137 = relay.Function([], output)
mutated_mod['func_2137'] = func_2137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2162 = relay.var("var_2162", dtype = "uint32", shape = (16, 5, 2))#candidate|2162|(16, 5, 2)|var|uint32
var_2163 = relay.var("var_2163", dtype = "uint32", shape = (16, 5, 2))#candidate|2163|(16, 5, 2)|var|uint32
bop_2164 = relay.minimum(var_2162.astype('uint32'), relay.reshape(var_2163.astype('uint32'), relay.shape_of(var_2162))) # shape=(16, 5, 2)
const_2170 = relay.const([[[-9,10],[-7,-2],[-9,-5],[6,3],[-10,-10]],[[2,-10],[6,7],[-2,-1],[-5,3],[-3,1]],[[5,5],[2,3],[-2,4],[6,-8],[-7,6]],[[5,-10],[-8,2],[-7,-5],[1,-4],[-7,-6]],[[2,10],[-3,10],[-1,-9],[4,9],[-10,5]],[[-6,-10],[10,9],[-2,4],[-4,-2],[3,6]],[[8,4],[-3,-6],[-6,2],[1,6],[-7,9]],[[-1,-5],[-9,1],[-1,-8],[2,-3],[-7,-8]],[[1,-2],[4,-6],[-4,-4],[7,-9],[8,-10]],[[6,-6],[-10,-3],[-9,9],[-3,-4],[10,9]],[[4,10],[-3,-8],[8,8],[6,2],[4,-4]],[[-8,-4],[-5,-7],[-8,-8],[8,-4],[6,1]],[[-1,-9],[2,6],[9,-10],[-4,-8],[-1,-3]],[[-1,-9],[-8,1],[-6,9],[-9,6],[-10,-9]],[[10,-7],[-2,-3],[-10,-1],[-7,2],[-5,1]],[[-3,-9],[-1,-8],[-7,1],[6,4],[-3,-10]]], dtype = "uint32")#candidate|2170|(16, 5, 2)|const|uint32
bop_2171 = relay.logical_xor(bop_2164.astype('int16'), relay.reshape(const_2170.astype('int16'), relay.shape_of(bop_2164))) # shape=(16, 5, 2)
output = relay.Tuple([bop_2171,])
output2 = relay.Tuple([bop_2171,])
func_2184 = relay.Function([var_2162,var_2163,], output)
mod['func_2184'] = func_2184
mod = relay.transform.InferType()(mod)
mutated_mod['func_2184'] = func_2184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2184_call = mutated_mod.get_global_var('func_2184')
var_2186 = relay.var("var_2186", dtype = "uint32", shape = (16, 5, 2))#candidate|2186|(16, 5, 2)|var|uint32
var_2187 = relay.var("var_2187", dtype = "uint32", shape = (16, 5, 2))#candidate|2187|(16, 5, 2)|var|uint32
call_2185 = func_2184_call(var_2186,var_2187,)
output = call_2185
func_2188 = relay.Function([var_2186,var_2187,], output)
mutated_mod['func_2188'] = func_2188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2193 = func_1856_call()
call_2194 = func_1856_call()
var_2205 = relay.var("var_2205", dtype = "float32", shape = (16, 8, 14))#candidate|2205|(16, 8, 14)|var|float32
bop_2206 = relay.logical_and(call_2193.astype('bool'), relay.reshape(var_2205.astype('bool'), relay.shape_of(call_2193))) # shape=(16, 8, 14)
bop_2209 = relay.logical_and(call_2194.astype('bool'), relay.reshape(var_2205.astype('bool'), relay.shape_of(call_2194))) # shape=(16, 8, 14)
bop_2239 = relay.subtract(var_2205.astype('int64'), relay.reshape(call_2193.astype('int64'), relay.shape_of(var_2205))) # shape=(16, 8, 14)
bop_2242 = relay.subtract(var_2205.astype('int64'), relay.reshape(call_2194.astype('int64'), relay.shape_of(var_2205))) # shape=(16, 8, 14)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2249 = func_2136_call()
call_2250 = func_2136_call()
output = relay.Tuple([bop_2206,bop_2239,call_2249,])
output2 = relay.Tuple([bop_2209,bop_2242,call_2250,])
func_2252 = relay.Function([var_2205,], output)
mod['func_2252'] = func_2252
mod = relay.transform.InferType()(mod)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2253 = relay.var("var_2253", dtype = "float32", shape = (16, 8, 14))#candidate|2253|(16, 8, 14)|var|float32
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2254 = func_2252_call(var_2253)
output = call_2254
func_2255 = relay.Function([var_2253], output)
mutated_mod['func_2255'] = func_2255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2270 = func_1856_call()
call_2271 = func_1856_call()
output = call_2270
output2 = call_2271
func_2275 = relay.Function([], output)
mod['func_2275'] = func_2275
mod = relay.transform.InferType()(mod)
output = func_2275()
func_2276 = relay.Function([], output)
mutated_mod['func_2276'] = func_2276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2289 = func_2136_call()
call_2290 = func_2136_call()
uop_2299 = relay.rsqrt(call_2289.astype('float64')) # shape=(16, 8, 14)
uop_2301 = relay.rsqrt(call_2290.astype('float64')) # shape=(16, 8, 14)
uop_2312 = relay.atan(call_2289.astype('float64')) # shape=(16, 8, 14)
uop_2314 = relay.atan(call_2290.astype('float64')) # shape=(16, 8, 14)
uop_2318 = relay.tan(uop_2299.astype('float32')) # shape=(16, 8, 14)
uop_2320 = relay.tan(uop_2301.astype('float32')) # shape=(16, 8, 14)
var_2325 = relay.var("var_2325", dtype = "float32", shape = (16, 8, 14))#candidate|2325|(16, 8, 14)|var|float32
bop_2326 = relay.less(uop_2318.astype('bool'), relay.reshape(var_2325.astype('bool'), relay.shape_of(uop_2318))) # shape=(16, 8, 14)
bop_2329 = relay.less(uop_2320.astype('bool'), relay.reshape(var_2325.astype('bool'), relay.shape_of(uop_2320))) # shape=(16, 8, 14)
output = relay.Tuple([uop_2312,bop_2326,])
output2 = relay.Tuple([uop_2314,bop_2329,])
func_2337 = relay.Function([var_2325,], output)
mod['func_2337'] = func_2337
mod = relay.transform.InferType()(mod)
var_2338 = relay.var("var_2338", dtype = "float32", shape = (16, 8, 14))#candidate|2338|(16, 8, 14)|var|float32
output = func_2337(var_2338)
func_2339 = relay.Function([var_2338], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2480 = relay.const([[[7.745433,-6.253004,3.616960,8.712767,3.293838,-4.037653,6.626987,8.668400,-9.230855,4.589215,3.597508,8.901090,-0.271426,3.220944,-2.396381,-8.435167]],[[3.292772,7.065588,-5.996478,6.635089,9.786859,3.873983,6.385390,5.497730,9.399822,-8.093757,-9.331308,-6.734933,-7.296459,7.475517,-9.546609,-1.564874]],[[6.244553,-5.797363,8.724298,6.245796,3.474039,8.651020,4.914896,-3.325451,-6.378938,1.284061,-5.604434,3.184674,9.057139,0.114269,-0.425175,4.535805]],[[-8.887004,7.619820,-3.647225,-2.022191,-9.883297,-8.337406,-2.682284,-0.020998,3.388394,-0.479340,8.966041,-8.529261,-6.046207,-0.889889,3.275964,-9.592314]],[[2.973426,4.183277,-5.809692,1.741730,-2.010603,-1.443495,-2.821940,4.778105,6.600218,1.156990,2.379523,6.238535,-2.533515,-0.784431,-6.144542,7.758261]]], dtype = "float32")#candidate|2480|(5, 1, 16)|const|float32
uop_2481 = relay.exp(const_2480.astype('float32')) # shape=(5, 1, 16)
bop_2491 = relay.minimum(const_2480.astype('int8'), relay.reshape(uop_2481.astype('int8'), relay.shape_of(const_2480))) # shape=(5, 1, 16)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
var_2499 = relay.var("var_2499", dtype = "float32", shape = (39,))#candidate|2499|(39,)|var|float32
var_2500 = relay.var("var_2500", dtype = "int32", shape = (28,))#candidate|2500|(28,)|var|int32
var_2501 = relay.var("var_2501", dtype = "int32", shape = (252,))#candidate|2501|(252,)|var|int32
call_2498 = relay.TupleGetItem(func_547_call(relay.reshape(var_2499.astype('float32'), [1, 3, 13]), relay.reshape(var_2500.astype('int32'), [28,]), relay.reshape(var_2501.astype('int32'), [252,]), ), 2)
call_2502 = relay.TupleGetItem(func_552_call(relay.reshape(var_2499.astype('float32'), [1, 3, 13]), relay.reshape(var_2500.astype('int32'), [28,]), relay.reshape(var_2501.astype('int32'), [252,]), ), 2)
uop_2505 = relay.acos(bop_2491.astype('float64')) # shape=(5, 1, 16)
bop_2511 = relay.power(var_2501.astype('float64'), relay.reshape(call_2498.astype('float64'), relay.shape_of(var_2501))) # shape=(252,)
bop_2514 = relay.power(var_2501.astype('float64'), relay.reshape(call_2502.astype('float64'), relay.shape_of(var_2501))) # shape=(252,)
output = relay.Tuple([var_2499,var_2500,uop_2505,bop_2511,])
output2 = relay.Tuple([var_2499,var_2500,uop_2505,bop_2514,])
func_2516 = relay.Function([var_2499,var_2500,var_2501,], output)
mod['func_2516'] = func_2516
mod = relay.transform.InferType()(mod)
var_2517 = relay.var("var_2517", dtype = "float32", shape = (39,))#candidate|2517|(39,)|var|float32
var_2518 = relay.var("var_2518", dtype = "int32", shape = (28,))#candidate|2518|(28,)|var|int32
var_2519 = relay.var("var_2519", dtype = "int32", shape = (252,))#candidate|2519|(252,)|var|int32
output = func_2516(var_2517,var_2518,var_2519,)
func_2520 = relay.Function([var_2517,var_2518,var_2519,], output)
mutated_mod['func_2520'] = func_2520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2570 = func_2136_call()
call_2571 = func_2136_call()
func_1659_call = mod.get_global_var('func_1659')
func_1663_call = mutated_mod.get_global_var('func_1663')
var_2581 = relay.var("var_2581", dtype = "int8", shape = (6,))#candidate|2581|(6,)|var|int8
var_2582 = relay.var("var_2582", dtype = "int32", shape = (28,))#candidate|2582|(28,)|var|int32
const_2583 = relay.const([5,-8,2,-3,-4,3,5,-5,8,-9,-3,-9,1,-9,4,9,7,6,-7,-8,-3,3,8,-6,-5,-3,-8,-1,10,10,-10,-5,-10,6,9,-6,-5,-2,-9,9,-3,-2,7,-2,5,-2,4,-2,8,2,2,-10,9,1,-10,3,5,2,1,10,7,3,-1,4,4,9,-5,4,10,-1,-6,-2,10,-2,10,-8,-7,-8,7,10,-9,-7,7,-8,7,-7,-4,3,-5,-6,8,-3,9,1,-5,-7,-9,7,-8,-3,4,7,9,3,-6,10,-7,6,4,1,-10,4,-1,-5,5,3,10,-9,-3,-2,5,10,6,-7,-3,2,5,3,6,-6,-10,10,2,-6,4,-1,-1,-1,6,9,-8,-3,6,10,5,-3,-6,4,6,2,-9,9,5,9,1,1,1,-2,-9,1,8,-1,-10,-4,-5,6,-3,-4,-8,2,-4,-7,-6,-6,-1,10,-2,6,8,-10,-10,6,3,4,4,-1,6,5,-6,8,9,-7,-3,-5,-4,-1,-3,-10,9,-8,-7,-3,-6,6,1,-9,3,1,2,-6,-3,3,-6,-2,4,-7,-6,5,-9,6,-4,-10,3,-5,-7,1,10,6,6,8,-8,2,-5,8,7,-4,8,-10,-3,-6,-7,-2,3,-10,8,1,-3,9,-10,-2,10,-8], dtype = "int32")#candidate|2583|(252,)|const|int32
call_2580 = relay.TupleGetItem(func_1659_call(relay.reshape(var_2581.astype('int8'), [6, 1]), relay.reshape(var_2582.astype('int32'), [28,]), relay.reshape(const_2583.astype('int32'), [252,]), ), 1)
call_2584 = relay.TupleGetItem(func_1663_call(relay.reshape(var_2581.astype('int8'), [6, 1]), relay.reshape(var_2582.astype('int32'), [28,]), relay.reshape(const_2583.astype('int32'), [252,]), ), 1)
output = relay.Tuple([call_2570,call_2580,var_2581,var_2582,const_2583,])
output2 = relay.Tuple([call_2571,call_2584,var_2581,var_2582,const_2583,])
func_2591 = relay.Function([var_2581,var_2582,], output)
mod['func_2591'] = func_2591
mod = relay.transform.InferType()(mod)
mutated_mod['func_2591'] = func_2591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2591_call = mutated_mod.get_global_var('func_2591')
var_2593 = relay.var("var_2593", dtype = "int8", shape = (6,))#candidate|2593|(6,)|var|int8
var_2594 = relay.var("var_2594", dtype = "int32", shape = (28,))#candidate|2594|(28,)|var|int32
call_2592 = func_2591_call(var_2593,var_2594,)
output = call_2592
func_2595 = relay.Function([var_2593,var_2594,], output)
mutated_mod['func_2595'] = func_2595
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2597 = relay.const([[[-9.934191,3.284504,1.089117,-1.568983,-6.971793,2.705776,-6.555223,1.824308,0.510924,7.610102,-8.129223,-2.129979,1.780277],[-2.250629,-8.732774,5.230444,-3.594624,-9.325820,-7.231267,-7.501841,-4.004188,-8.330898,-2.285467,-3.620098,-1.534839,-9.270883],[-4.093787,3.522105,-1.037001,-7.970310,-2.684161,-8.829951,1.285459,-9.171230,4.038066,-4.125111,-6.281216,-4.356727,1.420775]],[[-4.818014,1.914942,-9.763841,8.479296,7.502405,0.512845,-0.876368,0.288312,-2.994371,-1.425984,-3.323722,-7.864610,8.518462],[-3.548745,4.810390,8.904516,1.102759,-0.764463,-1.941819,1.313904,-0.126055,2.301026,-5.347951,2.534531,7.786180,-1.244917],[2.946064,8.984939,1.206045,-2.254012,1.875716,0.397384,-0.957442,-7.338206,2.523527,-5.920681,7.903812,0.896905,9.966361]],[[-8.207418,-7.135593,-7.800745,8.971039,-4.905396,6.161669,-5.632979,-0.122413,5.083688,0.578584,7.858247,-2.461380,-7.766476],[-4.968478,9.885459,-2.963280,-1.589271,-3.342648,-8.154211,-2.537036,9.442084,-9.818586,-6.924543,4.524918,1.736877,-5.865967],[2.590947,6.681445,-6.639767,9.978430,5.411754,3.355297,-4.387335,-1.444643,-0.207426,-6.176944,7.170502,8.414502,7.909714]],[[2.201856,5.776114,-7.994182,-9.237325,3.421941,3.392394,7.236702,-5.905753,-1.340088,-8.026810,-9.736603,-6.274887,-8.708703],[7.291955,5.768572,-5.443500,7.553347,-8.202010,7.716131,4.982051,8.091321,2.493569,1.447618,-5.935142,0.652986,1.810972],[4.470954,-7.827649,4.764274,3.068502,-6.595222,6.678779,8.998434,3.713313,8.952914,3.371545,0.724093,9.736290,5.427607]],[[6.765001,-8.107147,-9.877814,-3.889623,-6.816606,-8.325422,-5.658886,2.100495,-1.661994,-8.906557,2.234057,8.592986,-6.875339],[-2.390532,3.516637,5.361325,-7.208013,6.273011,5.126444,5.109469,7.771029,2.587969,-3.306903,-2.872871,-0.155482,7.280696],[-0.199612,-5.449052,1.003560,-8.969383,-2.891278,1.963183,5.366892,7.607785,-6.181739,-7.526523,-9.463515,-5.958738,5.368164]],[[-5.875255,3.033204,0.714564,-1.523567,-9.945147,-5.159264,-2.687536,4.627278,1.670021,6.839810,1.420649,9.335754,8.490593],[-2.460800,8.934353,-0.134246,4.001154,5.057631,5.315980,-2.392432,5.477925,-7.630245,-9.901967,-9.113562,1.188651,-6.130836],[2.907467,-2.361370,-3.229757,-3.819369,-5.081933,4.378703,-0.491500,2.805718,-1.326022,-8.992646,-7.302946,2.731424,-0.981725]],[[5.445347,3.592804,-1.772323,0.590835,-4.611298,7.103972,5.096300,3.462322,5.757709,7.566607,-4.384169,9.551633,-7.735112],[7.718204,-4.235314,9.944625,3.850313,5.920384,7.004210,2.171558,-8.209382,8.974484,-1.973968,-1.095193,-2.773087,-6.875114],[9.583774,5.793535,-2.038662,-8.732083,-3.583094,-0.777810,-8.527192,-7.743618,-6.309304,2.994850,-6.177737,9.525271,-9.010065]],[[8.469063,4.551895,4.591545,0.039957,-8.331608,0.017489,-6.488386,-5.163696,-3.659502,-9.119031,7.024541,-4.064442,-9.634390],[5.248249,4.633949,3.421106,-7.538607,0.508580,-1.830418,6.173802,-9.967648,0.719721,-0.490710,2.983668,-0.391825,4.645791],[-3.808304,5.011990,3.555887,-0.738991,-2.132653,1.348912,2.716981,-4.837343,6.551208,-6.877403,-9.067351,-4.511542,-5.406481]]], dtype = "float32")#candidate|2597|(8, 3, 13)|const|float32
uop_2598 = relay.sigmoid(const_2597.astype('float32')) # shape=(8, 3, 13)
uop_2608 = relay.sinh(uop_2598.astype('float32')) # shape=(8, 3, 13)
bop_2613 = relay.right_shift(uop_2608.astype('int8'), relay.reshape(uop_2598.astype('int8'), relay.shape_of(uop_2608))) # shape=(8, 3, 13)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_2617 = func_2275_call()
call_2618 = func_2275_call()
func_1375_call = mod.get_global_var('func_1375')
func_1381_call = mutated_mod.get_global_var('func_1381')
const_2622 = relay.const([5.910409,-7.329859,-0.337041,4.754238,-5.989714,-9.540347,-9.655737,5.895921,5.181355,-6.801922,4.543446,-3.411172,-6.355037,8.610400,3.317591,6.974615,9.458265,-9.853344,4.063963,-8.565513,-8.942803,1.513167,0.305240,0.841870,-2.939480,2.095473,9.223103,-1.633055,0.829914,3.631126,-0.796100,3.333166,7.830495,5.708856,-5.536624,-1.958692,-6.685481,1.538695,9.137567,-9.704466,-5.292278,2.443638,-9.812330,1.620180,1.590043,-6.139177,5.129309,-1.793295,8.246709,7.758646,9.731694,-0.118564,-7.617901,2.223054,-7.399531,0.974004,-8.901566,-1.663165,1.664282,-2.687911,5.689593,-1.130649,7.241543,2.697022,2.962101,-3.918181,-8.975579,-2.458798,-8.736203,-9.744489,-6.220562,5.832522,3.984742,9.730259,-0.044862,9.024591,-5.260000,-4.176990,-5.299941,4.158521,0.716191,7.172499,-6.650852,-6.559776,1.678277,-7.797801,-9.443538,-2.352391,5.558997,-4.525273,-2.053536,5.169072,-1.767331,-5.370262,0.791530,-9.051953,8.990689,1.420652,5.476375,-6.658282,-2.159725,-4.162923,-4.859133,-1.174604,-5.564055,9.174981,8.877425,-1.278034,6.014741,-0.247635,-6.156436,2.623344,-9.029373,5.950001,-2.329615,2.892516,-0.830776,4.017842,-7.247970,5.277950,9.687626,7.327669,3.849382,-6.329947,-4.064649,-5.336855,6.314455,-4.363258,-8.207845,6.650987,0.301793,6.939751,2.520888,8.250470,7.393406,-7.265262,0.727538,7.587602,9.361601,6.556114,-9.063233,-6.122187,3.529701,-7.463199,6.268758,-0.994106,-0.852070,-4.900904,4.314227,3.185188,-9.717943,4.589193,-0.496968,0.757157,-6.906580,3.194076,-3.555549,-1.997514,8.513510,6.231141,-8.485375,7.284465,2.277220,-9.529161,8.865692,5.341206,-1.797248,-5.590165,6.771788,-6.951824,-1.914890,5.877620,-8.211166,9.880828,-0.379252,-8.753062,-7.282399,7.201756,4.075699,-9.689849,0.060870,7.097840,-9.430612,-5.156302,6.378863,8.632818,5.541075,-4.836365,-4.042172,8.215376,-9.817600,-2.716475,6.722976,-0.492441,2.847016,-2.645800,6.575597,-2.585800,1.587984,9.391935,-0.242759,-3.639625,4.803488,4.899072,-6.872774,-6.781573,-9.806709,-5.460087,-5.789177,-8.240868,1.778109,2.750701,-8.344904,2.446700,-0.049849,-0.742376,2.002560,-8.740412,4.050861,4.148938,-1.663100,-0.553854,-5.512277,0.662919,-1.408729,-8.615311,-4.177864,-6.974711,-1.261978,-6.858368,-4.935664,5.790983,9.594157,5.361552,1.415238,5.642113,-6.837045,-8.299637,-3.993821,-0.280384,0.738825,-5.640943,-6.509660,4.181236,-5.899991,6.315452,-6.457819,7.990983,8.616346,7.346855,9.255652,-3.777728,-1.096186,-9.850152,-6.222007,3.759725,4.712908,5.425862,-7.030272,-4.755163,-8.222687,-9.881920,-6.071238,3.405183,-5.639545,-6.561750,5.705680,4.792399,5.620574,-7.540911,-6.145245,-2.676520,4.360106,4.378576,-8.678540,1.538418,-6.749504,7.683136,9.493540,-7.439771,3.617025,6.780136,1.889685,0.012316,-4.841445,6.885525,3.973734,-2.339654,1.451548,0.160041,-5.232113,9.418829,-7.773062,7.971358,5.168667,9.704696,9.068959,8.779829,0.535616,3.048967,-8.168457,5.248289,-2.463172,-6.324035,9.453485,3.962138,-6.501524,-2.397160,-5.670880,-4.569114,1.567182,-7.491385,-4.568413,-3.553625,-3.382109,8.409638,-1.698913,9.075611,1.119529,-2.011143,7.766983,-1.960803,-4.153972,-6.441925,-2.913229,-8.870392,-4.493733,-2.287579,-8.741175,-9.869244,8.537094,3.999390,-2.332201,-2.157738,0.054315,6.531830,3.549397,-0.918233,-9.877166,-3.744945,-6.364841,7.034820,7.714534,8.781254,-8.422486,1.014344,-5.862628,9.434731,0.858335,-0.189561,-3.440868,1.182025,3.988031,-1.841396,-1.893419,-5.518931,0.076517,5.951170,-8.753724,6.903656,-2.326706,-2.022691,6.431935,-0.500577,7.403806,9.642213,-4.945229,8.138488,9.607969,4.626671,-9.158180,-7.673448,1.456630,2.636691,-4.872811,-0.835141,1.103210,5.806309,-5.324722,3.029115,-7.533525,-1.267762,0.558056,-5.558624,4.575148,-5.999259,-7.886891,3.939988,-7.281061,7.740539,5.731201,3.038121,-0.114824,-1.994830,-9.360659,-6.662705,-9.475626,8.593260,8.784772,-3.648327,-9.452396,-7.521869,6.646933,-6.976814,-4.615591,9.434345,-9.671957,-7.595970,0.021024,7.964571,-1.948218,9.769234,-1.813761,-7.407310,-5.844193,-6.865405,6.325528,7.174379,8.972482,-3.428600,2.003689,8.171828,0.276192,-3.896897,-1.851308,-8.705662,-3.787162,-3.728049,0.859193,-5.401636,8.118480,-4.347663,7.957705,-1.560669,1.241453,5.795293,-4.076954,-4.146217,-4.017789,-7.574797,6.933841,-4.845707,-6.373005,-5.192102,4.797599,-7.523870,-6.762460,-2.377201,-3.690436,-6.520018,1.423950,3.929466,-1.108355,2.217179,-7.387602,-6.738327,7.860418,2.823241,9.016661,9.638500,-1.938956,6.541692,-5.011676,7.824161,-7.528568,-1.627634,1.186808,1.192691,-9.197555,-0.196562,5.526335,-5.112905,8.809579,-9.755849,8.298263,-8.235372,9.258900,-3.876641,5.514917,6.808612,5.784789,2.811070,5.897474,7.014736,-7.970995,-7.197716,-2.060081,-6.279498,7.765036,-9.249486,-6.952368,-0.108929,-2.578345,5.378105,-4.892549,-2.319625,-8.403395,-5.209879,-5.917117,8.382765,-4.589990,-6.997220,-3.465701,-0.092280,-3.016529,9.222734,7.431327,-9.450561,-7.610007,2.522689,-7.719780,4.986331,-5.046068,-7.724299,6.648867,6.234058,-7.480758,-4.754481,-0.236112,-5.539149,4.497607,0.860055,2.507105,-3.642508,2.736510,2.661831,5.154510,-7.750162,-8.879032,8.133069,6.681211,6.774765,-1.636640,-5.789558,7.943091,0.053056,-4.213739,0.979910,0.456333,-6.691144,-1.031203,-7.007604,-1.207898,7.577892,-2.498063,-5.325952,1.298464,9.046270,3.241774,-9.790804,-2.669986,5.819272,-4.749738,-3.589880,-5.823724,-8.219815,-0.273282,0.359431,8.120283,-9.895739,3.702534,5.756495,-0.946056,-5.553959,8.175212,-9.341238,2.211665,-7.692300,2.580840,8.751183,1.261421,-3.160283,-5.502797,-3.784228,-5.647805,6.872852,3.967092,-9.478442,0.907199,0.790841,7.272408,-6.267383,8.539618,-3.754057,-2.943086,3.350126,9.717299,9.058640,6.553966,8.293348,-6.075960,5.712038,-1.652812,-0.388954,-0.091179,-8.794323,1.036060,-4.936375,9.239740,3.300126,-9.007938,-1.428536,-1.769346,-8.779937,3.160084,2.174326,-3.269258,-1.383258,-9.253160,0.796175,-2.205742,-9.379914,-9.484212,7.136196,4.328022,3.332192,1.098344,7.521317,-3.518903,6.245706,-0.497778,6.055224,3.986668,0.481250,-4.028294,-9.286425,-3.847888,3.582684,-3.925075,-7.412553,1.994757,2.336831,7.201684,6.933643,-6.960996,-2.254870,5.398740,-2.749086,0.120987,5.364898,-2.651339,-4.898291,-2.967911,1.195290,-8.003950,4.881843,-0.363575,-4.404784,8.509292,9.425253,-2.279945,-3.980839,9.842510,-9.074022,-1.707176,1.477236,-4.598520,8.132242,3.980869,3.644878,4.047968,0.695890,7.165875,2.209742,0.239900,5.677677,-6.262955,-5.951272,-2.486609,-0.434750,-0.731986,2.129115,-3.830420,5.215338,1.716657,1.267218,1.527794,-4.866300,5.362086,-2.506648,-7.888451,-1.992789,5.820736,6.031165,-6.918117,6.489621,9.085020,9.018490,7.525058,6.157620,2.225467,3.153765,3.449672,2.667150,-7.410512,-6.710089,8.323606,2.050706,7.268047,-3.632051,6.707078,-9.300153,-5.071481,-0.234755,-2.862263,3.920735,-1.323701,5.251927,-1.562854,-9.519632,-4.703044,-9.246485,-7.762474,-7.760586,-7.901835,5.221859,-1.368598,-3.941052,7.732383,9.181921,-0.764033,0.309240,6.571077,-1.994524,8.362350,-1.418988,6.936276,-8.240539,5.418295,6.921125,2.192073,7.786234,-3.028096,2.808845,-2.144328,-7.653957,4.089866,5.087180,-0.008895,-0.342579,2.894114,7.583562,1.380485,-3.417714,-4.138044,-9.427186,-6.998942,-4.930963,9.543048,-1.600834,-0.513775,-5.351830,-9.234229,-4.891918,-9.824662,-4.991569,-2.222868,-5.009419,8.452563,-0.981720,8.912548,-1.357587,-0.590256,-4.837335,-0.391748,2.638062,3.606512,-1.749039,6.840017,-1.895105,3.386895,5.727261,-3.044855,-8.952723,-3.986078,-5.448239,5.238762,6.701245,7.037625,-4.035912,-5.991204,-8.142927,1.244998,5.564775,0.428769,-4.064130,8.089938,-9.941684,-4.481266,5.597361,6.573340,-2.533706,-2.386091,-9.189634,8.101283,5.472549,-6.270809,-8.634194,-6.473296,4.814951,3.190298,4.468619,5.073020,7.064673,-4.430010,9.887593,-2.551705,-1.949332,8.446216,-9.293642,4.686164,0.093472,8.507979,-1.610686,7.401736,5.057803,2.386665,0.830527,2.484278,-3.476294,-1.253917,7.840102,4.166608,2.331752,3.825334,-5.230132,-2.218885,-4.460151,0.256292,8.818883,-4.052463,8.986312,9.625515,6.614161,8.603413,-7.444231,8.680192,-7.638920,-7.643953,3.256368,8.078847,-7.040692,2.116860,4.059405,8.123577,-0.139128,-7.554552,-6.946979,-3.548740,-6.928854,0.854358,8.479870,-2.720150,-5.349342,-3.350564,-2.736874,4.079030,2.781341,-5.100544,5.948154,6.151399,2.217123,0.857329,-1.320908,8.318076,-2.772990,8.921074,9.119313,8.672374,-0.640737,-2.604935,-6.222914,-7.295441,-6.180137,-5.178661,-6.899508,3.712571,7.522355,1.144076,9.927291,-8.745855,-0.810489,4.504531,-7.910883,5.742743,-8.994593,0.973401,9.892748,-8.542046,-5.193372,4.833802,4.893939,5.718831,0.232310,-9.072207,5.405469,-9.097781,-0.400782,-5.002664,2.427946,-3.108930,9.347124,-0.651265,1.978858,-9.424344,1.117802,-5.784889,6.971103,-7.890920,0.432389,9.025499,7.598168,-4.440121,7.138664,-1.735504,-6.316982,9.239772,3.802387,-7.425092,-2.119262,-4.843943,-9.073515,-5.687814,-2.160097,-2.580083,4.007025,4.906939,-5.091960,9.217669,-5.504645,-6.140461,-5.890917,-2.310100,3.869104,-8.655763,6.719563,1.028990,6.122822,0.202995,-0.932542,6.977818,2.365858,6.877434,-1.397676,-9.589218,-6.095921,6.812172,-4.902007,-2.853635,-2.956991,4.009848,-7.225713,5.271392,0.177507,1.925279,2.731366,7.515955,6.713354,-5.200160,8.718313,-7.971309,1.983014,-7.244007,7.969967,1.027959,4.475563,-2.403328,6.241311,-1.581760,-0.120461,6.369116,-0.196220,8.377732,3.805282,-3.160066,-4.310088,-0.769107,-3.581521,4.137418,-6.448212,-4.134742,6.973841,5.107847,-8.478871,7.411348,3.394010,-2.865934,-8.430432,-6.932947,6.584689,-5.713718,0.522398,9.040801,-0.894052,-7.072109,4.522731,-6.409908,4.237517,-8.887676,0.064274,-8.991602,-8.203931,6.528685,-2.104830,-7.512324,-3.742499,8.910848,0.814040,8.568219,4.160216,-4.875967,-2.842497,-9.969679,-5.537492,-0.292521,-3.141167,8.772299,4.753890,4.803740,-9.706952,-2.979813,1.540505,-1.267332,-3.648104,-6.006003,0.244588,5.641109,8.867791,9.499438,-9.803847,-5.977347,4.736780,3.809910,-1.216754,-2.076989,-4.799450,0.809142,5.834604,-7.936093,1.959210,2.807155,-2.016477,7.700736,-1.573974,0.231268,-2.021892,-7.087417,1.647363,-7.791163,-5.445029,-0.361314,9.175068,-0.525760,-6.812762,9.606393,7.807538,-6.285481,0.687839,-5.730960,9.708484,-3.943390,7.896392,2.233331,-6.824030,-4.145510,-3.251115,7.016603,-9.065934,-6.522006,-8.758612,-5.181267,2.123016,8.156155,-3.811519,-4.455322,-7.051504,1.650324,7.999681,-4.115971,0.373924,1.530012,-2.772822,3.117438,-6.726864,6.926743,1.480827,0.659540,-9.385593,0.280479,-8.407683,-9.071679,-7.722354,-3.204676,-4.215395,0.816982,9.173184,-3.217397,3.697342,-1.546207,7.768802,8.971471,5.696099,8.116672,8.514681,7.142919,0.611898,-1.825449,1.885116,9.527101,-9.280598,7.782048,7.178805,9.100429,-2.856712,0.741198,0.965904,-3.963776,2.050358,-7.969358,4.997430,-3.604803,-5.272960,-9.236166,6.022740,9.740310,3.426366,8.000555,-4.902601,5.297401,-5.484258,6.323393,1.147163,-3.487379,3.605839,-4.707272,-2.605390,7.222757,2.212873,4.884098,-6.409206,-0.623823,4.266486,-4.075999,-8.934264,-6.660523,-1.486379,-4.777467,-9.034994,-8.843219,-9.961379,-0.530602,8.297265,9.464163,9.504726,3.847766,0.841952,8.496718,1.532682,1.274845,-4.687954,-3.334544,6.470487,-3.766220,-1.683327,6.284656,2.049794,4.757586,-8.429712,-7.896055,8.457888,9.355040,7.219169,-9.154153,-5.970360,7.647837,3.955874,-7.505516,-0.703654,-2.654928,6.000252,8.128737,4.098022,-3.594531,1.924228,-9.013044,-5.514888,-0.424978,-3.701833,5.590187,-8.589156,6.953790,-3.028931,-5.552025,8.291598,5.027053,-8.994066,3.341718,-1.774848,3.193352,-4.028923,-4.104075,0.301072,5.687008,2.827050,3.803340,8.235315,-1.356136,-7.861055,-0.358962,8.536127,-7.803164,0.717956,-2.977209,3.038644,9.494173,3.845892,8.257292,-0.139876,-7.482655,4.488694,3.116964,6.869993,-6.083663,-7.340399,3.234600,0.435517,-2.637526,0.571604,-7.023436,-9.079426,1.900762,3.120309,0.436559,2.784817,-9.647453,7.641180,2.155674,3.569208,-3.310583,-5.820426,5.629253,8.169430,-0.229020,-4.063618,-3.554647,2.782241,-9.234212,-1.375758,-3.583734,-2.775227,-1.373901,5.702627,-1.710232,1.887420,-4.369679,-7.555766,2.247625,9.998743,-0.669475,-4.114385,0.523694,-7.115762,8.093138,9.057838,-1.782465,-6.912396,2.031666,-0.226175,-7.695334,-5.125821,-8.324803,-3.098244,-1.731671,3.367781,-1.834980,9.621350,2.075674,3.652393,-0.331199,7.729693,-1.293433,3.705321,9.492747,2.422283,-0.780047,-6.589718,-1.170273,-4.035537,8.664045,-6.471390,-2.492425,8.667408,6.362395,-3.107973,5.437855,2.799786,3.493584,7.263943,-7.761270,-8.563066,-1.301112,5.535791,7.217156,0.949757,-4.147358,-8.462639,-0.559045,-6.343983,9.049844,7.914494,-8.539237,-8.182581,-8.192495,-8.723949,8.289396,0.722154,-0.560213,-3.273712,-7.264821,-3.576162,9.016582,6.889586,-3.935205,-3.081517,-8.314092,-6.450360,-1.797945,-3.353332,-1.700319,4.548283,6.974275,9.445574,-8.445379,-7.012732,1.977781,3.740866,7.444027,-2.471762,-6.501894,6.620583,9.256784,-2.667401,6.731660,-1.368620,1.461879,4.469791,-4.016315,-8.889243,-9.101546,3.128564,0.649644,5.799495,-2.540205,-0.402507,-0.144278,1.978525,3.166521,5.730550,0.696447,-6.433066,8.994755,4.092852,-2.939216,-5.099577,-0.431379], dtype = "float64")#candidate|2622|(1365,)|const|float64
var_2623 = relay.var("var_2623", dtype = "int32", shape = (28,))#candidate|2623|(28,)|var|int32
var_2624 = relay.var("var_2624", dtype = "float64", shape = (420,))#candidate|2624|(420,)|var|float64
call_2621 = relay.TupleGetItem(func_1375_call(relay.reshape(const_2622.astype('float64'), [13, 7, 15]), relay.reshape(const_2622.astype('float64'), [13, 7, 15]), relay.reshape(var_2623.astype('int32'), [28,]), relay.reshape(var_2624.astype('float64'), [420,]), ), 0)
call_2625 = relay.TupleGetItem(func_1381_call(relay.reshape(const_2622.astype('float64'), [13, 7, 15]), relay.reshape(const_2622.astype('float64'), [13, 7, 15]), relay.reshape(var_2623.astype('int32'), [28,]), relay.reshape(var_2624.astype('float64'), [420,]), ), 0)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
var_2632 = relay.var("var_2632", dtype = "float32", shape = (39, 1))#candidate|2632|(39, 1)|var|float32
const_2633 = relay.const([9,4,-4,4,1,5,5,-2,-9,-9,10,8,-2,-8,-3,9,-4,3,-1,2,-6,4,4,-2,-6,5,9,-3,-2,-3,7,-10,-4,-9,-9,9,-9,-7,-6,7,1,7,3,-8,2,-1,-5,9,3,-6,-10,-8,-5,-1,3,4,-8,-4,2,6,-5,-4,10,-4,3,7,-5,2,9,5,-9,-6,10,8,3,-8,4,1,-5,-9,4,-2,9,3,7,-10,4,3,-7,8,6,-8,-7,-4,-5,3,-9,2,-10,7,-10,-2,-4,-10,6,1,-5,-4,-8,-7,3,4,-6,1,-1,1,-5,6,8,10,-6,-9,10,3,2,-2,-9,-5,5,9,4,7,-5,-1,-1,-8,-4,9,-8,3,-2,5,5,6,-7,6,-7,3,8,-4,8,7,8,-7,10,-8,-9,6,2,4,9,1,2,7,-1,-8,-4,3,3,-10,-2,-5,-1,2,5,3,5,1,9,7,10,8,-2,-5,1,-10,-4,-1,-8,-8,-9,8,-4,-3,-6,10,-8,7,9,7,-9,-10,-1,-8,4,-3,-7,-10,7,-2,4,8,-10,3,9,7,8,1,-10,10,6,-8,-4,2,2,6,-5,1,1,7,6,8,-3,5,1,-7,1,-10,6,10,-5,7,3,9,1,-4,10,-1,4,-8,3,1], dtype = "int32")#candidate|2633|(252,)|const|int32
call_2631 = relay.TupleGetItem(func_547_call(relay.reshape(var_2632.astype('float32'), [1, 3, 13]), relay.reshape(var_2623.astype('int32'), [28,]), relay.reshape(const_2633.astype('int32'), [252,]), ), 0)
call_2634 = relay.TupleGetItem(func_552_call(relay.reshape(var_2632.astype('float32'), [1, 3, 13]), relay.reshape(var_2623.astype('int32'), [28,]), relay.reshape(const_2633.astype('int32'), [252,]), ), 0)
output = relay.Tuple([bop_2613,call_2617,call_2621,const_2622,var_2623,var_2624,call_2631,var_2632,const_2633,])
output2 = relay.Tuple([bop_2613,call_2618,call_2625,const_2622,var_2623,var_2624,call_2634,var_2632,const_2633,])
func_2642 = relay.Function([var_2623,var_2624,var_2632,], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
var_2643 = relay.var("var_2643", dtype = "int32", shape = (28,))#candidate|2643|(28,)|var|int32
var_2644 = relay.var("var_2644", dtype = "float64", shape = (420,))#candidate|2644|(420,)|var|float64
var_2645 = relay.var("var_2645", dtype = "float32", shape = (39, 1))#candidate|2645|(39, 1)|var|float32
output = func_2642(var_2643,var_2644,var_2645,)
func_2646 = relay.Function([var_2643,var_2644,var_2645,], output)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2666 = func_1856_call()
call_2667 = func_1856_call()
output = call_2666
output2 = call_2667
func_2680 = relay.Function([], output)
mod['func_2680'] = func_2680
mod = relay.transform.InferType()(mod)
output = func_2680()
func_2681 = relay.Function([], output)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2688 = func_1856_call()
call_2689 = func_1856_call()
var_2692 = relay.var("var_2692", dtype = "float32", shape = (16, 8, 14))#candidate|2692|(16, 8, 14)|var|float32
bop_2693 = relay.power(call_2688.astype('float32'), relay.reshape(var_2692.astype('float32'), relay.shape_of(call_2688))) # shape=(16, 8, 14)
bop_2696 = relay.power(call_2689.astype('float32'), relay.reshape(var_2692.astype('float32'), relay.shape_of(call_2689))) # shape=(16, 8, 14)
output = bop_2693
output2 = bop_2696
func_2705 = relay.Function([var_2692,], output)
mod['func_2705'] = func_2705
mod = relay.transform.InferType()(mod)
mutated_mod['func_2705'] = func_2705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2706 = relay.var("var_2706", dtype = "float32", shape = (16, 8, 14))#candidate|2706|(16, 8, 14)|var|float32
func_2705_call = mutated_mod.get_global_var('func_2705')
call_2707 = func_2705_call(var_2706)
output = call_2707
func_2708 = relay.Function([var_2706], output)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2749 = func_2136_call()
call_2750 = func_2136_call()
uop_2756 = relay.sin(call_2749.astype('float64')) # shape=(16, 8, 14)
uop_2758 = relay.sin(call_2750.astype('float64')) # shape=(16, 8, 14)
uop_2760 = relay.cosh(uop_2756.astype('float64')) # shape=(16, 8, 14)
uop_2762 = relay.cosh(uop_2758.astype('float64')) # shape=(16, 8, 14)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_2763 = func_2275_call()
call_2764 = func_2275_call()
const_2771 = relay.const([[[8.525237,-0.511976,9.329609,-0.284445,-4.926177,-8.080189,8.495278,8.355031,8.326930,3.815116,-8.715047,-3.029062,7.045427,8.690852],[-5.767397,8.996841,-3.349453,-7.524673,3.042023,6.521363,-4.680441,-1.851770,5.537126,-1.080867,4.517867,0.483096,0.126883,2.520068],[4.140432,2.080188,9.238497,1.620208,-4.572156,-3.452659,-9.667942,7.214804,7.773858,-7.550160,-3.174819,5.660376,-4.396831,4.208527],[-4.115843,-2.358142,8.203832,6.696805,-1.334116,3.993804,-1.557280,8.307619,8.739162,7.200262,-3.846602,-7.444250,-1.528092,-1.672248],[-8.394774,-8.739920,-1.564604,-4.705627,-4.144210,-6.885568,-9.923557,8.609546,4.169357,-5.476806,-8.765181,1.142096,2.843176,6.991562],[8.941916,0.713981,8.574000,-0.459368,-9.716551,-0.549743,5.820072,-3.651360,-7.174736,-7.208330,-3.101740,-8.989284,8.752678,7.666445],[4.442737,-4.441846,-0.909876,-9.547472,-9.844888,5.866411,6.446425,6.526492,-9.128052,6.733373,-1.405831,1.389102,-5.981371,9.958412],[1.607515,-3.259298,0.716217,-3.656232,-7.669632,0.407981,2.244385,-6.445660,-1.289709,3.916687,2.340182,2.353976,7.096978,-3.249670]],[[8.581871,0.430206,-9.309615,0.070072,-1.001260,8.083697,8.148019,0.052940,3.980028,6.820057,-0.865569,-9.292135,2.133135,7.152840],[-4.539266,-3.082751,8.818436,0.678959,-0.242228,7.653253,-7.606465,1.397774,4.144871,-1.191966,-8.451566,9.418940,5.970906,-4.264478],[7.658555,5.567663,3.637343,8.811295,6.902789,-4.002678,-2.539538,-6.018681,-8.339099,-8.202526,5.420307,-5.498273,-3.255009,-3.851178],[-9.829411,5.605354,-0.151101,2.709746,-2.261916,-1.983184,7.805774,5.821521,-6.944949,-7.355271,-0.159380,-4.721734,-3.515063,1.969012],[-9.656734,-4.925251,2.518169,0.007613,-8.625270,6.371152,8.766770,-9.308241,0.532575,-8.753785,0.130633,-8.783181,9.367311,2.550834],[-1.965231,5.793971,-6.845073,1.630466,5.260658,6.751302,8.904907,-3.665174,-3.207639,-9.827579,9.674601,7.025042,0.924256,-1.630076],[2.914102,-0.441801,-3.981304,-9.632509,5.502761,-9.793319,-5.628847,-7.204989,2.286247,9.508984,5.732936,5.486323,-0.325435,-6.805149],[-7.609929,7.202255,-4.118231,0.326515,3.771813,-9.972783,5.336080,3.206130,-3.876383,-4.065367,-9.902811,-0.515743,5.972066,-5.336408]],[[-5.699915,5.225233,5.027242,-9.675119,6.608611,3.768090,-1.165730,0.381875,-9.989127,5.250733,4.995394,-9.823929,9.300959,5.914312],[-7.068654,4.726522,-3.675232,-4.682058,6.158804,-7.383180,-1.262206,2.736944,7.088342,0.731950,8.064035,-1.662519,-1.227920,-3.560118],[1.264505,-0.664957,-7.600366,5.511942,-4.717651,-9.763576,-3.745712,-1.733166,-2.096339,3.097203,6.861621,-7.821224,-4.098031,7.035256],[3.988531,-9.864785,8.107291,4.236182,-3.678358,6.969260,-1.685460,-3.634731,-1.228087,1.577760,-8.368393,-6.418822,9.977977,-1.255003],[2.305832,-5.883149,-9.743469,-8.812029,8.172621,1.565275,-3.247729,4.785371,-5.093345,6.757940,-3.691492,-3.587009,-3.832003,-0.764419],[7.893895,1.781104,-2.704979,8.918338,-7.243972,8.497137,5.421886,-8.734391,0.199696,-2.154582,3.842853,-8.979670,4.765946,1.009627],[2.078600,6.386328,-9.808253,0.943081,7.375669,8.745014,-7.691480,4.357782,1.532367,0.955936,2.729054,8.318051,-4.992305,4.319083],[-2.910782,8.111197,-6.981640,-1.686091,9.727227,-6.619026,-0.520752,-8.609733,-3.139714,9.141239,5.918574,-8.663145,-5.704484,-3.260328]],[[0.325076,-5.025804,-0.544291,6.844837,9.284576,5.500793,3.175255,1.150831,-9.826845,7.849132,3.695923,-7.290157,6.159716,-4.792682],[-9.598669,-8.293376,-8.765050,0.928096,-2.267876,5.368057,-8.752103,-8.259982,-0.728580,-2.443119,-8.755867,3.037782,-2.295903,-5.106041],[-6.919686,5.922237,6.446598,-7.379244,1.899132,-9.111323,-9.978560,1.874185,0.849261,4.134207,3.713788,-1.141886,1.374911,2.405350],[4.339760,8.073493,-2.484535,9.720921,0.983198,6.914829,8.789046,-9.554933,-3.516272,1.537069,-5.765764,6.411055,-2.506052,6.454743],[-0.148421,2.952435,-7.099815,0.382094,8.874722,8.857989,9.634681,0.313537,-1.722375,-7.458912,6.984045,-5.449483,-6.422621,5.559508],[2.864031,-1.861290,-4.494763,-1.202533,6.733816,7.355820,-8.039095,0.965504,-3.378471,-6.693534,-1.557003,9.163107,-0.633726,4.740115],[7.201002,7.318822,8.416257,-6.157884,8.502315,5.444842,0.106113,-4.045837,9.056662,5.938621,-9.314447,-3.949071,-2.809350,7.465320],[-6.128414,-7.663024,4.741818,-9.838681,6.754081,-6.296253,8.762033,9.366025,0.151125,-6.522089,4.459740,-0.513477,-2.772219,4.594622]],[[-0.561828,1.115152,6.288098,-6.478295,-1.182001,-8.248195,-6.908467,-2.981278,-6.280530,-9.637759,6.326283,-4.725964,-8.405094,4.129824],[8.278524,4.796936,7.523960,-7.032825,-1.032670,3.812253,-9.930819,4.383913,0.945919,-0.451542,0.441964,9.199227,-4.259862,-5.987630],[-0.072935,1.124338,-8.261344,6.498193,7.902604,-5.894649,-7.362942,-3.148662,8.354915,1.611036,-7.813160,-7.323912,-3.522549,-4.916472],[5.580339,8.808653,-9.866385,-4.140150,-4.820455,-6.469223,8.318306,9.613559,1.351113,-9.200396,7.198038,3.187217,-9.043094,-0.459562],[7.754223,0.540822,2.558157,-9.632425,8.432378,-5.441049,-9.107370,2.327284,8.067395,5.264325,8.773005,-6.225162,-8.294642,-8.556499],[6.002695,0.547003,4.199319,-4.078866,-8.053578,6.209949,0.396055,8.195386,-7.472923,9.464083,5.110268,-5.677648,2.561873,-1.879830],[-5.379734,-5.604212,2.256370,-6.971832,-7.702428,1.560965,8.260171,-6.811983,-9.724965,-2.824828,-0.624135,-0.331659,5.941291,-5.735557],[4.461782,-3.353200,8.668542,-3.511275,-8.707532,-1.002398,5.349602,0.721640,-6.117908,4.244955,9.113717,3.056888,5.337986,-2.242568]],[[4.630955,6.509785,1.731803,-4.915924,-2.705450,5.841089,-4.229637,7.749805,0.915204,-0.901594,-0.109007,-8.701445,-7.532460,-2.256337],[9.801101,-7.745343,6.776617,-8.737370,7.620391,-0.091467,0.002188,-9.076888,5.427262,1.146575,0.305394,-3.219970,4.141747,6.846788],[-5.867305,5.519982,-2.592015,-2.819791,-0.873091,-8.931389,-2.257392,5.654186,-4.204452,8.191641,-7.056436,-3.962550,-9.285016,4.784581],[3.047554,0.104616,-1.190754,-4.240830,-0.809149,3.847165,1.589308,-4.828923,-3.763914,6.358027,-1.645565,-1.010058,3.376144,-7.197884],[3.434190,2.901837,-0.579289,-1.657271,5.898044,-1.521174,-9.357547,-7.439805,2.081381,6.693891,3.591075,0.191481,4.325633,-4.167563],[-6.124776,-1.258380,-5.757739,7.902035,1.639716,-8.924352,-3.627553,-1.983998,-7.704021,-2.848877,-7.871085,7.949075,-9.553169,1.788120],[-0.622467,-3.764367,-6.869954,-8.832159,-8.653303,0.121939,3.179295,-1.395329,-5.083650,-2.745902,-1.264223,8.840336,-7.178032,-8.071150],[2.349919,-6.181364,3.304852,-0.702630,-9.547680,-4.507999,-8.530710,-5.200409,5.978035,1.715687,9.330312,-7.271603,-9.027624,-9.194331]],[[-9.807734,0.462207,-2.009986,4.410852,-5.180852,6.502584,-8.794564,5.792279,-7.408326,4.172547,0.131195,7.778937,-4.434384,-1.082895],[5.173580,-6.354217,3.712046,9.765183,2.604699,8.016755,7.400984,-3.057674,-9.457199,-6.096720,9.353644,3.088249,2.847029,-4.881687],[-6.542165,-5.809277,0.685915,-7.939082,7.547437,8.860989,-8.535771,-1.156888,9.781699,-8.753506,2.809665,-2.914831,-7.864364,3.178608],[6.038525,5.915745,-4.735691,2.474377,-6.709878,-8.696775,-5.145973,0.392329,-5.393963,-0.915276,-2.872049,5.636580,0.887888,8.078402],[8.892392,7.939513,-2.778421,1.998103,8.280723,-7.550175,-3.920988,2.002410,-8.230870,5.391781,-5.055046,0.914014,-0.010230,-4.779061],[-4.115053,0.228945,-8.191810,-9.157821,-9.470952,4.737576,2.840346,0.241715,-3.924182,-7.351192,3.590781,4.383231,8.604266,6.296343],[-5.140765,4.754185,5.820303,-9.433495,-5.675573,-9.493212,-5.460427,-6.010932,7.501582,5.277851,-6.389322,4.643983,-7.745948,7.005358],[0.674734,9.779793,6.060394,-0.280478,-1.486855,-1.802887,-7.818334,0.423285,1.271455,-0.657408,5.656628,-1.296321,3.265377,-4.063662]],[[7.084371,1.162382,-2.916907,-2.627176,8.696748,-8.587101,6.375189,-8.882922,4.936252,2.247223,4.347782,5.753636,0.162483,-7.134982],[6.683666,-7.176867,3.230451,9.094828,3.275500,4.062486,3.553248,-3.249710,-2.614260,-1.711691,-5.965723,-1.820693,5.936789,-8.687258],[-7.096554,9.861481,8.118571,-0.813211,6.359128,-6.439816,1.289413,0.299636,1.727455,8.119764,3.441395,4.569919,9.478788,3.262833],[-5.494396,-2.326286,0.084669,-4.181585,5.727917,1.876593,6.662732,2.920940,7.888500,6.005018,-3.591825,-5.046204,-0.475400,1.086323],[-5.407401,-4.279614,8.759472,2.790277,-0.204774,7.912345,-5.257354,-5.948773,2.697341,-1.180071,-3.464778,6.829575,-5.651728,-9.725343],[-8.568127,5.973856,0.604841,3.007484,-5.848046,5.133769,-1.102909,-4.302813,1.035270,-6.122879,3.426505,4.408320,-8.649847,-1.922179],[-6.261862,0.516801,7.032788,0.484769,-8.124157,3.522956,5.998883,5.578739,0.774029,-1.307256,-6.365405,7.049842,7.557630,-8.235091],[-6.628232,8.316518,8.553114,6.153578,4.527140,0.240759,2.123378,-0.291714,3.039368,-4.000967,1.698047,1.533503,-6.791517,5.288010]],[[2.318555,1.546386,3.984136,8.223931,-5.833866,2.943064,1.175251,4.036985,1.040483,-4.972400,-0.888977,0.663928,9.258139,0.201196],[-5.452696,-9.188511,-2.146116,4.605182,-8.965871,8.088123,0.783469,-5.889300,0.296679,9.731484,1.919110,-9.954536,-6.105509,7.941158],[-2.805619,4.323448,-4.223285,6.621470,-2.761931,-9.765349,8.151931,5.906447,-0.582256,2.215596,6.330133,-9.399715,-9.503708,-5.998585],[-7.262440,2.359149,5.679702,3.637131,-0.106931,-3.785945,9.373993,7.722127,-3.010640,1.257216,-0.284541,3.493524,0.341615,-7.760361],[-1.265755,2.687985,-3.700038,0.486919,0.261752,0.581064,2.217658,-8.894394,-9.408842,7.560977,-3.598931,1.484400,-6.450081,2.360064],[-1.020685,7.546163,-6.656026,-9.700116,6.854028,-7.449917,-9.030176,-8.166280,-5.430817,3.983412,-5.200073,8.729177,6.609124,7.765950],[0.715273,-4.704133,-2.313693,-6.592073,-7.728133,-1.285073,7.679271,-6.819748,-7.866778,9.286579,-1.482133,-5.117596,-0.394308,4.054109],[-5.813320,2.660085,1.866282,-2.811444,2.301197,0.195337,0.781746,-8.761840,-2.576911,-4.185043,9.947093,0.908415,-4.844525,1.988160]],[[-0.820522,3.781882,6.411442,-4.625928,-5.312692,5.522508,-7.253240,0.632886,-8.818632,-3.132111,-0.165561,6.355819,-8.135065,4.276321],[-1.923720,1.130588,-3.136760,-7.424611,6.179352,-4.429298,3.056433,-5.700190,-5.778628,6.525204,2.392208,-5.724532,-3.855600,7.169997],[-0.888823,-6.287645,5.268618,5.140073,-4.010316,-1.484603,7.589816,9.572705,-3.538848,-6.699466,6.983818,9.888571,1.935169,-3.714789],[1.071749,-2.657006,2.788068,6.782314,6.443012,-5.823718,-6.122572,7.398417,8.105266,-6.182602,-0.639981,2.173251,-0.358612,-4.304990],[-6.295927,7.672919,8.064753,4.593862,-5.462200,0.778813,-0.290936,3.738695,-0.558451,-0.444334,9.979311,7.212338,9.274381,2.164993],[5.069490,1.781588,7.481519,-6.227634,-7.044880,2.248967,-6.121250,-4.449183,-2.499464,9.477546,0.364935,-1.790749,-9.891599,-6.406048],[-2.404596,4.272925,-2.734745,0.516345,8.438788,-8.045073,-4.384825,3.019979,-5.937865,2.966789,4.728862,-4.316669,-5.664074,-0.489023],[-3.973187,-2.797683,-2.471895,4.654690,-0.483193,-5.882524,-7.047709,1.342428,-7.152737,9.005285,9.862428,8.253369,3.486124,1.776411]],[[4.824436,-3.424346,-3.445834,-6.414308,-1.756614,5.157149,6.231663,-6.925460,-8.248975,-2.586930,-4.770571,-0.533629,-7.425466,9.082360],[2.082392,1.180097,-2.505496,-8.929085,-7.285602,5.168630,-6.423511,4.932128,8.827827,6.642248,7.816136,-2.132393,4.741811,8.345478],[8.685178,3.685655,4.133934,4.759467,-5.765284,8.327047,-0.940347,0.220833,8.417818,-9.338799,8.478434,7.483853,2.411873,-9.246906],[-6.614427,-6.611426,-5.144259,-5.618359,-4.200539,7.397933,4.335258,0.056571,-8.496182,4.881939,3.156900,-7.483288,2.551961,-5.374254],[9.955487,-9.713252,-8.399063,0.413411,-4.370820,5.116109,3.344030,-2.731216,3.650797,7.842256,-9.008341,1.183146,-6.384021,-8.403877],[7.394716,0.832372,-4.081142,-0.806012,-2.715339,2.883278,1.596008,-7.127407,-8.342680,-3.410969,-2.626746,0.372854,-1.525112,7.054020],[-6.946890,-7.968453,-0.094543,-1.927286,5.142278,2.554913,2.332992,1.462394,8.168459,0.671409,-3.860803,3.458435,5.339562,1.572911],[-9.763831,3.939968,4.399561,-8.350213,9.725744,-8.481825,-8.630898,-4.791226,-9.076826,-0.516111,5.297763,1.737845,0.052096,0.695501]],[[4.663124,-1.399309,4.564613,-9.046336,-4.454091,-3.918992,-2.825843,-9.471374,-3.235100,-2.570309,-8.785369,5.361722,-2.156380,3.240883],[8.901424,2.442185,-0.165756,-7.967198,1.210113,-4.520201,-9.616323,0.627950,3.950406,9.328769,-0.817185,-9.522438,-8.317144,4.057434],[1.630846,0.856496,2.624269,3.352320,-2.035287,8.353536,3.841923,6.363962,-2.703857,-8.183614,4.482509,6.638592,7.614046,-3.826986],[5.255480,-9.396374,5.233921,-2.381504,-9.790170,-6.422497,1.934202,-9.498945,2.746236,-0.175142,-5.477114,7.759703,-1.080973,-9.579610],[-9.531516,-5.454046,-5.853506,-6.335622,-2.020868,-7.650044,3.852306,2.598655,-2.568580,6.599536,-4.847456,5.869772,-1.245223,-7.213494],[2.311807,-5.458247,8.483551,-9.537624,5.933785,2.242552,1.879596,8.854942,-2.516527,8.814281,-6.487432,-3.515666,1.357050,-8.959847],[-4.509567,-8.013805,0.654176,-4.616172,3.044000,-0.745935,0.140799,-3.612309,5.891350,4.683049,4.656864,-3.182097,3.347503,-4.261500],[-6.711934,-5.040156,7.117545,-2.437644,8.859007,4.057631,2.560125,-3.768088,-5.683754,9.660179,-2.672891,4.749858,-9.579940,1.314425]],[[5.494480,-7.189533,-0.908793,-6.457901,4.970134,-3.603738,8.250973,-6.771842,7.123580,-7.696269,0.583148,0.320770,-8.840983,8.097692],[-1.099433,1.821232,-8.858836,5.867752,-3.744353,-3.558139,9.251277,2.974121,3.585984,8.787021,-8.417456,-7.615736,-5.653642,0.448251],[-4.430875,4.507951,8.382903,-7.266969,-7.012815,8.646508,-6.423322,-7.551151,-4.877973,-9.386983,0.867980,0.208265,2.785542,-9.540427],[2.748821,8.289249,-3.849685,9.025246,3.412773,-3.499797,7.868040,-9.715003,9.388821,5.678796,-3.206496,4.292676,-6.142100,8.754827],[-2.917953,2.844066,2.712812,-9.908619,1.388040,-4.522441,3.069300,-7.775619,-5.939011,-1.906358,1.752196,2.252323,-4.054330,-6.587597],[7.087738,-7.044391,4.791385,-4.358815,-4.191986,-1.150028,-2.623516,-3.122352,6.555967,-1.546268,-5.545314,-8.383539,6.241460,0.819544],[-7.810785,-9.388961,-6.944924,-2.423964,-8.443134,-5.295295,3.954143,-6.075691,8.447925,4.860072,7.791864,-8.228270,4.708958,5.376866],[9.251065,-8.240249,-5.404681,2.555736,7.024276,-4.404293,-9.881039,1.367143,-1.126720,5.014315,-6.111972,-7.265533,7.993321,8.340738]],[[4.799270,5.766340,-6.518587,9.640541,-7.630335,9.701180,-9.069121,8.974459,-0.015379,-9.527092,-8.141424,5.844036,-8.997548,-9.568450],[-4.562536,-6.475566,-2.893422,-0.316787,0.154563,-8.783356,0.479536,-6.660422,4.810120,-0.696745,-1.479905,-4.191830,4.091098,4.066082],[-2.208381,2.198235,-6.744186,-6.392450,0.231288,5.357215,-3.295500,-3.163917,8.189433,3.636037,-8.372083,-4.298136,-5.367685,0.359211],[-1.618883,-8.365605,-3.457029,-5.707360,6.252225,5.357317,7.729969,-2.618364,-5.345726,5.391436,1.949182,2.292504,6.288949,-4.590331],[-5.964804,1.977923,-6.061446,0.026745,7.438079,4.792735,2.851299,5.744590,1.815765,-6.748331,-9.130302,1.753359,4.745138,0.017277],[6.948322,-2.169769,5.544599,-1.568236,4.086117,-4.204099,9.547147,-0.148791,-7.045795,-3.271253,5.077534,-0.265020,-8.300216,1.211049],[-6.801681,-0.757285,-0.198332,7.425895,-6.039167,2.551337,-9.391839,-6.266668,-3.210208,-9.042136,-0.885881,-0.433513,7.057366,9.510316],[8.227148,0.316558,6.443864,7.076964,7.619196,3.139557,-0.991336,7.640846,-4.670447,5.980159,-9.853035,-2.050290,-1.444763,-5.820046]],[[0.524798,0.406713,-1.090098,-4.609356,1.980210,4.798151,-7.112275,-3.838530,-6.272521,9.747465,-2.706511,9.677137,-7.843446,8.436129],[-4.991488,6.780681,-2.995549,-5.522665,6.004333,-9.690702,-0.032657,8.543171,0.779773,-4.959251,-8.457928,-6.615630,-6.180964,9.515823],[7.698237,3.576920,7.776705,5.117209,6.912047,-1.110595,-4.540080,6.385785,4.130425,-5.500038,5.151577,-3.944938,-4.096496,-3.365115],[-2.983546,-4.448919,-0.766457,0.714823,-0.725061,3.573809,5.622192,-9.495999,1.400556,-6.115539,3.612498,1.082249,1.534590,-0.623400],[-7.397640,-1.640923,-9.446009,7.107684,-2.566165,-0.713186,2.375243,9.229269,-5.163102,4.942108,5.330232,-4.281540,-6.382863,9.199118],[9.831264,1.611223,-8.251966,-3.016049,-2.105796,-4.502373,-1.006085,0.117742,-4.327843,-7.243764,5.121028,-4.491066,-6.027314,8.928683],[-6.577193,-2.262683,-2.350961,-7.528440,-9.190417,8.665068,-9.586530,6.949258,3.459064,-1.010155,9.716608,-7.619765,-8.187659,-0.794438],[7.155540,2.127714,-0.171951,9.426930,-8.526346,-6.530009,-8.881827,8.086433,2.525958,8.259578,-1.081116,-1.766247,2.133321,-4.618115]],[[-8.952649,-7.414316,-0.810300,7.621856,5.300707,9.894665,-8.334149,-7.921763,8.391407,6.229859,6.929258,4.957662,3.529438,1.175864],[-8.328493,-1.074046,-4.434597,-1.271733,3.384056,-3.981978,-4.609064,-1.734587,6.427978,7.633695,-0.069300,0.174789,-2.811163,6.957636],[-6.789603,-4.023050,-8.159885,2.550295,1.312440,2.404737,-4.588279,5.017693,6.260036,2.662028,6.048999,-1.548755,-5.947990,4.976007],[-9.318052,-3.600331,5.173846,-7.930199,1.227813,2.125239,0.672399,1.787284,-7.279288,0.888354,-2.709885,-3.792031,9.934497,-9.510330],[-1.993909,-0.220357,-0.570317,6.478693,5.381584,-2.574289,-6.130418,7.701003,-4.939497,1.371068,-7.025310,0.257968,4.085688,-9.390010],[-9.945355,-4.187269,-1.600859,8.649421,6.849809,-2.182344,-9.229420,-4.696477,-8.900532,1.021104,-3.585838,4.686060,4.267745,-0.585865],[-7.460404,3.583489,9.439313,3.733947,4.475556,-1.556551,-4.811455,9.234394,6.767714,1.759692,-7.457053,1.807623,7.154773,5.434738],[1.884554,2.064517,-5.186262,-1.731843,4.603269,5.835347,-8.572403,0.417431,-6.328047,-8.411068,-8.730916,-3.700544,-0.580247,-1.714502]]], dtype = "float32")#candidate|2771|(16, 8, 14)|const|float32
bop_2772 = relay.floor_mod(call_2749.astype('float32'), relay.reshape(const_2771.astype('float32'), relay.shape_of(call_2749))) # shape=(16, 8, 14)
bop_2775 = relay.floor_mod(call_2750.astype('float32'), relay.reshape(const_2771.astype('float32'), relay.shape_of(call_2750))) # shape=(16, 8, 14)
func_1904_call = mod.get_global_var('func_1904')
func_1908_call = mutated_mod.get_global_var('func_1908')
var_2781 = relay.var("var_2781", dtype = "float32", shape = (350,))#candidate|2781|(350,)|var|float32
call_2780 = func_1904_call(relay.reshape(var_2781.astype('float32'), [5, 5, 14]), relay.reshape(var_2781.astype('float32'), [5, 5, 14]), )
call_2782 = func_1904_call(relay.reshape(var_2781.astype('float32'), [5, 5, 14]), relay.reshape(var_2781.astype('float32'), [5, 5, 14]), )
bop_2783 = relay.right_shift(uop_2760.astype('int32'), relay.reshape(bop_2772.astype('int32'), relay.shape_of(uop_2760))) # shape=(16, 8, 14)
bop_2786 = relay.right_shift(uop_2762.astype('int32'), relay.reshape(bop_2775.astype('int32'), relay.shape_of(uop_2762))) # shape=(16, 8, 14)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
var_2816 = relay.var("var_2816", dtype = "float32", shape = (216,))#candidate|2816|(216,)|var|float32
var_2817 = relay.var("var_2817", dtype = "int32", shape = (252,))#candidate|2817|(252,)|var|int32
call_2815 = relay.TupleGetItem(func_1168_call(relay.reshape(var_2816.astype('float32'), [12, 3, 6]), relay.reshape(var_2817.astype('int32'), [252,]), ), 5)
call_2818 = relay.TupleGetItem(func_1172_call(relay.reshape(var_2816.astype('float32'), [12, 3, 6]), relay.reshape(var_2817.astype('int32'), [252,]), ), 5)
uop_2827 = relay.exp(uop_2756.astype('float32')) # shape=(16, 8, 14)
uop_2829 = relay.exp(uop_2758.astype('float32')) # shape=(16, 8, 14)
func_2128_call = mod.get_global_var('func_2128')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2831 = relay.TupleGetItem(func_2128_call(relay.reshape(call_2815.astype('int32'), [252,])), 2)
call_2832 = relay.TupleGetItem(func_2131_call(relay.reshape(call_2815.astype('int32'), [252,])), 2)
func_2128_call = mod.get_global_var('func_2128')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2844 = relay.TupleGetItem(func_2128_call(relay.reshape(var_2817.astype('int32'), [252,])), 0)
call_2845 = relay.TupleGetItem(func_2131_call(relay.reshape(var_2817.astype('int32'), [252,])), 0)
uop_2858 = relay.log10(bop_2783.astype('float64')) # shape=(16, 8, 14)
uop_2860 = relay.log10(bop_2786.astype('float64')) # shape=(16, 8, 14)
output = relay.Tuple([call_2763,call_2780,var_2781,call_2815,var_2816,var_2817,uop_2827,call_2831,call_2844,uop_2858,])
output2 = relay.Tuple([call_2764,call_2782,var_2781,call_2818,var_2816,var_2817,uop_2829,call_2832,call_2845,uop_2860,])
func_2862 = relay.Function([var_2781,var_2816,var_2817,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mutated_mod.get_global_var('func_2862')
var_2864 = relay.var("var_2864", dtype = "float32", shape = (350,))#candidate|2864|(350,)|var|float32
var_2865 = relay.var("var_2865", dtype = "float32", shape = (216,))#candidate|2865|(216,)|var|float32
var_2866 = relay.var("var_2866", dtype = "int32", shape = (252,))#candidate|2866|(252,)|var|int32
call_2863 = func_2862_call(var_2864,var_2865,var_2866,)
output = call_2863
func_2867 = relay.Function([var_2864,var_2865,var_2866,], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2916 = func_2136_call()
call_2917 = func_2136_call()
output = relay.Tuple([call_2916,])
output2 = relay.Tuple([call_2917,])
func_2920 = relay.Function([], output)
mod['func_2920'] = func_2920
mod = relay.transform.InferType()(mod)
mutated_mod['func_2920'] = func_2920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2920_call = mutated_mod.get_global_var('func_2920')
call_2921 = func_2920_call()
output = call_2921
func_2922 = relay.Function([], output)
mutated_mod['func_2922'] = func_2922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_2962 = func_1856_call()
call_2963 = func_1856_call()
uop_2986 = relay.asin(call_2962.astype('float32')) # shape=(16, 8, 14)
uop_2988 = relay.asin(call_2963.astype('float32')) # shape=(16, 8, 14)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2993 = func_2136_call()
call_2994 = func_2136_call()
output = relay.Tuple([uop_2986,call_2993,])
output2 = relay.Tuple([uop_2988,call_2994,])
func_3028 = relay.Function([], output)
mod['func_3028'] = func_3028
mod = relay.transform.InferType()(mod)
output = func_3028()
func_3029 = relay.Function([], output)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_3035 = func_2136_call()
call_3036 = func_2136_call()
output = call_3035
output2 = call_3036
func_3047 = relay.Function([], output)
mod['func_3047'] = func_3047
mod = relay.transform.InferType()(mod)
output = func_3047()
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_3054 = func_2275_call()
call_3055 = func_2275_call()
output = relay.Tuple([call_3054,])
output2 = relay.Tuple([call_3055,])
func_3077 = relay.Function([], output)
mod['func_3077'] = func_3077
mod = relay.transform.InferType()(mod)
output = func_3077()
func_3078 = relay.Function([], output)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_3106 = relay.TupleGetItem(func_2920_call(), 0)
call_3107 = relay.TupleGetItem(func_2922_call(), 0)
func_793_call = mod.get_global_var('func_793')
func_796_call = mutated_mod.get_global_var('func_796')
var_3109 = relay.var("var_3109", dtype = "int16", shape = (400,))#candidate|3109|(400,)|var|int16
const_3110 = relay.const([-0.098898,5.644696,-0.218954,5.739846,-1.785631,-4.329587,-8.336804,9.667387,9.721589,5.199147,-5.706016,-5.397749,-3.518049,3.880791,-3.089003,1.839937,-0.996075,-8.698798,2.407451,-6.149818,-2.472398,-7.007833,3.953165,-4.056399,2.537498,-9.505347,-2.337514,0.576437,1.307818,-3.222978,6.252780,-8.933174,-3.561289,6.188573,-8.618220,7.534815,-8.897212,-5.235665,-3.978356], dtype = "float32")#candidate|3110|(39,)|const|float32
call_3108 = relay.TupleGetItem(func_793_call(relay.reshape(var_3109.astype('int16'), [16, 5, 5]), relay.reshape(const_3110.astype('float32'), [39,]), ), 3)
call_3111 = relay.TupleGetItem(func_796_call(relay.reshape(var_3109.astype('int16'), [16, 5, 5]), relay.reshape(const_3110.astype('float32'), [39,]), ), 3)
func_2862_call = mod.get_global_var('func_2862')
func_2867_call = mutated_mod.get_global_var('func_2867')
const_3139 = relay.const([[7.715761,-3.046534,0.680114,-3.348425,-8.494855,7.143368,3.201606,4.395791,7.436365,9.095352,-1.060289,8.116246,7.133594,-7.076755,5.052238,-3.805870,6.843450,9.457932,-4.569738,1.555933,2.555965,-2.653057,-7.759413,-4.879091,-1.981627,-8.492448,-9.982369,6.256181,-2.652186,5.560412,3.321482,5.909684,1.574795,1.033498,-2.583459,-4.388396,-6.906537,4.682203,-3.193006,-6.427791,0.464348,1.209054,-6.321422,8.925455,2.585962,1.571040,-6.752676,8.304618,1.375521,2.868559,8.764491,6.176767,-1.654251,-2.753463,0.774746,8.087288,3.235901,-2.131634,1.763175,5.769530,-0.234544,7.971962,4.907868,-6.473448,-1.441420,-8.917977,9.644368,2.577383,-4.689327,-6.245212,-9.108814,-7.532530,6.608653,1.839020,-9.772282,3.509178,7.686850,5.659883,1.681674,9.436636,6.304466,9.990560,-6.472506,-1.070903,-5.980867,-4.672708,-3.005911,-2.794087,1.566184,8.250204,-7.952210,-0.161634,6.518635,-9.780439,-5.194543,-6.123452,-3.449548,-9.016081,-5.287482,9.684640,-3.381259,9.296242,6.164075,-3.559493,-1.915781,-9.425564,-5.472854,-8.817359,8.205980,-5.368857,2.362744,7.202769,-3.920683,-8.144930,2.052893,7.856282,1.328974,-6.450035,-7.139660,8.879615,-0.723322,-9.631567,-9.133523,5.928757,4.012523,6.768817,-6.223793,-1.283269,2.986238,-1.230548,5.486262,-4.038048,-7.665996,4.128735,4.493186,5.214130,-3.768368,-4.593625,6.476152,-5.532097,4.322442,4.121980,4.450306,-1.077443,-9.321682,6.534317,-0.900844,-9.525008,-7.300214,1.121784,-2.066058,-5.357699,-1.448660,2.926797,-5.899069,9.619448,-9.332503,2.705492,-9.085134,-0.600901,-0.452745,-2.784262,0.722807,-6.929719,-4.447770,1.597587,-9.040170,-9.564381,-2.493328,-9.133893,8.514810,-9.820259,-1.644878,3.441111,6.363308,2.411481,6.877762,-7.713462,-6.666697,4.529470,-8.852081,0.915191,-8.682164,-7.962706,-8.371602,6.249699,-2.308490,6.110960,5.841160,9.196365,-3.553811,1.077098,3.269378,-3.262592,-8.004420,-1.415474,-1.625861,0.610786,6.919175,9.905908,2.097507,-8.910184,-6.284978,-1.620368,-7.518916,-3.681858,5.298918,9.607412,1.485706,-6.007594,9.916377,-4.773794,6.074890,-9.233202,5.644486,-1.162026,-9.762497,-7.222665,-2.475306,-8.087416,0.542471,3.076029,-7.839191,2.591194,-3.091779,5.976759,-9.945470,3.958431,-4.060045,3.971273,6.977417,-3.402631,-0.386273,-9.757192,0.581837,7.484121,7.986026,1.233613,6.019227,5.281267,6.706405,9.841087,-5.938096,1.700153,-6.547862,1.222919,-5.761234,8.108442,-3.654573,2.714737,9.586929,-5.773212,8.548962,-8.120028,-0.756771,-2.898857,9.285633,-7.588166,-7.813896,-6.919055,-8.767274,-9.083938,9.900909,9.032794,6.460124,1.901511,3.819990,3.378745,-8.543133,-7.821844,0.278569,-8.992840,-9.842242,-3.788055,-4.283641,-1.023502,-9.028882,1.574530,-3.186898,-6.114729,5.064846,-2.356815,5.848889,8.210662,-9.903232,2.396189,-6.133595,-4.843641,-6.250171,1.393736,4.349354,8.921352,-3.152903,9.669337,3.981502,-1.093490,1.823578,0.735088,-2.006749,-3.336883,-6.375582,-0.808772,0.706550,-9.445727,9.757974,-1.257693,3.819639,8.882865,-2.103594,-6.907235,-4.026868,-1.406162,-0.112057,-2.911760,-4.051930,4.112859,-9.759001,9.712648,-8.110253,9.158595,6.627198,-6.110935,5.352864,-6.565742,-4.035984,6.069420,3.696967,-2.685873,-1.630292,-7.967974,-5.653245,0.594210,4.398228,-1.145560,-3.335287,-3.660189,-0.556309,-9.559922,-4.985685,8.208489,-6.149219,5.883461,8.608194,0.368506,-6.009514,-6.680410,1.772009,-6.117445,9.615586,-1.736521]], dtype = "float32")#candidate|3139|(1, 350)|const|float32
var_3140 = relay.var("var_3140", dtype = "float32", shape = (216,))#candidate|3140|(216,)|var|float32
const_3141 = relay.const([-1,5,-7,-1,1,-10,8,6,5,1,9,7,6,2,-9,1,-7,10,-5,3,-2,-1,-2,-8,8,-3,1,-2,9,2,4,-10,10,-4,-2,3,9,-4,-2,10,-2,-10,2,-1,-5,-10,6,9,-1,-1,8,-7,-7,-10,3,-10,2,9,1,4,3,-4,-4,-5,5,-8,-9,10,5,-6,1,-5,-7,6,4,-3,-5,-8,-9,2,8,-7,-4,-2,8,-7,-3,1,-5,-5,8,-8,4,-2,8,8,-3,-2,3,-5,-9,1,5,9,10,2,1,-3,-5,-9,-8,-8,4,-7,1,10,-4,-1,3,-2,-3,3,4,10,-10,10,-8,6,-8,8,4,-1,-9,9,2,6,-6,1,4,9,4,9,-10,3,9,9,-1,4,-3,-3,6,10,10,-4,-5,-8,4,3,4,2,-9,-9,-9,4,9,7,-9,-9,-2,-3,8,8,-1,-6,6,10,-6,8,3,-7,1,8,-3,-1,4,2,5,3,-8,1,-6,-1,-2,-8,-3,7,-1,6,-6,10,10,1,1,-1,5,-5,3,-5,-5,9,-10,-1,-5,-8,3,10,-10,-9,7,10,-2,-4,10,-9,2,10,8,6,8,4,-10,5,5,10,1,-3,6,-7,5,-1,6,1,-5,-5,1,-6,-4,-2,4,1,2,10], dtype = "int32")#candidate|3141|(252,)|const|int32
call_3138 = relay.TupleGetItem(func_2862_call(relay.reshape(const_3139.astype('float32'), [350,]), relay.reshape(var_3140.astype('float32'), [216,]), relay.reshape(const_3141.astype('int32'), [252,]), ), 5)
call_3142 = relay.TupleGetItem(func_2867_call(relay.reshape(const_3139.astype('float32'), [350,]), relay.reshape(var_3140.astype('float32'), [216,]), relay.reshape(const_3141.astype('int32'), [252,]), ), 5)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_3159 = relay.TupleGetItem(func_2337_call(relay.reshape(call_3106.astype('float32'), [16, 8, 14])), 0)
call_3160 = relay.TupleGetItem(func_2339_call(relay.reshape(call_3106.astype('float32'), [16, 8, 14])), 0)
func_2088_call = mod.get_global_var('func_2088')
func_2092_call = mutated_mod.get_global_var('func_2092')
const_3166 = relay.const([[-1.053599,8.196706,0.629146,3.443740,0.945293,-1.848265,2.714147,6.560231,-2.305836,4.627415,-2.062257,-1.443780,5.985256,-3.130749,-1.126248],[9.250953,1.083046,3.941323,-8.734249,-2.317284,8.701996,0.202113,-3.971325,-7.338731,5.286368,-7.616434,4.371910,2.840781,-7.082479,-6.319810],[-6.017753,-2.776242,-2.126082,-3.543580,-6.129585,6.824007,3.249580,-1.490793,1.041034,-2.494991,-0.346518,-3.958923,-2.207594,-9.594051,4.333742],[7.270817,3.671753,0.972617,4.679163,-1.736032,0.602804,-0.246377,-6.100552,-0.332854,3.199381,2.416528,5.254395,8.994216,5.051036,3.708229],[-6.777653,-2.185297,-1.331144,-5.285054,-7.180599,2.494554,-9.881575,-1.277486,5.984977,-4.037048,-6.721800,-0.461552,3.568209,7.916964,-2.737702],[7.757451,8.437984,-1.119635,-5.554247,-6.620090,7.294524,-9.192512,2.098846,0.642742,5.642445,7.273048,5.621333,2.206036,1.937153,6.195825],[7.780396,-1.299324,-7.387951,-6.136646,8.240945,8.672765,1.671261,-3.804622,1.734437,3.157252,3.402769,-8.389936,-9.379660,5.841038,-3.346556],[3.995789,-8.575955,-3.932329,-7.256757,5.384095,0.063085,0.772891,-6.122129,7.865050,1.420538,-7.597609,8.093781,8.585248,-7.819323,6.979143],[4.067672,2.399568,1.734611,-0.656641,-8.168470,6.536545,8.420924,-6.275191,0.339923,4.490159,-5.173506,6.318447,-3.559271,-8.788693,-8.382243],[6.889870,-3.095772,6.687037,-0.587807,-7.403484,8.378106,5.326738,-4.204984,-8.761173,2.292985,-7.357190,6.458778,-9.676258,-1.402913,-2.376922],[-9.795433,-6.703924,-9.699142,-1.141302,4.977455,-8.107554,9.448022,9.209600,0.173413,6.391813,0.817913,5.974015,0.308577,-1.508104,-3.054605],[-1.054206,-9.924187,1.792774,-6.252312,-8.451613,-0.916196,-7.839937,-9.061504,5.612905,4.723140,-3.423288,-2.118254,8.509835,6.990875,5.076801],[1.802913,1.069483,-7.063708,-4.794931,-2.621651,0.016557,5.372107,-3.376659,3.441155,-2.141672,-4.743135,-6.349893,-6.616280,6.470272,4.584278],[8.534555,-3.859660,6.534865,8.692709,-8.290232,-7.870037,6.470754,7.133511,7.282699,8.740698,-0.501138,-7.970287,7.543207,-6.760034,6.038389],[8.078962,-1.770767,2.300459,1.625927,-9.878175,-2.422235,9.786461,-8.558811,-9.653316,4.265904,0.509222,0.176278,-5.773941,-0.152295,7.652632],[4.073744,-3.422795,2.295189,8.674311,5.318980,-3.650304,-0.442185,3.487255,-2.444459,-7.090401,1.776335,8.035104,7.319210,0.093661,9.436608],[6.916753,-8.778577,-4.007140,6.994542,-1.547570,6.963821,8.711797,-7.279176,6.363324,-6.694467,-5.765515,1.935660,-7.342279,-8.292336,7.436290],[0.433794,-4.425849,-3.502837,1.426911,-6.654226,-4.658339,-8.511442,2.345422,-3.199898,9.967853,-7.866541,8.368875,-5.046508,-0.636424,8.186611],[-8.171356,6.650844,-4.342234,1.112460,7.170698,1.774917,-2.938894,2.214353,-6.042195,-7.879533,-6.524638,-0.788909,-4.235304,-3.915848,3.827176],[-6.150763,-2.441521,-7.670690,-2.093842,-6.016125,5.247422,5.694026,2.058765,6.795599,4.151607,6.961868,-6.093330,8.872966,-1.950139,1.035695],[6.788189,8.758571,2.209383,0.959992,-6.247664,-4.597968,5.070346,5.701779,-4.281114,4.341234,-4.628986,-1.614804,-2.951230,5.319457,4.835008],[-9.649299,2.675400,-4.938733,5.341863,-4.798323,6.952515,4.685824,-7.669910,7.726630,4.216359,-6.422218,7.351469,-7.677204,-5.413595,4.580773],[-7.406417,1.174274,5.455427,2.377525,3.544563,-6.716595,-4.421115,8.083050,-3.717272,2.919512,2.788551,3.309986,-4.172086,-0.755814,-5.382302],[-0.036523,9.079621,-7.446469,6.311189,1.066834,0.962766,8.250107,2.588170,-3.415857,7.696595,9.416486,-0.113556,-0.640384,-0.689572,7.151571],[-1.248313,-0.353613,1.355233,-9.128795,-4.865560,6.728368,-9.224050,6.605018,-8.834037,8.227890,4.388918,-8.868668,-3.423930,6.970802,-8.875345],[2.019260,-3.687759,-1.684900,-7.117853,9.523730,9.573332,-0.455450,5.984568,5.195383,6.809569,-8.385278,-8.358352,-4.316214,5.222234,9.676895],[5.816915,-9.432679,-3.726841,4.751067,8.567491,4.628905,-1.085739,-1.000361,1.600707,9.051349,9.284366,-4.647004,-0.696147,-1.809757,-1.205105],[3.253309,-4.054602,2.593042,0.085177,4.991540,5.805530,0.174430,-7.819072,-8.606145,9.059630,-8.023706,6.215878,-9.239671,-9.183401,9.747650],[2.109326,-4.382493,-5.481993,-4.231499,-4.341177,-3.961614,2.885596,4.677728,-5.652709,0.623042,0.608157,-3.787283,-0.280428,0.884967,2.555364],[3.218218,8.838477,-0.110831,-4.606016,7.380929,-2.264199,-7.439220,3.026823,9.839563,3.752583,-7.618500,-5.653916,5.738483,3.783569,9.991865],[3.139651,6.200285,-0.372497,-1.413685,0.306737,-4.552251,-8.846959,0.995462,-3.503950,5.762313,8.881510,3.773231,-7.236793,1.190628,4.544568],[-2.780583,0.637969,6.135247,7.089313,-6.572294,-6.651146,-9.371541,-7.774407,-5.516822,-0.504989,-0.221681,5.759134,2.371459,2.355036,-8.820863],[-7.451331,7.582138,-5.286349,3.507158,1.155578,-5.301834,-6.489639,-9.131400,-2.817065,-4.794802,-1.177779,7.400831,-0.879700,4.259651,5.191524],[-7.016076,-8.796237,0.763919,-4.838242,-6.138298,7.578450,6.156447,8.340075,-2.781544,4.585670,-7.505852,8.662873,1.094435,-6.905525,7.278329],[-0.729710,3.163584,-7.105364,-8.285141,-1.405333,-9.623048,9.579390,1.582306,5.483890,1.627923,-7.411062,-7.798945,5.066133,7.852453,-7.397188],[3.360770,-9.714903,7.323543,1.210941,-9.653156,-1.993982,0.049950,-5.152373,-1.858499,-5.259673,-1.638799,0.299725,5.281334,2.189467,-5.498930],[1.309471,-8.735331,6.733645,-9.546520,7.270028,-5.308753,3.080784,-4.880734,-0.667802,2.777967,-8.562650,-5.888114,-4.235360,-4.797713,-3.839105],[2.946654,-7.729134,-6.088452,6.713584,-4.449286,4.267066,-3.360860,6.451079,-2.996997,3.193644,-9.283356,-0.419659,7.518301,-5.045148,-1.776861],[4.181973,5.078636,6.974668,1.144625,-0.138162,-4.624796,-7.736473,8.980801,0.144351,4.923723,3.666564,-1.817669,-9.592150,7.731224,8.878614],[-5.054686,2.531865,-4.386289,6.909423,-9.900843,1.739606,9.043977,4.635534,8.332323,-4.243231,-0.423614,6.049626,8.201311,-4.695501,-2.157443],[-0.587242,-8.119657,-5.228693,8.313729,-5.507034,-4.340029,-2.779681,0.025776,-8.272759,-2.197577,-4.785214,-5.642073,7.006288,1.942383,-7.719771],[5.176315,-9.857859,3.604081,-9.389228,-6.595490,-7.102593,-2.997342,-4.837766,-8.438918,8.755409,-8.728225,8.543030,3.010096,-6.950641,7.029404],[-5.653474,-7.515784,-7.625363,-9.354122,-2.869262,-1.157968,4.184597,9.260562,-1.713590,-7.287388,-6.612467,9.681311,8.228553,-4.123609,-5.735433],[5.900888,-8.841819,9.414768,5.104363,3.624835,5.538369,-2.164444,-4.147057,-7.603470,6.687498,-1.010739,9.340367,-0.166731,-5.189842,0.754748],[-6.821929,-2.849465,-3.461488,7.597890,4.483565,1.600053,-5.898489,5.479172,9.410992,-4.292057,-4.295412,-0.356514,-5.863308,-5.963868,6.903956],[5.412923,-5.781339,-7.070208,-9.288498,-4.494496,-2.759602,-0.693853,7.250829,3.528058,7.609840,-4.890705,5.144711,-1.806544,2.571940,-1.955860],[-6.166939,-8.180889,0.580760,6.501542,-6.825092,8.709050,1.805880,-2.862549,8.887741,3.817943,9.166615,-6.510837,-9.449619,-2.078799,-3.060169],[-3.273652,5.645155,4.243530,1.346192,-3.188185,6.581141,-7.341280,6.844382,6.189194,-7.885866,5.140187,-1.749822,-9.317459,-7.664424,-6.600816],[-2.155928,5.916181,7.112943,-6.625657,7.558609,8.187548,8.619392,4.673581,-7.679460,0.834646,0.201722,-1.173330,6.827136,-0.766030,0.216802],[-2.411773,2.064193,8.950875,-2.121187,2.310649,-2.001909,-8.540545,-1.799109,-9.777419,8.566330,-4.203705,1.965787,-0.363466,2.277010,-2.578984],[-6.477312,-0.226981,1.569980,-8.288534,-2.848033,5.697655,-0.571804,-4.178382,-9.936926,2.677053,-7.600171,-0.896157,-9.971742,-4.248933,-2.785798],[6.972940,3.788318,-4.710287,5.117490,2.436126,0.621558,4.978327,-3.586666,-1.817485,-4.785040,-4.756815,7.843243,-3.283976,-3.678455,-9.264662],[-0.143900,3.619632,4.848476,-3.541469,-9.866704,-4.057490,-5.835499,-9.467622,2.895401,7.810477,-3.988707,2.665605,1.131916,-0.686888,-5.685841],[-2.777559,-8.101228,5.718120,1.194309,-1.654585,7.758599,8.051995,-9.262091,-3.164291,7.481002,-9.558237,-9.556533,9.570769,1.199080,4.480988],[-5.298722,-5.126165,4.834571,5.370927,8.947481,-9.196644,-8.133952,1.059994,6.903206,2.631471,1.170605,2.767797,4.139688,2.286865,-4.523835],[-9.043907,-9.658995,5.750336,-2.515144,4.469044,-5.311482,-9.423808,5.571903,-4.166179,-1.990271,9.928421,2.419527,5.624381,-9.230487,7.163271],[5.455364,9.766386,0.973561,5.269456,3.593181,7.038691,-4.911479,9.839547,7.750427,0.896432,4.123097,-7.350600,3.287589,5.530077,-7.264348],[-8.735444,-2.824957,-7.603553,-5.334511,-4.317512,-6.700478,6.852869,4.051930,-0.523964,-4.846416,-5.255157,2.294223,-8.810973,-1.910252,-9.964770],[8.801911,-3.950782,-3.780009,9.133982,-7.113109,1.189182,9.614479,-4.360073,7.404410,-7.893467,-0.155234,7.230912,4.467836,-3.253180,2.921305],[-8.006810,0.829751,-7.110738,4.169102,-2.998104,2.894445,-6.575545,-9.259486,-2.308873,-3.651579,-0.639423,5.340503,-3.324835,5.591488,1.324670],[1.021804,3.364894,-7.773050,-9.833649,7.780546,-7.838874,-2.555266,-0.947482,4.850854,-2.618702,1.143586,-6.542575,-8.350254,2.111856,3.284544],[-0.009036,-3.542580,6.830657,-3.883342,0.391459,-8.693196,-2.663588,-1.479500,0.087647,4.354034,3.894160,-0.468087,-2.448319,-1.249555,8.504293],[-8.633622,-6.083607,2.036456,3.801155,-2.073918,-8.584357,-9.916311,7.820263,1.813344,-0.321725,4.130087,6.685011,8.635363,-5.645300,9.763602],[4.535736,-5.160224,-0.122504,5.379655,5.179658,-4.756831,-6.577202,-7.885000,-1.402366,4.737396,3.433823,-9.650383,-9.105644,-4.482484,-5.940938],[-5.432844,7.934260,5.135213,9.973549,6.021885,-7.748093,-2.452225,0.863398,2.073806,-8.743856,-3.886744,5.847947,-6.233265,6.920593,-6.568695],[-9.139181,8.707201,1.416727,7.203997,-9.602772,2.631186,0.129825,1.209155,3.357935,-1.091687,4.956734,6.521561,2.370134,2.453112,-6.519836],[-6.682868,-8.140441,-9.048497,7.008863,-7.544674,-4.894725,-4.254568,0.925201,-3.527717,-8.228068,-8.030831,-5.102051,-5.350617,4.414934,-9.385820],[-7.924555,-8.895655,-4.741063,-5.176806,5.366752,5.724143,0.530597,7.225147,-9.236781,0.655539,-9.485542,-3.771511,3.443064,-2.282402,-0.363697],[-8.791985,-3.480147,-5.340914,2.856493,-6.778677,3.790199,-3.991410,7.437183,-8.578098,-6.885780,5.891107,0.373988,9.602140,-7.632796,-0.542394],[-4.827989,7.692128,3.931883,5.545197,1.924187,9.136489,-0.769264,2.629474,2.539588,6.939812,4.375874,-8.647591,-4.203013,9.284298,-4.922661]], dtype = "float32")#candidate|3166|(70, 15)|const|float32
call_3165 = relay.TupleGetItem(func_2088_call(relay.reshape(const_3166.astype('float32'), [350, 3]), relay.reshape(call_3108.astype('int32'), [28,]), ), 3)
call_3167 = relay.TupleGetItem(func_2092_call(relay.reshape(const_3166.astype('float32'), [350, 3]), relay.reshape(call_3108.astype('int32'), [28,]), ), 3)
output = relay.Tuple([call_3106,call_3108,var_3109,const_3110,call_3138,const_3139,var_3140,const_3141,call_3159,call_3165,const_3166,])
output2 = relay.Tuple([call_3107,call_3111,var_3109,const_3110,call_3142,const_3139,var_3140,const_3141,call_3160,call_3167,const_3166,])
func_3182 = relay.Function([var_3109,var_3140,], output)
mod['func_3182'] = func_3182
mod = relay.transform.InferType()(mod)
var_3183 = relay.var("var_3183", dtype = "int16", shape = (400,))#candidate|3183|(400,)|var|int16
var_3184 = relay.var("var_3184", dtype = "float32", shape = (216,))#candidate|3184|(216,)|var|float32
output = func_3182(var_3183,var_3184,)
func_3185 = relay.Function([var_3183,var_3184,], output)
mutated_mod['func_3185'] = func_3185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_3187 = func_1856_call()
call_3188 = func_1856_call()
output = call_3187
output2 = call_3188
func_3203 = relay.Function([], output)
mod['func_3203'] = func_3203
mod = relay.transform.InferType()(mod)
mutated_mod['func_3203'] = func_3203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3203_call = mutated_mod.get_global_var('func_3203')
call_3204 = func_3203_call()
output = call_3204
func_3205 = relay.Function([], output)
mutated_mod['func_3205'] = func_3205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3244 = relay.TupleGetItem(func_3028_call(), 0)
call_3245 = relay.TupleGetItem(func_3029_call(), 0)
output = call_3244
output2 = call_3245
func_3258 = relay.Function([], output)
mod['func_3258'] = func_3258
mod = relay.transform.InferType()(mod)
output = func_3258()
func_3259 = relay.Function([], output)
mutated_mod['func_3259'] = func_3259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_3279 = relay.TupleGetItem(func_2920_call(), 0)
call_3280 = relay.TupleGetItem(func_2922_call(), 0)
output = call_3279
output2 = call_3280
func_3297 = relay.Function([], output)
mod['func_3297'] = func_3297
mod = relay.transform.InferType()(mod)
output = func_3297()
func_3298 = relay.Function([], output)
mutated_mod['func_3298'] = func_3298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_3402 = relay.TupleGetItem(func_2920_call(), 0)
call_3403 = relay.TupleGetItem(func_2922_call(), 0)
output = relay.Tuple([call_3402,])
output2 = relay.Tuple([call_3403,])
func_3413 = relay.Function([], output)
mod['func_3413'] = func_3413
mod = relay.transform.InferType()(mod)
mutated_mod['func_3413'] = func_3413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3413_call = mutated_mod.get_global_var('func_3413')
call_3414 = func_3413_call()
output = call_3414
func_3415 = relay.Function([], output)
mutated_mod['func_3415'] = func_3415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3418 = relay.var("var_3418", dtype = "float64", shape = (15, 1, 7))#candidate|3418|(15, 1, 7)|var|float64
uop_3419 = relay.log(var_3418.astype('float64')) # shape=(15, 1, 7)
output = relay.Tuple([uop_3419,])
output2 = relay.Tuple([uop_3419,])
func_3426 = relay.Function([var_3418,], output)
mod['func_3426'] = func_3426
mod = relay.transform.InferType()(mod)
var_3427 = relay.var("var_3427", dtype = "float64", shape = (15, 1, 7))#candidate|3427|(15, 1, 7)|var|float64
output = func_3426(var_3427)
func_3428 = relay.Function([var_3427], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_3486 = func_2275_call()
call_3487 = func_2275_call()
output = relay.Tuple([call_3486,])
output2 = relay.Tuple([call_3487,])
func_3488 = relay.Function([], output)
mod['func_3488'] = func_3488
mod = relay.transform.InferType()(mod)
output = func_3488()
func_3489 = relay.Function([], output)
mutated_mod['func_3489'] = func_3489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3502 = relay.var("var_3502", dtype = "float32", shape = (12, 11, 16))#candidate|3502|(12, 11, 16)|var|float32
uop_3503 = relay.rsqrt(var_3502.astype('float32')) # shape=(12, 11, 16)
output = relay.Tuple([uop_3503,])
output2 = relay.Tuple([uop_3503,])
func_3510 = relay.Function([var_3502,], output)
mod['func_3510'] = func_3510
mod = relay.transform.InferType()(mod)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3511 = relay.var("var_3511", dtype = "float32", shape = (12, 11, 16))#candidate|3511|(12, 11, 16)|var|float32
func_3510_call = mutated_mod.get_global_var('func_3510')
call_3512 = func_3510_call(var_3511)
output = call_3512
func_3513 = relay.Function([var_3511], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_3535 = func_2275_call()
call_3536 = func_2275_call()
output = relay.Tuple([call_3535,])
output2 = relay.Tuple([call_3536,])
func_3555 = relay.Function([], output)
mod['func_3555'] = func_3555
mod = relay.transform.InferType()(mod)
mutated_mod['func_3555'] = func_3555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3555_call = mutated_mod.get_global_var('func_3555')
call_3556 = func_3555_call()
output = call_3556
func_3557 = relay.Function([], output)
mutated_mod['func_3557'] = func_3557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3203_call = mod.get_global_var('func_3203')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_3607 = func_3203_call()
call_3608 = func_3203_call()
func_3203_call = mod.get_global_var('func_3203')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_3635 = func_3203_call()
call_3636 = func_3203_call()
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_3638 = relay.TupleGetItem(func_2920_call(), 0)
call_3639 = relay.TupleGetItem(func_2922_call(), 0)
output = relay.Tuple([call_3607,call_3635,call_3638,])
output2 = relay.Tuple([call_3608,call_3636,call_3639,])
func_3640 = relay.Function([], output)
mod['func_3640'] = func_3640
mod = relay.transform.InferType()(mod)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mutated_mod.get_global_var('func_3640')
call_3641 = func_3640_call()
output = call_3641
func_3642 = relay.Function([], output)
mutated_mod['func_3642'] = func_3642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3719 = relay.var("var_3719", dtype = "uint8", shape = (15, 4, 14))#candidate|3719|(15, 4, 14)|var|uint8
const_3720 = relay.const([[[3,3,4,1,10,3,-9,-5,-7,4,9,10,7,-9],[-5,8,-4,-9,5,-6,-10,-7,10,-7,-4,-10,5,10],[-4,-4,-10,8,-3,2,-6,5,5,-6,-1,-2,4,-10],[2,8,1,-4,4,4,-8,5,5,2,1,5,-1,-9]],[[-8,5,-8,-5,-4,-1,10,8,-4,-2,3,8,-1,8],[-1,8,-5,-1,-5,4,-3,2,2,1,-2,-4,-6,9],[-9,-1,3,2,-2,4,7,-1,-5,-4,-2,3,-10,9],[1,-3,-4,-1,-4,6,5,-5,10,-5,-10,1,5,-4]],[[-1,1,10,2,-8,4,7,-8,-1,-5,1,-5,-10,-3],[-2,-10,-9,-5,-6,-6,10,-6,9,9,9,3,3,-2],[-6,-8,9,9,2,10,1,-2,-5,7,-2,-4,-10,2],[-6,-8,9,-1,7,-8,-4,-5,-6,7,5,5,-10,-10]],[[-7,6,9,4,-2,-6,-4,8,-5,-6,-9,-10,5,-4],[6,5,-6,-5,-5,-3,-5,-7,-3,1,-7,-9,-8,-5],[-4,-9,-2,-4,-5,5,9,8,5,2,-10,8,-10,8],[-5,10,-9,-2,3,-9,-4,-10,-2,-4,4,9,-9,-3]],[[-3,6,3,1,-6,3,6,10,8,-2,10,9,2,-10],[-4,-1,-4,-7,4,9,9,-1,-5,7,-3,-4,-5,-7],[-1,-1,1,-4,-10,4,-8,-5,-4,-6,-9,2,3,5],[1,6,-10,-8,8,6,2,-1,-2,9,-3,6,-7,-4]],[[-4,-10,-2,8,-5,10,6,-3,-5,-1,3,4,-3,7],[-9,-2,-1,-10,1,2,-2,-1,-10,9,1,4,-9,9],[7,4,9,10,10,-3,-8,9,9,10,-6,-5,-8,10],[-5,9,-5,1,1,-3,1,-6,-1,9,-8,-7,8,3]],[[1,3,-2,-2,-7,2,4,3,-1,4,-5,-10,-2,7],[-3,5,-6,1,-3,7,-6,10,-4,5,3,5,-2,2],[6,-3,-2,2,-7,5,8,1,-1,-3,-5,8,10,9],[10,6,-1,-4,9,10,-1,-7,-7,4,-9,-10,-7,-6]],[[2,7,-5,10,5,-10,2,-2,4,-3,-8,-6,-3,-5],[5,-5,5,10,8,9,-4,8,8,10,-9,-1,-1,6],[-3,6,10,-4,-5,8,-2,9,-5,-3,-8,5,5,4],[4,2,1,-5,9,-10,2,10,-5,4,-7,-7,8,-2]],[[-9,-3,-8,-10,10,4,3,-6,1,2,4,-10,-1,-5],[6,-5,4,7,10,-3,-3,2,10,-2,3,-7,-10,-9],[1,-1,1,-5,4,9,1,6,10,9,-5,8,-7,-4],[-3,7,5,4,-5,-3,1,5,-5,-6,-1,2,8,-4]],[[9,1,9,8,5,1,9,9,7,9,-6,-6,10,3],[-2,-2,-2,-2,10,-8,10,-6,-5,-8,-10,-4,-4,3],[10,1,-10,-2,-5,-5,4,9,-5,2,10,2,-9,-6],[1,-8,-5,5,-3,10,-3,4,-10,-1,9,-5,-7,1]],[[-7,10,6,9,6,-7,-2,8,3,3,6,8,-9,-4],[-2,-2,-2,7,8,-9,1,-7,4,6,-9,3,-3,9],[-6,10,-8,6,-5,-5,-10,-9,-4,-4,4,-8,-1,8],[-1,-7,10,4,-10,-5,5,7,-8,-6,5,-3,-10,-1]],[[1,4,-6,1,-8,3,7,-2,2,8,8,-2,-4,1],[5,4,1,10,-10,-5,-7,-8,-10,9,-2,2,2,2],[-9,3,-6,10,6,-7,2,-9,-2,-5,9,-4,10,-10],[10,-2,4,-2,2,-10,-1,-7,2,-2,-2,9,-1,-10]],[[-9,-5,2,-9,-1,-9,-1,1,9,-5,-3,5,3,5],[-7,5,7,6,-7,8,-5,3,9,10,-2,-6,5,10],[-5,2,-2,-7,-8,10,7,-5,6,-10,2,10,-8,-8],[-10,-1,-3,-5,3,-4,5,8,2,6,-1,-3,-10,-4]],[[-3,-9,1,6,-4,-9,-2,-8,8,1,-9,-10,-7,1],[7,-6,-10,-3,-7,-8,-9,8,1,10,-1,-1,-2,-9],[3,-4,7,-3,5,1,3,2,6,5,5,-7,10,5],[9,9,-3,-4,-5,9,-1,3,-8,9,-5,9,2,4]],[[-6,-4,-2,8,-7,6,-9,3,3,-5,-1,5,9,-5],[2,4,10,-4,10,8,4,1,-10,3,-10,-4,-5,8],[5,-8,5,-6,10,5,-1,7,-8,-1,3,-2,4,-4],[7,6,7,8,8,7,5,7,-7,-3,5,3,-8,10]]], dtype = "uint8")#candidate|3720|(15, 4, 14)|const|uint8
bop_3721 = relay.bitwise_or(var_3719.astype('uint8'), relay.reshape(const_3720.astype('uint8'), relay.shape_of(var_3719))) # shape=(15, 4, 14)
output = bop_3721
output2 = bop_3721
func_3725 = relay.Function([var_3719,], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
var_3726 = relay.var("var_3726", dtype = "uint8", shape = (15, 4, 14))#candidate|3726|(15, 4, 14)|var|uint8
output = func_3725(var_3726)
func_3727 = relay.Function([var_3726], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3203_call = mod.get_global_var('func_3203')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_3741 = func_3203_call()
call_3742 = func_3203_call()
output = call_3741
output2 = call_3742
func_3773 = relay.Function([], output)
mod['func_3773'] = func_3773
mod = relay.transform.InferType()(mod)
output = func_3773()
func_3774 = relay.Function([], output)
mutated_mod['func_3774'] = func_3774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3775 = relay.var("var_3775", dtype = "float64", shape = (6, 12, 13))#candidate|3775|(6, 12, 13)|var|float64
uop_3776 = relay.rsqrt(var_3775.astype('float64')) # shape=(6, 12, 13)
func_1904_call = mod.get_global_var('func_1904')
func_1908_call = mutated_mod.get_global_var('func_1908')
var_3785 = relay.var("var_3785", dtype = "float32", shape = (350,))#candidate|3785|(350,)|var|float32
call_3784 = func_1904_call(relay.reshape(var_3785.astype('float32'), [5, 5, 14]), relay.reshape(var_3785.astype('float32'), [5, 5, 14]), )
call_3786 = func_1904_call(relay.reshape(var_3785.astype('float32'), [5, 5, 14]), relay.reshape(var_3785.astype('float32'), [5, 5, 14]), )
uop_3789 = relay.rsqrt(var_3785.astype('float32')) # shape=(350,)
output = relay.Tuple([uop_3776,call_3784,uop_3789,])
output2 = relay.Tuple([uop_3776,call_3786,uop_3789,])
func_3793 = relay.Function([var_3775,var_3785,], output)
mod['func_3793'] = func_3793
mod = relay.transform.InferType()(mod)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mutated_mod.get_global_var('func_3793')
var_3795 = relay.var("var_3795", dtype = "float64", shape = (6, 12, 13))#candidate|3795|(6, 12, 13)|var|float64
var_3796 = relay.var("var_3796", dtype = "float32", shape = (350,))#candidate|3796|(350,)|var|float32
call_3794 = func_3793_call(var_3795,var_3796,)
output = call_3794
func_3797 = relay.Function([var_3795,var_3796,], output)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3804 = relay.var("var_3804", dtype = "float64", shape = (1, 6, 1))#candidate|3804|(1, 6, 1)|var|float64
uop_3805 = relay.acosh(var_3804.astype('float64')) # shape=(1, 6, 1)
uop_3811 = relay.atanh(var_3804.astype('float64')) # shape=(1, 6, 1)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_3813 = func_2275_call()
call_3814 = func_2275_call()
output = relay.Tuple([uop_3805,uop_3811,call_3813,])
output2 = relay.Tuple([uop_3805,uop_3811,call_3814,])
func_3828 = relay.Function([var_3804,], output)
mod['func_3828'] = func_3828
mod = relay.transform.InferType()(mod)
var_3829 = relay.var("var_3829", dtype = "float64", shape = (1, 6, 1))#candidate|3829|(1, 6, 1)|var|float64
output = func_3828(var_3829)
func_3830 = relay.Function([var_3829], output)
mutated_mod['func_3830'] = func_3830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3555_call = mod.get_global_var('func_3555')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_3886 = relay.TupleGetItem(func_3555_call(), 0)
call_3887 = relay.TupleGetItem(func_3557_call(), 0)
func_2516_call = mod.get_global_var('func_2516')
func_2520_call = mutated_mod.get_global_var('func_2520')
const_3908 = relay.const([[5.359918],[1.472775],[6.088624],[-9.594014],[-9.818121],[-4.015569],[4.407544],[-6.687968],[-4.630493],[-5.255498],[-4.119421],[0.082031],[6.834888],[-7.697049],[-2.478582],[5.522402],[-0.375254],[-4.984923],[0.741342],[-8.131444],[-6.604447],[3.995372],[-4.832828],[5.710547],[-5.835592],[-8.832801],[-4.965947],[-4.260433],[2.212506],[5.140647],[0.268492],[3.886826],[2.865151],[4.482133],[-1.694248],[4.262989],[-3.332835],[-2.822531],[-7.387617]], dtype = "float32")#candidate|3908|(39, 1)|const|float32
var_3909 = relay.var("var_3909", dtype = "int32", shape = (1, 28))#candidate|3909|(1, 28)|var|int32
var_3910 = relay.var("var_3910", dtype = "int32", shape = (252, 1))#candidate|3910|(252, 1)|var|int32
call_3907 = relay.TupleGetItem(func_2516_call(relay.reshape(const_3908.astype('float32'), [39,]), relay.reshape(var_3909.astype('int32'), [28,]), relay.reshape(var_3910.astype('int32'), [252,]), ), 0)
call_3911 = relay.TupleGetItem(func_2520_call(relay.reshape(const_3908.astype('float32'), [39,]), relay.reshape(var_3909.astype('int32'), [28,]), relay.reshape(var_3910.astype('int32'), [252,]), ), 0)
func_3203_call = mod.get_global_var('func_3203')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_3930 = func_3203_call()
call_3931 = func_3203_call()
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_3940 = relay.TupleGetItem(func_2920_call(), 0)
call_3941 = relay.TupleGetItem(func_2922_call(), 0)
uop_3943 = relay.log10(call_3907.astype('float64')) # shape=(39,)
uop_3945 = relay.log10(call_3911.astype('float64')) # shape=(39,)
output = relay.Tuple([call_3886,const_3908,var_3909,var_3910,call_3930,call_3940,uop_3943,])
output2 = relay.Tuple([call_3887,const_3908,var_3909,var_3910,call_3931,call_3941,uop_3945,])
func_3948 = relay.Function([var_3909,var_3910,], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mutated_mod.get_global_var('func_3948')
var_3950 = relay.var("var_3950", dtype = "int32", shape = (1, 28))#candidate|3950|(1, 28)|var|int32
var_3951 = relay.var("var_3951", dtype = "int32", shape = (252, 1))#candidate|3951|(252, 1)|var|int32
call_3949 = func_3948_call(var_3950,var_3951,)
output = call_3949
func_3952 = relay.Function([var_3950,var_3951,], output)
mutated_mod['func_3952'] = func_3952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4016 = relay.var("var_4016", dtype = "uint32", shape = (2, 1, 13))#candidate|4016|(2, 1, 13)|var|uint32
var_4017 = relay.var("var_4017", dtype = "uint32", shape = (2, 16, 13))#candidate|4017|(2, 16, 13)|var|uint32
bop_4018 = relay.logical_xor(var_4016.astype('uint32'), var_4017.astype('uint32')) # shape=(2, 16, 13)
bop_4041 = relay.greater_equal(var_4016.astype('bool'), bop_4018.astype('bool')) # shape=(2, 16, 13)
func_3828_call = mod.get_global_var('func_3828')
func_3830_call = mutated_mod.get_global_var('func_3830')
var_4048 = relay.var("var_4048", dtype = "float64", shape = (6,))#candidate|4048|(6,)|var|float64
call_4047 = relay.TupleGetItem(func_3828_call(relay.reshape(var_4048.astype('float64'), [1, 6, 1])), 2)
call_4049 = relay.TupleGetItem(func_3830_call(relay.reshape(var_4048.astype('float64'), [1, 6, 1])), 2)
output = relay.Tuple([bop_4041,call_4047,var_4048,])
output2 = relay.Tuple([bop_4041,call_4049,var_4048,])
func_4055 = relay.Function([var_4016,var_4017,var_4048,], output)
mod['func_4055'] = func_4055
mod = relay.transform.InferType()(mod)
var_4056 = relay.var("var_4056", dtype = "uint32", shape = (2, 1, 13))#candidate|4056|(2, 1, 13)|var|uint32
var_4057 = relay.var("var_4057", dtype = "uint32", shape = (2, 16, 13))#candidate|4057|(2, 16, 13)|var|uint32
var_4058 = relay.var("var_4058", dtype = "float64", shape = (6,))#candidate|4058|(6,)|var|float64
output = func_4055(var_4056,var_4057,var_4058,)
func_4059 = relay.Function([var_4056,var_4057,var_4058,], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_4094 = func_2680_call()
call_4095 = func_2680_call()
func_427_call = mod.get_global_var('func_427')
func_432_call = mutated_mod.get_global_var('func_432')
const_4115 = relay.const([9.739249,1.047743,7.794410,-8.303821,-9.135223,2.537160,-6.892680,1.017560,3.759786,6.748277,-1.651380,4.024343,7.872790,2.704428,2.361770,0.376482,-8.722011,1.681777,-7.408082,-9.057428,-8.961923,9.121502,-8.639745,1.281656,8.496357,-3.991579,-8.550990,7.580184,-9.984762,-9.714812,6.963998,-2.779693,-9.161677,9.812173,6.051514,-7.972635,6.784238,8.721709,-0.334721,-0.935577,4.300139,-4.821886,-6.749633,4.455397,-3.211515,1.769489,9.083185,4.050398,9.427208,-1.489840,-3.101382,-2.324282,9.480026,-7.256956,3.719502,3.522196,9.305967,-7.297058,2.436983,-7.619426,-3.650124,2.753268,2.313371,6.696324,8.624426,-7.590859,-7.464113,-0.734494,-9.123525,-5.896311,3.816596,-1.134518,0.114803,-6.061304,-8.876772,-5.255779,-4.627750,-2.498126,6.332816,8.357122,6.799096,-8.907251,-8.224393,9.509218,6.038694,-8.823243,6.574707,6.240263,-8.339905,5.721570,-5.301392,6.836189,6.982153,4.401871,1.635522,-4.618369,-8.506867,5.577435,1.911267,8.070815,-7.628528,2.942631,-5.460629,-0.014613,-5.403356,0.604350,4.235704,-5.487819,-9.701356,4.903035,-8.737400,-9.174393,4.478262,3.461446,3.261047,8.562075,0.684681,5.609687,-8.687636,-6.212390,-8.002224,9.536164,-9.373961,-5.060092,4.577857,-1.338286,1.559459,-5.036956,-4.847512,5.700832,-9.162856,6.584945,8.924319,0.430665,-5.423864,3.867057,5.144142,6.375637,-1.395275,-9.208334,9.321029,0.999160,-6.851130,0.791348,9.328483,-2.195836,-0.838940,0.534762,-6.163819,6.639277,-4.135181,0.497046,2.621022,6.565953,1.940825,-4.898912,3.012001,4.981207,8.729786,-3.707239,-6.492265,8.576734,6.851048,-7.115299,6.892439,-0.023188,-6.928101,-0.982632,-5.646335,4.094076,9.884116,8.097432,3.434369,-2.032862,4.948675,-4.543535,1.233159,-7.087657,-1.290483,4.907288,-3.674484,-5.864987,7.694596,4.204227,-0.333441,9.553278,-9.972006,-0.522754,-1.366183,-3.400652,-2.652394,9.483586,-6.862297,-0.701141,-6.896347,4.279728,2.776750,-0.322011,-9.802640,1.998465,-2.193539,-3.079204,9.144878,1.301767,-3.530854,1.660045,-0.203559,-3.036650,8.668196,3.201089,-4.298879,-1.005367,-1.491690,5.781362,-9.672518,-4.111493,2.368005,6.142812,8.822219,-2.318698,0.230562,-3.931444,-0.623203,-3.161826,6.203691,-2.403103,-9.544558,-9.739438,5.728930,0.309866,-6.146072,-2.577852,2.846486,-6.445805,-0.396544,-1.792002,-8.476707,1.881933,6.375317,-7.226238,-0.691469,8.733906,-4.898451,8.795192,3.963816,3.225272,-7.560089,1.867259,-6.384141,0.954675,7.381524,-3.811566,-8.002364,-4.940578,6.028801,3.926418,6.944330,1.699697,-9.666643,1.616481,0.476573,9.141133,1.568727,4.210024,-6.110005,-5.978649,-4.216391,2.484201,1.761931,1.213602,0.905323,-3.754257,1.339699,-1.391761,-3.277460,1.094915,-4.045733,-8.504334,3.212051,8.800192,-6.566150,5.123055,-5.690982,2.028524,5.882919,1.047587,9.197646,3.378503,6.561532,-9.381768,-2.192108,8.516958,-2.203671,-2.393090,-5.008352,9.417085,7.114478,4.341360,-4.057667,4.675353,1.065383,-0.420344,-6.678058,4.082519,3.332882,-6.050678,9.737034,-4.540777,5.602216,-9.322129,8.795081,-4.000644,-4.919917,-7.832892,-5.931665,-5.013508,-7.422402,1.987086,4.921488,-9.479226,-2.303625,-0.338225,3.398089,-3.470140,0.989556,-1.464967,-3.709290,8.666764,-2.809789,0.813736,-6.503159,0.053576,-8.364028,1.190490,9.426316,-9.158761,-1.742828,-6.467863,-6.500340,-1.831630,0.505463,-0.556605,5.266904,-0.434936,4.001262,3.251105,-3.125599,9.631785,5.465404,-3.212210,-8.094806,-7.662714,1.358084,-0.410135,3.771245,6.418830,5.390927,2.918773,5.799050,6.242611,5.218672,-1.084854,6.513146,2.724312,1.348456,4.093155,-0.375747,-5.689066,-4.540531,1.927284,-1.111412,-1.281098,-4.759564,-2.766017,-4.493369,3.627925,-2.945638,1.101127,7.552268,-9.591583,-2.547071,-3.585108,-3.504889,-0.803796,-8.017560,-7.267470,-8.543021,-3.002804,-8.202695,-2.770875,-8.617307,3.398607,-3.208813,-3.593388,8.519836,-2.006724,8.448183,-7.502403,4.223470,-3.446147,2.238877,-7.651529,-7.565837,-9.728187,-1.739028,6.479429,-4.316966,3.322586,0.505764,-7.653208,0.370122,-2.412122,-4.612807,-1.295931,6.593106,3.235774,0.385374,-3.431462,-7.274259,0.748339,5.086573,-5.013086,3.869616,-9.449517,7.202021,2.063549,2.895523,8.186473,-4.441578,-3.975668,2.719032,-2.586225,4.864012,-8.982062,-7.878579,-1.363956,-4.062083,7.558321,3.547117,-4.208855,6.332845,5.584489,4.220843,-2.002597,-9.434145,2.169725,-3.241401,-4.160729,-0.112815,2.586360,-4.350169,-7.949969,-0.559416,-0.590494,-5.823907,1.487206,-4.191564,-2.132010,0.190061,-7.930375,5.235088,3.810477,6.223756,-8.208167,-6.302762,-7.939089,5.841236,1.366187,1.208546,8.888209,-9.719936,0.015287,1.975892,-1.007012,-5.858773,-6.968378,-6.223580,2.346778,-7.035409,8.423334,4.861978,3.723484,6.031938,8.887729,7.264133,-8.216322,0.015127,-4.632070,4.273668,4.218941,8.740647,-7.512114,-5.656769,-8.489008,2.912547,0.477225,4.283798,8.970158,-5.655130,8.483323,-1.366718,0.992486,7.368303,-8.178127,0.738403,-3.462573,-2.350421,-6.836724,-4.132204,8.146119,1.736328,6.757280,6.283712,2.704366,2.953878,7.481804,-8.063238,5.987541,2.052445,-7.608523,6.167361,9.648899,7.557544,-6.194112,-4.229988,6.790040,5.029696,4.082962,-9.925838,-5.224506,1.160598,7.122187,-3.218601,-5.329474,-0.635189,-2.491036,8.760482,5.604423,-0.975914,0.487040,0.168514,-5.500449,2.850650,-0.327996,-4.629760,4.411971,-0.524929,6.484351,4.732013,-1.775749,-8.193968,4.750214,6.718094,5.651761,4.997120,-2.690870,2.137955,4.930044,-3.400800,-1.085501,-0.728185,5.447031,-5.348087,5.302766,-0.444318,-3.562132,1.381807,-7.348774,-9.144236,-4.976847,-5.447381,5.210099,8.381632,-7.301135,-6.005992,-6.892713,-6.082815,8.526239,-2.222427,-8.832054,6.932317,3.459997,9.678228,1.750922,4.989474,6.167273,-6.659957,-4.708920,5.170545,-5.906789,2.081385,-1.263398,-4.398131,1.456449,-9.064151,2.315673,-3.368000,-3.413386,-2.264827,1.332194,8.819581,-5.716932,1.102477,3.613534,6.495059,-5.914666,-8.132081,1.546945,3.127748,3.867961,-8.212549,0.863213,-4.089146,-6.817369,2.978690,-8.645550,-9.674072,-9.490539,8.960582,-1.283990,3.193964,-5.264145,3.233687,-3.293703,-2.180166,0.554008,-0.772699,0.138553,-2.948273,-5.169754,7.036216,6.959765,9.250624,-2.091526,8.180712,3.999169,2.881264,2.710347,6.031141,9.047285,9.505510,4.664013,2.289313,-4.192693,-2.063000,7.182132,-7.817303,-8.012616,7.239248,-9.976639,7.574560,7.105494,9.364195,-1.247836,9.779963,-4.165352,-9.869434,-6.631199,-1.361215,5.129889,9.554702,6.496994,5.641474,8.443178,-1.849806,-7.876237,-7.081919,-0.779025,-4.837985,-7.798921,5.766141,-8.185645,-0.249621,2.917241,-1.971346,-7.485936,-0.405096,5.683529,0.285683,-2.675176,-6.959604,8.316163,-2.255119,7.524922,-9.873358,-7.723283,-0.511141,5.902816,-5.785907,-6.471233,-7.658484,-3.337898,-9.942835,-4.122421,5.426664,0.056561,7.317614,-2.278937,-0.116831,-3.158884,7.557509,-8.235174,-2.318986,2.915376,8.741545,3.847294,-7.563096,-3.741378,5.499797,-9.240893,6.600813,-0.792295,-9.696756,-5.431490,-8.237428,-8.079610,-7.915229,-4.512056,-2.102011,3.732048,4.677555,0.279882,-2.765816,-0.898070,8.422868,-6.038597,-2.508165,8.639453,8.676862,8.017039,4.255191,-0.663501,0.401074,-1.986588,-1.105004,4.618561,-9.714846,4.915472,-5.573066,-7.903715,-8.960440,-1.190262,8.841461,1.910855,9.090009,4.902138,-8.474833,-2.662893,-9.430853,-3.813262,-3.931854,-1.064699,-7.436479,-7.971363,4.649438,-8.508084,9.344594,-3.415182,2.628675,-8.836855,-0.420727,3.374362,2.087757,-9.849166,-9.569061,-7.506653,-1.763052,6.466210,-5.653546,3.930456,-3.428574,7.721169,-0.070287,-0.077784,0.860724,9.498696,-3.256915,3.516772,-5.624176,1.074454,-6.310946,-3.873986,-3.036482,0.644959,8.351194,-3.332027,2.455332,2.557401,0.215038,0.273541,-7.776987,8.497473,3.133212,-4.257400,-9.403858,-3.733957,1.384952,-2.814841,-0.565618,-1.761856,-6.263356,5.596911,-5.411016,-5.418458,-4.481013,2.295722,-0.441386,-7.159760,9.979664,4.317550,-5.325266,-7.415591,-5.842441,-5.079032,-9.411223,-6.562514,5.354987,-9.848341,7.335770,-6.822150,-3.951754,-5.207188,-1.971089,-5.785915,-6.520720,5.218451,9.790365,-5.647323,-3.847736,-8.473320,-1.690272,-8.107463,-3.971199,4.680499,4.953454,-6.943565,7.314843,-6.590686,6.106139,4.451099,-5.776565,-1.704833,-1.679520,-8.415186,4.542236,-2.614310,8.829539,-3.813935,1.266148,0.353269,7.546186,0.419714,0.442397,-4.680565,-6.914221,-2.744729,-7.967653,3.334154,4.657594,-8.712030,-1.989012,-0.773524,2.997396,-6.324883,5.611719,7.878370,1.396655,8.465112,-1.615636,4.409491,-5.208131,6.630965,-8.304519,0.520315,-4.107006,4.715447,-6.039578,8.744443,-5.027843,2.646177,7.843812,-2.294198,9.584908,7.572706,0.477495,-8.231239,-8.648396,-1.592304,-5.606230,1.982533,1.845490,-6.533863,-9.435456,3.978997,3.173397,-5.452334,1.812930,6.060031,6.592508,-2.998512,3.577640,-8.534138,0.113237,-3.970231,-6.082600,-4.363041,-6.780263,-4.825637,-7.320275,7.550600,-6.903281,3.508682,-6.652616,-0.099981,8.180544,-6.027849,9.228665,7.032779,-3.427607,8.099859,5.735244,-7.932214,-7.860509,-6.525954,1.031932,-4.782137,-4.893673,8.710690,-7.988712,-7.332576,5.131335,-9.200628,3.485405,9.796184,4.728731,-3.486839,-1.691703,6.251450,1.196879,-9.155970,5.677073,-8.140424,-0.211780,0.079781,0.869434,-5.434861,-6.188455,-8.080785,-9.024206,3.278417,-6.603831,-0.095316,8.187631,3.468223,-0.915557,0.219015,-7.175551,4.326935,2.319102,5.053959,-0.693390,2.661306,-1.974786,-5.003111,1.220612,-4.135890,1.401047,9.118727,-9.042635,-4.411100,-5.056968,2.941072,1.279740,2.713990,0.890130,-8.978398,-2.362858,-9.614986,9.931742,-4.991017,5.801830,-8.049949,8.233655,1.058472,-9.769486,-2.563202,0.743341,2.931577,-3.028638,2.592436,1.601437,4.593642,-4.311432,-9.448500,-4.828374,-8.156294,2.548013,4.770587,-0.228071,6.706104,-0.841813,9.467933,4.702330,-6.420416,1.597473,8.269890,5.609903,3.855025,-6.989423,6.137587,-6.696850,-6.554584,-7.491562,-3.900928,-9.690080,8.507872,-4.402619,-7.107772,7.602361,3.498428,3.280555,8.093548,-2.914245,-4.036801,-5.093400,6.411343,9.216323,5.680462,2.921480,8.168229,2.701865,-1.271405,7.354122,9.534896,-3.704547,-6.696290,2.022166,-9.831222,-8.144826,-2.371824,0.375651,0.439084,-4.832288,-2.558706,-6.398373,5.418155,7.539926,1.172145,0.262321,4.372531], dtype = "float32")#candidate|4115|(1050,)|const|float32
var_4116 = relay.var("var_4116", dtype = "int32", shape = (28,))#candidate|4116|(28,)|var|int32
var_4117 = relay.var("var_4117", dtype = "int32", shape = (252,))#candidate|4117|(252,)|var|int32
call_4114 = relay.TupleGetItem(func_427_call(relay.reshape(const_4115.astype('float32'), [5, 14, 15]), relay.reshape(var_4116.astype('int32'), [28,]), relay.reshape(var_4117.astype('int32'), [252,]), ), 0)
call_4118 = relay.TupleGetItem(func_432_call(relay.reshape(const_4115.astype('float32'), [5, 14, 15]), relay.reshape(var_4116.astype('int32'), [28,]), relay.reshape(var_4117.astype('int32'), [252,]), ), 0)
output = relay.Tuple([call_4094,call_4114,const_4115,var_4116,var_4117,])
output2 = relay.Tuple([call_4095,call_4118,const_4115,var_4116,var_4117,])
func_4125 = relay.Function([var_4116,var_4117,], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mutated_mod.get_global_var('func_4125')
var_4127 = relay.var("var_4127", dtype = "int32", shape = (28,))#candidate|4127|(28,)|var|int32
var_4128 = relay.var("var_4128", dtype = "int32", shape = (252,))#candidate|4128|(252,)|var|int32
call_4126 = func_4125_call(var_4127,var_4128,)
output = call_4126
func_4129 = relay.Function([var_4127,var_4128,], output)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3413_call = mod.get_global_var('func_3413')
func_3415_call = mutated_mod.get_global_var('func_3415')
call_4167 = relay.TupleGetItem(func_3413_call(), 0)
call_4168 = relay.TupleGetItem(func_3415_call(), 0)
const_4193 = relay.constdtype = "float32")#candidate|4193|(16, 8, 14)|const|float32
bop_4194 = relay.add(call_4167.astype('uint8'), relay.reshape(const_4193.astype('uint8'), relay.shape_of(call_4167))) # shape=(16, 8, 14)
bop_4197 = relay.add(call_4168.astype('uint8'), relay.reshape(const_4193.astype('uint8'), relay.shape_of(call_4168))) # shape=(16, 8, 14)
func_3555_call = mod.get_global_var('func_3555')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_4213 = relay.TupleGetItem(func_3555_call(), 0)
call_4214 = relay.TupleGetItem(func_3557_call(), 0)
func_4055_call = mod.get_global_var('func_4055')
func_4059_call = mutated_mod.get_global_var('func_4059')
const_4228 = relay.const([[6,-10],[-7,-7],[2,-4],[-5,3],[7,-9],[-9,-5],[-6,-10],[4,4],[2,-10],[-7,-4],[6,8],[-4,5],[8,-8]], dtype = "uint32")#candidate|4228|(13, 2)|const|uint32
const_4229 = relay.const([[10,-3,-2,1,7,-4,-3,9,9,2,3,4,-2,-4,10,-1,3,-9,10,-8,-7,-2,-5,6,9,2,3,-7,-4,-5,6,-7,2,5,7,9,-4,-6,1,10,3,1,9,3,10,8,-6,6,2,-1,5,-4,-10,7,-4,3,-1,3,4,-3,-6,10,-7,-1,8,-7,2,1,2,3,-6,-3,-1,-9,4,7,7,1,4,3,4,2,-1,-5,-2,9,5,7,2,-8,1,6,5,-2,-9,-8,4,8,6,8,-2,-5,1,-10,9,-9,5,6,3,8,2,-7,-9,-4,8,10,9,6,9,-4,8,-7,-9,5,-3,-3,9,3,-5,-3,-9,3,-10,9,-7,-6,-4,-7,9,4,5,7,7,3,7,5,9,-3,8,-8,4,-1,-8,1,10,-9,3,10,8,-4,-9,2,-8,7,-6,5,1,-8,4,-6,3,1,1,-5,-7,5,-7,-4,-1,-5,9,7,-3,9,-4,-4,-10,2,10,-2,8,3,-4,2,-1,4,-6,8,-6,9,-1,7,-1,7,-8,-6,-8,-2],[7,2,3,-8,5,-8,-2,-10,-1,-8,-4,2,6,8,9,10,6,-4,6,-9,7,-1,-6,5,8,10,10,5,1,2,3,-8,2,1,-5,8,-8,2,-1,-3,-2,-2,6,10,9,9,-2,5,2,-1,-6,10,9,10,-1,-1,-8,7,10,-1,-9,-3,1,4,-3,10,-5,5,-2,-8,-10,8,-1,1,-4,10,-7,4,-2,1,5,-5,2,6,7,-9,-2,4,-5,7,-7,3,-2,2,-7,-9,6,3,-6,-6,-3,-9,-3,10,-7,-5,6,10,7,1,-7,-6,-6,5,-10,-4,-5,9,5,-3,-8,1,-10,-1,-5,1,-5,-6,-8,3,-9,2,-2,-1,-2,-1,5,-4,3,2,-10,-1,-1,-5,8,-8,7,-1,3,-7,-8,-5,2,-10,5,-4,-4,-1,10,6,6,-4,-4,-3,9,-3,-10,-10,10,-9,1,-1,8,3,-7,-7,3,-7,8,-5,10,6,6,4,7,10,-7,-6,-2,3,6,-10,3,7,7,-10,9,9,-3,3,6,-9,-6,-8,-4,6,10,10]], dtype = "uint32")#candidate|4229|(2, 208)|const|uint32
const_4230 = relay.const([[-2.880010,-4.166920],[-4.653802,1.824643],[-7.726715,1.919697]], dtype = "float64")#candidate|4230|(3, 2)|const|float64
call_4227 = relay.TupleGetItem(func_4055_call(relay.reshape(const_4228.astype('uint32'), [2, 1, 13]), relay.reshape(const_4229.astype('uint32'), [2, 16, 13]), relay.reshape(const_4230.astype('float64'), [6,]), ), 1)
call_4231 = relay.TupleGetItem(func_4059_call(relay.reshape(const_4228.astype('uint32'), [2, 1, 13]), relay.reshape(const_4229.astype('uint32'), [2, 16, 13]), relay.reshape(const_4230.astype('float64'), [6,]), ), 1)
output = relay.Tuple([bop_4194,call_4213,call_4227,const_4228,const_4229,const_4230,])
output2 = relay.Tuple([bop_4197,call_4214,call_4231,const_4228,const_4229,const_4230,])
func_4241 = relay.Function([], output)
mod['func_4241'] = func_4241
mod = relay.transform.InferType()(mod)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4241_call = mutated_mod.get_global_var('func_4241')
call_4242 = func_4241_call()
output = call_4242
func_4243 = relay.Function([], output)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mod.get_global_var('func_3640')
func_3642_call = mutated_mod.get_global_var('func_3642')
call_4244 = relay.TupleGetItem(func_3640_call(), 0)
call_4245 = relay.TupleGetItem(func_3642_call(), 0)
func_3258_call = mod.get_global_var('func_3258')
func_3259_call = mutated_mod.get_global_var('func_3259')
call_4277 = func_3258_call()
call_4278 = func_3258_call()
output = relay.Tuple([call_4244,call_4277,])
output2 = relay.Tuple([call_4245,call_4278,])
func_4284 = relay.Function([], output)
mod['func_4284'] = func_4284
mod = relay.transform.InferType()(mod)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mutated_mod.get_global_var('func_4284')
call_4285 = func_4284_call()
output = call_4285
func_4286 = relay.Function([], output)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_4287 = func_1856_call()
call_4288 = func_1856_call()
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
const_4303 = relay.const([5.618238,7.828030,3.500204,2.170411,-0.768176,-6.567187,1.074224,-0.122412,-7.773084,-0.921499,2.294562,-6.004764,-8.402843,0.067113,2.848787,-0.708761,0.926655,-3.706033,-2.930216,9.413541,5.766472,7.666364,-7.950151,1.737007,9.842918,4.854450,8.396629,-3.346427,8.089929,2.383464,-1.211473,5.173266,-5.209291,-7.336112,3.719206,8.235668,9.122576,-1.524043,-0.391671,-7.694381,0.713085,-0.395409,-8.827131,-3.959109,5.987362,-1.408728,-3.202525,3.558701,-7.951046,3.704046,3.432565,-9.805465,3.981750,-7.789772,-7.306787,-5.230985,-8.251609,-9.655477,4.034770,5.130141,2.035649,-1.059020,8.905793,-0.004982,-2.771219,-3.870476,-8.296251,-3.831322,9.597279,5.315163,-2.336134,8.085746,8.591953,3.899872,6.638468,7.203396,-2.277547,-7.465270,5.861625,5.442635,-9.711383,4.841972,-6.968336,-2.018917,-5.523921,-7.484953,4.318802,-6.141180,0.227185,-3.421169,-5.333175,0.049266,8.525480,-6.522926,-5.150289,-9.967516,3.851063,2.250016,-0.096124,8.485529,-2.308711,6.208232,-9.832622,-8.067258,8.961646,-3.959449,-3.796224,-2.143950,4.176102,-8.466935,6.819909,-6.331937,-0.684562,-5.621477,8.091274,8.720625,9.548689,-2.855958,-2.862826,-5.858465,0.703499,3.825878,-6.065286,9.934874,4.434315,-8.692395,6.440210,9.379057,-5.971486,-3.759355,-7.607660,4.790595,-5.858758,2.857911,-4.263261,-4.291059,-1.613216,5.609197,6.176803,-9.250253,-1.741604,7.066534,6.422921,9.362102,1.920324,9.673192,-3.375274,5.517270,-0.143214,7.733161,-8.153809,-4.394999,-2.210957,-1.374043,2.963098,-7.796670,6.460352,6.407269,-2.457251,-2.999254,-3.905673,1.664744,8.282538,1.873184,3.202656,-1.678912,-2.654246,-7.387464,8.362849,-1.623528,6.149233,-1.045638,0.062334,1.286896,3.767942,7.583252,-2.510602,-2.534335,7.853306,5.119658,-4.128129,0.098009,9.412811,3.522117,-6.587674,3.028709,-5.783280,-7.445289,0.404499,-8.232763,2.140774,-3.418223,-6.804643,6.807861,-1.224165,0.984178,5.426425,0.979680,-1.420417,1.943099,-2.754389,0.567745,-3.123816,-5.000454,3.944874,-7.912926,-1.641684,-6.512676,2.733878,9.017085,6.529063,5.715933,2.412683,2.938108,9.893949,-1.058172], dtype = "float32")#candidate|4303|(216,)|const|float32
const_4304 = relay.const([5,2,8,4,-5,3,-10,1,6,5,5,7,9,-1,6,-4,5,-5,-7,-6,-7,-8,-7,-10,-10,-1,3,8,-10,10,6,-9,1,-1,-6,-3,-5,-9,-1,-5,2,-4,8,8,-1,-3,4,8,-9,-6,-8,-7,9,7,-5,-8,2,3,-4,-5,-1,3,-4,1,-10,8,5,2,3,1,-4,4,-3,-4,-10,-3,9,6,-7,-7,-5,8,2,1,9,-1,3,7,-4,4,-1,-5,-4,-4,-10,-1,-7,3,9,5,8,-3,3,8,2,-1,10,3,-7,-7,9,-1,7,6,-2,5,6,2,7,-7,3,-2,-4,-6,-2,-7,1,5,-4,7,1,5,-2,-7,8,-8,1,-1,-4,3,10,-5,10,2,-3,7,2,1,10,3,-3,-6,-2,7,-3,-2,-4,7,-8,-7,7,5,7,-3,6,-2,6,1,-6,6,3,-4,6,1,10,5,2,-7,7,-4,6,10,-6,4,1,1,7,-3,7,-8,-9,-6,-2,10,5,-2,3,-6,3,3,9,10,-1,10,-4,-7,-1,6,6,-3,-1,3,-7,3,7,3,-9,-2,3,-10,-8,2,8,5,3,6,-2,-7,5,8,5,-8,6,7,-1,8,2,1,9,7,-3,-7,-9,6,4,8,7,6,-5,5,-9,-7], dtype = "int32")#candidate|4304|(252,)|const|int32
call_4302 = relay.TupleGetItem(func_1168_call(relay.reshape(const_4303.astype('float32'), [12, 3, 6]), relay.reshape(const_4304.astype('int32'), [252,]), ), 2)
call_4305 = relay.TupleGetItem(func_1172_call(relay.reshape(const_4303.astype('float32'), [12, 3, 6]), relay.reshape(const_4304.astype('int32'), [252,]), ), 2)
func_1375_call = mod.get_global_var('func_1375')
func_1381_call = mutated_mod.get_global_var('func_1381')
const_4313 = relay.const([-1.264998,-0.740392,7.398504,-4.651094,-1.049835,-4.627712,5.437495,6.232224,-4.478832,-2.585525,7.343079,-1.106782,3.600149,8.236682,8.967981,-7.079443,-6.218887,-7.846302,-1.618275,-8.777869,-6.552839,-7.696290,-5.000977,-6.617527,4.916435,-6.682484,-8.434248,5.041319,-6.100515,-1.504720,9.753252,7.862388,9.472255,0.497874,9.118300,8.637694,8.135498,4.602762,3.627852,-8.811640,-8.734224,5.514841,0.229097,-0.992966,-9.568816,6.086607,3.968030,7.591393,-8.334209,-8.016313,-2.086917,5.695576,8.525118,6.746890,-3.506836,7.377619,-8.859893,1.926210,9.567146,2.406274,5.257193,-1.232777,-6.502004,7.985036,-3.803763,-5.974376,7.147638,-2.863278,-5.079182,4.628161,3.036613,7.152374,-8.950292,-4.290284,-1.678761,9.390315,-5.365833,8.541313,2.551780,-0.070119,-1.255702,8.656455,-0.829812,3.310043,3.957950,-1.517467,4.590537,8.744530,-6.525192,-5.090075,4.694886,-9.084958,0.693204,-6.071287,7.766987,-2.119439,4.967731,0.587028,-0.268286,-4.631679,-0.181987,-3.449889,-8.532380,2.412015,4.028517,-4.980794,4.495964,3.151811,-5.534802,1.996648,-6.507833,9.310106,3.189060,6.232387,3.388232,-6.535011,-1.173509,-4.797450,-0.752373,-2.627684,2.037427,-9.506336,8.697357,5.407458,-9.593690,8.143690,-3.565235,-8.183435,-9.422711,7.821081,-6.583471,3.692737,1.491189,6.712705,6.210331,6.779736,-4.523068,4.647387,2.931892,8.196276,0.910889,-4.308716,-7.307437,-8.635498,3.053881,-1.105348,6.187292,-4.895385,9.714019,-0.166157,3.476172,3.001832,1.677802,-8.496836,7.596265,-9.395433,-7.120868,7.327037,-3.938805,6.563767,4.826318,1.654036,3.884373,9.997319,8.763755,6.477195,-4.075216,9.428819,0.972990,-5.839027,7.086452,-5.519433,-6.128470,-2.173115,3.689384,-1.546993,-4.064614,1.501469,4.826700,-7.892701,-9.185278,-1.167473,3.270691,-4.208758,1.273144,0.095518,-4.654363,-7.300177,1.000312,5.452683,5.822386,-2.241990,7.483992,7.946239,-2.774163,6.940884,-7.807911,5.933803,0.945271,-3.825039,8.381486,-1.752736,6.472225,-6.710549,2.978628,3.607610,0.733475,-2.137587,8.908783,7.654073,-3.405781,-3.126131,-1.433874,-6.088977,-2.765057,-2.112241,-1.202287,7.569522,-4.382313,3.541496,8.986198,-1.481019,-1.296635,8.873942,-5.134061,1.367504,5.675817,5.298682,-2.891929,-3.763354,3.308512,-2.541785,6.182944,7.675619,3.498610,6.097992,-3.115162,7.976256,6.541058,-2.590050,6.661521,-2.876653,-3.942268,8.107834,0.365512,3.821243,-8.286671,-7.717755,4.653238,9.575434,-5.061682,9.252686,-2.340057,8.021336,7.388671,-9.151440,-3.493390,0.217714,-5.660683,4.902753,-9.480753,-0.715814,-5.540811,-9.002691,8.689972,-9.745510,2.068752,-0.565450,-2.979776,0.189140,4.445807,-6.969011,-0.076547,-5.995905,-8.429014,-8.770614,-6.454005,-3.897549,6.493665,-2.790887,-9.826709,9.112477,-8.091086,-5.869217,5.590242,-6.116003,9.109715,-8.691444,7.050561,-6.319527,-2.538831,-3.022401,-8.351258,5.896899,-3.116522,-3.894569,-5.628788,-4.747975,7.328651,3.790198,-4.874525,1.674334,8.305193,9.186791,2.737968,-6.600862,-7.490255,-6.179102,7.778091,-0.611237,-0.244654,1.556613,-8.921732,1.776658,-6.765334,1.158482,3.093658,-4.532886,-0.818492,5.391519,3.848881,-5.006487,-9.103402,-9.888740,-8.254601,8.121782,8.145841,-0.683905,-7.067163,4.772727,-8.713819,5.711441,-2.866031,-8.842339,9.917509,-4.545147,-5.130764,-4.629824,6.778773,-9.592528,-5.130712,-0.411319,-1.182205,9.043309,4.005679,4.119202,8.147712,9.778006,-4.897704,3.038012,9.232058,7.759045,-8.698395,-6.765585,-9.405179,4.539347,4.405780,7.543085,-9.945224,-4.331221,1.037362,-8.782615,2.562196,-2.428620,5.557812,7.780880,7.471725,-6.318702,3.997450,-3.316304,-2.326147,-7.100077,2.365965,6.202747,-1.469961,7.357343,-8.982840,2.908743,3.007653,1.148990,0.773994,2.290658,6.740384,-2.208262,7.278867,0.456921,-6.582150,6.453376,5.677969,-2.841137,-5.162195,8.330759,6.223305,-8.345513,2.223734,0.742591,6.518305,6.906979,7.572085,7.695978,-1.042620,-2.314753,-5.393771,5.563097,-0.117448,5.614111,2.051252,3.315239,8.075871,-6.792924,-1.168455,7.103490,-6.976876,-4.620867,-2.845106,-0.031472,-8.384715,-6.405171,-2.785998,-0.473370,9.244263,-4.680317,5.444963,3.828938,8.916330,9.149559,3.086521,1.824826,7.324524,1.544487,4.696608,9.091271,-5.187501,-5.083570,3.394171,-0.880700,0.597548,9.787918,-5.360569,2.024070,-5.645133,1.303428,-8.264866,-7.678327,9.122235,2.893364,2.404115,-4.458275,-1.360164,0.904895,-4.550465,-5.077550,-5.640340,-4.906037,-7.435027,-5.918719,-0.346184,5.883792,4.325904,-0.478548,3.779332,1.451333,-5.475814,7.789504,1.596073,-5.710323,-1.343920,9.003861,0.740785,8.862069,6.649185,-7.756502,-1.999858,-3.947347,8.102783,-7.829084,2.254079,-8.235108,0.859891,-0.934387,-4.321916,-2.950213,-7.446248,1.059936,1.719386,4.189519,-2.144463,-0.470461,3.496546,-1.641688,-6.597445,-7.430371,6.677858,5.939047,-1.222492,9.596826,1.658860,5.409770,4.251274,5.921926,1.265042,6.629357,-0.914205,-4.759908,4.457571,2.096011,5.778036,3.017167,-0.036108,-8.020758,-0.342245,1.835883,4.025032,3.682295,0.652858,-8.932856,-3.489873,-1.609513,1.341008,-3.982259,-2.167344,-0.754378,3.440463,-2.004452,8.657019,-5.455384,-0.161061,1.333566,-7.171510,-2.781622,5.374007,9.774235,-7.156263,-5.172988,-1.964240,-6.037347,-5.863463,1.772426,-3.845367,6.253237,-6.735549,-4.256609,4.697260,-4.536524,-6.666106,8.015206,2.636686,3.627078,3.384374,-0.630415,4.108446,-9.356142,9.916112,9.097674,8.905094,0.600534,7.071746,-6.957956,0.201078,-4.249123,0.940078,9.429991,-9.955134,-2.413917,7.543972,-3.462705,-0.724035,-9.499531,-5.715432,7.918071,9.627259,1.912793,-1.591559,6.481994,-1.241548,-9.989388,-5.961087,1.126606,-3.243984,-5.671814,-9.002425,-9.065637,6.511684,-5.332475,0.938966,4.543766,9.540601,4.184492,-3.749677,3.224132,-7.005847,-8.876193,-4.130330,-6.755548,8.226364,-9.753971,0.377078,-4.534493,8.359056,-9.142768,3.178107,2.395863,-0.693534,-0.380244,-8.214245,9.212842,7.254620,4.510395,8.340951,5.837098,-5.948354,-7.099855,-2.823802,-1.938440,-1.662617,-9.486175,-1.142785,-0.040366,-9.148842,4.506954,-5.446740,-1.357286,-6.684437,5.721532,2.076695,-9.488726,-8.014261,9.555318,-7.750469,1.369575,-0.378649,-2.899931,2.904110,7.882550,1.924200,-9.567551,3.560486,-2.588516,-9.492123,-2.435725,-1.695406,5.239927,8.376504,6.697335,-6.542126,-5.532972,9.282282,9.345586,9.374732,-0.068472,6.271684,5.513200,6.710534,-0.544489,8.353876,5.980223,-4.776300,5.294460,2.189952,2.715693,4.524762,-1.316540,-8.151029,9.719881,-1.615097,-7.324699,5.105475,8.682845,7.544177,-0.719405,-9.690988,-7.728602,2.004522,-1.504962,5.786954,-2.135974,-3.587975,4.132362,3.039695,-8.429683,-4.214669,0.331455,-8.499334,2.999901,5.045772,2.482960,8.150174,-8.609382,5.608333,-6.690322,-3.017899,2.488783,3.104634,0.738724,3.016925,4.514879,-7.385111,4.566280,9.952058,7.897639,0.669013,-7.994187,-6.944222,3.362036,8.066706,-2.882989,-9.741764,-3.225599,-1.211264,-9.942163,-4.968693,-3.091735,8.903359,5.935372,-4.820208,7.902483,9.431631,-2.751878,-7.780929,4.759205,0.437297,9.131139,2.933012,-1.955294,4.238892,-2.358068,-0.047794,-2.905367,-1.856322,-4.696886,-4.486667,-0.914268,6.267913,-3.381217,-1.345324,7.970507,0.351952,-8.923326,8.487741,5.706318,1.001338,-0.313372,-0.886588,4.314987,-5.008510,2.081609,1.321350,9.098593,-9.216747,-0.257801,3.930847,5.219661,-8.040217,-3.544166,-0.631152,-6.523307,0.256944,1.970410,-0.585820,-6.188984,-1.001813,5.439578,-3.294774,-8.530129,-4.979329,7.285529,-1.726171,4.092971,-0.221023,-2.259374,7.889723,3.788272,4.550343,-2.938396,9.748113,9.363952,-8.062439,-6.895637,4.483183,1.434533,5.152248,8.563839,5.064934,5.261932,-9.526221,-7.072068,-7.088855,-5.406534,-4.537025,7.931174,-0.368134,5.470541,-2.038742,2.476309,-1.198181,0.492502,4.363506,-7.116794,6.023938,6.199742,0.023444,9.441486,2.170198,-8.250742,-2.357383,8.905665,-3.072837,1.244438,-1.437026,-1.948004,-1.209956,1.155619,-4.568723,-0.424478,9.002031,-0.610683,-4.464233,-6.721603,5.842688,8.513844,9.027830,-8.777375,-2.810269,-6.418424,-6.889687,7.981899,-2.080452,1.319923,-6.015214,6.876017,7.763165,7.602126,1.505201,6.154541,-3.797555,4.473647,0.740119,5.619124,8.407171,5.337101,-2.475044,-0.485141,6.000738,2.854307,-6.483232,4.730597,-6.948501,9.794739,-5.086169,0.925926,1.861155,-0.076512,-8.723392,-9.837159,6.871513,-0.553014,3.445703,2.167215,-5.692210,-7.232105,9.367730,-9.608400,-7.750663,2.883106,-0.517140,8.104559,8.257095,-8.586419,8.874820,-6.943189,-9.589944,-5.539782,2.203376,-5.442510,8.476628,-4.256405,-6.812153,-1.157862,-8.004077,-2.774364,-2.705179,0.818861,2.699858,-5.341099,-3.732567,-9.465065,7.607661,-5.072586,-6.923596,-0.696755,-1.947818,-8.651206,0.329192,3.599827,-7.109473,-9.454137,-3.780677,5.220290,6.526878,-3.501533,-3.585108,5.038155,-4.783196,-4.201474,-7.404539,-8.541566,-8.998864,-7.047063,3.104980,0.823557,6.297663,2.726508,7.719678,3.535952,-1.839829,0.596929,-8.677534,-5.064085,-4.831011,2.128277,8.939463,8.824136,-2.255194,7.157177,-0.681111,-8.843120,-8.249131,4.811116,-9.959620,-9.868579,-3.674639,2.209593,-2.870939,2.625082,-2.252786,-4.954676,-8.273743,6.794043,2.565178,9.651524,-6.478550,6.734046,7.693528,-1.272552,3.889603,-1.329776,-8.345055,8.711688,2.190733,-1.413322,7.467155,9.996674,-7.646347,9.437810,1.823657,2.369635,-4.998482,-7.974888,6.219812,3.671017,4.062400,3.308365,7.182405,0.505163,6.549872,-4.829256,-8.286163,9.052003,2.297689,-4.530151,6.541622,-1.865214,-8.884688,6.219492,5.209442,-7.639332,-6.824892,1.826551,-7.731870,-7.949550,-7.185507,2.753948,-7.176118,2.631909,0.102520,-1.717713,-3.244117,-5.837127,6.883087,-5.361796,-8.083232,2.583732,-6.981892,-4.664036,4.628418,4.340544,3.630960,-0.248398,3.422711,9.766115,2.123322,0.654443,-1.416045,-5.519530,3.330606,2.897067,-2.090281,-7.906048,6.720166,8.612006,6.923019,-7.991055,8.154255,-0.033034,-7.347433,4.509001,3.728294,0.344789,-0.713894,3.764602,6.801964,5.084583,4.370689,-4.404252,-6.927964,-8.060007,-9.055616,4.247290,7.888659,-0.291709,5.698344,-2.669144,-0.323158,3.409430,5.650284,-2.877943,1.200789,-4.260211,1.295453,9.920957,1.937247,5.817240,-4.143075,2.322450,-9.979731,4.080150,-5.158495,-7.918918,-0.948913,6.468134,-8.466648,-1.447756,-4.734076,1.027564,9.806205,5.611112,-4.638012,9.481887,8.377434,-2.713855,-5.162349,-8.341338,4.122932,-8.315421,-2.576171,-6.597092,3.252521,-8.894110,9.690100,-9.414962,-7.824400,2.391156,-6.220233,6.352105,-1.044328,-9.304239,5.148912,8.711946,3.551521,-3.725705,9.162424,2.155959,5.790297,-6.144756,5.169662,-1.987684,6.044096,-8.213872,-8.874792,4.909401,4.055975,7.686677,-3.288871,-9.884688,-7.819705,8.445266,7.147058,4.329736,-8.678466,3.081200,-3.826858,0.519403,-7.086409,3.947142,6.408482,3.438798,-1.656145,-7.532341,2.143964,3.458808,9.437330,1.376257,3.002347,-2.095971,6.113783,6.270342,8.150261,6.722405,-0.093362,-4.585591,3.877641,-5.218981,-4.126510,4.853874,0.486834,-7.956040,7.732696,4.973960,-4.840158,7.288224,-5.004735,6.296162,7.263108,0.373258,8.322062,-9.401610,2.814339,8.590098,9.585141,3.080150,7.072194,5.874423,1.760493,7.985522,-1.418437,5.284714,0.369167,-4.610922,9.490524,-9.380668,1.671885,-8.683120,7.721477,6.483500,-5.973208,-2.026093,-4.510779,-2.444165,-4.307171,0.986873,-3.915909,4.031787,0.143681,8.163977,3.326182,4.496667,-4.563103,6.300920,9.930643,-6.317793,0.762706,9.923167,-2.803962,-6.405584,9.777466,-0.548999,-9.953590,8.206645,7.575660,3.550173,-8.680046,-5.876591,-9.806946,9.704312,-5.166133,1.072639,-5.576045,3.312885,-5.478530,6.402818,2.803593,-4.495421,-9.816841,8.709472,-1.952085,-8.662038,2.298163,2.720344,1.884468,-9.257391,-4.279756,5.193434,-5.744378,9.220048,-3.917348,5.117308,-0.603599,-8.226260,9.863348,5.407090,-6.345955,4.767063,-0.438055,7.394887,6.744411,8.962263,4.862902,-9.748221,1.221704,-0.434893,-1.483640,8.776856,5.814815,2.107613,1.415227,-3.778509,9.692752,4.013132,-3.722645,5.497952,-6.058382,1.108742,5.484415,-5.563978,-8.905451,9.198233,-1.102905,0.107520,-1.452929,-8.626512,0.833828,2.146647,-2.249718,-2.344871,6.534209,-4.985556,-9.326641,7.492642,1.207487,-4.306234,-0.396946,1.622076,-1.766302,3.325815,1.858096,-0.279534,-8.193147,1.874123,0.826813,-9.777010,4.608352,-8.918868,-8.496661,-1.413146,3.741085,2.590888,-8.410402,-9.363842,-1.349604,8.349101,-3.782122,-9.638399,7.337367,6.035632,-9.082133,2.084689,8.505377,8.939592,0.047525,7.799140,0.575046,-2.244329,8.987109,-9.073314,-9.683284,-8.393888,-7.988636,-9.667332,-9.506445,-1.069017,5.123565,0.868675,3.284793,-4.101834,-3.471252,-1.257842,6.925943,4.284259,2.745940,-9.274755,7.865995,-0.517640,5.163332,9.001925,0.105539,-8.737012,6.381306,9.250426,0.153467,0.922700,8.954806,1.225030,-1.347840,-9.484910,-1.532585,-8.889219,7.057791,4.470341,5.672104,-4.664141,-1.270411,2.424117,-4.785302,0.512244,-1.094638,1.451590,-4.008667,-7.963658,0.026438,-2.948816,7.563111,3.033077,-3.730551,-3.684604,9.207830,-4.367595,4.804851,9.232964,-9.769521,4.918378,3.880613,-6.130784,2.525934,2.713443,6.650508,8.147195,-3.893333,0.467750,4.611632,-8.052328,3.414568,8.820075,-5.281055,-6.231146,9.542400,2.589976,4.582351,-6.668394,0.316216,8.521244,8.642566,2.411681,-6.484493,-7.477079,-1.878184], dtype = "float64")#candidate|4313|(1365,)|const|float64
const_4314 = relay.const([-5,5,-4,-3,-6,-7,7,-8,-8,-3,9,-9,-7,5,-3,7,1,-6,-6,8,-6,-5,-6,2,-10,-5,2,-3], dtype = "int32")#candidate|4314|(28,)|const|int32
var_4315 = relay.var("var_4315", dtype = "float64", shape = (420,))#candidate|4315|(420,)|var|float64
call_4312 = relay.TupleGetItem(func_1375_call(relay.reshape(const_4313.astype('float64'), [13, 7, 15]), relay.reshape(const_4313.astype('float64'), [13, 7, 15]), relay.reshape(const_4314.astype('int32'), [28,]), relay.reshape(var_4315.astype('float64'), [420,]), ), 0)
call_4316 = relay.TupleGetItem(func_1381_call(relay.reshape(const_4313.astype('float64'), [13, 7, 15]), relay.reshape(const_4313.astype('float64'), [13, 7, 15]), relay.reshape(const_4314.astype('int32'), [28,]), relay.reshape(var_4315.astype('float64'), [420,]), ), 0)
output = relay.Tuple([call_4287,call_4302,const_4303,const_4304,call_4312,const_4313,const_4314,var_4315,])
output2 = relay.Tuple([call_4288,call_4305,const_4303,const_4304,call_4316,const_4313,const_4314,var_4315,])
func_4336 = relay.Function([var_4315,], output)
mod['func_4336'] = func_4336
mod = relay.transform.InferType()(mod)
var_4337 = relay.var("var_4337", dtype = "float64", shape = (420,))#candidate|4337|(420,)|var|float64
output = func_4336(var_4337)
func_4338 = relay.Function([var_4337], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4356 = relay.var("var_4356", dtype = "float64", shape = (10, 11, 6))#candidate|4356|(10, 11, 6)|var|float64
uop_4357 = relay.exp(var_4356.astype('float64')) # shape=(10, 11, 6)
bop_4370 = relay.left_shift(uop_4357.astype('int8'), relay.reshape(var_4356.astype('int8'), relay.shape_of(uop_4357))) # shape=(10, 11, 6)
uop_4382 = relay.atan(var_4356.astype('float64')) # shape=(10, 11, 6)
func_427_call = mod.get_global_var('func_427')
func_432_call = mutated_mod.get_global_var('func_432')
var_4389 = relay.var("var_4389", dtype = "float32", shape = (1050,))#candidate|4389|(1050,)|var|float32
var_4390 = relay.var("var_4390", dtype = "int32", shape = (14, 2))#candidate|4390|(14, 2)|var|int32
const_4391 = relay.const([-2,5,5,-7,5,-10,1,-10,-8,4,6,-7,6,-5,2,6,9,3,9,5,-2,-10,-3,-8,3,-6,-4,10,-5,-4,-1,2,-4,-3,2,6,5,7,-6,8,8,10,6,-2,3,7,-6,5,3,2,6,-9,4,10,2,-1,1,-2,1,8,-10,9,4,-8,2,2,8,2,9,3,-7,10,6,-4,6,3,7,-1,-8,1,9,-1,-7,8,-2,-7,-5,-8,1,-10,-8,-2,-6,7,4,-5,1,9,-8,6,-5,-10,2,-3,-4,9,-7,6,-5,-9,-2,1,10,-3,-6,10,-2,4,-10,6,-10,-5,-5,10,7,9,4,3,2,2,-5,-9,-3,-10,10,9,8,-4,-9,2,-4,3,3,-9,4,-2,6,-5,-4,5,10,1,10,-2,10,4,7,1,7,-4,3,-9,5,1,-10,3,-10,9,-2,8,-7,7,4,-1,-7,-10,-10,1,-5,-5,7,-5,4,7,-7,7,9,-5,9,-4,2,9,4,-7,10,-4,-2,6,-4,-10,-7,-2,-3,3,-6,10,-2,-8,-7,-5,-7,-6,9,4,4,-2,-3,1,-5,7,1,7,-6,-10,-2,-2,4,-9,-9,-6,-9,7,-7,9,3,1,-5,7,-7,-4,2,9,3,10,-3,8,7,7,2,-3,-5,-10], dtype = "int32")#candidate|4391|(252,)|const|int32
call_4388 = relay.TupleGetItem(func_427_call(relay.reshape(var_4389.astype('float32'), [5, 14, 15]), relay.reshape(var_4390.astype('int32'), [28,]), relay.reshape(const_4391.astype('int32'), [252,]), ), 2)
call_4392 = relay.TupleGetItem(func_432_call(relay.reshape(var_4389.astype('float32'), [5, 14, 15]), relay.reshape(var_4390.astype('int32'), [28,]), relay.reshape(const_4391.astype('int32'), [252,]), ), 2)
bop_4397 = relay.less(uop_4382.astype('bool'), relay.reshape(bop_4370.astype('bool'), relay.shape_of(uop_4382))) # shape=(10, 11, 6)
func_3047_call = mod.get_global_var('func_3047')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4403 = func_3047_call()
call_4404 = func_3047_call()
const_4435 = relay.constdtype = "float32")#candidate|4435|(16, 8, 14)|const|float32
bop_4436 = relay.floor_divide(call_4403.astype('float64'), relay.reshape(const_4435.astype('float64'), relay.shape_of(call_4403))) # shape=(16, 8, 14)
bop_4439 = relay.floor_divide(call_4404.astype('float64'), relay.reshape(const_4435.astype('float64'), relay.shape_of(call_4404))) # shape=(16, 8, 14)
func_4055_call = mod.get_global_var('func_4055')
func_4059_call = mutated_mod.get_global_var('func_4059')
var_4446 = relay.var("var_4446", dtype = "uint32", shape = (26,))#candidate|4446|(26,)|var|uint32
var_4447 = relay.var("var_4447", dtype = "uint32", shape = (416,))#candidate|4447|(416,)|var|uint32
var_4448 = relay.var("var_4448", dtype = "float64", shape = (6,))#candidate|4448|(6,)|var|float64
call_4445 = relay.TupleGetItem(func_4055_call(relay.reshape(var_4446.astype('uint32'), [2, 1, 13]), relay.reshape(var_4447.astype('uint32'), [2, 16, 13]), relay.reshape(var_4448.astype('float64'), [6,]), ), 0)
call_4449 = relay.TupleGetItem(func_4059_call(relay.reshape(var_4446.astype('uint32'), [2, 1, 13]), relay.reshape(var_4447.astype('uint32'), [2, 16, 13]), relay.reshape(var_4448.astype('float64'), [6,]), ), 0)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
const_4455 = relay.const([-3.526810,4.350476,-8.425828,7.458905,-9.126570,3.887762,-5.388797,3.719379,9.916279,5.914336,-7.556650,-5.623989,-0.214043,-7.861778,-3.682211,7.751022,-0.036563,4.270318,-1.453670,-7.213135,0.541679,3.982676,8.302818,0.713905,-6.870490,-8.563928,6.033931,3.983537,2.662386,0.190841,7.888851,-3.731674,1.766210,-5.282976,-3.599993,8.083395,6.172430,-0.239174,7.320918,7.156453,-1.563938,-5.305115,-9.104484,7.804661,8.128858,1.450183,7.170399,-0.450116,-5.450192,-8.977933,3.029337,-4.434191,7.493797,-8.514216,-7.623854,-1.467431,3.919657,-1.592348,1.290812,-6.970752,5.145855,4.193108,7.387209,2.456420,9.001614,3.124963,2.535793,2.285640,-9.738624,6.627539,9.727889,3.701254,0.523105,-8.362492,4.121673,8.370263,1.318114,8.213736,9.077423,-7.921388,-2.015198,6.739047,8.009181,-1.213568,-8.672044,-0.189546,-0.460919,4.178460,-8.010786,-0.485627,-0.319002,-6.461945,-9.741736,-9.443173,-2.668977,-7.762828,-9.289935,2.935596,-5.651487,8.415388,2.282567,-8.600478,7.362717,6.657266,-1.396328,9.700828,-0.109803,-1.302521,1.483860,-8.866004,9.279994,5.663577,-3.783904,7.184374,-1.513852,-8.005749,-6.321318,1.170127,-5.503856,1.251248,-3.713064,3.076981,-5.582378,-6.981311,-5.772867,-0.025614,6.306624,-0.619275,-5.940163,8.905715,-7.310705,-7.454424,-6.138696,9.094110,8.500924,1.207823,7.867451,-9.743667,-0.169794,-1.299279,8.511311,-6.027548,-6.847040,-1.543095,-1.691250,3.742120,6.602160,-0.502970,-8.960135,-7.247885,-0.560730,1.199866,-1.398183,-7.588836,-7.385811,-8.562592,0.719646,8.604952,9.830182,-8.856648,2.035929,-1.885368,5.800441,-4.852780,-9.885248,2.791976,8.339961,1.881845,-0.860893,-6.735859,-4.647515,-5.710409,-5.921591,8.282944,-4.514570,2.054282,8.740353,-2.546178,-4.369760,-8.276584,-2.347895,-5.258022,5.963707,5.984782,8.937360,-4.454496,-4.368059,1.541345,-9.281096,-3.311534,-3.561561,-8.325384,-9.683537,-2.788508,-6.605441,3.617094,4.340248,-9.197439,3.440500,-4.189841,0.037138,-3.657503,-0.032512,-5.314394,-8.224158,9.539355,5.535855,2.657902,-7.957512,-2.445464,-1.030106,6.820608,0.019065,-1.332529,-2.899158,8.180048], dtype = "float32")#candidate|4455|(216,)|const|float32
call_4454 = relay.TupleGetItem(func_1168_call(relay.reshape(const_4455.astype('float32'), [12, 3, 6]), relay.reshape(const_4391.astype('int32'), [252,]), ), 3)
call_4456 = relay.TupleGetItem(func_1172_call(relay.reshape(const_4455.astype('float32'), [12, 3, 6]), relay.reshape(const_4391.astype('int32'), [252,]), ), 3)
func_427_call = mod.get_global_var('func_427')
func_432_call = mutated_mod.get_global_var('func_432')
call_4460 = relay.TupleGetItem(func_427_call(relay.reshape(var_4389.astype('float32'), [5, 14, 15]), relay.reshape(var_4390.astype('int32'), [28,]), relay.reshape(const_4391.astype('int32'), [252,]), ), 3)
call_4461 = relay.TupleGetItem(func_432_call(relay.reshape(var_4389.astype('float32'), [5, 14, 15]), relay.reshape(var_4390.astype('int32'), [28,]), relay.reshape(const_4391.astype('int32'), [252,]), ), 3)
func_3047_call = mod.get_global_var('func_3047')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4463 = func_3047_call()
call_4464 = func_3047_call()
bop_4479 = relay.floor_mod(bop_4397.astype('float64'), relay.reshape(uop_4357.astype('float64'), relay.shape_of(bop_4397))) # shape=(10, 11, 6)
func_935_call = mod.get_global_var('func_935')
func_937_call = mutated_mod.get_global_var('func_937')
call_4489 = relay.TupleGetItem(func_935_call(relay.reshape(call_4460.astype('int32'), [3, 84])), 0)
call_4490 = relay.TupleGetItem(func_937_call(relay.reshape(call_4460.astype('int32'), [3, 84])), 0)
output = relay.Tuple([call_4388,var_4389,var_4390,const_4391,bop_4436,call_4445,var_4446,var_4447,var_4448,call_4454,const_4455,call_4460,call_4463,bop_4479,call_4489,])
output2 = relay.Tuple([call_4392,var_4389,var_4390,const_4391,bop_4439,call_4449,var_4446,var_4447,var_4448,call_4456,const_4455,call_4461,call_4464,bop_4479,call_4490,])
func_4509 = relay.Function([var_4356,var_4389,var_4390,var_4446,var_4447,var_4448,], output)
mod['func_4509'] = func_4509
mod = relay.transform.InferType()(mod)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4509_call = mutated_mod.get_global_var('func_4509')
var_4511 = relay.var("var_4511", dtype = "float64", shape = (10, 11, 6))#candidate|4511|(10, 11, 6)|var|float64
var_4512 = relay.var("var_4512", dtype = "float32", shape = (1050,))#candidate|4512|(1050,)|var|float32
var_4513 = relay.var("var_4513", dtype = "int32", shape = (14, 2))#candidate|4513|(14, 2)|var|int32
var_4514 = relay.var("var_4514", dtype = "uint32", shape = (26,))#candidate|4514|(26,)|var|uint32
var_4515 = relay.var("var_4515", dtype = "uint32", shape = (416,))#candidate|4515|(416,)|var|uint32
var_4516 = relay.var("var_4516", dtype = "float64", shape = (6,))#candidate|4516|(6,)|var|float64
call_4510 = func_4509_call(var_4511,var_4512,var_4513,var_4514,var_4515,var_4516,)
output = call_4510
func_4517 = relay.Function([var_4511,var_4512,var_4513,var_4514,var_4515,var_4516,], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4548 = relay.var("var_4548", dtype = "float32", shape = (10, 14, 8))#candidate|4548|(10, 14, 8)|var|float32
uop_4549 = relay.atan(var_4548.astype('float32')) # shape=(10, 14, 8)
output = relay.Tuple([uop_4549,])
output2 = relay.Tuple([uop_4549,])
func_4555 = relay.Function([var_4548,], output)
mod['func_4555'] = func_4555
mod = relay.transform.InferType()(mod)
mutated_mod['func_4555'] = func_4555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4556 = relay.var("var_4556", dtype = "float32", shape = (10, 14, 8))#candidate|4556|(10, 14, 8)|var|float32
func_4555_call = mutated_mod.get_global_var('func_4555')
call_4557 = func_4555_call(var_4556)
output = call_4557
func_4558 = relay.Function([var_4556], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3203_call = mod.get_global_var('func_3203')
func_3205_call = mutated_mod.get_global_var('func_3205')
call_4563 = func_3203_call()
call_4564 = func_3203_call()
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_4574 = func_2680_call()
call_4575 = func_2680_call()
output = relay.Tuple([call_4563,call_4574,])
output2 = relay.Tuple([call_4564,call_4575,])
func_4579 = relay.Function([], output)
mod['func_4579'] = func_4579
mod = relay.transform.InferType()(mod)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4579_call = mutated_mod.get_global_var('func_4579')
call_4580 = func_4579_call()
output = call_4580
func_4581 = relay.Function([], output)
mutated_mod['func_4581'] = func_4581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3258_call = mod.get_global_var('func_3258')
func_3259_call = mutated_mod.get_global_var('func_3259')
call_4595 = func_3258_call()
call_4596 = func_3258_call()
func_2642_call = mod.get_global_var('func_2642')
func_2646_call = mutated_mod.get_global_var('func_2646')
const_4605 = relay.const([6,5,5,4,-10,-8,-4,6,-4,-9,10,8,8,5,-1,9,6,-1,-5,-1,-9,-7,5,5,2,10,3,-3], dtype = "int32")#candidate|4605|(28,)|const|int32
const_4606 = relay.const([-8.434597,-3.195728,3.509973,-1.435046,-9.031624,-2.934655,-6.662447,-1.088889,4.724105,-1.323871,-2.379697,9.662304,8.774721,-1.601676,2.410837,0.365340,-3.978464,4.242019,0.746736,-4.515727,8.635794,-6.090660,-7.077004,0.707631,-6.756361,-4.392482,4.615735,0.350149,2.558762,-2.632203,-0.042931,-1.185468,3.090298,-5.541382,5.722749,-2.104893,1.353241,-8.820370,5.152360,2.432113,8.562681,-0.716994,-1.557972,5.486052,-6.358760,-0.896923,7.325895,3.078952,-4.575231,-1.476322,-1.868414,8.588258,4.899763,4.080340,2.320323,0.336837,-2.404031,9.050462,6.933834,-2.572642,-6.818556,-6.546631,0.911625,-3.336006,1.920447,2.930880,4.055917,9.711394,-7.331844,-7.233325,1.510102,-4.285958,7.022541,-6.501643,-3.694108,-5.798761,0.897106,-6.764192,-9.710234,0.094835,1.441124,5.892777,4.162817,-6.106212,6.915029,5.418666,-3.713153,-1.785012,8.081159,-4.569169,8.715692,9.494436,3.951471,5.186504,-8.063622,6.021789,9.292441,6.215814,2.099977,-0.697039,-7.033003,6.585960,2.820250,-6.098631,3.615119,-7.025278,-6.856080,7.474752,-8.651857,5.583313,4.028563,-9.557946,-9.177327,0.844702,2.872384,-0.908446,5.859453,-7.558558,-7.094520,-0.423536,1.131537,-2.353304,-1.116868,9.961453,7.657661,4.805888,3.294243,7.816965,0.441886,4.801738,3.451282,-7.330565,-4.734677,4.066926,-4.467353,-1.278847,8.949023,7.835682,-5.211480,-8.136483,4.069772,6.066651,4.375035,-3.281274,3.108601,-0.367271,-8.083904,-5.772757,1.404948,7.838673,3.136913,-2.191742,-0.441204,-3.328435,-0.712407,-5.983007,-7.485279,2.688513,8.491603,6.065359,0.066368,8.514013,-4.656665,-5.810232,0.795242,0.198804,8.903142,1.152586,5.664117,9.609938,-4.649130,-0.293395,4.776206,0.445523,1.678679,3.529151,-1.161711,-3.124034,-7.991357,-3.833714,-8.754307,-3.652680,1.427498,-0.111272,9.262785,2.719880,3.625155,4.371488,6.638038,9.197678,6.972436,8.810903,5.471896,-7.520225,9.672000,-8.430655,5.147511,9.630834,-1.947777,0.160878,8.996168,-1.202360,-2.201579,2.207849,-4.802105,1.351656,-0.289032,9.114348,-9.698054,0.988911,-3.110506,-1.054598,4.185399,8.906471,2.816346,4.859132,5.599323,2.101210,9.326659,3.364152,-4.498789,8.016828,9.843918,-6.408670,2.181035,4.422679,6.581400,1.079235,-4.448802,9.619394,1.110321,-5.490238,-9.163133,0.525943,3.779532,3.665353,0.047062,-0.053017,2.808415,-9.450218,-9.783573,-1.632973,8.284023,-2.587453,-2.439009,3.647708,5.988100,-1.282815,-5.004574,3.256108,-7.710131,2.717336,-7.504866,0.672205,-5.176582,-9.204801,7.400403,0.698409,-1.412444,-7.704436,4.006164,-2.103077,-3.746561,-1.867894,-1.991041,-6.013986,-5.845616,-6.531859,3.073782,-8.997220,-6.410770,-4.025969,9.366305,-2.518107,-5.821944,8.773194,9.246477,-4.546562,-7.307729,-5.068408,-5.962326,-1.247903,-8.398265,0.500925,-0.536197,8.939603,-6.911799,-3.543253,6.070607,6.206528,-3.910631,6.095300,6.579031,2.082614,-6.903778,-8.107623,-8.124770,6.612740,-7.828774,-1.107895,-5.204486,5.545829,2.209128,8.810141,-4.976969,-6.641932,5.587044,-9.071304,8.363878,-8.618983,9.853008,1.442056,7.981790,-6.155412,7.484110,-2.829329,2.081834,9.422316,-1.748733,4.281486,6.889824,5.885679,-9.897247,3.694800,8.405245,5.744834,1.094173,-1.773154,-6.462389,-6.546147,6.922316,4.341542,-1.174059,1.313113,9.365641,5.595790,7.925622,0.174279,0.888990,8.785949,4.170268,3.543081,9.954084,9.660270,2.563235,-6.969381,3.719946,9.226599,-6.688004,-0.511615,3.813555,-0.093331,-3.887752,-1.426749,5.809219,-2.299288,9.362613,2.764595,2.664824,-3.303069,-8.528249,6.573588,-2.649375,7.374771,7.612169,1.462395,4.459328,0.831182,1.844159,4.950037,-2.242583,4.422166,-7.903785,-5.349714,-6.708060,-0.102116,9.575674,-4.530472,-9.503123,-3.501816,2.371164,-0.023654,-5.688708,-1.050425,-5.608595,-5.335873,2.029866,-8.986480,-3.135899,0.812343,8.910164,3.034032,9.242822,-7.250924,2.376277,9.950685,-7.796186,0.670065,-8.695990,6.056486,-1.480550,2.258061,8.618560,9.064834,-7.142268,-1.704018,-0.908705,0.624860,8.355031,0.689424,-4.414149,3.938178,-6.138871,3.453976,-8.373971,3.181902,-9.235449,-8.006167,-0.562155,8.735885], dtype = "float64")#candidate|4606|(420,)|const|float64
var_4607 = relay.var("var_4607", dtype = "float32", shape = (39, 1))#candidate|4607|(39, 1)|var|float32
call_4604 = relay.TupleGetItem(func_2642_call(relay.reshape(const_4605.astype('int32'), [28,]), relay.reshape(const_4606.astype('float64'), [420,]), relay.reshape(var_4607.astype('float32'), [39, 1]), ), 2)
call_4608 = relay.TupleGetItem(func_2646_call(relay.reshape(const_4605.astype('int32'), [28,]), relay.reshape(const_4606.astype('float64'), [420,]), relay.reshape(var_4607.astype('float32'), [39, 1]), ), 2)
bop_4611 = relay.greater(var_4607.astype('bool'), const_4606.astype('bool')) # shape=(39, 420)
uop_4623 = relay.acos(call_4604.astype('float32')) # shape=(13, 7, 15)
uop_4625 = relay.acos(call_4608.astype('float32')) # shape=(13, 7, 15)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_4635 = relay.TupleGetItem(func_3028_call(), 1)
call_4636 = relay.TupleGetItem(func_3029_call(), 1)
uop_4638 = relay.log2(uop_4623.astype('float64')) # shape=(13, 7, 15)
uop_4640 = relay.log2(uop_4625.astype('float64')) # shape=(13, 7, 15)
func_3793_call = mod.get_global_var('func_3793')
func_3797_call = mutated_mod.get_global_var('func_3797')
const_4649 = relay.const([[6.435164,9.017906,-7.679755,0.315467,4.801273,-0.543072,-0.069596,7.058131,-9.444911,7.942542,-1.789537,-6.289696,-0.362032,-4.973998,-4.326740,-0.283983,-6.552031,-6.150444,-9.860739,7.151135,-8.831901,7.374730,4.382813,9.008477,-0.214492,7.620919,-6.920822,-8.778379,0.714855,6.613187,-0.269684,5.399199,1.238292,7.935968,7.330928,-8.991630,-0.758953,0.920662,-6.925255,2.353690,7.256762,1.175699,-6.888624,-7.019157,-9.027035,-1.483297,6.026413,-7.284345,1.646862,1.389884,-7.369024,-5.526007,8.183723,-1.354053,-8.640214,-8.736445,-9.707066,4.056420,-5.690628,-3.847458,-5.320613,9.742716,6.273172,-6.301152,-1.476359,0.254006,3.888273,3.937216,4.085553,-3.758078,-3.151183,-0.684194,-1.265317,7.062487,2.227810,-9.264855,-7.453281,-0.154120,1.435800,2.556469,-5.784702,-7.133884,-9.214755,-3.648176,-1.185415,-3.539181,-9.652365,3.455126,-1.296464,9.126618,0.947850,3.501568,6.657587,7.168473,2.431969,-8.802510,1.636556,7.749335,3.115667,-5.489048,8.728486,-1.124349,8.690246,-4.226382,-0.721139,7.100790,1.053089,-9.063278,-5.711056,0.215142,-5.120794,3.479189,2.852132,1.721212,7.032624,-1.826429,-5.780389,-9.310831,-0.602662,-5.803300,-1.706824,-2.174675,-0.350316,-8.367561,-3.379712,-6.227286,-4.772154,5.038996,7.586919,-6.450963,-2.007522,4.228647,4.880507,-9.172521,-5.880182,-4.450582,-7.595954,9.822891,4.562422,-9.447531,6.061111,-8.461364,-9.253050,7.463020,1.244236,-3.723201,-0.903759,-3.093956,9.158641,-0.691125,4.716782,-9.319198,2.860117,5.523725,-0.867644,0.342836,-3.499937,0.248664,7.357358,-4.160513,-2.666605,-1.691254,-8.593767,-9.590804,9.790602,-6.227699,1.725109,-9.147393,-6.115677,-2.082084,3.405565,-2.803803,3.385424,7.306292,2.758720,0.953040,-6.364348,-7.273288,6.853625,9.637839,1.782724,8.915236,-9.684965,-0.645868,6.165887,1.840932,-8.192835,3.054664,9.151329,-0.483303,-6.279702,-1.487888,9.407099,-9.687199,1.217663,9.725485,6.714433,-6.778665,-4.537121,-9.189976,9.794500,4.978788,9.665903,8.180199,9.634720,0.619463,-8.141032,-3.285017,8.240143,-3.825685,-5.756286,3.860199,-2.429507,-0.153019,-2.267212,6.928711,-7.372168,9.103190,6.229177,4.870290,-9.705994,-2.117431,-6.560316,-8.228155,3.894982,6.276454,-4.932017,4.375130,-5.353706,-1.379020,-8.402872,-8.344027,-8.084156,4.544302,-3.986767,-8.266390,5.561274,9.611828,9.379935,1.198492,-6.259727,4.564127,-0.525888,-9.219020,-0.843716,7.351391,-6.651706,3.124730,-2.210472,-0.686888,1.172403,3.386324,5.668406,0.173594,1.347913,-4.544097,6.746262,-3.569453,-0.586524,-3.608339,6.739329,-3.483274,9.919187,-2.821383,-4.501370,-7.470965,0.970215,-3.343968,9.853108,-8.661455,8.057856,-4.806104,-8.396329,-1.375987,7.476869,6.479044,-3.368305,-9.509489,5.501924,2.751829,7.050671,-8.128216,-3.315225,-1.598895,-1.597622,-1.549228,4.294291,-4.470436,0.787071,-4.221752,0.062896,-8.736684,5.238236,5.819727,8.929504,-2.294723,-9.862247,-4.096120,-8.692825,-2.451554,7.489194,-7.254090,-8.219251,-7.238490,8.156520,-8.920332,-0.339737,-8.690906,-7.381887,-6.783217,5.108624,-6.347865,7.547049,-9.333964,7.270035,-7.263421,5.030577,8.309348,6.040513,9.300340,6.971314,9.027092,-3.462263,5.293534,6.513089,7.119590,3.476508,5.927973,-5.292867,-5.080478,-4.355486,-9.825292,2.851445,3.257515,6.749058,5.089962,9.961988,-4.461923,-8.172581,-9.513813,2.061747,-4.128814,3.207125,-2.587692,5.631773,-1.915443,0.943042,5.762700,-0.233865,-4.575187,-8.995177,-3.796530,-3.192748,1.152839,5.683205,8.280918,8.094881,9.490968,2.532515,-7.903088,-3.490310,-5.090899,0.556853,-7.561950,6.357090,4.257060,-3.110959,8.883628,-5.088425,0.684109,-7.404873,0.046937,5.218058,-7.086061,-6.116371,0.562158,8.416616,-7.375374,-4.280077,8.925120,6.183487,2.469485,-8.942583,1.659656,7.996907,-2.470576,9.595325,-4.417733,-8.327911,3.562317,9.095642,6.712015,-4.706537,-3.799680,-9.926370,-8.737422,-7.411187,8.434867,-9.116334,-7.798699,-4.990635,5.983379,-8.043196,-6.838883,7.673279,8.868774,-9.749308,0.577237,-9.951110,8.226342,8.798420,0.423401,1.231468,1.734298,6.576993,-7.900300,-0.603652,8.872428,5.478377,-6.706282,2.508781,5.735681,-7.206036,-9.613288,-3.807015,-3.079996,-4.011584,-6.928093,-3.894025,9.681218,0.594266,9.661933,-5.700844,-9.419454,-6.146663,-5.685926,-6.875322,-9.054335,-6.974180,2.294191,-9.499212,3.077854,5.194447,6.119854,3.247690,0.764070,-9.876321,-8.170859,8.293378,-8.576932,5.473182,3.549044,-0.008730,3.839925,6.321669,-5.951703,-1.635632,-8.604171,0.948786,1.937564,-2.994613,6.577988,-8.695387,6.105991,-6.248861,8.750528,-8.999320,8.060273,-5.568538,-8.592782,8.941449,-1.871729,-1.044516,-0.971248,-3.698760,-5.504696,-3.551073,6.993571,2.401657,3.412036,-7.485145,-3.831589,2.086545,9.192379,-1.492181,3.393414,-6.750058,6.849222,-9.795887,-9.721712,7.239766,-2.784606,-3.071983,-2.910976,-9.073270,9.018218,3.008512,-5.965138,6.888658,-3.687036,5.748644,-6.423788,4.004629,-6.548138,7.050051,-4.074417,7.495979,-3.598086,-8.089499,7.178762,-6.607797,7.678104,-8.179175,8.087300,-0.398565,3.824681,5.680930,3.701287,1.575808,3.523821,5.170464,-9.911988,-0.011175,-1.951854,0.417817,4.432624,2.356322,1.977456,-1.507580,2.610621,5.417062,-0.886082,-5.977496,9.363607,7.276763,-8.785733,4.451391,8.053361,-2.732591,-9.084732,-4.282992,1.924336,3.623225,2.676045,1.227019,-3.418629,-7.120202,-1.085814,-5.687253,-6.066831,-9.734951,-3.067721,8.910236,0.240753,-3.514846,-0.726819,9.783855,-2.347212,-6.716526,2.559738,-9.254431,-6.963720,-4.574686,-1.795311,7.609201,9.574523,0.394549,4.176853,8.704735,-2.807179,-8.942813,-8.506039,2.056875,-3.274237,3.834877,8.878997,6.529210,-8.144612,-4.728057,9.925539,8.201010,4.581327,-4.585471,-1.119217,8.703794,2.939607,9.398786,-0.049313,-4.390021,-3.535625,-5.631132,-9.234279,-3.509763,6.185319,6.988273,-4.906412,3.368917,0.195761,-8.446873,-6.104363,2.112591,4.401717,8.139131,3.278765,2.495095,7.488199,1.856364,9.414742,-5.071765,0.454878,9.369674,2.866249,1.057548,9.551140,-7.830873,-3.782730,9.190625,-5.977224,4.362998,5.537893,2.896262,-9.315743,-1.160678,-5.669958,-8.567554,-3.808137,7.058280,4.287666,-5.654948,-1.185009,-1.101698,-9.619181,2.379422,-2.215440,-1.555385,1.786642,5.609512,4.129968,8.086845,-6.859986,9.304845,-1.901701,-6.387304,8.306026,-4.866697,2.030017,-3.432797,-4.056433,-7.266212,-6.573212,-0.056686,5.492479,8.833797,3.311060,-2.516422,6.383259,-1.552765,2.510690,6.772570,-5.714771,-4.945968,-4.248042,2.432433,-1.995211,0.414429,9.894215,-4.572605,0.149048,3.119603,2.423091,2.084096,1.583352,-3.057288,-2.212821,3.061520,9.142879,0.489647,1.935910,-1.209030,-3.111619,-1.509036,-3.689472,-0.299258,6.411025,-4.464175,-4.277531,4.707657,-2.724696,-5.891307,1.640112,5.713594,1.200230,-7.964585,8.025564,9.887912,-6.371303,1.743916,-4.842834,9.455143,3.378952,-2.079358,8.879602,0.712950,1.823243,-4.144144,-7.200713,0.226227,-8.339795,-3.003203,1.100215,-9.865242,5.443617,-3.243130,9.987667,0.870575,0.692628,-0.277651,6.546319,-1.110468,3.830370,6.215946,-5.155379,-1.499446,-0.092008,3.819945,-4.824983,-1.247473,6.117936,2.202596,-4.769138,-9.458163,8.494910,-0.194697,-2.645295,7.597361,0.911595,2.136875,-8.361886,2.666845,-4.348149,-5.228352,-4.427782,1.335638,4.425945,-8.675880,9.965554,6.347254,-8.532235,-1.840367,6.225993,-7.205008,-3.286750,-5.339981,0.847267,-2.835416,-6.269376,-4.978136,5.651003,3.702984,6.084613,-8.427506,-3.161752,4.788673,6.814785,1.578895,0.415490,7.412747,-5.605549,-0.819201,9.655057,6.866280,0.557205,-6.311191,0.832385,0.011148,-4.672496,-4.061615,-3.230677,7.068904,1.019254,-7.696942,-9.770020,-0.812098,8.523989,7.767317,1.177095,2.387634,-3.000319,6.251753,2.519276,-1.809535,-5.142379,-8.046834,-6.363320,-8.058103,-2.769461,1.812446,7.441789,7.988086,-2.261066,1.589465,-6.326118,1.711366,3.486995,-9.587691,9.581439,-4.091885,9.453159,-5.180913,-4.130581,5.572250,5.703513,9.229043,6.512052,-8.278633,9.811270,0.441826,-1.020020,7.902600,-4.381651,-2.402610,-0.925237,3.263834,6.257772,-5.964183,3.635304,-5.350317,-7.656701,0.442946,4.073403,7.629088,1.372944,-8.448382,8.963110,4.998996,5.681715,-8.414066,-5.989025,-1.469726,2.122404,0.055699,-6.626941,-6.837641,-9.297198,-4.247278,9.618767,-0.195754,9.741518,-9.918944,-6.805091,-7.984840,0.483524,-5.565444,-1.985342,7.461931,0.112610,-6.422418,-2.968945,-7.541074,-4.459418,-0.850878,-0.424259,2.222078,8.387660,2.923040,4.993453,-1.281681,-3.742674,0.834826,3.465142,-2.872567,0.923825,-0.455131,7.097796,-5.983981,-3.293299,0.260754,-9.932148,-5.161890,-0.756366,6.126072,1.258109,-5.143010,-2.682886,-3.185270,-8.029596,-4.481778,-0.132018,-2.665974,1.311630,6.439331,6.618185,4.646119,3.349482,-0.458431,9.516596,-0.443489,1.240220,-9.862203,-5.771343,7.699330,3.527407,-3.389239,-7.994228,-2.714643,-8.030527,0.807510,-2.151800,4.306153,-8.531740,-5.671274,3.166580,-3.464910,1.229694,6.793550,-2.082954,1.073483,-7.266826,8.003563,-7.228938,2.814742,9.114281,-2.691616,6.256743,-0.955732,4.093050,8.258492,1.162110,9.852626,-8.644916,-8.407325,0.237685,-0.750855,2.774915,5.049646,7.755904]], dtype = "float64")#candidate|4649|(1, 936)|const|float64
var_4650 = relay.var("var_4650", dtype = "float32", shape = (350,))#candidate|4650|(350,)|var|float32
call_4648 = relay.TupleGetItem(func_3793_call(relay.reshape(const_4649.astype('float64'), [6, 12, 13]), relay.reshape(var_4650.astype('float32'), [350,]), ), 1)
call_4651 = relay.TupleGetItem(func_3797_call(relay.reshape(const_4649.astype('float64'), [6, 12, 13]), relay.reshape(var_4650.astype('float32'), [350,]), ), 1)
output = relay.Tuple([call_4595,const_4605,bop_4611,call_4635,uop_4638,call_4648,const_4649,var_4650,])
output2 = relay.Tuple([call_4596,const_4605,bop_4611,call_4636,uop_4640,call_4651,const_4649,var_4650,])
func_4652 = relay.Function([var_4607,var_4650,], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
var_4653 = relay.var("var_4653", dtype = "float32", shape = (39, 1))#candidate|4653|(39, 1)|var|float32
var_4654 = relay.var("var_4654", dtype = "float32", shape = (350,))#candidate|4654|(350,)|var|float32
output = func_4652(var_4653,var_4654,)
func_4655 = relay.Function([var_4653,var_4654,], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mod.get_global_var('func_4284')
func_4286_call = mutated_mod.get_global_var('func_4286')
call_4705 = relay.TupleGetItem(func_4284_call(), 0)
call_4706 = relay.TupleGetItem(func_4286_call(), 0)
output = call_4705
output2 = call_4706
func_4745 = relay.Function([], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4746 = func_4745_call()
output = call_4746
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mod.get_global_var('func_3047')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4760 = func_3047_call()
call_4761 = func_3047_call()
func_4336_call = mod.get_global_var('func_4336')
func_4338_call = mutated_mod.get_global_var('func_4338')
var_4764 = relay.var("var_4764", dtype = "float64", shape = (420,))#candidate|4764|(420,)|var|float64
call_4763 = relay.TupleGetItem(func_4336_call(relay.reshape(var_4764.astype('float64'), [420,])), 4)
call_4765 = relay.TupleGetItem(func_4338_call(relay.reshape(var_4764.astype('float64'), [420,])), 4)
func_2088_call = mod.get_global_var('func_2088')
func_2092_call = mutated_mod.get_global_var('func_2092')
const_4779 = relay.const([[-1.156250,7.225295,-9.301231,6.455496,-3.872883,-8.830758,7.544886,1.590571,-7.110570,2.194065,7.607187,-2.227337,4.443412,-5.032581,1.922339],[0.173362,8.960325,7.836530,4.451288,2.314577,8.503479,-4.114570,-8.265063,-2.274196,-5.964728,1.887487,-9.349069,4.183921,8.558029,-6.515624],[-6.671994,-7.260144,-7.369791,7.922774,-5.747753,6.800988,-8.104268,-6.526460,9.886851,8.049154,7.321772,-2.525415,-9.441168,7.081709,6.849962],[-0.967396,3.568828,3.095418,-0.779756,5.643122,6.663995,-7.927240,7.710621,-7.001443,4.907178,-2.470181,9.593918,7.463798,-2.037279,4.564608],[-7.300159,1.617250,0.787286,4.719708,3.079585,-9.566400,2.461451,-8.674705,-0.311303,-0.979695,-1.106531,-2.178462,9.654231,2.827162,-8.161443],[8.239806,4.470906,-4.986136,-1.346574,-3.173904,-5.334452,-7.850556,-4.084156,-6.813681,-6.218991,-9.851704,-8.427901,-7.144473,-9.744884,4.623412],[-2.074666,1.504461,-2.077846,-8.168329,5.233443,-0.129011,-8.190823,-6.800116,-4.626866,1.362685,4.058258,3.647049,-9.193823,4.061927,-6.186420],[4.119058,8.498143,-9.938466,-7.913958,-3.442313,1.455964,0.064309,-5.200119,-3.147962,8.305949,3.924983,-1.056515,-9.143500,-1.618656,3.211998],[-9.828500,5.685815,-4.498247,0.610634,0.353636,-3.896834,4.222256,-4.277759,4.820900,-6.819021,-4.237018,5.095545,-7.401756,2.583591,5.491191],[0.893841,7.307520,-3.809063,-3.883734,-9.621653,8.467762,6.606315,-0.781911,-2.692151,-8.046650,-8.861606,-4.824029,0.857833,1.316444,2.334080],[-8.484486,0.684569,-1.353667,5.292186,3.242073,-1.573205,-1.005619,5.977959,5.799125,0.303316,-4.769754,-1.638651,8.625853,-7.506236,-8.870573],[-2.210688,-1.551018,-0.588851,2.763039,-3.060483,3.991790,8.542562,-7.812564,-5.652081,6.333509,6.535892,-6.144563,-8.201770,-9.569451,-2.049560],[7.809294,1.419949,-7.017779,-4.798920,8.008240,9.931987,9.244054,-1.974006,4.490269,4.906206,-0.716118,8.819512,-9.234615,8.414551,-2.506654],[0.611458,-1.806846,4.224425,-9.789690,-0.689225,-3.655841,-1.576324,-8.994923,7.322172,7.362827,-5.550520,-7.099650,-8.287231,-0.304472,2.403917],[-2.088602,-8.897925,5.720478,2.355627,5.029578,9.638418,7.464144,5.203383,-7.513407,-5.755796,3.211109,-0.597857,-3.842248,-5.131951,-1.492135],[8.484720,-2.502325,2.021014,8.010686,5.456444,-4.654496,2.885758,-5.179144,5.848687,8.615601,-1.707433,7.352788,-5.065776,-9.399747,-3.384425],[-6.761104,3.573183,0.458085,-5.247717,0.822087,0.464400,-4.164905,-3.503008,3.778886,-5.149723,7.078341,8.633330,7.821732,-7.516100,-4.559767],[-1.222196,-5.161088,0.348291,-7.058225,-3.498823,3.728516,6.544498,-1.949577,-2.761142,5.738629,6.988612,8.196355,5.743784,-3.920523,-1.237174],[-0.392156,-3.033597,-8.009215,-0.545399,8.914213,3.689456,-7.107982,0.779074,-7.069762,-0.663907,-9.274283,-3.876646,-4.906577,-9.632928,1.841306],[2.921110,1.766124,-5.462878,6.358690,-9.975030,9.432751,8.703972,-8.396697,1.829167,-6.828968,-4.190996,9.159848,3.820487,2.419930,-1.064967],[-0.448161,-5.799835,1.508925,-3.654790,-4.850845,-4.803869,-3.913201,8.732179,-4.343991,0.277101,6.222509,7.010200,-4.864737,-9.699254,-4.100988],[-9.733720,1.221870,-0.756506,4.965793,4.401366,6.934830,9.574108,-1.001045,-7.484074,9.105925,3.323555,6.259758,6.627139,4.923700,7.619963],[5.560577,5.085260,5.248637,1.236796,-9.249932,-3.444947,-8.220913,7.333522,-4.461289,2.937267,2.499411,-3.199076,4.597629,-5.110643,-9.349138],[-0.547929,3.704638,-3.266693,1.511632,0.413602,-8.610828,6.262775,4.729479,7.709272,-3.800324,-1.023481,-7.944548,2.949874,-4.348327,-6.622741],[9.563124,-4.937805,-3.174055,5.061097,4.695362,4.844003,-3.291595,-6.916187,4.417452,-5.250172,1.644379,8.457236,0.282178,4.009907,-3.892566],[-9.222744,6.264310,-3.491398,9.266960,9.742049,-7.532053,1.053618,-9.087286,1.462113,7.436821,7.243884,-7.498025,-7.406408,8.715497,5.312820],[-4.017978,-9.026122,4.849279,0.319417,-3.659937,2.912432,-0.859085,-1.127019,-3.506608,-1.146414,9.723240,-3.275655,5.528186,6.168115,7.230877],[-2.510470,3.416470,9.955299,-3.471266,4.619165,9.519239,0.227942,0.417504,-6.997694,7.393675,-9.895999,7.348396,-1.288476,4.753840,8.775084],[7.837284,-9.763739,-2.766840,4.925155,6.235101,-8.135410,3.827316,-3.129743,3.769919,-3.236191,6.242320,8.214661,-3.603423,6.746136,0.213963],[-8.103658,3.856043,9.244600,-4.514786,-8.561035,-9.814039,-8.717083,-6.695581,-9.436175,-0.874584,4.869511,0.014216,-5.757306,-6.331055,-2.964649],[-1.999379,-9.839603,3.247594,-9.226918,-0.447587,8.557004,2.063448,-1.889242,-4.411536,2.659068,-7.163177,4.724445,7.027770,8.518026,2.936705],[0.200923,-3.472518,6.154357,-6.479585,8.981430,-7.783819,5.541154,-9.792479,-7.660718,-3.432672,8.955510,-0.099249,2.430879,-8.067160,0.962701],[-6.722345,-1.092585,5.734972,-4.511489,8.094829,-3.897466,5.730758,3.864038,-7.779191,-8.114837,0.082849,9.091867,-8.620112,5.552902,5.500646],[7.286364,4.746468,-5.627756,7.219269,-6.523721,-9.157822,9.122180,-3.988640,1.441086,-2.933946,-3.808199,-7.045092,4.500795,-2.916566,7.231946],[8.717559,3.455603,-8.526282,3.938845,-9.180466,-0.101477,1.028682,-1.037159,-0.467922,-6.434347,-0.886762,-1.071622,-4.137121,5.751591,-2.171474],[-7.862190,3.525392,7.611375,8.064724,-9.655517,-2.288932,-6.737899,-7.399813,-0.434921,-8.323213,0.510250,2.185666,3.995546,2.476636,-6.061995],[-1.165666,1.635939,-1.316721,6.078465,-5.836978,8.832496,7.143222,-9.539375,1.768276,-9.514595,5.851782,-4.863325,-5.998240,-6.298438,-8.183193],[6.787303,3.180489,9.540369,5.150666,5.000620,-6.280439,6.733588,-9.806954,9.641799,-0.671013,9.334016,8.821102,-1.291354,-1.902658,0.705469],[9.972494,1.825820,7.833323,-3.242814,3.009153,-0.877546,-7.765072,6.443142,5.284045,-5.542681,0.611110,4.242656,8.082114,-1.755980,-3.577791],[1.379504,-8.055938,-8.043514,8.789257,8.253909,-5.777543,-0.934999,9.970253,6.109586,-0.296380,-4.428941,-3.716581,-1.696190,8.585687,4.611779],[-1.315992,0.690969,3.318772,-9.908769,-0.637541,7.233545,-2.171474,2.874559,-2.910732,-1.207225,1.305719,-1.871102,3.531440,3.443611,2.171459],[-3.519768,7.046986,-2.764723,-0.591751,9.885799,-9.307841,1.919114,-5.727024,-4.828890,-0.426459,5.099982,6.698450,2.379354,-0.568640,8.966825],[7.610188,3.907476,3.654085,0.089974,5.598056,-1.175787,0.848018,-5.916286,1.766719,-2.764412,3.193637,8.617830,6.895875,4.806397,7.239295],[0.270123,7.867521,-0.947750,9.371559,-9.197262,-3.933071,-3.548986,-0.966613,-1.785746,-5.383213,3.564126,-9.135313,-9.858740,7.730132,-3.269175],[4.695512,8.864924,-4.348002,5.353253,4.867603,-0.322933,0.625008,-0.099708,0.076309,4.748836,7.297423,-2.677598,4.339172,-4.720546,-6.318500],[7.331711,-7.196937,-2.407058,-2.482046,-0.686927,4.448982,-3.467004,-4.239464,2.939911,4.693912,3.325943,9.683856,-8.129382,-6.381329,-7.439937],[1.620430,-0.608800,-6.052444,4.246266,8.025411,0.958246,-6.774203,1.495661,-3.451061,4.659324,5.476925,-7.084126,-4.930174,2.152062,8.468413],[9.762882,7.072149,9.187962,5.133943,6.880434,-6.410648,1.081737,-4.718091,2.134166,0.246757,-4.363097,8.394323,-6.460904,2.644716,6.721128],[5.998008,-8.701646,-4.887927,-5.506184,-5.266451,-6.672243,-8.180881,4.470440,-7.213185,1.085518,9.921163,-8.330855,9.713551,-7.413628,-8.641608],[5.338667,1.177101,5.632276,1.892945,3.703956,1.272909,3.505441,0.704546,-6.014194,5.760259,-8.821966,9.023473,-9.113282,3.321820,2.949659],[-9.696159,3.282588,-5.885687,8.497306,-0.145444,4.825887,9.678611,-4.609926,-5.672432,-2.540633,-8.365350,-4.987413,-0.728883,-6.090466,-4.614905],[5.997401,3.680403,-7.717650,7.570675,0.715460,-9.592974,5.884208,1.173894,-4.358509,-0.640375,-8.502012,1.984838,-2.103235,8.641302,1.770570],[9.274514,-8.692984,8.559295,-1.580912,-4.630263,1.773938,7.285534,-1.174234,-8.454551,-8.865870,-2.246111,1.186996,0.362189,7.656644,5.916925],[-8.589655,3.281296,0.738526,3.228221,-7.633021,8.409269,-4.230870,-8.873418,-9.302295,-8.537490,-1.182000,0.028590,-4.015374,1.271868,5.970526],[2.853147,3.346550,-9.980200,5.114157,2.016719,6.825491,1.992026,7.899724,0.520497,-6.948818,-3.030528,-5.472687,9.071056,-9.222018,-1.010480],[6.945770,-3.120964,-9.799903,4.359969,-6.245400,9.108806,6.128217,-6.440056,2.082057,-3.466265,9.009057,-4.226781,-7.282646,-6.978358,-6.400728],[-9.367427,-6.355469,2.297133,7.208747,6.438021,6.841371,-0.079094,6.167783,6.695078,-8.124751,2.377386,-7.325050,9.562379,0.729395,0.955730],[-2.901330,4.761691,-4.449773,1.070026,3.143092,-9.446699,-6.783697,7.920340,0.397955,-6.056154,0.639421,5.127914,6.524140,-1.713730,-6.569973],[-0.585102,-6.005585,-8.977789,-3.757025,-7.633339,-5.557626,-7.527574,8.683659,-6.047817,-1.660070,-8.325702,-9.892418,0.078710,-1.094324,-4.984042],[-8.692368,5.764804,-9.816605,1.417577,-7.312445,-9.741339,-4.161296,3.985737,9.636640,-6.053815,-7.553262,8.830133,-0.725747,-2.014690,-2.119402],[-8.057217,6.626314,0.861205,8.013446,2.768648,4.892012,-4.672550,-1.695205,6.514972,5.991104,-6.788460,5.505241,1.524060,-8.344842,-1.437730],[-1.606528,3.295047,3.910310,-0.003870,-1.135817,-4.138878,3.227023,0.480568,-5.664250,0.369711,2.574466,8.675124,5.507886,-2.155602,-1.768450],[0.079738,3.880474,-3.155828,2.098224,8.274436,-7.585226,9.188842,-9.821290,-2.392301,-4.200083,0.541801,9.769388,-2.357935,6.926477,-7.200467],[5.232433,-5.416322,1.156651,9.326253,4.736288,-2.664669,-7.249745,-2.177189,-4.346001,5.576917,-4.357157,-6.583626,6.053924,8.285822,-7.353787],[-1.122015,6.325564,-5.720922,-5.128783,5.329746,9.821293,5.032958,-3.243003,-1.702727,-2.252159,3.555261,-0.064492,-6.086261,-3.048584,-1.279925],[-5.972279,-8.919562,-3.515537,-1.175165,0.276314,-3.628349,0.977833,-9.935388,6.340079,-0.737934,8.247076,3.620043,-8.631128,5.913563,7.720455],[6.976409,4.060254,5.644336,-7.498751,-7.697249,9.077621,-5.069866,-0.322251,-1.060561,-9.605797,-1.865549,-4.100489,6.194670,0.629693,5.437526],[5.266638,-6.073192,8.418685,-9.740669,2.177111,3.295624,2.054539,7.991421,-3.803802,-8.110917,1.453096,-8.423995,-4.248547,-2.050013,5.301771],[-8.589700,-9.992521,7.177555,-4.330467,9.157043,-1.029146,-1.939459,5.987438,8.958905,-6.996693,-8.880785,-7.639077,7.389661,-0.252492,1.099921],[-9.830988,-8.217776,-0.634310,-9.984683,7.322225,4.936304,-0.769414,-7.673718,0.158991,2.696975,8.760813,0.346201,6.559713,-3.574596,-1.135867]], dtype = "float32")#candidate|4779|(70, 15)|const|float32
const_4780 = relay.const([7,-6,6,-8,8,6,-6,-4,9,2,4,-4,-3,-8,-4,-6,6,7,-4,3,-6,-7,-5,9,-10,8,9,1], dtype = "int32")#candidate|4780|(28,)|const|int32
call_4778 = relay.TupleGetItem(func_2088_call(relay.reshape(const_4779.astype('float32'), [350, 3]), relay.reshape(const_4780.astype('int32'), [28,]), ), 2)
call_4781 = relay.TupleGetItem(func_2092_call(relay.reshape(const_4779.astype('float32'), [350, 3]), relay.reshape(const_4780.astype('int32'), [28,]), ), 2)
uop_4783 = relay.sigmoid(call_4763.astype('float32')) # shape=(13, 7, 15)
uop_4785 = relay.sigmoid(call_4765.astype('float32')) # shape=(13, 7, 15)
bop_4791 = relay.mod(call_4778.astype('float64'), relay.reshape(const_4779.astype('float64'), relay.shape_of(call_4778))) # shape=(350, 3)
bop_4794 = relay.mod(call_4781.astype('float64'), relay.reshape(const_4779.astype('float64'), relay.shape_of(call_4781))) # shape=(350, 3)
func_2862_call = mod.get_global_var('func_2862')
func_2867_call = mutated_mod.get_global_var('func_2867')
const_4796 = relay.const([-8.500289,5.069486,4.300651,5.127081,6.867352,9.994122,5.762732,-2.395057,-1.143254,7.422404,0.331955,8.570207,1.967042,5.835080,5.511141,-6.437490,-3.232067,-3.195247,-8.358307,5.881906,-3.398051,-5.010467,5.166207,-3.149672,-4.068013,8.148464,-0.799308,9.037559,8.360836,-8.643431,-5.906919,-9.475499,7.339857,-8.570593,-9.753679,6.643560,-6.678130,3.242601,-3.363032,8.781468,3.470132,2.241922,-7.541900,-3.774917,7.232919,-7.593556,6.034615,-3.437922,5.077266,-5.883543,-5.273966,-9.558531,-8.279880,-9.586027,0.889982,4.352183,-5.364762,-6.264256,-1.263717,-6.871145,-2.373057,4.774600,-6.487272,-2.262292,-7.913721,5.012381,-7.846195,-4.510894,4.998778,-9.724034,-9.922182,-1.595187,-1.104872,2.156917,4.238059,-1.722888,-9.096661,0.241491,0.800320,-9.715537,-5.816928,-2.054396,3.975802,9.751575,-9.774217,-8.408619,-7.019123,3.387883,2.983885,4.938409,9.056586,-6.322791,0.559767,-6.933616,2.556698,-7.411481,-2.020974,4.540295,4.243611,9.988003,-3.576858,7.151068,-3.026926,6.568964,9.955716,-3.538393,-7.783907,0.735454,-6.521595,-5.070456,-6.809185,8.831025,3.582293,3.628123,-0.391685,-9.878882,-5.119867,4.347240,6.937429,-7.498870,1.881922,3.525614,-1.586386,5.061262,-3.252645,-6.658166,-4.612818,1.602012,-1.722892,4.817773,4.230130,1.308402,2.802440,-7.404060,1.146959,2.920090,8.257857,-9.511633,0.669020,-0.261968,3.121523,7.614077,1.724384,-5.999212,2.005274,-9.175549,5.005403,-1.146076,-6.513560,2.184593,5.642335,-9.826565,0.790829,-5.791404,-9.371693,-9.676926,-4.467178,2.123670,9.248010,2.095282,8.168238,0.674266,-5.495866,0.545171,7.455963,-3.513058,-7.645598,4.284109,-5.361885,-3.345856,1.306561,-8.880914,-7.296409,9.932020,5.359329,-8.096918,-2.625515,-1.811704,9.043736,4.914871,-6.974897,-7.438971,-9.342491,8.700211,5.129749,4.536602,-0.182474,-8.573879,8.362826,-5.741588,3.560814,-7.195968,9.142012,-1.110467,-5.455893,0.773403,3.182314,0.373766,9.607317,-3.246639,4.268555,5.183329,-5.931573,-0.864027,8.748861,-9.347293,-1.599642,-5.078423,3.587612,-8.258263,-1.838356,8.420458,0.528054,8.583290,3.956707,-9.253605,5.915823,-8.483044,9.191188,-9.100991,-4.153276,2.664989,7.564932,-4.941244,-8.840049,-5.611926,-6.177668,9.780658,2.006366,-5.494191,-3.382497,0.055159,5.110181,2.791075,-7.047934,8.011750,9.195375,4.380655,3.356890,6.065610,6.991842,-2.104099,3.509273,7.004353,1.463693,8.235114,-3.829215,0.561624,4.967202,7.283525,-7.007743,-2.935113,8.918237,-2.529285,1.826422,5.657093,-2.270916,-7.484808,9.163128,-4.956848,7.837965,-4.338504,-9.709637,1.938171,1.007273,2.274173,-6.750810,4.880990,-9.265035,-1.493248,4.664639,-6.525927,0.984761,-2.146800,-3.663818,6.995889,-8.984428,-1.066581,-8.668881,-0.462341,-5.794943,6.388307,3.647191,-4.448316,8.830894,5.330714,-7.433813,-0.957589,-0.548866,-0.349188,4.424881,3.144991,-7.951181,-5.993813,7.717999,-3.153961,-9.978249,-1.347873,-0.627026,9.020128,1.129292,-4.641034,-9.204001,-6.416023,7.501861,-3.714348,-8.768005,5.469035,4.676386,8.061126,-3.283586,-8.073456,-5.596749,0.578193,5.624055,-3.361730,1.874661,5.709812,5.513981,1.926474,-7.444799,8.807834,4.182943,2.591977,-9.455801,4.153450,-3.841061,0.289661,7.920379,7.898116,-6.276349,1.202220,8.519392,4.648736,-4.597622,6.855842,-0.573124,-1.877037,1.547204,-4.222130,-1.157081,1.363942,0.141093,6.724266,9.996619,-2.101944,-4.346653,9.228769,-2.124235,-5.155530], dtype = "float32")#candidate|4796|(350,)|const|float32
const_4797 = relay.const([-4.392771,0.200654,-7.204086,3.782709,-4.448683,2.035716,-3.142152,-2.400058,-4.898012,2.995824,-7.119329,-7.224530,9.452013,-2.947834,-5.587249,5.386587,3.796513,3.533629,-1.236171,-4.680191,0.835710,1.051510,2.057429,7.664565,-4.367024,-6.970671,1.235757,9.394968,-7.194042,-7.182484,9.257080,5.556871,-7.574540,-1.252570,-2.044722,5.589555,4.837114,3.474851,-3.175943,-5.100958,8.458096,-5.869515,1.599346,2.407936,6.546501,-4.795201,2.791165,4.313885,-0.423405,8.795579,-1.807633,-2.030798,6.367131,-4.440298,-8.684858,-8.569792,-8.229569,9.179686,-1.907466,6.155556,-8.819315,-2.218422,0.805854,8.077736,-1.229162,-8.935139,-3.488089,-2.357612,-5.357304,8.813564,3.031678,-4.767760,-6.204066,6.635652,1.001103,-3.670902,-9.287339,1.198998,-8.801986,-9.369775,8.927642,-0.491220,3.715174,0.256884,6.812496,1.534844,-3.349282,-5.046644,4.283730,9.369515,-6.622292,-5.825325,4.622478,2.181171,-6.510823,-7.625595,-4.844124,9.769037,4.879854,-9.342585,-0.455090,8.168393,6.348373,0.874011,1.732549,8.971655,6.750707,-4.325452,-7.097978,-1.743473,7.208234,-7.981979,2.345186,-9.922974,4.186137,-7.451228,-9.313313,-8.300620,6.808085,-2.837554,0.788114,4.478085,6.606657,7.534103,2.632989,-3.137746,-8.461575,-5.160492,2.061811,-2.259928,2.322100,-1.285458,-0.722967,-1.217709,-5.348182,-9.038167,-6.340936,-0.477353,2.898668,5.484421,-8.286316,-8.581495,6.575034,-6.205285,7.096180,0.909757,4.909681,-9.944371,-6.324066,-5.785816,7.516794,-5.689046,-7.689105,2.858290,-8.894412,-5.186500,-8.549689,4.472297,0.208197,-6.751559,-7.530519,-6.733716,5.859000,0.698303,0.333885,0.317644,-1.217910,-8.756062,-5.547856,2.073350,0.402984,2.766573,-3.118030,5.345835,6.610151,-6.969466,0.561717,4.280446,4.125880,-3.506275,-6.245235,4.888063,-8.133879,0.968446,7.003940,0.065921,-7.026762,-4.793464,-3.980683,7.367512,-0.980048,0.647318,-0.867966,-8.219551,-6.154729,-5.990171,-3.062946,4.209654,9.023100,-9.237249,9.477116,1.450460,-9.277299,-2.447746,3.326834,-6.953579,8.186961,4.916703,2.159289,3.469203,0.266880,-7.642857,7.414279,-9.223813,1.240228,2.393990], dtype = "float32")#candidate|4797|(216,)|const|float32
var_4798 = relay.var("var_4798", dtype = "int32", shape = (252,))#candidate|4798|(252,)|var|int32
call_4795 = relay.TupleGetItem(func_2862_call(relay.reshape(const_4796.astype('float32'), [350,]), relay.reshape(const_4797.astype('float32'), [216,]), relay.reshape(var_4798.astype('int32'), [252,]), ), 2)
call_4799 = relay.TupleGetItem(func_2867_call(relay.reshape(const_4796.astype('float32'), [350,]), relay.reshape(const_4797.astype('float32'), [216,]), relay.reshape(var_4798.astype('int32'), [252,]), ), 2)
output = relay.Tuple([call_4760,var_4764,const_4780,uop_4783,bop_4791,call_4795,const_4796,const_4797,var_4798,])
output2 = relay.Tuple([call_4761,var_4764,const_4780,uop_4785,bop_4794,call_4799,const_4796,const_4797,var_4798,])
func_4813 = relay.Function([var_4764,var_4798,], output)
mod['func_4813'] = func_4813
mod = relay.transform.InferType()(mod)
var_4814 = relay.var("var_4814", dtype = "float64", shape = (420,))#candidate|4814|(420,)|var|float64
var_4815 = relay.var("var_4815", dtype = "int32", shape = (252,))#candidate|4815|(252,)|var|int32
output = func_4813(var_4814,var_4815,)
func_4816 = relay.Function([var_4814,var_4815,], output)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4818 = relay.const([[[-0.675553,4.707031,8.299146],[-0.465727,-7.549289,-2.849882],[-8.031209,-9.680220,-7.107092],[-3.391155,0.065114,-4.241590],[-2.793029,-4.640291,-1.022499],[0.237158,5.401593,7.388499],[8.228225,8.878889,-3.955070],[2.786287,-1.770118,8.761628],[8.971989,-9.902731,-0.238217],[7.297683,9.479695,5.177902],[4.621793,1.557058,6.227860],[6.556209,-0.142098,-8.358910],[9.198705,1.241564,-3.917594],[-4.342825,7.083585,-5.932109]],[[1.513863,-6.999736,9.486059],[-4.627639,-1.757136,-5.441366],[-6.575871,7.043236,-5.216842],[-5.371240,5.020922,2.286206],[-7.894037,2.473902,1.305569],[-3.403921,2.306823,2.143811],[-3.164807,-8.012624,4.005911],[-2.794643,-0.550926,-6.534309],[-5.741080,-2.906733,2.417072],[6.058381,6.983197,9.821893],[-1.923015,4.474689,-8.953986],[6.075078,5.341789,-2.012064],[-1.450050,-0.511598,-9.669095],[5.051316,4.569029,-4.526460]],[[-3.612747,2.736714,-4.227778],[-6.345409,-2.892346,0.781234],[-6.485882,7.400950,-3.915238],[0.153591,-5.079223,4.274063],[-1.992673,1.569834,1.395930],[-5.004441,3.285005,2.856464],[-4.277588,7.228786,-8.774467],[-8.091326,6.622190,-0.964242],[6.898651,-4.719746,9.355430],[-2.145814,-3.741883,-8.341118],[8.384914,9.559496,-6.539131],[-6.647698,-8.915131,1.537610],[-9.623858,-7.243826,7.452502],[0.032932,-0.893020,-8.898857]],[[-1.079097,8.103279,8.056244],[-9.708882,6.550039,7.617124],[-6.216994,-7.311840,3.469296],[0.815443,0.639180,6.016245],[-6.853862,1.042163,-0.549941],[3.058357,-2.422418,-6.248640],[-4.635002,-9.977336,-5.957659],[7.943473,-2.611201,-3.503530],[6.603271,8.842967,6.401501],[6.477116,-9.444473,-3.326753],[-1.421113,3.453405,-4.726019],[-4.804712,-6.280829,-3.406746],[8.748511,5.143441,-8.466339],[5.330733,-0.203480,-5.791512]]], dtype = "float64")#candidate|4818|(4, 14, 3)|const|float64
uop_4819 = relay.log(const_4818.astype('float64')) # shape=(4, 14, 3)
var_4836 = relay.var("var_4836", dtype = "float64", shape = (4, 14, 3))#candidate|4836|(4, 14, 3)|var|float64
bop_4837 = relay.not_equal(uop_4819.astype('bool'), relay.reshape(var_4836.astype('bool'), relay.shape_of(uop_4819))) # shape=(4, 14, 3)
bop_4842 = relay.less_equal(const_4818.astype('bool'), relay.reshape(bop_4837.astype('bool'), relay.shape_of(const_4818))) # shape=(4, 14, 3)
output = relay.Tuple([bop_4842,])
output2 = relay.Tuple([bop_4842,])
func_4859 = relay.Function([var_4836,], output)
mod['func_4859'] = func_4859
mod = relay.transform.InferType()(mod)
var_4860 = relay.var("var_4860", dtype = "float64", shape = (4, 14, 3))#candidate|4860|(4, 14, 3)|var|float64
output = func_4859(var_4860)
func_4861 = relay.Function([var_4860], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4863 = relay.var("var_4863", dtype = "float64", shape = (4, 16, 16))#candidate|4863|(4, 16, 16)|var|float64
uop_4864 = relay.log2(var_4863.astype('float64')) # shape=(4, 16, 16)
uop_4869 = relay.sigmoid(uop_4864.astype('float64')) # shape=(4, 16, 16)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_4871 = func_2136_call()
call_4872 = func_2136_call()
output = relay.Tuple([uop_4869,call_4871,])
output2 = relay.Tuple([uop_4869,call_4872,])
func_4880 = relay.Function([var_4863,], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
var_4881 = relay.var("var_4881", dtype = "float64", shape = (4, 16, 16))#candidate|4881|(4, 16, 16)|var|float64
output = func_4880(var_4881)
func_4882 = relay.Function([var_4881], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mod.get_global_var('func_2275')
func_2276_call = mutated_mod.get_global_var('func_2276')
call_4921 = func_2275_call()
call_4922 = func_2275_call()
func_1397_call = mod.get_global_var('func_1397')
func_1400_call = mutated_mod.get_global_var('func_1400')
const_4945 = relay.const([1.799835,-7.582169,7.375763,0.446676,-1.575951,5.406244,9.499387,-7.219770,3.116604,0.031392,-6.421336,-3.667287,-5.030630,-1.047682,-5.016841,-5.333538,6.363738,-3.091437,-6.990543,4.334297,1.854190,0.818379,-3.544079,8.318617,-0.256109,3.937552,2.078644,8.096666,-4.958461,-0.882346,-6.237861,9.399375,2.818379,-9.000386,0.222963,-7.104383,9.583920,0.765369,6.240099,9.433462,2.046177,-9.185655,-2.267626,-7.318781,-2.468226,6.648407,-6.734773,-8.119665], dtype = "float64")#candidate|4945|(48,)|const|float64
call_4944 = func_1397_call(relay.reshape(const_4945.astype('float64'), [12, 2, 2]))
call_4946 = func_1397_call(relay.reshape(const_4945.astype('float64'), [12, 2, 2]))
func_4859_call = mod.get_global_var('func_4859')
func_4861_call = mutated_mod.get_global_var('func_4861')
const_4961 = relay.const([4.691888,-2.041229,-6.410971,0.039065,9.564231,-2.196542,-0.570398,8.006135,7.865604,3.172846,9.888928,-2.102233,6.521841,-3.955911,-3.690540,0.274990,-0.600575,-3.563840,-7.602828,-4.385250,-9.749048,-3.472854,9.419646,-5.449712,5.460095,-2.416713,0.618501,6.518740,4.119935,-4.871637,-3.310166,-9.607012,8.594920,9.147956,-9.642283,6.683727,-3.934410,1.810284,6.180467,0.773063,4.015810,1.442722,-2.406087,0.868401,0.502884,9.647228,0.366404,-7.424502,-8.017678,1.239404,4.031921,2.942072,-8.887407,3.078278,-5.399246,-6.537715,-1.388382,8.701863,8.184749,9.141738,-3.862966,-4.127233,-0.826625,-0.560296,-2.794027,7.656491,-3.849689,6.589397,3.337041,-7.271219,0.376068,4.151207,-2.249583,-6.765728,1.718927,-3.516185,-6.804194,4.865152,9.213684,-8.083650,4.107746,2.485736,-1.797925,-3.272839,1.802597,-7.764508,-5.904281,2.073079,-4.439631,-0.371110,2.280156,7.218907,6.188757,-4.424313,-9.820176,-9.450715,-1.797062,3.588735,-9.964120,-4.625658,-9.773104,9.580172,-9.595222,9.561063,-9.542183,-8.426177,4.998521,-0.889959,-9.210427,1.075847,0.236869,7.350382,-1.623237,-0.863221,-9.213248,-0.503044,7.292105,6.865476,-9.517438,-5.397591,-9.937319,-9.093288,-4.753793,-6.107074,7.854159,8.418320,7.491960,-5.152541,3.983547,8.623133,5.218773,-9.967680,1.660255,-3.897867,6.236311,-8.367763,5.856721,2.873322,8.014364,2.852192,6.446903,7.000497,1.020091,-9.275964,3.503173,-2.828949,-5.268075,3.360803,4.992110,6.511671,9.083480,-2.448457,3.977754,-0.456503,-8.470092,8.723526,5.074764,-5.630476,0.387349,4.819888,-4.227110,9.407408,7.173958,-7.301929,2.765874,1.891917,-2.185240,9.518205], dtype = "float64")#candidate|4961|(168,)|const|float64
call_4960 = relay.TupleGetItem(func_4859_call(relay.reshape(const_4961.astype('float64'), [4, 14, 3])), 0)
call_4962 = relay.TupleGetItem(func_4861_call(relay.reshape(const_4961.astype('float64'), [4, 14, 3])), 0)
func_547_call = mod.get_global_var('func_547')
func_552_call = mutated_mod.get_global_var('func_552')
var_4974 = relay.var("var_4974", dtype = "float32", shape = (39,))#candidate|4974|(39,)|var|float32
var_4975 = relay.var("var_4975", dtype = "int32", shape = (28,))#candidate|4975|(28,)|var|int32
var_4976 = relay.var("var_4976", dtype = "int32", shape = (1, 252))#candidate|4976|(1, 252)|var|int32
call_4973 = relay.TupleGetItem(func_547_call(relay.reshape(var_4974.astype('float32'), [1, 3, 13]), relay.reshape(var_4975.astype('int32'), [28,]), relay.reshape(var_4976.astype('int32'), [252,]), ), 6)
call_4977 = relay.TupleGetItem(func_552_call(relay.reshape(var_4974.astype('float32'), [1, 3, 13]), relay.reshape(var_4975.astype('int32'), [28,]), relay.reshape(var_4976.astype('int32'), [252,]), ), 6)
output = relay.Tuple([call_4921,call_4944,const_4945,call_4960,const_4961,call_4973,var_4974,var_4975,var_4976,])
output2 = relay.Tuple([call_4922,call_4946,const_4945,call_4962,const_4961,call_4977,var_4974,var_4975,var_4976,])
func_4981 = relay.Function([var_4974,var_4975,var_4976,], output)
mod['func_4981'] = func_4981
mod = relay.transform.InferType()(mod)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4981_call = mutated_mod.get_global_var('func_4981')
var_4983 = relay.var("var_4983", dtype = "float32", shape = (39,))#candidate|4983|(39,)|var|float32
var_4984 = relay.var("var_4984", dtype = "int32", shape = (28,))#candidate|4984|(28,)|var|int32
var_4985 = relay.var("var_4985", dtype = "int32", shape = (1, 252))#candidate|4985|(1, 252)|var|int32
call_4982 = func_4981_call(var_4983,var_4984,var_4985,)
output = call_4982
func_4986 = relay.Function([var_4983,var_4984,var_4985,], output)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_4992 = relay.TupleGetItem(func_3028_call(), 0)
call_4993 = relay.TupleGetItem(func_3029_call(), 0)
func_2642_call = mod.get_global_var('func_2642')
func_2646_call = mutated_mod.get_global_var('func_2646')
var_5012 = relay.var("var_5012", dtype = "int32", shape = (28,))#candidate|5012|(28,)|var|int32
var_5013 = relay.var("var_5013", dtype = "float64", shape = (420,))#candidate|5013|(420,)|var|float64
const_5014 = relay.const([1.925690,0.516382,-4.213076,7.825717,-0.727686,1.230364,-3.565570,7.769440,6.612285,9.696836,-3.647771,-3.321622,-3.786163,-2.163751,-0.567460,9.159845,2.693987,2.435030,8.551515,1.422315,9.913740,0.680956,3.992095,9.509803,4.526061,-9.763167,5.783835,-1.957659,8.893347,8.110678,-7.278914,1.633565,-1.736610,1.225204,2.723618,2.347212,-8.222992,-0.296092,2.142374], dtype = "float32")#candidate|5014|(39,)|const|float32
call_5011 = relay.TupleGetItem(func_2642_call(relay.reshape(var_5012.astype('int32'), [28,]), relay.reshape(var_5013.astype('float64'), [420,]), relay.reshape(const_5014.astype('float32'), [39, 1]), ), 5)
call_5015 = relay.TupleGetItem(func_2646_call(relay.reshape(var_5012.astype('int32'), [28,]), relay.reshape(var_5013.astype('float64'), [420,]), relay.reshape(const_5014.astype('float32'), [39, 1]), ), 5)
output = relay.Tuple([call_4992,call_5011,var_5012,var_5013,const_5014,])
output2 = relay.Tuple([call_4993,call_5015,var_5012,var_5013,const_5014,])
func_5019 = relay.Function([var_5012,var_5013,], output)
mod['func_5019'] = func_5019
mod = relay.transform.InferType()(mod)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5019_call = mutated_mod.get_global_var('func_5019')
var_5021 = relay.var("var_5021", dtype = "int32", shape = (28,))#candidate|5021|(28,)|var|int32
var_5022 = relay.var("var_5022", dtype = "float64", shape = (420,))#candidate|5022|(420,)|var|float64
call_5020 = func_5019_call(var_5021,var_5022,)
output = call_5020
func_5023 = relay.Function([var_5021,var_5022,], output)
mutated_mod['func_5023'] = func_5023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5103 = relay.var("var_5103", dtype = "float64", shape = (9, 14, 7))#candidate|5103|(9, 14, 7)|var|float64
var_5104 = relay.var("var_5104", dtype = "float64", shape = (9, 14, 7))#candidate|5104|(9, 14, 7)|var|float64
bop_5105 = relay.not_equal(var_5103.astype('bool'), relay.reshape(var_5104.astype('bool'), relay.shape_of(var_5103))) # shape=(9, 14, 7)
uop_5114 = relay.erf(bop_5105.astype('float32')) # shape=(9, 14, 7)
bop_5116 = relay.divide(var_5104.astype('float64'), relay.reshape(bop_5105.astype('float64'), relay.shape_of(var_5104))) # shape=(9, 14, 7)
func_4241_call = mod.get_global_var('func_4241')
func_4243_call = mutated_mod.get_global_var('func_4243')
call_5130 = relay.TupleGetItem(func_4241_call(), 4)
call_5131 = relay.TupleGetItem(func_4243_call(), 4)
output = relay.Tuple([uop_5114,bop_5116,call_5130,])
output2 = relay.Tuple([uop_5114,bop_5116,call_5131,])
func_5135 = relay.Function([var_5103,var_5104,], output)
mod['func_5135'] = func_5135
mod = relay.transform.InferType()(mod)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5135_call = mutated_mod.get_global_var('func_5135')
var_5137 = relay.var("var_5137", dtype = "float64", shape = (9, 14, 7))#candidate|5137|(9, 14, 7)|var|float64
var_5138 = relay.var("var_5138", dtype = "float64", shape = (9, 14, 7))#candidate|5138|(9, 14, 7)|var|float64
call_5136 = func_5135_call(var_5137,var_5138,)
output = call_5136
func_5139 = relay.Function([var_5137,var_5138,], output)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_5166 = func_2680_call()
call_5167 = func_2680_call()
uop_5173 = relay.erf(call_5166.astype('float64')) # shape=(16, 8, 14)
uop_5175 = relay.erf(call_5167.astype('float64')) # shape=(16, 8, 14)
output = uop_5173
output2 = uop_5175
func_5183 = relay.Function([], output)
mod['func_5183'] = func_5183
mod = relay.transform.InferType()(mod)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mutated_mod.get_global_var('func_5183')
call_5184 = func_5183_call()
output = call_5184
func_5185 = relay.Function([], output)
mutated_mod['func_5185'] = func_5185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mod.get_global_var('func_4284')
func_4286_call = mutated_mod.get_global_var('func_4286')
call_5200 = relay.TupleGetItem(func_4284_call(), 1)
call_5201 = relay.TupleGetItem(func_4286_call(), 1)
output = call_5200
output2 = call_5201
func_5202 = relay.Function([], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
mutated_mod['func_5202'] = func_5202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5202_call = mutated_mod.get_global_var('func_5202')
call_5203 = func_5202_call()
output = call_5203
func_5204 = relay.Function([], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5208 = relay.var("var_5208", dtype = "float32", shape = (15, 3, 5))#candidate|5208|(15, 3, 5)|var|float32
uop_5209 = relay.atanh(var_5208.astype('float32')) # shape=(15, 3, 5)
uop_5212 = relay.asin(uop_5209.astype('float32')) # shape=(15, 3, 5)
bop_5214 = relay.multiply(uop_5212.astype('float32'), relay.reshape(uop_5209.astype('float32'), relay.shape_of(uop_5212))) # shape=(15, 3, 5)
output = relay.Tuple([bop_5214,])
output2 = relay.Tuple([bop_5214,])
func_5221 = relay.Function([var_5208,], output)
mod['func_5221'] = func_5221
mod = relay.transform.InferType()(mod)
var_5222 = relay.var("var_5222", dtype = "float32", shape = (15, 3, 5))#candidate|5222|(15, 3, 5)|var|float32
output = func_5221(var_5222)
func_5223 = relay.Function([var_5222], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5232 = relay.var("var_5232", dtype = "uint32", shape = (8, 12, 15))#candidate|5232|(8, 12, 15)|var|uint32
var_5233 = relay.var("var_5233", dtype = "uint32", shape = (8, 12, 15))#candidate|5233|(8, 12, 15)|var|uint32
bop_5234 = relay.bitwise_or(var_5232.astype('uint32'), relay.reshape(var_5233.astype('uint32'), relay.shape_of(var_5232))) # shape=(8, 12, 15)
output = relay.Tuple([bop_5234,])
output2 = relay.Tuple([bop_5234,])
func_5256 = relay.Function([var_5232,var_5233,], output)
mod['func_5256'] = func_5256
mod = relay.transform.InferType()(mod)
mutated_mod['func_5256'] = func_5256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5256_call = mutated_mod.get_global_var('func_5256')
var_5258 = relay.var("var_5258", dtype = "uint32", shape = (8, 12, 15))#candidate|5258|(8, 12, 15)|var|uint32
var_5259 = relay.var("var_5259", dtype = "uint32", shape = (8, 12, 15))#candidate|5259|(8, 12, 15)|var|uint32
call_5257 = func_5256_call(var_5258,var_5259,)
output = call_5257
func_5260 = relay.Function([var_5258,var_5259,], output)
mutated_mod['func_5260'] = func_5260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_5277 = relay.TupleGetItem(func_3028_call(), 1)
call_5278 = relay.TupleGetItem(func_3029_call(), 1)
output = relay.Tuple([call_5277,])
output2 = relay.Tuple([call_5278,])
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mutated_mod.get_global_var('func_5280')
call_5281 = func_5280_call()
output = call_5281
func_5282 = relay.Function([], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5298 = relay.const([[[-9.266366,-8.422050,4.007437,-0.842997,2.556598,-6.326658,0.316861,-7.843905,-6.911815,-7.754426,0.849788],[1.680418,8.184172,-0.623451,5.321926,-6.359251,5.396460,3.037044,1.208242,-0.646709,5.886128,2.270094],[-5.762715,-6.667304,-2.568046,-6.673798,-6.193259,-2.042198,-8.586315,-5.764058,-9.299478,-4.917477,-3.987600],[5.598352,8.650061,-3.875519,-7.466340,5.156424,9.622484,-1.633372,-5.864633,4.947707,-5.304999,4.865074],[-9.903159,-7.208786,-9.531555,-8.335638,9.781228,-8.222219,-2.946740,3.269237,-5.120721,7.151384,-8.676087],[8.812295,-5.820283,0.374113,1.044391,5.191287,7.356467,-3.668966,-6.500547,-7.032588,-9.262879,6.350555],[3.645915,-3.551007,3.551733,7.911354,5.158981,3.224859,6.614289,-4.204252,2.564695,-5.427611,-5.455812],[-9.614163,-4.088466,-3.552036,7.507825,7.170045,-1.128131,-8.183703,4.943753,3.884622,-0.726178,-5.492653],[-0.005926,-4.911317,-7.024618,-4.721602,-9.069676,-2.175481,1.203927,6.635189,-5.333514,5.331732,-0.798300],[-3.407723,2.897190,-8.764487,-0.474271,1.167008,-4.715031,-7.417040,-8.551032,4.444399,5.207364,7.133855],[-6.681496,2.977438,2.688422,8.720610,-6.401841,6.258779,2.275768,-7.375780,-8.652861,-0.694671,6.595913],[-4.050199,2.968394,-3.524102,3.496519,8.327744,4.406479,-2.099080,7.869079,-0.582001,0.911037,8.623218],[-1.912153,4.051270,2.501660,6.997799,-1.385700,0.809122,2.922083,8.964529,3.673625,-0.094529,9.936842],[-4.498627,-5.857850,4.579545,-1.384219,-6.401048,-3.022017,-3.199167,-1.727971,-2.117517,0.472616,-2.119342],[-8.079534,8.117075,1.924732,-7.964863,-1.268599,1.063892,6.219220,-8.062569,-9.637584,-7.085068,-0.032505]],[[-5.188806,-4.385557,-5.055293,-4.486353,-7.916349,-7.697223,8.309400,5.600282,-9.544924,-5.979292,-3.985413],[-8.761371,9.032574,-7.123937,4.809275,-4.928550,3.295186,3.854939,-0.235740,-9.288274,-9.995980,-5.545339],[-7.622635,0.864088,2.808275,1.430058,5.063608,2.686879,-1.940272,9.062848,-5.850835,3.705341,-1.781605],[0.632518,3.810332,-7.414388,-9.332803,4.536406,-4.695930,-2.815901,-4.213743,-2.399998,5.347235,-0.620555],[7.158185,-3.340825,-5.130391,7.874928,-0.988628,1.044211,-6.122486,1.899747,5.489622,-7.611643,9.065714],[1.649696,-0.041729,3.894775,4.587741,2.916473,1.238624,9.550653,9.131190,6.444679,1.634325,8.183948],[-6.916014,2.841935,4.479224,4.084683,-5.427277,-7.323097,-4.829040,-7.402949,-7.227690,-8.559516,3.100570],[6.787229,-5.720794,-2.328002,0.719427,-3.200055,-5.172558,7.132115,3.738184,-1.954015,-7.053996,-3.722200],[6.754630,-4.210808,-5.955991,9.425057,-5.935388,-7.327017,2.357109,5.292651,4.951583,-4.009491,3.969011],[6.535471,9.551153,-1.554683,5.355125,-8.520168,9.706944,-4.436526,-5.038195,-8.617738,-5.237508,9.158124],[0.901283,-1.114547,-0.797806,8.974555,8.268413,-8.447990,-2.959374,-8.697287,1.805225,-8.155335,6.109593],[-6.992573,5.804103,5.598453,-9.053940,6.268115,2.806108,-1.475634,1.126327,0.893935,-3.772986,9.859338],[-7.437997,-3.733545,-4.612448,-6.443291,6.507920,8.386946,9.283059,-9.846658,-1.766973,-6.910188,-5.376023],[8.937940,-0.853556,-8.755050,1.875909,5.632746,9.522068,8.696726,4.277698,6.751397,8.410589,0.329874],[1.996788,-0.473916,8.063351,7.416670,8.279953,7.655801,8.307490,-7.256811,7.703369,-4.119808,-9.748074]],[[2.793932,-1.247230,-1.350417,5.598049,-1.176891,-9.355070,-1.067983,6.627582,9.070326,3.204545,-2.999934],[-3.236400,7.936356,3.977709,-6.684319,5.990280,1.273120,-7.826730,6.177185,3.818376,4.789326,-5.246039],[8.264748,3.617687,-7.127322,-3.121117,-6.782730,-7.582907,-7.436970,9.362446,3.044956,-9.729612,-4.090985],[-0.334247,6.436763,-4.828783,1.440810,-2.050557,-3.640830,8.025099,-3.446002,-4.853711,-6.390638,-8.770899],[-5.618963,8.074255,6.369307,-6.666110,1.256116,3.058074,-8.280266,6.848818,7.769039,-4.254969,7.407611],[-0.407317,2.628596,-0.117692,9.818359,6.393712,9.180096,6.012046,-1.495577,-5.049038,9.666956,-4.843338],[8.176706,1.406845,-4.870590,9.791161,-0.980240,7.367762,-9.479899,9.578364,0.198420,0.939486,-5.013181],[6.279453,-2.832242,-6.962098,1.697537,6.039620,-5.998091,2.307516,-6.989637,-2.656738,2.662879,3.274543],[-2.320282,5.392281,0.165075,-8.025962,-9.944242,-0.828112,7.915576,-0.295698,-4.836080,-2.906441,-3.283942],[0.159435,-5.527384,5.222990,4.109405,9.599631,-9.428896,5.946357,4.356302,0.203009,5.429443,-0.474232],[-4.301523,-2.544063,-3.072424,0.696518,-4.891821,7.992574,-0.910186,-3.332828,1.127975,2.489342,4.072923],[4.904844,-5.566276,-1.649427,8.680170,2.112303,5.206781,-0.501869,-4.987683,-8.751448,-9.389579,0.419534],[4.966747,-2.698114,6.667692,-1.062631,6.720860,5.870958,-9.467294,1.113745,-3.663934,3.910061,-4.398927],[9.853855,8.248021,-8.100219,6.440839,-6.211575,3.330261,-6.617552,5.681423,3.618765,-0.282437,-1.850911],[-1.322983,-1.571171,-5.772420,-4.375968,0.881924,2.491182,-1.493112,-0.975257,3.739324,-8.200859,-3.908952]],[[4.236152,5.087103,-0.992287,8.357804,-2.210356,-1.929885,-6.637286,-9.777806,-9.856817,-1.298437,-4.073183],[5.919286,8.248310,9.278474,5.765292,-9.975082,7.032682,-1.248244,1.158739,8.127330,4.965293,7.181648],[-1.079521,9.341586,1.342015,8.821527,-8.468029,1.857506,5.499450,9.969440,-9.016809,-1.312738,8.076301],[0.799901,-6.785783,-2.003608,-1.218162,-3.587380,1.613263,8.571628,3.154923,-3.154388,6.156219,1.068831],[-5.905053,-3.367264,-9.796567,7.211102,5.273868,7.802896,1.754383,4.633076,2.794055,-6.259143,6.991002],[0.278068,-1.638472,-6.534489,5.891967,0.310943,-1.254464,-9.637204,-4.146364,-0.415679,-1.061137,6.745149],[9.647225,-5.400473,-3.686096,9.860007,-4.742685,4.645793,-4.640913,1.685323,5.751526,-8.647266,-0.154655],[4.710714,-3.199999,-7.129430,4.006678,-5.995985,-8.757711,4.419887,7.285837,3.443930,3.733870,3.592759],[-3.788593,-2.410003,6.407207,-0.964092,4.677295,-7.926567,3.241977,1.521683,-2.178744,-3.719487,-9.099703],[-5.207807,-1.155864,2.057118,-7.839951,-6.723008,8.432171,-4.219878,6.708920,-8.079144,-6.211182,-3.798965],[4.307495,-0.928965,3.172351,4.688333,-0.377381,6.041076,9.434764,2.159706,2.359164,-3.988361,-1.952904],[7.680580,6.336956,-4.254644,-3.739274,-3.344981,-9.806400,-5.628194,8.247283,9.221888,2.401458,-8.155963],[-3.850698,-2.360179,6.375270,-4.482749,5.415784,0.736248,-0.359496,4.025175,-1.817378,-0.823935,-5.391383],[-9.966077,-0.443300,-0.790456,3.115356,-7.101996,-7.277106,0.014211,-9.781149,4.477867,-2.167076,-2.571766],[-7.404143,1.417461,5.346962,-9.241405,-6.042021,8.834442,-1.245758,-6.836743,2.424629,5.955661,6.831033]],[[4.699329,9.546170,-4.023887,-5.491866,-0.648786,-5.338797,9.472056,9.411673,4.385231,6.405143,2.880477],[-3.358503,9.294838,-4.793307,0.306030,7.756737,4.203671,5.410218,-3.450082,5.970030,2.252199,9.473077],[9.268765,-4.239103,-8.635242,-6.890019,2.062716,-9.698933,-4.030783,-5.589331,-9.919485,-4.060914,-1.930334],[7.019476,2.151378,0.512985,-0.314640,-0.110014,9.512486,9.408732,-3.833561,5.925007,-6.696029,-7.449961],[1.177977,9.055094,-8.832456,0.080250,4.190716,-0.977610,9.313951,6.817783,-1.256682,-9.565443,-5.758007],[3.889811,1.259545,1.726058,-5.898745,-4.026242,-4.347248,-0.496060,1.426462,6.717624,-8.214649,-6.050816],[4.378189,-3.474824,0.681730,4.772754,-7.380084,-1.565878,-4.696461,3.221870,6.002816,-0.384815,9.346506],[-1.185259,-2.859962,-8.760257,3.805974,4.039620,-1.773838,-6.353847,-9.440622,-9.042397,0.226766,-5.607523],[-1.435915,-4.871096,6.552573,3.771640,3.522875,1.941107,2.955585,0.569871,-2.247961,2.114936,-2.515664],[-1.151038,3.012658,1.266642,4.831417,-0.462836,7.262445,9.643435,4.851958,-3.877803,3.531724,3.647133],[8.244772,0.362590,1.479831,-0.305467,8.797545,-6.285678,6.031322,5.654108,0.277584,-9.918819,-2.319140],[5.750308,-8.162195,2.233053,4.052921,-0.172382,2.038916,5.333961,-3.251175,-9.475893,-6.793222,9.152255],[-9.667919,1.789998,-8.368381,-3.147667,4.307548,5.064099,6.633948,1.464227,6.948729,0.091271,-4.428496],[6.058043,9.938776,-5.889706,-0.789563,9.549210,-8.868829,-8.151255,6.890526,5.846665,-9.165573,-7.799499],[8.610950,-7.799040,-8.570660,9.499027,-9.493951,9.010379,-8.623606,-2.285508,5.106887,7.642317,-8.005602]],[[9.829537,9.314906,-5.548908,0.870918,1.518185,5.220513,2.219241,-5.167852,-9.501146,1.149863,-8.401064],[0.726964,-9.065886,-7.441141,-9.938347,3.604910,-7.242693,-7.371707,-1.194733,-4.009363,3.798492,7.653600],[9.690999,2.188694,6.878748,6.478789,2.464091,-7.702081,-9.742111,3.579356,1.219580,-5.250505,8.577805],[-3.890064,-5.172981,-6.563585,-3.042203,-0.418713,5.310492,7.846408,-0.738013,-5.699809,9.437740,8.769097],[6.202490,-3.490974,4.692726,7.154553,-2.739929,-3.290733,-7.923966,-3.645592,-6.215321,-2.214230,-2.165915],[-5.878007,-5.759679,-9.545311,1.141775,9.745932,4.137627,9.652603,-5.299677,4.405893,0.683741,1.249932],[-4.074316,-3.545421,-3.276531,-0.790427,2.073329,4.695605,6.496091,9.901647,7.077216,-3.094073,7.802297],[6.473480,-1.917270,-6.842137,-3.718027,6.483026,9.003120,-8.495550,-4.301382,-1.137623,0.138879,0.730294],[-4.341702,-9.393608,-5.975011,-7.079223,-1.460627,2.868312,-6.812887,-4.231797,-2.493514,-3.452347,-4.182388],[7.408431,5.610744,-1.211248,-0.215485,-4.335116,-7.709320,-8.409421,3.272628,-7.168512,4.322066,-1.613101],[9.848437,-4.867074,-0.220689,9.472390,0.769390,7.647576,1.752543,-3.809281,2.505902,-0.821977,4.928433],[-6.013101,7.927264,-3.771968,0.316696,-9.121201,-2.802634,-2.209969,5.735326,5.417596,-4.840337,-7.583823],[-6.731943,5.510695,8.480340,0.223376,2.203023,1.809382,5.435669,1.404023,-5.401980,3.728405,-2.097113],[8.705416,-9.894620,0.803111,8.547216,-6.461874,-1.976947,7.318575,0.114492,-1.173229,9.389457,9.876633],[7.950497,6.030280,-3.751715,-2.910466,-1.339271,7.981061,-0.207108,5.754891,-9.456836,6.658774,-3.056502]],[[-4.408430,-5.309909,-7.917231,-7.864822,-4.369428,-2.879899,0.453541,-1.075732,2.626461,8.233296,8.892821],[2.820797,0.117248,-5.192796,-3.215731,9.182305,-4.446825,1.448371,4.373082,-5.706377,-2.880043,9.431002],[-6.088258,2.025556,-8.539916,-4.452043,3.454632,1.818984,2.068013,7.929397,-8.483899,-3.290566,-9.729094],[3.060665,9.227968,4.310302,-0.012474,8.830722,7.265064,-0.984491,9.776831,0.708662,1.534552,5.415253],[4.364108,-3.725655,2.754403,-8.796956,7.393224,-2.838349,-3.587764,-9.904022,-7.180513,9.982845,-1.715197],[-1.932294,-8.114120,-6.808804,-4.027902,-6.277298,6.779550,3.642871,5.772222,-1.229392,2.340418,5.765285],[8.882038,-2.232541,1.784782,4.821379,5.804707,4.320253,2.760645,0.474649,8.972630,1.231884,3.364283],[8.323539,3.538408,3.449158,-0.554004,-4.321519,-0.964296,-8.712635,-4.483675,2.497136,8.428221,8.980428],[2.495189,-0.869042,-3.285322,5.363642,-8.703448,-5.050141,-8.870876,-8.802172,-4.323639,-6.007688,9.114816],[-5.378608,-3.512809,4.876816,-4.620906,3.696278,-8.855433,-8.172276,3.307642,-0.436844,-3.370711,2.231350],[-5.261313,-4.195084,-5.100696,3.279608,7.219542,5.933218,4.120820,1.933973,8.280943,8.396189,-4.418815],[-8.025747,1.336700,3.784913,2.134748,5.515132,-1.160989,-6.712341,-4.122421,-5.894111,2.303558,-4.273760],[-9.301370,-4.722302,-7.129661,9.147214,6.751487,-9.517795,-5.540833,1.353236,9.672814,0.745063,-7.209139],[-3.666207,7.267186,-5.363141,7.521382,-4.173291,-9.386037,4.112658,-9.043366,2.737282,1.947349,8.744636],[7.841049,7.118700,9.337390,-8.547621,4.030069,-3.253224,7.274131,3.725994,4.666421,-5.719981,1.189520]],[[-0.094405,3.448866,4.228141,-3.647093,-9.997245,6.133468,-8.852608,1.885099,-0.540214,6.753793,5.588311],[7.164795,8.033349,-4.349787,-8.869036,-2.366175,-0.460349,-7.310717,-3.896886,-6.594413,-5.569347,-8.731806],[-1.546858,8.739777,-3.137120,0.263195,2.121101,4.621769,-4.432420,4.187238,7.342095,6.896841,8.089983],[3.062692,-1.613421,-5.736208,-2.005088,0.730639,-6.494102,5.986381,-9.310683,4.866715,-9.224804,-7.489632],[-6.866514,3.463786,1.524906,5.263648,8.401615,-8.525617,-6.371421,-1.092083,-9.051881,0.874666,1.008842],[9.556768,-1.109686,3.144571,4.613833,7.751072,1.059675,3.946514,1.554742,6.207129,-7.890709,2.008528],[2.867455,0.859628,8.691834,-7.695262,6.378759,-5.653453,-3.345141,-4.107385,-1.954209,-7.659032,7.928473],[-2.926325,-3.562648,1.032664,-9.113461,-1.386000,-9.151120,5.443457,-2.881906,-4.960078,7.095753,9.082348],[0.607104,-6.755951,4.867947,5.134723,-9.174585,-2.745953,-0.935872,7.723208,-9.666309,-0.780382,3.989074],[-8.178002,1.987297,-5.821684,-2.655719,8.546871,9.059054,9.329004,-4.393775,4.762612,-6.081325,7.901831],[7.464779,3.969674,-8.588186,5.664406,7.561724,-7.421014,-1.341331,-5.414438,-4.727540,-9.638397,3.682225],[7.619790,0.122195,-5.329780,-5.138383,-5.951578,0.898935,0.687731,9.817135,4.850053,-6.636488,4.545246],[-0.349752,4.486683,0.186349,0.227485,9.049688,-6.815707,8.064491,3.097989,8.830061,-0.678163,4.170364],[-4.358754,-3.032283,-8.586647,6.362330,5.916971,1.769951,5.304904,5.826368,6.405809,9.168374,5.537187],[-6.250978,-9.354000,-5.268366,-2.689949,-2.368173,-3.803025,9.685801,7.033715,-9.155255,-2.268385,-9.036868]],[[6.984900,-2.683857,-1.914614,-5.530972,4.073037,-1.935427,-1.920360,-5.098433,5.978354,-6.334650,9.800178],[-9.755417,-4.826096,6.933315,-5.239002,-3.204747,6.748061,-9.558335,-5.674821,3.842160,9.066894,1.632175],[-3.911582,5.548973,-2.726097,1.375156,8.110252,6.915279,0.782338,-1.438617,-9.638170,2.571173,-7.305352],[5.499841,-8.966445,-4.924710,1.185088,-9.698623,7.415374,3.964595,1.408050,6.777835,-8.723487,-5.984334],[3.963225,2.332506,-4.287527,-4.128974,-5.478670,9.984678,-4.439282,-7.413414,-1.668442,-1.446926,-8.307919],[8.956753,-9.001768,-1.289700,8.927223,-1.248227,-7.788681,-7.754091,-2.518198,2.657219,8.346776,-9.141835],[-4.382341,1.110197,6.784458,-0.016907,4.175935,1.580867,-2.447366,-4.530584,-3.800745,-0.366293,-8.881576],[5.918483,1.019707,2.783837,-1.029816,7.478257,-6.671648,3.700869,-1.866409,-5.279207,7.824298,5.691029],[3.694560,-4.801791,1.080581,-0.296757,0.120139,-4.269622,-9.006850,3.119295,4.698644,0.049116,1.906753],[4.303083,-4.938265,4.056685,7.837929,5.823207,-0.284020,3.301913,4.522211,1.644900,0.805037,1.017480],[2.530648,-2.453114,3.390932,9.233764,-8.588680,-3.638070,-3.936277,1.821918,5.591782,-1.613882,-1.306397],[8.946964,-2.820489,-9.238975,-2.097522,8.821288,2.454464,0.132190,-3.307894,5.929055,1.992710,9.751374],[-7.141601,-3.180395,-4.219387,7.433598,-7.793477,-6.382674,-2.303252,-9.488722,-1.051925,-9.090185,-6.876237],[0.220390,-7.033112,1.409435,-4.769489,4.937985,2.336175,-8.131031,3.177095,-6.584159,-3.889994,-5.419064],[-8.796714,-7.035565,-1.153261,-0.342481,-1.617880,2.818731,-9.901612,-6.711372,-0.305954,7.097299,2.125620]]], dtype = "float64")#candidate|5298|(9, 15, 11)|const|float64
uop_5299 = relay.acosh(const_5298.astype('float64')) # shape=(9, 15, 11)
output = relay.Tuple([uop_5299,])
output2 = relay.Tuple([uop_5299,])
func_5313 = relay.Function([], output)
mod['func_5313'] = func_5313
mod = relay.transform.InferType()(mod)
output = func_5313()
func_5314 = relay.Function([], output)
mutated_mod['func_5314'] = func_5314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3077_call = mod.get_global_var('func_3077')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_5317 = relay.TupleGetItem(func_3077_call(), 0)
call_5318 = relay.TupleGetItem(func_3078_call(), 0)
uop_5323 = relay.sigmoid(call_5317.astype('float64')) # shape=(16, 8, 14)
uop_5325 = relay.sigmoid(call_5318.astype('float64')) # shape=(16, 8, 14)
output = relay.Tuple([uop_5323,])
output2 = relay.Tuple([uop_5325,])
func_5326 = relay.Function([], output)
mod['func_5326'] = func_5326
mod = relay.transform.InferType()(mod)
output = func_5326()
func_5327 = relay.Function([], output)
mutated_mod['func_5327'] = func_5327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5326_call = mod.get_global_var('func_5326')
func_5327_call = mutated_mod.get_global_var('func_5327')
call_5401 = relay.TupleGetItem(func_5326_call(), 0)
call_5402 = relay.TupleGetItem(func_5327_call(), 0)
func_5280_call = mod.get_global_var('func_5280')
func_5282_call = mutated_mod.get_global_var('func_5282')
call_5417 = relay.TupleGetItem(func_5280_call(), 0)
call_5418 = relay.TupleGetItem(func_5282_call(), 0)
func_3793_call = mod.get_global_var('func_3793')
func_3797_call = mutated_mod.get_global_var('func_3797')
var_5423 = relay.var("var_5423", dtype = "float64", shape = (12, 78))#candidate|5423|(12, 78)|var|float64
var_5424 = relay.var("var_5424", dtype = "float32", shape = (350,))#candidate|5424|(350,)|var|float32
call_5422 = relay.TupleGetItem(func_3793_call(relay.reshape(var_5423.astype('float64'), [6, 12, 13]), relay.reshape(var_5424.astype('float32'), [350,]), ), 2)
call_5425 = relay.TupleGetItem(func_3797_call(relay.reshape(var_5423.astype('float64'), [6, 12, 13]), relay.reshape(var_5424.astype('float32'), [350,]), ), 2)
uop_5434 = relay.atanh(var_5423.astype('float32')) # shape=(12, 78)
output = relay.Tuple([call_5401,call_5417,call_5422,var_5424,uop_5434,])
output2 = relay.Tuple([call_5402,call_5418,call_5425,var_5424,uop_5434,])
func_5443 = relay.Function([var_5423,var_5424,], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mutated_mod.get_global_var('func_5443')
var_5445 = relay.var("var_5445", dtype = "float64", shape = (12, 78))#candidate|5445|(12, 78)|var|float64
var_5446 = relay.var("var_5446", dtype = "float32", shape = (350,))#candidate|5446|(350,)|var|float32
call_5444 = func_5443_call(var_5445,var_5446,)
output = call_5444
func_5447 = relay.Function([var_5445,var_5446,], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5202_call = mod.get_global_var('func_5202')
func_5204_call = mutated_mod.get_global_var('func_5204')
call_5470 = func_5202_call()
call_5471 = func_5202_call()
output = call_5470
output2 = call_5471
func_5491 = relay.Function([], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
output = func_5491()
func_5492 = relay.Function([], output)
mutated_mod['func_5492'] = func_5492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5515 = relay.var("var_5515", dtype = "float32", shape = (7, 14, 10))#candidate|5515|(7, 14, 10)|var|float32
uop_5516 = relay.asin(var_5515.astype('float32')) # shape=(7, 14, 10)
output = relay.Tuple([uop_5516,])
output2 = relay.Tuple([uop_5516,])
func_5519 = relay.Function([var_5515,], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5520 = relay.var("var_5520", dtype = "float32", shape = (7, 14, 10))#candidate|5520|(7, 14, 10)|var|float32
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5521 = func_5519_call(var_5520)
output = call_5521
func_5522 = relay.Function([var_5520], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_5524 = func_2680_call()
call_5525 = func_2680_call()
func_5313_call = mod.get_global_var('func_5313')
func_5314_call = mutated_mod.get_global_var('func_5314')
call_5530 = relay.TupleGetItem(func_5313_call(), 0)
call_5531 = relay.TupleGetItem(func_5314_call(), 0)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_5554 = func_1856_call()
call_5555 = func_1856_call()
output = relay.Tuple([call_5524,call_5530,call_5554,])
output2 = relay.Tuple([call_5525,call_5531,call_5555,])
func_5558 = relay.Function([], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
output = func_5558()
func_5559 = relay.Function([], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5560 = relay.var("var_5560", dtype = "int8", shape = ())#candidate|5560|()|var|int8
var_5561 = relay.var("var_5561", dtype = "int8", shape = (12, 10, 16))#candidate|5561|(12, 10, 16)|var|int8
bop_5562 = relay.equal(var_5560.astype('bool'), var_5561.astype('bool')) # shape=(12, 10, 16)
output = bop_5562
output2 = bop_5562
func_5578 = relay.Function([var_5560,var_5561,], output)
mod['func_5578'] = func_5578
mod = relay.transform.InferType()(mod)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5578_call = mutated_mod.get_global_var('func_5578')
var_5580 = relay.var("var_5580", dtype = "int8", shape = ())#candidate|5580|()|var|int8
var_5581 = relay.var("var_5581", dtype = "int8", shape = (12, 10, 16))#candidate|5581|(12, 10, 16)|var|int8
call_5579 = func_5578_call(var_5580,var_5581,)
output = call_5579
func_5582 = relay.Function([var_5580,var_5581,], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mod.get_global_var('func_3028')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_5617 = relay.TupleGetItem(func_3028_call(), 1)
call_5618 = relay.TupleGetItem(func_3029_call(), 1)
output = relay.Tuple([call_5617,])
output2 = relay.Tuple([call_5618,])
func_5626 = relay.Function([], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
output = func_5626()
func_5627 = relay.Function([], output)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5314_call = mutated_mod.get_global_var('func_5314')
call_5680 = relay.TupleGetItem(func_5313_call(), 0)
call_5681 = relay.TupleGetItem(func_5314_call(), 0)
func_5183_call = mod.get_global_var('func_5183')
func_5185_call = mutated_mod.get_global_var('func_5185')
call_5700 = func_5183_call()
call_5701 = func_5183_call()
output = relay.Tuple([call_5680,call_5700,])
output2 = relay.Tuple([call_5681,call_5701,])
func_5716 = relay.Function([], output)
mod['func_5716'] = func_5716
mod = relay.transform.InferType()(mod)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5716_call = mutated_mod.get_global_var('func_5716')
call_5717 = func_5716_call()
output = call_5717
func_5718 = relay.Function([], output)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3297_call = mod.get_global_var('func_3297')
func_3298_call = mutated_mod.get_global_var('func_3298')
call_5722 = func_3297_call()
call_5723 = func_3297_call()
uop_5735 = relay.cos(call_5722.astype('float32')) # shape=(16, 8, 14)
uop_5737 = relay.cos(call_5723.astype('float32')) # shape=(16, 8, 14)
output = relay.Tuple([uop_5735,])
output2 = relay.Tuple([uop_5737,])
func_5754 = relay.Function([], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
output = func_5754()
func_5755 = relay.Function([], output)
mutated_mod['func_5755'] = func_5755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3077_call = mod.get_global_var('func_3077')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_5794 = relay.TupleGetItem(func_3077_call(), 0)
call_5795 = relay.TupleGetItem(func_3078_call(), 0)
func_1375_call = mod.get_global_var('func_1375')
func_1381_call = mutated_mod.get_global_var('func_1381')
const_5797 = relay.const([[5.070383,-8.644405,6.547817,-7.329628,8.886826,-7.906560,5.245672,1.688837,-3.601302,1.993222,6.255530,7.579671,-3.613453,-2.740608,-2.289251,7.166812,4.271422,-6.264708,0.390874,4.503827,-2.353522,-1.410303,-3.737063,9.289640,-7.669975,0.315673,5.769242,3.028332,2.841761,-5.592937,-3.194175,0.678275,6.108689,-4.000059,9.530037,-4.742827,-9.382181,8.079723,-8.355050,8.583287,5.493114,-2.953858,1.942513,-1.945008,2.469866,-9.168518,-5.325558,1.117096,5.423387,6.877887,8.837047,-5.989837,-9.024870,2.533130,-7.290531,-7.703514,3.302464,-1.262476,-7.354385,8.616730,4.593275,9.211977,9.940402,-9.731129,-9.760845,0.042024,6.045028,9.935366,-5.586431,-1.569761,8.992175,-6.177361,1.834804,1.179285,-8.235009,-3.914612,-8.793778,5.607278,-5.322900,1.400236,1.393212,0.423533,-0.362868,0.275517,0.145660,-2.894274,-3.293075,4.473316,8.864130,5.031959,7.166630,-7.816146,4.136551,2.712558,3.136132,-6.364359,-7.184346,9.741218,2.798938,7.309627,-2.817604,5.999675,-1.634051,-2.554853,-1.904961,4.828727,6.236218,6.636176,-0.727386,4.757520,1.763030,-3.115397,2.795184,7.334963,-5.854708,3.993532,-9.901883,3.569601,8.546718,-7.107267,6.656574,9.886093,5.638170,7.068191,6.446529,4.040661,0.698328,-2.776841,0.507653,3.652052,-3.059496,-7.109809,3.197508,-9.194164,-1.748334,-0.364363,-0.934744,-4.541967,2.773488,7.824152,-4.316653,1.154216,0.419796,-5.225971,1.618458,-6.353823,-0.932435,-3.454375,4.969338,-6.965669,-6.214956,8.903077,-2.341616,-7.762162,-1.728886,6.820941,7.644460,-2.306082,-8.992365,7.145587,-8.231918,-2.674160,2.886583,-2.996020,3.858643,-6.856638,-6.542106,-8.696746,2.053184,-7.117968,8.794904,9.667562,-0.027404,0.071922,-3.468317,9.481364,-8.102473,-6.886540,-5.674313,-3.957021,2.784090,9.645059,3.612840,0.522087,5.167708,-6.224485,5.564863,1.974829,4.293348,-2.791252,1.048829,-3.142634,3.700583,8.671362,4.384430],[3.477584,-0.630347,-6.778818,1.414025,2.586154,2.930992,2.927499,6.636500,3.443090,7.302409,-4.613012,0.399691,-4.937418,0.607503,-7.499246,-3.188756,-5.094837,5.639303,-7.227736,-8.963341,2.401022,1.596542,-6.131635,2.179997,7.462320,6.159615,8.425455,-5.207615,-3.241100,-1.329386,-8.272401,-3.650373,1.630815,-1.973610,-1.987938,5.951266,-5.907659,-0.537954,0.962425,-4.855054,-2.902826,7.024106,-8.167879,-2.140141,4.798077,-7.678406,0.524653,-2.334344,-0.368182,-0.088651,6.646343,-9.274005,-7.805555,-9.378954,-3.514995,-3.459766,3.124842,-3.340738,7.320415,-3.335144,4.525486,-7.107010,7.135420,-0.002797,2.904028,8.319631,-0.933834,7.351618,-3.463724,3.650023,-0.795298,-4.502509,1.904839,-7.262641,0.012581,3.723740,7.280433,4.205587,3.245473,-3.170598,-2.284911,6.970539,2.717737,3.409304,5.107349,-4.079608,-0.921924,3.623858,0.558686,-4.621782,-5.163628,-2.233248,1.479608,-8.426998,9.667775,-8.275103,-7.179767,-0.571035,-2.821590,-8.539204,-8.832969,1.549739,7.930648,-5.965116,-3.875361,5.861853,6.865797,-8.665855,7.700342,0.083704,8.002952,-1.996787,5.557844,8.787351,-2.968936,3.462648,-9.022195,3.752125,6.730904,2.302732,-7.056919,-4.853433,-8.921982,-3.588394,-5.228370,-1.142884,0.175319,0.992415,2.944628,-4.469546,-2.486185,1.657584,3.913490,-5.159824,-7.567195,-6.878100,-8.692574,-4.563709,-7.122114,-7.757819,-6.643187,-3.465408,6.037407,3.996425,5.314918,-7.824931,0.379957,-8.370491,-6.778943,-3.993268,-2.206108,8.440499,6.118407,6.317711,6.154978,-8.799346,-8.905992,5.974169,2.730301,9.459510,8.245697,-2.211218,9.649045,2.927430,-9.572641,-4.114974,-3.985268,1.387728,-9.335079,8.117055,8.475178,3.728096,3.044747,9.465846,4.508935,1.614243,0.810300,-3.244727,-5.897658,-0.675264,6.570832,-9.158259,4.016186,3.037560,-8.799841,5.723880,8.466481,-2.279537,0.786349,5.804865,-7.385475,3.886043,-7.342343,-1.385613,3.959529],[8.566158,3.622973,3.913949,-7.175773,-8.169743,8.943902,-8.859256,5.913043,2.657142,-6.085390,2.577286,4.533888,-2.281191,-7.551318,5.294598,-7.181908,-0.859699,-6.748760,-8.606498,3.606801,7.403426,-4.970305,2.192948,-9.431886,-4.941908,9.130376,2.102974,3.132763,-3.684269,-2.502186,5.854596,8.276380,0.068699,8.883910,-8.878207,-2.646978,-1.916675,4.411555,-2.016086,-8.369942,-3.820329,2.026353,4.141408,-8.642991,-0.612568,2.189386,6.577271,-2.446073,-6.525753,-9.726082,-8.209076,-4.707554,2.263755,-9.649411,-4.168349,-4.488701,-1.123544,-1.232222,-4.336698,0.500967,-5.613723,7.360906,8.334342,-1.225057,4.081402,-6.310414,6.911553,-0.530222,-4.607099,3.470384,-2.095024,-1.499480,4.299999,-4.468939,9.746797,-1.757174,-6.240083,5.573189,6.414379,1.461351,-1.868530,-8.410638,-9.326163,-8.442535,3.132613,1.829244,2.556735,-2.797672,9.381954,9.627161,1.929642,-0.926188,6.569382,9.423971,7.498830,2.090955,8.399837,2.814711,3.291356,-7.068869,9.957179,-7.935525,8.123942,6.186033,6.236040,6.062755,9.521170,-3.454276,4.039090,8.469372,-8.636708,-2.265139,8.855289,1.908947,6.595081,3.951393,-0.786106,-8.125735,8.755853,-2.541789,-5.575507,2.527547,6.576912,-9.695054,9.071802,1.412842,-7.249390,8.950120,6.280094,-2.697459,2.977788,-0.879027,7.404394,1.019814,-6.957594,3.720129,-1.829705,-6.020864,-8.808745,-3.187282,7.727345,0.057375,-4.918009,3.783100,-2.072944,-2.816031,9.108258,8.430457,9.152389,3.637542,-7.568570,-5.167288,5.601761,-0.665723,5.579177,-2.088693,-4.066137,7.893863,-5.737762,-7.820331,-0.426933,-6.708353,4.376160,2.521008,0.390376,2.787753,7.668762,-9.960003,-1.956862,8.227451,9.340178,-0.053645,6.204080,-0.011567,-5.830134,-2.337147,-6.883412,8.718142,-8.302913,-4.075498,7.328205,6.159776,-0.100301,-6.602729,-3.766389,-2.548420,5.550721,4.789355,-6.861154,-8.284540,8.052723,-0.541068,-7.970287,6.181625,-2.636883],[-7.510218,4.763908,-5.763946,0.530339,1.929395,-2.237404,4.923254,-9.420005,2.568110,8.061484,-9.887440,-1.997093,-7.019407,-8.463588,-8.506800,9.064503,-7.314251,-7.079534,-4.845685,3.392500,-3.468403,-6.980911,4.651137,-9.494661,8.845965,0.866600,-3.424156,-1.112974,-0.004518,8.529869,3.281179,0.829569,3.116879,5.183342,8.875528,8.772800,-4.945316,8.509133,1.854288,-4.523701,1.807831,-0.611434,-9.002518,-1.455970,7.686624,1.418808,1.591841,-9.943431,-9.333623,-9.617615,9.748779,3.129342,3.793905,1.731751,2.076341,-9.089630,9.860009,-2.462545,8.459875,-4.927596,-7.563252,-7.373036,-2.482634,6.681203,-0.292291,-5.753546,8.844675,8.728843,6.239138,0.428785,3.141936,3.326763,-8.462712,-0.594867,3.819365,-2.436099,-4.200207,9.293812,-3.736346,1.548458,-3.885193,-7.370748,-7.917331,8.792972,-4.107540,-6.234063,-9.888574,3.165378,3.280720,-2.717023,-4.918153,3.807938,4.112097,-5.555160,3.809130,-3.444486,0.066073,9.175199,6.166809,8.882898,-2.299581,6.876966,-7.438450,4.260155,-9.497611,-0.762075,7.265923,0.659714,-1.640352,-4.606848,6.172832,5.982747,6.084850,-9.834536,1.985791,-7.892692,1.271485,-4.224973,-6.414652,-2.575200,-0.570415,-4.263852,-5.450715,-2.194068,9.333882,-8.938983,-9.580121,2.711101,-3.854647,-2.722755,-2.555054,5.017950,-3.682627,7.412256,-3.183677,6.044777,-6.814326,-6.239012,3.747486,4.961851,5.925982,4.210891,7.454072,9.335315,9.523758,-4.133116,-4.531068,4.446259,7.871865,-2.161402,-7.165649,-0.097391,8.684605,7.327105,-0.680639,5.381339,-5.898148,8.082826,1.952682,-6.797949,-2.869513,-8.406210,-2.136351,5.829717,-1.160055,1.247537,8.301858,5.133056,-5.301456,2.241891,5.595005,-5.129369,7.404072,-2.831843,-2.057694,8.689265,4.863431,-2.811988,-3.788973,1.895912,4.441995,8.064125,3.017158,3.188649,-2.855083,-8.875856,9.084020,0.379548,-7.312955,3.610365,-5.579535,3.425131,8.324390,-7.620103,1.874202],[-5.673074,-7.898761,7.372487,5.971568,-6.564575,9.777889,0.433063,9.166489,9.462378,-5.755986,8.129049,-9.208743,-9.494534,-7.918482,3.748491,0.970030,-8.241113,7.727948,4.940295,-0.774646,-1.457088,-8.443065,-9.649139,5.194389,7.538274,-5.788346,-8.634025,4.383327,-6.675898,9.125016,0.722533,-1.495477,4.080241,4.364837,-4.692824,-6.186358,8.502285,-1.653595,-1.426290,8.545632,-3.823068,-1.793884,-7.825495,8.036500,5.684935,-1.942240,3.895335,-8.506168,4.826097,3.315693,2.796723,-3.686082,-6.189051,-9.923840,-8.798430,-4.621633,-2.494772,-6.337294,-7.137477,3.235646,-4.236098,-8.181118,-6.998122,-4.792410,-4.415141,0.096350,8.793880,-7.404975,5.506078,8.790602,3.407252,-3.810541,-0.677385,-9.649912,-2.287243,5.978588,-1.373949,5.201326,-4.936937,-3.204369,5.099352,6.255454,1.876542,1.235992,-5.714365,1.873629,-5.823128,8.099140,-9.464261,-7.872226,-5.455016,7.330339,2.522380,3.959828,1.529173,6.737185,-9.319631,0.801191,-6.190347,-7.984089,4.128743,-2.104393,5.360152,4.114473,-5.108069,-2.249729,3.634362,7.559147,-5.537092,-9.659147,-7.490686,8.575659,-7.260132,-0.611376,3.069751,-1.426499,-7.309273,-1.350471,-6.642942,4.181362,5.673890,0.933293,-7.386550,-0.418986,-6.993974,-3.037515,-1.021870,2.187451,-8.732147,6.497785,-3.622198,3.620217,3.666122,-4.354706,8.779137,-1.885796,4.335401,4.919376,-2.397799,9.963682,-3.368273,7.529170,5.138955,-0.634872,-0.593158,2.196212,1.597012,-4.119235,-9.905170,-4.858464,-9.714919,4.436182,9.474418,6.828224,-7.118574,-4.079241,-0.582300,8.586750,-0.180980,-6.473684,7.917765,5.557876,-2.599232,3.250057,-9.699573,-9.481819,-0.937155,-6.462501,-3.367096,4.634013,-8.209482,9.796289,4.937156,-4.707223,-2.942050,4.973499,-7.782298,-3.031374,-5.101684,-8.567340,-7.068133,3.317576,-2.232851,-0.766323,-9.231173,9.090645,1.772312,8.046820,4.619686,-2.975834,-2.689556,2.642849,-5.042103,4.275355,-2.633353],[4.703986,-5.750292,2.186963,-5.630096,3.625706,-9.106448,-0.483725,-9.951725,-2.318363,3.712571,1.294226,-1.230150,6.630504,9.585821,5.509134,-1.768596,-8.621396,-5.627666,3.437457,0.336390,0.403386,4.663763,0.682978,4.940433,8.156416,-4.007076,5.032870,7.213616,9.161300,1.207096,-3.224317,7.369597,2.807114,8.140385,-9.234916,3.627437,-5.977012,1.181164,-7.973737,1.474500,-3.925308,0.083418,1.920242,-8.066298,6.381306,2.515121,7.859090,-1.532817,-4.290487,5.335424,-3.216549,-6.399225,5.540924,-7.951302,3.445470,7.366868,6.457324,9.694691,0.565792,7.538168,4.596969,1.466213,7.949337,0.314640,0.373195,-7.777971,-1.810452,-9.143323,9.529225,7.521000,-4.227056,-4.715331,0.864013,-5.538701,3.705913,7.366328,5.135394,2.509419,-3.144727,-7.433516,2.495395,7.732119,-4.553968,4.008787,-1.153281,-4.462876,5.769535,-2.723641,-3.686924,2.241721,-9.955354,-5.608262,1.740669,-7.923895,3.145702,2.103446,-7.722718,-8.882477,-8.525422,-2.079560,-0.024488,-8.655577,9.167982,7.188664,2.667100,1.000450,1.619285,2.120948,8.882582,7.048343,1.879945,8.092196,7.593918,-1.646830,6.529415,9.410659,6.227785,1.585219,-2.833965,-9.570122,4.729766,-6.998709,8.706103,-8.131665,7.744186,4.613992,-0.313053,-8.378705,-6.008113,-6.915554,5.640482,-6.136249,7.357461,9.197296,-6.180744,5.543094,2.253947,-4.624965,-9.578605,7.855348,-8.732411,-7.745710,1.307978,1.511224,2.307556,2.785861,2.204046,5.865034,6.545845,-4.650372,-0.442690,-3.790032,5.163122,-2.782031,4.834143,-4.506676,0.834253,-2.293137,8.655951,-2.315003,5.414673,-9.769170,3.387470,2.615612,-9.339445,-0.310444,-3.403008,4.942288,-0.735453,3.039250,6.324815,3.262031,-3.160988,-7.517386,2.005189,-0.212818,-8.428459,8.197919,-0.861342,9.192839,1.600847,4.814283,-6.670373,0.638358,-8.892040,-0.442990,-4.854335,-7.573208,6.928271,8.271298,-5.517493,-4.018714,-3.376339,-7.696310,-2.132464],[2.382508,-0.071409,8.995048,4.005702,8.513538,4.572443,-0.162446,9.498452,-6.500720,4.971155,-4.370454,5.090469,-2.750536,-5.138875,-6.033495,-3.348483,-0.610955,-0.156517,4.504261,5.631667,-7.961505,-1.530846,-0.392035,3.621910,0.351535,-0.641404,-3.473355,-6.488073,8.329452,-3.569239,7.835103,-7.279319,2.432602,-0.759053,-8.327723,6.353646,-1.098386,1.863921,2.843352,-0.928182,9.696440,-2.758045,-0.182872,5.759715,-7.192098,-4.873025,-5.960068,0.361911,8.508157,7.371241,1.618264,-0.062635,-4.452066,5.203869,1.251876,-2.146855,-1.351762,-3.166708,0.011528,5.518223,9.212418,-0.838116,-1.622677,9.247869,5.604799,5.022371,8.252689,-6.371757,-5.726657,-0.055834,6.145192,-1.847334,9.314168,6.770384,-7.406128,-2.884635,-9.965581,-7.421361,3.704149,-4.616539,-8.288994,6.882650,-7.570286,4.408186,9.800093,-1.656767,5.380434,7.523647,5.667712,4.074643,8.249629,-0.628585,-9.402469,-3.715780,-5.138367,-8.817219,-2.980092,9.150447,-5.774273,8.144444,-0.207500,-0.075270,0.603320,-6.968616,-5.922932,-5.862955,-7.334177,4.932718,5.718114,-2.409201,6.489799,-2.039218,-8.279119,-1.470799,5.783928,0.067024,8.457325,7.099924,7.487545,3.869848,8.289267,3.442120,-1.568789,6.236524,-5.633027,-1.616949,-7.526526,0.432359,-1.704910,0.645741,-8.316650,7.682299,2.016579,-4.523657,-9.456266,-7.175501,0.059463,6.519058,4.354298,-4.260542,-3.375096,6.580498,9.263054,-3.904728,-8.977552,2.253707,-2.005243,-7.620829,3.117019,-5.401341,-8.640249,-8.128041,-1.356992,-1.435569,-3.765610,5.448957,2.536723,4.901644,8.481089,-2.775226,-6.560178,-0.093611,-1.183519,-4.049735,7.581316,9.032753,3.915233,-0.745825,-3.135138,6.216280,0.423321,9.668534,7.019045,0.998898,-2.421850,-8.968505,-6.018166,8.338677,1.084183,-6.169340,-2.623304,7.457459,5.753166,6.490813,-4.000540,-6.801150,9.161913,-7.665902,0.860819,-3.599654,1.890641,-8.219633,1.388541,-5.459017,9.966818]], dtype = "float64")#candidate|5797|(7, 195)|const|float64
var_5798 = relay.var("var_5798", dtype = "int32", shape = (28,))#candidate|5798|(28,)|var|int32
const_5799 = relay.const([-0.116662,7.802077,-1.479068,-3.955113,4.732146,3.940709,-2.358894,-7.274010,-6.680618,-3.469131,-1.170434,6.129110,-8.561899,-9.197739,-5.578496,7.743563,-3.844951,-4.462334,-6.121655,-3.932873,2.590327,-1.537052,3.017133,-5.584214,6.653506,8.468959,6.893597,3.746106,7.364456,1.274830,2.960237,-6.409772,4.487095,-8.172273,-6.973154,4.472313,6.035421,1.328699,3.769131,-3.461585,-4.566831,-4.512949,-7.093432,-9.055794,5.214002,3.044058,-5.243333,-9.874722,2.462860,-1.343608,2.908495,2.529192,8.652228,6.196473,-3.117090,-4.058735,4.387687,-0.598531,-4.820477,-8.344556,-5.654781,-5.821040,7.341142,-5.916867,-0.056999,-4.728051,8.748943,-5.153307,-8.822187,7.010933,1.000680,-9.831616,-8.752966,-4.906589,0.576786,-3.081052,4.969644,-5.453423,-6.764715,0.642834,0.611689,-0.637667,5.469970,-1.747749,2.482927,0.157959,8.669810,1.665907,-4.487581,-4.739557,-0.853359,-1.300179,9.806967,3.822700,0.862297,-4.355203,-4.469436,8.850054,2.596805,-4.546822,4.578982,1.324720,5.523821,-1.167372,4.212026,1.570959,-5.807421,3.520078,-9.929339,5.877178,0.810155,2.366292,-1.659168,5.640702,-0.052670,-6.963978,7.900218,-2.583306,7.075298,7.755489,9.725975,-7.845447,-4.833512,6.376860,-4.886300,-1.652719,0.062057,-3.960652,2.264945,8.052324,9.871563,8.223276,-5.486671,1.241850,5.973945,-1.655143,6.574176,-4.517667,-5.629663,-5.303494,-4.907541,-9.465086,-6.067887,9.941211,-8.624234,0.460179,9.009253,9.233773,-4.673976,2.223446,7.747196,-2.856700,-9.610542,-1.479591,1.774526,-7.611433,2.185913,0.027812,7.143157,5.807239,8.515326,1.049430,-5.390664,-3.484836,0.554506,-3.798693,0.300958,9.212678,4.294622,-8.027277,-7.192849,-5.288172,1.134756,-1.648631,-8.699670,5.650703,-7.947283,-5.800879,2.673379,-6.392705,-2.878561,6.433840,5.916575,-4.042982,-7.501278,6.930461,6.423373,-9.443699,4.780784,7.185296,9.181229,-4.152174,2.023344,-1.439859,5.973417,2.038325,4.468487,-5.891852,4.273623,6.801963,2.363620,-5.995158,-7.073721,-1.837597,1.839516,0.368068,-2.116704,9.078618,1.592265,-4.332889,-9.606005,-7.364761,-7.969803,-8.333959,5.154581,7.380783,6.434564,2.360909,-6.260676,2.126072,6.889015,-2.977436,-2.328984,1.972093,5.712493,5.210770,1.043639,5.409610,-6.762945,8.501872,2.169348,-0.495949,4.267592,-8.938218,6.855500,0.645924,8.286178,-9.238479,6.933022,9.045568,1.387722,-1.657485,-3.369608,-8.932897,-3.579410,6.818360,-0.518766,-0.128812,0.272947,-2.544981,-2.623279,-0.392682,8.975408,-5.961896,-5.118080,-9.346963,-9.711784,1.666535,-5.729304,6.073316,7.873905,8.670305,-2.666935,8.087811,-9.378884,5.410752,-6.226017,-6.421714,-6.998076,-0.368367,-8.065713,5.136083,-2.688698,-4.030903,-7.355754,5.848100,-1.528040,-5.465863,-9.791136,-4.410050,8.151054,4.884558,7.645642,3.367278,-1.923659,5.625157,-4.660952,2.604400,8.522321,-4.270248,3.065640,2.108335,-9.996307,1.924132,-6.953228,9.164527,1.847234,2.107642,5.351800,-1.526561,-3.839083,-8.117247,-2.702657,8.515497,5.555965,-3.883684,2.167260,-5.755121,6.561063,-8.786153,-8.817931,1.436521,8.377087,-5.832589,1.013772,-6.109870,-3.529485,6.149606,3.875655,-3.164076,-3.379004,1.640772,3.091550,5.909334,4.671923,-1.759064,6.782296,2.156176,-8.319895,9.120860,4.419399,9.946524,5.519839,-1.379077,-2.634123,9.594075,2.922010,-3.612085,6.084511,6.448114,-1.371458,-6.838133,3.947882,-8.738565,6.726878,-2.387991,8.166465,5.953303,-1.081197,2.357228,-7.675544,3.858334,-1.657417,-9.118917,9.118302,-4.798969,0.320955,5.113568,1.557368,-0.419177,-7.441490,2.837384,6.830841,-9.018499,-7.167418,-9.171548,-3.672189,5.494134,2.769366,-3.367980,3.922329,-1.408308,5.132530,-7.502928,4.359171,-9.725969,4.026437,-5.243798,-1.286389,-1.062517,-9.547773,5.409136,-1.488387,4.548875,3.862597,-2.833855,6.636950,1.850616,-0.065855,9.644109,5.210568,5.912426,4.387420,1.452450,-4.311342,-7.992183,-3.541422,-3.505902,-0.384854,-8.820449,8.351667,6.747478,-1.183132,-7.794992,-6.922780,-9.814508,0.618707,-9.317060,0.392592,-8.800753,3.161742,8.525131,-7.039666,-2.956362,4.203334,-5.569202,0.103965,5.933975,9.453013,-8.261977], dtype = "float64")#candidate|5799|(420,)|const|float64
call_5796 = relay.TupleGetItem(func_1375_call(relay.reshape(const_5797.astype('float64'), [13, 7, 15]), relay.reshape(const_5797.astype('float64'), [13, 7, 15]), relay.reshape(var_5798.astype('int32'), [28,]), relay.reshape(const_5799.astype('float64'), [420,]), ), 2)
call_5800 = relay.TupleGetItem(func_1381_call(relay.reshape(const_5797.astype('float64'), [13, 7, 15]), relay.reshape(const_5797.astype('float64'), [13, 7, 15]), relay.reshape(var_5798.astype('int32'), [28,]), relay.reshape(const_5799.astype('float64'), [420,]), ), 2)
func_5256_call = mod.get_global_var('func_5256')
func_5260_call = mutated_mod.get_global_var('func_5260')
const_5802 = relay.const([10,8,6,-10,8,-3,-9,-4,-8,3,3,1,7,4,-5,-7,-2,-5,-10,-1,-2,-7,-1,3,6,-3,-7,6,8,-9,1,-7,10,-1,-6,1,1,6,-10,1,-5,4,-9,-8,-10,-9,3,-4,-8,5,1,10,5,4,-7,1,9,5,-8,6,-10,-1,-3,-7,-3,-4,8,6,2,-1,5,10,-9,-4,8,5,7,2,-2,-10,1,9,8,7,5,8,9,-4,4,5,9,1,-9,-5,-2,-4,-1,-6,-8,10,10,3,-7,-10,-6,5,7,1,-9,-7,-5,7,5,6,6,-7,5,6,7,-3,10,-8,3,5,8,-4,4,-1,-5,-2,-5,9,-9,2,-10,-10,-2,-1,10,9,-9,-4,-4,-4,2,-2,-7,8,8,3,-6,10,3,-5,1,-4,-6,-5,-1,-9,-7,1,4,1,1,9,6,7,5,4,-5,6,7,2,-2,-3,4,4,-5,-9,8,-6,-9,8,5,8,10,-1,-7,5,4,10,-3,-7,9,5,-3,-6,3,6,5,8,-8,-2,-2,6,-4,5,1,6,-7,1,-3,2,-10,4,2,3,-2,7,-4,1,9,7,-9,10,-7,6,8,8,8,-7,5,-2,-7,-1,4,-10,8,-3,-10,3,-5,-7,-8,-5,6,-7,-2,-8,-2,1,-10,10,-8,-7,7,-6,-10,7,10,6,-4,9,-4,8,-7,-3,-1,9,8,-8,7,-9,-10,6,-10,8,-5,-3,-5,6,-9,-2,-4,8,6,-6,3,-1,6,3,-10,-2,-9,6,4,-7,-1,-3,-10,6,8,-1,9,-6,-9,-3,-1,4,9,-3,1,6,-8,8,2,6,-6,-5,-8,2,-9,6,7,7,1,-9,-9,-6,-5,-7,-8,1,9,-1,-4,-4,-7,2,-2,1,8,-6,6,7,6,-2,-8,-10,-6,4,5,2,10,-7,-2,6,8,-10,5,8,3,8,1,-8,1,9,-2,10,-5,-6,3,7,-5,-6,4,2,5,9,-9,5,1,-8,2,-6,-4,4,-6,1,-9,10,2,-3,1,3,10,-2,1,-5,7,-2,4,10,-8,-1,-7,-2,-2,-6,-8,-3,-6,-9,-4,-9,-6,3,6,1,-4,3,-3,2,2,8,-6,8,7,-10,2,3,-10,-9,2,2,-2,9,2,1,-9,3,2,-9,9,-10,-9,-8,-1,-7,6,-1,6,6,-1,-1,-5,-8,-4,-4,6,-3,-6,4,-7,-10,-4,-5,-1,8,7,-4,4,1,-1,-10,-10,-4,5,4,10,-8,5,5,-4,1,2,6,-9,5,-4,9,-9,10,2,7,10,-6,-7,-2,-6,2,8,6,-7,-9,8,-4,-2,3,10,6,3,4,5,-3,-1,-10,5,8,9,-2,7,3,10,-1,-6,-10,-1,1,2,-8,10,-2,6,-8,7,-1,8,2,-2,10,-2,-6,-5,-10,4,-8,5,-1,9,-5,9,-1,-2,5,-7,-9,-5,3,-6,7,-10,4,6,-8,5,1,1,-1,6,4,-2,4,10,9,2,-5,4,2,5,7,3,-3,2,5,3,1,2,5,3,-9,-2,9,-6,-8,-1,10,-2,8,1,10,-5,-9,6,-3,10,6,-6,9,-8,-2,1,4,-7,5,-10,-1,-8,3,6,3,-10,9,-7,-8,5,-3,6,-10,-2,2,-2,6,-3,3,7,-5,-8,2,3,10,2,6,1,-2,1,-4,4,4,-8,-7,7,-9,6,-10,-1,-9,-4,-2,1,9,-5,6,2,9,6,-5,9,8,5,-6,-8,1,2,-8,-7,-4,1,-4,-7,-3,10,-10,1,-4,-5,7,9,-7,3,-1,-4,3,-4,-6,-9,-8,6,7,5,8,-6,-5,-2,4,-10,6,-2,7,7,9,-4,-6,-6,-2,8,10,2,7,-10,1,-7,-1,-7,9,4,1,-6,2,2,2,3,-4,-7,-1,5,6,7,3,8,8,-9,-1,8,8,7,-1,-9,-7,7,7,8,-6,-1,-10,10,-2,-1,-7,-8,10,-2,-8,-8,-1,-3,-9,-2,-7,-3,-3,-9,3,7,10,4,3,-2,8,5,7,8,8,-2,-2,-6,-9,9,6,3,-1,5,-2,4,7,9,-5,3,-4,10,1,10,-2,3,5,1,4,8,3,5,-1,-5,9,2,4,-9,10,6,-8,-10,-6,9,-9,7,10,1,6,8,5,-1,3,-3,-1,7,-9,-4,-9,6,-1,9,4,-3,-9,6,-10,-4,-8,8,-7,1,-3,10,8,-10,-8,-10,-3,3,-3,-6,7,-8,9,4,-2,-2,8,6,10,4,-7,10,-7,-9,-3,3,-7,5,-8,3,-4,4,-7,-9,-6,-4,-9,-2,7,-5,8,-2,-1,-4,6,1,-2,-1,7,5,2,8,-4,-8,-2,3,2,-9,-10,4,-10,-5,1,-9,-5,4,6,9,-10,10,9,-6,-9,-8,7,7,8,-8,-8,-7,-3,-10,-3,-8,-5,7,-2,-9,-7,1,8,3,-2,6,10,-2,-4,-4,3,-2,-10,4,-3,6,9,-5,-7,-4,-9,-8,-4,2,5,7,-7,6,-7,1,3,-9,5,1,2,3,-6,10,3,9,9,-4,4,-6,-10,2,-6,-8,-9,-5,6,2,-8,1,-6,9,-8,-2,5,-5,6,-10,2,-5,1,-10,7,1,6,-7,4,-8,1,5,9,-10,-9,9,-2,-10,4,2,-6,7,6,-6,1,3,5,5,9,-3,10,10,6,-7,-2,2,-3,-9,4,-9,1,-7,1,-2,-9,-9,-9,-3,8,5,-10,-7,-7,-9,-2,-8,-10,1,8,2,-10,-8,-7,-4,-10,5,6,-2,8,8,2,5,2,5,-9,9,5,8,10,-9,9,-10,-3,1,-6,3,6,9,-4,-10,-1,-2,-8,-10,-10,-1,-10,7,-5,-7,9,6,8,5,-10,-2,-8,7,5,-6,-4,-6,-8,-10,-3,-4,6,10,-7,-3,4,10,-2,-1,4,-3,-4,5,-6,-7,-1,-3,-2,9,2,8,1,-9,5,-1,-7,9,5,-7,8,-10,-6,-4,-8,10,6,5,6,-2,3,-1,-8,-2,-4,-4,5,-9,-8,1,-7,3,9,-5,-1,-9,8,3,-10,-1,-5,5,10,1,9,4,-3,3,5,10,-5,-10,-8,-1,1,-1,10,8,-1,9,-1,8,-10,-7,-1,10,-5,-8,-5,-1,2,3,-7,-3,-10,-8,3,-4,-1,7,7,5,-10,-4,4,3,7,-10,-9,-3,-3,-9,-9,1,-7,1,8,7,-10,6,8,2,5,10,-2,2,-5,4,-7,5,5,-7,3,2,-5,-7,-6,-8,10,-5,-4,8,10,-7,-8,1,10,6,-2,-9,5,-1,5,-3,9,7,-7,-5,8,-5,4,-2,4,8,-6,-4,-2,-3,-6,4,-8,-1,6,3,-5,4,6,6,2,7,-10,9,8,1,-2,-1,5,-3,-7,-7,-7,-4,7,-5,3,-6,-3,-8,-1,-4,3,-1,-9,-9,3,1,-9,4,-4,-4,9,3,-7,4,10,-8,5,-1,-4,-1,8,-10,6,10,1,10,-4,-5,-3,-8,8,6,-5,-8,-9,9,-2,4,-1,9,-10,5,1,4,8,5,-8,-1,-7,-4,-9,-4,10,-8,-4,-6,-7,8,-10,2,-4,7,-9,5,-7,-4,1,-7,6,1,-6,4,-7,-1,-5,-8,9,3,2,-6,8,-7,-10,10,-4,7,10,-1,-4,-8,5,-9,1,-4,3,-4,-2,2,7,-9,4,9,7,-3,-2,1,-6,2,6,2,6,2,9,1,7,7,3,-7,7,3,-2,-7,-5,-6,4], dtype = "uint32")#candidate|5802|(1440,)|const|uint32
call_5801 = relay.TupleGetItem(func_5256_call(relay.reshape(const_5802.astype('uint32'), [8, 12, 15]), relay.reshape(const_5802.astype('uint32'), [8, 12, 15]), ), 0)
call_5803 = relay.TupleGetItem(func_5260_call(relay.reshape(const_5802.astype('uint32'), [8, 12, 15]), relay.reshape(const_5802.astype('uint32'), [8, 12, 15]), ), 0)
output = relay.Tuple([call_5794,call_5796,const_5797,var_5798,const_5799,call_5801,const_5802,])
output2 = relay.Tuple([call_5795,call_5800,const_5797,var_5798,const_5799,call_5803,const_5802,])
func_5805 = relay.Function([var_5798,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5806 = relay.var("var_5806", dtype = "int32", shape = (28,))#candidate|5806|(28,)|var|int32
func_5805_call = mutated_mod.get_global_var('func_5805')
call_5807 = func_5805_call(var_5806)
output = call_5807
func_5808 = relay.Function([var_5806], output)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mod.get_global_var('func_3047')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_5812 = func_3047_call()
call_5813 = func_3047_call()
func_1659_call = mod.get_global_var('func_1659')
func_1663_call = mutated_mod.get_global_var('func_1663')
var_5827 = relay.var("var_5827", dtype = "int8", shape = (6,))#candidate|5827|(6,)|var|int8
var_5828 = relay.var("var_5828", dtype = "int32", shape = (28,))#candidate|5828|(28,)|var|int32
const_5829 = relay.const([[-9,-9,-1,6,-6,6,-7,1,6,6,-5,10,3,-3,-7,9,7,2,3,-9,2,7,8,7,-3,-5,-9,-4,-10,-1,-1,-2,8,-8,10,4,-3,-9,6,8,-10,8,9,2,-7,4,-3,6,-10,6,2,-2,-8,-7,-9,-6,9,2,5,7,9,10,10,5,2,8,1,8,-2,-8,1,4,9,8,-10,-6,6,10,5,4,7,1,5,-9],[-6,10,10,-9,-7,-1,-2,5,6,-4,1,6,3,7,-9,-4,1,2,5,-8,-8,1,-9,-8,2,-4,1,10,-9,1,-3,-3,-9,6,8,-8,5,4,6,9,-5,8,6,1,6,5,7,4,5,-1,3,9,1,-2,-7,-4,5,-8,1,-8,1,6,1,5,-7,-9,8,-8,1,-5,-4,-1,-10,-2,8,9,3,-9,-7,-10,-5,-7,-7,3],[7,-6,-6,10,10,8,-9,-9,-6,7,-7,10,-6,-4,-1,2,-4,9,-7,-7,-10,-5,3,3,4,-3,-9,-2,9,7,-2,10,-7,-5,9,-3,6,9,-4,9,4,-9,-6,-7,7,-6,5,5,4,-8,10,1,-1,-5,7,-3,7,-4,-4,-9,7,2,-1,5,6,10,5,2,-4,-1,3,1,-7,-5,10,-4,1,-8,-2,2,8,-4,3,-9]], dtype = "int32")#candidate|5829|(3, 84)|const|int32
call_5826 = relay.TupleGetItem(func_1659_call(relay.reshape(var_5827.astype('int8'), [6, 1]), relay.reshape(var_5828.astype('int32'), [28,]), relay.reshape(const_5829.astype('int32'), [252,]), ), 2)
call_5830 = relay.TupleGetItem(func_1663_call(relay.reshape(var_5827.astype('int8'), [6, 1]), relay.reshape(var_5828.astype('int32'), [28,]), relay.reshape(const_5829.astype('int32'), [252,]), ), 2)
func_4336_call = mod.get_global_var('func_4336')
func_4338_call = mutated_mod.get_global_var('func_4338')
var_5832 = relay.var("var_5832", dtype = "float64", shape = (420,))#candidate|5832|(420,)|var|float64
call_5831 = relay.TupleGetItem(func_4336_call(relay.reshape(var_5832.astype('float64'), [420,])), 2)
call_5833 = relay.TupleGetItem(func_4338_call(relay.reshape(var_5832.astype('float64'), [420,])), 2)
func_3510_call = mod.get_global_var('func_3510')
func_3513_call = mutated_mod.get_global_var('func_3513')
const_5835 = relay.const([-7.623140,-5.029222,3.767705,0.205693,4.971653,-8.028239,2.253360,-8.028781,2.165091,-9.673892,-6.454976,-5.172952,2.594432,9.588354,-5.204049,-7.147128,8.463140,2.325794,-0.685188,0.262561,-7.749328,7.787165,2.968259,9.357552,8.959723,8.797968,-0.534332,0.388803,2.291444,-2.178832,2.856116,-4.509975,-3.237419,1.200440,8.599996,-4.096102,-1.623264,5.569525,-1.180194,-9.481071,7.394897,6.602950,4.514326,1.323939,9.480530,4.422441,-9.517762,3.434776,6.257461,8.664628,7.110514,-7.733388,1.513072,3.603566,-3.757692,9.139013,9.944415,6.650578,3.752817,4.518174,6.382776,0.966355,7.324627,-2.847707,-1.482868,1.134089,2.523224,1.794529,4.241066,-2.010034,8.843240,9.487639,-3.481217,7.003150,6.626642,1.956265,2.841624,-8.912249,3.828447,4.571346,-2.662321,-9.081894,9.195846,7.189975,-8.032012,-1.642848,3.946479,6.238011,6.930951,-9.688961,3.686403,6.235361,-6.803215,1.610609,-7.728200,7.449997,0.783843,-6.950401,-5.157991,-3.157733,-5.120821,-7.237735,-0.751068,6.784596,-0.060557,5.090894,4.579794,7.729602,-0.330673,-8.944637,2.254702,-1.779124,4.143780,4.955266,-7.277836,-0.726770,4.687928,-5.631680,-8.402541,0.415426,6.943733,0.372867,3.504226,4.691001,4.179084,-5.471121,5.299725,-3.925725,3.643642,-5.081229,8.907933,-5.615341,0.459097,-1.834337,2.329684,5.844115,-3.137101,8.899574,3.457247,-2.890534,-2.147694,5.128372,0.187542,-3.166393,-7.520637,-7.845427,-4.528569,-4.528242,0.716406,5.618945,-7.568984,-9.869870,8.094670,-2.493820,-3.378449,-5.201616,4.175286,-8.967026,2.741594,0.489007,-0.141548,5.217260,6.768015,-7.589792,-2.204594,5.008915,-1.249566,-1.611727,3.720958,-6.164979,3.891812,1.542712,3.456751,0.950240,-4.422515,-8.434218,-2.075309,3.658104,9.223821,-6.212292,-9.770429,-5.867084,3.504456,-0.058966,7.103338,-7.978100,1.429571,6.474134,-0.121334,8.773827,9.284711,1.425009,5.074870,4.874848,-7.538407,7.196882,5.625728,-8.539075,-2.544039,-2.530581,3.125125,-9.918814,-5.626856,2.429816,-0.641448,4.992934,-6.987028,8.333530,-9.816792,-5.577566,-2.642501,9.390689,5.454798,1.840435,-5.819884,0.731725,-6.371845,9.922235,8.449354,7.361465,1.241724,-5.248965,2.031111,-8.523416,-9.527896,8.504984,-3.887401,6.615939,-5.394265,3.077319,-8.731718,-3.240451,-8.842993,9.342424,1.532196,1.208470,0.595037,-8.042753,6.365109,-0.413072,-2.229290,-4.176726,-1.430921,-3.639291,-4.902437,-3.953939,4.655846,-9.595025,-4.113973,1.222022,-3.637356,-6.859311,-6.389749,6.677244,1.447706,-9.336103,5.944202,-5.970014,-8.645198,-3.407978,-8.008164,4.661175,1.881679,0.568339,9.137896,3.757006,7.574839,4.321711,4.980906,3.401411,6.526578,-1.454500,5.776854,-6.904932,2.733537,-4.368009,0.240576,4.732533,7.808471,-3.093327,-2.099501,2.530418,-9.011854,0.291740,8.087718,-8.289800,-0.084641,1.652742,-0.939325,0.939694,-4.608559,3.049255,0.675498,-0.410551,-3.819605,5.125337,3.428804,-1.989227,-9.026695,1.763402,3.575007,-5.749828,-9.812719,1.978717,8.940177,-7.433216,-2.154189,-9.625635,4.070797,0.004689,6.113814,-0.319096,8.670767,-4.772777,-7.041059,0.955798,-7.437224,-1.248133,3.858733,6.866143,-8.178951,-9.107956,4.800603,5.059624,8.596199,-9.631159,2.816336,4.021695,-2.067540,-7.013640,7.479988,-4.071239,8.393424,-2.240277,-0.039161,-5.971871,-8.483791,0.814610,7.094199,-7.616689,4.821126,3.730859,7.309854,9.800719,8.348222,-2.727679,3.039725,-7.822079,4.261650,5.432348,-8.381981,0.716551,-9.655316,-1.783962,4.820239,6.344223,-8.602320,4.656581,8.106834,1.976112,2.801454,-9.132672,-3.127179,5.740766,8.061857,5.340427,-8.720927,-2.590248,4.818849,-7.512827,5.825078,-7.305347,3.960361,7.300512,-1.095517,0.332475,9.772813,1.518153,-8.801402,2.193902,8.271577,7.863487,6.240929,0.312773,-3.087643,1.262966,4.705856,7.625982,-9.008279,0.117729,8.572102,-6.254877,-7.943131,-0.811614,-3.012218,5.446640,-4.698567,-6.955249,-4.077240,5.373785,2.726863,8.367637,-6.300877,4.462497,7.622104,1.201054,6.652397,2.481674,4.441037,-5.527573,-7.090392,-3.592149,-0.080613,-8.383005,-7.354164,-0.874660,2.357457,-1.728657,-8.241666,-9.123825,-4.586809,9.440028,6.952608,-5.440946,-0.198076,-2.411493,-8.836606,-2.931606,4.578862,5.486683,-2.669201,-5.072612,0.856839,4.762607,-7.545105,-5.271113,4.778492,0.513459,-9.121603,-6.834379,-2.815360,0.698618,1.240680,-9.813773,7.282240,-9.917098,3.119942,6.264725,9.377082,-0.426527,-8.508884,-2.557245,-2.605400,-3.269716,2.503235,-8.442439,8.188118,-6.895836,5.882259,-4.532146,8.225717,-4.075326,3.486021,1.141805,-4.884694,-0.925266,-8.343683,-0.192322,-0.439871,-7.890780,3.276012,-0.744537,-5.749739,9.662970,8.504818,-9.812537,-7.308474,3.588382,-4.518517,-2.310801,-8.237769,1.150602,-1.818748,-6.231869,-8.083611,-5.305391,8.181154,3.320881,-6.712321,6.255362,-8.094051,-8.852065,-9.359160,-2.797300,-7.697079,7.231551,8.221340,-0.191392,-7.195353,9.382071,9.422113,4.101428,-0.635427,-1.161825,8.866781,-1.673185,-3.825101,9.980882,-4.082227,7.702808,-3.450965,3.170067,-0.374070,4.454987,-5.665642,1.522801,9.597551,-9.647417,3.205736,-6.538138,-6.184030,-3.073372,4.559210,9.951963,8.905037,-7.211737,6.481364,-9.638233,2.183089,1.725244,-5.428915,9.816668,6.589056,8.049842,2.171745,3.446953,-1.965630,-9.681372,7.807336,5.000376,-5.400008,5.099458,7.066060,9.000816,9.606936,7.713542,-8.270387,7.248813,-5.147790,-6.405320,-6.044092,-4.885738,-0.213746,-1.358071,-5.154473,-7.714208,-8.442437,9.078896,4.432667,-0.215072,7.978172,-4.152832,3.129810,6.765366,-8.920106,7.115427,6.393492,4.404954,-9.083505,-9.789185,2.740974,2.175315,-8.294818,-2.023207,-3.263046,-0.207861,-4.533654,3.928678,2.910905,7.761783,-1.138474,-2.143702,-3.653989,0.064629,-1.928598,-5.129861,7.702349,8.024774,-5.096027,1.267353,-1.836901,-1.674704,0.109722,-2.044242,-9.058667,-6.076995,-4.037018,-3.084001,6.985390,6.688089,0.238417,3.044471,-5.117355,-9.483165,-7.008247,3.862579,-6.912049,1.965245,1.251558,-6.699535,-5.217921,-0.489382,2.002788,2.157182,5.845999,-3.664053,-3.601448,8.692068,-2.682088,5.397058,7.841921,-4.543523,-9.696506,2.909328,9.979312,9.007084,0.611719,8.049507,2.307146,9.539244,7.660394,6.253534,5.920991,-2.207299,0.967812,8.195702,-6.827996,-8.701034,6.159498,-6.584750,6.835459,-1.748334,-9.575366,1.501563,3.017915,-5.855692,4.646701,-9.125359,-3.861004,-8.714302,4.031281,-3.848577,0.737836,-3.108291,4.183211,-0.089581,8.449518,9.407217,-2.567088,2.625035,6.283490,-0.641834,9.147814,6.694638,-0.313581,7.942168,2.558908,0.447998,-3.399358,-6.064452,9.862877,-0.798856,5.012047,-9.703473,6.379099,5.266091,0.630140,9.091312,4.008493,-3.298561,-3.864839,9.078996,4.674419,4.833236,-3.363298,1.711933,-6.019323,-0.200183,7.705511,3.113459,-8.655461,3.092662,-9.072313,9.834327,-7.507707,4.682717,5.804746,-5.194197,-3.948466,3.048256,7.958318,-0.394208,-2.351059,-3.769359,9.056048,-6.240651,-0.641327,2.309873,-8.881881,-2.594883,-9.534643,-2.152859,-7.341435,-7.152855,-6.464681,-2.258235,6.907143,4.641643,0.542441,6.168866,8.336933,1.689021,-7.258699,-1.581023,4.520645,2.391084,3.854659,2.191997,-4.850286,-7.299037,7.509169,0.756096,0.245667,3.660608,-0.166140,1.281399,-9.268505,1.242252,0.752641,-8.252979,5.363337,-8.033565,6.764763,-3.402322,5.214309,-6.804289,1.344326,8.849181,-0.309839,-3.300668,-2.937425,-5.650660,-5.958564,0.615470,5.216371,-4.455435,8.699274,1.516455,-2.087369,-9.350150,-1.992785,9.231563,-1.896352,-7.816995,4.177183,5.287323,-7.947156,-5.284194,-2.231617,-3.527582,6.574538,-6.752737,1.674316,0.222278,9.777062,-8.680820,-5.887103,-0.990677,-3.482122,9.952590,4.284517,7.293292,-6.157339,-4.940598,7.549139,3.571161,9.160187,9.882592,5.661338,-0.925244,7.516648,4.050160,-0.625652,-6.308137,-6.828583,-1.154925,6.648675,-3.745750,-0.814116,-7.865820,9.738104,-8.505415,7.780597,-4.813122,5.710831,8.257652,0.601138,-6.352651,-7.601702,-5.792869,8.017637,-5.842845,0.362065,-8.973721,2.485338,9.554010,-9.699577,8.006228,-4.221263,7.222644,4.922086,-4.872054,9.223363,-9.134077,0.055732,-7.821045,-6.910898,7.926498,8.141734,4.557766,-8.981677,-6.656570,-9.370551,-1.417855,7.260808,-9.635193,7.653531,5.838954,-8.845525,-9.553506,-8.746883,-0.042020,-2.500598,-4.929132,2.195404,-8.062378,5.802236,3.932734,9.567967,-3.258212,2.968347,3.089888,3.093591,3.772805,-4.546052,7.818508,-8.760670,3.474230,-8.657943,2.480344,8.614982,4.356362,-2.613667,3.864387,4.802533,-7.006044,-8.479720,9.179132,-8.654091,2.993351,-5.828763,6.610146,-9.778007,3.935829,4.582855,2.960526,6.117238,4.050501,2.987794,9.212389,-3.609466,7.478742,5.563693,-1.257093,0.790861,-7.608672,-7.410131,-6.631882,8.146582,8.887579,-7.009940,8.805169,-2.123465,1.486740,9.848100,-1.483001,-1.112696,6.915349,-0.564394,2.285232,2.768087,8.299038,-4.372869,7.129881,-5.944953,-7.515895,1.631966,-7.591549,-2.430088,9.562839,-1.763951,2.949616,3.175990,-7.732028,-1.787668,4.849622,1.538483,5.824595,-5.627663,3.821575,-2.331570,-5.081079,-8.434148,2.431064,-9.957327,-2.429958,-2.190741,-8.176134,-8.351794,5.441066,-6.093132,2.826104,4.584401,5.770582,7.511758,-7.418325,-9.412664,1.806861,2.011999,8.057704,5.162594,-3.901796,8.236626,0.322865,3.138852,-4.575014,5.193617,-4.724354,6.546772,-4.600756,-2.497520,-5.170827,8.091849,7.632390,-2.403663,1.592466,2.284158,4.567338,-9.745356,-1.446578,8.919651,9.765164,-7.157207,8.597935,-7.199868,-9.421567,3.834411,5.504081,-8.801416,8.512686,-4.335915,-6.685928,6.806688,-0.774582,-4.183587,2.552992,-6.389054,-6.657988,-9.864473,-0.290493,-1.898116,-6.175854,1.490353,-5.459386,-3.582824,-3.270127,-3.151354,-3.535724,-6.045652,3.605568,-1.592061,-8.541381,-5.087953,4.166698,-0.818326,3.468917,9.028611,-7.817212,6.991642,-2.738633,1.364430,-2.659156,-2.265318,8.829226,-9.893572,9.878017,0.234608,3.574420,5.319485,8.454331,-5.316326,-7.698555,-2.325302,-8.079200,4.266669,1.804482,5.376478,2.967817,9.968697,-6.308974,2.507483,-9.044122,6.816736,-8.404346,-7.233753,-1.436115,-7.689850,-1.877343,-8.842024,9.868701,-6.583442,-0.185489,-6.408363,0.081334,-5.483721,2.851446,1.935455,-0.198399,4.529745,1.538945,-9.758177,-8.349982,-9.942973,9.107557,6.173770,9.766553,-1.551767,7.677344,9.326500,-4.682062,-3.715344,5.292969,0.699367,-1.598406,3.733865,-9.285797,-7.073296,-5.262131,-1.409347,0.163346,-1.874634,3.791829,-8.513189,-5.345322,0.484678,1.265619,-4.828157,2.173761,-6.401305,2.425776,-4.852618,-1.462571,-3.914901,9.334405,-9.531761,0.323205,0.058932,5.563823,2.631905,6.839263,-1.148569,8.333084,-4.613041,-0.902043,-1.418201,-5.720353,-2.765792,9.292751,8.280381,8.456904,7.936642,6.288978,4.539850,-2.145420,-3.345338,2.932674,-0.530840,3.132555,4.556344,-5.710939,1.503553,-5.955155,1.020700,1.471707,1.960341,-4.559826,6.772345,5.235129,5.061754,3.760179,-2.822827,-5.764005,5.047981,7.205547,-9.535661,7.218418,-0.906029,6.692885,9.792732,-3.538200,2.005410,-0.934635,-8.846443,3.671960,9.544079,7.462235,9.126222,9.853385,-9.748553,1.815099,-1.279669,-0.203485,3.367668,-4.386581,-9.322698,0.918149,9.117746,-6.608257,2.743211,5.752023,5.233017,-8.947143,1.234894,3.269933,-0.403739,-4.807925,2.042401,4.919524,-7.301804,-1.779270,0.295983,-6.452690,7.375296,-1.881781,-3.653641,3.450363,3.030433,-1.365517,3.577635,-0.026976,-7.894359,-1.869226,1.174621,-6.806336,8.535751,3.664864,-7.119536,-1.238352,-8.313729,8.540839,-0.188498,-8.864072,-5.553871,-7.758426,7.918736,-8.383169,4.159626,2.414575,-1.615474,-7.637066,-2.774433,-5.460519,9.495865,-5.496690,-9.508028,-3.563765,6.539109,-4.765538,8.790404,8.192906,7.477987,5.563392,5.222613,1.872101,-9.905027,2.302158,3.860113,-7.263459,-1.854312,5.768095,-8.723550,-3.698504,-8.709248,6.769808,6.273609,-8.444570,-7.129847,-6.748887,2.724342,-1.589659,8.877359,-1.598899,4.927748,-3.642808,-2.854379,-8.941333,0.955027,-6.532891,4.074322,-2.153838,-5.749363,8.733845,-3.798486,-9.541500,-4.337356,0.169123,8.606291,-4.875179,-4.572791,-4.042557,-0.776615,5.294060,8.868516,-8.659372,-1.383372,-7.463544,2.035490,7.581173,1.308146,9.126698,-2.149016,9.117756,6.536318,6.405550,-7.482125,-0.365426,-4.965645,5.928146,2.413734,1.193372,-6.904139,-3.900606,9.954823,9.900446,-4.704959,-2.584400,5.174376,-9.241537,-2.950032,2.438701,6.615257,4.671938,3.285836,-4.495814,-6.768481,-1.971004,1.718748,8.711512,5.264907,9.170158,2.552855,-5.216577,2.723996,4.185008,-6.320957,5.709029,-1.220394,-6.978218,9.506281,-2.841811,-7.518363,-4.519884,-6.421994,-6.760803,-3.353376,4.893746,-8.269887,-5.013500,-6.036224,8.535877,-1.728917,-3.872224,8.756955,2.402782,1.504611,1.963038,-6.423460,1.561243,0.105514,-6.097071,0.314195,2.826577,-7.478675,-6.823398,-6.862838,3.566627,-3.963052,9.326071,-7.078233,-6.603850,5.598186,3.208398,9.290609,-4.957282,7.324478,-0.713601,-4.458771,-3.459808,2.284644,2.426601,-2.614154,3.494601,-3.615397,-7.023859,8.248278,1.224656,-4.505923,-3.136774,6.693640,-1.132616,-9.260570,-5.491422,5.999387,9.776833,3.042737,-1.307129,0.136313,-8.709313,-9.639271,6.969363,9.519307,-3.043390,9.445598,0.848335,5.399284,3.737174,-9.079552,-8.946894,-3.554829,-3.448006,-1.600492,4.870986,-1.154187,-9.372589,5.576976,-2.552137,-4.918854,-4.734675,-5.735940,-7.483758,-3.997028,0.085550,7.952641,-7.457704,8.249984,5.729196,3.088040,1.019440,-5.305490,-6.729115,6.598679,-1.841751,-8.633978,-2.880192,-1.018297,-1.984294,-8.448855,4.445138,-5.805338,-9.310966,1.213692,0.153981,-6.540914,-9.384701,-7.413485,-3.753043,-7.899345,9.068005,-1.805227,3.238564,0.822785,6.839309,5.073418,5.933218,-2.055792,6.664788,-6.527444,-0.495213,1.532321,6.203718,4.022037,-6.271000,0.194182,-0.373187,0.342147,-1.559603,-9.883670,-9.597729,8.907975,8.871919,6.676007,8.605676,1.606160,1.747955,-6.440052,8.681263,-9.820813,6.046382,0.145881,9.406404,6.680637,5.551774,4.749760,2.362985,-7.141480,-5.427668,1.486029,6.911553,9.757291,-0.244901,2.979232,-7.169402,9.060756,6.264283,3.980725,3.760704,5.517710,-7.793540,-9.454050,2.041212,-2.083861,2.036985,3.217131,5.022239,4.295225,-6.080307,0.891970,-8.815054,1.274557,8.671440,0.943609,3.064538,-3.358088,3.760740,-0.732430,5.868017,5.007043,-4.713015,1.467066,1.063982,9.809752,9.232948,-6.419862,5.531466,-3.743212,8.959954,8.160325,-0.838371,-1.046821,3.210674,-7.689634,-3.137518,1.067429,-3.661534,-6.961669,1.710533,1.115336,-9.292166,-7.628876,4.753298,-6.807969,-3.386934,-9.147067,4.261476,8.266721,1.427483,3.506826,7.435462,-9.063432,2.062714,0.232738,5.032175,-3.792121,1.876043,4.788806,1.614225,1.883049,-7.542810,-2.564447,-5.690294,-6.226109,0.174726,8.923887,-0.674592,-4.667292,-8.298810,-7.891749,-5.699652,7.342748,3.272354,5.277370,5.295240,5.672787,-8.809116,7.129998,8.913872,-3.850065,-9.045852,0.408032,6.400405,-4.754432,1.003505,8.902466,5.482592,0.696858,-3.017293,3.446715,5.924086,2.714010,-6.278125,8.303852,-8.366347,-0.804392,1.813698,3.433895,0.600355,0.829230,-1.396202,7.304599,1.023211,-4.647648,8.575975,2.418639,-0.417239,-8.783441,-7.187198,-0.978183,5.026582,7.477674,-4.005881,1.048079,-2.103470,1.367033,-6.194681,8.412063,1.832543,0.870141,0.706944,-4.047574,2.373395,6.639949,-8.239987,-7.692204,-7.755649,-8.126060,-8.626973,5.498791,-5.245783,0.257678,1.570773,1.640720,-8.390200,5.149626,2.900390,-1.463339,-3.537196,-2.804203,7.115703,-8.170841,-0.985523,5.480312,-6.672399,-0.058143,5.425245,4.599918,-7.656501,9.891550,1.491328,-5.650689,-9.668595,5.745641,-0.771336,7.387253,-1.885806,-4.967958,9.900525,5.393178,-6.437089,-7.673681,8.103392,-7.588985,-1.616262,8.295177,-3.138673,4.574967,-3.137314,5.645152,-7.649260,-3.639718,-7.154301,-0.822213,-6.184264,9.572749,2.831220,-8.849502,-0.184281,-9.672406,2.657374,-1.815362,0.685310,-6.864081,0.649423,6.141874,7.525072,-6.023560,-1.066748,4.405084,8.581074,6.685814,-4.328728,0.679257,-1.033394,-8.818647,1.831021,6.983878,-8.832834,-5.852502,3.740187,9.350705,-0.333730,-6.013632,-5.228659,5.849570,-2.031799,-7.503586,1.595835,3.463932,8.079905,4.666531,6.130980,-6.172958,-3.231210,2.041142,-7.752862,-1.508285,-7.776933,0.793965,-5.528595,-9.279854,8.465315,-0.333302,0.755433,-6.312057,4.902264,5.269819,-2.314783,-3.829796,8.950463,-4.221240,-8.049473,-9.598542,5.928074,-4.313357,-4.830067,-3.635711,7.012845,-8.537821,2.772614,-0.565784,-9.441559,1.109994,6.549115,-9.503740,4.592320,-4.601779,8.519791,-0.980977,-8.833886,6.317920,-4.547459,-6.405919,-2.771864,-3.377700,5.617671,-4.115382,-5.547829,-3.992857,4.326586,-9.009883,1.525384,-9.387710,5.793388,5.443793,6.027180,7.000016,-5.705127,-8.802722,-4.019111,-0.356921,0.177571,-1.446734,-4.751971,7.768229,9.204518,-3.481450,-3.892169,4.529371,-1.708249,7.567169,1.006971,0.572071,-4.184392,-5.056490,-3.297095,-4.935976,2.173998,3.769139,0.417852,1.373626,5.882059,0.829824,1.333562,0.648889,7.121964,4.785331,4.035166,-1.722804,-0.406380,3.457475,-1.802880,-2.020188,-6.105836,4.365569,-1.032217,-6.355596,4.263596,8.683258,-1.291329,-5.450907,1.718185,6.150842,-4.324175,-1.497419,-5.609218,3.868640,0.176533,4.000649,6.206898,9.932784,2.015598,9.718172,8.319886,4.963588,-5.167765,9.448502,-7.191776,-9.206923,6.715224,8.523716,-6.196464,-3.043849,1.609569,7.944598,-7.789615,-3.305258,-2.288335,-7.199025,6.613112,-0.066440,1.992486,0.949353,-3.823221,-6.527837,5.245426,2.357935,-5.252466,8.056051,3.848291,2.700678,-1.532530,-8.370141,5.086139,-2.847981,-0.090217,-2.422535,3.903436,5.871342,-4.931496,0.714944,-9.380940,9.319217,-8.908275,-7.016324,-0.084525,7.194223,2.815613,8.826830,6.533946,4.154575,-0.911612,8.415081,-9.270849,3.027534,5.364626,-7.955671,-7.046731,-2.630947,-3.733668,-9.005741,-0.009562,7.437263,3.525346,0.543032,4.167876,7.486227,-6.762051,9.925069,7.266605,5.980434,9.143112,-0.708311,-4.290091,-4.880315,0.200409,4.638148,-4.446416,-6.115908,1.565079,-3.806391,-2.255424,7.859441,3.159435,2.079700,2.971930,3.662322,-1.603228,-9.351306,-0.320969,-4.866078,-5.227133,-6.600100,-3.755443,-9.988435,-4.415383,-1.759748,-3.892038,6.960424,-6.497839,4.661635,-3.131332,-3.658856,-2.038413,5.521433,3.982866,0.614972,6.824658,1.448297,-0.960427,2.235693,-4.144783,3.806907,7.136490,-4.199766,-0.300503,-0.169340,-3.217578,6.104116,8.670562,-5.435929,-1.569936,-9.460922,1.045883,-3.357718,-0.581396,-4.935999,4.007705,1.797757,-8.403321,8.085962,9.328348,6.163733,-8.472528,2.303006,1.772691,2.903458,8.915847,9.866828,1.265088,-3.854824,-1.063700,-6.421780,-8.215765,-6.654470,-4.883790,5.485470,8.100550,9.260303,-9.066665,-1.968612,-2.547093,2.407089,6.607749,-3.503666,-1.444703,-6.796092,7.268123,9.471417,5.500587,3.474152,2.178781,5.150663,5.833424,-9.155227,1.057370,-7.153617,-3.102597,7.688692,-3.882176,-3.020814,-7.530858,3.026481,-6.947682,-5.934853,5.736301,4.954432,-0.264966,7.966361,4.709531,8.923759,-6.595182,2.323290,-0.838478,7.798636,-2.867738,1.580379,-6.213352,8.386779,8.419567,-4.235673,4.241716,2.745220,8.158329,7.381261,5.005659,3.633714,-2.352599,-6.057503,-9.384449,-7.746973,-9.288041,1.372227,-1.968714,5.618384,-2.796110,-0.235372,7.337038,-5.211340,9.612359,9.154806,-2.253335,-8.182502,1.554245,3.643686,-6.690878,0.820307,-6.772271,-9.551158,6.473773,-6.409032,5.213717,3.349330,0.442093,9.509806,0.798532,2.973726,-6.278099,9.835975,-7.688304,2.230324,-0.602979,8.069121,1.317061,0.420954,2.187812,6.920333,1.556926,9.805375,-5.485323,5.370495,-1.507842,7.246221,-7.864618,-3.951759,-9.736563,-2.174536,-4.989690,6.091960,9.148493,-2.010613,-1.240885,5.403674,-4.196946,-1.230406,-0.965251,9.196430,-5.731350,7.650981,0.819127,-4.459782,5.411157,-9.660630,-1.146983,0.809372,-7.518392,2.637668,3.841871,-0.544476,8.625222,-6.391906,-8.501209,-8.243528,2.181994,-8.076729,-6.383964,-6.188553,4.504165,3.597444,-4.427952,4.455552,2.576732,7.016769,6.795678,-9.958987,9.077462,-3.048459,-2.304261,-6.391848,-4.820152,-9.197466,0.864128,-0.051045,3.729069,9.379468,6.037621,9.237271,2.066135,0.557930,-5.767032,5.330704,0.103005,-3.421683,4.594726,4.840731,4.008678,-3.712693,-1.018057,3.840371,-5.330615,2.316099,6.754812,-8.674562,6.939542,1.105285,-5.239211,8.175043,8.747017,3.208262,4.316967,-0.956320,7.356975,4.014075,-2.186015,9.185458,1.816006,-5.042169,1.390033,4.091331,-0.097075,6.649388,-0.227471,-5.853396,-7.939460,-8.369152,-6.611551,-9.603854,8.447098,8.097279,-2.212790,-1.541745,9.261392,-5.222859,-7.256017,-6.406487,-3.094743,9.908846,-2.900909,-4.755734,4.301175,-5.421602,-1.665946,2.852245,1.841935], dtype = "float32")#candidate|5835|(2112,)|const|float32
call_5834 = relay.TupleGetItem(func_3510_call(relay.reshape(const_5835.astype('float32'), [12, 11, 16])), 0)
call_5836 = relay.TupleGetItem(func_3513_call(relay.reshape(const_5835.astype('float32'), [12, 11, 16])), 0)
func_5221_call = mod.get_global_var('func_5221')
func_5223_call = mutated_mod.get_global_var('func_5223')
const_5842 = relay.const([-4.793692,3.336365,-1.870314,-4.492301,-7.481062,-5.370528,-1.027352,-4.105920,-1.629585,-0.301747,-0.853991,7.107207,7.654672,7.239310,5.017876,7.928634,1.613317,-4.106913,-6.632546,0.545711,4.192077,-2.925296,-4.844214,-6.281238,7.326003,-4.533711,9.220277,-3.902831,1.274262,8.184561,7.013268,6.497339,0.780596,-0.536632,-5.403881,-0.662044,6.495420,6.900126,0.660325,-5.212095,1.553296,2.997197,-1.520858,0.103284,7.717556,9.059922,3.503074,0.959717,-6.235931,-5.088924,5.582331,-8.214514,-8.100713,-4.021897,9.553632,-6.719628,6.162835,5.938599,4.645445,-0.727318,2.384507,3.116688,-2.738755,2.037899,-0.224400,4.572478,-0.414509,7.156539,8.325548,8.957467,-8.026845,2.819598,2.168240,-1.163720,7.362110,6.221326,-4.187420,-4.506452,-7.993196,9.012322,1.920630,-7.091643,-1.468004,-0.894213,-2.910442,-0.501024,1.513817,-2.481423,5.101142,-5.406552,9.051902,3.401441,-3.035634,-6.900243,-7.133589,-0.940633,-5.548452,2.243643,-4.484228,4.958784,2.146957,6.482512,9.155563,6.197642,-2.045047,-3.493236,-9.883600,4.015963,2.295205,6.574731,1.260157,9.937201,-5.693835,-8.207800,1.184278,5.482947,-1.972264,5.667376,9.942239,-7.638630,-5.305593,5.285823,-8.642923,-1.533685,9.005503,5.536250,7.096722,-5.134816,-3.529304,-9.042193,-8.562731,-5.838038,-5.308955,7.830719,0.061146,-7.984413,-7.100992,-1.358881,-0.654446,-9.963608,-8.582514,6.808032,-3.541885,0.971379,-7.770767,-8.574410,-2.048760,5.361709,6.447316,-1.435579,-4.566355,-7.359951,-0.597417,-9.549939,2.953121,-5.445980,-7.198797,7.129637,-2.280052,2.429661,-4.630964,8.291903,0.088792,-5.134814,0.376270,8.304528,5.310414,-8.950689,-5.297495,-2.204199,8.863450,0.226362,-2.062205,4.712133,5.746644,-2.211123,-0.262299,-2.733414,-0.509658,-9.871746,0.969879,-5.465034,-3.977869,6.973254,8.024279,-0.546808,-8.211799,-8.700755,1.729632,5.502438,9.078769,-8.628463,-5.169250,4.882553,5.770167,-8.629401,1.834038,3.458538,-8.845753,-1.099679,1.409033,-2.777293,-6.674175,-4.809684,-5.953562,-6.193926,8.381794,-8.337946,-7.596934,5.266786,3.744793,-0.252163,-7.318523,-7.621580,-2.343327,-7.863019,-0.462769,-9.124822,5.200929,-8.152825,-6.972966,3.760868,2.998608,7.526629,8.847798], dtype = "float32")#candidate|5842|(225,)|const|float32
call_5841 = relay.TupleGetItem(func_5221_call(relay.reshape(const_5842.astype('float32'), [15, 3, 5])), 0)
call_5843 = relay.TupleGetItem(func_5223_call(relay.reshape(const_5842.astype('float32'), [15, 3, 5])), 0)
func_3297_call = mod.get_global_var('func_3297')
func_3298_call = mutated_mod.get_global_var('func_3298')
call_5849 = func_3297_call()
call_5850 = func_3297_call()
output = relay.Tuple([call_5812,call_5826,var_5827,var_5828,const_5829,call_5831,var_5832,call_5834,const_5835,call_5841,const_5842,call_5849,])
output2 = relay.Tuple([call_5813,call_5830,var_5827,var_5828,const_5829,call_5833,var_5832,call_5836,const_5835,call_5843,const_5842,call_5850,])
func_5889 = relay.Function([var_5827,var_5828,var_5832,], output)
mod['func_5889'] = func_5889
mod = relay.transform.InferType()(mod)
var_5890 = relay.var("var_5890", dtype = "int8", shape = (6,))#candidate|5890|(6,)|var|int8
var_5891 = relay.var("var_5891", dtype = "int32", shape = (28,))#candidate|5891|(28,)|var|int32
var_5892 = relay.var("var_5892", dtype = "float64", shape = (420,))#candidate|5892|(420,)|var|float64
output = func_5889(var_5890,var_5891,var_5892,)
func_5893 = relay.Function([var_5890,var_5891,var_5892,], output)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mod.get_global_var('func_5280')
func_5282_call = mutated_mod.get_global_var('func_5282')
call_5895 = relay.TupleGetItem(func_5280_call(), 0)
call_5896 = relay.TupleGetItem(func_5282_call(), 0)
output = relay.Tuple([call_5895,])
output2 = relay.Tuple([call_5896,])
func_5903 = relay.Function([], output)
mod['func_5903'] = func_5903
mod = relay.transform.InferType()(mod)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5903_call = mutated_mod.get_global_var('func_5903')
call_5904 = func_5903_call()
output = call_5904
func_5905 = relay.Function([], output)
mutated_mod['func_5905'] = func_5905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5626_call = mod.get_global_var('func_5626')
func_5627_call = mutated_mod.get_global_var('func_5627')
call_5911 = relay.TupleGetItem(func_5626_call(), 0)
call_5912 = relay.TupleGetItem(func_5627_call(), 0)
output = call_5911
output2 = call_5912
func_5925 = relay.Function([], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
output = func_5925()
func_5926 = relay.Function([], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5754_call = mod.get_global_var('func_5754')
func_5755_call = mutated_mod.get_global_var('func_5755')
call_5965 = relay.TupleGetItem(func_5754_call(), 0)
call_5966 = relay.TupleGetItem(func_5755_call(), 0)
output = relay.Tuple([call_5965,])
output2 = relay.Tuple([call_5966,])
func_5976 = relay.Function([], output)
mod['func_5976'] = func_5976
mod = relay.transform.InferType()(mod)
mutated_mod['func_5976'] = func_5976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5976_call = mutated_mod.get_global_var('func_5976')
call_5977 = func_5976_call()
output = call_5977
func_5978 = relay.Function([], output)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mod.get_global_var('func_4745')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_5993 = func_4745_call()
call_5994 = func_4745_call()
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_6003 = relay.TupleGetItem(func_2337_call(relay.reshape(call_5993.astype('float32'), [16, 8, 14])), 0)
call_6004 = relay.TupleGetItem(func_2339_call(relay.reshape(call_5993.astype('float32'), [16, 8, 14])), 0)
func_2128_call = mod.get_global_var('func_2128')
func_2131_call = mutated_mod.get_global_var('func_2131')
const_6007 = relay.const([5,-4,7,-7,7,10,4,-3,-8,-6,-1,6,-8,3,5,-9,-5,1,-4,-2,6,1,8,2,1,4,8,1,10,7,1,8,-10,1,7,-8,-5,-2,5,8,3,-9,1,8,-5,9,-2,3,7,-7,7,-5,4,-5,3,-6,-3,-7,4,-10,-2,-6,-7,10,5,8,3,-4,1,8,3,10,9,-4,5,-4,4,-5,1,5,-1,7,6,-2,3,3,-6,-5,10,-9,-3,4,-5,8,-4,-3,6,10,-5,1,2,5,-6,-4,10,-5,-8,-8,-10,2,-1,-9,-7,1,9,2,-5,-1,9,-9,-9,-2,3,-2,8,5,9,6,-2,9,-8,-5,8,-4,-3,6,5,-3,-7,1,10,-5,-9,6,8,3,4,9,-7,-1,-3,-4,-2,-9,1,6,-4,-2,-2,6,-2,7,8,2,-8,6,7,-2,-7,1,8,1,6,7,-2,1,-4,3,-4,-7,-5,4,5,4,6,1,-3,-8,-8,9,9,-5,8,-5,3,5,-5,4,6,3,5,5,-8,7,7,-9,7,9,4,-10,-6,-6,3,-2,-10,-10,-8,-3,8,-6,9,1,-9,-3,-4,1,7,10,9,-10,6,-6,-7,-3,-2,-9,-2,8,5,-6,6,9,-5,5,3,-3,-7,3,9,-8,5,-1], dtype = "int32")#candidate|6007|(252,)|const|int32
call_6006 = relay.TupleGetItem(func_2128_call(relay.reshape(const_6007.astype('int32'), [252,])), 1)
call_6008 = relay.TupleGetItem(func_2131_call(relay.reshape(const_6007.astype('int32'), [252,])), 1)
output = relay.Tuple([call_5993,call_6003,call_6006,const_6007,])
output2 = relay.Tuple([call_5994,call_6004,call_6008,const_6007,])
func_6042 = relay.Function([], output)
mod['func_6042'] = func_6042
mod = relay.transform.InferType()(mod)
output = func_6042()
func_6043 = relay.Function([], output)
mutated_mod['func_6043'] = func_6043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_6094 = relay.TupleGetItem(func_5558_call(), 0)
call_6095 = relay.TupleGetItem(func_5559_call(), 0)
output = relay.Tuple([call_6094,])
output2 = relay.Tuple([call_6095,])
func_6103 = relay.Function([], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
output = func_6103()
func_6104 = relay.Function([], output)
mutated_mod['func_6104'] = func_6104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6146 = func_5925_call()
call_6147 = func_5925_call()
output = relay.Tuple([call_6146,])
output2 = relay.Tuple([call_6147,])
func_6155 = relay.Function([], output)
mod['func_6155'] = func_6155
mod = relay.transform.InferType()(mod)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6155_call = mutated_mod.get_global_var('func_6155')
call_6156 = func_6155_call()
output = call_6156
func_6157 = relay.Function([], output)
mutated_mod['func_6157'] = func_6157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6042_call = mod.get_global_var('func_6042')
func_6043_call = mutated_mod.get_global_var('func_6043')
call_6216 = relay.TupleGetItem(func_6042_call(), 1)
call_6217 = relay.TupleGetItem(func_6043_call(), 1)
func_3555_call = mod.get_global_var('func_3555')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_6220 = relay.TupleGetItem(func_3555_call(), 0)
call_6221 = relay.TupleGetItem(func_3557_call(), 0)
output = relay.Tuple([call_6216,call_6220,])
output2 = relay.Tuple([call_6217,call_6221,])
func_6228 = relay.Function([], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
output = func_6228()
func_6229 = relay.Function([], output)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6042_call = mod.get_global_var('func_6042')
func_6043_call = mutated_mod.get_global_var('func_6043')
call_6240 = relay.TupleGetItem(func_6042_call(), 1)
call_6241 = relay.TupleGetItem(func_6043_call(), 1)
func_3077_call = mod.get_global_var('func_3077')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_6256 = relay.TupleGetItem(func_3077_call(), 0)
call_6257 = relay.TupleGetItem(func_3078_call(), 0)
func_5716_call = mod.get_global_var('func_5716')
func_5718_call = mutated_mod.get_global_var('func_5718')
call_6267 = relay.TupleGetItem(func_5716_call(), 1)
call_6268 = relay.TupleGetItem(func_5718_call(), 1)
output = relay.Tuple([call_6240,call_6256,call_6267,])
output2 = relay.Tuple([call_6241,call_6257,call_6268,])
func_6272 = relay.Function([], output)
mod['func_6272'] = func_6272
mod = relay.transform.InferType()(mod)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mutated_mod.get_global_var('func_6272')
call_6273 = func_6272_call()
output = call_6273
func_6274 = relay.Function([], output)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6297 = relay.var("var_6297", dtype = "float32", shape = (10, 3, 2))#candidate|6297|(10, 3, 2)|var|float32
uop_6298 = relay.asin(var_6297.astype('float32')) # shape=(10, 3, 2)
bop_6306 = relay.not_equal(var_6297.astype('bool'), relay.reshape(uop_6298.astype('bool'), relay.shape_of(var_6297))) # shape=(10, 3, 2)
uop_6312 = relay.cosh(uop_6298.astype('float32')) # shape=(10, 3, 2)
func_5256_call = mod.get_global_var('func_5256')
func_5260_call = mutated_mod.get_global_var('func_5260')
const_6315 = relay.const([6,3,5,-5,-7,-6,1,-2,-7,2,8,-6,9,10,-10,6,-2,-5,7,1,-4,10,5,10,2,-7,-6,-3,-6,5,-3,-1,2,-1,7,4,1,7,-5,-9,-9,-7,1,1,4,-3,-7,-3,2,9,-8,-1,6,-4,-4,-9,-1,-7,-8,-10,-4,-3,-1,3,2,3,4,8,1,-2,9,8,-10,2,5,4,9,2,4,3,9,6,1,5,10,-7,-1,-8,-3,-10,-4,-10,10,3,9,-9,-4,-2,-1,-7,4,-9,-10,-5,7,3,-8,4,-7,3,5,-4,9,3,3,-2,-5,-10,-9,-8,-10,10,4,-9,1,6,-6,-4,-6,-6,7,4,2,-7,-2,-1,-7,-2,5,3,3,-3,-2,5,-5,7,-2,6,-6,7,1,10,-9,1,4,-1,5,-8,-2,-5,6,1,-2,2,-1,7,6,-7,10,8,-4,-2,4,6,-3,-3,10,6,10,-1,6,-10,-5,-5,9,-10,-4,-9,-4,-4,-5,-5,4,6,-9,4,5,6,-5,5,-8,-4,-7,1,-10,-8,6,10,7,4,3,3,-6,-7,2,4,7,2,-4,5,10,9,-9,5,-4,-3,-9,-4,5,-5,-3,9,-10,4,-6,8,-4,-3,5,-2,7,8,4,-10,-5,-8,-7,-8,9,-10,3,-10,-6,-2,1,2,1,-5,-3,-2,3,7,-8,-6,7,2,4,8,5,3,-4,-5,8,-8,6,-9,3,-8,1,9,-9,-7,-3,5,5,-7,6,5,-3,-4,6,-7,-9,9,-10,-7,9,2,-9,3,6,4,-1,3,-4,2,-10,7,7,-9,-6,6,2,-1,-4,6,4,1,1,-1,10,-2,-4,10,-9,-6,5,4,9,-10,-10,4,-8,-3,-10,-1,6,1,-4,-9,1,-8,9,-6,7,-1,2,-5,2,-9,-10,3,6,6,-6,-3,-2,3,-4,10,-7,-10,-8,-1,-3,-5,1,-9,-3,-6,-9,5,-1,5,-9,7,-5,7,4,-6,-8,-7,8,-7,10,9,4,5,4,1,2,-9,6,10,4,6,8,1,9,6,-3,1,1,-1,3,-6,1,-1,3,-7,-1,9,6,5,9,-7,8,-10,-3,2,4,-10,-7,-1,6,9,3,-7,9,-6,-3,3,-8,-10,3,-6,2,-3,1,-1,-4,-4,-8,7,3,8,-4,-1,3,5,5,-4,-1,8,-10,9,-7,10,6,-5,-1,-8,3,9,-1,1,-8,-3,-1,-1,7,-5,-4,4,-4,-2,-1,10,-10,-7,5,-4,-4,-10,-7,-3,10,1,-5,-6,3,4,8,5,6,6,-3,-2,9,-9,4,1,2,-10,6,-5,-5,10,-4,-9,10,-10,8,-7,8,3,9,-10,3,-7,-7,7,-1,5,-3,-6,4,5,9,-10,9,-1,-5,-1,-10,-9,-9,10,3,-5,-2,9,-6,9,-8,2,-10,8,-3,-6,-5,1,1,-6,-7,-3,2,4,-8,-3,1,4,10,9,-8,8,1,-9,-9,9,8,4,5,7,-2,-10,10,8,-5,-5,3,-8,1,9,4,5,-1,1,-8,1,-1,-4,-4,-10,9,-4,9,1,1,9,9,7,-4,9,-7,1,-9,8,9,-4,5,5,10,-3,5,6,7,-7,2,-10,-4,4,10,-9,-1,-9,1,-8,9,3,5,-7,5,-1,10,5,-4,7,2,-3,9,7,8,-2,-9,9,6,-6,2,7,9,-5,-2,7,10,-5,5,-8,9,8,-7,-4,6,4,-7,1,-5,-9,1,-9,9,10,7,-7,-10,-6,3,-9,-2,-9,4,-3,6,-3,1,8,7,-3,7,-3,-2,-3,-1,-6,-5,-9,6,-7,-7,1,-4,5,-6,8,-6,-10,9,7,-6,-10,9,8,-5,-8,-7,8,6,5,-4,5,1,2,9,-10,2,3,-1,-5,-8,-9,-9,-8,-2,1,5,6,1,8,7,4,9,-1,10,7,8,-3,-2,-4,-4,-10,10,5,-6,-3,2,-4,-7,-1,10,5,5,7,-10,2,7,-3,2,10,2,2,-3,2,1,6,-3,-1,2,-4,10,-6,-1,-4,8,10,-9,1,9,3,9,1,-2,-8,10,-7,-1,-5,-4,5,5,2,-8,-8,-8,-6,2,-9,-2,1,1,2,2,4,10,-8,5,-1,-4,-1,-1,9,8,10,-5,2,10,7,5,2,3,10,-9,-2,-9,-5,-1,6,4,-9,-8,4,9,3,-7,7,4,-7,-8,8,-3,8,9,3,-1,-10,-7,6,-10,-10,-4,6,-4,-1,-3,10,1,-9,-3,4,7,2,10,10,8,8,6,-10,-8,-5,-9,6,4,-2,6,-10,2,8,9,-4,7,9,-8,6,-9,7,-5,-1,8,5,-1,-8,-6,-5,-4,3,2,7,-10,-8,-5,8,7,10,-3,9,9,-7,4,1,2,1,6,4,10,-5,-6,-4,10,-10,8,-9,9,-3,9,-2,10,4,1,1,9,-8,-9,-8,6,-4,-9,3,-10,-2,-4,9,-2,-9,-1,6,-8,-5,-7,-6,2,9,-4,1,1,-4,-10,1,7,6,-2,-10,-7,7,-7,-6,4,10,8,-3,-7,-5,3,-10,6,2,8,-8,6,-6,-8,-2,8,10,5,4,-4,10,5,-10,4,8,-4,5,-2,3,-3,-2,-8,6,8,5,3,1,-5,-8,3,-3,2,6,-10,4,1,6,-8,5,6,-10,-7,-6,2,-3,10,3,-5,8,6,-1,-7,10,-3,5,-5,8,-6,6,10,4,-5,-4,5,-6,-1,10,5,-5,-5,8,5,-3,2,-10,1,2,2,6,5,10,2,8,-2,-6,3,-6,-1,1,10,-6,7,7,-4,-9,-9,-9,-9,-8,9,-5,-9,-5,3,6,7,-6,-1,-6,-8,-8,-1,5,5,10,-9,-10,-7,-9,-9,6,10,-4,5,-10,4,9,6,-7,9,-6,-2,5,9,2,2,6,7,2,10,4,-9,-9,-7,5,4,4,-6,-5,-4,3,-4,7,8,5,1,-2,-2,-7,-9,-7,-2,9,10,2,-3,-2,-5,10,8,9,-7,-2,-4,-2,-1,-6,-9,-2,-2,-5,-3,-4,7,10,-1,7,-2,9,-9,-8,7,5,2,-9,6,-9,-2,-5,-9,4,-6,8,-3,-5,-7,7,9,-1,1,-5,-3,-4,-9,6,6,10,5,1,6,-2,-10,-6,-1,2,-9,9,-1,-9,-3,-10,6,-10,-1,-9,-8,-9,-10,-9,-4,-2,-6,-6,-5,-9,1,7,3,-8,-10,-9,-6,7,5,-6,5,-5,1,1,-8,6,2,-9,-1,-9,-2,7,9,5,-10,-7,2,-7,3,1,-10,1,8,-9,6,10,-6,-9,3,-1,6,-9,7,-3,3,10,-1,-7,2,10,2,8,-8,-3,1,-7,9,7,-1,-6,6,-10,-10,6,1,-2,7,-10,-6,-10,-4,-6,-1,1,-5,6,5,-6,3,5,-9,6,6,3,-7,-9,-7,8,-7,-10,5,4,4,-3,4,-10,6,9,1,3,4,-3,-8,1,-9,10,8,4,-3,-10,6,2,-5,-5,4,6,-2,8,-7,5,-1,10,8,3,10,10,3,-1,2,7,-5,-3,10,-7,2,3,-9,-3,6,10,-9,-5,2,-3,9,10,10,3,7,-7,3,2,-2,1,-5,5,3,8,-3,8,2,-7,3,2,-9,-9,-10,8,-10,-9,2,-8,-5,8,9,3,-6,-4,2,9,7,-6,10,9,3,-2,-6,-9,9,9,5,-9,-4,-10,-1,8,6,4,-7,4,5,-8,8,-1,5,7,4,3,-9,4], dtype = "uint32")#candidate|6315|(1440,)|const|uint32
call_6314 = relay.TupleGetItem(func_5256_call(relay.reshape(const_6315.astype('uint32'), [8, 12, 15]), relay.reshape(const_6315.astype('uint32'), [8, 12, 15]), ), 0)
call_6316 = relay.TupleGetItem(func_5260_call(relay.reshape(const_6315.astype('uint32'), [8, 12, 15]), relay.reshape(const_6315.astype('uint32'), [8, 12, 15]), ), 0)
func_3488_call = mod.get_global_var('func_3488')
func_3489_call = mutated_mod.get_global_var('func_3489')
call_6323 = relay.TupleGetItem(func_3488_call(), 0)
call_6324 = relay.TupleGetItem(func_3489_call(), 0)
bop_6330 = relay.bitwise_xor(uop_6312.astype('int32'), relay.reshape(uop_6298.astype('int32'), relay.shape_of(uop_6312))) # shape=(10, 3, 2)
func_6272_call = mod.get_global_var('func_6272')
func_6274_call = mutated_mod.get_global_var('func_6274')
call_6335 = relay.TupleGetItem(func_6272_call(), 2)
call_6336 = relay.TupleGetItem(func_6274_call(), 2)
output = relay.Tuple([bop_6306,call_6314,const_6315,call_6323,bop_6330,call_6335,])
output2 = relay.Tuple([bop_6306,call_6316,const_6315,call_6324,bop_6330,call_6336,])
func_6338 = relay.Function([var_6297,], output)
mod['func_6338'] = func_6338
mod = relay.transform.InferType()(mod)
mutated_mod['func_6338'] = func_6338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6339 = relay.var("var_6339", dtype = "float32", shape = (10, 3, 2))#candidate|6339|(10, 3, 2)|var|float32
func_6338_call = mutated_mod.get_global_var('func_6338')
call_6340 = func_6338_call(var_6339)
output = call_6340
func_6341 = relay.Function([var_6339], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6155_call = mod.get_global_var('func_6155')
func_6157_call = mutated_mod.get_global_var('func_6157')
call_6357 = relay.TupleGetItem(func_6155_call(), 0)
call_6358 = relay.TupleGetItem(func_6157_call(), 0)
func_3793_call = mod.get_global_var('func_3793')
func_3797_call = mutated_mod.get_global_var('func_3797')
const_6378 = relay.const([-0.736645,3.159907,4.794921,4.438064,-0.159657,0.559113,-7.597007,-8.237999,-6.417257,-6.464252,1.827286,-6.487908,9.326183,-5.795291,5.377900,6.136637,6.112129,1.738897,-3.869314,-6.760481,-2.532650,8.909862,7.824577,-5.341401,-8.491774,-3.475379,3.305393,8.165168,8.320532,9.208601,-4.031594,-5.232988,6.390091,-6.534474,-5.521222,-0.059854,5.871577,-0.888854,-2.692961,-1.411812,5.964200,-6.219856,2.430150,5.224847,-9.132464,8.959790,2.534764,-1.041944,9.519492,-3.923158,9.507247,-8.878193,-0.525829,-2.598624,-9.959754,8.388232,5.763444,-5.847188,-0.157588,4.257224,-2.367588,3.182316,-2.956584,-1.969687,0.935281,8.542881,2.903132,6.056770,-0.473548,-8.525900,-2.533045,-6.535946,-3.099927,-1.632408,-2.184462,5.605744,-6.593741,-7.371240,-9.088306,-2.643202,5.529843,-3.891226,-4.025372,8.287302,9.602190,0.953392,8.045526,6.268989,-8.454201,-4.669237,0.473214,1.861067,1.214369,-7.334055,-3.933329,9.521476,8.768329,-8.058760,1.036807,-9.733297,-5.463959,-8.615370,-9.980670,7.892966,5.492034,6.747955,9.229373,-7.151353,9.640039,-3.565828,5.849093,5.800041,5.182747,-0.012131,8.985474,-3.933123,-6.397656,-6.991823,-2.630493,9.926976,6.466591,0.296452,8.071812,2.724091,-6.081177,-0.894679,8.171367,-1.411719,-0.184540,9.934718,-5.358167,9.390407,-4.546040,6.513854,1.063622,-4.015550,8.989714,9.823377,1.761750,2.068155,-5.802961,-5.925633,-6.765791,-4.436724,7.112605,-1.398564,4.342453,8.899961,7.890252,1.417801,7.022847,-7.041084,0.027993,-2.741953,-9.108739,-0.285641,6.422072,1.469174,-0.304408,-9.204298,0.261726,7.542745,-6.441317,9.232628,5.821268,-8.926248,-1.444479,4.549683,-7.905726,0.793270,-4.135586,5.744795,-2.658286,9.605400,3.398676,-3.429621,-2.790930,1.670122,-7.785015,8.156739,6.763505,3.590191,-9.231764,5.705435,-8.716562,9.778326,3.482171,-0.642047,7.847589,-7.829899,-0.493926,-5.459913,-8.593073,4.480859,-3.040406,-4.365524,6.984257,3.762650,-5.964627,-3.515792,0.944816,2.265782,4.676409,-4.887879,6.935127,7.309193,-9.948582,0.037305,9.026590,2.958006,0.063680,-1.825609,8.928500,-8.588990,-4.522643,-8.129445,-1.262318,-8.619988,-6.261257,4.201879,8.371153,0.166402,-1.052341,-3.754711,6.929818,3.369804,6.736124,0.260392,1.819496,9.707892,2.801861,-3.660730,2.512176,7.196954,6.513983,-3.403049,6.775227,-5.687595,-0.338694,3.181969,3.300752,-1.839712,-5.924626,5.114546,2.332081,-0.783719,0.852742,-0.777741,0.562816,-0.795231,-6.473133,-7.611403,-0.447116,6.022260,0.688900,-5.808212,7.757665,-5.517487,0.581028,-6.952005,-9.102789,0.937501,0.021064,-3.642852,9.621880,3.646863,5.543761,1.688869,6.846006,-3.157414,3.970006,7.123741,5.164441,1.111491,2.617657,1.589413,-0.986736,4.760661,6.900235,-0.778814,-8.720585,-4.706211,8.618398,6.619160,1.230533,-0.291873,6.241170,1.574919,1.101762,8.518702,-7.606301,-3.894761,0.691860,-3.018771,8.997008,6.920123,0.952364,-3.950829,3.666609,9.464410,8.429895,4.919408,5.383466,-7.950328,7.927098,3.133331,-3.438054,-1.475723,-4.295502,-5.042754,-2.857625,1.559706,-4.286813,-4.557538,-0.426305,-7.863426,0.583356,-4.236187,-9.280377,8.001182,-8.275972,-6.487872,-4.493122,-3.290720,6.576414,9.312035,-2.884847,5.316434,-7.315171,-6.449521,5.001789,-0.046056,-0.625302,2.091324,4.307243,3.587435,-8.022455,6.981189,-1.275527,1.735168,-6.085866,1.554640,1.631455,6.345175,9.315485,-6.465566,-3.201066,4.307786,6.525654,-1.118818,-3.798822,-3.454354,4.002240,8.026121,8.942106,3.657431,6.299709,-8.041986,-9.509995,-8.049539,3.717356,-1.175887,-0.073474,2.878480,8.750964,-7.801521,5.466734,-1.974393,-4.668788,-3.680182,-1.543291,-7.276456,5.799274,-0.471646,-5.891990,1.412340,-1.012441,-5.005702,7.611036,-4.752459,0.138999,-0.858242,-1.389539,1.974935,5.317645,-6.602809,3.913745,2.651744,-9.853951,-2.846261,0.297266,-6.912532,-6.419265,-9.299104,-0.219392,-0.281329,8.034035,-8.277195,6.225976,4.067423,-0.663317,-8.038468,-2.843613,-4.869650,3.007201,1.214988,-5.012180,-2.640460,-4.840506,-3.188469,-7.985339,-4.316419,-3.810748,6.591990,-7.453582,-9.923341,-1.997709,2.695050,-1.743228,1.878246,-5.751646,-1.871620,0.628413,2.439102,2.008223,-2.956990,-9.870349,-7.698443,-8.144505,-0.018001,-0.784531,6.382126,3.202494,0.080209,-3.542089,-7.577380,5.466104,5.579509,1.365853,0.030943,-9.030560,-5.636409,-5.489310,9.508510,-5.530539,-8.615545,-0.010430,-2.067388,-5.008420,-0.388846,-4.767444,9.196938,2.708764,-9.621287,-0.931814,-4.207356,-6.693025,6.344882,6.623412,9.179567,4.502106,-5.007440,6.483442,0.317002,-5.369589,-0.437448,-1.622347,-9.329324,-1.248997,3.194015,-9.762196,8.087618,-0.314997,-8.610512,-1.802298,-7.314868,7.327853,8.556804,6.007268,-3.409711,-0.933156,-0.383915,-5.704361,3.614986,-9.285655,0.813211,-6.249509,3.594195,-1.198101,-1.501024,0.510904,-9.980634,0.876225,8.593025,-2.512667,-6.844465,-8.918283,-0.849778,5.042424,4.561110,-2.467507,2.243742,7.047665,4.426926,-1.593968,-3.942451,-9.637092,-2.632023,2.394956,-2.334092,1.949989,-6.479730,-9.341082,-0.290156,-4.455963,5.792982,8.042463,9.238056,3.396150,-6.889590,-5.897015,6.044906,9.484587,-8.796168,8.687087,-1.942454,6.369130,-2.143162,2.442389,-3.481129,-7.564960,-4.288774,-9.508176,-9.375084,5.222326,0.628477,-1.188727,-7.875238,-4.167654,-5.085988,-7.676189,-9.839497,2.018751,2.445117,7.850705,1.220985,3.221595,2.271505,4.924767,8.996116,-8.051799,5.063177,9.832091,-5.901344,-7.611497,1.350944,-5.615851,4.331043,-8.498923,-9.119797,-7.826745,6.417309,-3.610001,4.473268,-2.968778,-2.045539,2.195803,2.737873,3.950775,-7.743717,-2.064975,-6.112236,2.367714,9.212691,-5.062141,9.511984,5.741531,-2.877648,-5.836528,0.276952,-8.200069,3.212532,5.645564,-5.396043,1.035428,5.375549,-5.488494,-1.040634,2.615522,3.917576,9.020951,-4.851855,5.249478,-3.059649,-2.761624,3.030466,4.641983,-6.786270,4.351313,-1.180513,3.706114,8.641026,6.169335,7.339365,6.129239,6.956175,6.238004,2.004707,-7.124891,-1.025100,9.643406,-6.944108,6.905919,-9.420645,8.512553,2.202176,-6.866147,9.987554,-8.461127,-0.392926,9.195851,-5.434533,6.857036,-3.453510,-0.101589,-4.902017,-8.970025,-9.340554,4.386758,-9.727577,6.459141,6.895307,-5.596704,-2.844827,0.423405,-1.425288,-5.552849,0.454867,-4.356831,5.176308,2.656660,2.317268,-4.141669,1.534383,-9.085551,6.026197,8.342885,0.553802,8.330278,-8.026271,-8.875429,2.735834,1.639348,-7.214786,-6.578720,-9.732017,0.333046,2.804315,-7.943493,6.603338,3.748680,-6.435029,4.633710,-4.207135,9.526586,8.694910,-7.510292,-6.601177,0.405881,5.887288,4.201412,3.597887,5.708936,-8.708136,5.751148,-0.567189,-3.342139,3.270160,-7.108771,-7.848939,-8.515065,1.131596,1.456181,9.214027,-2.315255,-5.209070,-2.607539,-9.857900,2.920534,9.452489,-4.362352,8.779087,0.650152,-6.897974,-2.254360,6.405510,-8.771658,7.022587,2.885599,8.574432,-2.903628,6.823342,1.447564,-2.446189,-3.747454,-2.344153,-7.927088,-7.139393,-0.547723,2.878140,6.504839,-3.976978,-0.081082,7.135378,-8.921881,9.211397,5.194573,8.852693,6.360798,3.140313,-3.669388,-8.664120,3.978963,-5.244908,-4.265596,-1.011097,-3.598168,5.029115,3.815424,-8.701825,2.400562,-4.442235,-3.298757,-5.649006,1.281468,-6.936306,2.675245,-8.151117,3.538492,-8.558560,2.416695,6.361179,6.832508,-7.933512,-8.731269,-2.688562,-6.154458,-9.320809,1.123221,-8.284786,-7.096553,-2.011836,-6.580649,-5.343645,2.062110,1.540925,6.807321,-2.999125,4.069183,0.906500,-2.110757,-5.904526,-7.333100,0.928712,6.160039,9.991677,-3.161350,2.941403,-0.963859,-3.397616,-4.113382,-3.507131,4.196832,0.176352,2.248035,-5.416334,-0.492686,6.941116,2.471242,-2.773382,-7.513281,-3.133355,0.355803,4.661174,5.599757,4.743511,7.958343,5.061239,5.349373,-6.583465,-2.365957,-8.120353,7.564463,1.341605,-0.507835,3.247251,9.924565,-5.092097,7.709158,5.496268,9.911942,-4.384054,-4.538227,1.641027,-4.438529,8.167953,-3.938745,-6.066337,9.145093,-4.338722,8.421800,-8.718750,7.436414,-9.314069,5.532528,4.440684,-1.343409,3.000390,-5.478504,-1.758878,-7.031488,9.545517,1.023388,-1.142621,7.905844,9.343890,-1.627000,-6.307731,-3.170823,-8.358589,-2.934287,-6.392909,-8.008485,1.930109,7.843644,8.737629,9.441346,-7.061070,-1.056442,2.481015,-4.216062,8.516679,9.663097,-7.732701,-9.922552,8.963629,8.698460,2.728107,2.414616,-9.523311,2.979835,1.280334,-7.684454,8.823201,-9.655809,-6.441194,0.483015,-6.781767,2.934983,-6.175447,1.023665,-9.586880,-6.463787,-2.412002,0.750611,-2.655133,8.325455,4.744291,5.736455,-0.964818,-3.387018,-2.230766,-9.539187,-8.957391,-0.179857,4.059286,-6.595847,-9.121616,-9.232967,-1.732023,2.690521,-1.698272,-9.358801,-9.086810,-8.237618,-2.581291,5.726491,7.776437,0.917315,-9.010301,-3.318780,4.366814,3.811440,0.310293,9.772130,0.015601,-9.492813,5.824837,-0.471051,3.343609,-3.526600,1.197558,-9.977450,-5.547554,-6.281463,4.363878,-8.612968,2.470923,-9.472036,4.663475,-0.040142,-7.921297,-4.823741,-4.733299,8.823925,-9.192464,5.817986,-5.942671,-1.462536,0.245171,0.494445,6.436496,1.501986,3.098044,-7.819695,1.219736,-9.338325,7.754372,4.653890,6.266228,2.341185,6.831546,5.830077,2.661876,-6.513027,-9.219131], dtype = "float64")#candidate|6378|(936,)|const|float64
const_6379 = relay.const([-2.382243,6.826097,-6.248481,8.168068,-0.894902,6.489064,-9.859567,5.124815,-9.633471,-7.573927,-7.431223,8.069695,-1.862990,-1.416780,-4.301548,4.313880,-9.109112,2.556348,2.047848,9.828283,0.241763,-8.797184,9.221513,-9.646572,-5.561476,4.906596,-4.428543,9.896752,-4.169703,-4.913292,2.508322,8.192925,-1.429436,-0.951865,-6.464160,-6.708617,2.626624,8.960681,-9.542980,-1.286247,2.920717,9.416702,9.648096,-8.940620,-8.681752,-1.552391,-2.996130,5.004644,-2.345745,3.670978,-9.699468,-6.577392,-7.421814,-9.290077,0.997858,9.524626,9.747479,-6.518591,2.682594,-7.563919,-5.525719,5.184055,1.819563,2.907658,3.686753,-5.919018,-8.394010,4.832855,-0.996027,9.578768,-0.985588,-0.086064,2.035737,-1.444901,-7.642340,-6.744587,6.617196,5.254408,2.031841,-8.810970,6.356322,-0.464934,-3.705324,-4.378941,6.603029,-8.275388,-2.991043,0.748730,-1.473548,-9.476404,3.507265,8.232754,8.119416,2.119967,3.770710,8.158686,-1.808425,1.393365,7.400789,5.850865,3.803384,-9.747518,4.452281,-5.316748,-2.011030,-0.260187,9.399867,-6.733583,-7.743627,5.444616,-3.032814,0.284585,-7.279753,5.594245,-9.583372,5.599057,-5.464337,-7.161587,4.181107,1.379156,9.986262,5.559769,0.501350,4.595499,6.511331,-9.757400,7.555675,-4.743526,-1.032260,3.031985,0.574723,-1.638583,1.186231,8.180245,8.528017,-7.779941,-4.655572,-8.281046,6.889490,7.854075,-4.466341,-4.180793,7.243291,-5.521440,-4.870498,3.424833,-4.072048,-2.669638,-0.609054,-1.083792,-8.869784,-4.848414,7.977589,8.102738,9.611760,9.643072,-8.647716,4.756561,2.036806,2.845735,-5.006041,9.091705,-4.842020,-1.767225,2.978192,4.210648,3.787196,-9.711399,-9.708557,3.634115,-3.344920,4.172687,8.889158,7.398888,-0.233880,-7.871146,7.195135,6.577768,1.645856,-2.461843,2.794172,7.563732,5.788129,0.416226,2.088535,3.070692,9.930048,-7.824071,-5.663365,5.807038,-9.171835,8.688156,6.112126,1.270730,-9.387544,9.432786,2.248979,-3.057669,-5.430329,-1.010219,-8.209810,-9.410010,7.078876,-3.414932,-1.702089,-4.302779,-7.646179,-8.352687,8.543718,-2.583245,4.329386,5.786945,-5.857147,0.771951,4.450462,-1.078091,-9.322880,2.194106,6.589931,1.842921,-1.805757,-0.819708,2.884577,-8.992962,0.766601,-0.001931,7.990357,0.547121,8.361004,-9.787448,7.009312,-5.499704,9.627011,1.404105,-0.608443,-1.958182,-4.569663,2.358452,2.068998,-8.338001,-9.929364,5.106464,-2.482161,-9.980258,-5.525120,-8.031965,1.448394,0.150452,3.816017,-0.134514,8.518188,-9.312002,1.371458,1.302713,0.727334,6.769160,-3.464399,4.342313,-7.829329,-4.047584,3.826870,-3.816309,2.686550,0.785851,-1.967560,-2.331411,1.172097,0.612941,-9.082903,4.887376,1.257490,-7.448454,-1.288966,-1.283639,6.773039,0.211026,-9.777587,8.712295,7.430208,-6.737094,-7.163949,2.044403,9.120141,5.396898,5.049690,4.169735,3.700952,-8.738859,-0.825635,-9.883698,1.082424,-7.917599,8.732292,6.283748,-3.311205,-6.355973,0.081408,-9.392952,1.188376,-8.528017,3.574978,7.113116,8.201816,-3.988339,-1.997654,9.486900,-6.139232,1.396354,-2.502837,-2.352732,-6.575780,6.271834,-3.111608,-0.632873,7.772482,-9.800804,9.994941,-2.552333,7.328830,-9.417546,7.616298,2.056277,1.033021,-2.672023,2.447858,-5.697257,5.196242,4.430579,-2.521889,6.388119,0.472023,-6.648971,5.891460,2.094481,1.319939,5.507362,-9.699123,-3.245713,7.423612,7.664240,7.688241,8.199068,1.684028,-6.536804,-2.604438,-5.241102,0.094259,-1.427024,3.923960,1.551737], dtype = "float32")#candidate|6379|(350,)|const|float32
call_6377 = relay.TupleGetItem(func_3793_call(relay.reshape(const_6378.astype('float64'), [6, 12, 13]), relay.reshape(const_6379.astype('float32'), [350,]), ), 1)
call_6380 = relay.TupleGetItem(func_3797_call(relay.reshape(const_6378.astype('float64'), [6, 12, 13]), relay.reshape(const_6379.astype('float32'), [350,]), ), 1)
uop_6393 = relay.sin(const_6379.astype('float64')) # shape=(350,)
func_2252_call = mod.get_global_var('func_2252')
func_2255_call = mutated_mod.get_global_var('func_2255')
call_6401 = relay.TupleGetItem(func_2252_call(relay.reshape(call_6357.astype('float32'), [16, 8, 14])), 0)
call_6402 = relay.TupleGetItem(func_2255_call(relay.reshape(call_6357.astype('float32'), [16, 8, 14])), 0)
func_6228_call = mod.get_global_var('func_6228')
func_6229_call = mutated_mod.get_global_var('func_6229')
call_6403 = relay.TupleGetItem(func_6228_call(), 1)
call_6404 = relay.TupleGetItem(func_6229_call(), 1)
const_6406 = relay.const([-3.387748,-7.563019,-8.530370,7.247171,-0.734007,-3.824261,-5.608412,-5.818870,0.442409,7.701182,0.610886,1.615691,5.624594,1.432288,-5.679772,9.469237,-9.004393,0.507410,-4.658653,8.895593,-6.371239,9.942110,-6.912902,-1.620762,-0.687490,-8.134773,-1.923260,3.990475,-1.228530,2.509198,3.336947,4.118288,-7.718014,8.163524,-5.767702,-5.200789,-6.179651,5.172411,1.357743,-3.370068,8.139365,5.249357,0.174953,3.899459,-9.630929,-3.740344,-7.318114,3.838083,-7.832318,8.289317,2.268741,9.497833,-5.871916,-0.247249,-1.847866,1.344292,5.078375,9.773574,1.481337,-6.839796,-9.556614,-9.238451,2.183352,7.352665,-4.916385,-9.212250,-9.816529,9.443722,-2.736475,0.113105,-8.491097,-6.783021,1.342089,-5.336708,-5.512577,-4.250334,9.987526,4.835153,7.854475,-0.837985,-7.508185,8.507703,4.166451,0.526475,8.907403,-3.977465,2.180273,8.537222,2.296652,-0.534033,3.757900,-1.296427,4.760244,0.110822,-2.442630,-1.658110,-6.214142,-0.512512,-5.848596,0.481363,-8.272625,6.581089,-7.546456,-3.350364,0.734850,7.621193,-6.435243,9.740485,-1.332838,-6.544959,6.061401,1.704315,-6.454139,8.939210,4.233084,-7.132602,-7.685945,4.184273,2.679533,-4.473541,-7.016401,4.611422,8.403303,-9.901942,0.463287,8.801012,9.699335,-9.645851,-8.131829,-5.730161,-7.682546,2.694255,1.538765,4.066492,-4.160453,6.689070,1.912348,3.734263,7.410075,-9.199760,-9.990083,0.145091,-4.358008,-5.560450,6.246262,-1.964397,5.251781,2.688422,6.016205,8.219157,-7.195744,-3.409451,4.144889,6.445582,-9.212954,5.221704,0.240973,-9.411089,-9.344487,-6.327505,-1.904971,0.741714,-7.754714,-6.913962,3.730045,5.472668,-9.158559,-3.214608,-7.184186,-9.113752,6.772164,6.996402,4.380556,4.511864,-7.924772,0.314110,-4.630902,7.012885,8.189428,-3.600880,9.970979,5.193629,-5.003883,-8.091063,0.323924,4.742342,-6.519476,8.371471,-8.799977,-2.997933,-5.174343,3.421846,-9.291933,4.086717,-7.805196,9.189361,6.696095,4.143434,-5.847439,-5.264088,9.891171,-4.548190,6.619537,8.186609,-5.942905,-0.562016,7.342693,-6.062513,-0.351402,-5.983711,1.795669,9.645684,-9.679103,-0.344433,-1.803808,-5.221997,-1.884361,1.136380,-2.857772,-8.731533,-3.937637,1.896905,-3.347966,-6.752567,1.138564,-5.348387,-1.547466,6.698445,-1.143229,8.166249,0.374803,-1.695946,-8.102577,3.010096,-5.948524,-7.535636,-5.370705,2.202043,7.071606,-2.649469,-2.596203,1.120299,-2.700430,4.983739,5.380429,2.972241,-2.640697,-7.608918,1.398320,7.552117,2.534720,1.631698,7.401069,4.755298,-6.288607,0.388783,-0.669768,0.880318,9.765703,1.356010,8.180149,0.481090,8.943335,-1.499554,4.514706,-7.013629,9.673674,0.403360,-7.743072,5.343132,-2.736316,4.230969,-7.396966,7.623604,3.575043,-6.686013,1.083082,-2.907858,7.132817,0.757931,-4.615236,-4.227486,5.111505,-8.123750,-0.350666,-6.147114,-2.262238,5.632271,-7.779113,7.216725,0.270975,-4.563486,0.141647,5.627437,-3.544592,-0.307083,3.670810,-4.511616,-5.015497,-5.114169,7.054953,9.509244,1.668913,-1.139192,8.353336,8.630856,0.527563,1.221099,5.993818,2.178664,4.387662,-6.884177,-0.952812,-0.126532,-4.426075,4.267184,5.110718,8.521724,7.661860,7.841012,9.392382,-2.011807,-4.249789,-1.701771,-0.776670,1.447989,9.228805,-8.874821,8.395933,-5.083442,-8.023624,7.923994,-3.068041,-6.857738,-9.139015,-0.372134,-7.980021,-2.097208,-6.486841,-5.597157,-0.950979,-9.240244,-6.873710,-0.136628,4.093179,7.048167,-7.644057,-4.773203,1.347702,4.158465], dtype = "float64")#candidate|6406|(350,)|const|float64
bop_6407 = relay.logical_and(uop_6393.astype('bool'), relay.reshape(const_6406.astype('bool'), relay.shape_of(uop_6393))) # shape=(350,)
var_6416 = relay.var("var_6416", dtype = "float64", shape = (936,))#candidate|6416|(936,)|var|float64
bop_6417 = relay.mod(const_6378.astype('float64'), relay.reshape(var_6416.astype('float64'), relay.shape_of(const_6378))) # shape=(936,)
output = relay.Tuple([call_6357,call_6377,call_6401,call_6403,bop_6407,bop_6417,])
output2 = relay.Tuple([call_6358,call_6380,call_6402,call_6404,bop_6407,bop_6417,])
func_6420 = relay.Function([var_6416,], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
var_6421 = relay.var("var_6421", dtype = "float64", shape = (936,))#candidate|6421|(936,)|var|float64
output = func_6420(var_6421)
func_6422 = relay.Function([var_6421], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mod.get_global_var('func_6272')
func_6274_call = mutated_mod.get_global_var('func_6274')
call_6428 = relay.TupleGetItem(func_6272_call(), 1)
call_6429 = relay.TupleGetItem(func_6274_call(), 1)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_6435 = relay.TupleGetItem(func_2337_call(relay.reshape(call_6428.astype('float32'), [16, 8, 14])), 1)
call_6436 = relay.TupleGetItem(func_2339_call(relay.reshape(call_6428.astype('float32'), [16, 8, 14])), 1)
output = relay.Tuple([call_6428,call_6435,])
output2 = relay.Tuple([call_6429,call_6436,])
func_6440 = relay.Function([], output)
mod['func_6440'] = func_6440
mod = relay.transform.InferType()(mod)
output = func_6440()
func_6441 = relay.Function([], output)
mutated_mod['func_6441'] = func_6441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2136_call = mod.get_global_var('func_2136')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_6509 = func_2136_call()
call_6510 = func_2136_call()
output = call_6509
output2 = call_6510
func_6511 = relay.Function([], output)
mod['func_6511'] = func_6511
mod = relay.transform.InferType()(mod)
output = func_6511()
func_6512 = relay.Function([], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5626_call = mod.get_global_var('func_5626')
func_5627_call = mutated_mod.get_global_var('func_5627')
call_6582 = relay.TupleGetItem(func_5626_call(), 0)
call_6583 = relay.TupleGetItem(func_5627_call(), 0)
func_4509_call = mod.get_global_var('func_4509')
func_4517_call = mutated_mod.get_global_var('func_4517')
const_6597 = relay.const([[-2.738308,-2.772073,-1.199237,-3.276463,4.981114,2.621722,-7.102100,6.830198,-4.234586,-4.367396,-2.959340,-7.367284,-2.912096,-7.685907,1.785890,9.286003,0.629699,-7.332704,-0.232592,8.233585,5.366545,-2.584159,-0.241040,8.720946,0.594050,-8.828837,4.416610,9.163243,3.173804,4.486024,7.150840,-1.024119,-6.868545,5.713745,6.490215,7.922632,5.756446,4.707283,6.884325,-9.223482,-2.015052,0.074929,6.721405,-5.821648,-5.898796,3.798630,-4.860036,-6.799642,9.558918,5.935033,-9.713396,8.926687,-5.145886,6.571940,-5.495741,-6.183364,7.834838,-6.973653,-6.396782,3.451220,-7.586847,0.173375,-8.462623,-1.960397,3.949977,4.611070],[-3.277604,1.414214,3.829793,-9.164844,-4.463505,-3.102886,-1.682095,6.621117,6.402546,-7.549767,3.486154,7.367687,5.070645,9.704827,5.224172,7.275931,-1.620122,4.130586,6.114752,9.463718,-1.619872,4.691673,-1.375600,-1.721052,5.445296,-1.701894,-8.962770,1.634048,3.496090,-0.831868,9.585579,-1.907174,-7.014505,7.060400,5.901755,6.438840,-8.352235,1.836294,8.407367,8.507549,-8.078613,-9.007161,9.403201,-0.018236,-9.878196,3.253314,-0.285267,7.847521,5.813009,3.470450,4.044552,3.206951,2.437534,0.836739,-6.125988,-6.489040,-4.215070,0.807848,-0.911600,-3.957377,-6.138976,-1.515804,8.872728,9.483151,-6.410439,0.550120],[5.679390,2.898524,2.879639,-2.974480,7.918334,-5.973763,6.304839,6.625726,-4.726098,-5.293966,-7.026185,3.648471,7.014761,-3.340497,7.000310,3.533473,-3.714451,-3.297115,0.035163,4.768949,9.987548,-1.318685,1.263517,-2.364665,0.098107,-5.473186,4.243808,2.588235,-6.452594,-4.232218,-7.530310,1.493579,-5.471742,-9.640782,-7.522784,8.680097,-0.941838,-7.582663,2.913112,7.480311,9.816291,-6.439523,2.729554,5.898804,-6.266753,-4.529569,-2.379550,3.799976,5.411327,-7.214847,-6.937726,6.533400,-0.598362,-4.056107,-5.264616,-6.152901,-0.220233,-9.344741,6.882411,4.934843,8.255365,-5.500024,3.763948,-2.560820,2.969859,-0.563808],[-5.593593,-1.138846,8.035924,6.697170,-7.381231,-4.479818,-6.342970,2.642079,-7.552635,8.614205,-5.783628,5.681924,-9.407513,-7.473349,5.173926,3.632101,-2.143861,-1.539567,-4.004618,4.632763,1.690465,5.581667,-9.246713,1.600822,-9.786271,-8.685208,-5.490674,-5.109350,5.328928,1.298578,-3.228822,3.056704,-9.275494,-5.244213,2.217284,-0.702455,3.830055,-9.254952,-4.675771,8.764342,7.172435,6.310283,0.334985,-2.381147,-0.728917,3.960337,-8.961724,3.633835,-4.146430,2.459771,9.963097,5.230748,-8.478950,-0.204718,7.257399,5.041042,5.584086,3.777189,-0.485169,0.711425,5.190095,6.377111,4.330523,-2.176691,2.227866,3.931129],[6.280965,5.379974,7.734012,-2.406441,6.527752,9.328293,-3.629622,-0.853958,-2.621170,3.549650,-1.452363,4.691718,2.810724,-7.960140,7.174969,4.767850,-6.022223,-3.449192,-9.012835,-2.173538,-7.771601,-0.912420,-1.446442,-7.301960,4.793440,-3.432395,-6.476430,1.646167,-5.065779,-9.670476,-7.388395,-2.088402,8.945744,-3.286729,-5.792299,2.906870,-7.578568,2.028901,-0.840864,5.044566,-8.211016,-1.523846,1.335680,-7.149422,6.224791,0.785875,9.246577,-8.931972,7.865220,-9.632637,2.648087,-0.063999,-5.387396,2.053434,5.091516,-0.217075,-7.221230,3.154186,-1.707722,4.501967,-7.373372,0.028100,7.073601,-8.986636,-7.467218,-3.378531],[2.517252,6.176272,-2.995320,-3.212863,5.979116,5.521295,3.655838,6.148363,7.136525,8.034199,-9.923978,3.238530,-0.485440,-1.236324,-7.520125,4.294638,9.081762,8.963950,5.428335,-2.572751,-3.303400,-8.260983,-4.422515,-2.428096,4.641864,2.414753,-4.843331,8.799589,7.736732,-1.320438,-4.628422,1.209674,-2.257267,5.923465,-7.191001,0.222042,-4.729236,2.784333,9.997556,-3.416001,6.815975,-4.005445,-3.650549,4.085130,9.281770,3.952509,5.671175,-8.200755,-5.865885,1.838078,6.965130,9.387958,-3.282103,-4.015287,-6.859127,-4.908947,-4.354370,-8.395085,-0.274352,-1.933693,8.339180,8.942056,-3.161331,-5.825603,-0.490001,-6.710670],[-2.764942,9.671750,-6.277764,8.470097,-5.449604,-5.244836,-3.708744,5.479182,-2.263054,4.426258,4.961177,-5.937416,-6.662405,-3.405438,-9.146085,-1.289501,4.081129,-8.886224,6.083251,-8.635636,9.689385,-0.048758,7.773819,4.775021,-2.724856,4.399625,2.545046,1.332356,3.596923,-3.759277,-4.921350,-3.082376,-9.271177,6.332034,-3.374079,3.398303,3.021441,-7.143723,9.482229,-9.035600,-4.624150,-9.041939,-8.660360,7.318445,7.525888,7.701565,-3.625891,7.291148,-4.531411,-9.700851,2.483713,7.070357,5.729539,2.488194,8.282892,-0.487334,-2.390238,7.518685,7.054084,-9.818959,8.810161,-5.827509,1.780087,-0.468449,9.419438,8.730991],[4.854315,8.304034,-1.096991,8.314824,-8.730328,2.798408,-9.804635,4.851692,1.162018,8.020602,-3.244756,-9.564205,4.917808,3.597042,2.244604,8.256233,8.196872,4.946957,-7.745060,1.999435,7.842957,5.539408,-4.994315,4.951670,-5.823768,-0.655741,-0.308443,-3.564628,3.338133,-7.311575,-6.720956,6.284019,-0.621017,5.689693,-5.802574,-9.993183,3.113930,2.917461,-1.143591,2.607377,7.573891,2.367123,-3.051167,-9.784281,-0.352000,-3.837243,-2.256952,-6.591927,3.847979,3.596482,1.228048,3.823981,8.273086,-0.599272,1.274948,-8.686501,6.035609,-1.529414,-9.113164,1.222707,-9.961656,3.761750,-7.827423,3.770857,-0.471630,6.680566],[-9.916633,-9.744764,6.060286,-1.585838,7.516187,-1.688817,-7.905393,-6.864259,4.703181,6.077415,-5.141361,-2.122346,5.734872,-2.388096,7.981226,2.748348,-3.242584,9.501200,-2.399340,-3.760665,7.026034,-4.792763,0.105174,-0.369460,-5.646487,-1.412353,-2.260922,7.504901,2.669656,4.151377,2.295936,-9.946611,6.973702,-2.919709,5.903584,9.866787,9.631203,6.888286,-4.320923,7.098142,5.192843,6.889574,-7.465182,5.068482,-8.127796,-7.444343,4.141208,2.340671,8.190548,-1.325804,-5.863634,1.074804,2.727515,0.342628,-4.160394,9.406231,-7.709466,4.577093,6.132528,-6.993415,-7.146268,-7.083527,-0.475324,-8.189172,3.216732,-8.433805],[-1.006533,0.544012,-0.565234,2.377898,3.872405,2.064172,-6.740053,-7.333089,4.974798,7.391867,-5.347523,-6.554310,-5.635957,-6.129077,2.579899,7.998435,-1.336589,-4.365134,2.763925,5.988594,-2.921796,6.486497,3.634579,-3.117571,-4.139115,-8.170418,8.935974,0.415253,3.603754,9.331956,9.177309,-1.211260,3.398430,-0.873558,5.849347,6.824446,-3.541715,-5.955306,0.062235,6.281696,-4.131569,-0.311025,-6.194751,5.489869,0.019091,-4.421776,-8.448444,-1.776889,1.384524,-3.800107,-3.112012,-6.492885,-4.877869,-2.145048,-0.263284,-1.794608,-0.079057,-1.991127,-6.860108,-5.447942,8.597082,-9.490793,-0.444359,7.607962,-7.911154,-4.589793]], dtype = "float64")#candidate|6597|(10, 66)|const|float64
var_6598 = relay.var("var_6598", dtype = "float32", shape = (1050,))#candidate|6598|(1050,)|var|float32
const_6599 = relay.const([-1,-5,3,-8,-2,9,8,4,4,8,-5,-9,-5,-9,2,9,8,-10,5,-3,-1,-10,4,2,10,-5,3,5], dtype = "int32")#candidate|6599|(28,)|const|int32
var_6600 = relay.var("var_6600", dtype = "uint32", shape = (26,))#candidate|6600|(26,)|var|uint32
var_6601 = relay.var("var_6601", dtype = "uint32", shape = (416,))#candidate|6601|(416,)|var|uint32
const_6602 = relay.const([-3.307170,-1.533256,-2.885442,1.862612,-5.112268,-9.573489], dtype = "float64")#candidate|6602|(6,)|const|float64
call_6596 = relay.TupleGetItem(func_4509_call(relay.reshape(const_6597.astype('float64'), [10, 11, 6]), relay.reshape(var_6598.astype('float32'), [1050,]), relay.reshape(const_6599.astype('int32'), [14, 2]), relay.reshape(var_6600.astype('uint32'), [26,]), relay.reshape(var_6601.astype('uint32'), [416,]), relay.reshape(const_6602.astype('float64'), [6,]), ), 2)
call_6603 = relay.TupleGetItem(func_4517_call(relay.reshape(const_6597.astype('float64'), [10, 11, 6]), relay.reshape(var_6598.astype('float32'), [1050,]), relay.reshape(const_6599.astype('int32'), [14, 2]), relay.reshape(var_6600.astype('uint32'), [26,]), relay.reshape(var_6601.astype('uint32'), [416,]), relay.reshape(const_6602.astype('float64'), [6,]), ), 2)
func_4880_call = mod.get_global_var('func_4880')
func_4882_call = mutated_mod.get_global_var('func_4882')
var_6605 = relay.var("var_6605", dtype = "float64", shape = (1024,))#candidate|6605|(1024,)|var|float64
call_6604 = relay.TupleGetItem(func_4880_call(relay.reshape(var_6605.astype('float64'), [4, 16, 16])), 0)
call_6606 = relay.TupleGetItem(func_4882_call(relay.reshape(var_6605.astype('float64'), [4, 16, 16])), 0)
output = relay.Tuple([call_6582,call_6596,const_6597,var_6598,const_6599,var_6600,var_6601,const_6602,call_6604,var_6605,])
output2 = relay.Tuple([call_6583,call_6603,const_6597,var_6598,const_6599,var_6600,var_6601,const_6602,call_6606,var_6605,])
func_6639 = relay.Function([var_6598,var_6600,var_6601,var_6605,], output)
mod['func_6639'] = func_6639
mod = relay.transform.InferType()(mod)
var_6640 = relay.var("var_6640", dtype = "float32", shape = (1050,))#candidate|6640|(1050,)|var|float32
var_6641 = relay.var("var_6641", dtype = "uint32", shape = (26,))#candidate|6641|(26,)|var|uint32
var_6642 = relay.var("var_6642", dtype = "uint32", shape = (416,))#candidate|6642|(416,)|var|uint32
var_6643 = relay.var("var_6643", dtype = "float64", shape = (1024,))#candidate|6643|(1024,)|var|float64
output = func_6639(var_6640,var_6641,var_6642,var_6643,)
func_6644 = relay.Function([var_6640,var_6641,var_6642,var_6643,], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2920_call = mod.get_global_var('func_2920')
func_2922_call = mutated_mod.get_global_var('func_2922')
call_6698 = relay.TupleGetItem(func_2920_call(), 0)
call_6699 = relay.TupleGetItem(func_2922_call(), 0)
output = call_6698
output2 = call_6699
func_6710 = relay.Function([], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
mutated_mod['func_6710'] = func_6710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6710_call = mutated_mod.get_global_var('func_6710')
call_6711 = func_6710_call()
output = call_6711
func_6712 = relay.Function([], output)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6727 = relay.var("var_6727", dtype = "uint8", shape = (16, 12, 6))#candidate|6727|(16, 12, 6)|var|uint8
var_6728 = relay.var("var_6728", dtype = "uint8", shape = (16, 12, 6))#candidate|6728|(16, 12, 6)|var|uint8
bop_6729 = relay.not_equal(var_6727.astype('bool'), relay.reshape(var_6728.astype('bool'), relay.shape_of(var_6727))) # shape=(16, 12, 6)
output = bop_6729
output2 = bop_6729
F = relay.Function([var_6727,var_6728,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6727,var_6728,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_122 = relay.var("var_122", dtype = "float64", shape = ())#candidate|122|()|var|float64
const_123 = relay.const([[[3.651026,-6.779258,0.235312],[6.528630,8.607625,0.941352],[-0.159183,2.815723,-0.277500],[4.118927,3.490754,-3.928723],[-6.910215,9.936750,-4.055493],[-9.008282,-6.676628,5.447235]]], dtype = "float64")#candidate|123|(1, 6, 3)|const|float64
bop_124 = relay.floor_mod(var_122.astype('float64'), const_123.astype('float64')) # shape=(1, 6, 3)
output = relay.Tuple([bop_124,])
output2 = relay.Tuple([bop_124,])
func_128 = relay.Function([var_122,], output)
mod['func_128'] = func_128
mod = relay.transform.InferType()(mod)
var_129 = relay.var("var_129", dtype = "float64", shape = ())#candidate|129|()|var|float64
output = func_128(var_129)
func_130 = relay.Function([var_129], output)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_260 = relay.var("var_260", dtype = "float32", shape = ())#candidate|260|()|var|float32
var_261 = relay.var("var_261", dtype = "float32", shape = (11, 5, 3))#candidate|261|(11, 5, 3)|var|float32
bop_262 = relay.less(var_260.astype('bool'), var_261.astype('bool')) # shape=(11, 5, 3)
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
call_265 = relay.TupleGetItem(func_128_call(relay.reshape(var_260.astype('float64'), [])), 0)
call_266 = relay.TupleGetItem(func_130_call(relay.reshape(var_260.astype('float64'), [])), 0)
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
call_284 = relay.TupleGetItem(func_128_call(relay.reshape(var_260.astype('float64'), [])), 0)
call_285 = relay.TupleGetItem(func_130_call(relay.reshape(var_260.astype('float64'), [])), 0)
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
call_291 = relay.TupleGetItem(func_128_call(relay.reshape(var_260.astype('float64'), [])), 0)
call_292 = relay.TupleGetItem(func_130_call(relay.reshape(var_260.astype('float64'), [])), 0)
output = relay.Tuple([bop_262,call_265,call_284,call_291,])
output2 = relay.Tuple([bop_262,call_266,call_285,call_292,])
func_307 = relay.Function([var_260,var_261,], output)
mod['func_307'] = func_307
mod = relay.transform.InferType()(mod)
mutated_mod['func_307'] = func_307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_307_call = mutated_mod.get_global_var('func_307')
var_309 = relay.var("var_309", dtype = "float32", shape = ())#candidate|309|()|var|float32
var_310 = relay.var("var_310", dtype = "float32", shape = (11, 5, 3))#candidate|310|(11, 5, 3)|var|float32
call_308 = func_307_call(var_309,var_310,)
output = call_308
func_311 = relay.Function([var_309,var_310,], output)
mutated_mod['func_311'] = func_311
mutated_mod = relay.transform.InferType()(mutated_mod)
const_841 = relay.const([[[-9.215883,1.754773,1.895249,1.282870,1.367309,-3.080377,-9.711172],[-0.083394,-5.211746,9.506347,-1.303756,5.165448,0.286655,-3.832677],[-4.546917,0.563708,1.318331,2.506489,7.141402,-6.089075,-2.298772],[-0.394115,-5.656734,-3.722113,-5.368304,-3.550225,6.957190,7.083908],[4.297791,5.026271,-8.145863,-8.522874,-1.610285,-0.908992,-2.242294],[-3.797571,-5.831876,0.669110,8.505143,5.384240,7.447615,-0.565841],[8.459632,4.694764,0.960527,-4.721164,4.630435,1.218907,-5.842486]],[[1.382210,1.950638,-7.630020,9.856647,-4.618047,8.607320,-1.410279],[3.967493,4.160742,1.196829,4.078089,-4.040315,-5.679896,-8.245600],[6.308510,2.650978,3.731512,-8.711547,-7.096853,9.827024,-5.978629],[-0.940998,-0.348151,7.391581,-0.673764,-4.989516,1.395840,8.690209],[5.543964,1.244417,6.857594,1.602546,4.345375,-6.756154,6.526816],[-4.055234,-2.282922,2.610820,5.686201,-9.724528,7.280887,9.599733],[4.573611,-0.944311,4.653170,7.233094,-0.985132,1.364612,-1.868299]]], dtype = "float64")#candidate|841|(2, 7, 7)|const|float64
uop_842 = relay.asinh(const_841.astype('float64')) # shape=(2, 7, 7)
bop_844 = relay.greater_equal(uop_842.astype('bool'), relay.reshape(const_841.astype('bool'), relay.shape_of(uop_842))) # shape=(2, 7, 7)
bop_862 = relay.floor_mod(uop_842.astype('float64'), relay.reshape(bop_844.astype('float64'), relay.shape_of(uop_842))) # shape=(2, 7, 7)
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
var_866 = relay.var("var_866", dtype = "float32", shape = ())#candidate|866|()|var|float32
var_867 = relay.var("var_867", dtype = "float32", shape = (165,))#candidate|867|(165,)|var|float32
call_865 = relay.TupleGetItem(func_307_call(relay.reshape(var_866.astype('float32'), []), relay.reshape(var_867.astype('float32'), [11, 5, 3]), ), 3)
call_868 = relay.TupleGetItem(func_311_call(relay.reshape(var_866.astype('float32'), []), relay.reshape(var_867.astype('float32'), [11, 5, 3]), ), 3)
output = relay.Tuple([bop_862,call_865,var_866,var_867,])
output2 = relay.Tuple([bop_862,call_868,var_866,var_867,])
func_870 = relay.Function([var_866,var_867,], output)
mod['func_870'] = func_870
mod = relay.transform.InferType()(mod)
mutated_mod['func_870'] = func_870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_870_call = mutated_mod.get_global_var('func_870')
var_872 = relay.var("var_872", dtype = "float32", shape = ())#candidate|872|()|var|float32
var_873 = relay.var("var_873", dtype = "float32", shape = (165,))#candidate|873|(165,)|var|float32
call_871 = func_870_call(var_872,var_873,)
output = call_871
func_874 = relay.Function([var_872,var_873,], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
const_924 = relay.const([[[7,8,-5,-8,-8,2,10,-8,7,7,-10,-6],[6,-3,-9,-5,-2,6,1,-6,7,-6,-1,-7],[4,-4,-6,7,8,9,2,4,8,9,-5,8]],[[-3,8,1,-2,-7,1,5,-5,9,-10,9,3],[5,-7,-9,2,-1,5,8,-1,6,-8,10,-5],[9,-10,-1,-6,-6,-7,-9,-6,3,-6,-3,-6]],[[7,-1,9,-5,-1,-7,-7,1,7,8,-8,10],[-10,-2,1,1,4,-6,5,-1,8,1,4,-9],[-9,-9,-3,-10,-5,-5,2,6,-5,-9,6,1]],[[10,9,3,5,7,10,-4,3,5,-6,4,-1],[6,3,9,-4,-5,3,3,1,1,-9,2,-6],[2,3,6,8,3,-4,5,-3,2,-10,3,4]],[[3,-1,-5,-3,9,-4,-10,-6,6,-9,-9,3],[8,6,-5,5,4,-4,-3,8,2,6,6,7],[2,-5,8,-2,-3,8,-9,-7,-1,1,-7,5]],[[-3,-3,4,3,8,9,-7,-4,9,8,7,10],[6,1,2,-5,8,8,-8,10,-10,-3,9,-5],[9,8,-9,-3,2,10,-3,-1,-3,-5,-9,-8]],[[-5,5,-6,4,-2,-3,-1,-5,2,8,-10,-8],[-7,3,-7,6,2,6,2,5,-2,-6,-7,-7],[8,-6,-4,1,-5,-1,7,-4,1,-9,10,6]]], dtype = "uint64")#candidate|924|(7, 3, 12)|const|uint64
var_925 = relay.var("var_925", dtype = "uint64", shape = (7, 3, 12))#candidate|925|(7, 3, 12)|var|uint64
bop_926 = relay.less(const_924.astype('bool'), relay.reshape(var_925.astype('bool'), relay.shape_of(const_924))) # shape=(7, 3, 12)
uop_932 = relay.acosh(const_924.astype('float32')) # shape=(7, 3, 12)
output = relay.Tuple([bop_926,uop_932,])
output2 = relay.Tuple([bop_926,uop_932,])
func_937 = relay.Function([var_925,], output)
mod['func_937'] = func_937
mod = relay.transform.InferType()(mod)
mutated_mod['func_937'] = func_937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_938 = relay.var("var_938", dtype = "uint64", shape = (7, 3, 12))#candidate|938|(7, 3, 12)|var|uint64
func_937_call = mutated_mod.get_global_var('func_937')
call_939 = func_937_call(var_938)
output = call_939
func_940 = relay.Function([var_938], output)
mutated_mod['func_940'] = func_940
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1210 = relay.const([[[-7.691487,5.808321,8.583128,2.391232,-9.595472,1.216338,9.905017,-6.977074],[-9.370738,-2.155768,-1.029104,-9.179926,7.325470,-0.678489,3.525255,5.649058],[9.075802,-2.886224,-4.206504,-3.804672,-8.092517,-8.506131,-6.210883,-7.755973],[7.085067,-5.095545,9.078449,0.818243,6.422677,9.213357,9.824331,-1.238055],[6.758240,5.365609,1.072530,-3.546807,-1.101652,7.170590,-4.274415,8.073747],[-9.865050,8.736273,-3.564836,-7.839463,-8.787930,3.565660,2.849977,8.934337],[-5.782632,-7.838077,-5.717345,-5.383927,5.512689,-6.467608,3.577775,-6.445331],[0.838735,-1.649196,-2.080279,3.755293,-0.842425,-8.567042,6.950893,-2.666808],[6.517246,6.704148,5.370069,-6.134303,9.523430,-8.955470,-9.575398,-7.099403],[-2.834436,-5.391500,-3.505806,-0.949935,-5.888449,-2.412437,-2.516081,7.865696]],[[1.958766,1.439665,-7.938989,-3.143710,-3.306281,0.761733,5.810328,-8.755915],[-0.187790,-9.383124,4.712397,6.160858,2.698133,9.451240,-3.313952,6.536594],[2.326149,-1.825131,-3.648775,0.471493,-9.619078,-4.302701,-5.067202,1.071247],[0.558948,6.752919,-2.204249,-0.821433,-7.142913,0.126539,-4.480822,7.324238],[-1.147149,-1.275250,-4.534355,4.543988,-0.706450,-6.679058,6.713172,9.439632],[8.526131,6.917095,3.772212,7.526084,4.879679,-4.148121,-2.111349,2.913375],[3.846653,1.811696,9.931199,-4.326255,-5.794287,-2.647983,5.582575,-6.908618],[3.527831,-7.376399,6.649307,-3.044228,2.982621,2.864635,-9.617719,-4.106261],[-9.502266,4.374009,-5.096759,0.558778,-6.563100,-5.711962,0.198542,-8.501023],[-7.474302,6.988508,0.934727,-0.792146,-6.811692,-5.279522,-5.270480,-9.085003]],[[-8.973179,-6.923486,-9.408169,-1.219532,-8.921997,-6.886868,8.568053,-7.150565],[6.753075,-1.861719,3.993298,4.712844,-4.449213,2.225185,-6.302234,5.437690],[1.810142,-9.130709,7.708907,3.338390,5.075055,1.960726,-3.723691,3.070778],[3.477286,-0.294914,-3.023406,-7.581829,1.296475,-9.581268,0.180289,7.836945],[0.588354,-6.605971,-1.573562,-9.323907,1.831755,-4.084354,9.986187,-7.539850],[6.772779,-7.995683,-7.832779,-8.376143,-1.796928,-6.191945,-6.234229,-5.263554],[2.292411,-9.716572,-8.258789,8.567028,-2.626440,-4.194171,1.141619,-6.142635],[8.516416,0.295509,5.010190,-1.561603,-9.436410,-2.146811,-7.159514,-4.414288],[5.547953,4.797363,-3.825021,-4.034021,-8.888403,-2.693270,0.114366,4.480089],[0.980076,-2.941368,-8.467954,-6.664637,6.860081,-5.635494,-8.024426,4.520411]],[[0.803947,1.017311,-5.475479,8.648070,-1.241195,-3.221521,-1.343756,6.097739],[-3.133105,1.175601,-3.112512,4.560845,-4.532588,0.659328,2.012168,-2.366850],[5.515199,-4.470444,0.764600,-5.466358,5.090505,7.731400,-4.562118,-7.135102],[8.386468,-8.613421,3.392573,2.958872,1.561612,-5.652754,-4.391256,9.973619],[4.887456,0.302118,9.316841,-0.244361,-2.165452,2.987571,-6.685535,-7.320476],[1.053240,9.044822,-9.429464,-2.867272,4.719673,-7.099305,0.866865,0.596101],[5.472624,-2.879377,1.590873,-3.566132,-2.935896,-4.343811,4.746284,-6.176829],[5.456920,6.312529,6.634156,3.458094,7.341947,-3.202835,-9.361435,8.937900],[-5.433080,-2.412638,-5.434892,7.788554,-4.932449,-7.693286,-2.868836,-8.271233],[-8.044721,-0.280496,9.161560,9.243271,8.953323,-7.928611,5.569523,-5.295690]],[[5.690630,8.360642,8.828994,-7.886360,0.074527,8.379663,-7.207299,5.002300],[3.818277,-6.406981,-5.621026,5.787538,7.364561,0.681606,9.620462,-1.681893],[-7.389837,6.798629,-0.308766,-8.539912,-0.617624,-1.331809,3.700278,7.845391],[1.906801,-0.110855,3.019908,6.874215,3.156366,-8.685308,-8.445226,9.074366],[-2.340386,-4.120817,-7.345880,-9.830203,-8.058249,6.408951,9.675212,6.994370],[-5.179567,-8.508736,1.465646,-2.606719,-9.198123,-5.450798,9.075281,0.501501],[-0.442325,5.313429,-8.850915,6.579000,-5.406590,2.592246,6.916874,-7.117648],[-1.798631,-1.176480,-7.075539,-8.784634,4.641235,-3.044996,-5.883577,-4.422484],[8.144515,5.568224,-2.898194,3.216947,-0.143688,-5.800131,1.060015,4.122411],[1.914675,6.839866,9.605956,-2.057411,-0.292401,8.461427,-3.900695,9.312450]],[[6.262832,-2.528877,7.845097,-2.395318,-1.082997,-8.266261,3.394258,4.377947],[9.501290,1.922729,-7.227255,2.018466,-8.222357,9.583319,-6.617931,-4.390225],[2.662568,4.471720,-8.616768,-9.472915,-1.988660,-7.362197,7.954146,-6.444148],[8.782964,0.917577,7.311862,-2.379212,2.479469,3.235895,0.668721,-6.124482],[-4.605982,0.068900,5.554529,6.533577,-6.287814,-5.030086,7.677816,-0.844415],[-0.613306,-3.889145,-3.789316,1.009541,-7.946494,-4.208780,-9.884189,-4.142515],[-8.341385,-9.843821,-8.166976,-1.262337,0.427959,-9.806487,5.016484,7.952984],[-2.790194,-5.946852,0.467715,-5.927019,-2.789963,7.101360,8.224289,0.861917],[8.875972,-3.112133,9.910720,6.214492,9.253822,9.546057,-5.078608,-9.859610],[-1.891406,-4.497940,-0.356874,1.379648,2.850208,6.639955,-3.140498,-0.789464]],[[-5.248285,2.184669,3.162734,7.747877,-0.239188,-9.855860,0.974595,8.943345],[0.720429,0.424694,7.608198,-3.119145,0.508411,4.158959,-2.514117,-9.780259],[-4.586856,-2.229949,-8.369050,-6.921545,-9.483766,7.298622,2.414238,8.289095],[-3.793525,-4.178269,0.066484,-2.314273,3.698512,-9.945177,-4.295262,-3.542448],[7.697498,-8.710279,-2.837235,-3.263035,0.306167,0.400093,6.218113,3.272553],[2.021494,9.754491,-8.524239,-3.090022,9.720869,0.405535,6.365814,1.898228],[-3.478394,-4.666154,-5.403938,4.992334,-4.204086,9.156155,3.183827,-4.918669],[-8.683969,4.949370,7.213218,-4.404452,5.303673,-0.401918,-9.487900,6.839618],[-7.882255,0.550877,-6.626444,-2.176553,1.955826,-6.655416,2.600083,-6.105954],[-9.390223,-5.092645,3.074222,5.792831,7.225310,5.139590,8.587611,-8.654326]],[[-1.286690,-2.284590,5.638698,7.187662,-6.780719,3.521329,-4.624205,-2.551501],[-0.276017,4.634273,1.501285,-3.591578,-4.721868,-6.846589,-8.515129,8.641357],[7.387154,6.911492,5.641240,2.877995,7.674137,4.604848,-5.653764,-8.099477],[-3.218061,-4.756236,-4.128776,-4.568058,-6.393349,-5.991131,-7.212198,5.843849],[-1.409828,-7.746355,-9.328643,1.459417,-3.874649,7.103570,-0.026404,0.663814],[4.178638,5.539313,-3.480984,1.371302,-4.335621,7.635461,4.408507,-5.001657],[-4.974678,0.782683,2.428956,-2.719926,3.364765,-3.085980,3.831730,9.076024],[-9.578671,3.157189,-9.016940,1.825478,-6.501431,2.625332,-0.601213,0.545491],[-1.747060,7.747818,-1.508859,-2.548448,0.343533,7.653217,-1.965271,-2.279029],[0.747637,-7.241962,-1.080575,3.190767,-7.811688,-9.515390,-9.243221,0.628996]],[[9.197153,-7.155040,-6.448284,6.078782,-1.082418,6.343494,2.738883,0.939267],[6.588209,5.214169,8.743872,-1.375424,2.699092,-0.544653,0.106912,0.031006],[-5.964793,-4.371750,-1.847325,8.695832,-7.278865,1.222428,-7.637049,3.924649],[-4.360744,2.427384,0.810609,-6.303266,-0.664746,-6.242620,-6.167999,-4.706851],[-7.444241,-7.771905,8.834186,6.749063,-8.679185,1.718225,0.659258,-0.724105],[6.031664,9.089419,2.746272,-5.699415,3.673891,1.849386,-8.075417,-4.064250],[-6.960775,8.703579,-2.992189,-4.607935,5.543016,6.707210,-8.690766,5.766355],[5.274686,-6.520540,-4.028871,8.525655,7.857369,1.134771,-6.952172,-7.331513],[-9.778667,-0.324082,-6.650737,0.121352,7.307755,-8.133386,-5.795447,0.483910],[5.129863,6.743424,-7.742070,5.381713,5.950674,0.973602,-7.258149,2.182332]],[[6.370123,-9.442993,-1.020057,-2.816129,-8.674018,5.944668,-8.402335,7.184206],[-8.517097,1.818719,4.580436,-0.825440,4.585161,-8.695113,-2.606430,9.632967],[-9.395481,8.750472,9.320803,-5.878508,4.221495,7.535460,-8.422014,4.005495],[1.632895,-5.482594,9.277502,5.469690,-3.448393,-0.910562,6.029110,0.044701],[9.482930,-8.026429,-7.906391,4.715906,-7.436014,5.245126,0.874619,3.024658],[6.269560,1.818519,5.616667,6.270007,-7.418670,-4.437489,0.692686,2.436879],[-2.744737,-9.999761,-0.402962,-9.067084,-9.514851,-6.365426,-4.780990,-5.029475],[2.271940,-9.211946,-0.664872,-3.451793,-2.842669,0.152622,-4.791596,-8.305215],[-2.832632,1.986578,-9.806262,-0.997043,7.550278,-3.938273,-5.713407,6.424816],[-4.447754,-5.501500,-5.095946,-6.836219,2.686987,-8.693321,-4.155832,6.086012]],[[6.055479,-9.042493,-8.585416,-1.043402,9.467776,-1.531454,9.421982,0.722202],[8.625222,2.062745,-2.101156,-7.964415,7.481866,-6.521315,-4.500516,-6.003339],[-7.260487,2.295572,3.834796,4.041374,1.609365,7.141007,6.944922,-1.272448],[-2.131168,-0.400733,7.606237,9.154967,-7.876515,4.765853,3.092304,-3.942908],[-2.122710,-4.045400,-6.946870,-4.127887,1.315358,-5.164704,-0.555726,-8.800616],[-2.124163,2.711619,3.980127,-5.231393,-9.576082,-9.799001,-4.043037,-7.399768],[9.468805,-6.065076,-5.393527,7.110290,-1.008922,-7.530015,-9.403207,-6.512582],[-9.999461,9.588126,-1.176767,2.465784,7.807637,-5.918576,-8.542313,-4.408298],[8.704922,5.842586,5.849353,-9.026126,1.006060,-9.487981,5.302695,-9.684019],[-2.726111,2.770190,-8.850416,-2.999792,3.246130,3.958131,6.357537,8.578359]],[[-2.836595,-8.306897,5.482370,-7.200156,9.821907,-7.371225,6.172956,-4.637171],[-9.412497,-9.451835,-5.771672,-3.158946,8.324801,-2.880112,8.565283,1.385049],[-8.756170,3.457575,-9.491539,-6.828858,-6.841611,-9.197827,-5.080444,-2.383196],[0.931434,8.477793,0.767284,8.528239,3.847746,3.683841,0.050030,-1.236976],[-3.176300,9.186293,9.876382,-4.316955,-7.992650,4.909539,-6.344894,-8.943165],[-0.759714,5.254140,8.457019,-4.308191,-3.300414,-7.721815,2.667414,-2.610095],[-4.038359,-8.161128,3.073901,-8.870733,-8.541062,-3.030847,5.643110,-3.757869],[-2.100814,8.030479,-5.698149,-0.077323,1.988619,-0.817360,-1.650574,-9.672100],[-8.370341,-9.031690,3.662699,7.314047,8.384075,-1.917705,-0.998939,-5.633434],[1.843452,0.574713,-7.470357,-8.098067,-8.835497,-6.137053,5.502495,1.029846]],[[7.963715,-5.024817,-9.803078,-0.533616,6.053279,-6.911935,5.337671,7.790050],[-9.562290,-9.922635,-9.951844,-3.445666,5.868491,4.755662,2.375667,-3.231469],[1.942753,-7.325130,4.151601,9.559684,3.578478,-4.534701,-1.185315,4.264938],[-5.262473,1.056043,1.000244,8.093039,-1.334048,3.245326,-5.360712,9.800344],[-9.318411,6.879575,-8.897896,9.098298,6.554356,9.496794,6.174382,-3.204951],[-0.759316,-5.370337,-6.954722,9.308035,8.228739,-7.176959,-4.973433,6.906426],[9.559351,-8.105644,4.191634,-4.924040,-9.207985,-4.974740,-2.796770,3.644442],[8.550522,-7.606216,-5.620878,-0.680143,4.578406,9.943699,-3.644243,-4.764613],[7.501129,-1.457047,-3.369549,5.395872,-5.110285,-0.475291,7.902180,5.597634],[-2.010838,-3.724567,9.927718,-5.296995,8.956069,2.317166,-7.858432,-8.790041]],[[-8.933542,-3.333258,0.636044,0.174158,2.555136,-0.505621,-9.408596,8.360106],[-2.986770,8.909399,4.237834,-0.250158,6.055518,-6.057265,0.591043,5.275279],[3.044032,0.746888,-9.531603,-6.447765,-6.127796,-0.957251,6.282545,3.482810],[4.841467,4.153718,-0.681221,0.662555,4.852732,2.346459,-8.723062,7.911390],[-5.584296,-6.765502,8.213860,4.986201,-5.193032,-2.953470,9.531908,4.768278],[-0.556869,8.980392,-2.030704,-4.160464,1.335378,-7.286998,0.171458,4.540555],[-6.050985,-4.901946,0.049664,-4.097893,9.419866,2.200347,-5.980288,7.390249],[4.849605,-4.182234,2.765622,-9.234913,-3.455796,5.830299,-7.771126,-8.818044],[-3.593714,-2.028983,-9.096388,9.370297,-5.692433,-4.457131,1.087707,1.604035],[1.827938,-8.998743,6.643012,1.070374,-0.680930,2.379627,2.741834,6.281573]]], dtype = "float32")#candidate|1210|(14, 10, 8)|const|float32
uop_1211 = relay.acos(const_1210.astype('float32')) # shape=(14, 10, 8)
func_870_call = mod.get_global_var('func_870')
func_874_call = mutated_mod.get_global_var('func_874')
const_1215 = relay.const(-3.259890, dtype = "float32")#candidate|1215|()|const|float32
var_1216 = relay.var("var_1216", dtype = "float32", shape = (1, 165))#candidate|1216|(1, 165)|var|float32
call_1214 = relay.TupleGetItem(func_870_call(relay.reshape(const_1215.astype('float32'), []), relay.reshape(var_1216.astype('float32'), [165,]), ), 1)
call_1217 = relay.TupleGetItem(func_874_call(relay.reshape(const_1215.astype('float32'), []), relay.reshape(var_1216.astype('float32'), [165,]), ), 1)
func_937_call = mod.get_global_var('func_937')
func_940_call = mutated_mod.get_global_var('func_940')
const_1228 = relay.const([3,5,2,10,6,5,3,9,5,-6,9,1,-5,-3,10,-7,9,10,1,1,10,-7,9,6,9,6,-3,-4,-1,-5,8,-4,5,-8,6,4,-9,-8,7,4,-7,6,7,-10,6,9,-1,-10,-9,-3,-2,-10,7,9,5,2,4,-3,7,-9,-3,6,5,10,-6,8,9,-9,9,4,3,-5,-3,10,-2,-2,9,-10,-8,8,-3,-4,-6,1,-2,9,-1,4,1,-4,3,1,-6,6,-9,-9,-1,-5,5,4,2,-7,-6,-9,-7,3,10,3,4,1,-2,-6,-5,-1,8,2,-7,-5,1,3,8,9,-9,-6,-10,6,9,-6,-4,7,-2,-4,-5,3,6,6,-9,1,-5,-3,-8,-8,1,-3,3,-7,-6,-2,-1,-9,-9,8,-9,-10,-10,3,9,6,7,5,7,3,-10,-6,-9,7,-1,-10,7,-7,2,-4,-1,-3,10,-8,-7,-2,-7,-7,5,-6,10,-9,7,-4,7,-10,-10,9,-8,-9,-10,-3,1,-3,5,-5,7,-1,-1,3,-5,-6,-5,-7,4,9,8,10,1,8,-3,2,6,-4,10,-4,-10,2,-7,-2,8,4,-3,-5,-10,-2,-5,-4,-8,7,8,3,-4,-7,7,-2,9,10,4,8,-8,6,-5,-4,9,-10,-5,-6,9,7], dtype = "uint64")#candidate|1228|(252,)|const|uint64
call_1227 = relay.TupleGetItem(func_937_call(relay.reshape(const_1228.astype('uint64'), [7, 3, 12])), 0)
call_1229 = relay.TupleGetItem(func_940_call(relay.reshape(const_1228.astype('uint64'), [7, 3, 12])), 0)
uop_1234 = relay.sigmoid(call_1227.astype('float32')) # shape=(7, 3, 12)
uop_1236 = relay.sigmoid(call_1229.astype('float32')) # shape=(7, 3, 12)
bop_1245 = relay.mod(uop_1234.astype('float32'), const_1215.astype('float32')) # shape=(7, 3, 12)
bop_1248 = relay.mod(uop_1236.astype('float32'), const_1215.astype('float32')) # shape=(7, 3, 12)
output = relay.Tuple([uop_1211,call_1214,var_1216,const_1228,bop_1245,])
output2 = relay.Tuple([uop_1211,call_1217,var_1216,const_1228,bop_1248,])
func_1250 = relay.Function([var_1216,], output)
mod['func_1250'] = func_1250
mod = relay.transform.InferType()(mod)
var_1251 = relay.var("var_1251", dtype = "float32", shape = (1, 165))#candidate|1251|(1, 165)|var|float32
output = func_1250(var_1251)
func_1252 = relay.Function([var_1251], output)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1257 = relay.var("var_1257", dtype = "float64", shape = ())#candidate|1257|()|var|float64
var_1258 = relay.var("var_1258", dtype = "float64", shape = (13, 15, 9))#candidate|1258|(13, 15, 9)|var|float64
bop_1259 = relay.greater_equal(var_1257.astype('bool'), var_1258.astype('bool')) # shape=(13, 15, 9)
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
call_1270 = relay.TupleGetItem(func_128_call(relay.reshape(var_1257.astype('float64'), [])), 0)
call_1271 = relay.TupleGetItem(func_130_call(relay.reshape(var_1257.astype('float64'), [])), 0)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
const_1282 = relay.const([3.381494,3.694238,2.645102,-5.491373,-0.835141,5.831713,9.355409,7.097537,7.409248,-5.222761,7.183130,3.605508,3.632811,-7.534509,5.849433,-0.100603,3.358415,4.535864,9.376029,-0.638513,-6.652879,2.506678,2.111689,-5.342178,7.568547,2.488831,-5.794551,-6.915455,-2.857834,-5.316879,-5.552508,-8.155336,-4.964531,-4.351852,-4.870539,8.822388,5.685908,-9.865618,3.457277,3.490012,0.413578,-8.436375,1.105651,6.648945,7.440166,6.790286,-4.403676,8.145488,0.376375,-3.697954,0.546862,-2.477109,-9.289840,4.011255,-7.206494,-3.903892,4.752795,7.258741,8.435091,5.205187,3.676019,3.386607,-6.167817,-7.425230,-0.099471,2.021940,1.012260,-4.437102,-8.908897,1.667901,-1.156851,7.767525,-4.840121,6.440538,5.738370,-9.085107,3.257411,3.396700,9.440129,-8.439446,-9.014513,8.858840,9.734366,-9.242836,3.584283,-9.399475,2.161282,2.828445,0.249870,-6.029241,2.208069,8.108813,-0.112365,2.270428,-3.240577,9.766577,2.622059,-0.291276,0.524429,2.027689,9.606874,-8.846748,9.241858,-0.955786,-2.628700,3.477603,-2.591230,9.749542,5.673881,-9.190728,-1.275762,6.185693,-7.794393,-6.026859,-8.426926,-5.595137,-8.185538,-1.991432,-0.072952,-6.224508,6.160032,0.130734,-7.452297,-0.159945,9.182420,4.185366,3.958075,9.366957,4.933006,7.235758,3.379372,8.244985,-6.939477,7.050015,-1.663139,-5.025444,-3.684279,6.796965,-5.732746,-4.645505,-8.930661,2.420884,-8.007373,2.342656,-0.113485,6.844023,-5.400665,8.846046,4.239955,-7.717320,-2.422661,4.293063,-8.840598,0.733409,1.210709,-3.477046,-0.654364,7.192129,-1.946429,-5.251146,5.504941,0.666955,-6.381475,-1.029068,7.912124], dtype = "float32")#candidate|1282|(165,)|const|float32
call_1281 = relay.TupleGetItem(func_1250_call(relay.reshape(const_1282.astype('float32'), [1, 165])), 3)
call_1283 = relay.TupleGetItem(func_1252_call(relay.reshape(const_1282.astype('float32'), [1, 165])), 3)
output = relay.Tuple([bop_1259,call_1270,call_1281,const_1282,])
output2 = relay.Tuple([bop_1259,call_1271,call_1283,const_1282,])
func_1295 = relay.Function([var_1257,var_1258,], output)
mod['func_1295'] = func_1295
mod = relay.transform.InferType()(mod)
var_1296 = relay.var("var_1296", dtype = "float64", shape = ())#candidate|1296|()|var|float64
var_1297 = relay.var("var_1297", dtype = "float64", shape = (13, 15, 9))#candidate|1297|(13, 15, 9)|var|float64
output = func_1295(var_1296,var_1297,)
func_1298 = relay.Function([var_1296,var_1297,], output)
mutated_mod['func_1298'] = func_1298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1402 = relay.var("var_1402", dtype = "float32", shape = (16, 15, 2))#candidate|1402|(16, 15, 2)|var|float32
uop_1403 = relay.cos(var_1402.astype('float32')) # shape=(16, 15, 2)
uop_1406 = relay.acosh(uop_1403.astype('float32')) # shape=(16, 15, 2)
bop_1413 = relay.left_shift(uop_1406.astype('int8'), relay.reshape(uop_1403.astype('int8'), relay.shape_of(uop_1406))) # shape=(16, 15, 2)
bop_1416 = relay.greater_equal(bop_1413.astype('bool'), relay.reshape(uop_1403.astype('bool'), relay.shape_of(bop_1413))) # shape=(16, 15, 2)
func_1295_call = mod.get_global_var('func_1295')
func_1298_call = mutated_mod.get_global_var('func_1298')
const_1421 = relay.const(5.957924, dtype = "float64")#candidate|1421|()|const|float64
var_1422 = relay.var("var_1422", dtype = "float64", shape = (1755,))#candidate|1422|(1755,)|var|float64
call_1420 = relay.TupleGetItem(func_1295_call(relay.reshape(const_1421.astype('float64'), []), relay.reshape(var_1422.astype('float64'), [13, 15, 9]), ), 2)
call_1423 = relay.TupleGetItem(func_1298_call(relay.reshape(const_1421.astype('float64'), []), relay.reshape(var_1422.astype('float64'), [13, 15, 9]), ), 2)
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
call_1427 = relay.TupleGetItem(func_128_call(relay.reshape(const_1421.astype('float64'), [])), 0)
call_1428 = relay.TupleGetItem(func_130_call(relay.reshape(const_1421.astype('float64'), [])), 0)
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
const_1439 = relay.const([-7.034153,1.741032,-0.815982,2.448902,6.704493,8.331619,-9.564537,9.243544,0.092817,7.289329,-6.087345,-9.082642,-6.914198,-0.866306,-0.446735,-9.818444,1.103857,-2.457005,1.080096,-8.504902,3.251653,3.281387,-8.992959,-8.005073,-1.596066,8.762747,6.018978,-2.340090,-2.455064,9.276093,2.483363,3.545117,-8.525492,7.717147,4.135215,-0.856196,3.943414,-9.793096,-8.241477,5.849229,-1.090087,-3.977000,1.233773,6.541855,0.520478,-7.827560,-7.073807,9.266000,-7.833585,9.922159,-3.471390,-9.325185,3.075868,1.933549,9.785849,8.938926,-5.014843,2.381868,-0.275133,6.143228,-0.095892,8.626506,3.811453,0.352059,3.368747,-0.019060,-2.818101,5.958214,4.629168,8.327310,8.574306,7.846062,-3.628916,4.782741,1.225567,-7.220197,0.840872,0.113890,-8.953281,-7.580912,7.584692,-7.502908,2.037458,8.411445,-5.576103,5.320436,1.038917,2.203714,1.207797,6.107175,8.175688,-0.697993,3.191446,-7.504145,-3.331675,4.697385,3.896202,5.721238,0.147063,8.496777,-6.903375,9.376705,6.890948,9.838865,-3.318214,-0.901877,7.405726,-8.945400,-4.066095,-2.706373,6.735293,-1.046566,9.861168,6.741842,-6.353463,5.719852,2.085296,7.530074,8.916665,3.294909,9.891888,-1.068186,5.053670,8.095554,3.708925,-7.829635,7.324547,0.635917,7.129010,2.611179,5.813111,-7.622747,7.531617,-6.929903,-7.080763,-4.137148,4.560673,-6.300363,9.859821,-7.233436,-2.539577,6.598230,9.482128,-5.486835,0.524391,-8.582885,-9.043522,2.432273,-0.452891,9.969274,-0.220468,-1.576423,-9.641378,-1.707328,-6.696977,-3.490537,4.529619,-6.820830,-4.210712,8.579116,-5.460823,-5.012862,-0.620034,5.565175,1.285281], dtype = "float32")#candidate|1439|(165,)|const|float32
call_1438 = relay.TupleGetItem(func_307_call(relay.reshape(const_1421.astype('float32'), []), relay.reshape(const_1439.astype('float32'), [11, 5, 3]), ), 0)
call_1440 = relay.TupleGetItem(func_311_call(relay.reshape(const_1421.astype('float32'), []), relay.reshape(const_1439.astype('float32'), [11, 5, 3]), ), 0)
func_1295_call = mod.get_global_var('func_1295')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_1442 = relay.TupleGetItem(func_1295_call(relay.reshape(const_1421.astype('float64'), []), relay.reshape(var_1422.astype('float64'), [13, 15, 9]), ), 0)
call_1443 = relay.TupleGetItem(func_1298_call(relay.reshape(const_1421.astype('float64'), []), relay.reshape(var_1422.astype('float64'), [13, 15, 9]), ), 0)
var_1462 = relay.var("var_1462", dtype = "bool", shape = (16, 15, 2))#candidate|1462|(16, 15, 2)|var|bool
bop_1463 = relay.divide(bop_1416.astype('float64'), relay.reshape(var_1462.astype('float64'), relay.shape_of(bop_1416))) # shape=(16, 15, 2)
uop_1483 = relay.exp(uop_1403.astype('float64')) # shape=(16, 15, 2)
output = relay.Tuple([call_1420,const_1421,var_1422,call_1427,call_1438,const_1439,call_1442,bop_1463,uop_1483,])
output2 = relay.Tuple([call_1423,const_1421,var_1422,call_1428,call_1440,const_1439,call_1443,bop_1463,uop_1483,])
func_1492 = relay.Function([var_1402,var_1422,var_1462,], output)
mod['func_1492'] = func_1492
mod = relay.transform.InferType()(mod)
mutated_mod['func_1492'] = func_1492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1492_call = mutated_mod.get_global_var('func_1492')
var_1494 = relay.var("var_1494", dtype = "float32", shape = (16, 15, 2))#candidate|1494|(16, 15, 2)|var|float32
var_1495 = relay.var("var_1495", dtype = "float64", shape = (1755,))#candidate|1495|(1755,)|var|float64
var_1496 = relay.var("var_1496", dtype = "bool", shape = (16, 15, 2))#candidate|1496|(16, 15, 2)|var|bool
call_1493 = func_1492_call(var_1494,var_1495,var_1496,)
output = call_1493
func_1497 = relay.Function([var_1494,var_1495,var_1496,], output)
mutated_mod['func_1497'] = func_1497
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1562 = relay.const(-5, dtype = "int16")#candidate|1562|()|const|int16
const_1563 = relay.const([[[9,3,7,-7,-9,6,9,1],[6,-10,8,-10,-5,3,-10,-1],[6,7,2,-2,-10,-4,-8,10],[-6,4,-2,-8,5,-2,-4,-3],[8,4,7,10,4,6,-1,-6],[7,-3,-6,-5,-2,-5,-9,-7],[-2,7,-6,-7,-3,4,1,10],[-2,6,-4,1,7,2,-6,-5],[7,8,-10,-8,7,-6,-4,6],[-1,-3,5,-3,-10,10,-2,-6],[8,-6,8,1,6,6,6,-3],[4,4,-10,2,9,-9,9,-4],[9,7,-2,5,-8,7,2,-10],[7,-6,10,8,1,2,3,9],[4,1,6,5,8,-7,1,7]],[[-3,5,-10,-5,-2,-3,3,-7],[1,4,-6,1,-8,-6,-8,-6],[-5,-6,-6,8,-6,-3,6,-5],[-1,-4,7,-3,-6,5,-2,-6],[-2,4,1,-7,4,7,3,-6],[-4,-1,6,5,3,-5,-1,-3],[-3,-2,-10,5,-1,3,6,-8],[10,1,-3,5,8,-2,10,1],[-4,-10,-4,-8,7,8,-3,-4],[-6,-6,-3,7,-2,8,6,-5],[-4,5,-10,-2,-4,-10,9,-9],[-9,3,5,-1,1,-9,1,-9],[1,-5,-7,-7,9,10,-9,2],[4,-2,-9,6,-6,-9,10,-4],[-10,-3,-7,-9,-6,-4,-8,7]],[[-6,-10,3,5,2,-6,9,-5],[-8,7,-9,-2,7,-3,6,6],[-8,7,2,-9,-5,7,5,-5],[10,-8,2,5,-10,4,-8,-10],[-7,-6,-8,-1,1,6,-10,1],[-5,-1,1,-8,-6,-8,3,1],[-4,8,5,6,-7,-2,-5,9],[1,9,-9,4,-9,2,-10,-3],[1,8,-1,1,-7,7,5,-2],[-9,10,-7,-5,-9,-8,1,5],[3,9,-6,-3,5,-4,9,7],[-6,8,-3,10,4,-3,1,7],[9,-7,-8,9,4,2,-9,5],[-9,-1,-8,4,-2,6,-5,5],[-1,-3,7,-2,7,-6,4,4]],[[-4,6,9,-5,9,2,6,-9],[4,-8,4,-3,6,7,-1,-5],[-7,1,3,7,-9,5,8,4],[6,4,6,8,7,3,-6,6],[-9,1,3,5,9,-7,6,1],[-7,-9,-2,-4,2,-6,-6,-4],[-9,9,5,4,-4,10,-6,1],[8,8,-8,-7,-10,1,-7,-10],[-1,8,3,-9,5,-8,-4,4],[-8,10,-5,-6,-1,-10,3,-5],[-9,10,5,10,1,-8,-6,7],[-5,9,3,4,4,2,-3,4],[10,-5,-5,2,10,3,4,-9],[-6,-6,6,4,-3,-9,-3,-8],[9,5,-6,-2,-9,-6,6,10]],[[6,10,8,-3,-10,7,5,6],[9,-8,10,-5,6,2,7,-1],[-9,-4,-6,-8,-1,-10,2,-10],[7,6,-9,-6,10,-4,-9,-9],[-7,7,-2,-8,2,9,3,-3],[-9,-8,9,1,2,-6,2,9],[-8,3,-1,-3,10,-5,1,-3],[-8,-9,7,-8,-5,9,-2,7],[5,2,-10,1,6,2,5,-10],[-8,-1,8,1,-4,3,1,7],[-9,-3,5,8,9,1,-7,8],[1,-10,9,-6,-4,-10,-8,-10],[-8,-5,-5,4,-5,2,9,7],[9,1,-9,-2,6,5,-3,-1],[7,3,9,10,4,5,-9,-3]],[[10,-8,-5,-1,6,-6,-10,-9],[-3,1,-10,5,2,-9,-10,1],[8,-8,-4,5,4,9,8,-3],[10,2,-6,6,-5,-8,9,5],[-9,-2,2,2,-9,-10,-1,-8],[8,3,-5,1,-5,-6,-8,-4],[6,1,1,1,-6,-7,-7,-8],[-2,-10,-3,8,-10,2,9,-5],[2,-2,1,3,6,4,2,10],[-6,-3,-1,-7,-9,-9,7,-3],[1,-1,9,-2,5,-10,-10,5],[9,5,10,9,2,-10,-1,9],[-8,-6,6,2,4,2,-10,-9],[4,-9,5,6,7,8,10,-1],[8,5,-3,-9,9,-10,6,-10]],[[-5,-5,-8,-10,8,4,-7,-6],[2,1,8,-4,-1,8,6,-8],[-8,3,-7,-2,1,4,-2,-3],[2,2,5,-7,-2,4,2,1],[6,-7,-7,9,-6,7,3,-2],[5,-3,2,7,-4,4,-4,7],[8,-4,-6,4,3,-9,3,-1],[5,-1,5,-1,-10,6,-9,-3],[-8,6,9,5,-1,-10,4,-3],[7,-4,-1,-1,9,4,-2,-8],[5,4,2,-5,4,9,9,6],[7,8,6,-10,7,-4,-2,-9],[4,2,3,-3,5,4,6,-7],[2,3,-5,5,-7,-10,1,8],[3,3,7,4,10,3,-9,-8]]], dtype = "int16")#candidate|1563|(7, 15, 8)|const|int16
bop_1564 = relay.bitwise_and(const_1562.astype('int16'), const_1563.astype('int16')) # shape=(7, 15, 8)
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
var_1586 = relay.var("var_1586", dtype = "float32", shape = (1, 165))#candidate|1586|(1, 165)|var|float32
call_1585 = relay.TupleGetItem(func_307_call(relay.reshape(const_1562.astype('float32'), []), relay.reshape(var_1586.astype('float32'), [11, 5, 3]), ), 1)
call_1587 = relay.TupleGetItem(func_311_call(relay.reshape(const_1562.astype('float32'), []), relay.reshape(var_1586.astype('float32'), [11, 5, 3]), ), 1)
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
call_1594 = relay.TupleGetItem(func_307_call(relay.reshape(const_1562.astype('float32'), []), relay.reshape(var_1586.astype('float32'), [11, 5, 3]), ), 1)
call_1595 = relay.TupleGetItem(func_311_call(relay.reshape(const_1562.astype('float32'), []), relay.reshape(var_1586.astype('float32'), [11, 5, 3]), ), 1)
bop_1600 = relay.maximum(call_1585.astype('int64'), relay.reshape(call_1594.astype('int64'), relay.shape_of(call_1585))) # shape=(1, 6, 3)
bop_1603 = relay.maximum(call_1587.astype('int64'), relay.reshape(call_1595.astype('int64'), relay.shape_of(call_1587))) # shape=(1, 6, 3)
output = relay.Tuple([bop_1564,var_1586,bop_1600,])
output2 = relay.Tuple([bop_1564,var_1586,bop_1603,])
func_1604 = relay.Function([var_1586,], output)
mod['func_1604'] = func_1604
mod = relay.transform.InferType()(mod)
var_1605 = relay.var("var_1605", dtype = "float32", shape = (1, 165))#candidate|1605|(1, 165)|var|float32
output = func_1604(var_1605)
func_1606 = relay.Function([var_1605], output)
mutated_mod['func_1606'] = func_1606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1680 = relay.var("var_1680", dtype = "uint64", shape = (2, 14, 2))#candidate|1680|(2, 14, 2)|var|uint64
var_1681 = relay.var("var_1681", dtype = "uint64", shape = (2, 14, 2))#candidate|1681|(2, 14, 2)|var|uint64
bop_1682 = relay.less_equal(var_1680.astype('bool'), relay.reshape(var_1681.astype('bool'), relay.shape_of(var_1680))) # shape=(2, 14, 2)
var_1699 = relay.var("var_1699", dtype = "uint64", shape = (2, 14, 2))#candidate|1699|(2, 14, 2)|var|uint64
bop_1700 = relay.less(var_1680.astype('bool'), relay.reshape(var_1699.astype('bool'), relay.shape_of(var_1680))) # shape=(2, 14, 2)
func_1295_call = mod.get_global_var('func_1295')
func_1298_call = mutated_mod.get_global_var('func_1298')
const_1716 = relay.const(0.952312, dtype = "float64")#candidate|1716|()|const|float64
const_1717 = relay.const([[-9.267920,8.064678,2.930248,-7.522455,0.573886,4.769840,6.025142,1.103881,-5.468105,-7.390304,-6.976632,1.279794,5.561058,-6.367633,-7.335959,-9.794779,2.279212,-8.190362,6.956991,3.357755,-0.367469,3.659662,-6.723290,-5.871263,-4.285142,-4.100757,-8.964268,-1.311160,3.946161,0.680432,-1.003572,-6.303482,1.511267,-9.249098,-9.491943,9.220081,-2.740764,-5.468528,5.481364,4.507055,1.709359,-7.250603,7.340436,8.597628,-9.068930,-3.068949,-6.128156,-8.514431,3.883062,-8.607988,-7.309808,0.508732,-9.876877,-4.772391,-3.095502,8.000896,4.172018,7.602587,-8.345362,4.899486,1.811241,8.539154,8.991474,6.414197,2.630715,-1.949841,2.903089,-6.236723,4.645409,5.971317,0.068851,1.854220,8.696988,6.836823,8.636584,-2.617661,7.957876,-6.912135,1.811378,7.720793,5.423803,-3.327714,8.662181,8.645595,9.471983,-7.556848,9.649327,-8.112651,-7.857258,5.174777,-6.216299,-4.425433,0.504006,-1.957913,-3.585614,1.473719,1.413330,-7.735863,7.465412,4.827860,7.256885,1.699482,4.801552,7.859610,1.612415,0.817855,-7.681823,2.480010,-6.272555,-6.254637,-1.085353,5.327404,3.030925,-1.648700,1.515485,-0.403477,-5.838744,7.442520,7.141166,4.778394,2.741878,-0.709565,6.897109,-4.228844,-6.061180,-6.509813,-8.701354,-1.604112,-2.994087,-1.929415,8.960985,-8.539217,-1.126017,5.372767,-6.603071,3.177224,-2.970675,2.561084,5.803497,5.318440,-8.076246,-6.408901,6.530392,-2.059061,-6.001822,5.762308,1.018588,3.682312,-5.159465,2.882064,1.821588,-4.399978,7.916574,6.478202,9.526056,-6.156395,1.120368,5.233451,1.319811,-1.119776,-0.059473,2.968166,5.299880,-1.620019,-0.290263,-4.290213,-0.656031,6.961133,-6.570634,-5.073956,5.140621,6.784183,-5.707948,-5.115653,-8.077200,7.396456,-2.788459,9.711985,6.133983,2.536567,5.311454,2.516582,0.256885,9.849635,-1.306055,6.360297,-8.985058,-0.443448,9.756561,8.638073,5.202828,5.092045,2.847953,3.221915,-1.793989,-8.102448,-3.271388,4.706024,-7.834187,9.470575,-7.957360,9.484483,7.512494,3.019201,-5.116690,-5.742797,2.243722,1.268848,-7.808327,5.608985,-7.680555,9.118907,-6.522320,-6.412235,3.681919,7.621323,-3.922794,6.384842,-1.445110,9.733012,0.283818,-2.828707,7.774733,6.137525,-8.520152,-3.316032,4.393016,3.449837,-0.695769,-6.997036,3.431064,7.271710,-2.449429,7.733185,-0.729986,5.575900,-2.003784,-4.810885,-5.494104,-1.606358,6.562952,8.802075,-3.135880,-6.770282,-2.865217,-3.380193,-6.909820,2.844760,-8.371278,5.422898,8.972111,-6.250462,-5.099851,6.099518,1.431360,3.420794,-6.633075,5.391568,2.054545,0.150088,-9.683293,2.290931,-8.283914,-6.641831,5.190646,2.929858,-7.484814,-7.946699,-6.237746,0.010287,6.651352,-7.781180,4.068036,-6.911686,3.563719,-7.741788,-7.314536,-3.433596,2.113733,2.442014,-3.617148,6.812837,6.283398,9.378651,-6.505162,5.486443,2.157476,4.991364,3.765921,4.330351,-7.921055,-6.210025,4.928074,8.441133,9.495049,2.199669,1.259879,5.852259,1.623583,-8.454253,4.179375,0.560091,-8.744733,-9.488368,6.254507,-7.485708,3.106926,-1.151983,-9.386846,7.580954,-3.200933,7.363201,-8.586855,-5.656093,-5.645049,5.588853,-2.208982,-1.971582,5.799738,-4.102307,7.601178,-1.785591,-8.577970,9.711625,-9.760665,-9.690461,-0.940012,-4.784772,-5.973475,-5.361884,-8.774600,8.900941,-4.725990,0.419732,-1.439257,-0.430562,-0.440216,-2.732638,3.776892,2.407926,3.769513,8.677040,-0.392704,-3.925046,-6.982461,4.048605,-9.964641,-8.795587,-1.688741,-3.484574,2.356083,-9.297772,-5.577872,-2.883278,7.740569,8.759637,-2.593090,-9.257855,5.141199,6.229431,3.237539,-7.863457,4.724316,-5.422423,-6.057620,-3.234291,-0.582124,0.010068,-2.986262,-5.895892,-9.307026,-8.976633,-9.850980,9.859815,4.053699,-7.605429,6.792844,-4.759631,6.563370,-1.083830,2.513112,3.655367,-1.339460,-7.978209,8.672317,-4.394980,2.229644,-5.321873,5.826422,4.671027,-6.044537,7.291965,-6.661255,5.296655,-2.141181,1.659125,-2.057241,5.373202,0.179421,6.414549,4.641290,-9.089449,-2.534890,-9.971252,-4.802942,-4.140297,9.001512,-8.865857,6.495774,8.107828,-3.110774,-4.476513,-9.606238,5.606031,7.537019,-7.521238,-3.480670,7.890987,0.395073,-1.350638,9.638106,-6.430533,-8.253201,-9.710418,-4.862911,6.162616,-6.164859,-0.322109,-0.930307,6.223792,-1.386110,-6.476339,-6.245026,-4.725222,3.888714,-8.791542,2.356892,-5.324299,9.385320,-7.254516,-1.609071,-3.027785,1.627636,6.134315,-6.011601,6.510226,-0.312187,1.939405,-1.069245,-8.474325,-4.001735,-8.501112,-3.798979,4.663581,-3.642737,9.436788,-5.864540,5.069677,-5.686042,6.420770,2.871223,-8.835397,-4.704750,7.153492,1.781813,-1.768705,-1.390484,9.939218,3.953825,-8.641629,-4.221684,6.042464,-9.360647,-5.008180,6.503302,0.132225,0.078744,1.354590,-3.622789,-8.481800,-2.358800,3.228276,0.679565,3.070958,-5.286846,-1.812788,-9.714120,7.357977,7.130730,2.966044,8.229148,0.615189,-6.215293,-6.806553,2.921187,-1.555527,6.347684,-0.741734,8.241391,-4.136066,-7.095255,-4.875934,-0.826887,5.905046,-6.748210,-3.999812,0.071319,-8.303143,-2.136506,-8.838459,2.718387,-5.002591,5.978570,8.313555,-8.182347,-3.122696,9.780738,3.301441,-9.327406,9.506321,-1.497385,-4.470464,1.234694,4.394571,5.061089,-1.277930,2.101831,4.675352,3.733622,9.645975,-6.954182,-8.565054,-0.967968,5.584657,-5.898373,1.369102,6.944017,0.324474,-8.028216,-6.237485,-1.553298,-3.825775,8.751311,-2.019378,9.388526,3.399824,4.686825,5.820239,5.704958,-8.926082,1.669558,-4.656084,7.002172,5.891890,1.620439,6.964853,-9.981175,5.985834,-1.099604,7.331092,3.506589,6.802582,-2.302963,-7.877563,-1.913627,-5.338942,8.430020,-3.095086,-3.864146,-1.034633,5.845693,5.699232,-8.232453,-3.620101,3.937909,-7.194669,-8.977994,3.713565,-1.247507,-7.985489,4.652622,-7.285217,-5.371074,5.419612,-6.516798,-9.196399,-0.792921,-8.247619,-2.457158,1.879510,-3.065814,-5.141723,3.983905,1.396580,1.558641,-9.327772,-1.781605,2.294404,3.269376,9.809912,8.541493,-0.543848,-2.531995,-4.213705,8.791215,-2.129492,1.777573,-1.969504,-7.657226,-8.787104,5.755443,-6.894883,7.292278,-1.888760,6.507807,-3.186285,5.129421,-4.044485,8.298445,-4.880682,-5.681154,-2.176343,3.571324,-4.385199,1.643541,-2.405462,-3.764119,-7.012928,-9.458860,-4.666165,8.482460,-4.149897,0.566876,-7.916741,5.144561,3.887388,2.829034,8.437184,-0.571064,-8.958793,-8.354538,8.498517,-1.655878,-6.599267,-1.528815,-7.083072,-2.996032,7.721756,7.403539,-2.581717,-0.817230,-0.877679,-2.274314,6.831190,8.077666,-1.380290,-5.713780,-7.781274,5.473611,9.752613,-6.886585,7.962810,1.887681,-3.274868,-0.102497,2.496856,4.429890,-6.987160,-9.831184,-2.731232,-0.363586,2.601455,-2.095658,8.359135,4.157318,-2.329507,-0.420908,-3.956677,-3.691210,-1.412144,1.822922,6.902124,9.583770,-4.798825,5.928804,4.145304,6.560022,-7.341302,9.781160,-7.397418,9.160002,-2.703504,-5.251253,5.699975,7.507231,-6.095696,0.385202,9.076251,7.114779,-1.867712,5.624201,-6.745870,9.879081,-8.725281,-7.515633,0.821632,6.461122,3.134951,-7.163641,-5.958638,-8.608223,-4.872437,8.942252,-2.414798,-0.677154,6.328728,3.431172,-0.649200,2.744931,0.763253,8.763389,9.852486,-4.788159,7.907466,8.875334,-6.167283,-8.829908,4.800048,6.310691,-3.799634,9.619942,6.490725,-4.483745,4.718009,-9.514190,3.604307,2.620755,8.573245,-5.717170,-9.293016,-6.208967,5.803471,2.215462,-0.843951,2.285447,-4.113220,3.171582,9.009087,-4.445553,5.771360,2.274446,-3.777426,4.371034,-9.769105,-5.132036,4.027664,8.710907,6.219009,6.039260,9.994638,5.650939,3.150131,9.919156,-1.306196,7.081142,1.114193,-5.537430,5.253952,1.501515,4.492651,-4.787839,-2.582649,-8.514269,1.659494,-6.280194,-8.107635,-5.984356,-3.059024,-9.075012,1.511555,-6.179284,-4.561267,4.191991,-6.717402,1.471536,-2.717896,-7.635744,7.559704,6.987563,-4.315989,-1.741947,1.305222,3.726558,-6.050209,-4.890623,6.426309,-1.840560,0.122640,-6.339486,-2.226838,-1.922513,9.978266,-0.425119,2.381197,5.462002,9.097545,-4.009226,7.788963,-0.189970,7.723840,0.109788,6.940755,-4.496345,8.189290,-2.539589,-2.967035,8.946948,7.437904,-2.571161,8.049341,-3.350913,5.091937,9.834116,-2.166693,8.731755,-3.292580,6.663504,-1.975014,-5.758240,-5.200520,-0.927384,5.663338,-6.632723,6.748121,5.249819,4.447310,0.153463,-9.070622,0.568317,-5.414071,-3.139580,1.236061,-9.643578,9.529018,-2.523106,2.738371,-5.527267,-3.592820,6.523382,-7.395847,-6.021354,-2.017376,-3.053777,-4.705307,-2.889141,-6.623735,4.870029,-4.824265,-3.914154,-4.631750,9.877760,6.125296,5.203265,-3.731266,7.428401,4.375070,-9.233308,0.471154,5.016600,-8.938426,-5.327111,-2.506950,3.311609,2.705515,2.028812,-3.128032,9.325742,-8.129972,9.269911,4.883548,6.465092,-5.558401,-3.641500,8.851018,7.811842,9.518988,-5.793971,7.399786,-8.801009,2.878929,-8.783670,-6.866969,9.327826,-7.365903,-3.442992,7.634171,2.324719,4.266152,9.147865,2.372940,6.476927,-6.960265,-5.362910,4.759384,-5.467433,-9.887394,-7.530283,-8.398873,-0.249401,-3.750745,-4.120357,-6.162254,0.634150,-1.954603,-7.510154,3.431130,-5.401374,-0.778558,5.709421,-3.570932,-7.734134,-5.914571,4.684986,8.667519,-8.671316,-1.371114,1.398039,-7.135451,8.907106,-5.971373,-2.568404,2.902102,8.406878,8.919596,6.151471,6.028262,1.534279,-0.047111,-9.537248,-0.957778,2.352413,-1.828564,9.361402,3.675932,3.951424,3.719434,8.520949,-4.251052,-2.311042,6.201306,6.394818,9.783034,-1.515116,-8.245045,6.209190,2.315335,3.502092,-2.582998,-5.834314,1.930281,4.105023,2.055695,0.747400,7.221855,-8.584878,2.871233,4.515274,-2.125356,-3.492484,0.409102,4.649730,-9.899638,-8.958627,7.660745,-5.358071,-7.873400,8.033385,-2.840557,9.627372,-6.224514,-5.116771,-1.311455,9.235113,-3.371980,5.530107,2.240754,-1.452160,3.727136,-8.657395,-9.767206,-2.887925,-2.288689,-8.307127,-9.910933,2.391890,1.656353,5.379219,7.989057,-4.562016,-3.385557,2.517370,-4.710683,-6.563655,-2.906005,8.262295,5.270353,5.011456,2.194380,7.473790,-1.424707,8.935855,-9.598915,8.776792,1.193703,4.437541,1.423528,2.681446,0.483786,7.600778,8.379695,-1.833962,-3.639777,-3.924201,5.209265,-0.668978,-0.446259,-2.909065,-5.802818,7.955228,8.446738,7.616932,1.588607,5.113186,-9.729503,3.976088,4.163117,8.959478,6.067554,1.155068,8.364087,-4.819152,3.451411,-6.844746,-9.883114,8.778982,4.854924,-0.732588,-8.867852,9.792094,0.144459,-5.308671,-9.437384,-9.705495,8.583689,-4.287312,2.741874,4.778565,8.282016,-8.680938,6.367062,-3.101351,8.424820,3.470734,-1.816867,-9.857323,6.257293,-5.812383,-7.550217,-6.236349,-9.005364,-5.696106,7.771609,1.712251,-7.071523,4.149264,0.116118,-4.047600,-4.738129,-7.002476,-1.121861,-6.734427,9.321516,5.694999,-0.428066,-2.041403,-3.115778,-6.686878,-7.179272,2.288261,-8.324783,-9.049318,-0.958039,-7.021491,-9.131577,8.600946,3.415625,2.762575,-0.726426,5.672039,-2.205873,5.617000,-5.476593,-7.733999,2.328947,5.383023,-2.689210,-0.022041,-6.800326,-6.049868,0.985095,9.350717,8.793399,-4.863247,4.357837,-2.968118,8.845760,5.931583,-6.062776,-8.076131,2.689522,0.768988,7.569116,-4.079957,-1.686863,-4.090159,-3.886811,-1.456734,-2.329341,3.163181,-7.633274,9.067972,2.367733,-5.640396,5.135501,-7.528308,-1.093890,-6.671805,7.322031,-7.654285,1.575534,5.343660,-8.180793,-2.599497,-5.472339,5.303821,1.334434,-1.306852,5.499562,-1.227014,3.967431,5.545009,-4.988486,7.308144,-3.131657,8.538390,8.834022,7.822856,2.707776,-6.734500,7.715873,-3.622876,8.271011,9.708312,9.483969,9.340172,-5.721088,0.887561,-0.111830,-9.591746,-6.568442,1.958002,4.781386,8.404125,-2.873469,-8.517934,8.910577,-1.127505,-9.879805,3.278908,-9.119237,-1.141294,9.505598,4.258845,1.611223,-8.787606,-2.510891,4.822169,-0.821760,-8.595905,-3.869910,-0.002232,0.507230,-5.502161,2.278693,-4.183399,-1.788183,-0.803933,-0.248281,-0.210072,-8.603551,6.798359,-1.763229,-5.658314,4.956046,3.651511,5.704339,-6.036328,-1.389634,-0.524004,-9.430949,5.826636,-1.457605,5.056971,-9.249091,-3.468390,-8.381976,7.668061,-9.568523,-8.725822,-4.104881,0.862023,1.883961,-2.460920,5.861851,8.595104,5.315149,-4.328207,9.878905,-6.755741,9.411510,-0.628146,-6.091148,-6.589769,0.299239,3.594632,-3.000425,8.340794,-7.675617,-1.162893,6.781097,8.336281,-9.564377,-0.508543,4.096624,4.607228,1.736306,1.225652,4.371992,-9.185620,-2.251557,-5.428344,-1.905694,-8.499707,-3.166618,-1.588042,1.646099,-4.344016,-1.988641,5.817864,-1.013690,-4.937521,-0.954165,1.984996,-7.740794,-1.490187,0.297434,5.507068,-6.483582,-1.387463,-8.786104,-7.021358,7.232238,-2.196625,0.491639,2.153134,-4.714257,0.771407,9.693668,7.466224,-6.327847,-3.121177,-0.694630,-8.625141,-2.431151,6.512868,7.044161,-2.564342,3.462734,-3.627791,-5.286431,-3.165173,-4.419668,5.308398,-9.351058,7.818866,-5.729802,2.381447,1.912285,9.883291,-4.577450,2.020362,3.301275,-4.770516,-4.484888,6.843936,6.820299,5.517376,-3.798492,3.583653,1.467997,3.815270,3.743121,8.641888,-5.648325,-8.362087,9.702560,3.190327,2.167419,1.766253,-3.069119,-5.480799,-8.923104,9.925068,-7.342973,-3.596544,7.618573,5.331872,-1.274550,-0.466245,0.918539,0.951347,-0.336351,5.641838,9.188262,6.414469,-6.916596,0.297417,6.204734,9.236044,1.039105,-6.899144,4.224351,6.612905,-4.234315,9.139398,-7.080170,-0.700430,7.218130,-8.333692,2.000435,-0.355673,0.909296,-3.666015,1.216184,-5.100086,5.325279,3.783796,-1.463351,-6.501782,-3.357243,7.166894,8.387758,7.779669,3.118741,5.011522,8.134735,-6.258332,4.489931,-7.110603,-8.623041,7.681584,3.576846,8.809134,-6.562590,-6.052006,7.273470,7.475890,0.319463,5.223042,6.166384,5.454191,-1.546089,7.058519,4.894288,-9.040707,7.433274,2.862109,2.551688,-2.907815,9.130167,-7.677078,-6.159106,8.247988,9.244096,5.835262,0.110902,7.004909,-5.304788,7.600388,-3.969500,-1.489696,3.449075,-8.900775,-3.357023,-5.201327,3.189338,-9.470889,3.855705,-4.261089,-6.399781,8.850430,-6.203753,2.438568,7.791076,-8.514178,1.462328,2.972634,6.051971,9.626066,7.279641,8.757948,-2.978766,-0.793773,6.533646,-4.157891,-8.375278,7.043618,0.992075,-7.866961,8.532761,-2.283775,3.978054,1.923814,-0.583035,-5.771019,7.900850,-6.470639,1.131332,0.316680,3.059261,-7.777988,8.182588,2.325934,-4.843358,1.357004,-7.151001,-9.146219,-3.022105,-0.034075,-5.979200,-3.770841,-7.953446,-6.020440,9.148637,-3.742057,4.999651,9.933671,-3.273932,0.221262,-7.271896,-4.039198,1.029274,-3.722953,4.042633,-2.997399,2.757848,9.579007,7.037949,6.993021,2.569355,-1.614247,-5.080988,5.965023,-2.980320,6.615277,5.344050,2.843257,2.177205,-2.755851,9.948193,-6.330109,2.493884,-5.548416,8.331028,-0.491705,-9.840999,-8.380473,-8.653047,2.776351,-5.450236,5.573370,2.494640,-3.965624,-2.193958,8.163793,7.436795,-0.198726,3.513668,-6.199484,-4.447196,3.542289,7.393894,2.199282,8.787248,-8.750244,9.445090,0.243626,-8.790116,6.860085,7.396588,-4.737665,0.468049,7.700884,-2.514125,5.885494,-0.759296,4.039077,-6.744154,2.508438,1.490245,-9.148793,9.546120,8.150023,8.444640,-0.680957,3.818740,-6.321172,8.385198,6.189114,9.623761,-4.708438,3.101117,4.761910,-9.479124,6.503866,-5.368218,9.016302,-6.310848,8.319054,8.685856,-7.870838,8.413378,8.147364,-2.844908,-4.815965,-2.493699,-9.463642,-8.065755,5.214316,-9.621314,-3.400722,-6.384315,3.505805,5.674292,1.051303,-1.179009,7.430014,-1.386460,3.588653,-9.460553,-7.908367,-7.705293,-6.990711,-0.592804,-1.856391,6.917247,9.929410,-2.335816,-2.355516,4.416398,-3.775120,4.311712,3.346887,2.072797,-6.896722,-1.298552,-4.527262,6.352657,7.116649,-8.091734,3.551674,3.071574,-7.084218,7.002244,8.601792,-7.374839,-1.099500,0.588935,4.274121,-2.108898,-2.775051,-1.395235,-2.320262,-2.631560,7.625498,2.103825,-3.449031,2.583529,-3.941209,8.191464,6.452663,2.298715,8.543295,-1.133765,6.673324,-4.734897,8.461529,-9.862367,2.053187,-4.960060,-7.512929,5.948524,-3.172144,1.777991,5.954602,-3.575340,-1.295827,-5.953303,-9.932167,-1.292669,-0.624324,-2.915862,7.770877,3.830953,9.724429,5.923307,9.541177,-5.955535,4.201512,-8.009572,-3.153891,0.124033,-2.882815,-6.806988,-4.026232,0.285193,6.814010,4.400922,-4.610742,4.647572,-9.455908,5.309665,6.768932,4.227340,2.001649,1.318372,-6.497723,-0.660439,3.010269,5.267236,9.672878,-5.199148,-2.576765,6.452764,-3.123689,-2.154328,9.962483,-8.787952,6.949056,2.381577,7.930760,-5.181154,-5.753683,-5.291065,9.024401,8.665016,-2.602108,-3.789452,4.417716,-7.452359,-4.058618,-0.777313,-4.069908,7.625929,-7.473542,1.582850,1.409804,9.649180,-8.945236,6.881580,-0.852343,0.781773,-0.321100,6.489412,4.600449,8.461604,8.873266,-9.667119,-8.427087,1.639861,-0.384631,-6.874543,5.468830,6.105488,-9.178079,9.656857,-2.311937,4.405098,-7.471309,-7.157945,-6.910718,-3.992575,-8.353349,-4.814961,-1.845175,4.156501,-1.640792,-2.497598,-3.157326,2.505040,7.707055,4.902292,9.156946,-5.389388,5.860126,-5.179508,8.341345,0.770661,8.259044,-1.126264,-6.896324,-9.450031,-1.176261,-5.634167,1.362817,2.439545,-4.031060,-9.534569,1.592592,-6.197668,9.596100,0.977899,4.611201,-9.998674,-2.428910,-9.811315,9.881830,6.320088,2.446322,-3.858558,9.955577,9.668632,-3.687459,-7.570194,4.102891,-8.700028,4.079836,9.902685,9.371717,4.767573,-9.699398,-1.601496,-3.109500,5.310937,2.911692]], dtype = "float64")#candidate|1717|(1, 1755)|const|float64
call_1715 = relay.TupleGetItem(func_1295_call(relay.reshape(const_1716.astype('float64'), []), relay.reshape(const_1717.astype('float64'), [13, 15, 9]), ), 0)
call_1718 = relay.TupleGetItem(func_1298_call(relay.reshape(const_1716.astype('float64'), []), relay.reshape(const_1717.astype('float64'), [13, 15, 9]), ), 0)
bop_1722 = relay.greater(const_1717.astype('bool'), const_1716.astype('bool')) # shape=(1, 1755)
uop_1731 = relay.sin(bop_1722.astype('float64')) # shape=(1, 1755)
bop_1736 = relay.not_equal(uop_1731.astype('bool'), const_1716.astype('bool')) # shape=(1, 1755)
bop_1739 = relay.logical_and(uop_1731.astype('bool'), relay.reshape(bop_1736.astype('bool'), relay.shape_of(uop_1731))) # shape=(1, 1755)
output = relay.Tuple([bop_1682,bop_1700,call_1715,bop_1739,])
output2 = relay.Tuple([bop_1682,bop_1700,call_1718,bop_1739,])
func_1743 = relay.Function([var_1680,var_1681,var_1699,], output)
mod['func_1743'] = func_1743
mod = relay.transform.InferType()(mod)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1743_call = mutated_mod.get_global_var('func_1743')
var_1745 = relay.var("var_1745", dtype = "uint64", shape = (2, 14, 2))#candidate|1745|(2, 14, 2)|var|uint64
var_1746 = relay.var("var_1746", dtype = "uint64", shape = (2, 14, 2))#candidate|1746|(2, 14, 2)|var|uint64
var_1747 = relay.var("var_1747", dtype = "uint64", shape = (2, 14, 2))#candidate|1747|(2, 14, 2)|var|uint64
call_1744 = func_1743_call(var_1745,var_1746,var_1747,)
output = call_1744
func_1748 = relay.Function([var_1745,var_1746,var_1747,], output)
mutated_mod['func_1748'] = func_1748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1960 = relay.var("var_1960", dtype = "float64", shape = (15, 2, 11))#candidate|1960|(15, 2, 11)|var|float64
uop_1961 = relay.sinh(var_1960.astype('float64')) # shape=(15, 2, 11)
output = relay.Tuple([uop_1961,])
output2 = relay.Tuple([uop_1961,])
func_1966 = relay.Function([var_1960,], output)
mod['func_1966'] = func_1966
mod = relay.transform.InferType()(mod)
var_1967 = relay.var("var_1967", dtype = "float64", shape = (15, 2, 11))#candidate|1967|(15, 2, 11)|var|float64
output = func_1966(var_1967)
func_1968 = relay.Function([var_1967], output)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1991 = relay.const([[[-0.089416],[-8.280400],[8.993355],[5.675509],[4.045983],[-5.019294],[3.624282],[-0.027782],[-1.326636],[8.038778],[-5.262154]],[[-3.830184],[-8.931254],[7.766489],[-1.324918],[-8.730213],[-6.572081],[-7.002053],[5.802871],[7.122614],[-0.333340],[-2.363974]],[[9.959574],[0.225022],[-8.157421],[6.856471],[-4.011509],[-8.278771],[3.830245],[6.309835],[9.569997],[1.687164],[-4.626183]]], dtype = "float64")#candidate|1991|(3, 11, 1)|const|float64
const_1992 = relay.const([[[-2.055382,-3.379683,8.244156,-1.524744,0.027422,-2.472767,8.842784,-5.286225,8.800648,7.423204,6.612896],[-9.435838,5.598965,-6.455013,-9.582219,6.266767,-9.084160,-6.601204,7.482149,-2.563644,4.688245,2.749855],[-0.857598,1.890191,-4.284436,-0.427960,9.924964,-5.560429,7.507877,3.800878,-6.419331,-6.141109,-9.650079],[9.039988,6.307349,-3.023019,-9.438114,8.388968,7.255532,-5.770531,-0.964652,8.707740,4.659847,-1.063620],[4.127696,3.503798,-3.436585,-5.274488,-9.794972,-9.315498,5.615040,-9.059916,-6.243776,-9.865101,-3.102766],[3.830044,3.733778,-6.769185,-6.425643,6.451738,-9.357993,-9.285942,3.137293,2.635419,-0.501564,7.295457],[-4.362349,4.771463,-2.638287,-4.532161,-6.518560,5.211934,5.800261,-4.137767,-8.746271,0.081732,-7.270776],[0.577502,-5.984152,0.311449,-4.664586,-6.913813,4.869550,0.102323,-6.076148,-6.678219,-2.244367,-4.481232],[-3.531262,2.954809,9.047287,9.152111,-1.881033,6.251099,-4.659550,3.719976,0.391917,8.206441,6.722767],[-3.058163,9.415521,-8.959700,-9.956051,9.168810,-8.096841,6.490162,3.844062,0.398406,7.567085,-2.871688],[-1.055767,-8.428071,3.167698,-7.454288,0.099305,-7.213086,3.431368,-8.467883,-5.737585,-1.633878,-1.793232]],[[-0.290314,2.843537,-2.320020,-5.283376,-4.636065,-9.748316,-3.615689,-3.539050,3.787214,-9.175991,-0.716139],[-2.647536,1.103709,-5.552026,2.590712,-5.452852,-8.759477,-3.945667,-3.246186,7.663653,1.388062,-3.828305],[-2.341508,-7.469868,-5.045328,3.782358,-4.509254,0.339481,-2.331845,-2.489444,-5.169517,2.897096,-9.140828],[8.473287,-1.379276,7.503271,4.835687,-2.842377,-0.491744,9.090404,5.680368,-0.618925,-5.847771,2.270600],[7.595629,3.881425,-4.126611,2.075460,-4.891502,-8.698428,5.199616,-1.425818,6.807580,-2.414359,8.628161],[-6.477856,5.093160,-7.657357,-9.788488,-9.191172,3.448075,5.179135,6.193673,-6.606393,-7.257044,-2.953555],[-6.161843,-3.468413,5.680702,-4.173846,-4.801953,7.360642,9.227912,0.172722,-8.845624,8.365153,3.644022],[0.884649,4.426081,-4.828908,-5.312397,-8.863761,9.154728,-4.549991,3.185873,3.946663,1.133945,2.774382],[7.201626,-3.320494,5.350609,5.810615,8.888867,2.336205,2.235891,-7.265365,-7.807387,-5.026687,3.362946],[1.455453,8.536332,-9.314719,3.713200,2.429293,-3.532012,-2.733036,-9.219689,6.801383,0.293657,-3.005565],[-2.610577,-4.641463,4.370994,0.530078,-3.783398,-0.688915,9.061217,-2.391361,-9.673237,2.539957,-4.679501]],[[-4.769080,-1.313847,-9.705203,-7.534512,-9.461145,3.997278,-6.019808,7.591711,8.076861,-7.405076,-2.762446],[-6.379171,-3.521673,-0.849563,7.696568,-2.415442,0.099387,4.152204,-8.180858,3.922030,1.554486,6.983524],[7.113698,5.611209,-0.943711,-1.625553,2.164827,-7.622999,-8.173534,-4.106824,5.550744,7.710297,9.702783],[-2.561408,9.680685,-8.745914,-7.705224,-6.575395,-6.432323,-3.427876,8.176405,0.240152,9.203286,-8.222316],[0.106161,8.566062,0.926401,6.947773,-7.732206,-7.951804,2.888116,-7.906730,5.356823,-9.322479,-1.348499],[-2.685048,8.505745,-7.259591,4.995326,-6.837456,0.860795,6.148163,1.384035,6.109164,-6.423229,9.714000],[-4.530533,8.631825,-5.145878,-3.955343,-6.971187,-2.440328,-7.695304,-4.564485,5.542507,-2.217368,9.519138],[-3.274789,4.441214,-5.357091,7.617720,1.136805,8.532722,5.753514,-8.609805,-6.012516,6.897535,0.771810],[8.996205,7.237522,-8.480652,-6.851660,-8.998568,-1.293130,-8.931960,6.454590,-9.427831,-6.979721,-1.245172],[6.378251,2.027752,1.269231,-0.870251,-6.621640,7.807853,1.883227,-7.326103,4.336467,-9.810570,-9.542447],[-3.232031,-8.016187,-7.696471,-8.862077,5.951880,-7.869933,0.276897,4.118210,-7.912495,7.268431,6.908479]]], dtype = "float64")#candidate|1992|(3, 11, 11)|const|float64
bop_1993 = relay.power(const_1991.astype('float64'), const_1992.astype('float64')) # shape=(3, 11, 11)
output = bop_1993
output2 = bop_1993
func_1997 = relay.Function([], output)
mod['func_1997'] = func_1997
mod = relay.transform.InferType()(mod)
output = func_1997()
func_1998 = relay.Function([], output)
mutated_mod['func_1998'] = func_1998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2005 = func_1997_call()
call_2006 = func_1997_call()
output = relay.Tuple([call_2005,])
output2 = relay.Tuple([call_2006,])
func_2021 = relay.Function([], output)
mod['func_2021'] = func_2021
mod = relay.transform.InferType()(mod)
mutated_mod['func_2021'] = func_2021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2022 = func_2021_call()
output = call_2022
func_2023 = relay.Function([], output)
mutated_mod['func_2023'] = func_2023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2039 = relay.var("var_2039", dtype = "int8", shape = ())#candidate|2039|()|var|int8
var_2040 = relay.var("var_2040", dtype = "int8", shape = (2, 9, 4))#candidate|2040|(2, 9, 4)|var|int8
bop_2041 = relay.right_shift(var_2039.astype('int8'), var_2040.astype('int8')) # shape=(2, 9, 4)
output = relay.Tuple([bop_2041,])
output2 = relay.Tuple([bop_2041,])
func_2049 = relay.Function([var_2039,var_2040,], output)
mod['func_2049'] = func_2049
mod = relay.transform.InferType()(mod)
var_2050 = relay.var("var_2050", dtype = "int8", shape = ())#candidate|2050|()|var|int8
var_2051 = relay.var("var_2051", dtype = "int8", shape = (2, 9, 4))#candidate|2051|(2, 9, 4)|var|int8
output = func_2049(var_2050,var_2051,)
func_2052 = relay.Function([var_2050,var_2051,], output)
mutated_mod['func_2052'] = func_2052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2073 = relay.TupleGetItem(func_2021_call(), 0)
call_2074 = relay.TupleGetItem(func_2023_call(), 0)
func_1604_call = mod.get_global_var('func_1604')
func_1606_call = mutated_mod.get_global_var('func_1606')
const_2081 = relay.const([[-6.905458,5.706881,-3.772936,9.474322,-8.089274],[-8.046784,5.794091,-9.156771,8.884207,5.133291],[-5.798289,0.084053,9.532802,-5.407057,9.896012],[-4.575406,-9.138046,7.448787,-6.613816,6.720719],[-8.992860,2.151937,-2.573971,1.218085,2.476177],[3.996831,8.796064,6.817010,5.194100,-5.431669],[-9.124793,1.436780,-5.570087,3.625714,4.810072],[8.517035,-5.897840,6.212805,8.475168,3.886855],[9.875256,-0.248651,8.839785,7.763200,3.505710],[3.349101,-0.301517,-7.582525,7.733731,-9.777455],[-6.920184,2.112227,-2.109000,6.940847,2.418173],[-5.596701,-9.114845,-6.419751,-2.015150,-7.135841],[6.476393,5.267836,-6.285956,2.852064,-8.095625],[-9.760700,4.078172,2.685789,5.899820,9.170432],[0.025946,5.037649,-6.756984,-9.282681,-5.946164],[-7.843100,-8.665768,6.339770,9.078696,5.162872],[-5.437841,-0.602109,3.897497,5.273082,5.611618],[5.639006,-3.438063,-1.865225,-8.165389,-7.626991],[8.323779,4.257855,-6.525290,8.935777,7.987895],[0.278051,-2.573062,2.579647,-8.527870,-0.861764],[-3.949144,-6.453462,3.802357,6.383832,7.807699],[-0.568139,8.714808,6.793312,-2.948819,6.208859],[5.452144,-8.136211,2.424661,8.985378,-9.053440],[5.045815,7.681872,-1.978522,-3.926209,5.986278],[2.572549,-2.525225,0.851320,-1.448927,-3.693456],[8.708229,4.903089,-2.686812,8.780812,-8.621898],[9.380834,-4.150807,2.299357,4.615196,5.999519],[-6.708315,-2.393274,3.997836,-9.449451,-6.102730],[2.746309,-3.997977,3.462866,7.153017,-6.976112],[-5.200551,4.100663,-7.176091,3.828061,-3.551969],[-7.532877,9.945111,-6.540742,-6.343566,5.211274],[1.567939,-8.570358,2.243658,-9.025172,1.817513],[-5.799212,6.651322,-9.639882,-6.396163,7.745142]], dtype = "float32")#candidate|2081|(33, 5)|const|float32
call_2080 = relay.TupleGetItem(func_1604_call(relay.reshape(const_2081.astype('float32'), [1, 165])), 1)
call_2082 = relay.TupleGetItem(func_1606_call(relay.reshape(const_2081.astype('float32'), [1, 165])), 1)
output = relay.Tuple([call_2073,call_2080,const_2081,])
output2 = relay.Tuple([call_2074,call_2082,const_2081,])
func_2091 = relay.Function([], output)
mod['func_2091'] = func_2091
mod = relay.transform.InferType()(mod)
mutated_mod['func_2091'] = func_2091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mutated_mod.get_global_var('func_2091')
call_2092 = func_2091_call()
output = call_2092
func_2093 = relay.Function([], output)
mutated_mod['func_2093'] = func_2093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_2097 = relay.TupleGetItem(func_2091_call(), 1)
call_2098 = relay.TupleGetItem(func_2093_call(), 1)
const_2102 = relay.const([[-4.223319,-2.042460,7.345782,4.015416,8.571215,-7.245593,-4.558366,-6.446994,9.676665,2.575720,1.715564,1.513756,-4.727383,3.432012,-6.804419,0.383611,-1.970673,-6.342504,-0.062013,-9.625995,-9.781157,-7.470463,6.382517,-5.194983,2.626451,9.815124,8.962957,7.446455,3.442811,5.358068,4.364074,-6.802551,2.601661,0.684682,7.876535,5.693145,-5.195243,-2.481071,7.075374,-3.248610,-3.464970,5.060105,9.902815,-2.896525,6.245168,-1.446847,-0.144010,5.548039,9.413472,8.049063,-3.457380,-1.443145,1.095720,-4.400582,0.333692,8.521986,-4.293211,-6.251132,0.651863,4.333003,-5.876374,-5.602649,-7.596566,-1.287428,-9.432669,-9.828242,5.447611,-5.661821,-4.943954,1.225203,9.268087,7.919509,4.784080,1.041289,-9.219802,-5.867995,-9.013838,2.135243,-3.469478,-2.956618,-3.310504,1.668261,6.782782,-6.550257,-6.856202,-5.628392,-1.427654,9.119204,1.218865,-8.956885,9.988954,-2.970258,3.619078,6.039511,-2.209344,4.979572,-0.369888,-2.744567,-8.942024,3.003649,-2.322075,-8.699612,-0.286098,-9.406587,6.295962,5.638211,7.937881,-6.565671,-7.113559,-1.337021,-2.853774,5.847961,-1.895021,-7.207858,-0.707347,7.565180,6.463561,2.921447,-6.601155,2.239794,-7.354087,-8.023086,9.567019,0.782504,-8.331984,-6.211032,1.896047,-4.775319,4.183525,-2.002235,-5.209474,-7.853939,0.356262,1.257728,5.455872,7.517319,-5.263255,-7.403888,5.999796,7.053175,4.981704,-2.825375,9.000686,5.028472,1.108695,-1.970487,3.073778,-3.121863,-1.167050,-9.214786,-7.185786,8.457700,-6.721483,-8.298066,9.423432,9.166097,1.828544,8.051745,-5.421587,4.801654,-3.564920,-6.920860,-3.247081,9.723695,-3.995113],[6.859016,5.000798,7.801862,-4.789167,1.340352,5.402961,-2.365510,-2.639907,4.254422,-4.149781,5.463607,-7.938962,2.144154,-0.215528,4.142722,-1.400800,0.525739,-0.585784,1.404617,1.725347,-1.875691,-4.233078,5.252105,7.166947,4.520905,-3.825208,-9.920737,-6.579970,3.474901,-3.230804,-1.228235,1.979407,1.066591,-8.477758,-2.353320,1.102876,0.443110,-7.255806,5.289890,7.013177,4.639089,0.417027,1.740061,8.766289,-2.440811,0.897423,4.115352,-9.508516,-2.489978,7.861947,-7.001745,-4.566903,-4.803824,8.276484,-8.011501,9.756633,-8.539017,8.761478,-6.167787,-0.450133,4.166099,9.354390,8.855536,6.428482,9.824650,-3.507459,5.495469,5.124430,5.876546,7.790543,5.992356,-2.108954,4.179530,2.897275,-4.759884,-3.214203,-3.862726,-8.068218,-9.431300,9.362442,2.884941,8.085187,-1.230808,-8.970636,8.168112,3.745454,-4.717452,-4.681004,-1.185742,-5.827901,-8.134914,-9.507830,-3.143308,-7.944219,-5.909535,-2.378167,5.984346,-3.992338,-2.512575,-7.382529,7.924189,7.391503,6.513118,3.253826,8.307477,-8.118322,8.624759,-8.623821,-9.886051,-6.846128,7.833092,-2.148085,-0.837855,-7.085009,0.009468,8.272475,0.502644,0.065133,-1.460036,-9.447838,-3.556181,9.512169,3.426660,0.636601,-3.855032,-7.914407,0.298140,6.164305,4.271180,-9.064540,-5.636671,1.917583,-5.774457,-3.446348,-3.420838,2.532636,4.648387,-2.038344,-3.047028,-9.946317,1.118428,-7.392599,0.530955,-4.306362,-9.776554,-5.589147,-2.992409,-5.496305,-2.838223,-0.442735,8.348562,0.860605,-6.919670,4.220750,1.564477,-7.923824,-1.880220,1.215044,-5.255558,-7.491798,5.328840,0.406539,1.166873,-6.660247,-4.110606],[-4.646120,-0.713205,-8.518074,4.295024,-6.709513,-7.576344,8.593687,0.551565,-2.409640,-9.105442,-8.715692,5.789711,-0.453741,3.580563,-6.447574,1.955562,7.550161,-2.368719,-2.750512,4.842363,2.748113,7.833829,-8.219949,1.054747,-8.013342,-3.842887,7.508303,-0.096801,-0.339651,9.403721,7.912151,5.039311,-5.976469,6.204013,9.738760,6.387452,-8.090300,1.794763,-6.351334,9.812200,-1.869795,2.193204,-0.246098,4.729017,-0.694944,0.731410,9.581157,-0.576843,2.616721,6.948256,6.623012,2.919187,4.358979,-0.791353,3.745343,6.365338,5.977529,-3.270905,-7.424853,-1.263547,-1.887721,8.427185,-8.648395,1.685755,1.608792,-7.126085,-5.482954,-9.731758,-0.844889,0.999460,-4.622435,-1.093827,0.683941,9.715041,-9.119068,-7.860935,-4.982953,3.825266,-8.231920,-9.821477,7.513163,-1.658579,-7.863174,8.082973,4.696686,-1.195698,4.366628,-5.433117,8.918574,4.802296,3.954201,-1.496172,0.735336,8.951975,2.823610,1.608531,-9.314901,-1.900699,-8.328245,-4.690622,-2.819931,6.633646,6.727060,-2.866790,-1.894819,-6.516665,-4.537964,5.375418,-7.725530,0.986277,-7.409273,-4.804320,-6.790623,6.991370,0.563968,-4.762393,-1.494503,4.373499,3.072808,7.851884,8.382814,-1.135795,-7.821259,4.167690,-9.940647,-8.289181,5.522783,3.290450,1.258157,-6.674368,-0.462939,-7.862155,6.600846,-6.828012,-8.601647,-9.587415,-6.461007,6.628601,-3.864754,5.285439,3.839959,0.285580,7.006809,-0.876905,8.333493,7.098718,9.329947,-8.971322,1.279164,-6.975251,-9.939868,-0.492031,8.368409,-2.114549,-9.410957,-4.670238,5.406001,2.594758,-2.790236,-8.348549,-3.022118,-8.655861,6.614008,-7.614524,0.209685]], dtype = "float32")#candidate|2102|(3, 165)|const|float32
bop_2103 = relay.logical_xor(call_2097.astype('int64'), const_2102.astype('int64')) # shape=(3, 165)
bop_2106 = relay.logical_xor(call_2098.astype('int64'), const_2102.astype('int64')) # shape=(3, 165)
uop_2117 = relay.log10(bop_2103.astype('float32')) # shape=(3, 165)
uop_2119 = relay.log10(bop_2106.astype('float32')) # shape=(3, 165)
output = uop_2117
output2 = uop_2119
func_2126 = relay.Function([], output)
mod['func_2126'] = func_2126
mod = relay.transform.InferType()(mod)
mutated_mod['func_2126'] = func_2126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mutated_mod.get_global_var('func_2126')
call_2127 = func_2126_call()
output = call_2127
func_2128 = relay.Function([], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2131 = relay.TupleGetItem(func_2021_call(), 0)
call_2132 = relay.TupleGetItem(func_2023_call(), 0)
uop_2135 = relay.atan(call_2131.astype('float32')) # shape=(3, 11, 11)
uop_2137 = relay.atan(call_2132.astype('float32')) # shape=(3, 11, 11)
func_870_call = mod.get_global_var('func_870')
func_874_call = mutated_mod.get_global_var('func_874')
const_2148 = relay.const(4.340404, dtype = "float32")#candidate|2148|()|const|float32
var_2149 = relay.var("var_2149", dtype = "float32", shape = (165,))#candidate|2149|(165,)|var|float32
call_2147 = relay.TupleGetItem(func_870_call(relay.reshape(const_2148.astype('float32'), []), relay.reshape(var_2149.astype('float32'), [165,]), ), 1)
call_2150 = relay.TupleGetItem(func_874_call(relay.reshape(const_2148.astype('float32'), []), relay.reshape(var_2149.astype('float32'), [165,]), ), 1)
func_1966_call = mod.get_global_var('func_1966')
func_1968_call = mutated_mod.get_global_var('func_1968')
var_2163 = relay.var("var_2163", dtype = "float64", shape = (5, 66))#candidate|2163|(5, 66)|var|float64
call_2162 = relay.TupleGetItem(func_1966_call(relay.reshape(var_2163.astype('float64'), [15, 2, 11])), 0)
call_2164 = relay.TupleGetItem(func_1968_call(relay.reshape(var_2163.astype('float64'), [15, 2, 11])), 0)
output = relay.Tuple([uop_2135,call_2147,const_2148,var_2149,call_2162,var_2163,])
output2 = relay.Tuple([uop_2137,call_2150,const_2148,var_2149,call_2164,var_2163,])
func_2169 = relay.Function([var_2149,var_2163,], output)
mod['func_2169'] = func_2169
mod = relay.transform.InferType()(mod)
var_2170 = relay.var("var_2170", dtype = "float32", shape = (165,))#candidate|2170|(165,)|var|float32
var_2171 = relay.var("var_2171", dtype = "float64", shape = (5, 66))#candidate|2171|(5, 66)|var|float64
output = func_2169(var_2170,var_2171,)
func_2172 = relay.Function([var_2170,var_2171,], output)
mutated_mod['func_2172'] = func_2172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_2218 = relay.TupleGetItem(func_2091_call(), 0)
call_2219 = relay.TupleGetItem(func_2093_call(), 0)
var_2222 = relay.var("var_2222", dtype = "float64", shape = (3, 11, 11))#candidate|2222|(3, 11, 11)|var|float64
bop_2223 = relay.left_shift(call_2218.astype('uint8'), relay.reshape(var_2222.astype('uint8'), relay.shape_of(call_2218))) # shape=(3, 11, 11)
bop_2226 = relay.left_shift(call_2219.astype('uint8'), relay.reshape(var_2222.astype('uint8'), relay.shape_of(call_2219))) # shape=(3, 11, 11)
func_2169_call = mod.get_global_var('func_2169')
func_2172_call = mutated_mod.get_global_var('func_2172')
var_2228 = relay.var("var_2228", dtype = "float32", shape = (165, 1))#candidate|2228|(165, 1)|var|float32
var_2229 = relay.var("var_2229", dtype = "float64", shape = (55, 6))#candidate|2229|(55, 6)|var|float64
call_2227 = relay.TupleGetItem(func_2169_call(relay.reshape(var_2228.astype('float32'), [165,]), relay.reshape(var_2229.astype('float64'), [5, 66]), ), 2)
call_2230 = relay.TupleGetItem(func_2172_call(relay.reshape(var_2228.astype('float32'), [165,]), relay.reshape(var_2229.astype('float64'), [5, 66]), ), 2)
output = relay.Tuple([bop_2223,call_2227,var_2228,var_2229,])
output2 = relay.Tuple([bop_2226,call_2230,var_2228,var_2229,])
func_2235 = relay.Function([var_2222,var_2228,var_2229,], output)
mod['func_2235'] = func_2235
mod = relay.transform.InferType()(mod)
mutated_mod['func_2235'] = func_2235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2235_call = mutated_mod.get_global_var('func_2235')
var_2237 = relay.var("var_2237", dtype = "float64", shape = (3, 11, 11))#candidate|2237|(3, 11, 11)|var|float64
var_2238 = relay.var("var_2238", dtype = "float32", shape = (165, 1))#candidate|2238|(165, 1)|var|float32
var_2239 = relay.var("var_2239", dtype = "float64", shape = (55, 6))#candidate|2239|(55, 6)|var|float64
call_2236 = func_2235_call(var_2237,var_2238,var_2239,)
output = call_2236
func_2240 = relay.Function([var_2237,var_2238,var_2239,], output)
mutated_mod['func_2240'] = func_2240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2273 = func_1997_call()
call_2274 = func_1997_call()
output = relay.Tuple([call_2273,])
output2 = relay.Tuple([call_2274,])
func_2306 = relay.Function([], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
mutated_mod['func_2306'] = func_2306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mutated_mod.get_global_var('func_2306')
call_2307 = func_2306_call()
output = call_2307
func_2308 = relay.Function([], output)
mutated_mod['func_2308'] = func_2308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2365 = func_1997_call()
call_2366 = func_1997_call()
uop_2369 = relay.log10(call_2365.astype('float64')) # shape=(3, 11, 11)
uop_2371 = relay.log10(call_2366.astype('float64')) # shape=(3, 11, 11)
func_870_call = mod.get_global_var('func_870')
func_874_call = mutated_mod.get_global_var('func_874')
var_2377 = relay.var("var_2377", dtype = "float32", shape = ())#candidate|2377|()|var|float32
var_2378 = relay.var("var_2378", dtype = "float32", shape = (165,))#candidate|2378|(165,)|var|float32
call_2376 = relay.TupleGetItem(func_870_call(relay.reshape(var_2377.astype('float32'), []), relay.reshape(var_2378.astype('float32'), [165,]), ), 3)
call_2379 = relay.TupleGetItem(func_874_call(relay.reshape(var_2377.astype('float32'), []), relay.reshape(var_2378.astype('float32'), [165,]), ), 3)
output = relay.Tuple([uop_2369,call_2376,var_2377,var_2378,])
output2 = relay.Tuple([uop_2371,call_2379,var_2377,var_2378,])
func_2380 = relay.Function([var_2377,var_2378,], output)
mod['func_2380'] = func_2380
mod = relay.transform.InferType()(mod)
mutated_mod['func_2380'] = func_2380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mutated_mod.get_global_var('func_2380')
var_2382 = relay.var("var_2382", dtype = "float32", shape = ())#candidate|2382|()|var|float32
var_2383 = relay.var("var_2383", dtype = "float32", shape = (165,))#candidate|2383|(165,)|var|float32
call_2381 = func_2380_call(var_2382,var_2383,)
output = call_2381
func_2384 = relay.Function([var_2382,var_2383,], output)
mutated_mod['func_2384'] = func_2384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2386 = func_1997_call()
call_2387 = func_1997_call()
output = call_2386
output2 = call_2387
func_2393 = relay.Function([], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
output = func_2393()
func_2394 = relay.Function([], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2397 = func_1997_call()
call_2398 = func_1997_call()
output = call_2397
output2 = call_2398
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2415 = func_2414_call()
output = call_2415
func_2416 = relay.Function([], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2432 = func_2393_call()
call_2433 = func_2393_call()
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2436 = func_2414_call()
call_2437 = func_2414_call()
func_870_call = mod.get_global_var('func_870')
func_874_call = mutated_mod.get_global_var('func_874')
const_2439 = relay.const(4.217929, dtype = "float32")#candidate|2439|()|const|float32
var_2440 = relay.var("var_2440", dtype = "float32", shape = (165,))#candidate|2440|(165,)|var|float32
call_2438 = relay.TupleGetItem(func_870_call(relay.reshape(const_2439.astype('float32'), []), relay.reshape(var_2440.astype('float32'), [165,]), ), 3)
call_2441 = relay.TupleGetItem(func_874_call(relay.reshape(const_2439.astype('float32'), []), relay.reshape(var_2440.astype('float32'), [165,]), ), 3)
uop_2443 = relay.atanh(call_2432.astype('float64')) # shape=(3, 11, 11)
uop_2445 = relay.atanh(call_2433.astype('float64')) # shape=(3, 11, 11)
func_1295_call = mod.get_global_var('func_1295')
func_1298_call = mutated_mod.get_global_var('func_1298')
const_2448 = relay.const([9.349803,-2.758509,-4.441832,2.430472,1.815201,1.116749,5.651457,-3.509151,-3.261821,8.197440,-6.438784,-1.822701,-1.001442,-5.989788,5.381558,8.888326,8.047806,0.078800,3.118722,1.599556,-6.401284,3.405633,-6.097317,8.646850,-3.945642,-0.600586,6.995066,9.050338,-7.940671,-5.780149,8.893169,-4.287541,7.028454,8.561030,-0.980572,7.048234,6.181022,-2.579104,4.527431,-1.646729,3.827175,-9.227472,-6.091056,-3.630082,9.396439,-0.479314,-8.309229,-7.660607,-3.634937,-4.122980,-9.211397,7.438358,-6.747977,7.637763,2.168091,5.835107,1.073250,4.055815,-2.470547,-0.102181,-0.779865,-1.130508,3.881210,-0.214575,-0.642977,-5.723472,1.784791,2.476818,9.338790,6.322353,-0.778674,6.471057,-5.618574,4.693717,-7.805768,-4.018961,-4.000254,9.862826,9.682783,7.639957,-1.846120,-9.577623,6.814558,6.977504,2.234713,1.436694,-2.706092,8.767729,-2.656822,0.961782,-3.615349,5.996373,-4.779555,-5.359852,7.069882,-4.920454,5.972934,2.578449,-5.547814,7.085551,9.682607,1.762185,-4.431735,-3.822302,-8.987363,8.884398,6.310449,8.908353,-1.704307,-5.251113,-1.212442,4.592608,5.219837,-6.577400,-5.581098,1.172148,6.055699,4.790896,7.783147,-9.558705,9.126249,-4.557763,-2.787915,-3.433920,9.002336,-3.307967,1.890600,6.666714,-6.891030,-0.780940,-5.280916,-5.988426,5.292142,7.095311,9.939395,-7.271045,2.723762,-0.108443,-6.988669,-3.711348,2.992073,0.686244,3.133708,0.280539,6.740470,-5.267317,-2.194600,5.391603,-9.162195,-9.021967,-1.548841,-1.020182,-8.029290,2.936234,1.630600,-3.904752,3.312071,-0.462674,2.532579,-9.226938,5.797425,-6.943849,-3.709379,2.176264,-2.340665,-9.925056,-7.480328,-8.976309,7.633982,-2.453565,-9.717208,3.548810,-7.771969,-8.536983,-8.832169,-2.399588,7.101427,6.972121,-5.226707,-7.547717,-5.895747,6.474756,9.171416,4.550814,-0.476215,7.268662,6.120391,-5.948226,-9.026020,6.699427,2.644346,8.624337,-7.961914,-7.845221,6.869532,7.971168,-9.101528,0.546483,-1.015915,-8.379563,-7.953182,7.136643,1.014940,8.244891,-3.523050,-8.597750,0.026422,-2.321723,-7.987961,-8.440761,3.677736,4.502705,6.547350,9.527117,-8.311951,-7.735593,-0.795597,-6.195793,0.762184,6.498062,-5.383343,1.586554,7.254383,9.622379,3.437681,-1.147608,4.776013,-1.106323,-0.774222,-4.134931,8.888131,5.440006,9.757695,4.489543,2.066368,-7.934671,-2.867095,7.665425,-8.019211,9.665037,8.845500,-6.590771,-1.856114,3.581463,2.665967,9.538704,-7.763704,-7.164007,-3.235161,-2.484866,-1.884560,4.530569,-3.165015,8.764454,4.568827,-8.741014,-4.623868,6.035731,2.256644,3.911246,-9.901059,-5.370798,1.693457,-5.438531,-2.236821,1.585966,-8.811141,-0.363597,-8.724023,1.667944,-3.506372,-8.091773,-8.592017,1.296247,-9.167538,-2.237020,4.116424,2.294176,4.703994,-4.237106,-2.267069,8.381560,-4.215411,8.707141,1.669485,-2.811589,6.637722,-2.479200,-1.237450,4.308926,-0.064091,-9.990494,-5.913728,-0.555789,8.156299,-6.660953,-4.359736,-9.233351,3.199591,8.726497,-8.843620,-6.542120,-2.639167,-2.956920,6.715965,3.571171,8.606135,5.600381,7.318102,-2.909752,0.740233,-5.027260,-9.177345,-7.622133,2.399714,-7.524095,-1.962800,4.921613,5.267370,4.259011,7.838399,-9.786763,-2.193398,2.714300,6.844650,3.850319,-4.902890,-6.449562,-5.218013,-1.188576,4.319776,-1.487894,0.397874,-8.885418,1.869867,5.152572,4.305894,7.864104,-1.308134,7.939112,-0.833000,-4.682356,8.119242,4.924473,6.956448,6.254887,-0.948186,-7.456721,3.163271,-1.366156,0.582705,3.626425,1.372924,-1.883348,8.865318,3.854111,-3.884432,-5.491164,2.795467,-1.714658,3.258737,8.796218,7.258104,-4.266167,-5.401045,9.605498,-9.767246,-6.877326,1.472626,6.016821,8.738351,3.653495,-2.528358,7.529364,3.563025,8.287408,9.384999,5.497677,-6.077383,6.460781,-2.703412,-0.144714,4.275284,6.860369,-8.924720,-0.467354,2.052471,9.407872,9.097000,4.749185,-8.500031,-7.762532,0.388755,-9.907040,2.700424,7.500976,-6.996518,-9.043886,-6.892875,2.166900,7.259306,-9.391551,3.497512,-0.815750,-7.017759,5.291145,-3.379156,-1.758069,3.206122,-0.774614,-2.412650,6.699604,9.283894,6.898271,0.150358,-9.500696,-6.568930,2.791063,0.091249,-2.917908,-9.944319,-2.694056,6.359960,-0.811297,-3.431897,2.642714,-7.823881,1.655328,2.932754,-4.903972,4.463682,1.122083,6.775613,5.014855,-5.803169,0.028388,-1.557610,-7.348409,-1.489995,-4.460759,8.802144,-5.739354,-1.330354,8.972337,-9.356994,-6.771454,1.938388,0.163403,6.737468,0.020665,-1.263379,-9.281618,-5.856168,6.500659,5.004669,9.681857,0.331318,0.331517,-7.660443,3.199997,-8.799274,-2.939290,2.710567,-4.282344,7.358390,7.101247,-9.080503,-2.760259,-5.111995,-0.589083,2.066923,-0.796857,5.229615,6.314952,-8.048311,-5.547033,-4.618002,-0.665003,-0.658188,-8.836025,-7.773563,1.061141,7.264284,-5.850522,2.168093,-7.180475,-6.124202,-2.482890,-1.903591,7.081270,-6.032159,0.027627,6.341562,9.469812,-2.750259,9.472303,4.700378,-9.572104,-1.977232,-3.524623,8.419422,-8.505869,3.679050,2.466123,-1.632229,-9.929600,-9.491982,-4.170959,-0.160684,1.960577,7.886696,1.099327,5.510070,-6.758848,-2.433353,-5.876917,5.686428,-6.422161,8.771894,-1.363942,-5.520502,-7.357136,-2.745725,-3.954916,-9.796689,2.295143,-6.887272,-6.830385,-1.521191,0.374866,6.464279,-0.615296,9.586430,6.391533,-7.015520,-6.976304,3.462804,9.810936,0.150978,-8.241979,7.571467,-3.900596,-5.435011,-6.982153,8.966088,-2.878912,3.542174,8.141544,3.199317,5.409004,-7.238333,-3.183466,-1.598102,0.643970,-6.441895,-3.529613,0.669324,8.990935,7.986684,1.543794,-2.267698,-5.766625,-3.022331,-7.082102,-0.831203,-4.626870,0.039160,-1.460216,-5.543817,-1.609074,1.253801,1.746450,4.763554,0.883609,-5.194366,0.719393,-5.497733,-3.774702,7.431307,-7.984099,-3.305387,-8.157190,0.227130,8.845394,-5.932382,-8.447518,-2.092467,-7.880303,1.131762,8.842510,-7.235221,-4.279016,-3.797712,-1.503148,5.676683,6.217074,8.442089,4.968926,0.564927,-8.730972,-2.758849,0.272552,-9.030763,-7.859592,6.214167,8.260112,-3.289056,-4.951601,-9.740518,-2.477584,5.485314,7.743601,5.369473,-5.776374,-0.867436,-7.272525,0.207580,4.950721,-3.176659,0.952930,6.798559,4.901595,-8.678077,-3.764970,-1.721603,-6.121957,4.266085,-3.860750,1.058425,3.610070,-8.432735,-4.591279,6.517117,8.947002,-8.237995,-0.704717,-1.682125,5.821218,6.251259,3.459587,9.606314,-3.205421,-8.022241,8.658483,1.002504,0.177788,4.359179,0.623735,1.382641,-8.647365,-4.414243,-5.508971,-3.418650,6.555085,5.407173,-1.668285,5.445186,7.388347,7.458244,3.675821,2.771470,-5.133144,-1.508934,-0.129200,6.682887,8.874664,5.881804,-8.624720,-7.045542,3.900016,-3.282537,-9.013418,-5.987040,4.985271,-0.458805,-3.212331,4.985163,-1.216218,9.780570,-5.855067,9.458146,-1.288153,1.862569,5.847799,-6.151570,4.109239,-6.318732,-9.855924,-1.676345,-2.530813,-0.845447,-0.209373,-3.118306,-2.299157,6.985920,-6.068521,-8.921554,7.268203,4.981716,3.993903,-8.530013,-6.304698,-9.159438,3.754151,3.028730,-4.439864,9.783843,3.117324,0.368946,5.052450,-1.816997,-3.171447,-8.673531,-2.527745,-7.625509,5.533540,6.740139,2.039731,6.697857,-3.575185,-2.623306,-8.442685,8.757046,9.254442,0.080907,-2.311193,-4.107000,7.727096,-9.204503,-5.786673,9.725564,4.478612,-7.724001,6.704421,-1.760216,-9.636018,-9.272064,-3.426315,-9.921125,-6.889617,-8.983195,-8.015616,8.204191,6.929408,7.405754,-3.872287,7.595975,3.122353,-3.470583,9.305825,-3.483937,-3.509830,1.247143,2.098475,-0.968212,2.213874,-0.800645,-4.597292,0.336192,4.642381,9.998453,-5.672562,-4.697414,-7.169612,-9.023117,9.803588,0.301302,5.336282,-1.704205,1.981670,-9.585355,1.026644,-8.154470,9.786174,9.917621,-4.619556,-2.464409,8.475979,9.175910,-5.105466,-0.756005,-6.726191,1.343956,-6.725652,-2.935835,-5.209753,-1.527082,3.882864,4.882402,8.174395,-7.323966,-2.583952,-6.549659,0.167779,2.265411,7.013879,5.875453,-2.940672,5.701622,-6.878027,-6.942881,-7.885645,-1.424210,4.230520,-9.586333,-3.646979,-8.528791,-2.130338,-6.380412,-3.470085,8.736503,0.086995,-7.319459,5.650542,-7.414664,0.989868,-8.294778,-0.463830,-8.327148,4.042920,-5.965783,0.515453,-2.309255,5.743779,6.378109,-1.034586,2.889565,4.136214,4.835372,7.321548,-8.108713,-7.924492,-4.520536,6.055791,-0.139851,-6.352605,-0.261185,-7.570554,0.929815,8.813448,6.401478,3.786582,-7.745008,-9.123869,6.221807,7.431128,3.772040,-2.107312,-9.345824,-6.659752,-0.957731,7.139643,-8.811014,5.996803,4.332054,-8.209223,0.148782,7.304439,-7.200439,1.122887,8.014185,0.769596,6.320899,8.830510,7.396275,-9.850213,-2.159927,-4.975607,9.568285,-2.018489,-3.765154,-4.844617,-1.251453,5.129497,4.280282,-0.196271,-1.272754,7.387454,9.944703,7.215709,-6.974537,6.799015,-7.017994,0.850148,9.724105,-1.268328,-8.483301,5.441280,9.573870,9.321810,-2.425353,8.306450,3.125797,-8.156967,4.147845,2.408179,8.826601,-8.025180,-1.651891,-4.209692,6.254498,-8.686587,4.212522,-5.220837,-2.023781,0.677491,5.264158,9.222693,-3.595092,-3.601286,-3.235379,8.718535,-2.434252,3.641696,-7.682613,-3.151091,-8.018981,0.636425,8.514932,-1.750707,-4.074097,-4.514223,8.161693,-4.971216,0.370893,8.080104,2.423139,4.487454,8.415838,-3.998697,-1.519743,6.105718,9.914777,-2.632747,2.064680,7.113476,2.441647,1.552273,2.602952,-8.008855,-9.888085,-7.531516,-6.925955,7.869834,-8.719599,7.169582,7.033304,-5.701210,-9.948934,6.415954,6.584225,8.966284,-7.090752,8.349111,-9.570917,-7.940721,-0.344065,-3.996110,-7.367618,-0.614745,-6.451118,-9.452080,-5.827731,-4.591129,6.902807,-5.401860,-0.725120,0.955300,4.422061,8.683180,-0.323935,-4.802564,-2.283979,-0.212132,7.027245,-6.717711,-2.046619,9.176455,8.644657,7.263786,8.982561,1.054608,4.033683,-9.877394,-9.122994,8.592170,3.288901,0.650436,-9.479636,-9.127193,-0.628527,8.014871,9.215335,9.448963,9.885521,-7.223199,5.016355,-6.197583,-4.906162,0.195623,-6.790624,-1.904185,-6.341885,-1.548604,4.432479,-4.470358,7.690915,-1.265983,-5.996804,0.239712,4.078233,-8.109194,1.995976,8.940417,3.323756,-7.700618,6.141811,4.752357,-7.989903,2.817556,0.817932,4.957640,9.330909,4.568395,-0.337456,9.190112,-7.667904,-5.914574,1.674707,-6.111095,-9.741767,-9.364121,3.007128,8.890551,6.488887,4.093823,1.687286,1.645955,-1.823967,-4.307714,8.920433,-2.575453,-7.968151,-9.406348,7.604615,-2.398746,9.859018,2.591598,2.836149,8.376427,5.993908,3.541825,1.144194,-7.325656,4.749992,-5.527421,-2.406909,5.850606,4.790734,-4.874741,-4.810783,-3.496494,-7.262800,-9.862389,8.133815,-9.202511,-9.223812,4.181702,3.559383,9.975004,-8.148223,7.714736,2.954119,7.080268,-8.882154,1.834327,0.666556,5.371374,5.021889,3.933457,0.700772,-3.436416,0.139445,2.249272,4.186605,7.585711,2.074977,-3.613978,7.009803,3.484001,-6.803591,-2.248256,1.657920,2.014895,9.373151,6.189232,-3.223005,-3.982979,6.457586,-0.736708,2.304846,-9.162132,4.135513,7.732517,9.624433,-7.654820,2.036611,8.322833,-1.596396,3.598403,1.508885,-6.205501,-4.348937,3.241150,3.774039,-8.814680,0.469139,2.299185,-3.644725,-7.359832,6.992939,5.958489,3.807833,9.530608,1.104184,-4.837281,9.638723,-4.631521,5.972002,8.245202,-0.367064,1.074721,1.340631,-5.016985,0.369016,3.753959,1.774317,5.063245,5.078023,9.880656,-9.446582,7.302135,-2.120190,3.958294,9.897565,-6.690179,0.775610,4.151367,-7.527344,-4.777137,-9.429782,9.943182,-1.017966,7.571681,7.440525,-6.347384,-0.463802,-2.057780,2.554427,-5.407817,-4.802479,-5.186455,5.343293,-6.498718,0.088974,4.274219,-0.347668,-7.172551,-8.953818,-4.834475,-8.826003,3.961584,-7.867523,3.025345,0.730687,-2.393235,8.003732,5.271672,3.333270,-1.477698,-4.852664,-6.508031,-9.106717,8.164490,-7.999077,4.711150,-4.146973,4.387385,-6.056989,2.776022,5.354275,0.033363,-7.258409,2.596955,7.359675,4.760767,9.555517,-7.605827,-5.310304,-0.770292,-1.260405,8.130923,-1.157433,6.656259,5.800988,2.699506,8.488373,7.467153,9.218406,3.509839,7.914542,3.942655,-8.977969,-4.243482,8.581702,-4.134576,-0.158639,7.500017,-0.511290,3.440409,5.996235,-7.427510,-9.761026,-9.682118,-8.785794,-9.552193,-9.187020,8.882345,9.390889,0.778808,-1.242779,-6.063322,5.653039,-8.110164,9.133661,-1.959941,-5.852631,4.789001,-1.577111,-8.014609,7.723347,-3.548981,-3.087422,-6.080962,-3.402858,9.204369,8.168790,8.020105,0.902988,9.238694,-3.547532,0.079300,-9.339073,0.441137,-3.195904,-0.623051,-7.384601,-6.912541,-5.773165,-6.237459,-7.198731,2.351955,-2.735642,1.161175,-8.652794,-8.354862,-6.742127,9.937350,-8.702988,7.119209,4.844358,-3.176467,1.365907,-9.374811,1.353192,-1.633874,-9.721921,-0.621241,-0.327150,-3.570074,-6.366135,4.927858,-5.653542,3.609615,2.531237,-3.709703,-1.038234,-5.828418,1.840156,3.529633,-6.446501,-6.765089,-4.111506,9.025313,-2.195155,5.594817,-5.181939,3.564340,-6.100626,1.267349,-3.006700,-5.049504,-6.665863,-0.019438,8.145907,-9.931062,5.596921,6.392784,8.101453,-9.849031,-3.216357,-2.855345,9.713223,-5.634630,0.743251,7.852531,2.629391,-2.839477,5.712295,9.490236,8.940648,-3.773590,-7.768613,-6.905834,-4.240678,-3.656269,-7.687011,9.835891,-6.121143,5.156532,4.969237,7.501028,-3.153423,-4.213015,-6.689297,8.063674,1.849127,-4.922509,2.556063,-3.813031,-9.028213,-9.775932,8.179873,-5.629705,0.566759,7.293465,-7.031969,1.698332,5.530808,-1.979193,4.967048,0.096501,0.730224,5.745306,-3.868392,-7.890853,-9.725885,2.262795,-2.073911,7.536604,-5.477281,-4.597969,-8.256891,1.262498,6.043841,9.242973,4.923088,-5.012698,2.443816,3.208731,5.851641,-0.295364,4.993154,2.566829,6.559468,9.725870,-9.969026,-6.740995,-8.386410,-0.429840,-7.335501,-0.732324,-9.826260,-9.636913,-0.523407,6.199700,-1.333590,9.897051,0.971950,3.473439,-4.271326,-0.137397,2.889224,7.564655,9.193300,1.557303,3.648460,4.376933,-2.715948,9.963673,-3.407930,-2.005693,-3.055347,-2.842378,2.835340,-7.270124,-3.184072,-5.578949,-2.613676,8.932264,0.664178,3.905533,4.452269,-8.907025,-2.562721,-9.804158,-8.330598,2.237228,0.017643,-4.570598,-4.334221,-2.393953,-4.733042,-5.264701,-9.704350,-9.713934,-3.795155,-0.267147,-9.675125,-6.534217,3.912137,7.196790,3.350608,-6.050514,-5.978301,8.456171,-3.839484,-3.665229,-5.185988,6.504913,-2.345880,-0.896157,7.103201,-1.731207,4.603612,-2.674805,-4.959953,-8.100924,7.201577,-0.522798,-1.593264,-3.714668,4.816667,0.098559,7.083674,-5.041104,-9.962749,-1.741434,4.271500,4.474059,7.429014,2.470831,-8.688618,-7.681306,5.707792,8.616007,-1.999157,-7.550506,-1.801324,-2.230179,-4.552433,-6.117913,6.234485,-6.994122,7.031815,-2.183453,8.580785,-8.545321,9.604051,4.155459,6.448952,-6.420690,-3.350613,5.291698,-6.964269,-1.004226,-7.495875,9.664694,-3.175034,9.389195,-6.768226,-3.354162,8.026297,2.633462,3.529813,4.813842,9.276322,8.825080,-0.563842,3.046351,-6.308280,6.628893,-1.709615,-8.093183,-2.952657,-8.790738,6.606017,8.682538,-5.596213,-2.137465,6.290529,-7.376302,8.808091,1.484256,6.236529,8.637249,-8.765319,-7.820651,2.619006,7.177894,-6.826661,-9.689054,1.834351,7.157403,-5.143558,9.525856,8.355583,0.897151,9.236934,6.551206,7.644742,-2.751207,9.042624,-9.327521,-1.590270,3.672579,4.317051,-2.670969,1.074843,-4.467629,0.448384,4.704991,-3.782597,-7.164414,5.422468,-2.503051,-0.460652,1.878209,8.652809,-9.584410,3.082336,4.114100,-7.665172,5.721727,3.711718,5.804531,-4.045050,0.461912,0.697522,-4.636257,1.879338,8.298347,-0.666741,-4.229739,-1.041578,5.895964,-5.558425,5.325379,-2.574849,-2.662184,-9.434354,2.787639,-4.764231,6.759410,-8.375678,5.319181,-5.474165,8.279135,8.725939,8.752076,-4.373175,6.249164,6.918546,5.353187,-9.358871,3.279575,-1.122598,4.322604,2.641659,-2.465023,-1.203355,-1.226416,6.877869,0.515054,2.652908,-0.770387,8.418083,-0.716268,-4.559960,7.355627,0.050098,-7.201179,0.842635,-5.357802,-8.533986,-1.017630,-2.565582,-2.992612,-5.015158,-2.868495,-1.827247,8.098159,7.496946,-1.554070,-9.254082,-2.434458,-2.668983,7.172511,-0.344811,-4.644341,-8.114950,1.314821,9.478636,-1.160507,-8.845295,3.614463,-4.615554,-6.915551,-7.205839,3.437985,-3.052113,-2.473380,-4.205042,-9.638841,-2.748473,-8.516944,0.396751,5.153258,5.548037,-4.944019,0.373078,-1.846373,5.487834,8.606046,7.786656,-2.478463,-9.928274,-1.818111,-4.633543,7.145320,2.184705,1.328862,0.032111,-8.694304,7.868438,-2.465381,-6.074773,-4.484810,-3.986403,-8.242796,-5.090790,2.307712,5.450919,-3.298701,2.024055,-5.259746,3.914185,4.300982,8.640879,5.462947,2.577566,8.731495,-6.419144,8.942838,0.013962,-4.459505,-6.621013,-0.974685,1.761744,5.822090,-0.631566,3.887050,0.097695,-4.715852,-3.350772,7.532122,-8.635628,-2.421721,-2.705623,3.114908,5.102621,-6.964936,3.189107,3.606722,8.479660,4.687034,8.168578,3.780910,-0.111127,4.847919,0.386775,-9.707639,0.031306,-7.037708,-5.724321,6.767015,2.267156,9.279973,-0.995751,0.711941,4.715461,9.996213,6.190852,1.211298,-9.161267,0.139459,-2.191697,1.140661,-3.217396,2.020432,8.411234,-5.175900,-0.942453,-4.582732,-8.480969,-0.754858,-3.706129,-6.888582,-8.697595,7.182718,-9.937697,-5.080683,-1.297286,-9.962722,4.763753,6.826272,-7.708452,3.914597,7.128889,3.458170,7.893013,9.445119,8.478492,-6.452085,-2.247399,3.055922,-9.302932,1.334198,9.634889,2.712902,9.741363,-1.278340,-0.526340,9.025923,5.366037], dtype = "float64")#candidate|2448|(1755,)|const|float64
call_2447 = relay.TupleGetItem(func_1295_call(relay.reshape(const_2439.astype('float64'), []), relay.reshape(const_2448.astype('float64'), [13, 15, 9]), ), 1)
call_2449 = relay.TupleGetItem(func_1298_call(relay.reshape(const_2439.astype('float64'), []), relay.reshape(const_2448.astype('float64'), [13, 15, 9]), ), 1)
uop_2456 = relay.exp(uop_2443.astype('float32')) # shape=(3, 11, 11)
uop_2458 = relay.exp(uop_2445.astype('float32')) # shape=(3, 11, 11)
output = relay.Tuple([call_2436,call_2438,const_2439,var_2440,call_2447,const_2448,uop_2456,])
output2 = relay.Tuple([call_2437,call_2441,const_2439,var_2440,call_2449,const_2448,uop_2458,])
func_2467 = relay.Function([var_2440,], output)
mod['func_2467'] = func_2467
mod = relay.transform.InferType()(mod)
var_2468 = relay.var("var_2468", dtype = "float32", shape = (165,))#candidate|2468|(165,)|var|float32
output = func_2467(var_2468)
func_2469 = relay.Function([var_2468], output)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2490 = relay.var("var_2490", dtype = "float64", shape = (4, 4, 12))#candidate|2490|(4, 4, 12)|var|float64
uop_2491 = relay.sigmoid(var_2490.astype('float64')) # shape=(4, 4, 12)
func_1492_call = mod.get_global_var('func_1492')
func_1497_call = mutated_mod.get_global_var('func_1497')
var_2494 = relay.var("var_2494", dtype = "float32", shape = (480,))#candidate|2494|(480,)|var|float32
var_2495 = relay.var("var_2495", dtype = "float64", shape = (1755,))#candidate|2495|(1755,)|var|float64
call_2493 = relay.TupleGetItem(func_1492_call(relay.reshape(var_2494.astype('float32'), [16, 15, 2]), relay.reshape(var_2495.astype('float64'), [1755,]), relay.reshape(var_2494.astype('bool'), [16, 15, 2]), ), 0)
call_2496 = relay.TupleGetItem(func_1497_call(relay.reshape(var_2494.astype('float32'), [16, 15, 2]), relay.reshape(var_2495.astype('float64'), [1755,]), relay.reshape(var_2494.astype('bool'), [16, 15, 2]), ), 0)
output = relay.Tuple([uop_2491,call_2493,var_2494,var_2495,])
output2 = relay.Tuple([uop_2491,call_2496,var_2494,var_2495,])
func_2498 = relay.Function([var_2490,var_2494,var_2495,], output)
mod['func_2498'] = func_2498
mod = relay.transform.InferType()(mod)
var_2499 = relay.var("var_2499", dtype = "float64", shape = (4, 4, 12))#candidate|2499|(4, 4, 12)|var|float64
var_2500 = relay.var("var_2500", dtype = "float32", shape = (480,))#candidate|2500|(480,)|var|float32
var_2501 = relay.var("var_2501", dtype = "float64", shape = (1755,))#candidate|2501|(1755,)|var|float64
output = func_2498(var_2499,var_2500,var_2501,)
func_2502 = relay.Function([var_2499,var_2500,var_2501,], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_2515 = relay.TupleGetItem(func_2091_call(), 0)
call_2516 = relay.TupleGetItem(func_2093_call(), 0)
func_2049_call = mod.get_global_var('func_2049')
func_2052_call = mutated_mod.get_global_var('func_2052')
var_2518 = relay.var("var_2518", dtype = "int8", shape = ())#candidate|2518|()|var|int8
var_2519 = relay.var("var_2519", dtype = "int8", shape = (36, 2))#candidate|2519|(36, 2)|var|int8
call_2517 = relay.TupleGetItem(func_2049_call(relay.reshape(var_2518.astype('int8'), []), relay.reshape(var_2519.astype('int8'), [2, 9, 4]), ), 0)
call_2520 = relay.TupleGetItem(func_2052_call(relay.reshape(var_2518.astype('int8'), []), relay.reshape(var_2519.astype('int8'), [2, 9, 4]), ), 0)
uop_2530 = relay.log(call_2517.astype('float32')) # shape=(2, 9, 4)
uop_2532 = relay.log(call_2520.astype('float32')) # shape=(2, 9, 4)
output = relay.Tuple([call_2515,var_2518,var_2519,uop_2530,])
output2 = relay.Tuple([call_2516,var_2518,var_2519,uop_2532,])
func_2540 = relay.Function([var_2518,var_2519,], output)
mod['func_2540'] = func_2540
mod = relay.transform.InferType()(mod)
mutated_mod['func_2540'] = func_2540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2540_call = mutated_mod.get_global_var('func_2540')
var_2542 = relay.var("var_2542", dtype = "int8", shape = ())#candidate|2542|()|var|int8
var_2543 = relay.var("var_2543", dtype = "int8", shape = (36, 2))#candidate|2543|(36, 2)|var|int8
call_2541 = func_2540_call(var_2542,var_2543,)
output = call_2541
func_2544 = relay.Function([var_2542,var_2543,], output)
mutated_mod['func_2544'] = func_2544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_2652 = relay.TupleGetItem(func_2306_call(), 0)
call_2653 = relay.TupleGetItem(func_2308_call(), 0)
const_2654 = relay.const([[[-8.620883,-6.560061,-1.404892,-3.762082,-6.749808,4.313867,-0.763523,2.642816,1.358360,-6.476175,-6.869954],[-7.513784,5.998698,-3.835245,-1.721336,7.885860,6.495842,-0.773261,-8.934087,-3.327579,-1.877197,9.505280],[-9.442497,-1.361619,9.780452,1.690522,8.883313,-0.855962,6.113708,-4.668319,-6.396059,-2.961837,5.446547],[-6.006765,9.424295,-5.057407,-7.229429,-3.700203,4.726202,-9.746806,8.686170,-7.796272,8.525312,3.622285],[8.121601,8.259444,-1.955460,8.482275,-0.263129,7.030468,-6.538663,-2.140397,-0.873047,-4.681073,6.578806],[-5.863912,-7.720125,-8.662580,-0.844670,-8.387761,4.590781,5.014677,-3.789849,-6.447516,-1.204615,-1.556962],[1.263139,-0.545783,-9.887010,2.033538,3.469038,-3.176001,7.698430,-1.033391,6.678980,2.179378,-5.699221],[-5.635667,-5.774225,9.722721,-7.958630,9.281259,-1.891879,9.868048,-5.993583,4.441574,5.341949,-3.075952],[-6.594528,-4.177132,2.492674,-4.239898,-3.188283,-1.166599,5.788079,-7.231596,-2.891789,-7.292304,8.865100],[9.616269,-2.689895,6.928127,-6.328677,-5.224586,-5.038310,-2.213437,3.259120,3.571769,3.789057,-9.416638],[-3.927735,2.082962,-0.100638,6.804476,2.737028,-9.796163,8.642783,1.453387,8.537233,-2.298856,-8.350019]],[[6.870995,-4.831950,-3.780845,3.038379,-4.826802,4.555449,-3.709864,4.324383,6.232075,-1.192778,5.437780],[5.816929,3.301213,-1.992109,7.601609,1.897271,-2.078618,5.725985,9.654321,9.541871,-4.973703,9.995906],[3.987479,4.178007,-3.768774,-9.093873,7.050749,-4.213596,-6.754727,1.078779,-5.887517,-3.289041,-3.499284],[7.216870,-4.299676,6.227787,5.972458,6.217588,-5.547855,8.871387,-6.071031,-1.483253,4.272476,8.290637],[3.582411,5.398788,2.024381,7.837605,-5.550626,5.105663,4.905925,2.200083,-2.601704,9.505718,9.332503],[9.597817,-5.045292,-6.162705,-0.106789,4.362504,-8.874344,7.989996,2.675829,4.349774,6.270716,-3.709671],[4.696012,6.072742,1.508065,-3.235494,3.846257,-3.900863,8.428903,-8.697991,-8.148172,-4.509433,-8.200663],[-6.274172,-5.005825,6.759141,3.903913,-8.700728,-9.915000,-5.725374,1.435124,-7.929112,-1.125504,-5.027936],[9.676634,9.325185,1.403542,-0.583830,-8.468976,3.218646,-6.994026,-9.453707,-4.816856,7.183408,5.982968],[-6.293865,-6.233404,8.153635,-7.108008,3.925643,-4.800228,2.571725,-8.763896,-8.447961,1.643132,4.724328],[-9.721445,4.119029,-6.720041,5.758736,-4.613318,-9.698865,2.665379,2.112257,-3.948792,5.230736,1.237443]],[[-3.530718,6.816818,-5.045122,-9.731519,-4.922485,-8.797686,1.043483,-9.099047,-1.230888,4.219831,-8.534522],[-2.610680,-6.915454,-0.751484,-6.677322,-8.567749,6.184369,4.582770,-4.065343,8.221200,-2.691567,-5.699686],[-2.598229,2.697895,2.284005,-7.357051,4.023079,1.011278,9.059072,7.830793,-2.563253,-4.639232,0.225883],[2.285243,6.697573,9.454212,-6.547876,5.156062,-9.964746,7.734016,2.905611,2.233639,6.965905,-4.765218],[-6.077240,-2.683152,-3.115366,-9.444273,-4.259055,4.224495,-6.113415,5.636233,6.358728,-1.735395,5.252598],[5.288794,2.253301,9.861407,-0.926618,4.318174,-2.904719,2.783588,-9.602165,-0.336614,1.615444,-6.087439],[-2.373419,8.280392,-7.241189,-8.024251,4.077210,0.514919,-6.933756,5.233403,-9.856913,-7.039321,-5.944652],[2.856722,0.699484,1.389525,-6.748431,7.073676,-0.981074,-3.173144,-2.675608,-6.907217,-1.707098,-7.266100],[9.926174,3.277937,-0.977726,-0.554865,8.915886,4.233528,2.249299,-6.111207,-8.531642,2.750110,-0.602098],[6.027991,-6.326016,-8.221634,1.616522,2.049729,3.354955,5.704323,-4.079151,-6.207404,3.022092,2.574495],[7.577928,-7.821019,5.182055,-6.951284,7.292714,-1.360310,8.752494,0.081710,3.022052,4.368033,4.880471]]], dtype = "float64")#candidate|2654|(3, 11, 11)|const|float64
bop_2655 = relay.subtract(call_2652.astype('uint8'), relay.reshape(const_2654.astype('uint8'), relay.shape_of(call_2652))) # shape=(3, 11, 11)
bop_2658 = relay.subtract(call_2653.astype('uint8'), relay.reshape(const_2654.astype('uint8'), relay.shape_of(call_2653))) # shape=(3, 11, 11)
func_1604_call = mod.get_global_var('func_1604')
func_1606_call = mutated_mod.get_global_var('func_1606')
var_2662 = relay.var("var_2662", dtype = "float32", shape = (165,))#candidate|2662|(165,)|var|float32
call_2661 = relay.TupleGetItem(func_1604_call(relay.reshape(var_2662.astype('float32'), [1, 165])), 2)
call_2663 = relay.TupleGetItem(func_1606_call(relay.reshape(var_2662.astype('float32'), [1, 165])), 2)
output = relay.Tuple([bop_2655,call_2661,var_2662,])
output2 = relay.Tuple([bop_2658,call_2663,var_2662,])
func_2668 = relay.Function([var_2662,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
mutated_mod['func_2668'] = func_2668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2669 = relay.var("var_2669", dtype = "float32", shape = (165,))#candidate|2669|(165,)|var|float32
func_2668_call = mutated_mod.get_global_var('func_2668')
call_2670 = func_2668_call(var_2669)
output = call_2670
func_2671 = relay.Function([var_2669], output)
mutated_mod['func_2671'] = func_2671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2676 = func_2393_call()
call_2677 = func_2393_call()
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_2689 = relay.TupleGetItem(func_2306_call(), 0)
call_2690 = relay.TupleGetItem(func_2308_call(), 0)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2692 = func_2414_call()
call_2693 = func_2414_call()
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2702 = func_2414_call()
call_2703 = func_2414_call()
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
var_2707 = relay.var("var_2707", dtype = "float32", shape = ())#candidate|2707|()|var|float32
const_2708 = relay.const([5.491265,9.630434,3.651838,0.495450,-6.628445,-3.995001,-8.048104,5.587219,-3.445749,-6.039549,2.774478,-9.600135,6.460876,7.784595,-3.562497,7.037529,9.956635,8.700304,8.405755,2.307662,7.263858,5.539360,4.690748,-8.362791,8.365461,-0.785188,-6.702098,-1.096225,9.375449,-9.072900,-0.276950,5.319624,-7.120508,-3.111763,9.223580,3.090015,6.515197,-2.131658,-2.302045,4.473849,6.785756,-2.862328,-0.986716,4.771246,-8.517502,5.177757,-9.689098,-8.749440,9.486760,-0.742912,-2.614059,8.320833,-8.823517,-0.640399,-2.369168,-0.634785,8.417241,-6.002590,-8.791214,4.257943,7.010956,3.950461,4.943247,9.712720,2.459078,6.416122,6.763157,1.110888,1.233587,-3.192246,8.679050,7.914940,5.133327,-8.777629,-4.451904,-0.703412,-6.738208,5.097695,4.546571,1.601410,-9.449740,4.725278,0.813782,-4.953979,-8.504688,8.103008,0.859619,1.031681,-0.751578,-8.210067,0.927066,-8.802241,4.299468,-3.683294,-5.800878,7.587607,-4.480404,7.588594,2.720623,-9.943974,-2.080381,-5.957650,2.050322,4.021686,0.220518,-0.333970,-7.594514,7.798153,-6.018815,3.255827,1.760157,5.944819,8.942485,5.349044,-8.536194,-8.090575,8.699172,6.760074,-3.007081,-4.185860,-2.802264,5.405026,-0.289755,-0.276218,-7.047754,7.445984,-6.786890,6.939130,5.642840,7.676127,8.246714,9.012399,-5.936059,6.693144,5.325139,-1.902043,-1.427025,-0.385412,-7.277771,7.709528,-0.109937,-6.674350,6.766014,-7.940455,0.744342,0.941068,-3.851056,1.424648,0.586586,4.561128,6.564559,-6.348121,5.012884,-5.866564,-4.803103,-4.224984,-1.436241,3.125949,5.261407,0.269717,0.522460,8.241955,5.271902,-6.950020,2.204559], dtype = "float32")#candidate|2708|(165,)|const|float32
call_2706 = relay.TupleGetItem(func_307_call(relay.reshape(var_2707.astype('float32'), []), relay.reshape(const_2708.astype('float32'), [11, 5, 3]), ), 1)
call_2709 = relay.TupleGetItem(func_311_call(relay.reshape(var_2707.astype('float32'), []), relay.reshape(const_2708.astype('float32'), [11, 5, 3]), ), 1)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2719 = func_2126_call()
call_2720 = func_2126_call()
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
call_2722 = relay.TupleGetItem(func_2467_call(relay.reshape(const_2708.astype('float32'), [165,])), 4)
call_2723 = relay.TupleGetItem(func_2469_call(relay.reshape(const_2708.astype('float32'), [165,])), 4)
output = relay.Tuple([call_2676,call_2689,call_2692,call_2702,call_2706,var_2707,const_2708,call_2719,call_2722,])
output2 = relay.Tuple([call_2677,call_2690,call_2693,call_2703,call_2709,var_2707,const_2708,call_2720,call_2723,])
func_2733 = relay.Function([var_2707,], output)
mod['func_2733'] = func_2733
mod = relay.transform.InferType()(mod)
var_2734 = relay.var("var_2734", dtype = "float32", shape = ())#candidate|2734|()|var|float32
output = func_2733(var_2734)
func_2735 = relay.Function([var_2734], output)
mutated_mod['func_2735'] = func_2735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_2751 = relay.TupleGetItem(func_2091_call(), 1)
call_2752 = relay.TupleGetItem(func_2093_call(), 1)
output = call_2751
output2 = call_2752
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
mutated_mod['func_2758'] = func_2758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mutated_mod.get_global_var('func_2758')
call_2759 = func_2758_call()
output = call_2759
func_2760 = relay.Function([], output)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2761 = relay.constdtype = "float32")#candidate|2761|(12, 16, 15)|const|float32
uop_2762 = relay.acosh(const_2761.astype('float32')) # shape=(12, 16, 15)
output = uop_2762
output2 = uop_2762
func_2764 = relay.Function([], output)
mod['func_2764'] = func_2764
mod = relay.transform.InferType()(mod)
mutated_mod['func_2764'] = func_2764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mutated_mod.get_global_var('func_2764')
call_2765 = func_2764_call()
output = call_2765
func_2766 = relay.Function([], output)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2772 = relay.TupleGetItem(func_2021_call(), 0)
call_2773 = relay.TupleGetItem(func_2023_call(), 0)
var_2782 = relay.var("var_2782", dtype = "float64", shape = (3, 11, 11))#candidate|2782|(3, 11, 11)|var|float64
bop_2783 = relay.less(call_2772.astype('bool'), relay.reshape(var_2782.astype('bool'), relay.shape_of(call_2772))) # shape=(3, 11, 11)
bop_2786 = relay.less(call_2773.astype('bool'), relay.reshape(var_2782.astype('bool'), relay.shape_of(call_2773))) # shape=(3, 11, 11)
func_307_call = mod.get_global_var('func_307')
func_311_call = mutated_mod.get_global_var('func_311')
var_2791 = relay.var("var_2791", dtype = "float32", shape = ())#candidate|2791|()|var|float32
var_2792 = relay.var("var_2792", dtype = "float32", shape = (165,))#candidate|2792|(165,)|var|float32
call_2790 = relay.TupleGetItem(func_307_call(relay.reshape(var_2791.astype('float32'), []), relay.reshape(var_2792.astype('float32'), [11, 5, 3]), ), 2)
call_2793 = relay.TupleGetItem(func_311_call(relay.reshape(var_2791.astype('float32'), []), relay.reshape(var_2792.astype('float32'), [11, 5, 3]), ), 2)
uop_2803 = relay.sigmoid(var_2782.astype('float64')) # shape=(3, 11, 11)
uop_2818 = relay.cosh(uop_2803.astype('float64')) # shape=(3, 11, 11)
output = relay.Tuple([bop_2783,call_2790,var_2791,var_2792,uop_2818,])
output2 = relay.Tuple([bop_2786,call_2793,var_2791,var_2792,uop_2818,])
func_2834 = relay.Function([var_2782,var_2791,var_2792,], output)
mod['func_2834'] = func_2834
mod = relay.transform.InferType()(mod)
mutated_mod['func_2834'] = func_2834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2834_call = mutated_mod.get_global_var('func_2834')
var_2836 = relay.var("var_2836", dtype = "float64", shape = (3, 11, 11))#candidate|2836|(3, 11, 11)|var|float64
var_2837 = relay.var("var_2837", dtype = "float32", shape = ())#candidate|2837|()|var|float32
var_2838 = relay.var("var_2838", dtype = "float32", shape = (165,))#candidate|2838|(165,)|var|float32
call_2835 = func_2834_call(var_2836,var_2837,var_2838,)
output = call_2835
func_2839 = relay.Function([var_2836,var_2837,var_2838,], output)
mutated_mod['func_2839'] = func_2839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
call_2841 = func_2764_call()
call_2842 = func_2764_call()
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_2849 = relay.TupleGetItem(func_2306_call(), 0)
call_2850 = relay.TupleGetItem(func_2308_call(), 0)
uop_2851 = relay.asinh(call_2849.astype('float64')) # shape=(3, 11, 11)
uop_2853 = relay.asinh(call_2850.astype('float64')) # shape=(3, 11, 11)
output = relay.Tuple([call_2841,uop_2851,])
output2 = relay.Tuple([call_2842,uop_2853,])
func_2854 = relay.Function([], output)
mod['func_2854'] = func_2854
mod = relay.transform.InferType()(mod)
mutated_mod['func_2854'] = func_2854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2854_call = mutated_mod.get_global_var('func_2854')
call_2855 = func_2854_call()
output = call_2855
func_2856 = relay.Function([], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2914 = func_1997_call()
call_2915 = func_1997_call()
var_2920 = relay.var("var_2920", dtype = "float64", shape = (3, 11, 11))#candidate|2920|(3, 11, 11)|var|float64
bop_2921 = relay.bitwise_xor(call_2914.astype('uint32'), relay.reshape(var_2920.astype('uint32'), relay.shape_of(call_2914))) # shape=(3, 11, 11)
bop_2924 = relay.bitwise_xor(call_2915.astype('uint32'), relay.reshape(var_2920.astype('uint32'), relay.shape_of(call_2915))) # shape=(3, 11, 11)
uop_2928 = relay.acosh(bop_2921.astype('float32')) # shape=(3, 11, 11)
uop_2930 = relay.acosh(bop_2924.astype('float32')) # shape=(3, 11, 11)
output = relay.Tuple([uop_2928,])
output2 = relay.Tuple([uop_2930,])
func_2931 = relay.Function([var_2920,], output)
mod['func_2931'] = func_2931
mod = relay.transform.InferType()(mod)
mutated_mod['func_2931'] = func_2931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2932 = relay.var("var_2932", dtype = "float64", shape = (3, 11, 11))#candidate|2932|(3, 11, 11)|var|float64
func_2931_call = mutated_mod.get_global_var('func_2931')
call_2933 = func_2931_call(var_2932)
output = call_2933
func_2934 = relay.Function([var_2932], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_3032 = relay.TupleGetItem(func_2021_call(), 0)
call_3033 = relay.TupleGetItem(func_2023_call(), 0)
output = call_3032
output2 = call_3033
func_3034 = relay.Function([], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
output = func_3034()
func_3035 = relay.Function([], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3044 = relay.var("var_3044", dtype = "float64", shape = (9, 16, 11))#candidate|3044|(9, 16, 11)|var|float64
uop_3045 = relay.log10(var_3044.astype('float64')) # shape=(9, 16, 11)
bop_3048 = relay.power(uop_3045.astype('float64'), relay.reshape(var_3044.astype('float64'), relay.shape_of(uop_3045))) # shape=(9, 16, 11)
output = bop_3048
output2 = bop_3048
func_3052 = relay.Function([var_3044,], output)
mod['func_3052'] = func_3052
mod = relay.transform.InferType()(mod)
var_3053 = relay.var("var_3053", dtype = "float64", shape = (9, 16, 11))#candidate|3053|(9, 16, 11)|var|float64
output = func_3052(var_3053)
func_3054 = relay.Function([var_3053], output)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_3076 = relay.TupleGetItem(func_2306_call(), 0)
call_3077 = relay.TupleGetItem(func_2308_call(), 0)
uop_3114 = relay.log2(call_3076.astype('float32')) # shape=(3, 11, 11)
uop_3116 = relay.log2(call_3077.astype('float32')) # shape=(3, 11, 11)
func_2380_call = mod.get_global_var('func_2380')
func_2384_call = mutated_mod.get_global_var('func_2384')
var_3119 = relay.var("var_3119", dtype = "float32", shape = ())#candidate|3119|()|var|float32
const_3120 = relay.const([8.087920,4.080096,-7.789406,-3.157738,-1.617175,-7.115392,2.289880,-9.713731,9.218477,-3.349320,-5.253612,1.715093,3.433476,-3.099891,1.877649,2.330748,-5.600328,-4.199526,-4.538442,5.771677,-9.743100,0.903399,-3.816125,5.826838,-0.198786,-4.682919,-0.677336,7.291194,4.208055,-4.610990,-8.391842,4.331741,2.578464,1.888724,-9.544401,-0.220465,5.573188,-1.918459,1.435988,8.061986,1.918249,-9.093020,0.999154,-9.716362,8.525363,1.812434,-8.591621,-4.192030,-3.928987,6.636546,-6.777169,-8.123067,-4.853575,3.870230,-1.345042,7.104201,-3.743706,0.124656,-5.324034,1.698967,-4.409876,6.223162,2.289610,-5.212400,3.142044,4.667157,9.553049,4.653692,-5.110924,3.221343,1.605850,4.098370,-9.501668,1.116241,-3.284217,-4.957169,9.716069,2.307974,5.679829,1.573147,-1.131291,4.755264,-2.593586,2.219182,7.585181,4.499447,8.147844,2.960105,6.231657,-8.520828,4.560974,-3.976748,-5.896357,2.568435,-9.200089,5.851643,4.205949,-4.136076,6.129155,2.025817,5.077388,-5.624503,6.795936,-0.575059,-4.922578,-3.171515,-0.234443,8.772143,-5.191112,-2.084253,5.550178,0.411242,-6.476217,-0.044747,6.995348,3.395165,-9.003806,-5.937668,8.094498,-5.959324,1.442885,6.000221,3.821514,9.115752,0.873582,-9.593982,9.993399,-9.573291,-5.145436,4.026128,-7.268625,-2.086123,-6.678198,-8.421820,2.612865,-7.994958,3.231186,-4.419202,-5.664420,-1.682890,-8.067895,-8.476068,6.034840,5.757050,3.353064,3.841557,4.378392,-8.108976,-1.867727,9.519521,4.672032,1.936388,3.359136,1.903170,8.713979,-7.788290,4.252531,7.608100,3.117295,-4.210236,0.875381,-0.064718,3.426900,2.046739,5.600593], dtype = "float32")#candidate|3120|(165,)|const|float32
call_3118 = relay.TupleGetItem(func_2380_call(relay.reshape(var_3119.astype('float32'), []), relay.reshape(const_3120.astype('float32'), [165,]), ), 3)
call_3121 = relay.TupleGetItem(func_2384_call(relay.reshape(var_3119.astype('float32'), []), relay.reshape(const_3120.astype('float32'), [165,]), ), 3)
func_1604_call = mod.get_global_var('func_1604')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_3129 = relay.TupleGetItem(func_1604_call(relay.reshape(const_3120.astype('float32'), [1, 165])), 1)
call_3130 = relay.TupleGetItem(func_1606_call(relay.reshape(const_3120.astype('float32'), [1, 165])), 1)
output = relay.Tuple([uop_3114,call_3118,var_3119,const_3120,call_3129,])
output2 = relay.Tuple([uop_3116,call_3121,var_3119,const_3120,call_3130,])
func_3154 = relay.Function([var_3119,], output)
mod['func_3154'] = func_3154
mod = relay.transform.InferType()(mod)
var_3155 = relay.var("var_3155", dtype = "float32", shape = ())#candidate|3155|()|var|float32
output = func_3154(var_3155)
func_3156 = relay.Function([var_3155], output)
mutated_mod['func_3156'] = func_3156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_3201 = relay.TupleGetItem(func_2306_call(), 0)
call_3202 = relay.TupleGetItem(func_2308_call(), 0)
output = call_3201
output2 = call_3202
func_3231 = relay.Function([], output)
mod['func_3231'] = func_3231
mod = relay.transform.InferType()(mod)
output = func_3231()
func_3232 = relay.Function([], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3390 = relay.var("var_3390", dtype = "float64", shape = (10, 11, 12))#candidate|3390|(10, 11, 12)|var|float64
const_3391 = relay.const([[[-4.017898,1.873286,-8.401938,1.856259,-2.990841,6.998370,-4.696086,-1.219201,3.388760,-7.090164,-8.720498,-6.558640],[-1.998364,6.142525,1.203227,-8.727009,-9.940561,-0.102655,-6.897434,-1.499529,5.683690,-5.947446,-2.878448,1.287918],[-0.148483,0.883499,-5.635730,-7.986825,0.878592,-7.912079,6.648843,-2.860153,-3.758712,-3.174050,-6.141429,-5.221693],[-6.655534,-1.117919,1.725131,1.045900,8.070787,-8.031092,-1.301072,-5.547595,-3.224808,3.879806,-9.117905,-7.647331],[-7.554957,2.712582,4.884260,-7.702459,-5.103352,4.917527,-3.393632,-9.007224,4.680279,8.787897,7.627336,5.713020],[-8.857365,5.770370,-5.500391,-5.859765,2.150901,-6.583039,9.390518,-5.425268,2.590744,4.241329,-0.405955,6.061616],[-9.854034,-7.739812,-6.242667,-2.506509,-3.539573,3.783696,1.493106,2.320896,4.365542,6.304923,-5.532999,0.646264],[2.729060,0.411935,-9.035511,-4.260209,3.038914,-0.373032,-8.650184,-6.108860,4.688145,-5.882869,6.352355,5.164647],[1.196295,0.736265,-1.239252,5.728952,3.587481,-8.868654,1.192900,0.564121,5.885553,-3.450266,-0.234192,-1.862486],[8.906197,-0.241173,-6.660207,8.083737,-5.875675,9.811938,2.232669,1.757219,7.005258,-2.872932,-8.068521,4.305619],[-3.874941,1.071360,-4.527327,-2.771357,-6.950212,2.285551,-2.046820,-6.705017,4.934795,0.220554,-7.278664,-9.440666]],[[-2.787617,-8.324499,-0.726711,-6.262941,-0.338545,7.516020,7.276196,-4.641798,-7.911356,-0.441620,-0.263784,9.068617],[-9.030907,0.817627,1.956127,-9.905009,-9.758259,-1.659044,-8.008796,5.264685,1.535454,-8.937375,-6.879546,-5.643716],[-2.363361,2.811797,-7.618301,-1.224818,-2.132859,2.264590,1.036363,1.465032,7.688392,-3.399507,7.549051,-3.780470],[-3.057419,5.520806,3.781052,5.096495,0.108020,-5.955592,-2.935384,-4.868231,-7.236689,-7.505480,-8.631970,-3.124770],[-7.286352,3.105891,-4.463409,-5.502173,-8.153274,-9.001880,4.963493,2.728911,-7.092787,-0.584684,4.359850,0.167174],[2.455939,2.931174,-6.603292,0.270990,0.268028,-3.953858,-4.477532,-3.256166,-7.491383,-2.854981,4.954847,-2.951595],[2.444191,-8.325866,-6.927010,8.743496,3.151118,2.659569,-8.218220,-1.885182,2.011350,7.511490,3.673685,9.802886],[-4.460645,-3.030214,5.714098,-7.382473,9.118890,0.163877,-2.550666,2.284302,-3.645787,2.396496,8.758289,-1.908510],[-4.447679,-2.632304,0.230697,-5.616330,5.179150,8.171733,2.996783,-6.321051,-5.187418,-8.053351,-4.898461,8.987964],[-8.740852,3.809545,-6.987225,0.348028,8.131263,0.899516,8.461382,7.684079,-0.991665,3.317383,-3.082741,-7.214589],[-2.466227,9.875618,5.281724,2.707649,-4.709018,8.576321,-4.744985,2.057188,2.230600,-9.246623,-2.689557,6.311376]],[[4.910442,9.108406,-0.211387,-7.952071,-2.226098,1.569034,-8.474121,-1.265344,8.964038,-1.211225,-0.080628,-7.882831],[-1.853189,-2.199343,-5.105067,9.808141,-9.584598,7.881577,-7.926795,2.793031,2.474280,-8.247845,5.855402,-1.578170],[4.983147,-1.072898,1.806428,6.030682,-5.349786,-4.083557,8.215342,-6.039419,-3.846772,7.007594,3.170357,-7.320974],[0.101452,1.684637,7.252604,-1.016933,-7.350215,-3.045216,4.459643,3.935111,2.779495,-6.330813,3.035984,-0.832648],[-4.907410,-8.363672,8.916575,-9.551665,-4.903204,5.018247,-8.623595,-8.751441,1.695936,-3.719290,-4.745813,-3.421896],[6.496570,-0.212683,8.928923,5.756198,-8.716490,6.215996,-7.053477,1.298719,3.691995,-3.188470,-3.583788,-6.010920],[7.363034,-9.572331,-6.886640,6.833606,6.640965,-2.639445,-8.556224,-7.656528,-3.709773,-9.911641,6.402515,1.749285],[8.988707,-5.009242,-9.969523,9.512261,8.701546,5.994688,-5.232719,-3.584744,-1.851820,-0.782695,-0.831307,-1.052012],[-8.263350,0.784029,-4.110104,9.727762,-8.979825,1.720075,-6.469538,-0.173906,-0.798028,-7.685282,-6.222011,-2.459467],[9.314945,8.313255,9.235919,-7.621524,9.216597,8.314814,-8.192383,4.646902,5.467107,0.859924,1.787089,4.636401],[3.213155,-4.572461,-7.932440,5.418880,7.696262,7.071584,-6.393855,-0.145977,8.184978,3.387643,-7.522569,-7.638591]],[[1.205015,-1.423255,1.146953,-3.487395,6.871550,-3.235429,2.244877,0.339316,7.133470,0.928093,7.328069,4.305650],[8.768521,-5.161671,5.682304,7.728949,8.085596,5.358298,-3.135054,2.497065,-8.589519,2.136757,3.580205,-8.573168],[-3.982073,-1.452444,6.113657,-8.987492,-9.716652,6.768158,-9.259440,-5.673934,-9.159570,-6.992664,4.899277,-1.088920],[-0.547284,9.952385,-4.418983,-3.237258,4.582186,-0.715836,-5.631319,-9.258779,-4.325104,-4.461708,-5.400077,-6.288171],[-4.233184,3.733864,-2.828598,4.146927,-1.315510,4.201786,-2.658911,5.143657,-1.019723,-2.744690,-1.309040,-5.945940],[-5.265790,3.884368,0.290995,7.371043,2.979359,-6.296534,-8.142923,-2.429887,-9.005896,-5.114615,6.202900,9.686875],[9.311357,-2.010130,-2.435094,-7.917067,3.223800,1.471135,0.934672,-8.783450,-9.841416,5.843618,-1.958950,4.955644],[4.523956,2.745435,1.033841,-5.600733,-5.586720,-9.500181,2.528691,-3.445812,5.709780,-7.784283,-5.062919,9.165578],[5.956164,-5.137550,-6.970577,-4.351871,5.984132,-0.151896,-4.136853,4.376237,1.625140,4.159453,8.131308,0.915318],[-0.282471,0.826949,-3.199127,3.960025,8.333917,2.555077,8.954279,4.196062,8.527018,4.658896,2.129033,-9.309786],[-0.124405,8.180624,4.882097,-5.158656,-6.715160,9.441991,-5.114494,-8.183127,-0.880159,2.708780,-6.160970,-1.567822]],[[-5.567381,8.572308,-0.713153,-3.082906,-9.887149,-6.277675,-4.708877,4.460571,5.615564,3.139829,5.542688,8.265156],[4.414362,0.599178,-6.892001,2.206913,5.340323,-2.873196,9.340300,-4.480971,-1.988595,2.976553,-5.903303,-2.859522],[2.001511,0.011123,0.902932,-2.442748,-3.434091,-6.418903,9.317899,6.505057,9.033706,0.712763,6.641114,-4.040736],[-7.125736,-3.614341,-1.867978,-6.978985,6.820343,-3.703223,1.080637,3.024936,-8.635900,-7.150875,-7.616137,-4.654714],[9.414360,-2.866160,3.332828,-2.634397,-2.332524,-2.437579,8.948436,7.698097,8.235534,-4.741341,-7.313122,-5.083586],[0.931088,3.155331,-3.486358,0.399033,6.823519,-7.232119,-5.564043,-9.623089,-8.057261,0.096044,-6.614737,-5.070439],[-0.097551,-7.540317,-9.501344,4.074911,2.548361,1.147411,-9.674278,4.101467,-9.639271,6.460229,-2.760822,-0.896218],[-2.001988,0.132411,-6.965670,-9.100313,-9.019110,1.033311,4.552041,-2.513603,2.976211,5.842593,7.566888,3.261581],[-1.594958,-0.789248,3.375920,0.969437,5.738651,-7.430160,-3.640635,-1.024219,4.739854,-9.319621,8.792515,0.594874],[-7.357211,-0.596938,2.757007,-7.988458,-1.380496,-9.526332,7.963223,-4.755081,-9.593787,-5.176264,1.171563,8.243523],[-0.248918,-1.353793,5.113272,2.956409,-3.334036,4.553547,6.848222,1.364191,-5.722577,7.079660,-8.872760,-1.213544]],[[-0.329439,7.218097,-1.602832,-8.593816,-2.821594,-3.913110,-2.886180,-5.277721,1.260917,-3.594558,6.247819,2.296486],[-2.585873,7.072188,-1.150673,7.067050,-9.295018,-1.410844,-4.538586,0.661433,0.065120,-2.909587,5.550632,-7.424493],[-1.711720,-8.382270,6.855549,9.693394,-6.376148,-3.880535,6.801533,-3.558643,-2.993230,-6.921639,5.762457,-4.539785],[3.833711,3.439402,1.092813,6.667007,-9.565080,8.945905,7.973206,3.910046,8.857917,-8.368424,-2.854030,-3.548144],[-7.085992,4.274093,-3.364862,-8.894268,-8.897112,7.956075,-4.947029,1.970617,-8.517628,-1.194712,3.516038,3.946352],[4.662216,3.650417,-6.592315,-0.274575,-6.879325,6.398888,7.051167,-9.479246,7.063072,3.537223,3.759992,-5.618285],[7.063735,0.033002,2.886907,5.212818,4.523177,-2.455522,-6.285041,-9.628956,-6.472541,-8.231548,8.425041,5.198407],[-2.272964,-9.411263,0.731981,0.016735,8.940917,0.179112,8.368493,2.407348,-4.310321,2.530569,0.005435,4.154441],[6.928360,3.658099,6.955335,1.091551,-2.000949,3.840765,-3.020765,-3.548015,2.057446,-3.254943,9.719643,6.420462],[5.810732,-8.365130,-4.877797,-5.830765,8.205336,6.324403,-6.491395,-7.211068,-5.049636,-6.877261,-4.578705,9.830395],[7.014916,5.646376,1.136128,-0.564583,3.829190,7.519962,-8.141744,5.761737,-5.917551,-7.215284,2.451632,6.880932]],[[-7.767667,-1.372024,-6.672520,3.642561,-0.910518,-0.324293,5.638840,-1.426553,-0.982605,9.649354,-1.909442,-7.180549],[3.858227,2.504490,-8.919271,-7.886197,3.230012,5.682941,-6.353038,8.690805,9.576264,6.102225,-3.992528,9.996464],[3.712635,8.193075,5.728796,-0.527910,2.629128,8.510913,-6.258893,-9.282435,8.694241,-0.476790,-0.551620,-8.726463],[5.383845,2.084839,0.624557,-5.798527,9.143339,-1.126093,-9.122138,4.710641,8.324489,3.455405,-6.342265,7.613740],[2.881688,-7.174215,3.912015,-0.534162,-5.684704,-8.040950,-1.733233,-2.341762,-8.884669,4.665400,-5.882992,-9.148394],[6.853260,0.202456,-3.617793,1.154924,-5.292365,5.121256,-4.305780,0.793778,0.502661,8.649966,-1.356315,6.840644],[-1.431906,5.802987,9.247510,-9.140103,4.099093,9.352562,-8.301783,-3.605164,-7.921772,-1.439189,3.882513,5.049484],[7.381054,-1.088762,-3.659459,0.022132,-2.520007,0.116962,-3.385748,0.291518,-3.904121,2.501859,9.640831,1.165256],[-1.422761,1.929858,0.705948,-3.919330,0.082993,5.731530,8.545927,-5.525033,1.444618,0.291681,-9.426258,-5.315528],[2.379114,9.012767,3.346978,-9.165219,4.273705,0.017389,-8.799904,7.775778,-7.506385,-9.435027,5.058519,-7.073389],[-9.611577,1.106524,-6.152130,4.693489,5.532888,-8.704787,-3.361048,-6.213991,-9.504945,-2.550860,-3.250964,-8.409312]],[[-0.324404,-2.679435,-7.113843,1.291189,-3.437808,4.776572,-3.520115,8.913157,6.474685,-5.312096,-0.912063,3.642983],[-9.542625,-7.167762,-5.021457,6.151776,4.490535,-7.417287,-0.693861,-2.533114,-4.300754,1.630160,5.478432,5.513060],[3.347956,-3.516128,-1.109371,-4.151942,8.408998,6.999215,-3.942512,3.616281,-7.059196,5.778360,5.344438,-0.946641],[3.471512,-6.649702,-3.964608,3.820501,0.760417,7.677412,-4.845578,-6.294897,-0.564419,0.990199,-7.289979,-5.854993],[-9.307375,-1.159782,-7.091055,-5.566657,-9.305915,-6.566121,-1.174122,-7.946834,9.757003,4.823523,-1.069414,5.952097],[-9.755061,6.606715,8.884144,6.286232,0.633295,8.052504,-7.387644,3.411670,-2.275377,1.957819,2.676835,-4.155516],[-1.051105,-9.450185,4.981349,3.541529,-7.492033,9.963075,3.450030,-4.087194,-2.560502,-6.953486,8.517298,2.388214],[1.860915,-8.287781,0.710620,0.749291,-3.137005,-1.535683,7.649500,0.507720,-0.309905,-9.339635,-9.133375,-9.281670],[-3.937334,3.534879,-9.304984,-3.422908,-8.024980,-6.331812,9.105963,3.780461,-8.962462,-6.896973,4.415227,6.620527],[-8.067036,8.254654,-3.307293,5.954812,-4.214787,-4.414398,1.754224,-8.981980,9.971957,8.643070,-3.034657,5.124293],[-2.147808,1.771249,9.356698,7.610508,-1.755807,-7.405242,-3.418614,5.366663,9.839347,2.691062,-6.017999,-1.308736]],[[3.238354,9.285315,-9.822594,-7.227503,-6.773085,-9.832704,-3.225518,9.959700,4.639815,-6.029613,5.946443,-8.860502],[6.993003,3.034596,-1.605077,-8.189855,-7.342365,0.591910,-6.170775,7.003705,5.921600,-8.898868,-9.778714,-1.274787],[-2.844764,7.203757,7.309915,-8.151275,-8.387084,-2.335742,4.519953,-0.275181,-5.089940,-9.933404,9.064492,8.276942],[1.723260,-3.747130,8.658655,0.730717,0.918721,2.840724,5.547622,-8.454291,-2.172078,-5.733597,6.832311,4.577483],[-5.436906,-4.961938,3.475500,6.748089,1.905714,-7.376684,-8.571626,-7.978973,1.815101,-7.483712,4.863733,-4.119097],[-2.129268,9.857110,9.563908,5.882189,-2.312477,8.348219,-1.685080,0.270529,-1.349821,-0.404946,7.999174,0.681949],[5.711689,5.742584,-4.721372,-9.743737,-9.759111,-0.527068,-6.771839,-1.492450,3.674072,-6.331208,-7.586426,3.470602],[-2.372455,1.788910,1.322154,-1.688091,8.930872,8.010024,5.935163,-5.423478,-3.549639,7.524299,-3.855384,8.835647],[2.731322,2.220925,1.048568,-2.665593,8.105794,-8.739718,-1.935090,5.463252,-3.990987,6.325249,-6.877833,-5.957353],[-0.586236,7.089702,4.373817,-3.782672,-8.907814,-5.558435,5.118816,9.884433,-1.401961,2.535107,-1.516738,-2.783862],[9.636769,-7.196950,3.947266,-7.640297,-3.833856,3.859944,0.461049,-6.690206,7.475004,5.881136,-4.579238,3.863977]],[[-7.577617,2.559666,1.255281,-0.218748,-6.677922,-9.355186,8.364943,2.293833,-1.021860,3.985984,2.158149,-1.534204],[-3.944746,8.331737,-8.496094,9.312692,8.508859,-1.065873,7.180144,8.525973,3.766243,7.124623,1.356098,2.487609],[8.734420,4.805605,-6.542171,-7.671011,6.238471,7.232590,-9.026156,3.429269,-2.764167,5.772306,-1.949658,2.200741],[-7.442183,-9.739473,1.602812,-6.650750,-7.066400,7.041896,6.435782,0.749325,5.658650,-9.141487,6.753635,0.383855],[2.397796,7.732452,-3.391598,-0.774656,-8.747661,-9.207204,-6.930532,-4.476168,-5.501745,6.660615,2.678362,-1.841096],[-9.206008,9.015221,-9.219804,6.617592,8.894617,5.443042,6.977072,-4.859320,-9.534635,2.884207,9.987511,0.712866],[-0.366165,4.737500,2.540087,-1.797081,4.167858,-6.618357,2.390561,9.741393,-4.520715,-2.981992,-8.610661,5.365453],[3.172687,1.237571,5.295678,-2.852087,-0.429521,5.317897,8.654956,8.596738,8.860128,2.323808,1.508037,6.832782],[7.540936,3.788470,9.308248,6.923127,4.338110,1.098664,5.180902,-0.005617,-0.315664,-3.502193,-9.568832,-2.140618],[3.262934,-1.579513,-9.440773,-4.004261,6.295930,-3.819526,5.627964,1.876376,-3.059092,3.827919,-2.658546,0.252007],[1.001624,-4.926281,3.036519,-1.948894,-1.774687,2.306987,-3.441050,6.680262,5.084264,-9.400753,8.660825,-1.494250]]], dtype = "float64")#candidate|3391|(10, 11, 12)|const|float64
bop_3392 = relay.floor_divide(var_3390.astype('float64'), relay.reshape(const_3391.astype('float64'), relay.shape_of(var_3390))) # shape=(10, 11, 12)
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
const_3409 = relay.const([-4.130237,3.458356,7.981684,8.940782,-8.241142,-1.786069,8.528395,0.601929,-9.586563,-1.714350,9.936366,-7.293953,-6.546394,-1.833654,2.767162,2.566227,-4.228678,-4.302594,4.740971,1.163143,-8.063024,-7.912994,-2.483503,4.074464,8.729025,-6.553649,4.689859,-2.232749,9.630703,5.357040,-8.124133,-5.069861,3.756066,-8.949332,-4.530556,-5.870211,2.347417,-2.363801,9.622195,-9.320808,4.600088,4.037853,-7.934647,-4.505532,-6.906896,-4.414586,-3.681046,1.001073,5.792978,3.941373,8.648312,-7.298036,-2.689811,1.332043,-7.361614,0.810223,-6.849062,-3.161412,-9.509769,-6.550330,3.487240,2.268831,-3.253797,2.468027,-2.936789,3.957652,8.109357,5.846657,9.379902,8.849645,-1.569481,5.746516,6.273895,7.868946,8.603644,1.399677,-4.047698,-4.108622,7.928278,-3.861732,-6.464947,-2.053365,8.686795,-7.276639,-7.238595,1.955037,-3.599812,1.076203,-6.142705,5.671205,6.373809,-4.018798,8.880045,-0.732801,4.951763,-1.307160,-7.704115,1.297023,-8.237135,-1.099537,3.352203,-9.670528,0.578303,6.134291,-0.377843,8.722042,7.433496,-3.073752,-5.513384,-3.752214,9.677315,-6.317509,6.772219,-4.795039,0.781525,-2.317714,-1.849255,-5.159559,-7.995005,0.999946,-8.908454,-4.793475,4.785469,-4.965519,8.129172,4.072604,9.888465,5.734439,3.258932,6.475612,-4.667623,2.366158,-6.265169,-0.445784,0.895306,2.442509,-4.943560,-8.308889,-5.330838,-5.175091,3.340170,8.220482,4.681176,0.036078,-9.498845,8.963294,-3.001324,3.495303,-1.645589,6.331868,7.115660,1.746036,6.957151,2.319736,-3.054753,6.022599,7.863336,-8.839001,1.742020,1.364119,-6.078183,9.159227,6.922212,6.196262,-9.290223], dtype = "float32")#candidate|3409|(165,)|const|float32
call_3408 = relay.TupleGetItem(func_2467_call(relay.reshape(const_3409.astype('float32'), [165,])), 4)
call_3410 = relay.TupleGetItem(func_2469_call(relay.reshape(const_3409.astype('float32'), [165,])), 4)
var_3431 = relay.var("var_3431", dtype = "float64", shape = (7, 6, 3))#candidate|3431|(7, 6, 3)|var|float64
bop_3432 = relay.bitwise_xor(call_3408.astype('int8'), var_3431.astype('int8')) # shape=(7, 6, 3)
bop_3435 = relay.bitwise_xor(call_3410.astype('int8'), var_3431.astype('int8')) # shape=(7, 6, 3)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_3444 = func_1997_call()
call_3445 = func_1997_call()
func_128_call = mod.get_global_var('func_128')
func_130_call = mutated_mod.get_global_var('func_130')
const_3457 = relay.const(8.224947, dtype = "float64")#candidate|3457|()|const|float64
call_3456 = relay.TupleGetItem(func_128_call(relay.reshape(const_3457.astype('float64'), [])), 0)
call_3458 = relay.TupleGetItem(func_130_call(relay.reshape(const_3457.astype('float64'), [])), 0)
var_3462 = relay.var("var_3462", dtype = "float64", shape = (10, 11, 12))#candidate|3462|(10, 11, 12)|var|float64
bop_3463 = relay.bitwise_or(var_3390.astype('int64'), relay.reshape(var_3462.astype('int64'), relay.shape_of(var_3390))) # shape=(10, 11, 12)
output = relay.Tuple([bop_3392,const_3409,bop_3432,call_3444,call_3456,const_3457,bop_3463,])
output2 = relay.Tuple([bop_3392,const_3409,bop_3435,call_3445,call_3458,const_3457,bop_3463,])
func_3468 = relay.Function([var_3390,var_3431,var_3462,], output)
mod['func_3468'] = func_3468
mod = relay.transform.InferType()(mod)
var_3469 = relay.var("var_3469", dtype = "float64", shape = (10, 11, 12))#candidate|3469|(10, 11, 12)|var|float64
var_3470 = relay.var("var_3470", dtype = "float64", shape = (7, 6, 3))#candidate|3470|(7, 6, 3)|var|float64
var_3471 = relay.var("var_3471", dtype = "float64", shape = (10, 11, 12))#candidate|3471|(10, 11, 12)|var|float64
output = func_3468(var_3469,var_3470,var_3471,)
func_3472 = relay.Function([var_3469,var_3470,var_3471,], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3499 = func_2393_call()
call_3500 = func_2393_call()
output = call_3499
output2 = call_3500
func_3501 = relay.Function([], output)
mod['func_3501'] = func_3501
mod = relay.transform.InferType()(mod)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3501_call = mutated_mod.get_global_var('func_3501')
call_3502 = func_3501_call()
output = call_3502
func_3503 = relay.Function([], output)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3515 = func_2393_call()
call_3516 = func_2393_call()
var_3517 = relay.var("var_3517", dtype = "float64", shape = (3, 11, 11))#candidate|3517|(3, 11, 11)|var|float64
bop_3518 = relay.logical_or(call_3515.astype('bool'), relay.reshape(var_3517.astype('bool'), relay.shape_of(call_3515))) # shape=(3, 11, 11)
bop_3521 = relay.logical_or(call_3516.astype('bool'), relay.reshape(var_3517.astype('bool'), relay.shape_of(call_3516))) # shape=(3, 11, 11)
bop_3524 = relay.less_equal(var_3517.astype('bool'), relay.reshape(call_3515.astype('bool'), relay.shape_of(var_3517))) # shape=(3, 11, 11)
bop_3527 = relay.less_equal(var_3517.astype('bool'), relay.reshape(call_3516.astype('bool'), relay.shape_of(var_3517))) # shape=(3, 11, 11)
output = relay.Tuple([bop_3518,bop_3524,])
output2 = relay.Tuple([bop_3521,bop_3527,])
func_3535 = relay.Function([var_3517,], output)
mod['func_3535'] = func_3535
mod = relay.transform.InferType()(mod)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3536 = relay.var("var_3536", dtype = "float64", shape = (3, 11, 11))#candidate|3536|(3, 11, 11)|var|float64
func_3535_call = mutated_mod.get_global_var('func_3535')
call_3537 = func_3535_call(var_3536)
output = call_3537
func_3538 = relay.Function([var_3536], output)
mutated_mod['func_3538'] = func_3538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
call_3553 = func_2764_call()
call_3554 = func_2764_call()
output = relay.Tuple([call_3553,])
output2 = relay.Tuple([call_3554,])
func_3561 = relay.Function([], output)
mod['func_3561'] = func_3561
mod = relay.transform.InferType()(mod)
output = func_3561()
func_3562 = relay.Function([], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_3567 = func_3231_call()
call_3568 = func_3231_call()
func_3154_call = mod.get_global_var('func_3154')
func_3156_call = mutated_mod.get_global_var('func_3156')
var_3571 = relay.var("var_3571", dtype = "float32", shape = ())#candidate|3571|()|var|float32
call_3570 = relay.TupleGetItem(func_3154_call(relay.reshape(var_3571.astype('float32'), [])), 1)
call_3572 = relay.TupleGetItem(func_3156_call(relay.reshape(var_3571.astype('float32'), [])), 1)
func_1743_call = mod.get_global_var('func_1743')
func_1748_call = mutated_mod.get_global_var('func_1748')
const_3587 = relay.const([-6,-6,-2,5,9,-7,9,-6,-3,-10,-6,4,6,-6,-1,-4,-1,3,7,-7,-9,3,6,-1,-4,7,-5,-5,-8,-7,-5,-7,1,-10,-10,-5,1,-9,9,-5,2,-2,3,-9,8,2,-6,2,7,-6,-10,5,8,10,5,-2], dtype = "uint64")#candidate|3587|(56,)|const|uint64
call_3586 = relay.TupleGetItem(func_1743_call(relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), ), 0)
call_3588 = relay.TupleGetItem(func_1748_call(relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), relay.reshape(const_3587.astype('uint64'), [2, 14, 2]), ), 0)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_3604 = func_2414_call()
call_3605 = func_2414_call()
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_3612 = func_1997_call()
call_3613 = func_1997_call()
uop_3614 = relay.erf(call_3604.astype('float64')) # shape=(3, 11, 11)
uop_3616 = relay.erf(call_3605.astype('float64')) # shape=(3, 11, 11)
func_2169_call = mod.get_global_var('func_2169')
func_2172_call = mutated_mod.get_global_var('func_2172')
const_3620 = relay.const([8.131279,4.317865,-7.874301,5.448805,-5.527816,4.357689,-9.783229,-6.423247,-0.016651,-6.657750,9.864702,3.458502,-3.264246,-9.729411,7.075428,1.193575,-4.268559,3.511684,9.291971,-3.190227,-3.026024,1.937154,-5.189145,3.387576,-1.138048,3.823432,-7.044317,4.872526,3.933103,-7.922622,7.790469,-3.657054,-1.995518,-6.390818,-2.193626,4.890778,-3.302173,-6.948091,0.434833,7.073751,1.135890,7.447399,8.509503,-4.817586,-4.591893,-4.544280,9.519927,0.988127,-1.459478,2.567196,5.540180,6.663619,-8.462599,-6.526513,-4.969333,3.854464,-2.361530,8.624234,0.068211,4.248939,-6.961120,6.116930,-3.530247,-8.318187,8.128963,2.132712,-4.622056,-1.406217,-1.391670,-6.328164,2.013563,-0.428274,4.506696,7.441354,-8.838684,-7.100405,-4.990798,-1.319889,3.041686,0.661931,-1.790803,9.371515,-1.905168,7.686859,-7.603690,0.969896,9.393992,-8.245216,7.495522,-4.613492,-1.736003,-2.949131,-8.222475,5.679345,1.116838,-6.484466,1.066142,5.722602,-9.409192,8.928365,-5.888373,-6.294281,-6.788312,-9.994933,-4.069658,1.655828,-1.984896,-8.990175,-7.221506,-5.873902,-1.051807,-2.251118,-6.119493,4.235984,-7.394504,3.055958,3.697851,3.180582,-2.444133,7.264884,-3.140791,7.985422,7.117400,9.742802,4.108754,5.735369,9.496397,-1.930977,5.493717,-3.087287,-3.653429,1.058028,7.913116,2.201142,-2.399363,-4.432927,-0.094857,6.416957,6.023635,8.677831,-3.058106,9.425511,-1.714540,5.114570,0.069942,-6.678679,-1.152360,-1.056907,-8.839248,7.755114,-0.420893,5.181034,-0.008286,-3.205599,8.241316,-3.167639,9.639382,2.968081,9.969950,1.948201,-0.359567,-2.685311,4.845237,-5.571404,2.406584,5.767537,-2.194580,-1.004437,9.824168,-2.044024,-9.528821,5.775903,-1.590507,-4.460909,2.808103,8.310057,3.664839,-9.092287,-8.958300,-9.176335,7.873725,7.106312,-9.835493,-2.635005,6.220529,-2.098342,1.545742,7.276196,0.652780,-5.277053,9.666676,-1.633278,1.549001,-8.914991,-2.602198,3.442463,-3.952987,2.967437,-6.777371,-7.810198,-3.384553,-5.469817,-3.505627,-4.398472,0.126204,0.548128,-5.082412,5.382342,-9.173237,3.124298,-0.139828,-0.915542,8.310243,4.846894,3.153071,8.786394,-5.358073,-6.737869,6.626566,-8.637543,4.530453,-1.905152,-5.488157,4.836397,3.203211,6.630335,-6.927113,-9.856004,9.684001,2.616010,3.205909,-7.220697,-5.638778,9.358623,7.452642,-6.536495,5.829655,-9.853635,-4.639432,-1.613099,-1.333232,6.981878,-7.124078,3.687403,3.884747,-9.055281,8.743549,2.504033,3.165200,-9.749107,-4.996072,5.939439,7.701929,0.355450,-0.881235,1.639727,7.518986,8.639429,-9.696526,8.451747,4.027922,-6.437653,9.824888,4.425006,-1.451920,6.918497,-3.864729,-4.780394,2.554362,-7.318717,-6.853941,-7.043409,-7.838174,3.096366,-7.512964,3.645712,-5.678304,5.478412,4.296504,6.833086,-9.541581,-6.246929,7.919284,-3.707375,2.955629,-7.322120,-1.508537,3.005088,-0.607961,9.753396,-3.652722,6.792303,-0.151016,-7.080851,0.988338,-8.038851,-6.140967,-5.127300,7.847445,-2.428425,1.509952,-0.832138,-4.705215,2.784320,-4.885485,4.397939,7.205219,-4.144679,8.901353,5.959969,-0.769639,-2.840119,-2.188046,-4.399383,9.024228,-3.462793,-1.052839,-1.065998,4.478731,8.146721,-6.998054,-0.217585,1.807998,-6.314591,1.908685,6.726124,4.264588,-5.512344,3.245988,5.815021], dtype = "float64")#candidate|3620|(330,)|const|float64
call_3619 = relay.TupleGetItem(func_2169_call(relay.reshape(call_3570.astype('float32'), [165,]), relay.reshape(const_3620.astype('float64'), [5, 66]), ), 5)
call_3621 = relay.TupleGetItem(func_2172_call(relay.reshape(call_3570.astype('float32'), [165,]), relay.reshape(const_3620.astype('float64'), [5, 66]), ), 5)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3641 = func_2393_call()
call_3642 = func_2393_call()
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_3655 = func_2758_call()
call_3656 = func_2758_call()
func_3535_call = mod.get_global_var('func_3535')
func_3538_call = mutated_mod.get_global_var('func_3538')
call_3670 = relay.TupleGetItem(func_3535_call(relay.reshape(call_3567.astype('float64'), [3, 11, 11])), 1)
call_3671 = relay.TupleGetItem(func_3538_call(relay.reshape(call_3567.astype('float64'), [3, 11, 11])), 1)
func_2049_call = mod.get_global_var('func_2049')
func_2052_call = mutated_mod.get_global_var('func_2052')
const_3673 = relay.const([[6,-8,-10,-2,3,-5,8,-7,-7,-6,6,-7],[-5,4,-3,-1,-2,3,5,-3,1,-9,9,1],[-8,9,4,10,-7,3,9,-10,2,-2,-9,5],[3,8,1,-6,-4,-4,-2,-10,-1,8,-4,8],[4,-4,5,2,5,-1,-9,7,3,4,6,-6],[-4,6,5,-5,-3,1,-8,9,-4,10,-7,-9]], dtype = "int8")#candidate|3673|(6, 12)|const|int8
call_3672 = relay.TupleGetItem(func_2049_call(relay.reshape(var_3571.astype('int8'), []), relay.reshape(const_3673.astype('int8'), [2, 9, 4]), ), 0)
call_3674 = relay.TupleGetItem(func_2052_call(relay.reshape(var_3571.astype('int8'), []), relay.reshape(const_3673.astype('int8'), [2, 9, 4]), ), 0)
uop_3678 = relay.acosh(call_3619.astype('float32')) # shape=(5, 66)
uop_3680 = relay.acosh(call_3621.astype('float32')) # shape=(5, 66)
output = relay.Tuple([call_3567,call_3570,var_3571,call_3586,const_3587,call_3612,uop_3614,const_3620,call_3641,call_3655,call_3670,call_3672,const_3673,uop_3678,])
output2 = relay.Tuple([call_3568,call_3572,var_3571,call_3588,const_3587,call_3613,uop_3616,const_3620,call_3642,call_3656,call_3671,call_3674,const_3673,uop_3680,])
func_3687 = relay.Function([var_3571,], output)
mod['func_3687'] = func_3687
mod = relay.transform.InferType()(mod)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3688 = relay.var("var_3688", dtype = "float32", shape = ())#candidate|3688|()|var|float32
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3689 = func_3687_call(var_3688)
output = call_3689
func_3690 = relay.Function([var_3688], output)
mutated_mod['func_3690'] = func_3690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_3716 = relay.TupleGetItem(func_2091_call(), 2)
call_3717 = relay.TupleGetItem(func_2093_call(), 2)
var_3721 = relay.var("var_3721", dtype = "float32", shape = (33, 5))#candidate|3721|(33, 5)|var|float32
bop_3722 = relay.logical_xor(call_3716.astype('uint64'), relay.reshape(var_3721.astype('uint64'), relay.shape_of(call_3716))) # shape=(33, 5)
bop_3725 = relay.logical_xor(call_3717.astype('uint64'), relay.reshape(var_3721.astype('uint64'), relay.shape_of(call_3717))) # shape=(33, 5)
bop_3728 = relay.left_shift(var_3721.astype('int32'), relay.reshape(call_3716.astype('int32'), relay.shape_of(var_3721))) # shape=(33, 5)
bop_3731 = relay.left_shift(var_3721.astype('int32'), relay.reshape(call_3717.astype('int32'), relay.shape_of(var_3721))) # shape=(33, 5)
bop_3739 = relay.bitwise_xor(bop_3728.astype('uint32'), relay.reshape(bop_3722.astype('uint32'), relay.shape_of(bop_3728))) # shape=(33, 5)
bop_3742 = relay.bitwise_xor(bop_3731.astype('uint32'), relay.reshape(bop_3725.astype('uint32'), relay.shape_of(bop_3731))) # shape=(33, 5)
uop_3750 = relay.sigmoid(bop_3739.astype('float32')) # shape=(33, 5)
uop_3752 = relay.sigmoid(bop_3742.astype('float32')) # shape=(33, 5)
uop_3757 = relay.atan(uop_3750.astype('float64')) # shape=(33, 5)
uop_3759 = relay.atan(uop_3752.astype('float64')) # shape=(33, 5)
output = relay.Tuple([uop_3757,])
output2 = relay.Tuple([uop_3759,])
func_3766 = relay.Function([var_3721,], output)
mod['func_3766'] = func_3766
mod = relay.transform.InferType()(mod)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3767 = relay.var("var_3767", dtype = "float32", shape = (33, 5))#candidate|3767|(33, 5)|var|float32
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3768 = func_3766_call(var_3767)
output = call_3768
func_3769 = relay.Function([var_3767], output)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3821 = relay.var("var_3821", dtype = "float64", shape = (15, 3, 8))#candidate|3821|(15, 3, 8)|var|float64
uop_3822 = relay.rsqrt(var_3821.astype('float64')) # shape=(15, 3, 8)
func_3501_call = mod.get_global_var('func_3501')
func_3503_call = mutated_mod.get_global_var('func_3503')
call_3825 = func_3501_call()
call_3826 = func_3501_call()
uop_3828 = relay.log(uop_3822.astype('float64')) # shape=(15, 3, 8)
output = relay.Tuple([call_3825,uop_3828,])
output2 = relay.Tuple([call_3826,uop_3828,])
func_3834 = relay.Function([var_3821,], output)
mod['func_3834'] = func_3834
mod = relay.transform.InferType()(mod)
var_3835 = relay.var("var_3835", dtype = "float64", shape = (15, 3, 8))#candidate|3835|(15, 3, 8)|var|float64
output = func_3834(var_3835)
func_3836 = relay.Function([var_3835], output)
mutated_mod['func_3836'] = func_3836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3848 = func_2126_call()
call_3849 = func_2126_call()
output = relay.Tuple([call_3848,])
output2 = relay.Tuple([call_3849,])
func_3862 = relay.Function([], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3863 = func_3862_call()
output = call_3863
func_3864 = relay.Function([], output)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3561_call = mod.get_global_var('func_3561')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_3867 = relay.TupleGetItem(func_3561_call(), 0)
call_3868 = relay.TupleGetItem(func_3562_call(), 0)
var_3879 = relay.var("var_3879", dtype = "float32", shape = (12, 16, 15))#candidate|3879|(12, 16, 15)|var|float32
bop_3880 = relay.not_equal(call_3867.astype('bool'), relay.reshape(var_3879.astype('bool'), relay.shape_of(call_3867))) # shape=(12, 16, 15)
bop_3883 = relay.not_equal(call_3868.astype('bool'), relay.reshape(var_3879.astype('bool'), relay.shape_of(call_3868))) # shape=(12, 16, 15)
func_3687_call = mod.get_global_var('func_3687')
func_3690_call = mutated_mod.get_global_var('func_3690')
const_3887 = relay.const(-2.273905, dtype = "float32")#candidate|3887|()|const|float32
call_3886 = relay.TupleGetItem(func_3687_call(relay.reshape(const_3887.astype('float32'), [])), 3)
call_3888 = relay.TupleGetItem(func_3690_call(relay.reshape(const_3887.astype('float32'), [])), 3)
bop_3889 = relay.bitwise_xor(bop_3880.astype('int8'), relay.reshape(call_3867.astype('int8'), relay.shape_of(bop_3880))) # shape=(12, 16, 15)
bop_3892 = relay.bitwise_xor(bop_3883.astype('int8'), relay.reshape(call_3868.astype('int8'), relay.shape_of(bop_3883))) # shape=(12, 16, 15)
func_2169_call = mod.get_global_var('func_2169')
func_2172_call = mutated_mod.get_global_var('func_2172')
var_3896 = relay.var("var_3896", dtype = "float32", shape = (165,))#candidate|3896|(165,)|var|float32
var_3897 = relay.var("var_3897", dtype = "float64", shape = (330,))#candidate|3897|(330,)|var|float64
call_3895 = relay.TupleGetItem(func_2169_call(relay.reshape(var_3896.astype('float32'), [165,]), relay.reshape(var_3897.astype('float64'), [5, 66]), ), 5)
call_3898 = relay.TupleGetItem(func_2172_call(relay.reshape(var_3896.astype('float32'), [165,]), relay.reshape(var_3897.astype('float64'), [5, 66]), ), 5)
uop_3901 = relay.erf(var_3879.astype('float64')) # shape=(12, 16, 15)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_3917 = func_2414_call()
call_3918 = func_2414_call()
output = relay.Tuple([call_3886,const_3887,bop_3889,call_3895,var_3896,var_3897,uop_3901,call_3917,])
output2 = relay.Tuple([call_3888,const_3887,bop_3892,call_3898,var_3896,var_3897,uop_3901,call_3918,])
func_3922 = relay.Function([var_3879,var_3896,var_3897,], output)
mod['func_3922'] = func_3922
mod = relay.transform.InferType()(mod)
var_3923 = relay.var("var_3923", dtype = "float32", shape = (12, 16, 15))#candidate|3923|(12, 16, 15)|var|float32
var_3924 = relay.var("var_3924", dtype = "float32", shape = (165,))#candidate|3924|(165,)|var|float32
var_3925 = relay.var("var_3925", dtype = "float64", shape = (330,))#candidate|3925|(330,)|var|float64
output = func_3922(var_3923,var_3924,var_3925,)
func_3926 = relay.Function([var_3923,var_3924,var_3925,], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4013 = func_2414_call()
call_4014 = func_2414_call()
const_4015 = relay.const([[[4.878393,7.334701,-9.117311,4.416890,1.405302,-9.442448,-9.287963,6.051026,-7.100366,0.045516,-7.425785],[-5.271879,0.413936,3.813358,8.802802,2.486684,-4.723423,-9.204378,-2.636089,-8.903653,0.555554,8.687625],[-3.970011,4.594531,-2.124939,-7.281668,-8.895366,-0.081113,-0.648943,4.657352,-7.212053,-8.936265,4.205382],[4.626363,1.268176,3.286926,-5.073728,-9.685768,7.016688,9.206190,-1.870733,0.205826,7.424091,-7.077667],[5.063914,6.475309,-6.289664,-6.931359,-3.334491,3.333407,6.032578,-7.142158,0.193713,4.607308,3.640375],[-4.741348,-0.920712,-0.044922,5.944904,5.098304,-3.519732,-2.192624,0.470370,-9.742970,-1.386922,1.542491],[0.867032,-2.666054,-1.470140,9.076736,-2.514447,5.222845,9.018111,-2.802849,-2.054823,2.327184,-9.246881],[3.845980,-0.786457,-5.367610,2.426170,1.797616,9.228319,4.791913,5.034870,6.072650,1.686697,-4.650177],[-2.897875,9.724264,0.853645,0.558122,3.884342,0.445100,0.349704,-3.659484,9.332318,2.498657,1.628176],[-6.081740,9.838127,3.230679,-4.653536,-4.596420,-6.445732,5.789738,-2.290632,-6.447773,0.461320,-3.158129],[4.283461,4.721106,-1.230290,9.109548,9.107861,-1.902065,-8.901316,8.068256,5.978194,1.067660,-0.602044]],[[2.584535,-0.528674,-7.491624,5.378367,-0.352045,2.821970,6.374016,-7.193390,-6.818426,-0.129487,-3.438542],[-8.717620,0.888499,0.431272,9.163712,0.778654,8.138195,-2.548650,8.423582,-7.388481,-1.467696,5.021683],[9.804726,1.909529,-3.891222,-1.937321,-0.221064,-4.590837,-9.976547,-7.329127,0.929899,2.902973,2.518679],[-0.684368,6.957228,-6.602783,6.341404,-9.112745,6.904219,-7.456909,9.334450,1.945579,1.581215,-9.779020],[3.380869,3.528337,-3.701729,3.250970,9.534518,1.000074,-1.834952,-5.192049,9.957186,-0.631645,-6.607668],[-1.850799,9.211241,3.861225,-7.046879,5.121775,5.815541,-5.187197,5.532959,2.754227,-7.929456,8.017291],[4.642125,-0.672688,-7.093686,3.604252,3.822627,2.896148,7.313984,3.658055,-7.168337,-4.938409,5.840084],[4.397232,-0.040857,8.012877,3.244534,-1.050320,5.478854,-7.704321,5.171710,-8.400931,1.383274,-8.236783],[4.323089,-9.255842,-8.944809,6.934458,-4.520801,-8.790720,0.318691,5.948781,-5.471079,5.080819,-4.565671],[-4.792955,-8.747905,-2.465666,-8.223637,-0.931801,-9.571072,6.603862,8.570643,-7.783176,9.952143,0.791765],[1.676653,-3.005385,-2.898924,7.282323,8.151398,-7.671099,-7.119598,8.840764,6.855986,-7.473819,1.472785]],[[-9.793690,-0.686134,-2.534540,3.365634,1.195987,-0.917593,0.003287,5.968883,6.715377,-5.120780,-1.318859],[-8.992996,1.865110,-3.824424,3.403093,4.377205,-5.835968,-8.734381,4.724776,-4.820519,-7.198807,-2.865096],[5.073353,-1.049205,-5.306180,7.280769,-1.048748,8.376541,4.882919,5.574530,6.523264,8.223184,8.103653],[-8.270657,3.899344,0.743040,4.470727,5.724252,7.663076,5.163358,-6.711090,3.596572,-5.584715,-1.493695],[-3.350013,-5.312875,-7.778077,2.815593,1.936091,5.766992,9.435527,8.464718,-4.943588,4.550208,-4.950357],[-6.397760,2.130891,2.337640,-6.750346,-9.371363,-1.845735,-0.851886,-6.895903,-8.103022,5.403854,-1.146787],[-7.908812,7.890751,6.802058,-0.673746,9.320243,-3.682984,-3.406095,-8.718003,-1.412443,5.174610,3.148469],[4.385564,-3.054089,2.502379,6.375887,-0.125283,2.710837,3.673381,-0.400338,4.519981,-0.631280,5.377966],[7.966982,9.340361,-8.344455,-3.843574,-1.490046,4.974253,9.691334,-8.302497,-0.672120,-9.772622,-8.086803],[-7.936948,-9.327662,-9.489471,-1.171208,8.710416,0.457346,7.327290,-7.167320,5.771584,5.615929,2.528390],[0.432508,-2.489285,-9.731240,-3.835286,-5.375164,1.884358,-8.016214,1.950696,8.651686,-3.697877,9.564210]]], dtype = "float64")#candidate|4015|(3, 11, 11)|const|float64
bop_4016 = relay.logical_xor(call_4013.astype('int32'), relay.reshape(const_4015.astype('int32'), relay.shape_of(call_4013))) # shape=(3, 11, 11)
bop_4019 = relay.logical_xor(call_4014.astype('int32'), relay.reshape(const_4015.astype('int32'), relay.shape_of(call_4014))) # shape=(3, 11, 11)
output = bop_4016
output2 = bop_4019
func_4034 = relay.Function([], output)
mod['func_4034'] = func_4034
mod = relay.transform.InferType()(mod)
output = func_4034()
func_4035 = relay.Function([], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4047 = relay.const([[[-0.639162,7.390996,-7.218906,-4.249219,-8.509966,-7.303491,5.398110,-6.064116,4.742923,-3.694897,5.052566,-0.775946,6.628518],[3.289715,9.713077,5.011065,0.826783,-0.719876,2.010133,5.471318,0.070074,7.646623,-0.429948,-3.859665,3.943879,9.560302],[1.264036,7.179841,5.405435,-5.081080,5.341728,-0.407938,-0.422621,-0.370815,6.814961,7.118290,0.873183,1.789476,-2.995789],[4.126506,-6.252284,-3.504135,-8.328144,1.486964,-0.214028,-3.329195,5.952980,-2.788518,2.681176,6.829280,-3.135606,7.101382],[4.601092,-0.984158,0.989775,9.667121,-3.183647,1.913050,-7.085149,-0.183364,-6.962106,-4.998410,3.951951,0.330520,-7.447913]],[[-3.335113,3.846837,-6.466466,-4.284676,-3.195710,1.166488,-9.015242,3.404353,-5.981661,-7.518005,-7.910816,-6.102524,-2.731340],[-8.639768,-1.366858,-5.763409,7.381375,7.149889,6.683844,-0.597316,4.083233,4.454985,3.802997,3.233164,-3.051262,-5.156451],[5.334438,-8.409387,4.766112,9.204118,4.031370,-7.882904,-6.655070,-6.075340,2.768776,0.478646,-9.586517,-7.580383,-3.026305],[-1.844306,1.190417,6.361059,5.564526,-8.429663,-7.056316,-0.147412,-1.883773,0.646876,-9.705738,-6.989952,-7.135316,-3.668930],[-5.596637,2.156966,7.689732,-8.002681,-8.471556,7.273120,6.559787,-8.062537,0.717993,3.890097,7.791671,-1.208876,-2.921815]],[[-7.642401,4.696524,-0.611282,6.814287,-1.735843,4.864856,-8.310000,-4.194602,4.802571,9.194766,-3.003854,-0.050534,-5.495952],[-1.262831,-8.004718,3.964197,9.490913,0.356957,1.335048,3.579065,2.718662,-4.490049,2.064909,2.264727,-3.637457,-5.223673],[-2.379522,-8.815374,3.159342,8.089202,0.815172,-3.368423,9.777177,-4.774159,-6.557987,-1.642854,-4.930633,6.238799,-1.604271],[-5.496990,-2.905899,4.678609,-3.405847,6.922917,-6.964947,7.733910,-1.147781,-2.439660,6.266801,-2.202873,2.604668,-4.161474],[2.542818,7.266112,-7.633381,-0.065353,-0.405118,5.573160,1.885936,-8.742279,-7.632747,9.680911,0.999936,-3.362667,0.534574]],[[6.717302,-7.414612,-5.249893,2.442666,8.531144,-5.419785,-2.459896,6.450154,9.817989,1.876055,-6.499742,3.958600,-9.135550],[0.885078,5.249695,8.944912,3.206596,-6.313599,2.369034,7.633946,-6.335910,-4.568312,8.084211,-2.707341,-0.270257,-8.704176],[0.981772,-0.588530,4.679041,8.906237,-4.606799,9.779564,-1.431458,-6.768974,2.855759,-6.948960,1.132748,0.040356,-9.826605],[5.351790,3.000578,7.381001,2.801012,-2.023044,8.244708,1.567795,-5.210910,-4.739781,7.532589,-4.590973,-8.475307,-5.288565],[2.618257,-3.675992,0.216406,-3.970212,-0.832440,-6.306524,8.279988,-3.704989,-4.263058,3.380952,-4.830791,2.040127,-9.356860]],[[-9.756971,-6.011260,-2.200933,-9.464920,4.360431,-2.338452,-9.374777,8.638410,-3.603225,6.695409,6.787882,-2.841452,-0.258192],[-2.065874,-0.937861,5.751434,-7.030801,7.197463,4.843534,8.800401,-8.376363,-5.497336,-4.429907,2.044439,2.714660,7.572562],[-6.347375,0.068499,-5.894604,-5.187419,-0.178826,-5.856747,3.180914,9.089225,0.400255,5.959661,-0.762447,1.259932,0.696610],[9.429624,0.570128,4.577288,-4.315984,2.132575,6.750897,-5.243250,4.639056,-9.769608,-1.417916,-0.138500,-8.794385,9.753307],[9.844749,-1.258482,7.226770,5.222053,-6.855758,-3.424454,5.922558,-8.074826,3.769365,-0.384348,1.816173,9.889826,-9.440921]],[[6.922506,1.891359,3.307980,5.618262,9.117838,9.237979,-1.477980,-5.313358,4.125635,-5.866478,-1.705461,-1.678477,-5.097170],[4.208515,2.640853,8.998997,-4.702378,-0.156387,-4.960775,3.939044,-5.493344,-8.769541,9.840284,-8.074838,7.069339,-6.999943],[-5.870230,-6.989624,-9.813379,8.859072,-8.236562,-2.534680,0.670024,-8.642072,0.918636,-0.431213,7.081884,-5.737300,9.450681],[4.466171,1.061723,-6.807224,-9.919174,-2.864102,-3.599634,-6.269315,6.668698,8.291891,5.358172,-1.178730,-4.412392,7.004438],[4.079843,-2.623902,-5.349917,9.750028,3.037853,2.147790,0.228385,-4.826394,1.139909,-7.476742,4.282947,-1.575029,9.078031]],[[0.189968,7.225601,5.276303,-8.066726,3.010786,3.711605,-2.002012,-7.861309,-5.466487,-8.241360,0.304344,-5.988468,-2.905874],[6.618575,-9.896155,1.813967,-3.413509,-1.914252,5.875357,2.249146,1.138895,-6.573528,7.357366,-6.553104,-9.840070,-5.086978],[-6.709250,5.378965,2.940318,5.537140,1.132059,7.424077,9.730422,-4.758673,9.256630,9.685918,-2.297098,-9.184816,-4.130599],[-9.313674,1.048416,-2.196409,4.404204,-9.339289,3.602113,-2.966923,-2.240048,-3.482600,-8.857677,9.738679,8.879070,-4.842892],[-1.754463,8.941243,6.062194,7.988094,5.133192,5.752515,2.766482,4.175023,0.626237,7.174129,4.492675,-3.480790,-3.215560]],[[6.040839,-3.406745,-8.390113,7.317272,-2.901988,5.642566,4.012036,4.588050,0.431854,5.997892,4.722212,-4.434428,-2.943007],[1.403112,4.532152,-2.789405,1.203523,8.449927,1.434237,2.665848,0.912303,3.341123,3.108131,1.925077,8.552273,8.537854],[-1.426775,-0.066525,-0.767508,0.841671,2.158855,-4.714318,-2.043625,-9.073067,-8.591661,4.894072,-9.999853,1.806097,-3.039390],[-7.143237,4.577275,-6.063003,-7.086170,-2.802911,-5.058278,-8.877465,-6.930242,-2.714359,-2.740949,-0.539440,9.977902,5.581022],[6.622752,3.779012,6.870796,7.588537,-2.505557,-6.233624,-4.165710,0.907935,-5.804878,7.811692,-3.208184,-6.861686,-9.057837]],[[-7.634266,-9.034970,-3.208596,-8.051087,9.265467,5.014053,-0.843013,7.854583,-5.657487,2.406037,-2.082015,-7.869160,-8.750272],[-4.200567,2.609753,-2.423663,-5.965109,5.716124,-6.781336,-3.405495,-3.767331,-5.411365,5.908553,2.919264,-8.350668,0.608517],[9.981701,-1.756296,7.707732,-8.625031,3.404001,-8.866513,7.351864,-4.896898,1.160514,-9.912541,7.859619,-9.422253,-4.400298],[-4.044138,-5.661717,6.884688,7.548394,-1.424332,-8.811121,-5.761690,4.482869,7.955646,-1.016281,-4.876793,4.652710,7.226238],[2.370585,6.674705,-5.906907,-6.201343,-1.205066,-9.571291,5.881664,-0.961464,8.712718,-7.866630,9.578806,7.532796,1.907369]],[[9.112921,-8.252927,8.659721,-1.358777,6.345652,0.065909,1.692884,-4.047126,2.410161,-8.305078,4.705031,-2.086013,-1.740032],[-3.408982,-5.058424,9.241196,-6.969887,-2.751342,-9.844708,-3.289720,8.035199,9.940290,2.829139,-3.720743,-6.905032,-2.175592],[-3.860410,5.088277,-2.318039,8.257222,2.048124,-9.522552,-3.178119,-6.565435,2.873739,7.392321,-9.218742,-3.363644,-2.603550],[-1.462744,9.500222,-2.095980,-1.847257,6.474395,3.072440,1.672890,8.795242,-0.892127,-1.999695,-9.453945,-5.501980,4.950142],[5.326894,-9.361614,-2.362224,-0.419855,-2.270254,-3.226502,-3.811489,4.185725,-5.877455,-8.550560,5.122386,6.107837,7.511314]],[[3.345821,8.999096,-3.634355,-3.197429,-4.686548,-9.126491,0.575281,-6.150701,3.629782,2.906540,-3.526645,4.796321,6.035946],[-7.341154,-1.041475,8.722311,8.027109,-7.938797,3.414417,-9.268209,-4.582831,-1.395793,6.048991,5.363683,8.944023,-2.974059],[-9.396382,-0.071942,-9.803165,-8.605959,4.083448,-2.342292,1.583550,-0.253781,-1.493159,-9.891117,9.690769,-6.108769,6.647655],[8.869331,-6.604151,5.210356,6.582050,-3.487200,-9.081384,1.752401,-2.601751,-6.817698,-9.002550,-6.011424,5.339800,8.750486],[7.747274,-8.526714,8.760075,2.919718,2.454676,-9.681150,5.811020,-9.763128,-6.031118,4.587305,1.832330,-5.793673,-1.800941]]], dtype = "float64")#candidate|4047|(11, 5, 13)|const|float64
var_4048 = relay.var("var_4048", dtype = "float64", shape = (11, 5, 13))#candidate|4048|(11, 5, 13)|var|float64
bop_4049 = relay.mod(const_4047.astype('float64'), relay.reshape(var_4048.astype('float64'), relay.shape_of(const_4047))) # shape=(11, 5, 13)
output = bop_4049
output2 = bop_4049
func_4052 = relay.Function([var_4048,], output)
mod['func_4052'] = func_4052
mod = relay.transform.InferType()(mod)
var_4053 = relay.var("var_4053", dtype = "float64", shape = (11, 5, 13))#candidate|4053|(11, 5, 13)|var|float64
output = func_4052(var_4053)
func_4054 = relay.Function([var_4053], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4059 = func_2414_call()
call_4060 = func_2414_call()
const_4064 = relay.const([[[-6.335305,2.676832,2.891109,3.424750,3.963724,-6.706281,7.412881,3.339465,7.665625,-0.534245,0.678648],[9.961728,7.295315,-2.239592,9.688357,1.705177,5.140759,-5.466496,1.658238,7.480545,-5.885154,-3.846052],[8.134169,2.887564,-9.965524,2.270686,-0.212892,-1.455149,5.576828,-9.344495,-6.489250,-6.277026,-0.867410],[-6.577103,7.624303,3.365994,-7.030590,6.712304,7.808898,-1.341121,-2.357944,1.692704,5.447212,-0.934896],[-9.066985,4.399660,-3.852037,-4.523598,0.935295,6.588904,-9.600558,-4.686317,-9.006045,-9.640324,-0.417967],[3.447140,8.778670,9.318434,-6.740219,7.533078,6.228321,6.206386,-2.767498,-3.933668,-4.826544,-1.766979],[-0.712909,8.751715,-8.894865,-0.424074,2.944022,0.979838,-7.151726,1.746095,8.134406,3.059175,2.903029],[-8.900166,-5.819956,0.027880,-8.539569,5.520284,5.564032,5.390170,5.904703,-1.594450,4.309638,4.007239],[9.601175,-5.301136,3.780196,6.297473,-9.400256,-2.403134,-2.958192,-2.190679,-5.487683,-3.524831,-8.713015],[9.413069,8.290283,-5.897485,-9.880663,3.838620,-0.506043,-7.696122,0.117186,8.353276,5.985280,8.801858],[3.254840,2.173672,4.929805,9.035431,3.505749,3.462608,7.095371,-8.795575,9.379002,2.475456,3.091139]],[[8.306121,2.786482,8.966627,4.405410,-7.775836,-8.773770,-3.543075,5.367187,4.696967,-8.745312,-2.522797],[6.566796,0.796548,-1.666461,-1.076634,-0.773982,-4.538501,-7.462061,0.537368,-8.948638,7.577302,6.217208],[9.182474,8.606280,7.989269,3.212819,6.418961,-4.396699,-3.941650,9.446994,9.341660,-7.090643,7.296072],[7.064679,-8.041537,7.389300,-3.292135,7.411055,9.727660,-9.199951,8.727825,-7.119049,-7.647313,1.999443],[1.833671,-0.361542,9.931621,2.900667,3.920097,2.462341,-8.702062,6.608526,4.075034,-5.070939,-8.465236],[1.778499,4.611176,-0.729154,6.172696,-8.161598,2.845627,5.454977,2.310802,5.809088,6.268499,9.983441],[7.851751,-9.758291,9.802802,-0.858309,8.546045,1.702203,1.675876,0.129058,-3.272655,-7.987194,-1.454325],[-4.901524,-1.269161,-1.629938,-2.780377,8.994254,5.495932,-3.911407,5.156798,-5.859027,-3.544178,5.932341],[0.106919,-7.126375,-4.339210,2.275344,-6.329231,-2.077275,-2.519944,-8.959163,-5.904147,-1.438312,7.258968],[3.051901,7.856845,-6.157927,6.071755,-0.279715,-8.051752,-2.704850,8.251480,2.800120,9.915748,-8.651325],[-1.082811,-6.246058,-7.835265,-4.035197,1.259257,-3.942218,4.692811,2.667609,-5.773012,-6.378689,-8.752682]],[[2.409844,-3.914931,-8.557162,2.341085,4.848874,9.524415,-0.762416,4.273084,-9.364170,-6.632072,6.860707],[6.192979,7.559612,-9.019039,-7.213360,-2.073942,-0.155455,-6.813528,9.725326,9.133371,1.240738,-1.991326],[7.934539,4.588592,1.078947,-1.724966,5.981488,8.928228,-2.375178,-2.668088,-9.923886,-9.501569,-2.903670],[7.826244,-5.044444,-6.370839,-6.457050,-8.901146,-3.665054,3.188651,5.468790,6.774739,7.084737,3.405291],[-1.488127,-4.699693,6.927867,-7.145957,9.000039,8.598079,-1.974420,6.161085,-4.874340,-5.747437,8.420174],[-5.068448,-2.234824,-8.169606,-5.373210,2.213473,1.588649,-7.878448,-2.154452,-6.231490,-7.146382,-0.858471],[-2.638766,2.117918,4.626284,5.463793,1.018064,6.242913,1.273902,9.903571,-4.010114,6.475788,-7.948294],[-0.536667,-3.831066,-5.021045,-1.144383,4.438068,1.093752,1.600704,0.027838,7.439223,3.824040,-8.122987],[-5.764275,-8.209932,-2.148775,4.971802,5.128788,7.291076,-6.099893,2.203092,-5.751378,1.068540,4.613389],[-3.712969,-3.993278,-8.100086,7.992920,-2.194121,-2.238731,-4.884076,-5.001536,-9.950048,5.609055,7.668711],[4.176386,-4.747603,-7.564264,5.650975,-3.826382,-1.851664,-4.450135,-7.204544,6.989031,9.268202,-9.982337]]], dtype = "float64")#candidate|4064|(3, 11, 11)|const|float64
bop_4065 = relay.mod(call_4059.astype('float32'), relay.reshape(const_4064.astype('float32'), relay.shape_of(call_4059))) # shape=(3, 11, 11)
bop_4068 = relay.mod(call_4060.astype('float32'), relay.reshape(const_4064.astype('float32'), relay.shape_of(call_4060))) # shape=(3, 11, 11)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_4069 = relay.TupleGetItem(func_2021_call(), 0)
call_4070 = relay.TupleGetItem(func_2023_call(), 0)
func_3834_call = mod.get_global_var('func_3834')
func_3836_call = mutated_mod.get_global_var('func_3836')
const_4076 = relay.const([2.391585,2.169493,-7.235435,1.392904,-1.490320,0.713199,-4.237999,-2.166794,-0.420802,6.335180,8.567164,-6.958654,-8.732477,-6.300084,-6.511970,5.270932,4.772217,9.881349,-9.494318,0.090725,-7.825046,-3.097177,-7.846865,-3.303357,9.726596,9.244786,5.323692,-5.275658,5.173293,-5.648046,-3.480816,-1.732096,-6.397032,0.396129,-8.444815,6.479558,-3.652079,1.192609,6.913656,1.058364,-6.150008,5.821467,-6.721426,3.775993,-8.823415,3.907878,6.108769,8.545823,-0.153969,-8.280906,6.045528,6.000764,1.946887,-9.297025,-4.194921,7.535974,5.198746,-4.288432,-0.864699,5.184421,8.387772,2.899806,-8.712288,-9.129895,-6.542188,-4.932704,4.359513,8.702092,-3.595811,7.464227,5.403802,8.041183,2.065960,-2.345419,-9.292422,5.359072,0.643715,-2.788965,5.939988,-3.548689,-4.338620,8.281350,-9.384284,-6.997844,4.116686,7.401796,9.170309,4.488444,-5.066526,-0.094438,7.055277,8.555462,8.968728,7.729076,-3.848936,-8.017770,-0.772667,-3.083002,-1.075036,5.488925,-1.075323,-8.314038,-2.928496,9.495304,8.507732,1.937994,6.946015,1.696341,-7.501042,3.296221,-1.986978,2.689821,5.362919,8.925025,4.608689,6.122056,6.319182,0.357378,3.203471,6.322839,-8.225032,-6.154629,9.297314,-2.364411,-4.672724,-2.337344,8.382039,9.116018,-8.827513,-3.427752,2.983338,0.604694,3.930443,-7.906221,0.785628,-8.139460,-6.284549,8.826493,-3.679991,-6.287666,5.751383,-0.553783,-4.503534,-7.256459,-8.837993,-6.348624,-6.284219,5.057788,-6.017610,2.860335,5.190052,-4.788678,-5.767324,1.447001,7.985321,3.857284,-3.535004,-8.653954,9.758559,2.984507,4.872621,7.327218,-0.451156,-8.202208,5.540567,-7.004418,4.808303,-3.818123,1.135151,-6.577617,4.218501,1.008926,6.453665,6.384877,-6.153199,1.936735,-9.361846,-4.437389,2.041383,-7.671583,-4.033204,7.141618,9.077112,4.987576,4.117995,1.350098,1.714249,-3.407223,-5.170701,4.493504,0.163419,8.661660,5.591942,-6.140077,-9.663587,0.262060,1.283434,-9.347213,0.829440,0.233549,0.540585,6.324737,-9.285756,-2.936242,3.458429,3.988785,-3.115483,8.142195,-5.572339,-1.839394,-0.119617,2.251243,-7.701514,-3.051439,8.995231,-0.543964,-6.630780,8.523021,7.831935,-0.887796,0.417626,2.739461,-2.031790,-2.662667,-8.354527,6.207709,-7.969632,8.696517,-6.082583,-4.270789,4.804642,-5.872248,7.497468,-4.320758,5.289860,6.675512,6.989774,-2.168670,3.257325,-2.292468,9.106104,-4.758466,9.139302,-2.408682,0.681011,0.581095,7.633988,7.829110,-8.825063,-5.932378,-5.906132,-2.499167,-6.871049,1.631487,1.933838,-4.943396,2.756913,9.812231,-5.997959,-1.274307,-9.515372,-5.351189,4.270307,-9.421666,-6.200116,-3.731633,5.026405,-4.603248,1.365722,3.408593,9.897284,-4.057145,3.381746,4.279223,7.244150,8.507349,-6.234189,-6.609138,4.741049,1.347436,2.308343,-5.092762,-9.238879,-9.451140,-7.680525,9.933501,1.803200,-2.782226,7.838046,-6.466628,0.908005,-0.674969,-1.417422,-9.092984,-4.388096,3.346265,2.611950,-1.885630,-7.710484,0.199059,-3.487400,-5.601795,-1.830448,-0.536387,4.089431,7.276496,7.230340,-0.957850,-8.956064,2.656890,-7.783793,-0.783064,5.232318,2.837410,6.812330,-6.883864,7.143236,-0.912346,-3.736364,9.790717,9.461401,-1.171476,3.008076,-4.746654,8.521017,-6.426627,-3.619512,8.439613,1.080422,9.730339,-8.813912,-4.726932,1.888654,9.518169,-5.595915,4.463829,0.929498,-1.417866,-3.569179,-1.498415,-5.612072,5.355438,9.868220,-6.308802,4.409167,-6.509799,-1.933815,-5.186560,9.459880,0.163580,-6.035997,6.142078,-0.737022,-9.997358,1.753181,8.149105,3.646297,-3.849548,7.267708,0.436913], dtype = "float64")#candidate|4076|(360,)|const|float64
call_4075 = relay.TupleGetItem(func_3834_call(relay.reshape(const_4076.astype('float64'), [15, 3, 8])), 0)
call_4077 = relay.TupleGetItem(func_3836_call(relay.reshape(const_4076.astype('float64'), [15, 3, 8])), 0)
bop_4078 = relay.add(bop_4065.astype('uint8'), relay.reshape(const_4064.astype('uint8'), relay.shape_of(bop_4065))) # shape=(3, 11, 11)
bop_4081 = relay.add(bop_4068.astype('uint8'), relay.reshape(const_4064.astype('uint8'), relay.shape_of(bop_4068))) # shape=(3, 11, 11)
output = relay.Tuple([call_4069,call_4075,const_4076,bop_4078,])
output2 = relay.Tuple([call_4070,call_4077,const_4076,bop_4081,])
func_4082 = relay.Function([], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mutated_mod.get_global_var('func_4082')
call_4083 = func_4082_call()
output = call_4083
func_4084 = relay.Function([], output)
mutated_mod['func_4084'] = func_4084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_4090 = func_2758_call()
call_4091 = func_2758_call()
uop_4110 = relay.tan(call_4090.astype('float64')) # shape=(1, 165)
uop_4112 = relay.tan(call_4091.astype('float64')) # shape=(1, 165)
output = relay.Tuple([uop_4110,])
output2 = relay.Tuple([uop_4112,])
func_4118 = relay.Function([], output)
mod['func_4118'] = func_4118
mod = relay.transform.InferType()(mod)
output = func_4118()
func_4119 = relay.Function([], output)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4118_call = mod.get_global_var('func_4118')
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4171 = relay.TupleGetItem(func_4118_call(), 0)
call_4172 = relay.TupleGetItem(func_4119_call(), 0)
output = call_4171
output2 = call_4172
func_4175 = relay.Function([], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
output = func_4175()
func_4176 = relay.Function([], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4177 = relay.var("var_4177", dtype = "uint16", shape = (5, 5, 9))#candidate|4177|(5, 5, 9)|var|uint16
var_4178 = relay.var("var_4178", dtype = "uint16", shape = (5, 5, 9))#candidate|4178|(5, 5, 9)|var|uint16
bop_4179 = relay.minimum(var_4177.astype('uint16'), relay.reshape(var_4178.astype('uint16'), relay.shape_of(var_4177))) # shape=(5, 5, 9)
output = bop_4179
output2 = bop_4179
func_4182 = relay.Function([var_4177,var_4178,], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
var_4183 = relay.var("var_4183", dtype = "uint16", shape = (5, 5, 9))#candidate|4183|(5, 5, 9)|var|uint16
var_4184 = relay.var("var_4184", dtype = "uint16", shape = (5, 5, 9))#candidate|4184|(5, 5, 9)|var|uint16
output = func_4182(var_4183,var_4184,)
func_4185 = relay.Function([var_4183,var_4184,], output)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4187 = relay.const([[[-6.032993,7.517695,7.647067,-2.557748,5.656077,4.068342,-1.118338,7.414233,7.300365,1.528599,1.890758],[-8.276266,8.209694,-7.620024,-6.071087,-3.620109,-8.537275,-4.703651,9.354205,4.956602,-1.681962,3.283002],[6.088672,8.657425,7.908497,6.910808,1.400764,1.444083,6.585960,6.975188,3.038224,0.141985,-5.463725]],[[-0.986465,-2.696957,-8.803628,-2.509346,4.309260,-5.590316,-8.961350,-4.376564,7.882091,-0.952006,-8.791778],[-2.039064,4.626073,2.432499,-9.704268,-6.608498,-3.274169,-9.658649,0.181133,-0.956737,-3.269405,-3.561962],[-3.811814,-8.572103,-6.190379,-4.453988,6.449876,-3.151272,5.796839,7.163713,9.855227,-7.924089,-0.880673]],[[4.647844,1.057665,-8.080599,-8.868808,-4.575869,1.839345,-0.925829,8.694750,5.381285,-1.732363,1.401479],[8.366553,5.595697,1.940425,-0.614124,-1.887824,3.238399,7.943053,0.426404,-6.942132,-1.648622,3.647098],[1.245012,-8.464300,3.223372,5.702617,-7.093002,5.074248,8.496340,6.967138,-8.598844,9.123543,5.202931]],[[6.136432,6.646136,-1.748073,-0.914826,-0.444117,3.776415,-6.426611,0.288668,0.729901,-3.419003,0.174060],[6.307968,-9.329675,-2.445784,-9.864140,-4.485510,4.964856,7.342767,-3.480673,4.472432,-3.046557,9.096876],[6.783030,-3.474199,-0.293157,9.822521,-2.250733,-4.373884,-4.077946,1.439653,-7.333521,-0.531907,9.198345]],[[5.853066,6.679228,-6.758365,0.224832,-4.928411,9.846499,-7.028915,-2.330712,6.905013,-1.761324,2.040890],[1.981336,8.217632,-6.034070,1.745825,-7.802935,0.748946,8.585252,0.398036,1.639481,2.890612,-4.876599],[-4.721820,0.605592,2.303404,2.525708,-7.601773,3.687306,-8.426687,9.981437,4.876272,9.979304,-8.326298]],[[8.650639,3.026211,5.510432,5.143325,-0.613053,-3.815109,5.296454,-6.837769,-5.643165,1.867630,-6.871862],[-5.466410,5.975733,0.244599,-7.199188,8.421292,1.888472,1.048686,2.903806,-4.234174,-6.213649,6.017385],[4.752228,6.824065,-5.749935,3.410760,-4.086405,8.059280,-0.741019,-3.178296,-2.839102,-3.439481,3.252569]],[[-3.182247,-3.257767,-7.736082,-2.436842,-6.419187,3.255426,6.715553,7.531446,1.715602,-1.873460,5.356268],[3.566271,-3.795191,-8.822701,-8.687065,-8.411643,-3.131957,7.501268,4.552950,9.883536,6.278243,3.582009],[-5.088620,-6.324544,8.235109,-9.884554,0.460586,-8.789162,1.025362,-2.318363,-4.006710,7.589135,1.611126]],[[-0.844671,-8.067980,-2.724455,-0.290876,-0.637082,-9.846600,-4.840292,-1.932423,2.740949,7.485130,4.484469],[-0.935242,-6.493991,-5.826072,1.227315,-2.321207,-0.406440,8.583511,8.865188,8.021510,4.172084,-8.951495],[2.257104,-8.769700,-4.371059,-5.280367,7.715751,0.589720,-2.545836,2.038863,0.658682,8.212134,-1.696851]],[[-2.850358,-0.698990,2.791882,-8.747409,-4.812714,-2.887801,-3.043365,-6.482587,-4.137984,9.002837,6.958304],[1.482989,0.584951,-8.181855,8.973765,-6.827297,-5.290253,5.735188,-4.792048,6.952359,2.635185,7.835736],[-4.861420,-1.149390,7.084394,-3.992395,4.852570,4.670648,-4.268885,5.689380,-8.733571,-3.942202,2.901905]],[[4.095432,8.699863,-7.997525,-3.530334,-8.409231,7.570435,-3.834406,-1.644938,2.667533,-7.032599,-3.606788],[-4.427602,-3.261806,4.802397,-5.996227,-9.093104,-4.487249,-5.984301,-7.918520,1.981694,-9.641819,-8.796741],[4.690581,2.778919,-7.621728,-2.004765,6.077498,1.734450,7.828038,-1.879025,0.989159,9.566790,-9.325023]],[[-4.500846,1.217079,6.804473,-7.242901,-6.030759,-8.055878,-3.517505,4.232137,1.378420,7.757563,0.837790],[-9.533689,-2.801622,-9.260803,1.440770,-5.474707,-9.790141,8.250039,7.861978,1.001299,-4.005780,7.570559],[-3.212977,2.309896,4.069867,-0.224898,0.567988,-1.126910,-0.400680,-7.896200,4.887932,0.835458,-8.671729]]], dtype = "float32")#candidate|4187|(11, 3, 11)|const|float32
uop_4188 = relay.atan(const_4187.astype('float32')) # shape=(11, 3, 11)
output = uop_4188
output2 = uop_4188
func_4190 = relay.Function([], output)
mod['func_4190'] = func_4190
mod = relay.transform.InferType()(mod)
output = func_4190()
func_4191 = relay.Function([], output)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4216 = func_2414_call()
call_4217 = func_2414_call()
var_4221 = relay.var("var_4221", dtype = "float64", shape = (3, 11, 11))#candidate|4221|(3, 11, 11)|var|float64
bop_4222 = relay.greater_equal(call_4216.astype('bool'), relay.reshape(var_4221.astype('bool'), relay.shape_of(call_4216))) # shape=(3, 11, 11)
bop_4225 = relay.greater_equal(call_4217.astype('bool'), relay.reshape(var_4221.astype('bool'), relay.shape_of(call_4217))) # shape=(3, 11, 11)
func_4182_call = mod.get_global_var('func_4182')
func_4185_call = mutated_mod.get_global_var('func_4185')
const_4230 = relay.const([-4,-7,-9,-9,10,-1,-3,7,-8,2,-7,9,-10,10,-6,-9,-5,9,3,-6,-5,6,-1,1,8,-9,6,-10,2,10,-10,8,-7,-1,5,5,-4,10,-4,9,4,-10,-7,-9,-2,-6,-7,-8,-1,7,8,-8,5,-10,-10,-2,8,-7,2,-5,-4,-7,-5,-5,5,4,6,-6,9,1,-6,4,-6,-8,-8,5,3,-2,8,-5,-9,-6,1,7,9,-1,-2,-8,7,-7,10,6,-3,-4,-4,-5,7,2,-5,-10,-7,-1,6,-5,9,8,5,5,-10,10,7,9,-7,2,9,8,2,5,1,3,-4,-1,4,-9,-2,-10,-6,-3,-1,-7,-8,6,-6,-10,-3,-1,3,-7,6,1,7,-9,2,8,-8,4,3,5,-3,8,-7,2,-9,-5,7,4,-9,10,6,5,-4,9,-10,-7,-1,-10,4,-6,-3,9,-1,5,-10,1,5,-10,-8,-6,-7,-3,8,7,-5,6,-8,-9,1,-8,9,7,-9,2,-7,-8,-3,-3,4,4,6,9,-6,2,-2,-8,-10,-6,-1,-6,9,5,5,-3,-9,-10,9,-9,-8,2,-9,-3,-7,-10,1,9,10], dtype = "uint16")#candidate|4230|(225,)|const|uint16
call_4229 = func_4182_call(relay.reshape(const_4230.astype('uint16'), [5, 5, 9]), relay.reshape(const_4230.astype('uint16'), [5, 5, 9]), )
call_4231 = func_4182_call(relay.reshape(const_4230.astype('uint16'), [5, 5, 9]), relay.reshape(const_4230.astype('uint16'), [5, 5, 9]), )
output = relay.Tuple([bop_4222,call_4229,const_4230,])
output2 = relay.Tuple([bop_4225,call_4231,const_4230,])
func_4233 = relay.Function([var_4221,], output)
mod['func_4233'] = func_4233
mod = relay.transform.InferType()(mod)
mutated_mod['func_4233'] = func_4233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4234 = relay.var("var_4234", dtype = "float64", shape = (3, 11, 11))#candidate|4234|(3, 11, 11)|var|float64
func_4233_call = mutated_mod.get_global_var('func_4233')
call_4235 = func_4233_call(var_4234)
output = call_4235
func_4236 = relay.Function([var_4234], output)
mutated_mod['func_4236'] = func_4236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4190_call = mod.get_global_var('func_4190')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_4267 = func_4190_call()
call_4268 = func_4190_call()
output = call_4267
output2 = call_4268
func_4274 = relay.Function([], output)
mod['func_4274'] = func_4274
mod = relay.transform.InferType()(mod)
output = func_4274()
func_4275 = relay.Function([], output)
mutated_mod['func_4275'] = func_4275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mod.get_global_var('func_4082')
func_4084_call = mutated_mod.get_global_var('func_4084')
call_4297 = relay.TupleGetItem(func_4082_call(), 2)
call_4298 = relay.TupleGetItem(func_4084_call(), 2)
output = relay.Tuple([call_4297,])
output2 = relay.Tuple([call_4298,])
func_4303 = relay.Function([], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
output = func_4303()
func_4304 = relay.Function([], output)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_4332 = func_2126_call()
call_4333 = func_2126_call()
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_4335 = relay.TupleGetItem(func_4303_call(), 0)
call_4336 = relay.TupleGetItem(func_4304_call(), 0)
func_2854_call = mod.get_global_var('func_2854')
func_2856_call = mutated_mod.get_global_var('func_2856')
call_4364 = relay.TupleGetItem(func_2854_call(), 1)
call_4365 = relay.TupleGetItem(func_2856_call(), 1)
output = relay.Tuple([call_4332,call_4335,call_4364,])
output2 = relay.Tuple([call_4333,call_4336,call_4365,])
func_4368 = relay.Function([], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
output = func_4368()
func_4369 = relay.Function([], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3561_call = mod.get_global_var('func_3561')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_4390 = relay.TupleGetItem(func_3561_call(), 0)
call_4391 = relay.TupleGetItem(func_3562_call(), 0)
output = call_4390
output2 = call_4391
func_4392 = relay.Function([], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
output = func_4392()
func_4393 = relay.Function([], output)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mod.get_global_var('func_4082')
func_4084_call = mutated_mod.get_global_var('func_4084')
call_4405 = relay.TupleGetItem(func_4082_call(), 0)
call_4406 = relay.TupleGetItem(func_4084_call(), 0)
output = relay.Tuple([call_4405,])
output2 = relay.Tuple([call_4406,])
func_4413 = relay.Function([], output)
mod['func_4413'] = func_4413
mod = relay.transform.InferType()(mod)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4413_call = mutated_mod.get_global_var('func_4413')
call_4414 = func_4413_call()
output = call_4414
func_4415 = relay.Function([], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4429 = relay.const([[[9.040423,-2.612087,-7.071075,2.356268,1.989454,3.141260,4.483102,-2.848405,1.665660,-3.412495,-7.371592,-3.860379,-7.489938,1.402361,-8.734442,8.828148],[-6.898701,-5.061658,7.308026,-3.153209,-7.510957,6.484025,-8.640226,8.152230,-8.239433,3.159665,3.744069,-1.149137,-2.345714,-6.856352,-8.188253,-7.284486],[7.459824,4.753797,-0.980841,2.894211,8.346878,-4.867457,-1.615346,3.741099,-6.526846,-7.886751,5.163307,6.528744,-9.692608,-3.232089,6.006353,-0.147776],[-2.830803,9.937512,8.129237,4.882084,1.474240,-1.676170,2.340415,2.624428,3.366306,6.861923,-4.959378,-4.822752,4.239346,-4.161227,-0.660675,2.731096],[-1.604455,7.108702,-9.573468,7.813334,0.517545,6.155587,7.880053,-0.230880,-1.359274,8.188765,-7.100143,-1.306475,7.064310,5.543920,8.966223,-4.047834],[6.870239,6.085785,-3.875528,-0.651324,8.879691,-0.665017,-0.123561,9.793924,2.608916,4.394774,-8.668233,3.921603,-6.836726,6.057304,9.015469,-0.864577],[-4.573324,-6.262162,-7.081953,-9.367545,1.758911,-3.419993,4.535987,-5.899149,6.847723,-8.572637,0.214303,8.088206,-7.819815,6.821104,-7.983990,2.267776],[-0.673525,4.939120,-6.089278,-1.805832,-1.345623,4.910219,-5.523201,-5.610412,6.791772,3.924301,-6.362417,8.350398,-9.339204,9.629665,-2.880347,2.785326],[-0.126796,1.235167,-2.354420,-2.880233,-0.130016,-7.122698,-9.799988,-6.039587,1.131094,-1.171870,-7.658340,8.142894,8.286393,1.687836,9.032829,-2.700064],[2.992848,-0.956882,8.147179,6.392177,-5.824329,-3.989476,-4.821785,-2.923155,-0.211505,-2.831368,-5.713480,4.295877,-6.400783,6.466351,4.972887,8.267349],[8.499324,-0.242606,5.230950,9.150714,1.600803,-2.671882,-0.087613,-0.206522,9.804228,-2.287985,-8.434210,2.113621,-5.914200,-3.052642,-9.553786,5.507504],[7.013049,-5.397468,8.540144,-8.857489,3.154561,-2.722644,9.271292,6.627513,9.281218,2.768373,6.987122,-0.624832,8.193784,-1.197015,9.648161,-8.930578],[8.041421,9.876261,-3.511619,-8.433916,-1.880121,6.970972,4.870348,-3.083543,-9.315918,-3.290638,4.805023,-6.859090,8.332942,-3.158986,-7.021527,0.639894],[-9.268598,-8.698609,-2.749450,-7.378381,8.831413,-2.767305,-3.413186,-7.833145,-4.959703,1.123985,2.787198,6.685851,-2.277505,1.653486,-2.360919,-1.638289]],[[2.602158,5.455457,2.543318,-3.935454,6.620301,6.937780,-4.261686,3.048872,-3.146365,-7.706978,-2.473052,-5.190942,2.387297,4.639419,-9.879309,-5.468352],[-2.875182,1.796787,-7.804816,-2.591896,8.408472,7.813514,0.759633,-6.329307,9.352595,-9.710044,-9.628943,-7.555833,-7.913083,8.389308,-3.317735,6.340901],[2.486163,-6.946339,-2.191275,-7.184066,7.284984,7.789083,-4.940593,-1.511091,-2.646313,5.234037,-9.446047,4.434483,5.952176,9.592883,-7.029215,-7.720946],[-2.083951,6.855782,7.323452,-3.449771,-9.377553,-2.588010,1.295022,-6.947764,3.539381,1.061995,-8.312471,-5.232858,0.486122,8.994773,-9.902779,-7.235817],[-9.110971,-3.085778,1.618023,-2.860885,-2.631787,-4.246715,-1.159844,-6.883024,-4.341213,2.171429,-0.967666,-2.158047,7.763294,3.872181,6.404579,-7.989255],[-3.333803,9.588131,6.352854,5.471455,-2.575324,-3.782580,-5.517481,-8.570800,-7.069308,5.458034,-2.010362,-7.081044,2.824114,3.777589,7.097860,0.353359],[-9.692851,3.649609,-6.581215,-8.451532,-4.257023,1.373329,0.874183,4.736875,7.177336,-5.028572,-0.481074,-6.804152,-0.392075,-1.908845,0.833497,2.007502],[9.764040,-8.974571,9.577106,-2.167241,5.927442,9.311960,-3.033209,-9.778080,7.383273,7.041284,1.587362,-2.423776,7.715962,-6.504742,-8.125285,2.187093],[-0.762608,9.421198,-3.464991,-3.579508,-9.176911,-3.158117,-1.847054,-0.201619,5.720155,-3.115213,8.007042,-7.725203,7.229373,-7.194857,5.041527,5.775025],[9.990823,3.644229,7.822992,9.049136,2.624847,-7.990910,-5.682124,-1.911385,-4.419454,-5.668317,1.573611,-5.371070,0.165730,-2.486688,-3.665581,3.736796],[-0.219753,3.980486,-0.287372,0.188274,-3.321095,5.414739,1.153771,-8.731176,-1.305175,4.271747,-3.494059,7.778698,-2.374158,-8.065829,6.575523,-8.629396],[-8.743213,5.187830,-8.170121,8.550853,-7.855102,2.619917,-1.172323,6.360050,2.918965,-3.410566,4.567738,6.894360,7.944230,-3.688991,2.550321,-6.316997],[3.756877,-0.704148,7.075500,-7.666464,3.304205,5.881556,-6.055308,-9.222410,9.535832,5.311338,-2.310650,4.918635,-9.248302,9.637657,-5.057150,8.521924],[9.060304,-6.042482,0.713143,7.827995,-8.500116,-0.774495,3.560167,-6.765491,8.220187,1.703861,9.565518,9.245201,9.506604,0.024069,3.936921,9.596211]],[[1.830170,3.598394,-5.334898,1.771272,7.487145,3.040293,-1.584267,9.920910,0.998556,-3.704760,7.418256,-8.057643,-7.324655,5.506819,0.426260,-5.482597],[-8.600128,0.681790,-8.428252,7.198920,5.121546,6.559789,6.858816,1.427341,7.014089,0.503069,-1.649994,5.412418,4.823029,-1.850858,4.473907,9.195240],[-3.981640,5.695813,6.776262,-2.718096,7.131014,6.255064,-4.116400,-9.713468,-3.622205,8.217197,2.623120,4.007302,3.333077,6.720990,-4.810666,-7.554144],[-8.467800,-8.407710,-1.151846,-2.700856,-1.144390,-7.858928,-0.926758,-8.431954,-7.465527,5.515430,9.261407,9.888620,-0.537673,2.065054,9.433805,1.501863],[7.910519,-1.241168,-5.809802,-4.071022,-9.772035,-3.380702,9.688755,9.223950,-1.542342,7.813444,4.158073,-5.398498,-6.891291,-9.864396,8.838552,3.161120],[2.769242,-1.946305,-8.131786,-4.742895,-3.327854,9.257757,-3.335896,9.750801,-8.504365,-0.988950,3.250437,2.174483,-9.053236,-4.745725,-1.375809,7.746077],[5.701921,4.511253,-2.174517,-3.499155,-4.024997,-2.691024,-0.248900,7.254652,-7.482034,-7.306889,-7.140511,9.800453,2.754970,-8.729812,3.257511,-6.398060],[-5.995968,-6.309280,1.060896,7.467949,5.840187,-6.120443,1.369063,-9.338641,6.697099,-2.969810,-6.153863,7.276273,1.167260,2.943953,5.451427,0.884300],[-3.262613,-7.249473,-1.483681,6.228128,0.548970,6.295813,-2.220431,-7.695364,-9.723487,1.970460,0.137044,-3.770003,9.861218,2.327121,8.892402,-8.874293],[8.782373,-8.022470,-9.891138,1.878164,7.204380,-9.811249,-5.021768,-7.155304,4.864179,9.677284,-8.154998,0.693915,-9.503770,-5.735948,9.667214,3.609145],[1.991900,-1.586710,5.360723,7.438104,-9.427246,-0.678344,-8.100456,6.903672,3.005577,-2.894318,2.177504,7.790972,2.052299,7.646803,-5.522483,2.486063],[-6.118513,4.238018,5.144488,4.786349,-4.116047,-4.022458,-0.937566,0.216450,-3.661423,3.380378,4.014316,1.751571,-2.192612,-5.892239,3.659846,-8.840237],[2.739086,-8.333798,-7.040173,5.700929,4.587273,1.316346,9.045156,4.676560,6.476482,1.945015,4.719271,5.895826,-1.892216,-6.388568,6.703323,0.198750],[-3.951042,6.575764,1.424043,-6.917432,-5.239727,-1.965938,-4.859349,6.352029,-1.405363,-3.958415,-8.666684,8.799517,8.379018,-6.736943,-3.860147,-7.701482]],[[5.609312,6.228109,-5.243991,-3.637819,-2.426743,-0.580644,-5.042635,-4.801457,4.204400,8.635034,-2.411134,-9.604020,-3.745787,-7.176775,-2.510801,-6.512190],[-6.199852,7.414976,4.431634,4.731443,-9.078660,-0.662534,7.771380,-3.384464,5.716413,-7.230607,-1.093008,-5.530207,-6.884943,-1.169153,9.579295,-5.317502],[-3.389830,-3.812086,5.437698,0.920099,0.398116,9.920734,-2.304952,9.296369,3.897846,4.489515,-1.120586,-3.943374,-7.217344,-3.866429,9.223482,6.681805],[-8.555339,6.698056,0.830768,9.077731,-9.732373,-3.578896,-4.938264,5.384446,8.546850,-3.075446,-4.413460,-9.837616,6.029560,-7.058035,-2.807860,-6.806099],[7.318266,-6.943535,4.205681,4.771398,-9.722676,-4.945134,-3.934506,-8.568626,7.801338,8.914430,-4.288382,-9.552235,-0.550750,-9.412193,6.588889,1.870707],[3.958676,9.324757,-5.950783,-7.801105,-3.964231,2.599626,-2.121005,7.665068,-8.130565,4.048966,-1.461867,-4.182004,-9.619592,0.265223,-3.843932,-9.773521],[5.266258,-3.461750,2.685921,-4.121645,0.592567,-8.843296,-1.882692,3.360162,-8.702729,9.350058,5.882536,-0.318386,-0.611631,4.071174,-7.230364,-3.817350],[7.719930,8.686031,-6.334630,5.121048,-1.379916,1.753988,6.078324,7.703713,-7.427968,-6.627371,1.262893,2.260208,9.102856,-5.078431,7.312230,2.202837],[9.772005,8.456509,-0.875482,7.644355,-6.643446,4.389567,-4.394714,8.704308,8.429138,-8.787183,-6.708413,1.993898,-3.375351,-7.474265,-5.106539,-7.336027],[-9.006956,3.811600,-8.168972,6.484390,-0.561781,-1.501044,-2.461240,0.250728,-3.706878,-7.801348,8.669233,-9.897506,6.448600,0.965762,-5.433707,2.402712],[4.984638,3.416612,5.384678,-0.978425,-2.978834,-0.277506,3.399780,-9.921193,5.206915,-7.192336,-3.164215,-6.510514,5.320832,-0.228557,-5.196834,8.790002],[-7.630913,1.422846,1.343182,8.076136,5.936091,-5.247899,8.805141,-5.178698,3.203160,-6.168666,6.403236,2.513224,-9.926085,-1.547342,5.423542,9.458346],[-8.917735,-0.976426,-9.220134,6.128246,0.523311,-1.785534,8.592498,-9.212725,-2.285719,-4.119407,8.868107,-5.492726,3.975304,-4.821374,-4.093038,3.637649],[2.191053,2.910474,1.951797,4.043693,-7.455840,-1.796960,-6.337489,5.070343,1.584564,-6.111014,5.498241,-9.668750,5.472671,-9.157675,-7.576527,-7.574671]],[[6.271376,-4.104788,1.115258,5.288127,0.380955,8.886812,-1.338082,-9.427945,-8.342705,5.167352,-7.025057,9.840042,-6.932450,9.087500,2.688870,-1.154512],[7.550327,8.981842,-1.521145,8.122020,-1.592730,4.036676,5.468530,-2.794510,-0.655475,1.445156,-5.626543,-7.244514,-0.360598,3.086558,-5.558334,-6.186672],[-8.490338,-4.101490,5.850323,8.925202,-2.498675,-3.430051,-2.345826,5.718023,-4.441277,6.017806,7.668511,-3.364737,-9.129290,8.685523,7.278455,-7.762754],[-3.254730,7.174032,-9.184208,9.712413,3.036557,-8.805444,2.423091,9.922873,8.266486,-8.533772,-2.935875,-0.626572,-2.810010,9.330171,-3.740050,-6.040083],[-8.566011,-0.508797,-7.125107,9.374825,8.625728,1.381924,-9.009012,2.260144,-5.273966,-3.924499,-9.881749,5.704344,4.510360,-5.356598,-4.634162,-1.988994],[-1.432557,-3.376934,-5.984450,4.867893,1.470205,-2.948104,5.073773,0.021776,5.486772,-0.581808,3.915093,6.534384,1.705787,-5.947650,-1.509270,-3.548467],[5.397724,3.241202,4.449555,3.282223,6.157269,-0.371286,2.658311,-4.794167,9.333979,-5.135590,-3.572134,5.772282,-4.089447,-0.794621,-0.689515,2.880004],[4.956620,-8.079277,8.610829,9.578449,3.734127,6.829741,-9.567010,-5.042015,7.717672,-2.702796,-3.211558,1.786145,8.856300,7.315830,-8.538045,9.931439],[1.059921,-5.480800,1.566989,5.246873,9.826329,-3.233108,1.558410,-5.488768,3.538931,-5.815234,-1.563540,-2.359034,2.658784,-7.145949,7.307986,3.908969],[4.916637,5.323256,-2.953706,2.917582,-9.447690,9.794286,-8.608900,-6.637774,-6.178171,7.786950,-2.435773,-2.524373,0.697411,6.260253,-5.085668,3.739541],[3.335438,-2.274247,-7.705643,5.303361,3.074041,-7.291302,-7.859795,-2.522984,2.335362,-4.462711,1.881158,-7.153048,8.855973,0.855006,-0.785521,2.850082],[-1.782023,3.544004,8.931593,7.611774,2.754352,3.189111,-0.922688,-8.149027,3.929186,5.125513,6.532867,-8.267479,9.240769,-3.971034,-5.230233,1.864919],[-2.541328,3.859846,-1.461098,-4.493809,-4.961660,6.499444,0.682278,7.677803,-6.582140,-5.684406,-1.607056,-8.209743,-9.235919,6.108311,-1.369830,5.967407],[-0.860045,7.673600,1.707816,-7.016499,7.419047,-7.154244,-9.841949,0.114450,-7.659198,-6.368495,-9.363918,1.969393,-4.826467,-3.113257,7.068569,2.126578]],[[-9.738830,-4.598039,-0.221467,-1.084476,2.629498,9.189172,-8.614916,-0.540013,-4.444668,1.542638,-2.379927,0.974330,1.751199,4.980100,-3.615545,-6.639363],[8.901056,-6.051240,-9.704566,4.242576,-2.161401,3.174838,-4.285428,1.198175,-1.164317,1.260305,7.426982,5.493209,-3.441820,-8.421992,6.772633,-4.885561],[9.858214,8.300526,5.793609,3.834746,9.691946,-0.549640,0.848611,-6.334710,-4.124757,-1.737318,-6.997101,-3.459391,-2.694255,9.432719,-2.893343,0.663131],[2.014887,7.285322,9.644320,-1.729369,8.861443,-4.429100,-2.659460,-0.958927,9.261789,8.706169,9.902466,-8.852726,-4.228412,7.993748,7.237398,-9.401105],[1.452670,3.877239,6.480495,9.933752,-4.338079,3.274980,-3.794592,7.383773,-6.921346,-6.654618,5.299452,7.935144,-6.778428,-9.540549,9.581067,-3.491829],[-0.332910,-0.702976,5.142542,-4.714800,6.677768,3.440057,4.909052,0.701072,2.090853,6.047205,9.394672,-2.823586,-1.952369,2.041762,5.426811,-9.296576],[-2.874372,3.477529,1.484401,1.079982,2.882631,-9.044235,-4.730575,-4.331670,7.169293,-9.210154,6.959103,2.417557,8.306057,6.830158,-1.296942,-9.678443],[-2.561937,1.711082,0.496657,5.602041,3.067861,6.095385,9.601446,4.442563,-6.738496,9.935043,-8.649666,9.429845,-7.884490,-9.785092,-0.753823,8.310260],[3.830651,-8.750850,7.199368,6.762233,-4.588378,-7.325002,7.016956,-9.126159,0.633036,8.744435,-6.520938,8.873162,2.924038,-0.800591,-8.371660,4.491969],[-2.563508,-6.302394,3.815784,-5.341905,5.714717,2.301546,-4.557491,-1.906553,-6.607998,8.286806,-2.725726,3.016072,-1.115439,2.555903,1.039946,-9.167871],[9.883064,8.340033,3.587481,-5.659909,2.804189,2.525764,9.911223,4.486250,2.594083,4.518260,-6.739337,1.221920,-9.989799,7.296967,6.282599,4.585591],[3.474845,6.429176,-9.539726,7.751645,-5.081920,4.419526,-1.400518,1.799451,7.857382,9.165688,4.386751,-4.578991,0.040240,0.558822,-4.000042,7.740836],[6.887559,-9.241183,-2.947777,1.073973,-0.130511,6.055034,-3.648381,-1.101393,1.058173,8.087740,-6.486500,-4.237611,5.667241,8.949655,-4.622438,0.172783],[5.511232,1.656737,7.271108,-0.647533,2.818460,-7.883170,-8.770625,4.214142,-6.352740,-6.726404,-4.580025,6.618139,-7.620891,4.847509,1.641469,7.907234]],[[-8.447583,1.472247,1.233692,7.117059,2.539769,-0.397243,-4.746419,2.884263,-3.570156,-7.203212,-3.395179,8.133898,-8.925525,6.212765,5.679804,-3.085655],[5.370788,-3.269961,-3.843402,5.722931,9.395720,1.399249,2.454220,8.994751,3.537249,-8.918508,3.708334,-6.975927,4.799695,1.610314,-4.286433,-7.604819],[0.180439,1.950314,6.413997,4.082708,-8.627208,-9.438433,6.521412,-1.430027,0.128099,-0.141724,-3.338028,-6.486835,-6.268892,-6.118103,-6.722497,-5.084602],[4.093735,4.363885,-8.506866,-4.159408,7.614017,-2.769813,-4.409767,5.537072,-6.791577,-1.941083,3.635500,-6.854524,-1.919089,-9.953516,3.982123,7.863447],[-5.300788,1.598667,6.122030,-6.233060,5.280879,-7.178662,3.258355,9.596149,2.794735,-7.381803,5.125442,4.153607,8.380498,-6.820749,-4.253089,-1.777148],[-4.728702,-4.368103,3.229084,-5.471417,9.039446,-6.437000,8.086907,-3.847734,4.835267,2.365078,6.619387,-8.661026,-3.091589,-9.831415,-3.200076,-5.184311],[-2.085659,9.761183,1.674639,-8.092336,-0.971272,2.341628,6.647740,-0.973188,-4.389664,6.355015,-2.621880,-6.551052,-0.619634,-8.793971,4.167769,7.048812],[9.084157,6.320448,-5.016829,4.834542,-5.896521,-7.298730,8.249740,-2.277863,-8.571503,1.842057,-5.069527,-6.380835,-6.195491,0.281179,1.135312,-1.490620],[3.719210,0.808463,9.989202,-8.564306,4.010078,4.336838,-4.978637,-5.806271,1.688311,8.214852,9.787974,-8.550165,-7.885032,-3.871200,-3.258005,-8.307173],[-4.723108,-7.445232,2.014443,-9.765185,0.333331,2.290101,1.963079,4.606720,4.202122,-8.322486,-6.480956,9.959744,6.684923,-3.527006,-9.444638,9.166193],[-9.124199,-0.629616,7.359171,-0.535771,3.572361,-8.400221,5.279730,6.160134,-0.527416,9.635245,0.161728,-5.860476,-8.565975,-2.734970,8.936213,-5.796038],[5.795674,0.519704,8.129162,-8.673249,1.318282,7.590065,-7.708527,-4.700725,8.569135,1.640762,-5.352540,9.796886,-2.619983,1.751828,9.474514,5.601121],[-4.253877,0.952525,-6.725013,-8.726727,-8.948397,-4.768396,5.979637,-5.954228,-4.237693,1.268306,0.674675,-4.116760,-6.121120,0.013684,7.849085,6.832917],[-9.905710,2.410473,-8.971135,-6.053388,3.738962,5.258210,7.420766,8.435786,2.818274,-1.871866,9.148823,-4.376197,-0.791074,-0.753339,-8.465380,-8.200685]]], dtype = "float32")#candidate|4429|(7, 14, 16)|const|float32
uop_4430 = relay.acosh(const_4429.astype('float32')) # shape=(7, 14, 16)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4432 = func_4175_call()
call_4433 = func_4175_call()
output = relay.Tuple([uop_4430,call_4432,])
output2 = relay.Tuple([uop_4430,call_4433,])
func_4434 = relay.Function([], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
output = func_4434()
func_4435 = relay.Function([], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4034_call = mod.get_global_var('func_4034')
func_4035_call = mutated_mod.get_global_var('func_4035')
call_4501 = func_4034_call()
call_4502 = func_4034_call()
output = relay.Tuple([call_4501,])
output2 = relay.Tuple([call_4502,])
func_4530 = relay.Function([], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
output = func_4530()
func_4531 = relay.Function([], output)
mutated_mod['func_4531'] = func_4531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4530_call = mod.get_global_var('func_4530')
func_4531_call = mutated_mod.get_global_var('func_4531')
call_4532 = relay.TupleGetItem(func_4530_call(), 0)
call_4533 = relay.TupleGetItem(func_4531_call(), 0)
output = call_4532
output2 = call_4533
func_4544 = relay.Function([], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4544_call = mutated_mod.get_global_var('func_4544')
call_4545 = func_4544_call()
output = call_4545
func_4546 = relay.Function([], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
call_4582 = func_2764_call()
call_4583 = func_2764_call()
const_4601 = relay.constdtype = "float32")#candidate|4601|(12, 16, 15)|const|float32
bop_4602 = relay.floor_divide(call_4582.astype('float64'), relay.reshape(const_4601.astype('float64'), relay.shape_of(call_4582))) # shape=(12, 16, 15)
bop_4605 = relay.floor_divide(call_4583.astype('float64'), relay.reshape(const_4601.astype('float64'), relay.shape_of(call_4583))) # shape=(12, 16, 15)
uop_4611 = relay.log(bop_4602.astype('float32')) # shape=(12, 16, 15)
uop_4613 = relay.log(bop_4605.astype('float32')) # shape=(12, 16, 15)
output = uop_4611
output2 = uop_4613
func_4616 = relay.Function([], output)
mod['func_4616'] = func_4616
mod = relay.transform.InferType()(mod)
output = func_4616()
func_4617 = relay.Function([], output)
mutated_mod['func_4617'] = func_4617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4635 = func_3231_call()
call_4636 = func_3231_call()
output = relay.Tuple([call_4635,])
output2 = relay.Tuple([call_4636,])
func_4638 = relay.Function([], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
mutated_mod['func_4638'] = func_4638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mutated_mod.get_global_var('func_4638')
call_4639 = func_4638_call()
output = call_4639
func_4640 = relay.Function([], output)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3501_call = mod.get_global_var('func_3501')
func_3503_call = mutated_mod.get_global_var('func_3503')
call_4721 = func_3501_call()
call_4722 = func_3501_call()
output = relay.Tuple([call_4721,])
output2 = relay.Tuple([call_4722,])
func_4727 = relay.Function([], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
output = func_4727()
func_4728 = relay.Function([], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4731 = relay.var("var_4731", dtype = "uint16", shape = (8, 3, 7))#candidate|4731|(8, 3, 7)|var|uint16
var_4732 = relay.var("var_4732", dtype = "uint16", shape = (8, 3, 7))#candidate|4732|(8, 3, 7)|var|uint16
bop_4733 = relay.maximum(var_4731.astype('uint16'), relay.reshape(var_4732.astype('uint16'), relay.shape_of(var_4731))) # shape=(8, 3, 7)
output = bop_4733
output2 = bop_4733
func_4736 = relay.Function([var_4731,var_4732,], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mutated_mod.get_global_var('func_4736')
var_4738 = relay.var("var_4738", dtype = "uint16", shape = (8, 3, 7))#candidate|4738|(8, 3, 7)|var|uint16
var_4739 = relay.var("var_4739", dtype = "uint16", shape = (8, 3, 7))#candidate|4739|(8, 3, 7)|var|uint16
call_4737 = func_4736_call(var_4738,var_4739,)
output = call_4737
func_4740 = relay.Function([var_4738,var_4739,], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_4831 = relay.TupleGetItem(func_2091_call(), 0)
call_4832 = relay.TupleGetItem(func_2093_call(), 0)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4837 = func_3231_call()
call_4838 = func_3231_call()
func_2854_call = mod.get_global_var('func_2854')
func_2856_call = mutated_mod.get_global_var('func_2856')
call_4851 = relay.TupleGetItem(func_2854_call(), 1)
call_4852 = relay.TupleGetItem(func_2856_call(), 1)
bop_4869 = relay.divide(call_4831.astype('float32'), relay.reshape(call_4837.astype('float32'), relay.shape_of(call_4831))) # shape=(3, 11, 11)
bop_4872 = relay.divide(call_4832.astype('float32'), relay.reshape(call_4838.astype('float32'), relay.shape_of(call_4832))) # shape=(3, 11, 11)
bop_4877 = relay.bitwise_or(call_4831.astype('int8'), relay.reshape(bop_4869.astype('int8'), relay.shape_of(call_4831))) # shape=(3, 11, 11)
bop_4880 = relay.bitwise_or(call_4832.astype('int8'), relay.reshape(bop_4872.astype('int8'), relay.shape_of(call_4832))) # shape=(3, 11, 11)
output = relay.Tuple([call_4851,bop_4877,])
output2 = relay.Tuple([call_4852,bop_4880,])
func_4881 = relay.Function([], output)
mod['func_4881'] = func_4881
mod = relay.transform.InferType()(mod)
output = func_4881()
func_4882 = relay.Function([], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_4886 = relay.TupleGetItem(func_4368_call(), 1)
call_4887 = relay.TupleGetItem(func_4369_call(), 1)
output = relay.Tuple([call_4886,])
output2 = relay.Tuple([call_4887,])
func_4902 = relay.Function([], output)
mod['func_4902'] = func_4902
mod = relay.transform.InferType()(mod)
output = func_4902()
func_4903 = relay.Function([], output)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4881_call = mod.get_global_var('func_4881')
func_4882_call = mutated_mod.get_global_var('func_4882')
call_4922 = relay.TupleGetItem(func_4881_call(), 1)
call_4923 = relay.TupleGetItem(func_4882_call(), 1)
output = relay.Tuple([call_4922,])
output2 = relay.Tuple([call_4923,])
func_4937 = relay.Function([], output)
mod['func_4937'] = func_4937
mod = relay.transform.InferType()(mod)
output = func_4937()
func_4938 = relay.Function([], output)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4902_call = mod.get_global_var('func_4902')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_4969 = relay.TupleGetItem(func_4902_call(), 0)
call_4970 = relay.TupleGetItem(func_4903_call(), 0)
output = relay.Tuple([call_4969,])
output2 = relay.Tuple([call_4970,])
func_5014 = relay.Function([], output)
mod['func_5014'] = func_5014
mod = relay.transform.InferType()(mod)
output = func_5014()
func_5015 = relay.Function([], output)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4902_call = mod.get_global_var('func_4902')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_5016 = relay.TupleGetItem(func_4902_call(), 0)
call_5017 = relay.TupleGetItem(func_4903_call(), 0)
output = relay.Tuple([call_5016,])
output2 = relay.Tuple([call_5017,])
func_5036 = relay.Function([], output)
mod['func_5036'] = func_5036
mod = relay.transform.InferType()(mod)
mutated_mod['func_5036'] = func_5036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5036_call = mutated_mod.get_global_var('func_5036')
call_5037 = func_5036_call()
output = call_5037
func_5038 = relay.Function([], output)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mod.get_global_var('func_4274')
func_4275_call = mutated_mod.get_global_var('func_4275')
call_5056 = func_4274_call()
call_5057 = func_4274_call()
uop_5070 = relay.log(call_5056.astype('float32')) # shape=(11, 3, 11)
uop_5072 = relay.log(call_5057.astype('float32')) # shape=(11, 3, 11)
func_4392_call = mod.get_global_var('func_4392')
func_4393_call = mutated_mod.get_global_var('func_4393')
call_5074 = func_4392_call()
call_5075 = func_4392_call()
uop_5078 = relay.erf(uop_5070.astype('float64')) # shape=(11, 3, 11)
uop_5080 = relay.erf(uop_5072.astype('float64')) # shape=(11, 3, 11)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_5086 = relay.TupleGetItem(func_4368_call(), 1)
call_5087 = relay.TupleGetItem(func_4369_call(), 1)
bop_5088 = relay.bitwise_and(uop_5078.astype('int16'), relay.reshape(uop_5070.astype('int16'), relay.shape_of(uop_5078))) # shape=(11, 3, 11)
bop_5091 = relay.bitwise_and(uop_5080.astype('int16'), relay.reshape(uop_5072.astype('int16'), relay.shape_of(uop_5080))) # shape=(11, 3, 11)
func_4274_call = mod.get_global_var('func_4274')
func_4275_call = mutated_mod.get_global_var('func_4275')
call_5093 = func_4274_call()
call_5094 = func_4274_call()
output = relay.Tuple([call_5074,call_5086,bop_5088,call_5093,])
output2 = relay.Tuple([call_5075,call_5087,bop_5091,call_5094,])
func_5102 = relay.Function([], output)
mod['func_5102'] = func_5102
mod = relay.transform.InferType()(mod)
output = func_5102()
func_5103 = relay.Function([], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_5119 = relay.TupleGetItem(func_2306_call(), 0)
call_5120 = relay.TupleGetItem(func_2308_call(), 0)
output = call_5119
output2 = call_5120
func_5130 = relay.Function([], output)
mod['func_5130'] = func_5130
mod = relay.transform.InferType()(mod)
mutated_mod['func_5130'] = func_5130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5130_call = mutated_mod.get_global_var('func_5130')
call_5131 = func_5130_call()
output = call_5131
func_5132 = relay.Function([], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_5158 = func_2414_call()
call_5159 = func_2414_call()
func_2931_call = mod.get_global_var('func_2931')
func_2934_call = mutated_mod.get_global_var('func_2934')
call_5160 = relay.TupleGetItem(func_2931_call(relay.reshape(call_5158.astype('float64'), [3, 11, 11])), 0)
call_5161 = relay.TupleGetItem(func_2934_call(relay.reshape(call_5158.astype('float64'), [3, 11, 11])), 0)
uop_5164 = relay.acos(call_5158.astype('float32')) # shape=(3, 11, 11)
uop_5166 = relay.acos(call_5159.astype('float32')) # shape=(3, 11, 11)
uop_5170 = relay.sqrt(uop_5164.astype('float64')) # shape=(3, 11, 11)
uop_5172 = relay.sqrt(uop_5166.astype('float64')) # shape=(3, 11, 11)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
call_5173 = func_2764_call()
call_5174 = func_2764_call()
func_1492_call = mod.get_global_var('func_1492')
func_1497_call = mutated_mod.get_global_var('func_1497')
var_5181 = relay.var("var_5181", dtype = "float32", shape = (8, 60))#candidate|5181|(8, 60)|var|float32
var_5182 = relay.var("var_5182", dtype = "float64", shape = (15, 117))#candidate|5182|(15, 117)|var|float64
call_5180 = relay.TupleGetItem(func_1492_call(relay.reshape(var_5181.astype('float32'), [16, 15, 2]), relay.reshape(var_5182.astype('float64'), [1755,]), relay.reshape(var_5181.astype('bool'), [16, 15, 2]), ), 5)
call_5183 = relay.TupleGetItem(func_1497_call(relay.reshape(var_5181.astype('float32'), [16, 15, 2]), relay.reshape(var_5182.astype('float64'), [1755,]), relay.reshape(var_5181.astype('bool'), [16, 15, 2]), ), 5)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_5188 = func_2758_call()
call_5189 = func_2758_call()
var_5191 = relay.var("var_5191", dtype = "float64", shape = (15, 117))#candidate|5191|(15, 117)|var|float64
bop_5192 = relay.left_shift(var_5182.astype('int64'), relay.reshape(var_5191.astype('int64'), relay.shape_of(var_5182))) # shape=(15, 117)
bop_5201 = relay.multiply(uop_5164.astype('uint8'), relay.reshape(call_5158.astype('uint8'), relay.shape_of(uop_5164))) # shape=(3, 11, 11)
bop_5204 = relay.multiply(uop_5166.astype('uint8'), relay.reshape(call_5159.astype('uint8'), relay.shape_of(uop_5166))) # shape=(3, 11, 11)
uop_5206 = relay.asin(call_5188.astype('float64')) # shape=(1, 165)
uop_5208 = relay.asin(call_5189.astype('float64')) # shape=(1, 165)
uop_5213 = relay.atanh(uop_5206.astype('float64')) # shape=(1, 165)
uop_5215 = relay.atanh(uop_5208.astype('float64')) # shape=(1, 165)
output = relay.Tuple([call_5160,uop_5170,call_5173,call_5180,var_5181,bop_5192,bop_5201,uop_5213,])
output2 = relay.Tuple([call_5161,uop_5172,call_5174,call_5183,var_5181,bop_5192,bop_5204,uop_5215,])
func_5216 = relay.Function([var_5181,var_5182,var_5191,], output)
mod['func_5216'] = func_5216
mod = relay.transform.InferType()(mod)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5216_call = mutated_mod.get_global_var('func_5216')
var_5218 = relay.var("var_5218", dtype = "float32", shape = (8, 60))#candidate|5218|(8, 60)|var|float32
var_5219 = relay.var("var_5219", dtype = "float64", shape = (15, 117))#candidate|5219|(15, 117)|var|float64
var_5220 = relay.var("var_5220", dtype = "float64", shape = (15, 117))#candidate|5220|(15, 117)|var|float64
call_5217 = func_5216_call(var_5218,var_5219,var_5220,)
output = call_5217
func_5221 = relay.Function([var_5218,var_5219,var_5220,], output)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mod.get_global_var('func_4638')
func_4640_call = mutated_mod.get_global_var('func_4640')
call_5297 = relay.TupleGetItem(func_4638_call(), 0)
call_5298 = relay.TupleGetItem(func_4640_call(), 0)
uop_5299 = relay.sinh(call_5297.astype('float64')) # shape=(3, 11, 11)
uop_5301 = relay.sinh(call_5298.astype('float64')) # shape=(3, 11, 11)
uop_5316 = relay.log(call_5297.astype('float32')) # shape=(3, 11, 11)
uop_5318 = relay.log(call_5298.astype('float32')) # shape=(3, 11, 11)
func_4937_call = mod.get_global_var('func_4937')
func_4938_call = mutated_mod.get_global_var('func_4938')
call_5330 = relay.TupleGetItem(func_4937_call(), 0)
call_5331 = relay.TupleGetItem(func_4938_call(), 0)
output = relay.Tuple([uop_5299,uop_5316,call_5330,])
output2 = relay.Tuple([uop_5301,uop_5318,call_5331,])
func_5333 = relay.Function([], output)
mod['func_5333'] = func_5333
mod = relay.transform.InferType()(mod)
output = func_5333()
func_5334 = relay.Function([], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_5388 = relay.TupleGetItem(func_4303_call(), 0)
call_5389 = relay.TupleGetItem(func_4304_call(), 0)
output = relay.Tuple([call_5388,])
output2 = relay.Tuple([call_5389,])
func_5400 = relay.Function([], output)
mod['func_5400'] = func_5400
mod = relay.transform.InferType()(mod)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mutated_mod.get_global_var('func_5400')
call_5401 = func_5400_call()
output = call_5401
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2854_call = mod.get_global_var('func_2854')
func_2856_call = mutated_mod.get_global_var('func_2856')
call_5415 = relay.TupleGetItem(func_2854_call(), 1)
call_5416 = relay.TupleGetItem(func_2856_call(), 1)
var_5417 = relay.var("var_5417", dtype = "float64", shape = (3, 11, 11))#candidate|5417|(3, 11, 11)|var|float64
bop_5418 = relay.right_shift(call_5415.astype('int16'), relay.reshape(var_5417.astype('int16'), relay.shape_of(call_5415))) # shape=(3, 11, 11)
bop_5421 = relay.right_shift(call_5416.astype('int16'), relay.reshape(var_5417.astype('int16'), relay.shape_of(call_5416))) # shape=(3, 11, 11)
output = relay.Tuple([bop_5418,])
output2 = relay.Tuple([bop_5421,])
func_5422 = relay.Function([var_5417,], output)
mod['func_5422'] = func_5422
mod = relay.transform.InferType()(mod)
var_5423 = relay.var("var_5423", dtype = "float64", shape = (3, 11, 11))#candidate|5423|(3, 11, 11)|var|float64
output = func_5422(var_5423)
func_5424 = relay.Function([var_5423], output)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mod.get_global_var('func_4638')
func_4640_call = mutated_mod.get_global_var('func_4640')
call_5429 = relay.TupleGetItem(func_4638_call(), 0)
call_5430 = relay.TupleGetItem(func_4640_call(), 0)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_5464 = relay.TupleGetItem(func_4303_call(), 0)
call_5465 = relay.TupleGetItem(func_4304_call(), 0)
output = relay.Tuple([call_5429,call_5464,])
output2 = relay.Tuple([call_5430,call_5465,])
func_5476 = relay.Function([], output)
mod['func_5476'] = func_5476
mod = relay.transform.InferType()(mod)
output = func_5476()
func_5477 = relay.Function([], output)
mutated_mod['func_5477'] = func_5477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_5478 = func_2393_call()
call_5479 = func_2393_call()
output = call_5478
output2 = call_5479
func_5487 = relay.Function([], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
output = func_5487()
func_5488 = relay.Function([], output)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2021_call = mod.get_global_var('func_2021')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_5516 = relay.TupleGetItem(func_2021_call(), 0)
call_5517 = relay.TupleGetItem(func_2023_call(), 0)
output = relay.Tuple([call_5516,])
output2 = relay.Tuple([call_5517,])
func_5525 = relay.Function([], output)
mod['func_5525'] = func_5525
mod = relay.transform.InferType()(mod)
output = func_5525()
func_5526 = relay.Function([], output)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5592 = func_4175_call()
call_5593 = func_4175_call()
func_4937_call = mod.get_global_var('func_4937')
func_4938_call = mutated_mod.get_global_var('func_4938')
call_5620 = relay.TupleGetItem(func_4937_call(), 0)
call_5621 = relay.TupleGetItem(func_4938_call(), 0)
output = relay.Tuple([call_5592,call_5620,])
output2 = relay.Tuple([call_5593,call_5621,])
func_5625 = relay.Function([], output)
mod['func_5625'] = func_5625
mod = relay.transform.InferType()(mod)
output = func_5625()
func_5626 = relay.Function([], output)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_5662 = relay.TupleGetItem(func_5400_call(), 0)
call_5663 = relay.TupleGetItem(func_5402_call(), 0)
output = call_5662
output2 = call_5663
func_5680 = relay.Function([], output)
mod['func_5680'] = func_5680
mod = relay.transform.InferType()(mod)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5680_call = mutated_mod.get_global_var('func_5680')
call_5681 = func_5680_call()
output = call_5681
func_5682 = relay.Function([], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5713 = func_4175_call()
call_5714 = func_4175_call()
func_5525_call = mod.get_global_var('func_5525')
func_5526_call = mutated_mod.get_global_var('func_5526')
call_5715 = relay.TupleGetItem(func_5525_call(), 0)
call_5716 = relay.TupleGetItem(func_5526_call(), 0)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5718 = relay.TupleGetItem(func_4727_call(), 0)
call_5719 = relay.TupleGetItem(func_4728_call(), 0)
var_5740 = relay.var("var_5740", dtype = "float64", shape = (7, 165))#candidate|5740|(7, 165)|var|float64
bop_5741 = relay.left_shift(call_5713.astype('uint32'), var_5740.astype('uint32')) # shape=(7, 165)
bop_5744 = relay.left_shift(call_5714.astype('uint32'), var_5740.astype('uint32')) # shape=(7, 165)
func_3766_call = mod.get_global_var('func_3766')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_5745 = relay.TupleGetItem(func_3766_call(relay.reshape(call_5713.astype('float32'), [33, 5])), 0)
call_5746 = relay.TupleGetItem(func_3769_call(relay.reshape(call_5713.astype('float32'), [33, 5])), 0)
output = relay.Tuple([call_5715,call_5718,bop_5741,call_5745,])
output2 = relay.Tuple([call_5716,call_5719,bop_5744,call_5746,])
func_5754 = relay.Function([var_5740,], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
var_5755 = relay.var("var_5755", dtype = "float64", shape = (7, 165))#candidate|5755|(7, 165)|var|float64
output = func_5754(var_5755)
func_5756 = relay.Function([var_5755], output)
mutated_mod['func_5756'] = func_5756
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5796 = relay.const([[[8.005154,4.187537,-8.017036,4.993552,7.910338,-6.466427,2.486631,5.132591,-0.867244,5.387883,-0.559388,1.817973,-1.086435],[-1.846184,9.653219,9.762575,6.339181,1.593039,-6.559172,3.568254,2.066518,-9.109789,-9.314173,-5.298506,0.207924,5.318439],[7.580269,-5.623004,-4.122165,7.611394,-5.594614,-3.045647,-7.771786,6.208549,-0.344228,-7.845590,-9.707278,-6.573192,-2.494284],[-2.170358,5.942811,-2.001515,-0.528270,-4.992468,1.564593,-6.811188,8.151618,-0.942191,-7.509008,-5.136640,-1.314660,4.835670],[8.098118,9.904398,-4.208713,-8.279236,9.108341,-7.941831,6.908828,-8.807493,-1.686186,-1.437105,8.867448,9.063556,6.100422],[6.725479,8.386003,-9.894324,-2.124749,-3.864117,9.144347,-2.447830,9.759830,-1.644128,-2.090679,-9.589405,0.455664,-8.888393]],[[8.879869,5.200826,9.459193,-5.510866,9.129663,-0.339902,1.956647,-2.209711,0.398734,4.536046,4.306816,5.245568,5.292201],[-2.910764,-7.717897,3.166242,3.277085,-8.900100,1.165126,3.451570,-8.958384,9.768255,-1.935230,-4.702730,-6.389492,0.155221],[-2.718486,0.792421,-5.315122,-2.512364,-4.726883,-9.891411,-6.005439,9.322343,9.346659,-9.192227,-0.919870,7.095592,0.462060],[-1.154639,-4.464929,9.370188,-9.530617,-4.715670,5.821592,1.674290,-5.395070,5.997176,7.740264,7.036776,6.235078,-0.354173],[5.239762,-3.494381,0.715470,-8.732938,-8.927408,-7.296669,7.792699,8.228694,-0.567147,-9.383906,-5.169070,4.474011,-8.628516],[5.701704,8.408297,4.268136,6.281587,7.957071,-5.905123,-2.000511,-6.551741,6.479973,2.812373,-4.824884,-8.295913,8.855306]],[[-7.743823,-7.860994,1.905432,-2.311288,3.090534,1.309620,1.506971,8.687758,-3.631209,9.327875,4.366947,-1.626216,8.209776],[-0.967102,-2.881101,2.359631,-5.062079,5.485932,2.107010,-2.843143,-7.914652,0.881959,6.570523,6.399705,5.137329,-1.038406],[-6.730201,9.548526,4.443218,6.262194,1.399386,-5.098965,-3.767757,2.104630,5.285721,-8.489297,2.630253,4.820785,-6.993312],[0.030748,3.814044,-1.631059,-1.549408,-5.697901,3.478067,1.032177,-4.737986,7.302004,-0.363561,-9.995112,-8.417674,0.095910],[-6.718136,-5.575540,6.191900,-8.316341,6.754052,-6.502273,5.420009,4.750562,-7.001145,2.029634,-6.865321,9.018019,-7.874914],[-5.078056,-7.843993,-3.193706,0.612367,-4.207939,-6.081029,1.337160,2.997319,-8.511214,-9.437651,-6.376111,-3.506144,9.853373]],[[-5.770210,5.690743,-4.573169,9.093888,0.376327,-8.719237,6.778547,-7.721523,8.521439,0.907987,9.735868,4.307251,-8.742430],[8.924101,-1.330859,1.440672,1.380376,5.579223,6.736758,4.532139,-1.839135,2.293000,-3.618720,-3.278135,3.321295,-5.440457],[2.445031,6.476998,0.621187,-5.671199,8.598838,-9.258864,5.948902,5.828171,3.453679,2.332903,-8.515593,0.680381,-0.288121],[-9.448143,7.742815,3.311320,2.007082,-1.839828,7.312319,-4.864936,7.199596,3.625969,-0.622013,5.663114,3.574808,8.250573],[8.832738,-2.512280,-4.028350,9.892647,-4.904628,-6.253121,0.703944,-0.562318,-1.163553,-9.952699,-3.443851,-0.169303,-6.112996],[-2.483366,-7.683131,2.850960,-7.987244,-6.339366,-9.926149,-8.565678,-8.662173,-5.431610,-4.128991,-1.529989,9.283800,-2.784333]],[[-9.922707,-8.870645,-5.562870,9.548542,0.082732,-6.070865,-6.255100,-6.716480,-4.106673,4.326492,-5.266743,0.622516,5.395647],[0.827206,-4.661952,-1.910364,-5.785772,4.492773,7.061164,5.679052,6.301819,-4.267595,-7.759074,-5.976850,2.612889,1.006883],[-1.744178,-0.530040,-2.367412,-8.282217,9.194241,-8.969024,-7.497477,-8.104747,-6.469848,-0.682002,3.174594,1.477796,2.124191],[5.276924,-1.754471,-4.769943,6.353418,-3.512780,-2.876308,-2.615597,5.729952,3.724949,-5.394666,8.296231,-6.073386,-8.765063],[-2.246618,5.321578,5.561247,-6.196668,-3.676150,-9.632970,-8.469442,8.380699,-6.015662,-5.977697,-7.073709,5.310723,-5.075399],[0.297280,-4.431401,-1.177042,-9.916781,-8.335125,-6.217950,6.069157,-4.298693,-1.273626,-5.898374,5.005788,6.681288,-7.805063]]], dtype = "float32")#candidate|5796|(5, 6, 13)|const|float32
var_5797 = relay.var("var_5797", dtype = "float32", shape = (5, 6, 13))#candidate|5797|(5, 6, 13)|var|float32
bop_5798 = relay.floor_mod(const_5796.astype('float32'), relay.reshape(var_5797.astype('float32'), relay.shape_of(const_5796))) # shape=(5, 6, 13)
output = bop_5798
output2 = bop_5798
func_5803 = relay.Function([var_5797,], output)
mod['func_5803'] = func_5803
mod = relay.transform.InferType()(mod)
var_5804 = relay.var("var_5804", dtype = "float32", shape = (5, 6, 13))#candidate|5804|(5, 6, 13)|var|float32
output = func_5803(var_5804)
func_5805 = relay.Function([var_5804], output)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5822 = relay.TupleGetItem(func_4727_call(), 0)
call_5823 = relay.TupleGetItem(func_4728_call(), 0)
var_5829 = relay.var("var_5829", dtype = "float64", shape = (3, 11, 11))#candidate|5829|(3, 11, 11)|var|float64
bop_5830 = relay.greater(call_5822.astype('bool'), relay.reshape(var_5829.astype('bool'), relay.shape_of(call_5822))) # shape=(3, 11, 11)
bop_5833 = relay.greater(call_5823.astype('bool'), relay.reshape(var_5829.astype('bool'), relay.shape_of(call_5823))) # shape=(3, 11, 11)
func_4736_call = mod.get_global_var('func_4736')
func_4740_call = mutated_mod.get_global_var('func_4740')
const_5835 = relay.const([-1,7,-6,-1,5,-2,-3,-5,4,6,-1,-8,1,-10,-6,1,9,-5,4,-5,1,-6,-2,-5,-1,2,3,-6,9,1,1,1,7,7,3,-2,1,1,1,10,7,5,3,6,-9,7,8,2,-7,-9,-10,7,1,5,-5,5,6,-4,3,-2,9,-2,9,-6,-2,-9,8,-4,-5,10,-1,-2,4,7,-7,10,8,5,-8,6,-6,4,2,-2,4,-6,4,3,3,-5,-9,-8,-1,-6,6,10,-8,7,-2,-8,-8,5,-2,1,-10,-8,5,8,1,-6,-8,10,-3,-8,3,-1,-10,-4,-5,-10,3,-6,5,4,-7,-2,9,1,-8,-6,6,-3,-6,-9,-4,-7,-6,-7,4,7,-4,-6,-1,-6,7,2,-1,-2,-4,9,-9,-6,9,5,7,-7,-9,7,-10,-2,4,4,1,-2,4,-4,8,-9], dtype = "uint16")#candidate|5835|(168,)|const|uint16
call_5834 = func_4736_call(relay.reshape(const_5835.astype('uint16'), [8, 3, 7]), relay.reshape(const_5835.astype('uint16'), [8, 3, 7]), )
call_5836 = func_4736_call(relay.reshape(const_5835.astype('uint16'), [8, 3, 7]), relay.reshape(const_5835.astype('uint16'), [8, 3, 7]), )
output = relay.Tuple([bop_5830,call_5834,const_5835,])
output2 = relay.Tuple([bop_5833,call_5836,const_5835,])
func_5848 = relay.Function([var_5829,], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5849 = relay.var("var_5849", dtype = "float64", shape = (3, 11, 11))#candidate|5849|(3, 11, 11)|var|float64
func_5848_call = mutated_mod.get_global_var('func_5848')
call_5850 = func_5848_call(var_5849)
output = call_5850
func_5851 = relay.Function([var_5849], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5871 = func_4175_call()
call_5872 = func_4175_call()
func_3501_call = mod.get_global_var('func_3501')
func_3503_call = mutated_mod.get_global_var('func_3503')
call_5878 = func_3501_call()
call_5879 = func_3501_call()
func_5625_call = mod.get_global_var('func_5625')
func_5626_call = mutated_mod.get_global_var('func_5626')
call_5880 = relay.TupleGetItem(func_5625_call(), 1)
call_5881 = relay.TupleGetItem(func_5626_call(), 1)
uop_5884 = relay.sqrt(call_5871.astype('float32')) # shape=(1, 165)
uop_5886 = relay.sqrt(call_5872.astype('float32')) # shape=(1, 165)
uop_5887 = relay.acosh(call_5871.astype('float64')) # shape=(1, 165)
uop_5889 = relay.acosh(call_5872.astype('float64')) # shape=(1, 165)
bop_5891 = relay.subtract(uop_5887.astype('int64'), relay.reshape(call_5871.astype('int64'), relay.shape_of(uop_5887))) # shape=(1, 165)
bop_5894 = relay.subtract(uop_5889.astype('int64'), relay.reshape(call_5872.astype('int64'), relay.shape_of(uop_5889))) # shape=(1, 165)
output = relay.Tuple([call_5878,call_5880,uop_5884,bop_5891,])
output2 = relay.Tuple([call_5879,call_5881,uop_5886,bop_5894,])
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mutated_mod.get_global_var('func_5895')
call_5896 = func_5895_call()
output = call_5896
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5913 = relay.var("var_5913", dtype = "uint32", shape = (5, 4, 4))#candidate|5913|(5, 4, 4)|var|uint32
var_5914 = relay.var("var_5914", dtype = "uint32", shape = (5, 4, 4))#candidate|5914|(5, 4, 4)|var|uint32
bop_5915 = relay.bitwise_or(var_5913.astype('uint32'), relay.reshape(var_5914.astype('uint32'), relay.shape_of(var_5913))) # shape=(5, 4, 4)
bop_5922 = relay.divide(var_5914.astype('float64'), relay.reshape(var_5913.astype('float64'), relay.shape_of(var_5914))) # shape=(5, 4, 4)
output = relay.Tuple([bop_5915,bop_5922,])
output2 = relay.Tuple([bop_5915,bop_5922,])
func_5949 = relay.Function([var_5913,var_5914,], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
var_5950 = relay.var("var_5950", dtype = "uint32", shape = (5, 4, 4))#candidate|5950|(5, 4, 4)|var|uint32
var_5951 = relay.var("var_5951", dtype = "uint32", shape = (5, 4, 4))#candidate|5951|(5, 4, 4)|var|uint32
output = func_5949(var_5950,var_5951,)
func_5952 = relay.Function([var_5950,var_5951,], output)
mutated_mod['func_5952'] = func_5952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5958 = func_3231_call()
call_5959 = func_3231_call()
output = call_5958
output2 = call_5959
func_5960 = relay.Function([], output)
mod['func_5960'] = func_5960
mod = relay.transform.InferType()(mod)
output = func_5960()
func_5961 = relay.Function([], output)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_5970 = func_5680_call()
call_5971 = func_5680_call()
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
var_6001 = relay.var("var_6001", dtype = "float32", shape = (165,))#candidate|6001|(165,)|var|float32
call_6000 = relay.TupleGetItem(func_2467_call(relay.reshape(var_6001.astype('float32'), [165,])), 6)
call_6002 = relay.TupleGetItem(func_2469_call(relay.reshape(var_6001.astype('float32'), [165,])), 6)
func_4616_call = mod.get_global_var('func_4616')
func_4617_call = mutated_mod.get_global_var('func_4617')
call_6012 = func_4616_call()
call_6013 = func_4616_call()
output = relay.Tuple([call_5970,call_6000,var_6001,call_6012,])
output2 = relay.Tuple([call_5971,call_6002,var_6001,call_6013,])
func_6016 = relay.Function([var_6001,], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
var_6017 = relay.var("var_6017", dtype = "float32", shape = (165,))#candidate|6017|(165,)|var|float32
output = func_6016(var_6017)
func_6018 = relay.Function([var_6017], output)
mutated_mod['func_6018'] = func_6018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_6036 = func_3231_call()
call_6037 = func_3231_call()
output = call_6036
output2 = call_6037
func_6050 = relay.Function([], output)
mod['func_6050'] = func_6050
mod = relay.transform.InferType()(mod)
output = func_6050()
func_6051 = relay.Function([], output)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4190_call = mod.get_global_var('func_4190')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_6074 = func_4190_call()
call_6075 = func_4190_call()
output = call_6074
output2 = call_6075
func_6076 = relay.Function([], output)
mod['func_6076'] = func_6076
mod = relay.transform.InferType()(mod)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6076_call = mutated_mod.get_global_var('func_6076')
call_6077 = func_6076_call()
output = call_6077
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_6083 = relay.TupleGetItem(func_2306_call(), 0)
call_6084 = relay.TupleGetItem(func_2308_call(), 0)
output = relay.Tuple([call_6083,])
output2 = relay.Tuple([call_6084,])
func_6088 = relay.Function([], output)
mod['func_6088'] = func_6088
mod = relay.transform.InferType()(mod)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6088_call = mutated_mod.get_global_var('func_6088')
call_6089 = func_6088_call()
output = call_6089
func_6090 = relay.Function([], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mod.get_global_var('func_4082')
func_4084_call = mutated_mod.get_global_var('func_4084')
call_6111 = relay.TupleGetItem(func_4082_call(), 3)
call_6112 = relay.TupleGetItem(func_4084_call(), 3)
output = relay.Tuple([call_6111,])
output2 = relay.Tuple([call_6112,])
func_6124 = relay.Function([], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mutated_mod.get_global_var('func_6124')
call_6125 = func_6124_call()
output = call_6125
func_6126 = relay.Function([], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6174 = relay.var("var_6174", dtype = "float32", shape = (4, 9, 15))#candidate|6174|(4, 9, 15)|var|float32
uop_6175 = relay.asin(var_6174.astype('float32')) # shape=(4, 9, 15)
output = relay.Tuple([uop_6175,])
output2 = relay.Tuple([uop_6175,])
F = relay.Function([var_6174,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6174,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_11363() -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), uint8], Tensor[(132), float64], Tensor[(560), float32]) {
  %0 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %1 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %4 = reshape(%2, newshape=[11, 1, 12]) /* ty=Tensor[(11, 1, 12), float64] */;
  %5 = reshape(%3, newshape=[560, 1]) /* ty=Tensor[(560, 1), float32] */;
  %6 = @func_10393(%4, %5) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) */;
  %7 = %0.2;
  %8 = @func_2779() /* ty=Tensor[(864), uint64] */;
  %9 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
  %10 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  %11 = %1.0;
  %12 = %6.2;
  (%7, %8, %9, %10, %11, %12, meta[relay.Constant][0] /* ty=Tensor[(132), float64] */, meta[relay.Constant][1] /* ty=Tensor[(560), float32] */)
}

def @func_10393(%var_10363: Tensor[(11, 1, 12), float64], %var_10367: Tensor[(560, 1), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) {
  %13 = cast(%var_10367, dtype="float32") /* ty=Tensor[(560, 1), float32] */;
  %14 = reshape(%13, newshape=[4, 140]) /* ty=Tensor[(4, 140), float32] */;
  %15 = @func_4599(%14) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %18 = cast(%16, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %19 = reshape(%17, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %20 = reshape(%18, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %21 = @func_2736(%19, %20) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %22 = cast(%var_10363, dtype="float64") /* ty=Tensor[(11, 1, 12), float64] */;
  %23 = sinh(%22) /* ty=Tensor[(11, 1, 12), float64] */;
  %24 = cast(%23, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %25 = atanh(%24) /* ty=Tensor[(11, 1, 12), float32] */;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %27 = shape_of(%var_10363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%var_10363, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %30 = %21.1;
  %31 = maximum(%28, %29) /* ty=Tensor[(11, ?, 12), float32] */;
  (%16, %var_10367, %30, %31)
}

def @func_15544(%var_15497: Tensor[(3, 2, 13), float32]) -> (Tensor[(3, 2, 13), float32], Tensor[(112, 2), bool], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), bool]) {
  %32 = cast(%var_15497, dtype="float32") /* ty=Tensor[(3, 2, 13), float32] */;
  %33 = @func_10826() /* ty=(Tensor[(112, 2), bool],) */;
  %34 = @func_7746() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) */;
  %35 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
  %36 = acosh(%32) /* ty=Tensor[(3, 2, 13), float32] */;
  %37 = %33.0;
  %38 = %34.1;
  %39 = %35.0;
  (%36, %37, %38, %39)
}

def @func_13847() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
  %40 = @func_2779() /* ty=Tensor[(864), uint64] */;
  %41 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %42 = @func_3883() /* ty=Tensor[(2, 16, 7), float32] */;
  (%40, %41, %42)
}

def @func_14497() -> Tensor[(112, 2), float64] {
  %43 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  sinh(%44) /* ty=Tensor[(112, 2), float64] */
}

def @func_9419() -> (Tensor[(112, 2), float32],) {
  %45 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
  (%45,)
}

def @func_7038() -> (Tensor[(10, 11, 6), float32],) {
  %46 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
  (%46,)
}

def @func_5343(%var_5332: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(864), uint64], Tensor[(?, 560), bool]) {
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 560), float32] */, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
  %48 = cast(%var_5332, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %49 = reshape(%47, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
  %50 = reshape(%48, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %51 = @func_1614(%49, %50) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %54 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(1, 560), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 560), float32] */, dtype="bool") /* ty=Tensor[(1, 560), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %57 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %58 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  %59 = equal(%55, %56) /* ty=Tensor[(?, 560), bool] */;
  (%57, %58, %var_5332, %59)
}

def @func_2460(%var_2449: Tensor[(560), float32], %var_2450: Tensor[(216, 4), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) {
  %60 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %61 = cast(%var_2449, dtype="float32") /* ty=Tensor[(560), float32] */;
  %62 = cast(%var_2450, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
  %63 = reshape(%61, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
  %64 = reshape(%62, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %65 = @func_1614(%63, %64) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %66 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %68 = cast(%66, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %69 = reshape(%67, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %70 = reshape(%68, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %71 = @func_104(%69, %70) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %72 = %60.0;
  %73 = %65.4;
  %74 = %71.0;
  (%72, %66, %73, %var_2449, %var_2450, %74)
}

def @func_1383() -> Tensor[(2, 13, 16), float64] {
  %75 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %75.3
}

def @func_4867() -> (Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool]) {
  %76 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %77 = @func_4283() /* ty=Tensor[(2, 13, 16), float64] */;
  %78 = %76.0;
  %79 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  (%77, %78, %79)
}

def @func_5878() -> (Tensor[(2, 13, 16), float64],) {
  %80 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %81 = %80.0;
  (%81,)
}

def @func_11271() -> (Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) {
  %82 = @func_9467() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) */;
  %83 = @func_8528() /* ty=(Tensor[(12, 6, 12), float32],) */;
  %84 = @func_8467() /* ty=Tensor[(2, 13, 16), bool] */;
  %85 = @func_2368() /* ty=Tensor[(416), float64] */;
  %86 = %82.0;
  %87 = %83.0;
  %88 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  (%84, %85, %86, %87, %88)
}

def @func_7476() -> (Tensor[(2, 13, 16), float64],) {
  %89 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %90 = %89.0;
  (%90,)
}

def @func_1190() -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) {
  %91 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %94 = %91.2;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(416), float64] */;
  %96 = reshape(%92, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %97 = reshape(%93, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %98 = reshape(%95, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %99 = @func_479(%96, %97, %98) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %100 = %99.2;
  (%94, %100, meta[relay.Constant][3] /* ty=Tensor[(864), uint64] */)
}

def @func_9041() -> (Tensor[(2, 13, 16), float64],) {
  %101 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  (%101,)
}

def @func_813(%var_801: Tensor[(416), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
  %102 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %103 = cast(%var_801, dtype="float64") /* ty=Tensor[(416), float64] */;
  %104 = cast(%var_801, dtype="float64") /* ty=Tensor[(416), float64] */;
  %105 = reshape(%103, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %106 = reshape(%104, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %107 = @func_104(%105, %106) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %108 = %102.0;
  %109 = %107.0;
  (%108, %109, %var_801)
}

def @func_7365() -> Tensor[(10, 11, 6), float64] {
  %110 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %111 = %110.0;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  log10(%112) /* ty=Tensor[(10, 11, 6), float64] */
}

def @func_1684() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %113 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %114 = %113.3;
  %115 = cast(%114, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %116 = reshape(%115, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %117 = @func_813(%116) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %118 = %117.0;
  (%114, %118)
}

def @func_5948() -> Tensor[(2, 13, 16), float64] {
  @func_1394() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_6999() -> (Tensor[(2, 13, 16), float32],) {
  %119 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
  %120 = %119.0;
  (%120,)
}

def @func_6378() -> (Tensor[(2, 13, 16), float64],) {
  %121 = @func_5675() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %122 = %121.0;
  (%122,)
}

def @func_8912(%var_8905: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
  %123 = cast(%var_8905, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %124 = atanh(%123) /* ty=Tensor[(5, 12, 6), float64] */;
  (%124,)
}

def @func_4798() -> Tensor[(416), float64] {
  %125 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %125.2
}

def @func_14286() -> (Tensor[(2, 13, 16), float64],) {
  %126 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %127 = %126.0;
  (%127,)
}

def @func_1533(%var_1517: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) {
  %128 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %129 = cast(%var_1517, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = logical_and(%131, %132) /* ty=Tensor[(2, 13, 16), bool] */;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %135 = cast(%133, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %136 = reshape(%134, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %137 = reshape(%135, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %138 = @func_104(%136, %137) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %139 = %138.0;
  (%133, %139)
}

def @func_1310(%var_1284: Tensor[(2, 16, 7), float32], %var_1290: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
  %140 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %141 = %140.0;
  %142 = cast(%var_1284, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %146 = cast(%var_1290, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %147 = cast(%var_1290, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %148 = cast(meta[relay.Constant][4] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %149 = reshape(%146, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %150 = reshape(%147, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %151 = reshape(%148, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %152 = @func_479(%149, %150, %151) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %153 = cast(meta[relay.Constant][4] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %154 = %152.2;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(416), float64] */;
  %156 = reshape(%153, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %157 = reshape(%155, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %158 = @func_104(%156, %157) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %159 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %160 = power(%144, %145) /* ty=Tensor[(2, 16, 7), float64] */;
  %161 = %158.0;
  %162 = %159.4;
  (%160, %154, %var_1290, meta[relay.Constant][4] /* ty=Tensor[(416), float64] */, %161, %162)
}

def @func_7290() -> (Tensor[(10, 11, 6), bool],) {
  %163 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %164 = %163.1;
  (%164,)
}

def @func_5011(%var_4970: Tensor[(2, 208), float32]) -> (Tensor[(2, 208), int32], Tensor[(2, 208), float64]) {
  %165 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %166 = %165.3;
  %167 = cast(%166, dtype="float32") /* ty=Tensor[(2, 208), float32] */;
  %168 = atan(%167) /* ty=Tensor[(2, 208), float32] */;
  %169 = cast(%var_4970, dtype="bool") /* ty=Tensor[(2, 208), bool] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(2), int32] */;
  %171 = cast(%168, dtype="bool") /* ty=Tensor[(2, 208), bool] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %173 = equal(%171, %172) /* ty=Tensor[(2, 208), bool] */;
  %174 = cast(%173, dtype="int32") /* ty=Tensor[(2, 208), int32] */;
  %175 = shape_of(%168, dtype="int32") /* ty=Tensor[(2), int32] */;
  %176 = cast(%168, dtype="int32") /* ty=Tensor[(2, 208), int32] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %178 = cast(%166, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %179 = log2(%178) /* ty=Tensor[(2, 208), float64] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %181 = add(%176, %177) /* ty=Tensor[(2, 208), int32] */;
  %182 = tan(%180) /* ty=Tensor[(2, 208), float64] */;
  (%181, %182)
}

def @func_3043() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_5253(%var_5210: Tensor[(5, 90), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) {
  %183 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %184 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 90), float32] */, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %185 = reshape(%184, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %186 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 90), float32] */, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %187 = log10(%186) /* ty=Tensor[(5, 90), float32] */;
  %188 = cast(%var_5210, dtype="bool") /* ty=Tensor[(5, 90), bool] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(2), int32] */;
  %190 = cast(%187, dtype="bool") /* ty=Tensor[(5, 90), bool] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %192 = cast(%var_5210, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
  %193 = cast(%187, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %194 = %183.0;
  %195 = @func_1225(%185) /* ty=Tensor[(15, 2, 15), float32] */;
  %196 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %197 = less(%190, %191) /* ty=Tensor[(5, 90), bool] */;
  %198 = erf(%192) /* ty=Tensor[(5, 90), float64] */;
  %199 = exp(%193) /* ty=Tensor[(5, 90), float32] */;
  (%194, %195, %196, %197, %198, %199)
}

def @func_13500() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  %200 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %201 = %200.0;
  %202 = @func_3291() /* ty=Tensor[(2, 13, 16), float32] */;
  (%201, %202)
}

def @func_8900() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %203 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %204 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %205 = %203.0;
  %206 = %204.1;
  (%205, %206)
}

def @func_8528() -> (Tensor[(12, 6, 12), float32],) {
  %207 = @func_5847() /* ty=(Tensor[(12, 6, 12), float32],) */;
  %208 = %207.0;
  (%208,)
}

def @func_1480() -> (Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  %209 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %210 = cast(meta[relay.Constant][6] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %211 = @func_1340() /* ty=Tensor[(864), uint64] */;
  %212 = cast(%211, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %213 = reshape(%210, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %214 = reshape(%212, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %215 = @func_1310(%213, %214) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %216 = %215.4;
  %217 = cast(%216, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %218 = %209.0;
  %219 = sin(%217) /* ty=Tensor[(2, 13, 16), float64] */;
  (%218, %211, meta[relay.Constant][6] /* ty=Tensor[(112, 2), float32] */, %219)
}

def @func_1967() -> Tensor[(112, 2), float32] {
  %220 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %220.2
}

def @func_3883() -> Tensor[(2, 16, 7), float32] {
  @func_3016() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_12655() -> (Tensor[(2, 16, 7), float32],) {
  %221 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %222 = %221.4;
  (%222,)
}

def @func_4488(%var_4425: Tensor[(15, 8, 5), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(15, 8, 5), bool]) {
  %223 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %224 = cast(%var_4425, dtype="float32") /* ty=Tensor[(15, 8, 5), float32] */;
  %225 = cos(%224) /* ty=Tensor[(15, 8, 5), float32] */;
  %226 = cast(%var_4425, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
  %227 = log(%226) /* ty=Tensor[(15, 8, 5), float64] */;
  %228 = cast(%227, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %229 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%225, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = %223.1;
  %233 = equal(%230, %231) /* ty=Tensor[(15, 8, 5), bool] */;
  (%232, %233)
}

def @func_13266() -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  %234 = @func_12467() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %235 = @func_2310() /* ty=Tensor[(112, 2), float32] */;
  %236 = %234.0;
  (%235, %236)
}

def @func_5675() -> (Tensor[(2, 13, 16), float64],) {
  %237 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %238 = %237.0;
  (%238,)
}

def @func_3934() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) {
  %239 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %242 = reshape(%240, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %243 = reshape(%241, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %244 = @func_1310(%242, %243) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %245 = %244.0;
  (%239, %245, meta[relay.Constant][7] /* ty=Tensor[(864), uint64] */)
}

def @func_12076() -> (Tensor[(10, 11, 6), float32],) {
  %246 = @func_5996() /* ty=Tensor[(10, 11, 6), float32] */;
  (%246,)
}

def @func_14456() -> Tensor[(2, 13, 16), float64] {
  %247 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %247.0
}

def @func_5028() -> (Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) {
  %248 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %249 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %250 = %248.0;
  %251 = %249.4;
  (%250, %251)
}

def @func_15358() -> Tensor[(2, 13, 16), float32] {
  %252 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %252.0
}

def @func_8827() -> (Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) {
  %253 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 28), float32] */, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %254 = reshape(%253, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %255 = @func_7849(%254) /* ty=(Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) */;
  %256 = @func_7365() /* ty=Tensor[(10, 11, 6), float64] */;
  %257 = %255.2;
  (%256, %257, meta[relay.Constant][8] /* ty=Tensor[(8, 28), float32] */)
}

def @func_10783() -> (Tensor[(2, 13, 16), int8], Tensor[(2, 13, 16), float32]) {
  %258 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %259 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %260 = %258.0;
  (%259, %260)
}

def @func_2291() -> (Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) {
  %261 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %263 = tan(%262) /* ty=Tensor[(10, 11, 6), float32] */;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %265 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %266 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %267 = sinh(%264) /* ty=Tensor[(10, 11, 6), float32] */;
  %268 = %265.3;
  %269 = %266.2;
  (%267, %268, %269)
}

def @func_9195() -> Tensor[(2, 13, 16), float64] {
  %270 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %270.3
}

def @func_4283() -> Tensor[(2, 13, 16), float64] {
  %271 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %271.1
}

def @func_11430(%var_11405: Tensor[(2, 208), float64]) -> (Tensor[(2, 208), uint32], Tensor[(416), float64], Tensor[(112, 2), float32]) {
  %272 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %273 = %272.3;
  %274 = cast(%var_11405, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(2), int32] */;
  %276 = cast(%273, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %278 = @func_7022() /* ty=(Tensor[(112, 2), float32],) */;
  %279 = minimum(%276, %277) /* ty=Tensor[(2, 208), uint32] */;
  %280 = @func_5476() /* ty=Tensor[(416), float64] */;
  %281 = %278.0;
  (%279, %280, %281)
}

def @func_11008() -> Tensor[(416), float64] {
  @func_6726() /* ty=Tensor[(416), float64] */
}

def @func_12033() -> Tensor[(2, 16, 7), uint64] {
  %282 = @func_5433() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) */;
  %282.0
}

def @func_2736(%var_2713: Tensor[(2, 13, 16), float32], %var_2731: Tensor[(2, 13, 16), float64]) -> (Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) {
  %283 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %284 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %285 = cast(%var_2713, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%284, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %289 = minimum(%287, %288) /* ty=Tensor[(2, 13, 16), float64] */;
  %290 = cast(%var_2731, dtype="uint8") /* ty=Tensor[(2, 13, 16), uint8] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="uint8") /* ty=Tensor[(2, 13, 16), uint8] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %294 = %283.2;
  %295 = add(%292, %293) /* ty=Tensor[(2, 13, 16), uint8] */;
  (%294, %295)
}

def @func_10098() -> (Tensor[(2, 16, 7), bool],) {
  %296 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %297 = %296.1;
  (%297,)
}

def @func_5933() -> (Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) {
  %298 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %299 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %300 = cast(meta[relay.Constant][9] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %301 = reshape(%300, newshape=[5, 90]) /* ty=Tensor[(5, 90), float32] */;
  %302 = @func_5253(%301) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) */;
  %303 = %298.0;
  %304 = %299.1;
  %305 = %302.1;
  (%303, %304, %305, meta[relay.Constant][9] /* ty=Tensor[(450), float32] */)
}

def @func_11530(%var_11526: Tensor[(560), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) {
  %306 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %307 = cast(meta[relay.Constant][10] /* ty=Tensor[(108, 8), uint64] */, dtype="uint64") /* ty=Tensor[(108, 8), uint64] */;
  %308 = reshape(%307, newshape=[864, 1]) /* ty=Tensor[(864, 1), uint64] */;
  %309 = @func_2512(%308) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) */;
  %310 = cast(%var_11526, dtype="float32") /* ty=Tensor[(560), float32] */;
  %311 = reshape(%310, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %312 = @func_10292(%311) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) */;
  %313 = %306.0;
  %314 = %309.1;
  %315 = %312.0;
  (%313, %314, meta[relay.Constant][10] /* ty=Tensor[(108, 8), uint64] */, %315, %var_11526)
}

def @func_479(%var_440: Tensor[(12, 6, 12), uint64], %var_441: Tensor[(12, 6, 12), uint64], %var_459: Tensor[(416), float64]) -> (Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) {
  %316 = cast(%var_441, dtype="uint64") /* ty=Tensor[(12, 6, 12), uint64] */;
  %317 = shape_of(%var_440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%var_440, dtype="uint64") /* ty=Tensor[(12, 6, 12), uint64] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %320 = maximum(%318, %319) /* ty=Tensor[(12, 6, 12), uint64] */;
  %321 = cast(%var_441, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%320, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %325 = cast(%var_459, dtype="float64") /* ty=Tensor[(416), float64] */;
  %326 = cast(%var_459, dtype="float64") /* ty=Tensor[(416), float64] */;
  %327 = reshape(%325, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %328 = reshape(%326, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %329 = @func_104(%327, %328) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %332 = cast(%330, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %333 = reshape(%331, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %334 = reshape(%332, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %335 = @func_104(%333, %334) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %336 = power(%323, %324) /* ty=Tensor[(12, 6, 12), float32] */;
  %337 = %335.0;
  (%336, %330, %var_459, %337)
}

def @func_7022() -> (Tensor[(112, 2), float32],) {
  %338 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  (%338,)
}

def @func_2779() -> Tensor[(864), uint64] {
  %339 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %339.2
}

def @func_6178() -> Tensor[(2, 16, 7), float32] {
  %340 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
  %340.0
}

def @func_8253(%var_8235: Tensor[(3, 12, 8), uint64], %var_8236: Tensor[(3, 12, 8), uint64]) -> (Tensor[(3, 12, 8), bool], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(864), uint64]) {
  %341 = cast(%var_8236, dtype="bool") /* ty=Tensor[(3, 12, 8), bool] */;
  %342 = shape_of(%var_8235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_8235, dtype="bool") /* ty=Tensor[(3, 12, 8), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = @func_6500() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %346 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %347 = cast(%346, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %348 = reshape(%347, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %349 = @func_7623(%348) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) */;
  %350 = equal(%343, %344) /* ty=Tensor[(3, 12, 8), bool] */;
  %351 = %345.0;
  %352 = %349.5;
  (%350, %351, %346, %352)
}

def @func_13564() -> Tensor[(2, 13, 16), float32] {
  @func_12242() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_2078() -> (Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) {
  %353 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %354 = cast(meta[relay.Constant][11] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %355 = reshape(%354, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %356 = @func_813(%355) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %357 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %358 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %359 = %358.1;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %361 = %353.5;
  %362 = %356.2;
  %363 = %357.1;
  %364 = acos(%360) /* ty=Tensor[(2, 16, 7), float32] */;
  (%361, %362, meta[relay.Constant][11] /* ty=Tensor[(416), float64] */, %363, %364)
}

def @func_2965() -> Tensor[(10, 11, 6), float32] {
  @func_1814() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_3291() -> Tensor[(2, 13, 16), float32] {
  @func_2566() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_6516() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) {
  %365 = @func_6314() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %366 = @func_3934() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) */;
  %367 = %365.0;
  %368 = %366.1;
  (%367, %368)
}

def @func_5972(%var_5955: Tensor[(112, 2), float32]) -> Tensor[(112, 2), int32] {
  %369 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %370 = %369.1;
  %371 = cast(%var_5955, dtype="int32") /* ty=Tensor[(112, 2), int32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(2), int32] */;
  %373 = cast(%370, dtype="int32") /* ty=Tensor[(112, 2), int32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  logical_xor(%373, %374) /* ty=Tensor[(112, 2), int32] */
}

def @func_7849(%var_7836: Tensor[(224), float32]) -> (Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) {
  %375 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %376 = cast(%var_7836, dtype="float32") /* ty=Tensor[(224), float32] */;
  %377 = reshape(%376, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %378 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %379 = %375.0;
  %380 = @func_5972(%377) /* ty=Tensor[(112, 2), int32] */;
  %381 = %378.0;
  (%379, %380, %var_7836, %381)
}

def @func_8069(%var_8055: Tensor[(210), float32]) -> (Tensor[(10, 11, 6), bool], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32]) {
  %382 = @func_7290() /* ty=(Tensor[(10, 11, 6), bool],) */;
  %383 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
  %384 = cast(%var_8055, dtype="float32") /* ty=Tensor[(210), float32] */;
  %385 = reshape(%384, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float32] */;
  %386 = @func_3608(%385) /* ty=(Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) */;
  %387 = %382.0;
  %388 = %383.2;
  %389 = %386.1;
  (%387, %388, %389, %var_8055)
}

def @func_1083() -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) {
  %390 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %393 = atan(%392) /* ty=Tensor[(2, 16, 7), float64] */;
  %394 = cast(%391, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %395 = exp(%394) /* ty=Tensor[(2, 16, 7), float64] */;
  %396 = cast(%395, dtype="uint64") /* ty=Tensor[(2, 16, 7), uint64] */;
  %397 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%393, dtype="uint64") /* ty=Tensor[(2, 16, 7), uint64] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %400 = cast(%393, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %401 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%391, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %405 = reshape(%404, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %406 = @func_813(%405) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %407 = cast(meta[relay.Constant][13] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %408 = cast(meta[relay.Constant][13] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %409 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %410 = reshape(%407, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %411 = reshape(%408, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %412 = reshape(%409, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %413 = @func_479(%410, %411, %412) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %414 = multiply(%398, %399) /* ty=Tensor[(2, 16, 7), uint64] */;
  %415 = logical_and(%402, %403) /* ty=Tensor[(2, 16, 7), bool] */;
  %416 = %406.1;
  %417 = %413.0;
  (%414, %415, %416, meta[relay.Constant][12] /* ty=Tensor[(2, 208), float64] */, %417, meta[relay.Constant][13] /* ty=Tensor[(864), uint64] */)
}

def @func_8680() -> Tensor[(112, 2), float32] {
  @func_2310() /* ty=Tensor[(112, 2), float32] */
}

def @func_6060() -> Tensor[(864), uint64] {
  @func_2779() /* ty=Tensor[(864), uint64] */
}

def @func_7623(%var_7574: Tensor[(224), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) {
  %418 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %419 = cast(%var_7574, dtype="float32") /* ty=Tensor[(224), float32] */;
  %420 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %421 = cast(%420, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %422 = reshape(%419, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %423 = reshape(%421, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %424 = @func_1310(%422, %423) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %425 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
  %426 = %418.0;
  %427 = %424.4;
  %428 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %429 = %425.2;
  %430 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
  (%420, %426, %427, %var_7574, %428, %429, %430)
}

def @func_8729() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) {
  %431 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
  %432 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %433 = @func_6314() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %434 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
  %435 = %431.0;
  %436 = %432.3;
  %437 = @func_7229() /* ty=Tensor[(15, 2, 15), float32] */;
  %438 = %433.0;
  %439 = %434.2;
  %440 = @func_7229() /* ty=Tensor[(15, 2, 15), float32] */;
  (%435, %436, %437, %438, %439, %440)
}

def @func_5533() -> Tensor[(2, 13, 16), float64] {
  @func_1394() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_14988() -> (Tensor[(2, 13, 16), float64],) {
  %441 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
  %442 = %441.4;
  (%442,)
}

def @func_7543(%var_7541: uint64) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) {
  %443 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %444 = cast(%var_7541, dtype="uint64") /* ty=uint64 */;
  %445 = reshape(%444, newshape=[]) /* ty=uint64 */;
  %446 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %447 = %443.0;
  %448 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %449 = @func_4162(%445) /* ty=Tensor[(7, 4, 12), uint64] */;
  (%446, %447, %448, %449, %var_7541)
}

def @func_2117() -> Tensor[(2, 13, 16), int8] {
  %450 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %451 = cast(%450, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %452 = reshape(%451, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %453 = @func_813(%452) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %454 = %453.2;
  %455 = cast(%454, dtype="int8") /* ty=Tensor[(416), int8] */;
  %456 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%450, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%457, %458) /* ty=Tensor[(2, 13, 16), int8] */
}

def @func_13385() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %459 = @func_7476() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %460 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %461 = %459.0;
  %462 = %460.0;
  (%461, %462)
}

def @func_11851() -> (Tensor[(2, 16, 7), float32],) {
  %463 = @func_9487() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %464 = %463.0;
  (%464,)
}

def @func_8194() -> (Tensor[(2, 13, 16), float64],) {
  %465 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %466 = %465.0;
  (%466,)
}

def @func_10060() -> Tensor[(2, 13, 16), float64] {
  %467 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %467.0
}

def @func_9664(%var_9608: Tensor[(525), uint32]) -> (Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
  %468 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %469 = cast(meta[relay.Constant][14] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %470 = cast(%var_9608, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %471 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %472 = reshape(%469, newshape=[]) /* ty=uint32 */;
  %473 = reshape(%470, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint32] */;
  %474 = reshape(%471, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %475 = @func_4234(%472, %473, %474) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) */;
  %476 = %468.0;
  %477 = %475.0;
  %478 = @func_9195() /* ty=Tensor[(2, 13, 16), float64] */;
  %479 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
  (%476, %477, meta[relay.Constant][14] /* ty=uint32 */, %var_9608, meta[relay.Constant][15] /* ty=Tensor[(8, 70), float32] */, %478, %479)
}

def @func_13051() -> Tensor[(2, 13, 16), float64] {
  @func_5699() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_4923() -> (Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
  %480 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %481 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  (%480, %481)
}

def @func_6136() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
  %482 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %483 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %484 = %482.1;
  %485 = %483.0;
  %486 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %487 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  (%484, %485, %486, %487)
}

def @func_14041() -> (Tensor[(416), float64],) {
  %488 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
  %489 = %488.1;
  (%489,)
}

def @func_1948() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  %490 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %491 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %492 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %494 = %490.1;
  %495 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %496 = %491.0;
  %497 = log(%493) /* ty=Tensor[(10, 11, 6), float32] */;
  (%494, %495, %496, %497)
}

def @func_12008() -> (Tensor[(416), float64],) {
  %498 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %499 = %498.2;
  (%499,)
}

def @func_14238(%var_14189: bool, %var_14190: Tensor[(13, 4, 16), bool]) -> (Tensor[(13, 4, 16), int32], Tensor[(112, 2), float32], Tensor[(13, 4, 16), float32]) {
  %500 = cast(%var_14189, dtype="bool") /* ty=bool */;
  %501 = cast(%var_14190, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %502 = logical_and(%500, %501) /* ty=Tensor[(13, 4, 16), bool] */;
  %503 = cast(%var_14190, dtype="int32") /* ty=Tensor[(13, 4, 16), int32] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="int32") /* ty=Tensor[(13, 4, 16), int32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %507 = @func_13266() /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %508 = cast(%502, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %509 = bitwise_or(%505, %506) /* ty=Tensor[(13, 4, 16), int32] */;
  %510 = %507.0;
  %511 = rsqrt(%508) /* ty=Tensor[(13, 4, 16), float32] */;
  (%509, %510, %511)
}

def @func_4599(%var_4588: Tensor[(4, 140), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) {
  %512 = cast(%var_4588, dtype="float32") /* ty=Tensor[(4, 140), float32] */;
  %513 = cast(meta[relay.Constant][16] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %514 = reshape(%512, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %515 = reshape(%513, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %516 = @func_3444(%514, %515) /* ty=(Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) */;
  %517 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %518 = %517.1;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %520 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %521 = %516.4;
  %522 = log2(%519) /* ty=Tensor[(112, 2), float32] */;
  (%520, %521, %var_4588, meta[relay.Constant][16] /* ty=Tensor[(864), uint64] */, %522)
}

def @func_14631() -> Tensor[(10, 11, 6), float32] {
  %523 = @func_10939() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) */;
  %523.0
}

def @func_11686() -> (Tensor[(864), uint64], Tensor[(864), uint64]) {
  %524 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %525 = @func_1340() /* ty=Tensor[(864), uint64] */;
  (%524, %525)
}

def @func_8343() -> (Tensor[(2, 16, 7), float32],) {
  %526 = @func_4775() /* ty=Tensor[(2, 16, 7), float32] */;
  (%526,)
}

def @func_11732() -> (Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %527 = @func_7038() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %528 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
  %529 = @func_3043() /* ty=Tensor[(416), float64] */;
  %530 = %527.0;
  %531 = %528.0;
  %532 = @func_3883() /* ty=Tensor[(2, 16, 7), float32] */;
  (%529, %530, %531, %532)
}

def @func_2368() -> Tensor[(416), float64] {
  %533 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %533.1
}

def @func_11097() -> (Tensor[(450), float32],) {
  %534 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
  %535 = %534.3;
  (%535,)
}

def @func_15277() -> (Tensor[(864), uint64],) {
  %536 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %537 = %536.0;
  (%537,)
}

def @func_15036() -> (Tensor[(2, 13, 16), float32],) {
  %538 = @func_13668() /* ty=Tensor[(2, 13, 16), float32] */;
  (%538,)
}

def @func_13414(%var_13404: Tensor[(8, 15, 13), float64], %var_13405: Tensor[(8, 15, 13), float64]) -> Tensor[(8, 15, 13), float64] {
  %539 = cast(%var_13405, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %540 = shape_of(%var_13404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%var_13404, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%541, %542) /* ty=Tensor[(8, 15, 13), float64] */
}

def @func_2512(%var_2496: Tensor[(864, 1), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) {
  %543 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %545 = cast(%543, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %546 = cast(%var_2496, dtype="uint64") /* ty=Tensor[(864, 1), uint64] */;
  %547 = reshape(%545, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %548 = reshape(%546, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %549 = @func_1310(%547, %548) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %550 = %549.3;
  %551 = cast(%550, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %552 = cast(%var_2496, dtype="uint16") /* ty=Tensor[(864, 1), uint16] */;
  %553 = atanh(%544) /* ty=Tensor[(2, 16, 7), float64] */;
  %554 = maximum(%551, %552) /* ty=Tensor[(864, 416), uint16] */;
  (%553, %554)
}

def @func_13066(%var_13062: Tensor[(1, 9, 5), float64]) -> Tensor[(1, 9, 5), float64] {
  %555 = cast(%var_13062, dtype="float64") /* ty=Tensor[(1, 9, 5), float64] */;
  cos(%555) /* ty=Tensor[(1, 9, 5), float64] */
}

def @func_4688(%var_4666: Tensor[(10, 11, 6), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) {
  %556 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %557 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %558 = %557.0;
  %559 = cast(%var_4666, dtype="uint16") /* ty=Tensor[(10, 11, 6), uint16] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="uint16") /* ty=Tensor[(10, 11, 6), uint16] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %563 = cast(%558, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %564 = %556.0;
  %565 = subtract(%561, %562) /* ty=Tensor[(10, 11, 6), uint16] */;
  %566 = acos(%563) /* ty=Tensor[(10, 11, 6), float64] */;
  (%564, %565, %566)
}

def @func_10707() -> (Tensor[(2, 13, 16), float32],) {
  %567 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %568 = %567.0;
  (%568,)
}

def @func_4014() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
  %569 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %570 = %569.0;
  %571 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 13, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %575 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %576 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %577 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %578 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %579 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %580 = floor_mod(%573, %574) /* ty=Tensor[(2, 13, 16), float32] */;
  %581 = %575.2;
  %582 = %576.0;
  %583 = %577.1;
  %584 = %578.0;
  %585 = %579.0;
  (%580, %581, %582, %583, %584, %585)
}

def @func_3202(%var_3183: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
  %586 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %587 = %586.0;
  %588 = cast(%var_3183, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %592 = mod(%590, %591) /* ty=Tensor[(2, 16, 7), float32] */;
  (%592,)
}

def @func_13238() -> (Tensor[(416), float64],) {
  %593 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %594 = %593.0;
  (%594,)
}

def @func_13668() -> Tensor[(2, 13, 16), float32] {
  %595 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %595.0
}

def @func_11487(%var_11472: uint64, %var_11479: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(7, 4, 12), uint64], uint64, Tensor[(864), uint64], Tensor[(5, 12, 6), float64], Tensor[(360), float64], Tensor[(864), uint64]) {
  %596 = cast(%var_11472, dtype="uint64") /* ty=uint64 */;
  %597 = reshape(%596, newshape=[]) /* ty=uint64 */;
  %598 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %599 = cast(%var_11479, dtype="float64") /* ty=Tensor[(360), float64] */;
  %600 = reshape(%599, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %601 = @func_8912(%600) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %602 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %603 = @func_4162(%597) /* ty=Tensor[(7, 4, 12), uint64] */;
  %604 = %598.1;
  %605 = %601.0;
  %606 = @func_2779() /* ty=Tensor[(864), uint64] */;
  (%602, %603, %var_11472, %604, %605, %var_11479, %606)
}

def @func_13943() -> Tensor[(2, 13, 16), float32] {
  @func_2181() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_12242() -> Tensor[(2, 13, 16), float32] {
  @func_2801() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_2880() -> (Tensor[(2, 13, 16), float64],) {
  %607 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %608 = %607.0;
  (%608,)
}

def @func_14739() -> (Tensor[(2, 16, 7), float32],) {
  %609 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %610 = %609.0;
  (%610,)
}

def @func_2181() -> Tensor[(2, 13, 16), float32] {
  %611 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %612 = %611.0;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  cos(%613) /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_3608(%var_3578: Tensor[(5, 6, 7), float32]) -> (Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) {
  %614 = cast(%var_3578, dtype="float32") /* ty=Tensor[(5, 6, 7), float32] */;
  %615 = cast(%var_3578, dtype="float64") /* ty=Tensor[(5, 6, 7), float64] */;
  %616 = log(%614) /* ty=Tensor[(5, 6, 7), float32] */;
  %617 = sigmoid(%615) /* ty=Tensor[(5, 6, 7), float64] */;
  (%616, %617)
}

def @func_7746() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) {
  %618 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %619 = @func_5433() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) */;
  %620 = @func_5996() /* ty=Tensor[(10, 11, 6), float32] */;
  %621 = %618.0;
  %622 = %619.0;
  %623 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  (%620, %621, %622, %623)
}

def @func_2941() -> Tensor[(416), float64] {
  @func_2368() /* ty=Tensor[(416), float64] */
}

def @func_3339() -> (Tensor[(10, 11, 6), float32],) {
  %624 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %626 = rsqrt(%625) /* ty=Tensor[(10, 11, 6), float32] */;
  (%626,)
}

def @func_5699() -> Tensor[(2, 13, 16), float64] {
  @func_5533() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_10644() -> Tensor[(864), uint64] {
  %627 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
  %627.1
}

def @func_9772(%var_9727: Tensor[(50, 9), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(50, 9), float64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(6, 5, 15), float64], Tensor[(2, 16, 7), float32]) {
  %628 = @func_9487() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %629 = @func_8528() /* ty=(Tensor[(12, 6, 12), float32],) */;
  %630 = cast(meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %631 = cast(meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %632 = reshape(%630, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %633 = reshape(%631, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %634 = @func_104(%632, %633) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %635 = cast(meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %636 = reshape(%635, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %637 = @func_2556(%636) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %638 = cast(%var_9727, dtype="float64") /* ty=Tensor[(50, 9), float64] */;
  %639 = reshape(%638, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %640 = @func_8158(%639) /* ty=Tensor[(6, 5, 15), float64] */;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
  %642 = %628.0;
  %643 = %629.0;
  %644 = %634.0;
  %645 = %637.0;
  %646 = @func_4798() /* ty=Tensor[(416), float64] */;
  %647 = asinh(%641) /* ty=Tensor[(6, 5, 15), float64] */;
  %648 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  (%642, %643, %644, meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, %var_9727, %645, %646, %647, %648)
}

def @func_12718() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32]) {
  %649 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %650 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %651 = %649.1;
  %652 = %650.3;
  (%651, %652)
}

def @func_13922(%var_13914: Tensor[(40, 14), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(864, 416), uint16], Tensor[(40, 14), float32]) {
  %653 = @func_13617() /* ty=Tensor[(2, 16, 7), float32] */;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %655 = cast(%var_13914, dtype="float32") /* ty=Tensor[(40, 14), float32] */;
  %656 = reshape(%655, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %657 = @func_11530(%656) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) */;
  %658 = asin(%654) /* ty=Tensor[(2, 16, 7), float32] */;
  %659 = %657.1;
  (%658, %659, %var_13914)
}

def @func_14001() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64]) {
  %660 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %661 = %660.1;
  %662 = @func_4283() /* ty=Tensor[(2, 13, 16), float64] */;
  (%661, %662)
}

def @func_4898() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) {
  %663 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %664 = cast(meta[relay.Constant][19] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %665 = reshape(%664, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %666 = @func_4531(%665) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) */;
  %667 = %663.0;
  %668 = %666.1;
  (%667, %668, meta[relay.Constant][19] /* ty=Tensor[(600), float32] */)
}

def @func_9087() -> Tensor[(2, 13, 16), float64] {
  @func_5533() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_5847() -> (Tensor[(12, 6, 12), float32],) {
  %669 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
  %670 = %669.1;
  (%670,)
}

def @func_14342() -> (Tensor[(2, 13, 16), float64],) {
  %671 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_6314() -> (Tensor[(2, 13, 16), float64],) {
  %673 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  (%673,)
}

def @func_12467() -> (Tensor[(2, 13, 16), float64],) {
  %674 = @func_6303() /* ty=Tensor[(2, 13, 16), float64] */;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %676 = log(%675) /* ty=Tensor[(2, 13, 16), float64] */;
  (%676,)
}

def @func_1394() -> Tensor[(2, 13, 16), float64] {
  @func_1383() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_2987() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) {
  %677 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %678 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  (%677, %678)
}

def @func_9467() -> (Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) {
  %679 = @func_5765() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) */;
  %680 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %681 = %679.1;
  %682 = %680.0;
  (%681, %682)
}

def @func_4717() -> (Tensor[(2, 13, 16), float64],) {
  %683 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %684 = %683.0;
  (%684,)
}

def @func_14162() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(10, 11, 6), uint16], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
  %685 = @func_9087() /* ty=Tensor[(2, 13, 16), float64] */;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %687 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %688 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %689 = @func_5632() /* ty=Tensor[(2, 13, 16), float64] */;
  %690 = sqrt(%686) /* ty=Tensor[(2, 13, 16), float32] */;
  %691 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %692 = %687.3;
  %693 = %688.0;
  %694 = @func_3043() /* ty=Tensor[(416), float64] */;
  (%689, %690, %691, %692, %693, %694)
}

def @func_2324() -> (Tensor[(2, 13, 16), float32],) {
  %695 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  (%695,)
}

def @func_4646() -> (Tensor[(2, 16, 7), float32],) {
  %696 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %699 = acosh(%698) /* ty=Tensor[(2, 16, 7), float32] */;
  (%699,)
}

def @func_10939() -> (Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) {
  %700 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %701 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_5476() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_11191() -> (Tensor[(2, 13, 16), float64],) {
  %704 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %705 = %704.0;
  (%705,)
}

def @func_7097(%var_7075: Tensor[(2, 112), float32]) -> (Tensor[(864), uint64], Tensor[(2, 112), float32], Tensor[(10, 11, 6), float64]) {
  %706 = cast(%var_7075, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
  %707 = reshape(%706, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %708 = @func_2674(%707) /* ty=(Tensor[(864), uint64], Tensor[(112, 2), int16]) */;
  %709 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
  %710 = cast(%709, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %711 = %708.0;
  %712 = sqrt(%710) /* ty=Tensor[(10, 11, 6), float64] */;
  (%711, %var_7075, %712)
}

def @func_1340() -> Tensor[(864), uint64] {
  %713 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %713.4
}

def @func_8158(%var_8153: Tensor[(6, 5, 15), float64]) -> Tensor[(6, 5, 15), float64] {
  %714 = cast(%var_8153, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
  sigmoid(%714) /* ty=Tensor[(6, 5, 15), float64] */
}

def @func_5115() -> (Tensor[(2, 13, 16), float64],) {
  %715 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %716 = %715.0;
  (%716,)
}

def @func_9834(%var_9802: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(112, 2), int32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), int8]) {
  %717 = @func_6516() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) */;
  %718 = %717.1;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %720 = reshape(%719, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %721 = cast(%var_9802, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %722 = reshape(%721, newshape=[864, 1]) /* ty=Tensor[(864, 1), uint64] */;
  %723 = @func_2512(%722) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) */;
  %724 = @func_5972(%720) /* ty=Tensor[(112, 2), int32] */;
  %725 = %723.0;
  %726 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  (%718, %724, %725, %var_9802, %726)
}

def @func_6929() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) {
  %727 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %728 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %729 = %727.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %731 = reshape(%730, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float32] */;
  %732 = @func_4688(%731) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) */;
  %733 = @func_6303() /* ty=Tensor[(2, 13, 16), float64] */;
  %734 = %728.1;
  %735 = %732.1;
  (%733, %729, %734, %735)
}

def @func_7920(%var_7909: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) {
  %736 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
  %737 = cast(%var_7909, dtype="float32") /* ty=Tensor[(560), float32] */;
  %738 = cast(meta[relay.Constant][20] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %739 = reshape(%737, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %740 = reshape(%738, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %741 = @func_2460(%739, %740) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
  %742 = %736.0;
  %743 = %741.3;
  (%742, %743, %var_7909, meta[relay.Constant][20] /* ty=Tensor[(864), uint64] */)
}

def @func_1728() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %744 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %745 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %746 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %747 = %744.0;
  %748 = %745.0;
  %749 = %746.1;
  (%747, %748, %749)
}

def @func_4234(%var_4199: uint32, %var_4200: Tensor[(15, 7, 5), uint32], %var_4213: Tensor[(8, 70), float32]) -> (Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
  %750 = cast(%var_4199, dtype="bool") /* ty=bool */;
  %751 = cast(%var_4200, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %752 = equal(%750, %751) /* ty=Tensor[(15, 7, 5), bool] */;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %754 = cast(%var_4199, dtype="bool") /* ty=bool */;
  %755 = cast(%var_4213, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %756 = cast(meta[relay.Constant][21] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %757 = reshape(%755, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %758 = reshape(%756, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %759 = @func_2460(%757, %758) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
  %760 = not_equal(%753, %754) /* ty=Tensor[(15, 7, 5), bool] */;
  %761 = %759.4;
  %762 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  (%760, %761, %var_4213, meta[relay.Constant][21] /* ty=Tensor[(864), uint64] */, %762)
}

def @func_5765() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) {
  %763 = cast(meta[relay.Constant][22] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %764 = reshape(%763, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %765 = @func_2556(%764) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %766 = @func_2779() /* ty=Tensor[(864), uint64] */;
  %767 = cast(%766, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %768 = cast(%766, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %769 = cast(meta[relay.Constant][22] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %770 = reshape(%767, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %771 = reshape(%768, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %772 = reshape(%769, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %773 = @func_479(%770, %771, %772) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %774 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %775 = %774.1;
  %776 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %777 = cast(%776, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %778 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%775, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %781 = %765.0;
  %782 = %773.0;
  %783 = divide(%779, %780) /* ty=Tensor[(2, 16, 7), float32] */;
  (%766, %781, meta[relay.Constant][22] /* ty=Tensor[(416), float64] */, %782, %783)
}

def @func_8304() -> (Tensor[(2, 16, 7), float32],) {
  %784 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %785 = %784.0;
  (%785,)
}

def @func_11136() -> (Tensor[(2, 13, 16), float32], Tensor[(6, 5, 15), float64], Tensor[(450), float64]) {
  %786 = cast(meta[relay.Constant][23] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %787 = reshape(%786, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %788 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %789 = @func_8158(%787) /* ty=Tensor[(6, 5, 15), float64] */;
  (%788, %789, meta[relay.Constant][23] /* ty=Tensor[(450), float64] */)
}

def @func_5441() -> (Tensor[(2, 16, 7), float32],) {
  %790 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %791 = %790.1;
  (%791,)
}

def @func_9487() -> (Tensor[(2, 16, 7), float32],) {
  %792 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  (%792,)
}

def @func_2023() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) {
  %793 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %794 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %795 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %796 = %793.3;
  %797 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %798 = %794.2;
  %799 = %795.2;
  (%796, %797, %798, %799)
}

def @func_15113() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  %800 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %801 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %802 = cast(meta[relay.Constant][24] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %803 = reshape(%802, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float32] */;
  %804 = @func_3608(%803) /* ty=(Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) */;
  %805 = @func_11732() /* ty=(Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %806 = %800.0;
  %807 = %801.1;
  %808 = %804.1;
  %809 = %805.3;
  %810 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
  (%806, %807, %808, meta[relay.Constant][24] /* ty=Tensor[(210), float32] */, %809, %810)
}

def @func_1759() -> Tensor[(2, 16, 7), bool] {
  %811 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %811.1
}

def @func_12728() -> Tensor[(112, 2), float32] {
  %812 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %812.3
}

def @func_10027() -> Tensor[(2, 16, 7), float32] {
  %813 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %813.2
}

def @func_12781(%var_12771: Tensor[(864), uint64]) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(1, 525), uint32], Tensor[(2, 16, 7), float32], Tensor[(1, 560), float32], Tensor[(864), uint64], Tensor[(864), uint64]) {
  %814 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 525), uint32] */, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %815 = reshape(%814, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %816 = @func_9664(%815) /* ty=(Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) */;
  %817 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 560), float32] */, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
  %818 = cast(%var_12771, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %819 = reshape(%817, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %820 = reshape(%818, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %821 = @func_2460(%819, %820) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
  %822 = %821.0;
  %823 = cast(%822, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %824 = reshape(%823, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %825 = @func_7623(%824) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) */;
  %826 = @func_11594() /* ty=Tensor[(112, 2), float32] */;
  %827 = @func_5948() /* ty=Tensor[(2, 13, 16), float64] */;
  %828 = %816.0;
  %829 = %825.5;
  (%826, %827, %828, meta[relay.Constant][25] /* ty=Tensor[(1, 525), uint32] */, %822, meta[relay.Constant][26] /* ty=Tensor[(1, 560), float32] */, %var_12771, %829)
}

def @func_5632() -> Tensor[(2, 13, 16), float64] {
  %830 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %830.0
}

def @func_6038() -> Tensor[(2, 13, 16), float64] {
  @func_5699() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_1614(%var_1599: Tensor[(7, 16, 5), float32], %var_1605: Tensor[(864), uint64]) -> (Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) {
  %831 = cast(%var_1599, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
  %832 = cast(%var_1605, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %833 = cast(%var_1605, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %834 = cast(meta[relay.Constant][27] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %835 = reshape(%832, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %836 = reshape(%833, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %837 = reshape(%834, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %838 = @func_479(%835, %836, %837) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %839 = atan(%831) /* ty=Tensor[(7, 16, 5), float32] */;
  %840 = %838.0;
  %841 = @func_1340() /* ty=Tensor[(864), uint64] */;
  (%839, %840, %var_1605, meta[relay.Constant][27] /* ty=Tensor[(416), float64] */, %841)
}

def @func_6500() -> (Tensor[(2, 13, 16), float32],) {
  %842 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  (%842,)
}

def @func_7229() -> Tensor[(15, 2, 15), float32] {
  %843 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
  %843.2
}

def @func_8467() -> Tensor[(2, 13, 16), bool] {
  %844 = @func_5765() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) */;
  %844.1
}

def @func_9066() -> (Tensor[(2, 13, 16), int8],) {
  %845 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  (%845,)
}

def @func_12897(%var_12807: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %846 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %847 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
  %848 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
  %849 = cast(%var_12807, dtype="float64") /* ty=Tensor[(360), float64] */;
  %850 = reshape(%849, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %851 = @func_8912(%850) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %852 = %851.0;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %854 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
  %855 = @func_5115() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %856 = %846.0;
  %857 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %858 = %847.0;
  %859 = %848.1;
  %860 = sin(%853) /* ty=Tensor[(5, 12, 6), float32] */;
  %861 = %854.4;
  %862 = %855.0;
  (%856, %var_12807, %857, %858, %859, %860, %861, %862)
}

def @func_13709() -> (Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
  %863 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %864 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %865 = %863.2;
  (%864, %865)
}

def @func_5273() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
  %866 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %867 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %868 = %866.0;
  (%867, %868)
}

def @func_3573(%var_3492: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) {
  %869 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %870 = %869.2;
  %871 = cast(%var_3492, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %876 = cast(%870, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %877 = shape_of(%var_3492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%var_3492, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %880 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %881 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %882 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %883 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %884 = @func_2880() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %885 = logical_or(%873, %874) /* ty=Tensor[(2, 13, 16), bool] */;
  %886 = %875.0;
  %887 = logical_xor(%878, %879) /* ty=Tensor[(2, 13, 16), int8] */;
  %888 = %880.2;
  %889 = %881.2;
  %890 = %882.0;
  %891 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %892 = @func_2965() /* ty=Tensor[(10, 11, 6), float32] */;
  %893 = %883.0;
  %894 = %884.0;
  (%885, %886, %887, %888, %889, %890, %891, %892, %893, %894)
}

def @func_14375(%var_14363: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
  %895 = cast(%var_14363, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
  %896 = @func_12135() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %897 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %898 = tan(%895) /* ty=Tensor[(4, 15, 2), float32] */;
  %899 = %896.0;
  %900 = %897.0;
  (%898, %899, %900)
}

def @func_6303() -> Tensor[(2, 13, 16), float64] {
  %901 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %901.0
}

def @func_14681() -> (Tensor[(2, 13, 16), float64],) {
  %902 = @func_6378() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %903 = %902.0;
  (%903,)
}

def @func_10161() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], uint64, uint64) {
  %904 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %905 = reshape(%904, newshape=[]) /* ty=uint64 */;
  %906 = @func_7543(%905) /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) */;
  %907 = @func_10060() /* ty=Tensor[(2, 13, 16), float64] */;
  %908 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %909 = %906.4;
  (%907, %908, %909, meta[relay.Constant][28] /* ty=uint64 */)
}

def @func_8436(%var_8398: Tensor[(450), float32], %var_8426: Tensor[(112, 2), uint16]) -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(416), float64], Tensor[(112, 2), uint32]) {
  %910 = @func_5115() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %911 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %912 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %913 = cast(%var_8398, dtype="float32") /* ty=Tensor[(450), float32] */;
  %914 = reshape(%913, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %915 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
  %916 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %917 = %916.2;
  %918 = cast(meta[relay.Constant][29] /* ty=Tensor[(112, 2), float32] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(2), int32] */;
  %920 = cast(%917, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %922 = maximum(%920, %921) /* ty=Tensor[(112, 2), uint16] */;
  %923 = cast(%var_8426, dtype="uint32") /* ty=Tensor[(112, 2), uint32] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(2), int32] */;
  %925 = cast(%922, dtype="uint32") /* ty=Tensor[(112, 2), uint32] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %927 = %910.0;
  %928 = %911.0;
  %929 = %912.0;
  %930 = @func_1225(%914) /* ty=Tensor[(15, 2, 15), float32] */;
  %931 = %915.3;
  %932 = multiply(%925, %926) /* ty=Tensor[(112, 2), uint32] */;
  (%927, %928, %929, %930, %var_8398, %931, %932)
}

def @func_13639() -> (Tensor[(2, 16, 7), float32],) {
  %933 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %934 = %933.0;
  (%934,)
}

def @func_1225(%var_1208: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
  %935 = cast(%var_1208, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %936 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(15, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%937, %938) /* ty=Tensor[(15, 2, 15), float32] */
}

def @func_10826() -> (Tensor[(112, 2), bool],) {
  %939 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
  %940 = cast(meta[relay.Constant][31] /* ty=Tensor[(112, 2), float32] */, dtype="bool") /* ty=Tensor[(112, 2), bool] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(2), int32] */;
  %942 = cast(%939, dtype="bool") /* ty=Tensor[(112, 2), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %944 = equal(%942, %943) /* ty=Tensor[(112, 2), bool] */;
  (%944,)
}

def @func_104(%var_86: Tensor[(2, 13, 16), float64], %var_87: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), float64],) {
  %945 = cast(%var_87, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %946 = shape_of(%var_86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %947 = cast(%var_86, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %949 = floor_divide(%947, %948) /* ty=Tensor[(2, 13, 16), float64] */;
  %950 = cast(%949, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %951 = acosh(%950) /* ty=Tensor[(2, 13, 16), float64] */;
  (%951,)
}

def @func_7199(%var_7175: Tensor[(15, 16, 9), float64]) -> (Tensor[(15, 16, 9), float64], Tensor[(2, 13, 16), float64]) {
  %952 = cast(%var_7175, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
  %953 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %954 = asinh(%952) /* ty=Tensor[(15, 16, 9), float64] */;
  %955 = %953.0;
  (%954, %955)
}

def @func_2556(%var_2543: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %956 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %957 = %956.0;
  %958 = cast(%var_2543, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %962 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %963 = cast(%957, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %964 = equal(%960, %961) /* ty=Tensor[(2, 13, 16), bool] */;
  %965 = %962.0;
  %966 = cosh(%963) /* ty=Tensor[(2, 13, 16), float64] */;
  (%964, %965, %966)
}

def @func_2815() -> (Tensor[(2, 16, 7), float32],) {
  %967 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %968 = %967.2;
  (%968,)
}

def @func_5828() -> Tensor[(10, 11, 6), float32] {
  %969 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %969.0
}

def @func_12135() -> (Tensor[(10, 11, 6), float32],) {
  %970 = @func_7038() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %971 = %970.0;
  (%971,)
}

def @func_707() -> (Tensor[(2, 16, 7), float32],) {
  %972 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %973 = sigmoid(%972) /* ty=Tensor[(2, 16, 7), float32] */;
  (%973,)
}

def @func_5433() -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) {
  %974 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %975 = %974.0;
  %976 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  (%975, %976)
}

def @func_6726() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_15194(%var_15150: Tensor[(11, 16, 10), int32], %var_15180: Tensor[(560), float32]) -> (Tensor[(11, 16, 10), int32], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %977 = cast(%var_15150, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %978 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(11, 16, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 16, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %981 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %982 = cast(%var_15180, dtype="float32") /* ty=Tensor[(560), float32] */;
  %983 = reshape(%982, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %984 = @func_7920(%983) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) */;
  %985 = @func_13668() /* ty=Tensor[(2, 13, 16), float32] */;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %987 = reshape(%986, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %988 = @func_1533(%987) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) */;
  %989 = maximum(%979, %980) /* ty=Tensor[(11, 16, 10), int32] */;
  %990 = %981.1;
  %991 = %984.0;
  %992 = %988.1;
  %993 = @func_4775() /* ty=Tensor[(2, 16, 7), float32] */;
  (%989, %985, %990, %991, %var_15180, %992, %993)
}

def @func_15399() -> Tensor[(2, 13, 16), float32] {
  @func_13564() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_6288() -> (Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) {
  %994 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %995 = @func_2965() /* ty=Tensor[(10, 11, 6), float32] */;
  %996 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
  %997 = cast(%996, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %998 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%995, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = %994.1;
  %1002 = logical_and(%999, %1000) /* ty=Tensor[(10, 11, 6), bool] */;
  (%1001, %1002)
}

def @func_5075() -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) {
  %1003 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1004 = %1003.1;
  %1005 = cast(%1004, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %1006 = cast(meta[relay.Constant][34] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1007 = reshape(%1005, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %1008 = reshape(%1006, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %1009 = @func_1310(%1007, %1008) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %1010 = %1009.2;
  %1011 = @func_4798() /* ty=Tensor[(416), float64] */;
  (%1004, %1010, meta[relay.Constant][34] /* ty=Tensor[(864), uint64] */, %1011)
}

def @func_13185() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), bool]) {
  %1012 = @func_12655() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1013 = @func_9552() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) */;
  %1014 = @func_10098() /* ty=(Tensor[(2, 16, 7), bool],) */;
  %1015 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
  %1016 = %1012.0;
  %1017 = %1013.1;
  %1018 = %1014.0;
  %1019 = @func_8467() /* ty=Tensor[(2, 13, 16), bool] */;
  %1020 = %1015.0;
  (%1016, %1017, %1018, %1019, %1020)
}

def @func_15415() -> (Tensor[(864), uint64],) {
  %1021 = @func_15391() /* ty=(Tensor[(416), float64], Tensor[(864), uint64]) */;
  %1022 = %1021.1;
  (%1022,)
}

def @func_7959() -> (Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
  %1023 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1024 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %1025 = %1024.2;
  %1026 = cast(%1025, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1027 = %1023.0;
  %1028 = sigmoid(%1026) /* ty=Tensor[(112, 2), float32] */;
  (%1027, %1028)
}

def @func_2310() -> Tensor[(112, 2), float32] {
  %1029 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %1029.3
}

def @func_9882() -> Tensor[(2, 16, 7), float64] {
  %1030 = @func_3934() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) */;
  %1030.1
}

def @func_2566() -> Tensor[(2, 13, 16), float32] {
  %1031 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %1031.0
}

def @func_11594() -> Tensor[(112, 2), float32] {
  @func_2310() /* ty=Tensor[(112, 2), float32] */
}

def @func_3444(%var_3428: Tensor[(560), float32], %var_3429: Tensor[(864), uint64]) -> (Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) {
  %1032 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %1033 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %1034 = cast(%var_3428, dtype="float32") /* ty=Tensor[(560), float32] */;
  %1035 = cast(%var_3429, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1036 = reshape(%1034, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
  %1037 = reshape(%1035, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %1038 = @func_1614(%1036, %1037) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %1039 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %1040 = %1032.4;
  %1041 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %1042 = %1033.0;
  %1043 = %1038.4;
  %1044 = %1039.1;
  (%1040, %1041, %1042, %1043, %var_3428, %var_3429, %1044)
}

def @func_13391() -> (Tensor[(2, 13, 16), float64],) {
  %1045 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_5996() -> Tensor[(10, 11, 6), float32] {
  @func_5828() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_13457() -> Tensor[(2, 16, 7), float32] {
  @func_7434() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_7263(%var_7255: Tensor[(2, 8, 16), int64], %var_7256: Tensor[(2, 8, 16), int64]) -> Tensor[(2, 8, 16), int64] {
  %1047 = cast(%var_7256, dtype="int64") /* ty=Tensor[(2, 8, 16), int64] */;
  %1048 = shape_of(%var_7255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%var_7255, dtype="int64") /* ty=Tensor[(2, 8, 16), int64] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%1049, %1050) /* ty=Tensor[(2, 8, 16), int64] */
}

def @func_13358() -> (Tensor[(112, 2), float32], Tensor[(112, 2), float64]) {
  %1051 = @func_12728() /* ty=Tensor[(112, 2), float32] */;
  %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1053 = asin(%1052) /* ty=Tensor[(112, 2), float32] */;
  %1054 = cast(%1053, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %1055 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %1056 = acosh(%1054) /* ty=Tensor[(112, 2), float64] */;
  (%1055, %1056)
}

def @func_2674(%var_2643: Tensor[(112, 2), float32]) -> (Tensor[(864), uint64], Tensor[(112, 2), int16]) {
  %1057 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %1058 = cast(%1057, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1059 = log10(%1058) /* ty=Tensor[(112, 2), float32] */;
  %1060 = cast(%var_2643, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %1061 = shape_of(%1057, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1062 = cast(%1057, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1064 = power(%1062, %1063) /* ty=Tensor[(112, 2), float64] */;
  %1065 = cast(%1064, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
  %1066 = shape_of(%1059, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1067 = cast(%1059, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1069 = @func_1340() /* ty=Tensor[(864), uint64] */;
  %1070 = right_shift(%1067, %1068) /* ty=Tensor[(112, 2), int16] */;
  (%1069, %1070)
}

def @func_4061(%var_4023: Tensor[(864), uint64]) -> (Tensor[(2, 13, 16), int8], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), uint8], Tensor[(2, 13, 16), uint8]) {
  %1071 = cast(%var_4023, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1072 = cast(%var_4023, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1073 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %1074 = cast(%1073, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1075 = reshape(%1071, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1076 = reshape(%1072, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1077 = reshape(%1074, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1078 = @func_479(%1075, %1076, %1077) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %1079 = %1078.2;
  %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(416), float32] */;
  %1081 = cast(%1073, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1082 = reshape(%1080, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1083 = reshape(%1081, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1084 = @func_2736(%1082, %1083) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1085 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %1087 = cast(%1073, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1088 = reshape(%1086, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1089 = reshape(%1087, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1090 = @func_2736(%1088, %1089) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1091 = %1084.1;
  %1092 = %1090.1;
  (%1073, %1079, %var_4023, %1085, %1091, %1092)
}

def @func_4531(%var_4517: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) {
  %1093 = cast(%var_4517, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %1094 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1095 = cos(%1093) /* ty=Tensor[(5, 15, 8), float32] */;
  %1096 = %1094.0;
  (%1095, %1096)
}

def @func_4775() -> Tensor[(2, 16, 7), float32] {
  %1097 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
  %1097.1
}

def @func_7158() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) {
  %1098 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1099 = %1098.0;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %1101 = exp(%1100) /* ty=Tensor[(2, 13, 16), float32] */;
  %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %1103 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %1104 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %1105 = asinh(%1102) /* ty=Tensor[(2, 13, 16), float32] */;
  %1106 = %1103.1;
  (%1104, %1105, %1106)
}

def @func_7434() -> Tensor[(2, 16, 7), float32] {
  %1107 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %1107.0
}

def @func_3268() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  %1108 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1109 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1110 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %1111 = %1108.0;
  %1112 = %1109.0;
  %1113 = %1110.0;
  (%1111, %1112, %1113)
}

def @func_13617() -> Tensor[(2, 16, 7), float32] {
  %1114 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %1114.1
}

def @func_11876() -> Tensor[(416), float64] {
  @func_2368() /* ty=Tensor[(416), float64] */
}

def @func_9552() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
  %1115 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %1116 = @func_8729() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) */;
  %1117 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
  %1118 = %1115.1;
  %1119 = %1116.0;
  (%1117, %1118, %1119)
}

def @func_6647() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) {
  %1120 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
  %1121 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %1122 = %1120.1;
  %1123 = %1121.1;
  (%1122, %1123)
}

def @func_14889(%var_14803: Tensor[(2, 16, 7), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), bool]) {
  %1124 = @func_11686() /* ty=(Tensor[(864), uint64], Tensor[(864), uint64]) */;
  %1125 = @func_10707() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %1126 = @func_10098() /* ty=(Tensor[(2, 16, 7), bool],) */;
  %1127 = @func_12655() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1128 = %1127.0;
  %1129 = cast(%var_14803, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%1128, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1133 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
  %1134 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
  %1135 = %1124.1;
  %1136 = %1125.0;
  %1137 = %1126.0;
  %1138 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %1139 = subtract(%1131, %1132) /* ty=Tensor[(2, 16, 7), float32] */;
  %1140 = %1133.3;
  %1141 = %1134.0;
  (%1135, %1136, %1137, %1138, %1139, %1140, %1141)
}

def @func_13881(%var_13870: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64], Tensor[(360), float64]) {
  %1142 = @func_4014() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) */;
  %1143 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
  %1144 = @func_11686() /* ty=(Tensor[(864), uint64], Tensor[(864), uint64]) */;
  %1145 = cast(%var_13870, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1146 = reshape(%1145, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1147 = @func_12897(%1146) /* ty=(Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %1148 = %1142.1;
  %1149 = %1143.1;
  %1150 = %1144.1;
  %1151 = %1147.7;
  (%1148, %1149, %1150, %1151, %var_13870)
}

def @func_10135() -> (Tensor[(10, 11, 6), bool], Tensor[(416), float64]) {
  %1152 = @func_7290() /* ty=(Tensor[(10, 11, 6), bool],) */;
  %1153 = %1152.0;
  %1154 = @func_5476() /* ty=Tensor[(416), float64] */;
  (%1153, %1154)
}

def @func_11291() -> (Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
  %1155 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %1156 = cast(meta[relay.Constant][35] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1157 = reshape(%1156, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1158 = @func_3573(%1157) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) */;
  %1159 = @func_6500() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %1160 = %1155.0;
  %1161 = %1158.1;
  %1162 = %1159.0;
  (%1160, %1161, meta[relay.Constant][35] /* ty=Tensor[(416), float64] */, %1162)
}

def @func_4162(%var_4152: uint64) -> Tensor[(7, 4, 12), uint64] {
  %1163 = cast(%var_4152, dtype="uint64") /* ty=uint64 */;
  %1164 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 4, 12), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4, 12), uint64] */;
  multiply(%1163, %1164) /* ty=Tensor[(7, 4, 12), uint64] */
}

def @func_4139() -> (Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) {
  %1165 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1166 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %1167 = @func_2941() /* ty=Tensor[(416), float64] */;
  %1168 = %1165.0;
  %1169 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
  %1170 = %1166.3;
  (%1167, %1168, %1169, %1170)
}

def @func_1814() -> Tensor[(10, 11, 6), float32] {
  %1171 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  atanh(%1171) /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_8002() -> Tensor[(864), uint64] {
  %1172 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %1172.5
}

def @func_11505() -> (Tensor[(2, 13, 16), float32],) {
  %1173 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %1174 = %1173.0;
  (%1174,)
}

def @func_3090() -> (Tensor[(2, 13, 16), float32],) {
  %1175 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %1176 = %1175.1;
  (%1176,)
}

def @func_2223() -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) {
  %1177 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %1178 = cast(meta[relay.Constant][38] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %1179 = reshape(%1178, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %1180 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1181 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %1182 = cast(%1181, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %1183 = %1177.1;
  %1184 = @func_1225(%1179) /* ty=Tensor[(15, 2, 15), float32] */;
  %1185 = %1180.0;
  %1186 = log(%1182) /* ty=Tensor[(112, 2), float64] */;
  (%1183, %1184, meta[relay.Constant][38] /* ty=Tensor[(450), float32] */, %1185, %1186)
}

def @func_3016() -> Tensor[(2, 16, 7), float32] {
  %1187 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1187.0
}

def @func_8131() -> (Tensor[(112, 2), float32],) {
  %1188 = @func_7022() /* ty=(Tensor[(112, 2), float32],) */;
  %1189 = %1188.0;
  (%1189,)
}

def @func_10861() -> (Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) {
  %1190 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
  %1191 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
  %1192 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %1193 = %1190.0;
  %1194 = %1191.0;
  %1195 = %1192.2;
  (%1193, %1194, %1195)
}

def @func_1488() -> (Tensor[(2, 13, 16), float64],) {
  %1196 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  (%1196,)
}

def @func_752() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
  %1197 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1198 = cast(meta[relay.Constant][39] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1199 = cast(meta[relay.Constant][39] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1200 = reshape(%1198, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1201 = reshape(%1199, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1202 = @func_104(%1200, %1201) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1203 = cast(meta[relay.Constant][40] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1204 = cast(meta[relay.Constant][40] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1205 = cast(meta[relay.Constant][39] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1206 = reshape(%1203, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1207 = reshape(%1204, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1208 = reshape(%1205, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1209 = @func_479(%1206, %1207, %1208) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %1210 = %1197.0;
  %1211 = %1202.0;
  %1212 = %1209.1;
  (%1210, %1211, meta[relay.Constant][39] /* ty=Tensor[(416), float64] */, %1212, meta[relay.Constant][40] /* ty=Tensor[(864), uint64] */)
}

def @func_2801() -> Tensor[(2, 13, 16), float32] {
  @func_2181() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_6480(%var_6464: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 13, 16), float64]) {
  %1213 = cast(%var_6464, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1214 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(10, 13, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 13, 10), uint64] */, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1217 = less_equal(%1215, %1216) /* ty=Tensor[(10, 13, 10), bool] */;
  %1218 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
  (%1217, %1218)
}

def @func_12997(%var_12960: Tensor[(14, 6, 1), uint64], %var_12961: Tensor[(14, 6, 6), uint64], %var_12993: Tensor[(14, 6, 14), uint64]) -> (Tensor[(14, 6, 6), uint64], Tensor[(14, 6, 14), float64]) {
  %1219 = cast(%var_12960, dtype="uint64") /* ty=Tensor[(14, 6, 1), uint64] */;
  %1220 = cast(%var_12961, dtype="uint64") /* ty=Tensor[(14, 6, 6), uint64] */;
  %1221 = cast(%var_12960, dtype="float64") /* ty=Tensor[(14, 6, 1), float64] */;
  %1222 = cast(%var_12993, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %1223 = left_shift(%1219, %1220) /* ty=Tensor[(14, 6, 6), uint64] */;
  %1224 = floor_mod(%1221, %1222) /* ty=Tensor[(14, 6, 14), float64] */;
  (%1223, %1224)
}

def @func_12359() -> Tensor[(2, 13, 16), float32] {
  %1225 = @func_11505() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %1225.0
}

def @func_10292(%var_10282: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) {
  %1226 = cast(meta[relay.Constant][42] /* ty=Tensor[(208, 2), float32] */, dtype="float32") /* ty=Tensor[(208, 2), float32] */;
  %1227 = cast(meta[relay.Constant][42] /* ty=Tensor[(208, 2), float32] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %1228 = reshape(%1226, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1229 = reshape(%1227, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1230 = @func_2736(%1228, %1229) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1231 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %1232 = cast(%var_10282, dtype="float32") /* ty=Tensor[(560), float32] */;
  %1233 = reshape(%1232, newshape=[4, 140]) /* ty=Tensor[(4, 140), float32] */;
  %1234 = @func_4599(%1233) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) */;
  %1235 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %1236 = %1230.1;
  %1237 = %1231.2;
  %1238 = %1234.0;
  (%1235, %1236, meta[relay.Constant][42] /* ty=Tensor[(208, 2), float32] */, %1237, %1238, %var_10282)
}

def @func_13228() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float64], Tensor[(660), float32]) {
  %1239 = @func_8304() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1240 = cast(meta[relay.Constant][43] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1241 = reshape(%1240, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float32] */;
  %1242 = @func_4688(%1241) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) */;
  %1243 = %1239.0;
  %1244 = %1242.2;
  (%1243, %1244, meta[relay.Constant][43] /* ty=Tensor[(660), float32] */)
}

def @func_14946() -> Tensor[(10, 11, 6), float64] {
  %1245 = @func_10861() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) */;
  %1245.0
}

def @func_15391() -> (Tensor[(416), float64], Tensor[(864), uint64]) {
  %1246 = @func_2368() /* ty=Tensor[(416), float64] */;
  %1247 = @func_10644() /* ty=Tensor[(864), uint64] */;
  (%1246, %1247)
}

def @main(%var_15564: Tensor[(8, 1, 5), uint16]) -> (Tensor[(8, 10, 5), uint16],) {
  %1248 = cast(%var_15564, dtype="uint16") /* ty=Tensor[(8, 1, 5), uint16] */;
  %1249 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 10, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 5), uint16] */;
  %1250 = bitwise_and(%1248, %1249) /* ty=Tensor[(8, 10, 5), uint16] */;
  (%1250,)
}

def @func_14645() -> (Tensor[(2, 13, 16), int8],) {
  %1251 = @func_9066() /* ty=(Tensor[(2, 13, 16), int8],) */;
  %1252 = %1251.0;
  (%1252,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2463(%var_2461: Tensor[(560), float32], %var_2462: Tensor[(216, 4), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) {
  %15 = fn (%var_2449: Tensor[(560), float32], %var_2450: Tensor[(216, 4), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) {
    %0 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1 = cast(%var_2449, dtype="float32") /* ty=Tensor[(560), float32] */;
    %2 = cast(%var_2450, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
    %3 = reshape(%1, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
    %4 = reshape(%2, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %5 = @func_1614(%3, %4) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
    %6 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
    %7 = cast(%6, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %8 = cast(%6, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %9 = reshape(%7, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %10 = reshape(%8, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %11 = @func_104(%9, %10) /* ty=(Tensor[(2, 13, 16), float64],) */;
    %12 = %0.0;
    %13 = %5.4;
    %14 = %11.0;
    (%12, %6, %13, %var_2449, %var_2450, %14)
  };
  %15(%var_2461, %var_2462) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */
}

def @func_1685() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %22 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
    %16 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %17 = %16.3;
    %18 = cast(%17, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %19 = reshape(%18, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %20 = @func_813(%19) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
    %21 = %20.0;
    (%17, %21)
  };
  %22() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */
}

def @func_5935() -> (Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) {
  @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */
}

def @func_6649() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) {
  @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_10060() -> Tensor[(2, 13, 16), float64] {
  %23 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %23.0
}

def @func_9067() -> (Tensor[(2, 13, 16), int8],) {
  %25 = fn () -> (Tensor[(2, 13, 16), int8],) {
    %24 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
    (%24,)
  };
  %25() /* ty=(Tensor[(2, 13, 16), int8],) */
}

def @func_13847() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
  %26 = @func_2779() /* ty=Tensor[(864), uint64] */;
  %27 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %28 = @func_3883() /* ty=Tensor[(2, 16, 7), float32] */;
  (%26, %27, %28)
}

def @func_1190() -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) {
  %29 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %32 = %29.2;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(416), float64] */;
  %34 = reshape(%30, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %35 = reshape(%31, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %36 = reshape(%33, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %37 = @func_479(%34, %35, %36) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %38 = %37.2;
  (%32, %38, meta[relay.Constant][0] /* ty=Tensor[(864), uint64] */)
}

def @func_11530(%var_11526: Tensor[(560), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) {
  %39 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(108, 8), uint64] */, dtype="uint64") /* ty=Tensor[(108, 8), uint64] */;
  %41 = reshape(%40, newshape=[864, 1]) /* ty=Tensor[(864, 1), uint64] */;
  %42 = @func_2512(%41) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) */;
  %43 = cast(%var_11526, dtype="float32") /* ty=Tensor[(560), float32] */;
  %44 = reshape(%43, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %45 = @func_10292(%44) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) */;
  %46 = %39.0;
  %47 = %42.1;
  %48 = %45.0;
  (%46, %47, meta[relay.Constant][1] /* ty=Tensor[(108, 8), uint64] */, %48, %var_11526)
}

def @func_10027() -> Tensor[(2, 16, 7), float32] {
  %49 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %49.2
}

def @func_11193() -> (Tensor[(2, 13, 16), float64],) {
  @func_11191() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_9772(%var_9727: Tensor[(50, 9), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(50, 9), float64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(6, 5, 15), float64], Tensor[(2, 16, 7), float32]) {
  %50 = @func_9487() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %51 = @func_8528() /* ty=(Tensor[(12, 6, 12), float32],) */;
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %54 = reshape(%52, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %55 = reshape(%53, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %56 = @func_104(%54, %55) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %58 = reshape(%57, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %59 = @func_2556(%58) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %60 = cast(%var_9727, dtype="float64") /* ty=Tensor[(50, 9), float64] */;
  %61 = reshape(%60, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %62 = @func_8158(%61) /* ty=Tensor[(6, 5, 15), float64] */;
  %63 = cast(%62, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
  %64 = %50.0;
  %65 = %51.0;
  %66 = %56.0;
  %67 = %59.0;
  %68 = @func_4798() /* ty=Tensor[(416), float64] */;
  %69 = asinh(%63) /* ty=Tensor[(6, 5, 15), float64] */;
  %70 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  (%64, %65, %66, meta[relay.Constant][2] /* ty=Tensor[(416), float64] */, %var_9727, %67, %68, %69, %70)
}

def @func_11688() -> (Tensor[(864), uint64], Tensor[(864), uint64]) {
  @func_11686() /* ty=(Tensor[(864), uint64], Tensor[(864), uint64]) */
}

def @func_1968() -> Tensor[(112, 2), float32] {
  %72 = fn () -> Tensor[(112, 2), float32] {
    %71 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
    %71.2
  };
  %72() /* ty=Tensor[(112, 2), float32] */
}

def @func_4164(%var_4163: uint64) -> Tensor[(7, 4, 12), uint64] {
  %75 = fn (%var_4152: uint64) -> Tensor[(7, 4, 12), uint64] {
    %73 = cast(%var_4152, dtype="uint64") /* ty=uint64 */;
    %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 4, 12), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4, 12), uint64] */;
    multiply(%73, %74) /* ty=Tensor[(7, 4, 12), uint64] */
  };
  %75(%var_4163) /* ty=Tensor[(7, 4, 12), uint64] */
}

def @func_5441() -> (Tensor[(2, 16, 7), float32],) {
  %76 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %77 = %76.1;
  (%77,)
}

def @func_8530() -> (Tensor[(12, 6, 12), float32],) {
  @func_8528() /* ty=(Tensor[(12, 6, 12), float32],) */
}

def @func_9043() -> (Tensor[(2, 13, 16), float64],) {
  @func_9041() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_14633() -> Tensor[(10, 11, 6), float32] {
  @func_14631() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_14042() -> (Tensor[(416), float64],) {
  %80 = fn () -> (Tensor[(416), float64],) {
    %78 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
    %79 = %78.1;
    (%79,)
  };
  %80() /* ty=(Tensor[(416), float64],) */
}

def @func_10062() -> Tensor[(2, 13, 16), float64] {
  @func_10060() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_1341() -> Tensor[(864), uint64] {
  %82 = fn () -> Tensor[(864), uint64] {
    %81 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %81.4
  };
  %82() /* ty=Tensor[(864), uint64] */
}

def @func_1489() -> (Tensor[(2, 13, 16), float64],) {
  %84 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %83 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
    (%83,)
  };
  %84() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_7159() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) {
  %94 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) {
    %85 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %86 = %85.0;
    %87 = cast(%86, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    %88 = exp(%87) /* ty=Tensor[(2, 13, 16), float32] */;
    %89 = cast(%88, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    %90 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
    %91 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
    %92 = asinh(%89) /* ty=Tensor[(2, 13, 16), float32] */;
    %93 = %90.1;
    (%91, %92, %93)
  };
  %94() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */
}

def @func_5634() -> Tensor[(2, 13, 16), float64] {
  @func_5632() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_13502() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  @func_13500() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) */
}

def @func_3091() -> (Tensor[(2, 13, 16), float32],) {
  %97 = fn () -> (Tensor[(2, 13, 16), float32],) {
    %95 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
    %96 = %95.1;
    (%96,)
  };
  %97() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_13641() -> (Tensor[(2, 16, 7), float32],) {
  @func_13639() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_14681() -> (Tensor[(2, 13, 16), float64],) {
  %98 = @func_6378() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %99 = %98.0;
  (%99,)
}

def @func_3935() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) {
  %107 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) {
    %100 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
    %101 = cast(%100, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %103 = reshape(%101, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
    %104 = reshape(%102, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %105 = @func_1310(%103, %104) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %106 = %105.0;
    (%100, %106, meta[relay.Constant][4] /* ty=Tensor[(864), uint64] */)
  };
  %107() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) */
}

def @func_5253(%var_5210: Tensor[(5, 90), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) {
  %108 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 90), float32] */, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %110 = reshape(%109, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 90), float32] */, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %112 = log10(%111) /* ty=Tensor[(5, 90), float32] */;
  %113 = cast(%var_5210, dtype="bool") /* ty=Tensor[(5, 90), bool] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(2), int32] */;
  %115 = cast(%112, dtype="bool") /* ty=Tensor[(5, 90), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %117 = cast(%var_5210, dtype="float64") /* ty=Tensor[(5, 90), float64] */;
  %118 = cast(%112, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %119 = %108.0;
  %120 = @func_1225(%110) /* ty=Tensor[(15, 2, 15), float32] */;
  %121 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %122 = less(%115, %116) /* ty=Tensor[(5, 90), bool] */;
  %123 = erf(%117) /* ty=Tensor[(5, 90), float64] */;
  %124 = exp(%118) /* ty=Tensor[(5, 90), float32] */;
  (%119, %120, %121, %122, %123, %124)
}

def @func_5974(%var_5973: Tensor[(112, 2), float32]) -> Tensor[(112, 2), int32] {
  %131 = fn (%var_5955: Tensor[(112, 2), float32]) -> Tensor[(112, 2), int32] {
    %125 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
    %126 = %125.1;
    %127 = cast(%var_5955, dtype="int32") /* ty=Tensor[(112, 2), int32] */;
    %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(2), int32] */;
    %129 = cast(%126, dtype="int32") /* ty=Tensor[(112, 2), int32] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    logical_xor(%129, %130) /* ty=Tensor[(112, 2), int32] */
  };
  %131(%var_5973) /* ty=Tensor[(112, 2), int32] */
}

def @func_7202(%var_7200: Tensor[(15, 16, 9), float64]) -> (Tensor[(15, 16, 9), float64], Tensor[(2, 13, 16), float64]) {
  @func_7199(%var_7200) /* ty=(Tensor[(15, 16, 9), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_2025() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) {
  @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */
}

def @func_1535(%var_1534: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) {
  %144 = fn (%var_1517: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) {
    %132 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
    %133 = cast(%var_1517, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%132, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %137 = logical_and(%135, %136) /* ty=Tensor[(2, 13, 16), bool] */;
    %138 = cast(%137, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %139 = cast(%137, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %140 = reshape(%138, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %141 = reshape(%139, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %142 = @func_104(%140, %141) /* ty=(Tensor[(2, 13, 16), float64],) */;
    %143 = %142.0;
    (%137, %143)
  };
  %144(%var_1534) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) */
}

def @func_9469() -> (Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) {
  @func_9467() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) */
}

def @func_10393(%var_10363: Tensor[(11, 1, 12), float64], %var_10367: Tensor[(560, 1), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) {
  %145 = cast(%var_10367, dtype="float32") /* ty=Tensor[(560, 1), float32] */;
  %146 = reshape(%145, newshape=[4, 140]) /* ty=Tensor[(4, 140), float32] */;
  %147 = @func_4599(%146) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) */;
  %148 = %147.0;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %150 = cast(%148, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %151 = reshape(%149, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %152 = reshape(%150, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %153 = @func_2736(%151, %152) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %154 = cast(%var_10363, dtype="float64") /* ty=Tensor[(11, 1, 12), float64] */;
  %155 = sinh(%154) /* ty=Tensor[(11, 1, 12), float64] */;
  %156 = cast(%155, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %157 = atanh(%156) /* ty=Tensor[(11, 1, 12), float32] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %159 = shape_of(%var_10363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%var_10363, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %162 = %153.1;
  %163 = maximum(%160, %161) /* ty=Tensor[(11, ?, 12), float32] */;
  (%148, %var_10367, %162, %163)
}

def @func_13238() -> (Tensor[(416), float64],) {
  %164 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %165 = %164.0;
  (%165,)
}

def @func_4284() -> Tensor[(2, 13, 16), float64] {
  %167 = fn () -> Tensor[(2, 13, 16), float64] {
    %166 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %166.1
  };
  %167() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_4800() -> Tensor[(416), float64] {
  @func_4798() /* ty=Tensor[(416), float64] */
}

def @func_13359() -> (Tensor[(112, 2), float32], Tensor[(112, 2), float64]) {
  %174 = fn () -> (Tensor[(112, 2), float32], Tensor[(112, 2), float64]) {
    %168 = @func_12728() /* ty=Tensor[(112, 2), float32] */;
    %169 = cast(%168, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
    %170 = asin(%169) /* ty=Tensor[(112, 2), float32] */;
    %171 = cast(%170, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %172 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
    %173 = acosh(%171) /* ty=Tensor[(112, 2), float64] */;
    (%172, %173)
  };
  %174() /* ty=(Tensor[(112, 2), float32], Tensor[(112, 2), float64]) */
}

def @func_13066(%var_13062: Tensor[(1, 9, 5), float64]) -> Tensor[(1, 9, 5), float64] {
  %175 = cast(%var_13062, dtype="float64") /* ty=Tensor[(1, 9, 5), float64] */;
  cos(%175) /* ty=Tensor[(1, 9, 5), float64] */
}

def @func_8344() -> (Tensor[(2, 16, 7), float32],) {
  %177 = fn () -> (Tensor[(2, 16, 7), float32],) {
    %176 = @func_4775() /* ty=Tensor[(2, 16, 7), float32] */;
    (%176,)
  };
  %177() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_1815() -> Tensor[(10, 11, 6), float32] {
  %179 = fn () -> Tensor[(10, 11, 6), float32] {
    %178 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
    atanh(%178) /* ty=Tensor[(10, 11, 6), float32] */
  };
  %179() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_7040() -> (Tensor[(10, 11, 6), float32],) {
  @func_7038() /* ty=(Tensor[(10, 11, 6), float32],) */
}

def @func_12361() -> Tensor[(2, 13, 16), float32] {
  @func_12359() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_8003() -> Tensor[(864), uint64] {
  %181 = fn () -> Tensor[(864), uint64] {
    %180 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %180.5
  };
  %181() /* ty=Tensor[(864), uint64] */
}

def @func_14002() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64]) {
  %185 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64]) {
    %182 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
    %183 = %182.1;
    %184 = @func_4283() /* ty=Tensor[(2, 13, 16), float64] */;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_13069(%var_13067: Tensor[(1, 9, 5), float64]) -> Tensor[(1, 9, 5), float64] {
  @func_13066(%var_13067) /* ty=Tensor[(1, 9, 5), float64] */
}

def @func_2224() -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) {
  %196 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) {
    %186 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %188 = reshape(%187, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
    %189 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %190 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
    %191 = cast(%190, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %192 = %186.1;
    %193 = @func_1225(%188) /* ty=Tensor[(15, 2, 15), float32] */;
    %194 = %189.0;
    %195 = log(%191) /* ty=Tensor[(112, 2), float64] */;
    (%192, %193, meta[relay.Constant][7] /* ty=Tensor[(450), float32] */, %194, %195)
  };
  %196() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */
}

def @func_2512(%var_2496: Tensor[(864, 1), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) {
  %197 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %199 = cast(%197, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %200 = cast(%var_2496, dtype="uint64") /* ty=Tensor[(864, 1), uint64] */;
  %201 = reshape(%199, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %202 = reshape(%200, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %203 = @func_1310(%201, %202) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %204 = %203.3;
  %205 = cast(%204, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %206 = cast(%var_2496, dtype="uint16") /* ty=Tensor[(864, 1), uint16] */;
  %207 = atanh(%198) /* ty=Tensor[(2, 16, 7), float64] */;
  %208 = maximum(%205, %206) /* ty=Tensor[(864, 416), uint16] */;
  (%207, %208)
}

def @func_1085() -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) {
  @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */
}

def @func_2739(%var_2737: Tensor[(2, 13, 16), float32], %var_2738: Tensor[(2, 13, 16), float64]) -> (Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) {
  %222 = fn (%var_2713: Tensor[(2, 13, 16), float32], %var_2731: Tensor[(2, 13, 16), float64]) -> (Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) {
    %209 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %210 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
    %211 = cast(%var_2713, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%210, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %215 = minimum(%213, %214) /* ty=Tensor[(2, 13, 16), float64] */;
    %216 = cast(%var_2731, dtype="uint8") /* ty=Tensor[(2, 13, 16), uint8] */;
    %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%215, dtype="uint8") /* ty=Tensor[(2, 13, 16), uint8] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %220 = %209.2;
    %221 = add(%218, %219) /* ty=Tensor[(2, 13, 16), uint8] */;
    (%220, %221)
  };
  %222(%var_2737, %var_2738) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */
}

def @func_8440(%var_8438: Tensor[(450), float32], %var_8439: Tensor[(112, 2), uint16]) -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(416), float64], Tensor[(112, 2), uint32]) {
  @func_8436(%var_8438, %var_8439) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(416), float64], Tensor[(112, 2), uint32]) */
}

def @func_11487(%var_11472: uint64, %var_11479: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(7, 4, 12), uint64], uint64, Tensor[(864), uint64], Tensor[(5, 12, 6), float64], Tensor[(360), float64], Tensor[(864), uint64]) {
  %223 = cast(%var_11472, dtype="uint64") /* ty=uint64 */;
  %224 = reshape(%223, newshape=[]) /* ty=uint64 */;
  %225 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %226 = cast(%var_11479, dtype="float64") /* ty=Tensor[(360), float64] */;
  %227 = reshape(%226, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %228 = @func_8912(%227) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %229 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %230 = @func_4162(%224) /* ty=Tensor[(7, 4, 12), uint64] */;
  %231 = %225.1;
  %232 = %228.0;
  %233 = @func_2779() /* ty=Tensor[(864), uint64] */;
  (%229, %230, %var_11472, %231, %232, %var_11479, %233)
}

def @func_13849() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
  @func_13847() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_10397(%var_10395: Tensor[(11, 1, 12), float64], %var_10396: Tensor[(560, 1), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) {
  @func_10393(%var_10395, %var_10396) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) */
}

def @func_14162() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(10, 11, 6), uint16], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
  %234 = @func_9087() /* ty=Tensor[(2, 13, 16), float64] */;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %236 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %237 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %238 = @func_5632() /* ty=Tensor[(2, 13, 16), float64] */;
  %239 = sqrt(%235) /* ty=Tensor[(2, 13, 16), float32] */;
  %240 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %241 = %236.3;
  %242 = %237.0;
  %243 = @func_3043() /* ty=Tensor[(416), float64] */;
  (%238, %239, %240, %241, %242, %243)
}

def @func_3573(%var_3492: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) {
  %244 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %245 = %244.2;
  %246 = cast(%var_3492, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %251 = cast(%245, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %252 = shape_of(%var_3492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_3492, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %255 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %256 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %257 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %258 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %259 = @func_2880() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %260 = logical_or(%248, %249) /* ty=Tensor[(2, 13, 16), bool] */;
  %261 = %250.0;
  %262 = logical_xor(%253, %254) /* ty=Tensor[(2, 13, 16), int8] */;
  %263 = %255.2;
  %264 = %256.2;
  %265 = %257.0;
  %266 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %267 = @func_2965() /* ty=Tensor[(10, 11, 6), float32] */;
  %268 = %258.0;
  %269 = %259.0;
  (%260, %261, %262, %263, %264, %265, %266, %267, %268, %269)
}

def @func_5345(%var_5344: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(864), uint64], Tensor[(?, 560), bool]) {
  %283 = fn (%var_5332: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(864), uint64], Tensor[(?, 560), bool]) {
    %270 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 560), float32] */, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
    %271 = cast(%var_5332, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %272 = reshape(%270, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
    %273 = reshape(%271, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %274 = @func_1614(%272, %273) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
    %275 = %274.0;
    %276 = cast(%275, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
    %277 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(1, 560), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %278 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 560), float32] */, dtype="bool") /* ty=Tensor[(1, 560), bool] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %280 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
    %281 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
    %282 = equal(%278, %279) /* ty=Tensor[(?, 560), bool] */;
    (%280, %281, %var_5332, %282)
  };
  %283(%var_5344) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(864), uint64], Tensor[(?, 560), bool]) */
}

def @func_11851() -> (Tensor[(2, 16, 7), float32],) {
  %284 = @func_9487() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %285 = %284.0;
  (%285,)
}

def @func_11533(%var_11531: Tensor[(560), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) {
  @func_11530(%var_11531) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) */
}

def @func_13944() -> Tensor[(2, 13, 16), float32] {
  %286 = fn () -> Tensor[(2, 13, 16), float32] {
    @func_2181() /* ty=Tensor[(2, 13, 16), float32] */
  };
  %286() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_5848() -> (Tensor[(12, 6, 12), float32],) {
  %289 = fn () -> (Tensor[(12, 6, 12), float32],) {
    %287 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
    %288 = %287.1;
    (%288,)
  };
  %289() /* ty=(Tensor[(12, 6, 12), float32],) */
}

def @func_3293() -> Tensor[(2, 13, 16), float32] {
  @func_3291() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_13392() -> (Tensor[(2, 13, 16), float64],) {
  %292 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %290 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
    %291 = %290.0;
    (%291,)
  };
  %292() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_6040() -> Tensor[(2, 13, 16), float64] {
  @func_6038() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_4718() -> (Tensor[(2, 13, 16), float64],) {
  %295 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %293 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %294 = %293.0;
    (%294,)
  };
  %295() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_12997(%var_12960: Tensor[(14, 6, 1), uint64], %var_12961: Tensor[(14, 6, 6), uint64], %var_12993: Tensor[(14, 6, 14), uint64]) -> (Tensor[(14, 6, 6), uint64], Tensor[(14, 6, 14), float64]) {
  %296 = cast(%var_12960, dtype="uint64") /* ty=Tensor[(14, 6, 1), uint64] */;
  %297 = cast(%var_12961, dtype="uint64") /* ty=Tensor[(14, 6, 6), uint64] */;
  %298 = cast(%var_12960, dtype="float64") /* ty=Tensor[(14, 6, 1), float64] */;
  %299 = cast(%var_12993, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %300 = left_shift(%296, %297) /* ty=Tensor[(14, 6, 6), uint64] */;
  %301 = floor_mod(%298, %299) /* ty=Tensor[(14, 6, 14), float64] */;
  (%300, %301)
}

def @func_5533() -> Tensor[(2, 13, 16), float64] {
  @func_1394() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_7747() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) {
  %308 = fn () -> (Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) {
    %302 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %303 = @func_5433() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) */;
    %304 = @func_5996() /* ty=Tensor[(10, 11, 6), float32] */;
    %305 = %302.0;
    %306 = %303.0;
    %307 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
    (%304, %305, %306, %307)
  };
  %308() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) */
}

def @func_13565() -> Tensor[(2, 13, 16), float32] {
  %309 = fn () -> Tensor[(2, 13, 16), float32] {
    @func_12242() /* ty=Tensor[(2, 13, 16), float32] */
  };
  %309() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_7266(%var_7264: Tensor[(2, 8, 16), int64], %var_7265: Tensor[(2, 8, 16), int64]) -> Tensor[(2, 8, 16), int64] {
  %314 = fn (%var_7255: Tensor[(2, 8, 16), int64], %var_7256: Tensor[(2, 8, 16), int64]) -> Tensor[(2, 8, 16), int64] {
    %310 = cast(%var_7256, dtype="int64") /* ty=Tensor[(2, 8, 16), int64] */;
    %311 = shape_of(%var_7255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%var_7255, dtype="int64") /* ty=Tensor[(2, 8, 16), int64] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    multiply(%312, %313) /* ty=Tensor[(2, 8, 16), int64] */
  };
  %314(%var_7264, %var_7265) /* ty=Tensor[(2, 8, 16), int64] */
}

def @func_5933() -> (Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) {
  %315 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %316 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %317 = cast(meta[relay.Constant][9] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %318 = reshape(%317, newshape=[5, 90]) /* ty=Tensor[(5, 90), float32] */;
  %319 = @func_5253(%318) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) */;
  %320 = %315.0;
  %321 = %316.1;
  %322 = %319.1;
  (%320, %321, %322, meta[relay.Constant][9] /* ty=Tensor[(450), float32] */)
}

def @func_12729() -> Tensor[(112, 2), float32] {
  %324 = fn () -> Tensor[(112, 2), float32] {
    %323 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %323.3
  };
  %324() /* ty=Tensor[(112, 2), float32] */
}

def @func_1314(%var_1312: Tensor[(2, 16, 7), float32], %var_1313: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
  @func_1310(%var_1312, %var_1313) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */
}

def @func_2078() -> (Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) {
  %325 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %326 = cast(meta[relay.Constant][10] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %327 = reshape(%326, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %328 = @func_813(%327) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %329 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %330 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %331 = %330.1;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %333 = %325.5;
  %334 = %328.2;
  %335 = %329.1;
  %336 = acos(%332) /* ty=Tensor[(2, 16, 7), float32] */;
  (%333, %334, meta[relay.Constant][10] /* ty=Tensor[(416), float64] */, %335, %336)
}

def @func_11008() -> Tensor[(416), float64] {
  @func_6726() /* ty=Tensor[(416), float64] */
}

def @func_13500() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  %337 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %338 = %337.0;
  %339 = @func_3291() /* ty=Tensor[(2, 13, 16), float32] */;
  (%338, %339)
}

def @func_1950() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */
}

def @func_5699() -> Tensor[(2, 13, 16), float64] {
  @func_5533() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_9420() -> (Tensor[(112, 2), float32],) {
  %341 = fn () -> (Tensor[(112, 2), float32],) {
    %340 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
    (%340,)
  };
  %341() /* ty=(Tensor[(112, 2), float32],) */
}

def @func_14647() -> (Tensor[(2, 13, 16), int8],) {
  @func_14645() /* ty=(Tensor[(2, 13, 16), int8],) */
}

def @func_6303() -> Tensor[(2, 13, 16), float64] {
  %342 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %342.0
}

def @func_5535() -> Tensor[(2, 13, 16), float64] {
  @func_5533() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_2324() -> (Tensor[(2, 13, 16), float32],) {
  %343 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  (%343,)
}

def @func_2779() -> Tensor[(864), uint64] {
  %344 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %344.2
}

def @func_5677() -> (Tensor[(2, 13, 16), float64],) {
  @func_5675() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_9089() -> Tensor[(2, 13, 16), float64] {
  @func_9087() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_6728() -> Tensor[(416), float64] {
  @func_6726() /* ty=Tensor[(416), float64] */
}

def @func_11010() -> Tensor[(416), float64] {
  @func_11008() /* ty=Tensor[(416), float64] */
}

def @func_14645() -> (Tensor[(2, 13, 16), int8],) {
  %345 = @func_9066() /* ty=(Tensor[(2, 13, 16), int8],) */;
  %346 = %345.0;
  (%346,)
}

def @func_1383() -> Tensor[(2, 13, 16), float64] {
  %347 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %347.3
}

def @func_8305() -> (Tensor[(2, 16, 7), float32],) {
  %350 = fn () -> (Tensor[(2, 16, 7), float32],) {
    %348 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %349 = %348.0;
    (%349,)
  };
  %350() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_708() -> (Tensor[(2, 16, 7), float32],) {
  %353 = fn () -> (Tensor[(2, 16, 7), float32],) {
    %351 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %352 = sigmoid(%351) /* ty=Tensor[(2, 16, 7), float32] */;
    (%352,)
  };
  %353() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_2326() -> (Tensor[(2, 13, 16), float32],) {
  @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_8468() -> Tensor[(2, 13, 16), bool] {
  %355 = fn () -> Tensor[(2, 13, 16), bool] {
    %354 = @func_5765() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) */;
    %354.1
  };
  %355() /* ty=Tensor[(2, 13, 16), bool] */
}

def @func_5028() -> (Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) {
  %356 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %357 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
  %358 = %356.0;
  %359 = %357.4;
  (%358, %359)
}

def @func_8160(%var_8159: Tensor[(6, 5, 15), float64]) -> Tensor[(6, 5, 15), float64] {
  %361 = fn (%var_8153: Tensor[(6, 5, 15), float64]) -> Tensor[(6, 5, 15), float64] {
    %360 = cast(%var_8153, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
    sigmoid(%360) /* ty=Tensor[(6, 5, 15), float64] */
  };
  %361(%var_8159) /* ty=Tensor[(6, 5, 15), float64] */
}

def @func_14739() -> (Tensor[(2, 16, 7), float32],) {
  %362 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %363 = %362.0;
  (%363,)
}

def @func_11272() -> (Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) {
  %371 = fn () -> (Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) {
    %364 = @func_9467() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) */;
    %365 = @func_8528() /* ty=(Tensor[(12, 6, 12), float32],) */;
    %366 = @func_8467() /* ty=Tensor[(2, 13, 16), bool] */;
    %367 = @func_2368() /* ty=Tensor[(416), float64] */;
    %368 = %364.0;
    %369 = %365.0;
    %370 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
    (%366, %367, %368, %369, %370)
  };
  %371() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_15278() -> (Tensor[(864), uint64],) {
  %374 = fn () -> (Tensor[(864), uint64],) {
    %372 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
    %373 = %372.0;
    (%373,)
  };
  %374() /* ty=(Tensor[(864), uint64],) */
}

def @func_8730() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) {
  %385 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) {
    %375 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
    %376 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
    %377 = @func_6314() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %378 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
    %379 = %375.0;
    %380 = %376.3;
    %381 = @func_7229() /* ty=Tensor[(15, 2, 15), float32] */;
    %382 = %377.0;
    %383 = %378.2;
    %384 = @func_7229() /* ty=Tensor[(15, 2, 15), float32] */;
    (%379, %380, %381, %382, %383, %384)
  };
  %385() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) */
}

def @func_15359() -> Tensor[(2, 13, 16), float32] {
  %387 = fn () -> Tensor[(2, 13, 16), float32] {
    %386 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %386.0
  };
  %387() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_2566() -> Tensor[(2, 13, 16), float32] {
  %388 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %388.0
}

def @func_11136() -> (Tensor[(2, 13, 16), float32], Tensor[(6, 5, 15), float64], Tensor[(450), float64]) {
  %389 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %390 = reshape(%389, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %391 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
  %392 = @func_8158(%390) /* ty=Tensor[(6, 5, 15), float64] */;
  (%391, %392, meta[relay.Constant][12] /* ty=Tensor[(450), float64] */)
}

def @func_11732() -> (Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %393 = @func_7038() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %394 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
  %395 = @func_3043() /* ty=Tensor[(416), float64] */;
  %396 = %393.0;
  %397 = %394.0;
  %398 = @func_3883() /* ty=Tensor[(2, 16, 7), float32] */;
  (%395, %396, %397, %398)
}

def @func_11138() -> (Tensor[(2, 13, 16), float32], Tensor[(6, 5, 15), float64], Tensor[(450), float64]) {
  @func_11136() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(6, 5, 15), float64], Tensor[(450), float64]) */
}

def @func_4924() -> (Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
  %401 = fn () -> (Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
    %399 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
    %400 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
    (%399, %400)
  };
  %401() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */
}

def @func_4064(%var_4062: Tensor[(864), uint64]) -> (Tensor[(2, 13, 16), int8], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), uint8], Tensor[(2, 13, 16), uint8]) {
  @func_4061(%var_4062) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), uint8], Tensor[(2, 13, 16), uint8]) */
}

def @func_6501() -> (Tensor[(2, 13, 16), float32],) {
  %403 = fn () -> (Tensor[(2, 13, 16), float32],) {
    %402 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
    (%402,)
  };
  %403() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_13385() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %404 = @func_7476() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %405 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %406 = %404.0;
  %407 = %405.0;
  (%406, %407)
}

def @func_14497() -> Tensor[(112, 2), float64] {
  %408 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  sinh(%409) /* ty=Tensor[(112, 2), float64] */
}

def @func_7851(%var_7850: Tensor[(224), float32]) -> (Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) {
  %417 = fn (%var_7836: Tensor[(224), float32]) -> (Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) {
    %410 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
    %411 = cast(%var_7836, dtype="float32") /* ty=Tensor[(224), float32] */;
    %412 = reshape(%411, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
    %413 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
    %414 = %410.0;
    %415 = @func_5972(%412) /* ty=Tensor[(112, 2), int32] */;
    %416 = %413.0;
    (%414, %415, %var_7836, %416)
  };
  %417(%var_7850) /* ty=(Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) */
}

def @func_14631() -> Tensor[(10, 11, 6), float32] {
  %418 = @func_10939() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) */;
  %418.0
}

def @func_5675() -> (Tensor[(2, 13, 16), float64],) {
  %419 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %420 = %419.0;
  (%420,)
}

def @func_5829() -> Tensor[(10, 11, 6), float32] {
  %422 = fn () -> Tensor[(10, 11, 6), float32] {
    %421 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
    %421.0
  };
  %422() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_7434() -> Tensor[(2, 16, 7), float32] {
  %423 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %423.0
}

def @func_5996() -> Tensor[(10, 11, 6), float32] {
  @func_5828() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_6517() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) {
  %428 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) {
    %424 = @func_6314() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %425 = @func_3934() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) */;
    %426 = %424.0;
    %427 = %425.1;
    (%426, %427)
  };
  %428() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) */
}

def @func_6647() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) {
  %429 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
  %430 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %431 = %429.1;
  %432 = %430.1;
  (%431, %432)
}

def @func_7000() -> (Tensor[(2, 13, 16), float32],) {
  %435 = fn () -> (Tensor[(2, 13, 16), float32],) {
    %433 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
    %434 = %433.0;
    (%434,)
  };
  %435() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_12719() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32]) {
  %440 = fn () -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32]) {
    %436 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
    %437 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
    %438 = %436.1;
    %439 = %437.3;
    (%438, %439)
  };
  %440() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32]) */
}

def @func_4798() -> Tensor[(416), float64] {
  %441 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %441.2
}

def @func_14892(%var_14890: Tensor[(2, 16, 7), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), bool]) {
  @func_14889(%var_14890) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), bool]) */
}

def @func_9834(%var_9802: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(112, 2), int32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), int8]) {
  %442 = @func_6516() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float64]) */;
  %443 = %442.1;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %445 = reshape(%444, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %446 = cast(%var_9802, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %447 = reshape(%446, newshape=[864, 1]) /* ty=Tensor[(864, 1), uint64] */;
  %448 = @func_2512(%447) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) */;
  %449 = @func_5972(%445) /* ty=Tensor[(112, 2), int32] */;
  %450 = %448.0;
  %451 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  (%443, %449, %450, %var_9802, %451)
}

def @func_2080() -> (Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) {
  @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */
}

def @func_12009() -> (Tensor[(416), float64],) {
  %454 = fn () -> (Tensor[(416), float64],) {
    %452 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
    %453 = %452.2;
    (%453,)
  };
  %454() /* ty=(Tensor[(416), float64],) */
}

def @func_6060() -> Tensor[(864), uint64] {
  @func_2779() /* ty=Tensor[(864), uint64] */
}

def @func_12469() -> (Tensor[(2, 13, 16), float64],) {
  @func_12467() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_2568() -> Tensor[(2, 13, 16), float32] {
  @func_2566() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_10099() -> (Tensor[(2, 16, 7), bool],) {
  %457 = fn () -> (Tensor[(2, 16, 7), bool],) {
    %455 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %456 = %455.1;
    (%456,)
  };
  %457() /* ty=(Tensor[(2, 16, 7), bool],) */
}

def @func_7291() -> (Tensor[(10, 11, 6), bool],) {
  %460 = fn () -> (Tensor[(10, 11, 6), bool],) {
    %458 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
    %459 = %458.1;
    (%459,)
  };
  %460() /* ty=(Tensor[(10, 11, 6), bool],) */
}

def @func_15401() -> Tensor[(2, 13, 16), float32] {
  @func_15399() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_2292() -> (Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) {
  %470 = fn () -> (Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) {
    %461 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
    %462 = cast(%461, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
    %463 = tan(%462) /* ty=Tensor[(10, 11, 6), float32] */;
    %464 = cast(%463, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
    %465 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %466 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %467 = sinh(%464) /* ty=Tensor[(10, 11, 6), float32] */;
    %468 = %465.3;
    %469 = %466.2;
    (%467, %468, %469)
  };
  %470() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_9487() -> (Tensor[(2, 16, 7), float32],) {
  %471 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  (%471,)
}

def @func_7038() -> (Tensor[(10, 11, 6), float32],) {
  %472 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
  (%472,)
}

def @func_2182() -> Tensor[(2, 13, 16), float32] {
  %476 = fn () -> Tensor[(2, 13, 16), float32] {
    %473 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %474 = %473.0;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    cos(%475) /* ty=Tensor[(2, 13, 16), float32] */
  };
  %476() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_4533(%var_4532: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) {
  %481 = fn (%var_4517: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) {
    %477 = cast(%var_4517, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
    %478 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %479 = cos(%477) /* ty=Tensor[(5, 15, 8), float32] */;
    %480 = %478.0;
    (%479, %480)
  };
  %481(%var_4532) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_11594() -> Tensor[(112, 2), float32] {
  @func_2310() /* ty=Tensor[(112, 2), float32] */
}

def @func_2556(%var_2543: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %482 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %483 = %482.0;
  %484 = cast(%var_2543, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="bool") /* ty=Tensor[(2, 13, 16), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %489 = cast(%483, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %490 = equal(%486, %487) /* ty=Tensor[(2, 13, 16), bool] */;
  %491 = %488.0;
  %492 = cosh(%489) /* ty=Tensor[(2, 13, 16), float64] */;
  (%490, %491, %492)
}

def @func_13459() -> Tensor[(2, 16, 7), float32] {
  @func_13457() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_1192() -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) {
  @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */
}

def @func_2966() -> Tensor[(10, 11, 6), float32] {
  %493 = fn () -> Tensor[(10, 11, 6), float32] {
    @func_1814() /* ty=Tensor[(10, 11, 6), float32] */
  };
  %493() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_6290() -> (Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) {
  @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */
}

def @func_8528() -> (Tensor[(12, 6, 12), float32],) {
  %494 = @func_5847() /* ty=(Tensor[(12, 6, 12), float32],) */;
  %495 = %494.0;
  (%495,)
}

def @func_15544(%var_15497: Tensor[(3, 2, 13), float32]) -> (Tensor[(3, 2, 13), float32], Tensor[(112, 2), bool], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), bool]) {
  %496 = cast(%var_15497, dtype="float32") /* ty=Tensor[(3, 2, 13), float32] */;
  %497 = @func_10826() /* ty=(Tensor[(112, 2), bool],) */;
  %498 = @func_7746() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool]) */;
  %499 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
  %500 = acosh(%496) /* ty=Tensor[(3, 2, 13), float32] */;
  %501 = %497.0;
  %502 = %498.1;
  %503 = %499.0;
  (%500, %501, %502, %503)
}

def @func_2881() -> (Tensor[(2, 13, 16), float64],) {
  %506 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %504 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %505 = %504.0;
    (%505,)
  };
  %506() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_5434() -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) {
  %510 = fn () -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) {
    %507 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %508 = %507.0;
    %509 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) */
}

def @func_9553() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
  %516 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
    %511 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
    %512 = @func_8729() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(15, 2, 15), float32]) */;
    %513 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
    %514 = %511.1;
    %515 = %512.0;
    (%513, %514, %515)
  };
  %516() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_6483(%var_6481: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 13, 16), float64]) {
  @func_6480(%var_6481) /* ty=(Tensor[(10, 13, 10), bool], Tensor[(2, 13, 16), float64]) */
}

def @func_6726() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_13240() -> (Tensor[(416), float64],) {
  @func_13238() /* ty=(Tensor[(416), float64],) */
}

def @func_3444(%var_3428: Tensor[(560), float32], %var_3429: Tensor[(864), uint64]) -> (Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) {
  %517 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %518 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %519 = cast(%var_3428, dtype="float32") /* ty=Tensor[(560), float32] */;
  %520 = cast(%var_3429, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %521 = reshape(%519, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), float32] */;
  %522 = reshape(%520, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %523 = @func_1614(%521, %522) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %524 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
  %525 = %517.4;
  %526 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %527 = %518.0;
  %528 = %523.4;
  %529 = %524.1;
  (%525, %526, %527, %528, %var_3428, %var_3429, %529)
}

def @func_15417() -> (Tensor[(864), uint64],) {
  @func_15415() /* ty=(Tensor[(864), uint64],) */
}

def @func_6316() -> (Tensor[(2, 13, 16), float64],) {
  @func_6314() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_5765() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) {
  %530 = cast(meta[relay.Constant][13] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %531 = reshape(%530, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %532 = @func_2556(%531) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %533 = @func_2779() /* ty=Tensor[(864), uint64] */;
  %534 = cast(%533, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %535 = cast(%533, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %536 = cast(meta[relay.Constant][13] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %537 = reshape(%534, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %538 = reshape(%535, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %539 = reshape(%536, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %540 = @func_479(%537, %538, %539) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %541 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %542 = %541.1;
  %543 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %545 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%542, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %548 = %532.0;
  %549 = %540.0;
  %550 = divide(%546, %547) /* ty=Tensor[(2, 16, 7), float32] */;
  (%533, %548, meta[relay.Constant][13] /* ty=Tensor[(416), float64] */, %549, %550)
}

def @func_14741() -> (Tensor[(2, 16, 7), float32],) {
  @func_14739() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_5632() -> Tensor[(2, 13, 16), float64] {
  %551 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %551.0
}

def @func_13618() -> Tensor[(2, 16, 7), float32] {
  %553 = fn () -> Tensor[(2, 16, 7), float32] {
    %552 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
    %552.1
  };
  %553() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_5030() -> (Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) {
  @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */
}

def @func_13639() -> (Tensor[(2, 16, 7), float32],) {
  %554 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
  %555 = %554.0;
  (%555,)
}

def @func_2023() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) {
  %556 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %557 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %558 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %559 = %556.3;
  %560 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %561 = %557.2;
  %562 = %558.2;
  (%559, %560, %561, %562)
}

def @func_5013(%var_5012: Tensor[(2, 208), float32]) -> (Tensor[(2, 208), int32], Tensor[(2, 208), float64]) {
  %581 = fn (%var_4970: Tensor[(2, 208), float32]) -> (Tensor[(2, 208), int32], Tensor[(2, 208), float64]) {
    %563 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %564 = %563.3;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(2, 208), float32] */;
    %566 = atan(%565) /* ty=Tensor[(2, 208), float32] */;
    %567 = cast(%var_4970, dtype="bool") /* ty=Tensor[(2, 208), bool] */;
    %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(2), int32] */;
    %569 = cast(%566, dtype="bool") /* ty=Tensor[(2, 208), bool] */;
    %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %571 = equal(%569, %570) /* ty=Tensor[(2, 208), bool] */;
    %572 = cast(%571, dtype="int32") /* ty=Tensor[(2, 208), int32] */;
    %573 = shape_of(%566, dtype="int32") /* ty=Tensor[(2), int32] */;
    %574 = cast(%566, dtype="int32") /* ty=Tensor[(2, 208), int32] */;
    %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %576 = cast(%564, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
    %577 = log2(%576) /* ty=Tensor[(2, 208), float64] */;
    %578 = cast(%577, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
    %579 = add(%574, %575) /* ty=Tensor[(2, 208), int32] */;
    %580 = tan(%578) /* ty=Tensor[(2, 208), float64] */;
    (%579, %580)
  };
  %581(%var_5012) /* ty=(Tensor[(2, 208), int32], Tensor[(2, 208), float64]) */
}

def @func_12781(%var_12771: Tensor[(864), uint64]) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(1, 525), uint32], Tensor[(2, 16, 7), float32], Tensor[(1, 560), float32], Tensor[(864), uint64], Tensor[(864), uint64]) {
  %582 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 525), uint32] */, dtype="uint32") /* ty=Tensor[(1, 525), uint32] */;
  %583 = reshape(%582, newshape=[525]) /* ty=Tensor[(525), uint32] */;
  %584 = @func_9664(%583) /* ty=(Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) */;
  %585 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 560), float32] */, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
  %586 = cast(%var_12771, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %587 = reshape(%585, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %588 = reshape(%586, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %589 = @func_2460(%587, %588) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
  %590 = %589.0;
  %591 = cast(%590, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %592 = reshape(%591, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %593 = @func_7623(%592) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) */;
  %594 = @func_11594() /* ty=Tensor[(112, 2), float32] */;
  %595 = @func_5948() /* ty=Tensor[(2, 13, 16), float64] */;
  %596 = %584.0;
  %597 = %593.5;
  (%594, %595, %596, meta[relay.Constant][14] /* ty=Tensor[(1, 525), uint32] */, %590, meta[relay.Constant][15] /* ty=Tensor[(1, 560), float32] */, %var_12771, %597)
}

def @func_4690(%var_4689: Tensor[(10, 11, 6), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) {
  %609 = fn (%var_4666: Tensor[(10, 11, 6), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) {
    %598 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %599 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
    %600 = %599.0;
    %601 = cast(%var_4666, dtype="uint16") /* ty=Tensor[(10, 11, 6), uint16] */;
    %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%600, dtype="uint16") /* ty=Tensor[(10, 11, 6), uint16] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %605 = cast(%600, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
    %606 = %598.0;
    %607 = subtract(%603, %604) /* ty=Tensor[(10, 11, 6), uint16] */;
    %608 = acos(%605) /* ty=Tensor[(10, 11, 6), float64] */;
    (%606, %607, %608)
  };
  %609(%var_4689) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) */
}

def @func_13051() -> Tensor[(2, 13, 16), float64] {
  @func_5699() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_4490(%var_4489: Tensor[(15, 8, 5), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(15, 8, 5), bool]) {
  %621 = fn (%var_4425: Tensor[(15, 8, 5), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(15, 8, 5), bool]) {
    %610 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %611 = cast(%var_4425, dtype="float32") /* ty=Tensor[(15, 8, 5), float32] */;
    %612 = cos(%611) /* ty=Tensor[(15, 8, 5), float32] */;
    %613 = cast(%var_4425, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
    %614 = log(%613) /* ty=Tensor[(15, 8, 5), float64] */;
    %615 = cast(%614, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
    %616 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%612, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %619 = %610.1;
    %620 = equal(%617, %618) /* ty=Tensor[(15, 8, 5), bool] */;
    (%619, %620)
  };
  %621(%var_4489) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(15, 8, 5), bool]) */
}

def @func_12135() -> (Tensor[(10, 11, 6), float32],) {
  %622 = @func_7038() /* ty=(Tensor[(10, 11, 6), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_13669() -> Tensor[(2, 13, 16), float32] {
  %625 = fn () -> Tensor[(2, 13, 16), float32] {
    %624 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %624.0
  };
  %625() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_3608(%var_3578: Tensor[(5, 6, 7), float32]) -> (Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) {
  %626 = cast(%var_3578, dtype="float32") /* ty=Tensor[(5, 6, 7), float32] */;
  %627 = cast(%var_3578, dtype="float64") /* ty=Tensor[(5, 6, 7), float64] */;
  %628 = log(%626) /* ty=Tensor[(5, 6, 7), float32] */;
  %629 = sigmoid(%627) /* ty=Tensor[(5, 6, 7), float64] */;
  (%628, %629)
}

def @func_15113() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  %630 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %631 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
  %632 = cast(meta[relay.Constant][16] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %633 = reshape(%632, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float32] */;
  %634 = @func_3608(%633) /* ty=(Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) */;
  %635 = @func_11732() /* ty=(Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %636 = %630.0;
  %637 = %631.1;
  %638 = %634.1;
  %639 = %635.3;
  %640 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
  (%636, %637, %638, meta[relay.Constant][16] /* ty=Tensor[(210), float32] */, %639, %640)
}

def @func_5075() -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) {
  %641 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %642 = %641.1;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %644 = cast(meta[relay.Constant][17] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %645 = reshape(%643, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %646 = reshape(%644, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %647 = @func_1310(%645, %646) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %648 = %647.2;
  %649 = @func_4798() /* ty=Tensor[(416), float64] */;
  (%642, %648, meta[relay.Constant][17] /* ty=Tensor[(864), uint64] */, %649)
}

def @func_1617(%var_1615: Tensor[(7, 16, 5), float32], %var_1616: Tensor[(864), uint64]) -> (Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) {
  %661 = fn (%var_1599: Tensor[(7, 16, 5), float32], %var_1605: Tensor[(864), uint64]) -> (Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) {
    %650 = cast(%var_1599, dtype="float32") /* ty=Tensor[(7, 16, 5), float32] */;
    %651 = cast(%var_1605, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %652 = cast(%var_1605, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %653 = cast(meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %654 = reshape(%651, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
    %655 = reshape(%652, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
    %656 = reshape(%653, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %657 = @func_479(%654, %655, %656) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
    %658 = atan(%650) /* ty=Tensor[(7, 16, 5), float32] */;
    %659 = %657.0;
    %660 = @func_1340() /* ty=Tensor[(864), uint64] */;
    (%658, %659, %var_1605, meta[relay.Constant][18] /* ty=Tensor[(416), float64] */, %660)
  };
  %661(%var_1615, %var_1616) /* ty=(Tensor[(7, 16, 5), float32], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(864), uint64]) */
}

def @func_13881(%var_13870: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64], Tensor[(360), float64]) {
  %662 = @func_4014() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) */;
  %663 = @func_5028() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(12, 6, 12), float32]) */;
  %664 = @func_11686() /* ty=(Tensor[(864), uint64], Tensor[(864), uint64]) */;
  %665 = cast(%var_13870, dtype="float64") /* ty=Tensor[(360), float64] */;
  %666 = reshape(%665, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %667 = @func_12897(%666) /* ty=(Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */;
  %668 = %662.1;
  %669 = %663.1;
  %670 = %664.1;
  %671 = %667.7;
  (%668, %669, %670, %671, %var_13870)
}

def @func_15392() -> (Tensor[(416), float64], Tensor[(864), uint64]) {
  %674 = fn () -> (Tensor[(416), float64], Tensor[(864), uint64]) {
    %672 = @func_2368() /* ty=Tensor[(416), float64] */;
    %673 = @func_10644() /* ty=Tensor[(864), uint64] */;
    (%672, %673)
  };
  %674() /* ty=(Tensor[(416), float64], Tensor[(864), uint64]) */
}

def @func_11507() -> (Tensor[(2, 13, 16), float32],) {
  @func_11505() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_14683() -> (Tensor[(2, 13, 16), float64],) {
  @func_14681() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_7099(%var_7098: Tensor[(2, 112), float32]) -> (Tensor[(864), uint64], Tensor[(2, 112), float32], Tensor[(10, 11, 6), float64]) {
  %682 = fn (%var_7075: Tensor[(2, 112), float32]) -> (Tensor[(864), uint64], Tensor[(2, 112), float32], Tensor[(10, 11, 6), float64]) {
    %675 = cast(%var_7075, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
    %676 = reshape(%675, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
    %677 = @func_2674(%676) /* ty=(Tensor[(864), uint64], Tensor[(112, 2), int16]) */;
    %678 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
    %679 = cast(%678, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
    %680 = %677.0;
    %681 = sqrt(%679) /* ty=Tensor[(10, 11, 6), float64] */;
    (%680, %var_7075, %681)
  };
  %682(%var_7098) /* ty=(Tensor[(864), uint64], Tensor[(2, 112), float32], Tensor[(10, 11, 6), float64]) */
}

def @func_4868() -> (Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool]) {
  %687 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool]) {
    %683 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
    %684 = @func_4283() /* ty=Tensor[(2, 13, 16), float64] */;
    %685 = %683.0;
    %686 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
    (%684, %685, %686)
  };
  %687() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool]) */
}

def @func_12899(%var_12898: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %705 = fn (%var_12807: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
    %688 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %689 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
    %690 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
    %691 = cast(%var_12807, dtype="float64") /* ty=Tensor[(360), float64] */;
    %692 = reshape(%691, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
    %693 = @func_8912(%692) /* ty=(Tensor[(5, 12, 6), float64],) */;
    %694 = %693.0;
    %695 = cast(%694, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
    %696 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
    %697 = @func_5115() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %698 = %688.0;
    %699 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
    %700 = %689.0;
    %701 = %690.1;
    %702 = sin(%695) /* ty=Tensor[(5, 12, 6), float32] */;
    %703 = %696.4;
    %704 = %697.0;
    (%698, %var_12807, %699, %700, %701, %702, %703, %704)
  };
  %705(%var_12898) /* ty=(Tensor[(2, 13, 16), float32], Tensor[(360), float64], Tensor[(112, 2), float32], Tensor[(10, 11, 6), float64], Tensor[(2, 16, 7), float32], Tensor[(5, 12, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_11505() -> (Tensor[(2, 13, 16), float32],) {
  %706 = @func_2324() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %707 = %706.0;
  (%707,)
}

def @func_10863() -> (Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) {
  @func_10861() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) */
}

def @func_9883() -> Tensor[(2, 16, 7), float64] {
  %709 = fn () -> Tensor[(2, 16, 7), float64] {
    %708 = @func_3934() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64]) */;
    %708.1
  };
  %709() /* ty=Tensor[(2, 16, 7), float64] */
}

def @func_2802() -> Tensor[(2, 13, 16), float32] {
  %710 = fn () -> Tensor[(2, 13, 16), float32] {
    @func_2181() /* ty=Tensor[(2, 13, 16), float32] */
  };
  %710() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_12657() -> (Tensor[(2, 16, 7), float32],) {
  @func_12655() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_8195() -> (Tensor[(2, 13, 16), float64],) {
  %713 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %711 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %712 = %711.0;
    (%712,)
  };
  %713() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_2117() -> Tensor[(2, 13, 16), int8] {
  %714 = @func_1394() /* ty=Tensor[(2, 13, 16), float64] */;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %716 = reshape(%715, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %717 = @func_813(%716) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %718 = %717.2;
  %719 = cast(%718, dtype="int8") /* ty=Tensor[(416), int8] */;
  %720 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%714, dtype="int8") /* ty=Tensor[(2, 13, 16), int8] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%721, %722) /* ty=Tensor[(2, 13, 16), int8] */
}

def @func_9196() -> Tensor[(2, 13, 16), float64] {
  %724 = fn () -> Tensor[(2, 13, 16), float64] {
    %723 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %723.3
  };
  %724() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_2781() -> Tensor[(864), uint64] {
  @func_2779() /* ty=Tensor[(864), uint64] */
}

def @func_11432(%var_11431: Tensor[(2, 208), float64]) -> (Tensor[(2, 208), uint32], Tensor[(416), float64], Tensor[(112, 2), float32]) {
  %735 = fn (%var_11405: Tensor[(2, 208), float64]) -> (Tensor[(2, 208), uint32], Tensor[(416), float64], Tensor[(112, 2), float32]) {
    %725 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %726 = %725.3;
    %727 = cast(%var_11405, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
    %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(2), int32] */;
    %729 = cast(%726, dtype="uint32") /* ty=Tensor[(2, 208), uint32] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %731 = @func_7022() /* ty=(Tensor[(112, 2), float32],) */;
    %732 = minimum(%729, %730) /* ty=Tensor[(2, 208), uint32] */;
    %733 = @func_5476() /* ty=Tensor[(416), float64] */;
    %734 = %731.0;
    (%732, %733, %734)
  };
  %735(%var_11431) /* ty=(Tensor[(2, 208), uint32], Tensor[(416), float64], Tensor[(112, 2), float32]) */
}

def @func_14342() -> (Tensor[(2, 13, 16), float64],) {
  %736 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %737 = %736.0;
  (%737,)
}

def @func_6137() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
  %744 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) {
    %738 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %739 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
    %740 = %738.1;
    %741 = %739.0;
    %742 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
    %743 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
    (%740, %741, %742, %743)
  };
  %744() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */
}

def @func_10162() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], uint64, uint64) {
  %751 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], uint64, uint64) {
    %745 = cast(meta[relay.Constant][19] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %746 = reshape(%745, newshape=[]) /* ty=uint64 */;
    %747 = @func_7543(%746) /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) */;
    %748 = @func_10060() /* ty=Tensor[(2, 13, 16), float64] */;
    %749 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
    %750 = %747.4;
    (%748, %749, %750, meta[relay.Constant][19] /* ty=uint64 */)
  };
  %751() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], uint64, uint64) */
}

def @func_12359() -> Tensor[(2, 13, 16), float32] {
  %752 = @func_11505() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %752.0
}

def @func_7546(%var_7544: uint64) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) {
  @func_7543(%var_7544) /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) */
}

def @func_13387() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  @func_13385() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_2119() -> Tensor[(2, 13, 16), int8] {
  @func_2117() /* ty=Tensor[(2, 13, 16), int8] */
}

def @func_4647() -> (Tensor[(2, 16, 7), float32],) {
  %757 = fn () -> (Tensor[(2, 16, 7), float32],) {
    %753 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %754 = %753.0;
    %755 = cast(%754, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %756 = acosh(%755) /* ty=Tensor[(2, 16, 7), float32] */;
    (%756,)
  };
  %757() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_8071(%var_8070: Tensor[(210), float32]) -> (Tensor[(10, 11, 6), bool], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32]) {
  %766 = fn (%var_8055: Tensor[(210), float32]) -> (Tensor[(10, 11, 6), bool], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32]) {
    %758 = @func_7290() /* ty=(Tensor[(10, 11, 6), bool],) */;
    %759 = @func_7158() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), float32]) */;
    %760 = cast(%var_8055, dtype="float32") /* ty=Tensor[(210), float32] */;
    %761 = reshape(%760, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float32] */;
    %762 = @func_3608(%761) /* ty=(Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) */;
    %763 = %758.0;
    %764 = %759.2;
    %765 = %762.1;
    (%763, %764, %765, %var_8055)
  };
  %766(%var_8070) /* ty=(Tensor[(10, 11, 6), bool], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32]) */
}

def @func_14344() -> (Tensor[(2, 13, 16), float64],) {
  @func_14342() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_9467() -> (Tensor[(2, 13, 16), bool], Tensor[(2, 16, 7), float32]) {
  %767 = @func_5765() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) */;
  %768 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %769 = %767.1;
  %770 = %768.0;
  (%769, %770)
}

def @func_6379() -> (Tensor[(2, 13, 16), float64],) {
  %773 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %771 = @func_5675() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %772 = %771.0;
    (%772,)
  };
  %773() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_4777() -> Tensor[(2, 16, 7), float32] {
  @func_4775() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_9041() -> (Tensor[(2, 13, 16), float64],) {
  %774 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  (%774,)
}

def @func_15115() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) {
  @func_15113() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(5, 6, 7), float64], Tensor[(210), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32]) */
}

def @func_14457() -> Tensor[(2, 13, 16), float64] {
  %776 = fn () -> Tensor[(2, 13, 16), float64] {
    %775 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %775.0
  };
  %776() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_5274() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
  %780 = fn () -> (Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) {
    %777 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %778 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
    %779 = %777.0;
    (%778, %779)
  };
  %780() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_1227(%var_1226: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
  %785 = fn (%var_1208: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
    %781 = cast(%var_1208, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
    %782 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    add(%783, %784) /* ty=Tensor[(15, 2, 15), float32] */
  };
  %785(%var_1226) /* ty=Tensor[(15, 2, 15), float32] */
}

def @func_10136() -> (Tensor[(10, 11, 6), bool], Tensor[(416), float64]) {
  %789 = fn () -> (Tensor[(10, 11, 6), bool], Tensor[(416), float64]) {
    %786 = @func_7290() /* ty=(Tensor[(10, 11, 6), bool],) */;
    %787 = %786.0;
    %788 = @func_5476() /* ty=Tensor[(416), float64] */;
    (%787, %788)
  };
  %789() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */
}

def @func_108(%var_106: Tensor[(2, 13, 16), float64], %var_107: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), float64],) {
  @func_104(%var_106, %var_107) /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_9489() -> (Tensor[(2, 16, 7), float32],) {
  @func_9487() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_10707() -> (Tensor[(2, 13, 16), float32],) {
  %790 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %791 = %790.0;
  (%791,)
}

def @func_7625(%var_7624: Tensor[(224), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) {
  %805 = fn (%var_7574: Tensor[(224), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) {
    %792 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %793 = cast(%var_7574, dtype="float32") /* ty=Tensor[(224), float32] */;
    %794 = @func_6060() /* ty=Tensor[(864), uint64] */;
    %795 = cast(%794, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %796 = reshape(%793, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
    %797 = reshape(%795, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %798 = @func_1310(%796, %797) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
    %799 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
    %800 = %792.0;
    %801 = %798.4;
    %802 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
    %803 = %799.2;
    %804 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
    (%794, %800, %801, %var_7574, %802, %803, %804)
  };
  %805(%var_7624) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) */
}

def @func_1760() -> Tensor[(2, 16, 7), bool] {
  %807 = fn () -> Tensor[(2, 16, 7), bool] {
    %806 = @func_1083() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) */;
    %806.1
  };
  %807() /* ty=Tensor[(2, 16, 7), bool] */
}

def @func_3268() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  %808 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %809 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %810 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %811 = %808.0;
  %812 = %809.0;
  %813 = %810.0;
  (%811, %812, %813)
}

def @func_3448(%var_3446: Tensor[(560), float32], %var_3447: Tensor[(864), uint64]) -> (Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) {
  @func_3444(%var_3446, %var_3447) /* ty=(Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) */
}

def @func_5476() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_7922(%var_7921: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) {
  %822 = fn (%var_7909: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) {
    %814 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
    %815 = cast(%var_7909, dtype="float32") /* ty=Tensor[(560), float32] */;
    %816 = cast(meta[relay.Constant][21] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %817 = reshape(%815, newshape=[560]) /* ty=Tensor[(560), float32] */;
    %818 = reshape(%816, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
    %819 = @func_2460(%817, %818) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
    %820 = %814.0;
    %821 = %819.3;
    (%820, %821, %var_7909, meta[relay.Constant][21] /* ty=Tensor[(864), uint64] */)
  };
  %822(%var_7921) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) */
}

def @func_10939() -> (Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) {
  %823 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
  %824 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %825 = %823.0;
  %826 = %824.0;
  (%825, %826)
}

def @func_11191() -> (Tensor[(2, 13, 16), float64],) {
  %827 = @func_8194() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %828 = %827.0;
  (%828,)
}

def @func_6288() -> (Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) {
  %829 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %830 = @func_2965() /* ty=Tensor[(10, 11, 6), float32] */;
  %831 = @func_5828() /* ty=Tensor[(10, 11, 6), float32] */;
  %832 = cast(%831, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %833 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%830, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = %829.1;
  %837 = logical_and(%834, %835) /* ty=Tensor[(10, 11, 6), bool] */;
  (%836, %837)
}

def @func_12243() -> Tensor[(2, 13, 16), float32] {
  %838 = fn () -> Tensor[(2, 13, 16), float32] {
    @func_2801() /* ty=Tensor[(2, 13, 16), float32] */
  };
  %838() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_13710() -> (Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
  %842 = fn () -> (Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
    %839 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
    %840 = @func_6060() /* ty=Tensor[(864), uint64] */;
    %841 = %839.2;
    (%840, %841)
  };
  %842() /* ty=(Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) */
}

def @func_14499() -> Tensor[(112, 2), float64] {
  @func_14497() /* ty=Tensor[(112, 2), float64] */
}

def @func_1948() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  %843 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %844 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %845 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %846 = cast(%845, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %847 = %843.1;
  %848 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
  %849 = %844.0;
  %850 = log(%846) /* ty=Tensor[(10, 11, 6), float32] */;
  (%847, %848, %849, %850)
}

def @func_8256(%var_8254: Tensor[(3, 12, 8), uint64], %var_8255: Tensor[(3, 12, 8), uint64]) -> (Tensor[(3, 12, 8), bool], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(864), uint64]) {
  %863 = fn (%var_8235: Tensor[(3, 12, 8), uint64], %var_8236: Tensor[(3, 12, 8), uint64]) -> (Tensor[(3, 12, 8), bool], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(864), uint64]) {
    %851 = cast(%var_8236, dtype="bool") /* ty=Tensor[(3, 12, 8), bool] */;
    %852 = shape_of(%var_8235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%var_8235, dtype="bool") /* ty=Tensor[(3, 12, 8), bool] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %855 = @func_6500() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %856 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
    %857 = cast(%856, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %858 = reshape(%857, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %859 = @func_7623(%858) /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(224), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64]) */;
    %860 = equal(%853, %854) /* ty=Tensor[(3, 12, 8), bool] */;
    %861 = %855.0;
    %862 = %859.5;
    (%860, %861, %856, %862)
  };
  %863(%var_8254, %var_8255) /* ty=(Tensor[(3, 12, 8), bool], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(864), uint64]) */
}

def @func_13268() -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  @func_13266() /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_1395() -> Tensor[(2, 13, 16), float64] {
  %864 = fn () -> Tensor[(2, 13, 16), float64] {
    @func_1383() /* ty=Tensor[(2, 13, 16), float64] */
  };
  %864() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_2817() -> (Tensor[(2, 16, 7), float32],) {
  @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_12467() -> (Tensor[(2, 13, 16), float64],) {
  %865 = @func_6303() /* ty=Tensor[(2, 13, 16), float64] */;
  %866 = cast(%865, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %867 = log(%866) /* ty=Tensor[(2, 13, 16), float64] */;
  (%867,)
}

def @func_6178() -> Tensor[(2, 16, 7), float32] {
  %868 = @func_4898() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */;
  %868.0
}

def @func_6314() -> (Tensor[(2, 13, 16), float64],) {
  %869 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
  (%869,)
}

def @func_12137() -> (Tensor[(10, 11, 6), float32],) {
  @func_12135() /* ty=(Tensor[(10, 11, 6), float32],) */
}

def @func_10941() -> (Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) {
  @func_10939() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(864), uint64]) */
}

def @func_9087() -> Tensor[(2, 13, 16), float64] {
  @func_5533() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_11686() -> (Tensor[(864), uint64], Tensor[(864), uint64]) {
  %870 = @func_6060() /* ty=Tensor[(864), uint64] */;
  %871 = @func_1340() /* ty=Tensor[(864), uint64] */;
  (%870, %871)
}

def @func_6929() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) {
  %872 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
  %873 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %874 = %872.0;
  %875 = cast(%874, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
  %876 = reshape(%875, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float32] */;
  %877 = @func_4688(%876) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) */;
  %878 = @func_6303() /* ty=Tensor[(2, 13, 16), float64] */;
  %879 = %873.1;
  %880 = %877.1;
  (%878, %874, %879, %880)
}

def @func_13186() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), bool]) {
  %890 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), bool]) {
    %881 = @func_12655() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %882 = @func_9552() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) */;
    %883 = @func_10098() /* ty=(Tensor[(2, 16, 7), bool],) */;
    %884 = @func_10135() /* ty=(Tensor[(10, 11, 6), bool], Tensor[(416), float64]) */;
    %885 = %881.0;
    %886 = %882.1;
    %887 = %883.0;
    %888 = @func_8467() /* ty=Tensor[(2, 13, 16), bool] */;
    %889 = %884.0;
    (%885, %886, %887, %888, %889)
  };
  %890() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), bool]) */
}

def @main(%var_15564: Tensor[(8, 1, 5), uint16]) -> (Tensor[(8, 10, 5), uint16],) {
  %891 = cast(%var_15564, dtype="uint16") /* ty=Tensor[(8, 1, 5), uint16] */;
  %892 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 10, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 5), uint16] */;
  %893 = bitwise_and(%891, %892) /* ty=Tensor[(8, 10, 5), uint16] */;
  (%893,)
}

def @func_5701() -> Tensor[(2, 13, 16), float64] {
  @func_5699() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_7477() -> (Tensor[(2, 13, 16), float64],) {
  %896 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %894 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %895 = %894.0;
    (%895,)
  };
  %896() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_7543(%var_7541: uint64) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), int8], Tensor[(7, 4, 12), uint64], uint64) {
  %897 = @func_6136() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
  %898 = cast(%var_7541, dtype="uint64") /* ty=uint64 */;
  %899 = reshape(%898, newshape=[]) /* ty=uint64 */;
  %900 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
  %901 = %897.0;
  %902 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %903 = @func_4162(%899) /* ty=Tensor[(7, 4, 12), uint64] */;
  (%900, %901, %902, %903, %var_7541)
}

def @func_2988() -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) {
  %906 = fn () -> (Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) {
    %904 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
    %905 = @func_2181() /* ty=Tensor[(2, 13, 16), float32] */;
    (%904, %905)
  };
  %906() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */
}

def @func_14377(%var_14376: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
  %913 = fn (%var_14363: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) {
    %907 = cast(%var_14363, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
    %908 = @func_12135() /* ty=(Tensor[(10, 11, 6), float32],) */;
    %909 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %910 = tan(%907) /* ty=Tensor[(4, 15, 2), float32] */;
    %911 = %908.0;
    %912 = %909.0;
    (%910, %911, %912)
  };
  %913(%var_14376) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_10029() -> Tensor[(2, 16, 7), float32] {
  @func_10027() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_5077() -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) {
  @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */
}

def @func_8436(%var_8398: Tensor[(450), float32], %var_8426: Tensor[(112, 2), uint16]) -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(416), float64], Tensor[(112, 2), uint32]) {
  %914 = @func_5115() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %915 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
  %916 = @func_5273() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32]) */;
  %917 = cast(%var_8398, dtype="float32") /* ty=Tensor[(450), float32] */;
  %918 = reshape(%917, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %919 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
  %920 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %921 = %920.2;
  %922 = cast(meta[relay.Constant][23] /* ty=Tensor[(112, 2), float32] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(2), int32] */;
  %924 = cast(%921, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %926 = maximum(%924, %925) /* ty=Tensor[(112, 2), uint16] */;
  %927 = cast(%var_8426, dtype="uint32") /* ty=Tensor[(112, 2), uint32] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(2), int32] */;
  %929 = cast(%926, dtype="uint32") /* ty=Tensor[(112, 2), uint32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %931 = %914.0;
  %932 = %915.0;
  %933 = %916.0;
  %934 = @func_1225(%918) /* ty=Tensor[(15, 2, 15), float32] */;
  %935 = %919.3;
  %936 = multiply(%929, %930) /* ty=Tensor[(112, 2), uint32] */;
  (%931, %932, %933, %934, %var_8398, %935, %936)
}

def @func_15415() -> (Tensor[(864), uint64],) {
  %937 = @func_15391() /* ty=(Tensor[(416), float64], Tensor[(864), uint64]) */;
  %938 = %937.1;
  (%938,)
}

def @func_6305() -> Tensor[(2, 13, 16), float64] {
  @func_6303() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_8900() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  %939 = @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %940 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %941 = %939.0;
  %942 = %940.1;
  (%941, %942)
}

def @func_14164() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(10, 11, 6), uint16], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
  @func_14162() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(10, 11, 6), uint16], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */
}

def @func_8829() -> (Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) {
  @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */
}

def @func_1385() -> Tensor[(2, 13, 16), float64] {
  @func_1383() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_13924(%var_13923: Tensor[(40, 14), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(864, 416), uint16], Tensor[(40, 14), float32]) {
  %950 = fn (%var_13914: Tensor[(40, 14), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(864, 416), uint16], Tensor[(40, 14), float32]) {
    %943 = @func_13617() /* ty=Tensor[(2, 16, 7), float32] */;
    %944 = cast(%943, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %945 = cast(%var_13914, dtype="float32") /* ty=Tensor[(40, 14), float32] */;
    %946 = reshape(%945, newshape=[560]) /* ty=Tensor[(560), float32] */;
    %947 = @func_11530(%946) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(864, 416), uint16], Tensor[(108, 8), uint64], Tensor[(2, 16, 7), float32], Tensor[(560), float32]) */;
    %948 = asin(%944) /* ty=Tensor[(2, 16, 7), float32] */;
    %949 = %947.1;
    (%948, %949, %var_13914)
  };
  %950(%var_13923) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864, 416), uint16], Tensor[(40, 14), float32]) */
}

def @func_8681() -> Tensor[(112, 2), float32] {
  %951 = fn () -> Tensor[(112, 2), float32] {
    @func_2310() /* ty=Tensor[(112, 2), float32] */
  };
  %951() /* ty=Tensor[(112, 2), float32] */
}

def @func_5878() -> (Tensor[(2, 13, 16), float64],) {
  %952 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %953 = %952.0;
  (%953,)
}

def @func_7023() -> (Tensor[(112, 2), float32],) {
  %955 = fn () -> (Tensor[(112, 2), float32],) {
    %954 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
    (%954,)
  };
  %955() /* ty=(Tensor[(112, 2), float32],) */
}

def @func_6931() -> (Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) {
  @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */
}

def @func_7436() -> Tensor[(2, 16, 7), float32] {
  @func_7434() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_5478() -> Tensor[(416), float64] {
  @func_5476() /* ty=Tensor[(416), float64] */
}

def @func_4140() -> (Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) {
  %962 = fn () -> (Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) {
    %956 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %957 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
    %958 = @func_2941() /* ty=Tensor[(416), float64] */;
    %959 = %956.0;
    %960 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
    %961 = %957.3;
    (%958, %959, %960, %961)
  };
  %962() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_9666(%var_9665: Tensor[(525), uint32]) -> (Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
  %975 = fn (%var_9608: Tensor[(525), uint32]) -> (Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
    %963 = @func_3339() /* ty=(Tensor[(10, 11, 6), float32],) */;
    %964 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %965 = cast(%var_9608, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %966 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %967 = reshape(%964, newshape=[]) /* ty=uint32 */;
    %968 = reshape(%965, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint32] */;
    %969 = reshape(%966, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
    %970 = @func_4234(%967, %968, %969) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) */;
    %971 = %963.0;
    %972 = %970.0;
    %973 = @func_9195() /* ty=Tensor[(2, 13, 16), float64] */;
    %974 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
    (%971, %972, meta[relay.Constant][24] /* ty=uint32 */, %var_9608, meta[relay.Constant][25] /* ty=Tensor[(8, 70), float32] */, %973, %974)
  };
  %975(%var_9665) /* ty=(Tensor[(10, 11, 6), float32], Tensor[(15, 7, 5), bool], uint32, Tensor[(525), uint32], Tensor[(8, 70), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) */
}

def @func_10645() -> Tensor[(864), uint64] {
  %977 = fn () -> Tensor[(864), uint64] {
    %976 = @func_5075() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(416), float64]) */;
    %976.1
  };
  %977() /* ty=Tensor[(864), uint64] */
}

def @func_13002(%var_12999: Tensor[(14, 6, 1), uint64], %var_13000: Tensor[(14, 6, 6), uint64], %var_13001: Tensor[(14, 6, 14), uint64]) -> (Tensor[(14, 6, 6), uint64], Tensor[(14, 6, 14), float64]) {
  @func_12997(%var_12999, %var_13000, %var_13001) /* ty=(Tensor[(14, 6, 6), uint64], Tensor[(14, 6, 14), float64]) */
}

def @func_13266() -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  %978 = @func_12467() /* ty=(Tensor[(2, 13, 16), float64],) */;
  %979 = @func_2310() /* ty=Tensor[(112, 2), float32] */;
  %980 = %978.0;
  (%979, %980)
}

def @func_484(%var_481: Tensor[(12, 6, 12), uint64], %var_482: Tensor[(12, 6, 12), uint64], %var_483: Tensor[(416), float64]) -> (Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) {
  @func_479(%var_481, %var_482, %var_483) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_5767() -> (Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) {
  @func_5765() /* ty=(Tensor[(864), uint64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), float32]) */
}

def @func_10709() -> (Tensor[(2, 13, 16), float32],) {
  @func_10707() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_11491(%var_11489: uint64, %var_11490: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float32], Tensor[(7, 4, 12), uint64], uint64, Tensor[(864), uint64], Tensor[(5, 12, 6), float64], Tensor[(360), float64], Tensor[(864), uint64]) {
  @func_11487(%var_11489, %var_11490) /* ty=(Tensor[(2, 13, 16), float32], Tensor[(7, 4, 12), uint64], uint64, Tensor[(864), uint64], Tensor[(5, 12, 6), float64], Tensor[(360), float64], Tensor[(864), uint64]) */
}

def @func_14889(%var_14803: Tensor[(2, 16, 7), float32]) -> (Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 16, 7), bool]) {
  %981 = @func_11686() /* ty=(Tensor[(864), uint64], Tensor[(864), uint64]) */;
  %982 = @func_10707() /* ty=(Tensor[(2, 13, 16), float32],) */;
  %983 = @func_10098() /* ty=(Tensor[(2, 16, 7), bool],) */;
  %984 = @func_12655() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %985 = %984.0;
  %986 = cast(%var_14803, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%985, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %990 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
  %991 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
  %992 = %981.1;
  %993 = %982.0;
  %994 = %983.0;
  %995 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
  %996 = subtract(%988, %989) /* ty=Tensor[(2, 16, 7), float32] */;
  %997 = %990.3;
  %998 = %991.0;
  (%992, %993, %994, %995, %996, %997, %998)
}

def @func_4599(%var_4588: Tensor[(4, 140), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) {
  %999 = cast(%var_4588, dtype="float32") /* ty=Tensor[(4, 140), float32] */;
  %1000 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1001 = reshape(%999, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %1002 = reshape(%1000, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %1003 = @func_3444(%1001, %1002) /* ty=(Tensor[(112, 2), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(864), uint64], Tensor[(15, 2, 15), float32]) */;
  %1004 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %1005 = %1004.1;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1007 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %1008 = %1003.4;
  %1009 = log2(%1006) /* ty=Tensor[(112, 2), float32] */;
  (%1007, %1008, %var_4588, meta[relay.Constant][26] /* ty=Tensor[(864), uint64] */, %1009)
}

def @func_4775() -> Tensor[(2, 16, 7), float32] {
  %1010 = @func_4139() /* ty=(Tensor[(416), float64], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64]) */;
  %1010.1
}

def @func_3017() -> Tensor[(2, 16, 7), float32] {
  %1012 = fn () -> Tensor[(2, 16, 7), float32] {
    %1011 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1011.0
  };
  %1012() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_10861() -> (Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) {
  %1013 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
  %1014 = @func_8827() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) */;
  %1015 = @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
  %1016 = %1013.0;
  %1017 = %1014.0;
  %1018 = %1015.2;
  (%1016, %1017, %1018)
}

def @func_3576(%var_3574: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) {
  @func_3573(%var_3574) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_11098() -> (Tensor[(450), float32],) {
  %1021 = fn () -> (Tensor[(450), float32],) {
    %1019 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
    %1020 = %1019.3;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(450), float32],) */
}

def @func_1729() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %1028 = fn () -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
    %1022 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %1023 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %1024 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %1025 = %1022.0;
    %1026 = %1023.0;
    %1027 = %1024.1;
    (%1025, %1026, %1027)
  };
  %1028() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */
}

def @func_7961() -> (Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
  @func_7959() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) */
}

def @func_13418(%var_13416: Tensor[(8, 15, 13), float64], %var_13417: Tensor[(8, 15, 13), float64]) -> Tensor[(8, 15, 13), float64] {
  @func_13414(%var_13416, %var_13417) /* ty=Tensor[(8, 15, 13), float64] */
}

def @func_11364() -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), uint8], Tensor[(132), float64], Tensor[(560), float32]) {
  %1042 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), uint8], Tensor[(132), float64], Tensor[(560), float32]) {
    %1029 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
    %1030 = @func_2987() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float32]) */;
    %1031 = cast(meta[relay.Constant][27] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
    %1032 = cast(meta[relay.Constant][28] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
    %1033 = reshape(%1031, newshape=[11, 1, 12]) /* ty=Tensor[(11, 1, 12), float64] */;
    %1034 = reshape(%1032, newshape=[560, 1]) /* ty=Tensor[(560, 1), float32] */;
    %1035 = @func_10393(%1033, %1034) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560, 1), float32], Tensor[(2, 13, 16), uint8], Tensor[(11, ?, 12), float32]) */;
    %1036 = %1029.2;
    %1037 = @func_2779() /* ty=Tensor[(864), uint64] */;
    %1038 = @func_2801() /* ty=Tensor[(2, 13, 16), float32] */;
    %1039 = @func_1383() /* ty=Tensor[(2, 13, 16), float64] */;
    %1040 = %1030.0;
    %1041 = %1035.2;
    (%1036, %1037, %1038, %1039, %1040, %1041, meta[relay.Constant][27] /* ty=Tensor[(132), float64] */, meta[relay.Constant][28] /* ty=Tensor[(560), float32] */)
  };
  %1042() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), uint8], Tensor[(132), float64], Tensor[(560), float32]) */
}

def @func_14946() -> Tensor[(10, 11, 6), float64] {
  %1043 = @func_10861() /* ty=(Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float64], Tensor[(10, 11, 6), float32]) */;
  %1043.0
}

def @func_6038() -> Tensor[(2, 13, 16), float64] {
  @func_5699() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_104(%var_86: Tensor[(2, 13, 16), float64], %var_87: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), float64],) {
  %1044 = cast(%var_87, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1045 = shape_of(%var_86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1046 = cast(%var_86, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1048 = floor_divide(%1046, %1047) /* ty=Tensor[(2, 13, 16), float64] */;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1050 = acosh(%1049) /* ty=Tensor[(2, 13, 16), float64] */;
  (%1050,)
}

def @func_14287() -> (Tensor[(2, 13, 16), float64],) {
  %1053 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %1051 = @func_6929() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16]) */;
    %1052 = %1051.0;
    (%1052,)
  };
  %1053() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_9837(%var_9835: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(112, 2), int32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), int8]) {
  @func_9834(%var_9835) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(112, 2), int32], Tensor[(2, 16, 7), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), int8]) */
}

def @func_9775(%var_9773: Tensor[(50, 9), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(50, 9), float64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(6, 5, 15), float64], Tensor[(2, 16, 7), float32]) {
  @func_9772(%var_9773) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(50, 9), float64], Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(6, 5, 15), float64], Tensor[(2, 16, 7), float32]) */
}

def @func_4602(%var_4600: Tensor[(4, 140), float32]) -> (Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) {
  @func_4599(%var_4600) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) */
}

def @func_8914(%var_8913: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
  %1056 = fn (%var_8905: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
    %1054 = cast(%var_8905, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
    %1055 = atanh(%1054) /* ty=Tensor[(5, 12, 6), float64] */;
    (%1055,)
  };
  %1056(%var_8913) /* ty=(Tensor[(5, 12, 6), float64],) */
}

def @func_4238(%var_4235: uint32, %var_4236: Tensor[(15, 7, 5), uint32], %var_4237: Tensor[(8, 70), float32]) -> (Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
  %1070 = fn (%var_4199: uint32, %var_4200: Tensor[(15, 7, 5), uint32], %var_4213: Tensor[(8, 70), float32]) -> (Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) {
    %1057 = cast(%var_4199, dtype="bool") /* ty=bool */;
    %1058 = cast(%var_4200, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
    %1059 = equal(%1057, %1058) /* ty=Tensor[(15, 7, 5), bool] */;
    %1060 = cast(%1059, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
    %1061 = cast(%var_4199, dtype="bool") /* ty=bool */;
    %1062 = cast(%var_4213, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %1063 = cast(meta[relay.Constant][29] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1064 = reshape(%1062, newshape=[560]) /* ty=Tensor[(560), float32] */;
    %1065 = reshape(%1063, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
    %1066 = @func_2460(%1064, %1065) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(864), uint64], Tensor[(560), float32], Tensor[(216, 4), uint64], Tensor[(2, 13, 16), float64]) */;
    %1067 = not_equal(%1060, %1061) /* ty=Tensor[(15, 7, 5), bool] */;
    %1068 = %1066.4;
    %1069 = @func_1759() /* ty=Tensor[(2, 16, 7), bool] */;
    (%1067, %1068, %var_4213, meta[relay.Constant][29] /* ty=Tensor[(864), uint64] */, %1069)
  };
  %1070(%var_4235, %var_4236, %var_4237) /* ty=(Tensor[(15, 7, 5), bool], Tensor[(216, 4), uint64], Tensor[(8, 70), float32], Tensor[(864), uint64], Tensor[(2, 16, 7), bool]) */
}

def @func_13229() -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float64], Tensor[(660), float32]) {
  %1077 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float64], Tensor[(660), float32]) {
    %1071 = @func_8304() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1072 = cast(meta[relay.Constant][30] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %1073 = reshape(%1072, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float32] */;
    %1074 = @func_4688(%1073) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), uint16], Tensor[(10, 11, 6), float64]) */;
    %1075 = %1071.0;
    %1076 = %1074.2;
    (%1075, %1076, meta[relay.Constant][30] /* ty=Tensor[(660), float32] */)
  };
  %1077() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), float64], Tensor[(660), float32]) */
}

def @func_8132() -> (Tensor[(112, 2), float32],) {
  %1080 = fn () -> (Tensor[(112, 2), float32],) {
    %1078 = @func_7022() /* ty=(Tensor[(112, 2), float32],) */;
    %1079 = %1078.0;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(112, 2), float32],) */
}

def @func_1310(%var_1284: Tensor[(2, 16, 7), float32], %var_1290: Tensor[(864), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
  %1081 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1082 = %1081.0;
  %1083 = cast(%var_1284, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1087 = cast(%var_1290, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1088 = cast(%var_1290, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1089 = cast(meta[relay.Constant][31] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1090 = reshape(%1087, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1091 = reshape(%1088, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1092 = reshape(%1089, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1093 = @func_479(%1090, %1091, %1092) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %1094 = cast(meta[relay.Constant][31] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1095 = %1093.2;
  %1096 = cast(%1095, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1097 = reshape(%1094, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1098 = reshape(%1096, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1099 = @func_104(%1097, %1098) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1100 = @func_752() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %1101 = power(%1085, %1086) /* ty=Tensor[(2, 16, 7), float64] */;
  %1102 = %1099.0;
  %1103 = %1100.4;
  (%1101, %1095, %var_1290, meta[relay.Constant][31] /* ty=Tensor[(416), float64] */, %1102, %1103)
}

def @func_11734() -> (Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  @func_11732() /* ty=(Tensor[(416), float64], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */
}

def @func_815(%var_814: Tensor[(416), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
  %1112 = fn (%var_801: Tensor[(416), float64]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) {
    %1104 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1105 = cast(%var_801, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1106 = cast(%var_801, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1107 = reshape(%1105, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1108 = reshape(%1106, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1109 = @func_104(%1107, %1108) /* ty=(Tensor[(2, 13, 16), float64],) */;
    %1110 = %1104.0;
    %1111 = %1109.0;
    (%1110, %1111, %var_801)
  };
  %1112(%var_814) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */
}

def @func_4061(%var_4023: Tensor[(864), uint64]) -> (Tensor[(2, 13, 16), int8], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), uint8], Tensor[(2, 13, 16), uint8]) {
  %1113 = cast(%var_4023, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1114 = cast(%var_4023, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1115 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
  %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1117 = reshape(%1113, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1118 = reshape(%1114, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1119 = reshape(%1116, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1120 = @func_479(%1117, %1118, %1119) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %1121 = %1120.2;
  %1122 = cast(%1121, dtype="float32") /* ty=Tensor[(416), float32] */;
  %1123 = cast(%1115, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1124 = reshape(%1122, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1125 = reshape(%1123, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1126 = @func_2736(%1124, %1125) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1127 = @func_2566() /* ty=Tensor[(2, 13, 16), float32] */;
  %1128 = cast(%1127, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %1129 = cast(%1115, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1130 = reshape(%1128, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1131 = reshape(%1129, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1132 = @func_2736(%1130, %1131) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1133 = %1126.1;
  %1134 = %1132.1;
  (%1115, %1121, %var_4023, %1127, %1133, %1134)
}

def @func_3270() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) {
  @func_3268() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */
}

def @func_10784() -> (Tensor[(2, 13, 16), int8], Tensor[(2, 13, 16), float32]) {
  %1138 = fn () -> (Tensor[(2, 13, 16), int8], Tensor[(2, 13, 16), float32]) {
    %1135 = @func_6288() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(10, 11, 6), bool]) */;
    %1136 = @func_2117() /* ty=Tensor[(2, 13, 16), int8] */;
    %1137 = %1135.0;
    (%1136, %1137)
  };
  %1138() /* ty=(Tensor[(2, 13, 16), int8], Tensor[(2, 13, 16), float32]) */
}

def @func_13457() -> Tensor[(2, 16, 7), float32] {
  @func_7434() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_3291() -> Tensor[(2, 13, 16), float32] {
  @func_2566() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_11596() -> Tensor[(112, 2), float32] {
  @func_11594() /* ty=Tensor[(112, 2), float32] */
}

def @func_12655() -> (Tensor[(2, 16, 7), float32],) {
  %1139 = @func_2078() /* ty=(Tensor[(864), uint64], Tensor[(416), float64], Tensor[(416), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 16, 7), float32]) */;
  %1140 = %1139.4;
  (%1140,)
}

def @func_5443() -> (Tensor[(2, 16, 7), float32],) {
  @func_5441() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_753() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
  %1157 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) {
    %1141 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1142 = cast(meta[relay.Constant][32] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1143 = cast(meta[relay.Constant][32] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1144 = reshape(%1142, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1145 = reshape(%1143, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1146 = @func_104(%1144, %1145) /* ty=(Tensor[(2, 13, 16), float64],) */;
    %1147 = cast(meta[relay.Constant][33] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1148 = cast(meta[relay.Constant][33] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1149 = cast(meta[relay.Constant][32] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1150 = reshape(%1147, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
    %1151 = reshape(%1148, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
    %1152 = reshape(%1149, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %1153 = @func_479(%1150, %1151, %1152) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
    %1154 = %1141.0;
    %1155 = %1146.0;
    %1156 = %1153.1;
    (%1154, %1155, meta[relay.Constant][32] /* ty=Tensor[(416), float64] */, %1156, meta[relay.Constant][33] /* ty=Tensor[(864), uint64] */)
  };
  %1157() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */
}

def @func_8902() -> (Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  @func_8900() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_5880() -> (Tensor[(2, 13, 16), float64],) {
  @func_5878() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_15037() -> (Tensor[(2, 13, 16), float32],) {
  %1159 = fn () -> (Tensor[(2, 13, 16), float32],) {
    %1158 = @func_13668() /* ty=Tensor[(2, 13, 16), float32] */;
    (%1158,)
  };
  %1159() /* ty=(Tensor[(2, 13, 16), float32],) */
}

def @func_6062() -> Tensor[(864), uint64] {
  @func_6060() /* ty=Tensor[(864), uint64] */
}

def @func_15197(%var_15195: Tensor[(11, 16, 10), int32], %var_15196: Tensor[(560), float32]) -> (Tensor[(11, 16, 10), int32], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
  %1177 = fn (%var_15150: Tensor[(11, 16, 10), int32], %var_15180: Tensor[(560), float32]) -> (Tensor[(11, 16, 10), int32], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) {
    %1160 = cast(%var_15150, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
    %1161 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 16, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1162 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 16, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
    %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1164 = @func_6647() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32]) */;
    %1165 = cast(%var_15180, dtype="float32") /* ty=Tensor[(560), float32] */;
    %1166 = reshape(%1165, newshape=[560]) /* ty=Tensor[(560), float32] */;
    %1167 = @func_7920(%1166) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(560), float32], Tensor[(864), uint64]) */;
    %1168 = @func_13668() /* ty=Tensor[(2, 13, 16), float32] */;
    %1169 = cast(%1168, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %1170 = reshape(%1169, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1171 = @func_1533(%1170) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64]) */;
    %1172 = maximum(%1162, %1163) /* ty=Tensor[(11, 16, 10), int32] */;
    %1173 = %1164.1;
    %1174 = %1167.0;
    %1175 = %1171.1;
    %1176 = @func_4775() /* ty=Tensor[(2, 16, 7), float32] */;
    (%1172, %1168, %1173, %1174, %var_15180, %1175, %1176)
  };
  %1177(%var_15195, %var_15196) /* ty=(Tensor[(11, 16, 10), int32], Tensor[(2, 13, 16), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 16, 7), float32], Tensor[(560), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */
}

def @func_3884() -> Tensor[(2, 16, 7), float32] {
  %1178 = fn () -> Tensor[(2, 16, 7), float32] {
    @func_3016() /* ty=Tensor[(2, 16, 7), float32] */
  };
  %1178() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_6480(%var_6464: Tensor[(10, 13, 10), uint64]) -> (Tensor[(10, 13, 10), bool], Tensor[(2, 13, 16), float64]) {
  %1179 = cast(%var_6464, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1180 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(10, 13, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 13, 10), uint64] */, dtype="bool") /* ty=Tensor[(10, 13, 10), bool] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1183 = less_equal(%1181, %1182) /* ty=Tensor[(10, 13, 10), bool] */;
  %1184 = @func_6038() /* ty=Tensor[(2, 13, 16), float64] */;
  (%1183, %1184)
}

def @func_14948() -> Tensor[(10, 11, 6), float64] {
  @func_14946() /* ty=Tensor[(10, 11, 6), float64] */
}

def @func_5116() -> (Tensor[(2, 13, 16), float64],) {
  %1187 = fn () -> (Tensor[(2, 13, 16), float64],) {
    %1185 = @func_4717() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %1186 = %1185.0;
    (%1186,)
  };
  %1187() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_8827() -> (Tensor[(10, 11, 6), float64], Tensor[(224), float32], Tensor[(8, 28), float32]) {
  %1188 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 28), float32] */, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %1189 = reshape(%1188, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1190 = @func_7849(%1189) /* ty=(Tensor[(416), float64], Tensor[(112, 2), int32], Tensor[(224), float32], Tensor[(10, 11, 6), float32]) */;
  %1191 = @func_7365() /* ty=Tensor[(10, 11, 6), float64] */;
  %1192 = %1190.2;
  (%1191, %1192, meta[relay.Constant][36] /* ty=Tensor[(8, 28), float32] */)
}

def @func_2815() -> (Tensor[(2, 16, 7), float32],) {
  %1193 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %1194 = %1193.2;
  (%1194,)
}

def @func_2311() -> Tensor[(112, 2), float32] {
  %1196 = fn () -> Tensor[(112, 2), float32] {
    %1195 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %1195.3
  };
  %1196() /* ty=Tensor[(112, 2), float32] */
}

def @func_12034() -> Tensor[(2, 16, 7), uint64] {
  %1198 = fn () -> Tensor[(2, 16, 7), uint64] {
    %1197 = @func_5433() /* ty=(Tensor[(2, 16, 7), uint64], Tensor[(2, 13, 16), float64]) */;
    %1197.0
  };
  %1198() /* ty=Tensor[(2, 16, 7), uint64] */
}

def @func_12077() -> (Tensor[(10, 11, 6), float32],) {
  %1200 = fn () -> (Tensor[(10, 11, 6), float32],) {
    %1199 = @func_5996() /* ty=Tensor[(10, 11, 6), float32] */;
    (%1199,)
  };
  %1200() /* ty=(Tensor[(10, 11, 6), float32],) */
}

def @func_1083() -> (Tensor[(2, 16, 7), uint64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 208), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64]) {
  %1201 = @func_707() /* ty=(Tensor[(2, 16, 7), float32],) */;
  %1202 = %1201.0;
  %1203 = cast(%1202, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %1204 = atan(%1203) /* ty=Tensor[(2, 16, 7), float64] */;
  %1205 = cast(%1202, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %1206 = exp(%1205) /* ty=Tensor[(2, 16, 7), float64] */;
  %1207 = cast(%1206, dtype="uint64") /* ty=Tensor[(2, 16, 7), uint64] */;
  %1208 = shape_of(%1204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1209 = cast(%1204, dtype="uint64") /* ty=Tensor[(2, 16, 7), uint64] */;
  %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1211 = cast(%1204, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %1212 = shape_of(%1202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%1202, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1215 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %1216 = reshape(%1215, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1217 = @func_813(%1216) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64]) */;
  %1218 = cast(meta[relay.Constant][38] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1219 = cast(meta[relay.Constant][38] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1220 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %1221 = reshape(%1218, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1222 = reshape(%1219, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1223 = reshape(%1220, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1224 = @func_479(%1221, %1222, %1223) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) */;
  %1225 = multiply(%1209, %1210) /* ty=Tensor[(2, 16, 7), uint64] */;
  %1226 = logical_and(%1213, %1214) /* ty=Tensor[(2, 16, 7), bool] */;
  %1227 = %1217.1;
  %1228 = %1224.0;
  (%1225, %1226, %1227, meta[relay.Constant][37] /* ty=Tensor[(2, 208), float64] */, %1228, meta[relay.Constant][38] /* ty=Tensor[(864), uint64] */)
}

def @func_12784(%var_12782: Tensor[(864), uint64]) -> (Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(1, 525), uint32], Tensor[(2, 16, 7), float32], Tensor[(1, 560), float32], Tensor[(864), uint64], Tensor[(864), uint64]) {
  @func_12781(%var_12782) /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(1, 525), uint32], Tensor[(2, 16, 7), float32], Tensor[(1, 560), float32], Tensor[(864), uint64], Tensor[(864), uint64]) */
}

def @func_3044() -> Tensor[(416), float64] {
  %1229 = fn () -> Tensor[(416), float64] {
    @func_2941() /* ty=Tensor[(416), float64] */
  };
  %1229() /* ty=Tensor[(416), float64] */
}

def @func_1480() -> (Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  %1230 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
  %1231 = cast(meta[relay.Constant][39] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1232 = @func_1340() /* ty=Tensor[(864), uint64] */;
  %1233 = cast(%1232, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1234 = reshape(%1231, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %1235 = reshape(%1233, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %1236 = @func_1310(%1234, %1235) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(416), float64], Tensor[(864), uint64], Tensor[(416), float64], Tensor[(2, 13, 16), float64], Tensor[(864), uint64]) */;
  %1237 = %1236.4;
  %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1239 = %1230.0;
  %1240 = sin(%1238) /* ty=Tensor[(2, 13, 16), float64] */;
  (%1239, %1232, meta[relay.Constant][39] /* ty=Tensor[(112, 2), float32] */, %1240)
}

def @func_11853() -> (Tensor[(2, 16, 7), float32],) {
  @func_11851() /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_6180() -> Tensor[(2, 16, 7), float32] {
  @func_6178() /* ty=Tensor[(2, 16, 7), float32] */
}

def @func_7199(%var_7175: Tensor[(15, 16, 9), float64]) -> (Tensor[(15, 16, 9), float64], Tensor[(2, 13, 16), float64]) {
  %1241 = cast(%var_7175, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
  %1242 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1243 = asinh(%1241) /* ty=Tensor[(15, 16, 9), float64] */;
  %1244 = %1242.0;
  (%1243, %1244)
}

def @func_7366() -> Tensor[(10, 11, 6), float64] {
  %1248 = fn () -> Tensor[(10, 11, 6), float64] {
    %1245 = @func_2023() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(112, 2), float32]) */;
    %1246 = %1245.0;
    %1247 = cast(%1246, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
    log10(%1247) /* ty=Tensor[(10, 11, 6), float64] */
  };
  %1248() /* ty=Tensor[(10, 11, 6), float64] */
}

def @func_10292(%var_10282: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) {
  %1249 = cast(meta[relay.Constant][40] /* ty=Tensor[(208, 2), float32] */, dtype="float32") /* ty=Tensor[(208, 2), float32] */;
  %1250 = cast(meta[relay.Constant][40] /* ty=Tensor[(208, 2), float32] */, dtype="float64") /* ty=Tensor[(208, 2), float64] */;
  %1251 = reshape(%1249, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float32] */;
  %1252 = reshape(%1250, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1253 = @func_2736(%1251, %1252) /* ty=(Tensor[(416), float64], Tensor[(2, 13, 16), uint8]) */;
  %1254 = @func_2291() /* ty=(Tensor[(10, 11, 6), float32], Tensor[(112, 2), float32], Tensor[(2, 16, 7), float32]) */;
  %1255 = cast(%var_10282, dtype="float32") /* ty=Tensor[(560), float32] */;
  %1256 = reshape(%1255, newshape=[4, 140]) /* ty=Tensor[(4, 140), float32] */;
  %1257 = @func_4599(%1256) /* ty=(Tensor[(2, 13, 16), int8], Tensor[(560), float32], Tensor[(4, 140), float32], Tensor[(864), uint64], Tensor[(112, 2), float32]) */;
  %1258 = @func_3016() /* ty=Tensor[(2, 16, 7), float32] */;
  %1259 = %1253.1;
  %1260 = %1254.2;
  %1261 = %1257.0;
  (%1258, %1259, meta[relay.Constant][40] /* ty=Tensor[(208, 2), float32] */, %1260, %1261, %var_10282)
}

def @func_4015() -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
  %1279 = fn () -> (Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
    %1262 = @func_2223() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(2, 13, 16), float64], Tensor[(112, 2), float64]) */;
    %1263 = %1262.0;
    %1264 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 13, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    %1265 = shape_of(%1263, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1266 = cast(%1263, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1268 = @func_1948() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32]) */;
    %1269 = @func_1488() /* ty=(Tensor[(2, 13, 16), float64],) */;
    %1270 = @func_1684() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
    %1271 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
    %1272 = @func_3090() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %1273 = floor_mod(%1266, %1267) /* ty=Tensor[(2, 13, 16), float32] */;
    %1274 = %1268.2;
    %1275 = %1269.0;
    %1276 = %1270.1;
    %1277 = %1271.0;
    %1278 = %1272.0;
    (%1273, %1274, %1275, %1276, %1277, %1278)
  };
  %1279() /* ty=(Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) */
}

def @func_5949() -> Tensor[(2, 13, 16), float64] {
  %1280 = fn () -> Tensor[(2, 13, 16), float64] {
    @func_1394() /* ty=Tensor[(2, 13, 16), float64] */
  };
  %1280() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_13053() -> Tensor[(2, 13, 16), float64] {
  @func_13051() /* ty=Tensor[(2, 13, 16), float64] */
}

def @func_15547(%var_15545: Tensor[(3, 2, 13), float32]) -> (Tensor[(3, 2, 13), float32], Tensor[(112, 2), bool], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), bool]) {
  @func_15544(%var_15545) /* ty=(Tensor[(3, 2, 13), float32], Tensor[(112, 2), bool], Tensor[(2, 16, 7), float32], Tensor[(10, 11, 6), bool]) */
}

def @func_2943() -> Tensor[(416), float64] {
  @func_2941() /* ty=Tensor[(416), float64] */
}

def @func_2559(%var_2557: Tensor[(2, 13, 16), float64]) -> (Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) {
  @func_2556(%var_2557) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64]) */
}

def @func_1482() -> (Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) {
  @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */
}

def @func_2369() -> Tensor[(416), float64] {
  %1282 = fn () -> Tensor[(416), float64] {
    %1281 = @func_1190() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(864), uint64]) */;
    %1281.1
  };
  %1282() /* ty=Tensor[(416), float64] */
}

def @func_3340() -> (Tensor[(10, 11, 6), float32],) {
  %1286 = fn () -> (Tensor[(10, 11, 6), float32],) {
    %1283 = @func_1814() /* ty=Tensor[(10, 11, 6), float32] */;
    %1284 = cast(%1283, dtype="float32") /* ty=Tensor[(10, 11, 6), float32] */;
    %1285 = rsqrt(%1284) /* ty=Tensor[(10, 11, 6), float32] */;
    (%1285,)
  };
  %1286() /* ty=(Tensor[(10, 11, 6), float32],) */
}

def @func_13884(%var_13882: Tensor[(360), float64]) -> (Tensor[(2, 13, 16), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64], Tensor[(360), float64]) {
  @func_13881(%var_13882) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(12, 6, 12), float32], Tensor[(864), uint64], Tensor[(2, 13, 16), float64], Tensor[(360), float64]) */
}

def @func_2941() -> Tensor[(416), float64] {
  @func_2368() /* ty=Tensor[(416), float64] */
}

def @func_11877() -> Tensor[(416), float64] {
  %1287 = fn () -> Tensor[(416), float64] {
    @func_2368() /* ty=Tensor[(416), float64] */
  };
  %1287() /* ty=Tensor[(416), float64] */
}

def @func_7230() -> Tensor[(15, 2, 15), float32] {
  %1289 = fn () -> Tensor[(15, 2, 15), float32] {
    %1288 = @func_5933() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(864), uint64], Tensor[(15, 2, 15), float32], Tensor[(450), float32]) */;
    %1288.2
  };
  %1289() /* ty=Tensor[(15, 2, 15), float32] */
}

def @func_2676(%var_2675: Tensor[(112, 2), float32]) -> (Tensor[(864), uint64], Tensor[(112, 2), int16]) {
  %1304 = fn (%var_2643: Tensor[(112, 2), float32]) -> (Tensor[(864), uint64], Tensor[(112, 2), int16]) {
    %1290 = @func_1967() /* ty=Tensor[(112, 2), float32] */;
    %1291 = cast(%1290, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
    %1292 = log10(%1291) /* ty=Tensor[(112, 2), float32] */;
    %1293 = cast(%var_2643, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %1294 = shape_of(%1290, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1295 = cast(%1290, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %1296 = dyn.reshape(%1293, %1294, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1297 = power(%1295, %1296) /* ty=Tensor[(112, 2), float64] */;
    %1298 = cast(%1297, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
    %1299 = shape_of(%1292, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1300 = cast(%1292, dtype="int16") /* ty=Tensor[(112, 2), int16] */;
    %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %1302 = @func_1340() /* ty=Tensor[(864), uint64] */;
    %1303 = right_shift(%1300, %1301) /* ty=Tensor[(112, 2), int16] */;
    (%1302, %1303)
  };
  %1304(%var_2675) /* ty=(Tensor[(864), uint64], Tensor[(112, 2), int16]) */
}

def @func_5256(%var_5254: Tensor[(5, 90), float32]) -> (Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) {
  @func_5253(%var_5254) /* ty=(Tensor[(2, 13, 16), float64], Tensor[(15, 2, 15), float32], Tensor[(2, 13, 16), float32], Tensor[(5, 90), bool], Tensor[(5, 90), float64], Tensor[(5, 90), float32]) */
}

def @func_14990() -> (Tensor[(2, 13, 16), float64],) {
  @func_14988() /* ty=(Tensor[(2, 13, 16), float64],) */
}

def @func_13414(%var_13404: Tensor[(8, 15, 13), float64], %var_13405: Tensor[(8, 15, 13), float64]) -> Tensor[(8, 15, 13), float64] {
  %1305 = cast(%var_13405, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %1306 = shape_of(%var_13404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%var_13404, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1307, %1308) /* ty=Tensor[(8, 15, 13), float64] */
}

def @func_4899() -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) {
  %1315 = fn () -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) {
    %1309 = @func_4646() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1310 = cast(meta[relay.Constant][42] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %1311 = reshape(%1310, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
    %1312 = @func_4531(%1311) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(2, 13, 16), float64]) */;
    %1313 = %1309.0;
    %1314 = %1312.1;
    (%1313, %1314, meta[relay.Constant][42] /* ty=Tensor[(600), float32] */)
  };
  %1315() /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float64], Tensor[(600), float32]) */
}

def @func_2515(%var_2513: Tensor[(864, 1), uint64]) -> (Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) {
  @func_2512(%var_2513) /* ty=(Tensor[(2, 16, 7), float64], Tensor[(864, 416), uint16]) */
}

def @func_15399() -> Tensor[(2, 13, 16), float32] {
  @func_13564() /* ty=Tensor[(2, 13, 16), float32] */
}

def @func_11292() -> (Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
  %1324 = fn () -> (Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) {
    %1316 = @func_4923() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(2, 13, 16), float32]) */;
    %1317 = cast(meta[relay.Constant][43] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1318 = reshape(%1317, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
    %1319 = @func_3573(%1318) /* ty=(Tensor[(2, 13, 16), bool], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), int8], Tensor[(10, 11, 6), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), float32], Tensor[(2, 13, 16), float64], Tensor[(10, 11, 6), float32], Tensor[(10, 11, 6), float32], Tensor[(2, 13, 16), float64]) */;
    %1320 = @func_6500() /* ty=(Tensor[(2, 13, 16), float32],) */;
    %1321 = %1316.0;
    %1322 = %1319.1;
    %1323 = %1320.0;
    (%1321, %1322, meta[relay.Constant][43] /* ty=Tensor[(416), float64] */, %1323)
  };
  %1324() /* ty=(Tensor[(2, 16, 7), bool], Tensor[(10, 11, 6), float32], Tensor[(416), float64], Tensor[(2, 13, 16), float32]) */
}

def @func_5998() -> Tensor[(10, 11, 6), float32] {
  @func_5996() /* ty=Tensor[(10, 11, 6), float32] */
}

def @func_3204(%var_3203: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
  %1332 = fn (%var_3183: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
    %1325 = @func_2815() /* ty=(Tensor[(2, 16, 7), float32],) */;
    %1326 = %1325.0;
    %1327 = cast(%var_3183, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %1328 = shape_of(%1326, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1329 = cast(%1326, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1331 = mod(%1329, %1330) /* ty=Tensor[(2, 16, 7), float32] */;
    (%1331,)
  };
  %1332(%var_3203) /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_7959() -> (Tensor[(2, 13, 16), float64], Tensor[(112, 2), float32]) {
  %1333 = @func_1728() /* ty=(Tensor[(2, 13, 16), float64], Tensor[(2, 13, 16), float64], Tensor[(2, 16, 7), float32]) */;
  %1334 = @func_1480() /* ty=(Tensor[(416), float64], Tensor[(864), uint64], Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %1335 = %1334.2;
  %1336 = cast(%1335, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %1337 = %1333.0;
  %1338 = sigmoid(%1336) /* ty=Tensor[(112, 2), float32] */;
  (%1337, %1338)
}

def @func_10827() -> (Tensor[(112, 2), bool],) {
  %1345 = fn () -> (Tensor[(112, 2), bool],) {
    %1339 = @func_8680() /* ty=Tensor[(112, 2), float32] */;
    %1340 = cast(meta[relay.Constant][44] /* ty=Tensor[(112, 2), float32] */, dtype="bool") /* ty=Tensor[(112, 2), bool] */;
    %1341 = shape_of(%1339, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1342 = cast(%1339, dtype="bool") /* ty=Tensor[(112, 2), bool] */;
    %1343 = dyn.reshape(%1340, %1341, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1344 = equal(%1342, %1343) /* ty=Tensor[(112, 2), bool] */;
    (%1344,)
  };
  %1345() /* ty=(Tensor[(112, 2), bool],) */
}

def @func_10295(%var_10293: Tensor[(560), float32]) -> (Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) {
  @func_10292(%var_10293) /* ty=(Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), uint8], Tensor[(208, 2), float32], Tensor[(2, 16, 7), float32], Tensor[(2, 13, 16), int8], Tensor[(560), float32]) */
}

def @func_3611(%var_3609: Tensor[(5, 6, 7), float32]) -> (Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) {
  @func_3608(%var_3609) /* ty=(Tensor[(5, 6, 7), float32], Tensor[(5, 6, 7), float64]) */
}

def @func_14238(%var_14189: bool, %var_14190: Tensor[(13, 4, 16), bool]) -> (Tensor[(13, 4, 16), int32], Tensor[(112, 2), float32], Tensor[(13, 4, 16), float32]) {
  %1346 = cast(%var_14189, dtype="bool") /* ty=bool */;
  %1347 = cast(%var_14190, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %1348 = logical_and(%1346, %1347) /* ty=Tensor[(13, 4, 16), bool] */;
  %1349 = cast(%var_14190, dtype="int32") /* ty=Tensor[(13, 4, 16), int32] */;
  %1350 = shape_of(%1348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1351 = cast(%1348, dtype="int32") /* ty=Tensor[(13, 4, 16), int32] */;
  %1352 = dyn.reshape(%1349, %1350, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1353 = @func_13266() /* ty=(Tensor[(112, 2), float32], Tensor[(2, 13, 16), float64]) */;
  %1354 = cast(%1348, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %1355 = bitwise_or(%1351, %1352) /* ty=Tensor[(13, 4, 16), int32] */;
  %1356 = %1353.0;
  %1357 = rsqrt(%1354) /* ty=Tensor[(13, 4, 16), float32] */;
  (%1355, %1356, %1357)
}

def @func_14988() -> (Tensor[(2, 13, 16), float64],) {
  %1358 = @func_11271() /* ty=(Tensor[(2, 13, 16), bool], Tensor[(416), float64], Tensor[(2, 13, 16), bool], Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64]) */;
  %1359 = %1358.4;
  (%1359,)
}

def @func_14242(%var_14240: bool, %var_14241: Tensor[(13, 4, 16), bool]) -> (Tensor[(13, 4, 16), int32], Tensor[(112, 2), float32], Tensor[(13, 4, 16), float32]) {
  @func_14238(%var_14240, %var_14241) /* ty=(Tensor[(13, 4, 16), int32], Tensor[(112, 2), float32], Tensor[(13, 4, 16), float32]) */
}

def @func_479(%var_440: Tensor[(12, 6, 12), uint64], %var_441: Tensor[(12, 6, 12), uint64], %var_459: Tensor[(416), float64]) -> (Tensor[(12, 6, 12), float32], Tensor[(2, 13, 16), float64], Tensor[(416), float64], Tensor[(2, 13, 16), float64]) {
  %1360 = cast(%var_441, dtype="uint64") /* ty=Tensor[(12, 6, 12), uint64] */;
  %1361 = shape_of(%var_440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1362 = cast(%var_440, dtype="uint64") /* ty=Tensor[(12, 6, 12), uint64] */;
  %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1364 = maximum(%1362, %1363) /* ty=Tensor[(12, 6, 12), uint64] */;
  %1365 = cast(%var_441, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %1366 = shape_of(%1364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1367 = cast(%1364, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1369 = cast(%var_459, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1370 = cast(%var_459, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1371 = reshape(%1369, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1372 = reshape(%1370, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1373 = @func_104(%1371, %1372) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1374 = %1373.0;
  %1375 = cast(%1374, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1376 = cast(%1374, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %1377 = reshape(%1375, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1378 = reshape(%1376, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), float64] */;
  %1379 = @func_104(%1377, %1378) /* ty=(Tensor[(2, 13, 16), float64],) */;
  %1380 = power(%1367, %1368) /* ty=Tensor[(12, 6, 12), float32] */;
  %1381 = %1379.0;
  (%1380, %1374, %var_459, %1381)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen923/build/output.py:4894: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen923/build/output.py", line 4899, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(400) tvmgen_default_fused_bitwise_and_kernel0(ushort* __restrict__ T_bitwise_and, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  T_bitwise_and[(((int)threadIdx.x))] = (placeholder[((((((int)threadIdx.x) / 50) * 5) + (((int)threadIdx.x) % 5)))] & placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


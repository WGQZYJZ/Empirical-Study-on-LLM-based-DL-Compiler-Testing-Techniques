==========mod==========
#[version = "0.0.5"]
def @func_3392(%var_3366: Tensor[(13, 6, 2), float64], %var_3381: Tensor[(70), float32], %var_3382: Tensor[(936, 1), float32], %var_3384: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) {
  %0 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %1 = cast(%var_3366, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %5 = cast(%var_3381, dtype="float32") /* ty=Tensor[(70), float32] */;
  %6 = cast(%var_3382, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %8 = cast(%var_3384, dtype="float32") /* ty=Tensor[(192), float32] */;
  %9 = reshape(%5, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %10 = reshape(%6, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %11 = reshape(%7, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %12 = reshape(%8, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
  %13 = @func_3303(%9, %10, %11, %12) /* ty=(Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %15 = cast(%var_3382, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
  %16 = divide(%3, %4) /* ty=Tensor[(13, 6, 2), float32] */;
  %17 = %13.8;
  %18 = minimum(%14, %15) /* ty=Tensor[(936, 24), float64] */;
  (%16, %17, %var_3381, %var_3384, %18)
}

def @func_8683(%var_8675: Tensor[(936), float32], %var_8677: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) {
  %19 = @func_5715() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %21 = cast(%var_8675, dtype="float32") /* ty=Tensor[(936), float32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %23 = cast(%var_8677, dtype="float32") /* ty=Tensor[(192), float32] */;
  %24 = reshape(%20, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %25 = reshape(%21, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %26 = reshape(%22, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %27 = reshape(%23, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
  %28 = @func_3303(%24, %25, %26, %27) /* ty=(Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) */;
  %29 = %19.0;
  %30 = %28.9;
  (%29, %30, meta[relay.Constant][1] /* ty=Tensor[(70), float32] */, %var_8675, meta[relay.Constant][2] /* ty=Tensor[(24), float64] */, %var_8677)
}

def @func_10243() -> (Tensor[(13, 6, 2), float64],) {
  %31 = @func_7803() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %32 = %31.0;
  (%32,)
}

def @func_5855() -> (Tensor[(13, 6, 2), float64],) {
  %33 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %35 = atanh(%34) /* ty=Tensor[(13, 6, 2), float64] */;
  (%35,)
}

def @func_5476(%var_5468: Tensor[(26, 4), float64], %var_5472: Tensor[(26, 4), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) {
  %36 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %37 = cast(%var_5468, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %38 = reshape(%37, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %39 = @func_3340(%38) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %40 = cast(%var_5472, dtype="int32") /* ty=Tensor[(26, 4), int32] */;
  %41 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(2), int32] */;
  %42 = cast(%var_5468, dtype="int32") /* ty=Tensor[(26, 4), int32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %44 = %36.0;
  %45 = %39.2;
  %46 = bitwise_xor(%42, %43) /* ty=Tensor[(26, 4), int32] */;
  (%44, %45, %46)
}

def @func_2607(%var_2554: Tensor[(6, 12, 13), float32], %var_2590: Tensor[(24, 1), float64], %var_2597: Tensor[(104), float64]) -> (Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 12, 13), float32] */, dtype="int16") /* ty=Tensor[(6, 12, 13), int16] */;
  %48 = shape_of(%var_2554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_2554, dtype="int16") /* ty=Tensor[(6, 12, 13), int16] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %51 = cast(%var_2554, dtype="float32") /* ty=Tensor[(6, 12, 13), float32] */;
  %52 = acosh(%51) /* ty=Tensor[(6, 12, 13), float32] */;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(6, 12, 13), float32] */;
  %54 = cast(%var_2590, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %55 = reshape(%54, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %56 = @func_2300(%55) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %58 = cast(%var_2597, dtype="float64") /* ty=Tensor[(104), float64] */;
  %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %60 = reshape(%57, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %61 = reshape(%58, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %62 = reshape(%59, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %63 = @func_1786(%60, %61, %62) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %64 = multiply(%49, %50) /* ty=Tensor[(6, 12, 13), int16] */;
  %65 = cos(%53) /* ty=Tensor[(6, 12, 13), float32] */;
  %66 = %56.0;
  %67 = %63.1;
  (%64, %65, %66, %var_2590, %67, meta[relay.Constant][4] /* ty=Tensor[(192), float32] */, %var_2597, meta[relay.Constant][5] /* ty=Tensor[(624), float64] */)
}

def @func_4172() -> (Tensor[(13, 6, 2), float64],) {
  %68 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %69 = %68.0;
  (%69,)
}

def @func_1362(%var_1349: Tensor[(8, 13, 1), float64], %var_1350: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), bool],) {
  %70 = cast(%var_1349, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
  %71 = cast(%var_1350, dtype="bool") /* ty=Tensor[(8, 13, 6), bool] */;
  %72 = not_equal(%70, %71) /* ty=Tensor[(8, 13, 6), bool] */;
  (%72,)
}

def @func_12904(%var_12863: Tensor[(5, 2, 15), float64], %var_12891: Tensor[(2, 312), float64]) -> (Tensor[(5, 2, 15), float32], Tensor[(5, 2, 15), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(2, 312), float64]) {
  %73 = cast(%var_12863, dtype="float64") /* ty=Tensor[(5, 2, 15), float64] */;
  %74 = atanh(%73) /* ty=Tensor[(5, 2, 15), float64] */;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(5, 2, 15), float32] */;
  %76 = shape_of(%var_12863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_12863, dtype="float32") /* ty=Tensor[(5, 2, 15), float32] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %79 = cast(%74, dtype="int8") /* ty=Tensor[(5, 2, 15), int8] */;
  %80 = shape_of(%var_12863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_12863, dtype="int8") /* ty=Tensor[(5, 2, 15), int8] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %83 = cast(%var_12891, dtype="float64") /* ty=Tensor[(2, 312), float64] */;
  %84 = reshape(%83, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %85 = @func_6937(%84) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) */;
  %86 = multiply(%77, %78) /* ty=Tensor[(5, 2, 15), float32] */;
  %87 = bitwise_and(%81, %82) /* ty=Tensor[(5, 2, 15), int8] */;
  %88 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %89 = %85.1;
  (%86, %87, %88, %89, %var_12891)
}

def @func_1786(%var_1759: Tensor[(16, 4, 3), float32], %var_1772: Tensor[(104), float64], %var_1773: Tensor[(624), float64]) -> (Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %91 = shape_of(%var_1759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_1759, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %94 = cast(%var_1759, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %95 = cast(%var_1772, dtype="float64") /* ty=Tensor[(104), float64] */;
  %96 = cast(%var_1773, dtype="float64") /* ty=Tensor[(624), float64] */;
  %97 = reshape(%95, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %98 = reshape(%96, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %99 = @func_1362(%97, %98) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %100 = divide(%92, %93) /* ty=Tensor[(16, 4, 3), float32] */;
  %101 = sigmoid(%94) /* ty=Tensor[(16, 4, 3), float32] */;
  %102 = %99.0;
  (%100, %101, %102, %var_1772, %var_1773)
}

def @func_6338() -> Tensor[(13, 6, 2), float64] {
  @func_3437() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_7102() -> (Tensor[(13, 6, 2), float64],) {
  %103 = @func_6198() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_7358() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) {
  %105 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %106 = @func_6266() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %107 = %105.1;
  %108 = %106.0;
  %109 = @func_7261() /* ty=Tensor[(13, 6, 2), float64] */;
  (%107, %108, %109)
}

def @func_11301(%var_11294: Tensor[(180), int8]) -> (Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) {
  %110 = @func_9450() /* ty=(Tensor[(12, 2, ?), int32],) */;
  %111 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %112 = cast(%var_11294, dtype="int8") /* ty=Tensor[(180), int8] */;
  %113 = reshape(%111, newshape=[]) /* ty=int8 */;
  %114 = reshape(%112, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
  %115 = @func_1196(%113, %114) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %116 = %110.0;
  %117 = %115.1;
  (%116, %117, meta[relay.Constant][7] /* ty=int8 */, %var_11294)
}

def @func_3873(%var_3865: Tensor[(3, 2, 8), float64]) -> (Tensor[(3, 2, 8), bool],) {
  %118 = cast(%var_3865, dtype="float64") /* ty=Tensor[(3, 2, 8), float64] */;
  %119 = atan(%118) /* ty=Tensor[(3, 2, 8), float64] */;
  %120 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 2, 8), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %124 = greater(%122, %123) /* ty=Tensor[(3, 2, 8), bool] */;
  (%124,)
}

def @func_4413(%var_4410: Tensor[(1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %125 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %126 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %127 = cast(%var_4410, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %128 = reshape(%127, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %129 = @func_1102(%128) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %130 = %125.0;
  %131 = %126.0;
  %132 = %129.0;
  (%130, %131, %132, %var_4410)
}

def @func_4199() -> (Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) {
  %133 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %135 = reshape(%134, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %136 = @func_2300(%135) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %137 = %133.2;
  %138 = %136.0;
  (%137, %138, meta[relay.Constant][9] /* ty=Tensor[(24), float64] */)
}

def @func_2937() -> Tensor[(13, 6, 2), float64] {
  %139 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  acos(%139) /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3734() -> Tensor[(13, 6, 2), float64] {
  %140 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %140.0
}

def @func_6254() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %141 = @func_5534() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %142 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %143 = %141.0;
  %144 = %142.0;
  (%143, %144)
}

def @func_6874() -> (Tensor[(13, 6, 2), float64],) {
  %145 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
  %146 = %145.0;
  (%146,)
}

def @func_7434(%var_7398: Tensor[(1, 70), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(5, 2, 7), float32], Tensor[(1, 70), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(7, 11, 5), float32], Tensor[(385), bool]) {
  %147 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %148 = cast(%var_7398, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %149 = cast(%var_7398, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %150 = reshape(%148, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %151 = reshape(%149, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %152 = @func_1343(%150, %151) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %154 = reshape(%153, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %155 = @func_7076(%154) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) */;
  %156 = cast(meta[relay.Constant][12] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %157 = cast(meta[relay.Constant][12] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %158 = reshape(%156, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %159 = reshape(%157, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %160 = @func_3796(%158, %159) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %161 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %162 = %147.0;
  %163 = %152.0;
  %164 = %155.2;
  %165 = %160.1;
  (%161, %162, %163, %var_7398, %164, meta[relay.Constant][11] /* ty=Tensor[(192), float32] */, %165, meta[relay.Constant][12] /* ty=Tensor[(385), bool] */)
}

def @func_8549() -> (Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) {
  %166 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %168 = reshape(%167, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %169 = @func_3873(%168) /* ty=(Tensor[(3, 2, 8), bool],) */;
  %170 = %166.0;
  %171 = %169.0;
  (%170, %171, meta[relay.Constant][13] /* ty=Tensor[(48), float64] */)
}

def @func_10577(%var_10572: Tensor[(11, 4, 9), float32]) -> Tensor[(11, 4, 9), uint64] {
  %172 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 9), float32] */;
  %173 = sin(%172) /* ty=Tensor[(11, 4, 9), float32] */;
  %174 = cast(%var_10572, dtype="uint64") /* ty=Tensor[(11, 4, 9), uint64] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="uint64") /* ty=Tensor[(11, 4, 9), uint64] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%176, %177) /* ty=Tensor[(11, 4, 9), uint64] */
}

def @func_4478() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) {
  %178 = @func_4396() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %179 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1755), float32] */, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
  %180 = reshape(%179, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %181 = @func_1102(%180) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %182 = %181.0;
  %183 = cast(%182, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
  %184 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(1, 1755), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %185 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1755), float32] */, dtype="bool") /* ty=Tensor[(1, 1755), bool] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %187 = less_equal(%185, %186) /* ty=Tensor[(?, 1755), bool] */;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(?, 1755), float32] */;
  %189 = reshape(%188, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %190 = @func_4413(%189) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %191 = cast(%182, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %192 = exp(%191) /* ty=Tensor[(13, 15, 9), float64] */;
  %193 = cast(%192, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %194 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %195 = %178.0;
  %196 = %190.3;
  %197 = sqrt(%193) /* ty=Tensor[(13, 15, 9), float32] */;
  (%194, %195, %187, %196, %197)
}

def @func_8134() -> (Tensor[(13, 6, 2), float64],) {
  %198 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  (%198,)
}

def @func_5410(%var_5387: Tensor[(70), float32], %var_5389: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64]) {
  %199 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %200 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %202 = cast(%var_5387, dtype="float32") /* ty=Tensor[(70), float32] */;
  %203 = cast(meta[relay.Constant][16] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %204 = cast(%var_5389, dtype="float32") /* ty=Tensor[(192), float32] */;
  %205 = reshape(%201, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %206 = reshape(%202, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %207 = reshape(%203, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %208 = reshape(%204, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %209 = @func_3392(%205, %206, %207, %208) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %210 = %199.2;
  %211 = %209.1;
  %212 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
  (%200, %210, %211, %var_5387, meta[relay.Constant][16] /* ty=Tensor[(936), float32] */, %var_5389, %212)
}

def @func_5987() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %213 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %214 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %215 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %216 = %213.0;
  %217 = %214.0;
  (%215, %216, %217)
}

def @func_5254(%var_5223: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) {
  %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(96, 2), float32] */, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %219 = cast(%var_5223, dtype="float64") /* ty=Tensor[(104), float64] */;
  %220 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %221 = reshape(%218, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %222 = reshape(%219, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %223 = reshape(%220, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %224 = @func_1786(%221, %222, %223) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %225 = %224.2;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %227 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  %228 = atan(%226) /* ty=Tensor[(8, 13, 6), float64] */;
  (%227, meta[relay.Constant][17] /* ty=Tensor[(96, 2), float32] */, %var_5223, meta[relay.Constant][18] /* ty=Tensor[(1, 624), float64] */, %228)
}

def @func_10516() -> Tensor[(13, 6, 2), float64] {
  %229 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %229.0
}

def @func_10762() -> (Tensor[(13, 6, 2), float64],) {
  %230 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %231 = %230.0;
  (%231,)
}

def @func_9932() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) {
  %232 = @func_9414() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %233 = cast(meta[relay.Constant][19] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %234 = reshape(%233, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %235 = @func_1444(%234) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %236 = %232.0;
  %237 = %235.0;
  (%236, %237, meta[relay.Constant][19] /* ty=Tensor[(169), uint64] */)
}

def @func_11827(%var_11821: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(936), float32]) {
  %238 = @func_9414() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %239 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %240 = cast(%var_11821, dtype="float32") /* ty=Tensor[(936), float32] */;
  %241 = reshape(%240, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %242 = @func_6529(%241) /* ty=(Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %243 = %238.0;
  %244 = %239.0;
  %245 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  %246 = %242.2;
  (%243, %244, %245, %246, %var_11821)
}

def @func_11051() -> (Tensor[(13, 1, 13), bool],) {
  %247 = @func_9932() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) */;
  %248 = %247.1;
  (%248,)
}

def @func_11376() -> (Tensor[(13, 6, 2), float64], Tensor[(7, 9, 12), float32], Tensor[(756), float64]) {
  %249 = cast(meta[relay.Constant][20] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %250 = reshape(%249, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %251 = @func_8172(%250) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) */;
  %252 = @func_9166() /* ty=Tensor[(13, 6, 2), float64] */;
  %253 = %251.1;
  (%252, %253, meta[relay.Constant][20] /* ty=Tensor[(756), float64] */)
}

def @func_5756() -> (Tensor[(13, 6, 2), float64],) {
  %254 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
  %255 = %254.0;
  (%255,)
}

def @func_11456() -> Tensor[(13, 6, 2), float64] {
  %256 = @func_9123() /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %256.3
}

def @func_12666(%var_12623: Tensor[(5, 9, 16), int64], %var_12641: Tensor[(156), float64], %var_12642: Tensor[(78), int32], %var_12645: Tensor[(24), float64]) -> (Tensor[(5, 9, 16), int64], Tensor[(1755), float32], Tensor[(156), float64], Tensor[(78), int32], Tensor[(468), int32], Tensor[(24), float64], Tensor[(1, 1755), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %257 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 9, 16), int64] */, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %258 = shape_of(%var_12623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_12623, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %261 = cast(%var_12641, dtype="float64") /* ty=Tensor[(156), float64] */;
  %262 = cast(%var_12642, dtype="int32") /* ty=Tensor[(78), int32] */;
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %264 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1755), float32] */, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
  %265 = cast(%var_12645, dtype="float64") /* ty=Tensor[(24), float64] */;
  %266 = reshape(%261, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %267 = reshape(%262, newshape=[78]) /* ty=Tensor[(78), int32] */;
  %268 = reshape(%263, newshape=[3, 156]) /* ty=Tensor[(3, 156), int32] */;
  %269 = reshape(%264, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %270 = reshape(%265, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %271 = @func_6075(%266, %267, %268, %269, %270) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) */;
  %272 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1755), float32] */, dtype="float64") /* ty=Tensor[(1, 1755), float64] */;
  %273 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %274 = logical_xor(%259, %260) /* ty=Tensor[(5, 9, 16), int64] */;
  %275 = %271.4;
  %276 = log(%272) /* ty=Tensor[(1, 1755), float64] */;
  %277 = %273.0;
  %278 = @func_9701() /* ty=Tensor[(13, 6, 2), float64] */;
  (%274, %275, %var_12641, %var_12642, meta[relay.Constant][22] /* ty=Tensor[(468), int32] */, %var_12645, %276, %277, %278)
}

def @func_12020() -> Tensor[(13, 6, 2), float64] {
  @func_11436() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3340(%var_3329: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
  %279 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %280 = cast(%var_3329, dtype="float64") /* ty=Tensor[(104), float64] */;
  %281 = reshape(%280, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %282 = @func_3178(%281) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) */;
  %283 = %279.0;
  %284 = %282.3;
  %285 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  (%283, %284, %var_3329, %285)
}

def @func_10548() -> Tensor[(13, 6, 2), float64] {
  %286 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %286.0
}

def @func_11897() -> Tensor[(13, 6, 2), float64] {
  %287 = @func_11580() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) */;
  %287.0
}

def @func_12760() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %288 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %289 = %288.0;
  %290 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  (%289, %290)
}

def @func_11005() -> (Tensor[(13, 6, 2), float64],) {
  %291 = @func_6115() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %292 = %291.2;
  (%292,)
}

def @func_10845(%var_10837: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(6, 2, 15), int8], int8, Tensor[(180), int8]) {
  %293 = @func_7592() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %294 = cast(meta[relay.Constant][24] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %295 = cast(%var_10837, dtype="int8") /* ty=Tensor[(180), int8] */;
  %296 = reshape(%294, newshape=[]) /* ty=int8 */;
  %297 = reshape(%295, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
  %298 = @func_1196(%296, %297) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %299 = %293.0;
  %300 = %298.0;
  (%299, %300, meta[relay.Constant][24] /* ty=int8 */, %var_10837)
}

def @func_13569() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32]) {
  %301 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %302 = @func_10904() /* ty=(Tensor[(13, 6, 2), float32],) */;
  %303 = %301.0;
  %304 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  %305 = %302.0;
  (%303, %304, %305)
}

def @func_2300(%var_2290: Tensor[(12, 2, 1), float64]) -> (Tensor[(12, 2, 1), float64],) {
  %306 = cast(%var_2290, dtype="float64") /* ty=Tensor[(12, 2, 1), float64] */;
  %307 = log10(%306) /* ty=Tensor[(12, 2, 1), float64] */;
  (%307,)
}

def @func_13331(%var_13286: Tensor[(192), float32], %var_13327: Tensor[(840, 1), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(70), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840, 1), uint64]) {
  %308 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %309 = @func_11580() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) */;
  %310 = cast(%var_13286, dtype="float32") /* ty=Tensor[(192), float32] */;
  %311 = reshape(%310, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %312 = @func_7076(%311) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) */;
  %313 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %314 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %315 = cast(%var_13327, dtype="uint64") /* ty=Tensor[(840, 1), uint64] */;
  %316 = reshape(%314, newshape=[]) /* ty=uint64 */;
  %317 = reshape(%315, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), uint64] */;
  %318 = @func_9372(%316, %317) /* ty=(Tensor[(14, 4, 15), uint64],) */;
  %319 = %308.0;
  %320 = %309.0;
  %321 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
  %322 = %312.2;
  %323 = %313.0;
  %324 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  %325 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %326 = %318.0;
  (%319, %320, %321, %322, %var_13286, %323, %324, %325, %326, meta[relay.Constant][25] /* ty=uint64 */, %var_13327)
}

def @func_3477() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %327 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %328 = cast(meta[relay.Constant][26] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %329 = reshape(%328, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %330 = @func_1102(%329) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %331 = %327.1;
  %332 = %330.0;
  (%331, %332, meta[relay.Constant][26] /* ty=Tensor[(1755), float32] */)
}

def @func_3190() -> Tensor[(13, 6, 2), float64] {
  %333 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %333.0
}

def @func_8786(%var_8774: Tensor[(1, 385), bool]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(7, 11, 5), bool], Tensor[(1, 385), bool], Tensor[(13, 6, 2), float64]) {
  %334 = @func_8080() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %335 = @func_6198() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %336 = cast(%var_8774, dtype="bool") /* ty=Tensor[(1, 385), bool] */;
  %337 = cast(%var_8774, dtype="bool") /* ty=Tensor[(1, 385), bool] */;
  %338 = reshape(%336, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %339 = reshape(%337, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %340 = @func_3796(%338, %339) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %341 = %334.2;
  %342 = %335.0;
  %343 = %340.0;
  %344 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  (%341, %342, %343, %var_8774, %344)
}

def @func_7143() -> (Tensor[(13, 6, 2), float64],) {
  %345 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %346 = %345.0;
  (%346,)
}

def @func_3955() -> (Tensor[(13, 6, 2), float64],) {
  %347 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
  (%347,)
}

def @func_4127() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %348 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %349 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
  (%348, %349)
}

def @func_13999() -> Tensor[(13, 6, 2), float64] {
  %350 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %350.1
}

def @func_8210(%var_8206: Tensor[(11, 4, 13), float64]) -> Tensor[(11, 4, 13), float64] {
  %351 = cast(%var_8206, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  sinh(%351) /* ty=Tensor[(11, 4, 13), float64] */
}

def @func_9325() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %352 = @func_6856() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %353 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %354 = %352.0;
  %355 = %353.1;
  (%354, %355)
}

def @func_1196(%var_1186: int8, %var_1187: Tensor[(6, 2, 15), int8]) -> (Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %356 = cast(%var_1186, dtype="int8") /* ty=int8 */;
  %357 = cast(%var_1187, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %359 = reshape(%358, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %360 = @func_1102(%359) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %361 = bitwise_xor(%356, %357) /* ty=Tensor[(6, 2, 15), int8] */;
  %362 = %360.0;
  (%361, %362, meta[relay.Constant][27] /* ty=Tensor[(1755), float32] */)
}

def @func_3110() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %363 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %365 = tan(%364) /* ty=Tensor[(13, 6, 2), float64] */;
  %366 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  (%365, %366)
}

def @func_5184(%var_5137: Tensor[(13, 6, 2), float64], %var_5147: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), bool], Tensor[(70), float32], Tensor[(70), float32], Tensor[(12, 78), float32], Tensor[(192), float32]) {
  %367 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %368 = cast(%var_5137, dtype="bool") /* ty=Tensor[(13, 6, 2), bool] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="bool") /* ty=Tensor[(13, 6, 2), bool] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %372 = cast(%var_5137, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %373 = cast(meta[relay.Constant][28] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %374 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 78), float32] */, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %375 = cast(%var_5147, dtype="float32") /* ty=Tensor[(192), float32] */;
  %376 = reshape(%372, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %377 = reshape(%373, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %378 = reshape(%374, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %379 = reshape(%375, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %380 = @func_3392(%376, %377, %378, %379) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %381 = less(%370, %371) /* ty=Tensor[(13, 6, 2), bool] */;
  %382 = %380.2;
  (%381, %382, meta[relay.Constant][28] /* ty=Tensor[(70), float32] */, meta[relay.Constant][29] /* ty=Tensor[(12, 78), float32] */, %var_5147)
}

def @func_6937(%var_6934: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) {
  %383 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %384 = cast(%var_6934, dtype="float64") /* ty=Tensor[(624), float64] */;
  %385 = reshape(%384, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
  %386 = @func_4357(%385) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
  %387 = %383.0;
  %388 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %389 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %390 = %386.3;
  (%387, %388, %389, %390, %var_6934)
}

def @func_9372(%var_9359: uint64, %var_9360: Tensor[(14, 4, 15), uint64]) -> (Tensor[(14, 4, 15), uint64],) {
  %391 = cast(%var_9359, dtype="uint64") /* ty=uint64 */;
  %392 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(14, 4, 15), uint64] */;
  %393 = minimum(%391, %392) /* ty=Tensor[(14, 4, 15), uint64] */;
  (%393,)
}

def @func_12772() -> (Tensor[(13, 6, 2), float64],) {
  %394 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %395 = %394.0;
  (%395,)
}

def @func_5797() -> Tensor[(13, 6, 2), float64] {
  %396 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %396.0
}

def @func_12989(%var_12957: Tensor[(88), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(11, 2, 4), float32], Tensor[(88), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %397 = @func_10336() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) */;
  %398 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %399 = cast(%var_12957, dtype="float32") /* ty=Tensor[(88), float32] */;
  %400 = reshape(%399, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float32] */;
  %401 = @func_8231(%400) /* ty=(Tensor[(11, 2, 4), float32],) */;
  %402 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %403 = %397.0;
  %404 = %398.0;
  %405 = %401.0;
  %406 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
  %407 = %402.0;
  (%403, %404, %405, %var_12957, %406, %407)
}

def @func_6544(%var_6538: Tensor[(2, 4, 8), float32]) -> Tensor[(2, 4, 8), float32] {
  %408 = cast(%var_6538, dtype="float32") /* ty=Tensor[(2, 4, 8), float32] */;
  atan(%408) /* ty=Tensor[(2, 4, 8), float32] */
}

def @func_7685(%var_7677: Tensor[(21, 7), bool], %var_7678: Tensor[(1, 169), uint64], %var_7679: Tensor[(104), float64], %var_7680: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(169), uint64], Tensor[(21, 7), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
  %409 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
  %410 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
  %411 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
  %412 = cast(%var_7678, dtype="uint64") /* ty=Tensor[(1, 169), uint64] */;
  %413 = cast(%var_7679, dtype="float64") /* ty=Tensor[(104), float64] */;
  %414 = cast(%var_7680, dtype="float64") /* ty=Tensor[(624), float64] */;
  %415 = reshape(%409, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %416 = reshape(%410, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %417 = reshape(%411, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %418 = reshape(%412, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %419 = reshape(%413, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %420 = reshape(%414, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %421 = @func_2245(%415, %416, %417, %418, %419, %420) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %422 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
  %423 = %421.2;
  (%422, %423, %var_7677, %var_7678, %var_7679, %var_7680)
}

def @func_8053() -> Tensor[(13, 6, 2), float64] {
  @func_7261() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3884() -> Tensor[(13, 6, 2), float64] {
  %424 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %424.0
}

def @func_1102(%var_1089: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) {
  %425 = cast(%var_1089, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %426 = cast(%var_1089, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %427 = sin(%425) /* ty=Tensor[(13, 15, 9), float32] */;
  %428 = acosh(%426) /* ty=Tensor[(13, 15, 9), float32] */;
  (%427, %428)
}

def @func_11795() -> Tensor[(13, 6, 2), float64] {
  %429 = @func_8424() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %429.1
}

def @func_3178(%var_3159: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) {
  %430 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %431 = cast(%var_3159, dtype="float64") /* ty=Tensor[(104), float64] */;
  %432 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 156), float64] */, dtype="float64") /* ty=Tensor[(4, 156), float64] */;
  %433 = reshape(%431, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %434 = reshape(%432, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %435 = @func_1362(%433, %434) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %436 = cast(meta[relay.Constant][31] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %437 = cast(%var_3159, dtype="float64") /* ty=Tensor[(104), float64] */;
  %438 = %435.0;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %440 = reshape(%436, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %441 = reshape(%437, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %442 = reshape(%439, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %443 = @func_1786(%440, %441, %442) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %444 = %430.1;
  %445 = %443.2;
  (%444, %438, %var_3159, meta[relay.Constant][30] /* ty=Tensor[(4, 156), float64] */, %445, meta[relay.Constant][31] /* ty=Tensor[(192), float32] */)
}

def @func_4357(%var_4329: Tensor[(24, 26), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) {
  %446 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %447 = reshape(%446, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %448 = @func_3340(%447) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %449 = cast(meta[relay.Constant][33] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %450 = cast(meta[relay.Constant][33] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %451 = cast(meta[relay.Constant][33] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %452 = cast(meta[relay.Constant][34] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %453 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %454 = cast(%var_4329, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
  %455 = reshape(%449, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %456 = reshape(%450, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %457 = reshape(%451, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %458 = reshape(%452, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %459 = reshape(%453, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %460 = reshape(%454, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %461 = @func_2245(%455, %456, %457, %458, %459, %460) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %462 = %461.12;
  %463 = cast(%462, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  %464 = cast(meta[relay.Constant][33] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %465 = cast(meta[relay.Constant][33] /* ty=Tensor[(147, 1), bool] */, dtype="float32") /* ty=Tensor[(147, 1), float32] */;
  %466 = cast(meta[relay.Constant][34] /* ty=Tensor[(169), uint64] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %467 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 26), float64] */, dtype="uint32") /* ty=Tensor[(24, 26), uint32] */;
  %468 = shape_of(%var_4329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(%var_4329, dtype="uint32") /* ty=Tensor[(24, 26), uint32] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %471 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %472 = %448.0;
  %473 = less_equal(%463, %464) /* ty=Tensor[(13, 147, 13), bool] */;
  %474 = divide(%465, %466) /* ty=Tensor[(147, 169), float32] */;
  %475 = left_shift(%469, %470) /* ty=Tensor[(24, 26), uint32] */;
  %476 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
  (%471, meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, %472, %473, %474, %475, %476)
}

def @func_5788() -> (Tensor[(13, 6, 2), float64],) {
  %477 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %478 = %477.0;
  (%478,)
}

def @func_7217() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) {
  %479 = cast(meta[relay.Constant][36] /* ty=Tensor[(52, 2), float64] */, dtype="float64") /* ty=Tensor[(52, 2), float64] */;
  %480 = reshape(%479, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %481 = @func_3340(%480) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %482 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
  %483 = %481.3;
  (%482, %483, meta[relay.Constant][36] /* ty=Tensor[(52, 2), float64] */)
}

def @func_3303(%var_3250: Tensor[(70), float32], %var_3254: Tensor[(936), float32], %var_3255: Tensor[(24), float64], %var_3294: Tensor[(96, 2), float32]) -> (Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) {
  %484 = cast(%var_3250, dtype="float32") /* ty=Tensor[(70), float32] */;
  %485 = cast(%var_3250, dtype="float32") /* ty=Tensor[(70), float32] */;
  %486 = reshape(%484, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %487 = reshape(%485, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %488 = @func_1343(%486, %487) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %489 = cast(%var_3254, dtype="float32") /* ty=Tensor[(936), float32] */;
  %490 = cast(%var_3255, dtype="float64") /* ty=Tensor[(24), float64] */;
  %491 = cast(meta[relay.Constant][37] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %492 = reshape(%489, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float32] */;
  %493 = reshape(%490, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %494 = reshape(%491, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %495 = @func_2607(%492, %493, %494) /* ty=(Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */;
  %496 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %498 = acosh(%497) /* ty=Tensor[(13, 6, 2), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %500 = cast(%var_3294, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %501 = %495.6;
  %502 = cast(%501, dtype="float64") /* ty=Tensor[(104), float64] */;
  %503 = cast(meta[relay.Constant][38] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %504 = reshape(%500, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %505 = reshape(%502, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %506 = reshape(%503, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %507 = @func_1786(%504, %505, %506) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %508 = cast(%var_3294, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %509 = %507.3;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(104), float64] */;
  %511 = cast(meta[relay.Constant][38] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %512 = reshape(%508, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %513 = reshape(%510, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %514 = reshape(%511, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %515 = @func_1786(%512, %513, %514) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %516 = %488.0;
  %517 = log2(%499) /* ty=Tensor[(13, 6, 2), float64] */;
  %518 = %515.3;
  (%516, %var_3250, %501, %var_3254, %var_3255, meta[relay.Constant][37] /* ty=Tensor[(104), float64] */, %517, %509, %var_3294, meta[relay.Constant][38] /* ty=Tensor[(624), float64] */, %518)
}

def @func_10343() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %519 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %520 = %519.0;
  %521 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  (%520, %521)
}

def @func_10786() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %522 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %523 = @func_6421() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %524 = %522.1;
  %525 = %523.0;
  (%524, %525)
}

def @func_7486(%var_7480: Tensor[(12, 2, 2), uint16]) -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) {
  %526 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %527 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %528 = %527.0;
  %529 = cast(%var_7480, dtype="int16") /* ty=Tensor[(12, 2, 2), int16] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="int16") /* ty=Tensor[(12, 2, 2), int16] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %533 = %526.0;
  %534 = add(%531, %532) /* ty=Tensor[(12, 2, 2), int16] */;
  (%533, %534)
}

def @func_7163() -> (Tensor[(13, 6, 2), float64],) {
  %535 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
  %536 = %535.1;
  (%536,)
}

def @func_7654(%var_7614: Tensor[(15, 13, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(15, 13, ?), float32]) {
  %537 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %538 = cast(%var_7614, dtype="float64") /* ty=Tensor[(15, 13, 1), float64] */;
  %539 = atanh(%538) /* ty=Tensor[(15, 13, 1), float64] */;
  %540 = cast(%var_7614, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %544 = left_shift(%542, %543) /* ty=Tensor[(15, 13, ?), uint8] */;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %546 = asinh(%545) /* ty=Tensor[(15, 13, ?), float32] */;
  %547 = cast(%539, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="uint8") /* ty=Tensor[(15, 13, ?), uint8] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %551 = minimum(%549, %550) /* ty=Tensor[(15, 13, ?), uint8] */;
  %552 = cast(%551, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %553 = acosh(%552) /* ty=Tensor[(15, 13, ?), float32] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %555 = %537.0;
  %556 = exp(%554) /* ty=Tensor[(15, 13, ?), float32] */;
  (%555, %556)
}

def @func_9751(%var_9733: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), int64], Tensor[(7, 8, 8), float32], Tensor[(448), float32]) {
  %557 = cast(%var_9733, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %558 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %561 = floor_divide(%559, %560) /* ty=Tensor[(9, 16, 5), float64] */;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(9, 16, 5), float32] */;
  %563 = tan(%562) /* ty=Tensor[(9, 16, 5), float32] */;
  %564 = cast(%561, dtype="bool") /* ty=Tensor[(9, 16, 5), bool] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="bool") /* ty=Tensor[(9, 16, 5), bool] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %568 = logical_and(%566, %567) /* ty=Tensor[(9, 16, 5), bool] */;
  %569 = cast(%568, dtype="int64") /* ty=Tensor[(9, 16, 5), int64] */;
  %570 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int64") /* ty=Tensor[(9, 16, 5), int64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %573 = cast(meta[relay.Constant][40] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %574 = reshape(%573, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float32] */;
  %575 = @func_7197(%574) /* ty=(Tensor[(7, 8, 8), float32],) */;
  %576 = left_shift(%571, %572) /* ty=Tensor[(9, 16, 5), int64] */;
  %577 = %575.0;
  (%576, %577, meta[relay.Constant][40] /* ty=Tensor[(448), float32] */)
}

def @func_3796(%var_3769: Tensor[(7, 11, 5), bool], %var_3787: Tensor[(7, 11, 5), bool]) -> (Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) {
  %578 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 11, 5), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %579 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%var_3769, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %582 = cast(%var_3787, dtype="uint32") /* ty=Tensor[(7, 11, 5), uint32] */;
  %583 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_3769, dtype="uint32") /* ty=Tensor[(7, 11, 5), uint32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %586 = bitwise_or(%584, %585) /* ty=Tensor[(7, 11, 5), uint32] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  %588 = logical_and(%580, %581) /* ty=Tensor[(7, 11, 5), bool] */;
  %589 = sin(%587) /* ty=Tensor[(7, 11, 5), float32] */;
  (%588, %589)
}

def @func_10204(%var_10192: Tensor[(13, 16, 8), float64]) -> Tensor[(13, 16, 8), float32] {
  %590 = cast(%var_10192, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
  %591 = log(%590) /* ty=Tensor[(13, 16, 8), float64] */;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
  cos(%592) /* ty=Tensor[(13, 16, 8), float32] */
}

def @func_9892() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %593 = @func_7803() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %594 = @func_9345() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %595 = @func_8053() /* ty=Tensor[(13, 6, 2), float64] */;
  %596 = %593.0;
  %597 = %594.0;
  (%595, %596, %597)
}

def @func_10423() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) {
  %598 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %599 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %600 = reshape(%599, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), uint16] */;
  %601 = @func_7486(%600) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) */;
  %602 = @func_8937() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %603 = %598.0;
  %604 = %601.1;
  %605 = %602.2;
  (%603, %604, meta[relay.Constant][42] /* ty=Tensor[(48), uint16] */, %605)
}

def @func_10934() -> Tensor[(13, 6, 2), float64] {
  %606 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %606.0
}

def @func_12619(%var_12588: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
  %607 = cast(%var_12588, dtype="float64") /* ty=Tensor[(104), float64] */;
  %608 = cast(%var_12588, dtype="float64") /* ty=Tensor[(104), float64] */;
  %609 = reshape(%607, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %610 = reshape(%608, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %611 = @func_5476(%609, %610) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) */;
  %612 = @func_9325() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %613 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  %614 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %615 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
  %616 = %611.1;
  %617 = %612.0;
  (%613, %614, %615, %616, %var_12588, %617)
}

def @func_9345() -> (Tensor[(13, 6, 2), float64],) {
  %618 = @func_7710() /* ty=Tensor[(13, 6, 2), float64] */;
  (%618,)
}

def @func_13443(%var_13433: Tensor[(9, 7, 16), uint8], %var_13434: Tensor[(9, 7, 16), uint8]) -> Tensor[(9, 7, 16), bool] {
  %619 = cast(%var_13434, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
  %620 = shape_of(%var_13433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%var_13433, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%621, %622) /* ty=Tensor[(9, 7, 16), bool] */
}

def @func_7580(%var_7573: Tensor[(624, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) {
  %623 = @func_7310() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %624 = cast(%var_7573, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %625 = reshape(%624, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %626 = @func_6937(%625) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) */;
  %627 = %623.0;
  %628 = %626.4;
  (%627, %628, %var_7573)
}

def @func_3587() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %629 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %630 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %631 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %632 = %629.0;
  %633 = %630.1;
  (%631, %632, %633)
}

def @func_11580() -> (Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) {
  %634 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %635 = cast(meta[relay.Constant][43] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %636 = reshape(%635, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
  %637 = @func_8210(%636) /* ty=Tensor[(11, 4, 13), float64] */;
  %638 = cast(meta[relay.Constant][43] /* ty=Tensor[(572), float64] */, dtype="uint32") /* ty=Tensor[(572), uint32] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="uint32") /* ty=Tensor[(11, 4, 13), uint32] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %642 = %634.0;
  %643 = bitwise_and(%640, %641) /* ty=Tensor[(11, 4, 13), uint32] */;
  (%642, %643)
}

def @func_4295() -> (Tensor[(12, 2, 2), uint16],) {
  %644 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %645 = %644.1;
  %646 = cast(%645, dtype="uint16") /* ty=Tensor[(12, 2, 1), uint16] */;
  %647 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 2, 2), float64] */, dtype="uint16") /* ty=Tensor[(12, 2, 2), uint16] */;
  %648 = bitwise_or(%646, %647) /* ty=Tensor[(12, 2, 2), uint16] */;
  (%648,)
}

def @func_4629(%var_4539: Tensor[(24), float64], %var_4547: Tensor[(385), bool], %var_4549: Tensor[(13, 6, 2), float64], %var_4556: Tensor[(147), bool], %var_4558: Tensor[(104), float64], %var_4559: Tensor[(624), float64], %var_4585: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(24), float64], Tensor[(7, 11, 5), bool], Tensor[(13, 6, 2), uint64], Tensor[(624), float64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(6, 2, 15), int8], int8, Tensor[(30, 6), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float64], Tensor[(385), float64]) {
  %649 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %650 = cast(%var_4539, dtype="float64") /* ty=Tensor[(24), float64] */;
  %651 = reshape(%650, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %652 = @func_2300(%651) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %653 = cast(%var_4547, dtype="bool") /* ty=Tensor[(385), bool] */;
  %654 = cast(%var_4547, dtype="bool") /* ty=Tensor[(385), bool] */;
  %655 = reshape(%653, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %656 = reshape(%654, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %657 = @func_3796(%655, %656) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %658 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %659 = %658.0;
  %660 = cast(%var_4549, dtype="uint64") /* ty=Tensor[(13, 6, 2), uint64] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="uint64") /* ty=Tensor[(13, 6, 2), uint64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %664 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %665 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %666 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %667 = cast(meta[relay.Constant][45] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %668 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %669 = cast(%var_4559, dtype="float64") /* ty=Tensor[(624), float64] */;
  %670 = reshape(%664, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %671 = reshape(%665, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %672 = reshape(%666, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %673 = reshape(%667, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %674 = reshape(%668, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %675 = reshape(%669, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %676 = @func_2245(%670, %671, %672, %673, %674, %675) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %677 = cast(meta[relay.Constant][46] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %678 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %679 = %676.11;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(624), float64] */;
  %681 = reshape(%677, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %682 = reshape(%678, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %683 = reshape(%680, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %684 = @func_1786(%681, %682, %683) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %685 = cast(meta[relay.Constant][47] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %686 = cast(meta[relay.Constant][48] /* ty=Tensor[(30, 6), int8] */, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %687 = reshape(%685, newshape=[]) /* ty=int8 */;
  %688 = reshape(%686, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
  %689 = @func_1196(%687, %688) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %690 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %691 = cast(%var_4539, dtype="float64") /* ty=Tensor[(24), float64] */;
  %692 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %693 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 70), float32] */, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %694 = cast(%var_4585, dtype="float32") /* ty=Tensor[(936), float32] */;
  %695 = reshape(%691, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
  %696 = reshape(%692, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %697 = reshape(%693, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %698 = reshape(%694, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %699 = @func_3713(%695, %696, %697, %698) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
  %700 = cast(%679, dtype="float64") /* ty=Tensor[(624), float64] */;
  %701 = reshape(%700, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
  %702 = @func_4357(%701) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
  %703 = cast(%var_4547, dtype="float64") /* ty=Tensor[(385), float64] */;
  %704 = %649.0;
  %705 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %706 = %652.0;
  %707 = %657.0;
  %708 = multiply(%662, %663) /* ty=Tensor[(13, 6, 2), uint64] */;
  %709 = %684.1;
  %710 = %689.0;
  %711 = @func_3437() /* ty=Tensor[(13, 6, 2), float64] */;
  %712 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %713 = %690.0;
  %714 = %699.0;
  %715 = %702.0;
  %716 = tan(%703) /* ty=Tensor[(385), float64] */;
  (%704, %705, %706, %var_4539, %707, %708, %679, %var_4556, meta[relay.Constant][45] /* ty=Tensor[(169), uint64] */, %var_4558, %var_4559, %709, meta[relay.Constant][46] /* ty=Tensor[(192), float32] */, %710, meta[relay.Constant][47] /* ty=int8 */, meta[relay.Constant][48] /* ty=Tensor[(30, 6), int8] */, %711, %712, %713, %714, meta[relay.Constant][49] /* ty=Tensor[(1, 70), float32] */, %var_4585, %715, %716)
}

def @func_12417(%var_12351: Tensor[(468), int32], %var_12394: Tensor[(936), float32], %var_12398: Tensor[(147), bool], %var_12399: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(468), int32], Tensor[(192), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(5, 2, 7), float32], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(312, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %717 = @func_11755() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) */;
  %718 = @func_10762() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %719 = cast(meta[relay.Constant][50] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %720 = cast(%var_12351, dtype="int32") /* ty=Tensor[(468), int32] */;
  %721 = reshape(%719, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %722 = reshape(%720, newshape=[468]) /* ty=Tensor[(468), int32] */;
  %723 = @func_8344(%721, %722) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) */;
  %724 = cast(%var_12394, dtype="float32") /* ty=Tensor[(936), float32] */;
  %725 = cast(meta[relay.Constant][51] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %726 = reshape(%724, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %727 = reshape(%725, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %728 = @func_8683(%726, %727) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) */;
  %729 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %730 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %731 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %732 = cast(%var_12399, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %733 = cast(meta[relay.Constant][52] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %734 = cast(meta[relay.Constant][53] /* ty=Tensor[(312, 2), float64] */, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %735 = reshape(%729, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %736 = reshape(%730, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %737 = reshape(%731, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %738 = reshape(%732, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %739 = reshape(%733, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %740 = reshape(%734, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %741 = @func_2245(%735, %736, %737, %738, %739, %740) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %742 = %717.0;
  %743 = %718.0;
  %744 = %723.0;
  %745 = %728.5;
  %746 = %741.6;
  %747 = @func_11795() /* ty=Tensor[(13, 6, 2), float64] */;
  %748 = @func_11436() /* ty=Tensor[(13, 6, 2), float64] */;
  (%742, %743, %744, meta[relay.Constant][50] /* ty=Tensor[(1755), float32] */, %var_12351, %745, %var_12394, meta[relay.Constant][51] /* ty=Tensor[(192), float32] */, %746, %var_12398, %var_12399, meta[relay.Constant][52] /* ty=Tensor[(104), float64] */, meta[relay.Constant][53] /* ty=Tensor[(312, 2), float64] */, %747, %748)
}

def @func_6688() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %749 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %750 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  (%749, %750)
}

def @func_8344(%var_8332: Tensor[(13, 15, 9), float32], %var_8341: Tensor[(468), int32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) {
  %751 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %752 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %753 = cast(meta[relay.Constant][54] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %754 = reshape(%753, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %755 = @func_1102(%754) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %756 = %755.1;
  %757 = cast(%var_8332, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %761 = cast(meta[relay.Constant][55] /* ty=Tensor[(26, 3), int32] */, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %762 = cast(%var_8341, dtype="int32") /* ty=Tensor[(468), int32] */;
  %763 = cast(%756, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %764 = cast(meta[relay.Constant][56] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %765 = reshape(%761, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int32] */;
  %766 = reshape(%762, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int32] */;
  %767 = reshape(%763, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %768 = reshape(%764, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %769 = @func_5948(%765, %766, %767, %768) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) */;
  %770 = %751.0;
  %771 = %752.0;
  %772 = subtract(%759, %760) /* ty=Tensor[(13, 15, 9), float32] */;
  %773 = %769.5;
  (%770, meta[relay.Constant][54] /* ty=Tensor[(1755), float32] */, %771, %772, %773, meta[relay.Constant][55] /* ty=Tensor[(26, 3), int32] */, %var_8341, meta[relay.Constant][56] /* ty=Tensor[(24), float64] */)
}

def @func_11633() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(2, 52), float64]) {
  %774 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %775 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 52), float64] */, dtype="float64") /* ty=Tensor[(2, 52), float64] */;
  %776 = reshape(%775, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %777 = @func_5254(%776) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) */;
  %778 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
  %779 = %774.0;
  %780 = %777.1;
  (%778, %779, %780, meta[relay.Constant][57] /* ty=Tensor[(2, 52), float64] */)
}

def @func_6809(%var_6798: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
  %781 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %782 = cast(meta[relay.Constant][58] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %783 = cast(%var_6798, dtype="float64") /* ty=Tensor[(104), float64] */;
  %784 = cast(meta[relay.Constant][59] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %785 = reshape(%782, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %786 = reshape(%783, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %787 = reshape(%784, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %788 = @func_1786(%785, %786, %787) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %789 = %781.0;
  %790 = %788.1;
  (%789, %790, meta[relay.Constant][58] /* ty=Tensor[(192), float32] */, %var_6798, meta[relay.Constant][59] /* ty=Tensor[(624), float64] */)
}

def @func_5715() -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %791 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %792 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  %793 = %791.1;
  (%792, %793)
}

def @func_5534() -> (Tensor[(13, 6, 2), float64],) {
  %794 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %795 = %794.0;
  (%795,)
}

def @func_7990(%var_7938: Tensor[(104), float64], %var_7939: Tensor[(624), float64], %var_7968: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64], Tensor[(7, 11, 5), bool], Tensor[(385), bool], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(624), float64], Tensor[(15, 117), float32], Tensor[(624, 1), float64]) {
  %796 = @func_7592() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %797 = cast(%var_7938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %798 = cast(%var_7939, dtype="float64") /* ty=Tensor[(624), float64] */;
  %799 = reshape(%797, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %800 = reshape(%798, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %801 = @func_1362(%799, %800) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %802 = cast(meta[relay.Constant][60] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %803 = cast(meta[relay.Constant][60] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %804 = reshape(%802, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %805 = reshape(%803, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %806 = @func_3796(%804, %805) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %807 = cast(meta[relay.Constant][61] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %808 = cast(meta[relay.Constant][61] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %809 = cast(meta[relay.Constant][61] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %810 = cast(%var_7968, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %811 = cast(%var_7938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %812 = %801.0;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %814 = reshape(%807, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %815 = reshape(%808, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %816 = reshape(%809, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %817 = reshape(%810, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %818 = reshape(%811, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %819 = reshape(%813, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %820 = @func_2245(%814, %815, %816, %817, %818, %819) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %821 = cast(%var_7939, dtype="float64") /* ty=Tensor[(624), float64] */;
  %822 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %823 = reshape(%821, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %824 = reshape(%822, newshape=[1, 1755]) /* ty=Tensor[(1, 1755), float32] */;
  %825 = @func_7906(%823, %824) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) */;
  %826 = cast(%812, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %827 = reshape(%826, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
  %828 = @func_7580(%827) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) */;
  %829 = %796.0;
  %830 = %806.0;
  %831 = %820.2;
  %832 = %825.3;
  %833 = %828.2;
  (%829, %812, %var_7938, %var_7939, %830, meta[relay.Constant][60] /* ty=Tensor[(385), bool] */, %831, meta[relay.Constant][61] /* ty=Tensor[(147), bool] */, %var_7968, %832, meta[relay.Constant][62] /* ty=Tensor[(15, 117), float32] */, %833)
}

def @func_10714(%var_10690: Tensor[(4, 10, 5), int32]) -> (Tensor[(4, 10, 5), int32],) {
  %834 = cast(%var_10690, dtype="int32") /* ty=Tensor[(4, 10, 5), int32] */;
  %835 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(4, 10, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 10, 5), int32] */, dtype="int32") /* ty=Tensor[(4, 10, 5), int32] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %838 = bitwise_and(%836, %837) /* ty=Tensor[(4, 10, 5), int32] */;
  (%838,)
}

def @func_7795() -> Tensor[(13, 6, 2), float64] {
  %839 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %839.1
}

def @func_9166() -> Tensor[(13, 6, 2), float64] {
  %840 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %840.0
}

def @func_6369() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %841 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %842 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %843 = %841.0;
  %844 = %842.0;
  (%843, %844)
}

def @func_11975() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %845 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %846 = %845.0;
  %847 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  (%846, %847)
}

def @func_7279() -> Tensor[(13, 6, 2), float64] {
  %848 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %848.0
}

def @func_12196() -> Tensor[(13, 6, 2), float64] {
  @func_9701() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9414() -> (Tensor[(13, 6, 2), float64],) {
  %849 = @func_8640() /* ty=Tensor[(13, 6, 2), float64] */;
  (%849,)
}

def @func_7759(%var_7747: Tensor[(1755), float32], %var_7748: Tensor[(147), bool], %var_7750: Tensor[(104), float64], %var_7751: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
  %850 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %851 = cast(%var_7747, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %852 = cast(%var_7748, dtype="bool") /* ty=Tensor[(147), bool] */;
  %853 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 169), uint64] */, dtype="uint64") /* ty=Tensor[(1, 169), uint64] */;
  %854 = cast(%var_7750, dtype="float64") /* ty=Tensor[(104), float64] */;
  %855 = cast(%var_7751, dtype="float64") /* ty=Tensor[(624), float64] */;
  %856 = reshape(%851, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %857 = reshape(%852, newshape=[147]) /* ty=Tensor[(147), bool] */;
  %858 = reshape(%853, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %859 = reshape(%854, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %860 = reshape(%855, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %861 = @func_5655(%856, %857, %858, %859, %860) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) */;
  %862 = %850.0;
  %863 = %861.10;
  (%862, %863, %var_7747, %var_7748, meta[relay.Constant][64] /* ty=Tensor[(1, 169), uint64] */, %var_7750, %var_7751)
}

def @func_7076(%var_7064: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) {
  %864 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %865 = %864.0;
  %866 = cast(%865, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %867 = cast(meta[relay.Constant][65] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %868 = cast(meta[relay.Constant][66] /* ty=Tensor[(936, 1), float32] */, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %869 = cast(%var_7064, dtype="float32") /* ty=Tensor[(192), float32] */;
  %870 = reshape(%866, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %871 = reshape(%867, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %872 = reshape(%868, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %873 = reshape(%869, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %874 = @func_3392(%870, %871, %872, %873) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %875 = cast(meta[relay.Constant][66] /* ty=Tensor[(936, 1), float32] */, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %876 = sqrt(%875) /* ty=Tensor[(936, 1), float32] */;
  %877 = cast(%876, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
  %878 = @func_7023() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %879 = %874.0;
  %880 = erf(%877) /* ty=Tensor[(936, 1), float64] */;
  %881 = %878.1;
  (%865, %879, meta[relay.Constant][65] /* ty=Tensor[(70), float32] */, %var_7064, %880, %881)
}

def @func_9450() -> (Tensor[(12, 2, ?), int32],) {
  %882 = @func_9123() /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %883 = %882.0;
  (%883,)
}

def @func_4396() -> (Tensor[(13, 6, 2), float64],) {
  %884 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %885 = %884.0;
  (%885,)
}

def @func_8640() -> Tensor[(13, 6, 2), float64] {
  %886 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %886.0
}

def @func_8231(%var_8221: Tensor[(11, 2, 4), float32]) -> (Tensor[(11, 2, 4), float32],) {
  %887 = cast(%var_8221, dtype="float32") /* ty=Tensor[(11, 2, 4), float32] */;
  %888 = log10(%887) /* ty=Tensor[(11, 2, 4), float32] */;
  (%888,)
}

def @func_10563() -> (Tensor[(13, 6, 2), float64],) {
  %889 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  (%889,)
}

def @func_3984() -> Tensor[(13, 6, 2), float64] {
  @func_3884() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_6295() -> Tensor[(13, 6, 2), float64] {
  %890 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %890.0
}

def @func_7023() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %891 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %892 = @func_6228() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %893 = %891.0;
  %894 = %892.0;
  (%893, %894)
}

def @func_13178() -> (Tensor[(13, 6, 2), float64],) {
  %895 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  (%895,)
}

def @func_2245(%var_2126: Tensor[(3, 7, 7), bool], %var_2127: Tensor[(3, 7, 7), bool], %var_2139: Tensor[(3, 7, 7), bool], %var_2145: Tensor[(169), uint64], %var_2189: Tensor[(104), float64], %var_2190: Tensor[(624), float64]) -> (Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) {
  %896 = cast(%var_2139, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %897 = shape_of(%var_2127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_2127, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %900 = cast(%var_2145, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %901 = reshape(%900, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %902 = @func_1444(%901) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %903 = cast(%var_2127, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %904 = shape_of(%var_2126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_2126, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %907 = logical_or(%905, %906) /* ty=Tensor[(3, 7, 7), bool] */;
  %908 = cast(%907, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %909 = shape_of(%var_2126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%var_2126, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %912 = bitwise_and(%910, %911) /* ty=Tensor[(3, 7, 7), uint16] */;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
  %914 = cast(%var_2145, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %915 = reshape(%914, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %916 = @func_1444(%915) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %917 = cast(%var_2126, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %918 = cast(meta[relay.Constant][67] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %919 = cast(meta[relay.Constant][67] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %920 = reshape(%918, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %921 = reshape(%919, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %922 = @func_1343(%920, %921) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %923 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %924 = cast(%var_2189, dtype="float64") /* ty=Tensor[(104), float64] */;
  %925 = cast(%var_2190, dtype="float64") /* ty=Tensor[(624), float64] */;
  %926 = reshape(%923, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %927 = reshape(%924, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %928 = reshape(%925, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %929 = @func_1786(%926, %927, %928) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %930 = %916.0;
  %931 = cast(%930, dtype="uint64") /* ty=Tensor[(13, 1, 13), uint64] */;
  %932 = reshape(%931, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %933 = @func_1444(%932) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %934 = %902.1;
  %935 = cast(%934, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %936 = reshape(%935, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %937 = @func_1102(%936) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %938 = maximum(%898, %899) /* ty=Tensor[(3, 7, 7), uint16] */;
  %939 = rsqrt(%913) /* ty=Tensor[(3, 7, 7), float32] */;
  %940 = cos(%917) /* ty=Tensor[(3, 7, 7), float64] */;
  %941 = %922.0;
  %942 = %929.1;
  %943 = %933.0;
  %944 = %937.1;
  (%938, %934, %var_2145, %939, %930, %940, %941, meta[relay.Constant][67] /* ty=Tensor[(70, 1), float32] */, %942, meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, %var_2189, %var_2190, %943, %944)
}

def @func_11939() -> (Tensor[(12, 2, 1), float64],) {
  %945 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %946 = %945.1;
  (%946,)
}

def @func_6075(%var_6060: Tensor[(13, 6, 2), float64], %var_6070: Tensor[(78), int32], %var_6071: Tensor[(3, 156), int32], %var_6072: Tensor[(1755), float32], %var_6073: Tensor[(24, 1), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) {
  %947 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %948 = cast(%var_6060, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %952 = cast(%var_6070, dtype="int32") /* ty=Tensor[(78), int32] */;
  %953 = cast(%var_6071, dtype="int32") /* ty=Tensor[(3, 156), int32] */;
  %954 = cast(%var_6072, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %955 = cast(%var_6073, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %956 = reshape(%952, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int32] */;
  %957 = reshape(%953, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int32] */;
  %958 = reshape(%954, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %959 = reshape(%955, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %960 = @func_5948(%956, %957, %958, %959) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) */;
  %961 = floor_divide(%950, %951) /* ty=Tensor[(13, 6, 2), float32] */;
  %962 = %960.6;
  (%961, %962, %var_6070, %var_6071, %var_6072, %var_6073)
}

def @func_3832() -> (Tensor[(13, 6, 2), float64],) {
  %963 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %964 = %963.0;
  (%964,)
}

def @func_6856() -> (Tensor[(13, 6, 2), float64],) {
  %965 = @func_6304() /* ty=Tensor[(13, 6, 2), float64] */;
  (%965,)
}

def @func_8080() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %966 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %967 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %968 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %969 = %966.0;
  %970 = %967.1;
  (%968, %969, %970)
}

def @func_4802() -> (Tensor[(13, 6, 2), float64],) {
  %971 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %972 = %971.1;
  (%972,)
}

def @func_11396() -> Tensor[(13, 6, 2), float64] {
  %973 = @func_10343() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %973.0
}

def @func_6228() -> (Tensor[(13, 6, 2), float64],) {
  %974 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
  (%974,)
}

def @func_14079() -> (Tensor[(147, 169), float32], Tensor[(13, 6, 2), float64]) {
  %975 = @func_13475() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) */;
  %976 = @func_10055() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) */;
  %977 = %975.2;
  %978 = %976.0;
  (%977, %978)
}

def @func_9863() -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %979 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %980 = %979.0;
  %981 = cast(%980, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %982 = @func_7102() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %983 = asin(%981) /* ty=Tensor[(13, 6, 2), float32] */;
  %984 = %982.0;
  (%983, %984)
}

def @func_6421() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %985 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %986 = @func_4740() /* ty=Tensor[(13, 6, 2), float64] */;
  (%985, %986)
}

def @func_10336() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) {
  %987 = @func_8203() /* ty=Tensor[(12, 2, 2), uint16] */;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %989 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  %990 = acos(%988) /* ty=Tensor[(12, 2, 2), float32] */;
  (%989, %990)
}

def @func_7310() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %991 = @func_6369() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %992 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  %993 = %991.1;
  (%992, %993)
}

def @func_12157() -> (Tensor[(13, 6, 2), float64],) {
  %994 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
  (%994,)
}

def @func_12245() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %995 = @func_10243() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %996 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %997 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %998 = %995.0;
  %999 = %996.0;
  %1000 = %997.0;
  (%998, %999, %1000)
}

def @func_7197(%var_7173: Tensor[(7, 8, 8), float32]) -> (Tensor[(7, 8, 8), float32],) {
  %1001 = cast(%var_7173, dtype="float32") /* ty=Tensor[(7, 8, 8), float32] */;
  %1002 = log(%1001) /* ty=Tensor[(7, 8, 8), float32] */;
  (%1002,)
}

def @func_6266() -> (Tensor[(12, 2, 2), uint16],) {
  %1003 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_7035() -> (Tensor[(13, 6, 2), float64],) {
  %1005 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1006 = %1005.0;
  (%1006,)
}

def @func_13475() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) {
  %1007 = @func_7217() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) */;
  %1008 = @func_8080() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1009 = cast(meta[relay.Constant][69] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1010 = reshape(%1009, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
  %1011 = @func_4357(%1010) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
  %1012 = %1007.0;
  %1013 = %1008.1;
  %1014 = %1011.4;
  (%1012, %1013, %1014, meta[relay.Constant][69] /* ty=Tensor[(624), float64] */)
}

def @func_3437() -> Tensor[(13, 6, 2), float64] {
  @func_2937() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_8172(%var_8138: Tensor[(7, 9, 12), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) {
  %1015 = @func_6436() /* ty=(Tensor[(13, 6, 2), float32],) */;
  %1016 = cast(%var_8138, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %1017 = sqrt(%1016) /* ty=Tensor[(7, 9, 12), float64] */;
  %1018 = cast(%var_8138, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%1017, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1022 = %1015.0;
  %1023 = floor_mod(%1020, %1021) /* ty=Tensor[(7, 9, 12), float32] */;
  (%1022, %1023)
}

def @func_13833(%var_13829: Tensor[(5, 10, 9), float32]) -> Tensor[(5, 10, 9), float32] {
  %1024 = cast(%var_13829, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
  log10(%1024) /* ty=Tensor[(5, 10, 9), float32] */
}

def @func_12739() -> Tensor[(13, 6, 2), float64] {
  %1025 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1025.0
}

def @func_4883(%var_4850: uint32, %var_4851: Tensor[(5, 13, 16), uint32]) -> (Tensor[(5, 13, 16), bool],) {
  %1026 = cast(%var_4850, dtype="bool") /* ty=bool */;
  %1027 = cast(%var_4851, dtype="bool") /* ty=Tensor[(5, 13, 16), bool] */;
  %1028 = greater_equal(%1026, %1027) /* ty=Tensor[(5, 13, 16), bool] */;
  (%1028,)
}

def @func_10904() -> (Tensor[(13, 6, 2), float32],) {
  %1029 = @func_7839() /* ty=Tensor[(13, 6, 2), float32] */;
  (%1029,)
}

def @func_10055() -> (Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) {
  %1030 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1031 = cast(meta[relay.Constant][70] /* ty=Tensor[(2, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 16), float64] */;
  %1032 = acosh(%1031) /* ty=Tensor[(2, 12, 16), float64] */;
  %1033 = cast(meta[relay.Constant][70] /* ty=Tensor[(2, 12, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%1032, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1037 = %1030.0;
  %1038 = power(%1035, %1036) /* ty=Tensor[(2, 12, 16), float32] */;
  (%1037, %1038)
}

def @main(%var_14101: Tensor[(14, 5, 15), float32]) -> Tensor[(14, 5, 15), float32] {
  %1039 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
  %1040 = shape_of(%var_14101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_14101, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1041, %1042) /* ty=Tensor[(14, 5, 15), float32] */
}

def @func_13802() -> Tensor[(13, 6, 2), float64] {
  %1043 = @func_7102() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1043.0
}

def @func_13719(%var_13618: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(12, 78), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840), uint64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, ?), float32], Tensor[(8, 13, 6), bool], Tensor[(12, 2, 2), uint16], Tensor[(8, 13, 6), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float64]) {
  %1044 = @func_7163() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1045 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 78), float32] */, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %1046 = cast(meta[relay.Constant][73] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1047 = cast(%var_13618, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1048 = reshape(%1045, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float32] */;
  %1049 = reshape(%1046, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %1050 = reshape(%1047, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1051 = @func_2607(%1048, %1049, %1050) /* ty=(Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */;
  %1052 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1053 = cast(meta[relay.Constant][75] /* ty=Tensor[(840), uint64] */, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %1054 = reshape(%1052, newshape=[]) /* ty=uint64 */;
  %1055 = reshape(%1053, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), uint64] */;
  %1056 = @func_9372(%1054, %1055) /* ty=(Tensor[(14, 4, 15), uint64],) */;
  %1057 = @func_10786() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1058 = @func_9804() /* ty=(Tensor[(12, 2, ?), float32],) */;
  %1059 = cast(%var_13618, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1060 = %1051.7;
  %1061 = cast(%1060, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1062 = reshape(%1059, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %1063 = reshape(%1061, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %1064 = @func_1362(%1062, %1063) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %1065 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %1066 = %1064.0;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %1068 = cast(meta[relay.Constant][76] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1069 = reshape(%1067, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1070 = reshape(%1068, newshape=[1, 1755]) /* ty=Tensor[(1, 1755), float32] */;
  %1071 = @func_7906(%1069, %1070) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) */;
  %1072 = cast(meta[relay.Constant][76] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1073 = reshape(%1072, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1074 = @func_10160(%1073) /* ty=(Tensor[(13, 15, 9), float64],) */;
  %1075 = %1044.0;
  %1076 = %1056.0;
  %1077 = %1057.1;
  %1078 = %1058.0;
  %1079 = %1065.1;
  %1080 = %1071.1;
  %1081 = %1074.0;
  (%1075, %1060, meta[relay.Constant][72] /* ty=Tensor[(12, 78), float32] */, meta[relay.Constant][73] /* ty=Tensor[(24), float64] */, %var_13618, %1076, meta[relay.Constant][74] /* ty=uint64 */, meta[relay.Constant][75] /* ty=Tensor[(840), uint64] */, %1077, %1078, %1066, %1079, %1080, meta[relay.Constant][76] /* ty=Tensor[(1755), float32] */, %1081)
}

def @func_13119() -> Tensor[(13, 6, 2), float64] {
  %1082 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1082.0
}

def @func_4963() -> Tensor[(13, 6, 2), float32] {
  %1083 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %1084 = cast(%1083, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  sigmoid(%1084) /* ty=Tensor[(13, 6, 2), float32] */
}

def @func_8853(%var_8833: Tensor[(2, 10, 3), bool], %var_8834: Tensor[(2, 10, 3), bool], %var_8844: Tensor[(70), float32]) -> (Tensor[(2, 10, 3), bool], Tensor[(5, 2, 7), float32], Tensor[(70), float32]) {
  %1085 = cast(%var_8834, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %1086 = shape_of(%var_8833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(%var_8833, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1089 = cast(%var_8844, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1090 = cast(%var_8844, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1091 = reshape(%1089, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %1092 = reshape(%1090, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %1093 = @func_1343(%1091, %1092) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %1094 = logical_or(%1087, %1088) /* ty=Tensor[(2, 10, 3), bool] */;
  %1095 = %1093.0;
  (%1094, %1095, %var_8844)
}

def @func_6186() -> (Tensor[(1755), float32],) {
  %1096 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1097 = %1096.2;
  (%1097,)
}

def @func_3922(%var_3918: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(192), float32], Tensor[(14, 5), float32], Tensor[(936), float32], Tensor[(8, 24), float32]) {
  %1098 = @func_3600() /* ty=Tensor[(13, 6, 2), float64] */;
  %1099 = cast(%1098, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1100 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 5), float32] */;
  %1101 = cast(%var_3918, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1102 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %1103 = reshape(%1099, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1104 = reshape(%1100, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1105 = reshape(%1101, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1106 = reshape(%1102, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1107 = @func_3392(%1103, %1104, %1105, %1106) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1108 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
  %1109 = %1107.3;
  (%1108, %1098, %1109, meta[relay.Constant][77] /* ty=Tensor[(14, 5), float32] */, %var_3918, meta[relay.Constant][78] /* ty=Tensor[(8, 24), float32] */)
}

def @func_4740() -> Tensor[(13, 6, 2), float64] {
  @func_3984() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9246() -> (Tensor[(104), float64],) {
  %1110 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
  %1111 = %1110.2;
  (%1111,)
}

def @func_9123() -> (Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1112 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %1113 = %1112.1;
  %1114 = cast(%1113, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %1115 = erf(%1114) /* ty=Tensor[(12, 2, 1), float32] */;
  %1116 = cast(%1115, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %1117 = shape_of(%1113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(%1113, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1120 = less_equal(%1118, %1119) /* ty=Tensor[(12, 2, ?), bool] */;
  %1121 = cast(%1120, dtype="int32") /* ty=Tensor[(12, 2, ?), int32] */;
  %1122 = shape_of(%1115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%1115, dtype="int32") /* ty=Tensor[(12, 2, 1), int32] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1125 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1126 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1127 = add(%1123, %1124) /* ty=Tensor[(12, 2, ?), int32] */;
  %1128 = %1125.1;
  %1129 = %1126.0;
  %1130 = @func_3600() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1127, %1128, %1129, %1130)
}

def @func_13536(%var_13530: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(180), int8]) {
  %1131 = cast(%var_13530, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1132 = reshape(%1131, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1133 = @func_11301(%1132) /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) */;
  %1134 = @func_7261() /* ty=Tensor[(13, 6, 2), float64] */;
  %1135 = %1133.1;
  (%1134, %1135, %var_13530)
}

def @func_1343(%var_1329: Tensor[(5, 2, 7), float32], %var_1330: Tensor[(5, 2, 7), float32]) -> (Tensor[(5, 2, 7), float32],) {
  %1136 = cast(%var_1330, dtype="float32") /* ty=Tensor[(5, 2, 7), float32] */;
  %1137 = shape_of(%var_1329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%var_1329, dtype="float32") /* ty=Tensor[(5, 2, 7), float32] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1140 = floor_mod(%1138, %1139) /* ty=Tensor[(5, 2, 7), float32] */;
  (%1140,)
}

def @func_10160(%var_10151: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float64],) {
  %1141 = @func_6758() /* ty=(Tensor[(13, 15, 9), float32],) */;
  %1142 = %1141.0;
  %1143 = cast(%var_10151, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %1144 = shape_of(%1142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1145 = cast(%1142, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1147 = floor_mod(%1145, %1146) /* ty=Tensor[(13, 15, 9), float64] */;
  (%1147,)
}

def @func_11184(%var_11170: Tensor[(1755), float32]) -> (Tensor[(4, 13, 8), uint8], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(48), float64], Tensor[(468), int32], Tensor[(1755), float32], Tensor[(468), int32]) {
  %1148 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 8), uint8] */;
  %1149 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 8), uint8] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1152 = @func_9325() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1153 = @func_10423() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) */;
  %1154 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1155 = @func_8549() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) */;
  %1156 = cast(%var_11170, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1157 = cast(meta[relay.Constant][81] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %1158 = reshape(%1156, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1159 = reshape(%1157, newshape=[468]) /* ty=Tensor[(468), int32] */;
  %1160 = @func_8344(%1158, %1159) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) */;
  %1161 = bitwise_or(%1150, %1151) /* ty=Tensor[(4, 13, 8), uint8] */;
  %1162 = %1152.1;
  %1163 = %1153.1;
  %1164 = @func_7795() /* ty=Tensor[(13, 6, 2), float64] */;
  %1165 = %1154.0;
  %1166 = %1155.2;
  %1167 = %1160.6;
  (%1161, %1162, %1163, %1164, %1165, %1166, %1167, %var_11170, meta[relay.Constant][81] /* ty=Tensor[(468), int32] */)
}

def @func_13824() -> (Tensor[(13, 6, 2), float64],) {
  %1168 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %1169 = %1168.1;
  (%1169,)
}

def @func_5080() -> (Tensor[(13, 6, 2), float64],) {
  %1170 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1171 = %1170.0;
  (%1171,)
}

def @func_3903() -> Tensor[(13, 6, 2), float64] {
  @func_3437() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_5705() -> (Tensor[(13, 6, 2), float64],) {
  %1172 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1173 = %1172.0;
  (%1173,)
}

def @func_9804() -> (Tensor[(12, 2, ?), float32],) {
  %1174 = @func_9450() /* ty=(Tensor[(12, 2, ?), int32],) */;
  %1175 = %1174.0;
  %1176 = cast(%1175, dtype="float32") /* ty=Tensor[(12, 2, ?), float32] */;
  %1177 = asinh(%1176) /* ty=Tensor[(12, 2, ?), float32] */;
  (%1177,)
}

def @func_13226() -> Tensor[(13, 6, 2), float64] {
  %1178 = @func_10336() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) */;
  %1178.0
}

def @func_5948(%var_5913: Tensor[(6, 13, 1), int32], %var_5914: Tensor[(6, 13, 6), int32], %var_5926: Tensor[(1755), float32], %var_5942: Tensor[(24), float64]) -> (Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) {
  %1179 = cast(%var_5913, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %1180 = cast(%var_5914, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %1181 = cast(%var_5926, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1182 = reshape(%1181, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %1183 = @func_4413(%1182) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1184 = cast(%var_5942, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1185 = cast(meta[relay.Constant][82] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1186 = cast(meta[relay.Constant][83] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1187 = cast(meta[relay.Constant][84] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1188 = reshape(%1184, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
  %1189 = reshape(%1185, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1190 = reshape(%1186, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %1191 = reshape(%1187, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %1192 = @func_3713(%1188, %1189, %1190, %1191) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
  %1193 = greater(%1179, %1180) /* ty=Tensor[(6, 13, 6), bool] */;
  %1194 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %1195 = %1183.2;
  %1196 = %1192.6;
  (%1193, %1194, %1195, %var_5926, %1196, %var_5942, meta[relay.Constant][82] /* ty=Tensor[(104), float64] */, meta[relay.Constant][83] /* ty=Tensor[(70), float32] */, meta[relay.Constant][84] /* ty=Tensor[(936), float32] */)
}

def @func_6529(%var_6465: Tensor[(936), float32]) -> (Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %1197 = @func_6266() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1198 = cast(meta[relay.Constant][85] /* ty=Tensor[(2, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %1199 = cast(meta[relay.Constant][86] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1200 = cast(meta[relay.Constant][87] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1201 = cast(%var_6465, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1202 = reshape(%1198, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
  %1203 = reshape(%1199, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1204 = reshape(%1200, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %1205 = reshape(%1201, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %1206 = @func_3713(%1202, %1203, %1204, %1205) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
  %1207 = %1206.9;
  %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1209 = @func_6421() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1210 = %1197.0;
  %1211 = sigmoid(%1208) /* ty=Tensor[(936), float32] */;
  %1212 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  %1213 = %1209.1;
  (%1210, meta[relay.Constant][85] /* ty=Tensor[(2, 12), float64] */, meta[relay.Constant][86] /* ty=Tensor[(104), float64] */, meta[relay.Constant][87] /* ty=Tensor[(70), float32] */, %var_6465, %1211, %1212, %1213)
}

def @func_13992(%var_13979: Tensor[(1, 10, 6), float32], %var_13985: Tensor[(1, 10, 6), float32]) -> Tensor[(?, 10, 6), bool] {
  %1214 = cast(%var_13979, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %1215 = asinh(%1214) /* ty=Tensor[(1, 10, 6), float32] */;
  %1216 = cast(%var_13985, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %1217 = shape_of(%1215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1218 = cast(%1215, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1218, %1219) /* ty=Tensor[(?, 10, 6), bool] */
}

def @func_12331() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1220 = @func_11755() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) */;
  %1221 = %1220.0;
  %1222 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1221, %1222)
}

def @func_8424() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1223 = @func_7279() /* ty=Tensor[(13, 6, 2), float64] */;
  %1224 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1223, %1224)
}

def @func_7906(%var_7878: Tensor[(624), float64], %var_7887: Tensor[(1, 1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) {
  %1225 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %1226 = cast(%var_7878, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1227 = reshape(%1225, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %1228 = reshape(%1226, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %1229 = @func_1362(%1227, %1228) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %1230 = cast(%var_7887, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
  %1231 = cast(meta[relay.Constant][89] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %1232 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %1233 = %1229.0;
  %1234 = cast(%1233, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %1235 = reshape(%1230, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %1236 = reshape(%1231, newshape=[147]) /* ty=Tensor[(147), bool] */;
  %1237 = reshape(%1232, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1238 = reshape(%1234, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1239 = @func_7759(%1235, %1236, %1237, %1238) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) */;
  %1240 = @func_7795() /* ty=Tensor[(13, 6, 2), float64] */;
  %1241 = %1239.6;
  %1242 = @func_7839() /* ty=Tensor[(13, 6, 2), float32] */;
  (%1240, %1233, meta[relay.Constant][88] /* ty=Tensor[(1, 104), float64] */, %var_7878, %1241, %var_7887, meta[relay.Constant][89] /* ty=Tensor[(147), bool] */, %1242)
}

def @func_1444(%var_1421: Tensor[(13, 1, 13), uint64]) -> (Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %1243 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 1, 13), uint64] */, dtype="bool") /* ty=Tensor[(1, 1, 13), bool] */;
  %1244 = cast(%var_1421, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  %1245 = cast(meta[relay.Constant][91] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1246 = reshape(%1245, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1247 = @func_1102(%1246) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %1248 = not_equal(%1243, %1244) /* ty=Tensor[(13, 1, 13), bool] */;
  %1249 = %1247.1;
  (%1248, %1249, meta[relay.Constant][91] /* ty=Tensor[(1755), float32] */)
}

def @func_9986(%var_9977: Tensor[(3, 10, 3), int64]) -> Tensor[(3, 10, 3), bool] {
  %1250 = cast(meta[relay.Constant][92] /* ty=Tensor[(3, 10, 3), int64] */, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %1251 = shape_of(%var_9977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1252 = cast(%var_9977, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1252, %1253) /* ty=Tensor[(3, 10, 3), bool] */
}

def @func_8203() -> Tensor[(12, 2, 2), uint16] {
  %1254 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1254.0
}

def @func_3713(%var_3700: Tensor[(12, 2), float64], %var_3705: Tensor[(104), float64], %var_3708: Tensor[(1, 70), float32], %var_3709: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) {
  %1255 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %1256 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1257 = cast(%var_3700, dtype="float64") /* ty=Tensor[(12, 2), float64] */;
  %1258 = reshape(%1257, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %1259 = @func_2300(%1258) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %1260 = cast(%var_3705, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1261 = reshape(%1260, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1262 = @func_3340(%1261) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %1263 = %1255.1;
  %1264 = cast(%1263, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1265 = cast(%var_3708, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %1266 = cast(%var_3709, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1267 = cast(meta[relay.Constant][93] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1268 = reshape(%1264, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1269 = reshape(%1265, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1270 = reshape(%1266, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1271 = reshape(%1267, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1272 = @func_3392(%1268, %1269, %1270, %1271) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1273 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %1274 = %1256.0;
  %1275 = %1259.0;
  %1276 = %1262.2;
  %1277 = %1272.1;
  (%1273, %1263, %1274, %1275, %var_3700, %1276, %var_3705, %1277, %var_3708, %var_3709, meta[relay.Constant][93] /* ty=Tensor[(192), float32] */)
}

def @func_9562() -> Tensor[(13, 6, 2), float64] {
  %1278 = @func_5705() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1278.0
}

def @func_10018() -> (Tensor[(12, 2, 2), uint16],) {
  %1279 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %1280 = %1279.1;
  (%1280,)
}

def @func_6993() -> (Tensor[(13, 6, 2), float64],) {
  %1281 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1282 = %1281.0;
  (%1282,)
}

def @func_7592() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1283 = @func_5987() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1284 = %1283.0;
  %1285 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1284, %1285)
}

def @func_7710() -> Tensor[(13, 6, 2), float64] {
  %1286 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1286.0
}

def @func_6436() -> (Tensor[(13, 6, 2), float32],) {
  %1287 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  (%1287,)
}

def @func_7556(%var_7507: Tensor[(4, 4, 2), float32], %var_7526: Tensor[(104), float64]) -> (Tensor[(4, 4, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  %1288 = cast(%var_7507, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1289 = acos(%1288) /* ty=Tensor[(4, 4, 2), float32] */;
  %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %1291 = cast(%var_7526, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1292 = cast(meta[relay.Constant][94] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1293 = reshape(%1291, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %1294 = reshape(%1292, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %1295 = @func_1362(%1293, %1294) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %1296 = cast(meta[relay.Constant][94] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1297 = exp(%1290) /* ty=Tensor[(4, 4, 2), float64] */;
  %1298 = %1295.0;
  %1299 = sinh(%1296) /* ty=Tensor[(624), float64] */;
  (%1297, %1298, %var_7526, %1299)
}

def @func_7839() -> Tensor[(13, 6, 2), float32] {
  %1300 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1301 = %1300.0;
  %1302 = cast(%1301, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  sqrt(%1302) /* ty=Tensor[(13, 6, 2), float32] */
}

def @func_7803() -> (Tensor[(13, 6, 2), float64],) {
  %1303 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1304 = %1303.0;
  (%1304,)
}

def @func_9701() -> Tensor[(13, 6, 2), float64] {
  @func_7261() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10885(%var_10863: Tensor[(624), float64]) -> (Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(624), float64]) {
  %1305 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1306 = cast(%var_10863, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1307 = reshape(%1306, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
  %1308 = @func_7580(%1307) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) */;
  %1309 = %1305.0;
  %1310 = %1308.0;
  (%1309, %1310, %var_10863)
}

def @func_6304() -> Tensor[(13, 6, 2), float64] {
  %1311 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %1311.1
}

def @func_11436() -> Tensor[(13, 6, 2), float64] {
  @func_3190() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_5514() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) {
  %1312 = cast(meta[relay.Constant][95] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1313 = cast(meta[relay.Constant][95] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1314 = reshape(%1312, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %1315 = reshape(%1313, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %1316 = @func_5476(%1314, %1315) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) */;
  %1317 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %1318 = %1316.0;
  (%1317, %1318, meta[relay.Constant][95] /* ty=Tensor[(104), float64] */)
}

def @func_3600() -> Tensor[(13, 6, 2), float64] {
  %1319 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1319.0
}

def @func_11755() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) {
  %1320 = @func_10343() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1321 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1322 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %1323 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %1324 = %1320.1;
  %1325 = %1321.0;
  (%1322, %1323, %1324, %1325)
}

def @func_6758() -> (Tensor[(13, 15, 9), float32],) {
  %1326 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %1327 = %1326.2;
  (%1327,)
}

def @func_6115() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %1328 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1329 = %1328.0;
  %1330 = cast(%1329, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1331 = @func_5705() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1332 = rsqrt(%1330) /* ty=Tensor[(13, 6, 2), float64] */;
  %1333 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  %1334 = %1331.0;
  (%1332, %1333, %1334)
}

def @func_5655(%var_5607: Tensor[(1755), float32], %var_5617: Tensor[(147), bool], %var_5618: Tensor[(169), uint64], %var_5619: Tensor[(104), float64], %var_5620: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) {
  %1335 = cast(%var_5607, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1336 = reshape(%1335, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1337 = @func_1102(%1336) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %1338 = cast(%var_5607, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1339 = reshape(%1338, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1340 = @func_1102(%1339) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %1341 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %1342 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %1343 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %1344 = cast(%var_5618, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %1345 = cast(%var_5619, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1346 = cast(%var_5620, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1347 = reshape(%1341, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1348 = reshape(%1342, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1349 = reshape(%1343, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1350 = reshape(%1344, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %1351 = reshape(%1345, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1352 = reshape(%1346, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1353 = @func_2245(%1347, %1348, %1349, %1350, %1351, %1352) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %1354 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %1355 = cast(%1354, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1356 = cast(meta[relay.Constant][96] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1357 = cast(meta[relay.Constant][97] /* ty=Tensor[(6, 156), float32] */, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
  %1358 = cast(meta[relay.Constant][98] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1359 = reshape(%1355, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1360 = reshape(%1356, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1361 = reshape(%1357, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1362 = reshape(%1358, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1363 = @func_3392(%1359, %1360, %1361, %1362) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1364 = cast(%var_5619, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1365 = reshape(%1364, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1366 = @func_5254(%1365) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) */;
  %1367 = %1337.0;
  %1368 = cast(%1367, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %1369 = reshape(%1368, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1370 = @func_1102(%1369) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %1371 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %1372 = %1340.1;
  %1373 = %1353.2;
  %1374 = %1363.1;
  %1375 = %1366.4;
  %1376 = %1370.1;
  (%1354, %1371, %1367, %var_5607, %1372, %1373, %var_5617, %var_5618, %var_5619, %var_5620, %1374, meta[relay.Constant][96] /* ty=Tensor[(70), float32] */, meta[relay.Constant][97] /* ty=Tensor[(6, 156), float32] */, meta[relay.Constant][98] /* ty=Tensor[(192), float32] */, %1375, %1376)
}

def @func_7261() -> Tensor[(13, 6, 2), float64] {
  %1377 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1377.1
}

def @func_6198() -> (Tensor[(13, 6, 2), float64],) {
  %1378 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1379 = %1378.0;
  (%1379,)
}

def @func_13105() -> (Tensor[(13, 6, 2), float64],) {
  %1380 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %1381 = %1380.1;
  (%1381,)
}

def @func_8937() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %1382 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %1383 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
  %1384 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %1385 = %1382.4;
  (%1383, %1384, %1385)
}

def @func_8282() -> (Tensor[(13, 6, 2), float64],) {
  %1386 = @func_6993() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1387 = %1386.0;
  (%1387,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6531(%var_6530: Tensor[(936), float32]) -> (Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %17 = fn (%var_6465: Tensor[(936), float32]) -> (Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
    %0 = @func_6266() /* ty=(Tensor[(12, 2, 2), uint16],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
    %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %3 = cast(meta[relay.Constant][2] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %4 = cast(%var_6465, dtype="float32") /* ty=Tensor[(936), float32] */;
    %5 = reshape(%1, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
    %6 = reshape(%2, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %7 = reshape(%3, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
    %8 = reshape(%4, newshape=[936]) /* ty=Tensor[(936), float32] */;
    %9 = @func_3713(%5, %6, %7, %8) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
    %10 = %9.9;
    %11 = cast(%10, dtype="float32") /* ty=Tensor[(936), float32] */;
    %12 = @func_6421() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %13 = %0.0;
    %14 = sigmoid(%11) /* ty=Tensor[(936), float32] */;
    %15 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
    %16 = %12.1;
    (%13, meta[relay.Constant][0] /* ty=Tensor[(2, 12), float64] */, meta[relay.Constant][1] /* ty=Tensor[(104), float64] */, meta[relay.Constant][2] /* ty=Tensor[(70), float32] */, %var_6465, %14, %15, %16)
  };
  %17(%var_6530) /* ty=(Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_1791(%var_1788: Tensor[(16, 4, 3), float32], %var_1789: Tensor[(104), float64], %var_1790: Tensor[(624), float64]) -> (Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  @func_1786(%var_1788, %var_1789, %var_1790) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_8234(%var_8232: Tensor[(11, 2, 4), float32]) -> (Tensor[(11, 2, 4), float32],) {
  @func_8231(%var_8232) /* ty=(Tensor[(11, 2, 4), float32],) */
}

def @func_6689() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %20 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %18 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    %19 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    (%18, %19)
  };
  %20() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_8231(%var_8221: Tensor[(11, 2, 4), float32]) -> (Tensor[(11, 2, 4), float32],) {
  %21 = cast(%var_8221, dtype="float32") /* ty=Tensor[(11, 2, 4), float32] */;
  %22 = log10(%21) /* ty=Tensor[(11, 2, 4), float32] */;
  (%22,)
}

def @func_6993() -> (Tensor[(13, 6, 2), float64],) {
  %23 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %24 = %23.0;
  (%24,)
}

def @func_8054() -> Tensor[(13, 6, 2), float64] {
  %25 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_7261() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %25() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9564() -> Tensor[(13, 6, 2), float64] {
  @func_9562() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_12333() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_12331() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_10020() -> (Tensor[(12, 2, 2), uint16],) {
  @func_10018() /* ty=(Tensor[(12, 2, 2), uint16],) */
}

def @func_3181(%var_3179: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) {
  @func_3178(%var_3179) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) */
}

def @func_5717() -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  @func_5715() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_5655(%var_5607: Tensor[(1755), float32], %var_5617: Tensor[(147), bool], %var_5618: Tensor[(169), uint64], %var_5619: Tensor[(104), float64], %var_5620: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) {
  %26 = cast(%var_5607, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %27 = reshape(%26, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %28 = @func_1102(%27) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %29 = cast(%var_5607, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %30 = reshape(%29, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %31 = @func_1102(%30) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %32 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %33 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %34 = cast(%var_5617, dtype="bool") /* ty=Tensor[(147), bool] */;
  %35 = cast(%var_5618, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %36 = cast(%var_5619, dtype="float64") /* ty=Tensor[(104), float64] */;
  %37 = cast(%var_5620, dtype="float64") /* ty=Tensor[(624), float64] */;
  %38 = reshape(%32, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %39 = reshape(%33, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %40 = reshape(%34, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %41 = reshape(%35, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %42 = reshape(%36, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %43 = reshape(%37, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %44 = @func_2245(%38, %39, %40, %41, %42, %43) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %45 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %48 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 156), float32] */, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %50 = reshape(%46, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %51 = reshape(%47, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %52 = reshape(%48, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %53 = reshape(%49, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %54 = @func_3392(%50, %51, %52, %53) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %55 = cast(%var_5619, dtype="float64") /* ty=Tensor[(104), float64] */;
  %56 = reshape(%55, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %57 = @func_5254(%56) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) */;
  %58 = %28.0;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %60 = reshape(%59, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %61 = @func_1102(%60) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %62 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %63 = %31.1;
  %64 = %44.2;
  %65 = %54.1;
  %66 = %57.4;
  %67 = %61.1;
  (%45, %62, %58, %var_5607, %63, %64, %var_5617, %var_5618, %var_5619, %var_5620, %65, meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, meta[relay.Constant][4] /* ty=Tensor[(6, 156), float32] */, meta[relay.Constant][5] /* ty=Tensor[(192), float32] */, %66, %67)
}

def @func_1362(%var_1349: Tensor[(8, 13, 1), float64], %var_1350: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), bool],) {
  %68 = cast(%var_1349, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
  %69 = cast(%var_1350, dtype="bool") /* ty=Tensor[(8, 13, 6), bool] */;
  %70 = not_equal(%68, %69) /* ty=Tensor[(8, 13, 6), bool] */;
  (%70,)
}

def @func_1366(%var_1364: Tensor[(8, 13, 1), float64], %var_1365: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), bool],) {
  @func_1362(%var_1364, %var_1365) /* ty=(Tensor[(8, 13, 6), bool],) */
}

def @func_3734() -> Tensor[(13, 6, 2), float64] {
  %71 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %71.0
}

def @func_6255() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %76 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %72 = @func_5534() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %73 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %74 = %72.0;
    %75 = %73.0;
    (%74, %75)
  };
  %76() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_11977() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_11975() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_13802() -> Tensor[(13, 6, 2), float64] {
  %77 = @func_7102() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %77.0
}

def @func_6857() -> (Tensor[(13, 6, 2), float64],) {
  %79 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %78 = @func_6304() /* ty=Tensor[(13, 6, 2), float64] */;
    (%78,)
  };
  %79() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_5715() -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %80 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %81 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  %82 = %80.1;
  (%81, %82)
}

def @func_11398() -> Tensor[(13, 6, 2), float64] {
  @func_11396() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3956() -> (Tensor[(13, 6, 2), float64],) {
  %84 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %83 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
    (%83,)
  };
  %84() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_6423() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_6421() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_7280() -> Tensor[(13, 6, 2), float64] {
  %86 = fn () -> Tensor[(13, 6, 2), float64] {
    %85 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %85.0
  };
  %86() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10716(%var_10715: Tensor[(4, 10, 5), int32]) -> (Tensor[(4, 10, 5), int32],) {
  %92 = fn (%var_10690: Tensor[(4, 10, 5), int32]) -> (Tensor[(4, 10, 5), int32],) {
    %87 = cast(%var_10690, dtype="int32") /* ty=Tensor[(4, 10, 5), int32] */;
    %88 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(4, 10, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 10, 5), int32] */, dtype="int32") /* ty=Tensor[(4, 10, 5), int32] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %91 = bitwise_and(%89, %90) /* ty=Tensor[(4, 10, 5), int32] */;
    (%91,)
  };
  %92(%var_10715) /* ty=(Tensor[(4, 10, 5), int32],) */
}

def @func_11757() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) {
  @func_11755() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) */
}

def @func_5188(%var_5186: Tensor[(13, 6, 2), float64], %var_5187: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), bool], Tensor[(70), float32], Tensor[(70), float32], Tensor[(12, 78), float32], Tensor[(192), float32]) {
  @func_5184(%var_5186, %var_5187) /* ty=(Tensor[(13, 6, 2), bool], Tensor[(70), float32], Tensor[(70), float32], Tensor[(12, 78), float32], Tensor[(192), float32]) */
}

def @func_8686(%var_8684: Tensor[(936), float32], %var_8685: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) {
  %105 = fn (%var_8675: Tensor[(936), float32], %var_8677: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) {
    %93 = @func_5715() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
    %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %95 = cast(%var_8675, dtype="float32") /* ty=Tensor[(936), float32] */;
    %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %97 = cast(%var_8677, dtype="float32") /* ty=Tensor[(192), float32] */;
    %98 = reshape(%94, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %99 = reshape(%95, newshape=[936]) /* ty=Tensor[(936), float32] */;
    %100 = reshape(%96, newshape=[24]) /* ty=Tensor[(24), float64] */;
    %101 = reshape(%97, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
    %102 = @func_3303(%98, %99, %100, %101) /* ty=(Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) */;
    %103 = %93.0;
    %104 = %102.9;
    (%103, %104, meta[relay.Constant][7] /* ty=Tensor[(70), float32] */, %var_8675, meta[relay.Constant][8] /* ty=Tensor[(24), float64] */, %var_8677)
  };
  %105(%var_8684, %var_8685) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) */
}

def @func_11187(%var_11185: Tensor[(1755), float32]) -> (Tensor[(4, 13, 8), uint8], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(48), float64], Tensor[(468), int32], Tensor[(1755), float32], Tensor[(468), int32]) {
  @func_11184(%var_11185) /* ty=(Tensor[(4, 13, 8), uint8], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(48), float64], Tensor[(468), int32], Tensor[(1755), float32], Tensor[(468), int32]) */
}

def @func_7025() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_7023() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_5788() -> (Tensor[(13, 6, 2), float64],) {
  %106 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %107 = %106.0;
  (%107,)
}

def @func_3875(%var_3874: Tensor[(3, 2, 8), float64]) -> (Tensor[(3, 2, 8), bool],) {
  %115 = fn (%var_3865: Tensor[(3, 2, 8), float64]) -> (Tensor[(3, 2, 8), bool],) {
    %108 = cast(%var_3865, dtype="float64") /* ty=Tensor[(3, 2, 8), float64] */;
    %109 = atan(%108) /* ty=Tensor[(3, 2, 8), float64] */;
    %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 2, 8), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %114 = greater(%112, %113) /* ty=Tensor[(3, 2, 8), bool] */;
    (%114,)
  };
  %115(%var_3874) /* ty=(Tensor[(3, 2, 8), bool],) */
}

def @func_10055() -> (Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) {
  %116 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 16), float64] */;
  %118 = acosh(%117) /* ty=Tensor[(2, 12, 16), float64] */;
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %123 = %116.0;
  %124 = power(%121, %122) /* ty=Tensor[(2, 12, 16), float32] */;
  (%123, %124)
}

def @func_8348(%var_8346: Tensor[(13, 15, 9), float32], %var_8347: Tensor[(468), int32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) {
  @func_8344(%var_8346, %var_8347) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) */
}

def @func_13719(%var_13618: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(12, 78), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840), uint64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, ?), float32], Tensor[(8, 13, 6), bool], Tensor[(12, 2, 2), uint16], Tensor[(8, 13, 6), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float64]) {
  %125 = @func_7163() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %126 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 78), float32] */, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %127 = cast(meta[relay.Constant][12] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %128 = cast(%var_13618, dtype="float64") /* ty=Tensor[(104), float64] */;
  %129 = reshape(%126, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float32] */;
  %130 = reshape(%127, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %131 = reshape(%128, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %132 = @func_2607(%129, %130, %131) /* ty=(Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */;
  %133 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %134 = cast(meta[relay.Constant][14] /* ty=Tensor[(840), uint64] */, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %135 = reshape(%133, newshape=[]) /* ty=uint64 */;
  %136 = reshape(%134, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), uint64] */;
  %137 = @func_9372(%135, %136) /* ty=(Tensor[(14, 4, 15), uint64],) */;
  %138 = @func_10786() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %139 = @func_9804() /* ty=(Tensor[(12, 2, ?), float32],) */;
  %140 = cast(%var_13618, dtype="float64") /* ty=Tensor[(104), float64] */;
  %141 = %132.7;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(624), float64] */;
  %143 = reshape(%140, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %144 = reshape(%142, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %145 = @func_1362(%143, %144) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %146 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %147 = %145.0;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %149 = cast(meta[relay.Constant][15] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %150 = reshape(%148, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %151 = reshape(%149, newshape=[1, 1755]) /* ty=Tensor[(1, 1755), float32] */;
  %152 = @func_7906(%150, %151) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) */;
  %153 = cast(meta[relay.Constant][15] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %154 = reshape(%153, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %155 = @func_10160(%154) /* ty=(Tensor[(13, 15, 9), float64],) */;
  %156 = %125.0;
  %157 = %137.0;
  %158 = %138.1;
  %159 = %139.0;
  %160 = %146.1;
  %161 = %152.1;
  %162 = %155.0;
  (%156, %141, meta[relay.Constant][11] /* ty=Tensor[(12, 78), float32] */, meta[relay.Constant][12] /* ty=Tensor[(24), float64] */, %var_13618, %157, meta[relay.Constant][13] /* ty=uint64 */, meta[relay.Constant][14] /* ty=Tensor[(840), uint64] */, %158, %159, %147, %160, %161, meta[relay.Constant][15] /* ty=Tensor[(1755), float32] */, %162)
}

def @func_5081() -> (Tensor[(13, 6, 2), float64],) {
  %165 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %163 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %164 = %163.0;
    (%164,)
  };
  %165() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13569() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32]) {
  %166 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %167 = @func_10904() /* ty=(Tensor[(13, 6, 2), float32],) */;
  %168 = %166.0;
  %169 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  %170 = %167.0;
  (%168, %169, %170)
}

def @func_12196() -> Tensor[(13, 6, 2), float64] {
  @func_9701() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10018() -> (Tensor[(12, 2, 2), uint16],) {
  %171 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %172 = %171.1;
  (%172,)
}

def @func_12904(%var_12863: Tensor[(5, 2, 15), float64], %var_12891: Tensor[(2, 312), float64]) -> (Tensor[(5, 2, 15), float32], Tensor[(5, 2, 15), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(2, 312), float64]) {
  %173 = cast(%var_12863, dtype="float64") /* ty=Tensor[(5, 2, 15), float64] */;
  %174 = atanh(%173) /* ty=Tensor[(5, 2, 15), float64] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(5, 2, 15), float32] */;
  %176 = shape_of(%var_12863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%var_12863, dtype="float32") /* ty=Tensor[(5, 2, 15), float32] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %179 = cast(%174, dtype="int8") /* ty=Tensor[(5, 2, 15), int8] */;
  %180 = shape_of(%var_12863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_12863, dtype="int8") /* ty=Tensor[(5, 2, 15), int8] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %183 = cast(%var_12891, dtype="float64") /* ty=Tensor[(2, 312), float64] */;
  %184 = reshape(%183, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %185 = @func_6937(%184) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) */;
  %186 = multiply(%177, %178) /* ty=Tensor[(5, 2, 15), float32] */;
  %187 = bitwise_and(%181, %182) /* ty=Tensor[(5, 2, 15), int8] */;
  %188 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %189 = %185.1;
  (%186, %187, %188, %189, %var_12891)
}

def @func_9864() -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %196 = fn () -> (Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
    %190 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %191 = %190.0;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
    %193 = @func_7102() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %194 = asin(%192) /* ty=Tensor[(13, 6, 2), float32] */;
    %195 = %193.0;
    (%194, %195)
  };
  %196() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_11303(%var_11302: Tensor[(180), int8]) -> (Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) {
  %205 = fn (%var_11294: Tensor[(180), int8]) -> (Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) {
    %197 = @func_9450() /* ty=(Tensor[(12, 2, ?), int32],) */;
    %198 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %199 = cast(%var_11294, dtype="int8") /* ty=Tensor[(180), int8] */;
    %200 = reshape(%198, newshape=[]) /* ty=int8 */;
    %201 = reshape(%199, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
    %202 = @func_1196(%200, %201) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
    %203 = %197.0;
    %204 = %202.1;
    (%203, %204, meta[relay.Constant][16] /* ty=int8 */, %var_11294)
  };
  %205(%var_11302) /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) */
}

def @func_1444(%var_1421: Tensor[(13, 1, 13), uint64]) -> (Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %206 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 1, 13), uint64] */, dtype="bool") /* ty=Tensor[(1, 1, 13), bool] */;
  %207 = cast(%var_1421, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  %208 = cast(meta[relay.Constant][18] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %209 = reshape(%208, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %210 = @func_1102(%209) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %211 = not_equal(%206, %207) /* ty=Tensor[(13, 1, 13), bool] */;
  %212 = %210.1;
  (%211, %212, meta[relay.Constant][18] /* ty=Tensor[(1755), float32] */)
}

def @func_9562() -> Tensor[(13, 6, 2), float64] {
  %213 = @func_5705() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %213.0
}

def @func_8937() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %214 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %215 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
  %216 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %217 = %214.4;
  (%215, %216, %217)
}

def @func_7593() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %221 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %218 = @func_5987() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %219 = %218.0;
    %220 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    (%219, %220)
  };
  %221() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_12908(%var_12906: Tensor[(5, 2, 15), float64], %var_12907: Tensor[(2, 312), float64]) -> (Tensor[(5, 2, 15), float32], Tensor[(5, 2, 15), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(2, 312), float64]) {
  @func_12904(%var_12906, %var_12907) /* ty=(Tensor[(5, 2, 15), float32], Tensor[(5, 2, 15), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(2, 312), float64]) */
}

def @func_11376() -> (Tensor[(13, 6, 2), float64], Tensor[(7, 9, 12), float32], Tensor[(756), float64]) {
  %222 = cast(meta[relay.Constant][19] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %223 = reshape(%222, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %224 = @func_8172(%223) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) */;
  %225 = @func_9166() /* ty=Tensor[(13, 6, 2), float64] */;
  %226 = %224.1;
  (%225, %226, meta[relay.Constant][19] /* ty=Tensor[(756), float64] */)
}

def @func_7805() -> (Tensor[(13, 6, 2), float64],) {
  @func_7803() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_9346() -> (Tensor[(13, 6, 2), float64],) {
  %228 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %227 = @func_7710() /* ty=Tensor[(13, 6, 2), float64] */;
    (%227,)
  };
  %228() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_5476(%var_5468: Tensor[(26, 4), float64], %var_5472: Tensor[(26, 4), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) {
  %229 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %230 = cast(%var_5468, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %231 = reshape(%230, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %232 = @func_3340(%231) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %233 = cast(%var_5472, dtype="int32") /* ty=Tensor[(26, 4), int32] */;
  %234 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(2), int32] */;
  %235 = cast(%var_5468, dtype="int32") /* ty=Tensor[(26, 4), int32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %237 = %229.0;
  %238 = %232.2;
  %239 = bitwise_xor(%235, %236) /* ty=Tensor[(26, 4), int32] */;
  (%237, %238, %239)
}

def @func_6116() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %247 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
    %240 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %241 = %240.0;
    %242 = cast(%241, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
    %243 = @func_5705() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %244 = rsqrt(%242) /* ty=Tensor[(13, 6, 2), float64] */;
    %245 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
    %246 = %243.0;
    (%244, %245, %246)
  };
  %247() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_3112() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_1447(%var_1445: Tensor[(13, 1, 13), uint64]) -> (Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  @func_1444(%var_1445) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */
}

def @func_12671(%var_12667: Tensor[(5, 9, 16), int64], %var_12668: Tensor[(156), float64], %var_12669: Tensor[(78), int32], %var_12670: Tensor[(24), float64]) -> (Tensor[(5, 9, 16), int64], Tensor[(1755), float32], Tensor[(156), float64], Tensor[(78), int32], Tensor[(468), int32], Tensor[(24), float64], Tensor[(1, 1755), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
  %270 = fn (%var_12623: Tensor[(5, 9, 16), int64], %var_12641: Tensor[(156), float64], %var_12642: Tensor[(78), int32], %var_12645: Tensor[(24), float64]) -> (Tensor[(5, 9, 16), int64], Tensor[(1755), float32], Tensor[(156), float64], Tensor[(78), int32], Tensor[(468), int32], Tensor[(24), float64], Tensor[(1, 1755), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) {
    %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 9, 16), int64] */, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
    %249 = shape_of(%var_12623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%var_12623, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %252 = cast(%var_12641, dtype="float64") /* ty=Tensor[(156), float64] */;
    %253 = cast(%var_12642, dtype="int32") /* ty=Tensor[(78), int32] */;
    %254 = cast(meta[relay.Constant][21] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
    %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 1755), float32] */, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
    %256 = cast(%var_12645, dtype="float64") /* ty=Tensor[(24), float64] */;
    %257 = reshape(%252, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
    %258 = reshape(%253, newshape=[78]) /* ty=Tensor[(78), int32] */;
    %259 = reshape(%254, newshape=[3, 156]) /* ty=Tensor[(3, 156), int32] */;
    %260 = reshape(%255, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %261 = reshape(%256, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
    %262 = @func_6075(%257, %258, %259, %260, %261) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) */;
    %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 1755), float32] */, dtype="float64") /* ty=Tensor[(1, 1755), float64] */;
    %264 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
    %265 = logical_xor(%250, %251) /* ty=Tensor[(5, 9, 16), int64] */;
    %266 = %262.4;
    %267 = log(%263) /* ty=Tensor[(1, 1755), float64] */;
    %268 = %264.0;
    %269 = @func_9701() /* ty=Tensor[(13, 6, 2), float64] */;
    (%265, %266, %var_12641, %var_12642, meta[relay.Constant][21] /* ty=Tensor[(468), int32] */, %var_12645, %267, %268, %269)
  };
  %270(%var_12667, %var_12668, %var_12669, %var_12670) /* ty=(Tensor[(5, 9, 16), int64], Tensor[(1755), float32], Tensor[(156), float64], Tensor[(78), int32], Tensor[(468), int32], Tensor[(24), float64], Tensor[(1, 1755), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_10848(%var_10846: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(6, 2, 15), int8], int8, Tensor[(180), int8]) {
  @func_10845(%var_10846) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(6, 2, 15), int8], int8, Tensor[(180), int8]) */
}

def @func_3924(%var_3923: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(192), float32], Tensor[(14, 5), float32], Tensor[(936), float32], Tensor[(8, 24), float32]) {
  %283 = fn (%var_3918: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(192), float32], Tensor[(14, 5), float32], Tensor[(936), float32], Tensor[(8, 24), float32]) {
    %271 = @func_3600() /* ty=Tensor[(13, 6, 2), float64] */;
    %272 = cast(%271, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
    %273 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 5), float32] */;
    %274 = cast(%var_3918, dtype="float32") /* ty=Tensor[(936), float32] */;
    %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %276 = reshape(%272, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
    %277 = reshape(%273, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %278 = reshape(%274, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
    %279 = reshape(%275, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %280 = @func_3392(%276, %277, %278, %279) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
    %281 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
    %282 = %280.3;
    (%281, %271, %282, meta[relay.Constant][23] /* ty=Tensor[(14, 5), float32] */, %var_3918, meta[relay.Constant][24] /* ty=Tensor[(8, 24), float32] */)
  };
  %283(%var_3923) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(192), float32], Tensor[(14, 5), float32], Tensor[(936), float32], Tensor[(8, 24), float32]) */
}

def @func_5954(%var_5950: Tensor[(6, 13, 1), int32], %var_5951: Tensor[(6, 13, 6), int32], %var_5952: Tensor[(1755), float32], %var_5953: Tensor[(24), float64]) -> (Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) {
  @func_5948(%var_5950, %var_5951, %var_5952, %var_5953) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) */
}

def @func_11634() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(2, 52), float64]) {
  %291 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(2, 52), float64]) {
    %284 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
    %285 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 52), float64] */, dtype="float64") /* ty=Tensor[(2, 52), float64] */;
    %286 = reshape(%285, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %287 = @func_5254(%286) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) */;
    %288 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
    %289 = %284.0;
    %290 = %287.1;
    (%288, %289, %290, meta[relay.Constant][25] /* ty=Tensor[(2, 52), float64] */)
  };
  %291() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(2, 52), float64]) */
}

def @func_7145() -> (Tensor[(13, 6, 2), float64],) {
  @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_3886() -> Tensor[(13, 6, 2), float64] {
  @func_3884() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_11898() -> Tensor[(13, 6, 2), float64] {
  %293 = fn () -> Tensor[(13, 6, 2), float64] {
    %292 = @func_11580() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) */;
    %292.0
  };
  %293() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10564() -> (Tensor[(13, 6, 2), float64],) {
  %295 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %294 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
    (%294,)
  };
  %295() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_10577(%var_10572: Tensor[(11, 4, 9), float32]) -> Tensor[(11, 4, 9), uint64] {
  %296 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 4, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 9), float32] */;
  %297 = sin(%296) /* ty=Tensor[(11, 4, 9), float32] */;
  %298 = cast(%var_10572, dtype="uint64") /* ty=Tensor[(11, 4, 9), uint64] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="uint64") /* ty=Tensor[(11, 4, 9), uint64] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%300, %301) /* ty=Tensor[(11, 4, 9), uint64] */
}

def @func_4740() -> Tensor[(13, 6, 2), float64] {
  @func_3984() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_5948(%var_5913: Tensor[(6, 13, 1), int32], %var_5914: Tensor[(6, 13, 6), int32], %var_5926: Tensor[(1755), float32], %var_5942: Tensor[(24), float64]) -> (Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) {
  %302 = cast(%var_5913, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %303 = cast(%var_5914, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %304 = cast(%var_5926, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %305 = reshape(%304, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %306 = @func_4413(%305) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %307 = cast(%var_5942, dtype="float64") /* ty=Tensor[(24), float64] */;
  %308 = cast(meta[relay.Constant][27] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %309 = cast(meta[relay.Constant][28] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %310 = cast(meta[relay.Constant][29] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %311 = reshape(%307, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
  %312 = reshape(%308, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %313 = reshape(%309, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %314 = reshape(%310, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %315 = @func_3713(%311, %312, %313, %314) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
  %316 = greater(%302, %303) /* ty=Tensor[(6, 13, 6), bool] */;
  %317 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %318 = %306.2;
  %319 = %315.6;
  (%316, %317, %318, %var_5926, %319, %var_5942, meta[relay.Constant][27] /* ty=Tensor[(104), float64] */, meta[relay.Constant][28] /* ty=Tensor[(70), float32] */, meta[relay.Constant][29] /* ty=Tensor[(936), float32] */)
}

def @func_7712() -> Tensor[(13, 6, 2), float64] {
  @func_7710() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3178(%var_3159: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) {
  %320 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %321 = cast(%var_3159, dtype="float64") /* ty=Tensor[(104), float64] */;
  %322 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 156), float64] */, dtype="float64") /* ty=Tensor[(4, 156), float64] */;
  %323 = reshape(%321, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %324 = reshape(%322, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %325 = @func_1362(%323, %324) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %326 = cast(meta[relay.Constant][31] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %327 = cast(%var_3159, dtype="float64") /* ty=Tensor[(104), float64] */;
  %328 = %325.0;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %330 = reshape(%326, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %331 = reshape(%327, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %332 = reshape(%329, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %333 = @func_1786(%330, %331, %332) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %334 = %320.1;
  %335 = %333.2;
  (%334, %328, %var_3159, meta[relay.Constant][30] /* ty=Tensor[(4, 156), float64] */, %335, meta[relay.Constant][31] /* ty=Tensor[(192), float32] */)
}

def @func_3884() -> Tensor[(13, 6, 2), float64] {
  %336 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %336.0
}

def @func_10845(%var_10837: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(6, 2, 15), int8], int8, Tensor[(180), int8]) {
  %337 = @func_7592() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %338 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %339 = cast(%var_10837, dtype="int8") /* ty=Tensor[(180), int8] */;
  %340 = reshape(%338, newshape=[]) /* ty=int8 */;
  %341 = reshape(%339, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
  %342 = @func_1196(%340, %341) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %343 = %337.0;
  %344 = %342.0;
  (%343, %344, meta[relay.Constant][32] /* ty=int8 */, %var_10837)
}

def @func_6297() -> Tensor[(13, 6, 2), float64] {
  @func_6295() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3392(%var_3366: Tensor[(13, 6, 2), float64], %var_3381: Tensor[(70), float32], %var_3382: Tensor[(936, 1), float32], %var_3384: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) {
  %345 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %346 = cast(%var_3366, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%345, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %350 = cast(%var_3381, dtype="float32") /* ty=Tensor[(70), float32] */;
  %351 = cast(%var_3382, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %352 = cast(meta[relay.Constant][33] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %353 = cast(%var_3384, dtype="float32") /* ty=Tensor[(192), float32] */;
  %354 = reshape(%350, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %355 = reshape(%351, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %356 = reshape(%352, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %357 = reshape(%353, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
  %358 = @func_3303(%354, %355, %356, %357) /* ty=(Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) */;
  %359 = cast(meta[relay.Constant][33] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %360 = cast(%var_3382, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
  %361 = divide(%348, %349) /* ty=Tensor[(13, 6, 2), float32] */;
  %362 = %358.8;
  %363 = minimum(%359, %360) /* ty=Tensor[(936, 24), float64] */;
  (%361, %362, %var_3381, %var_3384, %363)
}

def @func_5480(%var_5478: Tensor[(26, 4), float64], %var_5479: Tensor[(26, 4), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) {
  @func_5476(%var_5478, %var_5479) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) */
}

def @func_3600() -> Tensor[(13, 6, 2), float64] {
  %364 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %364.0
}

def @func_4127() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %365 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %366 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
  (%365, %366)
}

def @func_1343(%var_1329: Tensor[(5, 2, 7), float32], %var_1330: Tensor[(5, 2, 7), float32]) -> (Tensor[(5, 2, 7), float32],) {
  %367 = cast(%var_1330, dtype="float32") /* ty=Tensor[(5, 2, 7), float32] */;
  %368 = shape_of(%var_1329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%var_1329, dtype="float32") /* ty=Tensor[(5, 2, 7), float32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %371 = floor_mod(%369, %370) /* ty=Tensor[(5, 2, 7), float32] */;
  (%371,)
}

def @func_9125() -> (Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_9123() /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_3736() -> Tensor[(13, 6, 2), float64] {
  @func_3734() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9702() -> Tensor[(13, 6, 2), float64] {
  %372 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_7261() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %372() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_13804() -> Tensor[(13, 6, 2), float64] {
  @func_13802() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9372(%var_9359: uint64, %var_9360: Tensor[(14, 4, 15), uint64]) -> (Tensor[(14, 4, 15), uint64],) {
  %373 = cast(%var_9359, dtype="uint64") /* ty=uint64 */;
  %374 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(14, 4, 15), uint64] */;
  %375 = minimum(%373, %374) /* ty=Tensor[(14, 4, 15), uint64] */;
  (%375,)
}

def @func_6370() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %380 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
    %376 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %377 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
    %378 = %376.0;
    %379 = %377.0;
    (%378, %379)
  };
  %380() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */
}

def @func_7310() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %381 = @func_6369() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %382 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
  %383 = %381.1;
  (%382, %383)
}

def @func_4295() -> (Tensor[(12, 2, 2), uint16],) {
  %384 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %385 = %384.1;
  %386 = cast(%385, dtype="uint16") /* ty=Tensor[(12, 2, 1), uint16] */;
  %387 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 2, 2), float64] */, dtype="uint16") /* ty=Tensor[(12, 2, 2), uint16] */;
  %388 = bitwise_or(%386, %387) /* ty=Tensor[(12, 2, 2), uint16] */;
  (%388,)
}

def @func_7796() -> Tensor[(13, 6, 2), float64] {
  %390 = fn () -> Tensor[(13, 6, 2), float64] {
    %389 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %389.1
  };
  %390() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_8172(%var_8138: Tensor[(7, 9, 12), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) {
  %391 = @func_6436() /* ty=(Tensor[(13, 6, 2), float32],) */;
  %392 = cast(%var_8138, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %393 = sqrt(%392) /* ty=Tensor[(7, 9, 12), float64] */;
  %394 = cast(%var_8138, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %398 = %391.0;
  %399 = floor_mod(%396, %397) /* ty=Tensor[(7, 9, 12), float32] */;
  (%398, %399)
}

def @func_3602() -> Tensor[(13, 6, 2), float64] {
  @func_3600() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_6874() -> (Tensor[(13, 6, 2), float64],) {
  %400 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
  %401 = %400.0;
  (%401,)
}

def @func_8939() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  @func_8937() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */
}

def @func_11378() -> (Tensor[(13, 6, 2), float64], Tensor[(7, 9, 12), float32], Tensor[(756), float64]) {
  @func_11376() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(7, 9, 12), float32], Tensor[(756), float64]) */
}

def @func_1104(%var_1103: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) {
  %406 = fn (%var_1089: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) {
    %402 = cast(%var_1089, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %403 = cast(%var_1089, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %404 = sin(%402) /* ty=Tensor[(13, 15, 9), float32] */;
    %405 = acosh(%403) /* ty=Tensor[(13, 15, 9), float32] */;
    (%404, %405)
  };
  %406(%var_1103) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */
}

def @func_10885(%var_10863: Tensor[(624), float64]) -> (Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(624), float64]) {
  %407 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %408 = cast(%var_10863, dtype="float64") /* ty=Tensor[(624), float64] */;
  %409 = reshape(%408, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
  %410 = @func_7580(%409) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) */;
  %411 = %407.0;
  %412 = %410.0;
  (%411, %412, %var_10863)
}

def @func_6809(%var_6798: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
  %413 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %414 = cast(meta[relay.Constant][35] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %415 = cast(%var_6798, dtype="float64") /* ty=Tensor[(104), float64] */;
  %416 = cast(meta[relay.Constant][36] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %417 = reshape(%414, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %418 = reshape(%415, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %419 = reshape(%416, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %420 = @func_1786(%417, %418, %419) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %421 = %413.0;
  %422 = %420.1;
  (%421, %422, meta[relay.Constant][35] /* ty=Tensor[(192), float32] */, %var_6798, meta[relay.Constant][36] /* ty=Tensor[(624), float64] */)
}

def @func_12198() -> Tensor[(13, 6, 2), float64] {
  @func_12196() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10888(%var_10886: Tensor[(624), float64]) -> (Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(624), float64]) {
  @func_10885(%var_10886) /* ty=(Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(624), float64]) */
}

def @func_12739() -> Tensor[(13, 6, 2), float64] {
  %423 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %423.0
}

def @func_6229() -> (Tensor[(13, 6, 2), float64],) {
  %425 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %424 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
    (%424,)
  };
  %425() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_12991(%var_12990: Tensor[(88), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(11, 2, 4), float32], Tensor[(88), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %437 = fn (%var_12957: Tensor[(88), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(11, 2, 4), float32], Tensor[(88), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %426 = @func_10336() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) */;
    %427 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %428 = cast(%var_12957, dtype="float32") /* ty=Tensor[(88), float32] */;
    %429 = reshape(%428, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float32] */;
    %430 = @func_8231(%429) /* ty=(Tensor[(11, 2, 4), float32],) */;
    %431 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %432 = %426.0;
    %433 = %427.0;
    %434 = %430.0;
    %435 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
    %436 = %431.0;
    (%432, %433, %434, %var_12957, %435, %436)
  };
  %437(%var_12990) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(11, 2, 4), float32], Tensor[(88), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_9754(%var_9752: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), int64], Tensor[(7, 8, 8), float32], Tensor[(448), float32]) {
  @func_9751(%var_9752) /* ty=(Tensor[(9, 16, 5), int64], Tensor[(7, 8, 8), float32], Tensor[(448), float32]) */
}

def @func_7995(%var_7992: Tensor[(104), float64], %var_7993: Tensor[(624), float64], %var_7994: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64], Tensor[(7, 11, 5), bool], Tensor[(385), bool], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(624), float64], Tensor[(15, 117), float32], Tensor[(624, 1), float64]) {
  @func_7990(%var_7992, %var_7993, %var_7994) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64], Tensor[(7, 11, 5), bool], Tensor[(385), bool], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(624), float64], Tensor[(15, 117), float32], Tensor[(624, 1), float64]) */
}

def @func_11975() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %438 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %439 = %438.0;
  %440 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  (%439, %440)
}

def @func_5988() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %446 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %441 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %442 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %443 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
    %444 = %441.0;
    %445 = %442.0;
    (%443, %444, %445)
  };
  %446() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_6995() -> (Tensor[(13, 6, 2), float64],) {
  @func_6993() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_11436() -> Tensor[(13, 6, 2), float64] {
  @func_3190() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_7104() -> (Tensor[(13, 6, 2), float64],) {
  @func_7102() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_8853(%var_8833: Tensor[(2, 10, 3), bool], %var_8834: Tensor[(2, 10, 3), bool], %var_8844: Tensor[(70), float32]) -> (Tensor[(2, 10, 3), bool], Tensor[(5, 2, 7), float32], Tensor[(70), float32]) {
  %447 = cast(%var_8834, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %448 = shape_of(%var_8833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%var_8833, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %451 = cast(%var_8844, dtype="float32") /* ty=Tensor[(70), float32] */;
  %452 = cast(%var_8844, dtype="float32") /* ty=Tensor[(70), float32] */;
  %453 = reshape(%451, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %454 = reshape(%452, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %455 = @func_1343(%453, %454) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %456 = logical_or(%449, %450) /* ty=Tensor[(2, 10, 3), bool] */;
  %457 = %455.0;
  (%456, %457, %var_8844)
}

def @func_12021() -> Tensor[(13, 6, 2), float64] {
  %458 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_11436() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %458() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_13571() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32]) {
  @func_13569() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32]) */
}

def @func_4803() -> (Tensor[(13, 6, 2), float64],) {
  %461 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %459 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
    %460 = %459.1;
    (%460,)
  };
  %461() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13443(%var_13433: Tensor[(9, 7, 16), uint8], %var_13434: Tensor[(9, 7, 16), uint8]) -> Tensor[(9, 7, 16), bool] {
  %462 = cast(%var_13434, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
  %463 = shape_of(%var_13433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_13433, dtype="bool") /* ty=Tensor[(9, 7, 16), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%464, %465) /* ty=Tensor[(9, 7, 16), bool] */
}

def @func_5856() -> (Tensor[(13, 6, 2), float64],) {
  %469 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %466 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    %467 = cast(%466, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
    %468 = atanh(%467) /* ty=Tensor[(13, 6, 2), float64] */;
    (%468,)
  };
  %469() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13178() -> (Tensor[(13, 6, 2), float64],) {
  %470 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  (%470,)
}

def @func_3589() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */
}

def @func_10162(%var_10161: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float64],) {
  %478 = fn (%var_10151: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float64],) {
    %471 = @func_6758() /* ty=(Tensor[(13, 15, 9), float32],) */;
    %472 = %471.0;
    %473 = cast(%var_10151, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%472, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %477 = floor_mod(%475, %476) /* ty=Tensor[(13, 15, 9), float64] */;
    (%477,)
  };
  %478(%var_10161) /* ty=(Tensor[(13, 15, 9), float64],) */
}

def @func_8135() -> (Tensor[(13, 6, 2), float64],) {
  %480 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %479 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
    (%479,)
  };
  %480() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_7990(%var_7938: Tensor[(104), float64], %var_7939: Tensor[(624), float64], %var_7968: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64], Tensor[(7, 11, 5), bool], Tensor[(385), bool], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(624), float64], Tensor[(15, 117), float32], Tensor[(624, 1), float64]) {
  %481 = @func_7592() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %482 = cast(%var_7938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %483 = cast(%var_7939, dtype="float64") /* ty=Tensor[(624), float64] */;
  %484 = reshape(%482, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %485 = reshape(%483, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %486 = @func_1362(%484, %485) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %487 = cast(meta[relay.Constant][37] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %488 = cast(meta[relay.Constant][37] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
  %489 = reshape(%487, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %490 = reshape(%488, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %491 = @func_3796(%489, %490) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %492 = cast(meta[relay.Constant][38] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %494 = cast(meta[relay.Constant][38] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
  %495 = cast(%var_7968, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %496 = cast(%var_7938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %497 = %486.0;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %499 = reshape(%492, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %500 = reshape(%493, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %501 = reshape(%494, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %502 = reshape(%495, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %503 = reshape(%496, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %504 = reshape(%498, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %505 = @func_2245(%499, %500, %501, %502, %503, %504) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %506 = cast(%var_7939, dtype="float64") /* ty=Tensor[(624), float64] */;
  %507 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %508 = reshape(%506, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %509 = reshape(%507, newshape=[1, 1755]) /* ty=Tensor[(1, 1755), float32] */;
  %510 = @func_7906(%508, %509) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) */;
  %511 = cast(%497, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %512 = reshape(%511, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
  %513 = @func_7580(%512) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) */;
  %514 = %481.0;
  %515 = %491.0;
  %516 = %505.2;
  %517 = %510.3;
  %518 = %513.2;
  (%514, %497, %var_7938, %var_7939, %515, meta[relay.Constant][37] /* ty=Tensor[(385), bool] */, %516, meta[relay.Constant][38] /* ty=Tensor[(147), bool] */, %var_7968, %517, meta[relay.Constant][39] /* ty=Tensor[(15, 117), float32] */, %518)
}

def @func_2302(%var_2301: Tensor[(12, 2, 1), float64]) -> (Tensor[(12, 2, 1), float64],) {
  %521 = fn (%var_2290: Tensor[(12, 2, 1), float64]) -> (Tensor[(12, 2, 1), float64],) {
    %519 = cast(%var_2290, dtype="float64") /* ty=Tensor[(12, 2, 1), float64] */;
    %520 = log10(%519) /* ty=Tensor[(12, 2, 1), float64] */;
    (%520,)
  };
  %521(%var_2301) /* ty=(Tensor[(12, 2, 1), float64],) */
}

def @func_3110() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %522 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %524 = tan(%523) /* ty=Tensor[(13, 6, 2), float64] */;
  %525 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  (%524, %525)
}

def @func_13107() -> (Tensor[(13, 6, 2), float64],) {
  @func_13105() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13447(%var_13445: Tensor[(9, 7, 16), uint8], %var_13446: Tensor[(9, 7, 16), uint8]) -> Tensor[(9, 7, 16), bool] {
  @func_13443(%var_13445, %var_13446) /* ty=Tensor[(9, 7, 16), bool] */
}

def @func_7312() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  @func_7310() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */
}

def @main(%var_14101: Tensor[(14, 5, 15), float32]) -> Tensor[(14, 5, 15), float32] {
  %526 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
  %527 = shape_of(%var_14101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%var_14101, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%528, %529) /* ty=Tensor[(14, 5, 15), float32] */
}

def @func_3587() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) {
  %530 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %531 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %532 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %533 = %530.0;
  %534 = %531.1;
  (%532, %533, %534)
}

def @func_2245(%var_2126: Tensor[(3, 7, 7), bool], %var_2127: Tensor[(3, 7, 7), bool], %var_2139: Tensor[(3, 7, 7), bool], %var_2145: Tensor[(169), uint64], %var_2189: Tensor[(104), float64], %var_2190: Tensor[(624), float64]) -> (Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) {
  %535 = cast(%var_2139, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %536 = shape_of(%var_2127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_2127, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %539 = cast(%var_2145, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %540 = reshape(%539, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %541 = @func_1444(%540) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %542 = cast(%var_2127, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %543 = shape_of(%var_2126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_2126, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %546 = logical_or(%544, %545) /* ty=Tensor[(3, 7, 7), bool] */;
  %547 = cast(%546, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %548 = shape_of(%var_2126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_2126, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %551 = bitwise_and(%549, %550) /* ty=Tensor[(3, 7, 7), uint16] */;
  %552 = cast(%551, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
  %553 = cast(%var_2145, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %554 = reshape(%553, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %555 = @func_1444(%554) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %556 = cast(%var_2126, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %557 = cast(meta[relay.Constant][41] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %558 = cast(meta[relay.Constant][41] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %559 = reshape(%557, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %560 = reshape(%558, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %561 = @func_1343(%559, %560) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %562 = cast(meta[relay.Constant][42] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %563 = cast(%var_2189, dtype="float64") /* ty=Tensor[(104), float64] */;
  %564 = cast(%var_2190, dtype="float64") /* ty=Tensor[(624), float64] */;
  %565 = reshape(%562, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %566 = reshape(%563, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %567 = reshape(%564, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %568 = @func_1786(%565, %566, %567) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %569 = %555.0;
  %570 = cast(%569, dtype="uint64") /* ty=Tensor[(13, 1, 13), uint64] */;
  %571 = reshape(%570, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %572 = @func_1444(%571) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %573 = %541.1;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %575 = reshape(%574, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %576 = @func_1102(%575) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %577 = maximum(%537, %538) /* ty=Tensor[(3, 7, 7), uint16] */;
  %578 = rsqrt(%552) /* ty=Tensor[(3, 7, 7), float32] */;
  %579 = cos(%556) /* ty=Tensor[(3, 7, 7), float64] */;
  %580 = %561.0;
  %581 = %568.1;
  %582 = %572.0;
  %583 = %576.1;
  (%577, %573, %var_2145, %578, %569, %579, %580, meta[relay.Constant][41] /* ty=Tensor[(70, 1), float32] */, %581, meta[relay.Constant][42] /* ty=Tensor[(192), float32] */, %var_2189, %var_2190, %582, %583)
}

def @func_14079() -> (Tensor[(147, 169), float32], Tensor[(13, 6, 2), float64]) {
  %584 = @func_13475() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) */;
  %585 = @func_10055() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) */;
  %586 = %584.2;
  %587 = %585.0;
  (%586, %587)
}

def @func_11438() -> Tensor[(13, 6, 2), float64] {
  @func_11436() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10788() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_10786() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_1347(%var_1345: Tensor[(5, 2, 7), float32], %var_1346: Tensor[(5, 2, 7), float32]) -> (Tensor[(5, 2, 7), float32],) {
  @func_1343(%var_1345, %var_1346) /* ty=(Tensor[(5, 2, 7), float32],) */
}

def @func_6438() -> (Tensor[(13, 6, 2), float32],) {
  @func_6436() /* ty=(Tensor[(13, 6, 2), float32],) */
}

def @func_7841() -> Tensor[(13, 6, 2), float32] {
  @func_7839() /* ty=Tensor[(13, 6, 2), float32] */
}

def @func_10762() -> (Tensor[(13, 6, 2), float64],) {
  %588 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %589 = %588.0;
  (%589,)
}

def @func_10343() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %590 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %591 = %590.0;
  %592 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  (%591, %592)
}

def @func_10345() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_10343() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_4886(%var_4884: uint32, %var_4885: Tensor[(5, 13, 16), uint32]) -> (Tensor[(5, 13, 16), bool],) {
  %596 = fn (%var_4850: uint32, %var_4851: Tensor[(5, 13, 16), uint32]) -> (Tensor[(5, 13, 16), bool],) {
    %593 = cast(%var_4850, dtype="bool") /* ty=bool */;
    %594 = cast(%var_4851, dtype="bool") /* ty=Tensor[(5, 13, 16), bool] */;
    %595 = greater_equal(%593, %594) /* ty=Tensor[(5, 13, 16), bool] */;
    (%595,)
  };
  %596(%var_4884, %var_4885) /* ty=(Tensor[(5, 13, 16), bool],) */
}

def @func_12245() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %597 = @func_10243() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %598 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %599 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %600 = %597.0;
  %601 = %598.0;
  %602 = %599.0;
  (%600, %601, %602)
}

def @func_13120() -> Tensor[(13, 6, 2), float64] {
  %604 = fn () -> Tensor[(13, 6, 2), float64] {
    %603 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %603.0
  };
  %604() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_12158() -> (Tensor[(13, 6, 2), float64],) {
  %606 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %605 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
    (%605,)
  };
  %606() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13826() -> (Tensor[(13, 6, 2), float64],) {
  @func_13824() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_4297() -> (Tensor[(12, 2, 2), uint16],) {
  @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */
}

def @func_10516() -> Tensor[(13, 6, 2), float64] {
  %607 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %607.0
}

def @func_5705() -> (Tensor[(13, 6, 2), float64],) {
  %608 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %609 = %608.0;
  (%609,)
}

def @func_8212(%var_8211: Tensor[(11, 4, 13), float64]) -> Tensor[(11, 4, 13), float64] {
  %611 = fn (%var_8206: Tensor[(11, 4, 13), float64]) -> Tensor[(11, 4, 13), float64] {
    %610 = cast(%var_8206, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
    sinh(%610) /* ty=Tensor[(11, 4, 13), float64] */
  };
  %611(%var_8211) /* ty=Tensor[(11, 4, 13), float64] */
}

def @func_12761() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %615 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %612 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
    %613 = %612.0;
    %614 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_8551() -> (Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) {
  @func_8549() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) */
}

def @func_4629(%var_4539: Tensor[(24), float64], %var_4547: Tensor[(385), bool], %var_4549: Tensor[(13, 6, 2), float64], %var_4556: Tensor[(147), bool], %var_4558: Tensor[(104), float64], %var_4559: Tensor[(624), float64], %var_4585: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(24), float64], Tensor[(7, 11, 5), bool], Tensor[(13, 6, 2), uint64], Tensor[(624), float64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(6, 2, 15), int8], int8, Tensor[(30, 6), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float64], Tensor[(385), float64]) {
  %616 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %617 = cast(%var_4539, dtype="float64") /* ty=Tensor[(24), float64] */;
  %618 = reshape(%617, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %619 = @func_2300(%618) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %620 = cast(%var_4547, dtype="bool") /* ty=Tensor[(385), bool] */;
  %621 = cast(%var_4547, dtype="bool") /* ty=Tensor[(385), bool] */;
  %622 = reshape(%620, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %623 = reshape(%621, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
  %624 = @func_3796(%622, %623) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
  %625 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %626 = %625.0;
  %627 = cast(%var_4549, dtype="uint64") /* ty=Tensor[(13, 6, 2), uint64] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="uint64") /* ty=Tensor[(13, 6, 2), uint64] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %631 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %632 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %633 = cast(%var_4556, dtype="bool") /* ty=Tensor[(147), bool] */;
  %634 = cast(meta[relay.Constant][43] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %635 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %636 = cast(%var_4559, dtype="float64") /* ty=Tensor[(624), float64] */;
  %637 = reshape(%631, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %638 = reshape(%632, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %639 = reshape(%633, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %640 = reshape(%634, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %641 = reshape(%635, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %642 = reshape(%636, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %643 = @func_2245(%637, %638, %639, %640, %641, %642) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %644 = cast(meta[relay.Constant][44] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %645 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %646 = %643.11;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(624), float64] */;
  %648 = reshape(%644, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %649 = reshape(%645, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %650 = reshape(%647, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %651 = @func_1786(%648, %649, %650) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %652 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %653 = cast(meta[relay.Constant][46] /* ty=Tensor[(30, 6), int8] */, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %654 = reshape(%652, newshape=[]) /* ty=int8 */;
  %655 = reshape(%653, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), int8] */;
  %656 = @func_1196(%654, %655) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %657 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %658 = cast(%var_4539, dtype="float64") /* ty=Tensor[(24), float64] */;
  %659 = cast(%var_4558, dtype="float64") /* ty=Tensor[(104), float64] */;
  %660 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 70), float32] */, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %661 = cast(%var_4585, dtype="float32") /* ty=Tensor[(936), float32] */;
  %662 = reshape(%658, newshape=[12, 2]) /* ty=Tensor[(12, 2), float64] */;
  %663 = reshape(%659, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %664 = reshape(%660, newshape=[1, 70]) /* ty=Tensor[(1, 70), float32] */;
  %665 = reshape(%661, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %666 = @func_3713(%662, %663, %664, %665) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */;
  %667 = cast(%646, dtype="float64") /* ty=Tensor[(624), float64] */;
  %668 = reshape(%667, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
  %669 = @func_4357(%668) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
  %670 = cast(%var_4547, dtype="float64") /* ty=Tensor[(385), float64] */;
  %671 = %616.0;
  %672 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %673 = %619.0;
  %674 = %624.0;
  %675 = multiply(%629, %630) /* ty=Tensor[(13, 6, 2), uint64] */;
  %676 = %651.1;
  %677 = %656.0;
  %678 = @func_3437() /* ty=Tensor[(13, 6, 2), float64] */;
  %679 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %680 = %657.0;
  %681 = %666.0;
  %682 = %669.0;
  %683 = tan(%670) /* ty=Tensor[(385), float64] */;
  (%671, %672, %673, %var_4539, %674, %675, %646, %var_4556, meta[relay.Constant][43] /* ty=Tensor[(169), uint64] */, %var_4558, %var_4559, %676, meta[relay.Constant][44] /* ty=Tensor[(192), float32] */, %677, meta[relay.Constant][45] /* ty=int8 */, meta[relay.Constant][46] /* ty=Tensor[(30, 6), int8] */, %678, %679, %680, %681, meta[relay.Constant][47] /* ty=Tensor[(1, 70), float32] */, %var_4585, %682, %683)
}

def @func_3191() -> Tensor[(13, 6, 2), float64] {
  %685 = fn () -> Tensor[(13, 6, 2), float64] {
    %684 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %684.0
  };
  %685() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_11830(%var_11828: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(936), float32]) {
  @func_11827(%var_11828) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(936), float32]) */
}

def @func_3479() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */
}

def @func_6186() -> (Tensor[(1755), float32],) {
  %686 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %687 = %686.2;
  (%687,)
}

def @func_5757() -> (Tensor[(13, 6, 2), float64],) {
  %690 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %688 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
    %689 = %688.0;
    (%689,)
  };
  %690() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_5707() -> (Tensor[(13, 6, 2), float64],) {
  @func_5705() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_8858(%var_8855: Tensor[(2, 10, 3), bool], %var_8856: Tensor[(2, 10, 3), bool], %var_8857: Tensor[(70), float32]) -> (Tensor[(2, 10, 3), bool], Tensor[(5, 2, 7), float32], Tensor[(70), float32]) {
  @func_8853(%var_8855, %var_8856, %var_8857) /* ty=(Tensor[(2, 10, 3), bool], Tensor[(5, 2, 7), float32], Tensor[(70), float32]) */
}

def @func_7262() -> Tensor[(13, 6, 2), float64] {
  %692 = fn () -> Tensor[(13, 6, 2), float64] {
    %691 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %691.1
  };
  %692() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3342(%var_3341: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
  %700 = fn (%var_3329: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
    %693 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %694 = cast(%var_3329, dtype="float64") /* ty=Tensor[(104), float64] */;
    %695 = reshape(%694, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %696 = @func_3178(%695) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(4, 156), float64], Tensor[(8, 13, 6), bool], Tensor[(192), float32]) */;
    %697 = %693.0;
    %698 = %696.3;
    %699 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
    (%697, %698, %var_3329, %699)
  };
  %700(%var_3341) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_13995(%var_13993: Tensor[(1, 10, 6), float32], %var_13994: Tensor[(1, 10, 6), float32]) -> Tensor[(?, 10, 6), bool] {
  %707 = fn (%var_13979: Tensor[(1, 10, 6), float32], %var_13985: Tensor[(1, 10, 6), float32]) -> Tensor[(?, 10, 6), bool] {
    %701 = cast(%var_13979, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
    %702 = asinh(%701) /* ty=Tensor[(1, 10, 6), float32] */;
    %703 = cast(%var_13985, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
    %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%702, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%705, %706) /* ty=Tensor[(?, 10, 6), bool] */
  };
  %707(%var_13993, %var_13994) /* ty=Tensor[(?, 10, 6), bool] */
}

def @func_11052() -> (Tensor[(13, 1, 13), bool],) {
  %710 = fn () -> (Tensor[(13, 1, 13), bool],) {
    %708 = @func_9932() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) */;
    %709 = %708.1;
    (%709,)
  };
  %710() /* ty=(Tensor[(13, 1, 13), bool],) */
}

def @func_7909(%var_7907: Tensor[(624), float64], %var_7908: Tensor[(1, 1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) {
  %729 = fn (%var_7878: Tensor[(624), float64], %var_7887: Tensor[(1, 1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) {
    %711 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
    %712 = cast(%var_7878, dtype="float64") /* ty=Tensor[(624), float64] */;
    %713 = reshape(%711, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
    %714 = reshape(%712, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
    %715 = @func_1362(%713, %714) /* ty=(Tensor[(8, 13, 6), bool],) */;
    %716 = cast(%var_7887, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
    %717 = cast(meta[relay.Constant][49] /* ty=Tensor[(147), bool] */, dtype="bool") /* ty=Tensor[(147), bool] */;
    %718 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
    %719 = %715.0;
    %720 = cast(%719, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
    %721 = reshape(%716, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %722 = reshape(%717, newshape=[147]) /* ty=Tensor[(147), bool] */;
    %723 = reshape(%718, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %724 = reshape(%720, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %725 = @func_7759(%721, %722, %723, %724) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) */;
    %726 = @func_7795() /* ty=Tensor[(13, 6, 2), float64] */;
    %727 = %725.6;
    %728 = @func_7839() /* ty=Tensor[(13, 6, 2), float32] */;
    (%726, %719, meta[relay.Constant][48] /* ty=Tensor[(1, 104), float64] */, %var_7878, %727, %var_7887, meta[relay.Constant][49] /* ty=Tensor[(147), bool] */, %728)
  };
  %729(%var_7907, %var_7908) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(1, 104), float64], Tensor[(624), float64], Tensor[(624), float64], Tensor[(1, 1755), float32], Tensor[(147), bool], Tensor[(13, 6, 2), float32]) */
}

def @func_7583(%var_7581: Tensor[(624, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) {
  @func_7580(%var_7581) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) */
}

def @func_12773() -> (Tensor[(13, 6, 2), float64],) {
  %732 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %730 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %731 = %730.0;
    (%731,)
  };
  %732() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_11396() -> Tensor[(13, 6, 2), float64] {
  %733 = @func_10343() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %733.0
}

def @func_7079(%var_7077: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) {
  @func_7076(%var_7077) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_8284() -> (Tensor[(13, 6, 2), float64],) {
  @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13999() -> Tensor[(13, 6, 2), float64] {
  %734 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %734.1
}

def @func_11940() -> (Tensor[(12, 2, 1), float64],) {
  %737 = fn () -> (Tensor[(12, 2, 1), float64],) {
    %735 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
    %736 = %735.1;
    (%736,)
  };
  %737() /* ty=(Tensor[(12, 2, 1), float64],) */
}

def @func_2611(%var_2608: Tensor[(6, 12, 13), float32], %var_2609: Tensor[(24, 1), float64], %var_2610: Tensor[(104), float64]) -> (Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
  %759 = fn (%var_2554: Tensor[(6, 12, 13), float32], %var_2590: Tensor[(24, 1), float64], %var_2597: Tensor[(104), float64]) -> (Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
    %738 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 12, 13), float32] */, dtype="int16") /* ty=Tensor[(6, 12, 13), int16] */;
    %739 = shape_of(%var_2554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%var_2554, dtype="int16") /* ty=Tensor[(6, 12, 13), int16] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %742 = cast(%var_2554, dtype="float32") /* ty=Tensor[(6, 12, 13), float32] */;
    %743 = acosh(%742) /* ty=Tensor[(6, 12, 13), float32] */;
    %744 = cast(%743, dtype="float32") /* ty=Tensor[(6, 12, 13), float32] */;
    %745 = cast(%var_2590, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
    %746 = reshape(%745, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
    %747 = @func_2300(%746) /* ty=(Tensor[(12, 2, 1), float64],) */;
    %748 = cast(meta[relay.Constant][51] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %749 = cast(%var_2597, dtype="float64") /* ty=Tensor[(104), float64] */;
    %750 = cast(meta[relay.Constant][52] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %751 = reshape(%748, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
    %752 = reshape(%749, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %753 = reshape(%750, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %754 = @func_1786(%751, %752, %753) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
    %755 = multiply(%740, %741) /* ty=Tensor[(6, 12, 13), int16] */;
    %756 = cos(%744) /* ty=Tensor[(6, 12, 13), float32] */;
    %757 = %747.0;
    %758 = %754.1;
    (%755, %756, %757, %var_2590, %758, meta[relay.Constant][51] /* ty=Tensor[(192), float32] */, %var_2597, meta[relay.Constant][52] /* ty=Tensor[(624), float64] */)
  };
  %759(%var_2608, %var_2609, %var_2610) /* ty=(Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_5798() -> Tensor[(13, 6, 2), float64] {
  %761 = fn () -> Tensor[(13, 6, 2), float64] {
    %760 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %760.0
  };
  %761() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_7219() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) {
  @func_7217() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) */
}

def @func_7710() -> Tensor[(13, 6, 2), float64] {
  %762 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %762.0
}

def @func_7488(%var_7487: Tensor[(12, 2, 2), uint16]) -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) {
  %772 = fn (%var_7480: Tensor[(12, 2, 2), uint16]) -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) {
    %763 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
    %764 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
    %765 = %764.0;
    %766 = cast(%var_7480, dtype="int16") /* ty=Tensor[(12, 2, 2), int16] */;
    %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%765, dtype="int16") /* ty=Tensor[(12, 2, 2), int16] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %770 = %763.0;
    %771 = add(%768, %769) /* ty=Tensor[(12, 2, 2), int16] */;
    (%770, %771)
  };
  %772(%var_7487) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) */
}

def @func_14001() -> Tensor[(13, 6, 2), float64] {
  @func_13999() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3303(%var_3250: Tensor[(70), float32], %var_3254: Tensor[(936), float32], %var_3255: Tensor[(24), float64], %var_3294: Tensor[(96, 2), float32]) -> (Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) {
  %773 = cast(%var_3250, dtype="float32") /* ty=Tensor[(70), float32] */;
  %774 = cast(%var_3250, dtype="float32") /* ty=Tensor[(70), float32] */;
  %775 = reshape(%773, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %776 = reshape(%774, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
  %777 = @func_1343(%775, %776) /* ty=(Tensor[(5, 2, 7), float32],) */;
  %778 = cast(%var_3254, dtype="float32") /* ty=Tensor[(936), float32] */;
  %779 = cast(%var_3255, dtype="float64") /* ty=Tensor[(24), float64] */;
  %780 = cast(meta[relay.Constant][53] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %781 = reshape(%778, newshape=[6, 12, 13]) /* ty=Tensor[(6, 12, 13), float32] */;
  %782 = reshape(%779, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %783 = reshape(%780, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %784 = @func_2607(%781, %782, %783) /* ty=(Tensor[(6, 12, 13), int16], Tensor[(6, 12, 13), float32], Tensor[(12, 2, 1), float64], Tensor[(24, 1), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */;
  %785 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %787 = acosh(%786) /* ty=Tensor[(13, 6, 2), float64] */;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %789 = cast(%var_3294, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %790 = %784.6;
  %791 = cast(%790, dtype="float64") /* ty=Tensor[(104), float64] */;
  %792 = cast(meta[relay.Constant][54] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %793 = reshape(%789, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %794 = reshape(%791, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %795 = reshape(%792, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %796 = @func_1786(%793, %794, %795) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %797 = cast(%var_3294, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %798 = %796.3;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(104), float64] */;
  %800 = cast(meta[relay.Constant][54] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %801 = reshape(%797, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
  %802 = reshape(%799, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %803 = reshape(%800, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %804 = @func_1786(%801, %802, %803) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
  %805 = %777.0;
  %806 = log2(%788) /* ty=Tensor[(13, 6, 2), float64] */;
  %807 = %804.3;
  (%805, %var_3250, %790, %var_3254, %var_3255, meta[relay.Constant][53] /* ty=Tensor[(104), float64] */, %806, %798, %var_3294, meta[relay.Constant][54] /* ty=Tensor[(624), float64] */, %807)
}

def @func_7200(%var_7198: Tensor[(7, 8, 8), float32]) -> (Tensor[(7, 8, 8), float32],) {
  @func_7197(%var_7198) /* ty=(Tensor[(7, 8, 8), float32],) */
}

def @func_7436(%var_7435: Tensor[(1, 70), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(5, 2, 7), float32], Tensor[(1, 70), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(7, 11, 5), float32], Tensor[(385), bool]) {
  %827 = fn (%var_7398: Tensor[(1, 70), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(5, 2, 7), float32], Tensor[(1, 70), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(7, 11, 5), float32], Tensor[(385), bool]) {
    %808 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
    %809 = cast(%var_7398, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
    %810 = cast(%var_7398, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
    %811 = reshape(%809, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
    %812 = reshape(%810, newshape=[5, 2, 7]) /* ty=Tensor[(5, 2, 7), float32] */;
    %813 = @func_1343(%811, %812) /* ty=(Tensor[(5, 2, 7), float32],) */;
    %814 = cast(meta[relay.Constant][55] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %815 = reshape(%814, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %816 = @func_7076(%815) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) */;
    %817 = cast(meta[relay.Constant][56] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
    %818 = cast(meta[relay.Constant][56] /* ty=Tensor[(385), bool] */, dtype="bool") /* ty=Tensor[(385), bool] */;
    %819 = reshape(%817, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
    %820 = reshape(%818, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
    %821 = @func_3796(%819, %820) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
    %822 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
    %823 = %808.0;
    %824 = %813.0;
    %825 = %816.2;
    %826 = %821.1;
    (%822, %823, %824, %var_7398, %825, meta[relay.Constant][55] /* ty=Tensor[(192), float32] */, %826, meta[relay.Constant][56] /* ty=Tensor[(385), bool] */)
  };
  %827(%var_7435) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(5, 2, 7), float32], Tensor[(1, 70), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(7, 11, 5), float32], Tensor[(385), bool]) */
}

def @func_8788(%var_8787: Tensor[(1, 385), bool]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(7, 11, 5), bool], Tensor[(1, 385), bool], Tensor[(13, 6, 2), float64]) {
  %839 = fn (%var_8774: Tensor[(1, 385), bool]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(7, 11, 5), bool], Tensor[(1, 385), bool], Tensor[(13, 6, 2), float64]) {
    %828 = @func_8080() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %829 = @func_6198() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %830 = cast(%var_8774, dtype="bool") /* ty=Tensor[(1, 385), bool] */;
    %831 = cast(%var_8774, dtype="bool") /* ty=Tensor[(1, 385), bool] */;
    %832 = reshape(%830, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
    %833 = reshape(%831, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), bool] */;
    %834 = @func_3796(%832, %833) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */;
    %835 = %828.2;
    %836 = %829.0;
    %837 = %834.0;
    %838 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
    (%835, %836, %837, %var_8774, %838)
  };
  %839(%var_8787) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(7, 11, 5), bool], Tensor[(1, 385), bool], Tensor[(13, 6, 2), float64]) */
}

def @func_8344(%var_8332: Tensor[(13, 15, 9), float32], %var_8341: Tensor[(468), int32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) {
  %840 = @func_5756() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %841 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %842 = cast(meta[relay.Constant][57] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %843 = reshape(%842, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %844 = @func_1102(%843) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %845 = %844.1;
  %846 = cast(%var_8332, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %850 = cast(meta[relay.Constant][58] /* ty=Tensor[(26, 3), int32] */, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %851 = cast(%var_8341, dtype="int32") /* ty=Tensor[(468), int32] */;
  %852 = cast(%845, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %853 = cast(meta[relay.Constant][59] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %854 = reshape(%850, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int32] */;
  %855 = reshape(%851, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int32] */;
  %856 = reshape(%852, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %857 = reshape(%853, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %858 = @func_5948(%854, %855, %856, %857) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) */;
  %859 = %840.0;
  %860 = %841.0;
  %861 = subtract(%848, %849) /* ty=Tensor[(13, 15, 9), float32] */;
  %862 = %858.5;
  (%859, meta[relay.Constant][57] /* ty=Tensor[(1755), float32] */, %860, %861, %862, meta[relay.Constant][58] /* ty=Tensor[(26, 3), int32] */, %var_8341, meta[relay.Constant][59] /* ty=Tensor[(24), float64] */)
}

def @func_10764() -> (Tensor[(13, 6, 2), float64],) {
  @func_10762() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_9452() -> (Tensor[(12, 2, ?), int32],) {
  @func_9450() /* ty=(Tensor[(12, 2, ?), int32],) */
}

def @func_11797() -> Tensor[(13, 6, 2), float64] {
  @func_11795() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_6546(%var_6545: Tensor[(2, 4, 8), float32]) -> Tensor[(2, 4, 8), float32] {
  %864 = fn (%var_6538: Tensor[(2, 4, 8), float32]) -> Tensor[(2, 4, 8), float32] {
    %863 = cast(%var_6538, dtype="float32") /* ty=Tensor[(2, 4, 8), float32] */;
    atan(%863) /* ty=Tensor[(2, 4, 8), float32] */
  };
  %864(%var_6545) /* ty=Tensor[(2, 4, 8), float32] */
}

def @func_7560(%var_7558: Tensor[(4, 4, 2), float32], %var_7559: Tensor[(104), float64]) -> (Tensor[(4, 4, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  @func_7556(%var_7558, %var_7559) /* ty=(Tensor[(4, 4, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_1200(%var_1198: int8, %var_1199: Tensor[(6, 2, 15), int8]) -> (Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  @func_1196(%var_1198, %var_1199) /* ty=(Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */
}

def @func_6266() -> (Tensor[(12, 2, 2), uint16],) {
  %865 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %866 = %865.0;
  (%866,)
}

def @func_8282() -> (Tensor[(13, 6, 2), float64],) {
  %867 = @func_6993() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %868 = %867.0;
  (%868,)
}

def @func_7036() -> (Tensor[(13, 6, 2), float64],) {
  %871 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %869 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %870 = %869.0;
    (%870,)
  };
  %871() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_9123() -> (Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %872 = @func_4199() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */;
  %873 = %872.1;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %875 = erf(%874) /* ty=Tensor[(12, 2, 1), float32] */;
  %876 = cast(%875, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %877 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%873, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %880 = less_equal(%878, %879) /* ty=Tensor[(12, 2, ?), bool] */;
  %881 = cast(%880, dtype="int32") /* ty=Tensor[(12, 2, ?), int32] */;
  %882 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%875, dtype="int32") /* ty=Tensor[(12, 2, 1), int32] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %885 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %886 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %887 = add(%883, %884) /* ty=Tensor[(12, 2, ?), int32] */;
  %888 = %885.1;
  %889 = %886.0;
  %890 = @func_3600() /* ty=Tensor[(13, 6, 2), float64] */;
  (%887, %888, %889, %890)
}

def @func_9893() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %896 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %891 = @func_7803() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %892 = @func_9345() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %893 = @func_8053() /* ty=Tensor[(13, 6, 2), float64] */;
    %894 = %891.0;
    %895 = %892.0;
    (%893, %894, %895)
  };
  %896() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_13331(%var_13286: Tensor[(192), float32], %var_13327: Tensor[(840, 1), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(70), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840, 1), uint64]) {
  %897 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %898 = @func_11580() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) */;
  %899 = cast(%var_13286, dtype="float32") /* ty=Tensor[(192), float32] */;
  %900 = reshape(%899, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %901 = @func_7076(%900) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) */;
  %902 = @func_8282() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %903 = cast(meta[relay.Constant][60] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %904 = cast(%var_13327, dtype="uint64") /* ty=Tensor[(840, 1), uint64] */;
  %905 = reshape(%903, newshape=[]) /* ty=uint64 */;
  %906 = reshape(%904, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), uint64] */;
  %907 = @func_9372(%905, %906) /* ty=(Tensor[(14, 4, 15), uint64],) */;
  %908 = %897.0;
  %909 = %898.0;
  %910 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
  %911 = %901.2;
  %912 = %902.0;
  %913 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  %914 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %915 = %907.0;
  (%908, %909, %910, %911, %var_13286, %912, %913, %914, %915, meta[relay.Constant][60] /* ty=uint64 */, %var_13327)
}

def @func_3985() -> Tensor[(13, 6, 2), float64] {
  %916 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_3884() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %916() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_4964() -> Tensor[(13, 6, 2), float32] {
  %919 = fn () -> Tensor[(13, 6, 2), float32] {
    %917 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    %918 = cast(%917, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
    sigmoid(%918) /* ty=Tensor[(13, 6, 2), float32] */
  };
  %919() /* ty=Tensor[(13, 6, 2), float32] */
}

def @func_4415(%var_4414: Tensor[(1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %928 = fn (%var_4410: Tensor[(1755), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
    %920 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %921 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %922 = cast(%var_4410, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %923 = reshape(%922, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
    %924 = @func_1102(%923) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
    %925 = %920.0;
    %926 = %921.0;
    %927 = %924.0;
    (%925, %926, %927, %var_4410)
  };
  %928(%var_4414) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */
}

def @func_7654(%var_7614: Tensor[(15, 13, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(15, 13, ?), float32]) {
  %929 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %930 = cast(%var_7614, dtype="float64") /* ty=Tensor[(15, 13, 1), float64] */;
  %931 = atanh(%930) /* ty=Tensor[(15, 13, 1), float64] */;
  %932 = cast(%var_7614, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%931, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %936 = left_shift(%934, %935) /* ty=Tensor[(15, 13, ?), uint8] */;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %938 = asinh(%937) /* ty=Tensor[(15, 13, ?), float32] */;
  %939 = cast(%931, dtype="uint8") /* ty=Tensor[(15, 13, 1), uint8] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%938, dtype="uint8") /* ty=Tensor[(15, 13, ?), uint8] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %943 = minimum(%941, %942) /* ty=Tensor[(15, 13, ?), uint8] */;
  %944 = cast(%943, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %945 = acosh(%944) /* ty=Tensor[(15, 13, ?), float32] */;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(15, 13, ?), float32] */;
  %947 = %929.0;
  %948 = exp(%946) /* ty=Tensor[(15, 13, ?), float32] */;
  (%947, %948)
}

def @func_8425() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %951 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %949 = @func_7279() /* ty=Tensor[(13, 6, 2), float64] */;
    %950 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_9414() -> (Tensor[(13, 6, 2), float64],) {
  %952 = @func_8640() /* ty=Tensor[(13, 6, 2), float64] */;
  (%952,)
}

def @func_10337() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) {
  %957 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) {
    %953 = @func_8203() /* ty=Tensor[(12, 2, 2), uint16] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
    %955 = @func_5797() /* ty=Tensor[(13, 6, 2), float64] */;
    %956 = acos(%954) /* ty=Tensor[(12, 2, 2), float32] */;
    (%955, %956)
  };
  %957() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) */
}

def @func_13228() -> Tensor[(13, 6, 2), float64] {
  @func_13226() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10057() -> (Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) {
  @func_10055() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(2, 12, 16), float32]) */
}

def @func_12417(%var_12351: Tensor[(468), int32], %var_12394: Tensor[(936), float32], %var_12398: Tensor[(147), bool], %var_12399: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(468), int32], Tensor[(192), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(5, 2, 7), float32], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(312, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %958 = @func_11755() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) */;
  %959 = @func_10762() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %960 = cast(meta[relay.Constant][61] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %961 = cast(%var_12351, dtype="int32") /* ty=Tensor[(468), int32] */;
  %962 = reshape(%960, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %963 = reshape(%961, newshape=[468]) /* ty=Tensor[(468), int32] */;
  %964 = @func_8344(%962, %963) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) */;
  %965 = cast(%var_12394, dtype="float32") /* ty=Tensor[(936), float32] */;
  %966 = cast(meta[relay.Constant][62] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %967 = reshape(%965, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %968 = reshape(%966, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %969 = @func_8683(%967, %968) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(624), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(24), float64], Tensor[(192), float32]) */;
  %970 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %971 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %972 = cast(%var_12398, dtype="bool") /* ty=Tensor[(147), bool] */;
  %973 = cast(%var_12399, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %974 = cast(meta[relay.Constant][63] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %975 = cast(meta[relay.Constant][64] /* ty=Tensor[(312, 2), float64] */, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %976 = reshape(%970, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %977 = reshape(%971, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %978 = reshape(%972, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %979 = reshape(%973, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %980 = reshape(%974, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %981 = reshape(%975, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %982 = @func_2245(%976, %977, %978, %979, %980, %981) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %983 = %958.0;
  %984 = %959.0;
  %985 = %964.0;
  %986 = %969.5;
  %987 = %982.6;
  %988 = @func_11795() /* ty=Tensor[(13, 6, 2), float64] */;
  %989 = @func_11436() /* ty=Tensor[(13, 6, 2), float64] */;
  (%983, %984, %985, meta[relay.Constant][61] /* ty=Tensor[(1755), float32] */, %var_12351, %986, %var_12394, meta[relay.Constant][62] /* ty=Tensor[(192), float32] */, %987, %var_12398, %var_12399, meta[relay.Constant][63] /* ty=Tensor[(104), float64] */, meta[relay.Constant][64] /* ty=Tensor[(312, 2), float64] */, %988, %989)
}

def @func_13824() -> (Tensor[(13, 6, 2), float64],) {
  %990 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %991 = %990.1;
  (%991,)
}

def @func_1196(%var_1186: int8, %var_1187: Tensor[(6, 2, 15), int8]) -> (Tensor[(6, 2, 15), int8], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %992 = cast(%var_1186, dtype="int8") /* ty=int8 */;
  %993 = cast(%var_1187, dtype="int8") /* ty=Tensor[(6, 2, 15), int8] */;
  %994 = cast(meta[relay.Constant][65] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %995 = reshape(%994, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %996 = @func_1102(%995) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %997 = bitwise_xor(%992, %993) /* ty=Tensor[(6, 2, 15), int8] */;
  %998 = %996.0;
  (%997, %998, meta[relay.Constant][65] /* ty=Tensor[(1755), float32] */)
}

def @func_11827(%var_11821: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(936), float32]) {
  %999 = @func_9414() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1000 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1001 = cast(%var_11821, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1002 = reshape(%1001, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %1003 = @func_6529(%1002) /* ty=(Tensor[(12, 2, 2), uint16], Tensor[(2, 12), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %1004 = %999.0;
  %1005 = %1000.0;
  %1006 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
  %1007 = %1003.2;
  (%1004, %1005, %1006, %1007, %var_11821)
}

def @func_13105() -> (Tensor[(13, 6, 2), float64],) {
  %1008 = @func_9863() /* ty=(Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %1009 = %1008.1;
  (%1009,)
}

def @func_10518() -> Tensor[(13, 6, 2), float64] {
  @func_10516() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_5515() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) {
  %1017 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) {
    %1010 = cast(meta[relay.Constant][66] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1011 = cast(meta[relay.Constant][66] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1012 = reshape(%1010, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %1013 = reshape(%1011, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %1014 = @func_5476(%1012, %1013) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) */;
    %1015 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
    %1016 = %1014.0;
    (%1015, %1016, meta[relay.Constant][66] /* ty=Tensor[(104), float64] */)
  };
  %1017() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */
}

def @func_9989(%var_9987: Tensor[(3, 10, 3), int64]) -> Tensor[(3, 10, 3), bool] {
  @func_9986(%var_9987) /* ty=Tensor[(3, 10, 3), bool] */
}

def @func_6759() -> (Tensor[(13, 15, 9), float32],) {
  %1020 = fn () -> (Tensor[(13, 15, 9), float32],) {
    %1018 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
    %1019 = %1018.2;
    (%1019,)
  };
  %1020() /* ty=(Tensor[(13, 15, 9), float32],) */
}

def @func_13335(%var_13333: Tensor[(192), float32], %var_13334: Tensor[(840, 1), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(70), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840, 1), uint64]) {
  @func_13331(%var_13333, %var_13334) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(70), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840, 1), uint64]) */
}

def @func_13476() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) {
  %1029 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) {
    %1021 = @func_7217() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) */;
    %1022 = @func_8080() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %1023 = cast(meta[relay.Constant][67] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1024 = reshape(%1023, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
    %1025 = @func_4357(%1024) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
    %1026 = %1021.0;
    %1027 = %1022.1;
    %1028 = %1025.4;
    (%1026, %1027, %1028, meta[relay.Constant][67] /* ty=Tensor[(624), float64] */)
  };
  %1029() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(147, 169), float32], Tensor[(624), float64]) */
}

def @func_10936() -> Tensor[(13, 6, 2), float64] {
  @func_10934() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_11755() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) {
  %1030 = @func_10343() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1031 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1032 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %1033 = @func_3734() /* ty=Tensor[(13, 6, 2), float64] */;
  %1034 = %1030.1;
  %1035 = %1031.0;
  (%1032, %1033, %1034, %1035)
}

def @func_8549() -> (Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) {
  %1036 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1037 = cast(meta[relay.Constant][68] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1038 = reshape(%1037, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %1039 = @func_3873(%1038) /* ty=(Tensor[(3, 2, 8), bool],) */;
  %1040 = %1036.0;
  %1041 = %1039.0;
  (%1040, %1041, meta[relay.Constant][68] /* ty=Tensor[(48), float64] */)
}

def @func_3719(%var_3715: Tensor[(12, 2), float64], %var_3716: Tensor[(104), float64], %var_3717: Tensor[(1, 70), float32], %var_3718: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) {
  @func_3713(%var_3715, %var_3716, %var_3717, %var_3718) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) */
}

def @func_4360(%var_4358: Tensor[(24, 26), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) {
  @func_4357(%var_4358) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */
}

def @func_5662(%var_5657: Tensor[(1755), float32], %var_5658: Tensor[(147), bool], %var_5659: Tensor[(169), uint64], %var_5660: Tensor[(104), float64], %var_5661: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) {
  @func_5655(%var_5657, %var_5658, %var_5659, %var_5660, %var_5661) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) */
}

def @func_4357(%var_4329: Tensor[(24, 26), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) {
  %1042 = cast(meta[relay.Constant][69] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1043 = reshape(%1042, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1044 = @func_3340(%1043) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %1045 = cast(meta[relay.Constant][70] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %1046 = cast(meta[relay.Constant][70] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %1047 = cast(meta[relay.Constant][70] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %1048 = cast(meta[relay.Constant][71] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %1049 = cast(meta[relay.Constant][69] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1050 = cast(%var_4329, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
  %1051 = reshape(%1045, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1052 = reshape(%1046, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1053 = reshape(%1047, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
  %1054 = reshape(%1048, newshape=[169]) /* ty=Tensor[(169), uint64] */;
  %1055 = reshape(%1049, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1056 = reshape(%1050, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1057 = @func_2245(%1051, %1052, %1053, %1054, %1055, %1056) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
  %1058 = %1057.12;
  %1059 = cast(%1058, dtype="bool") /* ty=Tensor[(13, 1, 13), bool] */;
  %1060 = cast(meta[relay.Constant][70] /* ty=Tensor[(147, 1), bool] */, dtype="bool") /* ty=Tensor[(147, 1), bool] */;
  %1061 = cast(meta[relay.Constant][70] /* ty=Tensor[(147, 1), bool] */, dtype="float32") /* ty=Tensor[(147, 1), float32] */;
  %1062 = cast(meta[relay.Constant][71] /* ty=Tensor[(169), uint64] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %1063 = cast(meta[relay.Constant][72] /* ty=Tensor[(24, 26), float64] */, dtype="uint32") /* ty=Tensor[(24, 26), uint32] */;
  %1064 = shape_of(%var_4329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1065 = cast(%var_4329, dtype="uint32") /* ty=Tensor[(24, 26), uint32] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1067 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %1068 = %1044.0;
  %1069 = less_equal(%1059, %1060) /* ty=Tensor[(13, 147, 13), bool] */;
  %1070 = divide(%1061, %1062) /* ty=Tensor[(147, 169), float32] */;
  %1071 = left_shift(%1065, %1066) /* ty=Tensor[(24, 26), uint32] */;
  %1072 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1067, meta[relay.Constant][69] /* ty=Tensor[(104), float64] */, %1068, %1069, %1070, %1071, %1072)
}

def @func_5413(%var_5411: Tensor[(70), float32], %var_5412: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64]) {
  %1087 = fn (%var_5387: Tensor[(70), float32], %var_5389: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64]) {
    %1073 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
    %1074 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
    %1075 = cast(%1074, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
    %1076 = cast(%var_5387, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1077 = cast(meta[relay.Constant][73] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %1078 = cast(%var_5389, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1079 = reshape(%1075, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
    %1080 = reshape(%1076, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %1081 = reshape(%1077, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
    %1082 = reshape(%1078, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1083 = @func_3392(%1079, %1080, %1081, %1082) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
    %1084 = %1073.2;
    %1085 = %1083.1;
    %1086 = @func_3903() /* ty=Tensor[(13, 6, 2), float64] */;
    (%1074, %1084, %1085, %var_5387, meta[relay.Constant][73] /* ty=Tensor[(936), float32] */, %var_5389, %1086)
  };
  %1087(%var_5411, %var_5412) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_4173() -> (Tensor[(13, 6, 2), float64],) {
  %1090 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1088 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1089 = %1088.0;
    (%1089,)
  };
  %1090() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_7217() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(52, 2), float64]) {
  %1091 = cast(meta[relay.Constant][74] /* ty=Tensor[(52, 2), float64] */, dtype="float64") /* ty=Tensor[(52, 2), float64] */;
  %1092 = reshape(%1091, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1093 = @func_3340(%1092) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %1094 = @func_6295() /* ty=Tensor[(13, 6, 2), float64] */;
  %1095 = %1093.3;
  (%1094, %1095, meta[relay.Constant][74] /* ty=Tensor[(52, 2), float64] */)
}

def @func_9751(%var_9733: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), int64], Tensor[(7, 8, 8), float32], Tensor[(448), float32]) {
  %1096 = cast(%var_9733, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %1097 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(meta[relay.Constant][75] /* ty=Tensor[(9, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1100 = floor_divide(%1098, %1099) /* ty=Tensor[(9, 16, 5), float64] */;
  %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(9, 16, 5), float32] */;
  %1102 = tan(%1101) /* ty=Tensor[(9, 16, 5), float32] */;
  %1103 = cast(%1100, dtype="bool") /* ty=Tensor[(9, 16, 5), bool] */;
  %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%1102, dtype="bool") /* ty=Tensor[(9, 16, 5), bool] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1107 = logical_and(%1105, %1106) /* ty=Tensor[(9, 16, 5), bool] */;
  %1108 = cast(%1107, dtype="int64") /* ty=Tensor[(9, 16, 5), int64] */;
  %1109 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(meta[relay.Constant][75] /* ty=Tensor[(9, 16, 5), float64] */, dtype="int64") /* ty=Tensor[(9, 16, 5), int64] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1112 = cast(meta[relay.Constant][76] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1113 = reshape(%1112, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float32] */;
  %1114 = @func_7197(%1113) /* ty=(Tensor[(7, 8, 8), float32],) */;
  %1115 = left_shift(%1110, %1111) /* ty=Tensor[(9, 16, 5), int64] */;
  %1116 = %1114.0;
  (%1115, %1116, meta[relay.Constant][76] /* ty=Tensor[(448), float32] */)
}

def @func_7359() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) {
  %1122 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) {
    %1117 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
    %1118 = @func_6266() /* ty=(Tensor[(12, 2, 2), uint16],) */;
    %1119 = %1117.1;
    %1120 = %1118.0;
    %1121 = @func_7261() /* ty=Tensor[(13, 6, 2), float64] */;
    (%1119, %1120, %1121)
  };
  %1122() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */
}

def @func_6082(%var_6077: Tensor[(13, 6, 2), float64], %var_6078: Tensor[(78), int32], %var_6079: Tensor[(3, 156), int32], %var_6080: Tensor[(1755), float32], %var_6081: Tensor[(24, 1), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) {
  @func_6075(%var_6077, %var_6078, %var_6079, %var_6080, %var_6081) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) */
}

def @func_7580(%var_7573: Tensor[(624, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(624, 1), float64]) {
  %1123 = @func_7310() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %1124 = cast(%var_7573, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %1125 = reshape(%1124, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1126 = @func_6937(%1125) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) */;
  %1127 = %1123.0;
  %1128 = %1126.4;
  (%1127, %1128, %var_7573)
}

def @func_11184(%var_11170: Tensor[(1755), float32]) -> (Tensor[(4, 13, 8), uint8], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(48), float64], Tensor[(468), int32], Tensor[(1755), float32], Tensor[(468), int32]) {
  %1129 = cast(meta[relay.Constant][78] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 8), uint8] */;
  %1130 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 8), uint8] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1133 = @func_9325() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1134 = @func_10423() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) */;
  %1135 = @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1136 = @func_8549() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(3, 2, 8), bool], Tensor[(48), float64]) */;
  %1137 = cast(%var_11170, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1138 = cast(meta[relay.Constant][79] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %1139 = reshape(%1137, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1140 = reshape(%1138, newshape=[468]) /* ty=Tensor[(468), int32] */;
  %1141 = @func_8344(%1139, %1140) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(24), float64], Tensor[(26, 3), int32], Tensor[(468), int32], Tensor[(24), float64]) */;
  %1142 = bitwise_or(%1131, %1132) /* ty=Tensor[(4, 13, 8), uint8] */;
  %1143 = %1133.1;
  %1144 = %1134.1;
  %1145 = @func_7795() /* ty=Tensor[(13, 6, 2), float64] */;
  %1146 = %1135.0;
  %1147 = %1136.2;
  %1148 = %1141.6;
  (%1142, %1143, %1144, %1145, %1146, %1147, %1148, %var_11170, meta[relay.Constant][79] /* ty=Tensor[(468), int32] */)
}

def @func_10550() -> Tensor[(13, 6, 2), float64] {
  @func_10548() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_5535() -> (Tensor[(13, 6, 2), float64],) {
  %1151 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1149 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1150 = %1149.0;
    (%1150,)
  };
  %1151() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_7197(%var_7173: Tensor[(7, 8, 8), float32]) -> (Tensor[(7, 8, 8), float32],) {
  %1152 = cast(%var_7173, dtype="float32") /* ty=Tensor[(7, 8, 8), float32] */;
  %1153 = log(%1152) /* ty=Tensor[(7, 8, 8), float32] */;
  (%1153,)
}

def @func_6876() -> (Tensor[(13, 6, 2), float64],) {
  @func_6874() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_7803() -> (Tensor[(13, 6, 2), float64],) {
  %1154 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_3477() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) {
  %1156 = @func_3110() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1157 = cast(meta[relay.Constant][80] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1158 = reshape(%1157, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %1159 = @func_1102(%1158) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
  %1160 = %1156.1;
  %1161 = %1159.0;
  (%1160, %1161, meta[relay.Constant][80] /* ty=Tensor[(1755), float32] */)
}

def @func_6937(%var_6934: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) {
  %1162 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1163 = cast(%var_6934, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1164 = reshape(%1163, newshape=[24, 26]) /* ty=Tensor[(24, 26), float64] */;
  %1165 = @func_4357(%1164) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(147, 169), float32], Tensor[(24, 26), uint32], Tensor[(13, 6, 2), float64]) */;
  %1166 = %1162.0;
  %1167 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %1168 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %1169 = %1165.3;
  (%1166, %1167, %1168, %1169, %var_6934)
}

def @func_10244() -> (Tensor[(13, 6, 2), float64],) {
  %1172 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1170 = @func_7803() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1171 = %1170.0;
    (%1171,)
  };
  %1172() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_10424() -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) {
  %1181 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) {
    %1173 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1174 = cast(meta[relay.Constant][81] /* ty=Tensor[(48), uint16] */, dtype="uint16") /* ty=Tensor[(48), uint16] */;
    %1175 = reshape(%1174, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), uint16] */;
    %1176 = @func_7486(%1175) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16]) */;
    %1177 = @func_8937() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
    %1178 = %1173.0;
    %1179 = %1176.1;
    %1180 = %1177.2;
    (%1178, %1179, meta[relay.Constant][81] /* ty=Tensor[(48), uint16] */, %1180)
  };
  %1181() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), int16], Tensor[(48), uint16], Tensor[(13, 15, 9), float32]) */
}

def @func_3799(%var_3797: Tensor[(7, 11, 5), bool], %var_3798: Tensor[(7, 11, 5), bool]) -> (Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) {
  %1194 = fn (%var_3769: Tensor[(7, 11, 5), bool], %var_3787: Tensor[(7, 11, 5), bool]) -> (Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) {
    %1182 = cast(meta[relay.Constant][82] /* ty=Tensor[(7, 11, 5), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
    %1183 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1184 = cast(%var_3769, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
    %1185 = dyn.reshape(%1182, %1183, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1186 = cast(%var_3787, dtype="uint32") /* ty=Tensor[(7, 11, 5), uint32] */;
    %1187 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1188 = cast(%var_3769, dtype="uint32") /* ty=Tensor[(7, 11, 5), uint32] */;
    %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1190 = bitwise_or(%1188, %1189) /* ty=Tensor[(7, 11, 5), uint32] */;
    %1191 = cast(%1190, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
    %1192 = logical_and(%1184, %1185) /* ty=Tensor[(7, 11, 5), bool] */;
    %1193 = sin(%1191) /* ty=Tensor[(7, 11, 5), float32] */;
    (%1192, %1193)
  };
  %1194(%var_3797, %var_3798) /* ty=(Tensor[(7, 11, 5), bool], Tensor[(7, 11, 5), float32]) */
}

def @func_4200() -> (Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) {
  %1201 = fn () -> (Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) {
    %1195 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
    %1196 = cast(meta[relay.Constant][83] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %1197 = reshape(%1196, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
    %1198 = @func_2300(%1197) /* ty=(Tensor[(12, 2, 1), float64],) */;
    %1199 = %1195.2;
    %1200 = %1198.0;
    (%1199, %1200, meta[relay.Constant][83] /* ty=Tensor[(24), float64] */)
  };
  %1201() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(12, 2, 1), float64], Tensor[(24), float64]) */
}

def @func_3713(%var_3700: Tensor[(12, 2), float64], %var_3705: Tensor[(104), float64], %var_3708: Tensor[(1, 70), float32], %var_3709: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(12, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(192), float32]) {
  %1202 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %1203 = @func_3477() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
  %1204 = cast(%var_3700, dtype="float64") /* ty=Tensor[(12, 2), float64] */;
  %1205 = reshape(%1204, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float64] */;
  %1206 = @func_2300(%1205) /* ty=(Tensor[(12, 2, 1), float64],) */;
  %1207 = cast(%var_3705, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1208 = reshape(%1207, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1209 = @func_3340(%1208) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(4, 156), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */;
  %1210 = %1202.1;
  %1211 = cast(%1210, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1212 = cast(%var_3708, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %1213 = cast(%var_3709, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1214 = cast(meta[relay.Constant][84] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1215 = reshape(%1211, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1216 = reshape(%1212, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1217 = reshape(%1213, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1218 = reshape(%1214, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1219 = @func_3392(%1215, %1216, %1217, %1218) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1220 = @func_2937() /* ty=Tensor[(13, 6, 2), float64] */;
  %1221 = %1203.0;
  %1222 = %1206.0;
  %1223 = %1209.2;
  %1224 = %1219.1;
  (%1220, %1210, %1221, %1222, %var_3700, %1223, %var_3705, %1224, %var_3708, %var_3709, meta[relay.Constant][84] /* ty=Tensor[(192), float32] */)
}

def @func_6268() -> (Tensor[(12, 2, 2), uint16],) {
  @func_6266() /* ty=(Tensor[(12, 2, 2), uint16],) */
}

def @func_11795() -> Tensor[(13, 6, 2), float64] {
  %1225 = @func_8424() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1225.1
}

def @func_12331() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1226 = @func_11755() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16]) */;
  %1227 = %1226.0;
  %1228 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1227, %1228)
}

def @func_7690(%var_7686: Tensor[(21, 7), bool], %var_7687: Tensor[(1, 169), uint64], %var_7688: Tensor[(104), float64], %var_7689: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(169), uint64], Tensor[(21, 7), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
  %1244 = fn (%var_7677: Tensor[(21, 7), bool], %var_7678: Tensor[(1, 169), uint64], %var_7679: Tensor[(104), float64], %var_7680: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(169), uint64], Tensor[(21, 7), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
    %1229 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
    %1230 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
    %1231 = cast(%var_7677, dtype="bool") /* ty=Tensor[(21, 7), bool] */;
    %1232 = cast(%var_7678, dtype="uint64") /* ty=Tensor[(1, 169), uint64] */;
    %1233 = cast(%var_7679, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1234 = cast(%var_7680, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1235 = reshape(%1229, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
    %1236 = reshape(%1230, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
    %1237 = reshape(%1231, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), bool] */;
    %1238 = reshape(%1232, newshape=[169]) /* ty=Tensor[(169), uint64] */;
    %1239 = reshape(%1233, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1240 = reshape(%1234, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %1241 = @func_2245(%1235, %1236, %1237, %1238, %1239, %1240) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */;
    %1242 = @func_3884() /* ty=Tensor[(13, 6, 2), float64] */;
    %1243 = %1241.2;
    (%1242, %1243, %var_7677, %var_7678, %var_7679, %var_7680)
  };
  %1244(%var_7686, %var_7687, %var_7688, %var_7689) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(169), uint64], Tensor[(21, 7), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_8203() -> Tensor[(12, 2, 2), uint16] {
  %1245 = @func_4295() /* ty=(Tensor[(12, 2, 2), uint16],) */;
  %1245.0
}

def @func_11005() -> (Tensor[(13, 6, 2), float64],) {
  %1246 = @func_6115() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(13, 6, 2), float64]) */;
  %1247 = %1246.2;
  (%1247,)
}

def @func_4129() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_4127() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_3833() -> (Tensor[(13, 6, 2), float64],) {
  %1250 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1248 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
    %1249 = %1248.0;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_13538(%var_13537: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(180), int8]) {
  %1256 = fn (%var_13530: Tensor[(180), int8]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(180), int8]) {
    %1251 = cast(%var_13530, dtype="int8") /* ty=Tensor[(180), int8] */;
    %1252 = reshape(%1251, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %1253 = @func_11301(%1252) /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 15, 9), float32], int8, Tensor[(180), int8]) */;
    %1254 = @func_7261() /* ty=Tensor[(13, 6, 2), float64] */;
    %1255 = %1253.1;
    (%1254, %1255, %var_13530)
  };
  %1256(%var_13537) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(180), int8]) */
}

def @func_6304() -> Tensor[(13, 6, 2), float64] {
  %1257 = @func_4478() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */;
  %1257.1
}

def @func_9325() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1258 = @func_6856() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1259 = @func_6254() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1260 = %1258.0;
  %1261 = %1259.1;
  (%1260, %1261)
}

def @func_10548() -> Tensor[(13, 6, 2), float64] {
  %1262 = @func_7358() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64]) */;
  %1262.0
}

def @func_7076(%var_7064: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 1), float64], Tensor[(13, 6, 2), float64]) {
  %1263 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1264 = %1263.0;
  %1265 = cast(%1264, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1266 = cast(meta[relay.Constant][85] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1267 = cast(meta[relay.Constant][86] /* ty=Tensor[(936, 1), float32] */, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %1268 = cast(%var_7064, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1269 = reshape(%1265, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1270 = reshape(%1266, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1271 = reshape(%1267, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1272 = reshape(%1268, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1273 = @func_3392(%1269, %1270, %1271, %1272) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1274 = cast(meta[relay.Constant][86] /* ty=Tensor[(936, 1), float32] */, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %1275 = sqrt(%1274) /* ty=Tensor[(936, 1), float32] */;
  %1276 = cast(%1275, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
  %1277 = @func_7023() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1278 = %1273.0;
  %1279 = erf(%1276) /* ty=Tensor[(936, 1), float64] */;
  %1280 = %1277.1;
  (%1264, %1278, meta[relay.Constant][85] /* ty=Tensor[(70), float32] */, %var_7064, %1279, %1280)
}

def @func_12741() -> Tensor[(13, 6, 2), float64] {
  @func_12739() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_13722(%var_13720: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(12, 78), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840), uint64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, ?), float32], Tensor[(8, 13, 6), bool], Tensor[(12, 2, 2), uint16], Tensor[(8, 13, 6), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float64]) {
  @func_13719(%var_13720) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(624), float64], Tensor[(12, 78), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(14, 4, 15), uint64], uint64, Tensor[(840), uint64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, ?), float32], Tensor[(8, 13, 6), bool], Tensor[(12, 2, 2), uint16], Tensor[(8, 13, 6), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float64]) */
}

def @func_13226() -> Tensor[(13, 6, 2), float64] {
  %1281 = @func_10336() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), float32]) */;
  %1281.0
}

def @func_7657(%var_7655: Tensor[(15, 13, 1), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(15, 13, ?), float32]) {
  @func_7654(%var_7655) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(15, 13, ?), float32]) */
}

def @func_9168() -> Tensor[(13, 6, 2), float64] {
  @func_9166() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_9416() -> (Tensor[(13, 6, 2), float64],) {
  @func_9414() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_3398(%var_3394: Tensor[(13, 6, 2), float64], %var_3395: Tensor[(70), float32], %var_3396: Tensor[(936, 1), float32], %var_3397: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) {
  @func_3392(%var_3394, %var_3395, %var_3396, %var_3397) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */
}

def @func_11581() -> (Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) {
  %1292 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) {
    %1282 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1283 = cast(meta[relay.Constant][87] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
    %1284 = reshape(%1283, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
    %1285 = @func_8210(%1284) /* ty=Tensor[(11, 4, 13), float64] */;
    %1286 = cast(meta[relay.Constant][87] /* ty=Tensor[(572), float64] */, dtype="uint32") /* ty=Tensor[(572), uint32] */;
    %1287 = shape_of(%1285, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1288 = cast(%1285, dtype="uint32") /* ty=Tensor[(11, 4, 13), uint32] */;
    %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1290 = %1282.0;
    %1291 = bitwise_and(%1288, %1289) /* ty=Tensor[(11, 4, 13), uint32] */;
    (%1290, %1291)
  };
  %1292() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(11, 4, 13), uint32]) */
}

def @func_6421() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1293 = @func_6338() /* ty=Tensor[(13, 6, 2), float64] */;
  %1294 = @func_4740() /* ty=Tensor[(13, 6, 2), float64] */;
  (%1293, %1294)
}

def @func_9805() -> (Tensor[(12, 2, ?), float32],) {
  %1299 = fn () -> (Tensor[(12, 2, ?), float32],) {
    %1295 = @func_9450() /* ty=(Tensor[(12, 2, ?), int32],) */;
    %1296 = %1295.0;
    %1297 = cast(%1296, dtype="float32") /* ty=Tensor[(12, 2, ?), float32] */;
    %1298 = asinh(%1297) /* ty=Tensor[(12, 2, ?), float32] */;
    (%1298,)
  };
  %1299() /* ty=(Tensor[(12, 2, ?), float32],) */
}

def @func_10905() -> (Tensor[(13, 6, 2), float32],) {
  %1301 = fn () -> (Tensor[(13, 6, 2), float32],) {
    %1300 = @func_7839() /* ty=Tensor[(13, 6, 2), float32] */;
    (%1300,)
  };
  %1301() /* ty=(Tensor[(13, 6, 2), float32],) */
}

def @func_13180() -> (Tensor[(13, 6, 2), float64],) {
  @func_13178() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_5256(%var_5255: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) {
  %1313 = fn (%var_5223: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) {
    %1302 = cast(meta[relay.Constant][88] /* ty=Tensor[(96, 2), float32] */, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
    %1303 = cast(%var_5223, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1304 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
    %1305 = reshape(%1302, newshape=[16, 4, 3]) /* ty=Tensor[(16, 4, 3), float32] */;
    %1306 = reshape(%1303, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1307 = reshape(%1304, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %1308 = @func_1786(%1305, %1306, %1307) /* ty=(Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) */;
    %1309 = %1308.2;
    %1310 = cast(%1309, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
    %1311 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
    %1312 = atan(%1310) /* ty=Tensor[(8, 13, 6), float64] */;
    (%1311, meta[relay.Constant][88] /* ty=Tensor[(96, 2), float32] */, %var_5223, meta[relay.Constant][89] /* ty=Tensor[(1, 624), float64] */, %1312)
  };
  %1313(%var_5255) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(104), float64], Tensor[(1, 624), float64], Tensor[(8, 13, 6), float64]) */
}

def @func_3309(%var_3305: Tensor[(70), float32], %var_3306: Tensor[(936), float32], %var_3307: Tensor[(24), float64], %var_3308: Tensor[(96, 2), float32]) -> (Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) {
  @func_3303(%var_3305, %var_3306, %var_3307, %var_3308) /* ty=(Tensor[(5, 2, 7), float32], Tensor[(70), float32], Tensor[(104), float64], Tensor[(936), float32], Tensor[(24), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(96, 2), float32], Tensor[(624), float64], Tensor[(104), float64]) */
}

def @func_1786(%var_1759: Tensor[(16, 4, 3), float32], %var_1772: Tensor[(104), float64], %var_1773: Tensor[(624), float64]) -> (Tensor[(16, 4, 3), float32], Tensor[(16, 4, 3), float32], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  %1314 = cast(meta[relay.Constant][90] /* ty=Tensor[(16, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %1315 = shape_of(%var_1759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1316 = cast(%var_1759, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %1317 = dyn.reshape(%1314, %1315, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1318 = cast(%var_1759, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %1319 = cast(%var_1772, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1320 = cast(%var_1773, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1321 = reshape(%1319, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %1322 = reshape(%1320, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %1323 = @func_1362(%1321, %1322) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %1324 = divide(%1316, %1317) /* ty=Tensor[(16, 4, 3), float32] */;
  %1325 = sigmoid(%1318) /* ty=Tensor[(16, 4, 3), float32] */;
  %1326 = %1323.0;
  (%1324, %1325, %1326, %var_1772, %var_1773)
}

def @func_13835(%var_13834: Tensor[(5, 10, 9), float32]) -> Tensor[(5, 10, 9), float32] {
  %1328 = fn (%var_13829: Tensor[(5, 10, 9), float32]) -> Tensor[(5, 10, 9), float32] {
    %1327 = cast(%var_13829, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
    log10(%1327) /* ty=Tensor[(5, 10, 9), float32] */
  };
  %1328(%var_13834) /* ty=Tensor[(5, 10, 9), float32] */
}

def @func_9247() -> (Tensor[(104), float64],) {
  %1331 = fn () -> (Tensor[(104), float64],) {
    %1329 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
    %1330 = %1329.2;
    (%1330,)
  };
  %1331() /* ty=(Tensor[(104), float64],) */
}

def @func_5184(%var_5137: Tensor[(13, 6, 2), float64], %var_5147: Tensor[(192), float32]) -> (Tensor[(13, 6, 2), bool], Tensor[(70), float32], Tensor[(70), float32], Tensor[(12, 78), float32], Tensor[(192), float32]) {
  %1332 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
  %1333 = cast(%var_5137, dtype="bool") /* ty=Tensor[(13, 6, 2), bool] */;
  %1334 = shape_of(%1332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1335 = cast(%1332, dtype="bool") /* ty=Tensor[(13, 6, 2), bool] */;
  %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1337 = cast(%var_5137, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %1338 = cast(meta[relay.Constant][91] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1339 = cast(meta[relay.Constant][92] /* ty=Tensor[(12, 78), float32] */, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %1340 = cast(%var_5147, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1341 = reshape(%1337, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %1342 = reshape(%1338, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %1343 = reshape(%1339, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %1344 = reshape(%1340, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1345 = @func_3392(%1341, %1342, %1343, %1344) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(192), float32], Tensor[(936, 24), float64]) */;
  %1346 = less(%1335, %1336) /* ty=Tensor[(13, 6, 2), bool] */;
  %1347 = %1345.2;
  (%1346, %1347, meta[relay.Constant][91] /* ty=Tensor[(70), float32] */, meta[relay.Constant][92] /* ty=Tensor[(12, 78), float32] */, %var_5147)
}

def @func_6436() -> (Tensor[(13, 6, 2), float32],) {
  %1348 = @func_4963() /* ty=Tensor[(13, 6, 2), float32] */;
  (%1348,)
}

def @func_6940(%var_6938: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) {
  @func_6937(%var_6938) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 147, 13), bool], Tensor[(624), float64]) */
}

def @func_6188() -> (Tensor[(1755), float32],) {
  @func_6186() /* ty=(Tensor[(1755), float32],) */
}

def @func_8081() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1354 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
    %1349 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1350 = @func_6688() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %1351 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
    %1352 = %1349.0;
    %1353 = %1350.1;
    (%1351, %1352, %1353)
  };
  %1354() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_8175(%var_8173: Tensor[(7, 9, 12), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) {
  @func_8172(%var_8173) /* ty=(Tensor[(13, 6, 2), float32], Tensor[(7, 9, 12), float32]) */
}

def @func_6295() -> Tensor[(13, 6, 2), float64] {
  %1355 = @func_4172() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1355.0
}

def @func_6075(%var_6060: Tensor[(13, 6, 2), float64], %var_6070: Tensor[(78), int32], %var_6071: Tensor[(3, 156), int32], %var_6072: Tensor[(1755), float32], %var_6073: Tensor[(24, 1), float64]) -> (Tensor[(13, 6, 2), float32], Tensor[(104), float64], Tensor[(78), int32], Tensor[(3, 156), int32], Tensor[(1755), float32], Tensor[(24, 1), float64]) {
  %1356 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
  %1357 = cast(%var_6060, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %1358 = shape_of(%1356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1359 = cast(%1356, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1361 = cast(%var_6070, dtype="int32") /* ty=Tensor[(78), int32] */;
  %1362 = cast(%var_6071, dtype="int32") /* ty=Tensor[(3, 156), int32] */;
  %1363 = cast(%var_6072, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %1364 = cast(%var_6073, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %1365 = reshape(%1361, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int32] */;
  %1366 = reshape(%1362, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int32] */;
  %1367 = reshape(%1363, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %1368 = reshape(%1364, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %1369 = @func_5948(%1365, %1366, %1367, %1368) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(104), float64], Tensor[(24), float64], Tensor[(104), float64], Tensor[(70), float32], Tensor[(936), float32]) */;
  %1370 = floor_divide(%1359, %1360) /* ty=Tensor[(13, 6, 2), float32] */;
  %1371 = %1369.6;
  (%1370, %1371, %var_6070, %var_6071, %var_6072, %var_6073)
}

def @func_6306() -> Tensor[(13, 6, 2), float64] {
  @func_6304() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_12423(%var_12419: Tensor[(468), int32], %var_12420: Tensor[(936), float32], %var_12421: Tensor[(147), bool], %var_12422: Tensor[(169), uint64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(468), int32], Tensor[(192), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(5, 2, 7), float32], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(312, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_12417(%var_12419, %var_12420, %var_12421, %var_12422) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(1755), float32], Tensor[(468), int32], Tensor[(192), float32], Tensor[(936), float32], Tensor[(192), float32], Tensor[(5, 2, 7), float32], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(312, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_6812(%var_6810: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) {
  @func_6809(%var_6810) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_9986(%var_9977: Tensor[(3, 10, 3), int64]) -> Tensor[(3, 10, 3), bool] {
  %1372 = cast(meta[relay.Constant][93] /* ty=Tensor[(3, 10, 3), int64] */, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %1373 = shape_of(%var_9977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1374 = cast(%var_9977, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1374, %1375) /* ty=Tensor[(3, 10, 3), bool] */
}

def @func_9327() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_9325() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_9166() -> Tensor[(13, 6, 2), float64] {
  %1376 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1376.0
}

def @func_7164() -> (Tensor[(13, 6, 2), float64],) {
  %1379 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1377 = @func_5514() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64]) */;
    %1378 = %1377.1;
    (%1378,)
  };
  %1379() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_7556(%var_7507: Tensor[(4, 4, 2), float32], %var_7526: Tensor[(104), float64]) -> (Tensor[(4, 4, 2), float64], Tensor[(8, 13, 6), bool], Tensor[(104), float64], Tensor[(624), float64]) {
  %1380 = cast(%var_7507, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1381 = acos(%1380) /* ty=Tensor[(4, 4, 2), float32] */;
  %1382 = cast(%1381, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %1383 = cast(%var_7526, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1384 = cast(meta[relay.Constant][94] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1385 = reshape(%1383, newshape=[8, 13, 1]) /* ty=Tensor[(8, 13, 1), float64] */;
  %1386 = reshape(%1384, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %1387 = @func_1362(%1385, %1386) /* ty=(Tensor[(8, 13, 6), bool],) */;
  %1388 = cast(meta[relay.Constant][94] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1389 = exp(%1382) /* ty=Tensor[(4, 4, 2), float64] */;
  %1390 = %1387.0;
  %1391 = sinh(%1388) /* ty=Tensor[(624), float64] */;
  (%1389, %1390, %var_7526, %1391)
}

def @func_9933() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) {
  %1398 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) {
    %1392 = @func_9414() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1393 = cast(meta[relay.Constant][95] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
    %1394 = reshape(%1393, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
    %1395 = @func_1444(%1394) /* ty=(Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
    %1396 = %1392.0;
    %1397 = %1395.0;
    (%1396, %1397, meta[relay.Constant][95] /* ty=Tensor[(169), uint64] */)
  };
  %1398() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 1, 13), bool], Tensor[(169), uint64]) */
}

def @func_6339() -> Tensor[(13, 6, 2), float64] {
  %1399 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_3437() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %1399() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_4638(%var_4631: Tensor[(24), float64], %var_4632: Tensor[(385), bool], %var_4633: Tensor[(13, 6, 2), float64], %var_4634: Tensor[(147), bool], %var_4635: Tensor[(104), float64], %var_4636: Tensor[(624), float64], %var_4637: Tensor[(936), float32]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(24), float64], Tensor[(7, 11, 5), bool], Tensor[(13, 6, 2), uint64], Tensor[(624), float64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(6, 2, 15), int8], int8, Tensor[(30, 6), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float64], Tensor[(385), float64]) {
  @func_4629(%var_4631, %var_4632, %var_4633, %var_4634, %var_4635, %var_4636, %var_4637) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 1), float64], Tensor[(24), float64], Tensor[(7, 11, 5), bool], Tensor[(13, 6, 2), uint64], Tensor[(624), float64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(6, 2, 15), int8], int8, Tensor[(30, 6), int8], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(12, 2, 2), uint16], Tensor[(13, 6, 2), float64], Tensor[(1, 70), float32], Tensor[(936), float32], Tensor[(13, 6, 2), float64], Tensor[(385), float64]) */
}

def @func_3438() -> Tensor[(13, 6, 2), float64] {
  %1400 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_2937() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %1400() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_4742() -> Tensor[(13, 6, 2), float64] {
  @func_4740() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_12247() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  @func_12245() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_10206(%var_10205: Tensor[(13, 16, 8), float64]) -> Tensor[(13, 16, 8), float32] {
  %1404 = fn (%var_10192: Tensor[(13, 16, 8), float64]) -> Tensor[(13, 16, 8), float32] {
    %1401 = cast(%var_10192, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
    %1402 = log(%1401) /* ty=Tensor[(13, 16, 8), float64] */;
    %1403 = cast(%1402, dtype="float32") /* ty=Tensor[(13, 16, 8), float32] */;
    cos(%1403) /* ty=Tensor[(13, 16, 8), float32] */
  };
  %1404(%var_10205) /* ty=Tensor[(13, 16, 8), float32] */
}

def @func_6199() -> (Tensor[(13, 6, 2), float64],) {
  %1407 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1405 = @func_5855() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1406 = %1405.0;
    (%1406,)
  };
  %1407() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_4397() -> (Tensor[(13, 6, 2), float64],) {
  %1410 = fn () -> (Tensor[(13, 6, 2), float64],) {
    %1408 = @func_3955() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1409 = %1408.0;
    (%1409,)
  };
  %1410() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_9376(%var_9374: uint64, %var_9375: Tensor[(14, 4, 15), uint64]) -> (Tensor[(14, 4, 15), uint64],) {
  @func_9372(%var_9374, %var_9375) /* ty=(Tensor[(14, 4, 15), uint64],) */
}

def @func_12621(%var_12620: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
  %1422 = fn (%var_12588: Tensor[(104), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) {
    %1411 = cast(%var_12588, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1412 = cast(%var_12588, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1413 = reshape(%1411, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %1414 = reshape(%1412, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %1415 = @func_5476(%1413, %1414) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(26, 4), int32]) */;
    %1416 = @func_9325() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %1417 = @func_10548() /* ty=Tensor[(13, 6, 2), float64] */;
    %1418 = @func_3984() /* ty=Tensor[(13, 6, 2), float64] */;
    %1419 = @func_11396() /* ty=Tensor[(13, 6, 2), float64] */;
    %1420 = %1415.1;
    %1421 = %1416.0;
    (%1417, %1418, %1419, %1420, %var_12588, %1421)
  };
  %1422(%var_12620) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(13, 6, 2), float64]) */
}

def @func_7023() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1423 = @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1424 = @func_6228() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1425 = %1423.0;
  %1426 = %1424.0;
  (%1425, %1426)
}

def @func_10786() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) {
  %1427 = @func_3587() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32]) */;
  %1428 = @func_6421() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1429 = %1427.1;
  %1430 = %1428.0;
  (%1429, %1430)
}

def @func_11007() -> (Tensor[(13, 6, 2), float64],) {
  @func_11005() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_5790() -> (Tensor[(13, 6, 2), float64],) {
  @func_5788() /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_2939() -> Tensor[(13, 6, 2), float64] {
  @func_2937() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_10934() -> Tensor[(13, 6, 2), float64] {
  %1431 = @func_5080() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1431.0
}

def @func_10580(%var_10578: Tensor[(11, 4, 9), float32]) -> Tensor[(11, 4, 9), uint64] {
  @func_10577(%var_10578) /* ty=Tensor[(11, 4, 9), uint64] */
}

def @func_8641() -> Tensor[(13, 6, 2), float64] {
  %1433 = fn () -> Tensor[(13, 6, 2), float64] {
    %1432 = @func_3832() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1432.0
  };
  %1433() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_7102() -> (Tensor[(13, 6, 2), float64],) {
  %1434 = @func_6198() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1435 = %1434.0;
  (%1435,)
}

def @func_2253(%var_2247: Tensor[(3, 7, 7), bool], %var_2248: Tensor[(3, 7, 7), bool], %var_2249: Tensor[(3, 7, 7), bool], %var_2250: Tensor[(169), uint64], %var_2251: Tensor[(104), float64], %var_2252: Tensor[(624), float64]) -> (Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) {
  @func_2245(%var_2247, %var_2248, %var_2249, %var_2250, %var_2251, %var_2252) /* ty=(Tensor[(3, 7, 7), uint16], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(3, 7, 7), float32], Tensor[(13, 1, 13), bool], Tensor[(3, 7, 7), float64], Tensor[(5, 2, 7), float32], Tensor[(70, 1), float32], Tensor[(16, 4, 3), float32], Tensor[(192), float32], Tensor[(104), float64], Tensor[(624), float64], Tensor[(13, 1, 13), bool], Tensor[(13, 15, 9), float32]) */
}

def @func_8205() -> Tensor[(12, 2, 2), uint16] {
  @func_8203() /* ty=Tensor[(12, 2, 2), uint16] */
}

def @func_9450() -> (Tensor[(12, 2, ?), int32],) {
  %1436 = @func_9123() /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
  %1437 = %1436.0;
  (%1437,)
}

def @func_7839() -> Tensor[(13, 6, 2), float32] {
  %1438 = @func_7143() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1439 = %1438.0;
  %1440 = cast(%1439, dtype="float32") /* ty=Tensor[(13, 6, 2), float32] */;
  sqrt(%1440) /* ty=Tensor[(13, 6, 2), float32] */
}

def @func_7764(%var_7760: Tensor[(1755), float32], %var_7761: Tensor[(147), bool], %var_7762: Tensor[(104), float64], %var_7763: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
  %1455 = fn (%var_7747: Tensor[(1755), float32], %var_7748: Tensor[(147), bool], %var_7750: Tensor[(104), float64], %var_7751: Tensor[(624), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) {
    %1441 = @func_7035() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1442 = cast(%var_7747, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %1443 = cast(%var_7748, dtype="bool") /* ty=Tensor[(147), bool] */;
    %1444 = cast(meta[relay.Constant][96] /* ty=Tensor[(1, 169), uint64] */, dtype="uint64") /* ty=Tensor[(1, 169), uint64] */;
    %1445 = cast(%var_7750, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1446 = cast(%var_7751, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1447 = reshape(%1442, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %1448 = reshape(%1443, newshape=[147]) /* ty=Tensor[(147), bool] */;
    %1449 = reshape(%1444, newshape=[169]) /* ty=Tensor[(169), uint64] */;
    %1450 = reshape(%1445, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1451 = reshape(%1446, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %1452 = @func_5655(%1447, %1448, %1449, %1450, %1451) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32], Tensor[(13, 15, 9), float32], Tensor[(169), uint64], Tensor[(147), bool], Tensor[(169), uint64], Tensor[(104), float64], Tensor[(624), float64], Tensor[(96, 2), float32], Tensor[(70), float32], Tensor[(6, 156), float32], Tensor[(192), float32], Tensor[(8, 13, 6), float64], Tensor[(13, 15, 9), float32]) */;
    %1453 = %1441.0;
    %1454 = %1452.10;
    (%1453, %1454, %var_7747, %var_7748, meta[relay.Constant][96] /* ty=Tensor[(1, 169), uint64] */, %var_7750, %var_7751)
  };
  %1455(%var_7760, %var_7761, %var_7762, %var_7763) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(96, 2), float32], Tensor[(1755), float32], Tensor[(147), bool], Tensor[(1, 169), uint64], Tensor[(104), float64], Tensor[(624), float64]) */
}

def @func_14081() -> (Tensor[(147, 169), float32], Tensor[(13, 6, 2), float64]) {
  @func_14079() /* ty=(Tensor[(147, 169), float32], Tensor[(13, 6, 2), float64]) */
}

def @func_11457() -> Tensor[(13, 6, 2), float64] {
  %1457 = fn () -> Tensor[(13, 6, 2), float64] {
    %1456 = @func_9123() /* ty=(Tensor[(12, 2, ?), int32], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64]) */;
    %1456.3
  };
  %1457() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_3904() -> Tensor[(13, 6, 2), float64] {
  %1458 = fn () -> Tensor[(13, 6, 2), float64] {
    @func_3437() /* ty=Tensor[(13, 6, 2), float64] */
  };
  %1458() /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_7143() -> (Tensor[(13, 6, 2), float64],) {
  %1459 = @func_4802() /* ty=(Tensor[(13, 6, 2), float64],) */;
  %1460 = %1459.0;
  (%1460,)
}

def @func_2937() -> Tensor[(13, 6, 2), float64] {
  %1461 = cast(meta[relay.Constant][97] /* ty=Tensor[(13, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  acos(%1461) /* ty=Tensor[(13, 6, 2), float64] */
}

def @func_4479() -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) {
  %1482 = fn () -> (Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) {
    %1462 = @func_4396() /* ty=(Tensor[(13, 6, 2), float64],) */;
    %1463 = cast(meta[relay.Constant][98] /* ty=Tensor[(1, 1755), float32] */, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
    %1464 = reshape(%1463, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
    %1465 = @func_1102(%1464) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(13, 15, 9), float32]) */;
    %1466 = %1465.0;
    %1467 = cast(%1466, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
    %1468 = shape_of(meta[relay.Constant][98] /* ty=Tensor[(1, 1755), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1469 = cast(meta[relay.Constant][98] /* ty=Tensor[(1, 1755), float32] */, dtype="bool") /* ty=Tensor[(1, 1755), bool] */;
    %1470 = dyn.reshape(%1467, %1468, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1471 = less_equal(%1469, %1470) /* ty=Tensor[(?, 1755), bool] */;
    %1472 = cast(%1471, dtype="float32") /* ty=Tensor[(?, 1755), float32] */;
    %1473 = reshape(%1472, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %1474 = @func_4413(%1473) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(13, 15, 9), float32], Tensor[(1755), float32]) */;
    %1475 = cast(%1466, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %1476 = exp(%1475) /* ty=Tensor[(13, 15, 9), float64] */;
    %1477 = cast(%1476, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %1478 = @func_3190() /* ty=Tensor[(13, 6, 2), float64] */;
    %1479 = %1462.0;
    %1480 = %1474.3;
    %1481 = sqrt(%1477) /* ty=Tensor[(13, 15, 9), float32] */;
    (%1478, %1479, %1471, %1480, %1481)
  };
  %1482() /* ty=(Tensor[(13, 6, 2), float64], Tensor[(13, 6, 2), float64], Tensor[(?, 1755), bool], Tensor[(1755), float32], Tensor[(13, 15, 9), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen695/build/output.py:4291: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen695/build/output.py", line 4296, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_divide_kernel0(float* __restrict__ T_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1050) {
    T_divide[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] / placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


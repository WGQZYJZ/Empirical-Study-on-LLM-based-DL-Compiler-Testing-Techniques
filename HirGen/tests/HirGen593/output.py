import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_5 = relay.var("var_5", dtype = "float64", shape = (11, 5, 6))#candidate|5|(11, 5, 6)|var|float64
uop_6 = relay.log(var_5.astype('float64')) # shape=(11, 5, 6)
uop_17 = relay.acosh(uop_6.astype('float32')) # shape=(11, 5, 6)
uop_26 = relay.acos(uop_17.astype('float32')) # shape=(11, 5, 6)
bop_52 = relay.logical_or(uop_26.astype('bool'), relay.reshape(uop_17.astype('bool'), relay.shape_of(uop_26))) # shape=(11, 5, 6)
bop_74 = relay.maximum(uop_26.astype('uint32'), relay.reshape(uop_6.astype('uint32'), relay.shape_of(uop_26))) # shape=(11, 5, 6)
uop_81 = relay.cos(uop_17.astype('float64')) # shape=(11, 5, 6)
uop_109 = relay.sigmoid(uop_81.astype('float32')) # shape=(11, 5, 6)
output = relay.Tuple([bop_52,bop_74,uop_109,])
output2 = relay.Tuple([bop_52,bop_74,uop_109,])
func_146 = relay.Function([var_5,], output)
mod['func_146'] = func_146
mod = relay.transform.InferType()(mod)
var_147 = relay.var("var_147", dtype = "float64", shape = (11, 5, 6))#candidate|147|(11, 5, 6)|var|float64
output = func_146(var_147)
func_148 = relay.Function([var_147], output)
mutated_mod['func_148'] = func_148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_202 = relay.var("var_202", dtype = "float32", shape = (2, 14, 7))#candidate|202|(2, 14, 7)|var|float32
uop_203 = relay.sqrt(var_202.astype('float32')) # shape=(2, 14, 7)
output = relay.Tuple([uop_203,])
output2 = relay.Tuple([uop_203,])
func_205 = relay.Function([var_202,], output)
mod['func_205'] = func_205
mod = relay.transform.InferType()(mod)
mutated_mod['func_205'] = func_205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_206 = relay.var("var_206", dtype = "float32", shape = (2, 14, 7))#candidate|206|(2, 14, 7)|var|float32
func_205_call = mutated_mod.get_global_var('func_205')
call_207 = func_205_call(var_206)
output = call_207
func_208 = relay.Function([var_206], output)
mutated_mod['func_208'] = func_208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_330 = relay.var("var_330", dtype = "float32", shape = (13, 10, 14))#candidate|330|(13, 10, 14)|var|float32
var_331 = relay.var("var_331", dtype = "float32", shape = (13, 10, 14))#candidate|331|(13, 10, 14)|var|float32
bop_332 = relay.floor_divide(var_330.astype('float32'), relay.reshape(var_331.astype('float32'), relay.shape_of(var_330))) # shape=(13, 10, 14)
output = bop_332
output2 = bop_332
func_336 = relay.Function([var_330,var_331,], output)
mod['func_336'] = func_336
mod = relay.transform.InferType()(mod)
mutated_mod['func_336'] = func_336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_336_call = mutated_mod.get_global_var('func_336')
var_338 = relay.var("var_338", dtype = "float32", shape = (13, 10, 14))#candidate|338|(13, 10, 14)|var|float32
var_339 = relay.var("var_339", dtype = "float32", shape = (13, 10, 14))#candidate|339|(13, 10, 14)|var|float32
call_337 = func_336_call(var_338,var_339,)
output = call_337
func_340 = relay.Function([var_338,var_339,], output)
mutated_mod['func_340'] = func_340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_375 = relay.var("var_375", dtype = "float64", shape = (5, 2, 3))#candidate|375|(5, 2, 3)|var|float64
uop_376 = relay.rsqrt(var_375.astype('float64')) # shape=(5, 2, 3)
output = relay.Tuple([uop_376,])
output2 = relay.Tuple([uop_376,])
func_383 = relay.Function([var_375,], output)
mod['func_383'] = func_383
mod = relay.transform.InferType()(mod)
var_384 = relay.var("var_384", dtype = "float64", shape = (5, 2, 3))#candidate|384|(5, 2, 3)|var|float64
output = func_383(var_384)
func_385 = relay.Function([var_384], output)
mutated_mod['func_385'] = func_385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_431 = relay.var("var_431", dtype = "uint32", shape = (9, 6, 14))#candidate|431|(9, 6, 14)|var|uint32
var_432 = relay.var("var_432", dtype = "uint32", shape = (9, 6, 14))#candidate|432|(9, 6, 14)|var|uint32
bop_433 = relay.equal(var_431.astype('bool'), relay.reshape(var_432.astype('bool'), relay.shape_of(var_431))) # shape=(9, 6, 14)
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
const_446 = relay.const([[2.613046],[5.780688],[-6.891653],[-2.584006],[-1.862968],[-2.076626],[-3.712942],[3.200755],[9.466295],[-6.947309],[-0.323687],[3.287636],[-1.733041],[-7.634158],[8.831254],[1.490627],[-7.949188],[4.295357],[-9.353757],[-4.633942],[3.714793],[-5.745629],[-8.148188],[-5.172432],[4.963494],[-9.042309],[-2.115031],[5.493699],[3.108271],[7.971328],[-3.519707],[8.459265],[-7.315019],[4.336252],[-0.913789],[9.064347],[6.757852],[-7.596600],[-9.978117],[6.085529],[6.875808],[4.257332],[-6.242522],[-9.547704],[4.479517],[-5.447808],[2.477020],[-5.159756],[-6.772764],[-5.783991],[1.424135],[-2.949020],[-4.919081],[-7.849764],[-6.953282],[-3.437942],[-6.898973],[7.661256],[0.649665],[-5.666697],[8.783287],[-8.533082],[-8.276290],[-6.899220],[4.141085],[7.604645],[8.878462],[0.847476],[-0.539551],[-3.391471],[9.947318],[6.951505],[-3.191404],[-3.225046],[-9.420454],[-5.264289],[8.321364],[-2.412086],[3.477272],[-8.689626],[-1.499901],[-1.773488],[-1.489102],[1.458526],[3.933190],[8.790078],[-4.289376],[-3.220276],[1.418085],[-8.697382],[7.587994],[2.861354],[-6.694778],[-2.550991],[4.076320],[-2.798619],[0.198996],[3.051480],[-3.972984],[-0.629687],[-9.812266],[-0.838154],[-6.977499],[4.054680],[-0.691332],[-1.036067],[0.844186],[-5.390193],[2.896554],[4.654568],[-0.227344],[-6.249144],[-5.507916],[1.930977],[-9.054182],[9.940417],[2.895504],[-9.109369],[-2.398783],[9.453135],[9.322123],[4.359636],[4.499718],[-3.145935],[-5.567182],[7.517182],[6.106278],[-1.604334],[3.378670],[-9.052424],[-2.449776],[-8.731998],[-6.164410],[0.839896],[4.749231],[2.524733],[-9.356944],[4.007342],[-6.082637],[5.714524],[4.774554],[5.822379],[-3.887711],[5.226811],[1.862747],[-0.651354],[2.997621],[2.714625],[6.469710],[-8.388822],[4.477853],[5.145690],[-6.806681],[-4.399204],[9.361529],[-2.842953],[-6.498615],[6.340863],[2.573114],[2.983489],[3.458312],[-4.192627],[-6.576244],[-3.582625],[5.146157],[-0.905542],[-0.179499],[-4.750380],[-7.337752],[9.276385],[-2.496772],[7.932358],[-7.457452],[-7.704294],[0.729075],[-7.036287],[1.871215],[7.233260],[7.848784],[8.867153],[-6.136473],[0.296907],[2.379461],[-0.359233],[-0.686837],[8.524639],[7.703697],[-2.268940],[-7.758020],[4.085615],[-4.749736],[-7.206205],[7.137015],[5.056937],[6.574603],[0.810156],[0.928470],[-8.497958],[-2.964656],[-4.924901],[-8.110341],[-5.038257],[-4.069480],[0.524214],[6.056901],[-7.802860],[5.647384],[4.569667],[-9.921579],[4.619496],[2.600651],[-8.871837],[1.794974],[6.934351],[5.990617],[1.414993],[-4.426006],[0.038670],[-8.751913],[6.383560],[1.019527],[6.456765],[-8.729327],[1.479601],[9.874177],[-2.236853],[5.481354],[7.814523],[8.487243],[0.897395],[1.222878],[-7.573269],[-5.263815],[-1.324366],[7.376564],[-5.828111],[-9.590314],[1.796226],[-8.325637],[9.042409],[9.116356],[-0.057319],[-5.363397],[2.852936],[-5.325095],[-4.410718],[9.856198],[5.139387],[-9.654484],[-4.826328],[6.723958],[5.547336],[-6.000458],[-3.649289],[8.880852],[8.056016],[8.882901],[-1.792864],[6.332587],[4.779120],[-6.695671],[6.999394],[1.712568],[7.285060],[0.091166],[0.688095],[-2.287165],[-5.431744],[6.627172],[8.101383],[-2.733961],[3.221624],[-2.523828],[-6.999018],[6.740570],[9.095845],[9.253558],[-9.445106],[-3.470128],[7.243167],[0.265198],[-8.352194],[0.515523],[1.176827],[-6.936441],[4.255556],[0.928803],[-8.247029],[-5.294514],[8.887743],[5.618111],[2.429869],[-7.130447],[8.804924],[3.647370],[-4.821263],[8.158369],[-1.858932],[7.025727],[9.720175],[-3.916945],[-7.439758],[1.390842],[1.738534],[6.283480],[0.349380],[-7.441358],[-8.317348],[-9.691706],[6.569520],[-2.910607],[3.410909],[-0.730271],[-8.947388],[4.012593],[1.281023],[-1.207494],[9.164716],[4.427452],[-6.482767],[3.308554],[3.798717],[-8.958945],[-4.212113],[8.125704],[5.516439],[7.090709],[8.483313],[-7.584905],[0.843655],[0.048917],[-8.566056],[4.586428],[6.931740],[-5.070240],[1.344124],[5.266041],[0.752699],[-8.233518],[3.920648],[8.876602],[0.615912],[8.197081],[4.883026],[-9.061640],[2.173737],[5.525518],[-2.250295],[2.565160],[7.389581],[4.196442],[7.919409],[0.179625],[-2.881625],[5.781586],[5.983403],[-0.568012],[7.526363],[7.967282],[-6.693584],[-1.363686],[3.128436],[3.881731],[-6.201908],[4.098775],[-9.561733],[-7.492295],[-0.575098],[1.068045],[-1.194343],[-2.799660],[7.555100],[-5.072607],[-6.248760],[0.691280],[-2.488340],[-2.913808],[-0.398331],[7.319137],[-0.765378],[-1.895816],[2.589871],[-5.747898],[1.736297],[-1.868422],[-9.317498],[7.146646],[-7.143807],[1.099200],[-2.455288],[2.922259],[-1.285331],[-3.838333],[8.497911],[4.188338],[5.942811],[-4.447084],[-9.596517],[-1.052814],[-0.114687],[3.260256],[1.016397],[5.141768],[7.990923],[-4.609472],[5.185684],[-2.014873],[4.502437],[-7.542182],[-4.479513],[-7.011434],[-6.837601],[-5.577204],[1.633750],[-5.931358],[9.111815],[7.080670],[-1.888983],[-1.013369],[8.861910],[1.178855],[-8.651604],[-7.006171],[6.714964],[-4.815510],[-8.677277],[9.848489],[-0.739212],[8.264029],[-8.169613],[2.864800],[-9.817049],[-9.932970],[3.726447],[-2.880660],[0.513112],[-7.778939],[3.015310],[4.753880],[8.707888],[-3.689041],[-8.323673],[-6.829623],[4.658424],[-8.489903],[4.721023],[1.117532],[-4.006859],[0.902115],[7.317867],[-0.114420],[8.882224],[-9.842604],[4.178380],[8.748632],[-5.232242],[-6.137380],[3.656467],[5.822791],[8.675998],[-1.678100],[3.854969],[-3.117852],[4.612618],[-1.527974],[1.958296],[2.248437],[8.734688],[0.877719],[6.718499],[4.682416],[-8.077205],[-4.418762],[6.396815],[-5.633555],[-7.309602],[4.080983],[-5.614090],[9.624943],[8.381869],[-4.645228],[6.240531],[-5.472463],[-2.550752],[8.357534],[-6.241884],[4.977879],[5.453970],[4.411605],[6.940093],[1.034644],[-3.380535],[9.191824],[-7.853680],[7.939265],[-8.011843],[-1.310680],[0.131168],[-0.858264],[-6.025760],[-3.931944],[8.720646],[3.895165],[2.406028],[6.564449],[-3.206673],[-3.897964],[2.893391],[2.497032],[3.412075],[-8.661489],[6.556268],[0.103209],[3.760417],[-9.882990],[0.419185],[-1.793300],[-2.180841],[6.944895],[-2.823651],[-7.045826],[2.601404],[-9.281345],[-1.287687],[-2.665954],[-2.456069],[-3.906468],[0.058936],[-3.091877],[1.534321],[-2.521037],[5.959513],[3.508851],[-2.134863],[-8.413954],[9.749346],[5.721968],[8.415607],[-3.344002],[-7.560433],[8.953074],[9.654924],[-3.776791],[8.330344],[9.972867],[2.357460],[-8.725304],[-5.736555],[-5.478213],[-2.782849],[-2.785933],[0.357761],[8.056236],[9.053738],[-4.141549],[-3.271171],[-4.520282],[1.613727],[2.476190],[6.084637],[-6.364306],[-9.059787],[-0.579855],[-1.679283],[-2.666213],[7.060765],[5.271637],[-7.729873],[1.850331],[-7.272499],[7.147826],[-0.762057],[-2.633845],[-0.417280],[-4.103205],[-6.092799],[-2.338440],[1.077596],[6.831880],[2.175253],[7.996381],[-5.202610],[0.813176],[6.845611],[-3.581645],[7.911486],[-7.896954],[8.179694],[0.834441],[-0.948822],[-2.885162],[-2.334601],[-7.481890],[2.018473],[-4.267093],[1.297088],[2.854701],[-1.074125],[-2.017124],[7.491642],[1.380798],[7.606839],[-1.638740],[-8.700517],[-1.703148],[-4.712654],[9.455004],[-6.533326],[-6.007300],[0.509453],[-0.785646],[-6.347486],[1.341455],[6.923319],[-8.167550],[-4.184428],[2.840107],[-5.953223],[3.035221],[6.861854],[7.780052],[-3.469554],[3.913718],[-3.577449],[-3.291447],[-3.730586],[-3.601845],[-3.702270],[7.123114],[-4.293058],[-9.582453],[1.282695],[-2.085151],[-7.136636],[-2.525688],[5.081169],[8.042830],[-9.381334],[-0.949328],[-7.843206],[-1.579309],[-6.114135],[-4.816373],[-2.680018],[-6.317441],[1.262363],[-5.159166],[-6.499393],[-8.871038],[-6.898340],[-3.824961],[7.258550],[1.624795],[-4.644281],[-4.417579],[-2.942639],[2.424214],[-2.072457],[5.637462],[9.704320],[6.372878],[-1.687748],[9.896555],[-0.166837],[1.411033],[-5.350638],[-8.047909],[4.228315],[2.222078],[-5.353537],[4.457519],[3.276332],[7.627526],[-1.654828],[-3.560597],[-8.749206],[-8.617436],[8.369057],[6.750931],[-5.866717],[-7.060905],[-0.398426],[-6.383624],[-6.990143],[-3.616084],[3.346786],[6.671263],[-5.343244],[-9.190288],[1.412196],[9.039462],[-1.692382],[3.951775],[6.807864],[9.183376],[9.784039],[2.602186],[9.773415],[-6.640574],[7.160125],[-6.018174],[-8.820321],[0.323551],[-6.138670],[7.848336],[1.107673],[0.819329],[-5.407898],[4.339286],[0.349508],[2.437625],[6.806300],[-7.844103],[-2.024461],[-5.193329],[7.577881],[2.211304],[3.989220],[4.158179],[-3.817228],[5.867730],[0.340527],[-5.095063],[1.796166],[8.086943],[-1.352734],[-9.287181],[1.664369],[-6.994560],[0.780528],[-0.612572],[9.612523],[-6.263113],[-6.686652],[-1.016056],[-4.585386],[-3.433874],[-4.598205],[7.374983],[9.671344],[-1.810728],[-0.212104],[9.446725],[-5.392865],[9.080866],[-8.174916],[-6.324767],[6.873965],[-3.439322],[-3.060065],[4.921859],[4.751127],[-6.561938],[-1.074953],[5.432335],[7.858414],[3.892965],[-3.739164],[2.739088],[3.272670],[-5.072862],[-1.054543],[5.608955],[4.274989],[-5.346201],[0.700174],[-3.771905],[9.710369],[-6.742744],[6.268748],[7.872924],[-7.939430],[-3.047791],[2.110537],[7.074417],[-9.709973],[1.113906],[-2.214641],[2.467468],[-6.804595],[-2.841112],[1.163247],[-2.831811],[6.017052],[-2.971304],[5.158746],[0.869709],[-4.884767],[-2.814492],[-3.833032],[-2.235961],[-7.509390],[4.649087],[3.364669],[-0.704680],[-0.062430],[5.228111],[-0.823782],[9.357722],[-9.829176],[-7.502640],[9.301739],[7.048892],[5.988087],[-8.497433],[7.875298],[-0.422672],[-6.521628],[6.586552],[-7.186025],[2.070594],[-6.729772],[-6.918871],[9.364854],[-6.598045],[7.252942],[6.467739],[0.249904],[7.773025],[-9.984219],[-2.865513],[-5.511877],[8.199684],[-7.496425],[-1.233952],[3.804268],[-0.902320],[-0.298773],[-0.077582],[-2.565651],[-3.350016],[6.610175],[-8.737918],[-1.579343],[4.259985],[9.314780],[1.072829],[-3.640831],[-8.113057],[5.082043],[-7.082885],[6.568632],[-3.822437],[8.569844],[6.646961],[7.098719],[-7.815409],[7.050197],[5.196639],[-0.740578],[-5.296584],[-3.361312],[9.528464],[3.286859],[-6.339339],[0.377670],[3.118344],[3.770539],[-9.212820],[-6.240696],[-0.885598],[4.373460],[-3.242350],[3.681120],[2.622712],[-9.000101],[-4.356343],[3.879321],[5.823481],[7.848825],[4.282590],[-9.580443],[1.378382],[-9.847179],[0.237444],[4.734111],[-5.046168],[-8.042385],[6.622878],[3.795120],[7.263880],[2.172032],[-0.798163],[6.997035],[7.783285],[1.794995],[4.569590],[9.179393],[4.569028],[8.791407],[-8.249826],[-8.059799],[8.890550],[2.173365],[7.871644],[5.861280],[-4.446241],[-9.746521],[5.972753],[-8.311703],[-4.739545],[8.573696],[-9.361399],[3.922723],[-2.657952],[-9.842779],[8.489641],[-3.316776],[2.191165],[-3.251795],[-1.970515],[5.674526],[-4.283656],[9.950307],[6.291884],[-8.937466],[-4.204478],[-6.917144],[-2.596287],[-6.739344],[-4.834336],[9.794537],[-1.357045],[-0.334450],[7.686172],[-6.286666],[0.595410],[-2.898691],[1.782095],[2.687471],[9.696033],[-2.380089],[-9.402508],[-0.718359],[-0.874782],[7.196329],[2.326723],[0.006522],[-7.642324],[0.692728],[-7.129018],[0.684501],[0.258991],[6.828946],[-5.712259],[-6.008462],[-6.824470],[1.559379],[2.238156],[7.243908],[-0.444210],[-3.098347],[8.681352],[4.587642],[4.280903],[0.121940],[-2.656607],[5.384606],[-4.815951],[-7.007362],[-3.073513],[-9.924811],[-2.228325],[1.083199],[-4.705791],[3.636706],[4.467523],[-8.636998],[2.953396],[6.731665],[7.781312],[-7.798716],[4.698418],[8.087227],[-6.500499],[-3.065256],[-1.342914],[7.929761],[-3.880362],[-8.760458],[2.504761],[-7.251044],[7.546700],[9.019758],[-8.249774],[-8.694026],[4.049117],[-0.446381],[-5.208813],[-2.163723],[7.857438],[6.724168],[-1.019671],[-5.836702],[2.272100],[5.072776],[9.064345],[-7.520742],[-1.159264],[6.021143],[-0.211537],[-7.041096],[3.040551],[-6.253567],[0.559387],[-7.011080],[-8.903569],[-8.936500],[4.879452],[8.535351],[-9.481233],[5.505168],[-0.553746],[-4.743968],[-6.222961],[-0.847005],[8.151820],[-7.740061],[6.293605],[5.992419],[-6.042069],[5.452323],[6.577632],[5.108696],[0.137721],[-1.120225],[6.956069],[0.178537],[1.060449],[-9.676218],[4.504308],[-0.483640],[-2.897898],[2.381939],[5.581175],[-6.481724],[5.589946],[-3.039394],[1.630810],[7.453131],[0.078366],[-0.885902],[5.477606],[-4.530677],[-2.868421],[-7.814244],[0.451269],[-1.576955],[-2.408170],[6.363738],[-0.516532],[5.022499],[-3.023075],[0.584011],[2.421218],[-0.376763],[-6.899293],[2.911953],[-3.107119],[-3.604893],[-3.807584],[-4.579438],[9.778883],[6.628622],[5.597028],[7.020258],[-9.378916],[6.161602],[4.870696],[5.324218],[9.036464],[5.168511],[-0.495293],[4.672064],[-4.365766],[9.855663],[7.291451],[3.641922],[2.494052],[-2.466671],[0.713521],[-0.122366],[-8.500630],[-8.908546],[-3.527312],[-7.164854],[7.795080],[0.117105],[-5.386154],[-1.953511],[-0.039757],[2.337259],[-2.359574],[-7.214241],[-0.237787],[-7.906930],[6.934638],[2.497998],[-2.900428],[0.090958],[7.107225],[-1.496650],[2.158004],[4.361225],[-8.938340],[-2.556157],[6.605118],[-6.583383],[-8.754146],[7.061871],[5.602187],[1.153197],[8.936952],[-8.069086],[-1.651088],[-0.829002],[2.772688],[7.298674],[8.705358],[-5.377147],[-7.211112],[-0.280748],[9.197477],[7.780258],[-2.264976],[-3.697195],[-7.428626],[-6.959376],[-3.936819],[3.379085],[-2.361176],[1.879329],[-3.516090],[-5.756800],[7.528247],[-3.417689],[5.632898],[0.676973],[2.300110],[0.510186],[-0.483370],[-8.988273],[0.367295],[-4.605682],[5.143193],[-5.561058],[1.714173],[-7.434071],[-9.196227],[3.598764],[4.535274],[-8.958359],[7.692027],[6.463939],[-9.067784],[-5.155232],[-7.758828],[-4.488076],[0.863853],[-8.103454],[-3.216658],[-9.861432],[-9.774749],[-0.089933],[5.672865],[-7.324066],[4.605808],[7.524878],[-3.828134],[0.874548],[0.093697],[5.607033],[-6.734915],[9.682517],[-9.951004],[2.282951],[7.213369],[5.277506],[-9.537803],[-3.571135],[1.208216],[-3.955920],[3.600156],[8.433037],[0.756932],[4.383208],[-0.837413],[-1.865523],[-0.891361],[-8.634668],[3.190236],[5.943493],[1.445806],[-1.239899],[-5.606117],[9.573300],[4.362445],[-2.252218],[-2.743928],[8.183118],[8.583808],[-8.950497],[8.195877],[-4.328153],[9.738125],[2.700160],[-5.945922],[6.507689],[5.455024],[6.169911],[-5.300633],[2.948078],[8.965655],[0.555819],[-5.144960],[5.537826],[8.661700],[1.126046],[-5.172672],[-9.687063],[8.297867],[6.795486],[-6.055243],[7.752141],[-4.877856],[-8.969351],[-0.436471],[3.635262],[6.278443],[2.633734],[0.105857],[5.220324],[-9.593228],[4.486323],[7.535599],[-3.396622],[8.322874],[-4.504547],[-4.828606],[8.877223],[9.231370],[-9.738981],[-5.894337],[9.715328],[-3.336242],[9.701961],[0.481129],[-8.986491],[8.652595],[-6.442280],[8.622291],[1.482507],[-8.679464],[-2.791060],[-0.974120],[-2.264741],[2.059170],[1.911101],[-8.134750],[-3.329323],[8.586206],[-3.264920],[-2.667163],[-6.303646],[-7.387600],[-6.015281],[-8.273641],[9.440845],[-2.192343],[9.088030],[2.013885],[-8.125064],[-2.118677],[-2.110802],[-6.705845],[7.412147],[-8.699679],[-8.149698],[-2.565687],[8.893711],[5.428625],[-7.247979],[0.431275],[6.322028],[-2.037220],[-2.289656],[-1.515698],[-8.686417],[-9.784596],[7.985275],[5.962678],[-5.961729],[-7.182805],[8.645846],[-3.814082],[3.825036],[-1.877689],[6.844497],[3.781319],[9.119306],[9.443250],[-7.117607],[-4.033232],[6.340858],[0.796320],[1.646676],[1.975864],[7.283722],[-9.680877],[4.157767],[3.260892],[6.544963],[-6.766702],[8.188469],[9.591215],[8.780809],[7.263038],[-7.057045],[0.719690],[-1.316591],[-4.156189],[5.595172],[-8.795258],[4.697178],[3.295586],[3.103651],[8.657605],[9.565025],[9.105507],[-8.493979],[9.177782],[2.899888],[8.441193],[2.423625],[4.534415],[1.392144],[7.556372],[-7.897924],[3.816980],[6.941526],[-5.910543],[7.563968],[4.399103],[7.418752],[-8.699882],[7.081140],[-0.759331],[-6.555720],[-6.589684],[-9.863061],[5.692687],[7.347004],[-8.331381],[-2.795102],[3.959238],[2.210817],[-9.038146],[1.578694],[7.722532],[-8.652382],[-1.404800],[8.897148],[3.640088],[-7.151579],[5.462573],[4.732974],[9.124696],[-1.070656],[-3.849999],[0.348727],[-8.948144],[0.974094],[-4.316318],[-2.381933],[-6.257296],[8.073712],[-7.427688],[1.584645],[-4.729086],[7.288644],[-6.898340],[-3.347714],[8.422278],[7.480747],[-5.153500],[9.420321],[5.382348],[4.576533],[2.799081],[7.123367],[0.361743],[9.642194],[-1.226297],[5.708028],[-6.504402],[-3.565945],[3.108990],[-6.192792],[6.811131],[6.040777],[1.235095],[-9.053803],[2.358911],[-8.649383],[6.143316],[-8.254389],[-0.280092],[-6.780792],[-0.459836],[2.506477],[-2.442775],[8.490539],[-8.361850],[-7.042490],[-7.869561],[6.245656],[-6.166116],[-3.672435],[-3.462218],[4.322398],[5.701535],[-7.931863],[0.354203],[-8.062980],[-1.804919],[-0.686263],[9.848169],[-6.911764],[-8.414655],[-6.771813],[-1.454192],[-7.597814],[3.241416],[0.998381],[6.563731],[-6.715011],[-0.007802],[-2.346525],[5.437853],[-4.468756],[-5.926190],[5.480171],[-0.055730],[0.126170],[-7.540240],[5.352495],[-6.744662],[-6.362235],[5.377117],[6.953810],[-1.216735],[5.631463],[-7.679561],[-6.524663],[-2.644499],[1.755871],[3.342514],[-7.514698],[-5.741508],[-5.985645],[8.963235],[-1.700608],[1.532075],[-0.184399],[-2.807123],[0.261870],[6.471749],[0.342272],[-5.187482],[7.298961],[-0.982559],[8.405328],[9.708342],[-0.386757],[-2.353249],[9.728964],[-7.237357],[5.054039],[-8.751302],[-0.389763],[4.500764],[7.373219],[-7.703331],[-4.062411],[-8.436270],[9.611663],[-4.699444],[-5.705449],[2.981303],[5.957794],[-6.094668],[2.956282],[-9.527751],[-0.728872],[-0.135534],[4.521308],[6.593553],[-8.283866],[-2.878654],[-2.605465],[5.699191],[0.835457],[2.594099],[7.200095],[-5.426735],[-5.085494],[1.393981],[-7.297825],[-9.401829],[-6.948097],[3.275541],[-3.763904],[-5.286551],[9.237975],[1.089551],[5.306769],[0.623614],[-2.743478],[1.501052],[5.022444],[-5.740737],[-4.528092],[-7.931769],[-2.752516],[6.820705],[1.737036],[-6.461716],[2.475675],[6.550151],[9.973130],[7.478916],[8.528505],[-5.632597],[9.994629],[8.644686],[1.119802],[-4.333010],[-0.718241],[-2.754031],[1.097445],[7.128917],[2.745679],[-8.500277],[3.320083],[4.347550],[-7.921024],[6.055075],[8.989766],[2.908096],[7.314083],[-8.260277],[-8.339599],[-6.222945],[1.828467],[9.152230],[6.564874],[0.431795],[6.492723],[3.242724],[4.259812],[2.026091],[1.267689],[2.436327],[-6.244166],[9.111096],[-8.108364],[0.758231],[-7.306460],[1.118921],[-0.123612],[-6.106447],[5.593862],[-1.260180],[6.537050],[5.040880],[-6.438968],[-1.085473],[-9.263057],[5.671799],[-5.342228],[-7.002975],[-0.629822],[-5.142167],[-3.247768],[-9.260982],[-3.182788],[-0.693238],[-6.610063],[-2.105184],[-0.569592],[0.603058],[9.397660],[3.003344],[0.427066],[-0.551976],[9.098444],[-2.134162],[-4.295778],[5.953198],[-9.230181],[-1.596678],[-7.343468],[4.425426],[2.073019],[2.165663],[3.306603],[6.290818],[-3.613981],[-5.620194],[9.010007],[-1.819748],[-9.128483],[-5.371524],[1.304158],[8.278507],[9.444969],[-0.113216],[-6.490935],[-3.073335],[-8.471002],[4.446829],[-9.969323],[-2.854130],[1.558044],[0.700329],[5.826533],[-6.424259],[-8.699635],[2.329195],[-5.334851],[-8.255987],[-5.460281],[2.658354],[-4.854384],[-2.529166],[7.984723],[-5.727318],[-4.303829],[2.095571],[-2.734259],[-0.852547],[-5.985710],[8.533272],[1.515024],[-5.575414],[6.746592],[1.024308],[1.294238],[-2.069509],[2.281074],[-0.395585],[-5.144410],[-7.816986],[2.646926],[1.535300],[-5.574242],[-6.987433],[-5.831100],[-0.783373],[-7.387606],[0.939367],[7.443829],[6.984721],[6.115254],[-4.228700],[-9.730379],[-9.428271],[5.851918],[-7.270944],[-1.050833],[-9.587411],[8.991875],[5.567375],[-9.514601],[-3.341132],[-7.874807],[-7.391749],[-6.994448],[-1.338983],[5.180934],[-0.837854],[-5.711537],[3.644512],[-4.692817],[-9.131374],[0.857725],[8.720077],[2.063370],[-8.645636],[-4.520782],[-2.557154],[-2.715502],[-8.057818],[-8.274813],[-8.785157],[1.314408],[-2.178222],[2.469676],[-5.590421],[0.971063],[-4.277846],[6.417684],[5.889073],[-4.989823],[1.254114],[-8.314613],[9.498794],[-5.527742],[-9.290731],[7.240291],[8.120539],[3.372626],[-4.028925],[5.185231],[-8.012445],[4.778247],[5.946609],[9.195961],[-1.699145],[-4.646761],[-0.691628],[3.445700],[9.355023],[-3.026056],[4.579181],[-1.469168],[-4.677049],[-2.629699],[7.171747],[5.179678],[-3.474955],[-7.596609],[-7.975376],[-5.607486],[-1.075359],[-8.133109],[-4.106280],[-6.177374],[7.861987],[7.603215],[-5.150686],[0.662057],[9.992065],[0.565377],[2.188553],[1.407901],[-1.731784],[3.570554],[8.115185],[6.893962],[-9.719337],[-9.866072],[1.346249],[-5.035846],[6.744135],[6.930272],[-2.633563],[5.132651],[-9.803585],[-7.911180],[6.351035],[9.628115],[9.364755],[-5.718602],[2.705026],[-5.261231],[7.072766],[-7.983738],[-3.588647],[-5.427510],[-5.653581],[8.818548],[-2.256227],[-1.281293],[-5.359437],[2.319615],[-1.019997],[5.423766],[9.036907],[-9.795439],[5.192405],[6.920754],[-6.790716],[0.168906],[-6.352544],[-8.380902],[-3.082738],[7.206931],[-4.970277],[0.178823],[-0.404613],[0.205159],[-8.657462],[3.786893],[-3.349889],[-2.169003],[-9.878391],[4.889087],[6.725459],[4.890596],[-2.250604],[-8.850767],[-7.661111],[6.815361],[7.697026],[0.283112],[2.200114],[1.384003],[1.149236],[-4.301188],[-0.272078],[9.973147],[-5.499072],[5.395979],[7.304158],[3.708174],[7.770142],[-5.658233],[-0.178709],[-9.334784]], dtype = "float32")#candidate|446|(1820, 1)|const|float32
call_445 = func_336_call(relay.reshape(const_446.astype('float32'), [13, 10, 14]), relay.reshape(const_446.astype('float32'), [13, 10, 14]), )
call_447 = func_336_call(relay.reshape(const_446.astype('float32'), [13, 10, 14]), relay.reshape(const_446.astype('float32'), [13, 10, 14]), )
output = relay.Tuple([bop_433,call_445,const_446,])
output2 = relay.Tuple([bop_433,call_447,const_446,])
func_456 = relay.Function([var_431,var_432,], output)
mod['func_456'] = func_456
mod = relay.transform.InferType()(mod)
mutated_mod['func_456'] = func_456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_456_call = mutated_mod.get_global_var('func_456')
var_458 = relay.var("var_458", dtype = "uint32", shape = (9, 6, 14))#candidate|458|(9, 6, 14)|var|uint32
var_459 = relay.var("var_459", dtype = "uint32", shape = (9, 6, 14))#candidate|459|(9, 6, 14)|var|uint32
call_457 = func_456_call(var_458,var_459,)
output = call_457
func_460 = relay.Function([var_458,var_459,], output)
mutated_mod['func_460'] = func_460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_609 = relay.var("var_609", dtype = "float32", shape = (10, 16, 4))#candidate|609|(10, 16, 4)|var|float32
uop_610 = relay.sqrt(var_609.astype('float32')) # shape=(10, 16, 4)
uop_615 = relay.log(uop_610.astype('float32')) # shape=(10, 16, 4)
uop_622 = relay.log2(uop_615.astype('float32')) # shape=(10, 16, 4)
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
var_630 = relay.var("var_630", dtype = "float64", shape = (30,))#candidate|630|(30,)|var|float64
call_629 = relay.TupleGetItem(func_383_call(relay.reshape(var_630.astype('float64'), [5, 2, 3])), 0)
call_631 = relay.TupleGetItem(func_385_call(relay.reshape(var_630.astype('float64'), [5, 2, 3])), 0)
uop_633 = relay.atanh(uop_610.astype('float32')) # shape=(10, 16, 4)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
const_639 = relay.const([8.395638,-3.561240,7.514483,-3.360822,-9.995116,6.497632,3.173319,7.875321,5.104919,3.849936,-9.847027,1.347904,3.770453,6.645068,7.569879,2.678991,-4.262400,6.787208,1.855704,2.049833,2.465098,-2.631561,-0.520868,-6.234901,-6.604472,-7.191976,2.802767,-9.411224,-5.660227,-3.197009,7.206835,-8.864236,2.854011,8.544248,-7.262995,-5.389551,4.263539,-1.475896,-9.413504,-5.101508,8.732227,5.612896,-0.032836,5.389332,2.132740,-9.386012,8.619108,-6.866164,9.319454,6.747606,8.083231,0.035411,-7.774738,-7.705183,-5.999909,4.204372,-0.567970,9.256122,1.910515,8.277772,-7.634611,7.835427,-3.317001,-4.229223,4.445410,5.827797,6.382636,6.920399,6.742243,-8.114427,-4.033051,1.980861,-3.672933,7.836746,3.185809,-1.605879,4.629992,2.555990,3.649575,9.788140,-6.145715,9.908972,1.494955,1.625865,4.072265,-1.423682,-8.342350,-0.468676,-1.655998,-2.808665,-1.968573,5.040932,-9.148880,6.241586,-2.126613,-7.819957,-8.100265,-7.855858,-3.552068,-2.182538,5.876056,-2.939843,-8.697796,-6.432888,-6.087290,-5.526144,5.276704,-5.043477,-9.178783,-2.689862,-0.973529,3.172045,-6.916512,-5.328640,-3.735378,-1.636479,-5.366308,1.274913,7.237406,1.553123,-8.477000,-3.098978,-7.172420,8.448681,8.391098,6.355185,-5.115346,-1.714758,1.604466,2.456291,4.323509,2.346469,-6.191575,-1.862669,2.922449,-2.986221,1.255645,9.680589,5.068888,-8.646073,-3.487739,0.674607,1.069482,-9.076898,-8.655585,-0.534526,5.523130,7.784994,-0.527823,-6.475495,-7.625482,9.104052,1.294268,3.029791,3.013761,0.166546,8.601580,-2.803164,-0.891497,1.649193,-7.399275,-4.444843,-8.488207,-2.796639,4.050310,-3.987632,0.088980,4.990037,-8.277383,5.721054,6.958683,-4.421189,5.237340,6.967191,2.869134,9.900174,-7.810645,8.514925,2.735466,9.164593,-8.998783,-5.066392,2.834580,2.229031,-1.666644,6.563439,0.644956,6.121845,-5.738268,9.525473,6.068095,4.356435,-3.974380,-7.576181,-7.392214,0.495277,0.135238,-1.910698,6.959986,6.467461,3.742551,1.641998,-1.551705,6.590985,2.208461,-2.038026,6.108804,-0.954715,-0.026474,-1.744410,-9.726582,-6.138504,4.602524,-7.738907,-8.903211,4.181481,-5.379962,-7.418872,4.112422,7.699307,-6.584878,8.643402,-7.888066,-2.055566,2.086074,0.762055,-3.788897,6.401831,4.648344,-0.337223,3.447682,8.616410,9.832571,-8.866839,2.055418,7.711702,3.850715,-6.052332,1.296683,7.240735,9.570652,-6.383290,-9.835376,4.441285,-9.126373,0.585091,8.784065,0.664486,-2.578123,1.368720,-5.911406,-1.755598,-2.212749,1.055457,5.960732,-3.151725,3.277155,-4.103984,-3.334823,6.143895,8.831834,9.080559,8.854130,3.083153,-3.731952,-0.024180,-3.537630,4.246325,6.259418,-0.138058,5.552004,1.772198,4.699431,-1.890889,9.218443,-0.809852,-5.451491,-0.231111,7.347179,3.754738,-7.547311,-1.872207,-7.810412,6.962392,-2.598849,-4.865933,-7.327929,-3.859610,2.651966,-8.549338,5.488995,-6.470083,-1.417505,8.544241,-4.211698,2.311440,-6.703510,7.236184,6.328395,-9.898197,-0.002600,0.454734,-0.700802,1.651943,-7.379238,7.793517,-2.519959,1.665434,-4.378994,-7.306830,-1.309578,8.079535,0.687597,2.235550,-0.040474,-7.983468,1.449641,5.926133,-0.467679,7.287805,-7.024688,-2.337492,-7.710943,3.169734,-6.857855,-1.255812,-8.519399,-8.502929,-0.240331,-7.402586], dtype = "float64")#candidate|639|(330,)|const|float64
call_638 = relay.TupleGetItem(func_146_call(relay.reshape(const_639.astype('float64'), [11, 5, 6])), 2)
call_640 = relay.TupleGetItem(func_148_call(relay.reshape(const_639.astype('float64'), [11, 5, 6])), 2)
uop_646 = relay.asin(uop_622.astype('float64')) # shape=(10, 16, 4)
output = relay.Tuple([call_629,var_630,uop_633,call_638,const_639,uop_646,])
output2 = relay.Tuple([call_631,var_630,uop_633,call_640,const_639,uop_646,])
func_655 = relay.Function([var_609,var_630,], output)
mod['func_655'] = func_655
mod = relay.transform.InferType()(mod)
mutated_mod['func_655'] = func_655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_655_call = mutated_mod.get_global_var('func_655')
var_657 = relay.var("var_657", dtype = "float32", shape = (10, 16, 4))#candidate|657|(10, 16, 4)|var|float32
var_658 = relay.var("var_658", dtype = "float64", shape = (30,))#candidate|658|(30,)|var|float64
call_656 = func_655_call(var_657,var_658,)
output = call_656
func_659 = relay.Function([var_657,var_658,], output)
mutated_mod['func_659'] = func_659
mutated_mod = relay.transform.InferType()(mutated_mod)
const_690 = relay.const([[[True,False,True,False,True,True,True,True,False,False,False,False],[True,True,False,True,False,False,False,True,True,True,True,False]],[[False,False,True,False,True,True,True,False,True,False,False,True],[True,True,False,False,True,True,False,False,False,False,True,False]],[[False,False,True,False,True,False,False,True,False,True,False,True],[False,True,False,False,True,False,True,False,False,True,False,True]],[[False,True,False,False,True,True,False,False,True,True,False,False],[False,False,False,False,True,False,False,False,True,False,False,False]],[[False,True,False,False,False,True,False,True,False,False,True,True],[True,False,True,True,True,True,True,True,True,True,False,True]],[[True,False,True,False,False,True,False,False,False,True,True,False],[False,True,True,False,True,True,True,False,True,True,True,False]],[[False,True,False,False,False,False,True,False,False,False,False,False],[True,True,False,True,False,True,True,False,False,True,False,True]],[[False,True,False,True,False,True,True,True,False,True,True,True],[True,False,True,True,False,True,True,True,False,False,False,False]],[[True,True,False,False,False,False,True,False,False,True,True,False],[True,True,True,True,False,False,False,False,False,True,True,False]],[[True,True,True,True,True,True,False,False,True,False,False,True],[True,False,False,True,True,True,True,False,False,True,False,True]],[[True,False,True,False,False,False,False,True,True,False,False,False],[True,False,True,False,True,True,False,False,True,False,True,True]],[[True,False,True,False,True,True,True,True,False,False,True,False],[False,True,True,False,True,True,False,True,False,True,True,True]],[[True,True,True,False,True,False,True,True,False,True,True,False],[False,False,True,False,False,False,False,False,True,True,False,True]]], dtype = "bool")#candidate|690|(13, 2, 12)|const|bool
var_691 = relay.var("var_691", dtype = "bool", shape = (13, 2, 12))#candidate|691|(13, 2, 12)|var|bool
bop_692 = relay.logical_and(const_690.astype('bool'), relay.reshape(var_691.astype('bool'), relay.shape_of(const_690))) # shape=(13, 2, 12)
uop_698 = relay.atan(var_691.astype('float32')) # shape=(13, 2, 12)
output = relay.Tuple([bop_692,uop_698,])
output2 = relay.Tuple([bop_692,uop_698,])
func_708 = relay.Function([var_691,], output)
mod['func_708'] = func_708
mod = relay.transform.InferType()(mod)
var_709 = relay.var("var_709", dtype = "bool", shape = (13, 2, 12))#candidate|709|(13, 2, 12)|var|bool
output = func_708(var_709)
func_710 = relay.Function([var_709], output)
mutated_mod['func_710'] = func_710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_837 = relay.var("var_837", dtype = "float32", shape = (5, 15, 5))#candidate|837|(5, 15, 5)|var|float32
var_838 = relay.var("var_838", dtype = "float32", shape = (5, 15, 5))#candidate|838|(5, 15, 5)|var|float32
bop_839 = relay.power(var_837.astype('float32'), relay.reshape(var_838.astype('float32'), relay.shape_of(var_837))) # shape=(5, 15, 5)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
const_865 = relay.const([-2.242360,-2.416194,-2.342440,-1.997439,-3.046131,6.919255,5.460146,8.339086,-6.746522,-6.624125,0.261049,8.543405,-8.339752,-0.926310,6.069743,-5.759539,6.664785,9.085678,0.463380,-7.426505,-8.345199,5.796758,6.714284,-6.844050,7.750634,-9.311413,6.518387,2.377895,-8.097514,1.800165,4.474490,7.412665,-0.511460,-1.110718,-7.064677,5.632655,3.975834,-9.322270,8.958857,-2.535410,2.838226,0.616753,3.149156,-5.534174,1.371852,2.170437,-5.364853,3.361574,-7.059597,-3.019506,-9.931684,0.635143,8.652402,9.378286,-2.561861,6.928587,-8.375884,-5.787071,-7.565246,-1.855637,-4.412483,-9.564837,-7.460999,4.459292,3.109329,-3.030192,7.178271,5.183439,0.844031,-5.614098,0.119875,-4.058449,-5.936207,3.363824,3.748141,-0.300234,4.413463,-9.158836,8.394664,-6.232672,-0.646454,-3.025096,7.818881,-1.266466,-7.696520,-0.795042,-5.251383,-7.720115,-6.423380,1.504799,2.093955,0.209232,-7.236495,-8.712651,-3.184352,0.112909,5.741827,-0.311734,6.615418,-9.346965,5.475127,3.880122,5.372176,5.438824,3.100649,8.878403,-5.265693,-4.611968,6.833005,-3.171199,2.936649,-9.507578,-2.195512,1.554018,1.808865,7.694273,9.815854,-5.894327,-0.785387,-5.908155,3.619424,-9.227417,-3.059197,-9.031587,-6.014353,6.061558,-1.571683,-8.986207,1.680846,5.335503,9.623303,0.236021,7.742459,0.783320,3.005641,-4.264019,-1.780802,3.780925,3.423876,-7.075364,-7.402191,5.025210,3.246411,9.644021,-3.937639,1.604647,-9.321682,-4.184023,-7.542800,5.634611,9.968014,-8.621175,9.396798,-1.116453,-9.676507,-4.516085,2.115220,9.496756,1.395303,4.900644,1.006408,-6.369806,0.163637,-3.248577,-4.938428,-9.752078,7.876882,4.139114,-6.765289,1.781205,-8.036216,0.824765,3.616920,-4.635618,-3.131085,-9.179214,-7.813867,9.328337,2.900121,-0.127116,0.838040,0.327052,8.673823,8.002634,6.144968,-5.156908,-7.695511,0.762438,7.841809,3.351891,6.693197,4.972806,-3.634363,0.442773,-6.390593,0.986504,-4.450287,-6.633206,-2.259414,1.129356,-2.531899,0.506036,-8.883860,0.193075,0.536536,6.246546,-0.732756,-7.282454,1.328971,3.932705,0.211335,6.779172,8.898868,-7.679649,-1.611637,5.739878,6.193965,3.297695,8.012952,0.037126,0.217335,5.025756,-8.560504,-7.680672,-7.099424,1.513838,4.562960,2.214936,8.164079,-6.624824,-7.217868,-6.937084,-9.500637,3.835613,-5.372306,-4.145768,2.088969,-0.314134,-9.953643,7.688118,-4.883387,-9.357415,8.940124,-3.643951,2.574039,-8.610868,0.534169,-2.235969,2.538653,2.507254,-6.316831,5.338115,-2.237205,3.439375,0.234010,7.624291,-7.117230,3.228183,9.391836,-3.633209,-1.791311,-8.933692,4.796204,8.337274,-0.191868,4.603110,3.535096,-1.077486,-8.930154,-9.875133,-3.567159,4.750714,6.157989,6.548067,-1.569901,-3.136170,-3.104257,-9.386294,1.258569,-1.934441,5.200781,-6.455972,0.524009,-3.751529,2.112898,2.181493,-0.592083,-7.039858,7.258192,-0.932288,0.219731,-4.323358,-7.379298,6.331465,-9.505851,5.607386,5.628822,-2.470518,9.562141,-8.862349,3.398494,-6.472701,-0.280485,-8.034606,-4.124156,-5.611868,0.206949,-9.617771,3.823784,8.084506,8.907262,2.547705,-9.339020,3.189946,-3.544497,-6.053399,9.930378,8.671325,4.994193,6.312456,4.496002,5.142675,-9.992837,-5.137219,-8.191423,-1.601713,-4.929527,-3.681080,2.170581,-5.061651], dtype = "float64")#candidate|865|(330,)|const|float64
call_864 = relay.TupleGetItem(func_146_call(relay.reshape(const_865.astype('float64'), [11, 5, 6])), 2)
call_866 = relay.TupleGetItem(func_148_call(relay.reshape(const_865.astype('float64'), [11, 5, 6])), 2)
const_870 = relay.const([[[5.573987,-6.277138,-2.322762,5.990035,-7.131523],[-6.125730,5.386746,1.438437,-3.281648,-0.171034],[-9.979319,4.119318,-0.182738,2.683033,0.378155],[9.484096,-0.369188,-2.243912,-8.075617,6.959906],[-7.652574,7.020919,-3.657771,-3.046730,-7.645098],[-5.753688,-7.827649,-2.173639,3.028357,-2.275829],[0.693062,0.644963,3.923741,-5.290917,7.599010],[-7.046433,9.378469,-0.530404,-0.939937,-4.021314],[9.948857,4.081823,-6.568755,-0.280150,-5.431032],[2.581167,6.184297,8.421275,-3.903078,-7.521414],[6.520648,-9.200516,-1.827583,1.116968,6.734993],[-7.049957,-3.932157,8.669384,9.906462,-3.043975],[-5.665783,2.680223,-7.122224,-3.139533,-2.463914],[8.804202,8.888141,7.043807,-8.039261,6.972572],[-9.064833,-5.072084,5.918489,-1.385287,-2.705367]],[[-5.315038,-7.471130,-5.033487,8.501328,3.938213],[8.127991,0.088420,-8.110333,8.801174,0.155912],[8.479299,-7.567366,3.110527,3.776358,-0.844969],[-0.102374,-7.647197,2.801556,-4.548234,8.966310],[-7.840936,-9.955262,8.406028,-9.485387,1.378368],[7.438171,-2.766033,-8.594080,-4.750809,4.263165],[7.164455,2.501299,-8.968949,-1.563140,1.924163],[-3.241123,2.154610,-7.886995,-4.039617,6.077090],[-3.823910,-9.396663,-6.921530,-6.965222,-1.444715],[4.868850,-7.586474,0.828990,5.277242,0.785727],[8.975591,9.450999,-5.399198,2.860335,-7.863415],[-0.119530,-3.111587,1.394458,5.124247,0.162298],[5.656439,-4.466989,8.201756,-1.302445,7.748788],[-0.738056,-9.562656,6.070596,6.412307,7.992771],[9.709378,-1.878060,-9.973148,-4.614281,-1.280101]],[[4.561292,6.669273,3.108987,9.815146,4.807382],[2.774852,8.075472,4.308070,-2.906572,2.264156],[8.113790,9.465041,-7.082138,8.704091,8.137208],[-0.898321,-5.744727,-5.168943,9.783371,8.943101],[7.469410,-9.181760,-2.634813,7.997688,-1.806006],[-6.368670,-5.329601,7.820467,1.769707,3.350084],[-1.496499,0.687008,0.568361,-5.538628,1.368278],[-2.473368,-9.088954,0.407085,-5.707066,0.677711],[-6.662771,-6.365284,6.133200,5.126922,2.553201],[-4.071034,2.913268,-0.852098,8.158209,5.747389],[-3.634427,1.388032,-1.189381,-7.014790,-8.997404],[5.807402,5.735357,5.852336,3.959349,-3.338140],[1.118063,4.788475,-9.279192,-5.711853,-1.776399],[8.760273,4.918120,-6.887824,7.504758,-5.928512],[-5.273531,-6.314594,-8.552256,3.925047,9.471862]],[[-0.710083,-2.365079,1.322284,5.957877,-4.768430],[1.748272,-7.585067,9.099137,-3.381871,3.961793],[-4.883766,-3.464418,-3.679875,-0.960332,-9.007413],[0.235612,-1.467068,-8.730368,-3.809915,0.348374],[-3.944848,-8.499588,6.472513,1.916997,5.289891],[5.323841,-2.217910,-0.757314,-2.317951,-0.680496],[-8.299613,3.889147,7.159296,-7.346145,4.524411],[0.727756,-0.245685,-4.778642,0.345376,4.849339],[8.497363,-9.997835,-5.203942,-0.858882,9.395947],[-2.996622,-9.312177,-6.647074,5.624605,3.558297],[5.506308,-3.636225,6.450160,3.640902,-6.183199],[7.980026,4.882914,-7.960813,-4.473700,-2.558860],[8.348826,-3.099329,-2.131163,-5.809381,9.648682],[-3.424876,-3.476516,6.941861,-4.717509,-3.454947],[7.075837,-1.136239,0.136815,5.991378,6.682853]],[[2.322371,-0.115941,-2.218751,-2.334479,-5.482936],[-5.448787,-1.067228,-1.889818,-2.106961,4.951140],[8.055448,-8.890776,5.933083,-5.106022,-6.070390],[6.873108,7.006900,7.760785,-7.222576,-8.660892],[0.746734,-9.986840,8.508211,2.200172,2.114692],[-3.309081,-5.329682,-5.697493,-1.135265,-6.667818],[-7.351114,-6.152905,1.881658,6.957198,5.139556],[-6.523572,-4.315607,1.724349,0.152204,-2.117017],[0.599594,-4.389737,6.631800,6.166518,0.361327],[-3.247264,6.245071,1.948403,-9.029977,5.504948],[-7.991664,4.226136,-0.090620,-6.702091,7.475235],[-7.238350,0.221354,-1.530733,0.541707,-6.339405],[0.688738,-5.549309,2.974549,2.360790,-7.171083],[-0.205149,7.569085,8.177745,-6.889266,3.667213],[-1.089772,-1.973732,-5.460477,5.624530,-2.446724]]], dtype = "float32")#candidate|870|(5, 15, 5)|const|float32
bop_871 = relay.divide(bop_839.astype('float64'), relay.reshape(const_870.astype('float64'), relay.shape_of(bop_839))) # shape=(5, 15, 5)
func_655_call = mod.get_global_var('func_655')
func_659_call = mutated_mod.get_global_var('func_659')
var_875 = relay.var("var_875", dtype = "float32", shape = (640,))#candidate|875|(640,)|var|float32
const_876 = relay.const([[-2.449109],[-2.086687],[2.138002],[0.341254],[-1.699079],[5.363004],[-3.107579],[-6.857863],[-3.651099],[1.708138],[9.031062],[2.701305],[-0.196995],[9.823129],[5.477499],[8.967120],[4.869546],[8.773385],[-6.864508],[9.085810],[5.762537],[0.268500],[7.417791],[-7.104268],[9.501574],[5.413103],[0.402319],[3.976541],[2.386363],[-6.248504]], dtype = "float64")#candidate|876|(30, 1)|const|float64
call_874 = relay.TupleGetItem(func_655_call(relay.reshape(var_875.astype('float32'), [10, 16, 4]), relay.reshape(const_876.astype('float64'), [30,]), ), 0)
call_877 = relay.TupleGetItem(func_659_call(relay.reshape(var_875.astype('float32'), [10, 16, 4]), relay.reshape(const_876.astype('float64'), [30,]), ), 0)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
call_885 = relay.TupleGetItem(func_146_call(relay.reshape(call_864.astype('float64'), [11, 5, 6])), 1)
call_886 = relay.TupleGetItem(func_148_call(relay.reshape(call_864.astype('float64'), [11, 5, 6])), 1)
output = relay.Tuple([call_864,const_865,bop_871,call_874,var_875,const_876,call_885,])
output2 = relay.Tuple([call_866,const_865,bop_871,call_877,var_875,const_876,call_886,])
func_889 = relay.Function([var_837,var_838,var_875,], output)
mod['func_889'] = func_889
mod = relay.transform.InferType()(mod)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mutated_mod.get_global_var('func_889')
var_891 = relay.var("var_891", dtype = "float32", shape = (5, 15, 5))#candidate|891|(5, 15, 5)|var|float32
var_892 = relay.var("var_892", dtype = "float32", shape = (5, 15, 5))#candidate|892|(5, 15, 5)|var|float32
var_893 = relay.var("var_893", dtype = "float32", shape = (640,))#candidate|893|(640,)|var|float32
call_890 = func_889_call(var_891,var_892,var_893,)
output = call_890
func_894 = relay.Function([var_891,var_892,var_893,], output)
mutated_mod['func_894'] = func_894
mutated_mod = relay.transform.InferType()(mutated_mod)
const_980 = relay.constdtype = "float32")#candidate|980|(15, 14, 16)|const|float32
uop_981 = relay.log2(const_980.astype('float32')) # shape=(15, 14, 16)
func_655_call = mod.get_global_var('func_655')
func_659_call = mutated_mod.get_global_var('func_659')
var_987 = relay.var("var_987", dtype = "float32", shape = (640,))#candidate|987|(640,)|var|float32
const_988 = relay.const([[-3.823114,-5.964242,5.684957,-2.896226,6.521406,-7.249791],[9.068434,-1.247555,6.218694,5.364708,-8.102008,-0.099094],[-2.198906,-5.285715,-4.876199,2.947916,1.310971,-7.474326],[9.678444,-0.703922,2.472421,0.054947,-2.855485,4.155196],[1.564088,9.634241,6.448449,-1.553175,-7.830632,-7.021593]], dtype = "float64")#candidate|988|(5, 6)|const|float64
call_986 = relay.TupleGetItem(func_655_call(relay.reshape(var_987.astype('float32'), [10, 16, 4]), relay.reshape(const_988.astype('float64'), [30,]), ), 3)
call_989 = relay.TupleGetItem(func_659_call(relay.reshape(var_987.astype('float32'), [10, 16, 4]), relay.reshape(const_988.astype('float64'), [30,]), ), 3)
output = relay.Tuple([uop_981,call_986,var_987,const_988,])
output2 = relay.Tuple([uop_981,call_989,var_987,const_988,])
func_1000 = relay.Function([var_987,], output)
mod['func_1000'] = func_1000
mod = relay.transform.InferType()(mod)
var_1001 = relay.var("var_1001", dtype = "float32", shape = (640,))#candidate|1001|(640,)|var|float32
output = func_1000(var_1001)
func_1002 = relay.Function([var_1001], output)
mutated_mod['func_1002'] = func_1002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1182 = relay.var("var_1182", dtype = "uint32", shape = (7, 6, 10))#candidate|1182|(7, 6, 10)|var|uint32
var_1183 = relay.var("var_1183", dtype = "uint32", shape = (7, 6, 10))#candidate|1183|(7, 6, 10)|var|uint32
bop_1184 = relay.bitwise_xor(var_1182.astype('uint32'), relay.reshape(var_1183.astype('uint32'), relay.shape_of(var_1182))) # shape=(7, 6, 10)
output = relay.Tuple([bop_1184,])
output2 = relay.Tuple([bop_1184,])
func_1195 = relay.Function([var_1182,var_1183,], output)
mod['func_1195'] = func_1195
mod = relay.transform.InferType()(mod)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1195_call = mutated_mod.get_global_var('func_1195')
var_1197 = relay.var("var_1197", dtype = "uint32", shape = (7, 6, 10))#candidate|1197|(7, 6, 10)|var|uint32
var_1198 = relay.var("var_1198", dtype = "uint32", shape = (7, 6, 10))#candidate|1198|(7, 6, 10)|var|uint32
call_1196 = func_1195_call(var_1197,var_1198,)
output = call_1196
func_1199 = relay.Function([var_1197,var_1198,], output)
mutated_mod['func_1199'] = func_1199
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1372 = relay.const([[[-6.499744,-3.061972,7.562339,5.216633,5.909393,2.804548,9.319860,8.284783,-6.183170,3.705984,9.282274,-6.425966,0.713065],[6.609923,-1.396215,-7.694930,9.562757,7.130416,-2.107498,3.931751,-2.841295,8.982902,8.697609,6.161655,7.327892,6.062350],[7.558645,5.935503,-8.674485,7.852212,-0.378317,5.938742,-4.130968,-4.247374,5.214124,7.090058,0.130500,2.224039,7.863526],[-5.484752,0.328986,2.391871,-7.074883,-0.179750,-1.883743,1.357687,2.350598,-7.480851,6.929642,7.672296,-0.577180,-2.221021],[3.529297,-8.652888,-5.604365,6.485879,-9.060535,-8.277808,-6.718916,-9.761242,-1.464512,8.582029,-8.747567,-1.648467,-4.524849],[9.410616,-6.287428,-0.589870,5.308134,-9.742292,-3.015737,-1.762344,7.994561,4.252218,1.811740,-1.458201,5.235327,9.183741],[0.843177,9.544991,1.326814,-9.320477,-5.891540,-4.701601,-8.289023,1.701182,-3.777336,6.872972,7.594585,5.301145,-2.042407],[-6.696370,9.878856,-7.870616,3.865123,8.255904,-0.053462,-6.878384,-5.373837,-5.862802,-2.325516,4.506310,3.897652,-3.966072],[7.806932,5.384920,3.900248,8.863288,-0.847151,4.558973,0.203655,-0.437328,-6.144028,-7.648504,7.690990,2.633597,0.660585],[4.441359,-8.724491,3.696980,6.921886,0.918295,-0.971169,-1.432442,-3.576983,1.708294,-7.865984,7.535186,-3.521169,3.544925]],[[7.518447,1.098077,-0.108025,5.786871,-6.177129,-5.205391,-3.297425,-8.989276,8.475051,0.192689,-1.098341,2.349180,-9.471453],[-1.167551,1.794199,0.925251,-0.381992,0.508903,2.577440,1.592028,0.942837,0.465003,-6.780243,-7.249427,-2.295545,2.883790],[-1.379130,6.532390,-6.071818,-2.290528,-2.189214,-4.586381,-0.473000,4.334889,-7.245912,-6.700183,-8.486175,7.321661,1.123757],[-2.843865,3.409158,9.868489,2.867040,2.760989,-8.652607,2.733603,8.531308,5.401933,2.568793,3.402514,-2.010560,9.597470],[6.582967,0.508682,-8.877501,8.798766,2.820924,-0.385709,6.376190,-8.302098,8.028067,-2.852565,5.976649,-1.175480,-1.681489],[7.030037,0.967083,-0.520720,7.033207,-8.465780,6.772272,-0.833248,-1.826557,5.034262,-8.877429,7.288777,2.752678,-6.494376],[0.640222,3.946358,-1.607204,-6.684060,5.225713,-6.562676,-3.585539,9.600066,-3.667328,0.537187,-9.602722,4.091165,-5.913686],[-2.194581,-4.264355,3.013897,7.202584,-2.557640,3.925935,-2.896929,7.093362,9.605088,7.519404,5.505566,-6.287443,-2.273620],[-5.803209,1.803967,-8.243946,-3.857831,-0.716715,-5.322303,4.183917,8.665134,-9.109795,8.681058,9.392177,0.228333,4.866868],[-8.362468,7.995862,-6.317437,-8.569104,7.218276,5.332638,-6.292944,1.469140,-6.315048,9.006930,6.240460,3.819779,2.264297]],[[7.756106,5.955076,5.260254,3.379827,-3.415017,-1.276376,9.780022,2.335176,-6.087512,5.129668,-7.515189,-6.053471,0.512845],[0.071151,-4.403012,6.006080,-4.231755,3.890624,9.100580,-7.772621,-1.847051,-9.282607,-0.378051,5.628736,0.850668,-3.132534],[-7.382383,9.967445,-8.195635,-5.487404,5.697762,5.579666,-7.611912,-7.997413,4.184051,0.393027,6.273792,5.688752,9.444938],[-6.993405,6.861251,-8.626193,9.581793,-0.596042,5.551649,0.650429,-4.169585,-7.998027,2.632960,-5.960015,0.512776,-1.887184],[-2.941189,5.911738,-5.120646,-5.564767,-0.513669,5.846878,1.171457,-9.141338,-7.590339,3.966888,-8.092797,9.998320,-4.638959],[-0.007866,8.288029,3.200205,-0.426140,5.327828,-3.047780,3.364253,7.970138,1.372778,-1.718610,1.833661,6.229784,2.815238],[-6.610933,1.426481,3.234453,-1.128527,-5.607805,-1.731226,-7.226702,-8.218767,9.109237,-3.733213,-2.851913,8.508673,9.954186],[-3.173004,-9.221619,-0.367194,-2.161055,4.783974,0.846958,8.208200,9.546147,-5.246573,5.703740,4.887984,-1.156905,3.434440],[3.849751,0.417549,3.060230,8.840887,-7.229026,-8.779581,8.693321,-5.675988,-6.090962,-0.622870,6.648650,9.508504,2.527054],[2.794159,-0.498936,0.426235,-7.599675,-2.552899,-0.050496,9.237004,2.013886,6.429687,4.521627,4.830856,5.972797,-9.255366]]], dtype = "float64")#candidate|1372|(3, 10, 13)|const|float64
uop_1373 = relay.sin(const_1372.astype('float64')) # shape=(3, 10, 13)
bop_1381 = relay.not_equal(uop_1373.astype('bool'), relay.reshape(const_1372.astype('bool'), relay.shape_of(uop_1373))) # shape=(3, 10, 13)
output = bop_1381
output2 = bop_1381
func_1391 = relay.Function([], output)
mod['func_1391'] = func_1391
mod = relay.transform.InferType()(mod)
mutated_mod['func_1391'] = func_1391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mutated_mod.get_global_var('func_1391')
call_1392 = func_1391_call()
output = call_1392
func_1393 = relay.Function([], output)
mutated_mod['func_1393'] = func_1393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_1458 = func_1391_call()
call_1459 = func_1391_call()
output = relay.Tuple([call_1458,])
output2 = relay.Tuple([call_1459,])
func_1468 = relay.Function([], output)
mod['func_1468'] = func_1468
mod = relay.transform.InferType()(mod)
output = func_1468()
func_1469 = relay.Function([], output)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1493 = relay.TupleGetItem(func_1468_call(), 0)
call_1494 = relay.TupleGetItem(func_1469_call(), 0)
output = call_1493
output2 = call_1494
func_1495 = relay.Function([], output)
mod['func_1495'] = func_1495
mod = relay.transform.InferType()(mod)
output = func_1495()
func_1496 = relay.Function([], output)
mutated_mod['func_1496'] = func_1496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1523 = relay.TupleGetItem(func_1468_call(), 0)
call_1524 = relay.TupleGetItem(func_1469_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1526 = relay.TupleGetItem(func_1468_call(), 0)
call_1527 = relay.TupleGetItem(func_1469_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1547 = relay.TupleGetItem(func_1468_call(), 0)
call_1548 = relay.TupleGetItem(func_1469_call(), 0)
uop_1551 = relay.log(call_1547.astype('float32')) # shape=(3, 10, 13)
uop_1553 = relay.log(call_1548.astype('float32')) # shape=(3, 10, 13)
uop_1554 = relay.tan(uop_1551.astype('float32')) # shape=(3, 10, 13)
uop_1556 = relay.tan(uop_1553.astype('float32')) # shape=(3, 10, 13)
func_708_call = mod.get_global_var('func_708')
func_710_call = mutated_mod.get_global_var('func_710')
var_1567 = relay.var("var_1567", dtype = "bool", shape = (1, 312))#candidate|1567|(1, 312)|var|bool
call_1566 = relay.TupleGetItem(func_708_call(relay.reshape(var_1567.astype('bool'), [13, 2, 12])), 1)
call_1568 = relay.TupleGetItem(func_710_call(relay.reshape(var_1567.astype('bool'), [13, 2, 12])), 1)
bop_1596 = relay.maximum(call_1523.astype('uint8'), relay.reshape(call_1526.astype('uint8'), relay.shape_of(call_1523))) # shape=(3, 10, 13)
bop_1599 = relay.maximum(call_1524.astype('uint8'), relay.reshape(call_1527.astype('uint8'), relay.shape_of(call_1524))) # shape=(3, 10, 13)
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
const_1608 = relay.const([-6.752780,5.604405,-3.734230,-4.835673,-9.252073,-5.829605,-6.984605,7.562265,0.675769,-8.268098,-7.043209,6.159380,-4.221267,-8.849409,5.630193,2.404540,3.082604,5.077008,-3.409162,-9.879607,-3.917295,-4.060864,7.920075,4.803745,-7.394736,-0.441183,-9.646487,1.767845,6.630404,-4.667127,0.588420,-0.606482,-4.344457,6.116342,4.039076,-0.874826,-0.297042,5.736599,-1.277062,-2.667646,-3.141325,-4.293140,-6.324458,3.513331,5.535746,-9.669608,4.109957,-2.733276,-9.865692,8.796030,3.462209,1.281666,-6.327348,1.705172,3.348035,4.978252,6.136462,8.152796,-2.257127,9.445744,-0.412729,-6.143163,7.674173,-9.167811,-7.844794,0.925746,6.249469,8.164358,0.031112,-8.609270,-5.726234,-4.103195,9.344966,5.090288,-0.012790,-6.256748,-8.590802,1.721376,9.195349,-5.166002,6.397317,5.870867,-1.113089,-2.679843,-8.578778,2.220287,-1.478492,-3.822821,7.781158,2.923001,-7.447240,-6.303823,8.449165,-9.758080,2.688821,-4.945117,4.181726,8.244841,3.312615,6.876915,1.214673,-0.979471,3.079923,8.625591,2.203157,-7.400904,-8.923135,-5.474559,-6.896906,-7.450808,7.482225,-2.149551,0.328660,6.844649,1.319766,-6.052514,5.280078,3.187417,6.958020,1.812271,9.090432,-5.906378,-0.251649,4.520059,-0.227676,6.549899,5.455505,-0.084065,4.766751,4.801182,-5.762614,3.551390,-9.938734,-4.716745,-2.368260,-4.154942,-3.399525,4.006677,-2.405522,2.402989,7.722841,-3.139311,8.693845,9.616335,-3.657142,7.734917,-1.679153,-2.762512,5.386036,-9.607699,-9.024853,-0.639616,3.862014,-6.798900,-0.052202,-3.936619,-3.823566,-4.413828,1.634926,-4.570712,-6.361607,1.878143,7.091576,-8.115414,-1.502870,-1.369644,2.583662,0.396651,-7.333312,-3.994926,-8.580649,-7.652489,-9.174417,-4.094431,-1.548049,8.765924,-3.893011,4.588971,2.911640,5.632620,-9.158915,-0.885383,-1.239677,0.980665,2.543269,3.926870,-5.756977,-7.798092,5.492165,2.965995,-4.610660,-3.980062,7.169041,-7.422077,8.348917,-9.396974,1.165529,-8.700099,7.450832,-1.489115,0.356576,-6.515420,-0.477059,-3.224431,7.167822,4.488233,1.104412,-5.478192,-3.837164,2.894620,-3.837652,5.395501,-5.543056,9.323036,3.138249,0.963573,-3.573548,6.604663,-8.177744,-9.842443,3.851189,4.140058,3.180644,1.981231,-6.193934,-2.019477,-5.217840,-4.512218,1.638147,-0.185804,-8.847251,9.580578,4.014887,6.562916,7.006410,7.299930,4.780488,1.109195,4.526492,-9.637771,1.165436,-3.010341,6.546130,-4.593246,8.624125,0.255795,-7.882833,-9.714006,5.266855,-1.738516,0.172578,4.089541,-1.477140,0.511049,5.419549,-4.954934,-7.028284,2.764379,9.894388,-4.140951,-0.654385,-3.527077,9.848216,3.904772,-4.028516,4.882790,2.685831,1.251116,2.325287,4.422968,-8.856138,8.685999,1.884037,-4.092217,-1.539873,2.255962,5.634005,-6.558216,-8.992343,2.406372,6.165393,-2.286518,-3.003344,-1.045181,-3.666917,-5.757466,7.100719,-2.643895,-9.308059,-6.433865,6.372229,-0.278334,5.696484,8.034746,-4.741001,5.986006,9.446087,-1.138459,4.024158,4.666439,4.951653,-7.515869,5.661332,4.662531,-8.996977,9.095435,1.964575,-8.399327,-4.532135,-9.647267,-2.783338,-8.508736,1.284265,4.525890,1.075245,-1.749172,7.544224,-3.403828,0.259068,-2.539120,9.412804,-1.061002,3.667497,0.823437,-7.210363,-2.575534,7.326495,4.107515,-0.322360,4.978681,0.213707,-9.393838,8.250703,-8.882038,-6.481770,-7.682992,-9.693335,-2.705277,4.861403,3.167690,6.343268,-2.752280,-4.168743,4.117622,0.137177,-7.318930,-7.769190,0.934918,3.936932,4.614919,-7.286659,9.724573,-6.331394,7.534707,-6.886319,6.099919,-4.342080,-7.539574,5.820090,9.157761,2.852531,-0.593190,-8.221625,3.581547,4.067309,2.671401,-4.419569,-6.039168,-2.599764,-4.754188,-5.423687,-1.942574,2.486971,7.036643,-7.369044,7.897962,-7.065251,-3.217137,5.346926,9.289668,-3.114466,3.583945,9.701919,2.672820,7.919465,-9.537786,8.200902,-0.932132,-7.005927,-2.043695,3.335610,-4.602906,9.887475,-0.786695,-0.358592,8.530807,4.658891,0.694424,-7.961556,-3.848380,-9.387982,2.158444,-2.537654,-3.603303,8.050672,2.604501,1.177734,-5.159557,-6.886086,1.179020,-4.006672,5.917590,8.873846,8.074013,9.603183,7.200680,-9.634417,-7.229654,7.338606,8.030482,4.007112,6.430953,-9.723452,7.319238,-5.854798,1.195831,3.004701,-8.027928,5.037718,-9.256536,-5.522394,-6.904912,-6.736083,9.701097,-8.378192,-0.397117,9.561340,-6.611397,4.541793,9.633992,-7.981307,3.147117,2.901181,9.726916,3.549474,-0.838765,3.916576,-6.062977,0.837186,4.776359,8.101751,9.349391,9.344358,-4.489271,7.741725,2.588358,1.958216,2.173269,-5.242622,3.234530,-2.167341,1.059869,6.439705,9.566991,4.282351,-7.254394,-4.692995,-6.098399,9.426272,-8.138752,-4.255680,-9.118257,-1.222478,-5.084532,-8.542040,-2.551727,6.994779,5.676232,-9.179043,4.807731,7.483657,-2.553203,8.917956,-2.243061,5.063801,2.402684,-6.549720,3.778045,7.325327,5.028335,-2.636553,-3.531206,-0.522115,-1.398464,-6.014858,-9.176250,9.635682,7.242039,3.747537,7.914295,0.981387,-3.897323,-9.556721,-8.132932,-1.004097,-4.083168,-9.059116,-8.663028,-6.364745,8.541747,5.219155,-7.818251,-6.657992,5.007601,9.820582,-1.651717,-4.413672,-4.668274,2.974113,-9.735275,7.147498,-1.839649,-7.335927,-6.187150,5.389861,8.228213,2.988080,6.326034,-0.804194,-2.251368,8.111064,-9.624071,1.992888,-5.925772,4.969163,-9.214594,3.737814,-2.549424,-7.453183,-4.790698,-6.242650,-4.103439,-4.108629,8.520029,-3.699873,-6.814128,4.489744,9.855467,-4.254818,4.577253,3.136205,-6.244718,-2.725913,-8.119765,4.125201,-9.731766,-5.209058,2.888771,-3.614506,7.405705,-0.308813,-2.855009,-7.537378,4.966981,4.577412,8.337185,-6.981084,-7.988278,-3.274931,2.216406,5.332437,-4.421817,-0.638543,-0.533782,-2.632988,-0.750566,-3.330034,-4.645446,-6.990162,5.654073,-6.973360,-2.690699,-4.521885,1.913651,8.974526,-5.645362,-1.678054,1.671692,-1.966534,6.038112,5.460962,-5.308600,-2.208289,6.159018,-1.754354,8.427931,4.695867,0.927874,-6.310023,-3.742787,-6.151227,-9.180634,0.660145,5.967662,-3.006110,0.194270,-0.515526,3.633803,-3.828508,-0.542279,9.582629,-9.934447,1.238191,-1.447003,-5.490865,-6.120443,3.179561,-6.212156,-2.925152,-2.738709,-9.941192,-7.455084,9.330089,-2.292010,-4.433369,-7.726616,-6.261456,-1.810742,4.628757,3.009541,-4.121485,-3.311945,-5.154124,-4.789323,-0.400670,6.521413,-8.017052,-0.748479,2.734155,-5.810006,7.874400,2.830794,1.781010,8.519250,-3.579254,-1.865324,-5.468239,-8.784761,6.056759,7.795302,-0.672138,4.675588,2.430965,-6.814614,-5.658960,-6.115909,-9.284428,6.196997,-2.608753,-1.905570,8.554995,4.942475,3.616550,-1.080106,-2.409626,-5.135641,7.420328,-9.111260,1.378873,8.870433,7.067555,5.154670,-0.749143,2.224685,-4.815245,3.968729,-9.989501,8.191104,7.518311,8.482600,-8.777739,-6.278974,8.906530,-5.021686,4.442009,-8.508004,9.816567,-0.096720,-8.299313,-3.007038,8.087086,-4.079289,-6.523085,7.476963,9.374324,-7.285615,7.088176,5.024422,6.886318,7.094743,-1.738255,1.313395,-3.167988,5.029767,7.285147,3.791292,5.802409,-9.692819,1.363675,4.326031,-4.034450,-5.884347,-6.494935,-8.917342,3.478123,1.217046,1.301944,-7.907586,-4.542751,-7.653605,6.302736,2.960470,0.442359,6.907086,6.128444,-3.275824,-9.642423,1.396679,-5.792191,-2.852820,-5.055465,0.227573,-5.959389,4.371060,6.606112,-8.496485,6.934944,-0.754971,2.892886,5.232397,-9.406115,4.286967,1.751033,-3.162803,-0.093670,2.220351,-8.436380,9.941629,-6.304978,8.674780,-8.704639,5.039023,8.515869,2.773144,9.248888,-5.870539,-5.872402,-9.207309,-3.368767,9.049780,3.160176,6.420626,-7.583095,-9.833293,6.458442,-2.939904,8.481258,8.572360,5.087745,2.205218,-3.506662,2.493815,2.282920,-0.481059,-1.032081,2.976889,-8.096611,5.027986,3.162555,-6.917090,4.565927,-6.865697,-1.110478,-5.054961,-3.877358,-3.357311,1.392511,4.128494,4.749639,-7.379219,-8.497770,7.099552,3.045130,2.906127,-6.292832,4.135960,-0.995533,-8.424381,-9.168261,4.211167,-2.391308,2.014796,8.631360,6.573100,-2.210376,-8.902287,5.896294,6.005489,-4.222967,1.334933,-2.805175,-6.280690,-6.638685,8.481856,3.552282,-8.976998,-1.020516,0.330213,-9.316954,-0.555555,4.453124,5.507684,-8.605752,6.534424,4.500784,1.351892,6.792361,3.016693,-7.611167,-5.488631,7.961438,-6.001457,-5.936211,8.173302,-1.845307,1.098143,-8.062791,-1.620548,-6.234398,5.005047,-0.275036,0.529943,-9.773515,0.569309,-4.627103,2.513559,-8.981890,9.323554,9.951473,-6.607260,9.213484,4.277330,-4.886019,-2.582180,7.828361,6.323854,3.678723,-3.768449,8.499556,-2.749007,8.600842,6.299215,4.219661,4.720807,4.254235,-3.662734,5.933653,-8.092084,6.759378,-4.105076,-2.881482,-7.705911,8.901256,9.631332,3.965529,-8.534078,6.083180,-0.637285,-1.177428,-1.976113,8.535829,-4.504826,-9.901474,4.632365,-9.742403,7.422194,9.929649,-1.835308,-2.500068,2.272911,0.251351,-7.825354,9.800302,-6.295505,-9.906975,6.042993,2.113636,8.354608,-5.450763,-0.666399,-4.316023,9.395721,3.852888,-7.434934,0.494989,8.040540,6.074328,-3.817372,2.490391,1.077509,4.661968,5.798277,-2.615506,-0.198761,0.195057,5.223079,-6.297152,8.318473,-4.946090,0.764408,4.611559,6.710952,0.363258,2.165098,-3.355324,-6.512842,4.904844,-3.053628,-7.109264,-4.586363,0.145126,-9.531436,-7.119190,-2.811039,3.527433,4.019143,-0.888167,-0.394168,-1.098087,-0.120083,-6.847636,-5.052705,2.646173,4.458543,6.164355,6.676206,-0.703844,8.452193,-5.639609,6.709415,1.099195,-2.207713,2.221525,1.472101,0.393639,-0.394703,4.207892,6.493175,-4.193709,-9.914885,8.206307,-0.401471,0.388238,-2.244363,4.835271,-4.609639,-0.812332,4.141142,3.302318,4.902979,-5.363585,-6.620456,-7.525294,-9.630569,-6.148951,5.533618,5.270669,8.139565,0.445171,-5.981246,-3.729977,8.882512,5.142380,-6.038761,-2.998438,5.355534,-0.002292,-9.263050,-7.510643,1.380909,6.020207,-0.362266,-5.208561,-7.124140,1.846235,4.209625,6.967708,7.360846,2.678734,0.382814,6.024211,-5.688393,-2.690345,9.808398,-8.569404,4.444028,2.124435,-8.378455,-7.495709,5.840138,1.292447,3.756416,0.608433,7.142036,-8.636594,-5.774766,-4.173255,8.322536,2.770096,3.392152,1.441619,-6.949571,-3.286777,0.792245,3.245461,-6.469155,5.905905,6.417766,-4.088026,2.810843,9.075783,6.371580,-5.274437,-2.157813,7.657888,1.403203,-9.339805,3.707370,-7.585032,3.412988,9.445459,-5.040292,3.750736,5.317432,3.730043,6.068732,4.980644,-8.640717,5.426763,0.579751,-4.159282,-6.029044,-1.102584,5.605714,-0.692139,-9.274824,-6.104200,-1.187017,-9.450683,-7.418800,-1.177951,-8.952754,-5.020749,4.050084,2.841353,-3.299359,-6.053840,9.746016,-0.279173,2.394116,0.591937,-4.541976,4.061534,-9.216948,-6.524921,8.291824,-2.795229,-4.540344,-1.774098,-4.479760,3.255064,2.387515,2.059707,-5.785780,5.330840,-9.568771,-5.527392,-7.502853,8.167166,0.508192,8.272445,-6.309699,0.264895,-7.079206,2.345035,2.224773,1.411636,-2.377244,4.329862,-2.293018,-1.346908,-4.312529,4.260736,-7.711601,3.937010,6.539265,-7.958299,-3.577281,-8.473449,8.635862,9.685359,-8.081903,5.402087,-1.571049,-5.519770,4.008534,7.562780,4.294115,6.633979,-5.274674,0.025615,0.163660,6.534305,9.592014,5.585240,6.567282,-0.874647,5.365294,-2.993263,-3.347642,5.467292,-7.571492,0.383140,0.280601,9.042330,5.837537,1.863763,4.164242,-5.960949,4.090447,5.669436,2.943537,-4.980172,-5.933534,-8.220158,8.230073,-9.218710,-5.511313,1.802367,-5.080174,3.282528,-1.204027,0.593664,-0.978388,-2.018051,7.345201,-0.374467,7.915121,5.966213,-0.829991,6.759299,2.826631,0.491165,2.903752,-0.278801,5.061914,-1.520129,-0.519849,8.771848,0.511284,-3.681292,-3.892283,7.959625,-8.730343,9.835642,-8.967676,-8.196264,-2.687852,-5.352527,2.465905,-1.225457,-4.180099,-7.608205,-5.102931,0.079040,1.991040,-0.507248,6.026080,-8.711102,-6.047614,-2.800049,-4.920415,1.680896,-1.188533,-6.403406,-4.025806,-8.772501,3.044404,8.001547,9.030648,-2.045918,8.106000,-7.957183,-9.361513,-2.916224,-5.008190,-8.986413,0.647970,1.288206,7.579695,7.877274,-6.357420,-4.380074,-1.016787,8.358256,1.828537,7.761007,-6.478989,5.693255,-4.583247,-8.958358,-9.932203,5.447441,-3.726802,5.689863,-5.208660,6.165338,-5.275182,7.652405,3.658249,-9.779106,-1.178745,4.527704,7.614135,1.079517,-2.148065,-0.200866,-5.570067,9.466850,2.084172,-6.237391,4.562672,-4.779865,-9.400183,9.466275,8.290777,-9.032852,9.606786,-1.360892,-5.395164,-6.246467,6.698781,2.856587,-6.367906,-4.772061,5.096582,0.233404,-0.544756,-6.104999,7.841996,7.809051,-6.486043,-1.520813,0.449991,-9.282665,6.194796,1.840897,-8.514053,-3.618884,8.403074,-3.915256,-1.507635,8.929129,2.174045,0.623511,3.588142,8.511568,-2.239226,0.507148,5.284334,0.868164,-2.836922,5.392254,2.787964,0.055051,1.966059,8.154275,-2.652592,-3.705653,-2.223905,-2.208969,-1.293202,0.802521,-3.191912,3.510718,3.545169,-3.697750,7.744218,-9.848819,0.129101,1.629950,1.287522,-5.209346,8.309622,2.251404,-6.184360,-1.590869,-6.230153,3.995195,-9.131740,-6.041708,6.186764,-9.443687,-3.402430,4.883578,-2.613684,-6.910181,2.069276,9.889893,-5.027622,3.341081,1.663276,4.875715,6.960326,-9.055613,2.195132,9.450562,2.918555,1.957628,-6.140070,0.056675,5.471317,-4.672497,3.120177,-6.850874,7.711129,-4.585792,0.888782,-5.886840,2.220221,-8.929013,8.784350,8.832427,2.938251,-4.890993,-6.041348,3.427274,-1.540539,-1.868796,2.331443,3.838989,-4.924156,0.794495,0.094185,7.816250,-4.231292,-6.418930,1.635084,-7.955403,-2.060539,3.950994,0.568697,0.994452,-2.040972,3.672721,-2.775788,-6.055579,-3.942004,-5.677150,7.147125,-4.997945,6.564561,4.224689,2.741789,-8.840050,0.498877,-0.855284,-8.815064,-7.036119,0.898714,-4.184758,-7.763654,5.547931,6.763518,-8.155812,9.703193,-5.378518,5.161060,1.609049,-5.504459,7.365368,9.409595,-3.902499,2.757597,7.641895,-2.813257,-9.996307,-7.381649,3.300070,1.009131,7.303927,8.837305,3.307629,5.587465,5.588854,-1.547608,8.188342,-2.561253,6.711843,-5.854538,-3.039732,5.314156,2.065835,-1.926954,9.519342,6.084061,-3.894213,-2.002462,5.195304,4.439097,7.337386,9.584480,5.295210,-5.264322,0.831186,9.654017,9.057882,-5.187025,0.885358,-6.877079,-3.563050,1.024782,-2.821878,0.218077,3.315550,-9.095575,-2.485798,-8.756780,7.191435,2.992086,7.222806,-1.212874,4.745992,-4.698372,-7.982063,0.605261,-2.161377,2.038458,-7.973651,-6.406565,8.621837,5.759317,2.924598,-2.830572,-1.225175,2.427258,-6.274584,0.612099,3.696403,-5.609734,-1.612397,-4.553840,-1.464874,0.343551,-6.635588,1.132693,-5.890583,-5.079046,-4.841871,-6.096383,-4.745453,-5.866783,2.461306,-2.290956,5.495495,-1.536550,-5.015574,-2.816492,2.595766,3.555643,-1.474279,9.689179,1.439316,-5.633456,-1.587922,1.582493,-9.685506,-7.796669,3.394476,-5.384085,0.941621,-6.070147,-9.260556,7.393647,-0.810208,4.635002,5.393173,4.566347,-7.589929,-5.666709,-1.833857,1.051017,8.855798,-3.330707,-9.993959,-6.498622,-1.492807,5.507527,7.122025,-7.578458,-5.307409,-7.275453,-2.308935,-2.067813,9.538673,-2.021265,-1.932781,2.681807,0.179311,-9.115882,-8.496466,8.095358,9.986218,7.700199,1.694891,-6.930628,-0.301521,9.793829,-5.618434,0.650016,-0.640268,7.594214,-0.728743,0.259611,8.982898,3.238798,-4.417033,-7.314782,-3.385894,-3.024397,7.186049,7.673305,-0.991635,-2.461892,-0.731819,-0.210943,8.443371,-0.433958,-7.948064,4.786320,1.405879,-7.435024,-1.436094,-8.633598,-2.552560,-0.577078,4.397367,7.650806,2.798683,2.687060,-1.459556,-5.304750,9.052361,1.673290,-0.822105,2.557884,6.294148,2.238044,-9.130165,-6.590692,7.995037,-2.087438,-3.339927,-6.592311,-0.962157,-0.028031,3.327083,-6.259330,1.734130,8.928411,6.852746,0.170271,-9.552817,-5.775299,-2.125766,2.952450,4.895091,8.796676,-9.975319,1.305997,9.679137,7.254471,8.662019,8.718820,4.356384,-9.049274,-7.825436,4.943827,9.329785,5.018194,4.781659,0.335300,2.248302,-8.828657,-1.405728,-6.644383,9.398360,-3.108601,7.605176,8.932282,-3.730726,7.705850,-1.892412,1.787504,-6.102080,1.589065,-1.977948,5.766690,7.909151,1.587181,6.101740,4.755435,9.372521,5.244056,-5.059866,9.726227,2.840975,4.300162,0.406039,2.612135,3.279798,3.971929,1.421235,8.633803,7.906821,-0.601402,-0.348389,5.279988,7.809637,7.698481,-0.536840,8.207149,3.062912,5.027356,6.166089,5.174345,9.043009,-2.059319,9.350133,-0.309973,-2.242163,5.393369,-9.865617,-2.721496,-2.455138,5.623238,-9.191622,-7.928755,0.618237,9.853467,-4.991815,-1.765354,6.781476,-8.061467,-2.592129,8.757716,3.844244,-4.341995,-2.109173,5.102997,-5.331469,7.328759,5.286222,-7.223615,9.790315,-2.761180,-8.056159,0.090568,1.589975,-3.189852,-3.419764,9.536204,4.512670,-2.860536,-4.039521,-6.034803,-4.231065,-7.369915,3.267490,3.688734,-8.846251,-5.774441,-8.394305,-6.910387,5.451575,9.135334,0.146013,3.990383,-6.725653,-0.065041,7.744720,8.138258,-3.910093,-2.555767,0.972025,-8.504130,1.656471,-0.735514,-5.317128,5.345526,-5.579534,-3.218675,0.742279,-0.395145,2.542706,3.981484,4.552912,-4.177811,-8.280999,4.057384,-2.774387,9.590651,-0.340677,7.257643,-0.562398,-6.714690,-9.716740,-6.106111,-7.363222,8.738408,6.733684,-2.778183,-5.374445,-8.399429,0.931473,-7.860707,8.952879,9.646290,7.101189,9.963014,-5.681282,-9.781189,-2.478913,-3.819476,9.250165,-5.393828,-7.330682,6.444367,6.480441,4.347690,1.773026,8.196618,6.451571,-6.122461,5.267769,0.911320,8.252078,-7.288732,-5.266475,-9.438982,9.977913,3.962441,-0.863733,-9.544814,-2.014100,-9.728203,5.702685,9.070438,3.918757,0.838898,4.188143,-8.712523,5.925609,-6.454176,4.126101,2.742425,7.370928,2.979279,-0.796576,6.639215,6.069616,-0.915182,0.169180,-3.911514,-8.439823,-7.480191,-5.408574,-5.726597,6.214033,6.082710,-3.163052,1.162878,3.662703,4.963759,-5.818217,9.188362,-7.591769,-0.977307,5.011478,-2.245488,3.207497,3.485928,4.512596,9.765620,-3.259773,-0.966627,0.012461,-7.532653,-5.611278,-5.349535,-4.140314,-4.750379,-0.014053,9.983245,4.169102,4.662865,-9.023967,-4.381520,-9.765851,-2.973400], dtype = "float32")#candidate|1608|(1820,)|const|float32
call_1607 = func_336_call(relay.reshape(const_1608.astype('float32'), [13, 10, 14]), relay.reshape(const_1608.astype('float32'), [13, 10, 14]), )
call_1609 = func_336_call(relay.reshape(const_1608.astype('float32'), [13, 10, 14]), relay.reshape(const_1608.astype('float32'), [13, 10, 14]), )
func_1000_call = mod.get_global_var('func_1000')
func_1002_call = mutated_mod.get_global_var('func_1002')
const_1629 = relay.const([[1.331474,2.221065,-3.332207,9.504539],[9.119248,7.496550,4.534386,4.446117],[-2.194283,-4.182299,-5.995211,1.251075],[-8.132336,5.663627,4.401396,-5.217640],[4.891417,-4.571707,4.737651,1.049506],[-0.951292,-8.540376,-5.502068,2.650129],[-4.379009,-2.554278,0.419452,-8.817161],[5.153537,-6.369186,6.976789,1.406532],[-9.970179,-4.824670,3.113600,-7.305307],[9.654701,-4.581784,-4.987788,-8.509845],[2.176366,-4.716722,-0.201756,-3.449387],[-2.311127,-4.578539,7.545427,7.858496],[-9.498499,0.141479,8.506791,7.475163],[1.306401,-9.975756,9.482946,-6.073829],[4.912485,-9.316234,5.487359,6.395830],[5.714466,-3.471870,-3.836135,6.735721],[2.759727,-9.878371,-6.759565,6.383137],[0.284299,-3.328089,-7.052677,0.699971],[8.772209,-7.894887,7.180521,-2.893188],[8.177880,6.810988,-3.398257,-4.747223],[-1.621179,-3.974462,5.675855,-7.464092],[2.978319,3.812862,6.280699,-5.552698],[-2.020262,-2.206186,-4.553312,6.103309],[5.226639,5.897015,3.681325,6.543993],[9.283180,-2.065980,-7.839912,9.495443],[6.504614,7.540918,-9.773715,5.552778],[-7.439859,-8.033737,0.061423,9.697959],[-8.654645,-5.384412,-2.895304,2.777739],[-3.045906,-9.132768,-6.438834,-6.652708],[4.830040,6.173125,7.661982,-3.803933],[-8.742851,3.369748,-0.130174,-8.805044],[4.650511,-2.996743,-0.821110,8.905935],[-9.347991,7.775351,-9.005855,-8.969615],[-1.144903,8.560336,2.605448,7.856156],[-3.437749,9.528570,6.859073,3.052907],[-7.394155,8.425142,-1.558019,7.427079],[-2.676574,8.654177,2.029375,-1.027854],[7.507722,7.702615,-4.621416,-2.616925],[3.550111,1.733404,1.992740,-8.167910],[4.168757,1.470509,-6.374124,-8.903680],[8.194673,8.215234,5.118459,-8.004948],[2.312787,9.671201,3.946565,-2.703897],[5.862330,4.608905,0.070344,4.065069],[5.958706,-4.272522,8.275210,1.210250],[-2.787851,3.023569,-6.996395,8.427551],[-2.618497,4.121265,-4.134775,-3.930475],[-0.139337,9.302790,3.178721,-7.464197],[7.762601,9.426732,1.265121,3.010897],[2.213231,0.610433,4.558288,-3.454835],[-1.748306,0.557830,5.504408,-8.562334],[2.529241,8.642258,-4.525453,-3.717281],[-2.081791,3.742175,-7.537755,-1.188885],[0.031882,4.085026,-8.929518,-2.124145],[-8.234312,2.861769,-4.992316,9.720726],[8.629900,-5.634191,-6.542144,8.429674],[-1.264210,-5.692323,-6.365550,1.491219],[-6.168674,-5.412855,-0.563797,4.897143],[-8.358533,-1.757580,7.944769,-0.415095],[8.014308,-7.437368,5.975247,-2.847285],[-2.765201,-7.886495,9.791305,4.397854],[4.053902,-3.306794,-5.111853,-9.771702],[9.216247,7.488444,-8.130727,8.842150],[8.553119,9.168202,-8.468883,-8.979747],[-2.899967,7.365334,-0.244910,8.263895],[-0.129827,8.443020,-5.049472,8.672071],[3.597013,-4.301497,-1.784153,3.576106],[3.422056,2.526309,-5.874546,7.902767],[-0.912712,2.285044,7.162823,-9.121591],[-8.087707,-2.447676,1.008979,-3.204206],[8.699073,-2.053915,1.223376,9.368782],[-7.438344,-3.818671,-6.250511,2.134543],[-9.197135,-5.642113,-9.652400,7.453299],[-5.605106,0.315991,6.621116,-6.219986],[-1.836269,-1.496610,-3.616824,-2.631037],[-4.783486,-3.547990,-3.715953,-0.887167],[-9.174321,-3.418062,3.477312,9.442797],[-5.892938,-0.420433,1.147318,-0.415557],[7.896639,7.555278,-0.621128,4.048632],[-0.026255,2.353329,9.180770,3.066183],[-4.341067,-8.516557,1.891980,-5.184281],[-1.372796,5.934858,3.254297,3.240229],[-4.799073,4.560780,1.212599,-6.889951],[-5.652966,-9.829809,2.071382,9.835105],[-8.156120,5.106186,5.820220,1.822614],[-5.525091,6.845591,-8.259535,4.821011],[9.720711,3.674079,8.911065,-4.654807],[1.822030,8.184168,-6.100608,1.763809],[1.478647,-0.363876,-0.297611,-3.948556],[-7.384018,-2.411350,4.701029,-0.367950],[-0.500551,3.627038,8.854851,5.066013],[-7.045227,4.668240,8.817551,8.938157],[7.781239,-9.976024,1.852760,0.562501],[-3.987918,-7.295264,3.780317,6.800922],[-1.235153,1.241774,-3.802024,2.507729],[0.389597,-4.756124,9.813938,5.412908],[5.715196,-0.958597,8.719265,0.209577],[8.517324,0.121113,-3.132445,0.895877],[3.122257,-4.119718,6.747998,-5.570726],[-6.607421,-1.019728,2.244086,-4.081128],[3.987473,5.425441,-9.188678,-2.838415],[4.012850,-8.108630,-2.769958,-3.958488],[-0.351620,-3.864049,-5.836224,8.294290],[1.711170,-9.139919,7.140793,4.703937],[7.905163,6.991351,7.644280,-3.420309],[2.247395,-6.521124,-2.299037,7.163891],[1.343039,-4.963190,3.552303,-0.498742],[8.319662,1.662501,-8.059031,7.035609],[2.731614,3.628087,4.485191,7.900095],[2.339456,-2.155814,0.944693,-5.384398],[3.582318,-7.341313,-9.459995,1.656446],[-2.969743,3.079377,-1.833503,-8.830296],[2.118150,-8.872985,2.498378,-6.971210],[-8.106367,-9.784793,-8.947965,-4.302129],[-7.184435,-0.884077,-3.547192,-5.063054],[-2.017633,8.917025,3.029719,8.516336],[2.170077,4.552203,4.087826,8.290947],[-0.538404,7.374925,2.723525,4.310608],[6.660949,-0.129207,4.938449,-1.124675],[-3.235024,-7.397114,4.669364,7.756720],[-3.303100,-5.864983,-6.228957,8.230202],[2.873970,8.093292,-4.037443,-5.294021],[2.678767,6.595142,-5.669368,-6.767363],[3.056849,-0.473706,-7.242270,-9.531439],[-2.881044,4.596876,-1.586846,2.933587],[4.311708,-7.306673,3.489815,3.914707],[-9.583528,-5.039829,-5.508828,2.961486],[2.885288,7.989549,0.357874,-2.264002],[-2.972554,-9.374139,-9.103454,-9.549642],[3.875900,-0.691471,-1.354669,8.398072],[-2.117701,0.764410,-8.761311,0.056110],[-1.471801,-8.994216,-1.813871,7.994135],[-0.525867,8.451107,8.443043,-1.480982],[2.389283,-5.077813,4.123476,-7.424305],[6.527151,-7.008231,-7.436613,6.282369],[-2.294608,0.275577,2.343699,0.122651],[-5.494007,-4.764494,8.891087,-1.576437],[2.885455,-3.469596,-5.040798,9.333010],[-8.622342,-6.689364,7.380977,7.139763],[7.550133,-0.925535,8.159244,-4.562721],[-4.430875,0.594631,3.386132,-7.904848],[-8.108423,6.229740,1.667217,-7.971193],[6.450526,6.311869,3.397467,-0.432878],[5.156915,3.872463,5.474981,-8.956729],[-2.781036,9.201699,-6.156168,1.395572],[-1.902004,7.084467,0.937559,6.104710],[-9.687268,2.414172,1.778378,-0.890400],[-0.636618,3.061909,2.522901,5.723930],[9.070949,-7.775142,0.302814,8.327950],[-1.107066,8.043467,-3.876589,-4.586228],[3.214334,-1.585054,-7.313707,0.808702],[-9.363592,-9.820778,5.757368,-1.250484],[-5.362408,-5.877948,-2.828222,7.261871],[-0.528442,-9.621203,4.247755,-0.814525],[-9.971302,1.071150,0.669686,6.299315],[6.541375,-5.441014,1.801307,4.950583],[3.278985,1.588568,6.722536,-5.434681],[-0.173704,1.055912,-0.156036,-4.810994],[-4.022665,2.303475,3.555901,-3.576072],[-4.335213,8.136613,2.195331,8.478829],[-2.043639,-2.544068,9.727938,4.660361]], dtype = "float32")#candidate|1629|(160, 4)|const|float32
call_1628 = relay.TupleGetItem(func_1000_call(relay.reshape(const_1629.astype('float32'), [640,])), 1)
call_1630 = relay.TupleGetItem(func_1002_call(relay.reshape(const_1629.astype('float32'), [640,])), 1)
func_889_call = mod.get_global_var('func_889')
func_894_call = mutated_mod.get_global_var('func_894')
var_1632 = relay.var("var_1632", dtype = "float32", shape = (375,))#candidate|1632|(375,)|var|float32
call_1631 = relay.TupleGetItem(func_889_call(relay.reshape(var_1632.astype('float32'), [5, 15, 5]), relay.reshape(var_1632.astype('float32'), [5, 15, 5]), relay.reshape(const_1629.astype('float32'), [640,]), ), 2)
call_1633 = relay.TupleGetItem(func_894_call(relay.reshape(var_1632.astype('float32'), [5, 15, 5]), relay.reshape(var_1632.astype('float32'), [5, 15, 5]), relay.reshape(const_1629.astype('float32'), [640,]), ), 2)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
call_1646 = relay.TupleGetItem(func_146_call(relay.reshape(call_1628.astype('float64'), [11, 5, 6])), 1)
call_1647 = relay.TupleGetItem(func_148_call(relay.reshape(call_1628.astype('float64'), [11, 5, 6])), 1)
func_205_call = mod.get_global_var('func_205')
func_208_call = mutated_mod.get_global_var('func_208')
var_1651 = relay.var("var_1651", dtype = "float32", shape = (196,))#candidate|1651|(196,)|var|float32
call_1650 = relay.TupleGetItem(func_205_call(relay.reshape(var_1651.astype('float32'), [2, 14, 7])), 0)
call_1652 = relay.TupleGetItem(func_208_call(relay.reshape(var_1651.astype('float32'), [2, 14, 7])), 0)
bop_1656 = relay.floor_divide(uop_1554.astype('float32'), relay.reshape(bop_1596.astype('float32'), relay.shape_of(uop_1554))) # shape=(3, 10, 13)
bop_1659 = relay.floor_divide(uop_1556.astype('float32'), relay.reshape(bop_1599.astype('float32'), relay.shape_of(uop_1556))) # shape=(3, 10, 13)
uop_1666 = relay.sin(call_1566.astype('float32')) # shape=(13, 2, 12)
uop_1668 = relay.sin(call_1568.astype('float32')) # shape=(13, 2, 12)
output = relay.Tuple([var_1567,call_1607,const_1608,call_1628,const_1629,call_1631,var_1632,call_1646,call_1650,var_1651,bop_1656,uop_1666,])
output2 = relay.Tuple([var_1567,call_1609,const_1608,call_1630,const_1629,call_1633,var_1632,call_1647,call_1652,var_1651,bop_1659,uop_1668,])
func_1670 = relay.Function([var_1567,var_1632,var_1651,], output)
mod['func_1670'] = func_1670
mod = relay.transform.InferType()(mod)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mutated_mod.get_global_var('func_1670')
var_1672 = relay.var("var_1672", dtype = "bool", shape = (1, 312))#candidate|1672|(1, 312)|var|bool
var_1673 = relay.var("var_1673", dtype = "float32", shape = (375,))#candidate|1673|(375,)|var|float32
var_1674 = relay.var("var_1674", dtype = "float32", shape = (196,))#candidate|1674|(196,)|var|float32
call_1671 = func_1670_call(var_1672,var_1673,var_1674,)
output = call_1671
func_1675 = relay.Function([var_1672,var_1673,var_1674,], output)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_1690 = func_1391_call()
call_1691 = func_1391_call()
func_1000_call = mod.get_global_var('func_1000')
func_1002_call = mutated_mod.get_global_var('func_1002')
var_1696 = relay.var("var_1696", dtype = "float32", shape = (640,))#candidate|1696|(640,)|var|float32
call_1695 = relay.TupleGetItem(func_1000_call(relay.reshape(var_1696.astype('float32'), [640,])), 3)
call_1697 = relay.TupleGetItem(func_1002_call(relay.reshape(var_1696.astype('float32'), [640,])), 3)
output = relay.Tuple([call_1690,call_1695,var_1696,])
output2 = relay.Tuple([call_1691,call_1697,var_1696,])
func_1726 = relay.Function([var_1696,], output)
mod['func_1726'] = func_1726
mod = relay.transform.InferType()(mod)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1727 = relay.var("var_1727", dtype = "float32", shape = (640,))#candidate|1727|(640,)|var|float32
func_1726_call = mutated_mod.get_global_var('func_1726')
call_1728 = func_1726_call(var_1727)
output = call_1728
func_1729 = relay.Function([var_1727], output)
mutated_mod['func_1729'] = func_1729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1792 = relay.TupleGetItem(func_1468_call(), 0)
call_1793 = relay.TupleGetItem(func_1469_call(), 0)
output = call_1792
output2 = call_1793
func_1798 = relay.Function([], output)
mod['func_1798'] = func_1798
mod = relay.transform.InferType()(mod)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mutated_mod.get_global_var('func_1798')
call_1799 = func_1798_call()
output = call_1799
func_1800 = relay.Function([], output)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1851 = relay.TupleGetItem(func_1468_call(), 0)
call_1852 = relay.TupleGetItem(func_1469_call(), 0)
func_456_call = mod.get_global_var('func_456')
func_460_call = mutated_mod.get_global_var('func_460')
const_1854 = relay.const([7,-1,-6,-10,-4,9,2,-10,-4,-10,-8,7,-5,-7,8,3,-8,8,9,2,-3,-1,-3,-2,2,8,-3,5,-7,4,6,3,-2,-7,2,-4,-8,-10,10,10,3,1,4,4,8,-9,5,-8,4,8,5,-1,-9,-8,2,-2,-5,-1,-8,-10,-2,1,-2,4,6,-4,-4,-8,5,-5,-1,1,7,-6,-8,-1,7,8,3,-7,-2,10,3,10,-3,4,1,1,-9,4,3,-8,9,2,-7,-1,-8,-8,10,-1,-2,-6,-2,2,-5,-9,-4,-1,-4,-3,9,-2,4,10,-8,6,5,5,-10,-9,5,-5,6,10,-8,10,6,6,4,3,-8,3,10,1,5,6,7,-7,-7,10,9,-7,-4,6,-1,-9,7,-10,-8,-8,10,-4,-5,-7,-9,2,-9,-4,1,10,-10,-9,-10,5,-2,4,-7,9,9,-8,5,6,-6,8,10,-9,8,7,-9,-8,5,2,-10,8,9,8,6,9,-4,-1,-8,5,6,-5,-6,5,7,-5,-10,-6,7,-2,-8,6,9,-6,-6,2,5,-9,2,-2,3,6,8,-2,-8,1,7,-7,3,-3,8,-2,-5,-6,9,8,5,5,9,-2,2,-2,9,5,-7,-2,6,-8,9,1,-1,-9,-2,2,4,8,-7,6,4,-9,-2,5,-7,10,-8,5,10,8,10,5,3,-1,6,6,1,-10,-6,-10,8,2,-2,5,-1,-6,-4,7,4,8,7,9,-1,10,2,2,-1,7,-1,7,-7,5,4,1,-1,-8,-4,6,-4,3,-4,7,1,-1,8,6,-1,-9,2,2,8,10,5,-7,2,-4,-7,4,-6,-10,-10,-2,-7,5,10,1,-7,9,-8,-10,6,-7,-6,-1,-3,-9,-9,-8,-3,-6,-10,8,-9,-9,1,5,5,2,-2,-6,-8,-10,7,5,-10,-10,7,10,-4,3,10,5,-10,7,-2,7,-7,6,4,3,-10,6,10,5,7,-1,6,2,-5,-7,1,4,10,3,1,8,8,1,10,-4,-4,3,5,5,4,6,4,3,-9,-8,2,-4,-1,-10,10,9,-1,1,8,5,-8,7,-10,-5,-7,-9,-10,9,7,4,5,1,-6,1,10,7,-4,7,-7,3,9,4,5,3,-5,1,-8,6,-5,-9,-1,-1,3,7,4,5,-1,3,4,-2,-10,-9,-3,4,1,3,4,-7,3,8,-5,1,3,4,9,-8,-8,9,3,-9,1,-6,-5,-1,-6,-8,-1,7,-2,-1,8,1,-6,7,-6,-4,8,1,3,-4,10,-2,-10,6,3,-2,-9,-4,3,-6,8,7,2,-9,-9,-5,-4,3,7,5,-9,10,-10,-4,-8,4,-2,1,-9,8,3,9,10,1,-3,9,1,-1,6,6,8,9,10,-2,10,9,3,1,1,-5,8,10,3,-2,9,-2,-9,8,1,-10,-10,-4,-6,8,-9,-4,7,8,-5,9,-8,2,-2,-9,-10,3,8,5,-4,-3,-8,-2,3,4,-8,-6,6,6,-8,-2,-3,-2,-4,-7,2,3,-9,4,3,-1,-3,-1,-7,-8,3,-5,4,-1,6,9,8,-7,-5,10,-3,2,10,-6,4,1,-5,-8,-6,9,5,-10,-8,-1,-2,-4,3,-10,3,7,-1,5,-7,-6,9,4,3,-8,-5,-5,-9,-1,-7,5,-6,-7,3,4,4,2,3,-9,2,-7,-10,3,3,2,-4,2,-1,8,1,-3,-9,-8,3,-1,9,-3,2,8,9,-7,-9,4,8,-4,-3,1,2,-6,-1,1,7,-8,-9,6,8,-10,4,9,-5,10,9,-9,3,9,2,-3,-3,8,7,1,-9,4,-6,-5,7,-8,9,9,-5,-7,10,8,10,7,-1,-5,-1,4,-4,-10,-6,-7,-8,-8,-7,-9,-4,-10,2,6,-8,-4,1,-6,-8,-6,-7,-9,3,7,2,-7,-3,-3,-6,8,9,3,-9,7,-7,4,-9,-6,-10,-2,-9,1], dtype = "uint32")#candidate|1854|(756,)|const|uint32
call_1853 = relay.TupleGetItem(func_456_call(relay.reshape(const_1854.astype('uint32'), [9, 6, 14]), relay.reshape(const_1854.astype('uint32'), [9, 6, 14]), ), 0)
call_1855 = relay.TupleGetItem(func_460_call(relay.reshape(const_1854.astype('uint32'), [9, 6, 14]), relay.reshape(const_1854.astype('uint32'), [9, 6, 14]), ), 0)
func_1195_call = mod.get_global_var('func_1195')
func_1199_call = mutated_mod.get_global_var('func_1199')
var_1857 = relay.var("var_1857", dtype = "uint32", shape = (420,))#candidate|1857|(420,)|var|uint32
call_1856 = relay.TupleGetItem(func_1195_call(relay.reshape(var_1857.astype('uint32'), [7, 6, 10]), relay.reshape(var_1857.astype('uint32'), [7, 6, 10]), ), 0)
call_1858 = relay.TupleGetItem(func_1199_call(relay.reshape(var_1857.astype('uint32'), [7, 6, 10]), relay.reshape(var_1857.astype('uint32'), [7, 6, 10]), ), 0)
output = relay.Tuple([call_1851,call_1853,const_1854,call_1856,var_1857,])
output2 = relay.Tuple([call_1852,call_1855,const_1854,call_1858,var_1857,])
func_1863 = relay.Function([var_1857,], output)
mod['func_1863'] = func_1863
mod = relay.transform.InferType()(mod)
var_1864 = relay.var("var_1864", dtype = "uint32", shape = (420,))#candidate|1864|(420,)|var|uint32
output = func_1863(var_1864)
func_1865 = relay.Function([var_1864], output)
mutated_mod['func_1865'] = func_1865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1869 = relay.TupleGetItem(func_1468_call(), 0)
call_1870 = relay.TupleGetItem(func_1469_call(), 0)
func_1670_call = mod.get_global_var('func_1670')
func_1675_call = mutated_mod.get_global_var('func_1675')
var_1882 = relay.var("var_1882", dtype = "bool", shape = (312,))#candidate|1882|(312,)|var|bool
const_1883 = relay.const([[-5.973165,-8.979968,-5.357974],[3.994629,5.767668,-9.556972],[4.763914,-4.446330,6.585962],[-4.429151,-6.073553,-3.558491],[-2.253295,7.844575,-9.397191],[-4.425359,-7.753169,-8.551551],[-1.493205,5.868018,8.386370],[4.990311,2.922411,-5.701791],[-8.325485,5.415490,2.495604],[-9.390983,0.841266,0.523490],[5.814849,-5.672286,-7.674082],[-5.795213,-8.227286,-3.651521],[7.588238,9.145110,-5.232860],[7.387198,-4.658658,5.552709],[-6.893689,3.503618,5.929188],[-6.822876,-5.584861,-8.871780],[9.693528,6.269815,-6.511969],[-7.454535,6.232000,-1.936291],[3.228278,-7.687117,-7.284122],[-5.129407,4.537494,-8.953795],[-9.411096,5.461110,7.648518],[4.311115,-6.297340,4.172921],[4.714326,-2.818718,4.522122],[-5.431300,6.480971,-8.080491],[-1.260890,-8.500446,-4.335918],[-7.282119,6.107797,5.720528],[8.554308,-8.481913,8.347345],[1.026963,3.787048,2.078648],[-8.756029,8.824003,-5.264068],[-9.585245,-3.601494,-4.091006],[0.140263,6.247046,-4.552379],[-0.244713,-8.543566,8.230892],[-1.914660,-8.423771,-6.863900],[-1.732657,3.819743,-1.133545],[6.933776,-3.337324,-4.311030],[-7.946910,2.827230,-4.307815],[-1.899312,4.733090,7.400340],[-4.314545,5.242358,6.531478],[-8.826786,6.221607,-4.468635],[1.040223,-3.186285,6.511944],[-2.428206,-0.165687,-3.330544],[7.071112,6.029430,4.807109],[5.240068,-4.759097,-1.727484],[-7.263149,1.896356,-5.123274],[-4.700431,0.264569,8.015108],[4.256703,-2.541072,4.038064],[-7.444559,5.802440,0.271214],[5.025576,-4.367232,-4.109269],[9.058981,9.232434,-2.019929],[-6.623791,1.104395,4.942553],[0.298457,-6.702714,-2.197315],[-9.853048,-1.481426,8.676655],[-9.335610,-6.774542,-0.378124],[5.345406,-5.645582,5.366535],[-3.548899,4.782026,5.299654],[-8.247451,5.611087,1.979818],[-3.780900,-1.804359,1.281579],[-2.725239,-1.039962,3.338100],[5.559357,0.336015,1.239390],[-3.801275,-8.316937,-9.291345],[-8.534120,-0.053567,9.729776],[-7.327897,2.040430,4.012878],[-8.530185,-6.757080,-1.853645],[7.875513,-1.066995,1.069597],[6.463503,7.170124,3.018140],[-0.413399,-8.851510,9.030469],[-5.710775,9.577234,0.916903],[-9.314027,2.226885,-5.214589],[-0.612209,0.340424,-4.968420],[8.127955,6.641947,-3.126806],[-6.612596,-0.322250,1.677056],[-8.909381,1.157260,-5.707314],[-2.619763,-7.854315,7.186415],[-7.925412,4.546953,1.691169],[-4.518600,7.505824,3.892684],[8.159431,-0.655861,1.216957],[5.724839,3.906701,1.218110],[6.848306,8.406713,1.669751],[6.840469,-8.307023,-8.748068],[-1.219457,-3.293127,-1.224809],[8.175524,9.850654,2.447859],[-6.387994,8.313186,-7.149484],[9.168224,-0.815101,3.138474],[5.727470,0.770769,4.593089],[5.750297,1.608308,-6.292559],[-0.863176,2.847560,8.425074],[-2.460918,2.856019,-8.014755],[-4.618830,-1.206892,-3.630200],[2.308450,-9.147050,3.395729],[-5.866532,6.750304,0.009267],[4.555851,-6.012669,3.792625],[2.660174,5.151264,8.622491],[-6.942955,3.683729,8.958615],[8.261952,9.086218,7.977778],[0.639802,-1.999189,4.125565],[-5.565459,9.353149,0.569239],[4.536000,-9.911116,-0.274628],[-2.566069,1.232224,7.421332],[1.957215,1.413488,-7.139388],[1.902005,-3.887792,-9.523064],[4.822971,-1.196126,2.189909],[-8.169804,4.619976,8.935243],[-9.192045,-5.748339,5.103280],[-2.984212,-9.275203,-6.094351],[2.367893,6.159129,4.584866],[2.896145,-4.173176,4.999953],[-1.222327,-2.083494,-1.596610],[2.109816,8.846785,-9.082044],[0.504153,8.536452,3.811516],[-0.214026,-6.497877,-7.083264],[8.049097,-3.261563,-7.349252],[-9.367506,0.217543,-3.616939],[-1.441873,9.027351,8.269540],[4.165868,-0.327574,4.141378],[-9.317619,-3.215430,9.998910],[-5.641485,1.820015,-8.204572],[-9.870595,-6.685228,-6.534580],[8.943752,-1.046167,-8.494125],[-6.713944,-8.889491,1.819781],[-9.157122,0.655220,-5.586475],[-2.578542,1.887786,3.638841],[2.636002,-1.899661,-1.335896],[-3.570943,-0.048417,-7.893131],[-9.257097,-3.671155,9.505267],[-3.396144,1.676355,2.285401]], dtype = "float32")#candidate|1883|(125, 3)|const|float32
var_1884 = relay.var("var_1884", dtype = "float32", shape = (196,))#candidate|1884|(196,)|var|float32
call_1881 = relay.TupleGetItem(func_1670_call(relay.reshape(var_1882.astype('bool'), [1, 312]), relay.reshape(const_1883.astype('float32'), [375,]), relay.reshape(var_1884.astype('float32'), [196,]), ), 8)
call_1885 = relay.TupleGetItem(func_1675_call(relay.reshape(var_1882.astype('bool'), [1, 312]), relay.reshape(const_1883.astype('float32'), [375,]), relay.reshape(var_1884.astype('float32'), [196,]), ), 8)
var_1886 = relay.var("var_1886", dtype = "float32", shape = (125, 3))#candidate|1886|(125, 3)|var|float32
bop_1887 = relay.maximum(const_1883.astype('float32'), relay.reshape(var_1886.astype('float32'), relay.shape_of(const_1883))) # shape=(125, 3)
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
const_1892 = relay.const([-5.646888,-3.352045,5.982021,-4.917692,3.231212,-6.973171,3.370471,-4.021725,9.183680,-1.845802,-6.009809,8.411246,-8.467807,-9.425622,-8.998285,2.479591,-6.658099,5.501855,3.761529,3.354768,1.474115,9.090378,8.735950,3.569865,-9.040967,-2.981855,-7.741121,4.576925,1.537921,1.142619,2.981209,3.260775,-2.944266,9.643247,-3.480585,-6.554107,-4.340672,-3.747658,8.234515,3.505239,6.802194,-7.809968,2.960204,-9.921603,-3.243377,-9.510808,-3.472475,0.907687,2.289378,-1.473142,-7.242281,1.726273,-1.260136,-1.938601,8.529717,3.312841,-7.837035,5.844910,-4.697909,-1.742686,2.595916,-6.865221,-3.142458,-0.494325,7.505612,6.343049,8.933992,-4.144014,-8.699066,3.666398,-7.413472,-4.219408,-3.001316,-2.766249,6.182311,3.950525,-6.184131,-2.202734,-2.712865,-0.144954,2.116091,9.850877,-2.408975,-4.731884,-0.297658,0.358089,0.308960,8.483254,1.219605,-7.676966,3.137148,5.961147,8.582034,-3.406468,-5.321758,8.100964,3.015980,-2.690408,7.628832,-7.887760,-3.171687,-4.109603,-1.262085,1.802317,-1.000288,-1.172458,-7.709606,6.137377,-9.029926,1.131756,-7.059780,-2.403296,6.401618,2.233294,-0.484410,-3.404701,2.036923,-6.763006,8.844948,1.332568,6.127597,8.314503,0.718864,9.136583,-3.755636,-7.854355,-7.341938,-1.796623,5.067521,-3.603872,-7.732798,-5.714808,2.871890,2.998527,5.336871,-7.357065,-3.319543,-1.777707,-4.154819,3.530289,-7.502876,2.165265,6.823987,-4.348817,-1.895005,-4.774337,8.145117,-9.232329,7.386177,1.314760,6.810227,5.782055,8.311353,2.015744,2.672380,6.461684,2.825294,-5.144949,-8.281012,7.378096,8.774098,5.848643,9.366687,-1.251651,4.431754,7.070300,4.330598,8.912115,-7.541894,0.723934,9.229840,1.166955,8.791096,6.387151,-8.555791,-9.477623,-0.057746,-3.385820,-1.122203,-2.726280,7.950324,-3.022257,-3.546579,5.120866,-7.751733,4.284672,5.970839,-2.970934,-9.696625,6.814127,7.875174,5.095878,8.182255,4.473261,-0.499407,-6.783486,8.287724,-5.906887,-0.871952,-7.874442,-0.794519,-7.230955,-1.350501,2.003052,6.527327,8.184899,-7.549586,-8.402243,-1.401755,7.110867,-8.228008,-9.163645,-7.043333,6.571841,1.001516,-0.588519,6.163105,6.640264,3.473635,1.775095,7.264398,7.651713,8.989316,-6.960980,4.051790,-4.006312,8.374797,8.303989,3.384158,-0.099929,-2.778358,6.805419,7.253623,3.468474,4.583013,8.187388,6.669458,-4.128068,2.859040,6.368555,8.743486,-3.801675,-5.688804,-9.364460,-0.183776,-1.419695,5.454055,3.854538,5.884381,-9.021333,6.275418,0.969447,-7.456654,2.805754,-7.436201,3.149830,-8.319044,-0.525006,7.843890,-6.918453,3.793980,1.369284,-0.878331,-6.853111,3.255040,-4.805326,-2.514433,-6.558499,-1.984151,-9.833719,-5.658654,-1.035837,1.769475,8.588538,6.873001,6.466373,7.132039,-7.441247,2.560649,6.972791,7.147493,9.406239,0.664868,-0.683457,9.579481,8.511853,-5.822243,-9.460677,-4.770266,0.555305,5.444646,9.095289,3.562902,0.253358,-6.823812,9.143896,-7.514771,5.517759,-8.335938,4.804207,3.157392,6.375165,-9.293062,3.794190,-6.729716,6.416775,7.012425,-4.624213,-4.548998,4.280718,-9.178322,-6.249191,9.688100,-3.363950,1.672971,7.164477,-5.813767,6.901688,-0.718427,-5.678207,3.166751,5.689600,-0.421565,3.979638,3.795662,4.474273,2.565121,-1.804064,7.008313,9.163024,8.223739,8.686948,3.570831,-5.177620,-1.288501,-5.009205,-5.147548,-0.336265,5.729303,6.314228,0.534721,-5.744586,-1.846138,2.738703,-4.863462,2.024704,-5.982193,6.266123,3.464699,7.382630,-6.766640,8.901334,1.652331,5.738539,9.828254,1.179827,1.579302,5.614176,8.080045,-3.570485,0.823021,4.989936,-8.831130,-9.414314,-8.731366,8.800810,7.655527,-7.647089,3.541664,-3.708847,-6.376343,0.697697,0.759303,-0.427682,9.665407,-0.119475,-4.720865,-4.888868,4.595454,-8.017765,6.761583,-3.303854,-2.381339,6.381068,5.869577,-7.909710,-4.494215,5.253377,-5.460992,-5.648165,-7.478833,0.038451,-1.435516,-0.649596,-6.474104,2.656929,-2.188218,-0.589670,-1.445575,-4.223573,9.809173,-3.082986,-3.880632,-8.387747,8.264745,0.277718,4.755198,-7.276917,-5.217227,3.948210,4.095381,-5.074631,3.181248,-9.801141,0.311780,8.407386,5.146464,-0.751335,2.921825,-2.525770,7.045270,5.078576,-3.379436,-8.463899,-9.982947,2.822544,-9.611237,1.558797,5.945920,-9.693080,4.920207,9.405508,0.974195,-2.010708,-1.812646,0.616726,-2.658023,3.135199,-0.378075,-1.782636,4.632684,-6.529230,4.795904,6.113275,0.884747,0.526239,7.260021,0.377084,-3.460180,-8.520670,-8.879038,-2.978830,-8.661051,-0.171119,3.795259,7.267966,-8.736587,7.895489,5.193618,-1.631046,-9.443209,1.188406,3.919531,-8.352070,5.829030,-4.198763,-9.629470,-6.029518,-4.681898,4.540894,7.475719,5.022235,-1.897858,-0.287277,0.819970,-9.388891,-8.082458,-0.969972,-5.554594,-4.285819,0.878021,9.696016,5.608831,-3.238738,-7.587966,-1.704046,-3.426897,-4.293751,-3.633728,-1.758546,5.255539,5.732675,4.323738,3.543061,-6.569076,2.090966,1.141124,6.212588,-1.467126,-1.442768,5.153511,3.778673,-5.058670,-3.336605,-5.715564,4.381490,7.050111,9.087663,-6.925138,-4.735154,-1.793117,-4.148077,-4.544656,7.490508,8.352246,-3.498291,-7.864391,-6.573405,4.230910,3.749428,5.065403,8.845842,3.927574,0.324804,-2.010140,-9.702438,7.879287,-7.255468,-3.782741,0.862117,8.825488,-4.316368,3.727196,7.289097,5.762136,-0.504963,6.984150,2.707229,-7.550268,-6.313314,-9.360322,-0.746343,5.687960,7.772280,-7.314844,6.547604,-2.382167,8.295294,-3.430025,-9.005957,2.015194,-4.039214,9.993321,8.784822,4.836538,-2.529020,-9.865951,5.797145,1.766276,8.435276,3.645552,7.117252,-4.511642,5.787137,6.725334,-9.452757,-9.075172,9.965694,-2.779001,-1.769505,-2.555633,6.848692,9.176148,-8.865751,7.809247,-1.814531,-3.643799,1.153988,-6.869853,1.518984,-2.531288,-2.592001,0.748639,-4.736055,-5.895715,7.790569,6.442762,5.135815,1.101349,9.239465,6.940592,-8.209184,-3.191234,-9.338128,-3.807393,-2.065729,5.483866,-3.298794,4.936344,-0.758068,9.469459,-3.249506,-1.670137,9.965023,-6.003964,-9.840125,-5.765071,2.095842,-8.068291,7.064148,-5.917747,-3.178248,-4.240477,-3.175321,8.504646,4.795010,-9.170537,-2.612554,5.992979,-4.859859,-3.727410,5.405053,9.294949,7.017549,-7.446523,8.944945,1.306659,-9.635660,-6.975023,1.310638,1.987702,-6.288409,-3.958706,-9.347201,-9.368683,4.667239,6.656875,1.862557,-1.242444,9.966878,2.200821,6.988560,-9.624008,-9.448259,-8.659141,-4.642606,-2.047595,7.559845,2.036499,-4.385999,-1.569807,7.897549,-1.493176,2.891136,3.891745,4.186805,0.328638,5.597070,-8.405638,-4.701194,1.893990,-4.595958,5.186625,3.492059,6.754769,-0.666992,5.467333,8.206015,-2.775475,-4.569263,2.706390,-6.591188,-1.553400,-1.642133,5.054993,9.432470,-5.244586,-2.275325,2.926208,-3.270519,9.144247,4.088204,-6.922042,-6.008160,9.992803,4.192314,-7.308694,1.472585,8.707284,2.412569,-0.030776,-4.126259,-5.320665,-0.023626,-9.597599,-0.866922,0.168455,-8.574121,-4.723829,-2.316282,-9.701027,6.450600,2.137080,7.351708,-8.155851,2.857442,-6.958555,5.102006,-8.798139,-5.930538,1.230859,-3.146282,-3.223142,-4.438132,7.817348,-2.317096,-1.794121,-7.194507,-3.795495,1.719650,-3.376691,1.665840,-9.192337,8.822611,-5.458669,4.824492,-5.059797,-0.331843,-3.840581,5.227794,3.845120,4.649155,3.954102,4.603328,-9.214428,9.330608,9.463095,1.052935,3.695103,-5.536988,-3.873284,3.864059,5.138588,-9.250266,5.777840,4.004323,5.783700,-5.096199,-0.803108,5.918369,-8.705840,5.018579,3.176437,5.638356,1.730528,4.316711,8.815883,-7.929344,-0.719713,2.217567,1.364711,3.137572,9.580292,6.979908,2.904706,-3.088426,8.493447,-1.217710,-4.648077,-0.241124,1.029756,-0.137248,-8.999749,-4.166350,7.367591,-6.542733,-3.948250,1.196265,-9.270754,-9.592078,5.344867,8.535639,-3.065967,-1.020390,-5.531804,9.970433,-4.169952,-2.230272,-5.098403,9.424822,-0.853153,-2.926078,0.556223,1.509683,7.789178,-7.023565,-3.040873,2.470124,1.720437,-6.280198,-4.901944,1.287629,0.991796,-1.927967,-8.189301,2.575247,0.051631,-0.887775,5.699193,-4.717060,0.097477,-2.422279,0.310731,-6.572312,6.295292,-2.493046,-3.179638,-4.573259,0.318133,-5.416670,-3.358903,6.658537,8.540194,1.186178,6.988864,2.661405,-9.529568,-7.011644,-7.490312,-7.039598,5.457009,2.443219,-5.536645,8.725190,-5.619829,-5.054328,4.436394,1.418861,6.287769,-0.562490,-4.709912,7.130237,3.434740,-0.958042,-7.064517,9.328785,4.143660,-3.249013,-5.679329,-7.424830,5.747200,4.156436,-7.258021,8.974920,8.404483,-8.537193,-2.951080,-7.025064,6.440084,4.839006,6.823628,-5.219491,2.560719,8.373462,-7.574777,7.444189,-1.351885,9.143513,5.334862,-8.733165,-2.235995,-2.226880,-5.305224,-4.502544,-9.167521,8.189532,-5.286301,-6.482827,-5.836391,2.491064,0.095963,-9.935210,9.069279,-5.488015,7.805547,-1.030693,0.183953,-8.126958,2.272306,-2.103532,-4.410542,-6.625684,0.493578,-9.653875,-4.635034,-3.067259,-6.307910,9.843716,-6.134889,-4.443982,-9.144138,8.497224,-0.657038,3.389152,-9.209192,1.590922,0.231544,3.370840,-6.932586,3.125934,8.918172,8.266622,-7.271297,-2.648631,-8.276785,-6.821447,7.476595,6.216174,7.824087,9.209617,-6.255315,-7.446535,-6.598228,-0.850072,-9.246215,9.986996,5.316957,4.170369,9.127003,9.455997,0.927923,-4.049639,6.337431,-5.493783,-6.008163,0.349421,-2.004127,9.575729,0.528985,6.353131,5.976368,-8.539848,4.692257,-3.224708,5.659418,2.177849,-5.005513,5.676478,2.578538,-0.241971,7.347858,-2.512880,-5.418456,1.939746,9.447125,2.982826,5.981089,2.480409,7.202029,-5.539534,1.639417,0.745175,7.846341,-9.135888,-1.807329,7.190288,-0.671717,8.279969,2.330864,-6.189346,-4.929115,8.650334,9.073219,-2.972042,-0.793700,0.030009,-7.983975,2.655688,4.046497,-9.756504,9.404538,-2.995097,8.763695,-3.036908,-8.258887,5.627959,-0.309811,-3.518700,-5.191747,-8.538392,1.774305,-8.357318,2.282622,-2.009683,9.337140,-4.259991,-5.117337,-9.420877,8.612978,-7.666347,-5.163602,-7.033320,-2.180587,-5.452880,7.378254,4.809975,1.968899,8.509288,-2.276234,1.870241,-9.157276,-0.772871,-4.139954,5.243863,1.538069,0.152400,9.282765,-8.853692,1.966524,-2.468722,7.043445,8.352306,-5.448321,1.194230,-7.071531,-3.403175,2.931051,4.870045,-4.972569,6.891434,-7.223342,5.330237,-9.120656,5.525215,-3.772629,-2.237064,-6.624003,-3.817015,-7.535601,7.336104,3.574218,-7.018560,-9.404240,-9.400801,-8.349469,-8.544626,8.477269,-4.307237,1.531986,7.522776,-1.694453,9.013174,0.630701,2.400080,-3.309590,8.312564,-6.270053,-8.644259,4.620513,2.081370,-1.502451,0.397917,1.597618,0.364919,6.535432,6.504000,-3.076710,-1.170804,-3.329012,-5.184653,-1.214074,-9.733367,6.622493,3.702514,-1.149917,-3.936473,-0.877101,-2.843349,2.861014,-0.598245,-9.358751,-1.334358,2.802828,-9.556742,-5.556266,-3.835787,-3.055126,-8.878219,1.685799,1.358099,-1.769753,-4.300086,0.174954,9.759577,-3.547218,6.748339,6.537713,8.431651,0.467186,-5.410896,-0.371014,-6.693214,-0.961562,-3.342456,1.955572,2.948234,4.323661,-7.776452,-0.305080,-9.426988,-2.414402,0.163046,1.842683,-8.607672,-5.475552,8.787304,2.286221,-8.827589,-6.502806,5.689477,-4.983375,3.300662,-7.170380,-5.471348,8.401246,6.922399,-6.826284,7.396169,7.664626,-8.580002,8.282964,8.309405,-6.248034,-5.296472,-7.265969,-4.672445,-5.966352,3.076404,1.071814,9.293831,-7.506314,-4.343045,5.225701,-0.825660,3.331297,-8.727636,-5.028073,6.314924,9.561385,2.813258,6.674632,-5.401289,-7.051060,-4.859257,0.629905,-9.948471,-8.808842,9.740678,8.675324,7.131386,-7.255230,3.542665,8.887191,6.028537,-2.000076,-8.556409,-1.713395,7.287360,-6.257908,7.065073,5.969987,4.592704,-1.443116,4.897094,2.074237,0.449461,-7.161429,-6.331618,9.784546,7.125859,1.878973,-2.889349,-7.568020,-9.928183,9.897653,0.008533,0.545856,2.438111,0.575242,9.163224,3.265153,-1.493113,7.202895,4.108730,5.204159,-6.395715,-6.012983,-1.154139,-8.251375,-1.766772,-5.768007,-9.330459,-3.694764,-3.427894,-8.796325,-2.554760,-2.005655,-1.172080,-7.426635,-7.998266,-4.863158,-0.291727,6.870624,1.413541,2.368151,-1.511967,8.753911,4.712204,-2.887470,1.538655,-1.074222,-2.395633,8.226846,-6.879613,-3.895958,3.230405,-5.337207,1.401894,-6.698092,0.056361,-7.773024,-4.165874,2.599190,-6.159673,3.505036,-2.800595,2.105301,-7.068689,5.810092,-3.090699,4.095581,-1.124139,5.800931,-3.849307,8.840063,2.306591,3.695374,3.845241,-5.926336,-4.615327,-8.147211,0.335912,4.854353,-4.112061,-7.972324,-3.488823,-0.445103,7.607073,-8.481692,2.883617,-8.146927,-6.467524,-5.138423,-4.701483,7.018687,-7.172069,4.035118,3.828211,8.564391,-3.119263,8.213118,-6.501770,9.929358,0.290542,8.791822,7.993405,-2.510555,9.685312,-8.248690,5.969256,-0.501457,6.180521,8.665570,-8.817681,-3.557192,-0.515543,8.149575,0.082328,7.564044,-1.387709,7.109548,-1.201766,7.601674,6.456345,8.735073,3.896739,-0.990084,4.121941,-7.373357,4.379009,-0.125886,-1.102642,-5.064507,8.330563,-5.322735,-0.549119,0.724310,6.051320,-5.915011,-1.169939,6.351606,0.940986,-5.262325,7.434866,-0.154698,1.477377,9.604347,-2.250376,4.921941,2.025035,3.507564,-7.705472,-1.245262,-2.409488,-1.680807,-6.126963,-9.532494,1.008105,-5.054428,2.038983,8.254719,-6.628621,-5.293358,-0.285482,-4.151109,-8.689868,5.698490,-2.913113,-5.349726,-9.523783,-3.780710,5.904362,-9.015288,9.933088,2.035667,8.648477,-1.355895,7.301998,-1.480276,-4.791384,1.105548,2.378879,5.821897,-3.478699,-8.302727,-3.997316,5.240363,8.429848,0.130190,6.275900,-7.000707,0.636028,-2.499767,3.959793,6.871599,5.012917,-9.927923,5.213839,-4.622769,-7.591894,2.224457,4.528698,-4.240780,-1.372362,-8.941933,-8.811786,7.033338,0.954823,4.081906,-6.544518,-2.710911,9.234622,-2.779973,7.407336,9.451699,2.179482,-7.202168,8.705778,-1.335567,-6.138374,7.771476,5.577576,3.010483,-0.916353,9.482296,0.099709,-3.574912,1.644385,4.842593,-3.838867,-9.762373,7.204841,-1.782736,0.054668,4.323355,9.803844,-3.309290,2.887818,7.680109,-0.634420,-3.037490,7.944274,1.137766,-8.654255,3.398485,6.713313,-1.491165,-1.219541,6.977177,7.446161,-0.338447,-0.303244,7.965387,-5.582820,6.814692,-7.990059,-4.651671,2.738439,-3.603315,-6.296302,-5.336284,8.751305,9.783324,8.968295,8.823110,4.000226,-5.921332,-2.434240,3.176476,-7.115970,-4.761288,-0.799885,-1.354841,-4.273819,2.079599,-7.826796,-5.190364,4.205285,-1.488445,-1.064701,7.437691,1.509201,9.285836,-3.103374,-4.389499,-7.570302,4.319126,3.812293,-7.991321,-1.604812,-3.392613,0.532370,-5.541663,-3.363941,0.823259,-1.747203,-1.901594,-2.942570,4.110819,-5.632560,-5.482924,-5.323237,-9.172018,1.732111,0.558452,-0.129928,5.616108,-4.991018,-0.422158,-7.402160,-2.945502,3.335229,-6.660449,-7.191427,-3.170433,7.246170,2.820134,-6.531626,5.249994,-0.314404,4.329935,-8.963373,-4.688573,-0.338905,-0.435320,6.477831,4.975350,9.031878,-1.539676,6.514120,2.879064,0.070138,0.672268,-9.042664,-8.320360,8.918504,7.426269,-6.737151,7.982270,7.250096,4.252850,-2.007617,7.684883,-3.903825,4.403082,-4.066380,-1.593155,-0.668761,6.200124,-8.238614,1.876830,8.251382,1.145095,4.309923,-3.089143,-5.560618,3.390665,-8.136805,0.759437,-8.418846,-3.716998,4.148701,4.502433,-0.995176,-9.242376,-7.563738,1.013875,-7.319414,3.812380,2.483017,-4.704529,9.618787,-2.405009,-9.363273,-6.079433,-1.774965,4.692809,1.095691,5.943912,3.479015,-4.228230,-9.812296,1.584516,-9.428981,-8.600782,-7.804603,-8.884332,-3.788597,0.368387,-0.689451,6.231975,5.278184,-7.544147,9.906779,-4.180683,8.748298,-5.079842,-3.334572,-6.596817,-8.390935,-1.916543,-2.480331,-9.588573,7.507923,6.445678,9.464515,1.113543,-8.078557,5.890628,8.864384,-6.703039,-7.543677,-1.158945,9.562903,-3.653249,1.642687,-8.837017,5.007713,-0.988522,2.728552,-6.005308,1.713828,0.095731,3.651118,7.161565,-0.494337,2.389449,2.801316,-2.693392,-1.712132,-4.587958,7.230649,8.892890,-7.965759,-9.129788,-8.610097,-9.799556,-2.535225,8.900196,3.857102,-7.534206,-1.459185,-0.007785,-8.635197,-1.947008,5.252512,-2.318232,-4.917351,3.738512,-9.188461,-3.170808,-3.556538,-4.703926,-6.330505,-1.198731,-8.424081,6.394861,-6.605254,-1.126213,-6.041243,-4.948642,-6.504927,6.745617,-0.620577,2.366094,-6.390914,8.633928,-8.569188,3.290984,6.711880,-2.753721,-4.723885,8.412629,-6.614756,5.492242,-0.065364,-3.311611,1.337799,1.666505,6.084947,-4.352973,-2.064561,-6.822374,3.959151,7.555143,-6.046194,-7.782298,-5.129181,0.541773,-4.411898,0.550201,-3.196924,3.462793,5.264183,-9.234679,4.465582,-1.501003,-0.578420,-2.009812,-1.133781,0.256975,-1.878294,-2.253104,6.911751,6.010608,-9.417115,-6.485622,-4.864441,-6.046290,1.851295,-8.844559,6.728426,-9.268650,-8.980556,7.814450,9.326313,1.316888,0.362965,-3.401296,1.531091,-3.401804,-5.716621,2.087540,-7.968100,2.008457,-2.250913,-8.622865,-6.187227,7.577522,0.128898,-9.380623,1.962174,-3.239916,2.552749,1.311321,-8.610790,-0.690091,5.439841,-6.775113,-7.062684,0.473365,1.246966,-9.722847,-5.010133,-3.612178,8.491616,-6.742426,-0.420633,7.175215,3.956737,5.979153,-9.669414,2.400693,0.087460,6.450695,3.085956,-9.388178,-7.618494,-2.571588,-9.866392,-2.156682,8.204475,1.754234,-9.737644,8.119017,2.216514,5.679206,1.279685,4.121507,-6.803598,-7.924615,2.020538,0.408866,8.879315,6.278012,-8.677187,4.715713,-5.864180,-9.029945,7.764790,8.471377,-0.120338,-1.479933,2.566223,-2.313972,-0.318502,6.767011,2.203271,8.843679,-7.453185,-1.151767,9.980455,1.772614,-3.061795,-4.465021,0.805783,5.327804,-6.470247,1.365268,9.476732,-6.576423,-4.244954,-0.036815,-2.493048,8.207567,-3.619495,5.053160,5.007757,4.448882,-1.482938,-3.224202,3.549589,5.780286,2.477296,4.671266,-7.661626,6.866651,2.390509,-3.012400,0.080838,7.504367,-9.572912,7.304120,9.802919,9.673289,-5.050251,3.618179,6.188567,-3.825701,-4.398793,-0.608467,7.017966,2.385648,2.665879,-4.148780,3.929530,-7.106691,-3.299099,-5.136463,-1.099775,-9.600802,8.231449,4.652952,-1.824807,0.772423,4.897513,-1.134083,6.107555,-1.652615,9.250611], dtype = "float32")#candidate|1892|(1820,)|const|float32
call_1891 = func_336_call(relay.reshape(const_1892.astype('float32'), [13, 10, 14]), relay.reshape(const_1892.astype('float32'), [13, 10, 14]), )
call_1893 = func_336_call(relay.reshape(const_1892.astype('float32'), [13, 10, 14]), relay.reshape(const_1892.astype('float32'), [13, 10, 14]), )
output = relay.Tuple([call_1869,call_1881,var_1882,var_1884,bop_1887,call_1891,const_1892,])
output2 = relay.Tuple([call_1870,call_1885,var_1882,var_1884,bop_1887,call_1893,const_1892,])
func_1897 = relay.Function([var_1882,var_1884,var_1886,], output)
mod['func_1897'] = func_1897
mod = relay.transform.InferType()(mod)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mutated_mod.get_global_var('func_1897')
var_1899 = relay.var("var_1899", dtype = "bool", shape = (312,))#candidate|1899|(312,)|var|bool
var_1900 = relay.var("var_1900", dtype = "float32", shape = (196,))#candidate|1900|(196,)|var|float32
var_1901 = relay.var("var_1901", dtype = "float32", shape = (125, 3))#candidate|1901|(125, 3)|var|float32
call_1898 = func_1897_call(var_1899,var_1900,var_1901,)
output = call_1898
func_1902 = relay.Function([var_1899,var_1900,var_1901,], output)
mutated_mod['func_1902'] = func_1902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_1963 = func_1391_call()
call_1964 = func_1391_call()
output = call_1963
output2 = call_1964
func_1967 = relay.Function([], output)
mod['func_1967'] = func_1967
mod = relay.transform.InferType()(mod)
output = func_1967()
func_1968 = relay.Function([], output)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2051 = relay.var("var_2051", dtype = "float64", shape = (4, 8, 1))#candidate|2051|(4, 8, 1)|var|float64
uop_2052 = relay.log(var_2051.astype('float64')) # shape=(4, 8, 1)
bop_2054 = relay.bitwise_xor(var_2051.astype('int8'), relay.reshape(uop_2052.astype('int8'), relay.shape_of(var_2051))) # shape=(4, 8, 1)
bop_2058 = relay.divide(uop_2052.astype('float32'), relay.reshape(bop_2054.astype('float32'), relay.shape_of(uop_2052))) # shape=(4, 8, 1)
func_1863_call = mod.get_global_var('func_1863')
func_1865_call = mutated_mod.get_global_var('func_1865')
var_2064 = relay.var("var_2064", dtype = "uint32", shape = (420,))#candidate|2064|(420,)|var|uint32
call_2063 = relay.TupleGetItem(func_1863_call(relay.reshape(var_2064.astype('uint32'), [420,])), 3)
call_2065 = relay.TupleGetItem(func_1865_call(relay.reshape(var_2064.astype('uint32'), [420,])), 3)
bop_2069 = relay.logical_or(bop_2054.astype('bool'), relay.reshape(bop_2058.astype('bool'), relay.shape_of(bop_2054))) # shape=(4, 8, 1)
uop_2084 = relay.atanh(bop_2054.astype('float64')) # shape=(4, 8, 1)
const_2096 = relay.const([[[True,False,True,True,True],[True,True,False,False,True],[True,True,True,True,True],[False,True,True,False,True],[True,True,True,False,True],[False,True,False,False,True],[True,False,True,False,True],[False,True,False,True,True]],[[True,False,True,True,True],[False,True,False,True,True],[False,True,True,True,True],[False,False,False,True,False],[True,False,False,True,False],[True,True,True,False,False],[False,True,False,True,False],[True,False,True,False,True]],[[True,False,False,False,True],[True,False,True,True,True],[False,True,True,False,False],[True,False,True,False,False],[False,True,True,False,False],[False,False,False,True,False],[False,False,False,False,False],[True,False,True,True,True]],[[False,True,False,False,True],[False,True,True,False,False],[True,False,True,True,False],[True,True,False,False,False],[False,False,True,False,False],[True,False,False,False,True],[False,True,False,False,True],[True,True,False,True,True]]], dtype = "bool")#candidate|2096|(4, 8, 5)|const|bool
bop_2097 = relay.logical_xor(bop_2069.astype('uint64'), const_2096.astype('uint64')) # shape=(4, 8, 5)
func_205_call = mod.get_global_var('func_205')
func_208_call = mutated_mod.get_global_var('func_208')
var_2107 = relay.var("var_2107", dtype = "float32", shape = (196,))#candidate|2107|(196,)|var|float32
call_2106 = relay.TupleGetItem(func_205_call(relay.reshape(var_2107.astype('float32'), [2, 14, 7])), 0)
call_2108 = relay.TupleGetItem(func_208_call(relay.reshape(var_2107.astype('float32'), [2, 14, 7])), 0)
bop_2109 = relay.subtract(uop_2084.astype('int8'), bop_2097.astype('int8')) # shape=(4, 8, 5)
bop_2130 = relay.less(bop_2054.astype('bool'), relay.reshape(uop_2084.astype('bool'), relay.shape_of(bop_2054))) # shape=(4, 8, 1)
func_456_call = mod.get_global_var('func_456')
func_460_call = mutated_mod.get_global_var('func_460')
var_2135 = relay.var("var_2135", dtype = "uint32", shape = (756,))#candidate|2135|(756,)|var|uint32
call_2134 = relay.TupleGetItem(func_456_call(relay.reshape(var_2135.astype('uint32'), [9, 6, 14]), relay.reshape(var_2135.astype('uint32'), [9, 6, 14]), ), 1)
call_2136 = relay.TupleGetItem(func_460_call(relay.reshape(var_2135.astype('uint32'), [9, 6, 14]), relay.reshape(var_2135.astype('uint32'), [9, 6, 14]), ), 1)
uop_2137 = relay.acosh(uop_2052.astype('float32')) # shape=(4, 8, 1)
func_1863_call = mod.get_global_var('func_1863')
func_1865_call = mutated_mod.get_global_var('func_1865')
call_2140 = relay.TupleGetItem(func_1863_call(relay.reshape(call_2063.astype('uint32'), [420,])), 3)
call_2141 = relay.TupleGetItem(func_1865_call(relay.reshape(call_2063.astype('uint32'), [420,])), 3)
bop_2143 = relay.right_shift(uop_2052.astype('uint8'), var_2064.astype('uint8')) # shape=(4, 8, 420)
func_1670_call = mod.get_global_var('func_1670')
func_1675_call = mutated_mod.get_global_var('func_1675')
const_2147 = relay.const([[True,False],[True,False],[False,False],[False,False],[False,False],[False,False],[True,False],[True,False],[True,False],[True,False],[False,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,True],[True,True],[True,False],[True,False],[False,True],[True,True],[False,False],[False,True],[False,False],[False,False],[True,True],[False,False],[True,True],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[False,False],[True,False],[False,False],[True,False],[False,True],[True,True],[False,True],[True,True],[False,False],[False,True],[False,True],[False,True],[False,True],[False,False],[False,False],[True,False],[False,False],[False,True],[False,True],[True,False],[False,False],[True,False],[True,False],[True,False],[False,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[False,True],[True,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,False],[True,True],[False,True],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[True,True],[True,True],[True,False],[False,True],[False,True],[False,False],[True,False],[True,False],[True,True],[True,True],[False,False],[True,False],[True,False],[True,True],[True,False],[True,False],[False,False],[False,True],[False,False],[False,False],[True,False],[True,False],[False,False],[False,True],[True,False],[True,False],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[True,True],[True,True],[True,True],[False,False],[True,True],[True,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,True],[True,True],[False,True],[True,True],[False,False],[False,False],[True,False],[False,False],[True,True],[False,True],[True,False],[False,False],[False,True],[False,True],[False,False],[True,True],[False,True],[False,False],[False,True],[True,False],[True,True],[False,False],[False,True],[True,True]], dtype = "bool")#candidate|2147|(156, 2)|const|bool
const_2148 = relay.const([9.265377,-6.803889,-0.007398,8.849484,0.015820,6.523943,-9.703304,7.078531,-5.085464,1.153947,-7.959796,0.566656,-8.013334,-8.529518,-3.816702,7.376659,-8.247367,-3.324120,-8.772841,4.454296,5.483873,-1.076741,-3.720043,3.574550,-3.680522,-5.271646,-2.274189,1.424318,-1.825126,7.329640,9.609557,-3.295243,-3.156381,-6.172581,9.594555,-8.481798,-0.503653,-1.444617,8.135228,2.133750,-5.752325,-7.009710,-3.246943,-0.674480,4.082485,6.669028,-7.933946,-9.676942,0.367294,2.688415,-0.462031,0.351364,-8.614873,0.871311,5.135509,-4.384475,3.684553,1.331818,-2.858751,-9.683526,5.874374,-5.345833,1.692766,-0.739321,-7.798028,9.754160,-6.515660,7.785283,3.123453,-2.587246,-2.381337,-8.333720,6.885770,1.928580,9.809893,0.903040,6.228910,-7.369276,-1.062112,9.269611,8.517268,3.471283,1.892141,-3.152692,7.370170,-1.597124,1.230743,1.335412,-7.395882,4.885374,-3.267916,-1.548732,-2.292472,5.922052,2.644412,5.982896,6.098403,-9.171096,-9.545050,1.576657,8.250650,1.816776,2.275265,0.175600,1.660778,5.750827,9.187453,3.599800,6.722288,-1.515896,-9.303717,9.173220,-9.041217,-8.021511,-3.475703,0.623809,2.650054,4.788555,8.308857,-7.054240,0.664018,8.157736,8.040717,-5.784416,0.416300,-4.731807,6.585207,0.991656,4.639825,-4.816434,-8.454155,-2.905277,-8.472774,-1.076590,-1.789295,-1.257488,-8.344450,1.507791,-9.304287,-8.850694,-0.898294,1.872828,-2.397242,-4.740777,1.465942,-7.330840,-9.287766,1.025273,-9.616275,-7.283971,6.563634,-8.764395,-0.241466,0.645443,2.205752,-2.324372,-0.693959,0.101887,8.960874,5.763125,-3.419585,-2.825930,-6.956731,9.018229,8.462313,8.343703,-8.153125,-6.666050,5.695201,-8.594623,-3.279666,6.840880,-9.772550,5.214395,-3.265755,-0.358203,-4.422625,1.348669,6.173713,1.708040,-1.280164,4.671586,-9.944292,-4.541843,1.101668,3.651542,0.737504,5.575322,6.971733,3.373555,4.017237,7.656834,-4.611423,-8.526115,5.113203,-3.668901,-9.584795,9.033547,-2.298370,1.086018,-3.369179,7.891412,9.554521,8.145582,2.269263,-6.601570,6.977939,1.902287,-6.752202,4.397673,7.525776,1.537180,5.966397,8.937387,-8.533840,7.160798,1.891053,7.694183,1.797181,9.808437,5.580224,1.428176,3.519587,4.116417,-3.389333,-4.959606,-4.154124,-4.469392,-3.507572,2.553015,-1.773825,2.376479,3.944889,-2.637241,3.256720,-2.927131,8.577749,6.590747,-7.719405,-8.719317,8.017654,-7.315829,-1.865424,8.141038,-9.599544,-2.528918,-7.698793,-1.475676,-8.054350,-7.946460,4.684510,-9.115364,9.645752,1.753002,-3.843865,-6.648162,-9.457404,-5.216506,9.374370,8.156654,-4.117813,-4.638092,5.893672,2.764343,9.255798,-3.622757,-7.366015,3.375020,-9.220509,2.521893,-3.445530,3.644544,-6.641152,-9.258756,9.048554,-8.864946,9.986718,-9.490428,5.211636,-0.175628,-8.620038,8.648661,2.249055,-1.012431,-2.855500,7.932703,6.400424,8.131921,-8.593510,-5.245744,-4.625863,2.370616,7.501254,-2.417594,9.547629,-5.191180,9.335889,-6.813933,-1.136465,6.229262,-8.322442,-5.781808,5.208705,-9.250630,5.236176,0.774548,9.973468,9.227989,1.914191,4.801570,-1.202908,-3.143456,-3.031626,-6.437086,8.949026,5.531672,-0.209437,3.492806,3.451559,5.448510,-4.843158,-7.753167,-8.636951,3.647596,-0.914315,-7.082541,-7.474044,-5.356876,-7.449795,8.466776,-7.644008,1.059027,-5.401757,-9.036749,-3.779116,-1.409625,2.747438,-6.945920,-0.063975,4.527490,4.749839,8.225029,-5.277240,-0.529036,6.372029,-5.237484,-5.996061,-0.387415,-9.732561,-6.412259,8.543797,-4.185961,-3.859422,-3.206432,-3.225022,7.550100,8.840018,7.054303,-6.649767,-0.614576,6.039303,-9.916507,4.878036,4.028764,8.672957,-3.446100,-6.320723,6.914535,-9.337083,-2.650693,7.289479,-4.907744,-7.389574,-1.462437,7.975803], dtype = "float32")#candidate|2148|(375,)|const|float32
call_2146 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2147.astype('bool'), [1, 312]), relay.reshape(const_2148.astype('float32'), [375,]), relay.reshape(call_2106.astype('float32'), [196,]), ), 6)
call_2149 = relay.TupleGetItem(func_1675_call(relay.reshape(const_2147.astype('bool'), [1, 312]), relay.reshape(const_2148.astype('float32'), [375,]), relay.reshape(call_2106.astype('float32'), [196,]), ), 6)
func_889_call = mod.get_global_var('func_889')
func_894_call = mutated_mod.get_global_var('func_894')
const_2153 = relay.const([-9.970220,1.871368,-4.670123,2.911746,-0.065237,-9.855843,-9.261781,7.877827,-8.706557,-6.123206,2.596861,-9.034145,8.440799,-1.248501,-7.095143,-7.944134,6.489877,4.687429,8.704426,4.836110,1.560983,5.297035,2.272701,1.055407,-3.424191,6.508411,-2.573365,-7.148366,7.779723,-8.152624,-1.005634,4.314145,-5.620083,5.652448,3.314335,1.594593,6.881784,9.091312,-5.482582,-3.397378,-5.080164,-0.246119,4.978423,4.779232,6.166209,0.149587,-9.743474,7.149440,4.039241,-9.337895,0.276152,-2.889802,-4.564781,5.692390,-7.788194,2.797925,-7.133986,6.838798,-4.741862,-1.783018,8.428248,-6.635298,-5.352510,-5.482956,-3.395667,7.847238,5.221564,-7.471526,3.561578,-8.532468,1.769827,-3.217154,6.113120,-2.004648,-1.590550,3.547182,-0.752013,1.057299,1.635351,-2.163996,6.332712,7.665247,8.108652,-3.284120,1.827959,5.647115,2.689454,-2.539521,9.668599,-0.318384,-6.814558,6.812037,9.408934,5.550454,7.296777,8.687916,0.546449,0.745889,-0.586340,5.330250,-2.448411,4.814012,3.810696,-5.985882,-9.222209,-5.446479,-7.473911,8.590525,2.544910,-9.993440,-7.087319,1.839864,-2.443738,1.551214,-3.827051,-0.844992,5.481016,-3.118549,-4.462152,7.180722,-2.078263,5.393662,-4.056751,-0.318649,5.982753,-4.770944,-5.489642,-3.171608,-5.473483,-9.319200,-3.526604,2.984491,-3.820195,-1.573633,-0.505340,0.144065,-2.722382,3.712909,3.016219,-6.096572,-1.858523,-9.733989,-6.076152,4.498397,-3.826780,1.413821,-5.384570,-6.037558,7.945503,8.519425,1.161391,-5.929715,3.407059,-1.182085,1.533553,-2.131846,9.753465,0.799244,1.421010,-6.433292,-6.780990,-6.721190,-8.577815,8.242239,-5.672785,2.385701,9.845676,1.283391,3.614340,0.672078,-2.386550,-8.152223,-2.263522,6.680559,-7.751274,-9.380672,3.675505,0.129152,1.210016,8.370042,-7.272131,5.460413,-5.815776,-6.775963,-7.268337,0.049980,6.325075,-3.098547,7.376437,7.650484,9.806551,-5.067162,2.126829,-3.663014,-8.477884,-2.672516,-9.160785,-6.989818,-7.232361,-0.201845,-5.711641,9.438965,7.253142,5.784766,9.531525,-5.257280,-8.194990,6.273769,3.484220,2.030675,-9.034360,-9.987224,6.554697,0.648267,5.135041,2.680444,5.537309,-2.081927,-3.382408,5.173648,-1.804558,8.533053,-1.024184,-1.289885,-7.890793,0.468821,5.543743,-1.956279,-5.417428,-6.315992,7.069080,7.916014,-0.961211,-0.221668,-3.513761,-6.912985,9.297371,3.696808,1.386321,0.169532,1.109946,-2.445216,-4.509777,-4.559491,-3.772193,8.394222,-0.886120,8.590262,-3.379425,1.184838,1.041825,2.173200,0.852656,4.820702,5.855058,2.127365,7.268094,7.351373,-8.950346,9.725482,1.658783,-9.309432,0.252702,-5.088710,7.036943,-1.455161,-4.719679,-8.458690,1.906750,-1.736067,-2.243159,1.042752,6.697938,-2.670352,-8.693078,-8.913750,-8.614963,3.033678,-9.202447,2.819137,-5.306107,1.775241,8.686014,-3.742635,8.209340,6.839725,-4.238352,1.776942,-2.413668,0.756639,6.851352,-0.933386,1.780447,-8.501573,7.069568,0.202563,6.991046,-1.244684,-5.419002,4.709429,0.694752,-0.995367,-5.449308,1.629812,2.101767,7.936209,5.968669,-9.623404,-5.132494,-3.304196,-7.557366,6.079791,-7.133652,-5.743410,-8.772892,-0.955778,2.776420,-0.411389,5.695665,-8.145013,-2.421203,6.109383,6.316640,-7.790080,-0.504512,3.322873,0.395426,1.428751,4.412086,-7.729618,2.603835,8.529661,6.061261,-9.913026,-2.904892,6.838599,4.359687,-9.332880,-3.823553,-5.381521,5.370493,4.488293,-5.635884,0.701172,8.903330,8.566148,-1.943693,9.515216,-6.288250,-9.860027,-4.717860,-0.521793,4.048687,-9.610559,2.388318,-2.864785,-9.822849,4.066517,-8.423348,-7.353627,7.982019,4.972744,1.907862,3.551398,-3.403504,-6.481157,-3.786520,-8.283200,6.267687,4.882768,2.831871,1.088481,-8.845603,-3.386684,8.585663,-4.669975,6.096574,4.828733,-1.256160,-8.575271,-8.426907,9.870426,3.453068,-2.051688,-9.379552,-0.994853,-2.819706,4.328286,-2.027921,8.285586,6.288537,-0.813120,1.210365,7.934449,8.518397,0.777769,-4.177467,-0.508334,-1.175691,-5.992990,-1.253573,8.060255,-6.029836,4.967540,-7.703289,9.100208,-5.226890,-7.117728,4.414897,6.879180,-1.411347,-1.189652,9.471298,-7.572619,-1.655373,-7.319096,4.265545,3.310742,8.318876,0.841448,4.104659,6.535754,-0.683044,-9.382445,7.164919,-6.843234,-2.158597,-5.148582,1.767559,4.605989,5.492858,3.054727,9.754003,-9.349452,8.446717,2.061890,-4.740072,9.589863,-6.414999,-8.477848,4.502850,0.396794,-2.149106,-5.466008,9.334329,6.014378,0.860118,5.162625,9.277134,9.041644,2.393269,0.443128,1.014549,5.544710,-3.029462,3.639496,-1.083334,8.362932,-2.363797,0.148894,-6.255532,-1.844872,2.895749,-1.362222,-3.561279,7.456734,-3.164105,5.772162,2.027010,-3.256172,7.767437,-8.354248,-2.925977,-8.059920,8.575939,-8.916545,-3.858834,8.811916,3.209118,-6.212842,-0.589429,9.321103,-3.406462,-8.959715,4.345383,-0.272315,6.857295,4.629019,-5.332861,-3.883019,5.157138,7.236353,-5.050964,8.938179,8.366740,9.632932,4.593329,-9.923800,1.932168,-2.616068,5.409606,0.264300,2.940996,8.284127,-4.629815,0.929995,-0.163728,7.647814,5.741333,-2.886248,-4.223523,-9.433629,1.338174,-9.042904,-4.503552,0.163967,2.206801,-4.570089,6.102376,-6.265695,1.490657,0.480613,5.709232,-6.372867,7.149111,2.635432,-7.190861,-5.839772,-7.320413,7.125407,2.076431,3.628169,8.829779,6.510862,2.700109,4.188212,7.379384,-5.811508,4.666568,1.973444,-3.749197,1.051368,3.771276,-3.867453,-8.836404,-4.786709,-1.370865,-0.517757,0.854830,2.786659,3.377266,1.096056,6.734657,8.206170,1.235965,-7.587851,8.452297,-6.317886,6.800947,3.972563,-3.370651,7.185525,5.535447,6.117984,5.556389,2.045050,6.113647,7.406589,-2.531715,1.820325,9.762031,0.928194,6.037948,5.895352,-0.168213,-4.984294,-2.521633,-8.059419,9.421678,-8.954948,-4.323461,-0.276061,5.961553,-6.321702,-1.419684,3.409200,5.434147,8.649594,-4.921003,8.332740,6.781106,-8.168348,1.990147,8.547962,-0.978557,3.012681,9.590588,-2.804181,1.487930,-1.231093,-1.417706,-2.670725,1.057213,9.462331,-6.567193,-0.029791,-8.155941,-0.291986,5.577850,3.698229,4.572883,-1.778035,-4.550304,7.707508,-4.847392,8.932499,0.823265,-8.693133,4.518449,2.668497,5.936576,6.199796,-6.402654,5.214827,4.287022,1.330929,-7.471802,3.105551,-3.302309,-3.072115,9.734650,0.136157,6.007715,8.346687,1.504765,6.314121,-9.521717,7.916442,-0.038033,1.824728], dtype = "float32")#candidate|2153|(640,)|const|float32
call_2152 = relay.TupleGetItem(func_889_call(relay.reshape(const_2148.astype('float32'), [5, 15, 5]), relay.reshape(const_2148.astype('float32'), [5, 15, 5]), relay.reshape(const_2153.astype('float32'), [640,]), ), 2)
call_2154 = relay.TupleGetItem(func_894_call(relay.reshape(const_2148.astype('float32'), [5, 15, 5]), relay.reshape(const_2148.astype('float32'), [5, 15, 5]), relay.reshape(const_2153.astype('float32'), [640,]), ), 2)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
var_2156 = relay.var("var_2156", dtype = "float64", shape = (330,))#candidate|2156|(330,)|var|float64
call_2155 = relay.TupleGetItem(func_146_call(relay.reshape(var_2156.astype('float64'), [11, 5, 6])), 0)
call_2157 = relay.TupleGetItem(func_148_call(relay.reshape(var_2156.astype('float64'), [11, 5, 6])), 0)
bop_2184 = relay.power(uop_2137.astype('float64'), relay.reshape(uop_2052.astype('float64'), relay.shape_of(uop_2137))) # shape=(4, 8, 1)
output = relay.Tuple([call_2063,call_2106,var_2107,bop_2109,bop_2130,call_2134,var_2135,call_2140,bop_2143,call_2146,const_2147,const_2148,call_2152,const_2153,call_2155,var_2156,bop_2184,])
output2 = relay.Tuple([call_2065,call_2108,var_2107,bop_2109,bop_2130,call_2136,var_2135,call_2141,bop_2143,call_2149,const_2147,const_2148,call_2154,const_2153,call_2157,var_2156,bop_2184,])
func_2187 = relay.Function([var_2051,var_2064,var_2107,var_2135,var_2156,], output)
mod['func_2187'] = func_2187
mod = relay.transform.InferType()(mod)
var_2188 = relay.var("var_2188", dtype = "float64", shape = (4, 8, 1))#candidate|2188|(4, 8, 1)|var|float64
var_2189 = relay.var("var_2189", dtype = "uint32", shape = (420,))#candidate|2189|(420,)|var|uint32
var_2190 = relay.var("var_2190", dtype = "float32", shape = (196,))#candidate|2190|(196,)|var|float32
var_2191 = relay.var("var_2191", dtype = "uint32", shape = (756,))#candidate|2191|(756,)|var|uint32
var_2192 = relay.var("var_2192", dtype = "float64", shape = (330,))#candidate|2192|(330,)|var|float64
output = func_2187(var_2188,var_2189,var_2190,var_2191,var_2192,)
func_2193 = relay.Function([var_2188,var_2189,var_2190,var_2191,var_2192,], output)
mutated_mod['func_2193'] = func_2193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_2259 = relay.TupleGetItem(func_1468_call(), 0)
call_2260 = relay.TupleGetItem(func_1469_call(), 0)
output = call_2259
output2 = call_2260
func_2279 = relay.Function([], output)
mod['func_2279'] = func_2279
mod = relay.transform.InferType()(mod)
mutated_mod['func_2279'] = func_2279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2279_call = mutated_mod.get_global_var('func_2279')
call_2280 = func_2279_call()
output = call_2280
func_2281 = relay.Function([], output)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2282 = func_1798_call()
call_2283 = func_1798_call()
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
const_2293 = relay.const([-4.996137,0.673449,-2.336659,-9.315051,-3.400282,-8.991588,-6.386663,7.026770,3.681045,-0.557788,9.014476,-7.058184,5.496191,1.171758,5.291541,-8.917665,-4.140737,6.127256,-8.295639,0.732833,-4.029556,7.845516,-4.906530,-4.116703,-5.351908,-2.101935,6.627105,-0.975849,6.605566,-3.106936,-1.973213,-0.614061,-2.782274,2.344920,5.193926,4.379656,-8.718504,6.078185,0.947752,-5.512409,-2.362599,-9.614656,2.822285,-2.445366,-9.329605,-4.124350,5.983859,-6.679707,-0.957634,-5.790588,-9.187605,0.601355,3.976031,-6.490743,1.792638,-3.761596,2.277174,2.125215,1.959675,5.128711,-3.906594,-7.599759,-5.864856,0.098425,-6.851314,7.750717,4.298402,0.766576,6.633288,-4.830781,-4.695708,-2.749136,2.395222,-8.154959,-9.743202,-0.658185,7.963945,-0.029066,7.560612,-9.247156,-6.860321,8.335096,4.631836,-3.683978,-1.358848,8.986194,1.388747,-5.902435,2.853059,8.397553,-1.869232,5.113821,-1.757576,8.189640,1.285458,2.977174,4.278846,-7.269940,1.359776,2.973618,4.030571,-0.393126,0.914036,6.941542,0.181587,-1.920245,-8.203962,-4.703396,0.551821,6.019990,2.725235,-6.474456,9.441525,1.617913,5.541414,-7.182888,3.567612,8.700952,8.693144,-6.526754,1.112914,-7.659273,-3.657804,-2.462715,-8.969793,-4.960752,-3.343732,4.746743,3.531404,-9.252889,5.707716,1.332890,5.123130,4.138990,6.370608,-8.974051,-7.789417,2.949393,8.944056,3.226237,0.949790,6.900299,-1.839685,6.637317,-5.711608,3.370305,-0.951957,-1.934182,6.538972,-2.778750,8.969384,-9.560419,0.040283,-3.749225,0.069598,-7.759905,-6.900610,2.781874,-1.161710,-9.258629,-5.430840,0.002366,1.902614,0.002704,8.386465,9.078492,-8.851574,0.520490,8.850579,-3.304289,5.243577,4.360827,-0.105737,-5.822517,4.385511,4.583220,-9.559413,-4.519551,7.405665,4.604709,0.833137,3.267660,-3.722327,7.443869,9.705531,-5.307493,0.129750,-4.727924,-7.528975,-5.836331,9.562847,-0.184095,-6.739033,5.653502,-7.747430,0.548082,-8.633521,5.363095,4.908895,-8.849031,-5.297619,0.091649,7.862171,2.523601,-6.229931,3.275254,-0.006176,-1.378072,2.469824,-4.114385,-1.326146,8.077591,-1.479713,5.247534,-8.890536,-3.650708,-1.129639,-6.888273,9.050120,-1.062781,4.298293,-4.813604,0.070573,0.439915,-8.555653,-7.943588,8.444559,5.727944,-0.834362,4.702746,1.066835,9.141456,0.160409,6.180623,5.551070,-4.521423,4.153832,-9.066817,9.896427,8.439395,3.570018,-8.782797,-8.186311,5.097696,-3.909602,8.624139,-5.710227,-3.102898,-9.908118,1.077767,8.881165,-3.115876,-2.646081,5.833949,-1.168597,8.508622,-3.770967,-3.304841,-3.222963,3.779512,-1.071105,-4.200741,9.766132,-3.354272,-4.275565,3.786524,-4.015114,-9.980006,0.308888,-0.642490,5.349706,9.253725,-2.611769,-3.868688,6.843438,9.479783,-9.369983,8.385678,-7.453745,1.382383,5.432177,-1.411420,-9.647776,-1.891148,-4.196644,-0.430201,-3.214044,9.712088,3.597757,7.791449,2.984620,2.028332,-8.748151,1.478165,-8.768978,6.578580,-1.729734,4.167175,8.588632,-3.635258,5.697221,1.364936,-1.435074,-0.082384,-8.705082,9.111240,-5.035111,3.807904,0.910107,-4.125545,4.431152,5.093673,0.768157,-4.368717,-5.617584,0.801865,3.375002,1.970075,7.621828,-7.356051,-7.712510,-2.514142,-9.025022,9.472666,-5.837421,9.856304,-4.890386,8.026042,-8.466190,-4.675544,-8.254759,-6.970288,-2.183169,-7.044037,5.341072,2.450268,-7.907461,-7.658707,5.700532,-6.305809,8.463611,7.937280,-2.731768,-5.494899,-0.854237,1.001716,-3.737584,4.304660,1.674439,-2.399782,-3.296274,-6.098165,8.551925,8.366281,0.847794,7.032257,9.354200,-1.381836,3.738633,-0.451379,2.421474,0.821726,4.695080,-2.406106,-3.100892,8.369716,-6.658993,8.561408,5.211513,-9.562862,-7.726097,9.451771,-3.468570,5.170690,-8.916612,7.447993,1.867024,7.993881,6.961086,5.336323,9.159547,-2.461563,3.773352,9.177487,-6.350955,4.135099,1.334226,5.025295,-5.675003,-4.745725,-1.301959,-2.735757,-5.870937,0.785121,6.366300,9.671505,3.733878,-9.522880,0.747947,1.309614,7.993017,-8.438239,-8.770629,-5.415593,-3.476486,8.463903,-5.991369,-4.020217,-4.107584,8.002689,-4.623909,-5.604957,-8.997057,-1.977278,-5.949526,-5.123625,-7.437758,4.829979,-6.708664,2.066857,-4.259154,4.762003,-4.449401,8.348256,3.817019,-5.982283,8.960424,-6.692897,2.250193,9.670010,-3.417625,4.771149,-0.812905,5.424792,-7.558071,9.192083,-2.333121,-3.924437,-3.082076,6.728806,-2.068696,1.979209,-6.932142,4.152728,3.410411,9.874429,-3.858954,-7.188844,6.378361,0.964571,0.296162,-4.068978,-2.880528,-3.168762,-7.102826,-4.387843,-7.500077,-2.324306,9.820026,-1.831297,-8.459177,8.276160,0.544045,3.952228,8.385156,-1.912105,9.272773,-5.620432,1.912190,-1.245737,-5.589154,-6.975604,1.231452,6.222303,0.730580,4.591968,-6.618484,-4.750435,-8.644457,-3.368354,1.150225,-8.317754,-5.987833,-5.823586,-6.709908,5.712586,8.082901,0.686235,9.971856,-0.412893,-7.564547,-7.768898,-7.187962,-8.544777,8.312864,-8.436430,-4.159243,9.143420,-1.144507,-3.632140,1.508416,4.037399,-6.347150,5.831126,-3.434906,-9.983891,5.819361,0.079994,0.238398,-2.229170,-9.980991,1.091745,-9.439958,4.928728,-9.943732,4.795738,-2.909127,7.898645,0.198368,-7.610623,-9.186639,-9.624334,4.026149,6.970221,-7.649322,5.995679,-9.613039,4.869208,-5.473868,2.375579,-7.565363,-0.861162,-1.813885,4.839555,-6.307465,1.179506,-8.490504,-3.329400,7.244215,3.507396,5.188870,-6.750866,4.328348,-5.254741,5.379812,9.848841,-6.320395,-6.694316,0.795613,-3.411230,7.837410,-9.066145,-5.682139,1.362500,-9.685485,0.163278,-8.680230,3.244266,3.957860,5.875085,-4.570670,-3.831556,-0.635976,9.128043,1.708310,1.843636,0.386640,-6.707889,-1.090991,3.685309,-8.100742,-0.993614,-2.672205,1.524778,-3.804410,-8.278769,8.884591,9.826696,6.012219,3.543097,0.511231,0.631208,-9.154355,-4.399237,-8.133603,1.583308,-4.009194,8.651816,1.292132,-7.438713,9.488848,-2.248647,0.073438,-2.671103,-2.051244,5.053059,-7.116175,-6.867284,3.554297,2.758049,-5.213185,-5.219431,-8.631613,-8.159789,-2.307682,4.120712,0.485218,-2.315317,-2.294882,-9.450646,-8.342348,-1.732197,-8.272787,3.400834,1.077091,5.249955,8.750599,-0.491623,1.330584,-0.403428,3.647936,0.167920,1.679021,2.005172,-2.593300,2.065445,-8.153821,7.502285,-2.438480,-0.381135,1.013257,-5.449466,8.147921,3.907684,0.394381,1.467364,6.270622,2.245351,-4.975187,-4.083833,-3.156888,-5.721147,1.616636,-4.149111,-0.373219,5.586256,-3.719548,3.397861,-9.951824,0.587387,-9.362138,-1.706793,8.236998,-8.406575,9.572670,9.234587,-4.382414,-7.800963,3.823355,-1.058414,5.572856,-9.267845,7.528361,6.190527,-4.619791,4.727643,9.435751,-1.461468,3.258380,7.442959,-5.026193,4.264277,-3.867168,-4.369996,-7.921199,4.677157,1.537075,1.355003,9.279842,-7.652619,6.195495,-3.514823,-3.083288,-3.606883,-0.806907,-3.340510,-7.364261,3.602422,2.295011,-8.086507,-8.129118,5.120668,7.821185,-5.331544,4.153045,-5.699925,-7.821021,-4.032309,-8.812245,4.711183,-1.202449,8.953407,7.191970,1.875153,-7.949028,-6.419592,6.349764,-0.965880,-6.108059,-9.637484,-6.837685,1.175414,7.370279,8.034128,-9.969184,-2.911435,-4.167242,0.339990,3.575501,-6.217412,-5.441482,-5.153820,-9.461267,3.639040,-0.488841,-6.942884,-5.828241,7.920230,1.365480,1.534561,3.121812,-2.646446,5.967094,1.730304,-7.843041,9.561096,-1.175639,7.260566,-6.148963,-4.742492,-1.956815,9.795876,-3.336273,-8.810632,6.002371,5.204711,-7.586648,-1.307683,7.694063,-4.485708,6.670649,-8.064162,4.785949,-6.004357,-6.417249,-0.839162,-9.538542,-4.606539,3.410246,-5.600462,-3.050314,7.971779,-5.009000,4.704429,-0.494682,9.937159,5.588821,2.577403,6.120678,-7.752328,-6.616610,-3.938676,1.840958,2.010645,-2.578537,7.125040,2.722667,3.128581,8.597380,2.493766,-6.947917,0.309676,6.878682,-7.708090,6.485972,-1.362109,-7.524461,-2.688579,8.106320,-0.851183,9.964426,9.925979,-1.374906,-9.579328,7.398025,5.354165,1.959121,5.405428,-8.024058,9.470809,-3.681199,8.823216,9.777832,-2.460753,-2.668977,-3.491854,1.009022,-9.819884,-1.871005,7.641870,6.379595,7.213460,0.612883,2.068893,-5.610029,3.704702,-8.929813,9.886866,-1.691002,1.905159,-6.513071,4.056425,9.670929,-2.514455,-9.733330,3.082082,-6.606391,-5.076285,5.054488,1.920158,6.440517,-0.196612,-5.838952,9.030271,-6.432965,9.800332,-6.706748,-5.956808,-0.702172,7.627571,-4.252002,-7.562056,9.246065,-8.693426,-4.599571,-1.588447,7.991228,-4.823442,5.127746,-2.799191,-5.065571,-0.478648,-5.612588,-6.628088,5.852075,-5.002299,-3.259750,3.998179,5.437398,-0.180898,0.032459,7.425042,4.054427,-9.460359,3.880545,-7.895470,-5.445581,-5.525223,1.994180,-1.305552,-7.455485,-8.523995,7.985349,-1.152228,-6.694997,6.686550,-5.534620,-4.406146,-6.262850,-9.323671,8.367937,6.644859,5.343377,3.351298,-6.037150,-3.222678,-2.304763,6.727100,-0.713491,-7.107801,-9.766027,-2.138262,7.614792,-3.623739,-4.469815,0.865172,-8.870918,9.462645,9.350939,-7.359927,-7.555646,-3.246124,-6.759351,5.115161,-9.843719,6.591858,3.879174,8.197750,-4.330773,-5.430498,-4.160451,-4.773769,-6.316351,-7.873489,-9.682028,2.165185,1.136544,3.211954,6.080045,-0.385848,4.779069,-1.797922,-2.159513,5.548970,4.397514,2.023598,5.942974,-1.223274,4.254458,6.136205,-3.920066,5.345210,0.225894,1.870016,2.321053,-1.569404,1.781493,9.583625,-0.984589,-0.322376,-3.243569,4.802153,4.258950,0.552676,-1.456429,7.980543,6.320371,6.767217,9.294749,0.909292,-3.049231,2.172556,-1.133276,4.047188,4.963641,-2.138897,1.269117,-8.646275,-5.174766,-5.653353,-3.365825,3.318960,-7.586416,-8.290450,2.321448,-2.452141,2.547422,5.376621,-4.202853,-4.861637,-3.953300,9.136455,-0.493114,-0.100465,6.341495,-7.479597,-4.619137,8.124787,-1.478531,7.883553,6.876249,8.314242,2.805849,-8.087977,-4.473721,-6.500376,7.080148,-7.619647,8.105972,-5.558265,6.039645,-5.520739,-3.459936,-7.914202,-9.615391,-0.117397,5.865422,-4.104446,-6.837183,-6.923074,-8.715901,0.927028,-4.314975,7.384273,7.013014,-0.516864,-7.546569,-3.441341,-7.125715,1.275544,-9.329306,-5.766430,-8.460327,3.118115,8.020483,3.636818,-5.436744,-9.696357,-4.903979,-4.735262,1.045514,2.757228,3.174850,6.055555,-0.686527,-4.710081,-5.392069,1.742103,-8.642861,-5.095584,-9.082313,8.635270,-0.306918,-1.806589,3.524827,-4.026295,0.889493,9.954380,-8.943700,2.212445,6.238365,7.501836,-7.332168,-5.348979,4.082962,3.265850,-2.795197,-4.816852,-8.318817,-0.699470,5.677048,-4.958942,-9.300268,-6.044191,-5.040223,6.554395,4.978240,-4.403332,5.502906,-9.049990,0.718681,5.315078,-1.970871,-2.176124,-0.645492,5.157284,-3.315756,-5.512466,8.596185,6.584169,-8.713169,0.127102,3.634624,-0.566167,7.365766,-1.143364,-0.850509,-5.533535,5.551006,1.110695,8.328995,-3.685989,-8.332586,-2.830117,1.977047,-0.794007,8.236505,6.254326,3.301612,6.013696,4.813552,0.592057,5.504518,-1.834735,-8.364161,-6.787585,-2.491850,5.947505,-5.801190,-1.417397,1.071740,9.607514,8.720513,-0.961593,-0.440336,6.108073,5.675397,2.188259,-4.131613,4.625389,5.606161,2.643685,-2.612949,6.701179,-8.203249,-3.183306,-2.409065,-2.104984,9.016457,-7.760375,7.681003,3.649445,-2.588007,5.357475,-3.299537,1.869115,2.792629,-1.545331,-3.615515,-3.496507,9.508594,-1.817578,-8.181662,4.327501,0.227357,-8.040161,6.691275,4.241330,-6.808429,8.109870,-2.118100,0.348793,9.578351,5.731251,8.485570,-8.777251,1.430760,-1.184599,-1.389958,4.711308,9.852540,-5.883398,9.370463,-8.439307,-3.680130,-3.138500,-8.398065,-2.045755,5.962842,8.808630,8.278228,-4.053475,9.617898,6.072621,-3.519773,3.149296,-3.391462,9.029110,-9.411094,2.776089,3.014547,6.390276,1.482019,9.654736,1.415482,8.164741,-0.783416,0.238355,-8.908049,8.676670,5.631186,-3.056700,-7.301278,9.694570,6.598465,-0.199653,8.139533,9.283812,4.133758,4.459544,4.042020,-8.903943,-4.875372,0.727117,-1.630649,-1.996813,-7.768654,3.340994,-4.541612,0.258011,3.257910,-3.673771,5.380207,-2.130176,-7.933804,3.291323,-6.251747,3.281837,-8.664182,-0.181425,-8.242374,-0.137722,3.889369,7.950415,2.393098,-9.612161,-7.444418,6.261867,-3.393869,9.332382,2.738830,-6.002023,-8.479781,9.051914,4.359121,3.549800,-0.464434,-5.155037,4.777058,4.799720,-3.229684,2.064582,-1.763327,-6.984219,-7.184555,1.661207,-1.753927,-0.363637,1.964361,2.921042,1.854637,-3.194393,7.947319,2.717991,0.616439,9.583059,-8.169011,-6.119708,9.950014,2.223102,-1.185309,8.327887,1.881107,2.306927,6.918426,0.385780,7.016583,-8.495692,-3.405820,2.289598,-0.647744,7.932563,-2.746889,3.771438,-1.291033,9.449695,2.209108,1.837559,-3.157527,-9.875603,-4.663800,-7.510223,7.959848,-3.275977,1.774730,9.989372,-3.947358,-2.699537,4.692395,-3.098013,0.714229,-5.052274,-3.941600,5.432859,9.533888,9.322776,8.111335,5.621760,-5.209357,-2.633449,-8.181965,-1.432463,-5.481578,8.365764,-1.947985,6.522565,7.359958,9.487500,2.969348,0.968371,-1.614816,-3.183667,-4.675736,-1.050427,8.697129,-5.466178,1.861162,-6.983596,-7.463166,6.037129,5.744254,-5.713220,-0.732701,4.409068,-0.765337,-4.919026,0.127512,-5.324574,6.754901,-1.122988,8.060619,-5.141677,9.994373,-8.381664,-8.224004,5.429441,-4.364968,-2.139000,6.802580,-0.733401,-8.567601,-7.316144,-7.733337,-9.301411,6.405475,-8.457374,9.673748,3.278363,-5.757594,-4.498849,2.057575,-4.319590,0.821225,6.104027,-4.199929,-0.694201,-2.412670,-0.511760,9.439801,-9.811619,-0.334122,7.483566,0.996871,-9.808418,-8.023585,-9.885187,-5.850177,4.722593,-1.099236,-9.400209,9.486246,7.177178,9.836937,-3.202096,-4.553207,-6.494302,5.912515,9.840892,-8.886570,-8.486436,-6.672042,8.382423,-4.212415,3.861076,7.870057,0.472877,-4.618213,-4.524433,4.412308,1.875646,-4.139676,-4.182829,4.836633,-7.137444,7.437116,3.551884,-7.716531,1.723329,5.442195,2.381973,-9.959489,1.744748,3.909170,1.702772,-6.621951,2.112138,-1.198938,6.318976,8.284129,6.756054,-1.652293,-0.993745,6.221352,8.096539,-9.805548,3.539333,-6.579979,-6.591748,3.708897,-7.029206,-1.234042,-8.305561,7.497685,-6.698720,2.439206,7.809994,-7.347974,-8.069646,3.917719,9.558499,-1.187696,8.194149,6.369248,9.166255,1.799199,4.469401,9.094286,-8.684410,4.235601,8.969048,-5.969981,-2.024207,-0.972851,7.685478,3.623391,-2.449853,5.485123,-6.459119,8.941404,7.191942,1.380246,-9.373046,-3.435955,3.164445,2.539257,3.298679,7.155538,0.350177,-7.093565,-1.319061,1.304313,-9.216039,-5.202990,4.047415,-6.551136,-4.057425,7.433954,-7.983337,9.362435,7.243162,-0.352366,-4.986470,8.873491,4.722667,-2.607071,1.070804,-1.382722,7.460352,-2.353558,-8.564199,5.883004,-7.388888,6.212135,1.169767,-8.665433,-5.931809,0.143887,-6.636740,-3.146444,-9.503861,1.770290,-9.696561,4.656699,-7.280546,-9.182870,-1.820441,4.230277,1.309322,0.449544,8.112187,3.893177,-6.612281,3.845263,0.041037,9.307635,-9.281849,1.595518,-1.562584,-2.207000,-2.366724,-7.705361,6.890746,4.797936,-8.305502,7.051676,-6.558612,7.068405,5.864772,-2.039445,-8.110679,-0.361756,-6.789188,2.508344,5.737893,-4.229162,1.982955,-4.247255,-9.712518,0.129462,9.510637,3.573303,4.070623,-3.536095,8.479733,-9.783392,-9.467093,-5.451350,-0.047606,-7.221036,-1.772270,-4.696106,6.587971,-5.060514,-1.067121,-4.248615,-9.872111,-9.351045,8.176937,-0.986507,2.640836,-4.947852,4.888549,-5.688815,8.626371,0.809106,5.363402,1.738991,7.851757,4.545844,1.628176,2.456885,8.708524,9.330177,-8.277194,9.984264,-2.574118,-7.309101,-2.760427,-2.478524,9.452076,2.598824,3.365293,3.408338,-9.825842,-6.597418,-2.149918,7.000540,0.565571,-0.823711,-7.676531,8.194072,-8.015518,2.911646,9.123258,-6.139185,2.397369,5.769376,-1.114945,3.614581,6.857420,-9.246596,0.862261,4.316496,-9.931182,7.604050,1.408621,-6.272949,-9.667062,5.731813,4.916695,-8.707641,3.873737,0.507215,-0.206752,1.896406,-3.409304,4.319014,1.465860,3.931315,4.043794,5.321114,4.399159,-7.337014,2.932270,8.553264,7.447577,8.706676,-9.369711,-9.904696,-8.250193,-2.764452,3.105480,-0.896674,9.369191,-0.325258,-9.531827,2.453347,3.513473,2.020414,5.693929,3.432365,-3.049996,-1.348400,8.280306,9.362680,-8.181896,2.930711,-0.367760,-8.381693,8.316894,-0.427353,-4.445076,8.513945,6.447847,-2.067146,-1.867289,9.057126,6.536562,2.673565,-4.464017,-2.021607,-8.624952,-7.816230,3.953415,-9.916900,7.846658,9.920868,7.401484,-9.221586,6.425497,3.396569,-6.879205,6.660033,-2.690652,7.196775,0.657734,5.848450,6.186106,-3.029911,5.763640,9.539753,0.152975,-5.729613,9.460370,0.882493,-9.098394,-3.742725,3.976750,-1.117381,-2.760182,-4.162323,7.326068,-6.064002,0.020129,4.675673,6.529284,-0.137197,6.516389,4.800044,8.265520,-8.854951,-4.372175,-6.138101,-5.347422,3.954007,-9.217232,-5.452038,-1.310518,-0.915586,-8.966405,-0.522394,-0.986840,-5.881521,2.456874,4.743527,2.691458,-7.141629,-0.607023,4.547455,1.138026,-2.364940,5.741671,0.717649,4.802291,2.003035,-3.560278,7.664128,-3.121345,-9.357218,-8.904638,-2.740081,6.915786,6.380599,-0.079518,-9.467724,4.958547,4.385724,-1.548694,-0.355321,2.831951,3.255563,2.233559,-7.748631,-2.346047,-7.454505,-8.957151,-0.958158,8.717238,-2.169420,1.099068,-8.748858,2.067936,8.137525,-5.626264,7.755694,4.503365,7.953183,7.275609,6.757587,7.619152,-7.502193,-4.428224,3.194851,-4.071481,1.711296,5.032967,8.861500,-7.651936,-9.429521,-9.216476,-7.963514,-8.309404,8.395130,8.147528,7.331739,-8.667842,9.755042,9.599350,-2.805537,-0.656775,8.483048,4.496770,-8.891512,7.958593,0.783477,-2.216190,7.323513,5.937834,-8.138606,1.698189,2.870355,-2.903235,7.353595,-4.722712,5.147686,9.663683,-5.094070,2.516217,-1.691038,6.493978,4.247550,7.080750,-6.496242,6.713607,-3.759869,-8.205218,-1.779122,-3.538794,-8.313558,8.375162,4.091430,-6.003133,-5.165100,-8.412017,-8.978216,-7.199433,3.932236,2.832198,-5.318551,-9.178476,3.005569,4.215734,8.771232,7.529075,-7.806755,-5.141780,-9.269358,1.611391,-3.319719,6.413025,0.494349,-9.137045,-1.558833,-8.642694,-8.665004,0.985206,2.820171,4.505447,-4.261236,7.082153], dtype = "float32")#candidate|2293|(1820,)|const|float32
call_2292 = func_336_call(relay.reshape(const_2293.astype('float32'), [13, 10, 14]), relay.reshape(const_2293.astype('float32'), [13, 10, 14]), )
call_2294 = func_336_call(relay.reshape(const_2293.astype('float32'), [13, 10, 14]), relay.reshape(const_2293.astype('float32'), [13, 10, 14]), )
bop_2295 = relay.left_shift(const_2293.astype('uint32'), relay.reshape(call_2292.astype('uint32'), relay.shape_of(const_2293))) # shape=(1820,)
bop_2298 = relay.left_shift(const_2293.astype('uint32'), relay.reshape(call_2294.astype('uint32'), relay.shape_of(const_2293))) # shape=(1820,)
uop_2342 = relay.sinh(call_2292.astype('float32')) # shape=(13, 10, 14)
uop_2344 = relay.sinh(call_2294.astype('float32')) # shape=(13, 10, 14)
bop_2351 = relay.greater_equal(uop_2342.astype('bool'), relay.reshape(bop_2295.astype('bool'), relay.shape_of(uop_2342))) # shape=(13, 10, 14)
bop_2354 = relay.greater_equal(uop_2344.astype('bool'), relay.reshape(bop_2298.astype('bool'), relay.shape_of(uop_2344))) # shape=(13, 10, 14)
func_1670_call = mod.get_global_var('func_1670')
func_1675_call = mutated_mod.get_global_var('func_1675')
var_2360 = relay.var("var_2360", dtype = "bool", shape = (312,))#candidate|2360|(312,)|var|bool
var_2361 = relay.var("var_2361", dtype = "float32", shape = (1, 375))#candidate|2361|(1, 375)|var|float32
var_2362 = relay.var("var_2362", dtype = "float32", shape = (196,))#candidate|2362|(196,)|var|float32
call_2359 = relay.TupleGetItem(func_1670_call(relay.reshape(var_2360.astype('bool'), [1, 312]), relay.reshape(var_2361.astype('float32'), [375,]), relay.reshape(var_2362.astype('float32'), [196,]), ), 10)
call_2363 = relay.TupleGetItem(func_1675_call(relay.reshape(var_2360.astype('bool'), [1, 312]), relay.reshape(var_2361.astype('float32'), [375,]), relay.reshape(var_2362.astype('float32'), [196,]), ), 10)
uop_2364 = relay.cosh(call_2282.astype('float32')) # shape=(3, 10, 13)
uop_2366 = relay.cosh(call_2283.astype('float32')) # shape=(3, 10, 13)
func_2187_call = mod.get_global_var('func_2187')
func_2193_call = mutated_mod.get_global_var('func_2193')
var_2396 = relay.var("var_2396", dtype = "float64", shape = (1, 32))#candidate|2396|(1, 32)|var|float64
const_2397 = relay.const([-1,-3,-2,6,1,10,-9,-2,9,-4,-2,10,4,8,7,-10,-10,1,8,-1,7,6,-8,2,-10,10,-9,-1,8,4,7,-4,-7,-8,4,-3,3,-8,-10,10,-7,3,3,-10,3,6,7,6,-5,-10,6,-10,5,-1,8,-4,-4,-2,2,5,7,-5,1,10,-6,5,-6,-10,-2,-5,-2,9,5,-2,3,-2,9,5,-9,-6,-5,-8,7,-1,10,-1,-4,-10,-2,-8,10,-7,9,10,9,4,8,-7,1,4,-4,4,5,-1,-6,4,-10,6,-5,7,2,-9,3,-5,-4,6,4,-9,3,8,8,-5,4,-8,-8,6,4,10,1,-4,4,6,9,7,-5,3,-8,4,2,5,-6,-9,4,10,7,-4,-5,7,8,-7,-8,8,1,-9,5,2,-5,-2,2,-6,-7,8,-3,-5,10,3,6,-5,7,-1,-10,-4,4,3,9,7,-10,-9,1,-3,7,8,-9,-10,8,9,-4,10,8,-6,-3,-4,-7,7,6,-8,7,-8,-6,5,10,2,8,4,7,4,6,-6,-10,2,2,10,-3,-8,-7,-4,6,4,10,-1,-1,-9,-10,9,-8,5,-8,-9,-3,1,9,-8,-1,-10,-2,8,-3,-8,1,-4,-6,-9,4,-5,-5,9,-2,-1,-1,4,10,-7,-10,-6,2,-2,-9,-5,10,-9,6,1,5,1,-10,9,8,3,-1,-2,10,-1,6,-1,-6,1,10,-2,-3,3,9,-3,8,-8,6,-1,-4,3,-8,6,9,-8,9,-4,-4,-6,-8,3,-5,-4,10,7,-8,4,7,10,9,-4,7,-3,-4,-5,9,8,-8,7,8,2,4,-9,-7,-8,-6,-5,10,-5,8,-7,-9,-1,9,-3,-1,2,2,-10,-10,-3,3,-3,-9,-9,10,4,-3,4,-4,-9,-3,-2,-2,-2,-3,1,7,10,2,-1,-5,2,9,-10,-5,7,9,3,-4,-4,-1,4,8,-4,-3,-3,-1,8,2,-2,-6,5,10,5,-2,-2,5,-3,-10,-5,3,3,4,-3,-9,3,5,1,5,-1,6,-10,-9,-3,-9,2,-8,-3,6,7,10,-1,8,-2,9,-8,7,7,2,-5,-10,-10], dtype = "uint32")#candidate|2397|(420,)|const|uint32
var_2398 = relay.var("var_2398", dtype = "uint32", shape = (756,))#candidate|2398|(756,)|var|uint32
const_2399 = relay.const([6.265366,4.873332,9.336045,3.372851,0.222503,-9.351646,-4.250860,3.427612,-0.155694,-2.481606,0.881382,-2.687500,5.916525,-1.642863,-5.677845,2.147224,-2.049807,-8.184192,-4.506439,-7.682817,-9.507398,6.307603,-8.446203,6.770535,-2.892860,0.889380,-6.221432,6.852753,0.726576,-1.563708,-7.287419,0.751723,-9.914945,-4.298019,3.361295,-0.480911,9.353029,5.122370,-3.720928,-3.459641,-0.808080,-2.910924,0.788966,-6.356191,9.482073,-4.718182,-3.498092,-0.983662,-4.718804,6.191619,5.654518,2.606707,8.175391,-0.234405,-6.297003,-5.136842,-5.324922,7.819007,-3.015283,-6.996878,-6.193936,1.925142,-8.166013,7.882769,-0.987189,8.914943,-3.926817,-1.415009,2.709284,1.886592,-1.101738,-8.003688,-7.497581,-8.684282,4.442882,-5.800515,-6.549907,-1.221839,4.803209,8.701108,-6.641304,2.467776,7.744250,-2.517222,8.657856,-8.227094,2.636733,-8.784197,-7.967674,-9.903671,-3.330167,9.144174,-8.319084,5.355497,3.147723,0.660341,8.448998,-1.501366,-4.145185,2.659200,-2.178585,2.464007,-8.157265,6.240526,7.545200,-3.622414,-6.708036,-6.463015,4.316069,-8.164227,-5.726540,-6.490887,4.346790,-5.720554,4.646402,5.811592,-1.026226,2.331218,-8.896019,8.013403,-8.887825,3.943669,-7.343772,2.200866,-2.759771,-4.277429,4.391512,-2.398278,-3.904120,1.022794,9.241865,9.010451,7.459769,-6.119266,-4.633581,7.265101,-1.328895,8.394007,-4.610370,-1.366764,1.106695,6.734337,-9.145476,9.608065,4.525451,-9.086346,5.978601,-0.456343,9.489946,-3.771104,-1.459301,-8.562443,2.543430,2.309057,8.143676,-4.830185,7.653214,0.185303,0.172518,-3.401311,7.464447,6.020116,-4.708632,-2.210056,4.672677,9.020414,-3.692271,-1.211164,-7.999806,-3.051402,2.589637,-3.381484,-0.876742,-4.933911,-5.211917,-9.385803,-6.599017,-5.447931,0.232046,-1.970909,9.623979,3.147719,6.064107,5.646116,4.513847,6.078954,-4.201865,9.456578,-9.456621,3.428887,-6.676034,-8.942670,7.292174,-1.449155,6.263507,8.216112,-1.887101,3.703866,-9.207091,8.954127,-5.235201,6.664360,-7.183386,6.196146,-6.971360,5.010659,5.335957,1.728928,-3.079971,4.957178,-5.229782,4.092113,3.647089,1.530212,3.829648,-2.639104,8.410858,4.920537,-2.133130,-5.211018,6.219499,-3.019643,-5.081625,0.119069,9.105467,-6.089947,-3.718896,-2.053394,-3.953550,8.575054,5.656128,4.510207,8.536030,-5.675700,-4.333023,8.881924,8.970251,-4.170415,2.294098,-3.860880,-6.492651,8.197065,-1.461475,9.640938,5.901386,1.229392,-8.622112,1.018636,0.507851,7.816721,0.233699,9.665507,-8.263785,-1.758904,9.146964,-4.197974,5.288640,-5.536619,-1.526057,5.359068,9.283429,-1.217869,3.352177,7.416246,7.938908,-6.988368,8.204772,6.459036,8.533136,-3.372685,7.755590,7.122269,-1.281287,-7.141662,0.645200,-3.593050,-1.376082,-3.457675,-8.744632,-5.548213,-8.800977,-8.391199,-9.865582,-7.775001,8.760086,0.192911,0.049367,-9.655772,-5.460823,-7.740718,-2.921389,-2.710070,9.134322,-0.013003,8.658704,-7.174951,-3.304574,0.923734,-9.139718,-1.483041,-7.410172,-1.901520,-5.372551,0.387571,-7.614824,-2.141739,-2.612915,4.921207,5.225533,-8.412241,4.067794,7.167092,5.633820,-4.664058,-0.619802,-0.699447,-8.536153,-3.341614,3.030987,-6.775509,-6.679600,-9.485354,2.520110,-0.241232,0.634281,1.630244,2.597658,-1.996468,-1.640456,2.106741], dtype = "float64")#candidate|2399|(330,)|const|float64
call_2395 = relay.TupleGetItem(func_2187_call(relay.reshape(var_2396.astype('float64'), [4, 8, 1]), relay.reshape(const_2397.astype('uint32'), [420,]), relay.reshape(var_2362.astype('float32'), [196,]), relay.reshape(var_2398.astype('uint32'), [756,]), relay.reshape(const_2399.astype('float64'), [330,]), ), 0)
call_2400 = relay.TupleGetItem(func_2193_call(relay.reshape(var_2396.astype('float64'), [4, 8, 1]), relay.reshape(const_2397.astype('uint32'), [420,]), relay.reshape(var_2362.astype('float32'), [196,]), relay.reshape(var_2398.astype('uint32'), [756,]), relay.reshape(const_2399.astype('float64'), [330,]), ), 0)
uop_2405 = relay.tan(bop_2351.astype('float64')) # shape=(13, 10, 14)
uop_2407 = relay.tan(bop_2354.astype('float64')) # shape=(13, 10, 14)
func_2187_call = mod.get_global_var('func_2187')
func_2193_call = mutated_mod.get_global_var('func_2193')
call_2421 = relay.TupleGetItem(func_2187_call(relay.reshape(var_2396.astype('float64'), [4, 8, 1]), relay.reshape(const_2397.astype('uint32'), [420,]), relay.reshape(var_2362.astype('float32'), [196,]), relay.reshape(var_2398.astype('uint32'), [756,]), relay.reshape(const_2399.astype('float64'), [330,]), ), 5)
call_2422 = relay.TupleGetItem(func_2193_call(relay.reshape(var_2396.astype('float64'), [4, 8, 1]), relay.reshape(const_2397.astype('uint32'), [420,]), relay.reshape(var_2362.astype('float32'), [196,]), relay.reshape(var_2398.astype('uint32'), [756,]), relay.reshape(const_2399.astype('float64'), [330,]), ), 5)
output = relay.Tuple([call_2359,var_2360,var_2361,var_2362,uop_2364,call_2395,var_2396,const_2397,var_2398,const_2399,uop_2405,call_2421,])
output2 = relay.Tuple([call_2363,var_2360,var_2361,var_2362,uop_2366,call_2400,var_2396,const_2397,var_2398,const_2399,uop_2407,call_2422,])
func_2428 = relay.Function([var_2360,var_2361,var_2362,var_2396,var_2398,], output)
mod['func_2428'] = func_2428
mod = relay.transform.InferType()(mod)
var_2429 = relay.var("var_2429", dtype = "bool", shape = (312,))#candidate|2429|(312,)|var|bool
var_2430 = relay.var("var_2430", dtype = "float32", shape = (1, 375))#candidate|2430|(1, 375)|var|float32
var_2431 = relay.var("var_2431", dtype = "float32", shape = (196,))#candidate|2431|(196,)|var|float32
var_2432 = relay.var("var_2432", dtype = "float64", shape = (1, 32))#candidate|2432|(1, 32)|var|float64
var_2433 = relay.var("var_2433", dtype = "uint32", shape = (756,))#candidate|2433|(756,)|var|uint32
output = func_2428(var_2429,var_2430,var_2431,var_2432,var_2433,)
func_2434 = relay.Function([var_2429,var_2430,var_2431,var_2432,var_2433,], output)
mutated_mod['func_2434'] = func_2434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_2481 = func_1495_call()
call_2482 = func_1495_call()
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
const_2499 = relay.const([5.916423,9.195879,-5.746965,0.200610,-0.485185,6.696816,4.931151,1.965602,-4.943730,-5.256181,-0.196937,-6.738806,-9.975749,2.122321,-1.611923,-1.984786,4.305545,8.790555,0.859532,8.807241,6.638770,3.063884,-3.504591,-3.644017,-5.835403,6.528141,-8.451508,6.123450,6.885889,3.184795], dtype = "float64")#candidate|2499|(30,)|const|float64
call_2498 = relay.TupleGetItem(func_383_call(relay.reshape(const_2499.astype('float64'), [5, 2, 3])), 0)
call_2500 = relay.TupleGetItem(func_385_call(relay.reshape(const_2499.astype('float64'), [5, 2, 3])), 0)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2510 = func_1798_call()
call_2511 = func_1798_call()
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_2514 = func_2279_call()
call_2515 = func_2279_call()
func_1863_call = mod.get_global_var('func_1863')
func_1865_call = mutated_mod.get_global_var('func_1865')
var_2546 = relay.var("var_2546", dtype = "uint32", shape = (420,))#candidate|2546|(420,)|var|uint32
call_2545 = relay.TupleGetItem(func_1863_call(relay.reshape(var_2546.astype('uint32'), [420,])), 2)
call_2547 = relay.TupleGetItem(func_1865_call(relay.reshape(var_2546.astype('uint32'), [420,])), 2)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2548 = func_1798_call()
call_2549 = func_1798_call()
var_2556 = relay.var("var_2556", dtype = "float64", shape = (5, 2, 3))#candidate|2556|(5, 2, 3)|var|float64
bop_2557 = relay.not_equal(call_2498.astype('bool'), relay.reshape(var_2556.astype('bool'), relay.shape_of(call_2498))) # shape=(5, 2, 3)
bop_2560 = relay.not_equal(call_2500.astype('bool'), relay.reshape(var_2556.astype('bool'), relay.shape_of(call_2500))) # shape=(5, 2, 3)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2571 = func_1798_call()
call_2572 = func_1798_call()
func_2428_call = mod.get_global_var('func_2428')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_2579 = relay.const([[False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True],[False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False],[True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False]], dtype = "bool")#candidate|2579|(3, 104)|const|bool
var_2580 = relay.var("var_2580", dtype = "float32", shape = (375,))#candidate|2580|(375,)|var|float32
var_2581 = relay.var("var_2581", dtype = "float32", shape = (196,))#candidate|2581|(196,)|var|float32
const_2582 = relay.const([[-7.547996,-3.954396,2.025057,-4.985856,-2.264616,-7.997857,-2.663588,-1.610984,7.410871,-2.521853,7.127550,7.620518,-9.950086,4.088909,-2.712542,-7.009836],[7.411097,-9.450303,3.830030,0.140019,-2.169917,-2.599624,-0.279389,-3.340822,5.402732,-0.830917,3.120864,-6.525296,5.124081,-5.290533,-0.306326,-7.630668]], dtype = "float64")#candidate|2582|(2, 16)|const|float64
call_2578 = relay.TupleGetItem(func_2428_call(relay.reshape(const_2579.astype('bool'), [312,]), relay.reshape(var_2580.astype('float32'), [1, 375]), relay.reshape(var_2581.astype('float32'), [196,]), relay.reshape(const_2582.astype('float64'), [1, 32]), relay.reshape(call_2545.astype('uint32'), [756,]), ), 8)
call_2583 = relay.TupleGetItem(func_2434_call(relay.reshape(const_2579.astype('bool'), [312,]), relay.reshape(var_2580.astype('float32'), [1, 375]), relay.reshape(var_2581.astype('float32'), [196,]), relay.reshape(const_2582.astype('float64'), [1, 32]), relay.reshape(call_2545.astype('uint32'), [756,]), ), 8)
uop_2586 = relay.sqrt(call_2548.astype('float32')) # shape=(3, 10, 13)
uop_2588 = relay.sqrt(call_2549.astype('float32')) # shape=(3, 10, 13)
var_2606 = relay.var("var_2606", dtype = "float32", shape = (375,))#candidate|2606|(375,)|var|float32
bop_2607 = relay.bitwise_and(var_2580.astype('uint16'), relay.reshape(var_2606.astype('uint16'), relay.shape_of(var_2580))) # shape=(375,)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_2610 = relay.TupleGetItem(func_1468_call(), 0)
call_2611 = relay.TupleGetItem(func_1469_call(), 0)
output = relay.Tuple([call_2481,const_2499,call_2510,call_2514,call_2545,var_2546,bop_2557,call_2571,call_2578,const_2579,var_2581,const_2582,uop_2586,bop_2607,call_2610,])
output2 = relay.Tuple([call_2482,const_2499,call_2511,call_2515,call_2547,var_2546,bop_2560,call_2572,call_2583,const_2579,var_2581,const_2582,uop_2588,bop_2607,call_2611,])
func_2614 = relay.Function([var_2546,var_2556,var_2580,var_2581,var_2606,], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
var_2615 = relay.var("var_2615", dtype = "uint32", shape = (420,))#candidate|2615|(420,)|var|uint32
var_2616 = relay.var("var_2616", dtype = "float64", shape = (5, 2, 3))#candidate|2616|(5, 2, 3)|var|float64
var_2617 = relay.var("var_2617", dtype = "float32", shape = (375,))#candidate|2617|(375,)|var|float32
var_2618 = relay.var("var_2618", dtype = "float32", shape = (196,))#candidate|2618|(196,)|var|float32
var_2619 = relay.var("var_2619", dtype = "float32", shape = (375,))#candidate|2619|(375,)|var|float32
output = func_2614(var_2615,var_2616,var_2617,var_2618,var_2619,)
func_2620 = relay.Function([var_2615,var_2616,var_2617,var_2618,var_2619,], output)
mutated_mod['func_2620'] = func_2620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1967_call = mod.get_global_var('func_1967')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_2636 = func_1967_call()
call_2637 = func_1967_call()
var_2640 = relay.var("var_2640", dtype = "bool", shape = (3, 10, 13))#candidate|2640|(3, 10, 13)|var|bool
bop_2641 = relay.add(call_2636.astype('float32'), relay.reshape(var_2640.astype('float32'), relay.shape_of(call_2636))) # shape=(3, 10, 13)
bop_2644 = relay.add(call_2637.astype('float32'), relay.reshape(var_2640.astype('float32'), relay.shape_of(call_2637))) # shape=(3, 10, 13)
func_708_call = mod.get_global_var('func_708')
func_710_call = mutated_mod.get_global_var('func_710')
const_2647 = relay.const([False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True], dtype = "bool")#candidate|2647|(312,)|const|bool
call_2646 = relay.TupleGetItem(func_708_call(relay.reshape(const_2647.astype('bool'), [13, 2, 12])), 1)
call_2648 = relay.TupleGetItem(func_710_call(relay.reshape(const_2647.astype('bool'), [13, 2, 12])), 1)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2650 = func_1798_call()
call_2651 = func_1798_call()
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2656 = func_1798_call()
call_2657 = func_1798_call()
func_456_call = mod.get_global_var('func_456')
func_460_call = mutated_mod.get_global_var('func_460')
const_2662 = relay.const([7,-1,6,8,10,5,7,-1,-8,-9,-8,-7,4,3,-7,-9,6,7,-5,-6,-2,-8,-6,10,-5,1,7,-2,-9,-6,3,-1,5,-3,-5,-7,1,-6,6,10,-6,3,-1,4,-1,-6,-4,-3,7,3,-6,-8,6,5,1,3,8,-1,-10,7,-3,-6,-10,-10,-5,-8,5,-8,-10,-5,6,-8,-2,3,2,-5,-3,-6,10,-1,-10,3,-4,8,-2,7,-9,-4,2,4,9,2,2,6,-7,4,5,5,-8,5,4,-2,5,-3,-5,-4,8,-6,-6,-2,-9,-2,-4,6,-8,6,1,4,-5,-4,5,5,-5,-6,3,-6,4,9,-3,-2,3,2,5,1,-2,-2,-4,2,8,-10,4,7,4,-6,10,9,-7,9,-6,3,7,4,-2,1,-4,5,9,-8,8,1,3,1,-10,3,1,5,-1,9,7,5,3,1,-2,6,-2,-5,-8,6,-5,7,5,3,-10,1,-2,-1,6,8,9,-5,-2,8,7,9,3,7,7,5,-2,-7,5,-1,7,9,3,9,-6,-5,-10,-6,-2,10,3,-7,4,-3,-1,9,2,-6,-6,10,3,-7,-2,4,6,-3,1,-7,-3,3,-3,-4,2,9,6,-4,-7,-1,-3,-2,3,9,-5,-7,7,2,2,-4,-5,-4,6,-1,-8,3,1,2,3,6,-10,-6,-2,-8,6,1,-6,-4,5,-5,-10,-8,-6,-5,-4,6,-3,-2,3,-1,1,-10,-9,1,-2,8,-7,-2,-9,-9,-9,8,7,9,1,9,-4,-10,3,-10,10,-6,-6,-9,7,-7,-4,10,-6,-1,1,-10,-9,9,-4,7,-8,-2,-3,-7,-10,9,-1,5,-8,-6,-8,-3,7,-1,10,6,10,2,8,6,-6,-1,-3,-4,-5,-7,7,2,-1,-6,10,9,-9,-5,-10,6,-7,-3,-3,1,-9,3,-8,9,-7,-10,-6,-8,8,5,-6,6,-8,-4,-7,-3,3,4,8,-9,-8,-1,-8,1,-2,-5,-7,-4,9,-8,-4,5,-4,9,2,-8,-8,7,9,3,-4,2,9,-8,5,-9,6,8,-4,-5,-6,-9,3,-2,5,6,6,-3,-7,5,7,-2,-9,5,7,10,-3,2,4,-10,1,-10,-7,2,-2,-5,5,1,8,-7,-6,-2,7,-4,-8,-2,2,6,5,-3,-6,-7,8,5,4,4,-3,8,10,3,-8,-9,-8,-2,-4,1,5,-1,8,10,-1,3,-1,-4,-2,-9,3,-3,-4,8,-9,-7,9,-9,7,-8,-6,-10,1,-7,10,-5,5,-8,2,6,4,-8,-3,-7,-8,7,-7,10,1,-3,5,-8,6,1,1,-9,-1,8,-2,4,-2,-4,8,-9,1,-1,-9,-9,4,-3,9,10,7,-4,2,10,9,-7,8,-7,7,7,7,-1,6,-4,5,5,-1,-4,-8,-9,10,5,1,7,10,-3,10,5,-9,-10,-2,-8,-7,8,-9,-2,2,-7,1,-8,-5,-7,-5,2,-3,10,-9,-10,3,2,2,10,-5,-6,8,5,-5,2,-5,7,7,3,6,-4,1,2,2,-9,7,-3,-9,2,-3,7,-9,7,-10,3,6,-6,3,-10,9,4,-3,3,-7,8,-1,9,-9,-5,-7,-8,6,-7,1,-8,7,6,-10,3,-8,-9,-8,-1,5,10,6,4,-2,-3,-2,-1,2,8,8,1,-4,5,1,9,-3,9,-6,1,7,9,6,6,-9,2,-6,5,5,2,-7,-1,1,-10,-2,5,7,-7,-5,-3,-9,-4,-7,-7,-9,8,1,6,9,8,-9,1,6,10,-2,6,7,-6,-8,-9,-1,5,-6,3,9,7,6,-5,-5,-4,10,-8,-1,-1,7,-6,-7,-8,3,8,-5,-1,10,-3,-3,-4,8,-9,-8,8,10,-2,6,-10,3,1,1,-9,8,-10,1,-3,7,8,2,-9,-9,-9,-4,3,7,7,4,10,10,-2,-3,-7,-6,-6,-10,-1,9,-3,-9,2], dtype = "uint32")#candidate|2662|(756,)|const|uint32
call_2661 = relay.TupleGetItem(func_456_call(relay.reshape(const_2662.astype('uint32'), [9, 6, 14]), relay.reshape(const_2662.astype('uint32'), [9, 6, 14]), ), 2)
call_2663 = relay.TupleGetItem(func_460_call(relay.reshape(const_2662.astype('uint32'), [9, 6, 14]), relay.reshape(const_2662.astype('uint32'), [9, 6, 14]), ), 2)
uop_2672 = relay.rsqrt(call_2636.astype('float32')) # shape=(3, 10, 13)
uop_2674 = relay.rsqrt(call_2637.astype('float32')) # shape=(3, 10, 13)
bop_2680 = relay.subtract(call_2661.astype('float32'), const_2647.astype('float32')) # shape=(1820, 312)
bop_2683 = relay.subtract(call_2663.astype('float32'), const_2647.astype('float32')) # shape=(1820, 312)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_2687 = func_1495_call()
call_2688 = func_1495_call()
var_2692 = relay.var("var_2692", dtype = "float32", shape = (3, 10, 13))#candidate|2692|(3, 10, 13)|var|float32
bop_2693 = relay.divide(uop_2672.astype('float32'), relay.reshape(var_2692.astype('float32'), relay.shape_of(uop_2672))) # shape=(3, 10, 13)
bop_2696 = relay.divide(uop_2674.astype('float32'), relay.reshape(var_2692.astype('float32'), relay.shape_of(uop_2674))) # shape=(3, 10, 13)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
const_2724 = relay.const([2.996527,5.449555,0.404880,-9.330574,-7.353899,7.528273,5.170794,7.508288,4.220924,8.589576,7.707705,1.187515,7.588862,-1.724760,-8.465201,5.084331,-6.204677,6.611090,0.860008,-9.630261,1.204244,4.265568,-2.207460,-6.708474,7.810210,-7.501138,-4.582720,-8.260335,-8.572504,-8.556395,-5.281515,-3.321589,6.224693,-8.853383,5.991295,-8.331476,-3.033059,-2.912498,6.268067,-6.918942,-7.366908,7.391385,-5.569362,-9.242030,0.903321,6.210691,6.697969,-0.102881,-4.852032,4.439188,2.561220,-2.878881,9.866364,0.382900,7.337707,9.728144,-4.900809,4.026359,5.122182,-1.822841,-3.155719,-7.877701,2.210310,-6.497802,0.560727,-4.926185,-8.212956,-3.107767,9.557861,-4.155428,-6.914311,-9.301342,-1.580491,8.308891,-8.207538,-9.114792,-6.912461,-0.270214,3.218920,2.476265,-7.880106,-5.659456,-6.505102,-1.568971,-9.690642,-7.165122,-6.646922,2.396430,-6.073140,-4.288951,-7.741359,-1.088472,4.157565,3.874203,1.597034,6.148905,-1.346966,-9.210980,9.543406,-8.440226,0.768763,-4.103789,3.967929,8.882928,-4.351808,-7.846019,-6.537177,8.634995,4.236999,4.453218,6.684321,-7.396671,-4.731995,-9.168229,7.008804,4.814798,-7.685302,4.984415,9.375548,2.071168,-1.746403,4.506052,-2.593870,5.686803,1.219480,0.644861,7.121539,-0.464983,-8.795621,4.613183,0.848051,9.852915,-2.933406,3.249118,0.225707,-4.770816,4.619641,-1.245230,-3.702496,1.841480,-6.357321,6.695981,3.327059,8.411559,-4.521833,7.777940,8.648211,6.203278,3.520083,-3.223480,-9.762370,7.146763,-2.907058,2.757655,3.799272,-0.884318,4.047767,8.171168,4.166249,6.241251,-8.793025,4.631801,8.497825,0.490332,8.260215,5.561285,-9.825608,6.262599,-2.882516,-6.112653,-8.758668,-0.091375,-0.595853,-7.702459,-6.579062,7.553618,-6.483414,2.394065,-8.628005,3.957198,-1.277107,2.576544,6.893655,6.415279,3.874381,1.876141,-4.986011,-7.506932,7.387656,-4.712025,-7.865482,-7.583940,-0.665980,-7.672428,2.982728,-5.434329,-5.121465,-0.886419,2.899799,8.539240,8.525056,-0.248079,-9.194748,-3.078321,5.438594,-8.029416,3.064273,-0.316692,-8.468094,-2.453811,-7.361186,7.053570,-5.456540,-5.077198,3.339008,-6.619037,-3.310879,-7.542975,8.350873,7.757534,7.055362,-5.428884,-3.278879,-1.508532,3.609120,-3.550717,4.074880,-2.008772,-7.114667,2.567724,8.609549,-1.635392,-2.166819,-7.840176,-0.842706,-7.801288,8.893975,-3.033848,-7.739157,-8.517216,4.454381,9.282988,-4.400738,-8.569924,5.864534,-7.983221,1.824794,-1.812501,1.256814,-2.932397,-9.501810,6.159128,5.768240,-5.561445,-6.891383,-8.222769,5.313686,5.070723,5.642562,-3.259661,8.333354,6.708038,-5.617129,1.750646,0.348534,5.169195,-8.317462,7.872462,-4.678226,1.511916,6.173078,-9.791633,-2.613599,-2.437281,9.551310,-5.123477,-4.397244,8.407612,8.821839,-4.268435,-8.330167,8.302729,2.235008,4.517297,-1.119481,-4.432934,-5.122837,-8.528245,-6.024357,-3.798904,-5.566359,9.567198,8.884882,4.367039,3.148660,6.944098,4.473162,-6.295561,1.005121,-8.862311,1.732317,2.063300,4.278397,-0.407833,1.435727,1.697094,3.450019,-6.694911,7.216161,4.000567,0.240016,2.824613,7.927460,8.446504,4.477259,-8.571222,6.487929,-7.118620,-7.556301,-4.692708,7.621510,7.322812,-2.167921,3.517051,3.732009,-8.803871,1.435759,9.938589,-4.829569,-9.167605], dtype = "float64")#candidate|2724|(330,)|const|float64
call_2723 = relay.TupleGetItem(func_146_call(relay.reshape(const_2724.astype('float64'), [11, 5, 6])), 0)
call_2725 = relay.TupleGetItem(func_148_call(relay.reshape(const_2724.astype('float64'), [11, 5, 6])), 0)
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
call_2726 = func_336_call(relay.reshape(call_2661.astype('float32'), [13, 10, 14]), relay.reshape(call_2661.astype('float32'), [13, 10, 14]), )
call_2727 = func_336_call(relay.reshape(call_2661.astype('float32'), [13, 10, 14]), relay.reshape(call_2661.astype('float32'), [13, 10, 14]), )
output = relay.Tuple([bop_2641,call_2646,call_2650,call_2656,const_2662,bop_2680,call_2687,bop_2693,call_2723,const_2724,call_2726,])
output2 = relay.Tuple([bop_2644,call_2648,call_2651,call_2657,const_2662,bop_2683,call_2688,bop_2696,call_2725,const_2724,call_2727,])
func_2730 = relay.Function([var_2640,var_2692,], output)
mod['func_2730'] = func_2730
mod = relay.transform.InferType()(mod)
var_2731 = relay.var("var_2731", dtype = "bool", shape = (3, 10, 13))#candidate|2731|(3, 10, 13)|var|bool
var_2732 = relay.var("var_2732", dtype = "float32", shape = (3, 10, 13))#candidate|2732|(3, 10, 13)|var|float32
output = func_2730(var_2731,var_2732,)
func_2733 = relay.Function([var_2731,var_2732,], output)
mutated_mod['func_2733'] = func_2733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2752 = relay.var("var_2752", dtype = "float64", shape = (13, 2, 13))#candidate|2752|(13, 2, 13)|var|float64
uop_2753 = relay.sin(var_2752.astype('float64')) # shape=(13, 2, 13)
bop_2761 = relay.mod(uop_2753.astype('float64'), relay.reshape(var_2752.astype('float64'), relay.shape_of(uop_2753))) # shape=(13, 2, 13)
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_2766 = func_2279_call()
call_2767 = func_2279_call()
func_2614_call = mod.get_global_var('func_2614')
func_2620_call = mutated_mod.get_global_var('func_2620')
const_2771 = relay.const([-5,-6,-5,2,6,9,-3,10,-3,9,-10,-4,-4,7,3,8,6,8,2,7,6,-3,-5,6,-9,1,6,6,-8,-3,-9,-10,4,-8,8,4,1,4,2,5,-6,3,-2,4,-6,-5,-10,9,3,-2,-5,6,4,2,-1,-1,3,-1,-5,-9,5,-5,8,-1,-3,3,-9,-6,8,-1,6,10,-6,-6,-7,3,6,-7,5,-5,-10,8,7,2,-1,8,7,-7,-8,-5,8,7,9,8,1,-2,-4,-2,-2,8,-9,1,2,-8,-10,5,2,-2,5,5,-5,-9,-5,10,5,-3,4,-8,-9,-7,9,7,-4,-4,-10,7,4,-4,6,8,-4,6,2,-6,-2,2,-5,-7,-9,-7,8,6,-9,2,-6,9,-1,10,10,-8,9,6,-10,-2,-3,-10,5,4,-6,-1,7,4,6,-3,10,-9,-1,2,9,2,4,-3,-6,5,3,6,-10,10,-4,2,-6,10,7,1,-7,8,-5,-2,-7,-4,-7,-10,1,-10,-5,-7,-5,-6,-3,8,10,-1,8,5,-2,-4,9,5,6,-3,10,-9,10,-7,4,3,3,8,-7,7,-2,-10,6,1,1,-2,5,-5,-9,-10,-8,-9,-6,4,-10,7,-3,2,-2,-3,8,-3,-9,10,1,-2,-2,1,8,5,6,9,-9,-9,6,4,-7,7,-5,5,8,4,8,1,-1,-3,8,-6,-5,-10,7,6,-2,2,-1,-3,4,-10,3,8,8,10,-3,7,-1,10,-10,4,1,-1,-2,-3,2,-9,-5,-10,6,10,-8,9,1,-9,-8,-5,10,-1,-10,9,8,-10,4,-7,-2,4,-2,-1,-2,8,-5,9,8,-8,-4,4,-6,6,-6,4,10,10,-9,-6,3,-3,6,-4,3,7,-10,3,5,9,2,9,-9,5,2,-3,5,3,-9,10,-10,1,-5,-7,-2,2,-8,-10,-2,7,6,6,7,3,-8,-7,-9,8,1,-6,2,10,1,-8,-3,-4,4,-10,-1,6,7,8,10,-10,1,-5,-6,-4,-3,7,-7,4,-2,4,-9,-5,-4,10,8,6,-8,6,-5,8,-3,3,7,-5,4,-4,-4,7,1,3,-9,-3,-1,10], dtype = "uint32")#candidate|2771|(420,)|const|uint32
const_2772 = relay.const([-8.231521,8.222071,-7.431780,-4.981692,-0.527354,-3.404035,-4.314389,-5.815181,-8.755273,3.032352,-1.620526,0.340858,8.283950,7.670681,6.204233,2.528117,2.647827,6.735659,1.806922,1.359390,5.487952,-1.745299,-4.901767,4.997042,5.143766,-9.304748,4.586813,4.979882,4.452117,4.493339], dtype = "float64")#candidate|2772|(30,)|const|float64
const_2773 = relay.const([-0.797460,3.603665,2.688556,1.586989,-8.976034,5.535839,-1.338239,5.834985,9.643119,-8.169046,-4.936947,9.230260,-7.909676,-1.828329,-5.920322,5.789427,-1.422485,-9.429482,5.850587,9.294891,5.391322,5.448552,5.338105,-4.215277,-1.478785,2.768975,-9.316626,-6.070276,-2.394887,-4.941203,6.772375,8.856144,-6.611721,-8.586918,4.274956,-8.049453,-5.491183,-9.229009,-1.186662,-1.156890,9.858750,2.517481,2.011294,7.365480,-2.000119,-8.216442,9.224510,-0.262188,7.221058,4.852433,-4.387127,-9.991579,7.693040,-2.869794,9.465154,2.732923,5.690581,-5.244617,-8.992532,-0.485638,6.586599,5.914583,-2.668330,4.990486,-2.392390,-9.301681,-9.059055,4.795986,7.863219,0.972215,-4.887577,-3.461950,-3.374213,-8.090246,-6.604322,9.807124,1.579147,-9.929138,-8.853967,-5.790191,-7.000771,0.055209,5.667556,8.932339,3.646083,0.305542,1.014838,6.211804,-0.335946,-8.167212,-0.380851,-6.488880,-0.013714,6.755393,-5.648571,7.151404,-8.093950,8.476045,9.018607,-5.420619,-7.162414,4.982999,3.247012,5.047648,-2.214461,-2.307992,1.197742,2.292408,3.860862,4.923491,-7.755682,2.847784,5.914221,-7.697025,1.895383,4.038880,-3.511100,6.496994,7.313668,6.200587,-2.882974,-3.615609,-1.728233,-1.395472,-4.931405,-4.552822,-2.788460,9.611075,-0.945164,9.511624,4.963085,1.364117,8.971198,3.517836,0.630237,-9.542470,1.217838,-8.414543,-1.721710,3.450329,-1.235855,4.189623,1.607638,-2.430191,-1.251937,5.606801,5.993556,2.143144,3.021759,7.219148,3.958472,4.471880,2.704664,9.576400,-1.865979,-7.850265,-9.452399,6.505837,2.683661,9.038987,7.754922,4.682679,-0.974643,5.776452,0.351437,-3.511202,2.547281,8.986911,0.353585,-5.521132,-6.550553,-4.255522,5.289449,-5.323343,-0.062901,-4.938324,3.816059,-9.621474,5.585855,3.735059,-1.591743,4.045116,2.379866,-5.440197,4.128735,-2.539314,-8.636162,-9.010985,1.966599,-2.218448,8.418883,8.684668,-5.345581,-7.495154,-9.150970,-6.347862,7.660195,-9.087275,3.401969,-6.009922,4.662747,-8.475811,9.250493,6.227389,9.349191,-9.109839,0.881900,3.081148,2.130597,1.205984,-4.096686,0.004000,9.384985,-2.772098,-3.705916,-7.801422,-6.202141,4.893483,8.156805,-2.608913,-2.260717,5.370949,-6.189394,8.104528,-5.706735,6.840841,1.824916,1.234278,-8.488318,5.077115,-7.885757,4.956845,-8.770624,-9.716690,4.786571,-8.083318,-4.625051,3.003742,8.626644,-9.106840,4.776292,-0.820640,-4.173928,-1.209149,5.740600,-6.641453,3.765508,-8.892239,-4.001135,6.615479,6.729665,-0.675349,-7.752680,7.461554,-7.818105,7.933226,8.000646,-8.027112,9.049460,0.855717,-6.249139,-0.680856,0.591938,2.855663,-7.768707,9.108241,5.232498,8.344568,-3.639851,1.931758,-5.226030,-7.591372,-9.306040,-4.828327,2.201287,-6.911114,3.714280,1.969770,-0.778150,-7.598700,-7.925947,-0.936128,9.370026,7.666555,-3.091904,5.443171,3.321342,2.773803,-3.828298,-5.057382,4.377390,-0.391564,0.489797,9.609827,-7.012706,-1.777608,6.932829,-3.684049,-2.042735,-4.308925,-7.023313,-7.500841,-0.533613,8.120807,8.680551,-1.359932,2.231436,4.261452,9.485366,-9.640059,-9.182976,-1.479432,0.212250,9.815496,-2.415723,0.382597,6.839243,-7.976431,9.564251,-0.913802,5.587343,9.605966,0.693172,-9.287945,3.684164,9.085684,3.865391,5.904341,-0.740994,2.604507,9.494566,-0.770465,-0.174044,-8.554759,-1.181239,-8.849557,6.528228,-6.605626,-6.714715,0.029662,7.370245,8.828024,-6.262480,-0.771906,1.132540,2.747515,-5.268773,9.330655,1.581719,-0.943989,2.565489,8.913095,-9.434477,0.527065,-5.255310,-2.808539,7.568632,6.001908,-5.174133,9.815539,5.329326,-0.273196,-9.916940,-5.872002,1.691597,8.489390,1.841426,-8.190897,3.993834,-8.147923,-3.600562,3.442883,-5.984175,-4.850589,-5.879627], dtype = "float32")#candidate|2773|(375,)|const|float32
const_2774 = relay.const([[0.158254,-6.807502,-8.731591,4.220551,7.756895,0.697774,-6.321315,-0.627621,-3.620138,-4.034545,-7.507114,-6.549458,-5.845787,-6.666609,8.069145,1.371992,7.823559,-8.599032,-9.432840,6.194376,5.406142,-2.063973,-5.522682,-8.714752,-2.704004,-9.947517,7.983526,-7.647740],[-6.246882,6.424676,-0.509713,-2.839925,-1.963834,-8.484533,9.705576,-1.080001,-8.368181,-6.770194,-9.376939,-5.711033,2.126616,1.914736,3.703936,0.226787,9.984133,4.912679,8.128494,6.326366,-7.080998,-6.587380,-2.742401,-3.698544,9.423173,9.121201,-5.532101,7.021968],[-7.336827,-5.013381,-0.927328,9.552593,-4.635893,8.667373,1.345931,-1.637026,-2.338677,4.493361,2.611895,-1.768346,-1.488320,-0.869388,8.449306,-4.154637,0.200413,6.325558,-9.812869,1.809400,5.646495,0.013019,2.501758,8.394443,-3.956036,-0.387157,-1.658761,7.104162],[8.580268,8.685952,7.698771,-9.917137,9.307878,-6.186896,4.696353,-0.661010,-7.912210,1.905733,7.024798,-8.077705,0.818864,-4.594786,2.645109,-2.303445,4.255286,6.777566,7.716045,0.423450,5.253288,6.834234,4.278467,6.533691,1.220171,-8.680945,6.791718,-8.309750],[5.949157,2.752040,-9.723555,5.474492,1.698360,-8.515029,7.857505,0.068575,1.576580,3.930261,6.237994,7.988496,1.225505,0.892491,-6.807949,6.993761,-2.170087,-4.566939,-6.545909,9.186952,-7.517715,-9.303028,5.524046,-6.634137,-5.578527,-8.969221,-7.897274,-1.440622],[5.533385,1.870782,-3.415269,2.834994,6.781916,7.168749,-8.898456,2.759788,3.246738,-7.094428,-0.287390,0.504153,-8.056962,-3.602614,0.821989,-2.163174,-6.156048,-7.314434,-5.044758,-0.640616,0.954295,9.268248,-0.289604,-6.544786,-4.619947,-5.990266,1.665659,-8.059386],[6.816104,8.108961,7.218780,5.287564,4.773537,-6.002609,-6.919524,7.899377,2.745238,6.753681,6.793456,2.112321,-2.004283,-1.031500,4.518937,2.889259,0.707000,-5.759503,-4.929739,1.185692,6.699195,6.003316,-6.204376,-0.756447,4.178724,4.260861,0.080828,-5.568760]], dtype = "float32")#candidate|2774|(7, 28)|const|float32
call_2770 = relay.TupleGetItem(func_2614_call(relay.reshape(const_2771.astype('uint32'), [420,]), relay.reshape(const_2772.astype('float64'), [5, 2, 3]), relay.reshape(const_2773.astype('float32'), [375,]), relay.reshape(const_2774.astype('float32'), [196,]), relay.reshape(const_2773.astype('float32'), [375,]), ), 3)
call_2775 = relay.TupleGetItem(func_2620_call(relay.reshape(const_2771.astype('uint32'), [420,]), relay.reshape(const_2772.astype('float64'), [5, 2, 3]), relay.reshape(const_2773.astype('float32'), [375,]), relay.reshape(const_2774.astype('float32'), [196,]), relay.reshape(const_2773.astype('float32'), [375,]), ), 3)
output = relay.Tuple([bop_2761,call_2766,call_2770,const_2771,const_2772,const_2773,const_2774,])
output2 = relay.Tuple([bop_2761,call_2767,call_2775,const_2771,const_2772,const_2773,const_2774,])
func_2779 = relay.Function([var_2752,], output)
mod['func_2779'] = func_2779
mod = relay.transform.InferType()(mod)
var_2780 = relay.var("var_2780", dtype = "float64", shape = (13, 2, 13))#candidate|2780|(13, 2, 13)|var|float64
output = func_2779(var_2780)
func_2781 = relay.Function([var_2780], output)
mutated_mod['func_2781'] = func_2781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2806 = func_1798_call()
call_2807 = func_1798_call()
func_889_call = mod.get_global_var('func_889')
func_894_call = mutated_mod.get_global_var('func_894')
const_2811 = relay.const([[-2.830406,-8.876927,2.149932,6.472186,-3.383941,-6.947583,2.450561,-9.524365,-7.564011,8.223995,5.530352,3.296942,7.314536,-1.793150,7.560337,9.155200,5.512402,0.008769,-5.102636,2.829601,-1.869683,5.671078,-5.630555,-1.162562,7.568240,-1.907965,1.170656,-4.256727,-7.521387,-8.235495,9.054896,-4.508499,-4.130758,7.240866,-2.929022,9.255102,5.068337,-4.119238,-3.930568,-1.437226,-0.267742,-9.693642,-2.384251,2.821274,-2.257095,2.520060,0.151166,-0.922530,9.947153,-2.198626,-9.551698,-7.549562,-1.343049,-6.895059,9.956754,6.599912,4.414217,5.288003,-4.857542,8.356809,5.449451,-5.954234,-7.246685,-4.607575,9.080274,4.979818,-7.301630,2.931998,-2.822395,8.324744,-6.863723,-0.819714,9.435245,-0.064223,-3.575283],[-2.278231,-4.816719,-2.863778,4.907938,-9.583716,-2.117229,6.992902,2.981006,5.842257,-3.293570,-9.336006,9.296476,-8.832288,-8.300642,-1.027989,-7.556023,-0.965567,-6.242954,3.641369,2.353573,-3.716180,2.981318,-7.062514,-2.721646,1.205547,7.729257,1.651262,-5.927060,6.717624,-5.624608,6.432251,-4.823031,8.441408,-2.719021,-9.499287,-6.273644,1.524435,-3.031491,4.329783,-0.227045,1.842990,-0.330565,-0.616475,0.293536,0.460601,-6.928365,-0.719724,1.535841,7.291440,8.571368,4.233319,-4.234245,7.275920,6.886670,1.933299,8.230580,1.344104,5.910690,-5.027773,0.789789,7.592829,-3.029344,-8.265971,8.234912,-5.453884,6.956354,6.496311,-8.096855,7.150146,2.331793,3.235259,7.164063,-4.824045,5.716504,6.396803],[-8.867381,-2.053796,6.683146,-0.503354,-2.401931,5.608390,7.946215,2.063664,6.586439,8.950110,0.840632,-6.180537,9.401549,4.373780,6.471586,8.879869,9.722562,8.592767,-3.200866,-2.026513,-5.318992,-1.039038,-3.007323,7.814372,-0.572626,-2.968097,-5.104671,4.018812,3.959839,-2.574596,3.113589,-0.061794,5.187827,0.970680,-2.040793,-6.956026,5.022770,-0.176388,-0.756798,-9.365643,-5.523583,-4.702465,8.770341,-9.706430,-5.251722,8.959940,-6.002200,3.420355,9.064253,8.951928,-4.858527,-9.535277,-2.768421,7.019882,1.251064,-0.675318,-8.879676,-5.267489,-4.284247,-9.579002,9.652507,-7.464964,9.053643,1.397932,1.032591,-7.744623,-9.272099,9.115044,3.432672,8.058091,-3.079249,-5.561141,-1.762340,-8.130843,6.676601],[5.402175,1.827315,-8.710401,5.041609,4.420474,-9.597651,-8.466055,4.382155,-4.455929,-5.038392,1.124603,5.979730,9.805535,-2.722211,-8.263079,-1.618911,-9.083448,9.977651,2.727609,-6.645640,9.161537,-0.394377,7.855117,-1.606733,0.728303,6.514929,3.795856,-2.743725,-2.384056,9.547506,9.911544,-1.930738,9.322215,-2.915693,0.684364,8.317197,-8.696722,-3.528671,0.291978,2.195560,-1.137355,1.414519,5.591984,-6.766359,-2.385929,-1.917499,-7.958875,8.077010,-3.253600,-2.491917,-6.778502,8.815455,8.586317,-1.783150,-1.825909,7.061509,-4.817546,-9.305600,4.536671,7.040082,-5.278341,2.665528,8.164583,-0.585729,-7.955834,0.313445,6.863204,8.658626,-5.519930,0.332561,1.969872,0.434114,-1.117414,6.510819,1.634668],[0.864755,-2.951549,-5.245201,-0.168919,-4.366170,9.326154,4.830697,-4.322588,6.702211,7.585356,4.398516,-7.186411,-1.605268,-5.661552,-2.295665,1.715204,-7.599975,-1.550694,7.289191,7.785470,6.957531,2.146542,0.934872,-3.530320,-3.001415,-8.772272,-2.213066,2.692435,5.833142,9.713094,3.171820,7.218082,-5.458035,-0.304856,-2.073278,0.605266,-2.716257,1.881124,-0.723323,-6.852816,4.185411,-3.890821,6.287105,-9.137531,-2.261176,-8.009833,-7.409874,0.934513,8.570832,-6.961822,9.167892,-1.158996,-2.667620,-7.594064,0.527985,-2.301716,3.551694,-0.616206,-4.299306,5.567474,-3.179673,-0.047836,1.160490,-6.511757,2.031856,1.058400,-3.194424,-2.186710,0.479910,-0.677018,1.556099,3.037807,6.870491,-4.103044,-7.837006]], dtype = "float32")#candidate|2811|(5, 75)|const|float32
const_2812 = relay.const([[-5.910900,4.284387,3.348991,1.329431,5.407456,-8.100370,5.411502,-5.861088,-1.430376,-7.006891,9.974212,-8.679333,-8.238774,-9.789408,-3.544155,8.260755,-3.487493,-4.222270,-8.307040,3.831060,-6.477245,6.306661,4.274534,-5.715664,-6.893560,-4.684541,-4.513249,2.127797,3.894685,2.056062,5.372935,-5.323926],[1.726268,9.540932,-2.982603,2.667859,-0.689624,-3.015227,-4.856583,6.529098,4.963322,-1.984367,-6.590683,-1.334170,7.333898,7.106769,-6.318670,-1.046941,7.967667,-2.827441,-0.232618,-3.936677,-6.928381,0.234013,-5.280006,8.752395,-0.017291,6.514257,-3.725173,-1.208665,2.357783,-2.864244,4.196920,7.732343],[-0.079056,-7.185041,-2.859049,6.366419,3.999537,4.328255,0.564575,-1.358832,8.907009,-1.758189,9.958297,5.259335,-5.493994,4.072183,2.739985,-6.220824,-2.893864,-3.479242,-4.269061,8.220827,-6.998632,0.362054,-7.244441,-7.760609,1.914583,3.836548,4.875924,8.188860,-4.511902,-5.508403,3.596001,0.837607],[8.264446,-0.398727,5.544026,-7.138157,6.888455,6.627358,1.902615,4.370473,-6.049158,5.356935,6.569663,4.069220,0.593458,6.360604,2.547359,-3.889114,9.933197,-7.514911,4.391216,-7.307634,-5.976158,-9.927520,8.222735,-4.235665,-1.290056,-3.937807,-1.430713,7.374549,1.970333,-5.266894,1.264067,5.923643],[-4.277542,5.534289,-3.237476,-1.317059,5.162439,-0.631635,-9.777440,-3.172589,0.309354,-6.461121,-8.795307,4.861468,6.627211,-2.330526,7.306535,0.182685,0.748940,6.217267,-4.097799,-4.590011,-0.086741,8.298752,8.984952,8.808526,-6.208262,-0.313424,5.568491,-9.517844,-8.488706,9.587774,-2.321759,4.073919],[9.429015,-2.798391,-4.414591,0.112672,0.647187,4.698412,-8.901876,7.666711,-8.817739,1.425375,-6.363286,-5.195153,2.483418,-6.855668,-2.569351,2.894521,-8.490521,-1.270153,8.979541,8.181312,-7.787669,5.419157,8.897103,5.879803,5.894660,1.987833,-5.313368,-7.870128,6.546124,5.880807,-9.886647,7.537691],[-6.464226,8.908713,9.641052,4.186733,5.039015,-2.952646,8.127126,-8.119101,-5.587887,-2.753192,-3.591336,-5.326815,6.348361,5.348478,3.986003,-9.492925,-8.527729,3.061904,-8.341437,2.094742,0.199941,-9.149465,4.188228,4.685136,-0.302139,-0.276364,-3.946172,-6.842361,3.466723,3.437616,-2.204086,-2.340896],[7.028659,-7.597028,-7.390523,7.722188,0.657088,5.440574,5.862699,5.981462,-8.430879,-3.592547,-9.046156,9.527779,-8.332124,-7.802966,-9.244508,-7.354708,-3.714642,-6.457396,-1.889314,5.521922,3.124488,7.334656,3.404301,9.601294,-8.560063,7.911143,-7.255841,-7.858839,1.665178,-3.834173,-6.251265,-4.121537],[3.047425,1.391836,-9.132207,-2.840227,6.659107,-8.682575,-4.278673,7.624915,2.086940,9.744614,5.486047,4.834046,3.773337,-7.256353,-9.203691,-1.868344,0.229505,2.118853,-9.066833,-4.439534,7.669852,3.540984,-8.920735,1.243687,0.970888,2.099508,-1.325706,1.016105,-8.806107,2.343840,-7.133783,6.315780],[-2.593609,-7.089370,-0.358977,-7.919634,3.637368,5.801115,-6.430794,-6.951256,6.995342,-1.302032,-4.882902,7.015341,-5.451672,8.148284,5.252786,-0.915701,2.050390,-8.447708,2.762955,-7.470264,-7.292985,-3.762733,-2.151928,-0.571593,0.603889,2.757810,6.168745,-6.552130,-9.075261,-0.032340,-7.702142,2.239702],[0.297821,0.107511,-2.992891,-3.270188,9.224120,-2.308500,0.064480,-1.306506,9.648024,-0.190237,-4.277692,-9.613715,-7.498073,-3.025199,-8.713132,-5.704849,-3.934726,-9.122274,4.579457,5.001072,-9.478805,-1.366291,7.045345,-2.388786,3.186581,9.361185,2.896847,-4.345154,-6.707955,8.466242,-2.358094,1.924582],[5.517084,7.099031,-6.519936,-2.510775,-6.092782,-9.407804,6.381108,2.453021,5.872796,-6.942192,-6.304998,-6.824215,-1.929298,2.783376,2.874540,6.032506,6.764861,-5.463502,1.189187,-8.385141,3.677191,9.531477,9.928075,5.817590,5.872967,4.726255,-5.798737,6.580390,3.800517,9.760905,1.327262,-6.058627],[-8.296657,-8.991009,3.550553,0.133079,3.495311,4.233901,0.331362,2.731790,-4.494964,6.981166,-2.496794,5.059020,1.808374,-7.159284,4.895654,7.434152,5.802215,-2.368412,-7.314162,-8.254070,-1.987193,-5.964612,-2.878917,5.289584,8.331294,-1.387150,7.858058,3.716486,-6.379182,9.842926,-1.323890,0.430654],[-7.187800,-5.593385,-9.164430,-3.202664,-8.397989,-6.901030,-1.411929,-2.255806,-6.557152,8.374419,-5.841616,0.319515,-7.277704,4.787474,9.043799,5.741920,-7.252384,0.813094,-8.602205,3.974878,-5.871110,8.510496,6.769792,-6.225335,-6.850039,5.548532,6.077609,-0.733507,4.972187,-2.059800,-8.070012,-7.029180],[-5.079975,8.993502,0.140335,9.306177,1.788579,-3.549449,-7.053810,-6.821033,-7.634956,-1.178693,-4.755622,-2.535528,-1.688830,3.342473,-2.005626,6.492366,3.161119,8.747148,9.889689,-3.441765,8.467985,-8.954863,-9.787264,6.815905,-1.548407,-8.969061,-5.549052,5.493248,9.453309,1.872073,-0.446034,-8.795438],[-0.415620,9.200302,7.306792,-4.615337,-4.562563,-4.729642,7.975415,-7.838357,1.887751,1.035093,3.395930,-0.827760,9.720232,-2.187842,-1.331476,2.298903,-1.677278,5.381858,-3.948629,-0.340406,-9.209334,4.714546,-5.123776,8.347741,-4.429123,4.148728,9.226109,6.589266,-1.166245,3.135431,-1.429342,4.046621],[4.538820,-0.855565,-6.261371,-9.743577,-7.378106,-8.583181,4.982213,-5.732880,-0.168382,0.891282,-9.650488,-5.349096,-0.439818,5.576552,-3.627280,9.666298,8.579457,-0.422300,5.672718,-1.328743,-3.877101,-6.866357,1.536961,-1.320253,8.728028,8.066101,-5.800066,-8.012623,5.882431,9.463777,-1.603041,2.048799],[9.520782,7.904003,2.110274,-2.643501,-6.894066,2.894818,3.382512,-8.309347,-3.910070,-1.340493,4.620201,0.575888,6.887157,1.976670,-0.755696,5.401170,-8.907451,-8.863183,4.382249,5.255067,0.819655,0.913034,-3.930170,9.108378,1.326331,2.242196,-7.298075,-7.596545,-7.885707,1.441143,-3.528215,-2.198665],[2.205567,-9.433118,7.382444,5.701102,9.243012,8.423364,-3.722147,-4.365386,7.713968,-6.355487,-1.697169,5.220316,-2.818864,2.138570,0.868517,2.100595,-9.325925,7.821103,-2.186909,2.234607,5.274858,0.622354,5.837833,-7.744657,-0.607174,7.962382,3.296300,6.255905,0.378247,-5.294263,-5.469586,-4.671721],[-1.620993,-7.806695,-7.705129,-7.650090,-4.657739,1.027415,8.210461,-2.627477,-3.143934,-1.339123,-1.468513,-7.174772,3.565162,0.599972,-8.124679,-9.051954,7.590027,6.488851,-0.043303,-5.159527,-3.760749,5.117917,5.080584,4.428307,0.373156,8.434370,8.038214,1.930396,-5.324674,-6.770893,-6.483173,8.550071]], dtype = "float32")#candidate|2812|(20, 32)|const|float32
call_2810 = relay.TupleGetItem(func_889_call(relay.reshape(const_2811.astype('float32'), [5, 15, 5]), relay.reshape(const_2811.astype('float32'), [5, 15, 5]), relay.reshape(const_2812.astype('float32'), [640,]), ), 6)
call_2813 = relay.TupleGetItem(func_894_call(relay.reshape(const_2811.astype('float32'), [5, 15, 5]), relay.reshape(const_2811.astype('float32'), [5, 15, 5]), relay.reshape(const_2812.astype('float32'), [640,]), ), 6)
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
const_2844 = relay.const([[0.498867],[0.231154],[7.000579],[-3.923534],[-0.271631],[-0.006339],[9.862649],[9.648192],[-7.003299],[3.585915],[2.141379],[-1.480496],[-5.220288],[2.236587],[6.859602],[4.320614],[6.704826],[-4.958811],[6.525605],[-5.846187],[-7.939478],[-4.434026],[8.014894],[1.093678],[5.682212],[-8.096283],[-6.723737],[9.291399],[-9.064756],[0.130208]], dtype = "float64")#candidate|2844|(30, 1)|const|float64
call_2843 = relay.TupleGetItem(func_383_call(relay.reshape(const_2844.astype('float64'), [5, 2, 3])), 0)
call_2845 = relay.TupleGetItem(func_385_call(relay.reshape(const_2844.astype('float64'), [5, 2, 3])), 0)
var_2854 = relay.var("var_2854", dtype = "float32", shape = (20, 32))#candidate|2854|(20, 32)|var|float32
bop_2855 = relay.logical_or(const_2812.astype('bool'), relay.reshape(var_2854.astype('bool'), relay.shape_of(const_2812))) # shape=(20, 32)
output = relay.Tuple([call_2806,call_2810,const_2811,call_2843,const_2844,bop_2855,])
output2 = relay.Tuple([call_2807,call_2813,const_2811,call_2845,const_2844,bop_2855,])
func_2863 = relay.Function([var_2854,], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2864 = relay.var("var_2864", dtype = "float32", shape = (20, 32))#candidate|2864|(20, 32)|var|float32
func_2863_call = mutated_mod.get_global_var('func_2863')
call_2865 = func_2863_call(var_2864)
output = call_2865
func_2866 = relay.Function([var_2864], output)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_2938 = func_1391_call()
call_2939 = func_1391_call()
func_2730_call = mod.get_global_var('func_2730')
func_2733_call = mutated_mod.get_global_var('func_2733')
call_2952 = relay.TupleGetItem(func_2730_call(relay.reshape(call_2938.astype('bool'), [3, 10, 13]), relay.reshape(call_2938.astype('float32'), [3, 10, 13]), ), 0)
call_2953 = relay.TupleGetItem(func_2733_call(relay.reshape(call_2938.astype('bool'), [3, 10, 13]), relay.reshape(call_2938.astype('float32'), [3, 10, 13]), ), 0)
func_205_call = mod.get_global_var('func_205')
func_208_call = mutated_mod.get_global_var('func_208')
const_2955 = relay.const([[-2.300857,-5.299637,0.720140,-5.088227,-3.816109,-3.852798,1.027590,9.652671,-2.607133,6.492571,-7.495586,-6.274544,2.192349,-6.905781,3.187626,0.583835,6.535213,-3.796486,4.987421,3.202693,4.824708,-5.099789,-8.749749,8.901286,-6.163816,4.504893,-2.589759,-8.405839],[0.151296,6.745548,-3.780225,-6.940587,0.465495,8.181404,0.557732,-6.939095,-1.056299,7.314208,5.725531,2.594985,2.679801,-7.938135,-7.463127,5.679413,5.982922,-2.397548,-8.170223,-6.134077,6.546143,-3.808517,-0.231753,3.470481,3.723760,4.708803,-6.348653,6.823776],[1.581989,4.920054,-6.713130,8.984519,-7.874857,8.405228,2.579203,-7.067604,1.749765,4.509051,2.022177,-8.355991,-4.030057,4.036141,-5.879945,-4.346596,-6.911358,6.074140,7.723430,0.155940,-7.913049,-9.564133,-9.342445,-7.129624,2.055810,5.210385,6.457495,7.051939],[7.036624,-8.084500,9.775754,-2.069903,-5.762064,-3.348896,-2.103297,3.684290,2.649439,-3.514672,-0.547107,7.763558,2.025603,5.049197,3.081073,-6.516301,1.507558,-5.942945,7.324634,4.918012,0.717759,9.564545,8.961669,-3.720962,-7.013907,-6.525290,-7.767802,-5.851852],[-7.882071,-0.598238,8.366223,-8.820006,2.153595,9.132782,2.717412,-9.291031,4.263681,6.659991,7.400530,0.093286,-7.358022,-6.569132,2.305936,-0.044263,-1.151923,9.399936,3.402937,2.119342,8.239677,-3.303665,2.899524,7.883687,-2.064297,6.915517,-8.864519,-9.246964],[-8.634813,8.478548,2.236634,4.173407,-9.732617,1.322463,-4.113523,-9.349005,-8.208525,8.870387,-9.698766,-1.164143,2.111675,-2.430317,-0.716098,-2.545959,3.446830,-0.138559,-5.299868,4.360030,8.184821,-0.378572,1.134592,6.558190,0.906534,2.527761,8.022935,5.064421],[5.741937,-5.017518,-2.378440,-1.971449,8.537595,-8.177348,-6.456225,-3.339980,3.761686,9.884020,-0.625917,-8.537712,4.491503,4.843481,8.879579,1.241627,-9.971201,-8.326781,3.346340,-6.926943,9.019157,-4.399575,-6.494784,5.528203,7.416277,-8.566381,0.438821,-7.093693]], dtype = "float32")#candidate|2955|(7, 28)|const|float32
call_2954 = relay.TupleGetItem(func_205_call(relay.reshape(const_2955.astype('float32'), [2, 14, 7])), 0)
call_2956 = relay.TupleGetItem(func_208_call(relay.reshape(const_2955.astype('float32'), [2, 14, 7])), 0)
func_2730_call = mod.get_global_var('func_2730')
func_2733_call = mutated_mod.get_global_var('func_2733')
call_2969 = relay.TupleGetItem(func_2730_call(relay.reshape(call_2938.astype('bool'), [3, 10, 13]), relay.reshape(call_2952.astype('float32'), [3, 10, 13]), ), 4)
call_2970 = relay.TupleGetItem(func_2733_call(relay.reshape(call_2938.astype('bool'), [3, 10, 13]), relay.reshape(call_2952.astype('float32'), [3, 10, 13]), ), 4)
func_1967_call = mod.get_global_var('func_1967')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_2977 = func_1967_call()
call_2978 = func_1967_call()
output = relay.Tuple([call_2938,call_2952,call_2954,const_2955,call_2969,call_2977,])
output2 = relay.Tuple([call_2939,call_2953,call_2956,const_2955,call_2970,call_2978,])
func_2994 = relay.Function([], output)
mod['func_2994'] = func_2994
mod = relay.transform.InferType()(mod)
mutated_mod['func_2994'] = func_2994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2994_call = mutated_mod.get_global_var('func_2994')
call_2995 = func_2994_call()
output = call_2995
func_2996 = relay.Function([], output)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_3115 = func_1495_call()
call_3116 = func_1495_call()
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
const_3133 = relay.const([3.607308,6.168319,-8.778332,-8.210418,3.760285,3.132865,6.359706,-6.130943,9.350997,1.138932,-7.299580,5.675820,-9.283302,-6.403125,-1.932957,8.169284,0.461759,7.898783,-7.591500,1.757697,-9.751592,5.224792,-9.520597,7.203939,-4.034664,4.840474,-7.481189,-5.302627,6.354794,-7.402039], dtype = "float64")#candidate|3133|(30,)|const|float64
call_3132 = relay.TupleGetItem(func_383_call(relay.reshape(const_3133.astype('float64'), [5, 2, 3])), 0)
call_3134 = relay.TupleGetItem(func_385_call(relay.reshape(const_3133.astype('float64'), [5, 2, 3])), 0)
uop_3136 = relay.asinh(call_3132.astype('float64')) # shape=(5, 2, 3)
uop_3138 = relay.asinh(call_3134.astype('float64')) # shape=(5, 2, 3)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
const_3140 = relay.const([-4.465575,-3.813773,-7.337898,4.687199,-2.943853,8.559263,5.854682,-7.600217,3.055644,1.236190,-1.742476,-0.779702,5.380774,5.834974,7.242041,-0.521651,-9.907006,9.003034,-3.076563,-9.085183,-2.097345,-5.205885,-6.596750,6.526173,1.313895,8.248220,1.978051,0.578408,1.467514,9.391308,2.712003,7.272781,-7.757145,-3.834896,7.096686,-1.728621,5.945522,0.102995,0.627403,3.431222,4.149212,-0.446694,2.122819,-3.245436,-7.072863,0.985769,0.020900,4.393682,8.033805,-2.829580,2.815820,-5.944604,0.007819,-5.037506,7.736838,-0.784656,3.144682,6.763621,-8.801647,0.579474,4.123694,-7.881633,2.094729,-0.123774,-3.913936,4.795878,5.845085,-8.140147,-7.151207,6.665401,-9.686087,-5.669873,-1.210785,-2.545929,0.911093,4.000163,6.663425,1.479820,-7.834884,0.081057,0.732479,-4.881190,4.316608,0.214745,4.095486,0.758472,-5.520023,9.800154,5.974186,2.497799,-4.144228,5.204291,8.748817,-7.536392,-6.617772,-3.999232,4.835024,5.195590,0.631700,-5.014204,4.592337,-5.839565,2.353397,8.247212,-7.401752,-4.496133,8.062237,-5.848436,-4.966417,-3.241050,-8.195575,-7.706502,9.056471,-6.683706,4.020980,-2.572355,-7.553633,-3.232331,-9.572328,-8.562015,8.637299,7.194439,-0.061801,5.358566,0.125967,-6.798103,-4.423025,8.825990,-5.371473,-4.698741,-5.225589,-0.831416,5.868249,-2.048556,-5.760121,-4.769414,5.503453,3.112340,1.965121,4.836404,-1.641345,5.371508,-0.012716,4.495261,-5.733555,-4.353775,-1.071418,-6.663790,-5.435033,2.440836,0.575839,-6.677659,-3.379200,4.646282,-8.891592,-8.101235,-1.932340,2.011908,-5.809420,7.877892,-3.147692,1.005997,-8.739381,-9.228379,-6.391395,-2.161746,-7.615268,5.301497,-3.185800,-4.108072,4.305999,1.521552,-8.743234,-2.655125,1.196630,-8.061414,-7.730632,-9.476104,0.078543,4.994573,7.262564,7.645989,-6.666938,-1.803864,9.242029,3.702086,5.033979,-5.133253,8.637226,-5.413701,-2.298546,-4.760931,-6.913394,-8.117954,7.886085,4.264025,1.255788,-4.428388,2.269444,-0.780248,-0.084072,8.389326,-3.194987,3.616259,7.692275,9.110763,-3.611563,-3.271000,-9.724514,-5.520363,-0.059361,-6.518136,4.130585,4.381990,7.119692,3.368982,2.241964,2.651321,7.166128,9.575616,-0.843109,-0.429560,-3.301686,9.042284,9.662898,-3.617856,-7.131274,3.974792,-6.699529,-7.482197,-4.612886,4.367876,6.384258,-8.200020,4.558648,4.160598,-1.225599,2.637033,-3.901167,6.179941,-6.788223,6.710306,8.628728,-2.029866,9.608831,9.281678,1.766209,1.322180,-4.285676,8.493633,4.859681,8.445463,-5.673719,-7.884827,-2.623861,4.348543,5.537437,8.025201,4.314692,-8.369635,-8.469065,5.924439,-1.076784,-7.688038,-1.869223,8.245702,-6.701818,5.059759,3.948150,9.089327,7.967512,-2.351258,6.384881,2.270256,-9.359014,7.285117,-8.891635,-8.635801,8.070140,5.453651,-1.413112,9.597108,9.444661,2.406400,-6.057993,-9.363337,9.869652,8.894929,-0.355930,-2.130679,-8.668313,-3.059695,-0.789091,-6.586426,1.336440,8.163567,-1.941519,4.810641,9.626376,-9.352034,7.393408,2.504014,4.011618,-9.663202,-3.827823,-2.785725,-5.176623,7.903544,0.143063,3.936124,0.204697,-2.808764,5.398848,0.115990,9.081414,4.500837,9.483209,7.809676,9.105046,-1.702174,-1.111138,-1.300179,1.512325,5.891803,4.985060,-6.243646,6.469724,-3.285614,-6.672033,4.273692,4.303205,-9.703818,-7.811888,-8.788907,5.897829,0.494173,8.848190,9.413804], dtype = "float64")#candidate|3140|(338,)|const|float64
call_3139 = relay.TupleGetItem(func_2779_call(relay.reshape(const_3140.astype('float64'), [13, 2, 13])), 0)
call_3141 = relay.TupleGetItem(func_2781_call(relay.reshape(const_3140.astype('float64'), [13, 2, 13])), 0)
output = relay.Tuple([call_3115,const_3133,uop_3136,call_3139,const_3140,])
output2 = relay.Tuple([call_3116,const_3133,uop_3138,call_3141,const_3140,])
func_3156 = relay.Function([], output)
mod['func_3156'] = func_3156
mod = relay.transform.InferType()(mod)
output = func_3156()
func_3157 = relay.Function([], output)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_3247 = func_1495_call()
call_3248 = func_1495_call()
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3253 = relay.TupleGetItem(func_2994_call(), 5)
call_3254 = relay.TupleGetItem(func_2996_call(), 5)
func_336_call = mod.get_global_var('func_336')
func_340_call = mutated_mod.get_global_var('func_340')
var_3268 = relay.var("var_3268", dtype = "float32", shape = (1820,))#candidate|3268|(1820,)|var|float32
call_3267 = func_336_call(relay.reshape(var_3268.astype('float32'), [13, 10, 14]), relay.reshape(var_3268.astype('float32'), [13, 10, 14]), )
call_3269 = func_336_call(relay.reshape(var_3268.astype('float32'), [13, 10, 14]), relay.reshape(var_3268.astype('float32'), [13, 10, 14]), )
output = relay.Tuple([call_3247,call_3253,call_3267,var_3268,])
output2 = relay.Tuple([call_3248,call_3254,call_3269,var_3268,])
func_3274 = relay.Function([var_3268,], output)
mod['func_3274'] = func_3274
mod = relay.transform.InferType()(mod)
var_3275 = relay.var("var_3275", dtype = "float32", shape = (1820,))#candidate|3275|(1820,)|var|float32
output = func_3274(var_3275)
func_3276 = relay.Function([var_3275], output)
mutated_mod['func_3276'] = func_3276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3288 = func_1798_call()
call_3289 = func_1798_call()
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3313 = func_1798_call()
call_3314 = func_1798_call()
func_1195_call = mod.get_global_var('func_1195')
func_1199_call = mutated_mod.get_global_var('func_1199')
var_3327 = relay.var("var_3327", dtype = "uint32", shape = (420,))#candidate|3327|(420,)|var|uint32
call_3326 = relay.TupleGetItem(func_1195_call(relay.reshape(var_3327.astype('uint32'), [7, 6, 10]), relay.reshape(var_3327.astype('uint32'), [7, 6, 10]), ), 0)
call_3328 = relay.TupleGetItem(func_1199_call(relay.reshape(var_3327.astype('uint32'), [7, 6, 10]), relay.reshape(var_3327.astype('uint32'), [7, 6, 10]), ), 0)
uop_3354 = relay.acos(call_3313.astype('float32')) # shape=(3, 10, 13)
uop_3356 = relay.acos(call_3314.astype('float32')) # shape=(3, 10, 13)
output = relay.Tuple([call_3288,call_3326,var_3327,uop_3354,])
output2 = relay.Tuple([call_3289,call_3328,var_3327,uop_3356,])
func_3407 = relay.Function([var_3327,], output)
mod['func_3407'] = func_3407
mod = relay.transform.InferType()(mod)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3408 = relay.var("var_3408", dtype = "uint32", shape = (420,))#candidate|3408|(420,)|var|uint32
func_3407_call = mutated_mod.get_global_var('func_3407')
call_3409 = func_3407_call(var_3408)
output = call_3409
func_3410 = relay.Function([var_3408], output)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_3452 = func_1495_call()
call_3453 = func_1495_call()
var_3454 = relay.var("var_3454", dtype = "bool", shape = (3, 10, 13))#candidate|3454|(3, 10, 13)|var|bool
bop_3455 = relay.floor_mod(call_3452.astype('float64'), relay.reshape(var_3454.astype('float64'), relay.shape_of(call_3452))) # shape=(3, 10, 13)
bop_3458 = relay.floor_mod(call_3453.astype('float64'), relay.reshape(var_3454.astype('float64'), relay.shape_of(call_3453))) # shape=(3, 10, 13)
func_2428_call = mod.get_global_var('func_2428')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_3464 = relay.const([[True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False],[True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,False],[False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False]], dtype = "bool")#candidate|3464|(3, 104)|const|bool
const_3465 = relay.const([4.311929,-0.254892,-9.002819,0.024874,8.564963,9.735269,1.779164,-9.694575,8.821455,-4.824001,-7.899114,-7.350259,1.271226,-2.188164,-6.481329,-3.340690,-8.479875,-3.967436,-1.852592,-4.270228,0.127456,5.392438,-9.818117,-4.569685,-5.937213,-4.544587,-7.642192,7.259986,-6.574428,2.865234,4.833955,-1.068498,-5.244408,8.859379,8.070909,-1.843941,2.208490,3.353706,1.426623,9.179041,4.921087,-2.943059,9.278697,4.718123,-9.599427,-1.424735,-9.620203,3.598900,1.935788,4.584357,4.331541,4.868969,-7.820603,-9.510904,-4.566782,5.133474,9.241020,-3.521521,2.016089,-8.360720,-2.994995,9.546929,9.092994,5.940769,3.263489,0.980459,-3.323268,-4.217785,-5.735593,-3.350140,-2.117844,-9.309026,-7.881604,-1.468642,-5.479447,9.656738,-7.315953,-8.722925,3.957983,-8.055384,-2.180850,7.783783,3.477714,9.968382,-3.865675,-1.412202,6.492205,-4.465303,3.518180,0.812331,9.922410,-2.408264,-3.744942,-8.138775,-5.676787,-4.052615,-4.034790,8.237053,7.566989,2.051806,0.040918,8.270812,-1.209294,-8.193716,-8.695396,-0.172054,-7.850425,8.553491,6.753164,-0.336025,6.357729,-7.678247,5.550401,8.996149,1.978106,-8.706556,-9.746406,0.034092,-2.429258,2.344300,-5.673574,-4.559344,-2.615749,8.252889,0.935212,-4.955645,-1.688187,8.712107,-8.389008,7.550591,4.179554,-9.355212,9.368508,2.792180,8.535904,-1.632751,-0.765676,-7.772757,6.425331,-9.682052,-5.316989,7.479282,1.761182,-3.914154,3.277673,4.544619,5.598985,-4.637288,-4.913629,-1.839721,-1.523892,8.558670,-1.847945,-7.834335,2.514031,-5.563202,4.783556,-3.748779,-8.488877,-1.640482,-8.922980,8.248439,-4.840041,-4.699762,5.149163,-2.995080,-9.060131,-9.206274,-6.252095,-4.128265,9.395825,9.853488,-9.703213,6.553927,-6.612995,-1.204058,-5.226153,-4.410680,4.053067,6.609125,-3.089728,6.629987,2.844786,8.081727,-2.347385,1.870897,-7.061936,-1.380655,-3.877653,-0.918300,5.068256,-5.311021,-5.789433,-6.712226,6.053277,-0.294241,-9.792724,-8.973872,1.439716,7.156918,9.265928,5.963931,3.965173,-1.005235,1.283916,-6.482171,8.571579,-5.338210,0.332000,-4.110193,-0.941252,-1.836331,-0.383604,-7.709953,-4.026194,8.775131,-2.880362,-7.717320,-4.143394,-5.682119,5.701693,-9.115031,2.255677,-3.272010,-2.211007,4.303170,2.037226,3.856454,4.690962,6.686135,7.539805,0.948549,6.176936,3.326727,3.482286,6.751007,-6.200640,2.284066,4.871990,-4.861436,-2.484721,-1.176373,-5.591128,5.105500,-0.647987,7.476739,7.035369,2.206022,-7.067022,-2.482480,-3.382364,-5.722302,-7.039850,-2.245202,4.018135,8.285852,7.187164,2.672660,5.521279,6.804916,7.376075,7.261058,3.071744,4.555904,3.837011,6.787199,-3.689494,-3.236340,-9.971965,-1.653828,9.373006,7.004953,5.563179,-9.867691,-7.787830,-8.178399,4.312167,-2.944327,0.192873,-2.126603,-3.959917,-5.897297,-6.993009,7.015421,-2.173071,-7.085717,0.261758,-2.193181,6.306831,7.466416,-5.360793,4.952600,4.363361,-8.525789,-9.797560,1.399368,7.275164,2.789635,-9.939113,-6.996002,-1.191336,-8.856965,-4.653034,-6.944853,-1.934124,7.711754,-4.426987,-7.936236,7.249405,-8.298329,4.320165,-2.020146,9.273634,-5.230022,-2.208924,-2.338949,-8.779591,-0.132609,0.648960,-3.930046,-8.207671,-0.222233,-7.542101,-9.847034,-5.005440,2.215534,-5.272354,-9.614279,6.490816,5.564923,2.404766,-8.870607,-5.544808,-8.338366,-5.837379,9.393632,0.058051,2.017000,-7.279186,4.845583,-0.070509,3.780017,-7.113204,-8.368915,-8.328891,4.704987,-5.778311,1.031085,-2.409817,-7.640317,-8.539146,2.536179,-4.622648,-9.090449,-8.532078,6.886481,-3.747649,9.318668,-8.723621,1.256562,6.949459,-1.339653,-6.647909,-7.051168,1.238381,1.584605,4.695785,9.749149,2.870181,-3.933094,8.193421,-6.679281,-1.851822,-5.929578,-0.601772], dtype = "float32")#candidate|3465|(375,)|const|float32
var_3466 = relay.var("var_3466", dtype = "float32", shape = (196,))#candidate|3466|(196,)|var|float32
const_3467 = relay.const([[-5.635745,-1.158026],[7.441395,5.629121],[7.017830,-1.290209],[4.134272,-1.261538],[-1.682246,-0.103727],[-5.153339,-2.939940],[4.087677,-9.298242],[-5.550687,-8.843274],[-6.743821,-9.719885],[-1.829063,3.520556],[6.617060,4.804720],[-9.530733,1.997412],[-6.879648,6.524156],[-1.736275,-6.893092],[0.644342,6.353899],[-9.969938,7.526882]], dtype = "float64")#candidate|3467|(16, 2)|const|float64
var_3468 = relay.var("var_3468", dtype = "uint32", shape = (756,))#candidate|3468|(756,)|var|uint32
call_3463 = relay.TupleGetItem(func_2428_call(relay.reshape(const_3464.astype('bool'), [312,]), relay.reshape(const_3465.astype('float32'), [1, 375]), relay.reshape(var_3466.astype('float32'), [196,]), relay.reshape(const_3467.astype('float64'), [1, 32]), relay.reshape(var_3468.astype('uint32'), [756,]), ), 7)
call_3469 = relay.TupleGetItem(func_2434_call(relay.reshape(const_3464.astype('bool'), [312,]), relay.reshape(const_3465.astype('float32'), [1, 375]), relay.reshape(var_3466.astype('float32'), [196,]), relay.reshape(const_3467.astype('float64'), [1, 32]), relay.reshape(var_3468.astype('uint32'), [756,]), ), 7)
func_889_call = mod.get_global_var('func_889')
func_894_call = mutated_mod.get_global_var('func_894')
var_3472 = relay.var("var_3472", dtype = "float32", shape = (40, 16))#candidate|3472|(40, 16)|var|float32
call_3471 = relay.TupleGetItem(func_889_call(relay.reshape(const_3465.astype('float32'), [5, 15, 5]), relay.reshape(const_3465.astype('float32'), [5, 15, 5]), relay.reshape(var_3472.astype('float32'), [640,]), ), 2)
call_3473 = relay.TupleGetItem(func_894_call(relay.reshape(const_3465.astype('float32'), [5, 15, 5]), relay.reshape(const_3465.astype('float32'), [5, 15, 5]), relay.reshape(var_3472.astype('float32'), [640,]), ), 2)
func_205_call = mod.get_global_var('func_205')
func_208_call = mutated_mod.get_global_var('func_208')
call_3474 = relay.TupleGetItem(func_205_call(relay.reshape(var_3466.astype('float32'), [2, 14, 7])), 0)
call_3475 = relay.TupleGetItem(func_208_call(relay.reshape(var_3466.astype('float32'), [2, 14, 7])), 0)
output = relay.Tuple([bop_3455,call_3463,const_3464,const_3465,var_3466,const_3467,var_3468,call_3471,var_3472,call_3474,])
output2 = relay.Tuple([bop_3458,call_3469,const_3464,const_3465,var_3466,const_3467,var_3468,call_3473,var_3472,call_3475,])
func_3478 = relay.Function([var_3454,var_3466,var_3468,var_3472,], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
var_3479 = relay.var("var_3479", dtype = "bool", shape = (3, 10, 13))#candidate|3479|(3, 10, 13)|var|bool
var_3480 = relay.var("var_3480", dtype = "float32", shape = (196,))#candidate|3480|(196,)|var|float32
var_3481 = relay.var("var_3481", dtype = "uint32", shape = (756,))#candidate|3481|(756,)|var|uint32
var_3482 = relay.var("var_3482", dtype = "float32", shape = (40, 16))#candidate|3482|(40, 16)|var|float32
output = func_3478(var_3479,var_3480,var_3481,var_3482,)
func_3483 = relay.Function([var_3479,var_3480,var_3481,var_3482,], output)
mutated_mod['func_3483'] = func_3483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3500 = func_1798_call()
call_3501 = func_1798_call()
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
const_3513 = relay.const([-3.836503,1.608683,-8.330177,3.398151,-8.212285,-1.818356,-9.844937,6.988361,3.237985,8.741026,0.139831,1.881525,5.306375,-2.416083,-4.627610,-9.096485,5.651375,0.437700,-3.362403,-1.366879,9.863440,-6.224677,-3.514191,5.704031,-6.545711,4.884397,7.079521,5.593351,0.793486,7.945909], dtype = "float64")#candidate|3513|(30,)|const|float64
call_3512 = relay.TupleGetItem(func_383_call(relay.reshape(const_3513.astype('float64'), [5, 2, 3])), 0)
call_3514 = relay.TupleGetItem(func_385_call(relay.reshape(const_3513.astype('float64'), [5, 2, 3])), 0)
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_3516 = func_2279_call()
call_3517 = func_2279_call()
output = relay.Tuple([call_3500,call_3512,const_3513,call_3516,])
output2 = relay.Tuple([call_3501,call_3514,const_3513,call_3517,])
func_3524 = relay.Function([], output)
mod['func_3524'] = func_3524
mod = relay.transform.InferType()(mod)
output = func_3524()
func_3525 = relay.Function([], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_3556 = relay.TupleGetItem(func_1468_call(), 0)
call_3557 = relay.TupleGetItem(func_1469_call(), 0)
output = relay.Tuple([call_3556,])
output2 = relay.Tuple([call_3557,])
func_3560 = relay.Function([], output)
mod['func_3560'] = func_3560
mod = relay.transform.InferType()(mod)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mutated_mod.get_global_var('func_3560')
call_3561 = func_3560_call()
output = call_3561
func_3562 = relay.Function([], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3588 = func_1798_call()
call_3589 = func_1798_call()
var_3596 = relay.var("var_3596", dtype = "bool", shape = (3, 10, 13))#candidate|3596|(3, 10, 13)|var|bool
bop_3597 = relay.right_shift(call_3588.astype('int64'), relay.reshape(var_3596.astype('int64'), relay.shape_of(call_3588))) # shape=(3, 10, 13)
bop_3600 = relay.right_shift(call_3589.astype('int64'), relay.reshape(var_3596.astype('int64'), relay.shape_of(call_3589))) # shape=(3, 10, 13)
output = relay.Tuple([bop_3597,])
output2 = relay.Tuple([bop_3600,])
func_3601 = relay.Function([var_3596,], output)
mod['func_3601'] = func_3601
mod = relay.transform.InferType()(mod)
var_3602 = relay.var("var_3602", dtype = "bool", shape = (3, 10, 13))#candidate|3602|(3, 10, 13)|var|bool
output = func_3601(var_3602)
func_3603 = relay.Function([var_3602], output)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_3614 = func_1391_call()
call_3615 = func_1391_call()
func_3407_call = mod.get_global_var('func_3407')
func_3410_call = mutated_mod.get_global_var('func_3410')
const_3628 = relay.const([[10,-4,-8,8,10,9,-8,-1,-10,-6,9,-6,-10,-5,-4,9,-1,-10,-4,6,-4,-5,4,5,-2,-9,-8,-4,-5,-5,-10,-2,9,-1,-10,-7,9,-9,8,9,4,3,-2,-2,3,-5,-2,-5,8,-4,-10,5,2,6,-9,-2,-4,6,-1,4,-4,7,5,6,8,4,-2,-9,4,-6,10,-5,-4,-2,-9,-9,3,-8,-7,-6,6,-5,10,5],[-9,6,-1,-6,1,-10,-2,3,4,-8,10,6,-3,-4,-4,8,10,-7,-4,-7,-10,-5,-5,-10,4,10,3,7,8,8,10,7,9,-2,6,-9,-6,1,-5,-10,2,-2,-5,-8,2,-7,5,6,-10,6,-8,4,-9,5,9,-4,3,-3,-7,-3,10,-5,6,8,10,1,7,1,-2,2,2,-2,2,-7,-8,-9,-2,3,4,3,-5,1,4,10],[8,9,7,-9,9,-9,-6,-7,-1,-8,2,-8,-8,1,-10,-9,-2,-2,-10,-10,-7,-5,-7,3,3,-2,5,-5,8,-6,-6,9,-3,-1,-10,-1,-9,-9,-1,4,-6,-2,-6,-3,-3,-5,3,-9,4,9,-10,-10,1,5,4,5,-6,10,-3,6,-3,5,4,-4,3,-2,-6,-1,-4,8,-6,9,-1,1,3,10,-10,-1,8,-3,-9,-3,7,-3],[-10,8,-5,7,-5,1,-8,3,-5,-4,-10,-3,2,-5,2,10,8,-10,-7,8,-7,-2,-10,-5,-9,-8,-6,7,1,-4,9,-6,2,-1,-3,2,10,7,9,4,10,7,5,1,8,-8,1,-8,-10,-3,8,4,-9,7,-4,-6,-3,10,8,3,-9,5,-6,5,1,-10,-3,-6,-7,10,4,-8,8,-6,-1,4,-1,-2,-3,-3,-4,3,7,-10],[4,8,6,6,3,-2,-2,-6,5,-2,-4,-3,7,-6,7,1,-5,-1,2,-5,-1,9,3,-8,3,7,4,6,7,-8,-5,8,-5,-1,8,1,-4,3,-6,-6,-3,-4,4,-10,1,5,-6,-6,-2,9,-4,9,1,-3,-3,3,3,-4,-9,-8,-4,-6,6,3,-10,7,-1,10,-8,-8,-4,-8,-10,4,7,-10,4,1,-10,7,-5,2,1,-9]], dtype = "uint32")#candidate|3628|(5, 84)|const|uint32
call_3627 = relay.TupleGetItem(func_3407_call(relay.reshape(const_3628.astype('uint32'), [420,])), 2)
call_3629 = relay.TupleGetItem(func_3410_call(relay.reshape(const_3628.astype('uint32'), [420,])), 2)
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_3631 = func_2279_call()
call_3632 = func_2279_call()
bop_3635 = relay.subtract(call_3631.astype('uint16'), relay.reshape(call_3614.astype('uint16'), relay.shape_of(call_3631))) # shape=(3, 10, 13)
bop_3638 = relay.subtract(call_3632.astype('uint16'), relay.reshape(call_3615.astype('uint16'), relay.shape_of(call_3632))) # shape=(3, 10, 13)
output = relay.Tuple([call_3627,const_3628,bop_3635,])
output2 = relay.Tuple([call_3629,const_3628,bop_3638,])
func_3642 = relay.Function([], output)
mod['func_3642'] = func_3642
mod = relay.transform.InferType()(mod)
output = func_3642()
func_3643 = relay.Function([], output)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3666 = func_1798_call()
call_3667 = func_1798_call()
func_3407_call = mod.get_global_var('func_3407')
func_3410_call = mutated_mod.get_global_var('func_3410')
const_3677 = relay.const([[-9,7,-2,2,-4,-4,6,7,4,-2,-6,-6,10,2,3,2,2,6,2,9,-8,10,-4,1,-2,-1,-9,-5,-2,-10,-8,6,4,3,1,-1,-4,3,9,8,-5,10,-7,-5,-1,-3,-9,-2,-1,6,-6,1,9,-9,-9,10,7,8,-4,-4,-7,-5,-6,-9,1,-2,-4,8,-8,4,6,-1,-1,-9,-3,-9,10,9,10,-6,5,9,-1,-5],[-5,-8,10,-4,-10,7,5,-8,-1,-2,4,3,6,-9,2,-7,10,8,5,-2,-6,-10,4,-8,4,-7,8,10,-3,-2,-2,3,-2,-1,-6,2,1,-5,-2,9,2,6,7,5,-2,6,-6,5,10,5,-2,-8,-10,7,5,-8,3,9,8,9,-1,-6,-6,6,-1,-3,-9,6,-3,1,-9,5,3,-2,-9,2,10,8,-3,1,5,-6,5,4],[-3,8,-4,-5,-8,-7,-10,7,-9,3,9,-3,-7,9,-1,2,7,-5,6,7,7,-10,-3,4,-4,-3,2,-9,6,-5,-2,8,-8,2,5,7,-1,8,6,5,2,4,5,4,-3,6,-5,-9,-9,8,-10,7,-4,7,-8,1,-2,5,10,7,-10,1,7,-10,-2,-2,5,-6,-6,-8,-7,6,4,7,3,-9,8,8,-1,4,9,6,7,3],[-4,8,10,3,5,9,-5,-1,-10,10,1,7,-4,-4,-6,2,7,-1,6,-2,5,1,2,5,-4,7,1,-5,-8,3,9,-2,-9,-5,9,8,-3,-6,-2,8,5,3,-1,8,9,-1,-1,7,8,-5,-9,4,1,-8,-8,2,4,-7,4,-2,1,3,6,1,10,-4,-10,-3,-6,-7,7,-8,-3,-6,2,-9,-1,4,2,3,3,3,8,6],[8,10,1,8,3,-10,-2,-8,3,2,7,-9,5,-4,1,6,-3,7,-4,-5,-1,-4,6,-7,3,-6,5,3,-9,-2,8,10,-6,-3,-1,9,-7,-6,4,4,3,10,-5,-7,-1,-5,-8,-10,9,7,6,-4,1,-6,5,4,1,-5,8,-1,10,-10,8,-5,7,-10,9,6,6,-9,-5,9,7,-2,-6,6,10,4,-7,-6,-10,7,-2,3]], dtype = "uint32")#candidate|3677|(5, 84)|const|uint32
call_3676 = relay.TupleGetItem(func_3407_call(relay.reshape(const_3677.astype('uint32'), [420,])), 3)
call_3678 = relay.TupleGetItem(func_3410_call(relay.reshape(const_3677.astype('uint32'), [420,])), 3)
output = relay.Tuple([call_3666,call_3676,const_3677,])
output2 = relay.Tuple([call_3667,call_3678,const_3677,])
func_3680 = relay.Function([], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3680_call = mutated_mod.get_global_var('func_3680')
call_3681 = func_3680_call()
output = call_3681
func_3682 = relay.Function([], output)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_3715 = func_1495_call()
call_3716 = func_1495_call()
output = relay.Tuple([call_3715,])
output2 = relay.Tuple([call_3716,])
func_3719 = relay.Function([], output)
mod['func_3719'] = func_3719
mod = relay.transform.InferType()(mod)
mutated_mod['func_3719'] = func_3719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mutated_mod.get_global_var('func_3719')
call_3720 = func_3719_call()
output = call_3720
func_3721 = relay.Function([], output)
mutated_mod['func_3721'] = func_3721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1967_call = mod.get_global_var('func_1967')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_3737 = func_1967_call()
call_3738 = func_1967_call()
output = relay.Tuple([call_3737,])
output2 = relay.Tuple([call_3738,])
func_3759 = relay.Function([], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
call_3760 = func_3759_call()
output = call_3760
func_3761 = relay.Function([], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_3784 = relay.TupleGetItem(func_1468_call(), 0)
call_3785 = relay.TupleGetItem(func_1469_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_3793 = relay.TupleGetItem(func_1468_call(), 0)
call_3794 = relay.TupleGetItem(func_1469_call(), 0)
func_655_call = mod.get_global_var('func_655')
func_659_call = mutated_mod.get_global_var('func_659')
var_3797 = relay.var("var_3797", dtype = "float32", shape = (640,))#candidate|3797|(640,)|var|float32
var_3798 = relay.var("var_3798", dtype = "float64", shape = (30,))#candidate|3798|(30,)|var|float64
call_3796 = relay.TupleGetItem(func_655_call(relay.reshape(var_3797.astype('float32'), [10, 16, 4]), relay.reshape(var_3798.astype('float64'), [30,]), ), 0)
call_3799 = relay.TupleGetItem(func_659_call(relay.reshape(var_3797.astype('float32'), [10, 16, 4]), relay.reshape(var_3798.astype('float64'), [30,]), ), 0)
output = relay.Tuple([call_3784,call_3793,call_3796,var_3797,var_3798,])
output2 = relay.Tuple([call_3785,call_3794,call_3799,var_3797,var_3798,])
func_3801 = relay.Function([var_3797,var_3798,], output)
mod['func_3801'] = func_3801
mod = relay.transform.InferType()(mod)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mutated_mod.get_global_var('func_3801')
var_3803 = relay.var("var_3803", dtype = "float32", shape = (640,))#candidate|3803|(640,)|var|float32
var_3804 = relay.var("var_3804", dtype = "float64", shape = (30,))#candidate|3804|(30,)|var|float64
call_3802 = func_3801_call(var_3803,var_3804,)
output = call_3802
func_3805 = relay.Function([var_3803,var_3804,], output)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mod.get_global_var('func_3759')
func_3761_call = mutated_mod.get_global_var('func_3761')
call_3827 = relay.TupleGetItem(func_3759_call(), 0)
call_3828 = relay.TupleGetItem(func_3761_call(), 0)
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3829 = relay.TupleGetItem(func_2994_call(), 0)
call_3830 = relay.TupleGetItem(func_2996_call(), 0)
output = relay.Tuple([call_3827,call_3829,])
output2 = relay.Tuple([call_3828,call_3830,])
func_3840 = relay.Function([], output)
mod['func_3840'] = func_3840
mod = relay.transform.InferType()(mod)
mutated_mod['func_3840'] = func_3840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3840_call = mutated_mod.get_global_var('func_3840')
call_3841 = func_3840_call()
output = call_3841
func_3842 = relay.Function([], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3524_call = mod.get_global_var('func_3524')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3856 = relay.TupleGetItem(func_3524_call(), 2)
call_3857 = relay.TupleGetItem(func_3525_call(), 2)
func_146_call = mod.get_global_var('func_146')
func_148_call = mutated_mod.get_global_var('func_148')
const_3861 = relay.const([[2.429938],[0.509455],[-1.645213],[-7.777523],[2.860198],[-2.183558],[4.457056],[6.014711],[1.288908],[3.537678],[-8.254565],[3.188843],[1.252559],[-3.636996],[-3.751826],[5.158373],[-9.527558],[6.781677],[0.511815],[8.184630],[-9.503893],[-6.054878],[-7.813226],[7.558037],[8.416159],[2.515955],[-7.246296],[-9.635544],[1.270665],[2.189706],[-3.902137],[3.986830],[2.220714],[-0.008446],[-2.560198],[8.670844],[6.554062],[0.224289],[4.480083],[9.644889],[4.712567],[5.512868],[3.579894],[4.022531],[-8.950230],[-4.142764],[4.719380],[4.806996],[1.779014],[0.194180],[-3.223105],[-6.670979],[-8.350725],[0.477909],[9.093152],[-8.739116],[8.795083],[-9.195352],[2.541030],[8.020913],[-7.262920],[-8.836348],[9.771680],[7.970708],[8.405785],[0.939121],[4.770039],[-5.534475],[4.227369],[-9.963311],[-2.553632],[9.328705],[-9.240465],[2.733530],[1.797810],[3.838329],[-1.713751],[9.197405],[5.645333],[-2.190405],[3.786977],[-7.330258],[-4.551758],[-4.321519],[-5.603699],[-2.507945],[3.646062],[-9.747218],[4.810924],[2.829545],[-8.857970],[-5.899731],[-2.525362],[5.223967],[-5.035480],[4.943983],[5.391975],[0.920753],[-6.967537],[4.956378],[-4.316587],[6.908760],[2.623150],[7.949239],[6.586035],[4.347566],[0.045079],[5.557831],[0.482995],[3.088041],[-8.207276],[5.269064],[2.815949],[3.231138],[-0.184672],[-8.834526],[-2.292196],[-7.315961],[-6.520469],[-9.310457],[-8.313796],[4.347437],[-0.857925],[8.321096],[4.185670],[0.584003],[1.934975],[2.708409],[3.775219],[-8.094090],[6.100417],[-1.129234],[2.476625],[6.047442],[-5.709906],[4.887158],[5.308181],[-2.944293],[0.070972],[0.472930],[4.806530],[8.414604],[9.473365],[4.824663],[2.193038],[-4.508350],[-8.139630],[4.450557],[1.593868],[0.116218],[-3.181084],[-2.996361],[-8.435384],[5.798683],[9.676998],[-9.282044],[-4.431749],[7.117728],[6.561673],[-0.620718],[3.295926],[6.266850],[-5.834270],[4.512796],[-4.835128],[8.128691],[7.983470],[-9.491970],[5.482494],[-0.796495],[5.916101],[2.247641],[-9.987170],[0.280560],[4.430304],[-3.465090],[3.673289],[-0.684504],[-6.657430],[9.200768],[6.925926],[-4.070487],[6.074576],[-5.369958],[-6.563363],[2.833833],[6.288445],[9.212397],[0.433256],[6.230166],[8.954109],[0.401947],[-0.639467],[-4.105403],[1.999599],[0.370461],[-8.368362],[-9.672655],[-6.107909],[-6.912071],[9.313407],[-1.455362],[-2.555469],[-1.435180],[3.349808],[-7.535075],[7.058440],[3.865611],[-0.858688],[9.208212],[3.740533],[-2.586796],[-3.900423],[2.873964],[4.271612],[3.141303],[4.670571],[8.855778],[-4.188388],[-3.901545],[-0.310307],[-2.605864],[-6.252860],[8.416077],[9.874771],[8.038469],[5.200407],[-4.665133],[-5.671283],[-2.881021],[-9.224050],[-2.522865],[-8.718014],[5.297516],[8.317997],[-3.023147],[3.019778],[6.401020],[-6.732803],[-4.276961],[7.082776],[-9.585578],[8.511161],[-4.775992],[6.851457],[7.526747],[6.963992],[5.428930],[5.913450],[-5.451715],[-9.404892],[-0.767469],[3.720665],[-8.966234],[-7.011844],[0.308049],[-6.810318],[-8.042996],[-2.908953],[3.583210],[-2.371110],[4.472766],[-1.283201],[3.554781],[-8.713127],[-0.957571],[-6.522406],[-3.411430],[-6.878557],[5.403139],[8.056325],[5.044322],[-5.512197],[5.074703],[-7.801539],[-3.367224],[0.783440],[-0.342281],[7.483141],[7.000894],[1.245948],[-6.274887],[3.883904],[8.848773],[0.167937],[-3.081739],[6.368271],[-4.970987],[-6.867999],[1.889951],[-2.847978],[5.079194],[4.217269],[9.807434],[8.356722],[-2.466458],[-9.262149],[-3.634464],[8.170790],[-1.303141],[-6.223560],[9.656871],[-8.319216],[0.497527],[1.258416],[8.089716],[1.371380],[9.164958],[2.814035],[4.649906],[-5.707931],[5.812491],[-2.844416],[-0.549362],[-3.219370],[2.656072],[9.112154],[-8.475974],[-9.705107],[-5.622732],[-0.629921],[-9.320889],[-0.219927],[4.556733],[-0.152033],[-2.607078],[-4.943418],[-9.045265],[9.230974],[1.843251]], dtype = "float64")#candidate|3861|(330, 1)|const|float64
call_3860 = relay.TupleGetItem(func_146_call(relay.reshape(const_3861.astype('float64'), [11, 5, 6])), 0)
call_3862 = relay.TupleGetItem(func_148_call(relay.reshape(const_3861.astype('float64'), [11, 5, 6])), 0)
uop_3873 = relay.erf(const_3861.astype('float32')) # shape=(330, 1)
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3880 = relay.TupleGetItem(func_2994_call(), 3)
call_3881 = relay.TupleGetItem(func_2996_call(), 3)
uop_3905 = relay.log10(uop_3873.astype('float32')) # shape=(330, 1)
func_3274_call = mod.get_global_var('func_3274')
func_3276_call = mutated_mod.get_global_var('func_3276')
var_3909 = relay.var("var_3909", dtype = "float32", shape = (1820,))#candidate|3909|(1820,)|var|float32
call_3908 = relay.TupleGetItem(func_3274_call(relay.reshape(var_3909.astype('float32'), [1820,])), 2)
call_3910 = relay.TupleGetItem(func_3276_call(relay.reshape(var_3909.astype('float32'), [1820,])), 2)
output = relay.Tuple([call_3856,call_3860,call_3880,uop_3905,call_3908,var_3909,])
output2 = relay.Tuple([call_3857,call_3862,call_3881,uop_3905,call_3910,var_3909,])
func_3911 = relay.Function([var_3909,], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3912 = relay.var("var_3912", dtype = "float32", shape = (1820,))#candidate|3912|(1820,)|var|float32
func_3911_call = mutated_mod.get_global_var('func_3911')
call_3913 = func_3911_call(var_3912)
output = call_3913
func_3914 = relay.Function([var_3912], output)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3927 = relay.var("var_3927", dtype = "float32", shape = (8, 3, 7))#candidate|3927|(8, 3, 7)|var|float32
uop_3928 = relay.acosh(var_3927.astype('float32')) # shape=(8, 3, 7)
func_1897_call = mod.get_global_var('func_1897')
func_1902_call = mutated_mod.get_global_var('func_1902')
const_3943 = relay.const([False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True], dtype = "bool")#candidate|3943|(312,)|const|bool
const_3944 = relay.const([[-0.567160,-0.317155,9.814003,1.403633,-8.821999,6.540887,-4.248252,-5.658484,-9.347309,2.037032,-9.291371,1.956347,5.905338,4.266379,8.769808,9.624834,-6.222481,3.328003,7.163182,-7.463944,2.396585,-0.073792,-3.175049,7.044840,2.928665,-9.474873,-4.120452,-6.199151],[-2.348160,3.258380,8.270566,-2.608767,-8.738297,1.579449,-7.787916,3.334893,5.059933,0.402467,-0.543292,-0.495845,2.763825,5.986113,-9.101815,5.267645,9.915871,-4.283166,-7.153730,8.258216,-5.413393,-5.326957,-0.747928,5.183747,-8.288456,3.055256,1.061999,-4.641877],[-4.175519,-2.777746,-6.240566,3.329428,-2.037971,-7.473998,-2.846817,6.222022,-4.522245,2.129629,2.554966,-0.412172,9.384016,8.360110,7.929175,8.230424,8.489717,-1.092897,-1.856925,-0.221754,-0.997211,1.033859,-7.969551,0.123720,-0.602473,6.548674,9.534278,1.968612],[4.539464,-4.909356,9.500897,-4.540110,6.430372,-6.633158,-6.642023,6.154062,7.480175,-9.815339,9.632132,-7.706811,-1.852646,-8.324861,7.553889,3.910680,-5.928135,8.011571,7.376476,-6.858839,-0.201589,-8.058533,9.829920,4.574586,-0.132385,-4.292790,-3.610508,-9.523723],[-1.811524,-7.435811,-1.810520,-8.742460,4.923819,-3.203895,1.948079,-9.197840,0.515933,5.459021,-8.657407,6.208187,-2.053812,-2.513549,-3.526051,6.820860,0.673494,-3.325552,9.139018,-3.326145,-5.657098,-5.636957,-3.684335,-6.309502,9.500357,-6.488091,-2.986143,8.273134],[-2.466909,5.306962,-5.313078,2.661376,6.559229,2.300041,4.702322,4.379240,4.175795,8.962051,-4.348099,6.459982,1.362340,2.916363,-0.060449,-9.637311,6.851468,5.642676,8.055770,3.994075,1.482895,2.276679,5.539780,-5.645584,-5.561450,-7.715377,9.480709,1.655442],[7.775378,5.870884,5.702107,-6.937544,8.193931,-0.887247,0.285668,2.107308,-3.435896,8.646678,-7.607294,-4.585278,3.860857,7.854909,9.865859,-7.867817,-5.773180,-5.798595,1.763050,-3.145337,-9.046209,5.961817,-6.013952,-3.866102,-3.345180,-5.448794,-0.963142,7.573649]], dtype = "float32")#candidate|3944|(7, 28)|const|float32
const_3945 = relay.const([[-6.018428,-1.753458,6.866429,8.071327,6.952835,-3.695714,9.321476,5.636310,-1.131050,2.206613,-5.270871,2.725282,-6.637623,9.245662,6.236320],[1.206426,-2.694658,-9.450610,6.245695,8.532258,-5.799245,-5.243592,-9.667512,4.500112,2.237625,-3.212462,-5.559423,9.341980,-4.101372,-6.191445],[-3.468654,8.278147,7.066268,-1.806396,-1.329917,8.440060,-9.283244,-0.289166,-8.946520,0.558097,5.844020,0.079905,6.265147,-5.980879,7.892874],[-9.540680,-8.135663,-3.480139,6.018470,-3.498522,-4.274256,-8.257335,5.809839,-5.507974,2.238945,0.429107,7.762264,-7.057014,-9.315984,-8.839593],[1.103297,3.044842,8.088827,-1.883681,-5.519110,-4.790655,-7.688698,0.867601,5.286722,1.090974,7.669952,4.396920,-7.689839,-8.726375,-0.191139],[-5.470017,5.927602,6.941581,-4.430038,2.260501,9.008559,9.858240,8.621913,7.392050,-9.228414,9.422351,-3.933707,-7.288725,-7.656894,4.080793],[-7.868562,1.378336,5.480993,-1.575836,-3.569568,-7.156439,2.522254,8.986934,9.711133,4.123948,-0.994293,1.619990,-3.229574,2.868448,-4.341934],[7.423570,-9.677480,-9.145049,-0.645081,1.288725,3.975791,-7.193233,-9.576783,9.158158,-1.747780,6.865444,5.174601,9.011607,3.844665,-5.997760],[1.810167,-5.800071,-1.947252,2.794954,2.723974,2.320259,8.745228,6.284737,-9.118031,9.389053,8.070585,5.598105,9.945894,-5.878956,5.179977],[6.636407,5.238693,-5.814140,-9.771258,-6.176677,3.135302,-9.827309,8.598578,-7.698829,-8.850232,-5.708780,-6.676431,-6.364577,3.024081,-8.715651],[-2.785734,0.232200,3.161064,1.141080,-4.980077,3.734933,-6.255192,-7.335381,3.373974,7.932036,-2.706116,-7.314895,6.775182,-0.958192,3.897299],[2.486377,-5.799663,0.896379,-0.134488,-5.623020,-2.779426,-6.967651,4.189070,-6.531125,6.510714,1.580082,-1.940792,3.663709,-3.264522,-8.631490],[-5.378070,8.678203,-3.441379,0.835481,-9.079411,0.102525,7.465684,5.205650,-4.794540,-0.050337,0.783911,8.070517,5.150751,8.167364,8.948026],[6.743149,6.881410,-5.836567,-0.403744,-9.706316,5.259127,7.420468,-8.937441,-6.594217,3.114456,-0.811086,-9.981198,-8.126126,-7.825863,7.778262],[9.452115,-6.011028,-7.071900,-8.067144,-1.247013,0.493295,0.040235,-2.896902,6.363095,-8.777348,2.024952,5.093233,1.375513,0.900500,7.119620],[3.184519,-5.614299,0.065606,-9.288331,1.830407,-8.238723,1.051573,9.656489,4.582598,-4.131635,5.399910,4.980325,1.485621,-3.725530,-5.589945],[1.697441,-0.138595,6.003388,-2.009695,-1.932491,-3.672553,-9.857618,-0.094738,-9.829180,-7.525641,8.537681,-0.884903,-2.085581,0.080180,0.248385],[-1.460987,7.244503,-4.913453,-2.710602,8.257805,-1.936406,-4.423113,4.518129,-0.102254,-4.643410,-6.189611,3.914211,-4.102983,-1.029306,-2.489153],[-5.028442,-6.297653,-0.132003,-0.232201,-6.265624,6.791659,-5.542830,6.225479,-0.845288,4.573681,4.718280,-4.218346,-9.236876,-3.464036,8.484555],[-8.917204,-5.640678,0.677691,4.825686,4.823946,7.644747,-3.053386,-7.108306,5.158362,-9.348755,-5.813391,-8.553385,-8.657072,6.045892,5.506413],[6.009349,-3.609498,2.546438,-1.089722,-1.646945,-0.528034,-5.880209,3.092978,-3.897423,1.166906,7.210282,-7.748424,7.754119,-3.211066,-5.047153],[5.384907,-9.238446,0.220007,5.083456,-5.016134,5.783162,-8.852632,-9.205740,9.223918,-9.394685,3.251809,-3.465600,-6.015341,-1.000321,-8.704007],[-5.927515,-3.027508,-1.241276,-3.173053,-0.406369,7.073161,1.112895,3.996389,0.349415,8.287950,-7.105893,9.994056,-5.483189,-0.135602,-1.416496],[0.406594,-4.083345,5.614099,6.828652,-9.584000,7.499508,-2.157455,1.320226,-8.020493,-6.335685,1.043569,-8.104162,0.771567,-7.174075,7.238678],[-0.936228,5.033004,-3.856806,2.844823,5.303624,9.316225,6.957007,3.870106,-3.519486,5.057225,9.330226,1.346402,9.339601,6.293988,-5.378823]], dtype = "float32")#candidate|3945|(25, 15)|const|float32
call_3942 = relay.TupleGetItem(func_1897_call(relay.reshape(const_3943.astype('bool'), [312,]), relay.reshape(const_3944.astype('float32'), [196,]), relay.reshape(const_3945.astype('float32'), [125, 3]), ), 6)
call_3946 = relay.TupleGetItem(func_1902_call(relay.reshape(const_3943.astype('bool'), [312,]), relay.reshape(const_3944.astype('float32'), [196,]), relay.reshape(const_3945.astype('float32'), [125, 3]), ), 6)
bop_3961 = relay.divide(uop_3928.astype('float64'), relay.reshape(var_3927.astype('float64'), relay.shape_of(uop_3928))) # shape=(8, 3, 7)
output = relay.Tuple([call_3942,const_3943,const_3944,const_3945,bop_3961,])
output2 = relay.Tuple([call_3946,const_3943,const_3944,const_3945,bop_3961,])
func_3968 = relay.Function([var_3927,], output)
mod['func_3968'] = func_3968
mod = relay.transform.InferType()(mod)
var_3969 = relay.var("var_3969", dtype = "float32", shape = (8, 3, 7))#candidate|3969|(8, 3, 7)|var|float32
output = func_3968(var_3969)
func_3970 = relay.Function([var_3969], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_4012 = func_2279_call()
call_4013 = func_2279_call()
func_2428_call = mod.get_global_var('func_2428')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_4066 = relay.const([True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False], dtype = "bool")#candidate|4066|(312,)|const|bool
var_4067 = relay.var("var_4067", dtype = "float32", shape = (375,))#candidate|4067|(375,)|var|float32
const_4068 = relay.const([1.406471,7.140164,-7.211911,-6.154639,-9.401857,0.723145,-2.010752,6.473347,4.012429,8.881432,3.571672,4.441683,-2.733567,6.446094,3.525580,5.750167,-5.035761,-1.375436,-4.008066,7.518774,6.200043,-9.716033,-7.971275,-0.860767,4.073718,2.026403,-2.652835,7.239479,-2.137161,-9.069953,1.984295,-3.443262,6.175440,7.166783,5.075808,-0.718226,2.945997,-0.883880,2.747979,1.560873,-7.732784,2.701249,-7.251018,-1.002122,2.295941,-6.687620,-2.989190,-7.154056,-6.754117,3.244496,2.878045,-3.093126,-5.852898,-8.815204,0.403559,-4.091338,-3.002868,-9.860356,-3.609349,-2.178804,7.318427,3.645776,8.692562,4.616035,3.305055,-5.804881,8.394700,9.276490,1.722499,7.295868,-9.474471,1.558196,3.085628,2.146161,-1.774771,-1.817406,-0.249114,3.242079,5.874613,3.666327,3.624804,1.887589,-3.510397,-8.209548,-5.930976,-0.887058,5.833281,-7.404532,5.826937,2.855842,1.930119,-9.127837,7.514525,8.488117,-2.680077,9.888571,-2.013731,-8.964848,4.461843,4.013207,-5.175343,-9.816066,0.721675,0.596542,-3.176579,-5.524980,-6.456164,-3.304842,-5.628529,-4.257896,-4.407126,-7.918888,5.583372,-8.523146,3.205064,-8.349895,4.338405,5.807797,7.393559,-8.672188,6.930274,7.546911,5.418433,8.398930,-8.578508,-9.264992,0.866035,0.383727,-7.004516,-4.385085,6.377188,0.894515,0.324316,8.456952,7.849426,0.696183,-6.908261,-5.929024,-8.309505,3.704148,-1.792686,7.620598,-3.066589,-0.972130,-5.069254,-5.225622,2.538688,4.413667,5.503908,-0.851173,-7.383800,1.013482,-3.233621,-9.067544,-0.745000,1.379434,0.623075,-3.144843,-2.444038,-2.228087,6.932342,-6.698547,2.512015,-6.087473,9.364470,9.258137,-8.976685,-6.963490,1.723069,4.481266,3.027474,-2.130843,1.440537,-5.270039,1.234642,3.850969,-0.505724,1.259138,3.940633,-9.973639,-0.663102,-1.771192,-9.403175,-8.199697,7.048727,3.835666,-0.148611,2.542138,6.882745,8.227609,8.053145,5.962104,4.591586,7.953105,-1.606867,3.745964], dtype = "float32")#candidate|4068|(196,)|const|float32
const_4069 = relay.const([-9.903470,2.023158,8.804797,-7.308817,-6.828055,-1.559396,-4.100040,-7.728186,-5.061750,0.125502,3.612806,-5.333671,-1.327340,-0.345832,5.275536,8.259381,2.955644,1.726353,-4.377733,0.697221,4.517518,-7.984469,1.069910,2.916655,-1.855625,3.016380,2.418930,-3.569271,5.155365,-1.267022,-0.962327,6.109971], dtype = "float64")#candidate|4069|(32,)|const|float64
var_4070 = relay.var("var_4070", dtype = "uint32", shape = (756,))#candidate|4070|(756,)|var|uint32
call_4065 = relay.TupleGetItem(func_2428_call(relay.reshape(const_4066.astype('bool'), [312,]), relay.reshape(var_4067.astype('float32'), [1, 375]), relay.reshape(const_4068.astype('float32'), [196,]), relay.reshape(const_4069.astype('float64'), [1, 32]), relay.reshape(var_4070.astype('uint32'), [756,]), ), 5)
call_4071 = relay.TupleGetItem(func_2434_call(relay.reshape(const_4066.astype('bool'), [312,]), relay.reshape(var_4067.astype('float32'), [1, 375]), relay.reshape(const_4068.astype('float32'), [196,]), relay.reshape(const_4069.astype('float64'), [1, 32]), relay.reshape(var_4070.astype('uint32'), [756,]), ), 5)
output = relay.Tuple([call_4012,call_4065,const_4066,var_4067,const_4068,const_4069,var_4070,])
output2 = relay.Tuple([call_4013,call_4071,const_4066,var_4067,const_4068,const_4069,var_4070,])
func_4082 = relay.Function([var_4067,var_4070,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mutated_mod.get_global_var('func_4082')
var_4084 = relay.var("var_4084", dtype = "float32", shape = (375,))#candidate|4084|(375,)|var|float32
var_4085 = relay.var("var_4085", dtype = "uint32", shape = (756,))#candidate|4085|(756,)|var|uint32
call_4083 = func_4082_call(var_4084,var_4085,)
output = call_4083
func_4086 = relay.Function([var_4084,var_4085,], output)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_4088 = func_1391_call()
call_4089 = func_1391_call()
output = relay.Tuple([call_4088,])
output2 = relay.Tuple([call_4089,])
func_4093 = relay.Function([], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
output = func_4093()
func_4094 = relay.Function([], output)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_4100 = func_1495_call()
call_4101 = func_1495_call()
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4107 = func_1798_call()
call_4108 = func_1798_call()
output = relay.Tuple([call_4100,call_4107,])
output2 = relay.Tuple([call_4101,call_4108,])
func_4112 = relay.Function([], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
mutated_mod['func_4112'] = func_4112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mutated_mod.get_global_var('func_4112')
call_4113 = func_4112_call()
output = call_4113
func_4114 = relay.Function([], output)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_4132 = func_1495_call()
call_4133 = func_1495_call()
output = call_4132
output2 = call_4133
func_4149 = relay.Function([], output)
mod['func_4149'] = func_4149
mod = relay.transform.InferType()(mod)
output = func_4149()
func_4150 = relay.Function([], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4238 = relay.var("var_4238", dtype = "float64", shape = (14, 7, 16))#candidate|4238|(14, 7, 16)|var|float64
uop_4239 = relay.log2(var_4238.astype('float64')) # shape=(14, 7, 16)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4246 = func_1798_call()
call_4247 = func_1798_call()
uop_4248 = relay.exp(uop_4239.astype('float32')) # shape=(14, 7, 16)
var_4250 = relay.var("var_4250", dtype = "float32", shape = (14, 7, 16))#candidate|4250|(14, 7, 16)|var|float32
bop_4251 = relay.subtract(uop_4248.astype('int64'), relay.reshape(var_4250.astype('int64'), relay.shape_of(uop_4248))) # shape=(14, 7, 16)
var_4267 = relay.var("var_4267", dtype = "float64", shape = (14, 7, 16))#candidate|4267|(14, 7, 16)|var|float64
bop_4268 = relay.greater(uop_4239.astype('bool'), relay.reshape(var_4267.astype('bool'), relay.shape_of(uop_4239))) # shape=(14, 7, 16)
bop_4271 = relay.mod(var_4250.astype('float32'), relay.reshape(bop_4251.astype('float32'), relay.shape_of(var_4250))) # shape=(14, 7, 16)
output = relay.Tuple([call_4246,bop_4268,bop_4271,])
output2 = relay.Tuple([call_4247,bop_4268,bop_4271,])
func_4282 = relay.Function([var_4238,var_4250,var_4267,], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
var_4283 = relay.var("var_4283", dtype = "float64", shape = (14, 7, 16))#candidate|4283|(14, 7, 16)|var|float64
var_4284 = relay.var("var_4284", dtype = "float32", shape = (14, 7, 16))#candidate|4284|(14, 7, 16)|var|float32
var_4285 = relay.var("var_4285", dtype = "float64", shape = (14, 7, 16))#candidate|4285|(14, 7, 16)|var|float64
output = func_4282(var_4283,var_4284,var_4285,)
func_4286 = relay.Function([var_4283,var_4284,var_4285,], output)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_4352 = func_1495_call()
call_4353 = func_1495_call()
output = call_4352
output2 = call_4353
func_4370 = relay.Function([], output)
mod['func_4370'] = func_4370
mod = relay.transform.InferType()(mod)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4370_call = mutated_mod.get_global_var('func_4370')
call_4371 = func_4370_call()
output = call_4371
func_4372 = relay.Function([], output)
mutated_mod['func_4372'] = func_4372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4407 = func_1798_call()
call_4408 = func_1798_call()
output = relay.Tuple([call_4407,])
output2 = relay.Tuple([call_4408,])
func_4409 = relay.Function([], output)
mod['func_4409'] = func_4409
mod = relay.transform.InferType()(mod)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mutated_mod.get_global_var('func_4409')
call_4410 = func_4409_call()
output = call_4410
func_4411 = relay.Function([], output)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4149_call = mod.get_global_var('func_4149')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_4496 = func_4149_call()
call_4497 = func_4149_call()
output = call_4496
output2 = call_4497
func_4511 = relay.Function([], output)
mod['func_4511'] = func_4511
mod = relay.transform.InferType()(mod)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4511_call = mutated_mod.get_global_var('func_4511')
call_4512 = func_4511_call()
output = call_4512
func_4513 = relay.Function([], output)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3680_call = mod.get_global_var('func_3680')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_4514 = relay.TupleGetItem(func_3680_call(), 0)
call_4515 = relay.TupleGetItem(func_3682_call(), 0)
output = relay.Tuple([call_4514,])
output2 = relay.Tuple([call_4515,])
func_4523 = relay.Function([], output)
mod['func_4523'] = func_4523
mod = relay.transform.InferType()(mod)
mutated_mod['func_4523'] = func_4523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4523_call = mutated_mod.get_global_var('func_4523')
call_4524 = func_4523_call()
output = call_4524
func_4525 = relay.Function([], output)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_4529 = relay.TupleGetItem(func_3560_call(), 0)
call_4530 = relay.TupleGetItem(func_3562_call(), 0)
output = relay.Tuple([call_4529,])
output2 = relay.Tuple([call_4530,])
func_4533 = relay.Function([], output)
mod['func_4533'] = func_4533
mod = relay.transform.InferType()(mod)
output = func_4533()
func_4534 = relay.Function([], output)
mutated_mod['func_4534'] = func_4534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_4538 = relay.TupleGetItem(func_3560_call(), 0)
call_4539 = relay.TupleGetItem(func_3562_call(), 0)
output = relay.Tuple([call_4538,])
output2 = relay.Tuple([call_4539,])
func_4540 = relay.Function([], output)
mod['func_4540'] = func_4540
mod = relay.transform.InferType()(mod)
mutated_mod['func_4540'] = func_4540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mutated_mod.get_global_var('func_4540')
call_4541 = func_4540_call()
output = call_4541
func_4542 = relay.Function([], output)
mutated_mod['func_4542'] = func_4542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_4566 = relay.TupleGetItem(func_2994_call(), 0)
call_4567 = relay.TupleGetItem(func_2996_call(), 0)
output = call_4566
output2 = call_4567
func_4590 = relay.Function([], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
output = func_4590()
func_4591 = relay.Function([], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4523_call = mod.get_global_var('func_4523')
func_4525_call = mutated_mod.get_global_var('func_4525')
call_4600 = relay.TupleGetItem(func_4523_call(), 0)
call_4601 = relay.TupleGetItem(func_4525_call(), 0)
output = relay.Tuple([call_4600,])
output2 = relay.Tuple([call_4601,])
func_4606 = relay.Function([], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
output = func_4606()
func_4607 = relay.Function([], output)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3721_call = mutated_mod.get_global_var('func_3721')
call_4619 = relay.TupleGetItem(func_3719_call(), 0)
call_4620 = relay.TupleGetItem(func_3721_call(), 0)
var_4623 = relay.var("var_4623", dtype = "bool", shape = (3, 10, 13))#candidate|4623|(3, 10, 13)|var|bool
bop_4624 = relay.bitwise_and(call_4619.astype('int64'), relay.reshape(var_4623.astype('int64'), relay.shape_of(call_4619))) # shape=(3, 10, 13)
bop_4627 = relay.bitwise_and(call_4620.astype('int64'), relay.reshape(var_4623.astype('int64'), relay.shape_of(call_4620))) # shape=(3, 10, 13)
output = bop_4624
output2 = bop_4627
func_4630 = relay.Function([var_4623,], output)
mod['func_4630'] = func_4630
mod = relay.transform.InferType()(mod)
var_4631 = relay.var("var_4631", dtype = "bool", shape = (3, 10, 13))#candidate|4631|(3, 10, 13)|var|bool
output = func_4630(var_4631)
func_4632 = relay.Function([var_4631], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3680_call = mod.get_global_var('func_3680')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_4697 = relay.TupleGetItem(func_3680_call(), 2)
call_4698 = relay.TupleGetItem(func_3682_call(), 2)
uop_4708 = relay.acosh(call_4697.astype('float64')) # shape=(5, 84)
uop_4710 = relay.acosh(call_4698.astype('float64')) # shape=(5, 84)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_4714 = relay.TupleGetItem(func_4540_call(), 0)
call_4715 = relay.TupleGetItem(func_4542_call(), 0)
output = relay.Tuple([uop_4708,call_4714,])
output2 = relay.Tuple([uop_4710,call_4715,])
func_4725 = relay.Function([], output)
mod['func_4725'] = func_4725
mod = relay.transform.InferType()(mod)
output = func_4725()
func_4726 = relay.Function([], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4737 = func_1798_call()
call_4738 = func_1798_call()
func_4590_call = mod.get_global_var('func_4590')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_4752 = func_4590_call()
call_4753 = func_4590_call()
func_2863_call = mod.get_global_var('func_2863')
func_2866_call = mutated_mod.get_global_var('func_2866')
const_4775 = relay.const([-9.551342,1.249999,-6.774354,3.657707,-3.620555,8.955793,-9.846009,9.189836,5.841152,8.927756,8.084793,-4.523241,1.236798,-9.703928,3.887456,4.308048,-7.501291,-5.744835,6.334963,5.695408,3.414779,-9.987733,9.171449,-0.501662,7.764801,-8.780100,8.062820,-8.806842,2.318548,4.329399,-2.450368,-3.442834,5.892202,5.152936,-8.409544,8.361674,5.069743,9.514356,0.348826,3.960148,-6.134965,6.509462,-2.757247,-2.783326,-2.577692,-1.184005,-3.238640,4.533594,-5.792616,-8.194537,2.241274,-5.625466,3.552639,-0.495754,-3.670375,-9.199763,7.290688,-3.174142,1.125730,4.097282,-8.404611,-0.819125,-8.754942,-5.814968,-9.586398,-2.441093,-6.905270,-1.855049,-0.601231,-7.954803,-6.565696,8.556497,-6.796912,-6.882056,5.885334,4.963002,8.244540,-0.175188,5.600021,-3.214952,-2.395166,-4.144144,-6.318134,-1.056787,9.556120,7.202633,0.558817,8.304028,-7.320689,-6.600167,2.731919,6.600564,6.261002,-2.391571,-7.798960,1.315239,1.291428,-3.488122,-5.866865,9.604115,1.605072,-3.337518,7.761784,3.460321,1.954387,5.916160,0.910919,0.566472,8.240989,-9.856998,0.819976,-4.495926,2.077340,-1.898603,2.035585,6.800578,-5.424908,-7.305933,7.377299,5.228361,9.430747,7.329235,0.085217,6.424127,-6.716736,-7.101772,8.548770,5.121310,3.900644,4.243707,4.281599,-9.065027,-1.855469,0.882976,-5.035403,-0.129800,-5.502625,-0.339286,-6.032229,-7.752159,7.205517,-7.615000,3.517459,6.922650,0.469443,1.330519,9.073610,-9.966700,-6.134039,4.466555,-7.068046,-9.888678,5.167662,-5.536023,3.153656,0.429282,-8.038597,1.390527,2.909224,-0.896122,0.539414,8.736784,2.450832,-6.943100,5.071056,-2.375029,1.861232,-3.086271,-0.988939,5.012022,2.678678,-1.730661,-8.381614,2.271298,5.765856,2.977642,-0.899256,2.860237,-6.627315,7.681581,-1.874216,-9.157140,2.096969,-4.040693,3.480098,9.388871,-4.225788,-7.805472,9.095396,-7.575925,-7.009901,-1.751746,-1.820439,-7.888090,5.012754,0.004278,-3.969624,-8.872281,-2.871836,3.853657,-0.483055,7.494333,-2.496551,8.754731,7.066067,-5.418328,5.201870,-5.440773,8.859407,1.231486,5.887736,-8.674916,-7.957766,6.695584,6.801718,-7.929367,6.432679,7.149861,-0.703091,6.093096,-3.259374,1.438097,-3.155185,-3.829959,-0.774293,1.112163,-0.861797,4.707138,-0.206589,3.072758,0.473104,5.944181,9.597069,1.746227,7.779609,-4.448423,-8.075184,-1.889228,7.891125,-4.488832,-9.480065,9.644901,3.010965,4.037677,4.513813,-7.122893,-9.427157,5.856468,-1.556408,7.162108,-6.161080,1.851589,5.128013,6.999673,-7.076510,5.887962,2.319128,2.362988,1.267449,-1.603230,-9.613616,-6.576162,-3.035325,-1.971366,-0.088062,1.631916,3.789176,4.887108,-8.995331,-5.359445,8.632179,4.444504,-3.184169,1.738203,8.404488,7.721778,-4.145196,-5.503694,5.884397,5.602969,7.720944,-2.119574,-9.942551,3.186069,7.147670,2.047780,8.075831,5.474751,-9.794928,-8.352933,4.380052,5.130408,0.917166,-9.846788,-5.613340,-8.034471,-8.788448,8.482220,-2.110869,5.709705,-5.408739,-9.493318,8.353382,0.266961,7.584773,4.200981,4.884902,-5.962962,1.477992,-2.463600,0.472568,9.340318,4.490134,-3.994326,6.443480,9.963065,-9.613677,-8.066778,-0.810422,6.094427,1.012935,-0.850084,0.102119,7.947307,3.900534,8.594966,-6.395007,0.188601,9.753782,3.191013,2.580130,-9.750856,8.225977,-8.860844,-5.898771,2.945162,-7.781463,3.213325,-2.671548,-7.148957,-6.583277,-9.309734,-1.332331,-2.175533,1.814739,4.868749,4.501792,1.688738,-9.421349,-6.377264,2.200600,-3.695284,0.520066,-0.154575,-9.582120,9.801774,-8.933950,4.922719,4.565330,-0.377284,7.590578,-7.268845,4.613700,6.852217,3.365731,-8.268107,6.299173,-3.096823,-5.048724,7.959069,-2.641479,4.051446,-1.636538,0.433093,5.076517,3.408288,2.574219,7.660142,8.146136,-6.613068,-9.287222,3.676513,9.729108,-8.810205,-9.894431,-7.754886,-8.826981,6.057733,-3.305957,8.745261,-7.223627,3.975554,-8.512482,-0.684838,2.574610,-7.637142,-5.606440,-9.698093,1.160323,2.592122,-5.838703,-3.969532,-3.360303,3.780984,8.554478,-4.060700,0.099362,0.408622,-6.916750,3.342833,4.129900,7.335238,-8.466701,1.986303,-3.711792,0.513947,0.331254,6.758054,-4.856661,-7.678595,9.445511,3.689983,-7.416794,-6.365350,5.198179,5.228963,1.655476,-3.495674,-4.808649,-3.922462,-0.183572,4.396994,8.017445,0.271826,3.985535,8.596243,-9.769903,-4.144216,-4.737671,7.124698,-7.045760,-6.661322,6.615836,9.183170,-0.024813,-2.757052,-4.652853,-4.059384,6.321428,7.946478,-1.975522,6.018825,6.207553,8.055372,0.820925,3.473825,0.293265,0.291345,-1.886785,-9.872727,-7.341844,-2.072414,-1.345530,8.098725,-3.071838,3.248712,4.946680,-8.353916,-6.087605,-1.033786,-4.948491,0.452632,7.070321,5.254837,-3.939590,4.434778,-2.257386,1.011961,-4.907918,-7.648461,0.849991,1.441468,2.908912,9.034067,-8.657729,0.223632,-8.650016,-9.865245,0.655902,5.680285,-6.917229,0.388450,-9.177162,0.447280,2.816628,-7.960690,8.163345,4.149387,6.626121,-7.413059,7.654921,-8.162384,0.705265,7.636874,-9.622196,-1.171758,8.447977,-0.929456,-3.725644,8.492941,6.847843,-4.595609,9.237718,0.492063,-6.469015,-4.641685,0.721524,9.055771,-3.973304,-3.012155,-8.530444,3.354573,-0.534317,6.191795,5.333598,-6.716098,-8.573671,-4.813033,-7.314354,-4.350842,3.978950,-7.629787,-8.192733,1.949478,4.126042,9.835356,-2.499131,4.173826,-0.718481,9.187581,9.727638,2.153544,-4.369931,-3.308594,1.914257,-6.058602,2.943042,-5.159091,-5.994774,-7.088149,6.603869,0.910773,-4.049872,-1.421744,-8.119182,2.209993,9.902454,8.950386,-5.686585,-9.112516,4.966360,-7.450552,-7.907101,-9.554417,7.677915,-7.101666,-5.402448,-3.421429,-4.533806,-8.426392,9.286874,1.201692,-6.675154,-2.609829,-7.451439,-4.992706,1.616039,-1.341730,6.058994,2.143119,-6.880553,1.732919,5.500575,7.535750,-6.662637,-2.156814,9.770027,-8.438164,1.625432,-0.437362,-2.372985,3.329078,-7.395277,9.446067,-9.840051,-8.613003,-5.894433,4.746617,5.975411,7.718684,-3.109259,7.543257,5.222601,9.947583,3.199032,-7.361430,4.628287,6.052193,-8.459740,2.809937,9.305800,7.833712,-1.141307,-2.961400,9.658999,4.031233,0.393268,-5.139981,6.654199,0.238564,0.503368,-6.525574,3.402880,-2.256416,-9.105997,-4.503117,5.666112,8.698582,4.938136,-2.814320,2.327473,-9.569763,-6.386020,-7.301345,6.161374,-2.073224,3.787854,4.564892,0.581361,-8.938369], dtype = "float32")#candidate|4775|(640,)|const|float32
call_4774 = relay.TupleGetItem(func_2863_call(relay.reshape(const_4775.astype('float32'), [20, 32])), 3)
call_4776 = relay.TupleGetItem(func_2866_call(relay.reshape(const_4775.astype('float32'), [20, 32])), 3)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_4784 = func_1391_call()
call_4785 = func_1391_call()
func_1495_call = mod.get_global_var('func_1495')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_4789 = func_1495_call()
call_4790 = func_1495_call()
output = relay.Tuple([call_4737,call_4752,call_4774,const_4775,call_4784,call_4789,])
output2 = relay.Tuple([call_4738,call_4753,call_4776,const_4775,call_4785,call_4790,])
func_4791 = relay.Function([], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
output = func_4791()
func_4792 = relay.Function([], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1967_call = mod.get_global_var('func_1967')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_4826 = func_1967_call()
call_4827 = func_1967_call()
func_708_call = mod.get_global_var('func_708')
func_710_call = mutated_mod.get_global_var('func_710')
var_4858 = relay.var("var_4858", dtype = "bool", shape = (312,))#candidate|4858|(312,)|var|bool
call_4857 = relay.TupleGetItem(func_708_call(relay.reshape(var_4858.astype('bool'), [13, 2, 12])), 0)
call_4859 = relay.TupleGetItem(func_710_call(relay.reshape(var_4858.astype('bool'), [13, 2, 12])), 0)
output = relay.Tuple([call_4826,call_4857,var_4858,])
output2 = relay.Tuple([call_4827,call_4859,var_4858,])
func_4862 = relay.Function([var_4858,], output)
mod['func_4862'] = func_4862
mod = relay.transform.InferType()(mod)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4863 = relay.var("var_4863", dtype = "bool", shape = (312,))#candidate|4863|(312,)|var|bool
func_4862_call = mutated_mod.get_global_var('func_4862')
call_4864 = func_4862_call(var_4863)
output = call_4864
func_4865 = relay.Function([var_4863], output)
mutated_mod['func_4865'] = func_4865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4929 = relay.var("var_4929", dtype = "float64", shape = (13, 3, 15))#candidate|4929|(13, 3, 15)|var|float64
var_4930 = relay.var("var_4930", dtype = "float64", shape = (13, 3, 15))#candidate|4930|(13, 3, 15)|var|float64
bop_4931 = relay.mod(var_4929.astype('float64'), relay.reshape(var_4930.astype('float64'), relay.shape_of(var_4929))) # shape=(13, 3, 15)
const_4942 = relay.const([[[6.150911,2.949816,8.416436,-1.815094,8.456749,0.622394,3.041637,3.465065,9.051323,1.510813,9.764931,-6.171479,8.947770,-3.331412,8.888777],[-6.210365,-7.576755,-4.947070,1.282389,1.415057,5.371157,4.842505,-1.273596,-0.558040,-0.128482,-4.581937,7.652680,-3.394094,-8.592652,-5.182189],[-4.158651,-9.405114,8.699922,2.217870,4.505934,6.134811,2.262450,7.721644,-1.503412,-2.634995,6.990570,-3.382886,6.975895,-8.133598,-5.791977]],[[9.298715,6.403057,8.118135,7.676316,6.482883,6.976247,0.891129,-4.017980,5.907975,-4.122392,4.058705,-6.574709,-4.202768,-3.497896,4.781108],[-8.529327,-3.669768,-2.473891,-4.952627,-1.135133,-0.208976,-6.540181,-5.531180,2.763583,8.919381,8.669913,6.548907,8.684114,9.262292,-8.941962],[-8.301577,-1.822804,-9.793180,-2.553854,-6.935394,4.664795,0.743811,-0.642847,-7.093628,3.742416,2.633829,-3.486277,-8.094433,-3.239794,9.600853]],[[-7.580826,2.815025,-0.008533,3.682586,-1.964908,8.920800,-4.847258,-6.415646,4.693502,-7.730086,-2.832226,8.968326,9.686745,-1.187564,-9.009829],[-0.591662,3.927557,1.293338,-8.171342,9.792093,-5.780124,-6.135602,3.887536,1.687603,0.325005,3.486124,5.471356,-6.588558,-4.093983,-1.336186],[-9.507614,9.511962,7.469889,-2.717114,8.502017,-5.599244,-9.764741,-6.521969,6.298567,-4.730026,-7.742233,4.289361,5.371909,-6.536647,-0.879539]],[[-4.324983,8.835953,0.790403,-9.662894,-2.686374,6.924332,7.965828,9.636819,2.908966,9.148879,8.726250,7.091277,8.618290,-8.954515,-5.582830],[-2.355040,-6.751224,-2.526228,-3.165160,6.226377,-3.690588,-9.283842,-5.485499,0.422491,-5.642591,-2.957240,-5.228118,-5.687115,-9.949258,5.758077],[-2.496835,7.786198,-4.327135,-3.493758,-0.700921,8.246328,-2.686942,-6.356592,-9.690729,-3.366293,-3.442200,-9.059610,-5.390712,-0.350121,-8.052124]],[[5.529987,5.643134,4.466816,-3.292206,1.822276,5.112587,6.886122,-2.916908,-2.267177,5.816096,1.109426,5.561572,2.478155,4.241194,-1.932242],[6.836431,-5.650907,-3.993674,-4.583753,7.798148,1.739744,8.085872,-9.096563,-4.878782,-2.548279,0.734630,2.263276,9.683231,-3.579512,-1.915293],[-0.692823,-4.740063,1.167912,-4.326544,5.945115,1.582591,-9.264265,3.517595,-8.225423,-5.318772,8.613493,-1.393128,-8.778569,2.686799,-0.019464]],[[-2.927104,-5.594559,6.170277,0.653404,0.263883,2.847482,-4.563324,2.578654,-4.995642,2.198710,-3.736700,-3.303706,-1.396385,1.123327,7.143297],[5.768946,-0.618163,-6.335845,3.309587,-8.818656,-3.988913,5.293504,1.181405,-4.807867,-1.953162,-0.955485,2.780361,-0.711769,-9.820821,5.095275],[4.203797,5.607344,-4.106935,-8.781888,2.487296,7.900199,-3.906177,-2.142717,1.223136,-1.832602,6.091326,6.078605,5.203132,-2.491175,6.689728]],[[-0.336224,-1.425643,-8.298048,6.659607,2.033743,0.020542,9.389909,7.991646,-6.262675,-7.435853,5.533574,3.100202,-0.557277,-8.292804,-1.869999],[4.947580,-5.432501,-1.617887,-2.301605,5.108203,7.044704,-7.507496,8.883759,-5.584798,3.850505,-8.991243,-7.098669,7.403312,-9.197242,3.329103],[4.282979,1.019231,4.456921,-8.841172,-9.668619,5.231538,8.189195,-4.292072,8.390284,-7.728789,4.651723,3.466115,-7.362012,7.644274,-2.352032]],[[-5.800378,0.493779,-0.005291,3.568889,-7.004386,-8.902389,5.863963,-8.814376,-0.996184,0.363641,-2.957529,4.085289,-5.698505,-1.961621,1.284448],[7.817256,-5.144525,2.160088,7.543522,4.004354,-8.095982,6.711603,4.942190,6.824919,1.782475,-7.456470,-8.510047,-4.215508,-8.376082,-8.192551],[9.461453,3.171971,-1.245705,-1.523766,0.290093,0.606707,-5.004764,-9.155461,-4.609051,6.583179,-6.481525,1.417037,-8.079434,9.447653,-6.398176]],[[-7.761716,6.750373,1.155583,-3.624473,2.483711,-3.296748,-0.997525,9.707593,-8.917200,-4.804075,-3.989978,-9.413777,5.479808,6.248776,0.112298],[-3.085093,8.613756,5.964494,4.259809,2.449742,4.576940,-5.182807,-7.761225,-1.110943,0.565295,-2.645127,4.940214,-7.550530,9.371570,-9.383508],[8.650718,-9.202667,-2.939925,-0.528887,-2.472739,9.605325,8.638618,0.783147,5.678496,-2.075044,-7.706296,-1.511909,9.524154,2.872631,-1.570265]],[[8.818388,-4.507970,9.449819,3.360705,4.589310,1.082430,-1.252893,-4.311660,-0.878052,2.175598,-4.952045,6.219549,-6.048559,6.284718,-6.455898],[1.808122,-0.596964,5.596464,-1.730859,1.637080,-7.257740,-3.618374,4.916908,-1.662967,4.825581,-7.101635,-2.774431,-5.018423,8.831861,-0.385520],[-7.707920,3.221652,0.382465,-6.626933,-7.489877,0.754548,-6.254122,8.505484,-9.144086,5.061510,9.594414,-6.004877,6.420000,-8.382130,-6.677434]],[[-8.597834,-8.938063,4.260930,5.614723,-3.287461,8.240967,-7.563384,8.592242,5.367543,-2.373260,8.563834,4.352601,2.544293,8.007772,5.780331],[-1.824047,-5.901184,7.796643,-9.984439,3.002986,-8.018396,3.972982,-5.197670,-8.411517,-3.562831,-4.194351,5.622865,1.247079,-7.296968,-0.134664],[7.472895,-7.652276,-8.639431,7.465390,-9.853207,5.040743,-6.546811,9.134492,9.989381,-1.735665,-1.520580,-1.867523,-4.241666,-2.346201,-6.294971]],[[-5.391102,7.896793,9.331166,3.164155,1.183079,2.598574,-7.899547,7.672119,-1.276154,-5.059303,-3.054947,2.411367,-5.677110,7.582976,-7.722558],[7.966628,3.179652,3.414228,-5.046079,3.454912,-8.090969,-5.447948,-3.047138,7.838069,5.803260,-8.979822,-3.397088,-8.230721,1.019493,-5.892905],[9.427717,4.510006,-1.536811,3.506726,2.412968,-3.188167,7.076958,-6.197728,-3.720985,-6.336332,0.145711,-6.088242,-4.560938,-4.749824,-9.423573]],[[6.421902,1.761813,-1.046153,-9.090342,-1.620464,-4.759177,8.450811,-0.888040,-4.531129,9.828862,-3.085200,9.956648,3.706043,7.703923,9.932859],[-0.620749,7.647752,7.490584,1.699916,0.208899,2.078602,0.637824,4.427551,4.562970,-6.659980,-5.567014,5.426897,6.155964,1.291191,6.917208],[-9.880890,0.695907,5.149370,9.821033,-5.173949,-0.845416,2.298644,4.873377,3.145013,-1.897216,4.146570,-5.494340,-8.054091,5.340042,-3.618395]]], dtype = "float64")#candidate|4942|(13, 3, 15)|const|float64
bop_4943 = relay.floor_mod(bop_4931.astype('float32'), relay.reshape(const_4942.astype('float32'), relay.shape_of(bop_4931))) # shape=(13, 3, 15)
func_2863_call = mod.get_global_var('func_2863')
func_2866_call = mutated_mod.get_global_var('func_2866')
const_4948 = relay.const([4.732651,-9.894700,7.567625,0.409877,-5.350097,-3.575073,-9.445044,-2.071118,9.941443,8.064904,7.118491,9.520720,2.395366,-5.121556,-1.048752,-1.362308,7.642609,1.490510,-0.295368,7.198543,-9.048014,-8.650654,-6.608385,-0.748982,-5.861802,-8.089113,4.850013,-7.085246,8.656840,1.681825,1.465266,-7.593193,-4.788205,0.490573,-4.221804,8.492382,1.989379,4.820878,-3.541857,6.999349,-2.252948,6.895123,4.382622,-3.881391,-3.254840,-6.651268,1.964300,-8.702669,-8.488948,3.862297,-5.905472,5.370903,-3.299197,-5.083405,3.764883,3.369268,3.247268,7.000628,-0.144765,8.215330,5.132992,-5.701157,-6.653857,9.160269,9.929545,-6.705178,3.328607,3.569259,-7.214943,7.542177,9.862152,2.207257,2.629924,6.180699,4.673270,-6.796883,-3.584103,1.727636,5.811510,6.987255,0.128058,4.353152,6.409584,-7.016628,-3.895359,2.158587,-6.403668,-0.658889,7.124455,4.999340,-8.873474,-6.024314,5.333007,-2.446759,-1.671013,1.582759,5.044077,-9.775311,1.175569,-5.776183,-7.958959,9.624590,1.803887,-3.194966,3.813117,7.650893,9.439207,-4.836369,1.003652,-2.578854,-5.491581,-9.709112,-0.240560,-2.636735,0.139762,1.665103,5.471595,2.888118,-0.329769,5.534433,3.976371,8.070843,-1.698052,9.894133,-3.055321,1.345951,8.547051,-8.294806,7.435034,5.259408,-8.873303,-5.701699,3.223905,-5.937760,-3.221605,8.580841,-9.825093,-0.431168,-1.146145,-7.424232,2.253780,9.865091,1.812355,-4.353709,1.767773,-4.626660,-0.964607,9.951757,-7.555148,8.875114,2.181486,-3.074986,-7.240174,3.863392,5.829933,2.636066,2.770973,4.706551,5.594614,3.121107,-2.244313,-9.616257,1.144377,-4.082222,3.559982,-3.228843,4.132665,-8.941180,5.650998,-9.297877,0.480292,-0.313227,6.918276,-4.018344,7.332195,4.991063,7.946355,8.611653,7.494726,-2.814082,1.010781,7.684816,4.898583,-6.686028,9.743645,8.575681,5.622668,-1.459138,-2.044858,4.768678,-2.949453,1.592223,-1.104063,-9.304126,-3.590640,-9.906663,9.118767,-8.508671,1.659629,-2.948257,-0.494793,0.441943,0.906381,-8.208651,-9.513806,9.238672,-4.653428,-3.626494,4.593656,-0.697099,3.490928,-9.783387,-0.460228,-5.267860,5.667797,1.466076,-6.829350,3.789308,-4.609956,0.273284,9.705715,5.517526,0.634726,-4.504163,6.882419,2.087079,4.336067,7.686653,-5.552980,0.127424,-0.881226,1.427755,-3.211554,-8.651385,-6.440561,7.674036,6.933335,9.856286,4.611410,3.367223,-1.257780,3.495826,-1.778397,-1.155190,-7.504757,1.517506,-0.055109,-3.670290,9.265910,3.914305,-0.673712,-1.377201,3.760283,2.913951,8.567708,0.148571,4.030488,-1.812976,-4.550403,-7.178395,-3.798756,2.675129,8.214126,2.994755,6.191720,-7.943779,-4.610299,5.231796,4.740794,-3.212348,3.670957,-1.320899,-0.023952,1.911747,3.087281,-0.511975,4.771521,-1.675022,4.681872,6.960457,-7.077072,-2.295246,-9.213463,1.315341,-7.984166,6.672920,9.862347,-5.697360,-8.058473,-7.554341,-5.692453,3.244987,0.502145,-7.737045,-3.127958,5.867784,1.405309,0.304800,9.648057,6.203407,-7.556930,0.316896,6.743555,4.201040,9.436122,5.093024,-5.691163,5.758015,6.008744,-3.444202,-1.030074,-6.001427,-0.916091,5.440280,-0.669047,6.856383,3.138808,2.463652,5.015359,-1.301503,-5.656244,-9.205654,9.710940,-0.078635,0.158479,-9.480537,-7.944538,5.633977,-6.441552,-5.341396,-0.575087,7.793109,0.656468,-3.883493,7.959664,6.603844,-5.769461,9.346308,-6.170278,-1.502444,-3.230812,9.709673,-3.211653,7.411777,3.811612,3.384385,-8.388844,-8.757820,4.024337,-8.997760,6.963858,2.402335,5.198031,0.701383,-4.099757,3.629868,-3.991073,-2.804162,2.876083,3.132120,8.219156,-8.627417,9.321004,2.144165,1.444548,-9.510538,-8.958539,4.192638,-9.953490,9.490713,-9.916615,2.409424,6.336509,3.413159,-4.203349,1.698261,-8.816053,1.795283,-3.019753,-8.856332,-9.398191,8.739652,-2.549610,-6.016324,1.625689,-7.192489,-5.746740,2.956478,4.050239,-7.591777,8.563096,9.066468,-6.783920,-3.568217,-1.092191,-0.257308,3.037276,7.909734,-4.523851,-0.671551,2.250590,-5.478378,-2.516233,6.768092,-3.328816,7.345812,6.991041,8.627325,8.875718,6.078621,0.152143,-2.978244,2.071098,-6.159255,0.691633,5.061457,9.452856,-0.028131,5.890205,8.023665,-6.672701,-2.355491,-5.944858,9.847581,7.755603,4.314558,-9.624825,8.164572,3.441485,-1.380104,-7.904009,3.206535,8.810768,0.679343,5.049758,-9.421477,-3.689183,0.105264,2.770472,-9.283095,1.337588,6.106605,-4.764648,9.635277,-8.017625,-6.038160,-9.089688,4.403449,-2.397331,-5.034648,6.126434,4.868920,5.507326,-4.491697,3.321926,3.469496,-9.012830,-2.885603,9.410415,-6.841940,1.030572,-7.486736,-8.017477,0.659182,5.166341,-4.618487,2.564731,-7.670442,5.977310,2.896823,9.582535,5.818303,1.226593,-2.336519,-7.393255,-0.713301,-8.749215,8.040985,-7.684023,9.368786,-3.300710,4.531599,1.538041,0.908196,-9.467121,9.295183,2.807123,-7.527911,-7.313042,-4.370135,7.412526,3.139918,0.210764,9.376714,5.931110,4.761446,-8.527482,5.491173,-5.311011,-2.646631,8.984203,0.848747,5.025246,4.519070,-1.168525,-4.650489,2.412658,5.738104,-8.507881,-5.157160,0.890829,5.754489,-2.902084,2.192091,6.606928,-8.051794,2.904806,-9.631575,1.369483,2.636650,0.576346,6.329686,8.746665,6.649671,9.747930,4.995108,-2.702817,1.165983,-7.438078,1.707920,-4.572572,-3.955035,3.239191,-5.937506,3.088329,8.039889,6.393529,9.226875,2.187747,-8.215724,-1.982865,-3.838812,2.880333,-9.595200,-2.188294,7.316021,7.941404,6.905097,-7.601390,1.625960,9.284688,-7.846056,0.863078,0.119754,7.792444,-0.191829,5.778004,-1.308386,-8.188821,-8.865967,-9.029330,8.124816,-9.938786,6.101493,5.560506,-3.466050,6.952091,9.231057,-7.634462,3.779444,6.454199,3.307950,-3.697051,1.626316,-7.591589,-5.684694,5.050900,-1.473001,-4.280250,0.740462,-8.170432,-3.156375,-6.380499,9.466842,-9.953844,-1.709499,-9.992849,-0.854394,9.848735,7.266719,-9.943896,1.870325,6.669186,4.452205,5.037574,6.731299,-2.735343,3.608360,-3.544085,3.708158,0.675414,-8.587225,1.744695,8.507452,-2.344395,2.825157,-5.243444,-5.277309,-5.448671,0.514356,-5.250940,-6.750594,-5.757729,-4.889803,-9.185689,8.123200,1.331772,8.571312,-5.072789,-8.054379,8.194038,2.139374,-1.354511,7.006426,9.177372,-9.569617,-8.010615,-1.575648,-4.659831,1.167669,-7.105166,-8.793347,-5.572092,5.404464,-6.090062,9.870167,7.029212,7.798519,-4.925554,-5.047868], dtype = "float32")#candidate|4948|(640,)|const|float32
call_4947 = relay.TupleGetItem(func_2863_call(relay.reshape(const_4948.astype('float32'), [20, 32])), 1)
call_4949 = relay.TupleGetItem(func_2866_call(relay.reshape(const_4948.astype('float32'), [20, 32])), 1)
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
var_4971 = relay.var("var_4971", dtype = "float64", shape = (30,))#candidate|4971|(30,)|var|float64
call_4970 = relay.TupleGetItem(func_383_call(relay.reshape(var_4971.astype('float64'), [5, 2, 3])), 0)
call_4972 = relay.TupleGetItem(func_385_call(relay.reshape(var_4971.astype('float64'), [5, 2, 3])), 0)
output = relay.Tuple([bop_4943,call_4947,const_4948,call_4970,var_4971,])
output2 = relay.Tuple([bop_4943,call_4949,const_4948,call_4972,var_4971,])
func_4974 = relay.Function([var_4929,var_4930,var_4971,], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
var_4975 = relay.var("var_4975", dtype = "float64", shape = (13, 3, 15))#candidate|4975|(13, 3, 15)|var|float64
var_4976 = relay.var("var_4976", dtype = "float64", shape = (13, 3, 15))#candidate|4976|(13, 3, 15)|var|float64
var_4977 = relay.var("var_4977", dtype = "float64", shape = (30,))#candidate|4977|(30,)|var|float64
output = func_4974(var_4975,var_4976,var_4977,)
func_4978 = relay.Function([var_4975,var_4976,var_4977,], output)
mutated_mod['func_4978'] = func_4978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3562_call = mutated_mod.get_global_var('func_3562')
call_4996 = relay.TupleGetItem(func_3560_call(), 0)
call_4997 = relay.TupleGetItem(func_3562_call(), 0)
output = call_4996
output2 = call_4997
func_4999 = relay.Function([], output)
mod['func_4999'] = func_4999
mod = relay.transform.InferType()(mod)
output = func_4999()
func_5000 = relay.Function([], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4792_call = mutated_mod.get_global_var('func_4792')
call_5039 = relay.TupleGetItem(func_4791_call(), 0)
call_5040 = relay.TupleGetItem(func_4792_call(), 0)
func_2863_call = mod.get_global_var('func_2863')
func_2866_call = mutated_mod.get_global_var('func_2866')
var_5064 = relay.var("var_5064", dtype = "float32", shape = (640,))#candidate|5064|(640,)|var|float32
call_5063 = relay.TupleGetItem(func_2863_call(relay.reshape(var_5064.astype('float32'), [20, 32])), 1)
call_5065 = relay.TupleGetItem(func_2866_call(relay.reshape(var_5064.astype('float32'), [20, 32])), 1)
output = relay.Tuple([call_5039,call_5063,var_5064,])
output2 = relay.Tuple([call_5040,call_5065,var_5064,])
func_5066 = relay.Function([var_5064,], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5067 = relay.var("var_5067", dtype = "float32", shape = (640,))#candidate|5067|(640,)|var|float32
func_5066_call = mutated_mod.get_global_var('func_5066')
call_5068 = func_5066_call(var_5067)
output = call_5068
func_5069 = relay.Function([var_5067], output)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3156_call = mod.get_global_var('func_3156')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_5100 = relay.TupleGetItem(func_3156_call(), 3)
call_5101 = relay.TupleGetItem(func_3157_call(), 3)
var_5102 = relay.var("var_5102", dtype = "float64", shape = (13, 2, 13))#candidate|5102|(13, 2, 13)|var|float64
bop_5103 = relay.equal(call_5100.astype('bool'), relay.reshape(var_5102.astype('bool'), relay.shape_of(call_5100))) # shape=(13, 2, 13)
bop_5106 = relay.equal(call_5101.astype('bool'), relay.reshape(var_5102.astype('bool'), relay.shape_of(call_5101))) # shape=(13, 2, 13)
func_3759_call = mod.get_global_var('func_3759')
func_3761_call = mutated_mod.get_global_var('func_3761')
call_5117 = relay.TupleGetItem(func_3759_call(), 0)
call_5118 = relay.TupleGetItem(func_3761_call(), 0)
output = relay.Tuple([bop_5103,call_5117,])
output2 = relay.Tuple([bop_5106,call_5118,])
func_5122 = relay.Function([var_5102,], output)
mod['func_5122'] = func_5122
mod = relay.transform.InferType()(mod)
var_5123 = relay.var("var_5123", dtype = "float64", shape = (13, 2, 13))#candidate|5123|(13, 2, 13)|var|float64
output = func_5122(var_5123)
func_5124 = relay.Function([var_5123], output)
mutated_mod['func_5124'] = func_5124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4511_call = mod.get_global_var('func_4511')
func_4513_call = mutated_mod.get_global_var('func_4513')
call_5241 = func_4511_call()
call_5242 = func_4511_call()
func_4282_call = mod.get_global_var('func_4282')
func_4286_call = mutated_mod.get_global_var('func_4286')
var_5245 = relay.var("var_5245", dtype = "float64", shape = (1568,))#candidate|5245|(1568,)|var|float64
call_5244 = relay.TupleGetItem(func_4282_call(relay.reshape(var_5245.astype('float64'), [14, 7, 16]), relay.reshape(var_5245.astype('float32'), [14, 7, 16]), relay.reshape(var_5245.astype('float64'), [14, 7, 16]), ), 0)
call_5246 = relay.TupleGetItem(func_4286_call(relay.reshape(var_5245.astype('float64'), [14, 7, 16]), relay.reshape(var_5245.astype('float32'), [14, 7, 16]), relay.reshape(var_5245.astype('float64'), [14, 7, 16]), ), 0)
func_1967_call = mod.get_global_var('func_1967')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_5277 = func_1967_call()
call_5278 = func_1967_call()
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_5279 = func_1391_call()
call_5280 = func_1391_call()
output = relay.Tuple([call_5241,call_5244,var_5245,call_5277,call_5279,])
output2 = relay.Tuple([call_5242,call_5246,var_5245,call_5278,call_5280,])
func_5316 = relay.Function([var_5245,], output)
mod['func_5316'] = func_5316
mod = relay.transform.InferType()(mod)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5317 = relay.var("var_5317", dtype = "float64", shape = (1568,))#candidate|5317|(1568,)|var|float64
func_5316_call = mutated_mod.get_global_var('func_5316')
call_5318 = func_5316_call(var_5317)
output = call_5318
func_5319 = relay.Function([var_5317], output)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mod.get_global_var('func_4606')
func_4607_call = mutated_mod.get_global_var('func_4607')
call_5329 = relay.TupleGetItem(func_4606_call(), 0)
call_5330 = relay.TupleGetItem(func_4607_call(), 0)
output = relay.Tuple([call_5329,])
output2 = relay.Tuple([call_5330,])
func_5333 = relay.Function([], output)
mod['func_5333'] = func_5333
mod = relay.transform.InferType()(mod)
output = func_5333()
func_5334 = relay.Function([], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4590_call = mod.get_global_var('func_4590')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_5368 = func_4590_call()
call_5369 = func_4590_call()
func_4533_call = mod.get_global_var('func_4533')
func_4534_call = mutated_mod.get_global_var('func_4534')
call_5382 = relay.TupleGetItem(func_4533_call(), 0)
call_5383 = relay.TupleGetItem(func_4534_call(), 0)
output = relay.Tuple([call_5368,call_5382,])
output2 = relay.Tuple([call_5369,call_5383,])
func_5406 = relay.Function([], output)
mod['func_5406'] = func_5406
mod = relay.transform.InferType()(mod)
output = func_5406()
func_5407 = relay.Function([], output)
mutated_mod['func_5407'] = func_5407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5436 = relay.var("var_5436", dtype = "int32", shape = (13, 9, 8))#candidate|5436|(13, 9, 8)|var|int32
const_5437 = relay.const([[[-5,4,8,4,-7,-2,-4,4],[5,-10,5,-3,-8,-4,2,-7],[-8,10,-7,10,3,-6,-2,-4],[10,10,-7,10,9,-10,-3,-9],[8,-6,2,-6,8,3,-4,-9],[-10,-10,1,6,-5,1,1,-8],[9,-3,-10,7,3,-7,6,1],[-6,-7,-2,-9,7,-6,9,-9],[-10,1,-3,7,8,-3,4,2]],[[-7,-7,10,-8,5,7,-10,4],[1,1,4,10,-3,-6,-8,-7],[7,-6,9,6,-1,-9,1,2],[-1,-6,2,6,-10,2,-3,3],[-4,-9,-6,-8,9,-10,3,4],[7,-6,7,-6,-4,-5,9,7],[8,6,-10,-2,2,-3,6,-10],[9,-3,7,3,8,-10,-5,-10],[-4,10,-1,-5,6,9,-5,-6]],[[4,-1,9,-6,-2,-5,5,4],[2,-3,6,-7,8,-6,-6,7],[4,-4,-6,1,9,6,1,-5],[-4,7,8,4,-1,-9,5,-10],[-6,1,7,9,-7,-1,-5,-3],[-5,-8,-6,9,3,6,-3,-6],[-1,2,-10,-3,6,-7,-10,-9],[-3,-10,-9,6,-6,-9,-9,2],[1,-7,5,-10,-3,3,7,8]],[[10,9,-6,1,-9,3,-7,-9],[8,-1,-9,-3,6,-6,9,5],[4,1,2,2,-4,1,-1,-2],[-10,10,-2,2,1,2,-3,-1],[4,-5,-6,8,-5,1,-1,2],[6,1,-7,7,-2,-1,-8,10],[-4,8,5,10,-7,3,-6,3],[9,1,8,5,6,3,-8,-6],[1,4,4,-3,9,-2,2,-10]],[[-9,6,-6,5,9,-8,4,-3],[9,-10,-5,3,10,-10,1,1],[10,5,-2,-10,2,-2,-1,1],[6,3,4,-5,3,7,5,4],[-9,3,-1,4,10,-2,-3,-1],[6,-10,3,-7,1,2,1,-3],[-5,2,9,1,-2,-10,-6,3],[6,4,-9,8,2,7,-6,-6],[9,8,3,-9,2,1,-10,-2]],[[10,-10,5,-8,-7,-2,9,3],[3,-8,-1,-3,-6,-3,-1,-7],[-10,-7,-4,-2,3,-6,-2,-10],[10,-3,-7,-6,-1,3,3,-2],[-6,8,5,3,-5,-10,-7,2],[-2,-10,1,4,-6,-5,-7,-4],[5,5,3,8,6,-5,-10,-2],[-3,-3,-10,-8,4,-7,-8,5],[4,-3,-7,-5,1,-6,8,-5]],[[-2,-5,5,-9,7,-9,-1,-10],[4,2,-6,-4,8,2,-10,6],[7,-4,-5,1,-3,6,-5,-6],[10,10,-6,5,-6,1,5,-8],[7,5,7,3,-8,-1,-7,-4],[7,-5,10,-9,8,-2,5,5],[4,-5,10,10,-1,3,-9,5],[10,-9,9,-7,-7,-1,-3,-6],[8,9,-3,6,-9,2,-5,-4]],[[-8,-5,2,-5,3,1,2,-4],[-1,8,1,10,2,-7,-10,4],[-5,-4,-3,6,-4,-3,-6,-7],[-9,3,-1,-9,6,2,9,3],[-4,-1,-7,-2,-5,7,1,10],[-1,9,5,-4,6,-8,-9,8],[-9,10,-7,-7,9,-4,10,-10],[7,10,9,-7,-10,-7,6,-2],[-6,1,7,8,3,-6,-7,3]],[[-8,-10,-7,-2,-1,-7,6,-10],[-4,-8,8,-4,-1,4,-9,-4],[10,-3,-10,-5,4,6,3,-2],[8,7,9,6,4,-8,7,-7],[5,-3,5,-5,-9,-6,-8,7],[-2,1,8,1,-7,2,-10,-10],[-10,-9,-10,1,7,10,-10,1],[-3,-5,-2,-2,7,5,-6,-2],[6,1,-6,-5,-4,10,4,-9]],[[-8,10,1,8,-10,5,8,4],[9,-9,-10,9,9,-1,5,-2],[4,-10,5,-5,3,-1,-5,4],[-2,10,9,-7,1,1,-8,6],[4,7,7,4,-9,-2,2,10],[-1,6,-2,-10,3,-8,6,-10],[-3,2,8,2,3,-4,2,-8],[4,4,-9,8,6,2,1,4],[9,-4,4,-4,9,-3,-2,5]],[[9,4,4,9,-10,-5,2,-5],[-5,-8,6,-9,8,8,-5,7],[-4,1,5,-9,-10,5,4,-3],[-10,2,-2,1,-1,1,-1,9],[1,3,-1,-10,9,-4,-7,3],[-7,3,4,-1,-4,4,-1,3],[4,-6,10,-7,-1,-1,-8,-6],[-9,-6,3,-1,-10,-2,-7,-10],[1,-5,4,-2,-5,-5,-9,-9]],[[10,-3,-5,-9,9,-5,-6,-7],[-5,-10,8,-3,-6,5,-9,-4],[-4,-1,-3,-3,2,1,4,-7],[-4,-7,-10,3,-1,9,-7,-9],[2,-9,10,9,1,-10,-10,4],[-7,-4,3,2,10,-6,-8,5],[4,-7,5,6,8,2,6,-1],[9,9,7,-10,5,-1,10,3],[9,10,-9,-1,-4,-6,1,1]],[[-5,3,-4,-8,-8,3,2,-4],[7,-6,-10,-3,1,3,9,1],[-6,5,-9,10,1,-7,-9,-5],[-5,-1,7,7,5,10,-6,7],[9,-2,6,-8,-5,-9,8,-9],[2,-7,-5,-9,-4,6,1,-2],[5,9,-5,-8,1,-5,9,1],[-5,4,-3,-2,-1,-7,-2,-1],[4,-10,-6,-1,6,-8,-9,8]]], dtype = "int32")#candidate|5437|(13, 9, 8)|const|int32
bop_5438 = relay.minimum(var_5436.astype('int32'), relay.reshape(const_5437.astype('int32'), relay.shape_of(var_5436))) # shape=(13, 9, 8)
func_2428_call = mod.get_global_var('func_2428')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_5443 = relay.const([False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True], dtype = "bool")#candidate|5443|(312,)|const|bool
const_5444 = relay.const([5.122954,-7.270433,8.267890,-0.928823,-2.179088,6.149882,8.757878,3.237301,-8.421183,-7.763643,4.946787,-1.292671,-2.049563,6.858466,-1.939468,5.191626,1.991827,0.454272,-4.924647,-8.576771,-7.241074,7.346212,7.881224,-1.081550,0.873215,9.366069,-4.497643,-0.834754,2.554922,1.287551,-2.967549,0.863832,-8.315739,1.521635,9.852945,-0.121582,5.777170,1.900149,-7.126817,7.606250,-0.334097,-1.650955,-8.026294,9.714488,6.353356,6.195585,3.313344,2.934656,5.764568,9.511927,-3.848668,3.837886,0.158665,-3.567476,-7.046026,0.677305,9.582373,-9.268738,2.815104,6.482112,-0.522406,-8.118634,5.540664,6.135885,-3.637645,6.357101,-4.981924,4.048194,0.154083,-5.138673,5.695633,3.363525,5.640711,-2.627748,4.436686,0.790731,9.898836,-1.898286,-1.822363,2.444803,-2.197007,4.391437,8.603158,-0.279199,5.810401,4.124731,2.938998,2.275243,-0.875405,0.616195,9.897437,6.456536,-5.818049,6.973622,8.675082,-4.997071,-3.769357,2.939462,-7.305055,-4.705743,-2.448217,-7.039215,-6.181742,-9.638708,2.301511,1.378957,7.799992,8.247981,-7.000205,-1.668245,-9.123390,1.799088,-7.337210,-7.455839,-5.171598,-5.986135,-2.413788,-1.396466,-1.724289,2.095213,-9.064498,-0.626517,0.320128,-5.075710,1.330167,-5.990512,9.237505,-6.694593,-7.302376,-0.402315,8.704120,6.686322,1.874166,7.818296,-4.363692,4.388346,1.551608,-3.353664,-8.413613,-1.790380,6.572498,1.606378,-9.187868,7.019231,-2.940812,7.438280,-9.056329,-3.502711,8.654793,-7.275116,-5.423489,-8.835787,9.085524,7.443274,1.356464,7.330452,-8.153913,9.531259,-7.566808,1.893599,-4.196385,8.209475,9.944553,-7.384949,8.430888,-4.837656,6.950108,6.740188,-9.512075,-7.513528,-5.924039,-7.317544,-4.495265,1.837495,-4.333161,4.746840,7.973015,-3.024274,-2.180559,1.873473,6.292825,-7.736504,4.011160,7.861435,-1.133050,2.715649,-5.407330,2.611817,-9.978187,5.869166,2.103750,6.267093,7.138735,9.464696,7.889594,7.695565,-6.426154,9.347239,8.480441,2.921178,-8.344494,-6.944504,2.205441,3.791398,-6.205698,-8.571051,0.219336,3.682124,4.234105,3.555014,3.588342,1.125739,-9.357175,5.808473,-8.996728,1.891569,-9.451301,3.426496,5.410333,6.877562,3.659708,8.082083,2.381721,-4.847042,0.606316,4.894353,-0.700211,-7.344370,9.451355,5.041104,9.909022,-7.433739,-2.520996,2.076564,-6.112663,-8.250410,-1.523946,0.320484,-5.460147,4.747239,7.207640,-2.947336,9.449544,-9.042769,4.185333,-9.643063,-3.677779,-6.665567,-1.518427,-9.045120,-5.764342,0.641655,-3.544306,-9.689450,-0.803784,-4.969801,6.594124,8.870886,1.688083,6.389231,0.125495,9.359725,0.179413,5.888899,7.147753,-7.074848,-4.588805,2.323186,-2.317258,1.079764,9.077864,-1.135934,-6.171848,2.124005,6.265804,-3.949992,4.804841,-3.755024,1.759136,-2.529969,7.446044,-0.845147,-4.814282,-2.104268,-9.296311,6.112129,1.776369,-5.495184,-3.500962,-8.793308,-0.161354,-9.442066,-5.410062,-6.791736,-0.180783,3.700998,-5.464985,4.362830,5.051712,2.034291,1.093774,0.134725,1.901436,9.272646,2.783263,2.993536,-5.381628,3.115639,1.390810,3.875632,8.414899,4.599488,-6.787483,-4.327059,4.558278,4.839085,0.700147,8.298652,-0.596920,-8.210059,-6.582841,-9.362287,3.123865,-1.927830,9.145397,8.270599,-7.534141,-9.462778,9.508910,-0.519983,0.638788,-2.166928,-1.411435,2.803921,-5.152563,-6.150507,9.396367,1.103346,9.461923,8.793261,6.501200,8.005754,-1.380918,8.351397,-9.945433,-9.971031,1.030920,-9.776055,-7.199740,3.399656,0.512585,-1.263614,-4.565762,-4.653224,4.400626,-0.578181,-2.921336,-7.116140,-4.254174,-9.883953,7.829667,-1.853954,3.515885,-2.490407,-2.380699,-1.627955,3.455833,-1.790017,0.313175,0.747130,4.074293,2.367764,7.745484,-4.304311,3.745429], dtype = "float32")#candidate|5444|(375,)|const|float32
const_5445 = relay.const([-7.281257,-2.257789,-3.548927,-3.018083,3.430171,6.556644,0.816170,-7.540939,6.914209,-2.859663,6.357427,-1.227197,2.858887,-1.822896,-6.325334,-8.833096,9.169181,5.033828,5.930246,-2.529833,-3.441305,0.765779,-0.862253,-3.163013,7.898695,4.117203,3.149660,-2.309878,8.664295,9.581164,-8.279530,-3.130030,-7.882779,6.570957,3.690331,-8.952203,-9.880104,4.236098,3.318439,-6.808094,2.336153,9.267198,-1.190322,1.769977,3.995194,7.414498,4.849780,1.265560,-6.060600,2.663789,-8.022996,2.923407,0.541480,-6.867955,-8.747160,3.287515,-8.996862,-8.873027,-7.302019,-7.883556,-7.678664,7.948272,-1.352878,-6.395499,-8.568112,-9.498752,7.358536,7.430985,7.933816,-9.650072,-1.712070,7.673821,-7.722111,2.528195,5.805830,-0.320785,-2.194040,3.927355,-2.676383,4.766490,-9.868268,-3.887686,3.195319,-6.253779,4.990522,-5.395698,2.132333,-5.447867,-9.332703,-6.809143,5.408115,5.706965,4.221404,-5.573284,-2.414463,-3.185693,-0.264841,8.681889,-1.245207,-6.553949,-6.125542,5.975813,-1.136354,0.725399,-8.397380,-2.503911,8.722104,4.258456,7.769796,-0.483295,0.137325,-3.397795,4.035543,6.764187,9.303813,1.175138,-3.491661,9.352226,-2.071088,3.211938,8.220336,0.802321,-9.633489,6.185775,-0.718528,8.400935,-0.933992,3.593471,5.310480,2.347396,-2.247052,-9.081761,3.230037,7.208148,1.846736,-8.710429,7.202537,4.040955,-5.836971,8.209761,-4.519421,-9.261958,-7.366311,3.280029,-4.862040,-9.501353,1.283300,-8.574682,9.712458,3.352954,-2.161616,9.545649,3.399880,0.102281,4.824489,-6.687518,-4.164662,-5.469034,2.696310,-0.401327,-1.367835,-7.470244,-0.641417,-0.742447,2.079739,-7.426294,-9.416611,8.455717,-9.042255,9.249890,6.763586,6.647587,6.351087,-8.014811,8.271155,-5.566993,4.757628,-0.051465,0.244381,8.108610,-4.815042,3.717524,6.815891,-6.431742,7.907522,1.287784,4.446259,-5.542210,-0.296509,7.232059,-8.596049,6.338613,1.989484,6.013360,3.736063,9.080789], dtype = "float32")#candidate|5445|(196,)|const|float32
var_5446 = relay.var("var_5446", dtype = "float64", shape = (32,))#candidate|5446|(32,)|var|float64
const_5447 = relay.const([10,-3,-10,-8,-5,-1,10,3,2,6,6,-4,-7,-2,-5,-10,8,2,10,-8,-6,-1,5,-10,5,-10,10,-9,-4,-6,3,-4,3,-10,-3,-7,5,7,-1,-8,-3,-9,-4,-1,-1,-9,-5,5,8,-1,4,-4,-6,-1,-8,-5,-9,5,5,4,-5,10,6,9,3,-9,-8,5,3,-4,7,3,6,-1,-4,-6,-8,10,-2,-1,7,-1,2,2,6,-8,5,-8,9,-3,4,1,-6,7,-8,-4,-8,-3,-4,8,8,2,-7,-8,2,1,-1,-10,-3,-6,5,9,6,8,4,-10,1,-8,2,7,7,10,10,4,6,6,1,-9,-7,7,-10,-4,8,-1,7,-6,6,10,-5,1,6,5,3,4,-8,1,-9,2,6,10,3,-8,2,-7,4,-8,-7,10,4,2,-7,3,8,5,-1,9,-3,-5,7,-1,9,-3,-10,-8,9,10,3,-3,-1,6,5,5,4,-4,1,-4,-3,-9,-2,-1,5,6,-9,8,9,-3,3,4,-8,-8,4,-1,1,-1,-7,3,-8,-9,-9,-6,-4,7,-6,5,-9,-5,7,9,-8,-10,-7,-6,-3,1,-5,-4,-5,-6,-10,-9,8,-4,-1,-4,7,3,-8,-8,-5,4,-5,1,-7,-3,10,10,5,2,8,5,1,-9,7,9,-6,4,-1,-3,3,-9,-7,10,2,-10,-9,6,-2,-8,-2,-3,-2,-10,-1,3,-1,7,-1,2,3,6,6,2,6,-9,9,-7,-8,-3,-1,4,-1,10,2,-7,-3,-6,4,-8,-10,-9,8,7,4,-6,-8,-7,-3,-3,10,-9,3,-5,-3,-9,10,1,3,-6,10,4,-2,9,1,-10,3,5,5,5,2,1,2,-4,2,4,1,1,10,-1,-3,-1,10,-4,-7,-5,3,-3,-9,-9,-6,-4,10,2,-7,-2,-2,9,-10,-9,2,-6,-9,7,7,-1,-9,-9,10,3,-2,10,-8,10,-1,-3,-2,-7,7,2,-2,-6,-6,3,8,-3,-9,-8,1,-4,-6,5,-5,2,-8,5,-7,-4,6,9,3,6,-7,10,-10,-2,1,-6,-2,8,3,2,4,3,3,-6,7,8,-6,-4,3,5,-3,-10,-1,5,-4,4,-2,2,10,-10,1,3,-8,-4,-10,5,-9,-6,-7,-4,7,3,-6,3,-4,-5,4,-2,2,3,4,7,5,2,4,5,6,1,2,8,-10,10,-10,6,8,-5,-7,4,8,6,-3,-5,10,1,-1,-7,-3,-7,-9,6,-2,8,5,-3,-9,5,1,-1,6,-2,-10,-2,-8,-5,-1,4,1,-5,5,9,7,6,-2,9,-8,8,2,10,-6,8,-7,3,4,6,3,1,-7,-10,-3,-10,-1,-10,6,-6,-6,-4,-5,-3,-2,-8,4,7,-8,4,-7,4,-1,-5,-6,-3,-3,9,1,-9,-1,-10,-8,-8,-5,10,7,3,10,-8,9,3,6,2,-4,-2,7,1,10,-2,4,-8,5,2,1,4,-9,2,8,5,-6,-6,9,-8,9,-6,1,-7,-7,-6,6,8,6,3,5,-6,4,-4,1,4,2,-6,-7,-3,-9,3,-8,3,3,2,3,-9,-9,-2,2,2,-9,1,1,-10,-5,-6,-6,-9,-4,-4,-8,-5,-3,9,6,-3,2,-1,-10,-3,-6,7,9,-8,6,1,-7,3,7,7,-7,-8,-6,2,-2,8,6,-9,-1,10,-8,-3,9,-5,2,-10,6,-10,9,-8,-8,8,-2,-1,-3,-2,3,-6,-5,-9,-6,-8,6,-5,-1,-5,-9,-3,1,6,4,-5,-5,-9,5,-9,-4,-3,6,-7,-3,4,-7,-5,-10,2,-10,10,7,10,-7,3,8,4,-6,-9,-5,-2,-1,-1,-9,8,10,-9,-9,-9,7,-10,9,-9,6,7,2,-4,-8,7,-9,-1,4,6,-8,-10,8,-10,-5,-6,-6,4,4,-4,-4,4,-7,-2,4,4,4,4,5,3,-2,1,-3,7,-5,-2], dtype = "uint32")#candidate|5447|(756,)|const|uint32
call_5442 = relay.TupleGetItem(func_2428_call(relay.reshape(const_5443.astype('bool'), [312,]), relay.reshape(const_5444.astype('float32'), [1, 375]), relay.reshape(const_5445.astype('float32'), [196,]), relay.reshape(var_5446.astype('float64'), [1, 32]), relay.reshape(const_5447.astype('uint32'), [756,]), ), 5)
call_5448 = relay.TupleGetItem(func_2434_call(relay.reshape(const_5443.astype('bool'), [312,]), relay.reshape(const_5444.astype('float32'), [1, 375]), relay.reshape(const_5445.astype('float32'), [196,]), relay.reshape(var_5446.astype('float64'), [1, 32]), relay.reshape(const_5447.astype('uint32'), [756,]), ), 5)
func_708_call = mod.get_global_var('func_708')
func_710_call = mutated_mod.get_global_var('func_710')
call_5485 = relay.TupleGetItem(func_708_call(relay.reshape(const_5443.astype('bool'), [13, 2, 12])), 1)
call_5486 = relay.TupleGetItem(func_710_call(relay.reshape(const_5443.astype('bool'), [13, 2, 12])), 1)
bop_5493 = relay.floor_mod(bop_5438.astype('float32'), relay.reshape(var_5436.astype('float32'), relay.shape_of(bop_5438))) # shape=(13, 9, 8)
uop_5496 = relay.asinh(const_5437.astype('float32')) # shape=(13, 9, 8)
func_3719_call = mod.get_global_var('func_3719')
func_3721_call = mutated_mod.get_global_var('func_3721')
call_5506 = relay.TupleGetItem(func_3719_call(), 0)
call_5507 = relay.TupleGetItem(func_3721_call(), 0)
func_383_call = mod.get_global_var('func_383')
func_385_call = mutated_mod.get_global_var('func_385')
const_5521 = relay.const([-1.050704,-3.982691,-2.038419,1.888108,5.608757,-5.332517,-2.842178,2.678160,-5.179756,-3.731280,-7.005542,-1.372581,-3.468941,2.495484,-6.019925,8.329356,6.925159,-4.749089,-4.060666,-8.840730,2.918948,-2.239398,-6.220657,-2.508102,-1.712752,-7.053118,-9.956702,8.676456,1.638083,7.853180], dtype = "float64")#candidate|5521|(30,)|const|float64
call_5520 = relay.TupleGetItem(func_383_call(relay.reshape(const_5521.astype('float64'), [5, 2, 3])), 0)
call_5522 = relay.TupleGetItem(func_385_call(relay.reshape(const_5521.astype('float64'), [5, 2, 3])), 0)
output = relay.Tuple([call_5442,const_5443,const_5444,const_5445,var_5446,const_5447,call_5485,bop_5493,uop_5496,call_5506,call_5520,const_5521,])
output2 = relay.Tuple([call_5448,const_5443,const_5444,const_5445,var_5446,const_5447,call_5486,bop_5493,uop_5496,call_5507,call_5522,const_5521,])
func_5533 = relay.Function([var_5436,var_5446,], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mutated_mod.get_global_var('func_5533')
var_5535 = relay.var("var_5535", dtype = "int32", shape = (13, 9, 8))#candidate|5535|(13, 9, 8)|var|int32
var_5536 = relay.var("var_5536", dtype = "float64", shape = (32,))#candidate|5536|(32,)|var|float64
call_5534 = func_5533_call(var_5535,var_5536,)
output = call_5534
func_5537 = relay.Function([var_5535,var_5536,], output)
mutated_mod['func_5537'] = func_5537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mod.get_global_var('func_4606')
func_4607_call = mutated_mod.get_global_var('func_4607')
call_5572 = relay.TupleGetItem(func_4606_call(), 0)
call_5573 = relay.TupleGetItem(func_4607_call(), 0)
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_5585 = relay.TupleGetItem(func_3840_call(), 0)
call_5586 = relay.TupleGetItem(func_3842_call(), 0)
output = relay.Tuple([call_5572,call_5585,])
output2 = relay.Tuple([call_5573,call_5586,])
func_5600 = relay.Function([], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
output = func_5600()
func_5601 = relay.Function([], output)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4725_call = mod.get_global_var('func_4725')
func_4726_call = mutated_mod.get_global_var('func_4726')
call_5689 = relay.TupleGetItem(func_4725_call(), 0)
call_5690 = relay.TupleGetItem(func_4726_call(), 0)
func_3911_call = mod.get_global_var('func_3911')
func_3914_call = mutated_mod.get_global_var('func_3914')
var_5702 = relay.var("var_5702", dtype = "float32", shape = (1820,))#candidate|5702|(1820,)|var|float32
call_5701 = relay.TupleGetItem(func_3911_call(relay.reshape(var_5702.astype('float32'), [1820,])), 0)
call_5703 = relay.TupleGetItem(func_3914_call(relay.reshape(var_5702.astype('float32'), [1820,])), 0)
func_3719_call = mod.get_global_var('func_3719')
func_3721_call = mutated_mod.get_global_var('func_3721')
call_5708 = relay.TupleGetItem(func_3719_call(), 0)
call_5709 = relay.TupleGetItem(func_3721_call(), 0)
output = relay.Tuple([call_5689,call_5701,var_5702,call_5708,])
output2 = relay.Tuple([call_5690,call_5703,var_5702,call_5709,])
func_5710 = relay.Function([var_5702,], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
var_5711 = relay.var("var_5711", dtype = "float32", shape = (1820,))#candidate|5711|(1820,)|var|float32
output = func_5710(var_5711)
func_5712 = relay.Function([var_5711], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3524_call = mod.get_global_var('func_3524')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_5814 = relay.TupleGetItem(func_3524_call(), 3)
call_5815 = relay.TupleGetItem(func_3525_call(), 3)
output = relay.Tuple([call_5814,])
output2 = relay.Tuple([call_5815,])
func_5827 = relay.Function([], output)
mod['func_5827'] = func_5827
mod = relay.transform.InferType()(mod)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5827_call = mutated_mod.get_global_var('func_5827')
call_5828 = func_5827_call()
output = call_5828
func_5829 = relay.Function([], output)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mod.get_global_var('func_4409')
func_4411_call = mutated_mod.get_global_var('func_4411')
call_5851 = relay.TupleGetItem(func_4409_call(), 0)
call_5852 = relay.TupleGetItem(func_4411_call(), 0)
output = relay.Tuple([call_5851,])
output2 = relay.Tuple([call_5852,])
func_5871 = relay.Function([], output)
mod['func_5871'] = func_5871
mod = relay.transform.InferType()(mod)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mutated_mod.get_global_var('func_5871')
call_5872 = func_5871_call()
output = call_5872
func_5873 = relay.Function([], output)
mutated_mod['func_5873'] = func_5873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4114_call = mutated_mod.get_global_var('func_4114')
call_5897 = relay.TupleGetItem(func_4112_call(), 1)
call_5898 = relay.TupleGetItem(func_4114_call(), 1)
func_2863_call = mod.get_global_var('func_2863')
func_2866_call = mutated_mod.get_global_var('func_2866')
var_5912 = relay.var("var_5912", dtype = "float32", shape = (640,))#candidate|5912|(640,)|var|float32
call_5911 = relay.TupleGetItem(func_2863_call(relay.reshape(var_5912.astype('float32'), [20, 32])), 0)
call_5913 = relay.TupleGetItem(func_2866_call(relay.reshape(var_5912.astype('float32'), [20, 32])), 0)
func_655_call = mod.get_global_var('func_655')
func_659_call = mutated_mod.get_global_var('func_659')
var_5925 = relay.var("var_5925", dtype = "float64", shape = (30,))#candidate|5925|(30,)|var|float64
call_5924 = relay.TupleGetItem(func_655_call(relay.reshape(var_5912.astype('float32'), [10, 16, 4]), relay.reshape(var_5925.astype('float64'), [30,]), ), 5)
call_5926 = relay.TupleGetItem(func_659_call(relay.reshape(var_5912.astype('float32'), [10, 16, 4]), relay.reshape(var_5925.astype('float64'), [30,]), ), 5)
func_3524_call = mod.get_global_var('func_3524')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_5928 = relay.TupleGetItem(func_3524_call(), 0)
call_5929 = relay.TupleGetItem(func_3525_call(), 0)
output = relay.Tuple([call_5897,call_5911,var_5912,call_5924,var_5925,call_5928,])
output2 = relay.Tuple([call_5898,call_5913,var_5912,call_5926,var_5925,call_5929,])
func_5932 = relay.Function([var_5912,var_5925,], output)
mod['func_5932'] = func_5932
mod = relay.transform.InferType()(mod)
mutated_mod['func_5932'] = func_5932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5932_call = mutated_mod.get_global_var('func_5932')
var_5934 = relay.var("var_5934", dtype = "float32", shape = (640,))#candidate|5934|(640,)|var|float32
var_5935 = relay.var("var_5935", dtype = "float64", shape = (30,))#candidate|5935|(30,)|var|float64
call_5933 = func_5932_call(var_5934,var_5935,)
output = call_5933
func_5936 = relay.Function([var_5934,var_5935,], output)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4792_call = mutated_mod.get_global_var('func_4792')
call_5956 = relay.TupleGetItem(func_4791_call(), 2)
call_5957 = relay.TupleGetItem(func_4792_call(), 2)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
var_5959 = relay.var("var_5959", dtype = "float64", shape = (338,))#candidate|5959|(338,)|var|float64
call_5958 = relay.TupleGetItem(func_2779_call(relay.reshape(var_5959.astype('float64'), [13, 2, 13])), 4)
call_5960 = relay.TupleGetItem(func_2781_call(relay.reshape(var_5959.astype('float64'), [13, 2, 13])), 4)
func_4093_call = mod.get_global_var('func_4093')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_5994 = relay.TupleGetItem(func_4093_call(), 0)
call_5995 = relay.TupleGetItem(func_4094_call(), 0)
uop_6015 = relay.asin(var_5959.astype('float64')) # shape=(338,)
output = relay.Tuple([call_5956,call_5958,call_5994,uop_6015,])
output2 = relay.Tuple([call_5957,call_5960,call_5995,uop_6015,])
func_6039 = relay.Function([var_5959,], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6040 = relay.var("var_6040", dtype = "float64", shape = (338,))#candidate|6040|(338,)|var|float64
func_6039_call = mutated_mod.get_global_var('func_6039')
call_6041 = func_6039_call(var_6040)
output = call_6041
func_6042 = relay.Function([var_6040], output)
mutated_mod['func_6042'] = func_6042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_6058 = relay.TupleGetItem(func_1468_call(), 0)
call_6059 = relay.TupleGetItem(func_1469_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_6060 = relay.TupleGetItem(func_1468_call(), 0)
call_6061 = relay.TupleGetItem(func_1469_call(), 0)
output = relay.Tuple([call_6058,call_6060,])
output2 = relay.Tuple([call_6059,call_6061,])
func_6079 = relay.Function([], output)
mod['func_6079'] = func_6079
mod = relay.transform.InferType()(mod)
output = func_6079()
func_6080 = relay.Function([], output)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3721_call = mutated_mod.get_global_var('func_3721')
call_6195 = relay.TupleGetItem(func_3719_call(), 0)
call_6196 = relay.TupleGetItem(func_3721_call(), 0)
func_708_call = mod.get_global_var('func_708')
func_710_call = mutated_mod.get_global_var('func_710')
var_6209 = relay.var("var_6209", dtype = "bool", shape = (312,))#candidate|6209|(312,)|var|bool
call_6208 = relay.TupleGetItem(func_708_call(relay.reshape(var_6209.astype('bool'), [13, 2, 12])), 1)
call_6210 = relay.TupleGetItem(func_710_call(relay.reshape(var_6209.astype('bool'), [13, 2, 12])), 1)
func_4533_call = mod.get_global_var('func_4533')
func_4534_call = mutated_mod.get_global_var('func_4534')
call_6214 = relay.TupleGetItem(func_4533_call(), 0)
call_6215 = relay.TupleGetItem(func_4534_call(), 0)
var_6222 = relay.var("var_6222", dtype = "float32", shape = (13, 2, 12))#candidate|6222|(13, 2, 12)|var|float32
bop_6223 = relay.maximum(call_6208.astype('uint32'), relay.reshape(var_6222.astype('uint32'), relay.shape_of(call_6208))) # shape=(13, 2, 12)
bop_6226 = relay.maximum(call_6210.astype('uint32'), relay.reshape(var_6222.astype('uint32'), relay.shape_of(call_6210))) # shape=(13, 2, 12)
func_5333_call = mod.get_global_var('func_5333')
func_5334_call = mutated_mod.get_global_var('func_5334')
call_6242 = relay.TupleGetItem(func_5333_call(), 0)
call_6243 = relay.TupleGetItem(func_5334_call(), 0)
func_3274_call = mod.get_global_var('func_3274')
func_3276_call = mutated_mod.get_global_var('func_3276')
const_6254 = relay.const([1.980416,6.950410,9.482298,1.021521,8.771630,-2.769808,-4.217399,-5.533712,1.395471,1.217932,-4.897893,8.565824,-3.876744,8.901166,-0.109043,-3.792863,-4.580208,-8.988606,3.649094,-8.796625,3.670873,-7.947540,6.115414,-9.234149,-5.072379,-2.382893,-4.914945,-4.565626,8.160106,4.661099,-0.317293,-0.505336,3.110765,5.671739,-2.827830,9.142147,-3.189790,3.769715,-5.859298,6.877302,8.100166,-7.549408,7.772230,-1.231585,-1.377756,-7.887461,-0.521795,8.284687,9.684357,-0.232448,-3.821487,6.969858,-1.952976,-9.913244,0.775676,3.770725,0.144405,-6.069578,-7.777232,-8.743729,-8.227165,-0.634553,6.391009,-8.572607,-4.797719,-1.673777,-2.554410,3.156506,-5.581350,-8.434314,8.411790,-6.604368,4.241201,2.020853,-3.570149,-6.587717,2.066357,2.968870,-3.931003,5.391324,-4.931403,3.113282,-8.508598,6.361840,-1.606075,-0.062656,0.229116,-3.826655,3.244911,5.577530,6.965471,6.408562,-6.439459,3.928280,-5.656950,6.199657,-0.821471,-1.599105,3.793889,8.728612,5.659260,-0.050215,2.214747,9.174184,-5.046849,-3.127226,-8.465684,-2.304482,-4.974948,1.229810,6.692253,7.936274,3.951079,-7.028405,-0.545577,-7.962475,3.528885,-9.743684,7.586918,5.173786,-9.256703,-8.864542,1.425096,7.208060,-1.759371,2.336736,1.498791,-9.167188,-3.805646,-6.404928,-0.496400,-7.502758,6.120303,-3.557657,-1.069980,-4.836591,4.456280,5.871506,-3.840128,-9.462230,0.959890,-6.842955,4.133133,2.678435,7.504415,-0.465213,-6.613447,8.555787,8.934940,-4.356011,6.573033,6.666116,4.543246,-0.153615,0.777635,0.835845,-2.436171,-5.701545,-3.242911,5.266588,0.535143,5.722775,-2.358165,1.879333,3.101932,3.264368,-0.568707,0.629733,3.270767,1.562966,5.629066,3.015851,-0.762097,4.093382,4.475676,-0.842148,-7.981846,-6.908204,-8.392920,-0.168233,4.580968,4.873538,-0.738977,-2.524755,-7.921749,0.540202,-4.487061,2.735698,-7.586566,9.059234,8.797833,-5.833330,2.473172,-7.231428,-1.707510,1.567089,-8.772418,9.801093,-8.553959,-1.799771,-8.114940,-7.929465,-2.772217,1.763686,-8.237217,-5.120215,8.319492,6.195270,9.461704,-2.476401,-6.146417,5.280026,-1.792575,-8.010040,-6.527287,1.454939,-0.483088,9.219849,9.946773,1.285686,0.234351,4.014917,-8.453911,-0.744316,-8.891280,8.622664,-7.638672,3.530996,2.018571,1.873659,-1.322950,-3.867244,-4.092234,6.679133,8.234422,8.245033,-5.485976,9.426497,0.773970,-2.366869,-3.785186,8.560655,6.024306,-6.304350,-8.053048,-8.441933,-4.966327,6.756946,4.597593,6.001198,6.242645,8.718587,6.280249,-3.960305,-8.350142,6.366570,-9.323741,-7.678992,3.201530,-2.419109,-3.146643,4.287447,-4.042689,-9.351487,8.987590,-1.387635,-2.849380,2.303351,-9.732064,3.684458,-6.992985,4.208745,0.137745,-1.733891,-0.964982,-1.252236,-2.689932,-8.506265,-9.518563,-3.423005,-3.478780,-0.461646,-8.129884,-5.974574,4.739204,-2.224071,-2.778468,-1.522533,2.487316,6.335615,7.890175,-6.059705,3.923988,-2.620427,6.959553,4.959850,0.906992,9.347027,5.641748,-9.337240,9.393065,1.293180,4.907413,2.367255,-0.009958,-6.591832,-0.739378,2.359485,4.505767,9.776109,-7.780602,-4.716259,-3.471752,-6.710854,-1.491084,-2.560485,0.671737,3.022639,0.655640,0.152471,1.410165,1.480447,-0.679159,5.751838,6.262219,5.266769,-0.023591,1.317899,6.229006,-5.566938,1.192062,9.798866,-7.954647,6.762705,6.303889,-5.643845,-2.192428,-1.679461,-9.163130,6.589942,-7.324003,-2.281742,-9.275047,6.991041,2.982574,7.690056,-7.306202,2.701359,-8.882665,-4.217772,1.778984,-3.831310,-0.164456,-8.711918,6.307649,-7.905052,-9.381276,-1.400017,1.742522,-2.299036,6.276496,1.604187,-7.705402,7.564993,8.618379,-9.536396,-2.126781,-2.248188,5.231016,8.442286,-2.273182,-6.007002,-6.177712,-3.605216,-3.719238,-0.614285,-7.042358,3.417049,-0.911230,9.775236,-3.604190,-7.095676,2.169764,-9.736132,-2.978576,5.720581,4.828871,1.255270,-2.995071,0.312771,5.511541,-5.853056,8.277788,-6.448813,-6.048149,7.906603,-5.979289,1.879999,0.483143,-1.272542,-6.392303,-4.511404,-5.929104,2.936905,6.499529,7.265252,2.153686,5.109986,-7.592648,-4.612473,3.901989,8.174476,-5.839016,1.428497,-5.586441,4.893982,2.194850,0.149107,4.920348,-2.840373,2.529338,6.862900,-8.897188,-3.511987,2.058435,9.922501,-4.503869,-6.969181,-7.820859,-0.798295,6.938869,6.593870,-7.099006,-2.985687,5.433120,-6.823555,6.981778,9.499147,-3.294490,-6.395633,3.672663,3.920711,-2.758107,-1.829200,9.931434,-3.811368,-8.591735,-0.986729,-3.616491,-5.860863,4.633375,-0.634194,2.101807,-3.150039,5.593860,9.028835,1.748725,1.084250,-3.892076,-7.451520,-2.329334,-7.276408,-3.298501,4.658414,-2.507782,-1.468821,2.636424,-1.423614,5.441765,-4.245955,3.686169,9.768210,-0.138891,-6.805493,-5.287262,5.445570,5.318803,4.004644,-0.260665,-1.203831,-6.321581,-7.224421,-1.602545,-2.016101,-9.507980,-0.492124,-5.787378,-2.523504,-2.207134,6.896792,6.021459,-0.861025,8.680130,-2.036899,-5.432715,-0.331231,6.066656,-1.451364,2.178109,2.912900,-5.063034,7.093846,5.311848,2.386942,-0.901570,-4.082998,3.443329,1.993943,-8.584455,-6.467114,-7.884657,-0.755146,-4.611939,0.413043,0.972036,8.800569,3.774611,1.423734,-0.534527,-9.562262,7.583602,-1.888848,8.046843,1.595790,5.135711,4.150285,-1.920105,8.556275,-6.600201,-2.911575,-2.516386,5.583705,-8.554437,-1.078637,-3.214484,-7.340690,-0.213735,-7.706519,-7.908510,8.576505,-4.905581,4.349284,-1.478530,2.980648,-0.763097,3.622371,4.463453,-3.746193,7.322965,-7.001973,9.713614,7.093704,0.593708,-2.461837,-9.541086,3.119225,-4.361055,2.181143,4.969892,1.129092,3.398438,-1.494536,-8.114687,-0.883508,-8.177880,1.052481,9.886054,4.620327,-4.955237,-8.840234,3.574282,5.510355,1.495145,0.766581,0.962274,-1.839835,6.983468,8.288668,2.612310,9.215493,-6.613424,7.305003,1.721637,-3.006073,-1.790995,-8.249962,-6.685675,5.878343,0.144930,7.255445,-2.726495,4.287529,-6.422640,7.952816,-6.914694,9.633204,5.368544,1.198537,4.967457,-1.404599,-5.576398,-3.859976,3.211973,-4.471195,-4.094933,7.693522,5.201178,-2.276404,-4.482542,3.707347,-5.004625,6.554925,-9.459278,-8.953850,3.389340,0.111851,-7.233484,-0.140858,-1.454447,-2.506821,-3.684138,9.838571,-3.478007,-7.059661,1.511148,7.649776,-8.045854,2.916107,2.201252,7.846963,-4.061798,2.093405,-0.352511,-8.947852,-4.605918,0.846505,1.195484,5.693028,-3.501646,-3.180396,1.134361,9.094189,-1.433910,-0.020156,-5.635347,-3.224666,2.814516,3.993634,-9.793855,-6.446130,-1.998271,0.137184,-1.371709,5.126192,-0.271410,-8.387784,-1.671662,-9.511839,-3.080107,-2.091239,-4.397239,9.589190,-9.987864,8.090723,5.146590,-2.358785,9.614941,5.660428,-6.784839,-3.587035,-1.228303,-5.482364,-1.340167,3.669377,-9.450229,9.960522,5.461657,-3.327720,-8.417381,-9.628235,5.519564,7.732016,-9.943700,-9.941218,-7.853250,-3.165162,6.493657,7.041971,4.767715,-5.071065,-1.861184,-9.530574,-8.379897,-3.821506,-1.267461,-5.716400,1.603628,-7.812907,-6.071282,-2.128121,7.231265,5.199691,5.741155,-0.871830,-7.567614,-4.445432,-3.508316,-8.810652,2.925181,8.096549,6.003314,5.750855,-3.426997,-7.345380,-0.806625,5.114814,6.590351,-2.737184,0.691771,6.898476,2.640694,-4.184793,-0.768236,2.346710,6.969705,4.260786,-8.023776,0.152531,-0.720098,-5.369686,-5.908412,-6.865787,-6.314225,8.735495,0.470909,8.794342,-6.950178,5.880579,-3.697645,2.871312,2.479223,-7.601986,5.045386,-1.116010,-0.314789,4.082819,-5.894294,-6.340344,-8.285586,-2.829454,6.393660,9.891439,-7.366692,-8.523988,3.560660,-7.134699,2.561917,-6.914422,4.972301,-7.287138,0.630323,-8.103540,-5.261664,6.052105,-3.501678,-2.854245,5.875320,-7.812620,-0.221586,2.448649,-9.185950,1.240412,-0.004349,-4.858441,-2.201744,7.012690,-8.147849,-4.640351,7.716950,-4.359566,8.569431,6.672562,-7.304652,-2.451578,-4.497478,-5.893675,-4.018967,-3.496811,2.511811,-6.860288,-0.588427,-2.520063,8.276017,2.224727,-8.962437,2.721987,-8.128235,-9.169791,-5.750629,-7.402930,-1.780782,1.904613,-9.261052,-1.751125,-2.570520,6.361283,-8.693324,-6.527853,-8.478194,-2.695640,4.111003,7.541187,-0.669483,-8.251094,-3.133652,-8.823818,2.011195,7.555246,7.519912,5.018590,-4.749125,-0.384902,-0.360944,9.339761,-9.453674,6.308894,0.878912,-6.918974,7.540802,-3.346118,8.685789,-7.305691,-1.591588,-4.998451,5.772506,3.105647,-3.202774,4.080636,-7.517605,-1.033495,-6.631781,-4.349831,-8.535916,-9.061031,6.794644,3.086820,4.421719,6.659194,-8.387424,2.080029,-6.460528,0.107536,8.256915,9.764964,4.745431,-5.734453,-1.038067,6.424323,7.832494,-8.771991,-6.969111,7.474421,8.536089,8.142515,-2.435216,-4.153485,-7.684626,-8.283519,-6.637491,6.838343,7.395242,3.441384,3.389363,-3.786456,-3.024019,5.233921,-9.642832,-1.376505,-0.039387,1.161422,6.738613,2.774402,-1.395145,6.810083,6.517833,-0.350977,-0.205681,-3.214449,2.799587,5.994246,9.491891,-0.004480,3.644969,-2.332573,6.100487,0.585424,6.791027,-8.483999,-3.855424,-5.498238,-3.366954,-2.154300,-2.013562,-7.405387,3.648943,-0.551187,4.261102,-9.560698,9.409189,-0.465871,6.363032,9.606573,-9.812018,-2.853230,1.981567,-6.055505,5.450268,4.298628,-5.028390,9.625190,7.298135,-9.864646,9.976488,2.444809,4.682473,1.965291,9.724382,8.784089,-0.873518,-6.453031,-5.594267,1.376375,3.023903,-7.391745,5.363530,8.057404,0.089541,2.407014,3.419886,3.917137,-9.840877,8.610717,-4.407995,3.300619,-0.656676,-3.337976,-9.831729,-5.207981,-8.871241,8.080379,9.439826,-6.798427,2.151701,0.659957,6.708038,2.660839,6.754004,5.098740,-9.142211,-1.895827,5.675190,5.910779,-6.766983,4.648331,-1.232250,-6.646978,-1.590978,-1.066292,-0.134360,-1.313925,5.946401,5.934030,-1.690541,-7.332669,2.600265,0.115543,6.226513,2.286769,-3.956812,6.409071,5.240068,-7.210039,-8.978064,5.344390,-2.639905,-5.476620,-6.829240,-4.000312,6.640661,9.326519,3.543607,5.299119,7.311436,8.259372,5.394891,4.234111,-6.349868,-7.646146,-9.666293,-6.183573,6.995784,-7.690336,-4.431211,-0.765252,1.558818,7.499690,-4.691831,-4.465952,9.801108,-8.750120,-4.251015,3.585422,5.059719,2.194594,-5.613678,8.200077,4.170870,2.707646,-3.732950,3.661546,5.734408,1.535655,9.682695,6.787025,2.606335,8.027741,0.032376,-3.950581,5.347216,5.308026,2.846094,0.841424,-6.579395,2.826884,0.657958,5.098200,3.036191,-3.537936,-8.865460,1.108929,8.477567,6.105518,6.945720,-5.792266,5.770404,-3.386329,-4.800870,8.125609,-7.336555,7.807827,8.715656,-1.985768,5.634539,7.957057,4.491645,4.863306,-3.586500,2.164054,5.030956,-2.243479,2.837732,9.865215,-5.507013,0.731973,9.809286,-7.958297,1.409856,6.745735,-7.309257,-2.897207,2.479828,-1.946227,-7.049171,-5.326136,0.460545,-7.947001,2.312120,-1.637616,6.959292,3.503389,7.620846,2.846270,-1.139106,3.279159,-7.910172,-7.296278,-6.851000,6.666199,5.330706,-8.068992,-0.692190,6.354961,-2.838303,5.571217,7.914620,3.071887,6.235306,3.174724,2.239770,-4.811410,-6.870363,-0.795684,8.249270,5.123475,4.197896,-5.352872,9.643375,0.266437,6.345052,7.558622,8.267000,1.764182,4.809766,6.254588,-2.308421,-1.062680,-7.175118,4.200226,-8.283826,-6.964380,-6.713944,2.273142,2.771080,3.377473,-4.755747,9.320893,2.017673,-4.667955,-4.734893,-1.556321,0.113356,9.774166,1.785221,0.202237,-5.675010,6.126023,-8.886598,-4.399980,4.161118,9.209098,-8.393907,-6.899401,5.422377,-1.441583,-8.036524,-8.636090,-8.213798,4.266207,-7.409362,7.187655,4.176605,6.024802,-2.275177,0.398835,-9.816737,4.754344,1.913744,-0.640118,-2.064041,-6.904578,9.734121,-0.224737,8.195253,4.018562,-4.543601,-0.316649,8.021498,-2.540094,9.423995,-4.598726,-9.857289,-6.727219,0.015435,-5.658755,3.863138,-3.856217,-5.075773,-4.337645,-0.948396,8.298386,6.097552,-8.962616,-2.961167,-0.547502,-2.428974,6.544041,-7.371435,5.145037,-4.576870,5.189522,-9.372804,3.289931,-8.338000,-8.682151,1.505331,7.667350,9.696689,-1.797034,-5.926080,4.480992,7.053794,2.044390,-2.853582,8.815645,9.256823,1.633769,-8.862675,-5.393814,-9.214735,3.767629,-8.485306,-2.501652,0.199370,8.236964,6.564886,-4.283240,6.712475,-3.311204,-4.307204,7.181282,-6.617166,-8.567309,0.838131,1.233079,5.603026,5.768077,-3.488443,-8.619775,-5.418060,1.386028,-2.899848,-4.185758,-8.245155,-5.045704,-7.416792,-3.378095,-7.061693,5.741408,4.571645,1.037293,-0.736752,-2.783948,8.290863,-7.432019,7.192819,7.818583,1.872136,3.299540,1.797599,9.606135,7.586175,-2.138317,-6.239002,5.193473,8.371842,-8.306109,-2.318110,-2.464128,5.322788,7.689640,-6.009002,9.238336,9.858806,6.106694,-2.691362,-0.483287,-8.583887,1.822991,5.872279,-1.532399,5.198236,-7.214493,-9.123119,3.948024,7.859429,-1.450716,-6.689558,6.155063,-0.779783,-2.753701,8.524380,0.703035,2.781831,-9.807385,3.830562,7.772571,-3.033556,-5.950866,-3.989738,-7.596755,5.421035,-5.924622,-0.292372,0.202388,-6.989819,4.149262,-7.049042,-5.662214,8.370031,-6.292261,3.472972,-9.405310,6.088748,-2.500219,-4.585932,4.092805,3.775608,8.538285,-7.193551,4.359724,-7.495894,-8.874308,7.986255,5.768932,-4.248554,9.484492,3.339034,9.067473,9.175497,3.347069,-7.379600,6.214174,-2.610869,-6.337675,3.270437,9.798879,-4.079219,-2.499126,-8.769536,1.504794,-1.439652,1.366457,-5.073947,-9.044251,-7.390198,5.306580,9.533903,8.443353,-1.145396,-2.228330,1.653680,0.747756,8.728111,0.809399,5.917021,-9.702491,4.218105,-1.758660,-5.448924,7.506603,-7.430993,-3.778578,5.202475,2.387767,8.879079,6.700552,9.236164,-2.110386,9.965833,4.628154,-0.480661,-4.202490,1.041649,9.026190,3.063038,-3.794860,-3.085568,4.270603,-6.413068,8.224088,-3.775296,-8.843850,3.372014,3.341132,-3.835589,-9.039498,-2.872604,9.203824,6.511366,-0.284573,7.789015,-1.825029,5.192601,-1.703982,-5.325719,9.677176,-1.557857,-4.582450,-4.281463,-7.513960,-3.113219,-9.272707,2.391273,-1.871575,-7.512534,-9.716744,-3.574493,0.359283,-0.967515,6.510258,7.861372,-9.369694,3.227283,-9.329929,-0.227668,-8.390890,4.844870,6.670619,-3.583723,8.139185,-1.311871,8.832397,-7.752138,-9.441379,-8.528138,8.915728,-8.922436,4.717460,-1.118785,-2.540108,6.189115,-2.119191,8.923152,9.530454,8.998606,-4.670454,-4.508554,-8.186407,2.948693,-1.459015,7.407200,4.416959,2.973375,5.832550,-5.986301,-3.216750,-4.780792,-8.306442,-0.780654,-3.765620,-1.763658,-1.632622,-4.258358,0.106169,0.372431,5.999862,5.745658,0.233026,7.182177,5.728403,-6.212993,2.911466,-6.333251,-5.405556,-4.898843,-9.363332,8.655403,8.845177,-7.427591,0.871584,-8.086787,-7.937375,-8.255523,-6.385155,-1.486424,4.215715,7.309515,4.844488,7.204682,2.443211,-3.944450,-8.971926,-2.420420,9.836215,8.371713,-8.964369,8.611447,6.875977,-7.461411,-6.749897,5.137444,2.723869,-9.445063,-3.493189,-3.540514,4.498027,-5.010178,6.439280,-3.996399,3.499260,6.923236,5.400274,-9.172624,-7.999847,3.630247,1.662844,8.935623,7.509975,5.999276,1.033793,1.471346,0.077107,-5.105697,-9.509478,3.046115,-2.166428,-4.792000,-3.078585,6.804891,8.778354,2.401355,3.649928,-6.936731,-3.366967,9.632570,0.677651,4.429663,-5.014452,2.372471,-5.663119,-0.324611,-5.954633,-9.039031,8.812242,5.706758,-5.155189,6.452892,9.069624,2.353336,0.344219,6.163115,3.921674,4.774271,0.709388,0.227589,-7.043180,-0.658437,-2.067930,8.301822,-8.687347,-0.707718,5.704351,7.436930,3.801601,-3.431717,4.026755,-6.855588,-0.710470,-9.659038,-9.525721,4.737452,3.638567,8.184815,1.171839,2.623490,-5.540595,-1.917095,8.844259,-7.253230,-7.947031,6.514642,6.795490,5.688226,-5.455366,7.422650,0.343727,7.021756,-6.619929,-6.616201,7.902934,-5.701457,8.583949,6.107943,-2.998534,-1.744569,-2.831651,-3.295012,8.999349,-1.619513,5.500589,-1.712862,-3.617517,2.179161,7.816057,-9.372315,8.418446,-8.817088,-1.435547,5.936689,1.595039,0.251896,9.885664,2.602328,3.418328,-0.529386,2.474360,2.332864,-0.604331,0.238750,-2.926813,-5.175560,-3.862872,2.078589,-9.716747,0.962965,-1.386297,-7.771002,-5.677999,-4.509882,4.416810,-8.172062,7.152223,-7.252533,-2.384719,0.072461,-5.517333,-0.787017,-6.227913,3.308248,-4.183807,8.917841,7.192787,-1.925582,0.006312,-6.515035,-9.993017,-1.574854,-2.510685,8.695481,-9.845874,-9.391195,9.459753,2.838730,-4.501102,-2.218260,2.534498,9.304058,7.292130,-4.980984,-0.397082,6.645472,6.476750,-6.623135,6.694220,-0.815276,5.069289,-2.704363,3.337562,-2.539624,-4.969839,-7.198040,-4.566281,-1.992950,1.646333,1.839058,5.759574,-7.873223,-3.055606,4.543737,8.268713,2.442952,-6.090518,1.404339,4.259670,9.311297,-3.387913,1.728220,0.300643,8.004009,-1.625758,-3.572398,4.961034,-1.439398,8.980244,9.478373,2.254132,3.330137,-2.366893,4.747129,9.196151,3.882707,-5.291125,-7.012199,5.370757,-4.429078,-2.880845,9.341745,-4.979813,0.642955,2.837227,-9.712543,1.611997,-3.632819,-0.245475,3.820435,-2.736439,7.591339,0.275093,-2.605346,3.286626,-0.811217,9.951175,-6.295069,6.050930,-2.632518,-6.556535,1.519454,-6.682788,-4.573138,3.707134,-2.432628,-1.115088,-5.724827,-0.304545,-6.562738,-6.060965,4.771553,3.869938,9.869956,-4.942851,4.251347,-1.195657,-1.216780,6.047524,1.013105,6.976094,-8.761172,2.913778,1.023886,-7.505201,-3.100078,8.257833,-5.078388,3.836364,2.070658,1.395094,-8.183992,-8.732739,3.683022,1.919091,-5.968080,-2.021974,1.136053,-7.717515,9.831215,-0.548607,0.518426,-6.662237,-5.014449,3.681445,9.761051,3.151876,-2.532111,-7.724821,1.632790,-8.016701,-3.483364,-8.764518,-8.758155,9.579868,6.009468,3.864229,5.417075,1.556718,9.306680,7.681882,1.628705,3.098445,-1.776775,2.295965,4.009906,-8.096441,1.704123,5.197001,7.871701,5.338555,5.878147,0.604344,-9.881730,-7.670914,0.641908,-2.299810,-6.622641,-5.005743,-4.622942,-7.577377,3.031037,7.808644,-3.032806,-2.448004,3.660503,-7.170640,5.728266,6.226316,-9.575369,7.894676,-3.339385,6.651652,5.905764,0.109364,7.058553,-1.839043,-0.740908,1.634106,-8.401245,-9.229998,-1.402765,-3.894004,-5.571133,8.654805,-3.706864,-8.550921,0.307895,5.045874,5.945008,-8.580809,3.788241,0.036266,-0.770202,-4.517179], dtype = "float32")#candidate|6254|(1820,)|const|float32
call_6253 = relay.TupleGetItem(func_3274_call(relay.reshape(const_6254.astype('float32'), [1820,])), 1)
call_6255 = relay.TupleGetItem(func_3276_call(relay.reshape(const_6254.astype('float32'), [1820,])), 1)
func_5316_call = mod.get_global_var('func_5316')
func_5319_call = mutated_mod.get_global_var('func_5319')
var_6258 = relay.var("var_6258", dtype = "float64", shape = (1568,))#candidate|6258|(1568,)|var|float64
call_6257 = relay.TupleGetItem(func_5316_call(relay.reshape(var_6258.astype('float64'), [1568,])), 3)
call_6259 = relay.TupleGetItem(func_5319_call(relay.reshape(var_6258.astype('float64'), [1568,])), 3)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_6269 = relay.TupleGetItem(func_4540_call(), 0)
call_6270 = relay.TupleGetItem(func_4542_call(), 0)
output = relay.Tuple([call_6195,var_6209,call_6214,bop_6223,call_6242,call_6253,const_6254,call_6257,var_6258,call_6269,])
output2 = relay.Tuple([call_6196,var_6209,call_6215,bop_6226,call_6243,call_6255,const_6254,call_6259,var_6258,call_6270,])
func_6300 = relay.Function([var_6209,var_6222,var_6258,], output)
mod['func_6300'] = func_6300
mod = relay.transform.InferType()(mod)
var_6301 = relay.var("var_6301", dtype = "bool", shape = (312,))#candidate|6301|(312,)|var|bool
var_6302 = relay.var("var_6302", dtype = "float32", shape = (13, 2, 12))#candidate|6302|(13, 2, 12)|var|float32
var_6303 = relay.var("var_6303", dtype = "float64", shape = (1568,))#candidate|6303|(1568,)|var|float64
output = func_6300(var_6301,var_6302,var_6303,)
func_6304 = relay.Function([var_6301,var_6302,var_6303,], output)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5333_call = mod.get_global_var('func_5333')
func_5334_call = mutated_mod.get_global_var('func_5334')
call_6312 = relay.TupleGetItem(func_5333_call(), 0)
call_6313 = relay.TupleGetItem(func_5334_call(), 0)
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_6321 = relay.TupleGetItem(func_2994_call(), 3)
call_6322 = relay.TupleGetItem(func_2996_call(), 3)
uop_6326 = relay.sinh(call_6321.astype('float32')) # shape=(7, 28)
uop_6328 = relay.sinh(call_6322.astype('float32')) # shape=(7, 28)
uop_6336 = relay.sin(uop_6326.astype('float32')) # shape=(7, 28)
uop_6338 = relay.sin(uop_6328.astype('float32')) # shape=(7, 28)
var_6346 = relay.var("var_6346", dtype = "float32", shape = (7, 28))#candidate|6346|(7, 28)|var|float32
bop_6347 = relay.logical_or(uop_6336.astype('bool'), relay.reshape(var_6346.astype('bool'), relay.shape_of(uop_6336))) # shape=(7, 28)
bop_6350 = relay.logical_or(uop_6338.astype('bool'), relay.reshape(var_6346.astype('bool'), relay.shape_of(uop_6338))) # shape=(7, 28)
var_6360 = relay.var("var_6360", dtype = "float32", shape = (7, 28))#candidate|6360|(7, 28)|var|float32
bop_6361 = relay.equal(uop_6326.astype('bool'), relay.reshape(var_6360.astype('bool'), relay.shape_of(uop_6326))) # shape=(7, 28)
bop_6364 = relay.equal(uop_6328.astype('bool'), relay.reshape(var_6360.astype('bool'), relay.shape_of(uop_6328))) # shape=(7, 28)
uop_6371 = relay.rsqrt(uop_6336.astype('float32')) # shape=(7, 28)
uop_6373 = relay.rsqrt(uop_6338.astype('float32')) # shape=(7, 28)
output = relay.Tuple([call_6312,bop_6347,bop_6361,uop_6371,])
output2 = relay.Tuple([call_6313,bop_6350,bop_6364,uop_6373,])
func_6377 = relay.Function([var_6346,var_6360,], output)
mod['func_6377'] = func_6377
mod = relay.transform.InferType()(mod)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6377_call = mutated_mod.get_global_var('func_6377')
var_6379 = relay.var("var_6379", dtype = "float32", shape = (7, 28))#candidate|6379|(7, 28)|var|float32
var_6380 = relay.var("var_6380", dtype = "float32", shape = (7, 28))#candidate|6380|(7, 28)|var|float32
call_6378 = func_6377_call(var_6379,var_6380,)
output = call_6378
func_6381 = relay.Function([var_6379,var_6380,], output)
mutated_mod['func_6381'] = func_6381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_6388 = func_1798_call()
call_6389 = func_1798_call()
output = call_6388
output2 = call_6389
func_6390 = relay.Function([], output)
mod['func_6390'] = func_6390
mod = relay.transform.InferType()(mod)
output = func_6390()
func_6391 = relay.Function([], output)
mutated_mod['func_6391'] = func_6391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6079_call = mod.get_global_var('func_6079')
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6428 = relay.TupleGetItem(func_6079_call(), 0)
call_6429 = relay.TupleGetItem(func_6080_call(), 0)
func_4082_call = mod.get_global_var('func_4082')
func_4086_call = mutated_mod.get_global_var('func_4086')
const_6446 = relay.const([-7.599110,-0.899760,0.800135,1.532606,-6.121321,7.242296,-3.097915,4.257298,9.364808,-7.194474,5.116884,-0.263996,6.860990,1.726261,3.064098,-7.845527,-7.544726,-8.460422,4.494002,4.844749,3.083183,6.607161,-7.492619,5.566276,1.348603,-6.838050,0.916331,-0.218133,-9.065866,5.142874,2.593679,-0.068958,0.230264,9.133850,-9.779866,-7.121566,2.044770,-7.907968,-5.639347,7.017555,4.678403,-0.743814,-2.349229,9.152695,-8.900285,-2.836955,-0.780882,3.077427,-6.726057,-8.104643,-2.530632,-5.971626,-2.687080,3.599332,5.678705,-5.420308,-5.612847,8.021241,-6.112185,-4.828623,-1.385352,-8.466250,5.906918,-1.466351,-1.750399,-1.412042,2.552942,0.503886,0.110093,-1.877378,0.781917,-8.715683,6.658409,2.995775,-2.905074,-0.513637,-2.629872,-7.597663,5.353075,4.043804,6.892852,-7.635875,6.491556,5.968316,-3.043857,5.357693,-7.572346,2.078806,8.385333,7.298994,-9.081223,-3.853891,-0.676528,-0.414488,6.966269,-3.901901,-6.804328,5.404862,-5.395125,-8.133975,-4.876380,-3.058906,8.358544,-8.173340,-5.926909,1.040634,-3.751111,-9.836381,-2.464104,-7.285126,-9.624926,-4.557005,6.580032,-6.168417,-3.913857,-6.316681,-5.893213,-8.323272,-9.226801,0.602535,-7.629712,-1.346046,-3.770574,-9.190982,0.273328,3.706780,2.686028,-2.123190,7.923530,-3.005303,-4.402245,1.975332,4.591581,-7.266937,-0.750658,4.609172,-3.894641,1.385780,-6.512001,3.278928,-2.584977,6.801063,1.653702,-1.236727,8.654491,-2.772704,6.431426,-0.377141,6.004351,7.075407,-8.781759,4.386461,-5.307581,-9.133773,-9.358588,-7.424534,-0.476232,-5.775325,-9.813857,-6.986616,2.955272,6.259972,-1.556896,2.308343,-3.933141,-3.006248,5.136025,-6.373707,-3.940934,-6.138969,-1.189990,-4.735556,7.633613,-7.243288,9.923131,9.489406,-7.665958,-9.233873,-3.659804,-8.307949,-1.354622,-5.269357,-0.048278,6.888230,9.318566,9.159368,-0.949046,-8.340464,-8.601338,3.086150,1.964481,-7.050496,4.130958,4.914594,1.652804,4.297240,-9.284432,6.350323,-6.987515,4.420567,3.059730,5.835310,-8.522706,1.681517,0.430259,5.552796,4.860572,-2.193145,-3.088027,-9.120966,8.438510,0.588020,1.025772,2.935280,7.251055,5.914318,8.003620,-2.769778,-1.259560,3.541152,2.716329,8.305829,-5.860083,4.135785,7.872247,-9.061778,5.333599,-4.407716,1.193172,-9.820840,-0.370664,8.246279,8.317694,-2.638610,9.196567,4.547119,-6.029933,5.262933,-5.789183,0.626109,-2.405902,-4.053302,2.555973,9.516568,-9.179075,4.464494,5.573159,2.463926,-0.796863,7.229082,4.666618,-5.622226,5.471443,-8.373643,3.353450,9.004896,-0.702529,9.640357,-0.780513,-0.396215,9.070243,7.120731,-1.605047,4.769889,-1.989455,-5.407892,0.829363,9.215470,-1.749349,-5.201057,0.588907,0.182626,5.419540,0.322775,7.880059,2.263627,8.496708,-2.275607,5.592257,4.696190,-0.551339,2.090852,-7.621662,-9.953072,-8.608594,-9.423500,-8.919768,9.349902,1.601042,7.289433,-8.671151,8.544468,1.289405,7.701838,3.721556,4.123197,-6.186531,1.850203,8.971736,0.321855,-9.062259,-1.947085,-2.935461,-2.563855,-0.527418,-1.517708,-5.014947,3.916000,2.044753,-1.774619,7.904377,-0.527972,-7.242940,-3.078105,7.074930,-5.631903,-0.797101,-7.222309,-7.423105,-0.788116,-1.194737,-9.798720,-0.260274,5.040018,-3.650836,-5.812642,8.271144,-6.385826,-6.855163,7.775349,-6.196138,0.668613,-6.559742,1.425923,-8.713660,-0.504520,9.400364,-3.518170,-8.027807,8.023759,8.005133,-3.220841,3.100171,6.643750,4.627581,6.735937,-9.534792,-9.071075,9.274494,9.022282,3.191674,-6.306919,-8.020704,-3.459441,-4.993344,-5.605761,1.284342,-1.239303,2.958905,-6.201900,8.010214,-5.469812,-9.525541,-0.866735,1.907645,-1.482013,3.595441,3.744974,2.809307,-0.123242,9.099592,4.024288,4.008494,0.415109,3.421139], dtype = "float32")#candidate|6446|(375,)|const|float32
var_6447 = relay.var("var_6447", dtype = "uint32", shape = (756,))#candidate|6447|(756,)|var|uint32
call_6445 = relay.TupleGetItem(func_4082_call(relay.reshape(const_6446.astype('float32'), [375,]), relay.reshape(var_6447.astype('uint32'), [756,]), ), 6)
call_6448 = relay.TupleGetItem(func_4086_call(relay.reshape(const_6446.astype('float32'), [375,]), relay.reshape(var_6447.astype('uint32'), [756,]), ), 6)
output = relay.Tuple([call_6428,call_6445,const_6446,var_6447,])
output2 = relay.Tuple([call_6429,call_6448,const_6446,var_6447,])
func_6466 = relay.Function([var_6447,], output)
mod['func_6466'] = func_6466
mod = relay.transform.InferType()(mod)
var_6467 = relay.var("var_6467", dtype = "uint32", shape = (756,))#candidate|6467|(756,)|var|uint32
output = func_6466(var_6467)
func_6468 = relay.Function([var_6467], output)
mutated_mod['func_6468'] = func_6468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6079_call = mod.get_global_var('func_6079')
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6625 = relay.TupleGetItem(func_6079_call(), 0)
call_6626 = relay.TupleGetItem(func_6080_call(), 0)
output = relay.Tuple([call_6625,])
output2 = relay.Tuple([call_6626,])
func_6629 = relay.Function([], output)
mod['func_6629'] = func_6629
mod = relay.transform.InferType()(mod)
output = func_6629()
func_6630 = relay.Function([], output)
mutated_mod['func_6630'] = func_6630
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6641 = relay.const([[[-4,-7],[-9,-1],[6,-2]],[[-8,7],[4,1],[-1,-6]],[[3,-5],[-1,8],[5,10]],[[-4,9],[-4,6],[1,-6]]], dtype = "int32")#candidate|6641|(4, 3, 2)|const|int32
const_6642 = relay.const([[[6,5],[-6,-7],[2,5]],[[2,-1],[-10,4],[-6,5]],[[10,-10],[2,8],[3,2]],[[-10,-2],[-2,-2],[4,3]]], dtype = "int32")#candidate|6642|(4, 3, 2)|const|int32
bop_6643 = relay.left_shift(const_6641.astype('int32'), relay.reshape(const_6642.astype('int32'), relay.shape_of(const_6641))) # shape=(4, 3, 2)
output = relay.Tuple([bop_6643,])
output2 = relay.Tuple([bop_6643,])
func_6654 = relay.Function([], output)
mod['func_6654'] = func_6654
mod = relay.transform.InferType()(mod)
output = func_6654()
func_6655 = relay.Function([], output)
mutated_mod['func_6655'] = func_6655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mod.get_global_var('func_4606')
func_4607_call = mutated_mod.get_global_var('func_4607')
call_6659 = relay.TupleGetItem(func_4606_call(), 0)
call_6660 = relay.TupleGetItem(func_4607_call(), 0)
func_3801_call = mod.get_global_var('func_3801')
func_3805_call = mutated_mod.get_global_var('func_3805')
var_6668 = relay.var("var_6668", dtype = "float32", shape = (640,))#candidate|6668|(640,)|var|float32
const_6669 = relay.const([7.926535,-9.157547,5.946668,0.079673,6.193521,-3.233270,-1.442194,5.903019,4.497363,7.725831,-0.216728,-7.674284,1.373671,-2.094713,-8.831805,-0.871256,3.635068,6.573121,9.758734,-3.289157,3.761886,-4.352098,2.698181,9.798956,9.243160,8.493884,1.613866,1.374822,-5.705256,8.736870], dtype = "float64")#candidate|6669|(30,)|const|float64
call_6667 = relay.TupleGetItem(func_3801_call(relay.reshape(var_6668.astype('float32'), [640,]), relay.reshape(const_6669.astype('float64'), [30,]), ), 3)
call_6670 = relay.TupleGetItem(func_3805_call(relay.reshape(var_6668.astype('float32'), [640,]), relay.reshape(const_6669.astype('float64'), [30,]), ), 3)
output = relay.Tuple([call_6659,call_6667,var_6668,const_6669,])
output2 = relay.Tuple([call_6660,call_6670,var_6668,const_6669,])
func_6685 = relay.Function([var_6668,], output)
mod['func_6685'] = func_6685
mod = relay.transform.InferType()(mod)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6686 = relay.var("var_6686", dtype = "float32", shape = (640,))#candidate|6686|(640,)|var|float32
func_6685_call = mutated_mod.get_global_var('func_6685')
call_6687 = func_6685_call(var_6686)
output = call_6687
func_6688 = relay.Function([var_6686], output)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2994_call = mod.get_global_var('func_2994')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_6744 = relay.TupleGetItem(func_2994_call(), 4)
call_6745 = relay.TupleGetItem(func_2996_call(), 4)
func_3274_call = mod.get_global_var('func_3274')
func_3276_call = mutated_mod.get_global_var('func_3276')
var_6748 = relay.var("var_6748", dtype = "float32", shape = (1820,))#candidate|6748|(1820,)|var|float32
call_6747 = relay.TupleGetItem(func_3274_call(relay.reshape(var_6748.astype('float32'), [1820,])), 2)
call_6749 = relay.TupleGetItem(func_3276_call(relay.reshape(var_6748.astype('float32'), [1820,])), 2)
func_3524_call = mod.get_global_var('func_3524')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_6751 = relay.TupleGetItem(func_3524_call(), 3)
call_6752 = relay.TupleGetItem(func_3525_call(), 3)
output = relay.Tuple([call_6744,call_6747,var_6748,call_6751,])
output2 = relay.Tuple([call_6745,call_6749,var_6748,call_6752,])
func_6765 = relay.Function([var_6748,], output)
mod['func_6765'] = func_6765
mod = relay.transform.InferType()(mod)
mutated_mod['func_6765'] = func_6765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6766 = relay.var("var_6766", dtype = "float32", shape = (1820,))#candidate|6766|(1820,)|var|float32
func_6765_call = mutated_mod.get_global_var('func_6765')
call_6767 = func_6765_call(var_6766)
output = call_6767
func_6768 = relay.Function([var_6766], output)
mutated_mod['func_6768'] = func_6768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4523_call = mod.get_global_var('func_4523')
func_4525_call = mutated_mod.get_global_var('func_4525')
call_6825 = relay.TupleGetItem(func_4523_call(), 0)
call_6826 = relay.TupleGetItem(func_4525_call(), 0)
output = call_6825
output2 = call_6826
func_6829 = relay.Function([], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
output = func_6829()
func_6830 = relay.Function([], output)
mutated_mod['func_6830'] = func_6830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6079_call = mod.get_global_var('func_6079')
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6831 = relay.TupleGetItem(func_6079_call(), 1)
call_6832 = relay.TupleGetItem(func_6080_call(), 1)
output = relay.Tuple([call_6831,])
output2 = relay.Tuple([call_6832,])
func_6849 = relay.Function([], output)
mod['func_6849'] = func_6849
mod = relay.transform.InferType()(mod)
mutated_mod['func_6849'] = func_6849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6849_call = mutated_mod.get_global_var('func_6849')
call_6850 = func_6849_call()
output = call_6850
func_6851 = relay.Function([], output)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6849_call = mod.get_global_var('func_6849')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_6869 = relay.TupleGetItem(func_6849_call(), 0)
call_6870 = relay.TupleGetItem(func_6851_call(), 0)
output = relay.Tuple([call_6869,])
output2 = relay.Tuple([call_6870,])
func_6900 = relay.Function([], output)
mod['func_6900'] = func_6900
mod = relay.transform.InferType()(mod)
output = func_6900()
func_6901 = relay.Function([], output)
mutated_mod['func_6901'] = func_6901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mod.get_global_var('func_4093')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_6915 = relay.TupleGetItem(func_4093_call(), 0)
call_6916 = relay.TupleGetItem(func_4094_call(), 0)
output = call_6915
output2 = call_6916
func_6923 = relay.Function([], output)
mod['func_6923'] = func_6923
mod = relay.transform.InferType()(mod)
output = func_6923()
func_6924 = relay.Function([], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_6931 = relay.TupleGetItem(func_6654_call(), 0)
call_6932 = relay.TupleGetItem(func_6655_call(), 0)
output = relay.Tuple([call_6931,])
output2 = relay.Tuple([call_6932,])
func_6935 = relay.Function([], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
output = func_6935()
func_6936 = relay.Function([], output)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4999_call = mod.get_global_var('func_4999')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_6937 = func_4999_call()
call_6938 = func_4999_call()
output = call_6937
output2 = call_6938
func_6944 = relay.Function([], output)
mod['func_6944'] = func_6944
mod = relay.transform.InferType()(mod)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6944_call = mutated_mod.get_global_var('func_6944')
call_6945 = func_6944_call()
output = call_6945
func_6946 = relay.Function([], output)
mutated_mod['func_6946'] = func_6946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3156_call = mod.get_global_var('func_3156')
func_3157_call = mutated_mod.get_global_var('func_3157')
call_6962 = relay.TupleGetItem(func_3156_call(), 3)
call_6963 = relay.TupleGetItem(func_3157_call(), 3)
var_6971 = relay.var("var_6971", dtype = "float64", shape = (13, 2, 13))#candidate|6971|(13, 2, 13)|var|float64
bop_6972 = relay.divide(call_6962.astype('float64'), relay.reshape(var_6971.astype('float64'), relay.shape_of(call_6962))) # shape=(13, 2, 13)
bop_6975 = relay.divide(call_6963.astype('float64'), relay.reshape(var_6971.astype('float64'), relay.shape_of(call_6963))) # shape=(13, 2, 13)
output = relay.Tuple([bop_6972,])
output2 = relay.Tuple([bop_6975,])
func_6988 = relay.Function([var_6971,], output)
mod['func_6988'] = func_6988
mod = relay.transform.InferType()(mod)
mutated_mod['func_6988'] = func_6988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6989 = relay.var("var_6989", dtype = "float64", shape = (13, 2, 13))#candidate|6989|(13, 2, 13)|var|float64
func_6988_call = mutated_mod.get_global_var('func_6988')
call_6990 = func_6988_call(var_6989)
output = call_6990
func_6991 = relay.Function([var_6989], output)
mutated_mod['func_6991'] = func_6991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6849_call = mod.get_global_var('func_6849')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_7064 = relay.TupleGetItem(func_6849_call(), 0)
call_7065 = relay.TupleGetItem(func_6851_call(), 0)
output = call_7064
output2 = call_7065
func_7077 = relay.Function([], output)
mod['func_7077'] = func_7077
mod = relay.transform.InferType()(mod)
output = func_7077()
func_7078 = relay.Function([], output)
mutated_mod['func_7078'] = func_7078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4533_call = mod.get_global_var('func_4533')
func_4534_call = mutated_mod.get_global_var('func_4534')
call_7119 = relay.TupleGetItem(func_4533_call(), 0)
call_7120 = relay.TupleGetItem(func_4534_call(), 0)
output = call_7119
output2 = call_7120
func_7131 = relay.Function([], output)
mod['func_7131'] = func_7131
mod = relay.transform.InferType()(mod)
output = func_7131()
func_7132 = relay.Function([], output)
mutated_mod['func_7132'] = func_7132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_7135 = func_1798_call()
call_7136 = func_1798_call()
func_4974_call = mod.get_global_var('func_4974')
func_4978_call = mutated_mod.get_global_var('func_4978')
const_7141 = relay.const([[4.845231,-8.105370,-8.915575],[9.587550,2.366555,-7.005874],[-5.870659,1.285265,-9.663716],[-6.453437,-1.176335,-5.143797],[9.750357,-1.672387,3.630767],[-8.464865,3.384497,3.916536],[-7.151990,6.186840,-8.740203],[-9.982414,0.782273,0.106461],[-7.264933,7.464558,-9.864733],[5.794199,8.661854,-7.052171],[3.552156,7.618327,1.704215],[-1.101189,3.361529,3.820700],[-5.815670,-5.532876,8.660370],[9.812360,3.001130,-9.026238],[-9.396794,4.796104,8.818359],[7.577745,-9.196837,-9.118272],[8.564405,2.645263,-5.678374],[-9.337553,7.443750,-4.691844],[6.066559,-6.856122,-0.585305],[-1.590764,-8.075720,-9.255737],[1.532850,-8.658848,7.461260],[-0.644153,-5.640011,9.126588],[-9.330196,6.830734,8.764579],[2.294827,9.145853,3.307803],[-2.399775,5.974354,-0.337665],[7.610886,1.143611,2.035197],[-9.768979,7.293511,-0.271663],[0.008239,-3.546470,-9.621077],[5.877813,-4.182166,1.348882],[-6.736204,-7.250129,6.985506],[-5.727440,-6.378782,-8.278460],[-3.117277,8.787134,6.918306],[-2.136075,3.598541,9.049179],[-1.333280,9.264773,-2.648259],[7.975057,-8.920644,-7.708021],[-1.448472,-1.131200,-6.405263],[-9.943576,5.684859,-8.124081],[1.669297,-4.666258,0.261550],[-0.618020,-9.371223,1.478068],[5.881271,1.766091,-1.676118],[7.886696,-1.092940,4.866473],[-1.507176,6.552120,-6.571425],[0.702192,0.194089,-0.628813],[9.545442,-7.010722,-0.352320],[-5.683027,-9.695255,5.651826],[3.744058,5.181432,6.033214],[-3.345590,2.922257,3.227809],[0.301189,9.109434,-7.780371],[-1.560383,4.729674,2.469576],[-7.178027,3.578552,-2.078587],[2.708041,6.336340,3.852535],[9.713738,-2.659262,-7.789550],[-9.865809,-6.629093,-0.411256],[0.298183,7.482728,9.427852],[-9.552033,-7.116433,9.345237],[6.909454,9.745035,8.705461],[3.743941,-3.020398,6.096971],[7.208969,4.016942,-1.945608],[9.444223,-1.589774,-0.350804],[4.062649,5.219817,-7.037667],[-6.474942,0.981678,-6.518899],[1.696643,0.058017,9.963140],[-3.326941,4.201475,4.479736],[0.226460,0.549555,1.117022],[8.858301,1.036331,-7.356800],[3.961629,8.869654,-0.083949],[-2.976174,2.452427,-3.756304],[-3.276134,8.512037,-7.432088],[3.254354,2.780679,1.765286],[-6.587541,-4.671884,7.262959],[8.863293,1.203840,0.883676],[-9.264804,1.490451,7.894168],[8.423942,-5.910780,9.503291],[6.660466,-2.053844,-5.446894],[6.071439,1.535333,-4.872967],[-2.297094,7.861196,-1.425272],[-8.392431,-1.567376,-6.852029],[1.534985,-4.326085,-7.441809],[-1.062484,-1.320554,3.323418],[-7.154239,-3.880836,-1.755460],[-9.950256,-6.721466,-3.074060],[-5.430987,-8.484726,7.265592],[-5.772771,-3.424185,-9.549755],[2.938780,-7.335926,-8.822214],[-2.089513,-4.509867,-9.447153],[9.122546,5.964502,-7.374984],[-5.750071,-4.454983,-5.911842],[4.458962,-3.599840,8.409642],[-3.953948,2.086153,-3.641658],[-2.145618,-7.502654,2.798716],[1.390541,6.359434,2.369066],[8.363209,-4.065224,-5.699590],[3.143508,-9.779413,4.740964],[-6.909346,-9.690270,-6.334183],[3.802401,7.121195,8.122203],[-8.327894,6.544401,3.526039],[-7.457365,-9.436046,1.382410],[4.618082,-5.705942,-3.033831],[6.538063,1.752745,6.554962],[-7.246317,2.804781,-9.860330],[5.636321,1.045481,0.496623],[7.601731,4.644518,-1.035291],[-8.469886,4.364229,0.364956],[-6.366536,0.443397,-6.978060],[2.210763,2.983535,-9.903718],[1.869638,9.193759,-0.634554],[9.352925,-9.779602,4.582145],[5.308781,-5.887121,-1.192487],[2.522253,-6.772928,1.356453],[6.426036,7.725820,4.434992],[-4.515917,1.712241,5.339017],[-6.418667,6.741201,-6.772154],[-5.290784,-6.642118,-3.914511],[-8.843685,8.285862,-3.652556],[-3.206025,8.205056,3.070966],[3.817333,7.472130,2.297929],[8.209203,-8.999911,-5.222460],[3.506648,-6.832392,9.382917],[0.101558,-8.793327,-2.525814],[9.557019,-1.807470,-2.265068],[7.392930,-1.318744,8.880364],[4.191755,3.876031,2.490478],[-5.802133,-3.086676,8.621069],[-8.861290,-1.789466,0.723809],[1.551137,0.216850,-3.896869],[3.459650,5.655592,-1.499327],[4.504128,3.552010,8.484103],[-9.527266,-4.791166,4.545389],[-5.753536,-0.560725,-6.981604],[3.367309,-2.634592,-3.521103],[9.472470,-3.048788,2.495649],[1.014491,-1.206746,6.605856],[5.700652,-5.455228,4.532096],[4.277944,0.343086,-4.071969],[-5.107456,1.188898,-3.427407],[8.157128,-2.525290,-6.398606],[-8.030608,-1.109285,3.059327],[8.347053,-1.152272,-3.720534],[8.953283,3.825234,7.560103],[-8.557988,-1.962717,-0.016202],[0.906864,-0.420783,8.501013],[8.587726,-3.804156,-0.497210],[-1.586133,-4.423232,1.464041],[-0.834493,9.287070,8.144811],[5.723369,-6.320470,-6.354875],[-7.694422,-2.933602,1.680806],[7.983440,8.557009,-7.760323],[2.226331,9.646915,3.877740],[-1.372931,2.677897,-6.246809],[-3.693340,9.840419,3.962587],[4.191365,0.873084,-4.007772],[2.599353,-7.527185,5.897424],[6.441186,7.980998,-4.501214],[9.408627,-6.338590,-9.031362],[-6.390322,-0.666050,1.096452],[1.620267,8.831714,-8.186592],[7.610926,2.819705,0.232062],[-2.046360,-1.905073,0.684293],[8.709798,4.405020,-4.751084],[-7.900742,8.748197,-8.888285],[-9.677725,0.483146,-6.156747],[9.036613,-3.336654,2.253730],[6.280887,-9.730285,7.475418],[-8.515447,-3.517145,-2.254864],[-3.368398,9.241020,6.024060],[-5.625175,6.595401,9.845267],[-6.974608,4.964716,-0.336104],[-3.506101,5.506337,6.190995],[-4.884319,8.306196,5.209587],[2.471855,-7.190192,4.314388],[-6.579830,0.590462,-6.971065],[-0.217868,4.638662,2.422755],[-7.988987,0.517095,-9.205050],[5.016558,-4.111375,5.914874],[-3.339401,5.216923,-4.458793],[6.468422,9.304970,-2.182519],[8.159097,-8.751216,7.585132],[-4.507263,4.458956,8.655916],[-3.981422,-7.127517,5.132270],[2.455649,0.437482,-7.854067],[8.283783,-5.989622,-6.301239],[-9.582891,3.612615,-4.410124],[-9.723996,0.294927,-3.091011],[9.571349,8.623801,3.856537],[-3.478809,-8.189358,-5.081623],[2.761989,-0.051813,-9.829364],[-8.835301,3.144713,7.212996],[-4.189784,-6.759681,2.280413],[-6.149847,-4.377199,-2.326522],[-7.033910,-7.747623,-4.902833],[6.088847,-4.635131,-1.496744],[-2.387160,-1.232473,-5.465635],[9.954290,7.231988,-2.373952],[-7.862655,-7.307515,-5.490327],[2.132168,0.784824,-4.936392]], dtype = "float64")#candidate|7141|(195, 3)|const|float64
const_7142 = relay.const([7.222805,-8.214849,1.683235,1.197730,-9.649768,0.875725,4.928671,8.005974,-5.033839,-2.670203,2.246721,5.437051,-3.294162,5.581420,-0.712272,9.449665,7.380351,4.996645,-1.347211,4.494296,-4.274704,-0.746692,7.013634,1.806283,4.298170,8.969542,2.654122,-3.105387,-2.928917,1.439368], dtype = "float64")#candidate|7142|(30,)|const|float64
call_7140 = relay.TupleGetItem(func_4974_call(relay.reshape(const_7141.astype('float64'), [13, 3, 15]), relay.reshape(const_7141.astype('float64'), [13, 3, 15]), relay.reshape(const_7142.astype('float64'), [30,]), ), 2)
call_7143 = relay.TupleGetItem(func_4978_call(relay.reshape(const_7141.astype('float64'), [13, 3, 15]), relay.reshape(const_7141.astype('float64'), [13, 3, 15]), relay.reshape(const_7142.astype('float64'), [30,]), ), 2)
var_7146 = relay.var("var_7146", dtype = "float64", shape = (195, 3))#candidate|7146|(195, 3)|var|float64
bop_7147 = relay.add(const_7141.astype('int32'), relay.reshape(var_7146.astype('int32'), relay.shape_of(const_7141))) # shape=(195, 3)
func_2614_call = mod.get_global_var('func_2614')
func_2620_call = mutated_mod.get_global_var('func_2620')
const_7177 = relay.const([[-5,-6,8,5,-5,-9],[10,9,-10,4,-6,1],[-6,5,-2,-6,-6,6],[-4,1,1,8,7,9],[-10,5,3,9,-1,-1],[-5,-10,7,7,8,1],[-6,-3,6,10,4,2],[-3,5,5,-9,-2,3],[8,3,8,5,4,-6],[-9,8,4,-9,1,5],[1,-6,6,4,-9,-7],[-4,-10,-10,9,-7,-3],[7,1,7,5,1,-2],[-3,8,5,1,-10,8],[-1,1,3,10,7,1],[-7,-1,10,-5,10,-8],[-9,-4,4,-10,8,3],[-5,-3,-4,6,1,-2],[-1,-5,-8,-5,4,7],[3,2,-9,5,2,6],[-2,-9,-10,-5,6,1],[5,-3,7,-8,7,4],[-7,-8,6,-6,8,3],[-6,10,-2,-8,-9,7],[-10,8,5,1,-10,-2],[7,-7,3,5,-10,-1],[-6,-9,-9,10,-9,5],[10,-9,-9,9,9,10],[-5,1,-2,8,-1,-2],[1,-8,-2,-8,10,-5],[6,-4,-9,9,9,-9],[-2,8,4,-2,4,9],[4,10,-3,-5,-8,-8],[-3,-1,4,-3,7,-10],[3,-7,-1,-3,-2,-10],[-8,5,-2,-3,9,9],[-3,10,6,-2,1,8],[-4,6,5,-2,-1,-9],[2,-9,-3,4,3,-6],[5,9,-7,-9,-7,-10],[3,5,1,-6,-3,5],[5,2,5,-6,7,-8],[2,9,4,-2,-1,10],[9,8,5,10,3,8],[1,10,-1,6,6,3],[-5,9,-1,10,7,4],[1,9,-5,2,5,7],[10,9,7,8,-8,9],[-5,1,-9,1,-10,-4],[9,2,7,10,-1,5],[-1,-1,9,-8,1,4],[6,-7,-6,-1,6,9],[-3,3,7,3,9,9],[-5,2,-6,-3,-2,9],[3,4,-1,5,3,-7],[3,10,-5,-2,6,6],[2,6,-4,-1,3,6],[-2,10,-10,8,9,9],[-7,-6,-7,-6,-6,3],[5,4,-1,4,5,9],[-2,-9,4,-7,-9,5],[9,-4,-4,-2,-3,7],[-1,7,4,1,2,-7],[8,-9,-8,4,6,2],[-7,8,-1,3,-7,-7],[-6,-9,8,7,1,-4],[2,8,-10,-7,5,4],[-4,7,7,4,-2,-6],[-8,-8,-10,-10,2,10],[8,-8,5,-6,-9,10]], dtype = "uint32")#candidate|7177|(70, 6)|const|uint32
var_7178 = relay.var("var_7178", dtype = "float32", shape = (375,))#candidate|7178|(375,)|var|float32
var_7179 = relay.var("var_7179", dtype = "float32", shape = (196,))#candidate|7179|(196,)|var|float32
call_7176 = relay.TupleGetItem(func_2614_call(relay.reshape(const_7177.astype('uint32'), [420,]), relay.reshape(const_7142.astype('float64'), [5, 2, 3]), relay.reshape(var_7178.astype('float32'), [375,]), relay.reshape(var_7179.astype('float32'), [196,]), relay.reshape(var_7178.astype('float32'), [375,]), ), 4)
call_7180 = relay.TupleGetItem(func_2620_call(relay.reshape(const_7177.astype('uint32'), [420,]), relay.reshape(const_7142.astype('float64'), [5, 2, 3]), relay.reshape(var_7178.astype('float32'), [375,]), relay.reshape(var_7179.astype('float32'), [196,]), relay.reshape(var_7178.astype('float32'), [375,]), ), 4)
func_6849_call = mod.get_global_var('func_6849')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_7184 = relay.TupleGetItem(func_6849_call(), 0)
call_7185 = relay.TupleGetItem(func_6851_call(), 0)
func_6829_call = mod.get_global_var('func_6829')
func_6830_call = mutated_mod.get_global_var('func_6830')
call_7187 = func_6829_call()
call_7188 = func_6829_call()
uop_7191 = relay.acosh(const_7177.astype('float32')) # shape=(70, 6)
uop_7195 = relay.tan(uop_7191.astype('float32')) # shape=(70, 6)
bop_7199 = relay.bitwise_xor(uop_7195.astype('int16'), relay.reshape(const_7177.astype('int16'), relay.shape_of(uop_7195))) # shape=(70, 6)
func_2187_call = mod.get_global_var('func_2187')
func_2193_call = mutated_mod.get_global_var('func_2193')
var_7205 = relay.var("var_7205", dtype = "float64", shape = (32,))#candidate|7205|(32,)|var|float64
const_7206 = relay.const([-0.622697,-7.924812,3.667225,2.908306,-8.137233,-6.095551,-7.875366,-5.356729,-6.231384,4.917161,-4.097619,-9.750564,6.878677,-0.334176,5.981015,3.746930,8.816039,3.044549,7.492403,-1.427411,-6.617330,3.252867,0.515491,3.298764,9.665265,3.597975,0.983579,0.957975,-2.151075,6.908172,-7.556553,-7.797215,-2.538975,-0.208099,-6.565269,-5.397353,6.954405,4.608194,4.004417,-7.954477,4.925978,-2.782234,-2.237350,2.048718,6.380203,-0.861930,4.346641,-5.424814,7.384485,1.453964,2.735366,-8.872881,-7.999623,2.031003,-6.003297,-0.190693,-3.721893,-5.163838,-2.206072,8.160882,4.182138,0.883331,-3.032273,-8.774266,3.908534,-9.063699,1.911253,3.975105,-1.416487,6.084369,4.019417,0.396674,8.011124,-8.869129,1.540954,7.060768,2.371971,-2.255786,-3.844553,4.730678,-1.004895,9.578496,-7.975769,4.585414,3.092580,7.139633,-4.350392,-2.295575,7.191502,-0.521120,0.707413,9.723076,-1.962101,-8.169419,-3.269217,-1.106825,5.350640,0.807626,5.853810,5.073460,3.182881,3.474023,6.579251,4.028979,-7.299389,7.184400,-1.770689,-0.944273,-4.711596,5.423310,4.230633,-9.324347,0.223766,-5.520877,-4.840321,-4.497175,7.611179,-8.768139,1.785833,7.139123,8.482882,1.018742,0.549417,-5.497086,6.538573,-8.459452,-9.536303,9.775998,-7.174195,-3.174396,6.685541,3.816602,-6.657278,7.533114,9.760205,8.127982,-1.998613,-1.336138,-0.707157,7.759548,7.897617,-5.027947,-3.670341,3.935584,-3.371997,-0.968917,-2.351221,-2.776672,3.427327,0.450232,-9.756849,9.982658,7.771215,-5.294938,-9.442225,0.234867,3.216676,8.578170,-2.753387,2.830171,-9.694653,-7.551991,4.292017,6.117767,7.666678,5.211215,2.285015,-7.657324,6.971072,8.474073,-9.322802,2.126193,-5.225017,-8.653647,8.245800,1.147466,6.496728,1.799413,-7.210622,6.723707,1.542758,1.773471,0.737595,8.918363,-9.650710,-9.027752,-3.545493,2.036772,5.410832,3.007458,0.780821,-2.676244,-6.804694,8.663390,5.417053,-4.138653,8.964939,1.858720,7.791626,4.845132,5.693701,1.951679,9.284522,3.151416,-1.138044,-7.401127,8.849099,-3.695066,-0.745954,1.504344,-6.513346,-7.764554,7.588211,-6.568437,-4.995064,6.013223,5.628092,3.568359,7.719917,4.446477,1.943212,4.119030,5.773771,6.082920,9.403468,2.890496,-9.810717,2.489502,5.645854,5.665177,-0.826738,-0.544013,4.671540,-0.240707,-1.774415,-7.945882,8.338345,-2.433447,2.797473,-3.082617,-1.539232,-0.187903,1.722213,1.024702,7.696447,9.439267,3.098233,7.171474,4.332949,0.280464,-6.762755,-3.546784,8.963569,-2.868603,-1.542456,0.389145,-6.846555,6.889778,4.926534,-5.314094,6.208499,-5.295834,0.862816,3.724805,-7.841843,-7.694974,-3.522823,-3.016714,-9.228606,-7.436151,-8.382727,9.038695,4.428276,-4.917538,3.424990,5.654182,-0.699266,8.858586,-9.414153,7.238603,8.739139,8.080918,-4.155013,2.852483,-2.898703,7.340899,1.995221,1.419502,9.859693,-7.295398,-9.610019,-4.636134,4.159431,0.580585,-8.148632,-7.756740,-0.324633,-6.331470,-6.693100,0.989254,2.396348,0.970474,-0.081382,-5.545614,-2.334989,-1.747398,-4.870259,-8.806725,5.531118,3.266368,-4.380211,4.921134,1.904586,1.230238,-6.559396,-9.976182,9.576295,-2.450651,-2.900945,3.992878,9.150470,-2.201253,-1.298139,-8.208937,-0.169013,-8.634694,8.327831,3.545976,0.710692,-8.533999], dtype = "float64")#candidate|7206|(330,)|const|float64
call_7204 = relay.TupleGetItem(func_2187_call(relay.reshape(var_7205.astype('float64'), [4, 8, 1]), relay.reshape(const_7177.astype('uint32'), [420,]), relay.reshape(var_7179.astype('float32'), [196,]), relay.reshape(call_7176.astype('uint32'), [756,]), relay.reshape(const_7206.astype('float64'), [330,]), ), 14)
call_7207 = relay.TupleGetItem(func_2193_call(relay.reshape(var_7205.astype('float64'), [4, 8, 1]), relay.reshape(const_7177.astype('uint32'), [420,]), relay.reshape(var_7179.astype('float32'), [196,]), relay.reshape(call_7176.astype('uint32'), [756,]), relay.reshape(const_7206.astype('float64'), [330,]), ), 14)
bop_7214 = relay.logical_xor(uop_7195.astype('uint64'), relay.reshape(uop_7191.astype('uint64'), relay.shape_of(uop_7195))) # shape=(70, 6)
bop_7220 = relay.floor_mod(bop_7214.astype('float64'), relay.reshape(bop_7199.astype('float64'), relay.shape_of(bop_7214))) # shape=(70, 6)
output = relay.Tuple([call_7135,call_7140,const_7142,bop_7147,call_7176,var_7178,var_7179,call_7184,call_7187,call_7204,var_7205,const_7206,bop_7220,])
output2 = relay.Tuple([call_7136,call_7143,const_7142,bop_7147,call_7180,var_7178,var_7179,call_7185,call_7188,call_7207,var_7205,const_7206,bop_7220,])
func_7223 = relay.Function([var_7146,var_7178,var_7179,var_7205,], output)
mod['func_7223'] = func_7223
mod = relay.transform.InferType()(mod)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7223_call = mutated_mod.get_global_var('func_7223')
var_7225 = relay.var("var_7225", dtype = "float64", shape = (195, 3))#candidate|7225|(195, 3)|var|float64
var_7226 = relay.var("var_7226", dtype = "float32", shape = (375,))#candidate|7226|(375,)|var|float32
var_7227 = relay.var("var_7227", dtype = "float32", shape = (196,))#candidate|7227|(196,)|var|float32
var_7228 = relay.var("var_7228", dtype = "float64", shape = (32,))#candidate|7228|(32,)|var|float64
call_7224 = func_7223_call(var_7225,var_7226,var_7227,var_7228,)
output = call_7224
func_7229 = relay.Function([var_7225,var_7226,var_7227,var_7228,], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7077_call = mod.get_global_var('func_7077')
func_7078_call = mutated_mod.get_global_var('func_7078')
call_7236 = func_7077_call()
call_7237 = func_7077_call()
output = call_7236
output2 = call_7237
func_7246 = relay.Function([], output)
mod['func_7246'] = func_7246
mod = relay.transform.InferType()(mod)
mutated_mod['func_7246'] = func_7246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7246_call = mutated_mod.get_global_var('func_7246')
call_7247 = func_7246_call()
output = call_7247
func_7248 = relay.Function([], output)
mutated_mod['func_7248'] = func_7248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7252 = relay.var("var_7252", dtype = "int32", shape = (9, 14, 10))#candidate|7252|(9, 14, 10)|var|int32
var_7253 = relay.var("var_7253", dtype = "int32", shape = (9, 14, 10))#candidate|7253|(9, 14, 10)|var|int32
bop_7254 = relay.logical_xor(var_7252.astype('int32'), relay.reshape(var_7253.astype('int32'), relay.shape_of(var_7252))) # shape=(9, 14, 10)
func_4282_call = mod.get_global_var('func_4282')
func_4286_call = mutated_mod.get_global_var('func_4286')
const_7264 = relay.const([3.368889,-4.497478,1.854048,-2.809852,-8.751666,1.845817,-6.049607,2.539407,2.739285,9.382031,2.830712,2.230254,-7.695839,-8.814828,3.274048,-3.073045,8.244575,7.265918,4.261748,6.922657,9.457526,-2.601637,-1.717455,-2.293542,7.490623,1.859072,-0.684204,-8.229235,-3.516118,-2.698441,-7.539097,9.088109,-4.138061,-2.991745,-0.323876,9.719942,-1.583146,4.727969,-5.573079,-0.242380,6.341323,-8.662945,-6.571796,-9.359942,8.160351,0.896176,2.992103,5.221099,0.891475,-2.020939,-9.100778,7.337036,9.133920,5.701340,-2.379206,6.312512,6.539166,4.669296,-7.229898,8.933171,0.325556,8.701003,0.427972,-9.106633,3.954015,-0.669395,-9.517852,-1.474833,5.841459,6.523591,-8.698479,7.756816,0.357571,0.633832,5.075301,1.169161,5.807686,8.722335,-5.649687,6.580977,-7.447511,4.663389,9.496274,-8.117858,2.388245,-1.213748,-9.571346,-2.800249,1.508176,0.398564,-8.106975,9.730085,-9.201173,-9.325416,-6.597082,-5.877533,1.563118,4.734271,3.550470,8.491686,-9.043062,-0.780208,-7.595897,-7.309696,7.474052,-0.007088,-2.687807,7.887152,-5.535033,3.066579,-0.278698,-2.513469,7.569177,-5.352826,9.816355,-4.174961,-9.144295,6.418683,1.206728,-8.316327,7.267675,-4.394065,-5.259502,-2.029391,5.494408,2.700180,5.735848,1.172863,9.220883,-4.405981,-5.360417,-8.872173,6.457923,9.186208,7.472151,2.156375,-9.415101,7.195483,-8.055802,9.694659,4.646922,1.066246,-0.955562,-2.171150,-6.830685,4.515002,7.455072,7.909409,6.233546,2.317981,-6.279160,1.464186,-6.639218,2.881098,6.472260,-3.701712,7.039115,0.163257,-3.691960,-1.695720,-9.433754,6.953645,8.036987,5.286540,9.701388,-2.699668,1.418382,-6.273854,-8.836338,-7.084328,2.821674,-3.718586,-5.926080,-3.048498,6.532949,-5.205793,-7.772363,6.650373,-6.707824,-6.134623,3.308739,-4.814047,2.420588,-5.527397,-1.681984,3.067394,0.556636,8.099301,0.562901,8.495768,-2.375960,7.669445,8.172659,-4.186409,4.830317,-3.430262,4.802617,4.417053,1.669210,-3.426588,0.099230,3.565548,-0.822355,-8.602805,5.015428,-4.734726,3.258687,-6.742497,8.569225,1.446106,-6.924945,1.337140,-2.433329,-2.982175,9.798333,2.385889,-3.811264,6.787360,8.411938,-8.074486,9.484547,-4.247213,-6.801105,-5.877348,-3.344539,-8.564284,1.621091,-9.818064,8.862101,2.118027,-1.450135,3.758693,-1.306572,6.025674,-7.255562,-6.860157,-8.087704,6.303074,1.885195,-8.051544,7.531660,-6.625222,6.134505,-0.627743,1.046690,3.401914,-1.402516,-6.816584,7.543904,5.770915,-1.449189,-4.891837,-2.346677,7.890906,9.046248,8.693317,3.163739,4.101363,9.780433,4.699398,7.707574,-9.961231,0.047990,-8.433178,-6.947826,-8.371720,0.844146,2.671374,-6.725727,-7.650301,3.980262,-6.484971,8.129852,0.692274,2.804980,-8.516414,0.815202,2.503865,3.848837,8.328516,3.526269,-9.088535,-3.257439,-9.979820,0.455669,-8.909380,8.484662,1.470717,-0.220793,1.322189,5.548806,2.842507,-6.114783,4.942550,-4.351273,3.081026,-8.016675,5.565673,2.106588,-1.912525,-9.136162,8.869763,9.390037,-2.381702,5.620313,-6.909516,3.564461,1.970087,-2.047161,-5.380145,-4.704030,-3.975844,2.400391,1.832850,1.180552,9.151893,0.471858,0.676329,3.660835,-5.411333,7.200975,3.491877,-5.935700,-7.427958,8.005554,-0.597001,-6.043637,2.166277,-6.435759,0.882402,-6.549116,3.201974,9.446962,-2.461605,-2.085321,-3.595878,2.778415,7.247434,-7.621153,-5.989722,-5.365332,1.250553,8.794099,-9.069792,-1.583490,-8.747190,9.199831,-2.638126,-3.848077,1.764029,0.178970,7.594120,-6.833372,6.720623,-3.903215,-7.455746,-0.850141,-7.607577,-0.076711,2.966201,-7.338722,3.993639,7.472562,-3.508493,0.140562,-3.501317,3.067350,4.607304,-0.438412,1.601926,3.829790,4.571228,8.492760,6.489537,4.832105,-6.340883,-3.287439,2.300765,9.379956,-5.227761,6.968985,-8.874135,-2.431348,-6.737327,-6.970506,6.178515,-8.156404,3.446578,-0.782889,4.933350,2.795349,6.423556,-1.507938,5.608459,2.636540,-4.565480,-6.986484,2.092882,-9.397422,-9.930350,0.102213,-3.035781,-5.597178,-0.535484,1.184830,-8.408807,1.524755,-0.830205,-6.991318,-2.380389,8.662921,1.409767,5.759175,-5.617366,-1.453181,-4.967469,3.467869,4.024262,-2.922446,-0.783830,-1.460099,-9.541664,0.188549,6.210735,-4.150068,1.535677,-5.915211,7.109257,4.832441,7.135661,-3.981715,-1.029219,0.611973,-8.894697,5.314164,7.763714,3.233499,3.495559,-5.882835,3.717746,-1.333684,9.252234,5.696732,-2.602827,-0.593947,-1.489261,0.491853,-6.115919,7.587445,-5.748269,-9.818777,-9.995803,7.246936,-1.425971,-4.710414,-3.890732,-1.738409,5.692082,7.966190,-2.280128,5.768473,-0.627333,7.557159,4.215364,2.833403,8.423093,6.431879,-5.732445,-3.772538,9.205015,-6.812609,6.790195,2.027407,-3.277521,9.459607,-0.270183,8.803663,9.972330,-4.411435,2.274037,8.725830,2.984403,-6.601902,0.698970,-9.570210,1.179385,6.120812,3.769712,5.668124,8.027149,-1.883875,-5.543538,-9.071120,5.902149,-6.318194,7.340056,9.929520,9.110329,-9.961690,-8.743803,2.879281,8.425450,1.722463,0.169422,-9.121631,7.363964,-6.714933,-9.405533,1.446650,7.473893,0.317422,5.729299,8.231491,-8.958416,-8.515135,-8.183511,6.006503,-8.463668,-5.592485,3.259209,-8.640676,-7.600668,-3.641611,9.490145,-4.750040,-8.496325,9.447518,-0.935220,-9.772165,-0.878597,-1.255461,-3.853375,-4.893802,-4.428697,-6.768065,3.144291,-7.896175,6.025622,9.002845,-2.018765,-3.741188,9.463488,2.416421,-4.885386,-1.799228,-3.399174,-0.402253,-6.661403,8.825198,1.985393,6.917779,-3.950342,-7.846620,-9.256274,-1.398920,3.276085,9.054595,2.446944,4.181220,-6.800257,-7.047778,-2.284811,1.910873,-1.136871,5.780102,-0.792886,-9.658402,-7.537677,8.454962,-3.198055,6.494146,-8.857102,-3.941274,7.277115,8.990644,-1.566234,-6.147680,-9.370086,5.419190,-6.153873,9.406528,1.407405,8.594526,-3.233854,2.584468,8.325209,2.632546,1.667910,2.233535,1.243341,0.334425,-0.724112,-5.563306,2.984121,1.484259,-7.318411,1.932667,0.507640,3.063472,0.241671,-9.681824,3.690018,-7.959534,-1.101255,-0.583913,-9.864423,0.066459,1.367268,-2.140496,8.178652,9.311981,-4.906229,-6.392571,3.362330,6.354467,-4.684266,0.445454,2.027925,-4.634575,6.175718,5.524046,-6.019291,6.537289,-0.092756,7.875990,2.042071,2.830756,6.453133,0.907980,8.303931,7.311391,3.708084,-5.637789,-6.383328,-7.222062,1.890460,7.093371,-9.251577,4.505644,-7.396910,-5.722155,7.459560,5.473016,8.350323,-7.003829,-3.792433,-9.490018,-5.933852,-3.971284,-1.308227,1.353707,6.112974,3.086325,1.678887,-4.596192,1.618261,5.072891,9.706783,3.154139,-9.225217,6.066003,4.659618,-2.581077,-8.839204,-9.543581,3.176567,-9.529167,6.280495,-6.294200,2.343074,-7.939902,1.941806,2.068229,9.301581,-3.616188,-7.823484,-2.580127,3.958513,-6.444707,8.219135,-9.793742,-2.507926,1.757780,3.700209,-0.834410,3.372406,1.884133,-0.181422,7.343574,-6.428297,3.810668,4.909604,-4.339318,-8.495744,8.694737,-9.079324,-1.663768,-4.373897,-4.410663,3.013783,-7.734421,9.144538,-4.766761,4.421271,7.762023,4.240545,-9.880829,-5.467593,6.949491,9.062602,8.809538,6.864406,-9.535629,3.090319,8.591448,2.253329,7.502384,1.514667,7.952511,7.849309,-2.083044,2.700309,-8.479009,-7.568944,8.996481,-2.783053,3.183263,-1.562680,0.439252,-0.127470,5.474874,1.503570,-6.463775,-0.969762,3.526643,2.537846,-5.708651,-7.798549,-7.949914,-5.261835,5.433333,-4.245888,-5.255097,-5.587895,8.172773,-1.183722,9.950043,0.568063,8.815778,7.240558,-5.877353,-0.702295,5.035097,3.611528,5.832933,4.693823,-6.461709,2.491009,5.729748,-2.833711,-1.428834,7.029655,-4.511506,-1.228695,-2.824371,-1.546870,-5.964423,6.043733,-1.466237,1.737272,-7.137899,-4.891002,5.714494,-9.626246,4.874653,0.776692,7.490455,4.682703,4.783612,6.729593,1.829991,-7.943876,3.731211,-2.533017,-3.412651,9.130798,-6.376799,2.663606,-8.111868,-1.145886,4.393461,3.925209,-7.424215,-0.161285,-9.804718,8.176707,-3.796008,0.113320,5.103426,5.331658,-9.727034,8.599289,-2.981027,-4.750680,-7.242503,-6.801314,-2.405356,-9.559663,2.434192,-2.874683,8.656182,4.053238,-1.915363,1.108468,-2.235072,7.277883,1.234307,-7.233565,-2.740947,-7.979873,8.135509,-6.182519,4.804351,4.656128,4.083221,-8.923874,5.615995,-3.132330,4.688273,-2.742588,-3.526008,-0.819907,-4.670878,1.267580,9.472400,3.940042,1.479601,-9.678114,-3.384223,2.585158,2.554092,-4.222238,8.277367,-5.478831,-6.984390,4.096213,9.322022,1.856961,-7.758502,-5.462768,-8.656208,-8.537514,5.539596,-2.314459,-5.672318,2.042335,-6.535969,6.988712,4.465759,-6.591899,-6.623738,-8.039227,2.006042,1.313855,4.512634,3.648470,8.246837,4.866149,-2.885855,-9.676876,6.858366,-9.619830,-0.666736,3.410330,-0.592642,3.785793,5.160597,-5.081079,1.595027,-1.992047,0.300035,9.542709,-4.422419,8.635596,-4.738411,9.654907,0.407739,0.822372,2.239915,0.066245,-2.883220,-7.404068,2.403725,-0.381945,-0.683898,5.789031,-8.204129,-0.463802,3.054425,7.052544,-1.409743,6.987361,6.996284,5.658410,8.888493,-2.013764,4.285697,-6.537046,8.987053,-4.610242,4.157407,6.677481,-1.602008,-9.999745,9.767360,4.139116,7.174263,4.360682,-9.718969,3.288532,-4.116968,6.106715,8.756505,-6.985349,7.987764,-5.084342,-7.883182,-1.273657,-9.916438,-9.946443,7.097742,7.806147,-1.874696,1.894303,8.439625,-0.005296,-8.569718,8.778759,1.810447,-2.558793,-7.645116,-3.799061,-4.513034,6.202644,6.300765,-1.977757,-4.201985,7.709908,-3.373763,3.405292,-1.730466,3.180279,0.314309,-2.265967,-5.802478,1.244891,6.947785,8.653469,9.792168,-8.429189,-9.083295,7.018394,-3.140993,2.824491,7.636937,-2.328923,2.573215,-3.616236,5.881496,2.619577,1.995677,-1.028313,-8.673898,-6.935971,8.874526,4.487127,9.436820,-6.679064,7.828528,-4.896319,-1.076449,-4.995533,3.655829,-6.336641,8.818777,-6.948141,9.285432,-6.419028,2.376110,2.440385,5.475357,-3.062040,7.815200,9.350425,7.611431,1.657319,-1.993837,8.856885,-7.069101,-1.171504,0.010741,-4.371319,-9.692165,4.881167,5.549537,-3.810622,8.109854,0.953121,4.820942,3.599090,-0.959002,-1.611665,5.369224,-5.512626,3.967757,6.727240,-7.760361,9.521946,-1.248171,-8.813050,6.011062,5.654065,2.226794,0.669667,6.521867,6.845667,1.784364,-1.564635,7.969984,-0.091514,-2.637457,-8.353699,8.363061,0.781599,-3.469242,0.193549,-8.412322,-6.476291,0.265621,-8.033300,-9.759093,9.000072,8.889944,-3.063470,-0.338481,4.900550,4.402169,2.403306,-1.113926,-8.259558,-5.109489,-0.004907,-6.516684,2.507674,7.697570,-2.995906,6.838445,4.032625,-4.226413,-2.396499,1.044736,5.350266,5.195614,1.903469,0.626192,-0.075377,-7.343084,-7.907479,5.186939,-1.502097,7.748326,-4.196471,-8.307673,2.038550,-4.325482,-4.004497,3.513208,-4.231112,-9.901385,-1.021600,7.723617,-5.403956,-6.644772,4.850278,-4.863667,-2.846763,-7.101769,-7.115204,-3.435978,0.978095,1.772423,-7.319832,0.564585,4.424583,7.573627,4.943394,-8.840106,-1.046593,-3.476934,-8.971670,7.102140,-6.997068,-6.417642,3.315678,-9.965271,4.728711,-1.922817,7.996499,-1.573858,7.021964,-8.818595,-5.306916,-5.160394,5.601960,-1.388209,6.563037,-7.968293,-2.335301,8.412203,-9.388138,-2.421371,6.502736,4.931742,6.852838,-6.671286,9.758687,4.962512,1.574821,-9.638037,9.557556,9.678858,4.246416,-7.284728,-1.445673,2.996927,-2.446007,-2.148275,-8.814795,-6.014712,5.716041,-7.693922,8.517851,-8.717032,-5.005509,-5.230550,-4.619017,-4.545292,7.901831,5.929651,-0.551035,-1.041275,-3.152632,4.676462,1.427727,-4.426397,-9.502634,1.977755,9.218299,-6.546470,8.567421,6.551187,-7.895931,7.149213,-1.484346,9.907140,1.821023,4.894426,-0.275788,-5.888199,-7.294841,-1.210045,1.528420,4.848601,-4.813408,-6.518219,-3.162487,3.597506,-4.953245,-6.764757,9.080164,5.417699,-5.295629,-7.346659,9.005264,-5.061311,-5.197077,-7.060766,-3.235078,-3.520853,-7.279988,-1.039096,-6.027804,6.214431,-1.865940,7.167515,-0.774895,-6.016923,-3.477319,6.687958,5.154658,7.072577,0.861376,-9.048815,3.567195,-5.361892,3.488360,-2.761280,-2.490991,-1.452747,-2.363159,-4.198442,4.186158,4.026707,9.359390,7.818436,-6.297850,-8.384458,4.533367,3.867462,1.234495,-1.233190,5.403745,-6.458561,-0.736795,-6.195892,9.492856,5.386584,-8.723820,-5.648310,-6.977230,-7.691615,-5.061626,-8.866453,1.145819,7.230137,2.766594,-0.252670,-3.234027,-6.129320,6.495093,3.243254,0.991893,8.920114,4.072268,6.828381,-8.037120,-0.467699,8.173814,-2.094636,6.663442,3.418170,8.943857,8.834065,4.732519,-0.062094,-5.166858,4.373840,6.881401,3.220807,-3.711585,-8.264067,1.662863,5.419874,0.841822,7.971382,6.566774,3.318350,-7.404713,0.793442,-2.546896,7.912515,6.052450,-0.020786,5.165765,-7.964187,-2.185084,-1.492575,2.104997,-4.986850,5.741736,4.147758,8.454525,6.507195,4.203427,8.600314,7.370237,6.846201,3.401519,8.084886,4.197300,-3.005736,-3.589113,2.936531,-4.809891,-6.466613,-4.558588,3.338560,-8.989047,5.431586,8.788396,7.781215,6.143500,8.881131,-7.350734,-7.145576,-2.068948,2.201424,8.613340,0.787098,1.814883,-5.650736,0.582858,9.523681,-9.101063,-1.552771,6.897037,-0.382963,-7.909490,9.248371,-9.294142,-8.963267,-7.609456,3.033396,0.094380,8.089728,-7.039655,-4.679716,1.081948,0.129284,-3.116078,7.305112,4.213725,8.258894,-8.837071,-5.892883,-8.882257,6.482154,0.733620,-2.452189,9.894075,6.427502,4.159917,-0.950867,1.051965,5.429777,5.580424,4.506793,-5.582085,-3.744498,2.714622,-4.150516,4.099903,-8.499869,-2.281916,5.496055,-2.837546,-4.705817,-6.769755,1.834778,-8.137395,-9.933445,2.957730,3.110689,-2.412684,-1.510150,-8.943450,8.635452,8.320586,-7.488345,-7.023468,6.404629,-0.267264,4.314849,-7.643192,-3.013664,2.528582,-5.855967,-7.960280,-7.842949,4.099230,-3.618606,2.931130,-3.385680,0.206943,3.631173,-4.895885,5.328396,-4.100526,-5.022422,0.350455,9.734007,0.110366,9.156749,5.283350,-2.847725,7.190560,6.337885,-5.654896,6.314724,-1.619253,9.958569,1.816481,-6.094901,3.950574,2.412440,0.447841,4.296829,-3.543773,3.473082,2.564654,3.696070,-7.332083,7.510415,-1.533672,6.031307,4.953589,3.470200,0.719754,-4.145220,-9.555358,0.178569,6.675226,-9.947710,7.255791,5.546432,2.647080,4.667242,7.704019,-8.781888,6.956093,4.146118,0.811579,-4.746958,-2.635122,7.246014,-1.188735,-0.142100,-1.187723,9.575364,-1.064029,-4.252081,5.834321,-1.904702,-2.344324,-2.110319,-3.655440,0.009677,9.376591,-4.917758,-7.452384,-3.587209,-5.015885,-4.322381,-3.732943,-5.703644,5.637836,-4.887630,8.673268,6.372726,-7.257616,8.083846,8.222273,-2.142694,-2.147929,-7.703860,-9.165715,1.624647,-0.033016,1.905570,-5.364142,5.771843,-0.590858,-1.403762,-7.505609,-5.008716,-1.740690,0.304473,-5.773631,-1.158650,-9.541571,4.800794,0.653060,7.043946,1.277405,-7.706930,4.713147,8.561991,-8.487138,0.156145,7.878673,8.014214,9.797427,-5.479373,-4.341221,8.000047,3.513254,1.650178,9.081142,-0.610149,-1.662340,-7.815067,3.077897,8.312951,-3.421067,-3.533597,-4.351210,3.193141,0.428176,8.352380,-7.153011,-8.618808,-9.419362,-2.630200,9.349674,-7.813546,-5.216975,9.077640,-9.214170,9.005760,3.273146,-5.080622,6.861534,3.937815,2.637341,-6.201689,6.506476,-7.532221,-3.243168,-3.761264,2.142974,5.081108,4.012652,8.696447,-5.336125,-4.768731,9.435461,2.408312,-8.187320,7.940162,-6.491939,0.529129,-6.107044,2.052454,9.406390,-9.784071,-5.195391,-0.425183,-5.153503,5.850020,-2.173510,-7.000470,-4.083388,-5.983520,5.346859,7.391092,4.354278,8.574668,-3.915397,-7.436391,-8.327732,-6.292518,1.130526,6.548570,5.707999,-4.709753,-0.238604,8.271854,-5.393327], dtype = "float64")#candidate|7264|(1568,)|const|float64
call_7263 = relay.TupleGetItem(func_4282_call(relay.reshape(const_7264.astype('float64'), [14, 7, 16]), relay.reshape(const_7264.astype('float32'), [14, 7, 16]), relay.reshape(const_7264.astype('float64'), [14, 7, 16]), ), 0)
call_7265 = relay.TupleGetItem(func_4286_call(relay.reshape(const_7264.astype('float64'), [14, 7, 16]), relay.reshape(const_7264.astype('float32'), [14, 7, 16]), relay.reshape(const_7264.astype('float64'), [14, 7, 16]), ), 0)
func_1391_call = mod.get_global_var('func_1391')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_7268 = func_1391_call()
call_7269 = func_1391_call()
output = relay.Tuple([bop_7254,call_7263,const_7264,call_7268,])
output2 = relay.Tuple([bop_7254,call_7265,const_7264,call_7269,])
func_7273 = relay.Function([var_7252,var_7253,], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
var_7274 = relay.var("var_7274", dtype = "int32", shape = (9, 14, 10))#candidate|7274|(9, 14, 10)|var|int32
var_7275 = relay.var("var_7275", dtype = "int32", shape = (9, 14, 10))#candidate|7275|(9, 14, 10)|var|int32
output = func_7273(var_7274,var_7275,)
func_7276 = relay.Function([var_7274,var_7275,], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7280 = relay.var("var_7280", dtype = "float64", shape = (14, 8, 9))#candidate|7280|(14, 8, 9)|var|float64
var_7281 = relay.var("var_7281", dtype = "float64", shape = (14, 8, 9))#candidate|7281|(14, 8, 9)|var|float64
bop_7282 = relay.floor_mod(var_7280.astype('float64'), relay.reshape(var_7281.astype('float64'), relay.shape_of(var_7280))) # shape=(14, 8, 9)
output = relay.Tuple([bop_7282,])
output2 = relay.Tuple([bop_7282,])
func_7288 = relay.Function([var_7280,var_7281,], output)
mod['func_7288'] = func_7288
mod = relay.transform.InferType()(mod)
var_7289 = relay.var("var_7289", dtype = "float64", shape = (14, 8, 9))#candidate|7289|(14, 8, 9)|var|float64
var_7290 = relay.var("var_7290", dtype = "float64", shape = (14, 8, 9))#candidate|7290|(14, 8, 9)|var|float64
output = func_7288(var_7289,var_7290,)
func_7291 = relay.Function([var_7289,var_7290,], output)
mutated_mod['func_7291'] = func_7291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4999_call = mod.get_global_var('func_4999')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_7343 = func_4999_call()
call_7344 = func_4999_call()
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
var_7351 = relay.var("var_7351", dtype = "float64", shape = (338,))#candidate|7351|(338,)|var|float64
call_7350 = relay.TupleGetItem(func_2779_call(relay.reshape(var_7351.astype('float64'), [13, 2, 13])), 1)
call_7352 = relay.TupleGetItem(func_2781_call(relay.reshape(var_7351.astype('float64'), [13, 2, 13])), 1)
output = relay.Tuple([call_7343,call_7350,var_7351,])
output2 = relay.Tuple([call_7344,call_7352,var_7351,])
func_7365 = relay.Function([var_7351,], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7366 = relay.var("var_7366", dtype = "float64", shape = (338,))#candidate|7366|(338,)|var|float64
func_7365_call = mutated_mod.get_global_var('func_7365')
call_7367 = func_7365_call(var_7366)
output = call_7367
func_7368 = relay.Function([var_7366], output)
mutated_mod['func_7368'] = func_7368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_7393 = relay.TupleGetItem(func_4540_call(), 0)
call_7394 = relay.TupleGetItem(func_4542_call(), 0)
output = relay.Tuple([call_7393,])
output2 = relay.Tuple([call_7394,])
func_7395 = relay.Function([], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
output = func_7395()
func_7396 = relay.Function([], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_7443 = relay.TupleGetItem(func_4540_call(), 0)
call_7444 = relay.TupleGetItem(func_4542_call(), 0)
func_5600_call = mod.get_global_var('func_5600')
func_5601_call = mutated_mod.get_global_var('func_5601')
call_7463 = relay.TupleGetItem(func_5600_call(), 0)
call_7464 = relay.TupleGetItem(func_5601_call(), 0)
func_4282_call = mod.get_global_var('func_4282')
func_4286_call = mutated_mod.get_global_var('func_4286')
var_7474 = relay.var("var_7474", dtype = "float64", shape = (1568,))#candidate|7474|(1568,)|var|float64
call_7473 = relay.TupleGetItem(func_4282_call(relay.reshape(var_7474.astype('float64'), [14, 7, 16]), relay.reshape(var_7474.astype('float32'), [14, 7, 16]), relay.reshape(var_7474.astype('float64'), [14, 7, 16]), ), 1)
call_7475 = relay.TupleGetItem(func_4286_call(relay.reshape(var_7474.astype('float64'), [14, 7, 16]), relay.reshape(var_7474.astype('float32'), [14, 7, 16]), relay.reshape(var_7474.astype('float64'), [14, 7, 16]), ), 1)
uop_7496 = relay.sqrt(call_7473.astype('float64')) # shape=(14, 7, 16)
uop_7498 = relay.sqrt(call_7475.astype('float64')) # shape=(14, 7, 16)
func_6988_call = mod.get_global_var('func_6988')
func_6991_call = mutated_mod.get_global_var('func_6991')
var_7505 = relay.var("var_7505", dtype = "float64", shape = (26, 13))#candidate|7505|(26, 13)|var|float64
call_7504 = relay.TupleGetItem(func_6988_call(relay.reshape(var_7505.astype('float64'), [13, 2, 13])), 0)
call_7506 = relay.TupleGetItem(func_6991_call(relay.reshape(var_7505.astype('float64'), [13, 2, 13])), 0)
output = relay.Tuple([call_7443,call_7463,var_7474,uop_7496,call_7504,var_7505,])
output2 = relay.Tuple([call_7444,call_7464,var_7474,uop_7498,call_7506,var_7505,])
func_7510 = relay.Function([var_7474,var_7505,], output)
mod['func_7510'] = func_7510
mod = relay.transform.InferType()(mod)
var_7511 = relay.var("var_7511", dtype = "float64", shape = (1568,))#candidate|7511|(1568,)|var|float64
var_7512 = relay.var("var_7512", dtype = "float64", shape = (26, 13))#candidate|7512|(26, 13)|var|float64
output = func_7510(var_7511,var_7512,)
func_7513 = relay.Function([var_7511,var_7512,], output)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6629_call = mod.get_global_var('func_6629')
func_6630_call = mutated_mod.get_global_var('func_6630')
call_7541 = relay.TupleGetItem(func_6629_call(), 0)
call_7542 = relay.TupleGetItem(func_6630_call(), 0)
func_4082_call = mod.get_global_var('func_4082')
func_4086_call = mutated_mod.get_global_var('func_4086')
var_7559 = relay.var("var_7559", dtype = "float32", shape = (375,))#candidate|7559|(375,)|var|float32
const_7560 = relay.const([6,-4,8,9,-4,1,-4,8,-6,-4,-7,-8,-2,-4,2,2,7,-5,1,-6,8,6,2,9,-4,-10,4,5,9,-10,7,8,-9,2,10,6,7,-2,-5,-8,4,9,-8,-3,6,-5,-5,-8,8,6,-7,-8,4,5,10,8,3,-1,-4,5,8,-2,5,-9,9,2,10,10,9,5,1,3,-3,-5,9,-6,2,-1,-5,1,-8,9,5,3,-7,3,-4,-9,1,5,-6,6,-8,-6,-1,-8,-1,8,8,-8,-10,10,7,2,-5,-7,-7,-8,2,-9,-10,2,5,7,-9,-6,-6,-4,8,-1,2,-2,1,-5,4,5,-2,5,-7,1,-7,-7,-3,-8,-7,-4,4,-10,-5,-9,-3,-3,1,2,-10,4,-10,-2,9,6,8,-7,-5,9,-3,1,3,3,-3,10,8,3,-4,-2,5,-1,7,5,-4,-2,-3,5,6,-9,-2,2,-2,1,10,-9,3,-7,-7,-10,1,7,4,1,9,7,-9,-3,-4,7,8,-8,-5,1,1,2,-5,5,1,7,4,-3,-5,-3,3,-2,5,3,-6,1,-6,-7,-2,-8,10,4,3,6,8,-6,9,-1,5,6,6,9,10,3,-10,-6,-10,4,-10,1,4,-8,-3,-9,2,-2,-3,-2,-6,-7,-8,9,-3,-1,-5,-2,8,-2,-10,-1,-6,-1,-1,4,-10,6,-1,-7,-9,-1,1,-3,-5,1,-8,8,-3,-3,-3,-6,7,2,8,-4,6,-1,-1,7,1,-3,-10,3,1,-2,4,-7,9,-8,-7,-1,-10,-3,9,10,7,9,4,3,-1,-2,-10,-5,-8,-3,9,-1,8,-1,3,-7,3,-8,-9,4,5,-4,-5,-3,5,-2,-1,3,-7,6,-4,-10,10,-7,10,-8,7,1,2,9,-1,-4,-3,4,1,-2,5,-3,-2,4,2,-9,4,3,4,-5,-10,-7,-6,-5,-3,2,-10,4,3,-6,-10,4,-2,1,-6,1,7,-2,-3,8,5,5,-4,7,-9,-2,7,4,-10,7,3,-5,10,-1,-6,8,-10,-7,5,2,9,2,10,5,-1,8,-2,4,2,-4,6,-10,-6,3,-2,-5,8,7,5,8,6,-2,10,-10,-1,1,-4,-4,-9,-2,-1,-4,-6,7,-2,-9,-10,7,-7,4,-9,5,-9,6,7,3,-6,-9,7,-6,-10,9,8,-1,3,2,4,7,-10,3,2,-7,2,-3,-9,-10,-5,-10,5,7,9,-9,-9,-6,9,6,5,10,-7,-6,1,5,5,7,7,5,3,10,-10,1,-8,-1,-8,10,-5,2,-2,-1,4,-6,-4,-8,-7,-1,5,-8,-8,-7,1,2,6,1,-4,-5,-2,9,4,-5,6,-9,9,-5,6,3,-9,-3,-10,-3,9,-3,10,7,9,-4,9,7,1,-4,2,-4,4,-6,-2,-1,8,1,5,-2,3,1,-1,9,8,7,-1,-3,-8,1,9,-2,5,-4,5,-5,4,-10,2,-7,3,2,-6,-10,5,8,-3,-10,-6,-9,10,9,9,1,9,6,3,-7,-5,3,10,4,2,4,-8,-8,6,-4,-7,10,2,-7,4,-4,-10,-10,8,6,8,9,2,6,-5,6,-5,7,2,4,5,-6,-7,-9,-10,9,4,6,5,3,2,3,6,9,-1,4,5,5,6,-8,-7,-6,5,7,6,2,-1,-9,3,7,-3,2,-10,-1,-10,-3,-8,-10,-3,-4,10,8,1,2,-5,9,-7,9,9,4,-1,-8,7,1,-8,-8,-3,2,4,-9,1,1,1,7,-10,-1,7,-9,1,2,-6,-8,9,-2,-3,3,9,4,-4,1,-10,-4,-4,-1,2,2,6,-7,-1,-7,8,-8,4,6,-3,-1,-9,-1,-7,-8,8,8,-10,-10,-2,5,6,6,5,7,8,2,2,-10,6,9,8,1,-10,10,9,-3,-9,7,10,-4,2,6,7,-3,4,10,-9,9,-1,3,-4,-5,5,7,-3,-4], dtype = "uint32")#candidate|7560|(756,)|const|uint32
call_7558 = relay.TupleGetItem(func_4082_call(relay.reshape(var_7559.astype('float32'), [375,]), relay.reshape(const_7560.astype('uint32'), [756,]), ), 6)
call_7561 = relay.TupleGetItem(func_4086_call(relay.reshape(var_7559.astype('float32'), [375,]), relay.reshape(const_7560.astype('uint32'), [756,]), ), 6)
uop_7563 = relay.asin(var_7559.astype('float64')) # shape=(375,)
output = relay.Tuple([call_7541,call_7558,const_7560,uop_7563,])
output2 = relay.Tuple([call_7542,call_7561,const_7560,uop_7563,])
func_7566 = relay.Function([var_7559,], output)
mod['func_7566'] = func_7566
mod = relay.transform.InferType()(mod)
var_7567 = relay.var("var_7567", dtype = "float32", shape = (375,))#candidate|7567|(375,)|var|float32
output = func_7566(var_7567)
func_7568 = relay.Function([var_7567], output)
mutated_mod['func_7568'] = func_7568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6849_call = mod.get_global_var('func_6849')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_7587 = relay.TupleGetItem(func_6849_call(), 0)
call_7588 = relay.TupleGetItem(func_6851_call(), 0)
func_3680_call = mod.get_global_var('func_3680')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_7589 = relay.TupleGetItem(func_3680_call(), 2)
call_7590 = relay.TupleGetItem(func_3682_call(), 2)
output = relay.Tuple([call_7587,call_7589,])
output2 = relay.Tuple([call_7588,call_7590,])
func_7594 = relay.Function([], output)
mod['func_7594'] = func_7594
mod = relay.transform.InferType()(mod)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7594_call = mutated_mod.get_global_var('func_7594')
call_7595 = func_7594_call()
output = call_7595
func_7596 = relay.Function([], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_7752 = relay.TupleGetItem(func_4540_call(), 0)
call_7753 = relay.TupleGetItem(func_4542_call(), 0)
output = relay.Tuple([call_7752,])
output2 = relay.Tuple([call_7753,])
func_7757 = relay.Function([], output)
mod['func_7757'] = func_7757
mod = relay.transform.InferType()(mod)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7757_call = mutated_mod.get_global_var('func_7757')
call_7758 = func_7757_call()
output = call_7758
func_7759 = relay.Function([], output)
mutated_mod['func_7759'] = func_7759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5406_call = mod.get_global_var('func_5406')
func_5407_call = mutated_mod.get_global_var('func_5407')
call_7796 = relay.TupleGetItem(func_5406_call(), 1)
call_7797 = relay.TupleGetItem(func_5407_call(), 1)
output = call_7796
output2 = call_7797
func_7814 = relay.Function([], output)
mod['func_7814'] = func_7814
mod = relay.transform.InferType()(mod)
output = func_7814()
func_7815 = relay.Function([], output)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4523_call = mod.get_global_var('func_4523')
func_4525_call = mutated_mod.get_global_var('func_4525')
call_7895 = relay.TupleGetItem(func_4523_call(), 0)
call_7896 = relay.TupleGetItem(func_4525_call(), 0)
output = call_7895
output2 = call_7896
func_7901 = relay.Function([], output)
mod['func_7901'] = func_7901
mod = relay.transform.InferType()(mod)
mutated_mod['func_7901'] = func_7901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7901_call = mutated_mod.get_global_var('func_7901')
call_7902 = func_7901_call()
output = call_7902
func_7903 = relay.Function([], output)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_7915 = relay.TupleGetItem(func_3840_call(), 1)
call_7916 = relay.TupleGetItem(func_3842_call(), 1)
output = call_7915
output2 = call_7916
func_7919 = relay.Function([], output)
mod['func_7919'] = func_7919
mod = relay.transform.InferType()(mod)
mutated_mod['func_7919'] = func_7919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7919_call = mutated_mod.get_global_var('func_7919')
call_7920 = func_7919_call()
output = call_7920
func_7921 = relay.Function([], output)
mutated_mod['func_7921'] = func_7921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7946 = relay.var("var_7946", dtype = "float32", shape = (16, 11, 8))#candidate|7946|(16, 11, 8)|var|float32
uop_7947 = relay.asin(var_7946.astype('float32')) # shape=(16, 11, 8)
output = relay.Tuple([uop_7947,])
output2 = relay.Tuple([uop_7947,])
func_7986 = relay.Function([var_7946,], output)
mod['func_7986'] = func_7986
mod = relay.transform.InferType()(mod)
var_7987 = relay.var("var_7987", dtype = "float32", shape = (16, 11, 8))#candidate|7987|(16, 11, 8)|var|float32
output = func_7986(var_7987)
func_7988 = relay.Function([var_7987], output)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4114_call = mutated_mod.get_global_var('func_4114')
call_7995 = relay.TupleGetItem(func_4112_call(), 1)
call_7996 = relay.TupleGetItem(func_4114_call(), 1)
func_1897_call = mod.get_global_var('func_1897')
func_1902_call = mutated_mod.get_global_var('func_1902')
const_8014 = relay.const([False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True], dtype = "bool")#candidate|8014|(312,)|const|bool
var_8015 = relay.var("var_8015", dtype = "float32", shape = (196,))#candidate|8015|(196,)|var|float32
var_8016 = relay.var("var_8016", dtype = "float32", shape = (1, 375))#candidate|8016|(1, 375)|var|float32
call_8013 = relay.TupleGetItem(func_1897_call(relay.reshape(const_8014.astype('bool'), [312,]), relay.reshape(var_8015.astype('float32'), [196,]), relay.reshape(var_8016.astype('float32'), [125, 3]), ), 1)
call_8017 = relay.TupleGetItem(func_1902_call(relay.reshape(const_8014.astype('bool'), [312,]), relay.reshape(var_8015.astype('float32'), [196,]), relay.reshape(var_8016.astype('float32'), [125, 3]), ), 1)
uop_8022 = relay.rsqrt(var_8016.astype('float64')) # shape=(1, 375)
bop_8024 = relay.subtract(var_8016.astype('int32'), relay.reshape(uop_8022.astype('int32'), relay.shape_of(var_8016))) # shape=(1, 375)
output = relay.Tuple([call_7995,call_8013,const_8014,var_8015,bop_8024,])
output2 = relay.Tuple([call_7996,call_8017,const_8014,var_8015,bop_8024,])
F = relay.Function([var_8015,var_8016,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8015,var_8016,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

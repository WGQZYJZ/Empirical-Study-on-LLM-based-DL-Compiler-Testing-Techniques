==========mod==========
#[version = "0.0.5"]
def @func_921() -> (Tensor[(1, 15, 8), float64],) {
  %0 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  (%0,)
}

def @func_2765() -> Tensor[(?, 15, 8), int64] {
  %1 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %2 = %1.0;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %4 = cosh(%3) /* ty=Tensor[(1, 15, 8), float32] */;
  %5 = cast(%2, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%7, %8) /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_2827(%var_2811: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(4, 15, 8), float32], Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
  %9 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %12 = reshape(%10, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %13 = reshape(%11, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %14 = @func_1803(%12, %13) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) */;
  %15 = cast(%var_2811, dtype="float64") /* ty=Tensor[(480), float64] */;
  %16 = reshape(%15, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
  %17 = @func_1030(%16) /* ty=(Tensor[(4, 15, 8), float32],) */;
  %18 = %9.0;
  %19 = %14.1;
  %20 = %17.0;
  %21 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(84), uint8] */, %20, %var_2811, %21)
}

def @func_1803(%var_1755: Tensor[(2, 3, 14), uint8], %var_1756: Tensor[(2, 3, 14), uint8]) -> (Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) {
  %22 = cast(%var_1756, dtype="uint8") /* ty=Tensor[(2, 3, 14), uint8] */;
  %23 = shape_of(%var_1755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_1755, dtype="uint8") /* ty=Tensor[(2, 3, 14), uint8] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %26 = bitwise_and(%24, %25) /* ty=Tensor[(2, 3, 14), uint8] */;
  %27 = cast(%26, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %28 = shape_of(%var_1756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_1756, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %31 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %33 = power(%29, %30) /* ty=Tensor[(2, 3, 14), float64] */;
  %34 = acos(%32) /* ty=Tensor[(1, 15, 8), float64] */;
  (%33, %34)
}

def @func_2887() -> (Tensor[(1, 15, 8), float64],) {
  %35 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %36 = %35.0;
  (%36,)
}

def @func_599() -> Tensor[(1, 15, 8), float64] {
  %37 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %37.0
}

def @func_2866() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %38 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %39 = %38.0;
  %40 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
  (%39, %40)
}

def @func_885(%var_859: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) {
  %41 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %42 = cast(%41, dtype="uint32") /* ty=Tensor[(1, 15, 8), uint32] */;
  %43 = cast(%var_859, dtype="uint32") /* ty=Tensor[(5, 15, 8), uint32] */;
  %44 = cast(%41, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(143, 6), float32] */, dtype="float32") /* ty=Tensor[(143, 6), float32] */;
  %46 = reshape(%45, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
  %47 = @func_711(%46) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
  %48 = maximum(%42, %43) /* ty=Tensor[(5, 15, 8), uint32] */;
  %49 = rsqrt(%44) /* ty=Tensor[(1, 15, 8), float64] */;
  %50 = %47.1;
  (%48, %49, %50, meta[relay.Constant][1] /* ty=Tensor[(143, 6), float32] */)
}

def @func_2480(%var_2460: Tensor[(3, 1, 7), float32], %var_2469: uint8) -> (Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) {
  %51 = cast(%var_2460, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
  %52 = cast(%var_2469, dtype="uint8") /* ty=uint8 */;
  %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 2475), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2475), uint8] */;
  %54 = reshape(%52, newshape=[]) /* ty=uint8 */;
  %55 = reshape(%53, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %56 = acos(%51) /* ty=Tensor[(3, 1, 7), float32] */;
  %57 = @func_949(%54, %55) /* ty=Tensor[(11, 15, 15), uint8] */;
  (%56, %57, %var_2469, meta[relay.Constant][2] /* ty=Tensor[(1, 2475), uint8] */)
}

def @func_3684() -> Tensor[(8, 11, 10), bool] {
  %58 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
  %59 = %58.0;
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 11, 10), float64] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%62, %63) /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4252(%var_4235: Tensor[(1, 6, 1), float32]) -> (Tensor[(1, 6, 1), float32],) {
  %64 = cast(%var_4235, dtype="float32") /* ty=Tensor[(1, 6, 1), float32] */;
  %65 = rsqrt(%64) /* ty=Tensor[(1, 6, 1), float32] */;
  (%65,)
}

def @func_3542() -> (Tensor[(1, 15, 8), float32], Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float32]) {
  %66 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %67 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %68 = cast(%67, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %69 = %66.0;
  %70 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
  %71 = exp(%68) /* ty=Tensor[(1, 15, 8), float32] */;
  (%69, %70, %71)
}

def @func_2666() -> (Tensor[(1, 15, 8), float64],) {
  %72 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %73 = %72.0;
  (%73,)
}

def @func_4861(%var_4818: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64]) {
  %74 = cast(%var_4818, dtype="float64") /* ty=Tensor[(600), float64] */;
  %75 = reshape(%74, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %76 = @func_1491(%75) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) */;
  %77 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %78 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
  %79 = %76.0;
  %80 = %77.0;
  (%78, %79, %var_4818, %80)
}

def @func_4150() -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %81 = @func_3666() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) */;
  %82 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %83 = @func_3112() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %84 = %83.1;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %86 = %81.0;
  %87 = %82.0;
  %88 = cos(%85) /* ty=Tensor[(1, 15, 8), float64] */;
  (%86, %87, %88)
}

def @func_2585() -> (Tensor[(1, 15, 8), float64],) {
  %89 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %90 = %89.1;
  (%90,)
}

def @func_4991() -> (Tensor[(1, 15, 8), float64],) {
  %91 = @func_4004() /* ty=(Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) */;
  %92 = %91.1;
  (%92,)
}

def @func_2185(%var_2133: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) {
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(65, 6), float32] */, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
  %94 = cast(%var_2133, dtype="int16") /* ty=Tensor[(48), int16] */;
  %95 = reshape(%93, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
  %96 = reshape(%94, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %97 = @func_203(%95, %96) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
  %98 = cast(%var_2133, dtype="int16") /* ty=Tensor[(48), int16] */;
  %99 = reshape(%98, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %100 = @func_940(%99) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
  %101 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
  %102 = %101.1;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %104 = asin(%103) /* ty=Tensor[(1, 15, 8), float64] */;
  %105 = cast(%104, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(9, 15, 8), bool] */;
  %107 = greater(%105, %106) /* ty=Tensor[(9, 15, 8), bool] */;
  %108 = cast(%107, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
  %109 = cast(%104, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %110 = bitwise_or(%108, %109) /* ty=Tensor[(9, 15, 8), int64] */;
  %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 15, 8), float64] */, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %115 = minimum(%113, %114) /* ty=Tensor[(9, 15, 8), uint16] */;
  %116 = cast(%104, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %117 = cast(%115, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
  %118 = %97.4;
  %119 = %100.3;
  %120 = mod(%116, %117) /* ty=Tensor[(9, 15, 8), float64] */;
  (%118, meta[relay.Constant][4] /* ty=Tensor[(65, 6), float32] */, %var_2133, %119, %120)
}

def @func_4488() -> Tensor[(?, 15, 8), float32] {
  %121 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %122 = %121.0;
  %123 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %124 = %123.0;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %126 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%122, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%127, %128) /* ty=Tensor[(?, 15, 8), float32] */
}

def @func_3450() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %129 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %130 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %131 = %129.1;
  (%130, %131)
}

def @func_711(%var_694: Tensor[(13, 11, 6), float32]) -> (Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
  %132 = cast(%var_694, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
  %133 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(13, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %136 = floor_divide(%134, %135) /* ty=Tensor[(13, 11, 6), float32] */;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  %138 = cast(meta[relay.Constant][7] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %140 = reshape(%138, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %141 = reshape(%139, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %142 = sin(%137) /* ty=Tensor[(13, 11, 6), float64] */;
  %143 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %144 = @func_54(%140, %141) /* ty=Tensor[(3, 16), int16] */;
  (%142, %143, %144, meta[relay.Constant][7] /* ty=Tensor[(48), int16] */)
}

def @func_1573(%var_1506: Tensor[(6, 2, 8), int64], %var_1507: Tensor[(6, 2, 8), int64], %var_1537: Tensor[(390), float32], %var_1555: Tensor[(2475), uint8]) -> (Tensor[(6, 2, 8), int64], Tensor[(3, 16), int16], Tensor[(840), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(6, 2, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(2475), uint8], Tensor[(6, 2, 8), float32]) {
  %145 = cast(%var_1507, dtype="int64") /* ty=Tensor[(6, 2, 8), int64] */;
  %146 = shape_of(%var_1506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%var_1506, dtype="int64") /* ty=Tensor[(6, 2, 8), int64] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %149 = cast(meta[relay.Constant][8] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %150 = cast(%var_1537, dtype="float32") /* ty=Tensor[(390), float32] */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %152 = cast(%var_1537, dtype="float32") /* ty=Tensor[(390), float32] */;
  %153 = reshape(%149, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %154 = reshape(%150, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %155 = reshape(%151, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %156 = reshape(%152, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %157 = @func_795(%153, %154, %155, %156) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) */;
  %158 = cast(%var_1506, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %159 = atan(%158) /* ty=Tensor[(6, 2, 8), float64] */;
  %160 = cast(%var_1506, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %164 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %165 = cast(%var_1555, dtype="uint8") /* ty=Tensor[(2475), uint8] */;
  %166 = reshape(%164, newshape=[]) /* ty=uint8 */;
  %167 = reshape(%165, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %168 = cast(%159, dtype="float32") /* ty=Tensor[(6, 2, 8), float32] */;
  %169 = left_shift(%147, %148) /* ty=Tensor[(6, 2, 8), int64] */;
  %170 = %157.5;
  %171 = greater(%162, %163) /* ty=Tensor[(6, 2, 8), bool] */;
  %172 = @func_949(%166, %167) /* ty=Tensor[(11, 15, 15), uint8] */;
  %173 = log(%168) /* ty=Tensor[(6, 2, 8), float32] */;
  (%169, %170, meta[relay.Constant][8] /* ty=Tensor[(840), float32] */, %var_1537, meta[relay.Constant][9] /* ty=Tensor[(48), int16] */, %171, %172, meta[relay.Constant][10] /* ty=uint8 */, %var_1555, %173)
}

def @func_1430(%var_1416: Tensor[(3, 9, 11), float64]) -> Tensor[(3, 9, 11), float32] {
  %174 = cast(%var_1416, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %175 = acos(%174) /* ty=Tensor[(3, 9, 11), float64] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(3, 9, 11), float32] */;
  acosh(%176) /* ty=Tensor[(3, 9, 11), float32] */
}

def @func_2352(%var_2331: uint16, %var_2332: Tensor[(11, 4, 1), uint16]) -> Tensor[(11, 4, 1), bool] {
  %177 = cast(%var_2331, dtype="bool") /* ty=bool */;
  %178 = cast(%var_2332, dtype="bool") /* ty=Tensor[(11, 4, 1), bool] */;
  less(%177, %178) /* ty=Tensor[(11, 4, 1), bool] */
}

def @func_836() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %179 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %180 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %181 = %179.0;
  (%180, %181)
}

def @func_4594() -> (Tensor[(1, 15, 8), float32],) {
  %182 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %183 = %182.0;
  (%183,)
}

def @func_746(%var_717: Tensor[(2, 2, 6), float32]) -> (Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) {
  %184 = cast(%var_717, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %185 = log10(%184) /* ty=Tensor[(2, 2, 6), float32] */;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %187 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %188 = log(%186) /* ty=Tensor[(2, 2, 6), float32] */;
  %189 = %187.0;
  (%188, %189)
}

def @func_2044(%var_1992: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), bool], Tensor[(12, 15, 8), int64], Tensor[(12, 15, 8), float64]) {
  %190 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %191 = %190.0;
  %192 = cast(%191, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %193 = cast(%var_1992, dtype="bool") /* ty=Tensor[(12, 15, 8), bool] */;
  %194 = equal(%192, %193) /* ty=Tensor[(12, 15, 8), bool] */;
  %195 = cast(%194, dtype="bool") /* ty=Tensor[(12, 15, 8), bool] */;
  %196 = cast(%191, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %197 = cast(%var_1992, dtype="int64") /* ty=Tensor[(12, 15, 8), int64] */;
  %198 = cast(%191, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %199 = cast(%var_1992, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %200 = greater(%195, %196) /* ty=Tensor[(12, 15, 8), bool] */;
  %201 = bitwise_or(%197, %198) /* ty=Tensor[(12, 15, 8), int64] */;
  %202 = cos(%199) /* ty=Tensor[(12, 15, 8), float64] */;
  (%200, %201, %202)
}

def @func_3208(%var_3173: uint16) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(11, 4, 1), bool], uint16, Tensor[(44, 1), uint16], Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64]) {
  %203 = @func_2866() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %204 = @func_2866() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %205 = cast(%var_3173, dtype="uint16") /* ty=uint16 */;
  %206 = cast(meta[relay.Constant][11] /* ty=Tensor[(44, 1), uint16] */, dtype="uint16") /* ty=Tensor[(44, 1), uint16] */;
  %207 = reshape(%205, newshape=[]) /* ty=uint16 */;
  %208 = reshape(%206, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), uint16] */;
  %209 = cast(%var_3173, dtype="uint16") /* ty=uint16 */;
  %210 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %211 = reshape(%209, newshape=[]) /* ty=uint16 */;
  %212 = reshape(%210, newshape=[16, 3, 14]) /* ty=Tensor[(16, 3, 14), uint16] */;
  %213 = @func_1922(%211, %212) /* ty=(Tensor[(16, 3, 14), bool],) */;
  %214 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %215 = %203.1;
  %216 = %204.0;
  %217 = @func_2352(%207, %208) /* ty=Tensor[(11, 4, 1), bool] */;
  %218 = %213.0;
  %219 = %214.0;
  (%215, %216, %217, %var_3173, meta[relay.Constant][11] /* ty=Tensor[(44, 1), uint16] */, %218, meta[relay.Constant][12] /* ty=Tensor[(672), uint16] */, %219)
}

def @func_4656() -> (Tensor[(8, 11, 10), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
  %220 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %222 = reshape(%221, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %223 = @func_940(%222) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
  %224 = %220.0;
  %225 = %223.3;
  (%224, %225, meta[relay.Constant][13] /* ty=Tensor[(48), int16] */)
}

def @func_2077() -> Tensor[(1, 15, 8), float64] {
  @func_627() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_795(%var_760: Tensor[(840), float32], %var_761: Tensor[(390), float32], %var_762: Tensor[(48), int16], %var_770: Tensor[(390), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) {
  %226 = cast(%var_760, dtype="float32") /* ty=Tensor[(840), float32] */;
  %227 = cast(%var_761, dtype="float32") /* ty=Tensor[(390), float32] */;
  %228 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
  %229 = reshape(%226, newshape=[8, 7, 15]) /* ty=Tensor[(8, 7, 15), float32] */;
  %230 = reshape(%227, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %231 = reshape(%228, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %232 = @func_683(%229, %230, %231) /* ty=(Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) */;
  %233 = cast(%var_770, dtype="bool") /* ty=Tensor[(390), bool] */;
  %234 = shape_of(%var_761, dtype="int32") /* ty=Tensor[(1), int32] */;
  %235 = cast(%var_761, dtype="bool") /* ty=Tensor[(390), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?), bool] */;
  %237 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
  %238 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
  %239 = reshape(%237, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %240 = reshape(%238, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %241 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %242 = %232.4;
  %243 = less_equal(%235, %236) /* ty=Tensor[(390), bool] */;
  %244 = @func_54(%239, %240) /* ty=Tensor[(3, 16), int16] */;
  %245 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  (%241, %242, %var_760, %var_762, %243, %244, %245)
}

def @func_1948(%var_1945: Tensor[(2, 6, 13), float32]) -> Tensor[(2, 6, 13), float32] {
  %246 = cast(%var_1945, dtype="float32") /* ty=Tensor[(2, 6, 13), float32] */;
  atanh(%246) /* ty=Tensor[(2, 6, 13), float32] */
}

def @func_949(%var_944: uint8, %var_945: Tensor[(11, 15, 15), uint8]) -> Tensor[(11, 15, 15), uint8] {
  %247 = cast(%var_944, dtype="uint8") /* ty=uint8 */;
  %248 = cast(%var_945, dtype="uint8") /* ty=Tensor[(11, 15, 15), uint8] */;
  bitwise_or(%247, %248) /* ty=Tensor[(11, 15, 15), uint8] */
}

def @func_3927() -> Tensor[(156), float32] {
  %249 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
  %249.4
}

def @func_3778(%var_3740: Tensor[(8, 9, 14), float64], %var_3741: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64], Tensor[(8, 9, 14), float32], Tensor[(1, 15, 8), float64]) {
  %250 = cast(%var_3741, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %251 = shape_of(%var_3740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_3740, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %254 = cast(%var_3741, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
  %255 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %256 = floor_divide(%252, %253) /* ty=Tensor[(8, 9, 14), float64] */;
  %257 = erf(%254) /* ty=Tensor[(8, 9, 14), float32] */;
  %258 = %255.0;
  (%256, %257, %258)
}

def @func_1982() -> (Tensor[(1, 15, 8), float64],) {
  %259 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
  %260 = %259.3;
  (%260,)
}

def @func_2453(%var_2396: Tensor[(858), float32], %var_2406: Tensor[(13, 4, 13), float64], %var_2435: Tensor[(13, 4, 13), float32]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), int8], Tensor[(1, 15, 8), float64], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), bool]) {
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %263 = reshape(%261, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %264 = reshape(%262, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %265 = cast(%var_2396, dtype="float32") /* ty=Tensor[(858), float32] */;
  %266 = reshape(%265, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
  %267 = @func_711(%266) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
  %268 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 13), float64] */;
  %269 = asinh(%268) /* ty=Tensor[(13, 4, 13), float64] */;
  %270 = cast(%var_2406, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %274 = cast(%269, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %275 = sigmoid(%274) /* ty=Tensor[(13, 4, 13), float32] */;
  %276 = cast(%269, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %280 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %281 = cast(%269, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %282 = cast(%var_2435, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %283 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%275, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %286 = right_shift(%284, %285) /* ty=Tensor[(13, 4, 13), int8] */;
  %287 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %291 = @func_54(%263, %264) /* ty=Tensor[(3, 16), int16] */;
  %292 = %267.0;
  %293 = floor_divide(%272, %273) /* ty=Tensor[(13, 4, 13), float32] */;
  %294 = minimum(%278, %279) /* ty=Tensor[(13, 4, 13), int8] */;
  %295 = %280.0;
  %296 = erf(%281) /* ty=Tensor[(13, 4, 13), float32] */;
  %297 = logical_or(%289, %290) /* ty=Tensor[(13, 4, 13), bool] */;
  (%291, meta[relay.Constant][14] /* ty=Tensor[(48), int16] */, %292, %var_2396, %293, %294, %295, %296, %297)
}

def @func_1491(%var_1484: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) {
  %298 = cast(%var_1484, dtype="float64") /* ty=Tensor[(600), float64] */;
  %299 = reshape(%298, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %300 = @func_1063(%299) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
  %301 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %302 = %300.0;
  (%301, %302, %var_1484)
}

def @func_1333(%var_1272: uint8, %var_1273: Tensor[(2475, 1), uint8], %var_1276: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(11, 15, 15), uint8], Tensor[(2475, 1), uint8], Tensor[(1, 15, 8), float64], Tensor[(4, 15, 8), bool], Tensor[(4, 15, 8), uint8]) {
  %303 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %304 = cast(%var_1272, dtype="uint8") /* ty=uint8 */;
  %305 = cast(%var_1273, dtype="uint8") /* ty=Tensor[(2475, 1), uint8] */;
  %306 = reshape(%304, newshape=[]) /* ty=uint8 */;
  %307 = reshape(%305, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %308 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %309 = cast(%var_1276, dtype="float64") /* ty=Tensor[(480), float64] */;
  %310 = reshape(%309, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
  %311 = @func_1030(%310) /* ty=(Tensor[(4, 15, 8), float32],) */;
  %312 = %311.0;
  %313 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 15, 8), float32] */, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %317 = subtract(%315, %316) /* ty=Tensor[(4, 15, 8), uint8] */;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(4, 15, 8), float64] */;
  %319 = asinh(%318) /* ty=Tensor[(4, 15, 8), float64] */;
  %320 = cast(%317, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = greater(%322, %323) /* ty=Tensor[(4, 15, 8), bool] */;
  %325 = cast(%324, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %326 = cast(%var_1272, dtype="bool") /* ty=bool */;
  %327 = cast(%var_1276, dtype="uint8") /* ty=Tensor[(480), uint8] */;
  %328 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%319, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %331 = %303.0;
  %332 = @func_949(%306, %307) /* ty=Tensor[(11, 15, 15), uint8] */;
  %333 = %308.0;
  %334 = less_equal(%325, %326) /* ty=Tensor[(4, 15, 8), bool] */;
  %335 = maximum(%329, %330) /* ty=Tensor[(4, 15, 8), uint8] */;
  (%331, %332, %var_1273, %333, %334, %335)
}

def @func_4015() -> (Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
  %336 = @func_3906() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) */;
  %337 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %338 = %336.3;
  %339 = %337.0;
  (%338, %339)
}

def @func_1160() -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) {
  %340 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %341 = cast(meta[relay.Constant][17] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %342 = cast(meta[relay.Constant][17] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %343 = reshape(%341, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %344 = reshape(%342, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %345 = %340.0;
  %346 = @func_54(%343, %344) /* ty=Tensor[(3, 16), int16] */;
  %347 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  (%345, %346, meta[relay.Constant][17] /* ty=Tensor[(48), int16] */, %347)
}

def @func_3016(%var_3011: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), bool],) {
  %348 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %351 = cast(%var_3011, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %352 = logical_or(%350, %351) /* ty=Tensor[(6, 15, 8), bool] */;
  (%352,)
}

def @func_4427(%var_4398: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float32], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %353 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %354 = cast(%var_4398, dtype="float64") /* ty=Tensor[(600), float64] */;
  %355 = reshape(%354, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %356 = @func_885(%355) /* ty=(Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) */;
  %357 = @func_3450() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %358 = %353.0;
  %359 = %356.2;
  %360 = %357.0;
  %361 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  (%358, %359, %var_4398, %360, %361)
}

def @func_4529() -> (Tensor[(1, 15, 8), float64],) {
  %362 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %363 = %362.0;
  (%363,)
}

def @func_3395(%var_3295: int16, %var_3366: Tensor[(3360), bool], %var_3377: Tensor[(21), float32]) -> (Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) {
  %364 = cast(%var_3295, dtype="bool") /* ty=bool */;
  %365 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 14, 6), int16] */, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  %366 = cast(meta[relay.Constant][19] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
  %367 = cast(meta[relay.Constant][19] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
  %368 = cast(meta[relay.Constant][20] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %369 = reshape(%366, newshape=[13, 11]) /* ty=Tensor[(13, 11), int64] */;
  %370 = reshape(%367, newshape=[13, 11]) /* ty=Tensor[(13, 11), int64] */;
  %371 = reshape(%368, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
  %372 = @func_1883(%369, %370, %371) /* ty=(Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) */;
  %373 = cast(%var_3366, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %374 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3360), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %375 = cast(meta[relay.Constant][20] /* ty=Tensor[(3360), bool] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?), float64] */;
  %377 = cast(%var_3377, dtype="float32") /* ty=Tensor[(21), float32] */;
  %378 = cast(%var_3295, dtype="uint8") /* ty=uint8 */;
  %379 = reshape(%377, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %380 = reshape(%378, newshape=[]) /* ty=uint8 */;
  %381 = @func_2480(%379, %380) /* ty=(Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) */;
  %382 = greater_equal(%364, %365) /* ty=Tensor[(11, 14, 6), bool] */;
  %383 = %372.0;
  %384 = floor_mod(%375, %376) /* ty=Tensor[(3360), float64] */;
  %385 = %381.2;
  (%382, %383, meta[relay.Constant][19] /* ty=Tensor[(143), int64] */, %384, %385, %var_3377)
}

def @func_4802() -> (Tensor[(1, 15, 8), float64],) {
  %386 = @func_3112() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %387 = %386.0;
  (%387,)
}

def @func_627() -> Tensor[(1, 15, 8), float64] {
  %388 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %388.0
}

def @func_3622(%var_3546: float64, %var_3572: Tensor[(600), float64]) -> (Tensor[(16, 7, 7), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(5, 15, 8), bool], Tensor[(600), float64], Tensor[(?, 15, 8), int64]) {
  %389 = cast(%var_3546, dtype="float64") /* ty=float64 */;
  %390 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 7), float64] */;
  %391 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %392 = reshape(%391, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %393 = @func_746(%392) /* ty=(Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) */;
  %394 = cast(%var_3572, dtype="float64") /* ty=Tensor[(600), float64] */;
  %395 = reshape(%394, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %396 = @func_1063(%395) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
  %397 = floor_mod(%389, %390) /* ty=Tensor[(16, 7, 7), float64] */;
  %398 = %393.0;
  %399 = %396.0;
  %400 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
  (%397, %398, meta[relay.Constant][22] /* ty=Tensor[(24), float32] */, %399, %var_3572, %400)
}

def @func_2102(%var_2098: Tensor[(858), float32]) -> (Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) {
  %401 = cast(meta[relay.Constant][23] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %402 = cast(meta[relay.Constant][24] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %403 = reshape(%401, newshape=[]) /* ty=uint16 */;
  %404 = reshape(%402, newshape=[16, 3, 14]) /* ty=Tensor[(16, 3, 14), uint16] */;
  %405 = @func_1922(%403, %404) /* ty=(Tensor[(16, 3, 14), bool],) */;
  %406 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %407 = cast(meta[relay.Constant][23] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %408 = cast(%406, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %409 = cast(%var_2098, dtype="float32") /* ty=Tensor[(858), float32] */;
  %410 = reshape(%409, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
  %411 = @func_711(%410) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
  %412 = %405.0;
  %413 = divide(%407, %408) /* ty=Tensor[(1, 15, 8), float64] */;
  %414 = %411.0;
  (%412, meta[relay.Constant][24] /* ty=Tensor[(672), uint16] */, %413, %414, %var_2098)
}

def @func_2702(%var_2697: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), float64],) {
  %415 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %417 = cast(%var_2697, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %418 = mod(%416, %417) /* ty=Tensor[(12, 15, 8), float64] */;
  (%418,)
}

def @func_4063(%var_4046: Tensor[(720), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(6, 15, 8), bool], Tensor[(720), float64]) {
  %419 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %420 = cast(%var_4046, dtype="float64") /* ty=Tensor[(720), float64] */;
  %421 = reshape(%420, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %422 = @func_3016(%421) /* ty=(Tensor[(6, 15, 8), bool],) */;
  %423 = %419.0;
  %424 = %422.0;
  (%423, %424, %var_4046)
}

def @func_4793(%var_4741: Tensor[(16, 4, 3), float64], %var_4759: Tensor[(14, 130), float32], %var_4760: Tensor[(21), float32], %var_4770: Tensor[(5, 15, 8), bool]) -> (Tensor[(16, 4, 3), float64], Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(14, 130), float32], Tensor[(21), float32], Tensor[(5, 15, 8), bool], Tensor[(?, 24), bool]) {
  %425 = cast(%var_4741, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
  %426 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(16, 4, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 4, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %429 = cast(meta[relay.Constant][26] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %430 = cast(%var_4759, dtype="float32") /* ty=Tensor[(14, 130), float32] */;
  %431 = cast(%var_4760, dtype="float32") /* ty=Tensor[(21), float32] */;
  %432 = reshape(%429, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %433 = reshape(%430, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %434 = reshape(%431, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %435 = @func_4364(%432, %433, %434) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) */;
  %436 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %437 = cast(%var_4770, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
  %442 = %441.2;
  %443 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 24), float32] */, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(2), int32] */;
  %445 = cast(%442, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %447 = multiply(%427, %428) /* ty=Tensor[(16, 4, 3), float64] */;
  %448 = %435.0;
  %449 = logical_and(%439, %440) /* ty=Tensor[(5, 15, 8), bool] */;
  %450 = not_equal(%445, %446) /* ty=Tensor[(?, 24), bool] */;
  (%447, %448, meta[relay.Constant][26] /* ty=Tensor[(140), float32] */, %var_4759, %var_4760, %449, %450)
}

def @func_1464() -> Tensor[(1, 15, 8), float64] {
  %451 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
  %451.0
}

def @func_3112() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %452 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %453 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  (%452, %453)
}

def @func_2252(%var_2250: Tensor[(6, 100), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(48), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(5, 15, 8), float32], Tensor[(6, 100), float64]) {
  %454 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %455 = reshape(%454, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %456 = @func_2185(%455) /* ty=(Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) */;
  %457 = cast(meta[relay.Constant][29] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %458 = cast(meta[relay.Constant][29] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %459 = reshape(%457, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %460 = reshape(%458, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %461 = @func_1803(%459, %460) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) */;
  %462 = cast(%var_2250, dtype="float64") /* ty=Tensor[(6, 100), float64] */;
  %463 = reshape(%462, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %464 = @func_1063(%463) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
  %465 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %466 = %456.2;
  %467 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %468 = %461.1;
  %469 = %464.1;
  (%465, %466, meta[relay.Constant][28] /* ty=Tensor[(48), int16] */, %467, %468, meta[relay.Constant][29] /* ty=Tensor[(84), uint8] */, %469, %var_2250)
}

def @main() -> Tensor[(5, 15, 8), float64] {
  %470 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %472 = rsqrt(%471) /* ty=Tensor[(5, 15, 8), float32] */;
  %473 = cast(%472, dtype="float64") /* ty=Tensor[(5, 15, 8), float64] */;
  log2(%473) /* ty=Tensor[(5, 15, 8), float64] */
}

def @func_940(%var_930: Tensor[(48), int16]) -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) {
  %474 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %475 = cast(%var_930, dtype="int16") /* ty=Tensor[(48), int16] */;
  %476 = cast(%var_930, dtype="int16") /* ty=Tensor[(48), int16] */;
  %477 = reshape(%475, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %478 = reshape(%476, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %479 = @func_54(%477, %478) /* ty=Tensor[(3, 16), int16] */;
  %480 = cast(%479, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %481 = cast(%479, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %482 = reshape(%480, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %483 = reshape(%481, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %484 = %474.0;
  %485 = @func_54(%482, %483) /* ty=Tensor[(3, 16), int16] */;
  (%484, %479, %var_930, %485)
}

def @func_1063(%var_1042: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) {
  %486 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %487 = cast(%486, dtype="int8") /* ty=Tensor[(1, 15, 8), int8] */;
  %488 = cast(%var_1042, dtype="int8") /* ty=Tensor[(5, 15, 8), int8] */;
  %489 = logical_xor(%487, %488) /* ty=Tensor[(5, 15, 8), int8] */;
  %490 = cast(%var_1042, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %494 = cast(%489, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %495 = less_equal(%492, %493) /* ty=Tensor[(5, 15, 8), bool] */;
  %496 = asin(%494) /* ty=Tensor[(5, 15, 8), float32] */;
  (%495, %496)
}

def @func_3666() -> (Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) {
  %497 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 1, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
  %498 = acosh(%497) /* ty=Tensor[(4, 1, 6), float32] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %500 = acos(%499) /* ty=Tensor[(4, 1, 6), float64] */;
  %501 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 1, 6), float32] */, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %505 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
  %506 = not_equal(%503, %504) /* ty=Tensor[(4, ?, 6), bool] */;
  (%505, %506)
}

def @func_572() -> (Tensor[(1, 15, 8), float64],) {
  %507 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %508 = sigmoid(%507) /* ty=Tensor[(1, 15, 8), float64] */;
  (%508,)
}

def @func_5084() -> Tensor[(1, 15, 8), float64] {
  %509 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
  %509.0
}

def @func_54(%var_41: Tensor[(3, 16), int16], %var_42: Tensor[(3, 16), int16]) -> Tensor[(3, 16), int16] {
  %510 = cast(%var_42, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %511 = shape_of(%var_41, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%var_41, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  logical_xor(%512, %513) /* ty=Tensor[(3, 16), int16] */
}

def @func_2308(%var_2269: Tensor[(16, 15, 8), float64], %var_2274: Tensor[(16, 15, 8), float64]) -> (Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) {
  %514 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %515 = cast(%514, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %516 = cast(%var_2269, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
  %517 = cast(%var_2274, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
  %518 = shape_of(%var_2269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_2269, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %522 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 165), uint8] */, dtype="uint8") /* ty=Tensor[(15, 165), uint8] */;
  %523 = reshape(%521, newshape=[]) /* ty=uint8 */;
  %524 = reshape(%522, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %525 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 165), uint8] */, dtype="float32") /* ty=Tensor[(15, 165), float32] */;
  %526 = not_equal(%515, %516) /* ty=Tensor[(16, 15, 8), bool] */;
  %527 = less_equal(%519, %520) /* ty=Tensor[(16, 15, 8), bool] */;
  %528 = @func_949(%523, %524) /* ty=Tensor[(11, 15, 15), uint8] */;
  %529 = atanh(%525) /* ty=Tensor[(15, 165), float32] */;
  (%526, %527, %528, meta[relay.Constant][32] /* ty=uint8 */, %529)
}

def @func_203(%var_148: Tensor[(3, 13, 10), float32], %var_161: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) {
  %530 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %531 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %532 = reshape(%530, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %533 = reshape(%531, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %534 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %535 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %536 = reshape(%534, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %537 = reshape(%535, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %538 = cast(%var_148, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %539 = atan(%538) /* ty=Tensor[(3, 13, 10), float32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %541 = @func_54(%536, %537) /* ty=Tensor[(3, 16), int16] */;
  %542 = cast(%541, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %543 = @func_54(%532, %533) /* ty=Tensor[(3, 16), int16] */;
  %544 = cast(%543, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %545 = reshape(%542, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %546 = reshape(%544, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %547 = sinh(%540) /* ty=Tensor[(3, 13, 10), float32] */;
  %548 = @func_54(%545, %546) /* ty=Tensor[(3, 16), int16] */;
  (%543, %var_161, %541, %547, %548)
}

def @func_3504() -> (Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) {
  %549 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %550 = cast(meta[relay.Constant][34] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %551 = reshape(%550, newshape=[858]) /* ty=Tensor[(858), float32] */;
  %552 = @func_2102(%551) /* ty=(Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) */;
  %553 = cast(meta[relay.Constant][35] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %554 = reshape(%553, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), float32] */;
  %555 = %552.3;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
  %557 = reshape(%556, newshape=[858]) /* ty=Tensor[(858), float32] */;
  %558 = @func_2102(%557) /* ty=(Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) */;
  %559 = %549.0;
  %560 = @func_1948(%554) /* ty=Tensor[(2, 6, 13), float32] */;
  %561 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %562 = %558.0;
  (%559, %555, meta[relay.Constant][34] /* ty=Tensor[(858), float32] */, %560, meta[relay.Constant][35] /* ty=Tensor[(156), float32] */, %561, %562)
}

def @func_3036() -> Tensor[(?, 15, 8), int64] {
  @func_2765() /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_683(%var_629: Tensor[(8, 7, 15), float32], %var_658: Tensor[(390), float32], %var_659: Tensor[(48), int16]) -> (Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) {
  %563 = cast(%var_629, dtype="int8") /* ty=Tensor[(8, 7, 15), int8] */;
  %564 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 7, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 7, 15), float32] */, dtype="int8") /* ty=Tensor[(8, 7, 15), int8] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %567 = cast(%var_658, dtype="float32") /* ty=Tensor[(390), float32] */;
  %568 = cast(%var_659, dtype="int16") /* ty=Tensor[(48), int16] */;
  %569 = reshape(%567, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
  %570 = reshape(%568, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %571 = @func_203(%569, %570) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
  %572 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
  %573 = shape_of(%var_629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_629, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %576 = mod(%574, %575) /* ty=Tensor[(8, 7, 15), float32] */;
  %577 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %581 = maximum(%565, %566) /* ty=Tensor[(8, 7, 15), int8] */;
  %582 = %571.3;
  %583 = floor_divide(%579, %580) /* ty=Tensor[(8, 7, 15), float32] */;
  (%581, %582, %var_658, %var_659, %583)
}

def @func_4211(%var_4183: int16, %var_4185: Tensor[(21, 1), float32]) -> (Tensor[(480), float64], Tensor[(13, 11), bool], int16, Tensor[(3360), bool], Tensor[(21, 1), float64]) {
  %584 = @func_3906() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) */;
  %585 = cast(%var_4183, dtype="int16") /* ty=int16 */;
  %586 = cast(meta[relay.Constant][38] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %587 = cast(%var_4185, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %588 = reshape(%585, newshape=[]) /* ty=int16 */;
  %589 = reshape(%586, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
  %590 = reshape(%587, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %591 = @func_3395(%588, %589, %590) /* ty=(Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) */;
  %592 = cast(%var_4185, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %593 = %584.3;
  %594 = %591.1;
  %595 = log10(%592) /* ty=Tensor[(21, 1), float64] */;
  (%593, %594, %var_4183, meta[relay.Constant][38] /* ty=Tensor[(3360), bool] */, %595)
}

def @func_4270(%var_4257: Tensor[(14, 10, 1), float32], %var_4265: Tensor[(14, 10, 16), float32]) -> (Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) {
  %596 = cast(%var_4257, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
  %597 = cast(%var_4257, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
  %598 = sinh(%597) /* ty=Tensor[(14, 10, 1), float32] */;
  %599 = cast(%598, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
  %600 = cast(%var_4265, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %601 = cos(%596) /* ty=Tensor[(14, 10, 1), float32] */;
  %602 = not_equal(%599, %600) /* ty=Tensor[(14, 10, 16), bool] */;
  (%601, %602)
}

def @func_4682() -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(13, 13, 13), float32], Tensor[(2197), float32]) {
  %603 = @func_4150() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %604 = cast(meta[relay.Constant][39] /* ty=Tensor[(2197), float32] */, dtype="float32") /* ty=Tensor[(2197), float32] */;
  %605 = reshape(%604, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %606 = @func_2915(%605) /* ty=(Tensor[(13, 13, 13), float32],) */;
  %607 = %603.0;
  %608 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %609 = %606.0;
  (%607, %608, %609, meta[relay.Constant][39] /* ty=Tensor[(2197), float32] */)
}

def @func_3242(%var_3212: Tensor[(2, 12, 2), float32]) -> (Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) {
  %610 = cast(%var_3212, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
  %611 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %612 = cosh(%610) /* ty=Tensor[(2, 12, 2), float32] */;
  %613 = cast(%612, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
  %614 = reshape(%613, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %615 = @func_940(%614) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
  %616 = %611.0;
  %617 = %615.3;
  (%612, %616, %617)
}

def @func_2915(%var_2911: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32],) {
  %618 = cast(%var_2911, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %619 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(13, 13, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 13, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %622 = divide(%620, %621) /* ty=Tensor[(13, 13, 13), float32] */;
  (%622,)
}

def @func_3906() -> (Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) {
  %623 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %624 = reshape(%623, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
  %625 = @func_1030(%624) /* ty=(Tensor[(4, 15, 8), float32],) */;
  %626 = %625.0;
  %627 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %628 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %629 = reshape(%627, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), float64] */;
  %630 = reshape(%628, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), float64] */;
  %631 = @func_2308(%629, %630) /* ty=(Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) */;
  %632 = %631.3;
  %633 = cast(%626, dtype="int16") /* ty=Tensor[(4, 15, 8), int16] */;
  %634 = cast(%632, dtype="int16") /* ty=int16 */;
  %635 = @func_3036() /* ty=Tensor[(?, 15, 8), int64] */;
  %636 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %637 = bitwise_or(%633, %634) /* ty=Tensor[(4, 15, 8), int16] */;
  (%635, %636, meta[relay.Constant][41] /* ty=Tensor[(4, 480), float64] */, meta[relay.Constant][42] /* ty=Tensor[(480), float64] */, %637)
}

def @func_4730(%var_4699: Tensor[(6, 12, 16), uint16], %var_4700: Tensor[(6, 12, 16), uint16], %var_4724: Tensor[(140), float32], %var_4725: Tensor[(1820), float32]) -> (Tensor[(6, 12, 16), float64], Tensor[(14, 10, 13), bool], Tensor[(140), float32], Tensor[(1820), float32], Tensor[(7, 3), float32]) {
  %638 = cast(%var_4700, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %639 = shape_of(%var_4699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_4699, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = less(%640, %641) /* ty=Tensor[(6, 12, 16), bool] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %644 = cosh(%643) /* ty=Tensor[(6, 12, 16), float32] */;
  %645 = cast(%642, dtype="int64") /* ty=Tensor[(6, 12, 16), int64] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="int64") /* ty=Tensor[(6, 12, 16), int64] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %649 = left_shift(%647, %648) /* ty=Tensor[(6, 12, 16), int64] */;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %651 = cast(%var_4724, dtype="float32") /* ty=Tensor[(140), float32] */;
  %652 = cast(%var_4725, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %653 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
  %654 = reshape(%651, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %655 = reshape(%652, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
  %656 = reshape(%653, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %657 = @func_4364(%654, %655, %656) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) */;
  %658 = erf(%650) /* ty=Tensor[(6, 12, 16), float64] */;
  %659 = %657.3;
  (%658, %659, %var_4724, %var_4725, meta[relay.Constant][43] /* ty=Tensor[(7, 3), float32] */)
}

def @func_5069() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %660 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %661 = %660.0;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %663 = @func_3450() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %664 = sqrt(%662) /* ty=Tensor[(1, 15, 8), float64] */;
  %665 = %663.1;
  (%664, %665)
}

def @func_4364(%var_4320: Tensor[(140), float32], %var_4328: Tensor[(14, 10, 13), float32], %var_4334: Tensor[(21), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) {
  %666 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %667 = cast(%var_4320, dtype="float32") /* ty=Tensor[(140), float32] */;
  %668 = cast(meta[relay.Constant][44] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %669 = reshape(%667, newshape=[14, 10, 1]) /* ty=Tensor[(14, 10, 1), float32] */;
  %670 = reshape(%668, newshape=[14, 10, 16]) /* ty=Tensor[(14, 10, 16), float32] */;
  %671 = @func_4270(%669, %670) /* ty=(Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) */;
  %672 = %671.0;
  %673 = cast(%672, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
  %674 = cast(%var_4328, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %675 = cast(%var_4334, dtype="float32") /* ty=Tensor[(21), float32] */;
  %676 = cast(meta[relay.Constant][45] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %677 = reshape(%675, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %678 = reshape(%676, newshape=[]) /* ty=uint8 */;
  %679 = @func_2480(%677, %678) /* ty=(Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) */;
  %680 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
  %681 = %666.0;
  %682 = greater(%673, %674) /* ty=Tensor[(14, 10, 13), bool] */;
  %683 = %679.2;
  %684 = @func_3036() /* ty=Tensor[(?, 15, 8), int64] */;
  %685 = %680.2;
  (%681, %var_4320, meta[relay.Constant][44] /* ty=Tensor[(2240), float32] */, %682, %683, %var_4334, meta[relay.Constant][45] /* ty=uint8 */, %684, %685)
}

def @func_4004() -> (Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) {
  %686 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %687 = reshape(%686, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), float32] */;
  %688 = @func_3242(%687) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) */;
  %689 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %690 = %688.1;
  (%689, %690, meta[relay.Constant][46] /* ty=Tensor[(48), float32] */)
}

def @func_3286() -> (Tensor[(1, 15, 8), float32],) {
  %691 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %692 = %691.1;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %694 = log2(%693) /* ty=Tensor[(1, 15, 8), float32] */;
  (%694,)
}

def @func_4965(%var_4954: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), int8], Tensor[(156), float32], Tensor[(1, 15, 8), float32]) {
  %695 = @func_4488() /* ty=Tensor[(?, 15, 8), float32] */;
  %696 = cast(%695, dtype="int8") /* ty=Tensor[(?, 15, 8), int8] */;
  %697 = cast(%var_4954, dtype="int8") /* ty=Tensor[(16, 15, 8), int8] */;
  %698 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
  %699 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %700 = subtract(%696, %697) /* ty=Tensor[(16, 15, 8), int8] */;
  %701 = %698.4;
  %702 = %699.0;
  (%700, %701, %702)
}

def @func_1030(%var_1021: Tensor[(4, 15, 8), float64]) -> (Tensor[(4, 15, 8), float32],) {
  %703 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %704 = %703.0;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %706 = cast(%var_1021, dtype="float32") /* ty=Tensor[(4, 15, 8), float32] */;
  %707 = power(%705, %706) /* ty=Tensor[(4, 15, 8), float32] */;
  (%707,)
}

def @func_1398() -> (Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) {
  %708 = cast(5.6353f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %709 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %710 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 24), float32] */, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
  %711 = reshape(%710, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %712 = @func_746(%711) /* ty=(Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) */;
  %713 = add(%708, %709) /* ty=Tensor[(8, 11, 10), float64] */;
  %714 = %712.1;
  (%713, %714, meta[relay.Constant][48] /* ty=Tensor[(1, 24), float32] */)
}

def @func_1922(%var_1915: uint16, %var_1916: Tensor[(16, 3, 14), uint16]) -> (Tensor[(16, 3, 14), bool],) {
  %715 = cast(%var_1915, dtype="bool") /* ty=bool */;
  %716 = cast(%var_1916, dtype="bool") /* ty=Tensor[(16, 3, 14), bool] */;
  %717 = equal(%715, %716) /* ty=Tensor[(16, 3, 14), bool] */;
  (%717,)
}

def @func_338(%var_284: Tensor[(14, 16, 15), bool], %var_285: Tensor[(14, 16, 15), bool], %var_299: Tensor[(48), int16], %var_329: Tensor[(390), float32]) -> (Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) {
  %718 = cast(%var_285, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %719 = shape_of(%var_284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_284, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %722 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %723 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %724 = reshape(%722, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %725 = reshape(%723, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %726 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %727 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %728 = reshape(%726, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %729 = reshape(%727, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %730 = @func_54(%728, %729) /* ty=Tensor[(3, 16), int16] */;
  %731 = cast(%730, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %732 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %733 = reshape(%731, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %734 = reshape(%732, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %735 = cast(%var_329, dtype="float32") /* ty=Tensor[(390), float32] */;
  %736 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %737 = reshape(%735, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
  %738 = reshape(%736, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %739 = @func_203(%737, %738) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
  %740 = cast(%var_284, dtype="float32") /* ty=Tensor[(14, 16, 15), float32] */;
  %741 = logical_and(%720, %721) /* ty=Tensor[(14, 16, 15), bool] */;
  %742 = @func_54(%724, %725) /* ty=Tensor[(3, 16), int16] */;
  %743 = @func_54(%733, %734) /* ty=Tensor[(3, 16), int16] */;
  %744 = %739.1;
  %745 = atan(%740) /* ty=Tensor[(14, 16, 15), float32] */;
  (%741, %742, %var_299, %730, %743, %744, %var_329, %745)
}

def @func_1883(%var_1839: Tensor[(13, 11), int64], %var_1840: Tensor[(13, 11), int64], %var_1864: Tensor[(3360), bool]) -> (Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) {
  %746 = cast(%var_1840, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
  %747 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %748 = cast(%var_1839, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %750 = cast(%var_1864, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %751 = cast(%var_1864, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %752 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 4), int16] */, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
  %753 = cast(meta[relay.Constant][50] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %754 = reshape(%750, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), bool] */;
  %755 = reshape(%751, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), bool] */;
  %756 = reshape(%752, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %757 = reshape(%753, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %758 = @func_338(%754, %755, %756, %757) /* ty=(Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) */;
  %759 = less(%748, %749) /* ty=Tensor[(13, 11), bool] */;
  %760 = %758.3;
  (%759, %760, %var_1864, meta[relay.Constant][49] /* ty=Tensor[(12, 4), int16] */, meta[relay.Constant][50] /* ty=Tensor[(390), float32] */)
}

def @func_3726() -> Tensor[(5, 15, 8), bool] {
  %761 = @func_2887() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %762 = %761.0;
  %763 = cast(%762, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %764 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
  logical_or(%763, %764) /* ty=Tensor[(5, 15, 8), bool] */
}

def @func_4094(%var_4079: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  %765 = cast(%var_4079, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  exp(%765) /* ty=Tensor[(2, 6, 2), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3114() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  @func_3112() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_3685() -> Tensor[(8, 11, 10), bool] {
  %6 = fn () -> Tensor[(8, 11, 10), bool] {
    %0 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
    %1 = %0.0;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 11, 10), float64] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%4, %5) /* ty=Tensor[(8, 11, 10), bool] */
  };
  %6() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3625(%var_3623: float64, %var_3624: Tensor[(600), float64]) -> (Tensor[(16, 7, 7), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(5, 15, 8), bool], Tensor[(600), float64], Tensor[(?, 15, 8), int64]) {
  %19 = fn (%var_3546: float64, %var_3572: Tensor[(600), float64]) -> (Tensor[(16, 7, 7), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(5, 15, 8), bool], Tensor[(600), float64], Tensor[(?, 15, 8), int64]) {
    %7 = cast(%var_3546, dtype="float64") /* ty=float64 */;
    %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 7), float64] */;
    %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %10 = reshape(%9, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %11 = @func_746(%10) /* ty=(Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) */;
    %12 = cast(%var_3572, dtype="float64") /* ty=Tensor[(600), float64] */;
    %13 = reshape(%12, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
    %14 = @func_1063(%13) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
    %15 = floor_mod(%7, %8) /* ty=Tensor[(16, 7, 7), float64] */;
    %16 = %11.0;
    %17 = %14.0;
    %18 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
    (%15, %16, meta[relay.Constant][2] /* ty=Tensor[(24), float32] */, %17, %var_3572, %18)
  };
  %19(%var_3623, %var_3624) /* ty=(Tensor[(16, 7, 7), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(5, 15, 8), bool], Tensor[(600), float64], Tensor[(?, 15, 8), int64]) */
}

def @func_3451() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %23 = fn () -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
    %20 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %21 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
    %22 = %20.1;
    (%21, %22)
  };
  %23() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_4094(%var_4079: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  %24 = cast(%var_4079, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  exp(%24) /* ty=Tensor[(2, 6, 2), float32] */
}

def @func_888(%var_886: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) {
  @func_885(%var_886) /* ty=(Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) */
}

def @func_942(%var_941: Tensor[(48), int16]) -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) {
  %37 = fn (%var_930: Tensor[(48), int16]) -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) {
    %25 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %26 = cast(%var_930, dtype="int16") /* ty=Tensor[(48), int16] */;
    %27 = cast(%var_930, dtype="int16") /* ty=Tensor[(48), int16] */;
    %28 = reshape(%26, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %29 = reshape(%27, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %30 = @func_54(%28, %29) /* ty=Tensor[(3, 16), int16] */;
    %31 = cast(%30, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
    %32 = cast(%30, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
    %33 = reshape(%31, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %34 = reshape(%32, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %35 = %25.0;
    %36 = @func_54(%33, %34) /* ty=Tensor[(3, 16), int16] */;
    (%35, %30, %var_930, %36)
  };
  %37(%var_941) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */
}

def @func_885(%var_859: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) {
  %38 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %39 = cast(%38, dtype="uint32") /* ty=Tensor[(1, 15, 8), uint32] */;
  %40 = cast(%var_859, dtype="uint32") /* ty=Tensor[(5, 15, 8), uint32] */;
  %41 = cast(%38, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(143, 6), float32] */, dtype="float32") /* ty=Tensor[(143, 6), float32] */;
  %43 = reshape(%42, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
  %44 = @func_711(%43) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
  %45 = maximum(%39, %40) /* ty=Tensor[(5, 15, 8), uint32] */;
  %46 = rsqrt(%41) /* ty=Tensor[(1, 15, 8), float64] */;
  %47 = %44.1;
  (%45, %46, %47, meta[relay.Constant][3] /* ty=Tensor[(143, 6), float32] */)
}

def @func_2453(%var_2396: Tensor[(858), float32], %var_2406: Tensor[(13, 4, 13), float64], %var_2435: Tensor[(13, 4, 13), float32]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), int8], Tensor[(1, 15, 8), float64], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), bool]) {
  %48 = cast(meta[relay.Constant][4] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %50 = reshape(%48, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %51 = reshape(%49, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %52 = cast(%var_2396, dtype="float32") /* ty=Tensor[(858), float32] */;
  %53 = reshape(%52, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
  %54 = @func_711(%53) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 13), float64] */;
  %56 = asinh(%55) /* ty=Tensor[(13, 4, 13), float64] */;
  %57 = cast(%var_2406, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %61 = cast(%56, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %62 = sigmoid(%61) /* ty=Tensor[(13, 4, 13), float32] */;
  %63 = cast(%56, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %67 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %68 = cast(%56, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %69 = cast(%var_2435, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %70 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%62, dtype="int8") /* ty=Tensor[(13, 4, 13), int8] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %73 = right_shift(%71, %72) /* ty=Tensor[(13, 4, 13), int8] */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = @func_54(%50, %51) /* ty=Tensor[(3, 16), int16] */;
  %79 = %54.0;
  %80 = floor_divide(%59, %60) /* ty=Tensor[(13, 4, 13), float32] */;
  %81 = minimum(%65, %66) /* ty=Tensor[(13, 4, 13), int8] */;
  %82 = %67.0;
  %83 = erf(%68) /* ty=Tensor[(13, 4, 13), float32] */;
  %84 = logical_or(%76, %77) /* ty=Tensor[(13, 4, 13), bool] */;
  (%78, meta[relay.Constant][4] /* ty=Tensor[(48), int16] */, %79, %var_2396, %80, %81, %82, %83, %84)
}

def @func_1803(%var_1755: Tensor[(2, 3, 14), uint8], %var_1756: Tensor[(2, 3, 14), uint8]) -> (Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) {
  %85 = cast(%var_1756, dtype="uint8") /* ty=Tensor[(2, 3, 14), uint8] */;
  %86 = shape_of(%var_1755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%var_1755, dtype="uint8") /* ty=Tensor[(2, 3, 14), uint8] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %89 = bitwise_and(%87, %88) /* ty=Tensor[(2, 3, 14), uint8] */;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %91 = shape_of(%var_1756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_1756, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %94 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
  %96 = power(%92, %93) /* ty=Tensor[(2, 3, 14), float64] */;
  %97 = acos(%95) /* ty=Tensor[(1, 15, 8), float64] */;
  (%96, %97)
}

def @func_1464() -> Tensor[(1, 15, 8), float64] {
  %98 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
  %98.0
}

def @func_3112() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %99 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %100 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  (%99, %100)
}

def @func_573() -> (Tensor[(1, 15, 8), float64],) {
  %103 = fn () -> (Tensor[(1, 15, 8), float64],) {
    %101 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %102 = sigmoid(%101) /* ty=Tensor[(1, 15, 8), float64] */;
    (%102,)
  };
  %103() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_2252(%var_2250: Tensor[(6, 100), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(48), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(5, 15, 8), float32], Tensor[(6, 100), float64]) {
  %104 = cast(meta[relay.Constant][7] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %105 = reshape(%104, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %106 = @func_2185(%105) /* ty=(Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) */;
  %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %108 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %109 = reshape(%107, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %110 = reshape(%108, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
  %111 = @func_1803(%109, %110) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) */;
  %112 = cast(%var_2250, dtype="float64") /* ty=Tensor[(6, 100), float64] */;
  %113 = reshape(%112, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %114 = @func_1063(%113) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
  %115 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %116 = %106.2;
  %117 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %118 = %111.1;
  %119 = %114.1;
  (%115, %116, meta[relay.Constant][7] /* ty=Tensor[(48), int16] */, %117, %118, meta[relay.Constant][8] /* ty=Tensor[(84), uint8] */, %119, %var_2250)
}

def @func_3242(%var_3212: Tensor[(2, 12, 2), float32]) -> (Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) {
  %120 = cast(%var_3212, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
  %121 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %122 = cosh(%120) /* ty=Tensor[(2, 12, 2), float32] */;
  %123 = cast(%122, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
  %124 = reshape(%123, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %125 = @func_940(%124) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
  %126 = %121.0;
  %127 = %125.3;
  (%122, %126, %127)
}

def @func_1579(%var_1575: Tensor[(6, 2, 8), int64], %var_1576: Tensor[(6, 2, 8), int64], %var_1577: Tensor[(390), float32], %var_1578: Tensor[(2475), uint8]) -> (Tensor[(6, 2, 8), int64], Tensor[(3, 16), int16], Tensor[(840), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(6, 2, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(2475), uint8], Tensor[(6, 2, 8), float32]) {
  @func_1573(%var_1575, %var_1576, %var_1577, %var_1578) /* ty=(Tensor[(6, 2, 8), int64], Tensor[(3, 16), int16], Tensor[(840), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(6, 2, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(2475), uint8], Tensor[(6, 2, 8), float32]) */
}

def @func_4427(%var_4398: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float32], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %128 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %129 = cast(%var_4398, dtype="float64") /* ty=Tensor[(600), float64] */;
  %130 = reshape(%129, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %131 = @func_885(%130) /* ty=(Tensor[(5, 15, 8), uint32], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(143, 6), float32]) */;
  %132 = @func_3450() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %133 = %128.0;
  %134 = %131.2;
  %135 = %132.0;
  %136 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  (%133, %134, %var_4398, %135, %136)
}

def @func_1466() -> Tensor[(1, 15, 8), float64] {
  @func_1464() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_923() -> (Tensor[(1, 15, 8), float64],) {
  @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_952(%var_950: uint8, %var_951: Tensor[(11, 15, 15), uint8]) -> Tensor[(11, 15, 15), uint8] {
  %139 = fn (%var_944: uint8, %var_945: Tensor[(11, 15, 15), uint8]) -> Tensor[(11, 15, 15), uint8] {
    %137 = cast(%var_944, dtype="uint8") /* ty=uint8 */;
    %138 = cast(%var_945, dtype="uint8") /* ty=Tensor[(11, 15, 15), uint8] */;
    bitwise_or(%137, %138) /* ty=Tensor[(11, 15, 15), uint8] */
  };
  %139(%var_950, %var_951) /* ty=Tensor[(11, 15, 15), uint8] */
}

def @func_1494(%var_1492: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) {
  @func_1491(%var_1492) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) */
}

def @func_3504() -> (Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) {
  %140 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %142 = reshape(%141, newshape=[858]) /* ty=Tensor[(858), float32] */;
  %143 = @func_2102(%142) /* ty=(Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) */;
  %144 = cast(meta[relay.Constant][10] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %145 = reshape(%144, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), float32] */;
  %146 = %143.3;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
  %148 = reshape(%147, newshape=[858]) /* ty=Tensor[(858), float32] */;
  %149 = @func_2102(%148) /* ty=(Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) */;
  %150 = %140.0;
  %151 = @func_1948(%145) /* ty=Tensor[(2, 6, 13), float32] */;
  %152 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
  %153 = %149.0;
  (%150, %146, meta[relay.Constant][9] /* ty=Tensor[(858), float32] */, %151, meta[relay.Constant][10] /* ty=Tensor[(156), float32] */, %152, %153)
}

def @func_3668() -> (Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) {
  @func_3666() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) */
}

def @func_5070() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %160 = fn () -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
    %154 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %155 = %154.0;
    %156 = cast(%155, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %157 = @func_3450() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %158 = sqrt(%156) /* ty=Tensor[(1, 15, 8), float64] */;
    %159 = %157.1;
    (%158, %159)
  };
  %160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_4803() -> (Tensor[(1, 15, 8), float64],) {
  %163 = fn () -> (Tensor[(1, 15, 8), float64],) {
    %161 = @func_3112() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %162 = %161.0;
    (%162,)
  };
  %163() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_4252(%var_4235: Tensor[(1, 6, 1), float32]) -> (Tensor[(1, 6, 1), float32],) {
  %164 = cast(%var_4235, dtype="float32") /* ty=Tensor[(1, 6, 1), float32] */;
  %165 = rsqrt(%164) /* ty=Tensor[(1, 6, 1), float32] */;
  (%165,)
}

def @func_2483(%var_2481: Tensor[(3, 1, 7), float32], %var_2482: uint8) -> (Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) {
  %173 = fn (%var_2460: Tensor[(3, 1, 7), float32], %var_2469: uint8) -> (Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) {
    %166 = cast(%var_2460, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
    %167 = cast(%var_2469, dtype="uint8") /* ty=uint8 */;
    %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 2475), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2475), uint8] */;
    %169 = reshape(%167, newshape=[]) /* ty=uint8 */;
    %170 = reshape(%168, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
    %171 = acos(%166) /* ty=Tensor[(3, 1, 7), float32] */;
    %172 = @func_949(%169, %170) /* ty=Tensor[(11, 15, 15), uint8] */;
    (%171, %172, %var_2469, meta[relay.Constant][11] /* ty=Tensor[(1, 2475), uint8] */)
  };
  %173(%var_2481, %var_2482) /* ty=(Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) */
}

def @main() -> Tensor[(5, 15, 8), float64] {
  %174 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %176 = rsqrt(%175) /* ty=Tensor[(5, 15, 8), float32] */;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(5, 15, 8), float64] */;
  log2(%177) /* ty=Tensor[(5, 15, 8), float64] */
}

def @func_2829(%var_2828: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(4, 15, 8), float32], Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
  %191 = fn (%var_2811: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(4, 15, 8), float32], Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
    %178 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %180 = cast(meta[relay.Constant][12] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %181 = reshape(%179, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
    %182 = reshape(%180, newshape=[2, 3, 14]) /* ty=Tensor[(2, 3, 14), uint8] */;
    %183 = @func_1803(%181, %182) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) */;
    %184 = cast(%var_2811, dtype="float64") /* ty=Tensor[(480), float64] */;
    %185 = reshape(%184, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
    %186 = @func_1030(%185) /* ty=(Tensor[(4, 15, 8), float32],) */;
    %187 = %178.0;
    %188 = %183.1;
    %189 = %186.0;
    %190 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
    (%187, %188, meta[relay.Constant][12] /* ty=Tensor[(84), uint8] */, %189, %var_2811, %190)
  };
  %191(%var_2828) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(4, 15, 8), float32], Tensor[(480), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_4215(%var_4213: int16, %var_4214: Tensor[(21, 1), float32]) -> (Tensor[(480), float64], Tensor[(13, 11), bool], int16, Tensor[(3360), bool], Tensor[(21, 1), float64]) {
  @func_4211(%var_4213, %var_4214) /* ty=(Tensor[(480), float64], Tensor[(13, 11), bool], int16, Tensor[(3360), bool], Tensor[(21, 1), float64]) */
}

def @func_3778(%var_3740: Tensor[(8, 9, 14), float64], %var_3741: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64], Tensor[(8, 9, 14), float32], Tensor[(1, 15, 8), float64]) {
  %192 = cast(%var_3741, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %193 = shape_of(%var_3740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_3740, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = cast(%var_3741, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
  %197 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %198 = floor_divide(%194, %195) /* ty=Tensor[(8, 9, 14), float64] */;
  %199 = erf(%196) /* ty=Tensor[(8, 9, 14), float32] */;
  %200 = %197.0;
  (%198, %199, %200)
}

def @func_836() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %201 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %202 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %203 = %201.0;
  (%202, %203)
}

def @func_3928() -> Tensor[(156), float32] {
  %205 = fn () -> Tensor[(156), float32] {
    %204 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
    %204.4
  };
  %205() /* ty=Tensor[(156), float32] */
}

def @func_338(%var_284: Tensor[(14, 16, 15), bool], %var_285: Tensor[(14, 16, 15), bool], %var_299: Tensor[(48), int16], %var_329: Tensor[(390), float32]) -> (Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) {
  %206 = cast(%var_285, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %207 = shape_of(%var_284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%var_284, dtype="bool") /* ty=Tensor[(14, 16, 15), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %211 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %212 = reshape(%210, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %213 = reshape(%211, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %214 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %215 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %216 = reshape(%214, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %217 = reshape(%215, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %218 = @func_54(%216, %217) /* ty=Tensor[(3, 16), int16] */;
  %219 = cast(%218, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %220 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %221 = reshape(%219, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %222 = reshape(%220, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %223 = cast(%var_329, dtype="float32") /* ty=Tensor[(390), float32] */;
  %224 = cast(%var_299, dtype="int16") /* ty=Tensor[(48), int16] */;
  %225 = reshape(%223, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
  %226 = reshape(%224, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %227 = @func_203(%225, %226) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
  %228 = cast(%var_284, dtype="float32") /* ty=Tensor[(14, 16, 15), float32] */;
  %229 = logical_and(%208, %209) /* ty=Tensor[(14, 16, 15), bool] */;
  %230 = @func_54(%212, %213) /* ty=Tensor[(3, 16), int16] */;
  %231 = @func_54(%221, %222) /* ty=Tensor[(3, 16), int16] */;
  %232 = %227.1;
  %233 = atan(%228) /* ty=Tensor[(14, 16, 15), float32] */;
  (%229, %230, %var_299, %218, %231, %232, %var_329, %233)
}

def @func_2889() -> (Tensor[(1, 15, 8), float64],) {
  @func_2887() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_4967(%var_4966: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), int8], Tensor[(156), float32], Tensor[(1, 15, 8), float32]) {
  %242 = fn (%var_4954: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), int8], Tensor[(156), float32], Tensor[(1, 15, 8), float32]) {
    %234 = @func_4488() /* ty=Tensor[(?, 15, 8), float32] */;
    %235 = cast(%234, dtype="int8") /* ty=Tensor[(?, 15, 8), int8] */;
    %236 = cast(%var_4954, dtype="int8") /* ty=Tensor[(16, 15, 8), int8] */;
    %237 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
    %238 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
    %239 = subtract(%235, %236) /* ty=Tensor[(16, 15, 8), int8] */;
    %240 = %237.4;
    %241 = %238.0;
    (%239, %240, %241)
  };
  %242(%var_4966) /* ty=(Tensor[(16, 15, 8), int8], Tensor[(156), float32], Tensor[(1, 15, 8), float32]) */
}

def @func_3016(%var_3011: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), bool],) {
  %243 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %246 = cast(%var_3011, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %247 = logical_or(%245, %246) /* ty=Tensor[(6, 15, 8), bool] */;
  (%247,)
}

def @func_3019(%var_3017: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), bool],) {
  @func_3016(%var_3017) /* ty=(Tensor[(6, 15, 8), bool],) */
}

def @func_1983() -> (Tensor[(1, 15, 8), float64],) {
  %250 = fn () -> (Tensor[(1, 15, 8), float64],) {
    %248 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
    %249 = %248.3;
    (%249,)
  };
  %250() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_748(%var_747: Tensor[(2, 2, 6), float32]) -> (Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) {
  %257 = fn (%var_717: Tensor[(2, 2, 6), float32]) -> (Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) {
    %251 = cast(%var_717, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
    %252 = log10(%251) /* ty=Tensor[(2, 2, 6), float32] */;
    %253 = cast(%252, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
    %254 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %255 = log(%253) /* ty=Tensor[(2, 2, 6), float32] */;
    %256 = %254.0;
    (%255, %256)
  };
  %257(%var_747) /* ty=(Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) */
}

def @func_921() -> (Tensor[(1, 15, 8), float64],) {
  %258 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
  (%258,)
}

def @func_2077() -> Tensor[(1, 15, 8), float64] {
  @func_627() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_4864(%var_4862: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64]) {
  @func_4861(%var_4862) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_3210(%var_3209: uint16) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(11, 4, 1), bool], uint16, Tensor[(44, 1), uint16], Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64]) {
  %276 = fn (%var_3173: uint16) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(11, 4, 1), bool], uint16, Tensor[(44, 1), uint16], Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64]) {
    %259 = @func_2866() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %260 = @func_2866() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %261 = cast(%var_3173, dtype="uint16") /* ty=uint16 */;
    %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(44, 1), uint16] */, dtype="uint16") /* ty=Tensor[(44, 1), uint16] */;
    %263 = reshape(%261, newshape=[]) /* ty=uint16 */;
    %264 = reshape(%262, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), uint16] */;
    %265 = cast(%var_3173, dtype="uint16") /* ty=uint16 */;
    %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %267 = reshape(%265, newshape=[]) /* ty=uint16 */;
    %268 = reshape(%266, newshape=[16, 3, 14]) /* ty=Tensor[(16, 3, 14), uint16] */;
    %269 = @func_1922(%267, %268) /* ty=(Tensor[(16, 3, 14), bool],) */;
    %270 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %271 = %259.1;
    %272 = %260.0;
    %273 = @func_2352(%263, %264) /* ty=Tensor[(11, 4, 1), bool] */;
    %274 = %269.0;
    %275 = %270.0;
    (%271, %272, %273, %var_3173, meta[relay.Constant][13] /* ty=Tensor[(44, 1), uint16] */, %274, meta[relay.Constant][14] /* ty=Tensor[(672), uint16] */, %275)
  };
  %276(%var_3209) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(11, 4, 1), bool], uint16, Tensor[(44, 1), uint16], Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64]) */
}

def @func_203(%var_148: Tensor[(3, 13, 10), float32], %var_161: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) {
  %277 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %278 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %279 = reshape(%277, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %280 = reshape(%278, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %281 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %282 = cast(%var_161, dtype="int16") /* ty=Tensor[(48), int16] */;
  %283 = reshape(%281, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %284 = reshape(%282, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %285 = cast(%var_148, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %286 = atan(%285) /* ty=Tensor[(3, 13, 10), float32] */;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %288 = @func_54(%283, %284) /* ty=Tensor[(3, 16), int16] */;
  %289 = cast(%288, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %290 = @func_54(%279, %280) /* ty=Tensor[(3, 16), int16] */;
  %291 = cast(%290, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
  %292 = reshape(%289, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %293 = reshape(%291, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
  %294 = sinh(%287) /* ty=Tensor[(3, 13, 10), float32] */;
  %295 = @func_54(%292, %293) /* ty=Tensor[(3, 16), int16] */;
  (%290, %var_161, %288, %294, %295)
}

def @func_687(%var_684: Tensor[(8, 7, 15), float32], %var_685: Tensor[(390), float32], %var_686: Tensor[(48), int16]) -> (Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) {
  %317 = fn (%var_629: Tensor[(8, 7, 15), float32], %var_658: Tensor[(390), float32], %var_659: Tensor[(48), int16]) -> (Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) {
    %296 = cast(%var_629, dtype="int8") /* ty=Tensor[(8, 7, 15), int8] */;
    %297 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(8, 7, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %298 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 7, 15), float32] */, dtype="int8") /* ty=Tensor[(8, 7, 15), int8] */;
    %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %300 = cast(%var_658, dtype="float32") /* ty=Tensor[(390), float32] */;
    %301 = cast(%var_659, dtype="int16") /* ty=Tensor[(48), int16] */;
    %302 = reshape(%300, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
    %303 = reshape(%301, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %304 = @func_203(%302, %303) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
    %305 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
    %306 = shape_of(%var_629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%var_629, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %309 = mod(%307, %308) /* ty=Tensor[(8, 7, 15), float32] */;
    %310 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
    %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%309, dtype="float32") /* ty=Tensor[(8, 7, 15), float32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %314 = maximum(%298, %299) /* ty=Tensor[(8, 7, 15), int8] */;
    %315 = %304.3;
    %316 = floor_divide(%312, %313) /* ty=Tensor[(8, 7, 15), float32] */;
    (%314, %315, %var_658, %var_659, %316)
  };
  %317(%var_684, %var_685, %var_686) /* ty=(Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) */
}

def @func_4683() -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(13, 13, 13), float32], Tensor[(2197), float32]) {
  %325 = fn () -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(13, 13, 13), float32], Tensor[(2197), float32]) {
    %318 = @func_4150() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %319 = cast(meta[relay.Constant][17] /* ty=Tensor[(2197), float32] */, dtype="float32") /* ty=Tensor[(2197), float32] */;
    %320 = reshape(%319, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
    %321 = @func_2915(%320) /* ty=(Tensor[(13, 13, 13), float32],) */;
    %322 = %318.0;
    %323 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    %324 = %321.0;
    (%322, %323, %324, meta[relay.Constant][17] /* ty=Tensor[(2197), float32] */)
  };
  %325() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(13, 13, 13), float32], Tensor[(2197), float32]) */
}

def @func_4430(%var_4428: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float32], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  @func_4427(%var_4428) /* ty=(Tensor[(1, 15, 8), float32], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_3245(%var_3243: Tensor[(2, 12, 2), float32]) -> (Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) {
  @func_3242(%var_3243) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) */
}

def @func_1491(%var_1484: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) {
  %326 = cast(%var_1484, dtype="float64") /* ty=Tensor[(600), float64] */;
  %327 = reshape(%326, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float64] */;
  %328 = @func_1063(%327) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */;
  %329 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
  %330 = %328.0;
  (%329, %330, %var_1484)
}

def @func_3782(%var_3780: Tensor[(8, 9, 14), float64], %var_3781: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64], Tensor[(8, 9, 14), float32], Tensor[(1, 15, 8), float64]) {
  @func_3778(%var_3780, %var_3781) /* ty=(Tensor[(8, 9, 14), float64], Tensor[(8, 9, 14), float32], Tensor[(1, 15, 8), float64]) */
}

def @func_4861(%var_4818: Tensor[(600), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(600), float64], Tensor[(1, 15, 8), float64]) {
  %331 = cast(%var_4818, dtype="float64") /* ty=Tensor[(600), float64] */;
  %332 = reshape(%331, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %333 = @func_1491(%332) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(5, 15, 8), bool], Tensor[(600), float64]) */;
  %334 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %335 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
  %336 = %333.0;
  %337 = %334.0;
  (%335, %336, %var_4818, %337)
}

def @func_4596() -> (Tensor[(1, 15, 8), float32],) {
  @func_4594() /* ty=(Tensor[(1, 15, 8), float32],) */
}

def @func_2311(%var_2309: Tensor[(16, 15, 8), float64], %var_2310: Tensor[(16, 15, 8), float64]) -> (Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) {
  %354 = fn (%var_2269: Tensor[(16, 15, 8), float64], %var_2274: Tensor[(16, 15, 8), float64]) -> (Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) {
    %338 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    %339 = cast(%338, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %340 = cast(%var_2269, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
    %341 = cast(%var_2274, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
    %342 = shape_of(%var_2269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %343 = cast(%var_2269, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %345 = cast(meta[relay.Constant][18] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 165), uint8] */, dtype="uint8") /* ty=Tensor[(15, 165), uint8] */;
    %347 = reshape(%345, newshape=[]) /* ty=uint8 */;
    %348 = reshape(%346, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
    %349 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 165), uint8] */, dtype="float32") /* ty=Tensor[(15, 165), float32] */;
    %350 = not_equal(%339, %340) /* ty=Tensor[(16, 15, 8), bool] */;
    %351 = less_equal(%343, %344) /* ty=Tensor[(16, 15, 8), bool] */;
    %352 = @func_949(%347, %348) /* ty=Tensor[(11, 15, 15), uint8] */;
    %353 = atanh(%349) /* ty=Tensor[(15, 165), float32] */;
    (%350, %351, %352, meta[relay.Constant][18] /* ty=uint8 */, %353)
  };
  %354(%var_2309, %var_2310) /* ty=(Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) */
}

def @func_3036() -> Tensor[(?, 15, 8), int64] {
  @func_2765() /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_4529() -> (Tensor[(1, 15, 8), float64],) {
  %355 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %356 = %355.0;
  (%356,)
}

def @func_4255(%var_4253: Tensor[(1, 6, 1), float32]) -> (Tensor[(1, 6, 1), float32],) {
  @func_4252(%var_4253) /* ty=(Tensor[(1, 6, 1), float32],) */
}

def @func_4992() -> (Tensor[(1, 15, 8), float64],) {
  %359 = fn () -> (Tensor[(1, 15, 8), float64],) {
    %357 = @func_4004() /* ty=(Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) */;
    %358 = %357.1;
    (%358,)
  };
  %359() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_4274(%var_4272: Tensor[(14, 10, 1), float32], %var_4273: Tensor[(14, 10, 16), float32]) -> (Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) {
  @func_4270(%var_4272, %var_4273) /* ty=(Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) */
}

def @func_2767() -> Tensor[(?, 15, 8), int64] {
  @func_2765() /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_3543() -> (Tensor[(1, 15, 8), float32], Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float32]) {
  %366 = fn () -> (Tensor[(1, 15, 8), float32], Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float32]) {
    %360 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
    %361 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
    %362 = cast(%361, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
    %363 = %360.0;
    %364 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
    %365 = exp(%362) /* ty=Tensor[(1, 15, 8), float32] */;
    (%363, %364, %365)
  };
  %366() /* ty=(Tensor[(1, 15, 8), float32], Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float32]) */
}

def @func_1033(%var_1031: Tensor[(4, 15, 8), float64]) -> (Tensor[(4, 15, 8), float32],) {
  @func_1030(%var_1031) /* ty=(Tensor[(4, 15, 8), float32],) */
}

def @func_1925(%var_1923: uint16, %var_1924: Tensor[(16, 3, 14), uint16]) -> (Tensor[(16, 3, 14), bool],) {
  %370 = fn (%var_1915: uint16, %var_1916: Tensor[(16, 3, 14), uint16]) -> (Tensor[(16, 3, 14), bool],) {
    %367 = cast(%var_1915, dtype="bool") /* ty=bool */;
    %368 = cast(%var_1916, dtype="bool") /* ty=Tensor[(16, 3, 14), bool] */;
    %369 = equal(%367, %368) /* ty=Tensor[(16, 3, 14), bool] */;
    (%369,)
  };
  %370(%var_1923, %var_1924) /* ty=(Tensor[(16, 3, 14), bool],) */
}

def @func_2458(%var_2455: Tensor[(858), float32], %var_2456: Tensor[(13, 4, 13), float64], %var_2457: Tensor[(13, 4, 13), float32]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), int8], Tensor[(1, 15, 8), float64], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), bool]) {
  @func_2453(%var_2455, %var_2456, %var_2457) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), int8], Tensor[(1, 15, 8), float64], Tensor[(13, 4, 13), float32], Tensor[(13, 4, 13), bool]) */
}

def @func_2704(%var_2703: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), float64],) {
  %375 = fn (%var_2697: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), float64],) {
    %371 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    %372 = cast(%371, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %373 = cast(%var_2697, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
    %374 = mod(%372, %373) /* ty=Tensor[(12, 15, 8), float64] */;
    (%374,)
  };
  %375(%var_2703) /* ty=(Tensor[(12, 15, 8), float64],) */
}

def @func_4735(%var_4731: Tensor[(6, 12, 16), uint16], %var_4732: Tensor[(6, 12, 16), uint16], %var_4733: Tensor[(140), float32], %var_4734: Tensor[(1820), float32]) -> (Tensor[(6, 12, 16), float64], Tensor[(14, 10, 13), bool], Tensor[(140), float32], Tensor[(1820), float32], Tensor[(7, 3), float32]) {
  %398 = fn (%var_4699: Tensor[(6, 12, 16), uint16], %var_4700: Tensor[(6, 12, 16), uint16], %var_4724: Tensor[(140), float32], %var_4725: Tensor[(1820), float32]) -> (Tensor[(6, 12, 16), float64], Tensor[(14, 10, 13), bool], Tensor[(140), float32], Tensor[(1820), float32], Tensor[(7, 3), float32]) {
    %376 = cast(%var_4700, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
    %377 = shape_of(%var_4699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %378 = cast(%var_4699, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
    %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %380 = less(%378, %379) /* ty=Tensor[(6, 12, 16), bool] */;
    %381 = cast(%380, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
    %382 = cosh(%381) /* ty=Tensor[(6, 12, 16), float32] */;
    %383 = cast(%380, dtype="int64") /* ty=Tensor[(6, 12, 16), int64] */;
    %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%382, dtype="int64") /* ty=Tensor[(6, 12, 16), int64] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %387 = left_shift(%385, %386) /* ty=Tensor[(6, 12, 16), int64] */;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %389 = cast(%var_4724, dtype="float32") /* ty=Tensor[(140), float32] */;
    %390 = cast(%var_4725, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %391 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
    %392 = reshape(%389, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %393 = reshape(%390, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
    %394 = reshape(%391, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %395 = @func_4364(%392, %393, %394) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) */;
    %396 = erf(%388) /* ty=Tensor[(6, 12, 16), float64] */;
    %397 = %395.3;
    (%396, %397, %var_4724, %var_4725, meta[relay.Constant][20] /* ty=Tensor[(7, 3), float32] */)
  };
  %398(%var_4731, %var_4732, %var_4733, %var_4734) /* ty=(Tensor[(6, 12, 16), float64], Tensor[(14, 10, 13), bool], Tensor[(140), float32], Tensor[(1820), float32], Tensor[(7, 3), float32]) */
}

def @func_800(%var_796: Tensor[(840), float32], %var_797: Tensor[(390), float32], %var_798: Tensor[(48), int16], %var_799: Tensor[(390), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) {
  %419 = fn (%var_760: Tensor[(840), float32], %var_761: Tensor[(390), float32], %var_762: Tensor[(48), int16], %var_770: Tensor[(390), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) {
    %399 = cast(%var_760, dtype="float32") /* ty=Tensor[(840), float32] */;
    %400 = cast(%var_761, dtype="float32") /* ty=Tensor[(390), float32] */;
    %401 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
    %402 = reshape(%399, newshape=[8, 7, 15]) /* ty=Tensor[(8, 7, 15), float32] */;
    %403 = reshape(%400, newshape=[390]) /* ty=Tensor[(390), float32] */;
    %404 = reshape(%401, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %405 = @func_683(%402, %403, %404) /* ty=(Tensor[(8, 7, 15), int8], Tensor[(3, 13, 10), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(8, 7, 15), float32]) */;
    %406 = cast(%var_770, dtype="bool") /* ty=Tensor[(390), bool] */;
    %407 = shape_of(%var_761, dtype="int32") /* ty=Tensor[(1), int32] */;
    %408 = cast(%var_761, dtype="bool") /* ty=Tensor[(390), bool] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?), bool] */;
    %410 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
    %411 = cast(%var_762, dtype="int16") /* ty=Tensor[(48), int16] */;
    %412 = reshape(%410, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %413 = reshape(%411, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %414 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    %415 = %405.4;
    %416 = less_equal(%408, %409) /* ty=Tensor[(390), bool] */;
    %417 = @func_54(%412, %413) /* ty=Tensor[(3, 16), int16] */;
    %418 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    (%414, %415, %var_760, %var_762, %416, %417, %418)
  };
  %419(%var_796, %var_797, %var_798, %var_799) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) */
}

def @func_1338(%var_1335: uint8, %var_1336: Tensor[(2475, 1), uint8], %var_1337: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(11, 15, 15), uint8], Tensor[(2475, 1), uint8], Tensor[(1, 15, 8), float64], Tensor[(4, 15, 8), bool], Tensor[(4, 15, 8), uint8]) {
  @func_1333(%var_1335, %var_1336, %var_1337) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(11, 15, 15), uint8], Tensor[(2475, 1), uint8], Tensor[(1, 15, 8), float64], Tensor[(4, 15, 8), bool], Tensor[(4, 15, 8), uint8]) */
}

def @func_1807(%var_1805: Tensor[(2, 3, 14), uint8], %var_1806: Tensor[(2, 3, 14), uint8]) -> (Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) {
  @func_1803(%var_1805, %var_1806) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_2187(%var_2186: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) {
  %448 = fn (%var_2133: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) {
    %420 = cast(meta[relay.Constant][21] /* ty=Tensor[(65, 6), float32] */, dtype="float32") /* ty=Tensor[(65, 6), float32] */;
    %421 = cast(%var_2133, dtype="int16") /* ty=Tensor[(48), int16] */;
    %422 = reshape(%420, newshape=[3, 13, 10]) /* ty=Tensor[(3, 13, 10), float32] */;
    %423 = reshape(%421, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %424 = @func_203(%422, %423) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */;
    %425 = cast(%var_2133, dtype="int16") /* ty=Tensor[(48), int16] */;
    %426 = reshape(%425, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %427 = @func_940(%426) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
    %428 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
    %429 = %428.1;
    %430 = cast(%429, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %431 = asin(%430) /* ty=Tensor[(1, 15, 8), float64] */;
    %432 = cast(%431, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %433 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(9, 15, 8), bool] */;
    %434 = greater(%432, %433) /* ty=Tensor[(9, 15, 8), bool] */;
    %435 = cast(%434, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
    %436 = cast(%431, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
    %437 = bitwise_or(%435, %436) /* ty=Tensor[(9, 15, 8), int64] */;
    %438 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 15, 8), float64] */, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
    %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(%437, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %442 = minimum(%440, %441) /* ty=Tensor[(9, 15, 8), uint16] */;
    %443 = cast(%431, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %444 = cast(%442, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
    %445 = %424.4;
    %446 = %427.3;
    %447 = mod(%443, %444) /* ty=Tensor[(9, 15, 8), float64] */;
    (%445, meta[relay.Constant][21] /* ty=Tensor[(65, 6), float32] */, %var_2133, %446, %447)
  };
  %448(%var_2186) /* ty=(Tensor[(3, 16), int16], Tensor[(65, 6), float32], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(9, 15, 8), float64]) */
}

def @func_3399(%var_3396: int16, %var_3397: Tensor[(3360), bool], %var_3398: Tensor[(21), float32]) -> (Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) {
  %471 = fn (%var_3295: int16, %var_3366: Tensor[(3360), bool], %var_3377: Tensor[(21), float32]) -> (Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) {
    %449 = cast(%var_3295, dtype="bool") /* ty=bool */;
    %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 14, 6), int16] */, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
    %451 = cast(meta[relay.Constant][24] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
    %452 = cast(meta[relay.Constant][24] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
    %453 = cast(meta[relay.Constant][25] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %454 = reshape(%451, newshape=[13, 11]) /* ty=Tensor[(13, 11), int64] */;
    %455 = reshape(%452, newshape=[13, 11]) /* ty=Tensor[(13, 11), int64] */;
    %456 = reshape(%453, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
    %457 = @func_1883(%454, %455, %456) /* ty=(Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) */;
    %458 = cast(%var_3366, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %459 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(3360), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %460 = cast(meta[relay.Constant][25] /* ty=Tensor[(3360), bool] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?), float64] */;
    %462 = cast(%var_3377, dtype="float32") /* ty=Tensor[(21), float32] */;
    %463 = cast(%var_3295, dtype="uint8") /* ty=uint8 */;
    %464 = reshape(%462, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
    %465 = reshape(%463, newshape=[]) /* ty=uint8 */;
    %466 = @func_2480(%464, %465) /* ty=(Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) */;
    %467 = greater_equal(%449, %450) /* ty=Tensor[(11, 14, 6), bool] */;
    %468 = %457.0;
    %469 = floor_mod(%460, %461) /* ty=Tensor[(3360), float64] */;
    %470 = %466.2;
    (%467, %468, meta[relay.Constant][24] /* ty=Tensor[(143), int64] */, %469, %470, %var_3377)
  };
  %471(%var_3396, %var_3397, %var_3398) /* ty=(Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) */
}

def @func_2079() -> Tensor[(1, 15, 8), float64] {
  @func_2077() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_713(%var_712: Tensor[(13, 11, 6), float32]) -> (Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
  %485 = fn (%var_694: Tensor[(13, 11, 6), float32]) -> (Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
    %472 = cast(%var_694, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
    %473 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(13, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 11, 6), float32] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %476 = floor_divide(%474, %475) /* ty=Tensor[(13, 11, 6), float32] */;
    %477 = cast(%476, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
    %478 = cast(meta[relay.Constant][27] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %479 = cast(meta[relay.Constant][27] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %480 = reshape(%478, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %481 = reshape(%479, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %482 = sin(%477) /* ty=Tensor[(13, 11, 6), float64] */;
    %483 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
    %484 = @func_54(%480, %481) /* ty=Tensor[(3, 16), int16] */;
    (%482, %483, %484, meta[relay.Constant][27] /* ty=Tensor[(48), int16] */)
  };
  %485(%var_712) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */
}

def @func_4798(%var_4794: Tensor[(16, 4, 3), float64], %var_4795: Tensor[(14, 130), float32], %var_4796: Tensor[(21), float32], %var_4797: Tensor[(5, 15, 8), bool]) -> (Tensor[(16, 4, 3), float64], Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(14, 130), float32], Tensor[(21), float32], Tensor[(5, 15, 8), bool], Tensor[(?, 24), bool]) {
  %512 = fn (%var_4741: Tensor[(16, 4, 3), float64], %var_4759: Tensor[(14, 130), float32], %var_4760: Tensor[(21), float32], %var_4770: Tensor[(5, 15, 8), bool]) -> (Tensor[(16, 4, 3), float64], Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(14, 130), float32], Tensor[(21), float32], Tensor[(5, 15, 8), bool], Tensor[(?, 24), bool]) {
    %486 = cast(%var_4741, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
    %487 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(16, 4, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 4, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %490 = cast(meta[relay.Constant][29] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %491 = cast(%var_4759, dtype="float32") /* ty=Tensor[(14, 130), float32] */;
    %492 = cast(%var_4760, dtype="float32") /* ty=Tensor[(21), float32] */;
    %493 = reshape(%490, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %494 = reshape(%491, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), float32] */;
    %495 = reshape(%492, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %496 = @func_4364(%493, %494, %495) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) */;
    %497 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
    %498 = cast(%var_4770, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%497, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %502 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
    %503 = %502.2;
    %504 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 24), float32] */, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
    %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(2), int32] */;
    %506 = cast(%503, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
    %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %508 = multiply(%488, %489) /* ty=Tensor[(16, 4, 3), float64] */;
    %509 = %496.0;
    %510 = logical_and(%500, %501) /* ty=Tensor[(5, 15, 8), bool] */;
    %511 = not_equal(%506, %507) /* ty=Tensor[(?, 24), bool] */;
    (%508, %509, meta[relay.Constant][29] /* ty=Tensor[(140), float32] */, %var_4759, %var_4760, %510, %511)
  };
  %512(%var_4794, %var_4795, %var_4796, %var_4797) /* ty=(Tensor[(16, 4, 3), float64], Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(14, 130), float32], Tensor[(21), float32], Tensor[(5, 15, 8), bool], Tensor[(?, 24), bool]) */
}

def @func_2104(%var_2103: Tensor[(858), float32]) -> (Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) {
  %527 = fn (%var_2098: Tensor[(858), float32]) -> (Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) {
    %513 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %514 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %515 = reshape(%513, newshape=[]) /* ty=uint16 */;
    %516 = reshape(%514, newshape=[16, 3, 14]) /* ty=Tensor[(16, 3, 14), uint16] */;
    %517 = @func_1922(%515, %516) /* ty=(Tensor[(16, 3, 14), bool],) */;
    %518 = @func_2077() /* ty=Tensor[(1, 15, 8), float64] */;
    %519 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
    %520 = cast(%518, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %521 = cast(%var_2098, dtype="float32") /* ty=Tensor[(858), float32] */;
    %522 = reshape(%521, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float32] */;
    %523 = @func_711(%522) /* ty=(Tensor[(13, 11, 6), float64], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */;
    %524 = %517.0;
    %525 = divide(%519, %520) /* ty=Tensor[(1, 15, 8), float64] */;
    %526 = %523.0;
    (%524, meta[relay.Constant][32] /* ty=Tensor[(672), uint16] */, %525, %526, %var_2098)
  };
  %527(%var_2103) /* ty=(Tensor[(16, 3, 14), bool], Tensor[(672), uint16], Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32]) */
}

def @func_3666() -> (Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) {
  %528 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 1, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
  %529 = acosh(%528) /* ty=Tensor[(4, 1, 6), float32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %531 = acos(%530) /* ty=Tensor[(4, 1, 6), float64] */;
  %532 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 1, 6), float32] */, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %536 = @func_2765() /* ty=Tensor[(?, 15, 8), int64] */;
  %537 = not_equal(%534, %535) /* ty=Tensor[(4, ?, 6), bool] */;
  (%536, %537)
}

def @func_1398() -> (Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) {
  %538 = cast(5.6353f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %539 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %540 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 24), float32] */, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
  %541 = reshape(%540, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %542 = @func_746(%541) /* ty=(Tensor[(2, 2, 6), float32], Tensor[(1, 15, 8), float64]) */;
  %543 = add(%538, %539) /* ty=Tensor[(8, 11, 10), float64] */;
  %544 = %542.1;
  (%543, %544, meta[relay.Constant][35] /* ty=Tensor[(1, 24), float32] */)
}

def @func_4211(%var_4183: int16, %var_4185: Tensor[(21, 1), float32]) -> (Tensor[(480), float64], Tensor[(13, 11), bool], int16, Tensor[(3360), bool], Tensor[(21, 1), float64]) {
  %545 = @func_3906() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) */;
  %546 = cast(%var_4183, dtype="int16") /* ty=int16 */;
  %547 = cast(meta[relay.Constant][36] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %548 = cast(%var_4185, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %549 = reshape(%546, newshape=[]) /* ty=int16 */;
  %550 = reshape(%547, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
  %551 = reshape(%548, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %552 = @func_3395(%549, %550, %551) /* ty=(Tensor[(11, 14, 6), bool], Tensor[(13, 11), bool], Tensor[(143), int64], Tensor[(3360), float64], uint8, Tensor[(21), float32]) */;
  %553 = cast(%var_4185, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %554 = %545.3;
  %555 = %552.1;
  %556 = log10(%553) /* ty=Tensor[(21, 1), float64] */;
  (%554, %555, %var_4183, meta[relay.Constant][36] /* ty=Tensor[(3360), bool] */, %556)
}

def @func_4004() -> (Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) {
  %557 = cast(meta[relay.Constant][37] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %558 = reshape(%557, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), float32] */;
  %559 = @func_3242(%558) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16]) */;
  %560 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
  %561 = %559.1;
  (%560, %561, meta[relay.Constant][37] /* ty=Tensor[(48), float32] */)
}

def @func_2666() -> (Tensor[(1, 15, 8), float64],) {
  %562 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %563 = %562.0;
  (%563,)
}

def @func_2668() -> (Tensor[(1, 15, 8), float64],) {
  @func_2666() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_5086() -> Tensor[(1, 15, 8), float64] {
  @func_5084() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_2887() -> (Tensor[(1, 15, 8), float64],) {
  %564 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %565 = %564.0;
  (%565,)
}

def @func_1433(%var_1431: Tensor[(3, 9, 11), float64]) -> Tensor[(3, 9, 11), float32] {
  @func_1430(%var_1431) /* ty=Tensor[(3, 9, 11), float32] */
}

def @func_1951(%var_1949: Tensor[(2, 6, 13), float32]) -> Tensor[(2, 6, 13), float32] {
  @func_1948(%var_1949) /* ty=Tensor[(2, 6, 13), float32] */
}

def @func_2255(%var_2253: Tensor[(6, 100), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(48), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(5, 15, 8), float32], Tensor[(6, 100), float64]) {
  @func_2252(%var_2253) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(48), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64], Tensor[(84), uint8], Tensor[(5, 15, 8), float32], Tensor[(6, 100), float64]) */
}

def @func_4065(%var_4064: Tensor[(720), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(6, 15, 8), bool], Tensor[(720), float64]) {
  %572 = fn (%var_4046: Tensor[(720), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(6, 15, 8), bool], Tensor[(720), float64]) {
    %566 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %567 = cast(%var_4046, dtype="float64") /* ty=Tensor[(720), float64] */;
    %568 = reshape(%567, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
    %569 = @func_3016(%568) /* ty=(Tensor[(6, 15, 8), bool],) */;
    %570 = %566.0;
    %571 = %569.0;
    (%570, %571, %var_4046)
  };
  %572(%var_4064) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(6, 15, 8), bool], Tensor[(720), float64]) */
}

def @func_4270(%var_4257: Tensor[(14, 10, 1), float32], %var_4265: Tensor[(14, 10, 16), float32]) -> (Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) {
  %573 = cast(%var_4257, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
  %574 = cast(%var_4257, dtype="float32") /* ty=Tensor[(14, 10, 1), float32] */;
  %575 = sinh(%574) /* ty=Tensor[(14, 10, 1), float32] */;
  %576 = cast(%575, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
  %577 = cast(%var_4265, dtype="bool") /* ty=Tensor[(14, 10, 16), bool] */;
  %578 = cos(%573) /* ty=Tensor[(14, 10, 1), float32] */;
  %579 = not_equal(%576, %577) /* ty=Tensor[(14, 10, 16), bool] */;
  (%578, %579)
}

def @func_207(%var_205: Tensor[(3, 13, 10), float32], %var_206: Tensor[(48), int16]) -> (Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) {
  @func_203(%var_205, %var_206) /* ty=(Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 13, 10), float32], Tensor[(3, 16), int16]) */
}

def @func_4489() -> Tensor[(?, 15, 8), float32] {
  %588 = fn () -> Tensor[(?, 15, 8), float32] {
    %580 = @func_2585() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %581 = %580.0;
    %582 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %583 = %582.0;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
    %585 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%581, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%586, %587) /* ty=Tensor[(?, 15, 8), float32] */
  };
  %588() /* ty=Tensor[(?, 15, 8), float32] */
}

def @func_2866() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %589 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %590 = %589.0;
  %591 = @func_1464() /* ty=Tensor[(1, 15, 8), float64] */;
  (%590, %591)
}

def @func_2765() -> Tensor[(?, 15, 8), int64] {
  %592 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %595 = cosh(%594) /* ty=Tensor[(1, 15, 8), float32] */;
  %596 = cast(%593, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%598, %599) /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_3907() -> (Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) {
  %615 = fn () -> (Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) {
    %600 = cast(meta[relay.Constant][39] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %601 = reshape(%600, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
    %602 = @func_1030(%601) /* ty=(Tensor[(4, 15, 8), float32],) */;
    %603 = %602.0;
    %604 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
    %605 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
    %606 = reshape(%604, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), float64] */;
    %607 = reshape(%605, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), float64] */;
    %608 = @func_2308(%606, %607) /* ty=(Tensor[(16, 15, 8), bool], Tensor[(16, 15, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(15, 165), float32]) */;
    %609 = %608.3;
    %610 = cast(%603, dtype="int16") /* ty=Tensor[(4, 15, 8), int16] */;
    %611 = cast(%609, dtype="int16") /* ty=int16 */;
    %612 = @func_3036() /* ty=Tensor[(?, 15, 8), int64] */;
    %613 = @func_3726() /* ty=Tensor[(5, 15, 8), bool] */;
    %614 = bitwise_or(%610, %611) /* ty=Tensor[(4, 15, 8), int16] */;
    (%612, %613, meta[relay.Constant][38] /* ty=Tensor[(4, 480), float64] */, meta[relay.Constant][39] /* ty=Tensor[(480), float64] */, %614)
  };
  %615() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) */
}

def @func_1887(%var_1884: Tensor[(13, 11), int64], %var_1885: Tensor[(13, 11), int64], %var_1886: Tensor[(3360), bool]) -> (Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) {
  %631 = fn (%var_1839: Tensor[(13, 11), int64], %var_1840: Tensor[(13, 11), int64], %var_1864: Tensor[(3360), bool]) -> (Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) {
    %616 = cast(%var_1840, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
    %617 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(2), int32] */;
    %618 = cast(%var_1839, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %620 = cast(%var_1864, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %621 = cast(%var_1864, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %622 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 4), int16] */, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
    %623 = cast(meta[relay.Constant][41] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %624 = reshape(%620, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), bool] */;
    %625 = reshape(%621, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), bool] */;
    %626 = reshape(%622, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %627 = reshape(%623, newshape=[390]) /* ty=Tensor[(390), float32] */;
    %628 = @func_338(%624, %625, %626, %627) /* ty=(Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) */;
    %629 = less(%618, %619) /* ty=Tensor[(13, 11), bool] */;
    %630 = %628.3;
    (%629, %630, %var_1864, meta[relay.Constant][40] /* ty=Tensor[(12, 4), int16] */, meta[relay.Constant][41] /* ty=Tensor[(390), float32] */)
  };
  %631(%var_1884, %var_1885, %var_1886) /* ty=(Tensor[(13, 11), bool], Tensor[(3, 16), int16], Tensor[(3360), bool], Tensor[(12, 4), int16], Tensor[(390), float32]) */
}

def @func_2868() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  @func_2866() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_2917(%var_2916: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32],) {
  %637 = fn (%var_2911: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32],) {
    %632 = cast(%var_2911, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %633 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(13, 13, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 13, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %636 = divide(%634, %635) /* ty=Tensor[(13, 13, 13), float32] */;
    (%636,)
  };
  %637(%var_2916) /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_344(%var_340: Tensor[(14, 16, 15), bool], %var_341: Tensor[(14, 16, 15), bool], %var_342: Tensor[(48), int16], %var_343: Tensor[(390), float32]) -> (Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) {
  @func_338(%var_340, %var_341, %var_342, %var_343) /* ty=(Tensor[(14, 16, 15), bool], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(390), float32], Tensor[(14, 16, 15), float32]) */
}

def @func_1030(%var_1021: Tensor[(4, 15, 8), float64]) -> (Tensor[(4, 15, 8), float32],) {
  %638 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %639 = %638.0;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %641 = cast(%var_1021, dtype="float32") /* ty=Tensor[(4, 15, 8), float32] */;
  %642 = power(%640, %641) /* ty=Tensor[(4, 15, 8), float32] */;
  (%642,)
}

def @func_628() -> Tensor[(1, 15, 8), float64] {
  %644 = fn () -> Tensor[(1, 15, 8), float64] {
    %643 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %643.0
  };
  %644() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_4657() -> (Tensor[(8, 11, 10), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
  %651 = fn () -> (Tensor[(8, 11, 10), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) {
    %645 = @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */;
    %646 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %647 = reshape(%646, newshape=[48]) /* ty=Tensor[(48), int16] */;
    %648 = @func_940(%647) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(3, 16), int16]) */;
    %649 = %645.0;
    %650 = %648.3;
    (%649, %650, meta[relay.Constant][43] /* ty=Tensor[(48), int16] */)
  };
  %651() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(3, 16), int16], Tensor[(48), int16]) */
}

def @func_3288() -> (Tensor[(1, 15, 8), float32],) {
  @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */
}

def @func_1948(%var_1945: Tensor[(2, 6, 13), float32]) -> Tensor[(2, 6, 13), float32] {
  %652 = cast(%var_1945, dtype="float32") /* ty=Tensor[(2, 6, 13), float32] */;
  atanh(%652) /* ty=Tensor[(2, 6, 13), float32] */
}

def @func_3727() -> Tensor[(5, 15, 8), bool] {
  %657 = fn () -> Tensor[(5, 15, 8), bool] {
    %653 = @func_2887() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %654 = %653.0;
    %655 = cast(%654, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %656 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    logical_or(%655, %656) /* ty=Tensor[(5, 15, 8), bool] */
  };
  %657() /* ty=Tensor[(5, 15, 8), bool] */
}

def @func_4006() -> (Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) {
  @func_4004() /* ty=(Tensor[(5, 15, 8), bool], Tensor[(1, 15, 8), float64], Tensor[(48), float32]) */
}

def @func_3506() -> (Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) {
  @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */
}

def @func_2586() -> (Tensor[(1, 15, 8), float64],) {
  %660 = fn () -> (Tensor[(1, 15, 8), float64],) {
    %658 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %659 = %658.1;
    (%659,)
  };
  %660() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_4016() -> (Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
  %665 = fn () -> (Tensor[(480), float64], Tensor[(1, 15, 8), float64]) {
    %661 = @func_3906() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(5, 15, 8), bool], Tensor[(4, 480), float64], Tensor[(480), float64], Tensor[(4, 15, 8), int16]) */;
    %662 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %663 = %661.3;
    %664 = %662.0;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(480), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_4531() -> (Tensor[(1, 15, 8), float64],) {
  @func_4529() /* ty=(Tensor[(1, 15, 8), float64],) */
}

def @func_4368(%var_4365: Tensor[(140), float32], %var_4366: Tensor[(14, 10, 13), float32], %var_4367: Tensor[(21), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) {
  %686 = fn (%var_4320: Tensor[(140), float32], %var_4328: Tensor[(14, 10, 13), float32], %var_4334: Tensor[(21), float32]) -> (Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) {
    %666 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %667 = cast(%var_4320, dtype="float32") /* ty=Tensor[(140), float32] */;
    %668 = cast(meta[relay.Constant][45] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
    %669 = reshape(%667, newshape=[14, 10, 1]) /* ty=Tensor[(14, 10, 1), float32] */;
    %670 = reshape(%668, newshape=[14, 10, 16]) /* ty=Tensor[(14, 10, 16), float32] */;
    %671 = @func_4270(%669, %670) /* ty=(Tensor[(14, 10, 1), float32], Tensor[(14, 10, 16), bool]) */;
    %672 = %671.0;
    %673 = cast(%672, dtype="bool") /* ty=Tensor[(14, 10, 1), bool] */;
    %674 = cast(%var_4328, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
    %675 = cast(%var_4334, dtype="float32") /* ty=Tensor[(21), float32] */;
    %676 = cast(meta[relay.Constant][46] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %677 = reshape(%675, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
    %678 = reshape(%676, newshape=[]) /* ty=uint8 */;
    %679 = @func_2480(%677, %678) /* ty=(Tensor[(3, 1, 7), float32], Tensor[(11, 15, 15), uint8], uint8, Tensor[(1, 2475), uint8]) */;
    %680 = @func_1160() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */;
    %681 = %666.0;
    %682 = greater(%673, %674) /* ty=Tensor[(14, 10, 13), bool] */;
    %683 = %679.2;
    %684 = @func_3036() /* ty=Tensor[(?, 15, 8), int64] */;
    %685 = %680.2;
    (%681, %var_4320, meta[relay.Constant][45] /* ty=Tensor[(2240), float32] */, %682, %683, %var_4334, meta[relay.Constant][46] /* ty=uint8 */, %684, %685)
  };
  %686(%var_4365, %var_4366, %var_4367) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(140), float32], Tensor[(2240), float32], Tensor[(14, 10, 13), bool], uint8, Tensor[(21), float32], uint8, Tensor[(?, 15, 8), int64], Tensor[(48), int16]) */
}

def @func_4594() -> (Tensor[(1, 15, 8), float32],) {
  %687 = @func_3286() /* ty=(Tensor[(1, 15, 8), float32],) */;
  %688 = %687.0;
  (%688,)
}

def @func_2355(%var_2353: uint16, %var_2354: Tensor[(11, 4, 1), uint16]) -> Tensor[(11, 4, 1), bool] {
  %691 = fn (%var_2331: uint16, %var_2332: Tensor[(11, 4, 1), uint16]) -> Tensor[(11, 4, 1), bool] {
    %689 = cast(%var_2331, dtype="bool") /* ty=bool */;
    %690 = cast(%var_2332, dtype="bool") /* ty=Tensor[(11, 4, 1), bool] */;
    less(%689, %690) /* ty=Tensor[(11, 4, 1), bool] */
  };
  %691(%var_2353, %var_2354) /* ty=Tensor[(11, 4, 1), bool] */
}

def @func_1333(%var_1272: uint8, %var_1273: Tensor[(2475, 1), uint8], %var_1276: Tensor[(480), float64]) -> (Tensor[(1, 15, 8), float64], Tensor[(11, 15, 15), uint8], Tensor[(2475, 1), uint8], Tensor[(1, 15, 8), float64], Tensor[(4, 15, 8), bool], Tensor[(4, 15, 8), uint8]) {
  %692 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %693 = cast(%var_1272, dtype="uint8") /* ty=uint8 */;
  %694 = cast(%var_1273, dtype="uint8") /* ty=Tensor[(2475, 1), uint8] */;
  %695 = reshape(%693, newshape=[]) /* ty=uint8 */;
  %696 = reshape(%694, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %697 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
  %698 = cast(%var_1276, dtype="float64") /* ty=Tensor[(480), float64] */;
  %699 = reshape(%698, newshape=[4, 15, 8]) /* ty=Tensor[(4, 15, 8), float64] */;
  %700 = @func_1030(%699) /* ty=(Tensor[(4, 15, 8), float32],) */;
  %701 = %700.0;
  %702 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 15, 8), float32] */, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %706 = subtract(%704, %705) /* ty=Tensor[(4, 15, 8), uint8] */;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(4, 15, 8), float64] */;
  %708 = asinh(%707) /* ty=Tensor[(4, 15, 8), float64] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = greater(%711, %712) /* ty=Tensor[(4, 15, 8), bool] */;
  %714 = cast(%713, dtype="bool") /* ty=Tensor[(4, 15, 8), bool] */;
  %715 = cast(%var_1272, dtype="bool") /* ty=bool */;
  %716 = cast(%var_1276, dtype="uint8") /* ty=Tensor[(480), uint8] */;
  %717 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%708, dtype="uint8") /* ty=Tensor[(4, 15, 8), uint8] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %720 = %692.0;
  %721 = @func_949(%695, %696) /* ty=Tensor[(11, 15, 15), uint8] */;
  %722 = %697.0;
  %723 = less_equal(%714, %715) /* ty=Tensor[(4, 15, 8), bool] */;
  %724 = maximum(%718, %719) /* ty=Tensor[(4, 15, 8), uint8] */;
  (%720, %721, %var_1273, %722, %723, %724)
}

def @func_1065(%var_1064: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) {
  %736 = fn (%var_1042: Tensor[(5, 15, 8), float64]) -> (Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) {
    %725 = @func_599() /* ty=Tensor[(1, 15, 8), float64] */;
    %726 = cast(%725, dtype="int8") /* ty=Tensor[(1, 15, 8), int8] */;
    %727 = cast(%var_1042, dtype="int8") /* ty=Tensor[(5, 15, 8), int8] */;
    %728 = logical_xor(%726, %727) /* ty=Tensor[(5, 15, 8), int8] */;
    %729 = cast(%var_1042, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %731 = cast(%728, dtype="bool") /* ty=Tensor[(5, 15, 8), bool] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %733 = cast(%728, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
    %734 = less_equal(%731, %732) /* ty=Tensor[(5, 15, 8), bool] */;
    %735 = asin(%733) /* ty=Tensor[(5, 15, 8), float32] */;
    (%734, %735)
  };
  %736(%var_1064) /* ty=(Tensor[(5, 15, 8), bool], Tensor[(5, 15, 8), float32]) */
}

def @func_2046(%var_2045: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), bool], Tensor[(12, 15, 8), int64], Tensor[(12, 15, 8), float64]) {
  %750 = fn (%var_1992: Tensor[(12, 15, 8), float64]) -> (Tensor[(12, 15, 8), bool], Tensor[(12, 15, 8), int64], Tensor[(12, 15, 8), float64]) {
    %737 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %738 = %737.0;
    %739 = cast(%738, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %740 = cast(%var_1992, dtype="bool") /* ty=Tensor[(12, 15, 8), bool] */;
    %741 = equal(%739, %740) /* ty=Tensor[(12, 15, 8), bool] */;
    %742 = cast(%741, dtype="bool") /* ty=Tensor[(12, 15, 8), bool] */;
    %743 = cast(%738, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %744 = cast(%var_1992, dtype="int64") /* ty=Tensor[(12, 15, 8), int64] */;
    %745 = cast(%738, dtype="int64") /* ty=Tensor[(1, 15, 8), int64] */;
    %746 = cast(%var_1992, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
    %747 = greater(%742, %743) /* ty=Tensor[(12, 15, 8), bool] */;
    %748 = bitwise_or(%744, %745) /* ty=Tensor[(12, 15, 8), int64] */;
    %749 = cos(%746) /* ty=Tensor[(12, 15, 8), float64] */;
    (%747, %748, %749)
  };
  %750(%var_2045) /* ty=(Tensor[(12, 15, 8), bool], Tensor[(12, 15, 8), int64], Tensor[(12, 15, 8), float64]) */
}

def @func_4151() -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  %759 = fn () -> (Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
    %751 = @func_3666() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(4, ?, 6), bool]) */;
    %752 = @func_1982() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %753 = @func_3112() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
    %754 = %753.1;
    %755 = cast(%754, dtype="float64") /* ty=Tensor[(1, 15, 8), float64] */;
    %756 = %751.0;
    %757 = %752.0;
    %758 = cos(%755) /* ty=Tensor[(1, 15, 8), float64] */;
    (%756, %757, %758)
  };
  %759() /* ty=(Tensor[(?, 15, 8), int64], Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_3038() -> Tensor[(?, 15, 8), int64] {
  @func_3036() /* ty=Tensor[(?, 15, 8), int64] */
}

def @func_1161() -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) {
  %768 = fn () -> (Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) {
    %760 = @func_921() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %761 = cast(meta[relay.Constant][48] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %762 = cast(meta[relay.Constant][48] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %763 = reshape(%761, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %764 = reshape(%762, newshape=[3, 16]) /* ty=Tensor[(3, 16), int16] */;
    %765 = %760.0;
    %766 = @func_54(%763, %764) /* ty=Tensor[(3, 16), int16] */;
    %767 = @func_627() /* ty=Tensor[(1, 15, 8), float64] */;
    (%765, %766, meta[relay.Constant][48] /* ty=Tensor[(48), int16] */, %767)
  };
  %768() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(3, 16), int16], Tensor[(48), int16], Tensor[(1, 15, 8), float64]) */
}

def @func_4097(%var_4095: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  @func_4094(%var_4095) /* ty=Tensor[(2, 6, 2), float32] */
}

def @func_57(%var_55: Tensor[(3, 16), int16], %var_56: Tensor[(3, 16), int16]) -> Tensor[(3, 16), int16] {
  %773 = fn (%var_41: Tensor[(3, 16), int16], %var_42: Tensor[(3, 16), int16]) -> Tensor[(3, 16), int16] {
    %769 = cast(%var_42, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
    %770 = shape_of(%var_41, dtype="int32") /* ty=Tensor[(2), int32] */;
    %771 = cast(%var_41, dtype="int16") /* ty=Tensor[(3, 16), int16] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    logical_xor(%771, %772) /* ty=Tensor[(3, 16), int16] */
  };
  %773(%var_55, %var_56) /* ty=Tensor[(3, 16), int16] */
}

def @func_1573(%var_1506: Tensor[(6, 2, 8), int64], %var_1507: Tensor[(6, 2, 8), int64], %var_1537: Tensor[(390), float32], %var_1555: Tensor[(2475), uint8]) -> (Tensor[(6, 2, 8), int64], Tensor[(3, 16), int16], Tensor[(840), float32], Tensor[(390), float32], Tensor[(48), int16], Tensor[(6, 2, 8), bool], Tensor[(11, 15, 15), uint8], uint8, Tensor[(2475), uint8], Tensor[(6, 2, 8), float32]) {
  %774 = cast(%var_1507, dtype="int64") /* ty=Tensor[(6, 2, 8), int64] */;
  %775 = shape_of(%var_1506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_1506, dtype="int64") /* ty=Tensor[(6, 2, 8), int64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %778 = cast(meta[relay.Constant][49] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %779 = cast(%var_1537, dtype="float32") /* ty=Tensor[(390), float32] */;
  %780 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %781 = cast(%var_1537, dtype="float32") /* ty=Tensor[(390), float32] */;
  %782 = reshape(%778, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %783 = reshape(%779, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %784 = reshape(%780, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %785 = reshape(%781, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %786 = @func_795(%782, %783, %784, %785) /* ty=(Tensor[(1, 15, 8), float64], Tensor[(8, 7, 15), float32], Tensor[(840), float32], Tensor[(48), int16], Tensor[(390), bool], Tensor[(3, 16), int16], Tensor[(1, 15, 8), float64]) */;
  %787 = cast(%var_1506, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %788 = atan(%787) /* ty=Tensor[(6, 2, 8), float64] */;
  %789 = cast(%var_1506, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %793 = cast(meta[relay.Constant][51] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %794 = cast(%var_1555, dtype="uint8") /* ty=Tensor[(2475), uint8] */;
  %795 = reshape(%793, newshape=[]) /* ty=uint8 */;
  %796 = reshape(%794, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), uint8] */;
  %797 = cast(%788, dtype="float32") /* ty=Tensor[(6, 2, 8), float32] */;
  %798 = left_shift(%776, %777) /* ty=Tensor[(6, 2, 8), int64] */;
  %799 = %786.5;
  %800 = greater(%791, %792) /* ty=Tensor[(6, 2, 8), bool] */;
  %801 = @func_949(%795, %796) /* ty=Tensor[(11, 15, 15), uint8] */;
  %802 = log(%797) /* ty=Tensor[(6, 2, 8), float32] */;
  (%798, %799, meta[relay.Constant][49] /* ty=Tensor[(840), float32] */, %var_1537, meta[relay.Constant][50] /* ty=Tensor[(48), int16] */, %800, %801, meta[relay.Constant][51] /* ty=uint8 */, %var_1555, %802)
}

def @func_600() -> Tensor[(1, 15, 8), float64] {
  %804 = fn () -> Tensor[(1, 15, 8), float64] {
    %803 = @func_572() /* ty=(Tensor[(1, 15, 8), float64],) */;
    %803.0
  };
  %804() /* ty=Tensor[(1, 15, 8), float64] */
}

def @func_1430(%var_1416: Tensor[(3, 9, 11), float64]) -> Tensor[(3, 9, 11), float32] {
  %805 = cast(%var_1416, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %806 = acos(%805) /* ty=Tensor[(3, 9, 11), float64] */;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(3, 9, 11), float32] */;
  acosh(%807) /* ty=Tensor[(3, 9, 11), float32] */
}

def @func_838() -> (Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) {
  @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */
}

def @func_3286() -> (Tensor[(1, 15, 8), float32],) {
  %808 = @func_836() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(1, 15, 8), float64]) */;
  %809 = %808.1;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(1, 15, 8), float32] */;
  %811 = log2(%810) /* ty=Tensor[(1, 15, 8), float32] */;
  (%811,)
}

def @func_5084() -> Tensor[(1, 15, 8), float64] {
  %812 = @func_3504() /* ty=(Tensor[(1, 15, 8), float64], Tensor[(13, 11, 6), float64], Tensor[(858), float32], Tensor[(2, 6, 13), float32], Tensor[(156), float32], Tensor[(1, 15, 8), float64], Tensor[(16, 3, 14), bool]) */;
  %812.0
}

def @func_1400() -> (Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) {
  @func_1398() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(1, 15, 8), float64], Tensor[(1, 24), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

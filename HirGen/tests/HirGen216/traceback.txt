==========mod==========
#[version = "0.0.5"]
def @func_6883() -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
  %0 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %1 = @func_5707() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %2 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %3 = %0.3;
  %4 = %1.0;
  (%2, %3, %4)
}

def @func_9082() -> (Tensor[(4, 16, 10), float64],) {
  %5 = @func_3182() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %6 = %5.0;
  (%6,)
}

def @func_3864(%var_3860: Tensor[(1, 468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) {
  %7 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(520, 2), int64] */, dtype="int64") /* ty=Tensor[(520, 2), int64] */;
  %9 = cast(%var_3860, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %10 = reshape(%8, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %11 = reshape(%9, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %12 = @func_2537(%10, %11) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %13 = %7.1;
  %14 = %12.0;
  (%13, %14, meta[relay.Constant][0] /* ty=Tensor[(520, 2), int64] */, %var_3860)
}

def @func_6094() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %15 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %16 = %15.1;
  %17 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
  (%16, %17)
}

def @func_590() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) {
  %18 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %19 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %20 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %21 = %20.0;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = greater_equal(%24, %25) /* ty=Tensor[(4, 16, 10), bool] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %28 = acosh(%27) /* ty=Tensor[(4, 16, 10), float32] */;
  %29 = cast(%26, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %30 = shape_of(%28, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%28, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 468), int16] */, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %34 = reshape(%33, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %35 = @func_490(%34) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %36 = %18.2;
  %37 = %19.0;
  %38 = bitwise_and(%31, %32) /* ty=Tensor[(4, 16, 10), uint16] */;
  %39 = %35.0;
  (%36, %37, %38, %39, meta[relay.Constant][2] /* ty=Tensor[(1, 468), int16] */)
}

def @func_5377() -> (Tensor[(8, 11, 13), float64],) {
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %41 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(8, 11, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %44 = floor_divide(%42, %43) /* ty=Tensor[(8, 11, 13), float64] */;
  (%44,)
}

def @func_7493() -> (Tensor[(10, 9, 12), int32], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 12), float64]) {
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 9, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 9, 1), int32] */;
  %46 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 9, 12), int32] */, dtype="int32") /* ty=Tensor[(10, 9, 12), int32] */;
  %47 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %48 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 9, 12), int32] */, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
  %49 = multiply(%45, %46) /* ty=Tensor[(10, 9, 12), int32] */;
  %50 = %47.0;
  %51 = cos(%48) /* ty=Tensor[(10, 9, 12), float64] */;
  (%49, %50, %51)
}

def @func_6455() -> Tensor[(4, 16, 10), float64] {
  %52 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %52.0
}

def @func_7741() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %53 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %54 = @func_7514() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) */;
  %55 = %54.1;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %57 = @func_5537() /* ty=(Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %58 = %53.1;
  %59 = acos(%56) /* ty=Tensor[(4, 16, 10), float64] */;
  %60 = %57.1;
  (%58, %59, %60)
}

def @func_10324(%var_10316: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(270), int64]) {
  %61 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %62 = cast(%var_10316, dtype="int64") /* ty=Tensor[(270), int64] */;
  %63 = reshape(%62, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %64 = @func_10288(%63) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) */;
  %65 = %61.0;
  %66 = %64.0;
  (%65, %66, %var_10316)
}

def @func_2626() -> Tensor[(4, 16, 10), float64] {
  %67 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %67.0
}

def @func_3492() -> Tensor[(4, 16, 10), float32] {
  %68 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %68.0
}

def @func_2291() -> (Tensor[(4, 16, 10), float64],) {
  %69 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %70 = %69.0;
  (%70,)
}

def @func_3303(%var_3285: Tensor[(3, 16, 5), float64]) -> (Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) {
  %71 = cast(%var_3285, dtype="float64") /* ty=Tensor[(3, 16, 5), float64] */;
  %72 = rsqrt(%71) /* ty=Tensor[(3, 16, 5), float64] */;
  %73 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
  (%72, %73)
}

def @func_2808(%var_2797: Tensor[(9, 10, 15), uint8], %var_2798: Tensor[(9, 10, 15), uint8]) -> Tensor[(9, 10, 15), uint8] {
  %74 = cast(%var_2798, dtype="uint8") /* ty=Tensor[(9, 10, 15), uint8] */;
  %75 = shape_of(%var_2797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_2797, dtype="uint8") /* ty=Tensor[(9, 10, 15), uint8] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%76, %77) /* ty=Tensor[(9, 10, 15), uint8] */
}

def @func_4438(%var_4419: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %78 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %79 = cast(%var_4419, dtype="int16") /* ty=Tensor[(468), int16] */;
  %80 = reshape(%79, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %81 = @func_827(%80) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %82 = %78.0;
  %83 = %81.2;
  %84 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
  (%82, %83, %var_4419, %84)
}

def @func_7196() -> Tensor[(4, 16, 10), float64] {
  %85 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %85.0
}

def @func_827(%var_825: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %86 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %87 = cast(%var_825, dtype="int16") /* ty=Tensor[(468), int16] */;
  %88 = reshape(%87, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %89 = @func_490(%88) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %90 = %86.0;
  %91 = %89.1;
  (%90, %91, %var_825)
}

def @func_5992() -> (Tensor[(4, 16, 10), float64],) {
  %92 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %93 = %92.0;
  (%93,)
}

def @func_3452() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %94 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  %95 = @func_2880() /* ty=Tensor[(7, 13, 4), float64] */;
  (%94, %95)
}

def @func_8320() -> (Tensor[(4, 16, 10), float64],) {
  %96 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %97 = %96.0;
  (%97,)
}

def @func_4323() -> (Tensor[(4, 16, 10), float32],) {
  %98 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
  (%98,)
}

def @func_6787(%var_6706: Tensor[(504), float64], %var_6709: Tensor[(5, 56), bool], %var_6772: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(5, 56), bool], Tensor[(4, 16, 10), float64], Tensor[(234, 2), float32], Tensor[(8, 13, 13), int16], Tensor[(1352), int16], Tensor[(504), int16]) {
  %99 = cast(%var_6706, dtype="float64") /* ty=Tensor[(504), float64] */;
  %100 = cast(%var_6706, dtype="float64") /* ty=Tensor[(504), float64] */;
  %101 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  %102 = cast(%101, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %103 = reshape(%99, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float64] */;
  %104 = reshape(%100, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float64] */;
  %105 = reshape(%102, newshape=[1, 640]) /* ty=Tensor[(1, 640), int16] */;
  %106 = @func_5920(%103, %104, %105) /* ty=(Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) */;
  %107 = cast(%var_6709, dtype="bool") /* ty=Tensor[(5, 56), bool] */;
  %108 = reshape(%107, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), bool] */;
  %109 = @func_6511(%108) /* ty=(Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) */;
  %110 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %111 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
  %112 = %111.0;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %114 = cast(%var_6772, dtype="int16") /* ty=int16 */;
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(1352), int16] */, dtype="int16") /* ty=Tensor[(1352), int16] */;
  %116 = reshape(%114, newshape=[]) /* ty=int16 */;
  %117 = reshape(%115, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), int16] */;
  %118 = @func_3583(%116, %117) /* ty=(Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) */;
  %119 = cast(%var_6706, dtype="int16") /* ty=Tensor[(504), int16] */;
  %120 = cast(%var_6772, dtype="int16") /* ty=int16 */;
  %121 = %106.4;
  %122 = %109.1;
  %123 = %110.0;
  %124 = atanh(%113) /* ty=Tensor[(234, 2), float32] */;
  %125 = %118.0;
  %126 = subtract(%119, %120) /* ty=Tensor[(504), int16] */;
  (%101, %121, %122, %var_6709, %123, %124, %125, meta[relay.Constant][7] /* ty=Tensor[(1352), int16] */, %126)
}

def @func_8374() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %127 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %128 = %127.0;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 16, 10), float32] */, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %133 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %134 = floor_divide(%131, %132) /* ty=Tensor[(4, 16, 10), float64] */;
  %135 = %133.0;
  (%134, %135)
}

def @func_3182() -> (Tensor[(4, 16, 10), float64],) {
  %136 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %137 = %136.0;
  (%137,)
}

def @func_283() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %138 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %139 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%138, %139)
}

def @func_399() -> (Tensor[(4, 16, 10), float64],) {
  %140 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %141 = %140.1;
  (%141,)
}

def @func_6142() -> Tensor[(4, 16, 10), float64] {
  %142 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %142.1
}

def @func_10033() -> (Tensor[(4, 16, 10), float64],) {
  %143 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  (%143,)
}

def @func_4648() -> Tensor[(4, 16, 10), float32] {
  %144 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %144.0
}

def @func_2032(%var_2015: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) {
  %145 = cast(%var_2015, dtype="float64") /* ty=Tensor[(12, 11, 1), float64] */;
  %146 = cast(%var_2015, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %147 = cos(%145) /* ty=Tensor[(12, 11, 1), float64] */;
  %148 = rsqrt(%146) /* ty=Tensor[(12, 11, 1), float32] */;
  (%147, %148)
}

def @func_8285() -> Tensor[(4, 16, 10), float32] {
  @func_4648() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_8761() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(132), float64], Tensor[(132), float64], Tensor[(4, 16, 10), float64]) {
  %149 = @func_2702() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) */;
  %150 = @func_6299() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
  %152 = reshape(%151, newshape=[132]) /* ty=Tensor[(132), float64] */;
  %153 = @func_7070(%152) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) */;
  %154 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %155 = %149.3;
  %156 = %150.0;
  %157 = %153.2;
  %158 = %154.0;
  (%155, %156, %157, meta[relay.Constant][9] /* ty=Tensor[(132), float64] */, %158)
}

def @func_8929(%var_8906: Tensor[(13, 13, 3), float32], %var_8907: Tensor[(13, 13, 3), float32]) -> (Tensor[(13, 13, 3), float32],) {
  %159 = cast(%var_8907, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
  %160 = shape_of(%var_8906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%var_8906, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %163 = mod(%161, %162) /* ty=Tensor[(13, 13, 3), float32] */;
  (%163,)
}

def @func_5765() -> (Tensor[(15, 14, 12), float32],) {
  %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %165 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(15, 14, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %168 = subtract(%166, %167) /* ty=Tensor[(15, 14, 12), float32] */;
  (%168,)
}

def @func_7267(%var_7236: float64, %var_7237: Tensor[(4, 15, 13), float64], %var_7249: Tensor[(40, 26), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(16, 13, 5), float64], Tensor[(40, 26), int64], Tensor[(468, 1), int16], Tensor[(4, 15, 13), float32]) {
  %169 = cast(%var_7236, dtype="bool") /* ty=bool */;
  %170 = cast(%var_7237, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
  %171 = cast(%var_7249, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
  %172 = cast(%var_7249, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
  %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %174 = reshape(%171, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %175 = reshape(%172, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %176 = reshape(%173, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %177 = @func_2440(%174, %175, %176) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %178 = cast(%var_7237, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
  %179 = log2(%178) /* ty=Tensor[(4, 15, 13), float32] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
  %181 = erf(%180) /* ty=Tensor[(4, 15, 13), float32] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
  %183 = less(%169, %170) /* ty=Tensor[(4, 15, 13), bool] */;
  %184 = %177.1;
  %185 = asin(%182) /* ty=Tensor[(4, 15, 13), float32] */;
  (%183, %184, %var_7249, meta[relay.Constant][12] /* ty=Tensor[(468, 1), int16] */, %185)
}

def @func_7820(%var_7806: Tensor[(2, 15, 15), uint32], %var_7807: Tensor[(2, 15, 15), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(2, 15, 15), float64]) {
  %186 = @func_4404() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %187 = cast(%var_7807, dtype="uint32") /* ty=Tensor[(2, 15, 15), uint32] */;
  %188 = shape_of(%var_7806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_7806, dtype="uint32") /* ty=Tensor[(2, 15, 15), uint32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %191 = bitwise_xor(%189, %190) /* ty=Tensor[(2, 15, 15), uint32] */;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
  %193 = exp(%192) /* ty=Tensor[(2, 15, 15), float32] */;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %195 = %186.0;
  %196 = rsqrt(%194) /* ty=Tensor[(2, 15, 15), float64] */;
  (%195, %196)
}

def @func_7398() -> Tensor[(4, 16, 10), float64] {
  %197 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
  %197.6
}

def @func_10011() -> (Tensor[(4, 16, 10), float64],) {
  %198 = @func_4404() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %199 = %198.0;
  (%199,)
}

def @func_3374() -> (Tensor[(4, 16, 10), uint16], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %200 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %201 = cast(meta[relay.Constant][13] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %202 = reshape(%201, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %203 = @func_2188(%202) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %204 = %200.2;
  %205 = %203.1;
  (%204, %205, meta[relay.Constant][13] /* ty=Tensor[(468), int16] */)
}

def @func_1881() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) {
  %206 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %207 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %208 = %206.0;
  %209 = cast(%208, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %210 = reshape(%209, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %211 = @func_1022(%210) /* ty=(Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) */;
  %212 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %213 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %214 = %213.1;
  %215 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %216 = %215.0;
  %217 = cast(%216, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %218 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%214, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %221 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %222 = %207.6;
  %223 = %211.1;
  %224 = %212.3;
  %225 = minimum(%219, %220) /* ty=Tensor[(4, 16, 10), int16] */;
  %226 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  (%208, %221, %222, %223, %224, %225, %226)
}

def @func_6511(%var_6486: Tensor[(14, 2, 10), bool]) -> (Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) {
  %227 = cast(%var_6486, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
  %228 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(14, 2, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 2, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = logical_or(%229, %230) /* ty=Tensor[(14, 2, 10), bool] */;
  %232 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  (%231, %232)
}

def @func_2440(%var_2420: Tensor[(16, 13, 5), int64], %var_2421: Tensor[(16, 13, 5), int64], %var_2429: Tensor[(468), int16]) -> (Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %233 = cast(%var_2421, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %234 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_2420, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = cast(%var_2421, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %238 = cast(%var_2429, dtype="int16") /* ty=Tensor[(468), int16] */;
  %239 = reshape(%238, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %240 = @func_1518(%239) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %241 = less_equal(%235, %236) /* ty=Tensor[(16, 13, 5), bool] */;
  %242 = asin(%237) /* ty=Tensor[(16, 13, 5), float64] */;
  %243 = %240.1;
  (%241, %242, %243, %var_2429)
}

def @func_3746() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) {
  %244 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %245 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %246 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %251 = %244.6;
  %252 = less(%248, %249) /* ty=Tensor[(4, 16, 10), bool] */;
  (%250, %251, %252)
}

def @func_6344(%var_6313: Tensor[(15, 14, 12), float32]) -> (Tensor[(15, 14, 12), uint64], Tensor[(15, 14, 12), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %253 = @func_5765() /* ty=(Tensor[(15, 14, 12), float32],) */;
  %254 = %253.0;
  %255 = cast(%var_6313, dtype="uint64") /* ty=Tensor[(15, 14, 12), uint64] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="uint64") /* ty=Tensor[(15, 14, 12), uint64] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %259 = cast(%254, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %260 = shape_of(%var_6313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%var_6313, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %263 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %264 = add(%257, %258) /* ty=Tensor[(15, 14, 12), uint64] */;
  %265 = floor_divide(%261, %262) /* ty=Tensor[(15, 14, 12), float32] */;
  %266 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %267 = %263.0;
  (%264, %265, %266, %267)
}

def @func_9556() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %268 = @func_3746() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) */;
  %269 = @func_7215() /* ty=(Tensor[(7, 13, 4), float64],) */;
  %270 = %268.0;
  %271 = %269.0;
  (%270, %271)
}

def @func_1711() -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  %272 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %273 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(7, 13, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %276 = floor_mod(%274, %275) /* ty=Tensor[(7, 13, 4), float64] */;
  %277 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  (%276, %277)
}

def @func_6008(%var_5999: Tensor[(13, 5, 1), float32]) -> (Tensor[(13, 5, 1), float32],) {
  %278 = cast(%var_5999, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %279 = asin(%278) /* ty=Tensor[(13, 5, 1), float32] */;
  (%279,)
}

def @func_6251() -> Tensor[(4, 16, 10), float32] {
  %280 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %280.0
}

def @func_9290() -> (Tensor[(4, 16, 10), float64],) {
  %281 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%281,)
}

def @func_4948(%var_4922: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(65), int8]) {
  %282 = cast(%var_4922, dtype="float32") /* ty=Tensor[(65), float32] */;
  %283 = reshape(%282, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
  %284 = @func_4153(%283) /* ty=Tensor[(13, 5, 1), float32] */;
  %285 = cast(%284, dtype="int8") /* ty=Tensor[(13, 5, 1), int8] */;
  %286 = shape_of(%var_4922, dtype="int32") /* ty=Tensor[(1), int32] */;
  %287 = cast(%var_4922, dtype="int8") /* ty=Tensor[(65), int8] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?), int8] */;
  %289 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %290 = bitwise_xor(%287, %288) /* ty=Tensor[(65), int8] */;
  (%289, %290)
}

def @func_3623(%var_3594: Tensor[(468), int16], %var_3616: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) {
  %291 = @func_1564() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) */;
  %292 = cast(meta[relay.Constant][18] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %293 = cast(%var_3594, dtype="int16") /* ty=Tensor[(468), int16] */;
  %294 = reshape(%292, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %295 = reshape(%293, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %296 = @func_2537(%294, %295) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %297 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %298 = cast(%var_3616, dtype="int16") /* ty=int16 */;
  %299 = cast(meta[relay.Constant][19] /* ty=Tensor[(1352), int16] */, dtype="int16") /* ty=Tensor[(1352), int16] */;
  %300 = reshape(%298, newshape=[]) /* ty=int16 */;
  %301 = reshape(%299, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), int16] */;
  %302 = @func_3583(%300, %301) /* ty=(Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) */;
  %303 = %291.0;
  %304 = %296.6;
  %305 = %297.2;
  %306 = %302.0;
  (%303, %304, meta[relay.Constant][18] /* ty=Tensor[(1040), int64] */, %var_3594, %305, %306, %var_3616, meta[relay.Constant][19] /* ty=Tensor[(1352), int16] */)
}

def @func_2880() -> Tensor[(7, 13, 4), float64] {
  %307 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %307.0
}

def @func_777() -> Tensor[(4, 16, 10), float64] {
  %308 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %308.1
}

def @func_3938(%var_3884: Tensor[(1320), float64], %var_3909: Tensor[(240), float64], %var_3923: Tensor[(1, 810), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(8, 15, 11), float64], Tensor[(1320), float64], Tensor[(4, 16, 10), float32], Tensor[(3, 16, 5), float64], Tensor[(240), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 208), float32], Tensor[(10, 9, 9), uint32], Tensor[(1, 810), uint32]) {
  %309 = cast(%var_3884, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %310 = reshape(%309, newshape=[8, 15, 11]) /* ty=Tensor[(8, 15, 11), float64] */;
  %311 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %312 = cast(%var_3909, dtype="float64") /* ty=Tensor[(240), float64] */;
  %313 = reshape(%312, newshape=[3, 16, 5]) /* ty=Tensor[(3, 16, 5), float64] */;
  %314 = @func_3303(%313) /* ty=(Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) */;
  %315 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 208), float32] */, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
  %316 = reshape(%315, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %317 = @func_3572(%316) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) */;
  %318 = cast(%var_3923, dtype="uint32") /* ty=Tensor[(1, 810), uint32] */;
  %319 = cast(%var_3923, dtype="uint32") /* ty=Tensor[(1, 810), uint32] */;
  %320 = reshape(%318, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
  %321 = reshape(%319, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
  %322 = @func_1371(%320, %321) /* ty=(Tensor[(10, 9, 9), uint32],) */;
  %323 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %324 = @func_2783(%310) /* ty=Tensor[(8, 15, 11), float64] */;
  %325 = %311.0;
  %326 = %314.0;
  %327 = %317.0;
  %328 = %322.0;
  (%323, %324, %var_3884, %325, %326, %var_3909, %327, meta[relay.Constant][20] /* ty=Tensor[(1, 208), float32] */, %328, %var_3923)
}

def @func_9936() -> Tensor[(4, 16, 10), float64] {
  @func_6455() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1371(%var_1364: Tensor[(10, 9, 9), uint32], %var_1365: Tensor[(10, 9, 9), uint32]) -> (Tensor[(10, 9, 9), uint32],) {
  %329 = cast(%var_1365, dtype="uint32") /* ty=Tensor[(10, 9, 9), uint32] */;
  %330 = shape_of(%var_1364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_1364, dtype="uint32") /* ty=Tensor[(10, 9, 9), uint32] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %333 = right_shift(%331, %332) /* ty=Tensor[(10, 9, 9), uint32] */;
  (%333,)
}

def @func_7124() -> Tensor[(4, 16, 10), float64] {
  %334 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %334.0
}

def @func_1340() -> Tensor[(4, 16, 10), float64] {
  @func_264() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_6964() -> (Tensor[(4, 16, 10), float64],) {
  %335 = @func_6376() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %336 = %335.0;
  (%336,)
}

def @func_3156() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %337 = @func_2611() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %338 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %339 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %340 = %337.0;
  %341 = %338.0;
  %342 = %339.0;
  (%340, %341, %342)
}

def @func_8205(%var_8196: Tensor[(2, 6, 3), uint8]) -> Tensor[(2, 6, 3), uint8] {
  %343 = cast(%var_8196, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %344 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %347 = logical_xor(%345, %346) /* ty=Tensor[(2, 6, 3), uint8] */;
  %348 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%350, %351) /* ty=Tensor[(2, 6, 3), uint8] */
}

def @func_4336() -> (Tensor[(4, 16, 10), float64],) {
  %352 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%352,)
}

def @func_2818() -> (Tensor[(4, 16, 10), float64],) {
  %353 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %354 = %353.4;
  (%354,)
}

def @func_3696() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %355 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %356 = @func_3182() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %357 = %355.0;
  %358 = %356.0;
  (%357, %358)
}

def @func_5066(%var_4999: Tensor[(6, 15, 3), int64], %var_5000: Tensor[(6, 15, 3), int64]) -> (Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) {
  %359 = cast(%var_5000, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %360 = shape_of(%var_4999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_4999, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = not_equal(%361, %362) /* ty=Tensor[(6, 15, 3), bool] */;
  %364 = cast(%var_5000, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %369 = reshape(%368, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %370 = @func_827(%369) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %371 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %372 = cast(%363, dtype="float64") /* ty=Tensor[(6, 15, 3), float64] */;
  %373 = sqrt(%372) /* ty=Tensor[(6, 15, 3), float64] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(6, 15, 3), float32] */;
  %375 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %376 = less_equal(%366, %367) /* ty=Tensor[(6, 15, 3), bool] */;
  %377 = %370.0;
  %378 = %371.1;
  %379 = cosh(%374) /* ty=Tensor[(6, 15, 3), float32] */;
  %380 = %375.0;
  (%376, %377, meta[relay.Constant][22] /* ty=Tensor[(468), int16] */, %378, %379, %380)
}

def @func_9992(%var_9986: Tensor[(8, 15, 5), float64]) -> (Tensor[(8, 15, 5), float64],) {
  %381 = cast(%var_9986, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %382 = sigmoid(%381) /* ty=Tensor[(8, 15, 5), float64] */;
  (%382,)
}

def @func_10288(%var_10279: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) {
  %383 = @func_8562() /* ty=(Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) */;
  %384 = cast(%var_10279, dtype="int64") /* ty=Tensor[(270), int64] */;
  %385 = reshape(%384, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %386 = @func_10127(%385) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %387 = %383.1;
  %388 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
  %389 = %386.2;
  (%387, %388, %389, %var_10279)
}

def @func_1148() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) {
  %390 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %391 = %390.1;
  %392 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%391, %392)
}

def @func_2941() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %393 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %394 = cast(meta[relay.Constant][23] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %395 = reshape(%394, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %396 = @func_490(%395) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %397 = %393.0;
  %398 = %396.1;
  (%397, %398, meta[relay.Constant][23] /* ty=Tensor[(468), int16] */)
}

def @func_746(%var_741: Tensor[(4, 16, 10), float32]) -> (Tensor[(4, 16, 10), bool],) {
  %399 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %400 = %399.0;
  %401 = cast(%var_741, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%400, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = not_equal(%403, %404) /* ty=Tensor[(4, 16, 10), bool] */;
  (%405,)
}

def @func_5960(%var_5954: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) {
  %406 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %407 = cast(%var_5954, dtype="float32") /* ty=Tensor[(65), float32] */;
  %408 = reshape(%407, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %409 = @func_4948(%408) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(65), int8]) */;
  %410 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %411 = %406.0;
  %412 = %409.0;
  %413 = %410.1;
  (%411, %412, %var_5954, %413)
}

def @func_5107() -> Tensor[(4, 16, 10), float64] {
  %414 = @func_4204() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %414.1
}

def @func_264() -> Tensor[(4, 16, 10), float64] {
  %415 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  sqrt(%415) /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_5422(%var_5412: int32, %var_5413: Tensor[(1, 14, 8), int32]) -> (Tensor[(1, 14, 8), bool],) {
  %416 = cast(%var_5412, dtype="bool") /* ty=bool */;
  %417 = cast(%var_5413, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
  %418 = less(%416, %417) /* ty=Tensor[(1, 14, 8), bool] */;
  (%418,)
}

def @func_9872(%var_9835: Tensor[(8, 16, 4), int64], %var_9836: Tensor[(8, 16, 4), int64]) -> (Tensor[(8, 16, 4), bool], Tensor[(234, 2), int16], Tensor[(2, 15, 7), bool], Tensor[(210), uint8]) {
  %419 = cast(%var_9836, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %420 = shape_of(%var_9835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_9835, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %423 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
  %424 = cast(meta[relay.Constant][25] /* ty=Tensor[(210), uint8] */, dtype="uint8") /* ty=Tensor[(210), uint8] */;
  %425 = cast(meta[relay.Constant][25] /* ty=Tensor[(210), uint8] */, dtype="uint8") /* ty=Tensor[(210), uint8] */;
  %426 = reshape(%424, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint8] */;
  %427 = reshape(%425, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint8] */;
  %428 = @func_7619(%426, %427) /* ty=(Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) */;
  %429 = less_equal(%421, %422) /* ty=Tensor[(8, 16, 4), bool] */;
  %430 = %423.0;
  %431 = %428.2;
  (%429, %430, %431, meta[relay.Constant][25] /* ty=Tensor[(210), uint8] */)
}

def @func_4204() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %432 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  %433 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
  (%432, %433)
}

def @func_3783() -> (Tensor[(234, 2), int16],) {
  %434 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %435 = %434.1;
  (%435,)
}

def @func_7440() -> Tensor[(4, 16, 10), float64] {
  %436 = @func_3488() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %436.0
}

def @func_6583() -> Tensor[(4, 16, 10), float64] {
  %437 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %437.0
}

def @func_1335() -> Tensor[(4, 16, 10), float64] {
  %438 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  exp(%439) /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_2188(%var_2184: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %440 = cast(%var_2184, dtype="int16") /* ty=Tensor[(468), int16] */;
  %441 = reshape(%440, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %442 = @func_1518(%441) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %443 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %444 = %442.3;
  (%443, %444, %var_2184)
}

def @func_3583(%var_3576: int16, %var_3577: Tensor[(8, 13, 13), int16]) -> (Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) {
  %445 = cast(%var_3576, dtype="int16") /* ty=int16 */;
  %446 = cast(%var_3577, dtype="int16") /* ty=Tensor[(8, 13, 13), int16] */;
  %447 = bitwise_and(%445, %446) /* ty=Tensor[(8, 13, 13), int16] */;
  %448 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
  (%447, %448)
}

def @func_1623() -> Tensor[(4, 16, 10), float64] {
  @func_1267() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_2611() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %449 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %451 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %452 = sigmoid(%450) /* ty=Tensor[(4, 16, 10), float64] */;
  (%451, %452)
}

def @func_4030() -> Tensor[(4, 16, 10), float64] {
  %453 = @func_2941() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %453.0
}

def @func_376() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %454 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %456 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %457 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %458 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %459 = rsqrt(%455) /* ty=Tensor[(4, 16, 10), float32] */;
  %460 = %456.1;
  %461 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %462 = %457.0;
  %463 = %458.0;
  (%459, %460, %461, %462, %463)
}

def @func_2986(%var_2983: Tensor[(4, 4, 13), float32]) -> (Tensor[(4, 4, 13), float32],) {
  %464 = cast(%var_2983, dtype="float32") /* ty=Tensor[(4, 4, 13), float32] */;
  %465 = sin(%464) /* ty=Tensor[(4, 4, 13), float32] */;
  (%465,)
}

def @func_4578() -> (Tensor[(4, 16, 10), float64],) {
  %466 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %467 = %466.0;
  (%467,)
}

def @func_7693() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  %468 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %469 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %470 = %468.1;
  %471 = @func_5750() /* ty=Tensor[(4, 16, 10), float64] */;
  (%469, %470, %471)
}

def @func_4404() -> (Tensor[(4, 16, 10), float64],) {
  %472 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %473 = %472.0;
  (%473,)
}

def @func_2398() -> Tensor[(4, 16, 10), float64] {
  @func_1623() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_5852(%var_5846: Tensor[(15, 14, 9), int8]) -> (Tensor[(15, 14, 9), bool], Tensor[(4, 16, 10), float64]) {
  %474 = cast(%var_5846, dtype="bool") /* ty=Tensor[(15, 14, 9), bool] */;
  %475 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(15, 14, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 14, 9), int8] */, dtype="bool") /* ty=Tensor[(15, 14, 9), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %479 = equal(%476, %477) /* ty=Tensor[(15, 14, 9), bool] */;
  %480 = %478.0;
  (%479, %480)
}

def @func_1207() -> (Tensor[(6, 11, 4), float64],) {
  %481 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 11, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %482 = sqrt(%481) /* ty=Tensor[(6, 11, 4), float64] */;
  (%482,)
}

def @func_8068() -> Tensor[(4, 16, 10), float32] {
  %483 = @func_4323() /* ty=(Tensor[(4, 16, 10), float32],) */;
  %483.0
}

def @func_6538() -> (Tensor[(4, 16, 10), float64],) {
  %484 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %485 = %484.0;
  (%485,)
}

def @func_9144() -> (Tensor[(6, 10, 8), float32], Tensor[(4, 16, 10), float64]) {
  %486 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
  %487 = log(%486) /* ty=Tensor[(6, 10, 8), float32] */;
  %488 = @func_7196() /* ty=Tensor[(4, 16, 10), float64] */;
  (%487, %488)
}

def @func_6177() -> (Tensor[(4, 16, 10), float64], Tensor[(8, 11, 13), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %489 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %490 = @func_5377() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %491 = cast(meta[relay.Constant][29] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %492 = reshape(%491, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %493 = @func_4438(%492) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %494 = %489.0;
  %495 = %490.0;
  %496 = %493.3;
  (%494, %495, %496, meta[relay.Constant][29] /* ty=Tensor[(468), int16] */)
}

def @func_4133() -> (Tensor[(4, 16, 10), float64],) {
  %497 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  (%497,)
}

def @func_6112() -> (Tensor[(234, 2), int16],) {
  %498 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
  %499 = %498.0;
  (%499,)
}

def @func_6299() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %500 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %501 = @func_5585() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %502 = %500.0;
  %503 = %501.0;
  (%502, %503)
}

def @func_8881() -> Tensor[(4, 16, 10), float64] {
  %504 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %504.0
}

def @func_1981() -> (Tensor[(4, 16, 10), float64],) {
  %505 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %506 = %505.1;
  (%506,)
}

def @func_9802() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %507 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %508 = @func_9065() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_4995() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %511 = @func_4096() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %512 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %513 = %512.0;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %515 = %511.1;
  %516 = cosh(%514) /* ty=Tensor[(4, 16, 10), float64] */;
  (%515, %516)
}

def @func_7846() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %517 = @func_3156() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %518 = @func_6031() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) */;
  %519 = %517.0;
  %520 = %518.0;
  (%519, %520)
}

def @func_9430() -> (Tensor[(4, 16, 10), float64],) {
  %521 = @func_8320() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %522 = %521.0;
  (%522,)
}

def @func_10127(%var_10114: Tensor[(3, 90), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %523 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %524 = cast(%var_10114, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %525 = cast(%var_10114, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %526 = reshape(%524, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %527 = reshape(%525, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %528 = @func_5066(%526, %527) /* ty=(Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) */;
  %529 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %530 = %523.0;
  %531 = %528.2;
  %532 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %533 = %529.0;
  (%530, %531, %var_10114, %532, %533)
}

def @func_2343() -> (Tensor[(4, 16, 10), float64],) {
  %534 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %535 = %534.0;
  (%535,)
}

def @func_3272() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %536 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %537 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %538 = %536.1;
  %539 = %537.0;
  (%538, %539)
}

def @func_1267() -> Tensor[(4, 16, 10), float64] {
  @func_777() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_2702() -> (Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) {
  %540 = cast(meta[relay.Constant][30] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %541 = cast(meta[relay.Constant][30] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %542 = cast(meta[relay.Constant][31] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %543 = reshape(%540, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %544 = reshape(%541, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %545 = reshape(%542, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %546 = @func_2440(%543, %544, %545) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %547 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %548 = cast(meta[relay.Constant][31] /* ty=Tensor[(468, 1), int16] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %549 = sqrt(%548) /* ty=Tensor[(468, 1), float64] */;
  %550 = cast(%549, dtype="uint32") /* ty=Tensor[(468, 1), uint32] */;
  %551 = cast(meta[relay.Constant][30] /* ty=Tensor[(1040), int64] */, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
  %552 = cast(meta[relay.Constant][31] /* ty=Tensor[(468, 1), int16] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
  %553 = shape_of(%549, dtype="int32") /* ty=Tensor[(2), int32] */;
  %554 = cast(%549, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %556 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  %557 = %546.1;
  %558 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  %559 = %547.0;
  %560 = right_shift(%550, %551) /* ty=Tensor[(468, 1040), uint32] */;
  %561 = greater(%554, %555) /* ty=Tensor[(468, ?), bool] */;
  (%556, %557, %558, %559, %560, %561)
}

def @func_1535() -> Tensor[(4, 16, 10), float32] {
  %562 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %562.0
}

def @func_3059(%var_3044: Tensor[(4, 16, 10), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %563 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
  %564 = %563.5;
  %565 = cast(%var_3044, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %569 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %570 = mod(%567, %568) /* ty=Tensor[(4, 16, 10), float64] */;
  %571 = %569.4;
  (%570, %571)
}

def @func_5612() -> (Tensor[(4, 16, 10), float64],) {
  %572 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %573 = %572.3;
  (%573,)
}

def @func_3543() -> Tensor[(4, 16, 10), float64] {
  @func_264() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_2783(%var_2772: Tensor[(8, 15, 11), float64]) -> Tensor[(8, 15, 11), float64] {
  %574 = cast(%var_2772, dtype="float64") /* ty=Tensor[(8, 15, 11), float64] */;
  sin(%574) /* ty=Tensor[(8, 15, 11), float64] */
}

def @func_3417() -> Tensor[(4, 16, 10), float64] {
  %575 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %575.1
}

def @func_5604() -> (Tensor[(4, 16, 10), float64],) {
  %576 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %577 = %576.0;
  (%577,)
}

def @func_2537(%var_2503: Tensor[(1040), int64], %var_2504: Tensor[(6, 78), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) {
  %578 = @func_1923() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %579 = cast(%var_2503, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %580 = cast(%var_2503, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %581 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %582 = reshape(%579, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %583 = reshape(%580, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %584 = reshape(%581, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %585 = @func_2440(%582, %583, %584) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %586 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %587 = reshape(%586, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %588 = @func_490(%587) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %589 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %590 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %591 = reshape(%590, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %592 = @func_490(%591) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %593 = %578.0;
  %594 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %595 = %585.1;
  %596 = %588.1;
  %597 = %589.1;
  %598 = %592.0;
  (%593, %594, %595, %var_2503, %var_2504, %596, %597, %598)
}

def @func_8706() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %599 = @func_6405() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %600 = @func_7741() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %601 = %599.0;
  %602 = %600.2;
  (%601, %602)
}

def @func_8797() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %603 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %604 = %603.1;
  %605 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  (%604, %605)
}

def @func_9728(%var_9693: Tensor[(1040), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %606 = @func_8522() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %607 = cast(%var_9693, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %608 = cast(meta[relay.Constant][32] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %609 = reshape(%607, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %610 = reshape(%608, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %611 = @func_2537(%609, %610) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %612 = %606.0;
  %613 = %611.7;
  %614 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  (%612, %613, %var_9693, meta[relay.Constant][32] /* ty=Tensor[(468), int16] */, %614)
}

def @func_1167() -> Tensor[(4, 16, 10), float64] {
  %615 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %615.0
}

def @func_6376() -> (Tensor[(4, 16, 10), float64],) {
  %616 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
  (%616,)
}

def @func_490(%var_477: Tensor[(13, 4, 9), int16]) -> (Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
  %617 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 4, 9), int16] */, dtype="int16") /* ty=Tensor[(13, 4, 9), int16] */;
  %618 = shape_of(%var_477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_477, dtype="int16") /* ty=Tensor[(13, 4, 9), int16] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %621 = subtract(%619, %620) /* ty=Tensor[(13, 4, 9), int16] */;
  %622 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%621, %622)
}

def @func_6405() -> (Tensor[(4, 16, 10), float64],) {
  %623 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
  %624 = %623.4;
  (%624,)
}

def @func_5198(%var_5182: Tensor[(12, 11, 11), float64]) -> (Tensor[(12, 11, 11), float64],) {
  %625 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 11), float64] */;
  %626 = shape_of(%var_5182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%var_5182, dtype="float64") /* ty=Tensor[(12, 11, 11), float64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %629 = mod(%627, %628) /* ty=Tensor[(12, 11, 11), float64] */;
  (%629,)
}

def @func_5172() -> Tensor[(468, 1), int16] {
  %630 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %630.4
}

def @func_3653() -> (Tensor[(4, 16, 10), float64],) {
  %631 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  (%631,)
}

def @func_7619(%var_7573: Tensor[(2, 15, 7), uint8], %var_7596: Tensor[(2, 15, 7), uint8]) -> (Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) {
  %632 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 15, 7), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 7), uint8] */;
  %633 = shape_of(%var_7573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_7573, dtype="uint8") /* ty=Tensor[(2, 15, 7), uint8] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %636 = @func_6299() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %637 = cast(%var_7596, dtype="bool") /* ty=Tensor[(2, 15, 7), bool] */;
  %638 = shape_of(%var_7573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_7573, dtype="bool") /* ty=Tensor[(2, 15, 7), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = bitwise_and(%634, %635) /* ty=Tensor[(2, 15, 7), uint8] */;
  %642 = %636.0;
  %643 = less(%639, %640) /* ty=Tensor[(2, 15, 7), bool] */;
  %644 = @func_7124() /* ty=Tensor[(4, 16, 10), float64] */;
  (%641, %642, %643, %644)
}

def @func_9117() -> (Tensor[(4, 16, 10), float32],) {
  %645 = @func_6094() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %646 = %645.1;
  (%646,)
}

def @func_5585() -> (Tensor[(4, 16, 10), float64],) {
  %647 = @func_3337() /* ty=Tensor[(4, 16, 10), float64] */;
  (%647,)
}

def @func_3572(%var_3570: Tensor[(208), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) {
  %648 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %649 = cast(%var_3570, dtype="float32") /* ty=Tensor[(208), float32] */;
  %650 = reshape(%649, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float32] */;
  %651 = @func_2986(%650) /* ty=(Tensor[(4, 4, 13), float32],) */;
  %652 = %648.0;
  %653 = %651.0;
  (%652, %653, %var_3570)
}

def @func_9065() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %654 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  %655 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%654, %655)
}

def @func_1775() -> (Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
  %656 = cast(meta[relay.Constant][36] /* ty=Tensor[(234, 2), int16] */, dtype="int16") /* ty=Tensor[(234, 2), int16] */;
  %657 = reshape(%656, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %658 = @func_827(%657) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %659 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %660 = %659.0;
  %661 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %665 = cast(%660, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %666 = %658.0;
  %667 = less_equal(%663, %664) /* ty=Tensor[(4, 16, 10), bool] */;
  %668 = cos(%665) /* ty=Tensor[(4, 16, 10), float32] */;
  (%666, meta[relay.Constant][36] /* ty=Tensor[(234, 2), int16] */, %667, %668)
}

def @func_8562() -> (Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) {
  %669 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %670 = log(%669) /* ty=Tensor[(13, 3, 1), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
  %672 = @func_5992() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %673 = sigmoid(%671) /* ty=Tensor[(13, 3, 1), float64] */;
  %674 = %672.0;
  (%673, %674)
}

def @func_4153(%var_4143: Tensor[(13, 5, 1), float32]) -> Tensor[(13, 5, 1), float32] {
  %675 = cast(%var_4143, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  cosh(%675) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3488() -> (Tensor[(4, 16, 10), float64],) {
  %676 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %677 = %676.0;
  (%677,)
}

def @func_1698() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %678 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  %679 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
  (%678, %679)
}

def @main(%var_10360: Tensor[(11, 13, 8), float32]) -> Tensor[(11, 13, 8), float32] {
  %680 = cast(%var_10360, dtype="float32") /* ty=Tensor[(11, 13, 8), float32] */;
  atan(%680) /* ty=Tensor[(11, 13, 8), float32] */
}

def @func_2111() -> (Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %681 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %682 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %683 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %684 = cast(%683, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %685 = log(%684) /* ty=Tensor[(4, 16, 10), float32] */;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %687 = %681.3;
  %688 = %682.1;
  %689 = sin(%686) /* ty=Tensor[(4, 16, 10), float32] */;
  (%687, %688, %689)
}

def @func_5707() -> (Tensor[(4, 16, 10), float64],) {
  %690 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %691 = %690.0;
  (%691,)
}

def @func_1923() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %692 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %693 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %694 = %692.0;
  %695 = %693.6;
  (%694, %695)
}

def @func_7875(%var_7866: int16) -> (Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(468, 1), float64]) {
  %696 = @func_7741() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %697 = cast(meta[relay.Constant][39] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %698 = cast(%var_7866, dtype="int16") /* ty=int16 */;
  %699 = reshape(%697, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %700 = reshape(%698, newshape=[]) /* ty=int16 */;
  %701 = @func_3623(%699, %700) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) */;
  %702 = cast(meta[relay.Constant][39] /* ty=Tensor[(468, 1), int16] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %703 = %696.2;
  %704 = %701.5;
  %705 = log(%702) /* ty=Tensor[(468, 1), float64] */;
  (%703, %704, %var_7866, %705)
}

def @func_1466() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %706 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %707 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %708 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %709 = %706.0;
  %710 = %707.0;
  (%708, %709, %710)
}

def @func_1564() -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) {
  %711 = cast(meta[relay.Constant][40] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %712 = reshape(%711, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %713 = @func_827(%712) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %714 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %715 = %713.2;
  (%714, %715, meta[relay.Constant][40] /* ty=Tensor[(468), int16] */)
}

def @func_4559() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %716 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %717 = %716.1;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %719 = log10(%718) /* ty=Tensor[(4, 16, 10), float64] */;
  %720 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
  (%719, %720)
}

def @func_7990() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %721 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %722 = %721.0;
  %723 = @func_6142() /* ty=Tensor[(4, 16, 10), float64] */;
  (%722, %723)
}

def @func_8522() -> (Tensor[(4, 16, 10), float64],) {
  %724 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %725 = %724.0;
  (%725,)
}

def @func_8487() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float32]) {
  %726 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %727 = %726.4;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %729 = log(%728) /* ty=Tensor[(1, 468), float32] */;
  %730 = cast(%729, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %731 = reshape(%730, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %732 = @func_1518(%731) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %733 = cast(%729, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %734 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %735 = @func_7398() /* ty=Tensor[(4, 16, 10), float64] */;
  %736 = %732.0;
  %737 = rsqrt(%733) /* ty=Tensor[(1, 468), float32] */;
  %738 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
  (%734, %735, %736, %737, %738)
}

def @func_1518(%var_1513: Tensor[(468), int16]) -> (Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %739 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %740 = cast(%var_1513, dtype="int16") /* ty=Tensor[(468), int16] */;
  %741 = reshape(%740, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %742 = @func_490(%741) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %743 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %744 = %739.0;
  %745 = %742.1;
  %746 = %743.0;
  (%744, %745, %var_1513, %746)
}

def @func_2470() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) {
  %747 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %748 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %749 = %748.0;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %751 = reshape(%750, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %752 = @func_889(%751) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %753 = cast(meta[relay.Constant][41] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %754 = reshape(%753, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %755 = @func_1518(%754) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %756 = %747.2;
  %757 = %752.0;
  %758 = %755.1;
  (%756, %749, %757, %758, meta[relay.Constant][41] /* ty=Tensor[(468, 1), int16] */)
}

def @func_4215() -> (Tensor[(2, 14, 9), float32],) {
  %759 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 9), float64] */;
  %760 = exp(%759) /* ty=Tensor[(2, 14, 9), float64] */;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
  %762 = acos(%761) /* ty=Tensor[(2, 14, 9), float32] */;
  (%762,)
}

def @func_1022(%var_993: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
  %763 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %764 = cast(%var_993, dtype="int8") /* ty=Tensor[(4, 16, 10), int8] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="int8") /* ty=Tensor[(4, 16, 10), int8] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %768 = subtract(%766, %767) /* ty=Tensor[(4, 16, 10), int8] */;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %770 = reshape(%769, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %771 = @func_889(%770) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %772 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %773 = %771.0;
  %774 = %772.0;
  (%768, %773, %774)
}

def @func_474() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %775 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %776 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %777 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %778 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %779 = %778.0;
  %780 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %781 = %780.1;
  %782 = cast(%781, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %783 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%779, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %786 = multiply(%784, %785) /* ty=Tensor[(4, 16, 10), uint16] */;
  %787 = cast(%781, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %792 = %775.1;
  %793 = %776.0;
  %794 = %777.3;
  %795 = greater(%789, %790) /* ty=Tensor[(4, 16, 10), bool] */;
  %796 = %791.1;
  %797 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %798 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%792, %793, %794, %795, %796, %797, %798)
}

def @func_7070(%var_7029: Tensor[(132), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) {
  %799 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %800 = cast(%var_7029, dtype="float64") /* ty=Tensor[(132), float64] */;
  %801 = reshape(%800, newshape=[12, 11, 1]) /* ty=Tensor[(12, 11, 1), float64] */;
  %802 = @func_2032(%801) /* ty=(Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) */;
  %803 = %799.0;
  %804 = %802.0;
  (%803, %804, %var_7029)
}

def @func_7901(%var_7890: Tensor[(14, 5, 9), uint32]) -> (Tensor[(14, 5, 9), uint32], Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %805 = cast(%var_7890, dtype="uint32") /* ty=Tensor[(14, 5, 9), uint32] */;
  %806 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 5, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 5, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 9), uint32] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %809 = @func_3958() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %810 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %811 = multiply(%807, %808) /* ty=Tensor[(14, 5, 9), uint32] */;
  %812 = %809.0;
  %813 = %810.1;
  (%811, %812, %813)
}

def @func_7514() -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) {
  %814 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %815 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 9), int64] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
  %816 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 9), int64] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
  %817 = reshape(%815, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %818 = reshape(%816, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %819 = @func_5066(%817, %818) /* ty=(Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) */;
  %820 = %814.0;
  %821 = %819.3;
  (%820, %821, meta[relay.Constant][44] /* ty=Tensor[(30, 9), int64] */)
}

def @func_9237() -> (Tensor[(8, 11, 13), float64],) {
  %822 = @func_5377() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %823 = %822.0;
  (%823,)
}

def @func_7387() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 9), uint32], Tensor[(810), uint32]) {
  %824 = @func_4559() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %825 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %826 = cast(meta[relay.Constant][45] /* ty=Tensor[(810), uint32] */, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %827 = cast(meta[relay.Constant][45] /* ty=Tensor[(810), uint32] */, dtype="uint32") /* ty=Tensor[(810), uint32] */;
  %828 = reshape(%826, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
  %829 = reshape(%827, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
  %830 = @func_1371(%828, %829) /* ty=(Tensor[(10, 9, 9), uint32],) */;
  %831 = %824.1;
  %832 = %825.0;
  %833 = %830.0;
  (%831, %832, %833, meta[relay.Constant][45] /* ty=Tensor[(810), uint32] */)
}

def @func_889(%var_882: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), float32],) {
  %834 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %835 = %834.0;
  %836 = cast(%var_882, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %840 = power(%838, %839) /* ty=Tensor[(4, 16, 10), float32] */;
  (%840,)
}

def @func_4607(%var_4597: Tensor[(9, 7, 11), uint8], %var_4598: Tensor[(9, 7, 11), uint8]) -> (Tensor[(9, 7, 11), bool], Tensor[(9, 7, 11), bool]) {
  %841 = cast(%var_4598, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %842 = shape_of(%var_4597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_4597, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = cast(%var_4597, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %846 = shape_of(%var_4598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_4598, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %849 = greater(%843, %844) /* ty=Tensor[(9, 7, 11), bool] */;
  %850 = less(%847, %848) /* ty=Tensor[(9, 7, 11), bool] */;
  (%849, %850)
}

def @func_6665(%var_6646: Tensor[(242, 6), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 11), float64], Tensor[(242, 6), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %851 = @func_3958() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %852 = cast(%var_6646, dtype="float64") /* ty=Tensor[(242, 6), float64] */;
  %853 = reshape(%852, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float64] */;
  %854 = @func_5198(%853) /* ty=(Tensor[(12, 11, 11), float64],) */;
  %855 = cast(meta[relay.Constant][46] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %856 = reshape(%855, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %857 = @func_1518(%856) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %858 = %851.1;
  %859 = %854.0;
  %860 = %857.3;
  (%858, %859, %var_6646, %860, meta[relay.Constant][46] /* ty=Tensor[(468), int16] */)
}

def @func_6070(%var_6050: Tensor[(10, 7, 13), float32]) -> (Tensor[(10, 7, 13), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(10, 7, 13), float32]) {
  %861 = cast(%var_6050, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %862 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %863 = %862.0;
  %864 = cast(%863, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %865 = reshape(%864, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %866 = @func_889(%865) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %867 = cast(%var_6050, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %868 = tan(%861) /* ty=Tensor[(10, 7, 13), float32] */;
  %869 = %866.0;
  %870 = sigmoid(%867) /* ty=Tensor[(10, 7, 13), float32] */;
  (%868, %863, %869, %870)
}

def @func_6946() -> (Tensor[(4, 16, 10), float64],) {
  %871 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  (%871,)
}

def @func_5537() -> (Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
  %872 = @func_3746() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) */;
  %873 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %874 = %872.2;
  %875 = %873.3;
  (%874, %875)
}

def @func_4478() -> (Tensor[(4, 16, 10), float64],) {
  %876 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %877 = %876.0;
  (%877,)
}

def @func_5750() -> Tensor[(4, 16, 10), float64] {
  @func_4030() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_2839() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %878 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %879 = cast(meta[relay.Constant][47] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %880 = reshape(%879, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %881 = @func_1518(%880) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %882 = %878.0;
  %883 = %881.1;
  %884 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
  (%882, %883, meta[relay.Constant][47] /* ty=Tensor[(468), int16] */, %884)
}

def @func_9582() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
  %885 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %886 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %887 = %885.2;
  %888 = %886.2;
  (%887, %888)
}

def @func_6031() -> (Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) {
  %889 = @func_4323() /* ty=(Tensor[(4, 16, 10), float32],) */;
  %890 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_9675() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(2, 14, 9), float32], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float32], Tensor[(8, 15, 11), float64], Tensor[(1320), float64]) {
  %893 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %894 = %893.0;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %896 = reshape(%895, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %897 = @func_889(%896) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %898 = @func_4215() /* ty=(Tensor[(2, 14, 9), float32],) */;
  %899 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %900 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %901 = cast(%894, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %902 = cast(meta[relay.Constant][48] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %903 = reshape(%902, newshape=[8, 15, 11]) /* ty=Tensor[(8, 15, 11), float64] */;
  %904 = %897.0;
  %905 = @func_7440() /* ty=Tensor[(4, 16, 10), float64] */;
  %906 = %898.0;
  %907 = %899.1;
  %908 = %900.0;
  %909 = tan(%901) /* ty=Tensor[(4, 16, 10), float32] */;
  %910 = @func_2783(%903) /* ty=Tensor[(8, 15, 11), float64] */;
  (%904, %905, %906, %907, %908, %909, %910, meta[relay.Constant][48] /* ty=Tensor[(1320), float64] */)
}

def @func_626() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %911 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %912 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %913 = cast(meta[relay.Constant][49] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %914 = reshape(%913, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %915 = @func_490(%914) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %916 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %917 = %911.5;
  %918 = %912.0;
  %919 = %915.1;
  %920 = %916.2;
  (%917, %918, %919, meta[relay.Constant][49] /* ty=Tensor[(468), int16] */, %920)
}

def @func_4849(%var_4759: Tensor[(520, 2), int64], %var_4809: Tensor[(520, 2), bool]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), float32], Tensor[(520, 2), uint8], Tensor[(520, 2), uint64], Tensor[(520, 2), float32]) {
  %921 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %922 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
  %923 = cast(%var_4759, dtype="float32") /* ty=Tensor[(520, 2), float32] */;
  %924 = cast(meta[relay.Constant][50] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %925 = reshape(%924, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %926 = @func_3864(%925) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
  %927 = %926.2;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(520, 2), float64] */;
  %929 = sin(%928) /* ty=Tensor[(520, 2), float64] */;
  %930 = cast(%var_4759, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
  %931 = shape_of(%927, dtype="int32") /* ty=Tensor[(2), int32] */;
  %932 = cast(%927, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %934 = equal(%932, %933) /* ty=Tensor[(520, 2), bool] */;
  %935 = cast(%934, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
  %936 = shape_of(%929, dtype="int32") /* ty=Tensor[(2), int32] */;
  %937 = cast(%929, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %939 = greater(%937, %938) /* ty=Tensor[(520, 2), bool] */;
  %940 = cast(%var_4809, dtype="uint8") /* ty=Tensor[(520, 2), uint8] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(2), int32] */;
  %942 = cast(%939, dtype="uint8") /* ty=Tensor[(520, 2), uint8] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %944 = cast(%939, dtype="uint64") /* ty=Tensor[(520, 2), uint64] */;
  %945 = shape_of(%929, dtype="int32") /* ty=Tensor[(2), int32] */;
  %946 = cast(%929, dtype="uint64") /* ty=Tensor[(520, 2), uint64] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %948 = cast(%939, dtype="float32") /* ty=Tensor[(520, 2), float32] */;
  %949 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  %950 = %921.0;
  %951 = %922.1;
  %952 = tan(%923) /* ty=Tensor[(520, 2), float32] */;
  %953 = subtract(%942, %943) /* ty=Tensor[(520, 2), uint8] */;
  %954 = logical_xor(%946, %947) /* ty=Tensor[(520, 2), uint64] */;
  %955 = sigmoid(%948) /* ty=Tensor[(520, 2), float32] */;
  (%949, meta[relay.Constant][50] /* ty=Tensor[(468), int16] */, %950, %951, %952, %953, %954, %955)
}

def @func_4051() -> (Tensor[(4, 16, 10), float64],) {
  %956 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
  (%956,)
}

def @func_3337() -> Tensor[(4, 16, 10), float64] {
  %957 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %957.4
}

def @func_705(%var_687: Tensor[(4, 16, 10), float64]) -> Tensor[(4, 16, 10), float32] {
  %958 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %959 = %958.5;
  %960 = cast(%var_687, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%962, %963) /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_8642(%var_8631: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 78), uint32], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float32]) {
  %964 = @func_1923() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %965 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 78), int16] */, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %966 = reshape(%965, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %967 = @func_3864(%966) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
  %968 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 78), int16] */, dtype="uint32") /* ty=Tensor[(6, 78), uint32] */;
  %969 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(6, 78), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %970 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 78), int16] */, dtype="uint32") /* ty=Tensor[(6, 78), uint32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %972 = @func_7215() /* ty=(Tensor[(7, 13, 4), float64],) */;
  %973 = @func_8522() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %974 = cast(%var_8631, dtype="float32") /* ty=Tensor[(65), float32] */;
  %975 = reshape(%974, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %976 = @func_5960(%975) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) */;
  %977 = @func_7846() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %978 = %964.1;
  %979 = %967.0;
  %980 = bitwise_xor(%970, %971) /* ty=Tensor[(6, 78), uint32] */;
  %981 = %972.0;
  %982 = %973.0;
  %983 = %976.1;
  %984 = %977.1;
  (%978, %979, %980, %981, %982, %983, %var_8631, %984)
}

def @func_9024() -> (Tensor[(4, 16, 10), float32],) {
  %985 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
  (%985,)
}

def @func_5822(%var_5785: Tensor[(468), int16], %var_5793: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(65), float32], Tensor[(13, 5, 468), bool], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float64]) {
  %986 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %987 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %988 = cast(%var_5785, dtype="int16") /* ty=Tensor[(468), int16] */;
  %989 = reshape(%988, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %990 = @func_3864(%989) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
  %991 = %990.3;
  %992 = cast(%var_5793, dtype="float32") /* ty=Tensor[(65), float32] */;
  %993 = reshape(%992, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
  %994 = @func_4153(%993) /* ty=Tensor[(13, 5, 1), float32] */;
  %995 = cast(%991, dtype="bool") /* ty=Tensor[(1, 468), bool] */;
  %996 = cast(%994, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %997 = cast(%991, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %998 = cast(%991, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %999 = reshape(%998, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %1000 = @func_3864(%999) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
  %1001 = %986.2;
  %1002 = %987.0;
  %1003 = logical_and(%995, %996) /* ty=Tensor[(13, 5, 468), bool] */;
  %1004 = asin(%997) /* ty=Tensor[(1, 468), float32] */;
  %1005 = %1000.0;
  (%1001, %1002, %var_5785, %var_5793, %1003, %1004, %1005)
}

def @func_3958() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %1006 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %1007 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%1006, %1007)
}

def @func_4096() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %1008 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %1009 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %1010 = %1008.0;
  %1011 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
  (%1009, %1010, %1011)
}

def @func_5736() -> Tensor[(4, 16, 10), float64] {
  %1012 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1012.1
}

def @func_7215() -> (Tensor[(7, 13, 4), float64],) {
  %1013 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_5920(%var_5860: Tensor[(14, 3, 12), float64], %var_5861: Tensor[(14, 3, 12), float64], %var_5874: Tensor[(1, 640), int16]) -> (Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) {
  %1015 = cast(%var_5861, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %1016 = shape_of(%var_5860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_5860, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1019 = cast(%var_5874, dtype="int16") /* ty=Tensor[(1, 640), int16] */;
  %1020 = reshape(%1019, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), int16] */;
  %1021 = @func_3059(%1020) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1022 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1023 = cast(%var_5860, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
  %1024 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1025 = divide(%1017, %1018) /* ty=Tensor[(14, 3, 12), float64] */;
  %1026 = %1021.0;
  %1027 = %1022.0;
  %1028 = @func_5750() /* ty=Tensor[(4, 16, 10), float64] */;
  %1029 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
  %1030 = cosh(%1023) /* ty=Tensor[(14, 3, 12), float64] */;
  %1031 = %1024.4;
  (%1025, %1026, %var_5874, %1027, %1028, %1029, %1030, %1031)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_399() -> (Tensor[(4, 16, 10), float64],) {
  %0 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1 = %0.1;
  (%1,)
}

def @func_3273() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %6 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %2 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %3 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %4 = %2.1;
    %5 = %3.0;
    (%4, %5)
  };
  %6() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_3959() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %9 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %7 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
    %8 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
    (%7, %8)
  };
  %9() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_4649() -> Tensor[(4, 16, 10), float32] {
  %11 = fn () -> Tensor[(4, 16, 10), float32] {
    %10 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
    %10.0
  };
  %11() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_6072(%var_6071: Tensor[(10, 7, 13), float32]) -> (Tensor[(10, 7, 13), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(10, 7, 13), float32]) {
  %22 = fn (%var_6050: Tensor[(10, 7, 13), float32]) -> (Tensor[(10, 7, 13), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(10, 7, 13), float32]) {
    %12 = cast(%var_6050, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %13 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %14 = %13.0;
    %15 = cast(%14, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %16 = reshape(%15, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
    %17 = @func_889(%16) /* ty=(Tensor[(4, 16, 10), float32],) */;
    %18 = cast(%var_6050, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %19 = tan(%12) /* ty=Tensor[(10, 7, 13), float32] */;
    %20 = %17.0;
    %21 = sigmoid(%18) /* ty=Tensor[(10, 7, 13), float32] */;
    (%19, %14, %20, %21)
  };
  %22(%var_6071) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(10, 7, 13), float32]) */
}

def @func_3653() -> (Tensor[(4, 16, 10), float64],) {
  %23 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  (%23,)
}

def @func_6457() -> Tensor[(4, 16, 10), float64] {
  @func_6455() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_6378() -> (Tensor[(4, 16, 10), float64],) {
  @func_6376() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_2399() -> Tensor[(4, 16, 10), float64] {
  %24 = fn () -> Tensor[(4, 16, 10), float64] {
    @func_1623() /* ty=Tensor[(4, 16, 10), float64] */
  };
  %24() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_378() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_10327(%var_10325: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(270), int64]) {
  @func_10324(%var_10325) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(270), int64]) */
}

def @func_4440(%var_4439: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %32 = fn (%var_4419: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
    %25 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
    %26 = cast(%var_4419, dtype="int16") /* ty=Tensor[(468), int16] */;
    %27 = reshape(%26, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %28 = @func_827(%27) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
    %29 = %25.0;
    %30 = %28.2;
    %31 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
    (%29, %30, %var_4419, %31)
  };
  %32(%var_4439) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_3586(%var_3584: int16, %var_3585: Tensor[(8, 13, 13), int16]) -> (Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) {
  %37 = fn (%var_3576: int16, %var_3577: Tensor[(8, 13, 13), int16]) -> (Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) {
    %33 = cast(%var_3576, dtype="int16") /* ty=int16 */;
    %34 = cast(%var_3577, dtype="int16") /* ty=Tensor[(8, 13, 13), int16] */;
    %35 = bitwise_and(%33, %34) /* ty=Tensor[(8, 13, 13), int16] */;
    %36 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
    (%35, %36)
  };
  %37(%var_3584, %var_3585) /* ty=(Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_6344(%var_6313: Tensor[(15, 14, 12), float32]) -> (Tensor[(15, 14, 12), uint64], Tensor[(15, 14, 12), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %38 = @func_5765() /* ty=(Tensor[(15, 14, 12), float32],) */;
  %39 = %38.0;
  %40 = cast(%var_6313, dtype="uint64") /* ty=Tensor[(15, 14, 12), uint64] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="uint64") /* ty=Tensor[(15, 14, 12), uint64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %44 = cast(%39, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %45 = shape_of(%var_6313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%var_6313, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %48 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %49 = add(%42, %43) /* ty=Tensor[(15, 14, 12), uint64] */;
  %50 = floor_divide(%46, %47) /* ty=Tensor[(15, 14, 12), float32] */;
  %51 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %52 = %48.0;
  (%49, %50, %51, %52)
}

def @func_9290() -> (Tensor[(4, 16, 10), float64],) {
  %53 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%53,)
}

def @func_3747() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) {
  %63 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) {
    %54 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %55 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
    %56 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%55, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %60 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
    %61 = %54.6;
    %62 = less(%58, %59) /* ty=Tensor[(4, 16, 10), bool] */;
    (%60, %61, %62)
  };
  %63() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) */
}

def @func_9558() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  @func_9556() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */
}

def @func_6667(%var_6666: Tensor[(242, 6), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 11), float64], Tensor[(242, 6), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %74 = fn (%var_6646: Tensor[(242, 6), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 11), float64], Tensor[(242, 6), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
    %64 = @func_3958() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %65 = cast(%var_6646, dtype="float64") /* ty=Tensor[(242, 6), float64] */;
    %66 = reshape(%65, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float64] */;
    %67 = @func_5198(%66) /* ty=(Tensor[(12, 11, 11), float64],) */;
    %68 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %69 = reshape(%68, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %70 = @func_1518(%69) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %71 = %64.1;
    %72 = %67.0;
    %73 = %70.3;
    (%71, %72, %var_6646, %73, meta[relay.Constant][1] /* ty=Tensor[(468), int16] */)
  };
  %74(%var_6666) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(12, 11, 11), float64], Tensor[(242, 6), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_4610(%var_4608: Tensor[(9, 7, 11), uint8], %var_4609: Tensor[(9, 7, 11), uint8]) -> (Tensor[(9, 7, 11), bool], Tensor[(9, 7, 11), bool]) {
  %85 = fn (%var_4597: Tensor[(9, 7, 11), uint8], %var_4598: Tensor[(9, 7, 11), uint8]) -> (Tensor[(9, 7, 11), bool], Tensor[(9, 7, 11), bool]) {
    %75 = cast(%var_4598, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %76 = shape_of(%var_4597, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%var_4597, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %79 = cast(%var_4597, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %80 = shape_of(%var_4598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%var_4598, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %83 = greater(%77, %78) /* ty=Tensor[(9, 7, 11), bool] */;
    %84 = less(%81, %82) /* ty=Tensor[(9, 7, 11), bool] */;
    (%83, %84)
  };
  %85(%var_4608, %var_4609) /* ty=(Tensor[(9, 7, 11), bool], Tensor[(9, 7, 11), bool]) */
}

def @func_6033() -> (Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) {
  @func_6031() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) */
}

def @func_8487() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float32]) {
  %86 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %87 = %86.4;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %89 = log(%88) /* ty=Tensor[(1, 468), float32] */;
  %90 = cast(%89, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %91 = reshape(%90, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %92 = @func_1518(%91) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %93 = cast(%89, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %94 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %95 = @func_7398() /* ty=Tensor[(4, 16, 10), float64] */;
  %96 = %92.0;
  %97 = rsqrt(%93) /* ty=Tensor[(1, 468), float32] */;
  %98 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
  (%94, %95, %96, %97, %98)
}

def @func_5855(%var_5853: Tensor[(15, 14, 9), int8]) -> (Tensor[(15, 14, 9), bool], Tensor[(4, 16, 10), float64]) {
  @func_5852(%var_5853) /* ty=(Tensor[(15, 14, 9), bool], Tensor[(4, 16, 10), float64]) */
}

def @func_3337() -> Tensor[(4, 16, 10), float64] {
  %99 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %99.4
}

def @func_2811(%var_2809: Tensor[(9, 10, 15), uint8], %var_2810: Tensor[(9, 10, 15), uint8]) -> Tensor[(9, 10, 15), uint8] {
  %104 = fn (%var_2797: Tensor[(9, 10, 15), uint8], %var_2798: Tensor[(9, 10, 15), uint8]) -> Tensor[(9, 10, 15), uint8] {
    %100 = cast(%var_2798, dtype="uint8") /* ty=Tensor[(9, 10, 15), uint8] */;
    %101 = shape_of(%var_2797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%var_2797, dtype="uint8") /* ty=Tensor[(9, 10, 15), uint8] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    subtract(%102, %103) /* ty=Tensor[(9, 10, 15), uint8] */
  };
  %104(%var_2809, %var_2810) /* ty=Tensor[(9, 10, 15), uint8] */
}

def @func_707(%var_706: Tensor[(4, 16, 10), float64]) -> Tensor[(4, 16, 10), float32] {
  %111 = fn (%var_687: Tensor[(4, 16, 10), float64]) -> Tensor[(4, 16, 10), float32] {
    %105 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %106 = %105.5;
    %107 = cast(%var_687, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
    %109 = cast(%106, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%109, %110) /* ty=Tensor[(4, 16, 10), float32] */
  };
  %111(%var_706) /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_6144() -> Tensor[(4, 16, 10), float64] {
  @func_6142() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9065() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %112 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  %113 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%112, %113)
}

def @func_283() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %114 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %115 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%114, %115)
}

def @func_9146() -> (Tensor[(6, 10, 8), float32], Tensor[(4, 16, 10), float64]) {
  @func_9144() /* ty=(Tensor[(6, 10, 8), float32], Tensor[(4, 16, 10), float64]) */
}

def @func_9992(%var_9986: Tensor[(8, 15, 5), float64]) -> (Tensor[(8, 15, 5), float64],) {
  %116 = cast(%var_9986, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %117 = sigmoid(%116) /* ty=Tensor[(8, 15, 5), float64] */;
  (%117,)
}

def @func_4338() -> (Tensor[(4, 16, 10), float64],) {
  @func_4336() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_2988(%var_2987: Tensor[(4, 4, 13), float32]) -> (Tensor[(4, 4, 13), float32],) {
  %120 = fn (%var_2983: Tensor[(4, 4, 13), float32]) -> (Tensor[(4, 4, 13), float32],) {
    %118 = cast(%var_2983, dtype="float32") /* ty=Tensor[(4, 4, 13), float32] */;
    %119 = sin(%118) /* ty=Tensor[(4, 4, 13), float32] */;
    (%119,)
  };
  %120(%var_2987) /* ty=(Tensor[(4, 4, 13), float32],) */
}

def @func_4134() -> (Tensor[(4, 16, 10), float64],) {
  %122 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %121 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
    (%121,)
  };
  %122() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_1371(%var_1364: Tensor[(10, 9, 9), uint32], %var_1365: Tensor[(10, 9, 9), uint32]) -> (Tensor[(10, 9, 9), uint32],) {
  %123 = cast(%var_1365, dtype="uint32") /* ty=Tensor[(10, 9, 9), uint32] */;
  %124 = shape_of(%var_1364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%var_1364, dtype="uint32") /* ty=Tensor[(10, 9, 9), uint32] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %127 = right_shift(%125, %126) /* ty=Tensor[(10, 9, 9), uint32] */;
  (%127,)
}

def @func_2541(%var_2539: Tensor[(1040), int64], %var_2540: Tensor[(6, 78), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) {
  @func_2537(%var_2539, %var_2540) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */
}

def @func_376() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %128 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %129 = cast(%128, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %130 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %131 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %132 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %133 = rsqrt(%129) /* ty=Tensor[(4, 16, 10), float32] */;
  %134 = %130.1;
  %135 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %136 = %131.0;
  %137 = %132.0;
  (%133, %134, %135, %136, %137)
}

def @func_2034(%var_2033: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) {
  %142 = fn (%var_2015: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) {
    %138 = cast(%var_2015, dtype="float64") /* ty=Tensor[(12, 11, 1), float64] */;
    %139 = cast(%var_2015, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
    %140 = cos(%138) /* ty=Tensor[(12, 11, 1), float64] */;
    %141 = rsqrt(%139) /* ty=Tensor[(12, 11, 1), float32] */;
    (%140, %141)
  };
  %142(%var_2033) /* ty=(Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) */
}

def @func_3494() -> Tensor[(4, 16, 10), float32] {
  @func_3492() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_10290(%var_10289: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) {
  %150 = fn (%var_10279: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) {
    %143 = @func_8562() /* ty=(Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) */;
    %144 = cast(%var_10279, dtype="int64") /* ty=Tensor[(270), int64] */;
    %145 = reshape(%144, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
    %146 = @func_10127(%145) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %147 = %143.1;
    %148 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
    %149 = %146.2;
    (%147, %148, %149, %var_10279)
  };
  %150(%var_10289) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) */
}

def @func_4336() -> (Tensor[(4, 16, 10), float64],) {
  %151 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  (%151,)
}

def @func_10013() -> (Tensor[(4, 16, 10), float64],) {
  @func_10011() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_476() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_7072(%var_7071: Tensor[(132), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) {
  %158 = fn (%var_7029: Tensor[(132), float64]) -> (Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) {
    %152 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %153 = cast(%var_7029, dtype="float64") /* ty=Tensor[(132), float64] */;
    %154 = reshape(%153, newshape=[12, 11, 1]) /* ty=Tensor[(12, 11, 1), float64] */;
    %155 = @func_2032(%154) /* ty=(Tensor[(12, 11, 1), float64], Tensor[(12, 11, 1), float32]) */;
    %156 = %152.0;
    %157 = %155.0;
    (%156, %157, %var_7029)
  };
  %158(%var_7071) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) */
}

def @func_5738() -> Tensor[(4, 16, 10), float64] {
  @func_5736() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9582() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
  %159 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %160 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %161 = %159.2;
  %162 = %160.2;
  (%161, %162)
}

def @func_5172() -> Tensor[(468, 1), int16] {
  %163 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %163.4
}

def @main(%var_10360: Tensor[(11, 13, 8), float32]) -> Tensor[(11, 13, 8), float32] {
  %164 = cast(%var_10360, dtype="float32") /* ty=Tensor[(11, 13, 8), float32] */;
  atan(%164) /* ty=Tensor[(11, 13, 8), float32] */
}

def @func_3574(%var_3573: Tensor[(208), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) {
  %171 = fn (%var_3570: Tensor[(208), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) {
    %165 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
    %166 = cast(%var_3570, dtype="float32") /* ty=Tensor[(208), float32] */;
    %167 = reshape(%166, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float32] */;
    %168 = @func_2986(%167) /* ty=(Tensor[(4, 4, 13), float32],) */;
    %169 = %165.0;
    %170 = %168.0;
    (%169, %170, %var_3570)
  };
  %171(%var_3573) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) */
}

def @func_7197() -> Tensor[(4, 16, 10), float64] {
  %173 = fn () -> Tensor[(4, 16, 10), float64] {
    %172 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %172.0
  };
  %173() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_7399() -> Tensor[(4, 16, 10), float64] {
  %175 = fn () -> Tensor[(4, 16, 10), float64] {
    %174 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
    %174.6
  };
  %175() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1711() -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  %176 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %177 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(7, 13, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 4), float64] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %180 = floor_mod(%178, %179) /* ty=Tensor[(7, 13, 4), float64] */;
  %181 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
  (%180, %181)
}

def @func_2291() -> (Tensor[(4, 16, 10), float64],) {
  %182 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %183 = %182.0;
  (%183,)
}

def @func_5066(%var_4999: Tensor[(6, 15, 3), int64], %var_5000: Tensor[(6, 15, 3), int64]) -> (Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) {
  %184 = cast(%var_5000, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %185 = shape_of(%var_4999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%var_4999, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = not_equal(%186, %187) /* ty=Tensor[(6, 15, 3), bool] */;
  %189 = cast(%var_5000, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%188, dtype="bool") /* ty=Tensor[(6, 15, 3), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %193 = cast(meta[relay.Constant][4] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %194 = reshape(%193, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %195 = @func_827(%194) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %196 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %197 = cast(%188, dtype="float64") /* ty=Tensor[(6, 15, 3), float64] */;
  %198 = sqrt(%197) /* ty=Tensor[(6, 15, 3), float64] */;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(6, 15, 3), float32] */;
  %200 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %201 = less_equal(%191, %192) /* ty=Tensor[(6, 15, 3), bool] */;
  %202 = %195.0;
  %203 = %196.1;
  %204 = cosh(%199) /* ty=Tensor[(6, 15, 3), float32] */;
  %205 = %200.0;
  (%201, %202, meta[relay.Constant][4] /* ty=Tensor[(468), int16] */, %203, %204, %205)
}

def @func_4479() -> (Tensor[(4, 16, 10), float64],) {
  %208 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %206 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_2626() -> Tensor[(4, 16, 10), float64] {
  %209 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %209.0
}

def @func_8068() -> Tensor[(4, 16, 10), float32] {
  %210 = @func_4323() /* ty=(Tensor[(4, 16, 10), float32],) */;
  %210.0
}

def @func_6787(%var_6706: Tensor[(504), float64], %var_6709: Tensor[(5, 56), bool], %var_6772: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(5, 56), bool], Tensor[(4, 16, 10), float64], Tensor[(234, 2), float32], Tensor[(8, 13, 13), int16], Tensor[(1352), int16], Tensor[(504), int16]) {
  %211 = cast(%var_6706, dtype="float64") /* ty=Tensor[(504), float64] */;
  %212 = cast(%var_6706, dtype="float64") /* ty=Tensor[(504), float64] */;
  %213 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
  %214 = cast(%213, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %215 = reshape(%211, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float64] */;
  %216 = reshape(%212, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float64] */;
  %217 = reshape(%214, newshape=[1, 640]) /* ty=Tensor[(1, 640), int16] */;
  %218 = @func_5920(%215, %216, %217) /* ty=(Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) */;
  %219 = cast(%var_6709, dtype="bool") /* ty=Tensor[(5, 56), bool] */;
  %220 = reshape(%219, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), bool] */;
  %221 = @func_6511(%220) /* ty=(Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) */;
  %222 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %223 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %226 = cast(%var_6772, dtype="int16") /* ty=int16 */;
  %227 = cast(meta[relay.Constant][5] /* ty=Tensor[(1352), int16] */, dtype="int16") /* ty=Tensor[(1352), int16] */;
  %228 = reshape(%226, newshape=[]) /* ty=int16 */;
  %229 = reshape(%227, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), int16] */;
  %230 = @func_3583(%228, %229) /* ty=(Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) */;
  %231 = cast(%var_6706, dtype="int16") /* ty=Tensor[(504), int16] */;
  %232 = cast(%var_6772, dtype="int16") /* ty=int16 */;
  %233 = %218.4;
  %234 = %221.1;
  %235 = %222.0;
  %236 = atanh(%225) /* ty=Tensor[(234, 2), float32] */;
  %237 = %230.0;
  %238 = subtract(%231, %232) /* ty=Tensor[(504), int16] */;
  (%213, %233, %234, %var_6709, %235, %236, %237, meta[relay.Constant][5] /* ty=Tensor[(1352), int16] */, %238)
}

def @func_3061(%var_3060: Tensor[(4, 16, 10), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %248 = fn (%var_3044: Tensor[(4, 16, 10), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %239 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
    %240 = %239.5;
    %241 = cast(%var_3044, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%240, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %245 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %246 = mod(%243, %244) /* ty=Tensor[(4, 16, 10), float64] */;
    %247 = %245.4;
    (%246, %247)
  };
  %248(%var_3060) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_6513(%var_6512: Tensor[(14, 2, 10), bool]) -> (Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) {
  %255 = fn (%var_6486: Tensor[(14, 2, 10), bool]) -> (Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) {
    %249 = cast(%var_6486, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
    %250 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %253 = logical_or(%251, %252) /* ty=Tensor[(14, 2, 10), bool] */;
    %254 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
    (%253, %254)
  };
  %255(%var_6512) /* ty=(Tensor[(14, 2, 10), bool], Tensor[(4, 16, 10), float64]) */
}

def @func_8797() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %256 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %257 = %256.1;
  %258 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  (%257, %258)
}

def @func_9875(%var_9873: Tensor[(8, 16, 4), int64], %var_9874: Tensor[(8, 16, 4), int64]) -> (Tensor[(8, 16, 4), bool], Tensor[(234, 2), int16], Tensor[(2, 15, 7), bool], Tensor[(210), uint8]) {
  %272 = fn (%var_9835: Tensor[(8, 16, 4), int64], %var_9836: Tensor[(8, 16, 4), int64]) -> (Tensor[(8, 16, 4), bool], Tensor[(234, 2), int16], Tensor[(2, 15, 7), bool], Tensor[(210), uint8]) {
    %259 = cast(%var_9836, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
    %260 = shape_of(%var_9835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%var_9835, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %263 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
    %264 = cast(meta[relay.Constant][7] /* ty=Tensor[(210), uint8] */, dtype="uint8") /* ty=Tensor[(210), uint8] */;
    %265 = cast(meta[relay.Constant][7] /* ty=Tensor[(210), uint8] */, dtype="uint8") /* ty=Tensor[(210), uint8] */;
    %266 = reshape(%264, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint8] */;
    %267 = reshape(%265, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), uint8] */;
    %268 = @func_7619(%266, %267) /* ty=(Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) */;
    %269 = less_equal(%261, %262) /* ty=Tensor[(8, 16, 4), bool] */;
    %270 = %263.0;
    %271 = %268.2;
    (%269, %270, %271, meta[relay.Constant][7] /* ty=Tensor[(210), uint8] */)
  };
  %272(%var_9873, %var_9874) /* ty=(Tensor[(8, 16, 4), bool], Tensor[(234, 2), int16], Tensor[(2, 15, 7), bool], Tensor[(210), uint8]) */
}

def @func_401() -> (Tensor[(4, 16, 10), float64],) {
  @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_8208(%var_8206: Tensor[(2, 6, 3), uint8]) -> Tensor[(2, 6, 3), uint8] {
  @func_8205(%var_8206) /* ty=Tensor[(2, 6, 3), uint8] */
}

def @func_3545() -> Tensor[(4, 16, 10), float64] {
  @func_3543() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1375(%var_1373: Tensor[(10, 9, 9), uint32], %var_1374: Tensor[(10, 9, 9), uint32]) -> (Tensor[(10, 9, 9), uint32],) {
  @func_1371(%var_1373, %var_1374) /* ty=(Tensor[(10, 9, 9), uint32],) */
}

def @func_5425(%var_5423: int32, %var_5424: Tensor[(1, 14, 8), int32]) -> (Tensor[(1, 14, 8), bool],) {
  %276 = fn (%var_5412: int32, %var_5413: Tensor[(1, 14, 8), int32]) -> (Tensor[(1, 14, 8), bool],) {
    %273 = cast(%var_5412, dtype="bool") /* ty=bool */;
    %274 = cast(%var_5413, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
    %275 = less(%273, %274) /* ty=Tensor[(1, 14, 8), bool] */;
    (%275,)
  };
  %276(%var_5423, %var_5424) /* ty=(Tensor[(1, 14, 8), bool],) */
}

def @func_891(%var_890: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), float32],) {
  %284 = fn (%var_882: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), float32],) {
    %277 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %278 = %277.0;
    %279 = cast(%var_882, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(%278, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %283 = power(%281, %282) /* ty=Tensor[(4, 16, 10), float32] */;
    (%283,)
  };
  %284(%var_890) /* ty=(Tensor[(4, 16, 10), float32],) */
}

def @func_2942() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %291 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
    %285 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %286 = cast(meta[relay.Constant][8] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %287 = reshape(%286, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
    %288 = @func_490(%287) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
    %289 = %285.0;
    %290 = %288.1;
    (%289, %290, meta[relay.Constant][8] /* ty=Tensor[(468), int16] */)
  };
  %291() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_2343() -> (Tensor[(4, 16, 10), float64],) {
  %292 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %293 = %292.0;
  (%293,)
}

def @func_10324(%var_10316: Tensor[(270), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(270), int64]) {
  %294 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %295 = cast(%var_10316, dtype="int64") /* ty=Tensor[(270), int64] */;
  %296 = reshape(%295, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %297 = @func_10288(%296) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(3, 90), int64], Tensor[(270), int64]) */;
  %298 = %294.0;
  %299 = %297.0;
  (%298, %299, %var_10316)
}

def @func_7622(%var_7620: Tensor[(2, 15, 7), uint8], %var_7621: Tensor[(2, 15, 7), uint8]) -> (Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) {
  %313 = fn (%var_7573: Tensor[(2, 15, 7), uint8], %var_7596: Tensor[(2, 15, 7), uint8]) -> (Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) {
    %300 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 15, 7), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 7), uint8] */;
    %301 = shape_of(%var_7573, dtype="int32") /* ty=Tensor[(3), int32] */;
    %302 = cast(%var_7573, dtype="uint8") /* ty=Tensor[(2, 15, 7), uint8] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %304 = @func_6299() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %305 = cast(%var_7596, dtype="bool") /* ty=Tensor[(2, 15, 7), bool] */;
    %306 = shape_of(%var_7573, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%var_7573, dtype="bool") /* ty=Tensor[(2, 15, 7), bool] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %309 = bitwise_and(%302, %303) /* ty=Tensor[(2, 15, 7), uint8] */;
    %310 = %304.0;
    %311 = less(%307, %308) /* ty=Tensor[(2, 15, 7), bool] */;
    %312 = @func_7124() /* ty=Tensor[(4, 16, 10), float64] */;
    (%309, %310, %311, %312)
  };
  %313(%var_7620, %var_7621) /* ty=(Tensor[(2, 15, 7), uint8], Tensor[(4, 16, 10), float64], Tensor[(2, 15, 7), bool], Tensor[(4, 16, 10), float64]) */
}

def @func_2612() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %318 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %314 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
    %315 = cast(%314, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %316 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
    %317 = sigmoid(%315) /* ty=Tensor[(4, 16, 10), float64] */;
    (%316, %317)
  };
  %318() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_2293() -> (Tensor[(4, 16, 10), float64],) {
  @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_7441() -> Tensor[(4, 16, 10), float64] {
  %320 = fn () -> Tensor[(4, 16, 10), float64] {
    %319 = @func_3488() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %319.0
  };
  %320() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_778() -> Tensor[(4, 16, 10), float64] {
  %322 = fn () -> Tensor[(4, 16, 10), float64] {
    %321 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %321.1
  };
  %322() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1335() -> Tensor[(4, 16, 10), float64] {
  %323 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  exp(%324) /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_748(%var_747: Tensor[(4, 16, 10), float32]) -> (Tensor[(4, 16, 10), bool],) {
  %332 = fn (%var_741: Tensor[(4, 16, 10), float32]) -> (Tensor[(4, 16, 10), bool],) {
    %325 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %326 = %325.0;
    %327 = cast(%var_741, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
    %329 = cast(%326, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %331 = not_equal(%329, %330) /* ty=Tensor[(4, 16, 10), bool] */;
    (%331,)
  };
  %332(%var_747) /* ty=(Tensor[(4, 16, 10), bool],) */
}

def @func_4578() -> (Tensor[(4, 16, 10), float64],) {
  %333 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %334 = %333.0;
  (%334,)
}

def @func_6585() -> Tensor[(4, 16, 10), float64] {
  @func_6583() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1624() -> Tensor[(4, 16, 10), float64] {
  %335 = fn () -> Tensor[(4, 16, 10), float64] {
    @func_1267() /* ty=Tensor[(4, 16, 10), float64] */
  };
  %335() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9731(%var_9729: Tensor[(1040), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  @func_9728(%var_9729) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_5993() -> (Tensor[(4, 16, 10), float64],) {
  %338 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %336 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
    %337 = %336.0;
    (%337,)
  };
  %338() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_5825(%var_5823: Tensor[(468), int16], %var_5824: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(65), float32], Tensor[(13, 5, 468), bool], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float64]) {
  %359 = fn (%var_5785: Tensor[(468), int16], %var_5793: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(65), float32], Tensor[(13, 5, 468), bool], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float64]) {
    %339 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
    %340 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %341 = cast(%var_5785, dtype="int16") /* ty=Tensor[(468), int16] */;
    %342 = reshape(%341, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
    %343 = @func_3864(%342) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
    %344 = %343.3;
    %345 = cast(%var_5793, dtype="float32") /* ty=Tensor[(65), float32] */;
    %346 = reshape(%345, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
    %347 = @func_4153(%346) /* ty=Tensor[(13, 5, 1), float32] */;
    %348 = cast(%344, dtype="bool") /* ty=Tensor[(1, 468), bool] */;
    %349 = cast(%347, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
    %350 = cast(%344, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
    %351 = cast(%344, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
    %352 = reshape(%351, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
    %353 = @func_3864(%352) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
    %354 = %339.2;
    %355 = %340.0;
    %356 = logical_and(%348, %349) /* ty=Tensor[(13, 5, 468), bool] */;
    %357 = asin(%350) /* ty=Tensor[(1, 468), float32] */;
    %358 = %353.0;
    (%354, %355, %var_5785, %var_5793, %356, %357, %358)
  };
  %359(%var_5823, %var_5824) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(65), float32], Tensor[(13, 5, 468), bool], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float64]) */
}

def @func_9119() -> (Tensor[(4, 16, 10), float32],) {
  @func_9117() /* ty=(Tensor[(4, 16, 10), float32],) */
}

def @func_7695() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  @func_7693() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_1207() -> (Tensor[(6, 11, 4), float64],) {
  %360 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %361 = sqrt(%360) /* ty=Tensor[(6, 11, 4), float64] */;
  (%361,)
}

def @func_5750() -> Tensor[(4, 16, 10), float64] {
  @func_4030() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_5766() -> (Tensor[(15, 14, 12), float32],) {
  %367 = fn () -> (Tensor[(15, 14, 12), float32],) {
    %362 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
    %363 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(15, 14, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %364 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 12), float32] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %366 = subtract(%364, %365) /* ty=Tensor[(15, 14, 12), float32] */;
    (%366,)
  };
  %367() /* ty=(Tensor[(15, 14, 12), float32],) */
}

def @func_3376() -> (Tensor[(4, 16, 10), uint16], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  @func_3374() /* ty=(Tensor[(4, 16, 10), uint16], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_1883() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) {
  @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_1269() -> Tensor[(4, 16, 10), float64] {
  @func_1267() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1024(%var_1023: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
  %380 = fn (%var_993: Tensor[(4, 16, 10), float64]) -> (Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
    %368 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
    %369 = cast(%var_993, dtype="int8") /* ty=Tensor[(4, 16, 10), int8] */;
    %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %371 = cast(%368, dtype="int8") /* ty=Tensor[(4, 16, 10), int8] */;
    %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %373 = subtract(%371, %372) /* ty=Tensor[(4, 16, 10), int8] */;
    %374 = cast(%373, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %375 = reshape(%374, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
    %376 = @func_889(%375) /* ty=(Tensor[(4, 16, 10), float32],) */;
    %377 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %378 = %376.0;
    %379 = %377.0;
    (%373, %378, %379)
  };
  %380(%var_1023) /* ty=(Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) */
}

def @func_6884() -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
  %386 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
    %381 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
    %382 = @func_5707() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %383 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
    %384 = %381.3;
    %385 = %382.0;
    (%383, %384, %385)
  };
  %386() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_6178() -> (Tensor[(4, 16, 10), float64], Tensor[(8, 11, 13), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %395 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(8, 11, 13), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
    %387 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %388 = @func_5377() /* ty=(Tensor[(8, 11, 13), float64],) */;
    %389 = cast(meta[relay.Constant][13] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %390 = reshape(%389, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %391 = @func_4438(%390) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %392 = %387.0;
    %393 = %388.0;
    %394 = %391.3;
    (%392, %393, %394, meta[relay.Constant][13] /* ty=Tensor[(468), int16] */)
  };
  %395() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(8, 11, 13), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_10011() -> (Tensor[(4, 16, 10), float64],) {
  %396 = @func_4404() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %397 = %396.0;
  (%397,)
}

def @func_4580() -> (Tensor[(4, 16, 10), float64],) {
  @func_4578() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_8205(%var_8196: Tensor[(2, 6, 3), uint8]) -> Tensor[(2, 6, 3), uint8] {
  %398 = cast(%var_8196, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %399 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %402 = logical_xor(%400, %401) /* ty=Tensor[(2, 6, 3), uint8] */;
  %403 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 6, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="uint8") /* ty=Tensor[(2, 6, 3), uint8] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%405, %406) /* ty=Tensor[(2, 6, 3), uint8] */
}

def @func_1925() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_1923() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_6299() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %407 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %408 = @func_5585() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %409 = %407.0;
  %410 = %408.0;
  (%409, %410)
}

def @func_8708() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  @func_8706() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_1536() -> Tensor[(4, 16, 10), float32] {
  %412 = fn () -> Tensor[(4, 16, 10), float32] {
    %411 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
    %411.0
  };
  %412() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_1467() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %418 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
    %413 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %414 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
    %415 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
    %416 = %413.0;
    %417 = %414.0;
    (%415, %416, %417)
  };
  %418() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_829(%var_828: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %425 = fn (%var_825: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
    %419 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %420 = cast(%var_825, dtype="int16") /* ty=Tensor[(468), int16] */;
    %421 = reshape(%420, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
    %422 = @func_490(%421) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
    %423 = %419.0;
    %424 = %422.1;
    (%423, %424, %var_825)
  };
  %425(%var_828) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_4560() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %431 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %426 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %427 = %426.1;
    %428 = cast(%427, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %429 = log10(%428) /* ty=Tensor[(4, 16, 10), float64] */;
    %430 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
    (%429, %430)
  };
  %431() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_6114() -> (Tensor[(234, 2), int16],) {
  @func_6112() /* ty=(Tensor[(234, 2), int16],) */
}

def @func_9995(%var_9993: Tensor[(8, 15, 5), float64]) -> (Tensor[(8, 15, 5), float64],) {
  @func_9992(%var_9993) /* ty=(Tensor[(8, 15, 5), float64],) */
}

def @func_6253() -> Tensor[(4, 16, 10), float32] {
  @func_6251() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_1337() -> Tensor[(4, 16, 10), float64] {
  @func_1335() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_4032() -> Tensor[(4, 16, 10), float64] {
  @func_4030() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_6095() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %435 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
    %432 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
    %433 = %432.1;
    %434 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
    (%433, %434)
  };
  %435() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_5736() -> Tensor[(4, 16, 10), float64] {
  %436 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %436.1
}

def @func_2840() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %444 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
    %437 = @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %438 = cast(meta[relay.Constant][15] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %439 = reshape(%438, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %440 = @func_1518(%439) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %441 = %437.0;
    %442 = %440.1;
    %443 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
    (%441, %442, meta[relay.Constant][15] /* ty=Tensor[(468), int16] */, %443)
  };
  %444() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_2537(%var_2503: Tensor[(1040), int64], %var_2504: Tensor[(6, 78), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) {
  %445 = @func_1923() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %446 = cast(%var_2503, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %447 = cast(%var_2503, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %448 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %449 = reshape(%446, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %450 = reshape(%447, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %451 = reshape(%448, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %452 = @func_2440(%449, %450, %451) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %453 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %454 = reshape(%453, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %455 = @func_490(%454) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %456 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %457 = cast(%var_2504, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %458 = reshape(%457, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %459 = @func_490(%458) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %460 = %445.0;
  %461 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  %462 = %452.1;
  %463 = %455.1;
  %464 = %456.1;
  %465 = %459.0;
  (%460, %461, %462, %var_2503, %var_2504, %463, %464, %465)
}

def @func_4216() -> (Tensor[(2, 14, 9), float32],) {
  %470 = fn () -> (Tensor[(2, 14, 9), float32],) {
    %466 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 9), float64] */;
    %467 = exp(%466) /* ty=Tensor[(2, 14, 9), float64] */;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
    %469 = acos(%468) /* ty=Tensor[(2, 14, 9), float32] */;
    (%469,)
  };
  %470() /* ty=(Tensor[(2, 14, 9), float32],) */
}

def @func_8322() -> (Tensor[(4, 16, 10), float64],) {
  @func_8320() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_4052() -> (Tensor[(4, 16, 10), float64],) {
  %472 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %471 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
    (%471,)
  };
  %472() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_1518(%var_1513: Tensor[(468), int16]) -> (Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %473 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %474 = cast(%var_1513, dtype="int16") /* ty=Tensor[(468), int16] */;
  %475 = reshape(%474, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %476 = @func_490(%475) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %477 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %478 = %473.0;
  %479 = %476.1;
  %480 = %477.0;
  (%478, %479, %var_1513, %480)
}

def @func_2819() -> (Tensor[(4, 16, 10), float64],) {
  %483 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %481 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %482 = %481.4;
    (%482,)
  };
  %483() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_7878(%var_7876: int16) -> (Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(468, 1), float64]) {
  @func_7875(%var_7876) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(468, 1), float64]) */
}

def @func_3864(%var_3860: Tensor[(1, 468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) {
  %484 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %485 = cast(meta[relay.Constant][17] /* ty=Tensor[(520, 2), int64] */, dtype="int64") /* ty=Tensor[(520, 2), int64] */;
  %486 = cast(%var_3860, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %487 = reshape(%485, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %488 = reshape(%486, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %489 = @func_2537(%487, %488) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %490 = %484.1;
  %491 = %489.0;
  (%490, %491, meta[relay.Constant][17] /* ty=Tensor[(520, 2), int64] */, %var_3860)
}

def @func_7271(%var_7268: float64, %var_7269: Tensor[(4, 15, 13), float64], %var_7270: Tensor[(40, 26), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(16, 13, 5), float64], Tensor[(40, 26), int64], Tensor[(468, 1), int16], Tensor[(4, 15, 13), float32]) {
  %509 = fn (%var_7236: float64, %var_7237: Tensor[(4, 15, 13), float64], %var_7249: Tensor[(40, 26), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(16, 13, 5), float64], Tensor[(40, 26), int64], Tensor[(468, 1), int16], Tensor[(4, 15, 13), float32]) {
    %492 = cast(%var_7236, dtype="bool") /* ty=bool */;
    %493 = cast(%var_7237, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
    %494 = cast(%var_7249, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
    %495 = cast(%var_7249, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
    %496 = cast(meta[relay.Constant][18] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
    %497 = reshape(%494, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %498 = reshape(%495, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %499 = reshape(%496, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %500 = @func_2440(%497, %498, %499) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
    %501 = cast(%var_7237, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
    %502 = log2(%501) /* ty=Tensor[(4, 15, 13), float32] */;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
    %504 = erf(%503) /* ty=Tensor[(4, 15, 13), float32] */;
    %505 = cast(%504, dtype="float32") /* ty=Tensor[(4, 15, 13), float32] */;
    %506 = less(%492, %493) /* ty=Tensor[(4, 15, 13), bool] */;
    %507 = %500.1;
    %508 = asin(%505) /* ty=Tensor[(4, 15, 13), float32] */;
    (%506, %507, %var_7249, meta[relay.Constant][18] /* ty=Tensor[(468, 1), int16] */, %508)
  };
  %509(%var_7268, %var_7269, %var_7270) /* ty=(Tensor[(4, 15, 13), bool], Tensor[(16, 13, 5), float64], Tensor[(40, 26), int64], Tensor[(468, 1), int16], Tensor[(4, 15, 13), float32]) */
}

def @func_8645(%var_8643: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 78), uint32], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float32]) {
  @func_8642(%var_8643) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 78), uint32], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float32]) */
}

def @func_7742() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %518 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
    %510 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %511 = @func_7514() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) */;
    %512 = %511.1;
    %513 = cast(%512, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %514 = @func_5537() /* ty=(Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
    %515 = %510.1;
    %516 = acos(%513) /* ty=Tensor[(4, 16, 10), float64] */;
    %517 = %514.1;
    (%515, %516, %517)
  };
  %518() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_474() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %519 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %520 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %521 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %522 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %523 = %522.0;
  %524 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %525 = %524.1;
  %526 = cast(%525, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %527 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%523, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %530 = multiply(%528, %529) /* ty=Tensor[(4, 16, 10), uint16] */;
  %531 = cast(%525, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%530, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %535 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %536 = %519.1;
  %537 = %520.0;
  %538 = %521.3;
  %539 = greater(%533, %534) /* ty=Tensor[(4, 16, 10), bool] */;
  %540 = %535.1;
  %541 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  %542 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%536, %537, %538, %539, %540, %541, %542)
}

def @func_3942(%var_3939: Tensor[(1320), float64], %var_3940: Tensor[(240), float64], %var_3941: Tensor[(1, 810), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(8, 15, 11), float64], Tensor[(1320), float64], Tensor[(4, 16, 10), float32], Tensor[(3, 16, 5), float64], Tensor[(240), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 208), float32], Tensor[(10, 9, 9), uint32], Tensor[(1, 810), uint32]) {
  %563 = fn (%var_3884: Tensor[(1320), float64], %var_3909: Tensor[(240), float64], %var_3923: Tensor[(1, 810), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(8, 15, 11), float64], Tensor[(1320), float64], Tensor[(4, 16, 10), float32], Tensor[(3, 16, 5), float64], Tensor[(240), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 208), float32], Tensor[(10, 9, 9), uint32], Tensor[(1, 810), uint32]) {
    %543 = cast(%var_3884, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %544 = reshape(%543, newshape=[8, 15, 11]) /* ty=Tensor[(8, 15, 11), float64] */;
    %545 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
    %546 = cast(%var_3909, dtype="float64") /* ty=Tensor[(240), float64] */;
    %547 = reshape(%546, newshape=[3, 16, 5]) /* ty=Tensor[(3, 16, 5), float64] */;
    %548 = @func_3303(%547) /* ty=(Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) */;
    %549 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 208), float32] */, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
    %550 = reshape(%549, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %551 = @func_3572(%550) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 4, 13), float32], Tensor[(208), float32]) */;
    %552 = cast(%var_3923, dtype="uint32") /* ty=Tensor[(1, 810), uint32] */;
    %553 = cast(%var_3923, dtype="uint32") /* ty=Tensor[(1, 810), uint32] */;
    %554 = reshape(%552, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
    %555 = reshape(%553, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
    %556 = @func_1371(%554, %555) /* ty=(Tensor[(10, 9, 9), uint32],) */;
    %557 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
    %558 = @func_2783(%544) /* ty=Tensor[(8, 15, 11), float64] */;
    %559 = %545.0;
    %560 = %548.0;
    %561 = %551.0;
    %562 = %556.0;
    (%557, %558, %var_3884, %559, %560, %var_3909, %561, meta[relay.Constant][19] /* ty=Tensor[(1, 208), float32] */, %562, %var_3923)
  };
  %563(%var_3939, %var_3940, %var_3941) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(8, 15, 11), float64], Tensor[(1320), float64], Tensor[(4, 16, 10), float32], Tensor[(3, 16, 5), float64], Tensor[(240), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 208), float32], Tensor[(10, 9, 9), uint32], Tensor[(1, 810), uint32]) */
}

def @func_2345() -> (Tensor[(4, 16, 10), float64],) {
  @func_2343() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_3374() -> (Tensor[(4, 16, 10), uint16], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %564 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
  %565 = cast(meta[relay.Constant][20] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %566 = reshape(%565, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %567 = @func_2188(%566) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %568 = %564.2;
  %569 = %567.1;
  (%568, %569, meta[relay.Constant][20] /* ty=Tensor[(468), int16] */)
}

def @func_8932(%var_8930: Tensor[(13, 13, 3), float32], %var_8931: Tensor[(13, 13, 3), float32]) -> (Tensor[(13, 13, 3), float32],) {
  %575 = fn (%var_8906: Tensor[(13, 13, 3), float32], %var_8907: Tensor[(13, 13, 3), float32]) -> (Tensor[(13, 13, 3), float32],) {
    %570 = cast(%var_8907, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
    %571 = shape_of(%var_8906, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%var_8906, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %574 = mod(%572, %573) /* ty=Tensor[(13, 13, 3), float32] */;
    (%574,)
  };
  %575(%var_8930, %var_8931) /* ty=(Tensor[(13, 13, 3), float32],) */
}

def @func_5707() -> (Tensor[(4, 16, 10), float64],) {
  %576 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %577 = %576.0;
  (%577,)
}

def @func_1149() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) {
  %581 = fn () -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) {
    %578 = @func_590() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */;
    %579 = %578.1;
    %580 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
    (%579, %580)
  };
  %581() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */
}

def @func_5612() -> (Tensor[(4, 16, 10), float64],) {
  %582 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %583 = %582.3;
  (%583,)
}

def @func_7515() -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) {
  %592 = fn () -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) {
    %584 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
    %585 = cast(meta[relay.Constant][21] /* ty=Tensor[(30, 9), int64] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
    %586 = cast(meta[relay.Constant][21] /* ty=Tensor[(30, 9), int64] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
    %587 = reshape(%585, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %588 = reshape(%586, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %589 = @func_5066(%587, %588) /* ty=(Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) */;
    %590 = %584.0;
    %591 = %589.3;
    (%590, %591, meta[relay.Constant][21] /* ty=Tensor[(30, 9), int64] */)
  };
  %592() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(30, 9), int64]) */
}

def @func_2440(%var_2420: Tensor[(16, 13, 5), int64], %var_2421: Tensor[(16, 13, 5), int64], %var_2429: Tensor[(468), int16]) -> (Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %593 = cast(%var_2421, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %594 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%var_2420, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = cast(%var_2421, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %598 = cast(%var_2429, dtype="int16") /* ty=Tensor[(468), int16] */;
  %599 = reshape(%598, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %600 = @func_1518(%599) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %601 = less_equal(%595, %596) /* ty=Tensor[(16, 13, 5), bool] */;
  %602 = asin(%597) /* ty=Tensor[(16, 13, 5), float64] */;
  %603 = %600.1;
  (%601, %602, %603, %var_2429)
}

def @func_2113() -> (Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_9677() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(2, 14, 9), float32], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float32], Tensor[(8, 15, 11), float64], Tensor[(1320), float64]) {
  @func_9675() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(2, 14, 9), float32], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float32], Tensor[(8, 15, 11), float64], Tensor[(1320), float64]) */
}

def @func_4323() -> (Tensor[(4, 16, 10), float32],) {
  %604 = @func_1535() /* ty=Tensor[(4, 16, 10), float32] */;
  (%604,)
}

def @func_5109() -> Tensor[(4, 16, 10), float64] {
  @func_5107() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_626() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %605 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %606 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %607 = cast(meta[relay.Constant][22] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %608 = reshape(%607, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
  %609 = @func_490(%608) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
  %610 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %611 = %605.5;
  %612 = %606.0;
  %613 = %609.1;
  %614 = %610.2;
  (%611, %612, %613, meta[relay.Constant][22] /* ty=Tensor[(468), int16] */, %614)
}

def @func_2703() -> (Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) {
  %637 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) {
    %615 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %616 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %617 = cast(meta[relay.Constant][24] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
    %618 = reshape(%615, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %619 = reshape(%616, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %620 = reshape(%617, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %621 = @func_2440(%618, %619, %620) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
    %622 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %623 = cast(meta[relay.Constant][24] /* ty=Tensor[(468, 1), int16] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
    %624 = sqrt(%623) /* ty=Tensor[(468, 1), float64] */;
    %625 = cast(%624, dtype="uint32") /* ty=Tensor[(468, 1), uint32] */;
    %626 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), int64] */, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
    %627 = cast(meta[relay.Constant][24] /* ty=Tensor[(468, 1), int16] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
    %628 = shape_of(%624, dtype="int32") /* ty=Tensor[(2), int32] */;
    %629 = cast(%624, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
    %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %631 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
    %632 = %621.1;
    %633 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
    %634 = %622.0;
    %635 = right_shift(%625, %626) /* ty=Tensor[(468, 1040), uint32] */;
    %636 = greater(%629, %630) /* ty=Tensor[(468, ?), bool] */;
    (%631, %632, %633, %634, %635, %636)
  };
  %637() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) */
}

def @func_7824(%var_7822: Tensor[(2, 15, 15), uint32], %var_7823: Tensor[(2, 15, 15), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(2, 15, 15), float64]) {
  @func_7820(%var_7822, %var_7823) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(2, 15, 15), float64]) */
}

def @func_6455() -> Tensor[(4, 16, 10), float64] {
  %638 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %638.0
}

def @func_3655() -> (Tensor[(4, 16, 10), float64],) {
  @func_3653() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_4996() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %645 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %639 = @func_4096() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
    %640 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
    %641 = %640.0;
    %642 = cast(%641, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %643 = %639.1;
    %644 = cosh(%642) /* ty=Tensor[(4, 16, 10), float64] */;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_9556() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %646 = @func_3746() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) */;
  %647 = @func_7215() /* ty=(Tensor[(7, 13, 4), float64],) */;
  %648 = %646.0;
  %649 = %647.0;
  (%648, %649)
}

def @func_1881() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) {
  %650 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %651 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %652 = %650.0;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %654 = reshape(%653, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %655 = @func_1022(%654) /* ty=(Tensor[(4, 16, 10), int8], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) */;
  %656 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %657 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %658 = %657.1;
  %659 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %660 = %659.0;
  %661 = cast(%660, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %662 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%658, dtype="int16") /* ty=Tensor[(4, 16, 10), int16] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %665 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %666 = %651.6;
  %667 = %655.1;
  %668 = %656.3;
  %669 = minimum(%663, %664) /* ty=Tensor[(4, 16, 10), int16] */;
  %670 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
  (%652, %665, %666, %667, %668, %669, %670)
}

def @func_6010(%var_6009: Tensor[(13, 5, 1), float32]) -> (Tensor[(13, 5, 1), float32],) {
  %673 = fn (%var_5999: Tensor[(13, 5, 1), float32]) -> (Tensor[(13, 5, 1), float32],) {
    %671 = cast(%var_5999, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
    %672 = asin(%671) /* ty=Tensor[(13, 5, 1), float32] */;
    (%672,)
  };
  %673(%var_6009) /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_9024() -> (Tensor[(4, 16, 10), float32],) {
  %674 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
  (%674,)
}

def @func_490(%var_477: Tensor[(13, 4, 9), int16]) -> (Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
  %675 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 4, 9), int16] */, dtype="int16") /* ty=Tensor[(13, 4, 9), int16] */;
  %676 = shape_of(%var_477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_477, dtype="int16") /* ty=Tensor[(13, 4, 9), int16] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %679 = subtract(%677, %678) /* ty=Tensor[(13, 4, 9), int16] */;
  %680 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
  (%679, %680)
}

def @func_2628() -> Tensor[(4, 16, 10), float64] {
  @func_2626() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_285() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_1565() -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) {
  %686 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) {
    %681 = cast(meta[relay.Constant][26] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %682 = reshape(%681, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %683 = @func_827(%682) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
    %684 = @func_264() /* ty=Tensor[(4, 16, 10), float64] */;
    %685 = %683.2;
    (%684, %685, meta[relay.Constant][26] /* ty=Tensor[(468), int16] */)
  };
  %686() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) */
}

def @func_2783(%var_2772: Tensor[(8, 15, 11), float64]) -> Tensor[(8, 15, 11), float64] {
  %687 = cast(%var_2772, dtype="float64") /* ty=Tensor[(8, 15, 11), float64] */;
  sin(%687) /* ty=Tensor[(8, 15, 11), float64] */
}

def @func_4950(%var_4949: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(65), int8]) {
  %697 = fn (%var_4922: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(65), int8]) {
    %688 = cast(%var_4922, dtype="float32") /* ty=Tensor[(65), float32] */;
    %689 = reshape(%688, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
    %690 = @func_4153(%689) /* ty=Tensor[(13, 5, 1), float32] */;
    %691 = cast(%690, dtype="int8") /* ty=Tensor[(13, 5, 1), int8] */;
    %692 = shape_of(%var_4922, dtype="int32") /* ty=Tensor[(1), int32] */;
    %693 = cast(%var_4922, dtype="int8") /* ty=Tensor[(65), int8] */;
    %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?), int8] */;
    %695 = @func_1167() /* ty=Tensor[(4, 16, 10), float64] */;
    %696 = bitwise_xor(%693, %694) /* ty=Tensor[(65), int8] */;
    (%695, %696)
  };
  %697(%var_4949) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(65), int8]) */
}

def @func_6031() -> (Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) {
  %698 = @func_4323() /* ty=(Tensor[(4, 16, 10), float32],) */;
  %699 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %700 = %698.0;
  %701 = %699.0;
  (%700, %701)
}

def @func_1521(%var_1519: Tensor[(468), int16]) -> (Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  @func_1518(%var_1519) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_3489() -> (Tensor[(4, 16, 10), float64],) {
  %704 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %702 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %703 = %702.0;
    (%703,)
  };
  %704() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_3492() -> Tensor[(4, 16, 10), float32] {
  %705 = @func_1148() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64]) */;
  %705.0
}

def @func_3867(%var_3865: Tensor[(1, 468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) {
  @func_3864(%var_3865) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */
}

def @func_3183() -> (Tensor[(4, 16, 10), float64],) {
  %708 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %706 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %707 = %706.0;
    (%707,)
  };
  %708() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_8762() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(132), float64], Tensor[(132), float64], Tensor[(4, 16, 10), float64]) {
  %719 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(132), float64], Tensor[(132), float64], Tensor[(4, 16, 10), float64]) {
    %709 = @func_2702() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468, 1040), uint32], Tensor[(468, ?), bool]) */;
    %710 = @func_6299() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %711 = cast(meta[relay.Constant][27] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
    %712 = reshape(%711, newshape=[132]) /* ty=Tensor[(132), float64] */;
    %713 = @func_7070(%712) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(12, 11, 1), float64], Tensor[(132), float64]) */;
    %714 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %715 = %709.3;
    %716 = %710.0;
    %717 = %713.2;
    %718 = %714.0;
    (%715, %716, %717, meta[relay.Constant][27] /* ty=Tensor[(132), float64] */, %718)
  };
  %719() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(132), float64], Tensor[(132), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_6112() -> (Tensor[(234, 2), int16],) {
  %720 = @func_3783() /* ty=(Tensor[(234, 2), int16],) */;
  %721 = %720.0;
  (%721,)
}

def @func_6251() -> Tensor[(4, 16, 10), float32] {
  %722 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %722.0
}

def @func_1209() -> (Tensor[(6, 11, 4), float64],) {
  @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */
}

def @func_7693() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  %723 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %724 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %725 = %723.1;
  %726 = @func_5750() /* ty=Tensor[(4, 16, 10), float64] */;
  (%724, %725, %726)
}

def @func_1923() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %727 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %728 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %729 = %727.0;
  %730 = %728.6;
  (%729, %730)
}

def @func_5587() -> (Tensor[(4, 16, 10), float64],) {
  @func_5585() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_6347(%var_6345: Tensor[(15, 14, 12), float32]) -> (Tensor[(15, 14, 12), uint64], Tensor[(15, 14, 12), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_6344(%var_6345) /* ty=(Tensor[(15, 14, 12), uint64], Tensor[(15, 14, 12), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_9802() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %731 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %732 = @func_9065() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %733 = %731.0;
  %734 = %732.0;
  (%733, %734)
}

def @func_5585() -> (Tensor[(4, 16, 10), float64],) {
  %735 = @func_3337() /* ty=Tensor[(4, 16, 10), float64] */;
  (%735,)
}

def @func_591() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) {
  %758 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) {
    %736 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %737 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %738 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %739 = %738.0;
    %740 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(3), int32] */;
    %742 = cast(%739, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %744 = greater_equal(%742, %743) /* ty=Tensor[(4, 16, 10), bool] */;
    %745 = cast(%744, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %746 = acosh(%745) /* ty=Tensor[(4, 16, 10), float32] */;
    %747 = cast(%744, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
    %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(%746, dtype="uint16") /* ty=Tensor[(4, 16, 10), uint16] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %751 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 468), int16] */, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
    %752 = reshape(%751, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), int16] */;
    %753 = @func_490(%752) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */;
    %754 = %736.2;
    %755 = %737.0;
    %756 = bitwise_and(%749, %750) /* ty=Tensor[(4, 16, 10), uint16] */;
    %757 = %753.0;
    (%754, %755, %756, %757, meta[relay.Constant][29] /* ty=Tensor[(1, 468), int16] */)
  };
  %758() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), uint16], Tensor[(13, 4, 9), int16], Tensor[(1, 468), int16]) */
}

def @func_2472() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) {
  @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */
}

def @func_1982() -> (Tensor[(4, 16, 10), float64],) {
  %761 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %759 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %760 = %759.1;
    (%760,)
  };
  %761() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_4096() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %762 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
  %763 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %764 = %762.0;
  %765 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
  (%763, %764, %765)
}

def @func_5537() -> (Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
  %766 = @func_3746() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool]) */;
  %767 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %768 = %766.2;
  %769 = %767.3;
  (%768, %769)
}

def @func_5605() -> (Tensor[(4, 16, 10), float64],) {
  %772 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %770 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_265() -> Tensor[(4, 16, 10), float64] {
  %774 = fn () -> Tensor[(4, 16, 10), float64] {
    %773 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    sqrt(%773) /* ty=Tensor[(4, 16, 10), float64] */
  };
  %774() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_7126() -> Tensor[(4, 16, 10), float64] {
  @func_7124() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_1267() -> Tensor[(4, 16, 10), float64] {
  @func_777() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_7820(%var_7806: Tensor[(2, 15, 15), uint32], %var_7807: Tensor[(2, 15, 15), uint32]) -> (Tensor[(4, 16, 10), float64], Tensor[(2, 15, 15), float64]) {
  %775 = @func_4404() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %776 = cast(%var_7807, dtype="uint32") /* ty=Tensor[(2, 15, 15), uint32] */;
  %777 = shape_of(%var_7806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%var_7806, dtype="uint32") /* ty=Tensor[(2, 15, 15), uint32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %780 = bitwise_xor(%778, %779) /* ty=Tensor[(2, 15, 15), uint32] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
  %782 = exp(%781) /* ty=Tensor[(2, 15, 15), float32] */;
  %783 = cast(%782, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %784 = %775.0;
  %785 = rsqrt(%783) /* ty=Tensor[(2, 15, 15), float64] */;
  (%784, %785)
}

def @func_6142() -> Tensor[(4, 16, 10), float64] {
  %786 = @func_2470() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) */;
  %786.1
}

def @func_5924(%var_5921: Tensor[(14, 3, 12), float64], %var_5922: Tensor[(14, 3, 12), float64], %var_5923: Tensor[(1, 640), int16]) -> (Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) {
  %804 = fn (%var_5860: Tensor[(14, 3, 12), float64], %var_5861: Tensor[(14, 3, 12), float64], %var_5874: Tensor[(1, 640), int16]) -> (Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) {
    %787 = cast(%var_5861, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
    %788 = shape_of(%var_5860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %789 = cast(%var_5860, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
    %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %791 = cast(%var_5874, dtype="int16") /* ty=Tensor[(1, 640), int16] */;
    %792 = reshape(%791, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), int16] */;
    %793 = @func_3059(%792) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %794 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %795 = cast(%var_5860, dtype="float64") /* ty=Tensor[(14, 3, 12), float64] */;
    %796 = @func_376() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %797 = divide(%789, %790) /* ty=Tensor[(14, 3, 12), float64] */;
    %798 = %793.0;
    %799 = %794.0;
    %800 = @func_5750() /* ty=Tensor[(4, 16, 10), float64] */;
    %801 = @func_3492() /* ty=Tensor[(4, 16, 10), float32] */;
    %802 = cosh(%795) /* ty=Tensor[(14, 3, 12), float64] */;
    %803 = %796.4;
    (%797, %798, %var_5874, %799, %800, %801, %802, %803)
  };
  %804(%var_5921, %var_5922, %var_5923) /* ty=(Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64], Tensor[(1, 640), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(14, 3, 12), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_6376() -> (Tensor[(4, 16, 10), float64],) {
  %805 = @func_3543() /* ty=Tensor[(4, 16, 10), float64] */;
  (%805,)
}

def @func_2786(%var_2784: Tensor[(8, 15, 11), float64]) -> Tensor[(8, 15, 11), float64] {
  @func_2783(%var_2784) /* ty=Tensor[(8, 15, 11), float64] */
}

def @func_1168() -> Tensor[(4, 16, 10), float64] {
  %807 = fn () -> Tensor[(4, 16, 10), float64] {
    %806 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %806.0
  };
  %807() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9117() -> (Tensor[(4, 16, 10), float32],) {
  %808 = @func_6094() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %809 = %808.1;
  (%809,)
}

def @func_9144() -> (Tensor[(6, 10, 8), float32], Tensor[(4, 16, 10), float64]) {
  %810 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 8), float32] */;
  %811 = log(%810) /* ty=Tensor[(6, 10, 8), float32] */;
  %812 = @func_7196() /* ty=Tensor[(4, 16, 10), float64] */;
  (%811, %812)
}

def @func_6301() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_6299() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_7991() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %816 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %813 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %814 = %813.0;
    %815 = @func_6142() /* ty=Tensor[(4, 16, 10), float64] */;
    (%814, %815)
  };
  %816() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_7847() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %821 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
    %817 = @func_3156() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %818 = @func_6031() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(6, 11, 4), float64]) */;
    %819 = %817.0;
    %820 = %818.0;
    (%819, %820)
  };
  %821() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_5198(%var_5182: Tensor[(12, 11, 11), float64]) -> (Tensor[(12, 11, 11), float64],) {
  %822 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 11), float64] */;
  %823 = shape_of(%var_5182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%var_5182, dtype="float64") /* ty=Tensor[(12, 11, 11), float64] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %826 = mod(%824, %825) /* ty=Tensor[(12, 11, 11), float64] */;
  (%826,)
}

def @func_2445(%var_2442: Tensor[(16, 13, 5), int64], %var_2443: Tensor[(16, 13, 5), int64], %var_2444: Tensor[(468), int16]) -> (Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  @func_2440(%var_2442, %var_2443, %var_2444) /* ty=(Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_7903(%var_7902: Tensor[(14, 5, 9), uint32]) -> (Tensor[(14, 5, 9), uint32], Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %836 = fn (%var_7890: Tensor[(14, 5, 9), uint32]) -> (Tensor[(14, 5, 9), uint32], Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
    %827 = cast(%var_7890, dtype="uint32") /* ty=Tensor[(14, 5, 9), uint32] */;
    %828 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 9), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 9), uint32] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %831 = @func_3958() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %832 = @func_3452() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */;
    %833 = multiply(%829, %830) /* ty=Tensor[(14, 5, 9), uint32] */;
    %834 = %831.0;
    %835 = %832.1;
    (%833, %834, %835)
  };
  %836(%var_7902) /* ty=(Tensor[(14, 5, 9), uint32], Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */
}

def @func_5539() -> (Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
  @func_5537() /* ty=(Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */
}

def @func_8489() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float32]) {
  @func_8487() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(1, 468), float32], Tensor[(4, 16, 10), float32]) */
}

def @func_7215() -> (Tensor[(7, 13, 4), float64],) {
  %837 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %838 = %837.0;
  (%838,)
}

def @func_7217() -> (Tensor[(7, 13, 4), float64],) {
  @func_7215() /* ty=(Tensor[(7, 13, 4), float64],) */
}

def @func_2880() -> Tensor[(7, 13, 4), float64] {
  %839 = @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */;
  %839.0
}

def @func_9728(%var_9693: Tensor[(1040), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  %840 = @func_8522() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %841 = cast(%var_9693, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %842 = cast(meta[relay.Constant][34] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %843 = reshape(%841, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %844 = reshape(%842, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %845 = @func_2537(%843, %844) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %846 = %840.0;
  %847 = %845.7;
  %848 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  (%846, %847, %var_9693, meta[relay.Constant][34] /* ty=Tensor[(468), int16] */, %848)
}

def @func_5107() -> Tensor[(4, 16, 10), float64] {
  %849 = @func_4204() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %849.1
}

def @func_9936() -> Tensor[(4, 16, 10), float64] {
  @func_6455() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_8882() -> Tensor[(4, 16, 10), float64] {
  %851 = fn () -> Tensor[(4, 16, 10), float64] {
    %850 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %850.0
  };
  %851() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9026() -> (Tensor[(4, 16, 10), float32],) {
  @func_9024() /* ty=(Tensor[(4, 16, 10), float32],) */
}

def @func_1341() -> Tensor[(4, 16, 10), float64] {
  %852 = fn () -> Tensor[(4, 16, 10), float64] {
    @func_264() /* ty=Tensor[(4, 16, 10), float64] */
  };
  %852() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_628() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) {
  @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_4156(%var_4154: Tensor[(13, 5, 1), float32]) -> Tensor[(13, 5, 1), float32] {
  @func_4153(%var_4154) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_8706() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %853 = @func_6405() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %854 = @func_7741() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %855 = %853.0;
  %856 = %854.2;
  (%855, %856)
}

def @func_493(%var_491: Tensor[(13, 4, 9), int16]) -> (Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) {
  @func_490(%var_491) /* ty=(Tensor[(13, 4, 9), int16], Tensor[(4, 16, 10), float64]) */
}

def @func_9804() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_9802() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_3156() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %857 = @func_2611() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %858 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %859 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %860 = %857.0;
  %861 = %858.0;
  %862 = %859.0;
  (%860, %861, %862)
}

def @func_3696() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %863 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %864 = @func_3182() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %865 = %863.0;
  %866 = %864.0;
  (%865, %866)
}

def @func_3305(%var_3304: Tensor[(3, 16, 5), float64]) -> (Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) {
  %870 = fn (%var_3285: Tensor[(3, 16, 5), float64]) -> (Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) {
    %867 = cast(%var_3285, dtype="float64") /* ty=Tensor[(3, 16, 5), float64] */;
    %868 = rsqrt(%867) /* ty=Tensor[(3, 16, 5), float64] */;
    %869 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
    (%868, %869)
  };
  %870(%var_3304) /* ty=(Tensor[(3, 16, 5), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_4405() -> (Tensor[(4, 16, 10), float64],) {
  %873 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %871 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %872 = %871.0;
    (%872,)
  };
  %873() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_8562() -> (Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) {
  %874 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %875 = log(%874) /* ty=Tensor[(13, 3, 1), float32] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
  %877 = @func_5992() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %878 = sigmoid(%876) /* ty=Tensor[(13, 3, 1), float64] */;
  %879 = %877.0;
  (%878, %879)
}

def @func_8564() -> (Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) {
  @func_8562() /* ty=(Tensor[(13, 3, 1), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_5852(%var_5846: Tensor[(15, 14, 9), int8]) -> (Tensor[(15, 14, 9), bool], Tensor[(4, 16, 10), float64]) {
  %880 = cast(%var_5846, dtype="bool") /* ty=Tensor[(15, 14, 9), bool] */;
  %881 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(15, 14, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 14, 9), int8] */, dtype="bool") /* ty=Tensor[(15, 14, 9), bool] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %884 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %885 = equal(%882, %883) /* ty=Tensor[(15, 14, 9), bool] */;
  %886 = %884.0;
  (%885, %886)
}

def @func_10127(%var_10114: Tensor[(3, 90), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %887 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %888 = cast(%var_10114, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %889 = cast(%var_10114, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %890 = reshape(%888, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %891 = reshape(%889, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %892 = @func_5066(%890, %891) /* ty=(Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) */;
  %893 = @func_2818() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %894 = %887.0;
  %895 = %892.2;
  %896 = @func_2398() /* ty=Tensor[(4, 16, 10), float64] */;
  %897 = %893.0;
  (%894, %895, %var_10114, %896, %897)
}

def @func_9067() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_9065() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_9238() -> (Tensor[(8, 11, 13), float64],) {
  %900 = fn () -> (Tensor[(8, 11, 13), float64],) {
    %898 = @func_5377() /* ty=(Tensor[(8, 11, 13), float64],) */;
    %899 = %898.0;
    (%899,)
  };
  %900() /* ty=(Tensor[(8, 11, 13), float64],) */
}

def @func_9292() -> (Tensor[(4, 16, 10), float64],) {
  @func_9290() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_3543() -> Tensor[(4, 16, 10), float64] {
  @func_264() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9431() -> (Tensor[(4, 16, 10), float64],) {
  %903 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %901 = @func_8320() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %902 = %901.0;
    (%902,)
  };
  %903() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_5378() -> (Tensor[(8, 11, 13), float64],) {
  %909 = fn () -> (Tensor[(8, 11, 13), float64],) {
    %904 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
    %905 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(8, 11, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %908 = floor_divide(%906, %907) /* ty=Tensor[(8, 11, 13), float64] */;
    (%908,)
  };
  %909() /* ty=(Tensor[(8, 11, 13), float64],) */
}

def @func_3698() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_3696() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_8523() -> (Tensor[(4, 16, 10), float64],) {
  %912 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %910 = @func_1698() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %911 = %910.0;
    (%911,)
  };
  %912() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_5709() -> (Tensor[(4, 16, 10), float64],) {
  @func_5707() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_6583() -> Tensor[(4, 16, 10), float64] {
  %913 = @func_4133() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %913.0
}

def @func_5962(%var_5961: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) {
  %922 = fn (%var_5954: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) {
    %914 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %915 = cast(%var_5954, dtype="float32") /* ty=Tensor[(65), float32] */;
    %916 = reshape(%915, newshape=[65]) /* ty=Tensor[(65), float32] */;
    %917 = @func_4948(%916) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(65), int8]) */;
    %918 = @func_4995() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %919 = %914.0;
    %920 = %917.0;
    %921 = %918.1;
    (%919, %920, %var_5954, %921)
  };
  %922(%var_5961) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) */
}

def @func_6792(%var_6789: Tensor[(504), float64], %var_6790: Tensor[(5, 56), bool], %var_6791: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(5, 56), bool], Tensor[(4, 16, 10), float64], Tensor[(234, 2), float32], Tensor[(8, 13, 13), int16], Tensor[(1352), int16], Tensor[(504), int16]) {
  @func_6787(%var_6789, %var_6790, %var_6791) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(5, 56), bool], Tensor[(4, 16, 10), float64], Tensor[(234, 2), float32], Tensor[(8, 13, 13), int16], Tensor[(1352), int16], Tensor[(504), int16]) */
}

def @func_3627(%var_3625: Tensor[(468), int16], %var_3626: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) {
  @func_3623(%var_3625, %var_3626) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) */
}

def @func_3339() -> Tensor[(4, 16, 10), float64] {
  @func_3337() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_5070(%var_5068: Tensor[(6, 15, 3), int64], %var_5069: Tensor[(6, 15, 3), int64]) -> (Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) {
  @func_5066(%var_5068, %var_5069) /* ty=(Tensor[(6, 15, 3), bool], Tensor[(4, 16, 10), float32], Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(6, 15, 3), float32], Tensor[(4, 16, 10), float64]) */
}

def @func_2882() -> Tensor[(7, 13, 4), float64] {
  @func_2880() /* ty=Tensor[(7, 13, 4), float64] */
}

def @func_8375() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %932 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %923 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
    %924 = %923.0;
    %925 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 16, 10), float32] */, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
    %927 = cast(%924, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
    %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %929 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %930 = floor_divide(%927, %928) /* ty=Tensor[(4, 16, 10), float64] */;
    %931 = %929.0;
    (%930, %931)
  };
  %932() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_7875(%var_7866: int16) -> (Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(468, 1), float64]) {
  %933 = @func_7741() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %934 = cast(meta[relay.Constant][40] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %935 = cast(%var_7866, dtype="int16") /* ty=int16 */;
  %936 = reshape(%934, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %937 = reshape(%935, newshape=[]) /* ty=int16 */;
  %938 = @func_3623(%936, %937) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) */;
  %939 = cast(meta[relay.Constant][40] /* ty=Tensor[(468, 1), int16] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %940 = %933.2;
  %941 = %938.5;
  %942 = log(%939) /* ty=Tensor[(468, 1), float64] */;
  (%940, %941, %var_7866, %942)
}

def @func_9675() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(2, 14, 9), float32], Tensor[(4, 16, 10), float64], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float32], Tensor[(8, 15, 11), float64], Tensor[(1320), float64]) {
  %943 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %944 = %943.0;
  %945 = cast(%944, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %946 = reshape(%945, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %947 = @func_889(%946) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %948 = @func_4215() /* ty=(Tensor[(2, 14, 9), float32],) */;
  %949 = @func_2839() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %950 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %951 = cast(%944, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %952 = cast(meta[relay.Constant][41] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %953 = reshape(%952, newshape=[8, 15, 11]) /* ty=Tensor[(8, 15, 11), float64] */;
  %954 = %947.0;
  %955 = @func_7440() /* ty=Tensor[(4, 16, 10), float64] */;
  %956 = %948.0;
  %957 = %949.1;
  %958 = %950.0;
  %959 = tan(%951) /* ty=Tensor[(4, 16, 10), float32] */;
  %960 = @func_2783(%953) /* ty=Tensor[(8, 15, 11), float64] */;
  (%954, %955, %956, %957, %958, %959, %960, meta[relay.Constant][41] /* ty=Tensor[(1320), float64] */)
}

def @func_2470() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468, 1), int16]) {
  %961 = @func_2111() /* ty=(Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %962 = @func_2291() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(4, 16, 10), float64] */;
  %965 = reshape(%964, newshape=[4, 16, 10]) /* ty=Tensor[(4, 16, 10), float64] */;
  %966 = @func_889(%965) /* ty=(Tensor[(4, 16, 10), float32],) */;
  %967 = cast(meta[relay.Constant][42] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %968 = reshape(%967, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %969 = @func_1518(%968) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %970 = %961.2;
  %971 = %966.0;
  %972 = %969.1;
  (%970, %963, %971, %972, meta[relay.Constant][42] /* ty=Tensor[(468, 1), int16] */)
}

def @func_4852(%var_4850: Tensor[(520, 2), int64], %var_4851: Tensor[(520, 2), bool]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), float32], Tensor[(520, 2), uint8], Tensor[(520, 2), uint64], Tensor[(520, 2), float32]) {
  %1008 = fn (%var_4759: Tensor[(520, 2), int64], %var_4809: Tensor[(520, 2), bool]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), float32], Tensor[(520, 2), uint8], Tensor[(520, 2), uint64], Tensor[(520, 2), float32]) {
    %973 = @func_1207() /* ty=(Tensor[(6, 11, 4), float64],) */;
    %974 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
    %975 = cast(%var_4759, dtype="float32") /* ty=Tensor[(520, 2), float32] */;
    %976 = cast(meta[relay.Constant][43] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %977 = reshape(%976, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
    %978 = @func_3864(%977) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
    %979 = %978.2;
    %980 = cast(%979, dtype="float64") /* ty=Tensor[(520, 2), float64] */;
    %981 = sin(%980) /* ty=Tensor[(520, 2), float64] */;
    %982 = cast(%var_4759, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
    %983 = shape_of(%979, dtype="int32") /* ty=Tensor[(2), int32] */;
    %984 = cast(%979, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %986 = equal(%984, %985) /* ty=Tensor[(520, 2), bool] */;
    %987 = cast(%986, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
    %988 = shape_of(%981, dtype="int32") /* ty=Tensor[(2), int32] */;
    %989 = cast(%981, dtype="bool") /* ty=Tensor[(520, 2), bool] */;
    %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %991 = greater(%989, %990) /* ty=Tensor[(520, 2), bool] */;
    %992 = cast(%var_4809, dtype="uint8") /* ty=Tensor[(520, 2), uint8] */;
    %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(2), int32] */;
    %994 = cast(%991, dtype="uint8") /* ty=Tensor[(520, 2), uint8] */;
    %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %996 = cast(%991, dtype="uint64") /* ty=Tensor[(520, 2), uint64] */;
    %997 = shape_of(%981, dtype="int32") /* ty=Tensor[(2), int32] */;
    %998 = cast(%981, dtype="uint64") /* ty=Tensor[(520, 2), uint64] */;
    %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1000 = cast(%991, dtype="float32") /* ty=Tensor[(520, 2), float32] */;
    %1001 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
    %1002 = %973.0;
    %1003 = %974.1;
    %1004 = tan(%975) /* ty=Tensor[(520, 2), float32] */;
    %1005 = subtract(%994, %995) /* ty=Tensor[(520, 2), uint8] */;
    %1006 = logical_xor(%998, %999) /* ty=Tensor[(520, 2), uint64] */;
    %1007 = sigmoid(%1000) /* ty=Tensor[(520, 2), float32] */;
    (%1001, meta[relay.Constant][43] /* ty=Tensor[(468), int16] */, %1002, %1003, %1004, %1005, %1006, %1007)
  };
  %1008(%var_4850, %var_4851) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), float32], Tensor[(520, 2), uint8], Tensor[(520, 2), uint64], Tensor[(520, 2), float32]) */
}

def @func_8642(%var_8631: Tensor[(65), float32]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(6, 78), uint32], Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float32]) {
  %1009 = @func_1923() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1010 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 78), int16] */, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %1011 = reshape(%1010, newshape=[1, 468]) /* ty=Tensor[(1, 468), int16] */;
  %1012 = @func_3864(%1011) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(520, 2), int64], Tensor[(1, 468), int16]) */;
  %1013 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 78), int16] */, dtype="uint32") /* ty=Tensor[(6, 78), uint32] */;
  %1014 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 78), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1015 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 78), int16] */, dtype="uint32") /* ty=Tensor[(6, 78), uint32] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1017 = @func_7215() /* ty=(Tensor[(7, 13, 4), float64],) */;
  %1018 = @func_8522() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %1019 = cast(%var_8631, dtype="float32") /* ty=Tensor[(65), float32] */;
  %1020 = reshape(%1019, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %1021 = @func_5960(%1020) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(65), float32], Tensor[(4, 16, 10), float64]) */;
  %1022 = @func_7846() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %1023 = %1009.1;
  %1024 = %1012.0;
  %1025 = bitwise_xor(%1015, %1016) /* ty=Tensor[(6, 78), uint32] */;
  %1026 = %1017.0;
  %1027 = %1018.0;
  %1028 = %1021.1;
  %1029 = %1022.1;
  (%1023, %1024, %1025, %1026, %1027, %1028, %var_8631, %1029)
}

def @func_1699() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %1032 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %1030 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
    %1031 = @func_1335() /* ty=Tensor[(4, 16, 10), float64] */;
    (%1030, %1031)
  };
  %1032() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_4325() -> (Tensor[(4, 16, 10), float32],) {
  @func_4323() /* ty=(Tensor[(4, 16, 10), float32],) */
}

def @func_7494() -> (Tensor[(10, 9, 12), int32], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 12), float64]) {
  %1040 = fn () -> (Tensor[(10, 9, 12), int32], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 12), float64]) {
    %1033 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 9, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 9, 1), int32] */;
    %1034 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 9, 12), int32] */, dtype="int32") /* ty=Tensor[(10, 9, 12), int32] */;
    %1035 = @func_1981() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %1036 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 9, 12), int32] */, dtype="float64") /* ty=Tensor[(10, 9, 12), float64] */;
    %1037 = multiply(%1033, %1034) /* ty=Tensor[(10, 9, 12), int32] */;
    %1038 = %1035.0;
    %1039 = cos(%1036) /* ty=Tensor[(10, 9, 12), float64] */;
    (%1037, %1038, %1039)
  };
  %1040() /* ty=(Tensor[(10, 9, 12), int32], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 12), float64]) */
}

def @func_3785() -> (Tensor[(234, 2), int16],) {
  @func_3783() /* ty=(Tensor[(234, 2), int16],) */
}

def @func_5174() -> Tensor[(468, 1), int16] {
  @func_5172() /* ty=Tensor[(468, 1), int16] */
}

def @func_1713() -> (Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) {
  @func_1711() /* ty=(Tensor[(7, 13, 4), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_2190(%var_2189: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
  %1046 = fn (%var_2184: Tensor[(468), int16]) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) {
    %1041 = cast(%var_2184, dtype="int16") /* ty=Tensor[(468), int16] */;
    %1042 = reshape(%1041, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %1043 = @func_1518(%1042) /* ty=(Tensor[(6, 11, 4), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
    %1044 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
    %1045 = %1043.3;
    (%1044, %1045, %var_2184)
  };
  %1046(%var_2189) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */
}

def @func_4098() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  @func_4096() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */
}

def @func_3158() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_3156() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_7388() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 9), uint32], Tensor[(810), uint32]) {
  %1057 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 9), uint32], Tensor[(810), uint32]) {
    %1047 = @func_4559() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %1048 = @func_4051() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %1049 = cast(meta[relay.Constant][48] /* ty=Tensor[(810), uint32] */, dtype="uint32") /* ty=Tensor[(810), uint32] */;
    %1050 = cast(meta[relay.Constant][48] /* ty=Tensor[(810), uint32] */, dtype="uint32") /* ty=Tensor[(810), uint32] */;
    %1051 = reshape(%1049, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
    %1052 = reshape(%1050, newshape=[10, 9, 9]) /* ty=Tensor[(10, 9, 9), uint32] */;
    %1053 = @func_1371(%1051, %1052) /* ty=(Tensor[(10, 9, 9), uint32],) */;
    %1054 = %1047.1;
    %1055 = %1048.0;
    %1056 = %1053.0;
    (%1054, %1055, %1056, meta[relay.Constant][48] /* ty=Tensor[(810), uint32] */)
  };
  %1057() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(10, 9, 9), uint32], Tensor[(810), uint32]) */
}

def @func_8070() -> Tensor[(4, 16, 10), float32] {
  @func_8068() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_3623(%var_3594: Tensor[(468), int16], %var_3616: int16) -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(1040), int64], Tensor[(468), int16], Tensor[(4, 16, 10), float32], Tensor[(8, 13, 13), int16], int16, Tensor[(1352), int16]) {
  %1058 = @func_1564() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(468), int16]) */;
  %1059 = cast(meta[relay.Constant][49] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %1060 = cast(%var_3594, dtype="int16") /* ty=Tensor[(468), int16] */;
  %1061 = reshape(%1059, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %1062 = reshape(%1060, newshape=[6, 78]) /* ty=Tensor[(6, 78), int16] */;
  %1063 = @func_2537(%1061, %1062) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(16, 13, 5), float64], Tensor[(1040), int64], Tensor[(6, 78), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(13, 4, 9), int16]) */;
  %1064 = @func_1466() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) */;
  %1065 = cast(%var_3616, dtype="int16") /* ty=int16 */;
  %1066 = cast(meta[relay.Constant][50] /* ty=Tensor[(1352), int16] */, dtype="int16") /* ty=Tensor[(1352), int16] */;
  %1067 = reshape(%1065, newshape=[]) /* ty=int16 */;
  %1068 = reshape(%1066, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), int16] */;
  %1069 = @func_3583(%1067, %1068) /* ty=(Tensor[(8, 13, 13), int16], Tensor[(4, 16, 10), float64]) */;
  %1070 = %1058.0;
  %1071 = %1063.6;
  %1072 = %1064.2;
  %1073 = %1069.0;
  (%1070, %1071, meta[relay.Constant][49] /* ty=Tensor[(1040), int64] */, %var_3594, %1072, %1073, %var_3616, meta[relay.Constant][50] /* ty=Tensor[(1352), int16] */)
}

def @func_6947() -> (Tensor[(4, 16, 10), float64],) {
  %1075 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1074 = @func_2626() /* ty=Tensor[(4, 16, 10), float64] */;
    (%1074,)
  };
  %1075() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_9584() -> (Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) {
  @func_9582() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float32]) */
}

def @func_5614() -> (Tensor[(4, 16, 10), float64],) {
  @func_5612() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_3453() -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
  %1078 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) {
    %1076 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
    %1077 = @func_2880() /* ty=Tensor[(7, 13, 4), float64] */;
    (%1076, %1077)
  };
  %1078() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(7, 13, 4), float64]) */
}

def @func_10034() -> (Tensor[(4, 16, 10), float64],) {
  %1080 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1079 = @func_1340() /* ty=Tensor[(4, 16, 10), float64] */;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_3418() -> Tensor[(4, 16, 10), float64] {
  %1082 = fn () -> Tensor[(4, 16, 10), float64] {
    %1081 = @func_3272() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %1081.1
  };
  %1082() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_4205() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  %1085 = fn () -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
    %1083 = @func_777() /* ty=Tensor[(4, 16, 10), float64] */;
    %1084 = @func_1623() /* ty=Tensor[(4, 16, 10), float64] */;
    (%1083, %1084)
  };
  %1085() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_4030() -> Tensor[(4, 16, 10), float64] {
  %1086 = @func_2941() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
  %1086.0
}

def @func_8320() -> (Tensor[(4, 16, 10), float64],) {
  %1087 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_6406() -> (Tensor[(4, 16, 10), float64],) {
  %1091 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1089 = @func_1881() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), int16], Tensor[(4, 16, 10), float64]) */;
    %1090 = %1089.4;
    (%1090,)
  };
  %1091() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_8286() -> Tensor[(4, 16, 10), float32] {
  %1092 = fn () -> Tensor[(4, 16, 10), float32] {
    @func_4648() /* ty=Tensor[(4, 16, 10), float32] */
  };
  %1092() /* ty=Tensor[(4, 16, 10), float32] */
}

def @func_10130(%var_10128: Tensor[(3, 90), int64]) -> (Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_10127(%var_10128) /* ty=(Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(3, 90), int64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

def @func_2111() -> (Tensor[(468), int16], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float32]) {
  %1093 = @func_626() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(468), int16], Tensor[(4, 16, 10), float64]) */;
  %1094 = @func_283() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
  %1095 = @func_1267() /* ty=Tensor[(4, 16, 10), float64] */;
  %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %1097 = log(%1096) /* ty=Tensor[(4, 16, 10), float32] */;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
  %1099 = %1093.3;
  %1100 = %1094.1;
  %1101 = sin(%1098) /* ty=Tensor[(4, 16, 10), float32] */;
  (%1099, %1100, %1101)
}

def @func_6539() -> (Tensor[(4, 16, 10), float64],) {
  %1104 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1102 = @func_474() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */;
    %1103 = %1102.0;
    (%1103,)
  };
  %1104() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_9938() -> Tensor[(4, 16, 10), float64] {
  @func_9936() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_7124() -> Tensor[(4, 16, 10), float64] {
  %1105 = @func_6964() /* ty=(Tensor[(4, 16, 10), float64],) */;
  %1105.0
}

def @func_4153(%var_4143: Tensor[(13, 5, 1), float32]) -> Tensor[(13, 5, 1), float32] {
  %1106 = cast(%var_4143, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  cosh(%1106) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3783() -> (Tensor[(234, 2), int16],) {
  %1107 = @func_1775() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */;
  %1108 = %1107.1;
  (%1108,)
}

def @func_5752() -> Tensor[(4, 16, 10), float64] {
  @func_5750() /* ty=Tensor[(4, 16, 10), float64] */
}

def @func_9083() -> (Tensor[(4, 16, 10), float64],) {
  %1111 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1109 = @func_3182() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %1110 = %1109.0;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_6965() -> (Tensor[(4, 16, 10), float64],) {
  %1114 = fn () -> (Tensor[(4, 16, 10), float64],) {
    %1112 = @func_6376() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %1113 = %1112.0;
    (%1113,)
  };
  %1114() /* ty=(Tensor[(4, 16, 10), float64],) */
}

def @func_1776() -> (Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
  %1128 = fn () -> (Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) {
    %1115 = cast(meta[relay.Constant][51] /* ty=Tensor[(234, 2), int16] */, dtype="int16") /* ty=Tensor[(234, 2), int16] */;
    %1116 = reshape(%1115, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %1117 = @func_827(%1116) /* ty=(Tensor[(4, 16, 10), float32], Tensor[(4, 16, 10), float64], Tensor[(468), int16]) */;
    %1118 = @func_399() /* ty=(Tensor[(4, 16, 10), float64],) */;
    %1119 = %1118.0;
    %1120 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 16, 10), float64] */, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %1121 = shape_of(%1119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1122 = cast(%1119, dtype="bool") /* ty=Tensor[(4, 16, 10), bool] */;
    %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1124 = cast(%1119, dtype="float32") /* ty=Tensor[(4, 16, 10), float32] */;
    %1125 = %1117.0;
    %1126 = less_equal(%1122, %1123) /* ty=Tensor[(4, 16, 10), bool] */;
    %1127 = cos(%1124) /* ty=Tensor[(4, 16, 10), float32] */;
    (%1125, meta[relay.Constant][51] /* ty=Tensor[(234, 2), int16] */, %1126, %1127)
  };
  %1128() /* ty=(Tensor[(4, 16, 10), float32], Tensor[(234, 2), int16], Tensor[(4, 16, 10), bool], Tensor[(4, 16, 10), float32]) */
}

def @func_5201(%var_5199: Tensor[(12, 11, 11), float64]) -> (Tensor[(12, 11, 11), float64],) {
  @func_5198(%var_5199) /* ty=(Tensor[(12, 11, 11), float64],) */
}

def @func_8799() -> (Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) {
  @func_8797() /* ty=(Tensor[(4, 16, 10), float64], Tensor[(4, 16, 10), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen216/build/output.py:3709: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen216/build/output.py", line 3714, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_atan_kernel0(float* __restrict__ T_atan, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 128) + (((int)threadIdx.x) >> 3)) < 143) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1144) {
      T_atan[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = atanf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


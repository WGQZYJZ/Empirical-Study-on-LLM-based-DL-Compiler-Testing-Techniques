==========mod==========
#[version = "0.0.5"]
def @func_14273() -> Tensor[(15), float32] {
  @func_13981() /* ty=Tensor[(15), float32] */
}

def @func_1692(%var_1687: Tensor[(6, 11, 4), float32]) -> (Tensor[(6, 11, 4), float32],) {
  %0 = cast(%var_1687, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
  %1 = acosh(%0) /* ty=Tensor[(6, 11, 4), float32] */;
  (%1,)
}

def @func_15089(%var_15079: Tensor[(11, 16, 12), float64], %var_15080: Tensor[(11, 16, 12), float64]) -> Tensor[(11, 16, 12), float64] {
  %2 = cast(%var_15080, dtype="float64") /* ty=Tensor[(11, 16, 12), float64] */;
  %3 = shape_of(%var_15079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_15079, dtype="float64") /* ty=Tensor[(11, 16, 12), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%4, %5) /* ty=Tensor[(11, 16, 12), float64] */
}

def @func_20069() -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32]) {
  %6 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %7 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
  %8 = %6.0;
  %9 = %7.0;
  (%8, %9)
}

def @func_20458(%var_20454: uint8, %var_20455: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], uint8, uint8, Tensor[(12), uint8]) {
  %10 = @func_14968() /* ty=(Tensor[(15), float32],) */;
  %11 = cast(%var_20454, dtype="uint8") /* ty=uint8 */;
  %12 = cast(%var_20455, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %13 = reshape(%11, newshape=[]) /* ty=uint8 */;
  %14 = reshape(%12, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %15 = @func_11388(%13, %14) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
  %16 = %10.0;
  %17 = @func_18877() /* ty=Tensor[(11, 2, 12), float64] */;
  %18 = %15.2;
  (%16, %17, %18, %var_20454, %var_20455)
}

def @func_15330(%var_15320: int8, %var_15321: Tensor[(320), int8], %var_15327: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
  %19 = cast(%var_15320, dtype="int8") /* ty=int8 */;
  %20 = cast(%var_15321, dtype="int8") /* ty=Tensor[(320), int8] */;
  %21 = reshape(%19, newshape=[]) /* ty=int8 */;
  %22 = reshape(%20, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %23 = @func_12076(%21, %22) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %24 = cast(%var_15327, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %26 = reshape(%24, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %27 = reshape(%25, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %28 = @func_11758(%26, %27) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %29 = @func_14273() /* ty=Tensor[(15), float32] */;
  %30 = %23.0;
  %31 = %28.0;
  (%29, %30, %var_15320, %var_15321, %31, %var_15327, meta[relay.Constant][0] /* ty=Tensor[(28), bool] */)
}

def @func_6633(%var_6600: Tensor[(7, 10, 10), float32], %var_6601: Tensor[(7, 10, 10), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) {
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 126), float32] */, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %33 = reshape(%32, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %34 = @func_6227(%33) /* ty=(Tensor[(9, 7, 14), float32],) */;
  %35 = cast(%var_6601, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %36 = shape_of(%var_6600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%var_6600, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %39 = subtract(%37, %38) /* ty=Tensor[(7, 10, 10), float32] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 126), float32] */, dtype="float64") /* ty=Tensor[(7, 126), float64] */;
  %42 = %34.0;
  %43 = cosh(%40) /* ty=Tensor[(7, 10, 10), float32] */;
  %44 = atan(%41) /* ty=Tensor[(7, 126), float64] */;
  (%42, %43, %44)
}

def @func_15810() -> Tensor[(15), float32] {
  %45 = @func_13291() /* ty=(Tensor[(15), float32],) */;
  %45.0
}

def @func_13343() -> Tensor[(11, 2, 12), float64] {
  @func_13169() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_8129(%var_8107: Tensor[(7, 2, 2), bool], %var_8120: Tensor[(15), float32]) -> (Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) {
  %46 = cast(%var_8107, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
  %47 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(7, 2, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %50 = cast(%var_8120, dtype="float32") /* ty=Tensor[(15), float32] */;
  %51 = reshape(%50, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %52 = @func_3516(%51) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 2, 2), bool] */, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
  %54 = cos(%53) /* ty=Tensor[(7, 2, 2), float32] */;
  %55 = cast(%54, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
  %56 = logical_or(%48, %49) /* ty=Tensor[(7, 2, 2), bool] */;
  %57 = %52.0;
  %58 = acosh(%55) /* ty=Tensor[(7, 2, 2), float64] */;
  (%56, %57, %var_8120, %58)
}

def @func_2022(%var_1992: Tensor[(3, 13, 11), uint64], %var_1993: Tensor[(3, 13, 11), uint64], %var_2008: Tensor[(12), uint8]) -> (Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) {
  %59 = cast(%var_1993, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %60 = shape_of(%var_1992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_1992, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %63 = cast(meta[relay.Constant][3] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %64 = cast(%var_2008, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %65 = reshape(%63, newshape=[]) /* ty=uint8 */;
  %66 = reshape(%64, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %67 = @func_1981(%65, %66) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %68 = bitwise_and(%61, %62) /* ty=Tensor[(3, 13, 11), uint64] */;
  %69 = %67.0;
  (%68, %69, meta[relay.Constant][3] /* ty=uint8 */, %var_2008)
}

def @func_18172() -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(882), float32], Tensor[(99), float64]) {
  %70 = @func_17490() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(882), float32] */, dtype="float32") /* ty=Tensor[(882), float32] */;
  %72 = reshape(%71, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %73 = @func_6227(%72) /* ty=(Tensor[(9, 7, 14), float32],) */;
  %74 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
  %75 = %70.0;
  %76 = %73.0;
  %77 = %74.2;
  (%75, %76, meta[relay.Constant][4] /* ty=Tensor[(882), float32] */, %77)
}

def @func_17019(%var_17005: Tensor[(1650), int8]) -> (Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
  %78 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 28), bool] */, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %81 = reshape(%79, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %82 = reshape(%80, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %83 = @func_15762(%81, %82) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
  %84 = cast(%var_17005, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %85 = cast(%var_17005, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %86 = reshape(%84, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %87 = reshape(%85, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %88 = %78.1;
  %89 = %83.7;
  %90 = @func_6070(%86, %87) /* ty=Tensor[(15, 11, 10), int8] */;
  (%88, %89, meta[relay.Constant][5] /* ty=Tensor[(1, 28), bool] */, meta[relay.Constant][6] /* ty=Tensor[(56), float32] */, %90, %var_17005)
}

def @func_19371() -> (Tensor[(11, 2, 12), float64],) {
  %91 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  (%91,)
}

def @func_12129() -> (Tensor[(11, 2, 12), float64],) {
  %92 = @func_12105() /* ty=Tensor[(11, 2, 12), float64] */;
  (%92,)
}

def @func_20344() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %93 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
  %94 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %95 = %93.3;
  %96 = %94.0;
  (%95, %96)
}

def @func_17816() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %97 = @func_16069() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */;
  %98 = @func_15810() /* ty=Tensor[(15), float32] */;
  %99 = %97.0;
  (%98, %99)
}

def @func_12336(%var_12321: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) {
  %100 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %102 = reshape(%101, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %103 = @func_11513(%102) /* ty=(Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %104 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %105 = cast(meta[relay.Constant][8] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %106 = reshape(%105, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %107 = @func_10234(%106) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %108 = %107.0;
  %109 = cast(%108, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
  %110 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %111 = cast(meta[relay.Constant][10] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %112 = cast(%var_12321, dtype="bool") /* ty=Tensor[(28), bool] */;
  %113 = reshape(%109, newshape=[2, 28]) /* ty=Tensor[(2, 28), float32] */;
  %114 = reshape(%110, newshape=[]) /* ty=uint8 */;
  %115 = reshape(%111, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %116 = reshape(%112, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %117 = @func_11483(%113, %114, %115, %116) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %118 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %119 = reshape(%118, newshape=[]) /* ty=bool */;
  %120 = @func_10153(%119) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %121 = %100.0;
  %122 = %103.0;
  %123 = %104.0;
  %124 = %117.4;
  %125 = %120.0;
  (%121, %122, meta[relay.Constant][7] /* ty=Tensor[(273), float32] */, %123, %108, meta[relay.Constant][8] /* ty=Tensor[(56), float32] */, %124, meta[relay.Constant][9] /* ty=uint8 */, meta[relay.Constant][10] /* ty=Tensor[(1650), int8] */, %var_12321, %125)
}

def @func_15069() -> (int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) {
  %126 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
  %127 = cast(meta[relay.Constant][11] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %128 = reshape(%127, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %129 = @func_1692(%128) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
  %132 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %133 = %126.2;
  %134 = cosh(%131) /* ty=Tensor[(6, 11, 4), float32] */;
  %135 = %132.1;
  (%133, meta[relay.Constant][11] /* ty=Tensor[(264), float32] */, %134, %135)
}

def @func_13957() -> (Tensor[(15), float32],) {
  %136 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %137 = %136.0;
  (%137,)
}

def @func_3360(%var_3336: Tensor[(429), uint64], %var_3337: Tensor[(12), uint8]) -> (Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %138 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="bool") /* ty=Tensor[(10, 5, 13), bool] */;
  %139 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="bool") /* ty=Tensor[(10, 5, 13), bool] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="uint16") /* ty=Tensor[(10, 5, 13), uint16] */;
  %143 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="uint16") /* ty=Tensor[(10, 5, 13), uint16] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %146 = cast(%var_3336, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %147 = cast(%var_3336, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %148 = cast(%var_3337, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %149 = reshape(%146, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %150 = reshape(%147, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %151 = reshape(%148, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %152 = @func_2022(%149, %150, %151) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %153 = less(%140, %141) /* ty=Tensor[(10, 5, 13), bool] */;
  %154 = maximum(%144, %145) /* ty=Tensor[(10, 5, 13), uint16] */;
  %155 = %152.0;
  (%153, %154, %155, %var_3336, %var_3337)
}

def @func_18343() -> (Tensor[(11, 2, 12), float64],) {
  %156 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %157 = %156.0;
  (%157,)
}

def @func_18548(%var_18527: Tensor[(11, 2, 12), float64], %var_18540: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %158 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %159 = %158.0;
  %160 = cast(%var_18527, dtype="uint64") /* ty=Tensor[(11, 2, 12), uint64] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="uint64") /* ty=Tensor[(11, 2, 12), uint64] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %164 = cast(%159, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %165 = cast(%var_18540, dtype="float64") /* ty=Tensor[(364), float64] */;
  %166 = reshape(%164, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %167 = reshape(%165, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %168 = @func_11814(%166, %167) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %169 = logical_xor(%162, %163) /* ty=Tensor[(11, 2, 12), uint64] */;
  %170 = %168.1;
  (%169, %170, %var_18540)
}

def @func_8434(%var_8428: Tensor[(8, 10, 14), float64]) -> Tensor[(8, 10, 14), float64] {
  %171 = cast(%var_8428, dtype="float64") /* ty=Tensor[(8, 10, 14), float64] */;
  exp(%171) /* ty=Tensor[(8, 10, 14), float64] */
}

def @func_19811() -> (Tensor[(7, 12, 5), bool],) {
  %172 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
  %173 = %172.4;
  (%173,)
}

def @func_19941(%var_19864: Tensor[(50), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(50), bool], Tensor[(?, 3, 4), float64], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(320, 1), int8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8], uint8) {
  %174 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %175 = cast(meta[relay.Constant][14] /* ty=Tensor[(50), int16] */, dtype="bool") /* ty=Tensor[(50), bool] */;
  %176 = shape_of(%var_19864, dtype="int32") /* ty=Tensor[(1), int32] */;
  %177 = cast(%var_19864, dtype="bool") /* ty=Tensor[(50), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?), bool] */;
  %179 = cast(%var_19864, dtype="int16") /* ty=Tensor[(50), int16] */;
  %180 = %174.0;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %182 = cast(meta[relay.Constant][15] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %183 = reshape(%179, newshape=[1, 50]) /* ty=Tensor[(1, 50), int16] */;
  %184 = reshape(%181, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %185 = reshape(%182, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %186 = @func_15153(%183, %184, %185) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) */;
  %187 = %186.9;
  %188 = cast(meta[relay.Constant][15] /* ty=Tensor[(12), uint8] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="float64") /* ty=Tensor[(1, 3, 4), float64] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %192 = cast(meta[relay.Constant][16] /* ty=Tensor[(320, 1), int8] */, dtype="int8") /* ty=Tensor[(320, 1), int8] */;
  %193 = reshape(%192, newshape=[320]) /* ty=Tensor[(320), int8] */;
  %194 = @func_13501(%193) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) */;
  %195 = cast(meta[relay.Constant][17] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %196 = cast(%187, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
  %197 = reshape(%195, newshape=[]) /* ty=uint8 */;
  %198 = reshape(%196, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %199 = @func_1981(%197, %198) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %200 = less(%177, %178) /* ty=Tensor[(50), bool] */;
  %201 = maximum(%190, %191) /* ty=Tensor[(?, 3, 4), float64] */;
  %202 = @func_12426() /* ty=Tensor[(15), float32] */;
  %203 = %194.0;
  %204 = @func_19593() /* ty=Tensor[(11, 2, 12), float64] */;
  %205 = %199.0;
  (%180, %200, %201, %202, %203, meta[relay.Constant][16] /* ty=Tensor[(320, 1), int8] */, %204, %205, meta[relay.Constant][17] /* ty=uint8 */)
}

def @func_12076(%var_12058: int8, %var_12059: Tensor[(8, 8, 5), int8]) -> (Tensor[(8, 8, 5), int8],) {
  %206 = cast(%var_12058, dtype="int8") /* ty=int8 */;
  %207 = cast(%var_12059, dtype="int8") /* ty=Tensor[(8, 8, 5), int8] */;
  %208 = right_shift(%206, %207) /* ty=Tensor[(8, 8, 5), int8] */;
  (%208,)
}

def @func_11513(%var_11508: Tensor[(273), float32]) -> (Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %209 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %210 = cast(%var_11508, dtype="float32") /* ty=Tensor[(273), float32] */;
  %211 = reshape(%210, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %212 = %209.2;
  %213 = @func_5939(%211) /* ty=Tensor[(13, 3, 7), float32] */;
  (%212, %213, %var_11508)
}

def @func_18027() -> Tensor[(11, 2, 12), float64] {
  %214 = @func_16069() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */;
  %214.1
}

def @func_12949() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %215 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %216 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %217 = %215.0;
  %218 = %216.0;
  (%217, %218)
}

def @func_20305() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %219 = @func_18225() /* ty=Tensor[(15), float32] */;
  %220 = @func_14273() /* ty=Tensor[(15), float32] */;
  (%219, %220)
}

def @func_17666(%var_17662: Tensor[(110, 15), int8]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) {
  %221 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %222 = cast(%var_17662, dtype="int8") /* ty=Tensor[(110, 15), int8] */;
  %223 = cast(%var_17662, dtype="int8") /* ty=Tensor[(110, 15), int8] */;
  %224 = reshape(%222, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %225 = reshape(%223, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %226 = %221.1;
  %227 = @func_6070(%224, %225) /* ty=Tensor[(15, 11, 10), int8] */;
  (%226, %227, %var_17662)
}

def @func_11118(%var_11096: Tensor[(1650), int8], %var_11106: Tensor[(28), bool]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) {
  %228 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %229 = cast(%var_11096, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %230 = cast(%var_11096, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %231 = reshape(%229, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %232 = reshape(%230, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %233 = cast(%var_11106, dtype="bool") /* ty=Tensor[(28), bool] */;
  %234 = %228.0;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(15), float32] */;
  %236 = reshape(%233, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %237 = reshape(%235, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %238 = @func_8129(%236, %237) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %239 = @func_6070(%231, %232) /* ty=Tensor[(15, 11, 10), int8] */;
  %240 = %238.1;
  (%234, %239, %var_11096, %240, %var_11106)
}

def @func_15853() -> (Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) {
  %241 = @func_15485() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %242 = %241.0;
  %243 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %246 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%242, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %250 = logical_and(%247, %248) /* ty=Tensor[(11, 2, 12), bool] */;
  %251 = %249.3;
  (%250, %251)
}

def @func_18986(%var_18929: int8, %var_18980: Tensor[(15), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(8, 8, 5), int8], Tensor[(7, 2, 2), bool], Tensor[(28), bool], Tensor[(15), float32], Tensor[(15), float32]) {
  %252 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %253 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %254 = cast(%var_18929, dtype="int8") /* ty=int8 */;
  %255 = cast(meta[relay.Constant][18] /* ty=Tensor[(320), int8] */, dtype="int8") /* ty=Tensor[(320), int8] */;
  %256 = reshape(%254, newshape=[]) /* ty=int8 */;
  %257 = reshape(%255, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %258 = @func_12076(%256, %257) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %259 = cast(%var_18929, dtype="int8") /* ty=int8 */;
  %260 = %258.0;
  %261 = cast(%260, dtype="int8") /* ty=Tensor[(8, 8, 5), int8] */;
  %262 = reshape(%259, newshape=[]) /* ty=int8 */;
  %263 = reshape(%261, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %264 = @func_12076(%262, %263) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %265 = cast(meta[relay.Constant][19] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %266 = cast(%var_18980, dtype="float32") /* ty=Tensor[(15), float32] */;
  %267 = reshape(%265, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %268 = reshape(%266, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %269 = @func_8129(%267, %268) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %270 = @func_17816() /* ty=(Tensor[(15), float32], Tensor[(15), float32]) */;
  %271 = %252.0;
  %272 = %253.0;
  %273 = %264.0;
  %274 = %269.0;
  %275 = %270.0;
  (%271, %272, %260, %var_18929, meta[relay.Constant][18] /* ty=Tensor[(320), int8] */, %273, %274, meta[relay.Constant][19] /* ty=Tensor[(28), bool] */, %var_18980, %275)
}

def @func_17280(%var_17267: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(28), bool]) {
  %276 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %277 = cast(%var_17267, dtype="bool") /* ty=Tensor[(28), bool] */;
  %278 = reshape(%277, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %279 = @func_12336(%278) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) */;
  %280 = %276.0;
  %281 = %279.2;
  (%280, %281, %var_17267)
}

def @func_12906() -> Tensor[(11, 2, 12), float64] {
  %282 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %282.0
}

def @func_3691(%var_3665: Tensor[(4, 8, 15), float64], %var_3666: Tensor[(4, 8, 15), float64]) -> (Tensor[(4, 8, 15), float64],) {
  %283 = cast(%var_3666, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
  %284 = shape_of(%var_3665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%var_3665, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %287 = mod(%285, %286) /* ty=Tensor[(4, 8, 15), float64] */;
  (%287,)
}

def @func_17463(%var_17451: Tensor[(700), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(700), float32]) {
  %288 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %289 = cast(%var_17451, dtype="float32") /* ty=Tensor[(700), float32] */;
  %290 = cast(%var_17451, dtype="float32") /* ty=Tensor[(700), float32] */;
  %291 = reshape(%289, newshape=[7, 10, 10]) /* ty=Tensor[(7, 10, 10), float32] */;
  %292 = reshape(%290, newshape=[7, 10, 10]) /* ty=Tensor[(7, 10, 10), float32] */;
  %293 = @func_6633(%291, %292) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) */;
  %294 = %288.0;
  %295 = %293.0;
  (%294, %295, %var_17451)
}

def @func_13907(%var_13852: Tensor[(1, 825), float64], %var_13861: Tensor[(14, 4), float32], %var_13862: Tensor[(35, 4), bool], %var_13889: Tensor[(264), float64]) -> (Tensor[(15), float32], Tensor[(90), bool], Tensor[(1, 825), float64], Tensor[(105), float64], Tensor[(2, 2, 14), float32], Tensor[(14, 4), float32], Tensor[(35, 4), bool], Tensor[(7, 15, 1), float64], Tensor[(99), float64], Tensor[(264), float64], int16, Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(9, 8, 9), bool], Tensor[(648), uint64]) {
  %296 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %297 = cast(%var_13852, dtype="float64") /* ty=Tensor[(1, 825), float64] */;
  %298 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %299 = reshape(%297, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %300 = reshape(%298, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %301 = @func_12038(%299, %300) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) */;
  %302 = cast(%var_13861, dtype="float32") /* ty=Tensor[(14, 4), float32] */;
  %303 = cast(%var_13862, dtype="bool") /* ty=Tensor[(35, 4), bool] */;
  %304 = reshape(%302, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %305 = reshape(%303, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %306 = @func_13465(%304, %305) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %307 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %308 = reshape(%307, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), float64] */;
  %309 = cast(%var_13889, dtype="float64") /* ty=Tensor[(264), float64] */;
  %310 = cast(meta[relay.Constant][21] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %311 = reshape(%309, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %312 = reshape(%310, newshape=[]) /* ty=int16 */;
  %313 = @func_11589(%311, %312) /* ty=(Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) */;
  %314 = cast(%var_13889, dtype="float64") /* ty=Tensor[(264), float64] */;
  %315 = cast(meta[relay.Constant][22] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %316 = reshape(%314, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %317 = reshape(%315, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %318 = @func_11814(%316, %317) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %319 = %301.5;
  %320 = cast(%319, dtype="bool") /* ty=Tensor[(90), bool] */;
  %321 = cast(%319, dtype="bool") /* ty=Tensor[(90), bool] */;
  %322 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %323 = reshape(%320, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %324 = reshape(%321, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %325 = reshape(%322, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %326 = @func_1390(%323, %324, %325) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %327 = %296.0;
  %328 = %306.1;
  %329 = @func_5104(%308) /* ty=Tensor[(7, 15, 1), float64] */;
  %330 = %313.3;
  %331 = %318.0;
  %332 = %326.4;
  (%327, %319, %var_13852, meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, %328, %var_13861, %var_13862, %329, %330, %var_13889, meta[relay.Constant][21] /* ty=int16 */, %331, meta[relay.Constant][22] /* ty=Tensor[(364), float64] */, %332, meta[relay.Constant][23] /* ty=Tensor[(648), uint64] */)
}

def @func_14261(%var_14234: Tensor[(11, 7, 10), bool]) -> (Tensor[(11, 7, 10), bool], Tensor[(15), float32]) {
  %333 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
  %334 = shape_of(%var_14234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%var_14234, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %337 = logical_and(%335, %336) /* ty=Tensor[(11, 7, 10), bool] */;
  %338 = @func_13981() /* ty=Tensor[(15), float32] */;
  (%337, %338)
}

def @func_16110() -> Tensor[(16, 5, 4), int32] {
  %339 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  %340 = tan(%339) /* ty=Tensor[(16, 5, 4), float64] */;
  %341 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 5, 4), float64] */, dtype="int32") /* ty=Tensor[(16, 5, 4), int32] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="int32") /* ty=Tensor[(16, 5, 4), int32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%343, %344) /* ty=Tensor[(16, 5, 4), int32] */
}

def @func_15297() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %345 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  %346 = @func_13981() /* ty=Tensor[(15), float32] */;
  (%345, %346)
}

def @func_3480(%var_3475: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) {
  %347 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 9), float64] */;
  %348 = cast(%var_3475, dtype="int64") /* ty=Tensor[(13, 2, 9), int64] */;
  %349 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(13, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 2, 9), float64] */, dtype="int64") /* ty=Tensor[(13, 2, 9), int64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %352 = acos(%347) /* ty=Tensor[(13, 2, 9), float64] */;
  %353 = bitwise_and(%350, %351) /* ty=Tensor[(13, 2, 9), int64] */;
  (%352, %353)
}

def @func_14425(%var_14398: Tensor[(1620), float64], %var_14399: Tensor[(648), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) {
  %354 = cast(%var_14398, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %355 = cast(%var_14399, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %356 = cast(%var_14399, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %357 = reshape(%354, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %358 = reshape(%355, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %359 = reshape(%356, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %360 = @func_14216(%357, %358, %359) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
  %361 = %360.3;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %363 = log2(%362) /* ty=Tensor[(3276), float64] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %365 = shape_of(%361, dtype="int32") /* ty=Tensor[(1), int32] */;
  %366 = cast(%361, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?), float64] */;
  %368 = power(%366, %367) /* ty=Tensor[(3276), float64] */;
  %369 = cast(%361, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(1), int32] */;
  %371 = cast(%368, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?), float64] */;
  %373 = @func_13981() /* ty=Tensor[(15), float32] */;
  %374 = maximum(%371, %372) /* ty=Tensor[(3276), float64] */;
  (%373, %var_14398, %var_14399, %374)
}

def @func_20190() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %375 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %376 = %375.0;
  %377 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  (%376, %377)
}

def @func_14658() -> Tensor[(11, 2, 12), float64] {
  %378 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %378.0
}

def @func_1390(%var_1303: Tensor[(3, 5, 6), bool], %var_1304: Tensor[(3, 5, 6), bool], %var_1313: Tensor[(648), uint64]) -> (Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) {
  %379 = cast(%var_1313, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %380 = reshape(%379, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %381 = @func_1232(%380) /* ty=Tensor[(9, 8, 9), bool] */;
  %382 = cast(%381, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %383 = reshape(%382, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %384 = @func_1232(%383) /* ty=Tensor[(9, 8, 9), bool] */;
  %385 = cast(%384, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %386 = reshape(%385, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %387 = @func_1232(%386) /* ty=Tensor[(9, 8, 9), bool] */;
  %388 = cast(%387, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %389 = reshape(%388, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %390 = cast(%var_1304, dtype="bool") /* ty=Tensor[(3, 5, 6), bool] */;
  %391 = shape_of(%var_1303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%var_1303, dtype="bool") /* ty=Tensor[(3, 5, 6), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = logical_or(%392, %393) /* ty=Tensor[(3, 5, 6), bool] */;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
  %396 = cast(%384, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %397 = reshape(%396, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %398 = @func_1232(%389) /* ty=Tensor[(9, 8, 9), bool] */;
  %399 = atan(%395) /* ty=Tensor[(3, 5, 6), float64] */;
  %400 = @func_1232(%397) /* ty=Tensor[(9, 8, 9), bool] */;
  (%381, %var_1313, %384, %387, %398, %399, %400)
}

def @func_13763() -> (Tensor[(11, 2, 12), float64],) {
  %401 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %402 = %401.0;
  (%402,)
}

def @func_11758(%var_11693: Tensor[(12, 1), uint8], %var_11732: Tensor[(7, 2, 2), bool]) -> (Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) {
  %403 = cast(meta[relay.Constant][27] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
  %404 = cast(meta[relay.Constant][27] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
  %405 = cast(%var_11693, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
  %406 = reshape(%403, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %407 = reshape(%404, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %408 = reshape(%405, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %409 = @func_2022(%406, %407, %408) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %410 = cast(meta[relay.Constant][27] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
  %411 = %409.0;
  %412 = cast(%411, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %413 = cast(%var_11693, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
  %414 = reshape(%410, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %415 = reshape(%412, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %416 = reshape(%413, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %417 = @func_2022(%414, %415, %416) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %419 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %420 = %419.2;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(15), float32] */;
  %422 = reshape(%418, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %423 = reshape(%421, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %424 = @func_8129(%422, %423) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %425 = %424.3;
  %426 = cast(meta[relay.Constant][28] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = logical_and(%428, %429) /* ty=Tensor[(7, 2, 2), bool] */;
  %431 = cast(%var_11732, dtype="uint64") /* ty=Tensor[(7, 2, 2), uint64] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%430, dtype="uint64") /* ty=Tensor[(7, 2, 2), uint64] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %435 = cast(meta[relay.Constant][29] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %436 = reshape(%435, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %437 = @func_3969(%436) /* ty=(Tensor[(14, 9, 5), float64],) */;
  %438 = cast(meta[relay.Constant][27] /* ty=Tensor[(429, 1), uint64] */, dtype="bool") /* ty=Tensor[(429, 1), bool] */;
  %439 = cast(%420, dtype="bool") /* ty=Tensor[(15), bool] */;
  %440 = %417.2;
  %441 = bitwise_and(%433, %434) /* ty=Tensor[(7, 2, 2), uint64] */;
  %442 = %437.0;
  %443 = not_equal(%438, %439) /* ty=Tensor[(429, 15), bool] */;
  (%411, %var_11693, %440, %441, %442, meta[relay.Constant][29] /* ty=Tensor[(630), float64] */, %443)
}

def @func_14513(%var_14480: Tensor[(56), float32], %var_14484: Tensor[(234), float64], %var_14508: Tensor[(273), float32]) -> (Tensor[(5, 1, 10), int16], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(234), float64], Tensor[(13, 2, 9), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %444 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
  %445 = cast(%var_14480, dtype="float32") /* ty=Tensor[(56), float32] */;
  %446 = reshape(%445, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %447 = @func_10234(%446) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %448 = cast(%var_14484, dtype="float64") /* ty=Tensor[(234), float64] */;
  %449 = reshape(%448, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %450 = @func_3480(%449) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %453 = cast(%var_14508, dtype="float32") /* ty=Tensor[(273), float32] */;
  %454 = reshape(%453, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %455 = %444.1;
  %456 = %447.0;
  %457 = sinh(%452) /* ty=Tensor[(13, 2, 9), float32] */;
  %458 = @func_5939(%454) /* ty=Tensor[(13, 3, 7), float32] */;
  (%455, %456, %var_14480, %var_14484, %457, %458, %var_14508)
}

def @func_17406() -> Tensor[(11, 2, 12), float64] {
  %459 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %459.0
}

def @func_10234(%var_10221: Tensor[(2, 2, 14), float32]) -> (Tensor[(2, 2, 14), float32],) {
  %460 = cast(%var_10221, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
  %461 = cos(%460) /* ty=Tensor[(2, 2, 14), float32] */;
  (%461,)
}

def @func_15890() -> Tensor[(11, 2, 12), float64] {
  %462 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %462.0
}

def @func_18756(%var_18728: int16, %var_18752: Tensor[(1650), int8]) -> (Tensor[(12), uint8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], int16, Tensor[(140), bool], Tensor[(15, ?, ?), int8], Tensor[(15, 1, 1), float64], Tensor[(273), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
  %463 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %464 = cast(meta[relay.Constant][30] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %465 = cast(%var_18728, dtype="int16") /* ty=int16 */;
  %466 = cast(meta[relay.Constant][31] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %467 = reshape(%464, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %468 = reshape(%465, newshape=[]) /* ty=int16 */;
  %469 = reshape(%466, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %470 = @func_12554(%467, %468, %469) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %471 = cast(meta[relay.Constant][30] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %472 = cast(meta[relay.Constant][32] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %473 = reshape(%471, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %474 = reshape(%472, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %475 = @func_8129(%473, %474) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %476 = %475.1;
  %477 = cast(meta[relay.Constant][32] /* ty=Tensor[(15), float32] */, dtype="int8") /* ty=Tensor[(15), int8] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="int8") /* ty=Tensor[(15, 1, 1), int8] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %481 = cast(%476, dtype="float64") /* ty=Tensor[(15, 1, 1), float64] */;
  %482 = cast(meta[relay.Constant][30] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %483 = cast(%var_18728, dtype="int16") /* ty=int16 */;
  %484 = cast(meta[relay.Constant][31] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %485 = reshape(%482, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %486 = reshape(%483, newshape=[]) /* ty=int16 */;
  %487 = reshape(%484, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %488 = @func_12554(%485, %486, %487) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %489 = cast(%var_18752, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %490 = reshape(%489, newshape=[110, 15]) /* ty=Tensor[(110, 15), int8] */;
  %491 = @func_17666(%490) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) */;
  %492 = %463.3;
  %493 = %470.0;
  %494 = bitwise_or(%479, %480) /* ty=Tensor[(15, ?, ?), int8] */;
  %495 = erf(%481) /* ty=Tensor[(15, 1, 1), float64] */;
  %496 = %488.2;
  %497 = %491.1;
  (%492, meta[relay.Constant][30] /* ty=Tensor[(28), bool] */, %493, %var_18728, meta[relay.Constant][31] /* ty=Tensor[(140), bool] */, %494, %495, %496, %497, %var_18752)
}

def @func_15762(%var_15712: Tensor[(28), bool], %var_15738: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) {
  %498 = @func_15297() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %499 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %500 = reshape(%499, newshape=[]) /* ty=bool */;
  %501 = @func_10153(%500) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %502 = @func_15297() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %503 = cast(meta[relay.Constant][33] /* ty=Tensor[(90, 1), bool] */, dtype="bool") /* ty=Tensor[(90, 1), bool] */;
  %504 = cast(%var_15712, dtype="bool") /* ty=Tensor[(28), bool] */;
  %505 = reshape(%503, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %506 = reshape(%504, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %507 = @func_11264(%505, %506) /* ty=(Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) */;
  %508 = cast(meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %509 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %510 = reshape(%508, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %511 = reshape(%509, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %512 = @func_14425(%510, %511) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) */;
  %513 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %514 = cast(meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %515 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %516 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %517 = reshape(%514, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %518 = reshape(%515, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %519 = reshape(%516, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %520 = @func_14216(%517, %518, %519) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
  %521 = cast(%var_15738, dtype="float32") /* ty=Tensor[(56), float32] */;
  %522 = cast(meta[relay.Constant][36] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %523 = reshape(%521, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %524 = reshape(%522, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %525 = @func_13465(%523, %524) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %526 = %498.1;
  %527 = %501.1;
  %528 = %502.0;
  %529 = @func_12426() /* ty=Tensor[(15), float32] */;
  %530 = %507.0;
  %531 = %512.1;
  %532 = %513.0;
  %533 = %520.4;
  %534 = %525.3;
  (%526, %527, True /* ty=bool */, %528, %529, %530, meta[relay.Constant][33] /* ty=Tensor[(90, 1), bool] */, %var_15712, %531, meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, meta[relay.Constant][35] /* ty=Tensor[(1, 648), uint64] */, %532, %533, %534, %var_15738, meta[relay.Constant][36] /* ty=Tensor[(140), bool] */)
}

def @func_19094(%var_19022: Tensor[(324, 2), uint16], %var_19045: Tensor[(324, 2), int64]) -> (Tensor[(15), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(11, 2, 12), float64]) {
  %535 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %536 = %535.1;
  %537 = cast(%var_19022, dtype="int64") /* ty=Tensor[(324, 2), int64] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %539 = cast(%536, dtype="int64") /* ty=Tensor[(324, 2), int64] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %541 = multiply(%539, %540) /* ty=Tensor[(324, 2), int64] */;
  %542 = cast(%var_19045, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(2), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %546 = cast(meta[relay.Constant][37] /* ty=Tensor[(324, 2), int64] */, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %547 = shape_of(%var_19045, dtype="int32") /* ty=Tensor[(2), int32] */;
  %548 = cast(%var_19045, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %550 = greater(%548, %549) /* ty=Tensor[(324, 2), bool] */;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %552 = cast(%var_19045, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %553 = @func_18833() /* ty=Tensor[(15), float32] */;
  %554 = power(%544, %545) /* ty=Tensor[(324, 2), float32] */;
  %555 = log(%551) /* ty=Tensor[(324, 2), float32] */;
  %556 = cos(%552) /* ty=Tensor[(324, 2), float32] */;
  %557 = @func_18474() /* ty=Tensor[(11, 2, 12), float64] */;
  (%553, %554, %555, %556, %557)
}

def @func_21148() -> Tensor[(12), uint8] {
  %558 = @func_18701() /* ty=(Tensor[(12), uint8], Tensor[(15), float32]) */;
  %558.0
}

def @func_11589(%var_11566: Tensor[(11, 2, 12), float64], %var_11576: int16) -> (Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) {
  %559 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %560 = %559.0;
  %561 = cast(%var_11566, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %565 = cast(meta[relay.Constant][39] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %566 = cast(%var_11576, dtype="int16") /* ty=int16 */;
  %567 = reshape(%565, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %568 = reshape(%566, newshape=[]) /* ty=int16 */;
  %569 = @func_9492(%567, %568) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %570 = cast(meta[relay.Constant][38] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %571 = reshape(%570, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %572 = @func_5939(%571) /* ty=Tensor[(13, 3, 7), float32] */;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
  %574 = minimum(%563, %564) /* ty=Tensor[(11, 2, 12), float32] */;
  %575 = %569.1;
  %576 = exp(%573) /* ty=Tensor[(13, 3, 7), float32] */;
  (meta[relay.Constant][38] /* ty=Tensor[(273), float32] */, %574, %575, meta[relay.Constant][39] /* ty=Tensor[(99), float64] */, %var_11576, %576)
}

def @func_14846(%var_14839: Tensor[(5, 10), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) {
  %577 = @func_13957() /* ty=(Tensor[(15), float32],) */;
  %578 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %579 = cast(%var_14839, dtype="int16") /* ty=Tensor[(5, 10), int16] */;
  %580 = reshape(%578, newshape=[]) /* ty=int16 */;
  %581 = reshape(%579, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %582 = @func_5667(%580, %581) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %583 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
  %584 = %577.0;
  %585 = %582.1;
  (%583, %584, %585, meta[relay.Constant][40] /* ty=int16 */, %var_14839)
}

def @func_20007() -> Tensor[(11, 2, 12), float64] {
  %586 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %586.0
}

def @func_21233() -> Tensor[(7, 12, 5), bool] {
  %587 = @func_19811() /* ty=(Tensor[(7, 12, 5), bool],) */;
  %587.0
}

def @func_14771() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) {
  %588 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %589 = %588.1;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %591 = reshape(%590, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %592 = @func_1692(%591) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %593 = %592.0;
  (%589, %593)
}

def @func_3516(%var_3511: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  %594 = cast(%var_3511, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %595 = sqrt(%594) /* ty=Tensor[(15, 1, 1), float32] */;
  (%595,)
}

def @func_11388(%var_11379: uint8, %var_11380: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
  %596 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %597 = cast(%var_11379, dtype="uint8") /* ty=uint8 */;
  %598 = cast(%var_11380, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %599 = reshape(%597, newshape=[]) /* ty=uint8 */;
  %600 = reshape(%598, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %601 = @func_1981(%599, %600) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %602 = %596.0;
  %603 = %601.1;
  (%602, %603, %var_11379, %var_11380)
}

def @func_18701() -> (Tensor[(12), uint8], Tensor[(15), float32]) {
  %604 = @func_16007() /* ty=(Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) */;
  %605 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %606 = %604.2;
  %607 = %605.1;
  (%606, %607)
}

def @func_6333(%var_6315: Tensor[(11, 14, 13), uint16]) -> Tensor[(11, 14, 13), bool] {
  %608 = cast(%var_6315, dtype="bool") /* ty=Tensor[(11, 14, 13), bool] */;
  %609 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(11, 14, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 14, 13), uint16] */, dtype="bool") /* ty=Tensor[(11, 14, 13), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%610, %611) /* ty=Tensor[(11, 14, 13), bool] */
}

def @func_19756() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %612 = @func_13291() /* ty=(Tensor[(15), float32],) */;
  %613 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %614 = %612.0;
  %615 = %613.0;
  (%614, %615)
}

def @func_18877() -> Tensor[(11, 2, 12), float64] {
  %616 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %616.0
}

def @func_12209(%var_12205: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
  %617 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %618 = cast(%var_12205, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %619 = cast(meta[relay.Constant][42] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %620 = reshape(%618, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %621 = reshape(%619, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %622 = @func_11758(%620, %621) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %623 = %617.0;
  %624 = %622.3;
  (%623, %624, %var_12205, meta[relay.Constant][42] /* ty=Tensor[(28), bool] */)
}

def @func_11814(%var_11798: Tensor[(11, 2, 12), float64], %var_11812: Tensor[(7, 52), float64]) -> (Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) {
  %625 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %626 = %625.0;
  %627 = cast(%var_11798, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %631 = cast(%var_11812, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
  %632 = reshape(%631, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %633 = less(%629, %630) /* ty=Tensor[(11, 2, 12), bool] */;
  %634 = @func_6382(%632) /* ty=Tensor[(4, 13, 7), float64] */;
  (%633, %634, %var_11812)
}

def @func_15485() -> (Tensor[(11, 2, 12), float64],) {
  %635 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
  %636 = %635.0;
  (%636,)
}

def @func_13611() -> (Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) {
  %637 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %638 = cast(meta[relay.Constant][43] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %639 = cast(meta[relay.Constant][44] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %640 = reshape(%638, newshape=[]) /* ty=int16 */;
  %641 = reshape(%639, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %642 = @func_5667(%640, %641) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %643 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %644 = %637.1;
  %645 = %642.0;
  %646 = %643.0;
  (%644, %645, meta[relay.Constant][43] /* ty=int16 */, meta[relay.Constant][44] /* ty=Tensor[(50), int16] */, %646)
}

def @func_15577() -> (Tensor[(16, 4, 1), float32],) {
  %647 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 1), float32] */;
  %648 = atanh(%647) /* ty=Tensor[(16, 4, 1), float32] */;
  (%648,)
}

def @func_11264(%var_11215: Tensor[(90), bool], %var_11251: Tensor[(1, 28), bool]) -> (Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) {
  %649 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %650 = cast(%var_11215, dtype="bool") /* ty=Tensor[(90), bool] */;
  %651 = cast(%var_11215, dtype="bool") /* ty=Tensor[(90), bool] */;
  %652 = cast(meta[relay.Constant][46] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %653 = reshape(%650, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %654 = reshape(%651, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %655 = reshape(%652, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %656 = @func_1390(%653, %654, %655) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %657 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %658 = cast(meta[relay.Constant][47] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %659 = cast(%var_11251, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
  %660 = reshape(%658, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %661 = reshape(%659, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %662 = @func_11118(%660, %661) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) */;
  %663 = %649.2;
  %664 = %656.4;
  %665 = %657.0;
  %666 = %662.4;
  (%663, %664, %var_11215, meta[relay.Constant][46] /* ty=Tensor[(648), uint64] */, %665, %666, meta[relay.Constant][47] /* ty=Tensor[(1650), int8] */, %var_11251)
}

def @func_6227(%var_6196: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32],) {
  %667 = cast(%var_6196, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
  %668 = asin(%667) /* ty=Tensor[(9, 7, 14), float32] */;
  (%668,)
}

def @func_18447(%var_18441: Tensor[(90), bool]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
  %669 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %670 = cast(%var_18441, dtype="bool") /* ty=Tensor[(90), bool] */;
  %671 = cast(%var_18441, dtype="bool") /* ty=Tensor[(90), bool] */;
  %672 = cast(meta[relay.Constant][48] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %673 = reshape(%670, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %674 = reshape(%671, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %675 = reshape(%672, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %676 = @func_1390(%673, %674, %675) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %677 = %669.0;
  %678 = @func_16262() /* ty=Tensor[(11, 2, 12), float64] */;
  %679 = @func_12426() /* ty=Tensor[(15), float32] */;
  %680 = %676.3;
  (%677, %678, %679, %680, %var_18441, meta[relay.Constant][48] /* ty=Tensor[(648), uint64] */)
}

def @func_12038(%var_12025: Tensor[(825), float64], %var_12029: Tensor[(105), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) {
  %681 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %682 = cast(meta[relay.Constant][49] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %683 = cast(meta[relay.Constant][49] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %684 = reshape(%682, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %685 = reshape(%683, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %686 = @func_6070(%684, %685) /* ty=Tensor[(15, 11, 10), int8] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(15, 11, 10), float64] */;
  %688 = cast(%var_12025, dtype="float64") /* ty=Tensor[(825), float64] */;
  %689 = cast(meta[relay.Constant][50] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %690 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 108), uint64] */, dtype="uint64") /* ty=Tensor[(6, 108), uint64] */;
  %691 = cast(meta[relay.Constant][52] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %692 = cast(%var_12029, dtype="float64") /* ty=Tensor[(105), float64] */;
  %693 = reshape(%688, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float64] */;
  %694 = reshape(%689, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %695 = reshape(%690, newshape=[1, 648]) /* ty=Tensor[(1, 648), uint64] */;
  %696 = reshape(%691, newshape=[182, 2]) /* ty=Tensor[(182, 2), float64] */;
  %697 = reshape(%692, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %698 = @func_7892(%693, %694, %695, %696, %697) /* ty=(Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) */;
  %699 = %681.0;
  %700 = atan(%687) /* ty=Tensor[(15, 11, 10), float64] */;
  %701 = %698.6;
  (%699, meta[relay.Constant][49] /* ty=Tensor[(1650), int8] */, %700, %701, %var_12025, meta[relay.Constant][50] /* ty=Tensor[(90), bool] */, meta[relay.Constant][51] /* ty=Tensor[(6, 108), uint64] */, meta[relay.Constant][52] /* ty=Tensor[(364), float64] */, %var_12029)
}

def @func_12554(%var_12493: Tensor[(1, 28), bool], %var_12510: int16, %var_12518: Tensor[(5, 28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) {
  %702 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %703 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %704 = cast(%var_12493, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
  %705 = reshape(%704, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %706 = @func_12336(%705) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) */;
  %707 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 99), float64] */, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
  %708 = cast(%var_12510, dtype="int16") /* ty=int16 */;
  %709 = reshape(%707, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %710 = reshape(%708, newshape=[]) /* ty=int16 */;
  %711 = @func_9492(%709, %710) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %712 = @func_12238() /* ty=(Tensor[(15, 1, 1), float32],) */;
  %713 = %712.0;
  %714 = cast(%713, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %715 = cast(%var_12510, dtype="bool") /* ty=bool */;
  %716 = cast(%var_12493, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
  %717 = cast(%var_12518, dtype="int16") /* ty=Tensor[(5, 28), int16] */;
  %718 = bitwise_and(%716, %717) /* ty=Tensor[(5, 28), int16] */;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %720 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 99), float64] */, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
  %721 = cast(%var_12510, dtype="int16") /* ty=int16 */;
  %722 = reshape(%720, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %723 = reshape(%721, newshape=[]) /* ty=int16 */;
  %724 = @func_9492(%722, %723) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %725 = %702.0;
  %726 = %703.0;
  %727 = %706.2;
  %728 = %711.6;
  %729 = less_equal(%714, %715) /* ty=Tensor[(15, 1, 1), bool] */;
  %730 = exp(%719) /* ty=Tensor[(5, 28), float32] */;
  %731 = %724.2;
  %732 = @func_12426() /* ty=Tensor[(15), float32] */;
  (%725, %726, %727, %728, meta[relay.Constant][53] /* ty=Tensor[(1, 99), float64] */, %729, %730, %731, %732)
}

def @func_12426() -> Tensor[(15), float32] {
  %733 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %733.0
}

def @func_5428(%var_5386: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool],) {
  %734 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 12, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %735 = shape_of(%var_5386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%var_5386, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = greater(%736, %737) /* ty=Tensor[(7, 12, 5), bool] */;
  (%738,)
}

def @func_6070(%var_6065: Tensor[(15, 11, 10), int8], %var_6066: Tensor[(15, 11, 10), int8]) -> Tensor[(15, 11, 10), int8] {
  %739 = cast(%var_6066, dtype="int8") /* ty=Tensor[(15, 11, 10), int8] */;
  %740 = shape_of(%var_6065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_6065, dtype="int8") /* ty=Tensor[(15, 11, 10), int8] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%741, %742) /* ty=Tensor[(15, 11, 10), int8] */
}

def @func_16892() -> (Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) {
  %743 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %744 = cast(meta[relay.Constant][55] /* ty=Tensor[(324, 2), uint64] */, dtype="uint64") /* ty=Tensor[(324, 2), uint64] */;
  %745 = reshape(%744, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %746 = @func_1232(%745) /* ty=Tensor[(9, 8, 9), bool] */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(9, 8, 9), float32] */;
  %748 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(324, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %749 = cast(meta[relay.Constant][55] /* ty=Tensor[(324, 2), uint64] */, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %751 = floor_divide(%749, %750) /* ty=Tensor[(324, 2), float32] */;
  %752 = cast(%746, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
  %753 = acosh(%752) /* ty=Tensor[(9, 8, 9), float64] */;
  %754 = cast(%753, dtype="uint16") /* ty=Tensor[(9, 8, 9), uint16] */;
  %755 = shape_of(%751, dtype="int32") /* ty=Tensor[(2), int32] */;
  %756 = cast(%751, dtype="uint16") /* ty=Tensor[(324, 2), uint16] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %758 = %743.0;
  %759 = minimum(%756, %757) /* ty=Tensor[(324, 2), uint16] */;
  (%758, %759)
}

def @func_15216(%var_15163: Tensor[(13, 9, 11), float64]) -> (Tensor[(13, 9, 11), float64], Tensor[(11, 2, 12), float64]) {
  %760 = cast(%var_15163, dtype="float64") /* ty=Tensor[(13, 9, 11), float64] */;
  %761 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %762 = log10(%760) /* ty=Tensor[(13, 9, 11), float64] */;
  %763 = %761.0;
  (%762, %763)
}

def @func_1651(%var_1639: bool, %var_1640: Tensor[(2, 11, 11), bool]) -> (Tensor[(2, 11, 11), bool],) {
  %764 = cast(%var_1639, dtype="bool") /* ty=bool */;
  %765 = cast(%var_1640, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
  %766 = logical_and(%764, %765) /* ty=Tensor[(2, 11, 11), bool] */;
  (%766,)
}

def @func_15098() -> Tensor[(11, 2, 12), float64] {
  @func_12906() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_1981(%var_1939: uint8, %var_1940: Tensor[(1, 3, 4), uint8]) -> (Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) {
  %767 = cast(%var_1939, dtype="uint8") /* ty=uint8 */;
  %768 = cast(%var_1940, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
  %769 = cast(%var_1940, dtype="int64") /* ty=Tensor[(1, 3, 4), int64] */;
  %770 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 3, 4), uint8] */, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
  %771 = logical_xor(%767, %768) /* ty=Tensor[(1, 3, 4), uint8] */;
  %772 = add(%769, %770) /* ty=Tensor[(8, 3, 4), int64] */;
  (%771, %772)
}

def @func_13291() -> (Tensor[(15), float32],) {
  %773 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %774 = %773.0;
  (%774,)
}

def @func_17891() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %775 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %776 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %777 = %775.0;
  %778 = %776.0;
  %779 = @func_13821() /* ty=Tensor[(15), float32] */;
  (%777, %778, %779)
}

def @func_20890() -> (Tensor[(630), float64], Tensor[(11, 2, 12), float64]) {
  %780 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
  %781 = %780.1;
  %782 = @func_16262() /* ty=Tensor[(11, 2, 12), float64] */;
  (%781, %782)
}

def @func_16399(%var_16394: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(324, 2), bool], Tensor[(28), bool], Tensor[(56), float32]) {
  %783 = @func_13957() /* ty=(Tensor[(15), float32],) */;
  %784 = cast(meta[relay.Constant][57] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %785 = cast(%var_16394, dtype="float32") /* ty=Tensor[(56), float32] */;
  %786 = reshape(%784, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %787 = reshape(%785, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %788 = @func_15762(%786, %787) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
  %789 = %783.0;
  %790 = %788.12;
  (%789, %790, meta[relay.Constant][57] /* ty=Tensor[(28), bool] */, %var_16394)
}

def @func_19987() -> (Tensor[(11, 2, 12), float64],) {
  %791 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
  (%791,)
}

def @func_19643(%var_19605: Tensor[(13, 6, 6), uint16], %var_19606: Tensor[(13, 6, 6), uint16]) -> Tensor[(13, 6, 6), bool] {
  %792 = cast(%var_19606, dtype="uint16") /* ty=Tensor[(13, 6, 6), uint16] */;
  %793 = shape_of(%var_19605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%var_19605, dtype="uint16") /* ty=Tensor[(13, 6, 6), uint16] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %796 = minimum(%794, %795) /* ty=Tensor[(13, 6, 6), uint16] */;
  %797 = cast(%796, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %798 = shape_of(%var_19605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_19605, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%799, %800) /* ty=Tensor[(13, 6, 6), bool] */
}

def @func_13501(%var_13495: Tensor[(320), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) {
  %801 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %802 = cast(%var_13495, dtype="int8") /* ty=Tensor[(320), int8] */;
  %803 = reshape(%801, newshape=[]) /* ty=int8 */;
  %804 = reshape(%802, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %805 = @func_12076(%803, %804) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %806 = @func_12105() /* ty=Tensor[(11, 2, 12), float64] */;
  %807 = %805.0;
  (%806, %807, meta[relay.Constant][58] /* ty=int8 */, %var_13495)
}

def @func_19593() -> Tensor[(11, 2, 12), float64] {
  %808 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %808.0
}

def @func_11043() -> (Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
  %809 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %810 = cast(meta[relay.Constant][60] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %811 = reshape(%810, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %812 = @func_3516(%811) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %813 = cosh(%809) /* ty=Tensor[(11, 2, 12), float64] */;
  %814 = %812.0;
  (%813, %814, meta[relay.Constant][60] /* ty=Tensor[(15), float32] */)
}

def @func_20727() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %815 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %816 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %817 = %816.1;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %819 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %820 = %815.0;
  %821 = atanh(%818) /* ty=Tensor[(11, 2, 12), float64] */;
  %822 = %819.0;
  (%820, %821, %822)
}

def @func_16566(%var_16553: Tensor[(11, 5, 12), int16]) -> (Tensor[(11, 5, 12), int16], Tensor[(11, 5, 12), float64]) {
  %823 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 5, 12), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 12), int16] */;
  %824 = shape_of(%var_16553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%var_16553, dtype="int16") /* ty=Tensor[(11, 5, 12), int16] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %827 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 5, 12), int16] */, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %828 = bitwise_or(%825, %826) /* ty=Tensor[(11, 5, 12), int16] */;
  %829 = log(%827) /* ty=Tensor[(11, 5, 12), float64] */;
  (%828, %829)
}

def @func_19363(%var_19302: Tensor[(56), float32], %var_19321: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(28), bool], Tensor[(56), float32], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], Tensor[(28), bool], Tensor[(1650), int8]) {
  %830 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %831 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %832 = cast(%var_19302, dtype="float32") /* ty=Tensor[(56), float32] */;
  %833 = reshape(%831, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %834 = reshape(%832, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %835 = @func_15762(%833, %834) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
  %836 = cast(%var_19321, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %837 = reshape(%836, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
  %838 = cast(meta[relay.Constant][63] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %839 = reshape(%838, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %840 = @func_17019(%839) /* ty=(Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) */;
  %841 = %830.0;
  %842 = @func_13821() /* ty=Tensor[(15), float32] */;
  %843 = %835.0;
  %844 = @func_8434(%837) /* ty=Tensor[(8, 10, 14), float64] */;
  %845 = %840.1;
  (%841, %842, %843, meta[relay.Constant][62] /* ty=Tensor[(28), bool] */, %var_19302, %844, %var_19321, %845, meta[relay.Constant][63] /* ty=Tensor[(1650), int8] */)
}

def @func_20273() -> (Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) {
  %846 = cast(meta[relay.Constant][64] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %847 = cast(meta[relay.Constant][65] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %848 = reshape(%846, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %849 = reshape(%847, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %850 = @func_11758(%848, %849) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %851 = @func_12426() /* ty=Tensor[(15), float32] */;
  %852 = %850.1;
  (%851, %852, meta[relay.Constant][64] /* ty=Tensor[(12), uint8] */, meta[relay.Constant][65] /* ty=Tensor[(28), bool] */)
}

def @func_14795() -> (Tensor[(15), float32],) {
  %853 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %854 = %853.0;
  (%854,)
}

def @func_18833() -> Tensor[(15), float32] {
  %855 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
  %855.1
}

def @func_18225() -> Tensor[(15), float32] {
  @func_14273() /* ty=Tensor[(15), float32] */
}

def @func_14624(%var_14537: Tensor[(364), float64], %var_14559: bool, %var_14560: Tensor[(242), bool]) -> (Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(4, 13, 7), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(2, 11, 11), bool], bool, Tensor[(242), bool], Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(56, 20), float64], Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32]) {
  %856 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %859 = cast(%var_14537, dtype="float64") /* ty=Tensor[(364), float64] */;
  %860 = reshape(%858, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %861 = reshape(%859, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %862 = @func_11814(%860, %861) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %863 = cast(%var_14537, dtype="float64") /* ty=Tensor[(364), float64] */;
  %864 = reshape(%863, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %865 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %866 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %867 = cast(%var_14559, dtype="bool") /* ty=bool */;
  %868 = cast(%var_14560, dtype="bool") /* ty=Tensor[(242), bool] */;
  %869 = reshape(%867, newshape=[]) /* ty=bool */;
  %870 = reshape(%868, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), bool] */;
  %871 = @func_1651(%869, %870) /* ty=(Tensor[(2, 11, 11), bool],) */;
  %872 = cast(%857, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %873 = asin(%872) /* ty=Tensor[(11, 2, 12), float32] */;
  %874 = cast(%873, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %875 = cast(meta[relay.Constant][66] /* ty=Tensor[(56, 20), float64] */, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
  %876 = reshape(%875, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
  %877 = cast(%873, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %878 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %879 = %862.0;
  %880 = @func_6382(%864) /* ty=Tensor[(4, 13, 7), float64] */;
  %881 = %865.0;
  %882 = %866.0;
  %883 = %871.0;
  %884 = asinh(%874) /* ty=Tensor[(11, 2, 12), float64] */;
  %885 = @func_8434(%876) /* ty=Tensor[(8, 10, 14), float64] */;
  %886 = sinh(%877) /* ty=Tensor[(11, 2, 12), float64] */;
  %887 = %878.1;
  (%879, %var_14537, %880, %881, %882, %883, %var_14559, %var_14560, %884, %885, meta[relay.Constant][66] /* ty=Tensor[(56, 20), float64] */, %886, %887)
}

def @func_16550() -> (Tensor[(12), uint8],) {
  %888 = @func_15853() /* ty=(Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) */;
  %889 = %888.1;
  (%889,)
}

def @func_20196() -> Tensor[(11, 2, 12), float64] {
  @func_20007() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_14024() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %890 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %891 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %892 = %890.0;
  %893 = %891.2;
  (%892, %893)
}

def @func_11852(%var_11847: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) {
  %894 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %895 = cast(%var_11847, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %896 = reshape(%895, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
  %897 = %894.0;
  %898 = @func_8434(%896) /* ty=Tensor[(8, 10, 14), float64] */;
  (%897, %898, %var_11847)
}

def @func_16069() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %899 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %900 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
  %901 = %899.1;
  %902 = %900.0;
  (%901, %902)
}

def @func_9119(%var_9096: Tensor[(3, 3, 8), bool], %var_9097: Tensor[(3, 3, 8), bool]) -> (Tensor[(3, 3, 8), bool],) {
  %903 = cast(%var_9097, dtype="bool") /* ty=Tensor[(3, 3, 8), bool] */;
  %904 = shape_of(%var_9096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_9096, dtype="bool") /* ty=Tensor[(3, 3, 8), bool] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %907 = logical_or(%905, %906) /* ty=Tensor[(3, 3, 8), bool] */;
  (%907,)
}

def @func_8692(%var_8678: Tensor[(11, 15, 4), float32]) -> Tensor[(11, 15, 4), float32] {
  %908 = cast(%var_8678, dtype="float32") /* ty=Tensor[(11, 15, 4), float32] */;
  asin(%908) /* ty=Tensor[(11, 15, 4), float32] */
}

def @func_20091() -> (Tensor[(7, 12, 5), bool],) {
  %909 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
  %910 = %909.4;
  (%910,)
}

def @func_20541() -> (Tensor[(11, 2, 12), float64],) {
  %911 = @func_17406() /* ty=Tensor[(11, 2, 12), float64] */;
  (%911,)
}

def @func_21177() -> (Tensor[(11, 2, 12), float64],) {
  %912 = @func_13737() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) */;
  %913 = %912.0;
  (%913,)
}

def @func_3969(%var_3959: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64],) {
  %914 = cast(%var_3959, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
  %915 = sin(%914) /* ty=Tensor[(14, 9, 5), float64] */;
  (%915,)
}

def @func_15153(%var_15105: Tensor[(1, 50), int16], %var_15112: Tensor[(264), float64], %var_15129: Tensor[(12), uint8]) -> (Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) {
  %916 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %917 = cast(%var_15105, dtype="int16") /* ty=Tensor[(1, 50), int16] */;
  %918 = reshape(%917, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %919 = @func_14846(%918) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %920 = %919.3;
  %921 = cast(%var_15112, dtype="float64") /* ty=Tensor[(264), float64] */;
  %922 = cast(meta[relay.Constant][67] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %923 = reshape(%921, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %924 = reshape(%922, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %925 = @func_11814(%923, %924) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %926 = %925.1;
  %927 = cast(%920, dtype="int8") /* ty=int8 */;
  %928 = cast(%926, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
  %929 = cast(%var_15129, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %930 = reshape(%929, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %931 = @func_12209(%930) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */;
  %932 = cast(%var_15105, dtype="int16") /* ty=Tensor[(1, 50), int16] */;
  %933 = reshape(%932, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %934 = @func_14846(%933) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %935 = cast(%920, dtype="uint8") /* ty=uint8 */;
  %936 = cast(%var_15129, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %937 = reshape(%935, newshape=[]) /* ty=uint8 */;
  %938 = reshape(%936, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %939 = @func_1981(%937, %938) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %940 = %916.1;
  %941 = @func_14273() /* ty=Tensor[(15), float32] */;
  %942 = maximum(%927, %928) /* ty=Tensor[(4, 13, 7), int8] */;
  %943 = %931.0;
  %944 = %934.0;
  %945 = %939.0;
  (%940, %941, %var_15105, %var_15112, meta[relay.Constant][67] /* ty=Tensor[(364), float64] */, %942, %943, %var_15129, %944, %945)
}

def @func_17490() -> (Tensor[(11, 2, 12), float64],) {
  %946 = @func_14771() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) */;
  %947 = %946.0;
  (%947,)
}

def @func_13109() -> (Tensor[(11, 2, 12), float64],) {
  %948 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  (%948,)
}

def @func_19454(%var_19438: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %949 = @func_18877() /* ty=Tensor[(11, 2, 12), float64] */;
  %950 = cast(%949, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %951 = cast(%var_19438, dtype="float64") /* ty=Tensor[(364), float64] */;
  %952 = reshape(%950, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %953 = reshape(%951, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %954 = @func_18548(%952, %953) /* ty=(Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */;
  %955 = %954.1;
  (%949, %955, %var_19438)
}

def @func_17967(%var_17954: Tensor[(1620), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(648), uint64]) {
  %956 = @func_13651() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %957 = cast(%var_17954, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %958 = cast(meta[relay.Constant][68] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %959 = reshape(%957, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %960 = reshape(%958, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %961 = @func_14425(%959, %960) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) */;
  %962 = %956.0;
  %963 = %961.1;
  (%962, %963, %var_17954, meta[relay.Constant][68] /* ty=Tensor[(648), uint64] */)
}

def @func_13465(%var_13406: Tensor[(56), float32], %var_13437: Tensor[(140), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %964 = cast(%var_13406, dtype="float32") /* ty=Tensor[(56), float32] */;
  %965 = reshape(%964, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %966 = @func_10234(%965) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %967 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %968 = cast(meta[relay.Constant][69] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %969 = cast(meta[relay.Constant][70] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %970 = cast(%var_13437, dtype="bool") /* ty=Tensor[(140), bool] */;
  %971 = reshape(%968, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %972 = reshape(%969, newshape=[]) /* ty=int16 */;
  %973 = reshape(%970, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %974 = @func_12554(%971, %972, %973) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %975 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %976 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %977 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  %978 = %966.0;
  %979 = %967.0;
  %980 = %974.5;
  %981 = %975.0;
  %982 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  %983 = %976.0;
  (%977, %978, %var_13406, %979, %980, meta[relay.Constant][69] /* ty=Tensor[(28), bool] */, meta[relay.Constant][70] /* ty=int16 */, %var_13437, %981, %982, %983)
}

def @func_14216(%var_14165: Tensor[(1620), float64], %var_14166: Tensor[(324, 2), uint64], %var_14185: Tensor[(324, 2), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) {
  %984 = cast(meta[relay.Constant][71] /* ty=Tensor[(3276), float64] */, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %985 = reshape(%984, newshape=[1, 3276]) /* ty=Tensor[(1, 3276), float64] */;
  %986 = @func_12634(%985) /* ty=(Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) */;
  %987 = cast(%var_14185, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %988 = shape_of(%var_14166, dtype="int32") /* ty=Tensor[(2), int32] */;
  %989 = cast(%var_14166, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %991 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %992 = cast(meta[relay.Constant][71] /* ty=Tensor[(3276), float64] */, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %993 = cast(meta[relay.Constant][71] /* ty=Tensor[(3276), float64] */, dtype="bool") /* ty=Tensor[(3276), bool] */;
  %994 = reshape(%992, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %995 = reshape(%993, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %996 = @func_11933(%994, %995) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %997 = cast(%var_14165, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %998 = cast(%var_14166, dtype="uint64") /* ty=Tensor[(324, 2), uint64] */;
  %999 = reshape(%997, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float64] */;
  %1000 = reshape(%998, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %1001 = @func_13568(%999, %1000) /* ty=(Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */;
  %1002 = %1001.0;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1004 = @func_12426() /* ty=Tensor[(15), float32] */;
  %1005 = %986.2;
  %1006 = less(%989, %990) /* ty=Tensor[(324, 2), bool] */;
  %1007 = %991.0;
  %1008 = %996.3;
  %1009 = sigmoid(%1003) /* ty=Tensor[(15, 9, 12), float64] */;
  (%1004, %var_14165, %1005, meta[relay.Constant][71] /* ty=Tensor[(3276), float64] */, %1006, %1007, %1008, %1009)
}

def @func_5104(%var_5100: Tensor[(7, 15, 1), float64]) -> Tensor[(7, 15, 1), float64] {
  %1010 = cast(0.174388f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1011 = cast(%var_5100, dtype="float64") /* ty=Tensor[(7, 15, 1), float64] */;
  minimum(%1010, %1011) /* ty=Tensor[(7, 15, 1), float64] */
}

def @func_14066() -> (Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) {
  %1012 = cast(meta[relay.Constant][72] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1013 = cast(meta[relay.Constant][73] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1014 = reshape(%1012, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %1015 = reshape(%1013, newshape=[]) /* ty=int16 */;
  %1016 = @func_9492(%1014, %1015) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %1017 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  %1018 = %1016.2;
  (%1017, %1018, meta[relay.Constant][72] /* ty=Tensor[(99), float64] */, meta[relay.Constant][73] /* ty=int16 */)
}

def @func_12634(%var_12628: Tensor[(1, 3276), float64]) -> (Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) {
  %1019 = cast(meta[relay.Constant][74] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1020 = cast(meta[relay.Constant][75] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1021 = reshape(%1019, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %1022 = reshape(%1020, newshape=[]) /* ty=int16 */;
  %1023 = @func_9492(%1021, %1022) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %1024 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1025 = cast(meta[relay.Constant][75] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %1026 = reshape(%1025, newshape=[]) /* ty=bool */;
  %1027 = @func_10153(%1026) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1028 = cast(%var_12628, dtype="float64") /* ty=Tensor[(1, 3276), float64] */;
  %1029 = cast(%var_12628, dtype="bool") /* ty=Tensor[(1, 3276), bool] */;
  %1030 = reshape(%1028, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %1031 = reshape(%1029, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %1032 = @func_11933(%1030, %1031) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %1033 = @func_12426() /* ty=Tensor[(15), float32] */;
  %1034 = %1023.7;
  %1035 = %1024.0;
  %1036 = %1027.3;
  %1037 = %1032.0;
  (%1033, %1034, meta[relay.Constant][74] /* ty=Tensor[(99), float64] */, meta[relay.Constant][75] /* ty=int16 */, %1035, %1036, %1037, %var_12628)
}

def @func_13089(%var_13070: Tensor[(660), float32], %var_13075: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 15, 4), float32], Tensor[(660), float32], Tensor[(10, 5, 13), uint16], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %1038 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %1039 = cast(%var_13070, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1040 = reshape(%1039, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), float32] */;
  %1041 = cast(meta[relay.Constant][76] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1042 = cast(%var_13075, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1043 = reshape(%1041, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %1044 = reshape(%1042, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1045 = @func_3360(%1043, %1044) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1046 = %1038.0;
  %1047 = @func_8692(%1040) /* ty=Tensor[(11, 15, 4), float32] */;
  %1048 = %1045.1;
  (%1046, %1047, %var_13070, %1048, meta[relay.Constant][76] /* ty=Tensor[(429), uint64] */, %var_13075)
}

def @func_16334(%var_16295: Tensor[(3276), float64], %var_16301: Tensor[(28), bool], %var_16319: Tensor[(140), bool], %var_16330: Tensor[(50), int16]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(3276), float64], Tensor[(8, 3, 4), int64], Tensor[(56), float32], uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(50), int16]) {
  %1049 = cast(%var_16295, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %1050 = cast(%var_16295, dtype="bool") /* ty=Tensor[(3276), bool] */;
  %1051 = reshape(%1049, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %1052 = reshape(%1050, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %1053 = @func_11933(%1051, %1052) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %1054 = cast(meta[relay.Constant][77] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1055 = cast(meta[relay.Constant][78] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1056 = cast(meta[relay.Constant][79] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1057 = cast(%var_16301, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1058 = reshape(%1054, newshape=[2, 28]) /* ty=Tensor[(2, 28), float32] */;
  %1059 = reshape(%1055, newshape=[]) /* ty=uint8 */;
  %1060 = reshape(%1056, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %1061 = reshape(%1057, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %1062 = @func_11483(%1058, %1059, %1060, %1061) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1063 = @func_13651() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1064 = cast(%var_16301, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1065 = cast(meta[relay.Constant][78] /* ty=uint8 */, dtype="int16") /* ty=int16 */;
  %1066 = cast(%var_16319, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1067 = reshape(%1064, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %1068 = reshape(%1065, newshape=[]) /* ty=int16 */;
  %1069 = reshape(%1066, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %1070 = @func_12554(%1067, %1068, %1069) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %1071 = cast(%var_16330, dtype="int16") /* ty=Tensor[(50), int16] */;
  %1072 = reshape(%1071, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %1073 = @func_14846(%1072) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %1074 = @func_15810() /* ty=Tensor[(15), float32] */;
  %1075 = %1053.0;
  %1076 = %1062.3;
  %1077 = %1063.0;
  %1078 = %1070.1;
  %1079 = %1073.0;
  (%1074, %1075, %var_16295, %1076, meta[relay.Constant][77] /* ty=Tensor[(56), float32] */, meta[relay.Constant][78] /* ty=uint8 */, meta[relay.Constant][79] /* ty=Tensor[(1650), int8] */, %var_16301, %1077, %1078, %var_16319, %1079, %var_16330)
}

def @func_12105() -> Tensor[(11, 2, 12), float64] {
  %1080 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1080.0
}

def @func_18095(%var_18033: Tensor[(429), uint64], %var_18034: Tensor[(12), uint8], %var_18083: Tensor[(1650), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(10, 5, 13), uint16], Tensor[(12), uint8], Tensor[(15), float32], Tensor[(90), bool], Tensor[(28), bool], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(429), float32]) {
  %1081 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1082 = cast(%var_18033, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1083 = cast(%var_18034, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1084 = reshape(%1082, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %1085 = reshape(%1083, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1086 = @func_3360(%1084, %1085) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1087 = cast(meta[relay.Constant][80] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1088 = cast(meta[relay.Constant][81] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1089 = reshape(%1087, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %1090 = reshape(%1088, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %1091 = @func_11264(%1089, %1090) /* ty=(Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) */;
  %1092 = cast(%var_18083, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1093 = cast(%var_18083, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1094 = reshape(%1092, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1095 = reshape(%1093, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1096 = cast(%var_18033, dtype="float32") /* ty=Tensor[(429), float32] */;
  %1097 = %1081.0;
  %1098 = %1086.1;
  %1099 = %1091.0;
  %1100 = @func_6070(%1094, %1095) /* ty=Tensor[(15, 11, 10), int8] */;
  %1101 = sin(%1096) /* ty=Tensor[(429), float32] */;
  (%1097, %1098, %var_18034, %1099, meta[relay.Constant][80] /* ty=Tensor[(90), bool] */, meta[relay.Constant][81] /* ty=Tensor[(28), bool] */, %1100, %var_18083, %1101)
}

def @func_15019() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) {
  %1102 = cast(meta[relay.Constant][82] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1103 = cast(meta[relay.Constant][83] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1104 = reshape(%1102, newshape=[]) /* ty=uint8 */;
  %1105 = reshape(%1103, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1106 = @func_11388(%1104, %1105) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
  %1107 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  %1108 = %1106.0;
  (%1107, %1108, meta[relay.Constant][82] /* ty=uint8 */, meta[relay.Constant][83] /* ty=Tensor[(12), uint8] */)
}

def @func_17634() -> (Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %1109 = @func_15853() /* ty=(Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) */;
  %1110 = @func_15485() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1111 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1112 = cast(meta[relay.Constant][84] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1113 = reshape(%1112, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %1114 = %1109.1;
  %1115 = %1110.0;
  %1116 = %1111.2;
  %1117 = @func_6382(%1113) /* ty=Tensor[(4, 13, 7), float64] */;
  (%1114, %1115, %1116, %1117, meta[relay.Constant][84] /* ty=Tensor[(364), float64] */)
}

def @func_12766() -> (Tensor[(11, 2, 12), float64],) {
  %1118 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_16149(%var_16128: Tensor[(28), bool], %var_16137: Tensor[(3276), float64]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(28), bool], Tensor[(13, 2, 9), int64], Tensor[(3276), float64]) {
  %1120 = @func_13291() /* ty=(Tensor[(15), float32],) */;
  %1121 = cast(%var_16128, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1122 = %1120.0;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(15), float32] */;
  %1124 = reshape(%1121, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %1125 = reshape(%1123, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %1126 = @func_8129(%1124, %1125) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %1127 = cast(%var_16137, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %1128 = cast(%var_16137, dtype="bool") /* ty=Tensor[(3276), bool] */;
  %1129 = reshape(%1127, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %1130 = reshape(%1128, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %1131 = @func_11933(%1129, %1130) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %1132 = %1126.1;
  %1133 = %1131.1;
  (%1122, %1132, %var_16128, %1133, %var_16137)
}

def @func_13169() -> Tensor[(11, 2, 12), float64] {
  %1134 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1134.0
}

def @main(%var_21290: uint8, %var_21291: Tensor[(14, 11, 15), uint8]) -> Tensor[(14, 11, 15), uint8] {
  %1135 = cast(%var_21290, dtype="uint8") /* ty=uint8 */;
  %1136 = cast(%var_21291, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  maximum(%1135, %1136) /* ty=Tensor[(14, 11, 15), uint8] */
}

def @func_11369() -> (Tensor[(11, 2, 12), float64],) {
  %1137 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1138 = %1137.0;
  (%1138,)
}

def @func_16262() -> Tensor[(11, 2, 12), float64] {
  %1139 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1139.0
}

def @func_13821() -> Tensor[(15), float32] {
  %1140 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %1140.0
}

def @func_13737() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) {
  %1141 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1142 = %1141.0;
  %1143 = cast(%1142, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %1144 = tan(%1143) /* ty=Tensor[(11, 2, 12), float64] */;
  %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %1146 = reshape(%1145, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %1147 = @func_1692(%1146) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %1148 = cast(meta[relay.Constant][85] /* ty=Tensor[(5, 330), int8] */, dtype="int8") /* ty=Tensor[(5, 330), int8] */;
  %1149 = cast(meta[relay.Constant][85] /* ty=Tensor[(5, 330), int8] */, dtype="int8") /* ty=Tensor[(5, 330), int8] */;
  %1150 = reshape(%1148, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1151 = reshape(%1149, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1152 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1153 = %1147.0;
  %1154 = @func_6070(%1150, %1151) /* ty=Tensor[(15, 11, 10), int8] */;
  %1155 = %1152.0;
  (%1144, %1153, %1154, meta[relay.Constant][85] /* ty=Tensor[(5, 330), int8] */, %1155)
}

def @func_21120(%var_21081: Tensor[(1, 12), uint8]) -> (Tensor[(6, 11, 4), float32], int8, int8, Tensor[(320), int8], Tensor[(1, 12), uint8], Tensor[(2, 2, 14), float32], Tensor[(11, 2, 12), float64]) {
  %1156 = @func_14771() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) */;
  %1157 = cast(meta[relay.Constant][86] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1158 = cast(meta[relay.Constant][87] /* ty=Tensor[(320), int8] */, dtype="int8") /* ty=Tensor[(320), int8] */;
  %1159 = cast(%var_21081, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %1160 = reshape(%1157, newshape=[]) /* ty=int8 */;
  %1161 = reshape(%1158, newshape=[320]) /* ty=Tensor[(320), int8] */;
  %1162 = reshape(%1159, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1163 = @func_15330(%1160, %1161, %1162) /* ty=(Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */;
  %1164 = cast(meta[relay.Constant][88] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1165 = reshape(%1164, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %1166 = @func_10234(%1165) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %1167 = %1166.0;
  %1168 = cast(meta[relay.Constant][88] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1170 = cast(%1167, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1172 = @func_21052() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1173 = %1156.1;
  %1174 = %1163.2;
  %1175 = multiply(%1170, %1171) /* ty=Tensor[(2, 2, 14), float32] */;
  %1176 = %1172.0;
  (%1173, %1174, meta[relay.Constant][86] /* ty=int8 */, meta[relay.Constant][87] /* ty=Tensor[(320), int8] */, %var_21081, %1175, %1176)
}

def @func_17118(%var_17093: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(264), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
  %1177 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
  %1178 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
  %1179 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1180 = cast(%var_17093, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1181 = reshape(%1179, newshape=[]) /* ty=uint8 */;
  %1182 = reshape(%1180, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1183 = @func_11388(%1181, %1182) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
  %1184 = %1177.3;
  %1185 = %1178.1;
  %1186 = %1183.1;
  (%1184, %1185, %1186, meta[relay.Constant][89] /* ty=uint8 */, %var_17093)
}

def @func_19208(%var_19171: Tensor[(1120), float64]) -> (Tensor[(15), float32], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], bool, Tensor[(10), uint16], Tensor[(10, 4), uint16], bool, Tensor[(11, 2, 12), float64], Tensor[(1, 90), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %1187 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %1188 = cast(meta[relay.Constant][90] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %1189 = reshape(%1188, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %1190 = @func_3969(%1189) /* ty=(Tensor[(14, 9, 5), float64],) */;
  %1191 = cast(%var_19171, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %1192 = reshape(%1191, newshape=[1120]) /* ty=Tensor[(1120), float64] */;
  %1193 = @func_11852(%1192) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) */;
  %1194 = cast(meta[relay.Constant][91] /* ty=Tensor[(10), uint16] */, dtype="uint16") /* ty=Tensor[(10), uint16] */;
  %1195 = cast(meta[relay.Constant][92] /* ty=Tensor[(10, 4), uint16] */, dtype="uint16") /* ty=Tensor[(10, 4), uint16] */;
  %1196 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1197 = reshape(%1194, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), uint16] */;
  %1198 = reshape(%1195, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), uint16] */;
  %1199 = reshape(%1196, newshape=[]) /* ty=bool */;
  %1200 = @func_15475(%1197, %1198, %1199) /* ty=(Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) */;
  %1201 = cast(meta[relay.Constant][93] /* ty=Tensor[(1, 90), bool] */, dtype="bool") /* ty=Tensor[(1, 90), bool] */;
  %1202 = reshape(%1201, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %1203 = @func_18447(%1202) /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */;
  %1204 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1205 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1206 = %1187.0;
  %1207 = %1190.0;
  %1208 = %1193.1;
  %1209 = %1200.2;
  %1210 = %1203.1;
  %1211 = %1204.0;
  %1212 = %1205.0;
  (%1206, %1207, meta[relay.Constant][90] /* ty=Tensor[(630), float64] */, %1208, %var_19171, %1209, meta[relay.Constant][91] /* ty=Tensor[(10), uint16] */, meta[relay.Constant][92] /* ty=Tensor[(10, 4), uint16] */, True /* ty=bool */, %1210, meta[relay.Constant][93] /* ty=Tensor[(1, 90), bool] */, %1211, %1212)
}

def @func_14968() -> (Tensor[(15), float32],) {
  %1213 = @func_13821() /* ty=Tensor[(15), float32] */;
  (%1213,)
}

def @func_13651() -> (Tensor[(11, 2, 12), float64],) {
  %1214 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1215 = %1214.0;
  (%1215,)
}

def @func_21052() -> (Tensor[(11, 2, 12), float64],) {
  %1216 = @func_19593() /* ty=Tensor[(11, 2, 12), float64] */;
  (%1216,)
}

def @func_17029() -> Tensor[(15), float32] {
  %1217 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1217.1
}

def @func_15475(%var_15462: Tensor[(10, 1, 1), uint16], %var_15463: Tensor[(10, 1, 4), uint16], %var_15472: bool) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) {
  %1218 = cast(%var_15462, dtype="bool") /* ty=Tensor[(10, 1, 1), bool] */;
  %1219 = cast(%var_15463, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
  %1220 = cast(%var_15472, dtype="bool") /* ty=bool */;
  %1221 = reshape(%1220, newshape=[]) /* ty=bool */;
  %1222 = @func_10153(%1221) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1223 = greater(%1218, %1219) /* ty=Tensor[(10, 1, 4), bool] */;
  %1224 = %1222.0;
  (%1223, %1224, %var_15472)
}

def @func_13981() -> Tensor[(15), float32] {
  @func_12426() /* ty=Tensor[(15), float32] */
}

def @func_15873() -> (Tensor[(11, 2, 12), float64],) {
  %1225 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
  (%1225,)
}

def @func_17427() -> Tensor[(324, 2), uint16] {
  %1226 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %1226.1
}

def @func_12856() -> (Tensor[(15), float32],) {
  %1227 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1228 = %1227.2;
  (%1228,)
}

def @func_11483(%var_11433: Tensor[(2, 28), float32], %var_11436: uint8, %var_11452: Tensor[(1650), int8], %var_11453: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %1229 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1230 = cast(%var_11433, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %1231 = reshape(%1230, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %1232 = @func_10234(%1231) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %1233 = cast(%var_11436, dtype="uint8") /* ty=uint8 */;
  %1234 = cast(meta[relay.Constant][94] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1235 = reshape(%1233, newshape=[]) /* ty=uint8 */;
  %1236 = reshape(%1234, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %1237 = @func_1981(%1235, %1236) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %1238 = cast(%var_11452, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1239 = cast(%var_11453, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1240 = reshape(%1238, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %1241 = reshape(%1239, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %1242 = @func_11118(%1240, %1241) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) */;
  %1243 = cast(%var_11436, dtype="bool") /* ty=bool */;
  %1244 = reshape(%1243, newshape=[]) /* ty=bool */;
  %1245 = @func_10153(%1244) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1246 = %1245.2;
  %1247 = cast(%1246, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1248 = cast(meta[relay.Constant][94] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1249 = reshape(%1247, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %1250 = reshape(%1248, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1251 = @func_3360(%1249, %1250) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1252 = %1229.0;
  %1253 = %1232.0;
  %1254 = %1237.1;
  %1255 = %1242.4;
  %1256 = %1251.4;
  (%1252, %1253, %var_11433, %1254, %var_11436, meta[relay.Constant][94] /* ty=Tensor[(12), uint8] */, %1255, %var_11452, %var_11453, %1246, %1256)
}

def @func_7892(%var_7845: Tensor[(5, 15, 11), float64], %var_7854: Tensor[(90), bool], %var_7855: Tensor[(1, 648), uint64], %var_7886: Tensor[(182, 2), float64], %var_7890: Tensor[(105), float64]) -> (Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) {
  %1257 = cast(%var_7845, dtype="float64") /* ty=Tensor[(5, 15, 11), float64] */;
  %1258 = cast(%var_7854, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1259 = cast(%var_7854, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1260 = cast(%var_7855, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %1261 = reshape(%1258, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1262 = reshape(%1259, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1263 = reshape(%1260, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %1264 = @func_1390(%1261, %1262, %1263) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %1265 = cast(meta[relay.Constant][95] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1266 = reshape(%1265, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %1267 = @func_3480(%1266) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
  %1268 = cast(%var_7886, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %1269 = reshape(%1268, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %1270 = cast(%var_7890, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1271 = reshape(%1270, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), float64] */;
  %1272 = cosh(%1257) /* ty=Tensor[(5, 15, 11), float64] */;
  %1273 = %1264.3;
  %1274 = %1267.1;
  %1275 = @func_6382(%1269) /* ty=Tensor[(4, 13, 7), float64] */;
  %1276 = @func_5104(%1271) /* ty=Tensor[(7, 15, 1), float64] */;
  (%1272, %1273, %var_7854, %var_7855, %1274, meta[relay.Constant][95] /* ty=Tensor[(234), float64] */, %1275, %var_7886, %1276, %var_7890)
}

def @func_16433() -> (Tensor[(15), float32],) {
  %1277 = @func_15810() /* ty=Tensor[(15), float32] */;
  (%1277,)
}

def @func_16518() -> (Tensor[(11, 2, 12), float64],) {
  %1278 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1279 = %1278.0;
  (%1279,)
}

def @func_20611() -> Tensor[(15), float32] {
  @func_13981() /* ty=Tensor[(15), float32] */
}

def @func_5939(%var_5932: Tensor[(13, 3, 7), float32]) -> Tensor[(13, 3, 7), float32] {
  %1280 = cast(%var_5932, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
  cos(%1280) /* ty=Tensor[(13, 3, 7), float32] */
}

def @func_16833() -> (Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) {
  %1281 = @func_14795() /* ty=(Tensor[(15), float32],) */;
  %1282 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %1283 = @func_16433() /* ty=(Tensor[(15), float32],) */;
  %1284 = cast(meta[relay.Constant][96] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1285 = reshape(%1284, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
  %1286 = @func_5428(%1285) /* ty=(Tensor[(7, 12, 5), bool],) */;
  %1287 = @func_12426() /* ty=Tensor[(15), float32] */;
  %1288 = %1281.0;
  %1289 = %1282.0;
  %1290 = %1283.0;
  %1291 = %1286.0;
  (%1287, %1288, %1289, %1290, %1291, meta[relay.Constant][96] /* ty=Tensor[(420), uint32] */)
}

def @func_11069() -> (Tensor[(15), float32],) {
  %1292 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1293 = %1292.2;
  (%1293,)
}

def @func_20427() -> (Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) {
  %1294 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1295 = %1294.0;
  %1296 = cast(%1295, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %1297 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1298 = sqrt(%1296) /* ty=Tensor[(11, 2, 12), float32] */;
  %1299 = %1297.0;
  (%1298, %1299)
}

def @func_20979(%var_20964: Tensor[(15, 14, 6), float32]) -> (Tensor[(364), float64], Tensor[(28), bool], Tensor[(273), float32], Tensor[(15, 14, 6), bool]) {
  %1300 = @func_17634() /* ty=(Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */;
  %1301 = cast(meta[relay.Constant][97] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1302 = reshape(%1301, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %1303 = @func_20811(%1302) /* ty=(Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) */;
  %1304 = @func_20069() /* ty=(Tensor[(15), float32], Tensor[(15, 1, 1), float32]) */;
  %1305 = %1304.1;
  %1306 = cast(%1305, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %1307 = cast(%var_20964, dtype="bool") /* ty=Tensor[(15, 14, 6), bool] */;
  %1308 = %1300.4;
  %1309 = %1303.0;
  %1310 = not_equal(%1306, %1307) /* ty=Tensor[(15, 14, 6), bool] */;
  (%1308, %1309, meta[relay.Constant][97] /* ty=Tensor[(273), float32] */, %1310)
}

def @func_6382(%var_6373: Tensor[(4, 13, 7), float64]) -> Tensor[(4, 13, 7), float64] {
  %1311 = cast(%var_6373, dtype="float64") /* ty=Tensor[(4, 13, 7), float64] */;
  erf(%1311) /* ty=Tensor[(4, 13, 7), float64] */
}

def @func_13631(%var_13628: Tensor[(3, 4), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(3, 4), uint8], Tensor[(28), bool]) {
  %1312 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1313 = cast(%var_13628, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
  %1314 = cast(meta[relay.Constant][98] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1315 = reshape(%1313, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %1316 = reshape(%1314, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %1317 = @func_11758(%1315, %1316) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %1318 = %1312.0;
  %1319 = %1317.3;
  (%1318, %1319, %var_13628, meta[relay.Constant][98] /* ty=Tensor[(28), bool] */)
}

def @func_17556(%var_17498: int64, %var_17499: Tensor[(13, 12, 5), int64]) -> (Tensor[(13, 12, 5), bool], Tensor[(16, 5, 4), int32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15), float32]) {
  %1320 = cast(%var_17498, dtype="bool") /* ty=bool */;
  %1321 = cast(%var_17499, dtype="bool") /* ty=Tensor[(13, 12, 5), bool] */;
  %1322 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1323 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1324 = @func_16550() /* ty=(Tensor[(12), uint8],) */;
  %1325 = less_equal(%1320, %1321) /* ty=Tensor[(13, 12, 5), bool] */;
  %1326 = @func_16110() /* ty=Tensor[(16, 5, 4), int32] */;
  %1327 = %1322.0;
  %1328 = %1323.0;
  %1329 = %1324.0;
  %1330 = @func_17029() /* ty=Tensor[(15), float32] */;
  (%1325, %1326, %1327, %1328, %1329, %1330)
}

def @func_11643() -> (Tensor[(11, 2, 12), float64],) {
  %1331 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1332 = %1331.0;
  %1333 = cast(%1332, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %1334 = log(%1333) /* ty=Tensor[(11, 2, 12), float64] */;
  (%1334,)
}

def @func_18474() -> Tensor[(11, 2, 12), float64] {
  %1335 = @func_17328() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1335.0
}

def @func_9492(%var_9439: Tensor[(11, 1, 9), float64], %var_9463: int16) -> (Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %1336 = cast(%var_9439, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %1337 = cast(meta[relay.Constant][99] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %1338 = reshape(%1337, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
  %1339 = @func_3969(%1338) /* ty=(Tensor[(14, 9, 5), float64],) */;
  %1340 = cast(%var_9463, dtype="int16") /* ty=int16 */;
  %1341 = cast(meta[relay.Constant][100] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %1342 = reshape(%1340, newshape=[]) /* ty=int16 */;
  %1343 = reshape(%1341, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %1344 = @func_5667(%1342, %1343) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %1345 = cast(meta[relay.Constant][101] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1346 = reshape(%1345, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %1347 = cos(%1336) /* ty=Tensor[(11, 1, 9), float64] */;
  %1348 = %1339.0;
  %1349 = %1344.0;
  %1350 = @func_5939(%1346) /* ty=Tensor[(13, 3, 7), float32] */;
  (%1347, %1348, meta[relay.Constant][99] /* ty=Tensor[(630), float64] */, %1349, %var_9463, meta[relay.Constant][100] /* ty=Tensor[(50), int16] */, %1350, meta[relay.Constant][101] /* ty=Tensor[(273), float32] */)
}

def @func_17328() -> (Tensor[(11, 2, 12), float64],) {
  %1351 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  (%1351,)
}

def @func_20381() -> (Tensor[(28), bool], Tensor[(12), uint8]) {
  %1352 = @func_20273() /* ty=(Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) */;
  %1353 = @func_18701() /* ty=(Tensor[(12), uint8], Tensor[(15), float32]) */;
  %1354 = %1352.3;
  %1355 = %1353.0;
  (%1354, %1355)
}

def @func_19254() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(770), bool]) {
  %1356 = cast(meta[relay.Constant][102] /* ty=Tensor[(770), bool] */, dtype="bool") /* ty=Tensor[(770), bool] */;
  %1357 = reshape(%1356, newshape=[11, 7, 10]) /* ty=Tensor[(11, 7, 10), bool] */;
  %1358 = @func_14261(%1357) /* ty=(Tensor[(11, 7, 10), bool], Tensor[(15), float32]) */;
  %1359 = @func_15890() /* ty=Tensor[(11, 2, 12), float64] */;
  %1360 = %1358.1;
  (%1359, %1360, meta[relay.Constant][102] /* ty=Tensor[(770), bool] */)
}

def @func_21020(%var_21013: Tensor[(1620), float64], %var_21014: Tensor[(648), uint64], %var_21017: int16) -> (Tensor[(11, 2, 12), float64], Tensor[(3276), float64], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16]) {
  %1361 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1362 = cast(%var_21013, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1363 = cast(%var_21014, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %1364 = cast(%var_21014, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %1365 = reshape(%1362, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1366 = reshape(%1363, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %1367 = reshape(%1364, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %1368 = @func_14216(%1365, %1366, %1367) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
  %1369 = cast(%var_21017, dtype="int16") /* ty=int16 */;
  %1370 = cast(meta[relay.Constant][103] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %1371 = reshape(%1369, newshape=[]) /* ty=int16 */;
  %1372 = reshape(%1370, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %1373 = @func_5667(%1371, %1372) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %1374 = %1361.0;
  %1375 = %1368.3;
  %1376 = %1373.0;
  (%1374, %1375, %var_21013, %var_21014, %1376, %var_21017, meta[relay.Constant][103] /* ty=Tensor[(50), int16] */)
}

def @func_12238() -> (Tensor[(15, 1, 1), float32],) {
  %1377 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1378 = %1377.1;
  %1379 = cast(%1378, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %1380 = rsqrt(%1379) /* ty=Tensor[(15, 1, 1), float32] */;
  (%1380,)
}

def @func_13568(%var_13548: Tensor[(15, 9, 12), float64], %var_13558: Tensor[(648), uint64]) -> (Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
  %1381 = cast(%var_13548, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1382 = cast(meta[relay.Constant][104] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1383 = cast(meta[relay.Constant][104] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1384 = cast(%var_13558, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %1385 = reshape(%1382, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1386 = reshape(%1383, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1387 = reshape(%1384, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %1388 = @func_1390(%1385, %1386, %1387) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %1389 = erf(%1381) /* ty=Tensor[(15, 9, 12), float64] */;
  %1390 = %1388.0;
  (%1389, %1390, meta[relay.Constant][104] /* ty=Tensor[(90), bool] */, %var_13558)
}

def @func_5667(%var_5649: int16, %var_5650: Tensor[(5, 1, 10), int16]) -> (Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) {
  %1391 = cast(%var_5649, dtype="int16") /* ty=int16 */;
  %1392 = cast(%var_5650, dtype="int16") /* ty=Tensor[(5, 1, 10), int16] */;
  %1393 = cast(meta[relay.Constant][105] /* ty=Tensor[(1, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 15), float32] */;
  %1394 = reshape(%1393, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %1395 = @func_3516(%1394) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %1396 = bitwise_and(%1391, %1392) /* ty=Tensor[(5, 1, 10), int16] */;
  %1397 = %1395.0;
  (%1396, %1397, meta[relay.Constant][105] /* ty=Tensor[(1, 15), float32] */)
}

def @func_10153(%var_10105: bool) -> (Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %1398 = cast(%var_10105, dtype="bool") /* ty=bool */;
  %1399 = cast(meta[relay.Constant][106] /* ty=Tensor[(13, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %1400 = cast(meta[relay.Constant][107] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1401 = cast(meta[relay.Constant][107] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1402 = cast(meta[relay.Constant][108] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1403 = reshape(%1400, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1404 = reshape(%1401, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1405 = reshape(%1402, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1406 = @func_2022(%1403, %1404, %1405) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %1407 = logical_or(%1398, %1399) /* ty=Tensor[(13, 14, 6), bool] */;
  %1408 = %1406.0;
  (%1407, %1408, meta[relay.Constant][107] /* ty=Tensor[(429), uint64] */, meta[relay.Constant][108] /* ty=Tensor[(12), uint8] */)
}

def @func_12734() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %1409 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1410 = %1409.0;
  %1411 = @func_12426() /* ty=Tensor[(15), float32] */;
  (%1410, %1411)
}

def @func_20852() -> Tensor[(15), float32] {
  %1412 = @func_13957() /* ty=(Tensor[(15), float32],) */;
  %1412.0
}

def @func_16007() -> (Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) {
  %1413 = cast(meta[relay.Constant][109] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1414 = cast(meta[relay.Constant][110] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1415 = reshape(%1413, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %1416 = reshape(%1414, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1417 = @func_3360(%1415, %1416) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1418 = %1417.1;
  %1419 = cast(%1418, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %1420 = @func_13981() /* ty=Tensor[(15), float32] */;
  %1421 = log2(%1419) /* ty=Tensor[(10, 5, 13), float64] */;
  (%1420, meta[relay.Constant][109] /* ty=Tensor[(429), uint64] */, meta[relay.Constant][110] /* ty=Tensor[(12), uint8] */, %1421)
}

def @func_14373() -> (Tensor[(11, 2, 12), float64],) {
  %1422 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1423 = %1422.0;
  (%1423,)
}

def @func_11933(%var_11911: Tensor[(14, 234), float64], %var_11927: Tensor[(14, 234), bool]) -> (Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) {
  %1424 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1425 = cast(meta[relay.Constant][111] /* ty=Tensor[(1, 234), float64] */, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %1426 = reshape(%1425, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %1427 = @func_3480(%1426) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
  %1428 = %1427.1;
  %1429 = cast(%1428, dtype="float64") /* ty=Tensor[(13, 2, 9), float64] */;
  %1430 = reshape(%1429, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %1431 = @func_3480(%1430) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
  %1432 = cast(meta[relay.Constant][111] /* ty=Tensor[(1, 234), float64] */, dtype="bool") /* ty=Tensor[(1, 234), bool] */;
  %1433 = cast(%var_11911, dtype="bool") /* ty=Tensor[(14, 234), bool] */;
  %1434 = not_equal(%1432, %1433) /* ty=Tensor[(14, 234), bool] */;
  %1435 = cast(%var_11927, dtype="uint16") /* ty=Tensor[(14, 234), uint16] */;
  %1436 = shape_of(%1434, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1437 = cast(%1434, dtype="uint16") /* ty=Tensor[(14, 234), uint16] */;
  %1438 = dyn.reshape(%1435, %1436, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1439 = %1424.1;
  %1440 = %1431.1;
  %1441 = bitwise_and(%1437, %1438) /* ty=Tensor[(14, 234), uint16] */;
  (%1439, %1428, %1440, %1441)
}

def @func_20503() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %1442 = @func_20427() /* ty=(Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) */;
  %1443 = @func_18833() /* ty=Tensor[(15), float32] */;
  %1444 = %1442.1;
  (%1443, %1444)
}

def @func_20811(%var_20764: Tensor[(1, 273), float32]) -> (Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) {
  %1445 = @func_20381() /* ty=(Tensor[(28), bool], Tensor[(12), uint8]) */;
  %1446 = cast(%var_20764, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %1447 = reshape(%1446, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %1448 = @func_11513(%1447) /* ty=(Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %1449 = cast(%var_20764, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %1450 = cos(%1449) /* ty=Tensor[(1, 273), float32] */;
  %1451 = cast(%1450, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %1452 = %1445.0;
  %1453 = %1448.0;
  %1454 = sigmoid(%1451) /* ty=Tensor[(1, 273), float64] */;
  (%1452, %1453, %1454)
}

def @func_1232(%var_1221: Tensor[(9, 8, 9), uint64]) -> Tensor[(9, 8, 9), bool] {
  %1455 = cast(meta[relay.Constant][112] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="bool") /* ty=Tensor[(9, 8, 9), bool] */;
  %1456 = shape_of(%var_1221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1457 = cast(%var_1221, dtype="bool") /* ty=Tensor[(9, 8, 9), bool] */;
  %1458 = dyn.reshape(%1455, %1456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1457, %1458) /* ty=Tensor[(9, 8, 9), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_19813() -> (Tensor[(7, 12, 5), bool],) {
  @func_19811() /* ty=(Tensor[(7, 12, 5), bool],) */
}

def @func_12211(%var_12210: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
  %8 = fn (%var_12205: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
    %0 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1 = cast(%var_12205, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %3 = reshape(%1, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
    %4 = reshape(%2, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
    %5 = @func_11758(%3, %4) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
    %6 = %0.0;
    %7 = %5.3;
    (%6, %7, %var_12205, meta[relay.Constant][0] /* ty=Tensor[(28), bool] */)
  };
  %8(%var_12210) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */
}

def @func_15297() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %9 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
  %10 = @func_13981() /* ty=Tensor[(15), float32] */;
  (%9, %10)
}

def @func_15330(%var_15320: int8, %var_15321: Tensor[(320), int8], %var_15327: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
  %11 = cast(%var_15320, dtype="int8") /* ty=int8 */;
  %12 = cast(%var_15321, dtype="int8") /* ty=Tensor[(320), int8] */;
  %13 = reshape(%11, newshape=[]) /* ty=int8 */;
  %14 = reshape(%12, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %15 = @func_12076(%13, %14) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %16 = cast(%var_15327, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %18 = reshape(%16, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %19 = reshape(%17, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %20 = @func_11758(%18, %19) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %21 = @func_14273() /* ty=Tensor[(15), float32] */;
  %22 = %15.0;
  %23 = %20.0;
  (%21, %22, %var_15320, %var_15321, %23, %var_15327, meta[relay.Constant][1] /* ty=Tensor[(28), bool] */)
}

def @func_21234() -> Tensor[(7, 12, 5), bool] {
  %25 = fn () -> Tensor[(7, 12, 5), bool] {
    %24 = @func_19811() /* ty=(Tensor[(7, 12, 5), bool],) */;
    %24.0
  };
  %25() /* ty=Tensor[(7, 12, 5), bool] */
}

def @func_11264(%var_11215: Tensor[(90), bool], %var_11251: Tensor[(1, 28), bool]) -> (Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) {
  %26 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %27 = cast(%var_11215, dtype="bool") /* ty=Tensor[(90), bool] */;
  %28 = cast(%var_11215, dtype="bool") /* ty=Tensor[(90), bool] */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %30 = reshape(%27, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %31 = reshape(%28, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %32 = reshape(%29, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %33 = @func_1390(%30, %31, %32) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %34 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %36 = cast(%var_11251, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
  %37 = reshape(%35, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %38 = reshape(%36, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %39 = @func_11118(%37, %38) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) */;
  %40 = %26.2;
  %41 = %33.4;
  %42 = %34.0;
  %43 = %39.4;
  (%40, %41, %var_11215, meta[relay.Constant][2] /* ty=Tensor[(648), uint64] */, %42, %43, meta[relay.Constant][3] /* ty=Tensor[(1650), int8] */, %var_11251)
}

def @func_17893() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  @func_17891() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */
}

def @func_12558(%var_12555: Tensor[(1, 28), bool], %var_12556: int16, %var_12557: Tensor[(5, 28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) {
  %75 = fn (%var_12493: Tensor[(1, 28), bool], %var_12510: int16, %var_12518: Tensor[(5, 28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) {
    %44 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %45 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %46 = cast(%var_12493, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
    %47 = reshape(%46, newshape=[28]) /* ty=Tensor[(28), bool] */;
    %48 = @func_12336(%47) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) */;
    %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 99), float64] */, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
    %50 = cast(%var_12510, dtype="int16") /* ty=int16 */;
    %51 = reshape(%49, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %52 = reshape(%50, newshape=[]) /* ty=int16 */;
    %53 = @func_9492(%51, %52) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
    %54 = @func_12238() /* ty=(Tensor[(15, 1, 1), float32],) */;
    %55 = %54.0;
    %56 = cast(%55, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
    %57 = cast(%var_12510, dtype="bool") /* ty=bool */;
    %58 = cast(%var_12493, dtype="int16") /* ty=Tensor[(1, 28), int16] */;
    %59 = cast(%var_12518, dtype="int16") /* ty=Tensor[(5, 28), int16] */;
    %60 = bitwise_and(%58, %59) /* ty=Tensor[(5, 28), int16] */;
    %61 = cast(%60, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
    %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 99), float64] */, dtype="float64") /* ty=Tensor[(1, 99), float64] */;
    %63 = cast(%var_12510, dtype="int16") /* ty=int16 */;
    %64 = reshape(%62, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %65 = reshape(%63, newshape=[]) /* ty=int16 */;
    %66 = @func_9492(%64, %65) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
    %67 = %44.0;
    %68 = %45.0;
    %69 = %48.2;
    %70 = %53.6;
    %71 = less_equal(%56, %57) /* ty=Tensor[(15, 1, 1), bool] */;
    %72 = exp(%61) /* ty=Tensor[(5, 28), float32] */;
    %73 = %66.2;
    %74 = @func_12426() /* ty=Tensor[(15), float32] */;
    (%67, %68, %69, %70, meta[relay.Constant][4] /* ty=Tensor[(1, 99), float64] */, %71, %72, %73, %74)
  };
  %75(%var_12555, %var_12556, %var_12557) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */
}

def @func_14848(%var_14847: Tensor[(5, 10), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) {
  %85 = fn (%var_14839: Tensor[(5, 10), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) {
    %76 = @func_13957() /* ty=(Tensor[(15), float32],) */;
    %77 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %78 = cast(%var_14839, dtype="int16") /* ty=Tensor[(5, 10), int16] */;
    %79 = reshape(%77, newshape=[]) /* ty=int16 */;
    %80 = reshape(%78, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %81 = @func_5667(%79, %80) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
    %82 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
    %83 = %76.0;
    %84 = %81.1;
    (%82, %83, %84, meta[relay.Constant][5] /* ty=int16 */, %var_14839)
  };
  %85(%var_14847) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */
}

def @func_15071() -> (int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) {
  @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */
}

def @func_6385(%var_6383: Tensor[(4, 13, 7), float64]) -> Tensor[(4, 13, 7), float64] {
  @func_6382(%var_6383) /* ty=Tensor[(4, 13, 7), float64] */
}

def @func_19366(%var_19364: Tensor[(56), float32], %var_19365: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(28), bool], Tensor[(56), float32], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], Tensor[(28), bool], Tensor[(1650), int8]) {
  %102 = fn (%var_19302: Tensor[(56), float32], %var_19321: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(28), bool], Tensor[(56), float32], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], Tensor[(28), bool], Tensor[(1650), int8]) {
    %86 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %88 = cast(%var_19302, dtype="float32") /* ty=Tensor[(56), float32] */;
    %89 = reshape(%87, newshape=[28]) /* ty=Tensor[(28), bool] */;
    %90 = reshape(%88, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %91 = @func_15762(%89, %90) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
    %92 = cast(%var_19321, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %93 = reshape(%92, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
    %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %95 = reshape(%94, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
    %96 = @func_17019(%95) /* ty=(Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) */;
    %97 = %86.0;
    %98 = @func_13821() /* ty=Tensor[(15), float32] */;
    %99 = %91.0;
    %100 = @func_8434(%93) /* ty=Tensor[(8, 10, 14), float64] */;
    %101 = %96.1;
    (%97, %98, %99, meta[relay.Constant][6] /* ty=Tensor[(28), bool] */, %var_19302, %100, %var_19321, %101, meta[relay.Constant][7] /* ty=Tensor[(1650), int8] */)
  };
  %102(%var_19364, %var_19365) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(28), bool], Tensor[(56), float32], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], Tensor[(28), bool], Tensor[(1650), int8]) */
}

def @func_1694(%var_1693: Tensor[(6, 11, 4), float32]) -> (Tensor[(6, 11, 4), float32],) {
  %105 = fn (%var_1687: Tensor[(6, 11, 4), float32]) -> (Tensor[(6, 11, 4), float32],) {
    %103 = cast(%var_1687, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
    %104 = acosh(%103) /* ty=Tensor[(6, 11, 4), float32] */;
    (%104,)
  };
  %105(%var_1693) /* ty=(Tensor[(6, 11, 4), float32],) */
}

def @func_16550() -> (Tensor[(12), uint8],) {
  %106 = @func_15853() /* ty=(Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) */;
  %107 = %106.1;
  (%107,)
}

def @func_20979(%var_20964: Tensor[(15, 14, 6), float32]) -> (Tensor[(364), float64], Tensor[(28), bool], Tensor[(273), float32], Tensor[(15, 14, 6), bool]) {
  %108 = @func_17634() /* ty=(Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */;
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %110 = reshape(%109, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %111 = @func_20811(%110) /* ty=(Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) */;
  %112 = @func_20069() /* ty=(Tensor[(15), float32], Tensor[(15, 1, 1), float32]) */;
  %113 = %112.1;
  %114 = cast(%113, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %115 = cast(%var_20964, dtype="bool") /* ty=Tensor[(15, 14, 6), bool] */;
  %116 = %108.4;
  %117 = %111.0;
  %118 = not_equal(%114, %115) /* ty=Tensor[(15, 14, 6), bool] */;
  (%116, %117, meta[relay.Constant][8] /* ty=Tensor[(273), float32] */, %118)
}

def @func_20008() -> Tensor[(11, 2, 12), float64] {
  %120 = fn () -> Tensor[(11, 2, 12), float64] {
    %119 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
    %119.0
  };
  %120() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_21020(%var_21013: Tensor[(1620), float64], %var_21014: Tensor[(648), uint64], %var_21017: int16) -> (Tensor[(11, 2, 12), float64], Tensor[(3276), float64], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16]) {
  %121 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %122 = cast(%var_21013, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %123 = cast(%var_21014, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %124 = cast(%var_21014, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %125 = reshape(%122, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %126 = reshape(%123, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %127 = reshape(%124, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %128 = @func_14216(%125, %126, %127) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
  %129 = cast(%var_21017, dtype="int16") /* ty=int16 */;
  %130 = cast(meta[relay.Constant][9] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %131 = reshape(%129, newshape=[]) /* ty=int16 */;
  %132 = reshape(%130, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %133 = @func_5667(%131, %132) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %134 = %121.0;
  %135 = %128.3;
  %136 = %133.0;
  (%134, %135, %var_21013, %var_21014, %136, %var_21017, meta[relay.Constant][9] /* ty=Tensor[(50), int16] */)
}

def @func_16112() -> Tensor[(16, 5, 4), int32] {
  @func_16110() /* ty=Tensor[(16, 5, 4), int32] */
}

def @func_15853() -> (Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) {
  %137 = @func_15485() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %138 = %137.0;
  %139 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %142 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%138, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %146 = logical_and(%143, %144) /* ty=Tensor[(11, 2, 12), bool] */;
  %147 = %145.3;
  (%146, %147)
}

def @func_8132(%var_8130: Tensor[(7, 2, 2), bool], %var_8131: Tensor[(15), float32]) -> (Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) {
  %161 = fn (%var_8107: Tensor[(7, 2, 2), bool], %var_8120: Tensor[(15), float32]) -> (Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) {
    %148 = cast(%var_8107, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
    %149 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(7, 2, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %152 = cast(%var_8120, dtype="float32") /* ty=Tensor[(15), float32] */;
    %153 = reshape(%152, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
    %154 = @func_3516(%153) /* ty=(Tensor[(15, 1, 1), float32],) */;
    %155 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 2, 2), bool] */, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
    %156 = cos(%155) /* ty=Tensor[(7, 2, 2), float32] */;
    %157 = cast(%156, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
    %158 = logical_or(%150, %151) /* ty=Tensor[(7, 2, 2), bool] */;
    %159 = %154.0;
    %160 = acosh(%157) /* ty=Tensor[(7, 2, 2), float64] */;
    (%158, %159, %var_8120, %160)
  };
  %161(%var_8130, %var_8131) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */
}

def @func_11268(%var_11266: Tensor[(90), bool], %var_11267: Tensor[(1, 28), bool]) -> (Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) {
  @func_11264(%var_11266, %var_11267) /* ty=(Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) */
}

def @func_14773() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) {
  @func_14771() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) */
}

def @func_19594() -> Tensor[(11, 2, 12), float64] {
  %163 = fn () -> Tensor[(11, 2, 12), float64] {
    %162 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %162.0
  };
  %163() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_3519(%var_3517: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  @func_3516(%var_3517) /* ty=(Tensor[(15, 1, 1), float32],) */
}

def @func_12857() -> (Tensor[(15), float32],) {
  %166 = fn () -> (Tensor[(15), float32],) {
    %164 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %165 = %164.2;
    (%165,)
  };
  %166() /* ty=(Tensor[(15), float32],) */
}

def @func_12038(%var_12025: Tensor[(825), float64], %var_12029: Tensor[(105), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) {
  %167 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %169 = cast(meta[relay.Constant][11] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %170 = reshape(%168, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %171 = reshape(%169, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %172 = @func_6070(%170, %171) /* ty=Tensor[(15, 11, 10), int8] */;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(15, 11, 10), float64] */;
  %174 = cast(%var_12025, dtype="float64") /* ty=Tensor[(825), float64] */;
  %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 108), uint64] */, dtype="uint64") /* ty=Tensor[(6, 108), uint64] */;
  %177 = cast(meta[relay.Constant][14] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %178 = cast(%var_12029, dtype="float64") /* ty=Tensor[(105), float64] */;
  %179 = reshape(%174, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float64] */;
  %180 = reshape(%175, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %181 = reshape(%176, newshape=[1, 648]) /* ty=Tensor[(1, 648), uint64] */;
  %182 = reshape(%177, newshape=[182, 2]) /* ty=Tensor[(182, 2), float64] */;
  %183 = reshape(%178, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %184 = @func_7892(%179, %180, %181, %182, %183) /* ty=(Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) */;
  %185 = %167.0;
  %186 = atan(%173) /* ty=Tensor[(15, 11, 10), float64] */;
  %187 = %184.6;
  (%185, meta[relay.Constant][11] /* ty=Tensor[(1650), int8] */, %186, %187, %var_12025, meta[relay.Constant][12] /* ty=Tensor[(90), bool] */, meta[relay.Constant][13] /* ty=Tensor[(6, 108), uint64] */, meta[relay.Constant][14] /* ty=Tensor[(364), float64] */, %var_12029)
}

def @func_6382(%var_6373: Tensor[(4, 13, 7), float64]) -> Tensor[(4, 13, 7), float64] {
  %188 = cast(%var_6373, dtype="float64") /* ty=Tensor[(4, 13, 7), float64] */;
  erf(%188) /* ty=Tensor[(4, 13, 7), float64] */
}

def @func_21120(%var_21081: Tensor[(1, 12), uint8]) -> (Tensor[(6, 11, 4), float32], int8, int8, Tensor[(320), int8], Tensor[(1, 12), uint8], Tensor[(2, 2, 14), float32], Tensor[(11, 2, 12), float64]) {
  %189 = @func_14771() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) */;
  %190 = cast(meta[relay.Constant][15] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(320), int8] */, dtype="int8") /* ty=Tensor[(320), int8] */;
  %192 = cast(%var_21081, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %193 = reshape(%190, newshape=[]) /* ty=int8 */;
  %194 = reshape(%191, newshape=[320]) /* ty=Tensor[(320), int8] */;
  %195 = reshape(%192, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %196 = @func_15330(%193, %194, %195) /* ty=(Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */;
  %197 = cast(meta[relay.Constant][17] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %198 = reshape(%197, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %199 = @func_10234(%198) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %200 = %199.0;
  %201 = cast(meta[relay.Constant][17] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %205 = @func_21052() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %206 = %189.1;
  %207 = %196.2;
  %208 = multiply(%203, %204) /* ty=Tensor[(2, 2, 14), float32] */;
  %209 = %205.0;
  (%206, %207, meta[relay.Constant][15] /* ty=int8 */, meta[relay.Constant][16] /* ty=Tensor[(320), int8] */, %var_21081, %208, %209)
}

def @func_12336(%var_12321: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) {
  %210 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %211 = cast(meta[relay.Constant][18] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %212 = reshape(%211, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %213 = @func_11513(%212) /* ty=(Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %214 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %216 = reshape(%215, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %217 = @func_10234(%216) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
  %220 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %221 = cast(meta[relay.Constant][21] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %222 = cast(%var_12321, dtype="bool") /* ty=Tensor[(28), bool] */;
  %223 = reshape(%219, newshape=[2, 28]) /* ty=Tensor[(2, 28), float32] */;
  %224 = reshape(%220, newshape=[]) /* ty=uint8 */;
  %225 = reshape(%221, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %226 = reshape(%222, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %227 = @func_11483(%223, %224, %225, %226) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %228 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %229 = reshape(%228, newshape=[]) /* ty=bool */;
  %230 = @func_10153(%229) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %231 = %210.0;
  %232 = %213.0;
  %233 = %214.0;
  %234 = %227.4;
  %235 = %230.0;
  (%231, %232, meta[relay.Constant][18] /* ty=Tensor[(273), float32] */, %233, %218, meta[relay.Constant][19] /* ty=Tensor[(56), float32] */, %234, meta[relay.Constant][20] /* ty=uint8 */, meta[relay.Constant][21] /* ty=Tensor[(1650), int8] */, %var_12321, %235)
}

def @func_17429() -> Tensor[(324, 2), uint16] {
  @func_17427() /* ty=Tensor[(324, 2), uint16] */
}

def @func_20727() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %236 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %237 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %240 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %241 = %236.0;
  %242 = atanh(%239) /* ty=Tensor[(11, 2, 12), float64] */;
  %243 = %240.0;
  (%241, %242, %243)
}

def @func_15479(%var_15476: Tensor[(10, 1, 1), uint16], %var_15477: Tensor[(10, 1, 4), uint16], %var_15478: bool) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) {
  %251 = fn (%var_15462: Tensor[(10, 1, 1), uint16], %var_15463: Tensor[(10, 1, 4), uint16], %var_15472: bool) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) {
    %244 = cast(%var_15462, dtype="bool") /* ty=Tensor[(10, 1, 1), bool] */;
    %245 = cast(%var_15463, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
    %246 = cast(%var_15472, dtype="bool") /* ty=bool */;
    %247 = reshape(%246, newshape=[]) /* ty=bool */;
    %248 = @func_10153(%247) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
    %249 = greater(%244, %245) /* ty=Tensor[(10, 1, 4), bool] */;
    %250 = %248.0;
    (%249, %250, %var_15472)
  };
  %251(%var_15476, %var_15477, %var_15478) /* ty=(Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) */
}

def @func_15092(%var_15090: Tensor[(11, 16, 12), float64], %var_15091: Tensor[(11, 16, 12), float64]) -> Tensor[(11, 16, 12), float64] {
  %256 = fn (%var_15079: Tensor[(11, 16, 12), float64], %var_15080: Tensor[(11, 16, 12), float64]) -> Tensor[(11, 16, 12), float64] {
    %252 = cast(%var_15080, dtype="float64") /* ty=Tensor[(11, 16, 12), float64] */;
    %253 = shape_of(%var_15079, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(%var_15079, dtype="float64") /* ty=Tensor[(11, 16, 12), float64] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%254, %255) /* ty=Tensor[(11, 16, 12), float64] */
  };
  %256(%var_15090, %var_15091) /* ty=Tensor[(11, 16, 12), float64] */
}

def @func_13468(%var_13466: Tensor[(56), float32], %var_13467: Tensor[(140), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %277 = fn (%var_13406: Tensor[(56), float32], %var_13437: Tensor[(140), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
    %257 = cast(%var_13406, dtype="float32") /* ty=Tensor[(56), float32] */;
    %258 = reshape(%257, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
    %259 = @func_10234(%258) /* ty=(Tensor[(2, 2, 14), float32],) */;
    %260 = @func_12856() /* ty=(Tensor[(15), float32],) */;
    %261 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %262 = cast(meta[relay.Constant][23] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %263 = cast(%var_13437, dtype="bool") /* ty=Tensor[(140), bool] */;
    %264 = reshape(%261, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
    %265 = reshape(%262, newshape=[]) /* ty=int16 */;
    %266 = reshape(%263, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
    %267 = @func_12554(%264, %265, %266) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
    %268 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %269 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %270 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
    %271 = %259.0;
    %272 = %260.0;
    %273 = %267.5;
    %274 = %268.0;
    %275 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
    %276 = %269.0;
    (%270, %271, %var_13406, %272, %273, meta[relay.Constant][22] /* ty=Tensor[(28), bool] */, meta[relay.Constant][23] /* ty=int16 */, %var_13437, %274, %275, %276)
  };
  %277(%var_13466, %var_13467) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_19647(%var_19645: Tensor[(13, 6, 6), uint16], %var_19646: Tensor[(13, 6, 6), uint16]) -> Tensor[(13, 6, 6), bool] {
  @func_19643(%var_19645, %var_19646) /* ty=Tensor[(13, 6, 6), bool] */
}

def @func_18552(%var_18550: Tensor[(11, 2, 12), float64], %var_18551: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  @func_18548(%var_18550, %var_18551) /* ty=(Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */
}

def @func_18225() -> Tensor[(15), float32] {
  @func_14273() /* ty=Tensor[(15), float32] */
}

def @func_3482(%var_3481: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) {
  %285 = fn (%var_3475: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) {
    %278 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 9), float64] */;
    %279 = cast(%var_3475, dtype="int64") /* ty=Tensor[(13, 2, 9), int64] */;
    %280 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(13, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 2, 9), float64] */, dtype="int64") /* ty=Tensor[(13, 2, 9), int64] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %283 = acos(%278) /* ty=Tensor[(13, 2, 9), float64] */;
    %284 = bitwise_and(%281, %282) /* ty=Tensor[(13, 2, 9), int64] */;
    (%283, %284)
  };
  %285(%var_3481) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */
}

def @func_13913(%var_13909: Tensor[(1, 825), float64], %var_13910: Tensor[(14, 4), float32], %var_13911: Tensor[(35, 4), bool], %var_13912: Tensor[(264), float64]) -> (Tensor[(15), float32], Tensor[(90), bool], Tensor[(1, 825), float64], Tensor[(105), float64], Tensor[(2, 2, 14), float32], Tensor[(14, 4), float32], Tensor[(35, 4), bool], Tensor[(7, 15, 1), float64], Tensor[(99), float64], Tensor[(264), float64], int16, Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(9, 8, 9), bool], Tensor[(648), uint64]) {
  @func_13907(%var_13909, %var_13910, %var_13911, %var_13912) /* ty=(Tensor[(15), float32], Tensor[(90), bool], Tensor[(1, 825), float64], Tensor[(105), float64], Tensor[(2, 2, 14), float32], Tensor[(14, 4), float32], Tensor[(35, 4), bool], Tensor[(7, 15, 1), float64], Tensor[(99), float64], Tensor[(264), float64], int16, Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(9, 8, 9), bool], Tensor[(648), uint64]) */
}

def @func_18029() -> Tensor[(11, 2, 12), float64] {
  @func_18027() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_17891() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %286 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %287 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %288 = %286.0;
  %289 = %287.0;
  %290 = @func_13821() /* ty=Tensor[(15), float32] */;
  (%288, %289, %290)
}

def @func_13983() -> Tensor[(15), float32] {
  @func_13981() /* ty=Tensor[(15), float32] */
}

def @func_18989(%var_18987: int8, %var_18988: Tensor[(15), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(8, 8, 5), int8], Tensor[(7, 2, 2), bool], Tensor[(28), bool], Tensor[(15), float32], Tensor[(15), float32]) {
  %315 = fn (%var_18929: int8, %var_18980: Tensor[(15), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(8, 8, 5), int8], Tensor[(7, 2, 2), bool], Tensor[(28), bool], Tensor[(15), float32], Tensor[(15), float32]) {
    %291 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %292 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %293 = cast(%var_18929, dtype="int8") /* ty=int8 */;
    %294 = cast(meta[relay.Constant][25] /* ty=Tensor[(320), int8] */, dtype="int8") /* ty=Tensor[(320), int8] */;
    %295 = reshape(%293, newshape=[]) /* ty=int8 */;
    %296 = reshape(%294, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
    %297 = @func_12076(%295, %296) /* ty=(Tensor[(8, 8, 5), int8],) */;
    %298 = cast(%var_18929, dtype="int8") /* ty=int8 */;
    %299 = %297.0;
    %300 = cast(%299, dtype="int8") /* ty=Tensor[(8, 8, 5), int8] */;
    %301 = reshape(%298, newshape=[]) /* ty=int8 */;
    %302 = reshape(%300, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
    %303 = @func_12076(%301, %302) /* ty=(Tensor[(8, 8, 5), int8],) */;
    %304 = cast(meta[relay.Constant][26] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %305 = cast(%var_18980, dtype="float32") /* ty=Tensor[(15), float32] */;
    %306 = reshape(%304, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
    %307 = reshape(%305, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %308 = @func_8129(%306, %307) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
    %309 = @func_17816() /* ty=(Tensor[(15), float32], Tensor[(15), float32]) */;
    %310 = %291.0;
    %311 = %292.0;
    %312 = %303.0;
    %313 = %308.0;
    %314 = %309.0;
    (%310, %311, %299, %var_18929, meta[relay.Constant][25] /* ty=Tensor[(320), int8] */, %312, %313, meta[relay.Constant][26] /* ty=Tensor[(28), bool] */, %var_18980, %314)
  };
  %315(%var_18987, %var_18988) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(8, 8, 5), int8], Tensor[(7, 2, 2), bool], Tensor[(28), bool], Tensor[(15), float32], Tensor[(15), float32]) */
}

def @func_13737() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) {
  %316 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %317 = %316.0;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %319 = tan(%318) /* ty=Tensor[(11, 2, 12), float64] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %321 = reshape(%320, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %322 = @func_1692(%321) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %323 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 330), int8] */, dtype="int8") /* ty=Tensor[(5, 330), int8] */;
  %324 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 330), int8] */, dtype="int8") /* ty=Tensor[(5, 330), int8] */;
  %325 = reshape(%323, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %326 = reshape(%324, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %327 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %328 = %322.0;
  %329 = @func_6070(%325, %326) /* ty=Tensor[(15, 11, 10), int8] */;
  %330 = %327.0;
  (%319, %328, %329, meta[relay.Constant][27] /* ty=Tensor[(5, 330), int8] */, %330)
}

def @func_13501(%var_13495: Tensor[(320), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) {
  %331 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %332 = cast(%var_13495, dtype="int8") /* ty=Tensor[(320), int8] */;
  %333 = reshape(%331, newshape=[]) /* ty=int8 */;
  %334 = reshape(%332, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), int8] */;
  %335 = @func_12076(%333, %334) /* ty=(Tensor[(8, 8, 5), int8],) */;
  %336 = @func_12105() /* ty=Tensor[(11, 2, 12), float64] */;
  %337 = %335.0;
  (%336, %337, meta[relay.Constant][28] /* ty=int8 */, %var_13495)
}

def @func_20503() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %338 = @func_20427() /* ty=(Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) */;
  %339 = @func_18833() /* ty=Tensor[(15), float32] */;
  %340 = %338.1;
  (%339, %340)
}

def @func_18476() -> Tensor[(11, 2, 12), float64] {
  @func_18474() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_20813(%var_20812: Tensor[(1, 273), float32]) -> (Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) {
  %351 = fn (%var_20764: Tensor[(1, 273), float32]) -> (Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) {
    %341 = @func_20381() /* ty=(Tensor[(28), bool], Tensor[(12), uint8]) */;
    %342 = cast(%var_20764, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
    %343 = reshape(%342, newshape=[273]) /* ty=Tensor[(273), float32] */;
    %344 = @func_11513(%343) /* ty=(Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
    %345 = cast(%var_20764, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
    %346 = cos(%345) /* ty=Tensor[(1, 273), float32] */;
    %347 = cast(%346, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
    %348 = %341.0;
    %349 = %344.0;
    %350 = sigmoid(%347) /* ty=Tensor[(1, 273), float64] */;
    (%348, %349, %350)
  };
  %351(%var_20812) /* ty=(Tensor[(28), bool], Tensor[(15), float32], Tensor[(1, 273), float64]) */
}

def @func_13981() -> Tensor[(15), float32] {
  @func_12426() /* ty=Tensor[(15), float32] */
}

def @func_11071() -> (Tensor[(15), float32],) {
  @func_11069() /* ty=(Tensor[(15), float32],) */
}

def @func_17560(%var_17558: int64, %var_17559: Tensor[(13, 12, 5), int64]) -> (Tensor[(13, 12, 5), bool], Tensor[(16, 5, 4), int32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15), float32]) {
  @func_17556(%var_17558, %var_17559) /* ty=(Tensor[(13, 12, 5), bool], Tensor[(16, 5, 4), int32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15), float32]) */
}

def @func_2022(%var_1992: Tensor[(3, 13, 11), uint64], %var_1993: Tensor[(3, 13, 11), uint64], %var_2008: Tensor[(12), uint8]) -> (Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) {
  %352 = cast(%var_1993, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %353 = shape_of(%var_1992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%var_1992, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %356 = cast(meta[relay.Constant][29] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %357 = cast(%var_2008, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %358 = reshape(%356, newshape=[]) /* ty=uint8 */;
  %359 = reshape(%357, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %360 = @func_1981(%358, %359) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %361 = bitwise_and(%354, %355) /* ty=Tensor[(3, 13, 11), uint64] */;
  %362 = %360.0;
  (%361, %362, meta[relay.Constant][29] /* ty=uint8 */, %var_2008)
}

def @func_15812() -> Tensor[(15), float32] {
  @func_15810() /* ty=Tensor[(15), float32] */
}

def @func_6230(%var_6228: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32],) {
  @func_6227(%var_6228) /* ty=(Tensor[(9, 7, 14), float32],) */
}

def @func_13111() -> (Tensor[(11, 2, 12), float64],) {
  @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_13907(%var_13852: Tensor[(1, 825), float64], %var_13861: Tensor[(14, 4), float32], %var_13862: Tensor[(35, 4), bool], %var_13889: Tensor[(264), float64]) -> (Tensor[(15), float32], Tensor[(90), bool], Tensor[(1, 825), float64], Tensor[(105), float64], Tensor[(2, 2, 14), float32], Tensor[(14, 4), float32], Tensor[(35, 4), bool], Tensor[(7, 15, 1), float64], Tensor[(99), float64], Tensor[(264), float64], int16, Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(9, 8, 9), bool], Tensor[(648), uint64]) {
  %363 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %364 = cast(%var_13852, dtype="float64") /* ty=Tensor[(1, 825), float64] */;
  %365 = cast(meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %366 = reshape(%364, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %367 = reshape(%365, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %368 = @func_12038(%366, %367) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) */;
  %369 = cast(%var_13861, dtype="float32") /* ty=Tensor[(14, 4), float32] */;
  %370 = cast(%var_13862, dtype="bool") /* ty=Tensor[(35, 4), bool] */;
  %371 = reshape(%369, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %372 = reshape(%370, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %373 = @func_13465(%371, %372) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %374 = cast(meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %375 = reshape(%374, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), float64] */;
  %376 = cast(%var_13889, dtype="float64") /* ty=Tensor[(264), float64] */;
  %377 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %378 = reshape(%376, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %379 = reshape(%377, newshape=[]) /* ty=int16 */;
  %380 = @func_11589(%378, %379) /* ty=(Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) */;
  %381 = cast(%var_13889, dtype="float64") /* ty=Tensor[(264), float64] */;
  %382 = cast(meta[relay.Constant][32] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %383 = reshape(%381, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %384 = reshape(%382, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %385 = @func_11814(%383, %384) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %386 = %368.5;
  %387 = cast(%386, dtype="bool") /* ty=Tensor[(90), bool] */;
  %388 = cast(%386, dtype="bool") /* ty=Tensor[(90), bool] */;
  %389 = cast(meta[relay.Constant][33] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %390 = reshape(%387, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %391 = reshape(%388, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %392 = reshape(%389, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %393 = @func_1390(%390, %391, %392) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %394 = %363.0;
  %395 = %373.1;
  %396 = @func_5104(%375) /* ty=Tensor[(7, 15, 1), float64] */;
  %397 = %380.3;
  %398 = %385.0;
  %399 = %393.4;
  (%394, %386, %var_13852, meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, %395, %var_13861, %var_13862, %396, %397, %var_13889, meta[relay.Constant][31] /* ty=int16 */, %398, meta[relay.Constant][32] /* ty=Tensor[(364), float64] */, %399, meta[relay.Constant][33] /* ty=Tensor[(648), uint64] */)
}

def @func_16894() -> (Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) {
  @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */
}

def @func_17408() -> Tensor[(11, 2, 12), float64] {
  @func_17406() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_16435() -> (Tensor[(15), float32],) {
  @func_16433() /* ty=(Tensor[(15), float32],) */
}

def @func_6336(%var_6334: Tensor[(11, 14, 13), uint16]) -> Tensor[(11, 14, 13), bool] {
  @func_6333(%var_6334) /* ty=Tensor[(11, 14, 13), bool] */
}

def @func_20092() -> (Tensor[(7, 12, 5), bool],) {
  %402 = fn () -> (Tensor[(7, 12, 5), bool],) {
    %400 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
    %401 = %400.4;
    (%401,)
  };
  %402() /* ty=(Tensor[(7, 12, 5), bool],) */
}

def @func_8437(%var_8435: Tensor[(8, 10, 14), float64]) -> Tensor[(8, 10, 14), float64] {
  @func_8434(%var_8435) /* ty=Tensor[(8, 10, 14), float64] */
}

def @func_14970() -> (Tensor[(15), float32],) {
  @func_14968() /* ty=(Tensor[(15), float32],) */
}

def @func_21025(%var_21022: Tensor[(1620), float64], %var_21023: Tensor[(648), uint64], %var_21024: int16) -> (Tensor[(11, 2, 12), float64], Tensor[(3276), float64], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16]) {
  @func_21020(%var_21022, %var_21023, %var_21024) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(3276), float64], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16]) */
}

def @func_11069() -> (Tensor[(15), float32],) {
  %403 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %404 = %403.2;
  (%404,)
}

def @func_15485() -> (Tensor[(11, 2, 12), float64],) {
  %405 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
  %406 = %405.0;
  (%406,)
}

def @func_18173() -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(882), float32], Tensor[(99), float64]) {
  %415 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(882), float32], Tensor[(99), float64]) {
    %407 = @func_17490() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %408 = cast(meta[relay.Constant][34] /* ty=Tensor[(882), float32] */, dtype="float32") /* ty=Tensor[(882), float32] */;
    %409 = reshape(%408, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
    %410 = @func_6227(%409) /* ty=(Tensor[(9, 7, 14), float32],) */;
    %411 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
    %412 = %407.0;
    %413 = %410.0;
    %414 = %411.2;
    (%412, %413, meta[relay.Constant][34] /* ty=Tensor[(882), float32] */, %414)
  };
  %415() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(882), float32], Tensor[(99), float64]) */
}

def @func_18345() -> (Tensor[(11, 2, 12), float64],) {
  @func_18343() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_20273() -> (Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) {
  %416 = cast(meta[relay.Constant][35] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %417 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %418 = reshape(%416, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %419 = reshape(%417, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %420 = @func_11758(%418, %419) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %421 = @func_12426() /* ty=Tensor[(15), float32] */;
  %422 = %420.1;
  (%421, %422, meta[relay.Constant][35] /* ty=Tensor[(12), uint8] */, meta[relay.Constant][36] /* ty=Tensor[(28), bool] */)
}

def @func_15299() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  @func_15297() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */
}

def @func_15335(%var_15332: int8, %var_15333: Tensor[(320), int8], %var_15334: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) {
  @func_15330(%var_15332, %var_15333, %var_15334) /* ty=(Tensor[(15), float32], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8], Tensor[(3, 13, 11), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */
}

def @func_14771() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) {
  %423 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %424 = %423.1;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %426 = reshape(%425, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %427 = @func_1692(%426) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %428 = %427.0;
  (%424, %428)
}

def @func_20543() -> (Tensor[(11, 2, 12), float64],) {
  @func_20541() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_14273() -> Tensor[(15), float32] {
  @func_13981() /* ty=Tensor[(15), float32] */
}

def @func_8692(%var_8678: Tensor[(11, 15, 4), float32]) -> Tensor[(11, 15, 4), float32] {
  %429 = cast(%var_8678, dtype="float32") /* ty=Tensor[(11, 15, 4), float32] */;
  asin(%429) /* ty=Tensor[(11, 15, 4), float32] */
}

def @func_15855() -> (Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) {
  @func_15853() /* ty=(Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) */
}

def @func_17427() -> Tensor[(324, 2), uint16] {
  %430 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %430.1
}

def @func_16110() -> Tensor[(16, 5, 4), int32] {
  %431 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  %432 = tan(%431) /* ty=Tensor[(16, 5, 4), float64] */;
  %433 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 5, 4), float64] */, dtype="int32") /* ty=Tensor[(16, 5, 4), int32] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="int32") /* ty=Tensor[(16, 5, 4), int32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%435, %436) /* ty=Tensor[(16, 5, 4), int32] */
}

def @func_14518(%var_14515: Tensor[(56), float32], %var_14516: Tensor[(234), float64], %var_14517: Tensor[(273), float32]) -> (Tensor[(5, 1, 10), int16], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(234), float64], Tensor[(13, 2, 9), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  @func_14513(%var_14515, %var_14516, %var_14517) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(234), float64], Tensor[(13, 2, 9), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */
}

def @func_13089(%var_13070: Tensor[(660), float32], %var_13075: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 15, 4), float32], Tensor[(660), float32], Tensor[(10, 5, 13), uint16], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %437 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %438 = cast(%var_13070, dtype="float32") /* ty=Tensor[(660), float32] */;
  %439 = reshape(%438, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), float32] */;
  %440 = cast(meta[relay.Constant][38] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %441 = cast(%var_13075, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %442 = reshape(%440, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %443 = reshape(%441, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %444 = @func_3360(%442, %443) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %445 = %437.0;
  %446 = @func_8692(%439) /* ty=Tensor[(11, 15, 4), float32] */;
  %447 = %444.1;
  (%445, %446, %var_13070, %447, meta[relay.Constant][38] /* ty=Tensor[(429), uint64] */, %var_13075)
}

def @func_17120(%var_17119: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(264), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
  %458 = fn (%var_17093: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(264), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
    %448 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
    %449 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
    %450 = cast(meta[relay.Constant][39] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %451 = cast(%var_17093, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %452 = reshape(%450, newshape=[]) /* ty=uint8 */;
    %453 = reshape(%451, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %454 = @func_11388(%452, %453) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
    %455 = %448.3;
    %456 = %449.1;
    %457 = %454.1;
    (%455, %456, %457, meta[relay.Constant][39] /* ty=uint8 */, %var_17093)
  };
  %458(%var_17119) /* ty=(Tensor[(15), float32], Tensor[(264), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */
}

def @func_17021(%var_17020: Tensor[(1650), int8]) -> (Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
  %472 = fn (%var_17005: Tensor[(1650), int8]) -> (Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
    %459 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
    %460 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 28), bool] */, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
    %461 = cast(meta[relay.Constant][41] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
    %462 = reshape(%460, newshape=[28]) /* ty=Tensor[(28), bool] */;
    %463 = reshape(%461, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %464 = @func_15762(%462, %463) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
    %465 = cast(%var_17005, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %466 = cast(%var_17005, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %467 = reshape(%465, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
    %468 = reshape(%466, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
    %469 = %459.1;
    %470 = %464.7;
    %471 = @func_6070(%467, %468) /* ty=Tensor[(15, 11, 10), int8] */;
    (%469, %470, meta[relay.Constant][40] /* ty=Tensor[(1, 28), bool] */, meta[relay.Constant][41] /* ty=Tensor[(56), float32] */, %471, %var_17005)
  };
  %472(%var_17020) /* ty=(Tensor[(15), float32], Tensor[(28), bool], Tensor[(1, 28), bool], Tensor[(56), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) */
}

def @func_1394(%var_1391: Tensor[(3, 5, 6), bool], %var_1392: Tensor[(3, 5, 6), bool], %var_1393: Tensor[(648), uint64]) -> (Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) {
  %495 = fn (%var_1303: Tensor[(3, 5, 6), bool], %var_1304: Tensor[(3, 5, 6), bool], %var_1313: Tensor[(648), uint64]) -> (Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) {
    %473 = cast(%var_1313, dtype="uint64") /* ty=Tensor[(648), uint64] */;
    %474 = reshape(%473, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
    %475 = @func_1232(%474) /* ty=Tensor[(9, 8, 9), bool] */;
    %476 = cast(%475, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %477 = reshape(%476, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
    %478 = @func_1232(%477) /* ty=Tensor[(9, 8, 9), bool] */;
    %479 = cast(%478, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %480 = reshape(%479, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
    %481 = @func_1232(%480) /* ty=Tensor[(9, 8, 9), bool] */;
    %482 = cast(%481, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %483 = reshape(%482, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
    %484 = cast(%var_1304, dtype="bool") /* ty=Tensor[(3, 5, 6), bool] */;
    %485 = shape_of(%var_1303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %486 = cast(%var_1303, dtype="bool") /* ty=Tensor[(3, 5, 6), bool] */;
    %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %488 = logical_or(%486, %487) /* ty=Tensor[(3, 5, 6), bool] */;
    %489 = cast(%488, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
    %490 = cast(%478, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %491 = reshape(%490, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
    %492 = @func_1232(%483) /* ty=Tensor[(9, 8, 9), bool] */;
    %493 = atan(%489) /* ty=Tensor[(3, 5, 6), float64] */;
    %494 = @func_1232(%491) /* ty=Tensor[(9, 8, 9), bool] */;
    (%475, %var_1313, %478, %481, %492, %493, %494)
  };
  %495(%var_1391, %var_1392, %var_1393) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */
}

def @func_20198() -> Tensor[(11, 2, 12), float64] {
  @func_20196() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_17492() -> (Tensor[(11, 2, 12), float64],) {
  @func_17490() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_12428() -> Tensor[(15), float32] {
  @func_12426() /* ty=Tensor[(15), float32] */
}

def @func_12735() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %499 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
    %496 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %497 = %496.0;
    %498 = @func_12426() /* ty=Tensor[(15), float32] */;
    (%497, %498)
  };
  %499() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */
}

def @func_13959() -> (Tensor[(15), float32],) {
  @func_13957() /* ty=(Tensor[(15), float32],) */
}

def @func_15577() -> (Tensor[(16, 4, 1), float32],) {
  %500 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 1), float32] */;
  %501 = atanh(%500) /* ty=Tensor[(16, 4, 1), float32] */;
  (%501,)
}

def @func_21123(%var_21121: Tensor[(1, 12), uint8]) -> (Tensor[(6, 11, 4), float32], int8, int8, Tensor[(320), int8], Tensor[(1, 12), uint8], Tensor[(2, 2, 14), float32], Tensor[(11, 2, 12), float64]) {
  @func_21120(%var_21121) /* ty=(Tensor[(6, 11, 4), float32], int8, int8, Tensor[(320), int8], Tensor[(1, 12), uint8], Tensor[(2, 2, 14), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_19372() -> (Tensor[(11, 2, 12), float64],) {
  %503 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %502 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
    (%502,)
  };
  %503() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_20192() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  @func_20190() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_16519() -> (Tensor[(11, 2, 12), float64],) {
  %506 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %504 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %505 = %504.0;
    (%505,)
  };
  %506() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_11122(%var_11120: Tensor[(1650), int8], %var_11121: Tensor[(28), bool]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) {
  @func_11118(%var_11120, %var_11121) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) */
}

def @func_11043() -> (Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
  %507 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %508 = cast(meta[relay.Constant][44] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %509 = reshape(%508, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %510 = @func_3516(%509) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %511 = cosh(%507) /* ty=Tensor[(11, 2, 12), float64] */;
  %512 = %510.0;
  (%511, %512, meta[relay.Constant][44] /* ty=Tensor[(15), float32] */)
}

def @func_1654(%var_1652: bool, %var_1653: Tensor[(2, 11, 11), bool]) -> (Tensor[(2, 11, 11), bool],) {
  %516 = fn (%var_1639: bool, %var_1640: Tensor[(2, 11, 11), bool]) -> (Tensor[(2, 11, 11), bool],) {
    %513 = cast(%var_1639, dtype="bool") /* ty=bool */;
    %514 = cast(%var_1640, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
    %515 = logical_and(%513, %514) /* ty=Tensor[(2, 11, 11), bool] */;
    (%515,)
  };
  %516(%var_1652, %var_1653) /* ty=(Tensor[(2, 11, 11), bool],) */
}

def @func_18834() -> Tensor[(15), float32] {
  %518 = fn () -> Tensor[(15), float32] {
    %517 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
    %517.1
  };
  %518() /* ty=Tensor[(15), float32] */
}

def @func_17669(%var_17667: Tensor[(110, 15), int8]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) {
  @func_17666(%var_17667) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) */
}

def @func_17030() -> Tensor[(15), float32] {
  %520 = fn () -> Tensor[(15), float32] {
    %519 = @func_14024() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
    %519.1
  };
  %520() /* ty=Tensor[(15), float32] */
}

def @func_11852(%var_11847: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) {
  %521 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %522 = cast(%var_11847, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %523 = reshape(%522, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
  %524 = %521.0;
  %525 = @func_8434(%523) /* ty=Tensor[(8, 10, 14), float64] */;
  (%524, %525, %var_11847)
}

def @func_12766() -> (Tensor[(11, 2, 12), float64],) {
  %526 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %527 = %526.0;
  (%527,)
}

def @func_19943(%var_19942: Tensor[(50), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(50), bool], Tensor[(?, 3, 4), float64], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(320, 1), int8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8], uint8) {
  %560 = fn (%var_19864: Tensor[(50), int16]) -> (Tensor[(11, 2, 12), float64], Tensor[(50), bool], Tensor[(?, 3, 4), float64], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(320, 1), int8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8], uint8) {
    %528 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %529 = cast(meta[relay.Constant][45] /* ty=Tensor[(50), int16] */, dtype="bool") /* ty=Tensor[(50), bool] */;
    %530 = shape_of(%var_19864, dtype="int32") /* ty=Tensor[(1), int32] */;
    %531 = cast(%var_19864, dtype="bool") /* ty=Tensor[(50), bool] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?), bool] */;
    %533 = cast(%var_19864, dtype="int16") /* ty=Tensor[(50), int16] */;
    %534 = %528.0;
    %535 = cast(%534, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %536 = cast(meta[relay.Constant][46] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %537 = reshape(%533, newshape=[1, 50]) /* ty=Tensor[(1, 50), int16] */;
    %538 = reshape(%535, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %539 = reshape(%536, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %540 = @func_15153(%537, %538, %539) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) */;
    %541 = %540.9;
    %542 = cast(meta[relay.Constant][46] /* ty=Tensor[(12), uint8] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %544 = cast(%541, dtype="float64") /* ty=Tensor[(1, 3, 4), float64] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %546 = cast(meta[relay.Constant][47] /* ty=Tensor[(320, 1), int8] */, dtype="int8") /* ty=Tensor[(320, 1), int8] */;
    %547 = reshape(%546, newshape=[320]) /* ty=Tensor[(320), int8] */;
    %548 = @func_13501(%547) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) */;
    %549 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %550 = cast(%541, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
    %551 = reshape(%549, newshape=[]) /* ty=uint8 */;
    %552 = reshape(%550, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
    %553 = @func_1981(%551, %552) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
    %554 = less(%531, %532) /* ty=Tensor[(50), bool] */;
    %555 = maximum(%544, %545) /* ty=Tensor[(?, 3, 4), float64] */;
    %556 = @func_12426() /* ty=Tensor[(15), float32] */;
    %557 = %548.0;
    %558 = @func_19593() /* ty=Tensor[(11, 2, 12), float64] */;
    %559 = %553.0;
    (%534, %554, %555, %556, %557, meta[relay.Constant][47] /* ty=Tensor[(320, 1), int8] */, %558, %559, meta[relay.Constant][48] /* ty=uint8 */)
  };
  %560(%var_19942) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(50), bool], Tensor[(?, 3, 4), float64], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(320, 1), int8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8], uint8) */
}

def @func_16834() -> (Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) {
  %572 = fn () -> (Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) {
    %561 = @func_14795() /* ty=(Tensor[(15), float32],) */;
    %562 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
    %563 = @func_16433() /* ty=(Tensor[(15), float32],) */;
    %564 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %565 = reshape(%564, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), uint32] */;
    %566 = @func_5428(%565) /* ty=(Tensor[(7, 12, 5), bool],) */;
    %567 = @func_12426() /* ty=Tensor[(15), float32] */;
    %568 = %561.0;
    %569 = %562.0;
    %570 = %563.0;
    %571 = %566.0;
    (%567, %568, %569, %570, %571, meta[relay.Constant][49] /* ty=Tensor[(420), uint32] */)
  };
  %572() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */
}

def @func_1234(%var_1233: Tensor[(9, 8, 9), uint64]) -> Tensor[(9, 8, 9), bool] {
  %577 = fn (%var_1221: Tensor[(9, 8, 9), uint64]) -> Tensor[(9, 8, 9), bool] {
    %573 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="bool") /* ty=Tensor[(9, 8, 9), bool] */;
    %574 = shape_of(%var_1221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(%var_1221, dtype="bool") /* ty=Tensor[(9, 8, 9), bool] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%575, %576) /* ty=Tensor[(9, 8, 9), bool] */
  };
  %577(%var_1233) /* ty=Tensor[(9, 8, 9), bool] */
}

def @func_2027(%var_2024: Tensor[(3, 13, 11), uint64], %var_2025: Tensor[(3, 13, 11), uint64], %var_2026: Tensor[(12), uint8]) -> (Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) {
  @func_2022(%var_2024, %var_2025, %var_2026) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */
}

def @func_21148() -> Tensor[(12), uint8] {
  %578 = @func_18701() /* ty=(Tensor[(12), uint8], Tensor[(15), float32]) */;
  %578.0
}

def @func_19811() -> (Tensor[(7, 12, 5), bool],) {
  %579 = @func_16833() /* ty=(Tensor[(15), float32], Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(7, 12, 5), bool], Tensor[(420), uint32]) */;
  %580 = %579.4;
  (%580,)
}

def @func_18756(%var_18728: int16, %var_18752: Tensor[(1650), int8]) -> (Tensor[(12), uint8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], int16, Tensor[(140), bool], Tensor[(15, ?, ?), int8], Tensor[(15, 1, 1), float64], Tensor[(273), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
  %581 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %582 = cast(meta[relay.Constant][51] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %583 = cast(%var_18728, dtype="int16") /* ty=int16 */;
  %584 = cast(meta[relay.Constant][52] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %585 = reshape(%582, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %586 = reshape(%583, newshape=[]) /* ty=int16 */;
  %587 = reshape(%584, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %588 = @func_12554(%585, %586, %587) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %589 = cast(meta[relay.Constant][51] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %590 = cast(meta[relay.Constant][53] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %591 = reshape(%589, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %592 = reshape(%590, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %593 = @func_8129(%591, %592) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %594 = %593.1;
  %595 = cast(meta[relay.Constant][53] /* ty=Tensor[(15), float32] */, dtype="int8") /* ty=Tensor[(15), int8] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="int8") /* ty=Tensor[(15, 1, 1), int8] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %599 = cast(%594, dtype="float64") /* ty=Tensor[(15, 1, 1), float64] */;
  %600 = cast(meta[relay.Constant][51] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %601 = cast(%var_18728, dtype="int16") /* ty=int16 */;
  %602 = cast(meta[relay.Constant][52] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %603 = reshape(%600, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %604 = reshape(%601, newshape=[]) /* ty=int16 */;
  %605 = reshape(%602, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %606 = @func_12554(%603, %604, %605) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %607 = cast(%var_18752, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %608 = reshape(%607, newshape=[110, 15]) /* ty=Tensor[(110, 15), int8] */;
  %609 = @func_17666(%608) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) */;
  %610 = %581.3;
  %611 = %588.0;
  %612 = bitwise_or(%597, %598) /* ty=Tensor[(15, ?, ?), int8] */;
  %613 = erf(%599) /* ty=Tensor[(15, 1, 1), float64] */;
  %614 = %606.2;
  %615 = %609.1;
  (%610, meta[relay.Constant][51] /* ty=Tensor[(28), bool] */, %611, %var_18728, meta[relay.Constant][52] /* ty=Tensor[(140), bool] */, %612, %613, %614, %615, %var_18752)
}

def @func_12080(%var_12078: int8, %var_12079: Tensor[(8, 8, 5), int8]) -> (Tensor[(8, 8, 5), int8],) {
  @func_12076(%var_12078, %var_12079) /* ty=(Tensor[(8, 8, 5), int8],) */
}

def @func_14375() -> (Tensor[(11, 2, 12), float64],) {
  @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_17490() -> (Tensor[(11, 2, 12), float64],) {
  %616 = @func_14771() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32]) */;
  %617 = %616.0;
  (%617,)
}

def @func_15153(%var_15105: Tensor[(1, 50), int16], %var_15112: Tensor[(264), float64], %var_15129: Tensor[(12), uint8]) -> (Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) {
  %618 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %619 = cast(%var_15105, dtype="int16") /* ty=Tensor[(1, 50), int16] */;
  %620 = reshape(%619, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %621 = @func_14846(%620) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %622 = %621.3;
  %623 = cast(%var_15112, dtype="float64") /* ty=Tensor[(264), float64] */;
  %624 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %625 = reshape(%623, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %626 = reshape(%624, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %627 = @func_11814(%625, %626) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %628 = %627.1;
  %629 = cast(%622, dtype="int8") /* ty=int8 */;
  %630 = cast(%628, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
  %631 = cast(%var_15129, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %632 = reshape(%631, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %633 = @func_12209(%632) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(12), uint8], Tensor[(28), bool]) */;
  %634 = cast(%var_15105, dtype="int16") /* ty=Tensor[(1, 50), int16] */;
  %635 = reshape(%634, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %636 = @func_14846(%635) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %637 = cast(%622, dtype="uint8") /* ty=uint8 */;
  %638 = cast(%var_15129, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %639 = reshape(%637, newshape=[]) /* ty=uint8 */;
  %640 = reshape(%638, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %641 = @func_1981(%639, %640) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %642 = %618.1;
  %643 = @func_14273() /* ty=Tensor[(15), float32] */;
  %644 = maximum(%629, %630) /* ty=Tensor[(4, 13, 7), int8] */;
  %645 = %633.0;
  %646 = %636.0;
  %647 = %641.0;
  (%642, %643, %var_15105, %var_15112, meta[relay.Constant][54] /* ty=Tensor[(364), float64] */, %644, %645, %var_15129, %646, %647)
}

def @func_13109() -> (Tensor[(11, 2, 12), float64],) {
  %648 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  (%648,)
}

def @func_18343() -> (Tensor[(11, 2, 12), float64],) {
  %649 = @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */;
  %650 = %649.0;
  (%650,)
}

def @func_11370() -> (Tensor[(11, 2, 12), float64],) {
  %653 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %651 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %652 = %651.0;
    (%652,)
  };
  %653() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_20541() -> (Tensor[(11, 2, 12), float64],) {
  %654 = @func_17406() /* ty=Tensor[(11, 2, 12), float64] */;
  (%654,)
}

def @func_19757() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %659 = fn () -> (Tensor[(15), float32], Tensor[(15), float32]) {
    %655 = @func_13291() /* ty=(Tensor[(15), float32],) */;
    %656 = @func_12856() /* ty=(Tensor[(15), float32],) */;
    %657 = %655.0;
    %658 = %656.0;
    (%657, %658)
  };
  %659() /* ty=(Tensor[(15), float32], Tensor[(15), float32]) */
}

def @func_20382() -> (Tensor[(28), bool], Tensor[(12), uint8]) {
  %664 = fn () -> (Tensor[(28), bool], Tensor[(12), uint8]) {
    %660 = @func_20273() /* ty=(Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) */;
    %661 = @func_18701() /* ty=(Tensor[(12), uint8], Tensor[(15), float32]) */;
    %662 = %660.3;
    %663 = %661.0;
    (%662, %663)
  };
  %664() /* ty=(Tensor[(28), bool], Tensor[(12), uint8]) */
}

def @func_15890() -> Tensor[(11, 2, 12), float64] {
  %665 = @func_15873() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %665.0
}

def @func_18474() -> Tensor[(11, 2, 12), float64] {
  %666 = @func_17328() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %666.0
}

def @func_13651() -> (Tensor[(11, 2, 12), float64],) {
  %667 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_15487() -> (Tensor[(11, 2, 12), float64],) {
  @func_15485() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_11855(%var_11853: Tensor[(1120), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) {
  @func_11852(%var_11853) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) */
}

def @func_20982(%var_20980: Tensor[(15, 14, 6), float32]) -> (Tensor[(364), float64], Tensor[(28), bool], Tensor[(273), float32], Tensor[(15, 14, 6), bool]) {
  @func_20979(%var_20980) /* ty=(Tensor[(364), float64], Tensor[(28), bool], Tensor[(273), float32], Tensor[(15, 14, 6), bool]) */
}

def @main(%var_21290: uint8, %var_21291: Tensor[(14, 11, 15), uint8]) -> Tensor[(14, 11, 15), uint8] {
  %669 = cast(%var_21290, dtype="uint8") /* ty=uint8 */;
  %670 = cast(%var_21291, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  maximum(%669, %670) /* ty=Tensor[(14, 11, 15), uint8] */
}

def @func_14796() -> (Tensor[(15), float32],) {
  %673 = fn () -> (Tensor[(15), float32],) {
    %671 = @func_11069() /* ty=(Tensor[(15), float32],) */;
    %672 = %671.0;
    (%672,)
  };
  %673() /* ty=(Tensor[(15), float32],) */
}

def @func_11936(%var_11934: Tensor[(14, 234), float64], %var_11935: Tensor[(14, 234), bool]) -> (Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) {
  %692 = fn (%var_11911: Tensor[(14, 234), float64], %var_11927: Tensor[(14, 234), bool]) -> (Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) {
    %674 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %675 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 234), float64] */, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
    %676 = reshape(%675, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
    %677 = @func_3480(%676) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
    %678 = %677.1;
    %679 = cast(%678, dtype="float64") /* ty=Tensor[(13, 2, 9), float64] */;
    %680 = reshape(%679, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
    %681 = @func_3480(%680) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
    %682 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 234), float64] */, dtype="bool") /* ty=Tensor[(1, 234), bool] */;
    %683 = cast(%var_11911, dtype="bool") /* ty=Tensor[(14, 234), bool] */;
    %684 = not_equal(%682, %683) /* ty=Tensor[(14, 234), bool] */;
    %685 = cast(%var_11927, dtype="uint16") /* ty=Tensor[(14, 234), uint16] */;
    %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(2), int32] */;
    %687 = cast(%684, dtype="uint16") /* ty=Tensor[(14, 234), uint16] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %689 = %674.1;
    %690 = %681.1;
    %691 = bitwise_and(%687, %688) /* ty=Tensor[(14, 234), uint16] */;
    (%689, %678, %690, %691)
  };
  %692(%var_11934, %var_11935) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */
}

def @func_13764() -> (Tensor[(11, 2, 12), float64],) {
  %695 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %693 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %694 = %693.0;
    (%694,)
  };
  %695() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_14221(%var_14218: Tensor[(1620), float64], %var_14219: Tensor[(324, 2), uint64], %var_14220: Tensor[(324, 2), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) {
  @func_14216(%var_14218, %var_14219, %var_14220) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */
}

def @func_13739() -> (Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) {
  @func_13737() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) */
}

def @func_17635() -> (Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %705 = fn () -> (Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
    %696 = @func_15853() /* ty=(Tensor[(11, 2, 12), bool], Tensor[(12), uint8]) */;
    %697 = @func_15485() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %698 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %699 = cast(meta[relay.Constant][56] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %700 = reshape(%699, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %701 = %696.1;
    %702 = %697.0;
    %703 = %698.2;
    %704 = @func_6382(%700) /* ty=Tensor[(4, 13, 7), float64] */;
    (%701, %702, %703, %704, meta[relay.Constant][56] /* ty=Tensor[(364), float64] */)
  };
  %705() /* ty=(Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */
}

def @func_5431(%var_5429: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool],) {
  @func_5428(%var_5429) /* ty=(Tensor[(7, 12, 5), bool],) */
}

def @func_12768() -> (Tensor[(11, 2, 12), float64],) {
  @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_3971(%var_3970: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64],) {
  %708 = fn (%var_3959: Tensor[(14, 9, 5), float64]) -> (Tensor[(14, 9, 5), float64],) {
    %706 = cast(%var_3959, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
    %707 = sin(%706) /* ty=Tensor[(14, 9, 5), float64] */;
    (%707,)
  };
  %708(%var_3970) /* ty=(Tensor[(14, 9, 5), float64],) */
}

def @func_5667(%var_5649: int16, %var_5650: Tensor[(5, 1, 10), int16]) -> (Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) {
  %709 = cast(%var_5649, dtype="int16") /* ty=int16 */;
  %710 = cast(%var_5650, dtype="int16") /* ty=Tensor[(5, 1, 10), int16] */;
  %711 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 15), float32] */;
  %712 = reshape(%711, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %713 = @func_3516(%712) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %714 = bitwise_and(%709, %710) /* ty=Tensor[(5, 1, 10), int16] */;
  %715 = %713.0;
  (%714, %715, meta[relay.Constant][57] /* ty=Tensor[(1, 15), float32] */)
}

def @func_15021() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) {
  @func_15019() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) */
}

def @func_20611() -> Tensor[(15), float32] {
  @func_13981() /* ty=Tensor[(15), float32] */
}

def @func_14628(%var_14625: Tensor[(364), float64], %var_14626: bool, %var_14627: Tensor[(242), bool]) -> (Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(4, 13, 7), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(2, 11, 11), bool], bool, Tensor[(242), bool], Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(56, 20), float64], Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32]) {
  %748 = fn (%var_14537: Tensor[(364), float64], %var_14559: bool, %var_14560: Tensor[(242), bool]) -> (Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(4, 13, 7), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(2, 11, 11), bool], bool, Tensor[(242), bool], Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(56, 20), float64], Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32]) {
    %716 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %717 = %716.0;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %719 = cast(%var_14537, dtype="float64") /* ty=Tensor[(364), float64] */;
    %720 = reshape(%718, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
    %721 = reshape(%719, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
    %722 = @func_11814(%720, %721) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
    %723 = cast(%var_14537, dtype="float64") /* ty=Tensor[(364), float64] */;
    %724 = reshape(%723, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %725 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %726 = @func_11069() /* ty=(Tensor[(15), float32],) */;
    %727 = cast(%var_14559, dtype="bool") /* ty=bool */;
    %728 = cast(%var_14560, dtype="bool") /* ty=Tensor[(242), bool] */;
    %729 = reshape(%727, newshape=[]) /* ty=bool */;
    %730 = reshape(%728, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), bool] */;
    %731 = @func_1651(%729, %730) /* ty=(Tensor[(2, 11, 11), bool],) */;
    %732 = cast(%717, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
    %733 = asin(%732) /* ty=Tensor[(11, 2, 12), float32] */;
    %734 = cast(%733, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %735 = cast(meta[relay.Constant][58] /* ty=Tensor[(56, 20), float64] */, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
    %736 = reshape(%735, newshape=[8, 10, 14]) /* ty=Tensor[(8, 10, 14), float64] */;
    %737 = cast(%733, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %738 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %739 = %722.0;
    %740 = @func_6382(%724) /* ty=Tensor[(4, 13, 7), float64] */;
    %741 = %725.0;
    %742 = %726.0;
    %743 = %731.0;
    %744 = asinh(%734) /* ty=Tensor[(11, 2, 12), float64] */;
    %745 = @func_8434(%736) /* ty=Tensor[(8, 10, 14), float64] */;
    %746 = sinh(%737) /* ty=Tensor[(11, 2, 12), float64] */;
    %747 = %738.1;
    (%739, %var_14537, %740, %741, %742, %743, %var_14559, %var_14560, %744, %745, meta[relay.Constant][58] /* ty=Tensor[(56, 20), float64] */, %746, %747)
  };
  %748(%var_14625, %var_14626, %var_14627) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(364), float64], Tensor[(4, 13, 7), float64], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(2, 11, 11), bool], bool, Tensor[(242), bool], Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(56, 20), float64], Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32]) */
}

def @func_13504(%var_13502: Tensor[(320), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) {
  @func_13501(%var_13502) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 8, 5), int8], int8, Tensor[(320), int8]) */
}

def @func_12636(%var_12635: Tensor[(1, 3276), float64]) -> (Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) {
  %768 = fn (%var_12628: Tensor[(1, 3276), float64]) -> (Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) {
    %749 = cast(meta[relay.Constant][59] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %750 = cast(meta[relay.Constant][60] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %751 = reshape(%749, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %752 = reshape(%750, newshape=[]) /* ty=int16 */;
    %753 = @func_9492(%751, %752) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
    %754 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %755 = cast(meta[relay.Constant][60] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %756 = reshape(%755, newshape=[]) /* ty=bool */;
    %757 = @func_10153(%756) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
    %758 = cast(%var_12628, dtype="float64") /* ty=Tensor[(1, 3276), float64] */;
    %759 = cast(%var_12628, dtype="bool") /* ty=Tensor[(1, 3276), bool] */;
    %760 = reshape(%758, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
    %761 = reshape(%759, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
    %762 = @func_11933(%760, %761) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
    %763 = @func_12426() /* ty=Tensor[(15), float32] */;
    %764 = %753.7;
    %765 = %754.0;
    %766 = %757.3;
    %767 = %762.0;
    (%763, %764, meta[relay.Constant][59] /* ty=Tensor[(99), float64] */, meta[relay.Constant][60] /* ty=int16 */, %765, %766, %767, %var_12628)
  };
  %768(%var_12635) /* ty=(Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) */
}

def @func_17329() -> (Tensor[(11, 2, 12), float64],) {
  %770 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %769 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
    (%769,)
  };
  %770() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_21053() -> (Tensor[(11, 2, 12), float64],) {
  %772 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %771 = @func_19593() /* ty=Tensor[(11, 2, 12), float64] */;
    (%771,)
  };
  %772() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_13572(%var_13570: Tensor[(15, 9, 12), float64], %var_13571: Tensor[(648), uint64]) -> (Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
  @func_13568(%var_13570, %var_13571) /* ty=(Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */
}

def @func_17969(%var_17968: Tensor[(1620), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(648), uint64]) {
  %781 = fn (%var_17954: Tensor[(1620), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(648), uint64]) {
    %773 = @func_13651() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %774 = cast(%var_17954, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %775 = cast(meta[relay.Constant][61] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
    %776 = reshape(%774, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %777 = reshape(%775, newshape=[648]) /* ty=Tensor[(648), uint64] */;
    %778 = @func_14425(%776, %777) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) */;
    %779 = %773.0;
    %780 = %778.1;
    (%779, %780, %var_17954, meta[relay.Constant][61] /* ty=Tensor[(648), uint64] */)
  };
  %781(%var_17968) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(648), uint64]) */
}

def @func_15019() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], uint8, Tensor[(12), uint8]) {
  %782 = cast(meta[relay.Constant][62] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %783 = cast(meta[relay.Constant][63] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %784 = reshape(%782, newshape=[]) /* ty=uint8 */;
  %785 = reshape(%783, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %786 = @func_11388(%784, %785) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
  %787 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  %788 = %786.0;
  (%787, %788, meta[relay.Constant][62] /* ty=uint8 */, meta[relay.Constant][63] /* ty=Tensor[(12), uint8] */)
}

def @func_13631(%var_13628: Tensor[(3, 4), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(3, 4), uint8], Tensor[(28), bool]) {
  %789 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %790 = cast(%var_13628, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
  %791 = cast(meta[relay.Constant][64] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %792 = reshape(%790, newshape=[12, 1]) /* ty=Tensor[(12, 1), uint8] */;
  %793 = reshape(%791, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %794 = @func_11758(%792, %793) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */;
  %795 = %789.0;
  %796 = %794.3;
  (%795, %796, %var_13628, meta[relay.Constant][64] /* ty=Tensor[(28), bool] */)
}

def @func_11761(%var_11759: Tensor[(12, 1), uint8], %var_11760: Tensor[(7, 2, 2), bool]) -> (Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) {
  %838 = fn (%var_11693: Tensor[(12, 1), uint8], %var_11732: Tensor[(7, 2, 2), bool]) -> (Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) {
    %797 = cast(meta[relay.Constant][65] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
    %798 = cast(meta[relay.Constant][65] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
    %799 = cast(%var_11693, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
    %800 = reshape(%797, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
    %801 = reshape(%798, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
    %802 = reshape(%799, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %803 = @func_2022(%800, %801, %802) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
    %804 = cast(meta[relay.Constant][65] /* ty=Tensor[(429, 1), uint64] */, dtype="uint64") /* ty=Tensor[(429, 1), uint64] */;
    %805 = %803.0;
    %806 = cast(%805, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
    %807 = cast(%var_11693, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
    %808 = reshape(%804, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
    %809 = reshape(%806, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
    %810 = reshape(%807, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %811 = @func_2022(%808, %809, %810) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
    %812 = cast(meta[relay.Constant][66] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %813 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %814 = %813.2;
    %815 = cast(%814, dtype="float32") /* ty=Tensor[(15), float32] */;
    %816 = reshape(%812, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
    %817 = reshape(%815, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %818 = @func_8129(%816, %817) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
    %819 = %818.3;
    %820 = cast(meta[relay.Constant][66] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %822 = cast(%819, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %824 = logical_and(%822, %823) /* ty=Tensor[(7, 2, 2), bool] */;
    %825 = cast(%var_11732, dtype="uint64") /* ty=Tensor[(7, 2, 2), uint64] */;
    %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %827 = cast(%824, dtype="uint64") /* ty=Tensor[(7, 2, 2), uint64] */;
    %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %829 = cast(meta[relay.Constant][67] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %830 = reshape(%829, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
    %831 = @func_3969(%830) /* ty=(Tensor[(14, 9, 5), float64],) */;
    %832 = cast(meta[relay.Constant][65] /* ty=Tensor[(429, 1), uint64] */, dtype="bool") /* ty=Tensor[(429, 1), bool] */;
    %833 = cast(%814, dtype="bool") /* ty=Tensor[(15), bool] */;
    %834 = %811.2;
    %835 = bitwise_and(%827, %828) /* ty=Tensor[(7, 2, 2), uint64] */;
    %836 = %831.0;
    %837 = not_equal(%832, %833) /* ty=Tensor[(429, 15), bool] */;
    (%805, %var_11693, %834, %835, %836, meta[relay.Constant][67] /* ty=Tensor[(630), float64] */, %837)
  };
  %838(%var_11759, %var_11760) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(12, 1), uint8], uint8, Tensor[(7, 2, 2), uint64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(429, 15), bool]) */
}

def @func_11817(%var_11815: Tensor[(11, 2, 12), float64], %var_11816: Tensor[(7, 52), float64]) -> (Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) {
  %849 = fn (%var_11798: Tensor[(11, 2, 12), float64], %var_11812: Tensor[(7, 52), float64]) -> (Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) {
    %839 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %840 = %839.0;
    %841 = cast(%var_11798, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
    %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%840, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %845 = cast(%var_11812, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
    %846 = reshape(%845, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %847 = less(%843, %844) /* ty=Tensor[(11, 2, 12), bool] */;
    %848 = @func_6382(%846) /* ty=Tensor[(4, 13, 7), float64] */;
    (%847, %848, %var_11812)
  };
  %849(%var_11815, %var_11816) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */
}

def @func_16433() -> (Tensor[(15), float32],) {
  %850 = @func_15810() /* ty=Tensor[(15), float32] */;
  (%850,)
}

def @func_14216(%var_14165: Tensor[(1620), float64], %var_14166: Tensor[(324, 2), uint64], %var_14185: Tensor[(324, 2), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) {
  %851 = cast(meta[relay.Constant][68] /* ty=Tensor[(3276), float64] */, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %852 = reshape(%851, newshape=[1, 3276]) /* ty=Tensor[(1, 3276), float64] */;
  %853 = @func_12634(%852) /* ty=(Tensor[(15), float32], Tensor[(273), float32], Tensor[(99), float64], int16, Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15, 1, 1), float32], Tensor[(1, 3276), float64]) */;
  %854 = cast(%var_14185, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %855 = shape_of(%var_14166, dtype="int32") /* ty=Tensor[(2), int32] */;
  %856 = cast(%var_14166, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %858 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %859 = cast(meta[relay.Constant][68] /* ty=Tensor[(3276), float64] */, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %860 = cast(meta[relay.Constant][68] /* ty=Tensor[(3276), float64] */, dtype="bool") /* ty=Tensor[(3276), bool] */;
  %861 = reshape(%859, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %862 = reshape(%860, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %863 = @func_11933(%861, %862) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %864 = cast(%var_14165, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %865 = cast(%var_14166, dtype="uint64") /* ty=Tensor[(324, 2), uint64] */;
  %866 = reshape(%864, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float64] */;
  %867 = reshape(%865, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %868 = @func_13568(%866, %867) /* ty=(Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %871 = @func_12426() /* ty=Tensor[(15), float32] */;
  %872 = %853.2;
  %873 = less(%856, %857) /* ty=Tensor[(324, 2), bool] */;
  %874 = %858.0;
  %875 = %863.3;
  %876 = sigmoid(%870) /* ty=Tensor[(15, 9, 12), float64] */;
  (%871, %var_14165, %872, meta[relay.Constant][68] /* ty=Tensor[(3276), float64] */, %873, %874, %875, %876)
}

def @func_5107(%var_5105: Tensor[(7, 15, 1), float64]) -> Tensor[(7, 15, 1), float64] {
  @func_5104(%var_5105) /* ty=Tensor[(7, 15, 1), float64] */
}

def @func_20190() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %877 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %878 = %877.0;
  %879 = @func_12906() /* ty=Tensor[(11, 2, 12), float64] */;
  (%878, %879)
}

def @func_9123(%var_9121: Tensor[(3, 3, 8), bool], %var_9122: Tensor[(3, 3, 8), bool]) -> (Tensor[(3, 3, 8), bool],) {
  @func_9119(%var_9121, %var_9122) /* ty=(Tensor[(3, 3, 8), bool],) */
}

def @func_12130() -> (Tensor[(11, 2, 12), float64],) {
  %881 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %880 = @func_12105() /* ty=Tensor[(11, 2, 12), float64] */;
    (%880,)
  };
  %881() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_5428(%var_5386: Tensor[(7, 12, 5), uint32]) -> (Tensor[(7, 12, 5), bool],) {
  %882 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 12, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %883 = shape_of(%var_5386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%var_5386, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = greater(%884, %885) /* ty=Tensor[(7, 12, 5), bool] */;
  (%886,)
}

def @func_11593(%var_11591: Tensor[(11, 2, 12), float64], %var_11592: int16) -> (Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) {
  @func_11589(%var_11591, %var_11592) /* ty=(Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) */
}

def @func_11483(%var_11433: Tensor[(2, 28), float32], %var_11436: uint8, %var_11452: Tensor[(1650), int8], %var_11453: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %887 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %888 = cast(%var_11433, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %889 = reshape(%888, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %890 = @func_10234(%889) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %891 = cast(%var_11436, dtype="uint8") /* ty=uint8 */;
  %892 = cast(meta[relay.Constant][70] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %893 = reshape(%891, newshape=[]) /* ty=uint8 */;
  %894 = reshape(%892, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
  %895 = @func_1981(%893, %894) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
  %896 = cast(%var_11452, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %897 = cast(%var_11453, dtype="bool") /* ty=Tensor[(28), bool] */;
  %898 = reshape(%896, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %899 = reshape(%897, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %900 = @func_11118(%898, %899) /* ty=(Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) */;
  %901 = cast(%var_11436, dtype="bool") /* ty=bool */;
  %902 = reshape(%901, newshape=[]) /* ty=bool */;
  %903 = @func_10153(%902) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %904 = %903.2;
  %905 = cast(%904, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %906 = cast(meta[relay.Constant][70] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %907 = reshape(%905, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %908 = reshape(%906, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %909 = @func_3360(%907, %908) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %910 = %887.0;
  %911 = %890.0;
  %912 = %895.1;
  %913 = %900.4;
  %914 = %909.4;
  (%910, %911, %var_11433, %912, %var_11436, meta[relay.Constant][70] /* ty=Tensor[(12), uint8] */, %913, %var_11452, %var_11453, %904, %914)
}

def @func_8695(%var_8693: Tensor[(11, 15, 4), float32]) -> Tensor[(11, 15, 4), float32] {
  @func_8692(%var_8693) /* ty=Tensor[(11, 15, 4), float32] */
}

def @func_19210(%var_19209: Tensor[(1120), float64]) -> (Tensor[(15), float32], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], bool, Tensor[(10), uint16], Tensor[(10, 4), uint16], bool, Tensor[(11, 2, 12), float64], Tensor[(1, 90), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %941 = fn (%var_19171: Tensor[(1120), float64]) -> (Tensor[(15), float32], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], bool, Tensor[(10), uint16], Tensor[(10, 4), uint16], bool, Tensor[(11, 2, 12), float64], Tensor[(1, 90), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
    %915 = @func_12856() /* ty=(Tensor[(15), float32],) */;
    %916 = cast(meta[relay.Constant][71] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %917 = reshape(%916, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
    %918 = @func_3969(%917) /* ty=(Tensor[(14, 9, 5), float64],) */;
    %919 = cast(%var_19171, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %920 = reshape(%919, newshape=[1120]) /* ty=Tensor[(1120), float64] */;
    %921 = @func_11852(%920) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64]) */;
    %922 = cast(meta[relay.Constant][72] /* ty=Tensor[(10), uint16] */, dtype="uint16") /* ty=Tensor[(10), uint16] */;
    %923 = cast(meta[relay.Constant][73] /* ty=Tensor[(10, 4), uint16] */, dtype="uint16") /* ty=Tensor[(10, 4), uint16] */;
    %924 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %925 = reshape(%922, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), uint16] */;
    %926 = reshape(%923, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), uint16] */;
    %927 = reshape(%924, newshape=[]) /* ty=bool */;
    %928 = @func_15475(%925, %926, %927) /* ty=(Tensor[(10, 1, 4), bool], Tensor[(13, 14, 6), bool], bool) */;
    %929 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 90), bool] */, dtype="bool") /* ty=Tensor[(1, 90), bool] */;
    %930 = reshape(%929, newshape=[90]) /* ty=Tensor[(90), bool] */;
    %931 = @func_18447(%930) /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */;
    %932 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %933 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %934 = %915.0;
    %935 = %918.0;
    %936 = %921.1;
    %937 = %928.2;
    %938 = %931.1;
    %939 = %932.0;
    %940 = %933.0;
    (%934, %935, meta[relay.Constant][71] /* ty=Tensor[(630), float64] */, %936, %var_19171, %937, meta[relay.Constant][72] /* ty=Tensor[(10), uint16] */, meta[relay.Constant][73] /* ty=Tensor[(10, 4), uint16] */, True /* ty=bool */, %938, meta[relay.Constant][74] /* ty=Tensor[(1, 90), bool] */, %939, %940)
  };
  %941(%var_19209) /* ty=(Tensor[(15), float32], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(8, 10, 14), float64], Tensor[(1120), float64], bool, Tensor[(10), uint16], Tensor[(10, 4), uint16], bool, Tensor[(11, 2, 12), float64], Tensor[(1, 90), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_19255() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(770), bool]) {
  %947 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(770), bool]) {
    %942 = cast(meta[relay.Constant][75] /* ty=Tensor[(770), bool] */, dtype="bool") /* ty=Tensor[(770), bool] */;
    %943 = reshape(%942, newshape=[11, 7, 10]) /* ty=Tensor[(11, 7, 10), bool] */;
    %944 = @func_14261(%943) /* ty=(Tensor[(11, 7, 10), bool], Tensor[(15), float32]) */;
    %945 = @func_15890() /* ty=Tensor[(11, 2, 12), float64] */;
    %946 = %944.1;
    (%945, %946, meta[relay.Constant][75] /* ty=Tensor[(770), bool] */)
  };
  %947() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(770), bool]) */
}

def @func_20070() -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32]) {
  %952 = fn () -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32]) {
    %948 = @func_12856() /* ty=(Tensor[(15), float32],) */;
    %949 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
    %950 = %948.0;
    %951 = %949.0;
    (%950, %951)
  };
  %952() /* ty=(Tensor[(15), float32], Tensor[(15, 1, 1), float32]) */
}

def @func_13344() -> Tensor[(11, 2, 12), float64] {
  %953 = fn () -> Tensor[(11, 2, 12), float64] {
    @func_13169() /* ty=Tensor[(11, 2, 12), float64] */
  };
  %953() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_16892() -> (Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) {
  %954 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %955 = cast(meta[relay.Constant][76] /* ty=Tensor[(324, 2), uint64] */, dtype="uint64") /* ty=Tensor[(324, 2), uint64] */;
  %956 = reshape(%955, newshape=[9, 8, 9]) /* ty=Tensor[(9, 8, 9), uint64] */;
  %957 = @func_1232(%956) /* ty=Tensor[(9, 8, 9), bool] */;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(9, 8, 9), float32] */;
  %959 = shape_of(meta[relay.Constant][76] /* ty=Tensor[(324, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %960 = cast(meta[relay.Constant][76] /* ty=Tensor[(324, 2), uint64] */, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %962 = floor_divide(%960, %961) /* ty=Tensor[(324, 2), float32] */;
  %963 = cast(%957, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
  %964 = acosh(%963) /* ty=Tensor[(9, 8, 9), float64] */;
  %965 = cast(%964, dtype="uint16") /* ty=Tensor[(9, 8, 9), uint16] */;
  %966 = shape_of(%962, dtype="int32") /* ty=Tensor[(2), int32] */;
  %967 = cast(%962, dtype="uint16") /* ty=Tensor[(324, 2), uint16] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %969 = %954.0;
  %970 = minimum(%967, %968) /* ty=Tensor[(324, 2), uint16] */;
  (%969, %970)
}

def @func_18548(%var_18527: Tensor[(11, 2, 12), float64], %var_18540: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %971 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %972 = %971.0;
  %973 = cast(%var_18527, dtype="uint64") /* ty=Tensor[(11, 2, 12), uint64] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="uint64") /* ty=Tensor[(11, 2, 12), uint64] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %977 = cast(%972, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %978 = cast(%var_18540, dtype="float64") /* ty=Tensor[(364), float64] */;
  %979 = reshape(%977, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
  %980 = reshape(%978, newshape=[7, 52]) /* ty=Tensor[(7, 52), float64] */;
  %981 = @func_11814(%979, %980) /* ty=(Tensor[(11, 2, 12), bool], Tensor[(4, 13, 7), float64], Tensor[(7, 52), float64]) */;
  %982 = logical_xor(%975, %976) /* ty=Tensor[(11, 2, 12), uint64] */;
  %983 = %981.1;
  (%982, %983, %var_18540)
}

def @func_18878() -> Tensor[(11, 2, 12), float64] {
  %985 = fn () -> Tensor[(11, 2, 12), float64] {
    %984 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %984.0
  };
  %985() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_14373() -> (Tensor[(11, 2, 12), float64],) {
  %986 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %987 = %986.0;
  (%987,)
}

def @func_19643(%var_19605: Tensor[(13, 6, 6), uint16], %var_19606: Tensor[(13, 6, 6), uint16]) -> Tensor[(13, 6, 6), bool] {
  %988 = cast(%var_19606, dtype="uint16") /* ty=Tensor[(13, 6, 6), uint16] */;
  %989 = shape_of(%var_19605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_19605, dtype="uint16") /* ty=Tensor[(13, 6, 6), uint16] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %992 = minimum(%990, %991) /* ty=Tensor[(13, 6, 6), uint16] */;
  %993 = cast(%992, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %994 = shape_of(%var_19605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_19605, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%995, %996) /* ty=Tensor[(13, 6, 6), bool] */
}

def @func_11644() -> (Tensor[(11, 2, 12), float64],) {
  %1001 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %997 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %998 = %997.0;
    %999 = cast(%998, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %1000 = log(%999) /* ty=Tensor[(11, 2, 12), float64] */;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_7898(%var_7893: Tensor[(5, 15, 11), float64], %var_7894: Tensor[(90), bool], %var_7895: Tensor[(1, 648), uint64], %var_7896: Tensor[(182, 2), float64], %var_7897: Tensor[(105), float64]) -> (Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) {
  %1022 = fn (%var_7845: Tensor[(5, 15, 11), float64], %var_7854: Tensor[(90), bool], %var_7855: Tensor[(1, 648), uint64], %var_7886: Tensor[(182, 2), float64], %var_7890: Tensor[(105), float64]) -> (Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) {
    %1002 = cast(%var_7845, dtype="float64") /* ty=Tensor[(5, 15, 11), float64] */;
    %1003 = cast(%var_7854, dtype="bool") /* ty=Tensor[(90), bool] */;
    %1004 = cast(%var_7854, dtype="bool") /* ty=Tensor[(90), bool] */;
    %1005 = cast(%var_7855, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
    %1006 = reshape(%1003, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
    %1007 = reshape(%1004, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
    %1008 = reshape(%1005, newshape=[648]) /* ty=Tensor[(648), uint64] */;
    %1009 = @func_1390(%1006, %1007, %1008) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
    %1010 = cast(meta[relay.Constant][77] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1011 = reshape(%1010, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
    %1012 = @func_3480(%1011) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
    %1013 = cast(%var_7886, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
    %1014 = reshape(%1013, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %1015 = cast(%var_7890, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1016 = reshape(%1015, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), float64] */;
    %1017 = cosh(%1002) /* ty=Tensor[(5, 15, 11), float64] */;
    %1018 = %1009.3;
    %1019 = %1012.1;
    %1020 = @func_6382(%1014) /* ty=Tensor[(4, 13, 7), float64] */;
    %1021 = @func_5104(%1016) /* ty=Tensor[(7, 15, 1), float64] */;
    (%1017, %1018, %var_7854, %var_7855, %1019, meta[relay.Constant][77] /* ty=Tensor[(234), float64] */, %1020, %var_7886, %1021, %var_7890)
  };
  %1022(%var_7893, %var_7894, %var_7895, %var_7896, %var_7897) /* ty=(Tensor[(5, 15, 11), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(1, 648), uint64], Tensor[(13, 2, 9), int64], Tensor[(234), float64], Tensor[(4, 13, 7), float64], Tensor[(182, 2), float64], Tensor[(7, 15, 1), float64], Tensor[(105), float64]) */
}

def @func_12339(%var_12337: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) {
  @func_12336(%var_12337) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) */
}

def @func_18100(%var_18097: Tensor[(429), uint64], %var_18098: Tensor[(12), uint8], %var_18099: Tensor[(1650), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(10, 5, 13), uint16], Tensor[(12), uint8], Tensor[(15), float32], Tensor[(90), bool], Tensor[(28), bool], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(429), float32]) {
  @func_18095(%var_18097, %var_18098, %var_18099) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(10, 5, 13), uint16], Tensor[(12), uint8], Tensor[(15), float32], Tensor[(90), bool], Tensor[(28), bool], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(429), float32]) */
}

def @func_14513(%var_14480: Tensor[(56), float32], %var_14484: Tensor[(234), float64], %var_14508: Tensor[(273), float32]) -> (Tensor[(5, 1, 10), int16], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(234), float64], Tensor[(13, 2, 9), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %1023 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
  %1024 = cast(%var_14480, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1025 = reshape(%1024, newshape=[2, 2, 14]) /* ty=Tensor[(2, 2, 14), float32] */;
  %1026 = @func_10234(%1025) /* ty=(Tensor[(2, 2, 14), float32],) */;
  %1027 = cast(%var_14484, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1028 = reshape(%1027, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %1029 = @func_3480(%1028) /* ty=(Tensor[(13, 2, 9), float64], Tensor[(13, 2, 9), int64]) */;
  %1030 = %1029.0;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %1032 = cast(%var_14508, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1033 = reshape(%1032, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %1034 = %1023.1;
  %1035 = %1026.0;
  %1036 = sinh(%1031) /* ty=Tensor[(13, 2, 9), float32] */;
  %1037 = @func_5939(%1033) /* ty=Tensor[(13, 3, 7), float32] */;
  (%1034, %1035, %var_14480, %var_14484, %1036, %1037, %var_14508)
}

def @func_11489(%var_11485: Tensor[(2, 28), float32], %var_11486: uint8, %var_11487: Tensor[(1650), int8], %var_11488: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) {
  @func_11483(%var_11485, %var_11486, %var_11487, %var_11488) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) */
}

def @func_5939(%var_5932: Tensor[(13, 3, 7), float32]) -> Tensor[(13, 3, 7), float32] {
  %1038 = cast(%var_5932, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
  cos(%1038) /* ty=Tensor[(13, 3, 7), float32] */
}

def @func_12951() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_6633(%var_6600: Tensor[(7, 10, 10), float32], %var_6601: Tensor[(7, 10, 10), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) {
  %1039 = cast(meta[relay.Constant][78] /* ty=Tensor[(7, 126), float32] */, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %1040 = reshape(%1039, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %1041 = @func_6227(%1040) /* ty=(Tensor[(9, 7, 14), float32],) */;
  %1042 = cast(%var_6601, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %1043 = shape_of(%var_6600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%var_6600, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1046 = subtract(%1044, %1045) /* ty=Tensor[(7, 10, 10), float32] */;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(7, 10, 10), float32] */;
  %1048 = cast(meta[relay.Constant][78] /* ty=Tensor[(7, 126), float32] */, dtype="float64") /* ty=Tensor[(7, 126), float64] */;
  %1049 = %1041.0;
  %1050 = cosh(%1047) /* ty=Tensor[(7, 10, 10), float32] */;
  %1051 = atan(%1048) /* ty=Tensor[(7, 126), float64] */;
  (%1049, %1050, %1051)
}

def @func_10153(%var_10105: bool) -> (Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %1052 = cast(%var_10105, dtype="bool") /* ty=bool */;
  %1053 = cast(meta[relay.Constant][79] /* ty=Tensor[(13, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %1054 = cast(meta[relay.Constant][80] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1055 = cast(meta[relay.Constant][80] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1056 = cast(meta[relay.Constant][81] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1057 = reshape(%1054, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1058 = reshape(%1055, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1059 = reshape(%1056, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1060 = @func_2022(%1057, %1058, %1059) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %1061 = logical_or(%1052, %1053) /* ty=Tensor[(13, 14, 6), bool] */;
  %1062 = %1060.0;
  (%1061, %1062, meta[relay.Constant][80] /* ty=Tensor[(429), uint64] */, meta[relay.Constant][81] /* ty=Tensor[(12), uint8] */)
}

def @func_5104(%var_5100: Tensor[(7, 15, 1), float64]) -> Tensor[(7, 15, 1), float64] {
  %1063 = cast(0.174388f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1064 = cast(%var_5100, dtype="float64") /* ty=Tensor[(7, 15, 1), float64] */;
  minimum(%1063, %1064) /* ty=Tensor[(7, 15, 1), float64] */
}

def @func_1984(%var_1982: uint8, %var_1983: Tensor[(1, 3, 4), uint8]) -> (Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) {
  %1071 = fn (%var_1939: uint8, %var_1940: Tensor[(1, 3, 4), uint8]) -> (Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) {
    %1065 = cast(%var_1939, dtype="uint8") /* ty=uint8 */;
    %1066 = cast(%var_1940, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
    %1067 = cast(%var_1940, dtype="int64") /* ty=Tensor[(1, 3, 4), int64] */;
    %1068 = cast(meta[relay.Constant][82] /* ty=Tensor[(8, 3, 4), uint8] */, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
    %1069 = logical_xor(%1065, %1066) /* ty=Tensor[(1, 3, 4), uint8] */;
    %1070 = add(%1067, %1068) /* ty=Tensor[(8, 3, 4), int64] */;
    (%1069, %1070)
  };
  %1071(%var_1982, %var_1983) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */
}

def @func_16334(%var_16295: Tensor[(3276), float64], %var_16301: Tensor[(28), bool], %var_16319: Tensor[(140), bool], %var_16330: Tensor[(50), int16]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(3276), float64], Tensor[(8, 3, 4), int64], Tensor[(56), float32], uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(50), int16]) {
  %1072 = cast(%var_16295, dtype="float64") /* ty=Tensor[(3276), float64] */;
  %1073 = cast(%var_16295, dtype="bool") /* ty=Tensor[(3276), bool] */;
  %1074 = reshape(%1072, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
  %1075 = reshape(%1073, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
  %1076 = @func_11933(%1074, %1075) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
  %1077 = cast(meta[relay.Constant][83] /* ty=Tensor[(56), float32] */, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1078 = cast(meta[relay.Constant][84] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1079 = cast(meta[relay.Constant][85] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1080 = cast(%var_16301, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1081 = reshape(%1077, newshape=[2, 28]) /* ty=Tensor[(2, 28), float32] */;
  %1082 = reshape(%1078, newshape=[]) /* ty=uint8 */;
  %1083 = reshape(%1079, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %1084 = reshape(%1080, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %1085 = @func_11483(%1081, %1082, %1083, %1084) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(2, 28), float32], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(28), bool], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1086 = @func_13651() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1087 = cast(%var_16301, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1088 = cast(meta[relay.Constant][84] /* ty=uint8 */, dtype="int16") /* ty=int16 */;
  %1089 = cast(%var_16319, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1090 = reshape(%1087, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %1091 = reshape(%1088, newshape=[]) /* ty=int16 */;
  %1092 = reshape(%1089, newshape=[5, 28]) /* ty=Tensor[(5, 28), bool] */;
  %1093 = @func_12554(%1090, %1091, %1092) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(13, 3, 7), float32], Tensor[(1, 99), float64], Tensor[(15, 1, 1), bool], Tensor[(5, 28), float32], Tensor[(630), float64], Tensor[(15), float32]) */;
  %1094 = cast(%var_16330, dtype="int16") /* ty=Tensor[(50), int16] */;
  %1095 = reshape(%1094, newshape=[5, 10]) /* ty=Tensor[(5, 10), int16] */;
  %1096 = @func_14846(%1095) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15, 1, 1), float32], int16, Tensor[(5, 10), int16]) */;
  %1097 = @func_15810() /* ty=Tensor[(15), float32] */;
  %1098 = %1076.0;
  %1099 = %1085.3;
  %1100 = %1086.0;
  %1101 = %1093.1;
  %1102 = %1096.0;
  (%1097, %1098, %var_16295, %1099, meta[relay.Constant][83] /* ty=Tensor[(56), float32] */, meta[relay.Constant][84] /* ty=uint8 */, meta[relay.Constant][85] /* ty=Tensor[(1650), int8] */, %var_16301, %1100, %1101, %var_16319, %1102, %var_16330)
}

def @func_3364(%var_3362: Tensor[(429), uint64], %var_3363: Tensor[(12), uint8]) -> (Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  @func_3360(%var_3362, %var_3363) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */
}

def @func_18095(%var_18033: Tensor[(429), uint64], %var_18034: Tensor[(12), uint8], %var_18083: Tensor[(1650), int8]) -> (Tensor[(11, 2, 12), float64], Tensor[(10, 5, 13), uint16], Tensor[(12), uint8], Tensor[(15), float32], Tensor[(90), bool], Tensor[(28), bool], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(429), float32]) {
  %1103 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1104 = cast(%var_18033, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1105 = cast(%var_18034, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1106 = reshape(%1104, newshape=[429]) /* ty=Tensor[(429), uint64] */;
  %1107 = reshape(%1105, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1108 = @func_3360(%1106, %1107) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1109 = cast(meta[relay.Constant][86] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1110 = cast(meta[relay.Constant][87] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1111 = reshape(%1109, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %1112 = reshape(%1110, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %1113 = @func_11264(%1111, %1112) /* ty=(Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) */;
  %1114 = cast(%var_18083, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1115 = cast(%var_18083, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1116 = reshape(%1114, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1117 = reshape(%1115, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1118 = cast(%var_18033, dtype="float32") /* ty=Tensor[(429), float32] */;
  %1119 = %1103.0;
  %1120 = %1108.1;
  %1121 = %1113.0;
  %1122 = @func_6070(%1116, %1117) /* ty=Tensor[(15, 11, 10), int8] */;
  %1123 = sin(%1118) /* ty=Tensor[(429), float32] */;
  (%1119, %1120, %var_18034, %1121, meta[relay.Constant][86] /* ty=Tensor[(90), bool] */, meta[relay.Constant][87] /* ty=Tensor[(28), bool] */, %1122, %var_18083, %1123)
}

def @func_17816() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %1124 = @func_16069() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */;
  %1125 = @func_15810() /* ty=Tensor[(15), float32] */;
  %1126 = %1124.0;
  (%1125, %1126)
}

def @func_11515(%var_11514: Tensor[(273), float32]) -> (Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %1132 = fn (%var_11508: Tensor[(273), float32]) -> (Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
    %1127 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %1128 = cast(%var_11508, dtype="float32") /* ty=Tensor[(273), float32] */;
    %1129 = reshape(%1128, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
    %1130 = %1127.2;
    %1131 = @func_5939(%1129) /* ty=Tensor[(13, 3, 7), float32] */;
    (%1130, %1131, %var_11508)
  };
  %1132(%var_11514) /* ty=(Tensor[(15), float32], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */
}

def @func_21150() -> Tensor[(12), uint8] {
  @func_21148() /* ty=Tensor[(12), uint8] */
}

def @func_12949() -> (Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  %1133 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1134 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1135 = %1133.0;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_20891() -> (Tensor[(630), float64], Tensor[(11, 2, 12), float64]) {
  %1140 = fn () -> (Tensor[(630), float64], Tensor[(11, 2, 12), float64]) {
    %1137 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
    %1138 = %1137.1;
    %1139 = @func_16262() /* ty=Tensor[(11, 2, 12), float64] */;
    (%1138, %1139)
  };
  %1140() /* ty=(Tensor[(630), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_11589(%var_11566: Tensor[(11, 2, 12), float64], %var_11576: int16) -> (Tensor[(273), float32], Tensor[(11, 2, 12), float32], Tensor[(14, 9, 5), float64], Tensor[(99), float64], int16, Tensor[(13, 3, 7), float32]) {
  %1141 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1142 = %1141.0;
  %1143 = cast(%var_11566, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %1144 = shape_of(%1142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1145 = cast(%1142, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1147 = cast(meta[relay.Constant][89] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1148 = cast(%var_11576, dtype="int16") /* ty=int16 */;
  %1149 = reshape(%1147, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %1150 = reshape(%1148, newshape=[]) /* ty=int16 */;
  %1151 = @func_9492(%1149, %1150) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
  %1152 = cast(meta[relay.Constant][88] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1153 = reshape(%1152, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
  %1154 = @func_5939(%1153) /* ty=Tensor[(13, 3, 7), float32] */;
  %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(13, 3, 7), float32] */;
  %1156 = minimum(%1145, %1146) /* ty=Tensor[(11, 2, 12), float32] */;
  %1157 = %1151.1;
  %1158 = exp(%1155) /* ty=Tensor[(13, 3, 7), float32] */;
  (meta[relay.Constant][88] /* ty=Tensor[(273), float32] */, %1156, %1157, meta[relay.Constant][89] /* ty=Tensor[(99), float64] */, %var_11576, %1158)
}

def @func_13821() -> Tensor[(15), float32] {
  %1159 = @func_12856() /* ty=(Tensor[(15), float32],) */;
  %1159.0
}

def @func_6070(%var_6065: Tensor[(15, 11, 10), int8], %var_6066: Tensor[(15, 11, 10), int8]) -> Tensor[(15, 11, 10), int8] {
  %1160 = cast(%var_6066, dtype="int8") /* ty=Tensor[(15, 11, 10), int8] */;
  %1161 = shape_of(%var_6065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(%var_6065, dtype="int8") /* ty=Tensor[(15, 11, 10), int8] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%1162, %1163) /* ty=Tensor[(15, 11, 10), int8] */
}

def @func_16401(%var_16400: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(324, 2), bool], Tensor[(28), bool], Tensor[(56), float32]) {
  %1172 = fn (%var_16394: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(324, 2), bool], Tensor[(28), bool], Tensor[(56), float32]) {
    %1164 = @func_13957() /* ty=(Tensor[(15), float32],) */;
    %1165 = cast(meta[relay.Constant][90] /* ty=Tensor[(28), bool] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %1166 = cast(%var_16394, dtype="float32") /* ty=Tensor[(56), float32] */;
    %1167 = reshape(%1165, newshape=[28]) /* ty=Tensor[(28), bool] */;
    %1168 = reshape(%1166, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %1169 = @func_15762(%1167, %1168) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */;
    %1170 = %1164.0;
    %1171 = %1169.12;
    (%1170, %1171, meta[relay.Constant][90] /* ty=Tensor[(28), bool] */, %var_16394)
  };
  %1172(%var_16400) /* ty=(Tensor[(15), float32], Tensor[(324, 2), bool], Tensor[(28), bool], Tensor[(56), float32]) */
}

def @func_11045() -> (Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
  @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */
}

def @func_12240() -> (Tensor[(15, 1, 1), float32],) {
  @func_12238() /* ty=(Tensor[(15, 1, 1), float32],) */
}

def @func_14428(%var_14426: Tensor[(1620), float64], %var_14427: Tensor[(648), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) {
  %1194 = fn (%var_14398: Tensor[(1620), float64], %var_14399: Tensor[(648), uint64]) -> (Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) {
    %1173 = cast(%var_14398, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %1174 = cast(%var_14399, dtype="uint64") /* ty=Tensor[(648), uint64] */;
    %1175 = cast(%var_14399, dtype="uint64") /* ty=Tensor[(648), uint64] */;
    %1176 = reshape(%1173, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %1177 = reshape(%1174, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
    %1178 = reshape(%1175, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
    %1179 = @func_14216(%1176, %1177, %1178) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
    %1180 = %1179.3;
    %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1182 = log2(%1181) /* ty=Tensor[(3276), float64] */;
    %1183 = cast(%1182, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1184 = shape_of(%1180, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1185 = cast(%1180, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1187 = power(%1185, %1186) /* ty=Tensor[(3276), float64] */;
    %1188 = cast(%1180, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1189 = shape_of(%1187, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1190 = cast(%1187, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1192 = @func_13981() /* ty=Tensor[(15), float32] */;
    %1193 = maximum(%1190, %1191) /* ty=Tensor[(3276), float64] */;
    (%1192, %var_14398, %var_14399, %1193)
  };
  %1194(%var_14426, %var_14427) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) */
}

def @func_13957() -> (Tensor[(15), float32],) {
  %1195 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_12106() -> Tensor[(11, 2, 12), float64] {
  %1198 = fn () -> Tensor[(11, 2, 12), float64] {
    %1197 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %1197.0
  };
  %1198() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_14659() -> Tensor[(11, 2, 12), float64] {
  %1200 = fn () -> Tensor[(11, 2, 12), float64] {
    %1199 = @func_12949() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
    %1199.0
  };
  %1200() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_20306() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  %1203 = fn () -> (Tensor[(15), float32], Tensor[(15), float32]) {
    %1201 = @func_18225() /* ty=Tensor[(15), float32] */;
    %1202 = @func_14273() /* ty=Tensor[(15), float32] */;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(15), float32], Tensor[(15), float32]) */
}

def @func_15099() -> Tensor[(11, 2, 12), float64] {
  %1204 = fn () -> Tensor[(11, 2, 12), float64] {
    @func_12906() /* ty=Tensor[(11, 2, 12), float64] */
  };
  %1204() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_17406() -> Tensor[(11, 2, 12), float64] {
  %1205 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1205.0
}

def @func_14263(%var_14262: Tensor[(11, 7, 10), bool]) -> (Tensor[(11, 7, 10), bool], Tensor[(15), float32]) {
  %1212 = fn (%var_14234: Tensor[(11, 7, 10), bool]) -> (Tensor[(11, 7, 10), bool], Tensor[(15), float32]) {
    %1206 = cast(meta[relay.Constant][91] /* ty=Tensor[(11, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
    %1207 = shape_of(%var_14234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1208 = cast(%var_14234, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
    %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1210 = logical_and(%1208, %1209) /* ty=Tensor[(11, 7, 10), bool] */;
    %1211 = @func_13981() /* ty=Tensor[(15), float32] */;
    (%1210, %1211)
  };
  %1212(%var_14262) /* ty=(Tensor[(11, 7, 10), bool], Tensor[(15), float32]) */
}

def @func_17556(%var_17498: int64, %var_17499: Tensor[(13, 12, 5), int64]) -> (Tensor[(13, 12, 5), bool], Tensor[(16, 5, 4), int32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(15), float32]) {
  %1213 = cast(%var_17498, dtype="bool") /* ty=bool */;
  %1214 = cast(%var_17499, dtype="bool") /* ty=Tensor[(13, 12, 5), bool] */;
  %1215 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1216 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1217 = @func_16550() /* ty=(Tensor[(12), uint8],) */;
  %1218 = less_equal(%1213, %1214) /* ty=Tensor[(13, 12, 5), bool] */;
  %1219 = @func_16110() /* ty=Tensor[(16, 5, 4), int32] */;
  %1220 = %1215.0;
  %1221 = %1216.0;
  %1222 = %1217.0;
  %1223 = @func_17029() /* ty=Tensor[(15), float32] */;
  (%1218, %1219, %1220, %1221, %1222, %1223)
}

def @func_19098(%var_19096: Tensor[(324, 2), uint16], %var_19097: Tensor[(324, 2), int64]) -> (Tensor[(15), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(11, 2, 12), float64]) {
  @func_19094(%var_19096, %var_19097) /* ty=(Tensor[(15), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_13634(%var_13632: Tensor[(3, 4), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(3, 4), uint8], Tensor[(28), bool]) {
  @func_13631(%var_13632) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(7, 2, 2), uint64], Tensor[(3, 4), uint8], Tensor[(28), bool]) */
}

def @func_6637(%var_6635: Tensor[(7, 10, 10), float32], %var_6636: Tensor[(7, 10, 10), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) {
  @func_6633(%var_6635, %var_6636) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) */
}

def @func_3360(%var_3336: Tensor[(429), uint64], %var_3337: Tensor[(12), uint8]) -> (Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  %1224 = cast(meta[relay.Constant][93] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="bool") /* ty=Tensor[(10, 5, 13), bool] */;
  %1225 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(meta[relay.Constant][92] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="bool") /* ty=Tensor[(10, 5, 13), bool] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1228 = cast(meta[relay.Constant][93] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="uint16") /* ty=Tensor[(10, 5, 13), uint16] */;
  %1229 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1230 = cast(meta[relay.Constant][92] /* ty=Tensor[(10, 5, 13), uint32] */, dtype="uint16") /* ty=Tensor[(10, 5, 13), uint16] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1232 = cast(%var_3336, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1233 = cast(%var_3336, dtype="uint64") /* ty=Tensor[(429), uint64] */;
  %1234 = cast(%var_3337, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1235 = reshape(%1232, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1236 = reshape(%1233, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), uint64] */;
  %1237 = reshape(%1234, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1238 = @func_2022(%1235, %1236, %1237) /* ty=(Tensor[(3, 13, 11), uint64], Tensor[(1, 3, 4), uint8], uint8, Tensor[(12), uint8]) */;
  %1239 = less(%1226, %1227) /* ty=Tensor[(10, 5, 13), bool] */;
  %1240 = maximum(%1230, %1231) /* ty=Tensor[(10, 5, 13), uint16] */;
  %1241 = %1238.0;
  (%1239, %1240, %1241, %var_3336, %var_3337)
}

def @func_16340(%var_16336: Tensor[(3276), float64], %var_16337: Tensor[(28), bool], %var_16338: Tensor[(140), bool], %var_16339: Tensor[(50), int16]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(3276), float64], Tensor[(8, 3, 4), int64], Tensor[(56), float32], uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(50), int16]) {
  @func_16334(%var_16336, %var_16337, %var_16338, %var_16339) /* ty=(Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(3276), float64], Tensor[(8, 3, 4), int64], Tensor[(56), float32], uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(50), int16]) */
}

def @func_17280(%var_17267: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(28), bool]) {
  %1242 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1243 = cast(%var_17267, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1244 = reshape(%1243, newshape=[28]) /* ty=Tensor[(28), bool] */;
  %1245 = @func_12336(%1244) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(273), float32], Tensor[(15), float32], Tensor[(2, 2, 14), float32], Tensor[(56), float32], uint8, uint8, Tensor[(1650), int8], Tensor[(28), bool], Tensor[(13, 14, 6), bool]) */;
  %1246 = %1242.0;
  %1247 = %1245.2;
  (%1246, %1247, %var_17267)
}

def @func_17666(%var_17662: Tensor[(110, 15), int8]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(110, 15), int8]) {
  %1248 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1249 = cast(%var_17662, dtype="int8") /* ty=Tensor[(110, 15), int8] */;
  %1250 = cast(%var_17662, dtype="int8") /* ty=Tensor[(110, 15), int8] */;
  %1251 = reshape(%1249, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1252 = reshape(%1250, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1253 = %1248.1;
  %1254 = @func_6070(%1251, %1252) /* ty=Tensor[(15, 11, 10), int8] */;
  (%1253, %1254, %var_17662)
}

def @func_15219(%var_15217: Tensor[(13, 9, 11), float64]) -> (Tensor[(13, 9, 11), float64], Tensor[(11, 2, 12), float64]) {
  @func_15216(%var_15217) /* ty=(Tensor[(13, 9, 11), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_17465(%var_17464: Tensor[(700), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(700), float32]) {
  %1263 = fn (%var_17451: Tensor[(700), float32]) -> (Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(700), float32]) {
    %1255 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1256 = cast(%var_17451, dtype="float32") /* ty=Tensor[(700), float32] */;
    %1257 = cast(%var_17451, dtype="float32") /* ty=Tensor[(700), float32] */;
    %1258 = reshape(%1256, newshape=[7, 10, 10]) /* ty=Tensor[(7, 10, 10), float32] */;
    %1259 = reshape(%1257, newshape=[7, 10, 10]) /* ty=Tensor[(7, 10, 10), float32] */;
    %1260 = @func_6633(%1258, %1259) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(7, 10, 10), float32], Tensor[(7, 126), float64]) */;
    %1261 = %1255.0;
    %1262 = %1260.0;
    (%1261, %1262, %var_17451)
  };
  %1263(%var_17464) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(9, 7, 14), float32], Tensor[(700), float32]) */
}

def @func_16552() -> (Tensor[(12), uint8],) {
  @func_16550() /* ty=(Tensor[(12), uint8],) */
}

def @func_3516(%var_3511: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  %1264 = cast(%var_3511, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %1265 = sqrt(%1264) /* ty=Tensor[(15, 1, 1), float32] */;
  (%1265,)
}

def @func_5942(%var_5940: Tensor[(13, 3, 7), float32]) -> Tensor[(13, 3, 7), float32] {
  @func_5939(%var_5940) /* ty=Tensor[(13, 3, 7), float32] */
}

def @func_20461(%var_20459: uint8, %var_20460: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], uint8, uint8, Tensor[(12), uint8]) {
  %1275 = fn (%var_20454: uint8, %var_20455: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], uint8, uint8, Tensor[(12), uint8]) {
    %1266 = @func_14968() /* ty=(Tensor[(15), float32],) */;
    %1267 = cast(%var_20454, dtype="uint8") /* ty=uint8 */;
    %1268 = cast(%var_20455, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %1269 = reshape(%1267, newshape=[]) /* ty=uint8 */;
    %1270 = reshape(%1268, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %1271 = @func_11388(%1269, %1270) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */;
    %1272 = %1266.0;
    %1273 = @func_18877() /* ty=Tensor[(11, 2, 12), float64] */;
    %1274 = %1271.2;
    (%1272, %1273, %1274, %var_20454, %var_20455)
  };
  %1275(%var_20459, %var_20460) /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64], uint8, uint8, Tensor[(12), uint8]) */
}

def @func_13171() -> Tensor[(11, 2, 12), float64] {
  @func_13169() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_19988() -> (Tensor[(11, 2, 12), float64],) {
  %1277 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %1276 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
    (%1276,)
  };
  %1277() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_15766(%var_15764: Tensor[(28), bool], %var_15765: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) {
  @func_15762(%var_15764, %var_15765) /* ty=(Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) */
}

def @func_13169() -> Tensor[(11, 2, 12), float64] {
  %1278 = @func_13109() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1278.0
}

def @func_9495(%var_9493: Tensor[(11, 1, 9), float64], %var_9494: int16) -> (Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
  %1294 = fn (%var_9439: Tensor[(11, 1, 9), float64], %var_9463: int16) -> (Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) {
    %1279 = cast(%var_9439, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
    %1280 = cast(meta[relay.Constant][94] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %1281 = reshape(%1280, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), float64] */;
    %1282 = @func_3969(%1281) /* ty=(Tensor[(14, 9, 5), float64],) */;
    %1283 = cast(%var_9463, dtype="int16") /* ty=int16 */;
    %1284 = cast(meta[relay.Constant][95] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
    %1285 = reshape(%1283, newshape=[]) /* ty=int16 */;
    %1286 = reshape(%1284, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %1287 = @func_5667(%1285, %1286) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
    %1288 = cast(meta[relay.Constant][96] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
    %1289 = reshape(%1288, newshape=[13, 3, 7]) /* ty=Tensor[(13, 3, 7), float32] */;
    %1290 = cos(%1279) /* ty=Tensor[(11, 1, 9), float64] */;
    %1291 = %1282.0;
    %1292 = %1287.0;
    %1293 = @func_5939(%1289) /* ty=Tensor[(13, 3, 7), float32] */;
    (%1290, %1291, meta[relay.Constant][94] /* ty=Tensor[(630), float64] */, %1292, %var_9463, meta[relay.Constant][95] /* ty=Tensor[(50), int16] */, %1293, meta[relay.Constant][96] /* ty=Tensor[(273), float32] */)
  };
  %1294(%var_9493, %var_9494) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */
}

def @func_13653() -> (Tensor[(11, 2, 12), float64],) {
  @func_13651() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_18449(%var_18448: Tensor[(90), bool]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
  %1307 = fn (%var_18441: Tensor[(90), bool]) -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
    %1295 = @func_11069() /* ty=(Tensor[(15), float32],) */;
    %1296 = cast(%var_18441, dtype="bool") /* ty=Tensor[(90), bool] */;
    %1297 = cast(%var_18441, dtype="bool") /* ty=Tensor[(90), bool] */;
    %1298 = cast(meta[relay.Constant][97] /* ty=Tensor[(648), uint64] */, dtype="uint64") /* ty=Tensor[(648), uint64] */;
    %1299 = reshape(%1296, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
    %1300 = reshape(%1297, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
    %1301 = reshape(%1298, newshape=[648]) /* ty=Tensor[(648), uint64] */;
    %1302 = @func_1390(%1299, %1300, %1301) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
    %1303 = %1295.0;
    %1304 = @func_16262() /* ty=Tensor[(11, 2, 12), float64] */;
    %1305 = @func_12426() /* ty=Tensor[(15), float32] */;
    %1306 = %1302.3;
    (%1303, %1304, %1305, %1306, %var_18441, meta[relay.Constant][97] /* ty=Tensor[(648), uint64] */)
  };
  %1307(%var_18448) /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) */
}

def @func_13292() -> (Tensor[(15), float32],) {
  %1310 = fn () -> (Tensor[(15), float32],) {
    %1308 = @func_12856() /* ty=(Tensor[(15), float32],) */;
    %1309 = %1308.0;
    (%1309,)
  };
  %1310() /* ty=(Tensor[(15), float32],) */
}

def @func_15579() -> (Tensor[(16, 4, 1), float32],) {
  @func_15577() /* ty=(Tensor[(16, 4, 1), float32],) */
}

def @func_10236(%var_10235: Tensor[(2, 2, 14), float32]) -> (Tensor[(2, 2, 14), float32],) {
  %1313 = fn (%var_10221: Tensor[(2, 2, 14), float32]) -> (Tensor[(2, 2, 14), float32],) {
    %1311 = cast(%var_10221, dtype="float32") /* ty=Tensor[(2, 2, 14), float32] */;
    %1312 = cos(%1311) /* ty=Tensor[(2, 2, 14), float32] */;
    (%1312,)
  };
  %1313(%var_10235) /* ty=(Tensor[(2, 2, 14), float32],) */
}

def @func_14275() -> Tensor[(15), float32] {
  @func_14273() /* ty=Tensor[(15), float32] */
}

def @func_18760(%var_18758: int16, %var_18759: Tensor[(1650), int8]) -> (Tensor[(12), uint8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], int16, Tensor[(140), bool], Tensor[(15, ?, ?), int8], Tensor[(15, 1, 1), float64], Tensor[(273), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) {
  @func_18756(%var_18758, %var_18759) /* ty=(Tensor[(12), uint8], Tensor[(28), bool], Tensor[(11, 2, 12), float64], int16, Tensor[(140), bool], Tensor[(15, ?, ?), int8], Tensor[(15, 1, 1), float64], Tensor[(273), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8]) */
}

def @func_12076(%var_12058: int8, %var_12059: Tensor[(8, 8, 5), int8]) -> (Tensor[(8, 8, 5), int8],) {
  %1314 = cast(%var_12058, dtype="int8") /* ty=int8 */;
  %1315 = cast(%var_12059, dtype="int8") /* ty=Tensor[(8, 8, 5), int8] */;
  %1316 = right_shift(%1314, %1315) /* ty=Tensor[(8, 8, 5), int8] */;
  (%1316,)
}

def @func_6074(%var_6072: Tensor[(15, 11, 10), int8], %var_6073: Tensor[(15, 11, 10), int8]) -> Tensor[(15, 11, 10), int8] {
  @func_6070(%var_6072, %var_6073) /* ty=Tensor[(15, 11, 10), int8] */
}

def @func_13611() -> (Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) {
  %1317 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1318 = cast(meta[relay.Constant][98] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1319 = cast(meta[relay.Constant][99] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %1320 = reshape(%1318, newshape=[]) /* ty=int16 */;
  %1321 = reshape(%1319, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %1322 = @func_5667(%1320, %1321) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */;
  %1323 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1324 = %1317.1;
  %1325 = %1322.0;
  %1326 = %1323.0;
  (%1324, %1325, meta[relay.Constant][98] /* ty=int16 */, meta[relay.Constant][99] /* ty=Tensor[(50), int16] */, %1326)
}

def @func_11118(%var_11096: Tensor[(1650), int8], %var_11106: Tensor[(28), bool]) -> (Tensor[(15), float32], Tensor[(15, 11, 10), int8], Tensor[(1650), int8], Tensor[(15, 1, 1), float32], Tensor[(28), bool]) {
  %1327 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %1328 = cast(%var_11096, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1329 = cast(%var_11096, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1330 = reshape(%1328, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1331 = reshape(%1329, newshape=[15, 11, 10]) /* ty=Tensor[(15, 11, 10), int8] */;
  %1332 = cast(%var_11106, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1333 = %1327.0;
  %1334 = cast(%1333, dtype="float32") /* ty=Tensor[(15), float32] */;
  %1335 = reshape(%1332, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
  %1336 = reshape(%1334, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %1337 = @func_8129(%1335, %1336) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
  %1338 = @func_6070(%1330, %1331) /* ty=Tensor[(15, 11, 10), int8] */;
  %1339 = %1337.1;
  (%1333, %1338, %var_11096, %1339, %var_11106)
}

def @func_19456(%var_19455: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
  %1347 = fn (%var_19438: Tensor[(364), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) {
    %1340 = @func_18877() /* ty=Tensor[(11, 2, 12), float64] */;
    %1341 = cast(%1340, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %1342 = cast(%var_19438, dtype="float64") /* ty=Tensor[(364), float64] */;
    %1343 = reshape(%1341, newshape=[11, 2, 12]) /* ty=Tensor[(11, 2, 12), float64] */;
    %1344 = reshape(%1342, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %1345 = @func_18548(%1343, %1344) /* ty=(Tensor[(11, 2, 12), uint64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */;
    %1346 = %1345.1;
    (%1340, %1346, %var_19438)
  };
  %1347(%var_19455) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(4, 13, 7), float64], Tensor[(364), float64]) */
}

def @func_16152(%var_16150: Tensor[(28), bool], %var_16151: Tensor[(3276), float64]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(28), bool], Tensor[(13, 2, 9), int64], Tensor[(3276), float64]) {
  %1362 = fn (%var_16128: Tensor[(28), bool], %var_16137: Tensor[(3276), float64]) -> (Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(28), bool], Tensor[(13, 2, 9), int64], Tensor[(3276), float64]) {
    %1348 = @func_13291() /* ty=(Tensor[(15), float32],) */;
    %1349 = cast(%var_16128, dtype="bool") /* ty=Tensor[(28), bool] */;
    %1350 = %1348.0;
    %1351 = cast(%1350, dtype="float32") /* ty=Tensor[(15), float32] */;
    %1352 = reshape(%1349, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), bool] */;
    %1353 = reshape(%1351, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %1354 = @func_8129(%1352, %1353) /* ty=(Tensor[(7, 2, 2), bool], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(7, 2, 2), float64]) */;
    %1355 = cast(%var_16137, dtype="float64") /* ty=Tensor[(3276), float64] */;
    %1356 = cast(%var_16137, dtype="bool") /* ty=Tensor[(3276), bool] */;
    %1357 = reshape(%1355, newshape=[14, 234]) /* ty=Tensor[(14, 234), float64] */;
    %1358 = reshape(%1356, newshape=[14, 234]) /* ty=Tensor[(14, 234), bool] */;
    %1359 = @func_11933(%1357, %1358) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(13, 2, 9), int64], Tensor[(13, 2, 9), int64], Tensor[(14, 234), uint16]) */;
    %1360 = %1354.1;
    %1361 = %1359.1;
    (%1350, %1360, %var_16128, %1361, %var_16137)
  };
  %1362(%var_16150, %var_16151) /* ty=(Tensor[(15), float32], Tensor[(15, 1, 1), float32], Tensor[(28), bool], Tensor[(13, 2, 9), int64], Tensor[(3276), float64]) */
}

def @func_12042(%var_12040: Tensor[(825), float64], %var_12041: Tensor[(105), float64]) -> (Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) {
  @func_12038(%var_12040, %var_12041) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(1650), int8], Tensor[(15, 11, 10), float64], Tensor[(4, 13, 7), float64], Tensor[(825), float64], Tensor[(90), bool], Tensor[(6, 108), uint64], Tensor[(364), float64], Tensor[(105), float64]) */
}

def @func_18702() -> (Tensor[(12), uint8], Tensor[(15), float32]) {
  %1367 = fn () -> (Tensor[(12), uint8], Tensor[(15), float32]) {
    %1363 = @func_16007() /* ty=(Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) */;
    %1364 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
    %1365 = %1363.2;
    %1366 = %1364.1;
    (%1365, %1366)
  };
  %1367() /* ty=(Tensor[(12), uint8], Tensor[(15), float32]) */
}

def @func_10156(%var_10154: bool) -> (Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) {
  @func_10153(%var_10154) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */
}

def @func_14025() -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
  %1372 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(15), float32]) {
    %1368 = @func_13763() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1369 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
    %1370 = %1368.0;
    %1371 = %1369.2;
    (%1370, %1371)
  };
  %1372() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */
}

def @func_6333(%var_6315: Tensor[(11, 14, 13), uint16]) -> Tensor[(11, 14, 13), bool] {
  %1373 = cast(%var_6315, dtype="bool") /* ty=Tensor[(11, 14, 13), bool] */;
  %1374 = shape_of(meta[relay.Constant][100] /* ty=Tensor[(11, 14, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1375 = cast(meta[relay.Constant][100] /* ty=Tensor[(11, 14, 13), uint16] */, dtype="bool") /* ty=Tensor[(11, 14, 13), bool] */;
  %1376 = dyn.reshape(%1373, %1374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1375, %1376) /* ty=Tensor[(11, 14, 13), bool] */
}

def @func_15762(%var_15712: Tensor[(28), bool], %var_15738: Tensor[(56), float32]) -> (Tensor[(15), float32], Tensor[(3, 13, 11), uint64], bool, Tensor[(11, 2, 12), float64], Tensor[(15), float32], Tensor[(15), float32], Tensor[(90, 1), bool], Tensor[(28), bool], Tensor[(1620), float64], Tensor[(1620), float64], Tensor[(1, 648), uint64], Tensor[(11, 2, 12), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(56), float32], Tensor[(140), bool]) {
  %1377 = @func_15297() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1378 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1379 = reshape(%1378, newshape=[]) /* ty=bool */;
  %1380 = @func_10153(%1379) /* ty=(Tensor[(13, 14, 6), bool], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
  %1381 = @func_15297() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1382 = cast(meta[relay.Constant][101] /* ty=Tensor[(90, 1), bool] */, dtype="bool") /* ty=Tensor[(90, 1), bool] */;
  %1383 = cast(%var_15712, dtype="bool") /* ty=Tensor[(28), bool] */;
  %1384 = reshape(%1382, newshape=[90]) /* ty=Tensor[(90), bool] */;
  %1385 = reshape(%1383, newshape=[1, 28]) /* ty=Tensor[(1, 28), bool] */;
  %1386 = @func_11264(%1384, %1385) /* ty=(Tensor[(15), float32], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64], Tensor[(15), float32], Tensor[(28), bool], Tensor[(1650), int8], Tensor[(1, 28), bool]) */;
  %1387 = cast(meta[relay.Constant][102] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1388 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %1389 = reshape(%1387, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1390 = reshape(%1388, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %1391 = @func_14425(%1389, %1390) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(648), uint64], Tensor[(3276), float64]) */;
  %1392 = @func_12129() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1393 = cast(meta[relay.Constant][102] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1394 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %1395 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 648), uint64] */, dtype="uint64") /* ty=Tensor[(1, 648), uint64] */;
  %1396 = reshape(%1393, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1397 = reshape(%1394, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %1398 = reshape(%1395, newshape=[324, 2]) /* ty=Tensor[(324, 2), uint64] */;
  %1399 = @func_14216(%1396, %1397, %1398) /* ty=(Tensor[(15), float32], Tensor[(1620), float64], Tensor[(99), float64], Tensor[(3276), float64], Tensor[(324, 2), bool], Tensor[(15), float32], Tensor[(14, 234), uint16], Tensor[(15, 9, 12), float64]) */;
  %1400 = cast(%var_15738, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1401 = cast(meta[relay.Constant][104] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %1402 = reshape(%1400, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %1403 = reshape(%1401, newshape=[140]) /* ty=Tensor[(140), bool] */;
  %1404 = @func_13465(%1402, %1403) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(2, 2, 14), float32], Tensor[(56), float32], Tensor[(15), float32], Tensor[(15, 1, 1), bool], Tensor[(28), bool], int16, Tensor[(140), bool], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */;
  %1405 = %1377.1;
  %1406 = %1380.1;
  %1407 = %1381.0;
  %1408 = @func_12426() /* ty=Tensor[(15), float32] */;
  %1409 = %1386.0;
  %1410 = %1391.1;
  %1411 = %1392.0;
  %1412 = %1399.4;
  %1413 = %1404.3;
  (%1405, %1406, True /* ty=bool */, %1407, %1408, %1409, meta[relay.Constant][101] /* ty=Tensor[(90, 1), bool] */, %var_15712, %1410, meta[relay.Constant][102] /* ty=Tensor[(1620), float64] */, meta[relay.Constant][103] /* ty=Tensor[(1, 648), uint64] */, %1411, %1412, %1413, %var_15738, meta[relay.Constant][104] /* ty=Tensor[(140), bool] */)
}

def @func_16070() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %1418 = fn () -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
    %1414 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
    %1415 = @func_14066() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */;
    %1416 = %1414.1;
    %1417 = %1415.0;
    (%1416, %1417)
  };
  %1418() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_20613() -> Tensor[(15), float32] {
  @func_20611() /* ty=Tensor[(15), float32] */
}

def @func_12907() -> Tensor[(11, 2, 12), float64] {
  %1420 = fn () -> Tensor[(11, 2, 12), float64] {
    %1419 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1419.0
  };
  %1420() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_9119(%var_9096: Tensor[(3, 3, 8), bool], %var_9097: Tensor[(3, 3, 8), bool]) -> (Tensor[(3, 3, 8), bool],) {
  %1421 = cast(%var_9097, dtype="bool") /* ty=Tensor[(3, 3, 8), bool] */;
  %1422 = shape_of(%var_9096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1423 = cast(%var_9096, dtype="bool") /* ty=Tensor[(3, 3, 8), bool] */;
  %1424 = dyn.reshape(%1421, %1422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1425 = logical_or(%1423, %1424) /* ty=Tensor[(3, 3, 8), bool] */;
  (%1425,)
}

def @func_20196() -> Tensor[(11, 2, 12), float64] {
  @func_20007() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_16263() -> Tensor[(11, 2, 12), float64] {
  %1427 = fn () -> Tensor[(11, 2, 12), float64] {
    %1426 = @func_11643() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1426.0
  };
  %1427() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_13613() -> (Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) {
  @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */
}

def @func_20853() -> Tensor[(15), float32] {
  %1429 = fn () -> Tensor[(15), float32] {
    %1428 = @func_13957() /* ty=(Tensor[(15), float32],) */;
    %1428.0
  };
  %1429() /* ty=Tensor[(15), float32] */
}

def @func_17283(%var_17281: Tensor[(28), bool]) -> (Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(28), bool]) {
  @func_17280(%var_17281) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(273), float32], Tensor[(28), bool]) */
}

def @func_15216(%var_15163: Tensor[(13, 9, 11), float64]) -> (Tensor[(13, 9, 11), float64], Tensor[(11, 2, 12), float64]) {
  %1430 = cast(%var_15163, dtype="float64") /* ty=Tensor[(13, 9, 11), float64] */;
  %1431 = @func_12766() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1432 = log10(%1430) /* ty=Tensor[(13, 9, 11), float64] */;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_18227() -> Tensor[(15), float32] {
  @func_18225() /* ty=Tensor[(15), float32] */
}

def @func_11391(%var_11389: uint8, %var_11390: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
  %1442 = fn (%var_11379: uint8, %var_11380: Tensor[(12), uint8]) -> (Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) {
    %1434 = @func_11369() /* ty=(Tensor[(11, 2, 12), float64],) */;
    %1435 = cast(%var_11379, dtype="uint8") /* ty=uint8 */;
    %1436 = cast(%var_11380, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %1437 = reshape(%1435, newshape=[]) /* ty=uint8 */;
    %1438 = reshape(%1436, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), uint8] */;
    %1439 = @func_1981(%1437, %1438) /* ty=(Tensor[(1, 3, 4), uint8], Tensor[(8, 3, 4), int64]) */;
    %1440 = %1434.0;
    %1441 = %1439.1;
    (%1440, %1441, %var_11379, %var_11380)
  };
  %1442(%var_11389, %var_11390) /* ty=(Tensor[(11, 2, 12), float64], Tensor[(8, 3, 4), int64], uint8, Tensor[(12), uint8]) */
}

def @func_5671(%var_5669: int16, %var_5670: Tensor[(5, 1, 10), int16]) -> (Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) {
  @func_5667(%var_5669, %var_5670) /* ty=(Tensor[(5, 1, 10), int16], Tensor[(15, 1, 1), float32], Tensor[(1, 15), float32]) */
}

def @func_20729() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) {
  @func_20727() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64], Tensor[(11, 2, 12), float64]) */
}

def @func_15810() -> Tensor[(15), float32] {
  %1443 = @func_13291() /* ty=(Tensor[(15), float32],) */;
  %1443.0
}

def @func_17818() -> (Tensor[(15), float32], Tensor[(15), float32]) {
  @func_17816() /* ty=(Tensor[(15), float32], Tensor[(15), float32]) */
}

def @func_13093(%var_13091: Tensor[(660), float32], %var_13092: Tensor[(12), uint8]) -> (Tensor[(15), float32], Tensor[(11, 15, 4), float32], Tensor[(660), float32], Tensor[(10, 5, 13), uint16], Tensor[(429), uint64], Tensor[(12), uint8]) {
  @func_13089(%var_13091, %var_13092) /* ty=(Tensor[(15), float32], Tensor[(11, 15, 4), float32], Tensor[(660), float32], Tensor[(10, 5, 13), uint16], Tensor[(429), uint64], Tensor[(12), uint8]) */
}

def @func_20505() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  @func_20503() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_13568(%var_13548: Tensor[(15, 9, 12), float64], %var_13558: Tensor[(648), uint64]) -> (Tensor[(15, 9, 12), float64], Tensor[(9, 8, 9), bool], Tensor[(90), bool], Tensor[(648), uint64]) {
  %1444 = cast(%var_13548, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1445 = cast(meta[relay.Constant][105] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1446 = cast(meta[relay.Constant][105] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1447 = cast(%var_13558, dtype="uint64") /* ty=Tensor[(648), uint64] */;
  %1448 = reshape(%1445, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1449 = reshape(%1446, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), bool] */;
  %1450 = reshape(%1447, newshape=[648]) /* ty=Tensor[(648), uint64] */;
  %1451 = @func_1390(%1448, %1449, %1450) /* ty=(Tensor[(9, 8, 9), bool], Tensor[(648), uint64], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(9, 8, 9), bool], Tensor[(3, 5, 6), float64], Tensor[(9, 8, 9), bool]) */;
  %1452 = erf(%1444) /* ty=Tensor[(15, 9, 12), float64] */;
  %1453 = %1451.0;
  (%1452, %1453, meta[relay.Constant][105] /* ty=Tensor[(90), bool] */, %var_13558)
}

def @func_20346() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  @func_20344() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_14067() -> (Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) {
  %1461 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) {
    %1454 = cast(meta[relay.Constant][106] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %1455 = cast(meta[relay.Constant][107] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1456 = reshape(%1454, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %1457 = reshape(%1455, newshape=[]) /* ty=int16 */;
    %1458 = @func_9492(%1456, %1457) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(14, 9, 5), float64], Tensor[(630), float64], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(13, 3, 7), float32], Tensor[(273), float32]) */;
    %1459 = @func_13343() /* ty=Tensor[(11, 2, 12), float64] */;
    %1460 = %1458.2;
    (%1459, %1460, meta[relay.Constant][106] /* ty=Tensor[(99), float64] */, meta[relay.Constant][107] /* ty=int16 */)
  };
  %1461() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(630), float64], Tensor[(99), float64], int16) */
}

def @func_21178() -> (Tensor[(11, 2, 12), float64],) {
  %1464 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %1462 = @func_13737() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(6, 11, 4), float32], Tensor[(15, 11, 10), int8], Tensor[(5, 330), int8], Tensor[(11, 2, 12), float64]) */;
    %1463 = %1462.0;
    (%1463,)
  };
  %1464() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_12426() -> Tensor[(15), float32] {
  %1465 = @func_11069() /* ty=(Tensor[(15), float32],) */;
  %1465.0
}

def @func_16568(%var_16567: Tensor[(11, 5, 12), int16]) -> (Tensor[(11, 5, 12), int16], Tensor[(11, 5, 12), float64]) {
  %1473 = fn (%var_16553: Tensor[(11, 5, 12), int16]) -> (Tensor[(11, 5, 12), int16], Tensor[(11, 5, 12), float64]) {
    %1466 = cast(meta[relay.Constant][108] /* ty=Tensor[(11, 5, 12), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 12), int16] */;
    %1467 = shape_of(%var_16553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1468 = cast(%var_16553, dtype="int16") /* ty=Tensor[(11, 5, 12), int16] */;
    %1469 = dyn.reshape(%1466, %1467, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1470 = cast(meta[relay.Constant][108] /* ty=Tensor[(11, 5, 12), int16] */, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
    %1471 = bitwise_or(%1468, %1469) /* ty=Tensor[(11, 5, 12), int16] */;
    %1472 = log(%1470) /* ty=Tensor[(11, 5, 12), float64] */;
    (%1471, %1472)
  };
  %1473(%var_16567) /* ty=(Tensor[(11, 5, 12), int16], Tensor[(11, 5, 12), float64]) */
}

def @func_20427() -> (Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) {
  %1474 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1475 = %1474.0;
  %1476 = cast(%1475, dtype="float32") /* ty=Tensor[(11, 2, 12), float32] */;
  %1477 = @func_16518() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1478 = sqrt(%1476) /* ty=Tensor[(11, 2, 12), float32] */;
  %1479 = %1477.0;
  (%1478, %1479)
}

def @func_15892() -> Tensor[(11, 2, 12), float64] {
  @func_15890() /* ty=Tensor[(11, 2, 12), float64] */
}

def @func_8434(%var_8428: Tensor[(8, 10, 14), float64]) -> Tensor[(8, 10, 14), float64] {
  %1480 = cast(%var_8428, dtype="float64") /* ty=Tensor[(8, 10, 14), float64] */;
  exp(%1480) /* ty=Tensor[(8, 10, 14), float64] */
}

def @func_3694(%var_3692: Tensor[(4, 8, 15), float64], %var_3693: Tensor[(4, 8, 15), float64]) -> (Tensor[(4, 8, 15), float64],) {
  %1486 = fn (%var_3665: Tensor[(4, 8, 15), float64], %var_3666: Tensor[(4, 8, 15), float64]) -> (Tensor[(4, 8, 15), float64],) {
    %1481 = cast(%var_3666, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
    %1482 = shape_of(%var_3665, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1483 = cast(%var_3665, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
    %1484 = dyn.reshape(%1481, %1482, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1485 = mod(%1483, %1484) /* ty=Tensor[(4, 8, 15), float64] */;
    (%1485,)
  };
  %1486(%var_3692, %var_3693) /* ty=(Tensor[(4, 8, 15), float64],) */
}

def @func_19094(%var_19022: Tensor[(324, 2), uint16], %var_19045: Tensor[(324, 2), int64]) -> (Tensor[(15), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(324, 2), float32], Tensor[(11, 2, 12), float64]) {
  %1487 = @func_16892() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(324, 2), uint16]) */;
  %1488 = %1487.1;
  %1489 = cast(%var_19022, dtype="int64") /* ty=Tensor[(324, 2), int64] */;
  %1490 = shape_of(%1488, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1491 = cast(%1488, dtype="int64") /* ty=Tensor[(324, 2), int64] */;
  %1492 = dyn.reshape(%1489, %1490, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1493 = multiply(%1491, %1492) /* ty=Tensor[(324, 2), int64] */;
  %1494 = cast(%var_19045, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %1495 = shape_of(%1493, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1496 = cast(%1493, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %1497 = dyn.reshape(%1494, %1495, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1498 = cast(meta[relay.Constant][109] /* ty=Tensor[(324, 2), int64] */, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %1499 = shape_of(%var_19045, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1500 = cast(%var_19045, dtype="bool") /* ty=Tensor[(324, 2), bool] */;
  %1501 = dyn.reshape(%1498, %1499, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1502 = greater(%1500, %1501) /* ty=Tensor[(324, 2), bool] */;
  %1503 = cast(%1502, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %1504 = cast(%var_19045, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %1505 = @func_18833() /* ty=Tensor[(15), float32] */;
  %1506 = power(%1496, %1497) /* ty=Tensor[(324, 2), float32] */;
  %1507 = log(%1503) /* ty=Tensor[(324, 2), float32] */;
  %1508 = cos(%1504) /* ty=Tensor[(324, 2), float32] */;
  %1509 = @func_18474() /* ty=Tensor[(11, 2, 12), float64] */;
  (%1505, %1506, %1507, %1508, %1509)
}

def @func_13823() -> Tensor[(15), float32] {
  @func_13821() /* ty=Tensor[(15), float32] */
}

def @func_15158(%var_15155: Tensor[(1, 50), int16], %var_15156: Tensor[(264), float64], %var_15157: Tensor[(12), uint8]) -> (Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) {
  @func_15153(%var_15155, %var_15156, %var_15157) /* ty=(Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(1, 50), int16], Tensor[(264), float64], Tensor[(364), float64], Tensor[(4, 13, 7), int8], Tensor[(11, 2, 12), float64], Tensor[(12), uint8], Tensor[(11, 2, 12), float64], Tensor[(1, 3, 4), uint8]) */
}

def @func_15874() -> (Tensor[(11, 2, 12), float64],) {
  %1511 = fn () -> (Tensor[(11, 2, 12), float64],) {
    %1510 = @func_13169() /* ty=Tensor[(11, 2, 12), float64] */;
    (%1510,)
  };
  %1511() /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_16008() -> (Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) {
  %1521 = fn () -> (Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) {
    %1512 = cast(meta[relay.Constant][110] /* ty=Tensor[(429), uint64] */, dtype="uint64") /* ty=Tensor[(429), uint64] */;
    %1513 = cast(meta[relay.Constant][111] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %1514 = reshape(%1512, newshape=[429]) /* ty=Tensor[(429), uint64] */;
    %1515 = reshape(%1513, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %1516 = @func_3360(%1514, %1515) /* ty=(Tensor[(10, 5, 13), bool], Tensor[(10, 5, 13), uint16], Tensor[(3, 13, 11), uint64], Tensor[(429), uint64], Tensor[(12), uint8]) */;
    %1517 = %1516.1;
    %1518 = cast(%1517, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
    %1519 = @func_13981() /* ty=Tensor[(15), float32] */;
    %1520 = log2(%1518) /* ty=Tensor[(10, 5, 13), float64] */;
    (%1519, meta[relay.Constant][110] /* ty=Tensor[(429), uint64] */, meta[relay.Constant][111] /* ty=Tensor[(12), uint8] */, %1520)
  };
  %1521() /* ty=(Tensor[(15), float32], Tensor[(429), uint64], Tensor[(12), uint8], Tensor[(10, 5, 13), float64]) */
}

def @func_6227(%var_6196: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32],) {
  %1522 = cast(%var_6196, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
  %1523 = asin(%1522) /* ty=Tensor[(9, 7, 14), float32] */;
  (%1523,)
}

def @func_15069() -> (int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) {
  %1524 = @func_13611() /* ty=(Tensor[(15, 1, 1), float32], Tensor[(5, 1, 10), int16], int16, Tensor[(50), int16], Tensor[(11, 2, 12), float64]) */;
  %1525 = cast(meta[relay.Constant][112] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1526 = reshape(%1525, newshape=[6, 11, 4]) /* ty=Tensor[(6, 11, 4), float32] */;
  %1527 = @func_1692(%1526) /* ty=(Tensor[(6, 11, 4), float32],) */;
  %1528 = %1527.0;
  %1529 = cast(%1528, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
  %1530 = @func_12734() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15), float32]) */;
  %1531 = %1524.2;
  %1532 = cosh(%1529) /* ty=Tensor[(6, 11, 4), float32] */;
  %1533 = %1530.1;
  (%1531, meta[relay.Constant][112] /* ty=Tensor[(264), float32] */, %1532, %1533)
}

def @func_20429() -> (Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) {
  @func_20427() /* ty=(Tensor[(11, 2, 12), float32], Tensor[(11, 2, 12), float64]) */
}

def @func_20275() -> (Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) {
  @func_20273() /* ty=(Tensor[(15), float32], Tensor[(12, 1), uint8], Tensor[(12), uint8], Tensor[(28), bool]) */
}

def @func_12238() -> (Tensor[(15, 1, 1), float32],) {
  %1534 = @func_11043() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %1535 = %1534.1;
  %1536 = cast(%1535, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %1537 = rsqrt(%1536) /* ty=Tensor[(15, 1, 1), float32] */;
  (%1537,)
}

def @func_18027() -> Tensor[(11, 2, 12), float64] {
  %1538 = @func_16069() /* ty=(Tensor[(15), float32], Tensor[(11, 2, 12), float64]) */;
  %1538.1
}

def @func_20344() -> (Tensor[(15), float32], Tensor[(11, 2, 12), float64]) {
  %1539 = @func_15069() /* ty=(int16, Tensor[(264), float32], Tensor[(6, 11, 4), float32], Tensor[(15), float32]) */;
  %1540 = @func_14373() /* ty=(Tensor[(11, 2, 12), float64],) */;
  %1541 = %1539.3;
  %1542 = %1540.0;
  (%1541, %1542)
}

def @func_14968() -> (Tensor[(15), float32],) {
  %1543 = @func_13821() /* ty=Tensor[(15), float32] */;
  (%1543,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen967/build/output.py:4074: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen967/build/output.py", line 4079, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_maximum_kernel0(uchar* __restrict__ T_maximum, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2310) {
    T_maximum[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = max(placeholder[(0)], placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


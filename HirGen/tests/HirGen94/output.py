import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_125 = relay.var("var_125", dtype = "uint16", shape = (8, 7, 3))#candidate|125|(8, 7, 3)|var|uint16
var_126 = relay.var("var_126", dtype = "uint16", shape = (8, 7, 3))#candidate|126|(8, 7, 3)|var|uint16
bop_127 = relay.add(var_125.astype('uint16'), relay.reshape(var_126.astype('uint16'), relay.shape_of(var_125))) # shape=(8, 7, 3)
output = relay.Tuple([bop_127,])
output2 = relay.Tuple([bop_127,])
func_131 = relay.Function([var_125,var_126,], output)
mod['func_131'] = func_131
mod = relay.transform.InferType()(mod)
mutated_mod['func_131'] = func_131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_131_call = mutated_mod.get_global_var('func_131')
var_133 = relay.var("var_133", dtype = "uint16", shape = (8, 7, 3))#candidate|133|(8, 7, 3)|var|uint16
var_134 = relay.var("var_134", dtype = "uint16", shape = (8, 7, 3))#candidate|134|(8, 7, 3)|var|uint16
call_132 = func_131_call(var_133,var_134,)
output = call_132
func_135 = relay.Function([var_133,var_134,], output)
mutated_mod['func_135'] = func_135
mutated_mod = relay.transform.InferType()(mutated_mod)
const_207 = relay.const([[[-9.552463,-3.954385,2.831684,-1.254281],[-0.524864,0.691025,0.442991,-6.260271],[-2.648912,-9.949267,-1.841048,-9.859462],[7.273027,-7.026818,6.324657,8.642699],[6.982104,-0.821838,8.433216,0.624421],[7.138458,2.281859,-2.525987,-6.057161],[0.951437,4.935288,1.020963,-5.749934]],[[0.233976,-7.391393,-2.247847,-6.947670],[2.321710,-5.851223,7.195590,-8.012733],[6.520642,8.481080,3.430023,-6.521576],[0.340631,-6.220641,4.395325,8.164875],[-1.462895,3.677617,0.894501,-9.440511],[6.498244,0.133182,8.700572,7.442670],[7.235786,-1.088878,-3.116513,-8.839976]],[[-6.395053,-4.048416,8.332743,-6.618977],[5.608949,-7.554664,1.731165,8.227043],[1.827423,5.616020,-1.300626,7.325816],[4.351631,2.963391,-1.910517,6.396459],[-0.916384,-9.316606,7.073498,0.300291],[1.481002,5.822009,9.080648,8.284285],[9.892269,4.353167,3.108254,-6.101759]],[[-7.830399,-0.242213,3.225449,3.372828],[4.234673,3.926624,-1.467066,7.332124],[-9.459772,-1.250335,1.500597,-5.034833],[-7.093863,-5.958541,5.724902,-7.527294],[-7.891535,-4.285043,8.122707,-8.340624],[-2.931270,2.470109,-5.909722,-5.797913],[-6.732579,-9.573745,-0.184648,-1.147356]],[[-9.481992,-3.622052,4.399506,0.781625],[1.278425,2.893401,8.810035,9.280152],[4.697374,-2.501220,9.111056,-4.889036],[9.666937,3.119173,-7.708321,-0.405097],[-1.157245,-4.384462,-8.250060,-6.037132],[3.085931,-8.817616,9.613577,-7.833697],[-0.972283,-2.946789,7.402969,3.896273]],[[-1.914584,-2.652781,1.770971,4.428997],[9.131783,3.561478,-3.679170,0.030757],[-3.118272,-9.584083,3.654816,-8.670963],[-2.436339,6.581840,-9.031699,-0.003810],[4.981192,7.250514,-1.192222,9.537908],[-9.272892,8.493269,-8.286482,-1.328864],[-3.836007,-1.295545,-0.703486,8.417097]],[[0.721337,-0.474775,-4.983282,-8.004187],[-5.075440,-8.136178,6.349395,-5.137971],[-2.669279,-9.850987,6.713852,0.100402],[5.554946,5.695765,5.719812,-6.330534],[-5.282463,-9.353909,-7.235787,-6.157643],[-0.051567,5.181987,-5.498869,2.181726],[9.836269,8.946812,-7.452572,-9.447492]],[[-0.243740,8.249496,-6.306530,7.564354],[6.921531,3.166634,-6.116838,-1.173918],[-3.274925,-0.832020,4.608376,-5.201202],[5.275059,5.800137,-9.061492,-8.214775],[-5.369849,-5.980944,9.137105,8.219592],[0.794777,-0.769665,-4.427894,-0.037759],[-3.100770,-4.490673,-2.384519,-8.582468]],[[-2.052713,-2.042673,0.162843,-8.576696],[-4.924590,1.500655,-2.499111,-3.769874],[1.386914,7.693230,3.632538,4.321390],[3.120740,-3.376825,-2.017984,9.682940],[-0.876212,1.437577,-8.373684,9.552203],[3.695000,6.964366,0.461128,4.614579],[-2.246141,4.368567,9.710429,-9.745566]],[[-1.338218,-6.694530,8.828511,6.390773],[2.880271,-5.799502,-2.189629,7.047307],[-6.374072,7.133188,-8.108307,-3.188751],[-8.363354,5.625309,-7.820660,-7.956979],[-1.801032,9.230212,-0.696287,1.425605],[-7.058455,-2.994058,-5.555912,-2.865358],[-8.561351,-4.675686,-0.435037,3.497539]],[[-0.726923,-5.959894,-2.228221,5.281204],[-1.713843,8.412382,-7.410105,-0.646878],[-1.005385,6.795435,-3.468039,6.938283],[-7.424404,-3.608662,-7.495326,6.064629],[-8.095276,-9.497618,-4.873941,5.302474],[-7.402397,0.857359,3.071712,0.342823],[-7.005249,-4.351432,-8.623806,8.135696]]], dtype = "float32")#candidate|207|(11, 7, 4)|const|float32
uop_208 = relay.exp(const_207.astype('float32')) # shape=(11, 7, 4)
uop_213 = relay.asinh(uop_208.astype('float32')) # shape=(11, 7, 4)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
const_227 = relay.const([[-9,-8,6,-2,9,4,10,-8,1,8,5,1,-4,-10,2,-10,-2,-6,6,-3,-1,5,-6,-6,2,1,9,-5,-4,3,9,-10,10,1,6,-10,-2,-8,9,5,7,1,7,-9,8,-8,-5,-10,-4,2,-5,-5,-9,-5,-9,2,-8,2,-6,6,-2,3,-1,-4,-3,5,9,9,4,-6,6,-9,-8,10,1,-10,-10,-2,-5,6,-1,10,-2,7,2,-9,9,5,-8,-5,-2,-3,7,3,-2,-2,1,-4,-2,9,4,4,-5,-3,5,1,3,10,-9,-2,4,-7,-9,-10,-2,4,-6,-9,9,-3,2,-2,9,-4,4,1,-3,3,-7,-2,-1,-5,5,9,8,8,7,6,3,4,8,-5,4,-5,-10,-2,-3,1,2,2,3,1,-2,-6,7,-2,7,-9,5,4,9,10,2,10,1,-4,-3,-6]], dtype = "uint16")#candidate|227|(1, 168)|const|uint16
call_226 = relay.TupleGetItem(func_131_call(relay.reshape(const_227.astype('uint16'), [8, 7, 3]), relay.reshape(const_227.astype('uint16'), [8, 7, 3]), ), 0)
call_228 = relay.TupleGetItem(func_135_call(relay.reshape(const_227.astype('uint16'), [8, 7, 3]), relay.reshape(const_227.astype('uint16'), [8, 7, 3]), ), 0)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
call_234 = relay.TupleGetItem(func_131_call(relay.reshape(call_226.astype('uint16'), [8, 7, 3]), relay.reshape(call_226.astype('uint16'), [8, 7, 3]), ), 0)
call_235 = relay.TupleGetItem(func_135_call(relay.reshape(call_226.astype('uint16'), [8, 7, 3]), relay.reshape(call_226.astype('uint16'), [8, 7, 3]), ), 0)
bop_236 = relay.logical_xor(uop_208.astype('uint16'), relay.reshape(const_207.astype('uint16'), relay.shape_of(uop_208))) # shape=(11, 7, 4)
var_239 = relay.var("var_239", dtype = "float32", shape = (11, 7, 4))#candidate|239|(11, 7, 4)|var|float32
bop_240 = relay.logical_or(uop_208.astype('bool'), relay.reshape(var_239.astype('bool'), relay.shape_of(uop_208))) # shape=(11, 7, 4)
output = relay.Tuple([uop_213,call_226,const_227,call_234,bop_236,bop_240,])
output2 = relay.Tuple([uop_213,call_228,const_227,call_235,bop_236,bop_240,])
func_252 = relay.Function([var_239,], output)
mod['func_252'] = func_252
mod = relay.transform.InferType()(mod)
mutated_mod['func_252'] = func_252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_253 = relay.var("var_253", dtype = "float32", shape = (11, 7, 4))#candidate|253|(11, 7, 4)|var|float32
func_252_call = mutated_mod.get_global_var('func_252')
call_254 = func_252_call(var_253)
output = call_254
func_255 = relay.Function([var_253], output)
mutated_mod['func_255'] = func_255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_328 = relay.var("var_328", dtype = "float64", shape = (14, 7, 12))#candidate|328|(14, 7, 12)|var|float64
var_329 = relay.var("var_329", dtype = "float64", shape = (14, 7, 12))#candidate|329|(14, 7, 12)|var|float64
bop_330 = relay.floor_divide(var_328.astype('float64'), relay.reshape(var_329.astype('float64'), relay.shape_of(var_328))) # shape=(14, 7, 12)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
const_343 = relay.const([[5],[2],[-9],[-6],[10],[3],[9],[5],[-9],[1],[-5],[10],[8],[-4],[6],[-8],[3],[-7],[-10],[-5],[2],[-10],[-10],[-10],[-7],[4],[-9],[-2],[6],[10],[7],[-3],[9],[5],[6],[-10],[9],[-7],[6],[9],[8],[5],[-8],[6],[6],[6],[-5],[-6],[-10],[6],[2],[-2],[7],[-4],[-7],[-8],[8],[2],[-4],[-2],[4],[4],[8],[6],[10],[1],[7],[6],[5],[6],[-3],[-8],[-10],[9],[-1],[-2],[8],[6],[5],[-3],[1],[8],[-9],[1],[4],[-5],[4],[10],[-6],[-5],[9],[-3],[3],[-4],[-1],[-3],[10],[10],[8],[1],[-1],[-1],[-2],[8],[-9],[6],[-2],[6],[6],[4],[-6],[10],[10],[5],[-3],[10],[-7],[-8],[1],[8],[1],[-9],[-10],[-10],[6],[4],[3],[-7],[-5],[-3],[-1],[2],[-3],[6],[8],[-3],[5],[-2],[8],[3],[-8],[-5],[2],[5],[4],[-6],[8],[-2],[10],[-4],[-1],[7],[-8],[5],[3],[-9],[7],[-1],[6],[6],[2],[7],[-10],[3],[-9],[10],[4],[10]], dtype = "uint16")#candidate|343|(168, 1)|const|uint16
call_342 = relay.TupleGetItem(func_131_call(relay.reshape(const_343.astype('uint16'), [8, 7, 3]), relay.reshape(const_343.astype('uint16'), [8, 7, 3]), ), 0)
call_344 = relay.TupleGetItem(func_135_call(relay.reshape(const_343.astype('uint16'), [8, 7, 3]), relay.reshape(const_343.astype('uint16'), [8, 7, 3]), ), 0)
bop_347 = relay.logical_and(const_343.astype('bool'), relay.reshape(call_342.astype('bool'), relay.shape_of(const_343))) # shape=(168, 1)
bop_350 = relay.logical_and(const_343.astype('bool'), relay.reshape(call_344.astype('bool'), relay.shape_of(const_343))) # shape=(168, 1)
output = relay.Tuple([bop_330,bop_347,])
output2 = relay.Tuple([bop_330,bop_350,])
func_351 = relay.Function([var_328,var_329,], output)
mod['func_351'] = func_351
mod = relay.transform.InferType()(mod)
var_352 = relay.var("var_352", dtype = "float64", shape = (14, 7, 12))#candidate|352|(14, 7, 12)|var|float64
var_353 = relay.var("var_353", dtype = "float64", shape = (14, 7, 12))#candidate|353|(14, 7, 12)|var|float64
output = func_351(var_352,var_353,)
func_354 = relay.Function([var_352,var_353,], output)
mutated_mod['func_354'] = func_354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_419 = relay.var("var_419", dtype = "float32", shape = (11, 12, 8))#candidate|419|(11, 12, 8)|var|float32
uop_420 = relay.sqrt(var_419.astype('float32')) # shape=(11, 12, 8)
func_351_call = mod.get_global_var('func_351')
func_354_call = mutated_mod.get_global_var('func_354')
var_427 = relay.var("var_427", dtype = "float64", shape = (1176,))#candidate|427|(1176,)|var|float64
call_426 = relay.TupleGetItem(func_351_call(relay.reshape(var_427.astype('float64'), [14, 7, 12]), relay.reshape(var_427.astype('float64'), [14, 7, 12]), ), 1)
call_428 = relay.TupleGetItem(func_354_call(relay.reshape(var_427.astype('float64'), [14, 7, 12]), relay.reshape(var_427.astype('float64'), [14, 7, 12]), ), 1)
bop_450 = relay.less(var_427.astype('bool'), call_426.astype('bool')) # shape=(168, 1176)
bop_453 = relay.less(var_427.astype('bool'), call_428.astype('bool')) # shape=(168, 1176)
uop_463 = relay.acosh(uop_420.astype('float64')) # shape=(11, 12, 8)
output = relay.Tuple([bop_450,uop_463,])
output2 = relay.Tuple([bop_453,uop_463,])
func_465 = relay.Function([var_419,var_427,], output)
mod['func_465'] = func_465
mod = relay.transform.InferType()(mod)
mutated_mod['func_465'] = func_465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_465_call = mutated_mod.get_global_var('func_465')
var_467 = relay.var("var_467", dtype = "float32", shape = (11, 12, 8))#candidate|467|(11, 12, 8)|var|float32
var_468 = relay.var("var_468", dtype = "float64", shape = (1176,))#candidate|468|(1176,)|var|float64
call_466 = func_465_call(var_467,var_468,)
output = call_466
func_469 = relay.Function([var_467,var_468,], output)
mutated_mod['func_469'] = func_469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_587 = relay.var("var_587", dtype = "uint32", shape = (10, 2, 10))#candidate|587|(10, 2, 10)|var|uint32
var_588 = relay.var("var_588", dtype = "uint32", shape = (10, 2, 10))#candidate|588|(10, 2, 10)|var|uint32
bop_589 = relay.bitwise_xor(var_587.astype('uint32'), relay.reshape(var_588.astype('uint32'), relay.shape_of(var_587))) # shape=(10, 2, 10)
output = bop_589
output2 = bop_589
func_596 = relay.Function([var_587,var_588,], output)
mod['func_596'] = func_596
mod = relay.transform.InferType()(mod)
mutated_mod['func_596'] = func_596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_596_call = mutated_mod.get_global_var('func_596')
var_598 = relay.var("var_598", dtype = "uint32", shape = (10, 2, 10))#candidate|598|(10, 2, 10)|var|uint32
var_599 = relay.var("var_599", dtype = "uint32", shape = (10, 2, 10))#candidate|599|(10, 2, 10)|var|uint32
call_597 = func_596_call(var_598,var_599,)
output = call_597
func_600 = relay.Function([var_598,var_599,], output)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
const_945 = relay.const([[[True,True,False,False,True,True,False,True,True,True,True,False],[True,False,True,True,True,False,False,False,False,True,False,True],[True,True,False,True,False,True,False,True,True,False,True,False],[True,False,True,False,True,True,False,False,True,False,True,True]]], dtype = "bool")#candidate|945|(1, 4, 12)|const|bool
const_946 = relay.const([[[True,True,True,True,False,False,False,True,False,False,False,False],[False,True,False,True,True,True,True,True,False,False,False,False],[True,True,False,False,False,True,False,True,False,True,True,False],[False,True,True,False,False,False,False,False,True,False,True,True]],[[True,True,False,True,True,False,False,False,True,False,True,False],[True,True,True,True,True,False,False,True,False,True,True,False],[True,True,False,True,True,True,False,False,False,False,False,False],[False,False,False,True,False,True,True,False,True,True,True,False]],[[True,True,True,True,True,False,True,False,True,True,True,False],[True,True,False,True,True,False,True,True,False,False,True,True],[True,False,True,False,True,False,False,True,False,True,False,True],[True,False,True,False,True,True,False,False,False,True,False,False]],[[True,True,True,False,True,False,True,True,True,False,True,False],[False,False,True,False,True,False,True,True,False,True,True,True],[False,False,False,False,True,False,False,False,True,False,False,True],[False,True,False,True,True,True,False,False,True,True,False,True]],[[True,False,False,True,True,True,True,True,True,True,True,False],[True,False,True,False,False,True,True,False,True,True,False,False],[True,False,False,False,True,True,True,True,True,True,False,False],[True,True,True,False,False,False,True,True,False,False,False,False]],[[True,True,True,False,True,True,True,False,True,True,False,False],[False,False,True,True,True,False,True,False,True,False,True,False],[True,False,True,True,False,True,False,True,True,True,False,False],[False,True,False,True,False,False,True,True,False,True,False,False]],[[True,False,False,False,False,True,False,True,True,False,True,True],[True,True,True,False,False,True,False,False,False,False,True,False],[True,False,True,True,True,False,True,False,False,False,True,False],[True,True,False,True,True,True,False,True,False,True,True,False]]], dtype = "bool")#candidate|946|(7, 4, 12)|const|bool
bop_947 = relay.logical_and(const_945.astype('bool'), const_946.astype('bool')) # shape=(7, 4, 12)
func_351_call = mod.get_global_var('func_351')
func_354_call = mutated_mod.get_global_var('func_354')
const_980 = relay.const([6.419074,-8.650068,7.437747,-4.933727,-1.810220,9.593200,-0.861308,2.057498,-0.144733,-8.547264,-2.509193,2.357903,1.795841,2.161461,-2.229297,4.880203,-3.348746,-2.189152,6.149426,6.027357,-9.665236,-9.114963,1.530327,8.240506,-2.555498,2.510819,6.287259,1.902188,0.755618,-3.651853,7.294949,-4.300604,7.173993,-0.902280,5.824200,3.092683,-2.077352,-4.991261,0.490477,5.094147,1.831364,-4.799691,4.143601,3.168331,9.615097,9.813229,4.975223,-2.696865,-3.916820,7.995614,-4.301475,2.250835,-6.603278,4.873414,7.779698,2.572547,2.236704,2.853664,-7.951420,5.553670,-9.738542,-5.154706,-0.082106,0.745989,9.339887,-5.450450,1.087186,0.957837,6.958184,4.688748,1.783793,6.911509,-9.938564,-2.263370,0.103573,-9.831348,-6.362618,5.772822,5.867484,0.703551,1.459615,0.447701,8.558263,-0.322628,1.445635,2.463640,1.349513,2.119104,5.161614,-9.159845,6.500525,0.876245,4.863416,1.580620,7.700549,-3.233382,-7.503575,8.907308,-1.785395,3.752394,0.418589,-0.483701,3.694439,-9.762997,5.405487,-1.435129,-8.564051,-4.375852,-5.994206,-1.582727,-9.986346,7.906416,-9.039537,-6.085214,-1.211649,-2.128834,-0.488319,-9.238323,-1.874274,3.171138,5.377293,7.909602,5.127178,-8.688265,5.439591,2.258582,2.695832,-6.779603,3.877640,-7.865366,-6.089881,4.618249,4.000142,2.228547,-7.212014,-7.991991,-9.822236,3.260401,5.994932,2.962968,2.717567,2.034650,2.658929,-2.645245,-6.524479,5.342391,-3.944739,-9.332179,-7.099851,6.115543,-2.553881,7.809233,5.621705,-9.841068,-3.472683,7.616984,-9.649511,-9.482060,3.848417,-4.208728,8.859509,-8.616039,-0.419911,9.162650,-1.403773,5.731859,-4.568389,3.368360,-2.573984,8.582745,-0.497451,-3.859053,1.078472,-8.255787,0.430520,-0.419127,-5.609300,-8.895233,9.868659,-1.879568,1.061633,-3.200669,-5.560027,9.134873,4.394846,0.515736,-2.915255,-9.602033,-6.073153,-2.215002,0.318976,-2.768921,8.336499,-2.950730,-7.503741,1.442836,3.120853,-9.258780,7.237998,-4.990973,-2.543733,-3.882255,5.893075,-2.429273,-0.444517,3.701034,7.991944,1.938776,3.434679,-4.425777,-3.298307,6.055220,3.823202,3.099640,5.118730,-2.031629,9.214385,-6.037900,5.983331,-4.647748,2.126218,-9.341288,1.903042,-8.735247,3.912984,6.805091,-4.557078,9.832826,-7.459716,-0.765128,-9.320766,1.124772,-0.855089,-7.992100,-1.068648,4.852871,4.225475,-7.910522,3.656752,8.836487,5.894196,2.576899,7.426177,-9.917564,5.957345,3.170764,6.641539,-1.831428,9.193391,8.074420,3.709177,4.488220,-3.860269,-4.688919,-5.180389,1.853386,-4.255751,5.532666,7.609141,6.409619,6.777179,1.672856,2.977168,-4.553994,-2.632049,-9.426329,-5.431775,-5.407419,6.563183,-5.365691,-1.619464,-7.722498,-8.349952,-2.051605,0.363884,3.253727,1.505675,9.375817,-6.466906,7.452629,6.234084,-6.376948,6.821502,6.974416,3.641282,6.089877,1.898520,-9.104743,2.600717,5.981059,-7.752697,1.112871,9.010507,-2.269622,-2.390856,6.608395,3.324085,0.421685,-6.219080,-6.850908,1.151301,-7.748265,0.980261,-5.198930,3.469305,8.201933,-2.603826,9.154015,2.822680,2.442219,9.729762,7.753375,9.757898,-2.343790,0.781661,6.566301,-2.792553,7.743157,9.518053,-1.149708,-5.515666,-4.768709,1.055141,-0.566901,-4.866437,-9.322489,-5.772162,-0.978005,9.218431,-5.790144,3.851170,8.610138,9.936983,8.185787,-9.100419,9.885524,6.698558,-0.948447,-7.337692,8.939944,-8.043176,-8.197298,-7.700584,-0.449998,2.779400,-1.417649,9.369196,-6.878297,8.110884,6.179750,-6.574534,-2.051684,-6.007681,-9.585932,2.617391,6.745027,6.485848,0.148634,9.447384,7.943743,-3.854343,4.158398,2.257007,-9.936943,-9.152943,0.576901,-3.439086,-3.123873,-9.390690,9.939247,6.602555,7.251479,6.968183,-2.960556,8.548723,1.388473,1.789143,5.483216,0.750188,3.753510,6.568718,-2.949180,-7.382031,-7.710602,8.016502,7.406769,9.953533,1.185670,9.072453,9.028116,-7.014039,-9.231502,1.334180,-5.528273,7.205856,-7.302920,-0.511920,-2.987674,-1.329414,4.459036,6.203190,-6.692222,-0.859532,4.123599,3.419240,-2.796462,1.949704,2.907171,-8.429107,0.869317,-5.749550,-5.044788,-8.377550,6.827358,3.211179,-3.289040,5.869774,2.113362,6.154788,4.990111,3.385609,-3.088458,-7.217534,-5.308567,6.898043,-4.636574,1.601308,5.511013,-4.581131,-4.759645,4.015369,-6.307357,0.294100,-6.935207,-9.740697,3.761861,9.412885,-7.256473,-1.679178,-7.440193,8.528451,5.690876,8.335195,-8.663456,6.496487,-2.263482,-2.189195,-5.980806,-8.361383,-3.911513,-8.180029,5.094309,3.361003,-4.222258,-7.514113,5.787646,0.487641,-0.349769,9.385519,-8.928993,-5.617131,-7.094335,4.918175,-0.317331,1.444487,-4.629038,2.784647,-8.905219,-2.471725,-9.697914,5.429379,-1.271017,-0.833198,-5.197485,0.868397,-6.168132,6.160478,-7.788435,0.020689,-2.049910,6.373800,3.224127,-3.851780,8.676003,-3.209951,9.629129,-2.117070,-6.665406,3.655119,-1.746226,-8.756382,-0.598563,4.063655,-6.744255,2.159280,-7.896899,-9.314940,2.854851,4.037676,0.197323,-9.367887,6.154333,-8.221014,6.416775,-4.004902,-8.830052,3.809271,-2.707623,-3.168638,1.214510,-5.945972,-9.695933,0.103645,1.172753,9.270776,-2.578793,-6.326851,-6.585730,-6.458208,-5.185776,1.728822,9.337313,5.214390,-9.677166,-1.071234,6.948720,5.807480,3.857775,-2.476291,7.384089,6.726543,6.649772,9.227312,-0.239104,-0.288451,8.891415,-0.701531,-5.589829,-7.483529,0.173937,-1.886550,0.075600,-6.672780,7.252252,-1.488731,-0.417889,-4.171468,2.115934,3.404184,9.083346,-1.250551,-9.655570,2.390661,-3.075323,9.716764,9.884422,-5.717525,2.642440,1.146462,2.427985,0.917136,-9.311418,-5.252198,7.490170,1.687500,3.543791,9.217179,-6.667050,-0.670911,5.467569,-6.356804,7.240419,7.374692,-3.329328,1.483883,-8.987290,9.217448,9.904233,-2.222824,-5.652688,1.536790,6.338720,2.298690,-2.436180,-4.017113,4.475035,-8.662084,-0.505809,0.496892,-3.739950,-4.723779,9.443030,3.259321,7.198654,0.171977,-8.008912,1.251872,-0.672969,2.817044,-2.386007,-8.669590,4.446843,2.319991,-9.948794,-4.056740,1.351157,-9.070862,-1.066689,4.275534,6.706354,4.502476,-3.334049,-8.926367,2.524609,6.639286,2.226286,6.873247,-8.037643,-7.832631,7.412787,0.026342,-1.882634,2.145759,-2.156077,-2.752118,-2.574633,6.021077,1.855250,6.995408,0.940678,-8.458198,-5.900547,5.723846,-6.668220,9.065158,-9.152752,8.552977,-7.347544,-4.816705,5.493190,3.595075,-5.688045,-9.338156,-6.310229,2.812641,-5.475216,-7.166257,4.521055,7.200595,-8.839526,-9.085709,-1.867541,4.800689,-8.224841,8.986940,-9.021508,5.574766,1.444687,-4.265025,7.563606,6.993447,-9.681408,-9.391892,-8.591174,3.279642,4.050823,7.782959,9.209136,-8.421728,-6.920640,-0.141018,-1.389524,-0.425184,7.467450,1.251003,-2.263451,9.463330,0.313522,-4.848329,7.475491,-4.146604,2.962653,-1.391115,-2.214704,4.155248,-6.433413,0.612350,3.281259,-6.360768,5.880923,-0.655029,3.195129,-8.124868,6.449731,-3.450665,-3.110068,0.078971,-1.975531,5.324753,6.199137,-6.716567,-4.172335,-5.111190,6.267718,-8.155866,1.366818,-1.614170,-3.039335,1.523535,4.989550,6.802620,-3.962930,-3.319584,-7.085045,5.049647,-1.210801,-2.551730,4.367517,-4.543720,1.763515,1.156096,6.306715,9.994916,-2.351738,-1.480983,-1.696806,-8.757433,-2.824056,-1.921765,-3.314549,-1.650744,7.940358,5.450699,-6.112772,4.849436,-0.023797,-1.267381,-9.776922,-1.046211,-8.620342,-0.439958,-7.529016,5.773395,6.373523,8.929747,7.856590,-2.031966,-0.727805,8.185747,-1.792832,0.635501,-9.858047,-3.321061,6.145595,4.719643,9.604636,4.323232,-7.114412,8.996366,-8.457525,7.634481,-0.158383,-3.382109,6.107953,3.623942,-2.888706,1.455512,-5.742626,0.034043,-2.848168,4.837550,-1.901741,5.045970,6.697187,3.258668,3.495703,9.499666,-9.723761,6.323162,-9.615480,8.117123,4.223378,1.892504,2.797513,1.091384,1.304299,6.170210,9.116837,6.831830,4.731956,-0.132975,7.631732,8.805140,7.129865,-7.253202,1.373138,-7.667561,-2.542273,3.018723,-2.555612,2.909623,8.093861,-9.365732,7.407281,-4.182130,-6.745574,8.890893,-2.093235,3.806266,0.785918,4.902103,-1.472388,2.811703,5.392680,-4.559174,-2.594606,-9.139947,-4.103052,-8.472986,-7.489045,9.413697,-0.494293,-2.465938,4.650011,-8.069982,1.726173,4.653677,-4.707299,-5.459097,6.073043,6.985949,-6.275200,-6.120770,-8.998454,-1.788880,1.063895,0.281088,3.746709,-8.070049,-6.136712,4.216617,3.900008,5.432948,-9.756073,7.482639,-4.629626,9.234860,-4.276492,6.077230,-5.187540,5.514198,1.022536,9.833871,9.948250,9.696361,9.763347,7.189859,-4.804106,-9.847017,6.953181,-8.649306,-1.473440,-6.572194,1.646583,-8.113803,-3.422627,3.515803,-0.722920,-7.091832,8.850645,2.103089,-4.272328,3.851500,9.369582,0.569304,7.699297,-9.934832,6.294343,9.236873,8.627063,8.674588,3.022322,0.182744,2.935409,5.917645,-9.005853,0.424723,-0.640977,6.547347,-7.506092,-3.975908,-8.995469,-8.805121,6.336827,9.075469,9.063911,-5.608261,6.989479,-0.273769,0.436923,8.948026,0.616281,7.103898,8.905375,4.497097,3.331471,-2.061029,8.349690,-9.279210,-7.232886,7.229112,-0.106562,-7.240419,8.144082,-3.538822,4.652667,-3.161104,4.847290,-1.033523,-0.976901,-3.842386,2.849189,-3.547199,5.002924,8.053686,-2.781739,9.530953,0.623372,-1.560844,8.910107,8.923960,5.045720,9.318074,5.774481,5.115344,1.815912,-5.378917,-5.536336,2.169718,8.926460,8.936717,4.030789,-1.844220,6.757357,-7.193191,2.024649,2.613917,9.643365,3.358557,-7.713318,5.960905,0.301603,-0.104691,-3.104540,4.668757,-2.685195,1.970388,-6.577427,-2.016228,-3.461362,-5.195837,4.196104,-6.808813,-9.841510,2.285336,7.597823,-9.176813,-8.786427,-5.991832,0.490780,-5.418986,2.111200,2.589751,2.250515,1.988339,-5.163371,-8.222548,7.910242,7.146608,-3.275106,-8.248783,0.887992,-5.187353,8.965565,-3.218831,3.764711,-3.999110,-6.533095,-9.327350,-6.114374,6.461595,6.233668,-2.523189,6.316845,-5.753070,-0.883075,1.038501,7.150704,-6.237153,-8.710840,7.509754,4.831240,-1.057535,-6.330287,-8.917441,-7.772451,1.466923,8.084176,-2.518094,1.710465,-9.154737,3.847117,3.637064,-7.736963,9.573481,-8.142965,-0.481998,9.280348,6.588435,8.740174,-0.857940,-1.109618,9.051045,4.202454,-0.784791,-3.031047,-9.089348,-6.966343,-8.903512,0.874439,9.703905,0.273862,-0.698265,8.247381,-9.847379,7.006377,-8.384884,-4.342356,9.350493,-8.601006,5.748455,-1.498222,-1.802553,9.114867,8.400083,8.969141,3.968566,-0.851822,1.023596,5.388820,-8.184820,-9.011496,-4.097742,-8.836926,-0.756177,7.024429,4.610776,2.763207,-9.295085,2.101717,-6.578311,1.116117,2.867134,2.283175,3.914113,-2.989201,9.886949,-1.127778,6.315199,4.720664,3.235954,9.845947,-8.245634,7.131489,-8.401556,1.736005,0.684486,-7.751161,-3.598244,3.912405,-3.124964,-1.674459,-5.751161,-0.059451,5.135595,0.488430,-7.784665,-6.561012,2.346512,-4.410630,-1.184104,-8.576016,-7.834712,-1.188231,-2.805884,-2.423145,4.398643,-4.021690,0.985144,5.843996,-2.295884,-2.245688,-6.085648,-3.078721,-9.919347,7.535838,-3.183635,-2.454969,-8.742267,7.778193,-7.032313,2.515716,-6.707434,4.394113,-7.510640,1.463606,2.550438,-2.782636,-5.900813,0.161907,1.039788,5.633604,7.556123,-6.167401,-4.953479,-9.322614,8.270349,-5.838196,-9.542455,2.168716,-3.409477,2.428052,-1.617660,3.310224,-0.119542,8.274438,7.279171,4.695615,-8.377327,-9.275529,-8.605133,5.605545,9.577021,1.546349,4.867187,-2.197700,3.631086,4.440833,6.371580,-9.283753,-7.260414,2.432761,-1.030960,-8.617755,-0.879417,0.630236,6.858273,-4.268677,-5.352501,-0.628124,3.992826,-5.468823,1.001078,-1.374872,-6.626450,-3.996586,2.802254,0.447948,7.129765,-9.417129,-8.666125,-9.577543,0.802969,-5.562942,-3.225680,7.756366], dtype = "float64")#candidate|980|(1176,)|const|float64
call_979 = relay.TupleGetItem(func_351_call(relay.reshape(const_980.astype('float64'), [14, 7, 12]), relay.reshape(const_980.astype('float64'), [14, 7, 12]), ), 0)
call_981 = relay.TupleGetItem(func_354_call(relay.reshape(const_980.astype('float64'), [14, 7, 12]), relay.reshape(const_980.astype('float64'), [14, 7, 12]), ), 0)
var_982 = relay.var("var_982", dtype = "bool", shape = (3, 4, 12))#candidate|982|(3, 4, 12)|var|bool
bop_983 = relay.equal(const_945.astype('bool'), var_982.astype('bool')) # shape=(3, 4, 12)
func_596_call = mod.get_global_var('func_596')
func_600_call = mutated_mod.get_global_var('func_600')
var_989 = relay.var("var_989", dtype = "uint32", shape = (200,))#candidate|989|(200,)|var|uint32
call_988 = func_596_call(relay.reshape(var_989.astype('uint32'), [10, 2, 10]), relay.reshape(var_989.astype('uint32'), [10, 2, 10]), )
call_990 = func_596_call(relay.reshape(var_989.astype('uint32'), [10, 2, 10]), relay.reshape(var_989.astype('uint32'), [10, 2, 10]), )
var_991 = relay.var("var_991", dtype = "bool", shape = (3, 4, 12))#candidate|991|(3, 4, 12)|var|bool
bop_992 = relay.less(bop_983.astype('bool'), relay.reshape(var_991.astype('bool'), relay.shape_of(bop_983))) # shape=(3, 4, 12)
output = relay.Tuple([bop_947,call_979,const_980,call_988,var_989,bop_992,])
output2 = relay.Tuple([bop_947,call_981,const_980,call_990,var_989,bop_992,])
func_998 = relay.Function([var_982,var_989,var_991,], output)
mod['func_998'] = func_998
mod = relay.transform.InferType()(mod)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_998_call = mutated_mod.get_global_var('func_998')
var_1000 = relay.var("var_1000", dtype = "bool", shape = (3, 4, 12))#candidate|1000|(3, 4, 12)|var|bool
var_1001 = relay.var("var_1001", dtype = "uint32", shape = (200,))#candidate|1001|(200,)|var|uint32
var_1002 = relay.var("var_1002", dtype = "bool", shape = (3, 4, 12))#candidate|1002|(3, 4, 12)|var|bool
call_999 = func_998_call(var_1000,var_1001,var_1002,)
output = call_999
func_1003 = relay.Function([var_1000,var_1001,var_1002,], output)
mutated_mod['func_1003'] = func_1003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1271 = relay.var("var_1271", dtype = "int32", shape = ())#candidate|1271|()|var|int32
var_1272 = relay.var("var_1272", dtype = "int32", shape = (4, 15, 3))#candidate|1272|(4, 15, 3)|var|int32
bop_1273 = relay.multiply(var_1271.astype('int32'), var_1272.astype('int32')) # shape=(4, 15, 3)
bop_1292 = relay.subtract(var_1272.astype('float32'), var_1271.astype('float32')) # shape=(4, 15, 3)
func_465_call = mod.get_global_var('func_465')
func_469_call = mutated_mod.get_global_var('func_469')
const_1310 = relay.const([-0.009998,9.203932,-4.764856,-9.006846,-0.960978,-1.377308,-6.562185,9.951314,-9.494199,-2.975248,-7.801279,5.269179,4.228780,1.302361,5.261450,-5.117371,-1.233254,6.649135,0.591484,9.504030,-5.385632,-7.706299,1.894977,1.779378,-6.232356,-6.539835,-5.278251,5.398180,-5.104033,1.311668,4.703592,2.816017,4.021101,-3.394289,-1.009524,-2.886114,-5.176561,0.520593,-8.060955,3.393831,-0.820617,7.393510,-7.752156,0.744961,5.497059,-1.308326,-7.555385,-9.646038,-5.924583,-7.789555,-0.470879,1.316828,7.312338,9.543991,-8.756534,-1.731471,-7.203885,4.973272,-2.754153,2.307257,0.219904,0.138009,7.011082,1.254925,-0.247906,3.272292,-6.643689,3.966564,1.081595,9.499246,-6.581991,4.790056,4.441512,4.667406,7.306595,-6.714025,-3.878870,-9.312423,6.793873,4.537046,1.659624,4.754497,8.238817,2.410448,8.528905,-6.796168,4.396933,-3.653914,8.766317,-0.946859,2.907359,5.180616,-8.916864,2.077293,-2.937051,-1.559318,8.755670,6.610497,-5.007312,-9.633564,-5.503856,0.730666,-9.250403,-9.730272,2.122346,-0.205060,6.985298,-5.006610,5.535713,-0.854188,-6.010887,6.607525,-9.480757,4.818137,5.073514,-8.354000,-3.767660,9.010488,6.189636,-1.230790,4.353625,1.358021,7.491549,-4.040876,-3.847532,-4.713408,7.531567,-6.337525,-1.123514,4.628364,2.028100,3.690947,7.889364,-8.565345,8.145875,-6.328709,9.360731,1.013872,9.544834,3.412480,-1.924840,0.940264,6.420770,7.362509,7.010166,-0.691972,-5.346071,-1.784851,-4.572532,8.587809,-8.595736,-6.506707,3.159893,-5.026011,-9.688410,-9.436016,8.215963,-2.644137,-0.410271,-8.200763,-3.344479,-1.099117,5.049416,6.214972,-9.645203,7.559464,-6.753096,-0.415966,3.395353,-3.838441,5.138973,0.520111,-8.106305,2.594672,6.207961,-5.353498,-6.467126,1.746473,-6.069572,-0.498415,4.705417,3.103875,2.874300,2.781634,-1.092990,-0.070549,5.005629,-0.565865,-7.452658,-5.951847,7.722036,4.998408,3.640943,1.447948,5.030951,-5.003038,5.934466,-8.492439,-5.391604,-6.081267,-8.295675,-4.574300,-6.204070,7.038878,-4.273323,-8.210601,4.871572,-6.507082,-4.944151,-9.950940,3.673235,-6.786270,-1.247767,3.017312,9.799580,4.462409,9.082963,4.767603,-0.781459,-3.497701,-4.104359,-8.750399,-7.113379,-3.096465,3.698368,7.388185,-1.755289,5.247583,-0.848847,6.294179,-4.282269,2.237134,-5.441576,2.774044,-8.814031,5.155937,1.386138,-7.616925,-4.893511,-8.623592,3.095530,-0.634544,-6.865877,-3.889559,4.256177,-3.385965,-5.745610,4.098032,-7.725456,6.548584,-7.213274,6.469292,-9.897309,7.988091,-7.054473,-4.377117,5.418890,8.443347,3.100808,9.612714,6.929580,-1.200275,8.634122,-2.291472,6.955048,-4.389349,5.413782,7.694916,5.902370,-3.683084,-7.261939,8.202386,-9.315292,1.888420,-9.663938,-0.018086,-2.995334,1.448318,-4.348991,9.104355,4.995077,3.225655,2.166800,4.939066,3.133893,0.847825,-4.144515,-4.519933,9.091097,-0.872436,-9.507227,-9.422346,-3.154800,-6.770024,9.955149,-9.776715,-0.330984,6.225756,-5.438552,-9.977976,0.543284,6.339605,1.352806,-9.574196,-3.206762,-9.454824,9.964770,9.897058,9.843479,-3.191693,-2.719517,3.206143,-6.964032,-2.082498,4.926757,-4.890135,-0.221066,9.258548,6.729074,0.490681,-8.163723,-8.238984,-4.254060,1.245845,-5.875202,-6.114206,-2.272319,9.704260,5.901387,5.375815,-8.484592,6.097650,-1.730941,-6.315992,-0.396735,5.325708,-0.953732,-5.019513,5.244969,-5.153561,4.568755,-8.931747,-9.565426,-4.629025,-4.694112,8.953215,5.008121,4.083387,3.383776,-7.868118,6.418681,-0.764283,7.962391,-9.969546,9.110214,-2.261282,-9.929736,-3.462611,-9.850021,-1.755684,1.166059,-1.507031,-6.314651,-6.893948,2.744493,1.274609,-5.005649,-7.520824,-2.231513,-2.266417,1.368330,-1.355947,-6.641861,2.470468,4.126356,3.449432,0.993675,3.508416,6.875702,3.253473,-2.024339,-9.739352,-7.455246,7.849683,4.402620,-5.817407,-7.421480,-8.886974,-2.564847,-9.838405,8.430209,-8.194126,3.781188,-3.194822,7.223500,8.205160,-4.076000,-8.039829,1.345507,1.751122,5.840244,4.817692,-7.616764,-9.469161,5.789647,-8.029564,-9.801944,8.854599,7.790163,6.861102,1.758005,-1.036369,-4.491145,5.129855,-7.642924,-4.696510,-0.579824,-3.454884,-1.329997,7.319686,9.932289,-3.132759,-0.226446,3.823558,-7.232865,-1.421927,1.184437,8.608196,8.225177,0.447299,-5.853304,-4.962448,-8.849673,9.039127,7.290274,-8.177512,2.321887,3.119875,5.869721,5.182885,1.413347,4.723626,-8.861735,-9.836608,4.901513,-2.479232,2.751935,9.456410,8.399688,-2.059119,6.701175,4.841780,-7.670713,7.450220,9.269006,7.573184,-6.013079,8.778255,8.160837,0.070769,-9.654036,-5.679976,-2.931978,8.050192,9.236380,-8.353468,-6.484315,8.338381,-4.631690,-2.823823,2.436062,-1.900691,8.622905,-5.106009,5.131962,3.941496,6.607511,-5.502699,3.654061,5.866566,7.627894,-4.958956,0.098003,-8.154781,-0.118245,0.946267,-5.178799,6.129136,-7.840657,9.474323,0.386862,0.543908,-0.844494,-3.170283,1.231098,-3.970291,-8.546172,-6.663750,-8.974073,4.038508,-4.847158,-6.771716,3.193970,-8.689423,-9.696370,5.621559,-3.474555,-6.414514,-2.008559,1.222102,7.705382,4.808087,-5.369743,8.923530,-2.908671,1.789502,-3.592710,-4.171100,7.345703,6.594402,-7.677393,-5.284731,4.748460,7.294920,2.912049,7.580971,3.785364,-2.443353,-4.923634,-1.196073,9.024216,6.808606,-1.239190,3.942475,-9.437529,0.442325,0.683250,-2.697365,-6.920009,1.653245,-2.270346,-1.522444,1.721735,3.948714,4.835254,-0.895470,4.203722,-1.637349,6.530575,0.723912,-9.355050,-8.624996,-7.674227,-3.326061,9.961057,4.939838,-3.768695,5.036999,-5.621931,2.647177,-2.727992,-1.073529,-3.040387,0.760789,-7.514008,7.644063,6.810406,6.286217,-3.886530,9.631709,8.158685,6.683152,-4.474766,6.120064,4.956938,-0.106983,-0.835880,7.595626,7.670148,0.390552,-4.022630,-7.257693,-7.693631,3.089875,5.839883,-3.882812,8.757822,-4.204439,-1.253498,8.767650,6.091560,-4.915617,-2.614989,-9.253374,-3.173818,-4.463446,-8.738615,5.212594,-5.739014,-7.619274,8.506523,-8.835108,-2.678332,-9.666564,-2.892371,0.231630,-3.938361,9.971714,5.622584,-1.414951,5.411408,-1.182370,-3.323316,5.981160,2.578808,-6.746671,-5.611297,2.597513,-8.438319,-9.502614,2.862154,-6.488343,4.461534,6.692121,3.970179,-4.698265,-4.760829,-2.189387,-1.394657,4.800384,5.779282,-7.719071,-1.028699,6.579576,-0.466753,1.757657,6.144515,9.413544,1.307571,1.510016,-3.050960,-2.501147,2.958124,0.862576,-8.230971,7.698759,6.649765,5.900599,1.155061,-3.696157,-4.464835,-8.038199,6.678578,-7.363001,-8.441701,3.849218,-5.316919,1.119143,-8.812866,7.833442,6.051414,0.695881,8.299058,-2.330027,7.956015,-4.848855,-9.476238,8.236858,-3.126869,-6.689850,4.273115,5.849703,9.481189,0.379466,-0.762638,-9.086749,9.216022,-0.192255,3.241157,-2.370772,8.779250,-2.984264,8.036270,0.293022,-3.797178,-9.502414,4.016377,3.860057,-7.757267,-6.354235,2.430125,-5.646926,-7.838669,1.706130,7.696585,-9.737037,-9.804597,-5.699502,-1.154934,1.094751,2.603692,6.804425,-8.941475,-2.192687,5.733546,1.796219,1.580595,-4.248740,-9.322506,4.433696,7.280561,-8.316376,5.512546,9.025098,-5.305901,-6.318841,-2.306049,-2.565742,-2.509417,5.838598,1.411386,-2.790571,-0.562622,0.286000,1.727839,-3.079236,-4.672504,-1.564006,4.744110,-3.142031,4.268395,3.414278,-2.515442,-9.585390,-2.970781,-5.410804,-4.233281,7.269944,5.155204,1.035023,7.363844,3.371794,-6.432822,6.436000,4.172735,1.117633,-0.508550,-6.224039,-9.174344,8.243339,-6.756923,-0.946133,2.409316,5.765249,-5.624572,0.206186,-9.606903,-7.661529,-5.595591,-4.971492,0.444260,-7.900389,9.983363,-6.777529,6.390461,-9.810996,0.271247,-3.753887,-9.941594,-0.610381,-3.883029,3.312443,-8.211622,9.899253,5.993605,6.001593,0.160006,0.934593,-7.876869,-2.406784,8.284147,-6.384514,-3.429122,1.725518,-2.870511,9.773048,9.745837,-8.687396,-0.678335,6.967534,0.566338,-9.961112,-6.020530,3.105747,9.320222,4.853164,9.332315,-3.940444,-7.896860,-7.845747,4.832255,-8.024318,-2.430284,-9.811432,-4.291994,3.509411,-4.367953,5.168962,3.931572,-3.851507,-0.069533,6.724548,8.809825,1.474375,-3.229682,-7.773435,-3.499174,-1.108824,3.248533,6.890850,-7.948932,-3.812533,3.514246,-5.674282,-4.961406,9.575393,-6.949373,-9.301086,-7.758742,9.873642,-4.248525,-0.154277,-9.851122,4.420538,-0.072737,-8.196911,6.823467,5.325707,-1.679071,8.670798,-6.844501,0.865139,-0.334965,-6.266501,-2.424100,2.967141,-9.946590,9.152789,-5.697749,-2.478805,3.476898,-3.461159,6.772646,1.021772,8.580734,1.266518,-1.081040,-7.961433,-2.596575,1.080157,-5.747317,7.265560,2.466521,-0.410398,-6.615562,-1.191418,9.045866,-6.343410,-2.310119,-4.867509,6.514279,-8.617103,-1.998843,-7.749767,4.592760,5.753530,-8.438818,-7.712031,0.851427,5.733555,-1.203738,-5.014331,-5.693111,-1.026838,-2.890287,-8.085347,-0.882162,7.705359,8.853863,-9.550386,-3.584174,1.937631,-8.354516,-6.733740,-7.331963,9.448282,9.372918,-3.272946,0.712799,-2.762240,1.595088,8.079828,4.324802,-3.824293,-3.679910,-1.424515,6.421792,0.516075,1.276470,8.625905,1.046557,-5.103728,-6.856259,7.741814,-3.816487,-2.880172,-8.255578,5.231922,-5.269300,8.503062,-5.190900,9.917798,8.232630,-9.866851,-2.414948,-8.734606,-3.411242,-7.452232,5.866501,-2.908758,-1.109667,1.008660,-0.799434,-0.521727,-8.272271,1.243689,9.593208,-5.056321,3.490460,-9.867927,7.415649,-2.527857,2.688934,-7.433053,-2.861537,-7.941770,0.487581,4.334921,5.970161,2.374710,6.878762,-5.229769,5.319600,5.203910,7.431506,9.243329,-5.808571,8.191581,-9.249884,-1.322999,-3.051141,5.322587,-5.505021,-2.783820,8.191081,-9.808449,-6.975679,6.700460,9.497747,9.055476,-6.286560,9.355738,-3.642272,8.678597,2.385960,4.143756,-8.426502,7.157314,8.269498,-8.859471,4.794920,-9.188456,-1.515479,-4.469649,-7.414675,-3.155021,-5.728383,-3.714611,-4.557284,1.921419,3.807097,-0.401451,-5.474698,8.750354,4.468995,-7.602623,-2.842910,-0.339649,-9.307782,-0.223658,-3.655883,-1.209879,3.557072,2.724403,-8.745992,1.374203,3.717606,5.497984,2.947030,-2.361650,2.975968,-7.775699,9.902287,-6.164366,5.999480,-5.691349,5.806993,-9.195563,9.513519,4.532783,-7.484199,-7.352733,-8.689823,8.274187,-5.593703,-3.369314,-5.955700,0.066878,8.332500,-5.154633,-3.837777,5.608770,2.182746,-6.429845,2.727712,-7.216680,-9.652903,-6.592125,-2.912789,3.355498,6.729265,-6.233410,-3.192362,8.986951,3.653080,-5.567869,-4.696099,-2.252899,2.447348,8.017454,-6.578933,-3.067813,-4.805266,6.893622,4.203731,0.516015], dtype = "float32")#candidate|1310|(1056,)|const|float32
var_1311 = relay.var("var_1311", dtype = "float64", shape = (1176,))#candidate|1311|(1176,)|var|float64
call_1309 = relay.TupleGetItem(func_465_call(relay.reshape(const_1310.astype('float32'), [11, 12, 8]), relay.reshape(var_1311.astype('float64'), [1176,]), ), 1)
call_1312 = relay.TupleGetItem(func_469_call(relay.reshape(const_1310.astype('float32'), [11, 12, 8]), relay.reshape(var_1311.astype('float64'), [1176,]), ), 1)
output = relay.Tuple([bop_1273,bop_1292,call_1309,const_1310,var_1311,])
output2 = relay.Tuple([bop_1273,bop_1292,call_1312,const_1310,var_1311,])
func_1315 = relay.Function([var_1271,var_1272,var_1311,], output)
mod['func_1315'] = func_1315
mod = relay.transform.InferType()(mod)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mutated_mod.get_global_var('func_1315')
var_1317 = relay.var("var_1317", dtype = "int32", shape = ())#candidate|1317|()|var|int32
var_1318 = relay.var("var_1318", dtype = "int32", shape = (4, 15, 3))#candidate|1318|(4, 15, 3)|var|int32
var_1319 = relay.var("var_1319", dtype = "float64", shape = (1176,))#candidate|1319|(1176,)|var|float64
call_1316 = func_1315_call(var_1317,var_1318,var_1319,)
output = call_1316
func_1320 = relay.Function([var_1317,var_1318,var_1319,], output)
mutated_mod['func_1320'] = func_1320
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1398 = relay.const([[[5,-9,-4,7,3,5,-7,9,-7,5,-2],[-8,10,-3,-7,6,-8,4,-3,-5,-5,4]],[[-3,7,-5,1,3,-6,9,5,-2,8,5],[4,-3,6,-9,-9,-3,-4,1,6,5,6]],[[-3,-2,3,7,-1,7,9,-3,-4,-1,-1],[5,-10,-5,-3,1,-1,3,2,-3,8,-7]],[[3,-5,4,-2,-9,-6,-8,-6,-1,8,-3],[-7,8,7,10,-5,6,8,6,-5,-6,5]],[[-2,-6,-1,7,5,8,4,3,1,-6,10],[9,3,10,-4,3,10,-9,4,-5,-1,-4]],[[10,10,-5,-2,-8,8,4,-1,7,-4,-5],[-7,10,10,7,-8,-3,-10,-5,-3,3,6]],[[-3,6,3,6,3,-9,-5,6,-4,1,-7],[6,-7,-6,-10,8,9,3,3,10,-1,1]],[[-9,-2,-5,10,7,-3,5,-3,-2,-10,6],[-5,-1,7,3,1,-8,4,-7,-5,-10,-7]],[[8,2,4,2,-3,10,-1,7,-6,-5,1],[-8,-4,3,1,-1,-1,-8,-4,4,7,-1]],[[-3,-2,7,5,-7,-8,-6,-4,-10,-6,7],[5,-6,9,5,2,8,-6,1,5,-4,8]],[[-4,7,-9,-7,6,-8,-3,8,6,-5,-5],[-1,4,-4,-9,-10,-7,8,-7,10,7,8]],[[4,-9,5,5,6,-6,-2,-3,-5,5,-8],[-7,10,-10,7,8,-3,2,-10,8,10,8]],[[-8,-2,-4,4,2,8,-1,10,8,9,-2],[9,-5,7,5,-7,8,6,10,3,3,5]]], dtype = "uint64")#candidate|1398|(13, 2, 11)|const|uint64
var_1399 = relay.var("var_1399", dtype = "uint64", shape = (13, 2, 11))#candidate|1399|(13, 2, 11)|var|uint64
bop_1400 = relay.bitwise_and(const_1398.astype('uint64'), relay.reshape(var_1399.astype('uint64'), relay.shape_of(const_1398))) # shape=(13, 2, 11)
bop_1410 = relay.greater_equal(const_1398.astype('bool'), relay.reshape(var_1399.astype('bool'), relay.shape_of(const_1398))) # shape=(13, 2, 11)
func_596_call = mod.get_global_var('func_596')
func_600_call = mutated_mod.get_global_var('func_600')
var_1424 = relay.var("var_1424", dtype = "uint32", shape = (200,))#candidate|1424|(200,)|var|uint32
call_1423 = func_596_call(relay.reshape(var_1424.astype('uint32'), [10, 2, 10]), relay.reshape(var_1424.astype('uint32'), [10, 2, 10]), )
call_1425 = func_596_call(relay.reshape(var_1424.astype('uint32'), [10, 2, 10]), relay.reshape(var_1424.astype('uint32'), [10, 2, 10]), )
bop_1428 = relay.subtract(bop_1400.astype('uint16'), relay.reshape(bop_1410.astype('uint16'), relay.shape_of(bop_1400))) # shape=(13, 2, 11)
output = relay.Tuple([call_1423,var_1424,bop_1428,])
output2 = relay.Tuple([call_1425,var_1424,bop_1428,])
func_1448 = relay.Function([var_1399,var_1424,], output)
mod['func_1448'] = func_1448
mod = relay.transform.InferType()(mod)
var_1449 = relay.var("var_1449", dtype = "uint64", shape = (13, 2, 11))#candidate|1449|(13, 2, 11)|var|uint64
var_1450 = relay.var("var_1450", dtype = "uint32", shape = (200,))#candidate|1450|(200,)|var|uint32
output = func_1448(var_1449,var_1450,)
func_1451 = relay.Function([var_1449,var_1450,], output)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1579 = relay.const([[[4.651879,-0.921557,-6.625713,-2.860163,-0.658025,2.653385,-0.563218,8.058934,-7.055053],[0.205876,-7.086475,-8.649814,-9.607970,-8.770968,-0.814476,2.975139,6.110812,-2.189707],[5.772617,-4.226524,1.016228,3.416989,-8.193851,-7.730636,2.993481,1.767378,5.881999]],[[3.940118,0.733384,3.022733,1.003248,5.853956,-9.432525,6.029271,7.009145,5.062553],[1.417567,-8.549808,8.824108,-3.276220,-5.042294,2.121692,5.762377,7.083890,-4.656492],[5.185241,0.673484,-0.376556,-2.385109,1.852633,1.678296,-6.878284,-4.314213,4.992759]],[[0.912327,-2.782205,1.678604,3.115546,-4.250527,-6.097022,5.567795,-9.944087,-1.806593],[-0.439458,-9.274107,-4.328202,-2.683586,2.018343,2.188251,-9.017526,-5.651017,5.802447],[-2.996196,0.133823,1.131590,-0.851665,2.679011,-8.498393,2.215678,-6.539416,-3.160248]],[[-9.974030,3.020096,4.908631,-8.753164,6.307574,-8.412208,-7.359450,0.334002,0.495093],[6.212005,9.345034,7.152143,0.803938,-5.431130,-4.422127,-3.059732,9.302215,-6.594403],[5.314581,-7.696155,-1.170910,0.008509,-9.230477,-1.237649,1.320469,7.819061,-7.122390]],[[-0.916077,2.778922,1.241818,-2.455928,-6.891532,9.465007,-1.179917,6.838814,3.715235],[-4.476306,8.842761,5.248505,-0.833037,9.447665,4.186926,-1.682260,8.084408,-4.710566],[-4.593548,2.960381,-9.364998,5.576497,2.140441,8.786072,-5.387099,9.705277,-5.640033]],[[2.737548,3.309648,-6.623370,-5.312072,8.512241,5.473564,-6.870695,-8.715676,-3.929705],[-0.409271,8.308278,8.917198,-9.033857,-1.909050,1.118978,-9.414038,-8.383263,2.784902],[-5.990631,7.137671,-9.724776,9.691846,-3.444321,-1.894308,-7.528721,0.238607,-3.021512]],[[5.292866,-0.653436,-1.117346,-1.313295,7.821271,-9.396394,-8.792719,-1.490700,-5.007324],[-2.409400,-0.841364,1.709471,4.094611,3.343539,-9.561640,7.134619,7.369652,3.470937],[6.389633,-9.731703,-8.186898,-7.651653,-2.832349,6.081374,8.924330,-1.089691,-6.640987]]], dtype = "float32")#candidate|1579|(7, 3, 9)|const|float32
uop_1580 = relay.sigmoid(const_1579.astype('float32')) # shape=(7, 3, 9)
func_1448_call = mod.get_global_var('func_1448')
func_1451_call = mutated_mod.get_global_var('func_1451')
var_1594 = relay.var("var_1594", dtype = "uint64", shape = (1, 286))#candidate|1594|(1, 286)|var|uint64
var_1595 = relay.var("var_1595", dtype = "uint32", shape = (200,))#candidate|1595|(200,)|var|uint32
call_1593 = relay.TupleGetItem(func_1448_call(relay.reshape(var_1594.astype('uint64'), [13, 2, 11]), relay.reshape(var_1595.astype('uint32'), [200,]), ), 0)
call_1596 = relay.TupleGetItem(func_1451_call(relay.reshape(var_1594.astype('uint64'), [13, 2, 11]), relay.reshape(var_1595.astype('uint32'), [200,]), ), 0)
output = relay.Tuple([uop_1580,call_1593,var_1594,var_1595,])
output2 = relay.Tuple([uop_1580,call_1596,var_1594,var_1595,])
func_1597 = relay.Function([var_1594,var_1595,], output)
mod['func_1597'] = func_1597
mod = relay.transform.InferType()(mod)
mutated_mod['func_1597'] = func_1597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1597_call = mutated_mod.get_global_var('func_1597')
var_1599 = relay.var("var_1599", dtype = "uint64", shape = (1, 286))#candidate|1599|(1, 286)|var|uint64
var_1600 = relay.var("var_1600", dtype = "uint32", shape = (200,))#candidate|1600|(200,)|var|uint32
call_1598 = func_1597_call(var_1599,var_1600,)
output = call_1598
func_1601 = relay.Function([var_1599,var_1600,], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1618 = relay.var("var_1618", dtype = "float64", shape = (4, 1, 8))#candidate|1618|(4, 1, 8)|var|float64
uop_1619 = relay.atan(var_1618.astype('float64')) # shape=(4, 1, 8)
bop_1622 = relay.subtract(var_1618.astype('int64'), relay.reshape(uop_1619.astype('int64'), relay.shape_of(var_1618))) # shape=(4, 1, 8)
bop_1627 = relay.greater(bop_1622.astype('bool'), relay.reshape(var_1618.astype('bool'), relay.shape_of(bop_1622))) # shape=(4, 1, 8)
const_1640 = relay.const([[[-7.304674,-6.770348,-3.651742,8.232065,-4.013339,-5.822595,7.172420,6.539295],[-6.383465,-8.963228,-5.026340,3.210781,-4.011367,6.968202,-0.327989,-4.734861],[5.710426,1.049225,7.362081,-3.501799,2.876017,-4.660381,4.747284,7.517349],[2.801422,0.508013,7.317386,-9.455914,-0.885182,8.297097,-5.607694,-9.034376],[9.868716,5.906195,-3.642121,-2.187045,-6.942100,-7.863822,-5.399081,9.553495],[5.063672,0.687337,0.216375,7.955834,7.554976,-0.937980,-0.905484,-9.732168],[-4.146029,-8.454696,0.915887,-1.194724,9.143410,-0.825662,-0.477079,0.058299],[-0.557556,4.337699,-6.811154,7.097111,8.105161,4.929981,-0.911103,1.573268],[-5.549867,-5.846310,-6.739944,9.294631,4.219458,7.882659,-2.154114,-2.065294],[0.209541,-7.213263,-4.844442,-7.454873,-3.591817,5.827825,3.072376,5.231188],[-2.405464,1.431749,9.836908,-1.753176,-7.538954,-1.007926,-5.480803,2.242375],[-7.409244,-1.933911,-4.923074,4.127944,-1.134234,1.075044,2.642994,9.009172],[-9.952424,0.864553,-4.095657,2.289985,1.921351,0.379914,-5.952776,-5.339689]],[[-0.229883,8.596611,3.502561,5.946843,2.847801,3.333564,-9.226354,-9.739022],[6.509542,-0.482174,3.296424,7.713438,9.026048,-9.030752,1.661637,8.085271],[7.238674,-2.045462,1.914334,3.879500,5.548457,8.136361,1.710354,-7.726679],[7.074299,-7.451859,-8.883899,-1.742141,-1.235261,8.383922,9.646841,-1.920037],[0.985266,5.320210,-3.878680,4.078957,3.593205,7.821733,-4.598754,7.874368],[-9.209028,-8.137000,4.487954,8.570873,-7.602091,-8.992606,6.070690,-8.450410],[5.057121,9.625157,-5.115529,4.005126,6.543942,4.417230,1.419288,-7.174157],[-2.566743,-9.344077,0.150513,-3.029667,3.315334,9.460053,6.026635,9.230696],[6.600772,-0.995289,-6.657341,6.602786,0.247659,5.299477,6.104195,-8.921121],[8.679560,-0.194634,-9.369610,-1.400720,4.436211,-2.169731,1.089721,7.755245],[-7.506099,8.738455,-8.765569,7.340433,5.934489,-0.277958,-1.975521,-0.893279],[2.058462,-2.609147,6.920339,7.582811,-8.904442,0.304289,-0.541049,-2.800601],[2.879673,9.601916,-8.903640,6.474858,7.854242,-0.439299,-1.116979,0.805349]],[[9.237760,-4.855783,-9.309774,0.816997,9.543631,3.142348,-7.251202,9.916737],[3.170554,4.866231,8.570517,2.110101,-5.174401,-6.008255,-4.999882,-4.964205],[7.315556,0.792210,0.828246,-0.361040,7.013353,-8.308045,4.651711,8.067322],[-9.717000,-6.886065,0.076502,-0.779544,1.230440,0.092607,2.564677,-5.434120],[-4.596406,-4.521421,-3.278197,-5.724229,-8.138356,2.491277,-9.795735,-5.347167],[1.689967,-6.323707,-4.969518,-2.081693,9.968455,-1.335327,-4.908921,9.073725],[-9.360780,-2.577331,-2.362087,-3.908976,5.100803,-5.692124,6.978127,-8.915840],[6.237347,3.074866,6.291344,-2.978577,1.242664,5.433639,3.610709,-3.884390],[7.019634,-5.370634,-1.869287,-3.352158,5.313093,4.108080,-0.370718,5.923872],[6.266131,3.782538,9.452050,9.551948,-1.264519,-2.611428,-9.055555,3.261306],[4.034120,0.550700,0.182775,0.170252,4.167103,2.007092,-2.713091,1.173164],[8.978870,-9.578355,-5.304345,-5.099333,4.730260,-2.177664,6.739743,4.638115],[-0.087685,-3.999892,-7.529357,-1.279556,5.400011,0.869399,-3.048887,0.339193]],[[-8.471604,-6.345384,1.886289,1.045210,2.349610,-8.762260,-9.795376,3.674193],[7.035114,-3.223912,6.513183,7.096166,-9.151794,-5.103492,0.192588,-0.855153],[-6.741417,9.888782,3.282428,-5.585020,-2.118418,-0.865102,-5.444810,6.420840],[9.898372,3.350294,-7.451982,6.738194,-7.083037,-6.386741,7.596852,0.469303],[5.327581,-3.348706,4.552300,-9.634678,6.786515,-0.684721,-7.557685,1.513011],[5.691803,7.324538,0.375015,-2.220814,-5.831292,-8.909536,-1.504788,8.951525],[-5.578193,-8.596098,-5.873221,4.484987,8.965084,1.149400,-4.013226,-0.036020],[-5.808273,4.000323,-7.931480,6.539694,-8.313142,8.702557,3.829053,2.051222],[-6.569827,8.297732,-0.861250,-0.865507,4.624833,9.597638,3.909460,0.934505],[4.117017,7.591600,3.649990,5.008548,-2.957469,-5.118940,3.380505,9.960049],[8.187497,5.518440,-4.759216,-6.345644,7.996794,9.993233,2.493675,-1.762167],[7.944965,-9.816006,-9.557808,9.462801,-9.651092,-3.135324,0.636387,7.208566],[9.525270,-6.779933,1.833706,2.582962,-3.479677,9.934326,2.299399,6.253850]]], dtype = "float64")#candidate|1640|(4, 13, 8)|const|float64
bop_1641 = relay.less_equal(var_1618.astype('bool'), const_1640.astype('bool')) # shape=(4, 13, 8)
func_998_call = mod.get_global_var('func_998')
func_1003_call = mutated_mod.get_global_var('func_1003')
var_1649 = relay.var("var_1649", dtype = "bool", shape = (144,))#candidate|1649|(144,)|var|bool
const_1650 = relay.const([-9,3,8,-10,-5,-8,5,-5,1,6,1,-3,-1,-8,5,4,10,4,1,8,6,8,-4,-4,6,9,7,4,7,9,-5,-7,-10,-2,-4,-8,8,2,6,-9,5,4,9,10,-7,-9,-3,9,7,6,-4,4,10,-6,-3,1,-2,-9,-10,-9,9,-3,-4,6,6,3,-6,-1,-4,-3,9,-6,-10,4,-6,-8,10,-9,-6,4,-9,-9,5,-1,7,7,-1,-9,-9,-8,-5,-4,-10,7,-8,-7,9,1,-5,4,-8,10,-5,-8,-1,1,-7,-8,8,4,-8,4,-6,-9,9,3,-4,9,-1,6,-7,7,-2,2,2,-9,-6,6,-9,-3,10,-10,-10,-6,7,-4,-8,10,-7,3,10,-2,6,8,-4,-6,10,1,-2,-2,10,5,6,2,-8,5,-9,-6,-4,10,7,4,-9,-9,5,-4,-7,5,-4,9,1,10,10,5,-10,3,1,7,4,3,-7,-4,-5,8,-5,-1,-8,6,-9,-1,6,-8,-1,6,-3,5,-7,-2,8,-4], dtype = "uint32")#candidate|1650|(200,)|const|uint32
call_1648 = relay.TupleGetItem(func_998_call(relay.reshape(var_1649.astype('bool'), [3, 4, 12]), relay.reshape(const_1650.astype('uint32'), [200,]), relay.reshape(var_1649.astype('bool'), [3, 4, 12]), ), 0)
call_1651 = relay.TupleGetItem(func_1003_call(relay.reshape(var_1649.astype('bool'), [3, 4, 12]), relay.reshape(const_1650.astype('uint32'), [200,]), relay.reshape(var_1649.astype('bool'), [3, 4, 12]), ), 0)
uop_1653 = relay.acosh(bop_1622.astype('float32')) # shape=(4, 1, 8)
func_1315_call = mod.get_global_var('func_1315')
func_1320_call = mutated_mod.get_global_var('func_1320')
var_1656 = relay.var("var_1656", dtype = "int32", shape = ())#candidate|1656|()|var|int32
var_1657 = relay.var("var_1657", dtype = "int32", shape = (180,))#candidate|1657|(180,)|var|int32
var_1658 = relay.var("var_1658", dtype = "float64", shape = (12, 98))#candidate|1658|(12, 98)|var|float64
call_1655 = relay.TupleGetItem(func_1315_call(relay.reshape(var_1656.astype('int32'), []), relay.reshape(var_1657.astype('int32'), [4, 15, 3]), relay.reshape(var_1658.astype('float64'), [1176,]), ), 1)
call_1659 = relay.TupleGetItem(func_1320_call(relay.reshape(var_1656.astype('int32'), []), relay.reshape(var_1657.astype('int32'), [4, 15, 3]), relay.reshape(var_1658.astype('float64'), [1176,]), ), 1)
bop_1670 = relay.greater_equal(uop_1653.astype('bool'), relay.reshape(uop_1619.astype('bool'), relay.shape_of(uop_1653))) # shape=(4, 1, 8)
func_1315_call = mod.get_global_var('func_1315')
func_1320_call = mutated_mod.get_global_var('func_1320')
call_1682 = relay.TupleGetItem(func_1315_call(relay.reshape(var_1656.astype('int32'), []), relay.reshape(call_1655.astype('int32'), [4, 15, 3]), relay.reshape(var_1658.astype('float64'), [1176,]), ), 4)
call_1683 = relay.TupleGetItem(func_1320_call(relay.reshape(var_1656.astype('int32'), []), relay.reshape(call_1655.astype('int32'), [4, 15, 3]), relay.reshape(var_1658.astype('float64'), [1176,]), ), 4)
func_596_call = mod.get_global_var('func_596')
func_600_call = mutated_mod.get_global_var('func_600')
call_1689 = func_596_call(relay.reshape(const_1650.astype('uint32'), [10, 2, 10]), relay.reshape(const_1650.astype('uint32'), [10, 2, 10]), )
call_1690 = func_596_call(relay.reshape(const_1650.astype('uint32'), [10, 2, 10]), relay.reshape(const_1650.astype('uint32'), [10, 2, 10]), )
output = relay.Tuple([bop_1627,bop_1641,call_1648,var_1649,const_1650,call_1655,var_1656,var_1657,var_1658,bop_1670,call_1682,call_1689,])
output2 = relay.Tuple([bop_1627,bop_1641,call_1651,var_1649,const_1650,call_1659,var_1656,var_1657,var_1658,bop_1670,call_1683,call_1690,])
func_1696 = relay.Function([var_1618,var_1649,var_1656,var_1657,var_1658,], output)
mod['func_1696'] = func_1696
mod = relay.transform.InferType()(mod)
mutated_mod['func_1696'] = func_1696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1696_call = mutated_mod.get_global_var('func_1696')
var_1698 = relay.var("var_1698", dtype = "float64", shape = (4, 1, 8))#candidate|1698|(4, 1, 8)|var|float64
var_1699 = relay.var("var_1699", dtype = "bool", shape = (144,))#candidate|1699|(144,)|var|bool
var_1700 = relay.var("var_1700", dtype = "int32", shape = ())#candidate|1700|()|var|int32
var_1701 = relay.var("var_1701", dtype = "int32", shape = (180,))#candidate|1701|(180,)|var|int32
var_1702 = relay.var("var_1702", dtype = "float64", shape = (12, 98))#candidate|1702|(12, 98)|var|float64
call_1697 = func_1696_call(var_1698,var_1699,var_1700,var_1701,var_1702,)
output = call_1697
func_1703 = relay.Function([var_1698,var_1699,var_1700,var_1701,var_1702,], output)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1894 = relay.var("var_1894", dtype = "int16", shape = (1, 8, 6))#candidate|1894|(1, 8, 6)|var|int16
var_1895 = relay.var("var_1895", dtype = "int16", shape = (13, 8, 6))#candidate|1895|(13, 8, 6)|var|int16
bop_1896 = relay.maximum(var_1894.astype('int16'), var_1895.astype('int16')) # shape=(13, 8, 6)
uop_1899 = relay.sqrt(var_1894.astype('float64')) # shape=(1, 8, 6)
func_1597_call = mod.get_global_var('func_1597')
func_1601_call = mutated_mod.get_global_var('func_1601')
var_1903 = relay.var("var_1903", dtype = "uint64", shape = (286, 1))#candidate|1903|(286, 1)|var|uint64
const_1904 = relay.const([[6,-9,-2,8,-4,-2,1,6,-4,-3,-5,4,9,6,5,-5,-10,4,1,-2],[6,9,-7,-7,-5,10,7,5,1,7,-7,-7,-9,1,-4,8,-6,9,-1,-6],[1,8,9,1,-7,4,-3,1,1,-3,-4,4,7,7,4,-6,-9,-10,-8,-8],[1,6,-2,-7,10,7,10,-6,-9,-7,-6,5,-7,-6,7,-7,8,2,4,-3],[9,10,3,6,-1,-4,-8,-4,5,-8,-6,1,-2,-1,2,1,-6,-1,-9,1],[-2,6,-6,-2,2,7,7,-9,-1,-5,6,4,-9,3,2,5,-10,3,-1,1],[7,1,-6,-4,3,-1,7,5,2,3,1,-7,1,9,7,7,-7,-1,-9,1],[-8,4,-2,3,-4,-8,-6,-6,-7,1,6,-1,6,-6,-8,-8,-3,-2,-9,9],[-1,10,3,4,-2,5,1,-9,-7,4,5,-2,4,5,8,9,-10,7,-5,-3],[-6,-5,6,5,-2,-1,-9,-5,-8,6,-4,-9,6,-8,-7,-9,1,9,9,-1]], dtype = "uint32")#candidate|1904|(10, 20)|const|uint32
call_1902 = relay.TupleGetItem(func_1597_call(relay.reshape(var_1903.astype('uint64'), [1, 286]), relay.reshape(const_1904.astype('uint32'), [200,]), ), 1)
call_1905 = relay.TupleGetItem(func_1601_call(relay.reshape(var_1903.astype('uint64'), [1, 286]), relay.reshape(const_1904.astype('uint32'), [200,]), ), 1)
output = relay.Tuple([bop_1896,uop_1899,call_1902,var_1903,const_1904,])
output2 = relay.Tuple([bop_1896,uop_1899,call_1905,var_1903,const_1904,])
func_1912 = relay.Function([var_1894,var_1895,var_1903,], output)
mod['func_1912'] = func_1912
mod = relay.transform.InferType()(mod)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1912_call = mutated_mod.get_global_var('func_1912')
var_1914 = relay.var("var_1914", dtype = "int16", shape = (1, 8, 6))#candidate|1914|(1, 8, 6)|var|int16
var_1915 = relay.var("var_1915", dtype = "int16", shape = (13, 8, 6))#candidate|1915|(13, 8, 6)|var|int16
var_1916 = relay.var("var_1916", dtype = "uint64", shape = (286, 1))#candidate|1916|(286, 1)|var|uint64
call_1913 = func_1912_call(var_1914,var_1915,var_1916,)
output = call_1913
func_1917 = relay.Function([var_1914,var_1915,var_1916,], output)
mutated_mod['func_1917'] = func_1917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2021 = relay.var("var_2021", dtype = "bool", shape = (6, 12, 5))#candidate|2021|(6, 12, 5)|var|bool
var_2022 = relay.var("var_2022", dtype = "bool", shape = (6, 12, 5))#candidate|2022|(6, 12, 5)|var|bool
bop_2023 = relay.logical_and(var_2021.astype('bool'), relay.reshape(var_2022.astype('bool'), relay.shape_of(var_2021))) # shape=(6, 12, 5)
uop_2035 = relay.asin(bop_2023.astype('float64')) # shape=(6, 12, 5)
func_1912_call = mod.get_global_var('func_1912')
func_1917_call = mutated_mod.get_global_var('func_1917')
var_2043 = relay.var("var_2043", dtype = "int16", shape = (48,))#candidate|2043|(48,)|var|int16
const_2044 = relay.const([-10,8,9,9,10,-1,-9,4,6,9,9,2,-6,2,-5,-8,-3,10,6,1,5,8,-10,5,8,-4,6,2,-4,9,7,-4,-6,2,6,-8,7,6,-10,-3,-5,-7,4,-2,-4,-8,10,1,6,10,9,4,5,1,-1,6,-3,6,10,6,10,-5,5,10,9,5,9,-4,-9,2,1,-7,-8,-4,2,-4,-5,7,-7,5,-7,6,2,-2,4,3,9,2,5,-10,9,3,3,5,-7,5,-3,-9,10,-5,5,-2,8,-4,1,3,-7,5,6,-9,-2,-6,7,7,-9,4,10,10,9,4,5,-1,6,2,5,7,-10,-2,2,-6,2,7,-5,2,1,5,3,-8,-1,-3,4,6,4,-2,-7,-7,8,1,-1,5,-10,7,8,4,-8,8,8,-5,-3,-9,5,9,2,-5,4,-4,-4,-8,6,2,1,-7,3,1,9,6,6,9,7,10,6,8,6,-10,9,8,1,9,7,2,10,4,-5,-5,-5,-6,10,2,-1,10,-6,10,-6,-3,-8,1,-3,3,5,2,4,4,-1,2,9,-4,2,2,2,9,2,-10,-4,-5,-3,-1,-3,1,-9,8,2,-5,-7,-2,-2,-10,2,1,5,5,1,2,-10,1,-3,9,2,-2,1,-9,7,-9,-1,7,6,-1,9,-2,4,10,4,-5,-3,5,-2,-9,6,-10,-8,-1,8,-9,5,5,7,-9,7,7,-4,4,-9,-7,-10,-1,1,-1,4,-5,5,10,-5,3,6,2,2,-6,-10,7,-7,8,-10,6,-3,5,-10,10,-4,9,-2,-10,8,7,-6,-8,3,-2,9,7,8,1,-4,7,-3,10,9,4,-5,-7,-7,5,-5,1,4,5,9,-3,-7,3,-9,9,-4,-7,-6,-9,9,3,10,7,3,5,10,-4,-8,-10,1,-5,2,3,6,1,7,-1,-7,8,-2,9,-3,-8,-2,-10,-8,10,-6,-10,-7,10,-2,-1,-9,8,-4,-1,1,-9,-10,6,3,7,-10,-2,7,-1,2,9,-10,3,3,-2,3,-7,-10,10,10,-3,-6,9,8,2,1,3,8,9,8,-8,-3,-6,8,6,-5,10,5,-5,-1,-5,10,-6,-2,2,8,-4,2,6,6,-2,3,2,-1,-3,6,7,-7,-4,9,10,-5,8,4,9,-8,-1,-3,10,-2,8,-2,3,7,-8,-3,-2,5,-6,-6,9,8,-4,4,6,-7,-1,-9,-8,-4,-3,-9,5,-8,10,-8,5,-8,-6,1,6,8,8,-6,6,-7,4,5,-7,-2,5,6,7,-9,6,-7,-9,-4,2,3,7,-6,-5,2,-4,-9,-8,10,-6,-8,-8,-7,-10,4,-8,-10,9,5,7,-6,-4,1,-7,-7,8,7,2,3,-4,6,5,6,3,8,9,-2,-6,-6,2,7,-9,-7,10,-5,-8,4,-8,-7,-2,-3,-8,5,-8,8,4,-3,2,4,-2,4,-1,-3,-1,-1,7,3,9,-1,2,-10,-7,-9,-2,10,-3,2,-7,2,7,-8,-7,10,-2,4,2,-8,4,-9,2,10,8,-9,9,10,5,2,10,10,5,-5,6,8,-3,-8,-8,10,2,-10,3,9,-7,-1,-3,8,5,-6,9,2,-1,-6,-1], dtype = "int16")#candidate|2044|(624,)|const|int16
const_2045 = relay.const([[-8],[2],[-2],[5],[2],[-5],[10],[-8],[9],[2],[-2],[5],[10],[3],[3],[-6],[10],[10],[8],[5],[-9],[-4],[4],[-4],[3],[7],[3],[-9],[-7],[2],[8],[3],[-7],[-1],[8],[-6],[-6],[-6],[4],[3],[9],[5],[2],[-4],[6],[1],[3],[3],[8],[-4],[-8],[3],[-1],[-4],[10],[4],[-7],[-9],[3],[-8],[-7],[-5],[4],[10],[-10],[8],[5],[1],[10],[-2],[-3],[10],[-7],[1],[-4],[1],[7],[-4],[3],[-2],[-8],[-2],[2],[8],[-1],[4],[9],[5],[5],[-8],[-4],[-2],[4],[-3],[10],[2],[8],[1],[-1],[3],[9],[7],[-5],[6],[10],[-1],[-2],[7],[-7],[-4],[8],[4],[-2],[-7],[4],[-5],[9],[-3],[-6],[-4],[-2],[1],[6],[-1],[-10],[9],[-3],[-3],[8],[9],[10],[-6],[-6],[3],[9],[-8],[-10],[6],[-7],[-10],[-4],[-7],[4],[1],[2],[5],[-4],[10],[2],[-1],[1],[-4],[8],[-9],[-9],[-4],[-10],[9],[10],[5],[9],[-3],[2],[2],[9],[7],[-5],[-10],[-4],[-10],[10],[5],[6],[3],[3],[-8],[-9],[-7],[6],[-7],[5],[6],[-6],[4],[7],[-3],[9],[-6],[-4],[-1],[-8],[-1],[-3],[10],[-8],[-6],[-2],[4],[9],[9],[2],[-3],[-4],[8],[-10],[4],[9],[5],[-2],[3],[5],[-4],[4],[-6],[-5],[-8],[-1],[-10],[2],[2],[6],[-7],[1],[-8],[10],[-4],[5],[-1],[-5],[-9],[-4],[-9],[-10],[9],[-4],[3],[6],[6],[-6],[10],[-10],[-1],[2],[1],[1],[-10],[-8],[1],[6],[1],[2],[2],[6],[5],[6],[5],[2],[8],[-10],[-3],[-8],[-5],[4],[8],[5],[-1],[-3],[-4],[5],[-8],[7],[-5],[-1],[-4],[4],[1],[2],[10],[-3],[5],[-6],[-6],[-1],[8],[2],[-7]], dtype = "uint64")#candidate|2045|(286, 1)|const|uint64
call_2042 = relay.TupleGetItem(func_1912_call(relay.reshape(var_2043.astype('int16'), [1, 8, 6]), relay.reshape(const_2044.astype('int16'), [13, 8, 6]), relay.reshape(const_2045.astype('uint64'), [286, 1]), ), 0)
call_2046 = relay.TupleGetItem(func_1917_call(relay.reshape(var_2043.astype('int16'), [1, 8, 6]), relay.reshape(const_2044.astype('int16'), [13, 8, 6]), relay.reshape(const_2045.astype('uint64'), [286, 1]), ), 0)
uop_2054 = relay.tan(uop_2035.astype('float64')) # shape=(6, 12, 5)
output = relay.Tuple([call_2042,var_2043,const_2044,const_2045,uop_2054,])
output2 = relay.Tuple([call_2046,var_2043,const_2044,const_2045,uop_2054,])
func_2065 = relay.Function([var_2021,var_2022,var_2043,], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
var_2066 = relay.var("var_2066", dtype = "bool", shape = (6, 12, 5))#candidate|2066|(6, 12, 5)|var|bool
var_2067 = relay.var("var_2067", dtype = "bool", shape = (6, 12, 5))#candidate|2067|(6, 12, 5)|var|bool
var_2068 = relay.var("var_2068", dtype = "int16", shape = (48,))#candidate|2068|(48,)|var|int16
output = func_2065(var_2066,var_2067,var_2068,)
func_2069 = relay.Function([var_2066,var_2067,var_2068,], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2239 = relay.var("var_2239", dtype = "float64", shape = (4, 6, 3))#candidate|2239|(4, 6, 3)|var|float64
uop_2240 = relay.rsqrt(var_2239.astype('float64')) # shape=(4, 6, 3)
output = uop_2240
output2 = uop_2240
func_2246 = relay.Function([var_2239,], output)
mod['func_2246'] = func_2246
mod = relay.transform.InferType()(mod)
var_2247 = relay.var("var_2247", dtype = "float64", shape = (4, 6, 3))#candidate|2247|(4, 6, 3)|var|float64
output = func_2246(var_2247)
func_2248 = relay.Function([var_2247], output)
mutated_mod['func_2248'] = func_2248
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2282 = relay.const([[[5.435101,-0.668774,3.073451,8.664687,7.316969,8.432610,0.186184,-1.844743,-7.183078,8.262019,1.253699,6.269261,-7.540566,-7.130156],[-3.160573,8.846216,-9.837662,8.430904,1.475884,2.023111,-6.297188,-5.379783,8.558048,-3.743324,-9.572865,-2.837165,5.390833,-7.796161],[3.295150,8.600708,-1.796521,0.651987,-7.064141,-4.363779,6.525174,-3.342469,-7.316764,4.480051,-3.241138,6.260329,-0.773156,-0.821576],[-3.225270,5.631168,5.173359,1.514395,-7.150117,-6.960056,9.184558,-6.575970,4.005972,2.690716,-3.715021,9.528118,-0.945833,9.484239],[6.500362,9.735041,4.168485,1.416086,9.953795,-3.636743,3.999344,-3.013878,-1.377781,-0.609872,1.554924,3.643933,-2.662648,-2.593340]],[[-8.835378,2.597561,2.538446,7.194812,-8.590481,-7.659664,8.487840,9.609091,2.762377,2.275901,-9.853042,4.218004,4.943179,3.123567],[-1.793902,8.746321,-3.462387,-9.303751,6.487155,-5.052791,-7.841171,5.919398,2.735938,-9.726629,-8.938300,-4.960891,0.210444,-4.683466],[5.866033,8.317928,-8.295924,-5.320439,6.755519,-5.557823,-7.166841,-1.543228,1.878420,-6.779326,-6.696227,-5.178338,-9.220675,-7.894470],[-5.242463,1.040170,-8.598650,1.194531,0.201779,4.301545,-2.434735,9.317770,-9.243855,0.024602,4.509955,5.933070,0.325241,-4.793815],[-5.814431,4.795446,0.490844,-4.925881,4.760451,-9.961704,5.359545,-4.596913,-7.144107,-5.690471,1.617158,-9.850486,0.466532,6.196254]],[[9.622914,5.652112,-9.789208,7.190674,3.008384,9.673973,6.064059,7.768880,-2.458015,6.935537,2.889208,5.032998,5.748215,4.024082],[3.284213,2.036579,-9.367748,2.621170,-3.943652,-4.909065,-8.668714,-0.788715,-9.590593,8.047491,0.011296,2.633554,-1.899048,-1.567179],[-8.223778,4.841590,-4.147584,3.275753,7.723371,8.837716,1.957175,8.670558,0.341869,1.725164,5.688642,-0.375035,3.196158,0.807074],[2.664488,-6.166064,6.343527,5.526549,-0.905892,-6.690492,4.747275,2.807905,3.695574,0.057408,3.057159,-6.949680,7.610485,0.780379],[-9.005849,-8.606873,-3.470087,-7.732089,-0.400461,8.627777,-5.185903,-1.617246,7.470421,-0.635689,-3.466552,-5.136017,-6.438543,-7.580343]],[[6.149921,1.627223,-4.312999,8.532990,-8.944171,-2.042775,-9.624685,4.587990,3.362475,-3.956973,-6.216567,-1.636813,-2.380530,-5.507340],[6.299770,-4.175661,-2.666749,3.195977,-9.102719,-9.940891,-5.023402,7.924244,-9.586505,5.431411,1.390471,2.318002,-0.924830,-4.615655],[-5.051464,7.479076,-9.093531,-4.202331,1.172344,3.480672,4.237980,-3.941445,2.979211,-8.503422,1.617459,0.513483,5.807810,-6.148208],[-8.113168,5.112666,8.297065,3.531364,-6.251871,-4.595218,8.080601,8.887872,6.196902,-5.760520,-5.317606,9.265792,-1.006626,-0.134225],[6.327930,5.734647,7.938692,-6.539409,5.217501,-8.848176,1.581062,-7.543458,5.271055,7.315925,6.505445,4.886418,-1.958388,1.455229]],[[4.379713,8.305050,-0.541011,5.568113,5.618436,-4.406527,3.724017,-6.306846,-8.827577,7.252011,8.813271,-7.769750,-7.423508,-2.899292],[-8.634532,4.423151,5.766822,-0.043595,2.450583,7.994180,1.952064,6.462627,7.921856,-3.382602,-8.349131,8.346366,-6.521666,0.595560],[5.599291,-8.825139,7.075055,6.672661,-3.646705,4.148721,0.198498,-1.625692,-6.256976,6.527180,2.470774,3.182858,1.799218,7.758642],[8.404198,-4.908682,-5.589400,-6.619624,-9.632760,-8.219074,-0.476941,-9.567635,3.331024,-1.343053,6.273389,7.493646,0.074169,-1.556930],[6.393499,0.889939,-8.730205,4.797261,-1.153739,1.993345,8.984534,1.170967,7.214447,-1.033421,-7.540033,-9.519980,-7.522684,-2.039228]]], dtype = "float32")#candidate|2282|(5, 5, 14)|const|float32
uop_2283 = relay.cos(const_2282.astype('float32')) # shape=(5, 5, 14)
uop_2287 = relay.sqrt(uop_2283.astype('float64')) # shape=(5, 5, 14)
func_252_call = mod.get_global_var('func_252')
func_255_call = mutated_mod.get_global_var('func_255')
var_2303 = relay.var("var_2303", dtype = "float32", shape = (308,))#candidate|2303|(308,)|var|float32
call_2302 = relay.TupleGetItem(func_252_call(relay.reshape(var_2303.astype('float32'), [11, 7, 4])), 1)
call_2304 = relay.TupleGetItem(func_255_call(relay.reshape(var_2303.astype('float32'), [11, 7, 4])), 1)
func_351_call = mod.get_global_var('func_351')
func_354_call = mutated_mod.get_global_var('func_354')
var_2324 = relay.var("var_2324", dtype = "float64", shape = (1176, 1))#candidate|2324|(1176, 1)|var|float64
call_2323 = relay.TupleGetItem(func_351_call(relay.reshape(var_2324.astype('float64'), [14, 7, 12]), relay.reshape(var_2324.astype('float64'), [14, 7, 12]), ), 1)
call_2325 = relay.TupleGetItem(func_354_call(relay.reshape(var_2324.astype('float64'), [14, 7, 12]), relay.reshape(var_2324.astype('float64'), [14, 7, 12]), ), 1)
var_2327 = relay.var("var_2327", dtype = "float64", shape = (5, 5, 14))#candidate|2327|(5, 5, 14)|var|float64
bop_2328 = relay.right_shift(uop_2287.astype('uint32'), relay.reshape(var_2327.astype('uint32'), relay.shape_of(uop_2287))) # shape=(5, 5, 14)
func_351_call = mod.get_global_var('func_351')
func_354_call = mutated_mod.get_global_var('func_354')
call_2346 = relay.TupleGetItem(func_351_call(relay.reshape(var_2324.astype('float64'), [14, 7, 12]), relay.reshape(var_2324.astype('float64'), [14, 7, 12]), ), 1)
call_2347 = relay.TupleGetItem(func_354_call(relay.reshape(var_2324.astype('float64'), [14, 7, 12]), relay.reshape(var_2324.astype('float64'), [14, 7, 12]), ), 1)
output = relay.Tuple([call_2302,var_2303,call_2323,var_2324,bop_2328,call_2346,])
output2 = relay.Tuple([call_2304,var_2303,call_2325,var_2324,bop_2328,call_2347,])
func_2365 = relay.Function([var_2303,var_2324,var_2327,], output)
mod['func_2365'] = func_2365
mod = relay.transform.InferType()(mod)
var_2366 = relay.var("var_2366", dtype = "float32", shape = (308,))#candidate|2366|(308,)|var|float32
var_2367 = relay.var("var_2367", dtype = "float64", shape = (1176, 1))#candidate|2367|(1176, 1)|var|float64
var_2368 = relay.var("var_2368", dtype = "float64", shape = (5, 5, 14))#candidate|2368|(5, 5, 14)|var|float64
output = func_2365(var_2366,var_2367,var_2368,)
func_2369 = relay.Function([var_2366,var_2367,var_2368,], output)
mutated_mod['func_2369'] = func_2369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2496 = relay.var("var_2496", dtype = "float32", shape = (5, 5, 6))#candidate|2496|(5, 5, 6)|var|float32
uop_2497 = relay.acos(var_2496.astype('float32')) # shape=(5, 5, 6)
uop_2505 = relay.cosh(uop_2497.astype('float64')) # shape=(5, 5, 6)
var_2507 = relay.var("var_2507", dtype = "float32", shape = (5, 5, 6))#candidate|2507|(5, 5, 6)|var|float32
bop_2508 = relay.not_equal(uop_2497.astype('bool'), relay.reshape(var_2507.astype('bool'), relay.shape_of(uop_2497))) # shape=(5, 5, 6)
func_465_call = mod.get_global_var('func_465')
func_469_call = mutated_mod.get_global_var('func_469')
const_2515 = relay.const([-2.562710,-8.015911,8.637890,7.147319,4.387331,-5.907644,1.846871,6.879957,0.110402,-4.883513,-3.566970,-6.256600,5.352499,4.511928,-6.735135,2.395050,8.929030,9.055192,-6.415747,4.612706,-2.565821,-7.635880,1.754479,5.132846,-6.871131,-3.990084,4.971514,5.716765,-0.817720,-3.048156,5.373724,-5.187684,0.768827,6.661137,-6.471227,-2.028897,-7.238637,-5.255709,-4.958637,4.143281,-1.713777,0.226990,-8.770964,-4.032842,-3.074893,2.729998,-6.991025,-0.153773,3.466607,1.347166,-3.345657,-7.052073,-4.292112,5.519630,-4.943729,-7.543787,-8.478395,9.827531,-4.142960,4.821077,-3.723091,0.797353,-8.962147,-4.920045,9.402585,7.245542,4.644812,2.644784,1.123216,1.142508,5.379109,-0.319840,3.506219,-6.852875,9.615367,-4.304319,-9.058108,-4.401087,1.456693,-8.922253,-4.646204,2.341432,-5.925155,4.541388,4.651109,5.280414,-6.178628,-2.739097,2.162077,-1.962542,-2.388591,-9.879233,-9.789098,-2.735962,-9.121105,-1.493842,-4.963572,-3.291123,-3.636267,-0.228189,-3.225632,-7.131643,4.501542,6.330083,2.271610,1.012018,-6.391002,-2.084557,-0.536175,3.051233,-3.435448,0.221226,8.994790,3.409609,-3.151622,5.721686,6.753321,4.168257,-4.746907,-4.894430,-7.733152,3.944598,2.371857,0.339339,-4.973011,-5.888977,8.000096,-1.479094,-2.372944,-2.429691,1.962437,4.917676,-3.605712,-6.980195,1.003477,-6.949576,-9.418198,9.359177,-3.799132,-4.331422,5.338350,8.163537,-9.583143,6.116105,2.276525,6.597224,2.672390,7.564440,-1.150872,-4.980423,-8.270538,8.397093,-5.612044,1.465687,-2.098316,-6.873903,-4.385116,-1.612033,8.100551,1.999329,4.535967,9.846448,-2.694347,-2.630225,-8.775300,-8.672395,-8.703346,-2.190321,-1.496383,6.675448,8.640817,-2.375052,4.208430,-0.794328,-6.748308,0.095210,9.353767,-4.317464,1.904983,-2.380450,8.584860,0.825008,-7.738708,6.109820,2.995134,2.337122,-0.847704,-6.394376,-4.923872,-9.490251,0.315725,2.762818,-4.940197,-1.132361,-7.390452,-4.016816,2.095306,4.465097,4.600062,1.214698,3.455122,2.775871,-7.703372,8.840917,-5.489583,-9.266016,5.161705,-2.554610,4.021396,-4.531024,3.616466,-2.409795,-9.260494,1.419746,-5.964039,-6.940551,3.649321,5.400591,5.116147,2.177593,-7.912167,7.306830,9.244026,8.642695,-1.650332,-7.742658,-5.767486,1.854162,1.691788,-3.423006,5.870186,9.637344,-3.909093,-0.414594,-3.334273,-1.164286,3.806432,-0.947840,0.537718,-3.089650,7.412682,-5.458515,5.371076,-0.479327,-0.115669,-8.180784,0.297200,-7.440618,-3.644927,-8.841531,-9.637868,7.717707,-2.161510,-8.138864,6.632853,-8.413061,-1.155993,8.629117,-5.688101,-9.705573,-2.539382,-8.088205,-0.635014,-1.979684,1.740208,0.580621,4.091741,-8.121437,1.894768,4.876764,4.516535,0.236935,-3.270551,8.633709,3.216585,2.541642,-2.018632,9.434108,6.570028,5.827870,-6.843796,-8.694559,4.750643,-3.345262,-0.262384,0.348305,2.020204,8.429723,3.658769,-3.303017,-0.524097,3.303638,8.263671,4.062609,-5.465504,2.999163,-0.794433,-7.132060,-9.168870,-0.294440,-0.013640,-1.715612,-6.592092,-0.104079,-2.409008,-2.328482,-2.383353,0.090069,1.323930,-2.656922,9.968357,-5.452600,-4.001808,8.227299,4.098369,6.328962,-2.219283,2.961267,6.723989,-9.858743,-0.131391,-6.053328,-3.504125,-4.692180,-4.397615,7.210820,2.033100,2.880458,-1.100791,-5.604364,-9.850744,-2.071777,-1.966529,-6.685084,5.100786,6.889063,6.608265,-8.204683,-8.127672,5.744514,-9.203698,-8.392057,8.921274,6.745262,5.297193,6.773959,2.598570,-0.084698,-1.692277,8.006562,4.049753,9.550936,-9.734515,2.826053,5.883723,8.008899,6.845330,6.573383,-6.870557,7.629704,-5.972238,7.508895,-2.396712,4.797785,-6.653051,-3.284245,-4.031530,7.258187,7.697502,9.334875,1.885734,-2.361422,-6.922258,2.771301,-7.550537,-1.397706,-3.169031,-0.740638,4.367615,5.774140,-7.988448,-3.622929,4.633521,1.187935,-2.967101,8.557870,-5.974006,-3.643779,7.609939,4.218784,-8.203344,5.439481,6.250741,5.986779,8.618975,8.123457,-5.624273,-2.486410,3.342806,9.481743,-7.947767,7.401658,-5.877572,-2.212404,-0.242623,-2.765654,4.979817,1.408185,9.564966,-1.774727,9.624868,4.220527,1.932775,1.639846,9.099126,-8.527439,-0.206223,-1.011449,5.442518,-5.679334,-0.887693,2.480609,-3.017621,5.727714,3.030213,3.170726,3.076987,0.746789,-3.296973,9.319503,6.487515,-6.722535,5.439189,-7.215836,5.359889,-3.317092,4.050449,1.283206,-2.245646,-8.287916,-1.546446,-5.362304,-4.589967,-7.154118,9.570698,-0.358240,7.911707,-5.905841,-5.435074,-5.378747,4.152894,3.699421,-1.458685,4.088625,5.238090,-5.652691,3.099756,4.223347,-7.078148,-4.487807,8.041878,-2.974049,0.320316,-3.306468,-1.202081,8.657703,6.263609,-8.302695,-7.890531,3.957104,1.042544,1.713460,-5.994064,-3.429339,7.636496,-6.390879,-5.759144,2.017883,6.161234,7.638062,-1.321914,-4.128707,8.155751,7.599336,-8.706572,-5.528349,2.362881,-7.277373,-2.502256,-2.925108,1.490721,3.452517,-9.076350,-0.712168,-0.849231,3.905758,-8.982351,-0.236490,-8.296311,3.447018,-6.607390,7.910490,-5.069612,-9.040482,-4.804887,-0.218849,7.695639,7.588873,-3.704605,-3.187517,6.557833,-8.967425,7.783823,-1.893858,-4.750596,-5.688143,6.555095,-5.787369,4.237086,-5.342353,-2.817892,1.536283,-5.606111,9.664599,-9.736248,0.895248,1.085585,-7.848236,9.019542,-0.763950,-6.557639,-7.100687,-3.671527,6.658358,8.810450,-4.811099,-6.898591,-9.110933,-1.639633,-7.535627,1.701908,0.079600,3.361796,0.681808,-1.769219,-8.631433,-0.491937,-1.474095,-7.892883,-3.449404,9.847710,3.408945,-6.886608,6.561040,1.366719,-6.431766,7.111894,6.925785,6.671503,3.958029,-3.678460,-4.334952,6.352236,-0.869473,0.060020,9.851216,1.672867,-7.510412,-3.387537,-3.778072,6.199228,-8.934660,-6.037240,2.894819,-5.753482,0.013816,7.912968,5.097470,-7.491285,-1.000663,-4.571148,4.165219,-5.882938,-9.424343,8.442784,-8.270430,7.063249,8.167717,-1.381472,2.424390,-2.004488,2.933210,-0.008123,-9.815847,-7.859726,-5.060092,-8.245611,-3.497214,-5.022460,-1.662048,-9.361334,-6.544445,7.962576,4.792038,8.987910,3.158586,-1.408143,8.511813,2.837511,9.677966,-1.786518,8.960229,3.012001,7.608449,-5.835220,5.505961,-3.166325,-9.782789,-1.402549,1.835343,-0.837575,7.651476,0.097288,0.677127,-2.044575,5.751051,1.306617,8.313791,-2.511860,-6.736981,-6.432248,8.505654,7.963700,5.755822,-0.594885,9.634688,3.106185,4.852822,8.303674,5.230079,5.851998,-9.645357,0.087827,-2.737445,-9.038045,-1.369140,-2.407744,1.546389,5.507053,0.361110,9.395893,-6.842481,9.257721,-9.704192,4.904733,-7.524635,-0.065584,5.569400,6.827193,8.923023,-4.650704,-0.924077,-2.473108,-2.242515,-6.998286,5.253516,7.704376,-0.571510,2.594844,8.304483,9.756298,4.655108,1.028151,9.629188,-3.083620,-4.897021,3.876666,-0.786850,6.620451,6.931121,-6.555686,4.443752,1.732851,9.867636,-3.431235,4.195750,-5.792801,6.444127,5.719398,-8.933057,-5.719525,-9.001366,-8.786078,0.840850,8.865635,9.802040,6.444670,0.442300,5.937350,3.680683,-2.751366,2.267350,9.719205,-8.666682,1.515763,2.369399,9.024063,1.451049,-2.016049,9.142096,-1.670066,3.212672,-8.852918,-6.218359,6.773035,5.839551,-8.408855,7.158995,-9.858173,-3.382327,-7.959563,2.004539,9.204841,2.519669,8.263900,5.718967,-5.931843,4.036068,-3.886973,-6.177291,6.225582,7.816075,-4.391856,8.352225,-8.176434,-8.755343,6.986270,-0.908428,9.618322,-3.322226,1.998663,-0.563193,8.642355,-1.071743,1.213645,9.391034,-7.403579,-9.386816,3.176362,0.477273,2.153007,5.447229,3.706097,2.709174,0.678857,6.347009,3.896977,-0.802056,7.554456,-8.584509,7.092796,7.352058,-2.119611,-0.757500,-3.988607,2.637099,-2.008762,-1.312086,1.528544,-2.211978,-3.491256,7.700491,1.132094,-9.994514,-0.703759,6.759295,-6.955152,3.718890,-5.597373,0.544367,-8.994003,-3.631594,1.812572,-8.885087,-1.223142,2.002685,8.961466,-3.395743,7.106057,0.798643,-4.512748,4.362986,-6.254483,7.072211,7.359915,7.283075,-3.301168,-6.903964,-2.984397,-1.581164,5.428083,3.494418,-9.916482,0.691771,-8.197103,1.300425,2.304938,-1.903653,4.415511,-1.015599,-7.082885,-1.084129,1.379458,-3.813259,-1.219756,-0.820748,-4.160537,-4.781745,0.148253,-5.565719,-1.571321,-1.703359,3.127194,5.700569,9.385518,7.724407,1.996088,-4.588573,-5.637248,6.538336,4.276077,-7.967606,8.942385,-7.979536,-4.373094,3.532399,-0.998793,-3.034521,-2.482234,-6.931668,3.816940,5.438310,-7.861616,0.134333,-6.105520,5.039854,-6.982892,0.012545,-7.120526,-7.489732,3.019207,5.230611,-0.377169,8.517475,-0.930076,-6.670668,8.020010,-3.241474,2.836895,-6.068464,-0.878560,0.637320,8.559456,0.005712,-2.671559,-8.713163,8.541679,1.022428,5.697644,-7.744562,-9.577707,1.661358,-3.726186,2.660957,1.624815,4.404802,6.807959,-7.111374,6.373121,-3.695910,0.738283,2.961573,4.289748,-7.461549,9.302013,-2.776793,2.996377,2.954944,0.060872,3.450745,-7.732903,3.604153,4.355844,-0.094044,5.016114,-7.017130,5.009040,0.934897,-5.763839,6.643571,-4.754000,-0.506426,4.695223,1.583902,-9.187216,6.777026,5.713161,7.844700,-6.616731,3.991820,-5.202974,1.120686,-7.872317,-5.043100,-4.173228,-1.709644,7.599447,2.670493,7.189612,-9.069328,2.537428,-1.118370,-8.106331,-0.888717,-7.024549,-6.617155,0.823409,-0.982496,-9.114674,2.062986,4.654140,7.089961,-6.297266,2.601685,2.937333,6.390400,-8.787010,2.842521,8.895430,9.532818,7.405798,4.489222,4.421350,-2.068909,-2.814671,1.635263,-5.791165,4.827971,6.716387,-5.399415,-4.125794,7.264196,1.051206,4.234731,-5.455359,-8.893107,-2.707742,3.891846,-3.009674,6.772208,0.768477,-3.830690,6.787298,-3.194229,-1.626620,1.071191,-1.423618,0.661480,7.096927,8.641027,-9.644855,0.234430,7.533115,-7.036534,4.242233,-3.097048,-3.913917,-5.503723,-4.088822,-1.877761,3.593475,3.127959,2.269846,1.751377,7.176290,-9.538120,2.648793,-3.801141,-4.600722,-9.004249,-5.696285,-6.550497,3.569621,-5.832775,6.192022,-2.833964,-0.486747,8.265180,2.175222,-7.385845,3.348590,-4.684889,9.518302,7.059968,7.833129,1.586318,-2.045399,3.278709,-9.226267,-1.413600,-4.406173,-3.086795,-5.092138,-9.471465,-2.168809,5.136453,-7.126626,-1.631958,-3.327601,6.490695,2.283875,-1.703159,8.440060,5.022229,8.447153,0.660784,8.518498,3.582400,1.406562,1.806907,-6.542897,0.489858,-2.548244,-8.374291,0.412723,-4.641915,-0.046863,3.273915,-2.689699,6.415687,-9.847331,-2.731307,-6.308379,5.058180,2.457511,-8.209139,9.319832,-5.276570,3.883598,9.895120,7.042284,-2.263181,-4.350788,9.708037,-3.380650,-4.311643], dtype = "float32")#candidate|2515|(1056,)|const|float32
const_2516 = relay.const([-3.967092,-4.877183,-8.566949,-5.265661,-0.299958,4.524625,0.940921,0.899440,8.635738,0.454074,0.286516,-3.080026,1.186930,-7.230150,8.589310,4.588362,-0.527644,-1.755442,-6.699910,4.728544,3.823488,-9.127897,3.484473,5.580316,0.926100,-1.904670,3.704120,3.770487,4.729482,-2.246634,-8.154372,7.515583,4.737953,-5.073673,-5.543848,-7.088031,-8.721066,-9.073946,-2.283687,-6.427558,-6.561389,-4.199846,-8.812844,0.609138,0.296171,-6.809569,6.245334,9.963173,4.401812,-6.955550,3.832203,-6.919905,1.577911,8.338687,-2.506468,-7.081312,-9.580707,3.986167,-6.786003,-3.631832,-0.757324,8.045492,-1.015753,-4.737041,-7.111290,0.685531,4.930849,-4.591804,8.131827,1.942615,4.538246,-7.741494,-6.914927,-3.981656,-8.324839,4.898734,-2.904665,-4.490603,4.529482,-5.728465,9.448583,9.740308,5.704568,-6.700202,3.597277,6.237591,4.553825,-9.500480,1.357810,-4.896627,7.278736,-3.871196,-0.321139,2.001785,6.653615,-7.845513,2.558907,6.333427,8.486000,7.039442,4.768813,1.265804,8.412265,6.529065,3.447477,-2.863584,0.195226,-4.340408,-1.785150,6.616601,2.664649,-1.442952,0.576569,-0.527776,5.575485,3.925759,-6.676696,1.171215,-1.328838,-1.886259,-4.853842,-7.216859,0.697413,-7.289646,-1.732452,8.402959,9.069157,4.695460,1.120260,2.135184,2.862489,-3.295518,4.853540,5.995215,-9.656024,6.528134,2.504726,-7.489169,-3.234533,-3.205187,-1.222517,9.114554,3.716669,-6.518706,-5.854316,-5.130725,-6.693051,2.629426,-1.973037,1.677337,-6.721582,-1.899954,-4.133124,-7.686939,3.478431,-9.682772,-3.719421,3.378482,-3.107290,-5.735697,9.618854,-7.209222,9.308153,3.032742,0.388166,-8.305806,-2.889995,3.452742,3.335302,4.437470,-1.791281,-4.353987,2.361225,-2.448192,4.222553,-0.090332,9.919397,-6.939663,-2.748120,4.202042,-9.913270,9.558840,-2.340736,-0.409050,-2.375541,-4.425831,5.511821,6.817329,-7.937829,-0.645026,0.288939,-9.560712,1.448450,4.607363,-5.646303,7.200694,4.807039,5.432920,0.984166,2.257919,-9.991865,-4.801756,2.090532,-7.276395,-5.101903,8.856589,-8.365987,-5.187053,0.256580,0.360983,-6.034937,-7.909800,-6.994332,9.536944,4.653744,7.064703,-0.393737,8.676071,-8.838481,4.523060,-8.811408,-7.444894,-2.883314,6.695021,-8.747100,-0.904763,6.279984,-0.279441,-5.586811,-1.953221,7.557854,6.801752,1.565480,9.212966,0.287447,-3.501168,6.274161,-2.943530,-4.941532,1.426721,-5.737551,2.318137,4.248579,3.095534,-8.018401,6.877224,-1.623919,3.069239,-8.732974,2.662165,-1.418518,0.975580,-5.295967,6.401304,7.990668,8.727318,-7.977198,-3.737588,9.224376,-6.973718,8.986771,7.165932,-2.722988,3.818838,8.267421,-1.327182,2.743374,0.090276,0.617052,-6.441479,-1.951000,8.439353,-0.713100,-3.962548,4.344295,7.406617,-4.939801,-5.295943,-3.168229,9.143750,-3.965150,3.595154,-2.873036,7.200716,9.727162,-8.745654,-2.546425,3.562845,4.694893,-9.440420,-2.230449,6.899314,-6.291994,9.608980,-2.047096,-0.702126,2.371060,-1.365921,-0.965663,8.448980,5.844611,5.285872,9.858245,-9.088182,-0.562257,-9.196646,4.066117,-7.781619,0.924411,-5.001378,-1.803379,6.713215,-3.871570,8.762321,0.911498,-4.392994,9.359318,-9.996708,-0.676936,7.021223,8.537685,1.723896,-1.648473,-1.403513,-6.205478,9.835288,2.580975,-2.720092,-5.743293,9.215247,-5.655204,-8.401907,6.326104,5.700721,3.098073,1.156324,-2.695362,2.115974,-7.886878,-1.834846,-9.234989,7.091563,-5.443283,5.336419,-8.374984,7.447937,2.608537,-5.123815,-0.349939,-9.978871,-5.762704,0.125289,0.753085,2.259017,-7.650588,-9.133385,1.908025,9.505545,5.350783,-8.772651,3.329889,-0.963805,8.710930,1.949514,-4.218329,-6.287783,5.167380,2.978434,-5.265989,-9.507470,5.187039,-5.732357,1.897590,-6.689338,-6.189150,-2.605373,-5.806891,-9.864861,6.128751,-6.428045,-6.477930,-5.109377,-0.498024,-5.285289,9.949067,6.328140,8.027038,5.094872,6.496910,7.168343,4.028799,0.642622,-7.068127,6.658427,-5.515207,-6.026625,-3.697491,-5.392375,-6.130311,-5.276589,-5.742678,-5.417508,6.331865,-7.004093,-5.929648,-7.564177,1.185889,9.771990,-2.395101,3.180869,-4.095156,4.428214,-3.344724,2.129716,-4.599914,-9.763936,-4.706297,-9.453184,9.117876,-4.833617,-5.628977,9.300418,6.433525,9.131750,6.672410,-9.997338,-2.605185,6.734300,8.395285,-9.163839,-8.657617,-1.228679,8.826471,-4.432256,9.827360,-5.617487,7.721701,5.973019,7.442852,-5.261477,8.893143,-1.091465,-1.293321,8.119075,7.183658,0.264145,-9.874464,-2.336726,-7.058081,-9.312334,7.174714,6.781410,-2.087804,3.876801,-7.944427,4.346794,-9.615971,0.831512,8.361302,5.589362,-4.331853,-2.393774,-3.330110,8.983933,8.821767,8.524446,-1.734643,8.529726,0.029796,-7.855514,5.648582,-2.182140,-7.769669,-0.718753,-8.508892,-8.810981,6.176308,5.693154,2.598067,-5.576564,1.236610,5.301892,7.203972,-5.114454,-8.718099,-7.862611,-3.950256,2.811258,-1.088421,-7.300567,8.734561,-1.324302,5.626090,8.181086,-9.675328,6.126103,1.734097,4.898349,-9.122127,2.814318,8.835502,-8.995552,-0.561578,-5.253350,2.263064,0.404442,8.414628,2.977673,-3.281124,2.777251,8.156933,-0.585123,5.092118,8.211266,4.620833,-1.112609,-7.968651,2.574659,6.316528,8.405532,-5.883082,4.590581,-2.303197,8.921924,5.484960,3.145777,8.523257,2.873435,-5.077861,-4.351349,-8.478037,-1.859353,6.784559,1.961014,6.836777,-5.846399,-0.291093,8.070671,-4.236177,4.883041,7.949115,-7.397913,-2.440411,1.693210,-0.177573,-1.976894,0.316890,7.283313,-4.000399,3.496248,-9.465459,-3.145571,2.986914,9.077460,-5.464630,-2.196874,-0.502881,-1.055430,-4.652531,6.232876,-1.922307,7.728405,-0.216598,-1.807899,-1.912261,-3.486264,8.804072,6.882078,-6.842601,0.590567,2.642908,-6.629686,-5.647409,-1.602928,-1.798950,-6.234176,4.363584,-7.121183,-4.765216,5.312172,-9.456878,4.380152,-7.744846,3.172243,-9.071601,7.637822,-1.338295,8.367765,-3.580599,7.688603,8.425489,9.047609,-8.721694,-7.293756,2.120826,7.942038,9.411694,8.889490,8.964496,-4.705379,0.943832,7.166849,7.845657,2.535477,-1.161183,-9.056145,-8.328456,-2.403073,-3.050071,2.443016,-5.932464,6.062883,-1.819902,0.117661,6.196005,6.326754,5.506079,-6.150986,9.408880,9.682729,9.256207,3.728090,6.437473,-3.690192,-0.561280,2.307163,-1.997402,-7.312015,-5.130288,-9.243099,3.772550,-0.482722,-2.683927,1.455792,-2.813578,9.827408,-3.793090,8.905202,-3.164456,2.194712,-1.183837,-4.096063,-9.798491,6.478521,-0.821220,-0.137615,2.608805,7.754098,-6.930202,4.771980,5.634629,-3.141746,8.814737,9.705862,7.114933,-5.452433,-9.660279,-1.054281,9.688111,7.175414,8.485813,0.373963,-4.903704,-4.597912,4.596920,-3.976144,-4.790501,-9.637878,-1.957298,4.597746,9.430269,1.338540,-6.658594,-7.472376,5.754896,-0.534122,2.678663,4.089657,-3.552112,-6.726039,9.930589,-3.308051,0.340552,2.479193,-8.671625,2.810208,-5.537486,1.123302,-7.405668,-1.786132,8.436806,-8.075160,-9.668912,8.688186,6.483389,-8.494171,-0.157399,-2.683641,-9.802149,8.041655,2.302737,-5.988824,-6.079400,-2.480796,6.157139,-4.397570,9.559061,9.826828,6.590610,-0.340980,4.842224,9.904758,1.898806,3.565373,-8.614844,4.871010,-8.793432,3.823225,3.872327,5.228386,4.396837,-7.663051,0.244573,-0.030362,-1.661583,4.983159,-3.491291,9.787789,6.608022,9.056365,7.611415,4.802553,-7.950592,-4.212650,-1.414671,-1.246756,-8.828478,3.963950,-5.950135,-6.504059,-7.973251,-4.948767,-4.805837,5.142198,5.335091,3.030771,5.971819,-4.276642,-5.090708,7.837993,-8.601395,-8.990352,-3.168439,-4.139535,4.189413,5.319990,3.204101,-6.037482,1.671228,2.686641,-7.747296,-9.218124,7.533236,4.769491,7.696913,-3.686710,-7.008626,-1.524099,-7.273757,-7.643417,2.096495,-4.128652,3.485153,3.748330,-0.310108,3.139575,2.187653,-1.906359,-3.179180,-4.887268,-2.515049,-3.349707,5.818354,-6.335655,7.186413,-3.564868,-2.734484,1.571916,8.409511,5.852066,3.036121,6.487974,-7.089577,6.448157,9.823976,-5.225980,9.380476,0.647847,-5.780093,-2.093388,-8.668054,-8.778226,8.860776,-4.779964,-6.718042,-4.910249,6.555013,8.901805,9.708397,-7.682061,-4.834650,8.605431,1.935614,3.907704,-5.329742,-7.943515,-2.353867,2.626509,-4.165869,-8.614677,7.950296,6.893329,-8.455066,-2.068279,5.091234,9.036709,-9.711191,5.471840,4.537436,7.175863,2.340931,-5.461503,-4.265382,2.855611,7.444175,-3.751207,5.377312,0.043856,-8.235757,6.912420,3.581774,4.449550,1.864083,0.908644,5.035835,-4.515970,-6.855857,-6.951088,6.236224,-5.572540,-8.882148,0.619693,-9.889494,6.871388,0.942050,-7.430391,6.507609,-9.260271,5.803642,2.995623,-0.225621,4.492965,-0.239858,2.420753,7.460401,9.360377,-7.784999,7.555474,8.390070,9.587235,-6.301026,1.665452,-8.737547,-0.669576,-7.096870,-5.723219,-5.456738,3.903529,-4.748095,-7.590139,-0.010553,2.841258,-7.665976,5.624720,7.150149,-6.295016,8.084953,-9.470042,2.192350,2.749340,-0.274728,-4.716654,2.650524,-6.647562,2.154313,6.789783,-5.767231,-7.216212,-3.189068,-4.699627,5.046291,9.606719,7.506121,-9.306009,-6.840128,-5.342567,4.248418,0.617460,-7.440478,-1.453768,-9.132884,-2.619151,-0.011766,-3.087600,-0.536556,1.387034,8.726222,-7.184778,-5.615350,-4.725428,-7.242755,6.777510,6.339482,-7.001519,-9.129410,6.743016,0.394771,8.496284,0.679852,-2.284575,4.782214,3.060733,-9.251167,6.686614,-0.952076,2.856273,-4.409056,-5.303118,-5.999917,3.620274,-0.285089,4.901219,-8.615994,1.319184,-9.502496,-2.363894,3.542427,0.967150,6.901088,-3.141499,-8.753356,2.740999,7.253145,-3.390467,-7.693193,-2.318316,6.923370,-7.423133,1.443825,1.968466,1.485063,2.149263,1.002591,-6.675155,0.837746,-8.737930,2.252368,-4.921734,9.163539,-0.555772,-5.399200,-9.467126,-2.471399,-7.377666,9.529906,-0.135012,5.096345,5.048926,-8.962577,5.246173,6.392867,4.011069,8.971392,7.289572,-9.469418,1.782067,-5.722032,-7.575858,-3.143824,-5.919689,-8.019499,2.884071,-1.166917,-9.014153,-3.736299,-6.932015,3.255080,-0.786269,5.783005,-5.281126,0.284506,3.433782,4.143220,6.644223,-8.720210,4.631293,-1.918185,-4.228566,-9.349952,8.746838,-9.367624,-0.014451,6.073724,3.762713,-6.625391,-2.113563,3.762550,3.184783,-8.247127,-4.612143,8.996138,9.603422,-3.823825,-7.819691,5.611361,-9.524784,-0.851430,6.855029,7.114729,-7.424084,-7.584805,-5.069950,-3.242843,6.780621,-9.284173,1.456622,5.423148,1.710198,-1.014782,-9.393591,7.594912,-4.660103,1.327357,2.951792,-1.924086,-9.314380,-8.408065,-2.922581,2.797223,5.750583,5.763915,5.655040,-2.756016,8.408400,-1.048700,-0.769010,-9.612139,3.679039,-8.599941,-0.276066,1.804655,-0.202138,3.088015,-7.890681,-7.786485,-1.652204,4.950686,-5.324491,-8.999448,-6.500499,-9.823654,-6.387771,2.637041,-3.823057,-4.868564,-1.303243,-5.588756,-1.469586,4.081656,-6.749955,-6.048028,-1.471620,-5.760728,9.810079,-1.466101,6.727217,-2.609182,2.029602,-3.383200,-9.391731,-2.381888,-1.704658,4.375575,3.290724,7.152992,-0.158395,-9.276022,7.566218,1.127518,-6.967370,9.161523,-4.075974,3.271004,1.724329,-2.066394,4.102892,8.274802,7.872071,-5.944117,6.273972,-6.262669,9.241533,-3.895528,6.943563,-5.885958,6.447821,6.760755,7.106936,8.474654,-0.044347,-9.442286,5.783661,6.013297,-0.542205,6.846269,-5.274310,7.413350,-4.049114,-5.207578,-5.030755,1.717654,-5.510972,4.010180,-4.917985,0.272847,-3.076993,-5.945340,2.349516,-0.590338,7.104997,1.304749,0.453138,3.740254,7.495430,1.664546,-9.093863,2.212376,-3.677268,5.344190,-2.798087,0.956712,-4.662774,-9.019629,-0.422393,-2.822747,-4.455484,3.500898,-3.386245,0.522541,-3.725999,9.953975,-9.194003,-3.848436,-2.588983,0.303784,-6.987119,7.055267,-1.329104,-4.493155,9.884781,-3.988843,-9.206100,9.861997,-0.986913,-4.031921,-5.133098], dtype = "float64")#candidate|2516|(1176,)|const|float64
call_2514 = relay.TupleGetItem(func_465_call(relay.reshape(const_2515.astype('float32'), [11, 12, 8]), relay.reshape(const_2516.astype('float64'), [1176,]), ), 0)
call_2517 = relay.TupleGetItem(func_469_call(relay.reshape(const_2515.astype('float32'), [11, 12, 8]), relay.reshape(const_2516.astype('float64'), [1176,]), ), 0)
output = relay.Tuple([uop_2505,bop_2508,call_2514,const_2515,const_2516,])
output2 = relay.Tuple([uop_2505,bop_2508,call_2517,const_2515,const_2516,])
func_2521 = relay.Function([var_2496,var_2507,], output)
mod['func_2521'] = func_2521
mod = relay.transform.InferType()(mod)
mutated_mod['func_2521'] = func_2521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mutated_mod.get_global_var('func_2521')
var_2523 = relay.var("var_2523", dtype = "float32", shape = (5, 5, 6))#candidate|2523|(5, 5, 6)|var|float32
var_2524 = relay.var("var_2524", dtype = "float32", shape = (5, 5, 6))#candidate|2524|(5, 5, 6)|var|float32
call_2522 = func_2521_call(var_2523,var_2524,)
output = call_2522
func_2525 = relay.Function([var_2523,var_2524,], output)
mutated_mod['func_2525'] = func_2525
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2541 = relay.const([[[10,-2,-5,-9,-2,10,8,2],[5,-10,-6,2,2,5,-6,8],[7,2,3,-10,4,5,-5,-1],[-8,1,1,-4,-1,-8,1,2],[-10,-10,4,7,10,-1,8,7]],[[-4,-10,2,-5,-2,-2,1,-1],[-8,5,10,3,4,7,7,-10],[2,3,3,-1,-3,7,8,-6],[-8,-10,10,10,-7,-8,1,-5],[-5,9,8,-2,-2,6,9,-6]],[[-2,-7,2,-8,4,-5,-1,8],[-9,-5,-6,8,8,-9,6,5],[-4,2,-8,6,6,5,-2,-7],[-1,-7,-1,-8,-9,-5,-2,2],[-3,-3,7,-10,-1,-2,1,3]],[[2,-10,7,2,-5,-10,9,7],[8,-2,-9,8,1,-2,-1,-4],[-7,8,4,-9,-10,8,-10,-3],[6,3,-8,-5,3,1,4,-1],[-2,4,-10,7,-1,1,-1,-10]],[[-8,4,4,-4,9,-10,-3,-4],[9,-2,-1,1,7,3,-6,7],[-6,1,10,-4,3,2,5,2],[3,5,5,6,-7,10,-4,7],[-7,7,-6,-6,4,-4,3,-7]],[[9,2,7,4,9,-9,-10,-10],[-5,-4,-7,-9,-6,4,-6,-6],[2,-9,-8,-4,6,7,-2,-4],[-3,7,7,-10,8,4,4,10],[-10,6,-1,-4,-6,4,-7,4]],[[-7,1,-8,10,-7,-1,-4,7],[-2,-1,-5,-2,5,6,6,-5],[10,8,-9,5,3,-6,-7,-3],[6,-1,-1,2,1,-2,-10,2],[3,10,-10,-5,-9,10,-4,6]],[[-10,-2,2,-9,-4,9,-7,3],[-1,-1,6,-4,7,-4,8,4],[8,9,2,2,8,-7,2,-7],[3,-6,4,-5,-3,-5,-10,10],[-4,8,8,1,3,3,2,-10]],[[7,-3,5,1,8,10,-4,-5],[-9,6,5,5,9,-7,9,-3],[3,-7,-7,-8,-6,-4,7,1],[-6,-5,-6,1,2,4,5,-10],[-7,-9,-7,1,5,6,-9,-10]],[[-3,6,-9,3,-4,5,-8,10],[-3,-10,-7,-6,10,-6,8,-4],[3,8,-8,5,2,1,-8,3],[-3,-4,8,5,-3,-9,-7,1],[4,3,-2,3,-2,-2,-9,-2]],[[2,3,9,1,10,-4,-4,8],[6,-9,-4,2,9,6,3,-10],[-7,6,-2,-9,-7,-9,10,9],[1,-4,-2,-8,-2,-9,-4,9],[-4,7,-2,-8,9,-7,5,5]],[[-6,10,7,1,4,-6,10,10],[-10,10,3,-10,7,5,5,-7],[-1,3,7,-9,5,-9,-1,-1],[-8,-5,-2,7,-4,1,-2,-2],[-7,3,8,-5,9,2,-5,-3]],[[5,-5,-4,-6,5,-8,6,-2],[-5,-7,10,8,7,9,2,-8],[1,5,8,-4,7,-1,-9,7],[1,9,-9,-9,8,10,-2,-8],[-4,10,4,-4,-3,-5,-10,-8]],[[-10,2,-3,-6,1,-10,6,7],[3,-1,-1,-8,-2,9,-7,4],[-4,-7,-9,8,2,-4,10,-10],[1,7,-8,8,-10,-3,4,6],[-4,-4,9,5,-4,2,4,-4]]], dtype = "uint16")#candidate|2541|(14, 5, 8)|const|uint16
const_2542 = relay.const([[[2,-1,6,-1,-4,-7,6,7],[-10,2,-6,-8,-3,1,5,-8],[-5,-9,2,1,9,-8,-3,6],[6,7,-10,-10,5,1,-9,8],[9,-2,7,7,-3,-10,-10,8]],[[-6,-7,9,1,1,3,-10,-1],[-10,2,-10,1,5,-10,10,2],[4,-2,9,6,-7,9,1,10],[4,-9,2,8,3,-4,-7,-1],[-6,-3,-10,4,-9,7,-2,1]],[[1,-10,2,-10,-3,10,-1,-10],[-5,3,-1,3,1,-10,-8,-8],[-3,-10,6,1,-6,-1,3,-5],[4,4,-6,-7,-8,9,10,-3],[-8,9,6,-3,-5,1,-6,6]],[[6,-9,-10,1,-7,-4,-10,1],[3,-1,-2,-1,-9,-4,-1,-6],[4,-3,-6,-10,5,-10,-2,-2],[-3,-2,-7,3,-9,2,-9,9],[6,8,6,-2,4,7,-3,1]],[[-4,-2,-9,-7,-3,-8,-7,-8],[9,-4,-7,-8,-8,-9,6,10],[4,-2,-8,9,8,-6,4,-10],[9,10,10,-7,4,1,5,-1],[3,1,-2,5,-10,7,-2,-7]],[[-10,-8,-4,9,2,-8,-3,-9],[-2,-10,-3,-6,-5,-6,-9,9],[-1,-2,-6,3,-2,7,1,6],[6,-10,2,-3,1,3,4,1],[-10,2,-3,4,-7,-3,-6,-4]],[[4,3,-1,10,-6,2,-6,7],[4,-2,4,2,-6,2,3,-6],[3,2,6,6,6,1,-10,8],[8,3,-3,-3,-2,-2,-4,-4],[10,1,-10,7,6,10,6,2]],[[-7,6,-1,-10,8,8,4,7],[7,-9,6,7,-6,9,-6,-8],[5,-2,4,9,-5,2,-6,3],[-8,4,-10,7,7,-10,7,5],[-1,-10,10,7,-4,-7,7,-8]],[[4,-10,-1,10,10,-1,9,1],[-5,-7,8,-10,-10,-7,-9,-5],[-4,-7,1,-5,9,-10,-3,10],[-9,1,-8,4,-2,-8,-3,-1],[-7,4,-6,-1,-6,-5,9,7]],[[2,-9,-2,10,-1,2,9,-3],[-2,4,-7,-6,5,3,7,-4],[-9,1,6,-3,8,-1,1,-5],[2,-4,4,3,1,3,-6,-9],[2,4,1,-2,-7,8,-8,2]],[[4,-10,-3,-8,-9,-6,-8,9],[7,7,-3,9,-4,7,-1,4],[2,-2,7,3,10,2,-4,-9],[4,-1,5,-6,-6,-10,1,-10],[8,-10,-3,2,2,-5,-2,-1]],[[10,-5,9,-5,6,10,9,-2],[6,-3,-7,-4,8,-9,-2,9],[10,1,7,4,1,-1,-6,9],[-5,10,-7,2,2,8,-10,7],[2,9,4,-3,7,-5,-6,-6]],[[-9,2,-1,-3,-6,8,-9,5],[-5,-1,10,-3,-7,-2,5,2],[4,-9,-10,7,-3,-1,-2,-6],[-3,-3,2,-1,-6,-9,-1,-4],[9,-10,-6,-5,4,3,-4,-10]],[[-7,-1,-10,-7,-5,7,1,3],[-3,-9,1,-7,-1,10,1,-4],[4,-9,-10,-3,5,3,1,6],[-8,-4,10,-6,4,-8,-8,5],[-2,8,-1,8,-1,3,-4,8]]], dtype = "uint16")#candidate|2542|(14, 5, 8)|const|uint16
bop_2543 = relay.logical_xor(const_2541.astype('uint16'), relay.reshape(const_2542.astype('uint16'), relay.shape_of(const_2541))) # shape=(14, 5, 8)
output = relay.Tuple([bop_2543,])
output2 = relay.Tuple([bop_2543,])
func_2553 = relay.Function([], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
mutated_mod['func_2553'] = func_2553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mutated_mod.get_global_var('func_2553')
call_2554 = func_2553_call()
output = call_2554
func_2555 = relay.Function([], output)
mutated_mod['func_2555'] = func_2555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_2615 = relay.TupleGetItem(func_2553_call(), 0)
call_2616 = relay.TupleGetItem(func_2555_call(), 0)
func_1448_call = mod.get_global_var('func_1448')
func_1451_call = mutated_mod.get_global_var('func_1451')
var_2630 = relay.var("var_2630", dtype = "uint64", shape = (286,))#candidate|2630|(286,)|var|uint64
var_2631 = relay.var("var_2631", dtype = "uint32", shape = (200,))#candidate|2631|(200,)|var|uint32
call_2629 = relay.TupleGetItem(func_1448_call(relay.reshape(var_2630.astype('uint64'), [13, 2, 11]), relay.reshape(var_2631.astype('uint32'), [200,]), ), 0)
call_2632 = relay.TupleGetItem(func_1451_call(relay.reshape(var_2630.astype('uint64'), [13, 2, 11]), relay.reshape(var_2631.astype('uint32'), [200,]), ), 0)
output = relay.Tuple([call_2615,call_2629,var_2630,var_2631,])
output2 = relay.Tuple([call_2616,call_2632,var_2630,var_2631,])
func_2635 = relay.Function([var_2630,var_2631,], output)
mod['func_2635'] = func_2635
mod = relay.transform.InferType()(mod)
var_2636 = relay.var("var_2636", dtype = "uint64", shape = (286,))#candidate|2636|(286,)|var|uint64
var_2637 = relay.var("var_2637", dtype = "uint32", shape = (200,))#candidate|2637|(200,)|var|uint32
output = func_2635(var_2636,var_2637,)
func_2638 = relay.Function([var_2636,var_2637,], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2650 = relay.const([[[-5.255412,-9.020105,5.260943,3.783086,-6.697313,2.969688,8.342351,6.905785,-3.730596],[-1.068814,-4.226055,-3.780936,9.548310,-5.998610,-1.902419,6.818802,-2.182116,0.326193],[-7.284015,-6.994160,5.265241,4.419886,6.962044,-6.254771,2.331738,-0.977628,4.580850],[5.135085,-6.744774,7.391374,2.667098,3.636015,4.211339,6.815793,3.465339,-2.358465],[6.105940,-0.700288,-4.891693,8.067749,8.853123,2.752284,-1.212249,6.026110,-9.353259],[0.410140,-7.806821,5.479655,7.453191,2.433768,-0.627703,5.828634,4.389915,-8.480252],[-5.562118,8.141552,-8.539563,3.947004,-4.343853,5.968002,2.965002,-6.247191,8.579176],[2.922735,1.659670,0.270241,-9.967938,7.845197,-8.417820,6.214878,7.504036,1.969040],[3.208372,-7.045800,8.822740,-9.564928,3.663610,-9.796584,-2.147827,4.849081,-1.054016],[-6.408416,-9.446058,8.276029,1.675915,6.841293,2.754641,-8.340950,5.186986,-4.841880],[-2.621156,-6.029370,-5.735572,-4.319274,-6.887593,-7.888444,8.059918,-9.592259,-6.505865],[-5.562376,-0.787337,3.757054,-6.240166,7.932095,-2.937443,0.702812,-0.843821,-3.529506],[-8.170820,-2.274504,9.896180,-2.065574,0.075746,-3.451756,-7.083024,8.352164,-8.168903],[-4.914600,4.899450,1.720998,-4.390664,-1.568971,-8.206918,1.977492,-3.387173,0.068267]],[[-7.940058,-4.700445,-0.887002,5.359683,9.876422,-3.920262,4.134837,4.938063,-1.136473],[0.363825,2.143458,0.162904,-3.899680,-2.897701,-9.339467,-9.412237,8.684178,-4.731290],[2.384844,-0.830995,0.241673,2.336693,-0.854485,8.937579,3.969416,8.355693,-2.679606],[-6.068063,0.084873,3.459705,-6.826170,-4.887188,-0.357738,-5.919062,-6.124704,2.644913],[4.180087,2.830129,3.557860,-9.631405,6.933757,7.911237,-5.877128,-0.646771,-8.347386],[-2.300505,-9.308144,4.508907,5.866591,-2.496279,-8.595150,2.149648,-2.201549,1.816596],[1.888712,-6.278009,4.107309,4.399088,6.340722,6.946761,6.052319,0.694470,-2.714816],[0.706965,-3.412828,-0.783127,9.833245,-8.133680,-9.449816,7.914024,4.402636,-9.046858],[3.570302,-8.923127,3.036922,-0.680321,2.169457,-1.102712,-1.471638,-2.207673,-0.996249],[-6.165960,-4.526273,4.196595,-5.313735,9.853504,9.126498,8.802198,5.712638,6.717772],[8.661262,0.951001,2.780123,0.559787,7.137364,-6.292613,-8.137826,6.128955,4.863550],[9.244013,0.097990,2.392544,-9.683200,2.128577,2.561452,-7.328370,4.519681,6.022246],[-3.328704,-6.029256,-9.099902,5.085334,7.229882,-6.514263,0.555976,3.166849,-8.749406],[1.890091,9.498773,-4.434351,-4.745546,2.353467,-3.892007,-6.118870,8.657103,1.953428]],[[-6.208345,-5.137261,2.010350,-0.980068,-7.484020,-3.377084,8.505250,9.996419,-8.206022],[3.870906,2.425317,-2.142391,9.916741,-8.418310,-6.754436,0.567467,-3.752353,-9.473131],[-0.875065,-7.795204,-4.051018,6.102651,8.064872,-7.705362,-2.290063,-5.090856,2.023994],[6.650584,9.932075,8.592496,2.525746,-3.978853,3.310376,-9.252829,-0.552142,-0.838367],[5.178747,-7.063755,6.017765,-7.951207,-3.918238,2.304027,-6.762998,-5.562118,-6.448081],[3.239891,-0.706554,4.005071,-0.249429,7.401591,-4.429745,-9.917183,3.836658,-7.039873],[1.647380,-2.720748,5.504580,5.478771,0.457175,-0.146050,-9.087371,4.657419,6.893339],[-5.273361,-3.871519,-1.965383,8.841327,-7.746299,2.130405,6.385553,-8.388840,-8.920367],[2.384367,4.160596,-0.046010,-1.732802,0.447383,0.100262,-5.978183,-9.158468,-7.883111],[-3.520653,7.262102,-9.596129,6.153655,-4.749972,-2.654409,-5.298471,-4.453239,-2.902267],[9.495724,9.400201,-0.880508,3.115084,-5.832424,-0.867402,5.266872,2.751318,6.757487],[0.189676,7.117307,-4.136331,1.818386,-4.845687,-1.762223,-6.857905,1.397967,-4.506760],[-2.470369,6.473503,-4.489142,4.769803,-6.611145,-0.710354,0.032228,-8.419936,3.434874],[-3.845988,6.428316,5.445094,7.888129,8.278759,7.008874,-0.352611,-2.028305,9.664106]]], dtype = "float32")#candidate|2650|(3, 14, 9)|const|float32
uop_2651 = relay.sigmoid(const_2650.astype('float32')) # shape=(3, 14, 9)
uop_2657 = relay.acosh(uop_2651.astype('float32')) # shape=(3, 14, 9)
bop_2659 = relay.bitwise_and(const_2650.astype('uint8'), relay.reshape(uop_2657.astype('uint8'), relay.shape_of(const_2650))) # shape=(3, 14, 9)
uop_2673 = relay.cos(bop_2659.astype('float64')) # shape=(3, 14, 9)
output = uop_2673
output2 = uop_2673
func_2679 = relay.Function([], output)
mod['func_2679'] = func_2679
mod = relay.transform.InferType()(mod)
output = func_2679()
func_2680 = relay.Function([], output)
mutated_mod['func_2680'] = func_2680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_2681 = relay.TupleGetItem(func_2553_call(), 0)
call_2682 = relay.TupleGetItem(func_2555_call(), 0)
var_2691 = relay.var("var_2691", dtype = "uint16", shape = (14, 5, 8))#candidate|2691|(14, 5, 8)|var|uint16
bop_2692 = relay.equal(call_2681.astype('bool'), relay.reshape(var_2691.astype('bool'), relay.shape_of(call_2681))) # shape=(14, 5, 8)
bop_2695 = relay.equal(call_2682.astype('bool'), relay.reshape(var_2691.astype('bool'), relay.shape_of(call_2682))) # shape=(14, 5, 8)
bop_2701 = relay.minimum(call_2681.astype('uint64'), relay.reshape(var_2691.astype('uint64'), relay.shape_of(call_2681))) # shape=(14, 5, 8)
bop_2704 = relay.minimum(call_2682.astype('uint64'), relay.reshape(var_2691.astype('uint64'), relay.shape_of(call_2682))) # shape=(14, 5, 8)
bop_2706 = relay.multiply(bop_2692.astype('int32'), relay.reshape(call_2681.astype('int32'), relay.shape_of(bop_2692))) # shape=(14, 5, 8)
bop_2709 = relay.multiply(bop_2695.astype('int32'), relay.reshape(call_2682.astype('int32'), relay.shape_of(bop_2695))) # shape=(14, 5, 8)
uop_2716 = relay.tan(bop_2706.astype('float64')) # shape=(14, 5, 8)
uop_2718 = relay.tan(bop_2709.astype('float64')) # shape=(14, 5, 8)
output = relay.Tuple([bop_2701,uop_2716,])
output2 = relay.Tuple([bop_2704,uop_2718,])
func_2721 = relay.Function([var_2691,], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
mutated_mod['func_2721'] = func_2721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2722 = relay.var("var_2722", dtype = "uint16", shape = (14, 5, 8))#candidate|2722|(14, 5, 8)|var|uint16
func_2721_call = mutated_mod.get_global_var('func_2721')
call_2723 = func_2721_call(var_2722)
output = call_2723
func_2724 = relay.Function([var_2722], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_2731 = relay.TupleGetItem(func_2553_call(), 0)
call_2732 = relay.TupleGetItem(func_2555_call(), 0)
uop_2736 = relay.log2(call_2731.astype('float64')) # shape=(14, 5, 8)
uop_2738 = relay.log2(call_2732.astype('float64')) # shape=(14, 5, 8)
output = uop_2736
output2 = uop_2738
func_2745 = relay.Function([], output)
mod['func_2745'] = func_2745
mod = relay.transform.InferType()(mod)
output = func_2745()
func_2746 = relay.Function([], output)
mutated_mod['func_2746'] = func_2746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2746_call = mutated_mod.get_global_var('func_2746')
call_2782 = func_2745_call()
call_2783 = func_2745_call()
uop_2798 = relay.cos(call_2782.astype('float32')) # shape=(14, 5, 8)
uop_2800 = relay.cos(call_2783.astype('float32')) # shape=(14, 5, 8)
func_1448_call = mod.get_global_var('func_1448')
func_1451_call = mutated_mod.get_global_var('func_1451')
var_2812 = relay.var("var_2812", dtype = "uint64", shape = (286,))#candidate|2812|(286,)|var|uint64
const_2813 = relay.const([8,5,-1,6,-5,-10,2,10,10,-4,8,8,2,4,9,-2,-1,10,10,-10,5,-9,-7,-10,-2,-1,-8,-4,5,4,3,-3,-5,-10,1,7,-9,-4,-5,5,-9,-10,5,7,1,-6,-7,1,-5,6,1,3,2,-8,10,-6,2,-9,-9,-9,-8,-9,5,9,-2,-4,-10,5,-4,9,-10,6,1,9,2,2,-2,-6,-10,-4,2,7,7,-2,-7,-7,-7,9,6,8,5,-7,3,-3,-10,7,-9,4,6,-8,-8,-10,-6,3,-8,-10,-4,-9,2,-2,-2,-6,3,6,-7,-4,7,-10,-4,7,-5,-4,-5,6,8,-2,6,9,10,-1,-10,-10,1,-2,-4,-9,-7,7,-8,1,-10,-6,3,-6,-1,-9,-1,9,-10,9,1,4,2,10,-6,-8,6,-1,-9,3,1,2,1,-4,-6,7,-2,5,-2,-4,6,5,5,-4,-2,-6,-6,-6,2,10,-4,5,-5,8,5,-8,-3,4,8,2,-4,-2,7,-9,-8,8,3,-8,4,-10], dtype = "uint32")#candidate|2813|(200,)|const|uint32
call_2811 = relay.TupleGetItem(func_1448_call(relay.reshape(var_2812.astype('uint64'), [13, 2, 11]), relay.reshape(const_2813.astype('uint32'), [200,]), ), 1)
call_2814 = relay.TupleGetItem(func_1451_call(relay.reshape(var_2812.astype('uint64'), [13, 2, 11]), relay.reshape(const_2813.astype('uint32'), [200,]), ), 1)
bop_2828 = relay.mod(uop_2798.astype('float32'), relay.reshape(call_2782.astype('float32'), relay.shape_of(uop_2798))) # shape=(14, 5, 8)
bop_2831 = relay.mod(uop_2800.astype('float32'), relay.reshape(call_2783.astype('float32'), relay.shape_of(uop_2800))) # shape=(14, 5, 8)
func_2635_call = mod.get_global_var('func_2635')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2834 = relay.TupleGetItem(func_2635_call(relay.reshape(var_2812.astype('uint64'), [286,]), relay.reshape(call_2811.astype('uint32'), [200,]), ), 3)
call_2835 = relay.TupleGetItem(func_2638_call(relay.reshape(var_2812.astype('uint64'), [286,]), relay.reshape(call_2811.astype('uint32'), [200,]), ), 3)
func_1315_call = mod.get_global_var('func_1315')
func_1320_call = mutated_mod.get_global_var('func_1320')
const_2844 = relay.const(-9, dtype = "int32")#candidate|2844|()|const|int32
var_2845 = relay.var("var_2845", dtype = "int32", shape = (180,))#candidate|2845|(180,)|var|int32
var_2846 = relay.var("var_2846", dtype = "float64", shape = (6, 196))#candidate|2846|(6, 196)|var|float64
call_2843 = relay.TupleGetItem(func_1315_call(relay.reshape(const_2844.astype('int32'), []), relay.reshape(var_2845.astype('int32'), [4, 15, 3]), relay.reshape(var_2846.astype('float64'), [1176,]), ), 4)
call_2847 = relay.TupleGetItem(func_1320_call(relay.reshape(const_2844.astype('int32'), []), relay.reshape(var_2845.astype('int32'), [4, 15, 3]), relay.reshape(var_2846.astype('float64'), [1176,]), ), 4)
output = relay.Tuple([call_2811,var_2812,const_2813,bop_2828,call_2834,call_2843,const_2844,var_2845,var_2846,])
output2 = relay.Tuple([call_2814,var_2812,const_2813,bop_2831,call_2835,call_2847,const_2844,var_2845,var_2846,])
func_2851 = relay.Function([var_2812,var_2845,var_2846,], output)
mod['func_2851'] = func_2851
mod = relay.transform.InferType()(mod)
mutated_mod['func_2851'] = func_2851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2851_call = mutated_mod.get_global_var('func_2851')
var_2853 = relay.var("var_2853", dtype = "uint64", shape = (286,))#candidate|2853|(286,)|var|uint64
var_2854 = relay.var("var_2854", dtype = "int32", shape = (180,))#candidate|2854|(180,)|var|int32
var_2855 = relay.var("var_2855", dtype = "float64", shape = (6, 196))#candidate|2855|(6, 196)|var|float64
call_2852 = func_2851_call(var_2853,var_2854,var_2855,)
output = call_2852
func_2856 = relay.Function([var_2853,var_2854,var_2855,], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_2931 = relay.TupleGetItem(func_2553_call(), 0)
call_2932 = relay.TupleGetItem(func_2555_call(), 0)
output = relay.Tuple([call_2931,])
output2 = relay.Tuple([call_2932,])
func_2937 = relay.Function([], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mutated_mod.get_global_var('func_2937')
call_2938 = func_2937_call()
output = call_2938
func_2939 = relay.Function([], output)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_2946 = func_2679_call()
call_2947 = func_2679_call()
output = relay.Tuple([call_2946,])
output2 = relay.Tuple([call_2947,])
func_2949 = relay.Function([], output)
mod['func_2949'] = func_2949
mod = relay.transform.InferType()(mod)
output = func_2949()
func_2950 = relay.Function([], output)
mutated_mod['func_2950'] = func_2950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_2951 = relay.TupleGetItem(func_2553_call(), 0)
call_2952 = relay.TupleGetItem(func_2555_call(), 0)
func_2721_call = mod.get_global_var('func_2721')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2970 = relay.TupleGetItem(func_2721_call(relay.reshape(call_2951.astype('uint16'), [14, 5, 8])), 1)
call_2971 = relay.TupleGetItem(func_2724_call(relay.reshape(call_2951.astype('uint16'), [14, 5, 8])), 1)
uop_2979 = relay.asin(call_2951.astype('float32')) # shape=(14, 5, 8)
uop_2981 = relay.asin(call_2952.astype('float32')) # shape=(14, 5, 8)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
var_2984 = relay.var("var_2984", dtype = "uint16", shape = (168,))#candidate|2984|(168,)|var|uint16
call_2983 = relay.TupleGetItem(func_131_call(relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), ), 0)
call_2985 = relay.TupleGetItem(func_135_call(relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), ), 0)
bop_2989 = relay.bitwise_or(uop_2979.astype('int8'), relay.reshape(call_2970.astype('int8'), relay.shape_of(uop_2979))) # shape=(14, 5, 8)
bop_2992 = relay.bitwise_or(uop_2981.astype('int8'), relay.reshape(call_2971.astype('int8'), relay.shape_of(uop_2981))) # shape=(14, 5, 8)
func_465_call = mod.get_global_var('func_465')
func_469_call = mutated_mod.get_global_var('func_469')
var_2998 = relay.var("var_2998", dtype = "float32", shape = (1056,))#candidate|2998|(1056,)|var|float32
var_2999 = relay.var("var_2999", dtype = "float64", shape = (1176,))#candidate|2999|(1176,)|var|float64
call_2997 = relay.TupleGetItem(func_465_call(relay.reshape(var_2998.astype('float32'), [11, 12, 8]), relay.reshape(var_2999.astype('float64'), [1176,]), ), 1)
call_3000 = relay.TupleGetItem(func_469_call(relay.reshape(var_2998.astype('float32'), [11, 12, 8]), relay.reshape(var_2999.astype('float64'), [1176,]), ), 1)
func_2365_call = mod.get_global_var('func_2365')
func_2369_call = mutated_mod.get_global_var('func_2369')
const_3004 = relay.const([-5.291529,1.318739,-7.410565,-0.730065,-2.030449,1.299471,-0.628195,-9.165183,1.347776,4.295196,1.789014,-0.693532,6.464018,3.639208,8.827770,8.829809,-2.549713,1.878061,8.716780,3.427628,-6.841691,5.331471,9.965491,8.124745,-5.120412,-3.939447,-0.315614,-3.907837,4.044809,-2.352758,-6.784015,-5.496835,-9.565776,4.992320,-3.535818,-5.068505,5.689409,6.776979,6.180238,-8.489012,-4.391792,1.712376,6.898686,-1.071607,1.301925,-4.276793,-3.356642,7.034181,-7.471299,-6.816194,0.434316,4.364809,-7.447435,4.652213,1.282048,-5.591720,-2.863663,-3.510265,1.168899,-3.453232,8.954727,-3.664464,-5.285086,-5.106442,-4.284079,1.986544,8.372651,-3.490845,6.468527,4.330505,8.349824,-2.701554,-0.117248,-9.848223,4.946487,-4.240224,8.702698,-0.347524,-6.759855,-5.288944,7.090036,-1.083741,-0.793708,9.309571,-5.762993,-0.716034,-8.750386,-9.195882,0.698793,-0.937671,5.897275,8.577092,4.745960,-6.522425,-4.172447,-8.184906,-4.645268,4.873756,9.601304,0.278413,9.753039,-4.143910,-0.811389,-9.888344,1.865576,0.905371,-3.765213,3.318024,-2.172304,5.420537,-5.254700,8.532170,6.692192,9.512829,7.199385,-0.640711,-4.427056,-4.230137,5.421968,-7.617844,4.955649,-6.151634,-6.068813,4.544487,6.909308,0.521272,-3.679068,9.263228,1.359547,-1.787764,8.076112,-8.022670,8.626355,-3.096867,7.208899,7.801640,-6.346061,-4.686362,5.124230,-1.791330,1.191606,-7.734213,-4.889398,2.095974,-3.976331,-6.696237,-0.505209,1.973703,3.577891,1.708962,-7.309728,9.841594,-0.518259,9.930390,0.209308,-5.467511,-2.729570,-3.565344,-3.220334,-2.371294,9.199541,-7.714842,3.845197,-4.481298,-7.599071,-8.247405,-6.128885,8.090187,6.131908,7.430228,-6.811264,5.496632,-5.032636,8.227970,5.121120,-9.086825,-8.299760,2.120289,-0.354238,-3.476165,5.591903,-3.537650,-0.428630,-3.605037,-4.676149,-5.325950,3.161498,2.814217,3.755842,2.992750,0.035645,-6.867034,-4.561711,2.927834,0.295683,4.703773,-4.791834,-4.692628,-2.607720,3.758252,-6.249883,7.398105,8.345662,-0.475111,-2.734226,-7.137587,5.968427,0.762188,-3.970694,-6.819173,7.155939,-0.039696,0.226731,-7.181397,1.581536,2.082294,-1.879739,4.778363,3.982820,-9.914987,6.232891,4.229043,9.142830,9.280255,-4.600838,8.185970,8.259795,4.544530,0.601170,-3.335535,6.542818,-4.762458,5.686005,-3.024004,6.936120,-0.274942,8.455041,3.902417,-1.308416,-0.835936,3.895972,-7.949018,0.341869,5.143588,-2.824382,5.927765,6.869266,2.316393,7.271749,-0.991664,-5.607974,-1.427202,-4.617178,5.371046,-6.941952,6.296556,6.041309,-5.301726,-4.804646,3.653737,-9.018013,-7.550351,9.201632,-4.068544,0.115238,6.204199,1.375510,3.651654,-2.862066,-7.224122,-7.107766,-4.355878,-7.034131,-2.423015,-4.165340,5.444714,-3.857729,4.410784,9.583969,2.764375,-1.684937,-3.948661,-7.931095,6.079228,-3.466179,7.600434,-5.552544,7.787916,-6.718569,8.907002,3.370195,6.010829,-6.920541,7.018800,-7.828869,3.408805,-5.605655,-0.429442,4.453052,7.887309,-9.029507,2.495199,-7.095493,0.296624,-3.890824,6.987390,7.301682,-4.314726], dtype = "float32")#candidate|3004|(308,)|const|float32
const_3005 = relay.const([[-6.535246,1.534291,2.389052,-1.420787,3.210732,-6.353548,-6.647317,-5.499088,-0.130316,-3.465982],[3.531986,6.306929,8.745035,-8.097561,5.316306,-3.848678,-8.458791,-1.129123,-0.547346,1.738436],[-7.103567,8.408549,9.614337,3.940589,6.339476,1.254344,-3.436309,-0.311390,1.311519,8.571051],[9.097074,-8.838550,7.434939,8.440755,3.102279,9.728992,-2.569244,-9.779543,3.888621,7.993306],[-8.311023,1.009472,-7.476271,-2.336650,-6.623602,-8.582759,4.479356,1.233307,8.249639,-4.793987],[8.893277,-5.849407,-3.873592,7.759435,1.452499,-1.168111,7.185621,-4.181185,6.289522,9.197230],[0.493043,-7.641225,0.942398,1.035635,-1.460517,9.074095,-9.009226,-3.339248,2.741365,-7.822335],[-0.687668,-5.218284,-8.049983,6.040827,4.270423,5.537084,1.630032,6.553631,-3.424774,1.424096],[-8.779835,-6.804572,4.018511,8.066356,5.814026,7.474940,-8.121126,7.255901,-3.899658,0.144337],[-0.188554,-4.764234,-8.955581,-4.266526,7.659040,7.875875,-8.265419,-4.496357,-8.244286,-7.551325],[5.515470,-4.730150,1.437153,-3.515055,-6.961285,5.896077,-3.411754,-2.215434,5.396406,4.771386],[3.476039,-0.693892,2.010284,1.763783,-2.421694,8.245116,5.058492,-9.884367,9.267426,-4.352438],[-7.793167,-8.036053,-3.085414,8.319441,4.568966,-4.650975,2.420177,4.613894,4.357324,4.174289],[-0.162623,2.528143,-5.966061,0.146273,-6.887566,0.845509,7.212330,7.691408,2.694961,-2.359627],[-3.958916,3.327878,5.457689,-2.555511,3.183327,8.341538,-3.032539,1.706389,-9.491390,-5.367930],[-0.224383,2.007986,-2.733443,1.043172,4.898367,-0.383888,-4.172245,2.253823,-2.593809,-0.943817],[3.666730,-3.363396,-9.224485,-6.638263,-7.669566,4.419042,8.682097,-5.318924,-3.823933,8.366105],[4.913895,5.682188,0.048547,-9.064472,-5.550955,2.433317,-6.249778,7.863405,2.369514,1.766275],[-7.084897,-2.289854,0.437766,8.236501,3.244629,6.365531,7.824398,-2.665997,9.326213,-2.291755],[-6.538642,-1.172428,8.990308,8.986173,7.525573,-0.285694,-0.783284,3.303230,-5.757353,6.061125],[1.354346,-9.242865,4.022773,5.469148,2.995050,-3.461888,9.874435,-1.565805,-3.653515,0.590683],[-1.413426,2.943050,2.832144,-1.700636,-9.216784,9.913764,-3.202221,-2.624976,-4.843575,1.700221],[1.816104,0.963872,-5.566797,-1.221814,-8.729485,-4.160730,4.759335,1.764034,4.231884,-5.368152],[6.106322,9.225094,-9.555836,8.142673,-5.226165,-1.244759,-5.046706,-5.996435,-0.757848,6.958475],[9.340999,9.287510,8.668612,7.507687,2.794163,-9.509156,5.203291,-6.454796,3.549185,-8.926641],[-5.475472,-4.179830,2.831396,6.014261,3.944600,-8.444909,7.000489,9.218841,-8.334919,4.384177],[2.939651,-5.451772,0.709112,-9.294573,-2.756858,-2.183129,1.869185,0.001567,-6.493512,-9.883654],[4.974413,-4.408242,5.837140,0.407469,-0.344941,3.755474,3.109940,-5.239624,-8.857059,8.935910],[5.713919,-1.161444,-5.064663,6.503573,-2.056872,-8.981357,-8.069354,-3.217806,2.238397,9.299596],[-4.010667,5.226754,-8.197966,1.961067,-4.260013,5.563944,-3.138718,-1.430329,7.817871,3.154846],[-8.062039,7.120452,-1.440656,-5.745540,-6.177165,9.322658,-0.554582,-2.668824,-0.443256,4.102322],[-7.428479,1.711844,-1.369189,-5.164472,1.177445,-1.378602,9.119975,5.602853,7.052380,2.138964],[1.723080,4.983266,5.668865,3.676072,7.032888,-6.230399,9.774454,-9.050529,-6.465437,-9.621712],[5.713848,2.506784,-8.869678,-9.667027,-7.308933,6.473397,4.093634,0.670578,-0.669705,-9.086846],[5.287043,-8.215756,-4.588090,7.580068,5.142733,1.270577,-6.120921,4.818482,7.233962,-2.325459]], dtype = "float64")#candidate|3005|(35, 10)|const|float64
call_3003 = relay.TupleGetItem(func_2365_call(relay.reshape(const_3004.astype('float32'), [308,]), relay.reshape(var_2999.astype('float64'), [1176, 1]), relay.reshape(const_3005.astype('float64'), [5, 5, 14]), ), 0)
call_3006 = relay.TupleGetItem(func_2369_call(relay.reshape(const_3004.astype('float32'), [308,]), relay.reshape(var_2999.astype('float64'), [1176, 1]), relay.reshape(const_3005.astype('float64'), [5, 5, 14]), ), 0)
uop_3038 = relay.sqrt(const_3005.astype('float64')) # shape=(35, 10)
func_1597_call = mod.get_global_var('func_1597')
func_1601_call = mutated_mod.get_global_var('func_1601')
const_3047 = relay.const([3,5,-5,-7,-8,5,-8,-4,1,10,-10,7,5,-5,6,-5,-1,-5,1,9,6,7,8,-2,-3,-10,-5,8,-7,-2,4,6,-10,-2,-6,10,6,5,-1,4,-9,-10,3,4,-3,-7,-6,2,5,-6,-4,2,-4,-3,1,-2,2,-5,-1,7,5,-1,-6,-4,-9,-3,-7,-5,9,9,-5,-10,-4,-6,-4,-7,6,10,2,-4,-6,-4,-9,5,6,9,6,2,4,3,10,7,-1,-7,-2,-6,9,1,-8,7,-10,-9,6,6,-7,10,-10,-3,-5,-6,3,-3,-1,-10,1,-6,6,9,5,1,-4,-1,-9,7,-5,9,4,-10,-8,-5,2,2,-5,7,6,-5,-1,7,1,4,-9,-3,6,-10,-8,3,-6,-5,8,4,1,6,-4,-4,1,10,-10,2,10,10,9,-5,10,8,3,-6,9,-10,7,9,-1,-7,-4,9,-3,10,-2,-6,7,4,4,-6,-2,-10,-10,8,-8,6,-3,5,-2,7,2,-8,-7,-10,-2,6,5,-4,2,10,-6,3,-9,-7,-3,-7,-8,-5,9,6,6,-5,7,-7,1,1,4,-9,10,8,-10,10,1,-3,-3,-4,-10,-9,10,7,7,-1,2,6,5,7,10,-3,1,3,-6,2,-8,4,10,9,9,-8,9,-3,9,-8,-5,2,-9,-1,-6,3,-5,9,-8,3,-8,8,-7,10,9,7,-10,-2,-7,-4,-8,-4,3,10,-6,9,-4,-1,-6,-8,-2,-2], dtype = "uint64")#candidate|3047|(286,)|const|uint64
const_3048 = relay.const([-1,-9,-5,3,-9,7,-8,-2,6,3,-8,-2,-5,3,-7,1,3,7,6,1,6,5,-10,-10,5,-6,2,1,-2,-5,5,9,4,7,-5,5,8,-5,9,5,-9,-8,10,-8,-4,-3,9,-8,-9,-4,5,6,-1,2,-6,-5,9,-6,3,-3,-7,5,-10,10,9,-4,3,-8,10,-4,6,-3,-3,5,-5,2,-5,-9,-1,4,2,6,5,10,3,-4,-5,5,-10,-5,-9,8,-5,8,-7,-8,8,4,8,-1,-10,-10,-3,-5,5,7,-7,7,5,2,6,1,-5,-7,1,-4,4,3,10,2,8,-9,-6,10,2,3,3,-1,-1,9,-8,-10,-8,-2,3,-4,-3,9,-9,-1,3,8,10,-2,8,2,6,-8,8,-1,-4,-3,7,-6,-3,7,3,-9,5,-3,-7,-8,-10,7,8,1,4,1,-8,-8,-6,-4,-2,-1,8,-1,2,8,-8,9,3,-10,-4,8,7,-10,3,-9,10,-4,-5,-3,-4,8,4,-2,5,-3,2,-8], dtype = "uint32")#candidate|3048|(200,)|const|uint32
call_3046 = relay.TupleGetItem(func_1597_call(relay.reshape(const_3047.astype('uint64'), [1, 286]), relay.reshape(const_3048.astype('uint32'), [200,]), ), 1)
call_3049 = relay.TupleGetItem(func_1601_call(relay.reshape(const_3047.astype('uint64'), [1, 286]), relay.reshape(const_3048.astype('uint32'), [200,]), ), 1)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3051 = relay.TupleGetItem(func_2949_call(), 0)
call_3052 = relay.TupleGetItem(func_2950_call(), 0)
bop_3063 = relay.add(const_3048.astype('int16'), relay.reshape(call_3046.astype('int16'), relay.shape_of(const_3048))) # shape=(200,)
bop_3066 = relay.add(const_3048.astype('int16'), relay.reshape(call_3049.astype('int16'), relay.shape_of(const_3048))) # shape=(200,)
bop_3069 = relay.floor_mod(bop_2989.astype('float32'), relay.reshape(uop_2979.astype('float32'), relay.shape_of(bop_2989))) # shape=(14, 5, 8)
bop_3072 = relay.floor_mod(bop_2992.astype('float32'), relay.reshape(uop_2981.astype('float32'), relay.shape_of(bop_2992))) # shape=(14, 5, 8)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3073 = relay.TupleGetItem(func_2949_call(), 0)
call_3074 = relay.TupleGetItem(func_2950_call(), 0)
var_3077 = relay.var("var_3077", dtype = "float64", shape = (35, 10))#candidate|3077|(35, 10)|var|float64
bop_3078 = relay.logical_or(uop_3038.astype('bool'), relay.reshape(var_3077.astype('bool'), relay.shape_of(uop_3038))) # shape=(35, 10)
func_1696_call = mod.get_global_var('func_1696')
func_1703_call = mutated_mod.get_global_var('func_1703')
var_3089 = relay.var("var_3089", dtype = "float64", shape = (32,))#candidate|3089|(32,)|var|float64
var_3090 = relay.var("var_3090", dtype = "bool", shape = (144,))#candidate|3090|(144,)|var|bool
var_3091 = relay.var("var_3091", dtype = "int32", shape = ())#candidate|3091|()|var|int32
const_3092 = relay.const([[9,5,-10,8,-9,5,-3,7,-7,4,8,-2,5,-4,10,-2,9,-10,-6,-8,1,8,-2,-3,-2,4,6,-8,2,7,1,10,1,-10,-8,-1,-4,2,2,4,2,-5,3,-7,-5,-6,8,-8,-8,5,1,-5,-2,10,4,-1,-3,3,10,-3,-6,3,7,-4,-4,-2,-4,-9,-6,4,6,-4,-10,6,-9,-6,8,-1,-3,-1,-4,1,10,6,-2,5,6,6,8,-7,-9,-2,-4,-5,7,-5,10,1,-9,-7,-9,-8,6,10,-4,-9,-2,1,5,5,3,-5,8,-5,4,8,8,8,-8,6,-7,-6,-7,7,4,-3,3,-1,3,10,10,3,-3,-10,9,-4,2,-7,6,10,-5,-8,9,1,-5,-3,6,3,-7,10,-10,4,4,-10,7,-2,-10,-3,10,-5,5,-2,-2,-2,-7,-6,-7,-8,2,-3,5,-1,4,4,-8,-10,6,5,6,-8]], dtype = "int32")#candidate|3092|(1, 180)|const|int32
call_3088 = relay.TupleGetItem(func_1696_call(relay.reshape(var_3089.astype('float64'), [4, 1, 8]), relay.reshape(var_3090.astype('bool'), [144,]), relay.reshape(var_3091.astype('int32'), []), relay.reshape(const_3092.astype('int32'), [180,]), relay.reshape(var_2999.astype('float64'), [12, 98]), ), 5)
call_3093 = relay.TupleGetItem(func_1703_call(relay.reshape(var_3089.astype('float64'), [4, 1, 8]), relay.reshape(var_3090.astype('bool'), [144,]), relay.reshape(var_3091.astype('int32'), []), relay.reshape(const_3092.astype('int32'), [180,]), relay.reshape(var_2999.astype('float64'), [12, 98]), ), 5)
func_1597_call = mod.get_global_var('func_1597')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3114 = relay.TupleGetItem(func_1597_call(relay.reshape(const_3047.astype('uint64'), [1, 286]), relay.reshape(call_3046.astype('uint32'), [200,]), ), 2)
call_3115 = relay.TupleGetItem(func_1601_call(relay.reshape(const_3047.astype('uint64'), [1, 286]), relay.reshape(call_3046.astype('uint32'), [200,]), ), 2)
bop_3123 = relay.less(bop_3078.astype('bool'), relay.reshape(var_3077.astype('bool'), relay.shape_of(bop_3078))) # shape=(35, 10)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
call_3126 = relay.TupleGetItem(func_131_call(relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), ), 0)
call_3127 = relay.TupleGetItem(func_135_call(relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), relay.reshape(var_2984.astype('uint16'), [8, 7, 3]), ), 0)
uop_3141 = relay.cosh(bop_2989.astype('float64')) # shape=(14, 5, 8)
uop_3143 = relay.cosh(bop_2992.astype('float64')) # shape=(14, 5, 8)
output = relay.Tuple([call_2983,var_2984,call_2997,var_2998,var_2999,call_3003,const_3004,const_3047,call_3051,bop_3063,bop_3069,call_3073,call_3088,var_3089,var_3090,var_3091,const_3092,call_3114,bop_3123,call_3126,uop_3141,])
output2 = relay.Tuple([call_2985,var_2984,call_3000,var_2998,var_2999,call_3006,const_3004,const_3047,call_3052,bop_3066,bop_3072,call_3074,call_3093,var_3089,var_3090,var_3091,const_3092,call_3115,bop_3123,call_3127,uop_3143,])
func_3148 = relay.Function([var_2984,var_2998,var_2999,var_3077,var_3089,var_3090,var_3091,], output)
mod['func_3148'] = func_3148
mod = relay.transform.InferType()(mod)
mutated_mod['func_3148'] = func_3148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3148_call = mutated_mod.get_global_var('func_3148')
var_3150 = relay.var("var_3150", dtype = "uint16", shape = (168,))#candidate|3150|(168,)|var|uint16
var_3151 = relay.var("var_3151", dtype = "float32", shape = (1056,))#candidate|3151|(1056,)|var|float32
var_3152 = relay.var("var_3152", dtype = "float64", shape = (1176,))#candidate|3152|(1176,)|var|float64
var_3153 = relay.var("var_3153", dtype = "float64", shape = (35, 10))#candidate|3153|(35, 10)|var|float64
var_3154 = relay.var("var_3154", dtype = "float64", shape = (32,))#candidate|3154|(32,)|var|float64
var_3155 = relay.var("var_3155", dtype = "bool", shape = (144,))#candidate|3155|(144,)|var|bool
var_3156 = relay.var("var_3156", dtype = "int32", shape = ())#candidate|3156|()|var|int32
call_3149 = func_3148_call(var_3150,var_3151,var_3152,var_3153,var_3154,var_3155,var_3156,)
output = call_3149
func_3157 = relay.Function([var_3150,var_3151,var_3152,var_3153,var_3154,var_3155,var_3156,], output)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3174 = relay.TupleGetItem(func_2949_call(), 0)
call_3175 = relay.TupleGetItem(func_2950_call(), 0)
uop_3178 = relay.cosh(call_3174.astype('float32')) # shape=(3, 14, 9)
uop_3180 = relay.cosh(call_3175.astype('float32')) # shape=(3, 14, 9)
var_3181 = relay.var("var_3181", dtype = "float32", shape = (3, 14, 9))#candidate|3181|(3, 14, 9)|var|float32
bop_3182 = relay.floor_mod(uop_3178.astype('float64'), relay.reshape(var_3181.astype('float64'), relay.shape_of(uop_3178))) # shape=(3, 14, 9)
bop_3185 = relay.floor_mod(uop_3180.astype('float64'), relay.reshape(var_3181.astype('float64'), relay.shape_of(uop_3180))) # shape=(3, 14, 9)
output = relay.Tuple([bop_3182,])
output2 = relay.Tuple([bop_3185,])
func_3186 = relay.Function([var_3181,], output)
mod['func_3186'] = func_3186
mod = relay.transform.InferType()(mod)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3187 = relay.var("var_3187", dtype = "float32", shape = (3, 14, 9))#candidate|3187|(3, 14, 9)|var|float32
func_3186_call = mutated_mod.get_global_var('func_3186')
call_3188 = func_3186_call(var_3187)
output = call_3188
func_3189 = relay.Function([var_3187], output)
mutated_mod['func_3189'] = func_3189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_3236 = func_2679_call()
call_3237 = func_2679_call()
var_3243 = relay.var("var_3243", dtype = "float64", shape = (3, 14, 9))#candidate|3243|(3, 14, 9)|var|float64
bop_3244 = relay.less(call_3236.astype('bool'), relay.reshape(var_3243.astype('bool'), relay.shape_of(call_3236))) # shape=(3, 14, 9)
bop_3247 = relay.less(call_3237.astype('bool'), relay.reshape(var_3243.astype('bool'), relay.shape_of(call_3237))) # shape=(3, 14, 9)
output = relay.Tuple([bop_3244,])
output2 = relay.Tuple([bop_3247,])
func_3271 = relay.Function([var_3243,], output)
mod['func_3271'] = func_3271
mod = relay.transform.InferType()(mod)
mutated_mod['func_3271'] = func_3271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3272 = relay.var("var_3272", dtype = "float64", shape = (3, 14, 9))#candidate|3272|(3, 14, 9)|var|float64
func_3271_call = mutated_mod.get_global_var('func_3271')
call_3273 = func_3271_call(var_3272)
output = call_3273
func_3274 = relay.Function([var_3272], output)
mutated_mod['func_3274'] = func_3274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3312 = relay.TupleGetItem(func_2949_call(), 0)
call_3313 = relay.TupleGetItem(func_2950_call(), 0)
func_1315_call = mod.get_global_var('func_1315')
func_1320_call = mutated_mod.get_global_var('func_1320')
var_3315 = relay.var("var_3315", dtype = "int32", shape = ())#candidate|3315|()|var|int32
var_3316 = relay.var("var_3316", dtype = "int32", shape = (180,))#candidate|3316|(180,)|var|int32
const_3317 = relay.const([[-4.007086,3.558368],[1.100185,-3.735458],[-7.541648,4.761319],[3.795902,8.230075],[1.520808,8.588958],[4.751873,-2.502891],[9.949846,-3.458857],[-0.562987,5.265003],[-5.881313,9.846630],[-8.091582,6.724330],[-6.180042,-6.212395],[-5.459579,-0.840760],[-0.692572,2.050711],[-8.566195,-8.677675],[4.385202,8.824602],[5.328898,2.300489],[-7.737610,3.247874],[-8.485746,9.956340],[-2.337941,6.411311],[-5.272820,-7.991900],[3.988963,-9.928647],[9.088736,5.257201],[2.858034,-7.871216],[-4.122070,5.816197],[7.144784,1.345676],[2.690611,-3.461239],[-7.507045,-1.204460],[8.935228,9.821768],[-1.705075,-9.900034],[-6.148087,7.095367],[8.083213,5.265654],[7.578671,-4.627500],[9.509494,-8.310355],[-2.896990,-7.480856],[-9.142433,7.155531],[1.514126,-6.275261],[7.264089,-0.727041],[0.814486,8.374529],[1.577804,-6.209083],[2.167935,2.237968],[-1.919660,9.409772],[-3.157809,1.288903],[-5.090783,1.968623],[4.073714,-6.403047],[-7.128690,7.300340],[-0.926217,-3.483954],[6.195760,-6.698649],[4.268218,3.671982],[6.872412,5.336938],[0.383074,5.701408],[6.813572,2.648210],[-9.891293,0.493882],[-2.413291,-8.931617],[-5.889852,3.984564],[2.819925,-8.858819],[1.043719,-6.955419],[8.722439,7.370964],[-7.893633,-9.952567],[0.896208,1.574886],[8.562877,-6.548925],[7.359375,-9.138939],[-7.999987,0.335132],[6.349373,-8.158147],[6.680414,-2.607229],[-1.664687,2.541223],[-0.898191,2.925843],[-1.596836,5.396769],[8.597801,6.466598],[9.423611,-0.742866],[5.525181,6.642588],[-7.220787,-5.326568],[2.445086,-9.573111],[-0.520028,-7.981957],[3.669994,-1.725367],[-3.827545,-5.726526],[8.045771,-1.488375],[0.538227,-8.658366],[-5.756285,-9.510575],[-6.253445,3.629398],[2.916775,5.330697],[2.306516,-1.775857],[4.790718,-2.348496],[-6.342271,-2.714725],[6.873638,-2.868547],[7.072627,3.096147],[6.028368,-3.275676],[-0.206309,8.779719],[2.919492,7.510765],[-7.666157,-4.156710],[-2.332588,-7.110604],[6.010233,7.766507],[9.688349,1.198342],[-6.977691,6.235778],[-8.709192,3.397743],[8.208910,-3.934990],[-4.628822,8.820582],[1.846653,-4.097121],[9.192258,7.789950],[7.287803,8.194664],[-4.513251,-6.735132],[1.169679,-1.424905],[6.849942,8.626277],[-0.311646,-8.563909],[5.865667,-9.729424],[7.463990,4.326674],[8.743875,1.984770],[2.258416,1.785422],[1.458350,-8.158830],[0.523400,9.768560],[1.512872,5.703640],[-6.997575,-5.159456],[-5.617258,7.932486],[6.599630,-1.729987],[3.390798,-6.260817],[-5.981864,-9.064370],[9.079074,-7.233646],[-2.799656,9.372869],[-3.504962,9.723351],[-3.323044,0.133139],[-3.359242,-5.497765],[7.829301,-3.796817],[-8.815180,3.920356],[8.960476,4.708251],[-7.127634,5.754842],[6.193737,-1.917264],[-5.125183,-6.294855],[4.289391,4.333292],[-9.548441,-8.219283],[-7.207933,-8.348945],[0.685771,5.363417],[-3.844723,8.684392],[-4.040537,4.602736],[8.635465,-0.957954],[2.594671,2.594151],[-6.023906,4.138024],[-3.463653,-0.531049],[-6.830873,-5.567966],[-9.239810,-9.330537],[-3.899341,9.132633],[9.464147,-2.291892],[3.465681,-8.111713],[2.027436,6.884909],[-7.181612,9.806945],[-3.022904,7.797847],[-6.317820,-4.528011],[4.911141,2.068839],[-1.910040,-3.541488],[6.525103,9.403314],[6.525967,-8.214715],[0.500206,-9.231690],[-4.621191,-8.967051],[1.822096,7.418237],[8.648936,-8.982705],[9.770707,-0.549590],[9.441268,4.193700],[5.082602,5.494595],[-3.145246,-0.968996],[5.781600,7.113436],[-5.911605,7.160850],[9.697007,5.492646],[-7.073666,4.782521],[-3.276303,-8.113758],[-6.025113,-3.388537],[-2.403599,3.075968],[9.463259,-4.239261],[-7.463600,-6.518898],[7.730953,7.899133],[3.775370,-9.900811],[-3.308334,8.516841],[6.404605,-8.482986],[9.626459,-3.396831],[-0.554205,-3.995673],[0.770047,6.633965],[-1.852865,-0.559140],[4.662757,-8.917713],[-2.043316,-0.208147],[-8.283924,5.709576],[3.025065,9.659946],[0.254580,-0.673927],[4.523593,1.203275],[3.370438,1.109420],[2.648896,-0.063821],[9.644993,6.317442],[5.650293,-2.436314],[8.926829,5.165941],[-3.624762,3.443317],[-6.271471,2.646385],[-9.441784,-1.459805],[2.931998,2.779653],[3.500947,2.155073],[-5.164162,7.187767],[2.776435,1.007955],[7.891682,1.563447],[5.946691,0.737454],[3.345139,-9.095343],[-8.090368,6.860693],[-6.507820,-8.264813],[-1.586548,-4.251684],[-1.191868,-2.956777],[2.058606,-8.548642],[1.011767,-0.862290],[-3.976275,-7.617589],[7.233417,6.699898],[-8.446100,3.504089],[9.179406,-5.857374],[-0.230236,-7.421664],[-3.583565,-7.999715],[-1.777419,6.704725],[-7.370607,-5.128763],[3.965542,-6.177247],[5.516547,-7.296429],[5.441154,-4.319536],[9.494616,-5.646855],[7.826268,-5.283288],[-9.795995,-0.188307],[9.621346,-1.828948],[9.666256,-2.351747],[5.105233,4.800390],[-0.381710,-6.181945],[-7.449857,-9.522134],[-6.273230,4.261845],[9.698150,8.912234],[-4.895488,-8.270841],[9.832406,6.685852],[-6.769624,-1.571323],[1.593695,-3.524653],[1.205512,1.972919],[-3.023719,-6.122533],[-2.818330,-7.629596],[3.097666,8.544361],[4.569707,-3.121950],[-8.813486,-9.026140],[9.456980,8.578999],[-8.341191,8.145757],[-0.387076,0.627539],[-9.947528,1.318252],[2.895988,3.554198],[-7.287133,-3.854244],[-4.451998,-9.188317],[6.351403,3.224591],[1.204984,9.403475],[0.592300,-3.584989],[4.195776,-1.015776],[6.498094,-5.768181],[3.906224,3.309023],[7.962858,-8.340157],[-9.761387,-3.368683],[1.280002,7.995948],[-9.106658,-4.055930],[4.152252,-8.971276],[6.982783,-4.084410],[-7.866874,5.875838],[-6.380385,1.276861],[5.392088,-0.544568],[3.148276,5.883911],[-0.921073,8.754367],[1.004078,-3.680150],[-1.250829,6.268584],[1.546903,-4.329600],[-9.049271,-7.793058],[1.263203,-1.253297],[8.459184,-0.072201],[-5.992214,1.694736],[-3.074785,2.097790],[-7.837716,-7.169977],[-9.233406,-7.005804],[-5.620935,-0.249533],[4.721066,9.798555],[-4.227672,2.162861],[-8.905359,-5.945783],[3.620703,-2.528515],[7.150243,4.546041],[9.593031,-2.192779],[9.117522,-3.862971],[-0.050129,-7.906962],[8.871261,-0.059705],[-3.815801,1.769522],[2.321619,9.322992],[2.127965,1.763551],[8.218756,-5.905030],[-9.844955,8.305795],[-7.752887,5.034211],[-7.774424,-5.523133],[-4.790186,8.114596],[-0.220062,9.268219],[0.694941,-7.420051],[-8.208226,6.203632],[-4.280924,9.459355],[-5.292687,-8.115751],[-4.254367,8.703984],[5.607883,-1.043474],[-6.845789,-7.693350],[-7.625129,2.758448],[-9.717427,-2.337518],[4.092400,7.771720],[9.644414,-9.509625],[3.972141,-0.895263],[4.184293,-3.583186],[2.120516,-3.877788],[-4.377342,-1.893568],[-4.916325,-8.921376],[4.638727,-0.163830],[-4.857847,-1.460094],[-1.142346,-3.326083],[1.221315,9.278381],[-2.861081,-3.892973],[-6.462141,-2.458197],[3.209259,3.855967],[-1.041525,5.593318],[-2.932789,-8.984645],[1.404105,-1.742670],[9.700185,0.974412],[-3.749574,9.081572],[-6.520315,-0.623606],[-8.556114,8.628713],[-3.567664,-6.638207],[5.503982,-4.798194],[0.114254,-4.267952],[-7.371435,-4.446409],[6.622241,-3.643472],[-6.399438,1.925204],[6.567999,2.847880],[-0.635690,-1.383121],[2.290209,8.281704],[-6.377782,-2.853855],[-5.268823,-7.486671],[3.584533,-3.972703],[-4.549602,-5.728610],[1.939248,9.804487],[-2.457822,-2.988951],[3.636219,0.237258],[9.804822,1.336546],[-0.502963,9.071447],[6.604191,9.868812],[-4.001444,4.591140],[1.958998,2.842158],[3.361336,7.494752],[0.429505,-8.288602],[-5.527184,2.746117],[-9.450418,8.977975],[-2.251222,2.735404],[-5.180830,3.053664],[6.177117,5.736291],[-7.961171,5.345857],[0.276839,1.199587],[-0.473845,-0.910395],[6.340960,5.555337],[-3.594607,1.619878],[1.297321,-9.619598],[1.093333,7.933334],[3.356993,3.121524],[1.920651,9.058241],[-9.877439,-6.293378],[7.392538,3.141410],[-8.848183,-2.800397],[-0.436044,-6.932911],[2.613408,3.604438],[-5.517355,1.439956],[-5.015249,1.704690],[3.853325,-9.430781],[-1.339916,-2.153460],[3.401551,-7.546424],[-6.247607,0.918208],[-0.087783,5.444652],[-0.341684,4.925369],[7.596224,-7.680809],[5.758850,6.835325],[3.610845,-7.747240],[-7.297687,5.009321],[5.058388,-6.069136],[-7.658765,-0.800977],[6.475233,-3.310046],[-0.623770,-8.747267],[-2.099426,9.872478],[-1.129615,-4.927550],[0.396937,8.995716],[-3.538280,9.507124],[4.399494,4.516775],[7.910388,-7.822050],[1.571664,5.245792],[-4.832438,4.089583],[-9.893381,6.049145],[-8.969611,-7.795781],[-2.369774,5.052185],[-7.094070,-1.164018],[-1.405720,-1.280199],[9.164802,-2.381475],[1.273826,4.978211],[2.057523,6.785134],[3.517015,4.096278],[-6.073954,2.216716],[6.383225,7.397903],[-4.624405,6.776519],[-9.047364,-5.278841],[9.883385,-1.520328],[-8.510998,-9.957933],[5.732639,-4.766571],[-1.734249,-5.151960],[1.831825,-9.492245],[-6.089115,9.449217],[6.167529,-0.835840],[-8.589057,-0.742144],[3.356293,-8.278820],[-4.151543,-9.052939],[-4.016512,-9.811536],[-7.695104,-6.790777],[6.031734,-8.833670],[-5.820830,-8.865227],[5.459285,5.443039],[1.818156,7.323653],[1.692130,5.110861],[-3.063315,0.561658],[-2.862580,-3.003329],[-8.716686,-5.901375],[5.485710,2.879937],[-1.937112,1.246638],[-4.643696,7.783660],[-0.797605,4.665139],[9.078007,3.592704],[-1.163721,-5.649425],[0.937928,2.317835],[8.813501,0.843639],[-4.603246,7.565695],[-8.301736,-7.854225],[5.955577,-9.833048],[-4.147126,0.444037],[-1.571746,-8.038854],[6.786345,9.374135],[8.812397,-5.329488],[8.691506,9.905572],[9.615425,-9.555755],[9.257353,-2.099757],[2.942086,8.743747],[-5.274460,3.856272],[4.385586,6.448275],[-7.162354,1.611794],[2.935308,7.786721],[5.259199,4.206292],[2.372627,-3.953911],[-6.456252,8.060798],[-0.585391,-6.395532],[-3.799854,7.904238],[9.748188,-0.582458],[-1.062474,0.063650],[-3.552437,-0.236224],[7.586713,-6.164328],[7.887400,4.769594],[1.135768,4.011465],[1.837331,8.934374],[6.888277,-8.660856],[6.566753,4.100057],[-0.639346,-8.054676],[8.953503,1.897422],[-3.929751,3.002105],[-2.873747,4.111901],[6.885992,2.573721],[-1.726195,-9.187910],[-6.060075,-7.189809],[-0.777652,9.285691],[-3.995918,4.786302],[-4.620580,-7.013373],[-0.578912,-2.674499],[3.693991,-7.468198],[1.820849,5.159405],[-4.472038,9.888386],[-4.062851,9.040629],[3.977592,-4.032759],[-8.855778,2.548470],[-2.700271,5.330811],[8.644404,5.009464],[2.393718,-0.500195],[-3.702166,3.146877],[7.093045,9.347844],[-9.894378,-6.500411],[8.959187,-2.446732],[-5.049483,-8.552529],[5.373717,9.850605],[2.774903,3.921670],[5.194473,4.494537],[-9.883880,-3.564828],[-3.955558,7.849149],[-0.384917,-9.876975],[-5.212099,1.444621],[7.213180,6.974528],[5.231818,1.945077],[-3.438081,-1.984491],[-4.577279,7.137940],[-2.516827,4.019626],[2.874837,7.482213],[-2.433970,0.869864],[-3.304215,-6.231916],[-5.188484,7.407999],[-5.292968,-3.684792],[0.163726,-4.314941],[0.542459,-1.872588],[-9.794063,-6.124476],[8.889903,3.702236],[9.599662,-8.898394],[-7.827066,2.940608],[7.663695,-2.190574],[-9.997334,-1.823630],[2.043767,6.318905],[-5.721483,-5.127080],[9.616419,-7.118522],[2.160228,7.469981],[-1.946681,-5.528762],[-7.698568,6.243236],[-7.453367,5.551061],[-0.642955,9.740755],[5.337231,-4.341126],[-3.062499,-2.340070],[9.870367,-5.425161],[-8.857181,-2.304283],[-4.679575,0.890028],[-6.503540,-2.826172],[3.297183,4.379826],[1.342429,2.327923],[-2.815710,-9.597523],[6.789230,-9.848653],[6.600471,8.527685],[-8.656149,-6.143642],[-9.856802,1.519457],[-8.463746,-4.782886],[-7.332860,7.974637],[-6.795477,-8.572706],[3.947931,6.490625],[0.067227,0.431547],[6.926026,-8.147272],[-2.059580,-3.478176],[6.303244,-1.942495],[7.035502,5.572800],[-5.646917,3.018642],[8.485262,2.018185],[-9.888050,6.656187],[7.384658,-4.609831],[8.690169,-8.742740],[9.626627,1.438076],[1.531588,-8.562219],[-3.489757,-9.498626],[-9.134465,3.604840],[1.346014,-4.386922],[6.582536,6.021304],[8.502451,5.976326],[-5.732587,-6.715909],[-4.524753,-3.144192],[6.770864,-0.838221],[-4.332364,7.281660],[-8.067619,2.242800],[0.326652,4.891687],[9.641200,0.889859],[-0.067314,-8.460621],[6.376822,-3.423194],[-9.766582,5.180080],[2.427051,5.845390],[-1.516476,6.807772],[8.833577,-6.481035],[-5.817900,4.875680],[-3.526811,-5.754054],[-4.014561,5.761199],[-1.550818,3.536415],[5.508301,-4.349447],[8.079050,-9.638375],[-3.776867,-0.279198],[-0.161515,4.522817],[5.260601,2.188309],[1.222222,-1.590778],[-5.557209,5.382085],[-2.878706,1.759828],[3.506642,-5.634349],[1.766835,-6.148798],[-9.500881,5.826967],[5.980228,-0.504991],[9.935009,-9.898608],[2.563009,-3.282030],[3.118788,-4.113267],[2.641195,4.999697],[-6.383117,1.809630],[-6.232659,3.303567],[-2.056213,-3.616244],[5.698582,-5.681890],[-7.211275,-7.878057],[-2.023892,4.473634],[-7.985529,4.274030],[0.467822,2.679142],[-1.410868,3.011027],[-9.964033,-7.288247],[1.205988,7.751949],[4.004427,3.941667]], dtype = "float64")#candidate|3317|(588, 2)|const|float64
call_3314 = relay.TupleGetItem(func_1315_call(relay.reshape(var_3315.astype('int32'), []), relay.reshape(var_3316.astype('int32'), [4, 15, 3]), relay.reshape(const_3317.astype('float64'), [1176,]), ), 4)
call_3318 = relay.TupleGetItem(func_1320_call(relay.reshape(var_3315.astype('int32'), []), relay.reshape(var_3316.astype('int32'), [4, 15, 3]), relay.reshape(const_3317.astype('float64'), [1176,]), ), 4)
output = relay.Tuple([call_3312,call_3314,var_3315,var_3316,const_3317,])
output2 = relay.Tuple([call_3313,call_3318,var_3315,var_3316,const_3317,])
func_3342 = relay.Function([var_3315,var_3316,], output)
mod['func_3342'] = func_3342
mod = relay.transform.InferType()(mod)
var_3343 = relay.var("var_3343", dtype = "int32", shape = ())#candidate|3343|()|var|int32
var_3344 = relay.var("var_3344", dtype = "int32", shape = (180,))#candidate|3344|(180,)|var|int32
output = func_3342(var_3343,var_3344,)
func_3345 = relay.Function([var_3343,var_3344,], output)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3387 = relay.TupleGetItem(func_2949_call(), 0)
call_3388 = relay.TupleGetItem(func_2950_call(), 0)
output = call_3387
output2 = call_3388
func_3407 = relay.Function([], output)
mod['func_3407'] = func_3407
mod = relay.transform.InferType()(mod)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mutated_mod.get_global_var('func_3407')
call_3408 = func_3407_call()
output = call_3408
func_3409 = relay.Function([], output)
mutated_mod['func_3409'] = func_3409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3413 = relay.var("var_3413", dtype = "int16", shape = (16, 10, 3))#candidate|3413|(16, 10, 3)|var|int16
var_3414 = relay.var("var_3414", dtype = "int16", shape = (16, 10, 3))#candidate|3414|(16, 10, 3)|var|int16
bop_3415 = relay.logical_xor(var_3413.astype('int16'), relay.reshape(var_3414.astype('int16'), relay.shape_of(var_3413))) # shape=(16, 10, 3)
output = relay.Tuple([bop_3415,])
output2 = relay.Tuple([bop_3415,])
func_3418 = relay.Function([var_3413,var_3414,], output)
mod['func_3418'] = func_3418
mod = relay.transform.InferType()(mod)
var_3419 = relay.var("var_3419", dtype = "int16", shape = (16, 10, 3))#candidate|3419|(16, 10, 3)|var|int16
var_3420 = relay.var("var_3420", dtype = "int16", shape = (16, 10, 3))#candidate|3420|(16, 10, 3)|var|int16
output = func_3418(var_3419,var_3420,)
func_3421 = relay.Function([var_3419,var_3420,], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_3433 = relay.TupleGetItem(func_2937_call(), 0)
call_3434 = relay.TupleGetItem(func_2939_call(), 0)
func_2745_call = mod.get_global_var('func_2745')
func_2746_call = mutated_mod.get_global_var('func_2746')
call_3435 = func_2745_call()
call_3436 = func_2745_call()
output = relay.Tuple([call_3433,call_3435,])
output2 = relay.Tuple([call_3434,call_3436,])
func_3437 = relay.Function([], output)
mod['func_3437'] = func_3437
mod = relay.transform.InferType()(mod)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mutated_mod.get_global_var('func_3437')
call_3438 = func_3437_call()
output = call_3438
func_3439 = relay.Function([], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3446 = relay.var("var_3446", dtype = "float32", shape = (10, 6, 11))#candidate|3446|(10, 6, 11)|var|float32
uop_3447 = relay.acosh(var_3446.astype('float32')) # shape=(10, 6, 11)
bop_3450 = relay.right_shift(uop_3447.astype('uint32'), relay.reshape(var_3446.astype('uint32'), relay.shape_of(uop_3447))) # shape=(10, 6, 11)
output = relay.Tuple([bop_3450,])
output2 = relay.Tuple([bop_3450,])
func_3462 = relay.Function([var_3446,], output)
mod['func_3462'] = func_3462
mod = relay.transform.InferType()(mod)
var_3463 = relay.var("var_3463", dtype = "float32", shape = (10, 6, 11))#candidate|3463|(10, 6, 11)|var|float32
output = func_3462(var_3463)
func_3464 = relay.Function([var_3463], output)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_3480 = relay.TupleGetItem(func_3437_call(), 1)
call_3481 = relay.TupleGetItem(func_3439_call(), 1)
output = relay.Tuple([call_3480,])
output2 = relay.Tuple([call_3481,])
func_3482 = relay.Function([], output)
mod['func_3482'] = func_3482
mod = relay.transform.InferType()(mod)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mutated_mod.get_global_var('func_3482')
call_3483 = func_3482_call()
output = call_3483
func_3484 = relay.Function([], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2746_call = mutated_mod.get_global_var('func_2746')
call_3504 = func_2745_call()
call_3505 = func_2745_call()
output = relay.Tuple([call_3504,])
output2 = relay.Tuple([call_3505,])
func_3506 = relay.Function([], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3506_call = mutated_mod.get_global_var('func_3506')
call_3507 = func_3506_call()
output = call_3507
func_3508 = relay.Function([], output)
mutated_mod['func_3508'] = func_3508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_3572 = func_2679_call()
call_3573 = func_2679_call()
const_3585 = relay.const([[[2.151026,-9.050833,-6.645802,-1.139624,9.006779,-5.938191,0.161088,-1.194918,-5.055166],[-7.099163,1.534768,9.371776,-7.699846,3.013623,2.384816,-4.418484,7.566619,8.746519],[0.710273,-2.386703,0.936888,6.176598,6.205724,-2.627708,-7.528864,-7.489878,4.650227],[9.252589,-4.668114,-0.026283,0.171729,6.471997,-0.077014,-9.148957,-8.477412,-7.936495],[4.834800,-1.802398,1.353122,0.594846,8.471606,-4.445412,8.917299,3.703396,-4.906621],[-2.586629,-8.469362,-0.394690,-0.480943,-2.237561,0.548201,-2.201346,7.910523,-1.561555],[8.813268,-2.802809,1.537690,-5.918838,-6.447172,-8.170332,4.026596,4.399368,-0.789196],[-0.997735,-3.758098,3.003344,-5.070657,2.903585,8.810722,-5.831765,7.758825,6.206003],[9.516299,6.313448,8.391031,-1.917850,-0.139482,-7.410862,0.893555,-1.912327,-0.002779],[-6.544148,0.497882,-9.298707,8.323373,-3.360213,0.637174,5.667411,7.251385,-5.852106],[-5.022256,2.062908,-2.975136,-4.516215,3.257813,-6.050423,-7.931149,-7.946063,-2.215843],[-0.302863,2.325491,-9.984826,1.353129,-5.296843,-7.060032,7.308125,8.146978,-8.027423],[6.785094,-3.493630,9.716502,-2.986969,9.509459,9.375730,6.635361,7.472548,-7.050992],[7.441721,9.940046,-8.813546,-7.998962,-7.470531,1.453615,-8.892409,2.444335,3.186268]],[[6.447869,5.943809,-7.740069,-4.611447,-3.028352,-9.398651,5.540263,-1.793642,8.183243],[-4.434526,0.725183,-6.552330,3.556694,5.263263,4.022373,8.533973,-8.521037,9.333656],[-0.737232,-8.128924,9.608495,6.057692,-4.708467,6.529284,6.189697,2.035447,-4.683370],[3.051667,-7.909809,7.903973,8.368451,-3.321231,7.397416,-8.564946,8.802842,-5.337876],[2.825555,6.893627,-9.704261,-9.766310,8.365279,-9.525333,9.829009,8.090375,-6.751126],[5.191313,-6.876170,9.809024,7.809160,9.097475,-9.270900,1.225711,4.203985,8.083577],[8.762803,8.646991,8.097112,-3.824106,6.569338,4.999803,-5.116511,5.540420,-0.178878],[-3.653408,-5.292858,4.175220,-7.626684,6.558163,1.633605,7.279599,-6.077105,0.079930],[-5.881601,-2.481229,-5.211693,0.660345,-4.907014,2.713507,2.734492,-8.334346,5.402193],[-7.676368,-6.931581,5.820724,-5.225997,-6.068413,-7.122541,-3.489413,0.208020,-0.327963],[-8.965623,5.609201,3.931744,-8.422534,-1.830372,-5.560168,-1.476007,3.101394,-1.892521],[-5.877405,0.149319,3.076559,2.511338,-0.904392,-8.758938,-8.209415,-2.157434,5.472296],[-8.573347,-4.547788,-7.395366,-5.938952,3.080897,7.110041,-7.245243,-8.378140,-6.403145],[6.175298,-2.933890,0.397923,0.085264,5.573964,0.054752,6.556792,-9.525316,-2.121494]],[[-9.987108,3.521908,1.433175,-2.614403,2.984441,2.022985,-3.491764,0.054276,8.110502],[-3.625879,-5.454187,-8.787542,-3.588841,3.519061,-3.248079,-1.471744,-9.895888,-2.764481],[-0.799774,1.012586,-5.990432,-5.484241,-7.404982,0.784258,-6.706205,-0.994548,1.657325],[-5.253652,-7.032794,5.283777,0.524853,2.654205,8.419912,1.741526,-4.679114,3.367563],[-7.947252,-8.840490,0.790835,-1.019185,7.159248,-8.188440,3.597961,-4.754192,-1.245057],[-2.563821,8.673489,9.994522,-7.324138,2.494006,-3.340480,7.192198,-5.529697,0.595641],[5.576782,9.095503,-6.128215,9.457398,-2.084796,1.409868,4.231819,-8.636097,9.349554],[-3.813269,2.153915,1.258893,-7.520625,-8.236556,-0.452036,2.719498,7.752138,-8.242035],[-8.226223,7.155293,0.324245,-5.677299,5.194838,-8.449145,-1.661130,-7.947462,-3.727543],[1.743854,-3.889415,2.169966,6.146643,-1.887134,3.258365,-3.855094,-5.656400,-6.460919],[-1.840169,4.582181,2.434193,6.040385,-7.026721,8.559646,6.426719,7.927895,-7.434409],[-4.625187,6.180545,-9.681757,2.033058,3.605485,5.906388,2.220659,-9.072540,9.254355],[-6.491446,7.646594,-4.986549,3.187978,-9.533044,2.016705,6.097374,-3.775819,-0.052653],[1.471952,-6.954748,6.703896,-0.553715,6.190158,1.951865,1.701133,8.661490,-7.852962]]], dtype = "float64")#candidate|3585|(3, 14, 9)|const|float64
bop_3586 = relay.divide(call_3572.astype('float32'), relay.reshape(const_3585.astype('float32'), relay.shape_of(call_3572))) # shape=(3, 14, 9)
bop_3589 = relay.divide(call_3573.astype('float32'), relay.reshape(const_3585.astype('float32'), relay.shape_of(call_3573))) # shape=(3, 14, 9)
uop_3624 = relay.atanh(call_3572.astype('float32')) # shape=(3, 14, 9)
uop_3626 = relay.atanh(call_3573.astype('float32')) # shape=(3, 14, 9)
bop_3634 = relay.add(bop_3586.astype('uint32'), relay.reshape(uop_3624.astype('uint32'), relay.shape_of(bop_3586))) # shape=(3, 14, 9)
bop_3637 = relay.add(bop_3589.astype('uint32'), relay.reshape(uop_3626.astype('uint32'), relay.shape_of(bop_3589))) # shape=(3, 14, 9)
output = bop_3634
output2 = bop_3637
func_3638 = relay.Function([], output)
mod['func_3638'] = func_3638
mod = relay.transform.InferType()(mod)
mutated_mod['func_3638'] = func_3638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3638_call = mutated_mod.get_global_var('func_3638')
call_3639 = func_3638_call()
output = call_3639
func_3640 = relay.Function([], output)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_3648 = func_2679_call()
call_3649 = func_2679_call()
output = relay.Tuple([call_3648,])
output2 = relay.Tuple([call_3649,])
func_3655 = relay.Function([], output)
mod['func_3655'] = func_3655
mod = relay.transform.InferType()(mod)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mutated_mod.get_global_var('func_3655')
call_3656 = func_3655_call()
output = call_3656
func_3657 = relay.Function([], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3662 = relay.var("var_3662", dtype = "uint64", shape = (3, 12, 4))#candidate|3662|(3, 12, 4)|var|uint64
var_3663 = relay.var("var_3663", dtype = "uint64", shape = (3, 12, 4))#candidate|3663|(3, 12, 4)|var|uint64
bop_3664 = relay.add(var_3662.astype('uint64'), relay.reshape(var_3663.astype('uint64'), relay.shape_of(var_3662))) # shape=(3, 12, 4)
uop_3667 = relay.sin(var_3662.astype('float64')) # shape=(3, 12, 4)
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_3688 = relay.TupleGetItem(func_3437_call(), 1)
call_3689 = relay.TupleGetItem(func_3439_call(), 1)
uop_3704 = relay.exp(uop_3667.astype('float32')) # shape=(3, 12, 4)
bop_3708 = relay.right_shift(uop_3704.astype('int16'), relay.reshape(var_3663.astype('int16'), relay.shape_of(uop_3704))) # shape=(3, 12, 4)
output = relay.Tuple([bop_3664,call_3688,bop_3708,])
output2 = relay.Tuple([bop_3664,call_3689,bop_3708,])
func_3735 = relay.Function([var_3662,var_3663,], output)
mod['func_3735'] = func_3735
mod = relay.transform.InferType()(mod)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3735_call = mutated_mod.get_global_var('func_3735')
var_3737 = relay.var("var_3737", dtype = "uint64", shape = (3, 12, 4))#candidate|3737|(3, 12, 4)|var|uint64
var_3738 = relay.var("var_3738", dtype = "uint64", shape = (3, 12, 4))#candidate|3738|(3, 12, 4)|var|uint64
call_3736 = func_3735_call(var_3737,var_3738,)
output = call_3736
func_3739 = relay.Function([var_3737,var_3738,], output)
mutated_mod['func_3739'] = func_3739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3751 = relay.var("var_3751", dtype = "float32", shape = (6, 14))#candidate|3751|(6, 14)|var|float32
var_3752 = relay.var("var_3752", dtype = "float32", shape = (6, 14))#candidate|3752|(6, 14)|var|float32
bop_3753 = relay.not_equal(var_3751.astype('bool'), relay.reshape(var_3752.astype('bool'), relay.shape_of(var_3751))) # shape=(6, 14)
output = bop_3753
output2 = bop_3753
func_3757 = relay.Function([var_3751,var_3752,], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
var_3758 = relay.var("var_3758", dtype = "float32", shape = (6, 14))#candidate|3758|(6, 14)|var|float32
var_3759 = relay.var("var_3759", dtype = "float32", shape = (6, 14))#candidate|3759|(6, 14)|var|float32
output = func_3757(var_3758,var_3759,)
func_3760 = relay.Function([var_3758,var_3759,], output)
mutated_mod['func_3760'] = func_3760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3819 = relay.TupleGetItem(func_2949_call(), 0)
call_3820 = relay.TupleGetItem(func_2950_call(), 0)
func_465_call = mod.get_global_var('func_465')
func_469_call = mutated_mod.get_global_var('func_469')
const_3849 = relay.const([[1.537963,6.244585],[-9.336597,-7.095947],[2.470369,-9.661865],[2.405804,-5.094066],[1.036303,8.377971],[0.630259,5.127337],[-3.104523,-3.330310],[8.353443,5.549029],[-3.135883,9.345296],[-0.382125,-1.617935],[-2.103059,-6.922712],[0.867640,-6.683846],[0.381388,0.302942],[3.505912,-2.768164],[-1.125820,-3.928536],[-4.768353,-5.627722],[-3.093213,-7.677406],[-5.848559,-1.163984],[9.247192,-0.018030],[2.025018,3.490788],[-2.738226,-2.659674],[6.654265,8.999115],[4.028322,9.475610],[6.985907,-2.139071],[6.691916,-4.949757],[4.934808,-8.274712],[-8.756767,5.408291],[6.850674,-4.177278],[-8.907432,6.768788],[0.790165,2.753586],[-1.744230,-7.206605],[-8.780419,-7.421948],[5.743384,3.522624],[9.501275,7.900218],[-0.811797,-2.496551],[2.235967,7.903079],[2.161331,7.909728],[1.169443,3.667552],[9.194816,5.603402],[0.859153,7.033478],[9.247645,4.823545],[0.061462,-3.943505],[-3.356456,7.850639],[5.238344,5.135264],[-9.193049,2.088191],[9.859717,6.426130],[-1.044182,-6.052451],[-8.860427,5.700089],[8.790479,9.907105],[3.334024,-6.093625],[-7.653957,-2.666038],[1.855457,-4.402053],[-2.827069,4.288587],[-0.805715,6.881891],[-9.894203,-9.144864],[6.608885,-0.553986],[4.606902,3.708583],[7.282466,-1.811947],[-3.867977,4.838690],[-0.433066,4.096929],[0.433451,-1.924259],[0.063933,-4.339286],[6.076137,8.320232],[-1.680934,9.694608],[2.256867,4.767750],[6.041870,-3.607225],[-5.852806,5.031287],[2.595915,1.356743],[7.038094,-5.746620],[1.282321,-0.436284],[-7.152212,-1.515054],[7.520598,-8.413068],[-2.910546,0.491978],[1.230882,2.895104],[0.499208,-2.692161],[7.132735,3.442300],[7.587469,-7.719446],[9.660529,8.619885],[-8.135115,-5.483534],[-8.933868,-5.163217],[-0.792009,-3.419398],[0.479730,5.081872],[-8.359654,3.269408],[-6.142866,-5.758501],[-8.757115,-5.133075],[-4.938070,1.727794],[7.837775,-7.042673],[-1.286701,2.098879],[3.202866,-0.767832],[1.441880,8.792928],[2.621561,-9.714544],[-9.404082,8.285918],[9.318233,-7.594074],[-7.988217,-8.169900],[3.334972,0.399964],[2.646982,9.502503],[-4.843326,5.264664],[1.206930,9.834885],[5.375630,-6.273088],[-2.623058,-4.735711],[-6.269664,3.759285],[4.080782,-7.203340],[5.875876,-1.043677],[-4.779573,5.071376],[-5.479707,7.416416],[5.354967,-9.450162],[-3.895416,-8.034222],[8.324307,-9.229504],[2.315587,-4.914411],[9.058453,-9.156096],[-7.224292,8.001089],[-2.819909,1.267011],[7.112450,-3.806137],[5.532480,6.558398],[-8.904643,-8.818908],[-8.086645,2.755178],[6.847206,-0.756932],[-8.990062,6.853150],[-8.501393,-5.511016],[2.589989,5.606400],[-9.703316,9.033515],[-9.354282,6.859973],[8.118932,-0.383234],[-5.968697,9.671897],[0.179448,-3.791092],[-2.389479,-3.682220],[-0.477455,1.302423],[-3.690717,-9.294404],[1.215049,-8.771202],[-7.685501,-1.167987],[-1.243161,5.295286],[-7.964974,-9.351649],[7.725116,7.297447],[-9.053112,-3.788160],[-6.650301,-6.409380],[-0.083133,4.042408],[-1.903738,7.760974],[4.426545,-7.117117],[3.158926,-5.258021],[1.104359,5.380238],[8.619989,-0.601825],[9.363681,-1.260537],[9.471585,-7.090504],[9.209875,1.198710],[-1.552754,-2.792993],[-6.839780,4.366563],[8.728893,3.838883],[-3.496979,7.969463],[7.762036,9.995820],[-8.806720,2.309548],[-3.329446,9.463474],[8.621455,6.145777],[0.975291,-8.381306],[7.411435,4.704459],[1.556510,3.199828],[-3.439237,-3.914782],[-2.679390,-9.325462],[3.602725,-8.929150],[6.545048,-2.727525],[-1.860538,-6.302288],[9.714868,9.546243],[-4.917050,5.835840],[0.092837,9.220168],[2.340642,-1.991369],[6.429496,-5.892920],[-2.993996,-3.171800],[-2.087387,-7.093957],[2.826997,4.827686],[9.887464,5.975658],[3.235503,-8.434907],[7.089859,-2.342008],[0.016231,-8.790392],[2.302643,6.564257],[-3.682978,-2.964918],[-0.238514,1.536280],[4.912938,2.267486],[-1.979973,9.796234],[9.314394,-5.686619],[7.560049,-7.023439],[0.516098,-3.949946],[0.688730,-5.316153],[1.912249,4.022368],[-5.471513,5.408039],[5.059787,-8.344920],[2.499523,2.290662],[5.487437,6.325165],[9.384406,7.723430],[9.342277,4.933291],[-9.639493,-7.689393],[-7.912290,8.215147],[-8.085662,8.980419],[5.456864,2.037485],[8.937407,-2.950051],[2.729116,1.085975],[7.185224,5.121704],[-2.623762,4.008028],[6.067405,3.171167],[7.827706,-1.820773],[2.401050,7.303131],[3.801145,-4.362943],[-3.052405,-4.993366],[-4.628406,-9.594032],[-4.164007,-2.317567],[-0.696783,8.403788],[4.780059,-6.793955],[-2.496708,6.015668],[-0.997855,-6.656770],[7.552445,-6.972022],[2.613145,6.394981],[-2.175271,2.697558],[-1.242779,-4.173814],[-0.588442,-1.864049],[-9.179349,-2.680534],[2.632380,-6.241087],[9.833096,3.700343],[9.439111,-8.521947],[-2.171897,1.108729],[3.366752,-7.266979],[-0.644734,-9.430749],[-7.821244,5.215472],[4.970006,0.110468],[5.959288,-4.007059],[1.364252,9.912415],[4.165018,0.616265],[-3.237104,6.408049],[-7.337721,6.280804],[-5.547885,7.794532],[-1.961945,7.875158],[-3.058609,-9.688194],[-0.959373,-6.441167],[-1.734434,6.556418],[6.282345,-9.641082],[5.955028,9.205369],[7.774244,-1.130424],[2.700144,-2.537980],[-7.710000,6.235042],[2.938490,-7.964302],[3.342156,2.528900],[0.809946,3.944505],[8.251514,-2.274334],[8.567706,-0.340352],[-6.250530,-6.743173],[-0.780846,7.371216],[-2.153971,-7.254638],[-3.081577,-9.037972],[5.239339,1.137796],[-7.982356,-2.943997],[-5.905642,-0.192322],[-3.564875,-7.106295],[4.396053,-1.599257],[-5.008278,9.673448],[0.755502,-9.883726],[-4.645967,9.199731],[-3.782352,-9.166306],[3.228825,-8.604640],[2.706733,-5.203542],[-7.098835,-8.636720],[6.955769,4.190868],[-5.966407,4.200073],[-0.988904,3.544830],[-2.203441,8.376066],[-0.641294,5.860165],[-3.136166,5.498033],[-8.258916,7.472129],[7.865174,-1.376288],[8.307662,-2.915492],[-5.803254,6.892845],[4.314375,-6.928525],[0.919719,-0.685887],[9.534480,9.000943],[2.784400,-1.409398],[-3.349384,-4.556305],[3.440976,1.328063],[7.842489,2.648938],[2.869092,-5.705742],[2.936151,-0.743735],[-7.565713,-6.583395],[-8.957822,0.748385],[2.061785,6.376978],[-7.909617,8.017879],[-0.871650,-3.251473],[-3.247943,-8.921347],[-3.280341,-8.859201],[2.451227,-8.161084],[5.651630,5.115770],[-5.840567,3.164879],[-1.877804,-1.642373],[7.760241,8.990691],[-0.878067,6.059399],[4.449452,-7.596533],[-3.922846,3.245671],[5.823720,-7.698700],[8.773185,-3.774766],[-2.838056,8.798215],[-1.471393,8.402229],[2.080657,7.110599],[-9.964431,-3.285954],[-5.482270,6.568390],[3.688050,-8.065569],[-2.749294,9.220607],[2.863370,-7.195341],[6.679058,-9.946111],[0.417146,8.277286],[-0.620722,-1.265596],[1.004791,-8.051899],[7.872663,2.923651],[4.212767,6.829691],[-7.578154,8.011937],[-5.871848,5.268833],[7.230780,6.441738],[-8.696092,5.850423],[8.636322,6.545724],[-0.119593,6.080631],[-6.625532,-8.965007],[-6.003709,2.544636],[-0.194116,-7.858078],[-5.272305,-6.146192],[-6.260886,-1.112277],[3.043901,8.631595],[6.079815,0.149131],[3.874529,4.212060],[3.490644,9.663838],[7.918783,-0.837482],[1.313332,-1.856283],[5.933279,2.616099],[-7.967333,-6.227897],[4.458344,7.571325],[-2.933002,-3.261098],[9.556473,2.616528],[3.948405,-8.766968],[-2.527262,-6.156222],[-2.684508,8.602144],[0.067141,7.685368],[0.866734,2.433819],[7.358754,7.167342],[-5.867624,0.588017],[-9.904907,-2.461353],[6.737129,-1.343625],[-7.648829,2.211454],[-1.165937,-4.161094],[2.729083,7.466041],[7.067749,9.603042],[2.115015,-3.665521],[-6.212548,8.844717],[8.783808,-6.485493],[4.553952,-5.610180],[7.643461,-1.598160],[-2.169995,-6.988161],[-8.337576,-4.182202],[-2.438301,-1.072516],[5.008234,6.958757],[6.763505,-3.749370],[3.693516,0.139284],[9.155721,-4.559454],[-4.310699,-2.914109],[0.652708,-3.147439],[8.741180,1.957649],[6.019652,1.004689],[-0.675355,-2.466724],[-1.729442,-1.175727],[-0.234032,-1.850368],[8.892670,-5.794309],[8.549010,2.359639],[0.264433,-3.885210],[-1.077302,7.993258],[7.901835,-3.111522],[5.874332,1.848121],[9.390121,9.690484],[-7.613461,-6.585309],[-1.314829,7.558840],[2.060514,-5.925882],[-2.705115,6.987628],[-4.477774,-6.090139],[-5.071273,-6.642302],[-4.107174,5.442502],[5.627899,4.605186],[-5.352071,-9.854690],[-9.471288,-1.013020],[-3.043107,2.622190],[4.056533,7.823069],[9.141026,7.467017],[2.048751,8.780958],[-8.247261,2.447369],[-1.532011,1.692168],[-9.931769,6.285669],[7.328278,6.616022],[8.461055,-5.956322],[5.283177,-0.105048],[-1.794026,-0.732626],[1.529220,0.725573],[-5.619617,-8.685693],[9.024554,6.321919],[2.502537,-5.865598],[-9.544715,-8.796588],[-4.984580,-9.535050],[-1.000305,-3.788612],[9.313675,-3.884514],[0.814544,-3.686982],[5.357543,-2.523353],[-9.862480,-0.216377],[-9.386324,-1.717093],[-7.658376,-1.920164],[2.803048,4.342841],[-3.749944,-4.375527],[-3.382605,-7.648454],[-9.316917,-0.594594],[8.307678,-6.702632],[-5.903378,2.279293],[-3.206712,-1.687140],[-2.718115,1.639996],[6.328591,-3.872527],[7.459390,9.888762],[8.483529,5.187519],[-9.361517,2.589283],[-3.757784,7.316051],[2.649384,7.503609],[-1.021372,-8.103259],[7.501895,6.446145],[-5.576682,-9.659294],[-4.641523,-2.496318],[2.282063,-6.398340],[2.674979,-0.709643],[4.834859,-8.313813],[-3.544971,-2.540236],[4.624143,-6.770279],[5.976646,-8.609709],[1.298071,7.054313],[-0.369561,0.800824],[5.010348,-0.713228],[-5.538365,-3.715952],[-6.922230,-2.561946],[-0.441124,-7.074618],[8.360168,-6.786964],[-7.116665,7.928342],[7.961613,1.278726],[-4.731851,-5.795788],[-9.138874,-1.000995],[9.514532,4.237447],[8.883830,-4.556338],[-0.157584,-1.943951],[4.932767,-9.904977],[7.043623,0.117862],[-1.379593,-2.820251],[-6.581543,-3.339911],[3.005237,4.953697],[4.952682,6.257946],[-3.178093,8.778853],[-9.751072,-4.265459],[-9.533070,8.107214],[-1.373740,6.781493],[1.212948,1.230338],[-5.079886,8.765508],[-1.153202,-9.206867],[9.845961,7.423142],[1.236782,-6.791834],[-7.701746,-1.386724],[-9.022255,-1.381971],[-4.505189,7.106159],[0.020972,3.440902],[7.275887,-5.806043],[2.827210,7.677058],[-4.132793,-5.765503],[8.485108,7.723462],[-9.322013,8.534727],[4.434175,1.704592],[8.577767,1.427215],[-7.772591,-5.436853],[4.543465,7.022347],[3.941677,5.766693],[9.392451,2.198637],[0.611432,-8.824696],[-3.377392,-8.380789],[6.751761,-0.666153],[-0.137434,-8.767643],[-0.411286,-3.129651],[8.069537,1.408645],[3.116955,-3.948971],[-2.489026,5.817446],[-0.280165,5.781580],[8.719751,-1.564427],[-2.059548,4.560510],[-1.254939,5.345610],[-0.349199,1.376199],[3.064019,-4.905600],[3.504421,-6.310633],[4.806035,1.010637],[2.135072,-8.863262],[-8.553758,-1.689134],[3.345558,-1.869151],[2.396225,4.702099],[1.525092,4.129408],[2.891648,4.894581],[-6.350335,-6.353677],[-3.046457,8.523492],[9.426959,-3.442730],[-1.665912,-0.656656],[3.923131,8.248126],[-7.921599,-4.299428],[1.441666,-7.310033],[-3.822768,-2.822463],[6.736681,-9.693777],[-7.070649,-7.778919],[9.065385,-6.111602],[4.511879,-3.359012],[9.161318,4.031175],[-0.088649,3.533218],[6.395514,-3.620214],[-0.060975,-5.403440],[6.727144,4.574987],[-6.553716,2.377105],[-3.169963,1.430461],[-6.772682,-7.319597],[6.703114,0.172403],[-4.598019,-8.303203],[2.481078,2.511844],[3.443324,9.683004],[-7.004565,-1.533526],[-3.986302,-9.917941],[4.113253,-4.448568],[9.175463,8.787303],[-9.837394,-6.142194],[-3.419538,-1.470411],[0.376037,3.376366],[3.569733,-6.852127],[5.513206,-0.059981],[-5.255833,-1.599165],[-1.251775,-9.983592],[-1.483891,4.855526]], dtype = "float32")#candidate|3849|(528, 2)|const|float32
var_3850 = relay.var("var_3850", dtype = "float64", shape = (1176,))#candidate|3850|(1176,)|var|float64
call_3848 = relay.TupleGetItem(func_465_call(relay.reshape(const_3849.astype('float32'), [11, 12, 8]), relay.reshape(var_3850.astype('float64'), [1176,]), ), 1)
call_3851 = relay.TupleGetItem(func_469_call(relay.reshape(const_3849.astype('float32'), [11, 12, 8]), relay.reshape(var_3850.astype('float64'), [1176,]), ), 1)
func_2065_call = mod.get_global_var('func_2065')
func_2069_call = mutated_mod.get_global_var('func_2069')
var_3853 = relay.var("var_3853", dtype = "bool", shape = (360,))#candidate|3853|(360,)|var|bool
const_3854 = relay.const([-7,-10,10,1,-3,7,3,-1,-9,-3,2,10,-4,-8,9,2,10,4,7,10,-2,-10,-3,3,-3,10,10,3,8,-7,-5,-2,-10,-8,2,7,-5,8,-1,1,-7,-1,-2,3,6,-8,10,7], dtype = "int16")#candidate|3854|(48,)|const|int16
call_3852 = relay.TupleGetItem(func_2065_call(relay.reshape(var_3853.astype('bool'), [6, 12, 5]), relay.reshape(var_3853.astype('bool'), [6, 12, 5]), relay.reshape(const_3854.astype('int16'), [48,]), ), 3)
call_3855 = relay.TupleGetItem(func_2069_call(relay.reshape(var_3853.astype('bool'), [6, 12, 5]), relay.reshape(var_3853.astype('bool'), [6, 12, 5]), relay.reshape(const_3854.astype('int16'), [48,]), ), 3)
uop_3863 = relay.tan(var_3850.astype('float32')) # shape=(1176,)
uop_3865 = relay.atanh(uop_3863.astype('float32')) # shape=(1176,)
func_3638_call = mod.get_global_var('func_3638')
func_3640_call = mutated_mod.get_global_var('func_3640')
call_3870 = func_3638_call()
call_3871 = func_3638_call()
output = relay.Tuple([call_3819,call_3848,const_3849,call_3852,var_3853,const_3854,uop_3865,call_3870,])
output2 = relay.Tuple([call_3820,call_3851,const_3849,call_3855,var_3853,const_3854,uop_3865,call_3871,])
func_3873 = relay.Function([var_3850,var_3853,], output)
mod['func_3873'] = func_3873
mod = relay.transform.InferType()(mod)
var_3874 = relay.var("var_3874", dtype = "float64", shape = (1176,))#candidate|3874|(1176,)|var|float64
var_3875 = relay.var("var_3875", dtype = "bool", shape = (360,))#candidate|3875|(360,)|var|bool
output = func_3873(var_3874,var_3875,)
func_3876 = relay.Function([var_3874,var_3875,], output)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_3900 = func_2679_call()
call_3901 = func_2679_call()
output = call_3900
output2 = call_3901
func_3919 = relay.Function([], output)
mod['func_3919'] = func_3919
mod = relay.transform.InferType()(mod)
mutated_mod['func_3919'] = func_3919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3919_call = mutated_mod.get_global_var('func_3919')
call_3920 = func_3919_call()
output = call_3920
func_3921 = relay.Function([], output)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_3922 = relay.TupleGetItem(func_2553_call(), 0)
call_3923 = relay.TupleGetItem(func_2555_call(), 0)
const_3927 = relay.const([[[7,-10,-6,8,-3,-7,-6,9],[10,-2,-9,7,1,2,-1,4],[1,-6,-8,-5,7,3,-6,-3],[2,1,4,-1,-1,8,8,-10],[5,-7,2,6,-4,7,3,8]],[[-7,-7,5,5,2,10,5,-8],[7,5,-7,-1,10,-3,-7,-8],[-8,-3,-4,-10,10,-6,-1,-5],[-10,-8,-1,-10,-6,-4,3,-5],[-7,-5,7,-9,7,-3,-8,9]],[[-1,4,5,-3,-6,3,-8,-10],[9,8,-3,6,-10,2,-9,7],[7,6,-7,2,5,-3,-4,-8],[10,-10,2,-5,-4,2,8,-7],[-3,7,-1,3,4,1,-1,-2]],[[6,4,-9,10,-7,-9,4,-10],[-1,8,7,10,-9,1,9,-1],[-7,-2,-7,10,-9,-1,-8,-1],[-9,1,-4,9,-1,3,6,-6],[8,-9,-2,-9,1,3,2,-6]],[[-7,-8,7,2,8,7,-9,6],[1,-2,-6,4,-4,5,-3,8],[-10,-8,-4,5,6,-3,-5,2],[-4,-8,7,8,-7,7,7,-9],[-2,4,-7,-7,2,-8,10,-10]],[[-4,7,-10,-5,9,8,-7,-3],[-4,-6,-7,-4,6,-6,1,3],[6,-9,4,-3,5,-8,-8,1],[9,1,-2,-5,-6,-5,8,-4],[-7,-9,6,5,-3,4,-6,-1]],[[2,-1,8,3,6,5,-7,6],[-2,6,-9,1,-5,-5,-10,8],[-2,-8,-4,6,-10,-3,10,10],[8,-3,-6,1,9,-4,4,-1],[-8,7,-2,1,-6,9,-8,1]],[[5,-3,10,4,-1,6,-10,-2],[-8,2,5,-3,10,10,-3,1],[7,-10,-9,-4,-5,-8,1,-3],[2,-10,9,-10,7,8,-1,9],[5,4,-8,-6,3,7,-3,-3]],[[-6,-2,8,7,-1,7,-3,3],[10,4,8,-8,-6,-2,-5,-4],[10,7,9,3,-6,4,-9,-1],[-6,4,7,-2,-8,1,-1,-4],[2,-9,5,3,-4,-3,5,1]],[[-9,3,8,-8,-4,-10,6,6],[-5,-9,8,-2,-8,-3,-8,-4],[1,6,5,-6,5,-5,-9,-8],[-7,5,-10,6,-3,-3,-5,-2],[6,-6,2,-1,-7,7,-7,-10]],[[-4,8,1,4,-4,7,-5,6],[4,2,3,2,-10,-3,4,9],[-10,3,-2,-7,5,-8,2,-2],[7,4,-9,-9,5,-4,-7,8],[10,9,10,10,2,6,1,10]],[[-3,-7,1,9,-8,-7,-8,2],[-8,-1,9,-6,7,-2,-1,6],[9,6,9,-7,10,2,1,-5],[-5,9,-8,-2,8,-5,8,-5],[-7,8,6,-1,-9,4,4,-9]],[[8,2,3,-2,8,2,-9,5],[-5,1,10,10,4,-9,7,-9],[6,-10,-5,-9,-10,-1,7,-6],[-10,-6,9,-10,-3,-5,-5,-5],[8,-9,10,6,-1,10,4,2]],[[2,-4,5,-8,-1,1,9,-6],[-3,-8,6,-6,2,7,-1,7],[7,8,3,2,-7,9,-1,3],[-3,1,-6,8,-3,1,2,-9],[9,-2,-3,8,9,8,-6,8]]], dtype = "uint16")#candidate|3927|(14, 5, 8)|const|uint16
bop_3928 = relay.floor_divide(call_3922.astype('float32'), relay.reshape(const_3927.astype('float32'), relay.shape_of(call_3922))) # shape=(14, 5, 8)
bop_3931 = relay.floor_divide(call_3923.astype('float32'), relay.reshape(const_3927.astype('float32'), relay.shape_of(call_3923))) # shape=(14, 5, 8)
func_252_call = mod.get_global_var('func_252')
func_255_call = mutated_mod.get_global_var('func_255')
var_3937 = relay.var("var_3937", dtype = "float32", shape = (308,))#candidate|3937|(308,)|var|float32
call_3936 = relay.TupleGetItem(func_252_call(relay.reshape(var_3937.astype('float32'), [11, 7, 4])), 2)
call_3938 = relay.TupleGetItem(func_255_call(relay.reshape(var_3937.astype('float32'), [11, 7, 4])), 2)
output = relay.Tuple([bop_3928,call_3936,var_3937,])
output2 = relay.Tuple([bop_3931,call_3938,var_3937,])
func_3951 = relay.Function([var_3937,], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3952 = relay.var("var_3952", dtype = "float32", shape = (308,))#candidate|3952|(308,)|var|float32
func_3951_call = mutated_mod.get_global_var('func_3951')
call_3953 = func_3951_call(var_3952)
output = call_3953
func_3954 = relay.Function([var_3952], output)
mutated_mod['func_3954'] = func_3954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_3959 = relay.TupleGetItem(func_2553_call(), 0)
call_3960 = relay.TupleGetItem(func_2555_call(), 0)
output = call_3959
output2 = call_3960
func_3967 = relay.Function([], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3967_call = mutated_mod.get_global_var('func_3967')
call_3968 = func_3967_call()
output = call_3968
func_3969 = relay.Function([], output)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3972 = relay.TupleGetItem(func_3482_call(), 0)
call_3973 = relay.TupleGetItem(func_3484_call(), 0)
func_1912_call = mod.get_global_var('func_1912')
func_1917_call = mutated_mod.get_global_var('func_1917')
const_4006 = relay.const([[-4,10,4,-10,5,6,-9,-8,9,6,5,-1,-3,-7,-6,-6,-6,2,4,-8,8,-6,-5,7,8,6,-3,2,-5,1,-2,2,7,7,-7,-10,-10,-1,-1,-3,-4,-4,-7,-2,-3,-6,4,-2]], dtype = "int16")#candidate|4006|(1, 48)|const|int16
const_4007 = relay.const([[1,2,7,-7,-9,-4,9,-2,10,10,3,10,-8,-2,-2,-3,-8,-8,4,-6,2,2,4,8,3,9,-2,5,9,-10,10,3,8,-1,-9,-5,-8,4,-2,-7,10,3,8,-4,5,-5,-9,3,2,-10,-10,3,2,2,-2,1,7,-6,1,-10,-5,-3,5,-4,9,-9,-8,9,-10,6,-9,3,-10,-1,-10,9,-7,-2],[10,1,-9,-10,-3,-9,-1,-4,-1,-8,-6,5,-3,-1,-9,-5,8,-8,-6,-4,-9,-1,-7,3,-2,2,-2,-3,-1,5,9,9,-6,6,7,-5,4,-9,1,-10,2,10,-9,7,7,-2,-2,4,9,-3,2,5,4,-7,-5,-9,-9,1,1,-9,-1,-7,-1,-4,2,1,5,-10,-1,5,3,4,-4,9,-4,6,-7,-10],[-5,-3,2,-1,-9,8,-7,7,-9,-2,-8,10,9,-9,10,-7,6,2,-3,6,5,3,9,3,-2,2,-6,-4,-10,-1,6,7,-9,1,3,5,3,1,-9,3,9,-1,-8,8,-10,10,9,8,-8,2,-8,1,-7,5,-9,5,-4,3,-1,-3,1,7,-3,-10,3,4,8,-3,2,-1,6,8,-2,3,-3,-6,-2,-4],[5,-5,5,8,-7,-10,-8,-9,-7,-6,8,-4,-8,5,1,-4,-5,-5,-8,-4,5,-1,5,9,7,-2,-7,-7,-5,4,4,-4,-8,-9,-3,1,-9,9,2,-5,-3,7,-3,6,1,-6,9,5,-9,4,-7,10,-7,9,8,2,3,3,6,-4,1,-1,9,8,10,2,4,5,-2,3,-10,-1,-2,7,-4,-4,-10,-5],[-1,-9,-2,-8,2,10,-8,5,-5,1,3,-7,10,1,-4,-8,-1,6,9,-2,7,-6,4,-5,8,-8,7,-7,5,-8,8,6,5,3,-5,-5,-8,9,2,2,-1,2,-6,-6,1,-1,-2,-8,-8,2,-7,-4,-10,6,-9,4,1,-10,5,9,2,4,-7,-2,3,-6,1,-5,5,2,4,-3,-2,-9,1,-2,7,6],[10,9,-1,4,-9,10,-4,7,8,10,-3,6,8,6,6,9,1,9,-7,4,4,9,6,-4,5,2,-5,-3,-6,8,2,-8,-7,5,-10,9,2,-1,-1,-3,-9,6,5,6,-10,-5,-2,-7,2,3,10,-7,8,-3,3,7,2,7,-5,-9,5,-7,-9,-6,-6,-4,-10,3,8,-9,9,-4,-1,8,-4,-1,3,6],[4,-4,10,1,8,8,-7,7,-2,8,-4,9,5,6,10,1,-3,-6,-4,3,-8,-8,-5,-2,-9,-10,9,8,-9,-4,-6,3,-10,2,-6,8,5,3,-2,-7,-7,2,8,2,4,-8,-10,10,2,6,7,3,9,-2,-1,1,-7,4,5,-5,-1,-1,-4,1,-5,5,8,-1,-4,-7,3,-4,3,8,-5,8,5,-5],[2,-6,-2,6,9,-6,-2,9,-2,-8,1,2,-10,-2,-10,6,4,9,-5,7,-4,-6,-7,-4,7,2,7,-6,4,1,-6,6,-1,5,9,1,-4,-2,3,7,-7,10,5,-2,-5,-1,-2,-8,-1,10,-4,7,-7,8,-6,-9,-6,-8,6,-9,5,-9,-6,-1,-1,-1,1,2,7,-7,7,-6,7,-5,6,-2,-4,5]], dtype = "int16")#candidate|4007|(8, 78)|const|int16
var_4008 = relay.var("var_4008", dtype = "uint64", shape = (286,))#candidate|4008|(286,)|var|uint64
call_4005 = relay.TupleGetItem(func_1912_call(relay.reshape(const_4006.astype('int16'), [1, 8, 6]), relay.reshape(const_4007.astype('int16'), [13, 8, 6]), relay.reshape(var_4008.astype('uint64'), [286, 1]), ), 4)
call_4009 = relay.TupleGetItem(func_1917_call(relay.reshape(const_4006.astype('int16'), [1, 8, 6]), relay.reshape(const_4007.astype('int16'), [13, 8, 6]), relay.reshape(var_4008.astype('uint64'), [286, 1]), ), 4)
var_4021 = relay.var("var_4021", dtype = "int16", shape = (8, 78))#candidate|4021|(8, 78)|var|int16
bop_4022 = relay.maximum(const_4007.astype('uint64'), relay.reshape(var_4021.astype('uint64'), relay.shape_of(const_4007))) # shape=(8, 78)
var_4025 = relay.var("var_4025", dtype = "float64", shape = (14, 5, 8))#candidate|4025|(14, 5, 8)|var|float64
bop_4026 = relay.logical_or(call_3972.astype('bool'), relay.reshape(var_4025.astype('bool'), relay.shape_of(call_3972))) # shape=(14, 5, 8)
bop_4029 = relay.logical_or(call_3973.astype('bool'), relay.reshape(var_4025.astype('bool'), relay.shape_of(call_3973))) # shape=(14, 5, 8)
func_2365_call = mod.get_global_var('func_2365')
func_2369_call = mutated_mod.get_global_var('func_2369')
var_4032 = relay.var("var_4032", dtype = "float32", shape = (308,))#candidate|4032|(308,)|var|float32
var_4033 = relay.var("var_4033", dtype = "float64", shape = (6, 196))#candidate|4033|(6, 196)|var|float64
var_4034 = relay.var("var_4034", dtype = "float64", shape = (350,))#candidate|4034|(350,)|var|float64
call_4031 = relay.TupleGetItem(func_2365_call(relay.reshape(var_4032.astype('float32'), [308,]), relay.reshape(var_4033.astype('float64'), [1176, 1]), relay.reshape(var_4034.astype('float64'), [5, 5, 14]), ), 1)
call_4035 = relay.TupleGetItem(func_2369_call(relay.reshape(var_4032.astype('float32'), [308,]), relay.reshape(var_4033.astype('float64'), [1176, 1]), relay.reshape(var_4034.astype('float64'), [5, 5, 14]), ), 1)
output = relay.Tuple([call_4005,const_4006,var_4008,bop_4022,bop_4026,call_4031,var_4032,var_4033,var_4034,])
output2 = relay.Tuple([call_4009,const_4006,var_4008,bop_4022,bop_4029,call_4035,var_4032,var_4033,var_4034,])
func_4036 = relay.Function([var_4008,var_4021,var_4025,var_4032,var_4033,var_4034,], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
mutated_mod['func_4036'] = func_4036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4036_call = mutated_mod.get_global_var('func_4036')
var_4038 = relay.var("var_4038", dtype = "uint64", shape = (286,))#candidate|4038|(286,)|var|uint64
var_4039 = relay.var("var_4039", dtype = "int16", shape = (8, 78))#candidate|4039|(8, 78)|var|int16
var_4040 = relay.var("var_4040", dtype = "float64", shape = (14, 5, 8))#candidate|4040|(14, 5, 8)|var|float64
var_4041 = relay.var("var_4041", dtype = "float32", shape = (308,))#candidate|4041|(308,)|var|float32
var_4042 = relay.var("var_4042", dtype = "float64", shape = (6, 196))#candidate|4042|(6, 196)|var|float64
var_4043 = relay.var("var_4043", dtype = "float64", shape = (350,))#candidate|4043|(350,)|var|float64
call_4037 = func_4036_call(var_4038,var_4039,var_4040,var_4041,var_4042,var_4043,)
output = call_4037
func_4044 = relay.Function([var_4038,var_4039,var_4040,var_4041,var_4042,var_4043,], output)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_4051 = relay.TupleGetItem(func_2949_call(), 0)
call_4052 = relay.TupleGetItem(func_2950_call(), 0)
const_4053 = relay.const([[[-2.736156,-6.993095,-5.774185,-9.444139,-6.522382,2.554753,-7.782494,-2.588426,-6.726101],[9.681072,5.781958,-4.585764,2.364217,2.838397,-2.052731,8.750549,-9.930174,-6.246302],[-3.301156,7.534167,2.287783,-5.520772,-6.080757,-1.293588,8.073823,3.815897,-7.067661],[7.584344,1.553482,-4.684776,0.989195,-4.363431,3.185939,0.586827,7.602428,-5.496005],[5.532748,-4.349927,-0.290473,-9.863752,-5.878648,-2.761369,9.543874,-3.840751,-9.563883],[-9.415009,-1.609446,4.076540,6.622526,-1.846952,-2.193103,-3.282497,5.552931,6.686323],[4.066673,8.000116,0.724818,6.231019,1.102262,2.637316,-0.891624,8.179749,9.883123],[-1.573238,9.204513,4.211821,2.358868,6.320163,5.727418,-8.083064,-1.927838,-0.828819],[0.166253,7.218634,-6.971497,-8.036478,-9.205699,4.074553,8.059420,3.695650,-2.893249],[-7.176866,-3.016983,-0.619270,-0.203964,-8.497926,-3.404249,1.353097,-2.580817,-7.710671],[2.116190,4.020525,4.276335,9.662081,-7.112052,3.431413,-0.121805,2.398514,-9.976121],[-0.975749,-4.090770,8.761854,8.633927,1.115163,4.661141,-8.577115,-1.878971,5.427804],[5.965818,-4.398191,9.412712,-3.770349,8.028534,-9.238527,-8.046993,2.827817,9.306241],[6.334641,9.561398,3.834505,2.795240,8.814531,5.145252,4.524209,-9.496256,6.425013]],[[1.976252,7.858166,8.305099,-2.499441,-2.847779,-1.558937,9.130297,-1.869799,-7.728050],[0.799424,-9.115946,-7.746003,2.050326,-5.243099,1.263607,4.948807,1.663658,-6.211822],[-9.864952,-2.599267,-3.655930,3.232258,0.195316,-1.234786,3.907833,0.309219,-6.126331],[2.420756,6.092905,6.275538,4.341779,3.009083,4.224038,5.886636,7.242037,-5.681651],[3.620616,8.945658,-1.106908,-1.172127,1.709315,7.772811,2.141522,-3.586570,-7.899206],[-9.236525,-9.224403,-2.254240,3.750983,-3.092791,-7.482037,-2.077739,-0.242299,-3.352348],[6.376948,-4.086457,-8.828836,-1.772730,-7.785930,-9.498252,1.230084,2.115236,-3.133809],[1.961138,4.287678,-9.880921,0.215588,5.870686,-2.961072,-9.499675,0.204841,3.048633],[-0.442034,6.207458,-1.963087,6.115897,-5.771055,5.915299,-6.784202,-6.330188,-0.666482],[6.747219,8.076332,0.451335,-1.149478,0.566452,-2.428650,6.062827,1.318017,-0.684223],[-3.359758,1.118481,-2.570139,-7.219139,2.407427,-1.363269,9.580654,8.806988,3.659051],[0.384727,-3.973979,2.049947,3.621299,0.786472,2.881271,-0.871754,3.594214,3.862258],[-3.868659,1.142569,-0.015364,-7.418145,8.092165,5.093447,-1.408850,0.362497,4.337603],[-4.356706,3.189508,9.343402,0.099394,5.210616,6.477996,-3.082930,-2.447365,-3.933465]],[[5.029635,-4.663883,-0.697700,0.301736,-2.279588,-8.639817,2.445669,-6.105769,-1.638575],[-0.854984,9.165026,3.850830,-3.779856,9.653457,8.421976,2.803112,-9.920630,2.027162],[8.105680,6.492846,5.832353,-2.535763,-9.007914,-8.697220,-4.099452,-3.817175,-8.144779],[3.822453,5.039629,3.165947,-3.661577,-1.638620,-8.468109,1.247907,-2.201642,-9.352990],[-4.822565,3.398823,5.068504,-3.943272,-8.938400,-2.329649,-2.727379,5.776730,-6.378531],[-7.388393,1.521494,8.439948,-4.177886,-5.038835,5.776112,3.996266,2.133140,3.802767],[-8.991202,-0.951774,-0.280786,8.117989,-7.844404,9.009120,7.237075,9.489776,-3.852172],[-6.766088,-7.869045,9.579802,5.948931,2.180616,9.681807,-7.607481,-6.849511,-9.308041],[5.169226,5.983406,-7.668373,-2.875250,-5.110773,8.697052,-0.277637,-3.264309,-8.719624],[-8.404969,-2.514067,-2.723573,-1.861937,2.943758,1.909980,-1.950063,2.519109,4.611869],[-5.978354,0.745816,2.929478,2.936991,-3.383681,-5.628343,0.113762,5.379286,8.425772],[-6.227564,-8.072887,-0.443442,6.398227,-2.656945,1.700276,2.502171,8.229397,-0.262472],[7.522725,-9.018175,7.237392,-9.005627,4.274051,-3.368960,6.054555,3.340469,-5.407017],[8.472807,-9.756898,-8.403218,9.336553,1.936532,-0.179530,-4.333634,4.836563,-2.280282]]], dtype = "float64")#candidate|4053|(3, 14, 9)|const|float64
bop_4054 = relay.minimum(call_4051.astype('int8'), relay.reshape(const_4053.astype('int8'), relay.shape_of(call_4051))) # shape=(3, 14, 9)
bop_4057 = relay.minimum(call_4052.astype('int8'), relay.reshape(const_4053.astype('int8'), relay.shape_of(call_4052))) # shape=(3, 14, 9)
output = relay.Tuple([bop_4054,])
output2 = relay.Tuple([bop_4057,])
func_4058 = relay.Function([], output)
mod['func_4058'] = func_4058
mod = relay.transform.InferType()(mod)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4058_call = mutated_mod.get_global_var('func_4058')
call_4059 = func_4058_call()
output = call_4059
func_4060 = relay.Function([], output)
mutated_mod['func_4060'] = func_4060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4172 = relay.var("var_4172", dtype = "float64", shape = (7, 13))#candidate|4172|(7, 13)|var|float64
uop_4173 = relay.exp(var_4172.astype('float64')) # shape=(7, 13)
output = relay.Tuple([uop_4173,])
output2 = relay.Tuple([uop_4173,])
func_4182 = relay.Function([var_4172,], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
var_4183 = relay.var("var_4183", dtype = "float64", shape = (7, 13))#candidate|4183|(7, 13)|var|float64
output = func_4182(var_4183)
func_4184 = relay.Function([var_4183], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3506_call = mod.get_global_var('func_3506')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_4188 = relay.TupleGetItem(func_3506_call(), 0)
call_4189 = relay.TupleGetItem(func_3508_call(), 0)
func_596_call = mod.get_global_var('func_596')
func_600_call = mutated_mod.get_global_var('func_600')
var_4195 = relay.var("var_4195", dtype = "uint32", shape = (200,))#candidate|4195|(200,)|var|uint32
call_4194 = func_596_call(relay.reshape(var_4195.astype('uint32'), [10, 2, 10]), relay.reshape(var_4195.astype('uint32'), [10, 2, 10]), )
call_4196 = func_596_call(relay.reshape(var_4195.astype('uint32'), [10, 2, 10]), relay.reshape(var_4195.astype('uint32'), [10, 2, 10]), )
output = relay.Tuple([call_4188,call_4194,var_4195,])
output2 = relay.Tuple([call_4189,call_4196,var_4195,])
func_4206 = relay.Function([var_4195,], output)
mod['func_4206'] = func_4206
mod = relay.transform.InferType()(mod)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4207 = relay.var("var_4207", dtype = "uint32", shape = (200,))#candidate|4207|(200,)|var|uint32
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4208 = func_4206_call(var_4207)
output = call_4208
func_4209 = relay.Function([var_4207], output)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4211 = relay.var("var_4211", dtype = "int8", shape = (11, 15, 5))#candidate|4211|(11, 15, 5)|var|int8
var_4212 = relay.var("var_4212", dtype = "int8", shape = (11, 15, 5))#candidate|4212|(11, 15, 5)|var|int8
bop_4213 = relay.logical_xor(var_4211.astype('int8'), relay.reshape(var_4212.astype('int8'), relay.shape_of(var_4211))) # shape=(11, 15, 5)
uop_4226 = relay.log2(var_4212.astype('float64')) # shape=(11, 15, 5)
output = relay.Tuple([bop_4213,uop_4226,])
output2 = relay.Tuple([bop_4213,uop_4226,])
func_4234 = relay.Function([var_4211,var_4212,], output)
mod['func_4234'] = func_4234
mod = relay.transform.InferType()(mod)
var_4235 = relay.var("var_4235", dtype = "int8", shape = (11, 15, 5))#candidate|4235|(11, 15, 5)|var|int8
var_4236 = relay.var("var_4236", dtype = "int8", shape = (11, 15, 5))#candidate|4236|(11, 15, 5)|var|int8
output = func_4234(var_4235,var_4236,)
func_4237 = relay.Function([var_4235,var_4236,], output)
mutated_mod['func_4237'] = func_4237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3967_call = mod.get_global_var('func_3967')
func_3969_call = mutated_mod.get_global_var('func_3969')
call_4265 = func_3967_call()
call_4266 = func_3967_call()
output = relay.Tuple([call_4265,])
output2 = relay.Tuple([call_4266,])
func_4273 = relay.Function([], output)
mod['func_4273'] = func_4273
mod = relay.transform.InferType()(mod)
mutated_mod['func_4273'] = func_4273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4273_call = mutated_mod.get_global_var('func_4273')
call_4274 = func_4273_call()
output = call_4274
func_4275 = relay.Function([], output)
mutated_mod['func_4275'] = func_4275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3967_call = mod.get_global_var('func_3967')
func_3969_call = mutated_mod.get_global_var('func_3969')
call_4368 = func_3967_call()
call_4369 = func_3967_call()
uop_4371 = relay.erf(call_4368.astype('float64')) # shape=(14, 5, 8)
uop_4373 = relay.erf(call_4369.astype('float64')) # shape=(14, 5, 8)
func_998_call = mod.get_global_var('func_998')
func_1003_call = mutated_mod.get_global_var('func_1003')
var_4398 = relay.var("var_4398", dtype = "bool", shape = (144,))#candidate|4398|(144,)|var|bool
const_4399 = relay.const([2,5,6,-8,-2,9,3,6,-1,1,7,-6,-2,4,1,-1,5,-7,-9,6,-2,-5,-8,10,-2,-1,9,-3,-2,-6,-10,-5,2,-6,9,-4,-8,-5,-2,6,-7,10,-6,8,9,10,10,4,9,5,-3,8,-10,10,7,-7,-4,-10,-1,10,-2,-1,6,-6,-9,-3,-2,6,4,-5,3,-7,8,-9,6,10,10,2,-9,2,-3,-2,6,8,-3,2,6,3,5,-4,-3,-10,-8,-10,-3,6,-7,-1,-6,4,-4,5,6,-6,2,-3,-6,8,7,2,-10,8,-5,-2,-9,-10,5,-5,-5,-3,2,-2,10,2,-7,9,-1,3,-5,-8,-3,9,6,-10,-6,-10,2,-7,-1,2,-3,3,8,-3,3,9,-4,8,6,-2,3,-1,1,7,-8,10,-2,7,-1,4,4,1,-4,7,-7,2,-1,4,2,-6,2,4,-8,-5,5,-2,5,-6,-4,-10,-4,-10,-9,6,6,4,7,6,-2,6,-2,-4,-4,9,5,-9,-4,-3,3,-4], dtype = "uint32")#candidate|4399|(200,)|const|uint32
call_4397 = relay.TupleGetItem(func_998_call(relay.reshape(var_4398.astype('bool'), [3, 4, 12]), relay.reshape(const_4399.astype('uint32'), [200,]), relay.reshape(var_4398.astype('bool'), [3, 4, 12]), ), 0)
call_4400 = relay.TupleGetItem(func_1003_call(relay.reshape(var_4398.astype('bool'), [3, 4, 12]), relay.reshape(const_4399.astype('uint32'), [200,]), relay.reshape(var_4398.astype('bool'), [3, 4, 12]), ), 0)
uop_4415 = relay.asinh(call_4397.astype('float64')) # shape=(7, 4, 12)
uop_4417 = relay.asinh(call_4400.astype('float64')) # shape=(7, 4, 12)
var_4419 = relay.var("var_4419", dtype = "uint16", shape = (14, 5, 8))#candidate|4419|(14, 5, 8)|var|uint16
bop_4420 = relay.greater_equal(call_4368.astype('bool'), relay.reshape(var_4419.astype('bool'), relay.shape_of(call_4368))) # shape=(14, 5, 8)
bop_4423 = relay.greater_equal(call_4369.astype('bool'), relay.reshape(var_4419.astype('bool'), relay.shape_of(call_4369))) # shape=(14, 5, 8)
func_3271_call = mod.get_global_var('func_3271')
func_3274_call = mutated_mod.get_global_var('func_3274')
var_4425 = relay.var("var_4425", dtype = "float64", shape = (378,))#candidate|4425|(378,)|var|float64
call_4424 = relay.TupleGetItem(func_3271_call(relay.reshape(var_4425.astype('float64'), [3, 14, 9])), 0)
call_4426 = relay.TupleGetItem(func_3274_call(relay.reshape(var_4425.astype('float64'), [3, 14, 9])), 0)
output = relay.Tuple([uop_4371,var_4398,const_4399,uop_4415,bop_4420,call_4424,var_4425,])
output2 = relay.Tuple([uop_4373,var_4398,const_4399,uop_4417,bop_4423,call_4426,var_4425,])
func_4430 = relay.Function([var_4398,var_4419,var_4425,], output)
mod['func_4430'] = func_4430
mod = relay.transform.InferType()(mod)
var_4431 = relay.var("var_4431", dtype = "bool", shape = (144,))#candidate|4431|(144,)|var|bool
var_4432 = relay.var("var_4432", dtype = "uint16", shape = (14, 5, 8))#candidate|4432|(14, 5, 8)|var|uint16
var_4433 = relay.var("var_4433", dtype = "float64", shape = (378,))#candidate|4433|(378,)|var|float64
output = func_4430(var_4431,var_4432,var_4433,)
func_4434 = relay.Function([var_4431,var_4432,var_4433,], output)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_4481 = relay.TupleGetItem(func_2937_call(), 0)
call_4482 = relay.TupleGetItem(func_2939_call(), 0)
func_4058_call = mod.get_global_var('func_4058')
func_4060_call = mutated_mod.get_global_var('func_4060')
call_4512 = relay.TupleGetItem(func_4058_call(), 0)
call_4513 = relay.TupleGetItem(func_4060_call(), 0)
output = relay.Tuple([call_4481,call_4512,])
output2 = relay.Tuple([call_4482,call_4513,])
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mutated_mod.get_global_var('func_4535')
call_4536 = func_4535_call()
output = call_4536
func_4537 = relay.Function([], output)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_4538 = relay.TupleGetItem(func_2937_call(), 0)
call_4539 = relay.TupleGetItem(func_2939_call(), 0)
func_3757_call = mod.get_global_var('func_3757')
func_3760_call = mutated_mod.get_global_var('func_3760')
var_4584 = relay.var("var_4584", dtype = "float32", shape = (84,))#candidate|4584|(84,)|var|float32
call_4583 = func_3757_call(relay.reshape(var_4584.astype('float32'), [6, 14]), relay.reshape(var_4584.astype('float32'), [6, 14]), )
call_4585 = func_3757_call(relay.reshape(var_4584.astype('float32'), [6, 14]), relay.reshape(var_4584.astype('float32'), [6, 14]), )
output = relay.Tuple([call_4538,call_4583,var_4584,])
output2 = relay.Tuple([call_4539,call_4585,var_4584,])
func_4598 = relay.Function([var_4584,], output)
mod['func_4598'] = func_4598
mod = relay.transform.InferType()(mod)
mutated_mod['func_4598'] = func_4598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4599 = relay.var("var_4599", dtype = "float32", shape = (84,))#candidate|4599|(84,)|var|float32
func_4598_call = mutated_mod.get_global_var('func_4598')
call_4600 = func_4598_call(var_4599)
output = call_4600
func_4601 = relay.Function([var_4599], output)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_4627 = relay.TupleGetItem(func_2937_call(), 0)
call_4628 = relay.TupleGetItem(func_2939_call(), 0)
output = relay.Tuple([call_4627,])
output2 = relay.Tuple([call_4628,])
func_4643 = relay.Function([], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
output = func_4643()
func_4644 = relay.Function([], output)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4273_call = mod.get_global_var('func_4273')
func_4275_call = mutated_mod.get_global_var('func_4275')
call_4668 = relay.TupleGetItem(func_4273_call(), 0)
call_4669 = relay.TupleGetItem(func_4275_call(), 0)
output = call_4668
output2 = call_4669
func_4686 = relay.Function([], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mutated_mod.get_global_var('func_4686')
call_4687 = func_4686_call()
output = call_4687
func_4688 = relay.Function([], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mod.get_global_var('func_3655')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_4697 = relay.TupleGetItem(func_3655_call(), 0)
call_4698 = relay.TupleGetItem(func_3657_call(), 0)
func_2246_call = mod.get_global_var('func_2246')
func_2248_call = mutated_mod.get_global_var('func_2248')
const_4705 = relay.const([[-2.667580,9.041267,6.509020,-5.003684],[-2.070455,-1.288297,-4.187636,1.208746],[8.195982,-3.613114,4.490983,3.513077],[5.693742,-6.945320,4.150340,-9.074273],[3.047523,-8.704156,-3.503626,-8.994165],[-5.621397,-8.530405,1.363208,0.840478],[-1.267517,4.598313,-1.892259,-8.087222],[-8.258084,5.156212,6.853578,3.067874],[-6.180325,7.611587,3.954778,8.358558],[0.065710,-3.621203,4.616008,9.670131],[8.571187,-6.517543,3.337484,9.605656],[0.172158,9.502034,-3.462936,1.420659],[-7.267629,-6.032592,9.034276,-4.969084],[3.345455,1.123167,-4.218344,-3.224675],[2.580686,5.786854,3.084382,-4.799878],[-5.012068,8.512582,2.285156,3.985250],[-6.179281,8.785954,4.850758,-0.455461],[-2.515390,-9.853918,-1.657912,-8.775800]], dtype = "float64")#candidate|4705|(18, 4)|const|float64
call_4704 = func_2246_call(relay.reshape(const_4705.astype('float64'), [4, 6, 3]))
call_4706 = func_2246_call(relay.reshape(const_4705.astype('float64'), [4, 6, 3]))
func_2521_call = mod.get_global_var('func_2521')
func_2525_call = mutated_mod.get_global_var('func_2525')
var_4722 = relay.var("var_4722", dtype = "float32", shape = (150,))#candidate|4722|(150,)|var|float32
call_4721 = relay.TupleGetItem(func_2521_call(relay.reshape(var_4722.astype('float32'), [5, 5, 6]), relay.reshape(var_4722.astype('float32'), [5, 5, 6]), ), 3)
call_4723 = relay.TupleGetItem(func_2525_call(relay.reshape(var_4722.astype('float32'), [5, 5, 6]), relay.reshape(var_4722.astype('float32'), [5, 5, 6]), ), 3)
output = relay.Tuple([call_4697,call_4704,const_4705,call_4721,var_4722,])
output2 = relay.Tuple([call_4698,call_4706,const_4705,call_4723,var_4722,])
func_4738 = relay.Function([var_4722,], output)
mod['func_4738'] = func_4738
mod = relay.transform.InferType()(mod)
var_4739 = relay.var("var_4739", dtype = "float32", shape = (150,))#candidate|4739|(150,)|var|float32
output = func_4738(var_4739)
func_4740 = relay.Function([var_4739], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4767 = relay.var("var_4767", dtype = "int64", shape = (8, 16, 1))#candidate|4767|(8, 16, 1)|var|int64
var_4768 = relay.var("var_4768", dtype = "int64", shape = (8, 16, 2))#candidate|4768|(8, 16, 2)|var|int64
bop_4769 = relay.logical_xor(var_4767.astype('int64'), var_4768.astype('int64')) # shape=(8, 16, 2)
bop_4773 = relay.add(var_4767.astype('uint16'), var_4768.astype('uint16')) # shape=(8, 16, 2)
output = relay.Tuple([bop_4769,bop_4773,])
output2 = relay.Tuple([bop_4769,bop_4773,])
func_4784 = relay.Function([var_4767,var_4768,], output)
mod['func_4784'] = func_4784
mod = relay.transform.InferType()(mod)
var_4785 = relay.var("var_4785", dtype = "int64", shape = (8, 16, 1))#candidate|4785|(8, 16, 1)|var|int64
var_4786 = relay.var("var_4786", dtype = "int64", shape = (8, 16, 2))#candidate|4786|(8, 16, 2)|var|int64
output = func_4784(var_4785,var_4786,)
func_4787 = relay.Function([var_4785,var_4786,], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4822 = relay.var("var_4822", dtype = "uint8", shape = (7, 13, 16))#candidate|4822|(7, 13, 16)|var|uint8
var_4823 = relay.var("var_4823", dtype = "uint8", shape = (7, 13, 16))#candidate|4823|(7, 13, 16)|var|uint8
bop_4824 = relay.left_shift(var_4822.astype('uint8'), relay.reshape(var_4823.astype('uint8'), relay.shape_of(var_4822))) # shape=(7, 13, 16)
uop_4830 = relay.log2(var_4823.astype('float32')) # shape=(7, 13, 16)
func_3148_call = mod.get_global_var('func_3148')
func_3157_call = mutated_mod.get_global_var('func_3157')
const_4833 = relay.const([1,-8,-8,1,8,-5,-9,3,8,4,-6,-2,2,5,8,-9,-10,8,-8,7,5,10,-6,-3,-4,8,9,-6,7,-7,1,-6,3,-8,4,-10,-7,2,-3,8,1,-9,5,-3,7,9,-10,-9,-8,-5,-2,1,5,-5,-10,8,-8,-4,-2,-9,-1,-7,5,5,4,-6,-4,8,-2,-8,5,-6,2,-9,-10,-5,7,3,9,5,-7,10,10,9,-2,-6,4,1,5,2,8,-8,1,-7,9,-4,3,-8,-3,-6,-5,-1,6,4,-1,7,-6,-4,-6,7,-3,2,4,-8,8,-1,6,-1,-5,-2,-1,-8,3,4,-3,5,-10,1,-8,3,2,-8,-10,-1,-1,-1,-3,1,-1,5,6,9,8,1,10,1,-10,2,-7,-4,7,3,6,-6,-1,-10,-9,-2,-10,3,9,-2,3,8,9,10,-9,6], dtype = "uint16")#candidate|4833|(168,)|const|uint16
const_4834 = relay.const([-3.464343,4.483112,-1.388314,-1.105834,-8.080623,-8.014758,0.936457,3.178003,-2.903834,5.002488,-7.828438,-7.560406,8.903422,-8.859439,-8.801318,-2.390899,5.345667,-2.954182,2.276515,-8.912997,6.403027,2.839787,6.518619,-2.717189,3.129902,2.086754,-4.215728,-2.996784,0.786703,-4.039396,-7.013918,8.756307,-5.668477,-5.238632,-0.389496,2.581379,6.988189,-2.543064,8.685849,-1.463662,-1.408919,-1.184746,4.505706,9.047686,-7.010896,5.579669,-6.900095,-6.746810,-5.024054,-2.242954,-1.604538,-1.889561,-5.406240,-4.069309,-9.093282,9.322329,-8.927268,3.016943,-3.893197,0.522683,-4.293421,-4.203483,7.910424,4.455374,7.411219,-7.409398,6.744516,2.585932,1.109821,9.945159,0.686760,0.967995,-3.867716,0.632636,8.259377,5.154236,7.785264,-4.350342,0.527853,6.231470,-7.795379,-1.743852,-6.347491,3.368067,1.009362,1.127010,4.174281,-8.493016,9.397118,0.938680,-6.390778,-4.500543,-7.449607,-2.674284,-4.100212,-0.236020,9.613865,-2.520701,-4.655597,-5.917371,-3.177467,-1.422716,-9.513892,-7.241602,5.007064,-2.506990,-4.525191,2.341544,5.456483,-1.119188,9.370671,-1.724276,4.129751,0.860055,4.354806,8.373274,9.564525,3.929930,8.516401,-5.078369,5.601736,-8.143087,0.856749,-3.111277,-3.222633,2.947777,8.481186,-9.903229,-9.192292,9.013339,7.715733,-1.374899,-8.575423,-3.961754,0.330025,-8.041837,6.774286,-8.326301,3.342560,-9.401808,-3.259249,3.563376,5.871361,-5.515384,5.043296,2.560001,1.624891,-2.935067,-0.633227,2.379116,2.963326,-3.113954,-4.400795,6.348267,-0.859371,6.754066,9.345951,-2.514630,6.068381,7.567218,-6.437371,5.068705,-5.326353,-3.655606,9.698615,-4.132218,2.233025,2.761762,6.551959,5.452089,-2.375075,-7.727642,-4.800138,9.819047,-2.689916,-3.477144,2.610732,-1.108993,7.398732,-0.911435,-8.672183,6.427539,-0.969847,3.313966,-1.951233,9.978412,-5.732714,-2.331866,-6.459391,-2.975347,-3.586435,-7.475302,-3.414568,9.096946,6.179410,-6.010606,-6.340654,5.850169,4.289353,4.872496,-5.853107,-7.377766,-4.145682,8.539723,-4.511187,3.553508,-7.147327,4.172721,-6.786138,8.647502,-7.116872,5.820343,8.709740,3.952482,-0.820224,-9.831085,8.460740,8.548049,-4.725463,8.674451,-5.953591,9.407475,-9.035189,0.079040,-7.452684,-4.186655,3.254144,0.209127,-7.500974,4.487500,2.474273,5.331968,-6.930582,7.143981,7.495562,-2.311331,6.864632,6.380817,-7.634161,9.406737,5.488562,4.661977,5.664978,8.537623,-4.544727,-0.030001,9.647496,-8.667311,-0.989972,-1.213345,-2.087530,5.844162,-5.398087,0.581923,-4.890464,8.615093,-0.564742,-6.461389,-0.208958,-1.309743,-3.108466,-4.669786,-3.474965,6.933050,-2.868068,0.367575,-2.927658,8.391863,4.648335,6.963993,1.961079,9.884680,-1.573240,2.901966,4.191157,5.730601,8.592470,0.224761,-9.618655,-8.633900,-3.160122,-6.999951,6.814206,-3.694935,-9.252129,-7.904553,-2.653114,-2.949038,5.151166,5.254723,8.064123,-1.633073,3.553786,-6.892989,-5.125655,-4.283745,-5.083077,-4.900115,-3.106083,-8.466751,-4.153473,-7.104074,-8.416639,3.136496,9.617479,9.138896,7.818573,6.269971,9.696343,8.026373,-3.168238,4.934693,-0.303100,-9.736037,-1.136898,9.549501,2.860933,2.243701,-3.577676,1.961054,-3.945816,-0.362472,-3.413275,-3.094870,-2.973563,-5.308943,7.534915,1.218445,2.044556,3.548915,5.791964,-7.202705,-9.616025,-8.323679,6.854305,-6.148897,-1.517997,7.090105,-6.169239,8.521384,8.201314,-9.124954,6.956343,-2.920415,6.153880,-3.848713,3.052842,-2.241706,-9.021583,-9.333839,-9.414932,5.027718,-9.864698,-6.176501,-1.925061,8.267517,8.571305,0.530024,4.007502,8.407719,8.142592,6.892169,-9.330473,-1.912447,8.241684,-0.724203,-8.261754,-1.302293,3.871248,9.545507,-5.530373,5.297336,-3.226648,-5.959312,9.203807,4.852794,7.259312,6.403749,-2.239649,7.795914,-1.316910,7.720168,6.194893,5.980457,-9.007216,0.375356,4.696481,-8.036201,5.008889,-1.554680,-5.427890,3.075397,-9.270894,-4.051130,-0.533266,-1.818351,1.045062,1.948853,-7.134473,7.656997,-3.120893,4.785139,-7.826775,3.570551,1.714833,-3.571955,2.071445,1.494024,-2.140343,-8.551656,4.683804,0.520379,5.953207,-2.205839,-5.520290,-2.517059,-3.572459,-5.791181,-7.628184,-3.122622,2.248944,2.243568,-5.927548,4.758649,-0.156841,0.499829,-8.641189,9.683060,-9.624627,4.523675,4.137481,2.149017,-3.646218,-8.920957,4.457939,-3.689911,0.106623,-4.193344,-3.422441,-0.189974,3.220063,0.774587,4.316893,3.521165,-9.986793,-3.162910,8.695859,0.627240,0.987825,-0.077372,-2.428051,-3.716863,-5.528810,1.850426,-0.293984,-3.109868,5.532715,9.547836,-0.524378,-5.568566,-8.446759,-7.400509,-6.316714,7.185575,-9.907578,4.412117,-9.287964,-1.391831,-5.540674,7.269295,-2.041960,-2.615312,3.962733,-0.708692,5.491565,-2.018706,1.652852,5.641026,-0.732567,4.581649,-7.658438,5.752669,-1.222150,6.699648,9.130544,6.574316,-5.110559,-2.642362,-4.562775,4.258128,1.078773,3.242997,6.118731,4.066018,1.327176,-6.060681,8.240561,-3.815499,2.957487,-2.646707,-4.672505,-4.780043,0.966558,3.776019,9.129936,1.960106,-4.324474,6.990257,8.626344,-9.566204,-1.026190,-8.301904,-8.788803,3.622259,2.754029,6.292509,-6.268401,-3.108011,-5.432659,1.592309,0.097228,-4.218808,9.562247,5.095352,-0.044439,6.958176,-6.926701,-0.330175,-1.487220,-7.759956,7.128160,4.193689,-9.263162,-8.919702,9.676631,-9.955487,-0.994442,0.411285,9.262498,6.778992,-4.537360,-3.070456,-4.874878,6.147586,-1.524962,-7.136411,6.396909,7.756379,-5.625696,-8.488130,7.863822,-3.261902,-1.308063,7.323022,-0.827773,4.817454,4.798929,5.983724,9.949543,-0.999868,-5.529817,0.093654,6.839504,8.638798,-2.091928,3.423849,9.688853,-9.115184,2.639388,0.424532,-0.082344,-0.003944,-2.937807,7.802281,1.398513,4.232987,0.074369,1.561956,-8.084549,-7.215602,7.615829,-1.333574,2.271639,-9.398913,7.625837,-6.749280,-0.802572,9.116623,-6.155576,-2.893586,8.400018,4.376584,6.825866,7.077944,-5.043869,-9.943620,9.038400,-5.178565,8.391392,-7.104390,-3.022003,-0.537389,5.384249,1.907161,4.612276,3.630168,3.077359,9.151396,-9.014480,-3.139093,-0.467122,-2.496876,-0.915362,-0.482994,9.459879,-4.148267,3.452719,-8.110709,-2.844950,-6.172051,-8.461275,-6.493621,-8.093570,-4.676760,-4.695440,4.259591,5.983979,7.496156,-3.185434,-6.754495,-2.211183,6.600450,4.051426,-9.146245,8.509943,1.781811,9.180259,-3.694800,2.186481,-0.142496,4.414976,-2.321466,2.705773,-5.605205,9.207769,2.034635,0.781821,6.807614,-6.313574,0.995116,-3.720984,7.644623,-8.486988,-0.964703,-7.853209,-1.474086,-2.246935,4.945870,-8.665576,-8.060956,-8.044704,6.682202,-0.562124,-1.794373,-1.612805,2.061241,9.488943,-9.969491,-3.456038,8.909699,8.411791,-8.703870,8.986208,2.377793,-4.172911,3.030302,3.326739,-8.078119,-5.364022,6.299533,-6.371191,5.998004,7.464825,-7.214406,-8.184119,2.207134,1.454449,-0.014436,5.529215,-6.850988,7.420200,-9.059768,-8.153603,-8.673276,6.394305,0.903321,-7.112122,3.830689,8.450539,4.646455,-3.187413,7.641099,6.566113,-6.075069,-7.188192,-4.410121,-3.909953,-7.168881,4.027686,0.729874,-4.767292,1.490772,-2.212572,0.263104,-7.398916,2.736059,7.829134,-9.013043,-1.320628,5.964294,4.388438,-1.938754,-8.866089,-8.883815,-7.073543,-9.074797,-6.613395,5.763570,2.514421,-2.832781,-9.372558,-9.984804,5.550102,-3.706948,1.820290,-0.474853,7.319121,-2.899297,4.936879,2.891575,4.789527,1.002319,0.844552,-2.427648,3.943879,-1.002613,-0.073809,8.946637,4.084702,-5.806763,0.726033,1.305957,2.613488,-2.301646,-5.642962,-1.392935,6.108963,-7.345107,6.221142,5.546848,2.446110,-4.541488,-5.127211,7.307111,4.594489,-5.355479,-4.541294,2.831842,-0.472615,6.725816,8.262625,-6.675195,6.859795,-6.867765,6.558166,6.354321,6.634180,-1.793891,6.519451,-7.245610,1.966843,6.377166,-7.383066,-7.222166,-8.609515,-5.879631,9.625507,-3.075134,4.070630,0.503766,3.116612,0.213071,-3.461654,-0.417578,-1.636612,-1.402095,-7.385134,4.220829,-8.877640,4.217568,3.937298,8.923270,-3.325277,2.250404,-8.523405,-3.481366,7.070257,-1.915173,5.960368,6.435258,2.523531,-6.942066,7.731641,4.373514,5.637650,-6.377316,-1.841279,6.097406,-8.665838,-4.875868,-1.591555,-7.790747,-1.859356,0.979296,2.437094,8.426384,8.291286,-9.100637,-3.752344,-1.444949,-6.841690,-8.601755,-6.044385,7.827236,1.188504,8.062356,-8.985472,8.907573,6.813275,8.341124,-3.177495,6.259242,-1.716411,-8.314339,7.138133,-3.315375,-6.711480,-8.625788,-4.855970,3.228374,4.161346,6.137019,-8.593786,0.261535,-5.557807,-9.329225,4.388236,-4.094773,-0.033469,-8.304688,9.719445,5.535975,-6.703350,3.819926,-3.871308,-6.031660,4.159262,6.878502,-2.204777,2.997877,0.550507,0.203194,-5.562778,-4.908802,3.304070,-0.574213,4.118771,-3.097803,-0.472999,0.515321,-0.662887,-8.374102,9.466988,9.310934,-7.807245,-6.859396,-2.484174,9.598907,3.047505,6.993194,-3.146336,-1.196125,-1.510911,5.846586,-9.945416,7.354304,-1.715140,-2.814209,5.529722,-0.154416,7.910134,-8.217148,-5.356733,-1.141432,5.031418,-6.779348,2.679173,-5.280630,2.514859,-1.759382,-9.002936,-7.407800,-4.506994,-5.460284,-3.915330,6.648563,-0.572930,-1.355925,3.793701,-1.527432,-9.906232,8.382454,0.287546,5.954877,7.409470,-3.764002,3.284619,5.447581,-7.396661,-9.334422,-1.564579,-7.992089,4.328867,9.399462,5.390220,1.529531,1.429044,8.401933,-2.012212,8.437705,9.708634,0.693058,0.740480,-7.451358,9.656253,-0.445068,-3.004000,-6.162640,4.963795,4.131240,4.151056,1.768968,4.290390,-8.429918,5.565276,7.935766,9.173706,-6.406872,2.680985,-9.366949,2.838974,-7.484849,2.250471,4.660862,1.751991,1.002626,6.395263,2.509496,-0.255363,6.317251,6.500437,-7.237676,6.205360,8.790683,6.784990,7.801297,9.301288,-8.536647,-7.372410,7.826963,-5.451076,6.211959,1.868568,-6.784461,-6.485566,-1.729401,8.743070,-3.100866,7.762522,5.574961,-7.952447,2.740230,2.418977,-8.375198,8.178010,3.854993,4.465362,6.107307,6.454361,-8.763125,5.540667,5.122826,5.199719,-0.509905,-2.004785,3.694820,-7.371934,-8.959027,-9.084189,-3.064108,-0.762179,-6.886525,-9.524253,2.512905,1.547460,5.124785,-0.531610,6.601442,-7.110612,-6.602163,-9.367632,7.548629,-3.535579,-5.335752,5.295915,-4.869630,-8.549907,8.357017,-3.681742,-8.945268,-4.994563,4.235161,-9.716894,-5.086491,-9.143701,2.678841,-8.123690,8.723502,-1.531005,6.670798,-8.727882,-6.080745,-3.248390,8.412721,-0.839177,7.661831,6.366737,1.294430,7.726824,0.562060,-3.380872,-3.425251,8.263497,1.782170,3.473327,2.147443], dtype = "float32")#candidate|4834|(1056,)|const|float32
var_4835 = relay.var("var_4835", dtype = "float64", shape = (2, 588))#candidate|4835|(2, 588)|var|float64
const_4836 = relay.const([-4.349212,0.723288,3.944859,6.665745,-0.566049,3.680753,-6.966540,5.223590,5.365897,4.404408,-3.962174,-3.447784,-5.003815,3.615380,0.880255,-9.988405,9.506295,3.135345,8.438764,7.892508,-1.547425,-6.717531,-4.536925,-8.502952,2.394122,-7.743081,2.038047,-0.148828,3.002962,4.898046,1.860929,-5.383421,-8.148606,7.604370,6.835180,1.712689,3.878583,-3.886508,2.082664,5.476844,-1.426435,5.492609,-5.399022,-6.817114,2.644060,-9.849545,3.491242,0.699713,-4.537777,4.727361,-2.767412,0.275535,5.864609,5.234673,-1.965093,2.361455,-7.235125,-1.742282,-5.771343,-8.011466,0.349176,-6.046924,-9.864580,-3.261209,-9.255862,-3.842696,-1.918870,3.563278,6.698492,9.725550,8.201132,1.044051,9.237294,5.150426,-3.644510,0.348571,-8.097898,-8.206483,2.752924,-0.564862,7.638138,-3.309666,-9.775967,5.372687,-4.348473,-1.690172,9.372503,-0.955126,9.954631,-8.645431,9.463991,2.315111,-6.573525,-7.742162,-7.454753,4.936288,4.866530,-1.295813,2.638555,-9.993482,-8.795516,-5.938651,-5.432210,-3.097372,-8.573990,3.473906,-7.509853,8.376129,-7.278146,-2.209007,-5.681459,-3.290903,-7.337209,-9.689452,-3.091762,9.926598,9.346684,-1.053056,-7.576960,0.278964,-9.353168,2.908120,-1.050674,5.306916,-0.328265,5.607442,5.409944,0.026862,-3.345445,-4.093595,-4.660634,9.143410,1.505468,3.447883,-8.874337,-2.873507,0.615127,4.357287,-2.012211,-5.540426,6.967090,-7.396760,-6.715345,-1.732655,5.189319,3.994116,-1.104534,4.858628,8.933022,-9.142354,5.569082,-7.929552,-6.125992,-5.823076,-1.763134,0.537993,9.603396,-3.245865,1.975799,-7.509481,0.117903,-9.321884,2.634823,6.412049,-1.099661,-6.001005,-3.109663,-1.248317,8.692284,-5.308602,-7.024415,6.237561,1.096684,4.959518,-7.917364,8.550084,4.710037,0.760387,3.855022,1.047261,-2.350011,3.590694,-1.683857,4.432422,7.271162,7.104485,-5.485551,4.261597,7.617097,-3.119614,-4.230172,5.714024,-2.525085,-6.637493,-9.032946,9.549578,-8.642831,5.807158,8.445810,-0.894999,-3.465164,-1.696859,-2.039267,-1.549399,-0.191830,7.142751,-6.331477,-0.077545,1.544407,-2.347510,3.004650,2.086114,1.265265,-4.587876,8.343185,7.166284,5.942554,-0.096534,8.268950,6.384691,-6.062853,-0.817396,0.178543,0.211683,-1.910458,-8.151964,9.638850,3.864282,7.488307,7.293669,-9.578151,-9.842043,-4.054439,5.464814,-8.477229,6.476870,9.060844,1.757195,5.429205,9.572691,6.972433,5.835988,6.777498,2.546147,-5.587439,-5.053417,4.301517,-9.181796,8.882287,6.264111,-3.525353,-3.049815,-8.137380,0.912174,-2.740611,8.344884,-1.060781,2.090223,9.336485,-3.290980,6.497930,-4.939893,-4.205012,2.480439,-0.993773,2.481192,7.151671,-9.356623,8.003298,7.878222,5.342922,1.029592,4.808662,4.008509,2.723825,5.257490,-9.063638,6.970731,-2.588294,9.442540,8.936546,-5.108107,-4.343639,7.953098,-8.784517,-5.250601,6.270022,4.789541,-6.697285,-9.138977,8.929796,-0.448322,7.837673,-9.099554,-5.080536,6.569960,-2.782546,2.547705,-3.422947,-3.103722,5.697725,-2.300098,2.827681,-8.311953,8.913594,6.694342,-2.755694,-8.691062,-6.605216,9.705130,-1.150836,-6.495771,-8.166794,-1.024385,-6.224876,7.414761,3.560066,0.630067,-5.106675,-7.941270,-1.954020,-9.453640,5.113685,-1.714494,7.805280,4.909812,-4.418859,-8.170641,7.789472,-4.797537,6.585188,3.505959,9.239686,7.631439,-8.528842,9.468864,-7.678890,6.713424,3.095244,6.577561,-6.399673,-6.630990,-3.455185,7.572396,7.142946,-7.626833,-0.316487,9.618475,-5.752394,0.975579], dtype = "float64")#candidate|4836|(350,)|const|float64
var_4837 = relay.var("var_4837", dtype = "float64", shape = (32,))#candidate|4837|(32,)|var|float64
var_4838 = relay.var("var_4838", dtype = "bool", shape = (144,))#candidate|4838|(144,)|var|bool
var_4839 = relay.var("var_4839", dtype = "int32", shape = ())#candidate|4839|()|var|int32
call_4832 = relay.TupleGetItem(func_3148_call(relay.reshape(const_4833.astype('uint16'), [168,]), relay.reshape(const_4834.astype('float32'), [1056,]), relay.reshape(var_4835.astype('float64'), [1176,]), relay.reshape(const_4836.astype('float64'), [35, 10]), relay.reshape(var_4837.astype('float64'), [32,]), relay.reshape(var_4838.astype('bool'), [144,]), relay.reshape(var_4839.astype('int32'), []), ), 19)
call_4840 = relay.TupleGetItem(func_3157_call(relay.reshape(const_4833.astype('uint16'), [168,]), relay.reshape(const_4834.astype('float32'), [1056,]), relay.reshape(var_4835.astype('float64'), [1176,]), relay.reshape(const_4836.astype('float64'), [35, 10]), relay.reshape(var_4837.astype('float64'), [32,]), relay.reshape(var_4838.astype('bool'), [144,]), relay.reshape(var_4839.astype('int32'), []), ), 19)
output = relay.Tuple([bop_4824,uop_4830,call_4832,const_4833,const_4834,var_4835,const_4836,var_4837,var_4838,var_4839,])
output2 = relay.Tuple([bop_4824,uop_4830,call_4840,const_4833,const_4834,var_4835,const_4836,var_4837,var_4838,var_4839,])
func_4847 = relay.Function([var_4822,var_4823,var_4835,var_4837,var_4838,var_4839,], output)
mod['func_4847'] = func_4847
mod = relay.transform.InferType()(mod)
mutated_mod['func_4847'] = func_4847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4847_call = mutated_mod.get_global_var('func_4847')
var_4849 = relay.var("var_4849", dtype = "uint8", shape = (7, 13, 16))#candidate|4849|(7, 13, 16)|var|uint8
var_4850 = relay.var("var_4850", dtype = "uint8", shape = (7, 13, 16))#candidate|4850|(7, 13, 16)|var|uint8
var_4851 = relay.var("var_4851", dtype = "float64", shape = (2, 588))#candidate|4851|(2, 588)|var|float64
var_4852 = relay.var("var_4852", dtype = "float64", shape = (32,))#candidate|4852|(32,)|var|float64
var_4853 = relay.var("var_4853", dtype = "bool", shape = (144,))#candidate|4853|(144,)|var|bool
var_4854 = relay.var("var_4854", dtype = "int32", shape = ())#candidate|4854|()|var|int32
call_4848 = func_4847_call(var_4849,var_4850,var_4851,var_4852,var_4853,var_4854,)
output = call_4848
func_4855 = relay.Function([var_4849,var_4850,var_4851,var_4852,var_4853,var_4854,], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4884 = relay.const([[[8.321622,9.936366,-0.664984,-0.517825,-9.612349,7.894952,2.587190,0.631258,5.464722,-1.550226,-0.069734,4.946198,7.774968,6.157081,7.987252],[-4.081941,-9.385281,-0.380050,-4.624995,-1.744863,3.754619,-8.461671,4.450513,-0.726515,-7.284186,-7.827301,2.331847,4.724483,-5.568666,1.806716],[-8.541642,-5.406796,5.935971,4.860522,-7.710272,-6.732160,0.795094,-2.509551,4.377866,7.250611,3.717909,-7.053304,1.596739,5.406453,-5.868106],[-3.333385,6.149500,-8.870865,4.485752,-6.391221,4.020292,1.431607,2.880972,8.577289,7.301151,-2.871299,8.666596,4.667638,6.892575,-7.920912],[-0.641841,-1.336351,5.616623,-8.935281,-6.399319,-2.868945,-3.927420,-7.487327,7.482781,-5.474626,-4.889127,7.305079,1.024731,-5.586880,-4.796439],[4.683096,6.363352,-7.234004,-7.543909,-0.433587,2.063172,-8.803686,-4.417035,-3.466791,1.657525,-1.870523,6.202142,0.524948,1.798441,4.804872],[-6.545890,-4.245681,-4.683899,-1.110944,9.437680,9.460376,-5.964601,-7.225270,-9.737536,-9.964722,3.419716,8.254916,2.606761,-3.631070,8.944472],[-3.248071,-2.084290,7.996070,4.641498,1.519725,-4.939572,0.181929,-0.782852,-6.434083,-7.274947,-8.675119,6.186199,4.164379,-0.562234,2.780672],[0.237873,8.482252,-2.949859,1.119967,3.816777,0.072685,6.525165,-0.275311,-2.304953,4.159125,3.915022,1.831090,6.358021,1.919343,-4.367846],[5.500575,-1.119164,6.824796,-6.483506,-7.909740,0.611263,8.152660,6.938890,-7.566764,-6.060444,-1.969497,-3.132178,2.136803,-1.232597,9.009101]],[[2.276832,4.678551,-7.396753,7.250229,5.490680,-3.676351,2.319878,9.810932,7.435980,-8.675164,8.802492,6.374610,-8.018966,-8.904485,-9.492005],[4.823591,-2.778712,4.464524,4.036393,5.919793,5.530917,2.491169,-9.848903,5.442858,7.614584,4.659307,-1.031823,-5.663799,4.611123,-6.558475],[-3.243086,-4.881578,-4.257386,4.053989,-8.181164,-1.148859,-4.255966,-2.805467,-9.674737,-7.720357,0.752346,9.215237,0.707177,4.961785,-5.392831],[-6.622699,2.434644,9.768731,-3.884121,-9.109160,-4.606096,-8.830443,-9.466798,9.451806,-0.268361,-2.779893,2.764671,-2.728526,7.698236,-6.715468],[1.640584,8.361590,1.444050,-5.134019,2.172299,-0.432152,8.003821,5.654998,5.324606,-5.621560,-5.839795,6.691705,-1.689580,-7.204670,0.808932],[9.326702,3.983953,-2.995503,-8.939868,4.956897,1.352971,3.108621,-1.988585,-1.157470,4.228717,-2.154610,-2.824438,3.537199,0.414545,-2.604882],[-5.900786,4.657698,-5.545508,-2.008327,-5.640764,6.207540,9.998746,-8.484284,1.523338,7.090170,0.820285,-7.602492,-3.831283,9.309943,-5.713160],[-0.948417,3.866920,-7.367085,5.218856,-9.934206,-6.003617,0.419993,-0.480907,-3.758027,8.544038,-4.067096,9.465419,-0.106915,8.039934,7.453076],[1.744309,-2.443125,1.143459,5.540460,-5.410353,-7.874997,6.830540,-7.282615,1.323395,5.480780,0.317128,4.956644,-1.716345,-9.168345,4.230077],[5.687266,9.197248,-6.504758,6.120474,-3.942891,3.022648,-6.368164,-2.553078,7.383836,7.487403,-9.615013,-2.018183,4.104355,6.391659,-9.758523]],[[5.639672,-9.878096,-0.905726,5.163669,-2.689130,2.713976,-0.208315,-9.533195,-3.057893,-1.701031,-7.221332,-2.130774,4.674759,4.220823,5.945396],[9.367212,-0.155978,-9.365076,-1.795350,-9.516767,7.266057,7.057389,9.064075,-6.949961,7.688904,-9.365782,-1.607118,-2.051414,-8.430259,-3.998307],[-4.628429,4.095726,2.082826,2.989277,6.514635,-1.785100,7.271473,0.506246,7.903521,-9.820893,-6.269066,-5.667693,-2.087437,-4.316492,4.110650],[-5.771041,5.245282,-9.079818,0.231067,-1.213027,2.370095,5.572045,-3.690796,0.353228,6.867844,-1.610409,-2.082741,-0.277706,-2.866874,-8.003509],[9.098949,3.701855,-4.394187,-0.867421,0.578046,-7.468147,4.645611,0.054423,-0.913866,-9.663063,-3.139541,-2.644137,6.011640,1.805908,8.936423],[1.849118,2.851365,0.616519,-9.099648,4.493163,5.579340,-0.362056,-7.319402,-5.890209,2.881434,-9.557365,-0.381106,-9.022432,7.964955,7.317562],[9.824288,6.048331,6.299840,-7.458029,-8.322630,8.911839,-8.798514,3.060952,9.018509,3.574829,-7.669080,-9.710554,-3.969312,-7.253417,5.020132],[0.158350,0.032738,7.210530,7.239043,-1.944904,7.871066,7.849971,-8.256160,-5.209467,2.086112,-5.118818,8.043442,-2.013624,1.488616,1.428116],[-7.020182,-6.665093,-7.424732,-3.427999,5.660306,5.440761,-5.075854,-5.290499,2.496401,-4.282821,3.885946,-0.401789,6.241569,-3.076953,-1.058168],[9.717766,-7.968783,-0.933911,8.697216,5.809514,3.922815,-5.723479,7.030010,-3.270425,2.975000,7.868558,6.712624,-3.278965,-6.446966,-0.714352]],[[-2.247267,6.292925,4.942122,9.903817,-7.601695,1.879191,-2.279380,0.372502,0.429587,-3.155782,-5.688031,3.149513,-6.398594,7.583593,-8.918686],[5.168491,3.895589,-4.455478,-3.028246,-9.833146,-0.977297,-1.491197,3.299540,-5.422437,-3.648316,7.947093,6.658948,-3.913652,-6.176515,-3.180766],[6.536945,-6.524004,9.130732,8.409266,-1.509059,-2.839399,-2.904965,6.323070,1.644156,-3.086695,0.255382,-9.494497,-7.103385,-8.130706,-5.478746],[6.445167,-7.326195,2.409270,-4.906349,1.365002,-0.205519,2.646003,-9.947330,-4.802719,6.995007,2.735474,-4.734300,9.086741,6.352483,-3.225665],[-2.562537,2.895855,6.841044,-8.328714,-0.805031,-0.450179,-9.170220,3.709932,0.728754,-9.402237,-2.182680,6.625030,9.996731,9.368059,-2.498943],[3.750204,6.557010,3.249053,0.709189,9.525390,5.829666,-8.670502,8.183119,-7.214336,8.997322,2.792197,9.895446,-6.727939,4.673493,1.829718],[4.987717,2.206433,0.202265,9.195415,-9.521540,-9.310183,2.239740,7.553475,-9.341110,4.840255,-2.214023,2.436468,4.436823,7.442977,0.924108],[-8.508697,1.420960,-5.119650,-2.512261,3.173961,-4.952094,-4.915271,-5.267469,-9.255749,9.511184,-0.481203,5.738669,3.296704,2.533046,7.383837],[4.533946,-7.735223,4.236751,-4.692430,-3.188883,2.923725,5.693715,-8.343973,9.486523,3.408494,-1.322107,7.839934,5.248721,-7.920926,9.268320],[-7.289109,1.385922,8.964043,8.050617,-9.587126,1.454955,-0.084697,3.099374,-6.358374,4.116666,-3.642581,6.522113,8.921519,-7.770767,1.336567]]], dtype = "float32")#candidate|4884|(4, 10, 15)|const|float32
uop_4885 = relay.atan(const_4884.astype('float32')) # shape=(4, 10, 15)
bop_4887 = relay.greater_equal(uop_4885.astype('bool'), relay.reshape(const_4884.astype('bool'), relay.shape_of(uop_4885))) # shape=(4, 10, 15)
output = bop_4887
output2 = bop_4887
func_4893 = relay.Function([], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mutated_mod.get_global_var('func_4893')
call_4894 = func_4893_call()
output = call_4894
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4960 = func_4686_call()
call_4961 = func_4686_call()
output = call_4960
output2 = call_4961
func_4968 = relay.Function([], output)
mod['func_4968'] = func_4968
mod = relay.transform.InferType()(mod)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4968_call = mutated_mod.get_global_var('func_4968')
call_4969 = func_4968_call()
output = call_4969
func_4970 = relay.Function([], output)
mutated_mod['func_4970'] = func_4970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_5041 = func_2679_call()
call_5042 = func_2679_call()
uop_5047 = relay.sinh(call_5041.astype('float64')) # shape=(3, 14, 9)
uop_5049 = relay.sinh(call_5042.astype('float64')) # shape=(3, 14, 9)
func_252_call = mod.get_global_var('func_252')
func_255_call = mutated_mod.get_global_var('func_255')
var_5052 = relay.var("var_5052", dtype = "float32", shape = (308,))#candidate|5052|(308,)|var|float32
call_5051 = relay.TupleGetItem(func_252_call(relay.reshape(var_5052.astype('float32'), [11, 7, 4])), 2)
call_5053 = relay.TupleGetItem(func_255_call(relay.reshape(var_5052.astype('float32'), [11, 7, 4])), 2)
var_5055 = relay.var("var_5055", dtype = "float32", shape = (308,))#candidate|5055|(308,)|var|float32
bop_5056 = relay.equal(var_5052.astype('bool'), relay.reshape(var_5055.astype('bool'), relay.shape_of(var_5052))) # shape=(308,)
bop_5059 = relay.power(uop_5047.astype('float32'), relay.reshape(call_5041.astype('float32'), relay.shape_of(uop_5047))) # shape=(3, 14, 9)
bop_5062 = relay.power(uop_5049.astype('float32'), relay.reshape(call_5042.astype('float32'), relay.shape_of(uop_5049))) # shape=(3, 14, 9)
func_2065_call = mod.get_global_var('func_2065')
func_2069_call = mutated_mod.get_global_var('func_2069')
var_5066 = relay.var("var_5066", dtype = "bool", shape = (360,))#candidate|5066|(360,)|var|bool
const_5067 = relay.const([5,-9,5,-1,-5,-1,-6,-6,1,7,7,-8,10,-9,7,-9,6,-1,-9,9,-7,-10,-5,1,-4,-10,6,3,-3,9,4,10,7,1,4,-1,-10,6,-9,-5,-5,4,-2,-1,1,7,-7,7], dtype = "int16")#candidate|5067|(48,)|const|int16
call_5065 = relay.TupleGetItem(func_2065_call(relay.reshape(var_5066.astype('bool'), [6, 12, 5]), relay.reshape(var_5066.astype('bool'), [6, 12, 5]), relay.reshape(const_5067.astype('int16'), [48,]), ), 0)
call_5068 = relay.TupleGetItem(func_2069_call(relay.reshape(var_5066.astype('bool'), [6, 12, 5]), relay.reshape(var_5066.astype('bool'), [6, 12, 5]), relay.reshape(const_5067.astype('int16'), [48,]), ), 0)
var_5075 = relay.var("var_5075", dtype = "float64", shape = (3, 14, 9))#candidate|5075|(3, 14, 9)|var|float64
bop_5076 = relay.greater_equal(uop_5047.astype('bool'), relay.reshape(var_5075.astype('bool'), relay.shape_of(uop_5047))) # shape=(3, 14, 9)
bop_5079 = relay.greater_equal(uop_5049.astype('bool'), relay.reshape(var_5075.astype('bool'), relay.shape_of(uop_5049))) # shape=(3, 14, 9)
output = relay.Tuple([call_5051,bop_5056,bop_5059,call_5065,var_5066,const_5067,bop_5076,])
output2 = relay.Tuple([call_5053,bop_5056,bop_5062,call_5068,var_5066,const_5067,bop_5079,])
func_5080 = relay.Function([var_5052,var_5055,var_5066,var_5075,], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
var_5081 = relay.var("var_5081", dtype = "float32", shape = (308,))#candidate|5081|(308,)|var|float32
var_5082 = relay.var("var_5082", dtype = "float32", shape = (308,))#candidate|5082|(308,)|var|float32
var_5083 = relay.var("var_5083", dtype = "bool", shape = (360,))#candidate|5083|(360,)|var|bool
var_5084 = relay.var("var_5084", dtype = "float64", shape = (3, 14, 9))#candidate|5084|(3, 14, 9)|var|float64
output = func_5080(var_5081,var_5082,var_5083,var_5084,)
func_5085 = relay.Function([var_5081,var_5082,var_5083,var_5084,], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_5104 = relay.TupleGetItem(func_2949_call(), 0)
call_5105 = relay.TupleGetItem(func_2950_call(), 0)
output = relay.Tuple([call_5104,])
output2 = relay.Tuple([call_5105,])
func_5122 = relay.Function([], output)
mod['func_5122'] = func_5122
mod = relay.transform.InferType()(mod)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5123 = func_5122_call()
output = call_5123
func_5124 = relay.Function([], output)
mutated_mod['func_5124'] = func_5124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mod.get_global_var('func_3407')
func_3409_call = mutated_mod.get_global_var('func_3409')
call_5138 = func_3407_call()
call_5139 = func_3407_call()
output = call_5138
output2 = call_5139
func_5140 = relay.Function([], output)
mod['func_5140'] = func_5140
mod = relay.transform.InferType()(mod)
mutated_mod['func_5140'] = func_5140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5140_call = mutated_mod.get_global_var('func_5140')
call_5141 = func_5140_call()
output = call_5141
func_5142 = relay.Function([], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5193 = relay.var("var_5193", dtype = "int64", shape = (14, 10, 6))#candidate|5193|(14, 10, 6)|var|int64
const_5194 = relay.const([[[-2,5,-4,7,10,8],[4,-5,7,-9,9,-8],[2,3,6,4,-6,-3],[3,-10,-5,-1,10,-5],[-9,-1,-6,3,4,8],[9,9,2,6,1,10],[-4,5,7,2,-4,-4],[-9,-10,7,4,-3,1],[-4,-3,-3,-3,4,-9],[-7,8,-4,-4,1,8]],[[4,-4,-5,-2,-2,-6],[-6,1,6,-10,3,-6],[10,1,-4,9,-1,4],[-10,4,9,-8,-10,4],[9,1,-2,8,-7,-3],[-8,-10,9,-4,8,2],[10,2,-9,6,-10,9],[-5,6,-7,-4,3,-3],[-6,1,7,-9,3,6],[8,9,10,10,6,5]],[[6,6,3,-2,-6,-1],[6,9,3,-1,-7,9],[-8,-3,6,6,9,-1],[-1,9,8,2,2,-5],[-7,8,-5,-1,7,-7],[-2,-4,5,3,-10,7],[4,2,-1,3,-3,1],[-7,3,6,6,5,9],[9,7,-4,-7,-4,-6],[-8,-2,-9,9,5,9]],[[-3,9,7,7,-2,5],[-1,-6,-3,-1,-1,-10],[-5,-6,2,-2,-2,-3],[3,-5,4,-2,-2,1],[3,4,4,6,-4,2],[8,1,6,-9,3,3],[3,2,6,-3,-5,4],[-3,-9,-3,-5,6,2],[-1,1,6,1,1,-7],[9,7,6,-3,2,-8]],[[-4,7,-8,-2,-2,2],[6,9,9,6,5,1],[-5,-2,6,-3,2,10],[8,10,-4,-8,-10,-10],[3,8,-1,1,3,6],[-5,10,8,-1,2,8],[6,8,5,6,8,-7],[-2,7,-6,-5,-2,10],[6,8,-5,-4,4,-8],[2,10,7,-8,-8,6]],[[-8,6,-7,9,10,-1],[-6,5,-9,-1,-8,-2],[8,5,5,-1,6,4],[-8,7,2,2,-5,8],[-1,-6,7,3,7,3],[-1,6,4,1,5,-9],[-9,5,-9,9,-1,6],[-2,5,-8,3,5,-7],[3,2,-9,5,3,10],[-2,-1,-6,2,7,-9]],[[-6,-4,-6,-9,-2,-7],[9,7,-3,-3,7,-9],[-2,-1,6,5,4,10],[-2,-9,7,5,7,1],[8,6,-9,-8,-5,1],[-1,-5,6,7,4,4],[9,1,-9,7,-6,5],[-7,6,6,-5,-4,1],[6,9,3,3,-3,9],[9,-1,8,-2,-1,-7]],[[8,3,2,3,4,-8],[-7,1,7,2,-6,1],[-1,9,3,-10,-1,2],[-10,9,-9,3,10,-8],[3,-5,2,-3,10,6],[1,2,-10,-5,-1,4],[-3,-10,10,2,-5,-2],[-2,2,8,-5,6,3],[4,-4,-2,7,-5,8],[2,-9,-6,7,-8,2]],[[-9,-7,4,8,-7,1],[1,5,-4,1,5,-6],[-1,-1,-4,-6,-7,7],[-2,9,9,9,9,-8],[-8,-2,9,4,-1,-8],[9,7,7,-9,-2,10],[-8,3,-2,-2,-10,-3],[-2,-8,3,7,1,10],[-1,9,-7,5,6,5],[-9,-10,3,7,-10,10]],[[2,-9,-3,-1,8,-8],[-8,2,-10,-4,4,-7],[7,2,-10,5,10,-7],[3,-9,-7,-5,9,9],[-4,8,6,5,-3,3],[1,-5,9,6,-9,2],[2,-1,5,-10,-4,7],[8,-5,10,2,3,-4],[1,-4,-7,-6,-4,-1],[8,7,2,4,-5,10]],[[-7,9,-2,-4,-7,3],[7,-2,-8,-9,4,10],[10,-7,5,2,-10,3],[6,-6,8,-6,9,-5],[2,-3,1,-4,1,8],[7,-9,-1,-10,2,1],[-5,6,-4,1,6,-2],[-1,-8,8,-8,5,3],[-10,6,-8,3,-1,-9],[1,-3,-6,-3,-1,-7]],[[8,5,1,-3,10,-4],[-4,4,-7,2,-3,-2],[-10,-3,-8,2,-6,-1],[-5,-1,-2,3,-3,3],[2,-7,-8,1,5,-9],[-6,9,7,10,-6,7],[5,6,-9,-9,4,-5],[4,10,-1,2,-3,-1],[3,-4,-4,7,-1,1],[-3,2,-4,-10,2,-6]],[[3,4,1,8,-9,-4],[-1,6,5,-3,-6,6],[1,-8,9,10,4,-8],[9,10,6,1,-5,1],[-4,8,1,-8,1,-9],[-2,2,3,10,6,8],[-1,1,-7,6,9,1],[-8,-6,7,-7,4,-2],[9,-7,-1,9,7,8],[4,-5,-9,-7,-7,6]],[[-8,-2,2,9,7,8],[-2,-10,1,-3,5,10],[-6,9,-9,7,7,10],[-5,-3,-5,-10,2,-6],[-9,7,-8,-8,-5,-10],[-1,4,8,1,4,-6],[7,-4,6,-1,8,1],[-7,2,7,10,1,-7],[-9,2,2,-10,4,9],[5,-8,-2,-3,-9,2]]], dtype = "int64")#candidate|5194|(14, 10, 6)|const|int64
bop_5195 = relay.bitwise_xor(var_5193.astype('int64'), relay.reshape(const_5194.astype('int64'), relay.shape_of(var_5193))) # shape=(14, 10, 6)
output = bop_5195
output2 = bop_5195
func_5199 = relay.Function([var_5193,], output)
mod['func_5199'] = func_5199
mod = relay.transform.InferType()(mod)
var_5200 = relay.var("var_5200", dtype = "int64", shape = (14, 10, 6))#candidate|5200|(14, 10, 6)|var|int64
output = func_5199(var_5200)
func_5201 = relay.Function([var_5200], output)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_5218 = relay.TupleGetItem(func_4535_call(), 0)
call_5219 = relay.TupleGetItem(func_4537_call(), 0)
uop_5261 = relay.asinh(call_5218.astype('float64')) # shape=(14, 5, 8)
uop_5263 = relay.asinh(call_5219.astype('float64')) # shape=(14, 5, 8)
func_2745_call = mod.get_global_var('func_2745')
func_2746_call = mutated_mod.get_global_var('func_2746')
call_5264 = func_2745_call()
call_5265 = func_2745_call()
output = relay.Tuple([uop_5261,call_5264,])
output2 = relay.Tuple([uop_5263,call_5265,])
func_5276 = relay.Function([], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mutated_mod.get_global_var('func_5276')
call_5277 = func_5276_call()
output = call_5277
func_5278 = relay.Function([], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5341 = relay.var("var_5341", dtype = "float64", shape = (6, 6, 10))#candidate|5341|(6, 6, 10)|var|float64
uop_5342 = relay.asinh(var_5341.astype('float64')) # shape=(6, 6, 10)
uop_5352 = relay.atanh(uop_5342.astype('float32')) # shape=(6, 6, 10)
output = uop_5352
output2 = uop_5352
func_5364 = relay.Function([var_5341,], output)
mod['func_5364'] = func_5364
mod = relay.transform.InferType()(mod)
var_5365 = relay.var("var_5365", dtype = "float64", shape = (6, 6, 10))#candidate|5365|(6, 6, 10)|var|float64
output = func_5364(var_5365)
func_5366 = relay.Function([var_5365], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_5373 = relay.TupleGetItem(func_4643_call(), 0)
call_5374 = relay.TupleGetItem(func_4644_call(), 0)
func_3407_call = mod.get_global_var('func_3407')
func_3409_call = mutated_mod.get_global_var('func_3409')
call_5381 = func_3407_call()
call_5382 = func_3407_call()
func_3919_call = mod.get_global_var('func_3919')
func_3921_call = mutated_mod.get_global_var('func_3921')
call_5408 = func_3919_call()
call_5409 = func_3919_call()
uop_5419 = relay.log10(call_5408.astype('float32')) # shape=(3, 14, 9)
uop_5421 = relay.log10(call_5409.astype('float32')) # shape=(3, 14, 9)
output = relay.Tuple([call_5373,call_5381,uop_5419,])
output2 = relay.Tuple([call_5374,call_5382,uop_5421,])
func_5424 = relay.Function([], output)
mod['func_5424'] = func_5424
mod = relay.transform.InferType()(mod)
output = func_5424()
func_5425 = relay.Function([], output)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_5445 = relay.TupleGetItem(func_4643_call(), 0)
call_5446 = relay.TupleGetItem(func_4644_call(), 0)
output = call_5445
output2 = call_5446
func_5457 = relay.Function([], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
output = func_5457()
func_5458 = relay.Function([], output)
mutated_mod['func_5458'] = func_5458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5459 = relay.var("var_5459", dtype = "uint32", shape = (10, 14, 3))#candidate|5459|(10, 14, 3)|var|uint32
var_5460 = relay.var("var_5460", dtype = "uint32", shape = (10, 14, 3))#candidate|5460|(10, 14, 3)|var|uint32
bop_5461 = relay.not_equal(var_5459.astype('bool'), relay.reshape(var_5460.astype('bool'), relay.shape_of(var_5459))) # shape=(10, 14, 3)
output = relay.Tuple([bop_5461,])
output2 = relay.Tuple([bop_5461,])
F = relay.Function([var_5459,var_5460,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5459,var_5460,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_1459() -> Tensor[(11, 15, ?), int16] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 1), float32] */;
  %1 = sinh(%0) /* ty=Tensor[(11, 15, 1), float32] */;
  %2 = cast(%1, dtype="int16") /* ty=Tensor[(11, 15, 1), int16] */;
  %3 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 15, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 15, 1), float32] */, dtype="int16") /* ty=Tensor[(11, 15, 1), int16] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%4, %5) /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_5902() -> Tensor[(11, 15, ?), float64] {
  @func_3244() /* ty=Tensor[(11, 15, ?), float64] */
}

def @func_1382(%var_1370: Tensor[(5, 8, 2), float64], %var_1374: Tensor[(3584), int32]) -> (Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %6 = cast(%var_1370, dtype="float64") /* ty=Tensor[(5, 8, 2), float64] */;
  %7 = cast(%var_1374, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %8 = reshape(%7, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %9 = rsqrt(%6) /* ty=Tensor[(5, 8, 2), float64] */;
  %10 = @func_276(%8) /* ty=Tensor[(16, 16, 14), int32] */;
  (%9, %10, %var_1374)
}

def @func_4919() -> Tensor[(11, 15, ?), float32] {
  @func_3440() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_7017() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) {
  %11 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %14 = reshape(%12, newshape=[1, 3584]) /* ty=Tensor[(1, 3584), int32] */;
  %15 = reshape(%13, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %16 = @func_5327(%14, %15) /* ty=(Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) */;
  %17 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %18 = %11.0;
  %19 = %16.2;
  (%17, %18, %19, meta[relay.Constant][1] /* ty=Tensor[(3584), int32] */)
}

def @func_2974(%var_2897: Tensor[(8, 13, 11), int8], %var_2933: Tensor[(1815), int16], %var_2934: Tensor[(1, 2475), int16], %var_2935: Tensor[(325, 2), float32], %var_2950: Tensor[(286, 6), bool], %var_2956: Tensor[(3584), int32]) -> (Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) {
  %20 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %21 = cast(%var_2897, dtype="bool") /* ty=Tensor[(8, 13, 11), bool] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="bool") /* ty=Tensor[(8, 13, 11), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = cast(%var_2897, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
  %26 = cast(%var_2950, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %27 = reshape(%26, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), bool] */;
  %28 = @func_2319(%27) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) */;
  %29 = cast(%var_2956, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %30 = reshape(%29, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %31 = @func_2689(%30) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
  %32 = cast(%var_2933, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %33 = cast(%var_2933, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %34 = cast(%var_2934, dtype="int16") /* ty=Tensor[(1, 2475), int16] */;
  %35 = cast(%var_2935, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %36 = reshape(%33, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int16] */;
  %37 = reshape(%34, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int16] */;
  %38 = reshape(%35, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %39 = @func_2006(%36, %37, %38) /* ty=(Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %40 = %39.3;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(650), float32] */, dtype="bool") /* ty=Tensor[(650), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(1), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(650), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?), bool] */;
  %45 = not_equal(%23, %24) /* ty=Tensor[(8, 13, 11), bool] */;
  %46 = cos(%25) /* ty=Tensor[(8, 13, 11), float32] */;
  %47 = %28.0;
  %48 = %31.4;
  %49 = tan(%32) /* ty=Tensor[(1815), float32] */;
  %50 = less_equal(%43, %44) /* ty=Tensor[(650), bool] */;
  (%45, %46, %var_2934, %var_2935, %47, %var_2950, %48, %var_2956, %49, %50)
}

def @func_1667(%var_1652: Tensor[(80), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) {
  %51 = cast(%var_1652, dtype="float64") /* ty=Tensor[(80), float64] */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %53 = reshape(%51, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
  %54 = reshape(%52, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %55 = @func_1382(%53, %54) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %56 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %57 = %55.0;
  (%56, %57, %var_1652, meta[relay.Constant][3] /* ty=Tensor[(3584), int32] */)
}

def @func_6061() -> (Tensor[(11, 15, ?), int16],) {
  %58 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %59 = %58.0;
  (%59,)
}

def @func_9756() -> (Tensor[(13, 5, 4), float64], Tensor[(270, 2), float32]) {
  %60 = @func_8947() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) */;
  %61 = @func_6143() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) */;
  %62 = %60.0;
  %63 = %61.1;
  (%62, %63)
}

def @func_276(%var_270: Tensor[(16, 16, 14), int32]) -> Tensor[(16, 16, 14), int32] {
  %64 = cast(%var_270, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %65 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%66, %67) /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_4780(%var_4773: Tensor[(2, 6, 15), uint16]) -> (Tensor[(2, 6, 15), uint16],) {
  %68 = cast(%var_4773, dtype="uint16") /* ty=Tensor[(2, 6, 15), uint16] */;
  %69 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 6, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(2, 6, 15), uint16] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %72 = subtract(%70, %71) /* ty=Tensor[(2, 6, 15), uint16] */;
  (%72,)
}

def @func_8438() -> (Tensor[(11, 15, ?), int16],) {
  %73 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %74 = %73.0;
  (%74,)
}

def @func_1862(%var_1808: Tensor[(65, 10), float32]) -> (Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) {
  %75 = cast(%var_1808, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %76 = reshape(%75, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %77 = @func_334(%76) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %78 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %79 = %78.0;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %81 = log(%80) /* ty=Tensor[(11, 15, ?), float64] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %83 = %77.0;
  %84 = log2(%82) /* ty=Tensor[(11, 15, ?), float32] */;
  (%83, %var_1808, %84)
}

def @func_3816() -> (Tensor[(11, 15, ?), int16],) {
  %85 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %86 = %85.0;
  (%86,)
}

def @func_3848(%var_3840: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), float64],) {
  %87 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %88 = %87.1;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %90 = cast(%var_3840, dtype="float64") /* ty=Tensor[(11, 15, 2), float64] */;
  %91 = power(%89, %90) /* ty=Tensor[(11, 15, 2), float64] */;
  (%91,)
}

def @func_7357() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %92 = @func_6588() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %93 = %92.3;
  %94 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
  (%93, %94)
}

def @func_3637() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) {
  %95 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %96 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %97 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 132), int16] */, dtype="int16") /* ty=Tensor[(5, 132), int16] */;
  %98 = reshape(%97, newshape=[660]) /* ty=Tensor[(660), int16] */;
  %99 = @func_2505(%98) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
  %100 = %95.1;
  %101 = %96.0;
  %102 = %99.0;
  (%100, %101, %102, meta[relay.Constant][6] /* ty=Tensor[(5, 132), int16] */)
}

def @func_9303() -> (Tensor[(11, 15, ?), float32],) {
  %103 = @func_7727() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %104 = %103.0;
  (%104,)
}

def @func_2505(%var_2461: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) {
  %105 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %106 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %107 = %106.0;
  %108 = cast(%107, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %109 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%105, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %113 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %114 = cast(%var_2461, dtype="int16") /* ty=Tensor[(660), int16] */;
  %115 = reshape(%114, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int16] */;
  %116 = @func_2038(%115) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(11, 15, 4), float32] */;
  %119 = less(%110, %111) /* ty=Tensor[(11, 15, ?), bool] */;
  %120 = %112.1;
  %121 = %113.0;
  %122 = exp(%118) /* ty=Tensor[(11, 15, 4), float32] */;
  %123 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%119, %120, %var_2461, %121, %122, %123)
}

def @func_7977(%var_7968: Tensor[(1540), bool]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  %124 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %125 = cast(%var_7968, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %126 = reshape(%125, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %127 = %124.0;
  %128 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %129 = @func_2398(%126) /* ty=Tensor[(14, 10, 11), bool] */;
  (%127, %128, %129, %var_7968)
}

def @func_2569() -> Tensor[(8, 13, 11), int8] {
  %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
  %131 = log(%130) /* ty=Tensor[(8, 13, 11), float32] */;
  %132 = cast(%131, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
  %133 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(8, 13, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 13, 11), float32] */, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%134, %135) /* ty=Tensor[(8, 13, 11), int8] */
}

def @func_9158(%var_9120: Tensor[(2475), int16], %var_9121: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(4, 896), int32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32]) {
  %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(1815), int16] */, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %137 = cast(%var_9120, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %138 = cast(%var_9121, dtype="float32") /* ty=Tensor[(650), float32] */;
  %139 = reshape(%136, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %140 = reshape(%137, newshape=[2475]) /* ty=Tensor[(2475), int16] */;
  %141 = reshape(%138, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %142 = @func_5064(%139, %140, %141) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) */;
  %143 = @func_5149() /* ty=Tensor[(11, 15, ?), float32] */;
  %144 = %142.7;
  (%143, %144, meta[relay.Constant][8] /* ty=Tensor[(1815), int16] */, %var_9120, %var_9121)
}

def @func_7990() -> Tensor[(11, 15, ?), float32] {
  %145 = @func_5141() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %145.0
}

def @func_6228(%var_6204: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(1232), float64], Tensor[(11, 15, ?), float32], Tensor[(13, 5, 4), float64]) {
  %146 = cast(%var_6204, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %147 = reshape(%146, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %148 = @func_3515(%147) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %149 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %150 = %149.0;
  %151 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %152 = %151.0;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %154 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%150, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %157 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
  %158 = %148.0;
  %159 = floor_mod(%155, %156) /* ty=Tensor[(11, 15, ?), float32] */;
  %160 = %157.0;
  (%158, %var_6204, %159, %160)
}

def @func_6864() -> Tensor[(11, 15, ?), int16] {
  %161 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %161.0
}

def @func_3021() -> Tensor[(11, 15, ?), int16] {
  %162 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %162.0
}

def @main(%var_9825: Tensor[(8, 12, 9), int16], %var_9826: Tensor[(8, 12, 9), int16]) -> (Tensor[(8, 12, 9), bool],) {
  %163 = cast(%var_9826, dtype="bool") /* ty=Tensor[(8, 12, 9), bool] */;
  %164 = shape_of(%var_9825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%var_9825, dtype="bool") /* ty=Tensor[(8, 12, 9), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %167 = less(%165, %166) /* ty=Tensor[(8, 12, 9), bool] */;
  (%167,)
}

def @func_334(%var_330: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  %168 = cast(%var_330, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %169 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(13, 10, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 10, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %172 = floor_divide(%170, %171) /* ty=Tensor[(13, 10, 5), float32] */;
  (%172,)
}

def @func_8097(%var_8074: Tensor[(5, 132), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 132), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32]) {
  %173 = @func_6611() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %174 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %175 = %174.3;
  %176 = cast(%var_8074, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(2), int32] */;
  %178 = cast(%175, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %180 = cast(meta[relay.Constant][10] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %181 = reshape(%180, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %182 = @func_2721(%181) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %183 = %173.0;
  %184 = not_equal(%178, %179) /* ty=Tensor[(5, 132), bool] */;
  %185 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
  %186 = %182.1;
  (%183, %184, %185, %186, meta[relay.Constant][10] /* ty=Tensor[(540), float32] */)
}

def @func_3060() -> (Tensor[(11, 15, ?), int16],) {
  %187 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  (%187,)
}

def @func_7743(%var_7735: Tensor[(11, 15, 15), float32]) -> Tensor[(11, 15, 15), int64] {
  %188 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
  %189 = cast(%188, dtype="int64") /* ty=Tensor[(11, 15, ?), int64] */;
  %190 = cast(%var_7735, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
  bitwise_xor(%189, %190) /* ty=Tensor[(11, 15, 15), int64] */
}

def @func_6700() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %191 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %192 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %193 = @func_4124() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %194 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %195 = %191.0;
  %196 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %197 = %192.0;
  %198 = %193.1;
  (%194, %195, %196, %197, %198)
}

def @func_8740() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 14), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(3584), int32], Tensor[(11, 15, ?), int16]) {
  %199 = @func_8289() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) */;
  %200 = @func_4591() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %201 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
  %202 = @func_7017() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) */;
  %203 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %204 = %199.1;
  %205 = %200.1;
  %206 = %201.0;
  %207 = %202.3;
  %208 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  (%203, %204, %205, %206, %207, %208)
}

def @func_3043() -> (Tensor[(11, 15, ?), int16],) {
  %209 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %210 = %209.0;
  (%210,)
}

def @func_2378() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %211 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %212 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %213 = %211.1;
  %214 = %212.0;
  (%213, %214)
}

def @func_1736() -> (Tensor[(11, 15, ?), int16],) {
  %215 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%215,)
}

def @func_9234() -> (Tensor[(11, 15, 2), uint32], Tensor[(330, 1), int16], Tensor[(20, 4), float64], Tensor[(11, 15, 3584), uint8]) {
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(330, 1), int16] */, dtype="int16") /* ty=Tensor[(330, 1), int16] */;
  %217 = reshape(%216, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %218 = @func_4436(%217) /* ty=(Tensor[(11, 15, 2), uint32],) */;
  %219 = @func_7806() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %220 = %219.0;
  %221 = cast(meta[relay.Constant][12] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %222 = reshape(%221, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %223 = @func_1667(%222) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) */;
  %224 = %223.3;
  %225 = cast(%220, dtype="uint8") /* ty=Tensor[(11, 15, ?), uint8] */;
  %226 = cast(%224, dtype="uint8") /* ty=Tensor[(3584), uint8] */;
  %227 = %218.0;
  %228 = bitwise_xor(%225, %226) /* ty=Tensor[(11, 15, 3584), uint8] */;
  (%227, meta[relay.Constant][11] /* ty=Tensor[(330, 1), int16] */, meta[relay.Constant][12] /* ty=Tensor[(20, 4), float64] */, %228)
}

def @func_7640(%var_7608: Tensor[(3584), int32]) -> (Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) {
  %229 = @func_7582() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) */;
  %230 = %229.2;
  %231 = cast(%var_7608, dtype="int16") /* ty=Tensor[(3584), int16] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(1), int32] */;
  %233 = cast(%230, dtype="int16") /* ty=Tensor[(3584), int16] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?), int16] */;
  %235 = @func_7263() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) */;
  %236 = bitwise_xor(%233, %234) /* ty=Tensor[(3584), int16] */;
  %237 = %235.0;
  (%236, %237)
}

def @func_6179(%var_6158: Tensor[(330), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 2), float64], Tensor[(330), int16]) {
  %238 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %239 = cast(%var_6158, dtype="int16") /* ty=Tensor[(330), int16] */;
  %240 = reshape(%239, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %241 = @func_3848(%240) /* ty=(Tensor[(11, 15, 2), float64],) */;
  %242 = %238.0;
  %243 = %241.0;
  (%242, %243, %var_6158)
}

def @func_6349() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) {
  %244 = cast(meta[relay.Constant][13] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %245 = cast(meta[relay.Constant][14] /* ty=Tensor[(591360), bool] */, dtype="bool") /* ty=Tensor[(591360), bool] */;
  %246 = reshape(%244, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %247 = reshape(%245, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
  %248 = @func_5567(%246, %247) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
  %249 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %250 = %248.1;
  (%249, %250, meta[relay.Constant][13] /* ty=Tensor[(3584), int32] */, meta[relay.Constant][14] /* ty=Tensor[(591360), bool] */)
}

def @func_9816() -> (Tensor[(11, 15, ?), float32],) {
  %251 = @func_7806() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %252 = %251.0;
  (%252,)
}

def @func_3685() -> (Tensor[(11, 15, ?), float32],) {
  %253 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %254 = %253.0;
  (%254,)
}

def @func_3894(%var_3886: Tensor[(3584), int32]) -> (Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %255 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %256 = cast(%var_3886, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %257 = reshape(%256, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %258 = %255.0;
  %259 = @func_276(%257) /* ty=Tensor[(16, 16, 14), int32] */;
  (%258, %259, %var_3886)
}

def @func_5518() -> Tensor[(11, 15, ?), float32] {
  %260 = @func_5272() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %260.1
}

def @func_5149() -> Tensor[(11, 15, ?), float32] {
  %261 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %261.0
}

def @func_6046() -> Tensor[(11, 15, ?), int16] {
  @func_5008() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_9378(%var_9355: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 3584), float64], Tensor[(3584), int32], Tensor[(3360, 176), bool]) {
  %262 = cast(%var_9355, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %263 = cast(meta[relay.Constant][15] /* ty=Tensor[(3360, 176), bool] */, dtype="bool") /* ty=Tensor[(3360, 176), bool] */;
  %264 = reshape(%262, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %265 = reshape(%263, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
  %266 = @func_5567(%264, %265) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
  %267 = @func_6265() /* ty=Tensor[(11, 15, ?), float32] */;
  %268 = %266.0;
  (%267, %268, %var_9355, meta[relay.Constant][15] /* ty=Tensor[(3360, 176), bool] */)
}

def @func_8617(%var_8610: Tensor[(8, 16, 12), int16], %var_8611: Tensor[(8, 16, 12), int16]) -> (Tensor[(8, 16, 12), int16],) {
  %269 = cast(%var_8611, dtype="int16") /* ty=Tensor[(8, 16, 12), int16] */;
  %270 = shape_of(%var_8610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_8610, dtype="int16") /* ty=Tensor[(8, 16, 12), int16] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %273 = logical_xor(%271, %272) /* ty=Tensor[(8, 16, 12), int16] */;
  (%273,)
}

def @func_9723() -> (Tensor[(11, 15, ?), float32],) {
  %274 = @func_5141() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %275 = %274.0;
  (%275,)
}

def @func_4124() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %276 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %277 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  (%276, %277)
}

def @func_2814() -> Tensor[(11, 15, ?), float32] {
  %278 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %278.1
}

def @func_5635(%var_5628: Tensor[(11, 15, 540), float32]) -> (Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) {
  %279 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %280 = %279.2;
  %281 = cast(%var_5628, dtype="bool") /* ty=Tensor[(11, 15, 540), bool] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="bool") /* ty=Tensor[(11, 15, 540), bool] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %285 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %286 = greater(%283, %284) /* ty=Tensor[(11, 15, 540), bool] */;
  %287 = %285.0;
  (%286, %287)
}

def @func_7263() -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) {
  %288 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %289 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
  %291 = cast(%289, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
  %292 = @func_7085() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %293 = %288.1;
  %294 = acos(%290) /* ty=Tensor[(8, 13, 11), float32] */;
  %295 = log2(%291) /* ty=Tensor[(8, 13, 11), float32] */;
  %296 = %292.1;
  (%293, %294, %295, %296)
}

def @func_5008() -> Tensor[(11, 15, ?), int16] {
  %297 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %297.0
}

def @func_4591() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %298 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %299 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %300 = %298.0;
  (%299, %300)
}

def @func_3611(%var_3546: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) {
  %301 = cast(%var_3546, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %302 = reshape(%301, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %303 = @func_3515(%302) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %304 = %303.0;
  %305 = cast(%var_3546, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="bool") /* ty=Tensor[(7, 11, 16), bool] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %309 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  %310 = cast(%var_3546, dtype="int32") /* ty=Tensor[(1232), int32] */;
  %311 = cast(%309, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %312 = @func_3321() /* ty=(Tensor[(11, 15, ?), int8],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %315 = not_equal(%307, %308) /* ty=Tensor[(7, 11, 16), bool] */;
  %316 = minimum(%310, %311) /* ty=Tensor[(11, 15, 1232), int32] */;
  %317 = cos(%314) /* ty=Tensor[(11, 15, ?), float64] */;
  (%315, %316, %317)
}

def @func_5230() -> (Tensor[(11, 15, ?), int16],) {
  %318 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %319 = %318.0;
  (%319,)
}

def @func_7521() -> Tensor[(11, 15, ?), int16] {
  %320 = @func_6611() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %320.0
}

def @func_5454() -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) {
  %321 = cast(meta[relay.Constant][16] /* ty=Tensor[(1540), bool] */, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %322 = reshape(%321, newshape=[1540]) /* ty=Tensor[(1540), bool] */;
  %323 = @func_4378(%322) /* ty=(Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) */;
  %324 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %325 = %323.3;
  (%324, %325, meta[relay.Constant][16] /* ty=Tensor[(1540), bool] */)
}

def @func_2038(%var_2023: Tensor[(11, 15, 4), int16]) -> (Tensor[(11, 15, 4), bool],) {
  %326 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %329 = cast(%var_2023, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %330 = less(%328, %329) /* ty=Tensor[(11, 15, 4), bool] */;
  (%330,)
}

def @func_9595(%var_9575: Tensor[(3584), int32], %var_9584: Tensor[(360, 1), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(3584), int32], Tensor[(3584), bool], Tensor[(6, 12, 5), int16], Tensor[(360, 1), int16], Tensor[(11, 15, ?), int16]) {
  %331 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %332 = cast(%var_9575, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %333 = reshape(%332, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %334 = @func_7640(%333) /* ty=(Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) */;
  %335 = %334.0;
  %336 = cast(meta[relay.Constant][17] /* ty=Tensor[(3584), int16] */, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(1), int32] */;
  %338 = cast(%335, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?), bool] */;
  %340 = cast(%var_9584, dtype="int16") /* ty=Tensor[(360, 1), int16] */;
  %341 = reshape(%340, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), int16] */;
  %342 = @func_8524(%341) /* ty=(Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) */;
  %343 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %344 = %331.0;
  %345 = equal(%338, %339) /* ty=Tensor[(3584), bool] */;
  %346 = %342.0;
  %347 = %343.0;
  (%344, %var_9575, %345, %346, %var_9584, %347)
}

def @func_7582() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) {
  %348 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %349 = cast(meta[relay.Constant][18] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %350 = reshape(%349, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %351 = @func_5195(%350) /* ty=(Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) */;
  %352 = %348.0;
  %353 = %351.0;
  (%352, %353, meta[relay.Constant][18] /* ty=Tensor[(3584), int32] */)
}

def @func_3483(%var_3471: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) {
  %354 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %355 = cast(%var_3471, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %356 = reshape(%355, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
  %357 = @func_3265(%356) /* ty=(Tensor[(11, 15, 7), float64],) */;
  %358 = %354.1;
  %359 = %357.0;
  (%358, %359, %var_3471)
}

def @func_8500() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %360 = @func_5272() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %361 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %362 = @func_5008() /* ty=Tensor[(11, 15, ?), int16] */;
  %363 = %360.0;
  %364 = %361.0;
  (%362, %363, %364)
}

def @func_4293(%var_4171: Tensor[(3584), int32], %var_4219: Tensor[(540), float32], %var_4229: Tensor[(616, 2), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(5, 8, 2), float64], Tensor[(3584), int32], Tensor[(11, 15, 80), uint8], Tensor[(13, 10, 5), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32], Tensor[(616, 2), int64], Tensor[(616, 2), int8], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), uint32]) {
  %365 = cast(meta[relay.Constant][19] /* ty=Tensor[(616, 2), float64] */, dtype="float64") /* ty=Tensor[(616, 2), float64] */;
  %366 = reshape(%365, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %367 = @func_3515(%366) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %368 = cast(meta[relay.Constant][20] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %369 = cast(%var_4171, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %370 = reshape(%368, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
  %371 = reshape(%369, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %372 = @func_1382(%370, %371) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %373 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %374 = %373.0;
  %375 = cast(%374, dtype="uint8") /* ty=Tensor[(11, 15, ?), uint8] */;
  %376 = cast(meta[relay.Constant][20] /* ty=Tensor[(80), float64] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %377 = cast(%var_4171, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %378 = reshape(%377, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %379 = @func_2689(%378) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
  %380 = cast(meta[relay.Constant][19] /* ty=Tensor[(616, 2), float64] */, dtype="float64") /* ty=Tensor[(616, 2), float64] */;
  %381 = acosh(%380) /* ty=Tensor[(616, 2), float64] */;
  %382 = cast(%var_4229, dtype="int64") /* ty=Tensor[(616, 2), int64] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(2), int32] */;
  %384 = cast(%381, dtype="int64") /* ty=Tensor[(616, 2), int64] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %386 = cast(%var_4229, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
  %387 = shape_of(%381, dtype="int32") /* ty=Tensor[(2), int32] */;
  %388 = cast(%381, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %390 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %391 = cast(%var_4219, dtype="float32") /* ty=Tensor[(540), float32] */;
  %392 = reshape(%391, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %393 = @func_2721(%392) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %394 = %393.1;
  %395 = cast(%394, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %396 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%374, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %399 = %367.0;
  %400 = %372.0;
  %401 = right_shift(%375, %376) /* ty=Tensor[(11, 15, 80), uint8] */;
  %402 = %379.2;
  %403 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
  %404 = left_shift(%384, %385) /* ty=Tensor[(616, 2), int64] */;
  %405 = add(%388, %389) /* ty=Tensor[(616, 2), int8] */;
  %406 = %390.0;
  %407 = subtract(%397, %398) /* ty=Tensor[(11, 15, ?), uint32] */;
  (%399, %400, %var_4171, %401, %402, %403, %var_4219, %404, %405, %406, %407)
}

def @func_5327(%var_5302: Tensor[(1, 3584), int32], %var_5307: Tensor[(16, 16, 14), int32]) -> (Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) {
  %408 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %409 = cast(%var_5302, dtype="int32") /* ty=Tensor[(1, 3584), int32] */;
  %410 = reshape(%409, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %411 = @func_276(%410) /* ty=Tensor[(16, 16, 14), int32] */;
  %412 = cast(%var_5307, dtype="uint8") /* ty=Tensor[(16, 16, 14), uint8] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="uint8") /* ty=Tensor[(16, 16, 14), uint8] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %416 = @func_3773() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */;
  %417 = %408.3;
  %418 = bitwise_and(%414, %415) /* ty=Tensor[(16, 16, 14), uint8] */;
  %419 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %420 = %416.0;
  (%417, %var_5302, %418, %419, %420)
}

def @func_8524(%var_8505: Tensor[(6, 12, 5), int16]) -> (Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) {
  %421 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 12, 5), int16] */, dtype="int16") /* ty=Tensor[(6, 12, 5), int16] */;
  %422 = shape_of(%var_8505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_8505, dtype="int16") /* ty=Tensor[(6, 12, 5), int16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %425 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %426 = cast(%var_8505, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  %427 = left_shift(%423, %424) /* ty=Tensor[(6, 12, 5), int16] */;
  %428 = %425.1;
  %429 = log10(%426) /* ty=Tensor[(6, 12, 5), float32] */;
  (%427, %428, %429)
}

def @func_9669(%var_9630: Tensor[(11, 15, 16), int16], %var_9637: Tensor[(11, 15, 16), bool]) -> (Tensor[(11, 15, 16), bool], Tensor[(11, 15, ?), int16], Tensor[(13, 5, 4), float64]) {
  %430 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %431 = %430.1;
  %432 = cast(%431, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %433 = cast(%var_9630, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %434 = less_equal(%432, %433) /* ty=Tensor[(11, 15, 16), bool] */;
  %435 = cast(%var_9637, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %439 = @func_4124() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %440 = logical_or(%437, %438) /* ty=Tensor[(11, 15, 16), bool] */;
  %441 = %439.1;
  %442 = @func_6452() /* ty=Tensor[(13, 5, 4), float64] */;
  (%440, %441, %442)
}

def @func_8218(%var_8183: Tensor[(1815), int16], %var_8185: Tensor[(650), float32], %var_8193: Tensor[(1, 1232), float64]) -> (Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) {
  %443 = cast(%var_8183, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %444 = cast(meta[relay.Constant][22] /* ty=Tensor[(2475), int16] */, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %445 = cast(%var_8185, dtype="float32") /* ty=Tensor[(650), float32] */;
  %446 = reshape(%443, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %447 = reshape(%444, newshape=[2475]) /* ty=Tensor[(2475), int16] */;
  %448 = reshape(%445, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %449 = @func_5064(%446, %447, %448) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) */;
  %450 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %451 = cast(%var_8183, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %452 = cast(%450, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %453 = cast(%var_8193, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %454 = reshape(%453, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %455 = @func_3611(%454) /* ty=(Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) */;
  %456 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
  %457 = cast(%var_8183, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %458 = cast(%450, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %459 = %449.8;
  %460 = equal(%451, %452) /* ty=Tensor[(11, 15, 1815), bool] */;
  %461 = %455.0;
  %462 = %456.1;
  %463 = not_equal(%457, %458) /* ty=Tensor[(11, 15, 1815), bool] */;
  (%459, meta[relay.Constant][22] /* ty=Tensor[(2475), int16] */, %var_8185, %460, %461, %var_8193, %462, %463)
}

def @func_1600(%var_1584: Tensor[(11, 15, 7), int16]) -> (Tensor[(11, 15, 7), uint16],) {
  %464 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %465 = cast(%464, dtype="uint16") /* ty=Tensor[(11, 15, ?), uint16] */;
  %466 = cast(%var_1584, dtype="uint16") /* ty=Tensor[(11, 15, 7), uint16] */;
  %467 = bitwise_or(%465, %466) /* ty=Tensor[(11, 15, 7), uint16] */;
  (%467,)
}

def @func_3134(%var_3132: Tensor[(270, 2), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) {
  %468 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %469 = cast(%var_3132, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %470 = reshape(%469, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %471 = @func_2721(%470) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %472 = %468.1;
  %473 = %471.1;
  (%472, %473, %var_3132)
}

def @func_4378(%var_4337: Tensor[(1540), bool]) -> (Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) {
  %474 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  %475 = cast(%474, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %476 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 15, 12), int16] */, dtype="float32") /* ty=Tensor[(11, 15, 12), float32] */;
  %477 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 15, 12), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 12), bool] */;
  %478 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 15, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 15, 12), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 12), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %481 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %482 = cast(meta[relay.Constant][25] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %483 = reshape(%482, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
  %484 = @func_3265(%483) /* ty=(Tensor[(11, 15, 7), float64],) */;
  %485 = cast(%var_4337, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %486 = reshape(%485, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %487 = @func_2398(%486) /* ty=Tensor[(14, 10, 11), bool] */;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %489 = cast(%var_4337, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %490 = reshape(%489, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %491 = mod(%475, %476) /* ty=Tensor[(11, 15, 12), float32] */;
  %492 = greater_equal(%479, %480) /* ty=Tensor[(11, 15, 12), bool] */;
  %493 = %481.0;
  %494 = %484.0;
  %495 = sigmoid(%488) /* ty=Tensor[(14, 10, 11), float32] */;
  %496 = @func_2398(%490) /* ty=Tensor[(14, 10, 11), bool] */;
  (%491, %492, %var_4337, %493, %494, meta[relay.Constant][25] /* ty=Tensor[(1155), float64] */, %495, %496)
}

def @func_6435() -> Tensor[(11, 15, ?), float32] {
  %497 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %497.0
}

def @func_4753() -> (Tensor[(11, 15, ?), int16],) {
  %498 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %499 = %498.0;
  (%499,)
}

def @func_3265(%var_3249: Tensor[(11, 15, 7), float64]) -> (Tensor[(11, 15, 7), float64],) {
  %500 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %502 = cast(%var_3249, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
  %503 = power(%501, %502) /* ty=Tensor[(11, 15, 7), float64] */;
  %504 = cast(%var_3249, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%503, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %508 = mod(%506, %507) /* ty=Tensor[(11, 15, 7), float64] */;
  (%508,)
}

def @func_3515(%var_3510: Tensor[(7, 11, 16), float64]) -> (Tensor[(7, 11, 16), float64],) {
  %509 = cast(%var_3510, dtype="float64") /* ty=Tensor[(7, 11, 16), float64] */;
  %510 = acosh(%509) /* ty=Tensor[(7, 11, 16), float64] */;
  (%510,)
}

def @func_5141() -> (Tensor[(11, 15, ?), float32],) {
  %511 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %512 = %511.0;
  (%512,)
}

def @func_5966(%var_5950: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(660), int16]) {
  %513 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %514 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %515 = cast(%var_5950, dtype="int16") /* ty=Tensor[(660), int16] */;
  %516 = reshape(%515, newshape=[660]) /* ty=Tensor[(660), int16] */;
  %517 = @func_2505(%516) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
  %518 = %513.0;
  %519 = %514.0;
  %520 = %517.2;
  (%518, %519, %520, %var_5950)
}

def @func_9461(%var_9456: Tensor[(89100), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 540), bool], Tensor[(89100), float32]) {
  %521 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %522 = cast(%var_9456, dtype="float32") /* ty=Tensor[(89100), float32] */;
  %523 = reshape(%522, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
  %524 = @func_5635(%523) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
  %525 = %521.0;
  %526 = %524.0;
  (%525, %526, %var_9456)
}

def @func_3964() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 13, 12), bool], Tensor[(1716), bool]) {
  %527 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %528 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %529 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %530 = cast(meta[relay.Constant][26] /* ty=Tensor[(1716), bool] */, dtype="bool") /* ty=Tensor[(1716), bool] */;
  %531 = reshape(%530, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), bool] */;
  %532 = @func_2319(%531) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) */;
  %533 = %527.1;
  %534 = %528.1;
  %535 = %529.0;
  %536 = %532.0;
  (%533, %534, %535, %536, meta[relay.Constant][26] /* ty=Tensor[(1716), bool] */)
}

def @func_5105() -> (Tensor[(13, 5, 4), float64],) {
  %537 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %538 = %537.0;
  (%538,)
}

def @func_5581() -> (Tensor[(11, 15, ?), int16],) {
  %539 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %540 = %539.0;
  (%540,)
}

def @func_4952() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
  %541 = @func_4753() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %542 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %543 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %544 = %541.0;
  %545 = %542.0;
  %546 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  %547 = %543.0;
  (%544, %545, %546, %547)
}

def @func_8042() -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) {
  %548 = @func_6864() /* ty=Tensor[(11, 15, ?), int16] */;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %550 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %551 = acos(%549) /* ty=Tensor[(11, 15, ?), float64] */;
  %552 = %550.0;
  (%551, %552)
}

def @func_4558(%var_4548: Tensor[(14, 16, 6), float64]) -> (Tensor[(14, 16, 6), float64], Tensor[(11, 15, ?), float32]) {
  %553 = cast(%var_4548, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
  %554 = rsqrt(%553) /* ty=Tensor[(14, 16, 6), float64] */;
  %555 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
  (%554, %555)
}

def @func_4911() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8]) {
  %556 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %557 = %556.0;
  %558 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  (%557, %558)
}

def @func_7806() -> (Tensor[(11, 15, ?), float32],) {
  %559 = @func_4952() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) */;
  %560 = %559.3;
  (%560,)
}

def @func_8947() -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) {
  %561 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
  %562 = @func_8042() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) */;
  %563 = %561.0;
  %564 = %562.0;
  (%563, %564)
}

def @func_4017(%var_3989: Tensor[(2475), int16], %var_3990: Tensor[(650), float32], %var_4015: Tensor[(660), int16]) -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int8], Tensor[(13, 10, 5), float32], Tensor[(605, 3), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, ?), int16], Tensor[(660), int16]) {
  %565 = @func_3321() /* ty=(Tensor[(11, 15, ?), int8],) */;
  %566 = cast(meta[relay.Constant][27] /* ty=Tensor[(605, 3), int16] */, dtype="int16") /* ty=Tensor[(605, 3), int16] */;
  %567 = cast(%var_3989, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %568 = cast(%var_3990, dtype="float32") /* ty=Tensor[(650), float32] */;
  %569 = reshape(%566, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int16] */;
  %570 = reshape(%567, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int16] */;
  %571 = reshape(%568, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %572 = @func_2006(%569, %570, %571) /* ty=(Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %573 = cast(%var_4015, dtype="int16") /* ty=Tensor[(660), int16] */;
  %574 = reshape(%573, newshape=[660]) /* ty=Tensor[(660), int16] */;
  %575 = @func_2505(%574) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
  %576 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %577 = %565.0;
  %578 = %572.2;
  %579 = %575.3;
  (%576, %577, %578, meta[relay.Constant][27] /* ty=Tensor[(605, 3), int16] */, %var_3989, %var_3990, %579, %var_4015)
}

def @func_3321() -> (Tensor[(11, 15, ?), int8],) {
  %580 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %581 = %580.0;
  %582 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="int8") /* ty=Tensor[(11, 15, ?), int8] */;
  %585 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%581, dtype="int8") /* ty=Tensor[(11, 15, ?), int8] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %588 = bitwise_and(%586, %587) /* ty=Tensor[(11, 15, ?), int8] */;
  (%588,)
}

def @func_8317() -> Tensor[(11, 15, ?), int16] {
  @func_3021() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_6452() -> Tensor[(13, 5, 4), float64] {
  %589 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
  %589.0
}

def @func_6936(%var_6922: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(1155), float64], Tensor[(11, 15, ?), int16]) {
  %590 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %591 = cast(%var_6922, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %592 = reshape(%591, newshape=[1155]) /* ty=Tensor[(1155), float64] */;
  %593 = @func_3483(%592) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) */;
  %594 = %590.1;
  %595 = %593.0;
  %596 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%594, %595, %var_6922, %596)
}

def @func_6265() -> Tensor[(11, 15, ?), float32] {
  @func_3440() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_5064(%var_5047: Tensor[(1815), int16], %var_5048: Tensor[(2475), int16], %var_5049: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) {
  %597 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %598 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %599 = %598.1;
  %600 = cast(%599, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
  %601 = cast(%var_5047, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %602 = cast(%var_5048, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %603 = cast(%var_5049, dtype="float32") /* ty=Tensor[(650), float32] */;
  %604 = cast(meta[relay.Constant][28] /* ty=Tensor[(1716), bool] */, dtype="bool") /* ty=Tensor[(1716), bool] */;
  %605 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
  %606 = reshape(%600, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), int8] */;
  %607 = reshape(%601, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %608 = reshape(%602, newshape=[1, 2475]) /* ty=Tensor[(1, 2475), int16] */;
  %609 = reshape(%603, newshape=[325, 2]) /* ty=Tensor[(325, 2), float32] */;
  %610 = reshape(%604, newshape=[286, 6]) /* ty=Tensor[(286, 6), bool] */;
  %611 = reshape(%605, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %612 = @func_2974(%606, %607, %608, %609, %610, %611) /* ty=(Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) */;
  %613 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
  %614 = reshape(%613, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %615 = @func_3894(%614) /* ty=(Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %616 = %597.0;
  %617 = %612.3;
  %618 = %615.2;
  (%616, %599, %617, %var_5047, %var_5048, %var_5049, meta[relay.Constant][28] /* ty=Tensor[(1716), bool] */, meta[relay.Constant][29] /* ty=Tensor[(4, 896), int32] */, %618)
}

def @func_3773() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  %619 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %620 = cast(meta[relay.Constant][30] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %621 = cast(meta[relay.Constant][30] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %622 = reshape(%620, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float32] */;
  %623 = reshape(%621, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float32] */;
  %624 = @func_3167(%622, %623) /* ty=(Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) */;
  %625 = cast(meta[relay.Constant][31] /* ty=Tensor[(1540), bool] */, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %626 = reshape(%625, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %627 = %619.0;
  %628 = %624.1;
  %629 = @func_2398(%626) /* ty=Tensor[(14, 10, 11), bool] */;
  (%627, %628, meta[relay.Constant][30] /* ty=Tensor[(135, 3), float32] */, %629, meta[relay.Constant][31] /* ty=Tensor[(1540), bool] */)
}

def @func_4047() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %630 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %633 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %634 = erf(%632) /* ty=Tensor[(11, 15, ?), float32] */;
  %635 = %633.0;
  (%634, %635)
}

def @func_6465() -> Tensor[(11, 15, ?), int16] {
  %636 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %636.0
}

def @func_7666() -> (Tensor[(8, 13, 11), int8],) {
  %637 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  (%637,)
}

def @func_9482() -> (Tensor[(11, 15, ?), float32],) {
  %638 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %639 = %638.0;
  (%639,)
}

def @func_9510(%var_9499: Tensor[(4, 13, 11), float32]) -> (Tensor[(4, 13, 11), float32], Tensor[(11, 15, ?), int16]) {
  %640 = cast(%var_9499, dtype="float32") /* ty=Tensor[(4, 13, 11), float32] */;
  %641 = asinh(%640) /* ty=Tensor[(4, 13, 11), float32] */;
  %642 = @func_6864() /* ty=Tensor[(11, 15, ?), int16] */;
  (%641, %642)
}

def @func_3293() -> (Tensor[(11, 15, ?), float32],) {
  %643 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %645 = sqrt(%644) /* ty=Tensor[(11, 15, ?), float32] */;
  (%645,)
}

def @func_1764() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %646 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %647 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %648 = %646.0;
  %649 = %647.0;
  (%648, %649)
}

def @func_5383() -> (Tensor[(11, 15, ?), float64],) {
  %650 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %651 = %650.3;
  (%651,)
}

def @func_8289() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) {
  %652 = @func_6061() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %653 = @func_7582() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) */;
  %654 = %652.0;
  %655 = %653.1;
  (%654, %655)
}

def @func_7085() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %656 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %657 = @func_6435() /* ty=Tensor[(11, 15, ?), float32] */;
  %658 = %656.0;
  (%657, %658)
}

def @func_9270() -> (Tensor[(11, 15, ?), float32],) {
  %659 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %660 = %659.0;
  (%660,)
}

def @func_9324() -> Tensor[(11, 15, ?), int16] {
  %661 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %661.0
}

def @func_7915(%var_7875: Tensor[(80), float64]) -> (Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) {
  %662 = cast(meta[relay.Constant][32] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %663 = reshape(%662, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
  %664 = @func_3265(%663) /* ty=(Tensor[(11, 15, 7), float64],) */;
  %665 = cast(meta[relay.Constant][32] /* ty=Tensor[(1155), float64] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %666 = cast(meta[relay.Constant][33] /* ty=Tensor[(224), uint8] */, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %667 = cast(meta[relay.Constant][33] /* ty=Tensor[(224), uint8] */, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %668 = reshape(%666, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), uint8] */;
  %669 = reshape(%667, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), uint8] */;
  %670 = cast(meta[relay.Constant][34] /* ty=Tensor[(2475), float32] */, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %671 = reshape(%670, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %672 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
  %673 = %672.2;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %675 = tan(%674) /* ty=Tensor[(3584), float64] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(1), int32] */;
  %678 = cast(%675, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?), bool] */;
  %680 = less(%678, %679) /* ty=Tensor[(3584), bool] */;
  %681 = cast(meta[relay.Constant][35] /* ty=Tensor[(3584), bool] */, dtype="int64") /* ty=Tensor[(3584), int64] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(1), int32] */;
  %683 = cast(%680, dtype="int64") /* ty=Tensor[(3584), int64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?), int64] */;
  %685 = cast(%var_7875, dtype="float64") /* ty=Tensor[(80), float64] */;
  %686 = cast(%675, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %687 = reshape(%685, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
  %688 = reshape(%686, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %689 = @func_1382(%687, %688) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %690 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %691 = cast(%675, dtype="uint32") /* ty=Tensor[(3584), uint32] */;
  %692 = cast(%690, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %693 = bitwise_or(%691, %692) /* ty=Tensor[(11, 15, 3584), uint32] */;
  %694 = cast(%693, dtype="uint32") /* ty=Tensor[(11, 15, 3584), uint32] */;
  %695 = cast(%673, dtype="uint32") /* ty=Tensor[(3584), uint32] */;
  %696 = cast(%675, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %697 = cast(%675, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %698 = reshape(%696, newshape=[1, 3584]) /* ty=Tensor[(1, 3584), int32] */;
  %699 = reshape(%697, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %700 = @func_5327(%698, %699) /* ty=(Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) */;
  %701 = cast(meta[relay.Constant][36] /* ty=Tensor[(89100), float32] */, dtype="float32") /* ty=Tensor[(89100), float32] */;
  %702 = reshape(%701, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
  %703 = @func_5635(%702) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %705 = reshape(%704, newshape=[65, 10]) /* ty=Tensor[(65, 10), float32] */;
  %706 = @func_1862(%705) /* ty=(Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) */;
  %707 = %664.0;
  %708 = sigmoid(%665) /* ty=Tensor[(1155), float32] */;
  %709 = @func_4616(%668, %669) /* ty=Tensor[(16, 2, 7), bool] */;
  %710 = @func_7743(%671) /* ty=Tensor[(11, 15, 15), int64] */;
  %711 = bitwise_and(%683, %684) /* ty=Tensor[(3584), int64] */;
  %712 = %689.1;
  %713 = right_shift(%694, %695) /* ty=Tensor[(11, 15, 3584), uint32] */;
  %714 = %700.2;
  %715 = %703.1;
  %716 = %706.1;
  (%707, %708, %709, meta[relay.Constant][33] /* ty=Tensor[(224), uint8] */, %710, meta[relay.Constant][34] /* ty=Tensor[(2475), float32] */, %711, %712, %var_7875, %713, %714, %715, meta[relay.Constant][36] /* ty=Tensor[(89100), float32] */, %716, meta[relay.Constant][37] /* ty=Tensor[(650), float32] */)
}

def @func_5567(%var_5530: Tensor[(3584), int32], %var_5554: Tensor[(11, 15, 3584), bool]) -> (Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) {
  %717 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %718 = %717.0;
  %719 = cast(%var_5530, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %720 = cast(%718, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %721 = not_equal(%719, %720) /* ty=Tensor[(11, 15, 3584), bool] */;
  %722 = cast(%var_5554, dtype="float64") /* ty=Tensor[(11, 15, 3584), float64] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="float64") /* ty=Tensor[(11, 15, 3584), float64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %726 = cast(%var_5530, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %727 = reshape(%726, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %728 = @func_276(%727) /* ty=Tensor[(16, 16, 14), int32] */;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %730 = divide(%724, %725) /* ty=Tensor[(11, 15, 3584), float64] */;
  %731 = sigmoid(%729) /* ty=Tensor[(16, 16, 14), float64] */;
  (%730, %731)
}

def @func_2006(%var_1976: Tensor[(11, 15, 11), int16], %var_1986: Tensor[(11, 15, 15), int16], %var_1999: Tensor[(650), float32]) -> (Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  %732 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %735 = cast(%var_1976, dtype="int32") /* ty=Tensor[(11, 15, 11), int32] */;
  %736 = cast(%733, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %737 = cast(%var_1986, dtype="int32") /* ty=Tensor[(11, 15, 15), int32] */;
  %738 = cast(%var_1999, dtype="float32") /* ty=Tensor[(650), float32] */;
  %739 = reshape(%738, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %740 = @func_334(%739) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %741 = logical_xor(%734, %735) /* ty=Tensor[(11, 15, 11), int32] */;
  %742 = logical_xor(%736, %737) /* ty=Tensor[(11, 15, 15), int32] */;
  %743 = %740.0;
  (%741, %742, %743, %var_1999)
}

def @func_8411() -> (Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) {
  %744 = cast(meta[relay.Constant][38] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %745 = reshape(%744, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %746 = @func_7915(%745) /* ty=(Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) */;
  %747 = @func_6452() /* ty=Tensor[(13, 5, 4), float64] */;
  %748 = %746.5;
  (%747, %748, meta[relay.Constant][38] /* ty=Tensor[(40, 2), float64] */)
}

def @func_6533(%var_6527: Tensor[(128, 28), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(128, 28), int32], Tensor[(591360), bool]) {
  %749 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
  %750 = cast(%var_6527, dtype="int32") /* ty=Tensor[(128, 28), int32] */;
  %751 = cast(meta[relay.Constant][39] /* ty=Tensor[(591360), bool] */, dtype="bool") /* ty=Tensor[(591360), bool] */;
  %752 = reshape(%750, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %753 = reshape(%751, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
  %754 = @func_5567(%752, %753) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
  %755 = %749.0;
  %756 = %754.1;
  (%755, %756, %var_6527, meta[relay.Constant][39] /* ty=Tensor[(591360), bool] */)
}

def @func_6588() -> (Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %757 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
  %758 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %759 = @func_4919() /* ty=Tensor[(11, 15, ?), float32] */;
  %760 = %757.2;
  %761 = %758.0;
  %762 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
  %763 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  (%759, %760, %761, %762, %763)
}

def @func_5272() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %764 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %765 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %766 = %764.0;
  %767 = %765.0;
  (%766, %767)
}

def @func_2288() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %768 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %771 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %772 = sin(%770) /* ty=Tensor[(11, 15, ?), float32] */;
  %773 = %771.1;
  (%772, %773)
}

def @func_5410(%var_5402: Tensor[(15, 9, 8), int8]) -> (Tensor[(15, 9, 8), int8],) {
  %774 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 9, 8), int8] */, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %775 = cast(%var_5402, dtype="int8") /* ty=Tensor[(15, 9, 8), int8] */;
  %776 = bitwise_and(%774, %775) /* ty=Tensor[(15, 9, 8), int8] */;
  (%776,)
}

def @func_5085(%var_5079: Tensor[(1, 1232), float64]) -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64], Tensor[(1, 1232), float64]) {
  %777 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %778 = cast(%var_5079, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %779 = reshape(%778, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %780 = @func_3611(%779) /* ty=(Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) */;
  %781 = %777.0;
  %782 = %780.2;
  (%781, %782, %var_5079)
}

def @func_5294() -> Tensor[(11, 15, ?), int16] {
  @func_3021() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_3167(%var_3149: Tensor[(5, 9, 9), float32], %var_3150: Tensor[(5, 9, 9), float32]) -> (Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) {
  %783 = cast(%var_3150, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %784 = shape_of(%var_3149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_3149, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %787 = floor_mod(%785, %786) /* ty=Tensor[(5, 9, 9), float32] */;
  %788 = cast(%var_3150, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%787, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %792 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
  %793 = reshape(%792, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %794 = logical_or(%790, %791) /* ty=Tensor[(5, 9, 9), bool] */;
  %795 = @func_276(%793) /* ty=Tensor[(16, 16, 14), int32] */;
  (%794, %795, meta[relay.Constant][41] /* ty=Tensor[(4, 896), int32] */)
}

def @func_9076(%var_8977: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool], Tensor[(1815), int16], Tensor[(2, 616), float64], Tensor[(11, 15, ?), float32], Tensor[(11, 15, 650), bool], Tensor[(591360), bool], Tensor[(40, 2), float64], Tensor[(11, 15, 650), uint32], Tensor[(11, 15, 650), bool]) {
  %796 = @func_8042() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) */;
  %797 = cast(meta[relay.Constant][42] /* ty=Tensor[(1815), int16] */, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %798 = cast(%var_8977, dtype="float32") /* ty=Tensor[(650), float32] */;
  %799 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 616), float64] */, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
  %800 = reshape(%797, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %801 = reshape(%798, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %802 = reshape(%799, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %803 = @func_8218(%800, %801, %802) /* ty=(Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) */;
  %804 = cast(%var_8977, dtype="float64") /* ty=Tensor[(650), float64] */;
  %805 = sin(%804) /* ty=Tensor[(650), float64] */;
  %806 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %807 = %806.0;
  %808 = cast(%805, dtype="bool") /* ty=Tensor[(650), bool] */;
  %809 = cast(%807, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %810 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
  %811 = @func_8411() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) */;
  %812 = cast(%807, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %813 = cast(%805, dtype="bool") /* ty=Tensor[(650), bool] */;
  %814 = logical_or(%812, %813) /* ty=Tensor[(11, 15, 650), bool] */;
  %815 = cast(%814, dtype="uint32") /* ty=Tensor[(11, 15, 650), uint32] */;
  %816 = cast(%807, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %817 = cast(%814, dtype="bool") /* ty=Tensor[(11, 15, 650), bool] */;
  %818 = cast(%805, dtype="bool") /* ty=Tensor[(650), bool] */;
  %819 = %796.1;
  %820 = %803.3;
  %821 = @func_6265() /* ty=Tensor[(11, 15, ?), float32] */;
  %822 = not_equal(%808, %809) /* ty=Tensor[(11, 15, 650), bool] */;
  %823 = %810.3;
  %824 = %811.2;
  %825 = bitwise_or(%815, %816) /* ty=Tensor[(11, 15, 650), uint32] */;
  %826 = logical_and(%817, %818) /* ty=Tensor[(11, 15, 650), bool] */;
  (%819, %820, meta[relay.Constant][42] /* ty=Tensor[(1815), int16] */, meta[relay.Constant][43] /* ty=Tensor[(2, 616), float64] */, %821, %822, %823, %824, %825, %826)
}

def @func_3244() -> Tensor[(11, 15, ?), float64] {
  %827 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %828 = %827.0;
  %829 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %831 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%828, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%832, %833) /* ty=Tensor[(11, 15, ?), float64] */
}

def @func_3679() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %834 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %835 = cast(meta[relay.Constant][44] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %836 = reshape(%835, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %837 = %834.0;
  %838 = @func_276(%836) /* ty=Tensor[(16, 16, 14), int32] */;
  (%837, %838, meta[relay.Constant][44] /* ty=Tensor[(3584), int32] */)
}

def @func_5195(%var_5188: Tensor[(3584), int32]) -> (Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) {
  %839 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %840 = %839.0;
  %841 = cast(%840, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %842 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 15, 14), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 14), bool] */;
  %843 = cast(%var_5188, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %844 = reshape(%843, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %845 = @func_2689(%844) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
  %846 = greater_equal(%841, %842) /* ty=Tensor[(11, 15, 14), bool] */;
  %847 = %845.2;
  (%846, %847, %var_5188)
}

def @func_5490() -> Tensor[(11, 15, ?), int16] {
  %848 = @func_3773() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */;
  %848.0
}

def @func_9406(%var_9396: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), float64], Tensor[(11, 15, ?), float64]) {
  %849 = cast(%var_9396, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %850 = exp(%849) /* ty=Tensor[(5, 15, 5), float64] */;
  %851 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
  (%850, %851)
}

def @func_6611() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %852 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %853 = %852.1;
  %854 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
  (%853, %854)
}

def @func_4517(%var_4482: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(1155), float64], Tensor[(1155), float64], Tensor[(11, 15, 2), uint32], Tensor[(330), int16], Tensor[(11, 15, ?), float64]) {
  %855 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %856 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %859 = cast(%var_4482, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %860 = reshape(%859, newshape=[1155]) /* ty=Tensor[(1155), float64] */;
  %861 = @func_3483(%860) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) */;
  %862 = cast(meta[relay.Constant][46] /* ty=Tensor[(330), int16] */, dtype="int16") /* ty=Tensor[(330), int16] */;
  %863 = reshape(%862, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %864 = @func_4436(%863) /* ty=(Tensor[(11, 15, 2), uint32],) */;
  %865 = %855.0;
  %866 = log10(%858) /* ty=Tensor[(11, 15, ?), float64] */;
  %867 = %861.2;
  %868 = %864.0;
  %869 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  (%865, %866, %867, %var_4482, %868, meta[relay.Constant][46] /* ty=Tensor[(330), int16] */, %869)
}

def @func_2608() -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) {
  %870 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 4), float64] */;
  %871 = erf(%870) /* ty=Tensor[(13, 5, 4), float64] */;
  %872 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%871, %872)
}

def @func_9701() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %873 = @func_7500() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %874 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %875 = %873.0;
  %876 = %874.0;
  (%875, %876)
}

def @func_2721(%var_2714: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) {
  %877 = cast(%var_2714, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
  %878 = log10(%877) /* ty=Tensor[(15, 4, 9), float32] */;
  %879 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%878, %879)
}

def @func_8656(%var_8647: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), int8],) {
  %880 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 5, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 5, 1), bool] */;
  %881 = cast(%var_8647, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %882 = greater_equal(%880, %881) /* ty=Tensor[(11, 5, 13), bool] */;
  %883 = cast(%var_8647, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %887 = subtract(%885, %886) /* ty=Tensor[(11, 5, 13), int8] */;
  (%887,)
}

def @func_6143() -> (Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) {
  %888 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %889 = cast(meta[relay.Constant][49] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %890 = reshape(%889, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %891 = @func_3134(%890) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) */;
  %892 = %888.0;
  %893 = %891.2;
  (%892, %893, meta[relay.Constant][49] /* ty=Tensor[(540), float32] */)
}

def @func_3440() -> Tensor[(11, 15, ?), float32] {
  %894 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %895 = %894.0;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  rsqrt(%896) /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_4436(%var_4423: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), uint32],) {
  %897 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %898 = %897.0;
  %899 = cast(%898, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %900 = cast(%var_4423, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
  %901 = logical_xor(%899, %900) /* ty=Tensor[(11, 15, 2), uint32] */;
  (%901,)
}

def @func_7489(%var_7477: Tensor[(5, 66), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 2), uint32], Tensor[(5, 66), int16]) {
  %902 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %903 = cast(meta[relay.Constant][50] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
  %904 = reshape(%903, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int16] */;
  %905 = @func_2038(%904) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %906 = @func_6588() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %907 = cast(%var_7477, dtype="int16") /* ty=Tensor[(5, 66), int16] */;
  %908 = reshape(%907, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %909 = @func_4436(%908) /* ty=(Tensor[(11, 15, 2), uint32],) */;
  %910 = %902.0;
  %911 = %905.0;
  %912 = %906.4;
  %913 = %909.0;
  (%910, %911, meta[relay.Constant][50] /* ty=Tensor[(660), int16] */, %912, %913, %var_7477)
}

def @func_7400(%var_7372: Tensor[(2, 15, 1), int8], %var_7373: Tensor[(2, 15, 13), int8]) -> (Tensor[(2, 15, 13), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
  %914 = cast(%var_7372, dtype="bool") /* ty=Tensor[(2, 15, 1), bool] */;
  %915 = cast(%var_7373, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
  %916 = less_equal(%914, %915) /* ty=Tensor[(2, 15, 13), bool] */;
  %917 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
  %918 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
  %919 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  (%916, %917, %918, %919)
}

def @func_7500() -> (Tensor[(11, 15, ?), int16],) {
  %920 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %921 = %920.0;
  (%921,)
}

def @func_2689(%var_2653: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) {
  %922 = cast(%var_2653, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %923 = reshape(%922, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %924 = cast(meta[relay.Constant][51] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %925 = reshape(%924, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %926 = @func_334(%925) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %927 = cast(%var_2653, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %928 = sigmoid(%927) /* ty=Tensor[(3584), float64] */;
  %929 = cast(%928, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %930 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %931 = @func_276(%923) /* ty=Tensor[(16, 16, 14), int32] */;
  %932 = %926.0;
  %933 = log(%929) /* ty=Tensor[(3584), float64] */;
  (%930, %931, %932, meta[relay.Constant][51] /* ty=Tensor[(650), float32] */, %933)
}

def @func_6805() -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %934 = @func_6465() /* ty=Tensor[(11, 15, ?), int16] */;
  %935 = cast(%934, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %936 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %937 = @func_6061() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %938 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
  %939 = @func_5490() /* ty=Tensor[(11, 15, ?), int16] */;
  %940 = asin(%935) /* ty=Tensor[(11, 15, ?), float64] */;
  %941 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  %942 = %936.0;
  %943 = %937.0;
  (%938, %939, %940, %941, %942, %943)
}

def @func_3097() -> (Tensor[(11, 15, ?), int16],) {
  %944 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %945 = %944.0;
  (%945,)
}

def @func_7727() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %946 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %947 = @func_5149() /* ty=Tensor[(11, 15, ?), float32] */;
  %948 = %946.0;
  (%947, %948)
}

def @func_7549(%var_7543: Tensor[(10, 15, 14), float64]) -> Tensor[(10, 15, 14), float64] {
  %949 = cast(0.205614f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %950 = cast(%var_7543, dtype="float64") /* ty=Tensor[(10, 15, 14), float64] */;
  divide(%949, %950) /* ty=Tensor[(10, 15, 14), float64] */
}

def @func_2398(%var_2391: Tensor[(14, 10, 11), bool]) -> Tensor[(14, 10, 11), bool] {
  %951 = cast(%var_2391, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %952 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(14, 10, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %953 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 10, 11), bool] */, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%953, %954) /* ty=Tensor[(14, 10, 11), bool] */
}

def @func_8385(%var_8354: Tensor[(3, 6, 1), uint64], %var_8355: Tensor[(3, 6, 8), uint64]) -> (Tensor[(3, 6, 8), uint64], Tensor[(11, 15, 540), bool], Tensor[(89100, 1), float32]) {
  %955 = cast(%var_8354, dtype="uint64") /* ty=Tensor[(3, 6, 1), uint64] */;
  %956 = cast(%var_8355, dtype="uint64") /* ty=Tensor[(3, 6, 8), uint64] */;
  %957 = cast(meta[relay.Constant][53] /* ty=Tensor[(89100, 1), float32] */, dtype="float32") /* ty=Tensor[(89100, 1), float32] */;
  %958 = reshape(%957, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
  %959 = @func_5635(%958) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
  %960 = bitwise_xor(%955, %956) /* ty=Tensor[(3, 6, 8), uint64] */;
  %961 = %959.0;
  (%960, %961, meta[relay.Constant][53] /* ty=Tensor[(89100, 1), float32] */)
}

def @func_4616(%var_4611: Tensor[(16, 2, 7), uint8], %var_4612: Tensor[(16, 2, 7), uint8]) -> Tensor[(16, 2, 7), bool] {
  %962 = cast(%var_4612, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %963 = shape_of(%var_4611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%var_4611, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%964, %965) /* ty=Tensor[(16, 2, 7), bool] */
}

def @func_2319(%var_2307: Tensor[(11, 13, 12), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) {
  %966 = cast(meta[relay.Constant][54] /* ty=Tensor[(11, 13, 12), bool] */, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %967 = shape_of(%var_2307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%var_2307, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %970 = cast(%var_2307, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
  %971 = logical_and(%968, %969) /* ty=Tensor[(11, 13, 12), bool] */;
  %972 = tan(%970) /* ty=Tensor[(11, 13, 12), float64] */;
  (%971, %972)
}

def @func_2186() -> (Tensor[(11, 15, ?), int16],) {
  %973 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%973,)
}

def @func_1939() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %974 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %975 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %976 = %974.1;
  %977 = %975.0;
  (%976, %977)
}

def @func_4689() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) {
  %978 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %979 = cast(meta[relay.Constant][55] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %980 = reshape(%979, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %981 = @func_2721(%980) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %982 = %981.1;
  %983 = cast(meta[relay.Constant][55] /* ty=Tensor[(540), float32] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %984 = cast(%982, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %985 = less_equal(%983, %984) /* ty=Tensor[(11, 15, 540), bool] */;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(11, 15, 540), float64] */;
  %987 = log(%986) /* ty=Tensor[(11, 15, 540), float64] */;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(11, 15, 540), float32] */;
  %989 = %978.0;
  %990 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %991 = asinh(%988) /* ty=Tensor[(11, 15, 540), float32] */;
  %992 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  (%989, %990, %991, %992)
}

def @func_3342() -> (Tensor[(11, 15, ?), int16],) {
  %993 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %994 = %993.0;
  (%994,)
}

def @func_3788() -> Tensor[(11, 15, ?), int16] {
  %995 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %995.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5410(%var_5402: Tensor[(15, 9, 8), int8]) -> (Tensor[(15, 9, 8), int8],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 9, 8), int8] */, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %1 = cast(%var_5402, dtype="int8") /* ty=Tensor[(15, 9, 8), int8] */;
  %2 = bitwise_and(%0, %1) /* ty=Tensor[(15, 9, 8), int8] */;
  (%2,)
}

def @func_9672(%var_9670: Tensor[(11, 15, 16), int16], %var_9671: Tensor[(11, 15, 16), bool]) -> (Tensor[(11, 15, 16), bool], Tensor[(11, 15, ?), int16], Tensor[(13, 5, 4), float64]) {
  %16 = fn (%var_9630: Tensor[(11, 15, 16), int16], %var_9637: Tensor[(11, 15, 16), bool]) -> (Tensor[(11, 15, 16), bool], Tensor[(11, 15, ?), int16], Tensor[(13, 5, 4), float64]) {
    %3 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %4 = %3.1;
    %5 = cast(%4, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %6 = cast(%var_9630, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
    %7 = less_equal(%5, %6) /* ty=Tensor[(11, 15, 16), bool] */;
    %8 = cast(%var_9637, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
    %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%7, dtype="bool") /* ty=Tensor[(11, 15, 16), bool] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %12 = @func_4124() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %13 = logical_or(%10, %11) /* ty=Tensor[(11, 15, 16), bool] */;
    %14 = %12.1;
    %15 = @func_6452() /* ty=Tensor[(13, 5, 4), float64] */;
    (%13, %14, %15)
  };
  %16(%var_9670, %var_9671) /* ty=(Tensor[(11, 15, 16), bool], Tensor[(11, 15, ?), int16], Tensor[(13, 5, 4), float64]) */
}

def @func_5008() -> Tensor[(11, 15, ?), int16] {
  %17 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %17.0
}

def @func_3789() -> Tensor[(11, 15, ?), int16] {
  %19 = fn () -> Tensor[(11, 15, ?), int16] {
    %18 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %18.0
  };
  %19() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_8741() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 14), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(3584), int32], Tensor[(11, 15, ?), int16]) {
  %30 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 14), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(3584), int32], Tensor[(11, 15, ?), int16]) {
    %20 = @func_8289() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) */;
    %21 = @func_4591() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %22 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
    %23 = @func_7017() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) */;
    %24 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
    %25 = %20.1;
    %26 = %21.1;
    %27 = %22.0;
    %28 = %23.3;
    %29 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
    (%24, %25, %26, %27, %28, %29)
  };
  %30() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, 14), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(3584), int32], Tensor[(11, 15, ?), int16]) */
}

def @func_1940() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %35 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
    %31 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %32 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %33 = %31.1;
    %34 = %32.0;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_5197(%var_5196: Tensor[(3584), int32]) -> (Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) {
  %45 = fn (%var_5188: Tensor[(3584), int32]) -> (Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) {
    %36 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %37 = %36.0;
    %38 = cast(%37, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %39 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 14), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 14), bool] */;
    %40 = cast(%var_5188, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %41 = reshape(%40, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %42 = @func_2689(%41) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
    %43 = greater_equal(%38, %39) /* ty=Tensor[(11, 15, 14), bool] */;
    %44 = %42.2;
    (%43, %44, %var_5188)
  };
  %45(%var_5196) /* ty=(Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) */
}

def @func_4021(%var_4018: Tensor[(2475), int16], %var_4019: Tensor[(650), float32], %var_4020: Tensor[(660), int16]) -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int8], Tensor[(13, 10, 5), float32], Tensor[(605, 3), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, ?), int16], Tensor[(660), int16]) {
  %61 = fn (%var_3989: Tensor[(2475), int16], %var_3990: Tensor[(650), float32], %var_4015: Tensor[(660), int16]) -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int8], Tensor[(13, 10, 5), float32], Tensor[(605, 3), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, ?), int16], Tensor[(660), int16]) {
    %46 = @func_3321() /* ty=(Tensor[(11, 15, ?), int8],) */;
    %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(605, 3), int16] */, dtype="int16") /* ty=Tensor[(605, 3), int16] */;
    %48 = cast(%var_3989, dtype="int16") /* ty=Tensor[(2475), int16] */;
    %49 = cast(%var_3990, dtype="float32") /* ty=Tensor[(650), float32] */;
    %50 = reshape(%47, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int16] */;
    %51 = reshape(%48, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int16] */;
    %52 = reshape(%49, newshape=[650]) /* ty=Tensor[(650), float32] */;
    %53 = @func_2006(%50, %51, %52) /* ty=(Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
    %54 = cast(%var_4015, dtype="int16") /* ty=Tensor[(660), int16] */;
    %55 = reshape(%54, newshape=[660]) /* ty=Tensor[(660), int16] */;
    %56 = @func_2505(%55) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
    %57 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    %58 = %46.0;
    %59 = %53.2;
    %60 = %56.3;
    (%57, %58, %59, meta[relay.Constant][2] /* ty=Tensor[(605, 3), int16] */, %var_3989, %var_3990, %60, %var_4015)
  };
  %61(%var_4018, %var_4019, %var_4020) /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int8], Tensor[(13, 10, 5), float32], Tensor[(605, 3), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, ?), int16], Tensor[(660), int16]) */
}

def @func_6453() -> Tensor[(13, 5, 4), float64] {
  %63 = fn () -> Tensor[(13, 5, 4), float64] {
    %62 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
    %62.0
  };
  %63() /* ty=Tensor[(13, 5, 4), float64] */
}

def @func_9236() -> (Tensor[(11, 15, 2), uint32], Tensor[(330, 1), int16], Tensor[(20, 4), float64], Tensor[(11, 15, 3584), uint8]) {
  @func_9234() /* ty=(Tensor[(11, 15, 2), uint32], Tensor[(330, 1), int16], Tensor[(20, 4), float64], Tensor[(11, 15, 3584), uint8]) */
}

def @func_6143() -> (Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) {
  %64 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %66 = reshape(%65, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %67 = @func_3134(%66) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) */;
  %68 = %64.0;
  %69 = %67.2;
  (%68, %69, meta[relay.Constant][3] /* ty=Tensor[(540), float32] */)
}

def @func_6062() -> (Tensor[(11, 15, ?), int16],) {
  %72 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %70 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %71 = %70.0;
    (%71,)
  };
  %72() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_6266() -> Tensor[(11, 15, ?), float32] {
  %73 = fn () -> Tensor[(11, 15, ?), float32] {
    @func_3440() /* ty=Tensor[(11, 15, ?), float32] */
  };
  %73() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_2379() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %78 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
    %74 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %75 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %76 = %74.1;
    %77 = %75.0;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */
}

def @func_3021() -> Tensor[(11, 15, ?), int16] {
  %79 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %79.0
}

def @func_3611(%var_3546: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) {
  %80 = cast(%var_3546, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %81 = reshape(%80, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %82 = @func_3515(%81) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %83 = %82.0;
  %84 = cast(%var_3546, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="bool") /* ty=Tensor[(7, 11, 16), bool] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %88 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  %89 = cast(%var_3546, dtype="int32") /* ty=Tensor[(1232), int32] */;
  %90 = cast(%88, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %91 = @func_3321() /* ty=(Tensor[(11, 15, ?), int8],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %94 = not_equal(%86, %87) /* ty=Tensor[(7, 11, 16), bool] */;
  %95 = minimum(%89, %90) /* ty=Tensor[(11, 15, 1232), int32] */;
  %96 = cos(%93) /* ty=Tensor[(11, 15, ?), float64] */;
  (%94, %95, %96)
}

def @func_9326() -> Tensor[(11, 15, ?), int16] {
  @func_9324() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_9723() -> (Tensor[(11, 15, ?), float32],) {
  %97 = @func_5141() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %98 = %97.0;
  (%98,)
}

def @func_2398(%var_2391: Tensor[(14, 10, 11), bool]) -> Tensor[(14, 10, 11), bool] {
  %99 = cast(%var_2391, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %100 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(14, 10, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 10, 11), bool] */, dtype="bool") /* ty=Tensor[(14, 10, 11), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%101, %102) /* ty=Tensor[(14, 10, 11), bool] */
}

def @func_1737() -> (Tensor[(11, 15, ?), int16],) {
  %104 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %103 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    (%103,)
  };
  %104() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_1862(%var_1808: Tensor[(65, 10), float32]) -> (Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) {
  %105 = cast(%var_1808, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %106 = reshape(%105, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %107 = @func_334(%106) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %108 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %111 = log(%110) /* ty=Tensor[(11, 15, ?), float64] */;
  %112 = cast(%111, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %113 = %107.0;
  %114 = log2(%112) /* ty=Tensor[(11, 15, ?), float32] */;
  (%113, %var_1808, %114)
}

def @func_2186() -> (Tensor[(11, 15, ?), int16],) {
  %115 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%115,)
}

def @func_3775() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  @func_3773() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */
}

def @func_6466() -> Tensor[(11, 15, ?), int16] {
  %117 = fn () -> Tensor[(11, 15, ?), int16] {
    %116 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %116.0
  };
  %117() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_3638() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) {
  %126 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) {
    %118 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
    %119 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
    %120 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 132), int16] */, dtype="int16") /* ty=Tensor[(5, 132), int16] */;
    %121 = reshape(%120, newshape=[660]) /* ty=Tensor[(660), int16] */;
    %122 = @func_2505(%121) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
    %123 = %118.1;
    %124 = %119.0;
    %125 = %122.0;
    (%123, %124, %125, meta[relay.Constant][5] /* ty=Tensor[(5, 132), int16] */)
  };
  %126() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */
}

def @func_5085(%var_5079: Tensor[(1, 1232), float64]) -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64], Tensor[(1, 1232), float64]) {
  %127 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %128 = cast(%var_5079, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %129 = reshape(%128, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %130 = @func_3611(%129) /* ty=(Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) */;
  %131 = %127.0;
  %132 = %130.2;
  (%131, %132, %var_5079)
}

def @func_2011(%var_2008: Tensor[(11, 15, 11), int16], %var_2009: Tensor[(11, 15, 15), int16], %var_2010: Tensor[(650), float32]) -> (Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  @func_2006(%var_2008, %var_2009, %var_2010) /* ty=(Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */
}

def @func_4919() -> Tensor[(11, 15, ?), float32] {
  @func_3440() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_4439(%var_4437: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), uint32],) {
  @func_4436(%var_4437) /* ty=(Tensor[(11, 15, 2), uint32],) */
}

def @func_5327(%var_5302: Tensor[(1, 3584), int32], %var_5307: Tensor[(16, 16, 14), int32]) -> (Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) {
  %133 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
  %134 = cast(%var_5302, dtype="int32") /* ty=Tensor[(1, 3584), int32] */;
  %135 = reshape(%134, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %136 = @func_276(%135) /* ty=Tensor[(16, 16, 14), int32] */;
  %137 = cast(%var_5307, dtype="uint8") /* ty=Tensor[(16, 16, 14), uint8] */;
  %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%136, dtype="uint8") /* ty=Tensor[(16, 16, 14), uint8] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %141 = @func_3773() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */;
  %142 = %133.3;
  %143 = bitwise_and(%139, %140) /* ty=Tensor[(16, 16, 14), uint8] */;
  %144 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %145 = %141.0;
  (%142, %var_5302, %143, %144, %145)
}

def @func_5142() -> (Tensor[(11, 15, ?), float32],) {
  %148 = fn () -> (Tensor[(11, 15, ?), float32],) {
    %146 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %147 = %146.0;
    (%147,)
  };
  %148() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_4517(%var_4482: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(1155), float64], Tensor[(1155), float64], Tensor[(11, 15, 2), uint32], Tensor[(330), int16], Tensor[(11, 15, ?), float64]) {
  %149 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %150 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %151 = %150.0;
  %152 = cast(%151, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %153 = cast(%var_4482, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %154 = reshape(%153, newshape=[1155]) /* ty=Tensor[(1155), float64] */;
  %155 = @func_3483(%154) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) */;
  %156 = cast(meta[relay.Constant][6] /* ty=Tensor[(330), int16] */, dtype="int16") /* ty=Tensor[(330), int16] */;
  %157 = reshape(%156, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %158 = @func_4436(%157) /* ty=(Tensor[(11, 15, 2), uint32],) */;
  %159 = %149.0;
  %160 = log10(%152) /* ty=Tensor[(11, 15, ?), float64] */;
  %161 = %155.2;
  %162 = %158.0;
  %163 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
  (%159, %160, %161, %var_4482, %162, meta[relay.Constant][6] /* ty=Tensor[(330), int16] */, %163)
}

def @func_4616(%var_4611: Tensor[(16, 2, 7), uint8], %var_4612: Tensor[(16, 2, 7), uint8]) -> Tensor[(16, 2, 7), bool] {
  %164 = cast(%var_4612, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %165 = shape_of(%var_4611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_4611, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%166, %167) /* ty=Tensor[(16, 2, 7), bool] */
}

def @func_7667() -> (Tensor[(8, 13, 11), int8],) {
  %169 = fn () -> (Tensor[(8, 13, 11), int8],) {
    %168 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    (%168,)
  };
  %169() /* ty=(Tensor[(8, 13, 11), int8],) */
}

def @func_8318() -> Tensor[(11, 15, ?), int16] {
  %170 = fn () -> Tensor[(11, 15, ?), int16] {
    @func_3021() /* ty=Tensor[(11, 15, ?), int16] */
  };
  %170() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_3061() -> (Tensor[(11, 15, ?), int16],) {
  %172 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %171 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
    (%171,)
  };
  %172() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_4953() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
  %180 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
    %173 = @func_4753() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %174 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %175 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %176 = %173.0;
    %177 = %174.0;
    %178 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
    %179 = %175.0;
    (%176, %177, %178, %179)
  };
  %180() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) */
}

def @func_3267(%var_3266: Tensor[(11, 15, 7), float64]) -> (Tensor[(11, 15, 7), float64],) {
  %190 = fn (%var_3249: Tensor[(11, 15, 7), float64]) -> (Tensor[(11, 15, 7), float64],) {
    %181 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
    %182 = cast(%181, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %183 = cast(%var_3249, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
    %184 = power(%182, %183) /* ty=Tensor[(11, 15, 7), float64] */;
    %185 = cast(%var_3249, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
    %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%184, dtype="float64") /* ty=Tensor[(11, 15, 7), float64] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %189 = mod(%187, %188) /* ty=Tensor[(11, 15, 7), float64] */;
    (%189,)
  };
  %190(%var_3266) /* ty=(Tensor[(11, 15, 7), float64],) */
}

def @func_2691(%var_2690: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) {
  %203 = fn (%var_2653: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) {
    %191 = cast(%var_2653, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %192 = reshape(%191, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
    %193 = cast(meta[relay.Constant][7] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
    %194 = reshape(%193, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
    %195 = @func_334(%194) /* ty=(Tensor[(13, 10, 5), float32],) */;
    %196 = cast(%var_2653, dtype="float64") /* ty=Tensor[(3584), float64] */;
    %197 = sigmoid(%196) /* ty=Tensor[(3584), float64] */;
    %198 = cast(%197, dtype="float64") /* ty=Tensor[(3584), float64] */;
    %199 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    %200 = @func_276(%192) /* ty=Tensor[(16, 16, 14), int32] */;
    %201 = %195.0;
    %202 = log(%198) /* ty=Tensor[(3584), float64] */;
    (%199, %200, %201, meta[relay.Constant][7] /* ty=Tensor[(650), float32] */, %202)
  };
  %203(%var_2690) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */
}

def @func_7808() -> (Tensor[(11, 15, ?), float32],) {
  @func_7806() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_3442() -> Tensor[(11, 15, ?), float32] {
  @func_3440() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_5903() -> Tensor[(11, 15, ?), float64] {
  %204 = fn () -> Tensor[(11, 15, ?), float64] {
    @func_3244() /* ty=Tensor[(11, 15, ?), float64] */
  };
  %204() /* ty=Tensor[(11, 15, ?), float64] */
}

def @func_7549(%var_7543: Tensor[(10, 15, 14), float64]) -> Tensor[(10, 15, 14), float64] {
  %205 = cast(0.205614f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %206 = cast(%var_7543, dtype="float64") /* ty=Tensor[(10, 15, 14), float64] */;
  divide(%205, %206) /* ty=Tensor[(10, 15, 14), float64] */
}

def @func_7264() -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) {
  %216 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) {
    %207 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
    %208 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
    %210 = cast(%208, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
    %211 = @func_7085() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
    %212 = %207.1;
    %213 = acos(%209) /* ty=Tensor[(8, 13, 11), float32] */;
    %214 = log2(%210) /* ty=Tensor[(8, 13, 11), float32] */;
    %215 = %211.1;
    (%212, %213, %214, %215)
  };
  %216() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) */
}

def @func_2006(%var_1976: Tensor[(11, 15, 11), int16], %var_1986: Tensor[(11, 15, 15), int16], %var_1999: Tensor[(650), float32]) -> (Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  %217 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %220 = cast(%var_1976, dtype="int32") /* ty=Tensor[(11, 15, 11), int32] */;
  %221 = cast(%218, dtype="int32") /* ty=Tensor[(11, 15, ?), int32] */;
  %222 = cast(%var_1986, dtype="int32") /* ty=Tensor[(11, 15, 15), int32] */;
  %223 = cast(%var_1999, dtype="float32") /* ty=Tensor[(650), float32] */;
  %224 = reshape(%223, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %225 = @func_334(%224) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %226 = logical_xor(%219, %220) /* ty=Tensor[(11, 15, 11), int32] */;
  %227 = logical_xor(%221, %222) /* ty=Tensor[(11, 15, 15), int32] */;
  %228 = %225.0;
  (%226, %227, %228, %var_1999)
}

def @func_8218(%var_8183: Tensor[(1815), int16], %var_8185: Tensor[(650), float32], %var_8193: Tensor[(1, 1232), float64]) -> (Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) {
  %229 = cast(%var_8183, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %230 = cast(meta[relay.Constant][8] /* ty=Tensor[(2475), int16] */, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %231 = cast(%var_8185, dtype="float32") /* ty=Tensor[(650), float32] */;
  %232 = reshape(%229, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %233 = reshape(%230, newshape=[2475]) /* ty=Tensor[(2475), int16] */;
  %234 = reshape(%231, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %235 = @func_5064(%232, %233, %234) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) */;
  %236 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %237 = cast(%var_8183, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %238 = cast(%236, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %239 = cast(%var_8193, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %240 = reshape(%239, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %241 = @func_3611(%240) /* ty=(Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) */;
  %242 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
  %243 = cast(%var_8183, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %244 = cast(%236, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %245 = %235.8;
  %246 = equal(%237, %238) /* ty=Tensor[(11, 15, 1815), bool] */;
  %247 = %241.0;
  %248 = %242.1;
  %249 = not_equal(%243, %244) /* ty=Tensor[(11, 15, 1815), bool] */;
  (%245, meta[relay.Constant][8] /* ty=Tensor[(2475), int16] */, %var_8185, %246, %247, %var_8193, %248, %249)
}

def @func_5088(%var_5086: Tensor[(1, 1232), float64]) -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64], Tensor[(1, 1232), float64]) {
  @func_5085(%var_5086) /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64], Tensor[(1, 1232), float64]) */
}

def @func_3897(%var_3895: Tensor[(3584), int32]) -> (Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  @func_3894(%var_3895) /* ty=(Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */
}

def @func_8524(%var_8505: Tensor[(6, 12, 5), int16]) -> (Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) {
  %250 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 12, 5), int16] */, dtype="int16") /* ty=Tensor[(6, 12, 5), int16] */;
  %251 = shape_of(%var_8505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_8505, dtype="int16") /* ty=Tensor[(6, 12, 5), int16] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %254 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %255 = cast(%var_8505, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  %256 = left_shift(%252, %253) /* ty=Tensor[(6, 12, 5), int16] */;
  %257 = %254.1;
  %258 = log10(%255) /* ty=Tensor[(6, 12, 5), float32] */;
  (%256, %257, %258)
}

def @func_9598(%var_9596: Tensor[(3584), int32], %var_9597: Tensor[(360, 1), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(3584), int32], Tensor[(3584), bool], Tensor[(6, 12, 5), int16], Tensor[(360, 1), int16], Tensor[(11, 15, ?), int16]) {
  %276 = fn (%var_9575: Tensor[(3584), int32], %var_9584: Tensor[(360, 1), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(3584), int32], Tensor[(3584), bool], Tensor[(6, 12, 5), int16], Tensor[(360, 1), int16], Tensor[(11, 15, ?), int16]) {
    %259 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
    %260 = cast(%var_9575, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %261 = reshape(%260, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %262 = @func_7640(%261) /* ty=(Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) */;
    %263 = %262.0;
    %264 = cast(meta[relay.Constant][10] /* ty=Tensor[(3584), int16] */, dtype="bool") /* ty=Tensor[(3584), bool] */;
    %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(1), int32] */;
    %266 = cast(%263, dtype="bool") /* ty=Tensor[(3584), bool] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?), bool] */;
    %268 = cast(%var_9584, dtype="int16") /* ty=Tensor[(360, 1), int16] */;
    %269 = reshape(%268, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), int16] */;
    %270 = @func_8524(%269) /* ty=(Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) */;
    %271 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %272 = %259.0;
    %273 = equal(%266, %267) /* ty=Tensor[(3584), bool] */;
    %274 = %270.0;
    %275 = %271.0;
    (%272, %var_9575, %273, %274, %var_9584, %275)
  };
  %276(%var_9596, %var_9597) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(3584), int32], Tensor[(3584), bool], Tensor[(6, 12, 5), int16], Tensor[(360, 1), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_7992() -> Tensor[(11, 15, ?), float32] {
  @func_7990() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_2289() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %283 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
    %277 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %278 = %277.0;
    %279 = cast(%278, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
    %280 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %281 = sin(%279) /* ty=Tensor[(11, 15, ?), float32] */;
    %282 = %280.1;
    (%281, %282)
  };
  %283() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_7990() -> Tensor[(11, 15, ?), float32] {
  %284 = @func_5141() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %284.0
}

def @func_9817() -> (Tensor[(11, 15, ?), float32],) {
  %287 = fn () -> (Tensor[(11, 15, ?), float32],) {
    %285 = @func_7806() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %286 = %285.0;
    (%286,)
  };
  %287() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_2608() -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) {
  %288 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 4), float64] */;
  %289 = erf(%288) /* ty=Tensor[(13, 5, 4), float64] */;
  %290 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  (%289, %290)
}

def @func_5296() -> Tensor[(11, 15, ?), int16] {
  @func_5294() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_5010() -> Tensor[(11, 15, ?), int16] {
  @func_5008() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_8043() -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) {
  %296 = fn () -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) {
    %291 = @func_6864() /* ty=Tensor[(11, 15, ?), int16] */;
    %292 = cast(%291, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %293 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %294 = acos(%292) /* ty=Tensor[(11, 15, ?), float64] */;
    %295 = %293.0;
    (%294, %295)
  };
  %296() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) */
}

def @func_9271() -> (Tensor[(11, 15, ?), float32],) {
  %299 = fn () -> (Tensor[(11, 15, ?), float32],) {
    %297 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %298 = %297.0;
    (%298,)
  };
  %299() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_1600(%var_1584: Tensor[(11, 15, 7), int16]) -> (Tensor[(11, 15, 7), uint16],) {
  %300 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
  %301 = cast(%300, dtype="uint16") /* ty=Tensor[(11, 15, ?), uint16] */;
  %302 = cast(%var_1584, dtype="uint16") /* ty=Tensor[(11, 15, 7), uint16] */;
  %303 = bitwise_or(%301, %302) /* ty=Tensor[(11, 15, 7), uint16] */;
  (%303,)
}

def @func_6865() -> Tensor[(11, 15, ?), int16] {
  %305 = fn () -> Tensor[(11, 15, ?), int16] {
    %304 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %304.0
  };
  %305() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_6589() -> (Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %313 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
    %306 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
    %307 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %308 = @func_4919() /* ty=Tensor[(11, 15, ?), float32] */;
    %309 = %306.2;
    %310 = %307.0;
    %311 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
    %312 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
    (%308, %309, %310, %311, %312)
  };
  %313() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_9757() -> (Tensor[(13, 5, 4), float64], Tensor[(270, 2), float32]) {
  %318 = fn () -> (Tensor[(13, 5, 4), float64], Tensor[(270, 2), float32]) {
    %314 = @func_8947() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) */;
    %315 = @func_6143() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) */;
    %316 = %314.0;
    %317 = %315.1;
    (%316, %317)
  };
  %318() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(270, 2), float32]) */
}

def @func_3850(%var_3849: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), float64],) {
  %324 = fn (%var_3840: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), float64],) {
    %319 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %320 = %319.1;
    %321 = cast(%320, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %322 = cast(%var_3840, dtype="float64") /* ty=Tensor[(11, 15, 2), float64] */;
    %323 = power(%321, %322) /* ty=Tensor[(11, 15, 2), float64] */;
    (%323,)
  };
  %324(%var_3849) /* ty=(Tensor[(11, 15, 2), float64],) */
}

def @func_2507(%var_2506: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) {
  %344 = fn (%var_2461: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) {
    %325 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    %326 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %327 = %326.0;
    %328 = cast(%327, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %329 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
    %330 = cast(%325, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %332 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %333 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %334 = cast(%var_2461, dtype="int16") /* ty=Tensor[(660), int16] */;
    %335 = reshape(%334, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int16] */;
    %336 = @func_2038(%335) /* ty=(Tensor[(11, 15, 4), bool],) */;
    %337 = %336.0;
    %338 = cast(%337, dtype="float32") /* ty=Tensor[(11, 15, 4), float32] */;
    %339 = less(%330, %331) /* ty=Tensor[(11, 15, ?), bool] */;
    %340 = %332.1;
    %341 = %333.0;
    %342 = exp(%338) /* ty=Tensor[(11, 15, 4), float32] */;
    %343 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    (%339, %340, %var_2461, %341, %342, %343)
  };
  %344(%var_2506) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_3773() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  %345 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %346 = cast(meta[relay.Constant][12] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %347 = cast(meta[relay.Constant][12] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %348 = reshape(%346, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float32] */;
  %349 = reshape(%347, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float32] */;
  %350 = @func_3167(%348, %349) /* ty=(Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) */;
  %351 = cast(meta[relay.Constant][13] /* ty=Tensor[(1540), bool] */, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %352 = reshape(%351, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %353 = %345.0;
  %354 = %350.1;
  %355 = @func_2398(%352) /* ty=Tensor[(14, 10, 11), bool] */;
  (%353, %354, meta[relay.Constant][12] /* ty=Tensor[(135, 3), float32] */, %355, meta[relay.Constant][13] /* ty=Tensor[(1540), bool] */)
}

def @func_4620(%var_4618: Tensor[(16, 2, 7), uint8], %var_4619: Tensor[(16, 2, 7), uint8]) -> Tensor[(16, 2, 7), bool] {
  @func_4616(%var_4618, %var_4619) /* ty=Tensor[(16, 2, 7), bool] */
}

def @func_7643(%var_7641: Tensor[(3584), int32]) -> (Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) {
  @func_7640(%var_7641) /* ty=(Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) */
}

def @func_2723(%var_2722: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) {
  %359 = fn (%var_2714: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) {
    %356 = cast(%var_2714, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
    %357 = log10(%356) /* ty=Tensor[(15, 4, 9), float32] */;
    %358 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    (%357, %358)
  };
  %359(%var_2722) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_7501() -> (Tensor[(11, 15, ?), int16],) {
  %362 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %360 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_6047() -> Tensor[(11, 15, ?), int16] {
  %363 = fn () -> Tensor[(11, 15, ?), int16] {
    @func_5008() /* ty=Tensor[(11, 15, ?), int16] */
  };
  %363() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_5273() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %368 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
    %364 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %365 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
    %366 = %364.0;
    %367 = %365.0;
    (%366, %367)
  };
  %368() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */
}

def @func_3344() -> (Tensor[(11, 15, ?), int16],) {
  @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_276(%var_270: Tensor[(16, 16, 14), int32]) -> Tensor[(16, 16, 14), int32] {
  %369 = cast(%var_270, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %370 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(16, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%371, %372) /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_7918(%var_7916: Tensor[(80), float64]) -> (Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) {
  @func_7915(%var_7916) /* ty=(Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) */
}

def @func_8659(%var_8657: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), int8],) {
  @func_8656(%var_8657) /* ty=(Tensor[(11, 5, 13), int8],) */
}

def @func_3342() -> (Tensor[(11, 15, ?), int16],) {
  %373 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %374 = %373.0;
  (%374,)
}

def @func_8290() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) {
  %379 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) {
    %375 = @func_6061() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %376 = @func_7582() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) */;
    %377 = %375.0;
    %378 = %376.1;
    (%377, %378)
  };
  %379() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool]) */
}

def @func_3894(%var_3886: Tensor[(3584), int32]) -> (Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %380 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %381 = cast(%var_3886, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %382 = reshape(%381, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %383 = %380.0;
  %384 = @func_276(%382) /* ty=Tensor[(16, 16, 14), int32] */;
  (%383, %384, %var_3886)
}

def @func_2188() -> (Tensor[(11, 15, ?), int16],) {
  @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_5518() -> Tensor[(11, 15, ?), float32] {
  %385 = @func_5272() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
  %385.1
}

def @func_2319(%var_2307: Tensor[(11, 13, 12), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) {
  %386 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 13, 12), bool] */, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %387 = shape_of(%var_2307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_2307, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %390 = cast(%var_2307, dtype="float64") /* ty=Tensor[(11, 13, 12), float64] */;
  %391 = logical_and(%388, %389) /* ty=Tensor[(11, 13, 12), bool] */;
  %392 = tan(%390) /* ty=Tensor[(11, 13, 12), float64] */;
  (%391, %392)
}

def @func_6351() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) {
  @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */
}

def @func_4780(%var_4773: Tensor[(2, 6, 15), uint16]) -> (Tensor[(2, 6, 15), uint16],) {
  %393 = cast(%var_4773, dtype="uint16") /* ty=Tensor[(2, 6, 15), uint16] */;
  %394 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(2, 6, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(2, 6, 15), uint16] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %397 = subtract(%395, %396) /* ty=Tensor[(2, 6, 15), uint16] */;
  (%397,)
}

def @func_6182(%var_6180: Tensor[(330), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 2), float64], Tensor[(330), int16]) {
  @func_6179(%var_6180) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, 2), float64], Tensor[(330), int16]) */
}

def @func_4520(%var_4518: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(1155), float64], Tensor[(1155), float64], Tensor[(11, 15, 2), uint32], Tensor[(330), int16], Tensor[(11, 15, ?), float64]) {
  @func_4517(%var_4518) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(1155), float64], Tensor[(1155), float64], Tensor[(11, 15, 2), uint32], Tensor[(330), int16], Tensor[(11, 15, ?), float64]) */
}

def @func_5150() -> Tensor[(11, 15, ?), float32] {
  %399 = fn () -> Tensor[(11, 15, ?), float32] {
    %398 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %398.0
  };
  %399() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_4048() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %406 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
    %400 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %401 = %400.0;
    %402 = cast(%401, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
    %403 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %404 = erf(%402) /* ty=Tensor[(11, 15, ?), float32] */;
    %405 = %403.0;
    (%404, %405)
  };
  %406() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */
}

def @func_3245() -> Tensor[(11, 15, ?), float64] {
  %414 = fn () -> Tensor[(11, 15, ?), float64] {
    %407 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %408 = %407.0;
    %409 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
    %410 = cast(%409, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %411 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(%408, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%412, %413) /* ty=Tensor[(11, 15, ?), float64] */
  };
  %414() /* ty=Tensor[(11, 15, ?), float64] */
}

def @func_3134(%var_3132: Tensor[(270, 2), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) {
  %415 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %416 = cast(%var_3132, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %417 = reshape(%416, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %418 = @func_2721(%417) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %419 = %415.1;
  %420 = %418.1;
  (%419, %420, %var_3132)
}

def @func_2401(%var_2399: Tensor[(14, 10, 11), bool]) -> Tensor[(14, 10, 11), bool] {
  @func_2398(%var_2399) /* ty=Tensor[(14, 10, 11), bool] */
}

def @func_8621(%var_8619: Tensor[(8, 16, 12), int16], %var_8620: Tensor[(8, 16, 12), int16]) -> (Tensor[(8, 16, 12), int16],) {
  @func_8617(%var_8619, %var_8620) /* ty=(Tensor[(8, 16, 12), int16],) */
}

def @func_7403(%var_7401: Tensor[(2, 15, 1), int8], %var_7402: Tensor[(2, 15, 13), int8]) -> (Tensor[(2, 15, 13), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
  %427 = fn (%var_7372: Tensor[(2, 15, 1), int8], %var_7373: Tensor[(2, 15, 13), int8]) -> (Tensor[(2, 15, 13), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) {
    %421 = cast(%var_7372, dtype="bool") /* ty=Tensor[(2, 15, 1), bool] */;
    %422 = cast(%var_7373, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
    %423 = less_equal(%421, %422) /* ty=Tensor[(2, 15, 13), bool] */;
    %424 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
    %425 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
    %426 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
    (%423, %424, %425, %426)
  };
  %427(%var_7401, %var_7402) /* ty=(Tensor[(2, 15, 13), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) */
}

def @func_7640(%var_7608: Tensor[(3584), int32]) -> (Tensor[(3584), int16], Tensor[(11, 15, ?), float32]) {
  %428 = @func_7582() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) */;
  %429 = %428.2;
  %430 = cast(%var_7608, dtype="int16") /* ty=Tensor[(3584), int16] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(1), int32] */;
  %432 = cast(%429, dtype="int16") /* ty=Tensor[(3584), int16] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?), int16] */;
  %434 = @func_7263() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), float32], Tensor[(8, 13, 11), float32], Tensor[(11, 15, ?), float32]) */;
  %435 = bitwise_xor(%432, %433) /* ty=Tensor[(3584), int16] */;
  %436 = %434.0;
  (%435, %436)
}

def @func_7915(%var_7875: Tensor[(80), float64]) -> (Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) {
  %437 = cast(meta[relay.Constant][17] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %438 = reshape(%437, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
  %439 = @func_3265(%438) /* ty=(Tensor[(11, 15, 7), float64],) */;
  %440 = cast(meta[relay.Constant][17] /* ty=Tensor[(1155), float64] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %441 = cast(meta[relay.Constant][18] /* ty=Tensor[(224), uint8] */, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %442 = cast(meta[relay.Constant][18] /* ty=Tensor[(224), uint8] */, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %443 = reshape(%441, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), uint8] */;
  %444 = reshape(%442, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), uint8] */;
  %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(2475), float32] */, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %446 = reshape(%445, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %447 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
  %448 = %447.2;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %450 = tan(%449) /* ty=Tensor[(3584), float64] */;
  %451 = cast(%448, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(1), int32] */;
  %453 = cast(%450, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?), bool] */;
  %455 = less(%453, %454) /* ty=Tensor[(3584), bool] */;
  %456 = cast(meta[relay.Constant][20] /* ty=Tensor[(3584), bool] */, dtype="int64") /* ty=Tensor[(3584), int64] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(1), int32] */;
  %458 = cast(%455, dtype="int64") /* ty=Tensor[(3584), int64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?), int64] */;
  %460 = cast(%var_7875, dtype="float64") /* ty=Tensor[(80), float64] */;
  %461 = cast(%450, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %462 = reshape(%460, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
  %463 = reshape(%461, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %464 = @func_1382(%462, %463) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %465 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
  %466 = cast(%450, dtype="uint32") /* ty=Tensor[(3584), uint32] */;
  %467 = cast(%465, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %468 = bitwise_or(%466, %467) /* ty=Tensor[(11, 15, 3584), uint32] */;
  %469 = cast(%468, dtype="uint32") /* ty=Tensor[(11, 15, 3584), uint32] */;
  %470 = cast(%448, dtype="uint32") /* ty=Tensor[(3584), uint32] */;
  %471 = cast(%450, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %472 = cast(%450, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %473 = reshape(%471, newshape=[1, 3584]) /* ty=Tensor[(1, 3584), int32] */;
  %474 = reshape(%472, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %475 = @func_5327(%473, %474) /* ty=(Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) */;
  %476 = cast(meta[relay.Constant][21] /* ty=Tensor[(89100), float32] */, dtype="float32") /* ty=Tensor[(89100), float32] */;
  %477 = reshape(%476, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
  %478 = @func_5635(%477) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
  %479 = cast(meta[relay.Constant][22] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %480 = reshape(%479, newshape=[65, 10]) /* ty=Tensor[(65, 10), float32] */;
  %481 = @func_1862(%480) /* ty=(Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) */;
  %482 = %439.0;
  %483 = sigmoid(%440) /* ty=Tensor[(1155), float32] */;
  %484 = @func_4616(%443, %444) /* ty=Tensor[(16, 2, 7), bool] */;
  %485 = @func_7743(%446) /* ty=Tensor[(11, 15, 15), int64] */;
  %486 = bitwise_and(%458, %459) /* ty=Tensor[(3584), int64] */;
  %487 = %464.1;
  %488 = right_shift(%469, %470) /* ty=Tensor[(11, 15, 3584), uint32] */;
  %489 = %475.2;
  %490 = %478.1;
  %491 = %481.1;
  (%482, %483, %484, meta[relay.Constant][18] /* ty=Tensor[(224), uint8] */, %485, meta[relay.Constant][19] /* ty=Tensor[(2475), float32] */, %486, %487, %var_7875, %488, %489, %490, meta[relay.Constant][21] /* ty=Tensor[(89100), float32] */, %491, meta[relay.Constant][22] /* ty=Tensor[(650), float32] */)
}

def @main(%var_9825: Tensor[(8, 12, 9), int16], %var_9826: Tensor[(8, 12, 9), int16]) -> (Tensor[(8, 12, 9), bool],) {
  %492 = cast(%var_9826, dtype="bool") /* ty=Tensor[(8, 12, 9), bool] */;
  %493 = shape_of(%var_9825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%var_9825, dtype="bool") /* ty=Tensor[(8, 12, 9), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = less(%494, %495) /* ty=Tensor[(8, 12, 9), bool] */;
  (%496,)
}

def @func_7980(%var_7978: Tensor[(1540), bool]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  @func_7977(%var_7978) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */
}

def @func_5231() -> (Tensor[(11, 15, ?), int16],) {
  %499 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %497 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %498 = %497.0;
    (%498,)
  };
  %499() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_1669(%var_1668: Tensor[(80), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) {
  %507 = fn (%var_1652: Tensor[(80), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) {
    %500 = cast(%var_1652, dtype="float64") /* ty=Tensor[(80), float64] */;
    %501 = cast(meta[relay.Constant][23] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %502 = reshape(%500, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
    %503 = reshape(%501, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %504 = @func_1382(%502, %503) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
    %505 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    %506 = %504.0;
    (%505, %506, %var_1652, meta[relay.Constant][23] /* ty=Tensor[(3584), int32] */)
  };
  %507(%var_1668) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) */
}

def @func_6145() -> (Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) {
  @func_6143() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32], Tensor[(540), float32]) */
}

def @func_1865(%var_1863: Tensor[(65, 10), float32]) -> (Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) {
  @func_1862(%var_1863) /* ty=(Tensor[(13, 10, 5), float32], Tensor[(65, 10), float32], Tensor[(11, 15, ?), float32]) */
}

def @func_3171(%var_3169: Tensor[(5, 9, 9), float32], %var_3170: Tensor[(5, 9, 9), float32]) -> (Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) {
  @func_3167(%var_3169, %var_3170) /* ty=(Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) */
}

def @func_9701() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %508 = @func_7500() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %509 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %510 = %508.0;
  %511 = %509.0;
  (%510, %511)
}

def @func_7018() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) {
  %521 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) {
    %512 = @func_5454() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */;
    %513 = cast(meta[relay.Constant][24] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %514 = cast(meta[relay.Constant][24] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %515 = reshape(%513, newshape=[1, 3584]) /* ty=Tensor[(1, 3584), int32] */;
    %516 = reshape(%514, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
    %517 = @func_5327(%515, %516) /* ty=(Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) */;
    %518 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    %519 = %512.0;
    %520 = %517.2;
    (%518, %519, %520, meta[relay.Constant][24] /* ty=Tensor[(3584), int32] */)
  };
  %521() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(16, 16, 14), uint8], Tensor[(3584), int32]) */
}

def @func_9725() -> (Tensor[(11, 15, ?), float32],) {
  @func_9723() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_3515(%var_3510: Tensor[(7, 11, 16), float64]) -> (Tensor[(7, 11, 16), float64],) {
  %522 = cast(%var_3510, dtype="float64") /* ty=Tensor[(7, 11, 16), float64] */;
  %523 = acosh(%522) /* ty=Tensor[(7, 11, 16), float64] */;
  (%523,)
}

def @func_9510(%var_9499: Tensor[(4, 13, 11), float32]) -> (Tensor[(4, 13, 11), float32], Tensor[(11, 15, ?), int16]) {
  %524 = cast(%var_9499, dtype="float32") /* ty=Tensor[(4, 13, 11), float32] */;
  %525 = asinh(%524) /* ty=Tensor[(4, 13, 11), float32] */;
  %526 = @func_6864() /* ty=Tensor[(11, 15, ?), int16] */;
  (%525, %526)
}

def @func_3485(%var_3484: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) {
  %533 = fn (%var_3471: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) {
    %527 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
    %528 = cast(%var_3471, dtype="float64") /* ty=Tensor[(1155), float64] */;
    %529 = reshape(%528, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
    %530 = @func_3265(%529) /* ty=(Tensor[(11, 15, 7), float64],) */;
    %531 = %527.1;
    %532 = %530.0;
    (%531, %532, %var_3471)
  };
  %533(%var_3484) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) */
}

def @func_9305() -> (Tensor[(11, 15, ?), float32],) {
  @func_9303() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_9381(%var_9379: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 3584), float64], Tensor[(3584), int32], Tensor[(3360, 176), bool]) {
  @func_9378(%var_9379) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, 3584), float64], Tensor[(3584), int32], Tensor[(3360, 176), bool]) */
}

def @func_9409(%var_9407: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), float64], Tensor[(11, 15, ?), float64]) {
  @func_9406(%var_9407) /* ty=(Tensor[(5, 15, 5), float64], Tensor[(11, 15, ?), float64]) */
}

def @func_4690() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) {
  %549 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) {
    %534 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %535 = cast(meta[relay.Constant][25] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %536 = reshape(%535, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
    %537 = @func_2721(%536) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
    %538 = %537.1;
    %539 = cast(meta[relay.Constant][25] /* ty=Tensor[(540), float32] */, dtype="bool") /* ty=Tensor[(540), bool] */;
    %540 = cast(%538, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %541 = less_equal(%539, %540) /* ty=Tensor[(11, 15, 540), bool] */;
    %542 = cast(%541, dtype="float64") /* ty=Tensor[(11, 15, 540), float64] */;
    %543 = log(%542) /* ty=Tensor[(11, 15, 540), float64] */;
    %544 = cast(%543, dtype="float32") /* ty=Tensor[(11, 15, 540), float32] */;
    %545 = %534.0;
    %546 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    %547 = asinh(%544) /* ty=Tensor[(11, 15, 540), float32] */;
    %548 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
    (%545, %546, %547, %548)
  };
  %549() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */
}

def @func_8656(%var_8647: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), int8],) {
  %550 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 5, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 5, 1), bool] */;
  %551 = cast(%var_8647, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %552 = greater_equal(%550, %551) /* ty=Tensor[(11, 5, 13), bool] */;
  %553 = cast(%var_8647, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%552, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %557 = subtract(%555, %556) /* ty=Tensor[(11, 5, 13), int8] */;
  (%557,)
}

def @func_4592() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %561 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
    %558 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %559 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
    %560 = %558.0;
    (%559, %560)
  };
  %561() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_9234() -> (Tensor[(11, 15, 2), uint32], Tensor[(330, 1), int16], Tensor[(20, 4), float64], Tensor[(11, 15, 3584), uint8]) {
  %562 = cast(meta[relay.Constant][27] /* ty=Tensor[(330, 1), int16] */, dtype="int16") /* ty=Tensor[(330, 1), int16] */;
  %563 = reshape(%562, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %564 = @func_4436(%563) /* ty=(Tensor[(11, 15, 2), uint32],) */;
  %565 = @func_7806() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %566 = %565.0;
  %567 = cast(meta[relay.Constant][28] /* ty=Tensor[(20, 4), float64] */, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %568 = reshape(%567, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %569 = @func_1667(%568) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(5, 8, 2), float64], Tensor[(80), float64], Tensor[(3584), int32]) */;
  %570 = %569.3;
  %571 = cast(%566, dtype="uint8") /* ty=Tensor[(11, 15, ?), uint8] */;
  %572 = cast(%570, dtype="uint8") /* ty=Tensor[(3584), uint8] */;
  %573 = %564.0;
  %574 = bitwise_xor(%571, %572) /* ty=Tensor[(11, 15, 3584), uint8] */;
  (%573, meta[relay.Constant][27] /* ty=Tensor[(330, 1), int16] */, meta[relay.Constant][28] /* ty=Tensor[(20, 4), float64] */, %574)
}

def @func_5581() -> (Tensor[(11, 15, ?), int16],) {
  %575 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %576 = %575.0;
  (%576,)
}

def @func_9162(%var_9160: Tensor[(2475), int16], %var_9161: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(4, 896), int32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32]) {
  @func_9158(%var_9160, %var_9161) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(4, 896), int32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32]) */
}

def @func_9703() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  @func_9701() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_2038(%var_2023: Tensor[(11, 15, 4), int16]) -> (Tensor[(11, 15, 4), bool],) {
  %577 = @func_1939() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %578 = %577.0;
  %579 = cast(%578, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %580 = cast(%var_2023, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %581 = less(%579, %580) /* ty=Tensor[(11, 15, 4), bool] */;
  (%581,)
}

def @func_9079(%var_9077: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool], Tensor[(1815), int16], Tensor[(2, 616), float64], Tensor[(11, 15, ?), float32], Tensor[(11, 15, 650), bool], Tensor[(591360), bool], Tensor[(40, 2), float64], Tensor[(11, 15, 650), uint32], Tensor[(11, 15, 650), bool]) {
  @func_9076(%var_9077) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool], Tensor[(1815), int16], Tensor[(2, 616), float64], Tensor[(11, 15, ?), float32], Tensor[(11, 15, 650), bool], Tensor[(591360), bool], Tensor[(40, 2), float64], Tensor[(11, 15, 650), uint32], Tensor[(11, 15, 650), bool]) */
}

def @func_5068(%var_5065: Tensor[(1815), int16], %var_5066: Tensor[(2475), int16], %var_5067: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) {
  %604 = fn (%var_5047: Tensor[(1815), int16], %var_5048: Tensor[(2475), int16], %var_5049: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) {
    %582 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %583 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %584 = %583.1;
    %585 = cast(%584, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
    %586 = cast(%var_5047, dtype="int16") /* ty=Tensor[(1815), int16] */;
    %587 = cast(%var_5048, dtype="int16") /* ty=Tensor[(2475), int16] */;
    %588 = cast(%var_5049, dtype="float32") /* ty=Tensor[(650), float32] */;
    %589 = cast(meta[relay.Constant][29] /* ty=Tensor[(1716), bool] */, dtype="bool") /* ty=Tensor[(1716), bool] */;
    %590 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
    %591 = reshape(%585, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), int8] */;
    %592 = reshape(%586, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
    %593 = reshape(%587, newshape=[1, 2475]) /* ty=Tensor[(1, 2475), int16] */;
    %594 = reshape(%588, newshape=[325, 2]) /* ty=Tensor[(325, 2), float32] */;
    %595 = reshape(%589, newshape=[286, 6]) /* ty=Tensor[(286, 6), bool] */;
    %596 = reshape(%590, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %597 = @func_2974(%591, %592, %593, %594, %595, %596) /* ty=(Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) */;
    %598 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
    %599 = reshape(%598, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %600 = @func_3894(%599) /* ty=(Tensor[(13, 5, 4), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
    %601 = %582.0;
    %602 = %597.3;
    %603 = %600.2;
    (%601, %584, %602, %var_5047, %var_5048, %var_5049, meta[relay.Constant][29] /* ty=Tensor[(1716), bool] */, meta[relay.Constant][30] /* ty=Tensor[(4, 896), int32] */, %603)
  };
  %604(%var_5065, %var_5066, %var_5067) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) */
}

def @func_8223(%var_8220: Tensor[(1815), int16], %var_8221: Tensor[(650), float32], %var_8222: Tensor[(1, 1232), float64]) -> (Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) {
  @func_8218(%var_8220, %var_8221, %var_8222) /* ty=(Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) */
}

def @func_3322() -> (Tensor[(11, 15, ?), int8],) {
  %614 = fn () -> (Tensor[(11, 15, ?), int8],) {
    %605 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %606 = %605.0;
    %607 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %608 = %607.0;
    %609 = cast(%608, dtype="int8") /* ty=Tensor[(11, 15, ?), int8] */;
    %610 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%606, dtype="int8") /* ty=Tensor[(11, 15, ?), int8] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %613 = bitwise_and(%611, %612) /* ty=Tensor[(11, 15, ?), int8] */;
    (%613,)
  };
  %614() /* ty=(Tensor[(11, 15, ?), int8],) */
}

def @func_2815() -> Tensor[(11, 15, ?), float32] {
  %616 = fn () -> Tensor[(11, 15, ?), float32] {
    %615 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
    %615.1
  };
  %616() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_5105() -> (Tensor[(13, 5, 4), float64],) {
  %617 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
  %618 = %617.0;
  (%618,)
}

def @func_6806() -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %629 = fn () -> (Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
    %619 = @func_6465() /* ty=Tensor[(11, 15, ?), int16] */;
    %620 = cast(%619, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %621 = @func_2186() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %622 = @func_6061() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %623 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
    %624 = @func_5490() /* ty=Tensor[(11, 15, ?), int16] */;
    %625 = asin(%620) /* ty=Tensor[(11, 15, ?), float64] */;
    %626 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
    %627 = %621.0;
    %628 = %622.0;
    (%623, %624, %625, %626, %627, %628)
  };
  %629() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_5384() -> (Tensor[(11, 15, ?), float64],) {
  %632 = fn () -> (Tensor[(11, 15, ?), float64],) {
    %630 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %631 = %630.3;
    (%631,)
  };
  %632() /* ty=(Tensor[(11, 15, ?), float64],) */
}

def @func_2041(%var_2039: Tensor[(11, 15, 4), int16]) -> (Tensor[(11, 15, 4), bool],) {
  @func_2038(%var_2039) /* ty=(Tensor[(11, 15, 4), bool],) */
}

def @func_4381(%var_4379: Tensor[(1540), bool]) -> (Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) {
  @func_4378(%var_4379) /* ty=(Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) */
}

def @func_7582() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) {
  %633 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %634 = cast(meta[relay.Constant][31] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %635 = reshape(%634, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %636 = @func_5195(%635) /* ty=(Tensor[(11, 15, 14), bool], Tensor[(13, 10, 5), float32], Tensor[(3584), int32]) */;
  %637 = %633.0;
  %638 = %636.0;
  (%637, %638, meta[relay.Constant][31] /* ty=Tensor[(3584), int32] */)
}

def @func_5966(%var_5950: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(660), int16]) {
  %639 = @func_3060() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %640 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %641 = cast(%var_5950, dtype="int16") /* ty=Tensor[(660), int16] */;
  %642 = reshape(%641, newshape=[660]) /* ty=Tensor[(660), int16] */;
  %643 = @func_2505(%642) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 4), float32], Tensor[(11, 15, ?), int16]) */;
  %644 = %639.0;
  %645 = %640.0;
  %646 = %643.2;
  (%644, %645, %646, %var_5950)
}

def @func_279(%var_277: Tensor[(16, 16, 14), int32]) -> Tensor[(16, 16, 14), int32] {
  @func_276(%var_277) /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_1764() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %647 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %648 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %649 = %647.0;
  %650 = %648.0;
  (%649, %650)
}

def @func_7357() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %651 = @func_6588() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %652 = %651.3;
  %653 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
  (%652, %653)
}

def @func_6436() -> Tensor[(11, 15, ?), float32] {
  %655 = fn () -> Tensor[(11, 15, ?), float32] {
    %654 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %654.0
  };
  %655() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_8413() -> (Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) {
  @func_8411() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) */
}

def @func_2570() -> Tensor[(8, 13, 11), int8] {
  %662 = fn () -> Tensor[(8, 13, 11), int8] {
    %656 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
    %657 = log(%656) /* ty=Tensor[(8, 13, 11), float32] */;
    %658 = cast(%657, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
    %659 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(8, 13, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %660 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 13, 11), float32] */, dtype="int8") /* ty=Tensor[(8, 13, 11), int8] */;
    %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%660, %661) /* ty=Tensor[(8, 13, 11), int8] */
  };
  %662() /* ty=Tensor[(8, 13, 11), int8] */
}

def @func_1766() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_7584() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) {
  @func_7582() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 14), bool], Tensor[(3584), int32]) */
}

def @func_4912() -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8]) {
  %666 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8]) {
    %663 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %664 = %663.0;
    %665 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    (%664, %665)
  };
  %666() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8]) */
}

def @func_8439() -> (Tensor[(11, 15, ?), int16],) {
  %669 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %667 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %668 = %667.0;
    (%668,)
  };
  %669() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_3097() -> (Tensor[(11, 15, ?), int16],) {
  %670 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %671 = %670.0;
  (%671,)
}

def @func_1460() -> Tensor[(11, 15, ?), int16] {
  %678 = fn () -> Tensor[(11, 15, ?), int16] {
    %672 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 1), float32] */;
    %673 = sinh(%672) /* ty=Tensor[(11, 15, 1), float32] */;
    %674 = cast(%673, dtype="int16") /* ty=Tensor[(11, 15, 1), int16] */;
    %675 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(11, 15, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 15, 1), float32] */, dtype="int16") /* ty=Tensor[(11, 15, 1), int16] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%676, %677) /* ty=Tensor[(11, 15, ?), int16] */
  };
  %678() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_6938(%var_6937: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(1155), float64], Tensor[(11, 15, ?), int16]) {
  %686 = fn (%var_6922: Tensor[(1155), float64]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(1155), float64], Tensor[(11, 15, ?), int16]) {
    %679 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %680 = cast(%var_6922, dtype="float64") /* ty=Tensor[(1155), float64] */;
    %681 = reshape(%680, newshape=[1155]) /* ty=Tensor[(1155), float64] */;
    %682 = @func_3483(%681) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64]) */;
    %683 = %679.1;
    %684 = %682.0;
    %685 = @func_1459() /* ty=Tensor[(11, 15, ?), int16] */;
    (%683, %684, %var_6922, %685)
  };
  %686(%var_6937) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(1155), float64], Tensor[(11, 15, ?), int16]) */
}

def @func_8501() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
  %692 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) {
    %687 = @func_5272() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
    %688 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
    %689 = @func_5008() /* ty=Tensor[(11, 15, ?), int16] */;
    %690 = %687.0;
    %691 = %688.0;
    (%689, %690, %691)
  };
  %692() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */
}

def @func_6228(%var_6204: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(1232), float64], Tensor[(11, 15, ?), float32], Tensor[(13, 5, 4), float64]) {
  %693 = cast(%var_6204, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %694 = reshape(%693, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %695 = @func_3515(%694) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %696 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %697 = %696.0;
  %698 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %699 = %698.0;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %701 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%697, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %704 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
  %705 = %695.0;
  %706 = floor_mod(%702, %703) /* ty=Tensor[(11, 15, ?), float32] */;
  %707 = %704.0;
  (%705, %var_6204, %706, %707)
}

def @func_7521() -> Tensor[(11, 15, ?), int16] {
  %708 = @func_6611() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
  %708.0
}

def @func_6535(%var_6534: Tensor[(128, 28), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(128, 28), int32], Tensor[(591360), bool]) {
  %717 = fn (%var_6527: Tensor[(128, 28), int32]) -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(128, 28), int32], Tensor[(591360), bool]) {
    %709 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %710 = cast(%var_6527, dtype="int32") /* ty=Tensor[(128, 28), int32] */;
    %711 = cast(meta[relay.Constant][34] /* ty=Tensor[(591360), bool] */, dtype="bool") /* ty=Tensor[(591360), bool] */;
    %712 = reshape(%710, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
    %713 = reshape(%711, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
    %714 = @func_5567(%712, %713) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
    %715 = %709.0;
    %716 = %714.1;
    (%715, %716, %var_6527, meta[relay.Constant][34] /* ty=Tensor[(591360), bool] */)
  };
  %717(%var_6534) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(128, 28), int32], Tensor[(591360), bool]) */
}

def @func_3518(%var_3516: Tensor[(7, 11, 16), float64]) -> (Tensor[(7, 11, 16), float64],) {
  @func_3515(%var_3516) /* ty=(Tensor[(7, 11, 16), float64],) */
}

def @func_1385(%var_1383: Tensor[(5, 8, 2), float64], %var_1384: Tensor[(3584), int32]) -> (Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %723 = fn (%var_1370: Tensor[(5, 8, 2), float64], %var_1374: Tensor[(3584), int32]) -> (Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
    %718 = cast(%var_1370, dtype="float64") /* ty=Tensor[(5, 8, 2), float64] */;
    %719 = cast(%var_1374, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %720 = reshape(%719, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
    %721 = rsqrt(%718) /* ty=Tensor[(5, 8, 2), float64] */;
    %722 = @func_276(%720) /* ty=Tensor[(16, 16, 14), int32] */;
    (%721, %722, %var_1374)
  };
  %723(%var_1383, %var_1384) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */
}

def @func_6349() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) {
  %724 = cast(meta[relay.Constant][35] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %725 = cast(meta[relay.Constant][36] /* ty=Tensor[(591360), bool] */, dtype="bool") /* ty=Tensor[(591360), bool] */;
  %726 = reshape(%724, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %727 = reshape(%725, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
  %728 = @func_5567(%726, %727) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
  %729 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %730 = %728.1;
  (%729, %730, meta[relay.Constant][35] /* ty=Tensor[(3584), int32] */, meta[relay.Constant][36] /* ty=Tensor[(591360), bool] */)
}

def @func_4298(%var_4295: Tensor[(3584), int32], %var_4296: Tensor[(540), float32], %var_4297: Tensor[(616, 2), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(5, 8, 2), float64], Tensor[(3584), int32], Tensor[(11, 15, 80), uint8], Tensor[(13, 10, 5), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32], Tensor[(616, 2), int64], Tensor[(616, 2), int8], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), uint32]) {
  @func_4293(%var_4295, %var_4296, %var_4297) /* ty=(Tensor[(7, 11, 16), float64], Tensor[(5, 8, 2), float64], Tensor[(3584), int32], Tensor[(11, 15, 80), uint8], Tensor[(13, 10, 5), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32], Tensor[(616, 2), int64], Tensor[(616, 2), int8], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), uint32]) */
}

def @func_334(%var_330: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  %731 = cast(%var_330, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %732 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(13, 10, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 10, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %735 = floor_divide(%733, %734) /* ty=Tensor[(13, 10, 5), float32] */;
  (%735,)
}

def @func_3023() -> Tensor[(11, 15, ?), int16] {
  @func_3021() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_5107() -> (Tensor[(13, 5, 4), float64],) {
  @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */
}

def @func_6701() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %744 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
    %736 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %737 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %738 = @func_4124() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %739 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
    %740 = %736.0;
    %741 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
    %742 = %737.0;
    %743 = %738.1;
    (%739, %740, %741, %742, %743)
  };
  %744() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_4921() -> Tensor[(11, 15, ?), float32] {
  @func_4919() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_7086() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %748 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
    %745 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
    %746 = @func_6435() /* ty=Tensor[(11, 15, ?), float32] */;
    %747 = %745.0;
    (%746, %747)
  };
  %748() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */
}

def @func_7977(%var_7968: Tensor[(1540), bool]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) {
  %749 = @func_3816() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %750 = cast(%var_7968, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %751 = reshape(%750, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %752 = %749.0;
  %753 = @func_6046() /* ty=Tensor[(11, 15, ?), int16] */;
  %754 = @func_2398(%751) /* ty=Tensor[(14, 10, 11), bool] */;
  (%752, %753, %754, %var_7968)
}

def @func_8948() -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) {
  %759 = fn () -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) {
    %755 = @func_5105() /* ty=(Tensor[(13, 5, 4), float64],) */;
    %756 = @func_8042() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) */;
    %757 = %755.0;
    %758 = %756.0;
    (%757, %758)
  };
  %759() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), float64]) */
}

def @func_3817() -> (Tensor[(11, 15, ?), int16],) {
  %762 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %760 = @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %761 = %760.0;
    (%761,)
  };
  %762() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_2974(%var_2897: Tensor[(8, 13, 11), int8], %var_2933: Tensor[(1815), int16], %var_2934: Tensor[(1, 2475), int16], %var_2935: Tensor[(325, 2), float32], %var_2950: Tensor[(286, 6), bool], %var_2956: Tensor[(3584), int32]) -> (Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) {
  %763 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
  %764 = cast(%var_2897, dtype="bool") /* ty=Tensor[(8, 13, 11), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(8, 13, 11), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(%var_2897, dtype="float32") /* ty=Tensor[(8, 13, 11), float32] */;
  %769 = cast(%var_2950, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %770 = reshape(%769, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), bool] */;
  %771 = @func_2319(%770) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) */;
  %772 = cast(%var_2956, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %773 = reshape(%772, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %774 = @func_2689(%773) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
  %775 = cast(%var_2933, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %776 = cast(%var_2933, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %777 = cast(%var_2934, dtype="int16") /* ty=Tensor[(1, 2475), int16] */;
  %778 = cast(%var_2935, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %779 = reshape(%776, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int16] */;
  %780 = reshape(%777, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int16] */;
  %781 = reshape(%778, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %782 = @func_2006(%779, %780, %781) /* ty=(Tensor[(11, 15, 11), int32], Tensor[(11, 15, 15), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %783 = %782.3;
  %784 = cast(meta[relay.Constant][38] /* ty=Tensor[(650), float32] */, dtype="bool") /* ty=Tensor[(650), bool] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(1), int32] */;
  %786 = cast(%783, dtype="bool") /* ty=Tensor[(650), bool] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?), bool] */;
  %788 = not_equal(%766, %767) /* ty=Tensor[(8, 13, 11), bool] */;
  %789 = cos(%768) /* ty=Tensor[(8, 13, 11), float32] */;
  %790 = %771.0;
  %791 = %774.4;
  %792 = tan(%775) /* ty=Tensor[(1815), float32] */;
  %793 = less_equal(%786, %787) /* ty=Tensor[(650), bool] */;
  (%788, %789, %var_2934, %var_2935, %790, %var_2950, %791, %var_2956, %792, %793)
}

def @func_3614(%var_3612: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) {
  @func_3611(%var_3612) /* ty=(Tensor[(7, 11, 16), bool], Tensor[(11, 15, 1232), int32], Tensor[(11, 15, ?), float64]) */
}

def @func_3099() -> (Tensor[(11, 15, ?), int16],) {
  @func_3097() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_4754() -> (Tensor[(11, 15, ?), int16],) {
  %796 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %794 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %795 = %794.0;
    (%795,)
  };
  %796() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_3440() -> Tensor[(11, 15, ?), float32] {
  %797 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  rsqrt(%799) /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_5583() -> (Tensor[(11, 15, ?), int16],) {
  @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_5294() -> Tensor[(11, 15, ?), int16] {
  @func_3021() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_7359() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  @func_7357() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_5969(%var_5967: Tensor[(660), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(660), int16]) {
  @func_5966(%var_5967) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(660), int16], Tensor[(660), int16]) */
}

def @func_3686() -> (Tensor[(11, 15, ?), float32],) {
  %802 = fn () -> (Tensor[(11, 15, ?), float32],) {
    %800 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %801 = %800.0;
    (%801,)
  };
  %802() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_8388(%var_8386: Tensor[(3, 6, 1), uint64], %var_8387: Tensor[(3, 6, 8), uint64]) -> (Tensor[(3, 6, 8), uint64], Tensor[(11, 15, 540), bool], Tensor[(89100, 1), float32]) {
  %810 = fn (%var_8354: Tensor[(3, 6, 1), uint64], %var_8355: Tensor[(3, 6, 8), uint64]) -> (Tensor[(3, 6, 8), uint64], Tensor[(11, 15, 540), bool], Tensor[(89100, 1), float32]) {
    %803 = cast(%var_8354, dtype="uint64") /* ty=Tensor[(3, 6, 1), uint64] */;
    %804 = cast(%var_8355, dtype="uint64") /* ty=Tensor[(3, 6, 8), uint64] */;
    %805 = cast(meta[relay.Constant][39] /* ty=Tensor[(89100, 1), float32] */, dtype="float32") /* ty=Tensor[(89100, 1), float32] */;
    %806 = reshape(%805, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
    %807 = @func_5635(%806) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
    %808 = bitwise_xor(%803, %804) /* ty=Tensor[(3, 6, 8), uint64] */;
    %809 = %807.0;
    (%808, %809, meta[relay.Constant][39] /* ty=Tensor[(89100, 1), float32] */)
  };
  %810(%var_8386, %var_8387) /* ty=(Tensor[(3, 6, 8), uint64], Tensor[(11, 15, 540), bool], Tensor[(89100, 1), float32]) */
}

def @func_3167(%var_3149: Tensor[(5, 9, 9), float32], %var_3150: Tensor[(5, 9, 9), float32]) -> (Tensor[(5, 9, 9), bool], Tensor[(16, 16, 14), int32], Tensor[(4, 896), int32]) {
  %811 = cast(%var_3150, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %812 = shape_of(%var_3149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%var_3149, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %815 = floor_mod(%813, %814) /* ty=Tensor[(5, 9, 9), float32] */;
  %816 = cast(%var_3150, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 896), int32] */, dtype="int32") /* ty=Tensor[(4, 896), int32] */;
  %821 = reshape(%820, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
  %822 = logical_or(%818, %819) /* ty=Tensor[(5, 9, 9), bool] */;
  %823 = @func_276(%821) /* ty=Tensor[(16, 16, 14), int32] */;
  (%822, %823, meta[relay.Constant][40] /* ty=Tensor[(4, 896), int32] */)
}

def @func_3965() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 13, 12), bool], Tensor[(1716), bool]) {
  %834 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 13, 12), bool], Tensor[(1716), bool]) {
    %824 = @func_2378() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32]) */;
    %825 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %826 = @func_2288() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %827 = cast(meta[relay.Constant][41] /* ty=Tensor[(1716), bool] */, dtype="bool") /* ty=Tensor[(1716), bool] */;
    %828 = reshape(%827, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), bool] */;
    %829 = @func_2319(%828) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) */;
    %830 = %824.1;
    %831 = %825.1;
    %832 = %826.0;
    %833 = %829.0;
    (%830, %831, %832, %833, meta[relay.Constant][41] /* ty=Tensor[(1716), bool] */)
  };
  %834() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 13, 12), bool], Tensor[(1716), bool]) */
}

def @func_4125() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
  %837 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) {
    %835 = @func_3440() /* ty=Tensor[(11, 15, ?), float32] */;
    %836 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
    (%835, %836)
  };
  %837() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_8411() -> (Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) {
  %838 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %839 = reshape(%838, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %840 = @func_7915(%839) /* ty=(Tensor[(11, 15, 7), float64], Tensor[(1155), float32], Tensor[(16, 2, 7), bool], Tensor[(224), uint8], Tensor[(11, 15, 15), int64], Tensor[(2475), float32], Tensor[(3584), int64], Tensor[(16, 16, 14), int32], Tensor[(80), float64], Tensor[(11, 15, 3584), uint32], Tensor[(16, 16, 14), uint8], Tensor[(11, 15, ?), int16], Tensor[(89100), float32], Tensor[(65, 10), float32], Tensor[(650), float32]) */;
  %841 = @func_6452() /* ty=Tensor[(13, 5, 4), float64] */;
  %842 = %840.5;
  (%841, %842, meta[relay.Constant][42] /* ty=Tensor[(40, 2), float64] */)
}

def @func_337(%var_335: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  @func_334(%var_335) /* ty=(Tensor[(13, 10, 5), float32],) */
}

def @func_4293(%var_4171: Tensor[(3584), int32], %var_4219: Tensor[(540), float32], %var_4229: Tensor[(616, 2), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(5, 8, 2), float64], Tensor[(3584), int32], Tensor[(11, 15, 80), uint8], Tensor[(13, 10, 5), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32], Tensor[(616, 2), int64], Tensor[(616, 2), int8], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), uint32]) {
  %843 = cast(meta[relay.Constant][43] /* ty=Tensor[(616, 2), float64] */, dtype="float64") /* ty=Tensor[(616, 2), float64] */;
  %844 = reshape(%843, newshape=[7, 11, 16]) /* ty=Tensor[(7, 11, 16), float64] */;
  %845 = @func_3515(%844) /* ty=(Tensor[(7, 11, 16), float64],) */;
  %846 = cast(meta[relay.Constant][44] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %847 = cast(%var_4171, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %848 = reshape(%846, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float64] */;
  %849 = reshape(%847, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %850 = @func_1382(%848, %849) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */;
  %851 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %852 = %851.0;
  %853 = cast(%852, dtype="uint8") /* ty=Tensor[(11, 15, ?), uint8] */;
  %854 = cast(meta[relay.Constant][44] /* ty=Tensor[(80), float64] */, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %855 = cast(%var_4171, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %856 = reshape(%855, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %857 = @func_2689(%856) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(3584), float64]) */;
  %858 = cast(meta[relay.Constant][43] /* ty=Tensor[(616, 2), float64] */, dtype="float64") /* ty=Tensor[(616, 2), float64] */;
  %859 = acosh(%858) /* ty=Tensor[(616, 2), float64] */;
  %860 = cast(%var_4229, dtype="int64") /* ty=Tensor[(616, 2), int64] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(2), int32] */;
  %862 = cast(%859, dtype="int64") /* ty=Tensor[(616, 2), int64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %864 = cast(%var_4229, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
  %865 = shape_of(%859, dtype="int32") /* ty=Tensor[(2), int32] */;
  %866 = cast(%859, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %868 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %869 = cast(%var_4219, dtype="float32") /* ty=Tensor[(540), float32] */;
  %870 = reshape(%869, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %871 = @func_2721(%870) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
  %872 = %871.1;
  %873 = cast(%872, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %874 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%852, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %877 = %845.0;
  %878 = %850.0;
  %879 = right_shift(%853, %854) /* ty=Tensor[(11, 15, 80), uint8] */;
  %880 = %857.2;
  %881 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
  %882 = left_shift(%862, %863) /* ty=Tensor[(616, 2), int64] */;
  %883 = add(%866, %867) /* ty=Tensor[(616, 2), int8] */;
  %884 = %868.0;
  %885 = subtract(%875, %876) /* ty=Tensor[(11, 15, ?), uint32] */;
  (%877, %878, %var_4171, %879, %880, %881, %var_4219, %882, %883, %884, %885)
}

def @func_1603(%var_1601: Tensor[(11, 15, 7), int16]) -> (Tensor[(11, 15, 7), uint16],) {
  @func_1600(%var_1601) /* ty=(Tensor[(11, 15, 7), uint16],) */
}

def @func_3044() -> (Tensor[(11, 15, ?), int16],) {
  %888 = fn () -> (Tensor[(11, 15, ?), int16],) {
    %886 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %887 = %886.0;
    (%887,)
  };
  %888() /* ty=(Tensor[(11, 15, ?), int16],) */
}

def @func_9513(%var_9511: Tensor[(4, 13, 11), float32]) -> (Tensor[(4, 13, 11), float32], Tensor[(11, 15, ?), int16]) {
  @func_9510(%var_9511) /* ty=(Tensor[(4, 13, 11), float32], Tensor[(11, 15, ?), int16]) */
}

def @func_8099(%var_8098: Tensor[(5, 132), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 132), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32]) {
  %903 = fn (%var_8074: Tensor[(5, 132), int16]) -> (Tensor[(11, 15, ?), int16], Tensor[(5, 132), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32]) {
    %889 = @func_6611() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %890 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
    %891 = %890.3;
    %892 = cast(%var_8074, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(2), int32] */;
    %894 = cast(%891, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %896 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %897 = reshape(%896, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
    %898 = @func_2721(%897) /* ty=(Tensor[(15, 4, 9), float32], Tensor[(11, 15, ?), int16]) */;
    %899 = %889.0;
    %900 = not_equal(%894, %895) /* ty=Tensor[(5, 132), bool] */;
    %901 = @func_5518() /* ty=Tensor[(11, 15, ?), float32] */;
    %902 = %898.1;
    (%899, %900, %901, %902, meta[relay.Constant][45] /* ty=Tensor[(540), float32] */)
  };
  %903(%var_8098) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(5, 132), bool], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(540), float32]) */
}

def @func_7523() -> Tensor[(11, 15, ?), int16] {
  @func_7521() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_7806() -> (Tensor[(11, 15, ?), float32],) {
  %904 = @func_4952() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), float32]) */;
  %905 = %904.3;
  (%905,)
}

def @func_9303() -> (Tensor[(11, 15, ?), float32],) {
  %906 = @func_7727() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
  %907 = %906.0;
  (%907,)
}

def @func_8527(%var_8525: Tensor[(6, 12, 5), int16]) -> (Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) {
  @func_8524(%var_8525) /* ty=(Tensor[(6, 12, 5), int16], Tensor[(11, 15, ?), int16], Tensor[(6, 12, 5), float32]) */
}

def @func_6179(%var_6158: Tensor[(330), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 2), float64], Tensor[(330), int16]) {
  %908 = @func_3685() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %909 = cast(%var_6158, dtype="int16") /* ty=Tensor[(330), int16] */;
  %910 = reshape(%909, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
  %911 = @func_3848(%910) /* ty=(Tensor[(11, 15, 2), float64],) */;
  %912 = %908.0;
  %913 = %911.0;
  (%912, %913, %var_6158)
}

def @func_7491(%var_7490: Tensor[(5, 66), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 2), uint32], Tensor[(5, 66), int16]) {
  %926 = fn (%var_7477: Tensor[(5, 66), int16]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 2), uint32], Tensor[(5, 66), int16]) {
    %914 = @func_4047() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */;
    %915 = cast(meta[relay.Constant][46] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
    %916 = reshape(%915, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int16] */;
    %917 = @func_2038(%916) /* ty=(Tensor[(11, 15, 4), bool],) */;
    %918 = @func_6588() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16]) */;
    %919 = cast(%var_7477, dtype="int16") /* ty=Tensor[(5, 66), int16] */;
    %920 = reshape(%919, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), int16] */;
    %921 = @func_4436(%920) /* ty=(Tensor[(11, 15, 2), uint32],) */;
    %922 = %914.0;
    %923 = %917.0;
    %924 = %918.4;
    %925 = %921.0;
    (%922, %923, meta[relay.Constant][46] /* ty=Tensor[(660), int16] */, %924, %925, %var_7477)
  };
  %926(%var_7490) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int16], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 2), uint32], Tensor[(5, 66), int16]) */
}

def @func_5637(%var_5636: Tensor[(11, 15, 540), float32]) -> (Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) {
  %936 = fn (%var_5628: Tensor[(11, 15, 540), float32]) -> (Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) {
    %927 = @func_4689() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(8, 13, 11), int8], Tensor[(11, 15, 540), float32], Tensor[(11, 15, ?), float64]) */;
    %928 = %927.2;
    %929 = cast(%var_5628, dtype="bool") /* ty=Tensor[(11, 15, 540), bool] */;
    %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
    %931 = cast(%928, dtype="bool") /* ty=Tensor[(11, 15, 540), bool] */;
    %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %933 = @func_1764() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */;
    %934 = greater(%931, %932) /* ty=Tensor[(11, 15, 540), bool] */;
    %935 = %933.0;
    (%934, %935)
  };
  %936(%var_5636) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */
}

def @func_9463(%var_9462: Tensor[(89100), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 540), bool], Tensor[(89100), float32]) {
  %943 = fn (%var_9456: Tensor[(89100), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 540), bool], Tensor[(89100), float32]) {
    %937 = @func_3637() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), bool], Tensor[(5, 132), int16]) */;
    %938 = cast(%var_9456, dtype="float32") /* ty=Tensor[(89100), float32] */;
    %939 = reshape(%938, newshape=[11, 15, 540]) /* ty=Tensor[(11, 15, 540), float32] */;
    %940 = @func_5635(%939) /* ty=(Tensor[(11, 15, 540), bool], Tensor[(11, 15, ?), int16]) */;
    %941 = %937.0;
    %942 = %940.0;
    (%941, %942, %var_9456)
  };
  %943(%var_9462) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, 540), bool], Tensor[(89100), float32]) */
}

def @func_6231(%var_6229: Tensor[(1232), float64]) -> (Tensor[(7, 11, 16), float64], Tensor[(1232), float64], Tensor[(11, 15, ?), float32], Tensor[(13, 5, 4), float64]) {
  @func_6228(%var_6229) /* ty=(Tensor[(7, 11, 16), float64], Tensor[(1232), float64], Tensor[(11, 15, ?), float32], Tensor[(13, 5, 4), float64]) */
}

def @func_4783(%var_4781: Tensor[(2, 6, 15), uint16]) -> (Tensor[(2, 6, 15), uint16],) {
  @func_4780(%var_4781) /* ty=(Tensor[(2, 6, 15), uint16],) */
}

def @func_5455() -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) {
  %949 = fn () -> (Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) {
    %944 = cast(meta[relay.Constant][47] /* ty=Tensor[(1540), bool] */, dtype="bool") /* ty=Tensor[(1540), bool] */;
    %945 = reshape(%944, newshape=[1540]) /* ty=Tensor[(1540), bool] */;
    %946 = @func_4378(%945) /* ty=(Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) */;
    %947 = @func_2569() /* ty=Tensor[(8, 13, 11), int8] */;
    %948 = %946.3;
    (%947, %948, meta[relay.Constant][47] /* ty=Tensor[(1540), bool] */)
  };
  %949() /* ty=(Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16], Tensor[(1540), bool]) */
}

def @func_9158(%var_9120: Tensor[(2475), int16], %var_9121: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), float32], Tensor[(4, 896), int32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32]) {
  %950 = cast(meta[relay.Constant][48] /* ty=Tensor[(1815), int16] */, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %951 = cast(%var_9120, dtype="int16") /* ty=Tensor[(2475), int16] */;
  %952 = cast(%var_9121, dtype="float32") /* ty=Tensor[(650), float32] */;
  %953 = reshape(%950, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %954 = reshape(%951, newshape=[2475]) /* ty=Tensor[(2475), int16] */;
  %955 = reshape(%952, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %956 = @func_5064(%953, %954, %955) /* ty=(Tensor[(11, 15, ?), float32], Tensor[(8, 13, 11), int8], Tensor[(325, 2), float32], Tensor[(1815), int16], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(1716), bool], Tensor[(4, 896), int32], Tensor[(3584), int32]) */;
  %957 = @func_5149() /* ty=Tensor[(11, 15, ?), float32] */;
  %958 = %956.7;
  (%957, %958, meta[relay.Constant][48] /* ty=Tensor[(1815), int16] */, %var_9120, %var_9121)
}

def @func_5570(%var_5568: Tensor[(3584), int32], %var_5569: Tensor[(11, 15, 3584), bool]) -> (Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) {
  %974 = fn (%var_5530: Tensor[(3584), int32], %var_5554: Tensor[(11, 15, 3584), bool]) -> (Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) {
    %959 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %960 = %959.0;
    %961 = cast(%var_5530, dtype="bool") /* ty=Tensor[(3584), bool] */;
    %962 = cast(%960, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %963 = not_equal(%961, %962) /* ty=Tensor[(11, 15, 3584), bool] */;
    %964 = cast(%var_5554, dtype="float64") /* ty=Tensor[(11, 15, 3584), float64] */;
    %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
    %966 = cast(%963, dtype="float64") /* ty=Tensor[(11, 15, 3584), float64] */;
    %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %968 = cast(%var_5530, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %969 = reshape(%968, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
    %970 = @func_276(%969) /* ty=Tensor[(16, 16, 14), int32] */;
    %971 = cast(%970, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
    %972 = divide(%966, %967) /* ty=Tensor[(11, 15, 3584), float64] */;
    %973 = sigmoid(%971) /* ty=Tensor[(16, 16, 14), float64] */;
    (%972, %973)
  };
  %974(%var_5568, %var_5569) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */
}

def @func_3294() -> (Tensor[(11, 15, ?), float32],) {
  %978 = fn () -> (Tensor[(11, 15, ?), float32],) {
    %975 = @func_3244() /* ty=Tensor[(11, 15, ?), float64] */;
    %976 = cast(%975, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
    %977 = sqrt(%976) /* ty=Tensor[(11, 15, ?), float32] */;
    (%977,)
  };
  %978() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_2322(%var_2320: Tensor[(11, 13, 12), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) {
  @func_2319(%var_2320) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(11, 13, 12), float64]) */
}

def @func_2610() -> (Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) {
  @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */
}

def @func_9484() -> (Tensor[(11, 15, ?), float32],) {
  @func_9482() /* ty=(Tensor[(11, 15, ?), float32],) */
}

def @func_5491() -> Tensor[(11, 15, ?), int16] {
  %980 = fn () -> Tensor[(11, 15, ?), int16] {
    %979 = @func_3773() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(135, 3), float32], Tensor[(14, 10, 11), bool], Tensor[(1540), bool]) */;
    %979.0
  };
  %980() /* ty=Tensor[(11, 15, ?), int16] */
}

def @func_4560(%var_4559: Tensor[(14, 16, 6), float64]) -> (Tensor[(14, 16, 6), float64], Tensor[(11, 15, ?), float32]) {
  %984 = fn (%var_4548: Tensor[(14, 16, 6), float64]) -> (Tensor[(14, 16, 6), float64], Tensor[(11, 15, ?), float32]) {
    %981 = cast(%var_4548, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
    %982 = rsqrt(%981) /* ty=Tensor[(14, 16, 6), float64] */;
    %983 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
    (%982, %983)
  };
  %984(%var_4559) /* ty=(Tensor[(14, 16, 6), float64], Tensor[(11, 15, ?), float32]) */
}

def @func_9406(%var_9396: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), float64], Tensor[(11, 15, ?), float64]) {
  %985 = cast(%var_9396, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %986 = exp(%985) /* ty=Tensor[(5, 15, 5), float64] */;
  %987 = @func_5902() /* ty=Tensor[(11, 15, ?), float64] */;
  (%986, %987)
}

def @func_5520() -> Tensor[(11, 15, ?), float32] {
  @func_5518() /* ty=Tensor[(11, 15, ?), float32] */
}

def @func_4436(%var_4423: Tensor[(11, 15, 2), int16]) -> (Tensor[(11, 15, 2), uint32],) {
  %988 = @func_1736() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %989 = %988.0;
  %990 = cast(%989, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %991 = cast(%var_4423, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
  %992 = logical_xor(%990, %991) /* ty=Tensor[(11, 15, 2), uint32] */;
  (%992,)
}

def @func_9324() -> Tensor[(11, 15, ?), int16] {
  %993 = @func_5581() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %993.0
}

def @func_9482() -> (Tensor[(11, 15, ?), float32],) {
  %994 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
  %995 = %994.0;
  (%995,)
}

def @func_9076(%var_8977: Tensor[(650), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool], Tensor[(1815), int16], Tensor[(2, 616), float64], Tensor[(11, 15, ?), float32], Tensor[(11, 15, 650), bool], Tensor[(591360), bool], Tensor[(40, 2), float64], Tensor[(11, 15, 650), uint32], Tensor[(11, 15, 650), bool]) {
  %996 = @func_8042() /* ty=(Tensor[(11, 15, ?), float64], Tensor[(11, 15, ?), int16]) */;
  %997 = cast(meta[relay.Constant][49] /* ty=Tensor[(1815), int16] */, dtype="int16") /* ty=Tensor[(1815), int16] */;
  %998 = cast(%var_8977, dtype="float32") /* ty=Tensor[(650), float32] */;
  %999 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 616), float64] */, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
  %1000 = reshape(%997, newshape=[1815]) /* ty=Tensor[(1815), int16] */;
  %1001 = reshape(%998, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1002 = reshape(%999, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %1003 = @func_8218(%1000, %1001, %1002) /* ty=(Tensor[(3584), int32], Tensor[(2475), int16], Tensor[(650), float32], Tensor[(11, 15, 1815), bool], Tensor[(7, 11, 16), bool], Tensor[(1, 1232), float64], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 1815), bool]) */;
  %1004 = cast(%var_8977, dtype="float64") /* ty=Tensor[(650), float64] */;
  %1005 = sin(%1004) /* ty=Tensor[(650), float64] */;
  %1006 = @func_5230() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %1007 = %1006.0;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(650), bool] */;
  %1009 = cast(%1007, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %1010 = @func_6349() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), float64], Tensor[(3584), int32], Tensor[(591360), bool]) */;
  %1011 = @func_8411() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(2475), float32], Tensor[(40, 2), float64]) */;
  %1012 = cast(%1007, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %1013 = cast(%1005, dtype="bool") /* ty=Tensor[(650), bool] */;
  %1014 = logical_or(%1012, %1013) /* ty=Tensor[(11, 15, 650), bool] */;
  %1015 = cast(%1014, dtype="uint32") /* ty=Tensor[(11, 15, 650), uint32] */;
  %1016 = cast(%1007, dtype="uint32") /* ty=Tensor[(11, 15, ?), uint32] */;
  %1017 = cast(%1014, dtype="bool") /* ty=Tensor[(11, 15, 650), bool] */;
  %1018 = cast(%1005, dtype="bool") /* ty=Tensor[(650), bool] */;
  %1019 = %996.1;
  %1020 = %1003.3;
  %1021 = @func_6265() /* ty=Tensor[(11, 15, ?), float32] */;
  %1022 = not_equal(%1008, %1009) /* ty=Tensor[(11, 15, 650), bool] */;
  %1023 = %1010.3;
  %1024 = %1011.2;
  %1025 = bitwise_or(%1015, %1016) /* ty=Tensor[(11, 15, 650), uint32] */;
  %1026 = logical_and(%1017, %1018) /* ty=Tensor[(11, 15, 650), bool] */;
  (%1019, %1020, meta[relay.Constant][49] /* ty=Tensor[(1815), int16] */, meta[relay.Constant][50] /* ty=Tensor[(2, 616), float64] */, %1021, %1022, %1023, %1024, %1025, %1026)
}

def @func_3137(%var_3135: Tensor[(270, 2), float32]) -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) {
  @func_3134(%var_3135) /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16], Tensor[(270, 2), float32]) */
}

def @func_2982(%var_2976: Tensor[(8, 13, 11), int8], %var_2977: Tensor[(1815), int16], %var_2978: Tensor[(1, 2475), int16], %var_2979: Tensor[(325, 2), float32], %var_2980: Tensor[(286, 6), bool], %var_2981: Tensor[(3584), int32]) -> (Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) {
  @func_2974(%var_2976, %var_2977, %var_2978, %var_2979, %var_2980, %var_2981) /* ty=(Tensor[(8, 13, 11), bool], Tensor[(8, 13, 11), float32], Tensor[(1, 2475), int16], Tensor[(325, 2), float32], Tensor[(11, 13, 12), bool], Tensor[(286, 6), bool], Tensor[(3584), float64], Tensor[(3584), int32], Tensor[(1815), float32], Tensor[(650), bool]) */
}

def @func_5413(%var_5411: Tensor[(15, 9, 8), int8]) -> (Tensor[(15, 9, 8), int8],) {
  @func_5410(%var_5411) /* ty=(Tensor[(15, 9, 8), int8],) */
}

def @func_6612() -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
  %1030 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) {
    %1027 = @func_2608() /* ty=(Tensor[(13, 5, 4), float64], Tensor[(11, 15, ?), int16]) */;
    %1028 = %1027.1;
    %1029 = @func_3788() /* ty=Tensor[(11, 15, ?), int16] */;
    (%1028, %1029)
  };
  %1030() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(11, 15, ?), int16]) */
}

def @func_3680() -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
  %1036 = fn () -> (Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) {
    %1031 = @func_3342() /* ty=(Tensor[(11, 15, ?), int16],) */;
    %1032 = cast(meta[relay.Constant][51] /* ty=Tensor[(3584), int32] */, dtype="int32") /* ty=Tensor[(3584), int32] */;
    %1033 = reshape(%1032, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), int32] */;
    %1034 = %1031.0;
    %1035 = @func_276(%1033) /* ty=Tensor[(16, 16, 14), int32] */;
    (%1034, %1035, meta[relay.Constant][51] /* ty=Tensor[(3584), int32] */)
  };
  %1036() /* ty=(Tensor[(11, 15, ?), int16], Tensor[(16, 16, 14), int32], Tensor[(3584), int32]) */
}

def @func_7728() -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
  %1040 = fn () -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) {
    %1037 = @func_3293() /* ty=(Tensor[(11, 15, ?), float32],) */;
    %1038 = @func_5149() /* ty=Tensor[(11, 15, ?), float32] */;
    %1039 = %1037.0;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(11, 15, ?), float32], Tensor[(11, 15, ?), float32]) */
}

def @func_8617(%var_8610: Tensor[(8, 16, 12), int16], %var_8611: Tensor[(8, 16, 12), int16]) -> (Tensor[(8, 16, 12), int16],) {
  %1041 = cast(%var_8611, dtype="int16") /* ty=Tensor[(8, 16, 12), int16] */;
  %1042 = shape_of(%var_8610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%var_8610, dtype="int16") /* ty=Tensor[(8, 16, 12), int16] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1045 = logical_xor(%1043, %1044) /* ty=Tensor[(8, 16, 12), int16] */;
  (%1045,)
}

def @func_7552(%var_7550: Tensor[(10, 15, 14), float64]) -> Tensor[(10, 15, 14), float64] {
  @func_7549(%var_7550) /* ty=Tensor[(10, 15, 14), float64] */
}

def @func_4378(%var_4337: Tensor[(1540), bool]) -> (Tensor[(11, 15, 12), float32], Tensor[(11, 15, 12), bool], Tensor[(1540), bool], Tensor[(11, 15, ?), int16], Tensor[(11, 15, 7), float64], Tensor[(1155), float64], Tensor[(14, 10, 11), float32], Tensor[(14, 10, 11), bool]) {
  %1046 = @func_3021() /* ty=Tensor[(11, 15, ?), int16] */;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(11, 15, ?), float32] */;
  %1048 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 12), int16] */, dtype="float32") /* ty=Tensor[(11, 15, 12), float32] */;
  %1049 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 15, 12), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 12), bool] */;
  %1050 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1051 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 12), int16] */, dtype="bool") /* ty=Tensor[(11, 15, 12), bool] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1053 = @func_3043() /* ty=(Tensor[(11, 15, ?), int16],) */;
  %1054 = cast(meta[relay.Constant][54] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %1055 = reshape(%1054, newshape=[11, 15, 7]) /* ty=Tensor[(11, 15, 7), float64] */;
  %1056 = @func_3265(%1055) /* ty=(Tensor[(11, 15, 7), float64],) */;
  %1057 = cast(%var_4337, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %1058 = reshape(%1057, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %1059 = @func_2398(%1058) /* ty=Tensor[(14, 10, 11), bool] */;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %1061 = cast(%var_4337, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %1062 = reshape(%1061, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), bool] */;
  %1063 = mod(%1047, %1048) /* ty=Tensor[(11, 15, 12), float32] */;
  %1064 = greater_equal(%1051, %1052) /* ty=Tensor[(11, 15, 12), bool] */;
  %1065 = %1053.0;
  %1066 = %1056.0;
  %1067 = sigmoid(%1060) /* ty=Tensor[(14, 10, 11), float32] */;
  %1068 = @func_2398(%1062) /* ty=Tensor[(14, 10, 11), bool] */;
  (%1063, %1064, %var_4337, %1065, %1066, meta[relay.Constant][54] /* ty=Tensor[(1155), float64] */, %1067, %1068)
}

def @func_9378(%var_9355: Tensor[(3584), int32]) -> (Tensor[(11, 15, ?), float32], Tensor[(11, 15, 3584), float64], Tensor[(3584), int32], Tensor[(3360, 176), bool]) {
  %1069 = cast(%var_9355, dtype="int32") /* ty=Tensor[(3584), int32] */;
  %1070 = cast(meta[relay.Constant][55] /* ty=Tensor[(3360, 176), bool] */, dtype="bool") /* ty=Tensor[(3360, 176), bool] */;
  %1071 = reshape(%1069, newshape=[3584]) /* ty=Tensor[(3584), int32] */;
  %1072 = reshape(%1070, newshape=[11, 15, 3584]) /* ty=Tensor[(11, 15, 3584), bool] */;
  %1073 = @func_5567(%1071, %1072) /* ty=(Tensor[(11, 15, 3584), float64], Tensor[(16, 16, 14), float64]) */;
  %1074 = @func_6265() /* ty=Tensor[(11, 15, ?), float32] */;
  %1075 = %1073.0;
  (%1074, %1075, %var_9355, meta[relay.Constant][55] /* ty=Tensor[(3360, 176), bool] */)
}

def @func_7745(%var_7744: Tensor[(11, 15, 15), float32]) -> Tensor[(11, 15, 15), int64] {
  %1079 = fn (%var_7735: Tensor[(11, 15, 15), float32]) -> Tensor[(11, 15, 15), int64] {
    %1076 = @func_2814() /* ty=Tensor[(11, 15, ?), float32] */;
    %1077 = cast(%1076, dtype="int64") /* ty=Tensor[(11, 15, ?), int64] */;
    %1078 = cast(%var_7735, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
    bitwise_xor(%1077, %1078) /* ty=Tensor[(11, 15, 15), int64] */
  };
  %1079(%var_7744) /* ty=Tensor[(11, 15, 15), int64] */
}

def @func_5331(%var_5329: Tensor[(1, 3584), int32], %var_5330: Tensor[(16, 16, 14), int32]) -> (Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) {
  @func_5327(%var_5329, %var_5330) /* ty=(Tensor[(5, 132), int16], Tensor[(1, 3584), int32], Tensor[(16, 16, 14), uint8], Tensor[(8, 13, 11), int8], Tensor[(11, 15, ?), int16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen639/build/output.py:3214: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen639/build/output.py", line 3219, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(864) tvmgen_default_fused_cast_cast_reshape_less_kernel0(signed char* __restrict__ T_less, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_less[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


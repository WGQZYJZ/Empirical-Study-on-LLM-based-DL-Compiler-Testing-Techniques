==========mod==========
#[version = "0.0.5"]
def @func_480(%var_404: uint16, %var_405: Tensor[(9, 5, 1), uint16], %var_458: Tensor[(1573), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1 = reshape(%0, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %2 = @func_105(%1) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %3 = cast(%var_404, dtype="uint16") /* ty=uint16 */;
  %4 = cast(%var_405, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
  %5 = minimum(%3, %4) /* ty=Tensor[(9, 5, 1), uint16] */;
  %6 = cast(%5, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
  %7 = cast(%var_404, dtype="uint16") /* ty=uint16 */;
  %8 = logical_xor(%6, %7) /* ty=Tensor[(9, 5, 1), uint16] */;
  %9 = cast(%8, dtype="int64") /* ty=Tensor[(9, 5, 1), int64] */;
  %10 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%5, dtype="int64") /* ty=Tensor[(9, 5, 1), int64] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %14 = cast(%var_458, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %15 = reshape(%13, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %16 = reshape(%14, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %17 = @func_277(%15, %16) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %19 = cast(%var_458, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %20 = reshape(%18, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %21 = reshape(%19, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %22 = @func_277(%20, %21) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %23 = %2.0;
  %24 = left_shift(%11, %12) /* ty=Tensor[(9, 5, ?), int64] */;
  %25 = %17.0;
  %26 = %22.1;
  (%23, meta[relay.Constant][0] /* ty=Tensor[(1638), float32] */, %24, %25, meta[relay.Constant][1] /* ty=Tensor[(121), float32] */, %var_458, %26)
}

def @func_15773() -> Tensor[(2, 6, 5), float64] {
  @func_15208() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_17387() -> Tensor[(2, 6, 5), float64] {
  %27 = @func_16487() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %27.0
}

def @func_17570() -> (Tensor[(2, 6, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(350, 1), float64], Tensor[(432), float32]) {
  %28 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(350, 1), float64] */, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %31 = reshape(%29, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %32 = reshape(%30, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %33 = @func_9281(%31, %32) /* ty=(Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) */;
  %34 = %28.0;
  %35 = %33.0;
  (%34, %35, meta[relay.Constant][2] /* ty=Tensor[(350, 1), float64] */, meta[relay.Constant][3] /* ty=Tensor[(432), float32] */)
}

def @func_15035() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) {
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %37 = reshape(%36, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %38 = @func_981(%37) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %41 = @func_8496() /* ty=Tensor[(2, 6, 5), float64] */;
  %42 = sigmoid(%40) /* ty=Tensor[(12, 3, 12), float32] */;
  (%41, meta[relay.Constant][4] /* ty=Tensor[(432), float32] */, %42)
}

def @func_8007(%var_8004: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) {
  %43 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %44 = cast(%var_8004, dtype="float32") /* ty=Tensor[(121), float32] */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %46 = reshape(%44, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %47 = reshape(%45, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %48 = @func_4923(%46, %47) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) */;
  %49 = %43.0;
  %50 = %48.7;
  (%49, %50, %var_8004, meta[relay.Constant][5] /* ty=Tensor[(432), float32] */)
}

def @func_8242() -> (Tensor[(2, 6, 5), float64],) {
  %51 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  (%51,)
}

def @func_9754() -> Tensor[(2, 6, 5), float64] {
  %52 = @func_7705() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %52.0
}

def @func_17435() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %53 = @func_14583() /* ty=Tensor[(2, 6, 5), float64] */;
  %54 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  (%53, %54)
}

def @func_12410(%var_12407: Tensor[(1152), float32]) -> (uint16, Tensor[(2, 6, 5), float64], Tensor[(21), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(1152), float32]) {
  %55 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
  %56 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %57 = cast(meta[relay.Constant][6] /* ty=Tensor[(21), uint32] */, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %58 = cast(meta[relay.Constant][7] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %59 = cast(%var_12407, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %60 = reshape(%57, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %61 = reshape(%58, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %62 = reshape(%59, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %63 = @func_9563(%60, %61, %62) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) */;
  %64 = %55.1;
  %65 = %56.1;
  %66 = %63.3;
  (%64, %65, %66, meta[relay.Constant][6] /* ty=Tensor[(21), uint32] */, meta[relay.Constant][7] /* ty=Tensor[(45), uint16] */, %var_12407)
}

def @func_16731() -> (Tensor[(3, 15, 12), float64], Tensor[(15, 9, 13), uint32]) {
  %67 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %68 = %67.1;
  %69 = @func_15841() /* ty=Tensor[(15, 9, 13), uint32] */;
  (%68, %69)
}

def @func_8683() -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) {
  %70 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
  %71 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %72 = %70.0;
  %73 = %71.2;
  %74 = @func_5327() /* ty=Tensor[(2, 6, 5), float64] */;
  (%72, %73, %74)
}

def @func_11972(%var_11959: Tensor[(45), float64]) -> (Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) {
  %75 = cast(meta[relay.Constant][8] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %76 = reshape(%75, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %77 = @func_10512(%76) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) */;
  %78 = cast(meta[relay.Constant][9] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
  %79 = reshape(%78, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %80 = @func_6426(%79) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %81 = cast(meta[relay.Constant][8] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %82 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(45), float64] */;
  %85 = tan(%84) /* ty=Tensor[(45), float64] */;
  %86 = cast(%var_11959, dtype="int64") /* ty=Tensor[(45), int64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(1), int32] */;
  %88 = cast(%85, dtype="int64") /* ty=Tensor[(45), int64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?), int64] */;
  %90 = %77.2;
  %91 = %80.1;
  %92 = sqrt(%81) /* ty=Tensor[(121), float32] */;
  %93 = bitwise_xor(%88, %89) /* ty=Tensor[(45), int64] */;
  %94 = @func_9308() /* ty=Tensor[(45), uint16] */;
  (%90, %91, meta[relay.Constant][9] /* ty=Tensor[(169, 15), float64] */, %92, %93, %94)
}

def @func_12165() -> (Tensor[(2, 6, 5), float64],) {
  %95 = @func_8475() /* ty=Tensor[(2, 6, 5), float64] */;
  (%95,)
}

def @func_4427(%var_4407: Tensor[(1152), float32], %var_4412: uint16, %var_4413: Tensor[(45, 1), uint16]) -> (Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) {
  %96 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %98 = cast(meta[relay.Constant][10] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %99 = cast(%var_4407, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %100 = cast(meta[relay.Constant][11] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %101 = cast(meta[relay.Constant][12] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %102 = cast(meta[relay.Constant][13] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %103 = cast(meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %104 = cast(%var_4412, dtype="uint16") /* ty=uint16 */;
  %105 = cast(%var_4413, dtype="uint16") /* ty=Tensor[(45, 1), uint16] */;
  %106 = reshape(%98, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), uint64] */;
  %107 = reshape(%99, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %108 = reshape(%100, newshape=[540]) /* ty=Tensor[(540), uint16] */;
  %109 = reshape(%101, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %110 = reshape(%102, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %111 = reshape(%103, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %112 = reshape(%104, newshape=[]) /* ty=uint16 */;
  %113 = reshape(%105, newshape=[15, 3]) /* ty=Tensor[(15, 3), uint16] */;
  %114 = @func_3394(%106, %107, %108, %109, %110, %111, %112, %113) /* ty=(Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) */;
  %115 = erf(%97) /* ty=Tensor[(2, 6, 5), float32] */;
  %116 = %114.6;
  (%115, %116, meta[relay.Constant][10] /* ty=Tensor[(672), uint64] */, %var_4407, meta[relay.Constant][11] /* ty=Tensor[(540), uint16] */, meta[relay.Constant][12] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][13] /* ty=Tensor[(1573), float32] */, meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, %var_4412, %var_4413)
}

def @func_9157(%var_9153: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %117 = cast(%var_9153, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %118 = reshape(%117, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %119 = @func_7140(%118) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %120 = @func_8496() /* ty=Tensor[(2, 6, 5), float64] */;
  %121 = %119.1;
  (%120, %121, %var_9153)
}

def @func_16563(%var_16533: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64], Tensor[(2535), float64], Tensor[(2535), float64], Tensor[(45), uint8], Tensor[(2, 6, 5), float64]) {
  %122 = @func_12935() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %123 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %124 = cast(%var_16533, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %125 = reshape(%124, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %126 = @func_10391(%125) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %127 = @func_15974() /* ty=(Tensor[(45), uint16],) */;
  %128 = %127.0;
  %129 = cast(meta[relay.Constant][15] /* ty=Tensor[(45), uint16] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(1), int32] */;
  %131 = cast(%128, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %133 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %134 = %122.0;
  %135 = %123.0;
  %136 = %126.2;
  %137 = bitwise_or(%131, %132) /* ty=Tensor[(45), uint8] */;
  %138 = %133.2;
  (%134, %135, %136, %var_16533, %137, %138)
}

def @func_16056() -> Tensor[(2, 6, 5), float64] {
  @func_10353() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_12685() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %139 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %140 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %141 = %139.0;
  %142 = %140.0;
  (%141, %142)
}

def @func_8475() -> Tensor[(2, 6, 5), float64] {
  %143 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %143.0
}

def @func_981(%var_960: Tensor[(12, 3, 12), float32]) -> (Tensor[(12, 3, 12), float32],) {
  %144 = cast(%var_960, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %145 = rsqrt(%144) /* ty=Tensor[(12, 3, 12), float32] */;
  (%145,)
}

def @func_8351() -> Tensor[(2, 6, 5), float64] {
  @func_8021() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_17684() -> Tensor[(2, 6, 5), float64] {
  @func_12910() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_5119(%var_5117: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) {
  %146 = cast(%var_5117, dtype="float32") /* ty=Tensor[(432), float32] */;
  %147 = reshape(%146, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %148 = @func_2539(%147) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %149 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %150 = %148.3;
  (%149, %150, %var_5117)
}

def @func_13644() -> Tensor[(2, 6, 5), float64] {
  %151 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %151.0
}

def @func_10004() -> (Tensor[(3, 15, 12), float64],) {
  %152 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %153 = %152.0;
  (%153,)
}

def @func_8119() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
  %154 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %155 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  %156 = %154.1;
  (%155, %156)
}

def @func_9308() -> Tensor[(45), uint16] {
  %157 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
  %157.0
}

def @func_10551() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %158 = @func_8717() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %159 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %160 = %158.0;
  %161 = %159.0;
  (%160, %161)
}

def @func_12213() -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) {
  %162 = cast(meta[relay.Constant][16] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %163 = reshape(%162, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %164 = @func_6426(%163) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %165 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %166 = reshape(%165, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %167 = @func_11972(%166) /* ty=(Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) */;
  %168 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %169 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
  %170 = %164.1;
  %171 = %167.1;
  %172 = %168.0;
  (%169, %170, meta[relay.Constant][16] /* ty=Tensor[(2535), float64] */, %171, meta[relay.Constant][17] /* ty=Tensor[(5, 9), float64] */, %172)
}

def @func_13438(%var_13414: float64, %var_13435: Tensor[(9, 60), uint16]) -> (Tensor[(2, 1, 8), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(2535, 1573), uint16], Tensor[(1152), float32], Tensor[(9, 60), uint16], Tensor[(1, 45), uint16]) {
  %173 = cast(%var_13414, dtype="float64") /* ty=float64 */;
  %174 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 8), float64] */;
  %175 = cast(meta[relay.Constant][19] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %176 = reshape(%175, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %177 = @func_6426(%176) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %178 = cast(meta[relay.Constant][20] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %179 = cast(%var_13435, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
  %180 = cast(meta[relay.Constant][19] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %181 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 45), uint16] */, dtype="uint16") /* ty=Tensor[(1, 45), uint16] */;
  %182 = reshape(%178, newshape=[96, 12]) /* ty=Tensor[(96, 12), float32] */;
  %183 = reshape(%179, newshape=[540]) /* ty=Tensor[(540), uint16] */;
  %184 = reshape(%180, newshape=[2535, 1]) /* ty=Tensor[(2535, 1), float64] */;
  %185 = reshape(%181, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %186 = @func_6197(%182, %183, %184, %185) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) */;
  %187 = divide(%173, %174) /* ty=Tensor[(2, 1, 8), float64] */;
  %188 = %177.1;
  %189 = %186.3;
  (%187, %188, meta[relay.Constant][19] /* ty=Tensor[(2535), float64] */, %189, meta[relay.Constant][20] /* ty=Tensor[(1152), float32] */, %var_13435, meta[relay.Constant][21] /* ty=Tensor[(1, 45), uint16] */)
}

def @func_8921(%var_8911: Tensor[(1, 225), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) {
  %190 = cast(%var_8911, dtype="uint16") /* ty=Tensor[(1, 225), uint16] */;
  %191 = reshape(%190, newshape=[5, 45]) /* ty=Tensor[(5, 45), uint16] */;
  %192 = @func_8078(%191) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) */;
  %193 = @func_8899() /* ty=Tensor[(2, 6, 5), float64] */;
  %194 = %192.1;
  (%193, %194, %var_8911)
}

def @func_15563() -> (Tensor[(432), float32],) {
  %195 = @func_15035() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) */;
  %196 = %195.1;
  (%196,)
}

def @func_5209() -> (Tensor[(2, 6, 5), float64],) {
  %197 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%197,)
}

def @func_15088() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %198 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %199 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %200 = %198.1;
  %201 = %199.0;
  (%200, %201)
}

def @func_14032(%var_14010: Tensor[(1, 121), float32], %var_14011: Tensor[(1573), float32]) -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(1, 121), float32], Tensor[(1573), float32]) {
  %202 = @func_10056() /* ty=(Tensor[(45), uint16],) */;
  %203 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %204 = cast(%var_14010, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %205 = cast(%var_14011, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %206 = reshape(%204, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %207 = reshape(%205, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %208 = @func_277(%206, %207) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %209 = cast(%var_14011, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %210 = rsqrt(%209) /* ty=Tensor[(1573), float32] */;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %212 = %202.0;
  %213 = %203.0;
  %214 = %208.3;
  %215 = asinh(%211) /* ty=Tensor[(1573), float32] */;
  (%212, %213, %214, %var_14010, %215)
}

def @func_14357() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %216 = @func_11687() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %217 = @func_13213() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %218 = %216.0;
  %219 = %217.0;
  (%218, %219)
}

def @func_5327() -> Tensor[(2, 6, 5), float64] {
  %220 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %220.0
}

def @func_14722() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %221 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %222 = @func_14583() /* ty=Tensor[(2, 6, 5), float64] */;
  %223 = %221.1;
  (%222, %223)
}

def @func_15974() -> (Tensor[(45), uint16],) {
  %224 = @func_9308() /* ty=Tensor[(45), uint16] */;
  (%224,)
}

def @func_17061() -> Tensor[(2, 6, 5), float64] {
  %225 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %225.0
}

def @func_10681() -> Tensor[(2, 6, 5), float64] {
  @func_6120() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_9071() -> (Tensor[(45), uint16],) {
  %226 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %227 = %226.5;
  (%227,)
}

def @func_4923(%var_4879: Tensor[(121), float32], %var_4891: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) {
  %228 = cast(%var_4879, dtype="float32") /* ty=Tensor[(121), float32] */;
  %229 = cast(meta[relay.Constant][22] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %230 = reshape(%228, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %231 = reshape(%229, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %232 = @func_277(%230, %231) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %233 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 195), float64] */, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %234 = %232.3;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %236 = cast(%var_4891, dtype="float32") /* ty=Tensor[(432), float32] */;
  %237 = reshape(%233, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %238 = reshape(%235, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %239 = reshape(%236, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %240 = @func_1256(%237, %238, %239) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %241 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 195), float64] */, dtype="float32") /* ty=Tensor[(13, 195), float32] */;
  %242 = atanh(%241) /* ty=Tensor[(13, 195), float32] */;
  %243 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 195), float32] */, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %245 = cast(%242, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %247 = cast(%242, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %248 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %249 = %240.2;
  %250 = mod(%245, %246) /* ty=Tensor[(13, 195), float64] */;
  %251 = log(%247) /* ty=Tensor[(13, 195), float64] */;
  (%248, %234, %var_4879, meta[relay.Constant][22] /* ty=Tensor[(1573), float32] */, %249, %var_4891, %250, %251)
}

def @func_7793(%var_7769: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) {
  %252 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %253 = cast(%var_7769, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %254 = cast(meta[relay.Constant][25] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %255 = reshape(%253, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %256 = reshape(%254, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %257 = @func_4379(%255, %256) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %258 = %252.1;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %260 = reshape(%259, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %261 = @func_4826(%260) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %262 = %257.3;
  %263 = %261.2;
  (%258, %262, %var_7769, meta[relay.Constant][25] /* ty=Tensor[(1573), float32] */, %263)
}

def @func_17446() -> Tensor[(2, 6, 5), float64] {
  @func_8351() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_6197(%var_6169: Tensor[(96, 12), float32], %var_6170: Tensor[(540), uint16], %var_6171: Tensor[(2535, 1), float64], %var_6181: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) {
  %264 = cast(meta[relay.Constant][26] /* ty=Tensor[(1573), float32] */, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
  %265 = cast(%var_6171, dtype="uint16") /* ty=Tensor[(2535, 1), uint16] */;
  %266 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %267 = cast(meta[relay.Constant][26] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %268 = reshape(%266, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %269 = reshape(%267, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %270 = @func_4379(%268, %269) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %271 = cast(%var_6169, dtype="float32") /* ty=Tensor[(96, 12), float32] */;
  %272 = cast(%var_6170, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %273 = cast(%var_6171, dtype="float64") /* ty=Tensor[(2535, 1), float64] */;
  %274 = cast(meta[relay.Constant][26] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %275 = reshape(%271, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float32] */;
  %276 = reshape(%272, newshape=[9, 60]) /* ty=Tensor[(9, 60), uint16] */;
  %277 = reshape(%273, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %278 = reshape(%274, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %279 = @func_2492(%275, %276, %277, %278) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) */;
  %280 = %279.8;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(121), float64] */;
  %282 = sigmoid(%281) /* ty=Tensor[(121), float64] */;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(121), float64] */;
  %284 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  %285 = right_shift(%264, %265) /* ty=Tensor[(2535, 1573), uint16] */;
  %286 = %270.0;
  %287 = log10(%283) /* ty=Tensor[(121), float64] */;
  (%284, %var_6169, %var_6170, %285, %286, %var_6181, %287)
}

def @func_12485(%var_12477: Tensor[(15, 13, 10), float64]) -> (Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) {
  %288 = cast(%var_12477, dtype="float64") /* ty=Tensor[(15, 13, 10), float64] */;
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %290 = reshape(%289, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %291 = @func_11326(%290) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
  %292 = atan(%288) /* ty=Tensor[(15, 13, 10), float64] */;
  %293 = %291.1;
  (%292, %293, meta[relay.Constant][27] /* ty=Tensor[(432), float32] */)
}

def @func_16266() -> Tensor[(2, 6, 5), float64] {
  %294 = @func_14747() /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %294.1
}

def @func_8930() -> Tensor[(3, 15, 12), uint16] {
  %295 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %295.1
}

def @func_10391(%var_10369: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %296 = cast(%var_10369, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %297 = reshape(%296, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %298 = @func_6426(%297) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %299 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %300 = %298.1;
  (%299, %300, %var_10369)
}

def @func_10321(%var_10318: Tensor[(225), uint16]) -> (Tensor[(45), uint16], Tensor[(432), float32], Tensor[(225), uint16]) {
  %301 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
  %302 = cast(%var_10318, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %303 = reshape(%302, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
  %304 = @func_8921(%303) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
  %305 = %301.0;
  %306 = %304.1;
  (%305, %306, %var_10318)
}

def @func_6426(%var_6397: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %307 = cast(%var_6397, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %308 = reshape(%307, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %309 = @func_5270(%308) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %310 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %311 = %309.1;
  (%310, %311, %var_6397)
}

def @func_14583() -> Tensor[(2, 6, 5), float64] {
  %312 = @func_7705() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %312.0
}

def @func_8318(%var_8307: Tensor[(1, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) {
  %313 = cast(%var_8307, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %314 = reshape(%313, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %315 = @func_8007(%314) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %316 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %317 = %315.1;
  (%316, %317, %var_8307)
}

def @func_16128() -> (Tensor[(11, 15, 8), float64], Tensor[(3, 15, 12), uint16]) {
  %318 = @func_13094() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) */;
  %319 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %320 = %318.0;
  %321 = %319.1;
  (%320, %321)
}

def @func_11687() -> (Tensor[(2, 6, 5), float64],) {
  %322 = @func_8717() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %323 = %322.0;
  (%323,)
}

def @func_11452() -> Tensor[(5, 7, 5), float64] {
  %324 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 5), float64] */;
  cos(%324) /* ty=Tensor[(5, 7, 5), float64] */
}

def @func_12774(%var_12767: Tensor[(1296), float32]) -> (Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1296), float32], Tensor[(1296), float32]) {
  %325 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %326 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
  %327 = cast(%var_12767, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %328 = reshape(%327, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %329 = @func_11107(%328) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %330 = %325.1;
  %331 = %326.0;
  %332 = %329.2;
  (%330, %331, %332, %var_12767)
}

def @func_8048(%var_8029: Tensor[(7, 14, 13), float32]) -> (Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) {
  %333 = cast(%var_8029, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %334 = sinh(%333) /* ty=Tensor[(7, 14, 13), float32] */;
  %335 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%334, %335)
}

def @func_11013(%var_10928: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) {
  %336 = cast(%var_10928, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %337 = cast(meta[relay.Constant][29] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %338 = cast(meta[relay.Constant][30] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %339 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %340 = reshape(%336, newshape=[96, 12]) /* ty=Tensor[(96, 12), float32] */;
  %341 = reshape(%337, newshape=[540]) /* ty=Tensor[(540), uint16] */;
  %342 = reshape(%338, newshape=[2535, 1]) /* ty=Tensor[(2535, 1), float64] */;
  %343 = reshape(%339, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %344 = @func_6197(%340, %341, %342, %343) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) */;
  %345 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %346 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %347 = cast(meta[relay.Constant][33] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %348 = reshape(%345, newshape=[]) /* ty=uint16 */;
  %349 = reshape(%346, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %350 = reshape(%347, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %351 = @func_480(%348, %349, %350) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %352 = %351.2;
  %353 = cast(%352, dtype="uint16") /* ty=Tensor[(9, 5, ?), uint16] */;
  %354 = cast(meta[relay.Constant][33] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %355 = reshape(%353, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %356 = reshape(%354, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %357 = @func_4379(%355, %356) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %358 = cast(meta[relay.Constant][33] /* ty=Tensor[(1573), float32] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %359 = cast(meta[relay.Constant][30] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %360 = reshape(%359, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %361 = @func_4565(%360) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
  %362 = cast(meta[relay.Constant][34] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %363 = reshape(%362, newshape=[5, 45]) /* ty=Tensor[(5, 45), uint16] */;
  %364 = @func_8078(%363) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) */;
  %365 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  %366 = %344.4;
  %367 = %357.2;
  %368 = tan(%358) /* ty=Tensor[(1573), float64] */;
  %369 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  %370 = %361.1;
  %371 = %364.0;
  (%365, %366, %var_10928, meta[relay.Constant][29] /* ty=Tensor[(540), uint16] */, meta[relay.Constant][30] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][31] /* ty=Tensor[(45), uint16] */, %352, meta[relay.Constant][32] /* ty=uint16 */, %367, %368, %369, %370, %371, meta[relay.Constant][34] /* ty=Tensor[(225), uint16] */)
}

def @func_7891(%var_7824: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) {
  %372 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %373 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %374 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 540), uint16] */, dtype="uint16") /* ty=Tensor[(1, 540), uint16] */;
  %375 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 540), uint16] */, dtype="uint16") /* ty=Tensor[(1, 540), uint16] */;
  %376 = reshape(%374, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %377 = reshape(%375, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %378 = @func_1452(%376, %377) /* ty=Tensor[(3, 15, 12), uint16] */;
  %379 = cast(%378, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %380 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(1, 540), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %381 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 540), uint16] */, dtype="bool") /* ty=Tensor[(1, 540), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %383 = cast(%var_7824, dtype="float32") /* ty=Tensor[(432), float32] */;
  %384 = reshape(%383, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %385 = @func_6518(%384) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
  %386 = %385.3;
  %387 = cast(%var_7824, dtype="float32") /* ty=Tensor[(432), float32] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(2), int32] */;
  %389 = cast(%386, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %391 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 21), uint32] */, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %392 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 45), uint16] */, dtype="uint16") /* ty=Tensor[(1, 45), uint16] */;
  %393 = reshape(%391, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %394 = reshape(%392, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %395 = @func_5676(%393, %394) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %396 = %395.0;
  %397 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 21), uint32] */, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %401 = %372.0;
  %402 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %403 = %373.1;
  %404 = not_equal(%381, %382) /* ty=Tensor[(?, 540), bool] */;
  %405 = mod(%389, %390) /* ty=Tensor[(36, 12), float32] */;
  %406 = greater_equal(%399, %400) /* ty=Tensor[(?, 3, 7), bool] */;
  (%401, %402, %403, %404, meta[relay.Constant][36] /* ty=Tensor[(1, 45), uint16] */, %405, %406)
}

def @func_13113() -> Tensor[(3, 15, 12), uint16] {
  %407 = @func_12101() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) */;
  %407.0
}

def @func_10269() -> (Tensor[(2, 6, 5), float64],) {
  %408 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%408,)
}

def @func_9416() -> Tensor[(45), uint16] {
  @func_9308() /* ty=Tensor[(45), uint16] */
}

def @func_14464() -> Tensor[(2, 6, 5), float64] {
  @func_8475() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_13269(%var_13246: float64, %var_13247: Tensor[(7, 1, 14), float64]) -> (Tensor[(7, 1, 14), float64], Tensor[(2, 6, 5), float64], Tensor[(48, 24), float32]) {
  %409 = cast(%var_13246, dtype="float64") /* ty=float64 */;
  %410 = cast(%var_13247, dtype="float64") /* ty=Tensor[(7, 1, 14), float64] */;
  %411 = cast(meta[relay.Constant][38] /* ty=Tensor[(48, 24), float32] */, dtype="float32") /* ty=Tensor[(48, 24), float32] */;
  %412 = reshape(%411, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %413 = @func_5489(%412) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %414 = minimum(%409, %410) /* ty=Tensor[(7, 1, 14), float64] */;
  %415 = %413.0;
  (%414, %415, meta[relay.Constant][38] /* ty=Tensor[(48, 24), float32] */)
}

def @func_6920() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) {
  %416 = cast(meta[relay.Constant][39] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %417 = cast(meta[relay.Constant][39] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %418 = reshape(%416, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %419 = reshape(%417, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %420 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %421 = cast(%420, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %422 = reshape(%421, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %423 = @func_4826(%422) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %424 = cast(meta[relay.Constant][40] /* ty=Tensor[(546, 3), float32] */, dtype="float32") /* ty=Tensor[(546, 3), float32] */;
  %425 = reshape(%424, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %426 = @func_105(%425) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %427 = %426.0;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %429 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(546, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %430 = cast(meta[relay.Constant][40] /* ty=Tensor[(546, 3), float32] */, dtype="float32") /* ty=Tensor[(546, 3), float32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %432 = floor_mod(%430, %431) /* ty=Tensor[(546, 3), float32] */;
  %433 = cast(%432, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %434 = @func_1452(%418, %419) /* ty=Tensor[(3, 15, 12), uint16] */;
  %435 = %423.0;
  %436 = log(%433) /* ty=Tensor[(546, 3), float64] */;
  (%420, %434, meta[relay.Constant][39] /* ty=Tensor[(540), uint16] */, %435, %436)
}

def @func_13038() -> (Tensor[(2, 6, 5), float64],) {
  %437 = @func_11584() /* ty=Tensor[(2, 6, 5), float64] */;
  (%437,)
}

def @func_8133() -> Tensor[(2, 6, 5), float64] {
  %438 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
  %438.0
}

def @func_7316() -> (Tensor[(2, 6, 5), float64],) {
  %439 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %440 = %439.0;
  (%440,)
}

def @func_7353(%var_7345: Tensor[(12, 36), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) {
  %441 = cast(%var_7345, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %442 = reshape(%441, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %443 = @func_4695(%442) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %444 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
  %445 = %443.0;
  (%444, %445, %var_7345)
}

def @func_4379(%var_4366: Tensor[(45), uint16], %var_4367: Tensor[(13, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  %446 = cast(meta[relay.Constant][41] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %447 = cast(%var_4366, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %448 = cast(%var_4367, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %449 = reshape(%446, newshape=[]) /* ty=uint16 */;
  %450 = reshape(%447, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %451 = reshape(%448, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %452 = @func_480(%449, %450, %451) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %453 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %454 = %452.1;
  (%453, %454, meta[relay.Constant][41] /* ty=uint16 */, %var_4366, %var_4367)
}

def @func_5818(%var_5795: Tensor[(9, 16, 3), float32], %var_5805: Tensor[(2535), float64]) -> (Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) {
  %455 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
  %456 = shape_of(%var_5795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %459 = cast(%var_5805, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %460 = reshape(%459, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %461 = @func_4565(%460) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
  %462 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
  %463 = reshape(%462, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %464 = @func_981(%463) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %465 = floor_mod(%457, %458) /* ty=Tensor[(9, 16, 3), float32] */;
  %466 = %461.0;
  %467 = %464.0;
  (%465, %466, %var_5805, %467)
}

def @func_11907(%var_11872: Tensor[(845, 3), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) {
  %468 = @func_10104() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %469 = cast(meta[relay.Constant][43] /* ty=Tensor[(845, 3), float64] */, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %470 = reshape(%469, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %471 = @func_4565(%470) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
  %472 = %471.2;
  %473 = cast(%472, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %474 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(845, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %475 = cast(meta[relay.Constant][43] /* ty=Tensor[(845, 3), float64] */, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %477 = power(%475, %476) /* ty=Tensor[(845, 3), float32] */;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
  %479 = tan(%478) /* ty=Tensor[(845, 3), float32] */;
  %480 = cast(%var_11872, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %482 = cast(%479, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %484 = floor_divide(%482, %483) /* ty=Tensor[(845, 3), float32] */;
  %485 = cast(%484, dtype="uint32") /* ty=Tensor[(845, 3), uint32] */;
  %486 = shape_of(%479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %487 = cast(%479, dtype="uint32") /* ty=Tensor[(845, 3), uint32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %489 = cast(%472, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %490 = reshape(%489, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %491 = @func_5270(%490) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %492 = %491.2;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %494 = cast(%484, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %495 = rsqrt(%494) /* ty=Tensor[(845, 3), float64] */;
  %496 = cast(%var_11872, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%495, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %500 = %468.0;
  %501 = @func_9308() /* ty=Tensor[(45), uint16] */;
  %502 = minimum(%487, %488) /* ty=Tensor[(845, 3), uint32] */;
  %503 = erf(%493) /* ty=Tensor[(2535), float32] */;
  %504 = multiply(%498, %499) /* ty=Tensor[(845, 3), float64] */;
  (%500, %501, %502, %503, %504)
}

def @func_11542() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %505 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %506 = @func_8899() /* ty=Tensor[(2, 6, 5), float64] */;
  %507 = %505.0;
  (%506, %507)
}

def @func_16988() -> (Tensor[(3, 15, 12), uint16],) {
  %508 = @func_15333() /* ty=Tensor[(3, 15, 12), uint16] */;
  (%508,)
}

def @func_11171() -> (Tensor[(3, 15, 12), float64],) {
  %509 = @func_9204() /* ty=Tensor[(3, 15, 12), float64] */;
  (%509,)
}

def @func_14764() -> Tensor[(2, 6, 5), float64] {
  %510 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %510.0
}

def @func_5489(%var_5464: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %511 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %512 = cast(meta[relay.Constant][44] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %513 = reshape(%512, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %514 = @func_5270(%513) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %515 = cast(meta[relay.Constant][45] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %516 = cast(meta[relay.Constant][46] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %517 = reshape(%515, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %518 = reshape(%516, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %519 = @func_277(%517, %518) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %520 = cast(%var_5464, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %521 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %522 = cast(meta[relay.Constant][48] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %523 = reshape(%520, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %524 = reshape(%521, newshape=[]) /* ty=uint16 */;
  %525 = reshape(%522, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
  %526 = @func_4427(%523, %524, %525) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
  %527 = %511.0;
  %528 = %514.1;
  %529 = %519.0;
  %530 = %526.6;
  (%527, %528, meta[relay.Constant][44] /* ty=Tensor[(2535), float64] */, %529, meta[relay.Constant][45] /* ty=Tensor[(121), float32] */, meta[relay.Constant][46] /* ty=Tensor[(1573), float32] */, %530, %var_5464, meta[relay.Constant][47] /* ty=uint16 */, meta[relay.Constant][48] /* ty=Tensor[(45), uint16] */)
}

def @func_9953() -> Tensor[(2, 6, 5), float64] {
  %531 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %531.0
}

def @func_13213() -> (Tensor[(2, 6, 5), float64],) {
  %532 = @func_8351() /* ty=Tensor[(2, 6, 5), float64] */;
  (%532,)
}

def @func_14218() -> Tensor[(2, 6, 5), float64] {
  @func_8496() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_7467() -> (Tensor[(2, 6, 5), float64],) {
  %533 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %534 = %533.0;
  (%534,)
}

def @func_2539(%var_2517: Tensor[(432), float32]) -> (Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) {
  %535 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  %536 = cast(%var_2517, dtype="float32") /* ty=Tensor[(432), float32] */;
  %537 = reshape(%536, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %538 = @func_981(%537) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %539 = cast(meta[relay.Constant][50] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %540 = cast(meta[relay.Constant][50] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %541 = reshape(%539, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %542 = reshape(%540, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %543 = rsqrt(%535) /* ty=Tensor[(16, 5, 13), float64] */;
  %544 = %538.0;
  %545 = @func_1452(%541, %542) /* ty=Tensor[(3, 15, 12), uint16] */;
  (%543, %544, %var_2517, %545, meta[relay.Constant][50] /* ty=Tensor[(540), uint16] */)
}

def @func_277(%var_251: Tensor[(1, 11, 11), float32], %var_252: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) {
  %546 = cast(meta[relay.Constant][51] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %547 = reshape(%546, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %548 = @func_105(%547) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %549 = cast(%var_251, dtype="uint32") /* ty=Tensor[(1, 11, 11), uint32] */;
  %550 = cast(%var_252, dtype="uint32") /* ty=Tensor[(13, 11, 11), uint32] */;
  %551 = minimum(%549, %550) /* ty=Tensor[(13, 11, 11), uint32] */;
  %552 = cast(%var_251, dtype="float32") /* ty=Tensor[(1, 11, 11), float32] */;
  %553 = cast(%var_252, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
  %554 = subtract(%552, %553) /* ty=Tensor[(13, 11, 11), float32] */;
  %555 = cast(%554, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %556 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%551, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = %548.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %561 = reshape(%560, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %562 = @func_105(%561) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %563 = greater_equal(%557, %558) /* ty=Tensor[(13, 11, 11), bool] */;
  %564 = %562.0;
  (%559, meta[relay.Constant][51] /* ty=Tensor[(1638), float32] */, %563, %564)
}

def @func_7686() -> Tensor[(2, 6, 5), float64] {
  %565 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %565.0
}

def @func_5735() -> Tensor[(2, 6, 5), float64] {
  @func_4176() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_14747() -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %566 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %567 = @func_14357() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %568 = @func_13741() /* ty=Tensor[(45), uint16] */;
  %569 = %566.0;
  %570 = %567.1;
  (%568, %569, %570)
}

def @func_15382() -> Tensor[(2, 6, 5), float64] {
  %571 = @func_14747() /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %571.2
}

def @func_4826(%var_4789: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  %572 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %573 = cast(%var_4789, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %577 = cast(meta[relay.Constant][52] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %578 = reshape(%577, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %579 = @func_981(%578) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %580 = add(%575, %576) /* ty=Tensor[(2, 6, 5), uint16] */;
  %581 = %579.0;
  %582 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%580, %581, meta[relay.Constant][52] /* ty=Tensor[(432), float32] */, %582)
}

def @func_8078(%var_8069: Tensor[(5, 45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) {
  %583 = cast(meta[relay.Constant][53] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %584 = reshape(%583, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %585 = @func_7891(%584) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) */;
  %586 = %585.4;
  %587 = cast(%586, dtype="bool") /* ty=Tensor[(1, 45), bool] */;
  %588 = cast(%var_8069, dtype="bool") /* ty=Tensor[(5, 45), bool] */;
  %589 = logical_or(%587, %588) /* ty=Tensor[(5, 45), bool] */;
  %590 = cast(%589, dtype="uint8") /* ty=Tensor[(5, 45), uint8] */;
  %591 = shape_of(%var_8069, dtype="int32") /* ty=Tensor[(2), int32] */;
  %592 = cast(%var_8069, dtype="uint8") /* ty=Tensor[(5, 45), uint8] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %594 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
  %595 = logical_xor(%592, %593) /* ty=Tensor[(5, 45), uint8] */;
  (%594, meta[relay.Constant][53] /* ty=Tensor[(432), float32] */, %595)
}

def @func_12820() -> Tensor[(2, 6, 5), float64] {
  %596 = @func_11687() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %596.0
}

def @func_7705() -> (Tensor[(2, 6, 5), float64],) {
  %597 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %598 = %597.0;
  (%598,)
}

def @func_12101() -> (Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) {
  %599 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %600 = %599.1;
  %601 = cast(%600, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
  %602 = cast(%600, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
  %603 = reshape(%601, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %604 = reshape(%602, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %605 = cast(%600, dtype="float32") /* ty=Tensor[(3, 15, 12), float32] */;
  %606 = @func_1452(%603, %604) /* ty=Tensor[(3, 15, 12), uint16] */;
  %607 = atan(%605) /* ty=Tensor[(3, 15, 12), float32] */;
  (%606, %607)
}

def @func_8717() -> (Tensor[(2, 6, 5), float64],) {
  %608 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
  (%608,)
}

def @func_15208() -> Tensor[(2, 6, 5), float64] {
  @func_9754() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_8496() -> Tensor[(2, 6, 5), float64] {
  @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10353() -> Tensor[(2, 6, 5), float64] {
  %609 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %609.0
}

def @func_14866() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %610 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %611 = @func_14722() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %612 = @func_11385() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) */;
  %613 = %610.0;
  %614 = %611.0;
  %615 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %616 = %612.1;
  (%613, %614, %615, %616)
}

def @func_13197() -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
  %617 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %618 = @func_13113() /* ty=Tensor[(3, 15, 12), uint16] */;
  %619 = %617.0;
  (%618, %619)
}

def @func_15446() -> Tensor[(3, 15, 12), float32] {
  %620 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %621 = %620.0;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(3, 15, 12), float32] */;
  sinh(%622) /* ty=Tensor[(3, 15, 12), float32] */
}

def @func_10423() -> (Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) {
  %623 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 16), float32] */;
  %624 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %625 = exp(%623) /* ty=Tensor[(5, 15, 16), float32] */;
  %626 = %624.0;
  (%625, %626)
}

def @func_16844(%var_16820: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %627 = cast(%var_16820, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %628 = reshape(%627, newshape=[1296, 1]) /* ty=Tensor[(1296, 1), float32] */;
  %629 = @func_13690(%628) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) */;
  %630 = @func_14764() /* ty=Tensor[(2, 6, 5), float64] */;
  %631 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %632 = %629.1;
  (%630, %631, %632, %var_16820)
}

def @func_12742() -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) {
  %633 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %634 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %635 = %633.1;
  (%634, %635)
}

def @func_6518(%var_6491: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) {
  %636 = cast(meta[relay.Constant][55] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %637 = cast(%var_6491, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %638 = reshape(%636, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %639 = reshape(%637, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %640 = @func_4923(%638, %639) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) */;
  %641 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %642 = %640.4;
  (%641, %642, meta[relay.Constant][55] /* ty=Tensor[(121), float32] */, %var_6491)
}

def @func_11584() -> Tensor[(2, 6, 5), float64] {
  %643 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %643.0
}

def @func_8779(%var_8746: Tensor[(432, 1), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) {
  %644 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %645 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %646 = cast(%var_8746, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
  %647 = reshape(%646, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %648 = @func_8554(%647) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
  %649 = %645.0;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %651 = reshape(%650, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %652 = @func_4826(%651) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %653 = cast(%var_8746, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %654 = rsqrt(%653) /* ty=Tensor[(432, 1), float64] */;
  %655 = cast(%var_8746, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(2), int32] */;
  %657 = cast(%654, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %659 = %644.1;
  %660 = %648.2;
  %661 = %652.3;
  %662 = mod(%657, %658) /* ty=Tensor[(432, ?), float64] */;
  (%659, %649, %660, %661, %662)
}

def @func_12467() -> (Tensor[(2, 6, 5), float64],) {
  %663 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %664 = %663.0;
  (%664,)
}

def @func_17097() -> (Tensor[(2, 6, 5), float64],) {
  %665 = @func_15088() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %666 = %665.0;
  (%666,)
}

def @func_10744(%var_10711: Tensor[(1638), float32], %var_10716: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(4, 108), float32], Tensor[(12, 3, 12), float32], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(12, 36), float32]) {
  %667 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %668 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 108), float32] */, dtype="float32") /* ty=Tensor[(4, 108), float32] */;
  %669 = reshape(%668, newshape=[12, 36]) /* ty=Tensor[(12, 36), float32] */;
  %670 = @func_7353(%669) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) */;
  %671 = %670.2;
  %672 = cast(%671, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %673 = reshape(%672, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %674 = @func_981(%673) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %675 = cast(%var_10711, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %676 = reshape(%675, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %677 = @func_105(%676) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %678 = cast(%var_10716, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %679 = reshape(%678, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %680 = @func_7140(%679) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %681 = cast(%671, dtype="float64") /* ty=Tensor[(12, 36), float64] */;
  %682 = sin(%681) /* ty=Tensor[(12, 36), float64] */;
  %683 = cast(%671, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(2), int32] */;
  %685 = cast(%682, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %687 = %667.1;
  %688 = %674.0;
  %689 = %677.0;
  %690 = %680.1;
  %691 = divide(%685, %686) /* ty=Tensor[(12, 36), float32] */;
  (%687, meta[relay.Constant][56] /* ty=Tensor[(4, 108), float32] */, %688, %689, %var_10711, %690, %var_10716, %691)
}

def @func_14158(%var_14106: float64, %var_14107: Tensor[(9, 1, 13), float64], %var_14133: Tensor[(1274), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) {
  %692 = @func_12101() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) */;
  %693 = cast(%var_14133, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %694 = reshape(%693, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), float32] */;
  %695 = @func_8048(%694) /* ty=(Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) */;
  %696 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 195), float32] */, dtype="float32") /* ty=Tensor[(13, 195), float32] */;
  %697 = reshape(%696, newshape=[845, 3]) /* ty=Tensor[(845, 3), float32] */;
  %698 = @func_11907(%697) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) */;
  %699 = cast(%var_14107, dtype="float32") /* ty=Tensor[(9, 1, 13), float32] */;
  %700 = atanh(%699) /* ty=Tensor[(9, 1, 13), float32] */;
  %701 = cast(%var_14106, dtype="float64") /* ty=float64 */;
  %702 = cast(%var_14107, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %703 = power(%701, %702) /* ty=Tensor[(9, 1, 13), float64] */;
  %704 = cast(%703, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %705 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%700, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = not_equal(%706, %707) /* ty=Tensor[(9, ?, 13), bool] */;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(9, ?, 13), float32] */;
  %710 = %692.0;
  %711 = %695.0;
  %712 = %698.3;
  %713 = cos(%709) /* ty=Tensor[(9, ?, 13), float32] */;
  (%710, %711, %var_14133, %712, meta[relay.Constant][57] /* ty=Tensor[(13, 195), float32] */, %713)
}

def @func_1256(%var_1181: Tensor[(13, 13, 15), float64], %var_1191: Tensor[(1638), float32], %var_1239: Tensor[(432), float32]) -> (Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
  %714 = cast(%var_1181, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %715 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(13, 13, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %718 = cast(%var_1191, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %719 = reshape(%718, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %720 = @func_105(%719) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %721 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 13, 15), float64] */, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %722 = cast(%var_1239, dtype="float32") /* ty=Tensor[(432), float32] */;
  %723 = reshape(%722, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %724 = @func_981(%723) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %725 = power(%716, %717) /* ty=Tensor[(13, 13, 15), float64] */;
  %726 = %720.0;
  %727 = asin(%721) /* ty=Tensor[(13, 13, 15), float32] */;
  %728 = %724.0;
  (%725, %726, %var_1191, %727, %728, %var_1239)
}

def @func_13886() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(845, 3), float64]) {
  %729 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %730 = cast(meta[relay.Constant][59] /* ty=Tensor[(845, 3), float64] */, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %731 = reshape(%730, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %732 = @func_5270(%731) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %733 = %729.0;
  %734 = %732.2;
  (%733, %734, meta[relay.Constant][59] /* ty=Tensor[(845, 3), float64] */)
}

def @func_105(%var_100: Tensor[(13, 14, 9), float32]) -> (Tensor[(13, 14, 9), float32],) {
  %735 = cast(%var_100, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %736 = sinh(%735) /* ty=Tensor[(13, 14, 9), float32] */;
  (%736,)
}

def @func_16596(%var_16591: Tensor[(3, 1, 11), float32], %var_16592: Tensor[(3, 1, 11), float32]) -> (Tensor[(3, ?, 11), bool],) {
  %737 = cast(%var_16592, dtype="bool") /* ty=Tensor[(3, 1, 11), bool] */;
  %738 = shape_of(%var_16591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_16591, dtype="bool") /* ty=Tensor[(3, 1, 11), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = not_equal(%739, %740) /* ty=Tensor[(3, ?, 11), bool] */;
  (%741,)
}

def @func_10160() -> (Tensor[(2, 6, 5), float64],) {
  %742 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %743 = %742.0;
  (%743,)
}

def @func_15849() -> uint16 {
  %744 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
  %744.1
}

def @func_12935() -> (Tensor[(2, 6, 5), float64],) {
  %745 = @func_9953() /* ty=Tensor[(2, 6, 5), float64] */;
  (%745,)
}

def @func_15841() -> Tensor[(15, 9, 13), uint32] {
  %746 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="uint32") /* ty=Tensor[(15, 9, 13), uint32] */;
  %747 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="uint32") /* ty=Tensor[(15, 9, 13), uint32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%748, %749) /* ty=Tensor[(15, 9, 13), uint32] */
}

def @func_5270(%var_5268: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %750 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %751 = cast(%var_5268, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %752 = reshape(%751, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %753 = @func_4565(%752) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
  %754 = %750.0;
  %755 = %753.3;
  (%754, %755, %var_5268)
}

def @func_4695(%var_4666: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  %756 = cast(%var_4666, dtype="float32") /* ty=Tensor[(432), float32] */;
  %757 = reshape(%756, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %758 = @func_2539(%757) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %759 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %760 = %758.3;
  %761 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%759, %760, %var_4666, %761)
}

def @func_12327() -> (Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) {
  %762 = @func_11385() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) */;
  %763 = cast(meta[relay.Constant][62] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %764 = reshape(%763, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %765 = @func_9157(%764) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %766 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %767 = %762.0;
  %768 = %765.0;
  %769 = %766.0;
  (%767, %768, meta[relay.Constant][62] /* ty=Tensor[(1296), float32] */, %769)
}

def @func_9914() -> (Tensor[(2, 6, 5), float64],) {
  %770 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %771 = %770.0;
  (%771,)
}

def @func_10236(%var_10171: Tensor[(45), uint16], %var_10182: Tensor[(540), uint16], %var_10211: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], uint16, Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(12, 3, 12), float32], Tensor[(36, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(16, 5, 13), float64]) {
  %772 = cast(%var_10182, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %773 = cast(%var_10182, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %774 = reshape(%772, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %775 = reshape(%773, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %776 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %777 = cast(%var_10171, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %778 = reshape(%776, newshape=[]) /* ty=uint16 */;
  %779 = reshape(%777, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %780 = @func_7063(%778, %779) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) */;
  %781 = %780.5;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %783 = reshape(%782, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %784 = @func_2539(%783) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %785 = cast(%var_10211, dtype="uint8") /* ty=Tensor[(36, 12), uint8] */;
  %786 = shape_of(%781, dtype="int32") /* ty=Tensor[(2), int32] */;
  %787 = cast(%781, dtype="uint8") /* ty=Tensor[(36, 12), uint8] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %789 = multiply(%787, %788) /* ty=Tensor[(36, 12), uint8] */;
  %790 = cast(%var_10211, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(2), int32] */;
  %792 = cast(%789, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %794 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %796 = reshape(%795, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %797 = @func_9055(%796) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) */;
  %798 = %784.1;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %800 = reshape(%799, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %801 = @func_2539(%800) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %802 = @func_1452(%774, %775) /* ty=Tensor[(3, 15, 12), uint16] */;
  %803 = maximum(%792, %793) /* ty=Tensor[(36, 12), float64] */;
  %804 = %797.0;
  %805 = %801.0;
  (%794, meta[relay.Constant][63] /* ty=uint16 */, %var_10171, %802, %var_10182, %798, %803, %804, %805)
}

def @func_16299() -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
  %806 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %807 = @func_15333() /* ty=Tensor[(3, 15, 12), uint16] */;
  %808 = %806.0;
  (%807, %808)
}

def @func_16338() -> Tensor[(3, 15, 12), float64] {
  %809 = @func_12327() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) */;
  %809.3
}

def @func_17312() -> (Tensor[(2, 6, 5), float64],) {
  %810 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  (%810,)
}

def @func_11385() -> (Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) {
  %811 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %812 = @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
  %814 = %811.0;
  %815 = sigmoid(%813) /* ty=Tensor[(3, 15, 12), float64] */;
  (%814, %815)
}

def @func_16223() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(1152), float32]) {
  %816 = @func_14059() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %817 = cast(meta[relay.Constant][64] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %818 = reshape(%817, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %819 = @func_11013(%818) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) */;
  %820 = %816.0;
  %821 = %819.4;
  (%820, %821, meta[relay.Constant][64] /* ty=Tensor[(1152), float32] */)
}

def @func_4176() -> Tensor[(2, 6, 5), float64] {
  %822 = cast(meta[relay.Constant][65] /* ty=Tensor[(2, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  asin(%822) /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_8899() -> Tensor[(2, 6, 5), float64] {
  %823 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %823.0
}

def @func_13741() -> Tensor[(45), uint16] {
  %824 = @func_10640() /* ty=(Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) */;
  %824.3
}

def @func_1452(%var_1447: Tensor[(3, 15, 12), uint16], %var_1448: Tensor[(3, 15, 12), uint16]) -> Tensor[(3, 15, 12), uint16] {
  %825 = cast(%var_1448, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
  %826 = shape_of(%var_1447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_1447, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%827, %828) /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_10104() -> (Tensor[(2, 6, 5), float64],) {
  %829 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %830 = %829.0;
  (%830,)
}

def @func_5874() -> Tensor[(2, 6, 5), float64] {
  %831 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %831.0
}

def @func_14059() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %832 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %833 = %832.0;
  %834 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  (%833, %834)
}

def @func_11050(%var_11046: Tensor[(1152), float32], %var_11047: uint16, %var_11048: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %835 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %836 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %837 = cast(%var_11046, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %838 = cast(%var_11047, dtype="uint16") /* ty=uint16 */;
  %839 = cast(%var_11048, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %840 = reshape(%837, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %841 = reshape(%838, newshape=[]) /* ty=uint16 */;
  %842 = reshape(%839, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
  %843 = @func_4427(%840, %841, %842) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
  %844 = %835.0;
  %845 = %836.0;
  %846 = %843.6;
  (%844, %845, %846, %var_11046, %var_11047, %var_11048)
}

def @func_5893() -> Tensor[(2, 6, 5), float64] {
  @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_6262() -> (Tensor[(2, 6, 5), float64],) {
  %847 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  (%847,)
}

def @func_12703() -> (Tensor[(2, 6, 5), float64],) {
  %848 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %849 = %848.0;
  (%849,)
}

def @func_9055(%var_9001: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) {
  %850 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %851 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %852 = %851.0;
  %853 = cast(%var_9001, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%852, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %857 = cast(%var_9001, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %858 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %859 = %850.0;
  %860 = power(%855, %856) /* ty=Tensor[(2, 6, 5), float32] */;
  %861 = cosh(%857) /* ty=Tensor[(2, 6, 5), float32] */;
  %862 = %858.0;
  (%859, %860, %861, %862)
}

def @func_6361() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %863 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %864 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%863, %864)
}

def @func_13838() -> (Tensor[(2, 6, 5), float64],) {
  %865 = @func_13213() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %866 = %865.0;
  (%866,)
}

def @func_12615() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %867 = @func_12165() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %868 = %867.0;
  %869 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %870 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%868, %869, %870)
}

def @func_7495() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) {
  %871 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %872 = cast(meta[relay.Constant][66] /* ty=Tensor[(108, 4), float32] */, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
  %873 = reshape(%872, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %874 = @func_2539(%873) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %875 = %871.0;
  %876 = %874.3;
  (%875, %876, meta[relay.Constant][66] /* ty=Tensor[(108, 4), float32] */)
}

def @func_9343() -> (Tensor[(2, 6, 5), float64],) {
  %877 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  (%877,)
}

def @func_9281(%var_9248: Tensor[(14, 5, 5), float64], %var_9263: Tensor[(432), float32]) -> (Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) {
  %878 = cast(%var_9248, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %879 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
  %880 = cast(%var_9263, dtype="float32") /* ty=Tensor[(432), float32] */;
  %881 = reshape(%880, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %882 = @func_4270(%881) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) */;
  %883 = atanh(%878) /* ty=Tensor[(14, 5, 5), float64] */;
  %884 = %879.0;
  %885 = %882.3;
  (%883, %884, %885, %var_9263)
}

def @func_6120() -> Tensor[(2, 6, 5), float64] {
  @func_5327() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_7140(%var_7109: Tensor[(12, 12, 9), float32]) -> (Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) {
  %886 = cast(%var_7109, dtype="float32") /* ty=Tensor[(12, 12, 9), float32] */;
  %887 = atanh(%886) /* ty=Tensor[(12, 12, 9), float32] */;
  %888 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%887, %888)
}

def @func_8616() -> (Tensor[(2, 6, 5), float64],) {
  %889 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %890 = %889.0;
  (%890,)
}

def @func_10512(%var_10483: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) {
  %891 = cast(%var_10483, dtype="float32") /* ty=Tensor[(121), float32] */;
  %892 = reshape(%891, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %893 = @func_8007(%892) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %894 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %895 = %893.0;
  (%894, %895, %var_10483)
}

def @func_16487() -> (Tensor[(2, 6, 5), float64],) {
  %896 = @func_12467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %897 = %896.0;
  (%897,)
}

def @func_12555(%var_12505: Tensor[(4, 10, 10), int16], %var_12514: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
  %898 = cast(%var_12514, dtype="float32") /* ty=Tensor[(1296, 1), float32] */;
  %899 = reshape(%898, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %900 = @func_9157(%899) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %901 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 10, 10), int16] */, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
  %902 = shape_of(%var_12505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_12505, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %905 = multiply(%903, %904) /* ty=Tensor[(4, 10, 10), int16] */;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(4, 10, 10), float32] */;
  %907 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %908 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %909 = %900.1;
  %910 = erf(%906) /* ty=Tensor[(4, 10, 10), float32] */;
  %911 = %907.0;
  %912 = %908.1;
  (%909, %var_12514, %910, %911, %912)
}

def @func_12282() -> (Tensor[(45), uint16],) {
  %913 = @func_10056() /* ty=(Tensor[(45), uint16],) */;
  %914 = %913.0;
  (%914,)
}

def @func_4270(%var_4239: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) {
  %915 = cast(meta[relay.Constant][68] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %916 = cast(meta[relay.Constant][69] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %917 = cast(%var_4239, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %918 = reshape(%915, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %919 = reshape(%916, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %920 = reshape(%917, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %921 = @func_1256(%918, %919, %920) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %922 = cast(%var_4239, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %923 = asinh(%922) /* ty=Tensor[(36, 12), float64] */;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %925 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %926 = %921.3;
  %927 = sqrt(%924) /* ty=Tensor[(36, 12), float32] */;
  (%925, %926, meta[relay.Constant][68] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][69] /* ty=Tensor[(1638), float32] */, %927)
}

def @func_10640() -> (Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) {
  %928 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %929 = cast(%928, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %930 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 21), uint32] */, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %931 = cast(meta[relay.Constant][71] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %932 = reshape(%930, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %933 = reshape(%931, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %934 = @func_5676(%932, %933) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %935 = atan(%929) /* ty=Tensor[(2, 6, 5), float32] */;
  %936 = %934.0;
  (%935, %936, meta[relay.Constant][70] /* ty=Tensor[(1, 21), uint32] */, meta[relay.Constant][71] /* ty=Tensor[(45), uint16] */)
}

def @func_11227(%var_11206: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1, 225), uint16], Tensor[(225), uint16], Tensor[(2, 6, 5), float64], Tensor[(9, 5, ?), int64], Tensor[(1152), float32], Tensor[(1296), float32]) {
  %937 = @func_10269() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %938 = cast(meta[relay.Constant][72] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %939 = reshape(%938, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
  %940 = @func_8921(%939) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
  %941 = cast(meta[relay.Constant][73] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %942 = reshape(%941, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %943 = @func_11107(%942) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %944 = cast(%var_11206, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %945 = reshape(%944, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %946 = @func_11013(%945) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) */;
  %947 = cast(meta[relay.Constant][73] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %948 = %937.0;
  %949 = %940.2;
  %950 = %943.1;
  %951 = %946.6;
  %952 = acosh(%947) /* ty=Tensor[(1296), float32] */;
  (%948, %949, meta[relay.Constant][72] /* ty=Tensor[(225), uint16] */, %950, %951, %var_11206, %952)
}

def @func_5242(%var_5237: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
  %953 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %954 = cast(%var_5237, dtype="float32") /* ty=Tensor[(432), float32] */;
  %955 = reshape(%954, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %956 = @func_981(%955) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %957 = %953.0;
  %958 = %956.0;
  (%957, %958, %var_5237)
}

def @func_5676(%var_5650: Tensor[(1, 3, 7), uint32], %var_5665: Tensor[(45), uint16]) -> (Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  %959 = cast(meta[relay.Constant][74] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %960 = cast(%var_5650, dtype="uint32") /* ty=Tensor[(1, 3, 7), uint32] */;
  %961 = cast(meta[relay.Constant][75] /* ty=Tensor[(182, 9), float32] */, dtype="float32") /* ty=Tensor[(182, 9), float32] */;
  %962 = reshape(%961, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %963 = @func_105(%962) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %964 = cast(%var_5665, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %965 = cast(meta[relay.Constant][76] /* ty=Tensor[(13, 121), float32] */, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %966 = reshape(%964, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %967 = reshape(%965, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %968 = @func_4379(%966, %967) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %969 = bitwise_xor(%959, %960) /* ty=Tensor[(1, 3, 7), uint32] */;
  %970 = %963.0;
  %971 = %968.0;
  (%969, %970, meta[relay.Constant][75] /* ty=Tensor[(182, 9), float32] */, %971, %var_5665, meta[relay.Constant][76] /* ty=Tensor[(13, 121), float32] */)
}

def @func_7682() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %972 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %973 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
  (%972, %973)
}

def @func_5914(%var_5907: Tensor[(21), uint32], %var_5908: Tensor[(45), uint16], %var_5910: Tensor[(169, 15), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(1638), float32], Tensor[(1, 3, 7), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(169, 15), float64]) {
  %974 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %975 = cast(meta[relay.Constant][77] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
  %976 = reshape(%975, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %977 = @func_5270(%976) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %978 = cast(%var_5907, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %979 = cast(%var_5908, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %980 = reshape(%978, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %981 = reshape(%979, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %982 = @func_5676(%980, %981) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %983 = cast(%var_5910, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
  %984 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(169, 15), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %985 = cast(meta[relay.Constant][77] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %987 = %974.1;
  %988 = %977.1;
  %989 = %982.0;
  %990 = floor_mod(%985, %986) /* ty=Tensor[(169, 15), float64] */;
  (%987, %988, %989, %var_5907, %var_5908, %990)
}

def @func_13395(%var_13332: Tensor[(40, 10), int16], %var_13333: Tensor[(1296), float32], %var_13340: Tensor[(40, 10), int16]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(40, 10), bool], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(40, 10), float32]) {
  %991 = cast(%var_13332, dtype="int16") /* ty=Tensor[(40, 10), int16] */;
  %992 = cast(%var_13333, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %993 = reshape(%991, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), int16] */;
  %994 = reshape(%992, newshape=[1296, 1]) /* ty=Tensor[(1296, 1), float32] */;
  %995 = @func_12555(%993, %994) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
  %996 = cast(%var_13340, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %997 = shape_of(%var_13332, dtype="int32") /* ty=Tensor[(2), int32] */;
  %998 = cast(%var_13332, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1000 = cast(meta[relay.Constant][78] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1001 = reshape(%1000, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %1002 = @func_6518(%1001) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
  %1003 = cast(%var_13332, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
  %1004 = @func_9754() /* ty=Tensor[(2, 6, 5), float64] */;
  %1005 = @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */;
  %1006 = @func_12820() /* ty=Tensor[(2, 6, 5), float64] */;
  %1007 = %995.3;
  %1008 = greater(%998, %999) /* ty=Tensor[(40, 10), bool] */;
  %1009 = %1002.0;
  %1010 = cosh(%1003) /* ty=Tensor[(40, 10), float32] */;
  (%1004, %1005, %1006, %1007, %var_13333, %1008, %1009, meta[relay.Constant][78] /* ty=Tensor[(432), float32] */, %1010)
}

def @func_15351() -> Tensor[(2, 6, 5), float64] {
  @func_8351() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_6807() -> (Tensor[(2, 6, 5), float64], uint16) {
  %1011 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %1012 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1013 = %1011.2;
  (%1012, %1013)
}

def @func_15333() -> Tensor[(3, 15, 12), uint16] {
  @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_6737(%var_6733: Tensor[(1, 21), uint32], %var_6734: Tensor[(5, 9), uint16]) -> (Tensor[(2, 6, 5), int8], Tensor[(13, 14, 9), float32], Tensor[(1, 21), uint32], Tensor[(5, 9), uint16]) {
  %1014 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1015 = %1014.0;
  %1016 = cast(meta[relay.Constant][79] /* ty=Tensor[(2, 6, 5), float64] */, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
  %1017 = shape_of(%1015, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%1015, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1020 = cast(%var_6733, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %1021 = cast(%var_6734, dtype="uint16") /* ty=Tensor[(5, 9), uint16] */;
  %1022 = reshape(%1020, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %1023 = reshape(%1021, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1024 = @func_5676(%1022, %1023) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %1025 = bitwise_or(%1018, %1019) /* ty=Tensor[(2, 6, 5), int8] */;
  %1026 = %1024.1;
  (%1025, %1026, %var_6733, %var_6734)
}

def @func_8021() -> Tensor[(2, 6, 5), float64] {
  @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_15703() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1027 = @func_10269() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1028 = @func_14866() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %1029 = %1027.0;
  %1030 = %1028.1;
  (%1029, %1030)
}

def @func_16186(%var_16174: Tensor[(117), float64], %var_16175: Tensor[(1274), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float32], float64, Tensor[(117), float64], Tensor[(1274), float32]) {
  %1031 = cast(-9.06761f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1032 = cast(%var_16174, dtype="float64") /* ty=Tensor[(117), float64] */;
  %1033 = cast(%var_16175, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %1034 = reshape(%1031, newshape=[]) /* ty=float64 */;
  %1035 = reshape(%1032, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %1036 = reshape(%1033, newshape=[1274]) /* ty=Tensor[(1274), float32] */;
  %1037 = @func_14158(%1034, %1035, %1036) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) */;
  %1038 = @func_14218() /* ty=Tensor[(2, 6, 5), float64] */;
  %1039 = %1037.3;
  (%1038, %1039, -9.06761f64 /* ty=float64 */, %var_16174, %var_16175)
}

def @func_11326(%var_11317: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %1040 = cast(meta[relay.Constant][80] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1041 = reshape(%1040, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %1042 = @func_8007(%1041) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %1043 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
  %1044 = cast(meta[relay.Constant][80] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1045 = reshape(%1044, newshape=[1, 121]) /* ty=Tensor[(1, 121), float32] */;
  %1046 = @func_8318(%1045) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) */;
  %1047 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1048 = cast(%var_11317, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1049 = reshape(%1048, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1050 = @func_4695(%1049) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %1051 = @func_9953() /* ty=Tensor[(2, 6, 5), float64] */;
  %1052 = %1042.0;
  %1053 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %1054 = %1043.1;
  %1055 = %1046.0;
  %1056 = %1047.0;
  %1057 = %1050.2;
  (%1051, %1052, meta[relay.Constant][80] /* ty=Tensor[(121), float32] */, %1053, %1054, %1055, %1056, %1057, %var_11317)
}

def @func_9204() -> Tensor[(3, 15, 12), float64] {
  %1058 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %1059 = %1058.1;
  %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
  acosh(%1060) /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_2492(%var_2447: Tensor[(6, 12, 16), float32], %var_2457: Tensor[(9, 60), uint16], %var_2465: Tensor[(2535), float64], %var_2476: Tensor[(1573), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) {
  %1061 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
  %1062 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
  %1063 = reshape(%1061, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1064 = reshape(%1062, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1065 = cast(%var_2465, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1066 = cast(meta[relay.Constant][81] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1067 = cast(meta[relay.Constant][82] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1068 = reshape(%1065, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %1069 = reshape(%1066, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %1070 = reshape(%1067, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1071 = @func_1256(%1068, %1069, %1070) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %1072 = cast(%var_2447, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %1073 = atan(%1072) /* ty=Tensor[(6, 12, 16), float32] */;
  %1074 = cast(%var_2447, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = cast(meta[relay.Constant][83] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1079 = cast(%var_2476, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1080 = reshape(%1078, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %1081 = reshape(%1079, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %1082 = @func_277(%1080, %1081) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %1083 = cast(meta[relay.Constant][83] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1084 = cast(%var_2476, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1085 = reshape(%1083, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %1086 = reshape(%1084, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %1087 = @func_277(%1085, %1086) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %1088 = %1087.0;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %1090 = @func_1452(%1063, %1064) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1091 = %1071.0;
  %1092 = equal(%1076, %1077) /* ty=Tensor[(6, 12, 16), bool] */;
  %1093 = %1082.3;
  %1094 = cosh(%1089) /* ty=Tensor[(13, 14, 9), float64] */;
  (%1090, %var_2457, %1091, %var_2465, meta[relay.Constant][81] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][82] /* ty=Tensor[(432), float32] */, %1092, %1093, meta[relay.Constant][83] /* ty=Tensor[(121), float32] */, %var_2476, %1094)
}

def @func_11107(%var_11097: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %1095 = cast(%var_11097, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1096 = reshape(%1095, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %1097 = @func_7140(%1096) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %1098 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
  %1099 = %1097.1;
  (%1098, %1099, %var_11097)
}

def @func_10056() -> (Tensor[(45), uint16],) {
  %1100 = @func_9416() /* ty=Tensor[(45), uint16] */;
  (%1100,)
}

def @func_13969() -> Tensor[(3, 15, 12), float64] {
  %1101 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %1101.0
}

def @func_13690(%var_13680: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) {
  %1102 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %1103 = cast(%var_13680, dtype="float32") /* ty=Tensor[(1296, 1), float32] */;
  %1104 = reshape(%1103, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %1105 = @func_7140(%1104) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %1106 = %1102.0;
  %1107 = %1105.1;
  (%1106, %1107, %var_13680)
}

def @func_7063(%var_7052: uint16, %var_7053: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) {
  %1108 = cast(%var_7052, dtype="uint16") /* ty=uint16 */;
  %1109 = cast(%var_7053, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1110 = cast(meta[relay.Constant][84] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1111 = reshape(%1108, newshape=[]) /* ty=uint16 */;
  %1112 = reshape(%1109, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %1113 = reshape(%1110, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %1114 = @func_480(%1111, %1112, %1113) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %1115 = cast(meta[relay.Constant][85] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1116 = reshape(%1115, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %1117 = @func_6518(%1116) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
  %1118 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  %1119 = %1114.3;
  %1120 = %1117.3;
  (%1118, %1119, %var_7052, %var_7053, meta[relay.Constant][84] /* ty=Tensor[(1573), float32] */, %1120, meta[relay.Constant][85] /* ty=Tensor[(432), float32] */)
}

def @func_9814(%var_9776: Tensor[(1, 12, 2), uint16], %var_9777: Tensor[(1, 12, 2), uint16]) -> (Tensor[(?, 12, 2), float32], Tensor[(1, 225), uint16], Tensor[(225, 1), uint16]) {
  %1121 = cast(%var_9777, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %1122 = shape_of(%var_9776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%var_9776, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1125 = equal(%1123, %1124) /* ty=Tensor[(?, 12, 2), bool] */;
  %1126 = cast(%var_9777, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %1127 = shape_of(%1125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%1125, dtype="float32") /* ty=Tensor[(?, 12, 2), float32] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1130 = cast(meta[relay.Constant][86] /* ty=Tensor[(225, 1), uint16] */, dtype="uint16") /* ty=Tensor[(225, 1), uint16] */;
  %1131 = reshape(%1130, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
  %1132 = @func_8921(%1131) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
  %1133 = mod(%1128, %1129) /* ty=Tensor[(?, 12, 2), float32] */;
  %1134 = %1132.2;
  (%1133, %1134, meta[relay.Constant][86] /* ty=Tensor[(225, 1), uint16] */)
}

def @func_15303() -> (Tensor[(2, 6, 5), float64],) {
  %1135 = @func_14357() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_14970() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(9, 16, 3), float32], Tensor[(?, 540), float64], Tensor[(11, 15, 8), float64], Tensor[(2, 6, 5), float64]) {
  %1137 = cast(meta[relay.Constant][87] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1138 = reshape(%1137, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1139 = @func_11326(%1138) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
  %1140 = @func_12742() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) */;
  %1141 = %1139.8;
  %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1143 = reshape(%1142, newshape=[1, 432]) /* ty=Tensor[(1, 432), float32] */;
  %1144 = @func_14672(%1143) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) */;
  %1145 = cast(meta[relay.Constant][87] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1146 = reshape(%1145, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1147 = @func_7891(%1146) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) */;
  %1148 = %1147.3;
  %1149 = cast(%1148, dtype="float64") /* ty=Tensor[(?, 540), float64] */;
  %1150 = @func_13094() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) */;
  %1151 = @func_12742() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) */;
  %1152 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  %1153 = %1140.1;
  %1154 = @func_13741() /* ty=Tensor[(45), uint16] */;
  %1155 = %1144.1;
  %1156 = log10(%1149) /* ty=Tensor[(?, 540), float64] */;
  %1157 = %1150.0;
  %1158 = %1151.0;
  (%1152, meta[relay.Constant][87] /* ty=Tensor[(432), float32] */, %1141, %1153, %1154, %1155, %1156, %1157, %1158)
}

def @func_17168() -> (Tensor[(15, 9, 13), uint32],) {
  %1159 = @func_15841() /* ty=Tensor[(15, 9, 13), uint32] */;
  (%1159,)
}

def @func_11066() -> (Tensor[(2, 6, 5), float64],) {
  %1160 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_17210() -> (Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(1296), float32]) {
  %1162 = @func_16886() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1163 = cast(meta[relay.Constant][88] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1164 = reshape(%1163, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %1165 = @func_11107(%1164) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %1166 = %1162.0;
  %1167 = %1165.2;
  (%1166, %1167, meta[relay.Constant][88] /* ty=Tensor[(1296), float32] */)
}

def @func_16886() -> (Tensor[(2, 6, 5), float64],) {
  %1168 = @func_8021() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1168,)
}

def @func_14672(%var_14669: Tensor[(1, 432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) {
  %1169 = cast(%var_14669, dtype="float32") /* ty=Tensor[(1, 432), float32] */;
  %1170 = cast(meta[relay.Constant][89] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1171 = reshape(%1169, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float32] */;
  %1172 = reshape(%1170, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1173 = @func_5818(%1171, %1172) /* ty=(Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) */;
  %1174 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %1175 = %1173.0;
  (%1174, %1175, %var_14669, meta[relay.Constant][89] /* ty=Tensor[(2535), float64] */)
}

def @func_17484() -> (Tensor[(2, 6, 5), float64],) {
  %1176 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1176,)
}

def @func_9513(%var_9463: Tensor[(2535), float64], %var_9483: Tensor[(21), uint32]) -> (Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) {
  %1177 = cast(%var_9463, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1178 = reshape(%1177, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1179 = @func_6426(%1178) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %1180 = cast(%var_9483, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1181 = @func_9308() /* ty=Tensor[(45), uint16] */;
  %1182 = cast(%1181, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1183 = reshape(%1180, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %1184 = reshape(%1182, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1185 = @func_5676(%1183, %1184) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %1186 = %1179.1;
  %1187 = %1185.1;
  (%1181, %1186, %var_9463, %1187, %var_9483)
}

def @func_13004(%var_12973: Tensor[(5, 7, 5), float64]) -> (Tensor[(5, 7, 5), int8],) {
  %1188 = @func_11452() /* ty=Tensor[(5, 7, 5), float64] */;
  %1189 = cast(%var_12973, dtype="int8") /* ty=Tensor[(5, 7, 5), int8] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1188, dtype="int8") /* ty=Tensor[(5, 7, 5), int8] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1193 = bitwise_xor(%1191, %1192) /* ty=Tensor[(5, 7, 5), int8] */;
  (%1193,)
}

def @func_16378() -> (Tensor[(2, 6, 5), float64],) {
  %1194 = @func_13197() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) */;
  %1195 = %1194.1;
  (%1195,)
}

def @func_10848(%var_10797: Tensor[(1573), float32], %var_10803: Tensor[(2535), float64], %var_10804: Tensor[(21), uint32], %var_10819: Tensor[(1638), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(121), float32], Tensor[(1, 121), float32], Tensor[(1638), bool], Tensor[(1573), int64], Tensor[(1638), float32]) {
  %1196 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %1197 = cast(%var_10803, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1198 = cast(%var_10804, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1199 = reshape(%1197, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1200 = reshape(%1198, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %1201 = @func_9513(%1199, %1200) /* ty=(Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) */;
  %1202 = cast(meta[relay.Constant][91] /* ty=Tensor[(1, 121), float32] */, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %1203 = reshape(%1202, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %1204 = @func_8007(%1203) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %1205 = cast(meta[relay.Constant][92] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1206 = cast(meta[relay.Constant][90] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1207 = cast(%var_10797, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1208 = reshape(%1205, newshape=[]) /* ty=uint16 */;
  %1209 = reshape(%1206, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %1210 = reshape(%1207, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %1211 = @func_480(%1208, %1209, %1210) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %1212 = %1211.1;
  %1213 = cast(%var_10819, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %1214 = shape_of(%1212, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1215 = cast(%1212, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1217 = cast(%var_10797, dtype="bool") /* ty=Tensor[(1573), bool] */;
  %1218 = cast(meta[relay.Constant][92] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %1219 = greater(%1217, %1218) /* ty=Tensor[(1573), bool] */;
  %1220 = cast(%1219, dtype="int64") /* ty=Tensor[(1573), int64] */;
  %1221 = cast(meta[relay.Constant][92] /* ty=uint16 */, dtype="int64") /* ty=int64 */;
  %1222 = cast(meta[relay.Constant][92] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %1223 = cast(%var_10819, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1224 = @func_8475() /* ty=Tensor[(2, 6, 5), float64] */;
  %1225 = %1196.1;
  %1226 = %1201.1;
  %1227 = %1204.2;
  %1228 = greater_equal(%1215, %1216) /* ty=Tensor[(1638), bool] */;
  %1229 = minimum(%1220, %1221) /* ty=Tensor[(1573), int64] */;
  %1230 = minimum(%1222, %1223) /* ty=Tensor[(1638), float32] */;
  (%1224, %1225, meta[relay.Constant][90] /* ty=Tensor[(45), uint16] */, %1226, %var_10803, %var_10804, %1227, meta[relay.Constant][91] /* ty=Tensor[(1, 121), float32] */, %1228, %1229, %1230)
}

def @func_9898() -> (Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) {
  %1231 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %1232 = @func_9204() /* ty=Tensor[(3, 15, 12), float64] */;
  %1233 = %1231.1;
  (%1232, %1233)
}

def @main(%var_17772: Tensor[(1638), float32]) -> (Tensor[(1638), uint8], Tensor[(1638), float64]) {
  %1234 = @func_12213() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) */;
  %1235 = %1234.3;
  %1236 = cast(%var_17772, dtype="uint8") /* ty=Tensor[(1638), uint8] */;
  %1237 = shape_of(%1235, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1238 = cast(%1235, dtype="uint8") /* ty=Tensor[(1638), uint8] */;
  %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1240 = cast(%1235, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1241 = add(%1238, %1239) /* ty=Tensor[(1638), uint8] */;
  %1242 = log(%1240) /* ty=Tensor[(1638), float64] */;
  (%1241, %1242)
}

def @func_13094() -> (Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) {
  %1243 = cast(meta[relay.Constant][94] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %1244 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(11, 15, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1245 = cast(meta[relay.Constant][93] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %1246 = dyn.reshape(%1243, %1244, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1247 = @func_10423() /* ty=(Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) */;
  %1248 = mod(%1245, %1246) /* ty=Tensor[(11, 15, 8), float64] */;
  %1249 = %1247.0;
  (%1248, %1249)
}

def @func_15502(%var_15488: Tensor[(1638), float32], %var_15494: Tensor[(1638), bool]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32]) {
  %1250 = @func_13838() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1251 = @func_14866() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %1252 = @func_14722() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1253 = @func_12615() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1254 = cast(meta[relay.Constant][95] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1255 = reshape(%1254, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %1256 = @func_6518(%1255) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
  %1257 = %1256.1;
  %1258 = cast(%var_15488, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %1259 = shape_of(%1257, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1260 = cast(%1257, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %1261 = dyn.reshape(%1258, %1259, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1262 = less(%1260, %1261) /* ty=Tensor[(1638), bool] */;
  %1263 = cast(%var_15494, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1264 = shape_of(%1262, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1265 = cast(%1262, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1267 = %1250.0;
  %1268 = %1251.1;
  %1269 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1270 = %1252.1;
  %1271 = %1253.1;
  %1272 = power(%1265, %1266) /* ty=Tensor[(1638), float32] */;
  (%1267, %1268, meta[relay.Constant][95] /* ty=Tensor[(432), float32] */, %1269, %1270, %1271, %1272)
}

def @func_7560() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1273 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1274 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1275 = %1273.0;
  %1276 = %1274.0;
  (%1275, %1276)
}

def @func_12910() -> Tensor[(2, 6, 5), float64] {
  %1277 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1277.1
}

def @func_13570() -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(15, 13, 10), float64], Tensor[(1950), float64]) {
  %1278 = @func_12165() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1279 = @func_12282() /* ty=(Tensor[(45), uint16],) */;
  %1280 = cast(meta[relay.Constant][96] /* ty=Tensor[(1950), float64] */, dtype="float64") /* ty=Tensor[(1950), float64] */;
  %1281 = reshape(%1280, newshape=[15, 13, 10]) /* ty=Tensor[(15, 13, 10), float64] */;
  %1282 = @func_12485(%1281) /* ty=(Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) */;
  %1283 = %1278.0;
  %1284 = %1279.0;
  %1285 = @func_11584() /* ty=Tensor[(2, 6, 5), float64] */;
  %1286 = %1282.0;
  (%1283, %1284, %1285, %1286, meta[relay.Constant][96] /* ty=Tensor[(1950), float64] */)
}

def @func_14550() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %1287 = cast(meta[relay.Constant][97] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1288 = reshape(%1287, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
  %1289 = @func_11107(%1288) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
  %1290 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %1291 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
  %1292 = %1289.1;
  %1293 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
  %1294 = %1290.1;
  (%1291, %1292, meta[relay.Constant][97] /* ty=Tensor[(1296), float32] */, %1293, %1294)
}

def @func_8554(%var_8546: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %1295 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1296 = cast(%var_8546, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1297 = reshape(%1296, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1298 = @func_4695(%1297) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %1299 = %1295.1;
  %1300 = %1298.2;
  (%1299, %1300, %var_8546)
}

def @func_4565(%var_4543: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) {
  %1301 = cast(%var_4543, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1302 = cast(meta[relay.Constant][98] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1303 = cast(meta[relay.Constant][99] /* ty=Tensor[(432, 1), float32] */, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
  %1304 = reshape(%1301, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %1305 = reshape(%1302, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %1306 = reshape(%1303, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1307 = @func_1256(%1304, %1305, %1306) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %1308 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1309 = %1307.0;
  (%1308, %1309, %var_4543, meta[relay.Constant][98] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][99] /* ty=Tensor[(432, 1), float32] */)
}

def @func_3394(%var_3315: Tensor[(14, 6, 8), uint64], %var_3346: Tensor[(1152), float32], %var_3347: Tensor[(540), uint16], %var_3348: Tensor[(2535), float64], %var_3349: Tensor[(1573), float32], %var_3360: Tensor[(432), float32], %var_3374: uint16, %var_3375: Tensor[(15, 3), uint16]) -> (Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) {
  %1310 = cast(%var_3315, dtype="uint64") /* ty=Tensor[(14, 6, 8), uint64] */;
  %1311 = shape_of(meta[relay.Constant][100] /* ty=Tensor[(14, 6, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1312 = cast(meta[relay.Constant][100] /* ty=Tensor[(14, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(14, 6, 8), uint64] */;
  %1313 = dyn.reshape(%1310, %1311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1314 = minimum(%1312, %1313) /* ty=Tensor[(14, 6, 8), uint64] */;
  %1315 = cast(%1314, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %1316 = shape_of(%var_3315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1317 = cast(%var_3315, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1319 = cast(%var_3346, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1320 = cast(%var_3347, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1321 = cast(%var_3348, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1322 = cast(%var_3349, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1323 = reshape(%1319, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float32] */;
  %1324 = reshape(%1320, newshape=[9, 60]) /* ty=Tensor[(9, 60), uint16] */;
  %1325 = reshape(%1321, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1326 = reshape(%1322, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %1327 = @func_2492(%1323, %1324, %1325, %1326) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) */;
  %1328 = cast(%var_3360, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1329 = reshape(%1328, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1330 = @func_2539(%1329) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %1331 = cast(%var_3374, dtype="uint16") /* ty=uint16 */;
  %1332 = cast(%var_3375, dtype="uint16") /* ty=Tensor[(15, 3), uint16] */;
  %1333 = cast(%var_3349, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1334 = reshape(%1331, newshape=[]) /* ty=uint16 */;
  %1335 = reshape(%1332, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %1336 = reshape(%1333, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %1337 = @func_480(%1334, %1335, %1336) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %1338 = logical_and(%1317, %1318) /* ty=Tensor[(14, 6, 8), bool] */;
  %1339 = %1327.10;
  %1340 = %1330.4;
  %1341 = %1337.2;
  (%1338, %1339, %var_3346, %var_3347, %var_3348, %var_3349, %1340, %var_3360, %1341, %var_3374, %var_3375)
}

def @func_16109() -> Tensor[(45), uint16] {
  @func_9308() /* ty=Tensor[(45), uint16] */
}

def @func_5392() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %1342 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1343 = cast(%1342, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %1344 = reshape(%1343, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %1345 = @func_4826(%1344) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %1346 = cast(meta[relay.Constant][101] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1347 = cast(meta[relay.Constant][102] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1348 = cast(meta[relay.Constant][103] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1349 = reshape(%1346, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1350 = reshape(%1347, newshape=[]) /* ty=uint16 */;
  %1351 = reshape(%1348, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
  %1352 = @func_4427(%1349, %1350, %1351) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
  %1353 = %1345.0;
  %1354 = %1352.8;
  (%1342, %1353, %1354, meta[relay.Constant][101] /* ty=Tensor[(1152), float32] */, meta[relay.Constant][102] /* ty=uint16 */, meta[relay.Constant][103] /* ty=Tensor[(45), uint16] */)
}

def @func_9563(%var_9525: Tensor[(21), uint32], %var_9537: Tensor[(45), uint16], %var_9561: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) {
  %1355 = cast(meta[relay.Constant][104] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1356 = cast(%var_9525, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1357 = reshape(%1355, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1358 = reshape(%1356, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %1359 = @func_9513(%1357, %1358) /* ty=(Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) */;
  %1360 = cast(%var_9537, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1361 = reshape(%1360, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1362 = @func_7793(%1361) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) */;
  %1363 = %1362.4;
  %1364 = cast(%1363, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1365 = reshape(%1364, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1366 = @func_5119(%1365) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) */;
  %1367 = cast(%1363, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1368 = reshape(%1367, newshape=[432, 1]) /* ty=Tensor[(432, 1), float32] */;
  %1369 = @func_8779(%1368) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) */;
  %1370 = cast(%1363, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1371 = reshape(%1370, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1372 = @func_5242(%1371) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %1373 = cast(%var_9561, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1374 = reshape(%1373, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1375 = @func_5489(%1374) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %1376 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  %1377 = %1359.3;
  %1378 = %1366.1;
  %1379 = %1369.0;
  %1380 = %1372.2;
  %1381 = %1375.2;
  (%1376, %1377, meta[relay.Constant][104] /* ty=Tensor[(2535), float64] */, %var_9525, %1363, %var_9537, %1378, %1379, %1380, %1381, %var_9561)
}

def @func_12879() -> Tensor[(3, 15, 12), float64] {
  %1382 = @func_12327() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) */;
  %1383 = %1382.0;
  %1384 = cast(%1383, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
  acos(%1384) /* ty=Tensor[(3, 15, 12), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9915() -> (Tensor[(2, 6, 5), float64],) {
  %2 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %0 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_11972(%var_11959: Tensor[(45), float64]) -> (Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) {
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %4 = reshape(%3, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %5 = @func_10512(%4) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
  %7 = reshape(%6, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %8 = @func_6426(%7) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %10 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
  %11 = %10.0;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(45), float64] */;
  %13 = tan(%12) /* ty=Tensor[(45), float64] */;
  %14 = cast(%var_11959, dtype="int64") /* ty=Tensor[(45), int64] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(1), int32] */;
  %16 = cast(%13, dtype="int64") /* ty=Tensor[(45), int64] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?), int64] */;
  %18 = %5.2;
  %19 = %8.1;
  %20 = sqrt(%9) /* ty=Tensor[(121), float32] */;
  %21 = bitwise_xor(%16, %17) /* ty=Tensor[(45), int64] */;
  %22 = @func_9308() /* ty=Tensor[(45), uint16] */;
  (%18, %19, meta[relay.Constant][1] /* ty=Tensor[(169, 15), float64] */, %20, %21, %22)
}

def @func_11387() -> (Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) {
  @func_11385() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) */
}

def @func_16128() -> (Tensor[(11, 15, 8), float64], Tensor[(3, 15, 12), uint16]) {
  %23 = @func_13094() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) */;
  %24 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %25 = %23.0;
  %26 = %24.1;
  (%25, %26)
}

def @func_8051(%var_8049: Tensor[(7, 14, 13), float32]) -> (Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) {
  @func_8048(%var_8049) /* ty=(Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_16566(%var_16564: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64], Tensor[(2535), float64], Tensor[(2535), float64], Tensor[(45), uint8], Tensor[(2, 6, 5), float64]) {
  @func_16563(%var_16564) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64], Tensor[(2535), float64], Tensor[(2535), float64], Tensor[(45), uint8], Tensor[(2, 6, 5), float64]) */
}

def @func_8616() -> (Tensor[(2, 6, 5), float64],) {
  %27 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %28 = %27.0;
  (%28,)
}

def @func_8021() -> Tensor[(2, 6, 5), float64] {
  @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_4567(%var_4566: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) {
  %38 = fn (%var_4543: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) {
    %29 = cast(%var_4543, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(432, 1), float32] */, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
    %32 = reshape(%29, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
    %33 = reshape(%30, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
    %34 = reshape(%31, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %35 = @func_1256(%32, %33, %34) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
    %36 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %37 = %35.0;
    (%36, %37, %var_4543, meta[relay.Constant][2] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][3] /* ty=Tensor[(432, 1), float32] */)
  };
  %38(%var_4566) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */
}

def @func_12558(%var_12556: Tensor[(4, 10, 10), int16], %var_12557: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
  %54 = fn (%var_12505: Tensor[(4, 10, 10), int16], %var_12514: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
    %39 = cast(%var_12514, dtype="float32") /* ty=Tensor[(1296, 1), float32] */;
    %40 = reshape(%39, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %41 = @func_9157(%40) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 10, 10), int16] */, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
    %43 = shape_of(%var_12505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %44 = cast(%var_12505, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %46 = multiply(%44, %45) /* ty=Tensor[(4, 10, 10), int16] */;
    %47 = cast(%46, dtype="float32") /* ty=Tensor[(4, 10, 10), float32] */;
    %48 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %49 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
    %50 = %41.1;
    %51 = erf(%47) /* ty=Tensor[(4, 10, 10), float32] */;
    %52 = %48.0;
    %53 = %49.1;
    (%50, %var_12514, %51, %52, %53)
  };
  %54(%var_12556, %var_12557) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */
}

def @func_5329() -> Tensor[(2, 6, 5), float64] {
  @func_5327() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_16732() -> (Tensor[(3, 15, 12), float64], Tensor[(15, 9, 13), uint32]) {
  %58 = fn () -> (Tensor[(3, 15, 12), float64], Tensor[(15, 9, 13), uint32]) {
    %55 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
    %56 = %55.1;
    %57 = @func_15841() /* ty=Tensor[(15, 9, 13), uint32] */;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(15, 9, 13), uint32]) */
}

def @func_7142(%var_7141: Tensor[(12, 12, 9), float32]) -> (Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) {
  %62 = fn (%var_7109: Tensor[(12, 12, 9), float32]) -> (Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) {
    %59 = cast(%var_7109, dtype="float32") /* ty=Tensor[(12, 12, 9), float32] */;
    %60 = atanh(%59) /* ty=Tensor[(12, 12, 9), float32] */;
    %61 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
    (%60, %61)
  };
  %62(%var_7141) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_6740(%var_6738: Tensor[(1, 21), uint32], %var_6739: Tensor[(5, 9), uint16]) -> (Tensor[(2, 6, 5), int8], Tensor[(13, 14, 9), float32], Tensor[(1, 21), uint32], Tensor[(5, 9), uint16]) {
  %76 = fn (%var_6733: Tensor[(1, 21), uint32], %var_6734: Tensor[(5, 9), uint16]) -> (Tensor[(2, 6, 5), int8], Tensor[(13, 14, 9), float32], Tensor[(1, 21), uint32], Tensor[(5, 9), uint16]) {
    %63 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %64 = %63.0;
    %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 6, 5), float64] */, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
    %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%64, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %69 = cast(%var_6733, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
    %70 = cast(%var_6734, dtype="uint16") /* ty=Tensor[(5, 9), uint16] */;
    %71 = reshape(%69, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
    %72 = reshape(%70, newshape=[45]) /* ty=Tensor[(45), uint16] */;
    %73 = @func_5676(%71, %72) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
    %74 = bitwise_or(%67, %68) /* ty=Tensor[(2, 6, 5), int8] */;
    %75 = %73.1;
    (%74, %75, %var_6733, %var_6734)
  };
  %76(%var_6738, %var_6739) /* ty=(Tensor[(2, 6, 5), int8], Tensor[(13, 14, 9), float32], Tensor[(1, 21), uint32], Tensor[(5, 9), uint16]) */
}

def @func_15208() -> Tensor[(2, 6, 5), float64] {
  @func_9754() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10854(%var_10850: Tensor[(1573), float32], %var_10851: Tensor[(2535), float64], %var_10852: Tensor[(21), uint32], %var_10853: Tensor[(1638), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(121), float32], Tensor[(1, 121), float32], Tensor[(1638), bool], Tensor[(1573), int64], Tensor[(1638), float32]) {
  @func_10848(%var_10850, %var_10851, %var_10852, %var_10853) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(121), float32], Tensor[(1, 121), float32], Tensor[(1638), bool], Tensor[(1573), int64], Tensor[(1638), float32]) */
}

def @func_5272(%var_5271: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %83 = fn (%var_5268: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
    %77 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %78 = cast(%var_5268, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %79 = reshape(%78, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %80 = @func_4565(%79) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
    %81 = %77.0;
    %82 = %80.3;
    (%81, %82, %var_5268)
  };
  %83(%var_5271) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */
}

def @func_14059() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %84 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %85 = %84.0;
  %86 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  (%85, %86)
}

def @func_11452() -> Tensor[(5, 7, 5), float64] {
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 5), float64] */;
  cos(%87) /* ty=Tensor[(5, 7, 5), float64] */
}

def @func_280(%var_278: Tensor[(1, 11, 11), float32], %var_279: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) {
  %107 = fn (%var_251: Tensor[(1, 11, 11), float32], %var_252: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) {
    %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %89 = reshape(%88, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
    %90 = @func_105(%89) /* ty=(Tensor[(13, 14, 9), float32],) */;
    %91 = cast(%var_251, dtype="uint32") /* ty=Tensor[(1, 11, 11), uint32] */;
    %92 = cast(%var_252, dtype="uint32") /* ty=Tensor[(13, 11, 11), uint32] */;
    %93 = minimum(%91, %92) /* ty=Tensor[(13, 11, 11), uint32] */;
    %94 = cast(%var_251, dtype="float32") /* ty=Tensor[(1, 11, 11), float32] */;
    %95 = cast(%var_252, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
    %96 = subtract(%94, %95) /* ty=Tensor[(13, 11, 11), float32] */;
    %97 = cast(%96, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
    %98 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %99 = cast(%93, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
    %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %101 = %90.0;
    %102 = cast(%101, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
    %103 = reshape(%102, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
    %104 = @func_105(%103) /* ty=(Tensor[(13, 14, 9), float32],) */;
    %105 = greater_equal(%99, %100) /* ty=Tensor[(13, 11, 11), bool] */;
    %106 = %104.0;
    (%101, meta[relay.Constant][7] /* ty=Tensor[(1638), float32] */, %105, %106)
  };
  %107(%var_278, %var_279) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */
}

def @func_14675(%var_14673: Tensor[(1, 432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) {
  @func_14672(%var_14673) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) */
}

def @func_17062() -> Tensor[(2, 6, 5), float64] {
  %109 = fn () -> Tensor[(2, 6, 5), float64] {
    %108 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %108.0
  };
  %109() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10744(%var_10711: Tensor[(1638), float32], %var_10716: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(4, 108), float32], Tensor[(12, 3, 12), float32], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(12, 36), float32]) {
  %110 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 108), float32] */, dtype="float32") /* ty=Tensor[(4, 108), float32] */;
  %112 = reshape(%111, newshape=[12, 36]) /* ty=Tensor[(12, 36), float32] */;
  %113 = @func_7353(%112) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) */;
  %114 = %113.2;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %116 = reshape(%115, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %117 = @func_981(%116) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %118 = cast(%var_10711, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %119 = reshape(%118, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %120 = @func_105(%119) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %121 = cast(%var_10716, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %122 = reshape(%121, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %123 = @func_7140(%122) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %124 = cast(%114, dtype="float64") /* ty=Tensor[(12, 36), float64] */;
  %125 = sin(%124) /* ty=Tensor[(12, 36), float64] */;
  %126 = cast(%114, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(2), int32] */;
  %128 = cast(%125, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %130 = %110.1;
  %131 = %117.0;
  %132 = %120.0;
  %133 = %123.1;
  %134 = divide(%128, %129) /* ty=Tensor[(12, 36), float32] */;
  (%130, meta[relay.Constant][8] /* ty=Tensor[(4, 108), float32] */, %131, %132, %var_10711, %133, %var_10716, %134)
}

def @func_8556(%var_8555: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %141 = fn (%var_8546: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
    %135 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %136 = cast(%var_8546, dtype="float32") /* ty=Tensor[(432), float32] */;
    %137 = reshape(%136, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %138 = @func_4695(%137) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
    %139 = %135.1;
    %140 = %138.2;
    (%139, %140, %var_8546)
  };
  %141(%var_8555) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */
}

def @func_16130() -> (Tensor[(11, 15, 8), float64], Tensor[(3, 15, 12), uint16]) {
  @func_16128() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(3, 15, 12), uint16]) */
}

def @func_5676(%var_5650: Tensor[(1, 3, 7), uint32], %var_5665: Tensor[(45), uint16]) -> (Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  %142 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %143 = cast(%var_5650, dtype="uint32") /* ty=Tensor[(1, 3, 7), uint32] */;
  %144 = cast(meta[relay.Constant][10] /* ty=Tensor[(182, 9), float32] */, dtype="float32") /* ty=Tensor[(182, 9), float32] */;
  %145 = reshape(%144, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %146 = @func_105(%145) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %147 = cast(%var_5665, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %148 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 121), float32] */, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %149 = reshape(%147, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %150 = reshape(%148, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %151 = @func_4379(%149, %150) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %152 = bitwise_xor(%142, %143) /* ty=Tensor[(1, 3, 7), uint32] */;
  %153 = %146.0;
  %154 = %151.0;
  (%152, %153, meta[relay.Constant][10] /* ty=Tensor[(182, 9), float32] */, %154, %var_5665, meta[relay.Constant][11] /* ty=Tensor[(13, 121), float32] */)
}

def @func_16888() -> (Tensor[(2, 6, 5), float64],) {
  @func_16886() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_9345() -> (Tensor[(2, 6, 5), float64],) {
  @func_9343() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_10323(%var_10322: Tensor[(225), uint16]) -> (Tensor[(45), uint16], Tensor[(432), float32], Tensor[(225), uint16]) {
  %161 = fn (%var_10318: Tensor[(225), uint16]) -> (Tensor[(45), uint16], Tensor[(432), float32], Tensor[(225), uint16]) {
    %155 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
    %156 = cast(%var_10318, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %157 = reshape(%156, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
    %158 = @func_8921(%157) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
    %159 = %155.0;
    %160 = %158.1;
    (%159, %160, %var_10318)
  };
  %161(%var_10322) /* ty=(Tensor[(45), uint16], Tensor[(432), float32], Tensor[(225), uint16]) */
}

def @func_17484() -> (Tensor[(2, 6, 5), float64],) {
  %162 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  (%162,)
}

def @func_4427(%var_4407: Tensor[(1152), float32], %var_4412: uint16, %var_4413: Tensor[(45, 1), uint16]) -> (Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) {
  %163 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %164 = cast(%163, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %166 = cast(%var_4407, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %168 = cast(meta[relay.Constant][14] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %169 = cast(meta[relay.Constant][15] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %170 = cast(meta[relay.Constant][16] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %171 = cast(%var_4412, dtype="uint16") /* ty=uint16 */;
  %172 = cast(%var_4413, dtype="uint16") /* ty=Tensor[(45, 1), uint16] */;
  %173 = reshape(%165, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), uint64] */;
  %174 = reshape(%166, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %175 = reshape(%167, newshape=[540]) /* ty=Tensor[(540), uint16] */;
  %176 = reshape(%168, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %177 = reshape(%169, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %178 = reshape(%170, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %179 = reshape(%171, newshape=[]) /* ty=uint16 */;
  %180 = reshape(%172, newshape=[15, 3]) /* ty=Tensor[(15, 3), uint16] */;
  %181 = @func_3394(%173, %174, %175, %176, %177, %178, %179, %180) /* ty=(Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) */;
  %182 = erf(%164) /* ty=Tensor[(2, 6, 5), float32] */;
  %183 = %181.6;
  (%182, %183, meta[relay.Constant][12] /* ty=Tensor[(672), uint64] */, %var_4407, meta[relay.Constant][13] /* ty=Tensor[(540), uint16] */, meta[relay.Constant][14] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][15] /* ty=Tensor[(1573), float32] */, meta[relay.Constant][16] /* ty=Tensor[(432), float32] */, %var_4412, %var_4413)
}

def @func_13198() -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
  %187 = fn () -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
    %184 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %185 = @func_13113() /* ty=Tensor[(3, 15, 12), uint16] */;
    %186 = %184.0;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) */
}

def @func_16563(%var_16533: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64], Tensor[(2535), float64], Tensor[(2535), float64], Tensor[(45), uint8], Tensor[(2, 6, 5), float64]) {
  %188 = @func_12935() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %189 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %190 = cast(%var_16533, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %191 = reshape(%190, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %192 = @func_10391(%191) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %193 = @func_15974() /* ty=(Tensor[(45), uint16],) */;
  %194 = %193.0;
  %195 = cast(meta[relay.Constant][17] /* ty=Tensor[(45), uint16] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(1), int32] */;
  %197 = cast(%194, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %199 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %200 = %188.0;
  %201 = %189.0;
  %202 = %192.2;
  %203 = bitwise_or(%197, %198) /* ty=Tensor[(45), uint8] */;
  %204 = %199.2;
  (%200, %201, %202, %var_16533, %203, %204)
}

def @func_11688() -> (Tensor[(2, 6, 5), float64],) {
  %207 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %205 = @func_8717() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %206 = %205.0;
    (%206,)
  };
  %207() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_6362() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %210 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
    %208 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
    %209 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    (%208, %209)
  };
  %210() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_14724() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_14722() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_12881() -> Tensor[(3, 15, 12), float64] {
  @func_12879() /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_14466() -> Tensor[(2, 6, 5), float64] {
  @func_14464() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_16190(%var_16188: Tensor[(117), float64], %var_16189: Tensor[(1274), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float32], float64, Tensor[(117), float64], Tensor[(1274), float32]) {
  @func_16186(%var_16188, %var_16189) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2535), float32], float64, Tensor[(117), float64], Tensor[(1274), float32]) */
}

def @func_4379(%var_4366: Tensor[(45), uint16], %var_4367: Tensor[(13, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  %211 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %212 = cast(%var_4366, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %213 = cast(%var_4367, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %214 = reshape(%211, newshape=[]) /* ty=uint16 */;
  %215 = reshape(%212, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %216 = reshape(%213, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %217 = @func_480(%214, %215, %216) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %218 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %219 = %217.1;
  (%218, %219, meta[relay.Constant][18] /* ty=uint16 */, %var_4366, %var_4367)
}

def @func_5244(%var_5243: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
  %226 = fn (%var_5237: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
    %220 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %221 = cast(%var_5237, dtype="float32") /* ty=Tensor[(432), float32] */;
    %222 = reshape(%221, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
    %223 = @func_981(%222) /* ty=(Tensor[(12, 3, 12), float32],) */;
    %224 = %220.0;
    %225 = %223.0;
    (%224, %225, %var_5237)
  };
  %226(%var_5243) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */
}

def @func_4273(%var_4271: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) {
  @func_4270(%var_4271) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) */
}

def @func_8718() -> (Tensor[(2, 6, 5), float64],) {
  %228 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %227 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
    (%227,)
  };
  %228() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_7688() -> Tensor[(2, 6, 5), float64] {
  @func_7686() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_14672(%var_14669: Tensor[(1, 432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) {
  %229 = cast(%var_14669, dtype="float32") /* ty=Tensor[(1, 432), float32] */;
  %230 = cast(meta[relay.Constant][19] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %231 = reshape(%229, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float32] */;
  %232 = reshape(%230, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %233 = @func_5818(%231, %232) /* ty=(Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) */;
  %234 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %235 = %233.0;
  (%234, %235, %var_14669, meta[relay.Constant][19] /* ty=Tensor[(2535), float64] */)
}

def @func_9343() -> (Tensor[(2, 6, 5), float64],) {
  %236 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
  (%236,)
}

def @func_6429(%var_6427: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  @func_6426(%var_6427) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */
}

def @func_8924(%var_8922: Tensor[(1, 225), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) {
  @func_8921(%var_8922) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */
}

def @func_12703() -> (Tensor[(2, 6, 5), float64],) {
  %237 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %238 = %237.0;
  (%238,)
}

def @func_9516(%var_9514: Tensor[(2535), float64], %var_9515: Tensor[(21), uint32]) -> (Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) {
  %250 = fn (%var_9463: Tensor[(2535), float64], %var_9483: Tensor[(21), uint32]) -> (Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) {
    %239 = cast(%var_9463, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %240 = reshape(%239, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %241 = @func_6426(%240) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %242 = cast(%var_9483, dtype="uint32") /* ty=Tensor[(21), uint32] */;
    %243 = @func_9308() /* ty=Tensor[(45), uint16] */;
    %244 = cast(%243, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %245 = reshape(%242, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
    %246 = reshape(%244, newshape=[45]) /* ty=Tensor[(45), uint16] */;
    %247 = @func_5676(%245, %246) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
    %248 = %241.1;
    %249 = %247.1;
    (%243, %248, %var_9463, %249, %var_9483)
  };
  %250(%var_9514, %var_9515) /* ty=(Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) */
}

def @func_10056() -> (Tensor[(45), uint16],) {
  %251 = @func_9416() /* ty=Tensor[(45), uint16] */;
  (%251,)
}

def @func_15089() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %256 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
    %252 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %253 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %254 = %252.1;
    %255 = %253.0;
    (%254, %255)
  };
  %256() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_17389() -> Tensor[(2, 6, 5), float64] {
  @func_17387() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_14722() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %257 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %258 = @func_14583() /* ty=Tensor[(2, 6, 5), float64] */;
  %259 = %257.1;
  (%258, %259)
}

def @func_11385() -> (Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) {
  %260 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %261 = @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */;
  %262 = cast(%261, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
  %263 = %260.0;
  %264 = sigmoid(%262) /* ty=Tensor[(3, 15, 12), float64] */;
  (%263, %264)
}

def @func_105(%var_100: Tensor[(13, 14, 9), float32]) -> (Tensor[(13, 14, 9), float32],) {
  %265 = cast(%var_100, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %266 = sinh(%265) /* ty=Tensor[(13, 14, 9), float32] */;
  (%266,)
}

def @func_11067() -> (Tensor[(2, 6, 5), float64],) {
  %269 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %267 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %268 = %267.0;
    (%268,)
  };
  %269() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_12744() -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) {
  @func_12742() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) */
}

def @func_12742() -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) {
  %270 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
  %271 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %272 = %270.1;
  (%271, %272)
}

def @func_8243() -> (Tensor[(2, 6, 5), float64],) {
  %274 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %273 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
    (%273,)
  };
  %274() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_8023() -> Tensor[(2, 6, 5), float64] {
  @func_8021() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_14163(%var_14160: float64, %var_14161: Tensor[(9, 1, 13), float64], %var_14162: Tensor[(1274), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) {
  @func_14158(%var_14160, %var_14161, %var_14162) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) */
}

def @func_14357() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %275 = @func_11687() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %276 = @func_13213() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %277 = %275.0;
  %278 = %276.0;
  (%277, %278)
}

def @func_13441(%var_13439: float64, %var_13440: Tensor[(9, 60), uint16]) -> (Tensor[(2, 1, 8), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(2535, 1573), uint16], Tensor[(1152), float32], Tensor[(9, 60), uint16], Tensor[(1, 45), uint16]) {
  %296 = fn (%var_13414: float64, %var_13435: Tensor[(9, 60), uint16]) -> (Tensor[(2, 1, 8), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(2535, 1573), uint16], Tensor[(1152), float32], Tensor[(9, 60), uint16], Tensor[(1, 45), uint16]) {
    %279 = cast(%var_13414, dtype="float64") /* ty=float64 */;
    %280 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 8), float64] */;
    %281 = cast(meta[relay.Constant][21] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %282 = reshape(%281, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %283 = @func_6426(%282) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %284 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %285 = cast(%var_13435, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
    %286 = cast(meta[relay.Constant][21] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %287 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 45), uint16] */, dtype="uint16") /* ty=Tensor[(1, 45), uint16] */;
    %288 = reshape(%284, newshape=[96, 12]) /* ty=Tensor[(96, 12), float32] */;
    %289 = reshape(%285, newshape=[540]) /* ty=Tensor[(540), uint16] */;
    %290 = reshape(%286, newshape=[2535, 1]) /* ty=Tensor[(2535, 1), float64] */;
    %291 = reshape(%287, newshape=[45]) /* ty=Tensor[(45), uint16] */;
    %292 = @func_6197(%288, %289, %290, %291) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) */;
    %293 = divide(%279, %280) /* ty=Tensor[(2, 1, 8), float64] */;
    %294 = %283.1;
    %295 = %292.3;
    (%293, %294, meta[relay.Constant][21] /* ty=Tensor[(2535), float64] */, %295, meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, %var_13435, meta[relay.Constant][23] /* ty=Tensor[(1, 45), uint16] */)
  };
  %296(%var_13439, %var_13440) /* ty=(Tensor[(2, 1, 8), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(2535, 1573), uint16], Tensor[(1152), float32], Tensor[(9, 60), uint16], Tensor[(1, 45), uint16]) */
}

def @func_4826(%var_4789: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  %297 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %298 = cast(%var_4789, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %302 = cast(meta[relay.Constant][24] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %303 = reshape(%302, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %304 = @func_981(%303) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %305 = add(%300, %301) /* ty=Tensor[(2, 6, 5), uint16] */;
  %306 = %304.0;
  %307 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%305, %306, meta[relay.Constant][24] /* ty=Tensor[(432), float32] */, %307)
}

def @func_7355(%var_7354: Tensor[(12, 36), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) {
  %313 = fn (%var_7345: Tensor[(12, 36), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) {
    %308 = cast(%var_7345, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
    %309 = reshape(%308, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %310 = @func_4695(%309) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
    %311 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
    %312 = %310.0;
    (%311, %312, %var_7345)
  };
  %313(%var_7354) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(12, 36), float32]) */
}

def @func_17446() -> Tensor[(2, 6, 5), float64] {
  @func_8351() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_4270(%var_4239: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) {
  %314 = cast(meta[relay.Constant][25] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %315 = cast(meta[relay.Constant][26] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %316 = cast(%var_4239, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %317 = reshape(%314, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %318 = reshape(%315, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %319 = reshape(%316, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %320 = @func_1256(%317, %318, %319) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %321 = cast(%var_4239, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %322 = asinh(%321) /* ty=Tensor[(36, 12), float64] */;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %324 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %325 = %320.3;
  %326 = sqrt(%323) /* ty=Tensor[(36, 12), float32] */;
  (%324, %325, meta[relay.Constant][25] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][26] /* ty=Tensor[(1638), float32] */, %326)
}

def @func_15705() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_15703() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_15505(%var_15503: Tensor[(1638), float32], %var_15504: Tensor[(1638), bool]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32]) {
  %350 = fn (%var_15488: Tensor[(1638), float32], %var_15494: Tensor[(1638), bool]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32]) {
    %327 = @func_13838() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %328 = @func_14866() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
    %329 = @func_14722() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %330 = @func_12615() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %331 = cast(meta[relay.Constant][27] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %332 = reshape(%331, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
    %333 = @func_6518(%332) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
    %334 = %333.1;
    %335 = cast(%var_15488, dtype="bool") /* ty=Tensor[(1638), bool] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(1), int32] */;
    %337 = cast(%334, dtype="bool") /* ty=Tensor[(1638), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?), bool] */;
    %339 = less(%337, %338) /* ty=Tensor[(1638), bool] */;
    %340 = cast(%var_15494, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(1), int32] */;
    %342 = cast(%339, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), float32] */;
    %344 = %327.0;
    %345 = %328.1;
    %346 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %347 = %329.1;
    %348 = %330.1;
    %349 = power(%342, %343) /* ty=Tensor[(1638), float32] */;
    (%344, %345, meta[relay.Constant][27] /* ty=Tensor[(432), float32] */, %346, %347, %348, %349)
  };
  %350(%var_15503, %var_15504) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32]) */
}

def @func_14061() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_14059() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_10515(%var_10513: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) {
  @func_10512(%var_10513) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) */
}

def @func_13004(%var_12973: Tensor[(5, 7, 5), float64]) -> (Tensor[(5, 7, 5), int8],) {
  %351 = @func_11452() /* ty=Tensor[(5, 7, 5), float64] */;
  %352 = cast(%var_12973, dtype="int8") /* ty=Tensor[(5, 7, 5), int8] */;
  %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%351, dtype="int8") /* ty=Tensor[(5, 7, 5), int8] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %356 = bitwise_xor(%354, %355) /* ty=Tensor[(5, 7, 5), int8] */;
  (%356,)
}

def @func_14551() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %365 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
    %357 = cast(meta[relay.Constant][28] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %358 = reshape(%357, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %359 = @func_11107(%358) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %360 = @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
    %361 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
    %362 = %359.1;
    %363 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
    %364 = %360.1;
    (%361, %362, meta[relay.Constant][28] /* ty=Tensor[(1296), float32] */, %363, %364)
  };
  %365() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */
}

def @func_7705() -> (Tensor[(2, 6, 5), float64],) {
  %366 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %367 = %366.0;
  (%367,)
}

def @func_8120() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
  %371 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) {
    %368 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
    %369 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
    %370 = %368.1;
    (%369, %370)
  };
  %371() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */
}

def @func_12487(%var_12486: Tensor[(15, 13, 10), float64]) -> (Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) {
  %378 = fn (%var_12477: Tensor[(15, 13, 10), float64]) -> (Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) {
    %372 = cast(%var_12477, dtype="float64") /* ty=Tensor[(15, 13, 10), float64] */;
    %373 = cast(meta[relay.Constant][29] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %374 = reshape(%373, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %375 = @func_11326(%374) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
    %376 = atan(%372) /* ty=Tensor[(15, 13, 10), float64] */;
    %377 = %375.1;
    (%376, %377, meta[relay.Constant][29] /* ty=Tensor[(432), float32] */)
  };
  %378(%var_12486) /* ty=(Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) */
}

def @func_12284() -> (Tensor[(45), uint16],) {
  @func_12282() /* ty=(Tensor[(45), uint16],) */
}

def @func_8921(%var_8911: Tensor[(1, 225), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) {
  %379 = cast(%var_8911, dtype="uint16") /* ty=Tensor[(1, 225), uint16] */;
  %380 = reshape(%379, newshape=[5, 45]) /* ty=Tensor[(5, 45), uint16] */;
  %381 = @func_8078(%380) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) */;
  %382 = @func_8899() /* ty=Tensor[(2, 6, 5), float64] */;
  %383 = %381.1;
  (%382, %383, %var_8911)
}

def @func_12616() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %388 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
    %384 = @func_12165() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %385 = %384.0;
    %386 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %387 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
    (%385, %386, %387)
  };
  %388() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_9160(%var_9158: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  @func_9157(%var_9158) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */
}

def @func_17211() -> (Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(1296), float32]) {
  %395 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(1296), float32]) {
    %389 = @func_16886() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %390 = cast(meta[relay.Constant][30] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %391 = reshape(%390, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %392 = @func_11107(%391) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %393 = %389.0;
    %394 = %392.2;
    (%393, %394, meta[relay.Constant][30] /* ty=Tensor[(1296), float32] */)
  };
  %395() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(1296), float32]) */
}

def @func_17684() -> Tensor[(2, 6, 5), float64] {
  @func_12910() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10553() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_14584() -> Tensor[(2, 6, 5), float64] {
  %397 = fn () -> Tensor[(2, 6, 5), float64] {
    %396 = @func_7705() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %396.0
  };
  %397() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_11013(%var_10928: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) {
  %398 = cast(%var_10928, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %399 = cast(meta[relay.Constant][31] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %400 = cast(meta[relay.Constant][32] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %401 = cast(meta[relay.Constant][33] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %402 = reshape(%398, newshape=[96, 12]) /* ty=Tensor[(96, 12), float32] */;
  %403 = reshape(%399, newshape=[540]) /* ty=Tensor[(540), uint16] */;
  %404 = reshape(%400, newshape=[2535, 1]) /* ty=Tensor[(2535, 1), float64] */;
  %405 = reshape(%401, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %406 = @func_6197(%402, %403, %404, %405) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) */;
  %407 = cast(meta[relay.Constant][34] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %408 = cast(meta[relay.Constant][33] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %409 = cast(meta[relay.Constant][35] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %410 = reshape(%407, newshape=[]) /* ty=uint16 */;
  %411 = reshape(%408, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %412 = reshape(%409, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %413 = @func_480(%410, %411, %412) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %414 = %413.2;
  %415 = cast(%414, dtype="uint16") /* ty=Tensor[(9, 5, ?), uint16] */;
  %416 = cast(meta[relay.Constant][35] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %417 = reshape(%415, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %418 = reshape(%416, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %419 = @func_4379(%417, %418) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %420 = cast(meta[relay.Constant][35] /* ty=Tensor[(1573), float32] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %421 = cast(meta[relay.Constant][32] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %422 = reshape(%421, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %423 = @func_4565(%422) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
  %424 = cast(meta[relay.Constant][36] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %425 = reshape(%424, newshape=[5, 45]) /* ty=Tensor[(5, 45), uint16] */;
  %426 = @func_8078(%425) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) */;
  %427 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  %428 = %406.4;
  %429 = %419.2;
  %430 = tan(%420) /* ty=Tensor[(1573), float64] */;
  %431 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  %432 = %423.1;
  %433 = %426.0;
  (%427, %428, %var_10928, meta[relay.Constant][31] /* ty=Tensor[(540), uint16] */, meta[relay.Constant][32] /* ty=Tensor[(2535), float64] */, meta[relay.Constant][33] /* ty=Tensor[(45), uint16] */, %414, meta[relay.Constant][34] /* ty=uint16 */, %429, %430, %431, %432, %433, meta[relay.Constant][36] /* ty=Tensor[(225), uint16] */)
}

def @func_16378() -> (Tensor[(2, 6, 5), float64],) {
  %434 = @func_13197() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) */;
  %435 = %434.1;
  (%435,)
}

def @func_16266() -> Tensor[(2, 6, 5), float64] {
  %436 = @func_14747() /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %436.1
}

def @func_7066(%var_7064: uint16, %var_7065: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) {
  %450 = fn (%var_7052: uint16, %var_7053: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) {
    %437 = cast(%var_7052, dtype="uint16") /* ty=uint16 */;
    %438 = cast(%var_7053, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %440 = reshape(%437, newshape=[]) /* ty=uint16 */;
    %441 = reshape(%438, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
    %442 = reshape(%439, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
    %443 = @func_480(%440, %441, %442) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
    %444 = cast(meta[relay.Constant][38] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %445 = reshape(%444, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
    %446 = @func_6518(%445) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
    %447 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
    %448 = %443.3;
    %449 = %446.3;
    (%447, %448, %var_7052, %var_7053, meta[relay.Constant][37] /* ty=Tensor[(1573), float32] */, %449, meta[relay.Constant][38] /* ty=Tensor[(432), float32] */)
  };
  %450(%var_7064, %var_7065) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) */
}

def @func_8476() -> Tensor[(2, 6, 5), float64] {
  %452 = fn () -> Tensor[(2, 6, 5), float64] {
    %451 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %451.0
  };
  %452() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_13644() -> Tensor[(2, 6, 5), float64] {
  %453 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %453.0
}

def @func_15975() -> (Tensor[(45), uint16],) {
  %455 = fn () -> (Tensor[(45), uint16],) {
    %454 = @func_9308() /* ty=Tensor[(45), uint16] */;
    (%454,)
  };
  %455() /* ty=(Tensor[(45), uint16],) */
}

def @func_13741() -> Tensor[(45), uint16] {
  %456 = @func_10640() /* ty=(Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) */;
  %456.3
}

def @func_6264() -> (Tensor[(2, 6, 5), float64],) {
  @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_10058() -> (Tensor[(45), uint16],) {
  @func_10056() /* ty=(Tensor[(45), uint16],) */
}

def @func_15352() -> Tensor[(2, 6, 5), float64] {
  %457 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_8351() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %457() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_9755() -> Tensor[(2, 6, 5), float64] {
  %459 = fn () -> Tensor[(2, 6, 5), float64] {
    %458 = @func_7705() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %458.0
  };
  %459() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_12911() -> Tensor[(2, 6, 5), float64] {
  %461 = fn () -> Tensor[(2, 6, 5), float64] {
    %460 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %460.1
  };
  %461() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_484(%var_481: uint16, %var_482: Tensor[(9, 5, 1), uint16], %var_483: Tensor[(1573), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) {
  %489 = fn (%var_404: uint16, %var_405: Tensor[(9, 5, 1), uint16], %var_458: Tensor[(1573), float32]) -> (Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) {
    %462 = cast(meta[relay.Constant][39] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %463 = reshape(%462, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
    %464 = @func_105(%463) /* ty=(Tensor[(13, 14, 9), float32],) */;
    %465 = cast(%var_404, dtype="uint16") /* ty=uint16 */;
    %466 = cast(%var_405, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
    %467 = minimum(%465, %466) /* ty=Tensor[(9, 5, 1), uint16] */;
    %468 = cast(%467, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
    %469 = cast(%var_404, dtype="uint16") /* ty=uint16 */;
    %470 = logical_xor(%468, %469) /* ty=Tensor[(9, 5, 1), uint16] */;
    %471 = cast(%470, dtype="int64") /* ty=Tensor[(9, 5, 1), int64] */;
    %472 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
    %473 = cast(%467, dtype="int64") /* ty=Tensor[(9, 5, 1), int64] */;
    %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %475 = cast(meta[relay.Constant][40] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %476 = cast(%var_458, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %477 = reshape(%475, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
    %478 = reshape(%476, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
    %479 = @func_277(%477, %478) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
    %480 = cast(meta[relay.Constant][40] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %481 = cast(%var_458, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %482 = reshape(%480, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
    %483 = reshape(%481, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
    %484 = @func_277(%482, %483) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
    %485 = %464.0;
    %486 = left_shift(%473, %474) /* ty=Tensor[(9, 5, ?), int64] */;
    %487 = %479.0;
    %488 = %484.1;
    (%485, meta[relay.Constant][39] /* ty=Tensor[(1638), float32] */, %486, %487, meta[relay.Constant][40] /* ty=Tensor[(121), float32] */, %var_458, %488)
  };
  %489(%var_481, %var_482, %var_483) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */
}

def @func_5327() -> Tensor[(2, 6, 5), float64] {
  %490 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %490.0
}

def @func_10355() -> Tensor[(2, 6, 5), float64] {
  @func_10353() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_16301() -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
  @func_16299() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) */
}

def @func_15335() -> Tensor[(3, 15, 12), uint16] {
  @func_15333() /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_16339() -> Tensor[(3, 15, 12), float64] {
  %492 = fn () -> Tensor[(3, 15, 12), float64] {
    %491 = @func_12327() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) */;
    %491.3
  };
  %492() /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_1455(%var_1453: Tensor[(3, 15, 12), uint16], %var_1454: Tensor[(3, 15, 12), uint16]) -> Tensor[(3, 15, 12), uint16] {
  %497 = fn (%var_1447: Tensor[(3, 15, 12), uint16], %var_1448: Tensor[(3, 15, 12), uint16]) -> Tensor[(3, 15, 12), uint16] {
    %493 = cast(%var_1448, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
    %494 = shape_of(%var_1447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%var_1447, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_xor(%495, %496) /* ty=Tensor[(3, 15, 12), uint16] */
  };
  %497(%var_1453, %var_1454) /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_14032(%var_14010: Tensor[(1, 121), float32], %var_14011: Tensor[(1573), float32]) -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(1, 121), float32], Tensor[(1573), float32]) {
  %498 = @func_10056() /* ty=(Tensor[(45), uint16],) */;
  %499 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %500 = cast(%var_14010, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %501 = cast(%var_14011, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %502 = reshape(%500, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %503 = reshape(%501, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %504 = @func_277(%502, %503) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %505 = cast(%var_14011, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %506 = rsqrt(%505) /* ty=Tensor[(1573), float32] */;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %508 = %498.0;
  %509 = %499.0;
  %510 = %504.3;
  %511 = asinh(%507) /* ty=Tensor[(1573), float32] */;
  (%508, %509, %510, %var_14010, %511)
}

def @func_12413(%var_12411: Tensor[(1152), float32]) -> (uint16, Tensor[(2, 6, 5), float64], Tensor[(21), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(1152), float32]) {
  @func_12410(%var_12411) /* ty=(uint16, Tensor[(2, 6, 5), float64], Tensor[(21), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(1152), float32]) */
}

def @func_9817(%var_9815: Tensor[(1, 12, 2), uint16], %var_9816: Tensor[(1, 12, 2), uint16]) -> (Tensor[(?, 12, 2), float32], Tensor[(1, 225), uint16], Tensor[(225, 1), uint16]) {
  %526 = fn (%var_9776: Tensor[(1, 12, 2), uint16], %var_9777: Tensor[(1, 12, 2), uint16]) -> (Tensor[(?, 12, 2), float32], Tensor[(1, 225), uint16], Tensor[(225, 1), uint16]) {
    %512 = cast(%var_9777, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %513 = shape_of(%var_9776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %514 = cast(%var_9776, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %516 = equal(%514, %515) /* ty=Tensor[(?, 12, 2), bool] */;
    %517 = cast(%var_9777, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%516, dtype="float32") /* ty=Tensor[(?, 12, 2), float32] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %521 = cast(meta[relay.Constant][41] /* ty=Tensor[(225, 1), uint16] */, dtype="uint16") /* ty=Tensor[(225, 1), uint16] */;
    %522 = reshape(%521, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
    %523 = @func_8921(%522) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
    %524 = mod(%519, %520) /* ty=Tensor[(?, 12, 2), float32] */;
    %525 = %523.2;
    (%524, %525, meta[relay.Constant][41] /* ty=Tensor[(225, 1), uint16] */)
  };
  %526(%var_9815, %var_9816) /* ty=(Tensor[(?, 12, 2), float32], Tensor[(1, 225), uint16], Tensor[(225, 1), uint16]) */
}

def @func_8010(%var_8008: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) {
  @func_8007(%var_8008) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */
}

def @func_9955() -> Tensor[(2, 6, 5), float64] {
  @func_9953() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_13572() -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(15, 13, 10), float64], Tensor[(1950), float64]) {
  @func_13570() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(15, 13, 10), float64], Tensor[(1950), float64]) */
}

def @func_16299() -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64]) {
  %527 = @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %528 = @func_15333() /* ty=Tensor[(3, 15, 12), uint16] */;
  %529 = %527.0;
  (%528, %529)
}

def @func_13838() -> (Tensor[(2, 6, 5), float64],) {
  %530 = @func_13213() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %531 = %530.0;
  (%531,)
}

def @func_11542() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %532 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %533 = @func_8899() /* ty=Tensor[(2, 6, 5), float64] */;
  %534 = %532.0;
  (%533, %534)
}

def @func_9057(%var_9056: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) {
  %548 = fn (%var_9001: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) {
    %535 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %536 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
    %537 = %536.0;
    %538 = cast(%var_9001, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
    %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(%537, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %542 = cast(%var_9001, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
    %543 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %544 = %535.0;
    %545 = power(%540, %541) /* ty=Tensor[(2, 6, 5), float32] */;
    %546 = cosh(%542) /* ty=Tensor[(2, 6, 5), float32] */;
    %547 = %543.0;
    (%544, %545, %546, %547)
  };
  %548(%var_9056) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_11172() -> (Tensor[(3, 15, 12), float64],) {
  %550 = fn () -> (Tensor[(3, 15, 12), float64],) {
    %549 = @func_9204() /* ty=Tensor[(3, 15, 12), float64] */;
    (%549,)
  };
  %550() /* ty=(Tensor[(3, 15, 12), float64],) */
}

def @func_14219() -> Tensor[(2, 6, 5), float64] {
  %551 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_8496() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %551() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_6920() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) {
  %552 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %553 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %554 = reshape(%552, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %555 = reshape(%553, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %556 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %558 = reshape(%557, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %559 = @func_4826(%558) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %560 = cast(meta[relay.Constant][43] /* ty=Tensor[(546, 3), float32] */, dtype="float32") /* ty=Tensor[(546, 3), float32] */;
  %561 = reshape(%560, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
  %562 = @func_105(%561) /* ty=(Tensor[(13, 14, 9), float32],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %565 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(546, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %566 = cast(meta[relay.Constant][43] /* ty=Tensor[(546, 3), float32] */, dtype="float32") /* ty=Tensor[(546, 3), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %568 = floor_mod(%566, %567) /* ty=Tensor[(546, 3), float32] */;
  %569 = cast(%568, dtype="float64") /* ty=Tensor[(546, 3), float64] */;
  %570 = @func_1452(%554, %555) /* ty=Tensor[(3, 15, 12), uint16] */;
  %571 = %559.0;
  %572 = log(%569) /* ty=Tensor[(546, 3), float64] */;
  (%556, %570, meta[relay.Constant][42] /* ty=Tensor[(540), uint16] */, %571, %572)
}

def @func_4923(%var_4879: Tensor[(121), float32], %var_4891: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) {
  %573 = cast(%var_4879, dtype="float32") /* ty=Tensor[(121), float32] */;
  %574 = cast(meta[relay.Constant][44] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %575 = reshape(%573, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %576 = reshape(%574, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %577 = @func_277(%575, %576) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %578 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 195), float64] */, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %579 = %577.3;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(13, 14, 9), float32] */;
  %581 = cast(%var_4891, dtype="float32") /* ty=Tensor[(432), float32] */;
  %582 = reshape(%578, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %583 = reshape(%580, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %584 = reshape(%581, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %585 = @func_1256(%582, %583, %584) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %586 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 195), float64] */, dtype="float32") /* ty=Tensor[(13, 195), float32] */;
  %587 = atanh(%586) /* ty=Tensor[(13, 195), float32] */;
  %588 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 195), float32] */, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(2), int32] */;
  %590 = cast(%587, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %592 = cast(%587, dtype="float64") /* ty=Tensor[(13, 195), float64] */;
  %593 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %594 = %585.2;
  %595 = mod(%590, %591) /* ty=Tensor[(13, 195), float64] */;
  %596 = log(%592) /* ty=Tensor[(13, 195), float64] */;
  (%593, %579, %var_4879, meta[relay.Constant][44] /* ty=Tensor[(1573), float32] */, %594, %var_4891, %595, %596)
}

def @func_5211() -> (Tensor[(2, 6, 5), float64],) {
  @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_983(%var_982: Tensor[(12, 3, 12), float32]) -> (Tensor[(12, 3, 12), float32],) {
  %599 = fn (%var_960: Tensor[(12, 3, 12), float32]) -> (Tensor[(12, 3, 12), float32],) {
    %597 = cast(%var_960, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
    %598 = rsqrt(%597) /* ty=Tensor[(12, 3, 12), float32] */;
    (%598,)
  };
  %599(%var_982) /* ty=(Tensor[(12, 3, 12), float32],) */
}

def @func_14749() -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_14747() /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_17170() -> (Tensor[(15, 9, 13), uint32],) {
  @func_17168() /* ty=(Tensor[(15, 9, 13), uint32],) */
}

def @func_15842() -> Tensor[(15, 9, 13), uint32] {
  %604 = fn () -> Tensor[(15, 9, 13), uint32] {
    %600 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="uint32") /* ty=Tensor[(15, 9, 13), uint32] */;
    %601 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %602 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 9, 13), uint32] */, dtype="uint32") /* ty=Tensor[(15, 9, 13), uint32] */;
    %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    multiply(%602, %603) /* ty=Tensor[(15, 9, 13), uint32] */
  };
  %604() /* ty=Tensor[(15, 9, 13), uint32] */
}

def @func_8781(%var_8780: Tensor[(432, 1), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) {
  %624 = fn (%var_8746: Tensor[(432, 1), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) {
    %605 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
    %606 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %607 = cast(%var_8746, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
    %608 = reshape(%607, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %609 = @func_8554(%608) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
    %610 = %606.0;
    %611 = cast(%610, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    %612 = reshape(%611, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
    %613 = @func_4826(%612) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
    %614 = cast(%var_8746, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
    %615 = rsqrt(%614) /* ty=Tensor[(432, 1), float64] */;
    %616 = cast(%var_8746, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
    %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(2), int32] */;
    %618 = cast(%615, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %620 = %605.1;
    %621 = %609.2;
    %622 = %613.3;
    %623 = mod(%618, %619) /* ty=Tensor[(432, ?), float64] */;
    (%620, %610, %621, %622, %623)
  };
  %624(%var_8780) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) */
}

def @func_12821() -> Tensor[(2, 6, 5), float64] {
  %626 = fn () -> Tensor[(2, 6, 5), float64] {
    %625 = @func_11687() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %625.0
  };
  %626() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_12685() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %627 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %628 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %629 = %627.0;
  %630 = %628.0;
  (%629, %630)
}

def @func_8007(%var_8004: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) {
  %631 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %632 = cast(%var_8004, dtype="float32") /* ty=Tensor[(121), float32] */;
  %633 = cast(meta[relay.Constant][49] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %634 = reshape(%632, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %635 = reshape(%633, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %636 = @func_4923(%634, %635) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) */;
  %637 = %631.0;
  %638 = %636.7;
  (%637, %638, %var_8004, meta[relay.Constant][49] /* ty=Tensor[(432), float32] */)
}

def @func_11328(%var_11327: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %657 = fn (%var_11317: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) {
    %639 = cast(meta[relay.Constant][50] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %640 = reshape(%639, newshape=[121]) /* ty=Tensor[(121), float32] */;
    %641 = @func_8007(%640) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
    %642 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
    %643 = cast(meta[relay.Constant][50] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %644 = reshape(%643, newshape=[1, 121]) /* ty=Tensor[(1, 121), float32] */;
    %645 = @func_8318(%644) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) */;
    %646 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %647 = cast(%var_11317, dtype="float32") /* ty=Tensor[(432), float32] */;
    %648 = reshape(%647, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %649 = @func_4695(%648) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
    %650 = @func_9953() /* ty=Tensor[(2, 6, 5), float64] */;
    %651 = %641.0;
    %652 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
    %653 = %642.1;
    %654 = %645.0;
    %655 = %646.0;
    %656 = %649.2;
    (%650, %651, meta[relay.Constant][50] /* ty=Tensor[(121), float32] */, %652, %653, %654, %655, %656, %var_11317)
  };
  %657(%var_11327) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */
}

def @func_17437() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_17435() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_8932() -> Tensor[(3, 15, 12), uint16] {
  @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_7707() -> (Tensor[(2, 6, 5), float64],) {
  @func_7705() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_17686() -> Tensor[(2, 6, 5), float64] {
  @func_17684() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_8048(%var_8029: Tensor[(7, 14, 13), float32]) -> (Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) {
  %658 = cast(%var_8029, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %659 = sinh(%658) /* ty=Tensor[(7, 14, 13), float32] */;
  %660 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%659, %660)
}

def @func_14158(%var_14106: float64, %var_14107: Tensor[(9, 1, 13), float64], %var_14133: Tensor[(1274), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) {
  %661 = @func_12101() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) */;
  %662 = cast(%var_14133, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %663 = reshape(%662, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), float32] */;
  %664 = @func_8048(%663) /* ty=(Tensor[(7, 14, 13), float32], Tensor[(2, 6, 5), float64]) */;
  %665 = cast(meta[relay.Constant][51] /* ty=Tensor[(13, 195), float32] */, dtype="float32") /* ty=Tensor[(13, 195), float32] */;
  %666 = reshape(%665, newshape=[845, 3]) /* ty=Tensor[(845, 3), float32] */;
  %667 = @func_11907(%666) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) */;
  %668 = cast(%var_14107, dtype="float32") /* ty=Tensor[(9, 1, 13), float32] */;
  %669 = atanh(%668) /* ty=Tensor[(9, 1, 13), float32] */;
  %670 = cast(%var_14106, dtype="float64") /* ty=float64 */;
  %671 = cast(%var_14107, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %672 = power(%670, %671) /* ty=Tensor[(9, 1, 13), float64] */;
  %673 = cast(%672, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %674 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%669, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %677 = not_equal(%675, %676) /* ty=Tensor[(9, ?, 13), bool] */;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(9, ?, 13), float32] */;
  %679 = %661.0;
  %680 = %664.0;
  %681 = %667.3;
  %682 = cos(%678) /* ty=Tensor[(9, ?, 13), float32] */;
  (%679, %680, %var_14133, %681, meta[relay.Constant][51] /* ty=Tensor[(13, 195), float32] */, %682)
}

def @func_13273(%var_13271: float64, %var_13272: Tensor[(7, 1, 14), float64]) -> (Tensor[(7, 1, 14), float64], Tensor[(2, 6, 5), float64], Tensor[(48, 24), float32]) {
  @func_13269(%var_13271, %var_13272) /* ty=(Tensor[(7, 1, 14), float64], Tensor[(2, 6, 5), float64], Tensor[(48, 24), float32]) */
}

def @func_11229(%var_11228: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1, 225), uint16], Tensor[(225), uint16], Tensor[(2, 6, 5), float64], Tensor[(9, 5, ?), int64], Tensor[(1152), float32], Tensor[(1296), float32]) {
  %699 = fn (%var_11206: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1, 225), uint16], Tensor[(225), uint16], Tensor[(2, 6, 5), float64], Tensor[(9, 5, ?), int64], Tensor[(1152), float32], Tensor[(1296), float32]) {
    %683 = @func_10269() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %684 = cast(meta[relay.Constant][52] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %685 = reshape(%684, newshape=[1, 225]) /* ty=Tensor[(1, 225), uint16] */;
    %686 = @func_8921(%685) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(1, 225), uint16]) */;
    %687 = cast(meta[relay.Constant][53] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %688 = reshape(%687, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %689 = @func_11107(%688) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %690 = cast(%var_11206, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %691 = reshape(%690, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %692 = @func_11013(%691) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) */;
    %693 = cast(meta[relay.Constant][53] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %694 = %683.0;
    %695 = %686.2;
    %696 = %689.1;
    %697 = %692.6;
    %698 = acosh(%693) /* ty=Tensor[(1296), float32] */;
    (%694, %695, meta[relay.Constant][52] /* ty=Tensor[(225), uint16] */, %696, %697, %var_11206, %698)
  };
  %699(%var_11228) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1, 225), uint16], Tensor[(225), uint16], Tensor[(2, 6, 5), float64], Tensor[(9, 5, ?), int64], Tensor[(1152), float32], Tensor[(1296), float32]) */
}

def @func_17387() -> Tensor[(2, 6, 5), float64] {
  %700 = @func_16487() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %700.0
}

def @func_14359() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_14357() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_12879() -> Tensor[(3, 15, 12), float64] {
  %701 = @func_12327() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) */;
  %702 = %701.0;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
  acos(%703) /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_1260(%var_1257: Tensor[(13, 13, 15), float64], %var_1258: Tensor[(1638), float32], %var_1259: Tensor[(432), float32]) -> (Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
  %719 = fn (%var_1181: Tensor[(13, 13, 15), float64], %var_1191: Tensor[(1638), float32], %var_1239: Tensor[(432), float32]) -> (Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) {
    %704 = cast(%var_1181, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
    %705 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(13, 13, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %706 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
    %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %708 = cast(%var_1191, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %709 = reshape(%708, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), float32] */;
    %710 = @func_105(%709) /* ty=(Tensor[(13, 14, 9), float32],) */;
    %711 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 13, 15), float64] */, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %712 = cast(%var_1239, dtype="float32") /* ty=Tensor[(432), float32] */;
    %713 = reshape(%712, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
    %714 = @func_981(%713) /* ty=(Tensor[(12, 3, 12), float32],) */;
    %715 = power(%706, %707) /* ty=Tensor[(13, 13, 15), float64] */;
    %716 = %710.0;
    %717 = asin(%711) /* ty=Tensor[(13, 13, 15), float32] */;
    %718 = %714.0;
    (%715, %716, %var_1191, %717, %718, %var_1239)
  };
  %719(%var_1257, %var_1258, %var_1259) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */
}

def @func_10848(%var_10797: Tensor[(1573), float32], %var_10803: Tensor[(2535), float64], %var_10804: Tensor[(21), uint32], %var_10819: Tensor[(1638), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(121), float32], Tensor[(1, 121), float32], Tensor[(1638), bool], Tensor[(1573), int64], Tensor[(1638), float32]) {
  %720 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
  %721 = cast(%var_10803, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %722 = cast(%var_10804, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %723 = reshape(%721, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %724 = reshape(%722, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %725 = @func_9513(%723, %724) /* ty=(Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) */;
  %726 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 121), float32] */, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %727 = reshape(%726, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %728 = @func_8007(%727) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %729 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %730 = cast(meta[relay.Constant][55] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %731 = cast(%var_10797, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %732 = reshape(%729, newshape=[]) /* ty=uint16 */;
  %733 = reshape(%730, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
  %734 = reshape(%731, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
  %735 = @func_480(%732, %733, %734) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
  %736 = %735.1;
  %737 = cast(%var_10819, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(1), int32] */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?), bool] */;
  %741 = cast(%var_10797, dtype="bool") /* ty=Tensor[(1573), bool] */;
  %742 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %743 = greater(%741, %742) /* ty=Tensor[(1573), bool] */;
  %744 = cast(%743, dtype="int64") /* ty=Tensor[(1573), int64] */;
  %745 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="int64") /* ty=int64 */;
  %746 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %747 = cast(%var_10819, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %748 = @func_8475() /* ty=Tensor[(2, 6, 5), float64] */;
  %749 = %720.1;
  %750 = %725.1;
  %751 = %728.2;
  %752 = greater_equal(%739, %740) /* ty=Tensor[(1638), bool] */;
  %753 = minimum(%744, %745) /* ty=Tensor[(1573), int64] */;
  %754 = minimum(%746, %747) /* ty=Tensor[(1638), float32] */;
  (%748, %749, meta[relay.Constant][55] /* ty=Tensor[(45), uint16] */, %750, %var_10803, %var_10804, %751, meta[relay.Constant][56] /* ty=Tensor[(1, 121), float32] */, %752, %753, %754)
}

def @func_15775() -> Tensor[(2, 6, 5), float64] {
  @func_15773() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_5874() -> Tensor[(2, 6, 5), float64] {
  %755 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %755.0
}

def @func_9281(%var_9248: Tensor[(14, 5, 5), float64], %var_9263: Tensor[(432), float32]) -> (Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) {
  %756 = cast(%var_9248, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %757 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
  %758 = cast(%var_9263, dtype="float32") /* ty=Tensor[(432), float32] */;
  %759 = reshape(%758, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %760 = @func_4270(%759) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(36, 12), float32]) */;
  %761 = atanh(%756) /* ty=Tensor[(14, 5, 5), float64] */;
  %762 = %757.0;
  %763 = %760.3;
  (%761, %762, %763, %var_9263)
}

def @func_9073() -> (Tensor[(45), uint16],) {
  @func_9071() /* ty=(Tensor[(45), uint16],) */
}

def @func_9205() -> Tensor[(3, 15, 12), float64] {
  %767 = fn () -> Tensor[(3, 15, 12), float64] {
    %764 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
    %765 = %764.1;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(3, 15, 12), float64] */;
    acosh(%766) /* ty=Tensor[(3, 15, 12), float64] */
  };
  %767() /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_17097() -> (Tensor[(2, 6, 5), float64],) {
  %768 = @func_15088() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %769 = %768.0;
  (%769,)
}

def @func_4698(%var_4696: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  @func_4695(%var_4696) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_17486() -> (Tensor[(2, 6, 5), float64],) {
  @func_17484() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_9157(%var_9153: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %770 = cast(%var_9153, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %771 = reshape(%770, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %772 = @func_7140(%771) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %773 = @func_8496() /* ty=Tensor[(2, 6, 5), float64] */;
  %774 = %772.1;
  (%773, %774, %var_9153)
}

def @func_11109(%var_11108: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %780 = fn (%var_11097: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
    %775 = cast(%var_11097, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %776 = reshape(%775, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
    %777 = @func_7140(%776) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
    %778 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
    %779 = %777.1;
    (%778, %779, %var_11097)
  };
  %780(%var_11108) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */
}

def @func_13095() -> (Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) {
  %788 = fn () -> (Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) {
    %781 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %782 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(11, 15, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %785 = @func_10423() /* ty=(Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) */;
    %786 = mod(%783, %784) /* ty=Tensor[(11, 15, 8), float64] */;
    %787 = %785.0;
    (%786, %787)
  };
  %788() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) */
}

def @func_16990() -> (Tensor[(3, 15, 12), uint16],) {
  @func_16988() /* ty=(Tensor[(3, 15, 12), uint16],) */
}

def @func_17099() -> (Tensor[(2, 6, 5), float64],) {
  @func_17097() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_15446() -> Tensor[(3, 15, 12), float32] {
  %789 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %790 = %789.0;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(3, 15, 12), float32] */;
  sinh(%791) /* ty=Tensor[(3, 15, 12), float32] */
}

def @func_2542(%var_2540: Tensor[(432), float32]) -> (Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) {
  @func_2539(%var_2540) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */
}

def @func_17572() -> (Tensor[(2, 6, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(350, 1), float64], Tensor[(432), float32]) {
  @func_17570() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(350, 1), float64], Tensor[(432), float32]) */
}

def @func_10161() -> (Tensor[(2, 6, 5), float64],) {
  %794 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %792 = @func_9914() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %793 = %792.0;
    (%793,)
  };
  %794() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5918(%var_5915: Tensor[(21), uint32], %var_5916: Tensor[(45), uint16], %var_5917: Tensor[(169, 15), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(1638), float32], Tensor[(1, 3, 7), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(169, 15), float64]) {
  %812 = fn (%var_5907: Tensor[(21), uint32], %var_5908: Tensor[(45), uint16], %var_5910: Tensor[(169, 15), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(1638), float32], Tensor[(1, 3, 7), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(169, 15), float64]) {
    %795 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
    %796 = cast(meta[relay.Constant][60] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
    %797 = reshape(%796, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %798 = @func_5270(%797) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %799 = cast(%var_5907, dtype="uint32") /* ty=Tensor[(21), uint32] */;
    %800 = cast(%var_5908, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %801 = reshape(%799, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
    %802 = reshape(%800, newshape=[45]) /* ty=Tensor[(45), uint16] */;
    %803 = @func_5676(%801, %802) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
    %804 = cast(%var_5910, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
    %805 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(169, 15), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %806 = cast(meta[relay.Constant][60] /* ty=Tensor[(169, 15), float64] */, dtype="float64") /* ty=Tensor[(169, 15), float64] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %808 = %795.1;
    %809 = %798.1;
    %810 = %803.0;
    %811 = floor_mod(%806, %807) /* ty=Tensor[(169, 15), float64] */;
    (%808, %809, %810, %var_5907, %var_5908, %811)
  };
  %812(%var_5915, %var_5916, %var_5917) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(1638), float32], Tensor[(1, 3, 7), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(169, 15), float64]) */
}

def @func_16268() -> Tensor[(2, 6, 5), float64] {
  @func_16266() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_7496() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) {
  %819 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) {
    %813 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %814 = cast(meta[relay.Constant][61] /* ty=Tensor[(108, 4), float32] */, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
    %815 = reshape(%814, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %816 = @func_2539(%815) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
    %817 = %813.0;
    %818 = %816.3;
    (%817, %818, meta[relay.Constant][61] /* ty=Tensor[(108, 4), float32] */)
  };
  %819() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */
}

def @func_8078(%var_8069: Tensor[(5, 45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) {
  %820 = cast(meta[relay.Constant][62] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %821 = reshape(%820, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %822 = @func_7891(%821) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) */;
  %823 = %822.4;
  %824 = cast(%823, dtype="bool") /* ty=Tensor[(1, 45), bool] */;
  %825 = cast(%var_8069, dtype="bool") /* ty=Tensor[(5, 45), bool] */;
  %826 = logical_or(%824, %825) /* ty=Tensor[(5, 45), bool] */;
  %827 = cast(%826, dtype="uint8") /* ty=Tensor[(5, 45), uint8] */;
  %828 = shape_of(%var_8069, dtype="int32") /* ty=Tensor[(2), int32] */;
  %829 = cast(%var_8069, dtype="uint8") /* ty=Tensor[(5, 45), uint8] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %831 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
  %832 = logical_xor(%829, %830) /* ty=Tensor[(5, 45), uint8] */;
  (%831, meta[relay.Constant][62] /* ty=Tensor[(432), float32] */, %832)
}

def @func_6922() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) {
  @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */
}

def @func_13693(%var_13691: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) {
  @func_13690(%var_13691) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) */
}

def @func_11054(%var_11051: Tensor[(1152), float32], %var_11052: uint16, %var_11053: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %845 = fn (%var_11046: Tensor[(1152), float32], %var_11047: uint16, %var_11048: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
    %833 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %834 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
    %835 = cast(%var_11046, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %836 = cast(%var_11047, dtype="uint16") /* ty=uint16 */;
    %837 = cast(%var_11048, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %838 = reshape(%835, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %839 = reshape(%836, newshape=[]) /* ty=uint16 */;
    %840 = reshape(%837, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
    %841 = @func_4427(%838, %839, %840) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
    %842 = %833.0;
    %843 = %834.0;
    %844 = %841.6;
    (%842, %843, %844, %var_11046, %var_11047, %var_11048)
  };
  %845(%var_11051, %var_11052, %var_11053) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */
}

def @func_12776(%var_12775: Tensor[(1296), float32]) -> (Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1296), float32], Tensor[(1296), float32]) {
  %854 = fn (%var_12767: Tensor[(1296), float32]) -> (Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1296), float32], Tensor[(1296), float32]) {
    %846 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
    %847 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
    %848 = cast(%var_12767, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %849 = reshape(%848, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %850 = @func_11107(%849) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %851 = %846.1;
    %852 = %847.0;
    %853 = %850.2;
    (%851, %852, %853, %var_12767)
  };
  %854(%var_12775) /* ty=(Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(1296), float32], Tensor[(1296), float32]) */
}

def @func_17168() -> (Tensor[(15, 9, 13), uint32],) {
  %855 = @func_15841() /* ty=Tensor[(15, 9, 13), uint32] */;
  (%855,)
}

def @func_15210() -> Tensor[(2, 6, 5), float64] {
  @func_15208() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_7894(%var_7892: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) {
  @func_7891(%var_7892) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) */
}

def @func_13570() -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(15, 13, 10), float64], Tensor[(1950), float64]) {
  %856 = @func_12165() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %857 = @func_12282() /* ty=(Tensor[(45), uint16],) */;
  %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(1950), float64] */, dtype="float64") /* ty=Tensor[(1950), float64] */;
  %859 = reshape(%858, newshape=[15, 13, 10]) /* ty=Tensor[(15, 13, 10), float64] */;
  %860 = @func_12485(%859) /* ty=(Tensor[(15, 13, 10), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32]) */;
  %861 = %856.0;
  %862 = %857.0;
  %863 = @func_11584() /* ty=Tensor[(2, 6, 5), float64] */;
  %864 = %860.0;
  (%861, %862, %863, %864, meta[relay.Constant][63] /* ty=Tensor[(1950), float64] */)
}

def @func_7560() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %865 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %866 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %867 = %865.0;
  %868 = %866.0;
  (%867, %868)
}

def @func_3403(%var_3395: Tensor[(14, 6, 8), uint64], %var_3396: Tensor[(1152), float32], %var_3397: Tensor[(540), uint16], %var_3398: Tensor[(2535), float64], %var_3399: Tensor[(1573), float32], %var_3400: Tensor[(432), float32], %var_3401: uint16, %var_3402: Tensor[(15, 3), uint16]) -> (Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) {
  %901 = fn (%var_3315: Tensor[(14, 6, 8), uint64], %var_3346: Tensor[(1152), float32], %var_3347: Tensor[(540), uint16], %var_3348: Tensor[(2535), float64], %var_3349: Tensor[(1573), float32], %var_3360: Tensor[(432), float32], %var_3374: uint16, %var_3375: Tensor[(15, 3), uint16]) -> (Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) {
    %869 = cast(%var_3315, dtype="uint64") /* ty=Tensor[(14, 6, 8), uint64] */;
    %870 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(14, 6, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(meta[relay.Constant][64] /* ty=Tensor[(14, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(14, 6, 8), uint64] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %873 = minimum(%871, %872) /* ty=Tensor[(14, 6, 8), uint64] */;
    %874 = cast(%873, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
    %875 = shape_of(%var_3315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %876 = cast(%var_3315, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %878 = cast(%var_3346, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %879 = cast(%var_3347, dtype="uint16") /* ty=Tensor[(540), uint16] */;
    %880 = cast(%var_3348, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %881 = cast(%var_3349, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %882 = reshape(%878, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float32] */;
    %883 = reshape(%879, newshape=[9, 60]) /* ty=Tensor[(9, 60), uint16] */;
    %884 = reshape(%880, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %885 = reshape(%881, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
    %886 = @func_2492(%882, %883, %884, %885) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) */;
    %887 = cast(%var_3360, dtype="float32") /* ty=Tensor[(432), float32] */;
    %888 = reshape(%887, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %889 = @func_2539(%888) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
    %890 = cast(%var_3374, dtype="uint16") /* ty=uint16 */;
    %891 = cast(%var_3375, dtype="uint16") /* ty=Tensor[(15, 3), uint16] */;
    %892 = cast(%var_3349, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %893 = reshape(%890, newshape=[]) /* ty=uint16 */;
    %894 = reshape(%891, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), uint16] */;
    %895 = reshape(%892, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
    %896 = @func_480(%893, %894, %895) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(9, 5, ?), int64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32]) */;
    %897 = logical_and(%876, %877) /* ty=Tensor[(14, 6, 8), bool] */;
    %898 = %886.10;
    %899 = %889.4;
    %900 = %896.2;
    (%897, %898, %var_3346, %var_3347, %var_3348, %var_3349, %899, %var_3360, %900, %var_3374, %var_3375)
  };
  %901(%var_3395, %var_3396, %var_3397, %var_3398, %var_3399, %var_3400, %var_3401, %var_3402) /* ty=(Tensor[(14, 6, 8), bool], Tensor[(13, 14, 9), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(540), uint16], Tensor[(432), float32], Tensor[(9, 5, ?), int64], uint16, Tensor[(15, 3), uint16]) */
}

def @func_16886() -> (Tensor[(2, 6, 5), float64],) {
  %902 = @func_8021() /* ty=Tensor[(2, 6, 5), float64] */;
  (%902,)
}

def @func_2498(%var_2494: Tensor[(6, 12, 16), float32], %var_2495: Tensor[(9, 60), uint16], %var_2496: Tensor[(2535), float64], %var_2497: Tensor[(1573), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) {
  @func_2492(%var_2494, %var_2495, %var_2496, %var_2497) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) */
}

def @func_10106() -> (Tensor[(2, 6, 5), float64],) {
  @func_10104() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_11975(%var_11973: Tensor[(45), float64]) -> (Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) {
  @func_11972(%var_11973) /* ty=(Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) */
}

def @func_15384() -> Tensor[(2, 6, 5), float64] {
  @func_15382() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_8930() -> Tensor[(3, 15, 12), uint16] {
  %903 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %903.1
}

def @func_12166() -> (Tensor[(2, 6, 5), float64],) {
  %905 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %904 = @func_8475() /* ty=Tensor[(2, 6, 5), float64] */;
    (%904,)
  };
  %905() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_16225() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(1152), float32]) {
  @func_16223() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(1152), float32]) */
}

def @func_15037() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) {
  @func_15035() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) */
}

def @func_11909(%var_11908: Tensor[(845, 3), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) {
  %943 = fn (%var_11872: Tensor[(845, 3), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) {
    %906 = @func_10104() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %907 = cast(meta[relay.Constant][65] /* ty=Tensor[(845, 3), float64] */, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
    %908 = reshape(%907, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %909 = @func_4565(%908) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
    %910 = %909.2;
    %911 = cast(%910, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %912 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(845, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %913 = cast(meta[relay.Constant][65] /* ty=Tensor[(845, 3), float64] */, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
    %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %915 = power(%913, %914) /* ty=Tensor[(845, 3), float32] */;
    %916 = cast(%915, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
    %917 = tan(%916) /* ty=Tensor[(845, 3), float32] */;
    %918 = cast(%var_11872, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
    %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(2), int32] */;
    %920 = cast(%917, dtype="float32") /* ty=Tensor[(845, 3), float32] */;
    %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %922 = floor_divide(%920, %921) /* ty=Tensor[(845, 3), float32] */;
    %923 = cast(%922, dtype="uint32") /* ty=Tensor[(845, 3), uint32] */;
    %924 = shape_of(%917, dtype="int32") /* ty=Tensor[(2), int32] */;
    %925 = cast(%917, dtype="uint32") /* ty=Tensor[(845, 3), uint32] */;
    %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %927 = cast(%910, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %928 = reshape(%927, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %929 = @func_5270(%928) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %930 = %929.2;
    %931 = cast(%930, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %932 = cast(%922, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
    %933 = rsqrt(%932) /* ty=Tensor[(845, 3), float64] */;
    %934 = cast(%var_11872, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
    %935 = shape_of(%933, dtype="int32") /* ty=Tensor[(2), int32] */;
    %936 = cast(%933, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
    %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %938 = %906.0;
    %939 = @func_9308() /* ty=Tensor[(45), uint16] */;
    %940 = minimum(%925, %926) /* ty=Tensor[(845, 3), uint32] */;
    %941 = erf(%931) /* ty=Tensor[(2535), float32] */;
    %942 = multiply(%936, %937) /* ty=Tensor[(845, 3), float64] */;
    (%938, %939, %940, %941, %942)
  };
  %943(%var_11908) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(845, 3), uint32], Tensor[(2535), float32], Tensor[(845, 3), float64]) */
}

def @func_7468() -> (Tensor[(2, 6, 5), float64],) {
  %946 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %944 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %945 = %944.0;
    (%945,)
  };
  %946() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_8318(%var_8307: Tensor[(1, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) {
  %947 = cast(%var_8307, dtype="float32") /* ty=Tensor[(1, 121), float32] */;
  %948 = reshape(%947, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %949 = @func_8007(%948) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %950 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %951 = %949.1;
  (%950, %951, %var_8307)
}

def @func_13690(%var_13680: Tensor[(1296, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) {
  %952 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %953 = cast(%var_13680, dtype="float32") /* ty=Tensor[(1296, 1), float32] */;
  %954 = reshape(%953, newshape=[12, 12, 9]) /* ty=Tensor[(12, 12, 9), float32] */;
  %955 = @func_7140(%954) /* ty=(Tensor[(12, 12, 9), float32], Tensor[(2, 6, 5), float64]) */;
  %956 = %952.0;
  %957 = %955.1;
  (%956, %957, %var_13680)
}

def @func_17448() -> Tensor[(2, 6, 5), float64] {
  @func_17446() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_15850() -> uint16 {
  %959 = fn () -> uint16 {
    %958 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
    %958.1
  };
  %959() /* ty=uint16 */
}

def @func_10394(%var_10392: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  @func_10391(%var_10392) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */
}

def @func_10269() -> (Tensor[(2, 6, 5), float64],) {
  %960 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  (%960,)
}

def @func_7318() -> (Tensor[(2, 6, 5), float64],) {
  @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_10005() -> (Tensor[(3, 15, 12), float64],) {
  %963 = fn () -> (Tensor[(3, 15, 12), float64],) {
    %961 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
    %962 = %961.0;
    (%962,)
  };
  %963() /* ty=(Tensor[(3, 15, 12), float64],) */
}

def @func_13646() -> Tensor[(2, 6, 5), float64] {
  @func_13644() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10640() -> (Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) {
  %964 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %965 = cast(%964, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %966 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 21), uint32] */, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %967 = cast(meta[relay.Constant][67] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %968 = reshape(%966, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %969 = reshape(%967, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %970 = @func_5676(%968, %969) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %971 = atan(%965) /* ty=Tensor[(2, 6, 5), float32] */;
  %972 = %970.0;
  (%971, %972, meta[relay.Constant][66] /* ty=Tensor[(1, 21), uint32] */, meta[relay.Constant][67] /* ty=Tensor[(45), uint16] */)
}

def @func_10241(%var_10238: Tensor[(45), uint16], %var_10239: Tensor[(540), uint16], %var_10240: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], uint16, Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(12, 3, 12), float32], Tensor[(36, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(16, 5, 13), float64]) {
  @func_10236(%var_10238, %var_10239, %var_10240) /* ty=(Tensor[(2, 6, 5), float64], uint16, Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(12, 3, 12), float32], Tensor[(36, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(16, 5, 13), float64]) */
}

def @func_4432(%var_4429: Tensor[(1152), float32], %var_4430: uint16, %var_4431: Tensor[(45, 1), uint16]) -> (Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) {
  @func_4427(%var_4429, %var_4430, %var_4431) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */
}

def @func_16223() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(1152), float32]) {
  %973 = @func_14059() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %974 = cast(meta[relay.Constant][68] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %975 = reshape(%974, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %976 = @func_11013(%975) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) */;
  %977 = %973.0;
  %978 = %976.4;
  (%977, %978, meta[relay.Constant][68] /* ty=Tensor[(1152), float32] */)
}

def @func_9563(%var_9525: Tensor[(21), uint32], %var_9537: Tensor[(45), uint16], %var_9561: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) {
  %979 = cast(meta[relay.Constant][69] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %980 = cast(%var_9525, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %981 = reshape(%979, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %982 = reshape(%980, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %983 = @func_9513(%981, %982) /* ty=(Tensor[(45), uint16], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(21), uint32]) */;
  %984 = cast(%var_9537, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %985 = reshape(%984, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %986 = @func_7793(%985) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) */;
  %987 = %986.4;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(432), float32] */;
  %989 = reshape(%988, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %990 = @func_5119(%989) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) */;
  %991 = cast(%987, dtype="float32") /* ty=Tensor[(432), float32] */;
  %992 = reshape(%991, newshape=[432, 1]) /* ty=Tensor[(432, 1), float32] */;
  %993 = @func_8779(%992) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(2, 6, 5), float64], Tensor[(432, ?), float64]) */;
  %994 = cast(%987, dtype="float32") /* ty=Tensor[(432), float32] */;
  %995 = reshape(%994, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %996 = @func_5242(%995) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %997 = cast(%var_9561, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %998 = reshape(%997, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %999 = @func_5489(%998) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %1000 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  %1001 = %983.3;
  %1002 = %990.1;
  %1003 = %993.0;
  %1004 = %996.2;
  %1005 = %999.2;
  (%1000, %1001, meta[relay.Constant][69] /* ty=Tensor[(2535), float64] */, %var_9525, %987, %var_9537, %1002, %1003, %1004, %1005, %var_9561)
}

def @func_14464() -> Tensor[(2, 6, 5), float64] {
  @func_8475() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_11454() -> Tensor[(5, 7, 5), float64] {
  @func_11452() /* ty=Tensor[(5, 7, 5), float64] */
}

def @func_13007(%var_13005: Tensor[(5, 7, 5), float64]) -> (Tensor[(5, 7, 5), int8],) {
  @func_13004(%var_13005) /* ty=(Tensor[(5, 7, 5), int8],) */
}

def @func_8081(%var_8079: Tensor[(5, 45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) {
  @func_8078(%var_8079) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(5, 45), uint8]) */
}

def @func_13971() -> Tensor[(3, 15, 12), float64] {
  @func_13969() /* ty=Tensor[(3, 15, 12), float64] */
}

def @func_8497() -> Tensor[(2, 6, 5), float64] {
  %1006 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1006() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_13215() -> (Tensor[(2, 6, 5), float64],) {
  @func_13213() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_13114() -> Tensor[(3, 15, 12), uint16] {
  %1008 = fn () -> Tensor[(3, 15, 12), uint16] {
    %1007 = @func_12101() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) */;
    %1007.0
  };
  %1008() /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_8899() -> Tensor[(2, 6, 5), float64] {
  %1009 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1009.0
}

def @func_7686() -> Tensor[(2, 6, 5), float64] {
  %1010 = @func_7467() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1010.0
}

def @func_10391(%var_10369: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %1011 = cast(%var_10369, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1012 = reshape(%1011, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1013 = @func_6426(%1012) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %1014 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
  %1015 = %1013.1;
  (%1014, %1015, %var_10369)
}

def @func_4695(%var_4666: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  %1016 = cast(%var_4666, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1017 = reshape(%1016, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1018 = @func_2539(%1017) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %1019 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1020 = %1018.3;
  %1021 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1019, %1020, %var_4666, %1021)
}

def @func_12410(%var_12407: Tensor[(1152), float32]) -> (uint16, Tensor[(2, 6, 5), float64], Tensor[(21), uint32], Tensor[(21), uint32], Tensor[(45), uint16], Tensor[(1152), float32]) {
  %1022 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
  %1023 = @func_10551() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1024 = cast(meta[relay.Constant][70] /* ty=Tensor[(21), uint32] */, dtype="uint32") /* ty=Tensor[(21), uint32] */;
  %1025 = cast(meta[relay.Constant][71] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1026 = cast(%var_12407, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1027 = reshape(%1024, newshape=[21]) /* ty=Tensor[(21), uint32] */;
  %1028 = reshape(%1025, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1029 = reshape(%1026, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1030 = @func_9563(%1027, %1028, %1029) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) */;
  %1031 = %1022.1;
  %1032 = %1023.1;
  %1033 = %1030.3;
  (%1031, %1032, %1033, meta[relay.Constant][70] /* ty=Tensor[(21), uint32] */, meta[relay.Constant][71] /* ty=Tensor[(45), uint16] */, %var_12407)
}

def @func_16380() -> (Tensor[(2, 6, 5), float64],) {
  @func_16378() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_9071() -> (Tensor[(45), uint16],) {
  %1034 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %1035 = %1034.5;
  (%1035,)
}

def @func_16488() -> (Tensor[(2, 6, 5), float64],) {
  %1038 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %1036 = @func_12467() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_8901() -> Tensor[(2, 6, 5), float64] {
  @func_8899() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_11016(%var_11014: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) {
  @func_11013(%var_11014) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(45), uint16], Tensor[(9, 5, ?), int64], uint16, uint16, Tensor[(1573), float64], Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2, 6, 5), float64], Tensor[(225), uint16]) */
}

def @func_10353() -> Tensor[(2, 6, 5), float64] {
  %1039 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1039.0
}

def @func_17313() -> (Tensor[(2, 6, 5), float64],) {
  %1041 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %1040 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
    (%1040,)
  };
  %1041() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5209() -> (Tensor[(2, 6, 5), float64],) {
  %1042 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1042,)
}

def @func_13269(%var_13246: float64, %var_13247: Tensor[(7, 1, 14), float64]) -> (Tensor[(7, 1, 14), float64], Tensor[(2, 6, 5), float64], Tensor[(48, 24), float32]) {
  %1043 = cast(%var_13246, dtype="float64") /* ty=float64 */;
  %1044 = cast(%var_13247, dtype="float64") /* ty=Tensor[(7, 1, 14), float64] */;
  %1045 = cast(meta[relay.Constant][72] /* ty=Tensor[(48, 24), float32] */, dtype="float32") /* ty=Tensor[(48, 24), float32] */;
  %1046 = reshape(%1045, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1047 = @func_5489(%1046) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
  %1048 = minimum(%1043, %1044) /* ty=Tensor[(7, 1, 14), float64] */;
  %1049 = %1047.0;
  (%1048, %1049, meta[relay.Constant][72] /* ty=Tensor[(48, 24), float32] */)
}

def @func_5491(%var_5490: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %1070 = fn (%var_5464: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
    %1050 = @func_5209() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %1051 = cast(meta[relay.Constant][73] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %1052 = reshape(%1051, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %1053 = @func_5270(%1052) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %1054 = cast(meta[relay.Constant][74] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %1055 = cast(meta[relay.Constant][75] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %1056 = reshape(%1054, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
    %1057 = reshape(%1055, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
    %1058 = @func_277(%1056, %1057) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
    %1059 = cast(%var_5464, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %1060 = cast(meta[relay.Constant][76] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1061 = cast(meta[relay.Constant][77] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %1062 = reshape(%1059, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %1063 = reshape(%1060, newshape=[]) /* ty=uint16 */;
    %1064 = reshape(%1061, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
    %1065 = @func_4427(%1062, %1063, %1064) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
    %1066 = %1050.0;
    %1067 = %1053.1;
    %1068 = %1058.0;
    %1069 = %1065.6;
    (%1066, %1067, meta[relay.Constant][73] /* ty=Tensor[(2535), float64] */, %1068, meta[relay.Constant][74] /* ty=Tensor[(121), float32] */, meta[relay.Constant][75] /* ty=Tensor[(1573), float32] */, %1069, %var_5464, meta[relay.Constant][76] /* ty=uint16 */, meta[relay.Constant][77] /* ty=Tensor[(45), uint16] */)
  };
  %1070(%var_5490) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1573), float32], Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */
}

def @func_9309() -> Tensor[(45), uint16] {
  %1072 = fn () -> Tensor[(45), uint16] {
    %1071 = @func_9071() /* ty=(Tensor[(45), uint16],) */;
    %1071.0
  };
  %1072() /* ty=Tensor[(45), uint16] */
}

def @func_7891(%var_7824: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) {
  %1073 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1074 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1075 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 540), uint16] */, dtype="uint16") /* ty=Tensor[(1, 540), uint16] */;
  %1076 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 540), uint16] */, dtype="uint16") /* ty=Tensor[(1, 540), uint16] */;
  %1077 = reshape(%1075, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1078 = reshape(%1076, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1079 = @func_1452(%1077, %1078) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1080 = cast(%1079, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %1081 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(1, 540), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1082 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 540), uint16] */, dtype="bool") /* ty=Tensor[(1, 540), bool] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1084 = cast(%var_7824, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1085 = reshape(%1084, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %1086 = @func_6518(%1085) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
  %1087 = %1086.3;
  %1088 = cast(%var_7824, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1089 = shape_of(%1087, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1090 = cast(%1087, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1092 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 21), uint32] */, dtype="uint32") /* ty=Tensor[(1, 21), uint32] */;
  %1093 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 45), uint16] */, dtype="uint16") /* ty=Tensor[(1, 45), uint16] */;
  %1094 = reshape(%1092, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint32] */;
  %1095 = reshape(%1093, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1096 = @func_5676(%1094, %1095) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %1097 = %1096.0;
  %1098 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 21), uint32] */, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%1097, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1102 = %1073.0;
  %1103 = @func_5874() /* ty=Tensor[(2, 6, 5), float64] */;
  %1104 = %1074.1;
  %1105 = not_equal(%1082, %1083) /* ty=Tensor[(?, 540), bool] */;
  %1106 = mod(%1090, %1091) /* ty=Tensor[(36, 12), float32] */;
  %1107 = greater_equal(%1100, %1101) /* ty=Tensor[(?, 3, 7), bool] */;
  (%1102, %1103, %1104, %1105, meta[relay.Constant][79] /* ty=Tensor[(1, 45), uint16] */, %1106, %1107)
}

def @func_10642() -> (Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) {
  @func_10640() /* ty=(Tensor[(2, 6, 5), float32], Tensor[(1, 3, 7), uint32], Tensor[(1, 21), uint32], Tensor[(45), uint16]) */
}

def @func_8618() -> (Tensor[(2, 6, 5), float64],) {
  @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_4383(%var_4381: Tensor[(45), uint16], %var_4382: Tensor[(13, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  @func_4379(%var_4381, %var_4382) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */
}

def @func_11586() -> Tensor[(2, 6, 5), float64] {
  @func_11584() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_4177() -> Tensor[(2, 6, 5), float64] {
  %1109 = fn () -> Tensor[(2, 6, 5), float64] {
    %1108 = cast(meta[relay.Constant][81] /* ty=Tensor[(2, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    asin(%1108) /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1109() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_7796(%var_7794: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) {
  @func_7793(%var_7794) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) */
}

def @func_9568(%var_9565: Tensor[(21), uint32], %var_9566: Tensor[(45), uint16], %var_9567: Tensor[(1152), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) {
  @func_9563(%var_9565, %var_9566, %var_9567) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(2535), float64], Tensor[(21), uint32], Tensor[(432), float32], Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), uint16], Tensor[(432), float32], Tensor[(2535), float64], Tensor[(1152), float32]) */
}

def @func_13743() -> Tensor[(45), uint16] {
  @func_13741() /* ty=Tensor[(45), uint16] */
}

def @func_12328() -> (Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) {
  %1118 = fn () -> (Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) {
    %1110 = @func_11385() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) */;
    %1111 = cast(meta[relay.Constant][82] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %1112 = reshape(%1111, newshape=[1296]) /* ty=Tensor[(1296), float32] */;
    %1113 = @func_9157(%1112) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */;
    %1114 = @func_9898() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */;
    %1115 = %1110.0;
    %1116 = %1113.0;
    %1117 = %1114.0;
    (%1115, %1116, meta[relay.Constant][82] /* ty=Tensor[(1296), float32] */, %1117)
  };
  %1118() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(3, 15, 12), float64]) */
}

def @func_5876() -> Tensor[(2, 6, 5), float64] {
  @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_13213() -> (Tensor[(2, 6, 5), float64],) {
  %1119 = @func_8351() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1119,)
}

def @func_15035() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) {
  %1120 = cast(meta[relay.Constant][83] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1121 = reshape(%1120, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %1122 = @func_981(%1121) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %1123 = %1122.0;
  %1124 = cast(%1123, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %1125 = @func_8496() /* ty=Tensor[(2, 6, 5), float64] */;
  %1126 = sigmoid(%1124) /* ty=Tensor[(12, 3, 12), float32] */;
  (%1125, meta[relay.Constant][83] /* ty=Tensor[(432), float32] */, %1126)
}

def @func_11544() -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  @func_11542() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */
}

def @func_14036(%var_14034: Tensor[(1, 121), float32], %var_14035: Tensor[(1573), float32]) -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(1, 121), float32], Tensor[(1573), float32]) {
  @func_14032(%var_14034, %var_14035) /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(1, 121), float32], Tensor[(1573), float32]) */
}

def @func_10271() -> (Tensor[(2, 6, 5), float64],) {
  @func_10269() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_4829(%var_4827: Tensor[(2, 6, 5), float64]) -> (Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) {
  @func_4826(%var_4827) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_15382() -> Tensor[(2, 6, 5), float64] {
  %1127 = @func_14747() /* ty=(Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1127.2
}

def @func_13040() -> (Tensor[(2, 6, 5), float64],) {
  @func_13038() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5736() -> Tensor[(2, 6, 5), float64] {
  %1128 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_4176() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1128() /* ty=Tensor[(2, 6, 5), float64] */
}

def @main(%var_17772: Tensor[(1638), float32]) -> (Tensor[(1638), uint8], Tensor[(1638), float64]) {
  %1129 = @func_12214() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) */;
  %1130 = %1129.3;
  %1131 = cast(%var_17772, dtype="uint8") /* ty=Tensor[(1638), uint8] */;
  %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1133 = cast(%1130, dtype="uint8") /* ty=Tensor[(1638), uint8] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1135 = cast(%1130, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %1136 = add(%1133, %1134) /* ty=Tensor[(1638), uint8] */;
  %1137 = log(%1135) /* ty=Tensor[(1638), float64] */;
  (%1136, %1137)
}

def @func_7562() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_10512(%var_10483: Tensor[(121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32]) {
  %1138 = cast(%var_10483, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1139 = reshape(%1138, newshape=[121]) /* ty=Tensor[(121), float32] */;
  %1140 = @func_8007(%1139) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(121), float32], Tensor[(432), float32]) */;
  %1141 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
  %1142 = %1140.0;
  (%1141, %1142, %var_10483)
}

def @func_7316() -> (Tensor[(2, 6, 5), float64],) {
  %1143 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_13038() -> (Tensor[(2, 6, 5), float64],) {
  %1145 = @func_11584() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1145,)
}

def @func_2492(%var_2447: Tensor[(6, 12, 16), float32], %var_2457: Tensor[(9, 60), uint16], %var_2465: Tensor[(2535), float64], %var_2476: Tensor[(1573), float32]) -> (Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) {
  %1146 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
  %1147 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(9, 60), uint16] */;
  %1148 = reshape(%1146, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1149 = reshape(%1147, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1150 = cast(%var_2465, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1151 = cast(meta[relay.Constant][84] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1152 = cast(meta[relay.Constant][85] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1153 = reshape(%1150, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %1154 = reshape(%1151, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %1155 = reshape(%1152, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1156 = @func_1256(%1153, %1154, %1155) /* ty=(Tensor[(13, 13, 15), float64], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 13, 15), float32], Tensor[(12, 3, 12), float32], Tensor[(432), float32]) */;
  %1157 = cast(%var_2447, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %1158 = atan(%1157) /* ty=Tensor[(6, 12, 16), float32] */;
  %1159 = cast(%var_2447, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%1158, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1163 = cast(meta[relay.Constant][86] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1164 = cast(%var_2476, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1165 = reshape(%1163, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %1166 = reshape(%1164, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %1167 = @func_277(%1165, %1166) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %1168 = cast(meta[relay.Constant][86] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1169 = cast(%var_2476, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1170 = reshape(%1168, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float32] */;
  %1171 = reshape(%1169, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %1172 = @func_277(%1170, %1171) /* ty=(Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(13, 11, 11), bool], Tensor[(13, 14, 9), float32]) */;
  %1173 = %1172.0;
  %1174 = cast(%1173, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %1175 = @func_1452(%1148, %1149) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1176 = %1156.0;
  %1177 = equal(%1161, %1162) /* ty=Tensor[(6, 12, 16), bool] */;
  %1178 = %1167.3;
  %1179 = cosh(%1174) /* ty=Tensor[(13, 14, 9), float64] */;
  (%1175, %var_2457, %1176, %var_2465, meta[relay.Constant][84] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][85] /* ty=Tensor[(432), float32] */, %1177, %1178, meta[relay.Constant][86] /* ty=Tensor[(121), float32] */, %var_2476, %1179)
}

def @func_12936() -> (Tensor[(2, 6, 5), float64],) {
  %1181 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %1180 = @func_9953() /* ty=Tensor[(2, 6, 5), float64] */;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5680(%var_5678: Tensor[(1, 3, 7), uint32], %var_5679: Tensor[(45), uint16]) -> (Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) {
  @func_5676(%var_5678, %var_5679) /* ty=(Tensor[(1, 3, 7), uint32], Tensor[(13, 14, 9), float32], Tensor[(182, 9), float32], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(13, 121), float32]) */
}

def @func_10424() -> (Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) {
  %1186 = fn () -> (Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) {
    %1182 = cast(meta[relay.Constant][87] /* ty=Tensor[(5, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 16), float32] */;
    %1183 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %1184 = exp(%1182) /* ty=Tensor[(5, 15, 16), float32] */;
    %1185 = %1183.0;
    (%1184, %1185)
  };
  %1186() /* ty=(Tensor[(5, 15, 16), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_12102() -> (Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) {
  %1196 = fn () -> (Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) {
    %1187 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
    %1188 = %1187.1;
    %1189 = cast(%1188, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
    %1190 = cast(%1188, dtype="uint16") /* ty=Tensor[(3, 15, 12), uint16] */;
    %1191 = reshape(%1189, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
    %1192 = reshape(%1190, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
    %1193 = cast(%1188, dtype="float32") /* ty=Tensor[(3, 15, 12), float32] */;
    %1194 = @func_1452(%1191, %1192) /* ty=Tensor[(3, 15, 12), uint16] */;
    %1195 = atan(%1193) /* ty=Tensor[(3, 15, 12), float32] */;
    (%1194, %1195)
  };
  %1196() /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(3, 15, 12), float32]) */
}

def @func_15703() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1197 = @func_10269() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1198 = @func_14866() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */;
  %1199 = %1197.0;
  %1200 = %1198.1;
  (%1199, %1200)
}

def @func_14867() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
  %1208 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) {
    %1201 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
    %1202 = @func_14722() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %1203 = @func_11385() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(3, 15, 12), float64]) */;
    %1204 = %1201.0;
    %1205 = %1202.0;
    %1206 = @func_10353() /* ty=Tensor[(2, 6, 5), float64] */;
    %1207 = %1203.1;
    (%1204, %1205, %1206, %1207)
  };
  %1208() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), float64]) */
}

def @func_17435() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1209 = @func_14583() /* ty=Tensor[(2, 6, 5), float64] */;
  %1210 = @func_8133() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1209, %1210)
}

def @func_9285(%var_9283: Tensor[(14, 5, 5), float64], %var_9284: Tensor[(432), float32]) -> (Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) {
  @func_9281(%var_9283, %var_9284) /* ty=(Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) */
}

def @func_7683() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1213 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
    %1211 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %1212 = @func_5735() /* ty=Tensor[(2, 6, 5), float64] */;
    (%1211, %1212)
  };
  %1213() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_5121(%var_5120: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) {
  %1219 = fn (%var_5117: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) {
    %1214 = cast(%var_5117, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1215 = reshape(%1214, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %1216 = @func_2539(%1215) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
    %1217 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %1218 = %1216.3;
    (%1217, %1218, %var_5117)
  };
  %1219(%var_5120) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(432), float32]) */
}

def @func_108(%var_106: Tensor[(13, 14, 9), float32]) -> (Tensor[(13, 14, 9), float32],) {
  @func_105(%var_106) /* ty=(Tensor[(13, 14, 9), float32],) */
}

def @func_10551() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1220 = @func_8717() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1221 = @func_8616() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1222 = %1220.0;
  %1223 = %1221.0;
  (%1222, %1223)
}

def @func_9417() -> Tensor[(45), uint16] {
  %1224 = fn () -> Tensor[(45), uint16] {
    @func_9308() /* ty=Tensor[(45), uint16] */
  };
  %1224() /* ty=Tensor[(45), uint16] */
}

def @func_12687() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  @func_12685() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_8321(%var_8319: Tensor[(1, 121), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) {
  @func_8318(%var_8319) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 195), float64], Tensor[(1, 121), float32]) */
}

def @func_10236(%var_10171: Tensor[(45), uint16], %var_10182: Tensor[(540), uint16], %var_10211: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], uint16, Tensor[(45), uint16], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(12, 3, 12), float32], Tensor[(36, 12), float64], Tensor[(2, 6, 5), float64], Tensor[(16, 5, 13), float64]) {
  %1225 = cast(%var_10182, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1226 = cast(%var_10182, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1227 = reshape(%1225, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1228 = reshape(%1226, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1229 = cast(meta[relay.Constant][88] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1230 = cast(%var_10171, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1231 = reshape(%1229, newshape=[]) /* ty=uint16 */;
  %1232 = reshape(%1230, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1233 = @func_7063(%1231, %1232) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], uint16, Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(36, 12), float32], Tensor[(432), float32]) */;
  %1234 = %1233.5;
  %1235 = cast(%1234, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %1236 = reshape(%1235, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1237 = @func_2539(%1236) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %1238 = cast(%var_10211, dtype="uint8") /* ty=Tensor[(36, 12), uint8] */;
  %1239 = shape_of(%1234, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1240 = cast(%1234, dtype="uint8") /* ty=Tensor[(36, 12), uint8] */;
  %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1242 = multiply(%1240, %1241) /* ty=Tensor[(36, 12), uint8] */;
  %1243 = cast(%var_10211, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %1244 = shape_of(%1242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1245 = cast(%1242, dtype="float64") /* ty=Tensor[(36, 12), float64] */;
  %1246 = dyn.reshape(%1243, %1244, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1247 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %1248 = cast(%1247, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %1249 = reshape(%1248, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %1250 = @func_9055(%1249) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float32], Tensor[(2, 6, 5), float64]) */;
  %1251 = %1237.1;
  %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %1253 = reshape(%1252, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1254 = @func_2539(%1253) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) */;
  %1255 = @func_1452(%1227, %1228) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1256 = maximum(%1245, %1246) /* ty=Tensor[(36, 12), float64] */;
  %1257 = %1250.0;
  %1258 = %1254.0;
  (%1247, meta[relay.Constant][88] /* ty=uint16 */, %var_10171, %1255, %var_10182, %1251, %1256, %1257, %1258)
}

def @func_10104() -> (Tensor[(2, 6, 5), float64],) {
  %1259 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1260 = %1259.0;
  (%1260,)
}

def @func_13399(%var_13396: Tensor[(40, 10), int16], %var_13397: Tensor[(1296), float32], %var_13398: Tensor[(40, 10), int16]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(40, 10), bool], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(40, 10), float32]) {
  %1281 = fn (%var_13332: Tensor[(40, 10), int16], %var_13333: Tensor[(1296), float32], %var_13340: Tensor[(40, 10), int16]) -> (Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(40, 10), bool], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(40, 10), float32]) {
    %1261 = cast(%var_13332, dtype="int16") /* ty=Tensor[(40, 10), int16] */;
    %1262 = cast(%var_13333, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %1263 = reshape(%1261, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), int16] */;
    %1264 = reshape(%1262, newshape=[1296, 1]) /* ty=Tensor[(1296, 1), float32] */;
    %1265 = @func_12555(%1263, %1264) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32], Tensor[(4, 10, 10), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
    %1266 = cast(%var_13340, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
    %1267 = shape_of(%var_13332, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1268 = cast(%var_13332, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
    %1269 = dyn.reshape(%1266, %1267, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1270 = cast(meta[relay.Constant][89] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1271 = reshape(%1270, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
    %1272 = @func_6518(%1271) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */;
    %1273 = cast(%var_13332, dtype="float32") /* ty=Tensor[(40, 10), float32] */;
    %1274 = @func_9754() /* ty=Tensor[(2, 6, 5), float64] */;
    %1275 = @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */;
    %1276 = @func_12820() /* ty=Tensor[(2, 6, 5), float64] */;
    %1277 = %1265.3;
    %1278 = greater(%1268, %1269) /* ty=Tensor[(40, 10), bool] */;
    %1279 = %1272.0;
    %1280 = cosh(%1273) /* ty=Tensor[(40, 10), float32] */;
    (%1274, %1275, %1276, %1277, %var_13333, %1278, %1279, meta[relay.Constant][89] /* ty=Tensor[(432), float32] */, %1280)
  };
  %1281(%var_13396, %var_13397, %var_13398) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(40, 10), bool], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(40, 10), float32]) */
}

def @func_13888() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(845, 3), float64]) {
  @func_13886() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(845, 3), float64]) */
}

def @func_6121() -> Tensor[(2, 6, 5), float64] {
  %1282 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_5327() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1282() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_16846(%var_16845: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
  %1289 = fn (%var_16820: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) {
    %1283 = cast(%var_16820, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %1284 = reshape(%1283, newshape=[1296, 1]) /* ty=Tensor[(1296, 1), float32] */;
    %1285 = @func_13690(%1284) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296, 1), float32]) */;
    %1286 = @func_14764() /* ty=Tensor[(2, 6, 5), float64] */;
    %1287 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
    %1288 = %1285.1;
    (%1286, %1287, %1288, %var_16820)
  };
  %1289(%var_16845) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1296), float32]) */
}

def @func_7793(%var_7769: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(45), uint16], Tensor[(1573), float32], Tensor[(432), float32]) {
  %1290 = @func_7560() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1291 = cast(%var_7769, dtype="uint16") /* ty=Tensor[(45), uint16] */;
  %1292 = cast(meta[relay.Constant][90] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1293 = reshape(%1291, newshape=[45]) /* ty=Tensor[(45), uint16] */;
  %1294 = reshape(%1292, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
  %1295 = @func_4379(%1293, %1294) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
  %1296 = %1290.1;
  %1297 = cast(%1296, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %1298 = reshape(%1297, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %1299 = @func_4826(%1298) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
  %1300 = %1295.3;
  %1301 = %1299.2;
  (%1296, %1300, %var_7769, meta[relay.Constant][90] /* ty=Tensor[(1573), float32] */, %1301)
}

def @func_16599(%var_16597: Tensor[(3, 1, 11), float32], %var_16598: Tensor[(3, 1, 11), float32]) -> (Tensor[(3, ?, 11), bool],) {
  %1307 = fn (%var_16591: Tensor[(3, 1, 11), float32], %var_16592: Tensor[(3, 1, 11), float32]) -> (Tensor[(3, ?, 11), bool],) {
    %1302 = cast(%var_16592, dtype="bool") /* ty=Tensor[(3, 1, 11), bool] */;
    %1303 = shape_of(%var_16591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1304 = cast(%var_16591, dtype="bool") /* ty=Tensor[(3, 1, 11), bool] */;
    %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1306 = not_equal(%1304, %1305) /* ty=Tensor[(3, ?, 11), bool] */;
    (%1306,)
  };
  %1307(%var_16597, %var_16598) /* ty=(Tensor[(3, ?, 11), bool],) */
}

def @func_15773() -> Tensor[(2, 6, 5), float64] {
  @func_15208() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_17570() -> (Tensor[(2, 6, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(350, 1), float64], Tensor[(432), float32]) {
  %1308 = @func_6262() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1309 = cast(meta[relay.Constant][91] /* ty=Tensor[(350, 1), float64] */, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
  %1310 = cast(meta[relay.Constant][92] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1311 = reshape(%1309, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %1312 = reshape(%1310, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1313 = @func_9281(%1311, %1312) /* ty=(Tensor[(14, 5, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(432), float32]) */;
  %1314 = %1308.0;
  %1315 = %1313.0;
  (%1314, %1315, meta[relay.Constant][91] /* ty=Tensor[(350, 1), float64] */, meta[relay.Constant][92] /* ty=Tensor[(432), float32] */)
}

def @func_16988() -> (Tensor[(3, 15, 12), uint16],) {
  %1316 = @func_15333() /* ty=Tensor[(3, 15, 12), uint16] */;
  (%1316,)
}

def @func_12468() -> (Tensor[(2, 6, 5), float64],) {
  %1319 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %1317 = @func_7316() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %1318 = %1317.0;
    (%1318,)
  };
  %1319() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_2539(%var_2517: Tensor[(432), float32]) -> (Tensor[(16, 5, 13), float64], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16]) {
  %1320 = cast(meta[relay.Constant][93] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  %1321 = cast(%var_2517, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1322 = reshape(%1321, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
  %1323 = @func_981(%1322) /* ty=(Tensor[(12, 3, 12), float32],) */;
  %1324 = cast(meta[relay.Constant][94] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1325 = cast(meta[relay.Constant][94] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %1326 = reshape(%1324, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1327 = reshape(%1325, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint16] */;
  %1328 = rsqrt(%1320) /* ty=Tensor[(16, 5, 13), float64] */;
  %1329 = %1323.0;
  %1330 = @func_1452(%1326, %1327) /* ty=Tensor[(3, 15, 12), uint16] */;
  (%1328, %1329, %var_2517, %1330, meta[relay.Constant][94] /* ty=Tensor[(540), uint16] */)
}

def @func_5393() -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
  %1344 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) {
    %1331 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %1332 = cast(%1331, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    %1333 = reshape(%1332, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
    %1334 = @func_4826(%1333) /* ty=(Tensor[(2, 6, 5), uint16], Tensor[(12, 3, 12), float32], Tensor[(432), float32], Tensor[(2, 6, 5), float64]) */;
    %1335 = cast(meta[relay.Constant][95] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %1336 = cast(meta[relay.Constant][96] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1337 = cast(meta[relay.Constant][97] /* ty=Tensor[(45), uint16] */, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %1338 = reshape(%1335, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %1339 = reshape(%1336, newshape=[]) /* ty=uint16 */;
    %1340 = reshape(%1337, newshape=[45, 1]) /* ty=Tensor[(45, 1), uint16] */;
    %1341 = @func_4427(%1338, %1339, %1340) /* ty=(Tensor[(2, 6, 5), float32], Tensor[(540), uint16], Tensor[(672), uint64], Tensor[(1152), float32], Tensor[(540), uint16], Tensor[(2535), float64], Tensor[(1573), float32], Tensor[(432), float32], uint16, Tensor[(45, 1), uint16]) */;
    %1342 = %1334.0;
    %1343 = %1341.8;
    (%1331, %1342, %1343, meta[relay.Constant][95] /* ty=Tensor[(1152), float32] */, meta[relay.Constant][96] /* ty=uint16 */, meta[relay.Constant][97] /* ty=Tensor[(45), uint16] */)
  };
  %1344() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */
}

def @func_16057() -> Tensor[(2, 6, 5), float64] {
  %1345 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_10353() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1345() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_5821(%var_5819: Tensor[(9, 16, 3), float32], %var_5820: Tensor[(2535), float64]) -> (Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) {
  %1359 = fn (%var_5795: Tensor[(9, 16, 3), float32], %var_5805: Tensor[(2535), float64]) -> (Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) {
    %1346 = cast(meta[relay.Constant][98] /* ty=Tensor[(9, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
    %1347 = shape_of(%var_5795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1348 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
    %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1350 = cast(%var_5805, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %1351 = reshape(%1350, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %1352 = @func_4565(%1351) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432, 1), float32]) */;
    %1353 = cast(%var_5795, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
    %1354 = reshape(%1353, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), float32] */;
    %1355 = @func_981(%1354) /* ty=(Tensor[(12, 3, 12), float32],) */;
    %1356 = floor_mod(%1348, %1349) /* ty=Tensor[(9, 16, 3), float32] */;
    %1357 = %1352.0;
    %1358 = %1355.0;
    (%1356, %1357, %var_5805, %1358)
  };
  %1359(%var_5819, %var_5820) /* ty=(Tensor[(9, 16, 3), float32], Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(12, 3, 12), float32]) */
}

def @func_15564() -> (Tensor[(432), float32],) {
  %1362 = fn () -> (Tensor[(432), float32],) {
    %1360 = @func_15035() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(12, 3, 12), float32]) */;
    %1361 = %1360.1;
    (%1361,)
  };
  %1362() /* ty=(Tensor[(432), float32],) */
}

def @func_8134() -> Tensor[(2, 6, 5), float64] {
  %1364 = fn () -> Tensor[(2, 6, 5), float64] {
    %1363 = @func_8119() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16]) */;
    %1363.0
  };
  %1364() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_5894() -> Tensor[(2, 6, 5), float64] {
  %1365 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_5874() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1365() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_10748(%var_10746: Tensor[(1638), float32], %var_10747: Tensor[(1296), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(4, 108), float32], Tensor[(12, 3, 12), float32], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(12, 36), float32]) {
  @func_10744(%var_10746, %var_10747) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 108), float32], Tensor[(12, 3, 12), float32], Tensor[(13, 14, 9), float32], Tensor[(1638), float32], Tensor[(2, 6, 5), float64], Tensor[(1296), float32], Tensor[(12, 36), float32]) */
}

def @func_16110() -> Tensor[(45), uint16] {
  %1366 = fn () -> Tensor[(45), uint16] {
    @func_9308() /* ty=Tensor[(45), uint16] */
  };
  %1366() /* ty=Tensor[(45), uint16] */
}

def @func_6262() -> (Tensor[(2, 6, 5), float64],) {
  %1367 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  (%1367,)
}

def @func_12214() -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) {
  %1379 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) {
    %1368 = cast(meta[relay.Constant][99] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %1369 = reshape(%1368, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %1370 = @func_6426(%1369) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
    %1371 = cast(meta[relay.Constant][100] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
    %1372 = reshape(%1371, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %1373 = @func_11972(%1372) /* ty=(Tensor[(121), float32], Tensor[(1638), float32], Tensor[(169, 15), float64], Tensor[(121), float32], Tensor[(45), int64], Tensor[(45), uint16]) */;
    %1374 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %1375 = @func_7686() /* ty=Tensor[(2, 6, 5), float64] */;
    %1376 = %1370.1;
    %1377 = %1373.1;
    %1378 = %1374.0;
    (%1375, %1376, meta[relay.Constant][99] /* ty=Tensor[(2535), float64] */, %1377, meta[relay.Constant][100] /* ty=Tensor[(5, 9), float64] */, %1378)
  };
  %1379() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(5, 9), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_10683() -> Tensor[(2, 6, 5), float64] {
  @func_10681() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_6426(%var_6397: Tensor[(2535), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) {
  %1380 = cast(%var_6397, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1381 = reshape(%1380, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1382 = @func_5270(%1381) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %1383 = @func_6120() /* ty=Tensor[(2, 6, 5), float64] */;
  %1384 = %1382.1;
  (%1383, %1384, %var_6397)
}

def @func_16186(%var_16174: Tensor[(117), float64], %var_16175: Tensor[(1274), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float32], float64, Tensor[(117), float64], Tensor[(1274), float32]) {
  %1385 = cast(-9.06761f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1386 = cast(%var_16174, dtype="float64") /* ty=Tensor[(117), float64] */;
  %1387 = cast(%var_16175, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %1388 = reshape(%1385, newshape=[]) /* ty=float64 */;
  %1389 = reshape(%1386, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %1390 = reshape(%1387, newshape=[1274]) /* ty=Tensor[(1274), float32] */;
  %1391 = @func_14158(%1388, %1389, %1390) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(7, 14, 13), float32], Tensor[(1274), float32], Tensor[(2535), float32], Tensor[(13, 195), float32], Tensor[(9, ?, 13), float32]) */;
  %1392 = @func_14218() /* ty=Tensor[(2, 6, 5), float64] */;
  %1393 = %1391.3;
  (%1392, %1393, -9.06761f64 /* ty=float64 */, %var_16174, %var_16175)
}

def @func_13969() -> Tensor[(3, 15, 12), float64] {
  %1394 = @func_11171() /* ty=(Tensor[(3, 15, 12), float64],) */;
  %1394.0
}

def @func_8352() -> Tensor[(2, 6, 5), float64] {
  %1395 = fn () -> Tensor[(2, 6, 5), float64] {
    @func_8021() /* ty=Tensor[(2, 6, 5), float64] */
  };
  %1395() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_14972() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(9, 16, 3), float32], Tensor[(?, 540), float64], Tensor[(11, 15, 8), float64], Tensor[(2, 6, 5), float64]) {
  @func_14970() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(9, 16, 3), float32], Tensor[(?, 540), float64], Tensor[(11, 15, 8), float64], Tensor[(2, 6, 5), float64]) */
}

def @func_13840() -> (Tensor[(2, 6, 5), float64],) {
  @func_13838() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_15448() -> Tensor[(3, 15, 12), float32] {
  @func_15446() /* ty=Tensor[(3, 15, 12), float32] */
}

def @func_15305() -> (Tensor[(2, 6, 5), float64],) {
  @func_15303() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_13886() -> (Tensor[(2, 6, 5), float64], Tensor[(2535), float64], Tensor[(845, 3), float64]) {
  %1396 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
  %1397 = cast(meta[relay.Constant][101] /* ty=Tensor[(845, 3), float64] */, dtype="float64") /* ty=Tensor[(845, 3), float64] */;
  %1398 = reshape(%1397, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %1399 = @func_5270(%1398) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(2535), float64]) */;
  %1400 = %1396.0;
  %1401 = %1399.2;
  (%1400, %1401, meta[relay.Constant][101] /* ty=Tensor[(845, 3), float64] */)
}

def @func_8684() -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) {
  %1407 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) {
    %1402 = @func_6807() /* ty=(Tensor[(2, 6, 5), float64], uint16) */;
    %1403 = @func_6920() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(540), uint16], Tensor[(2, 6, 5), uint16], Tensor[(546, 3), float64]) */;
    %1404 = %1402.0;
    %1405 = %1403.2;
    %1406 = @func_5327() /* ty=Tensor[(2, 6, 5), float64] */;
    (%1404, %1405, %1406)
  };
  %1407() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */
}

def @func_6202(%var_6198: Tensor[(96, 12), float32], %var_6199: Tensor[(540), uint16], %var_6200: Tensor[(2535, 1), float64], %var_6201: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) {
  %1432 = fn (%var_6169: Tensor[(96, 12), float32], %var_6170: Tensor[(540), uint16], %var_6171: Tensor[(2535, 1), float64], %var_6181: Tensor[(45), uint16]) -> (Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) {
    %1408 = cast(meta[relay.Constant][102] /* ty=Tensor[(1573), float32] */, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
    %1409 = cast(%var_6171, dtype="uint16") /* ty=Tensor[(2535, 1), uint16] */;
    %1410 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(45), uint16] */;
    %1411 = cast(meta[relay.Constant][102] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %1412 = reshape(%1410, newshape=[45]) /* ty=Tensor[(45), uint16] */;
    %1413 = reshape(%1411, newshape=[13, 121]) /* ty=Tensor[(13, 121), float32] */;
    %1414 = @func_4379(%1412, %1413) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], uint16, Tensor[(45), uint16], Tensor[(13, 121), float32]) */;
    %1415 = cast(%var_6169, dtype="float32") /* ty=Tensor[(96, 12), float32] */;
    %1416 = cast(%var_6170, dtype="uint16") /* ty=Tensor[(540), uint16] */;
    %1417 = cast(%var_6171, dtype="float64") /* ty=Tensor[(2535, 1), float64] */;
    %1418 = cast(meta[relay.Constant][102] /* ty=Tensor[(1573), float32] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %1419 = reshape(%1415, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float32] */;
    %1420 = reshape(%1416, newshape=[9, 60]) /* ty=Tensor[(9, 60), uint16] */;
    %1421 = reshape(%1417, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %1422 = reshape(%1418, newshape=[1573]) /* ty=Tensor[(1573), float32] */;
    %1423 = @func_2492(%1419, %1420, %1421, %1422) /* ty=(Tensor[(3, 15, 12), uint16], Tensor[(9, 60), uint16], Tensor[(13, 13, 15), float64], Tensor[(2535), float64], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(6, 12, 16), bool], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(13, 14, 9), float64]) */;
    %1424 = %1423.8;
    %1425 = cast(%1424, dtype="float64") /* ty=Tensor[(121), float64] */;
    %1426 = sigmoid(%1425) /* ty=Tensor[(121), float64] */;
    %1427 = cast(%1426, dtype="float64") /* ty=Tensor[(121), float64] */;
    %1428 = @func_5893() /* ty=Tensor[(2, 6, 5), float64] */;
    %1429 = right_shift(%1408, %1409) /* ty=Tensor[(2535, 1573), uint16] */;
    %1430 = %1414.0;
    %1431 = log10(%1427) /* ty=Tensor[(121), float64] */;
    (%1428, %var_6169, %var_6170, %1429, %1430, %var_6181, %1431)
  };
  %1432(%var_6198, %var_6199, %var_6200, %var_6201) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(96, 12), float32], Tensor[(540), uint16], Tensor[(2535, 1573), uint16], Tensor[(2, 6, 5), float64], Tensor[(45), uint16], Tensor[(121), float64]) */
}

def @func_6520(%var_6519: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) {
  %1440 = fn (%var_6491: Tensor[(36, 12), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) {
    %1433 = cast(meta[relay.Constant][103] /* ty=Tensor[(121), float32] */, dtype="float32") /* ty=Tensor[(121), float32] */;
    %1434 = cast(%var_6491, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
    %1435 = reshape(%1433, newshape=[121]) /* ty=Tensor[(121), float32] */;
    %1436 = reshape(%1434, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %1437 = @func_4923(%1435, %1436) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) */;
    %1438 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %1439 = %1437.4;
    (%1438, %1439, meta[relay.Constant][103] /* ty=Tensor[(121), float32] */, %var_6491)
  };
  %1440(%var_6519) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(1638), float32], Tensor[(121), float32], Tensor[(36, 12), float32]) */
}

def @func_12705() -> (Tensor[(2, 6, 5), float64],) {
  @func_12703() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_10681() -> Tensor[(2, 6, 5), float64] {
  @func_6120() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_15333() -> Tensor[(3, 15, 12), uint16] {
  @func_8930() /* ty=Tensor[(3, 15, 12), uint16] */
}

def @func_6808() -> (Tensor[(2, 6, 5), float64], uint16) {
  %1444 = fn () -> (Tensor[(2, 6, 5), float64], uint16) {
    %1441 = @func_5392() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], uint16, Tensor[(1152), float32], uint16, Tensor[(45), uint16]) */;
    %1442 = @func_4176() /* ty=Tensor[(2, 6, 5), float64] */;
    %1443 = %1441.2;
    (%1442, %1443)
  };
  %1444() /* ty=(Tensor[(2, 6, 5), float64], uint16) */
}

def @func_12282() -> (Tensor[(45), uint16],) {
  %1445 = @func_10056() /* ty=(Tensor[(45), uint16],) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_14747() -> (Tensor[(45), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) {
  %1447 = @func_6361() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1448 = @func_14357() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1449 = @func_13741() /* ty=Tensor[(45), uint16] */;
  %1450 = %1447.0;
  %1451 = %1448.1;
  (%1449, %1450, %1451)
}

def @func_15303() -> (Tensor[(2, 6, 5), float64],) {
  %1452 = @func_14357() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
  %1453 = %1452.0;
  (%1453,)
}

def @func_14765() -> Tensor[(2, 6, 5), float64] {
  %1455 = fn () -> Tensor[(2, 6, 5), float64] {
    %1454 = @func_7682() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64]) */;
    %1454.0
  };
  %1455() /* ty=Tensor[(2, 6, 5), float64] */
}

def @func_4927(%var_4925: Tensor[(121), float32], %var_4926: Tensor[(432), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) {
  @func_4923(%var_4925, %var_4926) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(13, 14, 9), float32], Tensor[(121), float32], Tensor[(1573), float32], Tensor[(1638), float32], Tensor[(432), float32], Tensor[(13, 195), float64], Tensor[(13, 195), float64]) */
}

def @func_14970() -> (Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32], Tensor[(540), uint16], Tensor[(45), uint16], Tensor[(9, 16, 3), float32], Tensor[(?, 540), float64], Tensor[(11, 15, 8), float64], Tensor[(2, 6, 5), float64]) {
  %1456 = cast(meta[relay.Constant][104] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1457 = reshape(%1456, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1458 = @func_11326(%1457) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(121), float32], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), uint16], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(432), float32], Tensor[(432), float32]) */;
  %1459 = @func_12742() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) */;
  %1460 = %1458.8;
  %1461 = cast(%1460, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1462 = reshape(%1461, newshape=[1, 432]) /* ty=Tensor[(1, 432), float32] */;
  %1463 = @func_14672(%1462) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(9, 16, 3), float32], Tensor[(1, 432), float32], Tensor[(2535), float64]) */;
  %1464 = cast(meta[relay.Constant][104] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1465 = reshape(%1464, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1466 = @func_7891(%1465) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(2, 6, 5), float64], Tensor[(?, 540), bool], Tensor[(1, 45), uint16], Tensor[(36, 12), float32], Tensor[(?, 3, 7), bool]) */;
  %1467 = %1466.3;
  %1468 = cast(%1467, dtype="float64") /* ty=Tensor[(?, 540), float64] */;
  %1469 = @func_13094() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 15, 16), float32]) */;
  %1470 = @func_12742() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16]) */;
  %1471 = @func_10681() /* ty=Tensor[(2, 6, 5), float64] */;
  %1472 = %1459.1;
  %1473 = @func_13741() /* ty=Tensor[(45), uint16] */;
  %1474 = %1463.1;
  %1475 = log10(%1468) /* ty=Tensor[(?, 540), float64] */;
  %1476 = %1469.0;
  %1477 = %1470.0;
  (%1471, meta[relay.Constant][104] /* ty=Tensor[(432), float32] */, %1460, %1472, %1473, %1474, %1475, %1476, %1477)
}

def @func_9899() -> (Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) {
  %1481 = fn () -> (Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) {
    %1478 = @func_8683() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(540), uint16], Tensor[(2, 6, 5), float64]) */;
    %1479 = @func_9204() /* ty=Tensor[(3, 15, 12), float64] */;
    %1480 = %1478.1;
    (%1479, %1480)
  };
  %1481() /* ty=(Tensor[(3, 15, 12), float64], Tensor[(540), uint16]) */
}

def @func_9953() -> Tensor[(2, 6, 5), float64] {
  %1482 = @func_8242() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %1482.0
}

def @func_11584() -> Tensor[(2, 6, 5), float64] {
  %1483 = @func_7495() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(3, 15, 12), uint16], Tensor[(108, 4), float32]) */;
  %1483.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen927/build/output.py", line 4372, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:50:25] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


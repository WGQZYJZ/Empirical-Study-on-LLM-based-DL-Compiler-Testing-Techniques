==========mod==========
#[version = "0.0.5"]
def @func_2171() -> (Tensor[(1, 15, 5), float32],) {
  %0 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  (%0,)
}

def @func_3687(%var_3652: Tensor[(567), float32], %var_3657: Tensor[(567), bool]) -> (Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) {
  %1 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %2 = %1.2;
  %3 = cast(%var_3652, dtype="bool") /* ty=Tensor[(567), bool] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(1), int32] */;
  %5 = cast(%2, dtype="bool") /* ty=Tensor[(567), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?), bool] */;
  %7 = greater(%5, %6) /* ty=Tensor[(567), bool] */;
  %8 = cast(%var_3657, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(1), int32] */;
  %10 = cast(%7, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %12 = cast(%var_3652, dtype="uint16") /* ty=Tensor[(567), uint16] */;
  %13 = shape_of(%2, dtype="int32") /* ty=Tensor[(1), int32] */;
  %14 = cast(%2, dtype="uint16") /* ty=Tensor[(567), uint16] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %16 = cast(%var_3657, dtype="float32") /* ty=Tensor[(567), float32] */;
  %17 = minimum(%10, %11) /* ty=Tensor[(567), uint32] */;
  %18 = left_shift(%14, %15) /* ty=Tensor[(567), uint16] */;
  %19 = rsqrt(%16) /* ty=Tensor[(567), float32] */;
  (%17, %18, %19)
}

def @func_4071() -> (Tensor[(1, 15, 5), float32],) {
  %20 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
  %21 = %20.2;
  (%21,)
}

def @func_6457(%var_6443: Tensor[(4, 5, 2), float64], %var_6444: Tensor[(4, 5, 2), float64]) -> (Tensor[(4, 5, 2), float64], Tensor[(1078), float64], Tensor[(16), float32], Tensor[(1078), float32]) {
  %22 = cast(%var_6444, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %23 = shape_of(%var_6443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_6443, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %28 = reshape(%26, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %29 = reshape(%27, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %30 = @func_5655(%28, %29) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) */;
  %31 = power(%24, %25) /* ty=Tensor[(4, 5, 2), float64] */;
  %32 = %30.5;
  (%31, %32, meta[relay.Constant][0] /* ty=Tensor[(16), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1078), float32] */)
}

def @func_3733() -> (Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) {
  %33 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 120), int16] */, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 120), int16] */, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
  %36 = reshape(%34, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %37 = reshape(%35, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %38 = @func_2043(%36, %37) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %39 = %33.0;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %41 = reshape(%40, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %42 = %38.3;
  %43 = @func_2708(%41) /* ty=Tensor[(3, 4, 3), int64] */;
  (%39, %42, meta[relay.Constant][2] /* ty=Tensor[(4, 120), int16] */, %43)
}

def @func_544(%var_518: uint32, %var_519: Tensor[(16, 11, 8), uint32]) -> (Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %44 = cast(%var_518, dtype="uint32") /* ty=uint32 */;
  %45 = cast(%var_519, dtype="uint32") /* ty=Tensor[(16, 11, 8), uint32] */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %47 = reshape(%46, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %48 = cast(meta[relay.Constant][4] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %50 = reshape(%48, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %51 = reshape(%49, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %52 = bitwise_and(%44, %45) /* ty=Tensor[(16, 11, 8), uint32] */;
  %53 = @func_460(%47) /* ty=Tensor[(1, 10, 12), float64] */;
  %54 = @func_180(%50, %51) /* ty=Tensor[(15, 4, 8), int16] */;
  (%52, %53, meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, %54, meta[relay.Constant][4] /* ty=Tensor[(480), int16] */)
}

def @func_6995(%var_6917: Tensor[(3, 5, 2), float64], %var_6918: Tensor[(3, 5, 2), float64], %var_6923: Tensor[(6), float64], %var_6924: Tensor[(567), float32], %var_6987: Tensor[(10, 15, 14), bool]) -> (Tensor[(7, 9, 9), float32], Tensor[(6), float64], Tensor[(567), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 5, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(10, 15, 14), uint8]) {
  %55 = cast(%var_6923, dtype="float64") /* ty=Tensor[(6), float64] */;
  %56 = cast(%var_6924, dtype="float32") /* ty=Tensor[(567), float32] */;
  %57 = reshape(%55, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), float64] */;
  %58 = reshape(%56, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %59 = @func_5301(%57, %58) /* ty=(Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %60 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
  %61 = cast(%var_6918, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
  %62 = cast(%var_6918, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
  %63 = shape_of(%var_6917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_6917, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %66 = multiply(%64, %65) /* ty=Tensor[(3, 5, 2), float64] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
  %68 = sinh(%67) /* ty=Tensor[(3, 5, 2), float64] */;
  %69 = cast(%66, dtype="int16") /* ty=Tensor[(3, 5, 2), int16] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="int16") /* ty=Tensor[(3, 5, 2), int16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %73 = bitwise_xor(%71, %72) /* ty=Tensor[(3, 5, 2), int16] */;
  %74 = cast(%68, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
  %79 = %78.1;
  %80 = cast(%79, dtype="uint8") /* ty=Tensor[(?, 15, 14), uint8] */;
  %81 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(10, 15, 14), uint8] */;
  %82 = %59.2;
  %83 = %60.0;
  %84 = asinh(%61) /* ty=Tensor[(3, 5, 2), float64] */;
  %85 = logical_or(%76, %77) /* ty=Tensor[(3, 5, 2), bool] */;
  %86 = left_shift(%80, %81) /* ty=Tensor[(10, 15, 14), uint8] */;
  (%82, %var_6923, %var_6924, %83, %84, %85, %86)
}

def @func_886() -> Tensor[(3, 4, 3), float64] {
  %87 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 4, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  acos(%87) /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_6326() -> Tensor[(1, 15, 5), float32] {
  %88 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
  %88.2
}

def @func_7670(%var_7628: Tensor[(3, 4, 3), float64], %var_7639: Tensor[(2, 56), float32], %var_7664: Tensor[(1, 1408), uint32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32], Tensor[(2, 56), float32], Tensor[(1, 10, 12), float64], uint32, Tensor[(1, 1408), uint32]) {
  %89 = @func_7386() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %90 = %89.0;
  %91 = cast(%var_7628, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %95 = cast(%var_7639, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
  %96 = reshape(%95, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), float32] */;
  %97 = @func_4870(%96) /* ty=(Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) */;
  %98 = cast(meta[relay.Constant][6] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %99 = cast(%var_7664, dtype="uint32") /* ty=Tensor[(1, 1408), uint32] */;
  %100 = reshape(%98, newshape=[]) /* ty=uint32 */;
  %101 = reshape(%99, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
  %102 = @func_544(%100, %101) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %103 = mod(%93, %94) /* ty=Tensor[(3, 4, 3), float64] */;
  %104 = %97.1;
  %105 = %102.1;
  (%103, %104, %var_7639, %105, meta[relay.Constant][6] /* ty=uint32 */, %var_7664)
}

def @func_4213() -> (Tensor[(3, 4, 3), float64],) {
  %106 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %107 = %106.0;
  (%107,)
}

def @func_2187() -> Tensor[(3, 4, 3), float32] {
  %108 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %108.4
}

def @func_1847(%var_1820: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) {
  %109 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %110 = %109.0;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %112 = cast(%var_1820, dtype="int16") /* ty=Tensor[(480), int16] */;
  %113 = reshape(%111, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %114 = reshape(%112, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %115 = @func_1253(%113, %114) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %116 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %117 = cast(meta[relay.Constant][7] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(352, 4), uint32] */, dtype="uint32") /* ty=Tensor[(352, 4), uint32] */;
  %119 = reshape(%117, newshape=[]) /* ty=uint32 */;
  %120 = reshape(%118, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
  %121 = @func_544(%119, %120) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %122 = %115.0;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %124 = cast(%var_1820, dtype="int16") /* ty=Tensor[(480), int16] */;
  %125 = reshape(%123, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %126 = reshape(%124, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %127 = @func_1253(%125, %126) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %128 = %116.0;
  %129 = %121.2;
  %130 = %127.5;
  (%110, %122, %var_1820, %128, %129, meta[relay.Constant][7] /* ty=uint32 */, meta[relay.Constant][8] /* ty=Tensor[(352, 4), uint32] */, %130)
}

def @func_1253(%var_1206: Tensor[(3, 4, 3), float64], %var_1249: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %131 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %132 = cast(%var_1206, dtype="uint16") /* ty=Tensor[(3, 4, 3), uint16] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="uint16") /* ty=Tensor[(3, 4, 3), uint16] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %136 = cast(%131, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %137 = cast(%131, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %138 = cosh(%137) /* ty=Tensor[(3, 4, 3), float32] */;
  %139 = cast(%131, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = cast(%var_1249, dtype="int16") /* ty=Tensor[(480), int16] */;
  %144 = cast(%var_1249, dtype="int16") /* ty=Tensor[(480), int16] */;
  %145 = reshape(%143, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %146 = reshape(%144, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %147 = subtract(%134, %135) /* ty=Tensor[(3, 4, 3), uint16] */;
  %148 = log10(%136) /* ty=Tensor[(3, 4, 3), float32] */;
  %149 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  %150 = less(%141, %142) /* ty=Tensor[(3, 4, 3), bool] */;
  %151 = @func_180(%145, %146) /* ty=Tensor[(15, 4, 8), int16] */;
  (%147, %148, %149, %150, %151, %var_1249)
}

def @func_7148(%var_7143: Tensor[(2, 15, 5), float32]) -> Tensor[(2, 15, 5), uint32] {
  %152 = @func_4946() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
  %155 = cast(%var_7143, dtype="uint32") /* ty=Tensor[(2, 15, 5), uint32] */;
  add(%154, %155) /* ty=Tensor[(2, 15, 5), uint32] */
}

def @func_5964(%var_5956: Tensor[(567), float32]) -> (Tensor[(567), float32],) {
  %156 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %157 = %156.2;
  %158 = cast(%var_5956, dtype="float32") /* ty=Tensor[(567), float32] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(1), int32] */;
  %160 = cast(%157, dtype="float32") /* ty=Tensor[(567), float32] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?), float32] */;
  %162 = mod(%160, %161) /* ty=Tensor[(567), float32] */;
  (%162,)
}

def @func_1931() -> (Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
  %163 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %167 = cast(meta[relay.Constant][9] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %168 = reshape(%166, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %169 = reshape(%167, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %170 = sigmoid(%165) /* ty=Tensor[(3, 4, 3), float64] */;
  %171 = @func_1281(%168, %169) /* ty=Tensor[(7, 9, 9), float32] */;
  (%170, %171, meta[relay.Constant][9] /* ty=Tensor[(567), float32] */)
}

def @func_904() -> (Tensor[(3, 4, 3), float64],) {
  %172 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%172,)
}

def @func_2942() -> (Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) {
  %173 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 9, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %175 = reshape(%174, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %176 = asin(%173) /* ty=Tensor[(16, 9, 6), float32] */;
  %177 = @func_2708(%175) /* ty=Tensor[(3, 4, 3), int64] */;
  (%176, %177, meta[relay.Constant][11] /* ty=Tensor[(36), float64] */)
}

def @func_4634() -> (Tensor[(1, 15, 5), float32],) {
  %178 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  (%178,)
}

def @func_2622() -> (Tensor[(3, 4, 3), float32],) {
  %179 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
  (%179,)
}

def @func_5951() -> Tensor[(3, 4, 3), float64] {
  %180 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %180.0
}

def @func_6562() -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
  %181 = @func_4250() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */;
  %182 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
  %183 = %181.1;
  (%182, %183)
}

def @func_180(%var_148: Tensor[(15, 4, 8), int16], %var_149: Tensor[(15, 4, 8), int16]) -> Tensor[(15, 4, 8), int16] {
  %184 = cast(%var_149, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
  %185 = shape_of(%var_148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%var_148, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%186, %187) /* ty=Tensor[(15, 4, 8), int16] */
}

def @func_1650(%var_1628: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, ?, 5), uint32],) {
  %188 = cast(%var_1628, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
  %189 = sqrt(%188) /* ty=Tensor[(4, 1, 5), float64] */;
  %190 = cast(%var_1628, dtype="uint32") /* ty=Tensor[(4, 1, 5), uint32] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="uint32") /* ty=Tensor[(4, 1, 5), uint32] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %194 = subtract(%192, %193) /* ty=Tensor[(4, ?, 5), uint32] */;
  (%194,)
}

def @func_2743() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) {
  %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %198 = reshape(%196, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %199 = reshape(%197, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %200 = @func_2043(%198, %199) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %201 = log(%195) /* ty=Tensor[(2, 3, 11), float64] */;
  %202 = %200.1;
  (%201, %202, meta[relay.Constant][13] /* ty=Tensor[(120, 4), int16] */)
}

def @func_2708(%var_2686: Tensor[(3, 4, 3), float64]) -> Tensor[(3, 4, 3), int64] {
  %203 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %204 = %203.1;
  %205 = cast(%var_2686, dtype="int64") /* ty=Tensor[(3, 4, 3), int64] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="int64") /* ty=Tensor[(3, 4, 3), int64] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%207, %208) /* ty=Tensor[(3, 4, 3), int64] */
}

def @func_4621(%var_4605: Tensor[(16, 8, 7), float32]) -> (Tensor[(16, 8, 7), float64],) {
  %209 = cast(%var_4605, dtype="float32") /* ty=Tensor[(16, 8, 7), float32] */;
  %210 = exp(%209) /* ty=Tensor[(16, 8, 7), float32] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(16, 8, 7), float64] */;
  %212 = log2(%211) /* ty=Tensor[(16, 8, 7), float64] */;
  (%212,)
}

def @func_5387() -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(189, 3), float32], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %213 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %214 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
  %215 = cast(meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, dtype="float32") /* ty=Tensor[(189, 3), float32] */;
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, dtype="float32") /* ty=Tensor[(189, 3), float32] */;
  %217 = reshape(%215, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %218 = reshape(%216, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %219 = %214.0;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %221 = reshape(%220, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %222 = @func_1383(%221) /* ty=(Tensor[(3, 4, 3), bool],) */;
  %223 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %224 = @func_3267() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %225 = %213.0;
  %226 = @func_1281(%217, %218) /* ty=Tensor[(7, 9, 9), float32] */;
  %227 = %222.0;
  %228 = %223.1;
  %229 = %224.0;
  (%225, %219, %226, meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, %227, %228, %229)
}

def @func_2508() -> Tensor[(210), uint16] {
  %230 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %230.3
}

def @func_7126() -> (Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %231 = @func_4250() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */;
  %232 = @func_5951() /* ty=Tensor[(3, 4, 3), float64] */;
  %233 = cast(%232, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %234 = %231.1;
  %235 = sin(%233) /* ty=Tensor[(3, 4, 3), float64] */;
  %236 = @func_6484() /* ty=Tensor[(3, 4, 3), float64] */;
  (%234, %235, %236)
}

def @func_5791(%var_5783: Tensor[(4, 4), float32]) -> (Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) {
  %237 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %238 = %237.1;
  %239 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %240 = %239.0;
  %241 = cast(%238, dtype="bool") /* ty=bool */;
  %242 = cast(%240, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %243 = cast(%var_5783, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %244 = reshape(%243, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %245 = @func_5711(%244) /* ty=(Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) */;
  %246 = @func_4114() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) */;
  %247 = greater_equal(%241, %242) /* ty=Tensor[(1, 15, 5), bool] */;
  %248 = %245.0;
  %249 = %246.1;
  (%247, %248, %var_5783, %249)
}

def @func_2462(%var_2431: Tensor[(480), int16], %var_2442: Tensor[(120), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), bool]) {
  %250 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %251 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %252 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %253 = reshape(%251, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %254 = reshape(%252, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %255 = cast(%var_2442, dtype="float64") /* ty=Tensor[(120), float64] */;
  %256 = reshape(%255, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %257 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %258 = @func_180(%253, %254) /* ty=Tensor[(15, 4, 8), int16] */;
  %259 = cast(%258, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
  %260 = reshape(%257, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %261 = reshape(%259, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %262 = @func_180(%260, %261) /* ty=Tensor[(15, 4, 8), int16] */;
  %263 = cast(%var_2431, dtype="bool") /* ty=Tensor[(480), bool] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="bool") /* ty=Tensor[(15, 4, 8), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %267 = %250.0;
  %268 = @func_460(%256) /* ty=Tensor[(1, 10, 12), float64] */;
  %269 = less(%265, %266) /* ty=Tensor[(15, 4, 8), bool] */;
  (%267, %258, %268, %var_2442, %269)
}

def @func_3488() -> (Tensor[(?, 15, 5), bool], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64]) {
  %270 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %273 = asinh(%272) /* ty=Tensor[(1, 15, 5), float32] */;
  %274 = cast(%273, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %275 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%271, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = logical_and(%276, %277) /* ty=Tensor[(?, 15, 5), bool] */;
  %279 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
  %280 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
  (%278, %279, %280)
}

def @func_3267() -> (Tensor[(3, 4, 3), float64],) {
  %281 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
  (%281,)
}

def @func_3930() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) {
  %282 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %284 = reshape(%283, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %285 = @func_2708(%284) /* ty=Tensor[(3, 4, 3), int64] */;
  (%282, %285)
}

def @func_7246() -> (Tensor[(3, 4, 3), float64],) {
  %286 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
  (%286,)
}

def @func_7302() -> (Tensor[(3, 4, 3), float64],) {
  %287 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
  %288 = %287.0;
  (%288,)
}

def @func_343(%var_322: Tensor[(7, 6, 4), float32], %var_323: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32],) {
  %289 = cast(%var_323, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
  %290 = shape_of(%var_322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_322, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %293 = maximum(%291, %292) /* ty=Tensor[(7, 6, 4), float32] */;
  (%293,)
}

def @func_7795() -> (Tensor[(3, 4, 3), float32], Tensor[(36), float64], Tensor[(3, 4, 3), float64]) {
  %294 = @func_2942() /* ty=(Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) */;
  %295 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %297 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
  %298 = %294.2;
  %299 = asin(%296) /* ty=Tensor[(3, 4, 3), float64] */;
  (%297, %298, %299)
}

def @func_4398() -> (Tensor[(7, 9, 9), float32],) {
  %300 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %301 = %300.1;
  (%301,)
}

def @func_4870(%var_4810: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) {
  %302 = cast(%var_4810, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
  %303 = rsqrt(%302) /* ty=Tensor[(7, 8, 2), float32] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %305 = acos(%304) /* ty=Tensor[(7, 8, 2), float64] */;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %307 = cast(%303, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %308 = shape_of(%var_4810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_4810, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %311 = mod(%309, %310) /* ty=Tensor[(7, 8, 2), float64] */;
  %312 = cast(%311, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %313 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%305, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
  %317 = atanh(%306) /* ty=Tensor[(7, 8, 2), float64] */;
  %318 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
  %319 = greater(%314, %315) /* ty=Tensor[(7, 8, 2), bool] */;
  %320 = %316.1;
  (%317, %318, %319, %320)
}

def @func_2654() -> Tensor[(3, 4, 3), float32] {
  @func_2187() /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_867(%var_826: Tensor[(7, 2, 6), int16], %var_827: Tensor[(7, 2, 6), int16], %var_851: Tensor[(480), int16], %var_857: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16], Tensor[(7, 2, 6), uint32]) {
  %321 = cast(%var_827, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
  %322 = shape_of(%var_826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%var_826, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %325 = right_shift(%323, %324) /* ty=Tensor[(7, 2, 6), int16] */;
  %326 = cast(%var_826, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %330 = bitwise_or(%328, %329) /* ty=Tensor[(7, 2, 6), int8] */;
  %331 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 2, 6), int8] */, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %335 = cast(%var_851, dtype="int16") /* ty=Tensor[(480), int16] */;
  %336 = cast(%var_851, dtype="int16") /* ty=Tensor[(480), int16] */;
  %337 = reshape(%335, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %338 = reshape(%336, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %339 = cast(%var_857, dtype="uint32") /* ty=Tensor[(7, 2, 6), uint32] */;
  %340 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%330, dtype="uint32") /* ty=Tensor[(7, 2, 6), uint32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %343 = maximum(%333, %334) /* ty=Tensor[(7, 2, 6), int16] */;
  %344 = @func_180(%337, %338) /* ty=Tensor[(15, 4, 8), int16] */;
  %345 = left_shift(%341, %342) /* ty=Tensor[(7, 2, 6), uint32] */;
  (%343, %344, %var_851, %345)
}

def @func_4946() -> (Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) {
  %346 = @func_3507() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %347 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %348 = %346.0;
  %349 = %347.1;
  %350 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
  (%348, %349, %350)
}

def @func_5655(%var_5607: Tensor[(16), float32], %var_5620: Tensor[(1078), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) {
  %351 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %352 = cast(meta[relay.Constant][16] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %353 = reshape(%352, newshape=[7, 14, 11]) /* ty=Tensor[(7, 14, 11), float64] */;
  %354 = @func_4805(%353) /* ty=(Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) */;
  %355 = @func_4634() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %356 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %357 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
  %358 = cast(meta[relay.Constant][16] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %359 = log(%358) /* ty=Tensor[(1078), float64] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %361 = cast(meta[relay.Constant][17] /* ty=Tensor[(140), int16] */, dtype="int16") /* ty=Tensor[(140), int16] */;
  %362 = reshape(%361, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), int16] */;
  %363 = cast(%var_5607, dtype="float32") /* ty=Tensor[(16), float32] */;
  %364 = reshape(%363, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %365 = @func_4385(%364) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %366 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %367 = cast(meta[relay.Constant][16] /* ty=Tensor[(1078), float64] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %368 = shape_of(%359, dtype="int32") /* ty=Tensor[(1), int32] */;
  %369 = cast(%359, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?), float32] */;
  %371 = power(%369, %370) /* ty=Tensor[(1078), float32] */;
  %372 = cast(%var_5620, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(1), int32] */;
  %374 = cast(%371, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?), float32] */;
  %376 = cast(%359, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %377 = rsqrt(%376) /* ty=Tensor[(1078), float32] */;
  %378 = cast(meta[relay.Constant][16] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %379 = atanh(%378) /* ty=Tensor[(1078), float64] */;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %381 = shape_of(%377, dtype="int32") /* ty=Tensor[(1), int32] */;
  %382 = cast(%377, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?), float64] */;
  %384 = %351.0;
  %385 = %354.1;
  %386 = %355.0;
  %387 = %356.0;
  %388 = %357.0;
  %389 = tan(%360) /* ty=Tensor[(1078), float64] */;
  %390 = @func_4134(%362) /* ty=Tensor[(2, 10, 7), int16] */;
  %391 = %365.3;
  %392 = %366.0;
  %393 = floor_divide(%374, %375) /* ty=Tensor[(1078), float32] */;
  %394 = divide(%382, %383) /* ty=Tensor[(1078), float64] */;
  (%384, %385, %386, %387, %388, %389, %390, meta[relay.Constant][17] /* ty=Tensor[(140), int16] */, %391, %var_5607, %392, %393, %394)
}

def @func_2259() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) {
  %395 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %397 = reshape(%396, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %398 = @func_1383(%397) /* ty=(Tensor[(3, 4, 3), bool],) */;
  %399 = %398.0;
  (%395, %399)
}

def @main(%var_7926: Tensor[(567), float32], %var_7971: Tensor[(567), float32]) -> (Tensor[(2, 8), float32], Tensor[(3, 4, 3), float64], Tensor[(567), uint8], Tensor[(1, 15, 5), bool], Tensor[(567), float32]) {
  %400 = @func_7187() /* ty=(Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) */;
  %401 = cast(%var_7926, dtype="float32") /* ty=Tensor[(567), float32] */;
  %402 = cast(%var_7926, dtype="bool") /* ty=Tensor[(567), bool] */;
  %403 = reshape(%401, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %404 = reshape(%402, newshape=[567]) /* ty=Tensor[(567), bool] */;
  %405 = @func_3687(%403, %404) /* ty=(Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) */;
  %406 = %405.1;
  %407 = cast(%406, dtype="uint8") /* ty=Tensor[(567), uint8] */;
  %408 = shape_of(%var_7926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %409 = cast(%var_7926, dtype="uint8") /* ty=Tensor[(567), uint8] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %411 = %400.0;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %413 = reshape(%412, newshape=[4, 4]) /* ty=Tensor[(4, 4), float32] */;
  %414 = @func_5791(%413) /* ty=(Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) */;
  %415 = cast(%var_7971, dtype="float32") /* ty=Tensor[(567), float32] */;
  %416 = shape_of(%var_7926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %417 = cast(%var_7926, dtype="float32") /* ty=Tensor[(567), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?), float32] */;
  %419 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
  %420 = logical_xor(%409, %410) /* ty=Tensor[(567), uint8] */;
  %421 = %414.0;
  %422 = power(%417, %418) /* ty=Tensor[(567), float32] */;
  (%411, %419, %420, %421, %422)
}

def @func_7565(%var_7555: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %423 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %425 = cast(%var_7555, dtype="int16") /* ty=Tensor[(480), int16] */;
  %426 = reshape(%424, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %427 = reshape(%425, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %428 = @func_1253(%426, %427) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %429 = %428.4;
  (%423, %429, %var_7555)
}

def @func_1779() -> Tensor[(3, 4, 3), int16] {
  @func_1095() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_7187() -> (Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) {
  %430 = @func_6672() /* ty=(Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) */;
  %431 = @func_5200() /* ty=(Tensor[(3, 4, 3), int16],) */;
  %432 = %430.3;
  %433 = %431.0;
  (%432, %433)
}

def @func_3355() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), int16]) {
  %434 = @func_2743() /* ty=(Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) */;
  %435 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %436 = %434.0;
  %437 = %435.1;
  (%436, %437)
}

def @func_3305() -> Tensor[(3, 4, 3), float64] {
  %438 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %438.0
}

def @func_6528() -> Tensor[(3, 4, 3), int16] {
  %439 = @func_5200() /* ty=(Tensor[(3, 4, 3), int16],) */;
  %439.0
}

def @func_1950() -> Tensor[(1, 15, 5), float32] {
  %440 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  asin(%440) /* ty=Tensor[(1, 15, 5), float32] */
}

def @func_6855(%var_6795: Tensor[(11, 14, 15), bool], %var_6796: Tensor[(11, 14, 15), bool], %var_6832: Tensor[(11, 14, 15), bool]) -> (Tensor[(3, 4, 3), int16], Tensor[(11, 14, 15), bool], Tensor[(11, 14, 15), bool]) {
  %441 = cast(%var_6796, dtype="float32") /* ty=Tensor[(11, 14, 15), float32] */;
  %442 = acos(%441) /* ty=Tensor[(11, 14, 15), float32] */;
  %443 = cast(%442, dtype="float64") /* ty=Tensor[(11, 14, 15), float64] */;
  %444 = erf(%443) /* ty=Tensor[(11, 14, 15), float64] */;
  %445 = cast(%var_6796, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %446 = shape_of(%var_6795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_6795, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = logical_and(%447, %448) /* ty=Tensor[(11, 14, 15), bool] */;
  %450 = cast(%var_6832, dtype="int64") /* ty=Tensor[(11, 14, 15), int64] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int64") /* ty=Tensor[(11, 14, 15), int64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %454 = minimum(%452, %453) /* ty=Tensor[(11, 14, 15), int64] */;
  %455 = cast(%454, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %456 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%444, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %459 = cast(%449, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %460 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%442, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %464 = less_equal(%457, %458) /* ty=Tensor[(11, 14, 15), bool] */;
  %465 = logical_or(%461, %462) /* ty=Tensor[(11, 14, 15), bool] */;
  (%463, %464, %465)
}

def @func_6736(%var_6732: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  %466 = cast(%var_6732, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %467 = cos(%466) /* ty=Tensor[(13, 8, 14), float32] */;
  (%467,)
}

def @func_460(%var_439: Tensor[(1, 10, 12), float64]) -> Tensor[(1, 10, 12), float64] {
  %468 = cast(%var_439, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  log(%468) /* ty=Tensor[(1, 10, 12), float64] */
}

def @func_5417() -> Tensor[(3, 4, 3), int16] {
  @func_1095() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_7463(%var_7442: Tensor[(1, 420), uint32]) -> (Tensor[(3, 4, 3), float32], Tensor[(5, 6, 14), uint32], Tensor[(1, 420), uint32]) {
  %469 = @func_2622() /* ty=(Tensor[(3, 4, 3), float32],) */;
  %470 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(1, 420), uint32] */;
  %471 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(1, 420), uint32] */;
  %472 = reshape(%470, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), uint32] */;
  %473 = reshape(%471, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), uint32] */;
  %474 = %469.0;
  %475 = @func_5217(%472, %473) /* ty=Tensor[(5, 6, 14), uint32] */;
  (%474, %475, %var_7442)
}

def @func_1561() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) {
  %476 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), uint16] */, dtype="uint16") /* ty=Tensor[(210), uint16] */;
  %477 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), uint16] */, dtype="uint16") /* ty=Tensor[(210), uint16] */;
  %478 = reshape(%476, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
  %479 = reshape(%477, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
  %480 = @func_1469(%478, %479) /* ty=(Tensor[(?, 15, 14), uint16],) */;
  %481 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %482 = %481.0;
  %483 = cast(%482, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %484 = erf(%483) /* ty=Tensor[(3, 4, 3), float32] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %486 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %487 = cast(meta[relay.Constant][21] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %488 = reshape(%486, newshape=[]) /* ty=uint32 */;
  %489 = reshape(%487, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
  %490 = @func_544(%488, %489) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %491 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %492 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %493 = %480.0;
  %494 = cos(%485) /* ty=Tensor[(3, 4, 3), float32] */;
  %495 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %496 = %490.4;
  (%491, %492, %493, meta[relay.Constant][19] /* ty=Tensor[(210), uint16] */, %494, %495, %496, meta[relay.Constant][20] /* ty=uint32 */, meta[relay.Constant][21] /* ty=Tensor[(1408), uint32] */)
}

def @func_3947(%var_3938: Tensor[(8, 60), int16], %var_3940: Tensor[(8, 60), int16]) -> (Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(8, 60), bool], Tensor[(3, 4, 3), float32]) {
  %497 = cast(%var_3938, dtype="int16") /* ty=Tensor[(8, 60), int16] */;
  %498 = reshape(%497, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %499 = @func_1618(%498) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %500 = cast(%var_3940, dtype="bool") /* ty=Tensor[(8, 60), bool] */;
  %501 = shape_of(%var_3938, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(%var_3938, dtype="bool") /* ty=Tensor[(8, 60), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %504 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
  %505 = %499.2;
  %506 = logical_and(%502, %503) /* ty=Tensor[(8, 60), bool] */;
  %507 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
  (%504, %505, %506, %507)
}

def @func_3507() -> (Tensor[(1, 15, 5), float32],) {
  %508 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %509 = %508.0;
  (%509,)
}

def @func_1618(%var_1615: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %510 = cast(%var_1615, dtype="int16") /* ty=Tensor[(480), int16] */;
  %511 = cast(%var_1615, dtype="int16") /* ty=Tensor[(480), int16] */;
  %512 = reshape(%510, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %513 = reshape(%511, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %514 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
  %515 = @func_180(%512, %513) /* ty=Tensor[(15, 4, 8), int16] */;
  (%514, %515, %var_1615)
}

def @func_6364() -> Tensor[(1, 15, 5), float32] {
  %516 = @func_3507() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %516.0
}

def @func_4134(%var_4123: Tensor[(2, 10, 7), int16]) -> Tensor[(2, 10, 7), int16] {
  %517 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 10, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 10, 7), int16] */;
  %518 = shape_of(%var_4123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_4123, dtype="int16") /* ty=Tensor[(2, 10, 7), int16] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%519, %520) /* ty=Tensor[(2, 10, 7), int16] */
}

def @func_3528(%var_3519: Tensor[(13, 14, 3), float64], %var_3523: Tensor[(13, 14, 3), float64]) -> Tensor[(13, 14, 3), int8] {
  %521 = cast(%var_3519, dtype="float64") /* ty=Tensor[(13, 14, 3), float64] */;
  %522 = sin(%521) /* ty=Tensor[(13, 14, 3), float64] */;
  %523 = cast(%var_3523, dtype="int8") /* ty=Tensor[(13, 14, 3), int8] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="int8") /* ty=Tensor[(13, 14, 3), int8] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%525, %526) /* ty=Tensor[(13, 14, 3), int8] */
}

def @func_4385(%var_4381: Tensor[(16), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) {
  %527 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %528 = cast(%var_4381, dtype="float32") /* ty=Tensor[(16), float32] */;
  %529 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %530 = reshape(%528, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float32] */;
  %531 = reshape(%529, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float32] */;
  %532 = @func_3890(%530, %531) /* ty=(Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) */;
  %533 = %527.0;
  %534 = %532.0;
  (%533, %534, %var_4381, meta[relay.Constant][23] /* ty=Tensor[(240), float32] */)
}

def @func_5477() -> Tensor[(8, 3, 16), int32] {
  %535 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 16), int32] */;
  %536 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 16), int32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%537, %538) /* ty=Tensor[(8, 3, 16), int32] */
}

def @func_3179() -> Tensor[(3, 4, 3), bool] {
  %539 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
  %539.1
}

def @func_4554() -> (Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) {
  %540 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %541 = cast(meta[relay.Constant][26] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %542 = cast(meta[relay.Constant][26] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %543 = reshape(%541, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
  %544 = reshape(%542, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
  %545 = %540.0;
  %546 = @func_3528(%543, %544) /* ty=Tensor[(13, 14, 3), int8] */;
  (%545, %546, meta[relay.Constant][26] /* ty=Tensor[(546), float64] */)
}

def @func_7277() -> (Tensor[(3, 4, 3), float32], Tensor[(1, 15, 5), float32]) {
  %547 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %548 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
  %549 = %547.0;
  (%548, %549)
}

def @func_2357() -> (Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) {
  %550 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %551 = %550.8;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %553 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %554 = acos(%552) /* ty=Tensor[(1408), float64] */;
  %555 = %553.0;
  (%554, %555)
}

def @func_3246() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) {
  %556 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %557 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
  %558 = %556.0;
  %559 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  (%557, %558, %559)
}

def @func_4474(%var_4431: Tensor[(10, 3, 10), float64], %var_4454: Tensor[(10, 3, 10), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 3, 10), float64], Tensor[(3, 4, 3), int16], Tensor[(10, 3, 10), bool], Tensor[(3, 4, 3), int16]) {
  %560 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %561 = cast(%var_4431, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %562 = log10(%561) /* ty=Tensor[(10, 3, 10), float64] */;
  %563 = cast(%var_4454, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %567 = cast(%562, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %568 = shape_of(%var_4454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_4454, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %571 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %572 = %560.0;
  %573 = mod(%565, %566) /* ty=Tensor[(10, 3, 10), float64] */;
  %574 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %575 = less_equal(%569, %570) /* ty=Tensor[(10, 3, 10), bool] */;
  %576 = %571.1;
  (%572, %573, %574, %575, %576)
}

def @func_6672() -> (Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) {
  %577 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %578 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %579 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %580 = reshape(%579, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %581 = @func_4385(%580) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %582 = %577.0;
  %583 = %578.1;
  %584 = %581.2;
  (%582, %583, %584, meta[relay.Constant][27] /* ty=Tensor[(2, 8), float32] */)
}

def @func_1044() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %585 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %586 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %587 = %585.0;
  %588 = %586.0;
  (%587, %588)
}

def @func_4890() -> Tensor[(1, 15, 5), float64] {
  @func_4179() /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_6896(%var_6866: Tensor[(15, 4, 12), float64]) -> (Tensor[(15, 4, 12), float64],) {
  %589 = cast(%var_6866, dtype="float64") /* ty=Tensor[(15, 4, 12), float64] */;
  %590 = cosh(%589) /* ty=Tensor[(15, 4, 12), float64] */;
  (%590,)
}

def @func_2929() -> (Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) {
  %591 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %592 = reshape(%591, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %593 = @func_1847(%592) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) */;
  %594 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
  %595 = %593.5;
  (%594, %595, meta[relay.Constant][28] /* ty=Tensor[(480), int16] */)
}

def @func_7042() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %596 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %597 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
  %598 = %596.1;
  (%597, %598)
}

def @func_4250() -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
  %599 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %600 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %601 = %599.6;
  (%600, %601)
}

def @func_6249(%var_6247: Tensor[(20), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
  %602 = @func_5986() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(546), float64]) */;
  %603 = cast(%var_6247, dtype="float64") /* ty=Tensor[(20), float64] */;
  %604 = reshape(%603, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %605 = @func_1650(%604) /* ty=(Tensor[(4, ?, 5), uint32],) */;
  %606 = %602.0;
  %607 = %605.0;
  (%606, %607, %var_6247)
}

def @func_2824() -> (Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) {
  %608 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
  %609 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %610 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 4, 3), float64] */, dtype="uint32") /* ty=Tensor[(3, 4, 3), uint32] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="uint32") /* ty=Tensor[(3, 4, 3), uint32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %614 = %608.0;
  %615 = minimum(%612, %613) /* ty=Tensor[(3, 4, 3), uint32] */;
  %616 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%614, %615, %616)
}

def @func_1409() -> (Tensor[(3, 4, 3), float64],) {
  %617 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%617,)
}

def @func_946() -> Tensor[(3, 4, 3), float64] {
  %618 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %618.0
}

def @func_7352() -> Tensor[(3, 4, 3), int16] {
  %619 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %619.1
}

def @func_4723(%var_4717: float64, %var_4718: Tensor[(5, 15, 15), float64]) -> (Tensor[(5, 15, 15), float64],) {
  %620 = cast(%var_4717, dtype="float64") /* ty=float64 */;
  %621 = cast(%var_4718, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %622 = floor_mod(%620, %621) /* ty=Tensor[(5, 15, 15), float64] */;
  (%622,)
}

def @func_6023() -> (Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) {
  %623 = @func_4398() /* ty=(Tensor[(7, 9, 9), float32],) */;
  %624 = cast(meta[relay.Constant][30] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %625 = cast(meta[relay.Constant][30] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %626 = reshape(%624, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), uint16] */;
  %627 = reshape(%625, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), uint16] */;
  %628 = @func_5000(%626, %627) /* ty=(Tensor[(10, 6, 9), uint16],) */;
  %629 = %623.0;
  %630 = %628.0;
  (%629, %630, meta[relay.Constant][30] /* ty=Tensor[(540), uint16] */)
}

def @func_7896() -> (Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float32]) {
  %631 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
  %632 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
  (%631, %632)
}

def @func_5217(%var_5206: Tensor[(5, 6, 14), uint32], %var_5207: Tensor[(5, 6, 14), uint32]) -> Tensor[(5, 6, 14), uint32] {
  %633 = cast(%var_5207, dtype="uint32") /* ty=Tensor[(5, 6, 14), uint32] */;
  %634 = shape_of(%var_5206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_5206, dtype="uint32") /* ty=Tensor[(5, 6, 14), uint32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%635, %636) /* ty=Tensor[(5, 6, 14), uint32] */
}

def @func_2043(%var_2016: Tensor[(4, 120), int16], %var_2038: Tensor[(4, 120), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) {
  %637 = cast(%var_2016, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
  %638 = reshape(%637, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %639 = @func_1847(%638) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) */;
  %640 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %641 = %640.0;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(?, 15, 14), float32] */;
  %643 = acos(%642) /* ty=Tensor[(?, 15, 14), float32] */;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(?, 15, 14), float64] */;
  %645 = log2(%644) /* ty=Tensor[(?, 15, 14), float64] */;
  %646 = cast(%641, dtype="bool") /* ty=Tensor[(?, 15, 14), bool] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="bool") /* ty=Tensor[(?, 15, 14), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = cast(%var_2038, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %651 = shape_of(%var_2016, dtype="int32") /* ty=Tensor[(2), int32] */;
  %652 = cast(%var_2016, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %654 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %655 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
  %656 = %639.7;
  %657 = greater(%648, %649) /* ty=Tensor[(?, 15, 14), bool] */;
  %658 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %659 = floor_divide(%652, %653) /* ty=Tensor[(4, 120), float64] */;
  (%654, %655, %656, %657, %658, %659)
}

def @func_2584(%var_2569: Tensor[(567), float32]) -> (Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) {
  %660 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
  %661 = cast(%var_2569, dtype="float32") /* ty=Tensor[(567), float32] */;
  %662 = cast(%var_2569, dtype="float32") /* ty=Tensor[(567), float32] */;
  %663 = reshape(%661, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %664 = reshape(%662, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %665 = cast(meta[relay.Constant][31] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %666 = cast(meta[relay.Constant][31] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %667 = reshape(%665, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %668 = reshape(%666, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %669 = @func_2043(%667, %668) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %670 = %660.0;
  %671 = @func_1281(%663, %664) /* ty=Tensor[(7, 9, 9), float32] */;
  %672 = %669.2;
  (%670, %671, %var_2569, %672, meta[relay.Constant][31] /* ty=Tensor[(480), int16] */)
}

def @func_6175() -> (Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %673 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %674 = @func_3305() /* ty=Tensor[(3, 4, 3), float64] */;
  %675 = %673.0;
  %676 = @func_5951() /* ty=Tensor[(3, 4, 3), float64] */;
  %677 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
  (%674, %675, %676, %677)
}

def @func_4179() -> Tensor[(1, 15, 5), float64] {
  %678 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  cos(%679) /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_1095() -> Tensor[(3, 4, 3), int16] {
  %680 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %682 = asinh(%681) /* ty=Tensor[(3, 4, 3), float64] */;
  %683 = cast(%680, dtype="int16") /* ty=Tensor[(3, 4, 3), int16] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="int16") /* ty=Tensor[(3, 4, 3), int16] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%685, %686) /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_893() -> (Tensor[(3, 4, 3), float64],) {
  %687 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%687,)
}

def @func_7320() -> (Tensor[(3, 4, 3), int16],) {
  %688 = @func_3930() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) */;
  %689 = %688.0;
  (%689,)
}

def @func_5986() -> (Tensor[(3, 4, 3), float64], Tensor[(546), float64]) {
  %690 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %691 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
  %692 = %690.2;
  %693 = %691.2;
  (%692, %693)
}

def @func_5515() -> (Tensor[(3, 4, 3), float64],) {
  %694 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
  (%694,)
}

def @func_1469(%var_1443: Tensor[(1, 15, 14), uint16], %var_1444: Tensor[(1, 15, 14), uint16]) -> (Tensor[(?, 15, 14), uint16],) {
  %695 = cast(%var_1444, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %696 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%var_1443, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %699 = left_shift(%697, %698) /* ty=Tensor[(?, 15, 14), uint16] */;
  %700 = cast(%699, dtype="uint16") /* ty=Tensor[(?, 15, 14), uint16] */;
  %701 = shape_of(%var_1444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%var_1444, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %704 = subtract(%702, %703) /* ty=Tensor[(?, 15, 14), uint16] */;
  (%704,)
}

def @func_3414() -> (Tensor[(1, 15, 5), float32], uint32) {
  %705 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
  %706 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %707 = %705.2;
  %708 = %706.1;
  (%707, %708)
}

def @func_5000(%var_4991: Tensor[(10, 6, 9), uint16], %var_4992: Tensor[(10, 6, 9), uint16]) -> (Tensor[(10, 6, 9), uint16],) {
  %709 = cast(%var_4992, dtype="uint16") /* ty=Tensor[(10, 6, 9), uint16] */;
  %710 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_4991, dtype="uint16") /* ty=Tensor[(10, 6, 9), uint16] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %713 = add(%711, %712) /* ty=Tensor[(10, 6, 9), uint16] */;
  (%713,)
}

def @func_6484() -> Tensor[(3, 4, 3), float64] {
  %714 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %714.1
}

def @func_4114() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) {
  %715 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
  %716 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %717 = %715.0;
  %718 = %716.4;
  (%717, %718)
}

def @func_5089() -> (Tensor[(3, 4, 3), float64], Tensor[(567), float32]) {
  %719 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
  %720 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %721 = %719.1;
  %722 = %720.2;
  (%721, %722)
}

def @func_7856(%var_7848: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 6, 9), uint16]) {
  %723 = @func_7246() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %724 = %723.0;
  %725 = cast(%var_7848, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %729 = @func_6023() /* ty=(Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) */;
  %730 = divide(%727, %728) /* ty=Tensor[(3, 4, 3), float64] */;
  %731 = %729.1;
  (%730, %731)
}

def @func_1383(%var_1373: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), bool],) {
  %732 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %733 = %732.1;
  %734 = cast(%var_1373, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = logical_or(%736, %737) /* ty=Tensor[(3, 4, 3), bool] */;
  (%738,)
}

def @func_1140() -> Tensor[(3, 4, 3), float64] {
  %739 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  exp(%740) /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_4761() -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %741 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
  %742 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
  %743 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %744 = %741.1;
  %745 = %742.0;
  %746 = %743.0;
  (%744, %745, %746)
}

def @func_7415() -> (Tensor[(13, 14, 3), int8],) {
  %747 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
  %748 = %747.1;
  (%748,)
}

def @func_4010(%var_3995: Tensor[(567), float64]) -> (Tensor[(3, 4, 3), int16], Tensor[(4, ?, 5), uint32], Tensor[(20), float64], Tensor[(7, 9, 9), float32], Tensor[(567), bool]) {
  %749 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
  %750 = cast(meta[relay.Constant][32] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %751 = reshape(%750, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %752 = @func_1650(%751) /* ty=(Tensor[(4, ?, 5), uint32],) */;
  %753 = cast(meta[relay.Constant][33] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %754 = cast(meta[relay.Constant][33] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %755 = reshape(%753, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %756 = reshape(%754, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
  %757 = cast(meta[relay.Constant][33] /* ty=Tensor[(567), float32] */, dtype="float64") /* ty=Tensor[(567), float64] */;
  %758 = sqrt(%757) /* ty=Tensor[(567), float64] */;
  %759 = cast(%var_3995, dtype="int8") /* ty=Tensor[(567), int8] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(1), int32] */;
  %761 = cast(%758, dtype="int8") /* ty=Tensor[(567), int8] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), int8] */;
  %763 = bitwise_or(%761, %762) /* ty=Tensor[(567), int8] */;
  %764 = cast(meta[relay.Constant][34] /* ty=Tensor[(567), int8] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(1), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(567), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?), bool] */;
  %768 = %749.0;
  %769 = %752.0;
  %770 = @func_1281(%755, %756) /* ty=Tensor[(7, 9, 9), float32] */;
  %771 = less(%766, %767) /* ty=Tensor[(567), bool] */;
  (%768, %769, meta[relay.Constant][32] /* ty=Tensor[(20), float64] */, %770, %771)
}

def @func_5200() -> (Tensor[(3, 4, 3), int16],) {
  %772 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  (%772,)
}

def @func_6726(%var_6716: Tensor[(567), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16], Tensor[(567), float32]) {
  %773 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %774 = cast(%var_6716, dtype="float32") /* ty=Tensor[(567), float32] */;
  %775 = reshape(%774, newshape=[9, 63]) /* ty=Tensor[(9, 63), float32] */;
  %776 = @func_5492(%775) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) */;
  %777 = %773.2;
  %778 = %776.0;
  (%777, %778, %var_6716)
}

def @func_1281(%var_1273: Tensor[(7, 9, 9), float32], %var_1274: Tensor[(7, 9, 9), float32]) -> Tensor[(7, 9, 9), float32] {
  %779 = cast(%var_1274, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
  %780 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_1273, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%781, %782) /* ty=Tensor[(7, 9, 9), float32] */
}

def @func_3890(%var_3878: Tensor[(1, 8, 2), float32], %var_3879: Tensor[(15, 8, 2), float32]) -> (Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) {
  %783 = cast(%var_3878, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %784 = cast(%var_3879, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %785 = equal(%783, %784) /* ty=Tensor[(15, 8, 2), bool] */;
  %786 = @func_2508() /* ty=Tensor[(210), uint16] */;
  (%785, %786)
}

def @func_3637(%var_3617: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(480), int16], Tensor[(480), int16]) {
  %787 = cast(%var_3617, dtype="int16") /* ty=Tensor[(480), int16] */;
  %788 = cast(%var_3617, dtype="int16") /* ty=Tensor[(480), int16] */;
  %789 = reshape(%787, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %790 = reshape(%788, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %791 = @func_2043(%789, %790) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %792 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %793 = %791.2;
  (%792, %793, %var_3617)
}

def @func_2867() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) {
  %794 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %795 = %794.0;
  %796 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  (%795, %796)
}

def @func_3826(%var_3821: int16, %var_3822: Tensor[(12, 10, 12), int16]) -> Tensor[(12, 10, 12), bool] {
  %797 = cast(%var_3821, dtype="bool") /* ty=bool */;
  %798 = cast(%var_3822, dtype="bool") /* ty=Tensor[(12, 10, 12), bool] */;
  equal(%797, %798) /* ty=Tensor[(12, 10, 12), bool] */
}

def @func_4291() -> (Tensor[(3, 4, 3), float32], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
  %799 = cast(meta[relay.Constant][35] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %800 = reshape(%799, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %801 = @func_1650(%800) /* ty=(Tensor[(4, ?, 5), uint32],) */;
  %802 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
  %803 = %801.0;
  (%802, %803, meta[relay.Constant][35] /* ty=Tensor[(20), float64] */)
}

def @func_7741(%var_7739: Tensor[(150), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(2, 15, 5), uint32], Tensor[(150), float32]) {
  %804 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %805 = cast(%var_7739, dtype="float32") /* ty=Tensor[(150), float32] */;
  %806 = reshape(%805, newshape=[2, 15, 5]) /* ty=Tensor[(2, 15, 5), float32] */;
  %807 = %804.1;
  %808 = @func_7148(%806) /* ty=Tensor[(2, 15, 5), uint32] */;
  (%807, %808, %var_7739)
}

def @func_7386() -> (Tensor[(3, 4, 3), float64],) {
  %809 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %810 = %809.1;
  (%810,)
}

def @func_7505(%var_7503: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %811 = @func_4213() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %812 = cast(%var_7503, dtype="int16") /* ty=Tensor[(480), int16] */;
  %813 = cast(%var_7503, dtype="int16") /* ty=Tensor[(480), int16] */;
  %814 = reshape(%812, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %815 = reshape(%813, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %816 = %811.0;
  %817 = @func_180(%814, %815) /* ty=Tensor[(15, 4, 8), int16] */;
  (%816, %817, %var_7503)
}

def @func_5492(%var_5485: Tensor[(9, 63), float32]) -> (Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) {
  %818 = cast(%var_5485, dtype="float32") /* ty=Tensor[(9, 63), float32] */;
  %819 = cast(%var_5485, dtype="bool") /* ty=Tensor[(9, 63), bool] */;
  %820 = reshape(%818, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %821 = reshape(%819, newshape=[567]) /* ty=Tensor[(567), bool] */;
  %822 = @func_3687(%820, %821) /* ty=(Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) */;
  %823 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  %824 = %822.1;
  (%823, %824, %var_5485)
}

def @func_6287() -> Tensor[(3, 4, 3), float64] {
  %825 = @func_3267() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %825.0
}

def @func_1898() -> (Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) {
  %826 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %827 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %828 = %826.2;
  %829 = %827.0;
  (%828, %829)
}

def @func_4805(%var_4772: Tensor[(7, 14, 11), float64]) -> (Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) {
  %830 = cast(%var_4772, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
  %831 = rsqrt(%830) /* ty=Tensor[(7, 14, 11), float64] */;
  %832 = @func_3305() /* ty=Tensor[(3, 4, 3), float64] */;
  (%831, %832)
}

def @func_5301(%var_5273: Tensor[(3, 1, 2), float64], %var_5295: Tensor[(567), float32]) -> (Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
  %833 = cast(%var_5273, dtype="float64") /* ty=Tensor[(3, 1, 2), float64] */;
  %834 = @func_2942() /* ty=(Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) */;
  %835 = cast(%var_5295, dtype="float32") /* ty=Tensor[(567), float32] */;
  %836 = reshape(%835, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %837 = @func_2584(%836) /* ty=(Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) */;
  %838 = sin(%833) /* ty=Tensor[(3, 1, 2), float64] */;
  %839 = %834.2;
  %840 = %837.1;
  (%838, %839, %840, %var_5295)
}

def @func_1727() -> Tensor[(3, 4, 3), float32] {
  %841 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  log2(%843) /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_3774() -> Tensor[(3, 4, 3), float64] {
  %844 = @func_2824() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) */;
  %844.2
}

def @func_5711(%var_5696: Tensor[(16), float32]) -> (Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) {
  %845 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %846 = cast(%var_5696, dtype="float32") /* ty=Tensor[(16), float32] */;
  %847 = reshape(%846, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %848 = @func_4385(%847) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %849 = %845.2;
  %850 = %848.1;
  (%849, %850, %var_5696)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4213() -> (Tensor[(3, 4, 3), float64],) {
  %0 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_7302() -> (Tensor[(3, 4, 3), float64],) {
  %2 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
  %3 = %2.0;
  (%3,)
}

def @main(%var_7926: Tensor[(567), float32], %var_7971: Tensor[(567), float32]) -> (Tensor[(2, 8), float32], Tensor[(3, 4, 3), float64], Tensor[(567), uint8], Tensor[(1, 15, 5), bool], Tensor[(567), float32]) {
  %4 = @func_7189() /* ty=(Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) */;
  %5 = cast(%var_7926, dtype="float32") /* ty=Tensor[(567), float32] */;
  %6 = cast(%var_7926, dtype="bool") /* ty=Tensor[(567), bool] */;
  %7 = reshape(%5, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %8 = reshape(%6, newshape=[567]) /* ty=Tensor[(567), bool] */;
  %9 = @func_3690(%7, %8) /* ty=(Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) */;
  %10 = %9.1;
  %11 = cast(%10, dtype="uint8") /* ty=Tensor[(567), uint8] */;
  %12 = shape_of(%var_7926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %13 = cast(%var_7926, dtype="uint8") /* ty=Tensor[(567), uint8] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %15 = @func_7187() /* ty=(Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %18 = reshape(%17, newshape=[4, 4]) /* ty=Tensor[(4, 4), float32] */;
  %19 = @func_5794(%18) /* ty=(Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) */;
  %20 = cast(%var_7971, dtype="float32") /* ty=Tensor[(567), float32] */;
  %21 = shape_of(%var_7926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %22 = cast(%var_7926, dtype="float32") /* ty=Tensor[(567), float32] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), float32] */;
  %24 = %4.0;
  %25 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
  %26 = logical_xor(%13, %14) /* ty=Tensor[(567), uint8] */;
  %27 = %19.0;
  %28 = power(%22, %23) /* ty=Tensor[(567), float32] */;
  (%24, %25, %26, %27, %28)
}

def @func_7128() -> (Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  @func_7126() /* ty=(Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_4399() -> (Tensor[(7, 9, 9), float32],) {
  %31 = fn () -> (Tensor[(7, 9, 9), float32],) {
    %29 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
    %30 = %29.1;
    (%30,)
  };
  %31() /* ty=(Tensor[(7, 9, 9), float32],) */
}

def @func_7508(%var_7506: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  @func_7505(%var_7506) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */
}

def @func_4116() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) {
  @func_4114() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) */
}

def @func_6486() -> Tensor[(3, 4, 3), float64] {
  @func_6484() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_6736(%var_6732: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  %32 = cast(%var_6732, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %33 = cos(%32) /* ty=Tensor[(13, 8, 14), float32] */;
  (%33,)
}

def @func_7279() -> (Tensor[(3, 4, 3), float32], Tensor[(1, 15, 5), float32]) {
  @func_7277() /* ty=(Tensor[(3, 4, 3), float32], Tensor[(1, 15, 5), float32]) */
}

def @func_4180() -> Tensor[(1, 15, 5), float64] {
  %36 = fn () -> Tensor[(1, 15, 5), float64] {
    %34 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
    %35 = cast(%34, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
    cos(%35) /* ty=Tensor[(1, 15, 5), float64] */
  };
  %36() /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_4624(%var_4622: Tensor[(16, 8, 7), float32]) -> (Tensor[(16, 8, 7), float64],) {
  @func_4621(%var_4622) /* ty=(Tensor[(16, 8, 7), float64],) */
}

def @func_886() -> Tensor[(3, 4, 3), float64] {
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 4, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  acos(%37) /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_4947() -> (Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) {
  %43 = fn () -> (Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) {
    %38 = @func_3507() /* ty=(Tensor[(1, 15, 5), float32],) */;
    %39 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
    %40 = %38.0;
    %41 = %39.1;
    %42 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
    (%40, %41, %42)
  };
  %43() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) */
}

def @func_7795() -> (Tensor[(3, 4, 3), float32], Tensor[(36), float64], Tensor[(3, 4, 3), float64]) {
  %44 = @func_2942() /* ty=(Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) */;
  %45 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %47 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
  %48 = %44.2;
  %49 = asin(%46) /* ty=Tensor[(3, 4, 3), float64] */;
  (%47, %48, %49)
}

def @func_2930() -> (Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) {
  %55 = fn () -> (Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) {
    %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %51 = reshape(%50, newshape=[480]) /* ty=Tensor[(480), int16] */;
    %52 = @func_1847(%51) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) */;
    %53 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
    %54 = %52.5;
    (%53, %54, meta[relay.Constant][1] /* ty=Tensor[(480), int16] */)
  };
  %55() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */
}

def @func_3306() -> Tensor[(3, 4, 3), float64] {
  %57 = fn () -> Tensor[(3, 4, 3), float64] {
    %56 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
    %56.0
  };
  %57() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_3355() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), int16]) {
  %58 = @func_2743() /* ty=(Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) */;
  %59 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %60 = %58.0;
  %61 = %59.1;
  (%60, %61)
}

def @func_6366() -> Tensor[(1, 15, 5), float32] {
  @func_6364() /* ty=Tensor[(1, 15, 5), float32] */
}

def @func_947() -> Tensor[(3, 4, 3), float64] {
  %63 = fn () -> Tensor[(3, 4, 3), float64] {
    %62 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %62.0
  };
  %63() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_4555() -> (Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) {
  %71 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) {
    %64 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %65 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
    %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
    %67 = reshape(%65, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
    %68 = reshape(%66, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
    %69 = %64.0;
    %70 = @func_3528(%67, %68) /* ty=Tensor[(13, 14, 3), int8] */;
    (%69, %70, meta[relay.Constant][2] /* ty=Tensor[(546), float64] */)
  };
  %71() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */
}

def @func_7897() -> (Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float32]) {
  %74 = fn () -> (Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float32]) {
    %72 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
    %73 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
    (%72, %73)
  };
  %74() /* ty=(Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float32]) */
}

def @func_2586(%var_2585: Tensor[(567), float32]) -> (Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) {
  %88 = fn (%var_2569: Tensor[(567), float32]) -> (Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) {
    %75 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
    %76 = cast(%var_2569, dtype="float32") /* ty=Tensor[(567), float32] */;
    %77 = cast(%var_2569, dtype="float32") /* ty=Tensor[(567), float32] */;
    %78 = reshape(%76, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %79 = reshape(%77, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %82 = reshape(%80, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
    %83 = reshape(%81, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
    %84 = @func_2043(%82, %83) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
    %85 = %75.0;
    %86 = @func_1281(%78, %79) /* ty=Tensor[(7, 9, 9), float32] */;
    %87 = %84.2;
    (%85, %86, %var_2569, %87, meta[relay.Constant][3] /* ty=Tensor[(480), int16] */)
  };
  %88(%var_2585) /* ty=(Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) */
}

def @func_7466(%var_7464: Tensor[(1, 420), uint32]) -> (Tensor[(3, 4, 3), float32], Tensor[(5, 6, 14), uint32], Tensor[(1, 420), uint32]) {
  @func_7463(%var_7464) /* ty=(Tensor[(3, 4, 3), float32], Tensor[(5, 6, 14), uint32], Tensor[(1, 420), uint32]) */
}

def @func_4621(%var_4605: Tensor[(16, 8, 7), float32]) -> (Tensor[(16, 8, 7), float64],) {
  %89 = cast(%var_4605, dtype="float32") /* ty=Tensor[(16, 8, 7), float32] */;
  %90 = exp(%89) /* ty=Tensor[(16, 8, 7), float32] */;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(16, 8, 7), float64] */;
  %92 = log2(%91) /* ty=Tensor[(16, 8, 7), float64] */;
  (%92,)
}

def @func_7386() -> (Tensor[(3, 4, 3), float64],) {
  %93 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
  %94 = %93.1;
  (%94,)
}

def @func_548(%var_546: uint32, %var_547: Tensor[(16, 11, 8), uint32]) -> (Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  @func_544(%var_546, %var_547) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */
}

def @func_5478() -> Tensor[(8, 3, 16), int32] {
  %99 = fn () -> Tensor[(8, 3, 16), int32] {
    %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 16), int32] */;
    %96 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 3, 16), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 16), int32] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_xor(%97, %98) /* ty=Tensor[(8, 3, 16), int32] */
  };
  %99() /* ty=Tensor[(8, 3, 16), int32] */
}

def @func_7187() -> (Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) {
  %100 = @func_6672() /* ty=(Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) */;
  %101 = @func_5200() /* ty=(Tensor[(3, 4, 3), int16],) */;
  %102 = %100.3;
  %103 = %101.0;
  (%102, %103)
}

def @func_3826(%var_3821: int16, %var_3822: Tensor[(12, 10, 12), int16]) -> Tensor[(12, 10, 12), bool] {
  %104 = cast(%var_3821, dtype="bool") /* ty=bool */;
  %105 = cast(%var_3822, dtype="bool") /* ty=Tensor[(12, 10, 12), bool] */;
  equal(%104, %105) /* ty=Tensor[(12, 10, 12), bool] */
}

def @func_2508() -> Tensor[(210), uint16] {
  %106 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %106.3
}

def @func_6251(%var_6250: Tensor[(20), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
  %113 = fn (%var_6247: Tensor[(20), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
    %107 = @func_5986() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(546), float64]) */;
    %108 = cast(%var_6247, dtype="float64") /* ty=Tensor[(20), float64] */;
    %109 = reshape(%108, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
    %110 = @func_1650(%109) /* ty=(Tensor[(4, ?, 5), uint32],) */;
    %111 = %107.0;
    %112 = %110.0;
    (%111, %112, %var_6247)
  };
  %113(%var_6250) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) */
}

def @func_4474(%var_4431: Tensor[(10, 3, 10), float64], %var_4454: Tensor[(10, 3, 10), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 3, 10), float64], Tensor[(3, 4, 3), int16], Tensor[(10, 3, 10), bool], Tensor[(3, 4, 3), int16]) {
  %114 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %115 = cast(%var_4431, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %116 = log10(%115) /* ty=Tensor[(10, 3, 10), float64] */;
  %117 = cast(%var_4454, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%116, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %121 = cast(%116, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %122 = shape_of(%var_4454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_4454, dtype="bool") /* ty=Tensor[(10, 3, 10), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %126 = %114.0;
  %127 = mod(%119, %120) /* ty=Tensor[(10, 3, 10), float64] */;
  %128 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %129 = less_equal(%123, %124) /* ty=Tensor[(10, 3, 10), bool] */;
  %130 = %125.1;
  (%126, %127, %128, %129, %130)
}

def @func_4723(%var_4717: float64, %var_4718: Tensor[(5, 15, 15), float64]) -> (Tensor[(5, 15, 15), float64],) {
  %131 = cast(%var_4717, dtype="float64") /* ty=float64 */;
  %132 = cast(%var_4718, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %133 = floor_mod(%131, %132) /* ty=Tensor[(5, 15, 15), float64] */;
  (%133,)
}

def @func_2824() -> (Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) {
  %134 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
  %135 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %136 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 4, 3), float64] */, dtype="uint32") /* ty=Tensor[(3, 4, 3), uint32] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="uint32") /* ty=Tensor[(3, 4, 3), uint32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %140 = %134.0;
  %141 = minimum(%138, %139) /* ty=Tensor[(3, 4, 3), uint32] */;
  %142 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%140, %141, %142)
}

def @func_7856(%var_7848: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 6, 9), uint16]) {
  %143 = @func_7246() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %144 = %143.0;
  %145 = cast(%var_7848, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %149 = @func_6023() /* ty=(Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) */;
  %150 = divide(%147, %148) /* ty=Tensor[(3, 4, 3), float64] */;
  %151 = %149.1;
  (%150, %151)
}

def @func_2462(%var_2431: Tensor[(480), int16], %var_2442: Tensor[(120), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), bool]) {
  %152 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %153 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %154 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %155 = reshape(%153, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %156 = reshape(%154, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %157 = cast(%var_2442, dtype="float64") /* ty=Tensor[(120), float64] */;
  %158 = reshape(%157, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %159 = cast(%var_2431, dtype="int16") /* ty=Tensor[(480), int16] */;
  %160 = @func_180(%155, %156) /* ty=Tensor[(15, 4, 8), int16] */;
  %161 = cast(%160, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
  %162 = reshape(%159, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %163 = reshape(%161, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %164 = @func_180(%162, %163) /* ty=Tensor[(15, 4, 8), int16] */;
  %165 = cast(%var_2431, dtype="bool") /* ty=Tensor[(480), bool] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="bool") /* ty=Tensor[(15, 4, 8), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = %152.0;
  %170 = @func_460(%158) /* ty=Tensor[(1, 10, 12), float64] */;
  %171 = less(%167, %168) /* ty=Tensor[(15, 4, 8), bool] */;
  (%169, %160, %170, %var_2442, %171)
}

def @func_6175() -> (Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %172 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %173 = @func_3305() /* ty=Tensor[(3, 4, 3), float64] */;
  %174 = %172.0;
  %175 = @func_5951() /* ty=Tensor[(3, 4, 3), float64] */;
  %176 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
  (%173, %174, %175, %176)
}

def @func_5794(%var_5792: Tensor[(4, 4), float32]) -> (Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) {
  @func_5791(%var_5792) /* ty=(Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) */
}

def @func_2943() -> (Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) {
  %182 = fn () -> (Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) {
    %177 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 9, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
    %178 = cast(meta[relay.Constant][8] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %179 = reshape(%178, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
    %180 = asin(%177) /* ty=Tensor[(16, 9, 6), float32] */;
    %181 = @func_2708(%179) /* ty=Tensor[(3, 4, 3), int64] */;
    (%180, %181, meta[relay.Constant][8] /* ty=Tensor[(36), float64] */)
  };
  %182() /* ty=(Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) */
}

def @func_4762() -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %189 = fn () -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
    %183 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
    %184 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
    %185 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %186 = %183.1;
    %187 = %184.0;
    %188 = %185.0;
    (%186, %187, %188)
  };
  %189() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_7247() -> (Tensor[(3, 4, 3), float64],) {
  %191 = fn () -> (Tensor[(3, 4, 3), float64],) {
    %190 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
    (%190,)
  };
  %191() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_5304(%var_5302: Tensor[(3, 1, 2), float64], %var_5303: Tensor[(567), float32]) -> (Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
  %200 = fn (%var_5273: Tensor[(3, 1, 2), float64], %var_5295: Tensor[(567), float32]) -> (Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
    %192 = cast(%var_5273, dtype="float64") /* ty=Tensor[(3, 1, 2), float64] */;
    %193 = @func_2942() /* ty=(Tensor[(16, 9, 6), float32], Tensor[(3, 4, 3), int64], Tensor[(36), float64]) */;
    %194 = cast(%var_5295, dtype="float32") /* ty=Tensor[(567), float32] */;
    %195 = reshape(%194, newshape=[567]) /* ty=Tensor[(567), float32] */;
    %196 = @func_2584(%195) /* ty=(Tensor[(1408), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32], Tensor[(480), int16], Tensor[(480), int16]) */;
    %197 = sin(%192) /* ty=Tensor[(3, 1, 2), float64] */;
    %198 = %193.2;
    %199 = %196.1;
    (%197, %198, %199, %var_5295)
  };
  %200(%var_5302, %var_5303) /* ty=(Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */
}

def @func_5791(%var_5783: Tensor[(4, 4), float32]) -> (Tensor[(1, 15, 5), bool], Tensor[(480), int16], Tensor[(4, 4), float32], Tensor[(3, 4, 3), float32]) {
  %201 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %202 = %201.1;
  %203 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %204 = %203.0;
  %205 = cast(%202, dtype="bool") /* ty=bool */;
  %206 = cast(%204, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %207 = cast(%var_5783, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %208 = reshape(%207, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %209 = @func_5711(%208) /* ty=(Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) */;
  %210 = @func_4114() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) */;
  %211 = greater_equal(%205, %206) /* ty=Tensor[(1, 15, 5), bool] */;
  %212 = %209.0;
  %213 = %210.1;
  (%211, %212, %var_5783, %213)
}

def @func_4012(%var_4011: Tensor[(567), float64]) -> (Tensor[(3, 4, 3), int16], Tensor[(4, ?, 5), uint32], Tensor[(20), float64], Tensor[(7, 9, 9), float32], Tensor[(567), bool]) {
  %237 = fn (%var_3995: Tensor[(567), float64]) -> (Tensor[(3, 4, 3), int16], Tensor[(4, ?, 5), uint32], Tensor[(20), float64], Tensor[(7, 9, 9), float32], Tensor[(567), bool]) {
    %214 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
    %215 = cast(meta[relay.Constant][9] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %216 = reshape(%215, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
    %217 = @func_1650(%216) /* ty=(Tensor[(4, ?, 5), uint32],) */;
    %218 = cast(meta[relay.Constant][10] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
    %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
    %220 = reshape(%218, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %221 = reshape(%219, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %222 = cast(meta[relay.Constant][10] /* ty=Tensor[(567), float32] */, dtype="float64") /* ty=Tensor[(567), float64] */;
    %223 = sqrt(%222) /* ty=Tensor[(567), float64] */;
    %224 = cast(%var_3995, dtype="int8") /* ty=Tensor[(567), int8] */;
    %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(1), int32] */;
    %226 = cast(%223, dtype="int8") /* ty=Tensor[(567), int8] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?), int8] */;
    %228 = bitwise_or(%226, %227) /* ty=Tensor[(567), int8] */;
    %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(567), int8] */, dtype="bool") /* ty=Tensor[(567), bool] */;
    %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(1), int32] */;
    %231 = cast(%228, dtype="bool") /* ty=Tensor[(567), bool] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?), bool] */;
    %233 = %214.0;
    %234 = %217.0;
    %235 = @func_1281(%220, %221) /* ty=Tensor[(7, 9, 9), float32] */;
    %236 = less(%231, %232) /* ty=Tensor[(567), bool] */;
    (%233, %234, meta[relay.Constant][9] /* ty=Tensor[(20), float64] */, %235, %236)
  };
  %237(%var_4011) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(4, ?, 5), uint32], Tensor[(20), float64], Tensor[(7, 9, 9), float32], Tensor[(567), bool]) */
}

def @func_1847(%var_1820: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) {
  %238 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %239 = %238.0;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %241 = cast(%var_1820, dtype="int16") /* ty=Tensor[(480), int16] */;
  %242 = reshape(%240, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %243 = reshape(%241, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %244 = @func_1253(%242, %243) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %245 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %246 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %247 = cast(meta[relay.Constant][13] /* ty=Tensor[(352, 4), uint32] */, dtype="uint32") /* ty=Tensor[(352, 4), uint32] */;
  %248 = reshape(%246, newshape=[]) /* ty=uint32 */;
  %249 = reshape(%247, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
  %250 = @func_544(%248, %249) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %251 = %244.0;
  %252 = cast(%251, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %253 = cast(%var_1820, dtype="int16") /* ty=Tensor[(480), int16] */;
  %254 = reshape(%252, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %255 = reshape(%253, newshape=[480]) /* ty=Tensor[(480), int16] */;
  %256 = @func_1253(%254, %255) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
  %257 = %245.0;
  %258 = %250.2;
  %259 = %256.5;
  (%239, %251, %var_1820, %257, %258, meta[relay.Constant][12] /* ty=uint32 */, meta[relay.Constant][13] /* ty=Tensor[(352, 4), uint32] */, %259)
}

def @func_2867() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) {
  %260 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %261 = %260.0;
  %262 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  (%261, %262)
}

def @func_1652(%var_1651: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, ?, 5), uint32],) {
  %270 = fn (%var_1628: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, ?, 5), uint32],) {
    %263 = cast(%var_1628, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
    %264 = sqrt(%263) /* ty=Tensor[(4, 1, 5), float64] */;
    %265 = cast(%var_1628, dtype="uint32") /* ty=Tensor[(4, 1, 5), uint32] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%264, dtype="uint32") /* ty=Tensor[(4, 1, 5), uint32] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %269 = subtract(%267, %268) /* ty=Tensor[(4, ?, 5), uint32] */;
    (%269,)
  };
  %270(%var_1651) /* ty=(Tensor[(4, ?, 5), uint32],) */
}

def @func_2358() -> (Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) {
  %277 = fn () -> (Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) {
    %271 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
    %272 = %271.8;
    %273 = cast(%272, dtype="float64") /* ty=Tensor[(1408), float64] */;
    %274 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %275 = acos(%273) /* ty=Tensor[(1408), float64] */;
    %276 = %274.0;
    (%275, %276)
  };
  %277() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_6855(%var_6795: Tensor[(11, 14, 15), bool], %var_6796: Tensor[(11, 14, 15), bool], %var_6832: Tensor[(11, 14, 15), bool]) -> (Tensor[(3, 4, 3), int16], Tensor[(11, 14, 15), bool], Tensor[(11, 14, 15), bool]) {
  %278 = cast(%var_6796, dtype="float32") /* ty=Tensor[(11, 14, 15), float32] */;
  %279 = acos(%278) /* ty=Tensor[(11, 14, 15), float32] */;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(11, 14, 15), float64] */;
  %281 = erf(%280) /* ty=Tensor[(11, 14, 15), float64] */;
  %282 = cast(%var_6796, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %283 = shape_of(%var_6795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_6795, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %286 = logical_and(%284, %285) /* ty=Tensor[(11, 14, 15), bool] */;
  %287 = cast(%var_6832, dtype="int64") /* ty=Tensor[(11, 14, 15), int64] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="int64") /* ty=Tensor[(11, 14, 15), int64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %291 = minimum(%289, %290) /* ty=Tensor[(11, 14, 15), int64] */;
  %292 = cast(%291, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %293 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%281, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %296 = cast(%286, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %297 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%279, dtype="bool") /* ty=Tensor[(11, 14, 15), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
  %301 = less_equal(%294, %295) /* ty=Tensor[(11, 14, 15), bool] */;
  %302 = logical_or(%298, %299) /* ty=Tensor[(11, 14, 15), bool] */;
  (%300, %301, %302)
}

def @func_7388() -> (Tensor[(3, 4, 3), float64],) {
  @func_7386() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_5711(%var_5696: Tensor[(16), float32]) -> (Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) {
  %303 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %304 = cast(%var_5696, dtype="float32") /* ty=Tensor[(16), float32] */;
  %305 = reshape(%304, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %306 = @func_4385(%305) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %307 = %303.2;
  %308 = %306.1;
  (%307, %308, %var_5696)
}

def @func_7322() -> (Tensor[(3, 4, 3), int16],) {
  @func_7320() /* ty=(Tensor[(3, 4, 3), int16],) */
}

def @func_894() -> (Tensor[(3, 4, 3), float64],) {
  %310 = fn () -> (Tensor[(3, 4, 3), float64],) {
    %309 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    (%309,)
  };
  %310() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_6484() -> Tensor[(3, 4, 3), float64] {
  %311 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %311.1
}

def @func_7320() -> (Tensor[(3, 4, 3), int16],) {
  %312 = @func_3930() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) */;
  %313 = %312.0;
  (%313,)
}

def @func_7416() -> (Tensor[(13, 14, 3), int8],) {
  %316 = fn () -> (Tensor[(13, 14, 3), int8],) {
    %314 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
    %315 = %314.1;
    (%315,)
  };
  %316() /* ty=(Tensor[(13, 14, 3), int8],) */
}

def @func_2189() -> Tensor[(3, 4, 3), float32] {
  @func_2187() /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_5388() -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(189, 3), float32], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %334 = fn () -> (Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(189, 3), float32], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
    %317 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
    %318 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
    %319 = cast(meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, dtype="float32") /* ty=Tensor[(189, 3), float32] */;
    %320 = cast(meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, dtype="float32") /* ty=Tensor[(189, 3), float32] */;
    %321 = reshape(%319, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %322 = reshape(%320, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %323 = %318.0;
    %324 = cast(%323, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %325 = reshape(%324, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
    %326 = @func_1383(%325) /* ty=(Tensor[(3, 4, 3), bool],) */;
    %327 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
    %328 = @func_3267() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %329 = %317.0;
    %330 = @func_1281(%321, %322) /* ty=Tensor[(7, 9, 9), float32] */;
    %331 = %326.0;
    %332 = %327.1;
    %333 = %328.0;
    (%329, %323, %330, meta[relay.Constant][14] /* ty=Tensor[(189, 3), float32] */, %331, %332, %333)
  };
  %334() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(189, 3), float32], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_2745() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) {
  @func_2743() /* ty=(Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) */
}

def @func_906() -> (Tensor[(3, 4, 3), float64],) {
  @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_2046(%var_2044: Tensor[(4, 120), int16], %var_2045: Tensor[(4, 120), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) {
  %358 = fn (%var_2016: Tensor[(4, 120), int16], %var_2038: Tensor[(4, 120), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) {
    %335 = cast(%var_2016, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
    %336 = reshape(%335, newshape=[480]) /* ty=Tensor[(480), int16] */;
    %337 = @func_1847(%336) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) */;
    %338 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
    %339 = %338.0;
    %340 = cast(%339, dtype="float32") /* ty=Tensor[(?, 15, 14), float32] */;
    %341 = acos(%340) /* ty=Tensor[(?, 15, 14), float32] */;
    %342 = cast(%341, dtype="float64") /* ty=Tensor[(?, 15, 14), float64] */;
    %343 = log2(%342) /* ty=Tensor[(?, 15, 14), float64] */;
    %344 = cast(%339, dtype="bool") /* ty=Tensor[(?, 15, 14), bool] */;
    %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
    %346 = cast(%343, dtype="bool") /* ty=Tensor[(?, 15, 14), bool] */;
    %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %348 = cast(%var_2038, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
    %349 = shape_of(%var_2016, dtype="int32") /* ty=Tensor[(2), int32] */;
    %350 = cast(%var_2016, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
    %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %352 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
    %353 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
    %354 = %337.7;
    %355 = greater(%346, %347) /* ty=Tensor[(?, 15, 14), bool] */;
    %356 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
    %357 = floor_divide(%350, %351) /* ty=Tensor[(4, 120), float64] */;
    (%352, %353, %354, %355, %356, %357)
  };
  %358(%var_2044, %var_2045) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */
}

def @func_3690(%var_3688: Tensor[(567), float32], %var_3689: Tensor[(567), bool]) -> (Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) {
  %378 = fn (%var_3652: Tensor[(567), float32], %var_3657: Tensor[(567), bool]) -> (Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) {
    %359 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
    %360 = %359.2;
    %361 = cast(%var_3652, dtype="bool") /* ty=Tensor[(567), bool] */;
    %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(1), int32] */;
    %363 = cast(%360, dtype="bool") /* ty=Tensor[(567), bool] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?), bool] */;
    %365 = greater(%363, %364) /* ty=Tensor[(567), bool] */;
    %366 = cast(%var_3657, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(1), int32] */;
    %368 = cast(%365, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %370 = cast(%var_3652, dtype="uint16") /* ty=Tensor[(567), uint16] */;
    %371 = shape_of(%360, dtype="int32") /* ty=Tensor[(1), int32] */;
    %372 = cast(%360, dtype="uint16") /* ty=Tensor[(567), uint16] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %374 = cast(%var_3657, dtype="float32") /* ty=Tensor[(567), float32] */;
    %375 = minimum(%368, %369) /* ty=Tensor[(567), uint32] */;
    %376 = left_shift(%372, %373) /* ty=Tensor[(567), uint16] */;
    %377 = rsqrt(%374) /* ty=Tensor[(567), float32] */;
    (%375, %376, %377)
  };
  %378(%var_3688, %var_3689) /* ty=(Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) */
}

def @func_4292() -> (Tensor[(3, 4, 3), float32], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
  %384 = fn () -> (Tensor[(3, 4, 3), float32], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) {
    %379 = cast(meta[relay.Constant][15] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %380 = reshape(%379, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
    %381 = @func_1650(%380) /* ty=(Tensor[(4, ?, 5), uint32],) */;
    %382 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
    %383 = %381.0;
    (%382, %383, meta[relay.Constant][15] /* ty=Tensor[(20), float64] */)
  };
  %384() /* ty=(Tensor[(3, 4, 3), float32], Tensor[(4, ?, 5), uint32], Tensor[(20), float64]) */
}

def @func_1932() -> (Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
  %394 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) {
    %385 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %386 = %385.0;
    %387 = cast(%386, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %388 = cast(meta[relay.Constant][16] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
    %389 = cast(meta[relay.Constant][16] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
    %390 = reshape(%388, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %391 = reshape(%389, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), float32] */;
    %392 = sigmoid(%387) /* ty=Tensor[(3, 4, 3), float64] */;
    %393 = @func_1281(%390, %391) /* ty=Tensor[(7, 9, 9), float32] */;
    (%392, %393, meta[relay.Constant][16] /* ty=Tensor[(567), float32] */)
  };
  %394() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */
}

def @func_1410() -> (Tensor[(3, 4, 3), float64],) {
  %396 = fn () -> (Tensor[(3, 4, 3), float64],) {
    %395 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    (%395,)
  };
  %396() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_4388(%var_4386: Tensor[(16), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) {
  @func_4385(%var_4386) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */
}

def @func_3735() -> (Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) {
  @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */
}

def @func_3639(%var_3638: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(480), int16], Tensor[(480), int16]) {
  %404 = fn (%var_3617: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(480), int16], Tensor[(480), int16]) {
    %397 = cast(%var_3617, dtype="int16") /* ty=Tensor[(480), int16] */;
    %398 = cast(%var_3617, dtype="int16") /* ty=Tensor[(480), int16] */;
    %399 = reshape(%397, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
    %400 = reshape(%398, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
    %401 = @func_2043(%399, %400) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
    %402 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
    %403 = %401.2;
    (%402, %403, %var_3617)
  };
  %404(%var_3638) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(480), int16], Tensor[(480), int16]) */
}

def @func_5987() -> (Tensor[(3, 4, 3), float64], Tensor[(546), float64]) {
  %409 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(546), float64]) {
    %405 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
    %406 = @func_4554() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(13, 14, 3), int8], Tensor[(546), float64]) */;
    %407 = %405.2;
    %408 = %406.2;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(546), float64]) */
}

def @func_5714(%var_5712: Tensor[(16), float32]) -> (Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) {
  @func_5711(%var_5712) /* ty=(Tensor[(480), int16], Tensor[(15, 8, 2), bool], Tensor[(16), float32]) */
}

def @func_7353() -> Tensor[(3, 4, 3), int16] {
  %411 = fn () -> Tensor[(3, 4, 3), int16] {
    %410 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
    %410.1
  };
  %411() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_3931() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) {
  %416 = fn () -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) {
    %412 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
    %413 = cast(%412, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %414 = reshape(%413, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
    %415 = @func_2708(%414) /* ty=Tensor[(3, 4, 3), int64] */;
    (%412, %415)
  };
  %416() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), int64]) */
}

def @func_3246() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) {
  %417 = @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */;
  %418 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
  %419 = %417.0;
  %420 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  (%418, %419, %420)
}

def @func_7189() -> (Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) {
  @func_7187() /* ty=(Tensor[(2, 8), float32], Tensor[(3, 4, 3), int16]) */
}

def @func_4478(%var_4476: Tensor[(10, 3, 10), float64], %var_4477: Tensor[(10, 3, 10), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 3, 10), float64], Tensor[(3, 4, 3), int16], Tensor[(10, 3, 10), bool], Tensor[(3, 4, 3), int16]) {
  @func_4474(%var_4476, %var_4477) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(10, 3, 10), float64], Tensor[(3, 4, 3), int16], Tensor[(10, 3, 10), bool], Tensor[(3, 4, 3), int16]) */
}

def @func_2869() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) {
  @func_2867() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16]) */
}

def @func_7043() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %424 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
    %421 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
    %422 = @func_6287() /* ty=Tensor[(3, 4, 3), float64] */;
    %423 = %421.1;
    (%422, %423)
  };
  %424() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_2708(%var_2686: Tensor[(3, 4, 3), float64]) -> Tensor[(3, 4, 3), int64] {
  %425 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %426 = %425.1;
  %427 = cast(%var_2686, dtype="int64") /* ty=Tensor[(3, 4, 3), int64] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="int64") /* ty=Tensor[(3, 4, 3), int64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%429, %430) /* ty=Tensor[(3, 4, 3), int64] */
}

def @func_2466(%var_2464: Tensor[(480), int16], %var_2465: Tensor[(120), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), bool]) {
  @func_2462(%var_2464, %var_2465) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), bool]) */
}

def @func_2743() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), float32], Tensor[(120, 4), int16]) {
  %431 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %432 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %433 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 4), int16] */, dtype="int16") /* ty=Tensor[(120, 4), int16] */;
  %434 = reshape(%432, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %435 = reshape(%433, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %436 = @func_2043(%434, %435) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %437 = log(%431) /* ty=Tensor[(2, 3, 11), float64] */;
  %438 = %436.1;
  (%437, %438, meta[relay.Constant][18] /* ty=Tensor[(120, 4), int16] */)
}

def @func_5200() -> (Tensor[(3, 4, 3), int16],) {
  %439 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  (%439,)
}

def @func_6327() -> Tensor[(1, 15, 5), float32] {
  %441 = fn () -> Tensor[(1, 15, 5), float32] {
    %440 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
    %440.2
  };
  %441() /* ty=Tensor[(1, 15, 5), float32] */
}

def @func_5003(%var_5001: Tensor[(10, 6, 9), uint16], %var_5002: Tensor[(10, 6, 9), uint16]) -> (Tensor[(10, 6, 9), uint16],) {
  %447 = fn (%var_4991: Tensor[(10, 6, 9), uint16], %var_4992: Tensor[(10, 6, 9), uint16]) -> (Tensor[(10, 6, 9), uint16],) {
    %442 = cast(%var_4992, dtype="uint16") /* ty=Tensor[(10, 6, 9), uint16] */;
    %443 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%var_4991, dtype="uint16") /* ty=Tensor[(10, 6, 9), uint16] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %446 = add(%444, %445) /* ty=Tensor[(10, 6, 9), uint16] */;
    (%446,)
  };
  %447(%var_5001, %var_5002) /* ty=(Tensor[(10, 6, 9), uint16],) */
}

def @func_4072() -> (Tensor[(1, 15, 5), float32],) {
  %450 = fn () -> (Tensor[(1, 15, 5), float32],) {
    %448 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
    %449 = %448.2;
    (%449,)
  };
  %450() /* ty=(Tensor[(1, 15, 5), float32],) */
}

def @func_5091() -> (Tensor[(3, 4, 3), float64], Tensor[(567), float32]) {
  @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */
}

def @func_5419() -> Tensor[(3, 4, 3), int16] {
  @func_5417() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_1044() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %451 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %452 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %453 = %451.0;
  %454 = %452.0;
  (%453, %454)
}

def @func_1285(%var_1283: Tensor[(7, 9, 9), float32], %var_1284: Tensor[(7, 9, 9), float32]) -> Tensor[(7, 9, 9), float32] {
  @func_1281(%var_1283, %var_1284) /* ty=Tensor[(7, 9, 9), float32] */
}

def @func_2261() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) {
  @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */
}

def @func_6024() -> (Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) {
  %463 = fn () -> (Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) {
    %455 = @func_4398() /* ty=(Tensor[(7, 9, 9), float32],) */;
    %456 = cast(meta[relay.Constant][19] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
    %457 = cast(meta[relay.Constant][19] /* ty=Tensor[(540), uint16] */, dtype="uint16") /* ty=Tensor[(540), uint16] */;
    %458 = reshape(%456, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), uint16] */;
    %459 = reshape(%457, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), uint16] */;
    %460 = @func_5000(%458, %459) /* ty=(Tensor[(10, 6, 9), uint16],) */;
    %461 = %455.0;
    %462 = %460.0;
    (%461, %462, meta[relay.Constant][19] /* ty=Tensor[(540), uint16] */)
  };
  %463() /* ty=(Tensor[(7, 9, 9), float32], Tensor[(10, 6, 9), uint16], Tensor[(540), uint16]) */
}

def @func_5659(%var_5657: Tensor[(16), float32], %var_5658: Tensor[(1078), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) {
  @func_5655(%var_5657, %var_5658) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) */
}

def @func_7304() -> (Tensor[(3, 4, 3), float64],) {
  @func_7302() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_1385(%var_1384: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), bool],) {
  %471 = fn (%var_1373: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), bool],) {
    %464 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
    %465 = %464.1;
    %466 = cast(%var_1373, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
    %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%465, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %470 = logical_or(%468, %469) /* ty=Tensor[(3, 4, 3), bool] */;
    (%470,)
  };
  %471(%var_1384) /* ty=(Tensor[(3, 4, 3), bool],) */
}

def @func_5202() -> (Tensor[(3, 4, 3), int16],) {
  @func_5200() /* ty=(Tensor[(3, 4, 3), int16],) */
}

def @func_6529() -> Tensor[(3, 4, 3), int16] {
  %473 = fn () -> Tensor[(3, 4, 3), int16] {
    %472 = @func_5200() /* ty=(Tensor[(3, 4, 3), int16],) */;
    %472.0
  };
  %473() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_4805(%var_4772: Tensor[(7, 14, 11), float64]) -> (Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) {
  %474 = cast(%var_4772, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
  %475 = rsqrt(%474) /* ty=Tensor[(7, 14, 11), float64] */;
  %476 = @func_3305() /* ty=Tensor[(3, 4, 3), float64] */;
  (%475, %476)
}

def @func_888() -> Tensor[(3, 4, 3), float64] {
  @func_886() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_4134(%var_4123: Tensor[(2, 10, 7), int16]) -> Tensor[(2, 10, 7), int16] {
  %477 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 10, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 10, 7), int16] */;
  %478 = shape_of(%var_4123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_4123, dtype="int16") /* ty=Tensor[(2, 10, 7), int16] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%479, %480) /* ty=Tensor[(2, 10, 7), int16] */
}

def @func_2654() -> Tensor[(3, 4, 3), float32] {
  @func_2187() /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_4635() -> (Tensor[(1, 15, 5), float32],) {
  %482 = fn () -> (Tensor[(1, 15, 5), float32],) {
    %481 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
    (%481,)
  };
  %482() /* ty=(Tensor[(1, 15, 5), float32],) */
}

def @func_7150(%var_7149: Tensor[(2, 15, 5), float32]) -> Tensor[(2, 15, 5), uint32] {
  %487 = fn (%var_7143: Tensor[(2, 15, 5), float32]) -> Tensor[(2, 15, 5), uint32] {
    %483 = @func_4946() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32]) */;
    %484 = %483.0;
    %485 = cast(%484, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
    %486 = cast(%var_7143, dtype="uint32") /* ty=Tensor[(2, 15, 5), uint32] */;
    add(%485, %486) /* ty=Tensor[(2, 15, 5), uint32] */
  };
  %487(%var_7149) /* ty=Tensor[(2, 15, 5), uint32] */
}

def @func_6289() -> Tensor[(3, 4, 3), float64] {
  @func_6287() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_3830(%var_3828: int16, %var_3829: Tensor[(12, 10, 12), int16]) -> Tensor[(12, 10, 12), bool] {
  @func_3826(%var_3828, %var_3829) /* ty=Tensor[(12, 10, 12), bool] */
}

def @func_3181() -> Tensor[(3, 4, 3), bool] {
  @func_3179() /* ty=Tensor[(3, 4, 3), bool] */
}

def @func_6460(%var_6458: Tensor[(4, 5, 2), float64], %var_6459: Tensor[(4, 5, 2), float64]) -> (Tensor[(4, 5, 2), float64], Tensor[(1078), float64], Tensor[(16), float32], Tensor[(1078), float32]) {
  %499 = fn (%var_6443: Tensor[(4, 5, 2), float64], %var_6444: Tensor[(4, 5, 2), float64]) -> (Tensor[(4, 5, 2), float64], Tensor[(1078), float64], Tensor[(16), float32], Tensor[(1078), float32]) {
    %488 = cast(%var_6444, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
    %489 = shape_of(%var_6443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%var_6443, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %492 = cast(meta[relay.Constant][21] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %493 = cast(meta[relay.Constant][22] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %494 = reshape(%492, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %495 = reshape(%493, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
    %496 = @func_5655(%494, %495) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) */;
    %497 = power(%490, %491) /* ty=Tensor[(4, 5, 2), float64] */;
    %498 = %496.5;
    (%497, %498, meta[relay.Constant][21] /* ty=Tensor[(16), float32] */, meta[relay.Constant][22] /* ty=Tensor[(1078), float32] */)
  };
  %499(%var_6458, %var_6459) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(1078), float64], Tensor[(16), float32], Tensor[(1078), float32]) */
}

def @func_7505(%var_7503: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %500 = @func_4213() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %501 = cast(%var_7503, dtype="int16") /* ty=Tensor[(480), int16] */;
  %502 = cast(%var_7503, dtype="int16") /* ty=Tensor[(480), int16] */;
  %503 = reshape(%501, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %504 = reshape(%502, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %505 = %500.0;
  %506 = @func_180(%503, %504) /* ty=Tensor[(15, 4, 8), int16] */;
  (%505, %506, %var_7503)
}

def @func_5089() -> (Tensor[(3, 4, 3), float64], Tensor[(567), float32]) {
  %507 = @func_2357() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), float64]) */;
  %508 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
  %509 = %507.1;
  %510 = %508.2;
  (%509, %510)
}

def @func_1620(%var_1619: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %517 = fn (%var_1615: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
    %511 = cast(%var_1615, dtype="int16") /* ty=Tensor[(480), int16] */;
    %512 = cast(%var_1615, dtype="int16") /* ty=Tensor[(480), int16] */;
    %513 = reshape(%511, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %514 = reshape(%512, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %515 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
    %516 = @func_180(%513, %514) /* ty=Tensor[(15, 4, 8), int16] */;
    (%515, %516, %var_1615)
  };
  %517(%var_1619) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */
}

def @func_3179() -> Tensor[(3, 4, 3), bool] {
  %518 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
  %518.1
}

def @func_4873(%var_4871: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) {
  @func_4870(%var_4871) /* ty=(Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) */
}

def @func_5494(%var_5493: Tensor[(9, 63), float32]) -> (Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) {
  %526 = fn (%var_5485: Tensor[(9, 63), float32]) -> (Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) {
    %519 = cast(%var_5485, dtype="float32") /* ty=Tensor[(9, 63), float32] */;
    %520 = cast(%var_5485, dtype="bool") /* ty=Tensor[(9, 63), bool] */;
    %521 = reshape(%519, newshape=[567]) /* ty=Tensor[(567), float32] */;
    %522 = reshape(%520, newshape=[567]) /* ty=Tensor[(567), bool] */;
    %523 = @func_3687(%521, %522) /* ty=(Tensor[(567), uint32], Tensor[(567), uint16], Tensor[(567), float32]) */;
    %524 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
    %525 = %523.1;
    (%524, %525, %var_5485)
  };
  %526(%var_5493) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) */
}

def @func_6728(%var_6727: Tensor[(567), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16], Tensor[(567), float32]) {
  %533 = fn (%var_6716: Tensor[(567), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16], Tensor[(567), float32]) {
    %527 = @func_4761() /* ty=(Tensor[(13, 14, 3), int8], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
    %528 = cast(%var_6716, dtype="float32") /* ty=Tensor[(567), float32] */;
    %529 = reshape(%528, newshape=[9, 63]) /* ty=Tensor[(9, 63), float32] */;
    %530 = @func_5492(%529) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(567), uint16], Tensor[(9, 63), float32]) */;
    %531 = %527.2;
    %532 = %530.0;
    (%531, %532, %var_6716)
  };
  %533(%var_6727) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), int16], Tensor[(567), float32]) */
}

def @func_3774() -> Tensor[(3, 4, 3), float64] {
  %534 = @func_2824() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) */;
  %534.2
}

def @func_4250() -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
  %535 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %536 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  %537 = %535.6;
  (%536, %537)
}

def @func_4215() -> (Tensor[(3, 4, 3), float64],) {
  @func_4213() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_3489() -> (Tensor[(?, 15, 5), bool], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64]) {
  %549 = fn () -> (Tensor[(?, 15, 5), bool], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64]) {
    %538 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
    %539 = %538.0;
    %540 = cast(%539, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
    %541 = asinh(%540) /* ty=Tensor[(1, 15, 5), float32] */;
    %542 = cast(%541, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
    %543 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %544 = cast(%539, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %546 = logical_and(%544, %545) /* ty=Tensor[(?, 15, 5), bool] */;
    %547 = @func_3179() /* ty=Tensor[(3, 4, 3), bool] */;
    %548 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
    (%546, %547, %548)
  };
  %549() /* ty=(Tensor[(?, 15, 5), bool], Tensor[(3, 4, 3), bool], Tensor[(3, 4, 3), float64]) */
}

def @func_1850(%var_1848: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) {
  @func_1847(%var_1848) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), uint16], Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(120), float64], uint32, Tensor[(352, 4), uint32], Tensor[(480), int16]) */
}

def @func_2826() -> (Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) {
  @func_2824() /* ty=(Tensor[(1408), float64], Tensor[(3, 4, 3), uint32], Tensor[(3, 4, 3), float64]) */
}

def @func_2510() -> Tensor[(210), uint16] {
  @func_2508() /* ty=Tensor[(210), uint16] */
}

def @func_4890() -> Tensor[(1, 15, 5), float64] {
  @func_4179() /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_2187() -> Tensor[(3, 4, 3), float32] {
  %550 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %550.4
}

def @func_1096() -> Tensor[(3, 4, 3), int16] {
  %558 = fn () -> Tensor[(3, 4, 3), int16] {
    %551 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %552 = cast(%551, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %553 = asinh(%552) /* ty=Tensor[(3, 4, 3), float64] */;
    %554 = cast(%551, dtype="int16") /* ty=Tensor[(3, 4, 3), int16] */;
    %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %556 = cast(%553, dtype="int16") /* ty=Tensor[(3, 4, 3), int16] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%556, %557) /* ty=Tensor[(3, 4, 3), int16] */
  };
  %558() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_1728() -> Tensor[(3, 4, 3), float32] {
  %562 = fn () -> Tensor[(3, 4, 3), float32] {
    %559 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %560 = %559.0;
    %561 = cast(%560, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    log2(%561) /* ty=Tensor[(3, 4, 3), float32] */
  };
  %562() /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_1141() -> Tensor[(3, 4, 3), float64] {
  %565 = fn () -> Tensor[(3, 4, 3), float64] {
    %563 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %564 = cast(%563, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    exp(%564) /* ty=Tensor[(3, 4, 3), float64] */
  };
  %565() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_2171() -> (Tensor[(1, 15, 5), float32],) {
  %566 = @func_1950() /* ty=Tensor[(1, 15, 5), float32] */;
  (%566,)
}

def @func_5966(%var_5965: Tensor[(567), float32]) -> (Tensor[(567), float32],) {
  %574 = fn (%var_5956: Tensor[(567), float32]) -> (Tensor[(567), float32],) {
    %567 = @func_1931() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
    %568 = %567.2;
    %569 = cast(%var_5956, dtype="float32") /* ty=Tensor[(567), float32] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(1), int32] */;
    %571 = cast(%568, dtype="float32") /* ty=Tensor[(567), float32] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?), float32] */;
    %573 = mod(%571, %572) /* ty=Tensor[(567), float32] */;
    (%573,)
  };
  %574(%var_5965) /* ty=(Tensor[(567), float32],) */
}

def @func_5655(%var_5607: Tensor[(16), float32], %var_5620: Tensor[(1078), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float64], Tensor[(2, 10, 7), int16], Tensor[(140), int16], Tensor[(240), float32], Tensor[(16), float32], Tensor[(3, 4, 3), float64], Tensor[(1078), float32], Tensor[(1078), float64]) {
  %575 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %576 = cast(meta[relay.Constant][23] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %577 = reshape(%576, newshape=[7, 14, 11]) /* ty=Tensor[(7, 14, 11), float64] */;
  %578 = @func_4805(%577) /* ty=(Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) */;
  %579 = @func_4634() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %580 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %581 = @func_5089() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(567), float32]) */;
  %582 = cast(meta[relay.Constant][23] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %583 = log(%582) /* ty=Tensor[(1078), float64] */;
  %584 = cast(%583, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %585 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), int16] */, dtype="int16") /* ty=Tensor[(140), int16] */;
  %586 = reshape(%585, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), int16] */;
  %587 = cast(%var_5607, dtype="float32") /* ty=Tensor[(16), float32] */;
  %588 = reshape(%587, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %589 = @func_4385(%588) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %590 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %591 = cast(meta[relay.Constant][23] /* ty=Tensor[(1078), float64] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %592 = shape_of(%583, dtype="int32") /* ty=Tensor[(1), int32] */;
  %593 = cast(%583, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?), float32] */;
  %595 = power(%593, %594) /* ty=Tensor[(1078), float32] */;
  %596 = cast(%var_5620, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(1), int32] */;
  %598 = cast(%595, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?), float32] */;
  %600 = cast(%583, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %601 = rsqrt(%600) /* ty=Tensor[(1078), float32] */;
  %602 = cast(meta[relay.Constant][23] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %603 = atanh(%602) /* ty=Tensor[(1078), float64] */;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %605 = shape_of(%601, dtype="int32") /* ty=Tensor[(1), int32] */;
  %606 = cast(%601, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?), float64] */;
  %608 = %575.0;
  %609 = %578.1;
  %610 = %579.0;
  %611 = %580.0;
  %612 = %581.0;
  %613 = tan(%584) /* ty=Tensor[(1078), float64] */;
  %614 = @func_4134(%586) /* ty=Tensor[(2, 10, 7), int16] */;
  %615 = %589.3;
  %616 = %590.0;
  %617 = floor_divide(%598, %599) /* ty=Tensor[(1078), float32] */;
  %618 = divide(%606, %607) /* ty=Tensor[(1078), float64] */;
  (%608, %609, %610, %611, %612, %613, %614, meta[relay.Constant][24] /* ty=Tensor[(140), int16] */, %615, %var_5607, %616, %617, %618)
}

def @func_6898(%var_6897: Tensor[(15, 4, 12), float64]) -> (Tensor[(15, 4, 12), float64],) {
  %621 = fn (%var_6866: Tensor[(15, 4, 12), float64]) -> (Tensor[(15, 4, 12), float64],) {
    %619 = cast(%var_6866, dtype="float64") /* ty=Tensor[(15, 4, 12), float64] */;
    %620 = cosh(%619) /* ty=Tensor[(15, 4, 12), float64] */;
    (%620,)
  };
  %621(%var_6897) /* ty=(Tensor[(15, 4, 12), float64],) */
}

def @func_4727(%var_4725: float64, %var_4726: Tensor[(5, 15, 15), float64]) -> (Tensor[(5, 15, 15), float64],) {
  @func_4723(%var_4725, %var_4726) /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_1046() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_904() -> (Tensor[(3, 4, 3), float64],) {
  %622 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
  (%622,)
}

def @func_1899() -> (Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) {
  %627 = fn () -> (Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) {
    %623 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
    %624 = @func_904() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %625 = %623.2;
    %626 = %624.0;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */
}

def @func_462(%var_461: Tensor[(1, 10, 12), float64]) -> Tensor[(1, 10, 12), float64] {
  %629 = fn (%var_439: Tensor[(1, 10, 12), float64]) -> Tensor[(1, 10, 12), float64] {
    %628 = cast(%var_439, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
    log(%628) /* ty=Tensor[(1, 10, 12), float64] */
  };
  %629(%var_461) /* ty=Tensor[(1, 10, 12), float64] */
}

def @func_3508() -> (Tensor[(1, 15, 5), float32],) {
  %632 = fn () -> (Tensor[(1, 15, 5), float32],) {
    %630 = @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */;
    %631 = %630.0;
    (%631,)
  };
  %632() /* ty=(Tensor[(1, 15, 5), float32],) */
}

def @func_3776() -> Tensor[(3, 4, 3), float64] {
  @func_3774() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_2656() -> Tensor[(3, 4, 3), float32] {
  @func_2654() /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_5417() -> Tensor[(3, 4, 3), int16] {
  @func_1095() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_544(%var_518: uint32, %var_519: Tensor[(16, 11, 8), uint32]) -> (Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %633 = cast(%var_518, dtype="uint32") /* ty=uint32 */;
  %634 = cast(%var_519, dtype="uint32") /* ty=Tensor[(16, 11, 8), uint32] */;
  %635 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %636 = reshape(%635, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %637 = cast(meta[relay.Constant][26] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %638 = cast(meta[relay.Constant][26] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %639 = reshape(%637, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %640 = reshape(%638, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
  %641 = bitwise_and(%633, %634) /* ty=Tensor[(16, 11, 8), uint32] */;
  %642 = @func_460(%636) /* ty=Tensor[(1, 10, 12), float64] */;
  %643 = @func_180(%639, %640) /* ty=Tensor[(15, 4, 8), int16] */;
  (%641, %642, meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, %643, meta[relay.Constant][26] /* ty=Tensor[(480), int16] */)
}

def @func_3733() -> (Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) {
  %644 = @func_1044() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */;
  %645 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 120), int16] */, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
  %646 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 120), int16] */, dtype="int16") /* ty=Tensor[(4, 120), int16] */;
  %647 = reshape(%645, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %648 = reshape(%646, newshape=[4, 120]) /* ty=Tensor[(4, 120), int16] */;
  %649 = @func_2043(%647, %648) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(?, 15, 14), bool], Tensor[(3, 4, 3), int16], Tensor[(4, 120), float64]) */;
  %650 = %644.0;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %652 = reshape(%651, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %653 = %649.3;
  %654 = @func_2708(%652) /* ty=Tensor[(3, 4, 3), int64] */;
  (%650, %653, meta[relay.Constant][27] /* ty=Tensor[(4, 120), int16] */, %654)
}

def @func_3248() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) {
  @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */
}

def @func_3415() -> (Tensor[(1, 15, 5), float32], uint32) {
  %659 = fn () -> (Tensor[(1, 15, 5), float32], uint32) {
    %655 = @func_3246() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32]) */;
    %656 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
    %657 = %655.2;
    %658 = %656.1;
    (%657, %658)
  };
  %659() /* ty=(Tensor[(1, 15, 5), float32], uint32) */
}

def @func_7567(%var_7566: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %667 = fn (%var_7555: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
    %660 = @func_1779() /* ty=Tensor[(3, 4, 3), int16] */;
    %661 = cast(%660, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %662 = cast(%var_7555, dtype="int16") /* ty=Tensor[(480), int16] */;
    %663 = reshape(%661, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
    %664 = reshape(%662, newshape=[480]) /* ty=Tensor[(480), int16] */;
    %665 = @func_1253(%663, %664) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
    %666 = %665.4;
    (%660, %666, %var_7555)
  };
  %667(%var_7566) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */
}

def @func_1473(%var_1471: Tensor[(1, 15, 14), uint16], %var_1472: Tensor[(1, 15, 14), uint16]) -> (Tensor[(?, 15, 14), uint16],) {
  @func_1469(%var_1471, %var_1472) /* ty=(Tensor[(?, 15, 14), uint16],) */
}

def @func_6177() -> (Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  @func_6175() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(1, 15, 5), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_7277() -> (Tensor[(3, 4, 3), float32], Tensor[(1, 15, 5), float32]) {
  %668 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %669 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
  %670 = %668.0;
  (%669, %670)
}

def @func_6860(%var_6857: Tensor[(11, 14, 15), bool], %var_6858: Tensor[(11, 14, 15), bool], %var_6859: Tensor[(11, 14, 15), bool]) -> (Tensor[(3, 4, 3), int16], Tensor[(11, 14, 15), bool], Tensor[(11, 14, 15), bool]) {
  @func_6855(%var_6857, %var_6858, %var_6859) /* ty=(Tensor[(3, 4, 3), int16], Tensor[(11, 14, 15), bool], Tensor[(11, 14, 15), bool]) */
}

def @func_3531(%var_3529: Tensor[(13, 14, 3), float64], %var_3530: Tensor[(13, 14, 3), float64]) -> Tensor[(13, 14, 3), int8] {
  %677 = fn (%var_3519: Tensor[(13, 14, 3), float64], %var_3523: Tensor[(13, 14, 3), float64]) -> Tensor[(13, 14, 3), int8] {
    %671 = cast(%var_3519, dtype="float64") /* ty=Tensor[(13, 14, 3), float64] */;
    %672 = sin(%671) /* ty=Tensor[(13, 14, 3), float64] */;
    %673 = cast(%var_3523, dtype="int8") /* ty=Tensor[(13, 14, 3), int8] */;
    %674 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%672, dtype="int8") /* ty=Tensor[(13, 14, 3), int8] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%675, %676) /* ty=Tensor[(13, 14, 3), int8] */
  };
  %677(%var_3529, %var_3530) /* ty=Tensor[(13, 14, 3), int8] */
}

def @func_3357() -> (Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), int16]) {
  @func_3355() /* ty=(Tensor[(2, 3, 11), float64], Tensor[(3, 4, 3), int16]) */
}

def @func_1281(%var_1273: Tensor[(7, 9, 9), float32], %var_1274: Tensor[(7, 9, 9), float32]) -> Tensor[(7, 9, 9), float32] {
  %678 = cast(%var_1274, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
  %679 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_1273, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%680, %681) /* ty=Tensor[(7, 9, 9), float32] */
}

def @func_6672() -> (Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) {
  %682 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %683 = @func_2929() /* ty=(Tensor[(3, 4, 3), float32], uint32, Tensor[(480), int16]) */;
  %684 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %685 = reshape(%684, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %686 = @func_4385(%685) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) */;
  %687 = %682.0;
  %688 = %683.1;
  %689 = %686.2;
  (%687, %688, %689, meta[relay.Constant][28] /* ty=Tensor[(2, 8), float32] */)
}

def @func_872(%var_868: Tensor[(7, 2, 6), int16], %var_869: Tensor[(7, 2, 6), int16], %var_870: Tensor[(480), int16], %var_871: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16], Tensor[(7, 2, 6), uint32]) {
  %715 = fn (%var_826: Tensor[(7, 2, 6), int16], %var_827: Tensor[(7, 2, 6), int16], %var_851: Tensor[(480), int16], %var_857: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16], Tensor[(7, 2, 6), uint32]) {
    %690 = cast(%var_827, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
    %691 = shape_of(%var_826, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_826, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %694 = right_shift(%692, %693) /* ty=Tensor[(7, 2, 6), int16] */;
    %695 = cast(%var_826, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
    %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%694, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %699 = bitwise_or(%697, %698) /* ty=Tensor[(7, 2, 6), int8] */;
    %700 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 2, 6), int8] */, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
    %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%699, dtype="int16") /* ty=Tensor[(7, 2, 6), int16] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %704 = cast(%var_851, dtype="int16") /* ty=Tensor[(480), int16] */;
    %705 = cast(%var_851, dtype="int16") /* ty=Tensor[(480), int16] */;
    %706 = reshape(%704, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %707 = reshape(%705, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %708 = cast(%var_857, dtype="uint32") /* ty=Tensor[(7, 2, 6), uint32] */;
    %709 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %710 = cast(%699, dtype="uint32") /* ty=Tensor[(7, 2, 6), uint32] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %712 = maximum(%702, %703) /* ty=Tensor[(7, 2, 6), int16] */;
    %713 = @func_180(%706, %707) /* ty=Tensor[(15, 4, 8), int16] */;
    %714 = left_shift(%710, %711) /* ty=Tensor[(7, 2, 6), uint32] */;
    (%712, %713, %var_851, %714)
  };
  %715(%var_868, %var_869, %var_870, %var_871) /* ty=(Tensor[(7, 2, 6), int16], Tensor[(15, 4, 8), int16], Tensor[(480), int16], Tensor[(7, 2, 6), uint32]) */
}

def @func_6739(%var_6737: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  @func_6736(%var_6737) /* ty=(Tensor[(13, 8, 14), float32],) */
}

def @func_7126() -> (Tensor[(480), int16], Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64]) {
  %716 = @func_4250() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */;
  %717 = @func_5951() /* ty=Tensor[(3, 4, 3), float64] */;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %719 = %716.1;
  %720 = sin(%718) /* ty=Tensor[(3, 4, 3), float64] */;
  %721 = @func_6484() /* ty=Tensor[(3, 4, 3), float64] */;
  (%719, %720, %721)
}

def @func_6674() -> (Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) {
  @func_6672() /* ty=(Tensor[(3, 4, 3), float64], uint32, Tensor[(16), float32], Tensor[(2, 8), float32]) */
}

def @func_5516() -> (Tensor[(3, 4, 3), float64],) {
  %723 = fn () -> (Tensor[(3, 4, 3), float64],) {
    %722 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
    (%722,)
  };
  %723() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_3893(%var_3891: Tensor[(1, 8, 2), float32], %var_3892: Tensor[(15, 8, 2), float32]) -> (Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) {
  %728 = fn (%var_3878: Tensor[(1, 8, 2), float32], %var_3879: Tensor[(15, 8, 2), float32]) -> (Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) {
    %724 = cast(%var_3878, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
    %725 = cast(%var_3879, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %726 = equal(%724, %725) /* ty=Tensor[(15, 8, 2), bool] */;
    %727 = @func_2508() /* ty=Tensor[(210), uint16] */;
    (%726, %727)
  };
  %728(%var_3891, %var_3892) /* ty=(Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) */
}

def @func_4892() -> Tensor[(1, 15, 5), float64] {
  @func_4890() /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_7797() -> (Tensor[(3, 4, 3), float32], Tensor[(36), float64], Tensor[(3, 4, 3), float64]) {
  @func_7795() /* ty=(Tensor[(3, 4, 3), float32], Tensor[(36), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_7674(%var_7671: Tensor[(3, 4, 3), float64], %var_7672: Tensor[(2, 56), float32], %var_7673: Tensor[(1, 1408), uint32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32], Tensor[(2, 56), float32], Tensor[(1, 10, 12), float64], uint32, Tensor[(1, 1408), uint32]) {
  %746 = fn (%var_7628: Tensor[(3, 4, 3), float64], %var_7639: Tensor[(2, 56), float32], %var_7664: Tensor[(1, 1408), uint32]) -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32], Tensor[(2, 56), float32], Tensor[(1, 10, 12), float64], uint32, Tensor[(1, 1408), uint32]) {
    %729 = @func_7386() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %730 = %729.0;
    %731 = cast(%var_7628, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
    %733 = cast(%730, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
    %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %735 = cast(%var_7639, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
    %736 = reshape(%735, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), float32] */;
    %737 = @func_4870(%736) /* ty=(Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) */;
    %738 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %739 = cast(%var_7664, dtype="uint32") /* ty=Tensor[(1, 1408), uint32] */;
    %740 = reshape(%738, newshape=[]) /* ty=uint32 */;
    %741 = reshape(%739, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
    %742 = @func_544(%740, %741) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
    %743 = mod(%733, %734) /* ty=Tensor[(3, 4, 3), float64] */;
    %744 = %737.1;
    %745 = %742.1;
    (%743, %744, %var_7639, %745, meta[relay.Constant][30] /* ty=uint32 */, %var_7664)
  };
  %746(%var_7671, %var_7672, %var_7673) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float32], Tensor[(2, 56), float32], Tensor[(1, 10, 12), float64], uint32, Tensor[(1, 1408), uint32]) */
}

def @func_4385(%var_4381: Tensor[(16), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(15, 8, 2), bool], Tensor[(16), float32], Tensor[(240), float32]) {
  %747 = @func_3414() /* ty=(Tensor[(1, 15, 5), float32], uint32) */;
  %748 = cast(%var_4381, dtype="float32") /* ty=Tensor[(16), float32] */;
  %749 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %750 = reshape(%748, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float32] */;
  %751 = reshape(%749, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float32] */;
  %752 = @func_3890(%750, %751) /* ty=(Tensor[(15, 8, 2), bool], Tensor[(210), uint16]) */;
  %753 = %747.0;
  %754 = %752.0;
  (%753, %754, %var_4381, meta[relay.Constant][31] /* ty=Tensor[(240), float32] */)
}

def @func_1562() -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) {
  %776 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) {
    %755 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), uint16] */, dtype="uint16") /* ty=Tensor[(210), uint16] */;
    %756 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), uint16] */, dtype="uint16") /* ty=Tensor[(210), uint16] */;
    %757 = reshape(%755, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
    %758 = reshape(%756, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
    %759 = @func_1469(%757, %758) /* ty=(Tensor[(?, 15, 14), uint16],) */;
    %760 = @func_893() /* ty=(Tensor[(3, 4, 3), float64],) */;
    %761 = %760.0;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %763 = erf(%762) /* ty=Tensor[(3, 4, 3), float32] */;
    %764 = cast(%763, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %765 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %766 = cast(meta[relay.Constant][34] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
    %767 = reshape(%765, newshape=[]) /* ty=uint32 */;
    %768 = reshape(%766, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), uint32] */;
    %769 = @func_544(%767, %768) /* ty=(Tensor[(16, 11, 8), uint32], Tensor[(1, 10, 12), float64], Tensor[(120), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
    %770 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %771 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %772 = %759.0;
    %773 = cos(%764) /* ty=Tensor[(3, 4, 3), float32] */;
    %774 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %775 = %769.4;
    (%770, %771, %772, meta[relay.Constant][32] /* ty=Tensor[(210), uint16] */, %773, %774, %775, meta[relay.Constant][33] /* ty=uint32 */, meta[relay.Constant][34] /* ty=Tensor[(1408), uint32] */)
  };
  %776() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */
}

def @func_7001(%var_6996: Tensor[(3, 5, 2), float64], %var_6997: Tensor[(3, 5, 2), float64], %var_6998: Tensor[(6), float64], %var_6999: Tensor[(567), float32], %var_7000: Tensor[(10, 15, 14), bool]) -> (Tensor[(7, 9, 9), float32], Tensor[(6), float64], Tensor[(567), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 5, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(10, 15, 14), uint8]) {
  %809 = fn (%var_6917: Tensor[(3, 5, 2), float64], %var_6918: Tensor[(3, 5, 2), float64], %var_6923: Tensor[(6), float64], %var_6924: Tensor[(567), float32], %var_6987: Tensor[(10, 15, 14), bool]) -> (Tensor[(7, 9, 9), float32], Tensor[(6), float64], Tensor[(567), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 5, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(10, 15, 14), uint8]) {
    %777 = cast(%var_6923, dtype="float64") /* ty=Tensor[(6), float64] */;
    %778 = cast(%var_6924, dtype="float32") /* ty=Tensor[(567), float32] */;
    %779 = reshape(%777, newshape=[3, 1, 2]) /* ty=Tensor[(3, 1, 2), float64] */;
    %780 = reshape(%778, newshape=[567]) /* ty=Tensor[(567), float32] */;
    %781 = @func_5301(%779, %780) /* ty=(Tensor[(3, 1, 2), float64], Tensor[(36), float64], Tensor[(7, 9, 9), float32], Tensor[(567), float32]) */;
    %782 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
    %783 = cast(%var_6918, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
    %784 = cast(%var_6918, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
    %785 = shape_of(%var_6917, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(%var_6917, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %788 = multiply(%786, %787) /* ty=Tensor[(3, 5, 2), float64] */;
    %789 = cast(%788, dtype="float64") /* ty=Tensor[(3, 5, 2), float64] */;
    %790 = sinh(%789) /* ty=Tensor[(3, 5, 2), float64] */;
    %791 = cast(%788, dtype="int16") /* ty=Tensor[(3, 5, 2), int16] */;
    %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%790, dtype="int16") /* ty=Tensor[(3, 5, 2), int16] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %795 = bitwise_xor(%793, %794) /* ty=Tensor[(3, 5, 2), int16] */;
    %796 = cast(%790, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
    %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %798 = cast(%795, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %800 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
    %801 = %800.1;
    %802 = cast(%801, dtype="uint8") /* ty=Tensor[(?, 15, 14), uint8] */;
    %803 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(10, 15, 14), uint8] */;
    %804 = %781.2;
    %805 = %782.0;
    %806 = asinh(%783) /* ty=Tensor[(3, 5, 2), float64] */;
    %807 = logical_or(%798, %799) /* ty=Tensor[(3, 5, 2), bool] */;
    %808 = left_shift(%802, %803) /* ty=Tensor[(10, 15, 14), uint8] */;
    (%804, %var_6923, %var_6924, %805, %806, %807, %808)
  };
  %809(%var_6996, %var_6997, %var_6998, %var_6999, %var_7000) /* ty=(Tensor[(7, 9, 9), float32], Tensor[(6), float64], Tensor[(567), float32], Tensor[(3, 4, 3), float64], Tensor[(3, 5, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(10, 15, 14), uint8]) */
}

def @func_4114() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), float32]) {
  %810 = @func_2259() /* ty=(Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) */;
  %811 = @func_1561() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), uint16], Tensor[(210), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), float64], Tensor[(480), int16], uint32, Tensor[(1408), uint32]) */;
  %812 = %810.0;
  %813 = %811.4;
  (%812, %813)
}

def @func_2173() -> (Tensor[(1, 15, 5), float32],) {
  @func_2171() /* ty=(Tensor[(1, 15, 5), float32],) */
}

def @func_1256(%var_1254: Tensor[(3, 4, 3), float64], %var_1255: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
  %835 = fn (%var_1206: Tensor[(3, 4, 3), float64], %var_1249: Tensor[(480), int16]) -> (Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) {
    %814 = @func_886() /* ty=Tensor[(3, 4, 3), float64] */;
    %815 = cast(%var_1206, dtype="uint16") /* ty=Tensor[(3, 4, 3), uint16] */;
    %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %817 = cast(%814, dtype="uint16") /* ty=Tensor[(3, 4, 3), uint16] */;
    %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %819 = cast(%814, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %820 = cast(%814, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %821 = cosh(%820) /* ty=Tensor[(3, 4, 3), float32] */;
    %822 = cast(%814, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
    %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %824 = cast(%821, dtype="bool") /* ty=Tensor[(3, 4, 3), bool] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %826 = cast(%var_1249, dtype="int16") /* ty=Tensor[(480), int16] */;
    %827 = cast(%var_1249, dtype="int16") /* ty=Tensor[(480), int16] */;
    %828 = reshape(%826, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %829 = reshape(%827, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), int16] */;
    %830 = subtract(%817, %818) /* ty=Tensor[(3, 4, 3), uint16] */;
    %831 = log10(%819) /* ty=Tensor[(3, 4, 3), float32] */;
    %832 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
    %833 = less(%824, %825) /* ty=Tensor[(3, 4, 3), bool] */;
    %834 = @func_180(%828, %829) /* ty=Tensor[(15, 4, 8), int16] */;
    (%830, %831, %832, %833, %834, %var_1249)
  };
  %835(%var_1254, %var_1255) /* ty=(Tensor[(3, 4, 3), uint16], Tensor[(3, 4, 3), float32], Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */
}

def @func_5953() -> Tensor[(3, 4, 3), float64] {
  @func_5951() /* ty=Tensor[(3, 4, 3), float64] */
}

def @func_7463(%var_7442: Tensor[(1, 420), uint32]) -> (Tensor[(3, 4, 3), float32], Tensor[(5, 6, 14), uint32], Tensor[(1, 420), uint32]) {
  %836 = @func_2622() /* ty=(Tensor[(3, 4, 3), float32],) */;
  %837 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(1, 420), uint32] */;
  %838 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(1, 420), uint32] */;
  %839 = reshape(%837, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), uint32] */;
  %840 = reshape(%838, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), uint32] */;
  %841 = %836.0;
  %842 = @func_5217(%839, %840) /* ty=Tensor[(5, 6, 14), uint32] */;
  (%841, %842, %var_7442)
}

def @func_4252() -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
  @func_4250() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */
}

def @func_1469(%var_1443: Tensor[(1, 15, 14), uint16], %var_1444: Tensor[(1, 15, 14), uint16]) -> (Tensor[(?, 15, 14), uint16],) {
  %843 = cast(%var_1444, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %844 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_1443, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %847 = left_shift(%845, %846) /* ty=Tensor[(?, 15, 14), uint16] */;
  %848 = cast(%847, dtype="uint16") /* ty=Tensor[(?, 15, 14), uint16] */;
  %849 = shape_of(%var_1444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%var_1444, dtype="uint16") /* ty=Tensor[(1, 15, 14), uint16] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %852 = subtract(%850, %851) /* ty=Tensor[(?, 15, 14), uint16] */;
  (%852,)
}

def @func_6563() -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
  %856 = fn () -> (Tensor[(3, 4, 3), float64], Tensor[(480), int16]) {
    %853 = @func_4250() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */;
    %854 = @func_1140() /* ty=Tensor[(3, 4, 3), float64] */;
    %855 = %853.1;
    (%854, %855)
  };
  %856() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(480), int16]) */
}

def @func_4137(%var_4135: Tensor[(2, 10, 7), int16]) -> Tensor[(2, 10, 7), int16] {
  @func_4134(%var_4135) /* ty=Tensor[(2, 10, 7), int16] */
}

def @func_7859(%var_7857: Tensor[(3, 4, 3), float64]) -> (Tensor[(3, 4, 3), float64], Tensor[(10, 6, 9), uint16]) {
  @func_7856(%var_7857) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(10, 6, 9), uint16]) */
}

def @func_2711(%var_2709: Tensor[(3, 4, 3), float64]) -> Tensor[(3, 4, 3), int64] {
  @func_2708(%var_2709) /* ty=Tensor[(3, 4, 3), int64] */
}

def @func_5221(%var_5219: Tensor[(5, 6, 14), uint32], %var_5220: Tensor[(5, 6, 14), uint32]) -> Tensor[(5, 6, 14), uint32] {
  @func_5217(%var_5219, %var_5220) /* ty=Tensor[(5, 6, 14), uint32] */
}

def @func_1779() -> Tensor[(3, 4, 3), int16] {
  @func_1095() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_6287() -> Tensor[(3, 4, 3), float64] {
  %857 = @func_3267() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %857.0
}

def @func_5217(%var_5206: Tensor[(5, 6, 14), uint32], %var_5207: Tensor[(5, 6, 14), uint32]) -> Tensor[(5, 6, 14), uint32] {
  %858 = cast(%var_5207, dtype="uint32") /* ty=Tensor[(5, 6, 14), uint32] */;
  %859 = shape_of(%var_5206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%var_5206, dtype="uint32") /* ty=Tensor[(5, 6, 14), uint32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%860, %861) /* ty=Tensor[(5, 6, 14), uint32] */
}

def @func_3268() -> (Tensor[(3, 4, 3), float64],) {
  %863 = fn () -> (Tensor[(3, 4, 3), float64],) {
    %862 = @func_946() /* ty=Tensor[(3, 4, 3), float64] */;
    (%862,)
  };
  %863() /* ty=(Tensor[(3, 4, 3), float64],) */
}

def @func_183(%var_181: Tensor[(15, 4, 8), int16], %var_182: Tensor[(15, 4, 8), int16]) -> Tensor[(15, 4, 8), int16] {
  %868 = fn (%var_148: Tensor[(15, 4, 8), int16], %var_149: Tensor[(15, 4, 8), int16]) -> Tensor[(15, 4, 8), int16] {
    %864 = cast(%var_149, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
    %865 = shape_of(%var_148, dtype="int32") /* ty=Tensor[(3), int32] */;
    %866 = cast(%var_148, dtype="int16") /* ty=Tensor[(15, 4, 8), int16] */;
    %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%866, %867) /* ty=Tensor[(15, 4, 8), int16] */
  };
  %868(%var_181, %var_182) /* ty=Tensor[(15, 4, 8), int16] */
}

def @func_346(%var_344: Tensor[(7, 6, 4), float32], %var_345: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32],) {
  %874 = fn (%var_322: Tensor[(7, 6, 4), float32], %var_323: Tensor[(7, 6, 4), float32]) -> (Tensor[(7, 6, 4), float32],) {
    %869 = cast(%var_323, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
    %870 = shape_of(%var_322, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%var_322, dtype="float32") /* ty=Tensor[(7, 6, 4), float32] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %873 = maximum(%871, %872) /* ty=Tensor[(7, 6, 4), float32] */;
    (%873,)
  };
  %874(%var_344, %var_345) /* ty=(Tensor[(7, 6, 4), float32],) */
}

def @func_3950(%var_3948: Tensor[(8, 60), int16], %var_3949: Tensor[(8, 60), int16]) -> (Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(8, 60), bool], Tensor[(3, 4, 3), float32]) {
  %886 = fn (%var_3938: Tensor[(8, 60), int16], %var_3940: Tensor[(8, 60), int16]) -> (Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(8, 60), bool], Tensor[(3, 4, 3), float32]) {
    %875 = cast(%var_3938, dtype="int16") /* ty=Tensor[(8, 60), int16] */;
    %876 = reshape(%875, newshape=[480]) /* ty=Tensor[(480), int16] */;
    %877 = @func_1618(%876) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(15, 4, 8), int16], Tensor[(480), int16]) */;
    %878 = cast(%var_3940, dtype="bool") /* ty=Tensor[(8, 60), bool] */;
    %879 = shape_of(%var_3938, dtype="int32") /* ty=Tensor[(2), int32] */;
    %880 = cast(%var_3938, dtype="bool") /* ty=Tensor[(8, 60), bool] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %882 = @func_2187() /* ty=Tensor[(3, 4, 3), float32] */;
    %883 = %877.2;
    %884 = logical_and(%880, %881) /* ty=Tensor[(8, 60), bool] */;
    %885 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
    (%882, %883, %884, %885)
  };
  %886(%var_3948, %var_3949) /* ty=(Tensor[(3, 4, 3), float32], Tensor[(480), int16], Tensor[(8, 60), bool], Tensor[(3, 4, 3), float32]) */
}

def @func_1951() -> Tensor[(1, 15, 5), float32] {
  %888 = fn () -> Tensor[(1, 15, 5), float32] {
    %887 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
    asin(%887) /* ty=Tensor[(1, 15, 5), float32] */
  };
  %888() /* ty=Tensor[(1, 15, 5), float32] */
}

def @func_1781() -> Tensor[(3, 4, 3), int16] {
  @func_1779() /* ty=Tensor[(3, 4, 3), int16] */
}

def @func_5951() -> Tensor[(3, 4, 3), float64] {
  %889 = @func_5515() /* ty=(Tensor[(3, 4, 3), float64],) */;
  %889.0
}

def @func_2623() -> (Tensor[(3, 4, 3), float32],) {
  %891 = fn () -> (Tensor[(3, 4, 3), float32],) {
    %890 = @func_1727() /* ty=Tensor[(3, 4, 3), float32] */;
    (%890,)
  };
  %891() /* ty=(Tensor[(3, 4, 3), float32],) */
}

def @func_4808(%var_4806: Tensor[(7, 14, 11), float64]) -> (Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) {
  @func_4805(%var_4806) /* ty=(Tensor[(7, 14, 11), float64], Tensor[(3, 4, 3), float64]) */
}

def @func_7743(%var_7742: Tensor[(150), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(2, 15, 5), uint32], Tensor[(150), float32]) {
  %897 = fn (%var_7739: Tensor[(150), float32]) -> (Tensor[(3, 4, 3), float64], Tensor[(2, 15, 5), uint32], Tensor[(150), float32]) {
    %892 = @func_1898() /* ty=(Tensor[(?, 15, 14), uint16], Tensor[(3, 4, 3), float64]) */;
    %893 = cast(%var_7739, dtype="float32") /* ty=Tensor[(150), float32] */;
    %894 = reshape(%893, newshape=[2, 15, 5]) /* ty=Tensor[(2, 15, 5), float32] */;
    %895 = %892.1;
    %896 = @func_7148(%894) /* ty=Tensor[(2, 15, 5), uint32] */;
    (%895, %896, %var_7739)
  };
  %897(%var_7742) /* ty=(Tensor[(3, 4, 3), float64], Tensor[(2, 15, 5), uint32], Tensor[(150), float32]) */
}

def @func_4870(%var_4810: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), float64], Tensor[(3, 4, 3), float32], Tensor[(7, 8, 2), bool], Tensor[(?, 15, 14), bool]) {
  %898 = cast(%var_4810, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
  %899 = rsqrt(%898) /* ty=Tensor[(7, 8, 2), float32] */;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %901 = acos(%900) /* ty=Tensor[(7, 8, 2), float64] */;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %903 = cast(%899, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %904 = shape_of(%var_4810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_4810, dtype="float64") /* ty=Tensor[(7, 8, 2), float64] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %907 = mod(%905, %906) /* ty=Tensor[(7, 8, 2), float64] */;
  %908 = cast(%907, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %909 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%901, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %912 = @func_3733() /* ty=(Tensor[(3, 4, 3), float64], Tensor[(?, 15, 14), bool], Tensor[(4, 120), int16], Tensor[(3, 4, 3), int64]) */;
  %913 = atanh(%902) /* ty=Tensor[(7, 8, 2), float64] */;
  %914 = @func_2654() /* ty=Tensor[(3, 4, 3), float32] */;
  %915 = greater(%910, %911) /* ty=Tensor[(7, 8, 2), bool] */;
  %916 = %912.1;
  (%913, %914, %915, %916)
}

def @func_6364() -> Tensor[(1, 15, 5), float32] {
  %917 = @func_3507() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %917.0
}

def @func_2259() -> (Tensor[(3, 4, 3), int16], Tensor[(3, 4, 3), bool]) {
  %918 = @func_1095() /* ty=Tensor[(3, 4, 3), int16] */;
  %919 = cast(%918, dtype="float64") /* ty=Tensor[(3, 4, 3), float64] */;
  %920 = reshape(%919, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float64] */;
  %921 = @func_1383(%920) /* ty=(Tensor[(3, 4, 3), bool],) */;
  %922 = %921.0;
  (%918, %922)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_7929(%var_7923: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %0 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1 = cast(%var_7923, dtype="float64") /* ty=Tensor[(240), float64] */;
  %2 = reshape(%1, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %3 = @func_2149(%2) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */;
  %4 = %0.3;
  %5 = %3.2;
  (%4, %5, %var_7923)
}

def @func_6713() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %6 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %7 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  (%6, %7)
}

def @func_8573() -> (Tensor[(14, 8, 4), bool],) {
  %8 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %9 = %8.0;
  (%9,)
}

def @func_2534(%var_2531: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  %10 = cast(%var_2531, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  atan(%10) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_3474(%var_3449: Tensor[(84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) {
  %11 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %12 = cast(%var_3449, dtype="float32") /* ty=Tensor[(84), float32] */;
  %13 = cast(%var_3449, dtype="float32") /* ty=Tensor[(84), float32] */;
  %14 = reshape(%12, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %15 = reshape(%13, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %16 = @func_1975(%14, %15) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %17 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %18 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %19 = %11.0;
  %20 = %16.3;
  %21 = %17.2;
  %22 = %18.2;
  (%19, %20, %var_3449, %21, %22)
}

def @func_3956() -> Tensor[(14, 8, 4), float32] {
  %23 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
  sin(%25) /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_7951(%var_7938: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64], Tensor[(14, 8, 4), bool]) {
  %26 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %27 = cast(%var_7938, dtype="float64") /* ty=Tensor[(130), float64] */;
  %28 = reshape(%27, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %29 = @func_6497(%28) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %30 = %26.0;
  %31 = %29.1;
  %32 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  (%30, %31, %var_7938, %32)
}

def @func_8492(%var_8467: Tensor[(12, 9, 4), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) {
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %34 = reshape(%33, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %35 = @func_569(%34) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %36 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %38 = reshape(%37, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %39 = @func_3997(%38) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %40 = cast(%var_8467, dtype="float64") /* ty=Tensor[(12, 9, 4), float64] */;
  %41 = atan(%40) /* ty=Tensor[(12, 9, 4), float64] */;
  %42 = cast(%var_8467, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %46 = %35.0;
  %47 = %36.0;
  %48 = %39.3;
  %49 = greater(%44, %45) /* ty=Tensor[(12, 9, 4), bool] */;
  (%46, meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, %47, %48, meta[relay.Constant][1] /* ty=Tensor[(880), float32] */, %49)
}

def @func_1800() -> (Tensor[(14, 8, 4), bool],) {
  %50 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %51 = %50.1;
  (%51,)
}

def @func_3736() -> Tensor[(14, 8, 4), bool] {
  %52 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %52.0
}

def @func_8902() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %53 = @func_7450() /* ty=Tensor[(14, 8, 4), bool] */;
  %54 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  (%53, %54)
}

def @func_1975(%var_1876: Tensor[(14, 2, 3), float32], %var_1877: Tensor[(14, 2, 3), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
  %55 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %58 = reshape(%57, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %59 = @func_569(%58) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %60 = cast(%var_1877, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %61 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_1876, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = less_equal(%62, %63) /* ty=Tensor[(14, 2, 3), bool] */;
  %65 = cast(%64, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %66 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_1876, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %69 = minimum(%67, %68) /* ty=Tensor[(14, 2, 3), uint8] */;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %71 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%64, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %74 = subtract(%72, %73) /* ty=Tensor[(14, 2, 3), float64] */;
  %75 = cast(%74, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %76 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%64, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %79 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %80 = cast(%74, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %81 = sin(%80) /* ty=Tensor[(14, 2, 3), float64] */;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %83 = cast(%81, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %84 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %85 = %59.1;
  %86 = not_equal(%77, %78) /* ty=Tensor[(14, 2, 3), bool] */;
  %87 = %79.0;
  %88 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %89 = rsqrt(%82) /* ty=Tensor[(14, 2, 3), float64] */;
  %90 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %91 = cosh(%83) /* ty=Tensor[(14, 2, 3), float64] */;
  %92 = %84.1;
  %93 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  (%56, %85, %86, %87, %88, %89, %90, %91, %92, %93)
}

def @func_8014() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) {
  %94 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %95 = @func_7571() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) */;
  %96 = cast(meta[relay.Constant][2] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %97 = reshape(%96, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %98 = @func_3474(%97) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
  %99 = %94.1;
  %100 = %95.1;
  %101 = %98.2;
  (%99, %100, %101, meta[relay.Constant][2] /* ty=Tensor[(84), float32] */)
}

def @func_11247(%var_11231: Tensor[(5, 4, 16), int16], %var_11232: Tensor[(5, 4, 16), int16]) -> (Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), float64]) {
  %102 = cast(%var_11232, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %103 = shape_of(%var_11231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_11231, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %106 = cast(%var_11231, dtype="float64") /* ty=Tensor[(5, 4, 16), float64] */;
  %107 = greater(%104, %105) /* ty=Tensor[(5, 4, 16), bool] */;
  %108 = sigmoid(%106) /* ty=Tensor[(5, 4, 16), float64] */;
  (%107, %108)
}

def @func_6076() -> (Tensor[(14, 8, 4), bool],) {
  %109 = @func_3055() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %110 = %109.0;
  (%110,)
}

def @func_8364() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
  %111 = @func_6091() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %112 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %113 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
  %114 = %111.0;
  %115 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  %116 = %112.0;
  (%113, %114, %115, %116)
}

def @func_10366() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(10, 13, 1), float64], Tensor[(130), float64]) {
  %117 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %118 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %119 = cast(meta[relay.Constant][3] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %120 = reshape(%119, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %121 = @func_3648(%120) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) */;
  %122 = %117.0;
  %123 = %118.4;
  %124 = %121.0;
  (%122, %123, %124, meta[relay.Constant][3] /* ty=Tensor[(130), float64] */)
}

def @func_1699() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %125 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %127 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %128 = reshape(%126, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %129 = reshape(%127, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %130 = @func_873(%128, %129) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %131 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %132 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %134 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %135 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %136 = %134.0;
  %137 = cast(%136, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %138 = reshape(%137, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %139 = %125.0;
  %140 = %130.3;
  %141 = %131.0;
  %142 = log(%133) /* ty=Tensor[(14, 8, 4), float64] */;
  %143 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %144 = %135.0;
  %145 = @func_481(%138) /* ty=Tensor[(14, 8, 4), bool] */;
  (%139, %140, meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, %141, %142, %143, %136, %144, %145)
}

def @func_6513() -> (Tensor[(14, 8, 4), bool],) {
  %146 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
  (%146,)
}

def @func_1072() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %147 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %148 = %147.1;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
  %150 = acos(%149) /* ty=Tensor[(14, 8, 4), float32] */;
  %151 = cast(%150, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %152 = reshape(%151, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %153 = @func_481(%152) /* ty=Tensor[(14, 8, 4), bool] */;
  %154 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %155 = %154.1;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %157 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%153, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %160 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %161 = %160.1;
  %162 = cast(%161, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %163 = reshape(%162, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %165 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%150, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %168 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %169 = floor_divide(%158, %159) /* ty=Tensor[(14, 8, 4), float64] */;
  %170 = @func_481(%163) /* ty=Tensor[(14, 8, 4), bool] */;
  %171 = greater_equal(%166, %167) /* ty=Tensor[(14, 8, 4), bool] */;
  %172 = %168.0;
  (%169, %170, %171, %172)
}

def @func_9481() -> (Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) {
  %173 = cast(meta[relay.Constant][5] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %174 = reshape(%173, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %175 = @func_6497(%174) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %176 = @func_7088() /* ty=Tensor[(8, 110), float64] */;
  %177 = %175.0;
  (%176, %177, meta[relay.Constant][5] /* ty=Tensor[(130), float64] */)
}

def @func_7506() -> (Tensor[(2, 13, 1), uint32],) {
  %178 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
  %179 = %178.1;
  (%179,)
}

def @func_2832() -> (Tensor[(14, 8, 4), float64],) {
  %180 = @func_1853() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %181 = %180.0;
  (%181,)
}

def @func_6542(%var_6537: Tensor[(7, 14, 1), uint8], %var_6538: Tensor[(7, 14, 1), uint8]) -> Tensor[(7, 14, ?), uint8] {
  %182 = cast(%var_6538, dtype="uint8") /* ty=Tensor[(7, 14, 1), uint8] */;
  %183 = shape_of(%var_6537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_6537, dtype="uint8") /* ty=Tensor[(7, 14, 1), uint8] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%184, %185) /* ty=Tensor[(7, 14, ?), uint8] */
}

def @func_2856(%var_2850: Tensor[(7, 42), float32]) -> (Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) {
  %186 = cast(%var_2850, dtype="float32") /* ty=Tensor[(7, 42), float32] */;
  %187 = reshape(%186, newshape=[7, 7, 6]) /* ty=Tensor[(7, 7, 6), float32] */;
  %188 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  %189 = @func_2534(%187) /* ty=Tensor[(7, 7, 6), float32] */;
  (%188, %189, %var_2850)
}

def @func_4645() -> (Tensor[(14, 8, 4), float32],) {
  %190 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  (%190,)
}

def @func_6588() -> (Tensor[(14, 8, 4), bool],) {
  %191 = @func_5971() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) */;
  %192 = %191.0;
  (%192,)
}

def @func_9043() -> (Tensor[(14, 8, 4), float64], Tensor[(7, 14, ?), uint8], Tensor[(1, 98), uint8]) {
  %193 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %194 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 98), uint8] */, dtype="uint8") /* ty=Tensor[(1, 98), uint8] */;
  %195 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 98), uint8] */, dtype="uint8") /* ty=Tensor[(1, 98), uint8] */;
  %196 = reshape(%194, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), uint8] */;
  %197 = reshape(%195, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), uint8] */;
  %198 = %193.0;
  %199 = @func_6542(%196, %197) /* ty=Tensor[(7, 14, ?), uint8] */;
  (%198, %199, meta[relay.Constant][6] /* ty=Tensor[(1, 98), uint8] */)
}

def @func_5668() -> (Tensor[(13, 14, 5), float32],) {
  %200 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
  (%200,)
}

def @func_235() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %201 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %202 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %203 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %204 = %201.0;
  %205 = %202.0;
  %206 = %203.0;
  (%204, %205, %206)
}

def @func_7540() -> Tensor[(2, 13, 1), uint32] {
  %207 = @func_7506() /* ty=(Tensor[(2, 13, 1), uint32],) */;
  %207.0
}

def @func_7651() -> (Tensor[(14, 8, 4), float64],) {
  %208 = @func_3703() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %209 = %208.1;
  (%209,)
}

def @func_3309() -> (Tensor[(14, 8, 4), float64],) {
  %210 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %213 = atanh(%212) /* ty=Tensor[(14, 8, 4), float64] */;
  (%213,)
}

def @func_10847(%var_10814: Tensor[(1, 75), int8], %var_10815: Tensor[(975), int8]) -> (Tensor[(1, 75), int8], Tensor[(975), int8], Tensor[(2, 13, 105), int32], Tensor[(2, 13, 105), bool], Tensor[(130), float64]) {
  %214 = cast(%var_10814, dtype="int8") /* ty=Tensor[(1, 75), int8] */;
  %215 = cast(%var_10815, dtype="int8") /* ty=Tensor[(975), int8] */;
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %217 = reshape(%214, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), int8] */;
  %218 = reshape(%215, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), int8] */;
  %219 = reshape(%216, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %220 = @func_5899(%217, %218, %219) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) */;
  %221 = %220.1;
  %222 = @func_9936() /* ty=(Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) */;
  %223 = %222.0;
  %224 = cast(%221, dtype="int32") /* ty=Tensor[(105), int32] */;
  %225 = cast(%223, dtype="int32") /* ty=Tensor[(2, 13, 1), int32] */;
  %226 = cast(meta[relay.Constant][7] /* ty=Tensor[(105), float64] */, dtype="bool") /* ty=Tensor[(105), bool] */;
  %227 = cast(%223, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
  %228 = @func_9481() /* ty=(Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) */;
  %229 = right_shift(%224, %225) /* ty=Tensor[(2, 13, 105), int32] */;
  %230 = logical_and(%226, %227) /* ty=Tensor[(2, 13, 105), bool] */;
  %231 = %228.2;
  (%var_10814, %var_10815, %229, %230, %231)
}

def @func_9691(%var_9688: Tensor[(8, 8, 14), float32]) -> (Tensor[(8, 8, 14), float32],) {
  %232 = cast(%var_9688, dtype="float32") /* ty=Tensor[(8, 8, 14), float32] */;
  %233 = sinh(%232) /* ty=Tensor[(8, 8, 14), float32] */;
  (%233,)
}

def @func_4055() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %234 = @func_3915() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) */;
  %235 = %234.2;
  %236 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  (%235, %236)
}

def @func_8203(%var_8201: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(240), float64], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
  %237 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  %238 = cast(%237, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %239 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %240 = reshape(%238, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %241 = reshape(%239, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %242 = @func_1217(%240, %241) /* ty=(Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) */;
  %243 = cast(%var_8201, dtype="float32") /* ty=Tensor[(880), float32] */;
  %244 = cast(%var_8201, dtype="float32") /* ty=Tensor[(880), float32] */;
  %245 = reshape(%243, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %246 = reshape(%244, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %247 = @func_435(%245, %246) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %248 = %242.1;
  %249 = %247.1;
  (%237, %248, meta[relay.Constant][8] /* ty=Tensor[(240), float64] */, %249, %var_8201)
}

def @func_3403() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %250 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %251 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %252 = %250.1;
  %253 = %251.0;
  (%252, %253)
}

def @func_2816(%var_2727: Tensor[(8, 3, 14), float64], %var_2728: Tensor[(8, 3, 14), float64], %var_2804: Tensor[(880), float32]) -> (Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
  %254 = cast(%var_2728, dtype="bool") /* ty=Tensor[(8, 3, 14), bool] */;
  %255 = shape_of(%var_2727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_2727, dtype="bool") /* ty=Tensor[(8, 3, 14), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = @func_1853() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %259 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
  %260 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %261 = %259.0;
  %262 = cast(%261, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %263 = cast(%var_2804, dtype="float32") /* ty=Tensor[(880), float32] */;
  %264 = reshape(%262, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
  %265 = reshape(%263, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %266 = @func_2323(%264, %265) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
  %267 = not_equal(%256, %257) /* ty=Tensor[(8, 3, 14), bool] */;
  %268 = %258.0;
  %269 = %260.0;
  %270 = %266.1;
  (%267, %268, %261, %269, %270, %var_2804)
}

def @func_2968() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %271 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %272 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %273 = %271.1;
  %274 = %272.2;
  (%273, %274)
}

def @func_4886() -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  %275 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %276 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %277 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %278 = reshape(%276, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %279 = reshape(%277, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %280 = @func_873(%278, %279) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %281 = @func_4667() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %282 = %275.0;
  %283 = %280.4;
  %284 = %281.0;
  (%282, %283, meta[relay.Constant][9] /* ty=Tensor[(240), float64] */, %284)
}

def @func_3862() -> (Tensor[(14, 8, 4), bool],) {
  %285 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %286 = %285.0;
  (%286,)
}

def @func_4089(%var_4057: float64, %var_4058: Tensor[(10, 1, 5), float64], %var_4069: Tensor[(880, 1), float32]) -> (Tensor[(10, 1, 5), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(8, 42), float64], Tensor[(880, 1), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint16], Tensor[(10, 1, 5), float64]) {
  %287 = cast(%var_4057, dtype="float64") /* ty=float64 */;
  %288 = cast(%var_4058, dtype="float64") /* ty=Tensor[(10, 1, 5), float64] */;
  %289 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %290 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %291 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %292 = cast(%var_4069, dtype="float32") /* ty=Tensor[(880, 1), float32] */;
  %293 = reshape(%290, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %294 = reshape(%291, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %295 = reshape(%292, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %296 = @func_2816(%293, %294, %295) /* ty=(Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */;
  %297 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %298 = @func_3915() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) */;
  %299 = cast(%var_4058, dtype="float64") /* ty=Tensor[(10, 1, 5), float64] */;
  %300 = floor_mod(%287, %288) /* ty=Tensor[(10, 1, 5), float64] */;
  %301 = %289.0;
  %302 = %296.1;
  %303 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  %304 = %297.2;
  %305 = %298.1;
  %306 = atanh(%299) /* ty=Tensor[(10, 1, 5), float64] */;
  (%300, %301, %302, meta[relay.Constant][10] /* ty=Tensor[(8, 42), float64] */, %var_4069, %303, %304, %305, %306)
}

def @func_8914() -> Tensor[(11, 16, 10), float64] {
  %307 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  log2(%307) /* ty=Tensor[(11, 16, 10), float64] */
}

def @func_10565() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
  %308 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %309 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %310 = %308.0;
  %311 = %309.1;
  (%310, %311)
}

def @func_2227() -> Tensor[(14, 8, 4), bool] {
  %312 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %312.0
}

def @func_9309() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) {
  %313 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %314 = @func_4781() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %315 = %313.0;
  %316 = %314.0;
  (%315, %316)
}

def @func_9936() -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) {
  %317 = @func_7506() /* ty=(Tensor[(2, 13, 1), uint32],) */;
  %318 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %319 = %317.0;
  %320 = %318.0;
  (%319, %320)
}

def @func_1116() -> Tensor[(14, 8, 4), uint32] {
  %321 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %321.2
}

def @func_3832(%var_3824: Tensor[(105), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64]) {
  %322 = cast(%var_3824, dtype="float64") /* ty=Tensor[(105), float64] */;
  %323 = reshape(%322, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %324 = @func_2938(%323) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
  %325 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  %326 = %324.0;
  (%325, %326, %var_3824)
}

def @func_8027() -> Tensor[(14, 8, 4), bool] {
  %327 = @func_6194() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) */;
  %327.1
}

def @func_2623() -> (Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) {
  %328 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %329 = cast(meta[relay.Constant][12] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %330 = reshape(%329, newshape=[]) /* ty=int8 */;
  %331 = @func_2025(%330) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
  %332 = %331.0;
  %333 = cast(meta[relay.Constant][12] /* ty=int8 */, dtype="uint32") /* ty=uint32 */;
  %334 = cast(%332, dtype="uint32") /* ty=Tensor[(2, 13, 1), uint32] */;
  %335 = %328.1;
  %336 = left_shift(%333, %334) /* ty=Tensor[(2, 13, 1), uint32] */;
  (%335, %336)
}

def @func_3091(%var_3074: int8) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) {
  %337 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %338 = cast(%var_3074, dtype="int8") /* ty=int8 */;
  %339 = reshape(%338, newshape=[]) /* ty=int8 */;
  %340 = @func_2025(%339) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
  %341 = %337.4;
  %342 = %340.1;
  %343 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  (%341, %342, %var_3074, %343)
}

def @func_5047(%var_5036: Tensor[(240), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  %344 = cast(%var_5036, dtype="float64") /* ty=Tensor[(240), float64] */;
  %345 = reshape(%344, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %346 = @func_2149(%345) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */;
  %347 = @func_4667() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %348 = %347.0;
  %349 = cast(%348, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %350 = %346.3;
  %351 = sqrt(%349) /* ty=Tensor[(14, 8, 4), float64] */;
  (%350, %var_5036, %351)
}

def @func_1240() -> Tensor[(14, 8, 4), float32] {
  %352 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %353 = %352.3;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
  exp(%354) /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_8185() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(2, 13, 1), uint32]) {
  %355 = @func_6588() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %356 = %355.0;
  %357 = @func_7363() /* ty=Tensor[(14, 8, 4), float32] */;
  %358 = @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */;
  (%356, %357, %358)
}

def @func_5436() -> Tensor[(14, 8, 4), uint32] {
  %359 = @func_4501() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) */;
  %359.0
}

def @func_3997(%var_3975: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %360 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %361 = %360.1;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %363 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %366 = cast(%var_3975, dtype="float32") /* ty=Tensor[(880), float32] */;
  %367 = reshape(%365, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
  %368 = reshape(%366, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %369 = @func_2323(%367, %368) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
  %370 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %371 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %372 = asinh(%362) /* ty=Tensor[(14, 8, 4), float64] */;
  %373 = %369.4;
  %374 = %370.1;
  %375 = %371.2;
  (%372, %364, %373, %var_3975, %374, %375)
}

def @func_3055() -> (Tensor[(14, 8, 4), bool],) {
  %376 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %377 = %376.1;
  (%377,)
}

def @func_2938(%var_2913: Tensor[(105), float64]) -> (Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) {
  %378 = cast(%var_2913, dtype="float64") /* ty=Tensor[(105), float64] */;
  %379 = reshape(%378, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %380 = @func_2418(%379) /* ty=(Tensor[(5, 7, 3), float64],) */;
  %381 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %382 = %381.1;
  %383 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %384 = %383.1;
  %385 = cast(%384, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %386 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%382, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %389 = %380.0;
  %390 = maximum(%387, %388) /* ty=Tensor[(14, 8, 4), float64] */;
  (%389, %var_2913, %390)
}

def @func_6762(%var_6739: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], int8) {
  %391 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %392 = cast(%var_6739, dtype="int8") /* ty=int8 */;
  %393 = reshape(%392, newshape=[]) /* ty=int8 */;
  %394 = @func_3091(%393) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) */;
  %395 = %391.3;
  %396 = %394.3;
  (%395, %396, %var_6739)
}

def @func_4378() -> Tensor[(8, 110), float64] {
  %397 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %397.4
}

def @func_5204() -> Tensor[(14, 8, 4), float64] {
  %398 = @func_4604() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %398.0
}

def @func_2362() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %399 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %400 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %401 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %402 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %403 = %402.1;
  %404 = cast(%403, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %405 = reshape(%404, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %406 = @func_300(%405) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %407 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %408 = %399.0;
  %409 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %410 = %400.0;
  %411 = %401.7;
  %412 = %406.1;
  %413 = %407.1;
  (%408, %409, %410, %411, %403, %412, %413)
}

def @func_10510() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %414 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %415 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %416 = @func_5971() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) */;
  %417 = %414.1;
  %418 = %415.1;
  %419 = %416.1;
  (%417, %418, %419)
}

def @func_807() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) {
  %420 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %421 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %422 = %421.0;
  %423 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %424 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %425 = reshape(%423, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %426 = reshape(%424, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %427 = @func_435(%425, %426) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="int32") /* ty=Tensor[(14, 8, 4), int32] */;
  %430 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%422, dtype="int32") /* ty=Tensor[(14, 8, 4), int32] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %433 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %434 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %435 = reshape(%433, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %436 = reshape(%434, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %437 = @func_435(%435, %436) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %438 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %439 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 110), float32] */, dtype="float64") /* ty=Tensor[(8, 110), float64] */;
  %440 = %420.1;
  %441 = multiply(%431, %432) /* ty=Tensor[(14, 8, 4), int32] */;
  %442 = %437.2;
  %443 = %438.1;
  %444 = sin(%439) /* ty=Tensor[(8, 110), float64] */;
  (%440, %441, %442, %443, %444)
}

def @func_1183() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) {
  %445 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %446 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %447 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 220), float32] */, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %448 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 220), float32] */, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %449 = reshape(%447, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %450 = reshape(%448, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %451 = @func_435(%449, %450) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %452 = %445.1;
  %453 = %446.1;
  %454 = %451.5;
  (%452, %453, %454, meta[relay.Constant][14] /* ty=Tensor[(4, 220), float32] */)
}

def @func_3671(%var_3665: Tensor[(7, 5, 9), float32], %var_3666: Tensor[(7, 5, 9), float32]) -> (Tensor[(7, 5, 9), float32],) {
  %455 = cast(%var_3666, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %456 = shape_of(%var_3665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_3665, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %459 = floor_divide(%457, %458) /* ty=Tensor[(7, 5, 9), float32] */;
  (%459,)
}

def @func_6043() -> (Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %460 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %461 = cast(meta[relay.Constant][15] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %462 = reshape(%461, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %463 = @func_2694(%462) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) */;
  %464 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %465 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %466 = %460.2;
  %467 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  %468 = %463.2;
  %469 = %464.3;
  %470 = %465.1;
  (%466, %467, %468, meta[relay.Constant][15] /* ty=Tensor[(880), float32] */, %469, %470)
}

def @func_6841() -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float32]) {
  %471 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
  %472 = @func_4781() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %473 = %471.1;
  %474 = %472.0;
  (%473, %474)
}

def @func_10088() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %475 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %476 = @func_6513() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %477 = %475.0;
  %478 = %476.0;
  (%477, %478)
}

def @func_7621() -> Tensor[(14, 8, 4), bool] {
  %479 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %479.0
}

def @func_2149(%var_2146: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %480 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %481 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %482 = cast(%var_2146, dtype="float64") /* ty=Tensor[(240), float64] */;
  %483 = cast(%var_2146, dtype="float64") /* ty=Tensor[(240), float64] */;
  %484 = reshape(%482, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %485 = reshape(%483, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %486 = @func_873(%484, %485) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %487 = %480.0;
  %488 = %481.0;
  %489 = %486.2;
  (%487, %488, %489, %var_2146)
}

def @func_1217(%var_1201: Tensor[(14, 8, 4), bool], %var_1210: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) {
  %490 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %491 = %490.0;
  %492 = cast(%var_1201, dtype="uint64") /* ty=Tensor[(14, 8, 4), uint64] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="uint64") /* ty=Tensor[(14, 8, 4), uint64] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %496 = cast(%var_1210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %497 = cast(%var_1210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %498 = reshape(%496, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %499 = reshape(%497, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %500 = @func_873(%498, %499) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %501 = right_shift(%494, %495) /* ty=Tensor[(14, 8, 4), uint64] */;
  %502 = %500.1;
  (%501, %502, %var_1210)
}

def @func_10021(%var_9987: Tensor[(9, 8, 12), bool], %var_9988: Tensor[(9, 8, 12), bool]) -> (Tensor[(9, 8, 12), bool], Tensor[(9, 8, 12), float32], Tensor[(14, 8, 4), bool], Tensor[(15, 6, 14), int16], Tensor[(1260), int16]) {
  %503 = cast(%var_9988, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %504 = shape_of(%var_9987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_9987, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = cast(%var_9988, dtype="float32") /* ty=Tensor[(9, 8, 12), float32] */;
  %508 = cast(meta[relay.Constant][16] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %509 = reshape(%508, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), int16] */;
  %510 = logical_and(%505, %506) /* ty=Tensor[(9, 8, 12), bool] */;
  %511 = acosh(%507) /* ty=Tensor[(9, 8, 12), float32] */;
  %512 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %513 = @func_9763(%509) /* ty=Tensor[(15, 6, 14), int16] */;
  (%510, %511, %512, %513, meta[relay.Constant][16] /* ty=Tensor[(1260), int16] */)
}

def @func_4604() -> (Tensor[(14, 8, 4), float64],) {
  %514 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_7155(%var_7095: Tensor[(468), int64], %var_7097: Tensor[(294), float32], %var_7102: Tensor[(21, 4), float32], %var_7147: Tensor[(130), float64]) -> (Tensor[(8, 110), float64], Tensor[(7, 42), float32], Tensor[(468), int64], Tensor[(294), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32], Tensor[(21, 4), uint16], Tensor[(14, 8, 4), uint32], Tensor[(130), float64]) {
  %516 = cast(%var_7095, dtype="int64") /* ty=Tensor[(468), int64] */;
  %517 = cast(%var_7095, dtype="int64") /* ty=Tensor[(468), int64] */;
  %518 = cast(%var_7095, dtype="float64") /* ty=Tensor[(468), float64] */;
  %519 = cast(meta[relay.Constant][17] /* ty=Tensor[(21, 4), float32] */, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %520 = cast(%var_7097, dtype="float32") /* ty=Tensor[(294), float32] */;
  %521 = reshape(%516, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
  %522 = reshape(%517, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
  %523 = reshape(%518, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), float64] */;
  %524 = reshape(%519, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %525 = reshape(%520, newshape=[294]) /* ty=Tensor[(294), float32] */;
  %526 = @func_4284(%521, %522, %523, %524, %525) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) */;
  %527 = @func_4378() /* ty=Tensor[(8, 110), float64] */;
  %528 = cast(%527, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %529 = reshape(%528, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %530 = @func_3997(%529) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %531 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
  %532 = cast(%var_7102, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %533 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(21, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %534 = cast(meta[relay.Constant][17] /* ty=Tensor[(21, 4), float32] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %536 = greater(%534, %535) /* ty=Tensor[(21, 4), bool] */;
  %537 = cast(%var_7102, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
  %538 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(21, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %539 = cast(meta[relay.Constant][17] /* ty=Tensor[(21, 4), float32] */, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %541 = floor_divide(%539, %540) /* ty=Tensor[(21, 4), float64] */;
  %542 = cast(%541, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
  %543 = shape_of(%536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %544 = cast(%536, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %546 = cast(%var_7147, dtype="float64") /* ty=Tensor[(130), float64] */;
  %547 = reshape(%546, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %548 = @func_5455(%547) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %549 = %526.5;
  %550 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %551 = %530.0;
  %552 = %531.1;
  %553 = left_shift(%544, %545) /* ty=Tensor[(21, 4), uint16] */;
  %554 = %548.0;
  (%527, %549, %var_7095, %var_7097, %550, %551, %552, %553, %554, %var_7147)
}

def @func_3502() -> Tensor[(13, 14, 5), float32] {
  %555 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 5), float32] */;
  asinh(%555) /* ty=Tensor[(13, 14, 5), float32] */
}

def @func_5933() -> Tensor[(14, 8, 4), bool] {
  @func_5092() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_4109() -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
  %556 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %557 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
  %558 = %556.0;
  (%557, %558)
}

def @func_9871() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %559 = @func_8647() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %560 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %561 = %559.0;
  %562 = %560.2;
  (%561, %562)
}

def @func_10724() -> Tensor[(14, 8, 4), bool] {
  %563 = @func_8723() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %563.0
}

def @func_8430() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %564 = @func_2832() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %565 = %564.0;
  %566 = @func_5705() /* ty=Tensor[(14, 8, 4), bool] */;
  %567 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
  (%565, %566, %567)
}

def @func_2694(%var_2676: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
  %568 = cast(%var_2676, dtype="float32") /* ty=Tensor[(880), float32] */;
  %569 = cast(%var_2676, dtype="float32") /* ty=Tensor[(880), float32] */;
  %570 = reshape(%568, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %571 = reshape(%569, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %572 = @func_435(%570, %571) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %573 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %574 = %572.4;
  (%573, %574, %var_2676)
}

def @func_5705() -> Tensor[(14, 8, 4), bool] {
  %575 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %575.0
}

def @func_1357() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
  %576 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %577 = %576.1;
  %578 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  (%577, %578)
}

def @func_7088() -> Tensor[(8, 110), float64] {
  @func_4378() /* ty=Tensor[(8, 110), float64] */
}

def @func_4667() -> (Tensor[(14, 8, 4), float64],) {
  %579 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %580 = %579.0;
  (%580,)
}

def @func_6665() -> Tensor[(14, 8, 4), bool] {
  %581 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %581.3
}

def @func_11136(%var_11134: Tensor[(84, 1), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(2, 13, 4), int8], Tensor[(14, 8, 4), float64], Tensor[(84, 1), float32]) {
  %582 = @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */;
  %583 = cast(%582, dtype="int8") /* ty=Tensor[(2, 13, 1), int8] */;
  %584 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 13, 4), uint32] */, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
  %585 = cast(%var_11134, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %586 = reshape(%585, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %587 = @func_3474(%586) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
  %588 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %589 = bitwise_or(%583, %584) /* ty=Tensor[(2, 13, 4), int8] */;
  %590 = %587.1;
  (%588, %589, %590, %var_11134)
}

def @func_8381() -> (Tensor[(14, 8, 4), float32],) {
  %591 = @func_7363() /* ty=Tensor[(14, 8, 4), float32] */;
  (%591,)
}

def @func_7450() -> Tensor[(14, 8, 4), bool] {
  @func_5092() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_9415(%var_9405: Tensor[(1, 84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(1, 84), float32], Tensor[(14, 8, 4), bool]) {
  %592 = @func_6076() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %593 = cast(%var_9405, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %594 = reshape(%593, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %595 = @func_3474(%594) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
  %596 = %592.0;
  %597 = %595.3;
  %598 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
  (%596, %597, %var_9405, %598)
}

def @func_3781(%var_3772: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), int8] {
  %599 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %600 = %599.0;
  %601 = cast(%var_3772, dtype="int8") /* ty=Tensor[(14, 8, 4), int8] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="int8") /* ty=Tensor[(14, 8, 4), int8] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%603, %604) /* ty=Tensor[(14, 8, 4), int8] */
}

def @func_5455(%var_5447: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
  %605 = cast(%var_5447, dtype="float64") /* ty=Tensor[(130), float64] */;
  %606 = reshape(%605, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %607 = @func_3648(%606) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) */;
  %608 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  %609 = %607.1;
  (%608, %609, %var_5447)
}

def @func_735() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %610 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %611 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %612 = %610.0;
  %613 = %611.0;
  (%612, %613)
}

def @func_8106() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %614 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %615 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %616 = %614.0;
  %617 = %615.1;
  (%616, %617)
}

def @func_3376(%var_3365: Tensor[(15, 16, 10), float32], %var_3371: Tensor[(240), float64]) -> (Tensor[(15, 16, 10), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %618 = cast(%var_3365, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %619 = cast(%var_3371, dtype="float64") /* ty=Tensor[(240), float64] */;
  %620 = cast(%var_3371, dtype="float64") /* ty=Tensor[(240), float64] */;
  %621 = reshape(%619, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %622 = reshape(%620, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %623 = @func_873(%621, %622) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %624 = erf(%618) /* ty=Tensor[(15, 16, 10), float32] */;
  %625 = %623.2;
  (%624, %625, %var_3371)
}

def @func_569(%var_559: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %626 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %627 = %626.0;
  %628 = cast(%627, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %629 = reshape(%628, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %630 = @func_300(%629) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %631 = cast(%var_559, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %632 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%627, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = %630.0;
  %636 = logical_or(%633, %634) /* ty=Tensor[(14, 8, 4), bool] */;
  (%635, %636)
}

def @func_300(%var_294: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) {
  %637 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %638 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %639 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %640 = %639.2;
  %641 = cast(%var_294, dtype="uint32") /* ty=Tensor[(14, 8, 4), uint32] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="uint32") /* ty=Tensor[(14, 8, 4), uint32] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %645 = %637.0;
  %646 = %638.0;
  %647 = subtract(%643, %644) /* ty=Tensor[(14, 8, 4), uint32] */;
  (%645, %646, %647)
}

def @func_11058() -> (Tensor[(84), float32],) {
  %648 = @func_8014() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) */;
  %649 = %648.2;
  (%649,)
}

def @func_435(%var_343: Tensor[(11, 10, 8), float32], %var_416: Tensor[(11, 10, 8), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) {
  %650 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %651 = cast(%var_343, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %652 = %650.0;
  %653 = cast(%652, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %654 = reshape(%653, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %655 = @func_300(%654) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %656 = cast(%var_343, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %657 = log10(%656) /* ty=Tensor[(11, 10, 8), float32] */;
  %658 = cast(%var_343, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %662 = left_shift(%660, %661) /* ty=Tensor[(11, 10, 8), int8] */;
  %663 = cast(%662, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %664 = sqrt(%663) /* ty=Tensor[(11, 10, 8), float32] */;
  %665 = cast(%662, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%664, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %669 = cast(%662, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %670 = cast(%var_416, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %671 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%664, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %674 = log2(%651) /* ty=Tensor[(11, 10, 8), float64] */;
  %675 = %655.2;
  %676 = bitwise_xor(%667, %668) /* ty=Tensor[(11, 10, 8), int16] */;
  %677 = asin(%669) /* ty=Tensor[(11, 10, 8), float64] */;
  %678 = maximum(%672, %673) /* ty=Tensor[(11, 10, 8), int16] */;
  (%652, %674, %675, %676, %677, %678)
}

def @func_7063() -> (Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) {
  %679 = @func_7008() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) */;
  %680 = cast(meta[relay.Constant][20] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %681 = reshape(%680, newshape=[7, 7, 6]) /* ty=Tensor[(7, 7, 6), float32] */;
  %682 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %683 = %679.3;
  %684 = @func_2534(%681) /* ty=Tensor[(7, 7, 6), float32] */;
  %685 = %682.1;
  (%683, %684, meta[relay.Constant][20] /* ty=Tensor[(294), float32] */, %685)
}

def @func_2402(%var_2392: Tensor[(4, 16, 4), int16], %var_2393: Tensor[(4, 16, 4), int16]) -> (Tensor[(4, 16, 4), bool], Tensor[(4, 16, 4), float32]) {
  %686 = cast(%var_2393, dtype="bool") /* ty=Tensor[(4, 16, 4), bool] */;
  %687 = shape_of(%var_2392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_2392, dtype="bool") /* ty=Tensor[(4, 16, 4), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %690 = cast(%var_2393, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
  %691 = not_equal(%688, %689) /* ty=Tensor[(4, 16, 4), bool] */;
  %692 = sinh(%690) /* ty=Tensor[(4, 16, 4), float32] */;
  (%691, %692)
}

def @func_5291() -> Tensor[(14, 8, 4), bool] {
  %693 = @func_4109() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
  %693.1
}

def @func_7735() -> Tensor[(14, 8, 4), bool] {
  %694 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %694.0
}

def @func_2418(%var_2413: Tensor[(5, 7, 3), float64]) -> (Tensor[(5, 7, 3), float64],) {
  %695 = cast(%var_2413, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  %696 = asinh(%695) /* ty=Tensor[(5, 7, 3), float64] */;
  (%696,)
}

def @func_481(%var_469: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), bool] {
  %697 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %698 = %697.0;
  %699 = cast(%var_469, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%698, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%701, %702) /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_2323(%var_2277: Tensor[(14, 8, 4), float64], %var_2300: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) {
  %703 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %704 = %703.0;
  %705 = cast(%var_2277, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %709 = cast(%var_2277, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %710 = reshape(%709, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %711 = cast(%var_2300, dtype="float32") /* ty=Tensor[(880), float32] */;
  %712 = cast(%var_2300, dtype="float32") /* ty=Tensor[(880), float32] */;
  %713 = reshape(%711, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %714 = reshape(%712, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %715 = @func_435(%713, %714) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %716 = %715.3;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %718 = cast(%716, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %719 = reshape(%717, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %720 = reshape(%718, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %721 = @func_435(%719, %720) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %722 = bitwise_xor(%707, %708) /* ty=Tensor[(14, 8, 4), uint16] */;
  %723 = @func_481(%710) /* ty=Tensor[(14, 8, 4), bool] */;
  %724 = %721.2;
  (%722, %723, %716, %var_2300, %724)
}

def @func_650() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %725 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %726 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %727 = %726.0;
  %728 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 8, 4), bool] */, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %732 = %725.1;
  %733 = divide(%730, %731) /* ty=Tensor[(14, 8, 4), float64] */;
  (%732, %733)
}

def @func_3703() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %734 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %735 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %736 = %734.0;
  %737 = %735.0;
  (%736, %737)
}

def @func_3233() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %738 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %739 = @func_2832() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %740 = %738.3;
  %741 = %739.0;
  (%740, %741)
}

def @func_6091() -> (Tensor[(14, 8, 4), bool],) {
  %742 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
  (%742,)
}

def @func_713() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %743 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %744 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %745 = %743.0;
  %746 = %744.0;
  (%745, %746)
}

def @func_5092() -> Tensor[(14, 8, 4), bool] {
  %747 = @func_3703() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %747.0
}

def @main(%var_11513: Tensor[(1, 16, 9), uint64]) -> Tensor[(8, 16, 9), uint64] {
  %748 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(1, 16, 9), uint64] */;
  %749 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 16, 9), uint64] */, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  bitwise_or(%748, %749) /* ty=Tensor[(8, 16, 9), uint64] */
}

def @func_9471() -> Tensor[(14, 8, 4), bool] {
  %750 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %750.1
}

def @func_9155(%var_9135: Tensor[(4, 220), float32]) -> (Tensor[(4, 220), float64], Tensor[(4, 220), uint8], Tensor[(14, 8, 4), bool]) {
  %751 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %752 = %751.3;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %754 = cast(%var_9135, dtype="uint8") /* ty=Tensor[(4, 220), uint8] */;
  %755 = shape_of(%752, dtype="int32") /* ty=Tensor[(2), int32] */;
  %756 = cast(%752, dtype="uint8") /* ty=Tensor[(4, 220), uint8] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %758 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %759 = sigmoid(%753) /* ty=Tensor[(4, 220), float64] */;
  %760 = bitwise_xor(%756, %757) /* ty=Tensor[(4, 220), uint8] */;
  %761 = %758.0;
  (%759, %760, %761)
}

def @func_6497(%var_6489: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
  %762 = cast(%var_6489, dtype="float64") /* ty=Tensor[(130), float64] */;
  %763 = reshape(%762, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %764 = @func_5455(%763) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %765 = @func_2227() /* ty=Tensor[(14, 8, 4), bool] */;
  %766 = %764.1;
  (%765, %766, %var_6489)
}

def @func_11348(%var_11332: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), int64], Tensor[(880), float32], Tensor[(13, 14, 5), float32]) {
  %767 = @func_7571() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) */;
  %768 = cast(%var_11332, dtype="float32") /* ty=Tensor[(880), float32] */;
  %769 = reshape(%768, newshape=[4, 220]) /* ty=Tensor[(4, 220), float32] */;
  %770 = @func_1513(%769) /* ty=(Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) */;
  %771 = @func_5668() /* ty=(Tensor[(13, 14, 5), float32],) */;
  %772 = %767.0;
  %773 = %770.0;
  %774 = %771.0;
  (%772, %773, %var_11332, %774)
}

def @func_7706() -> (Tensor[(7, 7, 6), float32],) {
  %775 = @func_7063() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) */;
  %776 = %775.1;
  (%776,)
}

def @func_11505(%var_11452: Tensor[(84), float32], %var_11464: Tensor[(468, 1), int64], %var_11468: Tensor[(468, 15), int64]) -> (Tensor[(14, 8, 4), float64], Tensor[(6, 13, 6), float64], Tensor[(7, 42), float32], Tensor[(468, 84), float64], Tensor[(14, 8, 4), bool], Tensor[(468, ?), bool], Tensor[(4, 220), int8], Tensor[(880), float32], Tensor[(468, 15), uint16], Tensor[(14, 8, 4), float32], Tensor[(468, 15), float32]) {
  %777 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %778 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="int64") /* ty=Tensor[(468, 1), int64] */;
  %779 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="int64") /* ty=Tensor[(468, 1), int64] */;
  %780 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %781 = cast(%var_11452, dtype="float32") /* ty=Tensor[(84), float32] */;
  %782 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 42), float32] */, dtype="float32") /* ty=Tensor[(7, 42), float32] */;
  %783 = reshape(%778, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
  %784 = reshape(%779, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
  %785 = reshape(%780, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), float64] */;
  %786 = reshape(%781, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %787 = reshape(%782, newshape=[294]) /* ty=Tensor[(294), float32] */;
  %788 = @func_4284(%783, %784, %785, %786, %787) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) */;
  %789 = cast(%var_11452, dtype="float64") /* ty=Tensor[(84), float64] */;
  %790 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %791 = cast(%var_11464, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
  %792 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %795 = cast(meta[relay.Constant][25] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %796 = reshape(%795, newshape=[4, 220]) /* ty=Tensor[(4, 220), float32] */;
  %797 = @func_1513(%796) /* ty=(Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) */;
  %798 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="uint8") /* ty=Tensor[(468, 1), uint8] */;
  %799 = cast(%var_11468, dtype="uint8") /* ty=Tensor[(468, 15), uint8] */;
  %800 = minimum(%798, %799) /* ty=Tensor[(468, 15), uint8] */;
  %801 = cast(%800, dtype="bool") /* ty=Tensor[(468, 15), bool] */;
  %802 = cast(meta[relay.Constant][23] /* ty=Tensor[(468, 1), int64] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
  %803 = less_equal(%801, %802) /* ty=Tensor[(468, 15), bool] */;
  %804 = cast(%800, dtype="uint16") /* ty=Tensor[(468, 15), uint16] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
  %806 = cast(%803, dtype="uint16") /* ty=Tensor[(468, 15), uint16] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %808 = @func_7063() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) */;
  %809 = cast(%800, dtype="float32") /* ty=Tensor[(468, 15), float32] */;
  %810 = %777.0;
  %811 = %788.9;
  %812 = mod(%789, %790) /* ty=Tensor[(468, 84), float64] */;
  %813 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  %814 = not_equal(%793, %794) /* ty=Tensor[(468, ?), bool] */;
  %815 = %797.1;
  %816 = logical_xor(%806, %807) /* ty=Tensor[(468, 15), uint16] */;
  %817 = %808.0;
  %818 = rsqrt(%809) /* ty=Tensor[(468, 15), float32] */;
  (%810, %811, meta[relay.Constant][24] /* ty=Tensor[(7, 42), float32] */, %812, %813, %814, %815, meta[relay.Constant][25] /* ty=Tensor[(880), float32] */, %816, %817, %818)
}

def @func_10771() -> Tensor[(14, 8, 4), bool] {
  %819 = @func_6076() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %819.0
}

def @func_1743() -> (Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %820 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %821 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %822 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %825 = %820.2;
  %826 = %821.1;
  %827 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %828 = tan(%824) /* ty=Tensor[(14, 8, 4), float64] */;
  (%825, %826, %827, %828)
}

def @func_1464() -> Tensor[(14, 8, 4), bool] {
  %829 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %829.0
}

def @func_8985() -> Tensor[(14, 8, 4), bool] {
  %830 = @func_8364() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
  %830.0
}

def @func_8647() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %831 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %832 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %833 = %831.0;
  %834 = %832.0;
  (%833, %834)
}

def @func_3648(%var_3620: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) {
  %835 = cast(%var_3620, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %836 = acosh(%835) /* ty=Tensor[(10, 13, 1), float64] */;
  %837 = cast(%836, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %838 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %839 = sqrt(%837) /* ty=Tensor[(10, 13, 1), float64] */;
  %840 = %838.3;
  (%839, %840)
}

def @func_1474() -> (Tensor[(14, 8, 4), float64],) {
  %841 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %843 = log10(%842) /* ty=Tensor[(14, 8, 4), float64] */;
  (%843,)
}

def @func_6144() -> Tensor[(14, 8, 4), bool] {
  %844 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %844.0
}

def @func_10660() -> Tensor[(14, 8, 4), float64] {
  %845 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %845.0
}

def @func_7008() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) {
  %846 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %847 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %848 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %849 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %850 = cast(%849, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %851 = reshape(%850, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %852 = @func_569(%851) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %853 = %846.1;
  %854 = %847.1;
  %855 = %848.0;
  %856 = %852.0;
  (%853, %849, %854, %855, %856)
}

def @func_108() -> (Tensor[(14, 8, 4), bool],) {
  %857 = cast(meta[relay.Constant][26] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %858 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 8, 4), uint8] */, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %859 = equal(%857, %858) /* ty=Tensor[(14, 8, 4), bool] */;
  (%859,)
}

def @func_4781() -> (Tensor[(14, 8, 4), float32],) {
  %860 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %861 = %860.5;
  (%861,)
}

def @func_1513(%var_1499: Tensor[(4, 220), float32]) -> (Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) {
  %862 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %863 = %862.1;
  %864 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %865 = cast(%864, dtype="int64") /* ty=Tensor[(14, 8, 4), int64] */;
  %866 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%863, dtype="int64") /* ty=Tensor[(14, 8, 4), int64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %869 = cast(%var_1499, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %870 = cast(%var_1499, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %871 = reshape(%869, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %872 = reshape(%870, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %873 = @func_435(%871, %872) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %874 = %873.5;
  %875 = cast(%874, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %876 = shape_of(%var_1499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %877 = cast(%var_1499, dtype="int8") /* ty=Tensor[(4, 220), int8] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %879 = left_shift(%867, %868) /* ty=Tensor[(14, 8, 4), int64] */;
  %880 = logical_xor(%877, %878) /* ty=Tensor[(4, 220), int8] */;
  (%879, %880)
}

def @func_9763(%var_9754: Tensor[(15, 6, 14), int16]) -> Tensor[(15, 6, 14), int16] {
  %881 = cast(%var_9754, dtype="int16") /* ty=Tensor[(15, 6, 14), int16] */;
  %882 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(15, 6, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 6, 14), int16] */, dtype="int16") /* ty=Tensor[(15, 6, 14), int16] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%883, %884) /* ty=Tensor[(15, 6, 14), int16] */
}

def @func_5331(%var_5309: Tensor[(1, 9, 2), uint32]) -> (Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) {
  %885 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %886 = cast(%var_5309, dtype="uint32") /* ty=Tensor[(1, 9, 2), uint32] */;
  %887 = logical_xor(%885, %886) /* ty=Tensor[(1, 9, 2), uint32] */;
  %888 = cast(%887, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  %889 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %890 = acos(%888) /* ty=Tensor[(1, 9, 2), float32] */;
  %891 = %889.1;
  (%890, %891)
}

def @func_3011() -> Tensor[(14, 8, 4), bool] {
  %892 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %892.3
}

def @func_4501() -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) {
  %893 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %894 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
  %895 = %893.1;
  %896 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
  (%894, %895, %896)
}

def @func_882() -> (Tensor[(14, 8, 4), bool],) {
  %897 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %898 = %897.0;
  (%898,)
}

def @func_10228() -> Tensor[(130), float64] {
  %899 = @func_9481() /* ty=(Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) */;
  %899.2
}

def @func_5810() -> (Tensor[(14, 8, 4), uint32],) {
  %900 = @func_5436() /* ty=Tensor[(14, 8, 4), uint32] */;
  (%900,)
}

def @func_5971() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) {
  %901 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %902 = cast(meta[relay.Constant][30] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %903 = cast(meta[relay.Constant][30] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %904 = reshape(%902, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %905 = reshape(%903, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %906 = @func_1975(%904, %905) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %907 = %901.3;
  %908 = %906.4;
  %909 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  (%907, %908, meta[relay.Constant][30] /* ty=Tensor[(84, 1), float32] */, %909)
}

def @func_7680() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %910 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %911 = @func_5621() /* ty=Tensor[(14, 8, 4), bool] */;
  (%910, %911)
}

def @func_10597() -> (Tensor[(14, 8, 4), float64],) {
  %912 = @func_9309() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) */;
  %913 = %912.0;
  (%913,)
}

def @func_9632() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %914 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %915 = %914.1;
  %916 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  (%915, %916)
}

def @func_1757() -> Tensor[(14, 8, 4), uint32] {
  @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_7899() -> (Tensor[(105), float64], Tensor[(105), float64], Tensor[(7, 7, 6), float32]) {
  %917 = cast(meta[relay.Constant][31] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %918 = reshape(%917, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %919 = @func_2938(%918) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
  %920 = @func_7706() /* ty=(Tensor[(7, 7, 6), float32],) */;
  %921 = %920.0;
  %922 = cast(%921, dtype="float64") /* ty=Tensor[(7, 7, 6), float64] */;
  %923 = acosh(%922) /* ty=Tensor[(7, 7, 6), float64] */;
  %924 = cast(%921, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%923, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %928 = %919.1;
  %929 = power(%926, %927) /* ty=Tensor[(7, 7, 6), float32] */;
  (%928, meta[relay.Constant][31] /* ty=Tensor[(105), float64] */, %929)
}

def @func_5370(%var_5360: Tensor[(18), uint32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(18), uint32]) {
  %930 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %931 = cast(%var_5360, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %932 = reshape(%931, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint32] */;
  %933 = @func_5331(%932) /* ty=(Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) */;
  %934 = %930.0;
  %935 = %933.1;
  (%934, %935, %var_5360)
}

def @func_6194() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) {
  %936 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %937 = reshape(%936, newshape=[]) /* ty=int8 */;
  %938 = @func_2025(%937) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
  %939 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  %940 = %938.1;
  %941 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
  (%939, %940, meta[relay.Constant][32] /* ty=int8 */, %941)
}

def @func_5589(%var_5558: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], int8, Tensor[(14, 8, 4), bool], Tensor[(336), float64], Tensor[(880), float32], Tensor[(14, 8, 4), float64]) {
  %942 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %943 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %944 = cast(%var_5558, dtype="int8") /* ty=int8 */;
  %945 = reshape(%944, newshape=[]) /* ty=int8 */;
  %946 = @func_3091(%945) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) */;
  %947 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %948 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %949 = cast(meta[relay.Constant][34] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %950 = reshape(%947, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %951 = reshape(%948, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %952 = reshape(%949, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %953 = @func_2816(%950, %951, %952) /* ty=(Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */;
  %954 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %955 = %942.1;
  %956 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %957 = %943.0;
  %958 = %946.0;
  %959 = %953.3;
  %960 = %954.1;
  (%955, %956, %957, %958, %var_5558, %959, meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, meta[relay.Constant][34] /* ty=Tensor[(880), float32] */, %960)
}

def @func_7183() -> (Tensor[(14, 8, 4), bool],) {
  %961 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  (%961,)
}

def @func_7363() -> Tensor[(14, 8, 4), float32] {
  %962 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %962.5
}

def @func_5899(%var_5866: Tensor[(5, 15, 1), int8], %var_5867: Tensor[(5, 15, 13), int8], %var_5880: Tensor[(105), float64]) -> (Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) {
  %963 = cast(%var_5866, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %964 = cast(%var_5867, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %965 = cast(%var_5880, dtype="float64") /* ty=Tensor[(105), float64] */;
  %966 = reshape(%965, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %967 = @func_2938(%966) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
  %968 = less(%963, %964) /* ty=Tensor[(5, 15, 13), bool] */;
  %969 = %967.1;
  (%968, %969, %var_5880)
}

def @func_10171(%var_10148: Tensor[(1, 432), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int8], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(10, 432), float64], Tensor[(14, 8, 4), bool]) {
  %970 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %971 = %970.0;
  %972 = cast(%971, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %973 = reshape(%972, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %974 = cast(%var_10148, dtype="float64") /* ty=Tensor[(1, 432), float64] */;
  %975 = reshape(%974, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), float64] */;
  %976 = @func_8492(%975) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) */;
  %977 = cast(%var_10148, dtype="float64") /* ty=Tensor[(1, 432), float64] */;
  %978 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 432), float64] */, dtype="float64") /* ty=Tensor[(10, 432), float64] */;
  %979 = @func_3781(%973) /* ty=Tensor[(14, 8, 4), int8] */;
  %980 = %976.2;
  %981 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %982 = divide(%977, %978) /* ty=Tensor[(10, 432), float64] */;
  %983 = @func_5933() /* ty=Tensor[(14, 8, 4), bool] */;
  (%971, %979, %980, %981, %982, %983)
}

def @func_3915() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) {
  %984 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %985 = %984.1;
  %986 = cast(%985, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %987 = reshape(%986, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %988 = @func_569(%987) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %989 = %988.1;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %991 = cast(%989, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %992 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%985, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %995 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %996 = asin(%990) /* ty=Tensor[(14, 8, 4), float64] */;
  %997 = bitwise_or(%993, %994) /* ty=Tensor[(14, 8, 4), uint16] */;
  %998 = %995.0;
  (%996, %997, %998)
}

def @func_8246() -> Tensor[(14, 8, 4), float64] {
  %999 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %999.0
}

def @func_11024() -> Tensor[(14, 8, 4), uint32] {
  @func_5436() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_10695(%var_10685: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), bool], Tensor[(14, 8, 4), float32]) {
  %1000 = @func_5668() /* ty=(Tensor[(13, 14, 5), float32],) */;
  %1001 = %1000.0;
  %1002 = cast(%var_10685, dtype="bool") /* ty=Tensor[(13, 14, 5), bool] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="bool") /* ty=Tensor[(13, 14, 5), bool] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1006 = logical_and(%1004, %1005) /* ty=Tensor[(13, 14, 5), bool] */;
  %1007 = @func_8735() /* ty=Tensor[(14, 8, 4), float32] */;
  (%1006, %1007)
}

def @func_2025(%var_2016: int8) -> (Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) {
  %1008 = cast(%var_2016, dtype="bool") /* ty=bool */;
  %1009 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 13, 1), int8] */, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
  %1010 = cast(meta[relay.Constant][37] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %1011 = reshape(%1010, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %1012 = @func_569(%1011) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1013 = less(%1008, %1009) /* ty=Tensor[(2, 13, 1), bool] */;
  %1014 = %1012.0;
  (%1013, %1014, meta[relay.Constant][37] /* ty=Tensor[(448), bool] */)
}

def @func_11099(%var_11084: uint16, %var_11085: Tensor[(1, 6, 12), uint16]) -> (Tensor[(1, 6, 12), bool], Tensor[(14, 8, 4), float64]) {
  %1015 = cast(%var_11084, dtype="bool") /* ty=bool */;
  %1016 = cast(%var_11085, dtype="bool") /* ty=Tensor[(1, 6, 12), bool] */;
  %1017 = @func_9309() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) */;
  %1018 = greater(%1015, %1016) /* ty=Tensor[(1, 6, 12), bool] */;
  %1019 = %1017.0;
  (%1018, %1019)
}

def @func_10397() -> Tensor[(2, 13, 1), uint32] {
  @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */
}

def @func_2997() -> (Tensor[(14, 8, 4), float64],) {
  %1020 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_8232() -> (Tensor[(13, 14, 5), float32], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
  %1022 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1024 = cast(meta[relay.Constant][38] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1025 = reshape(%1023, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
  %1026 = reshape(%1024, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %1027 = @func_2323(%1025, %1026) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
  %1028 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
  %1029 = %1027.1;
  (%1028, %1022, %1029, meta[relay.Constant][38] /* ty=Tensor[(880), float32] */)
}

def @func_8461(%var_8448: Tensor[(3, 12, 13), uint8], %var_8449: Tensor[(3, 12, 13), uint8]) -> (Tensor[(3, 12, 13), uint8], Tensor[(3, 12, 13), float64]) {
  %1030 = cast(%var_8449, dtype="uint8") /* ty=Tensor[(3, 12, 13), uint8] */;
  %1031 = shape_of(%var_8448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%var_8448, dtype="uint8") /* ty=Tensor[(3, 12, 13), uint8] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1034 = cast(%var_8449, dtype="float64") /* ty=Tensor[(3, 12, 13), float64] */;
  %1035 = minimum(%1032, %1033) /* ty=Tensor[(3, 12, 13), uint8] */;
  %1036 = asin(%1034) /* ty=Tensor[(3, 12, 13), float64] */;
  (%1035, %1036)
}

def @func_9085() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(7, 7, 6), float32], Tensor[(14, 8, 4), bool]) {
  %1037 = @func_7790() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1038 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1039 = @func_7706() /* ty=(Tensor[(7, 7, 6), float32],) */;
  %1040 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1041 = %1037.0;
  %1042 = %1038.1;
  %1043 = %1039.0;
  %1044 = %1040.0;
  (%1041, %1042, %1043, %1044)
}

def @func_6888() -> (Tensor[(14, 8, 4), float64],) {
  %1045 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_1853() -> (Tensor[(14, 8, 4), float64],) {
  %1047 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1050 = cosh(%1049) /* ty=Tensor[(14, 8, 4), float64] */;
  (%1050,)
}

def @func_10972() -> (Tensor[(240), float64],) {
  %1051 = @func_4886() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) */;
  %1052 = %1051.2;
  (%1052,)
}

def @func_873(%var_824: Tensor[(12, 5, 4), float64], %var_825: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %1053 = cast(%var_825, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %1054 = shape_of(%var_824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%var_824, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1057 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1058 = %1057.0;
  %1059 = cast(%1058, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %1060 = reshape(%1059, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %1061 = @func_300(%1060) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %1062 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1063 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %1064 = %1063.0;
  %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1066 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%1058, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1069 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1070 = floor_mod(%1055, %1056) /* ty=Tensor[(12, 5, 4), float64] */;
  %1071 = %1061.2;
  %1072 = %1062.0;
  %1073 = floor_mod(%1067, %1068) /* ty=Tensor[(14, 8, 4), float64] */;
  %1074 = %1069.0;
  (%1070, %1071, %1072, %1073, %1074)
}

def @func_8596() -> (Tensor[(14, 8, 4), float64],) {
  %1075 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1076 = %1075.1;
  (%1076,)
}

def @func_4284(%var_4199: Tensor[(6, 13, 6), int64], %var_4200: Tensor[(6, 13, 6), int64], %var_4241: Tensor[(6, 13, 6), float64], %var_4252: Tensor[(84), float32], %var_4265: Tensor[(294), float32]) -> (Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) {
  %1077 = cast(%var_4200, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
  %1078 = shape_of(%var_4199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(%var_4199, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1081 = bitwise_and(%1079, %1080) /* ty=Tensor[(6, 13, 6), int64] */;
  %1082 = cast(%1081, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %1083 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%var_4200, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1086 = cast(%var_4200, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
  %1087 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%1081, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1090 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1091 = cast(%var_4252, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1092 = cast(%var_4252, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1093 = reshape(%1091, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %1094 = reshape(%1092, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %1095 = @func_1975(%1093, %1094) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %1096 = cast(%var_4265, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1097 = reshape(%1096, newshape=[7, 42]) /* ty=Tensor[(7, 42), float32] */;
  %1098 = @func_2856(%1097) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) */;
  %1099 = cast(%var_4199, dtype="float64") /* ty=Tensor[(6, 13, 6), float64] */;
  %1100 = atanh(%1099) /* ty=Tensor[(6, 13, 6), float64] */;
  %1101 = cast(%var_4241, dtype="int16") /* ty=Tensor[(6, 13, 6), int16] */;
  %1102 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(%1100, dtype="int16") /* ty=Tensor[(6, 13, 6), int16] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1105 = maximum(%1103, %1104) /* ty=Tensor[(6, 13, 6), int16] */;
  %1106 = cast(%1100, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %1107 = shape_of(%1105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%1105, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1110 = @func_4109() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
  %1111 = cast(%1105, dtype="float64") /* ty=Tensor[(6, 13, 6), float64] */;
  %1112 = logical_or(%1084, %1085) /* ty=Tensor[(6, 13, 6), bool] */;
  %1113 = left_shift(%1088, %1089) /* ty=Tensor[(6, 13, 6), int64] */;
  %1114 = %1090.0;
  %1115 = %1095.3;
  %1116 = %1098.2;
  %1117 = less(%1108, %1109) /* ty=Tensor[(6, 13, 6), bool] */;
  %1118 = %1110.1;
  %1119 = cos(%1111) /* ty=Tensor[(6, 13, 6), float64] */;
  (%1112, %1113, %1114, %1115, %var_4252, %1116, %var_4265, %1117, %1118, %1119)
}

def @func_10910() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
  %1120 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1121 = %1120.0;
  %1122 = @func_8735() /* ty=Tensor[(14, 8, 4), float32] */;
  (%1121, %1122)
}

def @func_1148() -> Tensor[(14, 8, 4), float64] {
  %1123 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1124 = %1123.1;
  %1125 = cast(%1124, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  sinh(%1125) /* ty=Tensor[(14, 8, 4), float64] */
}

def @func_8735() -> Tensor[(14, 8, 4), float32] {
  %1126 = @func_8381() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %1126.0
}

def @func_7790() -> (Tensor[(14, 8, 4), bool],) {
  %1127 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %1128 = %1127.1;
  (%1128,)
}

def @func_8128() -> Tensor[(14, 8, 4), bool] {
  @func_8027() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_9588() -> (Tensor[(14, 8, 4), bool],) {
  %1129 = @func_8985() /* ty=Tensor[(14, 8, 4), bool] */;
  (%1129,)
}

def @func_8723() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1130 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1131 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1132 = %1130.1;
  %1133 = %1131.1;
  (%1132, %1133)
}

def @func_7571() -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) {
  %1134 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %1135 = %1134.0;
  %1136 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
  (%1135, %1136)
}

def @func_5621() -> Tensor[(14, 8, 4), bool] {
  %1137 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1137.0
}

def @func_9278() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(84), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %1138 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1139 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1140 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1141 = reshape(%1139, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %1142 = reshape(%1140, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %1143 = @func_1975(%1141, %1142) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %1144 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1145 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1146 = @func_5705() /* ty=Tensor[(14, 8, 4), bool] */;
  %1147 = %1138.0;
  %1148 = %1143.8;
  %1149 = %1144.0;
  %1150 = %1145.0;
  (%1146, %1147, %1148, meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, %1149, %1150)
}

def @func_10541() -> Tensor[(14, 8, 4), bool] {
  @func_6144() /* ty=Tensor[(14, 8, 4), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1476() -> (Tensor[(14, 8, 4), float64],) {
  @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_2323(%var_2277: Tensor[(14, 8, 4), float64], %var_2300: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) {
  %0 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1 = %0.0;
  %2 = cast(%var_2277, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %6 = cast(%var_2277, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %7 = reshape(%6, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %8 = cast(%var_2300, dtype="float32") /* ty=Tensor[(880), float32] */;
  %9 = cast(%var_2300, dtype="float32") /* ty=Tensor[(880), float32] */;
  %10 = reshape(%8, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %11 = reshape(%9, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %12 = @func_435(%10, %11) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %13 = %12.3;
  %14 = cast(%13, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %15 = cast(%13, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %16 = reshape(%14, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %17 = reshape(%15, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %18 = @func_435(%16, %17) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %19 = bitwise_xor(%4, %5) /* ty=Tensor[(14, 8, 4), uint16] */;
  %20 = @func_481(%7) /* ty=Tensor[(14, 8, 4), bool] */;
  %21 = %18.2;
  (%19, %20, %13, %var_2300, %21)
}

def @func_4290(%var_4285: Tensor[(6, 13, 6), int64], %var_4286: Tensor[(6, 13, 6), int64], %var_4287: Tensor[(6, 13, 6), float64], %var_4288: Tensor[(84), float32], %var_4289: Tensor[(294), float32]) -> (Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) {
  %65 = fn (%var_4199: Tensor[(6, 13, 6), int64], %var_4200: Tensor[(6, 13, 6), int64], %var_4241: Tensor[(6, 13, 6), float64], %var_4252: Tensor[(84), float32], %var_4265: Tensor[(294), float32]) -> (Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) {
    %22 = cast(%var_4200, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
    %23 = shape_of(%var_4199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%var_4199, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %26 = bitwise_and(%24, %25) /* ty=Tensor[(6, 13, 6), int64] */;
    %27 = cast(%26, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
    %28 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(%var_4200, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %31 = cast(%var_4200, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
    %32 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
    %33 = cast(%26, dtype="int64") /* ty=Tensor[(6, 13, 6), int64] */;
    %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %35 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %36 = cast(%var_4252, dtype="float32") /* ty=Tensor[(84), float32] */;
    %37 = cast(%var_4252, dtype="float32") /* ty=Tensor[(84), float32] */;
    %38 = reshape(%36, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
    %39 = reshape(%37, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
    %40 = @func_1975(%38, %39) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
    %41 = cast(%var_4265, dtype="float32") /* ty=Tensor[(294), float32] */;
    %42 = reshape(%41, newshape=[7, 42]) /* ty=Tensor[(7, 42), float32] */;
    %43 = @func_2856(%42) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) */;
    %44 = cast(%var_4199, dtype="float64") /* ty=Tensor[(6, 13, 6), float64] */;
    %45 = atanh(%44) /* ty=Tensor[(6, 13, 6), float64] */;
    %46 = cast(%var_4241, dtype="int16") /* ty=Tensor[(6, 13, 6), int16] */;
    %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%45, dtype="int16") /* ty=Tensor[(6, 13, 6), int16] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %50 = maximum(%48, %49) /* ty=Tensor[(6, 13, 6), int16] */;
    %51 = cast(%45, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
    %53 = cast(%50, dtype="bool") /* ty=Tensor[(6, 13, 6), bool] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %55 = @func_4109() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
    %56 = cast(%50, dtype="float64") /* ty=Tensor[(6, 13, 6), float64] */;
    %57 = logical_or(%29, %30) /* ty=Tensor[(6, 13, 6), bool] */;
    %58 = left_shift(%33, %34) /* ty=Tensor[(6, 13, 6), int64] */;
    %59 = %35.0;
    %60 = %40.3;
    %61 = %43.2;
    %62 = less(%53, %54) /* ty=Tensor[(6, 13, 6), bool] */;
    %63 = %55.1;
    %64 = cos(%56) /* ty=Tensor[(6, 13, 6), float64] */;
    (%57, %58, %59, %60, %var_4252, %61, %var_4265, %62, %63, %64)
  };
  %65(%var_4285, %var_4286, %var_4287, %var_4288, %var_4289) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) */
}

def @func_3834(%var_3833: Tensor[(105), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64]) {
  %71 = fn (%var_3824: Tensor[(105), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64]) {
    %66 = cast(%var_3824, dtype="float64") /* ty=Tensor[(105), float64] */;
    %67 = reshape(%66, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %68 = @func_2938(%67) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
    %69 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
    %70 = %68.0;
    (%69, %70, %var_3824)
  };
  %71(%var_3833) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64]) */
}

def @func_569(%var_559: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %72 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %75 = reshape(%74, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %76 = @func_300(%75) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %77 = cast(%var_559, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %78 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%73, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = %76.0;
  %82 = logical_or(%79, %80) /* ty=Tensor[(14, 8, 4), bool] */;
  (%81, %82)
}

def @func_10021(%var_9987: Tensor[(9, 8, 12), bool], %var_9988: Tensor[(9, 8, 12), bool]) -> (Tensor[(9, 8, 12), bool], Tensor[(9, 8, 12), float32], Tensor[(14, 8, 4), bool], Tensor[(15, 6, 14), int16], Tensor[(1260), int16]) {
  %83 = cast(%var_9988, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %84 = shape_of(%var_9987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_9987, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = cast(%var_9988, dtype="float32") /* ty=Tensor[(9, 8, 12), float32] */;
  %88 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %89 = reshape(%88, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), int16] */;
  %90 = logical_and(%85, %86) /* ty=Tensor[(9, 8, 12), bool] */;
  %91 = acosh(%87) /* ty=Tensor[(9, 8, 12), float32] */;
  %92 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %93 = @func_9763(%89) /* ty=Tensor[(15, 6, 14), int16] */;
  (%90, %91, %92, %93, meta[relay.Constant][0] /* ty=Tensor[(1260), int16] */)
}

def @func_4886() -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  %94 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %95 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %96 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %97 = reshape(%95, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %98 = reshape(%96, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %99 = @func_873(%97, %98) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %100 = @func_4667() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %101 = %94.0;
  %102 = %99.4;
  %103 = %100.0;
  (%101, %102, meta[relay.Constant][1] /* ty=Tensor[(240), float64] */, %103)
}

def @func_5903(%var_5900: Tensor[(5, 15, 1), int8], %var_5901: Tensor[(5, 15, 13), int8], %var_5902: Tensor[(105), float64]) -> (Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) {
  %111 = fn (%var_5866: Tensor[(5, 15, 1), int8], %var_5867: Tensor[(5, 15, 13), int8], %var_5880: Tensor[(105), float64]) -> (Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) {
    %104 = cast(%var_5866, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
    %105 = cast(%var_5867, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
    %106 = cast(%var_5880, dtype="float64") /* ty=Tensor[(105), float64] */;
    %107 = reshape(%106, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %108 = @func_2938(%107) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
    %109 = less(%104, %105) /* ty=Tensor[(5, 15, 13), bool] */;
    %110 = %108.1;
    (%109, %110, %var_5880)
  };
  %111(%var_5900, %var_5901, %var_5902) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) */
}

def @func_6092() -> (Tensor[(14, 8, 4), bool],) {
  %113 = fn () -> (Tensor[(14, 8, 4), bool],) {
    %112 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
    (%112,)
  };
  %113() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_3703() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %114 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %115 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %116 = %114.0;
  %117 = %115.0;
  (%116, %117)
}

def @func_9483() -> (Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) {
  @func_9481() /* ty=(Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) */
}

def @func_7706() -> (Tensor[(7, 7, 6), float32],) {
  %118 = @func_7063() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) */;
  %119 = %118.1;
  (%119,)
}

def @func_3675(%var_3673: Tensor[(7, 5, 9), float32], %var_3674: Tensor[(7, 5, 9), float32]) -> (Tensor[(7, 5, 9), float32],) {
  @func_3671(%var_3673, %var_3674) /* ty=(Tensor[(7, 5, 9), float32],) */
}

def @func_9311() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) {
  @func_9309() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) */
}

def @func_10173(%var_10172: Tensor[(1, 432), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int8], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(10, 432), float64], Tensor[(14, 8, 4), bool]) {
  %134 = fn (%var_10148: Tensor[(1, 432), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int8], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(10, 432), float64], Tensor[(14, 8, 4), bool]) {
    %120 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %121 = %120.0;
    %122 = cast(%121, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %123 = reshape(%122, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %124 = cast(%var_10148, dtype="float64") /* ty=Tensor[(1, 432), float64] */;
    %125 = reshape(%124, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), float64] */;
    %126 = @func_8492(%125) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) */;
    %127 = cast(%var_10148, dtype="float64") /* ty=Tensor[(1, 432), float64] */;
    %128 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 432), float64] */, dtype="float64") /* ty=Tensor[(10, 432), float64] */;
    %129 = @func_3781(%123) /* ty=Tensor[(14, 8, 4), int8] */;
    %130 = %126.2;
    %131 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
    %132 = divide(%127, %128) /* ty=Tensor[(10, 432), float64] */;
    %133 = @func_5933() /* ty=Tensor[(14, 8, 4), bool] */;
    (%121, %129, %130, %131, %132, %133)
  };
  %134(%var_10172) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int8], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(10, 432), float64], Tensor[(14, 8, 4), bool]) */
}

def @func_876(%var_874: Tensor[(12, 5, 4), float64], %var_875: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %157 = fn (%var_824: Tensor[(12, 5, 4), float64], %var_825: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
    %135 = cast(%var_825, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %136 = shape_of(%var_824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%var_824, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %139 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %140 = %139.0;
    %141 = cast(%140, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %142 = reshape(%141, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %143 = @func_300(%142) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
    %144 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %145 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
    %146 = %145.0;
    %147 = cast(%146, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %148 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%140, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %151 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %152 = floor_mod(%137, %138) /* ty=Tensor[(12, 5, 4), float64] */;
    %153 = %143.2;
    %154 = %144.0;
    %155 = floor_mod(%149, %150) /* ty=Tensor[(14, 8, 4), float64] */;
    %156 = %151.0;
    (%152, %153, %154, %155, %156)
  };
  %157(%var_874, %var_875) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */
}

def @func_8187() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(2, 13, 1), uint32]) {
  @func_8185() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(2, 13, 1), uint32]) */
}

def @func_9158(%var_9156: Tensor[(4, 220), float32]) -> (Tensor[(4, 220), float64], Tensor[(4, 220), uint8], Tensor[(14, 8, 4), bool]) {
  @func_9155(%var_9156) /* ty=(Tensor[(4, 220), float64], Tensor[(4, 220), uint8], Tensor[(14, 8, 4), bool]) */
}

def @func_11350(%var_11349: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), int64], Tensor[(880), float32], Tensor[(13, 14, 5), float32]) {
  %166 = fn (%var_11332: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), int64], Tensor[(880), float32], Tensor[(13, 14, 5), float32]) {
    %158 = @func_7571() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) */;
    %159 = cast(%var_11332, dtype="float32") /* ty=Tensor[(880), float32] */;
    %160 = reshape(%159, newshape=[4, 220]) /* ty=Tensor[(4, 220), float32] */;
    %161 = @func_1513(%160) /* ty=(Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) */;
    %162 = @func_5668() /* ty=(Tensor[(13, 14, 5), float32],) */;
    %163 = %158.0;
    %164 = %161.0;
    %165 = %162.0;
    (%163, %164, %var_11332, %165)
  };
  %166(%var_11349) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), int64], Tensor[(880), float32], Tensor[(13, 14, 5), float32]) */
}

def @func_5810() -> (Tensor[(14, 8, 4), uint32],) {
  %167 = @func_5436() /* ty=Tensor[(14, 8, 4), uint32] */;
  (%167,)
}

def @func_8015() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) {
  %176 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) {
    %168 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %169 = @func_7571() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) */;
    %170 = cast(meta[relay.Constant][3] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %171 = reshape(%170, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %172 = @func_3474(%171) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
    %173 = %168.1;
    %174 = %169.1;
    %175 = %172.2;
    (%173, %174, %175, meta[relay.Constant][3] /* ty=Tensor[(84), float32] */)
  };
  %176() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) */
}

def @func_9085() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(7, 7, 6), float32], Tensor[(14, 8, 4), bool]) {
  %177 = @func_7790() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %178 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %179 = @func_7706() /* ty=(Tensor[(7, 7, 6), float32],) */;
  %180 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %181 = %177.0;
  %182 = %178.1;
  %183 = %179.0;
  %184 = %180.0;
  (%181, %182, %183, %184)
}

def @func_7451() -> Tensor[(14, 8, 4), bool] {
  %185 = fn () -> Tensor[(14, 8, 4), bool] {
    @func_5092() /* ty=Tensor[(14, 8, 4), bool] */
  };
  %185() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_10662() -> Tensor[(14, 8, 4), float64] {
  @func_10660() /* ty=Tensor[(14, 8, 4), float64] */
}

def @func_8203(%var_8201: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(240), float64], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
  %186 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  %187 = cast(%186, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %188 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %189 = reshape(%187, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %190 = reshape(%188, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %191 = @func_1217(%189, %190) /* ty=(Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) */;
  %192 = cast(%var_8201, dtype="float32") /* ty=Tensor[(880), float32] */;
  %193 = cast(%var_8201, dtype="float32") /* ty=Tensor[(880), float32] */;
  %194 = reshape(%192, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %195 = reshape(%193, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %196 = @func_435(%194, %195) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %197 = %191.1;
  %198 = %196.1;
  (%186, %197, meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, %198, %var_8201)
}

def @func_8649() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_8647() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3376(%var_3365: Tensor[(15, 16, 10), float32], %var_3371: Tensor[(240), float64]) -> (Tensor[(15, 16, 10), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %199 = cast(%var_3365, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %200 = cast(%var_3371, dtype="float64") /* ty=Tensor[(240), float64] */;
  %201 = cast(%var_3371, dtype="float64") /* ty=Tensor[(240), float64] */;
  %202 = reshape(%200, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %203 = reshape(%201, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %204 = @func_873(%202, %203) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %205 = erf(%199) /* ty=Tensor[(15, 16, 10), float32] */;
  %206 = %204.2;
  (%205, %206, %var_3371)
}

def @func_7680() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %207 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %208 = @func_5621() /* ty=Tensor[(14, 8, 4), bool] */;
  (%207, %208)
}

def @func_11250(%var_11248: Tensor[(5, 4, 16), int16], %var_11249: Tensor[(5, 4, 16), int16]) -> (Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), float64]) {
  %216 = fn (%var_11231: Tensor[(5, 4, 16), int16], %var_11232: Tensor[(5, 4, 16), int16]) -> (Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), float64]) {
    %209 = cast(%var_11232, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
    %210 = shape_of(%var_11231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%var_11231, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %213 = cast(%var_11231, dtype="float64") /* ty=Tensor[(5, 4, 16), float64] */;
    %214 = greater(%211, %212) /* ty=Tensor[(5, 4, 16), bool] */;
    %215 = sigmoid(%213) /* ty=Tensor[(5, 4, 16), float64] */;
    (%214, %215)
  };
  %216(%var_11248, %var_11249) /* ty=(Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), float64]) */
}

def @func_7737() -> Tensor[(14, 8, 4), bool] {
  @func_7735() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_10566() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
  %221 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
    %217 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %218 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %219 = %217.0;
    %220 = %218.1;
    (%219, %220)
  };
  %221() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_8494(%var_8493: Tensor[(12, 9, 4), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) {
  %239 = fn (%var_8467: Tensor[(12, 9, 4), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) {
    %222 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %223 = reshape(%222, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %224 = @func_569(%223) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %225 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %226 = cast(meta[relay.Constant][6] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %227 = reshape(%226, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %228 = @func_3997(%227) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %229 = cast(%var_8467, dtype="float64") /* ty=Tensor[(12, 9, 4), float64] */;
    %230 = atan(%229) /* ty=Tensor[(12, 9, 4), float64] */;
    %231 = cast(%var_8467, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
    %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %233 = cast(%230, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %235 = %224.0;
    %236 = %225.0;
    %237 = %228.3;
    %238 = greater(%233, %234) /* ty=Tensor[(12, 9, 4), bool] */;
    (%235, meta[relay.Constant][5] /* ty=Tensor[(448), bool] */, %236, %237, meta[relay.Constant][6] /* ty=Tensor[(880), float32] */, %238)
  };
  %239(%var_8493) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(448), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(12, 9, 4), bool]) */
}

def @func_1358() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
  %243 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) {
    %240 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
    %241 = %240.1;
    %242 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
    (%241, %242)
  };
  %243() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_6888() -> (Tensor[(14, 8, 4), float64],) {
  %244 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %245 = %244.0;
  (%245,)
}

def @func_1743() -> (Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %246 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %247 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %248 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %251 = %246.2;
  %252 = %247.1;
  %253 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %254 = tan(%250) /* ty=Tensor[(14, 8, 4), float64] */;
  (%251, %252, %253, %254)
}

def @func_4605() -> (Tensor[(14, 8, 4), float64],) {
  %257 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %255 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %256 = %255.0;
    (%256,)
  };
  %257() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_2856(%var_2850: Tensor[(7, 42), float32]) -> (Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) {
  %258 = cast(%var_2850, dtype="float32") /* ty=Tensor[(7, 42), float32] */;
  %259 = reshape(%258, newshape=[7, 7, 6]) /* ty=Tensor[(7, 7, 6), float32] */;
  %260 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  %261 = @func_2534(%259) /* ty=Tensor[(7, 7, 6), float32] */;
  (%260, %261, %var_2850)
}

def @func_1217(%var_1201: Tensor[(14, 8, 4), bool], %var_1210: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) {
  %262 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %263 = %262.0;
  %264 = cast(%var_1201, dtype="uint64") /* ty=Tensor[(14, 8, 4), uint64] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="uint64") /* ty=Tensor[(14, 8, 4), uint64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %268 = cast(%var_1210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %269 = cast(%var_1210, dtype="float64") /* ty=Tensor[(240), float64] */;
  %270 = reshape(%268, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %271 = reshape(%269, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %272 = @func_873(%270, %271) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %273 = right_shift(%266, %267) /* ty=Tensor[(14, 8, 4), uint64] */;
  %274 = %272.1;
  (%273, %274, %var_1210)
}

def @func_4781() -> (Tensor[(14, 8, 4), float32],) {
  %275 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %276 = %275.5;
  (%276,)
}

def @func_5093() -> Tensor[(14, 8, 4), bool] {
  %278 = fn () -> Tensor[(14, 8, 4), bool] {
    %277 = @func_3703() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %277.0
  };
  %278() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_3671(%var_3665: Tensor[(7, 5, 9), float32], %var_3666: Tensor[(7, 5, 9), float32]) -> (Tensor[(7, 5, 9), float32],) {
  %279 = cast(%var_3666, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %280 = shape_of(%var_3665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_3665, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %283 = floor_divide(%281, %282) /* ty=Tensor[(7, 5, 9), float32] */;
  (%283,)
}

def @func_3235() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_8575() -> (Tensor[(14, 8, 4), bool],) {
  @func_8573() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_4783() -> (Tensor[(14, 8, 4), float32],) {
  @func_4781() /* ty=(Tensor[(14, 8, 4), float32],) */
}

def @func_7900() -> (Tensor[(105), float64], Tensor[(105), float64], Tensor[(7, 7, 6), float32]) {
  %297 = fn () -> (Tensor[(105), float64], Tensor[(105), float64], Tensor[(7, 7, 6), float32]) {
    %284 = cast(meta[relay.Constant][7] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %285 = reshape(%284, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %286 = @func_2938(%285) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */;
    %287 = @func_7706() /* ty=(Tensor[(7, 7, 6), float32],) */;
    %288 = %287.0;
    %289 = cast(%288, dtype="float64") /* ty=Tensor[(7, 7, 6), float64] */;
    %290 = acosh(%289) /* ty=Tensor[(7, 7, 6), float64] */;
    %291 = cast(%288, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
    %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %293 = cast(%290, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
    %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %295 = %286.1;
    %296 = power(%293, %294) /* ty=Tensor[(7, 7, 6), float32] */;
    (%295, meta[relay.Constant][7] /* ty=Tensor[(105), float64] */, %296)
  };
  %297() /* ty=(Tensor[(105), float64], Tensor[(105), float64], Tensor[(7, 7, 6), float32]) */
}

def @func_1221(%var_1219: Tensor[(14, 8, 4), bool], %var_1220: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) {
  @func_1217(%var_1219, %var_1220) /* ty=(Tensor[(14, 8, 4), uint64], Tensor[(14, 8, 4), uint32], Tensor[(240), float64]) */
}

def @func_3705() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_3703() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_9043() -> (Tensor[(14, 8, 4), float64], Tensor[(7, 14, ?), uint8], Tensor[(1, 98), uint8]) {
  %298 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %299 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 98), uint8] */, dtype="uint8") /* ty=Tensor[(1, 98), uint8] */;
  %300 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 98), uint8] */, dtype="uint8") /* ty=Tensor[(1, 98), uint8] */;
  %301 = reshape(%299, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), uint8] */;
  %302 = reshape(%300, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), uint8] */;
  %303 = %298.0;
  %304 = @func_6542(%301, %302) /* ty=Tensor[(7, 14, ?), uint8] */;
  (%303, %304, meta[relay.Constant][8] /* ty=Tensor[(1, 98), uint8] */)
}

def @func_3477(%var_3475: Tensor[(84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) {
  @func_3474(%var_3475) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */
}

def @func_8106() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %305 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %306 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %307 = %305.0;
  %308 = %306.1;
  (%307, %308)
}

def @func_7708() -> (Tensor[(7, 7, 6), float32],) {
  @func_7706() /* ty=(Tensor[(7, 7, 6), float32],) */
}

def @func_6842() -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float32]) {
  %313 = fn () -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float32]) {
    %309 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
    %310 = @func_4781() /* ty=(Tensor[(14, 8, 4), float32],) */;
    %311 = %309.1;
    %312 = %310.0;
    (%311, %312)
  };
  %313() /* ty=(Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float32]) */
}

def @func_8365() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
  %320 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
    %314 = @func_6091() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %315 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %316 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
    %317 = %314.0;
    %318 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
    %319 = %315.0;
    (%316, %317, %318, %319)
  };
  %320() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */
}

def @func_3310() -> (Tensor[(14, 8, 4), float64],) {
  %325 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %321 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %324 = atanh(%323) /* ty=Tensor[(14, 8, 4), float64] */;
    (%324,)
  };
  %325() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_9693(%var_9692: Tensor[(8, 8, 14), float32]) -> (Tensor[(8, 8, 14), float32],) {
  %328 = fn (%var_9688: Tensor[(8, 8, 14), float32]) -> (Tensor[(8, 8, 14), float32],) {
    %326 = cast(%var_9688, dtype="float32") /* ty=Tensor[(8, 8, 14), float32] */;
    %327 = sinh(%326) /* ty=Tensor[(8, 8, 14), float32] */;
    (%327,)
  };
  %328(%var_9692) /* ty=(Tensor[(8, 8, 14), float32],) */
}

def @func_9417(%var_9416: Tensor[(1, 84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(1, 84), float32], Tensor[(14, 8, 4), bool]) {
  %336 = fn (%var_9405: Tensor[(1, 84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(1, 84), float32], Tensor[(14, 8, 4), bool]) {
    %329 = @func_6076() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %330 = cast(%var_9405, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
    %331 = reshape(%330, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %332 = @func_3474(%331) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
    %333 = %329.0;
    %334 = %332.3;
    %335 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
    (%333, %334, %var_9405, %335)
  };
  %336(%var_9416) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(1, 84), float32], Tensor[(14, 8, 4), bool]) */
}

def @func_8129() -> Tensor[(14, 8, 4), bool] {
  %337 = fn () -> Tensor[(14, 8, 4), bool] {
    @func_8027() /* ty=Tensor[(14, 8, 4), bool] */
  };
  %337() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_10695(%var_10685: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), bool], Tensor[(14, 8, 4), float32]) {
  %338 = @func_5668() /* ty=(Tensor[(13, 14, 5), float32],) */;
  %339 = %338.0;
  %340 = cast(%var_10685, dtype="bool") /* ty=Tensor[(13, 14, 5), bool] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="bool") /* ty=Tensor[(13, 14, 5), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %344 = logical_and(%342, %343) /* ty=Tensor[(13, 14, 5), bool] */;
  %345 = @func_8735() /* ty=Tensor[(14, 8, 4), float32] */;
  (%344, %345)
}

def @func_7790() -> (Tensor[(14, 8, 4), bool],) {
  %346 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %347 = %346.1;
  (%347,)
}

def @func_3055() -> (Tensor[(14, 8, 4), bool],) {
  %348 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %349 = %348.1;
  (%349,)
}

def @func_435(%var_343: Tensor[(11, 10, 8), float32], %var_416: Tensor[(11, 10, 8), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) {
  %350 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %351 = cast(%var_343, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %352 = %350.0;
  %353 = cast(%352, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %354 = reshape(%353, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %355 = @func_300(%354) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %356 = cast(%var_343, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %357 = log10(%356) /* ty=Tensor[(11, 10, 8), float32] */;
  %358 = cast(%var_343, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %362 = left_shift(%360, %361) /* ty=Tensor[(11, 10, 8), int8] */;
  %363 = cast(%362, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %364 = sqrt(%363) /* ty=Tensor[(11, 10, 8), float32] */;
  %365 = cast(%362, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %369 = cast(%362, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %370 = cast(%var_416, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %371 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%364, dtype="int16") /* ty=Tensor[(11, 10, 8), int16] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %374 = log2(%351) /* ty=Tensor[(11, 10, 8), float64] */;
  %375 = %355.2;
  %376 = bitwise_xor(%367, %368) /* ty=Tensor[(11, 10, 8), int16] */;
  %377 = asin(%369) /* ty=Tensor[(11, 10, 8), float64] */;
  %378 = maximum(%372, %373) /* ty=Tensor[(11, 10, 8), int16] */;
  (%352, %374, %375, %376, %377, %378)
}

def @func_2534(%var_2531: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  %379 = cast(%var_2531, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  atan(%379) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_9279() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(84), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %393 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(84), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
    %380 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %381 = cast(meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %382 = cast(meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %383 = reshape(%381, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
    %384 = reshape(%382, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
    %385 = @func_1975(%383, %384) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
    %386 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %387 = @func_2997() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %388 = @func_5705() /* ty=Tensor[(14, 8, 4), bool] */;
    %389 = %380.0;
    %390 = %385.8;
    %391 = %386.0;
    %392 = %387.0;
    (%388, %389, %390, meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, %391, %392)
  };
  %393() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(84), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_8916() -> Tensor[(11, 16, 10), float64] {
  @func_8914() /* ty=Tensor[(11, 16, 10), float64] */
}

def @func_5370(%var_5360: Tensor[(18), uint32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(18), uint32]) {
  %394 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %395 = cast(%var_5360, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %396 = reshape(%395, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint32] */;
  %397 = @func_5331(%396) /* ty=(Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) */;
  %398 = %394.0;
  %399 = %397.1;
  (%398, %399, %var_5360)
}

def @func_9872() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %404 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %400 = @func_8647() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %401 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %402 = %400.0;
    %403 = %401.2;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3997(%var_3975: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %405 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %406 = %405.1;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %408 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %411 = cast(%var_3975, dtype="float32") /* ty=Tensor[(880), float32] */;
  %412 = reshape(%410, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
  %413 = reshape(%411, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %414 = @func_2323(%412, %413) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
  %415 = @func_2968() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %416 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %417 = asinh(%407) /* ty=Tensor[(14, 8, 4), float64] */;
  %418 = %414.4;
  %419 = %415.1;
  %420 = %416.2;
  (%417, %409, %418, %var_3975, %419, %420)
}

def @func_9087() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(7, 7, 6), float32], Tensor[(14, 8, 4), bool]) {
  @func_9085() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(7, 7, 6), float32], Tensor[(14, 8, 4), bool]) */
}

def @func_9471() -> Tensor[(14, 8, 4), bool] {
  %421 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %421.1
}

def @func_572(%var_570: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_569(%var_570) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_5291() -> Tensor[(14, 8, 4), bool] {
  %422 = @func_4109() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
  %422.1
}

def @func_10724() -> Tensor[(14, 8, 4), bool] {
  %423 = @func_8723() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %423.0
}

def @func_7572() -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) {
  %427 = fn () -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) {
    %424 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
    %425 = %424.0;
    %426 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
    (%425, %426)
  };
  %427() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), uint32]) */
}

def @func_2969() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %432 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
    %428 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %429 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %430 = %428.1;
    %431 = %429.2;
    (%430, %431)
  };
  %432() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */
}

def @func_737() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_1700() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %454 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %433 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %434 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %435 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %436 = reshape(%434, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
    %437 = reshape(%435, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
    %438 = @func_873(%436, %437) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
    %439 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %440 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
    %441 = cast(%440, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %442 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %443 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %444 = %442.0;
    %445 = cast(%444, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %446 = reshape(%445, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %447 = %433.0;
    %448 = %438.3;
    %449 = %439.0;
    %450 = log(%441) /* ty=Tensor[(14, 8, 4), float64] */;
    %451 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
    %452 = %443.0;
    %453 = @func_481(%446) /* ty=Tensor[(14, 8, 4), bool] */;
    (%447, %448, meta[relay.Constant][10] /* ty=Tensor[(240), float64] */, %449, %450, %451, %444, %452, %453)
  };
  %454() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_108() -> (Tensor[(14, 8, 4), bool],) {
  %455 = cast(meta[relay.Constant][11] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %456 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 8, 4), uint8] */, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %457 = equal(%455, %456) /* ty=Tensor[(14, 8, 4), bool] */;
  (%457,)
}

def @func_5622() -> Tensor[(14, 8, 4), bool] {
  %459 = fn () -> Tensor[(14, 8, 4), bool] {
    %458 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %458.0
  };
  %459() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_7651() -> (Tensor[(14, 8, 4), float64],) {
  %460 = @func_3703() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %461 = %460.1;
  (%461,)
}

def @func_2625() -> (Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) {
  @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */
}

def @func_5935() -> Tensor[(14, 8, 4), bool] {
  @func_5933() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_2027(%var_2026: int8) -> (Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) {
  %469 = fn (%var_2016: int8) -> (Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) {
    %462 = cast(%var_2016, dtype="bool") /* ty=bool */;
    %463 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 13, 1), int8] */, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
    %464 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %465 = reshape(%464, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %466 = @func_569(%465) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %467 = less(%462, %463) /* ty=Tensor[(2, 13, 1), bool] */;
    %468 = %466.0;
    (%467, %468, meta[relay.Constant][14] /* ty=Tensor[(448), bool] */)
  };
  %469(%var_2026) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */
}

def @func_5706() -> Tensor[(14, 8, 4), bool] {
  %471 = fn () -> Tensor[(14, 8, 4), bool] {
    %470 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %470.0
  };
  %471() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_3233() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %472 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %473 = @func_2832() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %474 = %472.3;
  %475 = %473.0;
  (%474, %475)
}

def @func_483(%var_482: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), bool] {
  %482 = fn (%var_469: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), bool] {
    %476 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %477 = %476.0;
    %478 = cast(%var_469, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%477, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%480, %481) /* ty=Tensor[(14, 8, 4), bool] */
  };
  %482(%var_482) /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_3648(%var_3620: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) {
  %483 = cast(%var_3620, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %484 = acosh(%483) /* ty=Tensor[(10, 13, 1), float64] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %486 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %487 = sqrt(%485) /* ty=Tensor[(10, 13, 1), float64] */;
  %488 = %486.3;
  (%487, %488)
}

def @func_1185() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) {
  @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */
}

def @func_4646() -> (Tensor[(14, 8, 4), float32],) {
  %490 = fn () -> (Tensor[(14, 8, 4), float32],) {
    %489 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
    (%489,)
  };
  %490() /* ty=(Tensor[(14, 8, 4), float32],) */
}

def @func_5050(%var_5048: Tensor[(240), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  @func_5047(%var_5048) /* ty=(Tensor[(240), float64], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_9309() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) {
  %491 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %492 = @func_4781() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %493 = %491.0;
  %494 = %492.0;
  (%493, %494)
}

def @func_8431() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %499 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %495 = @func_2832() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %496 = %495.0;
    %497 = @func_5705() /* ty=Tensor[(14, 8, 4), bool] */;
    %498 = @func_7621() /* ty=Tensor[(14, 8, 4), bool] */;
    (%496, %497, %498)
  };
  %499() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_6667() -> Tensor[(14, 8, 4), bool] {
  @func_6665() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_6497(%var_6489: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
  %500 = cast(%var_6489, dtype="float64") /* ty=Tensor[(130), float64] */;
  %501 = reshape(%500, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %502 = @func_5455(%501) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %503 = @func_2227() /* ty=Tensor[(14, 8, 4), bool] */;
  %504 = %502.1;
  (%503, %504, %var_6489)
}

def @func_10698(%var_10696: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), bool], Tensor[(14, 8, 4), float32]) {
  @func_10695(%var_10696) /* ty=(Tensor[(13, 14, 5), bool], Tensor[(14, 8, 4), float32]) */
}

def @func_11026() -> Tensor[(14, 8, 4), uint32] {
  @func_11024() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_3957() -> Tensor[(14, 8, 4), float32] {
  %508 = fn () -> Tensor[(14, 8, 4), float32] {
    %505 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
    %506 = %505.0;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
    sin(%507) /* ty=Tensor[(14, 8, 4), float32] */
  };
  %508() /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_2833() -> (Tensor[(14, 8, 4), float64],) {
  %511 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %509 = @func_1853() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %510 = %509.0;
    (%510,)
  };
  %511() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_6542(%var_6537: Tensor[(7, 14, 1), uint8], %var_6538: Tensor[(7, 14, 1), uint8]) -> Tensor[(7, 14, ?), uint8] {
  %512 = cast(%var_6538, dtype="uint8") /* ty=Tensor[(7, 14, 1), uint8] */;
  %513 = shape_of(%var_6537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%var_6537, dtype="uint8") /* ty=Tensor[(7, 14, 1), uint8] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%514, %515) /* ty=Tensor[(7, 14, ?), uint8] */
}

def @func_1516(%var_1514: Tensor[(4, 220), float32]) -> (Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) {
  @func_1513(%var_1514) /* ty=(Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) */
}

def @func_5205() -> Tensor[(14, 8, 4), float64] {
  %517 = fn () -> Tensor[(14, 8, 4), float64] {
    %516 = @func_4604() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %516.0
  };
  %517() /* ty=Tensor[(14, 8, 4), float64] */
}

def @func_11136(%var_11134: Tensor[(84, 1), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(2, 13, 4), int8], Tensor[(14, 8, 4), float64], Tensor[(84, 1), float32]) {
  %518 = @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */;
  %519 = cast(%518, dtype="int8") /* ty=Tensor[(2, 13, 1), int8] */;
  %520 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 13, 4), uint32] */, dtype="int8") /* ty=Tensor[(2, 13, 4), int8] */;
  %521 = cast(%var_11134, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %522 = reshape(%521, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %523 = @func_3474(%522) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) */;
  %524 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %525 = bitwise_or(%519, %520) /* ty=Tensor[(2, 13, 4), int8] */;
  %526 = %523.1;
  (%524, %525, %526, %var_11134)
}

def @func_3057() -> (Tensor[(14, 8, 4), bool],) {
  @func_3055() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_7792() -> (Tensor[(14, 8, 4), bool],) {
  @func_7790() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_7506() -> (Tensor[(2, 13, 1), uint32],) {
  %527 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
  %528 = %527.1;
  (%528,)
}

def @func_6145() -> Tensor[(14, 8, 4), bool] {
  %530 = fn () -> Tensor[(14, 8, 4), bool] {
    %529 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %529.0
  };
  %530() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_5933() -> Tensor[(14, 8, 4), bool] {
  @func_5092() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_6546(%var_6544: Tensor[(7, 14, 1), uint8], %var_6545: Tensor[(7, 14, 1), uint8]) -> Tensor[(7, 14, ?), uint8] {
  @func_6542(%var_6544, %var_6545) /* ty=Tensor[(7, 14, ?), uint8] */
}

def @func_5333(%var_5332: Tensor[(1, 9, 2), uint32]) -> (Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) {
  %538 = fn (%var_5309: Tensor[(1, 9, 2), uint32]) -> (Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) {
    %531 = cast(meta[relay.Constant][16] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %532 = cast(%var_5309, dtype="uint32") /* ty=Tensor[(1, 9, 2), uint32] */;
    %533 = logical_xor(%531, %532) /* ty=Tensor[(1, 9, 2), uint32] */;
    %534 = cast(%533, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
    %535 = @func_3233() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %536 = acos(%534) /* ty=Tensor[(1, 9, 2), float32] */;
    %537 = %535.1;
    (%536, %537)
  };
  %538(%var_5332) /* ty=(Tensor[(1, 9, 2), float32], Tensor[(14, 8, 4), float64]) */
}

def @func_2327(%var_2325: Tensor[(14, 8, 4), float64], %var_2326: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) {
  @func_2323(%var_2325, %var_2326) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */
}

def @func_3504() -> Tensor[(13, 14, 5), float32] {
  @func_3502() /* ty=Tensor[(13, 14, 5), float32] */
}

def @func_2820(%var_2817: Tensor[(8, 3, 14), float64], %var_2818: Tensor[(8, 3, 14), float64], %var_2819: Tensor[(880), float32]) -> (Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
  %556 = fn (%var_2727: Tensor[(8, 3, 14), float64], %var_2728: Tensor[(8, 3, 14), float64], %var_2804: Tensor[(880), float32]) -> (Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
    %539 = cast(%var_2728, dtype="bool") /* ty=Tensor[(8, 3, 14), bool] */;
    %540 = shape_of(%var_2727, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(%var_2727, dtype="bool") /* ty=Tensor[(8, 3, 14), bool] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %543 = @func_1853() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %544 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
    %545 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %546 = %544.0;
    %547 = cast(%546, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %548 = cast(%var_2804, dtype="float32") /* ty=Tensor[(880), float32] */;
    %549 = reshape(%547, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
    %550 = reshape(%548, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %551 = @func_2323(%549, %550) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
    %552 = not_equal(%541, %542) /* ty=Tensor[(8, 3, 14), bool] */;
    %553 = %543.0;
    %554 = %545.0;
    %555 = %551.1;
    (%552, %553, %546, %554, %555, %var_2804)
  };
  %556(%var_2817, %var_2818, %var_2819) /* ty=(Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */
}

def @func_3094(%var_3092: int8) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) {
  @func_3091(%var_3092) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) */
}

def @func_10367() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(10, 13, 1), float64], Tensor[(130), float64]) {
  %565 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(10, 13, 1), float64], Tensor[(130), float64]) {
    %557 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %558 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %559 = cast(meta[relay.Constant][17] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %560 = reshape(%559, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %561 = @func_3648(%560) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) */;
    %562 = %557.0;
    %563 = %558.4;
    %564 = %561.0;
    (%562, %563, %564, meta[relay.Constant][17] /* ty=Tensor[(130), float64] */)
  };
  %565() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(10, 13, 1), float64], Tensor[(130), float64]) */
}

def @func_8725() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_8723() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_1757() -> Tensor[(14, 8, 4), uint32] {
  @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @main(%var_11513: Tensor[(1, 16, 9), uint64]) -> Tensor[(8, 16, 9), uint64] {
  %566 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(1, 16, 9), uint64] */;
  %567 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 16, 9), uint64] */, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  bitwise_or(%566, %567) /* ty=Tensor[(8, 16, 9), uint64] */
}

def @func_735() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %568 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %569 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %570 = %568.0;
  %571 = %569.0;
  (%570, %571)
}

def @func_6045() -> (Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_6043() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_237() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_10597() -> (Tensor[(14, 8, 4), float64],) {
  %572 = @func_9309() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) */;
  %573 = %572.0;
  (%573,)
}

def @func_7735() -> Tensor[(14, 8, 4), bool] {
  %574 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %574.0
}

def @func_3403() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %575 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %576 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %577 = %575.1;
  %578 = %576.0;
  (%577, %578)
}

def @func_110() -> (Tensor[(14, 8, 4), bool],) {
  @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_2537(%var_2535: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  @func_2534(%var_2535) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_10541() -> Tensor[(14, 8, 4), bool] {
  @func_6144() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_7008() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) {
  %579 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %580 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %581 = @func_4645() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %582 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %583 = cast(%582, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %584 = reshape(%583, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %585 = @func_569(%584) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %586 = %579.1;
  %587 = %580.1;
  %588 = %581.0;
  %589 = %585.0;
  (%586, %582, %587, %588, %589)
}

def @func_1854() -> (Tensor[(14, 8, 4), float64],) {
  %594 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %590 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %591 = %590.0;
    %592 = cast(%591, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %593 = cosh(%592) /* ty=Tensor[(14, 8, 4), float64] */;
    (%593,)
  };
  %594() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_5591(%var_5590: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], int8, Tensor[(14, 8, 4), bool], Tensor[(336), float64], Tensor[(880), float32], Tensor[(14, 8, 4), float64]) {
  %614 = fn (%var_5558: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], int8, Tensor[(14, 8, 4), bool], Tensor[(336), float64], Tensor[(880), float32], Tensor[(14, 8, 4), float64]) {
    %595 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %596 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %597 = cast(%var_5558, dtype="int8") /* ty=int8 */;
    %598 = reshape(%597, newshape=[]) /* ty=int8 */;
    %599 = @func_3091(%598) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) */;
    %600 = cast(meta[relay.Constant][19] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %601 = cast(meta[relay.Constant][19] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %602 = cast(meta[relay.Constant][20] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %603 = reshape(%600, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
    %604 = reshape(%601, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
    %605 = reshape(%602, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %606 = @func_2816(%603, %604, %605) /* ty=(Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */;
    %607 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
    %608 = %595.1;
    %609 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
    %610 = %596.0;
    %611 = %599.0;
    %612 = %606.3;
    %613 = %607.1;
    (%608, %609, %610, %611, %var_5558, %612, meta[relay.Constant][19] /* ty=Tensor[(336), float64] */, meta[relay.Constant][20] /* ty=Tensor[(880), float32] */, %613)
  };
  %614(%var_5590) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], int8, Tensor[(14, 8, 4), bool], Tensor[(336), float64], Tensor[(880), float32], Tensor[(14, 8, 4), float64]) */
}

def @func_10512() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_10510() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3091(%var_3074: int8) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) {
  %615 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %616 = cast(%var_3074, dtype="int8") /* ty=int8 */;
  %617 = reshape(%616, newshape=[]) /* ty=int8 */;
  %618 = @func_2025(%617) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
  %619 = %615.4;
  %620 = %618.1;
  %621 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  (%619, %620, %var_3074, %621)
}

def @func_6764(%var_6763: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], int8) {
  %628 = fn (%var_6739: int8) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], int8) {
    %622 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %623 = cast(%var_6739, dtype="int8") /* ty=int8 */;
    %624 = reshape(%623, newshape=[]) /* ty=int8 */;
    %625 = @func_3091(%624) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), float64]) */;
    %626 = %622.3;
    %627 = %625.3;
    (%626, %627, %var_6739)
  };
  %628(%var_6763) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], int8) */
}

def @func_7183() -> (Tensor[(14, 8, 4), bool],) {
  %629 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  (%629,)
}

def @func_2859(%var_2857: Tensor[(7, 42), float32]) -> (Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) {
  @func_2856(%var_2857) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(7, 7, 6), float32], Tensor[(7, 42), float32]) */
}

def @func_6043() -> (Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(880), float32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %630 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %631 = cast(meta[relay.Constant][21] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %632 = reshape(%631, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %633 = @func_2694(%632) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) */;
  %634 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %635 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %636 = %630.2;
  %637 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  %638 = %633.2;
  %639 = %634.3;
  %640 = %635.1;
  (%636, %637, %638, meta[relay.Constant][21] /* ty=Tensor[(880), float32] */, %639, %640)
}

def @func_1465() -> Tensor[(14, 8, 4), bool] {
  %642 = fn () -> Tensor[(14, 8, 4), bool] {
    %641 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %641.0
  };
  %642() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_4668() -> (Tensor[(14, 8, 4), float64],) {
  %645 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %643 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %644 = %643.0;
    (%644,)
  };
  %645() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_8465(%var_8463: Tensor[(3, 12, 13), uint8], %var_8464: Tensor[(3, 12, 13), uint8]) -> (Tensor[(3, 12, 13), uint8], Tensor[(3, 12, 13), float64]) {
  @func_8461(%var_8463, %var_8464) /* ty=(Tensor[(3, 12, 13), uint8], Tensor[(3, 12, 13), float64]) */
}

def @func_6076() -> (Tensor[(14, 8, 4), bool],) {
  %646 = @func_3055() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %647 = %646.0;
  (%647,)
}

def @func_1183() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) {
  %648 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %649 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %650 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 220), float32] */, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %651 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 220), float32] */, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %652 = reshape(%650, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %653 = reshape(%651, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %654 = @func_435(%652, %653) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %655 = %648.1;
  %656 = %649.1;
  %657 = %654.5;
  (%655, %656, %657, meta[relay.Constant][22] /* ty=Tensor[(4, 220), float32] */)
}

def @func_1118() -> Tensor[(14, 8, 4), uint32] {
  @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_9481() -> (Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) {
  %658 = cast(meta[relay.Constant][23] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %659 = reshape(%658, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %660 = @func_6497(%659) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
  %661 = @func_7088() /* ty=Tensor[(8, 110), float64] */;
  %662 = %660.0;
  (%661, %662, meta[relay.Constant][23] /* ty=Tensor[(130), float64] */)
}

def @func_7089() -> Tensor[(8, 110), float64] {
  %663 = fn () -> Tensor[(8, 110), float64] {
    @func_4378() /* ty=Tensor[(8, 110), float64] */
  };
  %663() /* ty=Tensor[(8, 110), float64] */
}

def @func_652() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_10911() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
  %667 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
    %664 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %665 = %664.0;
    %666 = @func_8735() /* ty=Tensor[(14, 8, 4), float32] */;
    (%665, %666)
  };
  %667() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */
}

def @func_8461(%var_8448: Tensor[(3, 12, 13), uint8], %var_8449: Tensor[(3, 12, 13), uint8]) -> (Tensor[(3, 12, 13), uint8], Tensor[(3, 12, 13), float64]) {
  %668 = cast(%var_8449, dtype="uint8") /* ty=Tensor[(3, 12, 13), uint8] */;
  %669 = shape_of(%var_8448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_8448, dtype="uint8") /* ty=Tensor[(3, 12, 13), uint8] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %672 = cast(%var_8449, dtype="float64") /* ty=Tensor[(3, 12, 13), float64] */;
  %673 = minimum(%670, %671) /* ty=Tensor[(3, 12, 13), uint8] */;
  %674 = asin(%672) /* ty=Tensor[(3, 12, 13), float64] */;
  (%673, %674)
}

def @func_11139(%var_11137: Tensor[(84, 1), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(2, 13, 4), int8], Tensor[(14, 8, 4), float64], Tensor[(84, 1), float32]) {
  @func_11136(%var_11137) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(2, 13, 4), int8], Tensor[(14, 8, 4), float64], Tensor[(84, 1), float32]) */
}

def @func_235() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %675 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %676 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %677 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %678 = %675.0;
  %679 = %676.0;
  %680 = %677.0;
  (%678, %679, %680)
}

def @func_8597() -> (Tensor[(14, 8, 4), float64],) {
  %683 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %681 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %682 = %681.1;
    (%682,)
  };
  %683() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_10847(%var_10814: Tensor[(1, 75), int8], %var_10815: Tensor[(975), int8]) -> (Tensor[(1, 75), int8], Tensor[(975), int8], Tensor[(2, 13, 105), int32], Tensor[(2, 13, 105), bool], Tensor[(130), float64]) {
  %684 = cast(%var_10814, dtype="int8") /* ty=Tensor[(1, 75), int8] */;
  %685 = cast(%var_10815, dtype="int8") /* ty=Tensor[(975), int8] */;
  %686 = cast(meta[relay.Constant][24] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %687 = reshape(%684, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), int8] */;
  %688 = reshape(%685, newshape=[5, 15, 13]) /* ty=Tensor[(5, 15, 13), int8] */;
  %689 = reshape(%686, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %690 = @func_5899(%687, %688, %689) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(105), float64], Tensor[(105), float64]) */;
  %691 = %690.1;
  %692 = @func_9936() /* ty=(Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) */;
  %693 = %692.0;
  %694 = cast(%691, dtype="int32") /* ty=Tensor[(105), int32] */;
  %695 = cast(%693, dtype="int32") /* ty=Tensor[(2, 13, 1), int32] */;
  %696 = cast(meta[relay.Constant][24] /* ty=Tensor[(105), float64] */, dtype="bool") /* ty=Tensor[(105), bool] */;
  %697 = cast(%693, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
  %698 = @func_9481() /* ty=(Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) */;
  %699 = right_shift(%694, %695) /* ty=Tensor[(2, 13, 105), int32] */;
  %700 = logical_and(%696, %697) /* ty=Tensor[(2, 13, 105), bool] */;
  %701 = %698.2;
  (%var_10814, %var_10815, %699, %700, %701)
}

def @func_9633() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %705 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %702 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %703 = %702.1;
    %704 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
    (%703, %704)
  };
  %705() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3474(%var_3449: Tensor[(84), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(240), float64], Tensor[(11, 10, 8), int16]) {
  %706 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %707 = cast(%var_3449, dtype="float32") /* ty=Tensor[(84), float32] */;
  %708 = cast(%var_3449, dtype="float32") /* ty=Tensor[(84), float32] */;
  %709 = reshape(%707, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %710 = reshape(%708, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %711 = @func_1975(%709, %710) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %712 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %713 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %714 = %706.0;
  %715 = %711.3;
  %716 = %712.2;
  %717 = %713.2;
  (%714, %715, %var_3449, %716, %717)
}

def @func_7622() -> Tensor[(14, 8, 4), bool] {
  %719 = fn () -> Tensor[(14, 8, 4), bool] {
    %718 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %718.0
  };
  %719() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_4110() -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
  %723 = fn () -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) {
    %720 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %721 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
    %722 = %720.0;
    (%721, %722)
  };
  %723() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */
}

def @func_8914() -> Tensor[(11, 16, 10), float64] {
  %724 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  log2(%724) /* ty=Tensor[(11, 16, 10), float64] */
}

def @func_11024() -> Tensor[(14, 8, 4), uint32] {
  @func_5436() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_5973() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) {
  @func_5971() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) */
}

def @func_2152(%var_2150: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  @func_2149(%var_2150) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */
}

def @func_3863() -> (Tensor[(14, 8, 4), bool],) {
  %727 = fn () -> (Tensor[(14, 8, 4), bool],) {
    %725 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %726 = %725.0;
    (%726,)
  };
  %727() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_6500(%var_6498: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
  @func_6497(%var_6498) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */
}

def @func_1116() -> Tensor[(14, 8, 4), uint32] {
  %728 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %728.2
}

def @func_8108() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_8106() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_8986() -> Tensor[(14, 8, 4), bool] {
  %730 = fn () -> Tensor[(14, 8, 4), bool] {
    %729 = @func_8364() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool]) */;
    %729.0
  };
  %730() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_11509(%var_11506: Tensor[(84), float32], %var_11507: Tensor[(468, 1), int64], %var_11508: Tensor[(468, 15), int64]) -> (Tensor[(14, 8, 4), float64], Tensor[(6, 13, 6), float64], Tensor[(7, 42), float32], Tensor[(468, 84), float64], Tensor[(14, 8, 4), bool], Tensor[(468, ?), bool], Tensor[(4, 220), int8], Tensor[(880), float32], Tensor[(468, 15), uint16], Tensor[(14, 8, 4), float32], Tensor[(468, 15), float32]) {
  %773 = fn (%var_11452: Tensor[(84), float32], %var_11464: Tensor[(468, 1), int64], %var_11468: Tensor[(468, 15), int64]) -> (Tensor[(14, 8, 4), float64], Tensor[(6, 13, 6), float64], Tensor[(7, 42), float32], Tensor[(468, 84), float64], Tensor[(14, 8, 4), bool], Tensor[(468, ?), bool], Tensor[(4, 220), int8], Tensor[(880), float32], Tensor[(468, 15), uint16], Tensor[(14, 8, 4), float32], Tensor[(468, 15), float32]) {
    %731 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %732 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="int64") /* ty=Tensor[(468, 1), int64] */;
    %733 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="int64") /* ty=Tensor[(468, 1), int64] */;
    %734 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
    %735 = cast(%var_11452, dtype="float32") /* ty=Tensor[(84), float32] */;
    %736 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 42), float32] */, dtype="float32") /* ty=Tensor[(7, 42), float32] */;
    %737 = reshape(%732, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
    %738 = reshape(%733, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
    %739 = reshape(%734, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), float64] */;
    %740 = reshape(%735, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %741 = reshape(%736, newshape=[294]) /* ty=Tensor[(294), float32] */;
    %742 = @func_4284(%737, %738, %739, %740, %741) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) */;
    %743 = cast(%var_11452, dtype="float64") /* ty=Tensor[(84), float64] */;
    %744 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
    %745 = cast(%var_11464, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
    %746 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %747 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
    %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %749 = cast(meta[relay.Constant][28] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %750 = reshape(%749, newshape=[4, 220]) /* ty=Tensor[(4, 220), float32] */;
    %751 = @func_1513(%750) /* ty=(Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) */;
    %752 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="uint8") /* ty=Tensor[(468, 1), uint8] */;
    %753 = cast(%var_11468, dtype="uint8") /* ty=Tensor[(468, 15), uint8] */;
    %754 = minimum(%752, %753) /* ty=Tensor[(468, 15), uint8] */;
    %755 = cast(%754, dtype="bool") /* ty=Tensor[(468, 15), bool] */;
    %756 = cast(meta[relay.Constant][26] /* ty=Tensor[(468, 1), int64] */, dtype="bool") /* ty=Tensor[(468, 1), bool] */;
    %757 = less_equal(%755, %756) /* ty=Tensor[(468, 15), bool] */;
    %758 = cast(%754, dtype="uint16") /* ty=Tensor[(468, 15), uint16] */;
    %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(2), int32] */;
    %760 = cast(%757, dtype="uint16") /* ty=Tensor[(468, 15), uint16] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %762 = @func_7063() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) */;
    %763 = cast(%754, dtype="float32") /* ty=Tensor[(468, 15), float32] */;
    %764 = %731.0;
    %765 = %742.9;
    %766 = mod(%743, %744) /* ty=Tensor[(468, 84), float64] */;
    %767 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
    %768 = not_equal(%747, %748) /* ty=Tensor[(468, ?), bool] */;
    %769 = %751.1;
    %770 = logical_xor(%760, %761) /* ty=Tensor[(468, 15), uint16] */;
    %771 = %762.0;
    %772 = rsqrt(%763) /* ty=Tensor[(468, 15), float32] */;
    (%764, %765, meta[relay.Constant][27] /* ty=Tensor[(7, 42), float32] */, %766, %767, %768, %769, meta[relay.Constant][28] /* ty=Tensor[(880), float32] */, %770, %771, %772)
  };
  %773(%var_11506, %var_11507, %var_11508) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(6, 13, 6), float64], Tensor[(7, 42), float32], Tensor[(468, 84), float64], Tensor[(14, 8, 4), bool], Tensor[(468, ?), bool], Tensor[(4, 220), int8], Tensor[(880), float32], Tensor[(468, 15), uint16], Tensor[(14, 8, 4), float32], Tensor[(468, 15), float32]) */
}

def @func_4056() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %777 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %774 = @func_3915() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) */;
    %775 = %774.2;
    %776 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
    (%775, %776)
  };
  %777() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_4000(%var_3998: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_3997(%var_3998) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3502() -> Tensor[(13, 14, 5), float32] {
  %778 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 5), float32] */;
  asinh(%778) /* ty=Tensor[(13, 14, 5), float32] */
}

def @func_7160(%var_7156: Tensor[(468), int64], %var_7157: Tensor[(294), float32], %var_7158: Tensor[(21, 4), float32], %var_7159: Tensor[(130), float64]) -> (Tensor[(8, 110), float64], Tensor[(7, 42), float32], Tensor[(468), int64], Tensor[(294), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32], Tensor[(21, 4), uint16], Tensor[(14, 8, 4), uint32], Tensor[(130), float64]) {
  %818 = fn (%var_7095: Tensor[(468), int64], %var_7097: Tensor[(294), float32], %var_7102: Tensor[(21, 4), float32], %var_7147: Tensor[(130), float64]) -> (Tensor[(8, 110), float64], Tensor[(7, 42), float32], Tensor[(468), int64], Tensor[(294), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32], Tensor[(21, 4), uint16], Tensor[(14, 8, 4), uint32], Tensor[(130), float64]) {
    %779 = cast(%var_7095, dtype="int64") /* ty=Tensor[(468), int64] */;
    %780 = cast(%var_7095, dtype="int64") /* ty=Tensor[(468), int64] */;
    %781 = cast(%var_7095, dtype="float64") /* ty=Tensor[(468), float64] */;
    %782 = cast(meta[relay.Constant][30] /* ty=Tensor[(21, 4), float32] */, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
    %783 = cast(%var_7097, dtype="float32") /* ty=Tensor[(294), float32] */;
    %784 = reshape(%779, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
    %785 = reshape(%780, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), int64] */;
    %786 = reshape(%781, newshape=[6, 13, 6]) /* ty=Tensor[(6, 13, 6), float64] */;
    %787 = reshape(%782, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %788 = reshape(%783, newshape=[294]) /* ty=Tensor[(294), float32] */;
    %789 = @func_4284(%784, %785, %786, %787, %788) /* ty=(Tensor[(6, 13, 6), bool], Tensor[(6, 13, 6), int64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(84), float32], Tensor[(7, 42), float32], Tensor[(294), float32], Tensor[(6, 13, 6), bool], Tensor[(14, 8, 4), bool], Tensor[(6, 13, 6), float64]) */;
    %790 = @func_4378() /* ty=Tensor[(8, 110), float64] */;
    %791 = cast(%790, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
    %792 = reshape(%791, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %793 = @func_3997(%792) /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(880), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %794 = @func_2623() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) */;
    %795 = cast(%var_7102, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
    %796 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(21, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %797 = cast(meta[relay.Constant][30] /* ty=Tensor[(21, 4), float32] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
    %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %799 = greater(%797, %798) /* ty=Tensor[(21, 4), bool] */;
    %800 = cast(%var_7102, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
    %801 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(21, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %802 = cast(meta[relay.Constant][30] /* ty=Tensor[(21, 4), float32] */, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %804 = floor_divide(%802, %803) /* ty=Tensor[(21, 4), float64] */;
    %805 = cast(%804, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
    %806 = shape_of(%799, dtype="int32") /* ty=Tensor[(2), int32] */;
    %807 = cast(%799, dtype="uint16") /* ty=Tensor[(21, 4), uint16] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %809 = cast(%var_7147, dtype="float64") /* ty=Tensor[(130), float64] */;
    %810 = reshape(%809, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %811 = @func_5455(%810) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
    %812 = %789.5;
    %813 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
    %814 = %793.0;
    %815 = %794.1;
    %816 = left_shift(%807, %808) /* ty=Tensor[(21, 4), uint16] */;
    %817 = %811.0;
    (%790, %812, %var_7095, %var_7097, %813, %814, %815, %816, %817, %var_7147)
  };
  %818(%var_7156, %var_7157, %var_7158, %var_7159) /* ty=(Tensor[(8, 110), float64], Tensor[(7, 42), float32], Tensor[(468), int64], Tensor[(294), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32], Tensor[(21, 4), uint16], Tensor[(14, 8, 4), uint32], Tensor[(130), float64]) */
}

def @func_3651(%var_3649: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) {
  @func_3648(%var_3649) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_5047(%var_5036: Tensor[(240), float64]) -> (Tensor[(240), float64], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  %819 = cast(%var_5036, dtype="float64") /* ty=Tensor[(240), float64] */;
  %820 = reshape(%819, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %821 = @func_2149(%820) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */;
  %822 = @func_4667() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %825 = %821.3;
  %826 = sqrt(%824) /* ty=Tensor[(14, 8, 4), float64] */;
  (%825, %var_5036, %826)
}

def @func_5668() -> (Tensor[(13, 14, 5), float32],) {
  %827 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
  (%827,)
}

def @func_5373(%var_5371: Tensor[(18), uint32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(18), uint32]) {
  @func_5370(%var_5371) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(18), uint32]) */
}

def @func_9588() -> (Tensor[(14, 8, 4), bool],) {
  %828 = @func_8985() /* ty=Tensor[(14, 8, 4), bool] */;
  (%828,)
}

def @func_8206(%var_8204: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(240), float64], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
  @func_8203(%var_8204) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(240), float64], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) */
}

def @func_2420(%var_2419: Tensor[(5, 7, 3), float64]) -> (Tensor[(5, 7, 3), float64],) {
  %831 = fn (%var_2413: Tensor[(5, 7, 3), float64]) -> (Tensor[(5, 7, 3), float64],) {
    %829 = cast(%var_2413, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
    %830 = asinh(%829) /* ty=Tensor[(5, 7, 3), float64] */;
    (%830,)
  };
  %831(%var_2419) /* ty=(Tensor[(5, 7, 3), float64],) */
}

def @func_10543() -> Tensor[(14, 8, 4), bool] {
  @func_10541() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_2623() -> (Tensor[(14, 8, 4), float64], Tensor[(2, 13, 1), uint32]) {
  %832 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %833 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %834 = reshape(%833, newshape=[]) /* ty=int8 */;
  %835 = @func_2025(%834) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
  %836 = %835.0;
  %837 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="uint32") /* ty=uint32 */;
  %838 = cast(%836, dtype="uint32") /* ty=Tensor[(2, 13, 1), uint32] */;
  %839 = %832.1;
  %840 = left_shift(%837, %838) /* ty=Tensor[(2, 13, 1), uint32] */;
  (%839, %840)
}

def @func_8246() -> Tensor[(14, 8, 4), float64] {
  %841 = @func_3309() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %841.0
}

def @func_7508() -> (Tensor[(2, 13, 1), uint32],) {
  @func_7506() /* ty=(Tensor[(2, 13, 1), uint32],) */
}

def @func_7682() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_7680() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_7953(%var_7952: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64], Tensor[(14, 8, 4), bool]) {
  %849 = fn (%var_7938: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64], Tensor[(14, 8, 4), bool]) {
    %842 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %843 = cast(%var_7938, dtype="float64") /* ty=Tensor[(130), float64] */;
    %844 = reshape(%843, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %845 = @func_6497(%844) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */;
    %846 = %842.0;
    %847 = %845.1;
    %848 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
    (%846, %847, %var_7938, %848)
  };
  %849(%var_7952) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(130), float64], Tensor[(14, 8, 4), bool]) */
}

def @func_9155(%var_9135: Tensor[(4, 220), float32]) -> (Tensor[(4, 220), float64], Tensor[(4, 220), uint8], Tensor[(14, 8, 4), bool]) {
  %850 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %851 = %850.3;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %853 = cast(%var_9135, dtype="uint8") /* ty=Tensor[(4, 220), uint8] */;
  %854 = shape_of(%851, dtype="int32") /* ty=Tensor[(2), int32] */;
  %855 = cast(%851, dtype="uint8") /* ty=Tensor[(4, 220), uint8] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %857 = @func_4055() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %858 = sigmoid(%852) /* ty=Tensor[(4, 220), float64] */;
  %859 = bitwise_xor(%855, %856) /* ty=Tensor[(4, 220), uint8] */;
  %860 = %857.0;
  (%858, %859, %860)
}

def @func_1979(%var_1977: Tensor[(14, 2, 3), float32], %var_1978: Tensor[(14, 2, 3), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
  @func_1975(%var_1977, %var_1978) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */
}

def @func_8573() -> (Tensor[(14, 8, 4), bool],) {
  %861 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %862 = %861.0;
  (%862,)
}

def @func_302(%var_301: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) {
  %874 = fn (%var_294: Tensor[(14, 8, 4), bool]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) {
    %863 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %864 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %865 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %866 = %865.2;
    %867 = cast(%var_294, dtype="uint32") /* ty=Tensor[(14, 8, 4), uint32] */;
    %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%866, dtype="uint32") /* ty=Tensor[(14, 8, 4), uint32] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %871 = %863.0;
    %872 = %864.0;
    %873 = subtract(%869, %870) /* ty=Tensor[(14, 8, 4), uint32] */;
    (%871, %872, %873)
  };
  %874(%var_301) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */
}

def @func_11058() -> (Tensor[(84), float32],) {
  %875 = @func_8014() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32], Tensor[(84), float32], Tensor[(84), float32]) */;
  %876 = %875.2;
  (%876,)
}

def @func_7063() -> (Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) {
  %877 = @func_7008() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) */;
  %878 = cast(meta[relay.Constant][32] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %879 = reshape(%878, newshape=[7, 7, 6]) /* ty=Tensor[(7, 7, 6), float32] */;
  %880 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %881 = %877.3;
  %882 = @func_2534(%879) /* ty=Tensor[(7, 7, 6), float32] */;
  %883 = %880.1;
  (%881, %882, meta[relay.Constant][32] /* ty=Tensor[(294), float32] */, %883)
}

def @func_10399() -> Tensor[(2, 13, 1), uint32] {
  @func_10397() /* ty=Tensor[(2, 13, 1), uint32] */
}

def @func_6078() -> (Tensor[(14, 8, 4), bool],) {
  @func_6076() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_5457(%var_5456: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
  %889 = fn (%var_5447: Tensor[(130), float64]) -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) {
    %884 = cast(%var_5447, dtype="float64") /* ty=Tensor[(130), float64] */;
    %885 = reshape(%884, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %886 = @func_3648(%885) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(14, 8, 4), float64]) */;
    %887 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
    %888 = %886.1;
    (%887, %888, %var_5447)
  };
  %889(%var_5456) /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), float64], Tensor[(130), float64]) */
}

def @func_9045() -> (Tensor[(14, 8, 4), float64], Tensor[(7, 14, ?), uint8], Tensor[(1, 98), uint8]) {
  @func_9043() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(7, 14, ?), uint8], Tensor[(1, 98), uint8]) */
}

def @func_1073() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %916 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %890 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %891 = %890.1;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
    %893 = acos(%892) /* ty=Tensor[(14, 8, 4), float32] */;
    %894 = cast(%893, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %895 = reshape(%894, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %896 = @func_481(%895) /* ty=Tensor[(14, 8, 4), bool] */;
    %897 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %898 = %897.1;
    %899 = cast(%898, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %900 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%896, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %903 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %904 = %903.1;
    %905 = cast(%904, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %906 = reshape(%905, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %907 = cast(%904, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %908 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %909 = cast(%893, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %911 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %912 = floor_divide(%901, %902) /* ty=Tensor[(14, 8, 4), float64] */;
    %913 = @func_481(%906) /* ty=Tensor[(14, 8, 4), bool] */;
    %914 = greater_equal(%909, %910) /* ty=Tensor[(14, 8, 4), bool] */;
    %915 = %911.0;
    (%912, %913, %914, %915)
  };
  %916() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_2149(%var_2146: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %917 = @func_1800() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %918 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %919 = cast(%var_2146, dtype="float64") /* ty=Tensor[(240), float64] */;
  %920 = cast(%var_2146, dtype="float64") /* ty=Tensor[(240), float64] */;
  %921 = reshape(%919, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %922 = reshape(%920, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %923 = @func_873(%921, %922) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */;
  %924 = %917.0;
  %925 = %918.0;
  %926 = %923.2;
  (%924, %925, %926, %var_2146)
}

def @func_1513(%var_1499: Tensor[(4, 220), float32]) -> (Tensor[(14, 8, 4), int64], Tensor[(4, 220), int8]) {
  %927 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %928 = %927.1;
  %929 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %930 = cast(%929, dtype="int64") /* ty=Tensor[(14, 8, 4), int64] */;
  %931 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%928, dtype="int64") /* ty=Tensor[(14, 8, 4), int64] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %934 = cast(%var_1499, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %935 = cast(%var_1499, dtype="float32") /* ty=Tensor[(4, 220), float32] */;
  %936 = reshape(%934, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %937 = reshape(%935, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %938 = @func_435(%936, %937) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %939 = %938.5;
  %940 = cast(%939, dtype="int8") /* ty=Tensor[(11, 10, 8), int8] */;
  %941 = shape_of(%var_1499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %942 = cast(%var_1499, dtype="int8") /* ty=Tensor[(4, 220), int8] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %944 = left_shift(%932, %933) /* ty=Tensor[(14, 8, 4), int64] */;
  %945 = logical_xor(%942, %943) /* ty=Tensor[(4, 220), int8] */;
  (%944, %945)
}

def @func_5971() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) {
  %946 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %947 = cast(meta[relay.Constant][33] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %948 = cast(meta[relay.Constant][33] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %949 = reshape(%947, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %950 = reshape(%948, newshape=[14, 2, 3]) /* ty=Tensor[(14, 2, 3), float32] */;
  %951 = @func_1975(%949, %950) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) */;
  %952 = %946.3;
  %953 = %951.4;
  %954 = @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */;
  (%952, %953, meta[relay.Constant][33] /* ty=Tensor[(84, 1), float32] */, %954)
}

def @func_5670() -> (Tensor[(13, 14, 5), float32],) {
  @func_5668() /* ty=(Tensor[(13, 14, 5), float32],) */
}

def @func_3737() -> Tensor[(14, 8, 4), bool] {
  %956 = fn () -> Tensor[(14, 8, 4), bool] {
    %955 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %955.0
  };
  %956() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_2362() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %957 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %958 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %959 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %960 = @func_1183() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(11, 10, 8), int16], Tensor[(4, 220), float32]) */;
  %961 = %960.1;
  %962 = cast(%961, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %963 = reshape(%962, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %964 = @func_300(%963) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint32]) */;
  %965 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %966 = %957.0;
  %967 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  %968 = %958.0;
  %969 = %959.7;
  %970 = %964.1;
  %971 = %965.1;
  (%966, %967, %968, %969, %961, %970, %971)
}

def @func_10851(%var_10849: Tensor[(1, 75), int8], %var_10850: Tensor[(975), int8]) -> (Tensor[(1, 75), int8], Tensor[(975), int8], Tensor[(2, 13, 105), int32], Tensor[(2, 13, 105), bool], Tensor[(130), float64]) {
  @func_10847(%var_10849, %var_10850) /* ty=(Tensor[(1, 75), int8], Tensor[(975), int8], Tensor[(2, 13, 105), int32], Tensor[(2, 13, 105), bool], Tensor[(130), float64]) */
}

def @func_10726() -> Tensor[(14, 8, 4), bool] {
  @func_10724() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_6890() -> (Tensor[(14, 8, 4), float64],) {
  @func_6888() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_3011() -> Tensor[(14, 8, 4), bool] {
  %972 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %972.3
}

def @func_1745() -> (Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_10397() -> Tensor[(2, 13, 1), uint32] {
  @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */
}

def @func_4502() -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) {
  %977 = fn () -> (Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) {
    %973 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %974 = @func_1116() /* ty=Tensor[(14, 8, 4), uint32] */;
    %975 = %973.1;
    %976 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
    (%974, %975, %976)
  };
  %977() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) */
}

def @func_7653() -> (Tensor[(14, 8, 4), float64],) {
  @func_7651() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_7929(%var_7923: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  %978 = @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %979 = cast(%var_7923, dtype="float64") /* ty=Tensor[(240), float64] */;
  %980 = reshape(%979, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %981 = @func_2149(%980) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */;
  %982 = %978.3;
  %983 = %981.2;
  (%982, %983, %var_7923)
}

def @func_7010() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) {
  @func_7008() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool]) */
}

def @func_10089() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
  %988 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) {
    %984 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
    %985 = @func_6513() /* ty=(Tensor[(14, 8, 4), bool],) */;
    %986 = %984.0;
    %987 = %985.0;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool]) */
}

def @func_2696(%var_2695: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
  %996 = fn (%var_2676: Tensor[(880), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) {
    %989 = cast(%var_2676, dtype="float32") /* ty=Tensor[(880), float32] */;
    %990 = cast(%var_2676, dtype="float32") /* ty=Tensor[(880), float32] */;
    %991 = reshape(%989, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
    %992 = reshape(%990, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
    %993 = @func_435(%991, %992) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
    %994 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
    %995 = %993.4;
    (%994, %995, %var_2676)
  };
  %996(%var_2695) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(880), float32]) */
}

def @func_8185() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(2, 13, 1), uint32]) {
  %997 = @func_6588() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %998 = %997.0;
  %999 = @func_7363() /* ty=Tensor[(14, 8, 4), float32] */;
  %1000 = @func_7540() /* ty=Tensor[(2, 13, 1), uint32] */;
  (%998, %999, %1000)
}

def @func_1241() -> Tensor[(14, 8, 4), float32] {
  %1004 = fn () -> Tensor[(14, 8, 4), float32] {
    %1001 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1002 = %1001.3;
    %1003 = cast(%1002, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
    exp(%1003) /* ty=Tensor[(14, 8, 4), float32] */
  };
  %1004() /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_6713() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1005 = @func_6144() /* ty=Tensor[(14, 8, 4), bool] */;
  %1006 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
  (%1005, %1006)
}

def @func_10229() -> Tensor[(130), float64] {
  %1008 = fn () -> Tensor[(130), float64] {
    %1007 = @func_9481() /* ty=(Tensor[(8, 110), float64], Tensor[(14, 8, 4), bool], Tensor[(130), float64]) */;
    %1007.2
  };
  %1008() /* ty=Tensor[(130), float64] */
}

def @func_6195() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) {
  %1015 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) {
    %1009 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1010 = reshape(%1009, newshape=[]) /* ty=int8 */;
    %1011 = @func_2025(%1010) /* ty=(Tensor[(2, 13, 1), bool], Tensor[(14, 8, 4), bool], Tensor[(448), bool]) */;
    %1012 = @func_3736() /* ty=Tensor[(14, 8, 4), bool] */;
    %1013 = %1011.1;
    %1014 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
    (%1012, %1013, meta[relay.Constant][34] /* ty=int8 */, %1014)
  };
  %1015() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) */
}

def @func_9590() -> (Tensor[(14, 8, 4), bool],) {
  @func_9588() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_884() -> (Tensor[(14, 8, 4), bool],) {
  @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_7541() -> Tensor[(2, 13, 1), uint32] {
  %1017 = fn () -> Tensor[(2, 13, 1), uint32] {
    %1016 = @func_7506() /* ty=(Tensor[(2, 13, 1), uint32],) */;
    %1016.0
  };
  %1017() /* ty=Tensor[(2, 13, 1), uint32] */
}

def @func_8233() -> (Tensor[(13, 14, 5), float32], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
  %1026 = fn () -> (Tensor[(13, 14, 5), float32], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) {
    %1018 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
    %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %1020 = cast(meta[relay.Constant][35] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %1021 = reshape(%1019, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float64] */;
    %1022 = reshape(%1020, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %1023 = @func_2323(%1021, %1022) /* ty=(Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), int16], Tensor[(880), float32], Tensor[(14, 8, 4), uint32]) */;
    %1024 = @func_3502() /* ty=Tensor[(13, 14, 5), float32] */;
    %1025 = %1023.1;
    (%1024, %1018, %1025, meta[relay.Constant][35] /* ty=Tensor[(880), float32] */)
  };
  %1026() /* ty=(Tensor[(13, 14, 5), float32], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */
}

def @func_2941(%var_2939: Tensor[(105), float64]) -> (Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) {
  @func_2938(%var_2939) /* ty=(Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_7932(%var_7930: Tensor[(240), float64]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  @func_7929(%var_7930) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */
}

def @func_2364() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_2362() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_10599() -> (Tensor[(14, 8, 4), float64],) {
  @func_10597() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_6715() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_3405() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_10773() -> Tensor[(14, 8, 4), bool] {
  @func_10771() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_3013() -> Tensor[(14, 8, 4), bool] {
  @func_3011() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_882() -> (Tensor[(14, 8, 4), bool],) {
  %1027 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1028 = %1027.0;
  (%1028,)
}

def @func_2998() -> (Tensor[(14, 8, 4), float64],) {
  %1031 = fn () -> (Tensor[(14, 8, 4), float64],) {
    %1029 = @func_1474() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %1030 = %1029.0;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(14, 8, 4), float64],) */
}

def @func_3916() -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) {
  %1047 = fn () -> (Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) {
    %1032 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1033 = %1032.1;
    %1034 = cast(%1033, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
    %1035 = reshape(%1034, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
    %1036 = @func_569(%1035) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1037 = %1036.1;
    %1038 = cast(%1037, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    %1039 = cast(%1037, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
    %1040 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1041 = cast(%1033, dtype="uint16") /* ty=Tensor[(14, 8, 4), uint16] */;
    %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1043 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %1044 = asin(%1038) /* ty=Tensor[(14, 8, 4), float64] */;
    %1045 = bitwise_or(%1041, %1042) /* ty=Tensor[(14, 8, 4), uint16] */;
    %1046 = %1043.0;
    (%1044, %1045, %1046)
  };
  %1047() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) */
}

def @func_8902() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %1048 = @func_7450() /* ty=Tensor[(14, 8, 4), bool] */;
  %1049 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  (%1048, %1049)
}

def @func_809() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) {
  @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */
}

def @func_1149() -> Tensor[(14, 8, 4), float64] {
  %1053 = fn () -> Tensor[(14, 8, 4), float64] {
    %1050 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %1051 = %1050.1;
    %1052 = cast(%1051, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
    sinh(%1052) /* ty=Tensor[(14, 8, 4), float64] */
  };
  %1053() /* ty=Tensor[(14, 8, 4), float64] */
}

def @func_3784(%var_3782: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), int8] {
  @func_3781(%var_3782) /* ty=Tensor[(14, 8, 4), int8] */
}

def @func_10660() -> Tensor[(14, 8, 4), float64] {
  %1054 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
  %1054.0
}

def @func_8027() -> Tensor[(14, 8, 4), bool] {
  %1055 = @func_6194() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], int8, Tensor[(14, 8, 4), bool]) */;
  %1055.1
}

def @func_3380(%var_3378: Tensor[(15, 16, 10), float32], %var_3379: Tensor[(240), float64]) -> (Tensor[(15, 16, 10), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) {
  @func_3376(%var_3378, %var_3379) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64]) */
}

def @func_3781(%var_3772: Tensor[(14, 8, 4), bool]) -> Tensor[(14, 8, 4), int8] {
  %1056 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1057 = %1056.0;
  %1058 = cast(%var_3772, dtype="int8") /* ty=Tensor[(14, 8, 4), int8] */;
  %1059 = shape_of(%1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%1057, dtype="int8") /* ty=Tensor[(14, 8, 4), int8] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%1060, %1061) /* ty=Tensor[(14, 8, 4), int8] */
}

def @func_2938(%var_2913: Tensor[(105), float64]) -> (Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(14, 8, 4), float64]) {
  %1062 = cast(%var_2913, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1063 = reshape(%1062, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %1064 = @func_2418(%1063) /* ty=(Tensor[(5, 7, 3), float64],) */;
  %1065 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1066 = %1065.1;
  %1067 = @func_1743() /* ty=(Tensor[(240), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1070 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%1066, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1073 = %1064.0;
  %1074 = maximum(%1071, %1072) /* ty=Tensor[(14, 8, 4), float64] */;
  (%1073, %var_2913, %1074)
}

def @func_5812() -> (Tensor[(14, 8, 4), uint32],) {
  @func_5810() /* ty=(Tensor[(14, 8, 4), uint32],) */
}

def @func_1474() -> (Tensor[(14, 8, 4), float64],) {
  %1075 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %1076 = cast(%1075, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1077 = log10(%1076) /* ty=Tensor[(14, 8, 4), float64] */;
  (%1077,)
}

def @func_2405(%var_2403: Tensor[(4, 16, 4), int16], %var_2404: Tensor[(4, 16, 4), int16]) -> (Tensor[(4, 16, 4), bool], Tensor[(4, 16, 4), float32]) {
  %1085 = fn (%var_2392: Tensor[(4, 16, 4), int16], %var_2393: Tensor[(4, 16, 4), int16]) -> (Tensor[(4, 16, 4), bool], Tensor[(4, 16, 4), float32]) {
    %1078 = cast(%var_2393, dtype="bool") /* ty=Tensor[(4, 16, 4), bool] */;
    %1079 = shape_of(%var_2392, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1080 = cast(%var_2392, dtype="bool") /* ty=Tensor[(4, 16, 4), bool] */;
    %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1082 = cast(%var_2393, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
    %1083 = not_equal(%1080, %1081) /* ty=Tensor[(4, 16, 4), bool] */;
    %1084 = sinh(%1082) /* ty=Tensor[(4, 16, 4), float32] */;
    (%1083, %1084)
  };
  %1085(%var_2403, %var_2404) /* ty=(Tensor[(4, 16, 4), bool], Tensor[(4, 16, 4), float32]) */
}

def @func_650() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  %1086 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1087 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1088 = %1087.0;
  %1089 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 8, 4), bool] */, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1091 = cast(%1088, dtype="float64") /* ty=Tensor[(14, 8, 4), float64] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1093 = %1086.1;
  %1094 = divide(%1091, %1092) /* ty=Tensor[(14, 8, 4), float64] */;
  (%1093, %1094)
}

def @func_1975(%var_1876: Tensor[(14, 2, 3), float32], %var_1877: Tensor[(14, 2, 3), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 2, 3), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float32]) {
  %1095 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1096 = %1095.0;
  %1097 = cast(%1096, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %1098 = reshape(%1097, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), bool] */;
  %1099 = @func_569(%1098) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1100 = cast(%var_1877, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %1101 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1102 = cast(%var_1876, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1104 = less_equal(%1102, %1103) /* ty=Tensor[(14, 2, 3), bool] */;
  %1105 = cast(%1104, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %1106 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%var_1876, dtype="uint8") /* ty=Tensor[(14, 2, 3), uint8] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1109 = minimum(%1107, %1108) /* ty=Tensor[(14, 2, 3), uint8] */;
  %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %1111 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%1104, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1114 = subtract(%1112, %1113) /* ty=Tensor[(14, 2, 3), float64] */;
  %1115 = cast(%1114, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %1116 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1104, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1119 = @func_1357() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64]) */;
  %1120 = cast(%1114, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %1121 = sin(%1120) /* ty=Tensor[(14, 2, 3), float64] */;
  %1122 = cast(%1121, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %1123 = cast(%1121, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %1124 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1125 = %1099.1;
  %1126 = not_equal(%1117, %1118) /* ty=Tensor[(14, 2, 3), bool] */;
  %1127 = %1119.0;
  %1128 = @func_1464() /* ty=Tensor[(14, 8, 4), bool] */;
  %1129 = rsqrt(%1122) /* ty=Tensor[(14, 2, 3), float64] */;
  %1130 = @func_1148() /* ty=Tensor[(14, 8, 4), float64] */;
  %1131 = cosh(%1123) /* ty=Tensor[(14, 2, 3), float64] */;
  %1132 = %1124.1;
  %1133 = @func_1240() /* ty=Tensor[(14, 8, 4), float32] */;
  (%1096, %1125, %1126, %1127, %1128, %1129, %1130, %1131, %1132, %1133)
}

def @func_439(%var_437: Tensor[(11, 10, 8), float32], %var_438: Tensor[(11, 10, 8), float32]) -> (Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) {
  @func_435(%var_437, %var_438) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */
}

def @func_1759() -> Tensor[(14, 8, 4), uint32] {
  @func_1757() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_9937() -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) {
  %1138 = fn () -> (Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) {
    %1134 = @func_7506() /* ty=(Tensor[(2, 13, 1), uint32],) */;
    %1135 = @func_8596() /* ty=(Tensor[(14, 8, 4), float64],) */;
    %1136 = %1134.0;
    %1137 = %1135.0;
    (%1136, %1137)
  };
  %1138() /* ty=(Tensor[(2, 13, 1), uint32], Tensor[(14, 8, 4), float64]) */
}

def @func_807() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) {
  %1139 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1140 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1141 = %1140.0;
  %1142 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %1143 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %1144 = reshape(%1142, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %1145 = reshape(%1143, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %1146 = @func_435(%1144, %1145) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %1147 = %1146.0;
  %1148 = cast(%1147, dtype="int32") /* ty=Tensor[(14, 8, 4), int32] */;
  %1149 = shape_of(%1141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%1141, dtype="int32") /* ty=Tensor[(14, 8, 4), int32] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1152 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %1153 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 110), float32] */, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %1154 = reshape(%1152, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %1155 = reshape(%1153, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %1156 = @func_435(%1154, %1155) /* ty=(Tensor[(14, 8, 4), bool], Tensor[(11, 10, 8), float64], Tensor[(14, 8, 4), uint32], Tensor[(11, 10, 8), int16], Tensor[(11, 10, 8), float64], Tensor[(11, 10, 8), int16]) */;
  %1157 = @func_735() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1158 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 110), float32] */, dtype="float64") /* ty=Tensor[(8, 110), float64] */;
  %1159 = %1139.1;
  %1160 = multiply(%1150, %1151) /* ty=Tensor[(14, 8, 4), int32] */;
  %1161 = %1156.2;
  %1162 = %1157.1;
  %1163 = sin(%1158) /* ty=Tensor[(8, 110), float64] */;
  (%1159, %1160, %1161, %1162, %1163)
}

def @func_7185() -> (Tensor[(14, 8, 4), bool],) {
  @func_7183() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_8647() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1164 = @func_108() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1165 = @func_882() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1166 = %1164.0;
  %1167 = %1165.0;
  (%1166, %1167)
}

def @func_714() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1172 = fn () -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
    %1168 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1169 = @func_650() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
    %1170 = %1168.0;
    %1171 = %1169.0;
    (%1170, %1171)
  };
  %1172() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */
}

def @func_5293() -> Tensor[(14, 8, 4), bool] {
  @func_5291() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_9473() -> Tensor[(14, 8, 4), bool] {
  @func_9471() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_10025(%var_10023: Tensor[(9, 8, 12), bool], %var_10024: Tensor[(9, 8, 12), bool]) -> (Tensor[(9, 8, 12), bool], Tensor[(9, 8, 12), float32], Tensor[(14, 8, 4), bool], Tensor[(15, 6, 14), int16], Tensor[(1260), int16]) {
  @func_10021(%var_10023, %var_10024) /* ty=(Tensor[(9, 8, 12), bool], Tensor[(9, 8, 12), float32], Tensor[(14, 8, 4), bool], Tensor[(15, 6, 14), int16], Tensor[(1260), int16]) */
}

def @func_4089(%var_4057: float64, %var_4058: Tensor[(10, 1, 5), float64], %var_4069: Tensor[(880, 1), float32]) -> (Tensor[(10, 1, 5), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(8, 42), float64], Tensor[(880, 1), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint16], Tensor[(10, 1, 5), float64]) {
  %1173 = cast(%var_4057, dtype="float64") /* ty=float64 */;
  %1174 = cast(%var_4058, dtype="float64") /* ty=Tensor[(10, 1, 5), float64] */;
  %1175 = @func_3403() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */;
  %1176 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %1177 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %1178 = cast(%var_4069, dtype="float32") /* ty=Tensor[(880, 1), float32] */;
  %1179 = reshape(%1176, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %1180 = reshape(%1177, newshape=[8, 3, 14]) /* ty=Tensor[(8, 3, 14), float64] */;
  %1181 = reshape(%1178, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %1182 = @func_2816(%1179, %1180, %1181) /* ty=(Tensor[(8, 3, 14), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(880), float32]) */;
  %1183 = @func_235() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1184 = @func_3915() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), uint16], Tensor[(14, 8, 4), bool]) */;
  %1185 = cast(%var_4058, dtype="float64") /* ty=Tensor[(10, 1, 5), float64] */;
  %1186 = floor_mod(%1173, %1174) /* ty=Tensor[(10, 1, 5), float64] */;
  %1187 = %1175.0;
  %1188 = %1182.1;
  %1189 = @func_3011() /* ty=Tensor[(14, 8, 4), bool] */;
  %1190 = %1183.2;
  %1191 = %1184.1;
  %1192 = atanh(%1185) /* ty=Tensor[(10, 1, 5), float64] */;
  (%1186, %1187, %1188, meta[relay.Constant][38] /* ty=Tensor[(8, 42), float64] */, %var_4069, %1189, %1190, %1191, %1192)
}

def @func_2228() -> Tensor[(14, 8, 4), bool] {
  %1194 = fn () -> Tensor[(14, 8, 4), bool] {
    %1193 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1193.0
  };
  %1194() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_7065() -> (Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) {
  @func_7063() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(7, 7, 6), float32], Tensor[(294), float32], Tensor[(14, 8, 4), bool]) */
}

def @func_8029() -> Tensor[(14, 8, 4), bool] {
  @func_8027() /* ty=Tensor[(14, 8, 4), bool] */
}

def @func_4888() -> (Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) {
  @func_4886() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) */
}

def @func_11102(%var_11100: uint16, %var_11101: Tensor[(1, 6, 12), uint16]) -> (Tensor[(1, 6, 12), bool], Tensor[(14, 8, 4), float64]) {
  %1200 = fn (%var_11084: uint16, %var_11085: Tensor[(1, 6, 12), uint16]) -> (Tensor[(1, 6, 12), bool], Tensor[(14, 8, 4), float64]) {
    %1195 = cast(%var_11084, dtype="bool") /* ty=bool */;
    %1196 = cast(%var_11085, dtype="bool") /* ty=Tensor[(1, 6, 12), bool] */;
    %1197 = @func_9309() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32]) */;
    %1198 = greater(%1195, %1196) /* ty=Tensor[(1, 6, 12), bool] */;
    %1199 = %1197.0;
    (%1198, %1199)
  };
  %1200(%var_11100, %var_11101) /* ty=(Tensor[(1, 6, 12), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_4379() -> Tensor[(8, 110), float64] {
  %1202 = fn () -> Tensor[(8, 110), float64] {
    %1201 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
    %1201.4
  };
  %1202() /* ty=Tensor[(8, 110), float64] */
}

def @func_7365() -> Tensor[(14, 8, 4), float32] {
  @func_7363() /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_8735() -> Tensor[(14, 8, 4), float32] {
  %1203 = @func_8381() /* ty=(Tensor[(14, 8, 4), float32],) */;
  %1203.0
}

def @func_7363() -> Tensor[(14, 8, 4), float32] {
  %1204 = @func_1699() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float64], Tensor[(240), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1204.5
}

def @func_6514() -> (Tensor[(14, 8, 4), bool],) {
  %1206 = fn () -> (Tensor[(14, 8, 4), bool],) {
    %1205 = @func_5291() /* ty=Tensor[(14, 8, 4), bool] */;
    (%1205,)
  };
  %1206() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_8737() -> Tensor[(14, 8, 4), float32] {
  @func_8735() /* ty=Tensor[(14, 8, 4), float32] */
}

def @func_8382() -> (Tensor[(14, 8, 4), float32],) {
  %1208 = fn () -> (Tensor[(14, 8, 4), float32],) {
    %1207 = @func_7363() /* ty=Tensor[(14, 8, 4), float32] */;
    (%1207,)
  };
  %1208() /* ty=(Tensor[(14, 8, 4), float32],) */
}

def @func_10771() -> Tensor[(14, 8, 4), bool] {
  %1209 = @func_6076() /* ty=(Tensor[(14, 8, 4), bool],) */;
  %1209.0
}

def @func_8904() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) {
  @func_8902() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64]) */
}

def @func_11060() -> (Tensor[(84), float32],) {
  @func_11058() /* ty=(Tensor[(84), float32],) */
}

def @func_10973() -> (Tensor[(240), float64],) {
  %1212 = fn () -> (Tensor[(240), float64],) {
    %1210 = @func_4886() /* ty=(Tensor[(14, 8, 4), float32], Tensor[(14, 8, 4), bool], Tensor[(240), float64], Tensor[(14, 8, 4), float64]) */;
    %1211 = %1210.2;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(240), float64],) */
}

def @func_6665() -> Tensor[(14, 8, 4), bool] {
  %1213 = @func_807() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), int32], Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(8, 110), float64]) */;
  %1213.3
}

def @func_4094(%var_4091: float64, %var_4092: Tensor[(10, 1, 5), float64], %var_4093: Tensor[(880, 1), float32]) -> (Tensor[(10, 1, 5), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(8, 42), float64], Tensor[(880, 1), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint16], Tensor[(10, 1, 5), float64]) {
  @func_4089(%var_4091, %var_4092, %var_4093) /* ty=(Tensor[(10, 1, 5), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), float64], Tensor[(8, 42), float64], Tensor[(880, 1), float32], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), uint16], Tensor[(10, 1, 5), float64]) */
}

def @func_10510() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1214 = @func_6713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1215 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1216 = @func_5971() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) */;
  %1217 = %1214.1;
  %1218 = %1215.1;
  %1219 = %1216.1;
  (%1217, %1218, %1219)
}

def @func_5437() -> Tensor[(14, 8, 4), uint32] {
  %1221 = fn () -> Tensor[(14, 8, 4), uint32] {
    %1220 = @func_4501() /* ty=(Tensor[(14, 8, 4), uint32], Tensor[(14, 8, 4), bool], Tensor[(13, 14, 5), float32]) */;
    %1220.0
  };
  %1221() /* ty=Tensor[(14, 8, 4), uint32] */
}

def @func_1801() -> (Tensor[(14, 8, 4), bool],) {
  %1224 = fn () -> (Tensor[(14, 8, 4), bool],) {
    %1222 = @func_713() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
    %1223 = %1222.1;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_8248() -> Tensor[(14, 8, 4), float64] {
  @func_8246() /* ty=Tensor[(14, 8, 4), float64] */
}

def @func_6589() -> (Tensor[(14, 8, 4), bool],) {
  %1227 = fn () -> (Tensor[(14, 8, 4), bool],) {
    %1225 = @func_5971() /* ty=(Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(84, 1), float32], Tensor[(14, 8, 4), uint32]) */;
    %1226 = %1225.0;
    (%1226,)
  };
  %1227() /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_8723() -> (Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) {
  %1228 = @func_8430() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1229 = @func_1072() /* ty=(Tensor[(14, 8, 4), float64], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool], Tensor[(14, 8, 4), bool]) */;
  %1230 = %1228.1;
  %1231 = %1229.1;
  (%1230, %1231)
}

def @func_9765(%var_9764: Tensor[(15, 6, 14), int16]) -> Tensor[(15, 6, 14), int16] {
  %1236 = fn (%var_9754: Tensor[(15, 6, 14), int16]) -> Tensor[(15, 6, 14), int16] {
    %1232 = cast(%var_9754, dtype="int16") /* ty=Tensor[(15, 6, 14), int16] */;
    %1233 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(15, 6, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1234 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 6, 14), int16] */, dtype="int16") /* ty=Tensor[(15, 6, 14), int16] */;
    %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    minimum(%1234, %1235) /* ty=Tensor[(15, 6, 14), int16] */
  };
  %1236(%var_9764) /* ty=Tensor[(15, 6, 14), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen413/build/output.py:3819: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen413/build/output.py", line 3824, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_bitwise_or_kernel0(uint64_t* __restrict__ T_bitwise_or, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1152) {
    T_bitwise_or[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 144))] | placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


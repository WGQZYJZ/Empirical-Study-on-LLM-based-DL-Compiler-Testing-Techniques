import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_24 = relay.var("var_24", dtype = "int32", shape = (14, 9, 2))#candidate|24|(14, 9, 2)|var|int32
const_25 = relay.const([[[5,6],[-8,-4],[8,-4],[4,-7],[-1,-2],[9,-6],[4,-5],[6,-1],[-2,1]],[[-3,-10],[2,-7],[-6,-9],[1,5],[-1,10],[5,-2],[-1,-2],[-1,4],[-7,-4]],[[8,7],[-6,-2],[-8,-6],[-2,-6],[-4,-5],[-1,-10],[9,6],[-6,-9],[2,10]],[[-4,4],[1,-1],[-8,9],[-5,-7],[-1,-9],[-8,-10],[-7,-1],[-5,-8],[3,-1]],[[4,7],[-10,2],[-1,4],[-7,-6],[-7,-1],[5,3],[5,1],[3,-2],[7,-9]],[[-6,-4],[1,8],[-8,2],[1,10],[-9,10],[-6,2],[6,-8],[-3,-7],[7,5]],[[7,7],[10,-3],[-5,10],[9,6],[2,5],[-3,-10],[8,-7],[-9,7],[8,5]],[[3,2],[2,2],[4,7],[7,6],[2,6],[3,9],[8,10],[-9,-5],[-5,-2]],[[8,8],[-5,10],[6,-2],[9,-10],[-3,-4],[4,6],[-1,8],[9,4],[-4,-1]],[[-7,1],[-4,4],[4,8],[5,-10],[-8,-4],[9,-6],[2,6],[-2,6],[-6,7]],[[-1,5],[-4,-5],[-7,-8],[3,-5],[-2,1],[-2,-1],[-3,-6],[-4,-1],[3,-2]],[[-1,4],[4,-2],[-3,-9],[9,-10],[-8,5],[-6,2],[-5,4],[-3,3],[-5,-1]],[[-10,-6],[-1,2],[9,-10],[3,-8],[-6,8],[5,9],[8,1],[10,2],[6,-5]],[[-7,8],[-8,-10],[-2,7],[-1,1],[-7,-2],[-2,-8],[-7,-4],[-10,-2],[5,2]]], dtype = "int32")#candidate|25|(14, 9, 2)|const|int32
bop_26 = relay.subtract(var_24.astype('int32'), relay.reshape(const_25.astype('int32'), relay.shape_of(var_24))) # shape=(14, 9, 2)
uop_30 = relay.atanh(const_25.astype('float32')) # shape=(14, 9, 2)
output = relay.Tuple([bop_26,uop_30,])
output2 = relay.Tuple([bop_26,uop_30,])
func_41 = relay.Function([var_24,], output)
mod['func_41'] = func_41
mod = relay.transform.InferType()(mod)
var_42 = relay.var("var_42", dtype = "int32", shape = (14, 9, 2))#candidate|42|(14, 9, 2)|var|int32
output = func_41(var_42)
func_43 = relay.Function([var_42], output)
mutated_mod['func_43'] = func_43
mutated_mod = relay.transform.InferType()(mutated_mod)
var_131 = relay.var("var_131", dtype = "float32", shape = (2, 15, 2))#candidate|131|(2, 15, 2)|var|float32
uop_132 = relay.sqrt(var_131.astype('float32')) # shape=(2, 15, 2)
bop_141 = relay.power(var_131.astype('float32'), relay.reshape(uop_132.astype('float32'), relay.shape_of(var_131))) # shape=(2, 15, 2)
uop_160 = relay.atan(bop_141.astype('float64')) # shape=(2, 15, 2)
bop_165 = relay.not_equal(uop_160.astype('bool'), relay.reshape(bop_141.astype('bool'), relay.shape_of(uop_160))) # shape=(2, 15, 2)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
var_170 = relay.var("var_170", dtype = "int32", shape = (1, 252))#candidate|170|(1, 252)|var|int32
call_169 = relay.TupleGetItem(func_41_call(relay.reshape(var_170.astype('int32'), [14, 9, 2])), 1)
call_171 = relay.TupleGetItem(func_43_call(relay.reshape(var_170.astype('int32'), [14, 9, 2])), 1)
var_172 = relay.var("var_172", dtype = "bool", shape = (2, 15, 2))#candidate|172|(2, 15, 2)|var|bool
bop_173 = relay.logical_and(bop_165.astype('bool'), relay.reshape(var_172.astype('bool'), relay.shape_of(bop_165))) # shape=(2, 15, 2)
output = relay.Tuple([call_169,var_170,bop_173,])
output2 = relay.Tuple([call_171,var_170,bop_173,])
func_177 = relay.Function([var_131,var_170,var_172,], output)
mod['func_177'] = func_177
mod = relay.transform.InferType()(mod)
var_178 = relay.var("var_178", dtype = "float32", shape = (2, 15, 2))#candidate|178|(2, 15, 2)|var|float32
var_179 = relay.var("var_179", dtype = "int32", shape = (1, 252))#candidate|179|(1, 252)|var|int32
var_180 = relay.var("var_180", dtype = "bool", shape = (2, 15, 2))#candidate|180|(2, 15, 2)|var|bool
output = func_177(var_178,var_179,var_180,)
func_181 = relay.Function([var_178,var_179,var_180,], output)
mutated_mod['func_181'] = func_181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_484 = relay.var("var_484", dtype = "int16", shape = (12, 15, 6))#candidate|484|(12, 15, 6)|var|int16
var_485 = relay.var("var_485", dtype = "int16", shape = (12, 15, 6))#candidate|485|(12, 15, 6)|var|int16
bop_486 = relay.less_equal(var_484.astype('bool'), relay.reshape(var_485.astype('bool'), relay.shape_of(var_484))) # shape=(12, 15, 6)
func_177_call = mod.get_global_var('func_177')
func_181_call = mutated_mod.get_global_var('func_181')
var_494 = relay.var("var_494", dtype = "float32", shape = (60,))#candidate|494|(60,)|var|float32
var_495 = relay.var("var_495", dtype = "int32", shape = (252,))#candidate|495|(252,)|var|int32
call_493 = relay.TupleGetItem(func_177_call(relay.reshape(var_494.astype('float32'), [2, 15, 2]), relay.reshape(var_495.astype('int32'), [1, 252]), relay.reshape(var_494.astype('bool'), [2, 15, 2]), ), 2)
call_496 = relay.TupleGetItem(func_181_call(relay.reshape(var_494.astype('float32'), [2, 15, 2]), relay.reshape(var_495.astype('int32'), [1, 252]), relay.reshape(var_494.astype('bool'), [2, 15, 2]), ), 2)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_498 = relay.TupleGetItem(func_41_call(relay.reshape(var_495.astype('int32'), [14, 9, 2])), 1)
call_499 = relay.TupleGetItem(func_43_call(relay.reshape(var_495.astype('int32'), [14, 9, 2])), 1)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_518 = relay.TupleGetItem(func_41_call(relay.reshape(call_498.astype('int32'), [14, 9, 2])), 0)
call_519 = relay.TupleGetItem(func_43_call(relay.reshape(call_498.astype('int32'), [14, 9, 2])), 0)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_524 = relay.TupleGetItem(func_41_call(relay.reshape(var_495.astype('int32'), [14, 9, 2])), 1)
call_525 = relay.TupleGetItem(func_43_call(relay.reshape(var_495.astype('int32'), [14, 9, 2])), 1)
output = relay.Tuple([bop_486,call_493,var_494,var_495,call_498,call_518,call_524,])
output2 = relay.Tuple([bop_486,call_496,var_494,var_495,call_499,call_519,call_525,])
func_527 = relay.Function([var_484,var_485,var_494,var_495,], output)
mod['func_527'] = func_527
mod = relay.transform.InferType()(mod)
var_528 = relay.var("var_528", dtype = "int16", shape = (12, 15, 6))#candidate|528|(12, 15, 6)|var|int16
var_529 = relay.var("var_529", dtype = "int16", shape = (12, 15, 6))#candidate|529|(12, 15, 6)|var|int16
var_530 = relay.var("var_530", dtype = "float32", shape = (60,))#candidate|530|(60,)|var|float32
var_531 = relay.var("var_531", dtype = "int32", shape = (252,))#candidate|531|(252,)|var|int32
output = func_527(var_528,var_529,var_530,var_531,)
func_532 = relay.Function([var_528,var_529,var_530,var_531,], output)
mutated_mod['func_532'] = func_532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_767 = relay.var("var_767", dtype = "float64", shape = (10, 13, 16))#candidate|767|(10, 13, 16)|var|float64
uop_768 = relay.atan(var_767.astype('float64')) # shape=(10, 13, 16)
output = uop_768
output2 = uop_768
func_770 = relay.Function([var_767,], output)
mod['func_770'] = func_770
mod = relay.transform.InferType()(mod)
var_771 = relay.var("var_771", dtype = "float64", shape = (10, 13, 16))#candidate|771|(10, 13, 16)|var|float64
output = func_770(var_771)
func_772 = relay.Function([var_771], output)
mutated_mod['func_772'] = func_772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_912 = relay.var("var_912", dtype = "float64", shape = (1, 14, 13))#candidate|912|(1, 14, 13)|var|float64
uop_913 = relay.cosh(var_912.astype('float64')) # shape=(1, 14, 13)
bop_917 = relay.equal(uop_913.astype('bool'), relay.reshape(var_912.astype('bool'), relay.shape_of(uop_913))) # shape=(1, 14, 13)
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
var_929 = relay.var("var_929", dtype = "float64", shape = (2080,))#candidate|929|(2080,)|var|float64
call_928 = func_770_call(relay.reshape(var_929.astype('float64'), [10, 13, 16]))
call_930 = func_770_call(relay.reshape(var_929.astype('float64'), [10, 13, 16]))
output = relay.Tuple([bop_917,call_928,var_929,])
output2 = relay.Tuple([bop_917,call_930,var_929,])
func_932 = relay.Function([var_912,var_929,], output)
mod['func_932'] = func_932
mod = relay.transform.InferType()(mod)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_932_call = mutated_mod.get_global_var('func_932')
var_934 = relay.var("var_934", dtype = "float64", shape = (1, 14, 13))#candidate|934|(1, 14, 13)|var|float64
var_935 = relay.var("var_935", dtype = "float64", shape = (2080,))#candidate|935|(2080,)|var|float64
call_933 = func_932_call(var_934,var_935,)
output = call_933
func_936 = relay.Function([var_934,var_935,], output)
mutated_mod['func_936'] = func_936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1182 = relay.var("var_1182", dtype = "float64", shape = (12, 11, 16))#candidate|1182|(12, 11, 16)|var|float64
uop_1183 = relay.log2(var_1182.astype('float64')) # shape=(12, 11, 16)
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
var_1186 = relay.var("var_1186", dtype = "float64", shape = (104, 20))#candidate|1186|(104, 20)|var|float64
call_1185 = func_770_call(relay.reshape(var_1186.astype('float64'), [10, 13, 16]))
call_1187 = func_770_call(relay.reshape(var_1186.astype('float64'), [10, 13, 16]))
uop_1188 = relay.sigmoid(uop_1183.astype('float32')) # shape=(12, 11, 16)
output = relay.Tuple([call_1185,var_1186,uop_1188,])
output2 = relay.Tuple([call_1187,var_1186,uop_1188,])
func_1197 = relay.Function([var_1182,var_1186,], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
var_1198 = relay.var("var_1198", dtype = "float64", shape = (12, 11, 16))#candidate|1198|(12, 11, 16)|var|float64
var_1199 = relay.var("var_1199", dtype = "float64", shape = (104, 20))#candidate|1199|(104, 20)|var|float64
output = func_1197(var_1198,var_1199,)
func_1200 = relay.Function([var_1198,var_1199,], output)
mutated_mod['func_1200'] = func_1200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1427 = relay.var("var_1427", dtype = "float32", shape = (5, 1, 16))#candidate|1427|(5, 1, 16)|var|float32
const_1428 = relay.const([[[0.016477,-5.177572,4.385674,1.839387,-9.012053,-0.886171,-0.067283,-2.934567,8.176496,5.381211,-6.980007,4.012257,-9.124020,-3.829890,-6.881137,-1.462208],[-6.596778,-9.415014,0.530636,-8.588270,-9.806495,-7.449563,7.545614,9.604049,8.599254,7.265908,4.136522,-9.115789,-6.685725,-0.209943,-0.839963,-8.196996]],[[8.210367,2.827150,7.635493,8.636650,-0.082802,-1.463815,-3.187851,-2.742853,-9.710344,9.536553,7.528075,3.562394,-1.273175,-6.810545,-0.855858,4.517332],[6.000903,3.113047,-6.510242,-1.852858,-9.365341,-5.617122,-1.108744,-7.876353,3.912316,-1.807173,-0.164811,-3.631018,4.559482,5.979568,8.543466,-0.975299]],[[0.296696,3.287840,-9.475902,3.331879,-0.931511,3.051233,-3.372048,2.450716,-2.554738,-9.597006,-2.055815,0.862355,9.574242,4.838570,-3.116326,-4.452670],[3.815476,4.090924,1.121396,-9.350590,5.760820,1.950818,-8.686626,9.101666,-9.275185,0.870535,-6.649843,2.200017,7.618885,-3.850051,-2.740501,-9.186686]],[[2.693248,6.548252,-0.352632,-8.361393,4.033597,0.161818,2.364645,-1.872218,1.801580,-6.243455,5.321518,3.104434,-4.584671,-9.242883,-8.745810,9.376885],[-9.120161,6.333351,-1.487574,-0.280435,8.397474,2.881542,-7.101089,-2.773307,9.595463,1.985399,-3.067976,-3.701818,3.912794,2.243556,4.891839,2.393176]],[[4.955271,-0.905465,-4.280184,-1.702162,-7.002125,-0.580669,9.835856,-9.576917,3.941665,1.338748,3.846449,1.599740,-4.659158,-4.397977,1.711083,-8.045645],[-5.235847,-2.595613,2.812051,-3.363677,0.939766,1.574586,-7.347920,0.920052,5.987956,2.156739,-4.966517,3.745971,-4.119073,-5.050322,3.269490,-2.000545]]], dtype = "float32")#candidate|1428|(5, 2, 16)|const|float32
bop_1429 = relay.floor_mod(var_1427.astype('float32'), const_1428.astype('float32')) # shape=(5, 2, 16)
func_932_call = mod.get_global_var('func_932')
func_936_call = mutated_mod.get_global_var('func_936')
const_1437 = relay.const([-8.634741,-6.451420,-6.712565,1.491026,-7.819321,9.017409,2.434876,-9.278096,3.713004,2.026759,-1.345169,-8.769944,-4.701128,-5.432754,-9.160566,-6.086926,7.555179,-5.704758,6.070862,-9.233955,-8.135489,9.203484,1.706726,-5.667401,1.157276,4.121046,9.335187,-2.532762,-1.436905,6.470653,1.632919,9.574061,5.620014,-3.073691,-6.286312,-3.610925,-3.664215,-0.701195,1.306304,-9.871271,-0.097097,4.033581,-3.397096,-5.106478,-0.022288,5.870398,3.186370,-4.891025,5.224770,7.537367,-9.559017,-7.523817,6.446449,-0.054870,4.878087,6.355583,-2.119214,-0.979797,-0.737315,1.053465,-6.267116,-0.051905,9.119741,-0.889876,-9.476027,-8.096994,2.548098,5.410552,9.108404,-9.230254,5.554857,7.203912,-1.646322,-5.465864,-2.371162,1.815878,-9.987356,-0.183233,-3.729267,-0.624101,-8.925242,7.961236,-4.238918,-2.353354,-9.654396,-3.247337,-5.153935,3.291849,7.933857,-9.205472,8.755507,4.203773,7.786692,-8.773952,-2.049082,-0.568030,5.340382,8.310325,3.856419,-3.770656,-9.615036,9.666700,-1.943781,6.081235,-6.198504,1.524089,7.277333,3.436986,-4.921643,-3.480820,7.553867,9.510255,6.110578,-9.107512,-0.137832,-3.358987,0.001437,2.595281,9.739003,-0.101307,-0.733541,8.419508,-7.348991,8.330762,-3.772204,4.437570,-6.973763,4.225194,6.611038,-2.089642,-9.744160,-1.155837,-0.013320,7.037300,-5.598056,5.731670,9.540399,-6.806931,-6.237788,-4.287733,-7.290123,-1.599833,-4.208032,-2.046297,6.758052,8.335648,5.760480,5.777529,2.442221,2.548319,-0.071012,2.916506,-2.199558,6.287622,0.451922,5.534866,-3.403043,-4.705914,4.676878,-9.139285,-0.450457,-3.684826,-9.242343,7.225828,-4.041331,7.513813,-6.496237,-4.494510,5.464097,8.813137,3.043912,-3.657456,-1.529036,-2.530982,7.526695,-7.548308,-2.815360,8.463892,-4.808794,4.878988,-9.484757,-1.786061], dtype = "float64")#candidate|1437|(182,)|const|float64
const_1438 = relay.const([-6.975527,7.485070,3.711952,5.989999,-6.681887,-2.022696,4.783746,7.184095,4.163072,-6.273978,-2.112385,6.328073,-1.883157,8.925346,-5.914416,-1.365328,1.548722,2.832415,2.649624,-4.526608,-2.147982,0.170213,5.560716,-6.417036,-8.405657,-7.247088,-3.420909,5.894257,6.962917,-5.983409,3.913376,4.497318,-9.312303,3.387027,5.647147,1.526516,-1.185193,8.610353,-5.847187,1.745917,-3.206644,7.126665,8.623167,-3.682349,0.881033,-8.091015,9.617378,8.228179,-6.351932,-4.878623,-4.675282,-9.161287,-6.735180,-3.993345,6.833116,7.843491,8.048314,-4.268828,1.275916,-4.979108,0.439026,9.938277,-5.392162,-0.105698,-9.648503,-5.454216,-3.688556,9.064635,8.857682,4.643948,1.904442,-1.635834,2.304679,2.709610,5.539158,1.860836,7.093456,-8.355570,0.476094,-4.498780,9.882536,-3.865999,8.856883,-6.859794,3.134951,5.806714,6.876726,-2.973549,-8.476539,5.377856,1.546486,-2.631397,-1.411702,-3.345564,9.403318,2.908909,1.185883,8.614424,8.211252,1.327977,7.673108,-3.431671,4.706833,-0.488888,-3.671748,3.771734,-8.479169,-0.733691,-9.355754,4.064977,-6.020924,-4.161243,-0.222037,-5.879253,-6.728956,9.444411,9.791248,-3.591204,-8.030305,-9.788889,-2.090617,-0.010409,-6.969556,7.808143,2.486848,-9.282692,6.854904,4.259760,-9.358566,-8.231104,-0.745973,2.970084,5.550186,-1.070767,-4.771672,-8.779217,-6.555778,9.824985,-0.161043,-8.222686,2.157673,6.007386,5.818003,3.748793,-3.828234,-1.510787,3.072804,-0.862026,0.086842,-5.071326,-8.066003,7.955736,2.563424,2.035782,2.175672,6.230420,-6.059238,-4.452640,8.029560,-6.301831,0.088753,-6.236264,-7.031915,3.196959,7.250847,7.879244,-9.103134,6.055954,6.856940,2.411199,-3.955664,-9.689689,9.227807,-6.976246,-0.612819,5.548944,-4.380288,-7.946174,-9.322816,-0.463853,1.217190,9.118374,-3.275591,9.630836,6.704280,0.411049,3.766839,7.246543,-1.602040,2.378512,-3.638222,-8.384461,3.172035,2.260454,-6.101008,3.961745,2.667726,3.014942,1.078141,1.587671,-3.516835,-6.643082,-8.473313,-0.094224,-4.640672,2.172139,-0.674793,9.053997,-6.969386,-5.483435,-1.225735,-4.911478,-3.930412,-1.770498,-8.349380,3.497805,-4.631535,-9.680243,0.691993,7.958204,9.045277,-2.487669,-7.123143,4.408714,-6.483988,8.644591,9.663802,-8.152784,3.677129,-9.883986,-4.970777,-5.990981,9.167843,-2.262133,-2.504856,-9.306017,-1.815205,6.999818,-4.300907,-0.382073,-8.857874,-2.038157,8.956819,-9.862475,6.928240,3.351421,-9.353366,-1.538361,-8.736893,-9.606141,-0.881124,-0.940199,3.858930,5.489423,-5.830109,-0.329457,2.346725,7.801534,8.441184,2.739006,-8.151761,-5.520443,9.890060,-1.270949,5.022643,-2.470589,-4.217236,6.202628,-5.846308,0.118016,-4.557407,-9.944845,-3.127540,-3.257144,9.944351,-4.188522,-4.950977,-0.347336,1.272842,-3.119965,9.124395,-5.322320,3.385248,5.833047,-4.957060,6.554285,-2.313952,-1.453622,7.726472,-2.398322,3.038174,-1.978477,4.899938,4.653265,4.123792,-6.884796,-3.798367,-8.128867,-5.258708,6.478912,9.653771,1.286424,-3.589970,-9.868178,-7.554933,-0.925802,-8.249737,-7.331782,3.611806,-1.721983,8.793284,8.930228,-2.915115,9.115551,5.618852,5.914473,8.175143,-1.394549,4.969408,7.222665,6.533469,4.121279,-1.391657,-4.367916,3.750510,6.789326,5.385409,-7.786362,-5.097859,-6.899702,-3.098559,-7.198376,-0.954806,-4.906958,-7.374626,4.398685,7.142697,9.890517,-6.040860,-2.749779,-5.842545,-3.543968,-9.331126,4.889447,3.416228,2.112197,-7.547246,6.333235,-8.913468,-2.288108,-9.766820,8.448268,-6.507201,4.470154,-2.273177,-8.980090,0.940557,-3.736757,5.438328,4.382001,8.486304,-6.334767,-8.295208,-6.690099,4.459570,5.093912,-4.644075,-9.653461,6.245476,-6.886319,1.091669,2.954034,5.599294,-2.335525,3.552217,5.930190,-6.335429,-4.087893,-5.849899,-6.941386,6.102261,3.112919,-6.270738,-2.239068,3.172346,2.619282,9.294491,-0.375067,-6.725286,0.931530,-2.254246,-0.017165,2.272615,3.286422,6.777025,7.035725,-0.684687,-4.285393,-7.080330,-8.558455,0.133914,-2.205222,-8.735696,-0.437863,-8.005058,8.566136,-5.072858,0.855368,-5.742530,5.112190,-3.421895,6.454366,0.599183,3.529207,-5.146015,-0.398639,6.002339,4.183915,4.344762,-2.616186,1.140713,-8.634510,7.151846,3.462111,-7.214616,5.315043,-2.129556,8.738140,4.865243,3.865326,8.317736,8.023510,7.497548,-6.722391,-0.184299,-0.722412,-2.911805,-4.804753,-1.363903,-9.529904,-4.180061,-6.642259,-0.715181,2.811708,-9.191176,5.998871,-2.637555,3.268799,6.919248,-2.705682,-3.273770,-0.274753,6.978833,0.745785,-4.003279,-7.552625,8.943790,2.118239,3.231415,9.029424,-1.005117,6.115720,-7.023233,-5.558091,-2.161410,1.020123,4.855716,-1.952303,-8.256916,-3.778136,7.617475,-6.380155,1.714765,-0.982969,-6.540112,5.990553,-2.379752,5.770527,4.807951,2.073728,-9.517075,-0.567964,-2.183761,-3.770596,-0.825742,8.874927,3.789729,1.233670,-1.183437,9.855347,3.909872,1.976666,4.182851,-0.841352,-9.161333,7.365461,7.383942,-5.151829,-7.047355,-8.797754,7.255221,-6.802794,4.215075,-6.279827,7.029210,-4.861000,-7.455470,-3.671123,-4.792755,-5.316177,-4.486981,6.257920,8.464898,8.583334,-5.578668,8.575029,-9.089906,2.733471,6.674277,3.479526,2.965507,1.735082,2.719170,-3.086578,5.628186,-4.217882,-3.926762,1.509178,8.938140,4.273032,-1.199508,7.932406,-9.720734,6.983156,-9.533386,-6.367200,-6.578825,8.482531,9.716569,-5.035264,-7.640492,5.134239,-9.638145,4.119673,7.685638,-5.140193,8.166432,-1.615169,-6.673545,6.091702,-4.543728,-5.972637,2.898332,-2.767913,7.116194,3.612830,5.336953,-4.174946,0.720149,2.511656,-1.915944,2.616401,-8.023458,9.274732,9.860787,1.949609,-3.515693,-4.490568,-7.752799,4.102342,1.338235,0.820512,8.055675,3.561615,0.320093,2.417147,-6.003523,6.349537,2.485545,0.039254,5.028455,-5.897330,-0.465329,-0.833746,-4.870902,4.195667,-0.114325,-8.812135,-6.865440,0.294835,6.364323,-8.299786,7.393823,-5.393517,-3.916328,0.078974,-0.174744,-2.661062,-0.407685,7.083354,-1.852812,1.135502,-9.636037,-6.139703,6.165851,-8.469547,-6.189758,-5.341717,3.151074,-2.881649,-8.663426,6.302586,-0.181902,8.598790,-7.313541,4.570519,8.599852,-6.376181,-8.478388,7.693444,-1.394776,-7.833471,-1.589072,-7.585511,3.181653,5.931358,-4.461525,8.122869,-0.767742,6.458422,2.454507,2.662607,4.921488,-1.566790,-2.417126,8.426774,-3.354820,-1.853996,-0.659602,-3.728794,7.555454,4.599614,-3.558294,-7.130468,-1.669258,-5.823715,-7.859497,-7.453351,3.797237,-3.553246,-8.570276,-5.805848,0.644059,4.331827,3.129137,-1.439497,-6.566853,-6.791403,-6.043000,9.582715,-4.260910,-1.099356,-6.512091,7.222722,-2.487843,9.446670,6.811524,9.653320,-4.167630,8.923299,-5.639077,0.157503,9.922772,9.041830,-2.870748,-2.746477,-9.292868,-9.005972,-5.781258,-0.218837,3.978744,2.042733,5.019509,5.147434,-3.092394,3.426794,-3.476891,1.021153,-9.809408,1.765548,7.954564,-7.211162,0.763862,-1.567561,-2.764948,-4.057836,0.795716,-2.125040,-3.976168,-7.983542,-0.597975,4.859406,-2.101403,5.143141,3.161129,-8.680557,-1.087123,4.069024,7.926577,3.523922,-0.914649,3.466367,-6.263767,2.426825,5.586548,2.132771,4.724392,5.669063,7.046728,5.252829,3.265287,8.041856,-2.899926,4.373515,1.145202,8.199504,-7.728292,4.913234,-1.946630,6.992338,-3.354711,-4.667738,0.756054,-7.857721,-4.509087,-0.204732,2.105469,4.127034,-0.784834,8.097284,-5.078630,5.624704,4.074718,0.239080,5.873331,2.864995,8.085993,-7.664568,1.747123,4.625081,-4.108768,-7.109887,8.062527,7.284305,-8.113489,5.572165,8.442702,-4.686432,0.774923,-1.208291,-6.845302,5.204981,8.963760,3.301119,-8.317507,-1.819390,-6.222548,-6.550730,4.430646,9.276976,-3.738559,-1.202422,9.845395,-5.944576,-0.034702,-9.227556,-2.926131,-5.897362,4.701464,6.438122,-9.398030,-4.071931,-3.512092,-4.900982,-5.569375,5.208590,7.744484,-4.087988,-3.288395,2.258931,0.601053,-7.864704,4.734589,-2.758748,-0.695618,-0.094314,4.926898,6.151903,6.853760,8.073185,6.903651,-5.894402,-2.047068,9.261582,6.207321,8.168382,-4.697696,1.721577,-7.462248,-9.237070,1.071281,9.073374,7.559971,-1.421670,6.821901,-9.231222,-2.294493,1.812791,2.412787,-5.855985,2.112772,-9.968759,9.287855,-7.707238,4.735370,-8.288632,8.889719,1.599492,-1.605237,-1.328796,-0.924149,-9.062442,0.455399,4.021328,-7.855762,-0.724663,-9.374436,-0.017180,-2.032630,5.903991,2.048919,-9.459597,-2.123770,-2.015732,6.573644,-1.866263,6.700584,-8.272983,-9.852162,-9.369000,2.193838,-3.684724,4.052686,0.212640,3.157983,0.128919,-6.097841,-6.725670,8.571190,2.047476,9.065399,-5.099097,-1.396189,2.074792,4.634323,-1.073520,-3.473600,-4.018849,3.344797,1.350984,-4.182670,1.647536,-5.447553,5.764890,-1.137930,-9.512562,-1.202015,0.772228,-3.252707,2.868439,-5.592248,-6.163968,2.012626,-4.946011,8.976259,8.706088,-0.118069,-9.144683,-3.986891,-1.266296,0.921799,-0.024657,-0.892056,-9.643259,3.681743,-6.654949,7.599938,-2.366383,0.397607,3.039557,5.060789,-8.915807,-7.030325,-9.815653,2.711790,7.417201,-4.882749,-8.090907,4.845257,3.777010,7.382402,-9.431122,-2.738149,9.773867,0.396093,-3.489916,8.023859,-8.551464,-2.270513,9.222732,-7.702516,-7.249352,-8.677632,2.608774,8.278366,-4.835838,-5.944571,-2.471759,-7.006665,-0.037735,-1.456896,-4.420873,7.533135,0.265882,6.683463,7.995613,-3.418589,-3.587686,1.900877,-7.724209,-5.378997,4.719518,-0.350979,-0.347654,5.180086,-3.497895,8.240875,3.604622,-3.705940,-4.735713,2.394540,5.911031,2.800373,6.372134,2.959700,-4.485439,-1.943050,-6.124526,5.135640,0.509945,5.089121,-1.678887,-9.545220,1.743121,6.125277,5.322171,-1.400062,-4.176260,-5.754680,-1.664351,3.813271,-9.862984,-5.392234,-3.369117,2.118184,-7.625618,-5.509495,9.262609,-9.863503,4.019399,9.573814,1.553768,2.962492,2.439968,6.425817,7.177918,-1.705384,-4.986104,-7.815340,-2.671427,5.995806,-6.291564,-9.302612,-3.999847,-4.892248,-2.208141,-8.728119,7.689777,2.253153,-4.854378,-9.099186,1.914531,2.988954,1.907546,3.262273,4.865905,-3.695271,-1.517342,2.455723,-9.413050,-4.196812,8.719631,-3.605587,-9.841922,-8.830664,-3.535964,-0.991889,8.805212,9.991115,5.710991,5.579337,6.581464,-6.929294,-0.746410,5.831931,0.508083,6.171660,-0.379292,-8.976203,5.799483,1.768445,5.176182,3.583870,6.401329,-7.038356,0.138869,4.348297,8.209532,-6.101119,-5.257186,-0.181921,1.775862,-0.899086,7.219941,-7.222311,8.706947,-3.541881,3.451097,-1.057919,0.238202,3.301649,-1.615900,2.463118,-2.946214,2.697800,0.069351,7.366977,3.959152,2.744653,-4.100093,8.258401,9.852693,-2.199495,1.432975,-8.308835,3.951578,-3.166232,-6.514448,-0.770691,7.409701,4.410739,0.233963,-1.900200,8.961785,-1.807008,6.384804,9.164551,4.474963,-8.969557,-1.173679,2.879577,-6.857122,0.661235,-9.773276,-1.741384,9.180247,-8.060566,-0.067528,9.286262,-5.006234,1.193272,8.341793,2.877914,-3.817125,-3.072481,-8.129571,7.099506,7.561440,7.619530,-4.036683,4.454298,-7.019380,-0.791570,-3.801387,-9.123254,5.508691,5.765056,-5.238660,-5.246320,-6.711277,-1.684518,-1.421273,6.881233,-2.898572,6.074472,-0.535434,2.765669,5.291292,0.817775,1.192656,-5.174390,3.405065,-8.862433,-3.455082,2.651168,8.162284,9.500224,2.365083,6.249763,-0.130883,-4.719911,3.518635,7.483261,4.457540,4.972878,-9.983949,-4.586003,2.514775,1.210395,0.897762,-5.677189,-3.022281,-3.478741,-9.880015,-4.101610,9.598674,-5.393047,-4.487733,2.492006,-1.010098,-4.528657,-4.237338,4.882700,9.705249,-0.751289,7.168152,7.666765,-5.365438,2.185537,8.656694,5.038395,-8.368120,-8.394631,5.163365,-2.121214,-8.574569,-6.631912,6.794409,-7.701143,5.916496,3.076733,6.945221,-4.966713,5.789094,-7.480723,2.877537,1.473865,0.139239,-3.772300,0.781378,3.386048,-0.080209,-8.949680,5.863225,-8.526215,5.108240,7.645552,9.895340,5.013564,6.393932,4.836288,6.954872,-8.961389,-9.646606,-1.782217,5.562267,9.998813,0.871462,-7.199979,-7.934054,1.705408,-4.673763,-4.379496,9.607461,-8.225650,-1.397127,6.837449,-4.555126,-0.194144,5.156670,-9.035163,-3.655477,-4.155332,-0.830319,-0.877891,3.617105,-5.633688,-7.859819,5.307540,-3.835731,-3.223789,-9.461115,7.086436,0.037233,3.354050,-2.842632,-6.611936,-7.631197,-0.732065,1.115198,1.478301,2.257847,-7.030968,7.825879,8.154800,-5.202599,-3.430430,7.773488,8.752722,6.856074,9.539959,9.260381,8.038364,-7.336917,-6.976056,-5.385806,8.868644,6.304969,-4.841541,8.298844,5.528513,5.430126,-2.304220,2.991113,-5.589661,5.554596,-4.449447,8.741137,-3.829723,6.771747,7.510970,-5.730906,7.312496,-5.766799,-8.797658,9.237693,0.225644,8.570315,-7.620153,-9.700071,-3.607314,-3.890183,-0.434338,-6.819407,-1.559946,3.486867,6.373229,-0.901251,9.433953,-5.852784,-6.353837,9.359796,8.583292,-4.054162,1.000975,-9.983858,-4.004914,-9.200826,-9.581761,9.839055,6.070328,-6.755817,-1.703334,7.702884,6.617272,-7.762475,-2.858621,-9.367754,-7.239302,3.041288,2.351027,2.906183,-3.880768,-9.557504,-7.854059,5.691439,-2.729502,0.955948,-9.090384,-9.280578,-2.326871,-4.223735,3.333364,-6.166012,0.324928,5.084756,6.840445,-2.284265,9.223088,-0.393488,-1.900502,4.535691,7.304665,4.197920,7.311695,-2.215157,-4.794120,-0.115122,6.812764,-7.599111,-4.875669,4.393223,-4.475682,-6.776659,-9.342337,-1.142610,-9.382775,7.279220,-4.080754,-9.515964,-1.857936,9.020196,3.839631,-0.848980,8.734085,7.989417,6.052068,8.103772,-0.779837,2.927772,7.818876,1.989118,1.796143,0.182689,8.290600,9.451877,-7.604437,0.258962,0.048052,-1.913784,-1.531967,-2.103440,-2.179849,3.404708,0.798679,5.216397,-9.171069,5.680304,5.908487,9.929316,-0.688633,3.057448,-7.045925,-0.887284,-7.963924,-8.684354,-0.154059,-0.207253,-8.414442,9.063742,-2.162764,-9.909077,4.401403,-3.664682,4.573260,2.574948,5.834787,-3.958067,0.111325,9.227275,-5.655137,-9.684857,-9.660385,0.942384,6.149481,8.190447,-2.341960,-9.781216,5.797055,-5.733391,9.582520,-4.819827,-9.345601,-4.859478,6.178652,-3.397296,2.617125,-0.364759,5.311555,-9.510684,-8.828454,0.874587,-6.643087,-9.004988,-5.756860,-4.967437,-9.585505,-6.909204,5.593067,3.721274,-5.654728,-2.773219,-9.156239,-0.135274,7.538264,-5.157266,-2.189597,-6.189544,-9.132541,-4.127246,2.526361,-7.838781,7.641055,7.439448,5.848316,0.853053,-9.664420,2.262411,-3.037914,-7.647470,-4.466805,9.950126,-6.891183,0.361852,-1.430286,-0.194441,-4.812675,6.045080,8.994416,6.783562,0.504431,9.860932,-5.719639,0.012171,-8.606794,-7.498507,-6.574490,7.327872,4.164048,6.524030,-1.032998,-0.847931,-0.657555,-8.616464,-7.773181,-0.629648,-8.792138,0.544997,-8.886098,4.075428,-2.168901,-6.140527,9.122172,-3.775052,-1.464680,-6.238443,7.837682,-2.712719,-0.207413,7.498856,-4.937978,3.098145,7.364694,3.053955,6.133371,-0.202745,1.709174,-1.980179,-3.153764,5.862476,9.340642,0.611857,-8.453454,-7.262563,-6.565744,3.219590,-1.659307,5.061088,3.162121,6.523618,5.467533,0.581233,-0.322569,3.831875,-0.545964,-4.601211,-3.028226,-3.367704,6.710380,-0.497471,-5.212315,-9.223377,-6.410574,6.619813,-1.112547,-4.162464,-6.073078,-8.291570,4.182501,-0.833949,2.586186,4.451555,-0.036913,-0.568860,2.853683,-9.174140,4.079598,-1.423942,-4.682397,0.704777,-7.200697,5.211194,2.249429,-0.321662,2.833577,-7.540685,9.899339,4.859049,4.702657,2.570005,-0.693278,3.519281,-5.934304,6.898639,9.603215,8.691848,-7.811522,-7.873221,6.369479,-0.906807,1.154403,6.024931,3.511455,8.265631,-6.206995,9.047502,-0.159071,-9.209985,-5.336527,3.525088,8.323271,6.283326,8.514991,7.526001,-1.457264,-8.771221,5.497916,-5.339847,-1.315032,6.939184,-2.022337,1.451337,8.308775,3.273165,4.771533,7.513721,-9.804245,-5.045504,9.367626,-5.382722,9.630580,2.111931,-4.183617,8.135799,8.809374,8.070466,5.576922,-6.303476,6.203536,-7.218893,1.886620,9.370718,5.918369,0.204785,0.102447,-5.889700,-1.801899,3.987698,-8.320787,8.855810,-4.686660,3.448021,2.174120,-9.240855,-6.959926,1.956960,4.408836,0.307370,-5.592904,1.239206,-0.565285,0.996079,6.635863,0.264024,8.346911,-6.271978,9.869113,-4.425724,4.445758,9.216670,5.204639,7.491874,8.810434,5.321779,-3.713274,-1.694917,2.309021,6.109795,-5.102578,-4.622180,-1.265299,8.765633,-2.565462,-9.829326,6.855718,3.881255,2.287729,8.176634,0.306040,-9.472946,4.301746,-6.303491,-8.017918,7.486046,-9.225238,7.348184,-7.598547,8.702788,-8.582576,6.468706,4.193291,-8.763233,2.850938,-3.427252,4.265888,-6.720574,8.353113,4.192811,5.789858,-2.444624,-5.684519,-2.058363,4.081187,1.082475,2.029117,7.686481,-0.990189,0.839072,9.304389,-8.302791,5.827861,3.611495,-8.632208,-8.995186,7.613253,7.132636,-1.898426,4.204488,7.852694,0.367831,2.777578,-4.539478,1.517279,6.046294,1.341785,7.959410,8.102826,2.744862,8.390949,4.439315,-0.394988,-4.786033,-3.995978,-7.475194,-2.036349,-2.072925,-1.890855,3.237001,8.416644,-6.793206,0.778147,2.451959,-4.675394,-6.262107,-7.414095,1.906266,-3.035042,-0.068229,9.479778,2.755716,-1.985145,1.117498,-6.051325,-0.382714,1.465347,-2.085522,-3.055850,5.501502,-5.100076,-1.664353,4.146331,3.276446,1.926582,-7.830572,0.025292,1.485652,-3.919706,-7.749652,3.001400,-1.479646,-5.568710,8.422051,-3.985856,8.510248,-2.499168,8.787432,3.725795,-2.895433,-8.062412,0.461060,-3.601500,-1.128418,0.142261,7.542857,5.563157,-0.608815,-9.358850,4.131797,-0.716427,3.259538,-0.551790,7.045472,0.788388,9.212632,-4.773678,3.870011,1.969149,0.656889,5.305387,5.148616,-8.207926,-8.239498,-5.588410,0.027152,-3.058717,1.610634,-1.098484,4.804693,-7.557827,9.924248,8.096504,8.090155,-0.008703,-8.153286,4.682350,5.106089,2.404033,-2.383316,8.590025,-2.387730,-8.879041,-5.572776,-9.080701,9.181018,-5.125574,-3.784628,5.975123,-5.979692,-7.138089,6.547196,6.798943,-5.089080,-9.886365,-0.390083,-9.993764,-4.863204,-1.349534,6.143095,-7.638494,-8.203186,-7.530666,-3.265339,-0.660726,1.435563,1.860139,2.233085,6.487248,4.732118,-6.152794,4.324549,5.923947,-3.472834,3.405509,-9.230789,-3.162171,-1.778514,2.264164,-0.019043,-2.331328,5.460092,0.476628,-1.163950,-8.040815,-4.545692,9.673667,2.645888,0.380292,-2.173941,-8.183289,-3.912178,1.727532,8.145589,-3.098127,4.898151,5.240323,-3.122416,7.004606,-1.812099,4.184554,-1.681494,-7.380366,9.794448,9.344186,-9.020182,-4.264620,-7.657499,-5.763248,5.721317,-4.110191,0.303807,0.816744,-3.267586,-0.387379,-5.761111,0.323134,-3.331944,-7.902448,-1.896811,2.755718,7.346171,4.985165,-4.603056,1.348121,-2.785564,-7.311100,-4.557121,-8.050548,-6.223905,9.504619,-1.446841,1.387130,-8.318129,-7.609349,-5.557862,-4.520467,3.021927,2.412144,4.723504,4.406678,-0.778961,6.005377,9.380415,7.862423,-6.301826,-1.642691,-6.509013,4.416842,-6.190177,8.022867,3.236947,-3.151172,6.624802,-3.189458,9.910983,2.078420,1.532672,-2.988055,-1.608512,-4.819960,-8.366829,2.387679,1.378714,9.275414,-8.125766,-0.033954,-1.872560,-4.951711,-8.481712,-4.946596,1.358244,-9.117889,-8.616382,1.023047,-0.592432,9.447100,3.691342,0.095370,8.154629,-6.816697,0.701548,-3.978215,8.339652,-2.630384,4.131583,1.964008,-5.541142,-3.690755,-8.579399,5.254358,2.128887,6.188960,6.721430,4.664328,-8.141917,-1.334534,-8.288053,4.464997,4.057187,-8.130799,2.325804,1.822437,5.904054,-2.975382,-5.015054,-2.396694,7.253907,-5.215685,8.505292,0.388087,9.941490,3.203528,-7.958362,9.039597,-5.561508,6.372703,-6.212923,8.618603,-2.185901,7.262396,3.314391,-0.767246,-5.690155,1.020282,9.187187,6.887437,-1.375636,-4.123907,3.810998,3.341561,7.546696,7.567278,8.155941,8.683379,8.228130,-0.986479,6.293355,8.928865,4.351700,2.866865,0.925531,1.921602,8.302705,6.493756,-5.993104,0.320708,1.844993,8.311665,1.724641,-9.052400,4.526274,-9.306873,1.448955,-3.962237,-9.620773,7.242477,-5.851946,-7.841035,4.352992,6.835920,-9.250511,3.243356,8.727819,-1.293450,-3.919158,1.054191,-2.002322,-3.950780,8.298380,-2.002880,-1.808886,-0.140058,5.649520,-2.978444,-0.296412,-5.172725,-9.290174,-9.376261,-2.001379,2.015958,0.613123,-1.980956,-1.952424,7.774184,-1.883607,5.244535,-6.617008,4.824645,-1.686818,-8.376392,4.213000,9.062163,-7.978206,-0.067175,7.388156,2.320807,-1.170907,-1.267211,-4.746876,8.527604,1.799171,2.744037,-3.328255,9.495952,5.563004,0.150891,-5.347679,-8.401595,-2.311282,4.972752,-4.388622,-7.602245,0.672553,6.915153,-0.831080,-5.978038,-9.507647,9.879845,-2.287040,1.023861,-7.845390,5.608625,-8.011341,-5.717263,-4.145737,-3.038374,-8.568860,1.624435,4.441914,-6.883352,9.414106,1.194252,-4.360379,-6.177853,-4.674163,-3.487699,-4.840284,9.370954,-3.182276,4.827449,-8.665504], dtype = "float64")#candidate|1438|(2080,)|const|float64
call_1436 = relay.TupleGetItem(func_932_call(relay.reshape(const_1437.astype('float64'), [1, 14, 13]), relay.reshape(const_1438.astype('float64'), [2080,]), ), 1)
call_1439 = relay.TupleGetItem(func_936_call(relay.reshape(const_1437.astype('float64'), [1, 14, 13]), relay.reshape(const_1438.astype('float64'), [2080,]), ), 1)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
var_1447 = relay.var("var_1447", dtype = "int32", shape = (252,))#candidate|1447|(252,)|var|int32
call_1446 = relay.TupleGetItem(func_41_call(relay.reshape(var_1447.astype('int32'), [14, 9, 2])), 0)
call_1448 = relay.TupleGetItem(func_43_call(relay.reshape(var_1447.astype('int32'), [14, 9, 2])), 0)
output = relay.Tuple([bop_1429,call_1436,const_1437,const_1438,call_1446,var_1447,])
output2 = relay.Tuple([bop_1429,call_1439,const_1437,const_1438,call_1448,var_1447,])
func_1450 = relay.Function([var_1427,var_1447,], output)
mod['func_1450'] = func_1450
mod = relay.transform.InferType()(mod)
mutated_mod['func_1450'] = func_1450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1452 = relay.var("var_1452", dtype = "float32", shape = (5, 1, 16))#candidate|1452|(5, 1, 16)|var|float32
var_1453 = relay.var("var_1453", dtype = "int32", shape = (252,))#candidate|1453|(252,)|var|int32
call_1451 = func_1450_call(var_1452,var_1453,)
output = call_1451
func_1454 = relay.Function([var_1452,var_1453,], output)
mutated_mod['func_1454'] = func_1454
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1515 = relay.const([[[9.577319,8.601659,-2.378565],[5.332472,-5.581508,2.247039],[6.402522,-0.180563,5.781086],[-7.524086,7.987740,5.781815],[4.974378,2.351094,8.949873],[-6.527856,5.066786,2.873135],[0.142980,3.735760,6.349839],[3.168045,9.467541,-4.066881],[1.829456,-5.338971,0.660733],[-5.681003,9.840958,9.488652]],[[-9.457384,3.357494,9.304392],[-2.970196,5.774069,-3.844240],[-4.063050,3.036239,-9.527796],[-7.697999,-7.953448,-8.366796],[2.875324,-9.067169,-6.196739],[8.803145,-1.853299,-3.155042],[5.731900,-6.521508,1.675192],[1.252944,-4.297758,1.907862],[-9.509389,-4.306222,-3.146344],[-3.005378,2.163709,-6.954083]],[[-1.475648,6.912103,-2.998120],[-3.295612,-8.058894,-3.571490],[-0.694905,3.839109,6.189011],[4.047360,-2.536672,-0.539148],[-6.147220,-8.205969,-0.469219],[4.708029,-3.848845,3.479706],[-6.853063,-8.833463,-4.287547],[-8.860359,9.494904,7.560324],[7.865617,-0.574561,6.159497],[-7.496047,-0.052518,6.514662]],[[-4.180512,1.084878,6.857002],[3.398787,9.167646,-3.740003],[3.761558,-8.479757,-5.852366],[5.711507,-2.657891,-6.489636],[-9.061688,4.556084,1.041662],[6.233066,2.326777,5.615693],[0.546001,-0.054537,-3.780173],[-4.724409,-8.255442,-8.717881],[1.230139,-1.262912,-9.571420],[5.409589,6.609361,6.340307]],[[1.121513,-8.651286,8.629046],[-5.173342,6.317804,4.980585],[3.247906,3.205954,-2.040514],[9.788114,4.663651,1.081687],[-9.772426,-3.249234,7.325623],[-4.112924,7.245680,3.631929],[-3.086599,2.195841,4.417824],[-8.161842,5.214839,-4.738125],[8.657423,5.669679,1.780486],[-5.137759,6.221752,4.821814]],[[-2.372668,2.061654,2.999407],[1.717466,-0.091368,1.670861],[0.368834,7.691764,3.249834],[0.796536,8.119487,2.827012],[4.484643,-4.586530,-1.532683],[-7.784298,4.417228,-9.445575],[-6.606157,3.721730,9.521901],[-5.058352,-4.400816,7.339758],[9.878523,-0.911589,2.737564],[4.074582,-6.618574,5.653952]],[[-5.854736,6.489849,9.679986],[-7.231326,9.761033,8.072205],[-8.421537,-2.524045,7.384564],[-7.342051,-1.068833,2.246705],[-2.098613,-6.957427,-7.704726],[1.675545,4.900850,-8.919903],[1.110226,0.522440,-6.904511],[7.155898,-6.619462,3.365388],[1.790914,3.301856,8.957574],[2.580139,4.952336,-7.380796]],[[3.025097,-7.811847,-8.807757],[1.022105,6.978331,5.788885],[0.549431,-4.573308,-1.946223],[9.874913,1.764261,0.584236],[7.587424,-9.065992,-5.064363],[-9.295252,1.526880,3.848366],[-1.448483,2.984376,2.990318],[9.600381,5.449799,-0.610232],[-6.356372,2.339300,-4.264891],[-8.780556,7.394282,8.907658]]], dtype = "float64")#candidate|1515|(8, 10, 3)|const|float64
var_1516 = relay.var("var_1516", dtype = "float64", shape = (8, 10, 3))#candidate|1516|(8, 10, 3)|var|float64
bop_1517 = relay.greater_equal(const_1515.astype('bool'), relay.reshape(var_1516.astype('bool'), relay.shape_of(const_1515))) # shape=(8, 10, 3)
output = bop_1517
output2 = bop_1517
func_1522 = relay.Function([var_1516,], output)
mod['func_1522'] = func_1522
mod = relay.transform.InferType()(mod)
var_1523 = relay.var("var_1523", dtype = "float64", shape = (8, 10, 3))#candidate|1523|(8, 10, 3)|var|float64
output = func_1522(var_1523)
func_1524 = relay.Function([var_1523], output)
mutated_mod['func_1524'] = func_1524
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1723 = relay.const([[[8.029782,2.403805,-4.720362,5.807023,3.861891],[1.702533,8.099032,8.760820,2.097160,-9.395943],[0.108691,2.176450,-2.924166,-6.656849,-2.614508],[2.929783,-3.058046,-5.460751,8.013789,-2.585583],[2.959402,9.669279,-6.556315,-1.333474,6.101460],[-8.734994,7.803197,-7.099728,-8.264766,3.187003],[-0.054882,-6.279330,0.219364,2.932730,7.924166],[5.938521,9.935850,5.182333,6.510455,5.501821],[-6.818512,-4.070882,-4.299037,7.459399,9.639056],[5.455301,6.665314,1.820493,-5.195182,2.848769],[-5.887154,-4.622517,-2.869969,1.725258,4.841227],[-9.565638,-8.378652,1.067914,8.054889,5.729096],[-8.558105,-9.838845,8.169327,-9.460357,-0.941712],[4.342397,6.907653,2.628904,6.316997,7.813260],[1.038969,-1.666405,-5.047050,-1.718919,-5.840254]],[[2.227539,8.475483,-1.815438,6.368401,-9.100660],[-6.035302,-5.698919,-6.782387,0.897846,-8.502572],[-6.288901,-6.997182,5.383376,2.416686,-7.756896],[5.173006,-4.489241,0.005542,8.638364,7.526038],[5.476871,7.964139,1.032991,4.390616,1.787186],[-5.037839,0.877633,-5.394931,6.792228,3.634780],[3.614864,2.176239,7.945519,-3.941872,3.820853],[-9.191333,-4.035309,-5.299114,3.176597,-0.834371],[4.417266,1.092658,-4.502839,6.519602,3.941371],[8.465765,-4.471417,-5.690684,-9.440755,-7.224079],[-1.959584,-9.754116,8.747043,0.099635,-7.634989],[0.963424,-5.493134,-4.723945,0.046185,-3.230524],[-7.222946,0.744758,4.913981,-3.252456,1.970532],[7.678150,-0.541832,-9.001680,9.277281,-3.931088],[6.341459,8.161704,-3.946632,-1.244493,-2.669008]]], dtype = "float64")#candidate|1723|(2, 15, 5)|const|float64
uop_1724 = relay.sqrt(const_1723.astype('float64')) # shape=(2, 15, 5)
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
var_1752 = relay.var("var_1752", dtype = "float64", shape = (2080,))#candidate|1752|(2080,)|var|float64
call_1751 = func_770_call(relay.reshape(var_1752.astype('float64'), [10, 13, 16]))
call_1753 = func_770_call(relay.reshape(var_1752.astype('float64'), [10, 13, 16]))
output = relay.Tuple([uop_1724,call_1751,var_1752,])
output2 = relay.Tuple([uop_1724,call_1753,var_1752,])
func_1762 = relay.Function([var_1752,], output)
mod['func_1762'] = func_1762
mod = relay.transform.InferType()(mod)
mutated_mod['func_1762'] = func_1762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1763 = relay.var("var_1763", dtype = "float64", shape = (2080,))#candidate|1763|(2080,)|var|float64
func_1762_call = mutated_mod.get_global_var('func_1762')
call_1764 = func_1762_call(var_1763)
output = call_1764
func_1765 = relay.Function([var_1763], output)
mutated_mod['func_1765'] = func_1765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1951 = relay.var("var_1951", dtype = "float32", shape = (11, 13, 5))#candidate|1951|(11, 13, 5)|var|float32
uop_1952 = relay.sinh(var_1951.astype('float32')) # shape=(11, 13, 5)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
const_1983 = relay.const([8.453271,6.772718,9.490972,9.370812,-7.335257,-0.268928,-8.565522,2.755897,-8.890231,1.637908,-3.058662,8.213671,3.074672,6.149303,-6.643367,7.003582,6.055871,-4.878136,4.056486,9.266567,7.794892,5.314969,-2.441677,-4.150084,-1.379305,7.442726,4.779503,5.950301,-4.142397,1.422514,-4.849803,-2.265673,0.582433,-3.995923,-6.832481,3.728088,7.433046,4.111581,0.276084,-6.312304,-3.591849,-2.914982,-2.279396,-0.923461,-8.832916,-8.490717,4.338108,-2.793934,9.804753,6.791045,0.663179,7.472274,0.827295,-3.299229,-7.646577,7.734370,1.015739,-1.073658,7.737717,-8.803455,4.413971,-5.196908,9.461826,3.532000,-6.216117,-1.757302,8.937405,-4.565242,4.652622,2.882827,-5.473492,-3.599376,0.198886,5.461130,6.516935,-9.401296,-1.907014,0.679528,-4.906888,-9.814394,-7.294856,-8.995760,0.581676,-2.372319,5.565419,-2.014986,-8.075076,2.924543,-4.043644,-6.646552,-6.285031,-6.865586,-3.097361,-9.447346,-9.064449,2.244000,-4.336656,6.934876,-7.372351,-9.613387,8.584201,6.176622,1.834386,4.664221,-0.206984,9.846454,0.876517,3.327643,-8.949386,-9.142121,2.310431,4.116738,5.778606,5.272427,-4.694241,3.392275,-6.283579,-6.003921,-8.727378,4.596768,9.199175,0.035027,-3.639018,-7.381294,5.542545,-7.089205,-7.497559,-4.435058,-0.436401,-2.304163,7.664943,-2.944951,-6.656882,9.151378,3.582344,6.786756,4.676838,3.017709,-8.817078,-0.040379,-4.530683,-6.865074,-1.108675,-7.052053,-8.347371,-9.991039,-3.311404,4.334603,7.802385,6.798054,-3.771023,7.649665,-3.747363,8.529639,0.383081,-8.533552,-8.811007,-6.357285,8.561315,7.160050,2.711215,3.855002,8.445978,9.799898,5.862141,9.270474,5.464799,1.997740,3.772245,-3.689079,4.418926,-2.276833,0.710199,-9.966342,2.450568,-7.199414,7.028506,-2.613994,2.558893,8.560125,4.919755,-1.631702,-6.794441,-6.531703,-6.854240,-1.674087,1.276306,-9.252221,4.395742,4.875375,-8.322752,-6.892615,0.271895,-0.163892,-0.205816,1.500667,-4.408263,-0.279799,0.156744,-7.727463,-2.142437,7.774689,4.172445,-9.868921,0.918388,5.419228,-0.110093,1.234816,4.525636,-0.776044,-1.464026,8.761961,5.536012,9.267404,-9.798305,-5.406664,-7.775397,-0.987985,7.606454,-4.304241,-1.600233,4.873574,5.749143,-8.641677,-8.158143,-2.232124,-9.080773,-3.117536,-7.616667,-4.894764,3.717420,2.866576,1.905501,-3.301050,-8.359918,9.066638,-7.986182,9.908644,7.803575,-3.866013,-7.054347,-4.822932,-8.897259,-3.684383,-8.133298,6.511594,-9.387857,5.783019,-1.109543,-1.498042,5.200463,3.434140,-8.251512,7.313597,-6.609180,-2.331147,1.678400,2.131269,2.827148,-1.556334,8.855877,6.077547,-1.040095,5.829576,-9.566892,8.438432,1.177766,-0.044350,-2.672900,1.349975,6.587316,2.818591,8.282546,5.454060,3.928750,-3.153377,7.089858,-8.677521,7.279561,3.060419,1.387891,6.560946,6.331423,8.370096,9.383026,0.702491,-9.501165,3.315884,3.203976,-7.757192,-9.797326,5.778031,-9.340540,2.054882,0.322892,-8.426938,-7.675045,6.664313,3.580135,8.437974,-5.256132,9.584267,5.629983,-1.595577,6.264443,7.305205,8.895939,-6.081666,-6.817769,9.655130,-7.819086,2.815846,5.317183,-4.830036,4.116048,-9.680234,-7.710392,-1.537089,-7.356800,6.888794,8.759923,-3.028688,5.450845,-3.462025,-5.479441,-7.764564,1.430074,5.128669,-1.617114,3.854570,9.584167,7.559116,-6.412110,-7.233948,-4.466999,-0.094894,-7.863545,9.074173,5.944045,-8.424696,0.866589,-6.804864,-5.734375,-8.575358,-0.055830,-7.181821,4.633433,6.253862,3.058505,-4.807106,0.773781,5.271829,7.038742,-5.751627,-7.068550,9.242945,1.299112,8.726357,7.505448,-2.180435,1.251710,-2.475079,6.193550,-2.348126,4.986143,-1.408387,-2.814375,-8.906311,-8.072003,-3.107132,4.950563,2.751449,-7.527164,-6.647349,-8.227970,4.790106,2.146487,-9.021728,9.782799,3.640293,0.199568,-5.050051,7.190151,-6.636685,0.751521,5.057536,-1.065886,2.962426,2.792522,-9.128310,-4.955834,9.673868,4.825667,-3.149206,4.322325,5.940522,-7.357015,-2.044492,7.260155,3.657689,9.231361,5.246556,8.200425,-4.148886,7.386592,-2.107330,-7.191462,6.037089,0.430001,2.316946,-7.166546,-6.235132,-2.188687,-3.236052,7.889539,-2.476668,-8.088980,-3.700060,-9.465972,-5.964360,3.078510,7.398866,2.778576,-7.318076,8.207072,3.109146,-0.810249,-5.810503,-3.474181,-0.728088,-4.802282,-1.475321,9.403685,4.751065,-6.415186,5.601539,-1.315762,7.386945,8.356281,3.371945,5.674775,-9.567562,-9.257773,-0.200468,-3.531097,-3.194783,1.632385,4.308053,1.871365,-3.380060,5.533226,1.397925,0.969060,1.708185,-7.806623,4.555172,6.815735,-3.951674,-1.911458,-4.456638,5.861430,0.789119,1.881365,9.939844,6.818931,-0.711786,0.876423,2.849436,1.648183,-7.108681,6.576162,5.117603,6.437812,-3.651122,6.277444,-1.422897,6.447348,6.866376,7.682443,1.648427,7.659608,1.649903,8.253771,8.491401,1.071290,5.312610,3.104033,9.355500,-1.832208,-0.113123,-1.078326,-5.333424,-0.117954,-1.859867,7.496619,7.485487,-3.041200,8.014549,1.248128,-8.123488,-6.926383,7.376516,-2.819381,0.015825,-3.326883,-0.849221,-1.820775,-1.914147,2.777717,-9.951799,-8.692649,3.123944,-0.172341,-5.669974,5.081453,-9.028419,-6.211269,6.920766,-6.630326,4.986932,-5.786553,0.836371,2.919085,7.009784,8.139523,0.378990,9.126037,-7.369861,2.088748,6.209415,8.717088,0.923719,2.052616,-6.708531,1.508583,-1.049078,-2.732317,-9.685070,0.768775,-7.075973,-6.179036,-7.697785,-9.985613,6.640192,-0.553418,-3.745347,8.600888,7.135480,-3.384558,-7.945978,-9.674696,6.200465,6.576173,-8.152327,3.701273,1.112577,-3.132336,-2.346262,-3.342482,-5.843190,-4.812949,-7.155451,-2.016273,4.782701,6.354951,-4.584057,-1.989128,-8.812479,-8.745126,1.726893,8.324047,8.766848,-4.993798,-1.871291,4.148557,8.686246,8.509426,5.537760,-1.977454,-8.436179,9.551894,3.936370,-6.112397,1.954744,-1.598353,6.844421,6.031994,1.023077,-8.991882,-5.376554,-5.923375,3.421872,2.656544,-1.160105,6.810973,5.185156,4.368450,4.990423,9.360763,-9.625351,9.407412,5.339069,-4.143294,-0.891139,1.824186,6.900959,7.587157,3.841195,4.345375,-6.397249,9.045980,0.085169,-3.634436,-4.530438,0.730293,4.570506,-4.367090,4.716993,6.631915,0.005662,-6.836557,-2.083898,-0.598311,-7.809102,7.681457,-0.910078,4.464109,-2.139780,-7.979435,7.526791,1.548096,-3.766138,9.063866,5.863829,-2.171282,7.928551,5.489245,-8.243832,-6.567886,5.665001,1.813807,-6.343413,-4.585834,-5.346870,4.384812,-5.203557,-7.482378,4.977140,4.722128,-5.557093,5.586612,-4.006146,4.840810,-6.683760,-4.602246,-6.920427,-8.694511,-5.691833,7.185977,1.526434,-5.070833,4.249364,6.968520,-1.792231,5.082904,-1.297860,4.827259,0.827269,3.732243,-1.061199,-0.972625,2.194044,7.318427,9.932533,-1.023735,1.035652,-1.368205,1.980574,2.718653,-3.493097,-9.005918,-3.868723,-4.076723,-2.604649,5.949962,8.495310,0.205863,-5.336603,-8.818874,4.430947,1.931610,3.886868,-8.788905,3.067280,-5.806514,-7.963236,-2.353407,-9.916529,4.519094,-4.268319,4.231642,-7.655125,-6.597582,4.925632,-1.730391,4.463969,-1.250350,6.383103,1.942416,-9.865948,9.538650,-9.311553,5.348394,-7.507462,8.498852,-1.129891,-4.160712,-7.874389,4.106532,2.573268,-0.066534,0.050280,6.252465,7.769688,2.849677,-7.115999,8.221734,-6.395822,-4.204073,4.099799,9.723239,-6.385336,-3.311767,-7.244902,5.956481,7.464119,-3.451381,-5.818681,8.543625,-8.547239,3.868630,7.029899,8.712237,-7.989766,-0.060538,-2.309058,3.227268,1.093497,9.225791,6.355873,3.011055,-3.582761,-6.620785,6.591142,2.774275,-8.201249,6.219773,2.035457,-0.640230,-1.410537,5.949865,-7.871988,8.943291,-3.067527,-4.507161,7.197026,-5.812358,6.568987,-6.127914,-6.066010,8.161294,2.216188,9.922500,7.924066,-9.845701,-6.006314,-4.322205,-3.862744,3.913947,-5.827917,-6.019800,5.625082,-8.961180,7.329367,-5.863958,-1.938337,5.816870,-0.434592,-5.602081,-4.013906,9.065753,-7.065871,3.305781,2.340219,0.548114,-6.594265,-3.983180,-0.126531,9.639717,4.366985,0.780566,9.008128,1.399073,7.351524,3.355555,-2.528038,4.555191,1.823059,2.322414,4.172128,-1.144130,9.885669,3.060681,7.280960,8.906142,-2.659403,-1.591754,2.259034,4.005868,1.838023,-0.695771,9.622801,-0.969258,0.442963,-5.390616,-1.457828,-8.335423,6.029125,7.550971,-8.886570,3.119988,-9.637819,-5.459817,-3.152646,-4.554413,0.263484,1.935922,-9.286842,6.990606,-4.066535,-9.776172,-1.480839,-9.288729,9.279200,9.992648,-6.388829,-1.894743,-1.165228,9.817080,9.045827,8.945633,-3.607146,0.843743,-8.592800,-9.450058,-1.606701,-7.230389,-5.523902,-9.587734,-8.164661,9.574663,0.965377,6.868197,4.856066,-6.441077,7.558191,7.571139,-2.653929,-4.809135,8.519673,6.763142,-7.856136,-9.149423,-7.380681,-1.686687,-0.431659,-4.955655,1.112533,-0.143169,-2.223306,6.188834,-7.061733,5.952597,-8.750380,3.701478,7.236650,7.121045,-0.695933,-4.424720,2.477622,-4.659448,-7.164468,3.360630,-1.249178,-5.889578,-4.053118,-2.245890,-1.625764,2.083181,-4.582336,-0.220949,-9.704518,8.262878,-6.099233,7.109911,-1.711307,0.959992,-3.256284,-7.812003,-9.665401,9.959987,6.703205,3.856360,-2.687085,-6.007031,-8.555657,-8.103263,-1.944082,4.046939,4.571277,-4.137150,-4.626526,-5.379195,-6.096520,-5.439063,-6.026421,4.651034,8.089396,2.943791,-4.378019,-2.533790,5.022876,3.559410,-0.377897,-0.168006,7.183013,7.939729,-1.417731,5.093973,5.133035,-7.475155,1.726991,5.397217,-1.248593,-6.595421,-7.826364,0.814042,0.009532,8.639729,-9.275761,0.300189,8.693183,7.387238,5.445930,-0.435965,-3.654995,-6.556584,7.676374,3.544160,-7.310303,-1.994831,-1.057207,-9.272807,-7.153115,-2.666781,2.089956,-7.211325,-1.107465,0.040491,-9.540785,-7.898635,-3.687697,4.514989,-0.555717,6.119152,-6.970327,3.772207,-3.210695,1.820644,-5.904567,9.027118,4.647182,-7.179258,2.703254,8.777985,7.590290,3.186102,-3.102741,9.683285,8.745202,-3.236014,-6.836737,-5.234781,7.380267,4.374765,0.245846,-5.818159,2.383005,3.464194,-6.693638,-0.749835,-8.496703,1.259585,-6.316312,-8.529959,5.398744,-9.336881,-5.055250,-8.258787,-0.372369,5.725929,-6.790233,-0.794717,-1.846947,7.580473,0.983137,8.600751,0.814463,-4.942059,4.538881,1.371050,0.013895,9.130545,-6.200113,-4.314661,6.254332,4.943950,1.051743,6.741069,0.097632,-7.471838,8.768424,-2.560203,-0.343254,-1.590870,7.150615,-2.235250,7.131383,1.229900,-7.776702,-2.760555,6.269724,8.440980,-0.935891,4.584794,0.287453,-3.883908,9.594478,8.957158,0.003402,3.751721,2.763435,-7.304965,2.061298,2.389714,9.562069,-8.130820,8.300637,7.467676,-9.548687,0.088530,-0.923501,-6.875024,-2.325485,1.212126,-2.117261,7.385768,-7.282386,-6.227302,0.868116,2.476851,-0.740505,3.191186,-6.416711,6.844817,2.240137,-1.907392,-2.944431,0.491923,3.452647,-9.716865,-5.065802,6.028178,9.170710,-4.944533,6.694002,3.711214,8.738783,1.984450,4.653668,6.095385,5.653137,-7.243681,-7.180597,8.282790,-2.372329,9.908541,1.109356,-4.820678,8.959559,8.267729,-6.639589,-6.666067,8.977489,7.895411,-6.894256,-5.078625,1.876989,6.947014,-7.545208,3.715989,-2.049475,8.854999,0.186772,1.671280,1.942125,-1.956173,1.047708,9.003318,-5.260999,-8.759372,3.116960,9.874275,3.897782,9.222318,3.379255,1.437917,5.545557,8.620697,-7.532214,3.503434,6.437986,3.582560,-5.157441,1.020990,-1.696400,3.152371,-0.593468,-3.754446,6.055428,-7.228440,-3.844916,7.114611,-0.044846,-9.404005,1.542022,-7.962690,6.640324,2.946108,4.825068,4.769804,-0.867585,1.895231,7.469204,9.134507,8.249632,1.474035,5.069391,-1.197745,5.751130,-7.498374,-1.257593,5.338714,-7.141273,-3.996597,2.600568,1.335867,-9.583960,1.120994,-6.598391,9.466683,-9.316510,0.232695,9.374491,8.685680,7.004019,7.550075,8.058188,0.402229,7.445665,0.295297,1.619375,7.673482,5.897604,2.229848,4.272237,-9.801997,0.561981,0.439841,0.417133,2.325518,-3.986913,-8.139595,3.001117,7.901855,3.631064,-6.702504,-4.475730,9.506442,-5.845927,3.842687,0.764426,0.007321,-8.596750,2.739981,7.441297,-9.448605,5.738295,3.086399,-8.174556,4.447858,4.598207,8.634719,1.857094,-0.382870,0.268178,1.723806,6.528418,-8.320415,4.086869,1.718508,-4.128510,-9.286287,-4.800041,0.297008,3.773291,6.666078,-5.523890,-8.906825,3.251389,7.039623,-6.037937,1.450796,1.769236,1.721956,5.855418,4.670255,-2.003976,2.570523,-8.121555,-0.091450,6.267612,-9.380673,-7.518394,-6.795377,2.746226,-2.341031,-2.560667,1.087932,8.160221,4.548386,9.829364,4.063472,-0.017237,5.342727,6.622951,-9.978491,0.200232,-7.797358,0.784808,5.967015,-0.299886,2.686942,7.701576,-9.562087,8.698561,3.791726,-3.944261,3.123773,4.905599,6.873193,-4.863341,7.606420,3.569477,3.405544,-8.966562,5.800342,-5.529464,-0.443716,-3.841687,8.727017,-7.906939,-2.234080,7.721602,2.178636,-7.950305,7.989394,4.713713,-7.684820,-1.559059,5.638183,-8.243614,7.361923,6.822809,-6.428783,-8.811625,-1.199029,-3.363888,4.109033,-1.921093,-3.028712,-6.097466,9.714805,5.675563,-7.995850,3.648567,-6.779058,-0.892361,-1.404090,6.170200,7.800279,-7.782565,-5.704719,8.414324,-2.855329,1.720884,-9.517052,-1.164967,2.538691,-1.105957,3.840829,6.613163,9.427246,1.137174,-2.488717,0.284868,-1.564137,9.792961,-1.871223,0.609876,-4.907600,-9.061108,-6.124993,-5.338994,-8.050169,5.857485,-4.622707,4.769589,-7.622202,9.580395,-2.915940,5.795549,4.727713,2.793576,3.662063,-3.236171,7.939168,-7.354103,-1.626516,9.364936,0.086682,-7.575958,-1.794700,-7.274434,3.756220,6.393000,-2.767829,-5.161312,7.776822,8.120461,-0.035473,-9.383671,-3.493658,6.490381,5.601895,9.191314,4.347963,-0.694758,-8.430663,6.424195,-0.724612,9.297015,3.332181,-5.108062,5.513829,2.955586,-8.218932,-7.271473,-9.929546,5.328830,-8.299644,7.903739,-8.900375,2.502950,-1.895838,-6.518284,0.629971,2.884857,-5.656489,7.181967,5.588507,5.337950,-5.293924,3.924769,-8.995582,-1.344134,3.760227,-6.718304,8.807952,-4.005357,-0.676938,1.539725,-1.457400,-8.293651,-7.918591,2.656426,-4.553848,1.111314,-6.464070,-6.699146,9.513343,1.140196,-6.880537,3.283013,-8.628562,6.869724,-9.036384,-3.997272,8.647541,6.832158,6.689276,1.294516,-7.352123,-5.970979,4.526531,7.056473,-3.361494,-4.874613,-0.411792,-9.065711,6.173205,-5.453367,-9.660317,3.155428,2.967912,-3.529861,3.591148,0.259224,-2.919756,-6.056528,-9.107516,4.954332,-9.698715,2.364821,2.482952,3.794323,6.700246,-1.587479,6.819079,8.278259,5.492257,8.623063,6.505791,-0.199903,-3.608309,-2.179381,-3.355670,5.538656,0.415197,7.652854,3.235031,7.502304,-2.521889,-3.985308,3.256115,6.200417,1.756587,8.355542,9.560843,5.189781,-1.751895,-9.861655,2.937362,-2.853702,-8.194533,5.277733,-8.696876,-7.823054,-1.971392,-3.412092,-2.463501,-7.551592,-5.331609,-0.574144,5.212241,-0.099294,6.365070,-8.228938,-9.753758,0.819814,0.685515,-4.098070,-1.047200,-5.915756,-6.425950,-4.737548,-4.890367,-6.914874,6.387144,-1.358227,-1.631512,-2.445811,7.974512,-0.722570,7.835480,-2.108899,-3.614852,9.239489,3.441498,-1.684587,-3.964378,-9.931535,4.748425,-8.887965,-0.471261,-8.574433,5.326135,-7.330595,0.763083,-2.704602,2.390899,1.839595,-6.454260,-1.963591,6.975810,7.006670,4.636745,-7.141470,-9.412535,1.323646,-0.209694,-6.282770,5.345096,-7.504947,3.261516,4.434380,-6.559482,1.273272,3.201048,-2.449874,-9.925640,6.393007,-4.412264,-6.718690,-2.220746,1.395279,6.403521,-0.454950,-7.865511,-1.499052,7.019936,-3.760345,-2.174264,-1.640702,0.460987,-2.629331,-9.331012,-7.265532,-8.083462,-3.088348,-6.066346,4.816239,0.527126,-0.134358,-5.884881,2.619411,9.761327,6.311198,3.313512,0.229241,5.102888,-9.530286,0.550956,-8.493836,-5.558784,-8.380696,-1.558520,-7.941707,3.918084,9.653084,7.110253,-6.820283,9.395234,9.884494,8.483319,1.798849,-0.998541,2.943184,-6.341690,8.866144,-3.207617,-8.125292,6.310576,-8.213954,3.941273,8.563580,-1.815629,8.706332,8.801759,7.448771,-9.474230,2.638753,-3.269908,-8.890944,-0.497132,9.548770,-0.190910,1.645869,4.731925,-0.331881,-4.621663,3.047353,7.122564,-7.156525,8.646046,-9.196652,-8.957890,8.460989,-2.555030,-8.592099,0.565224,9.024804,3.392604,-3.843694,-7.869188,9.414418,-1.373748,8.034732,-0.966719,-2.874439,5.910510,2.180702,2.925350,2.738102,-5.362640,-8.219612,9.978695,9.654975,7.220050,1.136730,6.106581,-8.583144,-4.243464,4.879103,1.008441,-1.649605,-4.373444,-5.996286,-6.213826,0.036479,4.263498,8.975396,8.632931,6.782635,-0.864335,-9.840521,-0.623082,8.032171,9.212015,8.699087,-9.904182,8.953087,3.741798,-5.000081,9.859109,-7.128881,-9.777705,-0.170675,4.673734,-6.177377,-9.160147,5.712699,6.811434,1.353730,4.836342,6.417745,6.549794,8.580633,-2.105786,-5.022370,9.984380,0.430396,-2.480249,-4.636440,7.730675,6.528568,7.639458,-5.565117,5.828394,4.410023,-4.143856,6.308568,-8.889320,-4.384589,-9.314068,-6.793825,-5.988665,9.610530,0.570038,-0.378220,-7.230398,0.513742,-9.770073,-4.390588,0.883841,-2.091016,-0.739917,7.342682,-6.774750,-2.890125,4.900534,6.746674,-4.568033,-7.089437,-1.640797,-0.650382,9.720097,-6.035833,-3.244102,9.991963,6.529668,2.352709,2.847047,-4.683485,7.031457,4.610840,9.742527,-6.278186,3.105107,-8.127900,9.693553,8.773901,-9.367147,-2.008793,-1.948048,-2.218221,6.118932,-1.199418,9.593226,9.820706,6.654126,1.147720,3.355367,-9.870676,-1.870239,-9.192060,3.751781,-3.197417,1.823725,-6.516202,1.606739,1.122403,6.182803,7.757582,-6.075939,7.687986,7.180201,3.553016,-6.474038,-9.723346,-0.017936,-1.027802,-8.810701,6.159668,6.783039,6.245326,-8.566772,0.516483,-2.537841,-1.002751,6.370737,-9.685264,-6.608488,9.289492,2.184734,-8.699447,-3.460312,-5.909295,7.446840,0.330175,6.892862,3.326999,8.791224,7.141260,-8.032382,6.387706,6.771626,-1.260139,6.098507,-5.325194,0.564828,-3.070657,0.552080,-4.380729,-5.217097,0.626712,8.399880,7.578082,-2.562722,-0.370282,9.085010,-0.987691,-0.172565,-2.500412,2.921452,-9.398638,7.738826,-2.011839,1.420143,-9.439021,-5.788874,-9.513588,-9.113614,2.196600,-5.966933,7.986460,1.739670,7.198054,9.494076,5.685894,-6.233789,6.540268,-7.501081,8.645388,3.775025,8.957314,2.139050,0.079152,0.795913,-0.517126,-5.138899,2.554795,-9.150348,9.544042,6.064751,-1.511533,9.414945,5.271748,6.232116,6.986441,-9.648551,2.853442,-4.076106,-4.161425,5.188718,-3.101856,-3.010689,0.799208,-0.947607,-9.117199,3.846554,3.490332,3.896508,-5.315473,6.642784,9.027382,-9.040233,-7.298297,9.235394,-6.628411,0.163906,-0.953318,2.744575,-9.830417,2.134932,4.100537,8.720840,9.112421,8.103851,-6.320061,4.563249,4.741718,-2.708348,0.386789,-6.353789,-5.225444,-3.921926,7.340013,-5.114479,4.176473,3.559505,-0.331441,8.608198,8.983442,7.177248,-3.974596,9.198384,-9.807280,7.173122,6.653546,0.219044,7.552457,-7.621211,4.113327,0.520912,-1.061593,9.459332,8.417306,-5.283054,-2.846429,-2.445585,7.690824,-6.956542,3.432860,4.047586,3.757218,-8.720705,-6.508990,7.505444,3.649888,-0.311094,0.504120,-5.302340,-5.961036,6.511298,-9.636886,7.026148,7.718790,0.697824,1.224910,8.650391,-6.398410,-3.355165,2.136691,-7.178927,-6.636646,-8.736281,1.725286,-3.892682,-7.620604,-8.257760,-1.949252,-8.306871,5.105136,-7.925878,-3.119998,9.087154,-2.526406,2.091672,3.295476,-1.750844,-8.106209,-8.522577,-4.910821,8.450528,-2.043964,6.335679,-4.817171,2.843585,-4.180993,-1.326580,5.925837,3.172574,8.329224,0.157600,-2.026987,-2.209006,0.139351,-0.948508,-8.863031,-8.199503,8.613534,3.493880,9.813699,2.465097,-8.544570,-2.046498,8.266215,3.584775,-1.676672,-8.106602,0.806993,6.836545,6.567124,-3.179115,2.389534,-1.830255,-0.142930,-8.974530,-7.653664,6.112796,-5.305957,6.899677,8.004376,-3.904557,1.899051,0.768806,-5.210591,9.909768,-1.603956,6.384700,-6.470323,6.518969,3.002383,-6.014598,7.733570,-6.265216,5.409075,-7.938768,1.920408,-0.891314,2.885518,8.262763,-4.673447,0.015800,-0.086002,9.432171,-5.735515,2.035876,-9.212788,-7.385309,-4.207946,4.077245,-2.704469,-1.701821,1.107231,-3.636659,-5.711735,-5.907918,7.038504,-1.739608,-7.300305,-0.134455,-1.375775,-9.947474,-0.955379,-6.239182,3.324016,-3.487807,6.727892,2.809661,-2.929201,6.690371,8.097051,8.915753,1.454824,-6.973121,5.214896,6.196212,5.894286,3.711333,-5.265617,-7.006673,1.706455,8.764852,0.086282,1.876114,-3.600522,7.001267,-2.170259,-1.056958,-2.481240,3.231983,-2.626495,2.941598,-6.133666,4.922774,-9.134151,7.505397,-6.646959,8.533836,9.764405,2.623200,5.375990,-0.592003,-5.082912,-6.106536,5.176941,-0.523177,-2.297247,2.525375,-1.275341,7.743153,-3.315244,1.429592,8.390943,9.640786,6.879686,-1.685037,2.890751,5.951102,-8.164278,-3.348452,4.329528,9.722964,-6.456377,8.793261,1.891017,2.221861,8.081324,-4.982294,0.887492,9.275677,9.462606,-2.964521,-1.862172,-4.580488,1.367994,5.685923,1.167647,-2.422846,3.272690,3.043633,-6.056312,0.783940,6.906121,-7.743402,1.099413,1.725003,5.941322,9.887977,3.454003], dtype = "float64")#candidate|1983|(2112,)|const|float64
var_1984 = relay.var("var_1984", dtype = "float64", shape = (2080,))#candidate|1984|(2080,)|var|float64
call_1982 = relay.TupleGetItem(func_1197_call(relay.reshape(const_1983.astype('float64'), [12, 11, 16]), relay.reshape(var_1984.astype('float64'), [104, 20]), ), 0)
call_1985 = relay.TupleGetItem(func_1200_call(relay.reshape(const_1983.astype('float64'), [12, 11, 16]), relay.reshape(var_1984.astype('float64'), [104, 20]), ), 0)
output = relay.Tuple([uop_1952,call_1982,const_1983,var_1984,])
output2 = relay.Tuple([uop_1952,call_1985,const_1983,var_1984,])
func_1991 = relay.Function([var_1951,var_1984,], output)
mod['func_1991'] = func_1991
mod = relay.transform.InferType()(mod)
var_1992 = relay.var("var_1992", dtype = "float32", shape = (11, 13, 5))#candidate|1992|(11, 13, 5)|var|float32
var_1993 = relay.var("var_1993", dtype = "float64", shape = (2080,))#candidate|1993|(2080,)|var|float64
output = func_1991(var_1992,var_1993,)
func_1994 = relay.Function([var_1992,var_1993,], output)
mutated_mod['func_1994'] = func_1994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2166 = relay.var("var_2166", dtype = "uint32", shape = ())#candidate|2166|()|var|uint32
var_2167 = relay.var("var_2167", dtype = "uint32", shape = (7, 3, 5))#candidate|2167|(7, 3, 5)|var|uint32
bop_2168 = relay.bitwise_or(var_2166.astype('uint32'), var_2167.astype('uint32')) # shape=(7, 3, 5)
output = relay.Tuple([bop_2168,])
output2 = relay.Tuple([bop_2168,])
func_2172 = relay.Function([var_2166,var_2167,], output)
mod['func_2172'] = func_2172
mod = relay.transform.InferType()(mod)
var_2173 = relay.var("var_2173", dtype = "uint32", shape = ())#candidate|2173|()|var|uint32
var_2174 = relay.var("var_2174", dtype = "uint32", shape = (7, 3, 5))#candidate|2174|(7, 3, 5)|var|uint32
output = func_2172(var_2173,var_2174,)
func_2175 = relay.Function([var_2173,var_2174,], output)
mutated_mod['func_2175'] = func_2175
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2265 = relay.const([[[5.898597,3.587286,-9.730049,8.419272,2.395627,-6.384854,7.423178,7.730043,7.362301,1.528064,-3.194783,7.551995,3.751981],[6.666850,-3.463469,8.197549,-1.361076,2.779929,4.413326,1.929649,5.062741,-7.745581,5.548178,-2.226680,-9.254251,-9.565380],[8.968908,2.459659,8.950655,3.934506,9.123261,2.781657,3.983401,-8.550596,-3.544563,7.204068,5.161378,-9.508143,-0.907806],[-2.435742,-1.104961,0.761101,-8.336179,0.625811,2.932882,0.345795,3.479868,-1.141205,1.797759,-7.746220,-9.084767,2.821553],[4.663096,-6.591544,-2.389468,-1.618638,-3.615134,-8.098724,-2.953841,-1.478253,5.374181,-9.046678,4.263746,8.627937,6.791165],[-5.526530,-4.821070,-7.393215,5.582617,6.271205,2.395104,5.387954,7.734549,-0.426365,5.019785,6.217136,-5.080589,3.073589],[-9.030607,-6.534804,-3.274286,-3.638925,-4.097336,-4.596321,7.440125,-6.698934,7.559690,-4.768285,4.762696,-7.939823,-9.443078],[6.966349,1.293667,-4.201935,-8.367981,-3.381095,8.992244,4.372961,0.223542,0.172341,9.386232,8.843407,4.497075,1.291470],[-9.588316,4.309792,1.993024,8.599195,-7.166619,-1.117041,-6.907238,4.750340,4.971759,2.060138,6.051086,-4.666772,-2.347114],[9.545307,2.325699,7.108333,7.718305,-0.230070,0.617555,6.126723,3.907760,-4.678628,-6.408105,5.217619,-6.467102,-2.840110]],[[-9.357218,-5.711755,-0.251086,-0.761918,-5.981917,8.131233,9.542770,-9.776515,5.335035,-8.566427,-2.098634,-3.072960,-4.879134],[-1.794446,6.386463,-0.311343,4.871258,-6.919350,8.610372,-3.284026,-9.430076,0.131485,3.035300,4.212393,3.206336,-5.193835],[-9.343630,6.280573,-5.666667,-6.056982,-6.818574,6.590376,3.923526,-4.092967,3.161188,5.966843,-8.821503,4.212247,-4.324971],[0.151592,-0.740145,6.521545,-5.366580,0.099660,9.938316,-4.298707,7.861149,4.061732,-4.257853,3.510111,-3.461565,4.553145],[0.892699,6.562527,4.440773,3.325444,-3.456580,9.280860,2.602038,7.726068,-0.201293,0.233978,-2.794958,-1.171606,-0.396374],[-7.122132,-2.382763,6.756184,-5.585482,-4.553874,0.612671,1.459579,-6.611624,5.588118,5.068842,-5.999226,-3.803325,7.526865],[0.872634,2.493161,8.022229,-2.515114,-5.512829,8.076667,-3.923024,-1.004395,-5.643977,7.606818,-9.448776,-1.234787,-3.363190],[5.976367,-3.316534,5.921394,0.852594,3.566891,-3.172662,-2.076030,-3.291373,3.490520,3.460630,-9.173661,5.416774,5.419664],[-2.155182,7.809664,-8.837033,-8.652936,-7.315969,-5.741559,-0.210317,-3.668612,-4.172552,2.497180,8.121808,3.426785,9.704461],[-7.973550,-1.382205,-4.950815,4.149569,1.625543,8.085396,5.511177,7.993176,5.747007,3.924705,-6.725804,-2.473749,-4.777164]],[[-0.581543,7.756565,-4.780255,-8.809613,6.602480,5.726773,-9.614647,-0.131662,-3.818520,0.774890,-2.535308,-3.771213,3.691088],[5.691446,-3.152925,6.680400,4.762698,-2.344030,-5.657927,-3.239634,-9.970745,-8.822176,-3.706667,-1.025430,-5.627014,-7.677400],[-3.102947,5.227047,0.556534,7.233985,-1.102537,-9.961685,2.838454,1.641614,5.695641,5.199167,-5.301083,4.076527,9.033231],[5.592147,6.384349,-8.193603,-8.141814,9.874396,-8.918650,-6.858673,9.489513,-7.246707,4.974148,-9.162493,-8.356176,-2.945411],[-7.494577,8.124459,7.376170,2.037723,8.281615,-3.357905,7.707094,3.363023,9.193920,8.835816,7.983857,0.133039,7.345223],[3.149894,-6.440370,-1.292922,8.438880,-4.742926,4.858402,-1.357565,3.147923,-9.871343,-1.102513,-5.133524,9.481106,9.403188],[4.307732,-6.189838,-3.892143,-2.114951,6.811735,8.119933,0.502251,-4.701554,-9.948145,4.390543,3.360209,-7.983230,3.027261],[0.107244,-6.424230,8.321816,-3.978076,3.307475,-3.294224,2.421744,-2.872391,-9.129472,-5.892293,-3.486732,5.476606,-3.802310],[-2.178750,0.896470,4.961905,-4.674843,4.852782,6.288579,7.046502,-4.075510,5.927064,-4.330988,2.417154,6.990020,3.650529],[-8.704193,9.715002,6.777593,1.801569,2.284305,-1.145425,3.555413,-9.911430,0.745774,6.905098,6.179023,6.026518,-5.109949]],[[-1.682961,-2.174222,-4.622872,8.798282,6.896475,3.133180,6.902428,1.008431,-5.343756,4.547293,0.172425,6.435816,-7.874947],[9.394242,-2.858830,-9.500059,4.066156,-0.066307,8.432202,0.588639,-5.635121,-3.439548,-7.492097,7.568191,-9.624471,9.450153],[0.688695,-8.831833,3.231434,8.845677,9.212767,-3.214257,-9.181731,-5.003238,-5.519851,-4.155893,-1.119595,-6.543553,-6.621275],[-1.968542,-9.567619,6.749202,-6.333866,-3.091866,9.368988,7.521956,3.114759,-0.524252,-6.045996,-4.349853,-9.566480,3.236210],[6.100012,8.347849,-3.841596,-7.080910,4.463847,-1.591324,9.015637,2.653527,4.047677,5.806717,1.716876,-5.651308,5.630493],[-3.321094,-5.780669,-8.889640,-0.307743,4.667681,3.172730,6.166182,2.833599,-0.268393,-6.131446,-6.093749,-8.682002,9.192547],[8.239260,7.815826,-2.197785,-2.870840,-2.692992,-0.750361,9.503432,2.498484,3.903035,6.264634,-1.675554,6.429246,-6.483372],[-8.629227,2.523757,-8.040751,-6.134430,2.623054,4.718336,0.061810,0.918258,-7.705027,5.818415,8.055261,3.855712,-3.909168],[8.345816,-1.800793,0.881293,-7.579817,-2.805974,1.178075,7.662982,7.056775,-6.065471,-4.252570,-9.725981,-7.321690,-2.575355],[-1.510899,1.229846,7.943436,-4.102670,-0.525025,6.036376,9.778086,0.004418,-8.220809,5.437277,6.910501,-0.650671,5.837493]],[[4.500139,-0.503664,-6.347774,3.703542,9.894891,-8.142367,-1.891043,8.560485,5.274361,-2.060625,5.566203,8.755790,-1.073251],[1.693192,-3.097191,-1.529727,-6.767381,9.333340,0.872001,-3.161656,-5.362439,0.920494,8.997059,-9.352175,8.386093,0.499466],[1.399784,2.497618,-6.158347,-5.106560,-3.918809,-5.580999,3.411209,9.291688,-5.060584,-0.050179,-5.553197,1.098617,-2.270497],[-9.611974,-2.108969,3.911312,9.174945,-2.728407,8.673321,-0.334667,4.038383,-6.484119,0.058911,5.418114,-6.597800,-4.093084],[3.566522,-8.430645,3.942151,8.595589,7.816428,9.620669,-0.729612,-8.652350,-0.132291,4.897648,2.262401,-0.218890,2.461154],[-5.024178,8.694472,-0.997157,-5.863958,7.934068,9.762751,-5.070909,0.378963,8.376620,2.652602,2.078367,1.741778,4.941627],[-8.552225,6.375462,3.507689,0.496243,-5.137911,-5.184620,8.526402,-9.185560,-4.016074,2.322778,-2.701466,1.588790,-0.527980],[3.390676,4.647091,-8.288205,-0.424637,3.338346,4.423439,6.996374,-7.521630,-3.128292,9.490390,9.411482,8.267425,2.715335],[5.110997,0.890430,8.288618,3.762865,9.289090,-5.107060,0.637646,-2.191709,1.422410,-9.270962,7.896775,0.149244,1.739713],[-1.259122,2.283673,-8.676802,7.590016,-2.584295,-6.256187,7.093239,5.138443,-9.972185,-7.567751,5.965788,-4.403288,1.867097]],[[-9.745550,-7.041904,6.452337,6.563831,-3.853438,-2.787584,1.164520,-1.170997,-4.762958,-6.866921,3.898377,6.683313,7.958784],[7.472573,-0.785144,0.476072,4.289671,0.327912,-6.093302,5.533335,-0.979158,-6.165989,-2.678736,-1.483857,9.115470,-4.971497],[5.212541,-9.711695,-1.876255,-0.473199,-1.410948,-0.898749,6.733400,4.026927,-2.192639,-8.150852,-3.504314,-7.472810,9.124817],[1.315840,4.438537,4.898961,8.288814,6.135539,-7.553653,5.852995,8.605803,-4.409492,2.041984,7.283244,8.679275,-8.624063],[-1.135074,-2.892970,8.617647,-5.294986,-1.884858,1.503378,9.568905,0.888062,-0.490471,1.700600,-2.656396,-0.132701,9.939090],[9.109695,8.581367,-2.535530,9.304886,9.615277,-3.369351,0.854686,-2.745628,8.613812,-1.244203,5.947661,0.286380,-3.010585],[-5.382253,4.757960,-4.226794,-3.072886,-7.174539,-1.322130,-0.839771,4.983873,4.545216,3.544806,2.661387,-0.933972,4.886727],[2.769949,-2.449759,2.318541,-5.221243,-4.889239,4.226022,5.012643,7.408908,3.697152,7.906282,-2.799903,-7.870493,-5.338778],[-0.867800,6.732881,-6.622601,-8.412061,-6.847171,-4.288835,-3.762856,-7.335969,9.476659,-2.020297,6.002270,-3.304297,-3.940240],[3.111630,-0.675634,-6.923985,-3.756850,7.896328,-9.456557,4.422805,1.832210,-9.716118,-6.742008,2.559431,-0.148513,-4.272952]],[[-2.832786,-4.053937,-9.501190,7.974759,-7.113131,1.576630,3.310026,3.315056,9.102690,-9.980111,-7.954855,-1.595188,0.596347],[2.732966,6.757468,1.892164,-8.396023,-1.626942,-3.303640,-2.705928,-2.809320,3.006357,-4.889616,0.760718,-5.852303,-5.436631],[-3.768668,5.340397,-3.376158,5.078387,2.082051,4.936946,2.721540,-6.153255,5.423164,-4.722631,-2.205640,6.225121,-2.424467],[-8.060645,0.736870,-8.576967,-4.597401,1.128323,-9.668265,-8.350769,-2.809800,4.654649,-2.986063,4.012735,-1.560367,2.937325],[5.962172,8.927736,7.459204,-0.160788,-3.753326,6.977715,7.364545,-7.111727,4.807835,9.171609,-4.079344,9.809621,-8.035159],[1.104869,-2.344828,0.800776,8.434888,-1.024735,9.252288,1.014566,8.831185,-6.060342,-9.418502,-3.053107,1.814588,6.047175],[-4.350561,-8.876479,5.059420,-9.398223,-5.382856,1.404003,-4.354111,8.088677,6.484213,-7.718405,2.916541,8.344917,2.489414],[9.545969,3.998724,-0.924817,-5.933250,-2.621012,-2.831290,0.865686,-4.791737,6.970524,-9.408732,-4.374953,7.109707,-0.580705],[4.745812,-7.026048,5.925372,-0.358876,-0.235219,1.170623,9.059410,-0.756125,-0.179688,2.853709,7.449661,3.573300,9.924954],[6.173053,-4.998854,6.109925,6.824946,-0.896727,5.629056,6.590109,-7.888633,-8.707538,-1.124072,7.369578,2.173501,9.960279]],[[3.778082,-0.137160,7.440218,-9.257468,-0.738838,4.809818,8.838857,-1.693736,-5.262067,4.667553,-9.227820,1.844209,-1.256074],[0.927795,0.171123,-8.445511,-4.570455,6.838839,-5.971324,5.193675,5.372307,-6.446008,4.845115,6.707266,-2.144266,-3.518496],[6.254978,2.240931,-2.174038,1.410231,-2.705013,3.896655,-0.875235,-0.959119,-6.643782,5.386188,-7.288452,-0.601647,6.922485],[-0.683496,-0.847099,-5.555371,-0.049890,-8.662550,8.902233,-7.862066,2.771142,-5.006100,-1.805601,1.206436,-7.352689,-6.948094],[-8.370975,-3.872378,-2.228477,-9.399841,8.379910,-4.002241,-4.014287,7.971852,-4.825101,8.676188,1.972195,-0.108036,-1.885604],[-2.083854,-0.297484,-3.523221,0.717979,-7.328840,3.579101,2.282189,-8.577818,-3.287242,-8.996650,-3.139005,4.782472,-2.235333],[0.076801,-2.423419,-6.957832,-5.414900,4.205505,-9.736537,-8.381102,-6.360016,9.803735,-8.880906,-5.843239,-9.143933,-5.453016],[9.233178,8.514974,-7.398376,-8.798937,-2.089417,1.878305,-9.100639,0.771059,-1.675718,5.982352,7.853553,-2.555708,-8.920196],[-3.692620,5.168739,1.091819,-4.010261,-9.660653,9.967487,4.033591,-1.621659,7.643342,6.034760,7.026355,-9.901480,2.425899],[1.002106,5.650873,-3.193378,-7.374184,1.640166,-7.008117,-1.147355,-6.613552,-9.580168,-1.199942,3.987290,3.632503,-2.861582]],[[-7.773489,9.734311,9.327432,2.814968,4.726367,-3.569672,0.975583,4.051581,-3.694377,-4.854533,-0.779721,-7.335571,1.647217],[-3.640798,8.947185,7.637436,5.475145,7.482810,6.410101,1.145485,-7.371049,9.789497,6.843926,7.741740,-0.124597,8.302906],[-6.443609,5.186591,4.291159,-0.861193,2.075366,-1.339544,7.949009,2.937666,-7.610767,6.044006,-0.364237,-6.833251,6.319088],[4.186195,7.196203,-3.249513,3.117958,-4.067487,8.655531,2.981867,-1.506234,9.764623,7.018466,0.344285,-2.623157,-9.899997],[7.524573,-2.433075,-7.696483,-7.981755,-1.701060,-2.781719,8.087497,-0.623311,6.076432,2.180372,3.114504,3.649278,0.129421],[-2.578119,9.999989,-5.615660,5.482249,-2.044130,5.006809,-8.866961,1.075061,1.872582,6.325123,-8.258829,6.792921,-8.671744],[-0.978717,4.568994,-4.344301,0.221307,-4.584655,-7.716927,9.319606,8.161716,-2.494710,-2.054113,-4.624864,-4.213340,-2.553039],[8.506960,-4.903604,-4.386613,5.995680,-0.883555,-4.312328,-8.073167,6.016855,-1.341475,5.436434,4.253741,9.443724,3.313396],[4.047358,8.109915,-8.666957,6.914821,3.217487,-6.544481,0.087224,-4.915969,-2.594834,-7.622510,-8.575954,-9.811192,0.451664],[7.038950,-8.613401,-2.754030,-4.770171,8.914821,-7.508412,8.079795,-8.603444,6.221139,-1.752725,1.441556,-2.500189,-9.158951]],[[3.208731,-1.293932,2.994144,1.082720,-3.222817,1.603864,-7.559086,-7.597919,-1.743095,-0.548749,1.298301,-7.623882,7.458105],[-4.477117,-1.767421,-6.168007,-3.535537,-9.086578,-7.623797,1.514359,5.209645,3.097088,8.832991,7.998373,3.371796,-1.396121],[6.754482,-3.591289,8.470790,-1.090896,-9.820816,9.893839,0.928067,-0.514266,5.177753,-3.274290,-5.897263,-3.606437,9.398513],[5.054070,6.439503,1.383421,1.837110,-6.996527,7.701133,-9.457783,5.398903,-1.149281,1.300362,2.018685,-8.842274,5.370058],[9.622474,-3.783100,8.533839,-6.052975,1.657303,2.546652,2.782621,8.518249,-6.084064,-4.523622,4.290319,-7.520370,7.833147],[-5.947452,-3.055244,5.629256,2.990220,-6.391906,5.552445,-6.208492,4.548679,4.567177,6.279596,4.981151,-6.353146,6.651615],[-8.855549,-8.373049,6.548185,3.555656,9.213350,-3.207652,-5.340864,7.124733,6.536406,-6.180552,-6.156221,0.817099,2.155316],[4.438560,5.241934,5.580998,7.295248,0.800317,-1.791197,-0.341683,1.823364,1.017547,3.184129,-4.558693,-9.230075,4.993483],[-6.269120,-1.438444,4.360332,-6.540657,-3.211298,-3.979066,5.325424,1.254045,-4.073358,9.984163,-7.537763,3.513398,-9.621357],[-1.929090,4.472134,9.915492,-6.726438,4.202540,3.742701,-7.343982,2.024852,1.019642,8.838683,7.213011,-8.340628,9.673459]],[[2.783852,1.940279,-9.896788,-0.769024,3.856144,-4.771092,3.452723,-4.096222,7.445136,-7.285525,8.638601,1.713480,-0.236377],[5.579063,-6.911329,7.105832,8.287908,7.550348,-6.657330,9.330809,2.067847,-4.649138,9.398491,0.749797,4.289684,-5.612967],[-1.688092,6.507336,-7.360772,0.275167,-1.471181,-8.713869,2.838531,9.669264,4.965078,-7.939643,-8.629358,5.743031,8.116065],[-8.300063,-4.242878,7.989490,2.811236,-7.856667,4.457332,-8.544815,-4.592916,-6.197952,-3.076736,-6.099615,-2.593731,-9.618775],[4.538075,4.418308,-0.283717,8.512676,-0.667677,8.990624,-7.994504,7.077474,-1.042802,1.487604,-1.571370,-7.786463,3.758263],[-7.883783,9.556364,8.445271,-9.263850,6.239210,-7.868925,5.673320,-2.343220,-5.437035,-0.474457,-0.117125,7.572642,-3.764863],[5.850402,-7.180973,5.211467,0.656999,9.809392,2.289146,1.792897,6.694824,7.802267,-7.064740,2.069865,-9.204932,-5.299599],[-8.367053,-2.463243,8.990024,-6.948097,6.526628,-0.587484,-3.487828,4.603619,2.772009,7.289967,-6.313485,7.948148,-3.117045],[-4.838982,8.943410,6.674843,-4.620534,-6.675866,-9.618934,-7.924011,-5.445601,-7.405898,-0.473402,-3.147250,-1.551266,-2.521352],[-0.474730,3.058204,0.952257,-2.243692,-7.295209,-8.988827,5.958727,-0.328388,5.438546,8.679525,9.556702,1.526523,6.126865]],[[8.254435,9.103057,1.633513,8.668222,-9.642601,-3.615955,3.571140,-5.903361,7.923256,-6.989486,2.223331,-4.388522,8.351159],[-3.390483,-6.240795,-9.433843,5.422581,2.173750,-3.557408,9.161937,5.348742,4.244984,-3.217313,0.165608,6.821821,4.323167],[3.874030,-4.998353,3.676011,8.315556,-5.034627,8.583953,9.477331,-5.805528,-1.330320,-4.667846,5.561436,-8.787105,-1.329256],[-7.053290,-3.198633,-9.757023,7.215879,-1.592761,-3.210681,-2.609519,-4.502805,-3.575291,2.939889,6.102195,4.984922,5.860506],[1.258559,-0.544265,7.716517,7.534352,6.382777,-5.086329,-6.143547,4.351633,-8.984207,-0.316887,-3.634631,8.213017,0.678514],[3.308398,-6.615546,-7.256577,-6.109189,7.205000,3.614144,7.105656,9.251128,7.735816,7.834868,-8.992405,2.474552,-2.570117],[1.499495,9.647051,-0.141433,8.353859,4.044178,-4.932179,4.695509,-4.697972,-1.862174,6.938882,9.987315,-5.552913,3.205490],[-5.030261,7.859280,-9.451345,-4.662862,8.729675,-0.100627,-0.002857,-2.532535,-7.257613,-1.647540,-5.839978,-6.637112,-0.595227],[6.003578,-3.278698,7.916017,9.757233,5.341150,-6.945347,8.437582,-9.828109,-9.239261,3.270956,4.928186,-8.919018,-4.467745],[4.991825,-2.696144,-5.343859,-8.469768,2.263224,-8.068682,-6.877312,-9.032084,4.122112,-2.553620,-6.117641,-7.065351,-6.408144]],[[1.942132,-6.576890,1.807413,-0.871999,9.685695,9.755291,-4.544157,-4.762742,6.895656,-4.146715,3.511961,1.445843,-1.345282],[-7.285317,-9.191337,-6.146508,-9.873121,5.591872,-9.166260,9.360592,4.647773,3.714026,2.616539,-4.154576,-5.042607,6.915431],[-5.749509,-0.226026,-8.690728,-7.107700,8.017155,-8.744920,4.679571,1.290262,1.478865,5.637361,-0.185569,-0.954221,-3.525398],[-4.194137,-9.893085,-1.742873,0.066726,4.844703,-0.728849,-9.031208,-4.259584,2.676309,-7.179343,-7.639483,8.732134,-0.501710],[-2.376910,-1.417931,9.158213,-8.547819,-5.555429,5.783819,4.924449,2.553746,-0.669549,8.615687,-1.565498,-6.943111,0.666855],[-5.351054,-8.208604,-4.569483,-8.562067,-6.481719,-6.867898,1.608133,8.100565,-0.876379,5.970467,-1.348359,1.412019,-7.626299],[-8.459619,-7.213737,4.006815,0.183949,-4.567010,9.021994,-4.081018,-5.384163,-3.341416,4.515212,-1.991353,-6.542941,6.605447],[5.524776,-6.305207,-0.344288,-9.507356,-9.591168,8.474102,-5.970424,-5.057429,-2.391390,1.412355,0.702580,-1.416362,4.139962],[-2.220645,-1.349463,7.850346,-3.795182,-7.736488,-3.833700,0.287418,-5.752292,-2.761762,-8.509643,-3.323697,7.982734,-3.911356],[6.283146,2.581982,0.862390,-9.389335,7.905182,-1.289907,2.059833,-1.531399,6.895548,5.785887,7.546651,-4.775907,-8.868299]],[[-6.945257,-9.553910,-5.593852,-2.981697,9.544903,5.701085,3.678891,5.282957,-4.442355,-3.917337,-8.746667,-7.852792,-8.456918],[-9.138984,-5.053227,2.576367,-8.981861,6.046790,-0.102981,2.946540,2.736430,6.541204,9.988875,-6.982462,-1.306708,4.169559],[9.883881,-5.980720,6.688636,-1.285596,7.230928,-7.477650,-6.015299,-5.640906,4.039145,-7.860652,-7.530656,-3.282914,-0.422769],[4.493794,2.173323,1.027313,-8.691514,-7.210792,-2.631370,9.471608,8.657750,-2.678042,7.301514,-3.717925,-8.024220,-5.232590],[-9.532716,-9.907462,2.807555,8.928509,-1.947511,9.838004,-0.052157,-5.844108,5.948242,-3.929735,-9.556960,-9.009843,4.259091],[-3.739069,1.316704,-0.998016,1.551758,-5.301701,-7.202855,-7.600154,-3.651838,-9.588640,3.208674,-7.211096,-4.228054,0.577722],[0.757780,5.683154,-5.816445,-0.984736,-1.546714,-8.246413,5.900359,-9.093322,-5.204572,0.978094,2.633449,-0.107295,-4.152908],[3.074102,0.245925,5.134362,-6.923695,-7.895291,9.386413,-6.324675,2.870322,3.825109,7.138146,4.147269,-5.120678,-2.695455],[-9.901087,0.155674,7.799762,5.242370,0.404178,2.841073,0.892780,8.408781,-3.806033,-9.891811,-6.517573,2.596276,-4.185701],[5.365247,8.467251,-0.244677,-7.514216,-8.449074,-1.998650,9.864373,2.965826,5.358308,-2.912101,8.921685,-7.663102,-0.628458]]], dtype = "float32")#candidate|2265|(14, 10, 13)|const|float32
var_2266 = relay.var("var_2266", dtype = "float32", shape = (14, 10, 13))#candidate|2266|(14, 10, 13)|var|float32
bop_2267 = relay.floor_mod(const_2265.astype('float32'), relay.reshape(var_2266.astype('float32'), relay.shape_of(const_2265))) # shape=(14, 10, 13)
output = bop_2267
output2 = bop_2267
func_2283 = relay.Function([var_2266,], output)
mod['func_2283'] = func_2283
mod = relay.transform.InferType()(mod)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2284 = relay.var("var_2284", dtype = "float32", shape = (14, 10, 13))#candidate|2284|(14, 10, 13)|var|float32
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2285 = func_2283_call(var_2284)
output = call_2285
func_2286 = relay.Function([var_2284], output)
mutated_mod['func_2286'] = func_2286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2593 = relay.var("var_2593", dtype = "uint32", shape = ())#candidate|2593|()|var|uint32
var_2594 = relay.var("var_2594", dtype = "uint32", shape = (16, 8, 4))#candidate|2594|(16, 8, 4)|var|uint32
bop_2595 = relay.equal(var_2593.astype('bool'), var_2594.astype('bool')) # shape=(16, 8, 4)
output = relay.Tuple([bop_2595,])
output2 = relay.Tuple([bop_2595,])
func_2598 = relay.Function([var_2593,var_2594,], output)
mod['func_2598'] = func_2598
mod = relay.transform.InferType()(mod)
mutated_mod['func_2598'] = func_2598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2598_call = mutated_mod.get_global_var('func_2598')
var_2600 = relay.var("var_2600", dtype = "uint32", shape = ())#candidate|2600|()|var|uint32
var_2601 = relay.var("var_2601", dtype = "uint32", shape = (16, 8, 4))#candidate|2601|(16, 8, 4)|var|uint32
call_2599 = func_2598_call(var_2600,var_2601,)
output = call_2599
func_2602 = relay.Function([var_2600,var_2601,], output)
mutated_mod['func_2602'] = func_2602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2635 = relay.var("var_2635", dtype = "float32", shape = (12, 4, 7))#candidate|2635|(12, 4, 7)|var|float32
uop_2636 = relay.erf(var_2635.astype('float32')) # shape=(12, 4, 7)
uop_2653 = relay.sqrt(uop_2636.astype('float32')) # shape=(12, 4, 7)
output = relay.Tuple([uop_2653,])
output2 = relay.Tuple([uop_2653,])
func_2655 = relay.Function([var_2635,], output)
mod['func_2655'] = func_2655
mod = relay.transform.InferType()(mod)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2656 = relay.var("var_2656", dtype = "float32", shape = (12, 4, 7))#candidate|2656|(12, 4, 7)|var|float32
func_2655_call = mutated_mod.get_global_var('func_2655')
call_2657 = func_2655_call(var_2656)
output = call_2657
func_2658 = relay.Function([var_2656], output)
mutated_mod['func_2658'] = func_2658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3084 = relay.const([[[-4,-1,-4,4],[6,3,3,4],[2,-5,8,3],[9,6,6,-1],[9,-1,-8,-6],[-6,-4,3,-2]],[[7,7,3,1],[1,4,-3,10],[-9,-6,7,9],[-3,4,-3,10],[6,-5,-1,-9],[-6,-2,7,3]],[[-6,-1,3,8],[-5,1,-1,-5],[-2,5,1,-8],[6,7,5,-7],[1,3,10,-1],[8,-2,-4,-5]],[[1,10,4,8],[9,3,-7,4],[-10,3,10,6],[5,6,-7,8],[3,-8,7,8],[3,-9,-4,10]],[[9,6,7,-7],[10,-4,8,-2],[9,9,6,-1],[1,-9,2,-8],[3,2,6,4],[7,-10,9,6]]], dtype = "int16")#candidate|3084|(5, 6, 4)|const|int16
var_3085 = relay.var("var_3085", dtype = "int16", shape = (5, 6, 4))#candidate|3085|(5, 6, 4)|var|int16
bop_3086 = relay.bitwise_and(const_3084.astype('int16'), relay.reshape(var_3085.astype('int16'), relay.shape_of(const_3084))) # shape=(5, 6, 4)
output = bop_3086
output2 = bop_3086
func_3100 = relay.Function([var_3085,], output)
mod['func_3100'] = func_3100
mod = relay.transform.InferType()(mod)
var_3101 = relay.var("var_3101", dtype = "int16", shape = (5, 6, 4))#candidate|3101|(5, 6, 4)|var|int16
output = func_3100(var_3101)
func_3102 = relay.Function([var_3101], output)
mutated_mod['func_3102'] = func_3102
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3115 = relay.const([[[8,-4,1,8,1,-3,-2,9,2,-6,6,5,5],[-6,-6,7,-10,-7,-10,-2,6,1,8,7,-3,-4]],[[-3,8,-6,1,7,3,8,8,-8,10,6,1,3],[-3,-3,5,7,-5,10,-2,-5,-6,-9,-2,-5,-1]],[[6,-2,-2,-7,-3,10,-8,10,3,8,-10,-3,-9],[6,-7,-4,2,4,-2,-8,3,-4,5,10,-7,-7]],[[3,6,3,7,-10,5,-8,6,9,-6,2,-5,3],[4,-4,-6,1,10,-3,-5,5,-5,-10,2,4,4]],[[-7,2,6,9,-9,8,7,5,4,-3,2,1,-10],[3,-2,-10,10,8,-10,-8,4,-8,-6,10,-4,9]],[[10,10,-5,-4,2,6,7,-7,-3,-5,-3,-7,-7],[8,-10,7,-9,2,10,10,1,1,2,-5,5,3]],[[3,8,8,9,-5,2,5,-7,-9,6,-7,-7,7],[5,2,-9,-1,-4,4,-1,-2,-4,-6,-2,10,-6]],[[-5,7,5,-1,3,3,-8,4,-10,1,-7,-9,-6],[5,-6,-4,-4,-10,-4,-9,2,10,6,-10,-9,10]],[[-5,-7,7,10,5,-4,-6,9,7,4,9,-7,-8],[-3,7,-2,-10,5,1,3,-9,6,-1,-5,2,-6]],[[-5,-7,-10,-9,2,3,-8,-1,4,-6,1,10,6],[10,7,10,1,-3,6,9,-3,9,-1,-2,-4,-1]],[[10,-7,-9,4,-5,5,2,8,-2,-5,9,8,-6],[-8,9,-5,3,7,9,7,8,9,-2,7,3,-8]],[[-9,6,-7,8,-6,-6,7,2,-5,-1,10,2,-8],[-5,4,-5,10,-8,10,2,1,6,1,5,6,10]]], dtype = "int64")#candidate|3115|(12, 2, 13)|const|int64
const_3116 = relay.const([[[-1,-2,2,-5,10,-5,-6,3,3,-7,6,-4,9],[9,10,7,-10,-4,2,7,-7,-4,-5,-8,-6,3]],[[-8,-6,-6,-8,-9,-10,5,1,-3,7,3,5,-8],[-8,-10,10,-8,5,-1,2,2,-7,8,-2,8,-3]],[[1,-1,-4,7,10,2,-4,-3,3,-3,9,-10,9],[8,-1,8,-10,3,8,8,7,-7,8,-6,-5,-6]],[[8,-9,-7,-4,-9,-2,-1,-5,-7,6,-4,7,-3],[4,1,-10,5,-5,6,3,-4,-6,-2,-4,5,-4]],[[-5,2,-3,3,8,4,5,-6,-1,-8,-3,-9,-5],[-3,5,9,10,7,8,9,7,9,-3,3,-5,-8]],[[-5,-5,-2,-1,8,8,-1,-3,-6,7,4,-5,3],[10,9,8,6,6,-2,6,9,9,-8,-1,5,-10]],[[-3,5,-3,4,4,7,3,-8,10,-6,8,7,10],[-4,5,1,9,4,2,3,7,-5,-3,7,9,-10]],[[-1,-6,-6,-3,4,-1,-1,-4,-10,-8,-9,7,-6],[-3,8,-3,-4,-9,9,3,9,6,-6,2,9,3]],[[2,10,-4,6,-10,-2,-8,-5,6,-10,-2,4,9],[4,-9,8,8,-1,2,-6,-6,7,3,3,-1,-4]],[[-9,3,-8,6,5,-9,1,-7,7,7,4,-9,9],[-6,-5,5,1,-2,4,-6,-3,4,-5,8,4,5]],[[-3,-5,-6,-3,3,3,-6,3,-6,-1,-6,-2,3],[2,9,-5,4,5,3,9,5,-10,-8,1,3,-2]],[[6,-9,7,-8,1,-1,5,4,-3,4,4,1,6],[-7,-5,-10,-4,9,2,-8,-3,9,4,-8,6,-6]]], dtype = "int64")#candidate|3116|(12, 2, 13)|const|int64
bop_3117 = relay.greater_equal(const_3115.astype('bool'), relay.reshape(const_3116.astype('bool'), relay.shape_of(const_3115))) # shape=(12, 2, 13)
output = bop_3117
output2 = bop_3117
func_3125 = relay.Function([], output)
mod['func_3125'] = func_3125
mod = relay.transform.InferType()(mod)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3126 = func_3125_call()
output = call_3126
func_3127 = relay.Function([], output)
mutated_mod['func_3127'] = func_3127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3134 = func_3125_call()
call_3135 = func_3125_call()
func_1991_call = mod.get_global_var('func_1991')
func_1994_call = mutated_mod.get_global_var('func_1994')
var_3137 = relay.var("var_3137", dtype = "float32", shape = (715,))#candidate|3137|(715,)|var|float32
const_3138 = relay.const([-1.744656,-8.027767,-8.791500,-9.592485,-5.494331,8.322215,4.849643,8.165468,-0.789477,-8.638324,-6.921645,6.676457,6.849947,-2.501958,5.515960,3.024055,-9.888549,-5.675047,2.274108,-4.858606,3.787362,-6.000210,0.842343,7.791088,-1.078697,4.654634,4.037418,1.005929,4.145848,8.716836,-2.339890,-9.364123,-3.907780,3.502517,-4.418179,8.920603,-0.239795,-1.907119,2.334465,0.597828,-3.180302,3.879572,6.758695,-8.560809,-3.000511,3.211515,-2.477135,3.317036,0.539705,-7.487824,7.680020,6.164374,-7.739961,6.311953,-8.687023,6.326406,7.196758,-0.312870,2.975167,6.239644,-0.665647,-3.874946,1.368090,-7.681774,4.822156,-7.708850,-8.762740,-3.163668,7.599863,7.390518,-3.431957,-8.399273,4.559608,-8.662030,-7.245919,-8.669942,-6.853443,4.001584,-7.993723,-9.901783,2.334421,-8.295672,6.039464,-1.840629,6.461778,-5.977671,-6.108673,9.190508,6.183687,-5.655549,-1.497594,-3.257377,-6.458442,-3.844203,4.257951,-3.512341,1.503070,2.887835,1.702288,5.066005,0.460288,-9.837585,0.611208,4.684273,6.331665,-1.029557,-1.828443,-2.303309,-1.101225,9.465150,-0.194446,-2.218445,5.568581,-1.440656,5.205906,4.918187,1.979690,-2.933610,0.555565,0.520862,-6.955651,-0.897439,-5.435499,7.661481,9.112820,5.025479,-7.939502,0.484072,0.886595,-5.432304,-9.672966,6.937305,5.960848,-2.774331,0.060361,0.584970,6.382105,-3.661762,-0.306452,-6.627040,-3.557244,9.319924,-0.920670,-3.058529,-2.174500,-7.542154,-1.115483,-1.545031,-2.822765,6.221916,-7.591895,9.709014,-1.339401,-6.161339,1.401770,1.741361,-2.160790,-1.983324,4.328562,-4.904244,8.492010,-8.495085,-3.984952,0.439656,7.087327,-7.117344,5.955307,7.385643,9.775026,-4.585189,4.838764,-9.760654,7.557093,-2.644363,-3.061889,-1.806318,9.209501,0.068614,-9.810652,-6.976917,7.158872,8.921507,-6.186476,3.897499,-5.230187,-0.324497,7.823180,7.901707,9.975553,0.198095,-6.442746,4.303235,6.315206,0.542393,3.706637,9.621824,-7.223294,3.491552,-4.986311,-4.027757,8.397188,-6.188389,-8.474462,0.022208,2.750909,5.046612,-0.344539,8.048717,8.893046,4.786859,8.383220,-2.230972,-8.490396,-9.047830,-8.997689,9.712098,-1.688857,-8.179934,-4.796909,-8.497440,-8.182663,1.973591,9.383013,-4.516473,-2.524825,6.577231,7.732329,9.786507,-2.197045,-5.831315,4.988856,-4.211907,8.492662,-3.120856,-2.710605,5.160035,-9.098840,4.765808,0.261357,-2.641946,-1.314138,9.603679,0.412429,2.369549,5.684086,-3.657301,8.820936,-8.017049,6.295451,-6.675843,4.854360,8.788686,4.305419,7.897062,-5.152843,-9.066876,-4.328623,-0.052618,-3.090423,0.335313,1.604337,-2.062931,-9.634262,4.830746,3.533545,8.976319,4.989025,-3.582945,9.559474,-7.389942,-3.311185,-1.212162,-1.335365,-5.225563,-2.837484,-6.354242,-6.056293,3.762060,0.846936,-1.077723,-9.607020,-2.445854,-1.753181,-6.315939,-0.519004,-7.797087,5.289849,4.046175,2.793164,9.911215,4.466031,-0.079687,-2.165146,-2.640940,-4.478867,5.508163,-6.638754,9.327538,-4.214748,5.130598,-4.213465,7.941490,-4.054270,9.417535,8.997018,-5.319351,1.173658,-6.950597,-1.798442,2.732052,2.867811,4.806485,-1.327345,7.105663,3.056796,-6.541398,-2.139690,1.953219,-2.054592,-8.439300,0.767239,9.139896,2.204218,1.376538,-7.059756,6.929154,0.822766,-9.055287,0.599216,-0.377950,-6.631632,-4.890336,2.423959,5.279680,-1.660749,4.605095,-6.501175,-9.697024,-4.912080,1.337753,9.390399,-9.076413,-6.318555,-5.828922,-2.781291,-8.596279,9.526140,5.622007,-8.626330,0.291926,5.529655,9.000132,5.425831,1.945001,8.021709,-4.666630,7.592414,0.330953,5.400741,7.242214,-5.626759,-4.064579,-7.865008,-9.182201,7.631113,-9.018024,-9.363885,-0.170609,9.472038,8.050888,5.925498,8.950884,8.297859,-7.466753,2.183369,-8.458105,5.195943,1.684605,3.592508,-3.764553,0.926654,2.626999,-5.666178,4.194710,7.872820,-4.084365,7.767720,-1.215029,-2.192045,9.658991,-7.270084,-1.233260,2.957634,-6.966880,4.254565,2.719137,9.033657,0.920305,-0.426998,6.836320,9.154378,-7.252588,-1.415873,8.760130,4.898970,-8.483587,1.771575,0.418800,-2.253022,1.376637,8.001257,4.886054,2.041909,-4.726666,4.458460,1.093826,-6.846130,8.084489,-3.447785,5.191668,-6.954977,-8.819226,-3.991308,-1.039555,6.175074,4.509082,-9.839274,5.577949,9.008844,2.429214,8.371177,3.851887,2.078612,-4.944738,-9.733319,5.310566,2.179678,-1.033599,-3.350275,6.115606,-4.235448,-4.695784,7.057050,-4.577654,5.435206,0.666011,-1.377404,-1.769988,-7.332359,-6.487907,8.374315,0.303124,1.067722,-8.306058,-4.169030,5.603239,-0.395611,0.817594,7.421005,-3.375885,4.798258,9.466342,8.381585,7.469593,2.536843,-1.485649,-5.897036,2.908660,9.666222,5.922688,5.685230,-3.971830,-1.276371,5.310716,4.502183,-3.448277,-6.949610,-5.987995,-7.942966,1.503318,5.319314,-7.906623,0.223308,0.343711,3.014586,-3.393744,7.050454,2.643418,-3.289261,2.546393,-3.350086,-4.317234,-2.012084,-3.774810,1.941137,-9.092658,1.788263,-1.224660,-4.055126,7.630049,-6.747936,4.327448,-2.389282,4.777973,8.134936,-1.330736,-8.775332,-1.292463,-7.931331,4.366884,-9.864144,-7.052260,-7.329252,-8.966371,0.536289,4.442676,1.301010,6.422173,4.487585,-9.888426,-7.424870,-7.280100,-0.937477,3.912141,-6.465374,-4.567085,-7.170513,-1.701767,4.554160,8.684682,8.334521,-5.601000,9.981688,-6.469342,-8.865624,-1.244757,-7.142223,3.176270,2.785696,8.447179,-8.532270,0.661354,-3.658073,1.325781,-8.946342,-0.883246,9.194156,5.195122,3.524211,0.980629,-0.899210,-5.655634,4.908892,7.789829,-8.949002,-9.808328,-4.773084,1.632247,8.077291,-4.426191,2.570042,8.978949,6.291152,-1.574826,2.697874,-5.831692,2.178339,-7.493898,6.953461,0.307518,-5.170402,-8.094595,6.195214,4.298441,-1.221853,4.143660,5.460445,1.072266,7.058802,4.821388,3.133255,-0.963498,-4.620089,1.801628,6.134654,7.515915,-2.614256,-1.357071,2.808109,9.661814,-3.622423,5.408698,6.153684,-1.773398,-5.697212,6.329932,-8.270306,-2.243681,-7.091747,-5.853923,3.061197,4.336856,0.362160,4.966397,-7.073717,-9.828172,6.120170,-9.069089,-2.412027,3.520754,-7.328512,0.054494,0.387552,6.288373,8.646586,1.969507,6.984804,5.134301,-7.229455,7.550645,6.419474,5.424876,3.723419,0.630155,5.665031,5.138937,-1.999033,-9.118355,-8.818724,8.352881,0.618296,-6.452458,-4.275865,3.471317,1.381636,3.694864,-7.057621,7.871506,-7.284220,-1.176171,-0.461900,5.614322,-7.499312,-3.363226,6.277146,-4.218852,-7.686260,0.926354,-0.898324,8.321033,1.242286,-3.570089,-8.383044,2.280401,1.423915,-4.180850,1.053535,-9.548747,6.297502,8.432993,-6.342259,9.151257,-5.905512,4.500531,5.600801,-6.771481,8.140296,-2.330499,6.226667,-7.737025,7.244889,-6.520067,-8.606862,-1.212108,6.496976,-5.634180,-4.075027,-6.247715,-2.335315,5.814934,-6.827852,-3.840956,6.688818,9.683262,5.866822,0.795726,-3.160166,2.508531,-0.280555,-2.510566,3.298781,3.872287,-7.395459,3.780649,-7.971993,-8.596158,-5.090974,-9.983705,-6.140375,-2.147722,-7.916559,-2.482193,8.031643,5.577435,-6.069550,1.914787,9.047831,2.996229,-8.823377,-1.472300,6.563130,-9.339644,-2.537245,7.013807,-6.153478,-6.611093,0.115047,-2.977514,-3.608860,-3.681098,1.678084,2.148843,2.499301,7.799263,8.186083,-4.384766,-9.625061,-7.187241,3.172048,4.105915,-3.925750,-8.632076,2.856081,-1.673106,3.173965,-5.051936,4.810395,6.834790,-5.810898,-9.116897,-1.967151,-2.567301,1.630005,2.109047,9.156575,8.644211,-5.014751,6.179808,-1.888849,-5.718363,3.252289,-1.790245,-0.468871,5.595115,-5.029118,-1.071763,-8.599107,-1.037759,1.174188,-4.417908,-2.293860,-1.220573,-2.876342,-7.751131,-9.456900,-6.971610,7.452099,-6.825510,-7.862901,-3.855408,3.991118,7.725810,-7.888983,-0.947786,-9.467434,-4.413118,-6.060850,2.891832,-1.285938,8.438228,-7.763712,-6.929531,-3.384074,3.542431,-9.620358,-4.918460,-4.550325,3.823247,0.152410,9.407492,0.408220,-5.435979,-7.410480,-1.525454,-8.862042,6.972306,7.512575,-6.992372,-1.749591,-1.876629,-5.114471,1.867072,-3.534097,1.704483,-3.518044,5.013232,-1.583934,6.258939,-3.326848,5.791004,2.804382,5.092325,8.816717,-8.238269,-7.815062,-5.555278,9.143557,7.945758,1.074582,3.684995,2.059976,7.156556,2.435293,7.584506,-5.690168,-7.055747,7.391597,-2.088981,1.194642,7.465577,8.386416,-9.784529,6.075401,-3.769329,-4.677242,-4.827284,0.509927,0.490563,-8.956484,-4.128921,-5.018677,-7.793961,-4.323326,-3.979455,0.979202,1.731978,5.500082,-5.215823,-5.114528,8.309682,-8.638190,-2.661378,4.995192,-1.232821,-0.474563,-7.651289,7.684351,8.678379,9.915748,-7.186344,8.751278,2.729469,5.071549,8.864788,0.194454,3.585272,-7.290526,1.146988,7.042354,6.653868,-9.621905,-7.845732,-5.059662,6.734577,0.744157,-2.175534,-2.989336,-0.186279,3.076701,4.289970,-2.443933,7.214846,-2.140030,4.092587,-9.958455,-5.344602,-3.548823,8.522210,-1.853580,1.614942,-9.134427,-7.928403,3.033604,-2.245348,-5.536528,8.479314,-1.447528,3.403974,0.269856,8.627760,4.419836,-6.050684,-4.081343,-5.160427,8.845644,7.569578,2.831483,-0.699003,-6.801625,-2.833748,-1.640043,5.738374,-0.891370,0.699488,7.628415,4.268753,-3.774546,2.227393,9.055858,5.248902,7.962712,-1.355660,-9.817812,2.785609,-6.178118,0.632551,-9.263919,2.154724,3.403536,-1.049860,6.344593,5.415911,-9.759048,3.535178,-5.363526,-7.493392,6.556076,2.725267,0.471093,-3.069591,-8.088998,-6.296065,-6.918333,8.532543,-8.980254,7.584110,1.259659,-7.721976,9.190657,-8.096532,-3.716908,8.663593,3.963551,-0.044603,5.901422,-2.578507,-9.990559,-4.486425,0.775980,1.501698,-2.665890,3.189464,2.000801,9.891584,6.769230,6.476384,-0.939462,0.369811,6.153419,-4.611755,-4.531804,-9.637389,3.875876,-2.801804,-3.507290,-2.231194,-2.371701,-7.261586,6.113860,-2.055587,7.013419,8.884126,-3.037462,-6.452660,-9.230370,-1.891496,8.380580,2.752812,-6.250205,6.416190,0.442122,9.932784,-9.123911,-6.007780,5.341331,-5.080300,-9.052909,-7.883663,2.492556,-0.673661,0.200972,-6.159110,2.120837,5.340610,8.413812,-4.525337,-5.378970,-1.501434,1.101685,5.990290,5.796924,-9.874978,2.812882,-8.756877,4.410331,-4.894587,-3.407299,0.244312,-1.955882,7.354820,-9.646094,2.318443,5.194772,6.849195,-3.439686,0.599486,-8.446651,7.977522,-1.867464,-8.596251,-8.612517,-2.726941,-0.984833,-5.038548,-6.138132,-4.468665,4.619513,7.823018,-7.279733,2.285619,5.430197,-5.376014,-6.867628,7.169705,-0.011506,-1.207457,-3.282608,3.071074,5.987780,-9.129291,0.858597,-7.333864,-6.949850,5.647830,-5.533509,3.731611,9.636914,1.199615,4.344938,-7.383680,4.365304,-8.889216,4.590239,-6.586224,7.908448,-3.697359,2.528681,0.262995,-6.889638,-1.588414,5.371993,0.898351,-2.453909,7.159423,0.022307,9.729477,-0.671727,0.075212,4.816647,-7.834017,-9.739499,9.503104,1.376238,3.283783,7.183811,-8.529873,1.775129,2.227973,2.019798,0.487219,-4.251629,0.501228,-4.590101,-2.695574,-0.441678,-6.734365,6.902919,-6.802625,-9.807561,-3.088923,-0.626785,-6.503789,-8.741891,7.403112,-9.878384,9.716583,8.977336,-1.121718,0.147310,9.504723,2.144579,-2.039131,0.289097,-4.398638,-2.838000,1.496230,5.595524,-8.849280,0.804756,4.711959,-8.530385,-4.036726,3.442073,1.963864,7.841287,-8.547448,-3.306824,2.871610,-8.666360,0.691206,-8.851201,1.861761,-0.584244,-9.641375,0.313946,-0.321609,-3.315302,4.320493,1.286859,-3.532983,5.074759,9.371759,9.267988,1.070786,-9.922255,-6.160366,9.279227,7.624807,0.551059,4.722690,7.099235,-8.687310,-7.009100,-3.951286,-3.090966,-3.195704,0.718714,8.523580,-3.687688,-4.010952,6.599883,1.809153,-1.073427,-4.200081,-7.799034,-3.263784,7.764440,3.803202,-4.903810,9.628528,-6.386730,-4.548438,-3.034663,-2.890703,-2.642096,7.669890,7.763940,-7.517191,5.163907,3.300675,-7.641447,-9.177434,-5.260472,0.779721,6.598699,8.945416,-0.600121,1.380441,8.018908,9.263333,2.113116,3.356033,-5.850206,-5.569343,2.499157,7.907951,-7.032060,2.085270,-5.984063,3.153973,-9.485074,6.946092,5.310916,1.751846,1.931587,-5.486604,6.196260,6.360451,-4.003779,-3.925806,-7.655062,4.488347,6.599513,7.399428,-4.848609,4.405208,-6.452831,1.777015,3.274941,-4.232314,-3.707726,2.580256,0.390264,5.862099,6.782654,9.385889,9.196672,-2.957193,0.428290,-7.755789,-4.488289,-3.407193,2.137987,-2.724204,-2.305060,2.142661,-0.410563,9.654536,7.686386,6.510336,-1.561775,-1.892458,1.053790,-5.546503,8.067235,-6.039214,-5.204086,-0.423195,0.562009,-1.610823,6.506454,-3.416293,6.773856,4.681578,-0.935390,1.902309,8.832010,-7.552416,-5.036548,-0.441599,-3.794247,7.366056,9.528966,-5.743753,3.091331,1.857215,-2.508812,-5.207093,8.950755,-6.690035,-5.128777,-4.544728,-7.264324,-4.313682,6.613481,-1.810822,-5.485090,-9.921673,8.665625,-7.738893,6.665008,1.613086,8.617769,3.322735,-7.634310,-8.397935,5.261004,-1.641568,8.933867,-9.177853,1.622340,-3.854997,5.868688,-8.689277,6.507269,2.223228,-2.781212,-8.725196,-4.648738,-0.920390,-8.445909,9.971330,0.421422,2.960392,-0.845535,2.672160,-0.394227,4.999057,-4.505261,-4.949517,-1.436988,-3.659699,-7.202672,-2.343869,1.922093,9.815281,1.458638,7.997632,3.777336,-5.405845,3.971912,0.959394,6.160379,2.128858,-4.314321,-2.608086,5.257030,1.038625,8.766309,-1.095915,-4.875114,-3.769870,-9.430878,-5.353952,-0.889670,9.231093,-7.152063,7.396302,-5.672792,1.223050,-8.070618,6.890101,3.328203,-1.577974,3.469576,7.553563,-8.662917,3.020058,9.741780,-3.300296,-4.319959,7.555435,7.272578,4.456310,9.614839,-4.882107,-4.301354,4.143292,7.157609,-6.684633,-9.682396,-1.906178,-5.452685,1.731613,-9.637694,3.472033,-2.285327,8.589206,-1.513466,9.267487,-8.923664,9.943043,9.072270,-3.188874,-9.762562,1.445744,-7.447542,-1.763724,-3.824696,-3.215791,4.037465,1.601828,8.207734,0.339103,2.830478,2.570421,4.208390,-5.693680,-9.303726,8.538868,-9.291475,4.792289,-8.817332,3.536059,-2.370459,4.198889,0.779922,8.192513,-9.776989,-2.746097,1.689100,7.663087,7.274298,2.192748,-6.681332,-9.948396,-8.772766,4.767809,8.063151,0.392635,-2.944066,-8.212099,0.426902,-7.425595,-1.306489,-1.868837,2.439778,-1.326228,0.629778,-6.191180,-3.041518,-7.238382,-5.583241,-4.807628,-0.615308,8.851205,-2.755692,1.008363,1.771626,4.133123,-4.841147,8.246249,5.801323,-0.050179,-5.130061,-4.456680,-2.935088,3.543487,-2.782894,-4.882632,4.559309,-2.403137,7.619539,4.847553,0.410232,4.820728,-7.474171,5.005690,-7.703382,7.160401,-1.042864,-7.571890,-1.985361,-0.912148,5.390103,-9.800742,-5.485833,-5.974531,-3.609740,6.854299,6.711523,8.490977,8.225352,7.966039,2.765717,-2.795796,2.120857,-9.464183,-2.270273,-4.093744,9.202130,-2.427055,8.753499,-8.534622,0.846356,-6.831963,-0.676267,-8.891797,-8.669439,5.948826,-1.371875,-1.489098,-2.391308,-6.491066,7.374612,-9.148114,1.090014,-5.402701,-0.421153,-2.739795,-7.363454,-6.028862,-9.556990,4.286715,-6.884288,-6.421885,-4.331908,-1.092134,8.885460,-4.383421,-3.030556,-5.644562,2.169655,-6.118987,7.438468,7.787080,4.960864,-1.590742,8.101554,0.265798,-5.058878,-2.883063,-2.121302,-7.121877,4.707606,-4.786510,1.405814,8.877348,4.367417,-7.824274,-0.894339,7.816482,6.919473,-3.975373,1.602485,2.707856,5.610975,-6.902221,-9.488712,-1.291811,3.334827,0.737480,5.073787,-8.104730,8.293802,3.583356,-1.472801,1.472590,-9.862361,-7.108089,6.352608,0.286147,-4.261386,-7.612539,-0.816140,-4.555076,2.879673,4.347858,7.794850,-7.743062,-2.626287,-4.629847,-6.134182,8.598594,9.978497,-6.779554,8.753576,-9.141495,2.249708,-9.895110,0.925466,-4.648657,4.256371,4.627098,1.611591,3.283939,5.172768,-4.638228,7.043962,-6.294084,-2.450768,-2.643452,-6.096066,2.880176,0.845686,-9.776795,-6.779462,-6.694254,-9.573207,-5.311542,8.790614,2.001179,-9.794233,-1.113377,0.189421,-6.842233,0.501776,6.209682,5.052440,7.131419,3.383559,6.985635,-2.625531,6.075099,8.782942,-5.949899,7.063346,1.501966,-1.316170,1.659433,-4.461214,0.476481,-3.555227,-7.970529,3.518901,2.072275,3.787367,-9.473637,-1.057664,-0.994807,-1.585789,-8.641267,-2.805405,6.398218,1.004543,1.116011,-1.115967,5.165947,8.682651,3.308767,2.260390,0.619216,0.028090,3.185094,4.614690,-8.282023,-0.979639,0.706707,-1.344084,1.539770,-1.230359,-1.369768,9.106212,7.729015,1.119555,2.392286,4.852765,6.052865,7.279445,-7.893799,-0.048579,-4.454663,4.439135,8.761794,-1.095989,8.230031,9.666281,6.082475,6.720537,-9.443492,2.524405,-4.815221,-7.686315,-1.064766,-8.075580,6.294999,0.449053,1.859710,9.207720,-6.799727,-9.965024,-4.934224,0.514063,-6.280584,4.394980,8.823651,2.414250,7.582606,5.711139,9.060437,3.553301,-3.696875,-7.091875,3.717070,9.727494,5.163105,-4.732879,4.797971,1.657158,-0.884419,-4.259373,-1.124151,2.375482,-9.020779,9.629929,-8.593716,-0.337335,6.187937,8.223557,-7.117190,-8.936044,-1.079242,-4.732629,7.131039,0.020349,-4.865245,6.890509,4.537691,-5.375931,-8.729939,9.740691,-8.357812,3.729085,-2.346769,3.480133,9.189822,-3.624322,-7.911259,-4.692257,3.754578,7.926660,6.701361,-3.895280,-3.306624,-8.862672,-1.931103,1.065281,1.747476,-9.999117,9.900599,1.337245,4.854762,-6.732300,-8.921770,3.598795,2.479094,0.263436,-7.950116,2.054918,-4.761722,3.855273,-4.765797,-0.433222,6.451378,4.638540,-2.865870,-0.563912,9.937051,1.785426,0.083947,8.503141,3.510434,5.030471,-4.667163,-0.067830,2.577726,6.258445,2.608521,9.620415,-6.972425,0.280721,7.920459,-7.722416,6.374635,-5.246783,8.920299,3.926517,-6.087493,-9.257770,2.541898,-8.073854,-0.991387,-4.385413,6.546308,-7.641419,5.516816,-5.850458,8.628388,6.157130,-8.778647,3.355064,4.821165,-5.913976,-6.802206,-5.578683,-8.883055,-9.896184,-4.773026,-8.270416,-7.837233,2.482720,-3.528855,4.710060,-4.772452,-9.971748,-9.645394,-7.667165,-9.918240,-2.216526,0.837687,1.404951,5.324713,-1.431841,-7.936635,7.685508,-1.093602,-1.819337,-6.728073,-9.694058,-7.491264,0.825787,1.767377,-1.643919,-2.661763,-8.031877,4.053183,1.527252,0.442579,-2.996778,-3.354821,-9.899162,-5.911288,-8.320318,-4.491455,-0.982057,3.463653,-5.111790,7.069996,8.035075,4.582962,-2.443349,8.596277,4.718541,8.815344,-9.408867,5.709365,-4.616657,-3.828299,-1.523429,-5.440863,7.885181,-5.047298,-6.507914,3.523011,9.903456,0.463873,6.501673,-1.496024,6.979584,9.691893,9.853185,-7.223030,-8.061209,-3.395161,-1.480485,1.622912,9.360158,5.034570,-9.332239,2.288978,5.029305,6.188570,0.527978,1.128582,6.755125,-3.014988,1.978642,2.377689,0.375097,-9.319913,-0.098872,-1.274669,5.466899,9.789471,-3.662946,0.840809,4.214098,-5.706289,-7.320031,7.849223,-8.330767,8.761558,-7.421143,-7.229602,-6.066344,2.572157,-9.547835,-4.983287,5.118607,1.095039,-3.249545,9.452113,3.652404,-1.479490,3.008734,-4.229289,-7.309792,9.342530,-4.185815,-3.824172,-7.180315,9.037251,8.736313,-9.868448,1.066477,-0.248105,5.276227,0.412513,-4.614563,-7.590922,1.574375,6.313507,-2.356315,-1.077289,-8.583809,-6.200952,8.063786,-5.157540,2.831646,2.156610,-8.948998,5.450554,-3.595417,2.855194,-7.238670,-7.369034,-1.220026,5.849915,4.926193,4.362650,4.212262,-2.632987,6.829612,0.103684,-4.317327,1.418062,1.247794,-7.391570,0.570060,-3.482215,4.766094,8.204630,-6.133693,3.478142,-2.854740,-5.637290,-1.940556,-3.635682,3.642553,-3.892513,4.482931,-1.889685,-1.218596,-2.296645,-1.873671,-0.075276,7.693140,2.169053,-0.340416,6.409876,1.981105,-3.976341,5.984010,4.336936,7.143889,-0.266921,9.419792,6.803743,0.382717,5.063684,-1.689067,2.690094,2.915456,7.617838,3.058274,1.126602,-0.498508,-3.322304,-5.378376,-3.176816,-3.723006,-6.547927,-8.878726,3.106552,1.345547,3.307149,-1.422355,-1.867543,-2.807030,-3.259437,-8.278123,-9.659175,2.593570,-4.350321,6.639998,3.758846,4.236860,1.106525,7.047519,1.718910,-8.009908,-4.753952,-2.919417,-4.193289,8.529786,-6.895299,-2.774604,-4.395617,-1.721180,-0.422504,-8.757972,2.718229,4.877222,4.726923,3.509886,-2.776763,6.691761,3.402881,3.307703,-9.510133,-2.324748,-3.637257,-2.582516,-1.752794,-9.869518,-0.060503,7.711746,-8.994969,-9.728824,9.097352,8.564964,4.846823,8.675456,-1.837229,1.757121,1.811658,1.733669,-1.175656,-8.394205,-4.582078,7.781726,3.850106,-4.242001,-4.555263,5.129928,0.907079,7.549431,-1.446316,0.629272,8.328133,4.744212,-0.113891,-7.451677,-7.543927,6.859312,1.608189,1.723636,0.983924,9.841154,9.173389,-8.933525,5.433010,4.668340,-6.363860,-0.389896,8.870029,-6.793725,-2.370310,6.870618,7.966577,-8.180771,6.320471,-6.663660,8.908363,-8.821932,-8.810030,2.442797,-3.891206,5.303754,8.925333,-4.876486,-6.188565,-8.392286,-7.215176,8.923436,3.077737,-2.703670,-1.196802,7.930392,-5.185263], dtype = "float64")#candidate|3138|(2080,)|const|float64
call_3136 = relay.TupleGetItem(func_1991_call(relay.reshape(var_3137.astype('float32'), [11, 13, 5]), relay.reshape(const_3138.astype('float64'), [2080,]), ), 1)
call_3139 = relay.TupleGetItem(func_1994_call(relay.reshape(var_3137.astype('float32'), [11, 13, 5]), relay.reshape(const_3138.astype('float64'), [2080,]), ), 1)
output = relay.Tuple([call_3134,call_3136,var_3137,const_3138,])
output2 = relay.Tuple([call_3135,call_3139,var_3137,const_3138,])
func_3140 = relay.Function([var_3137,], output)
mod['func_3140'] = func_3140
mod = relay.transform.InferType()(mod)
var_3141 = relay.var("var_3141", dtype = "float32", shape = (715,))#candidate|3141|(715,)|var|float32
output = func_3140(var_3141)
func_3142 = relay.Function([var_3141], output)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3210 = relay.var("var_3210", dtype = "int8", shape = (9, 1, 9))#candidate|3210|(9, 1, 9)|var|int8
const_3211 = relay.const([[[8,-9,8,3,-6,-7,10,2,4],[-6,8,-8,-6,3,1,-9,5,-6],[-8,10,9,8,7,-3,6,6,7],[8,-8,9,2,-8,8,9,10,9],[7,9,9,-4,3,-10,-1,4,-1]],[[1,-4,2,1,-5,-9,2,-2,-9],[-5,6,3,8,6,5,8,-3,-5],[2,4,-10,-2,10,-3,6,4,-6],[10,10,8,3,1,6,-1,-5,8],[8,6,-5,-9,-9,-5,-7,-8,10]],[[2,2,1,3,-8,7,-2,5,2],[-10,-5,3,3,4,9,-9,-1,-8],[1,-4,-8,5,5,9,-2,-10,8],[-6,7,6,7,-1,-8,-1,-10,8],[-6,-9,2,2,-7,-2,8,-7,7]],[[-3,9,-3,2,-6,10,2,8,1],[-9,6,3,-2,4,-8,-3,7,4],[8,5,10,-7,-3,4,-5,-7,1],[-8,3,-2,-7,3,-4,-6,-4,-6],[8,7,-10,-7,3,7,4,-7,-9]],[[9,2,2,10,8,-10,-10,-10,2],[-9,-7,5,-6,-1,-7,2,8,7],[-9,7,2,-4,8,9,-7,10,-1],[-10,-3,2,1,5,5,9,-10,-3],[-4,5,2,1,-4,-5,-6,-4,6]],[[-7,9,8,4,9,-4,6,-1,1],[7,-5,4,8,3,-9,9,7,7],[-1,3,-7,-4,6,-4,-9,2,3],[-3,8,-2,-6,4,-8,-7,4,-1],[-8,3,-10,-2,9,-4,1,-3,5]],[[7,-8,-7,2,9,5,-8,-5,-6],[10,-4,3,3,-7,-5,4,6,-3],[-10,6,-2,9,3,-2,9,-6,-3],[2,2,-2,4,7,10,4,4,1],[-10,-7,-4,-1,-1,9,3,-9,3]],[[-10,-1,-8,8,3,1,-9,4,-5],[6,-5,-10,-2,6,-7,-5,5,-5],[-9,2,-6,-5,3,2,-2,-3,-5],[1,-7,9,5,3,1,10,3,-3],[-4,-4,10,6,-4,10,1,9,8]],[[4,-3,1,4,-6,-3,6,7,-6],[-7,2,-1,-5,4,10,1,3,-10],[-1,-8,-3,-8,-8,-10,4,7,1],[8,10,-9,4,-4,-5,5,-9,5],[-4,1,-7,-8,-8,-1,-3,-4,-3]]], dtype = "int8")#candidate|3211|(9, 5, 9)|const|int8
bop_3212 = relay.right_shift(var_3210.astype('int8'), const_3211.astype('int8')) # shape=(9, 5, 9)
bop_3222 = relay.greater(const_3211.astype('bool'), var_3210.astype('bool')) # shape=(9, 5, 9)
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
const_3226 = relay.const([-1.286427,8.608353,8.012891,-6.012427,-8.851378,3.875648,-8.327135,2.234124,-7.587741,7.067470,-6.798921,-1.944607,-9.688602,1.868660,-9.919483,1.190537,-3.914842,-5.663303,-2.553544,-2.850071,9.701140,7.920117,-7.304480,6.938638,-2.910520,-1.793255,4.987114,-8.267326,3.767436,5.206436,9.306154,-2.879966,0.682554,7.288311,8.749694,-8.024005,6.793504,-0.409649,2.669633,-6.443155,1.992815,-7.083325,-2.364125,-8.124327,1.277363,7.342520,9.030918,-2.593275,-7.265020,-3.414982,8.552067,-9.922503,-0.873772,-2.033693,3.447694,1.144375,2.156123,3.895629,-4.447463,0.498931,-4.763961,-3.834544,8.315641,-3.138991,-5.329997,6.658066,-2.491594,0.586755,9.749169,-3.922991,-7.351262,1.720960,2.689345,1.146484,-3.645257,9.477635,-0.394697,-4.633103,-6.734352,1.302728,3.339870,0.550006,6.537463,-5.296065,-8.718752,3.754529,-2.330123,3.406631,7.068147,5.456570,0.118629,-9.854317,-8.216563,6.363117,-6.021655,-9.123816,-1.378640,6.087406,-2.061116,-0.395059,-8.365601,6.109785,-8.953726,-9.256053,-6.443123,3.127506,1.092809,9.066322,6.711802,-5.971469,0.413126,5.570716,-6.024442,7.819000,4.611215,-8.181449,4.890713,-2.551408,-6.062707,-3.241926,1.039703,-5.093185,1.008557,-1.540525,7.477469,-2.038623,4.700319,-3.794218,-8.695165,-8.750786,5.851158,4.021995,0.618446,-1.595089,7.223277,-5.810846,-0.398358,1.107603,-0.920649,-1.662267,-2.660203,-7.788585,5.385138,-7.251097,1.570685,3.544328,3.399349,1.584003,-2.899323,-2.087391,-4.379263,-3.700473,3.949898,9.608032,-4.740268,2.541974,-4.291464,-3.015759,-7.437970,-0.959404,-2.178322,-3.820777,-6.215641,-4.565235,9.768057,-6.039879,4.477697,7.157549,-2.662195,-5.517173,-5.200859,-4.841783,4.767133,-5.170882,6.586212,2.110194,-2.464144,5.216944,-5.746191,-2.031875,-7.458702,6.704002,5.406916,-3.459990,8.383047,-9.196712,1.286604,4.719438,-0.977253,-9.199643,-6.151522,4.157009,-5.009510,0.247355,-9.633294,-9.501318,6.633242,-7.368414,-9.727149,-3.813896,1.525786,-1.681509,7.694433,6.979742,4.372953,2.130933,-5.541287,3.102444,4.171275,7.532277,-9.889481,-5.517171,1.352177,-5.292542,-8.870192,-0.681525,-7.801615,-3.349847,-3.511158,7.221495,7.716280,7.935584,5.391671,-3.760755,9.555406,-2.614594,-5.000948,5.566817,9.663165,7.646579,2.241515,3.914546,-6.119800,7.268188,3.303060,0.388610,-1.264893,-5.593072,6.603486,-9.136130,-3.190108,-4.079790,-0.252363,6.440640,6.817917,7.627989,-8.374237,-7.025067,-7.357059,8.928772,-9.732322,-8.925899,9.025845,-5.455970,-8.028763,9.175309,1.992874,5.010780,-0.911681,4.014941,4.482364,-8.889723,8.597824,0.878029,-6.069888,-0.013406,3.958921,4.228097,0.631849,0.298113,4.680119,3.013543,-0.156606,-7.012306,8.362831,-8.375240,-1.643615,-6.680491,-3.368542,2.525991,-2.016989,9.540850,-0.827453,-0.714506,7.031956,4.998320,-8.390988,1.343570,7.487195,6.205804,-9.039455,-5.658546,-1.644035,-7.334386,-4.982369,-2.156967,7.361139,-8.223124,-1.287831,-7.734041,-2.136342,-6.018341,-8.203166,2.480750,4.480478,-6.190594,-4.097111,-8.355411,6.999835,3.876942,-7.873233,-1.371266,-9.147464,-0.016727,5.748009,-4.988365,-3.666352,-9.542490,-6.104279,5.390370,1.834982,1.833104,-0.114813,-7.731977,9.765997,0.646375,8.684421,6.464553,-8.070880,4.992782,-8.834518,9.981661,-8.112043,4.223347,6.112049,4.348885,-3.581435,-5.837442,-7.316101,-5.819068,8.217310,-5.906364,4.142260,-6.821084,3.193440,8.697525,1.374322,-7.614094,9.619955,-1.556751,-7.516100,5.007893,2.699695,0.477969,-2.780388,1.469811,8.779401,7.764856,9.817735,-8.072056,3.444243,2.769181,-8.250801,-8.559310,1.973580,-5.619112,-0.808782,2.914079,-2.042459,-7.101441,-6.079461,-5.714006,2.441348,6.980779,2.583906,0.788362,2.033210,7.297870,-7.592609,9.321697,-2.110427,-9.384558,2.579829,-5.786583,-8.163534,1.228150,-3.326940,2.155696,5.197302,0.260028,-0.067042,6.005949,9.410927,-8.660553,-2.582019,1.932463,0.894226,-9.450244,7.337506,-6.948622,2.183261,6.211699,7.904140,0.340225,3.013398,7.247459,0.270898,8.668643,2.087804,-0.054699,-4.196410,5.770934,9.222159,-4.899070,-1.080606,0.774468,-6.886353,-1.827815,7.234853,-9.384336,-3.315694,-6.399732,-8.038521,-5.238445,2.942113,-4.493917,-3.326826,-3.052872,5.217731,9.256806,7.571124,9.643207,1.761131,-4.409143,8.220940,8.155324,-5.739557,9.656562,7.494643,2.336655,-2.484795,-6.247091,0.929960,0.723129,-0.464756,-2.490338,0.068564,3.614495,0.147816,6.412773,8.075947,-4.573621,-6.916924,-1.172201,8.492596,6.984529,8.410362,8.963201,-0.486888,6.801276,0.734692,-1.925870,0.237894,5.206905,7.412827,7.969615,7.554487,6.431731,5.363346,1.219563,7.227830,7.104636,9.181662,3.882733,6.674826,-3.204510,-9.883524,9.552344,-0.390774,8.739222,3.427062,-6.485656,-2.800121,-4.630397,-1.118482,0.207701,-9.391924,-0.443684,7.305635,5.425722,8.793780,9.520900,9.688497,7.970616,5.165519,2.950140,-4.793193,1.592647,5.378615,-9.225370,1.935766,0.302018,-5.380938,3.673318,5.797960,-9.995880,-3.886645,8.368291,-3.826748,-2.376729,6.226646,-1.639546,9.361628,-7.072787,-0.289508,-6.023215,-9.472132,3.769477,-7.421936,-2.941033,-1.479705,-5.549805,-1.177287,-0.065036,-7.005459,-8.990762,-5.917812,5.876507,-6.283352,2.104030,1.007752,2.682978,7.232278,-2.255216,7.937741,-4.672286,-7.007047,8.085718,-9.909907,4.516230,-8.277452,-9.375399,6.217734,-2.639162,8.021133,-4.716900,-3.900147,1.043848,-5.468499,8.787253,-5.506460,7.396320,-8.420874,-8.953103,-0.922643,6.094682,8.594705,-2.279052,-1.576277,9.074701,-0.702115,-3.542751,6.206698,-7.388698,6.133370,4.265760,9.872067,-0.063712,9.353581,-8.674749,5.017958,-5.857047,4.647358,5.714491,-4.090384,-6.075242,-9.858509,8.910799,-9.782306,5.673414,4.327501,1.238852,-2.946012,-5.129681,-0.510191,8.375802,-3.903473,8.282917,-9.904873,6.462942,3.128938,5.542020,-9.132947,4.415374,2.429132,0.152467,4.042469,8.891273,-0.420036,-0.565056,6.105125,-5.829242,8.641785,1.232320,-1.052124,-7.263060,-4.497867,0.683240,-4.152283,7.475577,-0.764864,-4.025912,-8.652341,4.605416,0.237771,4.965153,9.356719,1.557132,9.230907,5.212275,7.106756,5.652852,4.723879,2.368959,4.674196,6.388248,3.398278,-5.862179,-9.600371,-0.833374,2.049321,-2.496093,-0.320771,3.211192,-3.773214,0.130935,3.560721,-0.189235,-3.539941,-2.879488,-1.172791,8.904339,-2.200922,3.377626,9.787756,-4.591191,-2.569733,2.117238,-4.803107,-6.161856,8.509365,9.864126,6.176416,-3.968739,0.492342,8.330121,-2.950643,7.763020,-7.388404,0.853162,-4.026091,-3.381874,-5.909439,8.881780,2.491897,-6.214660,-4.196824,5.930399,4.541989,1.526628,-4.494379,-3.633693,1.599983,9.148042,8.989261,4.046584,0.636646,-6.155570,7.175091,-2.991904,5.243682,-2.780392,-1.941369,9.728202,7.756460,-8.334935,-5.172217,-6.645019,-8.468174,5.754487,7.144716,-8.696684,2.846916,-7.850440,-9.739710,3.040438,5.108087,7.751210,3.238835,9.614442,3.565947,-7.744777,0.571313,1.042346,5.709950,0.426486,5.731638,0.224652,-5.063794,-2.652129,-7.085097,-3.273375,9.605127,-5.197207,2.960439,2.469706,0.091346,-2.922444,-1.011038,9.332905,-7.265340,-6.138674,-4.249799,-4.098309,-3.105676,9.536849,-1.780667,-3.052486,-1.149692,-5.979079,2.935931,-5.211157,-6.687591,3.354035,8.203039,-6.223305,6.108067,7.237865,-9.283546,-7.044292,-5.120995,8.740571,0.623768,-9.332604,-4.886301,7.445162,-1.182425,4.875070,-0.005172,-8.229555,9.691717,-1.630910,6.656035,-7.987735,8.644330,-1.056897,-9.857455,4.585107,-3.405301,3.185772,-0.521028,-5.881103,5.935989,9.510552,-6.081495,8.420326,-1.865164,-1.236537,5.032205,6.748767,1.576082,9.211618,-8.080759,3.581494,-4.893091,3.168993,-3.300572,-2.949740,7.110365,9.241428,4.103939,9.069920,-2.524495,1.232752,-5.445586,1.677528,3.236243,-5.628544,0.824019,-3.828767,-1.426538,-1.372066,6.252089,-5.059670,6.658385,-8.562089,-3.241851,-7.050594,0.424637,4.038430,2.519458,2.026306,4.879429,-5.314864,5.887859,-0.602960,-2.577384,-2.639398,1.258326,0.158479,1.927144,0.011569,7.629239,-8.321948,-4.321168,6.680342,-9.813482,-8.253782,-2.247669,-0.460325,5.231288,4.418017,-1.093902,2.565631,6.978941,-8.575422,-7.554023,-5.378312,3.950525,-3.490386,-8.879690,0.869222,-2.224920,-9.019408,-6.038749,-5.690719,-6.521781,-2.452542,-7.622125,-2.332787,-7.762873,-4.991788,5.090318,-2.230128,6.190245,-0.974745,-9.751854,1.927409,6.313837,3.559561,-2.496185,1.598335,-1.444915,5.071140,5.705566,-4.868276,-8.086424,-3.302591,5.551270,9.534652,8.644182,9.799991,3.202391,-0.731709,-5.980001,9.654455,4.096504,2.068980,-9.189487,-0.521891,1.255108,0.241218,4.322167,4.293686,-9.462098,-7.855653,-4.787745,-2.300720,-2.761278,-8.227748,-9.822523,7.699920,-3.102595,6.635015,-7.949781,-5.203622,-6.913405,5.407712,7.008599,0.161544,3.749918,0.542423,8.784035,-7.951658,-6.324653,-7.610641,-5.236960,-3.526948,4.577248,1.798222,-9.068477,1.363861,3.062004,-6.530262,2.509099,-7.646704,0.976455,-8.105194,7.081324,-9.416916,6.500877,3.328242,5.473536,-1.737256,4.382924,-0.775625,0.128362,6.042401,-4.827996,9.746909,1.383614,0.925181,3.622035,5.117194,-0.685501,-8.191641,-8.519899,7.494481,8.056479,-4.816887,0.315060,-9.427020,-3.269943,0.538972,-8.525717,-3.562507,-2.581180,-1.872212,2.244273,8.048000,-7.018977,1.734571,5.907848,-3.387997,-7.581953,5.820607,1.243635,-8.122365,1.009329,-1.899515,-0.120596,9.987289,-7.497069,-7.526222,6.618808,1.113600,2.421439,1.458901,9.990367,-4.791260,-9.455242,8.083084,6.530657,-8.362274,6.607533,-0.542360,2.049821,2.288756,-9.801758,-6.896919,8.154905,8.772199,-7.094826,0.923005,-0.737628,-3.622191,6.450245,-5.723342,0.771250,-1.932818,6.694416,4.583743,-7.265663,6.391582,-1.508135,1.708908,4.581273,9.738614,8.952590,-0.328711,-3.284232,-7.094077,-1.975612,-1.530805,5.361527,6.193521,-3.714867,-8.011272,1.714071,3.734871,6.574498,3.939620,6.026992,-9.148511,0.941906,-0.163478,3.819211,6.806847,2.387335,-3.756055,-6.344493,2.639403,-4.716161,-8.764641,0.224384,6.436157,-2.212870,-0.654929,8.291655,-0.661262,5.220295,-9.674784,3.245298,-3.874666,-4.324010,-1.948726,-6.324730,5.430999,6.435562,-3.855922,4.991146,3.997264,-1.375254,6.076679,-5.406399,-0.448484,-6.243955,4.810886,1.612572,-0.986841,-6.569550,-8.286381,-1.965548,1.887681,3.197756,6.961083,4.373858,-3.431979,-9.778883,-1.629023,6.323288,-0.678791,1.837009,-7.265505,1.178113,-0.440683,9.278440,8.888034,-5.677301,7.770775,-5.881047,-6.561658,5.143692,-4.513826,-0.445886,-3.811255,2.418684,8.726467,-3.986211,3.417470,-4.023184,2.216819,5.810399,-1.359725,4.345865,4.126628,-8.429983,-7.797689,9.160153,7.828702,5.899035,3.202773,-2.816794,4.534843,-1.008481,-2.782750,8.863524,-9.903478,-4.750139,-4.857344,-2.368482,-3.867138,-1.228319,-4.191868,0.398052,9.571212,-0.119064,0.137019,-2.184004,1.980279,-4.026421,9.020358,-0.396298,-3.229261,-8.055100,-9.678029,-7.510223,6.504305,3.305013,-6.772921,8.776469,6.241686,0.830473,-3.814926,-2.320031,-5.027682,-6.657036,-4.408672,-6.354787,9.499201,2.323346,9.574636,-1.112807,-3.686630,8.225970,-0.389671,4.365310,-4.613777,9.337244,-3.927730,-0.831658,-1.668597,-1.686712,3.901450,4.002943,-6.620635,9.013711,-0.144780,-4.498648,6.179482,-6.876614,1.702231,-5.742888,-9.916817,-8.608742,9.789250,9.546920,0.120148,-8.150334,-7.217703,-4.263561,-3.245453,5.917846,2.714064,-7.222522,4.554318,7.520690,-0.524285,-5.665773,6.533588,5.214892,9.221950,-9.854088,-2.605144,-1.795715,-1.787816,0.067713,-1.903683,5.399642,2.949315,-5.860621,-1.463658,2.810676,6.191802,6.354412,-1.051736,5.592410,-7.551867,5.331574,-6.472358,4.406284,-6.107645,-1.465958,2.065319,-5.231949,2.142445,5.207658,-4.161231,-6.407413,-8.192379,-8.793059,-0.383019,1.796511,6.226837,4.039955,-9.545616,-1.211566,-6.103149,2.590771,4.538337,-6.557259,-3.360588,-8.017850,-4.829231,5.150949,4.206404,3.530850,7.203278,-1.235985,3.575383,1.948921,-2.446958,-3.155788,-5.996696,2.300255,-4.586431,-9.019796,0.381785,1.245539,3.571104,8.228836,2.319339,-6.592475,7.170713,0.142429,-3.602164,-6.564355,1.390834,5.978255,-2.011746,9.770505,-9.318299,8.816466,-9.360539,2.529278,2.689229,-0.216473,-8.958431,-3.887458,9.513790,-7.438097,-9.384232,7.603314,-9.819113,7.119952,4.667321,3.956606,-1.999481,0.968577,7.969340,-0.314384,0.415069,2.109827,8.727427,7.522266,-3.480511,-8.539599,-0.930240,-6.187588,0.438944,1.984685,-9.585462,-2.979536,-7.965128,5.668405,5.268411,-7.089906,2.294115,-5.603337,5.851926,1.323342,8.627161,-4.926964,3.156295,-8.484256,-2.886017,8.160634,-7.991019,4.459369,-1.145347,9.952425,-5.556199,-8.605429,9.273337,-2.288075,9.434747,-8.874840,-6.134831,-2.430975,8.675429,-1.116246,4.899961,-3.685661,3.250599,-3.729750,0.820213,0.439692,9.158524,7.484384,-3.874694,-5.840494,0.960529,0.651366,2.589069,-3.221151,-0.396705,0.745018,-7.738861,-3.669988,0.728615,0.223921,-7.542771,5.391220,2.716986,-8.459698,-9.050466,2.887979,-2.992181,4.700145,-7.853819,-0.709567,-0.406933,-4.817224,-0.706781,8.393212,4.824074,-9.732865,6.719783,-4.017775,-8.911441,9.618308,2.865668,-6.170376,3.874075,5.519330,2.588515,-7.877451,1.036500,1.444869,0.794779,-9.534000,0.757040,-4.363209,-3.556639,8.075703,-6.494082,1.572318,8.678468,1.816537,-2.661976,2.170243,-9.381713,1.885853,-6.468868,6.295892,2.553208,9.910184,-8.853286,-8.830418,-1.040881,1.611126,-9.537385,-0.504702,1.856358,-3.631951,-7.519092,8.376440,6.997354,5.760701,6.910419,-2.512130,-4.264948,-6.922385,1.666135,4.823012,-6.418913,-7.888078,8.832387,5.451410,-4.638398,-5.557992,0.615164,-1.555636,2.653759,-9.658690,-1.134428,9.620628,-4.988659,-7.293079,-3.308652,2.242941,-4.723872,1.435605,-1.234090,-0.063852,-8.286551,-7.596658,3.340966,4.089420,-5.248102,3.595175,-3.201987,9.566111,-5.673930,-5.946945,0.872728,-9.929819,-9.666936,6.030257,-1.973529,4.443133,5.516318,-9.444544,-4.070449,1.346648,7.098672,-7.687710,4.662236,1.297695,3.675377,5.438822,1.737321,-1.000510,2.917499,4.753993,-2.635572,0.986109,-7.092854,-6.004322,4.547679,6.898112,-1.763460,-4.476406,2.645394,-5.147754,8.904732,4.082733,8.251155,-6.627594,0.781906,-0.384396,2.255101,2.940604,7.953773,-9.950722,6.870676,9.524790,5.054484,-5.310758,7.099593,0.403253,-2.629469,-6.294230,7.566547,-2.687940,-0.273483,-6.423972,-9.947929,1.468961,7.198531,-2.287286,0.553951,-3.437138,4.889381,0.128824,7.751655,-4.865803,3.429143,4.839834,9.126751,7.375659,-4.947301,2.425577,-1.282844,-5.884587,9.935146,-4.486462,8.858006,7.853840,4.536047,8.779379,-6.532495,-8.527064,-3.081194,-3.482538,-7.089518,8.039786,7.938424,6.647540,1.407883,7.087143,7.499676,4.313636,-4.982322,2.026852,6.866630,6.466826,-1.799321,4.900957,4.620892,2.824028,-7.154047,2.164345,8.048319,6.900088,-2.155786,5.913221,-7.304792,-9.364916,-5.006314,3.414908,4.817124,3.773796,-2.325931,-2.155565,-3.079254,8.602625,8.557450,-8.172913,-9.603886,7.205216,-0.369279,-6.842968,-8.920833,9.995310,-1.360829,-7.066073,2.460057,-6.929614,5.260113,-9.265946,-4.321917,-4.093398,-1.300366,-6.082731,-0.210106,3.299736,3.294400,0.813603,4.676471,-9.899612,5.542911,6.292744,-7.510054,6.942253,-3.295425,0.916086,3.545041,-5.045537,-6.769792,-8.102782,7.055668,8.536117,2.174027,-5.468517,8.363716,7.225052,4.390129,-8.413749,-0.539076,6.593974,5.084009,2.418601,-1.401127,-0.916158,-1.936401,6.825048,-7.359113,-8.280268,-7.852368,-8.225601,1.126255,-8.947848,-1.616282,-3.710590,-3.984206,-2.447300,-8.122960,9.846957,1.422009,4.118017,-1.149884,9.947836,2.205592,7.289098,-3.517868,-6.681794,6.592856,0.522972,0.963870,-2.566135,5.529119,9.760648,-7.047516,8.409076,-9.231001,3.880893,8.488939,1.670014,0.288982,-9.113982,7.326110,8.367037,-9.564395,-0.440497,6.132990,4.549920,2.815561,-4.795150,9.360193,-5.847628,2.413672,0.258399,-6.727156,1.811714,7.184393,-3.861979,-6.252878,4.038733,-8.984079,-2.737133,-9.290287,-4.774210,-4.095191,4.381897,-4.557662,8.526816,4.299741,0.039024,-0.164490,5.170516,-2.575860,-4.335297,-7.379512,9.565477,9.310461,-8.192030,-5.886661,-7.624334,9.716481,-8.658553,9.925037,6.071246,-5.784112,-9.343281,-1.238350,-7.401627,5.404878,1.499161,-2.741872,-2.765313,4.534737,0.968573,-5.634310,-3.394541,7.912506,8.486329,6.975206,-4.114709,3.259428,-2.525802,-8.385974,4.975710,0.169160,0.732097,2.911289,1.871328,-1.027632,-6.098047,-0.073564,6.549913,-6.193971,-0.219535,0.846441,1.161602,-5.169364,-5.705430,4.954885,-7.199536,8.526050,-6.882083,-7.867052,0.261746,2.857488,4.570785,-4.814825,3.253307,3.902596,-4.689699,-3.071783,-8.236308,1.080857,-5.219012,-2.738571,3.240341,-5.472267,-3.657372,-1.006357,-1.810311,-5.247632,3.047774,-0.287661,4.815632,6.660370,-4.827075,5.616716,-8.395903,-2.231729,7.140576,8.502850,-1.323093,5.282090,-4.790059,-5.874545,8.877061,-4.162214,9.832248,3.568434,8.126835,5.768669,8.565560,-9.738786,9.089544,-3.803771,6.992378,-3.109379,5.147407,-2.430858,7.279434,-7.112843,1.361925,0.715433,6.888490,8.187673,9.935425,8.576548,-8.043837,-4.916013,-4.968819,-9.006098,1.504227,0.677900,-7.522905,-8.407663,-0.979631,-4.233601,-6.525692,-4.407647,6.812647,-3.294223,-1.701038,8.058006,5.297624,9.797431,-1.380934,9.063071,-3.654610,-7.683445,-2.857459,-8.803791,-0.992704,8.360228,-7.297604,-5.757015,8.474656,4.184543,-3.082346,-0.440365,-1.171209,0.613492,-5.196693,-7.132372,6.267507,3.630075,-9.143350,-3.508328,0.335545,8.643030,-2.131361,3.851177,-0.010244,8.579613,3.127641,-5.411932,3.430856,-8.384659,-4.055954,-0.658516,4.201134,1.551176,5.338482,-5.661881,2.284085,6.915698,-4.013039,-0.228796,0.201927,3.626185,0.943238,-9.434092,-1.474881,-3.073539,-3.463516,-3.953493,4.811222,7.739950,-1.435744,1.106663,0.998468,3.870632,1.017738,-7.049141,8.480700,1.693987,8.191414,-5.106939,-1.747602,-2.503046,4.695748,-3.349034,-2.338378,-3.442622,-5.518706,7.495762,-9.821442,2.786741,-0.374340,-6.347544,1.311370,-1.083929,5.136043,-1.159724,-4.500204,-3.122097,-8.676723,-5.850099,-6.861477,6.994059,-5.829317,-5.801088,3.385781,-9.277102,8.842309,7.020006,-8.248412,8.092533,-8.778146,8.367390,-2.577845,8.210752,-3.933991,-6.486674,-3.324092,1.798406,-5.242228,6.370779,2.246575,5.438044,-4.930935,-2.278835,-2.181034,-1.324449,9.636162,3.457193,-2.536354,-8.836156,-1.801503,9.084201,-3.344284,7.002075,3.077572,-6.331893,-2.623081,9.840637,5.794644,3.146279,-8.225232,-1.761115,9.395679,3.961320,-5.809398,9.390747,-7.950759,6.357831,0.052153,0.092517,2.829567,-8.932782,1.926178,-1.629354,0.505964,9.085124,-4.084728,8.741307,9.210510,4.559297,1.360003,6.504310,0.024318,-4.233411,1.894738,8.081811,-6.047893,7.778841,-0.777029,-9.062200,9.430691,1.637524,9.269301,-3.382432,1.070040,5.525337,-0.467864,5.391121,1.570860,-5.467172,0.210937,-8.037823,8.519284,-8.608291,8.724423,1.226166,-1.036098,-9.330177,-1.498643,-0.757824,-8.779048,-6.549918,-4.617895,0.854611,1.843840,5.404599,3.825652,-2.993492,8.529858,-2.350998,3.596788,3.185579,-9.986261,-4.798778,-1.131811,0.604971,-2.855355,2.175578,1.461836,-3.611034,3.905067,7.149142,2.742706,2.947397,-2.196741,-9.498680,-3.867259,1.166914,5.674069,5.101423,3.149464,8.454848,-0.043710,-5.822231,9.256298,-9.822593,-4.053227,2.980656,-2.078715,-3.092326,4.679939,-2.043381,0.069394,-0.247949,5.851679,-9.667015,-6.183470,-6.511609,5.129954,-0.012972,-6.189123,0.046885,4.113829,-5.864027,2.625469,-4.475886,0.729574,-6.194353,8.815567,-4.026577,-4.894130,1.673553,-5.377358,6.902580,-9.575355,-8.918855,7.335751,-1.284412,-2.928254,-2.032818,4.635456,-8.378299,8.033329,0.319816,-5.306589,-3.586907,8.532576,9.465626,1.520346,0.798135,1.105329,-8.930502,1.528778,4.008558,-3.688848,4.177051,-1.350007,-5.659086,7.571847,-4.348102,9.169452,-1.089948,-8.779500,-0.582532,0.284513,-7.776951,3.997399,7.911028,0.674326,6.824935,-0.053882,3.007486,-0.023917,-7.937146,-4.787253,2.864927,6.103341,-8.857220,-7.223340,-1.467817,-7.890101,-0.854973,3.399501,-9.028644,-3.738038,-7.086416,-9.614851,2.495800,-9.449680,-4.346275,4.209398,-0.833782,-4.188522,-9.217075,-7.554761,-4.172592,7.684218,-8.055562,-2.975144,5.595639,-0.362690,3.644034,-0.514266,-6.732695,-2.032996,0.238203,-6.519359,9.914788,-6.403908,2.621546,-4.255959,7.670000,-8.927866,-2.875046,-3.292409,5.463934,-3.458767,4.775815,-5.519768,7.263064,1.288039,-0.652608,-5.840771,-9.625008], dtype = "float64")#candidate|3226|(2080,)|const|float64
call_3225 = func_770_call(relay.reshape(const_3226.astype('float64'), [10, 13, 16]))
call_3227 = func_770_call(relay.reshape(const_3226.astype('float64'), [10, 13, 16]))
func_932_call = mod.get_global_var('func_932')
func_936_call = mutated_mod.get_global_var('func_936')
var_3229 = relay.var("var_3229", dtype = "float64", shape = (182,))#candidate|3229|(182,)|var|float64
call_3228 = relay.TupleGetItem(func_932_call(relay.reshape(var_3229.astype('float64'), [1, 14, 13]), relay.reshape(call_3225.astype('float64'), [2080,]), ), 2)
call_3230 = relay.TupleGetItem(func_936_call(relay.reshape(var_3229.astype('float64'), [1, 14, 13]), relay.reshape(call_3225.astype('float64'), [2080,]), ), 2)
func_932_call = mod.get_global_var('func_932')
func_936_call = mutated_mod.get_global_var('func_936')
call_3244 = relay.TupleGetItem(func_932_call(relay.reshape(var_3229.astype('float64'), [1, 14, 13]), relay.reshape(call_3228.astype('float64'), [2080,]), ), 1)
call_3245 = relay.TupleGetItem(func_936_call(relay.reshape(var_3229.astype('float64'), [1, 14, 13]), relay.reshape(call_3228.astype('float64'), [2080,]), ), 1)
output = relay.Tuple([bop_3212,bop_3222,call_3225,const_3226,call_3228,var_3229,call_3244,])
output2 = relay.Tuple([bop_3212,bop_3222,call_3227,const_3226,call_3230,var_3229,call_3245,])
func_3249 = relay.Function([var_3210,var_3229,], output)
mod['func_3249'] = func_3249
mod = relay.transform.InferType()(mod)
var_3250 = relay.var("var_3250", dtype = "int8", shape = (9, 1, 9))#candidate|3250|(9, 1, 9)|var|int8
var_3251 = relay.var("var_3251", dtype = "float64", shape = (182,))#candidate|3251|(182,)|var|float64
output = func_3249(var_3250,var_3251,)
func_3252 = relay.Function([var_3250,var_3251,], output)
mutated_mod['func_3252'] = func_3252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3264 = func_3125_call()
call_3265 = func_3125_call()
output = relay.Tuple([call_3264,])
output2 = relay.Tuple([call_3265,])
func_3278 = relay.Function([], output)
mod['func_3278'] = func_3278
mod = relay.transform.InferType()(mod)
output = func_3278()
func_3279 = relay.Function([], output)
mutated_mod['func_3279'] = func_3279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3280 = relay.TupleGetItem(func_3278_call(), 0)
call_3281 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([call_3280,])
output2 = relay.Tuple([call_3281,])
func_3291 = relay.Function([], output)
mod['func_3291'] = func_3291
mod = relay.transform.InferType()(mod)
output = func_3291()
func_3292 = relay.Function([], output)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3303 = relay.TupleGetItem(func_3291_call(), 0)
call_3304 = relay.TupleGetItem(func_3292_call(), 0)
func_3249_call = mod.get_global_var('func_3249')
func_3252_call = mutated_mod.get_global_var('func_3252')
const_3306 = relay.const([-2,-1,3,3,10,-5,-2,-8,-3,-2,9,-3,3,8,9,2,-2,-4,-10,-3,3,-3,10,-8,8,-6,-2,-6,8,8,-9,-1,-3,8,-4,-4,-10,1,-10,-4,7,-5,-9,-5,5,4,-4,-5,-2,10,5,-2,-3,-6,4,-1,-10,-1,7,5,9,-6,-8,10,3,5,-4,-4,2,9,-1,-6,-9,1,-2,10,10,6,8,-6,-8], dtype = "int8")#candidate|3306|(81,)|const|int8
var_3307 = relay.var("var_3307", dtype = "float64", shape = (182,))#candidate|3307|(182,)|var|float64
call_3305 = relay.TupleGetItem(func_3249_call(relay.reshape(const_3306.astype('int8'), [9, 1, 9]), relay.reshape(var_3307.astype('float64'), [182,]), ), 5)
call_3308 = relay.TupleGetItem(func_3252_call(relay.reshape(const_3306.astype('int8'), [9, 1, 9]), relay.reshape(var_3307.astype('float64'), [182,]), ), 5)
func_2598_call = mod.get_global_var('func_2598')
func_2602_call = mutated_mod.get_global_var('func_2602')
const_3310 = relay.const(-5, dtype = "uint32")#candidate|3310|()|const|uint32
const_3311 = relay.const([-1,7,5,-10,6,10,-7,-4,4,5,-2,5,-8,-9,6,-8,-4,-1,-5,-6,2,-9,-2,-3,2,10,2,4,-10,2,9,-5,5,2,6,2,-5,6,-3,-6,6,1,-1,7,-1,7,10,-3,-7,-4,-6,-10,9,-10,2,9,2,-5,4,4,2,-5,3,-7,6,5,10,-3,-9,1,-9,-9,-10,-5,6,-2,-1,1,9,-6,9,-7,5,8,-2,-5,-3,3,-9,-10,6,-5,10,-2,-2,-6,-2,-2,2,2,10,7,4,-7,-8,9,-10,2,-10,3,-5,-5,-1,-3,-8,10,-2,1,7,-10,8,1,-6,10,-9,10,-1,2,-3,-8,10,8,5,10,9,10,-9,-5,-4,-3,-9,9,-1,5,-6,4,1,7,-3,-1,-7,2,-2,5,4,-8,-10,-5,8,4,3,7,1,-3,3,9,-4,9,7,-1,1,-4,-6,3,-10,-5,6,8,-8,-4,-4,-2,-5,4,5,5,-5,-9,9,-5,9,-2,4,4,3,-2,4,-7,4,-3,7,7,6,-2,-5,3,-7,-9,-7,2,3,-8,9,-6,-7,4,-4,5,-4,-4,-6,-3,2,-5,-4,-2,2,-4,5,3,-6,7,5,-9,-1,-8,-9,-1,4,3,-4,7,-5,4,-8,2,-4,-3,1,10,6,-10,-10,10,-10,3,8,-9,-8,2,1,-9,3,6,7,-7,-5,-10,1,-8,-2,4,-1,-2,-7,5,8,-5,-10,-4,-8,-10,1,7,-1,-2,7,5,-10,-7,3,7,5,-2,-6,2,9,-4,-5,2,-7,10,-10,-2,-4,-9,10,-8,-9,-2,9,6,9,8,-4,-9,-5,-7,-6,7,-7,-8,-2,3,-7,6,-10,-3,6,-2,-4,-1,2,3,-4,-7,-5,-1,-1,8,-1,5,-9,-2,-2,5,-7,-4,-2,-4,-7,1,-6,-1,-9,7,7,3,10,3,4,-9,-2,-10,8,-3,7,-9,6,-1,2,5,8,5,7,-4,-4,2,4,2,-5,8,-9,-4,10,-10,-3,-10,-6,1,-3,-4,7,-4,-5,-4,-3,2,-3,7,-2,-6,5,-6,-2,-4,-3,3,6,3,-4,-2,3,-9,2,2,6,-9,-5,-1,5,2,-8,9,2,5,-1,5,3,-2,1,-9,1,9,4,-1,-7,-6,-9,9,9,9,1,5,9,6,-1,-8,-2,6,-7,4,1,-9,5,4,-9,3,7,1,7,-6,4,-9,-1,2,-4,-1,6,-7,-7,-6,-4,-6,9,6,9,-2,-6,-7,8,4,-8,8,3,7,-8,8,-2,-4,-6,-6,-4,5,-1,-6,6,2,-5,7,8,9,5,-8,2,9,-2,-2,-3,-6,-3,-7], dtype = "uint32")#candidate|3311|(512,)|const|uint32
call_3309 = relay.TupleGetItem(func_2598_call(relay.reshape(const_3310.astype('uint32'), []), relay.reshape(const_3311.astype('uint32'), [16, 8, 4]), ), 0)
call_3312 = relay.TupleGetItem(func_2602_call(relay.reshape(const_3310.astype('uint32'), []), relay.reshape(const_3311.astype('uint32'), [16, 8, 4]), ), 0)
output = relay.Tuple([call_3303,call_3305,const_3306,var_3307,call_3309,const_3310,const_3311,])
output2 = relay.Tuple([call_3304,call_3308,const_3306,var_3307,call_3312,const_3310,const_3311,])
func_3317 = relay.Function([var_3307,], output)
mod['func_3317'] = func_3317
mod = relay.transform.InferType()(mod)
mutated_mod['func_3317'] = func_3317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3318 = relay.var("var_3318", dtype = "float64", shape = (182,))#candidate|3318|(182,)|var|float64
func_3317_call = mutated_mod.get_global_var('func_3317')
call_3319 = func_3317_call(var_3318)
output = call_3319
func_3320 = relay.Function([var_3318], output)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3351 = relay.TupleGetItem(func_3291_call(), 0)
call_3352 = relay.TupleGetItem(func_3292_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_3354 = relay.var("var_3354", dtype = "float64", shape = (132, 16))#candidate|3354|(132, 16)|var|float64
var_3355 = relay.var("var_3355", dtype = "float64", shape = (2080,))#candidate|3355|(2080,)|var|float64
call_3353 = relay.TupleGetItem(func_1197_call(relay.reshape(var_3354.astype('float64'), [12, 11, 16]), relay.reshape(var_3355.astype('float64'), [104, 20]), ), 1)
call_3356 = relay.TupleGetItem(func_1200_call(relay.reshape(var_3354.astype('float64'), [12, 11, 16]), relay.reshape(var_3355.astype('float64'), [104, 20]), ), 1)
const_3359 = relay.constdtype = "float64")#candidate|3359|(104, 20)|const|float64
bop_3360 = relay.bitwise_or(call_3353.astype('int32'), relay.reshape(const_3359.astype('int32'), relay.shape_of(call_3353))) # shape=(104, 20)
bop_3363 = relay.bitwise_or(call_3356.astype('int32'), relay.reshape(const_3359.astype('int32'), relay.shape_of(call_3356))) # shape=(104, 20)
uop_3372 = relay.cos(var_3354.astype('float32')) # shape=(132, 16)
var_3380 = relay.var("var_3380", dtype = "float32", shape = (132, 16))#candidate|3380|(132, 16)|var|float32
bop_3381 = relay.floor_divide(uop_3372.astype('float32'), relay.reshape(var_3380.astype('float32'), relay.shape_of(uop_3372))) # shape=(132, 16)
output = relay.Tuple([call_3351,var_3355,bop_3360,bop_3381,])
output2 = relay.Tuple([call_3352,var_3355,bop_3363,bop_3381,])
func_3390 = relay.Function([var_3354,var_3355,var_3380,], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3390_call = mutated_mod.get_global_var('func_3390')
var_3392 = relay.var("var_3392", dtype = "float64", shape = (132, 16))#candidate|3392|(132, 16)|var|float64
var_3393 = relay.var("var_3393", dtype = "float64", shape = (2080,))#candidate|3393|(2080,)|var|float64
var_3394 = relay.var("var_3394", dtype = "float32", shape = (132, 16))#candidate|3394|(132, 16)|var|float32
call_3391 = func_3390_call(var_3392,var_3393,var_3394,)
output = call_3391
func_3395 = relay.Function([var_3392,var_3393,var_3394,], output)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3412 = relay.TupleGetItem(func_3278_call(), 0)
call_3413 = relay.TupleGetItem(func_3279_call(), 0)
var_3419 = relay.var("var_3419", dtype = "bool", shape = (12, 2, 13))#candidate|3419|(12, 2, 13)|var|bool
bop_3420 = relay.bitwise_and(call_3412.astype('int64'), relay.reshape(var_3419.astype('int64'), relay.shape_of(call_3412))) # shape=(12, 2, 13)
bop_3423 = relay.bitwise_and(call_3413.astype('int64'), relay.reshape(var_3419.astype('int64'), relay.shape_of(call_3413))) # shape=(12, 2, 13)
output = relay.Tuple([bop_3420,])
output2 = relay.Tuple([bop_3423,])
func_3424 = relay.Function([var_3419,], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3425 = relay.var("var_3425", dtype = "bool", shape = (12, 2, 13))#candidate|3425|(12, 2, 13)|var|bool
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3426 = func_3424_call(var_3425)
output = call_3426
func_3427 = relay.Function([var_3425], output)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3429 = relay.TupleGetItem(func_3278_call(), 0)
call_3430 = relay.TupleGetItem(func_3279_call(), 0)
func_3317_call = mod.get_global_var('func_3317')
func_3320_call = mutated_mod.get_global_var('func_3320')
var_3438 = relay.var("var_3438", dtype = "float64", shape = (182,))#candidate|3438|(182,)|var|float64
call_3437 = relay.TupleGetItem(func_3317_call(relay.reshape(var_3438.astype('float64'), [182,])), 3)
call_3439 = relay.TupleGetItem(func_3320_call(relay.reshape(var_3438.astype('float64'), [182,])), 3)
uop_3450 = relay.acos(call_3437.astype('float32')) # shape=(182,)
uop_3452 = relay.acos(call_3439.astype('float32')) # shape=(182,)
output = relay.Tuple([call_3429,var_3438,uop_3450,])
output2 = relay.Tuple([call_3430,var_3438,uop_3452,])
func_3469 = relay.Function([var_3438,], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3470 = relay.var("var_3470", dtype = "float64", shape = (182,))#candidate|3470|(182,)|var|float64
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3471 = func_3469_call(var_3470)
output = call_3471
func_3472 = relay.Function([var_3470], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3502 = relay.TupleGetItem(func_3278_call(), 0)
call_3503 = relay.TupleGetItem(func_3279_call(), 0)
output = call_3502
output2 = call_3503
func_3507 = relay.Function([], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
output = func_3507()
func_3508 = relay.Function([], output)
mutated_mod['func_3508'] = func_3508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3536 = relay.TupleGetItem(func_3278_call(), 0)
call_3537 = relay.TupleGetItem(func_3279_call(), 0)
var_3543 = relay.var("var_3543", dtype = "bool", shape = (12, 2, 13))#candidate|3543|(12, 2, 13)|var|bool
bop_3544 = relay.minimum(call_3536.astype('int8'), relay.reshape(var_3543.astype('int8'), relay.shape_of(call_3536))) # shape=(12, 2, 13)
bop_3547 = relay.minimum(call_3537.astype('int8'), relay.reshape(var_3543.astype('int8'), relay.shape_of(call_3537))) # shape=(12, 2, 13)
func_3390_call = mod.get_global_var('func_3390')
func_3395_call = mutated_mod.get_global_var('func_3395')
var_3549 = relay.var("var_3549", dtype = "float64", shape = (2112,))#candidate|3549|(2112,)|var|float64
var_3550 = relay.var("var_3550", dtype = "float64", shape = (1, 2080))#candidate|3550|(1, 2080)|var|float64
call_3548 = relay.TupleGetItem(func_3390_call(relay.reshape(var_3549.astype('float64'), [132, 16]), relay.reshape(var_3550.astype('float64'), [2080,]), relay.reshape(var_3549.astype('float32'), [132, 16]), ), 1)
call_3551 = relay.TupleGetItem(func_3395_call(relay.reshape(var_3549.astype('float64'), [132, 16]), relay.reshape(var_3550.astype('float64'), [2080,]), relay.reshape(var_3549.astype('float32'), [132, 16]), ), 1)
func_3317_call = mod.get_global_var('func_3317')
func_3320_call = mutated_mod.get_global_var('func_3320')
var_3556 = relay.var("var_3556", dtype = "float64", shape = (182,))#candidate|3556|(182,)|var|float64
call_3555 = relay.TupleGetItem(func_3317_call(relay.reshape(var_3556.astype('float64'), [182,])), 1)
call_3557 = relay.TupleGetItem(func_3320_call(relay.reshape(var_3556.astype('float64'), [182,])), 1)
output = relay.Tuple([bop_3544,call_3548,var_3549,var_3550,call_3555,var_3556,])
output2 = relay.Tuple([bop_3547,call_3551,var_3549,var_3550,call_3557,var_3556,])
func_3575 = relay.Function([var_3543,var_3549,var_3550,var_3556,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
var_3576 = relay.var("var_3576", dtype = "bool", shape = (12, 2, 13))#candidate|3576|(12, 2, 13)|var|bool
var_3577 = relay.var("var_3577", dtype = "float64", shape = (2112,))#candidate|3577|(2112,)|var|float64
var_3578 = relay.var("var_3578", dtype = "float64", shape = (1, 2080))#candidate|3578|(1, 2080)|var|float64
var_3579 = relay.var("var_3579", dtype = "float64", shape = (182,))#candidate|3579|(182,)|var|float64
output = func_3575(var_3576,var_3577,var_3578,var_3579,)
func_3580 = relay.Function([var_3576,var_3577,var_3578,var_3579,], output)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3593 = relay.var("var_3593", dtype = "float64", shape = (13, 8, 6))#candidate|3593|(13, 8, 6)|var|float64
uop_3594 = relay.sinh(var_3593.astype('float64')) # shape=(13, 8, 6)
uop_3606 = relay.sqrt(uop_3594.astype('float32')) # shape=(13, 8, 6)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3610 = relay.TupleGetItem(func_3278_call(), 0)
call_3611 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([uop_3606,call_3610,])
output2 = relay.Tuple([uop_3606,call_3611,])
func_3612 = relay.Function([var_3593,], output)
mod['func_3612'] = func_3612
mod = relay.transform.InferType()(mod)
mutated_mod['func_3612'] = func_3612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3613 = relay.var("var_3613", dtype = "float64", shape = (13, 8, 6))#candidate|3613|(13, 8, 6)|var|float64
func_3612_call = mutated_mod.get_global_var('func_3612')
call_3614 = func_3612_call(var_3613)
output = call_3614
func_3615 = relay.Function([var_3613], output)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_3627 = func_3507_call()
call_3628 = func_3507_call()
output = call_3627
output2 = call_3628
func_3637 = relay.Function([], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mutated_mod.get_global_var('func_3637')
call_3638 = func_3637_call()
output = call_3638
func_3639 = relay.Function([], output)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_3640 = func_3507_call()
call_3641 = func_3507_call()
var_3649 = relay.var("var_3649", dtype = "bool", shape = (12, 2, 13))#candidate|3649|(12, 2, 13)|var|bool
bop_3650 = relay.multiply(call_3640.astype('int8'), relay.reshape(var_3649.astype('int8'), relay.shape_of(call_3640))) # shape=(12, 2, 13)
bop_3653 = relay.multiply(call_3641.astype('int8'), relay.reshape(var_3649.astype('int8'), relay.shape_of(call_3641))) # shape=(12, 2, 13)
output = bop_3650
output2 = bop_3653
func_3654 = relay.Function([var_3649,], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3655 = relay.var("var_3655", dtype = "bool", shape = (12, 2, 13))#candidate|3655|(12, 2, 13)|var|bool
func_3654_call = mutated_mod.get_global_var('func_3654')
call_3656 = func_3654_call(var_3655)
output = call_3656
func_3657 = relay.Function([var_3655], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3669 = func_3125_call()
call_3670 = func_3125_call()
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
const_3672 = relay.const([-9,-7,-1,-3,-8,-10,10,-7,-5,-7,-8,3,10,-1,-1,-5,5,5,1,-10,-1,-6,-4,-9,4,7,-4,-4,-2,-1,3,3,-6,-8,6,-7,-6,-7,6,1,-1,3,-1,-2,-10,-3,-8,5,-5,-2,8,-6,-4,7,9,1,-6,-5,-9,-9,-9,6,-1,9,3,-4,3,-7,5,7,10,1,-2,5,3,-4,6,-10,-10,-2,-10,-6,-10,-10,-5,-6,6,-4,-6,-2,3,-1,-8,8,10,3,-8,-5,-9,1,3,-10,-9,-7,-3,3,-7,-5,-7,-2,-2,-1,1,-9,2,-6,-1,1,-3,4,9,2,-6,-10,-1,-2,-7,-7,8,3,-8,-2,-7,1,-3,-8,4,10,-8,-3,-5,5,-5,-2,-8,10,4,-9,6,3,-4,-4,10,6,-4,-10,-3,1,-9,10,10,5,1,6,-3,7,-9,-4,4,-10,1,7,5,10,5,-1,-10,-10,2,2,-7,3,-1,7,-8,-4,-5,1,-1,5,-4,10,7,-7,-7,4,-10,-10,-3,4,1,10,-9,9,-5,7,-3,3,8,-8,-1,-1,-9,-9,7,6,3,8,-1,3,1,5,-6,1,2,-1,2,-3,-2,-5,-10,-8,9,5,3,7,-10,6,-3,-2,-6,8,-4,9,5,-4,5,8,-10,-5,2,4], dtype = "int32")#candidate|3672|(252,)|const|int32
call_3671 = relay.TupleGetItem(func_41_call(relay.reshape(const_3672.astype('int32'), [14, 9, 2])), 0)
call_3673 = relay.TupleGetItem(func_43_call(relay.reshape(const_3672.astype('int32'), [14, 9, 2])), 0)
output = relay.Tuple([call_3669,call_3671,const_3672,])
output2 = relay.Tuple([call_3670,call_3673,const_3672,])
func_3675 = relay.Function([], output)
mod['func_3675'] = func_3675
mod = relay.transform.InferType()(mod)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3675_call = mutated_mod.get_global_var('func_3675')
call_3676 = func_3675_call()
output = call_3676
func_3677 = relay.Function([], output)
mutated_mod['func_3677'] = func_3677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3715 = relay.TupleGetItem(func_3291_call(), 0)
call_3716 = relay.TupleGetItem(func_3292_call(), 0)
uop_3736 = relay.asin(call_3715.astype('float32')) # shape=(12, 2, 13)
uop_3738 = relay.asin(call_3716.astype('float32')) # shape=(12, 2, 13)
var_3743 = relay.var("var_3743", dtype = "float32", shape = (12, 2, 13))#candidate|3743|(12, 2, 13)|var|float32
bop_3744 = relay.floor_divide(uop_3736.astype('float64'), relay.reshape(var_3743.astype('float64'), relay.shape_of(uop_3736))) # shape=(12, 2, 13)
bop_3747 = relay.floor_divide(uop_3738.astype('float64'), relay.reshape(var_3743.astype('float64'), relay.shape_of(uop_3738))) # shape=(12, 2, 13)
uop_3748 = relay.log10(var_3743.astype('float32')) # shape=(12, 2, 13)
uop_3750 = relay.atan(call_3715.astype('float64')) # shape=(12, 2, 13)
uop_3752 = relay.atan(call_3716.astype('float64')) # shape=(12, 2, 13)
func_3317_call = mod.get_global_var('func_3317')
func_3320_call = mutated_mod.get_global_var('func_3320')
var_3756 = relay.var("var_3756", dtype = "float64", shape = (182,))#candidate|3756|(182,)|var|float64
call_3755 = relay.TupleGetItem(func_3317_call(relay.reshape(var_3756.astype('float64'), [182,])), 4)
call_3757 = relay.TupleGetItem(func_3320_call(relay.reshape(var_3756.astype('float64'), [182,])), 4)
var_3758 = relay.var("var_3758", dtype = "float64", shape = (182,))#candidate|3758|(182,)|var|float64
bop_3759 = relay.left_shift(var_3756.astype('int16'), relay.reshape(var_3758.astype('int16'), relay.shape_of(var_3756))) # shape=(182,)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
var_3774 = relay.var("var_3774", dtype = "int32", shape = (252,))#candidate|3774|(252,)|var|int32
call_3773 = relay.TupleGetItem(func_41_call(relay.reshape(var_3774.astype('int32'), [14, 9, 2])), 1)
call_3775 = relay.TupleGetItem(func_43_call(relay.reshape(var_3774.astype('int32'), [14, 9, 2])), 1)
bop_3791 = relay.power(call_3715.astype('float32'), relay.reshape(bop_3744.astype('float32'), relay.shape_of(call_3715))) # shape=(12, 2, 13)
bop_3794 = relay.power(call_3716.astype('float32'), relay.reshape(bop_3747.astype('float32'), relay.shape_of(call_3716))) # shape=(12, 2, 13)
output = relay.Tuple([uop_3748,uop_3750,call_3755,bop_3759,call_3773,var_3774,bop_3791,])
output2 = relay.Tuple([uop_3748,uop_3752,call_3757,bop_3759,call_3775,var_3774,bop_3794,])
func_3796 = relay.Function([var_3743,var_3756,var_3758,var_3774,], output)
mod['func_3796'] = func_3796
mod = relay.transform.InferType()(mod)
var_3797 = relay.var("var_3797", dtype = "float32", shape = (12, 2, 13))#candidate|3797|(12, 2, 13)|var|float32
var_3798 = relay.var("var_3798", dtype = "float64", shape = (182,))#candidate|3798|(182,)|var|float64
var_3799 = relay.var("var_3799", dtype = "float64", shape = (182,))#candidate|3799|(182,)|var|float64
var_3800 = relay.var("var_3800", dtype = "int32", shape = (252,))#candidate|3800|(252,)|var|int32
output = func_3796(var_3797,var_3798,var_3799,var_3800,)
func_3801 = relay.Function([var_3797,var_3798,var_3799,var_3800,], output)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_3842 = func_3507_call()
call_3843 = func_3507_call()
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3852 = relay.TupleGetItem(func_3278_call(), 0)
call_3853 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([call_3842,call_3852,])
output2 = relay.Tuple([call_3843,call_3853,])
func_3857 = relay.Function([], output)
mod['func_3857'] = func_3857
mod = relay.transform.InferType()(mod)
mutated_mod['func_3857'] = func_3857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mutated_mod.get_global_var('func_3857')
call_3858 = func_3857_call()
output = call_3858
func_3859 = relay.Function([], output)
mutated_mod['func_3859'] = func_3859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3860 = relay.var("var_3860", dtype = "float32", shape = (14, 4, 13))#candidate|3860|(14, 4, 13)|var|float32
uop_3861 = relay.acos(var_3860.astype('float32')) # shape=(14, 4, 13)
bop_3864 = relay.bitwise_xor(var_3860.astype('uint64'), relay.reshape(uop_3861.astype('uint64'), relay.shape_of(var_3860))) # shape=(14, 4, 13)
func_1522_call = mod.get_global_var('func_1522')
func_1524_call = mutated_mod.get_global_var('func_1524')
var_3868 = relay.var("var_3868", dtype = "float64", shape = (240,))#candidate|3868|(240,)|var|float64
call_3867 = func_1522_call(relay.reshape(var_3868.astype('float64'), [8, 10, 3]))
call_3869 = func_1522_call(relay.reshape(var_3868.astype('float64'), [8, 10, 3]))
func_1762_call = mod.get_global_var('func_1762')
func_1765_call = mutated_mod.get_global_var('func_1765')
var_3877 = relay.var("var_3877", dtype = "float64", shape = (2080,))#candidate|3877|(2080,)|var|float64
call_3876 = relay.TupleGetItem(func_1762_call(relay.reshape(var_3877.astype('float64'), [2080,])), 2)
call_3878 = relay.TupleGetItem(func_1765_call(relay.reshape(var_3877.astype('float64'), [2080,])), 2)
output = relay.Tuple([bop_3864,call_3867,var_3868,call_3876,var_3877,])
output2 = relay.Tuple([bop_3864,call_3869,var_3868,call_3878,var_3877,])
func_3889 = relay.Function([var_3860,var_3868,var_3877,], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
var_3890 = relay.var("var_3890", dtype = "float32", shape = (14, 4, 13))#candidate|3890|(14, 4, 13)|var|float32
var_3891 = relay.var("var_3891", dtype = "float64", shape = (240,))#candidate|3891|(240,)|var|float64
var_3892 = relay.var("var_3892", dtype = "float64", shape = (2080,))#candidate|3892|(2080,)|var|float64
output = func_3889(var_3890,var_3891,var_3892,)
func_3893 = relay.Function([var_3890,var_3891,var_3892,], output)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3901 = relay.var("var_3901", dtype = "int64", shape = (6, 10, 9))#candidate|3901|(6, 10, 9)|var|int64
var_3902 = relay.var("var_3902", dtype = "int64", shape = (6, 10, 9))#candidate|3902|(6, 10, 9)|var|int64
bop_3903 = relay.equal(var_3901.astype('bool'), relay.reshape(var_3902.astype('bool'), relay.shape_of(var_3901))) # shape=(6, 10, 9)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3906 = relay.TupleGetItem(func_3278_call(), 0)
call_3907 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([bop_3903,call_3906,])
output2 = relay.Tuple([bop_3903,call_3907,])
func_3911 = relay.Function([var_3901,var_3902,], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3911_call = mutated_mod.get_global_var('func_3911')
var_3913 = relay.var("var_3913", dtype = "int64", shape = (6, 10, 9))#candidate|3913|(6, 10, 9)|var|int64
var_3914 = relay.var("var_3914", dtype = "int64", shape = (6, 10, 9))#candidate|3914|(6, 10, 9)|var|int64
call_3912 = func_3911_call(var_3913,var_3914,)
output = call_3912
func_3915 = relay.Function([var_3913,var_3914,], output)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_3957 = func_3507_call()
call_3958 = func_3507_call()
output = call_3957
output2 = call_3958
func_3965 = relay.Function([], output)
mod['func_3965'] = func_3965
mod = relay.transform.InferType()(mod)
output = func_3965()
func_3966 = relay.Function([], output)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3974 = relay.TupleGetItem(func_3278_call(), 0)
call_3975 = relay.TupleGetItem(func_3279_call(), 0)
func_3965_call = mod.get_global_var('func_3965')
func_3966_call = mutated_mod.get_global_var('func_3966')
call_3997 = func_3965_call()
call_3998 = func_3965_call()
uop_4001 = relay.log(call_3974.astype('float32')) # shape=(12, 2, 13)
uop_4003 = relay.log(call_3975.astype('float32')) # shape=(12, 2, 13)
output = relay.Tuple([call_3997,uop_4001,])
output2 = relay.Tuple([call_3998,uop_4003,])
func_4010 = relay.Function([], output)
mod['func_4010'] = func_4010
mod = relay.transform.InferType()(mod)
output = func_4010()
func_4011 = relay.Function([], output)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4026 = relay.TupleGetItem(func_3857_call(), 0)
call_4027 = relay.TupleGetItem(func_3859_call(), 0)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_4031 = func_3507_call()
call_4032 = func_3507_call()
output = relay.Tuple([call_4026,call_4031,])
output2 = relay.Tuple([call_4027,call_4032,])
func_4033 = relay.Function([], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mutated_mod.get_global_var('func_4033')
call_4034 = func_4033_call()
output = call_4034
func_4035 = relay.Function([], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_4036 = func_3637_call()
call_4037 = func_3637_call()
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4049 = relay.TupleGetItem(func_3857_call(), 0)
call_4050 = relay.TupleGetItem(func_3859_call(), 0)
func_2283_call = mod.get_global_var('func_2283')
func_2286_call = mutated_mod.get_global_var('func_2286')
const_4055 = relay.const([4.442699,3.745215,-5.268245,6.832349,0.978800,-5.112829,0.739799,1.229220,-2.033031,4.065357,-9.772565,6.520387,7.408116,-6.779797,1.340948,-2.268799,1.189811,-3.924738,8.128346,5.513609,-6.055433,-6.731713,3.143964,8.273013,7.613595,-0.893924,-2.872631,-1.640406,8.053746,-4.721973,-5.658192,4.279323,-0.812279,5.069415,5.513854,-8.908187,-3.302611,-2.817371,0.580001,-1.751968,-2.284876,-7.699656,-2.043236,-0.266243,3.456232,-6.330584,-1.659741,-1.747033,-9.381585,-6.590176,-9.896910,1.608116,8.797827,3.996833,0.112200,-3.957636,-1.080644,-4.365418,8.394091,6.339218,0.767183,-4.776985,4.246371,3.840472,-9.948856,-2.157020,-1.503280,-8.657608,9.517770,-6.854854,6.085576,-6.749971,1.299922,-4.655939,-5.128171,-4.715077,5.588295,1.612355,8.123935,-8.555479,-6.105555,-2.060109,-1.998285,-2.008886,-8.447248,-0.844028,8.935237,-0.743894,2.955943,6.667038,-0.367288,-5.126733,-6.295616,-2.578517,-9.359631,-2.489151,9.493427,5.362432,8.855469,6.112618,1.433454,6.291182,2.463918,9.421287,-5.208331,-4.493608,-9.994829,-1.321542,-0.027137,-9.184354,-0.494078,2.619951,-6.825947,5.786636,-8.596966,9.398974,8.586080,6.818421,-5.080060,7.680333,6.081521,5.616531,-0.871231,3.944968,0.723290,1.746728,-8.521473,1.301129,-6.016351,-4.187519,-4.844090,-9.524571,-4.814746,-2.931476,-3.929464,2.896293,0.508625,-7.595097,-1.672587,-8.685596,5.516442,2.468849,-7.939180,-7.385669,-7.869403,3.241390,5.063444,-2.261422,5.921302,-6.100856,-7.883906,-8.455628,4.373835,-9.501600,-3.401998,7.373019,-8.586398,3.582017,4.217745,0.882240,-6.715817,-2.427430,-5.128059,9.676751,7.174728,-4.330590,0.406716,7.655537,6.751148,-1.464765,-4.907680,1.457512,0.916250,4.934756,4.064492,-5.991276,-3.341116,5.601787,0.114311,-3.134210,-3.318700,-5.058720,9.832998,-9.232425,6.867146,-6.204413,-6.260262,6.788235,-2.842385,6.937658,9.539877,2.629768,-2.576808,8.201656,4.984257,4.380036,-6.227887,7.890655,0.316234,-1.080681,3.499006,6.786094,-9.605668,1.063304,6.173476,-0.956344,-3.213045,-7.219399,-6.135957,-3.504326,-9.668076,-7.432081,6.736296,-4.942552,9.604468,-9.714027,-3.043666,8.345836,-2.130651,6.587777,0.367851,-3.822505,-2.934485,-6.920102,-9.881264,-5.613576,-8.924928,1.551856,4.372104,0.820773,-5.158415,5.957154,5.861267,-9.121953,8.528211,2.835197,1.666793,-1.489973,4.733590,2.097571,8.048859,-9.749973,-7.089727,4.222211,5.943728,-7.988975,-0.307545,-5.805090,-4.678475,5.588632,8.621133,-3.269706,7.933708,-5.917046,-0.671868,-1.902115,3.813647,2.832017,1.678645,6.547734,4.717723,-7.166685,4.207275,9.301090,4.264115,0.074798,-8.433861,-2.794045,-1.615127,-1.336326,-9.124661,-7.242932,7.094987,9.794971,4.775023,2.356967,-8.826475,-8.456386,8.833820,-9.839534,1.933117,6.811596,1.124594,0.102711,-1.450218,-2.578466,-8.332959,-1.608619,8.724488,-9.722378,3.819287,8.761479,-2.326849,6.667494,-4.514226,-9.779050,-7.948937,4.161297,9.995154,2.935937,-1.875786,-6.825947,6.391579,-6.353496,-1.416872,7.190740,-2.340791,-0.043490,-4.954510,-9.248351,3.518965,-2.546626,-1.281892,3.763248,-9.719662,6.019572,5.247257,-8.914315,1.963714,9.237579,8.838863,0.265370,7.622072,-9.874887,6.989976,-4.281197,-9.486992,-8.281259,-8.881009,-9.506856,7.162574,3.869166,-8.810491,5.290725,-9.709475,8.501902,0.246360,-1.971361,-7.948910,-4.515661,0.531684,-5.754282,-3.320845,9.797407,6.221814,3.102606,1.515387,0.325407,-8.251572,2.766262,3.580598,4.785550,8.013521,9.876016,-1.156308,-8.256434,1.783700,2.902754,1.329836,-1.955693,3.248624,0.633334,7.066419,-3.510359,4.162170,-6.939592,-4.093635,8.950570,9.251310,-6.003239,4.613238,-6.119511,9.109796,-8.035625,-1.686182,0.668720,-2.107300,-1.210066,3.808544,-5.393150,5.593656,2.127609,-0.504554,7.940371,-7.018093,2.756626,-2.059081,-5.146389,-0.398769,1.822949,1.382019,-3.524153,3.009850,5.788817,7.184244,-7.133299,9.989870,-2.001150,-0.100015,4.090629,4.605742,-2.583774,-9.908640,-8.695296,8.770367,0.555624,-4.142971,9.506229,2.259612,2.977351,-5.535995,8.825387,5.945946,4.748175,0.755873,-1.101560,7.671946,0.422183,3.115397,-5.637827,5.201637,-0.989170,3.446785,9.609642,-2.549796,4.695387,-0.548942,-4.921835,6.076751,-1.960419,0.929722,0.328031,9.107126,-1.832362,-4.266571,-4.799267,2.328632,-5.971974,-5.574803,4.978388,-6.015395,6.405147,6.169560,-4.619023,0.723247,2.397675,-1.719275,2.141911,6.954146,-5.852839,0.560035,9.303085,0.289868,8.577782,-0.780150,2.228624,-6.721456,0.620825,-6.668263,-1.331903,-1.471691,-3.937302,-2.744901,4.891780,-4.650321,-4.825997,-1.932998,-2.036647,8.149143,5.903349,-5.748707,-1.995282,0.242142,-7.379217,2.831346,4.383783,-5.397690,-3.180977,5.521726,5.996506,-7.866660,0.966301,6.274990,-5.239451,-3.612769,-5.479210,-1.350812,2.714795,8.233898,-2.466503,-8.111682,-7.709545,7.226687,3.305394,-2.531886,-9.942405,-3.873731,9.662198,0.339503,-4.537208,2.053493,-3.494039,9.141113,6.393925,2.941690,-3.967078,5.119277,2.611322,4.163184,-2.847401,8.134419,-1.494183,-6.503665,2.701817,-2.840634,0.727397,0.457004,3.609412,0.961732,3.241901,-9.950253,-1.160959,-4.939118,6.529423,1.500279,-5.880555,-6.771471,-9.950571,-7.243161,4.762654,-0.437959,3.718686,-3.497459,-4.515351,4.691336,1.809128,9.604342,-5.557533,4.246405,-3.140033,5.824616,1.550604,3.369075,-3.933304,5.689613,-0.449051,6.111432,2.040216,4.643400,0.316952,9.610539,-5.216768,6.292361,0.223693,-5.188731,2.922705,-1.006303,-8.513753,-1.007433,1.253035,-1.282093,3.596131,1.068818,2.990899,8.254695,-5.939135,4.388306,3.441785,5.624137,4.784738,-2.765593,8.190886,3.534219,2.850623,-6.807671,-2.882127,-5.551426,-7.684293,-0.978328,-3.232749,5.274525,7.874974,-5.664986,5.337508,8.538986,4.609884,8.909614,-7.221906,-6.291813,-9.724898,-9.132289,0.393991,1.724431,2.450205,-4.899648,4.268106,-0.357257,-6.943369,5.632952,-2.647942,4.430709,8.245787,-1.858603,3.010913,8.897734,0.142071,-3.940905,-9.451528,6.001062,-9.272207,-2.926241,3.882224,-7.154551,7.791896,0.647088,-0.129138,0.971519,1.964181,0.630319,8.759221,-5.923485,-7.356464,5.688686,-0.070894,-9.914638,-8.194570,-0.898493,6.315350,-5.324193,8.379700,-1.997976,-1.728002,1.313319,9.409874,-8.317476,9.581152,-3.845116,-4.498235,-5.286488,-7.005919,2.637047,9.128958,-5.119401,-7.028980,3.999356,-1.192214,3.255324,-0.589819,-0.283724,3.275123,-8.355786,5.757541,-3.946791,-5.861360,4.525888,-8.536298,-8.571903,-0.055633,-3.798583,0.411178,-2.409219,-3.392503,-4.611010,-3.234951,-2.414402,1.491648,-0.135465,7.956002,-9.697044,-0.410610,-7.664520,-1.875061,-8.974394,5.066102,6.326945,3.349315,-2.462121,1.757367,-3.644328,0.902953,3.358340,0.534093,-7.176494,9.284902,-5.780788,-6.091129,-0.471139,6.719227,7.321610,6.939633,8.056800,6.365935,-5.801615,-2.623949,-1.410995,-8.071153,2.192421,-6.141961,-2.172679,-4.903637,7.256344,-5.254080,-1.991242,-3.472871,-7.136843,-8.010208,-7.824909,-1.144900,2.237774,4.426669,-5.993550,8.691539,7.754492,1.584081,8.772259,9.312545,-9.094972,-4.282703,3.458974,1.694929,3.496262,-3.302262,0.048559,-8.700240,6.936249,-9.090511,9.531141,6.160509,5.739123,7.956621,9.033217,0.741546,-5.384728,-2.309733,2.455444,8.002631,2.561715,-6.822496,-7.386131,4.588777,3.933357,-7.822263,-7.790492,2.919290,-9.306604,-6.988892,8.988921,-7.018939,-7.675188,-4.647455,-1.184094,-2.597133,4.379116,-1.575080,9.122210,9.027800,3.602719,-0.118022,-2.300185,-7.209937,-7.150072,-6.686687,-8.081169,4.363842,2.940206,-4.466788,9.367941,7.313838,-9.404288,9.941105,-8.765039,-2.045897,-7.974314,6.337299,-1.145030,8.316621,-6.056723,2.524824,-6.205940,5.833920,-5.266453,5.372987,-9.929581,-0.151169,-7.431005,7.829250,-1.520921,9.992620,-7.109176,6.875315,-8.867584,0.791329,-7.044267,2.521832,8.688620,-4.163201,2.163924,7.825240,8.927133,-8.396849,8.193434,-5.429200,3.162353,-0.439524,-2.230296,-7.823437,9.311218,8.506143,-4.176740,-6.127398,-1.999995,7.934392,7.263770,7.117443,-9.374502,-9.304822,0.693105,-0.273485,-9.089232,-7.860815,-9.866684,5.638765,-7.082141,-4.276100,-6.026306,-0.642786,1.859053,-9.828152,9.647652,9.672185,4.809696,2.411573,-2.567734,8.450331,7.389856,7.666374,-2.573850,3.003944,-0.406416,-4.413413,-8.547252,1.039873,-3.726596,-8.918912,9.499119,-5.265468,-8.887138,-9.401377,4.893587,4.392477,5.949313,-6.773621,-2.859115,4.838070,5.248006,6.212979,-5.186350,-3.293144,-9.671364,-1.906698,-2.549687,-9.466658,6.808782,-5.880041,-5.327094,1.873695,-9.517959,9.213832,3.244671,1.208477,-3.398719,-1.099028,6.289918,-0.960395,-3.294563,-4.603525,3.039142,8.428261,0.013624,4.686621,4.065152,1.917261,-8.972725,-9.515696,5.805739,6.815095,-0.404021,8.657820,-0.003957,8.448827,-2.169511,2.007359,-0.693922,-1.063988,-6.161906,2.248792,-5.765154,-9.619357,-4.549125,-3.681737,-9.053250,8.395207,-7.934936,2.670812,-3.757813,6.817000,-4.986418,-5.429528,8.465017,-1.235110,-2.291475,4.738200,-7.021660,-0.270614,1.195468,4.281365,-6.868982,-8.368580,3.420979,2.896265,1.401112,-9.014846,1.032476,-5.125724,-4.693726,3.498085,0.919194,7.159687,-0.258911,-6.753345,8.383921,2.905519,-4.142479,-0.072718,5.422487,-3.482775,-1.926502,-2.761606,6.194642,-8.538883,5.095942,3.657597,-7.413354,6.751707,-4.938159,-7.169805,5.666844,7.671031,-9.588820,4.949245,7.463389,-2.731243,-0.459160,2.870009,3.581700,0.481510,8.937499,1.242017,-3.006185,-2.743003,-9.840223,-9.970794,2.822106,-4.545500,4.833965,5.452560,0.125032,-6.180039,5.628356,0.329397,1.651883,8.817981,0.653437,-2.206954,1.955608,-0.210076,-6.396220,4.047676,-0.857484,9.814415,8.593556,-4.030884,-9.349514,1.869014,1.880606,-3.443032,7.842596,5.280220,1.009260,-4.361174,7.779697,-8.320352,3.598830,4.627128,7.157449,5.014367,4.582129,7.523761,-5.958196,5.238573,-4.384558,-0.576586,-4.299542,-0.169821,-8.437130,-1.594973,-7.274607,2.806808,8.890228,1.024221,2.653458,2.441565,7.604971,-3.380142,4.425316,6.675817,5.774683,-7.904477,8.758310,3.175618,3.890442,3.298387,0.155606,-0.550526,5.747588,2.576843,-8.359314,-1.391893,-3.058491,-2.967890,-0.119077,1.743184,0.320936,1.775223,-8.260483,-4.830867,7.130099,2.655903,-3.682430,9.180825,-1.622631,-7.353348,9.468055,-1.153286,9.767469,-4.675839,-6.517160,-8.954469,2.716958,-7.870536,-5.600625,9.555854,7.108538,-4.264292,-4.143669,9.127831,5.081693,-9.569174,-6.649784,-8.398144,8.001695,-4.802490,-4.588501,4.870402,-2.233356,3.869566,0.632412,-9.693676,-3.917130,-5.884181,-8.729121,2.961271,-3.417446,9.377998,-8.318712,-2.654653,-2.396972,0.170037,5.453550,-6.372774,-5.294846,6.061200,-8.697670,-5.599724,-1.328095,-2.915765,1.007692,-2.258214,9.122748,-1.493943,5.649535,0.248078,3.458224,-2.391578,6.521328,3.322208,7.117238,0.408242,-9.384988,-8.507286,8.197844,-1.118763,-8.008475,-2.721293,-1.298221,4.686313,8.395488,8.280297,1.382110,-2.938624,-1.719356,-3.491355,-7.137985,7.316270,-1.332114,7.305175,-0.083214,-5.179824,2.909280,-5.727232,7.849015,2.197075,-0.223370,-9.825857,2.334323,9.656564,-8.480730,2.247258,0.306046,3.779328,-3.274740,0.551062,-6.808514,9.200842,-6.259583,1.443306,9.634564,1.835527,8.114013,5.464209,-9.788965,-6.241353,-4.911173,2.055085,0.936606,0.683944,5.473777,-6.739687,-2.454639,9.951119,-6.607237,8.503646,-3.021668,3.559752,-4.570382,-8.370546,6.100236,4.847932,-7.346696,-6.046551,5.592726,6.671326,-5.445060,1.572700,0.888586,-7.837513,0.706799,0.786176,-1.767983,-0.894304,3.281174,1.600495,4.230492,-5.011476,5.977849,7.599380,5.668696,4.778461,7.897450,-8.459774,-0.171413,-9.249212,-1.566217,0.666761,-7.475690,5.918149,-9.290526,4.860316,6.639741,9.639890,-7.186153,-0.222665,1.394562,2.481399,-2.682677,5.563603,-7.295349,-5.689238,9.262761,3.328553,2.629906,9.605112,4.350042,-9.569767,-4.825562,3.706718,-2.832659,-1.931175,-2.549478,-4.631697,-2.431475,4.880438,8.953922,4.054195,1.140412,0.567511,-5.156777,-8.237964,7.759662,-8.806373,-6.810106,-5.007343,3.585169,-2.206670,-6.739002,-6.422820,-5.938419,-6.722444,-0.383629,-8.160731,-3.457740,-9.200253,-8.988095,0.855819,6.094167,2.082735,9.530916,5.046589,2.923611,-4.218182,-5.792030,-4.208260,-4.037768,1.835496,-5.956333,-3.175201,9.859497,0.924015,8.154846,6.001998,8.282033,-2.614380,-7.796413,2.904182,6.124518,9.456091,1.353314,-1.957515,-0.998304,-2.166912,7.655782,-0.205443,0.219494,-3.238335,-7.378603,-7.205438,1.120638,-4.453173,-4.381283,2.391926,-6.978745,5.203544,-8.923635,7.286399,1.783985,6.646128,6.149697,2.705407,-5.342075,2.802697,6.260385,-8.998126,1.898941,-5.769152,-3.225336,7.901292,0.584367,-0.868905,1.155595,-6.757107,4.304501,4.501981,4.704054,-8.416113,2.693939,-9.720249,1.316065,0.231773,-2.833438,-2.150627,8.287097,1.998068,-9.920972,-4.400983,3.861490,0.840146,-0.364936,4.846552,1.627510,8.136088,-6.018908,-1.654279,-5.872667,-2.232785,0.848621,-6.631317,-9.132295,7.734398,8.554822,-2.491654,5.460711,-5.781219,3.053104,0.227984,6.496570,4.943043,9.906001,2.885375,2.229742,-9.764534,-9.883530,4.221022,-4.699872,1.275977,-4.273545,-1.864235,8.957411,3.447750,9.801988,-6.504599,-9.019547,-0.544417,0.184654,4.952971,6.674166,5.101888,-1.726541,-7.420220,-2.755929,0.830061,-1.360717,-4.638851,-0.465588,-1.133418,-2.962075,-6.334361,-0.272662,-6.769601,-5.646836,-4.471247,4.050277,5.228819,-0.252669,-9.384538,4.966001,7.371833,-4.353359,-9.493920,1.590967,-7.829336,7.318476,-0.632419,1.276201,1.074509,2.766606,9.358424,2.476138,-5.260898,-0.093241,-6.377637,-9.140332,2.836141,0.145571,6.206656,-4.065856,7.727858,-1.637986,9.747493,-8.404485,0.331533,-9.332217,5.542658,2.404595,7.061266,-0.395220,-7.693312,1.146619,2.343393,9.997000,-6.630620,-8.467621,0.859829,5.881508,-2.144758,2.026590,2.097703,-2.980473,3.799408,2.791494,-2.237409,6.748953,-5.468696,-4.764673,9.701057,6.813225,-0.483564,0.808773,-7.529039,-4.381636,6.706386,1.902987,-2.181685,0.767085,7.883262,-2.785655,-4.059572,-4.160583,3.545781,2.914891,-6.318335,-7.052928,-1.452024,-2.970650,-0.364365,-6.267507,-4.538586,2.562024,1.748816,0.405874,5.809354,-2.738086,6.674353,-4.242632,-0.692156,8.502339,-0.775141,6.880970,-1.815394,-5.721945,-3.225420,-2.647719,-8.521438,7.151311,-0.463208,-9.499763,3.211433,4.918804,-2.213832,4.972795,3.045696,2.032097,-3.586067,0.060875,2.396299,3.680786,-4.952491,-9.470756,6.772642,-5.450532,-1.152592,5.192983,-8.536759,-2.649424,0.099432,0.584389,4.759272,-3.515249,8.525339,-6.961383,6.780929,-3.390716,5.295648,-8.687689,6.369411,-9.737548,-8.929923,8.215981,-4.542723,0.611185,4.603508,7.800416,7.218735,-1.803215,0.847657,7.670057,-0.748519,-4.357302,7.072543,1.478065,1.240350,-5.868957,0.088208,-2.267197,-0.453744,8.496735,-8.875865,-2.024516,7.959730,-4.945000,2.967641,0.384971,-0.449863,0.578589,5.390038,-3.384453,-8.308451,-3.126713,-6.249138,6.107325,-9.316951,-9.320385,1.065719,-8.770503,9.567521,8.654971,0.873181,-7.895575,-0.111537,3.276120,-8.473597,0.546688,-6.964859,9.013051,-9.368288,4.601001,4.547500,-6.985131,-6.765094,5.657873,5.495817,-0.061540,-5.939920,-8.261544,-1.149531,-7.845189,7.766218,3.927295,1.702988,-2.004317,-9.165144,-8.705424,0.985836,-8.411318,9.548488,2.679796,5.603455,4.799889,3.744410,-1.102877,7.496829,-8.543538,-4.247950,5.611339,-9.338741,-4.297106,4.512306,6.446072,6.497246,0.897911,7.976145,9.957478,-7.772310,-1.889496,5.353039,-3.390355,6.208704,4.687201,-4.469169,6.870124,2.672507,9.239724,-3.699034,3.922988,1.196221,9.523257,-5.416713,0.680088,4.143084,-0.178475,-6.080393,-1.537790,4.610946,-6.562694,-2.233360,9.269625,7.165711,-9.622338,3.101202,6.568873,-5.083007,7.367228,4.906922,-7.805143,4.733782,9.694986,8.720384,0.316877,-4.974071,-1.508026,-6.211438,-6.492294,2.044083,1.771440,-9.666789,9.344192,2.062644,2.269871,3.994505,-6.270602,-6.339383,-7.305881,5.067327,2.232217,8.866826,-6.111144,3.483036,6.433253,1.452923,9.370699,3.075714,6.060639,4.775669,-8.975265,-9.893717,8.525902,-3.852041,-9.371946,-8.247724,0.651277,3.992490,1.565996,-7.670889,7.457337,4.964264,-2.699712,7.248319,-7.570597,-6.466273,3.817913,1.042180,-6.371388,1.397992,4.765771,-1.259324,5.627065,-9.007240,-8.039863,-8.044362,-2.676694,-4.157285,-1.246996,-4.540957,-8.768106,7.163944,7.713988,6.235434,4.853616,-5.532324,-0.192243,9.302284,5.419171,-8.007078,6.950658,3.950763,-8.827103,-9.061044,-0.486519,1.534941,8.275676,-4.630790,8.692905,-6.416300,-0.646474,1.159648,5.119371,2.886623,-8.880933,-3.408107,-1.340608,-9.853113,1.840386,4.056621,8.607534,0.517506,-0.072559,-6.604662,7.420265,-2.453172,4.777695,-5.154003,-1.076371,0.550133,4.075388,-5.445349,-7.251416,-3.275622,1.343528,5.731164,4.714701,-5.026262,-6.448317,6.388026,1.979584,-7.609005,-3.603245,-3.812754,-2.651763,3.269772,7.723071,4.713949,-9.267349,-3.283892,5.035175,1.619752,-9.974119,-7.712446,-0.961074,-0.313612,3.819399,-5.045140,7.347089,1.075315,6.327009,4.656111,-4.318323,-0.748319,-8.801531,7.465537,-8.297022,-6.309126,-5.040206,9.364633,0.778322,-2.286735,-5.638397,-3.003746,3.068062,0.207215,-0.599877,-2.827607,6.312959,-0.810571,6.964832,-3.639941,-8.853321,-1.577221,1.072139,0.967185,8.369853,-6.017261,-1.175289,1.669767,-3.568387,-2.555159,0.226502,6.994641,6.326607,-4.519933,8.056608,-7.450209,-9.050797,-6.801089,5.229232,-4.963136,-3.408778,-6.624965,2.920813,-1.148140,6.330334,-4.828732,5.473802,5.354316,0.213390,9.621393,-4.754085,-6.355695,-7.863901,5.383678,-5.524217,-9.047786,-3.635345,-0.656758,-7.396912,2.719276,1.695262,-6.856870,2.557282,-1.161313,-8.514560,-3.548435,0.646110,0.450774,7.612232,4.886457,-7.879054,-3.530638,0.965918,-2.459415,-4.628636,2.905404,8.888726,-6.104496,3.097496,-7.627243,1.055270,1.625081,8.280702,-1.183345,9.420150,5.420409], dtype = "float32")#candidate|4055|(1820,)|const|float32
call_4054 = func_2283_call(relay.reshape(const_4055.astype('float32'), [14, 10, 13]))
call_4056 = func_2283_call(relay.reshape(const_4055.astype('float32'), [14, 10, 13]))
bop_4060 = relay.less_equal(const_4055.astype('bool'), relay.reshape(call_4054.astype('bool'), relay.shape_of(const_4055))) # shape=(1820,)
bop_4063 = relay.less_equal(const_4055.astype('bool'), relay.reshape(call_4056.astype('bool'), relay.shape_of(const_4055))) # shape=(1820,)
bop_4064 = relay.less(const_4055.astype('bool'), relay.reshape(bop_4060.astype('bool'), relay.shape_of(const_4055))) # shape=(1820,)
bop_4067 = relay.less(const_4055.astype('bool'), relay.reshape(bop_4063.astype('bool'), relay.shape_of(const_4055))) # shape=(1820,)
bop_4076 = relay.divide(call_4036.astype('float32'), relay.reshape(call_4049.astype('float32'), relay.shape_of(call_4036))) # shape=(12, 2, 13)
bop_4079 = relay.divide(call_4037.astype('float32'), relay.reshape(call_4050.astype('float32'), relay.shape_of(call_4037))) # shape=(12, 2, 13)
output = relay.Tuple([bop_4064,bop_4076,])
output2 = relay.Tuple([bop_4067,bop_4079,])
func_4080 = relay.Function([], output)
mod['func_4080'] = func_4080
mod = relay.transform.InferType()(mod)
mutated_mod['func_4080'] = func_4080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4080_call = mutated_mod.get_global_var('func_4080')
call_4081 = func_4080_call()
output = call_4081
func_4082 = relay.Function([], output)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_4117 = func_3125_call()
call_4118 = func_3125_call()
output = relay.Tuple([call_4117,])
output2 = relay.Tuple([call_4118,])
func_4127 = relay.Function([], output)
mod['func_4127'] = func_4127
mod = relay.transform.InferType()(mod)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4127_call = mutated_mod.get_global_var('func_4127')
call_4128 = func_4127_call()
output = call_4128
func_4129 = relay.Function([], output)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_4139 = func_3637_call()
call_4140 = func_3637_call()
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
var_4144 = relay.var("var_4144", dtype = "float64", shape = (2080,))#candidate|4144|(2080,)|var|float64
call_4143 = func_770_call(relay.reshape(var_4144.astype('float64'), [10, 13, 16]))
call_4145 = func_770_call(relay.reshape(var_4144.astype('float64'), [10, 13, 16]))
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4152 = relay.TupleGetItem(func_3857_call(), 0)
call_4153 = relay.TupleGetItem(func_3859_call(), 0)
func_2283_call = mod.get_global_var('func_2283')
func_2286_call = mutated_mod.get_global_var('func_2286')
var_4160 = relay.var("var_4160", dtype = "float32", shape = (1820,))#candidate|4160|(1820,)|var|float32
call_4159 = func_2283_call(relay.reshape(var_4160.astype('float32'), [14, 10, 13]))
call_4161 = func_2283_call(relay.reshape(var_4160.astype('float32'), [14, 10, 13]))
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_4162 = func_3125_call()
call_4163 = func_3125_call()
output = relay.Tuple([call_4139,call_4143,var_4144,call_4152,call_4159,var_4160,call_4162,])
output2 = relay.Tuple([call_4140,call_4145,var_4144,call_4153,call_4161,var_4160,call_4163,])
func_4179 = relay.Function([var_4144,var_4160,], output)
mod['func_4179'] = func_4179
mod = relay.transform.InferType()(mod)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mutated_mod.get_global_var('func_4179')
var_4181 = relay.var("var_4181", dtype = "float64", shape = (2080,))#candidate|4181|(2080,)|var|float64
var_4182 = relay.var("var_4182", dtype = "float32", shape = (1820,))#candidate|4182|(1820,)|var|float32
call_4180 = func_4179_call(var_4181,var_4182,)
output = call_4180
func_4183 = relay.Function([var_4181,var_4182,], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_4189 = func_3507_call()
call_4190 = func_3507_call()
output = call_4189
output2 = call_4190
func_4196 = relay.Function([], output)
mod['func_4196'] = func_4196
mod = relay.transform.InferType()(mod)
output = func_4196()
func_4197 = relay.Function([], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4010_call = mod.get_global_var('func_4010')
func_4011_call = mutated_mod.get_global_var('func_4011')
call_4248 = relay.TupleGetItem(func_4010_call(), 1)
call_4249 = relay.TupleGetItem(func_4011_call(), 1)
output = relay.Tuple([call_4248,])
output2 = relay.Tuple([call_4249,])
func_4270 = relay.Function([], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mutated_mod.get_global_var('func_4270')
call_4271 = func_4270_call()
output = call_4271
func_4272 = relay.Function([], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4282 = relay.const([[[7.363156,4.819339,1.860020,1.828302,-1.194709,-2.377306,9.337102,5.209499,3.253095,4.186940,2.431545,-2.093550,2.067892,1.008481,-0.292455,-7.968120],[5.112954,0.713782,-5.829035,-4.589261,8.604373,-9.914508,3.825778,1.960947,-6.176712,-4.330834,-7.985965,-8.489026,7.510337,8.082232,-2.625670,4.903050],[8.448997,-7.425763,-3.967170,0.577818,-6.312240,-7.392811,3.124369,-0.947076,-0.633479,5.385213,2.614685,-6.523142,2.792264,-0.734759,7.095536,-5.742093],[-6.786611,-5.717376,8.706502,-9.925817,-8.574087,0.229989,8.468887,5.849187,-1.604575,-5.927092,-4.939122,-2.469139,1.126719,-3.344528,5.124451,2.440883]],[[4.273498,-3.982488,6.376443,-6.040176,3.505415,5.441601,1.672723,-4.307149,-5.529692,7.034336,-9.227982,-8.483058,-1.577413,-9.624559,8.483019,0.335400],[-8.232446,3.199285,6.159294,2.009381,-8.642553,1.018076,0.284855,6.301151,-5.585979,0.913773,0.464833,-3.991042,-8.822915,4.350286,6.920996,-7.299759],[-6.911791,1.523710,-6.243000,-7.079965,-7.802697,-1.209842,0.973136,9.293678,5.078221,-3.635694,-8.367697,-5.335356,-5.944697,2.354127,9.260986,1.791040],[4.142598,1.440624,2.373995,-9.465454,3.193454,9.668037,9.673983,-2.019266,1.107092,0.937667,-6.257397,-6.387465,7.379778,-4.811994,-7.236803,-4.730142]],[[-5.702218,2.622816,0.664978,5.035869,-0.885411,9.371796,3.241778,-9.937028,5.278191,7.956094,-1.944271,-0.906254,2.154865,-3.572699,-0.194002,7.098380],[-1.315712,-2.012709,3.407290,-9.651207,-0.765903,8.701595,3.663791,6.094022,4.120691,-0.593556,-8.685419,5.880609,1.153134,2.032211,-5.213624,3.660401],[1.418994,-4.905932,1.273673,1.760872,-2.147554,-1.391546,-2.293319,-1.437153,-5.354267,1.654858,0.976170,-5.789629,-0.618903,-2.821665,-5.848792,4.592871],[8.424249,-3.770234,-9.868934,7.181305,-7.116303,9.731039,8.281010,-2.649275,-5.256746,-8.113993,-2.902729,0.248125,7.889585,3.133740,1.359074,8.840005]],[[-8.133940,8.085904,6.506607,-2.512297,-7.683655,9.206542,0.133625,1.353404,0.011621,-5.532733,-7.520146,6.371665,2.803881,-5.257163,9.492507,-9.368056],[9.142604,1.152880,-9.137734,1.059024,8.746768,-0.680681,-8.570312,-3.822196,4.370181,-5.394529,-0.261235,8.569586,-3.601768,-9.080987,-6.997773,-2.463800],[2.138994,-5.179614,8.653036,-8.873893,-2.058102,3.373898,8.983210,6.644370,-8.682343,-2.003557,6.015836,3.160335,6.368109,9.972187,-1.643354,-3.554773],[9.861452,0.841382,-2.421638,8.683561,-4.041114,5.413357,5.590302,-7.958050,-7.791449,-4.046557,9.535229,-3.270680,-2.488791,-9.516651,1.113350,-9.032854]],[[0.267124,3.618977,9.800005,6.825965,8.602886,0.931714,2.707940,4.391256,5.877580,3.691232,8.655580,8.239360,6.855474,-6.815306,-1.061328,-2.746078],[-8.183391,3.855079,-0.058252,0.968022,-5.313949,-6.324646,-0.397696,4.634928,-5.696750,-1.619815,-5.543145,6.172350,3.183288,-9.146906,-9.696844,-3.922060],[-5.524400,-9.354916,-9.951481,3.584003,6.815682,-9.046791,3.024792,1.576085,-8.134317,8.912359,5.908142,-1.880340,-4.710995,2.890389,6.795292,7.395133],[0.938035,7.502327,8.221484,-1.230359,-3.776367,-0.396710,4.807964,8.454993,-5.643308,-7.142184,2.520702,-3.284278,-4.818313,-1.139295,9.632723,6.652190]],[[-6.271824,-8.264879,2.911245,-6.799708,4.776269,1.969086,-0.710153,-4.175713,6.211301,-5.100486,-1.851581,-2.950523,-2.091943,-3.615349,-0.351741,7.565142],[-2.338038,-5.665069,-8.148383,-7.065842,-4.613579,-9.487775,-0.478589,2.279651,-4.264698,1.716731,-7.389260,5.609585,-8.952194,0.275865,9.435052,9.022516],[-9.444157,-5.056758,-0.963088,3.534131,-1.521159,7.478897,-6.589892,6.443650,0.626124,8.216827,-2.766315,-9.671689,3.935004,-9.753051,-6.147068,-3.658180],[8.079461,-8.718152,1.052604,-3.337207,1.798603,4.825645,-8.569407,-2.610898,9.774824,-4.955005,-7.026904,-3.370780,-0.013360,0.906757,6.585558,8.517062]],[[-7.299810,-3.080751,6.063975,9.256162,3.184474,3.332811,0.709857,7.758087,3.809584,9.413937,-4.443188,6.598405,-5.228175,-1.416033,1.664544,-5.682614],[5.187122,7.709782,-7.528158,1.639828,8.993536,9.898640,7.546581,2.796991,-3.895125,-7.837495,5.725962,7.179366,-6.685159,4.691571,-2.344409,1.252979],[-7.175813,-8.969318,-7.928724,-3.290907,-2.771883,-0.993730,-4.240818,4.162971,-6.575214,-4.525833,8.959673,0.030455,3.884474,8.448394,3.883012,1.063280],[-4.003048,-4.878850,1.430076,-6.621590,-6.394077,0.178165,5.593591,-7.408447,7.024135,5.636297,-9.979845,-1.903030,5.918888,2.884204,8.612658,-6.649126]],[[5.206267,-9.515587,-3.436519,-4.172087,6.786100,5.886873,-7.217164,0.283998,-4.684899,7.203456,2.560360,-3.964355,0.330052,3.273278,-1.377912,-6.390474],[-9.575500,4.156480,-3.327432,-3.480951,4.993930,-9.659260,7.762479,9.268435,-5.805547,-3.230904,1.270970,-7.689705,0.972347,9.257661,5.801933,9.237534],[-8.862537,-7.487184,-4.802484,-0.606124,6.949486,-2.119899,-4.095929,-6.809097,-4.993220,8.949596,-4.277517,-6.713971,3.155240,1.693541,-5.403829,4.743094],[4.220771,8.384400,-7.419070,-1.106635,-5.152670,-0.750699,-2.175273,2.380871,5.953596,-6.013962,-4.134008,7.788006,-9.768440,-2.644099,1.237774,9.176395]],[[-8.593487,7.991277,0.441697,-5.073741,-1.915651,-1.469796,2.455435,2.112184,-0.375495,-0.180760,-9.533533,0.486158,8.638670,0.531447,6.836166,0.180052],[8.565531,-3.139832,-2.204672,-8.145291,5.744526,-4.030794,-1.672187,4.642411,0.108746,3.258291,-2.191940,5.435350,3.112607,-1.697104,3.308229,-0.737373],[-1.184697,4.857508,5.225785,7.396695,9.944420,7.257662,0.870026,-1.630691,4.099946,4.151121,-6.748769,1.299088,4.948111,-0.112608,9.781236,-1.878358],[4.163009,4.740845,5.023904,1.282392,-5.478137,8.011460,-5.774750,-3.742719,4.997044,7.279374,-1.140778,2.651983,-8.495170,5.261307,-2.848106,-1.459956]],[[2.985988,-2.303476,-3.234250,6.636133,1.351641,2.078906,3.692154,6.081713,3.850791,-1.839980,6.698865,2.515541,-5.674483,9.403185,-7.269656,-9.312231],[8.776451,9.552968,2.529039,-4.623713,2.500730,-6.185371,-9.544799,4.078876,-9.626501,4.808868,-7.306362,5.713097,3.856083,1.657371,-5.586566,-6.957837],[0.188811,-4.742885,-6.008666,3.920450,-3.057024,-0.281169,9.334008,-9.017488,-8.514091,3.017618,-6.336444,5.691636,7.469017,-5.093313,-5.023405,-5.665424],[-5.189688,-3.629992,3.662263,-2.435988,1.228648,-4.843879,-9.212410,-3.362748,3.033543,4.374498,1.604674,6.447793,-2.495061,-3.208155,-9.315421,-1.672568]],[[2.368559,-7.652533,-0.937105,-3.729706,7.196870,-1.023274,9.880705,-8.887659,-6.442175,7.575752,-7.722913,-1.148154,-6.014561,-7.915442,5.591098,1.230774],[3.824557,-5.257574,-1.248494,-0.725298,1.669193,1.592765,3.720406,6.677548,-0.836869,7.135618,-2.064798,7.240577,5.716980,9.983410,-1.759598,9.078126],[-6.008109,7.118259,1.963347,0.623725,-2.268943,1.275949,-6.062417,2.896199,2.366937,-0.370744,-6.276964,-4.193056,4.151922,4.600056,-7.167264,4.609749],[-7.459266,5.984997,-2.667052,-0.515910,-2.459000,8.520904,5.608837,5.062066,9.643933,-8.987631,4.418181,7.197415,-6.541781,-8.425664,-8.878024,-5.564633]],[[-2.085834,-9.360625,-6.430825,4.566343,-8.029138,5.301995,6.510217,3.171159,-6.470679,-1.507157,-8.682594,-5.869179,-1.970654,-9.280642,6.226246,9.520032],[-5.664858,-7.773576,0.275085,3.112708,-5.742696,2.498879,2.645855,3.428346,-5.999245,1.339642,7.980431,6.674402,-5.716540,-7.489652,-1.761175,1.228628],[6.441251,5.425628,2.783572,4.696771,-6.455514,2.218286,9.004539,9.435131,2.107015,-4.480038,5.990102,-3.713190,6.416591,0.823094,9.873244,1.486182],[-2.422197,9.465055,0.901602,-5.967220,3.098226,-9.494298,-7.333811,-4.118146,-9.239424,-6.270190,-3.760499,-7.041196,-3.405860,-2.940429,-1.737029,-7.066880]],[[-2.298175,7.696887,-2.440023,7.318785,3.116529,-2.599780,-2.401958,1.051537,-1.566822,-3.033582,1.353572,-3.625065,-9.743066,2.615094,-7.810466,3.077478],[1.638087,3.663610,-5.839429,6.669515,-5.222285,7.096134,-9.367056,2.345092,9.288053,3.644746,-6.529545,-2.161718,-7.087786,-4.390874,5.786011,-2.908489],[-0.999449,8.006642,-7.363657,-5.554396,-2.067135,5.531152,0.936651,0.589401,-9.854247,2.520081,3.594329,7.427118,0.154609,-5.328079,-0.929139,9.134203],[-0.573515,6.363136,2.786132,5.496539,-7.146822,-4.295924,-5.333788,-4.093167,-3.964549,0.613053,1.822267,-3.341706,-1.375259,4.167665,2.174494,8.698553]],[[3.899994,-9.340350,5.506190,3.156358,8.441799,3.399453,6.868605,-2.386883,4.738524,2.932830,9.875169,1.005282,0.352197,-3.078699,0.608795,-0.546686],[-1.286621,1.643685,5.215912,5.298726,-0.526021,-8.316101,-7.220183,7.865322,-0.607416,-1.138104,-9.116021,-0.843434,2.551189,-2.318892,-4.903984,0.599846],[-0.112377,-5.236251,9.863331,-6.357229,-6.708365,-6.868878,9.777058,-7.555135,-8.010109,3.500047,-9.315548,-8.478085,-7.446392,-2.142601,-3.382959,-4.158432],[-2.419056,-5.804502,-8.568604,2.850345,7.027929,-0.590453,-6.591680,-5.523408,8.084053,5.519042,3.475351,5.549817,0.260426,1.126854,-4.179718,-0.241827]],[[-1.787263,-1.665428,2.399800,-5.700505,6.446994,3.651059,0.109075,6.998841,-2.588732,0.792191,-6.845356,3.599470,-6.616346,4.560974,-6.676383,-7.188077],[-7.626708,-8.516028,-9.507319,-9.070065,4.287559,5.599810,-0.908974,3.735716,-1.056903,-2.614007,-3.395004,-4.138921,-8.314266,1.559023,5.905062,-6.925506],[-3.147199,8.306053,1.591867,2.284655,7.969951,0.363061,8.338204,-1.534432,9.855616,-8.782513,1.936137,5.746799,9.972682,-8.032585,-8.309288,-7.749153],[7.692365,9.612786,-4.947116,3.220059,-1.870411,6.902307,-0.579653,5.262647,-1.375319,9.916974,-8.689781,-7.550545,2.628613,-5.522050,2.418629,-5.088068]],[[-9.679442,5.278177,-5.629014,-2.333735,4.802503,-4.445666,-9.987539,-8.404447,-4.063362,-5.204744,-5.839276,-4.103120,0.436049,4.839313,3.878920,-0.565362],[1.845529,-9.151906,-5.757864,-1.355152,-7.908065,1.130863,-7.707834,-8.554447,5.479658,0.809792,0.535774,4.662120,-6.880091,3.195489,2.379256,0.032004],[2.059966,-4.400717,9.491657,5.116830,-7.267360,-4.042917,-3.560609,6.884935,5.475996,8.006153,-4.964094,8.234623,5.668995,-5.404373,-6.566542,-6.647448],[-0.923861,-3.058345,0.282910,2.755885,-9.156913,0.894733,-2.332729,5.079565,6.219303,-3.875062,8.183859,3.765323,-8.011632,1.135532,7.533020,-4.918274]]], dtype = "float64")#candidate|4282|(16, 4, 16)|const|float64
uop_4283 = relay.asinh(const_4282.astype('float64')) # shape=(16, 4, 16)
output = uop_4283
output2 = uop_4283
func_4293 = relay.Function([], output)
mod['func_4293'] = func_4293
mod = relay.transform.InferType()(mod)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4293_call = mutated_mod.get_global_var('func_4293')
call_4294 = func_4293_call()
output = call_4294
func_4295 = relay.Function([], output)
mutated_mod['func_4295'] = func_4295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_4389 = relay.TupleGetItem(func_3675_call(), 1)
call_4390 = relay.TupleGetItem(func_3677_call(), 1)
output = relay.Tuple([call_4389,])
output2 = relay.Tuple([call_4390,])
func_4402 = relay.Function([], output)
mod['func_4402'] = func_4402
mod = relay.transform.InferType()(mod)
output = func_4402()
func_4403 = relay.Function([], output)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_4431 = relay.TupleGetItem(func_3278_call(), 0)
call_4432 = relay.TupleGetItem(func_3279_call(), 0)
func_4010_call = mod.get_global_var('func_4010')
func_4011_call = mutated_mod.get_global_var('func_4011')
call_4439 = relay.TupleGetItem(func_4010_call(), 1)
call_4440 = relay.TupleGetItem(func_4011_call(), 1)
func_527_call = mod.get_global_var('func_527')
func_532_call = mutated_mod.get_global_var('func_532')
const_4449 = relay.const([2,-3,-5,10,-5,-1,7,9,-1,1,-9,9,-4,-8,-2,-8,8,5,-2,-1,3,7,4,-5,-1,8,7,-10,8,-9,4,5,7,-5,-7,4,-10,10,-9,7,-1,9,-4,-10,8,5,7,4,-9,2,7,6,9,1,2,9,5,-3,9,-3,5,1,-7,-5,-5,-2,3,2,-5,1,1,3,7,6,1,5,7,-9,10,-3,-1,9,-3,5,2,-7,5,10,8,-10,-5,-7,10,7,10,-8,4,-6,-6,9,8,-4,8,4,10,-4,-8,7,9,-1,3,1,-5,-8,-7,-3,-3,-7,-1,-6,7,-5,-3,5,6,2,-5,9,-7,3,4,-10,-4,-7,-9,5,-2,-3,1,-6,5,-8,-10,-10,-6,2,2,-4,-8,9,-3,-5,5,10,5,-2,-4,1,-9,-1,-8,2,7,-4,8,-4,10,-6,7,-10,3,-5,4,1,10,6,-8,-8,6,-10,9,-5,-3,-5,-6,5,9,-6,-5,-6,-2,-3,-3,-5,-4,3,-1,2,9,6,-2,-5,-8,-4,10,10,-4,-2,3,-6,-2,-8,-9,-7,-6,4,-4,9,-9,-7,-2,-1,-7,3,-8,-6,-2,-5,3,-9,-7,-8,-3,-2,-7,3,3,8,-7,-1,4,7,-10,-6,6,-3,-10,1,8,-6,-2,6,3,7,-7,-6,4,6,6,8,-7,3,3,-1,-9,8,7,7,10,-9,10,9,-9,-9,-4,8,-9,-1,9,7,-10,-7,1,-7,6,9,3,2,-10,8,-8,-7,1,3,-7,-6,-5,4,-7,-6,-6,8,2,3,1,-8,-10,-9,-1,1,-5,7,-9,6,1,-8,-9,-8,8,-3,-5,-1,-5,7,5,8,-4,9,-5,9,7,4,-8,6,-4,-9,1,-5,2,-4,10,6,8,-7,-8,-10,-8,2,-9,-3,7,-3,2,7,-9,-9,-5,-1,10,-8,6,5,4,-9,-6,-5,2,3,5,-8,-3,1,3,2,2,4,-8,2,-8,5,3,7,8,-1,-10,-7,-9,-2,2,8,4,2,2,-5,4,4,-10,5,1,-10,7,5,-6,10,2,10,1,9,-7,-6,6,10,-3,3,1,6,-1,-5,9,-2,5,-9,5,2,4,-3,-9,6,8,-5,-3,10,-3,10,2,5,6,-6,1,3,7,8,10,8,-5,10,6,-3,-5,-3,7,-4,3,3,9,1,-5,2,3,5,4,8,-3,9,4,-5,-1,3,1,7,-4,-6,9,4,1,-2,3,3,10,6,-5,4,-1,9,3,-2,6,5,9,9,-7,2,-10,-9,-8,-4,-5,-8,-7,8,5,-6,9,8,1,5,8,-1,4,-9,-3,5,5,-6,-4,-2,-4,2,10,-9,-7,10,-4,4,-10,-10,9,-3,-1,-7,-3,6,7,-1,7,-9,-6,2,9,8,10,-2,-5,5,6,-3,-9,4,-6,-5,5,-7,-3,3,-4,3,10,5,2,3,2,-5,-4,8,-4,-1,7,3,7,-1,-6,-7,2,2,-3,-10,-1,-5,5,-3,4,-1,-3,10,10,-3,8,3,-3,3,-1,1,9,-5,7,5,-3,4,-9,-6,-10,5,8,-7,4,6,-3,5,1,6,9,1,6,-8,2,3,-10,9,8,-8,5,8,-1,2,7,9,-1,-8,8,3,-9,-1,7,-6,7,9,-9,2,2,-9,-3,-4,3,-1,-9,2,-3,6,6,-4,7,-4,2,4,9,-2,-6,-7,10,1,-2,-7,9,-4,-3,-5,-2,7,-5,8,6,8,-10,-2,-3,-2,-7,10,10,8,-2,6,-2,-10,5,2,-9,5,5,2,2,5,-10,-5,6,-6,6,2,4,-6,-1,-10,1,2,5,-6,-7,-6,3,-9,-5,-9,6,9,-5,-9,-5,7,-8,-2,4,-10,8,-7,-7,1,-1,3,2,-7,8,3,9,-9,-10,10,10,4,7,-10,8,-8,-2,4,4,-10,1,4,-5,7,-6,9,8,-6,5,-1,5,-9,2,-10,-9,7,-6,-10,-5,-8,3,-9,-1,7,-8,8,-10,2,-2,-6,-7,-1,-5,-5,5,3,1,10,-6,-9,-5,-2,5,7,-8,-10,-8,-7,-1,5,-6,-7,-2,-2,-4,-7,-9,4,-2,-3,3,-5,-6,4,-7,-7,-7,1,-1,-10,-3,4,5,-7,-8,-7,-4,4,5,7,-6,4,-9,5,-7,5,-3,3,6,2,10,6,2,-4,-7,6,7,7,4,-6,-8,-2,-7,-8,6,-6,1,-10,10,-7,-5,10,-2,8,10,8,2,-10,6,-3,-10,-9,-10,2,-3,7,-2,9,-6,2,8,6,2,2,-4,2,-1,2,2,-1,3,-2,-7,-10,6,8,4,8,8,3,3,5,-8,7,-3,2,8,-10,3,-7,4,6,7,-3,4,-10,-3,4,4,-9,2,2,5,5,5,-8,-7,-6,-6,1,7,8,-6,9,-4,8,8,-5,5,-1,-4,-9,3,7,-4,-1,10,9,2,8,6,9,6,-9,6,9,-10,2,4,5,6,9,5,-1,-7,2,-5,-7,7,-1,-5,2,1,-9,3,-2,-9,-4,10,1,6,-9,4,-1,-2,-1,-5,2,-9,10,4,1,-3,-6,-2,-10,-10,-1,-7,-3,-7,5,1,7,-8,-2,-8,-4,9,6,8,-2,-7,3,7,2,-4,5,6,-5,-6,-7,-1,-5,-2,4,7,10,-8,9,-3,-9,-7,4,4,-8,-8,7,5,-2,5,8,-1,-7,5,4,6,-7,-8,8,10,-6,-10,-10,7,3,7,5,4,-6,-7,-7,6,7,2,-7,1,3,-6,-8,6,-6,-7,-10,2,-9,8,3,-9,7,-8,-8,-8,10], dtype = "int16")#candidate|4449|(1080,)|const|int16
var_4450 = relay.var("var_4450", dtype = "float32", shape = (60,))#candidate|4450|(60,)|var|float32
var_4451 = relay.var("var_4451", dtype = "int32", shape = (252,))#candidate|4451|(252,)|var|int32
call_4448 = relay.TupleGetItem(func_527_call(relay.reshape(const_4449.astype('int16'), [12, 15, 6]), relay.reshape(const_4449.astype('int16'), [12, 15, 6]), relay.reshape(var_4450.astype('float32'), [60,]), relay.reshape(var_4451.astype('int32'), [252,]), ), 2)
call_4452 = relay.TupleGetItem(func_532_call(relay.reshape(const_4449.astype('int16'), [12, 15, 6]), relay.reshape(const_4449.astype('int16'), [12, 15, 6]), relay.reshape(var_4450.astype('float32'), [60,]), relay.reshape(var_4451.astype('int32'), [252,]), ), 2)
output = relay.Tuple([call_4431,call_4439,call_4448,const_4449,var_4450,var_4451,])
output2 = relay.Tuple([call_4432,call_4440,call_4452,const_4449,var_4450,var_4451,])
func_4462 = relay.Function([var_4450,var_4451,], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
mutated_mod['func_4462'] = func_4462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4462_call = mutated_mod.get_global_var('func_4462')
var_4464 = relay.var("var_4464", dtype = "float32", shape = (60,))#candidate|4464|(60,)|var|float32
var_4465 = relay.var("var_4465", dtype = "int32", shape = (252,))#candidate|4465|(252,)|var|int32
call_4463 = func_4462_call(var_4464,var_4465,)
output = call_4463
func_4466 = relay.Function([var_4464,var_4465,], output)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4509 = relay.TupleGetItem(func_3857_call(), 0)
call_4510 = relay.TupleGetItem(func_3859_call(), 0)
output = call_4509
output2 = call_4510
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
output = func_4514()
func_4515 = relay.Function([], output)
mutated_mod['func_4515'] = func_4515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3965_call = mod.get_global_var('func_3965')
func_3966_call = mutated_mod.get_global_var('func_3966')
call_4559 = func_3965_call()
call_4560 = func_3965_call()
output = relay.Tuple([call_4559,])
output2 = relay.Tuple([call_4560,])
func_4587 = relay.Function([], output)
mod['func_4587'] = func_4587
mod = relay.transform.InferType()(mod)
output = func_4587()
func_4588 = relay.Function([], output)
mutated_mod['func_4588'] = func_4588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4614 = relay.TupleGetItem(func_3291_call(), 0)
call_4615 = relay.TupleGetItem(func_3292_call(), 0)
output = relay.Tuple([call_4614,])
output2 = relay.Tuple([call_4615,])
func_4630 = relay.Function([], output)
mod['func_4630'] = func_4630
mod = relay.transform.InferType()(mod)
output = func_4630()
func_4631 = relay.Function([], output)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3965_call = mod.get_global_var('func_3965')
func_3966_call = mutated_mod.get_global_var('func_3966')
call_4644 = func_3965_call()
call_4645 = func_3965_call()
output = call_4644
output2 = call_4645
func_4650 = relay.Function([], output)
mod['func_4650'] = func_4650
mod = relay.transform.InferType()(mod)
output = func_4650()
func_4651 = relay.Function([], output)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4652 = relay.var("var_4652", dtype = "float64", shape = (12, 9, 9))#candidate|4652|(12, 9, 9)|var|float64
uop_4653 = relay.cosh(var_4652.astype('float64')) # shape=(12, 9, 9)
output = relay.Tuple([uop_4653,])
output2 = relay.Tuple([uop_4653,])
func_4667 = relay.Function([var_4652,], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4668 = relay.var("var_4668", dtype = "float64", shape = (12, 9, 9))#candidate|4668|(12, 9, 9)|var|float64
func_4667_call = mutated_mod.get_global_var('func_4667')
call_4669 = func_4667_call(var_4668)
output = call_4669
func_4670 = relay.Function([var_4668], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4672 = relay.var("var_4672", dtype = "int8", shape = (14, 4, 2))#candidate|4672|(14, 4, 2)|var|int8
var_4673 = relay.var("var_4673", dtype = "int8", shape = (14, 4, 2))#candidate|4673|(14, 4, 2)|var|int8
bop_4674 = relay.minimum(var_4672.astype('int8'), relay.reshape(var_4673.astype('int8'), relay.shape_of(var_4672))) # shape=(14, 4, 2)
func_1522_call = mod.get_global_var('func_1522')
func_1524_call = mutated_mod.get_global_var('func_1524')
var_4682 = relay.var("var_4682", dtype = "float64", shape = (240,))#candidate|4682|(240,)|var|float64
call_4681 = func_1522_call(relay.reshape(var_4682.astype('float64'), [8, 10, 3]))
call_4683 = func_1522_call(relay.reshape(var_4682.astype('float64'), [8, 10, 3]))
output = relay.Tuple([bop_4674,call_4681,var_4682,])
output2 = relay.Tuple([bop_4674,call_4683,var_4682,])
func_4684 = relay.Function([var_4672,var_4673,var_4682,], output)
mod['func_4684'] = func_4684
mod = relay.transform.InferType()(mod)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mutated_mod.get_global_var('func_4684')
var_4686 = relay.var("var_4686", dtype = "int8", shape = (14, 4, 2))#candidate|4686|(14, 4, 2)|var|int8
var_4687 = relay.var("var_4687", dtype = "int8", shape = (14, 4, 2))#candidate|4687|(14, 4, 2)|var|int8
var_4688 = relay.var("var_4688", dtype = "float64", shape = (240,))#candidate|4688|(240,)|var|float64
call_4685 = func_4684_call(var_4686,var_4687,var_4688,)
output = call_4685
func_4689 = relay.Function([var_4686,var_4687,var_4688,], output)
mutated_mod['func_4689'] = func_4689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "float32", shape = (6, 14, 16))#candidate|4736|(6, 14, 16)|var|float32
uop_4737 = relay.asinh(var_4736.astype('float32')) # shape=(6, 14, 16)
output = relay.Tuple([uop_4737,])
output2 = relay.Tuple([uop_4737,])
func_4739 = relay.Function([var_4736,], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4740 = relay.var("var_4740", dtype = "float32", shape = (6, 14, 16))#candidate|4740|(6, 14, 16)|var|float32
func_4739_call = mutated_mod.get_global_var('func_4739')
call_4741 = func_4739_call(var_4740)
output = call_4741
func_4742 = relay.Function([var_4740], output)
mutated_mod['func_4742'] = func_4742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4776 = relay.var("var_4776", dtype = "float32", shape = (12, 16, 1))#candidate|4776|(12, 16, 1)|var|float32
uop_4777 = relay.sin(var_4776.astype('float32')) # shape=(12, 16, 1)
output = uop_4777
output2 = uop_4777
func_4788 = relay.Function([var_4776,], output)
mod['func_4788'] = func_4788
mod = relay.transform.InferType()(mod)
mutated_mod['func_4788'] = func_4788
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4789 = relay.var("var_4789", dtype = "float32", shape = (12, 16, 1))#candidate|4789|(12, 16, 1)|var|float32
func_4788_call = mutated_mod.get_global_var('func_4788')
call_4790 = func_4788_call(var_4789)
output = call_4790
func_4791 = relay.Function([var_4789], output)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4989 = relay.TupleGetItem(func_3291_call(), 0)
call_4990 = relay.TupleGetItem(func_3292_call(), 0)
func_4587_call = mod.get_global_var('func_4587')
func_4588_call = mutated_mod.get_global_var('func_4588')
call_4999 = relay.TupleGetItem(func_4587_call(), 0)
call_5000 = relay.TupleGetItem(func_4588_call(), 0)
output = relay.Tuple([call_4989,call_4999,])
output2 = relay.Tuple([call_4990,call_5000,])
func_5004 = relay.Function([], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
output = func_5004()
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_5014 = relay.TupleGetItem(func_4270_call(), 0)
call_5015 = relay.TupleGetItem(func_4272_call(), 0)
output = call_5014
output2 = call_5015
func_5019 = relay.Function([], output)
mod['func_5019'] = func_5019
mod = relay.transform.InferType()(mod)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5019_call = mutated_mod.get_global_var('func_5019')
call_5020 = func_5019_call()
output = call_5020
func_5021 = relay.Function([], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4630_call = mod.get_global_var('func_4630')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_5204 = relay.TupleGetItem(func_4630_call(), 0)
call_5205 = relay.TupleGetItem(func_4631_call(), 0)
uop_5206 = relay.erf(call_5204.astype('float64')) # shape=(12, 2, 13)
uop_5208 = relay.erf(call_5205.astype('float64')) # shape=(12, 2, 13)
output = uop_5206
output2 = uop_5208
func_5210 = relay.Function([], output)
mod['func_5210'] = func_5210
mod = relay.transform.InferType()(mod)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5210_call = mutated_mod.get_global_var('func_5210')
call_5211 = func_5210_call()
output = call_5211
func_5212 = relay.Function([], output)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5230 = relay.const(-5.895830, dtype = "float64")#candidate|5230|()|const|float64
var_5231 = relay.var("var_5231", dtype = "float64", shape = (2, 16, 4))#candidate|5231|(2, 16, 4)|var|float64
bop_5232 = relay.maximum(const_5230.astype('float64'), var_5231.astype('float64')) # shape=(2, 16, 4)
bop_5235 = relay.multiply(var_5231.astype('float32'), relay.reshape(bop_5232.astype('float32'), relay.shape_of(var_5231))) # shape=(2, 16, 4)
output = bop_5235
output2 = bop_5235
func_5239 = relay.Function([var_5231,], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5240 = relay.var("var_5240", dtype = "float64", shape = (2, 16, 4))#candidate|5240|(2, 16, 4)|var|float64
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5241 = func_5239_call(var_5240)
output = call_5241
func_5242 = relay.Function([var_5240], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5277 = relay.var("var_5277", dtype = "float32", shape = (2, 14, 12))#candidate|5277|(2, 14, 12)|var|float32
uop_5278 = relay.sigmoid(var_5277.astype('float32')) # shape=(2, 14, 12)
output = relay.Tuple([uop_5278,])
output2 = relay.Tuple([uop_5278,])
func_5296 = relay.Function([var_5277,], output)
mod['func_5296'] = func_5296
mod = relay.transform.InferType()(mod)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5297 = relay.var("var_5297", dtype = "float32", shape = (2, 14, 12))#candidate|5297|(2, 14, 12)|var|float32
func_5296_call = mutated_mod.get_global_var('func_5296')
call_5298 = func_5296_call(var_5297)
output = call_5298
func_5299 = relay.Function([var_5297], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5303 = relay.var("var_5303", dtype = "int8", shape = (5, 9, 5))#candidate|5303|(5, 9, 5)|var|int8
var_5304 = relay.var("var_5304", dtype = "int8", shape = (5, 9, 5))#candidate|5304|(5, 9, 5)|var|int8
bop_5305 = relay.equal(var_5303.astype('bool'), relay.reshape(var_5304.astype('bool'), relay.shape_of(var_5303))) # shape=(5, 9, 5)
func_932_call = mod.get_global_var('func_932')
func_936_call = mutated_mod.get_global_var('func_936')
var_5327 = relay.var("var_5327", dtype = "float64", shape = (182,))#candidate|5327|(182,)|var|float64
var_5328 = relay.var("var_5328", dtype = "float64", shape = (2080,))#candidate|5328|(2080,)|var|float64
call_5326 = relay.TupleGetItem(func_932_call(relay.reshape(var_5327.astype('float64'), [1, 14, 13]), relay.reshape(var_5328.astype('float64'), [2080,]), ), 0)
call_5329 = relay.TupleGetItem(func_936_call(relay.reshape(var_5327.astype('float64'), [1, 14, 13]), relay.reshape(var_5328.astype('float64'), [2080,]), ), 0)
uop_5340 = relay.cos(bop_5305.astype('float64')) # shape=(5, 9, 5)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5343 = relay.TupleGetItem(func_5004_call(), 1)
call_5344 = relay.TupleGetItem(func_5005_call(), 1)
const_5347 = relay.const([[[-4.344140,8.050519,-9.997685,0.021687,5.868141],[-0.452202,9.484503,0.953797,-3.290226,-8.143595],[-9.325609,5.555290,9.033342,-9.182012,4.676604],[-8.947737,-7.317734,-3.732466,3.368042,-2.427695],[-7.370545,-3.756686,6.757539,6.926866,-2.384803],[-1.058067,5.716011,7.393282,4.384798,-1.699373],[4.467963,-9.314760,-2.942909,-8.313927,-6.312045],[-6.508427,1.176891,7.622451,5.443274,-6.368124],[-6.885273,-9.658746,8.049745,-1.094766,9.053052]],[[4.853397,-1.726767,-4.086857,-4.109911,-4.942472],[-3.671314,3.631378,3.902985,-6.579924,9.669103],[-1.932215,6.033584,-6.659416,-6.361133,7.281094],[9.753909,-0.702581,-7.193254,-4.571879,5.821170],[-7.763844,8.471876,-6.667947,-2.663692,9.695857],[1.404518,8.442672,-8.353393,6.012691,7.310319],[-5.828892,3.814332,-4.421561,-9.965690,-3.695913],[3.412225,2.487965,-7.602331,9.541565,-1.006547],[5.503689,-5.768893,-5.172407,-2.350088,5.593395]],[[7.019921,-7.362476,-0.721037,-5.019698,8.363521],[-5.367392,0.647368,9.256381,4.760313,-6.992783],[-1.387503,-0.582252,5.355652,0.617190,-5.760291],[8.715611,3.254632,4.284048,-1.872593,-2.061388],[-2.274935,-4.447337,-9.144476,-2.841632,-0.001575],[7.340920,-3.004518,8.252377,-1.465365,0.798160],[6.103328,-0.578098,-3.171733,-1.668052,-8.099819],[-1.236233,8.566350,-0.766088,-5.322979,-3.322266],[-4.918031,8.867517,2.139325,-5.160878,-1.423121]],[[-5.260801,-4.992872,-2.700473,-7.242799,6.150478],[9.627568,-1.109055,-1.499391,-3.673702,0.415672],[4.496898,-1.068710,-4.571304,3.022452,9.847440],[-6.046726,6.389679,6.648928,2.867376,-6.574462],[-2.019728,-3.886115,-8.775018,3.334520,4.121192],[9.859751,-5.730489,-8.518021,8.505026,6.182449],[6.983835,3.084986,-0.559377,-1.679509,-9.819545],[-6.632733,-1.937550,2.915238,2.417049,8.936101],[8.724537,7.288267,-7.904125,-7.493399,0.568300]],[[-8.755836,1.650568,2.500899,-1.889452,5.855646],[-5.561667,4.118189,-7.169071,-9.759500,-4.681384],[8.367762,-6.665264,2.043049,-3.363305,8.315279],[-6.146914,-6.338590,3.436927,5.598923,9.379518],[-7.124784,6.629076,-3.251461,3.034465,4.581681],[-4.325353,2.515074,-3.623158,8.121062,5.209128],[-0.255080,-4.207516,1.889633,4.690172,-4.871059],[-9.318431,-6.677925,-0.381318,7.087081,6.677335],[6.661416,1.316832,1.653554,-5.726427,-7.625467]]], dtype = "float64")#candidate|5347|(5, 9, 5)|const|float64
bop_5348 = relay.divide(uop_5340.astype('float64'), relay.reshape(const_5347.astype('float64'), relay.shape_of(uop_5340))) # shape=(5, 9, 5)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_5360 = relay.TupleGetItem(func_3857_call(), 0)
call_5361 = relay.TupleGetItem(func_3859_call(), 0)
output = relay.Tuple([call_5326,var_5327,var_5328,call_5343,bop_5348,call_5360,])
output2 = relay.Tuple([call_5329,var_5327,var_5328,call_5344,bop_5348,call_5361,])
func_5368 = relay.Function([var_5303,var_5304,var_5327,var_5328,], output)
mod['func_5368'] = func_5368
mod = relay.transform.InferType()(mod)
var_5369 = relay.var("var_5369", dtype = "int8", shape = (5, 9, 5))#candidate|5369|(5, 9, 5)|var|int8
var_5370 = relay.var("var_5370", dtype = "int8", shape = (5, 9, 5))#candidate|5370|(5, 9, 5)|var|int8
var_5371 = relay.var("var_5371", dtype = "float64", shape = (182,))#candidate|5371|(182,)|var|float64
var_5372 = relay.var("var_5372", dtype = "float64", shape = (2080,))#candidate|5372|(2080,)|var|float64
output = func_5368(var_5369,var_5370,var_5371,var_5372,)
func_5373 = relay.Function([var_5369,var_5370,var_5371,var_5372,], output)
mutated_mod['func_5373'] = func_5373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_5392 = relay.TupleGetItem(func_3675_call(), 2)
call_5393 = relay.TupleGetItem(func_3677_call(), 2)
func_3796_call = mod.get_global_var('func_3796')
func_3801_call = mutated_mod.get_global_var('func_3801')
const_5399 = relay.const([[-9.041945,9.768822,-4.039152,2.194850,-5.621786,-7.312373,7.737047,-8.659237,6.332835,-0.383521,2.005019,3.584902,-1.481564,-4.952632,-9.346034,-8.339340,-0.254127,7.304344,-8.343411,2.262585,8.880573,8.093452,2.502603,-2.200073,4.179616,-6.181344,-5.582032,-0.335026,-8.164419,1.227336,8.051028,9.471181,-5.910380,-5.919325,-2.159734,0.442213,7.241599,-7.273661,-2.036796,7.050370,-5.176695,-7.379223,-6.356040,1.191938,9.912363,6.014949,-7.497307,-5.004736,7.157670,0.956693,-7.082098,1.031528,-5.007879,-8.981976,-5.833601,-1.253123,-3.584086,6.169776,0.098113,7.407488,-4.534785,7.352401,-6.207279,9.477798,-3.805778,3.331448,2.239204,3.948989,-6.887993,-7.605204,8.200423,3.955132,4.987675,-1.143067,-5.673800,4.133575,-7.079525,3.710396,-1.272881,-8.628077,-0.349692,-7.797004,-1.855590,8.379719,2.469250,8.902582,-1.880897,-6.568035,-2.782430,-3.675476,5.374165,5.665757,3.643505,-2.242699,0.815885,-0.782693,-8.270985,8.200404,-2.424639,0.159408,-2.592098,0.899355,-6.629222,-3.242569,-8.521799,6.625781,-4.239737,-8.861445,1.665233,6.529228,0.350156,-9.473319,-7.707599,0.743926,-7.956022,0.405458,4.055823,8.980552,-2.656926,-4.814947,8.223564,-2.688971,-9.476594,4.854941,2.081776,-8.803214,-4.800008,-2.546208,-8.192333,-6.162761,6.161402,9.775799,-9.546339,-4.033800,-7.362433,7.736745,-9.576100,6.516058,-4.148525,-6.297054,-6.603625,6.531907,-1.575503,4.261131,7.553671,7.415721,4.264672,0.542460,-8.048185,7.825674,3.755784,-7.238817,-3.772896,-4.659709,-2.454224,2.422819,-3.862751,3.228518,-0.675076,4.330529,-9.613014,-6.335639,-6.610729,1.504178,1.721200,8.876665,-4.215918,-6.014136,-7.347700,5.569012,-6.007666,0.087214,9.149492,6.745622,2.656035,2.640350,4.478753,-8.495773,-4.727326,-2.197198,-3.281670,-7.302185,7.201387,1.853306,0.939520,-8.253438,0.555803,-7.608745,1.526584,1.539936,0.426590,-9.089985,-2.110060,-1.483178,8.053425,7.359931,-5.667441,-5.817118,-8.398959,4.256207,-7.526110,8.026780,7.810441,8.227047,7.714203,-9.313821,1.639602,-9.249134,1.518893,-2.334210,3.700564,-8.940776,9.353077,-4.343788,-6.270624,-7.425497,6.340752,5.310943,1.848502,0.469807,1.674552,3.479242,6.943949,-8.801224,-4.677543,9.136792,-9.305971,-9.229030,-3.162514,-9.238993,-6.360265,8.136739,-8.365975,9.864409,9.462910,0.633273,-1.885099,-5.745083,-7.342808,-2.274113,2.636877,-9.345869,2.819082,-9.248582,0.727946,-2.414159,0.117486,-9.164174,-1.678979,8.582867,-5.030285,-9.154553,-2.184580,-8.122195,-0.397558,3.772542,-2.044106,2.255899,-0.537466,7.423524,-4.468238,-6.112186,-1.506485,-4.425298,-7.421577,-6.441006,-7.207126,1.577034,9.551294,5.154798,-2.528619,-7.233779,-3.538382,-0.282736,2.474350,8.730219,8.042001,5.767633,-6.243912,3.500808,9.272097,1.137122,-9.141892,-1.795125,2.671327,9.809631,7.550678,-9.482145,-4.903547,-7.269675,1.879825,7.608384,7.270723,-5.744629,-0.969278,-8.172651,5.604779,4.448386,-7.673147,-5.053012,6.228220,3.070902,4.160837,8.158172,-3.338771,3.964754,7.073098,7.253739,9.249265,-0.433733,8.535327,2.868238]], dtype = "float32")#candidate|5399|(1, 312)|const|float32
var_5400 = relay.var("var_5400", dtype = "float64", shape = (182,))#candidate|5400|(182,)|var|float64
call_5398 = relay.TupleGetItem(func_3796_call(relay.reshape(const_5399.astype('float32'), [12, 2, 13]), relay.reshape(var_5400.astype('float64'), [182,]), relay.reshape(var_5400.astype('float64'), [182,]), relay.reshape(call_5392.astype('int32'), [252,]), ), 3)
call_5401 = relay.TupleGetItem(func_3801_call(relay.reshape(const_5399.astype('float32'), [12, 2, 13]), relay.reshape(var_5400.astype('float64'), [182,]), relay.reshape(var_5400.astype('float64'), [182,]), relay.reshape(call_5392.astype('int32'), [252,]), ), 3)
var_5408 = relay.var("var_5408", dtype = "float64", shape = (182,))#candidate|5408|(182,)|var|float64
bop_5409 = relay.logical_or(var_5400.astype('bool'), relay.reshape(var_5408.astype('bool'), relay.shape_of(var_5400))) # shape=(182,)
output = relay.Tuple([call_5392,call_5398,const_5399,bop_5409,])
output2 = relay.Tuple([call_5393,call_5401,const_5399,bop_5409,])
func_5414 = relay.Function([var_5400,var_5408,], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
var_5415 = relay.var("var_5415", dtype = "float64", shape = (182,))#candidate|5415|(182,)|var|float64
var_5416 = relay.var("var_5416", dtype = "float64", shape = (182,))#candidate|5416|(182,)|var|float64
output = func_5414(var_5415,var_5416,)
func_5417 = relay.Function([var_5415,var_5416,], output)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_5447 = relay.TupleGetItem(func_3278_call(), 0)
call_5448 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([call_5447,])
output2 = relay.Tuple([call_5448,])
func_5455 = relay.Function([], output)
mod['func_5455'] = func_5455
mod = relay.transform.InferType()(mod)
output = func_5455()
func_5456 = relay.Function([], output)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_5460 = relay.TupleGetItem(func_4270_call(), 0)
call_5461 = relay.TupleGetItem(func_4272_call(), 0)
func_4514_call = mod.get_global_var('func_4514')
func_4515_call = mutated_mod.get_global_var('func_4515')
call_5462 = func_4514_call()
call_5463 = func_4514_call()
func_177_call = mod.get_global_var('func_177')
func_181_call = mutated_mod.get_global_var('func_181')
var_5478 = relay.var("var_5478", dtype = "float32", shape = (60,))#candidate|5478|(60,)|var|float32
const_5479 = relay.const([10,5,1,9,-7,-4,-10,10,-6,10,6,-6,2,-8,-5,-6,-10,-10,-1,1,-3,-10,-7,-8,9,10,-8,6,8,-6,8,-9,-7,7,9,5,-2,-5,-7,-4,3,-4,4,10,-4,4,-10,-10,3,2,-7,6,-2,-10,5,7,-8,8,-3,-4,5,-6,-3,10,4,-8,1,-10,-4,-5,-4,7,-5,6,1,2,-9,1,-5,-6,4,-1,7,-9,-4,9,7,2,1,10,7,10,-2,-6,1,-7,-7,2,-4,6,-7,5,-3,10,4,-7,-3,5,-5,4,6,-3,-2,8,9,-3,8,-4,7,-4,3,-2,-8,2,9,-1,7,-7,-10,4,-6,8,7,7,-4,-4,2,-3,-2,-6,-1,3,1,-7,-4,2,10,-6,-4,10,1,6,10,8,4,-1,10,-1,6,4,10,10,10,6,6,-1,-10,4,4,-1,3,3,8,4,1,5,-6,1,10,9,3,-5,-6,-4,1,1,7,-7,8,-10,3,-2,10,-6,-1,8,-4,-7,-4,-3,6,8,7,-2,-1,6,10,3,-1,2,-6,4,-5,-10,-3,1,6,7,-7,10,3,-1,4,-5,-5,-7,-9,-10,-5,3,-3,9,4,-3,-7,10,-9,-7,7,7,10,2,6,-4,-2,9,1,-5,6,-7,-2,-6], dtype = "int32")#candidate|5479|(252,)|const|int32
call_5477 = relay.TupleGetItem(func_177_call(relay.reshape(var_5478.astype('float32'), [2, 15, 2]), relay.reshape(const_5479.astype('int32'), [1, 252]), relay.reshape(var_5478.astype('bool'), [2, 15, 2]), ), 1)
call_5480 = relay.TupleGetItem(func_181_call(relay.reshape(var_5478.astype('float32'), [2, 15, 2]), relay.reshape(const_5479.astype('int32'), [1, 252]), relay.reshape(var_5478.astype('bool'), [2, 15, 2]), ), 1)
uop_5509 = relay.sinh(call_5462.astype('float32')) # shape=(12, 2, 13)
uop_5511 = relay.sinh(call_5463.astype('float32')) # shape=(12, 2, 13)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
const_5514 = relay.const([-6.433794,4.149655,-0.840469,7.013750,-7.502002,1.819756,-1.846246,5.427895,9.532889,-7.786785,5.662074,-6.532971,8.573213,-1.524551,-4.257870,-9.442976,-5.015383,1.362932,5.162376,-9.715753,4.704851,3.086558,-7.596983,-1.616441,-0.155138,-8.505716,8.727043,4.535410,-9.227453,5.287507,-7.596854,-8.175152,-9.192117,-9.358070,-7.910406,4.683407,-1.530117,0.993650,-5.004940,-4.164231,9.761976,-3.231456,8.343464,2.781754,5.165311,9.116576,-2.078964,-2.107145,9.093224,6.307138,0.872147,5.133718,5.314193,1.545142,-1.197859,-3.903517,-0.920647,9.349106,-1.127833,-9.010905,9.714951,-8.121973,6.962092,-0.273784,6.986916,-9.438838,2.094563,-2.354977,5.487377,-8.981334,4.410011,8.576702,6.899972,8.239714,3.582977,-0.049224,0.685313,-1.668984,6.640552,-6.000585,-4.205949,-0.167296,-1.135762,-9.257200,-9.990531,-4.530963,6.162473,6.768464,-6.861857,1.567611,-4.517937,-7.534877,-9.984411,-6.751399,-2.746811,-6.662198,-5.687591,-7.341287,6.984917,-5.679543,2.429637,9.488601,-9.156234,1.531048,7.062703,-8.658155,-1.756433,-1.984280,0.333005,5.412622,1.648351,0.714841,-8.466932,-6.699548,-2.007146,7.715227,2.245382,6.717243,9.639164,-4.384032,1.071597,4.054955,-2.317647,-2.314074,-8.555001,5.392835,1.718761,0.344007,-3.455797,5.669635,-2.718026,-2.277878,1.706641,2.647814,-8.033929,1.425324,-9.022050,-2.986763,-9.427000,5.741411,-4.034282,-8.572641,2.965663,0.318010,-7.642204,-5.014603,6.835722,-4.606929,-7.536498,5.343450,-3.109743,-3.915352,7.421038,4.568782,7.160016,0.694480,5.524391,9.151472,2.689617,-2.607500,6.114862,8.063023,0.022044,6.648559,8.138148,-4.251273,-6.658298,9.834565,1.238843,3.051540,4.421265,-6.616688,3.100044,9.421144,-8.976786,-2.912586,-7.987655,-1.164867,7.136696,-9.141538,7.103056,-8.780696,9.190324,9.764182,-0.295856,-3.788443,3.261848,-5.518568,-1.639096,-9.251684,4.103192,9.141620,-8.099338,2.771292,2.870808,-8.572351,8.593151,-2.111185,-6.518148,8.163925,1.801415,-7.992403,4.102811,4.107747,-8.538447,-6.496954,-8.449781,-1.154705,-6.575237,-8.479331,1.475157,-0.765634,-4.383512,2.534752,-0.482572,4.466862,-9.886726,9.436412,7.325456,-5.644973,-5.560103,4.371248,-1.259851,5.438101,-2.803216,-7.318594,-8.774388,-2.597599,-4.063618,-1.982539,-1.260937,-1.722399,1.176291,-2.361429,-6.618972,1.325019,-9.104890,2.996655,-7.532229,9.728372,-1.641030,-8.448733,-7.955380,7.186390,-1.846568,0.019977,-0.042837,-1.322666,3.386997,-1.711056,5.493723,-5.269253,-6.048495,-2.805147,-3.730145,9.242447,4.251140,-6.134629,-2.155188,-6.443079,1.737663,-4.090057,2.165151,8.448493,9.052242,-1.859159,9.984699,-2.823462,-6.340445,-9.744793,-6.493755,-7.070005,6.170297,6.558688,-2.865945,4.734421,-9.763860,2.630312,-3.371964,-1.306236,-6.098434,-4.999557,-0.167045,-1.941473,9.813610,4.132594,-5.833864,0.817846,-0.731560,-2.066551,6.285240,-4.403091,8.616298,9.239232,0.667256,0.399572,6.093155,1.369735,4.996046,-1.802876,2.722236,-3.480568,0.263988,5.267571,6.597157,4.208827,0.185117,-7.019253,3.123727,-6.986717,2.535506,4.988754,4.717116,-2.833146,-5.112351,7.764838,3.883133,0.487873,-2.597564,-7.685841,-1.165776,-5.981506,-5.922707,-9.259528,-2.699541,-2.924192,3.551954,-5.125357,-3.778528,4.204947,-2.580391,-7.987749,-7.970034,-2.295775,5.761288,-6.750097,-8.793506,3.395534,2.105018,9.575119,7.972780,-2.186498,2.609834,2.043351,9.813776,-1.317591,-0.715246,1.290555,-8.002981,4.267084,8.471322,-3.863220,-9.184935,-6.267300,5.507164,5.257061,9.105389,7.633000,7.653606,-6.817113,8.533304,-5.454090,-3.697012,9.518988,7.740161,-2.593045,-4.499397,4.706287,-6.206488,3.917343,0.447164,-0.893298,-1.240939,9.520699,3.984204,-8.766496,-2.895425,-4.250778,1.209768,9.673785,-6.676731,0.765645,-4.965664,0.155200,-4.208217,7.035672,6.787352,-3.842154,2.874144,6.580232,8.797889,-8.409569,-6.562444,-6.408911,-2.734403,4.499478,1.695816,9.069683,1.738303,1.026807,5.164425,6.114438,-8.469660,-8.148937,5.711169,-0.068943,-9.145032,-3.826053,4.700662,-4.568730,-9.343198,-0.273872,-2.132843,-6.816685,-7.159063,3.600828,-8.453530,7.592337,-8.077822,-6.303252,0.248440,-2.757942,9.425667,4.110384,-9.592673,-0.188399,9.621460,-1.491955,1.778657,1.043963,-8.342814,7.291945,3.099851,-1.916936,5.059573,4.225853,4.615939,-8.125207,-2.909170,-6.362814,8.816881,0.941695,5.275364,-0.065252,-9.586646,8.026793,-2.345871,1.431166,0.776987,5.029807,5.916794,4.339638,-3.231856,3.652454,5.860494,9.696519,9.236986,4.114225,6.427273,8.528838,8.043569,-0.682129,0.040367,5.374402,8.359169,1.993183,9.664541,-2.126742,-9.873821,-4.952508,1.483177,-8.511722,1.422914,3.789069,8.357862,-0.667113,6.969995,-6.382399,6.062033,6.826591,-7.391675,9.138096,-3.717170,-1.430363,8.160327,-0.070774,-1.640436,3.246731,7.455283,-2.767216,8.784257,4.159709,-6.238104,-8.974726,-5.985464,-5.077610,-5.181554,-1.591259,3.713146,-1.790873,-7.920734,1.699045,4.137720,-9.311193,-7.746714,-0.047501,9.795609,-5.614297,6.808758,1.015674,6.172721,7.604650,2.039148,-5.392185,-4.476225,-9.933455,9.881425,2.412568,-0.025257,9.068778,7.445133,4.889058,-9.657080,-5.036149,-1.874170,1.296723,5.281196,9.303475,-1.185466,-6.641320,-6.687982,8.025671,-1.558792,5.572350,-3.334266,8.034788,-2.543520,8.154829,1.633743,-1.740714,8.819524,5.129050,-9.691553,-7.773559,-4.916612,4.830574,8.456110,-0.845321,-0.803197,-7.948744,6.523389,-5.117889,-3.282341,-4.576233,2.306637,6.319566,-2.739204,1.580863,-3.890805,4.493989,-0.210279,8.233838,-2.886088,-0.593366,7.297926,5.464524,-7.171278,-3.819852,2.554236,-3.513503,-8.864731,-2.688737,-8.907582,0.719653,0.171708,8.367796,-3.184467,0.687786,5.177609,1.616847,-5.230000,7.617752,-6.705284,-0.727539,-4.453188,-9.030545,-0.740018,0.079750,-1.340412,7.893297,4.661311,-5.190338,-9.223143,-7.604216,2.725930,-9.832569,9.462728,-8.618218,-9.945659,9.653280,-8.147793,9.398180,-2.200377,8.426431,0.558636,-2.004826,-5.978528,-6.520463,-3.526335,-0.831027,-7.014041,-2.223848,-5.931661,9.471489,8.268487,7.059226,-1.973160,-2.440300,7.862241,-8.237882,4.719431,9.301775,1.641939,-5.869588,5.085499,1.130468,4.334940,6.609109,-4.026427,-3.590001,2.876562,3.390514,-6.387076,0.604663,-8.113003,3.388076,-4.587220,9.579392,-7.686827,-0.303322,-9.709458,-4.107071,0.610591,4.918564,-6.356648,0.538562,0.015277,-4.838201,-2.089414,9.307392,4.316706,-6.608732,0.942799,8.667620,7.836002,8.758293,2.810664,-5.929904,7.846031,-9.488314,8.721500,-6.979510,8.703995,7.570614,-2.837695,-4.530084,3.874538,6.214271,-3.830827,-3.038002,-7.128649,8.989742,5.553937,-4.082365,5.804331,8.793602,-7.817695,9.383066,-5.489185,-0.929672,7.705814,-5.708839,8.524403,9.640259,-6.797676,-7.049248,-3.908322,-0.532451,0.757949,-8.561254,8.587538,3.934972,2.275304,5.918663,2.374890,-9.437909,-0.722838,6.592503,0.547011,5.365267,0.174559,-0.884468,2.349226,5.365497,-5.519436,5.738220,8.538976,4.851303,7.446666,-6.785287,-5.201595,5.305365,0.092940,6.368465,-8.196286,-3.149343,-9.217442,9.591820,6.682526,-9.228209,-0.803374,-0.467707,-3.492183,9.974746,-4.024823,1.963270,-5.475998,-9.846303,8.726304,-9.147383,-6.056994,9.910270,-1.477673,4.924189,-9.364043,3.328310,0.346117,-1.024106,6.296192,-0.184702,-6.166352,9.621370,-1.097869,-1.832574,2.412679,3.618984,-7.589634,-3.507129,5.305120,-7.759057,6.511647,7.738578,2.887348,-0.107873,5.379425,2.958245,-1.454714,-3.311364,-6.621054,7.660952,-4.302504,9.796527,6.032655,9.304637,6.574361,-1.328034,7.446139,-2.072779,-4.332660,2.019550,6.675517,7.872100,5.801624,-8.155179,-9.227640,0.987436,1.278780,4.251945,-9.922833,5.466226,4.383329,-1.972037,6.332989,2.578147,-5.815029,1.271704,5.684325,9.578286,0.737684,-6.575819,3.744671,-8.934549,9.793003,-2.668084,-5.167883,9.553445,1.882547,-4.723284,-8.087999,-0.838728,-5.537320,-1.892586,-8.717398,7.012222,-8.096752,-2.006625,0.900211,-1.815479,-1.957597,7.842492,-9.421753,-0.514079,-0.451306,7.415001,5.732170,2.417315,9.416482,3.799858,-5.102034,8.227533,1.013194,-4.100348,-6.385391,4.731771,1.323911,1.546811,0.294273,-5.757247,-7.418106,6.907601,2.777983,-1.842313,-7.408976,6.274530,-7.251053,8.728120,-6.435320,-2.247972,-1.977653,8.080131,-5.132773,-1.089316,0.551869,-7.503973,-0.460487,9.274545,-4.434203,-8.952347,6.271485,4.770599,7.626691,2.927572,3.740220,-8.613143,1.176342,4.551371,5.927125,-4.609485,-6.399443,-4.710798,-3.193646,2.780396,2.634367,5.286550,7.534335,-7.290055,-0.952615,-4.625224,-3.292134,3.938259,-7.624408,9.467962,-4.347120,-9.748616,-4.070292,5.877047,-1.055353,-0.731254,5.983631,8.042997,-7.480432,2.463208,5.387360,-4.909722,-7.438467,-1.848634,8.166886,-6.049634,7.411897,-2.507744,-3.030866,-0.159889,-7.348872,-9.507707,-2.858042,-2.249976,-1.234514,9.015359,4.746092,9.335842,-1.903275,8.562690,9.793584,6.192510,-0.681507,7.209650,-2.956311,-1.939045,-9.735586,-2.244361,-0.736665,1.646390,-2.750398,-7.899504,1.556419,1.211352,0.285170,5.841933,3.871261,8.232045,-8.105720,-0.770412,-0.347307,-2.925244,2.104695,-9.308672,8.350754,-1.136031,-3.692561,-3.287775,-5.222977,7.626995,-7.163106,3.049122,-5.202509,7.720143,0.744677,8.767369,-4.008534,-8.488461,-5.570519,3.167196,-6.456338,1.995949,3.287928,-8.702177,0.268040,4.207483,-4.329594,7.286957,-6.167337,-9.874032,-5.974739,5.971787,7.874891,0.366851,-3.444646,1.447754,-3.246642,-7.933610,-7.430812,-4.900624,-7.746420,4.370675,-8.419174,4.741336,-5.292186,-0.984285,6.059806,3.022962,1.778046,-6.347737,-7.679212,-3.911014,-5.197721,-8.640113,-3.719079,6.835551,-0.637742,4.432356,0.431786,9.584065,-1.163027,7.105712,-7.728669,-6.175707,3.655442,3.661748,6.446262,-6.801565,-4.223291,-0.451620,4.050055,-3.072149,6.540741,-8.260732,-8.272563,-0.368718,6.639371,0.402881,-1.504964,5.366804,-9.851136,9.435789,9.897694,-5.421269,-1.106179,-8.214699,-4.984364,-9.238057,-9.091960,-7.338122,-6.306914,-2.846947,-0.215281,0.657270,8.667260,-9.968885,-2.924934,0.867105,-4.818679,8.811407,7.281970,-3.024627,-7.747042,6.070006,-3.142066,-3.202639,-7.460542,-0.207193,-2.458327,6.898367,6.845320,6.793360,-1.505120,5.727823,-8.584779,0.283922,-8.019905,4.922516,-5.896092,1.937069,7.097574,-0.032699,-5.054368,-1.636228,-6.871304,9.817763,-4.644177,0.748913,7.790411,1.546559,-9.275967,0.565210,-6.404370,6.873624,1.225783,3.300845,-2.517335,-0.899764,8.235148,2.519904,4.563884,6.588068,-4.957506,-3.488926,1.706180,8.132711,-9.406163,-9.597405,-6.674463,-3.021727,-0.486450,-8.211577,8.623669,-9.701109,3.143963,-0.870286,-9.549591,-7.201038,8.027134,-6.690188,-9.359392,-5.825668,3.240833,-3.448144,-8.906933,0.100710,-7.698231,-3.699313,4.857746,-5.411750,-1.551871,2.482611,-6.969507,5.666672,-5.357359,-4.059038,-5.732324,2.727465,3.294140,9.739012,-9.894181,4.987332,-2.921699,-7.827460,-3.158675,-5.905657,-2.856260,8.681963,-7.213869,-7.339201,-0.896959,9.285933,3.854088,-0.056116,-6.952810,-1.241465,3.202825,-8.359778,9.118899,0.507971,0.806306,5.541904,8.880884,2.163441,4.375257,-2.144069,-3.907296,-7.684407,-3.030916,7.150536,-9.578785,-3.498898,7.229371,2.474477,3.507568,-2.263456,6.918015,-3.879364,-8.487532,-4.424540,2.007357,6.148583,-8.247353,7.923886,3.390060,-8.409962,1.836898,5.920976,6.797395,3.230082,4.931948,5.673620,5.595796,6.780449,3.885914,-9.946581,-1.263501,8.567882,4.466469,4.033975,7.533941,4.112167,-3.375268,0.371875,8.615744,7.430314,-2.387962,7.522441,-2.768292,6.649882,-4.812994,7.973966,1.095897,-8.147976,4.399355,4.050596,9.859881,9.621501,6.159940,4.037853,-4.261888,6.599988,1.797354,-4.168322,7.718760,-1.143217,8.292483,-8.360751,-0.499490,-9.928021,8.852263,-8.703480,-6.097096,-5.444618,-1.956413,-9.026351,-0.835691,4.377762,3.426420,-2.345831,0.834539,-4.663629,-9.216145,4.702017,5.857269,-1.208371,-6.218737,2.631708,2.303779,-4.472204,2.504856,-1.254253,4.943430,-3.916836,0.539138,0.649254,5.021567,-2.170553,9.212132,-8.955173,0.967504,5.629710,8.839061,-9.848961,-2.203332,-3.534270,2.116367,-8.082708,-1.747755,4.546678,0.751850,-7.551350,4.840617,-4.371989,-1.089818,2.614859,2.862774,5.276107,-9.208674,0.743349,7.906206,-4.885901,-7.266141,8.234475,9.809160,8.108325,6.874066,1.579607,-2.455610,3.478492,-8.463594,-1.725376,8.408300,-2.728678,8.558661,1.104275,4.900905,2.665050,-0.783735,-4.819008,-9.334635,-3.088845,4.994309,-1.726820,3.282804,2.069644,-2.415624,3.023618,2.708998,6.167602,-1.690827,7.352148,6.378540,7.055773,8.920105,0.804465,6.949095,-4.796905,-5.487781,-2.445811,-1.253336,8.240827,5.216936,8.262581,6.253086,0.139033,1.468015,4.001088,-6.966397,-5.085028,4.446387,8.084253,8.292448,7.703998,-7.847652,7.623189,0.213325,5.894515,5.275078,-9.207373,-7.695362,-2.866896,-2.796446,-6.751022,9.968813,1.731384,-2.846838,6.018656,-1.962643,8.192269,2.667463,7.179254,-1.777813,9.528203,0.473059,-6.389236,-7.586608,9.653106,-4.028864,0.002253,-9.118940,-7.066202,3.632248,-5.141401,7.643458,-8.466540,-1.231609,0.931880,-6.936057,5.801278,-8.781636,7.651728,-1.085522,-3.981439,-7.935966,-2.152833,-3.049891,-7.656073,4.418640,4.261802,-2.178837,4.770882,2.867493,7.751846,1.362913,-8.179940,-1.744297,-5.291271,-8.048728,-4.528048,-0.647881,-4.357083,9.839261,-1.952908,6.555889,9.308956,1.041011,0.947876,-6.433363,4.666492,8.039683,9.553500,0.219799,-5.873437,-2.172880,4.351684,-6.456552,0.031669,-3.332511,-7.340944,0.669719,4.274878,-9.357765,-7.842325,-2.337829,-7.812662,0.987894,6.621422,-4.915912,-8.066304,-7.753484,7.961980,6.435571,6.590633,6.802128,-4.676147,5.540996,1.182562,-1.003167,-8.600002,9.946503,-6.860938,0.338975,-2.927383,8.578841,-0.675987,-9.906785,-2.582013,8.990104,6.935918,2.418716,8.172926,1.188733,-1.231676,-8.007582,-0.679015,-2.655094,-7.719282,3.924722,7.426667,-4.552078,-4.042460,2.525007,-7.570942,-6.895511,8.967804,9.606708,1.370307,-9.937678,-6.306942,-6.371223,-3.073178,7.090019,-7.726431,5.672319,-8.648191,-9.647429,-0.545669,3.032626,-8.876180,-9.262262,-8.270131,-8.355516,2.586745,2.194907,-2.753236,-5.677842,-7.887904,4.808103,-1.603611,-4.530903,-7.394475,-9.927261,4.008581,-8.287709,3.630932,7.951382,-5.886276,1.984423,-6.822645,-3.917364,0.076705,-1.668923,-8.714793,-0.326523,-6.444750,2.087763,4.343765,-7.857088,-0.589446,-0.511541,4.496043,8.137497,-2.165980,5.249770,4.542658,3.475649,9.895656,3.341443,0.845065,-7.514788,-8.043951,3.132223,9.403833,-9.604383,-4.906330,-4.055957,2.193185,8.316119,-8.106369,-3.100143,-0.144727,-1.048776,3.590625,-6.623568,-9.695706,9.253570,-1.208248,-7.429834,-1.265568,8.029287,-6.691858,-2.499855,4.945213,4.998015,0.677167,-6.697847,5.439244,2.654198,-7.507439,0.940777,-6.707277,7.823229,7.564487,2.029212,3.646298,-2.685705,-4.652801,5.633347,7.032951,9.429204,-4.823276,-1.914120,3.857238,4.732876,1.389730,-9.971069,1.421778,5.926618,9.120140,-0.912133,8.047996,-8.581087,8.003429,-2.838767,-5.637187,1.004382,2.333961,-4.326836,7.857197,-7.790508,2.663787,0.962703,-1.470841,3.169924,7.236149,-6.793108,9.454390,-2.142552,-9.124513,6.027755,-9.527944,-1.366276,-7.583324,-5.714015,-9.211456,3.670935,5.527600,-4.475032,3.114613,-1.949580,0.354207,9.709312,0.157613,3.141331,-5.819094,7.656268,-1.846761,-4.972350,-5.049522,-3.777831,4.975000,-7.073530,-9.170296,0.913155,3.384553,-3.825742,-2.108588,6.223163,5.494183,-5.958482,5.722958,1.927596,3.767585,-4.420985,-6.065683,-5.011399,-9.708313,9.333034,3.375897,-7.994401,-2.902412,4.394960,2.943277,-0.557851,2.792844,-0.843633,-6.695391,-6.214609,-7.540353,-5.831982,-5.971180,-8.640984,2.308490,5.481710,-5.053166,0.992388,6.876223,-7.174371,3.785211,1.240978,1.735638,3.591083,5.668834,3.313094,5.070302,7.818852,-4.878450,-3.074196,7.291534,-4.804042,-2.070501,-7.907860,-8.799979,-3.963059,0.616695,-4.810054,0.149460,8.595390,-5.308137,-8.784269,-1.993688,2.307942,-8.962326,-0.684782,5.720416,7.971979,7.252661,8.693477,-6.876770,9.923741,-1.315012,-1.872994,-3.868567,-7.564788,-6.599029,-1.282925,-7.521796,6.078310,9.507342,-8.317640,-3.912476,-4.184161,1.323489,9.195787,1.887609,-8.237525,0.945121,-6.284369,-2.836906,-1.500926,6.172777,5.438614,-3.030562,-6.108746,-8.606395,-6.746202,6.798161,-5.162088,6.532069,-9.415004,3.195435,-2.584877,-3.244608,-4.690514,3.849560,4.192010,3.633494,5.560512,-2.192433,5.511097,-8.001325,6.710256,8.437270,2.058560,-2.677473,4.976873,-5.326777,-3.894863,-3.813015,3.988667,7.303778,7.336008,4.365063,-1.366581,-1.562676,-3.936725,0.493399,-2.792158,-7.375811,9.221601,-0.538359,-4.491264,-7.378778,5.489431,2.693361,2.929953,5.108198,8.885665,2.234007,-0.496448,8.539075,-8.396757,9.576174,7.204440,-6.611201,-3.670924,-4.178278,1.020315,6.228676,9.718356,9.901985,5.390041,6.662677,6.639137,-5.333887,6.971450,8.070764,-2.003233,-5.706194,-1.102503,1.430920,7.046498,8.726887,-8.728012,5.063621,6.705749,-8.645241,-2.650032,9.139566,-5.254828,3.950011,8.608054,-7.805106,3.298628,-2.816826,4.156699,-9.295483,4.890661,-1.934819,-8.791963,2.508976,-0.228408,-3.138117,-1.407576,7.812322,9.970263,-9.550768,1.905996,1.025449,3.880554,-9.927090,2.440220,-5.104106,-1.554801,-5.821046,-6.002157,-0.683608,-7.350003,8.192072,-4.264024,0.680760,-0.015311,-8.760467,-6.860117,-8.715954,0.121403,2.054727,-4.843964,0.544146,-0.713166,7.728212,-1.669743,8.487499,9.966341,3.720077,0.657122,6.001599,-8.069879,5.364605,5.252015,-6.248207,-5.408619,8.615916,3.798286,0.863579,8.120976,0.643042,-1.221977,-6.699549,7.873035,2.073764,-0.698711,-8.736982,5.174240,-4.671322,-1.405814,3.817270,-9.981752,8.458350,-3.713222,3.110250,6.448216,8.878512,4.705826,6.885983,1.151480,-3.021860,-6.995013,-2.427380,-8.464309,-0.980497,7.122102,-6.101541,4.561472,-7.147447,-5.974739,0.936611,-6.326542,-3.420443,-6.188029,-9.529467,-7.109945,3.315581,-6.429957,-2.075765,-7.488522,2.740589,9.038098,1.462096,7.651395,-5.206745,7.140220,9.098672,-4.696123,-9.317101,-9.656838,-8.297026,5.813163,9.022206,3.430339,-2.635996,-3.177078,7.159782,0.583050,-7.929328,-4.375280,4.076685,-9.438117,8.328784,-4.283861,6.191003,0.755165,8.959865,-1.820359,-6.358055,0.772103,4.937379,-8.735061,9.242020,-8.270589,-0.583428,-0.334250,-4.881310,-1.271078,8.312049,9.124651,8.621294,-7.470409,8.318931,0.845869,-3.639362,5.873582,2.757975,-0.834997,5.975707,-6.092258,-8.810153,0.438518,-6.638480,-5.021750,-6.899279,-9.990453,-1.325483,9.716325,6.918702,9.009113,0.914264,-8.821977,-9.077009,1.835286,4.046579,3.400064,-1.534366,-7.392800,4.248508,-3.939609,9.041058,1.938021,8.455402,2.260434,-5.813552,-3.434391,9.907049,-4.919503,6.533828,-2.044725,3.034336,-5.881662,-5.219087,-6.337709,-2.920050,-8.475025,-2.674817,5.941429,-5.822193,-4.540148,-1.354856,-1.998535,4.544118,9.620897,-6.936531,2.464175,-3.669865,5.016348,3.551109,-4.939930,-2.783269,3.102112,-1.324320,-0.030389,7.537231,4.336920,0.236892,-3.724539,-7.293199,0.314114,9.002732,8.222276,2.992581,-0.746799,-0.914991,-9.768207,5.519032,2.022619,-0.690025,-8.735275,9.510938,0.869051,8.785185,5.663890,-0.737583,-8.399679,-0.450870,7.868882,-2.881470,-3.771767,-7.768005,6.944617,-2.519187,6.078120,-7.992003,-7.230612,-8.609978,-8.667709,3.523682,6.283429,6.610605,2.101883,6.595493,9.598110,2.733128,7.820146,-3.062965,2.828257,4.626678,3.236913,3.545957,6.963159,-4.914652,5.825169,-7.111357,0.034735,3.170702,7.928341,3.615954,-6.629456,-0.219746,-8.783413,4.599328,4.717121,-0.969548,-1.789011,-1.979238,4.911890,-0.003501,8.271788,-1.301217,-6.834838,1.318496,-2.909092,-0.916485,1.011358,-1.276130,8.277915,-6.428211,3.739380,5.905180,-9.400174,0.266597,-3.977067,-7.099073,-9.453209,-5.397011,-5.411720,-2.859731,-4.465234,-3.838279,3.384149,2.844236,-2.232446,1.841624,4.876455,3.142360,3.947135,5.300052,-3.849567,4.551822,-7.373479,3.083060,6.791172,-5.061074,-9.104976,-0.179156,8.716484,-8.667124,9.638173,4.297244,3.923794,-0.093209,-7.184997,-1.179331,0.353197,4.265947,-1.507970,7.910151,6.986250,5.662954,-6.222371,6.965168,-2.756268,3.458359,-1.903099,-2.957607,6.257540,-3.918406,-1.290224,5.758651,-4.035992,-0.610565,5.732506,-0.177193,6.890595,9.498622,5.345784,1.876501,-4.868061,3.648148,-6.741626,-4.167351,-0.786088,5.482807,-4.415991,4.865283,6.176880,0.004961,0.968567,2.256108,1.815920,-4.994099,-0.294995,-1.448663,-9.339649,6.612745,4.546410,-4.652644,-0.414254,1.572845,-1.434549,8.002348,-9.832229,1.715119,-1.378337,-0.252512,6.305398,9.674245,-2.452834,-7.962037,5.561290,4.006341,-3.121138,0.929838,9.937434,0.245367,9.716403,-7.472435,7.160903,4.801703,-6.198994,8.557799], dtype = "float64")#candidate|5514|(2112,)|const|float64
var_5515 = relay.var("var_5515", dtype = "float64", shape = (2080,))#candidate|5515|(2080,)|var|float64
call_5513 = relay.TupleGetItem(func_1197_call(relay.reshape(const_5514.astype('float64'), [12, 11, 16]), relay.reshape(var_5515.astype('float64'), [104, 20]), ), 0)
call_5516 = relay.TupleGetItem(func_1200_call(relay.reshape(const_5514.astype('float64'), [12, 11, 16]), relay.reshape(var_5515.astype('float64'), [104, 20]), ), 0)
output = relay.Tuple([call_5460,call_5477,var_5478,const_5479,uop_5509,call_5513,const_5514,var_5515,])
output2 = relay.Tuple([call_5461,call_5480,var_5478,const_5479,uop_5511,call_5516,const_5514,var_5515,])
func_5518 = relay.Function([var_5478,var_5515,], output)
mod['func_5518'] = func_5518
mod = relay.transform.InferType()(mod)
mutated_mod['func_5518'] = func_5518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5518_call = mutated_mod.get_global_var('func_5518')
var_5520 = relay.var("var_5520", dtype = "float32", shape = (60,))#candidate|5520|(60,)|var|float32
var_5521 = relay.var("var_5521", dtype = "float64", shape = (2080,))#candidate|5521|(2080,)|var|float64
call_5519 = func_5518_call(var_5520,var_5521,)
output = call_5519
func_5522 = relay.Function([var_5520,var_5521,], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5527 = relay.var("var_5527", dtype = "float32", shape = (12, 7, 2))#candidate|5527|(12, 7, 2)|var|float32
var_5528 = relay.var("var_5528", dtype = "float32", shape = (12, 7, 2))#candidate|5528|(12, 7, 2)|var|float32
bop_5529 = relay.floor_divide(var_5527.astype('float32'), relay.reshape(var_5528.astype('float32'), relay.shape_of(var_5527))) # shape=(12, 7, 2)
output = bop_5529
output2 = bop_5529
func_5559 = relay.Function([var_5527,var_5528,], output)
mod['func_5559'] = func_5559
mod = relay.transform.InferType()(mod)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mutated_mod.get_global_var('func_5559')
var_5561 = relay.var("var_5561", dtype = "float32", shape = (12, 7, 2))#candidate|5561|(12, 7, 2)|var|float32
var_5562 = relay.var("var_5562", dtype = "float32", shape = (12, 7, 2))#candidate|5562|(12, 7, 2)|var|float32
call_5560 = func_5559_call(var_5561,var_5562,)
output = call_5560
func_5563 = relay.Function([var_5561,var_5562,], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3965_call = mod.get_global_var('func_3965')
func_3966_call = mutated_mod.get_global_var('func_3966')
call_5577 = func_3965_call()
call_5578 = func_3965_call()
var_5579 = relay.var("var_5579", dtype = "bool", shape = (12, 2, 13))#candidate|5579|(12, 2, 13)|var|bool
bop_5580 = relay.equal(call_5577.astype('bool'), relay.reshape(var_5579.astype('bool'), relay.shape_of(call_5577))) # shape=(12, 2, 13)
bop_5583 = relay.equal(call_5578.astype('bool'), relay.reshape(var_5579.astype('bool'), relay.shape_of(call_5578))) # shape=(12, 2, 13)
uop_5588 = relay.cos(call_5577.astype('float64')) # shape=(12, 2, 13)
uop_5590 = relay.cos(call_5578.astype('float64')) # shape=(12, 2, 13)
uop_5597 = relay.atanh(uop_5588.astype('float64')) # shape=(12, 2, 13)
uop_5599 = relay.atanh(uop_5590.astype('float64')) # shape=(12, 2, 13)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_5602 = relay.TupleGetItem(func_3857_call(), 1)
call_5603 = relay.TupleGetItem(func_3859_call(), 1)
uop_5613 = relay.cosh(uop_5588.astype('float64')) # shape=(12, 2, 13)
uop_5615 = relay.cosh(uop_5590.astype('float64')) # shape=(12, 2, 13)
uop_5619 = relay.exp(uop_5597.astype('float32')) # shape=(12, 2, 13)
uop_5621 = relay.exp(uop_5599.astype('float32')) # shape=(12, 2, 13)
output = relay.Tuple([bop_5580,call_5602,uop_5613,uop_5619,])
output2 = relay.Tuple([bop_5583,call_5603,uop_5615,uop_5621,])
func_5630 = relay.Function([var_5579,], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5631 = relay.var("var_5631", dtype = "bool", shape = (12, 2, 13))#candidate|5631|(12, 2, 13)|var|bool
func_5630_call = mutated_mod.get_global_var('func_5630')
call_5632 = func_5630_call(var_5631)
output = call_5632
func_5633 = relay.Function([var_5631], output)
mutated_mod['func_5633'] = func_5633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_5655 = relay.TupleGetItem(func_3857_call(), 1)
call_5656 = relay.TupleGetItem(func_3859_call(), 1)
uop_5668 = relay.sigmoid(call_5655.astype('float32')) # shape=(12, 2, 13)
uop_5670 = relay.sigmoid(call_5656.astype('float32')) # shape=(12, 2, 13)
func_4587_call = mod.get_global_var('func_4587')
func_4588_call = mutated_mod.get_global_var('func_4588')
call_5671 = relay.TupleGetItem(func_4587_call(), 0)
call_5672 = relay.TupleGetItem(func_4588_call(), 0)
func_3249_call = mod.get_global_var('func_3249')
func_3252_call = mutated_mod.get_global_var('func_3252')
var_5679 = relay.var("var_5679", dtype = "int8", shape = (81,))#candidate|5679|(81,)|var|int8
const_5680 = relay.const([-5.261504,-0.173028,4.380966,1.111294,-4.964845,3.562219,-3.220174,1.276195,-5.552266,6.373791,6.591070,-2.746583,-2.834523,-0.624605,-3.328335,7.633738,4.718745,-9.289306,3.890755,2.873021,1.713408,4.276992,-4.899067,-0.190069,4.416470,0.770808,-8.004011,-6.937065,3.027177,-8.819859,-6.615888,-8.943700,9.485324,2.477574,1.971757,-1.648586,5.945123,-3.054832,7.872637,-4.106957,-1.302045,3.220203,-2.936953,4.977590,-7.198550,9.521249,8.078601,-9.544572,-4.915627,7.701689,-8.256495,-8.086919,-9.383585,-1.756196,-0.618840,-0.687597,-2.901259,8.381707,7.957112,-3.394691,9.352209,-5.427886,-6.793065,2.117376,-4.320722,-0.355490,8.725682,-6.866568,1.460027,7.532633,-0.387250,-4.249698,0.907330,8.344158,-2.164839,-1.820192,1.754357,-6.858767,3.501150,-7.125917,-5.896437,-6.675667,-1.936044,1.212576,8.722971,0.556280,-6.744915,9.353153,4.251594,-4.725189,-6.090003,6.186020,-4.186400,2.539491,-7.428710,1.850315,-0.551421,-5.161510,1.568836,-5.486250,-4.413328,-4.508946,4.330622,-1.436348,-9.897550,-0.491894,6.992460,-2.534403,3.542743,9.001345,4.721961,7.026054,-0.137071,-7.110321,0.654076,9.049014,-2.490630,4.153177,5.430371,6.992404,-1.583254,-2.853285,6.137965,3.627526,0.619222,-0.651588,-4.383311,-9.147613,8.281831,-4.426643,-3.393014,-0.162269,1.155067,-1.550768,7.959427,-6.156489,-4.881152,7.255257,2.956761,-4.131954,5.121978,6.202033,-1.438398,8.740674,5.344924,6.827855,5.521307,-2.462836,8.611303,4.556662,-3.409356,-6.977426,-4.025285,8.661288,5.726291,-5.809803,-3.231908,-8.835948,-2.921007,2.365198,8.545415,4.577384,-3.104851,8.734761,-8.574141,8.699088,-2.621507,5.616278,1.019328,-5.238892,0.612613,-4.125086,-6.371929,-8.547260,-2.919384,-9.600441,-1.469032,-0.482553,-5.309640,-0.398476,-5.348822,3.557059], dtype = "float64")#candidate|5680|(182,)|const|float64
call_5678 = relay.TupleGetItem(func_3249_call(relay.reshape(var_5679.astype('int8'), [9, 1, 9]), relay.reshape(const_5680.astype('float64'), [182,]), ), 6)
call_5681 = relay.TupleGetItem(func_3252_call(relay.reshape(var_5679.astype('int8'), [9, 1, 9]), relay.reshape(const_5680.astype('float64'), [182,]), ), 6)
func_4196_call = mod.get_global_var('func_4196')
func_4197_call = mutated_mod.get_global_var('func_4197')
call_5692 = func_4196_call()
call_5693 = func_4196_call()
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_5694 = func_3507_call()
call_5695 = func_3507_call()
output = relay.Tuple([uop_5668,call_5671,call_5678,var_5679,const_5680,call_5692,call_5694,])
output2 = relay.Tuple([uop_5670,call_5672,call_5681,var_5679,const_5680,call_5693,call_5695,])
func_5712 = relay.Function([var_5679,], output)
mod['func_5712'] = func_5712
mod = relay.transform.InferType()(mod)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5713 = relay.var("var_5713", dtype = "int8", shape = (81,))#candidate|5713|(81,)|var|int8
func_5712_call = mutated_mod.get_global_var('func_5712')
call_5714 = func_5712_call(var_5713)
output = call_5714
func_5715 = relay.Function([var_5713], output)
mutated_mod['func_5715'] = func_5715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_5736 = func_3637_call()
call_5737 = func_3637_call()
var_5756 = relay.var("var_5756", dtype = "bool", shape = (12, 2, 13))#candidate|5756|(12, 2, 13)|var|bool
bop_5757 = relay.logical_or(call_5736.astype('bool'), relay.reshape(var_5756.astype('bool'), relay.shape_of(call_5736))) # shape=(12, 2, 13)
bop_5760 = relay.logical_or(call_5737.astype('bool'), relay.reshape(var_5756.astype('bool'), relay.shape_of(call_5737))) # shape=(12, 2, 13)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
var_5775 = relay.var("var_5775", dtype = "int32", shape = (252,))#candidate|5775|(252,)|var|int32
call_5774 = relay.TupleGetItem(func_41_call(relay.reshape(var_5775.astype('int32'), [14, 9, 2])), 0)
call_5776 = relay.TupleGetItem(func_43_call(relay.reshape(var_5775.astype('int32'), [14, 9, 2])), 0)
output = relay.Tuple([bop_5757,call_5774,var_5775,])
output2 = relay.Tuple([bop_5760,call_5776,var_5775,])
func_5782 = relay.Function([var_5756,var_5775,], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
var_5783 = relay.var("var_5783", dtype = "bool", shape = (12, 2, 13))#candidate|5783|(12, 2, 13)|var|bool
var_5784 = relay.var("var_5784", dtype = "int32", shape = (252,))#candidate|5784|(252,)|var|int32
output = func_5782(var_5783,var_5784,)
func_5785 = relay.Function([var_5783,var_5784,], output)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_5841 = relay.TupleGetItem(func_3675_call(), 1)
call_5842 = relay.TupleGetItem(func_3677_call(), 1)
output = relay.Tuple([call_5841,])
output2 = relay.Tuple([call_5842,])
func_5861 = relay.Function([], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mutated_mod.get_global_var('func_5861')
call_5862 = func_5861_call()
output = call_5862
func_5863 = relay.Function([], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5984 = relay.var("var_5984", dtype = "int8", shape = (1, 10, 14))#candidate|5984|(1, 10, 14)|var|int8
const_5985 = relay.const([[[-5,8,-3,-2,2,-3,8,-3,-7,-2,8,-4,-8,10],[-10,-9,-9,6,3,-7,8,3,-9,8,5,-4,3,-10],[6,5,8,-2,-3,10,-8,3,9,2,4,-6,10,-4],[10,4,-5,-6,4,-1,-8,-5,10,-2,5,8,4,2],[4,6,3,3,-8,-2,-7,-1,4,1,5,-2,7,-2],[4,4,-2,-3,10,-3,-5,3,8,8,10,-7,-5,7],[-10,5,-3,-1,1,9,2,-2,-7,-8,8,8,-7,5],[5,-4,-1,9,9,-8,-6,2,9,4,8,2,9,-6],[-4,-6,2,-5,2,4,6,4,1,1,-1,-7,-8,-6],[6,1,4,-2,-1,7,3,-5,-7,10,-4,-9,5,-3]],[[-2,9,-3,-1,-10,-1,-2,-2,-4,-5,-5,-9,7,3],[4,6,-5,8,-5,-4,4,6,6,4,-7,10,-3,1],[7,-3,-10,-8,1,-4,7,-3,-5,-8,9,2,-8,-7],[3,2,-4,10,-1,10,6,-10,3,-3,-2,-3,2,6],[10,-2,1,-3,-6,-10,3,1,-5,-2,4,-1,6,-5],[9,-10,-5,2,-4,-3,-7,-9,3,2,1,-8,-1,1],[-1,8,10,-1,-10,-2,-9,9,8,-8,8,-8,-8,-5],[-5,8,3,-10,-6,7,-5,4,-4,1,1,-4,1,-9],[10,10,10,-3,-6,5,3,9,1,-3,-6,-8,4,-5],[3,6,10,9,3,-1,3,2,10,-6,-5,-7,-3,-8]],[[-6,-4,9,-2,-5,6,-3,9,-7,-3,-2,-9,8,-8],[2,8,10,-8,-1,7,1,5,2,-1,-5,-7,3,-4],[1,-10,7,-2,-9,6,-9,5,6,-8,-6,-9,-1,-7],[-2,5,-2,-8,-2,-6,9,8,-4,-1,-5,-9,6,-3],[4,-3,-1,-2,3,4,8,-6,-3,-8,9,7,6,6],[-6,3,9,8,6,6,8,7,-1,5,-7,-3,2,-2],[-6,4,-9,3,5,-9,9,-4,-5,-5,4,-2,-4,-1],[5,-5,-4,-4,-6,-1,8,3,5,-6,-8,9,-2,-7],[8,-3,1,-5,-6,8,-9,4,8,7,-5,-6,-6,7],[9,-4,-3,-1,6,-1,-8,6,-9,5,10,-3,-6,7]],[[5,8,9,-3,1,-9,10,9,9,5,8,5,3,2],[-8,-9,-5,9,3,8,-5,-10,7,5,7,-5,-2,-2],[10,-4,2,-3,2,-3,-3,-6,-10,-7,6,-2,-4,7],[-7,10,-2,6,-8,1,1,3,-4,6,7,-10,5,-7],[1,4,-4,7,-1,-10,-2,-8,-2,8,-4,-2,8,-6],[-4,-10,9,-4,10,-9,-2,9,7,-8,-10,8,3,-5],[-2,3,-3,2,9,-5,5,2,-2,-3,10,-9,-10,-6],[-7,-5,1,-6,1,6,-1,-10,4,6,-5,-6,-2,7],[4,-8,-6,1,-9,2,2,-3,-1,-1,-7,3,-10,8],[4,6,1,-10,-7,4,5,-7,6,-1,-4,-1,3,-4]],[[-5,-5,-8,-8,6,-5,8,-8,-5,-1,8,-7,-8,5],[6,-4,-2,9,-1,10,-4,2,-2,2,-9,10,5,-10],[-10,4,-4,5,9,-7,-1,-10,2,5,-4,3,2,-1],[-3,-1,5,8,-4,-5,-9,5,-9,-4,-1,-5,10,8],[-3,8,-9,-10,-4,4,-3,3,5,-3,7,5,8,2],[-10,-9,-9,-1,-6,3,-9,-10,-9,-4,2,-9,5,-6],[-8,3,9,2,-9,-6,-4,-4,7,-5,6,-1,7,7],[7,-8,-4,-2,-3,10,-9,-8,5,-6,-8,1,10,-4],[5,10,-7,-7,-7,3,-5,-3,-9,-9,-3,-9,6,4],[-3,3,-2,-9,9,-9,7,8,2,8,2,-6,-2,7]],[[4,-4,-2,4,-9,-2,-9,7,-2,7,6,-7,-5,-5],[-7,-5,-4,9,-7,9,-6,-4,-1,-10,-6,6,4,-2],[8,6,-10,8,1,9,10,5,8,-10,10,1,-7,-10],[2,-10,9,-6,8,-4,-9,8,-10,5,2,-6,-3,10],[4,3,-2,-4,8,2,4,-4,9,-4,2,-7,-5,7],[-10,10,-7,-9,3,-1,-3,-6,9,2,1,-8,-7,9],[8,10,5,1,10,-10,-3,-5,-6,-5,-10,-4,5,3],[-7,-4,8,-2,-3,-4,2,7,7,-2,-10,9,-4,-10],[-6,-2,3,9,-9,4,-5,4,-2,-1,-10,1,9,-1],[-2,-5,4,-3,-3,-8,-5,-6,-1,-6,-1,2,-1,5]],[[-3,-5,7,-7,-7,-8,3,5,-8,-6,1,-2,2,-4],[-8,-5,5,-10,-1,-5,-7,1,9,-6,6,8,8,10],[5,-3,4,6,9,4,-2,8,-2,-9,-6,-7,-9,-2],[6,-4,-7,-4,6,-2,7,-5,-7,-10,2,9,4,-10],[3,-9,5,10,2,-5,-5,3,5,4,-9,-10,-4,10],[-6,-3,4,10,3,1,5,4,-3,3,-5,9,-3,-6],[7,-7,8,-6,9,-2,-5,10,1,9,2,-1,2,2],[6,-2,-8,9,-8,8,10,-2,5,4,-9,-9,8,-10],[9,-4,4,9,7,-7,3,-4,9,6,9,9,5,-1],[-9,1,-4,2,-5,9,-9,8,-4,-4,8,9,2,-7]],[[8,-9,-8,-3,-9,10,6,-5,8,8,6,6,-2,3],[-3,-10,-8,-7,3,-9,-7,-8,8,9,-7,-7,6,10],[8,-1,-6,1,-4,-10,-10,-1,8,9,5,2,-2,-6],[2,-8,9,-1,-2,9,-3,-5,10,8,-7,3,-5,-3],[-4,7,7,8,5,-3,2,-3,2,5,-3,-9,-2,-2],[5,-5,-6,-7,-10,-1,2,3,7,-8,3,-1,8,1],[-2,8,8,-6,-10,1,6,6,-7,4,5,3,5,8],[-5,5,2,5,-1,-6,6,10,1,-1,-4,-10,-7,9],[-10,9,-6,5,10,-7,2,3,-3,9,-10,10,-7,3],[7,10,-10,5,3,-5,-9,-5,8,-9,2,6,-10,4]],[[-9,3,-2,5,2,-10,-7,10,-9,-7,3,-9,3,7],[-2,-3,9,-8,3,-4,3,-9,-1,8,-4,-9,10,3],[3,-9,10,-7,1,1,1,6,1,6,-4,6,-9,6],[2,3,7,2,7,8,9,2,5,5,5,2,6,-9],[2,6,-5,1,2,-1,7,7,-9,5,6,3,-1,-3],[4,6,7,2,-1,-4,-8,-4,-4,-10,-9,-8,3,8],[-6,-5,-3,6,10,-4,1,-6,2,-6,10,-1,9,5],[9,-7,6,-5,2,-1,-7,5,-2,9,-2,4,8,-2],[5,10,3,-8,1,10,-5,6,-5,-2,-4,4,-5,-10],[2,-4,1,10,3,-3,-3,8,3,2,6,8,4,-8]],[[8,5,-1,-8,3,6,-8,-10,1,9,-1,3,-4,7],[-1,-8,-4,1,-2,-6,7,-2,-1,5,10,6,-6,1],[2,-7,-5,-3,2,2,1,10,10,-2,-4,-2,1,-10],[-1,-7,10,-5,3,-4,10,-8,8,8,1,10,6,-2],[2,-2,-2,5,4,-9,-5,-9,-2,7,-4,7,-4,-3],[-1,-7,-6,5,9,1,9,8,2,-9,4,-2,1,-6],[-8,-7,-3,-1,5,-8,-7,8,9,-8,-3,7,4,-8],[1,-2,-4,-6,-5,-7,-5,5,-5,6,8,7,2,9],[-3,1,-4,3,-1,-4,-5,7,9,2,4,10,-1,-3],[10,10,-10,7,5,-9,-10,5,7,5,-3,-10,4,-8]],[[8,9,3,1,-4,7,-2,-8,-3,-8,-4,-6,10,5],[-7,-1,6,5,1,3,8,-5,-8,1,-5,-10,1,-9],[6,-5,8,-10,-7,-4,-10,-4,-8,-7,3,8,6,-8],[-5,-8,-2,4,10,-4,8,5,-8,-6,-9,3,-2,1],[-8,-5,-7,-4,7,-9,-3,-1,-3,-8,-7,-7,9,10],[2,9,2,5,-4,-8,-8,-7,-10,-3,-5,3,-7,-8],[-4,-8,-2,6,-9,-3,9,-6,-8,9,1,10,3,10],[8,8,8,6,-3,4,-3,-6,10,-9,-5,6,-2,-4],[2,7,-3,1,1,1,-2,-7,-2,7,-7,10,-7,-9],[-3,-4,-8,6,-5,5,6,1,1,-3,1,6,-6,-9]]], dtype = "int8")#candidate|5985|(11, 10, 14)|const|int8
bop_5986 = relay.bitwise_xor(var_5984.astype('int8'), const_5985.astype('int8')) # shape=(11, 10, 14)
output = relay.Tuple([bop_5986,])
output2 = relay.Tuple([bop_5986,])
func_5990 = relay.Function([var_5984,], output)
mod['func_5990'] = func_5990
mod = relay.transform.InferType()(mod)
var_5991 = relay.var("var_5991", dtype = "int8", shape = (1, 10, 14))#candidate|5991|(1, 10, 14)|var|int8
output = func_5990(var_5991)
func_5992 = relay.Function([var_5991], output)
mutated_mod['func_5992'] = func_5992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
call_5998 = relay.TupleGetItem(func_4033_call(), 0)
call_5999 = relay.TupleGetItem(func_4035_call(), 0)
func_4462_call = mod.get_global_var('func_4462')
func_4466_call = mutated_mod.get_global_var('func_4466')
var_6027 = relay.var("var_6027", dtype = "float32", shape = (60,))#candidate|6027|(60,)|var|float32
const_6028 = relay.const([2,-9,1,4,-3,3,-2,2,-6,1,9,5,-6,2,-6,3,-8,10,8,-9,2,-2,3,-2,-4,2,2,1,-6,6,-8,10,1,7,-4,2,-8,-4,6,-3,10,6,-3,-8,9,-10,2,3,10,5,-8,-1,9,9,-1,10,8,-1,-2,-1,-2,-8,-1,-8,-10,-6,-9,-5,2,6,8,3,1,-10,-3,-3,-4,-7,-9,7,-9,-10,-9,7,-10,-7,6,-6,-3,9,7,-1,3,5,7,3,-4,4,-9,9,1,-2,5,5,4,6,-8,-2,6,-2,1,9,-2,1,2,-5,-5,4,-4,-7,-7,-2,9,5,-1,-8,-6,-10,-10,2,-10,-8,1,-4,-3,5,-4,-4,-9,8,-5,4,3,-10,6,6,-8,-2,6,-5,-7,-8,5,1,8,8,8,-9,-8,4,2,10,4,-8,-8,-9,3,-3,7,4,5,-3,6,4,10,7,-9,1,-1,-4,-1,-3,8,5,-3,-5,1,-1,-9,-10,-4,2,-4,-7,-9,5,3,6,-7,1,2,-10,3,1,-8,-2,7,-6,-4,-7,3,4,-3,9,3,-10,3,7,1,9,-10,2,2,10,2,-10,-1,-2,9,4,9,-7,4,-10,4,4,10,-1,3,-10,-1,1,9,8,-3,9,6,8,-2,3,-10,1], dtype = "int32")#candidate|6028|(252,)|const|int32
call_6026 = relay.TupleGetItem(func_4462_call(relay.reshape(var_6027.astype('float32'), [60,]), relay.reshape(const_6028.astype('int32'), [252,]), ), 5)
call_6029 = relay.TupleGetItem(func_4466_call(relay.reshape(var_6027.astype('float32'), [60,]), relay.reshape(const_6028.astype('int32'), [252,]), ), 5)
var_6030 = relay.var("var_6030", dtype = "bool", shape = (12, 2, 13))#candidate|6030|(12, 2, 13)|var|bool
bop_6031 = relay.greater(call_5998.astype('bool'), relay.reshape(var_6030.astype('bool'), relay.shape_of(call_5998))) # shape=(12, 2, 13)
bop_6034 = relay.greater(call_5999.astype('bool'), relay.reshape(var_6030.astype('bool'), relay.shape_of(call_5999))) # shape=(12, 2, 13)
output = relay.Tuple([call_6026,var_6027,const_6028,bop_6031,])
output2 = relay.Tuple([call_6029,var_6027,const_6028,bop_6034,])
func_6036 = relay.Function([var_6027,var_6030,], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mutated_mod.get_global_var('func_6036')
var_6038 = relay.var("var_6038", dtype = "float32", shape = (60,))#candidate|6038|(60,)|var|float32
var_6039 = relay.var("var_6039", dtype = "bool", shape = (12, 2, 13))#candidate|6039|(12, 2, 13)|var|bool
call_6037 = func_6036_call(var_6038,var_6039,)
output = call_6037
func_6040 = relay.Function([var_6038,var_6039,], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4080_call = mod.get_global_var('func_4080')
func_4082_call = mutated_mod.get_global_var('func_4082')
call_6132 = relay.TupleGetItem(func_4080_call(), 1)
call_6133 = relay.TupleGetItem(func_4082_call(), 1)
func_4462_call = mod.get_global_var('func_4462')
func_4466_call = mutated_mod.get_global_var('func_4466')
const_6147 = relay.const([-9.062575,1.780117,4.206745,-2.462597,2.788492,9.772920,7.429828,-7.232083,-4.331457,-1.816214,-7.839285,0.401866,-0.641533,8.777082,-0.935315,-0.060320,-4.960110,-4.358486,8.531920,-1.782924,0.634389,8.870262,0.496504,7.212697,-4.520183,6.631499,6.327137,7.572802,-6.640840,9.699517,3.981938,2.411427,7.853226,3.117425,-3.274145,7.118162,3.151871,2.027571,5.819361,-3.009364,-8.506779,-4.061894,7.213927,6.134793,-2.654759,-2.435099,-8.124129,-8.953996,7.651784,3.650228,0.540130,-1.808342,6.301804,5.846266,-3.918950,-3.980810,6.114756,-2.129713,4.068626,-7.764249], dtype = "float32")#candidate|6147|(60,)|const|float32
var_6148 = relay.var("var_6148", dtype = "int32", shape = (252,))#candidate|6148|(252,)|var|int32
call_6146 = relay.TupleGetItem(func_4462_call(relay.reshape(const_6147.astype('float32'), [60,]), relay.reshape(var_6148.astype('int32'), [252,]), ), 3)
call_6149 = relay.TupleGetItem(func_4466_call(relay.reshape(const_6147.astype('float32'), [60,]), relay.reshape(var_6148.astype('int32'), [252,]), ), 3)
output = relay.Tuple([call_6132,call_6146,const_6147,var_6148,])
output2 = relay.Tuple([call_6133,call_6149,const_6147,var_6148,])
func_6158 = relay.Function([var_6148,], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6159 = relay.var("var_6159", dtype = "int32", shape = (252,))#candidate|6159|(252,)|var|int32
func_6158_call = mutated_mod.get_global_var('func_6158')
call_6160 = func_6158_call(var_6159)
output = call_6160
func_6161 = relay.Function([var_6159], output)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_6167 = func_3125_call()
call_6168 = func_3125_call()
var_6173 = relay.var("var_6173", dtype = "bool", shape = (12, 2, 13))#candidate|6173|(12, 2, 13)|var|bool
bop_6174 = relay.add(call_6167.astype('int16'), relay.reshape(var_6173.astype('int16'), relay.shape_of(call_6167))) # shape=(12, 2, 13)
bop_6177 = relay.add(call_6168.astype('int16'), relay.reshape(var_6173.astype('int16'), relay.shape_of(call_6168))) # shape=(12, 2, 13)
output = relay.Tuple([bop_6174,])
output2 = relay.Tuple([bop_6177,])
func_6185 = relay.Function([var_6173,], output)
mod['func_6185'] = func_6185
mod = relay.transform.InferType()(mod)
mutated_mod['func_6185'] = func_6185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6186 = relay.var("var_6186", dtype = "bool", shape = (12, 2, 13))#candidate|6186|(12, 2, 13)|var|bool
func_6185_call = mutated_mod.get_global_var('func_6185')
call_6187 = func_6185_call(var_6186)
output = call_6187
func_6188 = relay.Function([var_6186], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4010_call = mod.get_global_var('func_4010')
func_4011_call = mutated_mod.get_global_var('func_4011')
call_6193 = relay.TupleGetItem(func_4010_call(), 1)
call_6194 = relay.TupleGetItem(func_4011_call(), 1)
uop_6220 = relay.asinh(call_6193.astype('float32')) # shape=(12, 2, 13)
uop_6222 = relay.asinh(call_6194.astype('float32')) # shape=(12, 2, 13)
output = relay.Tuple([uop_6220,])
output2 = relay.Tuple([uop_6222,])
func_6230 = relay.Function([], output)
mod['func_6230'] = func_6230
mod = relay.transform.InferType()(mod)
mutated_mod['func_6230'] = func_6230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6230_call = mutated_mod.get_global_var('func_6230')
call_6231 = func_6230_call()
output = call_6231
func_6232 = relay.Function([], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4293_call = mod.get_global_var('func_4293')
func_4295_call = mutated_mod.get_global_var('func_4295')
call_6235 = func_4293_call()
call_6236 = func_4293_call()
var_6243 = relay.var("var_6243", dtype = "float64", shape = (16, 4, 16))#candidate|6243|(16, 4, 16)|var|float64
bop_6244 = relay.equal(call_6235.astype('bool'), relay.reshape(var_6243.astype('bool'), relay.shape_of(call_6235))) # shape=(16, 4, 16)
bop_6247 = relay.equal(call_6236.astype('bool'), relay.reshape(var_6243.astype('bool'), relay.shape_of(call_6236))) # shape=(16, 4, 16)
output = bop_6244
output2 = bop_6247
func_6248 = relay.Function([var_6243,], output)
mod['func_6248'] = func_6248
mod = relay.transform.InferType()(mod)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6249 = relay.var("var_6249", dtype = "float64", shape = (16, 4, 16))#candidate|6249|(16, 4, 16)|var|float64
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6250 = func_6248_call(var_6249)
output = call_6250
func_6251 = relay.Function([var_6249], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_6256 = func_3507_call()
call_6257 = func_3507_call()
func_5630_call = mod.get_global_var('func_5630')
func_5633_call = mutated_mod.get_global_var('func_5633')
call_6263 = relay.TupleGetItem(func_5630_call(relay.reshape(call_6256.astype('bool'), [12, 2, 13])), 0)
call_6264 = relay.TupleGetItem(func_5633_call(relay.reshape(call_6256.astype('bool'), [12, 2, 13])), 0)
output = relay.Tuple([call_6256,call_6263,])
output2 = relay.Tuple([call_6257,call_6264,])
func_6267 = relay.Function([], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
output = func_6267()
func_6268 = relay.Function([], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_6307 = relay.TupleGetItem(func_3857_call(), 0)
call_6308 = relay.TupleGetItem(func_3859_call(), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_6311 = func_3654_call(relay.reshape(call_6307.astype('bool'), [12, 2, 13]))
call_6312 = func_3654_call(relay.reshape(call_6307.astype('bool'), [12, 2, 13]))
func_3100_call = mod.get_global_var('func_3100')
func_3102_call = mutated_mod.get_global_var('func_3102')
var_6314 = relay.var("var_6314", dtype = "int16", shape = (120,))#candidate|6314|(120,)|var|int16
call_6313 = func_3100_call(relay.reshape(var_6314.astype('int16'), [5, 6, 4]))
call_6315 = func_3100_call(relay.reshape(var_6314.astype('int16'), [5, 6, 4]))
uop_6324 = relay.asin(call_6313.astype('float64')) # shape=(5, 6, 4)
uop_6326 = relay.asin(call_6315.astype('float64')) # shape=(5, 6, 4)
output = relay.Tuple([call_6307,call_6311,var_6314,uop_6324,])
output2 = relay.Tuple([call_6308,call_6312,var_6314,uop_6326,])
func_6329 = relay.Function([var_6314,], output)
mod['func_6329'] = func_6329
mod = relay.transform.InferType()(mod)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6330 = relay.var("var_6330", dtype = "int16", shape = (120,))#candidate|6330|(120,)|var|int16
func_6329_call = mutated_mod.get_global_var('func_6329')
call_6331 = func_6329_call(var_6330)
output = call_6331
func_6332 = relay.Function([var_6330], output)
mutated_mod['func_6332'] = func_6332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4651_call = mutated_mod.get_global_var('func_4651')
call_6339 = func_4650_call()
call_6340 = func_4650_call()
output = relay.Tuple([call_6339,])
output2 = relay.Tuple([call_6340,])
func_6341 = relay.Function([], output)
mod['func_6341'] = func_6341
mod = relay.transform.InferType()(mod)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6341_call = mutated_mod.get_global_var('func_6341')
call_6342 = func_6341_call()
output = call_6342
func_6343 = relay.Function([], output)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6415 = relay.const([[[9,9,4,3,-2,-9,-6,2,9,-9,7,6,3,2,-3],[7,8,1,8,8,-4,4,8,-7,-8,-9,-6,-6,2,-4],[-7,-10,-9,-7,-5,-8,-3,-1,8,7,4,-10,10,-9,6],[-1,6,-9,2,-9,10,10,-10,6,8,-4,9,5,10,6],[-9,10,-8,-8,5,-9,-7,-10,-1,4,10,-4,-2,2,2],[7,-5,-7,-5,5,-4,-5,-5,-7,3,-6,9,-4,8,4],[-4,-3,7,-3,-5,-2,-3,8,-6,-4,6,2,1,-10,-3],[-3,5,-7,-6,-7,-7,7,-10,9,2,4,5,-7,3,-7],[10,-5,-6,9,1,2,-5,-9,6,10,3,-5,-10,-7,10],[1,-6,6,9,5,-1,1,5,-2,9,-8,6,1,8,10],[3,-7,-8,-2,-10,8,-1,-9,10,-7,5,-1,9,-8,-9],[-2,-2,1,3,8,8,5,6,6,-7,-2,8,-5,5,-3],[-2,9,5,-3,-3,4,-8,5,-6,7,-5,6,-4,2,4],[4,-10,1,2,8,6,1,4,7,6,-3,-7,-4,-10,8],[2,2,-6,-1,-7,-6,-2,9,10,6,-2,-8,-8,7,1],[-3,-1,6,6,-4,8,-9,6,8,4,1,-3,-4,-3,10]],[[-10,4,-6,9,-8,8,-4,6,-5,-3,10,-6,4,5,-4],[-1,8,6,-8,7,-9,-1,3,10,-6,6,8,9,3,3],[-7,-2,10,10,-2,-5,3,1,-7,-4,5,-7,2,-8,7],[2,4,10,1,-3,6,-5,5,-5,-8,-3,8,7,5,-7],[-5,-8,-5,6,-10,-1,8,-7,4,5,-10,-7,10,2,-7],[8,2,-4,4,-2,-8,1,1,-1,10,8,-6,-2,-9,10],[7,-2,3,5,6,4,-2,-4,-4,9,10,-8,4,-1,-6],[3,-10,-2,10,2,5,-2,4,-8,-10,4,6,-6,-4,3],[9,-5,10,-2,5,8,4,4,5,-6,-1,-5,-4,7,-8],[-10,-6,-4,4,-9,-1,-8,-7,3,-6,-7,1,6,-2,5],[-3,7,-2,8,-10,-5,-1,8,-5,10,-9,-10,10,8,-7],[4,-8,1,-3,-5,5,-3,-1,6,1,-7,6,3,-3,8],[3,-2,-2,-10,2,-7,5,5,1,4,-9,2,-10,1,-3],[-3,-2,7,10,8,-5,8,5,8,9,5,4,-5,-2,6],[-5,2,-6,3,8,-7,-6,-7,-2,-8,6,9,3,-4,8],[10,1,-3,3,-4,-7,8,-7,8,-9,-8,-2,-6,-1,-1]],[[10,-4,-3,1,-5,1,-5,-9,3,4,4,8,9,2,-4],[-10,-4,9,-3,7,5,-2,-6,-5,-8,2,10,-1,-4,10],[-6,4,5,1,-4,-6,6,-9,10,-1,10,-4,3,-1,8],[7,-10,-6,-4,2,5,7,9,4,-8,10,8,10,9,8],[-3,-1,-8,9,-6,-2,-9,2,2,7,-1,-10,1,10,-3],[7,-7,-10,-7,-7,-10,-6,7,-8,6,-9,-2,-5,10,5],[8,-1,10,8,-2,2,5,2,-10,2,-6,2,-1,3,4],[7,7,5,-1,5,-9,7,7,-5,-10,2,10,-3,8,-2],[-3,-4,-9,8,-1,7,-1,3,6,4,7,-3,9,7,4],[-2,10,-7,-5,3,9,-6,-6,8,-9,9,10,2,-8,7],[-8,-8,6,-9,2,7,-2,2,1,10,-4,-5,-9,-4,-6],[10,1,-2,5,8,-3,-9,-7,3,-10,-8,-1,9,-2,8],[5,1,6,-2,5,8,-4,-3,9,9,-8,-4,-3,-9,-5],[2,3,-5,-7,1,9,-1,8,4,-9,-7,-3,6,-3,1],[-1,5,8,-6,8,-10,9,-10,3,-6,-10,-1,-3,8,-3],[-3,6,2,-9,3,-6,-4,2,3,9,-10,-2,1,2,-3]],[[-2,1,6,4,-4,3,-9,6,-1,9,-8,-9,1,-8,-1],[8,-9,3,-4,3,3,-9,-2,-4,-2,3,3,10,3,-7],[-1,10,-7,7,10,-1,-5,5,-3,-2,-1,5,-6,8,-3],[6,1,5,-6,1,-4,9,1,7,-3,9,4,10,6,-1],[-6,-4,2,-6,2,4,-8,-5,7,2,-3,-5,-2,-8,6],[9,6,-8,-5,-7,-10,2,4,-6,1,2,-9,-2,-6,1],[-10,2,8,-6,-4,9,-6,3,-10,2,7,7,10,8,10],[8,4,5,1,2,-6,1,-3,1,-3,5,6,-7,1,-4],[7,-10,1,-2,9,-8,-6,-7,1,-10,-3,-6,1,5,1],[3,-9,-10,10,-5,-5,-6,-1,-7,10,-9,-6,-2,-10,-9],[6,8,6,-8,-9,5,-5,2,3,10,-1,-8,6,2,-7],[-7,-4,8,5,6,8,-8,4,9,-3,3,-10,9,-1,3],[1,-8,-7,4,-4,-7,-2,3,7,3,3,-2,-7,10,-9],[5,-5,6,1,5,8,6,-7,8,-3,1,-7,10,1,1],[4,-1,-8,10,-7,-5,-7,7,-1,5,3,1,-7,3,4],[-10,-9,7,10,-9,2,-1,4,-4,-2,9,5,7,-5,-1]],[[-6,5,-6,5,10,2,-5,-5,-3,-3,8,-2,6,-8,-10],[9,-2,1,9,-3,-9,2,-9,4,8,9,-3,-10,8,9],[-6,4,-3,5,3,2,2,10,3,-5,5,-6,3,-7,-3],[-1,-7,7,1,3,-2,10,8,-7,-5,-1,-8,-9,2,-4],[-4,-4,-9,10,-4,6,5,2,-5,4,5,10,-2,-4,5],[-9,-4,-10,3,3,-1,5,-4,-1,8,-8,-1,-6,-9,5],[-10,-3,-7,-5,2,-10,-8,3,2,10,-9,4,-9,1,1],[-2,-2,3,-9,-10,8,-6,-2,8,-10,5,9,7,10,-5],[-6,9,-1,7,-1,-1,-6,-7,5,-4,6,-4,1,-2,-3],[-1,2,-7,4,-5,1,-6,-6,-7,10,5,3,8,5,6],[-7,-5,8,-3,7,7,-7,-7,8,1,-7,4,8,-7,-2],[-8,-1,9,8,4,-2,-5,6,2,-10,-1,-3,-9,7,-3],[1,9,8,-3,-9,-2,-6,2,3,-7,8,9,3,2,6],[-2,-7,-6,10,-1,-6,2,2,-5,7,-7,10,-6,-6,4],[4,-6,8,5,-3,8,1,-1,-3,7,8,5,-4,2,1],[-1,-3,-5,-2,8,-9,5,6,3,6,-9,6,4,-7,1]],[[2,1,10,6,-8,-7,3,-7,2,6,9,-2,-9,6,-3],[-4,-8,10,-2,-10,-3,9,3,-2,-5,-4,-6,-1,5,3],[-6,-4,-3,-4,1,5,-5,9,-10,4,1,-2,-6,-4,-2],[-10,-5,5,-9,2,3,5,4,5,-4,1,-8,-2,8,7],[6,-10,-2,-10,-4,-2,-4,6,-10,3,-1,-9,7,-3,-9],[7,-8,8,-2,4,3,-6,4,4,-4,-7,-1,-5,-8,-3],[9,-4,-7,-10,3,8,1,-2,5,-8,-2,5,1,-4,-8],[-10,7,7,-10,-2,10,-8,3,5,-7,8,-8,-5,-4,-2],[5,1,-7,3,-5,10,-6,-6,8,6,2,7,10,-1,-10],[-7,6,-5,6,10,-5,-7,-9,-10,4,-4,-2,8,-2,6],[-5,-7,3,-4,1,2,-4,-7,-4,2,2,6,-7,-4,7],[-1,3,1,-9,4,-9,-6,-5,-6,9,-7,-3,5,-9,-7],[10,-9,7,8,-5,5,-1,6,7,7,9,-9,8,10,-4],[6,-6,-9,-4,-8,1,2,-8,10,-2,1,2,4,3,-9],[-5,-1,1,6,6,4,-9,1,-9,-3,9,-2,4,-1,4],[-2,-7,1,-2,3,9,7,-8,-7,3,-7,4,3,9,-4]],[[6,-1,-10,10,7,2,-3,-8,-9,-7,5,-5,5,-8,10],[5,-8,8,1,8,1,6,8,4,-8,-2,-7,3,-4,4],[1,-1,-8,-6,7,6,3,4,7,3,-1,10,1,-9,4],[-1,5,-3,9,3,-3,-5,-5,2,-7,7,1,7,1,-8],[-9,10,-9,10,-2,5,4,-4,9,10,2,-3,5,6,5],[-10,3,2,-3,-1,7,-10,7,1,3,-9,1,9,-3,-1],[-3,5,-1,9,1,-8,-7,9,-4,10,-4,-4,3,10,-10],[-6,-3,10,-2,-7,10,-1,-4,3,-3,-7,1,1,-7,-4],[1,2,3,-6,-1,-7,-8,10,-9,2,-5,8,-4,-2,7],[2,7,9,-7,6,10,1,-2,-10,3,2,4,-5,-10,-1],[-4,4,-6,3,2,1,3,-9,-2,-5,-4,-2,8,9,4],[-4,1,-10,-4,10,4,-7,-3,1,5,10,-6,10,-2,3],[-6,-4,6,-8,1,-6,1,-10,-10,-2,1,-6,6,1,2],[-2,1,-9,-4,-9,5,7,-1,-10,10,-7,4,7,9,6],[4,-4,-7,-3,-8,-5,-2,-10,-1,-5,4,3,-5,-8,10],[10,5,8,4,3,6,6,-2,10,-9,-6,6,1,-2,8]],[[4,-4,9,-10,-5,-7,-3,-8,1,10,-4,-3,6,2,2],[9,-9,4,7,2,-9,3,-4,-8,-3,-5,5,-7,-1,-10],[-2,-8,4,-8,-9,4,-7,-1,2,-6,-8,-1,-8,-5,-1],[1,-5,-2,-2,-1,1,1,4,9,-1,-2,7,-3,4,-5],[4,8,-6,10,3,10,-9,-1,3,1,-8,-7,8,1,10],[7,-3,-5,7,8,-9,3,-1,4,-6,-10,-10,1,-6,10],[-10,4,-3,-4,-8,-2,5,6,-2,2,5,-4,8,3,-10],[4,1,5,8,-8,-4,-3,6,4,10,-7,7,-10,-9,-1],[-9,8,4,5,3,-8,4,5,-9,-7,7,5,-9,1,9],[6,-8,7,-8,-1,6,9,1,9,4,-10,-3,-5,10,-10],[-9,-9,3,-6,-10,3,8,-5,5,-10,1,-10,-5,-7,-2],[-5,3,5,-10,6,-9,8,-8,-8,-7,2,10,-4,-6,1],[-8,-6,-10,7,-3,2,2,1,2,-5,-8,1,-8,3,6],[3,-10,-6,-1,2,8,5,-5,9,6,8,-10,3,4,1],[10,5,-2,-2,-6,6,10,3,10,3,-8,3,2,6,-2],[7,1,-3,4,10,10,3,9,-5,10,8,-3,-3,-7,-8]],[[-8,-2,-8,5,-2,2,-1,2,-3,-1,-9,10,-10,-4,4],[5,-8,2,-3,5,-10,-7,-6,-2,-8,-3,-4,6,9,-8],[-1,-6,1,4,-5,-9,-8,7,-3,-4,-4,7,-1,1,-2],[-3,-3,3,-7,7,-6,8,-3,7,-3,-9,7,4,-9,-5],[5,6,-9,3,-4,9,-9,3,1,7,10,-1,-4,-2,-2],[-3,-7,7,8,3,10,-3,8,-8,5,-4,-5,-1,-2,1],[-1,2,-5,-3,9,-6,-9,-6,2,-7,3,-1,8,5,-4],[5,3,5,-8,-1,-6,6,4,4,7,-5,5,-7,10,3],[10,-1,-9,1,5,-4,8,8,-3,-2,-6,-1,2,5,1],[8,-8,-6,-3,4,-10,-1,-8,4,1,-2,-2,-9,-2,-8],[2,6,-5,9,-3,8,-1,4,9,-3,-6,9,-7,-4,-3],[-1,8,-7,4,-3,-8,10,1,1,4,10,8,-7,8,-3],[4,7,5,-7,1,4,10,-9,10,10,-3,-5,8,5,5],[-6,-5,-3,9,9,-7,-9,9,-7,-7,4,-5,-10,-2,10],[6,6,-1,2,-8,-7,-8,-9,4,7,-3,5,1,-5,-2],[-2,-5,2,9,5,6,10,10,-10,-9,8,-1,2,-10,-7]],[[-3,3,-1,-3,8,8,10,10,1,-4,1,2,7,-4,-2],[1,1,-5,-8,3,-6,4,8,8,5,10,6,-8,8,1],[-2,-7,-8,-5,3,-4,8,-7,-1,-6,8,4,7,-8,3],[-5,4,10,-6,-8,-5,-8,-10,9,-1,-10,2,3,-6,-4],[-4,4,5,-10,10,-10,2,-8,-4,-4,4,3,9,-5,9],[-4,2,-1,-1,-8,10,-8,7,-5,-4,7,4,-4,-8,-8],[10,-1,7,9,-6,-2,6,-9,5,7,4,7,-6,10,4],[4,-7,8,9,-5,6,-3,7,-7,-7,-2,-8,8,-4,9],[-6,1,8,-9,-7,-3,-2,-5,-8,1,-7,-4,-4,9,3],[-5,1,-2,5,5,6,5,4,-4,4,-8,8,6,-8,-1],[4,-8,4,-3,1,-3,8,2,-9,6,2,4,8,2,-6],[-7,-1,-5,-4,5,6,4,-5,-6,5,-8,8,8,4,3],[5,10,4,-10,-6,6,1,6,8,-2,7,-9,4,10,9],[7,3,7,-7,-8,2,-4,5,10,-5,-6,6,5,5,9],[-9,6,-8,-9,-2,7,-10,8,3,9,-4,-8,10,-2,9],[9,-2,1,-9,-4,-9,6,1,5,2,10,8,-8,-1,1]],[[4,1,-4,5,-5,6,-1,3,4,6,3,4,5,-8,-2],[8,1,-1,2,-10,-8,-10,9,-1,-1,-3,-4,-4,8,-7],[2,-6,5,-10,7,3,-6,-4,-6,10,-3,-2,9,-8,-1],[-9,10,-8,5,1,7,7,7,-2,8,10,6,-10,9,4],[-3,-5,-8,-8,-8,-7,3,10,-7,10,-4,-9,-2,7,-9],[3,2,6,10,5,3,5,-7,-3,-9,2,-3,6,-3,9],[2,5,10,7,5,8,-5,-3,7,-9,-7,2,3,5,8],[10,-6,5,-8,5,-2,1,-5,-10,-8,-1,-9,7,8,1],[-6,6,-6,7,1,7,-5,3,-3,-4,-3,10,-5,-5,10],[9,-7,-9,5,-8,10,-2,-6,-6,-9,1,-5,-3,9,5],[3,7,-10,4,-4,4,8,10,-2,-4,-7,2,-6,-4,2],[-4,7,7,-8,5,-3,-6,6,6,2,-8,5,-1,-2,7],[8,10,-3,-3,6,-4,8,2,6,9,-6,-9,6,3,6],[-3,-9,10,-8,4,-10,4,8,9,2,6,-8,10,-4,1],[2,6,6,5,8,9,10,5,7,-4,5,-8,4,4,-10],[-9,10,-6,-3,10,10,7,-1,8,6,9,-3,-4,-5,-6]],[[-5,9,-2,10,6,5,9,6,4,-8,-7,4,1,8,6],[5,8,-7,-9,-4,-8,10,2,-5,-3,1,-9,-1,-4,-8],[-10,-4,-7,9,-9,-2,3,-4,10,-1,2,3,8,-4,3],[-3,-5,1,7,9,-2,-2,-2,10,-6,5,5,-1,-3,3],[7,9,10,-5,8,4,-2,5,-5,-6,-7,10,10,-3,6],[-9,10,6,-5,-1,-2,7,3,8,8,-8,-4,5,10,6],[-3,-1,-2,5,8,2,-2,6,10,1,7,-3,10,6,7],[7,9,-3,7,-8,-5,-8,9,2,7,9,7,-6,1,6],[-6,-6,-1,5,8,-6,4,-1,6,-4,1,7,-5,-2,5],[-2,8,-5,8,10,3,-2,10,10,1,10,-5,-7,-10,-9],[-6,7,1,-7,-3,-9,-5,-1,-6,-4,5,6,-1,-2,-5],[-7,4,-7,7,5,4,-6,7,-5,-10,-8,3,7,-1,4],[-10,7,6,-10,-1,-4,-1,4,-2,10,10,-7,6,-6,2],[2,-2,7,-6,-4,4,-2,2,2,6,6,-2,8,6,4],[5,-4,-7,-8,10,10,2,10,9,-8,5,-3,-6,4,7],[1,-4,-1,-8,3,-1,-3,-6,-8,4,-2,-7,-8,5,6]],[[10,4,-4,4,-3,9,4,10,-4,5,-4,9,-1,6,-6],[8,10,9,-10,-4,-2,9,-5,-5,7,7,6,-3,-2,5],[-1,-4,-6,3,-6,10,-1,3,10,-7,10,8,-1,-5,2],[-10,2,2,-9,-5,-5,4,-4,4,-6,10,-6,-2,-1,-9],[-6,6,7,5,6,-2,2,6,4,7,10,6,6,-2,-6],[2,4,-9,7,-6,3,-3,-5,-1,7,-8,7,-3,-5,-2],[8,4,-3,2,8,-2,-7,8,-1,10,8,7,6,-8,4],[4,5,3,-5,-7,-4,-4,5,-2,10,6,-2,3,10,-10],[3,-8,6,-6,6,-1,-4,3,6,8,9,-4,-7,-2,-10],[3,8,2,3,-4,3,1,-2,-9,-2,-6,10,-4,9,-4],[-8,-4,6,-10,-6,-8,-2,10,-5,-4,-5,8,2,-10,7],[2,9,-2,4,6,8,2,-4,6,1,-4,10,-10,5,-5],[-6,-8,5,-1,-1,10,10,-1,-4,4,7,-2,2,-1,-3],[-9,-7,5,-6,2,3,7,6,10,5,5,-5,-8,8,6],[-8,-10,2,7,-2,-3,3,-2,2,-8,7,-8,10,-1,-5],[-10,10,8,-7,-9,-3,6,6,2,-2,-4,4,3,-8,-4]]], dtype = "uint64")#candidate|6415|(13, 16, 15)|const|uint64
const_6416 = relay.const([[[-5,-10,-7,-4,-1,-4,9,1,-2,10,-3,-8,2,3,-6],[4,7,8,7,4,-4,-2,-8,3,-1,-2,3,9,3,1],[-10,3,-1,3,10,-5,-6,1,1,-3,-7,9,7,7,-1],[-1,5,10,2,-5,1,-1,8,2,-6,-6,-2,-4,4,-10],[2,-7,3,5,1,2,-10,8,4,1,-4,4,-1,-4,-2],[9,-4,-2,-4,-6,9,-4,2,-8,1,-6,-6,1,-1,-4],[9,-8,10,2,9,6,8,6,3,6,-3,6,-5,9,-2],[-8,6,4,7,9,-7,-3,-6,-7,-3,10,-7,5,5,-7],[-7,-10,2,7,1,5,-3,-3,7,8,2,6,-6,1,-7],[2,5,4,-5,9,1,4,-4,10,8,1,-6,9,-8,-7],[1,8,3,-3,7,6,8,9,-8,1,-9,-6,-9,-10,9],[3,-9,6,-3,10,-3,-5,6,-10,4,-10,8,-7,5,6],[-5,4,10,-3,10,-2,-10,3,2,10,-9,-7,8,-3,-1],[7,-8,9,-2,10,8,5,8,3,3,3,2,8,6,-3],[8,3,2,3,-4,5,2,1,-2,-9,-6,9,-6,9,6],[-9,3,-2,3,8,6,-1,-7,-10,5,-4,-6,10,-9,2]],[[-1,4,2,-1,-1,4,4,10,10,-10,1,-7,-8,7,-5],[5,-1,-2,-6,1,1,7,-3,-9,-6,7,3,-4,-10,-8],[-1,5,-3,8,9,7,5,9,10,10,-7,3,2,2,-8],[8,-5,-5,9,8,-3,2,-8,7,-9,5,-5,-5,-8,8],[7,-7,-1,3,-6,-2,7,-8,-4,-6,-3,8,-1,-4,10],[-7,1,3,8,4,8,-4,9,-1,-6,-6,8,-6,7,-10],[-5,-3,-2,-8,4,-6,-7,7,-2,-9,-7,-7,8,-6,7],[-1,-4,7,-3,-6,-9,9,-3,-2,-7,1,-9,-1,-6,-4],[-4,5,1,1,9,1,2,-3,-6,-7,-9,9,1,-5,-8],[9,-3,-7,6,-10,-7,-2,1,-3,-2,2,-1,9,10,8],[-4,9,1,4,5,-4,-5,3,-4,4,7,7,-6,9,-10],[-5,3,-2,1,-2,9,1,4,9,2,-4,-9,6,-7,5],[-1,-10,6,9,-7,4,-8,-10,-8,-2,10,9,7,7,4],[1,-2,-2,-6,-4,3,-1,-2,5,7,2,3,9,1,-6],[-7,10,2,6,2,-1,9,-6,-2,-4,-8,8,-10,-5,-4],[3,10,9,-5,9,6,-10,1,-9,-7,-2,9,-8,9,-9]],[[-4,4,-6,-7,-9,-6,-8,1,2,-4,3,6,8,-3,5],[1,4,5,-10,1,-9,-6,3,6,-7,6,6,4,-6,-2],[8,-2,3,-2,-10,-2,-10,-5,6,-2,-2,5,-10,4,5],[-7,-3,5,6,9,-10,4,1,-5,-9,-2,-5,10,5,1],[10,-4,9,-9,9,-1,-8,1,2,-8,2,3,6,-3,7],[-4,-6,-2,-8,-1,8,7,7,-7,1,4,-5,3,2,4],[-3,-8,7,-3,-10,3,6,-6,-6,-6,10,4,-8,-7,-2],[2,9,4,10,10,-2,10,3,-5,-10,-9,2,4,-10,-2],[1,-8,4,6,-9,-5,-3,1,10,-6,8,9,-1,-1,5],[1,-9,-8,-1,8,3,1,8,-4,9,-9,7,6,-2,-7],[2,2,-9,6,-5,1,8,5,-5,4,-1,2,2,6,-7],[-10,-2,-2,-3,2,3,-7,7,-6,-3,10,-5,1,-10,-1],[9,10,2,-2,-2,-2,-2,-5,4,-3,2,-2,6,4,10],[7,-5,-1,-8,-1,-9,-5,-5,-10,-4,6,8,4,-1,10],[-4,-1,3,-7,4,3,-2,-6,1,-5,-1,-4,9,3,-6],[1,9,10,-1,4,6,1,-8,-4,3,7,-2,-2,-6,-1]],[[7,4,-2,-9,1,8,-3,-5,6,-3,3,-6,8,4,-3],[8,-4,8,-9,9,-4,-7,-8,1,6,-6,1,-1,-9,3],[-9,4,5,1,2,-4,-9,-5,-5,-4,10,9,-3,10,-5],[-6,6,-10,-3,-3,-1,5,-7,-10,9,-3,-3,8,-3,7],[-1,-4,2,-8,-7,4,-9,9,-9,8,2,-5,-4,-2,-3],[-6,-2,3,-6,-3,-3,10,-3,-10,9,-10,-9,-7,-10,-1],[10,9,-8,7,5,-5,-6,10,6,-4,8,-8,-1,-2,-8],[3,-10,9,5,10,-8,8,-3,-5,-10,6,5,7,-2,6],[-3,5,3,1,-2,10,9,-5,-8,-1,-9,8,-2,-9,-5],[-4,6,-4,-5,-9,-10,-8,8,-1,-4,-7,-9,7,10,-6],[3,-5,-1,-1,6,3,10,-4,5,-5,8,-1,4,10,6],[-3,8,-9,9,-5,-2,2,2,-8,-1,-5,4,-6,4,6],[-4,10,-7,10,10,2,6,2,7,-2,-5,-9,-4,9,3],[-9,-4,-10,7,8,7,-7,-3,-8,3,3,8,-8,7,10],[5,-6,8,4,7,-3,4,-5,3,1,5,3,-4,-6,2],[-10,5,10,3,9,7,-4,1,10,-3,9,5,-1,-7,-3]],[[-1,6,10,-1,9,2,-9,-7,-6,-6,9,6,9,6,-2],[-3,-1,-1,6,-3,2,-10,-4,5,5,-8,7,10,-1,2],[-5,-8,-7,-7,-3,-9,-8,7,-8,-1,-2,-9,4,6,6],[-9,-4,-7,-8,-5,5,-5,3,-4,-4,3,-5,-6,-2,4],[-2,-8,10,9,-8,-10,-8,-5,-8,-1,-3,8,-7,-6,-9],[-4,3,-1,-7,-2,7,-7,8,-6,-8,-7,-1,10,-1,4],[7,3,10,-5,-6,-2,-9,-8,9,-1,10,2,5,9,10],[-8,-1,-7,6,-10,8,-5,-10,-2,-8,-10,5,2,-3,7],[-4,10,-7,10,10,-6,-3,5,-6,6,2,-4,7,-6,-7],[-6,10,-8,-5,-2,10,3,-3,-9,-7,-4,-1,5,-4,-10],[8,2,2,-6,-10,-1,-8,-4,-5,9,9,1,2,2,9],[-7,-8,2,2,-6,-8,-3,-3,7,-1,10,-2,4,4,-9],[5,-7,-6,-2,1,-1,7,5,-10,-8,1,-4,6,6,-3],[-3,3,-3,3,9,5,2,3,-2,2,-5,7,-5,-9,-2],[-9,1,9,3,9,-7,-2,-6,6,8,-7,10,-6,4,-9],[-6,-5,10,-10,7,5,-6,5,-1,-8,-1,-6,7,-8,-5]],[[-1,-5,7,2,10,-7,-5,1,-4,3,5,-9,6,3,8],[3,9,8,5,5,9,-10,6,-6,-6,-2,-4,-2,-8,-6],[-2,-8,7,9,5,-7,6,3,-9,-2,-2,5,-7,6,-1],[4,9,8,-9,10,-1,-10,-2,-8,-4,5,-7,1,7,-9],[-10,-6,4,-7,-9,7,-3,8,2,6,8,-9,2,-9,7],[-9,-1,-6,-9,10,-1,9,-5,-9,4,-2,-9,-7,1,1],[-4,-5,-5,3,-5,3,1,-9,-8,-5,6,-5,8,-5,8],[1,6,8,-8,-7,-4,-10,-4,-3,-1,-7,6,3,3,-7],[6,4,3,-5,-3,-5,-7,-3,-5,-3,7,-3,-3,-10,-4],[9,2,-2,-3,7,3,2,6,1,4,-10,-4,-3,-9,3],[-10,3,-6,-9,6,-7,-8,9,4,7,-3,-8,-8,-4,-4],[2,9,-7,2,4,-2,7,9,1,-7,3,5,-5,-2,2],[5,-1,-9,9,-2,1,3,-3,-5,8,-3,10,-10,-3,-5],[10,6,6,10,9,8,8,-10,-6,5,7,-4,-8,-3,1],[-3,-9,4,6,-1,-8,7,-2,4,1,5,9,-4,-6,-7],[6,7,1,-3,5,-4,-4,-8,-7,6,4,-4,1,-10,-7]],[[-3,9,10,-3,-8,6,-1,4,-7,-4,9,-6,-8,2,-5],[7,4,10,-7,-9,-3,-9,-5,6,4,-9,-5,-5,-4,-3],[6,7,-7,5,3,-6,-1,3,-8,10,-10,-4,-5,-9,7],[-6,-3,2,3,3,3,2,-6,10,3,-7,-2,-9,-3,-4],[2,1,6,-7,-5,2,-2,10,9,-4,-3,-7,-6,-1,-5],[-7,-6,4,4,-10,-4,6,9,5,-9,2,2,6,8,-6],[2,-9,2,4,-7,-6,9,6,-10,-7,10,9,-1,-1,-2],[-1,8,7,-5,9,-5,10,7,-3,-5,-5,2,-8,-1,-3],[5,9,3,-5,-5,10,-1,6,-6,-4,9,-7,-3,3,5],[-7,9,-6,-4,-3,-7,-10,3,6,-3,10,10,-3,6,7],[4,-2,1,-7,10,3,3,6,9,7,10,6,-7,-3,6],[4,5,5,3,3,4,-1,-9,-4,6,-10,9,8,-4,-10],[-2,-2,-10,5,1,-9,3,-3,-6,3,-8,-8,-1,-4,-9],[7,1,-8,-10,-8,-10,7,6,6,-7,-4,3,4,10,9],[6,-9,-5,8,10,6,3,-3,-3,1,-7,-9,-8,-4,-2],[-10,-7,5,-7,-9,9,7,1,2,-9,8,-9,8,-9,-8]],[[5,1,-8,-6,-9,2,-2,-3,10,-7,-8,9,-1,7,-1],[-10,4,8,8,-6,9,-7,8,-2,-5,9,5,1,5,5],[-4,2,-6,9,-2,-1,5,-2,7,-1,-4,-6,-6,-6,-6],[7,-5,9,9,5,4,-4,5,-10,-9,-7,-9,3,-1,-6],[-7,-8,-4,-4,-6,4,-7,7,-2,6,-7,-6,7,4,6],[6,5,-8,2,1,2,-6,-2,1,-1,7,2,-6,3,-7],[-2,-2,9,-7,1,9,-1,-4,-9,1,4,7,3,4,-3],[-5,-6,-3,9,7,8,-5,2,-6,-4,8,6,3,9,7],[10,9,3,2,4,3,-7,10,10,10,-4,-2,-4,-2,-2],[-8,-3,10,-1,-7,2,-6,10,10,-6,2,9,-10,10,-9],[-1,7,-6,-1,9,-3,-7,2,8,5,-4,-2,2,-9,4],[-7,5,-10,-2,7,8,-4,10,2,10,10,4,-9,3,-3],[6,-5,-5,-1,5,-8,-9,-8,8,4,7,4,-7,-2,-8],[9,-4,-4,-9,-5,4,-9,-8,9,9,6,1,-9,-10,9],[5,-4,4,7,-5,-10,-10,2,-10,-3,-8,4,6,6,-6],[6,6,-10,1,6,2,7,-6,7,1,6,-7,-9,-6,1]],[[-3,-3,10,-1,-1,-9,2,-4,-4,-6,-2,-6,-3,-4,-3],[10,3,-7,7,3,3,-2,7,-5,10,8,4,-3,-3,7],[-3,2,-2,-8,-4,-8,3,4,-9,-3,-10,9,6,-2,-10],[-5,-6,6,5,-9,-6,-10,9,1,2,-5,4,8,-9,-9],[9,-9,-10,-5,10,7,-10,-9,10,-9,3,-5,-1,8,-3],[-6,-10,9,1,-8,5,8,-2,-6,-6,-5,10,-9,4,8],[4,-2,-10,-6,-5,1,10,7,8,-4,-10,-7,-10,-1,4],[4,5,4,-6,-6,7,-3,9,-8,-5,5,-3,8,-9,-8],[2,10,-5,-3,-5,4,-6,-6,6,4,-8,9,-1,5,-7],[2,-2,-7,5,9,-8,-9,-9,9,-2,-7,2,-2,-2,-3],[-7,-8,-5,7,2,-9,1,5,6,-5,7,-7,-5,-3,5],[6,3,2,-7,-10,-6,-1,9,-7,10,-1,4,-9,8,-6],[10,-4,5,10,4,-5,9,7,2,10,6,8,-1,10,8],[2,-9,-10,-2,-8,-10,-5,9,-4,-6,10,8,-3,-6,10],[-9,4,9,-2,-6,-7,5,3,6,4,4,5,5,-2,-10],[-7,-7,7,-6,-6,3,-9,9,-4,-9,-6,-4,4,-10,-2]],[[-1,1,1,3,-9,2,-4,2,-10,8,-7,-2,-7,2,-5],[10,-3,-1,9,2,2,-1,2,2,4,-1,4,3,10,-1],[-8,-10,-3,5,-4,3,-2,6,10,8,-6,4,-4,3,10],[10,6,3,10,3,-7,-4,1,-5,-6,6,3,3,-6,-1],[2,-8,-1,10,-9,5,-9,6,-9,-4,5,-10,-1,4,-9],[6,8,10,5,9,2,3,-5,5,2,-2,9,-3,-4,10],[4,9,-1,9,8,1,6,-5,-5,-8,10,-3,-1,-1,-3],[-2,-6,1,9,-5,-10,9,2,-8,4,3,-5,3,1,2],[-7,-5,5,-2,5,-3,4,2,8,1,5,6,-10,-5,4],[-7,4,-4,7,3,-3,-9,-8,3,3,10,9,10,-6,10],[-4,1,-10,-5,2,3,6,-4,-4,-2,2,5,-7,-1,-1],[3,10,1,2,1,6,3,5,-6,-4,-6,-10,8,-7,10],[-9,-1,-10,1,10,8,-3,10,8,-6,4,-9,-2,-2,7],[7,7,-5,4,-9,-7,2,7,9,-6,8,-9,-6,7,2],[-10,-7,8,-3,9,7,-10,7,9,-3,-3,8,-1,2,2],[9,4,-10,10,-5,5,5,10,-3,2,-7,10,-6,8,6]],[[-4,2,2,10,-5,-1,6,-8,-9,-9,-8,5,-2,8,3],[-1,-10,4,-7,6,-9,6,4,-4,-6,6,-9,-1,-4,-10],[4,3,-6,-8,1,-5,-2,8,5,-8,6,7,5,-8,-9],[-5,2,9,-4,1,2,8,8,-7,-1,-4,-1,4,-10,-4],[-3,-2,-6,4,-9,-9,-2,-2,-4,-3,-5,4,9,1,-2],[-8,5,-1,10,-3,10,-9,-9,-5,1,-10,9,4,1,7],[10,10,7,8,-9,-6,3,3,8,8,8,-8,9,-4,7],[8,9,5,-1,3,4,-1,7,-2,4,6,6,-6,6,-9],[-3,2,-5,8,-10,8,-2,-2,2,6,1,-5,-6,4,-3],[6,-8,-8,5,-10,4,-8,6,-5,-3,-4,3,-3,-2,-2],[8,1,-8,2,2,10,-10,4,10,4,-2,-8,-8,5,-8],[7,7,-3,-6,10,-8,5,1,-4,9,-4,8,8,-3,-8],[-10,-6,-2,3,5,-5,6,-3,-9,7,6,-1,-3,10,3],[-8,2,1,-4,-3,10,4,-10,-10,-3,-9,8,3,10,-9],[1,6,-1,1,-3,-6,2,8,6,-1,7,-10,-1,-8,6],[5,-5,5,10,-1,2,-6,9,8,-4,-8,10,-7,1,-3]],[[-3,8,-9,-5,-1,-2,6,-7,3,-2,-4,-7,-8,-7,-8],[-10,1,10,-3,9,-3,-6,10,-4,1,-8,-6,-1,-9,-5],[-1,1,-5,3,8,-1,-2,8,2,-5,-9,8,-9,-2,-9],[7,-4,-3,-1,-4,-8,-8,3,4,-7,8,3,-1,-7,3],[2,10,-10,2,1,10,2,-2,3,2,-7,8,-8,-4,-4],[3,-1,-1,-5,-4,-10,6,10,6,-5,5,-9,-4,2,2],[-7,1,7,8,-4,8,7,-3,-3,-2,9,10,8,5,-2],[-7,3,6,7,-5,8,-2,-9,-4,8,-1,-1,7,5,-1],[-10,-7,-6,6,-8,-4,-4,3,-5,-6,-3,2,-7,5,-10],[10,-7,-6,9,6,-10,-8,-1,8,8,-1,-10,-6,1,-1],[-8,-2,8,-7,7,-6,6,-3,-5,-2,-4,5,-5,3,2],[6,6,4,7,1,-5,-3,1,5,-7,-2,-10,-7,7,9],[-5,-9,7,5,7,8,-2,-2,-8,-10,3,-8,-10,8,-6],[-9,5,1,3,4,1,1,-4,8,-9,-9,-2,-7,-1,-10],[-1,-9,8,8,6,-3,-5,-10,-7,-5,7,-1,10,-1,-1],[9,1,10,-7,-1,10,2,8,8,-10,-4,-4,8,-10,-4]],[[-2,-7,-8,2,-5,10,7,-3,-4,10,2,3,-8,-10,1],[-1,7,-6,5,2,-1,5,2,2,-7,-10,-8,-6,5,7],[2,-7,-8,-3,10,-2,8,10,-5,8,7,-2,-2,-3,6],[10,-8,4,1,8,3,-4,-7,-2,9,4,-7,-2,7,-5],[5,-9,-4,8,2,-9,-6,-7,9,3,9,-5,6,-7,-3],[3,10,3,-5,-1,9,-4,-5,9,-10,4,-2,8,-8,-8],[-9,-1,5,5,6,-8,6,-3,-3,-6,5,-2,1,-4,9],[2,-4,-9,8,8,-9,-1,6,-5,4,-2,3,7,-8,-5],[-2,-6,-9,-5,10,10,-10,4,7,-5,-5,2,-2,4,-10],[6,-5,8,7,10,7,-7,-3,2,-2,-2,5,7,-3,-7],[9,4,-4,-7,-8,-6,-6,-1,-4,10,-10,-5,8,-2,2],[-3,3,-2,-4,7,5,-6,-6,2,9,-8,-4,-4,6,5],[-7,6,8,6,6,-3,-7,-1,-3,5,-5,-1,-7,-3,-4],[10,7,-1,5,-8,-9,1,7,8,-7,1,7,2,10,-8],[4,-6,-3,7,-4,-8,-3,10,-3,1,1,-1,-8,4,-10],[2,10,6,-9,-3,9,8,2,-3,4,4,-8,8,10,3]]], dtype = "uint64")#candidate|6416|(13, 16, 15)|const|uint64
bop_6417 = relay.greater(const_6415.astype('bool'), relay.reshape(const_6416.astype('bool'), relay.shape_of(const_6415))) # shape=(13, 16, 15)
output = relay.Tuple([bop_6417,])
output2 = relay.Tuple([bop_6417,])
func_6431 = relay.Function([], output)
mod['func_6431'] = func_6431
mod = relay.transform.InferType()(mod)
mutated_mod['func_6431'] = func_6431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6431_call = mutated_mod.get_global_var('func_6431')
call_6432 = func_6431_call()
output = call_6432
func_6433 = relay.Function([], output)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_6442 = func_3637_call()
call_6443 = func_3637_call()
func_5782_call = mod.get_global_var('func_5782')
func_5785_call = mutated_mod.get_global_var('func_5785')
const_6446 = relay.const([8,10,1,-7,7,7,5,10,-5,3,-3,2,8,-3,5,4,4,-7,1,-9,3,-2,3,-8,-9,6,1,5,-9,-6,-10,10,-6,10,5,10,5,-6,5,1,-4,8,-5,7,-1,2,5,5,1,3,-5,1,6,-2,-3,5,-10,-5,5,-10,-8,8,-4,-7,10,-10,4,7,-3,10,-2,5,9,-6,5,1,-8,-7,3,9,5,-10,-3,10,8,1,-9,3,-8,2,-6,-7,1,-9,7,10,7,4,9,-3,-5,8,-3,-2,9,-6,-7,9,6,-4,6,-6,6,-1,3,-3,-2,-4,1,8,10,-2,7,-6,-9,-6,6,8,-2,-6,-4,-7,1,1,-9,-9,5,7,5,6,4,1,-6,2,7,-4,9,9,-3,10,-1,1,4,-1,1,-5,1,-5,-4,-4,-6,-3,-10,-5,-3,4,-7,4,-5,8,-2,3,10,10,-6,4,5,-9,2,-7,-10,-10,6,-6,-9,-6,-9,6,-6,3,3,6,-7,-2,-8,3,-7,-4,-9,1,7,10,-6,-7,-3,8,10,-3,-8,5,3,5,2,-3,10,-6,-3,6,3,4,6,3,6,4,-10,-2,-6,2,-6,9,-9,6,-3,3,-6,3,9,-7,-1,-2,9,-5,3,-4,-2,-7,-8,-5,5,-9,5,2], dtype = "int32")#candidate|6446|(252,)|const|int32
call_6445 = relay.TupleGetItem(func_5782_call(relay.reshape(call_6442.astype('bool'), [12, 2, 13]), relay.reshape(const_6446.astype('int32'), [252,]), ), 1)
call_6447 = relay.TupleGetItem(func_5785_call(relay.reshape(call_6442.astype('bool'), [12, 2, 13]), relay.reshape(const_6446.astype('int32'), [252,]), ), 1)
func_6185_call = mod.get_global_var('func_6185')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_6454 = relay.TupleGetItem(func_6185_call(relay.reshape(call_6442.astype('bool'), [12, 2, 13])), 0)
call_6455 = relay.TupleGetItem(func_6188_call(relay.reshape(call_6442.astype('bool'), [12, 2, 13])), 0)
output = relay.Tuple([call_6442,call_6445,const_6446,call_6454,])
output2 = relay.Tuple([call_6443,call_6447,const_6446,call_6455,])
func_6456 = relay.Function([], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mutated_mod.get_global_var('func_6456')
call_6457 = func_6456_call()
output = call_6457
func_6458 = relay.Function([], output)
mutated_mod['func_6458'] = func_6458
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6486 = relay.const([[[8.519802],[2.557312],[-8.941864],[4.982411],[-0.895610],[-7.825872],[-5.861922],[9.069984],[-9.496918],[3.703574],[-8.302417],[-4.750162],[0.751894],[-3.533058],[4.316851]],[[-3.959380],[-7.899810],[-5.911122],[6.003538],[-1.199941],[6.276517],[9.090496],[-4.958060],[-2.771752],[-7.579231],[8.685397],[7.814186],[-5.525506],[1.694188],[-0.055023]],[[0.739361],[3.647009],[-9.725826],[-0.566608],[-8.384537],[0.237124],[8.908468],[6.484322],[5.519742],[-9.644386],[-0.294771],[-3.934333],[2.944176],[-9.580258],[1.224472]]], dtype = "float32")#candidate|6486|(3, 15, 1)|const|float32
uop_6487 = relay.atanh(const_6486.astype('float32')) # shape=(3, 15, 1)
func_4788_call = mod.get_global_var('func_4788')
func_4791_call = mutated_mod.get_global_var('func_4791')
var_6495 = relay.var("var_6495", dtype = "float32", shape = (2, 96))#candidate|6495|(2, 96)|var|float32
call_6494 = func_4788_call(relay.reshape(var_6495.astype('float32'), [12, 16, 1]))
call_6496 = func_4788_call(relay.reshape(var_6495.astype('float32'), [12, 16, 1]))
output = relay.Tuple([uop_6487,call_6494,var_6495,])
output2 = relay.Tuple([uop_6487,call_6496,var_6495,])
func_6501 = relay.Function([var_6495,], output)
mod['func_6501'] = func_6501
mod = relay.transform.InferType()(mod)
mutated_mod['func_6501'] = func_6501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6502 = relay.var("var_6502", dtype = "float32", shape = (2, 96))#candidate|6502|(2, 96)|var|float32
func_6501_call = mutated_mod.get_global_var('func_6501')
call_6503 = func_6501_call(var_6502)
output = call_6503
func_6504 = relay.Function([var_6502], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_6514 = relay.TupleGetItem(func_3291_call(), 0)
call_6515 = relay.TupleGetItem(func_3292_call(), 0)
output = call_6514
output2 = call_6515
func_6516 = relay.Function([], output)
mod['func_6516'] = func_6516
mod = relay.transform.InferType()(mod)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6516_call = mutated_mod.get_global_var('func_6516')
call_6517 = func_6516_call()
output = call_6517
func_6518 = relay.Function([], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4127_call = mod.get_global_var('func_4127')
func_4129_call = mutated_mod.get_global_var('func_4129')
call_6521 = relay.TupleGetItem(func_4127_call(), 0)
call_6522 = relay.TupleGetItem(func_4129_call(), 0)
output = relay.Tuple([call_6521,])
output2 = relay.Tuple([call_6522,])
func_6526 = relay.Function([], output)
mod['func_6526'] = func_6526
mod = relay.transform.InferType()(mod)
mutated_mod['func_6526'] = func_6526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6526_call = mutated_mod.get_global_var('func_6526')
call_6527 = func_6526_call()
output = call_6527
func_6528 = relay.Function([], output)
mutated_mod['func_6528'] = func_6528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4127_call = mod.get_global_var('func_4127')
func_4129_call = mutated_mod.get_global_var('func_4129')
call_6546 = relay.TupleGetItem(func_4127_call(), 0)
call_6547 = relay.TupleGetItem(func_4129_call(), 0)
output = call_6546
output2 = call_6547
func_6548 = relay.Function([], output)
mod['func_6548'] = func_6548
mod = relay.transform.InferType()(mod)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6548_call = mutated_mod.get_global_var('func_6548')
call_6549 = func_6548_call()
output = call_6549
func_6550 = relay.Function([], output)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6651 = relay.var("var_6651", dtype = "float64", shape = (4, 4, 16))#candidate|6651|(4, 4, 16)|var|float64
uop_6652 = relay.sigmoid(var_6651.astype('float64')) # shape=(4, 4, 16)
output = uop_6652
output2 = uop_6652
func_6671 = relay.Function([var_6651,], output)
mod['func_6671'] = func_6671
mod = relay.transform.InferType()(mod)
var_6672 = relay.var("var_6672", dtype = "float64", shape = (4, 4, 16))#candidate|6672|(4, 4, 16)|var|float64
output = func_6671(var_6672)
func_6673 = relay.Function([var_6672], output)
mutated_mod['func_6673'] = func_6673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4127_call = mod.get_global_var('func_4127')
func_4129_call = mutated_mod.get_global_var('func_4129')
call_6720 = relay.TupleGetItem(func_4127_call(), 0)
call_6721 = relay.TupleGetItem(func_4129_call(), 0)
var_6722 = relay.var("var_6722", dtype = "bool", shape = (12, 2, 13))#candidate|6722|(12, 2, 13)|var|bool
bop_6723 = relay.mod(call_6720.astype('float32'), relay.reshape(var_6722.astype('float32'), relay.shape_of(call_6720))) # shape=(12, 2, 13)
bop_6726 = relay.mod(call_6721.astype('float32'), relay.reshape(var_6722.astype('float32'), relay.shape_of(call_6721))) # shape=(12, 2, 13)
uop_6729 = relay.sin(bop_6723.astype('float64')) # shape=(12, 2, 13)
uop_6731 = relay.sin(bop_6726.astype('float64')) # shape=(12, 2, 13)
output = uop_6729
output2 = uop_6731
func_6739 = relay.Function([var_6722,], output)
mod['func_6739'] = func_6739
mod = relay.transform.InferType()(mod)
mutated_mod['func_6739'] = func_6739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6740 = relay.var("var_6740", dtype = "bool", shape = (12, 2, 13))#candidate|6740|(12, 2, 13)|var|bool
func_6739_call = mutated_mod.get_global_var('func_6739')
call_6741 = func_6739_call(var_6740)
output = call_6741
func_6742 = relay.Function([var_6740], output)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_6776 = relay.TupleGetItem(func_3857_call(), 1)
call_6777 = relay.TupleGetItem(func_3859_call(), 1)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_6782 = relay.TupleGetItem(func_3291_call(), 0)
call_6783 = relay.TupleGetItem(func_3292_call(), 0)
output = relay.Tuple([call_6776,call_6782,])
output2 = relay.Tuple([call_6777,call_6783,])
func_6806 = relay.Function([], output)
mod['func_6806'] = func_6806
mod = relay.transform.InferType()(mod)
output = func_6806()
func_6807 = relay.Function([], output)
mutated_mod['func_6807'] = func_6807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mod.get_global_var('func_6456')
func_6458_call = mutated_mod.get_global_var('func_6458')
call_6811 = relay.TupleGetItem(func_6456_call(), 1)
call_6812 = relay.TupleGetItem(func_6458_call(), 1)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_6815 = relay.TupleGetItem(func_3291_call(), 0)
call_6816 = relay.TupleGetItem(func_3292_call(), 0)
var_6822 = relay.var("var_6822", dtype = "int32", shape = (14, 9, 2))#candidate|6822|(14, 9, 2)|var|int32
bop_6823 = relay.bitwise_and(call_6811.astype('int64'), relay.reshape(var_6822.astype('int64'), relay.shape_of(call_6811))) # shape=(14, 9, 2)
bop_6826 = relay.bitwise_and(call_6812.astype('int64'), relay.reshape(var_6822.astype('int64'), relay.shape_of(call_6812))) # shape=(14, 9, 2)
output = relay.Tuple([call_6815,bop_6823,])
output2 = relay.Tuple([call_6816,bop_6826,])
func_6833 = relay.Function([var_6822,], output)
mod['func_6833'] = func_6833
mod = relay.transform.InferType()(mod)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6834 = relay.var("var_6834", dtype = "int32", shape = (14, 9, 2))#candidate|6834|(14, 9, 2)|var|int32
func_6833_call = mutated_mod.get_global_var('func_6833')
call_6835 = func_6833_call(var_6834)
output = call_6835
func_6836 = relay.Function([var_6834], output)
mutated_mod['func_6836'] = func_6836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_6854 = func_3637_call()
call_6855 = func_3637_call()
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_6887 = relay.TupleGetItem(func_3675_call(), 1)
call_6888 = relay.TupleGetItem(func_3677_call(), 1)
func_6456_call = mod.get_global_var('func_6456')
func_6458_call = mutated_mod.get_global_var('func_6458')
call_6896 = relay.TupleGetItem(func_6456_call(), 3)
call_6897 = relay.TupleGetItem(func_6458_call(), 3)
func_4462_call = mod.get_global_var('func_4462')
func_4466_call = mutated_mod.get_global_var('func_4466')
const_6901 = relay.const([[-9.908772,-5.647565,-6.943436,-1.486199,1.857869,-0.306129,-0.324264,-7.826764,-3.899561,-6.419590,3.059982,3.058059,9.638379,-4.550700,3.636737,-1.002639,-6.629116,9.423771,7.436241,5.399634,-9.394869,9.900813,6.217657,-5.763874,0.030755,8.626667,-2.717385,9.057440,6.305112,0.696495,1.832157,-5.816664,-8.757978,-8.795541,4.876683,1.625441,-8.531473,-8.941869,-5.912540,8.630438,-1.652646,-2.505079,-1.326032,-1.203223,1.312808,-7.387274,5.526516,0.939165,0.423592,-4.816660,7.396815,-5.443968,-1.425990,6.832852,4.204613,-0.205298,-6.170474,-0.024175,-9.027876,-6.618798]], dtype = "float32")#candidate|6901|(1, 60)|const|float32
call_6900 = relay.TupleGetItem(func_4462_call(relay.reshape(const_6901.astype('float32'), [60,]), relay.reshape(call_6887.astype('int32'), [252,]), ), 0)
call_6902 = relay.TupleGetItem(func_4466_call(relay.reshape(const_6901.astype('float32'), [60,]), relay.reshape(call_6887.astype('int32'), [252,]), ), 0)
output = relay.Tuple([call_6854,call_6887,call_6896,call_6900,const_6901,])
output2 = relay.Tuple([call_6855,call_6888,call_6897,call_6902,const_6901,])
func_6913 = relay.Function([], output)
mod['func_6913'] = func_6913
mod = relay.transform.InferType()(mod)
output = func_6913()
func_6914 = relay.Function([], output)
mutated_mod['func_6914'] = func_6914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5210_call = mod.get_global_var('func_5210')
func_5212_call = mutated_mod.get_global_var('func_5212')
call_6961 = func_5210_call()
call_6962 = func_5210_call()
output = relay.Tuple([call_6961,])
output2 = relay.Tuple([call_6962,])
func_6965 = relay.Function([], output)
mod['func_6965'] = func_6965
mod = relay.transform.InferType()(mod)
output = func_6965()
func_6966 = relay.Function([], output)
mutated_mod['func_6966'] = func_6966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4651_call = mutated_mod.get_global_var('func_4651')
call_6967 = func_4650_call()
call_6968 = func_4650_call()
func_5210_call = mod.get_global_var('func_5210')
func_5212_call = mutated_mod.get_global_var('func_5212')
call_7010 = func_5210_call()
call_7011 = func_5210_call()
func_3575_call = mod.get_global_var('func_3575')
func_3580_call = mutated_mod.get_global_var('func_3580')
const_7022 = relay.const([[9.824094,-0.850177,4.462790,-4.459747,6.810016,-1.856886,1.318650,-7.733063,6.140421,-5.638264,5.100031,-9.269765,-4.053612,6.966375,-4.076142,4.957877,-9.979602,5.298693,-7.295081,-8.386261,1.502506,5.454361,-8.815429,3.939265,-0.167096,2.093042,-1.734884,-7.962267,-4.748772,7.521329,-1.777269,-1.165196,0.843676,-9.963316,6.208576,9.583996,3.084892,0.708599,-8.711749,7.114065,-1.325134,-5.474457,7.748671,2.866196,-6.364281,-7.013959,2.101674,1.009816,-5.816643,6.348125,-4.536144,8.078771,9.008140,4.666801,5.278447,5.220445,-0.748910,-4.631475,-5.047752,2.326615,-2.428630,-1.656578,-1.177772,-4.935206,2.147426,-9.208979,-3.951406,-0.002538,-9.142096,0.868324,-0.398223,-9.463722,9.945977,-0.632132,-3.345436,-6.484961,8.257353,0.688178,2.092699,9.224947,4.394753,-1.409758,1.134977,1.937476,1.101816,9.990089,1.753648,-2.938197,-7.958657,7.100100,-1.416480,2.467999,-8.953444,4.857986,6.953284,-3.786853,-2.251725,-9.843412,7.383571,0.515999,9.607508,5.481654,-9.187193,2.416963,-8.927976,-9.406409,-2.862928,0.843817,-4.142254,-4.709078,9.984261,-5.333024,-4.546013,5.908250,-8.789975,-3.489554,0.377157,7.644455,6.772068,-1.353445,1.870102,-7.460687,-7.307383,-5.054868,-1.627702,-6.136947,3.136720,8.243287,-6.551161,-7.307136,1.676993,-8.209391,-1.554992,3.065223,-1.874799,7.972534,-0.754007,9.680593,1.960845,9.590807,5.610628,4.734487,-4.931317,-8.959220,1.481476,6.463426,1.096588,4.513472,3.244101,0.272068,-8.805122,7.575869,-7.191077,-6.443671,-3.539614,7.182756,7.164593,4.213226,9.124574,-3.278325,-2.150827,3.349788,1.345753,7.070209,8.902028,-8.017695,3.172528,-3.292089,1.328601,-0.721058,-2.598370,7.789426,-4.341806,3.264389,-6.351524,2.167801,-7.145376,-9.260811,7.506962,-3.690659,-5.240319,8.960265,4.735739,4.084255,-8.727727,-1.622891,4.718470,-5.114578,-2.829703,4.069626,-5.662756,4.077290,2.973079,-3.986579,4.117699,-8.797547,-0.245257,-2.162635,1.765988,-9.665306,1.169513,9.544419,-9.536712,-8.354095,3.109598,8.595307,-6.376404,-4.722027,-6.823604,6.147893,-8.043808,3.315330,1.776833,-4.620480,6.774098,-4.690015,5.469253,5.890700,3.689757,3.768575,6.883519,-2.109661,7.086152,6.352522,-5.898024,-6.320662,-5.524182,4.725955,0.417427,2.263437,-7.334280,3.489607,4.251297,2.392866,-6.341222,5.678918,7.150401,-1.669888,1.019194,-9.416489,-4.268375,-7.809791,-9.389526,-6.021692,7.868192,-6.059113,4.963282,9.855505,-4.964934,8.448123,2.123610,-0.883254,1.907051,-1.586075,-4.991348,-2.082130,5.622997,-2.948776,-7.427071,7.383939,-6.277787,2.977902,0.729142,-0.740841,4.425706,-4.712577,-4.412792,3.794891,4.537831,-8.994961,-5.492375,-6.509975,7.634415,5.892055,9.911080,4.319481,-3.885344,8.970563,-6.108169,8.347649,-0.809887,-2.060036,-4.581404,-9.865100,0.565429,3.336642,9.246535,5.483995,-6.786645,-5.226786,6.210269,0.869953,-4.819217,5.153050,-2.877511,-5.068084,7.575088,-6.796186,-9.831682,5.977115,4.144957,2.613931,2.968362,-3.196124,6.564114,9.890928,-0.693900,-5.025135,-2.283179,1.809848,-5.094591,1.640467,5.242967,1.200488,-1.197579,4.643243,6.010627,-5.256259,-3.123707,8.394690,3.398822,-0.909035,6.311043,-0.144305,1.981279,1.412384,6.271152,2.864956,-4.695741,-9.492856,7.879107,-8.162555,-7.726637,3.617558,0.156819,-5.296450,-4.767734,9.786441,0.643553,4.061265,7.623432,-1.356716,6.228712,7.445651,-8.219048,-4.008443,-1.850937,-6.422432,5.306537,2.493760,-1.211194,5.446485,-7.884002,4.531469,-0.612100,-5.522042,4.860601,-1.253465,-9.473451,-6.367597,5.496618,3.727299,5.547469,-5.638568,3.191106,-0.174073,5.576082,-1.331593,-3.951782,2.100433,-9.609774,-8.019627,-1.140598,-3.962740,8.248420,4.191564,5.301103,-1.865025,-8.652446,3.934873,-8.667357,-6.187925,7.831728,6.762484,-1.289529,-2.637830,4.995359,-5.059451,9.282715,-7.971980,5.587126,4.261855,-3.425007,9.422430,-7.824014,9.468996,-5.268215,-9.227359,-0.873737,9.638470,-4.058540,-7.794607,3.156419,8.613804,3.494726,3.917914,2.042413,-3.190354,-1.045940,6.047360,-8.371165,0.175111,-2.411283,2.324000,7.103283,8.932162,-2.057880,8.260678,-4.149664,5.190016,2.657458,-5.790233,4.046434,-5.453059,-9.752819,6.108898,-7.960433,-0.443082,-6.136765,-0.412613,-6.709179,-6.851729,0.930761,-1.037166,-0.533381,7.076991,-8.585455,2.205521,-9.284415,3.333573,1.991872,-7.047581,3.575724,-0.855909,-6.005764,-1.708120,-0.064707,4.150943,-8.616015,0.084380,7.053323,-7.479066,-1.682148,-6.041141,-8.714213,3.350938,-6.033146,7.767898,-9.374908,1.036140,-4.786626,-9.268847,-5.514952,-2.313133,3.779735,-2.099122,6.976998,0.518117,-9.456636,-2.107351,0.835692,-8.452368,3.821346,-3.446335,5.743065,-7.849999,6.629933,-4.976705,0.655621,-0.135586,-8.784396,8.383563,-6.559802,2.033632,-1.251189,2.763448,3.905866,6.431639,0.041964,9.696561,-0.386557,3.752241,-9.677298,4.519016,-2.924175,-0.215905,-6.114078,-7.623838,-7.730092,1.719091,-2.459260,4.424050,-0.413450,-8.474858,-1.250235,-8.811034,-4.221339,-3.391450,6.789276,-1.917558,7.405050,-9.529830,-0.942012,-2.828264,-3.650932,-6.262060,-1.664678,3.980225,-4.170641,3.924255,8.375062,0.996672,3.232016,-7.146783,-3.206948,-3.033891,1.644706,3.433072,-1.945180,3.667555,-1.494342,7.864055,8.999081,7.892648,-2.762989,-2.076164,7.093833,8.709953,3.832638,1.171522,-6.910090,9.004038,3.380058,-2.748773,3.826846,-8.743925,5.294402,-4.731689,-3.041626,-7.694976,-6.257098,-5.165643,0.525453,-3.418095,3.551465,-6.834505,-6.572361,-6.339481,-8.890834,6.757574,-1.958739,5.550860,7.711284,-0.988345,-8.798015,-0.081882,5.073194,-0.618566,2.483049,8.109583,-8.801266,-7.266135,1.039097,-9.647269,3.024228,2.575879,-9.278318,8.228622,2.921977,6.971064,4.930430,-9.027397,6.018173,5.698710,-7.787588,9.824851,-9.507877,9.105007,-7.495325,6.677846,4.005604,5.604764,-2.490441,3.805772,-4.840827,1.058385,-2.827037,-2.418093,-9.740597,-7.713832,-7.931474,7.302127,-1.912869,6.571431,3.566556,-9.483269,7.035941,-5.675039,0.487126,5.029329,-3.657528,1.183342,7.734690,-3.562714,1.224649,-9.548783,9.510970,-1.240345,-2.158278,-9.613018,-7.404075,-3.479371,2.010291,3.753704,-2.267297,-5.096425,8.490368,9.355648,-6.811166,-0.620927,8.353817,2.227909,2.753525,-3.398460,4.446959,2.726260,9.844082,-4.383406,-7.995118,4.966347,-4.122094,9.670723,8.904037,-0.726238,5.171714,4.397414,8.405409,6.443814,-0.774693,-9.239549,-3.944347,-2.878307,8.789605,-5.933837,-2.606336,-2.125959,-7.389910,6.718087,5.778914,3.123131,-4.682959,9.573169,4.507680,-3.034082,-6.413791,-6.321503,-8.391221,-0.944206,4.420586,2.900818,2.070072,-1.522668,-8.733103,4.217253,-6.302258,-0.842612,-4.553965,-9.950407,-4.161868,4.670512,-5.994066,7.151589,-9.103447,-0.518515,0.869622,-1.594460,-3.256593,-4.549478,-3.783105,-3.517297,-3.357346,9.231666,-8.278939,-6.676951,6.546997,5.549016,3.254221,-6.065713,-7.263792,1.202377,0.136938,-8.334213,6.597055,-3.103440,3.704400,-9.652576,7.359789,-9.250727,3.364232,-6.261821,-8.174460,-9.025162,-3.736339,-9.084056,-8.773682,-3.185243,3.492992,7.531096,6.694607,-7.646162,-3.055742,-8.226694,-8.462260,7.383928,-6.973196,-8.748771,3.878112,-7.774356,-3.829805,-4.631039,5.779363,-7.238257,-0.348013,0.997580,2.735937,-1.005016,-4.459080,5.110224,4.921372,-2.805255,-4.582020,-5.525316,-5.455168,4.395840,4.207749,1.322960,2.017026,8.815645,4.329561,9.473874,-6.958841,-6.812477,9.716709,-8.918713,-0.739835,-9.112840,2.212642,-7.710974,7.930472,-5.788670,3.500999,2.462633,3.926862,-4.503957,0.357767,9.365964,0.876314,-5.662700,2.815340,4.174123,-0.120536,-3.252535,1.107888,7.525135,5.377933,1.749507,6.479998,8.738468,-9.178761,8.671865,5.419142,8.557219,-0.637830,2.018387,-4.013416,2.761972,-5.064864,0.058459,-8.637495,4.898304,-3.864885,-9.093527,7.959996,7.767435,-5.572481,-8.709276,8.232648,-2.841311,8.166686,-8.663074,6.046581,-0.952192,9.123137,3.457702,-2.427346,1.390108,9.022791,-0.221537,9.097494,-9.370508,-1.030652,-0.735021,4.014553,2.583023,-4.040102,-2.734882,0.723369,-8.985418,-9.844194,-7.622751,-4.864437,-1.703047,-3.684227,-3.023260,-4.348252,6.426203,4.628318,-2.905705,-8.437549,-8.079461,8.281100,-4.772034,8.293290,-4.531995,-5.911156,6.120713,-6.781092,6.663404,-8.377606,4.108908,-4.562957,-0.145181,-4.104517,-4.874014,-8.608563,3.987038,-2.162109,0.584562,-2.757659,7.505073,-4.244416,0.021376,-1.773437,5.624138,8.491464,0.548511,0.583837,5.730207,4.205412,0.105510,-3.393293,7.744434,-3.345311,0.617426,-8.195216,-0.369470,4.184602,-9.061799,-3.134934,-4.836180,-5.118655,7.448544,6.839352,8.877518,9.338234,7.747731,6.729627,-4.473562,4.717584,2.949056,-2.166856,-2.445656,2.733746,-1.561473,8.332776,8.414051,-4.885914,3.104544,-0.748517,-4.713199,3.482586,4.619878,5.438136,2.176748,7.856907,-4.258198,-1.092841,8.787879,2.577956,3.020039,5.255344,-8.201253,6.677837,8.778644,-9.351400,9.737248,9.753971,4.258138,-0.682135,6.841276,4.532340,-8.448433,0.845231,0.588334,9.070352,4.861420,-6.823066,-7.817408,2.633765,2.018215,-4.120573,-6.334584,1.600938,-3.964021,-9.744219,-3.114499,3.844726,7.146204,-2.756602,-4.065303,2.480309,-2.734181,2.615621,1.402475,2.289744,4.653009,-6.027166,6.426587,7.129668,7.528283,-9.342474,3.420975,-0.364662,-6.300764,1.555177,-7.765766,-6.569387,-9.604091,-5.558165,-6.740618,-6.829379,5.869173,3.648134,9.562154,-1.841289,-0.001448,-0.380673,-6.796944,-1.126638,4.727962,9.650900,-8.406898,2.112782,-4.416543,0.352786,1.311355,-8.438433,-1.081259,1.674744,-1.696080,-9.195454,-0.803810,-9.035162,-2.142001,4.443813,-4.383079,2.333057,-5.463714,-9.079357,-9.847189,-1.077462,5.683511,-4.670748,-0.855250,8.117600,0.727161,-4.596702,-9.891308,1.737274,1.158893,0.033505,2.676616,9.233712,2.039790,-6.305589,8.679537,2.198810,2.375924,-8.289441,7.674049,-8.596200,0.002046,8.067886,8.908993,-5.278760,7.525080,7.736085,2.094973,2.401288,-3.337718,-2.193592,-5.955854,-0.983251,-7.936949,0.777136,0.856745,-0.945248,-7.084849,-2.035448,-6.515714,0.553666,-0.297101,6.160722,1.042916,-8.722471,-5.646475,1.203395,-2.209391,6.516693,-2.216228,9.135678,-4.396322,-6.600610,9.759283,4.737777,-9.822386,9.756092,5.156748,-7.683004,2.670516,-0.928455,0.630094,-6.683962,2.603256,-7.159878,4.087860,0.126875,-4.557524,-3.633569,9.643176,7.628692,-7.586121,-1.863535,5.812776,-3.574475,-2.160773],[2.809747,-7.815622,8.435031,8.133137,1.139022,7.248403,-6.969408,8.537705,8.292877,-9.287524,-7.918500,-5.906054,-5.293892,2.880256,-4.850758,6.598894,3.562637,-8.791264,-8.500331,2.170688,-1.325086,-4.689693,-6.971604,7.196935,-2.102100,-6.008407,0.506614,-2.666710,4.455561,-4.256959,8.055168,8.896185,-5.604574,1.937408,4.569495,-1.470969,-5.191680,-4.776645,-2.661985,-4.411781,-8.050120,6.390465,2.983089,0.236455,6.076925,4.520677,-4.743641,-1.387084,-1.692717,7.376011,-5.519753,0.529862,-2.931798,3.500664,8.072843,-9.427997,-9.351318,9.963084,4.608614,-9.402202,3.033498,6.037202,-4.571271,-7.553655,0.231020,-5.526312,5.778095,-6.205544,-9.794281,4.882640,-5.918002,9.459684,9.641284,-0.901308,2.123027,-7.884705,-7.466845,-7.569299,1.197378,6.490304,-1.700304,-7.769788,8.597980,-5.662903,-1.088184,-4.345661,5.494633,4.405664,-2.660364,2.944573,1.734163,-2.017401,3.616242,-6.434840,2.229265,7.004056,-4.879081,-8.634936,0.847260,6.347490,-7.545723,-3.642398,6.132254,-0.976079,1.367250,6.259003,5.389183,8.009448,3.810582,5.850501,3.000809,-6.699566,-5.020437,-8.863079,0.609083,2.943473,1.893363,6.148550,-8.049513,-1.660667,7.039030,-4.776964,-9.813585,3.723172,1.373542,-4.652740,-2.056728,-1.351710,2.253329,-6.704063,-1.313635,-0.296988,3.633379,-9.696543,-5.667837,5.822560,0.864965,-6.253507,6.543702,0.794096,8.659154,-2.030581,-5.771530,-1.841925,7.264077,1.735207,5.946384,4.566327,4.813024,-3.885404,-7.985681,-8.703811,4.403768,2.218224,-5.417320,9.007520,5.623703,5.715944,3.329211,2.962289,-9.162049,-0.172654,4.520702,-9.530171,-5.894431,-2.648021,7.906711,-1.130009,4.424635,8.801374,-7.309840,6.695030,-7.280955,8.774529,0.210504,-9.280862,9.187038,4.501156,-0.210367,-4.254475,-0.215700,-1.762164,4.755209,-6.755684,-0.503679,-9.342263,-0.362147,-7.223354,2.132990,-5.682024,0.451236,-0.381179,-0.464674,6.199111,-2.724093,1.428083,-1.141619,-1.451916,-5.847514,-7.400032,-1.304794,6.242599,8.598606,-7.198107,9.417000,8.624741,5.274468,-1.873313,6.917709,2.601552,3.447842,-4.429974,-0.917236,4.143240,3.006141,6.023199,-1.274696,-1.073026,3.667592,-6.214484,-8.088917,0.934396,-7.175249,6.645740,3.470604,2.359868,2.759300,-5.389572,-3.375685,-1.165893,2.619805,7.611605,-8.085587,7.952004,-1.091075,-5.620899,0.430724,4.535339,8.620507,0.992773,8.035263,5.730964,-5.437854,-9.844432,7.271383,-3.431262,-4.794319,6.655322,-0.616611,-5.085758,-0.755769,5.386399,-3.863025,7.717828,6.159127,-0.068886,2.319371,6.006416,4.574387,-6.085342,-9.062260,-4.969409,0.373005,2.660459,-8.863405,-4.612523,-7.304940,9.356338,-1.516129,8.916567,5.100437,-7.696028,4.848655,4.599300,4.359140,-6.990824,-6.376533,0.622652,-1.332197,4.683760,-1.610233,5.020293,6.338916,-6.489834,-2.822503,2.995288,3.517391,-7.360865,6.304474,-9.542724,-3.841227,-2.453025,2.495943,-5.081887,-7.491624,-5.750888,3.081833,-8.497012,-1.264954,9.385543,-0.276808,1.515195,-5.772994,-5.162034,0.590649,8.980555,1.362636,-1.801749,7.085588,-7.545279,1.100546,-2.062751,7.563047,1.552275,5.096174,-1.612016,-9.803701,-8.428063,9.275350,-1.105807,7.118714,-0.893577,-0.378944,0.614116,9.830344,4.620506,-7.099289,-8.353935,-6.037427,-3.348997,-7.546460,0.038515,-7.313037,1.277898,8.159544,-1.934648,4.767997,7.702420,4.539689,0.516553,0.161269,2.816567,0.479583,7.875040,-1.850156,8.476386,-7.242184,2.011807,-3.203071,-2.117192,-6.367043,-4.005120,-7.165119,0.108773,-0.425685,-5.070162,-3.915389,-9.939847,5.063646,3.613287,7.131827,-6.341592,-5.475241,-8.504030,7.770624,-7.785221,7.417073,5.628218,-2.363073,3.417933,-5.648476,-6.084673,-1.377773,-1.654555,-4.062418,3.863095,-7.592918,1.593428,9.242152,-8.396448,8.683198,-8.146076,8.395857,-2.143985,5.810043,6.490194,9.848370,-1.187663,-5.135521,-6.713956,-0.408153,-1.410437,5.222924,6.137696,1.252856,5.527945,-2.164005,1.984030,-3.982450,-2.257087,5.155292,2.322882,7.587595,-8.635002,-2.465774,5.937483,-5.117089,4.232550,1.218876,-5.915850,-4.748818,5.698433,-8.890219,2.370272,-8.914978,-1.850227,7.081250,2.966811,4.882732,-1.364323,-7.241078,-1.763675,9.696595,-5.984559,0.551238,3.846854,9.230120,-3.895925,6.507210,-6.735094,7.280240,0.694585,-1.885658,-5.242906,7.027967,8.847164,-8.377290,-7.773792,5.512991,-0.515682,-9.349970,7.528465,6.767596,0.263247,4.193856,-4.089828,-2.230512,2.367290,-6.721577,-1.541029,-3.393009,2.007569,6.506526,-7.067317,1.904090,2.475153,-1.338492,8.383002,2.520749,-7.046426,-0.951412,1.740764,-5.743626,6.506984,-3.946895,-3.022802,8.921612,6.022893,-3.233876,0.005375,3.762584,0.572603,4.263167,2.958738,4.433518,2.820388,-0.174668,-6.162059,3.894720,-4.386683,4.986643,-3.336394,-3.804915,5.809960,7.996939,-9.906726,-9.931321,-6.262270,-0.238323,-0.891066,5.174667,7.825218,-4.115235,7.870242,4.825183,-5.696842,-6.830390,9.067985,-7.327143,0.516837,-6.477076,-1.535731,7.350916,-5.354268,-8.663521,9.523284,1.180606,-2.062342,-1.743347,8.897702,0.859808,-9.280500,3.298603,-7.490562,9.789477,1.416228,-4.762682,-0.401013,6.013974,5.459595,6.717302,6.644443,-7.558779,-2.578471,1.771094,-3.041054,8.797840,5.557933,1.508919,4.325158,7.434313,-7.319604,-1.056155,-5.995345,3.995861,-5.837459,-3.268051,2.839046,2.075740,-4.871122,-9.271369,0.558696,0.751254,-5.162465,-6.995641,6.803903,-3.903853,0.167319,-3.446629,-1.716429,-2.080235,-2.336022,2.522708,2.902908,-8.832132,9.730775,-5.376746,-3.809575,3.237898,-9.582725,-4.172923,-5.116902,4.615703,-3.523246,2.775464,-2.351312,1.980162,-3.324427,-9.957885,0.167167,5.991076,1.737147,8.656242,-6.669526,-3.928102,-7.268134,-0.363624,-2.032155,2.863406,-2.475051,1.597238,-7.732037,6.330434,2.553893,-4.895141,-9.596903,-6.661046,2.107421,-7.537219,-8.735085,3.700606,2.180273,3.663523,4.450953,-0.955981,7.037548,-2.704243,-0.568457,1.253127,-1.872303,-6.880734,9.951668,-0.208295,-9.578993,-3.887287,-4.095344,-6.508011,-9.536338,3.342036,-0.158004,1.768281,2.092547,9.992874,0.502021,-0.739028,-2.341177,5.605098,8.617551,-1.716203,-5.361517,-1.375911,-2.389281,-8.355612,8.158224,1.044574,-2.759494,1.123262,-3.314230,2.158880,4.115368,8.320529,2.745668,-4.415054,9.596239,-3.841259,6.168627,-4.631542,8.871971,-8.863923,-5.580511,-3.348240,-2.930273,-8.194908,-0.186651,0.306195,6.903706,9.583640,0.242485,8.414085,7.972966,-9.841060,2.439560,-4.484033,7.173716,9.632199,-3.654358,-7.548956,5.134920,-8.875784,3.692157,-1.960014,-8.919116,8.310251,1.593247,-1.528235,-9.994478,5.129422,4.262280,3.231365,5.693938,-0.102245,-9.740767,-1.905801,-4.437975,-2.223831,-3.303048,-1.699439,-9.118526,-9.093761,2.273456,-5.804938,3.346540,4.354166,-1.479028,-2.491259,7.776268,7.506829,7.024719,2.566448,-1.483733,9.871521,-3.614979,-7.849644,9.785033,-5.653652,3.193514,6.926964,1.709989,-6.720048,0.741258,6.156747,8.334747,-8.241534,-6.134245,-6.486644,0.651358,-0.332948,-9.689504,4.477791,9.367940,-1.263061,-3.965103,-6.536780,-2.261317,3.889570,2.028015,-4.305505,-1.846461,5.325272,-9.292591,3.444369,-1.110874,-8.553695,-2.565747,-9.068915,4.612529,0.592650,-1.879636,9.361537,-9.832699,-9.811500,2.310212,-1.761648,-9.898821,6.160110,-8.813171,-4.043939,-7.795277,6.017788,-0.663310,-9.395524,-5.286220,-3.141731,2.442344,7.734138,-4.099877,9.265798,-3.783397,6.154746,-5.632997,1.625655,-7.841211,1.841083,-0.040847,9.292097,-1.204991,6.074874,3.232571,-9.550806,1.355773,-3.707358,4.391276,-5.008924,-3.353714,-0.248366,-4.895524,6.490393,-0.043398,0.408185,8.961562,1.037668,-5.049433,-0.333079,-5.544553,7.076684,-7.374216,-7.211421,5.324643,0.684805,-9.024758,-3.033779,1.326467,5.008992,-2.846276,0.988542,-3.468555,-6.714968,5.865187,-3.618016,3.170980,5.966839,-7.369240,6.072886,-3.133320,0.374265,7.882881,8.764280,8.338471,-2.956936,6.280112,7.032589,-4.994161,3.326692,-6.736515,-9.842663,5.851850,1.920466,6.179664,2.199431,2.754433,-7.973202,4.055139,5.176553,3.880203,-7.128180,9.230143,-5.435199,3.422905,0.783454,0.998412,5.951461,-4.997854,-9.934691,-0.977581,0.785542,-8.698388,-8.710818,-6.597526,-4.266368,9.676602,-9.317628,-1.351927,-1.937559,-1.699374,1.061513,0.820706,-6.286946,5.864911,3.628280,7.066594,0.488533,1.341563,8.933565,-4.710583,7.392332,-2.259337,-8.140300,-8.535566,1.243658,7.650752,-8.771013,7.782310,-5.799422,-5.374248,-8.956671,-9.847481,0.956737,6.515474,8.472270,9.933852,2.470227,7.451239,-7.754152,8.600172,-3.050297,2.570176,5.862387,-7.764103,0.744787,-9.577466,-6.220129,-4.687308,-9.970970,-4.335551,2.895098,-0.199793,7.472308,-1.645925,3.498014,1.425605,-7.030084,-6.172363,-3.162953,6.204456,2.075389,6.517462,1.538595,-4.498438,-2.360079,5.383464,-1.393165,-4.841706,1.757865,0.801636,-3.424289,6.813011,7.324315,7.157494,-5.523339,-1.291266,-0.159527,0.625793,0.777879,5.645906,-5.824783,5.728570,-6.939461,-5.736553,-7.538277,-0.151274,7.598925,-4.269438,6.872312,-9.103904,-8.635623,-2.373267,-8.115940,-1.465824,2.675442,6.854711,7.470104,-0.647547,7.489289,5.697942,-5.431482,-5.774270,9.240678,9.923363,-0.908267,-9.632181,-0.608099,4.936350,-6.835282,-2.724283,4.397801,3.161858,-3.285227,-4.238928,4.205658,3.778337,3.085197,8.893648,-6.669163,-2.696909,-0.870679,-4.055907,2.866213,3.366457,0.886598,1.994182,-0.448793,4.461280,-8.147276,-9.109474,-3.408322,2.174731,2.110173,-5.261873,1.860206,3.448530,-2.850753,-3.415741,5.714444,9.504015,1.424957,-9.152441,-6.332876,-7.981090,4.127143,-7.052399,9.325030,-9.664164,-3.984284,-1.851195,5.460751,1.755346,1.808467,6.069730,1.640222,-7.620565,3.402252,-3.748444,-2.766702,-6.746309,2.713492,8.478090,-4.705653,-1.259185,7.170331,1.466298,-3.779318,-8.812258,-2.432433,-4.502571,-9.397347,2.353729,7.214544,4.838100,-4.610650,-9.780495,-9.949674,-1.872944,8.802477,6.922937,-6.229737,9.838301,4.941867,-6.486030,1.304947,-5.870448,7.442961,7.659696,1.823748,5.300403,-8.480361,-3.934013,4.331319,3.498891,1.415769,7.880094,6.267385,-0.643422,-8.659794,8.757816,6.941307,-1.754703,0.082505,-1.097710,-6.775498,-6.081932,5.080897,-7.711961,-5.644438,6.256269,-9.837358,5.208240,8.122317,6.452101,-7.065703,0.794777,-6.515128,7.333062,4.610736,-5.185394,3.355607,-7.359907,4.717792,3.288398,-9.126009,8.933025,-4.651457,1.381859,-7.818630,5.020385,4.547096,7.836780]], dtype = "float64")#candidate|7022|(2, 1056)|const|float64
var_7023 = relay.var("var_7023", dtype = "float64", shape = (2080,))#candidate|7023|(2080,)|var|float64
var_7024 = relay.var("var_7024", dtype = "float64", shape = (182, 1))#candidate|7024|(182, 1)|var|float64
call_7021 = relay.TupleGetItem(func_3575_call(relay.reshape(call_6967.astype('bool'), [12, 2, 13]), relay.reshape(const_7022.astype('float64'), [2112,]), relay.reshape(var_7023.astype('float64'), [1, 2080]), relay.reshape(var_7024.astype('float64'), [182,]), ), 3)
call_7025 = relay.TupleGetItem(func_3580_call(relay.reshape(call_6967.astype('bool'), [12, 2, 13]), relay.reshape(const_7022.astype('float64'), [2112,]), relay.reshape(var_7023.astype('float64'), [1, 2080]), relay.reshape(var_7024.astype('float64'), [182,]), ), 3)
var_7043 = relay.var("var_7043", dtype = "float64", shape = (182, 14))#candidate|7043|(182, 14)|var|float64
bop_7044 = relay.divide(var_7024.astype('float64'), var_7043.astype('float64')) # shape=(182, 14)
output = relay.Tuple([call_6967,call_7010,call_7021,const_7022,var_7023,bop_7044,])
output2 = relay.Tuple([call_6968,call_7011,call_7025,const_7022,var_7023,bop_7044,])
func_7047 = relay.Function([var_7023,var_7024,var_7043,], output)
mod['func_7047'] = func_7047
mod = relay.transform.InferType()(mod)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7047_call = mutated_mod.get_global_var('func_7047')
var_7049 = relay.var("var_7049", dtype = "float64", shape = (2080,))#candidate|7049|(2080,)|var|float64
var_7050 = relay.var("var_7050", dtype = "float64", shape = (182, 1))#candidate|7050|(182, 1)|var|float64
var_7051 = relay.var("var_7051", dtype = "float64", shape = (182, 14))#candidate|7051|(182, 14)|var|float64
call_7048 = func_7047_call(var_7049,var_7050,var_7051,)
output = call_7048
func_7052 = relay.Function([var_7049,var_7050,var_7051,], output)
mutated_mod['func_7052'] = func_7052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6431_call = mod.get_global_var('func_6431')
func_6433_call = mutated_mod.get_global_var('func_6433')
call_7106 = relay.TupleGetItem(func_6431_call(), 0)
call_7107 = relay.TupleGetItem(func_6433_call(), 0)
output = call_7106
output2 = call_7107
func_7141 = relay.Function([], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
output = func_7141()
func_7142 = relay.Function([], output)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6341_call = mod.get_global_var('func_6341')
func_6343_call = mutated_mod.get_global_var('func_6343')
call_7186 = relay.TupleGetItem(func_6341_call(), 0)
call_7187 = relay.TupleGetItem(func_6343_call(), 0)
output = relay.Tuple([call_7186,])
output2 = relay.Tuple([call_7187,])
func_7194 = relay.Function([], output)
mod['func_7194'] = func_7194
mod = relay.transform.InferType()(mod)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7194_call = mutated_mod.get_global_var('func_7194')
call_7195 = func_7194_call()
output = call_7195
func_7196 = relay.Function([], output)
mutated_mod['func_7196'] = func_7196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6965_call = mod.get_global_var('func_6965')
func_6966_call = mutated_mod.get_global_var('func_6966')
call_7197 = relay.TupleGetItem(func_6965_call(), 0)
call_7198 = relay.TupleGetItem(func_6966_call(), 0)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_7213 = func_3637_call()
call_7214 = func_3637_call()
func_4462_call = mod.get_global_var('func_4462')
func_4466_call = mutated_mod.get_global_var('func_4466')
const_7216 = relay.const([8.386935,2.265771,-2.727906,1.786273,2.253341,9.757492,9.716403,-4.717396,-1.049572,-8.046155,4.058898,0.560921,-6.373690,-1.932326,-2.775402,3.812089,-6.032201,-7.211377,-1.314075,0.343795,6.503869,6.011846,-6.974351,-5.289291,0.548690,-0.296000,-2.812512,0.728520,-6.045233,-0.901829,3.453124,-1.891204,-8.529913,-5.217135,-5.329870,-0.262678,-1.608332,1.270655,-9.985553,5.960539,-3.931106,-8.623700,2.693200,8.566530,3.046750,5.954596,-4.487533,-8.511209,-1.661219,0.988792,-1.592166,-0.985735,7.246269,-1.097510,4.414026,-1.278994,2.427303,-2.428084,-2.562708,-4.049485], dtype = "float32")#candidate|7216|(60,)|const|float32
const_7217 = relay.const([10,6,-10,9,4,10,-1,-3,-4,8,1,8,6,3,2,9,1,4,-10,5,2,5,10,2,-6,-4,10,5,7,1,-1,-1,-8,4,-8,1,-2,-1,4,-6,6,5,4,-1,9,-10,4,3,-4,9,-5,2,-5,-10,10,9,-8,3,6,10,-8,8,-2,4,-7,10,1,1,-8,-7,9,-6,10,-6,5,-4,8,5,-4,-6,1,-4,9,-8,-6,-5,1,-9,-3,9,-5,-1,6,5,-6,-2,-8,-9,10,3,-2,-1,2,-4,-9,2,-8,8,-10,4,5,-3,2,1,-9,8,-5,-4,10,-1,-1,-4,-6,4,7,-4,-6,5,-10,10,3,1,-10,6,-1,1,-1,-4,7,-5,-8,7,7,-1,-8,-4,-2,10,10,-2,-4,4,7,-4,-5,-9,7,6,7,1,-8,-8,-2,2,8,-4,8,10,7,10,-3,5,-4,-6,-8,-6,-3,-9,-5,-8,7,-7,-9,10,1,8,-8,3,-3,3,-7,-8,-3,7,9,3,7,-1,-7,2,1,-1,4,3,5,9,-2,2,5,5,5,10,-10,-10,-1,4,-6,-3,10,-8,-9,-7,-3,8,8,-1,-3,-9,-1,-9,-3,4,-9,8,10,-4,-2,-2,10,4,-5,-3,8,-1,-10,1,5,-3,-2,-6,8,3], dtype = "int32")#candidate|7217|(252,)|const|int32
call_7215 = relay.TupleGetItem(func_4462_call(relay.reshape(const_7216.astype('float32'), [60,]), relay.reshape(const_7217.astype('int32'), [252,]), ), 3)
call_7218 = relay.TupleGetItem(func_4466_call(relay.reshape(const_7216.astype('float32'), [60,]), relay.reshape(const_7217.astype('int32'), [252,]), ), 3)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_7233 = relay.TupleGetItem(func_3278_call(), 0)
call_7234 = relay.TupleGetItem(func_3279_call(), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_7240 = func_3654_call(relay.reshape(call_7213.astype('bool'), [12, 2, 13]))
call_7241 = func_3654_call(relay.reshape(call_7213.astype('bool'), [12, 2, 13]))
uop_7242 = relay.cos(call_7215.astype('float32')) # shape=(1080,)
uop_7244 = relay.cos(call_7218.astype('float32')) # shape=(1080,)
output = relay.Tuple([call_7197,call_7213,const_7216,const_7217,call_7233,call_7240,uop_7242,])
output2 = relay.Tuple([call_7198,call_7214,const_7216,const_7217,call_7234,call_7241,uop_7244,])
func_7249 = relay.Function([], output)
mod['func_7249'] = func_7249
mod = relay.transform.InferType()(mod)
mutated_mod['func_7249'] = func_7249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7249_call = mutated_mod.get_global_var('func_7249')
call_7250 = func_7249_call()
output = call_7250
func_7251 = relay.Function([], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3278_call = mod.get_global_var('func_3278')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_7257 = relay.TupleGetItem(func_3278_call(), 0)
call_7258 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([call_7257,])
output2 = relay.Tuple([call_7258,])
func_7259 = relay.Function([], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
output = func_7259()
func_7260 = relay.Function([], output)
mutated_mod['func_7260'] = func_7260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6230_call = mod.get_global_var('func_6230')
func_6232_call = mutated_mod.get_global_var('func_6232')
call_7292 = relay.TupleGetItem(func_6230_call(), 0)
call_7293 = relay.TupleGetItem(func_6232_call(), 0)
output = call_7292
output2 = call_7293
func_7301 = relay.Function([], output)
mod['func_7301'] = func_7301
mod = relay.transform.InferType()(mod)
output = func_7301()
func_7302 = relay.Function([], output)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7383 = relay.const([[[-1.520435,9.661727],[-7.364172,3.050252],[-3.517531,-1.559786],[-0.798344,9.291530],[9.278345,-5.896701],[7.695820,4.021196],[2.154253,-4.491275],[2.836378,-3.143627],[-6.165114,-1.279882],[-0.454548,-8.602390],[-6.466422,9.447015]],[[-0.391255,-7.036792],[-0.484719,8.043669],[6.990163,-9.404565],[8.478178,-0.566630],[-2.788965,6.587984],[-7.648732,4.244039],[0.366040,-3.177755],[-8.703761,0.331185],[-0.990892,6.413023],[-0.774932,-5.074586],[0.278809,2.860191]],[[7.098856,7.570252],[-5.166141,5.817611],[-7.927499,2.298053],[-4.783923,5.165501],[9.768192,2.078272],[4.300411,5.380973],[8.142460,4.070530],[-4.402511,-0.757248],[0.890144,-6.700960],[-2.524871,-8.076663],[-2.094888,-7.726366]],[[8.549700,-2.428592],[-5.181447,-3.759585],[-3.294063,-5.039362],[-1.282338,-9.199892],[-8.846570,-6.805460],[-2.845556,0.925579],[-2.223721,9.520006],[4.907305,6.546106],[0.158626,-8.741907],[-3.136131,3.474790],[-5.163907,-1.738042]],[[-5.046271,0.217747],[2.782476,-8.095075],[-5.659873,-0.201221],[2.245339,-9.768355],[-7.552448,-1.015814],[2.105234,7.739990],[7.639040,-8.489073],[-5.112076,-3.845946],[5.569770,6.647342],[-2.439612,-4.071158],[6.957289,9.873357]],[[-2.468888,-2.041767],[-9.131473,-9.258157],[9.430723,8.264609],[5.007603,-9.974358],[-8.879073,-6.342441],[-7.662630,5.163189],[8.766273,-7.557988],[-3.668923,5.681991],[1.332044,5.798371],[-5.512779,1.702679],[-0.213149,3.885086]],[[-2.542100,4.109522],[-5.379090,-6.002939],[-7.481957,2.274428],[7.312371,-1.874986],[-0.427488,-3.234198],[7.581582,5.957489],[9.378470,0.807101],[4.374910,1.815858],[-3.933971,-5.083294],[-6.713555,-1.970385],[-5.496346,-2.914287]],[[7.591579,-8.713176],[0.953493,4.869753],[-1.517257,-1.080731],[9.363527,3.991699],[-7.904356,-0.471651],[-8.993762,-0.574079],[8.520274,9.570654],[-2.353634,5.606813],[-8.640032,2.198380],[-6.805241,3.793864],[8.677269,-6.818739]],[[3.474437,2.417539],[8.638100,9.923455],[4.802389,-1.026112],[-7.167180,-7.864401],[-9.256580,-2.092047],[4.057802,-5.682668],[-7.644439,6.118624],[7.418378,-1.583586],[5.660015,8.101328],[8.268458,-5.525334],[-6.299343,0.535198]],[[-5.398574,1.393457],[8.295900,-6.472717],[-3.195428,-4.361898],[-3.297006,-9.831206],[2.216816,-8.164000],[0.988560,5.960710],[-6.605463,4.935800],[7.173245,6.749409],[-2.820024,-3.670703],[-3.149995,3.056920],[2.272031,8.332165]],[[9.211401,1.972782],[-1.140100,8.113588],[5.585190,-9.442898],[8.196513,-2.792531],[-1.155816,-2.025729],[7.201158,-0.111927],[3.472630,-4.515605],[9.401691,-8.465716],[4.052639,-2.489738],[-8.140174,3.529685],[-4.312310,6.629023]],[[9.244455,-6.045281],[-2.687413,8.534501],[7.833225,4.080111],[2.822716,1.468263],[-9.691886,5.692518],[-0.308389,9.267163],[2.603868,-9.053120],[5.966803,0.229430],[-5.043101,-9.142754],[6.896618,-1.348034],[-4.095143,2.960900]],[[8.837503,-8.099443],[6.738644,2.871879],[8.421775,-2.711237],[-3.166278,2.313490],[-7.824905,-8.689918],[-1.164341,6.303051],[-4.720719,9.586830],[-6.420924,-8.508252],[2.449005,6.823008],[-1.805747,-8.294169],[2.312008,7.509167]]], dtype = "float64")#candidate|7383|(13, 11, 2)|const|float64
uop_7384 = relay.erf(const_7383.astype('float64')) # shape=(13, 11, 2)
func_4630_call = mod.get_global_var('func_4630')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_7387 = relay.TupleGetItem(func_4630_call(), 0)
call_7388 = relay.TupleGetItem(func_4631_call(), 0)
bop_7400 = relay.floor_divide(uop_7384.astype('float32'), relay.reshape(const_7383.astype('float32'), relay.shape_of(uop_7384))) # shape=(13, 11, 2)
func_5782_call = mod.get_global_var('func_5782')
func_5785_call = mutated_mod.get_global_var('func_5785')
const_7424 = relay.const([7,3,-9,-4,-2,10,-3,-3,2,1,-8,-9,10,-10,-8,-2,-2,-1,-1,-9,3,-5,4,5,3,-10,-8,2,4,-9,-10,7,6,-4,-3,2,-2,2,6,4,7,2,4,-5,7,-1,5,-8,6,-7,-5,-6,-5,5,-8,-1,-4,2,7,6,-1,1,-5,-6,3,3,-2,6,-9,-9,9,-4,2,-1,-3,-3,4,-10,-4,-3,10,6,-4,9,3,-10,7,7,10,-10,-5,-9,8,-9,6,1,7,-5,-10,-4,-2,9,-10,1,-4,-3,6,7,1,-6,7,2,7,-5,-4,1,-3,7,9,-3,1,-4,-10,-8,-7,10,4,-8,-9,-9,1,-9,2,-8,-4,-4,9,-9,-8,-9,-5,-1,-1,1,3,5,10,8,9,-5,-9,9,8,6,-9,3,4,-3,4,-6,-4,10,-4,7,4,-8,2,2,5,6,-5,-8,-4,5,-4,4,10,3,-2,-7,4,-3,3,6,5,2,2,10,-10,3,-6,4,-3,-9,-9,3,-2,-10,2,-2,8,7,-5,-6,-2,1,-10,-3,1,-7,-8,4,7,-4,-9,-5,10,9,-9,-10,-5,-8,-5,-7,-10,-9,-9,10,-6,-4,-9,-2,-3,4,-5,4,5,-5,10,9,10,-2,-10,4,5,8,9,2,-10,-3,-1,5], dtype = "int32")#candidate|7424|(252,)|const|int32
call_7423 = relay.TupleGetItem(func_5782_call(relay.reshape(call_7387.astype('bool'), [12, 2, 13]), relay.reshape(const_7424.astype('int32'), [252,]), ), 1)
call_7425 = relay.TupleGetItem(func_5785_call(relay.reshape(call_7387.astype('bool'), [12, 2, 13]), relay.reshape(const_7424.astype('int32'), [252,]), ), 1)
func_4514_call = mod.get_global_var('func_4514')
func_4515_call = mutated_mod.get_global_var('func_4515')
call_7432 = func_4514_call()
call_7433 = func_4514_call()
output = relay.Tuple([call_7387,bop_7400,call_7423,const_7424,call_7432,])
output2 = relay.Tuple([call_7388,bop_7400,call_7425,const_7424,call_7433,])
func_7439 = relay.Function([], output)
mod['func_7439'] = func_7439
mod = relay.transform.InferType()(mod)
output = func_7439()
func_7440 = relay.Function([], output)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7452 = relay.var("var_7452", dtype = "float32", shape = (6, 3, 1))#candidate|7452|(6, 3, 1)|var|float32
uop_7453 = relay.atanh(var_7452.astype('float32')) # shape=(6, 3, 1)
bop_7466 = relay.left_shift(var_7452.astype('uint16'), relay.reshape(uop_7453.astype('uint16'), relay.shape_of(var_7452))) # shape=(6, 3, 1)
func_2598_call = mod.get_global_var('func_2598')
func_2602_call = mutated_mod.get_global_var('func_2602')
var_7470 = relay.var("var_7470", dtype = "uint32", shape = ())#candidate|7470|()|var|uint32
var_7471 = relay.var("var_7471", dtype = "uint32", shape = (512,))#candidate|7471|(512,)|var|uint32
call_7469 = relay.TupleGetItem(func_2598_call(relay.reshape(var_7470.astype('uint32'), []), relay.reshape(var_7471.astype('uint32'), [16, 8, 4]), ), 0)
call_7472 = relay.TupleGetItem(func_2602_call(relay.reshape(var_7470.astype('uint32'), []), relay.reshape(var_7471.astype('uint32'), [16, 8, 4]), ), 0)
uop_7477 = relay.acos(uop_7453.astype('float64')) # shape=(6, 3, 1)
func_6548_call = mod.get_global_var('func_6548')
func_6550_call = mutated_mod.get_global_var('func_6550')
call_7483 = func_6548_call()
call_7484 = func_6548_call()
bop_7487 = relay.less_equal(var_7470.astype('bool'), uop_7453.astype('bool')) # shape=(6, 3, 1)
func_2598_call = mod.get_global_var('func_2598')
func_2602_call = mutated_mod.get_global_var('func_2602')
call_7494 = relay.TupleGetItem(func_2598_call(relay.reshape(var_7470.astype('uint32'), []), relay.reshape(call_7469.astype('uint32'), [16, 8, 4]), ), 0)
call_7495 = relay.TupleGetItem(func_2602_call(relay.reshape(var_7470.astype('uint32'), []), relay.reshape(call_7469.astype('uint32'), [16, 8, 4]), ), 0)
output = relay.Tuple([bop_7466,call_7469,var_7471,uop_7477,call_7483,bop_7487,call_7494,])
output2 = relay.Tuple([bop_7466,call_7472,var_7471,uop_7477,call_7484,bop_7487,call_7495,])
func_7502 = relay.Function([var_7452,var_7470,var_7471,], output)
mod['func_7502'] = func_7502
mod = relay.transform.InferType()(mod)
var_7503 = relay.var("var_7503", dtype = "float32", shape = (6, 3, 1))#candidate|7503|(6, 3, 1)|var|float32
var_7504 = relay.var("var_7504", dtype = "uint32", shape = ())#candidate|7504|()|var|uint32
var_7505 = relay.var("var_7505", dtype = "uint32", shape = (512,))#candidate|7505|(512,)|var|uint32
output = func_7502(var_7503,var_7504,var_7505,)
func_7506 = relay.Function([var_7503,var_7504,var_7505,], output)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4080_call = mod.get_global_var('func_4080')
func_4082_call = mutated_mod.get_global_var('func_4082')
call_7508 = relay.TupleGetItem(func_4080_call(), 0)
call_7509 = relay.TupleGetItem(func_4082_call(), 0)
func_5990_call = mod.get_global_var('func_5990')
func_5992_call = mutated_mod.get_global_var('func_5992')
const_7514 = relay.const([3,4,-1,9,7,-10,-5,7,-3,4,-8,-7,-10,10,10,-7,-5,2,-9,5,9,9,8,-1,-8,4,-10,1,-3,-5,2,-5,4,5,10,-1,7,7,5,-6,-5,-3,1,-4,-6,-9,-2,7,4,1,-4,-7,2,4,-3,4,-1,2,10,-10,6,5,6,6,-6,7,9,8,-9,-1,-3,10,-2,7,10,-8,-9,-4,7,-6,-9,2,7,1,4,-8,-7,-10,3,-2,-7,1,5,10,7,6,8,-6,-8,3,-9,9,-9,6,8,-9,6,8,7,-3,3,2,7,-10,-5,7,4,-9,-6,-7,10,-7,7,-10,-3,-1,-4,2,1,6,-3,-9,10,-1,2,1,5,-10,3,-7], dtype = "int8")#candidate|7514|(140,)|const|int8
call_7513 = relay.TupleGetItem(func_5990_call(relay.reshape(const_7514.astype('int8'), [1, 10, 14])), 0)
call_7515 = relay.TupleGetItem(func_5992_call(relay.reshape(const_7514.astype('int8'), [1, 10, 14])), 0)
func_1991_call = mod.get_global_var('func_1991')
func_1994_call = mutated_mod.get_global_var('func_1994')
var_7525 = relay.var("var_7525", dtype = "float32", shape = (13, 55))#candidate|7525|(13, 55)|var|float32
var_7526 = relay.var("var_7526", dtype = "float64", shape = (2080,))#candidate|7526|(2080,)|var|float64
call_7524 = relay.TupleGetItem(func_1991_call(relay.reshape(var_7525.astype('float32'), [11, 13, 5]), relay.reshape(var_7526.astype('float64'), [2080,]), ), 3)
call_7527 = relay.TupleGetItem(func_1994_call(relay.reshape(var_7525.astype('float32'), [11, 13, 5]), relay.reshape(var_7526.astype('float64'), [2080,]), ), 3)
func_2283_call = mod.get_global_var('func_2283')
func_2286_call = mutated_mod.get_global_var('func_2286')
call_7533 = func_2283_call(relay.reshape(call_7508.astype('float32'), [14, 10, 13]))
call_7534 = func_2283_call(relay.reshape(call_7508.astype('float32'), [14, 10, 13]))
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
const_7551 = relay.const([-3.950622,3.323535,-8.344721,-1.902749,6.992496,1.282808,-9.960495,-8.545036,9.057221,-8.047335,-8.709367,1.102452,-5.914266,-2.450590,-2.621641,8.592638,4.955533,-4.547126,-1.293752,-3.103361,2.697716,-7.856266,-8.620494,7.035423,5.813836,0.036852,-9.964708,-0.033067,-0.260175,-7.847824,-4.107231,-0.040033,-6.423275,-8.249406,5.673333,-6.950491,-3.477226,-8.535234,-7.553297,7.089290,-9.876939,3.845139,9.050739,2.073740,-5.978354,-9.588694,-1.036002,-2.445881,7.834565,0.312041,1.362125,-2.739615,4.867660,5.983595,-5.549997,4.257986,5.670026,9.613129,3.720157,-9.998038,-6.271051,-4.257065,1.100654,4.312100,9.813766,-3.539478,2.450077,8.335920,7.579351,-4.971281,2.826405,-1.865117,-6.742831,6.054697,7.676796,-9.173628,-2.912689,-3.229712,2.695615,-1.243119,-6.105855,-5.500104,7.312838,-3.019777,-7.992463,-6.269353,5.100894,-2.930922,-4.931728,7.230397,8.486426,5.595632,-5.926576,-2.561055,-3.496082,9.310706,7.805289,-9.560990,0.527942,1.496324,9.430755,9.183448,5.625280,-2.996813,3.333944,4.898531,2.730353,-1.257070,-1.556059,-1.867240,1.318701,2.343712,2.173049,-7.330866,0.297733,-6.720153,6.178490,7.753955,0.334653,2.868237,2.491293,9.112739,0.956895,-7.840499,-4.823069,-7.536377,-7.920984,-0.938635,4.955539,-0.532285,2.573651,1.868635,-1.424017,6.636322,9.318134,-0.637104,4.234424,0.561490,7.516741,-1.898346,-9.208199,-3.267550,-2.534328,-3.787501,9.010216,-3.256060,1.390991,8.711986,-2.087072,4.478661,1.884239,-4.779350,-1.540204,-4.854974,-1.375118,8.119789,8.123392,0.545876,7.375257,-5.923324,7.006538,6.750292,-9.862421,-7.383741,1.049219,-1.735626,-4.031768,7.326179,8.995426,-1.983546,-8.850525,-2.700012,1.612122,0.966800,-5.961175,9.297219,8.827051,-4.307167,-8.238675,-0.272752,1.853974,-1.438585,-1.311032,-3.365982,5.598131,7.739419,-8.183041,-5.273906,3.975744,-2.216564,0.838186,0.645292,-4.808940,-2.643680,5.755291,-7.825557,-3.201921,-8.085697,-4.868929,-3.619730,6.336338,2.115006,0.080192,-2.312359,-8.267673,-5.777213,-1.925328,-5.981160,-7.101265,4.009807,8.708550,-2.957974,7.666257,-6.149098,3.682853,9.379796,-4.738091,-2.576872,-5.157891,3.867980,-2.999434,-0.105894,2.882778,4.539399,-4.278359,9.352713,5.492192,8.698574,-8.746057,-0.068546,-3.629207,4.367475,9.252342,-1.925996,-1.997564,-0.289228,-7.414912,1.077388,3.291694,5.144043,-9.590400,2.691853,-9.968706,-0.188709,2.132058,-2.750862,-1.069082,-9.036364,8.356075,-2.479238,-4.030252,-8.827297,7.078392,0.524111,0.277271,-5.304410,5.407558,5.157901,-5.296115,3.026957,-3.171260,3.703437,0.864848,-3.107140,5.467589,-6.786322,4.951068,-5.023942,-4.034990,4.524442,-0.151305,3.793720,-9.134080,0.003075,-2.598582,-3.973078,-1.862660,-0.785653,0.176133,-2.436000,0.687204,4.706952,-7.843519,8.162770,4.074623,-4.038001,8.891050,8.217195,-8.889080,-3.106391,2.121458,9.545998,1.273456,5.264488,2.065480,3.982502,-3.037650,9.831654,-4.349854,-8.350454,-3.323134,4.848259,-1.838224,0.308076,6.043370,-3.371688,-3.438770,-6.570059,8.600354,-6.533039,4.803734,0.768550,-3.110639,-6.338272,8.472687,-3.798257,4.393471,0.205199,7.764816,-4.823982,0.532837,0.011755,6.109713,0.005110,-0.079801,3.217668,1.661561,9.432886,4.088048,-7.360245,-1.691380,-3.399814,-4.288250,-0.056552,-1.557807,-9.424466,3.046938,8.484372,9.122078,5.761562,9.490760,6.924332,3.742631,-6.380995,4.483862,8.320317,-3.537986,7.026691,-5.982813,-7.360309,4.799599,-0.273366,-2.138315,3.783434,-0.790733,3.984103,1.558727,-2.621281,-2.628801,0.952268,8.025686,5.418834,5.717734,-4.243167,-4.868165,-2.514784,6.857131,-2.217025,6.124445,3.705617,-5.569025,0.970453,8.307595,-7.655835,-8.296700,6.388589,2.047304,3.071609,-1.450059,-1.330105,-7.048011,-4.203871,8.061039,-6.874204,-7.155876,-1.740872,-1.426506,-9.923998,6.318769,0.413729,-4.900589,0.368522,-1.182903,-9.186451,-7.223913,8.187253,-4.429566,-6.416383,8.077346,-5.464318,-3.286039,-1.902850,-9.011982,-7.214055,-2.632169,6.338844,2.068284,-1.141123,-4.476627,-1.231734,6.912122,3.388358,1.362664,8.383429,-5.663450,-9.840646,-9.555145,-2.435051,0.254909,-4.633459,-5.091074,-7.771905,-7.118744,3.057732,-3.585065,8.101326,-7.916398,7.935954,-9.793623,-2.916203,-0.382132,9.340925,8.839568,2.879741,-2.917430,-2.770699,6.719890,-3.033928,5.195150,-6.540312,9.416752,9.755334,1.547221,0.782698,0.481296,-6.131286,-8.442026,-8.100723,0.087263,-3.880186,8.154731,9.660801,-9.921588,-4.550844,4.128035,7.663109,-3.388205,-3.710877,4.447836,9.041355,8.089656,-3.641842,0.834775,-3.245431,-0.161921,6.618911,4.275891,-8.312156,-3.466098,-3.879911,-8.193423,9.661256,-3.174424,-3.502471,3.901074,7.619938,3.194588,7.685188,-2.099545,-5.239849,-8.591635,6.806400,-7.485003,1.679353,-1.678799,-2.080741,8.074618,-5.323038,-2.547389,4.981701,-4.320771,-9.487538,-6.230526,5.569031,7.783886,5.433573,8.202488,-7.162159,7.506453,-6.816168,1.755912,-6.350815,-7.620919,-7.612813,8.580761,6.926677,-1.634932,4.912111,2.475416,-0.392103,-3.569709,-0.727586,-4.057311,5.279911,4.196305,3.128954,4.403882,4.365624,-6.188862,-4.137518,-1.127342,-9.777404,9.438303,8.623669,-5.185946,-4.612780,-9.644211,-5.837182,5.000303,-2.963385,6.391882,1.185556,3.583913,9.176487,-2.468494,2.319774,5.912856,-5.359391,5.523021,0.359227,4.151018,6.928722,-5.617677,-1.315630,0.086368,-8.100518,-0.737869,6.967215,7.208742,-4.550685,-2.094477,-8.796521,1.158545,5.998472,-3.857741,-3.785619,-1.152142,1.281279,8.302168,-7.024262,-6.926725,3.711980,-4.012220,-2.832939,8.644543,7.759953,-3.694781,3.865707,-7.499491,4.968788,4.325766,-3.890265,6.914692,3.210623,2.154099,9.830936,-4.406295,1.623596,-7.799494,-8.642457,-3.050224,0.109705,9.198490,-7.973893,6.462331,7.525856,5.061129,-3.694360,3.290611,1.020540,4.611784,6.139859,4.066143,-8.629385,-3.462586,-2.504088,7.706365,-5.809259,-5.321345,-0.628395,-8.379177,4.687737,-7.142319,-7.593131,0.073447,-3.028173,-4.600270,-9.376176,-0.987611,4.386470,-5.313416,3.748306,-7.041477,-1.606922,-1.207447,-1.040068,-9.766752,-4.886733,-4.259616,5.964102,-8.237076,-9.747004,9.881721,3.248823,-3.918651,-7.333358,-9.607752,-6.372678,9.113086,7.383169,5.719702,-8.004929,0.755572,-5.963537,9.831213,8.295465,-9.056988,6.331080,2.997715,8.164562,6.747759,-0.493263,-1.896571,-3.452576,5.430446,1.171621,-6.293706,7.296851,7.811582,2.099120,9.014795,-2.736968,-0.867607,9.023703,-5.701138,3.570254,-4.152430,9.345096,-8.550534,3.752421,-8.832502,6.909899,-1.650865,-6.229280,-3.999071,3.339036,5.622633,4.864825,2.329779,5.199672,-0.367845,9.226449,-4.902263,0.979458,9.315255,-6.064356,8.286125,-0.346492,-9.905179,9.712474,-3.895841,-0.705537,2.415671,0.132455,-7.527966,-7.879923,-2.726686,-0.748594,8.184831,8.902101,-4.592551,-8.321651,9.660021,5.842610,1.769541,8.657894,4.545818,4.385318,6.373984,6.790269,6.971937,-5.963064,-6.744237,-5.361517,-4.571540,-4.801286,-1.499412,0.177273,4.654133,3.441248,5.063929,-3.802444,1.122161,8.882791,-9.338822,-5.796258,5.330104,3.939092,7.435324,8.034843,-2.275453,-2.942601,-9.348971,-0.439508,1.033289,-8.325830,-4.272130,0.120133,2.395312,3.455892,-9.075869,2.195613,-7.553188,5.137140,3.109158,-9.624691,-9.192308,-7.751505,-0.373406,-8.210905,-6.648454,-7.294738,3.915283,-7.417148,6.619301,-2.784377,-4.885385,5.515615,1.586772,-6.432448,3.015935,-2.825426,-7.785935,-2.047811,2.589390,-6.892096,7.921672,4.550861,-8.016773,2.251157,3.308072,1.563112,-0.866310,-9.911296,7.773444,-4.129133,3.370527,-7.014461,2.943162,-1.077434,0.298724,-3.493711,-3.648575,1.378031,-5.553967,-5.793099,6.634054,5.680209,-8.520938,7.284638,-7.442365,-7.348780,-1.263255,5.899976,7.320613,-7.847538,-6.240471,1.783678,-7.022069,-8.879006,-5.491009,-9.357444,-2.714746,4.482502,-6.728559,3.933099,-9.640667,-1.523326,-9.361083,-2.437229,-9.429040,3.435187,2.525355,8.824518,3.552409,-7.513340,-9.260662,5.760368,-5.106457,1.012718,2.155876,-7.652276,-8.789379,-2.043032,-6.812906,-8.954701,-8.774565,-0.332823,-0.053813,2.988677,8.967696,0.145264,7.917120,-5.247327,6.617965,-8.589032,-8.361259,-6.004724,3.582846,-3.257237,6.929911,-0.469999,-4.517120,-3.139483,-8.819063,-7.180249,8.972556,0.695293,6.209326,5.686561,5.884613,2.359150,-6.934277,-0.357770,1.281825,8.269098,3.619921,-6.568431,-4.230749,5.334589,-6.965287,-8.719532,1.479433,-2.702907,-8.670563,-9.300993,5.658377,7.468348,1.652498,-6.805602,-6.213208,-5.389085,8.327695,7.198115,6.371502,5.383109,2.162800,5.378561,2.990896,0.911355,0.633480,-8.778661,5.093370,-4.746863,9.211676,3.257564,5.823497,-0.227678,-1.410471,-6.822855,-6.294514,-6.008531,-1.342035,-6.528058,7.695574,0.005864,5.170868,-6.265256,2.278739,-0.708896,8.628895,5.584223,3.117340,1.615631,6.882183,3.638671,6.270090,8.500264,4.839148,-0.477689,3.305347,-8.289128,7.870027,-9.371300,9.534304,9.218421,-6.990198,0.967310,-5.870107,-7.650251,2.241786,0.307747,9.938460,-7.680250,3.351824,1.922077,-4.607007,2.771865,-3.247666,-1.835630,-7.964590,-8.585683,-8.330353,-4.969727,6.035541,6.578761,-2.985933,0.977912,6.559673,4.367798,-7.649627,-7.099162,-4.870534,-5.082718,8.335214,-9.233536,7.266491,-7.575539,1.115597,-6.468324,7.442576,5.683515,2.547400,5.043945,-6.078075,8.304199,-1.221471,2.775022,4.471131,7.637471,-0.409738,0.658359,7.353937,-6.510870,-5.640756,4.512646,-7.760759,-5.175104,7.613232,-4.895656,-1.249014,6.106227,9.828745,6.090115,-0.997109,4.192843,-5.913681,-8.898620,0.704927,-1.671538,-9.302184,7.775814,-9.802959,-5.171724,-1.286345,7.104196,-7.895207,2.834219,3.780380,-9.084901,7.403982,7.479085,-0.815427,5.850242,-0.644815,-0.143339,4.504169,5.535356,7.914442,-2.125991,-1.740601,-7.965979,-8.284860,8.086761,-0.035641,3.604836,3.646852,8.800290,7.112587,8.426553,1.738299,-0.027719,-5.560338,-9.233434,0.666915,9.071724,6.926605,-1.325995,5.151919,2.315707,4.624692,4.945376,7.272282,1.987437,-5.242900,-7.224015,-2.465283,-7.396598,-0.504692,-3.007781,7.707986,-6.392355,7.031471,-5.937835,-1.322426,-1.017790,9.293123,-9.380609,-1.797029,2.461412,6.344937,-7.399018,-8.596642,-6.569246,-7.717165,-9.813153,-7.608427,-0.685012,8.982232,-1.737658,-9.860813,1.604955,-6.073917,1.176141,8.047750,2.667567,-1.439841,-2.738526,8.147081,-9.591523,6.005827,8.167780,8.583226,0.835434,7.830837,-2.494302,-2.209041,7.589012,9.910927,-7.880757,4.062924,6.418631,0.463028,-2.981511,-5.971397,-0.253001,7.351337,1.095833,7.227513,1.543062,-2.228934,3.729061,2.146301,-5.103018,6.596573,-1.480484,-5.414811,-2.762971,8.570925,-6.556982,7.433570,-1.294157,7.249225,7.508454,-4.107108,8.110840,-3.655791,-0.435632,1.047962,5.262077,6.759457,4.585166,2.312141,7.819021,-6.058105,6.240816,8.335257,-6.916056,7.690727,4.563642,-9.163165,1.251626,0.513555,-2.125961,-7.695099,6.544830,0.866923,1.783805,9.711869,-4.573922,3.011009,1.990653,9.370086,4.988928,-5.463374,-3.545110,4.980754,6.413363,3.065651,2.520647,5.347485,1.094833,1.132237,-8.650736,-5.789598,-5.204839,-0.302994,-0.526534,7.021272,-5.819939,-6.420384,-9.926937,-9.657472,6.236736,2.566813,3.299770,4.733038,-3.418533,-6.105373,8.072277,1.517477,-3.645445,-9.595108,9.329565,-8.135963,7.765895,-6.009335,-6.156756,8.060423,8.379599,-8.124109,-7.683609,8.349073,-0.558103,3.328428,-9.850430,1.317948,-4.209780,3.846521,7.371414,7.723969,9.177042,-2.501331,3.611147,1.346619,-2.899266,1.030296,2.753314,8.419522,-7.551420,-1.781800,1.630676,1.495752,8.785002,9.011804,-2.979778,2.505616,5.844297,5.208238,7.244746,9.482248,-5.714930,-0.126349,0.048690,1.004307,-5.487179,0.566381,9.871245,2.968186,5.480249,4.595984,-9.979723,2.478742,-4.230208,-2.467964,1.834928,-5.142103,-0.573307,-9.845421,-4.637601,-1.091238,8.838158,9.462911,-4.720410,2.954941,3.947801,-4.906168,0.131795,4.610192,-2.320183,7.091370,8.485709,-7.286474,1.476686,-0.769956,-5.610632,-9.228162,-3.443715,1.388736,2.094692,-8.015696,3.092451,-8.263561,6.465658,3.017164,3.739705,1.845732,-1.432418,-5.955847,-4.162789,0.825490,6.068998,-0.362207,5.867597,2.182105,-3.231769,-0.659563,-9.545325,-1.050919,-5.888139,6.993913,5.648779,4.151001,-5.603275,4.194404,-9.115724,-9.396713,-3.147037,3.198949,-4.007530,-8.872654,-6.766849,-8.790286,0.502954,-4.767973,-5.890312,9.232018,6.044461,7.333913,7.718767,-8.327202,-5.207404,2.648109,-8.091011,-2.645403,9.244423,8.105212,1.037799,-3.971412,6.884892,9.667481,8.302886,8.534739,4.375613,-8.656655,7.893123,-6.624460,7.498256,-6.174332,-6.352729,-3.901075,-8.120575,7.053022,-4.146400,-8.342314,4.515795,2.870880,3.909647,1.896658,-8.508465,9.803847,-7.435806,7.261201,0.820786,0.840731,-9.567593,-0.607492,-7.104850,0.303716,4.660112,-5.429543,7.587136,9.666017,-0.855900,7.575854,9.976447,-8.281198,-3.154235,7.592321,9.089146,3.372911,1.778206,-9.194366,5.440854,-4.128314,-4.912357,1.601190,-7.737874,-2.809567,3.255358,8.580130,-3.148294,6.467096,1.068701,-0.751036,8.248431,9.361105,9.893897,-7.345949,0.859787,-0.884660,0.755248,7.959800,-9.196697,-5.235016,4.010135,-9.619104,6.990409,-6.939866,7.490165,-2.839421,-0.570504,8.168145,9.713805,-7.899685,-5.610945,-4.427837,5.604849,1.425516,3.401521,5.843060,-2.059567,-4.377179,2.500010,-5.262036,-9.711387,-9.864187,-8.758421,-3.639510,9.899233,-4.761138,2.262683,-9.231717,-6.220478,4.753875,7.685364,-9.196761,-2.719439,-3.316847,3.354484,-1.720601,9.021616,-3.470014,-0.881220,9.445997,-9.568345,7.288314,5.035370,-6.453893,-6.071725,3.110867,-1.635198,5.049182,9.551917,3.427865,-0.672421,-2.934630,-5.094335,-3.877719,2.629186,-5.149244,2.536220,-5.214674,1.308950,7.043399,-1.277798,-3.616829,-6.926975,9.022408,9.759533,7.702715,5.727386,6.338718,-7.339837,-3.206762,5.971139,4.958522,3.734237,8.812461,-3.787174,-1.767800,-6.872224,-0.125504,-9.320495,-6.481837,-0.183749,4.066682,6.896078,5.621545,-6.873200,0.525914,-3.158902,5.276718,-9.228005,9.779252,2.933098,1.604150,-3.482620,-6.358606,-3.918646,-3.848952,-9.300729,-2.494349,-5.950664,-0.700769,2.540472,-4.446561,-2.362305,1.923294,3.020279,-5.274222,-1.272502,-8.663863,7.691283,9.249887,6.799655,-0.580566,-5.274737,6.111163,-7.897117,4.209178,7.027268,8.714122,0.640433,7.795065,6.400649,3.210796,3.560788,-8.255302,1.906642,-8.555239,7.250230,-0.993870,4.079670,-0.076006,2.490563,-8.671675,-6.955379,3.699982,-8.893989,-0.501589,-8.596482,-2.284527,3.157425,-7.447206,-7.655953,6.226353,5.123216,3.653916,9.223540,-8.052263,-5.596288,5.135798,-5.068968,-4.718181,9.486664,6.779263,8.369623,-9.383573,-1.050268,6.426381,9.738369,8.272360,-6.095895,-5.308634,-3.756938,6.658553,9.005337,6.632333,2.853264,-8.073828,-5.190399,-0.915128,5.696545,-2.172230,3.008309,2.444378,-2.948707,5.364554,9.896353,-5.137034,-8.062766,-7.239846,6.745870,0.315964,-1.947724,5.240069,3.513542,-8.793347,-9.876485,8.907673,-9.777845,0.983819,0.132179,5.422066,-9.647925,-5.502484,1.266812,-9.814496,0.950719,0.100945,0.073395,-6.811633,-2.576541,-0.084201,-3.559293,-8.576990,-8.763379,0.021635,-5.297216,-2.610539,5.055282,0.835723,-5.921332,5.769999,-8.592013,4.049318,3.936267,-5.614690,-3.817636,3.682960,-7.830726,5.527677,1.145047,-3.677280,3.110807,-8.373395,-6.473719,-5.953397,3.761386,-3.723160,-8.808927,9.345439,4.958121,-0.365822,-4.226532,-9.167149,0.742084,8.069480,7.558612,0.355994,6.750177,0.914784,3.905831,-1.705270,8.618345,-0.606752,-2.181042,4.450970,-8.150251,0.012430,5.251568,0.171076,3.718401,6.308726,9.742533,0.697000,-5.141110,-7.000026,-8.053455,-5.328498,4.941925,-8.360422,6.147521,7.924211,4.025003,-4.173166,2.054746,4.740566,0.226213,8.137083,3.655526,1.035678,8.480565,-9.709511,-5.941729,9.896031,3.284565,1.642818,5.405010,-6.574062,8.010468,-5.551454,0.347632,7.420228,-9.975302,4.262918,9.078399,-8.533319,-8.793695,5.773122,6.735867,-6.419509,-3.181449,9.953323,-5.480377,-6.121771,2.797270,-2.537144,-2.298552,6.646055,-5.134715,6.511735,6.222679,-8.612883,-2.958929,-3.794698,-0.549795,-5.088971,-6.690279,0.855395,-8.526325,-2.033959,-9.323036,-6.168818,-2.536708,8.996748,-5.243040,-2.371951,-8.635396,1.672770,-8.852002,5.524220,-9.791281,5.498115,1.136470,5.788847,-5.334463,5.621246,3.333590,-4.921084,8.286752,-0.440864,-6.058282,1.394720,-5.826414,4.492075,-9.882050,1.930335,-9.977181,2.271667,9.169864,1.825760,-2.495376,-0.263090,-1.328112,8.005709,3.607371,3.018285,0.207836,-3.380956,6.149072,-9.865305,-7.960448,-0.758680,3.349398,9.757937,3.359021,-6.364609,9.491898,1.684865,3.148985,-2.431999,-6.333360,-0.526997,-8.378924,1.398374,-7.410023,-5.473585,-9.536254,-3.161040,-9.329297,-9.835947,-9.357069,-9.104483,-8.314559,-8.597106,-9.720907,-8.145426,-0.575478,-3.581158,8.723488,2.004687,-0.778461,9.162125,-7.335651,-9.080217,5.539039,-4.716447,7.038404,5.822940,-5.394479,-4.930152,-7.984277,-8.619457,8.030299,-9.495542,-9.311077,6.457827,3.917869,3.271037,-2.600021,-1.291566,1.271295,8.417389,8.128044,-6.059398,-3.609469,6.844556,2.176230,-4.727718,-9.415629,0.519875,-4.312801,9.141395,0.549428,3.585192,-3.322290,5.839093,1.596858,3.088004,-3.381916,-3.726988,-4.794993,5.128841,8.605972,-5.147568,-9.181555,0.740677,-7.175853,-7.110527,3.915230,4.982638,-2.138498,3.305224,-7.381770,-7.712300,-0.302741,9.892245,-9.993196,-0.289138,-7.342699,-5.561682,3.844858,7.473191,-4.537529,6.218072,-8.853656,-6.898347,-4.929846,-6.448018,-6.477199,8.827094,3.129445,5.428938,0.687216,-2.945512,-8.608273,8.097117,-7.589184,-5.115817,-6.729243,-9.329613,-9.419066,1.433827,6.906443,0.015932,1.864905,-5.827279,-0.298984,-7.282669,-4.238304,7.491538,6.511731,-1.380011,-1.145359,6.636398,-7.058508,8.367141,-9.412631,9.859729,-6.267429,4.528543,9.417763,-2.886382,3.360836,-7.832048,8.313508,-9.592280,-0.374386,-2.863355,9.538547,3.031894,-0.955348,5.756822,-6.997122,-5.401328,1.559887,-0.623133,5.726840,-8.639976,8.231379,-8.153528,4.032218,-4.313626,6.777476,-3.601725,-7.334051,4.990649,-1.060780,8.342380,9.966742,6.722780,7.905096,-8.545360,-2.514188,8.501413,6.911245,1.948030,-2.543174,-8.790441,-0.768795,5.951017,-7.756574,8.210995,6.903149,9.704089,-1.391139,1.593577,-3.558050,9.825621,4.418096,7.275738,-4.342153,4.493477,-5.298459,2.506962,-4.228967,3.402827,6.602379,4.825519,8.517901,9.325183,8.142153,1.585458,-7.620427,-3.231080,7.239968,-3.299526,-5.953504,-4.059896,4.277593,-0.236133,-3.739162,3.418225,-1.550282,-4.442380,5.557273,-9.530668,6.506320,4.806684,-3.805709,1.862923,6.126732,9.438130,7.558142,-9.086418,7.636937,-4.078673,-2.970179,4.901482,-6.490098,-3.485476,-1.930087,-3.176067,-5.054220,0.005179,6.672175,-8.339840,1.098262,2.935573,3.991692,3.470104,-6.084073,6.125060,5.164076,7.800081,-4.793442,-5.723513,-9.687963,-6.297246,-3.627860,2.743946,-4.999723,-7.138890,-3.573981,-0.313687,1.922413,-2.001866,8.827987,-9.121307,6.311778,-8.708801,3.803341,-1.505977,4.233081,-6.463443,-8.183991,-6.267852,7.390751,-8.557917,-9.540093,1.684618,3.304404,1.385483,8.249611,2.115886,0.584228,5.622987,-2.404160,0.550206,-4.517803,7.135952,0.323542,-6.593026,-2.111506,-6.622137,5.828409,-4.187194,-0.003565,-7.729533,0.771094,-7.033969,8.381662,5.885659,5.189408,-6.123146,-9.649508,-4.812993,9.362069,-7.955563,-6.807705,-8.350072,6.340481,-0.723293,-2.586972,5.958893,-3.110851,-0.571956,1.475548,-7.585629,-3.723377,6.730737,-7.175721,9.474526,-6.686815,-5.221471,-2.176112,-8.023138,9.273878,2.948640,4.592315,-1.671408,-4.627995,-7.116061,-0.133276,-6.172639,0.628386,-3.976486,-6.146206,2.940034,8.756595,0.461707,-5.370023,8.464871,-3.994208,3.248564,-2.848049,8.976003,-8.135075,-9.011955,-6.444614,-7.540720,-0.829860,-1.050099,-3.353960,4.589715,7.423503,0.595225,2.598064,5.408200,-6.766990,3.426240,-8.919511,7.876988,-1.412387,-3.301559,2.822255,-8.044614,0.152118,-8.035816,-5.004416,1.466721,-3.387196,4.156685,-9.383567,5.950225,5.021354,9.365516,2.556084,9.785981,-3.025488,4.696440,-1.461490,-7.578009,-6.214212,7.038474,-0.686830,-8.156772,4.491963,-0.733440,-2.194876,-9.754441,8.374143,-3.433006,2.878394,-9.218424,5.666321,4.579795,-8.162567,2.587074,-0.196650,9.665184,0.065789,5.053114,-9.009207,-6.531322,4.941330,-1.175750,-9.650500,8.789179,-7.606006,-4.717647,2.873995,5.966187,4.349228,-7.211609,3.086051,-5.301172,0.586637,-3.774694,-1.164603,2.619269,7.662283,-3.230020,-6.444866,4.081533,5.983184,-6.609278,9.651056,-7.701574,-3.411415,-3.874205,1.559968,-0.663842,-2.838952,-6.241610,-7.453289,-5.018864,5.243052,6.542051,2.185757,0.740159,-8.627271,9.875430,4.196289,-6.016865,9.588221,-2.561626,-1.930951,6.275652,6.208057], dtype = "float64")#candidate|7551|(2112,)|const|float64
call_7550 = relay.TupleGetItem(func_1197_call(relay.reshape(const_7551.astype('float64'), [12, 11, 16]), relay.reshape(var_7526.astype('float64'), [104, 20]), ), 1)
call_7552 = relay.TupleGetItem(func_1200_call(relay.reshape(const_7551.astype('float64'), [12, 11, 16]), relay.reshape(var_7526.astype('float64'), [104, 20]), ), 1)
uop_7553 = relay.cos(call_7508.astype('float64')) # shape=(1820,)
uop_7555 = relay.cos(call_7509.astype('float64')) # shape=(1820,)
output = relay.Tuple([call_7513,const_7514,call_7524,var_7525,var_7526,call_7533,call_7550,const_7551,uop_7553,])
output2 = relay.Tuple([call_7515,const_7514,call_7527,var_7525,var_7526,call_7534,call_7552,const_7551,uop_7555,])
func_7557 = relay.Function([var_7525,var_7526,], output)
mod['func_7557'] = func_7557
mod = relay.transform.InferType()(mod)
var_7558 = relay.var("var_7558", dtype = "float32", shape = (13, 55))#candidate|7558|(13, 55)|var|float32
var_7559 = relay.var("var_7559", dtype = "float64", shape = (2080,))#candidate|7559|(2080,)|var|float64
output = func_7557(var_7558,var_7559,)
func_7560 = relay.Function([var_7558,var_7559,], output)
mutated_mod['func_7560'] = func_7560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4196_call = mod.get_global_var('func_4196')
func_4197_call = mutated_mod.get_global_var('func_4197')
call_7562 = func_4196_call()
call_7563 = func_4196_call()
func_4739_call = mod.get_global_var('func_4739')
func_4742_call = mutated_mod.get_global_var('func_4742')
const_7574 = relay.const([-1.294425,8.570355,9.854387,3.832641,1.693862,-2.349494,-6.659621,2.224035,-9.461865,-3.138363,9.175645,2.111109,-8.945561,-6.402883,2.291908,-2.694919,7.557072,-0.666171,-5.422201,-3.073724,1.032563,5.453459,-8.988519,-3.519072,7.189150,8.308684,-3.721991,5.584725,-9.224919,-8.041298,-8.911602,-8.268690,3.177051,-6.823865,-8.333155,5.857192,4.111738,3.828080,4.443661,8.954268,-3.433750,-8.610421,1.122027,9.695651,4.740098,7.075793,-6.369720,5.872529,-1.423868,8.291321,6.685772,6.168989,8.254912,-8.644578,-7.288945,3.844222,4.048866,-1.313255,-2.076769,-2.663435,4.324568,9.240998,6.254799,3.804241,-7.623807,-2.394300,-2.499254,1.399228,-4.337109,-3.034514,5.363632,2.564587,1.974106,7.376834,3.273549,5.190413,-0.164236,8.333349,-3.508280,4.884069,8.319423,-6.336278,9.791846,-3.716678,0.078077,4.397167,-5.354295,1.937694,-3.855472,6.616732,3.314034,-1.665896,4.955495,9.652140,8.697363,2.563347,3.936409,-6.407508,5.960160,-4.074964,6.443342,6.981085,5.764313,-3.809914,3.866471,2.716125,-8.916536,-2.985882,2.737025,1.982152,1.225447,-1.797137,-3.447247,7.221188,5.394338,3.576415,9.091298,-4.060009,3.819080,-8.872685,8.877556,5.160616,-8.986621,4.389070,-8.069537,-8.619178,9.792729,-7.930305,2.282630,4.933145,1.046863,6.242636,8.875483,1.800514,-1.821188,-3.274870,-5.786316,-9.318314,0.854228,-9.861138,-4.027329,9.980678,5.322746,-8.989248,-4.609246,8.845664,-2.994835,-9.129719,7.687283,-8.675671,-8.409241,4.235271,7.211144,5.843961,5.589489,-2.099331,-8.374085,-2.209014,1.733172,-6.220385,-7.706389,9.928659,-8.830226,9.313055,-3.114869,-4.363459,-3.321408,7.891609,9.225655,-9.933909,-8.115632,-2.887064,4.784385,5.467670,7.647651,-0.587315,6.780408,-6.318429,2.837319,4.731155,-8.522555,-0.456411,3.353245,-7.768980,-2.426771,-8.797336,9.949530,8.553903,3.287937,0.931744,-5.368400,-9.595038,6.925066,-8.409749,-0.419585,-7.686829,8.943873,3.097992,-5.235981,5.862856,3.619068,-6.195769,-8.848062,4.410541,-6.110924,6.908925,-6.257173,-7.674685,-5.944063,-2.352771,1.534726,5.407857,-7.176455,3.256548,-0.131592,9.740863,-2.466839,-3.513347,-4.604030,-2.553946,-2.932976,1.027381,-5.712768,8.829520,-9.846498,3.440103,-0.516539,-3.016481,-8.072340,-4.462668,-5.954204,-8.122544,9.223498,-4.741615,-2.508929,-6.837963,-7.731282,5.298686,5.098911,8.931324,-7.090386,6.981640,-1.454393,8.888544,-1.169353,9.898321,-6.533624,4.031206,5.791492,6.087672,1.805387,-8.810736,3.993960,-3.023962,-8.749689,4.196050,-8.034875,-4.864444,-1.515077,6.239725,2.121585,-5.020507,-5.472599,4.634329,3.575991,4.916973,-8.466546,-4.399216,5.394314,-6.397205,-6.245628,8.574339,3.450880,4.891544,2.532604,-8.741649,-0.916650,-6.436555,-3.670580,-1.904812,-6.549614,-8.138348,6.771361,6.680425,2.823051,9.587541,3.999091,5.774894,-7.849957,-4.384817,7.388678,-3.203923,3.041107,7.869153,-7.171280,8.761066,4.757296,0.179443,-6.699097,-6.528087,-4.307864,-5.266878,-2.196164,-8.709923,-3.809784,-6.007238,0.885256,2.504557,-7.464377,8.727673,-1.098264,2.618858,-3.394854,5.671386,4.224763,3.660041,6.091124,6.118822,5.546929,-1.530485,4.714519,7.021486,2.629572,6.208563,6.595784,-7.694608,-9.001720,-1.586124,-8.810411,8.566320,7.928117,1.869867,-1.629736,-4.684177,1.099777,-2.402997,4.899458,3.849431,-1.962596,-9.087082,4.488587,-3.848502,8.881205,7.952066,-4.914743,8.014117,6.020984,-3.971746,-6.874363,3.600854,1.580130,-6.324433,8.653206,4.720836,-0.494007,-8.461607,-6.804301,3.497995,0.194307,0.695203,-8.591724,5.647172,6.758985,7.134256,-6.382500,6.425718,-9.526798,-2.504209,-7.585090,-1.411283,-7.043175,-2.734497,2.784747,-2.468610,-3.409259,-2.768722,-6.010642,-5.153394,8.416711,2.780545,-2.516171,9.253756,-8.106589,3.248465,1.828656,-8.323396,-2.340999,-0.481033,-6.335356,-1.293863,-9.118339,8.118673,-2.603267,-1.176477,-8.530393,5.029510,6.834220,2.870582,-1.691173,-2.341846,-2.692174,7.982975,6.500903,-0.772055,-4.320486,7.317465,9.185792,-9.953493,-5.705361,7.279508,-2.861185,-0.224848,8.123912,-5.732361,-5.289579,6.565716,4.364226,7.677013,-6.099339,-3.463524,-9.954339,5.382024,9.689033,8.519961,4.657071,-0.390055,1.903947,9.290124,-5.230823,-5.071288,-1.766892,-7.234655,5.346648,-3.514449,0.644990,-7.104297,-9.094676,-4.901858,7.963378,-3.350389,-0.161685,6.603057,4.517378,3.142181,-4.013656,-7.106831,9.059331,-6.383384,-1.641438,1.761446,9.704223,5.731798,9.791653,4.236815,1.751785,8.992642,-6.573756,8.964023,2.022745,-9.538220,-5.785111,-5.162829,5.837780,-7.872753,-1.660199,8.449530,-2.967911,0.260780,-3.408297,-9.476001,-4.739073,-4.159296,-8.929811,-3.297934,-9.420241,2.310079,5.614895,-9.181104,-0.310922,-9.203969,-9.104974,8.826452,-5.533954,3.133938,5.904371,-6.160589,0.677612,1.134879,-7.771468,-2.140596,-2.824041,-2.557029,4.316374,-0.801028,9.271804,-6.600275,-3.223224,-8.641997,5.246602,-2.101904,-9.267752,-1.524412,2.095123,2.986074,-1.049022,-0.682555,-7.388228,-1.110495,4.821891,2.795191,-9.749796,4.797826,3.065648,7.645765,4.741833,-8.220953,3.385796,0.695986,-8.041109,-3.951291,-9.545290,1.641273,8.057331,8.905286,-7.035278,-5.101330,-6.560424,6.405817,9.224105,-5.043128,-2.929387,-7.172406,-6.708040,-1.385684,0.793396,1.506587,7.225311,-1.232195,-7.816635,-2.753770,-6.385450,6.225467,-9.534260,5.043847,-1.907255,-2.475888,-4.358234,-0.888167,-9.461516,0.288123,5.657824,-2.931150,0.819523,-6.644794,-0.707819,-7.011002,8.275444,1.875016,-6.302840,7.929158,1.605956,-7.071061,9.586989,-2.596144,4.846356,7.861990,-5.014399,-7.519868,-1.433297,2.396626,0.471992,1.752196,-4.841261,-6.299100,4.167321,7.014199,4.285984,-5.272826,-0.287193,-1.244315,-5.075354,-1.342954,3.641807,-6.184184,9.685766,-2.813349,1.775792,8.586685,7.196409,7.229311,-7.512055,6.569049,-7.747056,-1.021420,-8.020816,-2.675809,-6.709278,7.238176,6.766081,8.479185,0.966986,0.989445,2.161795,-9.680389,-7.213380,-5.628946,-1.818043,-8.453828,5.748751,0.605527,-4.304177,5.937795,3.072362,-1.142824,-4.897851,7.304419,-2.401645,6.857156,-6.821200,-5.115343,6.219113,8.889492,-3.639014,-9.465535,-7.112061,9.536268,8.591156,6.278389,4.690370,-4.999022,1.102353,9.892190,-8.212635,7.590290,3.107269,-1.018429,-1.784460,-8.882448,3.285910,2.292965,5.551401,-6.484830,8.108846,0.595186,-9.691495,-1.475092,2.453021,1.413782,-9.819705,-3.394691,-4.355067,-9.817033,-5.472739,2.574867,2.497207,7.077459,7.064892,-6.690045,9.900865,0.847896,7.740611,1.148709,7.800727,-4.461892,-2.234102,2.807485,4.319064,0.778251,5.629139,-9.711433,1.162406,3.487340,5.050815,6.235299,1.536459,-8.247191,4.793037,7.817739,-4.000881,-3.295921,5.147592,5.400467,-3.239404,-1.338831,0.093251,-6.382412,9.328546,1.154858,9.121366,9.687436,7.874742,3.439519,-3.371052,-0.595258,1.227013,5.166270,-8.080640,5.888453,1.947264,-1.549327,-5.538353,-7.036433,-1.288110,8.882771,-5.930683,-6.692923,-4.538468,-1.292579,0.183115,-4.969607,-3.689964,7.284577,-5.321469,0.335150,-9.457106,2.065743,-0.214994,-9.872792,7.343907,2.351506,3.631149,-0.965782,8.723773,-2.864395,3.639026,1.619651,-3.036852,-9.759049,-7.124640,-6.377360,-2.936040,7.643790,3.059416,5.669371,8.297841,1.944026,5.322514,6.990173,-0.001955,4.176134,-3.912276,3.204843,2.034145,0.409628,6.854870,-7.612623,1.332897,1.154651,-6.029738,-2.508236,7.367812,-8.777360,9.617276,9.958312,9.055977,6.239602,-6.548067,-3.324479,-4.194578,1.022283,3.004863,6.860925,1.068711,-8.491342,-6.002128,-9.794835,-0.232424,-9.831668,-3.768178,4.606596,-5.723371,6.709728,-9.607974,-0.598531,1.692465,-2.314956,1.761451,-5.410525,-3.220462,-6.717767,9.849989,-0.816660,8.905224,6.498003,7.945453,8.285046,4.641053,-3.995620,-9.137667,-7.040089,-9.636031,1.123698,5.634887,-7.428892,-7.451690,-3.143591,0.425039,7.461870,0.176473,-3.115668,2.187354,-4.584156,-2.132753,-4.299251,7.952683,4.398449,-0.235626,3.271939,-8.812592,1.781507,8.000908,-0.322905,6.982092,5.281031,-5.029665,0.189761,-1.031712,-1.785028,-1.240274,4.681965,5.732395,5.673751,8.321713,0.372638,-3.952913,-4.733582,-8.846564,3.969264,-2.067257,-5.443643,-4.982011,8.643937,3.209613,-9.047058,-8.088619,2.076378,-6.820911,1.851411,-3.705209,4.210177,-9.842321,-8.286272,-4.409527,-7.077985,-5.532751,1.366484,-0.025549,2.725386,-9.058052,9.809627,-9.932286,-3.946999,1.502394,-1.853377,0.599756,-6.239806,-1.708055,-3.345497,-2.449384,0.822874,-0.274484,-2.187370,9.379829,-6.370487,8.345100,3.330152,6.157409,-1.687092,3.489282,-5.988688,-5.711332,-7.745088,4.137943,4.031821,1.709619,-8.674269,7.405854,-5.017004,4.635545,-5.701731,-0.836881,-3.401802,9.841402,-8.594166,7.242047,5.387141,-7.825578,-0.867132,6.972504,3.232722,7.672336,-5.936908,-4.883389,4.040722,0.840607,-0.442036,3.616846,3.344527,7.078306,-1.828040,-5.515309,-6.238619,4.441832,-0.261972,-0.293216,-5.975875,-5.657355,-7.864921,5.073961,-6.428132,9.251118,4.755356,8.086067,-3.883856,-9.061860,5.842143,-7.038153,4.580008,7.814685,-4.650875,-1.540217,9.026936,2.236692,5.433873,4.554727,-6.963575,7.232569,-9.142669,-7.499203,4.373960,4.608295,-5.264818,5.443791,3.197005,0.349103,-3.170158,-7.920587,-9.621461,-1.699697,8.743706,2.021333,-2.155414,0.971566,9.860656,0.091325,-1.340137,-8.751791,3.539894,2.682743,-5.311057,-2.856068,-8.768672,-0.344112,7.608796,-2.600837,-1.748008,-8.497572,-7.333073,0.685472,2.511327,2.073661,4.863260,-8.589835,1.065681,-6.154147,6.869233,-2.971849,9.645366,-4.691409,8.382837,9.695249,2.023157,6.962739,1.196932,9.811714,0.793701,3.937439,-8.041599,7.385561,1.811175,6.699934,0.438919,-2.786236,-8.829841,3.878929,7.518689,-6.927219,-9.930061,8.683215,-8.869150,-4.950227,5.266914,6.366841,-5.420831,5.967191,-9.404348,-6.221149,-0.161433,-2.340854,7.408870,1.539995,9.664744,4.626902,9.631198,6.645222,-0.980670,9.726476,0.736654,2.107063,-5.709543,6.279197,-6.614565,-1.761401,-6.218622,3.612461,-2.395376,2.209563,-0.608345,2.502123,1.776682,-0.614109,-4.098637,3.573974,-4.906504,8.738963,7.554068,3.369065,-8.316139,-2.612799,-6.992159,4.716560,-6.033944,-0.045080,9.558853,-2.482668,5.738676,-1.476687,5.929803,3.298811,2.765706,-3.066639,-9.756839,-6.264891,4.009217,4.662667,-1.918056,-7.035181,8.700728,-7.079952,-0.342655,8.686709,5.233889,5.642450,1.009615,-8.766011,-0.622666,4.717475,-3.085021,8.713363,5.713242,0.556037,6.538667,-8.947861,1.830717,-7.055516,-2.471009,2.009608,4.979513,-2.006749,5.722137,9.173022,4.439694,-5.319022,-4.488646,8.544602,8.692363,-3.003409,-7.798673,1.601528,7.812521,4.185727,-1.610333,1.610568,7.056142,-8.915722,-2.463441,-4.118172,1.020112,2.264480,5.288326,0.909522,0.826436,3.636906,-7.322936,6.032319,-0.565276,7.263838,3.169851,8.433658,-6.590412,-9.842102,2.450992,-5.495511,1.932981,0.191280,-2.510148,4.016119,-3.849988,8.246978,-3.957734,-7.926684,5.330028,9.376082,-6.868601,-2.377028,-1.283857,3.879663,2.162378,-9.373226,2.713302,8.379360,-0.295860,9.164415,-2.360715,-6.733398,-2.538894,9.534689,-4.850946,-5.764969,5.030582,-7.701365,5.574786,-2.905900,9.543985,-1.518694,-1.807295,9.809044,-6.684382,4.027169,0.548815,9.213313,-3.262479,-2.393249,9.291321,1.929546,4.150276,4.071717,8.956407,8.049423,-1.325324,1.710129,-7.332323,-9.233462,0.589868,0.192922,0.045325,-3.546825,4.312291,-4.794371,-0.141876,-2.247305,6.582839,-4.230218,0.669932,-6.669294,0.589087,-4.409717,-7.037865,8.648285,-7.654129,-2.866314,3.575383,8.005608,7.972080,-8.912461,8.015403,2.383388,-5.073670,3.675360,-7.293534,1.714211,2.952410,4.877706,-0.039640,0.081530,4.543106,-9.767752,7.740927,2.836545,-2.974238,-0.529346,-7.116382,-6.155281,6.494406,-1.570344,4.185078,-1.705424,6.388748,-9.222290,-9.572933,-3.092677,-2.322224,-6.413739,-7.068115,-0.690337,2.012305,-6.499110,9.227182,-9.026548,-2.300264,-0.721707,6.418334,-2.831386,-7.189054,-5.898011,3.972588,-7.588305,-3.556982,7.786459,-0.036545,0.940339,-8.920714,-2.021144,-5.685549,-6.154590,4.373874,0.901609,2.360108,-9.710113,-1.573102,-3.397403,4.247508,7.649834,-0.339085,4.884399,6.185102,-0.814708,-1.389892,8.822261,-0.077900,-3.942969,-2.123551,-2.111020,4.835572,1.386907,5.981066,5.706849,-5.442812,-8.638405,3.337720,9.452774,-7.468409,-9.508129,-4.088869,-6.339804,-3.843222,4.904719,-0.574356,-0.140594,-9.809894,9.860268,-2.872545,-8.124053,-2.751551,5.962012,-8.207691,-6.637847,-0.533216,-2.743336,-7.353966,9.246505,6.900714,6.921618,-4.386996,8.652925,4.220989,5.978631,-3.212716,-1.514738,-3.434964,-9.841456,-7.189262,-3.383610,-4.162252,-7.751627,8.889690,8.304894,-9.896279,-5.606499,-3.437737,2.979965,-4.034949,7.532971,-7.539689,6.824758,4.083947,-3.069329,-6.917405,3.230880,7.162027,2.892185,5.746249,4.811284,4.641867,3.939823,4.663082,5.589495,5.671528,-8.235043,-0.102056,-9.304201,-7.297549,-6.283373,5.183117,7.085563,3.266793,3.540393,4.892559,-2.104092,-1.050848,-0.248535,-0.196125,-2.125820,3.014114,6.050600,-6.235195,1.878178,-7.587152,-4.747469,7.454765,-1.089453,-4.596711,-2.714339,-0.436474,1.276269,-5.739645,7.901098,4.008239,-1.555563,-4.706445,1.770893,7.639493,4.744664,-7.445833], dtype = "float32")#candidate|7574|(1344,)|const|float32
call_7573 = relay.TupleGetItem(func_4739_call(relay.reshape(const_7574.astype('float32'), [6, 14, 16])), 0)
call_7575 = relay.TupleGetItem(func_4742_call(relay.reshape(const_7574.astype('float32'), [6, 14, 16])), 0)
func_3612_call = mod.get_global_var('func_3612')
func_3615_call = mutated_mod.get_global_var('func_3615')
const_7583 = relay.const([[5.394618,0.294029,-7.424102,-2.974567,7.617558,5.797944,-4.268117,-8.260145,1.733201,-3.005635,-7.231174,-1.169666,-4.860883,2.414590,6.466829,2.324762,7.888168,1.659310,8.357513,1.117580,8.090728,-3.937316,1.943810,1.605455,-5.701754,8.971968,-8.547912,0.029800,2.914959,9.709400,-3.594885,8.347948,-3.757100,1.465543,-4.043301,-6.717608,8.064347,1.761365,-5.963205,4.567529,-6.708521,0.270726,6.799454,-3.389644,6.438271,2.679291,-0.577267,9.266270,1.404554,4.304539,-8.446206,8.516881,-9.406004,-6.218624,2.787001,-3.276004,-0.472724,-4.554267,-9.888287,-8.926157,9.204843,8.492130,0.213890,-2.800921,-5.076267,-2.487240,0.804442,-6.170920,1.971705,-9.226946,7.493321,-8.910562,-4.764845,1.101353,7.643533,-1.849324,4.055566,7.291999],[6.047168,4.919657,6.197263,-3.706967,8.338550,-3.777323,1.901112,9.618032,5.880563,5.273595,2.678828,-1.236392,-8.456574,4.751306,8.472698,-7.344531,-8.215928,-6.778401,-8.440187,-7.228420,4.121841,-0.474310,-5.544579,4.644223,1.042465,7.678155,5.041135,-4.142851,5.781221,1.910888,-9.640227,8.909458,6.478124,-5.029800,-3.276935,7.874854,2.936378,-2.330751,-1.039365,-1.830490,-4.905458,-9.149660,5.804715,-8.216589,-6.384258,3.484214,4.782987,0.836088,-7.518750,-6.032964,-6.030067,9.785826,1.591359,1.345652,1.298523,-4.035343,-0.340755,-1.577471,4.575795,-5.343848,-0.510513,-1.718633,-9.794264,0.498999,1.560035,9.422643,9.194914,0.649991,-8.543122,-9.593568,-8.565112,-4.766316,1.824500,6.317703,6.950903,-4.460391,6.267222,0.730075],[-0.162221,6.498541,2.441243,-9.885113,7.422277,3.428953,-7.013081,3.760649,-6.153990,2.560934,-0.060731,-8.006437,-6.452201,-0.573083,6.795232,5.805719,-9.513297,2.709428,3.451898,-3.958635,-3.229927,9.052990,-1.207602,4.045123,-7.661702,-8.046687,3.687762,-4.008922,-5.631116,-3.787636,-9.995036,7.899114,-1.282066,-8.940052,-3.314761,-7.203479,8.407372,-1.722770,-6.564463,-2.956500,-1.492319,-2.725551,-4.562926,-2.270472,2.278764,-2.434365,-1.918527,-1.864461,6.576434,0.399631,0.011625,-8.407155,5.738435,-6.395169,-4.248695,-9.603486,-8.930977,6.859044,0.509578,3.580489,-0.988097,-9.025845,8.176321,4.001444,-4.648439,7.156550,-2.222654,-7.354905,-3.440774,7.820296,9.892430,0.347440,-0.683152,-8.521114,-7.418435,-9.425017,-1.067403,-8.061827],[4.423197,-4.592785,-6.308722,-7.469669,2.502365,-9.750939,1.960814,-2.959537,8.894067,-5.006134,-9.063400,1.507635,-1.827684,2.445931,-5.421332,7.705502,9.962914,9.477097,9.788310,-6.363494,-6.552868,-4.819001,2.971741,7.795633,-4.709931,-2.639942,-3.239419,-2.561009,-4.532952,3.757552,1.967066,-8.119991,-5.946918,-1.395209,3.976766,-2.012458,7.731920,-1.178364,-8.105552,1.332548,7.012226,6.352504,2.299657,5.368880,-4.942103,-6.620010,1.936733,-3.538664,1.334168,3.501799,-5.756803,-3.818333,-3.973276,-2.873054,-7.513926,1.711615,9.802649,-9.441878,-3.604980,-2.801087,-0.692600,-7.968619,-6.290652,-1.459623,3.382451,-8.690644,0.718979,0.449666,4.908549,-4.681266,2.520189,-1.294983,3.423296,0.427120,-6.993480,-2.826817,6.615802,-9.581661],[2.407981,1.898202,-3.148483,-3.462505,-1.724357,3.451831,4.274118,-0.562262,5.513330,-5.393708,4.503621,2.075564,9.499495,-3.859872,-0.561311,-6.680813,9.973491,7.932691,-7.389268,-8.690864,5.387265,-6.208169,3.117174,-0.054001,6.063679,9.045796,-0.866973,-3.906161,-2.408055,-0.739332,6.701927,0.242072,-7.842737,-9.291350,-6.471835,-1.691100,-4.045403,4.303642,4.907697,1.649917,-7.694062,6.079174,2.991984,-6.224355,-7.115212,-5.308032,-9.779203,1.357487,-6.717763,2.331277,-0.277560,3.251773,-6.849397,-7.352486,-5.450155,0.099064,5.334409,8.142377,-3.053650,-6.992976,2.403512,8.369932,-7.813461,-6.767506,-2.729030,-8.427732,4.305979,-7.892689,-8.261825,3.713246,-6.359119,0.634309,7.553979,-9.210682,-9.053147,3.547866,3.876833,1.191262],[5.527655,9.278697,2.831209,-9.222686,1.738031,9.488905,8.602559,-7.342926,9.460721,8.781773,-9.719054,-4.862525,1.320710,-2.297742,-8.095606,-3.351536,-8.856007,-7.248580,7.909641,-1.454416,2.360081,-0.234956,2.001901,-0.444952,-7.688333,5.392333,3.019073,-9.717642,4.198004,1.265010,-1.804842,1.712881,8.524755,0.905602,-1.164220,6.080086,0.503858,3.055269,-4.600233,9.389690,3.662169,-0.073110,-7.844856,2.201108,3.944394,-4.459077,3.418749,-4.827611,2.376868,6.502953,-5.027656,9.748436,5.975396,-3.003885,-7.404806,-0.529795,-4.818323,-4.418080,2.923577,6.561280,-4.080772,2.032027,3.309425,6.165183,8.394329,0.289657,7.060585,2.293978,2.034543,5.729875,8.566818,0.374972,-5.549477,-4.633888,-7.432724,-4.958048,8.892098,-0.566570],[-3.710919,6.931519,-1.899919,5.419727,8.231179,-0.811649,-0.348374,-4.371496,-5.185816,4.667134,4.534638,-1.231405,7.272349,5.941061,-8.343302,-2.418040,7.822585,-7.124167,-3.403182,6.998250,-2.136962,-2.293474,7.869630,-1.352517,-3.035013,-1.841747,-0.615652,2.687864,-1.050570,-9.860547,-4.760659,4.963531,4.386419,-5.410954,0.813315,5.269462,8.862873,-0.542859,3.286338,-9.105332,-6.233733,8.083560,-8.776232,5.379182,4.960257,7.608703,-4.631576,6.247919,1.311155,2.303959,-8.199349,-6.457826,-6.684330,-2.548761,-6.594753,6.651189,-2.576722,7.448371,-6.815072,4.005826,-8.244506,8.501147,5.621390,-0.858119,-5.116219,7.621640,9.034038,0.731801,-3.296179,1.705257,-2.481408,4.501593,5.342325,4.866212,2.109698,-5.315525,-3.622635,-0.662524],[-0.329890,-1.007166,-6.724378,8.666949,6.230476,9.878518,7.230876,-4.955733,-3.707128,-5.711141,-7.582477,3.712568,-5.525125,-5.927282,8.462387,-2.262431,9.941731,7.965809,-7.250942,0.652465,0.322406,3.222728,4.083036,-9.657801,2.454634,-2.112779,9.891466,-2.796381,1.923577,-0.728887,8.199472,-8.821148,5.615504,7.311373,8.595243,8.547830,3.212858,9.071414,7.411237,-9.093414,-9.684314,-6.726116,-4.436329,0.673772,0.836385,5.406808,-0.459846,-4.374266,1.085281,5.583129,-8.357923,4.547820,9.200416,7.662892,-4.175230,1.143700,-1.270620,-1.890232,-2.204276,-7.278807,5.146783,4.311907,9.620770,5.457773,4.713981,4.116868,-2.704221,1.427754,6.405281,-8.832673,4.579245,-1.774804,6.046544,-3.278653,-9.326221,-3.292830,-4.679012,3.506978]], dtype = "float64")#candidate|7583|(8, 78)|const|float64
call_7582 = relay.TupleGetItem(func_3612_call(relay.reshape(const_7583.astype('float64'), [13, 8, 6])), 0)
call_7584 = relay.TupleGetItem(func_3615_call(relay.reshape(const_7583.astype('float64'), [13, 8, 6])), 0)
func_5239_call = mod.get_global_var('func_5239')
func_5242_call = mutated_mod.get_global_var('func_5242')
const_7601 = relay.const([-6.793698,1.484928,-9.346111,-6.514519,-4.673295,-7.956138,-0.604024,-9.746364,-8.973749,9.203616,-5.641703,6.093300,5.040559,-1.002527,1.472004,1.332996,9.248638,1.801345,6.450199,-0.984226,-3.511122,1.004289,3.698060,-9.387049,5.091869,-5.194356,-7.371100,1.382946,-1.997671,3.277870,0.300108,0.167379,0.920741,7.883238,0.300241,-6.777896,-8.670328,-0.693117,9.749631,9.435914,-6.668162,-5.860817,-5.600859,-1.367666,1.049984,-0.079288,-5.088147,7.356440,-2.791081,4.838593,0.764917,1.220534,2.860352,1.029145,-3.055442,4.115941,1.735822,6.335107,7.372215,-9.210360,9.565487,1.436725,7.109557,7.115304,7.146084,1.878797,-3.906276,-3.405515,-6.779597,-9.739663,4.518737,-9.436091,-6.434719,-2.077481,5.661494,-0.819058,0.196031,8.500472,3.148062,-6.845629,6.024530,1.612133,-2.676787,1.818991,2.236969,6.165629,4.092218,5.214230,6.683974,7.104241,6.606517,-2.187829,1.894398,3.382279,-6.443926,-9.470521,3.893446,-5.785613,2.802359,-9.825249,2.620027,9.506748,8.322698,-8.274573,-9.174441,-3.780793,-7.732261,-6.217155,-8.997145,-2.017117,7.302107,-4.732060,-6.117057,-9.574292,-6.418520,-7.358393,-3.748970,-5.209369,7.434308,3.185749,-0.497518,8.061735,-1.373994,-9.458900,7.468232,9.350104,3.951283,5.041664], dtype = "float64")#candidate|7601|(128,)|const|float64
call_7600 = func_5239_call(relay.reshape(const_7601.astype('float64'), [2, 16, 4]))
call_7602 = func_5239_call(relay.reshape(const_7601.astype('float64'), [2, 16, 4]))
bop_7610 = relay.power(const_7583.astype('float32'), relay.reshape(call_7582.astype('float32'), relay.shape_of(const_7583))) # shape=(8, 78)
bop_7613 = relay.power(const_7583.astype('float32'), relay.reshape(call_7584.astype('float32'), relay.shape_of(const_7583))) # shape=(8, 78)
output = relay.Tuple([call_7562,call_7573,const_7574,call_7600,const_7601,bop_7610,])
output2 = relay.Tuple([call_7563,call_7575,const_7574,call_7602,const_7601,bop_7613,])
func_7624 = relay.Function([], output)
mod['func_7624'] = func_7624
mod = relay.transform.InferType()(mod)
output = func_7624()
func_7625 = relay.Function([], output)
mutated_mod['func_7625'] = func_7625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_7714 = relay.TupleGetItem(func_3291_call(), 0)
call_7715 = relay.TupleGetItem(func_3292_call(), 0)
func_4587_call = mod.get_global_var('func_4587')
func_4588_call = mutated_mod.get_global_var('func_4588')
call_7720 = relay.TupleGetItem(func_4587_call(), 0)
call_7721 = relay.TupleGetItem(func_4588_call(), 0)
func_3612_call = mod.get_global_var('func_3612')
func_3615_call = mutated_mod.get_global_var('func_3615')
const_7735 = relay.const([[7.373563,-5.201343,-5.620642,0.069322,-7.940069,4.191511,6.757590,3.040187,-9.447392,-8.730225,-0.722607,-8.470967,9.832828,-7.003651,8.046604,5.548447,-1.629007,-8.047775,8.859031,3.548474,-5.039024,-2.385139,8.702941,-0.802296,9.116146,8.885435,-2.542331,6.406275,-0.123354,-7.790028,-6.466662,-7.262400,1.277032,7.525501,-4.490536,-9.880303,1.534042,8.761597,-4.893602,-7.233317,-5.925317,7.550401,9.747280,-3.705326,0.160170,-5.880337,5.428225,-6.730895,7.905065,9.068505,4.887705,-6.901287,-1.731870,1.946960,-6.991709,-6.186083,-9.079362,4.400231,-7.535337,4.990709,-1.774120,1.813384,-0.284538,3.247268,9.523437,-1.330642,-3.857465,2.423369,-4.457417,-8.409776,1.681461,3.251565,-9.741177,4.787330,-3.442321,-3.552910,-0.780266,-2.774115],[-3.896272,1.262006,-9.826222,-6.222989,-2.846470,8.976954,-7.209415,6.876982,-1.002104,2.580597,-3.820209,-5.003678,7.784161,4.477495,-6.076423,0.058804,7.290526,5.148354,-5.458600,6.395437,7.847755,7.171699,-2.822440,7.437405,2.947089,7.865673,-2.558278,-3.933822,2.504391,5.926897,-6.707637,-6.840871,4.902636,3.725692,9.539560,7.356835,-0.386514,-2.510030,2.081854,6.329922,9.928662,-5.883699,-6.960755,4.649492,0.697049,-4.814755,1.028854,6.119468,-7.570925,-3.486938,2.472458,-5.065773,-5.656474,-0.343733,5.269163,-3.439104,6.715817,-3.407380,-6.016105,4.981023,-6.453412,2.893912,-9.277630,0.374759,1.290167,-9.427227,3.219158,-4.127962,2.986646,4.012840,6.614554,5.210959,6.546258,-6.292001,-1.960651,4.250406,2.245405,-1.388848],[2.488997,-8.387160,-0.879428,-4.132566,-1.342297,0.901613,1.225262,-7.114300,8.441568,1.455210,9.638200,-1.610311,2.486105,-6.377694,-9.016029,-7.308375,-3.053006,-7.867737,6.795716,-5.433597,-1.191905,-0.940738,0.072830,-1.489265,-9.158362,3.323305,2.089896,5.264895,9.435141,-9.751788,5.974697,0.378775,5.924078,-1.619471,-6.107277,-9.289524,-1.474338,6.962527,4.466520,-9.775660,7.779442,4.775979,7.993742,-0.234167,8.931001,-0.554135,9.271676,-3.212076,-3.452177,-2.356341,-1.062240,7.592685,3.783285,-1.100275,-4.367916,-4.594448,-3.983912,-1.987583,2.706244,-5.730517,4.405454,7.279629,-8.386791,-9.603024,-5.182019,-0.683161,6.100374,9.809380,-7.146015,-5.472740,1.827297,-3.035398,-0.394013,9.362323,2.363025,-3.433567,9.406851,-5.571940],[-5.968546,-6.971665,7.965823,1.703294,-7.123184,7.965590,-1.078713,1.797129,-9.222372,7.290574,-2.593882,-1.204073,-6.470676,2.963947,-0.743563,4.837192,-5.150224,3.645260,-4.079860,-3.471255,-9.871230,2.970763,1.721989,-2.151961,5.257289,4.740622,-6.086382,1.099580,-3.630405,-7.635151,-1.717738,8.974824,3.726682,-0.908591,8.600129,-7.219335,-7.292997,-0.710896,-5.090487,-4.072243,-9.490200,-8.989932,2.668320,8.715155,-7.166196,8.634352,-7.489975,3.932390,5.892259,1.127315,-4.870470,-7.219841,-2.466978,5.334379,4.788694,-5.400193,9.786136,6.513468,-2.632152,-0.629161,-6.740943,-6.753998,9.141718,4.935074,3.262936,2.415518,-8.866930,5.348229,9.332643,-7.309873,-5.451617,-6.907305,5.194742,-8.438618,5.542543,-2.280773,-4.722734,-5.608467],[-5.447989,0.001281,-4.197368,3.379450,-2.507615,4.415333,8.883017,4.205486,-1.877443,5.639816,2.996023,-4.291152,6.730586,-2.785834,0.914764,6.192838,-1.690941,8.139261,2.552742,-1.895840,2.256474,4.937894,7.575262,-0.292037,8.910153,3.748125,-6.336030,7.812692,-7.099546,8.999758,-9.683323,5.403834,4.885992,2.732342,7.420694,1.362118,-3.570144,-1.433209,8.095746,5.910237,-5.868954,2.567122,-4.821857,-8.658118,-0.341297,-8.403548,-2.025810,-9.769228,2.317338,1.198136,7.361619,0.121539,3.451069,3.737040,0.025823,1.280807,1.626817,-0.285443,3.506338,-6.280034,-2.509963,-1.433955,-1.664210,8.930131,0.431780,-7.410148,7.238695,-7.224235,6.380672,0.333977,-4.048467,1.068904,2.820245,-2.459755,-2.893014,-0.315864,5.253831,-7.401045],[4.106306,4.706580,-6.759461,6.764940,-4.629241,-7.941276,4.031254,-3.375971,6.719304,1.549071,4.617083,4.103908,-6.067695,-7.368097,2.667252,2.750234,-6.014401,3.442657,5.040035,-0.382068,-7.129238,9.676671,-2.403700,6.053834,3.131048,-5.302194,-4.614196,5.064637,-4.732990,3.092869,-4.576821,-6.706896,1.723836,0.743130,7.590738,-0.297822,-2.721318,6.997574,4.492503,-7.574372,-4.202058,4.354095,6.029429,8.228129,7.609332,8.807433,-4.757839,-5.201056,8.227752,-7.496133,-8.491817,-2.535047,-4.134422,4.448902,-7.454627,8.371044,7.114511,-2.668820,6.952794,-2.894271,-7.372341,-6.282750,9.643274,-6.691323,-5.789328,1.427835,-0.322949,0.779806,-8.287561,-7.629099,7.373106,9.610408,6.924916,5.734691,3.960375,7.824079,2.375673,-2.007841],[-0.003536,2.862264,9.481677,5.101194,-4.491340,9.454904,-8.366731,3.256305,0.558787,-7.734524,-4.359501,0.863418,0.185941,4.957184,-2.330073,6.417881,1.040543,5.269779,-4.243007,-4.724506,5.718462,4.467313,3.817000,4.989299,5.310554,5.495499,9.002256,7.926758,3.898977,9.790614,4.756832,1.767081,1.890566,5.929777,9.564670,-9.247153,3.521476,-4.955636,4.412912,5.973769,8.128078,-1.960847,3.861903,2.391853,0.825408,-7.661465,-5.752229,8.175536,-5.714300,1.813334,-8.722383,0.941310,9.465143,-4.420439,2.239339,8.561890,8.129546,-3.326304,7.990538,6.137270,-4.893432,1.420505,2.093822,5.758893,-4.818312,-4.822044,-2.287761,-0.551568,0.437572,-2.303757,5.895453,-3.169680,-2.829472,5.588180,-6.839259,-5.530123,2.137376,6.471807],[-8.522277,-5.843984,5.278665,9.798597,-8.233737,3.281157,-4.029259,5.425492,1.638487,-7.866420,-0.698103,-1.050744,5.423718,1.842857,-7.992308,5.245753,5.456289,3.977623,-9.494508,7.141632,5.113379,5.466803,-7.355041,4.147137,-8.097960,4.417857,8.229863,9.536776,-4.294126,7.660947,-1.855079,0.628442,5.143616,-8.411583,1.460765,-0.711199,4.033218,9.189961,-3.323459,8.995773,-6.065351,0.049387,-8.584632,-5.128097,-1.875217,-5.052224,1.379170,-7.157516,-6.872446,-1.504857,-5.082205,-6.001126,-6.355142,-3.720921,-5.713742,6.577519,-3.187384,9.756444,-7.094247,-0.157290,8.813327,4.341038,-9.178023,6.193522,-0.330902,7.211027,3.631407,-6.167401,8.308516,-5.071950,3.260917,-2.166286,4.480256,-6.623912,-5.980260,-1.754444,8.760193,-8.391807]], dtype = "float64")#candidate|7735|(8, 78)|const|float64
call_7734 = relay.TupleGetItem(func_3612_call(relay.reshape(const_7735.astype('float64'), [13, 8, 6])), 0)
call_7736 = relay.TupleGetItem(func_3615_call(relay.reshape(const_7735.astype('float64'), [13, 8, 6])), 0)
func_6739_call = mod.get_global_var('func_6739')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_7741 = func_6739_call(relay.reshape(call_7720.astype('bool'), [12, 2, 13]))
call_7742 = func_6739_call(relay.reshape(call_7720.astype('bool'), [12, 2, 13]))
func_3390_call = mod.get_global_var('func_3390')
func_3395_call = mutated_mod.get_global_var('func_3395')
var_7747 = relay.var("var_7747", dtype = "float64", shape = (2112,))#candidate|7747|(2112,)|var|float64
const_7748 = relay.const([-1.640505,-3.203205,2.806565,2.425005,-9.973859,2.319381,3.748091,0.495392,-9.122404,7.186319,4.345173,-9.771887,6.059236,-8.932659,-1.742491,1.716449,9.668745,1.444018,-6.334457,-5.291266,5.413981,-1.104768,-4.722734,-7.266325,-5.979628,9.104104,5.593012,7.778249,1.648546,1.171670,-7.758099,-3.387068,-8.951056,8.620788,1.452701,-0.100158,0.298543,6.975631,-9.116936,-8.912316,6.055687,3.030012,3.413815,-3.119106,-8.902347,6.452435,-0.675594,7.509775,9.836630,-5.690961,-0.352894,8.032374,6.484934,3.872067,-2.336499,-0.289694,8.707976,-7.754800,-9.822194,7.170349,-3.542856,-5.042901,4.294886,-6.101254,-8.434234,8.418659,7.979405,-7.308938,1.655912,-7.739026,2.763305,2.883134,-7.370440,-4.729755,-9.757477,-1.095791,-8.417278,-1.182963,-8.590581,-2.384153,6.108684,9.681453,-4.151304,3.741763,-4.852314,5.548756,-6.467087,-3.874449,-9.424607,6.538830,7.183570,8.561225,-6.021182,1.845196,-7.115617,1.484352,1.080567,-4.885352,-2.892333,2.094259,-0.156629,9.687849,6.869500,4.113300,-7.533933,0.150039,-6.114604,7.611810,-8.035207,5.663351,-5.143792,-6.384959,-7.190703,9.640060,-7.446014,1.484612,3.951554,1.530317,-4.431272,-5.181681,7.613882,-5.525317,-5.983320,9.229979,-9.086234,-1.684642,7.347097,-6.145811,0.883908,4.911966,-1.335131,-2.973901,2.492935,1.537430,2.694613,-0.905834,4.594573,-8.099354,-2.128084,-6.239019,1.294037,5.077209,2.349890,-3.913709,9.762873,-9.530550,-1.038144,4.567417,-4.397204,9.162233,-3.443933,-6.187293,6.127318,4.634593,-5.340881,-5.190429,-1.226976,8.176427,-8.053043,9.674416,0.477245,6.754517,-5.500002,2.406179,1.507249,-0.941093,-4.213577,2.110276,-8.170036,5.005609,-9.583681,-0.251268,3.256700,-4.181079,0.240539,9.855082,2.655167,-4.470925,3.148269,-0.804019,-3.698808,-8.608385,-9.607952,-2.087500,-7.380780,8.742373,-0.067638,-7.679233,5.550877,0.925175,-7.785305,3.662148,2.520422,3.188269,4.566572,-2.286475,1.849984,-2.676269,-3.014650,-3.365591,-0.581068,-0.261458,9.780846,-0.695301,6.113375,7.623839,-5.912569,-4.825004,-3.576358,-0.550824,4.728677,9.563571,3.239101,-6.837191,4.129891,6.805390,7.005118,-5.275529,-2.110324,1.122399,-2.721401,0.551466,-6.995277,-3.598994,3.990752,-4.018353,2.510359,1.487733,-3.136622,7.616262,-1.669816,7.707737,-4.206940,-8.955564,2.732027,-1.013294,-4.313297,-6.422503,1.023531,2.262104,-7.317128,-9.795818,-2.602604,-0.438765,2.401572,-8.280676,-3.698490,0.719139,9.129450,9.525084,-2.182707,-3.100684,2.900950,9.377425,7.219244,-0.907997,-8.143132,-7.821818,-0.369501,0.123078,-2.679540,-2.947159,-0.765813,0.565776,5.943505,-1.593203,-1.662340,9.843760,0.635455,9.968655,6.734211,-0.344324,-7.371297,-7.318093,-7.081888,-7.595765,2.417257,3.137802,6.288587,3.631962,-9.532054,-1.964883,-5.580269,-4.611507,-4.652482,0.571456,5.734495,2.643938,-9.003510,5.132398,-6.415826,0.134544,-3.329079,3.270101,3.628319,-5.619918,-0.899585,-4.169200,-8.698784,-2.368123,-1.683453,8.362171,-2.586868,5.195448,-8.073973,4.657468,9.818171,4.474318,4.939479,8.263986,9.758556,-8.817811,-2.778648,9.521227,-1.191066,0.118210,6.548256,-2.212828,3.977365,-6.217159,-7.770919,-9.747613,-7.620568,0.373348,-4.426222,-5.602675,4.910304,3.935312,7.546638,-0.093238,6.554017,7.268533,-0.499780,-6.031073,8.720427,-0.040699,-4.885343,6.762913,-6.512057,-1.634823,6.415826,-3.077639,-4.814713,-6.004840,-1.100130,0.272841,-9.328602,-2.552436,-7.461118,3.455215,4.057577,-8.770506,-7.621917,-2.342513,-3.597952,-0.112070,1.208670,-0.532931,-5.395806,-5.543054,-5.402700,-5.726873,-3.396902,8.451222,1.808887,-1.977142,-4.965905,-4.891399,5.419830,2.720667,-2.031352,2.448438,1.074568,6.182445,5.121813,-3.582094,5.115867,-2.904157,-9.223030,-8.045166,-5.081783,-6.789854,8.566890,-3.870822,-9.420774,1.653991,7.886712,-8.500337,-4.788475,-9.655642,2.099209,5.969474,-2.432005,-2.987270,-8.883234,-4.184335,-0.323562,6.342663,-5.684689,-6.984995,-4.783314,1.987093,-5.642854,-3.827615,4.292420,-3.756770,7.884198,2.144733,-8.455648,-8.749006,-3.564209,7.836900,-1.490377,3.792092,-1.214160,1.498554,1.401086,-1.267405,-1.921460,-4.843675,-9.743253,3.301235,4.790909,2.962250,-3.116568,-8.909513,-8.696339,0.120933,-4.447413,2.037504,-6.716147,4.683256,0.290264,-5.927402,-6.127878,0.968107,9.250973,6.682915,6.905713,-2.255026,-8.956631,8.424714,5.068940,7.483548,1.234896,-1.947164,2.259920,7.724282,-4.347508,7.823701,-6.367352,3.725551,7.771798,-2.663463,1.480775,-8.394569,9.155723,-3.919519,6.122341,7.078610,1.259484,-2.093370,3.828521,2.010245,0.068277,8.355480,-0.502442,-7.029368,7.462709,-4.225651,4.243405,-6.880420,-8.644946,6.491802,7.244956,-2.615043,8.469628,9.219667,-3.785895,-4.552559,5.861345,-3.675528,-9.761446,6.364978,8.317104,-7.223840,2.772950,-5.346645,1.107619,6.424914,-5.668402,3.866215,-5.975123,-9.536349,-5.397908,2.332940,-5.954452,3.984352,-6.157682,-4.987832,-8.656286,-5.911169,-1.450517,-3.469536,8.699051,-4.626597,0.917340,8.277242,-4.917912,2.345119,-3.900850,9.554866,-6.937210,5.231340,3.421604,-7.891021,-9.922775,0.955047,2.349619,-6.679444,4.621673,-2.627315,0.149834,1.803825,-0.357991,-1.606192,3.726466,9.234895,-0.825810,-2.545993,4.900060,0.528232,2.355312,-7.119403,-8.982646,4.515919,9.205821,5.037812,9.114461,-6.266603,6.335439,-0.034904,-9.268039,-4.984035,-1.944875,9.222730,2.836338,8.237417,0.207580,-6.488060,7.111838,-7.842695,0.886236,1.598799,-5.579738,-5.433375,-3.690109,-0.634923,3.774270,8.169361,6.276954,7.490704,4.911850,1.350847,-4.826028,2.029907,-9.333617,-0.902967,3.428019,-0.322523,2.856305,3.293744,-1.242222,2.461628,-9.514935,3.496358,4.431534,-2.228637,-6.535484,1.999895,4.453435,-7.345515,-4.522412,-6.042641,-1.891057,2.964143,8.011732,1.941745,-0.995524,7.524109,9.678750,-3.514517,9.100157,4.038673,0.409765,-1.078883,7.760397,-0.698208,9.208996,9.053922,0.533579,-5.516173,2.285162,-4.733357,-8.650889,-5.467441,7.496457,-9.422406,-7.632722,-0.119146,-0.261522,-1.322550,6.450328,-0.877289,0.437610,-4.276980,-2.118395,-9.420652,-5.087483,-3.710632,-6.973064,-6.310158,5.274592,9.069244,-3.718506,4.483371,-6.399282,0.163417,-8.832773,8.546872,2.488646,2.113249,-3.153636,-4.821248,-9.484570,3.124097,4.671316,-9.516093,-3.507526,-3.586985,4.567027,1.303890,-9.683899,7.815391,-5.912862,-8.862662,-3.984335,-6.226659,1.631435,7.162029,3.661395,3.018923,-0.074674,8.161540,5.465024,-6.283116,-4.808824,-6.074254,-8.633230,2.608623,-7.793866,-2.839562,0.139213,2.202102,8.413360,7.013865,5.075551,-8.953854,-5.470114,-9.785477,1.571669,5.237390,5.835295,-3.387401,1.160183,-1.201045,-5.696475,0.469338,5.800724,-0.375042,1.144924,3.307091,-0.026755,6.867285,-1.160782,-9.568340,-6.642212,8.481136,-7.072103,6.064320,2.283038,5.874698,-9.366706,-3.776731,-3.811657,7.831215,-0.584797,-8.922802,-1.864207,5.646140,-4.159926,-3.358720,3.586404,-1.498419,-6.148819,-8.766578,6.952404,6.915503,-3.527319,-4.189918,-5.346487,-2.194009,-8.416385,-9.526516,-4.596092,7.779132,2.580048,8.466281,6.975747,-7.479382,3.182909,-7.619648,5.074328,0.791972,4.319412,-7.536973,6.082970,-3.123031,1.092077,-7.158945,-9.221002,-6.640977,5.259965,3.371967,6.505583,-8.158179,-7.490503,-7.247620,-1.609793,2.264112,7.093411,-1.555181,-4.729054,-1.124415,6.048482,-6.375083,3.543757,3.591303,-9.548684,0.236224,3.216616,4.089755,-8.923907,1.224176,6.073865,-8.719514,-1.053670,5.019915,8.079934,-4.907102,-6.758788,7.002982,-5.629772,-3.079185,9.635838,-5.353239,-6.311805,-5.395685,1.699635,5.910139,-2.727870,5.166876,-0.926870,7.979592,4.564037,-6.740995,-6.729008,1.645287,4.645137,-7.536636,8.063612,1.357911,-3.866869,8.234546,3.821751,-1.941361,-9.457363,-2.529509,-4.118927,8.178843,1.360619,4.803440,4.898985,-0.395064,-3.886328,5.036277,-0.963172,5.549436,-0.637002,-5.948441,-7.986802,0.686741,2.187368,0.224541,2.704338,0.319280,5.635906,5.442522,4.969153,1.503396,-7.033755,5.775482,5.260629,6.608229,3.461395,0.398564,-7.411200,1.982948,-0.196572,5.442463,0.587209,-9.477099,7.702528,0.867958,-0.852614,-3.242595,6.327448,9.779424,4.967780,-5.003999,-4.280500,-0.496186,-6.631419,-8.301504,-7.590954,-3.814790,-6.862036,-7.404588,-4.953578,-1.163872,-6.652840,5.151434,3.692791,-9.521806,0.140351,7.416614,-7.409534,-8.851028,5.913282,4.655793,-2.294580,0.946237,4.169895,-6.526745,7.962447,-6.803859,-7.768704,8.032166,-6.561567,-5.093939,-0.584004,9.086810,8.921788,4.312752,1.713363,-9.825841,5.403614,-6.779147,-3.521575,-5.709422,-3.135702,9.333469,8.077761,-2.996708,6.460588,7.774464,-2.411651,-2.520051,1.368010,7.806926,4.360282,-3.943896,9.937940,5.332805,-8.873779,-9.856309,-4.787441,8.698322,-7.826695,5.804532,-8.740040,-1.496656,1.206987,-0.204935,-8.151394,2.579132,5.290027,-5.933182,0.440079,-6.180842,-3.547664,-6.283083,3.635108,-5.849235,5.891571,8.690780,-5.870615,-0.880483,-6.738792,-6.234454,-3.889469,-3.139780,-6.218520,6.992776,-4.316111,0.555261,-5.164865,9.940131,8.429511,6.863502,0.467994,-5.477777,-4.884255,-4.242158,0.264072,-8.633009,-8.798904,8.918168,1.191681,-6.101060,9.448065,-8.495031,4.729475,4.093333,1.730555,9.104458,0.202064,6.230900,2.880796,-4.425653,-8.128082,-8.482576,-8.912379,8.807711,-7.624753,7.440135,7.196643,1.274070,-5.693537,0.863802,-7.111330,-8.518175,-0.447504,1.216929,7.476436,-5.724748,-6.088296,3.762692,5.674704,7.024280,-3.476851,4.763137,-2.424036,7.839820,9.737714,4.315872,5.149154,6.051170,6.770034,7.963105,-6.162433,-3.532469,7.822329,4.209114,6.060560,-7.814418,-1.547828,7.027626,0.494045,6.814696,-6.549926,-9.793955,-9.054173,8.859732,-2.069009,5.353860,9.230919,-9.028156,8.247903,2.589588,-2.821225,-1.708748,7.918226,0.199859,-9.867521,6.884741,7.407150,7.932867,2.833937,0.423101,8.306761,-1.356432,2.066693,4.103816,2.491880,4.284850,7.315750,-1.829976,0.135603,9.905502,-7.666786,-4.545461,-8.111123,1.629975,0.741902,1.946042,7.796210,2.739998,-9.537416,2.158760,5.190968,3.509363,2.063841,7.480511,-4.153996,-9.178335,7.232390,-0.511781,-1.493739,9.988089,5.369539,3.368810,-1.435150,8.266464,2.961914,-6.137856,6.061383,3.799926,3.095138,0.593033,6.055221,-8.649926,2.104579,-0.057579,9.530279,2.482547,9.894990,3.880554,0.254502,-0.661916,-2.101009,2.967621,1.794578,-0.711769,1.170356,-1.960049,3.014977,0.121773,6.128865,7.025518,7.408905,0.572009,6.377341,-6.942736,3.523961,1.943463,-5.784669,0.051215,-6.076103,-7.447815,-0.944100,-5.127225,-9.314459,-3.596409,-2.180251,-8.097990,-3.695128,-1.021186,-8.530512,-5.186706,7.103827,6.410249,-2.482754,8.395304,-1.157241,-7.745156,-7.326569,1.945466,-1.258243,6.288541,4.995562,-1.390947,5.515420,3.608662,7.201917,-1.994145,6.815615,-3.837334,-3.424396,-1.733196,-8.644944,4.149482,-3.476703,5.630416,-2.729406,2.823898,-9.383861,6.973351,-2.173499,4.074300,-0.061130,-1.673920,-9.244355,8.578496,5.578803,7.653498,-1.154963,-0.080087,6.787512,8.743403,-3.084473,1.655099,-8.316287,0.630668,6.828103,0.273886,-4.507787,-8.030308,-7.393401,8.508675,8.669731,8.399740,-0.412312,-5.975520,4.968370,7.873185,-9.223684,-9.948723,-4.022900,3.149165,4.861632,8.630051,7.971823,-9.289054,-0.330663,9.597065,-7.489667,2.156446,-3.478000,3.872883,-0.733613,-3.634827,7.077111,8.123776,-4.042965,-9.674033,4.177891,2.617138,8.344274,3.649264,2.621685,0.458884,5.072708,-4.052305,7.067205,-8.250541,4.800816,-9.709515,6.183827,-9.330013,4.436155,8.291971,-4.547166,3.432117,-7.777457,5.319176,0.075641,-8.990090,-0.186356,-5.242974,-2.791183,4.844071,4.420979,-8.218984,0.787919,-4.697862,1.960029,-3.763158,-1.942849,6.264526,-0.291250,0.475488,-3.812818,-3.206840,-6.386415,-3.007430,2.746127,-7.219961,1.938929,-8.986998,5.851827,5.895910,-9.316684,5.206005,1.898257,-1.239240,6.080526,7.318209,9.422087,-7.823597,4.324249,-5.973000,-8.444260,1.613666,5.340469,7.489024,4.384077,-6.225632,-6.295117,-6.059981,-5.758982,6.661458,-2.598705,1.998089,-9.206885,-9.538041,-6.979262,2.074016,9.953375,9.942066,-0.578736,-0.050601,5.067529,5.827543,-7.280615,-9.177666,-3.070923,-8.662769,-8.479215,-4.081996,-8.464147,-7.498311,9.129612,5.639564,4.497871,-6.989089,6.727510,0.093545,8.708207,-8.836399,-2.493738,-2.372146,-8.334383,-3.658173,5.896833,-6.098592,1.086251,-2.473883,-3.731728,8.973905,-5.131623,5.034735,-9.686484,6.651451,3.768985,6.623676,-3.614190,4.957749,0.934072,0.746016,-8.518505,-4.287037,2.896887,1.776751,-6.107461,4.762991,-2.741309,8.779355,9.689123,-5.897441,-6.331486,-9.676994,5.327659,-1.587532,2.315378,6.343669,9.284848,1.900202,6.849162,-4.649289,-5.060820,-6.363425,-7.262405,4.254425,-8.350062,-8.857311,-9.147387,1.068124,-9.185150,-5.035471,-9.401638,-1.972614,1.723371,-8.169681,-4.379553,-3.012545,-7.479627,9.512830,-7.124245,-8.108609,-1.306910,-7.857128,7.279187,-7.862157,4.935368,-4.354696,4.761953,9.908276,-4.040962,8.256948,-6.622638,3.145008,-4.526953,7.810331,-6.259189,-9.608485,-1.400857,1.210054,-1.036230,-9.984273,-8.926612,5.733133,5.915232,-2.605974,-5.079307,-3.853908,5.022795,1.804794,-4.779160,4.334851,-7.831767,0.072363,-2.646385,9.501629,-9.286565,-4.375868,-8.141440,-4.248655,-4.815236,2.471699,-5.081984,3.119436,-1.029471,-1.720747,4.688698,1.868525,8.643828,-6.699565,4.939262,-1.786284,6.659490,-0.790328,5.244102,4.150225,3.027570,-9.490460,-1.580525,7.163197,0.353508,0.701877,8.257360,-3.564684,4.722435,-4.055927,-0.225902,8.312803,2.156544,2.571519,-3.667882,-4.301824,-5.924021,-4.962869,-2.102555,4.270712,3.483193,-8.164991,9.874063,1.578250,-7.576407,6.854661,-5.166819,-9.280109,-0.714664,-5.445446,9.169561,-8.148305,-2.523545,-9.768052,-9.379274,-2.578167,5.163507,7.229729,8.635396,0.500793,-6.938822,5.124328,5.103017,7.739881,7.218778,4.200139,-9.904184,-2.331014,-1.527305,-0.523404,-0.203806,-0.165144,7.137068,-4.533501,-5.484568,-8.763367,-3.060214,1.922516,-6.228672,6.873902,3.646512,-0.907798,-7.490569,-7.548548,3.947920,-8.142619,6.207024,8.080405,-1.607880,6.640957,-0.736027,7.112912,9.471980,-6.650179,7.974154,-0.117901,-1.530550,2.303743,0.870439,7.967172,-3.851806,8.999381,-3.267998,-7.017007,-4.583133,3.506589,-8.530096,-8.758217,-4.348915,5.861636,-3.501467,-0.920448,-7.395180,-4.695342,8.975660,-7.965763,7.427890,4.168382,8.944023,-1.782880,9.103135,-6.557890,-7.490299,-2.596701,5.723647,5.136685,0.516542,1.929266,1.116250,7.299748,0.121809,-5.011188,3.481081,2.471894,3.985243,2.029319,3.388464,-1.985429,-9.583133,-9.704822,-0.570153,5.799445,1.077577,3.284564,-4.215323,1.651606,1.472888,-2.690830,1.827819,1.793258,9.159866,-1.030143,-7.994956,9.346492,9.610532,-5.803902,1.216329,6.068430,-5.495253,0.251437,3.086472,0.062437,-2.965071,-1.823084,0.907552,-9.063400,-2.414148,0.299273,-7.931651,7.070495,1.985073,0.582528,9.940146,0.949033,-2.772929,9.426914,-3.098228,-0.705368,-8.416647,-1.808151,-9.379237,8.663820,4.846310,4.241167,6.034037,4.010826,-6.027020,7.328748,0.189630,-5.904665,0.703888,-8.910440,-1.229350,-3.415816,5.721106,-6.300040,2.841995,-1.522314,-5.812703,-8.115180,-6.300016,-0.788605,1.233554,-8.470089,1.394621,-3.350590,-4.609640,-0.849431,4.551715,-2.181137,6.148012,-4.959165,-8.526273,-2.935650,-0.643135,-9.166393,-9.133992,4.343104,-6.148468,8.551861,-3.886782,-9.047902,-8.633317,2.017989,5.038236,-9.566810,-5.170332,3.715687,5.237573,-5.130219,7.144015,-9.956553,2.938449,9.677404,2.284985,9.697106,-7.969212,6.027197,-8.903330,-3.425761,-2.757438,0.522628,2.120174,7.064527,-4.740731,-0.113517,-9.706440,0.106833,-0.293337,8.720999,4.492109,-2.044529,-0.758738,-7.607061,-2.938858,-7.639621,5.219499,-4.619073,-0.857500,4.167058,3.128372,-2.455986,-9.792926,4.613267,-7.689840,7.577389,-1.011243,6.235962,1.018235,6.802300,-0.110619,-4.620083,6.402508,-7.597153,-8.639973,-2.745003,4.586286,4.324199,1.908515,5.250454,3.227490,0.418681,-3.012394,-5.113037,8.829109,1.840070,9.661771,8.416477,-7.386589,-3.549129,-5.740197,-6.411034,-8.321505,9.466652,7.079047,6.457595,2.974192,-2.142119,-4.297277,4.875707,-0.330715,2.789341,-2.484320,4.001426,5.887793,3.983069,-9.985294,6.991390,4.086682,-6.032139,1.035712,7.251094,3.076478,-6.875902,-0.580511,4.966276,2.493384,-7.523756,0.485233,-0.585774,-9.319055,-2.980703,-4.399502,2.500448,1.635145,-8.134653,5.239545,8.478109,6.299257,-4.065671,-1.283697,-0.461868,2.730576,9.264892,-4.480899,3.852544,-6.343369,-5.638692,4.400537,-8.567608,0.114219,-4.341606,4.550623,7.191664,7.922660,-0.904615,9.433225,6.969324,-3.656667,-0.691168,7.094547,7.559831,5.314758,-6.648714,5.969752,2.875162,1.884409,6.546120,-9.146879,1.918482,4.982779,9.525222,-0.280565,1.471224,9.038915,-3.170963,5.332902,-3.692840,8.457876,6.554759,-3.586127,9.634795,-5.129897,-9.520021,-7.389410,7.027923,6.902569,-6.182315,4.535916,-8.491184,2.741502,5.277753,-5.286881,-2.261946,-4.390400,-3.219248,-8.625285,-3.929381,4.010965,2.197317,-1.833938,8.589163,0.637662,-2.955817,5.183700,-4.795283,0.513020,1.545568,2.370513,2.300425,6.790442,-3.856347,5.838306,6.600051,3.067594,-0.018374,3.694757,-1.915390,-7.874316,4.675612,0.003722,-6.793066,-1.173971,7.046019,8.523194,2.692094,-6.264506,8.794748,6.034411,-5.224416,7.595305,-2.461614,-3.428697,-4.450802,0.903425,-6.176830,9.741217,6.916024,-0.061023,3.245797,4.503811,1.196289,9.489608,-3.538895,1.590038,1.152993,5.735553,9.595624,-9.386336,-2.701286,2.127601,2.687785,-6.995985,-0.961616,8.144132,-7.234257,1.866809,-7.713479,-6.764475,3.329765,-4.717163,2.660912,-0.793911,7.876487,-7.154421,6.992753,0.093243,-9.241553,6.352877,-6.188342,-2.705234,-7.761499,-1.653149,-9.574548,9.550120,-5.549322,4.081187,2.869718,-5.127633,-9.360154,9.829449,1.116304,-3.427754,-3.510573,-6.076551,-2.004835,5.702154,-3.747158,-1.697809,7.926404,-4.204664,5.582697,8.850526,-6.038714,9.715692,-9.325060,-9.668391,6.594030,8.755740,-8.624715,4.828773,-3.452624,5.690712,-6.640531,-7.551465,3.835392,-3.306383,-8.032360,-3.834536,0.475439,0.167305,-0.323665,0.731686,7.279079,2.660521,7.576066,-8.568751,2.271789,-1.088964,3.437815,7.935554,-8.250086,7.722001,2.637354,1.292336,-5.710481,-9.311596,-2.397893,-0.229263,-2.844561,6.728893,-2.040894,-2.526753,-0.443198,-2.711135,0.604162,-9.431328,2.515079,-9.261972,7.875870,4.655554,-2.306757,-6.259140,-8.764419,-5.919000,-8.655246,-2.971835,-5.729716,4.974521,8.553265,-5.937095,3.901914,-4.912851,8.824607,-2.736448,-1.389938,-0.226469,7.176951,9.623421,1.314024,6.683302,-7.428631,6.462612,-1.992600,7.411395,-0.911481,-0.657621,-6.613037,-1.041468,0.155491,8.164104,-2.138061,-3.709059,-3.682124,5.700929,-8.373075,-4.080145,-8.217542,9.987083,-2.522445,1.890689,-3.536373,-4.242484,-0.948561,-1.897614,3.512082,-1.849490,5.285610,-3.310087,-3.268544,-1.096799,-6.311861,5.694536,-0.429349,1.405039,6.041591,1.749479,-8.885391,3.381497,-0.349576,-7.639553,6.065891,1.123639,7.845804,-2.212872,-4.991912,-9.780420,1.905585,9.436348,-8.017393,-1.385418,1.787922,-6.636274,-5.661311,3.257732,4.829668,-2.150343,-1.275349,-1.614445,4.468295,4.268265,9.343677,-9.279544,-0.283929,-3.079487,-4.340867,-0.825283,-8.093967,8.150671,-6.011889,8.316051,-7.081034,-3.068283,7.911343,0.876693,-7.275645,-3.627929,-7.491756,-8.834761,0.196286,-4.557299,-6.051550,3.681859,3.886656,4.642632,6.747048,6.073643,-4.358830,-7.609820,-5.771488,9.342380,2.396974,-8.861962,-4.920338,-4.718530,5.384374,-7.443747,9.301549,-0.264020,-7.441143,0.847303,-7.280323,-4.913951,-8.899334,9.605351,-0.734612,1.735908,-5.458481,9.731165,4.869575,-5.445656,-6.346366,-4.002409,2.697725,-8.892327,-9.516277,0.575188,4.526601,3.447252,1.234829,-4.443392,2.537056,6.063041,-5.126038,7.851516,-3.146898,-0.702299,-1.208776,-6.263991,-3.373205,5.368285,-9.545086,4.953357,-3.933539,-9.058694,6.338730,6.039453,-2.185473,7.445032,-1.766266,-4.868312,-6.400310,6.229067,3.779854,-6.392928,1.638338,-9.710068,7.191441,8.625651,4.375866,6.164995,-2.782591,6.256696,5.541103,2.051104,8.039953,-2.942219,7.240813,-6.230110,0.416331,-7.227286,0.721173,0.077948,-3.310836,-7.400651,-7.064298,7.181084,8.937793,8.412452,0.424423,-3.025727,9.881480,-8.046416,-4.698815,8.711872,-1.269231,-1.427914,4.073600,-5.487626,-3.844226,0.181936,-9.121603,-3.825715,4.343060,-6.669334,-4.685103], dtype = "float64")#candidate|7748|(2080,)|const|float64
call_7746 = relay.TupleGetItem(func_3390_call(relay.reshape(var_7747.astype('float64'), [132, 16]), relay.reshape(const_7748.astype('float64'), [2080,]), relay.reshape(var_7747.astype('float32'), [132, 16]), ), 1)
call_7749 = relay.TupleGetItem(func_3395_call(relay.reshape(var_7747.astype('float64'), [132, 16]), relay.reshape(const_7748.astype('float64'), [2080,]), relay.reshape(var_7747.astype('float32'), [132, 16]), ), 1)
output = relay.Tuple([call_7714,call_7720,call_7734,const_7735,call_7741,call_7746,var_7747,const_7748,])
output2 = relay.Tuple([call_7715,call_7721,call_7736,const_7735,call_7742,call_7749,var_7747,const_7748,])
func_7754 = relay.Function([var_7747,], output)
mod['func_7754'] = func_7754
mod = relay.transform.InferType()(mod)
var_7755 = relay.var("var_7755", dtype = "float64", shape = (2112,))#candidate|7755|(2112,)|var|float64
output = func_7754(var_7755)
func_7756 = relay.Function([var_7755], output)
mutated_mod['func_7756'] = func_7756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5210_call = mod.get_global_var('func_5210')
func_5212_call = mutated_mod.get_global_var('func_5212')
call_7793 = func_5210_call()
call_7794 = func_5210_call()
output = relay.Tuple([call_7793,])
output2 = relay.Tuple([call_7794,])
func_7801 = relay.Function([], output)
mod['func_7801'] = func_7801
mod = relay.transform.InferType()(mod)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7801_call = mutated_mod.get_global_var('func_7801')
call_7802 = func_7801_call()
output = call_7802
func_7803 = relay.Function([], output)
mutated_mod['func_7803'] = func_7803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7141_call = mod.get_global_var('func_7141')
func_7142_call = mutated_mod.get_global_var('func_7142')
call_7877 = func_7141_call()
call_7878 = func_7141_call()
func_3424_call = mod.get_global_var('func_3424')
func_3427_call = mutated_mod.get_global_var('func_3427')
const_7887 = relay.const([[False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True],[False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True],[True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False],[True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False],[True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True]], dtype = "bool")#candidate|7887|(6, 52)|const|bool
call_7886 = relay.TupleGetItem(func_3424_call(relay.reshape(const_7887.astype('bool'), [12, 2, 13])), 0)
call_7888 = relay.TupleGetItem(func_3427_call(relay.reshape(const_7887.astype('bool'), [12, 2, 13])), 0)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_7897 = relay.TupleGetItem(func_5004_call(), 0)
call_7898 = relay.TupleGetItem(func_5005_call(), 0)
output = relay.Tuple([call_7877,call_7886,const_7887,call_7897,])
output2 = relay.Tuple([call_7878,call_7888,const_7887,call_7898,])
func_7903 = relay.Function([], output)
mod['func_7903'] = func_7903
mod = relay.transform.InferType()(mod)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mutated_mod.get_global_var('func_7903')
call_7904 = func_7903_call()
output = call_7904
func_7905 = relay.Function([], output)
mutated_mod['func_7905'] = func_7905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7801_call = mod.get_global_var('func_7801')
func_7803_call = mutated_mod.get_global_var('func_7803')
call_7928 = relay.TupleGetItem(func_7801_call(), 0)
call_7929 = relay.TupleGetItem(func_7803_call(), 0)
func_6230_call = mod.get_global_var('func_6230')
func_6232_call = mutated_mod.get_global_var('func_6232')
call_7959 = relay.TupleGetItem(func_6230_call(), 0)
call_7960 = relay.TupleGetItem(func_6232_call(), 0)
output = relay.Tuple([call_7928,call_7959,])
output2 = relay.Tuple([call_7929,call_7960,])
func_7973 = relay.Function([], output)
mod['func_7973'] = func_7973
mod = relay.transform.InferType()(mod)
mutated_mod['func_7973'] = func_7973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7973_call = mutated_mod.get_global_var('func_7973')
call_7974 = func_7973_call()
output = call_7974
func_7975 = relay.Function([], output)
mutated_mod['func_7975'] = func_7975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4587_call = mod.get_global_var('func_4587')
func_4588_call = mutated_mod.get_global_var('func_4588')
call_8029 = relay.TupleGetItem(func_4587_call(), 0)
call_8030 = relay.TupleGetItem(func_4588_call(), 0)
output = relay.Tuple([call_8029,])
output2 = relay.Tuple([call_8030,])
func_8037 = relay.Function([], output)
mod['func_8037'] = func_8037
mod = relay.transform.InferType()(mod)
mutated_mod['func_8037'] = func_8037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8037_call = mutated_mod.get_global_var('func_8037')
call_8038 = func_8037_call()
output = call_8038
func_8039 = relay.Function([], output)
mutated_mod['func_8039'] = func_8039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8068 = relay.var("var_8068", dtype = "float64", shape = (14, 7, 4))#candidate|8068|(14, 7, 4)|var|float64
uop_8069 = relay.sin(var_8068.astype('float64')) # shape=(14, 7, 4)
bop_8081 = relay.logical_or(uop_8069.astype('bool'), relay.reshape(var_8068.astype('bool'), relay.shape_of(uop_8069))) # shape=(14, 7, 4)
func_7973_call = mod.get_global_var('func_7973')
func_7975_call = mutated_mod.get_global_var('func_7975')
call_8086 = relay.TupleGetItem(func_7973_call(), 1)
call_8087 = relay.TupleGetItem(func_7975_call(), 1)
func_4739_call = mod.get_global_var('func_4739')
func_4742_call = mutated_mod.get_global_var('func_4742')
const_8089 = relay.const([1.522200,-9.649186,-7.261370,9.364794,8.608039,7.090723,-8.182108,-3.183522,3.007141,-9.420631,7.925967,6.452694,5.012112,-0.829139,1.749067,2.738756,7.064455,4.633032,-7.618834,6.490498,8.345925,-1.746219,9.028692,-2.368830,-9.881866,-5.629854,-9.493956,4.452387,-5.102854,-2.573783,6.607214,-1.701046,-5.155296,-6.601330,-8.735046,-2.844389,-0.870142,2.965365,8.730842,5.645570,-8.197843,2.995217,8.907914,0.507159,-1.871423,2.418012,8.178836,-6.163842,-8.387299,-7.312189,-8.431259,-9.231779,-0.391597,-3.288454,4.738460,5.897437,-0.293094,-8.892930,9.207781,8.993630,-9.685195,5.399959,-7.409677,2.613361,0.671438,6.194917,-8.372134,-9.785115,7.785211,-3.970632,-6.039306,3.673988,-1.623371,-8.113876,0.798361,-8.128915,2.120643,7.645664,0.035427,-0.186068,4.503275,8.949346,9.473429,-7.201604,-5.210566,9.526400,-6.422392,5.961256,1.519269,8.325574,7.956454,-8.036053,6.716485,-7.923439,-8.735153,8.145198,-2.391935,0.083898,2.004126,5.026591,-9.175255,-4.940275,2.608620,6.585496,-6.194627,6.828513,-3.316511,-7.249409,2.758554,9.275688,4.730003,0.365689,5.081170,7.873933,-4.712103,-1.250674,9.965997,-6.398537,7.774208,3.550282,-3.763388,7.396509,-0.060861,-8.941757,2.389547,1.762550,2.167167,-4.136901,4.498189,8.010058,-9.343361,-5.118967,-1.699971,-0.909556,6.125698,5.341494,-3.847319,-5.342806,-7.497542,2.617880,-7.461744,-1.119216,2.697890,-6.097848,-5.207136,2.295798,-1.066590,6.026999,-9.685180,-3.494539,6.560180,0.429729,-8.291584,6.852255,-1.726900,-0.417635,2.917983,-1.496735,-9.655814,-0.581183,-4.211412,8.514139,0.788576,-8.165614,2.028027,3.381368,-7.924538,-3.594836,8.865977,-0.477066,-7.821676,-9.259950,4.947654,9.982188,-8.242024,3.878617,4.678331,9.814702,4.444844,-0.643176,-3.717648,0.444175,-8.103989,3.474101,7.694166,7.508372,8.113856,-6.433184,2.619086,-1.501685,6.431203,-6.445854,-1.650377,6.297669,3.006414,-3.770095,-9.239045,7.158631,-2.028493,-7.769139,-0.538426,1.268846,9.031604,-3.639117,2.492847,-7.065107,-6.337879,2.345840,-1.998390,-1.756137,-6.710713,5.301774,6.857662,8.041963,-8.656825,9.121290,-3.055961,-7.936430,-7.727916,-6.500710,1.659283,-8.654907,0.912896,-3.049684,0.679192,-3.342149,-9.620217,-2.396340,-5.911067,2.194716,8.246035,2.118791,4.239714,6.225553,-5.941307,-4.969071,6.569645,-3.244997,-8.758058,-6.921255,4.086994,-8.196873,3.934050,0.022427,-2.794702,-4.565847,-4.691400,8.168345,4.117534,8.027028,-5.862446,5.545671,0.477102,8.298473,-7.421183,4.910952,-7.699005,8.236598,-3.735764,3.615863,2.761605,-1.328993,4.583690,-8.898066,-2.804537,-7.767785,7.644098,-1.136468,1.430115,-4.249007,-5.697258,-0.531086,5.403384,-4.066486,-9.691776,7.273628,9.276512,9.500911,4.231431,7.016972,-8.703010,0.255545,9.091403,-4.204629,5.008696,-9.074238,-1.134120,-4.993867,3.069525,8.551944,-8.234015,5.100444,-3.431815,-1.338929,-4.103923,1.764572,1.082411,-9.473470,4.103184,-0.634140,-6.214413,-0.939712,2.348024,-8.944880,2.434299,-9.058189,-1.108654,1.788410,2.819136,8.351564,0.583472,-7.136400,3.800618,1.544360,8.652950,9.369561,-0.081374,-5.483876,-0.808639,-5.328881,-6.532796,5.126872,8.555533,2.241784,-3.671008,-9.211716,7.881596,-8.944735,-8.039222,5.204789,1.258476,5.635487,-1.264316,3.716421,-2.370031,-8.850552,2.137810,-4.753766,-2.879112,1.482649,-5.261175,-5.405622,-7.649257,-3.323324,-2.497904,-6.022356,-7.344198,-6.634341,1.652264,0.956263,4.176006,-1.625478,7.039196,0.827132,-1.364865,-0.027720,5.984907,-0.832578,4.872126,-8.378936,3.822711,-0.404588,-8.187108,-7.486470,-0.441877,5.612349,-2.862792,-0.087633,-9.340531,7.309630,-4.339373,4.323760,5.901894,8.134970,-9.942027,-1.177321,-2.280136,0.463322,5.792732,-9.772185,7.199061,-9.228996,5.376190,2.584442,-8.909428,-5.111401,-4.067202,-3.123504,-2.801059,2.766191,4.798154,-2.653315,-6.687438,-1.000263,2.543392,4.747226,1.661697,-5.931787,0.382783,-3.706896,1.022223,-9.787804,1.666223,0.870958,2.300268,-8.233199,-2.670495,-8.954098,7.461673,9.657426,-2.756146,9.596029,-5.499550,-2.867053,-1.485794,9.827859,-3.810737,6.098023,5.930189,9.561240,5.571323,1.363899,-4.038352,-6.260529,4.183042,-8.944892,6.634490,4.996231,-2.997796,2.395155,-1.387164,-2.192294,-4.153946,-8.534516,-5.658037,-3.312602,-7.294721,4.127971,-2.974398,-8.439348,7.393768,0.191732,-5.656927,-0.771069,-7.814722,0.581281,1.933032,3.868673,-7.583982,8.872682,5.663124,-7.805705,3.482344,-0.959244,-7.749226,4.712598,-9.757049,-0.906583,6.729775,3.716888,-7.227455,6.822361,-6.191268,4.005077,-4.122158,0.499402,0.741450,6.239469,1.280350,-3.746827,-5.848216,-8.425428,-3.614599,-0.901682,9.428388,2.654006,-2.754344,5.804067,-3.081816,4.492615,2.875070,-5.054617,1.988102,-2.236286,-7.825368,-5.863114,-1.012138,4.278883,6.223173,5.055255,6.625249,-8.230988,5.093215,-3.946955,-4.300336,-5.680761,-2.812526,-7.965364,9.774066,-0.172226,0.689008,-7.609912,0.323052,-4.120552,4.690266,-1.223700,7.308306,1.039796,-7.826409,-2.344723,2.794742,1.320036,4.397864,0.632675,-0.352278,-6.940891,-8.747985,5.930369,-8.813850,-2.390696,2.220209,-2.365030,8.715079,4.167114,2.906639,1.643314,7.731527,-6.868162,-5.193015,6.809218,-0.983025,4.420655,-2.078540,-9.565584,-5.470232,9.450740,6.341407,-8.127932,8.188032,9.622614,7.340310,2.690186,4.664519,-4.105609,-8.605931,-0.814711,9.733474,6.871458,-2.333831,9.454408,9.234685,6.919757,-6.365722,7.818885,2.484068,5.176008,5.791572,2.091575,-8.654112,3.672836,1.586597,4.016694,2.475213,8.940448,0.618303,-2.986880,3.986830,6.362034,-2.265305,6.011655,6.193375,-1.771179,9.956988,7.453852,7.462589,-2.265546,-8.911225,-6.930210,2.417111,-1.937901,-4.577063,3.502799,-2.421231,1.224657,4.324928,-1.165009,8.053627,-5.304200,9.427365,1.144046,-8.051794,6.045267,1.915342,-0.111850,4.740652,7.143378,8.671695,1.928225,-2.806347,-3.631661,9.031407,-5.283489,-4.599602,-7.217330,9.557912,-3.297773,6.414616,-2.062751,1.053417,5.700783,0.331202,-4.560813,9.450845,-2.707270,7.702122,-2.678782,-9.469230,0.132463,0.786862,-3.745739,6.665903,-4.017020,-2.083939,-7.079981,5.540165,2.257906,-3.300707,6.521465,8.593107,1.778681,8.066238,-9.482304,5.412845,-1.255383,9.592033,2.216511,5.287308,8.192881,-3.625187,-6.246846,-8.653520,1.053781,1.930413,-2.397145,-2.988890,8.611757,6.134117,3.845152,-7.837667,8.814974,-4.131115,-2.532681,-6.823645,-6.818547,8.720798,-5.955683,-6.645321,2.142166,6.420229,-6.646652,4.812546,2.077145,1.916513,2.276070,-6.008937,7.239834,9.833320,-4.041477,-1.583312,2.900515,1.868371,1.335403,5.408290,-1.270230,-6.952077,-7.995363,-3.445878,4.753527,7.262725,8.962035,4.635057,-4.890010,3.568879,1.352537,1.764080,0.165457,-1.622292,-2.598240,3.000941,-5.137500,-4.580613,-4.955197,-3.220508,-6.650672,-0.954105,2.388097,4.978271,6.031423,1.999124,-3.279725,7.165456,8.310462,-8.339565,0.604841,-7.949556,5.482227,-4.362545,-9.635256,8.965584,-6.040508,-7.551593,-3.302113,-1.334302,-9.093009,-6.054104,-4.892558,1.536114,2.190907,-6.548924,5.146340,2.942727,7.289310,-1.828468,-1.268330,-0.930544,-9.891703,6.293279,-6.988176,-9.639767,1.161654,3.691977,-0.571101,9.390565,-3.230145,-6.195599,1.893444,4.212229,3.695800,-9.328891,3.831758,6.495197,5.127302,-2.833092,-1.502136,1.835805,5.868756,9.197227,2.504288,-4.719636,-4.662171,4.309041,-4.829395,-0.658006,6.777377,8.992428,-6.005495,-6.485647,0.552806,6.883464,2.352679,9.057985,-3.487820,-5.810939,-4.204216,3.010722,6.780209,-5.848941,3.020288,0.445581,3.657630,-4.026445,1.055853,1.298545,1.414667,-6.646904,5.339460,-6.800531,6.854109,4.634526,0.001099,-0.588489,-9.999830,-7.316676,-2.078394,-4.475437,-9.191961,2.403387,7.218097,7.237830,2.552745,3.281813,3.615219,-0.481447,-9.449429,-2.536584,0.855956,-3.506437,4.344056,9.812357,-4.675488,5.853101,-3.552073,4.835899,-9.989712,9.276661,-0.539720,-9.965775,-6.332017,-2.677346,4.868013,-5.982828,-7.283234,-6.302983,1.522449,1.133236,9.082012,-0.037248,9.902578,8.561128,-9.029780,0.540855,1.320915,3.489439,2.614103,-3.162066,-0.160807,3.249612,6.091171,0.228306,5.147241,-4.693443,0.466657,4.076775,-8.917296,-5.385469,9.549875,-0.473681,-3.317341,-6.219229,8.255367,-1.408250,4.470045,-7.132352,3.712891,7.846356,-4.968621,7.932468,-4.533728,-2.583338,4.626296,-5.842125,4.717841,8.400167,-5.282189,5.651331,-7.531426,1.055717,8.781491,-0.953791,9.579506,8.476231,1.837507,-4.668766,9.441187,7.024598,9.916442,0.941947,-4.700392,-7.216655,-8.300098,-7.650232,6.780932,-6.773801,-9.571781,9.649880,-6.810639,7.567958,8.013801,-1.659414,5.360322,0.022732,5.720434,9.582592,7.995329,-3.925364,9.915228,-6.191365,-0.145691,0.634923,5.075454,6.632335,3.091594,-6.234077,-2.285994,-7.973125,-1.535204,-2.663935,-4.902241,5.330562,-8.529143,-7.619516,-7.463732,-0.583282,2.065130,3.378848,2.146887,3.099727,-5.742126,2.969003,-1.475235,-3.190001,-6.390938,-8.666871,-7.108752,-9.975424,8.438166,-5.316570,-9.586554,-3.768406,-6.847812,-0.998453,-1.734536,-8.680384,8.048705,9.131519,9.316221,-4.366109,2.658390,5.841466,-2.990796,-0.343376,-4.933947,-7.203144,6.289311,-4.410554,-7.502350,0.560128,-1.240225,2.088082,-9.648562,1.202389,-8.389918,3.447612,-5.516417,1.088126,-2.724934,-2.089139,-5.200803,5.681899,-6.441164,0.789779,0.629850,3.058756,0.771725,0.527662,-6.331992,4.885911,3.393851,-3.495021,1.167317,-9.585215,9.864204,-5.048792,5.905359,1.321847,-4.729688,0.489799,-9.700587,6.634367,5.226129,7.275556,-2.909255,5.931252,8.803733,6.896714,4.023101,-8.706603,3.633007,3.816553,8.063803,-3.257338,3.892845,5.752313,-1.533802,8.342700,3.606156,6.396816,-3.015898,2.779720,-3.238046,-1.169729,3.910646,-3.571173,-1.795979,9.160240,0.328976,2.601053,9.601524,-0.577403,5.848145,-6.112902,-4.784724,-1.657376,-2.318678,-0.980838,2.290409,-1.621213,2.192112,2.105689,-9.575273,6.499933,-1.652595,3.760236,0.570965,5.124871,2.611277,-2.257232,-1.251939,-4.599136,-3.243346,6.601929,-0.162176,-7.426425,9.645773,3.457319,9.715768,4.659582,0.912968,0.694860,-1.569031,1.339904,-8.602297,5.939628,0.187689,6.585588,-5.759935,7.437746,9.584268,-2.116263,8.588491,-7.718602,8.306846,-6.996017,-1.832523,2.649557,-9.263131,7.927289,-3.065522,7.305287,-9.644721,-7.727244,-8.556878,7.570081,4.961974,-5.591392,1.329573,3.042955,-3.780579,9.497401,-2.234191,9.120916,-5.949091,2.924853,4.948718,-6.416589,-3.068804,-3.486245,-9.942102,-2.234737,0.214590,-9.195349,8.802004,5.854563,7.002817,6.000079,-8.681458,-5.143239,1.614573,3.111382,4.330057,-6.337528,-9.822698,-2.465908,3.007195,5.158815,0.618178,8.631959,3.960450,-7.233148,-4.649191,-7.006288,-7.570707,5.499060,8.279800,-6.494085,-5.689834,-4.131799,6.850952,3.960955,7.848560,8.400402,-9.320007,7.002704,-9.422812,-8.647960,7.597274,5.447506,4.074708,9.796857,8.144078,8.263355,4.262680,1.943542,-3.254639,9.176116,5.784995,-6.541634,8.256430,2.860322,9.988968,-8.935252,1.513615,-9.216319,-8.205300,4.674075,3.436729,9.675501,-8.892796,7.534338,1.711036,-2.902820,-0.219446,-6.630411,-8.881504,4.459276,6.795797,8.799318,5.279582,-7.312897,3.269459,6.376655,-9.619865,2.262992,8.638235,-4.413147,2.652291,5.977842,0.282789,-1.468190,-9.701434,-2.541406,1.384226,-6.436393,4.724001,7.752626,-5.188630,-0.478521,6.735704,1.602571,-4.464814,-9.221483,-2.359618,0.489476,6.283048,2.523592,6.173398,-3.961196,3.180860,1.015556,3.476976,-9.652375,-7.749635,-8.470346,-6.962995,-1.032706,1.807492,7.078378,3.139488,-5.248015,-9.951881,-8.232738,6.932291,-3.526636,8.205211,8.761372,-9.621959,-0.715766,-8.114777,3.401394,-1.110781,-6.504574,-2.710395,6.207548,-2.723995,-2.502141,2.658607,8.218369,7.628284,-7.546570,0.359768,2.283770,6.189644,-3.562306,3.403093,-3.386065,-7.905116,2.077212,-2.220605,-7.516603,-8.598226,0.953585,6.652123,-9.337258,1.097157,7.449635,3.575532,-7.918671,-0.163646,-2.059786,-5.516446,5.919612,7.098921,8.950292,0.857472,0.084525,5.401957,2.819402,5.226658,7.986270,-7.437107,3.350180,-2.102359,-3.586292,3.420848,-7.871015,-5.534995,-4.582739,-5.356196,1.770631,1.650882,-9.059470,-0.646384,6.574257,4.682640,-6.387438,6.453035,9.176496,9.422844,-5.184471,0.986349,2.931204,-5.638795,8.401803,7.843436,-2.688485,4.706671,1.710235,-0.459917,0.295699,-1.302959,-5.354302,-9.393276,2.562679,3.897648,-7.690810,-3.437331,-2.953616,5.989212,4.802186,4.249410,0.449690,-5.423281,-0.951543,1.455744,0.169872,5.376130,9.903582,2.959408,1.174013,-5.454985,7.958705,0.159353,0.970227,-4.769245,-4.183562,-1.816062,-5.723218,-1.865146,9.099888,4.068535,2.128430,-3.426338,-5.179493,9.829516,4.394270,3.468325,-6.001862,-5.966247,6.900942,5.371788,-9.146216,9.756891,-4.731084,7.914161,8.696827,-0.838308,8.728851,4.371723,8.764537,-9.139408,-4.902724,7.577621,-7.690158,-7.190412,-8.570850,3.763723,1.489273,-7.559968,0.519240,2.706966,-7.464175,8.418341,9.358126,8.017873,-6.225734,8.417782,7.058071,7.484611,-9.413151,7.616801,2.275361,-3.005247,8.450573,2.108334,-1.368949,3.702799,-5.408852,8.338163,4.766034,-8.028911,-1.167753,-7.784982,3.242125,3.741824], dtype = "float32")#candidate|8089|(1344,)|const|float32
call_8088 = relay.TupleGetItem(func_4739_call(relay.reshape(const_8089.astype('float32'), [6, 14, 16])), 0)
call_8090 = relay.TupleGetItem(func_4742_call(relay.reshape(const_8089.astype('float32'), [6, 14, 16])), 0)
var_8093 = relay.var("var_8093", dtype = "bool", shape = (14, 7, 4))#candidate|8093|(14, 7, 4)|var|bool
bop_8094 = relay.less(bop_8081.astype('bool'), relay.reshape(var_8093.astype('bool'), relay.shape_of(bop_8081))) # shape=(14, 7, 4)
output = relay.Tuple([call_8086,call_8088,const_8089,bop_8094,])
output2 = relay.Tuple([call_8087,call_8090,const_8089,bop_8094,])
func_8099 = relay.Function([var_8068,var_8093,], output)
mod['func_8099'] = func_8099
mod = relay.transform.InferType()(mod)
mutated_mod['func_8099'] = func_8099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8099_call = mutated_mod.get_global_var('func_8099')
var_8101 = relay.var("var_8101", dtype = "float64", shape = (14, 7, 4))#candidate|8101|(14, 7, 4)|var|float64
var_8102 = relay.var("var_8102", dtype = "bool", shape = (14, 7, 4))#candidate|8102|(14, 7, 4)|var|bool
call_8100 = func_8099_call(var_8101,var_8102,)
output = call_8100
func_8103 = relay.Function([var_8101,var_8102,], output)
mutated_mod['func_8103'] = func_8103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4127_call = mod.get_global_var('func_4127')
func_4129_call = mutated_mod.get_global_var('func_4129')
call_8114 = relay.TupleGetItem(func_4127_call(), 0)
call_8115 = relay.TupleGetItem(func_4129_call(), 0)
output = relay.Tuple([call_8114,])
output2 = relay.Tuple([call_8115,])
func_8126 = relay.Function([], output)
mod['func_8126'] = func_8126
mod = relay.transform.InferType()(mod)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8126_call = mutated_mod.get_global_var('func_8126')
call_8127 = func_8126_call()
output = call_8127
func_8128 = relay.Function([], output)
mutated_mod['func_8128'] = func_8128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_8147 = func_3507_call()
call_8148 = func_3507_call()
output = relay.Tuple([call_8147,])
output2 = relay.Tuple([call_8148,])
func_8155 = relay.Function([], output)
mod['func_8155'] = func_8155
mod = relay.transform.InferType()(mod)
output = func_8155()
func_8156 = relay.Function([], output)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_8188 = relay.TupleGetItem(func_4270_call(), 0)
call_8189 = relay.TupleGetItem(func_4272_call(), 0)
func_3507_call = mod.get_global_var('func_3507')
func_3508_call = mutated_mod.get_global_var('func_3508')
call_8198 = func_3507_call()
call_8199 = func_3507_call()
output = relay.Tuple([call_8188,call_8198,])
output2 = relay.Tuple([call_8189,call_8199,])
func_8201 = relay.Function([], output)
mod['func_8201'] = func_8201
mod = relay.transform.InferType()(mod)
mutated_mod['func_8201'] = func_8201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8201_call = mutated_mod.get_global_var('func_8201')
call_8202 = func_8201_call()
output = call_8202
func_8203 = relay.Function([], output)
mutated_mod['func_8203'] = func_8203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6913_call = mod.get_global_var('func_6913')
func_6914_call = mutated_mod.get_global_var('func_6914')
call_8218 = relay.TupleGetItem(func_6913_call(), 2)
call_8219 = relay.TupleGetItem(func_6914_call(), 2)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_8223 = relay.var("var_8223", dtype = "float64", shape = (2112,))#candidate|8223|(2112,)|var|float64
var_8224 = relay.var("var_8224", dtype = "float64", shape = (1, 2080))#candidate|8224|(1, 2080)|var|float64
call_8222 = relay.TupleGetItem(func_1197_call(relay.reshape(var_8223.astype('float64'), [12, 11, 16]), relay.reshape(var_8224.astype('float64'), [104, 20]), ), 1)
call_8225 = relay.TupleGetItem(func_1200_call(relay.reshape(var_8223.astype('float64'), [12, 11, 16]), relay.reshape(var_8224.astype('float64'), [104, 20]), ), 1)
bop_8245 = relay.left_shift(var_8224.astype('uint64'), relay.reshape(call_8222.astype('uint64'), relay.shape_of(var_8224))) # shape=(1, 2080)
bop_8248 = relay.left_shift(var_8224.astype('uint64'), relay.reshape(call_8225.astype('uint64'), relay.shape_of(var_8224))) # shape=(1, 2080)
output = relay.Tuple([call_8218,var_8223,bop_8245,])
output2 = relay.Tuple([call_8219,var_8223,bop_8248,])
func_8249 = relay.Function([var_8223,var_8224,], output)
mod['func_8249'] = func_8249
mod = relay.transform.InferType()(mod)
var_8250 = relay.var("var_8250", dtype = "float64", shape = (2112,))#candidate|8250|(2112,)|var|float64
var_8251 = relay.var("var_8251", dtype = "float64", shape = (1, 2080))#candidate|8251|(1, 2080)|var|float64
output = func_8249(var_8250,var_8251,)
func_8252 = relay.Function([var_8250,var_8251,], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7141_call = mod.get_global_var('func_7141')
func_7142_call = mutated_mod.get_global_var('func_7142')
call_8308 = func_7141_call()
call_8309 = func_7141_call()
output = relay.Tuple([call_8308,])
output2 = relay.Tuple([call_8309,])
func_8319 = relay.Function([], output)
mod['func_8319'] = func_8319
mod = relay.transform.InferType()(mod)
mutated_mod['func_8319'] = func_8319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8319_call = mutated_mod.get_global_var('func_8319')
call_8320 = func_8319_call()
output = call_8320
func_8321 = relay.Function([], output)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_8322 = relay.TupleGetItem(func_4270_call(), 0)
call_8323 = relay.TupleGetItem(func_4272_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_8335 = relay.var("var_8335", dtype = "float64", shape = (2112,))#candidate|8335|(2112,)|var|float64
var_8336 = relay.var("var_8336", dtype = "float64", shape = (2080,))#candidate|8336|(2080,)|var|float64
call_8334 = relay.TupleGetItem(func_1197_call(relay.reshape(var_8335.astype('float64'), [12, 11, 16]), relay.reshape(var_8336.astype('float64'), [104, 20]), ), 1)
call_8337 = relay.TupleGetItem(func_1200_call(relay.reshape(var_8335.astype('float64'), [12, 11, 16]), relay.reshape(var_8336.astype('float64'), [104, 20]), ), 1)
bop_8382 = relay.left_shift(call_8334.astype('int16'), relay.reshape(var_8336.astype('int16'), relay.shape_of(call_8334))) # shape=(104, 20)
bop_8385 = relay.left_shift(call_8337.astype('int16'), relay.reshape(var_8336.astype('int16'), relay.shape_of(call_8337))) # shape=(104, 20)
const_8404 = relay.const([7.889813,7.731782,0.214064,-8.509230,8.625416,-2.230230,3.076316,-9.907300,-0.662028,-7.593793,4.542478,9.658297,-6.397647,-9.048871,4.192586,2.810811,-9.310048,3.931391,9.889338,4.990715,5.585597,6.071350,3.568235,-4.883285,-2.529855,-6.554997,5.865297,-6.461025,-9.217939,3.089560,2.586583,-9.792076,-8.640432,3.995145,-6.743880,-6.136149,-0.779519,-7.497386,-5.959789,-0.459079,3.816061,-4.000267,-4.031306,-2.641969,3.870807,0.429330,-1.639431,-7.038179,2.244671,5.880212,8.230168,1.495915,5.003359,8.107682,-7.179357,-0.271697,-8.937000,-1.223491,-2.126675,4.423010,7.161771,-6.966753,7.854166,-0.557525,-0.507205,-3.509985,0.071255,0.059365,3.646588,-6.677927,-5.672979,1.446219,5.967215,-7.654553,-1.129611,8.353139,-4.167897,4.237704,5.193890,-3.267133,8.966220,1.942154,-0.479077,1.490413,3.371440,-8.621245,0.883268,-4.701762,0.499776,-2.575869,-9.650957,5.029407,4.171385,-9.851214,-3.603474,-7.472770,9.312332,6.045152,-0.589800,6.590668,-3.530099,-1.785928,4.764915,4.110388,4.164495,-9.984632,7.168367,-3.961142,5.853780,4.866765,5.821408,2.264459,0.822679,-3.296544,-9.536065,0.160891,1.550298,-8.234874,-1.748184,-2.506513,3.347921,-0.677910,-4.424936,5.521442,1.872794,-4.782438,-7.234128,-5.506863,-1.388944,0.591930,-3.879335,2.149290,-0.148990,5.003302,4.547736,-0.262452,-4.045238,-6.793164,3.482564,-1.758414,-6.964623,7.723343,5.114893,6.566419,4.788742,-6.459522,6.432540,9.473405,4.641675,2.055910,-8.154863,5.687700,-8.487928,-8.740244,1.615913,-4.349030,4.962115,-3.974987,2.006213,-8.902254,-8.850455,4.624159,-0.256523,-8.221904,3.411832,2.057474,1.165003,-6.143793,-8.654812,-4.155114,-1.072870,8.452789,-4.232655,-7.436804,9.811822,-5.162110,8.805901,-3.003524,5.325886,5.803171,-7.727733,-0.607862,5.427862,8.226711,2.110565,5.094423,-1.856471,4.127857,-3.958710,0.173103,-6.544730,0.354621,4.330207,-1.471745,-4.895454,6.974171,-5.402027,3.169087,-1.598158,6.555507,-2.580171,8.858849,9.236556,2.207017,-4.860764,-6.646935,2.861275,-5.151743,2.274018,5.833378,-7.631504,-1.302990,-3.111041,-5.082659,-6.534499,9.129702,-7.492654,7.487005,0.636905,7.015400,5.449889,2.025353,-2.893423,4.523077,-3.653222,0.730564,0.726245,0.302589,2.125220,4.667804,9.295064,-1.205413,9.209540,7.424648,5.010261,8.381336,-8.771995,9.635756,-0.396768,-5.721631,3.229794,-5.884576,8.860324,-9.057512,2.991916,-8.036912,-2.741971,9.938571,7.345688,8.752054,4.668772,7.816714,3.720725,-3.085946,-8.462985,-6.891690,6.618414,-1.033664,-6.560826,3.154883,-6.607578,-2.165158,9.743285,1.303604,-4.912765,6.772674,0.731067,-7.995412,4.490028,-6.264738,2.257500,9.431415,6.396349,-6.418304,-4.516019,-2.751064,9.562900,-1.606031,-4.544205,2.982616,-4.930903,-1.973801,-0.424608,-7.215613,-5.716638,8.999214,8.273662,-0.918863,-5.413377,-1.144069,-4.023917,-3.703061,7.305222,-6.446001,-1.227012,-5.938207,-7.519351,-5.575308,8.654756,-0.113968,3.402570,-4.373065,-9.207017,-1.421649,3.586852,-7.505092,0.460685,3.810506,3.907494,-1.060887,-2.665961,-8.437767,7.933114,9.682842,4.498424,-2.727084,5.219147,7.037309,3.381279,-4.222554,-9.095337,5.465156,0.480970,-9.470357,-8.561333,-4.132885,4.937101,-7.146819,7.161183,-8.776534,0.005337,-8.885684,9.554976,9.703021,7.115429,8.469990,-7.040016,0.700149,9.513929,-7.232590,-2.948620,-3.442639,4.760821,-8.036961,-2.024420,2.963903,-5.523120,-2.375556,4.796907,-3.493868,-0.131162,-1.211071,-2.596075,-1.556262,6.238486,-3.013519,-5.292932,2.413589,1.953897,-1.695855,-3.424102,4.335666,3.755718,-2.596327,0.888586,7.687471,-7.211501,-4.634032,9.516868,9.964113,4.217816,-6.969635,-0.298102,4.799972,-8.375735,-7.743629,2.736420,2.860922,2.027645,6.948171,-8.250809,-7.665545,-7.923793,-5.568726,-4.152476,-9.467558,3.828729,0.790497,1.780520,8.693970,-3.050741,-8.594773,6.476864,2.794182,-2.097484,-4.984798,3.687886,4.988795,6.364847,-1.787776,5.174625,-9.133070,4.634101,0.405750,-8.434643,-8.670877,-7.127762,2.660356,-3.410603,-2.343519,5.766887,-2.562366,-2.070476,8.957112,1.657609,2.995037,-2.058455,1.743117,3.483187,-1.441574,8.718487,-2.368172,-2.674533,9.943141,-5.485113,1.220686,-5.581861,0.774518,9.298566,7.400132,-2.179150,-3.176170,-6.563697,-5.849573,-7.591575,8.350911,-3.061668,1.100321,3.216129,4.222021,-3.204114,-0.039776,-8.920353,8.594561,-3.044753,-2.652599,4.081159,5.634417,-7.850647,7.944813,3.174114,-2.423744,5.349669,-4.709825,7.081686,-4.331658,-0.461058,-6.766324,-6.674191,-5.297670,-5.316767,3.896990,5.676993,1.459875,7.746953,-2.405388,-0.482813,-7.441085,-3.289394,-9.271222,-1.526140,-5.608099,6.613988,-0.520586,-7.166308,-4.018229,1.693121,3.215899,1.636675,8.589778,7.096721,6.279116,-4.652033,1.626817,-7.040506,-1.637061,4.688256,2.865310,-1.169148,-5.144506,-1.927842,6.866655,2.585612,9.156579,-0.065824,0.158225,-5.032823,8.774992,-0.685185,-9.054190,-5.588909,7.587573,3.775136,9.885889,-9.343791,-9.310603,-2.489493,9.490433,-3.904280,-8.101571,9.112766,6.136454,-8.803868,-1.697325,0.091730,0.043379,-7.612543,4.185049,3.568098,3.214238,8.250236,6.584844,8.623493,2.819726,0.044602,-1.016325,1.772626,-6.076773,-0.570351,-1.146548,2.272341,-6.833636,-5.306137,3.581115,-1.131349,-4.466052,4.443679,5.548956,-9.101350,-8.454559,1.263293,-3.259650,-6.921024,-5.083670,4.893591,1.486603,1.171895,-3.069324,2.380190,5.902176,-3.811798,8.114890,4.777104,6.779732,5.423004,9.856870,-8.936947,0.820362,9.550643,-2.964236,-2.960005,5.194966,0.311155,-7.370812,-8.070621,-0.059974,5.966380,-7.868609,-7.975194,-6.111872,6.246875,-7.874722,6.053661,9.392143,-7.619880,4.806212,3.412572,-6.545431,7.135063,9.783120,-9.847915,-9.682002,-6.437012,2.982895,-7.365997,-8.088310,0.662997,-2.701415,7.979384,0.320382,7.697573,-8.521370,-8.043122,4.146174,9.422649,4.814339,-4.000602,7.349573,-5.563455,6.949716,-0.180172,-0.935424,4.781544,-2.761371,-2.775815,-5.921364,5.098304,-4.128550,2.132016,8.696457,4.827844,-2.107179,-9.271829,-2.430989,-2.381605,-8.355745,5.356119,5.699836,6.656685,2.465306,8.504322,6.436912,3.627295,-1.573836,3.797567,8.412285,-2.125597,-2.930895,-6.113728,3.067220,-2.721589,4.037649,7.866042,-6.474706,0.742473,-5.535066,6.842155,8.453487,-4.022749,8.300145,1.499751,-1.066482,4.341315,-0.087963,5.097352,-0.719912,9.885586,6.145832,-8.172628,5.350066,-4.270514,2.564307,8.388446,-2.533481,-1.475305,3.287046,-3.174640,-3.833391,-5.992177,8.658710,-7.519989,-6.222762,-9.897204,-2.289575,0.969767,-6.143993,-9.381274,-9.889363,-0.796820,7.760645,-8.505824,-5.234376,-5.437583,-1.237425,7.769341,-1.970660,-1.851210,-2.148063,-1.504253,4.112957,-6.191388,6.594413,5.842866,5.413969,-3.819840,1.023413,7.789423,-3.474900,-0.106366,6.907621,-0.649827,0.555346,-6.697082,2.229580,9.654086,-6.687474,-5.125177,-9.458815,5.893828,8.979663,-5.521103,9.001763,-6.420673,6.032353,-0.294413,9.192142,-8.870292,0.414641,-9.028587,9.809246,-4.789480,8.414975,-8.213356,-2.065230,7.626153,3.306159,-6.435232,-6.024433,-7.618090,4.078466,-8.145882,-9.382639,-3.912907,5.475973,-1.000737,-9.786906,-6.621545,-3.669504,1.469428,6.941068,-8.509019,-6.127893,8.128283,-7.681007,-5.362211,-4.697920,-8.544379,7.893734,9.210505,8.250835,6.358346,-8.280065,0.233028,-3.436448,0.796067,-8.065750,1.776885,3.229512,7.727838,-5.846278,6.138033,-5.503827,9.510262,-0.732865,-2.751960,8.761334,2.629190,8.353843,-2.176769,3.256212,0.633783,2.255233,-1.556619,9.559229,-5.308543,4.655047,2.433479,9.808234,9.266888,8.687219,4.212692,-2.123403,-7.554568,-1.316168,0.396939,-2.015021,2.137630,2.556443,-3.742716,4.703825,2.949775,4.102463,-5.350079,5.957689,-1.880553,0.016006,3.566373,6.789832,7.079127,-8.004020,8.742816,-3.746387,4.799880,5.912652,-2.191399,-4.266200,7.279491,-5.616006,6.769392,-3.817362,-8.294470,6.418189,9.521749,2.317546,-1.293172,4.999459,1.881410,-7.279652,-9.415033,-8.986549,-1.389105,-4.169089,-3.534944,5.994301,-2.939343,-8.049332,3.542530,6.365791,-6.739513,-2.050158,-7.643310,-5.109727,1.798334,-7.936559,-0.645977,-6.120963,-1.937517,9.431997,-0.138623,-5.507644,-8.317473,9.039349,-9.697997,-9.099187,-6.299140,-3.372695,-6.154799,-3.430296,0.388542,7.327091,0.713832,1.352095,-2.476029,2.931269,8.704111,-7.357326,-6.100436,-8.913882,-3.634672,0.842503,6.616465,7.568255,-3.041279,2.153101,3.058204,-2.251844,-5.404921,-5.480434,-4.240340,1.910227,7.706387,8.338249,-5.326717,-3.425814,-0.498342,7.927966,4.220344,2.584842,-1.237413,-6.076782,-0.344461,-2.929061,-5.851409,5.100457,-9.581579,-1.412324,-0.844670,1.570104,6.683988,4.024226,7.038487,7.828518,-2.941754,0.945847,1.422301,-7.761236,-5.915422,4.446172,7.745734,7.890246,8.294415,2.284353,1.012657,-2.338557,-6.385110,-6.714375,-7.904220,6.713160,-2.504150,5.089964,-1.940502,7.792569,5.589952,2.346884,-7.047399,-1.487594,-9.906757,8.440326,5.803362,8.188064,-2.375577,4.501387,6.800850,0.383482,6.914881,-8.223587,-6.989800,-5.255254,-9.592016,-3.486585,-5.522043,-1.306902,-2.439515,-3.626250,-1.952421,2.227769,7.576938,9.633124,4.004813,3.895368,-6.314432,-2.051839,5.148161,-7.373153,-0.186179,-9.988585,0.413217,-2.213666,8.031641,1.977900,-5.622585,-2.403372,-8.742122,-3.035236,-1.728411,-3.626845,1.183849,1.878568,-0.438954,-4.679929,-1.096805,6.077293,-5.729241,1.593043,0.519598,8.631400,6.441901,9.330421,2.303336,-4.607188,1.996209,-3.031642,0.332752,-5.395472,7.814226,2.261966,6.097420,-4.456147,-6.575204,9.225910,-6.533754,1.413648,-3.986685,2.468431,-0.466658,2.253161,8.612238,7.002041,5.834039,-4.251651,-2.147756,-7.309020,-6.518842,2.417745,-4.877702,-3.834911,0.213466,1.544613,8.148345,-2.322475,-7.181978,1.403723,4.731401,-9.619898,-2.132905,-5.692113,-6.131039,7.948149,9.831717,9.798370,3.958930,-2.147603,0.920008,0.862273,9.219468,5.843741,8.450239,6.574183,6.997918,-6.660673,-2.872746,-5.569751,8.911252,8.340898,2.035012,6.455806,1.204664,1.409038,4.511573,4.398548,-9.556472,-9.088516,2.105632,6.868799,4.733164,1.064778,-5.363374,8.113653,3.442219,-3.086445,1.566193,9.319543,5.660497,-7.904913,8.813506,5.468429,-7.927946,-4.907581,4.379581,-6.773909,6.301716,-5.593979,3.348035,7.058688,0.020046,9.072611,9.862450,6.314859,-6.624179,3.629562,4.080964,1.268531,-2.444039,4.191991,8.849186,8.106520,4.090470,-0.898773,1.488202,4.392822,6.455470,2.077731,-2.639815,-9.649817,-8.604291,-2.666270,-0.387661,4.049310,7.153414,4.806859,-5.400197,0.492331,-5.255359,6.560747,-6.823251,-4.270174,8.096183,-9.020454,-0.557724,-1.545756,5.382494,-6.132529,3.418645,-5.298089,9.886941,1.590781,-7.369452,1.196418,8.152860,-7.930910,-6.670252,9.053525,3.101534,5.220628,-6.069069,-6.718481,-1.767208,-8.732449,0.693977,2.841900,-4.350989,-5.437768,5.805045,2.564241,-5.208400,-8.024907,0.973377,1.563501,-6.632058,-6.636831,-5.883602,-7.828201,-7.009525,-2.335769,7.004972,-5.159662,4.062641,1.143164,-7.754151,8.728905,-6.565996,2.595825,4.801384,-7.338339,6.641877,4.013280,-3.164765,1.992914,-6.552730,-3.440841,2.246664,2.434959,4.543579,2.128142,3.669541,6.782659,9.963630,0.561467,9.011637,-7.989528,8.749884,-8.301518,1.857644,-0.096168,-8.483254,5.976556,4.863920,-1.823594,7.801614,-7.478658,-0.144581,7.978461,3.127149,-1.678555,-4.468846,0.776375,-5.065330,7.266991,9.481064,5.038533,-9.503233,6.969305,5.589505,5.322766,-7.435117,-9.642439,4.056110,-7.946819,-8.533464,9.012192,0.700050,-5.834612,-1.563268,7.760663,7.072996,6.001535,8.633563,5.736409,-0.758675,-5.160744,0.132196,8.003788,-9.616049,6.110033,5.636575,5.988154,1.915042,-4.098825,-9.697311,-0.234433,8.382960,2.113579,-7.058117,1.877109,2.501967,7.154470,-8.528592,0.581109,-0.261339,-6.680555,7.677732,-5.235679,8.931434,3.013596,-3.446817,-6.906188,2.972559,4.920174,-2.383705,7.579083,-2.131427,-8.199464,2.802808,0.716122,-6.409423,0.501701,7.500617,4.622646,0.673738,-7.830551,-0.232732,1.725845,3.408157,3.500695,2.364756,5.154464,-7.066886,7.989166,-2.885464,0.970964,-4.748978,-3.768048,5.877963,-2.967713,-3.206260,-9.203883,9.666629,3.106937,-0.172317,0.752087,7.835759,3.775019,-4.926753,1.852839,4.904126,-5.219062,-5.553571,-9.592717,-3.501225,-8.017165,6.538098,0.001226,-6.863995,3.789229,8.372079,-7.559362,-9.793613,-8.189783,-6.579423,7.787285,6.758321,2.816497,-0.706703,6.762414,6.214454,-4.125501,-7.302214,3.288854,-2.822113,-8.399257,7.217961,-3.593837,-4.158813,1.681640,-7.982740,1.272632,-6.175487,9.403130,-2.696388,3.516987,-7.543604,-1.522143,3.383183,3.686112,3.070425,4.272762,8.222055,-2.121455,3.410880,-9.630617,-3.029101,7.569711,6.912852,2.748723,5.001450,6.068195,-4.858760,-0.438285,5.341405,8.215434,3.908747,-6.026612,-2.875065,8.874103,-2.391843,-4.293718,1.302638,5.658902,-8.864263,-9.552375,6.609844,-7.526819,1.988286,4.472801,-9.251456,4.484364,2.695673,-4.891948,-9.209790,6.310359,-2.823725,7.911760,2.268839,-0.417454,-3.954358,0.309783,-7.208072,3.485486,0.971382,-9.713767,-3.970589,8.837362,9.222193,0.466901,9.357391,-7.161265,-9.139875,3.093256,-8.016683,-2.345683,-5.775346,-1.729160,3.969871,2.475732,-4.347507,-9.294824,1.681649,3.839091,-7.929456,2.243134,2.754042,2.825915,3.397825,-3.721271,-5.630466,-4.978397,-5.861441,9.627428,7.202924,-9.596340,-6.059310,-4.012794,9.196221,1.257438,-7.743282,5.921557,-8.930131,-0.153551,-7.587089,-6.595417,9.789054,0.822776,0.080168,6.001725,3.449614,9.673079,-9.364069,-5.634930,7.463669,2.510891,-8.247407,1.046146,0.126185,-1.916018,-3.246545,-2.922018,-0.645430,-4.373811,-5.504921,-1.115737,4.720886,-4.005982,9.332547,1.818447,-3.178102,-0.814585,-3.547486,0.832271,9.316084,1.140160,-7.170265,5.688238,4.053748,9.887582,6.854659,-5.532706,7.534304,5.159214,3.818105,3.717218,3.344547,-0.809153,0.826306,-2.652729,4.711455,6.587903,5.671555,-6.692574,-7.150326,7.311657,7.586583,-5.792082,-4.746323,6.060951,0.961085,2.567653,0.392537,-7.748007,5.560191,9.830837,-7.293373,9.804053,-9.471253,-8.115655,4.800289,-0.360988,7.770894,8.623145,-9.333755,3.233128,7.172408,0.855276,-8.624823,3.845114,-6.936127,0.754201,4.298359,-7.968639,-5.954194,-1.975581,-0.060046,9.549984,-3.468861,7.163301,9.908713,-9.587772,9.974289,5.644812,5.817948,-9.603818,-7.320897,-6.127038,-9.188274,6.468719,4.803529,-9.821909,-5.645097,-4.318795,-4.043237,-0.893191,-5.613075,-1.589356,-1.804233,-4.309281,-8.694915,5.116993,-4.388517,9.931232,-4.480089,2.731300,-9.660284,-8.869453,0.287819,4.219360,-9.587840,-0.887761,-6.691550,7.296158,-3.230501,-6.288060,-0.760353,5.184142,4.802044,7.269440,1.420701,-7.765772,-0.687482,1.766465,0.843344,6.115371,-8.138372,-1.341537,-6.567568,9.823160,6.902897,6.972294,5.139064,-9.790456,0.272580,-7.067207,6.518860,0.972724,0.247144,8.366141,0.587235,4.450756,-6.437306,3.291361,2.508319,-2.626691,-9.446661,-7.148927,-8.644539,0.597801,-6.682642,2.101606,-2.505754,9.295822,8.814204,-0.970885,7.326924,-4.335473,7.246154,-0.682738,-3.638901,-6.316672,-5.570918,-4.916020,6.988249,5.396115,2.693988,2.870123,9.161250,-1.884393,-0.450772,8.891968,-3.164507,4.940419,3.392674,-8.301086,-0.713294,8.196136,0.980467,-5.792446,4.995209,-2.212850,-6.778563,-6.904265,-0.373806,-6.004571,8.164828,-3.224510,9.003568,7.554880,4.397118,-6.504241,-0.278113,-3.038619,0.896071,0.703616,-1.626438,7.705356,5.712546,-7.659721,-0.314728,-5.726062,8.691681,0.946245,4.058062,1.544587,-2.962848,-0.061126,1.842643,-5.354314,9.600693,7.813950,3.657949,-3.912145,-5.013993,-7.821927,1.534544,-6.095360,1.262969,4.037974,2.469383,5.883512,-5.493142,-2.508966,3.553224,-7.094303,-9.583186,-9.567904,9.563842,9.256229,-3.022917,-6.463576,-3.918034,-0.047594,3.219346,-9.605004,-1.538887,-9.396911,-3.843487,2.925118,-9.802462,-9.725156,3.520262,-8.436307,-7.390136,3.242580,-3.819546,-7.097524,-4.267481,-2.299879,8.177083,-1.188029,9.309365,-2.160476,-7.032412,3.682528,-2.371908,0.735769,-2.416431,-9.206209,1.206320,3.989965,9.801826,8.787716,-7.916300,6.520461,-0.714893,-7.571355,9.229344,5.456345,-5.463915,-4.721763,2.522107,-4.851595,9.077922,-1.564398,-4.137037,-6.645244,7.667893,-0.162005,-8.049688,0.869184,3.687696,-5.111147,1.091782,-9.193817,-9.361201,-9.662422,8.974792,2.733552,0.987971,9.149613,-0.507511,1.871914,1.284576,3.961460,-3.546180,7.879615,-9.704587,-6.106741,4.936242,7.728057,4.661371,4.376169,8.834858,0.064404,-9.889581,-8.326904,7.989525,0.797251,5.761504,-0.004468,7.563899,-5.566189,3.115923,1.547065,0.741563,-9.763612,-2.340441,9.802569,-4.284452,-4.463649,-7.585589,1.615388,4.497925,-5.847914,-1.188294,-7.635079,-8.039822,5.247067,2.421123,3.287570,-9.343639,2.547232,7.021967,-2.465172,1.085448,8.794314,4.504162,0.377045,7.427069,-2.774641,-8.194618,5.127197,7.789974,-6.891969,-9.102478,7.706697,5.549789,9.613233,-6.370755,6.063176,9.157939,0.718008,6.044932,3.387964,-7.210943,-9.099142,-2.603172,-4.244657,9.267108,-0.392065,-9.855690,-4.397196,-3.762357,-1.533014,2.700815,-8.175894,-9.881553,7.294103,8.541704,-3.097014,-5.925076,-9.689762,2.192625,-2.626656,-8.383322,-1.055246,2.671066,-5.327667,-2.101919,-1.654378,-5.979619,-6.278293,-2.278197,8.320707,-1.334337,2.143013,-0.094221,8.751177,-4.378691,-0.240123,-5.708497,7.393015,2.783289,6.346863,1.082825,0.540380,7.565891,-2.838046,-6.501975,6.729669,-4.250613,5.848431,-7.286054,-3.818288,2.740118,2.981968,3.977362,4.106708,6.583821,-9.065082,-3.379184,-9.805797,-4.794896,4.335266,-4.656471,0.525749,0.583740,-8.475250,-1.689702,4.682857,4.741208,0.059496,8.278408,-8.041958,-9.132491,4.821833,-4.985339,-5.942420,0.815313,3.139890,-4.799080,-0.002227,-5.994179,9.326043,5.047664,-2.776581,-0.023915,2.465734,-3.270760,-7.262633,-9.891273,5.341821,8.838640,5.442178,6.205010,1.507809,-9.425526,5.521807,-5.818708,4.448078,8.573324,-3.943996,8.784820,-0.008291,2.612940,-5.991530,-5.201085,4.895679,2.649345,-9.559642,3.401127,-8.055592,4.819874,-6.737283,1.099841,2.939514,0.397966,-1.350114,4.596062,-7.668605,3.507633,5.443880,-0.818590,7.532581,4.195018,-1.112478,4.420995,-0.900598,6.876395,-3.574777,-9.703692,1.123849,-4.437613,1.487230,-6.615391,-2.072089,-9.251686,-4.788822,-5.096699,1.494003,4.218181,5.630794,-5.073423,-6.578781,-7.160619,-0.773903,-5.698857,8.696457,4.806580,7.540108,-1.491060,1.269577,5.188764,-5.456043,-0.211590,4.505733,1.125469,-7.355059,1.301486,8.955316,-5.423111,-9.023018,-8.790412,9.456882,-7.539556,6.643089,-1.041951,-4.017983,-6.253407,-6.512123,-9.276711,5.823020,-3.564128,4.008960,-4.808751,2.703696,0.085006,7.920870,5.466725,4.870659,8.636596,7.098052,-8.390478,0.639073,-6.883141,1.908443,-4.193475,-0.518526,-0.151763,-4.371622,4.858065,2.486844,1.139983,-3.207735,9.242163,9.121997,-8.539907,6.187038,-2.375835,-2.596093,-0.690728,5.672218,-4.226448,6.633446,2.605663,6.764151,4.798861,6.597060,9.775971,-3.062943,-0.002860,-3.531029,-1.520514,9.601189,-3.716818,4.975344,5.739412,1.007278,-6.361619,-4.277521,-9.774226,-3.346671,1.677741,1.755093,8.421000,1.419914,7.053055,2.852581,6.709636,-2.500906,-3.685715,-3.162997,-3.510444,8.849772,-9.997033,-9.412347,0.233292,5.948594,2.630448,4.128768,-2.405454,-4.146912,-0.691263,1.600282,-0.618513,-9.922077,6.091998,-3.148352,-2.874348,-2.898110,8.009280,-0.004214,-6.471890,8.245597,-4.659171,-6.769313,-2.513945,-0.803133,-8.218109,-6.567268,7.139954,0.313439,-4.985675,-4.137520,4.610601,2.874819,2.287301,7.530380,6.913549,3.953599,-3.827397,-2.705782,-7.466549,1.528802,-9.776444,5.698268,-0.603310,-7.425144,-5.193034,-1.547926,-0.247424,1.755555,2.526425,1.669415,1.075330,-5.288304,-6.762316,-7.512168,5.952600,-3.020028,-7.534571,2.643996,-1.461807,3.181274,-0.348107,6.116174,8.542462,-5.452593,9.892270,-6.362444,9.404143,-0.465394,7.941310,-5.450014,3.770269,2.857577,5.822911,-8.445900,-8.302443,-6.214959,8.754395,7.365753,-5.033172,8.005662,5.199345,4.290931,-7.780693,9.117863,-3.165085,-8.168730,-6.620959,3.463462,-8.202483,8.021621,9.737521,3.276860,3.313855,-0.109134,8.344744,-7.821599,4.996051,8.558925,2.987905,6.836098,-5.245945,5.529323,5.178368,-6.306269,1.419564,7.510336,-6.443840,4.567471,1.585819,4.835806,-1.213445,-5.907886,2.048906,7.292219,-2.312026,8.965825,9.965751,7.713475,5.943464,-1.550925,2.227467,-2.443458,7.924244,-6.011826,7.521025,2.834254,3.959106,9.215766,0.021432,5.528747,5.096249,-4.860334,-8.930586,-6.347673,-9.079967,-7.137375,-0.861014,1.371584,-2.684958,-2.901832,6.662778,8.901635,0.951667,-2.606009,-8.122115,-7.458096,-5.927233,-4.226068,-3.753386,-9.522488,3.882888,9.218816], dtype = "float64")#candidate|8404|(2112,)|const|float64
bop_8405 = relay.add(var_8335.astype('uint16'), relay.reshape(const_8404.astype('uint16'), relay.shape_of(var_8335))) # shape=(2112,)
var_8410 = relay.var("var_8410", dtype = "float64", shape = (2080,))#candidate|8410|(2080,)|var|float64
bop_8411 = relay.greater_equal(var_8336.astype('bool'), relay.reshape(var_8410.astype('bool'), relay.shape_of(var_8336))) # shape=(2080,)
bop_8415 = relay.multiply(bop_8411.astype('float64'), relay.reshape(call_8334.astype('float64'), relay.shape_of(bop_8411))) # shape=(2080,)
bop_8418 = relay.multiply(bop_8411.astype('float64'), relay.reshape(call_8337.astype('float64'), relay.shape_of(bop_8411))) # shape=(2080,)
output = relay.Tuple([call_8322,bop_8382,bop_8405,bop_8415,])
output2 = relay.Tuple([call_8323,bop_8385,bop_8405,bop_8418,])
F = relay.Function([var_8335,var_8336,var_8410,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8335,var_8336,var_8410,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

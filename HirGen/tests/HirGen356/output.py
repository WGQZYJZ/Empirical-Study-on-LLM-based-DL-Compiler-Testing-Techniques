import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_392 = relay.const([[[-2,8,-2,10,9,2,-10,6,-5,7,-1,5,2],[4,-10,5,-1,-7,5,-5,-5,-4,9,2,-9,1]],[[4,5,-4,3,5,8,-8,1,4,10,2,-4,-6],[-5,5,-4,-4,7,9,3,-6,9,8,9,-5,-9]],[[5,-10,-10,-5,-4,8,-9,7,-4,3,1,-6,-4],[-9,8,-8,3,-3,6,2,10,-8,-4,8,-5,-10]],[[6,5,4,1,-4,-2,-10,4,6,5,-5,-4,10],[-6,6,-1,-3,2,-2,9,5,-5,-8,-10,6,-10]],[[-10,1,-8,-5,5,5,-2,-5,-2,-10,-6,2,5],[-10,-7,3,3,-7,1,5,6,3,-9,-2,-3,-9]],[[-9,-4,-5,9,-3,9,-6,-8,8,4,5,6,6],[-8,2,7,-8,-8,-5,5,1,5,2,-6,-9,8]],[[8,10,4,2,-5,7,-1,-6,-4,-4,7,-2,-7],[3,1,-1,-7,-10,1,7,10,-9,1,-7,8,-9]],[[3,8,-2,-5,2,1,-9,2,-2,5,-3,2,4],[6,-1,9,-8,5,7,2,-7,1,-3,-7,-2,-8]],[[-9,-6,2,-4,-6,-8,-1,-6,-2,-8,-3,-7,1],[-3,6,-5,-4,9,2,-8,8,5,-8,6,1,-2]]], dtype = "int64")#candidate|392|(9, 2, 13)|const|int64
var_393 = relay.var("var_393", dtype = "int64", shape = (9, 2, 13))#candidate|393|(9, 2, 13)|var|int64
bop_394 = relay.add(const_392.astype('int64'), relay.reshape(var_393.astype('int64'), relay.shape_of(const_392))) # shape=(9, 2, 13)
bop_397 = relay.mod(const_392.astype('float32'), relay.reshape(bop_394.astype('float32'), relay.shape_of(const_392))) # shape=(9, 2, 13)
output = relay.Tuple([bop_397,])
output2 = relay.Tuple([bop_397,])
func_400 = relay.Function([var_393,], output)
mod['func_400'] = func_400
mod = relay.transform.InferType()(mod)
var_401 = relay.var("var_401", dtype = "int64", shape = (9, 2, 13))#candidate|401|(9, 2, 13)|var|int64
output = func_400(var_401)
func_402 = relay.Function([var_401], output)
mutated_mod['func_402'] = func_402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_421 = relay.var("var_421", dtype = "int32", shape = ())#candidate|421|()|var|int32
const_422 = relay.const([[[10,4,10,4],[-7,-7,9,4],[1,4,4,2],[-1,-4,7,-7],[-1,-6,9,7],[4,3,-1,7],[-3,-9,4,-10],[2,-8,-8,-7],[-9,10,-2,4],[-10,-9,-5,4],[7,7,-5,-8],[3,-5,2,9],[-4,7,-3,-3],[-1,-5,9,6]],[[-3,9,2,-4],[-5,5,2,7],[3,3,9,1],[8,-8,-7,5],[7,-7,-3,-3],[1,-6,-2,-2],[-8,-10,-1,-9],[-7,8,-1,-4],[-8,7,-4,-2],[8,10,2,4],[-7,9,7,8],[4,10,10,-6],[-4,2,5,5],[-5,-5,4,-8]],[[-6,-10,-6,-9],[-4,-8,2,3],[-8,6,-2,-9],[3,-3,-5,-10],[8,6,-8,-6],[1,-5,9,10],[4,1,6,-2],[-3,-10,3,-1],[-1,5,-9,2],[-7,4,-8,3],[2,-7,-5,-1],[-3,9,2,9],[5,3,-6,-6],[5,-9,6,-4]],[[-6,-1,9,1],[3,-9,8,-8],[-1,6,7,10],[-2,4,9,-8],[-8,-9,-1,10],[8,6,-9,-8],[-5,-8,8,6],[-7,10,8,-2],[-9,5,1,3],[-7,7,5,-6],[2,5,-4,-10],[1,6,9,6],[-10,7,6,-1],[1,1,-3,-6]],[[-3,-5,-2,-5],[-6,-2,10,1],[9,-1,10,-10],[-10,-4,-9,10],[-1,-6,-1,-6],[5,-9,6,-7],[10,1,-2,8],[3,-6,4,2],[-2,-8,3,-7],[-4,3,10,8],[-8,9,-10,-1],[-1,-5,3,-10],[-10,-8,-6,1],[-3,1,-4,3]],[[-8,3,1,2],[3,9,-7,-10],[1,7,-5,7],[-3,-3,-9,-1],[3,6,-8,-8],[-6,-6,9,-9],[6,-8,-6,-2],[5,-8,-4,-1],[2,10,6,8],[8,8,-2,10],[4,-10,4,1],[-7,-4,-7,9],[4,9,9,5],[-1,-7,-9,10]]], dtype = "int32")#candidate|422|(6, 14, 4)|const|int32
bop_423 = relay.right_shift(var_421.astype('int32'), const_422.astype('int32')) # shape=(6, 14, 4)
output = bop_423
output2 = bop_423
func_429 = relay.Function([var_421,], output)
mod['func_429'] = func_429
mod = relay.transform.InferType()(mod)
mutated_mod['func_429'] = func_429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_430 = relay.var("var_430", dtype = "int32", shape = ())#candidate|430|()|var|int32
func_429_call = mutated_mod.get_global_var('func_429')
call_431 = func_429_call(var_430)
output = call_431
func_432 = relay.Function([var_430], output)
mutated_mod['func_432'] = func_432
mutated_mod = relay.transform.InferType()(mutated_mod)
const_442 = relay.const([[[-6.442040],[7.592594],[3.551243],[3.993003],[-4.483659],[4.044869],[4.783836],[-5.568759],[-6.410068],[1.369604],[8.624837],[-2.943235],[-4.109401],[-7.266287]],[[-3.554167],[-1.078411],[-0.753508],[-7.361406],[2.045476],[-4.619636],[5.419116],[-4.708618],[9.269932],[7.912463],[-1.674600],[-2.013685],[-6.546567],[5.005693]],[[5.556552],[-2.372082],[2.887589],[-6.873057],[-0.161782],[-8.181002],[-4.282686],[4.552956],[-9.420622],[8.100304],[0.187558],[9.194015],[7.283202],[4.860297]],[[6.967230],[-1.720195],[-1.913782],[-8.216629],[6.307015],[2.160997],[-6.198167],[-1.021196],[-8.575194],[-5.112647],[2.307897],[-3.776758],[-2.912623],[6.029325]],[[-8.843340],[1.761967],[4.768188],[-7.236921],[-2.066224],[3.274428],[-8.186610],[-4.106629],[-7.353256],[6.599387],[-5.852729],[-1.053637],[3.639093],[-5.107691]],[[-6.477554],[2.912015],[-3.212853],[-9.533963],[-0.540236],[-9.188708],[-9.172089],[0.591479],[-5.785545],[9.613805],[-7.097184],[-8.451832],[-9.928168],[-4.458147]],[[4.978256],[-1.303131],[-5.772005],[-3.991089],[-6.239890],[-0.986088],[-3.258665],[-7.488994],[1.133850],[0.781847],[6.238720],[-9.921320],[3.491655],[-0.586242]],[[1.378433],[-7.446927],[-6.650123],[4.622396],[-4.054454],[3.254069],[-5.459777],[-0.039939],[-0.861124],[0.742804],[-7.441944],[-8.269607],[3.754473],[1.318752]],[[1.138814],[7.003401],[-2.825056],[5.108423],[-5.590051],[-4.544125],[9.931964],[2.110764],[9.450302],[-9.653830],[-5.326001],[9.860581],[-1.120288],[-1.390840]],[[7.325243],[-8.973087],[-5.264622],[9.928291],[8.847669],[6.186658],[5.046253],[1.849853],[6.421674],[9.561069],[-4.935369],[6.806085],[3.115606],[2.328845]],[[-9.170199],[-6.954463],[1.356235],[-0.224288],[-1.843410],[-6.090909],[-3.162281],[9.258966],[1.182248],[-1.080694],[2.370507],[-7.107608],[2.797245],[4.876024]],[[-9.021296],[-9.265766],[-8.527986],[-4.142488],[-6.770188],[7.271994],[2.920479],[-1.912182],[7.937493],[2.899859],[-4.576904],[-8.711270],[3.118944],[6.438195]],[[-2.388791],[-5.632301],[5.109222],[3.759624],[2.764643],[6.256444],[-8.884895],[-8.055357],[3.200702],[3.770676],[-2.829507],[9.433705],[8.982994],[-5.204765]]], dtype = "float32")#candidate|442|(13, 14, 1)|const|float32
var_443 = relay.var("var_443", dtype = "float32", shape = (13, 14, 10))#candidate|443|(13, 14, 10)|var|float32
bop_444 = relay.floor_divide(const_442.astype('float32'), var_443.astype('float32')) # shape=(13, 14, 10)
uop_447 = relay.asin(var_443.astype('float64')) # shape=(13, 14, 10)
output = relay.Tuple([bop_444,uop_447,])
output2 = relay.Tuple([bop_444,uop_447,])
func_459 = relay.Function([var_443,], output)
mod['func_459'] = func_459
mod = relay.transform.InferType()(mod)
mutated_mod['func_459'] = func_459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_460 = relay.var("var_460", dtype = "float32", shape = (13, 14, 10))#candidate|460|(13, 14, 10)|var|float32
func_459_call = mutated_mod.get_global_var('func_459')
call_461 = func_459_call(var_460)
output = call_461
func_462 = relay.Function([var_460], output)
mutated_mod['func_462'] = func_462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_563 = relay.var("var_563", dtype = "int8", shape = (7, 16, 3))#candidate|563|(7, 16, 3)|var|int8
var_564 = relay.var("var_564", dtype = "int8", shape = (7, 16, 3))#candidate|564|(7, 16, 3)|var|int8
bop_565 = relay.greater_equal(var_563.astype('bool'), relay.reshape(var_564.astype('bool'), relay.shape_of(var_563))) # shape=(7, 16, 3)
output = bop_565
output2 = bop_565
func_568 = relay.Function([var_563,var_564,], output)
mod['func_568'] = func_568
mod = relay.transform.InferType()(mod)
var_569 = relay.var("var_569", dtype = "int8", shape = (7, 16, 3))#candidate|569|(7, 16, 3)|var|int8
var_570 = relay.var("var_570", dtype = "int8", shape = (7, 16, 3))#candidate|570|(7, 16, 3)|var|int8
output = func_568(var_569,var_570,)
func_571 = relay.Function([var_569,var_570,], output)
mutated_mod['func_571'] = func_571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_947 = relay.var("var_947", dtype = "uint32", shape = (12, 2, 14))#candidate|947|(12, 2, 14)|var|uint32
var_948 = relay.var("var_948", dtype = "uint32", shape = (12, 2, 14))#candidate|948|(12, 2, 14)|var|uint32
bop_949 = relay.multiply(var_947.astype('uint32'), relay.reshape(var_948.astype('uint32'), relay.shape_of(var_947))) # shape=(12, 2, 14)
func_429_call = mod.get_global_var('func_429')
func_432_call = mutated_mod.get_global_var('func_432')
var_954 = relay.var("var_954", dtype = "int32", shape = ())#candidate|954|()|var|int32
call_953 = func_429_call(relay.reshape(var_954.astype('int32'), []))
call_955 = func_429_call(relay.reshape(var_954.astype('int32'), []))
bop_957 = relay.divide(call_953.astype('float32'), relay.reshape(var_947.astype('float32'), relay.shape_of(call_953))) # shape=(6, 14, 4)
bop_960 = relay.divide(call_955.astype('float32'), relay.reshape(var_947.astype('float32'), relay.shape_of(call_955))) # shape=(6, 14, 4)
output = relay.Tuple([bop_949,var_954,bop_957,])
output2 = relay.Tuple([bop_949,var_954,bop_960,])
func_969 = relay.Function([var_947,var_948,var_954,], output)
mod['func_969'] = func_969
mod = relay.transform.InferType()(mod)
var_970 = relay.var("var_970", dtype = "uint32", shape = (12, 2, 14))#candidate|970|(12, 2, 14)|var|uint32
var_971 = relay.var("var_971", dtype = "uint32", shape = (12, 2, 14))#candidate|971|(12, 2, 14)|var|uint32
var_972 = relay.var("var_972", dtype = "int32", shape = ())#candidate|972|()|var|int32
output = func_969(var_970,var_971,var_972,)
func_973 = relay.Function([var_970,var_971,var_972,], output)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1271 = relay.const([[[10],[-5]],[[-8],[-4]],[[-5],[3]],[[2],[7]],[[-1],[-6]],[[5],[7]]], dtype = "int16")#candidate|1271|(6, 2, 1)|const|int16
var_1272 = relay.var("var_1272", dtype = "int16", shape = (6, 2, 15))#candidate|1272|(6, 2, 15)|var|int16
bop_1273 = relay.multiply(const_1271.astype('int16'), var_1272.astype('int16')) # shape=(6, 2, 15)
output = bop_1273
output2 = bop_1273
func_1282 = relay.Function([var_1272,], output)
mod['func_1282'] = func_1282
mod = relay.transform.InferType()(mod)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1283 = relay.var("var_1283", dtype = "int16", shape = (6, 2, 15))#candidate|1283|(6, 2, 15)|var|int16
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1284 = func_1282_call(var_1283)
output = call_1284
func_1285 = relay.Function([var_1283], output)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1325 = relay.var("var_1325", dtype = "float32", shape = (8, 11, 8))#candidate|1325|(8, 11, 8)|var|float32
uop_1326 = relay.asin(var_1325.astype('float32')) # shape=(8, 11, 8)
var_1338 = relay.var("var_1338", dtype = "float32", shape = (8, 11, 8))#candidate|1338|(8, 11, 8)|var|float32
bop_1339 = relay.mod(uop_1326.astype('float64'), relay.reshape(var_1338.astype('float64'), relay.shape_of(uop_1326))) # shape=(8, 11, 8)
func_400_call = mod.get_global_var('func_400')
func_402_call = mutated_mod.get_global_var('func_402')
const_1343 = relay.const([-7,1,1,10,10,6,9,4,-4,-1,2,-8,6,-7,2,10,-6,5,3,-5,-7,5,-2,-6,-6,5,2,1,7,-8,3,-2,9,8,-5,6,-4,5,-2,2,10,5,1,10,5,10,-8,-9,-10,-10,10,4,-9,-1,2,8,-3,3,-9,3,-3,-2,-5,-9,-7,-9,-4,-10,2,3,-7,7,4,-3,5,4,10,8,-6,2,5,-10,-4,4,-2,-1,10,8,-10,-6,6,4,8,3,8,-7,7,-3,-8,9,8,10,10,1,-8,4,6,1,-9,-8,-8,-3,4,5,5,-3,-4,10,-10,5,-7,-3,-8,-9,-7,-5,3,1,5,1,-2,4,9,1,6,-9,-4,8,-5,8,-5,8,-2,-7,-8,1,-3,5,1,-1,-1,-4,1,4,10,-9,-6,4,9,-7,8,-5,4,-10,6,-6,10,-2,1,-8,-10,5,-5,4,-10,8,-8,8,-5,-1,-10,9,-4,-2,7,-5,8,-2,10,-6,6,8,-7,8,-5,-4,-3,-6,4,-1,1,-9,-7,-1,-7,-7,10,-7,-2,-10,5,3,-7,-6,-8,-5,6,-5,4,-9,-2,2,-4,9,-7,2,-5,1,-3,-4,-5,-9,10,3], dtype = "int64")#candidate|1343|(234,)|const|int64
call_1342 = relay.TupleGetItem(func_400_call(relay.reshape(const_1343.astype('int64'), [9, 2, 13])), 0)
call_1344 = relay.TupleGetItem(func_402_call(relay.reshape(const_1343.astype('int64'), [9, 2, 13])), 0)
func_568_call = mod.get_global_var('func_568')
func_571_call = mutated_mod.get_global_var('func_571')
var_1350 = relay.var("var_1350", dtype = "int8", shape = (336,))#candidate|1350|(336,)|var|int8
call_1349 = func_568_call(relay.reshape(var_1350.astype('int8'), [7, 16, 3]), relay.reshape(var_1350.astype('int8'), [7, 16, 3]), )
call_1351 = func_568_call(relay.reshape(var_1350.astype('int8'), [7, 16, 3]), relay.reshape(var_1350.astype('int8'), [7, 16, 3]), )
bop_1360 = relay.less_equal(bop_1339.astype('bool'), relay.reshape(var_1325.astype('bool'), relay.shape_of(bop_1339))) # shape=(8, 11, 8)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
var_1373 = relay.var("var_1373", dtype = "float32", shape = (910, 2))#candidate|1373|(910, 2)|var|float32
call_1372 = relay.TupleGetItem(func_459_call(relay.reshape(var_1373.astype('float32'), [13, 14, 10])), 0)
call_1374 = relay.TupleGetItem(func_462_call(relay.reshape(var_1373.astype('float32'), [13, 14, 10])), 0)
output = relay.Tuple([call_1342,const_1343,call_1349,var_1350,bop_1360,call_1372,var_1373,])
output2 = relay.Tuple([call_1344,const_1343,call_1351,var_1350,bop_1360,call_1374,var_1373,])
func_1381 = relay.Function([var_1325,var_1338,var_1350,var_1373,], output)
mod['func_1381'] = func_1381
mod = relay.transform.InferType()(mod)
mutated_mod['func_1381'] = func_1381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1381_call = mutated_mod.get_global_var('func_1381')
var_1383 = relay.var("var_1383", dtype = "float32", shape = (8, 11, 8))#candidate|1383|(8, 11, 8)|var|float32
var_1384 = relay.var("var_1384", dtype = "float32", shape = (8, 11, 8))#candidate|1384|(8, 11, 8)|var|float32
var_1385 = relay.var("var_1385", dtype = "int8", shape = (336,))#candidate|1385|(336,)|var|int8
var_1386 = relay.var("var_1386", dtype = "float32", shape = (910, 2))#candidate|1386|(910, 2)|var|float32
call_1382 = func_1381_call(var_1383,var_1384,var_1385,var_1386,)
output = call_1382
func_1387 = relay.Function([var_1383,var_1384,var_1385,var_1386,], output)
mutated_mod['func_1387'] = func_1387
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1613 = relay.const([[[6,-3,-4,-2],[8,1,-3,10],[-7,-5,9,7],[-10,-3,-6,-1],[8,7,-8,8]],[[3,8,2,1],[-6,-8,-4,-7],[9,9,8,8],[-3,-9,5,9],[-9,-3,-8,-8]],[[3,-7,10,9],[-5,-5,-10,10],[9,6,-1,4],[-5,10,-9,6],[-4,-9,9,6]],[[-6,-9,-3,10],[10,-7,-3,10],[-6,-9,-9,-9],[8,-1,-5,10],[-7,8,10,3]],[[-5,1,-1,-6],[-1,6,-10,7],[4,-6,3,10],[7,-2,-7,-4],[-5,-10,8,-5]],[[-1,-1,7,-2],[3,8,3,8],[6,-4,-2,5],[7,-6,-1,4],[-2,-6,10,-8]],[[3,-1,-5,-6],[-8,6,-3,9],[-6,5,-6,1],[3,-8,5,-7],[5,-5,-6,1]],[[-3,6,-10,6],[-10,5,-9,5],[-6,-6,-1,7],[1,-6,5,3],[-6,4,3,-4]],[[-10,-10,-7,-10],[10,-2,-8,-8],[-3,10,-2,5],[-3,6,6,1],[-8,6,6,8]],[[3,8,1,2],[10,3,4,-2],[5,-5,9,-1],[-4,4,-3,7],[-2,-7,1,-10]],[[-1,3,-9,6],[-2,-8,-4,-7],[4,-2,4,4],[4,-3,-3,4],[-6,-3,1,-10]]], dtype = "uint8")#candidate|1613|(11, 5, 4)|const|uint8
var_1614 = relay.var("var_1614", dtype = "uint8", shape = (11, 5, 4))#candidate|1614|(11, 5, 4)|var|uint8
bop_1615 = relay.bitwise_and(const_1613.astype('uint8'), relay.reshape(var_1614.astype('uint8'), relay.shape_of(const_1613))) # shape=(11, 5, 4)
var_1620 = relay.var("var_1620", dtype = "uint8", shape = (11, 5, 4))#candidate|1620|(11, 5, 4)|var|uint8
bop_1621 = relay.less_equal(var_1614.astype('bool'), relay.reshape(var_1620.astype('bool'), relay.shape_of(var_1614))) # shape=(11, 5, 4)
output = relay.Tuple([bop_1615,bop_1621,])
output2 = relay.Tuple([bop_1615,bop_1621,])
func_1638 = relay.Function([var_1614,var_1620,], output)
mod['func_1638'] = func_1638
mod = relay.transform.InferType()(mod)
var_1639 = relay.var("var_1639", dtype = "uint8", shape = (11, 5, 4))#candidate|1639|(11, 5, 4)|var|uint8
var_1640 = relay.var("var_1640", dtype = "uint8", shape = (11, 5, 4))#candidate|1640|(11, 5, 4)|var|uint8
output = func_1638(var_1639,var_1640,)
func_1641 = relay.Function([var_1639,var_1640,], output)
mutated_mod['func_1641'] = func_1641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1744 = relay.var("var_1744", dtype = "float32", shape = (3, 7, 15))#candidate|1744|(3, 7, 15)|var|float32
uop_1745 = relay.cos(var_1744.astype('float32')) # shape=(3, 7, 15)
func_969_call = mod.get_global_var('func_969')
func_973_call = mutated_mod.get_global_var('func_973')
const_1748 = relay.const([-1,-6,5,3,-4,7,7,-8,-4,10,-5,7,-4,-8,-10,-10,-3,6,-6,8,-2,-5,-2,7,3,9,-4,4,5,-1,-6,-7,-9,-1,-6,4,3,-8,-2,5,2,-5,-8,-4,-2,1,-8,-1,3,-2,2,-6,9,3,7,-9,2,7,5,-5,6,7,4,1,-1,-4,-2,9,4,-3,10,2,-7,1,10,-1,4,10,-7,7,7,2,-4,1,4,1,-7,7,-3,8,-8,10,8,-2,-5,4,2,3,8,6,-9,6,-1,2,3,7,-10,3,-1,2,6,7,-1,-6,6,10,10,-1,-1,4,6,5,-10,-3,-3,-6,2,-9,-6,1,6,7,-9,8,5,4,-5,7,-7,-8,-7,9,10,4,2,9,-9,5,-7,10,5,3,-2,5,1,10,-10,9,7,-7,9,9,4,-7,-5,5,10,-9,-6,-2,10,5,2,-9,7,8,-5,5,-10,-2,-7,6,5,-10,4,8,-3,-3,8,4,1,1,-10,5,9,7,-4,-3,-2,10,2,-9,2,10,7,7,-7,-2,-7,8,-4,-9,-10,7,-5,8,-6,4,3,10,-9,6,7,4,-4,-7,-9,-7,1,3,-1,-5,1,5,-5,-2,1,-4,-5,-10,3,9,6,-3,10,-4,10,-7,9,3,-6,10,-2,-6,3,9,-3,-9,4,9,9,-4,3,8,-3,7,5,-7,-4,-5,8,2,-2,-4,3,10,-7,1,-6,-1,9,10,-7,-2,-1,5,-10,-3,-10,-7,-10,-6,-1,-4,-7,8,5,1,-7,1,9,9,7,-2,-9,-3,-7,-6,8,-7,-7,3,5,3,9,9,-4,-7,-10,-9,7,-10,2,3,5,7,3,5,-7,9,4,4,-8,-10,-8,-9], dtype = "uint32")#candidate|1748|(336,)|const|uint32
var_1749 = relay.var("var_1749", dtype = "int32", shape = ())#candidate|1749|()|var|int32
call_1747 = relay.TupleGetItem(func_969_call(relay.reshape(const_1748.astype('uint32'), [12, 2, 14]), relay.reshape(const_1748.astype('uint32'), [12, 2, 14]), relay.reshape(var_1749.astype('int32'), []), ), 2)
call_1750 = relay.TupleGetItem(func_973_call(relay.reshape(const_1748.astype('uint32'), [12, 2, 14]), relay.reshape(const_1748.astype('uint32'), [12, 2, 14]), relay.reshape(var_1749.astype('int32'), []), ), 2)
func_400_call = mod.get_global_var('func_400')
func_402_call = mutated_mod.get_global_var('func_402')
const_1754 = relay.const([[-2],[2],[7],[3],[-7],[8],[8],[-2],[6],[-1],[-9],[3],[3],[3],[5],[10],[4],[-1],[-9],[6],[7],[-10],[7],[7],[7],[8],[8],[4],[-9],[-3],[-2],[2],[-6],[9],[-9],[9],[-7],[8],[-5],[9],[10],[-10],[7],[2],[-10],[-4],[9],[-8],[-1],[8],[2],[-4],[10],[-4],[7],[-7],[-9],[7],[-2],[5],[5],[4],[-5],[9],[-1],[-4],[8],[-9],[9],[3],[7],[3],[8],[5],[9],[2],[9],[-10],[-10],[10],[7],[2],[3],[-4],[-7],[6],[-7],[-1],[9],[5],[-3],[-3],[-4],[-9],[-1],[-6],[5],[6],[1],[8],[-6],[-1],[5],[6],[-5],[-1],[-9],[-3],[9],[-7],[-10],[-1],[-3],[3],[-6],[2],[-5],[-3],[-7],[4],[3],[2],[-2],[-4],[8],[-1],[8],[-5],[10],[5],[-9],[6],[-9],[6],[-1],[8],[8],[5],[-9],[-10],[2],[-7],[-5],[1],[2],[-1],[-2],[7],[-9],[9],[-3],[-1],[9],[2],[-7],[-6],[6],[-1],[-8],[6],[8],[-3],[8],[2],[-4],[5],[-8],[-10],[-4],[-6],[5],[-10],[-5],[-1],[3],[5],[7],[-2],[7],[-2],[6],[8],[-6],[2],[1],[1],[-10],[-6],[-1],[-8],[-6],[-8],[10],[-10],[7],[-9],[9],[-9],[-8],[-5],[1],[-6],[8],[-5],[-10],[-7],[-7],[-1],[-6],[-5],[-1],[8],[-4],[5],[9],[2],[7],[-10],[3],[-5],[-10],[9],[-7],[4],[1],[8],[6],[2],[-2],[1],[-8],[-1],[2],[-9]], dtype = "int64")#candidate|1754|(234, 1)|const|int64
call_1753 = relay.TupleGetItem(func_400_call(relay.reshape(const_1754.astype('int64'), [9, 2, 13])), 0)
call_1755 = relay.TupleGetItem(func_402_call(relay.reshape(const_1754.astype('int64'), [9, 2, 13])), 0)
bop_1760 = relay.subtract(const_1754.astype('float64'), const_1748.astype('float64')) # shape=(234, 336)
output = relay.Tuple([uop_1745,call_1747,var_1749,call_1753,bop_1760,])
output2 = relay.Tuple([uop_1745,call_1750,var_1749,call_1755,bop_1760,])
func_1767 = relay.Function([var_1744,var_1749,], output)
mod['func_1767'] = func_1767
mod = relay.transform.InferType()(mod)
mutated_mod['func_1767'] = func_1767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1767_call = mutated_mod.get_global_var('func_1767')
var_1769 = relay.var("var_1769", dtype = "float32", shape = (3, 7, 15))#candidate|1769|(3, 7, 15)|var|float32
var_1770 = relay.var("var_1770", dtype = "int32", shape = ())#candidate|1770|()|var|int32
call_1768 = func_1767_call(var_1769,var_1770,)
output = call_1768
func_1771 = relay.Function([var_1769,var_1770,], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1900 = relay.var("var_1900", dtype = "bool", shape = ())#candidate|1900|()|var|bool
var_1901 = relay.var("var_1901", dtype = "bool", shape = (10, 12, 13))#candidate|1901|(10, 12, 13)|var|bool
bop_1902 = relay.logical_and(var_1900.astype('bool'), var_1901.astype('bool')) # shape=(10, 12, 13)
func_1767_call = mod.get_global_var('func_1767')
func_1771_call = mutated_mod.get_global_var('func_1771')
const_1922 = relay.const([[5.457408,-9.833852,3.124625,-1.737170,1.167522,-6.326302,0.027442,3.059958,1.093634],[-0.871147,7.387052,-7.672848,-2.872469,2.544757,-8.378281,-1.225957,-9.107089,2.954062],[-2.328263,-8.265686,9.363719,-5.603834,-8.871268,6.083148,-7.949320,0.493785,0.239954],[-5.037718,8.055202,-4.432538,9.072804,4.653130,2.098432,1.372263,-2.696908,1.339923],[-0.161781,-3.001486,-6.888114,-3.290187,3.323397,-3.116607,5.959937,1.203312,-1.913180],[5.805240,-0.437877,-0.414710,7.435663,0.235260,9.874219,2.806385,1.961032,-0.529882],[0.245776,-4.054071,-3.086835,3.556074,3.377966,1.371076,2.460197,6.426665,1.379878],[6.662265,5.887234,3.118136,-9.470396,-6.415487,-2.400893,5.009564,-0.051807,5.243494],[-6.177604,-8.108619,0.937336,1.069117,-4.600029,-2.927039,-4.268210,-9.574936,0.091606],[-1.669497,5.289123,9.000613,1.448369,7.167709,-0.652006,5.261946,-9.302089,2.087889],[9.155677,-1.568430,2.109307,6.930513,-9.440978,-1.156031,9.212928,7.730923,9.684628],[0.498153,7.805910,-9.292437,7.609889,-6.367561,-6.620634,0.489885,3.574250,9.492597],[-3.392280,-6.021080,0.207007,-6.458010,-6.838077,8.387311,-5.382813,-7.078159,0.449260],[-3.829674,-3.368191,-4.691255,-0.554890,-2.238021,8.978465,-1.949944,6.604906,7.215051],[0.397083,9.871317,9.455526,-3.464330,9.761974,-7.113196,8.978209,1.660391,2.162116],[-7.010287,5.441526,8.080068,1.396598,7.695199,3.308407,0.601719,-8.058838,-2.247647],[9.978294,-8.320756,6.700941,4.147781,3.164658,1.633976,6.526888,-7.183955,-6.228418],[3.445597,5.585686,-2.516205,4.416742,-4.374639,9.096632,-3.839732,4.751193,8.632187],[4.330367,5.860562,-1.824211,9.264100,8.262088,-3.678219,-4.031407,5.135306,-5.816705],[-9.389615,7.609946,-2.973328,6.488575,1.255390,9.887468,9.657467,7.220455,3.273241],[2.694003,2.860976,-4.243480,9.909942,-9.807999,-3.694849,-5.830748,-7.903800,6.939847],[-4.235356,5.170278,6.450892,5.456711,8.109760,-9.532876,-7.429494,-6.381767,-7.136863],[9.872795,5.170794,-7.614288,1.153279,-8.554973,-9.368625,-1.305715,-4.540943,-5.923027],[-9.106917,-6.693733,-8.635706,-6.701975,3.857404,6.669813,2.726398,4.309687,-7.150190],[-2.150785,-3.440822,8.353109,4.934092,-9.135399,-5.569405,1.149334,-8.590937,-7.899490],[-0.331911,9.008350,4.949997,3.010011,8.078199,5.175484,-2.127776,4.289871,-3.804547],[8.416913,-7.842684,9.580766,-4.192507,6.517926,2.322223,-0.325788,-7.246927,7.998448],[-5.809785,-3.680122,4.529756,9.413618,-9.654729,-5.610088,2.599860,-1.084918,9.911849],[-2.918530,-8.120832,-3.065594,-0.027168,-7.904370,-8.293368,-3.770894,-0.767258,6.876387],[4.001315,-7.095166,4.508648,-9.252883,-9.745886,3.296151,8.078928,-3.443795,9.324175],[6.847140,4.037820,1.316883,2.197216,-9.406458,-1.478684,3.537011,-8.141428,2.556458],[-6.903760,-1.068754,-0.106269,6.179948,-9.305091,-4.188155,-5.003950,9.929533,7.597416],[-0.558395,-6.598681,-1.286703,-6.477071,-1.604356,2.801342,-4.583744,-3.205677,4.813239],[-3.971407,-2.191727,-6.474364,4.814471,-6.967186,-4.579835,0.942814,-5.675665,0.750534],[-4.324154,-2.014213,-7.281789,5.211380,4.593819,7.112780,-8.282069,5.874926,-1.711389]], dtype = "float32")#candidate|1922|(35, 9)|const|float32
call_1921 = relay.TupleGetItem(func_1767_call(relay.reshape(const_1922.astype('float32'), [3, 7, 15]), relay.reshape(var_1900.astype('int32'), []), ), 2)
call_1923 = relay.TupleGetItem(func_1771_call(relay.reshape(const_1922.astype('float32'), [3, 7, 15]), relay.reshape(var_1900.astype('int32'), []), ), 2)
output = relay.Tuple([bop_1902,call_1921,const_1922,])
output2 = relay.Tuple([bop_1902,call_1923,const_1922,])
func_1924 = relay.Function([var_1900,var_1901,], output)
mod['func_1924'] = func_1924
mod = relay.transform.InferType()(mod)
var_1925 = relay.var("var_1925", dtype = "bool", shape = ())#candidate|1925|()|var|bool
var_1926 = relay.var("var_1926", dtype = "bool", shape = (10, 12, 13))#candidate|1926|(10, 12, 13)|var|bool
output = func_1924(var_1925,var_1926,)
func_1927 = relay.Function([var_1925,var_1926,], output)
mutated_mod['func_1927'] = func_1927
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2035 = relay.const([[[0.607867,1.306343,2.838898,-1.618024,7.970973],[7.494173,6.442592,-1.232557,-1.839796,1.061096],[3.040175,-1.257637,6.510055,0.557051,-9.734372],[-5.734251,7.354171,8.775727,9.500584,0.313281],[-0.864129,9.037921,-6.182183,-8.917741,2.748776],[0.897928,9.698813,9.388593,-6.430009,8.082463]],[[-4.987320,-1.691495,-2.497703,-1.735206,-5.616366],[-1.593455,5.153009,-3.360097,-9.743447,-1.927387],[-0.891011,-7.485419,-8.027119,-9.337256,5.209489],[2.613697,5.113458,0.785233,-5.922232,6.343999],[-5.106432,5.991148,-3.563384,7.701870,6.125666],[-7.110561,0.263878,1.448045,-6.620735,8.885298]],[[-9.103710,2.216302,-8.150802,5.069111,3.728595],[8.015366,-4.000672,7.027497,-0.931382,0.813090],[-4.398545,7.397648,2.962190,2.250159,-0.639255],[3.252010,-5.803879,2.767999,8.205151,1.848411],[8.134454,-9.144464,1.485153,-6.408195,5.400357],[1.856281,5.205320,1.409575,-8.347579,0.866981]],[[4.428908,4.431396,9.630019,5.653699,5.372355],[4.943167,0.013947,-2.517877,8.085506,0.603035],[4.699636,7.804058,9.482301,0.947605,2.998743],[9.375470,3.517592,-7.951424,1.350639,2.670618],[-7.126073,8.946005,5.887691,0.399588,3.272759],[5.856099,5.376791,3.441326,7.717610,-0.410690]],[[6.262223,-0.496046,-1.136267,-2.777489,-3.141003],[-0.806154,-5.821468,-5.715527,-5.613255,3.486596],[-5.300195,-7.524065,0.260397,2.937946,-1.519744],[0.051174,4.787706,-4.942125,2.582145,2.856361],[-3.999131,-5.047217,7.548221,-6.710533,-5.185946],[8.437634,-5.634174,8.674816,-5.060775,9.476990]],[[-4.974072,-1.408005,-7.964161,-7.848000,8.385515],[8.504190,3.964723,3.385389,-0.053202,-0.711281],[5.142320,-5.713571,7.174000,1.614801,-9.466805],[-8.135985,3.157449,-4.922375,5.404073,9.682308],[-8.374035,5.174663,1.770620,-0.550433,-7.690253],[-0.844995,6.164421,-1.996505,-1.600208,-5.189057]],[[-8.506797,-4.880378,6.384599,3.305013,0.644252],[-5.422106,7.541535,2.919050,-0.816261,-8.859983],[3.062894,-0.020257,2.424357,4.585961,-7.906879],[-1.906184,4.020656,-8.586137,7.193355,2.738184],[7.892868,-2.967965,3.966864,2.217577,-4.228630],[4.437633,-4.489229,-5.344571,-2.773532,-7.741586]],[[5.424040,5.218805,6.324521,6.134215,4.039310],[2.969752,-7.298314,7.939901,9.653148,9.712273],[-8.004524,1.147359,-2.689681,0.266737,-2.233435],[2.902101,-2.025672,-6.842480,8.856256,4.011234],[-7.555617,9.797424,-4.140999,5.167451,1.101030],[8.799090,3.881361,-5.732240,-9.152654,-9.739364]],[[3.269885,-1.718732,-2.244641,6.322921,4.956365],[-7.663990,0.027603,-4.414288,-7.534989,-8.253349],[2.943205,8.758324,-1.059401,-3.678528,0.005516],[2.505997,8.188014,2.286087,-5.295979,0.135095],[9.829980,-6.396881,9.048348,-0.927948,-0.918680],[1.242301,7.819780,-9.338339,-2.226626,-5.912744]]], dtype = "float64")#candidate|2035|(9, 6, 5)|const|float64
uop_2036 = relay.cosh(const_2035.astype('float64')) # shape=(9, 6, 5)
uop_2039 = relay.log(uop_2036.astype('float32')) # shape=(9, 6, 5)
bop_2041 = relay.multiply(uop_2036.astype('uint8'), relay.reshape(const_2035.astype('uint8'), relay.shape_of(uop_2036))) # shape=(9, 6, 5)
output = relay.Tuple([uop_2039,bop_2041,])
output2 = relay.Tuple([uop_2039,bop_2041,])
func_2049 = relay.Function([], output)
mod['func_2049'] = func_2049
mod = relay.transform.InferType()(mod)
output = func_2049()
func_2050 = relay.Function([], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2058 = relay.TupleGetItem(func_2049_call(), 1)
call_2059 = relay.TupleGetItem(func_2050_call(), 1)
output = call_2058
output2 = call_2059
func_2061 = relay.Function([], output)
mod['func_2061'] = func_2061
mod = relay.transform.InferType()(mod)
output = func_2061()
func_2062 = relay.Function([], output)
mutated_mod['func_2062'] = func_2062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2107 = relay.TupleGetItem(func_2049_call(), 0)
call_2108 = relay.TupleGetItem(func_2050_call(), 0)
func_1282_call = mod.get_global_var('func_1282')
func_1285_call = mutated_mod.get_global_var('func_1285')
const_2135 = relay.const([5,10,-3,1,-1,-1,-5,7,1,5,-8,-10,-3,5,1,-10,3,6,-10,7,-9,-8,-3,2,-10,-2,3,7,8,-8,4,-5,-7,-5,9,-8,-10,-3,-3,7,-1,-4,-2,2,4,10,7,7,8,1,-3,4,-9,-6,-1,4,3,-8,-10,4,-10,4,-10,3,2,-5,-5,10,-7,4,3,-2,9,-9,10,-5,-8,10,-9,-7,-7,9,1,-5,10,-8,9,-9,-10,7,4,2,10,-3,5,1,-10,3,2,2,9,-4,8,5,2,9,4,9,5,5,1,3,6,5,-6,-7,4,3,5,-1,-10,4,-2,-9,4,-9,10,8,-8,4,-7,8,4,-3,-9,-5,-5,-4,1,-5,9,-2,4,5,-1,5,-1,1,-2,2,9,10,-6,4,-10,-4,3,-8,-8,-8,-3,8,5,7,4,-9,-9,-8,5,-2,-10,-6,4,9,-8,-10,-9,-6,8,2], dtype = "int16")#candidate|2135|(180,)|const|int16
call_2134 = func_1282_call(relay.reshape(const_2135.astype('int16'), [6, 2, 15]))
call_2136 = func_1282_call(relay.reshape(const_2135.astype('int16'), [6, 2, 15]))
func_568_call = mod.get_global_var('func_568')
func_571_call = mutated_mod.get_global_var('func_571')
var_2141 = relay.var("var_2141", dtype = "int8", shape = (336,))#candidate|2141|(336,)|var|int8
call_2140 = func_568_call(relay.reshape(var_2141.astype('int8'), [7, 16, 3]), relay.reshape(var_2141.astype('int8'), [7, 16, 3]), )
call_2142 = func_568_call(relay.reshape(var_2141.astype('int8'), [7, 16, 3]), relay.reshape(var_2141.astype('int8'), [7, 16, 3]), )
func_568_call = mod.get_global_var('func_568')
func_571_call = mutated_mod.get_global_var('func_571')
call_2144 = func_568_call(relay.reshape(var_2141.astype('int8'), [7, 16, 3]), relay.reshape(call_2140.astype('int8'), [7, 16, 3]), )
call_2145 = func_568_call(relay.reshape(var_2141.astype('int8'), [7, 16, 3]), relay.reshape(call_2140.astype('int8'), [7, 16, 3]), )
output = relay.Tuple([call_2107,call_2134,const_2135,call_2140,var_2141,call_2144,])
output2 = relay.Tuple([call_2108,call_2136,const_2135,call_2142,var_2141,call_2145,])
func_2147 = relay.Function([var_2141,], output)
mod['func_2147'] = func_2147
mod = relay.transform.InferType()(mod)
mutated_mod['func_2147'] = func_2147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2148 = relay.var("var_2148", dtype = "int8", shape = (336,))#candidate|2148|(336,)|var|int8
func_2147_call = mutated_mod.get_global_var('func_2147')
call_2149 = func_2147_call(var_2148)
output = call_2149
func_2150 = relay.Function([var_2148], output)
mutated_mod['func_2150'] = func_2150
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2180 = relay.const([[[0.816095,-3.464280,7.791281,-4.679947,-0.357243,0.927939,3.600895,0.580336,8.311342,9.936799,5.326496,-1.901013,7.628481,3.429996],[-2.206576,7.684407,-3.528419,-0.285008,-7.906753,3.717503,-9.187453,9.445328,4.402065,-4.756760,2.951448,-3.921460,-8.345652,2.595127]],[[0.095925,0.318797,2.801912,9.580073,-9.110163,4.881579,0.617414,-5.517652,5.295145,1.883739,-5.553190,-9.573096,1.265121,-8.037590],[2.266379,7.812724,-5.305891,8.967465,3.306920,-5.978768,-1.080085,-0.761897,-3.445580,2.362527,-5.225943,7.171735,6.849433,8.780095]],[[-7.585059,-7.592581,4.629329,6.955451,-1.499679,7.850723,2.865336,-7.642480,-3.738924,4.305040,8.880206,-4.100787,8.078858,-7.294077],[7.412561,2.873310,7.335561,-4.951604,8.465756,-3.011105,-3.835179,1.623259,4.748891,7.427124,7.307399,3.816010,-2.402620,-9.553530]],[[8.453435,-0.222387,-9.759494,-6.877554,7.016160,-2.479519,-7.101020,-3.745946,9.805061,2.037403,8.447617,-2.824095,0.356803,9.094459],[4.351061,-0.900594,-5.864954,-2.802972,-2.523613,-6.840430,6.433720,3.391173,-8.590178,-3.792531,3.943379,-7.634714,-7.889860,7.291569]]], dtype = "float32")#candidate|2180|(4, 2, 14)|const|float32
uop_2181 = relay.log(const_2180.astype('float32')) # shape=(4, 2, 14)
uop_2191 = relay.log2(uop_2181.astype('float64')) # shape=(4, 2, 14)
output = uop_2191
output2 = uop_2191
func_2193 = relay.Function([], output)
mod['func_2193'] = func_2193
mod = relay.transform.InferType()(mod)
output = func_2193()
func_2194 = relay.Function([], output)
mutated_mod['func_2194'] = func_2194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2213 = func_2193_call()
call_2214 = func_2193_call()
var_2215 = relay.var("var_2215", dtype = "float64", shape = (4, 2, 14))#candidate|2215|(4, 2, 14)|var|float64
bop_2216 = relay.subtract(call_2213.astype('int16'), relay.reshape(var_2215.astype('int16'), relay.shape_of(call_2213))) # shape=(4, 2, 14)
bop_2219 = relay.subtract(call_2214.astype('int16'), relay.reshape(var_2215.astype('int16'), relay.shape_of(call_2214))) # shape=(4, 2, 14)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
const_2223 = relay.const([[2.868478,8.836404],[-4.847912,-0.992497],[-9.648173,6.706357],[7.404717,-2.576556],[8.979970,-3.549332],[-2.670607,4.626717],[-7.522915,5.410627],[8.528199,-8.808468],[5.770003,-1.304049],[0.426958,-6.351825],[-1.846967,-6.231127],[-6.845554,-5.097776],[-7.539843,-1.511815],[-7.523184,8.258360],[-1.398983,0.167568],[-4.564790,-0.680474],[-8.297972,6.012144],[-7.511755,0.665252],[-2.899809,-1.376887],[3.393642,-6.250115],[-3.161755,-0.396184],[0.142591,5.849841],[-4.745879,4.306521],[-1.179628,-3.108120],[-1.164062,8.523880],[-9.239977,8.889249],[-8.549641,3.670714],[-3.628093,3.302431],[-9.959375,-0.415237],[4.491349,-6.026359],[-3.363255,-2.238274],[7.233276,3.060536],[5.583356,-2.050415],[-0.357449,-6.753536],[-6.992094,-7.714752],[2.534261,3.850946],[6.816753,4.023700],[7.931007,0.397189],[5.228486,0.135869],[-8.389981,4.887260],[5.348460,7.522941],[9.157327,-7.128576],[1.645748,1.481799],[-6.164172,4.568778],[-9.776027,-6.252969],[-8.261453,7.819336],[-4.979209,-7.832506],[-7.948561,-4.302107],[-5.380957,1.479918],[9.948964,0.196230],[-1.067982,3.316475],[5.459197,-9.310092],[-9.531542,2.672575],[-8.167041,-0.938420],[3.239499,-9.451799],[-9.429946,6.766765],[-8.007312,3.429025],[-1.874637,2.111607],[0.571283,5.083003],[1.405255,-8.773860],[9.810668,-0.618705],[-4.557959,-3.031628],[1.949054,4.365969],[8.155773,-6.229745],[9.221778,3.418531],[-5.312038,-3.983967],[0.948116,-2.543034],[-1.669576,-4.966088],[9.421177,9.823300],[-8.238426,6.671520],[-5.474360,7.693618],[-4.970136,-3.228733],[6.234835,5.566741],[-8.073256,9.517401],[-3.156584,-0.574306],[-6.390988,-0.336982],[1.187832,-1.499691],[3.803230,2.028213],[-3.349766,6.561589],[9.824409,3.313996],[8.349356,-5.676249],[-5.907320,0.475783],[-2.925153,0.335219],[4.618673,-6.105204],[-0.543531,-6.297783],[-6.329787,4.428277],[-4.841130,4.849648],[-9.352881,5.010039],[-7.245128,7.616186],[9.885112,8.582359],[-5.377528,9.880154],[-9.444851,-9.624339],[-2.896577,-2.208795],[9.943870,2.733052],[-5.537387,9.953004],[5.165575,-8.492552],[-5.561378,0.309652],[-5.360946,2.790752],[3.729835,-1.838123],[-4.828150,-2.773417],[5.653159,-5.950158],[9.488843,8.434301],[-5.816031,-8.674787],[2.233759,6.708118],[4.965063,0.377619],[0.733088,-9.847646],[1.459297,-2.748047],[-8.404489,-3.020052],[4.392903,-5.271473],[4.617540,-7.118683],[-5.736914,0.910453],[2.354245,4.661773],[5.915648,2.204428],[-8.188622,-6.306972],[-3.395577,7.373362],[6.058797,6.096550],[-2.856617,2.264818],[9.524249,-7.408160],[3.103984,6.593778],[-6.525169,2.386088],[6.416180,1.667655],[-4.797962,-5.954555],[-2.690957,5.166875],[8.142467,6.345373],[-7.825356,9.929775],[-4.568945,6.674735],[-3.509910,0.430090],[-3.642681,-4.349351],[3.596163,4.534075],[9.961876,-1.756064],[2.209583,-0.916481],[-0.633553,0.231825],[-7.819218,-6.022979],[-0.306340,-3.466213],[-0.522490,6.265873],[-0.799395,3.143899],[4.641495,-1.306373],[-7.920333,6.582149],[-9.541023,-9.594174],[9.116808,-1.095141],[1.443401,-5.330683],[-9.862882,-7.078018],[-6.031865,5.635659],[2.036468,-4.666593],[2.740898,-2.377281],[-8.665798,-1.782633],[1.070856,7.229370],[-7.467063,-6.547802],[6.688496,4.294469],[-3.119657,-8.926699],[1.557206,9.246776],[-3.484841,-4.345102],[-1.742988,0.801018],[-3.566147,-7.875336],[2.590357,-6.330981],[0.085388,1.542482],[6.514382,-0.187041],[-1.430741,3.485058],[4.661242,-4.416459],[-9.893567,6.207243],[5.725698,4.282489],[-0.653257,0.820609],[-3.293634,2.759004],[9.221972,-3.119513],[8.316253,-0.345936],[9.994204,-1.848855],[-9.831422,6.442457],[5.367101,-1.447936],[2.008795,-7.631715],[5.999967,4.607153],[9.629771,6.464662],[0.649203,0.695816],[-7.012938,-7.718231],[4.718143,-7.442170],[-8.208380,1.837791],[9.454712,-9.120322],[3.128557,-7.759150],[6.249801,-9.336423],[6.046594,1.036547],[3.135275,3.401810],[-5.515658,-2.268853],[-0.010528,8.778284],[-7.420032,-3.935145],[-3.945298,-2.123005],[5.883342,-7.341119],[4.366173,1.925002],[-0.555343,0.234443],[-3.246426,-8.967778],[0.722723,-6.369817],[0.122219,-5.613947],[-9.429542,5.616580],[1.767897,5.534803],[5.631880,5.890853],[-9.863663,4.046887],[0.468787,0.382176],[5.432937,-6.078908],[-6.855385,5.448762],[1.125185,9.045057],[-7.272195,-6.866230],[-8.992389,4.600043],[-2.403298,-8.684676],[6.781680,0.636951],[6.619228,-7.202893],[-7.181054,4.572114],[-1.445668,3.508175],[-7.311809,3.405742],[9.226793,-5.043471],[9.567185,4.701359],[9.968735,4.357260],[1.932842,1.946001],[7.522292,-3.748593],[4.629699,-4.977399],[-6.655910,2.895211],[-2.988602,6.860305],[-0.845431,0.095731],[8.170741,0.839470],[0.679574,-7.179394],[-7.025551,0.666136],[7.233070,8.250508],[9.289430,-9.507380],[3.054207,-6.483628],[0.401013,-6.096247],[3.742215,3.109479],[-6.099311,4.525474],[0.475422,8.600529],[-2.013158,6.399449],[-6.754520,-0.019062],[-3.450974,9.559872],[-8.810630,4.031772],[3.611088,7.619089],[-8.831586,-3.422423],[-5.034680,-9.989789],[2.060271,5.359666],[-2.005134,2.812227],[7.418411,-4.679397],[6.953146,-3.936680],[5.003275,2.642125],[0.547500,9.144936],[6.754081,-1.632412],[-8.321229,-8.587220],[-1.074482,2.874808],[-9.602641,0.105001],[-8.246035,-8.257027],[2.170105,4.261516],[-7.618821,-8.020409],[4.654866,3.784408],[9.162329,-1.571793],[-0.564120,4.023114],[-3.877284,0.119258],[5.748273,3.715874],[-8.008949,8.927600],[-2.570546,-7.147225],[1.890421,-5.994272],[5.172532,-6.021556],[7.233581,-0.403882],[3.031364,9.046725],[-3.890748,-0.327764],[7.340550,5.671954],[1.984691,-7.299825],[5.630095,6.503994],[2.491140,9.166726],[1.211922,4.829890],[0.846739,0.317384],[7.405255,-9.719653],[6.726319,5.074108],[-2.681787,0.203911],[-0.247137,5.938432],[-8.006457,-0.482231],[-5.004515,-1.834591],[7.748072,0.086317],[8.202166,5.499073],[5.153770,-2.764701],[3.868750,3.317741],[-9.846600,5.781238],[-3.200364,-8.129508],[8.192195,-3.669988],[5.503825,-1.078469],[-7.457039,7.429272],[-9.265349,-9.113672],[-0.780072,-5.000996],[7.649511,-7.227543],[-7.151777,-7.020258],[-8.312741,-1.202984],[6.987884,-9.242608],[9.720437,-2.565762],[-3.582083,-2.720608],[-9.873268,-4.262301],[2.353611,-0.300766],[-0.529637,0.124773],[9.931644,-3.763551],[-9.003639,5.260305],[0.900373,-0.242191],[-4.713416,5.332752],[-4.848052,0.698932],[-2.045008,-4.375394],[1.768452,-3.336884],[0.862099,-0.280906],[2.825763,-0.767715],[3.313054,-9.098938],[7.343917,-7.405045],[3.890251,-8.525471],[5.203139,-9.584401],[4.556042,4.933801],[-4.286573,4.008229],[8.103407,-9.077228],[-2.752489,5.228630],[-4.909055,-5.947331],[-4.859864,-2.169416],[-4.276250,-6.042288],[-7.066957,-6.367976],[2.606139,-6.614550],[5.490434,6.729587],[-9.447744,-5.444726],[-2.723649,-4.392387],[6.693658,1.484791],[6.830790,4.010140],[-0.349330,7.524374],[-5.498445,0.410941],[-7.141529,0.734101],[6.226313,-4.254069],[-4.158758,-7.589042],[-9.256349,-7.883853],[8.562360,-4.589137],[7.485028,4.585614],[7.521457,-0.557661],[-6.242879,6.312245],[-0.153281,-2.106536],[7.481574,8.913910],[1.608940,-0.251598],[-8.608374,7.006808],[-9.431099,1.578561],[0.570736,-4.890938],[4.813601,2.105132],[-5.081649,-7.644987],[6.245269,-5.709681],[-3.462152,0.459391],[8.911148,3.614636],[-3.911748,2.232057],[-6.011016,-8.571648],[2.585713,-9.401050],[2.417386,-4.703013],[-3.202369,-4.186569],[-1.287479,-2.384089],[-4.639960,-1.564871],[-1.483223,-5.121482],[6.974698,5.071428],[-3.218842,5.036399],[-3.927226,-7.253353],[7.691510,9.161568],[-1.540556,-2.067655],[-6.635557,6.968706],[-9.620984,-9.193797],[0.806205,4.753692],[1.685246,5.725897],[-8.824735,8.758289],[-6.093423,-9.773774],[2.301674,-7.356344],[-9.616086,-3.930248],[0.397039,8.799225],[4.213610,-9.305138],[-1.526515,2.510734],[4.469292,8.187862],[-8.512757,-1.938665],[2.234576,-7.352925],[1.297313,-7.182913],[1.088394,-9.086483],[-7.650208,-7.597299],[-5.973571,-7.547511],[-3.879836,-0.995389],[-2.140147,5.327103],[-0.282987,-5.084329],[9.701120,-0.560933],[0.381490,-5.603007],[6.980574,2.715856],[-5.507507,-1.583336],[2.425460,-6.272854],[-5.889015,0.098918],[-9.908119,8.716659],[-1.571167,-6.506309],[8.956479,-0.736546],[5.452140,2.931234],[-6.938398,-5.536864],[9.529557,4.493130],[-2.532878,-4.193434],[-2.262909,0.267732],[2.858855,1.138176],[-3.013082,7.069611],[1.870497,-9.317230],[-4.147095,4.572775],[1.464028,2.169346],[-1.345098,4.275333],[-9.068893,-6.016992],[5.161443,-8.601782],[-7.700290,-2.386310],[2.505446,-9.795875],[-9.314993,-4.292321],[8.274249,4.264329],[9.576634,3.112259],[0.435313,-5.697148],[-9.371592,-9.673776],[3.537396,-5.304961],[-6.134175,-8.629024],[-0.646291,-7.068274],[-0.147192,1.687944],[2.206141,-2.037224],[-9.151437,-7.268661],[-1.982912,8.499362],[3.798450,-4.794653],[-8.915808,4.100823],[2.292598,1.825686],[-7.733150,-8.401481],[-0.866144,-1.003272],[-9.092450,-0.162675],[-4.358625,-4.637386],[-3.596990,-0.683902],[0.667657,-8.537329],[8.756958,9.872964],[5.444559,1.014651],[-9.299898,-7.793317],[0.652542,-3.753890],[4.890857,-7.197912],[-5.165001,-7.504650],[4.558689,-8.859096],[4.193390,-6.674397],[-6.986464,-3.026885],[-9.768307,-3.011597],[7.710271,4.973084],[8.785396,2.546293],[8.866468,2.602060],[-9.087498,-6.106928],[-2.480511,5.042639],[5.480912,-3.163660],[2.944381,9.362431],[-2.630012,-4.949184],[9.245118,0.001512],[-7.390190,0.825545],[-2.012962,9.201941],[7.955727,-1.006643],[-7.408366,0.384757],[-0.757916,-7.587045],[-9.744872,5.818897],[0.408261,6.666573],[-2.572413,9.270692],[9.273097,-3.907517],[8.975697,-5.639515],[7.756131,-6.027878],[-4.321117,7.698913],[-0.280780,-0.901935],[8.314514,7.098114],[-1.548126,8.422380],[9.447370,1.776838],[-5.691941,4.673664],[5.595230,-0.050905],[-3.280428,-0.080188],[-3.970129,6.242566],[8.135432,-0.900492],[-9.800782,4.909884],[-4.748150,5.520245],[-5.563777,-9.337307],[-6.354577,-5.367402],[6.657841,-5.438458],[-5.810729,3.554756],[-3.930719,4.161408],[-1.567848,-6.489389],[8.299055,4.403320],[4.230033,-6.008995],[2.538699,-5.967721],[-0.902216,1.351429],[7.982278,6.223502],[9.985157,-3.175691],[-1.592268,3.956126],[4.836977,0.069607],[-1.786691,-8.875876],[6.914082,1.377796],[1.281315,-4.856873],[-2.243976,-8.490647],[3.941884,8.601993],[-3.132094,-0.998610],[9.801938,2.307936],[9.434286,-7.873041],[-7.339703,4.503208],[5.130119,-9.680135],[-1.049218,-3.465772],[1.716133,-5.622388],[-3.191172,9.841955],[-5.018247,1.430248],[2.707550,-9.416671],[8.704628,-6.552089],[-2.102946,1.589057],[-8.584086,-3.383566],[-1.994768,-8.734269],[9.256095,-5.766310],[-2.999058,-8.037893],[3.662144,4.554143],[1.940320,-1.727699],[-8.197908,-2.730366],[-0.625954,-9.105118],[4.639236,-9.394900],[5.971401,1.162334],[6.495148,-8.648393],[8.950439,-3.927723],[9.343471,-7.844687],[-6.827918,4.011173],[5.840381,3.579092],[-7.506869,6.102071],[-1.258171,8.421156],[-3.992125,6.120291],[5.227444,9.322725],[-2.995368,2.079661],[9.006179,-4.856752],[-5.434664,-5.388767],[0.776774,-1.951473],[0.166862,-6.403781],[8.716239,4.090603],[-0.130547,2.244757],[9.766191,7.036754],[1.939753,4.460240],[-6.217440,-1.874092],[7.164925,-6.085612],[-8.825995,-5.131910],[-2.277908,5.880300],[0.981789,7.894070],[6.639539,8.603104],[-8.708001,1.804895],[6.239694,-2.219901],[-2.344780,7.208633],[-4.435046,4.814169],[-4.992994,-9.050740],[-0.716256,-7.927200],[4.476303,4.192543],[-0.598989,0.941619],[7.670690,-8.687028],[0.986086,-7.357230],[1.493998,0.268856],[-8.215265,-0.956708],[9.422883,6.421953],[7.879637,6.426999],[-3.567003,5.640503],[2.102258,9.122450],[4.430296,8.177727],[-8.421254,4.763340],[8.350822,3.401154],[0.198062,-7.410540],[7.100735,-3.376009],[2.567268,4.196374],[-3.859440,6.102019],[9.908451,7.203548],[-1.455318,4.098189],[-4.635624,7.611263],[1.563989,3.235066],[-2.901166,6.992476],[-9.942444,-7.536546],[5.064085,8.082709],[1.675748,0.173880],[8.989280,4.053920],[-2.793766,-6.190602],[6.387263,-0.641131],[4.489207,6.971913],[-5.798789,5.618678],[-7.585863,-7.361526],[3.586982,-1.919113],[-9.932959,5.360701],[-5.536028,-5.148379],[4.765583,8.018679],[-9.665858,6.652957],[-9.150849,6.424253],[-5.697230,1.431127],[5.857602,-9.617573],[4.589180,7.710770],[9.148802,1.256377],[9.478681,-5.032009],[-1.893612,-0.116028],[1.665107,-7.219144],[-9.892688,-2.772682],[-1.978686,-1.553416],[-6.993032,-5.768305],[1.409785,1.949670],[-2.401923,-5.920211],[-1.375938,-8.809753],[-9.688718,1.242992],[6.823411,1.310856],[-3.606678,-3.732247],[0.851257,-0.155497],[8.710301,6.651398],[-3.380962,9.991764],[9.579666,-3.366711],[-4.672680,5.980166],[0.007621,5.131088],[-4.720526,3.368360],[-9.905241,-6.713554],[-0.121061,4.602756],[2.679362,-2.998667],[-0.133313,5.398595],[3.123742,9.394548],[-5.265185,-1.943889],[-8.472787,-6.015411],[7.261241,6.592659],[7.879756,8.406482],[-3.904520,-6.557426],[-6.459315,6.447099],[-4.586901,-0.631790],[-4.558510,-9.187711],[-3.986264,7.618169],[-3.477294,-3.341659],[8.146011,2.549651],[5.112781,-7.118581],[-5.708136,6.502732],[4.043273,3.456829],[3.129230,8.322340],[5.758969,1.591545],[-3.316964,-8.344244],[-0.116051,-9.120251],[-3.053835,0.273131],[8.534968,3.152252],[-1.280304,-2.738024],[1.677015,4.560832],[0.856371,3.818771],[-4.980975,6.056673],[1.053139,9.127636],[-7.495167,9.561339],[-2.802825,-9.396607],[-4.892078,5.754381],[-1.286013,-7.285172],[2.586416,9.207409],[-4.995398,0.396082],[7.923445,5.341156],[6.196555,-5.548857],[0.105274,-4.156003],[-1.800214,6.026261],[7.727390,6.124256],[-1.904305,1.351529],[-5.063436,-8.765282],[5.222593,2.476209],[-8.676326,4.193810],[-2.696720,8.340003],[3.812263,3.863796],[-9.962068,-3.435102],[3.595945,-6.355100],[4.490157,2.679656],[-7.296896,-2.112644],[5.613266,-9.880713],[3.807566,6.127353],[0.020191,3.012291],[2.775788,6.427516],[4.409300,1.306389],[8.036747,-0.543074],[6.511621,-1.532037],[4.941625,-4.370623],[5.821033,7.657312],[-3.919963,-9.592723],[5.775979,8.105615],[-7.105373,7.045229],[-7.990223,-9.919683],[-6.500734,8.697530],[-3.282947,1.783573],[-2.790504,-3.474818],[-1.992162,-2.131884],[7.174292,-4.069946],[-1.785103,5.984901],[-8.302218,-9.095198],[8.352873,8.564691],[9.632753,8.014107],[-8.290839,-6.913325],[-3.500709,-4.970134],[-6.224788,-0.339403],[1.166109,-8.429727],[-8.346437,-0.272443],[-9.694290,7.951946],[6.995383,1.857507],[3.770115,-3.946591],[5.527545,3.548147],[-8.278784,-0.509790],[-8.221755,-1.961623],[-1.230652,-3.872581],[-8.268200,3.151638],[6.603791,-6.437069],[7.941334,-5.006886],[-5.860681,2.715338],[8.489657,-8.174759],[-2.824098,-3.884666],[3.644628,2.214106],[9.182002,-6.487461],[-4.255460,4.533932],[-4.348372,9.295856],[4.305851,0.622845],[-6.509851,-7.172069],[1.383367,2.319150],[7.005826,-2.750488],[-5.144469,-6.292849],[6.321098,8.104067],[8.827325,-7.673030],[-5.707704,6.273963],[7.211862,-7.581919],[4.037236,9.657134],[0.138381,3.656371],[-1.269102,5.719182],[4.728143,-1.676591],[-2.264663,-2.852877],[-1.938938,5.598147],[-2.701385,3.883873],[8.537619,-5.320679],[-2.185544,0.011622],[-0.794758,-7.561757],[8.035216,-5.619723],[-7.039610,2.028684],[-7.749401,-4.157626],[-6.983031,-1.502297],[-5.915251,-1.355846],[0.934426,9.400610],[-4.928283,2.097260],[8.046341,9.312894],[8.097993,4.598476],[7.699779,-8.049787],[-7.543818,-0.782816],[-9.931762,-8.039401],[-3.005376,2.585414],[5.543996,3.902718],[6.430163,-4.750311],[5.217632,9.510887],[1.964722,-0.665178],[-5.257609,6.431561],[6.495590,9.542889],[-3.597364,-0.625602],[0.461081,-7.202690],[-1.869642,-3.764478],[-5.333535,-7.893731],[7.762694,-6.662648],[-1.974366,2.302656],[0.900247,-8.082212],[-8.194517,-9.184502],[1.462614,-7.689650],[-0.974200,5.605860],[-6.418683,9.418815],[-8.820283,-1.880399],[6.826608,1.593404],[2.213788,-6.834060],[2.980115,6.247570],[3.133103,-2.283674],[4.221027,7.262413],[9.129106,-8.674165],[-3.884191,-5.339812],[-0.452904,-8.028041],[7.174743,5.392925],[-6.438044,0.681716],[-5.471410,-5.471133],[-4.517995,-3.458577],[5.168741,-7.216693],[-3.616106,-1.399589],[-4.763313,-3.116885],[-9.430448,-8.185830],[-4.180975,-1.683291],[-6.290536,-8.461316],[4.954191,-6.547608],[9.671712,4.228264],[-6.519939,4.408700],[-1.725411,8.110090],[-5.956482,5.763379],[0.890342,-0.407557],[-6.177607,-6.856090],[-8.899226,4.805144],[9.438089,5.079048],[3.106037,2.696802],[-0.710014,-5.569301],[3.663673,7.789140],[4.979971,-7.222338],[9.547366,-4.916405],[6.746824,-2.476029],[6.405922,7.164026],[2.738283,7.537839],[7.554345,-9.853127],[5.416069,1.127289],[-4.929180,-5.612656],[9.612993,-3.733016],[8.572361,-6.648273],[-4.737627,-6.666642],[2.700496,-2.239960],[8.000100,4.982274],[6.541057,-4.266698],[-0.330599,6.884746],[2.625892,9.824671],[-1.471273,2.748684],[-8.282099,-1.856976],[-0.907328,0.580079],[4.010686,-9.515383],[1.712236,9.139145],[7.317664,-0.273481],[8.914452,-0.488526],[6.304201,-3.676481],[-1.875934,-3.894563],[8.540960,3.356365],[3.918695,4.756518],[-7.376766,1.447744],[5.902850,-0.562430],[4.997961,8.515285],[-8.020361,8.400243],[2.399973,1.348177],[7.733237,-6.317625],[9.926998,-2.754859],[-0.882358,1.223373],[0.930207,7.057520],[4.938010,8.854802],[-9.456006,-6.397155],[-7.683745,-9.943870],[1.957623,9.779237],[7.446560,9.635582],[0.872284,-1.648370],[-4.813105,9.913239],[-5.839534,-2.812471],[-9.955207,-4.463537],[-8.214990,-7.687683],[-8.646254,-7.913438],[-9.106254,-7.516550],[-7.325106,-5.810290],[0.878894,9.836042],[-7.891287,4.786412],[4.897376,9.234300],[2.295625,-8.751341],[-3.234352,7.579371],[-7.373130,-1.165236],[5.074326,-6.147583],[-0.964238,-1.890642],[8.828241,6.849618],[-3.599754,8.614783],[1.258856,9.728712],[-0.537117,-5.608484],[-2.475624,-1.276407],[-2.490199,-5.775958],[4.622925,3.388514],[6.451222,-0.716966],[5.243559,2.539651],[-6.975245,-3.049473],[3.025236,5.480689],[0.255822,-8.078638],[2.249222,-2.541046],[1.833064,5.990415],[-4.475098,-0.610484],[-3.457027,-4.820975],[6.640103,8.291006],[-7.139772,3.216876],[-2.941373,-1.146778],[-5.685549,1.888246],[7.620096,5.757549],[-2.942192,3.658680],[3.096614,0.123684],[-1.325645,-8.942487],[5.793384,-2.948415],[6.270503,9.046294],[-0.648401,4.028561],[-1.647571,-8.798182],[2.495363,-3.603817],[-7.560867,-1.170116],[6.562598,-7.593779],[2.796912,5.213340],[-9.128461,8.283335],[5.556487,7.253370],[-7.963734,5.866325],[-6.994991,-7.737490],[8.729883,1.939524],[-5.416333,-8.862588],[2.856664,-8.132840],[6.817303,0.842297],[5.283629,9.783488],[9.596354,-8.832812],[4.365320,-9.278286],[3.502320,1.319529],[5.015750,-3.680517],[-0.733784,-0.397403],[9.015626,6.040258],[-9.253077,7.778047],[8.343946,2.783003],[3.616016,-9.452415],[3.812550,-2.805053],[3.334133,9.976458],[5.408992,-9.185590],[-0.346287,8.709911],[6.087967,-2.702711],[-1.328568,0.814393],[-2.717227,-0.347271],[-2.110099,6.753883],[-5.789192,-5.779723],[3.131953,-6.464754],[-8.719994,2.048987],[7.524197,-6.260553],[4.435007,1.135924],[-4.843733,1.707598],[5.840136,8.857075],[-5.406524,4.637616],[-3.657450,-0.047368],[9.559799,-2.562334],[0.216745,2.046212],[0.138776,-7.594599],[-0.366125,-9.116485],[-8.079906,-4.455028],[9.428181,-3.294512],[-5.893082,-0.686775],[7.259385,-8.365565],[-8.114880,-6.567422],[-7.809661,-3.352456],[-4.515894,-1.179475],[-5.349692,6.576063],[-5.033238,-3.442212],[5.813076,7.056588],[-3.259426,9.833315],[-3.382258,9.340694],[-8.281925,2.881202],[1.604816,-0.103007],[-8.135247,-2.227937],[0.127417,9.504529],[2.086567,-9.506839],[-7.982776,-6.573619]], dtype = "float32")#candidate|2223|(910, 2)|const|float32
call_2222 = relay.TupleGetItem(func_459_call(relay.reshape(const_2223.astype('float32'), [13, 14, 10])), 1)
call_2224 = relay.TupleGetItem(func_462_call(relay.reshape(const_2223.astype('float32'), [13, 14, 10])), 1)
output = relay.Tuple([bop_2216,call_2222,const_2223,])
output2 = relay.Tuple([bop_2219,call_2224,const_2223,])
func_2226 = relay.Function([var_2215,], output)
mod['func_2226'] = func_2226
mod = relay.transform.InferType()(mod)
mutated_mod['func_2226'] = func_2226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2227 = relay.var("var_2227", dtype = "float64", shape = (4, 2, 14))#candidate|2227|(4, 2, 14)|var|float64
func_2226_call = mutated_mod.get_global_var('func_2226')
call_2228 = func_2226_call(var_2227)
output = call_2228
func_2229 = relay.Function([var_2227], output)
mutated_mod['func_2229'] = func_2229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2251 = func_2193_call()
call_2252 = func_2193_call()
output = call_2251
output2 = call_2252
func_2271 = relay.Function([], output)
mod['func_2271'] = func_2271
mod = relay.transform.InferType()(mod)
output = func_2271()
func_2272 = relay.Function([], output)
mutated_mod['func_2272'] = func_2272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2283 = func_2193_call()
call_2284 = func_2193_call()
func_2147_call = mod.get_global_var('func_2147')
func_2150_call = mutated_mod.get_global_var('func_2150')
var_2297 = relay.var("var_2297", dtype = "int8", shape = (336,))#candidate|2297|(336,)|var|int8
call_2296 = relay.TupleGetItem(func_2147_call(relay.reshape(var_2297.astype('int8'), [336,])), 2)
call_2298 = relay.TupleGetItem(func_2150_call(relay.reshape(var_2297.astype('int8'), [336,])), 2)
output = relay.Tuple([call_2283,call_2296,var_2297,])
output2 = relay.Tuple([call_2284,call_2298,var_2297,])
func_2301 = relay.Function([var_2297,], output)
mod['func_2301'] = func_2301
mod = relay.transform.InferType()(mod)
mutated_mod['func_2301'] = func_2301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2302 = relay.var("var_2302", dtype = "int8", shape = (336,))#candidate|2302|(336,)|var|int8
func_2301_call = mutated_mod.get_global_var('func_2301')
call_2303 = func_2301_call(var_2302)
output = call_2303
func_2304 = relay.Function([var_2302], output)
mutated_mod['func_2304'] = func_2304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2322 = relay.TupleGetItem(func_2049_call(), 0)
call_2323 = relay.TupleGetItem(func_2050_call(), 0)
output = relay.Tuple([call_2322,])
output2 = relay.Tuple([call_2323,])
func_2331 = relay.Function([], output)
mod['func_2331'] = func_2331
mod = relay.transform.InferType()(mod)
output = func_2331()
func_2332 = relay.Function([], output)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2333 = relay.TupleGetItem(func_2049_call(), 0)
call_2334 = relay.TupleGetItem(func_2050_call(), 0)
uop_2361 = relay.exp(call_2333.astype('float64')) # shape=(9, 6, 5)
uop_2363 = relay.exp(call_2334.astype('float64')) # shape=(9, 6, 5)
func_969_call = mod.get_global_var('func_969')
func_973_call = mutated_mod.get_global_var('func_973')
const_2374 = relay.const([[-8,8,4,2,-5,2,-2,4,-3,8,-10,-10,7,2,-1,-3,-5,8,7,9,-3,-7,-8,-2,-10,2,9,-3,-1,4,-1,-1,-7,6,-1,7,-7,-2,-5,-8,7,7,6,-2,8,9,2,6,10,-5,-6,-6,-7,10,3,1,9,-3,9,-2,-1,6,10,5,3,-1,-4,-4,3,7,1,3,-5,7,-4,-10,-7,-10,-6,6,-7,-10,2,-4,-7,3,8,-10,-4,4,3,3,-10,-8,8,-8,1,-5,-4,-9,9,-1,-8,9,-7,2,-9,-1,-7,-7,-4,-9,-5,-9,-5,-1,10,3,-10,-2,5,6,-10,-3,9,2,-5,8,7,-10,-4,9,1,-4,2,10,3,-1,5,9,-4,-7,4,-10,1,-5,10,-2,6,6,3,5,-1,6,2,2,-6,6,4,-3,7,3,4,2,1,-7,-1,-10,-9,-2,4,7,-5,-4,-1,6,-6,7,2,9,-7,-8,9,3,-8,10,-1,6,2,-6,6,10,1,-2,-9,8,5,4,-6,1,4,-8,10,4,1,-4,-2,-10,4,-5,3,6,-9,-4,-9,-1,-8,-9,-2,-8,-3,-1,-7,-9,3,3,-9,-5,-1,-5,6,3,-6,2,-7,10,-3,6,-4,-2,-9,2,-5,-6,8,7,9,7,4,3,10,-3,6,4,6,-8,10,-3,-9,-9,4,10,-6,9,6,3,-7,8,8,5,5,-9,3,10,-2,-10,5,-10,-7,-2,10,9,-2,3,9,3,1,-9,-3,8,-7,2,8,-4,-10,10,-4,9,5,5,2,-8,-10,-7,5,8,6,6,1,-1,-6,3,9,5,6,10,10,10,6,-2,-5,-4,8,4,-10,2,-3,8,-9,-10,5,-2,9,-4,9,7]], dtype = "uint32")#candidate|2374|(1, 336)|const|uint32
var_2375 = relay.var("var_2375", dtype = "int32", shape = ())#candidate|2375|()|var|int32
call_2373 = relay.TupleGetItem(func_969_call(relay.reshape(const_2374.astype('uint32'), [12, 2, 14]), relay.reshape(const_2374.astype('uint32'), [12, 2, 14]), relay.reshape(var_2375.astype('int32'), []), ), 1)
call_2376 = relay.TupleGetItem(func_973_call(relay.reshape(const_2374.astype('uint32'), [12, 2, 14]), relay.reshape(const_2374.astype('uint32'), [12, 2, 14]), relay.reshape(var_2375.astype('int32'), []), ), 1)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
var_2395 = relay.var("var_2395", dtype = "uint8", shape = (5, 44))#candidate|2395|(5, 44)|var|uint8
call_2394 = relay.TupleGetItem(func_1638_call(relay.reshape(var_2395.astype('uint8'), [11, 5, 4]), relay.reshape(var_2395.astype('uint8'), [11, 5, 4]), ), 0)
call_2396 = relay.TupleGetItem(func_1641_call(relay.reshape(var_2395.astype('uint8'), [11, 5, 4]), relay.reshape(var_2395.astype('uint8'), [11, 5, 4]), ), 0)
output = relay.Tuple([uop_2361,call_2373,const_2374,var_2375,call_2394,var_2395,])
output2 = relay.Tuple([uop_2363,call_2376,const_2374,var_2375,call_2396,var_2395,])
func_2397 = relay.Function([var_2375,var_2395,], output)
mod['func_2397'] = func_2397
mod = relay.transform.InferType()(mod)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2397_call = mutated_mod.get_global_var('func_2397')
var_2399 = relay.var("var_2399", dtype = "int32", shape = ())#candidate|2399|()|var|int32
var_2400 = relay.var("var_2400", dtype = "uint8", shape = (5, 44))#candidate|2400|(5, 44)|var|uint8
call_2398 = func_2397_call(var_2399,var_2400,)
output = call_2398
func_2401 = relay.Function([var_2399,var_2400,], output)
mutated_mod['func_2401'] = func_2401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2403 = relay.TupleGetItem(func_2049_call(), 0)
call_2404 = relay.TupleGetItem(func_2050_call(), 0)
output = relay.Tuple([call_2403,])
output2 = relay.Tuple([call_2404,])
func_2435 = relay.Function([], output)
mod['func_2435'] = func_2435
mod = relay.transform.InferType()(mod)
output = func_2435()
func_2436 = relay.Function([], output)
mutated_mod['func_2436'] = func_2436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2443 = relay.TupleGetItem(func_2049_call(), 1)
call_2444 = relay.TupleGetItem(func_2050_call(), 1)
output = call_2443
output2 = call_2444
func_2474 = relay.Function([], output)
mod['func_2474'] = func_2474
mod = relay.transform.InferType()(mod)
mutated_mod['func_2474'] = func_2474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mutated_mod.get_global_var('func_2474')
call_2475 = func_2474_call()
output = call_2475
func_2476 = relay.Function([], output)
mutated_mod['func_2476'] = func_2476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2061_call = mod.get_global_var('func_2061')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2484 = func_2061_call()
call_2485 = func_2061_call()
func_1282_call = mod.get_global_var('func_1282')
func_1285_call = mutated_mod.get_global_var('func_1285')
const_2497 = relay.const([[-2,-10,1,6,2,-3,-4,-1,4,3,10,-2,-6,-10,10,-4,-3,1,-8,3,4,-1,2,7,1,-9,6,9,-4,-2],[-9,9,3,-7,8,10,-5,-10,2,-2,1,-5,5,-10,-3,3,9,3,3,-2,9,5,-3,-2,4,2,-5,4,-1,9],[7,5,6,-7,-7,2,-10,-9,-1,2,4,3,-8,-9,3,4,-2,5,6,-10,10,-8,-8,7,-7,7,10,-1,10,9],[10,1,-2,-1,-8,-1,3,-3,6,2,-9,-7,2,-9,-9,-6,-4,2,-5,6,6,-4,-7,-1,6,-8,-4,-6,-2,9],[-5,-10,-3,-7,-5,-4,10,-1,-6,4,6,9,-9,-6,-7,-2,-3,-1,5,7,-1,-3,8,2,4,5,7,10,8,7],[-3,10,-1,2,-9,6,-9,-4,10,-10,9,-4,1,4,-10,-7,-10,-6,-7,7,-7,-9,1,-3,7,-7,3,5,-5,-5]], dtype = "int16")#candidate|2497|(6, 30)|const|int16
call_2496 = func_1282_call(relay.reshape(const_2497.astype('int16'), [6, 2, 15]))
call_2498 = func_1282_call(relay.reshape(const_2497.astype('int16'), [6, 2, 15]))
bop_2539 = relay.equal(call_2496.astype('bool'), relay.reshape(const_2497.astype('bool'), relay.shape_of(call_2496))) # shape=(6, 2, 15)
bop_2542 = relay.equal(call_2498.astype('bool'), relay.reshape(const_2497.astype('bool'), relay.shape_of(call_2498))) # shape=(6, 2, 15)
uop_2552 = relay.exp(bop_2539.astype('float64')) # shape=(6, 2, 15)
uop_2554 = relay.exp(bop_2542.astype('float64')) # shape=(6, 2, 15)
output = relay.Tuple([call_2484,uop_2552,])
output2 = relay.Tuple([call_2485,uop_2554,])
func_2559 = relay.Function([], output)
mod['func_2559'] = func_2559
mod = relay.transform.InferType()(mod)
mutated_mod['func_2559'] = func_2559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2559_call = mutated_mod.get_global_var('func_2559')
call_2560 = func_2559_call()
output = call_2560
func_2561 = relay.Function([], output)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2061_call = mod.get_global_var('func_2061')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_2611 = func_2061_call()
call_2612 = func_2061_call()
func_1924_call = mod.get_global_var('func_1924')
func_1927_call = mutated_mod.get_global_var('func_1927')
const_2634 = relay.const(False, dtype = "bool")#candidate|2634|()|const|bool
const_2635 = relay.const([True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True], dtype = "bool")#candidate|2635|(1560,)|const|bool
call_2633 = relay.TupleGetItem(func_1924_call(relay.reshape(const_2634.astype('bool'), []), relay.reshape(const_2635.astype('bool'), [10, 12, 13]), ), 0)
call_2636 = relay.TupleGetItem(func_1927_call(relay.reshape(const_2634.astype('bool'), []), relay.reshape(const_2635.astype('bool'), [10, 12, 13]), ), 0)
output = relay.Tuple([call_2611,call_2633,const_2634,const_2635,])
output2 = relay.Tuple([call_2612,call_2636,const_2634,const_2635,])
func_2637 = relay.Function([], output)
mod['func_2637'] = func_2637
mod = relay.transform.InferType()(mod)
output = func_2637()
func_2638 = relay.Function([], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_2730 = func_2474_call()
call_2731 = func_2474_call()
output = relay.Tuple([call_2730,])
output2 = relay.Tuple([call_2731,])
func_2739 = relay.Function([], output)
mod['func_2739'] = func_2739
mod = relay.transform.InferType()(mod)
output = func_2739()
func_2740 = relay.Function([], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2743 = relay.TupleGetItem(func_2637_call(), 3)
call_2744 = relay.TupleGetItem(func_2638_call(), 3)
var_2745 = relay.var("var_2745", dtype = "bool", shape = (1560,))#candidate|2745|(1560,)|var|bool
bop_2746 = relay.not_equal(call_2743.astype('bool'), relay.reshape(var_2745.astype('bool'), relay.shape_of(call_2743))) # shape=(1560,)
bop_2749 = relay.not_equal(call_2744.astype('bool'), relay.reshape(var_2745.astype('bool'), relay.shape_of(call_2744))) # shape=(1560,)
output = relay.Tuple([bop_2746,])
output2 = relay.Tuple([bop_2749,])
func_2753 = relay.Function([var_2745,], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2754 = relay.var("var_2754", dtype = "bool", shape = (1560,))#candidate|2754|(1560,)|var|bool
func_2753_call = mutated_mod.get_global_var('func_2753')
call_2755 = func_2753_call(var_2754)
output = call_2755
func_2756 = relay.Function([var_2754], output)
mutated_mod['func_2756'] = func_2756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2763 = relay.var("var_2763", dtype = "float32", shape = (2, 14, 15))#candidate|2763|(2, 14, 15)|var|float32
var_2764 = relay.var("var_2764", dtype = "float32", shape = (2, 14, 15))#candidate|2764|(2, 14, 15)|var|float32
bop_2765 = relay.floor_mod(var_2763.astype('float32'), relay.reshape(var_2764.astype('float32'), relay.shape_of(var_2763))) # shape=(2, 14, 15)
output = bop_2765
output2 = bop_2765
func_2773 = relay.Function([var_2763,var_2764,], output)
mod['func_2773'] = func_2773
mod = relay.transform.InferType()(mod)
var_2774 = relay.var("var_2774", dtype = "float32", shape = (2, 14, 15))#candidate|2774|(2, 14, 15)|var|float32
var_2775 = relay.var("var_2775", dtype = "float32", shape = (2, 14, 15))#candidate|2775|(2, 14, 15)|var|float32
output = func_2773(var_2774,var_2775,)
func_2776 = relay.Function([var_2774,var_2775,], output)
mutated_mod['func_2776'] = func_2776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_2783 = func_2474_call()
call_2784 = func_2474_call()
output = relay.Tuple([call_2783,])
output2 = relay.Tuple([call_2784,])
func_2794 = relay.Function([], output)
mod['func_2794'] = func_2794
mod = relay.transform.InferType()(mod)
mutated_mod['func_2794'] = func_2794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mutated_mod.get_global_var('func_2794')
call_2795 = func_2794_call()
output = call_2795
func_2796 = relay.Function([], output)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2815 = relay.var("var_2815", dtype = "float32", shape = (14, 13, 10))#candidate|2815|(14, 13, 10)|var|float32
uop_2816 = relay.log10(var_2815.astype('float32')) # shape=(14, 13, 10)
output = relay.Tuple([uop_2816,])
output2 = relay.Tuple([uop_2816,])
func_2819 = relay.Function([var_2815,], output)
mod['func_2819'] = func_2819
mod = relay.transform.InferType()(mod)
mutated_mod['func_2819'] = func_2819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2820 = relay.var("var_2820", dtype = "float32", shape = (14, 13, 10))#candidate|2820|(14, 13, 10)|var|float32
func_2819_call = mutated_mod.get_global_var('func_2819')
call_2821 = func_2819_call(var_2820)
output = call_2821
func_2822 = relay.Function([var_2820], output)
mutated_mod['func_2822'] = func_2822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2846 = func_2271_call()
call_2847 = func_2271_call()
uop_2850 = relay.tan(call_2846.astype('float32')) # shape=(4, 2, 14)
uop_2852 = relay.tan(call_2847.astype('float32')) # shape=(4, 2, 14)
output = uop_2850
output2 = uop_2852
func_2860 = relay.Function([], output)
mod['func_2860'] = func_2860
mod = relay.transform.InferType()(mod)
output = func_2860()
func_2861 = relay.Function([], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_2871 = func_2860_call()
call_2872 = func_2860_call()
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2877 = relay.TupleGetItem(func_2637_call(), 0)
call_2878 = relay.TupleGetItem(func_2638_call(), 0)
output = relay.Tuple([call_2871,call_2877,])
output2 = relay.Tuple([call_2872,call_2878,])
func_2883 = relay.Function([], output)
mod['func_2883'] = func_2883
mod = relay.transform.InferType()(mod)
output = func_2883()
func_2884 = relay.Function([], output)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2887 = func_2193_call()
call_2888 = func_2193_call()
const_2904 = relay.const([[[4.339582,-7.556027,-3.846382,-8.222652,3.858748,8.111694,-0.035304,-1.623970,-4.205752,-7.264341,-5.831555,-2.316817,3.652789,4.052797],[6.765739,-7.761640,-1.978269,9.263498,7.580703,-1.352782,-4.058592,-7.730349,9.117584,5.086578,-8.819756,8.488794,1.838810,8.026472]],[[-3.913223,-0.537863,4.493083,-1.756973,5.080765,-8.556022,5.508178,-5.926321,6.035646,-3.878111,7.000791,-7.641773,4.291821,-3.813957],[1.255111,4.109161,2.659838,7.901702,-0.308312,-2.794708,3.152776,2.621822,-5.710762,-8.598392,-5.275832,-8.867746,0.801814,0.439611]],[[-3.819955,5.398317,1.773389,8.309393,-3.886218,7.008427,-5.324816,4.200842,-0.235809,-1.733087,-6.385250,-1.278719,5.876748,-6.544385],[1.721660,-3.582066,-0.252599,6.421781,-4.174750,-1.044526,2.961442,-9.658706,5.750466,4.040010,-9.198501,-2.707451,7.055333,5.123229]],[[3.204109,5.490796,2.658839,-7.306972,3.487779,1.006257,-6.619537,-5.962895,4.191214,5.220565,-6.998137,-8.894913,-2.584186,6.522871],[-2.512743,7.636885,0.670022,-8.842735,-4.458281,-2.229233,9.295939,4.768356,0.649344,9.137896,-9.239202,9.786431,-0.688268,5.855548]]], dtype = "float64")#candidate|2904|(4, 2, 14)|const|float64
bop_2905 = relay.logical_and(call_2887.astype('bool'), relay.reshape(const_2904.astype('bool'), relay.shape_of(call_2887))) # shape=(4, 2, 14)
bop_2908 = relay.logical_and(call_2888.astype('bool'), relay.reshape(const_2904.astype('bool'), relay.shape_of(call_2888))) # shape=(4, 2, 14)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2919 = relay.TupleGetItem(func_2739_call(), 0)
call_2920 = relay.TupleGetItem(func_2740_call(), 0)
output = relay.Tuple([bop_2905,call_2919,])
output2 = relay.Tuple([bop_2908,call_2920,])
func_2924 = relay.Function([], output)
mod['func_2924'] = func_2924
mod = relay.transform.InferType()(mod)
output = func_2924()
func_2925 = relay.Function([], output)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2926 = relay.TupleGetItem(func_2049_call(), 0)
call_2927 = relay.TupleGetItem(func_2050_call(), 0)
output = relay.Tuple([call_2926,])
output2 = relay.Tuple([call_2927,])
func_2929 = relay.Function([], output)
mod['func_2929'] = func_2929
mod = relay.transform.InferType()(mod)
output = func_2929()
func_2930 = relay.Function([], output)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2883_call = mod.get_global_var('func_2883')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_2986 = relay.TupleGetItem(func_2883_call(), 0)
call_2987 = relay.TupleGetItem(func_2884_call(), 0)
func_2924_call = mod.get_global_var('func_2924')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_3006 = relay.TupleGetItem(func_2924_call(), 1)
call_3007 = relay.TupleGetItem(func_2925_call(), 1)
output = relay.Tuple([call_2986,call_3006,])
output2 = relay.Tuple([call_2987,call_3007,])
func_3010 = relay.Function([], output)
mod['func_3010'] = func_3010
mod = relay.transform.InferType()(mod)
output = func_3010()
func_3011 = relay.Function([], output)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3028 = relay.TupleGetItem(func_2049_call(), 0)
call_3029 = relay.TupleGetItem(func_2050_call(), 0)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3035 = relay.TupleGetItem(func_2049_call(), 0)
call_3036 = relay.TupleGetItem(func_2050_call(), 0)
uop_3045 = relay.log2(call_3035.astype('float64')) # shape=(9, 6, 5)
uop_3047 = relay.log2(call_3036.astype('float64')) # shape=(9, 6, 5)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
const_3055 = relay.const([-10,-7,-4,2,9,-8,-10,3,-10,1,-7,-8,5,7,-2,5,7,7,-6,9,-7,-10,-1,-8,-5,-6,7,-7,-5,-4,-3,7,10,5,4,-1,-10,5,5,-4,-4,3,4,6,8,-4,-8,3,4,-3,-2,7,-5,-5,8,1,10,3,-7,3,6,6,-8,-1,-7,-3,1,2,4,8,-7,-4,-2,10,4,5,-1,-6,-10,-3,3,7,-6,2,8,-2,7,-3,10,10,-7,8,6,6,2,2,-5,-1,-1,1,-3,6,6,2,-3,2,9,-5,-5,-10,2,2,4,10,-6,-5,-3,-10,-10,-7,-5,10,-2,-9,-8,1,3,-1,9,-10,-4,6,6,8,-8,-9,-7,-7,6,3,-4,-7,-10,-6,10,3,-3,-1,7,-6,-4,6,-6,8,8,7,6,3,-2,4,-4,-6,-8,-5,4,-9,-6,10,9,-5,1,-3,8,4,2,4,7,-1,4,-1,7,7,-5,5,-6,3,4,6,-9,-4,8,-6,-5,-9,3,7,10,-3,-2,-8,-1,-8,8,-9,-2,-7,10,-5,-10,-5,-4,5,8,-8,-8,-3,-1,6,-2,-6], dtype = "uint8")#candidate|3055|(220,)|const|uint8
call_3054 = relay.TupleGetItem(func_1638_call(relay.reshape(const_3055.astype('uint8'), [11, 5, 4]), relay.reshape(const_3055.astype('uint8'), [11, 5, 4]), ), 1)
call_3056 = relay.TupleGetItem(func_1641_call(relay.reshape(const_3055.astype('uint8'), [11, 5, 4]), relay.reshape(const_3055.astype('uint8'), [11, 5, 4]), ), 1)
output = relay.Tuple([call_3028,uop_3045,call_3054,const_3055,])
output2 = relay.Tuple([call_3029,uop_3047,call_3056,const_3055,])
func_3068 = relay.Function([], output)
mod['func_3068'] = func_3068
mod = relay.transform.InferType()(mod)
mutated_mod['func_3068'] = func_3068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mutated_mod.get_global_var('func_3068')
call_3069 = func_3068_call()
output = call_3069
func_3070 = relay.Function([], output)
mutated_mod['func_3070'] = func_3070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_3109 = func_2474_call()
call_3110 = func_2474_call()
output = call_3109
output2 = call_3110
func_3166 = relay.Function([], output)
mod['func_3166'] = func_3166
mod = relay.transform.InferType()(mod)
output = func_3166()
func_3167 = relay.Function([], output)
mutated_mod['func_3167'] = func_3167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2929_call = mod.get_global_var('func_2929')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_3282 = relay.TupleGetItem(func_2929_call(), 0)
call_3283 = relay.TupleGetItem(func_2930_call(), 0)
output = relay.Tuple([call_3282,])
output2 = relay.Tuple([call_3283,])
func_3327 = relay.Function([], output)
mod['func_3327'] = func_3327
mod = relay.transform.InferType()(mod)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mutated_mod.get_global_var('func_3327')
call_3328 = func_3327_call()
output = call_3328
func_3329 = relay.Function([], output)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3011_call = mutated_mod.get_global_var('func_3011')
call_3338 = relay.TupleGetItem(func_3010_call(), 0)
call_3339 = relay.TupleGetItem(func_3011_call(), 0)
output = relay.Tuple([call_3338,])
output2 = relay.Tuple([call_3339,])
func_3353 = relay.Function([], output)
mod['func_3353'] = func_3353
mod = relay.transform.InferType()(mod)
output = func_3353()
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3359 = func_3166_call()
call_3360 = func_3166_call()
func_400_call = mod.get_global_var('func_400')
func_402_call = mutated_mod.get_global_var('func_402')
var_3362 = relay.var("var_3362", dtype = "int64", shape = (234,))#candidate|3362|(234,)|var|int64
call_3361 = relay.TupleGetItem(func_400_call(relay.reshape(var_3362.astype('int64'), [9, 2, 13])), 0)
call_3363 = relay.TupleGetItem(func_402_call(relay.reshape(var_3362.astype('int64'), [9, 2, 13])), 0)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_3366 = relay.TupleGetItem(func_2435_call(), 0)
call_3367 = relay.TupleGetItem(func_2436_call(), 0)
func_1282_call = mod.get_global_var('func_1282')
func_1285_call = mutated_mod.get_global_var('func_1285')
var_3369 = relay.var("var_3369", dtype = "int16", shape = (180,))#candidate|3369|(180,)|var|int16
call_3368 = func_1282_call(relay.reshape(var_3369.astype('int16'), [6, 2, 15]))
call_3370 = func_1282_call(relay.reshape(var_3369.astype('int16'), [6, 2, 15]))
func_2397_call = mod.get_global_var('func_2397')
func_2401_call = mutated_mod.get_global_var('func_2401')
const_3382 = relay.const(3, dtype = "int32")#candidate|3382|()|const|int32
var_3383 = relay.var("var_3383", dtype = "uint8", shape = (220,))#candidate|3383|(220,)|var|uint8
call_3381 = relay.TupleGetItem(func_2397_call(relay.reshape(const_3382.astype('int32'), []), relay.reshape(var_3383.astype('uint8'), [5, 44]), ), 0)
call_3384 = relay.TupleGetItem(func_2401_call(relay.reshape(const_3382.astype('int32'), []), relay.reshape(var_3383.astype('uint8'), [5, 44]), ), 0)
output = relay.Tuple([call_3359,call_3361,var_3362,call_3366,call_3368,var_3369,call_3381,const_3382,var_3383,])
output2 = relay.Tuple([call_3360,call_3363,var_3362,call_3367,call_3370,var_3369,call_3384,const_3382,var_3383,])
func_3385 = relay.Function([var_3362,var_3369,var_3383,], output)
mod['func_3385'] = func_3385
mod = relay.transform.InferType()(mod)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3385_call = mutated_mod.get_global_var('func_3385')
var_3387 = relay.var("var_3387", dtype = "int64", shape = (234,))#candidate|3387|(234,)|var|int64
var_3388 = relay.var("var_3388", dtype = "int16", shape = (180,))#candidate|3388|(180,)|var|int16
var_3389 = relay.var("var_3389", dtype = "uint8", shape = (220,))#candidate|3389|(220,)|var|uint8
call_3386 = func_3385_call(var_3387,var_3388,var_3389,)
output = call_3386
func_3390 = relay.Function([var_3387,var_3388,var_3389,], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3416 = relay.TupleGetItem(func_2637_call(), 1)
call_3417 = relay.TupleGetItem(func_2638_call(), 1)
var_3423 = relay.var("var_3423", dtype = "bool", shape = (10, 12, 13))#candidate|3423|(10, 12, 13)|var|bool
bop_3424 = relay.subtract(call_3416.astype('float64'), relay.reshape(var_3423.astype('float64'), relay.shape_of(call_3416))) # shape=(10, 12, 13)
bop_3427 = relay.subtract(call_3417.astype('float64'), relay.reshape(var_3423.astype('float64'), relay.shape_of(call_3417))) # shape=(10, 12, 13)
bop_3428 = relay.logical_or(var_3423.astype('bool'), relay.reshape(bop_3424.astype('bool'), relay.shape_of(var_3423))) # shape=(10, 12, 13)
bop_3431 = relay.logical_or(var_3423.astype('bool'), relay.reshape(bop_3427.astype('bool'), relay.shape_of(var_3423))) # shape=(10, 12, 13)
func_400_call = mod.get_global_var('func_400')
func_402_call = mutated_mod.get_global_var('func_402')
var_3439 = relay.var("var_3439", dtype = "int64", shape = (234,))#candidate|3439|(234,)|var|int64
call_3438 = relay.TupleGetItem(func_400_call(relay.reshape(var_3439.astype('int64'), [9, 2, 13])), 0)
call_3440 = relay.TupleGetItem(func_402_call(relay.reshape(var_3439.astype('int64'), [9, 2, 13])), 0)
func_2773_call = mod.get_global_var('func_2773')
func_2776_call = mutated_mod.get_global_var('func_2776')
const_3445 = relay.const([0.805952,-3.772379,-1.345153,-6.357056,7.297236,4.597645,6.153421,7.715927,-6.066903,8.262940,-8.762749,-8.643574,-5.128461,2.138378,-3.240317,-0.071711,2.364198,-9.165206,2.668153,7.281217,-0.346130,8.579336,-7.102198,4.650813,5.643448,-2.835959,-7.440968,1.918602,2.703927,2.573367,-0.569391,-8.909391,-0.046982,-9.366087,5.448466,2.265109,-5.094477,-9.604805,8.793050,6.172156,-4.115689,-8.361052,-6.979432,7.191530,1.541133,6.471351,-3.788533,4.657681,4.191710,-2.390332,-4.771809,-9.010793,2.725642,7.762571,-5.107560,0.386566,7.428981,9.217621,0.390143,9.216391,6.962584,0.504251,-3.361417,1.946491,-6.329429,7.516248,3.918800,2.850216,-9.496276,1.318870,-0.191849,5.942598,6.736933,5.739927,6.606141,2.407339,-1.137866,8.222033,9.564747,-0.032678,-1.520154,-0.740227,3.863912,-0.164402,5.730674,-0.147751,6.835853,2.054199,-3.735844,7.647670,6.590677,2.402708,4.434364,0.789680,7.246949,-5.526350,0.363101,2.153833,3.114006,-5.068534,2.885151,-2.535566,-3.249339,1.350503,-0.209750,-8.266016,1.157255,1.564566,-0.383757,-3.463011,-7.134936,-2.363568,8.834351,-4.645213,9.143127,3.129194,6.206655,1.859263,4.258121,7.781167,-9.516899,-3.033964,7.905449,-1.761262,-9.370156,4.949493,-5.108524,-7.489654,1.796737,-0.838312,2.394580,6.793437,9.255665,-1.418566,-4.924218,-1.009929,4.360129,-8.368227,5.697908,8.834246,1.428014,-8.119048,-1.062599,-2.006058,-8.508832,-1.884310,-4.472109,-6.222116,0.457072,6.276844,-6.928417,-7.745403,-7.332735,-1.856291,5.457300,4.178263,-9.044573,-6.953129,-2.188213,-1.368474,7.715969,-2.112052,1.908631,5.691098,2.952723,-5.561854,1.310137,8.331599,5.674910,8.511586,0.349818,-5.010269,-2.779732,-4.377582,9.123422,2.971150,-2.252877,-7.072014,6.276531,-8.655661,-5.304129,-2.276315,1.830791,1.991250,-2.216512,3.984823,6.146841,6.374588,5.479153,-4.675507,8.096169,5.836487,9.433378,6.379363,-4.249100,2.059000,-4.934522,-9.904741,-8.683629,-5.459792,-8.078825,-5.089548,4.582076,0.580189,-9.104435,7.009891,-1.817048,7.078269,1.649877,-9.757197,-0.365034,-0.002537,4.717769,-5.143050,2.373348,-7.244245,-1.218532,5.192068,7.727831,-8.247385,4.631948,7.252521,7.349092,7.798635,2.119866,-4.466084,-7.785128,-6.418461,6.453260,3.031202,4.900541,-8.046910,-8.450599,-3.977214,-2.824608,8.497088,-6.349470,2.604175,4.042875,-4.130523,-4.512016,-8.468928,-8.972043,2.592308,0.795053,-2.854083,-2.994202,6.341949,-3.738673,-3.113526,-0.564700,-3.567518,-5.628237,-8.295001,0.878776,-2.622096,1.052192,-2.363680,2.931360,0.518348,-9.114708,-5.612042,-2.453848,5.580502,8.646201,-7.127843,-5.937360,-9.855043,-4.483995,-3.719974,-5.572281,-0.933770,-1.952154,6.793529,-4.950754,-6.142288,-5.522234,5.697058,-1.847626,3.187178,2.059053,-1.247992,6.847102,-6.406215,2.385886,8.058031,-0.432592,-3.178819,-2.873150,-8.667147,-3.054567,0.184613,5.724171,-3.350278,1.797459,4.065161,1.263840,-4.949901,4.620481,-2.591863,-2.366565,-0.773494,5.088583,9.174825,-4.775413,-3.020245,-1.538858,8.743053,0.102931,-8.523042,5.150587,9.221836,0.172754,3.195876,-3.701884,4.955226,5.004177,2.492436,-1.346163,-7.149593,6.533723,-4.155031,-6.833699,0.652300,2.071419,1.827497,-0.336668,4.818658,-1.323278,-2.133268,-9.075141,8.937731,9.125588,1.916933,1.656212,-2.578384,-5.294506,6.297594,-9.897271,-4.282906,-6.385045,-4.165043,-7.692361,-2.283603,0.928793,-9.375858,-3.249664,3.423273,-1.618870,-7.223479,7.632390,-6.329087,9.505686,-7.708149,1.328572,2.085612,-5.976456,-3.278311,1.926563,-9.910543,3.511891,-9.712245,-3.305356,4.987449,-2.539168,1.849704,-8.008657,-8.611378,3.565441,8.336180,0.271363,-9.754455,-4.595349,4.461280,0.986882,-9.360720,-6.263758,-2.443766,2.558248,3.412530,6.685331,9.955785,7.610482,1.714416,-9.468557,7.496342,2.723453,-9.334475,-2.280127,1.379124,1.095331,-2.615979,5.150686,-6.040590,-8.594588,-7.573369,-8.621500,2.183573,0.232930,-9.823473,6.442574,-0.454088,9.714890,-1.749912,-2.643091,0.410408,-7.439079,3.370681,2.423416,-0.724111,5.712819,6.084607,-5.130380,0.146946,-4.220901,7.483735,5.338849,-2.899014,-6.990103,-1.082507], dtype = "float32")#candidate|3445|(420,)|const|float32
call_3444 = func_2773_call(relay.reshape(const_3445.astype('float32'), [2, 14, 15]), relay.reshape(const_3445.astype('float32'), [2, 14, 15]), )
call_3446 = func_2773_call(relay.reshape(const_3445.astype('float32'), [2, 14, 15]), relay.reshape(const_3445.astype('float32'), [2, 14, 15]), )
uop_3450 = relay.log(bop_3428.astype('float32')) # shape=(10, 12, 13)
uop_3452 = relay.log(bop_3431.astype('float32')) # shape=(10, 12, 13)
func_429_call = mod.get_global_var('func_429')
func_432_call = mutated_mod.get_global_var('func_432')
var_3459 = relay.var("var_3459", dtype = "int32", shape = ())#candidate|3459|()|var|int32
call_3458 = func_429_call(relay.reshape(var_3459.astype('int32'), []))
call_3460 = func_429_call(relay.reshape(var_3459.astype('int32'), []))
uop_3484 = relay.acosh(uop_3450.astype('float32')) # shape=(10, 12, 13)
uop_3486 = relay.acosh(uop_3452.astype('float32')) # shape=(10, 12, 13)
func_2883_call = mod.get_global_var('func_2883')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_3490 = relay.TupleGetItem(func_2883_call(), 0)
call_3491 = relay.TupleGetItem(func_2884_call(), 0)
output = relay.Tuple([call_3438,var_3439,call_3444,const_3445,call_3458,var_3459,uop_3484,call_3490,])
output2 = relay.Tuple([call_3440,var_3439,call_3446,const_3445,call_3460,var_3459,uop_3486,call_3491,])
func_3511 = relay.Function([var_3423,var_3439,var_3459,], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
var_3512 = relay.var("var_3512", dtype = "bool", shape = (10, 12, 13))#candidate|3512|(10, 12, 13)|var|bool
var_3513 = relay.var("var_3513", dtype = "int64", shape = (234,))#candidate|3513|(234,)|var|int64
var_3514 = relay.var("var_3514", dtype = "int32", shape = ())#candidate|3514|()|var|int32
output = func_3511(var_3512,var_3513,var_3514,)
func_3515 = relay.Function([var_3512,var_3513,var_3514,], output)
mutated_mod['func_3515'] = func_3515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mod.get_global_var('func_3068')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3527 = relay.TupleGetItem(func_3068_call(), 0)
call_3528 = relay.TupleGetItem(func_3070_call(), 0)
func_2301_call = mod.get_global_var('func_2301')
func_2304_call = mutated_mod.get_global_var('func_2304')
var_3560 = relay.var("var_3560", dtype = "int8", shape = (336,))#candidate|3560|(336,)|var|int8
call_3559 = relay.TupleGetItem(func_2301_call(relay.reshape(var_3560.astype('int8'), [336,])), 1)
call_3561 = relay.TupleGetItem(func_2304_call(relay.reshape(var_3560.astype('int8'), [336,])), 1)
func_2753_call = mod.get_global_var('func_2753')
func_2756_call = mutated_mod.get_global_var('func_2756')
const_3579 = relay.const([[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False]], dtype = "bool")#candidate|3579|(1560, 1)|const|bool
call_3578 = relay.TupleGetItem(func_2753_call(relay.reshape(const_3579.astype('bool'), [1560,])), 0)
call_3580 = relay.TupleGetItem(func_2756_call(relay.reshape(const_3579.astype('bool'), [1560,])), 0)
bop_3605 = relay.power(const_3579.astype('float32'), var_3560.astype('float32')) # shape=(1560, 336)
func_3068_call = mod.get_global_var('func_3068')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_3612 = relay.TupleGetItem(func_3068_call(), 3)
call_3613 = relay.TupleGetItem(func_3070_call(), 3)
func_2753_call = mod.get_global_var('func_2753')
func_2756_call = mutated_mod.get_global_var('func_2756')
call_3625 = relay.TupleGetItem(func_2753_call(relay.reshape(const_3579.astype('bool'), [1560,])), 0)
call_3626 = relay.TupleGetItem(func_2756_call(relay.reshape(const_3579.astype('bool'), [1560,])), 0)
output = relay.Tuple([call_3527,call_3559,call_3578,bop_3605,call_3612,call_3625,])
output2 = relay.Tuple([call_3528,call_3561,call_3580,bop_3605,call_3613,call_3626,])
func_3657 = relay.Function([var_3560,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
var_3658 = relay.var("var_3658", dtype = "int8", shape = (336,))#candidate|3658|(336,)|var|int8
output = func_3657(var_3658)
func_3659 = relay.Function([var_3658], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_3741 = relay.TupleGetItem(func_2435_call(), 0)
call_3742 = relay.TupleGetItem(func_2436_call(), 0)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_3745 = relay.TupleGetItem(func_3327_call(), 0)
call_3746 = relay.TupleGetItem(func_3329_call(), 0)
output = relay.Tuple([call_3741,call_3745,])
output2 = relay.Tuple([call_3742,call_3746,])
func_3752 = relay.Function([], output)
mod['func_3752'] = func_3752
mod = relay.transform.InferType()(mod)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3752_call = mutated_mod.get_global_var('func_3752')
call_3753 = func_3752_call()
output = call_3753
func_3754 = relay.Function([], output)
mutated_mod['func_3754'] = func_3754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_3755 = func_2271_call()
call_3756 = func_2271_call()
output = call_3755
output2 = call_3756
func_3757 = relay.Function([], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
output = func_3757()
func_3758 = relay.Function([], output)
mutated_mod['func_3758'] = func_3758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2924_call = mod.get_global_var('func_2924')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_3801 = relay.TupleGetItem(func_2924_call(), 0)
call_3802 = relay.TupleGetItem(func_2925_call(), 0)
output = call_3801
output2 = call_3802
func_3822 = relay.Function([], output)
mod['func_3822'] = func_3822
mod = relay.transform.InferType()(mod)
mutated_mod['func_3822'] = func_3822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3822_call = mutated_mod.get_global_var('func_3822')
call_3823 = func_3822_call()
output = call_3823
func_3824 = relay.Function([], output)
mutated_mod['func_3824'] = func_3824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3899 = relay.var("var_3899", dtype = "float64", shape = (2, 7, 11))#candidate|3899|(2, 7, 11)|var|float64
const_3900 = relay.const([[[0.647312,-9.368435,-2.924480,8.016547,-5.340204,6.904483,6.953655,-0.743352,-0.864400,-4.423159,5.334806],[-7.023399,-5.468895,-5.599213,5.120560,9.064466,-2.782323,5.647194,-9.842127,1.551689,-7.973432,4.215262],[-4.296179,-4.523510,6.635834,2.220680,8.731080,7.264113,-9.549200,-4.157930,-2.892200,-8.551780,1.018479],[0.878281,-1.909398,-8.270749,4.569390,-6.755168,4.468837,-3.789955,5.961225,4.696251,0.941438,-6.942118],[-5.376464,7.523560,9.174935,-3.976867,-5.936434,-6.948815,-6.381333,6.080866,-5.708053,0.883664,-3.468701],[3.489823,-0.270062,-5.255802,4.921675,2.348306,3.327355,-7.651525,-6.664594,0.572367,-7.223831,5.191175],[-7.757446,-7.217384,-9.283208,0.656322,1.920834,1.110851,3.351616,-3.198459,-8.156783,3.763866,-3.193443]],[[-7.250306,-9.346888,7.588570,-2.818985,9.340434,5.354069,5.424118,8.165632,-8.436701,3.278130,-5.560520],[4.534749,-0.235791,-7.651734,9.911540,0.506922,1.201932,6.870164,4.111954,9.890996,9.939910,-7.329171],[4.446735,2.841984,7.161328,8.782735,0.682728,-5.742293,-1.137552,3.578648,7.881864,-9.009762,-4.748221],[-7.803052,2.687003,-4.437578,-1.742314,1.738477,9.035000,-1.198610,-5.807123,-9.812769,-1.468773,8.479434],[-3.168947,9.240780,8.696716,-8.504713,9.692841,7.711502,3.291211,4.531940,6.339800,9.696143,8.662224],[6.964345,5.680368,-6.068231,-1.404599,-0.564311,-6.328460,-6.811555,5.184517,-1.697102,4.848918,7.342575],[1.162278,4.996559,-3.184245,2.649766,-4.553744,4.910244,1.850396,8.399868,4.419012,-6.507496,0.116098]]], dtype = "float64")#candidate|3900|(2, 7, 11)|const|float64
bop_3901 = relay.divide(var_3899.astype('float64'), relay.reshape(const_3900.astype('float64'), relay.shape_of(var_3899))) # shape=(2, 7, 11)
output = bop_3901
output2 = bop_3901
func_3913 = relay.Function([var_3899,], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
var_3914 = relay.var("var_3914", dtype = "float64", shape = (2, 7, 11))#candidate|3914|(2, 7, 11)|var|float64
output = func_3913(var_3914)
func_3915 = relay.Function([var_3914], output)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3950 = relay.var("var_3950", dtype = "float32", shape = (1, 1, 5))#candidate|3950|(1, 1, 5)|var|float32
uop_3951 = relay.sqrt(var_3950.astype('float32')) # shape=(1, 1, 5)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_3954 = func_2193_call()
call_3955 = func_2193_call()
bop_3956 = relay.divide(uop_3951.astype('float32'), relay.reshape(var_3950.astype('float32'), relay.shape_of(uop_3951))) # shape=(1, 1, 5)
uop_3963 = relay.sigmoid(bop_3956.astype('float32')) # shape=(1, 1, 5)
uop_3966 = relay.cosh(call_3954.astype('float32')) # shape=(4, 2, 14)
uop_3968 = relay.cosh(call_3955.astype('float32')) # shape=(4, 2, 14)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3969 = func_3166_call()
call_3970 = func_3166_call()
bop_3975 = relay.subtract(uop_3963.astype('uint32'), relay.reshape(var_3950.astype('uint32'), relay.shape_of(uop_3963))) # shape=(1, 1, 5)
output = relay.Tuple([uop_3966,call_3969,bop_3975,])
output2 = relay.Tuple([uop_3968,call_3970,bop_3975,])
func_3992 = relay.Function([var_3950,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3993 = relay.var("var_3993", dtype = "float32", shape = (1, 1, 5))#candidate|3993|(1, 1, 5)|var|float32
func_3992_call = mutated_mod.get_global_var('func_3992')
call_3994 = func_3992_call(var_3993)
output = call_3994
func_3995 = relay.Function([var_3993], output)
mutated_mod['func_3995'] = func_3995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3752_call = mod.get_global_var('func_3752')
func_3754_call = mutated_mod.get_global_var('func_3754')
call_4025 = relay.TupleGetItem(func_3752_call(), 1)
call_4026 = relay.TupleGetItem(func_3754_call(), 1)
output = call_4025
output2 = call_4026
func_4033 = relay.Function([], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mutated_mod.get_global_var('func_4033')
call_4034 = func_4033_call()
output = call_4034
func_4035 = relay.Function([], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4079 = relay.TupleGetItem(func_3353_call(), 0)
call_4080 = relay.TupleGetItem(func_3354_call(), 0)
uop_4091 = relay.sqrt(call_4079.astype('float64')) # shape=(4, 2, 14)
uop_4093 = relay.sqrt(call_4080.astype('float64')) # shape=(4, 2, 14)
func_2226_call = mod.get_global_var('func_2226')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_4096 = relay.TupleGetItem(func_2226_call(relay.reshape(call_4079.astype('float64'), [4, 2, 14])), 1)
call_4097 = relay.TupleGetItem(func_2229_call(relay.reshape(call_4079.astype('float64'), [4, 2, 14])), 1)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_4107 = func_2193_call()
call_4108 = func_2193_call()
output = relay.Tuple([uop_4091,call_4096,call_4107,])
output2 = relay.Tuple([uop_4093,call_4097,call_4108,])
func_4111 = relay.Function([], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mutated_mod.get_global_var('func_4111')
call_4112 = func_4111_call()
output = call_4112
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_4114 = relay.TupleGetItem(func_2435_call(), 0)
call_4115 = relay.TupleGetItem(func_2436_call(), 0)
output = call_4114
output2 = call_4115
func_4120 = relay.Function([], output)
mod['func_4120'] = func_4120
mod = relay.transform.InferType()(mod)
output = func_4120()
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_4140 = func_2860_call()
call_4141 = func_2860_call()
uop_4150 = relay.asin(call_4140.astype('float64')) # shape=(4, 2, 14)
uop_4152 = relay.asin(call_4141.astype('float64')) # shape=(4, 2, 14)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4164 = relay.TupleGetItem(func_3327_call(), 0)
call_4165 = relay.TupleGetItem(func_3329_call(), 0)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_4168 = func_2193_call()
call_4169 = func_2193_call()
output = relay.Tuple([uop_4150,call_4164,call_4168,])
output2 = relay.Tuple([uop_4152,call_4165,call_4169,])
func_4177 = relay.Function([], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mutated_mod.get_global_var('func_4177')
call_4178 = func_4177_call()
output = call_4178
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3011_call = mutated_mod.get_global_var('func_3011')
call_4185 = relay.TupleGetItem(func_3010_call(), 1)
call_4186 = relay.TupleGetItem(func_3011_call(), 1)
output = relay.Tuple([call_4185,])
output2 = relay.Tuple([call_4186,])
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
output = func_4220()
func_4221 = relay.Function([], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4227 = func_4120_call()
call_4228 = func_4120_call()
func_2331_call = mod.get_global_var('func_2331')
func_2332_call = mutated_mod.get_global_var('func_2332')
call_4241 = relay.TupleGetItem(func_2331_call(), 0)
call_4242 = relay.TupleGetItem(func_2332_call(), 0)
func_2226_call = mod.get_global_var('func_2226')
func_2229_call = mutated_mod.get_global_var('func_2229')
const_4246 = relay.const([-9.263230,3.621437,-5.545171,2.489200,8.466055,-3.795216,-6.615337,-3.052484,-9.514492,1.520555,-5.704820,-4.671123,6.538432,0.340590,1.872593,8.117758,3.156956,3.029233,-0.805263,-1.801066,2.687693,-4.430413,1.170640,-8.953223,-0.893535,7.359450,-4.697791,4.869027,-8.681487,-9.277686,-1.779505,2.509217,9.482300,9.415082,8.817475,9.417788,-0.444337,-5.891705,-7.634901,4.071354,-4.550787,-4.854098,-7.367440,0.012727,-0.848379,2.718941,8.591964,-4.495897,8.092524,-4.992067,5.543161,3.942111,2.097703,7.377039,-1.027390,5.958735,-9.666343,4.942288,2.878545,4.116123,5.194466,-7.668698,0.388376,0.275513,-8.700855,8.881334,7.795764,1.856362,-7.031321,0.972820,6.341604,-1.637230,-2.477819,2.378022,-5.626931,0.430733,7.670123,-1.242323,-9.653370,0.533192,4.393813,-4.102641,9.726546,4.933304,-2.190829,-5.665777,2.547484,0.574892,-0.565903,0.240593,5.220472,-6.743002,-9.795454,6.324713,-2.503252,5.824632,1.628361,0.062104,9.147479,2.705837,7.718332,-2.712760,-9.488439,-4.072900,-2.690806,7.027875,-6.755725,-3.744548,-5.967669,4.311868,-1.421156,-7.273361], dtype = "float64")#candidate|4246|(112,)|const|float64
call_4245 = relay.TupleGetItem(func_2226_call(relay.reshape(const_4246.astype('float64'), [4, 2, 14])), 0)
call_4247 = relay.TupleGetItem(func_2229_call(relay.reshape(const_4246.astype('float64'), [4, 2, 14])), 0)
output = relay.Tuple([call_4227,call_4241,call_4245,const_4246,])
output2 = relay.Tuple([call_4228,call_4242,call_4247,const_4246,])
func_4252 = relay.Function([], output)
mod['func_4252'] = func_4252
mod = relay.transform.InferType()(mod)
mutated_mod['func_4252'] = func_4252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4252_call = mutated_mod.get_global_var('func_4252')
call_4253 = func_4252_call()
output = call_4253
func_4254 = relay.Function([], output)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4275 = relay.var("var_4275", dtype = "float64", shape = (10, 8, 4))#candidate|4275|(10, 8, 4)|var|float64
uop_4276 = relay.tan(var_4275.astype('float64')) # shape=(10, 8, 4)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4279 = func_3166_call()
call_4280 = func_3166_call()
func_429_call = mod.get_global_var('func_429')
func_432_call = mutated_mod.get_global_var('func_432')
var_4285 = relay.var("var_4285", dtype = "int32", shape = ())#candidate|4285|()|var|int32
call_4284 = func_429_call(relay.reshape(var_4285.astype('int32'), []))
call_4286 = func_429_call(relay.reshape(var_4285.astype('int32'), []))
uop_4298 = relay.sigmoid(uop_4276.astype('float32')) # shape=(10, 8, 4)
func_1282_call = mod.get_global_var('func_1282')
func_1285_call = mutated_mod.get_global_var('func_1285')
const_4303 = relay.const([[-6],[2],[10],[4],[3],[10],[-10],[-3],[-8],[-6],[8],[5],[2],[7],[-7],[4],[6],[3],[-9],[-9],[6],[2],[-8],[9],[-3],[2],[-2],[-1],[1],[6],[7],[-3],[7],[-10],[7],[-1],[-3],[-9],[9],[8],[4],[-1],[9],[3],[-4],[-1],[-10],[-5],[-2],[-5],[6],[-2],[-10],[-9],[-10],[1],[7],[2],[-8],[7],[5],[-2],[-2],[-4],[-1],[5],[-5],[-6],[7],[-4],[-10],[-1],[-8],[4],[-8],[-7],[-9],[-8],[7],[-9],[-10],[-8],[9],[-2],[9],[3],[4],[8],[-5],[-10],[-5],[7],[-8],[-9],[8],[-5],[-10],[5],[-7],[6],[-6],[9],[3],[2],[2],[-2],[-8],[3],[4],[3],[7],[2],[1],[7],[-6],[-7],[-3],[2],[6],[5],[-5],[4],[-8],[1],[8],[5],[2],[-3],[7],[-4],[-4],[-7],[9],[-5],[5],[-2],[-1],[-6],[-5],[2],[-3],[-1],[6],[-9],[-5],[-8],[-7],[-7],[6],[1],[4],[-4],[2],[-5],[-8],[-2],[-3],[5],[8],[-4],[8],[3],[-9],[-2],[-2],[6],[4],[2],[-9],[5],[-3],[-6],[2],[8],[7],[3],[6],[-1],[-6],[-9]], dtype = "int16")#candidate|4303|(180, 1)|const|int16
call_4302 = func_1282_call(relay.reshape(const_4303.astype('int16'), [6, 2, 15]))
call_4304 = func_1282_call(relay.reshape(const_4303.astype('int16'), [6, 2, 15]))
bop_4305 = relay.left_shift(uop_4276.astype('int8'), var_4285.astype('int8')) # shape=(10, 8, 4)
bop_4310 = relay.add(uop_4276.astype('uint64'), var_4285.astype('uint64')) # shape=(10, 8, 4)
output = relay.Tuple([call_4279,call_4284,uop_4298,call_4302,const_4303,bop_4305,bop_4310,])
output2 = relay.Tuple([call_4280,call_4286,uop_4298,call_4304,const_4303,bop_4305,bop_4310,])
func_4313 = relay.Function([var_4275,var_4285,], output)
mod['func_4313'] = func_4313
mod = relay.transform.InferType()(mod)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mutated_mod.get_global_var('func_4313')
var_4315 = relay.var("var_4315", dtype = "float64", shape = (10, 8, 4))#candidate|4315|(10, 8, 4)|var|float64
var_4316 = relay.var("var_4316", dtype = "int32", shape = ())#candidate|4316|()|var|int32
call_4314 = func_4313_call(var_4315,var_4316,)
output = call_4314
func_4317 = relay.Function([var_4315,var_4316,], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4357 = relay.var("var_4357", dtype = "int8", shape = (7, 12, 4))#candidate|4357|(7, 12, 4)|var|int8
const_4358 = relay.const([[[7,7,9,-9],[4,-4,9,9],[-9,-7,-10,-9],[-6,9,-5,-9],[9,2,5,6],[5,2,-3,-3],[5,-9,6,10],[-6,9,3,2],[4,-9,7,10],[-7,-7,-5,-3],[10,-7,-10,10],[5,-5,-7,-10]],[[3,4,5,4],[-8,2,-1,4],[-7,-10,8,-2],[9,-1,6,-1],[-1,9,-1,-7],[3,-2,4,-8],[9,-9,7,-1],[-1,-7,6,-6],[-5,2,-9,2],[-8,-8,10,-5],[-1,-7,-6,-7],[1,-3,-1,3]],[[-7,1,3,10],[10,6,-2,-1],[5,-3,6,-7],[-3,-3,9,-2],[8,4,1,-3],[-10,2,-1,-8],[1,-9,-1,-4],[-7,1,-1,-4],[-8,-2,-10,1],[5,-5,6,-5],[5,4,10,-10],[-4,-5,-6,6]],[[7,5,5,1],[-9,8,-10,-2],[7,-10,-5,6],[-3,-4,9,-7],[10,-4,-9,-4],[-1,-4,5,5],[4,-1,-6,-8],[-7,8,-2,10],[6,-6,-1,3],[-3,5,5,-2],[-3,-7,1,8],[6,1,10,2]],[[7,2,8,-4],[-4,-3,-6,7],[-9,8,8,5],[1,-3,-9,-10],[-5,-6,10,8],[-8,-3,5,6],[2,3,10,-3],[-5,-6,5,1],[-10,5,-9,-4],[-3,1,-4,-1],[1,-6,3,5],[-10,-2,-9,-5]],[[2,-9,-2,-7],[-9,-10,-5,1],[6,-10,9,-8],[-8,-3,3,-6],[-7,-5,-9,1],[-1,10,3,-4],[1,9,1,8],[-8,-6,9,6],[-8,-5,3,2],[-7,10,8,-1],[9,-8,9,-10],[8,-10,10,3]],[[8,5,-3,5],[-3,-10,-10,7],[-4,2,2,-2],[1,-7,1,1],[7,-1,4,10],[3,-8,2,-4],[2,-2,9,-3],[8,-1,10,-8],[-7,9,7,1],[-1,6,-6,-2],[8,3,7,-6],[-5,-2,1,6]]], dtype = "int8")#candidate|4358|(7, 12, 4)|const|int8
bop_4359 = relay.not_equal(var_4357.astype('bool'), relay.reshape(const_4358.astype('bool'), relay.shape_of(var_4357))) # shape=(7, 12, 4)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4362 = func_3166_call()
call_4363 = func_3166_call()
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4384 = func_3166_call()
call_4385 = func_3166_call()
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_4390 = relay.TupleGetItem(func_2559_call(), 0)
call_4391 = relay.TupleGetItem(func_2561_call(), 0)
func_2929_call = mod.get_global_var('func_2929')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4392 = relay.TupleGetItem(func_2929_call(), 0)
call_4393 = relay.TupleGetItem(func_2930_call(), 0)
func_459_call = mod.get_global_var('func_459')
func_462_call = mutated_mod.get_global_var('func_462')
const_4423 = relay.const([-5.504420,1.176459,1.028502,3.163024,3.334995,4.897695,4.336987,8.747809,-4.819451,-7.182186,0.559890,9.409102,-2.288394,-7.335074,0.500856,-9.351377,-5.796625,9.550012,-4.304392,4.764757,7.504147,-0.275199,-3.251849,6.696729,-3.051808,-1.012187,5.827930,-1.746308,-4.057817,-2.935471,-2.512142,2.711112,-6.402032,-7.999038,-6.573774,-6.058008,-9.368747,-9.098973,-8.368888,2.077378,1.164314,-8.625371,-2.923001,5.854056,-1.035681,-1.722361,-6.176069,4.160376,1.351127,-0.828186,4.005339,9.105396,5.084141,-4.089739,3.390056,-4.229439,6.333279,-8.672852,2.741396,-2.050899,8.787317,-9.150049,8.459449,-1.893784,-4.803456,-4.561828,5.438472,2.767359,5.038188,-0.786144,-7.669749,4.539354,-3.196851,4.068135,0.369060,7.302378,-3.685702,9.524484,2.525941,-7.915386,-0.330547,6.388271,-6.284174,-5.610492,1.332350,6.093135,7.490207,1.163342,-6.118689,5.765856,3.962363,-4.642959,-6.959273,2.776089,9.954626,0.246132,-3.964308,3.700024,-5.307644,-6.400142,-0.579854,8.756381,-9.868458,7.420670,4.625766,5.404447,9.266666,-2.439134,0.677040,2.162443,-7.632541,-3.097647,-1.553779,2.692669,7.340475,-7.773187,9.699095,8.069776,-6.136650,-5.723644,4.543069,-0.862119,0.942313,-9.442245,-5.437619,7.950237,5.336619,8.941372,9.508408,-5.828563,-3.188328,0.142743,-6.848616,-8.827350,9.872203,-7.714097,-5.974221,-3.635366,2.129099,-3.443156,-5.345832,-1.437876,8.338488,7.523233,5.139564,7.220835,-3.364245,6.377291,6.842385,-8.787481,7.512732,6.894183,1.307324,1.425797,-5.391384,4.368774,-9.860640,-9.703929,0.878551,-5.116708,4.515671,9.885103,-0.583078,-7.769667,-2.294930,9.578430,5.374884,0.939862,-1.852070,-0.795725,-9.172919,9.459637,2.962518,-4.003027,-7.528254,3.044886,-0.201036,1.975657,-2.167351,-3.024646,-3.194982,-2.694774,-3.725848,4.881269,-6.226480,9.234295,1.635220,9.931782,5.214007,7.692286,8.302520,0.648248,2.686243,-6.850806,4.746844,-7.705073,-8.695985,8.798671,-1.182909,1.869365,-6.372947,9.651155,-7.379459,2.103735,-2.397404,4.365512,2.029321,5.792697,6.655755,-6.483163,-2.572045,9.722472,5.254145,1.419222,0.556329,8.994725,-9.335605,4.562741,0.509053,-1.517564,6.673144,6.795641,-7.405473,-0.017650,0.337574,-0.594159,3.568398,-5.585497,6.488178,3.173965,8.346189,-4.546164,8.084054,-1.294689,-3.006377,9.045489,-5.069433,4.501627,9.398213,-0.360464,-6.939784,6.337689,-7.024659,3.539154,6.967605,-0.292683,9.346489,-0.430578,-5.770591,2.934847,3.294782,6.131920,-3.823735,3.545116,-3.384077,-4.088686,-5.498297,-3.770136,2.395567,-1.499145,-4.623366,9.506968,-1.254732,6.807312,-2.602734,6.895477,2.225346,8.111251,1.118552,4.984821,9.112112,1.626338,4.842647,-6.583369,1.333823,-5.894825,-2.096953,8.745558,1.953571,7.916141,4.937614,-2.762629,3.645503,-1.794867,-8.238838,-2.537475,7.279718,5.518949,-4.914332,-5.219672,5.029932,1.257240,-4.830507,-6.461945,7.048721,-4.573049,-4.584622,4.432787,-0.389134,7.745080,-8.118717,-3.296359,2.918996,-6.498533,-0.340571,9.490291,3.314713,4.020719,5.642220,-3.870861,7.143502,9.886022,3.230741,-0.996679,3.171641,-9.897909,5.651904,8.794740,-4.381610,-5.068368,-8.892328,-8.228553,9.799244,-5.773934,0.847770,5.830166,8.274289,9.777335,-6.293111,-1.762532,7.209990,9.917870,-8.219996,9.163524,-0.278974,0.865234,6.982454,6.288749,5.804386,7.379571,-7.549057,0.924108,6.694581,-6.891682,-9.435184,3.867837,4.557105,8.718363,-5.210362,-7.808329,-4.764067,1.791239,-6.713517,-0.564087,-0.999443,-5.163340,4.211288,-9.227107,-7.315046,-7.127693,-9.606093,-0.186775,-1.221373,9.640148,-3.996379,6.561683,9.911040,-5.716934,0.757711,0.598847,-0.072816,-2.573578,7.600490,2.165120,2.144662,5.642220,2.039450,1.377158,8.239117,-9.128270,8.073604,-3.894809,4.338931,-3.423433,-5.611120,-2.690302,2.521224,-7.142848,-7.873242,4.231573,7.383580,4.353780,-2.914775,-2.551616,6.357654,-7.816082,-9.990047,6.134382,1.278962,0.577019,6.015476,1.665678,-0.646008,8.606842,7.897826,8.040807,9.410268,4.316509,1.812030,8.071061,2.104550,2.895956,2.582239,4.927659,-9.730713,-1.465007,-4.742154,0.375632,6.245531,1.206974,9.003187,3.794545,5.940270,-8.642670,-1.797434,6.221048,3.940370,8.485539,6.399446,-1.920633,2.675056,4.506835,-1.231723,3.844171,-4.791547,-4.132361,1.606561,-0.539177,-7.838264,6.029341,8.767481,-2.859582,-8.104228,9.749677,-2.284022,9.977518,-6.101300,-3.223934,9.444089,-8.491067,-7.428489,2.798417,-8.561158,0.489829,5.881006,9.609893,6.822696,0.067609,2.368007,-2.915772,-1.076810,-6.561638,-0.435989,7.878227,-5.515429,4.427984,-2.240112,-8.918845,4.119086,-7.910672,-0.262753,4.785849,5.386729,8.369177,2.743701,0.399813,-9.675847,-1.965372,-7.242375,-1.277750,9.257725,4.835250,2.878433,-9.630342,1.807158,9.081390,-7.137079,-3.945965,2.021202,-0.169070,7.999032,1.253095,4.107424,-3.994058,1.465493,-3.797897,5.372985,3.335932,3.429691,0.129583,-1.892707,7.520970,9.091472,-2.661418,2.971026,8.694411,-9.347164,-3.923054,-1.658843,5.791494,-2.149072,-8.002056,-2.995821,-2.604597,9.821537,-8.573763,-9.171606,-0.107726,0.536006,-4.912068,6.263218,7.080904,-1.430142,-0.359139,9.663819,7.130696,9.286297,2.050210,7.878435,-9.443774,1.686167,-7.322478,-9.581498,7.511057,4.352529,-7.394368,0.182757,3.733867,-9.451247,-2.921791,2.059410,8.716616,6.334655,-7.944059,-1.707783,4.842623,-3.848319,6.652799,-4.922848,-5.146709,-8.652061,-6.043878,6.708211,-8.963243,9.795851,7.580922,-8.595852,-2.589785,1.499451,-9.325512,9.516730,9.329834,7.183941,-1.224266,2.801433,6.575399,6.117677,3.570561,6.155579,-1.927323,-1.544317,-9.524762,-5.171944,-3.695259,4.533344,9.125963,-4.635778,-7.255883,8.417109,9.076537,-7.409090,5.204842,-2.918605,-8.181571,-6.696231,6.391612,-8.964414,6.765494,-6.378876,-1.583216,-2.757007,-3.006333,-6.998316,-0.050425,2.006243,-1.003339,-7.364113,6.398239,-8.447414,3.530762,4.068044,2.194480,-6.051662,-3.796664,-3.454023,-6.382131,7.834776,3.776896,-8.668642,3.005329,8.822034,1.471026,0.733898,-2.808425,-3.925395,-0.963859,-3.585328,5.253698,-5.592461,1.281580,-4.864895,1.807952,-9.921977,8.210404,-9.241798,-4.630333,-0.622729,-0.169834,3.770526,8.716329,-4.671710,8.198284,9.597374,4.603495,-2.143543,-6.572696,-6.138476,-7.522707,-3.791367,4.001463,3.563816,-1.444197,1.926711,6.951882,3.330094,-2.905317,7.255853,9.428942,-4.614240,-4.941846,9.780304,5.266126,4.844201,5.714962,3.166968,-2.268922,-7.907831,-4.541706,0.165477,-6.649733,-0.085431,-6.459993,-5.341030,-2.283021,-1.825116,-5.473656,3.033643,-6.128978,6.290485,-8.640667,-8.004427,7.372758,9.430211,0.796579,-0.979085,-0.236852,-7.738245,-9.071753,-8.693460,-9.251739,1.147800,-2.100203,-2.682940,4.735578,-7.602960,8.474894,5.795170,-3.929892,-9.486466,0.076479,9.608132,-1.241892,4.815980,3.989449,2.039289,-4.965057,-4.719775,-7.390128,6.936355,-0.720841,8.578299,9.701366,7.863829,-7.020638,0.894208,-7.156313,6.807093,-4.978579,3.183946,-6.569800,1.660700,0.476020,6.089892,9.262268,-1.790347,8.840251,7.017959,-7.056257,-1.818878,-3.450260,-1.474744,-6.501575,1.228259,-9.287736,-8.336659,-2.015669,-5.719457,1.263601,4.064523,-3.654548,4.395417,4.071103,-1.763058,8.955283,-6.695037,-9.474795,-8.455047,-0.537474,-8.859162,-3.470608,7.307331,-5.248766,-1.661699,-2.777414,-1.370509,4.476989,-7.513178,-3.520928,-1.454499,2.873684,-0.040133,-7.852625,-1.371691,-3.105272,7.251010,-0.992757,8.313994,-5.627380,-6.287762,9.165794,-1.729868,-7.700642,-4.836252,8.582933,-7.501594,0.906305,4.364768,0.194202,6.509808,-4.141610,-9.839107,9.357419,4.896806,-3.403578,-6.101223,9.078030,-2.122428,7.982007,-9.489486,-1.815771,4.824186,3.109537,6.072531,3.322739,1.976191,2.742739,-5.247358,2.572309,3.075808,5.121105,-4.141679,-9.830123,4.085323,8.424251,-1.819025,-2.484256,0.985007,-3.563238,3.368106,9.168786,6.826708,-3.071016,-0.500788,-7.654619,5.214547,7.121116,-6.379870,5.488047,-0.229457,8.139347,-0.006608,-8.773302,-5.669113,-9.376993,-9.841094,-8.049910,-2.797281,2.376388,-3.458275,-2.710177,-9.327731,2.623811,9.446352,-8.780019,2.516766,1.281864,3.765685,-8.574158,-4.218357,9.205971,-1.928493,1.226260,1.635991,5.754364,-8.407305,4.069912,-3.388286,2.868287,4.910943,8.311133,7.577287,-3.317680,-8.377606,-7.888196,8.399417,-0.601853,4.974568,4.162518,-8.938337,8.515401,-8.927566,0.976426,3.658271,0.101478,-0.477510,-1.512838,6.818199,0.924980,5.951119,-4.377244,8.621309,-3.931347,-1.551222,0.377778,9.197653,4.553907,-6.416131,-3.292490,0.086380,-6.028712,-4.908461,-4.016131,-5.081437,1.421582,8.468481,-4.123593,-4.303537,-0.301991,-9.417297,-4.412316,-5.701028,-4.407153,-4.626674,-6.426239,-3.763606,-9.095497,7.034619,-7.290246,-5.764777,5.879634,3.669260,-8.557714,1.144333,0.425011,8.320531,4.180613,8.790850,-1.882910,-0.107605,-6.408655,5.010971,9.530644,3.669127,-3.718304,9.523241,3.872767,-9.297189,6.091799,-0.799832,4.861636,-1.402142,6.038895,-1.341011,3.361719,0.313980,7.641375,-4.848025,2.893002,-5.544098,8.125441,-4.520331,9.550413,2.437878,-3.673792,8.387771,5.234172,-4.573983,3.077050,-7.889063,8.741342,-8.575872,-3.571451,4.096025,-1.839562,-3.603617,1.801268,8.213931,1.172081,0.726817,-8.652705,3.017542,-7.042139,2.786796,6.013574,5.283969,1.164725,5.728708,-6.717829,2.033854,4.935101,3.599908,-3.696312,3.945168,9.449197,0.655669,0.266158,4.200849,-5.851876,5.162491,-8.912065,-5.981866,1.533964,8.721644,-0.048494,-6.663210,-2.599748,8.576485,-2.052041,-3.560410,7.323105,-8.466272,2.474239,3.479509,-1.220878,7.107171,6.446644,-3.078603,3.506627,-5.313996,-5.585061,5.710137,-7.955871,-9.251249,6.847222,-4.041807,-3.295462,7.075891,-1.366925,-1.832632,-6.262471,3.352551,1.086994,-1.839699,-4.863894,5.725314,5.771427,2.985107,4.239319,2.206965,6.921684,5.756092,-6.395370,8.302420,1.902641,5.199895,5.768310,1.576973,-7.320298,1.448403,5.106506,9.941585,-1.102757,-9.937363,-6.559814,-0.103774,-4.944559,-3.179722,1.606336,3.249531,8.185016,-5.958060,-7.822684,4.377288,9.105514,4.139948,8.723758,1.908478,5.966547,5.591826,7.052379,5.329559,-3.760656,-1.995509,9.484075,-2.408047,-8.209626,0.260182,8.834560,0.773802,-1.382396,5.689565,-4.677329,2.876052,-8.168830,8.760731,-3.274177,5.849270,-8.663152,-1.457235,-5.654990,-8.730995,6.662856,6.827038,9.252631,0.133664,5.527234,8.348000,-2.275522,6.923001,-7.929943,-2.652184,-1.111802,8.704901,-1.453839,-0.918120,-8.121739,3.730900,8.283323,-3.421178,-9.379251,-6.631123,-0.878743,6.972484,-7.878015,-0.831551,9.625513,9.723704,-5.071116,7.957200,9.443693,1.377987,-3.880937,9.429890,6.410940,-5.145435,-5.764016,4.419234,8.677652,7.999480,-9.254037,-7.389383,-2.928664,2.079924,-7.096834,1.910492,-9.401984,8.068446,-6.256005,-2.508238,8.825970,0.282315,6.681433,-0.122316,8.588637,-2.055322,7.242559,2.686483,9.112028,6.951216,0.252658,7.353713,6.445524,9.173028,7.185764,-8.717526,-9.932814,-4.083887,-0.580895,-5.144535,-0.370261,0.763695,9.521467,-2.311772,6.428645,-7.664668,-6.421475,3.708926,3.490179,8.205969,-8.352771,4.730084,0.392863,2.727314,-5.413930,3.238144,-0.254651,2.816334,-0.943589,-2.434229,5.678879,-9.730847,-4.983896,1.603656,-2.496998,2.101544,-5.115529,-3.709008,-4.492079,-6.365844,0.805253,-5.876556,-5.498430,-8.143471,3.838312,4.239832,1.171364,-0.525723,9.263927,4.959859,7.236852,-1.664412,0.657382,5.145715,-8.223026,5.738681,-5.000974,-3.064280,8.574504,6.348683,1.640794,9.890233,-7.295601,4.959579,8.750658,-4.740869,6.794441,8.905926,0.890362,-1.007976,-5.076642,4.356101,5.964127,3.364202,-4.087411,6.012446,6.044959,5.169008,2.834660,2.201686,2.405013,0.045492,7.856199,-6.868366,2.767894,-7.665118,-7.993844,-8.585270,5.643468,-8.374312,-8.098775,-6.280896,-0.036423,-5.464833,-5.991759,-9.644477,0.441565,-4.786820,-8.379634,2.825481,5.063246,2.320841,8.461078,-5.300924,-8.350962,6.764866,-0.518798,-9.376114,1.174635,-9.625600,0.171112,0.451294,-0.069263,0.414096,-0.746522,3.952309,-1.638509,4.032710,-2.051441,9.464301,-3.909952,-5.687904,-2.179549,6.690146,9.250977,5.213508,9.818684,2.552354,-0.820367,-2.164201,4.616216,-5.600038,1.124790,2.226814,5.984213,-3.998277,8.065666,8.682302,9.882140,6.751881,-0.386365,5.981585,-3.296108,-4.563816,5.892532,2.644826,-9.898598,8.495209,-3.049423,0.529665,8.991064,3.475639,-2.295997,-7.401337,-4.777843,-0.168911,-8.790390,-7.918372,-6.523819,4.951041,3.644676,-0.085644,-1.813343,6.080559,5.574271,2.053528,-8.731290,7.422179,7.120225,7.799261,-6.508285,-8.301838,2.055405,2.596866,8.303631,-2.933785,0.337894,-6.933619,-0.432562,-6.103330,9.696450,-7.234738,6.729613,-8.105368,0.658323,-2.182130,-5.051838,-3.685797,8.024893,8.565972,-7.108104,6.839964,8.617458,2.315501,-1.157613,2.986657,6.821238,4.965624,8.315428,0.876176,6.684938,-1.997891,6.424122,-1.468600,-3.104466,6.577946,8.459585,0.955856,6.650513,-8.290994,-0.636082,3.060437,9.577296,-7.758994,-3.639012,5.519896,2.325640,5.513068,-5.047975,6.725128,-0.485181,2.138131,-1.567052,-5.218911,3.950102,5.224036,-9.002034,-0.359517,9.117976,-9.750260,-3.467565,-0.229374,-6.317544,-0.822661,5.606284,6.715315,8.129721,7.299707,7.380182,1.920168,-3.380927,0.637474,3.659659,-7.124918,-6.848123,-5.703709,-4.933819,8.109830,1.434752,1.421391,3.801743,-8.532337,7.098526,-3.919676,3.623329,7.165447,-9.624372,-4.288844,-4.108489,5.661968,1.515824,-8.602665,-8.584502,-9.469010,4.658985,-9.261498,9.838782,9.383665,-5.607372,0.452679,0.684459,2.319586,9.357241,3.288023,-6.370717,9.658745,2.737515,1.383765,5.053935,5.888648,4.418417,6.693764,-9.977793,9.787325,3.661873,-8.781100,3.165088,-6.489445,8.074489,3.571189,-5.039786,4.013449,-1.657844,4.573753,4.714522,-2.522795,-1.502270,1.341768,9.408370,2.112564,9.030343,9.969187,4.597833,-9.905512,-3.089205,-7.535436,-3.163879,-5.584158,-1.854313,-8.796464,-2.180421,-5.005516,-3.789294,9.031954,-1.861490,-7.046158,-9.563712,8.595725,-0.520023,-2.086455,5.988236,2.527990,-8.332413,-4.605518,-1.814093,-3.996971,1.286452,1.110530,-7.571718,3.326216,-4.284810,7.622596,-3.357810,-8.890134,-7.751279,0.485682,-9.264800,8.292487,-2.284183,0.373743,-9.687437,0.592560,2.566501,0.064350,5.113602,-0.421375,7.430386,-8.466503,-2.363050,-9.129385,6.905803,-0.454645,-4.145796,-9.909137,9.468581,6.046820,-8.989537,-5.871901,-1.748481,1.258945,-9.975383,1.679449,6.846614,5.759885,-8.370425,-7.096047,7.283647,4.332530,-0.620883,-7.589985,-1.488450,5.513541,-6.388424,-6.001343,-8.588535,-8.069206,7.696157,-2.078646,9.988239,3.264380,0.362419,3.161878,-0.527748,-3.884385,0.370311,4.486867,1.127503,-4.797072,-1.202467,-2.478683,-1.520023,2.698145,-7.236975,2.443971,-7.426336,8.074997,-8.975125,-2.390908,-0.634541,-6.761832,-0.081950,7.249748,-4.248024,5.417883,-1.867501,7.516040,2.040361,-1.591982,-8.982053,1.986061,-0.796718,-0.895454,-6.888514,-8.925723,-8.845451,-4.348144,-0.737906,-4.780387,2.294773,8.366876,0.604265,-5.739666,8.697209,-2.781772,-9.818417,-0.070300,-1.074569,-7.238151,-5.295437,3.554871,1.893461,6.195064,8.890374,-8.880448,6.212555,-5.661424,1.047839,2.765100,-3.334667,-4.380251,-1.248745,9.817931,-2.985378,8.333868,-6.870299,8.179445,-7.085098,5.952741,-7.555694,-3.001234,8.759183,-1.973532,7.174259,-4.739150,1.143221,8.380148,1.436262,-3.445344,-3.663242,-0.080992,5.580227,-0.973292,-4.816389,4.164999,3.032973,1.996512,1.562025,8.172093,1.202581,-6.648088,8.354034,-1.636109,-2.033426,-8.001733,-2.460882,-9.258874,-6.309729,6.828874,-8.745703,4.282242,-9.770418,4.902885,-2.166128,6.533006,-6.996324,-4.294315,0.484967,-2.956182,1.914433,-4.519722,-1.629797,8.353294,0.366374,1.972669,-3.188014,3.030536,9.678613,-9.312128,-5.508085,-0.921843,4.857396,-4.046842,8.904325,-8.455251,1.533765,7.143758,3.790042,-4.512272,1.889809,8.532577,-8.634084,3.205776,8.554390,9.299778,5.661068,-7.154287,-4.109750,8.148424,2.039193,-0.631221,-1.433858,-5.968215,3.214707,-7.253928,7.266697,-2.164065,-5.559439,7.333207,1.357502,8.904922,-1.365917,4.505923,-8.174722,8.732206,-5.211503,-7.193092,4.183341,8.357565,9.408529,7.846198,1.586493,-7.390358,6.181383,4.401724,-4.662646,5.592235,-8.193397,6.521130,9.736584,-8.379833,3.218002,-5.477006,-4.282802,8.446345,0.424745,-0.741444,-2.932665,7.157589,-7.928985,-1.427567,3.847887,-1.235145,-1.868970,0.474370,-9.187939,9.145858,-0.710446,-7.498909,3.516797,6.270162,-5.512809,3.516847,-5.085567,9.841046,3.385029,-1.184889,3.748995,-9.011574,-9.391579,-7.797719,-1.680747,-7.987117,4.156099,7.694022,-2.150455,-2.289941,-0.397342,2.095319,-7.277054,0.594193,-8.929295,-1.116377,-4.778639,1.449710,-6.131302,1.114045,-2.028640,-0.099398,-9.543998,-5.984836,-5.439282,-5.447004,4.888893,5.223188,-3.386087,1.844082,-0.034966,-0.284219,1.113644,-0.161438,9.369829,-6.613678,5.012656,-6.517688,-4.918114,7.905421,7.430356,1.991007,3.241726,-2.939465,0.879044,2.362703,6.238893,0.594300,5.148204,4.563005,0.243529,-2.903525,-6.860564,9.542055,-2.164759,3.346826,-2.984679,-7.227954,6.167129,0.509259,-4.950068,3.182425,-5.503186,-4.683942,-5.165806,7.168526,2.745989,-4.705637,-1.239041,-3.983118,-5.897231,-1.082797,-5.712248,2.948850,2.369514,0.620272,1.378797,2.225851,1.958589,9.490323,0.351044,6.081530,8.643301,-7.666112,3.434526,-4.390094,-6.736472,-8.238216,3.463365,3.534413,-3.299122,-7.572421,3.036639,-7.159433,-0.489183,-2.644810,-1.596527,-6.546492,7.487791,4.454187,-7.169057,4.029330,-4.730283,7.158818,3.841013,-2.284679,9.773398,9.750975,-7.726392,5.903054,3.678059,8.005542,-9.195898,3.890393,-7.308870,-1.584180,-4.749717,-2.191191,-6.660043,-1.397459,-7.214350,2.659125,-9.465109,-7.999657,-1.935566,5.552475,0.573719,7.365381,-2.940844,0.688565,2.994478,4.483348,5.832753,-9.712081,-1.158109], dtype = "float32")#candidate|4423|(1820,)|const|float32
call_4422 = relay.TupleGetItem(func_459_call(relay.reshape(const_4423.astype('float32'), [13, 14, 10])), 0)
call_4424 = relay.TupleGetItem(func_462_call(relay.reshape(const_4423.astype('float32'), [13, 14, 10])), 0)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_4440 = relay.TupleGetItem(func_3657_call(relay.reshape(const_4358.astype('int8'), [336,])), 2)
call_4441 = relay.TupleGetItem(func_3659_call(relay.reshape(const_4358.astype('int8'), [336,])), 2)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_4459 = relay.TupleGetItem(func_3657_call(relay.reshape(var_4357.astype('int8'), [336,])), 2)
call_4460 = relay.TupleGetItem(func_3659_call(relay.reshape(var_4357.astype('int8'), [336,])), 2)
output = relay.Tuple([bop_4359,call_4362,call_4384,call_4390,call_4392,call_4422,const_4423,call_4440,call_4459,])
output2 = relay.Tuple([bop_4359,call_4363,call_4385,call_4391,call_4393,call_4424,const_4423,call_4441,call_4460,])
func_4462 = relay.Function([var_4357,], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
var_4463 = relay.var("var_4463", dtype = "int8", shape = (7, 12, 4))#candidate|4463|(7, 12, 4)|var|int8
output = func_4462(var_4463)
func_4464 = relay.Function([var_4463], output)
mutated_mod['func_4464'] = func_4464
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4466 = relay.constdtype = "float32")#candidate|4466|(8, 15, 16)|const|float32
uop_4467 = relay.tan(const_4466.astype('float32')) # shape=(8, 15, 16)
uop_4476 = relay.asin(uop_4467.astype('float32')) # shape=(8, 15, 16)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_4482 = relay.TupleGetItem(func_2637_call(), 1)
call_4483 = relay.TupleGetItem(func_2638_call(), 1)
output = relay.Tuple([uop_4476,call_4482,])
output2 = relay.Tuple([uop_4476,call_4483,])
func_4491 = relay.Function([], output)
mod['func_4491'] = func_4491
mod = relay.transform.InferType()(mod)
output = func_4491()
func_4492 = relay.Function([], output)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4501 = relay.TupleGetItem(func_3327_call(), 0)
call_4502 = relay.TupleGetItem(func_3329_call(), 0)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_4515 = relay.TupleGetItem(func_2049_call(), 1)
call_4516 = relay.TupleGetItem(func_2050_call(), 1)
func_3822_call = mod.get_global_var('func_3822')
func_3824_call = mutated_mod.get_global_var('func_3824')
call_4517 = func_3822_call()
call_4518 = func_3822_call()
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4526 = func_4120_call()
call_4527 = func_4120_call()
output = relay.Tuple([call_4501,call_4515,call_4517,call_4526,])
output2 = relay.Tuple([call_4502,call_4516,call_4518,call_4527,])
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mutated_mod.get_global_var('func_4535')
call_4536 = func_4535_call()
output = call_4536
func_4537 = relay.Function([], output)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4552 = relay.TupleGetItem(func_3327_call(), 0)
call_4553 = relay.TupleGetItem(func_3329_call(), 0)
func_3913_call = mod.get_global_var('func_3913')
func_3915_call = mutated_mod.get_global_var('func_3915')
const_4575 = relay.const([7.561565,7.429795,9.776061,1.756687,-9.522411,-5.961421,-6.412473,-6.637950,-9.707169,-8.724470,4.135779,3.781250,-8.999896,4.829186,-3.257095,-7.672669,0.775842,-8.136964,-3.919475,-6.655530,-1.281654,1.882581,6.331211,-3.924239,9.172992,-4.423280,-1.098112,-4.826547,5.467496,-1.706855,-9.275507,1.123350,-4.204662,-9.333593,-9.705746,4.803443,7.872531,0.918987,7.339506,-4.365882,-5.502737,2.984411,-1.307184,-1.893433,-5.368435,4.414775,1.485872,-6.748964,-3.949329,-3.224475,0.924626,0.474111,-8.724683,-8.380672,5.899862,7.263603,8.276472,-3.995689,-8.995994,7.947618,3.486994,2.937203,-7.402871,-1.822238,-7.129721,9.561373,-4.450221,-6.979132,7.380080,-0.683329,2.027426,3.668561,7.808891,-6.072269,-2.253131,-2.889982,-7.422732,-9.495973,7.375839,-0.493480,-3.094756,3.126639,-6.850207,2.628650,-4.511686,-9.262850,9.955357,-8.725501,1.344083,6.816396,7.754890,8.262328,5.682767,-6.054006,-1.663770,5.484930,-3.056701,-5.112779,-9.677673,-2.371758,9.506769,9.644864,-8.987654,6.517058,-8.369825,8.052544,-1.684939,-0.280195,7.179641,-3.393159,2.977618,-3.651910,4.009642,-3.270595,-0.940548,-9.792217,-7.182404,8.372256,-8.651829,-6.560023,3.733281,-5.356147,2.816345,0.439491,3.070013,-4.359799,7.707906,-8.376791,9.546713,9.828719,5.868587,-7.041185,5.108841,9.350942,-0.915223,-1.006299,2.960862,-8.414099,3.277492,8.025303,0.383402,4.219662,-5.821134,6.496824,7.827890,-2.707536,8.728414,-9.791131,-2.472346,-9.612556,9.942813,-5.869056,3.101233,0.060473], dtype = "float64")#candidate|4575|(154,)|const|float64
call_4574 = func_3913_call(relay.reshape(const_4575.astype('float64'), [2, 7, 11]))
call_4576 = func_3913_call(relay.reshape(const_4575.astype('float64'), [2, 7, 11]))
bop_4588 = relay.greater(call_4574.astype('bool'), relay.reshape(const_4575.astype('bool'), relay.shape_of(call_4574))) # shape=(2, 7, 11)
bop_4591 = relay.greater(call_4576.astype('bool'), relay.reshape(const_4575.astype('bool'), relay.shape_of(call_4576))) # shape=(2, 7, 11)
bop_4601 = relay.floor_divide(call_4574.astype('float32'), relay.reshape(const_4575.astype('float32'), relay.shape_of(call_4574))) # shape=(2, 7, 11)
bop_4604 = relay.floor_divide(call_4576.astype('float32'), relay.reshape(const_4575.astype('float32'), relay.shape_of(call_4576))) # shape=(2, 7, 11)
func_3752_call = mod.get_global_var('func_3752')
func_3754_call = mutated_mod.get_global_var('func_3754')
call_4618 = relay.TupleGetItem(func_3752_call(), 1)
call_4619 = relay.TupleGetItem(func_3754_call(), 1)
output = relay.Tuple([call_4552,bop_4588,bop_4601,call_4618,])
output2 = relay.Tuple([call_4553,bop_4591,bop_4604,call_4619,])
func_4620 = relay.Function([], output)
mod['func_4620'] = func_4620
mod = relay.transform.InferType()(mod)
mutated_mod['func_4620'] = func_4620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4620_call = mutated_mod.get_global_var('func_4620')
call_4621 = func_4620_call()
output = call_4621
func_4622 = relay.Function([], output)
mutated_mod['func_4622'] = func_4622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4680 = func_4120_call()
call_4681 = func_4120_call()
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4710 = relay.TupleGetItem(func_3327_call(), 0)
call_4711 = relay.TupleGetItem(func_3329_call(), 0)
func_4313_call = mod.get_global_var('func_4313')
func_4317_call = mutated_mod.get_global_var('func_4317')
const_4717 = relay.const([-7.577128,7.684706,-2.989973,-2.718845,9.170452,4.655323,-0.016626,9.574020,1.050447,-3.735942,-9.627565,-7.035672,2.845503,4.021353,-0.543386,-2.259110,0.370790,7.982109,-3.729688,-4.310259,1.741642,-8.355898,3.713413,-0.602565,1.134605,-7.099593,5.732540,1.366289,8.190002,5.308730,-4.495197,-3.422889,7.018419,4.408272,2.586444,7.554210,8.020659,0.785393,3.110580,4.866977,-4.502815,-6.865325,-2.511758,-1.926832,-0.490848,-3.931261,4.452854,-0.620661,-9.790650,-8.532930,-1.987892,-0.930164,-0.698607,-6.259520,-1.836130,-3.114388,7.132458,-3.535225,-3.605330,-8.058932,7.166522,5.710810,9.839638,8.296105,8.012691,-9.099582,-0.015024,-2.598589,-0.856148,-9.329649,-7.367092,5.666287,-6.919445,-8.565286,-3.900587,9.586307,8.234684,-6.238847,5.809302,-0.042192,-9.421041,-2.247116,5.670718,8.126104,7.842649,-6.152818,-9.514498,-8.603010,-7.672784,-3.363147,1.733786,-7.566691,-2.643283,2.417923,-7.874824,4.558354,-0.384176,3.645743,-5.293869,6.580813,3.958459,1.112066,9.824679,-7.209054,-8.265122,-7.452004,-3.915717,-5.224674,-6.414517,-0.683072,9.836892,5.824238,3.359795,-7.220017,7.277412,-3.785623,7.910785,-7.027844,0.201749,-6.693554,0.367474,6.534029,5.736605,2.563950,7.067653,3.484998,5.026310,9.856680,3.453461,-5.533563,3.907685,7.754699,-1.469062,-2.393355,-4.971837,-9.201825,9.390799,-9.025712,5.984475,-9.335904,1.938635,-9.353034,-5.946431,-5.297349,7.210321,-7.374533,2.602214,1.605147,-4.722307,6.092514,7.777225,-3.686324,0.263784,1.529138,-2.118171,4.165431,8.557234,-1.450944,9.186791,-9.325983,3.705533,-1.046180,-2.259314,8.581655,1.460027,-8.990021,-1.915374,3.394956,9.957768,-4.554736,2.515711,0.835247,5.017936,-7.787119,-3.469504,1.915729,-0.403013,-6.750812,-3.981876,1.496810,-3.916325,-8.885812,-2.728884,-4.565617,-8.792623,-7.713328,2.489333,6.723998,6.571211,9.841861,-6.188124,-6.570752,-0.583095,5.862652,-5.997853,-9.946114,-8.287235,3.946967,2.436454,-5.882234,-0.287560,4.372061,4.101541,0.540702,-4.126444,-0.866434,9.159055,3.145780,-2.668562,-8.066044,3.549282,4.149259,1.213874,4.016745,4.774772,6.534945,-5.457675,2.000587,9.917586,-3.464094,5.838184,-2.860532,0.850471,0.350393,-2.906664,-6.955221,-0.912351,-8.263624,-7.840300,-6.066364,9.890287,-9.541346,-9.065659,5.243395,-5.575926,-6.729875,8.616576,-8.020034,-6.179347,-1.001771,-0.163936,9.080865,-4.929946,-0.058568,2.384087,-7.669548,-3.046674,-7.347971,-9.823774,-5.543101,9.166711,2.577558,7.283681,-1.586856,3.594169,2.155867,4.257658,-9.024055,-1.409030,5.974115,-7.404161,-9.387810,-7.252597,6.580812,8.838433,5.595976,-2.446532,1.622308,-2.642993,-1.175410,-8.267137,0.716422,-6.437667,1.573622,3.077059,-7.408281,0.125146,-5.296440,7.706647,-1.297750,-0.169328,3.079445,-6.465273,-2.463301,-6.043632,-3.803208,-1.563920,0.340317,-0.343821,2.705634,6.635730,5.593484,1.868456,-3.436657,7.402591,3.190349,-1.640605,0.586578,4.709716,3.329523,-9.727875,-7.413773,-4.476938,7.830239,-5.773398,-0.580371,-8.248242,-8.200459,0.981205,-0.023584,-8.915733,-4.242976,-2.687086,0.967591,-9.435051,-0.710112,1.623844,2.753484,-3.194392,-9.735391], dtype = "float64")#candidate|4717|(320,)|const|float64
var_4718 = relay.var("var_4718", dtype = "int32", shape = ())#candidate|4718|()|var|int32
call_4716 = relay.TupleGetItem(func_4313_call(relay.reshape(const_4717.astype('float64'), [10, 8, 4]), relay.reshape(var_4718.astype('int32'), []), ), 2)
call_4719 = relay.TupleGetItem(func_4317_call(relay.reshape(const_4717.astype('float64'), [10, 8, 4]), relay.reshape(var_4718.astype('int32'), []), ), 2)
output = relay.Tuple([call_4680,call_4710,call_4716,const_4717,var_4718,])
output2 = relay.Tuple([call_4681,call_4711,call_4719,const_4717,var_4718,])
func_4721 = relay.Function([var_4718,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
var_4722 = relay.var("var_4722", dtype = "int32", shape = ())#candidate|4722|()|var|int32
output = func_4721(var_4722)
func_4723 = relay.Function([var_4722], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_4754 = func_3757_call()
call_4755 = func_3757_call()
func_3913_call = mod.get_global_var('func_3913')
func_3915_call = mutated_mod.get_global_var('func_3915')
const_4762 = relay.const([[-3.937169],[-8.752609],[8.957807],[-1.986335],[-8.812101],[4.993900],[-2.763542],[3.515255],[-0.615358],[5.652416],[8.037518],[-0.983261],[9.006891],[-5.277472],[8.641053],[5.157324],[-3.261612],[2.200686],[0.779929],[-6.350769],[5.579491],[4.803913],[7.412958],[-2.839006],[-8.080607],[-8.861692],[9.702320],[7.856456],[-1.057811],[-0.691799],[-2.644324],[3.851245],[3.294141],[2.692685],[-3.035320],[-9.250735],[0.682606],[8.352412],[-3.469805],[-3.041542],[-1.253238],[7.176935],[7.567094],[-9.836863],[-9.998287],[-1.150077],[-5.162844],[7.404981],[-1.191075],[-8.265202],[-7.551481],[-6.696452],[8.862932],[-9.497162],[-3.338192],[-3.036879],[5.453514],[-3.478624],[-5.636972],[2.412522],[3.812281],[-7.685733],[3.631544],[4.219967],[-2.826233],[2.775653],[-3.844298],[-7.064564],[2.200609],[-7.911783],[7.540721],[-3.578958],[-2.311913],[-5.687967],[2.112308],[9.075983],[5.146883],[-4.110537],[7.669250],[-4.278124],[-1.296823],[-4.065442],[2.428378],[-8.019378],[-4.571846],[-0.450659],[3.351570],[-4.640747],[3.890227],[1.808547],[-5.926543],[3.588133],[-4.199028],[0.088026],[5.224666],[9.796111],[2.051918],[0.881452],[-3.123017],[0.795225],[-2.595475],[-2.652357],[6.448402],[7.585650],[1.286866],[5.669190],[5.430555],[8.268637],[7.626634],[5.295611],[-5.499690],[-3.892981],[-5.566543],[9.963776],[5.222116],[6.192228],[-4.710388],[2.686955],[4.969040],[8.850040],[7.523022],[-1.792456],[8.870141],[-5.219000],[-9.518001],[-8.654519],[-6.584980],[-6.285761],[-4.077996],[0.119661],[5.505963],[1.205565],[7.951860],[4.717307],[8.507922],[5.219161],[8.538342],[1.984816],[-3.238487],[3.490854],[7.557298],[2.108776],[-6.326621],[-3.564430],[4.903307],[-1.850678],[6.486954],[5.722196],[9.603496],[4.070842],[0.449077],[2.288182],[-1.764808],[4.139910]], dtype = "float64")#candidate|4762|(154, 1)|const|float64
call_4761 = func_3913_call(relay.reshape(const_4762.astype('float64'), [2, 7, 11]))
call_4763 = func_3913_call(relay.reshape(const_4762.astype('float64'), [2, 7, 11]))
output = relay.Tuple([call_4754,call_4761,const_4762,])
output2 = relay.Tuple([call_4755,call_4763,const_4762,])
func_4765 = relay.Function([], output)
mod['func_4765'] = func_4765
mod = relay.transform.InferType()(mod)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mutated_mod.get_global_var('func_4765')
call_4766 = func_4765_call()
output = call_4766
func_4767 = relay.Function([], output)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_4827 = relay.TupleGetItem(func_2559_call(), 0)
call_4828 = relay.TupleGetItem(func_2561_call(), 0)
output = call_4827
output2 = call_4828
func_4831 = relay.Function([], output)
mod['func_4831'] = func_4831
mod = relay.transform.InferType()(mod)
output = func_4831()
func_4832 = relay.Function([], output)
mutated_mod['func_4832'] = func_4832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mod.get_global_var('func_3068')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_4862 = relay.TupleGetItem(func_3068_call(), 1)
call_4863 = relay.TupleGetItem(func_3070_call(), 1)
output = relay.Tuple([call_4862,])
output2 = relay.Tuple([call_4863,])
func_4883 = relay.Function([], output)
mod['func_4883'] = func_4883
mod = relay.transform.InferType()(mod)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4883_call = mutated_mod.get_global_var('func_4883')
call_4884 = func_4883_call()
output = call_4884
func_4885 = relay.Function([], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4897 = relay.const([[[-3.134486,-0.726188,-7.379571,2.422254,0.964480,-8.381337,-8.932222,7.209001,9.742296,3.774547,-6.955810,-3.536688,3.758329,8.065152],[5.169894,7.480326,0.142285,0.950059,-0.026584,-5.357706,-5.545404,-3.136530,9.759029,0.165512,7.959767,0.139478,1.029296,-8.709480],[0.484327,-8.785462,-8.725163,6.831341,9.532665,4.007988,6.165154,2.258839,2.807427,-3.427809,-4.517221,6.578567,3.717994,3.871647],[-7.730992,9.998587,6.046137,-4.931579,5.566023,-7.985260,-3.472029,-7.596830,5.980262,9.573748,5.329396,-7.949065,-7.154598,-7.542735],[-5.146326,-5.916703,8.269312,-6.226186,3.396543,-8.621844,-9.945639,7.786188,-5.586570,4.455439,-3.473260,-1.266393,-7.164643,2.689900],[-3.895311,-6.573163,8.765773,-9.778564,0.534602,-5.436052,4.377612,4.206576,4.969021,3.383411,8.101963,7.791740,9.891070,1.901041],[-2.505674,-8.411014,-3.544169,7.778887,7.099342,-6.280266,2.875023,4.933643,5.209435,-8.382845,-5.901163,1.369215,-6.653222,8.529691],[-2.561407,-7.344328,3.816244,-5.452345,4.056626,6.107693,5.576381,0.237908,-2.678614,9.559917,-7.160395,-0.130166,8.676374,-3.501808],[3.838868,-0.626498,-5.501644,-2.449643,8.571131,-6.164225,9.262496,-5.143800,8.722470,5.026220,-4.643820,-0.389056,-7.252140,7.226592]]], dtype = "float32")#candidate|4897|(1, 9, 14)|const|float32
var_4898 = relay.var("var_4898", dtype = "float32", shape = (12, 9, 14))#candidate|4898|(12, 9, 14)|var|float32
bop_4899 = relay.less(const_4897.astype('bool'), var_4898.astype('bool')) # shape=(12, 9, 14)
func_1767_call = mod.get_global_var('func_1767')
func_1771_call = mutated_mod.get_global_var('func_1771')
var_4903 = relay.var("var_4903", dtype = "float32", shape = (315,))#candidate|4903|(315,)|var|float32
var_4904 = relay.var("var_4904", dtype = "int32", shape = ())#candidate|4904|()|var|int32
call_4902 = relay.TupleGetItem(func_1767_call(relay.reshape(var_4903.astype('float32'), [3, 7, 15]), relay.reshape(var_4904.astype('int32'), []), ), 2)
call_4905 = relay.TupleGetItem(func_1771_call(relay.reshape(var_4903.astype('float32'), [3, 7, 15]), relay.reshape(var_4904.astype('int32'), []), ), 2)
output = relay.Tuple([bop_4899,call_4902,var_4903,var_4904,])
output2 = relay.Tuple([bop_4899,call_4905,var_4903,var_4904,])
func_4906 = relay.Function([var_4898,var_4903,var_4904,], output)
mod['func_4906'] = func_4906
mod = relay.transform.InferType()(mod)
var_4907 = relay.var("var_4907", dtype = "float32", shape = (12, 9, 14))#candidate|4907|(12, 9, 14)|var|float32
var_4908 = relay.var("var_4908", dtype = "float32", shape = (315,))#candidate|4908|(315,)|var|float32
var_4909 = relay.var("var_4909", dtype = "int32", shape = ())#candidate|4909|()|var|int32
output = func_4906(var_4907,var_4908,var_4909,)
func_4910 = relay.Function([var_4907,var_4908,var_4909,], output)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_4930 = func_2193_call()
call_4931 = func_2193_call()
output = call_4930
output2 = call_4931
func_4940 = relay.Function([], output)
mod['func_4940'] = func_4940
mod = relay.transform.InferType()(mod)
mutated_mod['func_4940'] = func_4940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mutated_mod.get_global_var('func_4940')
call_4941 = func_4940_call()
output = call_4941
func_4942 = relay.Function([], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4963 = relay.var("var_4963", dtype = "int32", shape = (14, 11, 14))#candidate|4963|(14, 11, 14)|var|int32
const_4964 = relay.const([[[3,5,10,-2,-5,5,6,4,-10,-8,10,-3,-10,-6],[1,6,-9,4,7,4,-10,6,7,-4,8,1,5,-8],[2,7,-2,-5,-4,-2,-6,-4,5,2,1,-8,-7,-6],[-4,-9,-8,10,-9,-1,-6,3,9,-8,-7,-4,-8,9],[3,2,-2,6,7,-10,-2,7,-3,-10,8,-7,-2,-7],[-5,-8,4,8,10,5,-9,-4,-7,-9,-3,-5,8,-10],[-4,1,-3,-10,8,10,3,5,-4,2,-2,-4,-1,8],[4,2,-2,9,-3,-2,-8,-8,10,4,-2,7,-9,-9],[-3,-4,2,5,10,-1,3,-3,-6,4,4,-1,-6,2],[-9,-10,7,-9,9,-5,8,-1,1,-3,-4,-4,5,-7],[-4,-8,10,-7,-1,6,-10,10,-8,6,4,-6,-6,-9]],[[8,6,6,6,4,-1,-2,7,-9,-8,8,6,-5,2],[-5,-4,8,-6,4,10,-9,-4,-9,1,-8,5,-4,9],[5,3,-4,-4,9,-7,-6,-2,10,-4,-5,-7,5,-8],[-4,8,-10,-1,10,-7,9,-3,-2,8,8,-1,6,-7],[-9,-9,4,2,10,8,-3,10,-2,-7,-5,8,-6,8],[6,-4,-10,10,10,-10,7,2,-3,-6,-5,-9,9,-4],[8,-8,7,1,-4,-3,-3,7,-9,2,3,-8,10,-7],[-7,-3,-4,9,-4,9,9,4,-3,4,2,-5,-3,-1],[10,-3,10,-4,-10,6,-3,-1,4,-6,8,8,-5,5],[6,4,-6,5,-4,2,1,-7,-2,-9,-6,5,5,4],[-8,10,4,10,-3,-8,5,1,8,10,-6,8,6,-6]],[[7,-2,8,9,-8,-2,5,7,9,-5,8,9,-6,8],[8,-4,-5,-2,-10,4,9,10,5,-3,7,-1,3,1],[-7,-5,4,-2,6,1,-2,-6,9,4,-5,-8,2,9],[1,9,10,3,-1,-2,-8,7,-8,-2,8,10,-2,8],[-10,-1,7,-9,4,-3,-6,4,-10,7,-3,-4,4,6],[4,1,-9,7,2,6,-7,-1,-6,8,-5,3,-5,-10],[-2,-6,-10,-4,-7,6,-4,-5,1,-3,-10,-2,-7,4],[-1,10,3,-4,3,2,7,-1,-10,4,-4,-8,-2,-1],[5,-1,-2,-4,9,7,-3,3,-7,-3,-3,-2,-7,-1],[-1,8,-10,6,1,6,-7,-3,-4,-2,-3,9,3,-2],[2,-9,-8,2,-5,-1,-10,6,1,-8,6,-5,-7,6]],[[8,2,5,-4,8,2,-6,-10,9,-6,5,-5,-5,1],[-7,-6,7,6,1,7,-9,3,-2,-4,8,3,-3,6],[1,2,6,-4,5,-7,1,6,-2,5,-1,-5,8,-4],[-6,-9,-8,8,8,-9,1,7,-9,-4,-1,5,8,3],[-7,7,7,-4,-6,1,4,4,5,1,-6,4,-2,1],[10,5,3,5,-7,-7,1,6,-7,3,4,5,-7,-9],[-8,10,-6,-5,7,9,9,7,-3,5,3,-1,10,-9],[4,5,-8,-10,-9,3,5,2,-9,3,-1,-3,6,3],[9,2,-2,5,-1,-6,10,-10,3,-10,-8,6,3,6],[-5,-3,1,-8,-4,4,-8,10,10,-6,10,7,10,9],[-5,3,4,-6,3,9,-9,-3,-3,-8,2,8,-9,-2]],[[-10,-2,-6,7,-1,8,-9,1,9,-8,8,-5,-9,10],[8,6,-3,-3,5,2,4,-2,-6,-4,9,-9,-7,5],[7,-5,9,3,2,-4,7,-3,-5,-4,7,6,-10,-3],[1,-5,5,-5,1,-8,-5,2,-8,3,-1,4,4,4],[-5,1,4,6,5,-6,1,-1,-8,-8,-9,10,7,10],[6,-5,2,8,-1,-7,-6,-3,9,-1,9,3,-2,10],[9,-1,5,-5,-10,-4,7,-7,4,-8,-4,-8,-2,-10],[8,-4,-1,1,10,2,-10,3,6,8,10,3,-7,-6],[3,-3,-10,-7,1,5,-5,3,5,-3,-6,3,9,1],[-6,-6,6,8,-6,5,3,9,8,3,10,4,-9,3],[2,7,-10,5,-10,-10,-7,4,-6,10,-6,7,1,3]],[[8,-1,7,-6,-8,-5,-5,-7,-1,-6,5,-10,1,9],[9,-3,8,-7,1,-4,-6,1,5,8,10,-10,8,-8],[-7,2,-10,3,10,-3,-5,1,-7,5,-10,-7,-4,5],[-8,2,1,1,10,9,4,-10,2,-10,-4,10,-9,4],[7,7,4,3,5,9,8,5,2,10,-7,-3,-7,-6],[-4,-2,-2,6,-10,3,3,-3,2,2,5,9,2,4],[-9,-8,3,-3,8,-2,10,-8,-9,-3,-2,8,7,-9],[1,10,6,-4,9,3,-9,-10,2,4,-10,4,-2,-9],[-10,-7,4,5,-9,-8,-6,-8,7,6,7,-1,-6,8],[7,-4,6,2,-1,9,-5,8,9,8,5,7,3,8],[-5,7,4,1,-7,9,1,7,6,-7,5,-2,9,-2]],[[-7,4,-1,-4,-6,-4,-9,10,2,3,-5,2,6,-10],[-1,-7,-7,8,6,2,6,-3,-10,4,2,-9,-8,7],[-4,8,1,4,10,5,-4,6,-4,7,-3,7,8,4],[-8,-1,8,-8,7,-7,3,-1,-9,-9,7,9,6,-7],[4,2,2,4,3,1,1,-6,-9,1,5,3,7,2],[-9,-10,2,-5,-5,6,-1,7,4,6,2,3,9,-9],[-9,-2,2,1,3,-8,-7,6,1,9,9,-9,7,8],[8,-4,8,3,-7,-4,2,-1,-8,6,10,-3,5,2],[3,-7,5,8,-9,-3,-5,1,1,-6,-8,-8,-10,-9],[-4,6,-1,8,8,9,-7,6,-3,1,8,5,-2,4],[6,8,4,-9,8,-1,3,4,6,4,-6,3,2,9]],[[1,-7,-7,-6,8,-6,-3,3,-8,-8,6,4,-6,-7],[5,4,7,4,6,-5,-7,3,9,-8,2,3,-7,-1],[6,-3,3,-10,1,-6,-3,-3,3,10,1,-1,3,2],[-3,-5,2,3,-7,6,4,-7,5,7,8,-2,-5,-6],[8,-10,-3,-1,7,8,4,4,-8,-5,4,2,9,-5],[-6,-7,-8,-5,-6,-6,8,-6,10,10,-2,-2,9,8],[-8,6,-1,6,10,2,8,6,4,8,-2,3,-5,10],[-8,4,9,-8,1,-4,7,-8,6,1,-7,-3,9,-3],[-2,10,9,-6,4,-3,-1,-9,-4,5,10,-9,7,6],[-9,-4,-1,-1,-10,1,2,-10,-2,1,-3,-4,-2,-10],[7,9,-2,-7,7,3,6,9,9,-8,8,7,-6,4]],[[5,1,9,-8,-10,6,-2,3,5,5,-3,7,4,3],[-4,-10,-1,9,-8,3,-1,-5,9,2,-10,-10,-1,2],[-8,3,-2,-10,-3,-6,-7,1,9,-2,2,2,2,6],[-6,7,5,-7,5,1,8,1,8,5,5,-6,3,2],[-10,7,7,2,-5,9,8,-10,-9,2,-2,-5,-4,6],[8,3,6,-6,5,5,8,-2,3,-1,-2,10,-9,2],[5,-1,8,1,-3,7,4,7,-5,8,-8,2,3,-5],[6,-6,-7,-6,-10,-9,3,-10,-9,10,-4,1,7,-6],[-7,3,-8,6,7,-8,-6,-9,-4,-9,3,-6,8,-3],[-3,7,7,3,10,-1,-9,3,8,6,8,7,-5,-10],[-10,-1,-9,-3,10,-4,-3,-7,-7,-10,10,-9,3,10]],[[6,-4,3,9,4,10,8,-6,2,5,-4,4,-5,4],[6,-10,6,-1,9,-2,-4,7,-8,-4,6,10,8,-6],[7,-3,-6,9,4,2,2,6,-6,-9,-8,7,-6,-4],[2,-7,1,-4,-2,-8,3,-10,4,2,-1,-6,-5,2],[1,6,-7,-2,3,-5,7,1,-3,-4,7,7,-6,-4],[8,-2,2,-2,-3,9,-8,-2,8,-6,4,-2,-7,-10],[3,-6,2,8,8,-4,4,-8,8,9,5,10,9,-2],[-10,1,-8,2,7,-5,2,9,-3,-8,6,10,5,1],[-2,2,7,5,2,-7,-9,-7,2,-7,-10,-9,-2,-10],[-6,3,-7,-10,-8,-2,-4,9,-1,-4,-2,-1,6,1],[-6,-7,3,2,2,-4,9,-1,5,4,-8,-1,1,-3]],[[10,5,4,-10,-1,-4,-6,-5,4,-8,8,5,2,4],[-7,-10,-10,5,-8,-10,-7,2,-5,-8,3,-8,-8,4],[-10,-5,7,6,-10,-3,5,-7,-10,-8,6,-3,-4,9],[-5,-3,-5,-4,4,2,-2,-2,10,1,-8,4,5,-4],[-8,2,-8,-10,3,-5,-5,-1,-4,6,-4,-2,6,-8],[-3,1,-5,-7,-5,-6,-1,7,2,5,-3,-9,-7,-1],[9,3,4,-3,6,6,7,2,-4,5,7,1,-10,10],[3,8,3,-4,-7,9,-7,5,-6,-1,3,8,6,3],[2,-3,5,7,-5,6,-9,3,10,9,4,8,-6,9],[-8,7,-4,-6,-2,-6,3,-8,8,8,9,6,7,-1],[2,2,2,9,2,4,8,10,3,6,9,-9,-3,-10]],[[-9,-1,10,-1,5,-8,-7,10,2,1,-7,-9,4,5],[-3,6,-5,-4,-2,-5,7,3,-6,3,4,5,4,-10],[-2,-6,7,6,8,-6,5,7,-3,-9,-5,8,8,-1],[-7,-1,-3,3,-8,3,-9,6,10,-9,6,-3,10,-10],[-5,1,1,1,8,5,3,3,9,-9,5,-4,-3,3],[8,-2,-4,5,6,9,-9,1,6,-5,5,6,9,-2],[8,-8,7,-9,4,4,9,-5,10,2,1,-3,-9,-6],[-10,3,-4,-4,10,1,9,-3,1,-9,-3,8,-6,10],[-1,-8,-5,-7,-1,-9,6,6,-5,6,-6,-8,-5,4],[-9,-9,-3,9,7,8,-9,-10,6,2,4,9,2,10],[4,-9,10,-3,-6,-10,10,-2,4,-6,7,-2,-6,2]],[[6,5,7,5,1,-8,-2,-9,-6,-3,-2,-9,-9,-1],[-1,2,4,9,1,-9,-2,1,-7,8,1,6,-2,-4],[7,7,6,-3,-9,4,-6,6,1,-4,8,-4,5,4],[-6,-10,4,10,9,2,8,9,10,4,3,-2,1,-1],[7,-6,6,7,-3,1,10,1,-9,2,8,-1,-7,1],[8,-6,1,-7,6,-6,10,-1,1,8,4,9,7,10],[-10,4,7,2,-10,5,-4,-6,-10,-3,-1,-1,3,7],[-10,4,10,-8,7,-4,-1,-4,-10,9,7,1,5,3],[3,-7,-6,1,-8,4,-10,-4,-7,-8,-9,9,9,4],[-3,1,8,7,9,-2,8,4,-4,1,-7,10,-3,1],[-8,-5,3,-5,2,-5,-9,-9,4,-4,-2,-2,3,-4]],[[-9,-8,10,-6,-9,-4,-2,-3,-5,-9,-6,9,-8,-8],[1,7,8,6,1,3,-4,5,7,8,-2,2,10,7],[-10,-10,8,-2,-5,4,-4,-7,5,6,-2,3,3,-2],[-5,-2,-4,8,2,-8,-2,-4,-1,-5,-7,-6,9,-10],[3,5,1,-4,10,6,-4,10,9,2,-8,-4,-10,-1],[10,-1,-3,2,2,8,-8,5,-9,7,10,7,6,3],[2,9,7,-6,6,6,-1,-1,9,2,2,7,9,-2],[-5,-3,10,10,1,10,3,-5,-10,-3,4,-10,-5,8],[3,8,-4,-7,-4,2,5,5,9,2,6,-10,-3,7],[-7,1,-5,-10,-4,3,-5,5,8,6,10,7,-3,6],[-7,-3,8,-6,5,-1,-2,8,9,5,-3,-3,9,1]]], dtype = "int32")#candidate|4964|(14, 11, 14)|const|int32
bop_4965 = relay.bitwise_and(var_4963.astype('int32'), relay.reshape(const_4964.astype('int32'), relay.shape_of(var_4963))) # shape=(14, 11, 14)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4968 = relay.TupleGetItem(func_3327_call(), 0)
call_4969 = relay.TupleGetItem(func_3329_call(), 0)
func_4220_call = mod.get_global_var('func_4220')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4982 = relay.TupleGetItem(func_4220_call(), 0)
call_4983 = relay.TupleGetItem(func_4221_call(), 0)
func_2773_call = mod.get_global_var('func_2773')
func_2776_call = mutated_mod.get_global_var('func_2776')
const_4989 = relay.const([8.607221,6.049137,4.027102,0.059803,7.362050,-9.098202,3.833184,-8.965657,-1.741070,-3.161070,8.737052,0.690169,-2.722408,-0.518383,9.599494,4.598104,-9.409167,-3.043578,1.063525,9.019575,-9.608858,9.619842,-1.504365,-4.185961,-4.123770,-2.970703,2.105899,-5.692219,4.872575,-4.419831,-0.468810,-9.174705,-6.886409,-7.196663,-6.916067,-8.811872,5.874300,-5.689979,4.367196,-0.915994,-4.386344,8.571346,-3.874803,1.382041,-7.558685,-6.200596,5.069174,5.466771,5.142550,2.669168,1.634518,-1.404775,2.008256,4.304197,0.857835,8.605599,-1.082994,-7.188716,-4.150749,-0.399423,7.505966,2.272723,2.657649,-3.135694,-2.699544,-6.452886,7.747876,-1.865977,-9.078020,3.035088,1.525949,9.420849,0.341818,8.191879,6.313082,-2.056908,-8.584020,-8.942444,-5.862550,4.967554,-8.892032,-7.991871,-7.351589,1.307823,-4.699023,8.201640,2.668522,5.542039,-5.567768,-1.387927,3.509254,-2.922058,5.931447,9.915728,3.631110,-5.591494,2.126954,6.186287,-1.377439,-3.466372,5.151468,-6.302444,-4.594126,3.351262,-5.504494,-4.311171,-1.696880,-4.966431,0.478260,4.467340,-6.192783,2.302869,-3.123691,1.831420,9.060192,-1.883729,4.505612,0.493948,-8.322996,-5.278479,-3.412730,-6.736498,1.113555,-8.820925,4.033392,9.072936,-8.032235,3.919176,5.648721,2.835213,-9.533767,5.036325,-3.441413,4.505334,6.746299,-2.570559,-9.117885,-5.040164,1.994899,9.573256,-0.234499,-8.429749,3.489229,-4.802848,-0.429889,5.914465,9.495661,9.879505,0.059828,-4.028666,-9.999701,-1.328535,-1.790685,0.742538,-3.674184,-1.288320,1.100406,2.730727,-0.757737,-3.095463,8.921711,6.501761,-6.360292,-6.390975,7.781142,5.172476,0.098164,-6.602054,-8.772980,0.869967,-8.011773,-0.910322,-2.409396,-1.751659,0.540514,-6.708765,-6.251971,9.103558,-4.377654,-2.232666,-6.332029,6.015983,-7.615611,7.440495,1.216863,2.116020,-4.019988,-3.742170,0.121167,8.330169,5.969095,6.746929,4.937032,-6.745559,-8.357518,3.163942,-3.764514,0.955843,2.202681,-3.161672,9.996863,-5.490835,7.280096,7.878335,-1.907025,4.953952,-4.634832,2.310231,0.521523,8.266827,6.292758,-5.430308,7.808957,-1.226842,6.738623,-5.396140,-6.782951,-4.964064,0.446060,-6.422938,9.355062,3.123903,-3.511110,5.137326,-9.675953,2.564051,-7.522450,-8.319583,5.018219,-4.838127,5.808062,-1.558569,7.791197,8.433462,-8.479282,-7.198431,2.839483,6.139578,6.304356,0.086434,2.937788,1.687067,-7.807109,8.666650,-7.740184,-7.567991,-7.052024,1.059206,-6.033682,-0.810403,-9.205588,-2.658160,-5.497843,5.421255,-4.458301,-8.911529,9.727359,8.308957,9.118206,-9.145762,-1.010987,1.625157,5.916271,0.009826,7.900071,-8.017467,-3.406236,1.516069,-2.134760,-4.402155,9.837431,-7.459504,-5.820653,-3.589905,-8.787117,2.060560,-5.366441,-3.631163,9.437586,8.372722,6.736980,-7.985890,-0.070541,5.146288,-4.571417,2.310896,-5.058981,7.041110,-4.155022,-6.085442,-1.094167,1.977790,-1.700656,-0.415073,6.024821,-9.294236,1.052356,0.469105,-9.616232,-6.898955,-6.057870,-8.892737,1.430081,-8.925887,0.516867,-4.143720,-7.337630,-9.177239,6.351848,5.025825,-2.819027,-5.947467,-1.316995,4.002032,-7.171195,-4.415373,-7.726078,4.098969,-5.751996,7.670648,-6.149734,9.415061,8.937161,0.546307,-5.257405,-3.204381,-4.017832,-9.176671,-0.021407,6.071706,2.978017,6.614744,-9.049959,6.921753,-5.151189,-0.060081,-2.678780,-3.468160,-9.868232,2.551308,-8.232550,7.626227,-9.564913,0.261130,-7.208082,5.483313,-0.798519,6.927062,6.759820,0.316373,0.926879,-7.289431,9.341117,0.359094,-3.785793,-8.132037,-5.392525,5.960308,2.903360,8.666477,8.837225,8.732109,-4.204457,-8.280218,0.086920,0.821146,8.795287,8.715400,-8.242696,-7.837074,9.197283,3.249216,6.934084,-0.041348,-2.663088,-7.198754,-1.986107,6.201459,-1.530098,-6.900618,-1.351403,-6.458742,3.079874,-3.312536,-2.081843,-7.301860,-4.859751,-6.012646,-1.166246,-2.362684,-7.281889,-1.615200,0.723693,5.027707,2.398247,6.541268,-0.841536,1.832278,9.262568,7.790703,8.908449,6.447407,-9.923996,0.354580,-1.823420,0.890194,-0.885252,2.833648,8.453793,4.011534,-7.273155,-8.889555,-0.429007,-9.704151,-6.149714,6.038556,3.970849,6.897388,-7.171224,-6.332851], dtype = "float32")#candidate|4989|(420,)|const|float32
call_4988 = func_2773_call(relay.reshape(const_4989.astype('float32'), [2, 14, 15]), relay.reshape(const_4989.astype('float32'), [2, 14, 15]), )
call_4990 = func_2773_call(relay.reshape(const_4989.astype('float32'), [2, 14, 15]), relay.reshape(const_4989.astype('float32'), [2, 14, 15]), )
output = relay.Tuple([bop_4965,call_4968,call_4982,call_4988,const_4989,])
output2 = relay.Tuple([bop_4965,call_4969,call_4983,call_4990,const_4989,])
func_4999 = relay.Function([var_4963,], output)
mod['func_4999'] = func_4999
mod = relay.transform.InferType()(mod)
mutated_mod['func_4999'] = func_4999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5000 = relay.var("var_5000", dtype = "int32", shape = (14, 11, 14))#candidate|5000|(14, 11, 14)|var|int32
func_4999_call = mutated_mod.get_global_var('func_4999')
call_5001 = func_4999_call(var_5000)
output = call_5001
func_5002 = relay.Function([var_5000], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5018 = relay.var("var_5018", dtype = "float64", shape = ())#candidate|5018|()|var|float64
const_5019 = relay.const([[[-1.951042,-7.680617,8.478526,2.933212,-1.492537,-7.540152,-8.118809,-6.487827,-7.662328,0.785503,6.752414,5.313245],[-7.289924,-3.756442,3.618803,3.994415,-8.730095,4.177831,-8.825560,3.908809,-5.128551,8.297323,-6.668810,-3.634721]],[[6.393809,-7.257471,4.983125,5.773288,4.461740,-0.420592,0.817722,-0.203909,8.870355,8.517234,4.473452,-8.779798],[-4.148249,-5.602090,-8.713916,7.277778,3.626472,-4.105809,3.518575,-1.176467,9.544716,8.671053,4.932484,-6.811967]]], dtype = "float64")#candidate|5019|(2, 2, 12)|const|float64
bop_5020 = relay.multiply(var_5018.astype('float64'), const_5019.astype('float64')) # shape=(2, 2, 12)
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_5024 = relay.TupleGetItem(func_4620_call(), 0)
call_5025 = relay.TupleGetItem(func_4622_call(), 0)
uop_5028 = relay.acos(const_5019.astype('float32')) # shape=(2, 2, 12)
output = relay.Tuple([bop_5020,call_5024,uop_5028,])
output2 = relay.Tuple([bop_5020,call_5025,uop_5028,])
func_5053 = relay.Function([var_5018,], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5054 = relay.var("var_5054", dtype = "float64", shape = ())#candidate|5054|()|var|float64
func_5053_call = mutated_mod.get_global_var('func_5053')
call_5055 = func_5053_call(var_5054)
output = call_5055
func_5056 = relay.Function([var_5054], output)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_5097 = func_4831_call()
call_5098 = func_4831_call()
output = call_5097
output2 = call_5098
func_5118 = relay.Function([], output)
mod['func_5118'] = func_5118
mod = relay.transform.InferType()(mod)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5118_call = mutated_mod.get_global_var('func_5118')
call_5119 = func_5118_call()
output = call_5119
func_5120 = relay.Function([], output)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2061_call = mod.get_global_var('func_2061')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_5202 = func_2061_call()
call_5203 = func_2061_call()
output = call_5202
output2 = call_5203
func_5207 = relay.Function([], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
output = func_5207()
func_5208 = relay.Function([], output)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3822_call = mod.get_global_var('func_3822')
func_3824_call = mutated_mod.get_global_var('func_3824')
call_5238 = func_3822_call()
call_5239 = func_3822_call()
output = call_5238
output2 = call_5239
func_5247 = relay.Function([], output)
mod['func_5247'] = func_5247
mod = relay.transform.InferType()(mod)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5247_call = mutated_mod.get_global_var('func_5247')
call_5248 = func_5247_call()
output = call_5248
func_5249 = relay.Function([], output)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4491_call = mod.get_global_var('func_4491')
func_4492_call = mutated_mod.get_global_var('func_4492')
call_5323 = relay.TupleGetItem(func_4491_call(), 0)
call_5324 = relay.TupleGetItem(func_4492_call(), 0)
output = relay.Tuple([call_5323,])
output2 = relay.Tuple([call_5324,])
func_5327 = relay.Function([], output)
mod['func_5327'] = func_5327
mod = relay.transform.InferType()(mod)
mutated_mod['func_5327'] = func_5327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5327_call = mutated_mod.get_global_var('func_5327')
call_5328 = func_5327_call()
output = call_5328
func_5329 = relay.Function([], output)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2193_call = mod.get_global_var('func_2193')
func_2194_call = mutated_mod.get_global_var('func_2194')
call_5330 = func_2193_call()
call_5331 = func_2193_call()
var_5333 = relay.var("var_5333", dtype = "float64", shape = (4, 2, 14))#candidate|5333|(4, 2, 14)|var|float64
bop_5334 = relay.mod(call_5330.astype('float32'), relay.reshape(var_5333.astype('float32'), relay.shape_of(call_5330))) # shape=(4, 2, 14)
bop_5337 = relay.mod(call_5331.astype('float32'), relay.reshape(var_5333.astype('float32'), relay.shape_of(call_5331))) # shape=(4, 2, 14)
func_2061_call = mod.get_global_var('func_2061')
func_2062_call = mutated_mod.get_global_var('func_2062')
call_5344 = func_2061_call()
call_5345 = func_2061_call()
func_2883_call = mod.get_global_var('func_2883')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_5374 = relay.TupleGetItem(func_2883_call(), 1)
call_5375 = relay.TupleGetItem(func_2884_call(), 1)
func_5207_call = mod.get_global_var('func_5207')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_5404 = func_5207_call()
call_5405 = func_5207_call()
output = relay.Tuple([bop_5334,call_5344,call_5374,call_5404,])
output2 = relay.Tuple([bop_5337,call_5345,call_5375,call_5405,])
func_5409 = relay.Function([var_5333,], output)
mod['func_5409'] = func_5409
mod = relay.transform.InferType()(mod)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5410 = relay.var("var_5410", dtype = "float64", shape = (4, 2, 14))#candidate|5410|(4, 2, 14)|var|float64
func_5409_call = mutated_mod.get_global_var('func_5409')
call_5411 = func_5409_call(var_5410)
output = call_5411
func_5412 = relay.Function([var_5410], output)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
call_5425 = func_4033_call()
call_5426 = func_4033_call()
output = relay.Tuple([call_5425,])
output2 = relay.Tuple([call_5426,])
func_5450 = relay.Function([], output)
mod['func_5450'] = func_5450
mod = relay.transform.InferType()(mod)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mutated_mod.get_global_var('func_5450')
call_5451 = func_5450_call()
output = call_5451
func_5452 = relay.Function([], output)
mutated_mod['func_5452'] = func_5452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_5534 = func_4831_call()
call_5535 = func_4831_call()
output = relay.Tuple([call_5534,])
output2 = relay.Tuple([call_5535,])
func_5562 = relay.Function([], output)
mod['func_5562'] = func_5562
mod = relay.transform.InferType()(mod)
output = func_5562()
func_5563 = relay.Function([], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_5581 = relay.TupleGetItem(func_2435_call(), 0)
call_5582 = relay.TupleGetItem(func_2436_call(), 0)
output = call_5581
output2 = call_5582
func_5593 = relay.Function([], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5594 = func_5593_call()
output = call_5594
func_5595 = relay.Function([], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5627 = relay.TupleGetItem(func_4111_call(), 2)
call_5628 = relay.TupleGetItem(func_4113_call(), 2)
func_1381_call = mod.get_global_var('func_1381')
func_1387_call = mutated_mod.get_global_var('func_1387')
var_5638 = relay.var("var_5638", dtype = "float32", shape = (704,))#candidate|5638|(704,)|var|float32
const_5639 = relay.const([8,3,-4,6,9,7,-6,-3,-1,10,6,-6,-7,-7,7,-2,-4,6,-8,-9,10,10,6,5,-2,1,-2,-2,-8,-7,5,-1,6,8,-10,2,-2,-4,-8,10,-3,9,8,4,2,-2,-3,-7,-10,5,-1,8,1,-4,10,-2,4,10,-5,-9,-6,-4,-4,7,6,-4,3,2,3,-5,-9,7,8,-7,-2,10,9,-6,-4,7,-7,1,-2,-3,1,1,7,-5,-7,-10,1,6,5,-3,7,3,10,3,8,-8,-6,-1,6,9,-10,-2,-10,-1,10,-4,-5,-10,-10,8,1,-7,4,3,3,5,3,-6,-6,8,2,-3,-8,1,-10,-5,4,9,9,-10,-3,10,10,9,-3,-4,-8,2,-1,-5,10,1,2,-2,5,-5,-4,-6,-1,4,9,-10,4,4,-5,-8,7,-8,3,-1,-1,7,-1,4,6,-5,6,4,7,7,7,6,-7,4,-6,6,-1,-7,-4,4,10,6,5,6,-10,-4,8,-2,4,-3,-2,8,-2,8,5,-5,-3,1,-3,-10,1,1,-3,4,-10,6,10,7,-10,-7,9,1,4,-10,10,3,3,1,-8,3,-4,2,-4,5,8,-2,3,-8,5,8,-9,7,5,-8,-2,3,-2,9,7,-2,5,1,9,-9,-9,-10,-7,10,4,7,1,-2,-8,-10,7,10,-8,-2,-4,1,-7,4,9,-10,-4,-7,-8,9,-1,10,1,-10,5,-3,-2,-2,7,-4,10,9,10,10,-6,3,5,5,-5,4,6,9,-4,-8,-7,-9,-8,-2,8,-8,10,-4,-7,1,-4,4,-4,8,3,3,8,-8,4,-5,-9,-9,-4,-4,-3,-5,-1,7,-9,7,8,-2,2,3,10,-8,-8,-8,1,-5], dtype = "int8")#candidate|5639|(336,)|const|int8
var_5640 = relay.var("var_5640", dtype = "float32", shape = (1820,))#candidate|5640|(1820,)|var|float32
call_5637 = relay.TupleGetItem(func_1381_call(relay.reshape(var_5638.astype('float32'), [8, 11, 8]), relay.reshape(var_5638.astype('float32'), [8, 11, 8]), relay.reshape(const_5639.astype('int8'), [336,]), relay.reshape(var_5640.astype('float32'), [910, 2]), ), 5)
call_5641 = relay.TupleGetItem(func_1387_call(relay.reshape(var_5638.astype('float32'), [8, 11, 8]), relay.reshape(var_5638.astype('float32'), [8, 11, 8]), relay.reshape(const_5639.astype('int8'), [336,]), relay.reshape(var_5640.astype('float32'), [910, 2]), ), 5)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_5646 = relay.TupleGetItem(func_5450_call(), 0)
call_5647 = relay.TupleGetItem(func_5452_call(), 0)
output = relay.Tuple([call_5627,call_5637,var_5638,const_5639,var_5640,call_5646,])
output2 = relay.Tuple([call_5628,call_5641,var_5638,const_5639,var_5640,call_5647,])
func_5656 = relay.Function([var_5638,var_5640,], output)
mod['func_5656'] = func_5656
mod = relay.transform.InferType()(mod)
var_5657 = relay.var("var_5657", dtype = "float32", shape = (704,))#candidate|5657|(704,)|var|float32
var_5658 = relay.var("var_5658", dtype = "float32", shape = (1820,))#candidate|5658|(1820,)|var|float32
output = func_5656(var_5657,var_5658,)
func_5659 = relay.Function([var_5657,var_5658,], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5815 = relay.var("var_5815", dtype = "int32", shape = (11, 15, 6))#candidate|5815|(11, 15, 6)|var|int32
const_5816 = relay.const([[[-9,1,-2,-3,4,1],[-5,-5,-1,3,-6,-4],[-4,6,9,-3,6,-8],[-9,-9,-2,2,3,10],[-8,1,6,4,-6,-1],[-6,3,-8,-4,2,1],[6,-1,3,-2,-6,2],[10,2,-6,9,7,8],[3,-4,5,-10,9,9],[-7,-2,4,5,-1,10],[-9,-1,-2,-4,1,3],[1,1,7,3,-1,-6],[-10,10,9,-1,8,-7],[-3,7,-6,3,4,-1],[-4,-6,1,9,-5,3]],[[9,-2,-7,1,-1,3],[-9,-7,8,5,-2,6],[-2,-7,6,-3,-5,5],[-6,-10,-3,6,-1,6],[-1,-3,9,-10,-6,2],[-6,-8,1,-3,-10,-6],[7,-6,5,10,-10,-2],[-2,-3,-7,2,-1,-6],[-6,1,-3,-8,9,1],[-5,-1,-3,7,3,-4],[7,6,6,10,3,5],[-8,-10,-8,-10,-1,-9],[2,-10,6,-7,-9,10],[-7,7,-2,7,7,7],[-8,8,6,8,1,-4]],[[3,9,6,-7,-8,2],[7,9,9,-9,1,-10],[3,8,5,3,3,10],[-1,-2,-1,10,6,-4],[-3,5,10,-4,3,-1],[4,-6,5,-8,-3,5],[5,-4,5,9,10,-6],[7,-5,2,9,-9,-4],[-3,9,3,1,-9,10],[-2,-4,2,5,9,-2],[-8,-10,-7,9,7,7],[-4,-9,-5,9,-9,-2],[-4,-10,8,8,2,3],[2,-1,-2,10,-1,10],[-9,3,-3,-1,-1,2]],[[3,-5,7,8,10,8],[-2,-7,-7,-6,6,-4],[-4,6,6,-7,9,7],[2,3,7,-3,10,-1],[-6,3,6,-1,-4,8],[-6,-10,8,10,5,1],[7,-2,-5,3,-9,3],[6,8,10,2,2,10],[-1,2,-6,-1,-9,9],[3,-3,-10,8,10,-8],[3,-6,-3,-6,7,-2],[1,5,6,3,-7,2],[5,-5,-5,3,2,2],[6,-10,6,-7,5,8],[-7,1,-7,1,-4,-7]],[[9,8,9,-7,-9,-9],[8,3,-9,7,2,-2],[-10,3,1,-2,1,-4],[-1,7,-7,-7,4,10],[-3,-1,-4,7,8,-7],[-1,-9,-10,-1,3,3],[6,-7,-1,8,-4,10],[2,2,-7,-8,10,9],[2,3,1,5,5,10],[1,-10,6,2,7,-9],[3,-3,7,-2,-5,4],[8,-3,-3,9,-2,-8],[-6,8,4,-8,-7,7],[6,-4,-4,-6,10,-5],[6,-9,-10,-7,-9,10]],[[4,-10,2,6,-9,-8],[9,-5,-5,3,4,-10],[-9,3,-3,3,2,2],[-3,1,-1,4,2,8],[-8,9,-3,6,-7,1],[-1,-9,8,-8,-2,-2],[7,2,5,-7,2,-5],[-4,-6,2,-2,4,8],[5,-4,5,9,-3,-1],[2,1,3,-9,-1,-1],[6,7,-5,1,-3,6],[-2,1,-7,-4,-10,6],[-3,4,2,6,-7,8],[-8,-1,-6,8,-3,3],[-1,2,2,-7,-3,-8]],[[6,-2,4,4,-3,-2],[3,8,1,7,-10,3],[9,6,1,-6,5,10],[2,-3,1,3,-7,10],[-2,-10,-10,-4,-3,8],[4,2,5,-3,6,-9],[1,-10,1,-6,9,-5],[9,7,-10,7,-2,-5],[3,-2,-2,-7,-3,3],[7,8,5,6,-1,-5],[9,-4,5,5,-7,-6],[-10,-4,-9,8,6,3],[-7,3,-1,10,-4,-2],[6,-4,6,2,4,8],[2,-9,-2,-8,-1,-9]],[[-3,4,-5,-4,-6,4],[10,-8,1,-8,-2,1],[-9,-2,-2,-3,-2,-10],[-5,-10,5,-1,-9,1],[-4,2,8,-9,2,7],[4,9,-9,5,-5,5],[8,-9,6,6,1,-8],[-3,5,-10,-1,4,-2],[-1,7,3,-8,-9,-9],[-6,-6,5,5,-3,-3],[-3,-9,4,-10,-10,3],[-10,-4,9,-5,-8,-2],[-7,1,7,2,8,-7],[-3,-1,5,-6,-6,-5],[6,10,4,-9,8,10]],[[-3,7,4,-6,-2,-1],[3,-3,2,4,9,3],[5,-4,-1,-10,7,-8],[3,7,4,-2,7,-4],[3,-6,1,6,1,-8],[-6,-1,-6,-3,6,2],[-10,-5,-10,-4,8,-7],[-9,-4,5,-7,10,4],[-8,3,-7,-3,3,-1],[-8,8,-5,6,10,-6],[-10,5,-10,6,-6,-3],[-7,-9,6,-3,-7,2],[-8,5,6,2,-6,-8],[6,6,6,-4,-6,3],[-10,-6,-9,-8,9,-4]],[[9,-3,-1,-1,8,8],[7,-6,2,4,-8,-1],[-1,6,4,-4,-4,-8],[-1,-3,-6,-2,-4,5],[10,1,2,-6,3,-2],[10,2,7,10,-8,-7],[-5,-9,-9,-4,-6,8],[-7,2,6,8,1,1],[-7,6,-3,2,-3,-6],[5,-3,7,10,6,5],[-9,-10,-3,10,2,-5],[-8,5,-8,-6,-3,8],[10,5,2,-10,4,-1],[2,5,7,3,1,-9],[-8,-3,-1,10,-9,-9]],[[-8,-3,-10,-7,8,-8],[-6,-10,-8,-3,1,-7],[9,6,-4,-10,-4,5],[9,-6,-4,2,7,4],[-3,10,-6,-8,6,-2],[7,-5,9,4,-9,-7],[-9,2,2,-1,-6,-7],[-10,7,9,6,-3,8],[8,2,-6,-2,-7,-9],[4,-2,-3,-3,5,8],[-1,-1,-5,8,3,-5],[-6,-2,-3,10,2,-8],[-2,-5,2,1,8,-8],[1,10,-4,2,2,-3],[-4,-2,8,1,-2,-6]]], dtype = "int32")#candidate|5816|(11, 15, 6)|const|int32
bop_5817 = relay.bitwise_and(var_5815.astype('int32'), relay.reshape(const_5816.astype('int32'), relay.shape_of(var_5815))) # shape=(11, 15, 6)
var_5824 = relay.var("var_5824", dtype = "int32", shape = (11, 15, 6))#candidate|5824|(11, 15, 6)|var|int32
bop_5825 = relay.logical_xor(bop_5817.astype('uint64'), relay.reshape(var_5824.astype('uint64'), relay.shape_of(bop_5817))) # shape=(11, 15, 6)
bop_5828 = relay.maximum(bop_5817.astype('int64'), relay.reshape(var_5815.astype('int64'), relay.shape_of(bop_5817))) # shape=(11, 15, 6)
uop_5833 = relay.asinh(bop_5828.astype('float64')) # shape=(11, 15, 6)
uop_5835 = relay.tan(uop_5833.astype('float64')) # shape=(11, 15, 6)
bop_5847 = relay.bitwise_or(uop_5833.astype('int32'), relay.reshape(var_5815.astype('int32'), relay.shape_of(uop_5833))) # shape=(11, 15, 6)
bop_5860 = relay.logical_or(var_5824.astype('bool'), relay.reshape(uop_5835.astype('bool'), relay.shape_of(var_5824))) # shape=(11, 15, 6)
uop_5868 = relay.cosh(uop_5835.astype('float32')) # shape=(11, 15, 6)
output = relay.Tuple([bop_5825,bop_5847,bop_5860,uop_5868,])
output2 = relay.Tuple([bop_5825,bop_5847,bop_5860,uop_5868,])
func_5874 = relay.Function([var_5815,var_5824,], output)
mod['func_5874'] = func_5874
mod = relay.transform.InferType()(mod)
var_5875 = relay.var("var_5875", dtype = "int32", shape = (11, 15, 6))#candidate|5875|(11, 15, 6)|var|int32
var_5876 = relay.var("var_5876", dtype = "int32", shape = (11, 15, 6))#candidate|5876|(11, 15, 6)|var|int32
output = func_5874(var_5875,var_5876,)
func_5877 = relay.Function([var_5875,var_5876,], output)
mutated_mod['func_5877'] = func_5877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4883_call = mod.get_global_var('func_4883')
func_4885_call = mutated_mod.get_global_var('func_4885')
call_5906 = relay.TupleGetItem(func_4883_call(), 0)
call_5907 = relay.TupleGetItem(func_4885_call(), 0)
output = relay.Tuple([call_5906,])
output2 = relay.Tuple([call_5907,])
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
mutated_mod['func_5918'] = func_5918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mutated_mod.get_global_var('func_5918')
call_5919 = func_5918_call()
output = call_5919
func_5920 = relay.Function([], output)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_5926 = func_4831_call()
call_5927 = func_4831_call()
func_5656_call = mod.get_global_var('func_5656')
func_5659_call = mutated_mod.get_global_var('func_5659')
var_5937 = relay.var("var_5937", dtype = "float32", shape = (704, 1))#candidate|5937|(704, 1)|var|float32
const_5938 = relay.const([[-4.860307,-8.761125,2.584495,5.424240,7.530020,-1.171468,5.095699,-8.510867,-1.607361,2.774347,-9.123434,7.283296,-4.291302,0.499913,-6.139166,5.418681,3.583755,7.508250,9.081218,-8.378782,-4.224170,1.358662,-6.797435,-9.393305,4.712996,5.301887,1.616378,-9.207720,-5.705039,-1.979538,0.219006,9.417551,6.672736,8.664051,8.481303,8.758053,6.661546,4.472211,-1.384377,-0.362515,6.313079,5.008879,-7.313891,-1.258104,-8.273125,0.545602,5.273431,-6.744858,-4.353561,3.819389,7.405488,0.299728,-0.257039,-6.695720,-3.471691,-2.546259,7.776410,-0.888104,8.974964,-9.266216,-6.097349,3.177672,-9.157770,-6.925025,-4.020240,-7.057198,4.400833,-9.654426,-8.716853,-8.371834,6.315328,-4.511237,3.657989,-5.690838,1.602749,-6.596344,-3.281896,3.290234,0.716105,1.957198,-7.400407,9.447859,0.192468,3.843904,-6.078389,-8.731918,-0.497451,-7.793204,-3.930873,-5.725184,4.884999,8.451879,1.684516,-0.559214,-7.493549,-4.255921,5.467833,-3.089602,3.133044,-7.708527,-5.789080,9.344817,1.223342,-2.427280,-0.740675,-6.690587,6.947931,7.695911,-0.469036,6.239772,-0.965154,5.117822,5.740246,-1.492958,4.446344,-7.398841,-7.351570,-3.661165,-1.724658,2.639037,-7.709522,-1.352790,5.937342,-3.889379,-5.452608,-5.383307,3.151219,-4.485149,-0.691465,4.490577,-3.181238,4.070234,1.397551,-9.600115,-5.077172,-0.800214,3.676421,-4.313006,-6.612312,4.874526,-7.224582,2.600995,4.773380,-4.764790,8.370767,-2.912965,9.578851,-3.808257,0.231161,-7.268027,-1.847403,-6.922108,-6.273462,-7.986427,8.235604,7.713711,6.543468,6.229182,-3.482759,-2.817101,3.098545,8.548268,-2.564279,8.222508,5.041568,1.392081,-0.783291,7.568349,-7.560329,-8.023052,2.188640,5.159655,-4.485982,-0.078156,-2.923450,-7.101347,7.290235,6.365914,8.140546,8.522107,-7.874947,-2.690641,8.339111,8.905238,2.709778,8.649413,4.580115,-6.518457,-4.349787,6.475953,0.293199,-4.557149,0.611953,9.451896,6.645645,1.479503,5.955943,-6.069108,-4.638691,1.628882,5.222879,-4.424910,8.814329,6.533660,9.418756,1.350236,-5.569367,3.448793,0.687080,2.155699,-5.141751,-4.952910,-7.190508,-5.226169,2.599456,9.504252,-5.059656,8.579618,-6.891380,7.751538,4.635824,-4.582602,9.829477,-3.273067,-1.611518,9.584248,-0.854920,2.936902,-0.538549,2.215543,1.798193,8.064018,8.793441,6.285289,8.079328,7.010626,9.260670,-3.715207,-7.030012,9.455205,-2.228893,6.306549,2.676578,-8.691706,-6.542219,6.787773,-4.285409,9.522306,9.371236,9.792445,-2.078794,-9.692976,-6.718687,-3.713425,4.552210,-6.846888,-6.145769,-3.703277,-5.453755,0.056654,7.411539,-2.103286,8.402673,2.361361,-7.916197,3.243398,7.041981,2.374953,2.503085,-7.238039,0.345035,-9.424931,-7.489065,8.334542,7.922286,5.366601,4.402588,-6.647805,-5.353056,-2.279309,-4.207022,7.858310,7.895684,-0.554002,-1.920469,8.242093,9.036755,6.223845,-6.085440,-2.691752,4.956693,-8.597630,0.095767,-5.001387,-8.435538,-5.756200,-5.596498,1.042762,-6.190610,-1.758651,-0.567528,2.855850,-8.400094,-7.217864,6.996918,-7.488726,-5.174664,-7.198974,-9.247776,8.555692,0.256236,5.806707,8.338154,8.821054,-0.050188,-9.138557,1.934037,-9.533959,-2.493247,-4.786719,2.934858,8.996872,-6.285364,8.063675,-3.392823,1.958491,1.892282,5.573575,1.121321,-4.330076,7.190843,6.224964,-9.018826,-7.304863,-4.078256,0.795692,8.477986,8.633931,-6.497803,-1.306260,-7.353566,-6.045952,4.580480,-5.878693,-8.906566,-8.861934,-6.287679,-7.679824,-0.509781,1.857443,4.766531,-1.741941,9.247380,-7.485252,4.458842,-6.968800,8.103433,3.727938,5.721771,8.991518,-5.871145,3.596754,3.236390,-8.292359,-1.650722,-7.335860,-0.315130,-3.448611,5.363247,2.263507,-6.451347,-8.324272,-0.242862,-3.765046,3.836667,9.847073,1.084093,-7.600968,-1.922616,-6.384055,5.889231,-2.204158,-6.585059,3.458523,-1.132079,-7.076413,8.448435,-0.380043,-4.554902,5.356581,-4.954509,4.072944,1.810498,7.899241,-4.670332,-4.708814,-0.975071,1.336162,4.485664,-7.481897,5.907355,-6.684117,8.583589,-9.012732,9.896171,-5.595846,-1.088411,-8.618625,8.713595,0.948247,2.956142,0.136582,7.329777,-5.092800,-5.230472,-8.532951,2.011439,-2.503245,1.491889,-0.782150,-0.141896,-9.383175,2.543948,-9.810525,-4.879281,-0.971811,2.988839,-4.082493,8.110228,8.542308,0.512572,5.920707,4.415207,-5.171643,8.081723,6.767130,6.395024,-6.567817,-4.967745,9.148981,0.991309,7.430009,-0.098434,5.359680,-4.445726,4.401632,-5.409046,8.875705,-6.029859,-0.305814,-4.529408,2.384679,0.169985,-5.918246,-8.759075,9.525161,-0.941634,-4.386454,-5.080540,-4.105907,-9.320696,-0.042089,-5.770705,-1.007996,5.893198,-8.968370,1.189877,7.943204,-7.031538,-9.174381,-4.085171,-1.425066,-8.522405,9.037852,-9.920605,-4.976841,4.925879,2.674354,-1.132411,-8.435901,-4.698153,8.360363,-2.891387,-3.752977,1.777808,1.000540,-4.644306,-9.488726,-3.194416,6.372567,9.616814,8.329197,6.989733,-6.693677,6.712819,4.556582,-2.751149,0.613899,-8.394418,3.934380,-2.615324,1.031719,-2.620239,-1.862309,9.958982,5.257946,8.296501,3.361873,5.786175,-2.459265,-1.539415,-5.620799,-9.258011,0.343162,2.526635,-8.932221,9.813384,5.746496,2.776306,-1.910022,4.940697,8.434453,-8.235895,1.232029,9.494289,-2.858049,-4.894245,-3.565835,-9.863144,3.773132,-0.207209,-1.398604,5.097895,6.899368,3.190543,6.096551,4.578048,1.670058,0.016384,6.120793,-0.580019,-9.978889,-3.112731,7.612891,-9.279445,-1.972281,6.864142,-0.908546,-9.137506,6.294842,1.545159,5.571585,-5.739256,-0.373739,7.207070,-0.109842,-8.576164,-1.537858,0.731924,8.354599,-3.281458,-4.901628,-7.601694,-5.832819,-5.496098,-1.307735,-7.683772,-2.594661,-0.161450,-9.761051,-0.988918,5.614232,1.862168,3.773373,-6.303539,-3.606264,-8.883655,-3.318949,9.743287,-7.221261,-8.056002,0.456498,-7.489194,2.350154,0.868231,-9.664910,-8.287248,-1.292756,-7.853730,-6.381987,-6.628379,6.892480,0.561193,-2.580834,3.321076,-6.537855,3.547850,-7.677862,5.268350,3.045890,-8.101306,-3.801095,6.650251,-6.586424,-6.604947,-4.769238,-0.635258,-1.049499,6.024167,-6.668097,2.582508,2.412424,6.087377,-8.898390,5.141666,4.283464,2.133627,9.220047,-7.864808,-7.059284,-0.360257,2.742858,3.079671,5.171995,-8.399328,4.284819,-5.314759,5.798641,-9.210431,8.126555,7.952398,0.854080,-5.877608,7.600242,3.053282,-8.607185,2.133047,-0.178962,6.218042,8.822623,0.365581,5.033523,5.316020,7.818369,-5.540682,-3.448300,2.030078,-8.114187,-9.293448,-1.733022,-5.260069,1.774284,6.977798,-9.812964,1.744121,-0.207167,-1.534526,5.947071,-4.333631,4.776787,4.384528,-7.860502,-8.360882,-4.811541,3.800050,-7.598893,0.978175,1.252181,7.963871,1.978222,1.852765,2.005050,3.706056,-5.830881,-4.874776,-2.542273,8.855262,-9.525951,-9.093460,-1.243366,-8.053076,0.898613,-5.960665,-4.191197,-0.585285,9.009372,4.132763,7.584400,0.763765,2.588508,6.015906,5.388232,-0.112504,-0.344882,-6.235400,-9.773920,7.993130,9.994531,-9.009735,8.208951,9.828141,7.510701,-7.575010,-6.095625,-3.732020,2.154784,2.063039,-4.354160,-4.536681,-3.454711,7.211205,7.145759,-4.406858,-5.033063,-1.332239,9.004396,-7.894860,4.475822,2.338370,-3.723047,1.079900,-6.029338,-7.518458,-9.356395,5.222588,-7.311985,-6.658356,-0.808687,-2.990809,6.795237,-4.129249,-9.701084,4.391349,6.013774,2.660878,-5.919658,8.719884,-7.652175,4.780108,3.966621,2.512370,7.894896,7.960300,2.204464,4.934339,1.999305,0.783508,-1.100582,2.651927,-8.905944,-8.772950,2.490109,2.518018,2.162313,-6.839372,7.040296,-9.004264,2.798114,-7.096612,2.118364,-6.415689,-3.996270,4.667167,-0.212622,-7.982731,6.676234,-5.672284,6.451686,-9.222870,-9.453940,8.884237,8.783691,7.088205,2.232113,5.986929,8.020929,2.740790,3.441677,-7.409239,0.912824,-5.481190,4.675830,8.658805,-6.333056,-2.905676,0.190174,3.037563,1.795573,6.914396,-4.367558,-9.542242,-4.729536,8.622020,-3.850415,-6.047967,8.148980,-8.071007,7.568825,8.387635,-4.144787,-8.196490,9.317643,-4.796946,-6.004050,1.213722,-8.489098,-6.811894,-7.373610,-6.153620,-8.327401,-1.967297,-7.794066,-3.919698,6.152736,0.909524,6.780359,0.596485,8.858015,-7.611974,3.448216,6.870711,8.129536,6.720327,2.422508,-7.600408,-3.886519,5.190098,4.872755,-7.431198,0.906564,-8.420597,6.268558,7.334940,6.982560,2.548636,-1.269438,-1.342035,-8.899558,5.118753,-4.196963,9.467052,-2.847979,8.523509,9.937774,-7.127938,7.888841,7.721495,-0.824497,-5.202009,-3.837148,9.877332,-5.949523,-6.947810,2.139790,-7.561396,1.161641,-4.888950,4.400565,-6.386917,3.983894,0.823347,1.450194,3.226952,-9.134176,-4.506103,3.782194,9.925746,7.177153,3.736628,3.866431,-2.339894,1.266800,-3.792085,-6.796514,3.052933,-8.887173,5.350194,-1.155654,9.192247,-0.187067,6.386778,6.654800,3.707292,2.553689,4.719247,-4.696492,7.761387,-3.995286,-1.328265,-3.268283,-1.649729,9.444948,1.511525,2.274301,-5.807496,-5.601813,9.436945,-0.241440,-5.757884,4.994021,-9.929303,-6.395861,-0.551408,5.905509,6.770239,-4.332287,-2.451781,9.811779,0.045194,6.410177,-6.195491,-8.535945,2.404021,-4.451234,-3.388447,-5.181025,-2.127622,-6.236357,9.230449,0.299260,-7.914172,1.083853,3.247723,-2.446979,6.245128,-2.041071,1.292342,5.345748,2.313962,-6.787505,-1.625704,-7.342053,5.545315,5.036791,0.631408,-6.697349,-3.355471,-1.041780,-4.782919,4.436082,-5.086127,-1.279378,-8.395449,5.273751,7.418571,9.153033,-0.540804,-1.476771,-3.796899,-0.556988,6.459624,0.258715,-4.799202,6.960398,-1.576151,-3.667234,8.949090,-3.062277,8.725355,2.976113,-7.343593,-3.997697,2.283927,-4.880045,-6.802493,0.057836,3.212819,4.006752,-1.657530,1.480574,9.160131,-8.375275,-5.377968,-8.722588,-6.262227,-2.386305,-3.696820,9.395106,-9.736276,-9.492266,-4.627341,-4.743728,-6.408238,-8.013802,-6.334070,-3.253497,7.440057,-7.598595,4.007057,3.365671,4.282521,-7.763341,-8.603279,8.669163,-3.208987,3.914485,1.910817,-1.978060,-7.681589,-7.358274,-8.562128,-2.788207,9.628020,6.280178,-2.265927,-8.066088,2.909276,4.610590,-3.629960,-0.017097,-1.813589,-4.306610,1.141862,-2.203058,8.655229,-2.254015,4.880831,5.325393,-1.260043,5.837891,-9.268844,-0.750661,9.708158,4.525697,-2.006184,-0.433261,-2.516361,-6.875119,8.638595,5.353857,7.974727,6.325877,-7.391214,-9.925673,5.690182,9.723564,4.198402,6.323186,-8.099729,2.928061,-7.943555,4.877887,-7.648648,-6.515054,-6.429299,-7.378985,-4.350617,-2.986408,-0.862909,8.768880,9.472967,4.424761,-3.801117,5.337576,-3.175698,8.803022,-2.780069,5.469994,-1.849104,-1.380949,1.664500,-8.641641,-9.187976,-8.718191,6.399224,0.522506,8.038633,-8.953443,1.505720,-6.165760,-6.536358,0.301020,-5.204284,4.839235,-4.002655,-5.144003,-4.474946,6.668509,4.046758,5.967029,1.601766,5.523507,-6.449086,-3.950418,1.257336,2.507912,-9.407672,-9.976094,8.822597,5.085050,-2.859292,1.109581,2.405580,7.880106,-4.855644,0.995477,0.402260,-5.363719,-5.709781,-6.462873,9.993329,8.485138,-1.716575,1.789457,5.092849,4.559648,-3.784188,-5.344472,-7.173443,-3.599560,5.468073,-7.738557,3.750617,-2.639500,-9.276216,7.185137,-3.285981,7.473025,9.186069,-1.194869,-3.720565,-6.786580,-7.149934,-4.243552,-3.435075,5.909729,-0.636832,8.596193,7.693345,-8.928673,-7.559929,7.367216,-1.130691,1.963675,7.041138,2.689052,1.036877,-5.831036,-3.288744,-6.645729,-2.813237,-0.313759,-3.422555,-0.048105,0.201193,0.828196,-0.051192,-7.588550,4.668376,-8.593951,9.550278,-2.939650,4.227039,-1.719342,4.106021,7.404936,8.831462,7.237390,3.992740,8.178249,-1.197241,-9.034705,7.861557,7.081115,-7.674360,-2.502263,5.698493,-0.555519,9.425754,4.992274,-6.734914,-2.231640,-3.917294,5.326223,9.842413,7.748452,8.552097,0.228071,-5.085750,3.141510,-0.457100,3.154309,6.556851,0.934500,-0.875821,4.674641,9.104921,-5.294884,5.177356,4.254221,-7.081365,-4.168103,-0.569726,8.414991,0.773491,0.366312,-8.520377,0.094500,-8.459328,-4.333461,5.045028,2.277092,-3.514406,2.722338,7.897747,-7.800575,6.305488,0.189114,-3.471336,-6.192515,-1.495207,-1.006821,-2.438490,-9.619932,-1.687716,-2.222144,-4.198633,-2.597265,6.257400,9.211511,-0.499892,9.898773,-8.619762,3.911244,2.842651,-8.022429,1.864401,-5.925682,6.330445,-4.272264,5.221044,6.905949,7.946725,-0.189055,5.423262,5.292770,-4.266870,6.914627,-2.893380,0.992788,1.719327,5.857995,-6.689968,-2.816121,-3.513584,4.726392,5.752481,2.060790,-3.333491,-3.300380,4.489127,1.011995,-7.313462,1.990187,0.550131,-8.261493,-0.487701,9.868637,1.135432,-7.973028,3.545273,2.348627,5.158838,8.608614,5.151029,5.919396,3.330752,-1.519142,-9.672946,-7.844622,-7.427818,-4.772881,-6.322505,-9.352572,5.616463,6.257865,-5.981258,-0.652191,-1.210439,-0.754813,6.839126,-4.001933,-1.152438,-3.493795,-3.213751,8.802589,2.851640,-2.312457,7.440260,9.490043,5.731489,3.552161,0.889350,9.832953,5.036060,8.806595,-9.307828,-3.795984,-5.007337,0.737871,5.937206,-7.894239,-2.081249,4.130608,6.750467,-4.451332,1.279823,-7.860862,1.005697,-0.358038,2.834720,1.291233,-4.941492,0.426602,-7.982199,1.751519,5.673021,-0.267043,-9.018551,7.708501,-5.042712,1.419452,-3.266001,9.620568,0.889556,-6.813569,4.867193,-4.750163,5.714144,9.446176,-0.251882,-4.401192,-2.131975,9.496406,-1.656905,-9.899046,0.421615,-9.538262,7.991046,6.668540,-0.577931,-0.209994,-1.070730,9.551516,-6.581162,7.595436,9.403426,-0.030541,3.472032,1.962021,-5.057795,-1.102859,4.810656,0.135084,-1.855715,7.482749,4.166097,4.574312,8.646431,9.940606,8.831068,-3.935084,-9.941743,-7.346507,2.116041,7.151705,0.142807,0.498262,3.928409,9.270373,8.240357,-3.418914,-6.538782,-9.207463,-1.406780,0.205926,0.006964,-8.383087,-8.755013,2.068742,-5.996264,-4.628923,-2.811233,-7.202306,-6.234017,-0.402684,2.065836,-2.544731,-7.011280,0.352644,6.556481,-9.985489,-3.752156,-1.762367,4.140606,-5.248839,8.092305,3.646537,-3.834692,4.610111,7.859917,9.527063,-9.894249,6.657555,-6.911430,3.904408,5.639274,-3.371288,-9.540037,4.969751,-1.753635,-2.547173,-6.609057,-8.242641,7.188016,6.206723,8.945698,2.682833,8.383214,-2.971469,0.767577,2.641643,0.620403,5.559253,-0.788995,2.555130,-8.389563,-0.009738,8.957719,-9.754867,-8.684594,3.353808,-5.443956,8.144235,5.489651,9.350844,8.569950,-3.061320,6.685622,7.107294,-8.769021,-8.464796,-3.653443,7.992190,3.922579,-1.623134,0.744693,0.525702,2.501006,4.194863,-5.010300,7.226046,2.537307,-1.030324,7.845670,4.212965,-9.011998,1.676349,-7.185998,-7.592831,-9.406576,-6.312317,5.056112,5.154217,-2.262495,1.894347,9.472280,5.985666,-4.885513,2.961860,1.580305,4.403428,8.011546,-2.472882,3.721437,2.973306,6.523193,-8.358004,-0.726843,2.077501,-6.754890,0.238175,-1.629511,2.605435,0.793342,-0.614921,2.764515,-5.219454,-9.261230,-1.662312,-6.974111,8.039362,9.033772,-1.261777,0.423522,5.963838,-1.794935,-3.655099,9.007988,-6.124801,-9.104421,4.613520,-0.025552,-8.057277,-2.219672,6.682682,6.991155,-9.877131,-4.966900,-4.865167,5.681596,5.167175,-5.350992,-5.556384,9.427518,-9.727730,7.622824,9.811482,-0.658384,5.283745,6.981439,7.040189,6.144325,0.408401,-5.295438,-7.055408,1.873188,8.460841,8.963358,5.722623,-8.570735,-2.565816,5.781461,-8.525335,-7.320287,-6.893921,-0.709624,-1.331723,-8.725125,5.125761,1.491858,-4.172189,8.341577,-2.507311,1.828413,-2.397517,-0.128456,6.797320,-3.046986,5.078450,1.388854,-8.862873,2.409610,-1.835503,5.040804,-0.326872,7.368055,5.781044,-1.591463,6.516060,-3.207318,-3.451814,-9.857153,-4.547539,7.731801,0.351718,-9.933093,-8.183623,-3.114611,8.369710,-7.310793,-2.316082,-3.105758,-7.432559,-3.245832,-1.718729,5.690518,2.576530,-0.175974,9.383142,5.969579,5.643172,-4.573803,3.019834,-9.061038,-7.782958,-5.554185,-0.844776,9.127505,3.410901,-4.040751,-3.290818,-8.763313,9.010768,6.045171,-4.521997,-1.792394,-5.229629,5.863467,7.606100,-1.401054,-0.106349,4.756314,7.097522,-7.710661,-5.140853,-1.630471,-7.312917,-3.690575,-5.123255,-1.582220,-4.880867,-0.296415,-0.592592,-2.744902,5.328773,7.475527,8.732342,-5.568534,7.040325,1.335632,5.455120,-2.044466,9.556155,5.870348,3.537362,-4.789113,-0.322438,-6.076398,9.998736,2.354393,-1.946981,-3.023109,1.464008,-9.910830,7.890925,-1.996633,-9.062467,1.666148,7.847004,2.001276,-0.235320,-4.866840,-5.231614,4.124872,1.742186,-8.146658,-4.996404,4.503262,0.329674,-5.914033,2.342384,8.291897,-4.675048,9.397464,1.567714,-8.310895,8.064019,7.187062,8.628902,8.252681,9.156660,-2.814460,-2.638446,8.960177,-0.184182,0.216146,-6.810648,5.098264,4.479675,-2.747821,2.207254,-0.414105,8.110174,-0.593750,0.576204,4.328984,1.889696,-6.216376,0.141349,4.983188,4.064880,3.617569,6.013053,-0.778393,-5.059189,9.072439,8.581714,-7.739571,0.778089,-3.009664,-9.297346,6.545472,6.993740,0.911727,3.044259,-4.778097,9.886775,-5.792139,-1.247226,9.755137,7.411186,-8.765675,3.370063,9.393055,1.278530,9.454380,9.474546,3.618284,-0.826354,2.606172,1.132599,-1.182783,-1.418235,9.788869,-8.030660,4.444876,-1.660946,-3.720268,-0.064140,-4.719648,0.117499,8.733426,1.795067,-8.146680,0.006137,1.385330,5.987765,-4.266701,4.000160,2.898695,-1.115358,3.060462,-5.194418,-1.115351,-6.319284,4.976419,-6.531715,-2.763465,7.753989,1.501016,6.961625,-3.479697,2.890444,-9.926871,-1.124916,-6.195764,-0.734057,4.757278,1.967548,4.439167,6.685586,-4.867686,4.796196,1.687904,2.282976,4.819030,9.995864,8.905090,-6.072680,3.549913,5.095637,-0.356046,-4.913002,8.310465,0.483401,8.255053,8.886558,5.626453,-5.847017,1.426830,3.574976,-3.124919,-7.936998,0.660964,9.591747,-8.851205,-0.210562,-6.934777,-6.335249,8.133953,-8.150143,-4.471769,-8.682448,-1.715732,-4.343675,-6.022704,5.483176,6.418173,-7.826812,-3.354576,9.453296,6.107261,8.220719,-7.015820,5.677986,-7.178191,-9.108815,7.775474,-0.572641,-3.773959,1.072879,-2.537195,0.317273,6.878763,9.515775,-5.661794,-8.779653,-1.676094,7.961548,3.097351,-0.182150,8.774563,1.423489,4.740565,-2.015199,-4.444336,-2.012789,-9.041815,-0.169884]], dtype = "float32")#candidate|5938|(1, 1820)|const|float32
call_5936 = relay.TupleGetItem(func_5656_call(relay.reshape(var_5937.astype('float32'), [704,]), relay.reshape(const_5938.astype('float32'), [1820,]), ), 1)
call_5939 = relay.TupleGetItem(func_5659_call(relay.reshape(var_5937.astype('float32'), [704,]), relay.reshape(const_5938.astype('float32'), [1820,]), ), 1)
uop_5946 = relay.sin(call_5936.astype('float64')) # shape=(13, 14, 10)
uop_5948 = relay.sin(call_5939.astype('float64')) # shape=(13, 14, 10)
output = relay.Tuple([call_5926,var_5937,const_5938,uop_5946,])
output2 = relay.Tuple([call_5927,var_5937,const_5938,uop_5948,])
func_5957 = relay.Function([var_5937,], output)
mod['func_5957'] = func_5957
mod = relay.transform.InferType()(mod)
var_5958 = relay.var("var_5958", dtype = "float32", shape = (704, 1))#candidate|5958|(704, 1)|var|float32
output = func_5957(var_5958)
func_5959 = relay.Function([var_5958], output)
mutated_mod['func_5959'] = func_5959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5247_call = mod.get_global_var('func_5247')
func_5249_call = mutated_mod.get_global_var('func_5249')
call_5961 = func_5247_call()
call_5962 = func_5247_call()
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_5963 = relay.TupleGetItem(func_4535_call(), 2)
call_5964 = relay.TupleGetItem(func_4537_call(), 2)
output = relay.Tuple([call_5961,call_5963,])
output2 = relay.Tuple([call_5962,call_5964,])
func_5971 = relay.Function([], output)
mod['func_5971'] = func_5971
mod = relay.transform.InferType()(mod)
output = func_5971()
func_5972 = relay.Function([], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6004 = relay.TupleGetItem(func_4111_call(), 1)
call_6005 = relay.TupleGetItem(func_4113_call(), 1)
output = call_6004
output2 = call_6005
func_6015 = relay.Function([], output)
mod['func_6015'] = func_6015
mod = relay.transform.InferType()(mod)
output = func_6015()
func_6016 = relay.Function([], output)
mutated_mod['func_6016'] = func_6016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_6049 = relay.TupleGetItem(func_4535_call(), 2)
call_6050 = relay.TupleGetItem(func_4537_call(), 2)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
const_6054 = relay.const([[3],[4],[-2],[2],[10],[9],[1],[1],[-8],[-3],[8],[-5],[-6],[-1],[-3],[3],[-10],[4],[1],[6],[-7],[5],[3],[-6],[-5],[-1],[10],[5],[5],[3],[7],[-1],[-2],[-1],[-4],[6],[-1],[9],[-7],[2],[-6],[6],[-1],[10],[-8],[-3],[8],[4],[-3],[-4],[-9],[6],[1],[4],[4],[9],[-1],[4],[9],[9],[10],[2],[7],[9],[-8],[-5],[-5],[-9],[-10],[-4],[10],[-2],[2],[2],[-3],[-9],[-2],[10],[-5],[-9],[4],[-2],[-7],[-7],[5],[-1],[9],[-4],[3],[-4],[-7],[-9],[2],[-10],[10],[1],[-3],[5],[5],[9],[5],[3],[-7],[-7],[-4],[-7],[4],[10],[7],[4],[-9],[-3],[8],[-4],[-4],[-1],[7],[5],[2],[4],[-4],[7],[-9],[5],[-8],[5],[-4],[2],[10],[2],[-3],[3],[8],[3],[9],[-6],[-8],[-3],[1],[-5],[7],[-8],[10],[-2],[6],[-4],[-9],[-8],[-4],[-7],[-8],[-10],[-7],[5],[10],[-8],[-2],[5],[-6],[4],[-1],[2],[7],[6],[-1],[-6],[7],[9],[-8],[-3],[4],[3],[-8],[8],[7],[6],[2],[9],[8],[-1],[-10],[9],[-5],[-1],[-3],[-9],[-6],[3],[-3],[7],[-6],[-10],[-3],[-8],[-4],[-1],[7],[2],[-8],[-3],[9],[-10],[-6],[-10],[7],[-3],[-2],[-1],[-1],[7],[7],[-2],[8],[4],[-6],[9],[-1],[-10],[-1],[10]], dtype = "uint8")#candidate|6054|(220, 1)|const|uint8
call_6053 = relay.TupleGetItem(func_1638_call(relay.reshape(const_6054.astype('uint8'), [11, 5, 4]), relay.reshape(const_6054.astype('uint8'), [11, 5, 4]), ), 0)
call_6055 = relay.TupleGetItem(func_1641_call(relay.reshape(const_6054.astype('uint8'), [11, 5, 4]), relay.reshape(const_6054.astype('uint8'), [11, 5, 4]), ), 0)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_6059 = func_3166_call()
call_6060 = func_3166_call()
func_2883_call = mod.get_global_var('func_2883')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_6061 = relay.TupleGetItem(func_2883_call(), 0)
call_6062 = relay.TupleGetItem(func_2884_call(), 0)
output = relay.Tuple([call_6049,call_6053,const_6054,call_6059,call_6061,])
output2 = relay.Tuple([call_6050,call_6055,const_6054,call_6060,call_6062,])
func_6076 = relay.Function([], output)
mod['func_6076'] = func_6076
mod = relay.transform.InferType()(mod)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6076_call = mutated_mod.get_global_var('func_6076')
call_6077 = func_6076_call()
output = call_6077
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6117 = relay.var("var_6117", dtype = "uint64", shape = (5, 2, 4))#candidate|6117|(5, 2, 4)|var|uint64
var_6118 = relay.var("var_6118", dtype = "uint64", shape = (5, 2, 4))#candidate|6118|(5, 2, 4)|var|uint64
bop_6119 = relay.bitwise_xor(var_6117.astype('uint64'), relay.reshape(var_6118.astype('uint64'), relay.shape_of(var_6117))) # shape=(5, 2, 4)
bop_6130 = relay.greater(bop_6119.astype('bool'), relay.reshape(var_6117.astype('bool'), relay.shape_of(bop_6119))) # shape=(5, 2, 4)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_6135 = relay.TupleGetItem(func_3353_call(), 0)
call_6136 = relay.TupleGetItem(func_3354_call(), 0)
uop_6145 = relay.log10(bop_6130.astype('float64')) # shape=(5, 2, 4)
output = relay.Tuple([call_6135,uop_6145,])
output2 = relay.Tuple([call_6136,uop_6145,])
func_6158 = relay.Function([var_6117,var_6118,], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
var_6159 = relay.var("var_6159", dtype = "uint64", shape = (5, 2, 4))#candidate|6159|(5, 2, 4)|var|uint64
var_6160 = relay.var("var_6160", dtype = "uint64", shape = (5, 2, 4))#candidate|6160|(5, 2, 4)|var|uint64
output = func_6158(var_6159,var_6160,)
func_6161 = relay.Function([var_6159,var_6160,], output)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_6197 = func_4120_call()
call_6198 = func_4120_call()
func_3010_call = mod.get_global_var('func_3010')
func_3011_call = mutated_mod.get_global_var('func_3011')
call_6236 = relay.TupleGetItem(func_3010_call(), 0)
call_6237 = relay.TupleGetItem(func_3011_call(), 0)
output = relay.Tuple([call_6197,call_6236,])
output2 = relay.Tuple([call_6198,call_6237,])
func_6248 = relay.Function([], output)
mod['func_6248'] = func_6248
mod = relay.transform.InferType()(mod)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6249 = func_6248_call()
output = call_6249
func_6250 = relay.Function([], output)
mutated_mod['func_6250'] = func_6250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6267 = relay.var("var_6267", dtype = "int16", shape = (16, 9, 9))#candidate|6267|(16, 9, 9)|var|int16
var_6268 = relay.var("var_6268", dtype = "int16", shape = (16, 9, 9))#candidate|6268|(16, 9, 9)|var|int16
bop_6269 = relay.bitwise_xor(var_6267.astype('int16'), relay.reshape(var_6268.astype('int16'), relay.shape_of(var_6267))) # shape=(16, 9, 9)
output = bop_6269
output2 = bop_6269
func_6272 = relay.Function([var_6267,var_6268,], output)
mod['func_6272'] = func_6272
mod = relay.transform.InferType()(mod)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mutated_mod.get_global_var('func_6272')
var_6274 = relay.var("var_6274", dtype = "int16", shape = (16, 9, 9))#candidate|6274|(16, 9, 9)|var|int16
var_6275 = relay.var("var_6275", dtype = "int16", shape = (16, 9, 9))#candidate|6275|(16, 9, 9)|var|int16
call_6273 = func_6272_call(var_6274,var_6275,)
output = call_6273
func_6276 = relay.Function([var_6274,var_6275,], output)
mutated_mod['func_6276'] = func_6276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mod.get_global_var('func_5207')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_6284 = func_5207_call()
call_6285 = func_5207_call()
output = relay.Tuple([call_6284,])
output2 = relay.Tuple([call_6285,])
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6328_call = mutated_mod.get_global_var('func_6328')
call_6329 = func_6328_call()
output = call_6329
func_6330 = relay.Function([], output)
mutated_mod['func_6330'] = func_6330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6015_call = mod.get_global_var('func_6015')
func_6016_call = mutated_mod.get_global_var('func_6016')
call_6348 = func_6015_call()
call_6349 = func_6015_call()
func_2924_call = mod.get_global_var('func_2924')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_6350 = relay.TupleGetItem(func_2924_call(), 0)
call_6351 = relay.TupleGetItem(func_2925_call(), 0)
uop_6359 = relay.cosh(call_6348.astype('float64')) # shape=(13, 14, 10)
uop_6361 = relay.cosh(call_6349.astype('float64')) # shape=(13, 14, 10)
bop_6388 = relay.less_equal(call_6348.astype('bool'), relay.reshape(uop_6359.astype('bool'), relay.shape_of(call_6348))) # shape=(13, 14, 10)
bop_6391 = relay.less_equal(call_6349.astype('bool'), relay.reshape(uop_6361.astype('bool'), relay.shape_of(call_6349))) # shape=(13, 14, 10)
output = relay.Tuple([call_6350,bop_6388,])
output2 = relay.Tuple([call_6351,bop_6391,])
func_6396 = relay.Function([], output)
mod['func_6396'] = func_6396
mod = relay.transform.InferType()(mod)
output = func_6396()
func_6397 = relay.Function([], output)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6424 = relay.var("var_6424", dtype = "float32", shape = (2, 10))#candidate|6424|(2, 10)|var|float32
uop_6425 = relay.asin(var_6424.astype('float32')) # shape=(2, 10)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_6431 = relay.TupleGetItem(func_2637_call(), 2)
call_6432 = relay.TupleGetItem(func_2638_call(), 2)
output = relay.Tuple([uop_6425,call_6431,])
output2 = relay.Tuple([uop_6425,call_6432,])
func_6442 = relay.Function([var_6424,], output)
mod['func_6442'] = func_6442
mod = relay.transform.InferType()(mod)
var_6443 = relay.var("var_6443", dtype = "float32", shape = (2, 10))#candidate|6443|(2, 10)|var|float32
output = func_6442(var_6443)
func_6444 = relay.Function([var_6443], output)
mutated_mod['func_6444'] = func_6444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_6476 = relay.TupleGetItem(func_4177_call(), 1)
call_6477 = relay.TupleGetItem(func_4179_call(), 1)
output = relay.Tuple([call_6476,])
output2 = relay.Tuple([call_6477,])
func_6489 = relay.Function([], output)
mod['func_6489'] = func_6489
mod = relay.transform.InferType()(mod)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6489_call = mutated_mod.get_global_var('func_6489')
call_6490 = func_6489_call()
output = call_6490
func_6491 = relay.Function([], output)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_6520 = relay.TupleGetItem(func_2739_call(), 0)
call_6521 = relay.TupleGetItem(func_2740_call(), 0)
output = relay.Tuple([call_6520,])
output2 = relay.Tuple([call_6521,])
func_6568 = relay.Function([], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
output = func_6568()
func_6569 = relay.Function([], output)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6570 = relay.TupleGetItem(func_4111_call(), 1)
call_6571 = relay.TupleGetItem(func_4113_call(), 1)
uop_6577 = relay.sqrt(call_6570.astype('float32')) # shape=(13, 14, 10)
uop_6579 = relay.sqrt(call_6571.astype('float32')) # shape=(13, 14, 10)
output = uop_6577
output2 = uop_6579
func_6581 = relay.Function([], output)
mod['func_6581'] = func_6581
mod = relay.transform.InferType()(mod)
output = func_6581()
func_6582 = relay.Function([], output)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_6723 = relay.TupleGetItem(func_2435_call(), 0)
call_6724 = relay.TupleGetItem(func_2436_call(), 0)
func_568_call = mod.get_global_var('func_568')
func_571_call = mutated_mod.get_global_var('func_571')
const_6729 = relay.const([8,9,-2,5,-8,-3,9,1,-9,-5,10,-1,3,9,4,10,-4,1,9,-3,7,6,-5,-1,3,-5,9,9,-3,-1,-10,8,1,2,-7,7,-9,9,3,-10,-5,9,-3,5,9,-5,-8,-3,-4,9,7,3,-2,-2,10,1,-9,9,-9,9,2,-4,-9,-9,1,-2,5,-4,8,2,-2,-5,-1,4,-1,-7,9,3,-10,8,-10,8,6,2,10,5,-5,4,7,8,-2,-10,6,-6,-6,8,5,-1,9,-8,-7,2,3,10,3,9,2,-4,-5,-7,-5,6,8,-4,1,8,4,10,4,-9,-7,-2,-10,-9,9,5,-8,5,-8,-5,-10,7,-2,3,-8,-5,-1,-5,-3,5,10,-5,10,-6,-10,9,5,6,-4,3,9,10,5,2,-10,8,-6,-10,-5,-7,9,-7,-4,2,-9,-2,5,2,-7,-5,-1,9,-8,-8,-7,-9,2,5,-8,6,3,8,9,-5,-4,5,5,-5,-7,9,-9,-4,-6,-9,-5,-2,2,-6,1,9,-4,-3,2,-4,-2,-3,-1,1,6,-2,4,9,5,9,9,-1,6,-3,-1,-5,10,-3,-7,-10,6,-3,-7,8,-10,-8,-7,-5,5,9,-7,-9,6,-9,8,-5,-1,-7,-1,-10,10,-3,9,9,-5,9,7,-8,2,8,-7,6,-1,8,-6,4,-6,-4,-4,8,3,1,9,-5,-9,3,-5,-5,4,8,-4,9,-1,7,-7,-7,4,4,-9,6,-1,-5,-10,1,-6,5,3,-1,6,-2,-3,-5,8,4,-8,7,-7,-4,-5,-2,-3,-2,-10,3,-1,9,1,-4,-5,8,7,5,-8,-3,-3,7,-2,6,-3,8,-1,9,4,3,-2,-5,4,4,-8,-8,-2,8], dtype = "int8")#candidate|6729|(336,)|const|int8
call_6728 = func_568_call(relay.reshape(const_6729.astype('int8'), [7, 16, 3]), relay.reshape(const_6729.astype('int8'), [7, 16, 3]), )
call_6730 = func_568_call(relay.reshape(const_6729.astype('int8'), [7, 16, 3]), relay.reshape(const_6729.astype('int8'), [7, 16, 3]), )
output = relay.Tuple([call_6723,call_6728,const_6729,])
output2 = relay.Tuple([call_6724,call_6730,const_6729,])
func_6731 = relay.Function([], output)
mod['func_6731'] = func_6731
mod = relay.transform.InferType()(mod)
mutated_mod['func_6731'] = func_6731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6731_call = mutated_mod.get_global_var('func_6731')
call_6732 = func_6731_call()
output = call_6732
func_6733 = relay.Function([], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_6751 = relay.TupleGetItem(func_4620_call(), 1)
call_6752 = relay.TupleGetItem(func_4622_call(), 1)
output = call_6751
output2 = call_6752
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
output = func_6755()
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6489_call = mod.get_global_var('func_6489')
func_6491_call = mutated_mod.get_global_var('func_6491')
call_6779 = relay.TupleGetItem(func_6489_call(), 0)
call_6780 = relay.TupleGetItem(func_6491_call(), 0)
output = relay.Tuple([call_6779,])
output2 = relay.Tuple([call_6780,])
func_6799 = relay.Function([], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6799_call = mutated_mod.get_global_var('func_6799')
call_6800 = func_6799_call()
output = call_6800
func_6801 = relay.Function([], output)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5247_call = mod.get_global_var('func_5247')
func_5249_call = mutated_mod.get_global_var('func_5249')
call_6848 = func_5247_call()
call_6849 = func_5247_call()
output = relay.Tuple([call_6848,])
output2 = relay.Tuple([call_6849,])
func_6850 = relay.Function([], output)
mod['func_6850'] = func_6850
mod = relay.transform.InferType()(mod)
output = func_6850()
func_6851 = relay.Function([], output)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_6858 = func_5593_call()
call_6859 = func_5593_call()
func_3385_call = mod.get_global_var('func_3385')
func_3390_call = mutated_mod.get_global_var('func_3390')
var_6861 = relay.var("var_6861", dtype = "int64", shape = (117, 2))#candidate|6861|(117, 2)|var|int64
const_6862 = relay.const([[1,-3,3,6,-4,-2,-7,-4,7,-9,-2,-10,1,1,1,10,-7,6,8,-4,4,-9,-6,-8,-2,8,4,-10,5,2,1,7,-7,-10,4,7,9,9,-8,8,5,-4,3,1,-7,3,7,6,4,10,7,6,-3,3,1,3,-7,-3,3,10],[1,8,5,3,-9,7,-8,3,-5,5,8,-2,-5,7,2,-5,-3,10,-8,-9,-6,2,9,-7,2,2,10,-6,10,-2,-3,5,2,5,-8,5,-3,8,-2,6,-7,-5,4,-1,-7,9,1,-7,7,1,8,-9,-4,-5,-2,-2,1,7,1,10],[-2,-7,2,6,-5,7,4,8,-3,-4,-4,-7,6,-10,3,-4,-10,-9,-6,-2,-1,-6,-4,-3,-7,-3,5,-6,3,9,-8,2,7,-10,6,4,2,-2,-6,5,-4,-4,8,2,-6,9,6,-1,3,-6,5,6,-1,6,-3,-3,-9,6,7,-3]], dtype = "int16")#candidate|6862|(3, 60)|const|int16
var_6863 = relay.var("var_6863", dtype = "uint8", shape = (220,))#candidate|6863|(220,)|var|uint8
call_6860 = relay.TupleGetItem(func_3385_call(relay.reshape(var_6861.astype('int64'), [234,]), relay.reshape(const_6862.astype('int16'), [180,]), relay.reshape(var_6863.astype('uint8'), [220,]), ), 5)
call_6864 = relay.TupleGetItem(func_3390_call(relay.reshape(var_6861.astype('int64'), [234,]), relay.reshape(const_6862.astype('int16'), [180,]), relay.reshape(var_6863.astype('uint8'), [220,]), ), 5)
func_5971_call = mod.get_global_var('func_5971')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_6867 = relay.TupleGetItem(func_5971_call(), 1)
call_6868 = relay.TupleGetItem(func_5972_call(), 1)
func_2474_call = mod.get_global_var('func_2474')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_6876 = func_2474_call()
call_6877 = func_2474_call()
uop_6878 = relay.sinh(var_6863.astype('float32')) # shape=(220,)
output = relay.Tuple([call_6858,call_6860,var_6861,const_6862,call_6867,call_6876,uop_6878,])
output2 = relay.Tuple([call_6859,call_6864,var_6861,const_6862,call_6868,call_6877,uop_6878,])
func_6896 = relay.Function([var_6861,var_6863,], output)
mod['func_6896'] = func_6896
mod = relay.transform.InferType()(mod)
mutated_mod['func_6896'] = func_6896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6896_call = mutated_mod.get_global_var('func_6896')
var_6898 = relay.var("var_6898", dtype = "int64", shape = (117, 2))#candidate|6898|(117, 2)|var|int64
var_6899 = relay.var("var_6899", dtype = "uint8", shape = (220,))#candidate|6899|(220,)|var|uint8
call_6897 = func_6896_call(var_6898,var_6899,)
output = call_6897
func_6900 = relay.Function([var_6898,var_6899,], output)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3822_call = mod.get_global_var('func_3822')
func_3824_call = mutated_mod.get_global_var('func_3824')
call_6934 = func_3822_call()
call_6935 = func_3822_call()
func_2397_call = mod.get_global_var('func_2397')
func_2401_call = mutated_mod.get_global_var('func_2401')
const_6942 = relay.const(2, dtype = "int32")#candidate|6942|()|const|int32
var_6943 = relay.var("var_6943", dtype = "uint8", shape = (5, 44))#candidate|6943|(5, 44)|var|uint8
call_6941 = relay.TupleGetItem(func_2397_call(relay.reshape(const_6942.astype('int32'), []), relay.reshape(var_6943.astype('uint8'), [5, 44]), ), 4)
call_6944 = relay.TupleGetItem(func_2401_call(relay.reshape(const_6942.astype('int32'), []), relay.reshape(var_6943.astype('uint8'), [5, 44]), ), 4)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_6964 = func_2860_call()
call_6965 = func_2860_call()
output = relay.Tuple([call_6934,call_6941,const_6942,var_6943,call_6964,])
output2 = relay.Tuple([call_6935,call_6944,const_6942,var_6943,call_6965,])
func_6967 = relay.Function([var_6943,], output)
mod['func_6967'] = func_6967
mod = relay.transform.InferType()(mod)
var_6968 = relay.var("var_6968", dtype = "uint8", shape = (5, 44))#candidate|6968|(5, 44)|var|uint8
output = func_6967(var_6968)
func_6969 = relay.Function([var_6968], output)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6581_call = mod.get_global_var('func_6581')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_7090 = func_6581_call()
call_7091 = func_6581_call()
var_7111 = relay.var("var_7111", dtype = "float32", shape = (13, 14, 10))#candidate|7111|(13, 14, 10)|var|float32
bop_7112 = relay.subtract(call_7090.astype('int32'), relay.reshape(var_7111.astype('int32'), relay.shape_of(call_7090))) # shape=(13, 14, 10)
bop_7115 = relay.subtract(call_7091.astype('int32'), relay.reshape(var_7111.astype('int32'), relay.shape_of(call_7091))) # shape=(13, 14, 10)
bop_7124 = relay.left_shift(bop_7112.astype('int8'), relay.reshape(call_7090.astype('int8'), relay.shape_of(bop_7112))) # shape=(13, 14, 10)
bop_7127 = relay.left_shift(bop_7115.astype('int8'), relay.reshape(call_7091.astype('int8'), relay.shape_of(bop_7115))) # shape=(13, 14, 10)
bop_7145 = relay.minimum(var_7111.astype('float32'), relay.reshape(bop_7124.astype('float32'), relay.shape_of(var_7111))) # shape=(13, 14, 10)
bop_7148 = relay.minimum(var_7111.astype('float32'), relay.reshape(bop_7127.astype('float32'), relay.shape_of(var_7111))) # shape=(13, 14, 10)
output = bop_7145
output2 = bop_7148
func_7167 = relay.Function([var_7111,], output)
mod['func_7167'] = func_7167
mod = relay.transform.InferType()(mod)
var_7168 = relay.var("var_7168", dtype = "float32", shape = (13, 14, 10))#candidate|7168|(13, 14, 10)|var|float32
output = func_7167(var_7168)
func_7169 = relay.Function([var_7168], output)
mutated_mod['func_7169'] = func_7169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_7229 = relay.TupleGetItem(func_4111_call(), 0)
call_7230 = relay.TupleGetItem(func_4113_call(), 0)
output = call_7229
output2 = call_7230
func_7236 = relay.Function([], output)
mod['func_7236'] = func_7236
mod = relay.transform.InferType()(mod)
output = func_7236()
func_7237 = relay.Function([], output)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_7244 = relay.TupleGetItem(func_2435_call(), 0)
call_7245 = relay.TupleGetItem(func_2436_call(), 0)
func_5409_call = mod.get_global_var('func_5409')
func_5412_call = mutated_mod.get_global_var('func_5412')
var_7278 = relay.var("var_7278", dtype = "float64", shape = (112,))#candidate|7278|(112,)|var|float64
call_7277 = relay.TupleGetItem(func_5409_call(relay.reshape(var_7278.astype('float64'), [4, 2, 14])), 1)
call_7279 = relay.TupleGetItem(func_5412_call(relay.reshape(var_7278.astype('float64'), [4, 2, 14])), 1)
output = relay.Tuple([call_7244,call_7277,var_7278,])
output2 = relay.Tuple([call_7245,call_7279,var_7278,])
func_7287 = relay.Function([var_7278,], output)
mod['func_7287'] = func_7287
mod = relay.transform.InferType()(mod)
var_7288 = relay.var("var_7288", dtype = "float64", shape = (112,))#candidate|7288|(112,)|var|float64
output = func_7287(var_7288)
func_7289 = relay.Function([var_7288], output)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_7313 = relay.TupleGetItem(func_3353_call(), 0)
call_7314 = relay.TupleGetItem(func_3354_call(), 0)
func_4940_call = mod.get_global_var('func_4940')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_7324 = func_4940_call()
call_7325 = func_4940_call()
output = relay.Tuple([call_7313,call_7324,])
output2 = relay.Tuple([call_7314,call_7325,])
func_7339 = relay.Function([], output)
mod['func_7339'] = func_7339
mod = relay.transform.InferType()(mod)
output = func_7339()
func_7340 = relay.Function([], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5118_call = mod.get_global_var('func_5118')
func_5120_call = mutated_mod.get_global_var('func_5120')
call_7373 = func_5118_call()
call_7374 = func_5118_call()
output = relay.Tuple([call_7373,])
output2 = relay.Tuple([call_7374,])
func_7394 = relay.Function([], output)
mod['func_7394'] = func_7394
mod = relay.transform.InferType()(mod)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7394_call = mutated_mod.get_global_var('func_7394')
call_7395 = func_7394_call()
output = call_7395
func_7396 = relay.Function([], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_7397 = relay.TupleGetItem(func_4111_call(), 0)
call_7398 = relay.TupleGetItem(func_4113_call(), 0)
output = relay.Tuple([call_7397,])
output2 = relay.Tuple([call_7398,])
func_7415 = relay.Function([], output)
mod['func_7415'] = func_7415
mod = relay.transform.InferType()(mod)
output = func_7415()
func_7416 = relay.Function([], output)
mutated_mod['func_7416'] = func_7416
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7417 = relay.const([[[1.975829,0.790528,-3.751034,-8.192842,6.603258,4.303160,5.801705,-4.265195],[-5.096015,6.773817,-1.512926,1.891646,-9.637797,-4.867376,-7.306535,-1.425427]],[[6.408956,-5.326758,8.475878,-8.386239,6.361411,4.386667,-3.091661,-2.596923],[-2.877951,-6.314414,2.297800,3.341617,5.629016,-0.122936,2.772510,6.663518]],[[-0.489677,-0.907891,-5.497321,-7.856159,6.256255,7.645202,-6.669950,-9.093502],[2.003895,4.187910,-3.296044,-0.652310,9.215670,9.231955,8.153476,1.231917]],[[-8.873509,-8.111028,0.055219,-3.216524,-9.827969,-4.830661,-3.256979,4.766367],[4.616411,-1.269919,8.044040,4.184205,-8.520067,-1.783684,3.204943,9.151229]]], dtype = "float64")#candidate|7417|(4, 2, 8)|const|float64
uop_7418 = relay.log2(const_7417.astype('float64')) # shape=(4, 2, 8)
uop_7424 = relay.log(uop_7418.astype('float64')) # shape=(4, 2, 8)
bop_7429 = relay.logical_xor(uop_7424.astype('int64'), relay.reshape(uop_7418.astype('int64'), relay.shape_of(uop_7424))) # shape=(4, 2, 8)
bop_7437 = relay.left_shift(const_7417.astype('uint8'), relay.reshape(bop_7429.astype('uint8'), relay.shape_of(const_7417))) # shape=(4, 2, 8)
bop_7446 = relay.not_equal(bop_7429.astype('bool'), relay.reshape(const_7417.astype('bool'), relay.shape_of(bop_7429))) # shape=(4, 2, 8)
output = relay.Tuple([bop_7437,bop_7446,])
output2 = relay.Tuple([bop_7437,bop_7446,])
func_7449 = relay.Function([], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
output = func_7449()
func_7450 = relay.Function([], output)
mutated_mod['func_7450'] = func_7450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mod.get_global_var('func_3068')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_7487 = relay.TupleGetItem(func_3068_call(), 0)
call_7488 = relay.TupleGetItem(func_3070_call(), 0)
func_4765_call = mod.get_global_var('func_4765')
func_4767_call = mutated_mod.get_global_var('func_4767')
call_7500 = relay.TupleGetItem(func_4765_call(), 1)
call_7501 = relay.TupleGetItem(func_4767_call(), 1)
output = relay.Tuple([call_7487,call_7500,])
output2 = relay.Tuple([call_7488,call_7501,])
func_7507 = relay.Function([], output)
mod['func_7507'] = func_7507
mod = relay.transform.InferType()(mod)
mutated_mod['func_7507'] = func_7507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7507_call = mutated_mod.get_global_var('func_7507')
call_7508 = func_7507_call()
output = call_7508
func_7509 = relay.Function([], output)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3068_call = mod.get_global_var('func_3068')
func_3070_call = mutated_mod.get_global_var('func_3070')
call_7515 = relay.TupleGetItem(func_3068_call(), 1)
call_7516 = relay.TupleGetItem(func_3070_call(), 1)
output = relay.Tuple([call_7515,])
output2 = relay.Tuple([call_7516,])
func_7520 = relay.Function([], output)
mod['func_7520'] = func_7520
mod = relay.transform.InferType()(mod)
output = func_7520()
func_7521 = relay.Function([], output)
mutated_mod['func_7521'] = func_7521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_7599 = relay.TupleGetItem(func_4111_call(), 0)
call_7600 = relay.TupleGetItem(func_4113_call(), 0)
output = call_7599
output2 = call_7600
func_7602 = relay.Function([], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
output = func_7602()
func_7603 = relay.Function([], output)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3327_call = mod.get_global_var('func_3327')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_7630 = relay.TupleGetItem(func_3327_call(), 0)
call_7631 = relay.TupleGetItem(func_3329_call(), 0)
output = relay.Tuple([call_7630,])
output2 = relay.Tuple([call_7631,])
func_7647 = relay.Function([], output)
mod['func_7647'] = func_7647
mod = relay.transform.InferType()(mod)
mutated_mod['func_7647'] = func_7647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mutated_mod.get_global_var('func_7647')
call_7648 = func_7647_call()
output = call_7648
func_7649 = relay.Function([], output)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5562_call = mod.get_global_var('func_5562')
func_5563_call = mutated_mod.get_global_var('func_5563')
call_7650 = relay.TupleGetItem(func_5562_call(), 0)
call_7651 = relay.TupleGetItem(func_5563_call(), 0)
output = call_7650
output2 = call_7651
func_7662 = relay.Function([], output)
mod['func_7662'] = func_7662
mod = relay.transform.InferType()(mod)
mutated_mod['func_7662'] = func_7662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7662_call = mutated_mod.get_global_var('func_7662')
call_7663 = func_7662_call()
output = call_7663
func_7664 = relay.Function([], output)
mutated_mod['func_7664'] = func_7664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mod.get_global_var('func_7449')
func_7450_call = mutated_mod.get_global_var('func_7450')
call_7715 = relay.TupleGetItem(func_7449_call(), 1)
call_7716 = relay.TupleGetItem(func_7450_call(), 1)
func_5971_call = mod.get_global_var('func_5971')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_7735 = relay.TupleGetItem(func_5971_call(), 1)
call_7736 = relay.TupleGetItem(func_5972_call(), 1)
output = relay.Tuple([call_7715,call_7735,])
output2 = relay.Tuple([call_7716,call_7736,])
func_7757 = relay.Function([], output)
mod['func_7757'] = func_7757
mod = relay.transform.InferType()(mod)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7757_call = mutated_mod.get_global_var('func_7757')
call_7758 = func_7757_call()
output = call_7758
func_7759 = relay.Function([], output)
mutated_mod['func_7759'] = func_7759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_7799 = relay.TupleGetItem(func_4177_call(), 2)
call_7800 = relay.TupleGetItem(func_4179_call(), 2)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_7805 = func_5593_call()
call_7806 = func_5593_call()
func_3385_call = mod.get_global_var('func_3385')
func_3390_call = mutated_mod.get_global_var('func_3390')
const_7850 = relay.const([[-2,4],[4,1],[-8,-6],[-8,4],[1,-5],[-3,2],[-10,-10],[8,6],[-9,-3],[-4,-7],[-3,-5],[-10,-2],[-10,-5],[7,1],[-10,-4],[-3,2],[3,-8],[-10,-9],[8,3],[-6,8],[4,-7],[9,-2],[-2,-9],[9,8],[-5,-8],[1,-9],[3,4],[-8,5],[4,-7],[-1,3],[-5,8],[-4,-5],[3,5],[3,1],[-7,-7],[-9,-9],[4,7],[-6,9],[-3,-7],[-5,7],[8,-2],[-7,8],[9,-8],[-8,3],[-6,-9],[1,4],[-7,2],[-5,-10],[2,-5],[4,-10],[1,-3],[-9,-4],[5,7],[-3,3],[-4,-2],[5,-2],[-5,-3],[-4,-3],[-4,-5],[1,8],[-3,5],[6,6],[4,-8],[1,5],[9,-4],[-2,8],[-3,9],[-2,-3],[1,-9],[-5,-8],[-4,-7],[8,-10],[9,-10],[2,7],[10,-1],[-2,-7],[10,4],[10,6],[10,-8],[3,-7],[-3,3],[4,-3],[5,-7],[6,-2],[10,4],[9,4],[3,-10],[-2,-1],[4,2],[-4,-2],[-7,-8],[5,-1],[-9,6],[7,9],[-2,6],[-4,10],[-3,-5],[5,7],[-10,-7],[8,-1],[5,3],[7,-1],[1,-4],[-6,-4],[-7,5],[-8,-4],[-9,5],[-8,-2],[-6,-2],[9,6],[3,-4],[6,-8],[-8,-3],[-7,-7],[7,-2],[10,6],[1,1]], dtype = "int64")#candidate|7850|(117, 2)|const|int64
const_7851 = relay.const([9,-8,-7,-4,7,9,-8,-6,-3,-9,-8,2,-9,3,-4,-8,6,-9,-10,9,-3,-7,7,10,-6,8,9,7,-5,-7,-7,-4,-1,-8,-4,-8,7,1,-9,-7,-9,-9,7,6,6,-10,8,-8,5,-4,2,7,9,7,-9,5,1,4,-9,9,4,8,3,5,-1,8,-10,7,3,9,10,9,7,-1,-4,2,2,-3,8,-3,-8,-6,-8,-10,-9,-2,-3,2,6,6,6,9,-10,2,-4,-8,-8,1,-7,6,9,5,-2,-2,10,8,10,5,2,9,-6,8,-3,-1,-9,-6,-8,-2,10,7,-4,8,-2,3,2,-2,8,2,9,2,10,-8,-1,-7,6,2,8,-3,3,-6,9,1,10,-9,-7,-8,-2,-7,9,-5,7,5,5,8,6,-3,6,2,-9,6,5,7,2,-10,6,-8,-1,2,10,8,-6,1,-6,7,-6,-5,8,-6,-4,3], dtype = "int16")#candidate|7851|(180,)|const|int16
var_7852 = relay.var("var_7852", dtype = "uint8", shape = (1, 220))#candidate|7852|(1, 220)|var|uint8
call_7849 = relay.TupleGetItem(func_3385_call(relay.reshape(const_7850.astype('int64'), [234,]), relay.reshape(const_7851.astype('int16'), [180,]), relay.reshape(var_7852.astype('uint8'), [220,]), ), 5)
call_7853 = relay.TupleGetItem(func_3390_call(relay.reshape(const_7850.astype('int64'), [234,]), relay.reshape(const_7851.astype('int16'), [180,]), relay.reshape(var_7852.astype('uint8'), [220,]), ), 5)
output = relay.Tuple([call_7799,call_7805,call_7849,const_7850,const_7851,var_7852,])
output2 = relay.Tuple([call_7800,call_7806,call_7853,const_7850,const_7851,var_7852,])
func_7864 = relay.Function([var_7852,], output)
mod['func_7864'] = func_7864
mod = relay.transform.InferType()(mod)
var_7865 = relay.var("var_7865", dtype = "uint8", shape = (1, 220))#candidate|7865|(1, 220)|var|uint8
output = func_7864(var_7865)
func_7866 = relay.Function([var_7865], output)
mutated_mod['func_7866'] = func_7866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7882 = relay.TupleGetItem(func_7647_call(), 0)
call_7883 = relay.TupleGetItem(func_7649_call(), 0)
func_5247_call = mod.get_global_var('func_5247')
func_5249_call = mutated_mod.get_global_var('func_5249')
call_7901 = func_5247_call()
call_7902 = func_5247_call()
output = relay.Tuple([call_7882,call_7901,])
output2 = relay.Tuple([call_7883,call_7902,])
func_7907 = relay.Function([], output)
mod['func_7907'] = func_7907
mod = relay.transform.InferType()(mod)
mutated_mod['func_7907'] = func_7907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7907_call = mutated_mod.get_global_var('func_7907')
call_7908 = func_7907_call()
output = call_7908
func_7909 = relay.Function([], output)
mutated_mod['func_7909'] = func_7909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_7947 = func_3757_call()
call_7948 = func_3757_call()
output = relay.Tuple([call_7947,])
output2 = relay.Tuple([call_7948,])
func_7949 = relay.Function([], output)
mod['func_7949'] = func_7949
mod = relay.transform.InferType()(mod)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7949_call = mutated_mod.get_global_var('func_7949')
call_7950 = func_7949_call()
output = call_7950
func_7951 = relay.Function([], output)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_8069 = relay.TupleGetItem(func_7647_call(), 0)
call_8070 = relay.TupleGetItem(func_7649_call(), 0)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_8079 = relay.TupleGetItem(func_4535_call(), 0)
call_8080 = relay.TupleGetItem(func_4537_call(), 0)
output = relay.Tuple([call_8069,call_8079,])
output2 = relay.Tuple([call_8070,call_8080,])
func_8081 = relay.Function([], output)
mod['func_8081'] = func_8081
mod = relay.transform.InferType()(mod)
output = func_8081()
func_8082 = relay.Function([], output)
mutated_mod['func_8082'] = func_8082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2272_call = mutated_mod.get_global_var('func_2272')
call_8102 = func_2271_call()
call_8103 = func_2271_call()
func_6076_call = mod.get_global_var('func_6076')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_8107 = relay.TupleGetItem(func_6076_call(), 1)
call_8108 = relay.TupleGetItem(func_6078_call(), 1)
output = relay.Tuple([call_8102,call_8107,])
output2 = relay.Tuple([call_8103,call_8108,])
func_8113 = relay.Function([], output)
mod['func_8113'] = func_8113
mod = relay.transform.InferType()(mod)
mutated_mod['func_8113'] = func_8113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8113_call = mutated_mod.get_global_var('func_8113')
call_8114 = func_8113_call()
output = call_8114
func_8115 = relay.Function([], output)
mutated_mod['func_8115'] = func_8115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8119 = relay.var("var_8119", dtype = "float32", shape = (4, 14, 6))#candidate|8119|(4, 14, 6)|var|float32
uop_8120 = relay.log2(var_8119.astype('float32')) # shape=(4, 14, 6)
func_8081_call = mod.get_global_var('func_8081')
func_8082_call = mutated_mod.get_global_var('func_8082')
call_8128 = relay.TupleGetItem(func_8081_call(), 0)
call_8129 = relay.TupleGetItem(func_8082_call(), 0)
var_8132 = relay.var("var_8132", dtype = "float32", shape = (4, 14, 6))#candidate|8132|(4, 14, 6)|var|float32
bop_8133 = relay.logical_xor(var_8119.astype('int8'), relay.reshape(var_8132.astype('int8'), relay.shape_of(var_8119))) # shape=(4, 14, 6)
bop_8140 = relay.less_equal(bop_8133.astype('bool'), relay.reshape(uop_8120.astype('bool'), relay.shape_of(bop_8133))) # shape=(4, 14, 6)
output = relay.Tuple([call_8128,bop_8140,])
output2 = relay.Tuple([call_8129,bop_8140,])
func_8150 = relay.Function([var_8119,var_8132,], output)
mod['func_8150'] = func_8150
mod = relay.transform.InferType()(mod)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mutated_mod.get_global_var('func_8150')
var_8152 = relay.var("var_8152", dtype = "float32", shape = (4, 14, 6))#candidate|8152|(4, 14, 6)|var|float32
var_8153 = relay.var("var_8153", dtype = "float32", shape = (4, 14, 6))#candidate|8153|(4, 14, 6)|var|float32
call_8151 = func_8150_call(var_8152,var_8153,)
output = call_8151
func_8154 = relay.Function([var_8152,var_8153,], output)
mutated_mod['func_8154'] = func_8154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6755_call = mod.get_global_var('func_6755')
func_6756_call = mutated_mod.get_global_var('func_6756')
call_8156 = func_6755_call()
call_8157 = func_6755_call()
func_969_call = mod.get_global_var('func_969')
func_973_call = mutated_mod.get_global_var('func_973')
const_8176 = relay.const([-9,7,-9,1,-1,3,-8,-1,-5,4,9,2,-4,6,-3,-6,-4,-4,-6,-1,7,-6,4,-7,6,-6,1,10,4,9,-7,-10,8,5,10,2,1,-4,5,3,3,6,-7,9,-4,-9,-3,-5,-4,6,6,1,4,-2,9,2,-5,7,-7,-3,7,6,-10,1,-1,8,-3,-5,-8,-7,4,-8,10,-9,4,-9,-4,10,-6,-10,8,-4,-10,-1,8,3,9,-1,9,-5,-1,-3,-9,-9,-4,2,6,4,-7,-2,2,6,-1,10,6,4,-2,-10,-9,-8,7,-6,5,9,-4,-6,-10,-10,1,10,7,-7,-2,2,8,-6,-9,10,-2,-6,1,3,-8,10,-2,9,8,-8,4,2,9,7,-10,-2,5,7,1,7,2,1,10,3,5,-8,3,-1,10,10,4,-2,-9,-4,10,10,-1,-6,-10,-8,-4,3,8,10,3,-10,2,-7,5,-9,-5,9,-9,-6,7,3,-2,-7,-4,10,8,6,4,-9,7,3,9,7,-8,7,8,-7,10,-1,-2,2,1,-8,-1,3,4,-1,10,3,2,-5,3,1,5,-8,10,-5,-9,-3,9,-10,4,10,-1,1,-4,-6,-6,10,8,8,-7,-9,7,9,-10,3,-2,7,5,-1,-4,-5,3,-4,1,-10,-7,7,1,-2,-6,-4,-7,4,-8,-10,-1,7,-8,8,2,-10,-5,3,-6,10,9,10,6,7,-8,-8,-9,6,5,9,-10,-6,-9,-4,5,4,-7,-7,10,-6,-10,9,9,-9,9,-2,8,-5,-1,9,-10,-8,-9,9,9,-8,-10,-8,-2,5,-4,2,7,6,-4,-1,-10,-3,-6,-8,6,3,5,-6,8,-10,-10,-4,-8,6,5,-8,8,4,2,8], dtype = "uint32")#candidate|8176|(336,)|const|uint32
const_8177 = relay.const(-7, dtype = "int32")#candidate|8177|()|const|int32
call_8175 = relay.TupleGetItem(func_969_call(relay.reshape(const_8176.astype('uint32'), [12, 2, 14]), relay.reshape(const_8176.astype('uint32'), [12, 2, 14]), relay.reshape(const_8177.astype('int32'), []), ), 2)
call_8178 = relay.TupleGetItem(func_973_call(relay.reshape(const_8176.astype('uint32'), [12, 2, 14]), relay.reshape(const_8176.astype('uint32'), [12, 2, 14]), relay.reshape(const_8177.astype('int32'), []), ), 2)
output = relay.Tuple([call_8156,call_8175,const_8176,const_8177,])
output2 = relay.Tuple([call_8157,call_8178,const_8176,const_8177,])
func_8194 = relay.Function([], output)
mod['func_8194'] = func_8194
mod = relay.transform.InferType()(mod)
output = func_8194()
func_8195 = relay.Function([], output)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mod.get_global_var('func_5207')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_8196 = func_5207_call()
call_8197 = func_5207_call()
output = relay.Tuple([call_8196,])
output2 = relay.Tuple([call_8197,])
func_8201 = relay.Function([], output)
mod['func_8201'] = func_8201
mod = relay.transform.InferType()(mod)
mutated_mod['func_8201'] = func_8201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8201_call = mutated_mod.get_global_var('func_8201')
call_8202 = func_8201_call()
output = call_8202
func_8203 = relay.Function([], output)
mutated_mod['func_8203'] = func_8203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_8207 = relay.TupleGetItem(func_2637_call(), 2)
call_8208 = relay.TupleGetItem(func_2638_call(), 2)
func_2773_call = mod.get_global_var('func_2773')
func_2776_call = mutated_mod.get_global_var('func_2776')
const_8215 = relay.const([[-7.147195,6.733018,-0.431810,7.114275,9.114385,2.567165,-1.074143,4.115903,-6.537278,6.649806,8.289060,7.313568,6.413033,8.519520,9.105148,5.363546,4.641131,2.891942,8.268580,-4.819211,2.527314,-4.688079,4.570531,-0.826627,-3.208585,-2.014372,-3.881638,9.207581,4.489380,8.470866,-6.422662,-6.149377,6.744928,8.338978,-8.263897,7.448397,-5.237911,-8.761922,-1.746154,1.127912,-4.070255,-0.126165,9.480394,-3.405392,-5.499985,-2.673680,-7.649135,-1.122167,-8.008882,-1.799066,9.983627,-5.191883,-9.908203,4.555843,9.413848,1.882441,2.631174,-7.359133,-6.401656,7.762810,-4.599972,0.536580,-1.817071,-5.056372,3.220478,-0.379341,1.850229,-5.144813,5.043425,-0.668736,0.110505,-0.710375,3.795042,7.507002,6.487158,-9.142776,-1.716686,-8.834383,0.241444,-1.255995,-6.175376,-4.816088,8.321674,7.408602,-1.936547,-0.431462,2.649754,-3.600088,0.067459,-2.264132,-6.838095,0.373238,-4.535923,-9.074345,-8.491067,6.328343,7.901249,-6.196896,-3.273486,6.764628,1.258322,-7.450968,-9.350520,7.704646,2.596902,-3.099358,-5.132824,-6.700638,1.913472,5.533605,1.126647,-5.368102,-3.485615,-0.535956,-5.322480,1.570798,4.337223,4.678532,8.036462,7.613821,-8.263375,-8.863850,9.521809,-1.796351,1.224546,5.186199,-2.971519,9.740551,-2.770110,4.922848,0.867839,5.452329,8.801667,-8.324982,5.498194,5.634764,3.706670,1.217140,-1.889073,-3.150015,8.116097,9.192264,9.567488,-8.934669,-7.718400,9.675863,-6.190249,-0.496328,7.773172,-6.781798,-0.366124,-2.877456,-5.562549,6.927252,7.417614,-1.837662,7.678975,-7.610779,8.954490,-9.699064,3.759686,7.176218,-8.908221,2.063964,3.557112,2.741849,9.294761,7.427719,9.799548,-9.124291,-9.468124,9.670401,-4.790538,7.364323,-7.889347,0.001771,3.670099,9.846083,-6.427903,1.804167,3.141809,-0.896764,-8.314390,-2.551821,-8.232631,2.537201,5.210207,-6.472307,-2.900065,3.603214,9.074041,-8.588519,-5.241160,5.630262,-6.344259,-0.073613,8.840800,-2.460807,-7.455352,7.791883,-3.244095,-6.367976,6.958862,6.499579,-9.506001,-7.843925,-6.993715,-1.107135,-0.588906,3.118585,-6.988013,-0.608600,-0.699072,5.836099,3.697090,2.659813,7.082947,-8.527514,-2.883613,6.392694,-4.819133,1.639434,-9.746828,3.992316,8.310758,-5.171661,-2.076519,5.548519,1.602732,-8.862917,5.036658,-1.976048,2.134028,8.931880,6.760499,-9.637727,-8.621757,-4.112683,2.367730,6.318747,-4.462505,-2.406079,0.503627,-7.429986,-3.957568,4.440862,-0.907204,9.199356,-4.997052,-4.323172,5.012812,-0.771691,-6.251845,-0.393188,-6.853606,-5.656311,8.441472,-5.734474,-9.779124,-2.385278,3.569589,-9.267741,3.057522,2.501530,-8.897731,0.049595,-5.436648,8.644848,-5.333628,-4.024690,9.102246,-9.455361,1.245456,9.453278,6.945415,-7.644920,-5.035731,-0.546241,-4.805151,5.647349,6.238515,-9.785020,-5.509451,-9.706935,-7.929520,-9.808702,4.103240,-8.234009,1.148033,-0.602606,1.834129,5.209948,0.211463,-3.133523,7.961043,-5.281894,-8.996017,-6.975659,-2.548217,-1.202265,7.427858,9.909660,4.173324,3.222242,6.596349,0.738991,-4.021168,-4.069125,-2.758096,-3.515369,3.017044,6.222463,0.413880,-3.265715,-3.682240,-7.746815,6.962512,6.559642,-2.249285,0.111603,-3.704950,-3.142398,8.108108,9.033304,7.867176,9.293077,-9.794169,8.209638,-9.936019,-3.386213,-4.691547,-9.863997,-6.514760,-6.826052,-7.932242,-8.059805,-1.389312,-2.266608,-4.278569,8.767035,5.654601,-0.182930,8.599074,0.373385,1.116429,1.839461,9.631770,-0.819744,3.031909,-9.918991,-9.584131,-0.231750,7.500139,8.829369,-8.400465,-8.789546,2.146876,-4.959160,-8.996812,7.245555,9.532459,2.414257,-4.157311,-0.013413,-4.986868,-8.702415,7.745144,1.300095,3.902495,-5.124140,7.319101,1.999987,8.583763,-6.122138,4.126294,-9.911801,-2.071929,5.712570,1.442481,-5.491614,-9.168663,-7.816022,4.861817,4.775022,-9.969141,0.243482,-0.730114,1.441403,-7.051923,6.621386,4.893960,-9.494731,4.417223,-0.911836,6.874072,-4.097528,6.305543,2.146771,-7.332241,6.974948,7.727707,-5.994061,0.902265,1.340865,5.825300,-3.240246,-8.125449,-2.056834,-1.129609,-7.982664,4.134903,-5.972609,-4.336872,-8.087247,-1.926652,5.454341,-4.418991,4.385468,4.955395,2.384488]], dtype = "float32")#candidate|8215|(1, 420)|const|float32
call_8214 = func_2773_call(relay.reshape(const_8215.astype('float32'), [2, 14, 15]), relay.reshape(const_8215.astype('float32'), [2, 14, 15]), )
call_8216 = func_2773_call(relay.reshape(const_8215.astype('float32'), [2, 14, 15]), relay.reshape(const_8215.astype('float32'), [2, 14, 15]), )
func_6799_call = mod.get_global_var('func_6799')
func_6801_call = mutated_mod.get_global_var('func_6801')
call_8220 = relay.TupleGetItem(func_6799_call(), 0)
call_8221 = relay.TupleGetItem(func_6801_call(), 0)
output = relay.Tuple([call_8207,call_8214,const_8215,call_8220,])
output2 = relay.Tuple([call_8208,call_8216,const_8215,call_8221,])
func_8228 = relay.Function([], output)
mod['func_8228'] = func_8228
mod = relay.transform.InferType()(mod)
mutated_mod['func_8228'] = func_8228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8228_call = mutated_mod.get_global_var('func_8228')
call_8229 = func_8228_call()
output = call_8229
func_8230 = relay.Function([], output)
mutated_mod['func_8230'] = func_8230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6076_call = mod.get_global_var('func_6076')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_8317 = relay.TupleGetItem(func_6076_call(), 0)
call_8318 = relay.TupleGetItem(func_6078_call(), 0)
func_3511_call = mod.get_global_var('func_3511')
func_3515_call = mutated_mod.get_global_var('func_3515')
const_8334 = relay.const([True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False], dtype = "bool")#candidate|8334|(1560,)|const|bool
const_8335 = relay.const([4,-2,1,3,4,4,10,3,6,-2,-3,7,6,6,-5,-2,1,5,5,-9,-7,-6,6,2,-7,-1,5,-8,9,1,-7,10,-8,-7,-4,-1,1,7,7,3,4,-4,9,8,-10,-1,-1,-2,-7,-3,5,-3,-9,6,-10,2,1,10,10,8,-8,-6,2,-1,6,10,-6,-10,3,-3,-4,-6,-2,5,-6,-3,-3,-7,-4,-4,10,4,8,3,9,-6,-10,8,-9,-6,-9,3,-6,7,-7,-4,6,3,9,9,1,-1,-8,-4,3,3,-7,-5,5,6,-4,8,-8,6,-8,-7,10,1,8,-4,3,4,4,-6,-1,2,5,-7,-5,-10,8,2,-5,6,6,6,-9,-3,10,-5,-4,-6,9,1,6,6,7,4,1,-9,1,-8,6,3,-1,-6,-7,3,6,1,5,8,5,8,-1,3,-2,2,2,-5,6,-9,6,9,8,-5,-7,-7,-6,-10,-9,1,-4,1,-10,1,8,9,4,7,9,-4,-7,-3,-3,-10,-6,6,-3,5,3,-7,8,6,-5,-3,-5,3,8,-4,8,5,-4,1,-8,-9,6,4,4,-5,1,7,5,-7,-5,3,-5,-7,-1,-4,-9,-2,1,-9], dtype = "int64")#candidate|8335|(234,)|const|int64
const_8336 = relay.const(3, dtype = "int32")#candidate|8336|()|const|int32
call_8333 = relay.TupleGetItem(func_3511_call(relay.reshape(const_8334.astype('bool'), [10, 12, 13]), relay.reshape(const_8335.astype('int64'), [234,]), relay.reshape(const_8336.astype('int32'), []), ), 0)
call_8337 = relay.TupleGetItem(func_3515_call(relay.reshape(const_8334.astype('bool'), [10, 12, 13]), relay.reshape(const_8335.astype('int64'), [234,]), relay.reshape(const_8336.astype('int32'), []), ), 0)
output = relay.Tuple([call_8317,call_8333,const_8334,const_8335,const_8336,])
output2 = relay.Tuple([call_8318,call_8337,const_8334,const_8335,const_8336,])
func_8369 = relay.Function([], output)
mod['func_8369'] = func_8369
mod = relay.transform.InferType()(mod)
output = func_8369()
func_8370 = relay.Function([], output)
mutated_mod['func_8370'] = func_8370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_8408 = relay.TupleGetItem(func_2739_call(), 0)
call_8409 = relay.TupleGetItem(func_2740_call(), 0)
func_5118_call = mod.get_global_var('func_5118')
func_5120_call = mutated_mod.get_global_var('func_5120')
call_8422 = func_5118_call()
call_8423 = func_5118_call()
func_6248_call = mod.get_global_var('func_6248')
func_6250_call = mutated_mod.get_global_var('func_6250')
call_8428 = relay.TupleGetItem(func_6248_call(), 1)
call_8429 = relay.TupleGetItem(func_6250_call(), 1)
func_2929_call = mod.get_global_var('func_2929')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_8450 = relay.TupleGetItem(func_2929_call(), 0)
call_8451 = relay.TupleGetItem(func_2930_call(), 0)
output = relay.Tuple([call_8408,call_8422,call_8428,call_8450,])
output2 = relay.Tuple([call_8409,call_8423,call_8429,call_8451,])
func_8459 = relay.Function([], output)
mod['func_8459'] = func_8459
mod = relay.transform.InferType()(mod)
output = func_8459()
func_8460 = relay.Function([], output)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8113_call = mod.get_global_var('func_8113')
func_8115_call = mutated_mod.get_global_var('func_8115')
call_8469 = relay.TupleGetItem(func_8113_call(), 0)
call_8470 = relay.TupleGetItem(func_8115_call(), 0)
output = relay.Tuple([call_8469,])
output2 = relay.Tuple([call_8470,])
func_8479 = relay.Function([], output)
mod['func_8479'] = func_8479
mod = relay.transform.InferType()(mod)
output = func_8479()
func_8480 = relay.Function([], output)
mutated_mod['func_8480'] = func_8480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_8525 = relay.TupleGetItem(func_5918_call(), 0)
call_8526 = relay.TupleGetItem(func_5920_call(), 0)
output = relay.Tuple([call_8525,])
output2 = relay.Tuple([call_8526,])
func_8530 = relay.Function([], output)
mod['func_8530'] = func_8530
mod = relay.transform.InferType()(mod)
mutated_mod['func_8530'] = func_8530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mutated_mod.get_global_var('func_8530')
call_8531 = func_8530_call()
output = call_8531
func_8532 = relay.Function([], output)
mutated_mod['func_8532'] = func_8532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mod.get_global_var('func_4940')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_8560 = func_4940_call()
call_8561 = func_4940_call()
func_7662_call = mod.get_global_var('func_7662')
func_7664_call = mutated_mod.get_global_var('func_7664')
call_8570 = func_7662_call()
call_8571 = func_7662_call()
output = relay.Tuple([call_8560,call_8570,])
output2 = relay.Tuple([call_8561,call_8571,])
func_8574 = relay.Function([], output)
mod['func_8574'] = func_8574
mod = relay.transform.InferType()(mod)
mutated_mod['func_8574'] = func_8574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8574_call = mutated_mod.get_global_var('func_8574')
call_8575 = func_8574_call()
output = call_8575
func_8576 = relay.Function([], output)
mutated_mod['func_8576'] = func_8576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mod.get_global_var('func_8530')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_8577 = relay.TupleGetItem(func_8530_call(), 0)
call_8578 = relay.TupleGetItem(func_8532_call(), 0)
output = relay.Tuple([call_8577,])
output2 = relay.Tuple([call_8578,])
func_8593 = relay.Function([], output)
mod['func_8593'] = func_8593
mod = relay.transform.InferType()(mod)
mutated_mod['func_8593'] = func_8593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8593_call = mutated_mod.get_global_var('func_8593')
call_8594 = func_8593_call()
output = call_8594
func_8595 = relay.Function([], output)
mutated_mod['func_8595'] = func_8595
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8632 = relay.const([[[5.934393,-9.594992,9.974410,-8.046199,7.225446,7.619420,-8.389455,1.955610,8.793659,3.399434,-6.824163,1.044335,-9.582303,7.517810,4.205600,5.810555],[-6.437045,-0.043205,-0.144818,7.543456,-7.444491,-1.359376,0.531771,-7.916384,-1.131394,4.971194,9.985359,8.532126,8.886995,-0.684699,6.998339,7.625591],[-3.831064,3.739124,-1.223606,-0.471825,1.779361,-8.719557,-1.007529,6.590948,-8.368813,6.501869,-0.351861,9.180409,-1.498639,-0.900863,0.986755,6.940340],[7.257411,-4.664053,4.385300,6.536791,-0.805105,9.892184,-6.716378,5.272020,4.383980,8.982146,5.308070,8.418182,-9.977507,-7.414826,5.420302,3.687372],[-3.467982,-4.031840,-0.424524,6.521664,2.506344,-1.025748,4.802125,-6.009773,-9.053694,-4.404945,-3.358487,2.063948,3.699610,-9.506017,6.160243,-6.072754],[-2.833503,2.084060,-4.023131,1.200796,8.408275,6.829275,9.115660,2.734165,6.100612,2.098995,6.799149,9.332904,-6.424269,5.700424,0.443934,-5.125977],[9.318624,6.564383,-5.814480,3.244927,-4.785505,-5.782729,1.645350,4.753097,-5.888275,-2.449624,-3.517762,-1.943165,-5.388279,-2.245855,6.484939,9.626236],[9.834159,-4.721196,0.195295,1.774818,5.327792,2.212818,-6.087260,4.405504,6.634992,-9.323375,3.298523,6.719914,5.957440,-1.283516,-3.258326,1.349900],[-2.276665,9.698037,0.504010,5.973383,-9.818153,2.506813,9.642904,0.861644,5.815216,-4.836510,7.940773,-7.336617,-8.956821,6.336555,-0.763028,-6.429327]],[[0.115651,-1.147698,-5.396954,4.990193,-9.515334,3.831279,7.850006,-7.829333,4.176995,-9.382137,-5.948436,9.914979,8.733040,8.535291,3.190491,-0.186935],[3.236118,0.495122,-0.247767,9.701814,-5.488582,-9.186167,9.950605,-8.122399,-5.996341,1.518773,5.007496,2.777173,-4.413048,-0.280221,-5.879683,-6.185309],[7.638067,0.637210,-3.286039,-4.714326,-5.507199,-6.322543,2.435083,-0.389374,9.503627,0.917880,-7.904205,6.089083,6.789241,-0.336001,-0.189720,-3.950138],[-1.412610,7.229582,-1.994114,4.301170,2.581325,-3.141086,-0.436791,-0.849435,0.039252,-6.247916,-9.311253,-5.687480,8.680691,4.413548,9.759350,2.343545],[4.023400,-7.182597,-3.451178,-9.938618,9.952097,0.197777,4.898459,-2.737118,2.419018,-0.283186,-5.476013,1.817677,8.822582,-0.953025,-3.885961,7.728519],[-4.864670,9.335333,0.055542,-5.625031,0.158978,1.786828,9.248277,5.205353,-8.058151,-0.781624,-4.425797,5.529720,-0.245335,-0.113731,7.580091,5.830554],[3.682025,0.549561,-0.767785,0.886132,8.687776,3.073619,-1.733241,3.994028,-4.478659,-6.838430,1.565203,2.045986,6.565228,8.332453,6.879380,-3.161434],[7.473360,2.776852,-3.735695,3.592010,3.921038,-5.458525,6.353245,7.458964,-8.576360,-7.147689,6.602819,2.700517,9.926461,7.692794,6.038833,9.080595],[8.308795,9.272241,-4.371954,8.114883,5.614107,7.248638,7.594570,-9.121790,-5.128372,-1.927879,-5.552135,-3.172881,-1.287174,-7.726289,-3.040340,-2.053214]],[[0.698997,5.189854,6.543028,7.969145,-4.586702,8.314472,1.206787,3.252604,4.551229,0.105679,-8.861199,0.875561,-7.600492,-5.128014,-8.314990,-6.844488],[-0.264526,9.945950,4.009324,-0.527201,0.596422,8.408519,-7.271416,0.855454,-9.335459,5.097458,-4.556366,7.294273,1.158403,3.957312,2.285734,4.743031],[0.936229,2.546167,7.220849,2.712106,9.354092,-6.544421,4.529625,5.522631,-8.146529,-0.308262,-3.427767,9.719986,-5.154926,4.991445,3.709018,3.446356],[1.974613,7.371976,7.922078,2.488573,8.734593,-2.613675,0.541663,3.970331,-1.897946,1.271579,6.402381,-5.028201,5.157147,9.170714,-7.749898,-7.742049],[4.199131,5.658704,-8.482760,-1.721867,-9.717170,-2.349005,-8.732220,0.843893,-8.047405,1.233373,-3.681971,5.125814,5.036334,-7.901555,0.373869,8.421384],[-8.876461,8.755148,-5.424558,-3.650504,-5.175318,-1.599905,-8.178360,-8.763933,-5.645736,9.751906,8.667282,2.367422,2.340493,5.789168,-3.407369,-9.567113],[7.476744,0.842526,3.248503,-5.075131,-1.617446,-4.856909,-0.010734,4.597908,4.140087,2.639933,2.598270,9.861110,-4.970530,-2.526824,-5.713640,5.750700],[-5.855495,1.556930,4.448112,-3.922122,-2.515055,-0.042748,4.029959,-2.405125,-0.929022,2.893718,-6.355523,3.559663,0.884507,2.664154,-4.797885,3.292561],[1.417557,-1.447406,-7.455099,-0.259798,8.803208,-3.051830,6.815849,1.790309,-0.095646,9.304518,-7.259803,-7.894574,-2.276948,3.577456,-1.486038,-5.655053]],[[8.519707,-2.154831,1.059477,-4.623807,-9.823717,9.439814,8.038225,7.845995,7.293632,-5.103488,1.573205,-5.335829,-3.480024,-6.273984,-8.289496,-0.241699],[9.780486,-7.525054,-9.352134,-0.355808,2.637334,-0.491267,-8.466060,-0.386318,-2.259808,3.270421,8.845286,-5.434630,5.274955,7.554019,5.379936,8.126645],[-5.074716,6.635030,3.330542,2.969203,4.372834,4.796927,-8.518666,9.274136,2.643558,-6.873675,-4.680897,-9.676125,-3.919352,-4.216242,-5.475401,-7.629446],[9.294192,7.678877,4.296075,1.817112,-4.403439,1.723883,-2.101104,8.788606,9.757623,2.774196,-6.348080,-8.303075,0.528381,-0.618791,-1.693704,-5.442806],[-7.324038,-5.682491,6.341348,-5.618732,3.978362,-7.766391,7.943552,8.769633,5.310305,-4.461406,-6.618592,-8.795527,2.738014,9.756397,-9.464615,0.337433],[9.875891,-1.997985,1.573646,-1.395247,-8.486389,6.319572,1.054351,1.437164,7.488265,-8.541543,-3.002511,7.979226,-2.129535,5.966816,-3.000349,9.033377],[3.594366,-5.842648,4.165396,9.063160,5.675361,5.501233,3.738701,-5.262009,-6.313196,-2.411143,4.161036,4.267688,0.682001,-3.545212,0.246500,8.206961],[-0.111549,-8.199123,0.924657,0.171152,-3.099980,5.384912,1.172804,-8.900625,-3.549339,-7.697909,-0.234728,2.068090,4.608142,8.364968,-1.280235,7.754307],[3.921818,-5.105752,8.842742,5.203644,-2.883664,1.057169,-3.339118,4.730263,-2.387141,4.856701,0.821789,-3.086322,-1.336712,-8.660890,6.800676,4.148505]],[[8.400911,8.580455,-4.589761,-7.177304,6.406784,-5.690078,6.909555,-5.459946,-5.339798,-4.673506,8.789488,-2.310988,-2.073154,-1.687591,-8.332692,-9.471108],[7.643730,-0.602203,9.042940,-7.185053,-0.808897,-2.157739,-9.483046,7.024240,-5.849605,7.209765,4.744143,-3.779169,-4.746665,1.988081,-8.292591,-1.288110],[8.896764,7.689392,0.857941,0.502421,7.706368,4.803065,-5.011520,-8.696714,-2.673412,-7.874317,8.971514,3.012315,4.654548,-8.639695,0.508074,2.412755],[9.479511,3.402615,-8.452117,-2.739529,-5.437690,-0.441309,-7.369327,-9.700432,-9.906290,-3.087470,6.321137,3.620324,-7.711156,-1.910852,-5.076267,-1.942308],[7.420524,-8.850791,-4.021685,7.344871,-6.031275,-5.083451,-2.840718,9.680939,6.322523,-8.518331,7.743366,-4.427764,3.819304,5.950815,-8.703446,4.689581],[9.846708,-4.482232,-1.675473,1.632941,3.509217,4.195274,-2.274891,-6.572034,8.945441,-0.205912,-8.757526,-4.978356,6.834272,3.624701,-8.336353,4.622318],[-8.175503,9.486124,9.652471,4.963257,-4.080185,-4.429121,1.390659,1.105539,4.740052,8.594252,-1.077256,8.171300,-4.071271,1.581055,5.347593,-2.066887],[-2.724650,-7.757182,-5.773860,-8.084528,9.918674,6.676397,2.455982,3.630399,-3.975051,-3.875639,-4.003932,8.532694,-0.136704,4.936901,1.376388,1.299646],[-8.275554,-4.864399,0.734933,4.982012,3.342861,0.634269,4.640307,-9.265639,-5.250270,-7.500633,-9.304069,1.920462,4.657148,2.963504,-8.686414,-9.197347]],[[-3.659084,-1.906470,-5.198589,-0.906266,-3.438428,-5.827448,-1.882574,-3.649238,-3.566197,-0.866052,-8.811351,5.087515,-6.365284,-7.970495,-7.680702,7.636231],[7.658910,-1.508911,-8.402466,-5.368553,8.459752,-5.318833,9.510160,-9.418161,-1.958475,-5.152712,-8.251149,-5.844454,-7.433247,0.853310,7.142877,-8.377115],[-1.646829,-5.927176,4.553701,-4.545176,-2.406232,0.394460,6.426417,8.000626,-2.065890,-3.217401,1.892133,8.167464,1.691853,-7.027222,-7.699583,-4.544384],[-8.563315,9.242587,0.566652,-9.012392,-9.508287,4.639878,3.980503,6.166789,-8.887173,-2.377123,-7.886964,-5.579568,-8.815680,6.801022,0.233881,-5.735081],[-5.633777,5.389207,4.040424,9.606911,1.687674,0.956198,0.621197,-1.888736,-7.386863,-6.367264,3.157189,-9.407371,8.435740,-1.585933,0.221765,-8.004367],[-7.172150,3.259845,9.989970,1.059275,4.777521,4.011162,-2.144046,1.075185,-7.899627,0.887023,-5.330806,-5.553444,8.624529,-5.664147,0.330610,0.292602],[-8.265044,9.427923,7.374150,3.480167,2.043629,-2.088467,-0.365970,-9.178880,5.930468,-2.288243,4.812393,8.488947,1.443988,-4.019482,0.276689,-0.732373],[-5.682718,3.458722,3.950630,9.479790,-1.957882,-4.019248,0.078868,7.666586,-8.126448,-7.011389,-3.868477,4.946735,7.969600,-6.966409,5.586757,-8.396663],[-9.114567,8.060776,-0.307043,-5.978881,-8.838019,-9.452351,3.756938,-5.799000,1.462094,-9.509159,2.365223,-1.704571,5.300394,7.148499,6.866512,-5.952896]]], dtype = "float64")#candidate|8632|(6, 9, 16)|const|float64
uop_8633 = relay.asinh(const_8632.astype('float64')) # shape=(6, 9, 16)
func_7339_call = mod.get_global_var('func_7339')
func_7340_call = mutated_mod.get_global_var('func_7340')
call_8636 = relay.TupleGetItem(func_7339_call(), 0)
call_8637 = relay.TupleGetItem(func_7340_call(), 0)
func_400_call = mod.get_global_var('func_400')
func_402_call = mutated_mod.get_global_var('func_402')
var_8640 = relay.var("var_8640", dtype = "int64", shape = (234,))#candidate|8640|(234,)|var|int64
call_8639 = relay.TupleGetItem(func_400_call(relay.reshape(var_8640.astype('int64'), [9, 2, 13])), 0)
call_8641 = relay.TupleGetItem(func_402_call(relay.reshape(var_8640.astype('int64'), [9, 2, 13])), 0)
uop_8653 = relay.acos(uop_8633.astype('float64')) # shape=(6, 9, 16)
func_6489_call = mod.get_global_var('func_6489')
func_6491_call = mutated_mod.get_global_var('func_6491')
call_8658 = relay.TupleGetItem(func_6489_call(), 0)
call_8659 = relay.TupleGetItem(func_6491_call(), 0)
output = relay.Tuple([call_8636,call_8639,var_8640,uop_8653,call_8658,])
output2 = relay.Tuple([call_8637,call_8641,var_8640,uop_8653,call_8659,])
func_8676 = relay.Function([var_8640,], output)
mod['func_8676'] = func_8676
mod = relay.transform.InferType()(mod)
var_8677 = relay.var("var_8677", dtype = "int64", shape = (234,))#candidate|8677|(234,)|var|int64
output = func_8676(var_8677)
func_8678 = relay.Function([var_8677], output)
mutated_mod['func_8678'] = func_8678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mod.get_global_var('func_5207')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_8725 = func_5207_call()
call_8726 = func_5207_call()
func_3010_call = mod.get_global_var('func_3010')
func_3011_call = mutated_mod.get_global_var('func_3011')
call_8729 = relay.TupleGetItem(func_3010_call(), 0)
call_8730 = relay.TupleGetItem(func_3011_call(), 0)
output = relay.Tuple([call_8725,call_8729,])
output2 = relay.Tuple([call_8726,call_8730,])
func_8746 = relay.Function([], output)
mod['func_8746'] = func_8746
mod = relay.transform.InferType()(mod)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8746_call = mutated_mod.get_global_var('func_8746')
call_8747 = func_8746_call()
output = call_8747
func_8748 = relay.Function([], output)
mutated_mod['func_8748'] = func_8748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8459_call = mod.get_global_var('func_8459')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_8779 = relay.TupleGetItem(func_8459_call(), 1)
call_8780 = relay.TupleGetItem(func_8460_call(), 1)
func_7757_call = mod.get_global_var('func_7757')
func_7759_call = mutated_mod.get_global_var('func_7759')
call_8791 = relay.TupleGetItem(func_7757_call(), 1)
call_8792 = relay.TupleGetItem(func_7759_call(), 1)
output = relay.Tuple([call_8779,call_8791,])
output2 = relay.Tuple([call_8780,call_8792,])
func_8812 = relay.Function([], output)
mod['func_8812'] = func_8812
mod = relay.transform.InferType()(mod)
mutated_mod['func_8812'] = func_8812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8812_call = mutated_mod.get_global_var('func_8812')
call_8813 = func_8812_call()
output = call_8813
func_8814 = relay.Function([], output)
mutated_mod['func_8814'] = func_8814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_8909 = relay.TupleGetItem(func_2794_call(), 0)
call_8910 = relay.TupleGetItem(func_2796_call(), 0)
output = relay.Tuple([call_8909,])
output2 = relay.Tuple([call_8910,])
func_8911 = relay.Function([], output)
mod['func_8911'] = func_8911
mod = relay.transform.InferType()(mod)
mutated_mod['func_8911'] = func_8911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mutated_mod.get_global_var('func_8911')
call_8912 = func_8911_call()
output = call_8912
func_8913 = relay.Function([], output)
mutated_mod['func_8913'] = func_8913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_9004 = relay.TupleGetItem(func_2435_call(), 0)
call_9005 = relay.TupleGetItem(func_2436_call(), 0)
output = relay.Tuple([call_9004,])
output2 = relay.Tuple([call_9005,])
func_9007 = relay.Function([], output)
mod['func_9007'] = func_9007
mod = relay.transform.InferType()(mod)
mutated_mod['func_9007'] = func_9007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9007_call = mutated_mod.get_global_var('func_9007')
call_9008 = func_9007_call()
output = call_9008
func_9009 = relay.Function([], output)
mutated_mod['func_9009'] = func_9009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_9015 = relay.TupleGetItem(func_4535_call(), 1)
call_9016 = relay.TupleGetItem(func_4537_call(), 1)
output = relay.Tuple([call_9015,])
output2 = relay.Tuple([call_9016,])
func_9024 = relay.Function([], output)
mod['func_9024'] = func_9024
mod = relay.transform.InferType()(mod)
mutated_mod['func_9024'] = func_9024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9024_call = mutated_mod.get_global_var('func_9024')
call_9025 = func_9024_call()
output = call_9025
func_9026 = relay.Function([], output)
mutated_mod['func_9026'] = func_9026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mod.get_global_var('func_2435')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_9034 = relay.TupleGetItem(func_2435_call(), 0)
call_9035 = relay.TupleGetItem(func_2436_call(), 0)
output = call_9034
output2 = call_9035
func_9041 = relay.Function([], output)
mod['func_9041'] = func_9041
mod = relay.transform.InferType()(mod)
mutated_mod['func_9041'] = func_9041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9041_call = mutated_mod.get_global_var('func_9041')
call_9042 = func_9041_call()
output = call_9042
func_9043 = relay.Function([], output)
mutated_mod['func_9043'] = func_9043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7662_call = mod.get_global_var('func_7662')
func_7664_call = mutated_mod.get_global_var('func_7664')
call_9058 = func_7662_call()
call_9059 = func_7662_call()
output = call_9058
output2 = call_9059
func_9073 = relay.Function([], output)
mod['func_9073'] = func_9073
mod = relay.transform.InferType()(mod)
mutated_mod['func_9073'] = func_9073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9073_call = mutated_mod.get_global_var('func_9073')
call_9074 = func_9073_call()
output = call_9074
func_9075 = relay.Function([], output)
mutated_mod['func_9075'] = func_9075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6799_call = mod.get_global_var('func_6799')
func_6801_call = mutated_mod.get_global_var('func_6801')
call_9105 = relay.TupleGetItem(func_6799_call(), 0)
call_9106 = relay.TupleGetItem(func_6801_call(), 0)
output = call_9105
output2 = call_9106
func_9128 = relay.Function([], output)
mod['func_9128'] = func_9128
mod = relay.transform.InferType()(mod)
output = func_9128()
func_9129 = relay.Function([], output)
mutated_mod['func_9129'] = func_9129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9173 = relay.var("var_9173", dtype = "float64", shape = ())#candidate|9173|()|var|float64
var_9174 = relay.var("var_9174", dtype = "float64", shape = (9, 11, 11))#candidate|9174|(9, 11, 11)|var|float64
bop_9175 = relay.power(var_9173.astype('float64'), var_9174.astype('float64')) # shape=(9, 11, 11)
output = bop_9175
output2 = bop_9175
func_9201 = relay.Function([var_9173,var_9174,], output)
mod['func_9201'] = func_9201
mod = relay.transform.InferType()(mod)
mutated_mod['func_9201'] = func_9201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9201_call = mutated_mod.get_global_var('func_9201')
var_9203 = relay.var("var_9203", dtype = "float64", shape = ())#candidate|9203|()|var|float64
var_9204 = relay.var("var_9204", dtype = "float64", shape = (9, 11, 11))#candidate|9204|(9, 11, 11)|var|float64
call_9202 = func_9201_call(var_9203,var_9204,)
output = call_9202
func_9205 = relay.Function([var_9203,var_9204,], output)
mutated_mod['func_9205'] = func_9205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8459_call = mod.get_global_var('func_8459')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_9241 = relay.TupleGetItem(func_8459_call(), 0)
call_9242 = relay.TupleGetItem(func_8460_call(), 0)
func_8150_call = mod.get_global_var('func_8150')
func_8154_call = mutated_mod.get_global_var('func_8154')
const_9255 = relay.const([-8.118242,0.757439,-4.047485,3.944178,-5.079531,5.501280,-8.445686,8.775641,-8.834653,5.771524,-9.705974,-8.762713,8.913289,-8.645623,-2.336834,-8.429025,-0.539132,3.581197,-1.732166,-1.522128,1.625057,-4.852183,-9.128566,2.027896,8.218421,-6.250797,1.245550,9.201579,9.578282,0.985867,-1.930078,-8.540620,6.865851,-7.250525,-0.647610,-1.986298,-4.184562,5.492969,8.144911,-3.035116,5.185074,-9.925776,5.705536,3.263392,2.056717,-5.963835,-1.587792,-8.593260,-5.086598,7.275819,1.784327,-1.086442,2.092303,-2.985794,4.539717,3.801356,-1.132048,8.958187,4.712180,-9.776827,-0.689566,-4.040805,-3.184998,-9.568747,5.512388,9.906178,-9.000472,0.943790,-2.245478,-1.129635,-5.029157,-8.223766,0.294425,-4.899584,5.578581,3.776438,9.579399,-3.050667,-9.472712,-3.530717,6.642132,-1.467061,-3.281711,5.231680,3.181204,-9.114485,1.221322,-0.113386,-9.137073,1.308668,-4.968476,7.523751,-3.237965,1.276336,8.658451,7.509431,9.043624,-9.520534,4.670178,-9.395236,0.716060,-3.324123,-8.078823,9.044773,6.824633,-1.774561,4.992634,5.421313,5.105341,-5.878042,-3.492319,3.364187,8.460334,4.592912,4.283408,1.466746,-1.205604,7.738008,5.424305,-1.968682,2.284737,-7.970755,-3.201877,9.191208,-9.352234,-4.026768,8.799479,-7.572688,9.131275,8.316823,-6.197380,5.356005,-8.308179,8.575723,3.471694,-3.465128,-9.811741,1.611497,-1.782695,-2.956554,-1.920096,1.057911,6.798452,-9.056303,-8.736625,3.842367,4.340730,4.624161,-3.607504,2.940465,-4.995791,-6.685642,-2.004216,-7.535218,-9.122860,6.573854,9.617124,-8.995949,-3.783978,-7.130171,-9.483697,5.729989,-9.483054,4.347968,9.303497,8.799757,-6.906453,-2.588122,8.876043,5.866215,-3.846169,9.980178,-9.521958,-3.640345,-6.571759,0.153698,-5.286362,-9.237417,2.270778,1.779682,-2.182755,1.709664,6.447062,8.443614,-3.224002,-2.369633,4.371600,-9.173353,-1.136635,6.191629,8.304395,1.874508,9.541608,5.778919,-7.491163,-0.356936,2.069048,3.512847,4.298898,8.125031,-4.803972,-2.353224,5.043188,3.027285,8.946218,5.689712,7.741810,8.619064,-6.617718,4.348053,4.588187,-6.108336,4.884390,4.283563,-1.289558,-9.669412,5.284897,1.582496,-7.249835,-2.877159,0.275002,-0.435828,-9.540604,9.340286,-0.068810,8.741249,-9.839883,-5.645266,-1.035990,0.888512,9.801615,3.011480,-7.400626,4.366743,3.008671,0.508471,7.898587,7.329248,6.091302,3.342586,5.631594,0.959659,-8.912505,-0.531417,-7.049745,8.938192,7.207784,-8.075010,4.892253,-7.933270,1.528964,5.241840,-6.060243,-6.752061,-5.867819,7.170518,6.426445,9.456627,2.951226,-2.667269,7.460542,7.873549,-8.303713,4.795417,4.915561,-8.621895,9.223740,-1.299660,-0.534160,8.300151,-3.184809,-1.176238,6.799730,6.839917,1.984391,-6.155871,6.824022,-0.714539,2.338980,-9.190835,8.690798,2.785667,-9.974859,-8.971718,7.681611,9.027697,6.073480,2.337656,-9.937951,1.890862,-8.015830,-8.156444,3.779741,8.629937,-3.577687,7.213297,-3.259084,-8.965406,-7.239599,8.317951,-8.168327,6.919301,-0.461287,8.744460,4.664704,9.723823,-2.357220,-5.203505,-7.774466,7.656093,2.256502,-9.802941,6.449062,-5.379860,-8.132906,3.698109,5.918870,-5.082187,5.086406,-7.918956,-9.601041,-9.957078,3.158576,-3.391437,-1.213515,0.086049,-6.101097,7.060652,-5.841227,-4.919421,9.332401,-4.725066,-0.085378,4.674561,-4.849493,2.443782], dtype = "float32")#candidate|9255|(336,)|const|float32
call_9254 = relay.TupleGetItem(func_8150_call(relay.reshape(const_9255.astype('float32'), [4, 14, 6]), relay.reshape(const_9255.astype('float32'), [4, 14, 6]), ), 1)
call_9256 = relay.TupleGetItem(func_8154_call(relay.reshape(const_9255.astype('float32'), [4, 14, 6]), relay.reshape(const_9255.astype('float32'), [4, 14, 6]), ), 1)
func_1767_call = mod.get_global_var('func_1767')
func_1771_call = mutated_mod.get_global_var('func_1771')
var_9300 = relay.var("var_9300", dtype = "float32", shape = (315, 1))#candidate|9300|(315, 1)|var|float32
const_9301 = relay.const(5, dtype = "int32")#candidate|9301|()|const|int32
call_9299 = relay.TupleGetItem(func_1767_call(relay.reshape(var_9300.astype('float32'), [3, 7, 15]), relay.reshape(const_9301.astype('int32'), []), ), 2)
call_9302 = relay.TupleGetItem(func_1771_call(relay.reshape(var_9300.astype('float32'), [3, 7, 15]), relay.reshape(const_9301.astype('int32'), []), ), 2)
func_6489_call = mod.get_global_var('func_6489')
func_6491_call = mutated_mod.get_global_var('func_6491')
call_9305 = relay.TupleGetItem(func_6489_call(), 0)
call_9306 = relay.TupleGetItem(func_6491_call(), 0)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_9334 = relay.TupleGetItem(func_2637_call(), 1)
call_9335 = relay.TupleGetItem(func_2638_call(), 1)
func_9073_call = mod.get_global_var('func_9073')
func_9075_call = mutated_mod.get_global_var('func_9075')
call_9343 = func_9073_call()
call_9344 = func_9073_call()
bop_9345 = relay.equal(var_9300.astype('bool'), const_9255.astype('bool')) # shape=(315, 336)
output = relay.Tuple([call_9241,call_9254,call_9299,const_9301,call_9305,call_9334,call_9343,bop_9345,])
output2 = relay.Tuple([call_9242,call_9256,call_9302,const_9301,call_9306,call_9335,call_9344,bop_9345,])
func_9373 = relay.Function([var_9300,], output)
mod['func_9373'] = func_9373
mod = relay.transform.InferType()(mod)
var_9374 = relay.var("var_9374", dtype = "float32", shape = (315, 1))#candidate|9374|(315, 1)|var|float32
output = func_9373(var_9374)
func_9375 = relay.Function([var_9374], output)
mutated_mod['func_9375'] = func_9375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7507_call = mod.get_global_var('func_7507')
func_7509_call = mutated_mod.get_global_var('func_7509')
call_9446 = relay.TupleGetItem(func_7507_call(), 1)
call_9447 = relay.TupleGetItem(func_7509_call(), 1)
output = relay.Tuple([call_9446,])
output2 = relay.Tuple([call_9447,])
func_9451 = relay.Function([], output)
mod['func_9451'] = func_9451
mod = relay.transform.InferType()(mod)
mutated_mod['func_9451'] = func_9451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9451_call = mutated_mod.get_global_var('func_9451')
call_9452 = func_9451_call()
output = call_9452
func_9453 = relay.Function([], output)
mutated_mod['func_9453'] = func_9453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_9561 = func_2860_call()
call_9562 = func_2860_call()
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_9565 = relay.TupleGetItem(func_2739_call(), 0)
call_9566 = relay.TupleGetItem(func_2740_call(), 0)
output = relay.Tuple([call_9561,call_9565,])
output2 = relay.Tuple([call_9562,call_9566,])
func_9568 = relay.Function([], output)
mod['func_9568'] = func_9568
mod = relay.transform.InferType()(mod)
mutated_mod['func_9568'] = func_9568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9568_call = mutated_mod.get_global_var('func_9568')
call_9569 = func_9568_call()
output = call_9569
func_9570 = relay.Function([], output)
mutated_mod['func_9570'] = func_9570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7520_call = mod.get_global_var('func_7520')
func_7521_call = mutated_mod.get_global_var('func_7521')
call_9699 = relay.TupleGetItem(func_7520_call(), 0)
call_9700 = relay.TupleGetItem(func_7521_call(), 0)
output = relay.Tuple([call_9699,])
output2 = relay.Tuple([call_9700,])
func_9701 = relay.Function([], output)
mod['func_9701'] = func_9701
mod = relay.transform.InferType()(mod)
output = func_9701()
func_9702 = relay.Function([], output)
mutated_mod['func_9702'] = func_9702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_9741 = relay.TupleGetItem(func_5450_call(), 0)
call_9742 = relay.TupleGetItem(func_5452_call(), 0)
output = call_9741
output2 = call_9742
func_9748 = relay.Function([], output)
mod['func_9748'] = func_9748
mod = relay.transform.InferType()(mod)
mutated_mod['func_9748'] = func_9748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9748_call = mutated_mod.get_global_var('func_9748')
call_9749 = func_9748_call()
output = call_9749
func_9750 = relay.Function([], output)
mutated_mod['func_9750'] = func_9750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_9754 = relay.TupleGetItem(func_4535_call(), 3)
call_9755 = relay.TupleGetItem(func_4537_call(), 3)
func_6015_call = mod.get_global_var('func_6015')
func_6016_call = mutated_mod.get_global_var('func_6016')
call_9758 = func_6015_call()
call_9759 = func_6015_call()
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_9769 = relay.TupleGetItem(func_5918_call(), 0)
call_9770 = relay.TupleGetItem(func_5920_call(), 0)
output = relay.Tuple([call_9754,call_9758,call_9769,])
output2 = relay.Tuple([call_9755,call_9759,call_9770,])
func_9773 = relay.Function([], output)
mod['func_9773'] = func_9773
mod = relay.transform.InferType()(mod)
output = func_9773()
func_9774 = relay.Function([], output)
mutated_mod['func_9774'] = func_9774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3758_call = mutated_mod.get_global_var('func_3758')
call_9793 = func_3757_call()
call_9794 = func_3757_call()
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_9802 = relay.TupleGetItem(func_4620_call(), 0)
call_9803 = relay.TupleGetItem(func_4622_call(), 0)
func_8676_call = mod.get_global_var('func_8676')
func_8678_call = mutated_mod.get_global_var('func_8678')
const_9805 = relay.const([1,-6,-6,-6,8,-2,10,-2,-4,7,4,1,10,3,3,3,-6,7,-2,6,4,10,-5,-6,-7,-3,4,10,-7,9,3,-4,-3,-4,3,-4,-1,10,5,2,-8,2,-10,3,-5,9,-4,-8,3,1,3,2,10,-7,9,-6,6,-8,8,6,-6,3,10,-9,5,-1,-5,-2,7,9,-1,-5,-1,-5,-4,4,8,2,-3,4,-10,8,-10,-10,2,-4,-4,-1,-2,8,9,-6,1,8,-8,2,7,-5,10,7,7,-8,10,8,8,-8,7,-6,3,-2,6,8,4,2,9,10,1,-6,7,-3,-9,-10,8,-5,-9,1,-3,-9,-2,-2,10,-8,-10,-4,-10,10,9,-6,-9,7,9,3,8,-10,-7,-3,6,10,6,5,-10,-3,-8,-7,1,-4,3,-6,-1,1,-1,-7,-6,7,10,7,-6,10,-1,-8,2,-7,-9,-5,-9,10,-3,-1,3,-2,-9,-2,1,-8,8,7,9,-4,6,1,-8,-7,8,-3,-5,4,3,-8,8,7,1,-6,7,-9,1,-8,2,3,3,-3,-10,10,-4,8,-4,10,8,-8,-7,-9,8,1,-3,2,-10,-2,-3,-4,5,-9,-8,6,4,-2], dtype = "int64")#candidate|9805|(234,)|const|int64
call_9804 = relay.TupleGetItem(func_8676_call(relay.reshape(const_9805.astype('int64'), [234,])), 4)
call_9806 = relay.TupleGetItem(func_8678_call(relay.reshape(const_9805.astype('int64'), [234,])), 4)
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_9814 = relay.TupleGetItem(func_4620_call(), 2)
call_9815 = relay.TupleGetItem(func_4622_call(), 2)
output = relay.Tuple([call_9793,call_9802,call_9804,const_9805,call_9814,])
output2 = relay.Tuple([call_9794,call_9803,call_9806,const_9805,call_9815,])
func_9838 = relay.Function([], output)
mod['func_9838'] = func_9838
mod = relay.transform.InferType()(mod)
output = func_9838()
func_9839 = relay.Function([], output)
mutated_mod['func_9839'] = func_9839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8081_call = mod.get_global_var('func_8081')
func_8082_call = mutated_mod.get_global_var('func_8082')
call_9867 = relay.TupleGetItem(func_8081_call(), 1)
call_9868 = relay.TupleGetItem(func_8082_call(), 1)
func_2753_call = mod.get_global_var('func_2753')
func_2756_call = mutated_mod.get_global_var('func_2756')
var_9891 = relay.var("var_9891", dtype = "bool", shape = (1560,))#candidate|9891|(1560,)|var|bool
call_9890 = relay.TupleGetItem(func_2753_call(relay.reshape(var_9891.astype('bool'), [1560,])), 0)
call_9892 = relay.TupleGetItem(func_2756_call(relay.reshape(var_9891.astype('bool'), [1560,])), 0)
func_8113_call = mod.get_global_var('func_8113')
func_8115_call = mutated_mod.get_global_var('func_8115')
call_9893 = relay.TupleGetItem(func_8113_call(), 1)
call_9894 = relay.TupleGetItem(func_8115_call(), 1)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_9909 = relay.TupleGetItem(func_7647_call(), 0)
call_9910 = relay.TupleGetItem(func_7649_call(), 0)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_9911 = func_5593_call()
call_9912 = func_5593_call()
func_3992_call = mod.get_global_var('func_3992')
func_3995_call = mutated_mod.get_global_var('func_3995')
const_9918 = relay.const([-9.268773,4.253156,-1.564892,9.555150,-3.081941], dtype = "float32")#candidate|9918|(5,)|const|float32
call_9917 = relay.TupleGetItem(func_3992_call(relay.reshape(const_9918.astype('float32'), [1, 1, 5])), 0)
call_9919 = relay.TupleGetItem(func_3995_call(relay.reshape(const_9918.astype('float32'), [1, 1, 5])), 0)
uop_9934 = relay.tan(var_9891.astype('float64')) # shape=(1560,)
func_4462_call = mod.get_global_var('func_4462')
func_4464_call = mutated_mod.get_global_var('func_4464')
var_9942 = relay.var("var_9942", dtype = "int8", shape = (336,))#candidate|9942|(336,)|var|int8
call_9941 = relay.TupleGetItem(func_4462_call(relay.reshape(var_9942.astype('int8'), [7, 12, 4])), 5)
call_9943 = relay.TupleGetItem(func_4464_call(relay.reshape(var_9942.astype('int8'), [7, 12, 4])), 5)
output = relay.Tuple([call_9867,call_9890,call_9893,call_9909,call_9911,call_9917,const_9918,uop_9934,call_9941,var_9942,])
output2 = relay.Tuple([call_9868,call_9892,call_9894,call_9910,call_9912,call_9919,const_9918,uop_9934,call_9943,var_9942,])
func_9957 = relay.Function([var_9891,var_9942,], output)
mod['func_9957'] = func_9957
mod = relay.transform.InferType()(mod)
var_9958 = relay.var("var_9958", dtype = "bool", shape = (1560,))#candidate|9958|(1560,)|var|bool
var_9959 = relay.var("var_9959", dtype = "int8", shape = (336,))#candidate|9959|(336,)|var|int8
output = func_9957(var_9958,var_9959,)
func_9960 = relay.Function([var_9958,var_9959,], output)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9128_call = mod.get_global_var('func_9128')
func_9129_call = mutated_mod.get_global_var('func_9129')
call_9999 = func_9128_call()
call_10000 = func_9128_call()
output = call_9999
output2 = call_10000
func_10007 = relay.Function([], output)
mod['func_10007'] = func_10007
mod = relay.transform.InferType()(mod)
output = func_10007()
func_10008 = relay.Function([], output)
mutated_mod['func_10008'] = func_10008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_10011 = relay.TupleGetItem(func_5450_call(), 0)
call_10012 = relay.TupleGetItem(func_5452_call(), 0)
func_6731_call = mod.get_global_var('func_6731')
func_6733_call = mutated_mod.get_global_var('func_6733')
call_10027 = relay.TupleGetItem(func_6731_call(), 2)
call_10028 = relay.TupleGetItem(func_6733_call(), 2)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_10034 = relay.TupleGetItem(func_2794_call(), 0)
call_10035 = relay.TupleGetItem(func_2796_call(), 0)
func_9451_call = mod.get_global_var('func_9451')
func_9453_call = mutated_mod.get_global_var('func_9453')
call_10043 = relay.TupleGetItem(func_9451_call(), 0)
call_10044 = relay.TupleGetItem(func_9453_call(), 0)
output = relay.Tuple([call_10011,call_10027,call_10034,call_10043,])
output2 = relay.Tuple([call_10012,call_10028,call_10035,call_10044,])
func_10052 = relay.Function([], output)
mod['func_10052'] = func_10052
mod = relay.transform.InferType()(mod)
mutated_mod['func_10052'] = func_10052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10052_call = mutated_mod.get_global_var('func_10052')
call_10053 = func_10052_call()
output = call_10053
func_10054 = relay.Function([], output)
mutated_mod['func_10054'] = func_10054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_10055 = relay.TupleGetItem(func_5918_call(), 0)
call_10056 = relay.TupleGetItem(func_5920_call(), 0)
output = relay.Tuple([call_10055,])
output2 = relay.Tuple([call_10056,])
func_10060 = relay.Function([], output)
mod['func_10060'] = func_10060
mod = relay.transform.InferType()(mod)
mutated_mod['func_10060'] = func_10060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10060_call = mutated_mod.get_global_var('func_10060')
call_10061 = func_10060_call()
output = call_10061
func_10062 = relay.Function([], output)
mutated_mod['func_10062'] = func_10062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mod.get_global_var('func_4940')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_10087 = func_4940_call()
call_10088 = func_4940_call()
output = relay.Tuple([call_10087,])
output2 = relay.Tuple([call_10088,])
func_10098 = relay.Function([], output)
mod['func_10098'] = func_10098
mod = relay.transform.InferType()(mod)
output = func_10098()
func_10099 = relay.Function([], output)
mutated_mod['func_10099'] = func_10099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mod.get_global_var('func_7449')
func_7450_call = mutated_mod.get_global_var('func_7450')
call_10143 = relay.TupleGetItem(func_7449_call(), 1)
call_10144 = relay.TupleGetItem(func_7450_call(), 1)
output = call_10143
output2 = call_10144
func_10155 = relay.Function([], output)
mod['func_10155'] = func_10155
mod = relay.transform.InferType()(mod)
output = func_10155()
func_10156 = relay.Function([], output)
mutated_mod['func_10156'] = func_10156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2929_call = mod.get_global_var('func_2929')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_10228 = relay.TupleGetItem(func_2929_call(), 0)
call_10229 = relay.TupleGetItem(func_2930_call(), 0)
output = call_10228
output2 = call_10229
func_10242 = relay.Function([], output)
mod['func_10242'] = func_10242
mod = relay.transform.InferType()(mod)
output = func_10242()
func_10243 = relay.Function([], output)
mutated_mod['func_10243'] = func_10243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6850_call = mod.get_global_var('func_6850')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_10247 = relay.TupleGetItem(func_6850_call(), 0)
call_10248 = relay.TupleGetItem(func_6851_call(), 0)
func_9838_call = mod.get_global_var('func_9838')
func_9839_call = mutated_mod.get_global_var('func_9839')
call_10255 = relay.TupleGetItem(func_9838_call(), 1)
call_10256 = relay.TupleGetItem(func_9839_call(), 1)
func_3511_call = mod.get_global_var('func_3511')
func_3515_call = mutated_mod.get_global_var('func_3515')
var_10266 = relay.var("var_10266", dtype = "bool", shape = (60, 26))#candidate|10266|(60, 26)|var|bool
var_10267 = relay.var("var_10267", dtype = "int64", shape = (1, 234))#candidate|10267|(1, 234)|var|int64
var_10268 = relay.var("var_10268", dtype = "int32", shape = ())#candidate|10268|()|var|int32
call_10265 = relay.TupleGetItem(func_3511_call(relay.reshape(var_10266.astype('bool'), [10, 12, 13]), relay.reshape(var_10267.astype('int64'), [234,]), relay.reshape(var_10268.astype('int32'), []), ), 5)
call_10269 = relay.TupleGetItem(func_3515_call(relay.reshape(var_10266.astype('bool'), [10, 12, 13]), relay.reshape(var_10267.astype('int64'), [234,]), relay.reshape(var_10268.astype('int32'), []), ), 5)
var_10276 = relay.var("var_10276", dtype = "int64", shape = (14, 234))#candidate|10276|(14, 234)|var|int64
bop_10277 = relay.minimum(var_10267.astype('int64'), var_10276.astype('int64')) # shape=(14, 234)
bop_10286 = relay.greater_equal(call_10265.astype('bool'), var_10266.astype('bool')) # shape=(60, 26)
bop_10289 = relay.greater_equal(call_10269.astype('bool'), var_10266.astype('bool')) # shape=(60, 26)
uop_10295 = relay.rsqrt(var_10266.astype('float64')) # shape=(60, 26)
output = relay.Tuple([call_10247,call_10255,var_10268,bop_10277,bop_10286,uop_10295,])
output2 = relay.Tuple([call_10248,call_10256,var_10268,bop_10277,bop_10289,uop_10295,])
func_10297 = relay.Function([var_10266,var_10267,var_10268,var_10276,], output)
mod['func_10297'] = func_10297
mod = relay.transform.InferType()(mod)
var_10298 = relay.var("var_10298", dtype = "bool", shape = (60, 26))#candidate|10298|(60, 26)|var|bool
var_10299 = relay.var("var_10299", dtype = "int64", shape = (1, 234))#candidate|10299|(1, 234)|var|int64
var_10300 = relay.var("var_10300", dtype = "int32", shape = ())#candidate|10300|()|var|int32
var_10301 = relay.var("var_10301", dtype = "int64", shape = (14, 234))#candidate|10301|(14, 234)|var|int64
output = func_10297(var_10298,var_10299,var_10300,var_10301,)
func_10302 = relay.Function([var_10298,var_10299,var_10300,var_10301,], output)
mutated_mod['func_10302'] = func_10302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_10332 = func_2860_call()
call_10333 = func_2860_call()
func_6076_call = mod.get_global_var('func_6076')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_10336 = relay.TupleGetItem(func_6076_call(), 0)
call_10337 = relay.TupleGetItem(func_6078_call(), 0)
func_8459_call = mod.get_global_var('func_8459')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_10338 = relay.TupleGetItem(func_8459_call(), 1)
call_10339 = relay.TupleGetItem(func_8460_call(), 1)
output = relay.Tuple([call_10332,call_10336,call_10338,])
output2 = relay.Tuple([call_10333,call_10337,call_10339,])
func_10342 = relay.Function([], output)
mod['func_10342'] = func_10342
mod = relay.transform.InferType()(mod)
mutated_mod['func_10342'] = func_10342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10342_call = mutated_mod.get_global_var('func_10342')
call_10343 = func_10342_call()
output = call_10343
func_10344 = relay.Function([], output)
mutated_mod['func_10344'] = func_10344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10421 = relay.const([[[-9.025363,6.280711,-8.090873,3.070706,9.221182],[4.661167,-2.225414,4.785798,-1.187790,-7.281650]],[[-5.131555,-8.609218,8.140455,2.646485,0.594032],[-5.996561,4.551072,8.622115,7.381158,-0.691699]],[[6.894539,-2.282324,3.908483,-5.152236,-2.071919],[-5.243178,9.178032,-0.743749,7.940245,-2.124608]],[[-4.001891,-4.208324,-5.416137,1.047165,-3.321993],[6.177413,-6.909244,-0.235016,8.434797,1.635166]],[[9.180338,-7.490028,-8.459242,5.532112,3.991203],[-6.138647,1.102394,7.781186,-8.687975,9.050386]],[[0.270077,3.944079,4.045949,8.275726,-8.342923],[-9.257276,-2.815784,7.082076,2.879603,-2.547280]],[[-4.129806,-9.084313,-2.652995,5.667167,6.285460],[8.625057,1.488232,-9.824005,-4.887461,-1.096925]],[[-7.385077,-7.510113,1.148685,7.807029,7.321453],[8.134719,-8.583427,4.320980,-5.797656,-6.498145]],[[7.191672,-8.590388,-3.112032,7.719902,-1.495653],[2.177080,-8.783568,1.537595,6.729887,-1.279943]],[[-8.411362,-7.782445,-8.605433,6.864961,0.618355],[-8.756471,-3.871454,5.554883,2.180596,6.379359]],[[-1.996513,-0.849261,0.469955,2.943344,-0.950165],[7.862355,6.296291,3.973402,4.517735,-1.761053]],[[-4.716758,6.818331,4.356468,0.272978,-6.524978],[-3.882795,-9.697635,2.064171,-9.806431,-9.560247]],[[1.159966,-6.917456,-2.936066,-7.098640,-0.922544],[-7.438758,4.412351,9.977228,-0.931014,0.173724]],[[-1.272220,-0.044027,-1.218930,-5.990139,-9.823560],[0.249359,-7.440747,-9.888066,2.444039,-4.913864]],[[-0.595913,7.476064,-4.538366,-1.205953,1.814653],[7.186906,-3.757974,-7.775621,-4.947282,7.643715]]], dtype = "float32")#candidate|10421|(15, 2, 5)|const|float32
uop_10422 = relay.atan(const_10421.astype('float32')) # shape=(15, 2, 5)
func_8201_call = mod.get_global_var('func_8201')
func_8203_call = mutated_mod.get_global_var('func_8203')
call_10425 = relay.TupleGetItem(func_8201_call(), 0)
call_10426 = relay.TupleGetItem(func_8203_call(), 0)
output = relay.Tuple([uop_10422,call_10425,])
output2 = relay.Tuple([uop_10422,call_10426,])
func_10432 = relay.Function([], output)
mod['func_10432'] = func_10432
mod = relay.transform.InferType()(mod)
output = func_10432()
func_10433 = relay.Function([], output)
mutated_mod['func_10433'] = func_10433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
call_10448 = func_4033_call()
call_10449 = func_4033_call()
func_4883_call = mod.get_global_var('func_4883')
func_4885_call = mutated_mod.get_global_var('func_4885')
call_10476 = relay.TupleGetItem(func_4883_call(), 0)
call_10477 = relay.TupleGetItem(func_4885_call(), 0)
func_3010_call = mod.get_global_var('func_3010')
func_3011_call = mutated_mod.get_global_var('func_3011')
call_10482 = relay.TupleGetItem(func_3010_call(), 0)
call_10483 = relay.TupleGetItem(func_3011_call(), 0)
func_7394_call = mod.get_global_var('func_7394')
func_7396_call = mutated_mod.get_global_var('func_7396')
call_10488 = relay.TupleGetItem(func_7394_call(), 0)
call_10489 = relay.TupleGetItem(func_7396_call(), 0)
func_2147_call = mod.get_global_var('func_2147')
func_2150_call = mutated_mod.get_global_var('func_2150')
var_10494 = relay.var("var_10494", dtype = "int8", shape = (336,))#candidate|10494|(336,)|var|int8
call_10493 = relay.TupleGetItem(func_2147_call(relay.reshape(var_10494.astype('int8'), [336,])), 2)
call_10495 = relay.TupleGetItem(func_2150_call(relay.reshape(var_10494.astype('int8'), [336,])), 2)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_10501 = relay.TupleGetItem(func_2739_call(), 0)
call_10502 = relay.TupleGetItem(func_2740_call(), 0)
output = relay.Tuple([call_10448,call_10476,call_10482,call_10488,call_10493,var_10494,call_10501,])
output2 = relay.Tuple([call_10449,call_10477,call_10483,call_10489,call_10495,var_10494,call_10502,])
func_10517 = relay.Function([var_10494,], output)
mod['func_10517'] = func_10517
mod = relay.transform.InferType()(mod)
mutated_mod['func_10517'] = func_10517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10518 = relay.var("var_10518", dtype = "int8", shape = (336,))#candidate|10518|(336,)|var|int8
func_10517_call = mutated_mod.get_global_var('func_10517')
call_10519 = func_10517_call(var_10518)
output = call_10519
func_10520 = relay.Function([var_10518], output)
mutated_mod['func_10520'] = func_10520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_10538 = func_4120_call()
call_10539 = func_4120_call()
output = call_10538
output2 = call_10539
func_10559 = relay.Function([], output)
mod['func_10559'] = func_10559
mod = relay.transform.InferType()(mod)
output = func_10559()
func_10560 = relay.Function([], output)
mutated_mod['func_10560'] = func_10560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9568_call = mod.get_global_var('func_9568')
func_9570_call = mutated_mod.get_global_var('func_9570')
call_10637 = relay.TupleGetItem(func_9568_call(), 1)
call_10638 = relay.TupleGetItem(func_9570_call(), 1)
func_6896_call = mod.get_global_var('func_6896')
func_6900_call = mutated_mod.get_global_var('func_6900')
const_10643 = relay.const([[6],[7],[-3],[-8],[9],[10],[5],[5],[-1],[7],[8],[-2],[-8],[6],[4],[-10],[-3],[4],[1],[-1],[-5],[2],[-6],[-8],[-1],[5],[-9],[-6],[7],[10],[5],[4],[5],[6],[-7],[10],[9],[-3],[-1],[1],[8],[-1],[2],[1],[-9],[-3],[-1],[6],[4],[-3],[10],[-4],[-5],[1],[-10],[10],[-8],[-2],[-10],[2],[-3],[6],[3],[-9],[-4],[7],[-8],[-3],[7],[-9],[-8],[-4],[1],[9],[-8],[1],[-5],[7],[-10],[4],[-1],[-8],[-1],[1],[4],[-7],[-10],[1],[7],[-3],[8],[-10],[4],[2],[4],[-8],[6],[-3],[8],[8],[-6],[4],[-6],[-7],[4],[1],[7],[-6],[9],[-7],[-3],[-9],[2],[7],[5],[-1],[10],[7],[2],[-2],[6],[-8],[-3],[6],[-2],[6],[-7],[-6],[6],[-8],[-9],[-2],[-8],[-7],[-4],[7],[-10],[-5],[-9],[8],[5],[9],[-6],[2],[6],[-3],[-10],[-6],[-5],[-9],[1],[9],[2],[8],[-6],[-5],[8],[-2],[6],[-6],[-3],[-1],[-3],[1],[1],[-7],[7],[8],[1],[-1],[2],[-7],[-9],[-7],[-2],[-9],[-2],[-7],[-9],[-3],[10],[3],[-5],[5],[6],[-2],[-1],[1],[9],[-6],[2],[5],[8],[-9],[10],[-7],[1],[8],[-2],[-3],[-8],[-9],[5],[8],[9],[-2],[-1],[-5],[8],[-8],[-5],[1],[-5],[-3],[9],[-7],[10],[-5],[-7],[8],[8],[9],[8],[10],[7],[6],[-1],[9],[3],[4],[7],[-10],[-9],[-3]], dtype = "int64")#candidate|10643|(234, 1)|const|int64
const_10644 = relay.const([4,-2,9,-6,-5,7,6,-6,7,-6,-3,4,9,8,2,2,7,1,-1,-4,-2,6,10,-3,-3,-8,2,-10,7,-5,-9,5,9,1,4,8,8,-6,-8,-7,-9,-7,-9,6,-9,5,5,4,-7,-8,2,-1,-10,3,7,8,5,1,-4,-9,5,1,-5,8,9,7,1,-4,-4,-8,-4,-8,-4,4,5,1,9,-2,6,-8,-5,8,10,9,-8,-4,-5,-3,1,-5,1,6,9,-4,-7,1,7,2,-1,3,7,-2,-10,-9,4,-7,3,7,-3,-6,3,-4,5,10,-6,5,-2,6,-4,5,3,3,7,-6,10,3,-9,8,5,-2,-2,-4,4,6,-7,5,5,5,-9,2,-5,7,-4,-8,2,9,6,8,-5,7,-5,3,-10,2,9,1,1,-8,10,3,5,-7,7,-1,10,-6,10,-5,-8,-2,-2,-3,-10,7,6,-3,2,-5,7,-1,4,4,-7,-6,7,-3,10,4,-6,1,3,-6,8,-5,-7,-2,4,-5,-4,-5,9,-1,-6,1,8,-6,10,7,3,-2,6,9,9,-2,-5,5,-7,-2,-5,-4], dtype = "uint8")#candidate|10644|(220,)|const|uint8
call_10642 = relay.TupleGetItem(func_6896_call(relay.reshape(const_10643.astype('int64'), [117, 2]), relay.reshape(const_10644.astype('uint8'), [220,]), ), 6)
call_10645 = relay.TupleGetItem(func_6900_call(relay.reshape(const_10643.astype('int64'), [117, 2]), relay.reshape(const_10644.astype('uint8'), [220,]), ), 6)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_10658 = func_4831_call()
call_10659 = func_4831_call()
output = relay.Tuple([call_10637,call_10642,const_10643,const_10644,call_10658,])
output2 = relay.Tuple([call_10638,call_10645,const_10643,const_10644,call_10659,])
func_10662 = relay.Function([], output)
mod['func_10662'] = func_10662
mod = relay.transform.InferType()(mod)
mutated_mod['func_10662'] = func_10662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mutated_mod.get_global_var('func_10662')
call_10663 = func_10662_call()
output = call_10663
func_10664 = relay.Function([], output)
mutated_mod['func_10664'] = func_10664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7415_call = mod.get_global_var('func_7415')
func_7416_call = mutated_mod.get_global_var('func_7416')
call_10678 = relay.TupleGetItem(func_7415_call(), 0)
call_10679 = relay.TupleGetItem(func_7416_call(), 0)
output = relay.Tuple([call_10678,])
output2 = relay.Tuple([call_10679,])
func_10684 = relay.Function([], output)
mod['func_10684'] = func_10684
mod = relay.transform.InferType()(mod)
output = func_10684()
func_10685 = relay.Function([], output)
mutated_mod['func_10685'] = func_10685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10697 = relay.var("var_10697", dtype = "float32", shape = ())#candidate|10697|()|var|float32
const_10698 = relay.const([[[0.118237,-7.328628,-8.240233,-4.674786,-2.523986,-7.338399,4.762992,1.783470,5.965750,8.658986,4.884514,1.916636,9.909706,-4.911306],[4.938015,-1.205901,-5.445734,-5.140074,3.201291,-9.249349,0.645610,5.408434,6.473079,-6.728275,2.781207,-5.729780,-4.740995,0.677953],[-2.611434,2.892446,-6.333504,0.543031,-4.586215,2.873139,-0.023328,6.114772,-7.078614,-3.113398,9.876487,7.452119,-5.725171,0.244438],[2.300395,9.730887,3.071343,0.418564,-3.328542,-7.492052,6.977160,-1.855920,1.045492,4.097827,-5.159314,1.362759,2.371987,8.890166],[-1.580045,-3.799710,9.491202,-7.242402,-4.443422,-6.889958,-9.897420,-5.205188,-6.175350,5.544695,-8.988574,-3.833855,2.016328,8.510001],[-6.871956,-9.375227,9.769480,-9.350103,-8.877328,9.890216,-9.704769,-8.855611,-1.532448,-0.136235,7.014355,-5.477020,3.247052,3.268433],[8.832400,4.751949,0.899816,-3.820422,-3.233086,4.423849,7.070905,0.873174,0.451882,-6.290769,-3.441761,-9.134378,5.942153,-2.073976]],[[2.995687,4.223468,-2.248802,-1.233995,-9.392816,-1.793332,3.431513,-1.364399,6.088796,0.700808,6.528188,-9.013884,-2.969766,9.112934],[-4.703066,-8.898983,5.166477,-7.862892,-0.147408,7.329922,2.997758,6.631607,-7.512899,-2.797735,-8.582325,-1.829406,9.902133,4.878916],[2.479019,1.866254,-3.116358,-8.696925,6.463622,4.764528,4.699886,8.806941,6.731881,-2.204253,-2.716042,3.024823,-2.571719,-3.092430],[-8.943560,7.847480,-8.741682,9.470453,1.606612,4.216382,-9.709995,-5.607579,3.392806,6.881828,5.784901,-5.531748,-4.331491,-8.731886],[3.871903,-5.638164,-3.064841,-8.600644,3.978679,-8.233422,2.023235,5.243544,-7.330831,0.207953,3.191141,-5.639737,-6.213242,-0.433104],[-0.114270,9.033287,3.284916,-1.863377,-5.207209,0.882481,-3.332224,-2.198042,1.378828,-8.117903,6.588658,3.786574,-7.571720,1.213575],[2.292760,4.843865,-9.787695,9.850083,-6.294281,-9.641505,-7.880095,-7.184156,2.415314,-8.669889,2.355364,-6.248851,2.819863,0.361537]],[[-8.914025,-7.157524,8.420728,7.500855,6.564004,7.114383,-8.122467,-4.382632,5.334359,-9.525843,1.874739,3.187503,9.773887,8.281181],[-0.722990,-4.139739,-2.251228,-9.265214,-8.755077,2.638296,-9.351179,0.590419,-4.722355,-6.423184,0.484944,-2.643279,3.148663,6.651760],[-2.721427,2.405472,9.777139,7.016252,3.265805,0.099620,0.584023,8.587000,-0.918578,6.707365,-1.395618,-8.721228,-8.469392,-1.898095],[3.262454,-3.995549,-4.223191,-0.946371,6.782026,9.580990,2.495162,-5.895609,-8.902141,-7.275307,-2.359180,4.451310,4.467458,-4.959511],[2.916583,-1.316554,-7.547263,-3.039380,-4.467904,6.638191,-0.581688,-8.943302,1.377075,-1.353859,-7.294285,-0.376207,-6.898853,9.003097],[-1.041281,6.608394,-1.256936,-9.773207,-6.409807,-0.573441,7.288825,-2.679609,-9.583738,4.026211,6.941629,8.294008,-7.071668,6.503895],[-7.923364,9.803467,-7.375488,-9.610730,-2.063800,-9.406731,7.554147,9.171179,-3.526809,-4.400214,1.174319,-0.125343,7.663707,-2.814768]],[[-4.553821,6.876316,6.987870,5.033786,1.206839,-5.349101,-8.059071,4.053098,1.733800,-7.367101,-1.159759,1.224545,-6.336528,0.590659],[6.359441,0.874314,0.803526,-6.663138,4.633536,-6.563138,7.534811,-3.942094,6.538416,3.318993,3.566962,-4.499081,-2.983830,6.152868],[-4.270202,4.767348,-0.490794,7.677633,8.341534,-1.055252,7.826769,5.219826,-6.792247,-2.796668,6.444534,-5.522286,4.786272,6.370683],[-3.472731,-7.734844,1.888525,0.353303,-5.419142,6.008780,-2.689920,0.042608,-2.258376,7.641090,-3.455154,2.114682,9.849410,-3.443788],[-9.669693,7.865491,-7.854425,4.648775,3.475714,-0.853632,5.187635,9.347893,2.664859,2.841106,0.041511,-4.680106,-4.581795,-3.930084],[-9.160159,-8.489311,-4.609809,1.759249,5.122809,-2.562887,0.687138,7.133566,-9.512475,3.349322,4.043070,6.554611,6.169689,-1.230183],[3.601507,7.136635,-0.725770,1.862667,3.814722,5.172865,3.782311,1.531782,-1.915076,-4.107782,0.149178,4.623110,-9.823136,-4.416416]],[[-8.595142,-2.521149,8.274834,9.711954,7.584885,-5.187024,-9.122096,-5.234395,6.313802,-5.039463,-0.925521,-0.365285,-1.108962,-4.329612],[-9.328231,-5.324027,5.355204,4.998570,4.519079,-8.637652,2.738733,4.195409,9.899304,7.406075,-3.453985,-5.798076,-9.528953,-3.480448],[-1.567515,-6.904636,7.619751,-2.237396,6.471125,6.056705,-3.448485,7.289906,-4.766721,9.436310,-0.773546,-1.066320,5.876047,6.502520],[2.515998,-3.767666,-8.385137,9.188575,-5.984623,8.579262,7.169453,-1.262639,-7.335693,2.502296,-1.009991,-6.052594,2.634911,5.926731],[-0.064916,6.500005,7.509154,0.055069,-9.379233,7.271002,-7.150089,-2.811914,-6.778733,-8.415500,-2.008907,9.235884,-2.215763,-0.880265],[1.669603,-2.358384,-6.973295,8.384586,-1.946262,-3.924952,8.898432,6.128826,-5.386061,8.108076,-3.122165,4.659505,0.295883,0.648703],[7.524658,-1.348971,-9.519858,-1.037422,-6.463409,-3.375573,-9.314914,6.253324,-8.530646,-4.923446,-3.319150,2.084943,1.451937,9.470994]],[[-7.464427,-2.203266,-9.286410,-6.873293,-8.105091,-1.740198,-0.075196,6.948170,8.160132,8.806955,3.327613,-0.741287,0.361748,-1.157414],[-9.493104,-2.927499,-1.929132,-7.875324,7.718132,1.806862,7.252508,-1.128138,-8.139257,1.792973,-9.361635,-9.930546,-2.724992,8.090521],[-2.439888,-3.017740,6.245541,5.532715,6.626067,9.518220,-6.430692,-0.422183,-2.167937,-3.807205,-1.716822,-5.616742,-0.476063,-4.424513],[0.239708,-1.225197,0.611688,-3.638836,9.145315,4.518811,-0.710990,1.493649,4.816922,-2.397200,-5.019135,7.069296,-0.536050,6.913256],[-5.585759,4.031239,5.645815,3.958206,-9.050852,-9.801842,-5.874541,5.720076,-6.875184,4.873039,-9.386851,3.039796,-6.196519,-0.066557],[-0.557889,2.504557,5.384683,-7.500044,5.871552,-3.835953,5.323611,6.608351,-9.268970,-5.982640,-3.589921,-1.918567,-1.375921,7.042083],[-4.626480,2.556949,-2.066074,2.255625,-5.369448,-6.267933,-0.117017,7.827062,4.895847,7.524867,1.861216,-2.415904,4.399871,3.680430]],[[-2.740588,6.167309,-5.753202,2.710664,5.034371,-8.945499,-7.364222,5.662019,2.637353,5.982607,-7.915351,-3.179664,-1.629733,8.844236],[-1.590195,3.366370,2.523483,4.712308,-2.311159,-1.828830,-9.925477,1.459805,-0.378764,2.456204,5.266041,-0.961619,4.484156,-6.269357],[-0.442304,9.682484,-9.233088,4.993311,1.268977,9.792208,-4.656691,-8.067516,-2.667869,2.216662,-0.874743,1.865994,6.277069,8.425515],[-1.486157,4.194182,1.504484,7.609320,8.280320,-1.905962,-8.894023,-3.781575,7.052308,7.843672,-5.996580,-9.295314,6.261828,7.766502],[-0.857928,4.166083,-2.420969,6.916610,4.941336,1.249581,9.335903,-5.601086,6.184778,-6.763510,2.291281,-6.187059,4.324340,-9.181779],[-3.229746,6.016821,6.096067,-5.462081,2.062562,0.892687,-4.418804,-1.410832,-1.573766,2.408587,7.655503,6.913825,6.834087,3.883180],[-9.505433,0.728446,2.836343,0.188009,3.557182,-9.202530,4.828617,-4.208204,-6.526446,-5.639620,4.803225,-7.972713,2.015351,6.792711]]], dtype = "float32")#candidate|10698|(7, 7, 14)|const|float32
bop_10699 = relay.floor_divide(var_10697.astype('float32'), const_10698.astype('float32')) # shape=(7, 7, 14)
uop_10703 = relay.sinh(const_10698.astype('float32')) # shape=(7, 7, 14)
output = relay.Tuple([bop_10699,uop_10703,])
output2 = relay.Tuple([bop_10699,uop_10703,])
func_10705 = relay.Function([var_10697,], output)
mod['func_10705'] = func_10705
mod = relay.transform.InferType()(mod)
var_10706 = relay.var("var_10706", dtype = "float32", shape = ())#candidate|10706|()|var|float32
output = func_10705(var_10706)
func_10707 = relay.Function([var_10706], output)
mutated_mod['func_10707'] = func_10707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6489_call = mod.get_global_var('func_6489')
func_6491_call = mutated_mod.get_global_var('func_6491')
call_10747 = relay.TupleGetItem(func_6489_call(), 0)
call_10748 = relay.TupleGetItem(func_6491_call(), 0)
func_6015_call = mod.get_global_var('func_6015')
func_6016_call = mutated_mod.get_global_var('func_6016')
call_10781 = func_6015_call()
call_10782 = func_6015_call()
output = relay.Tuple([call_10747,call_10781,])
output2 = relay.Tuple([call_10748,call_10782,])
func_10795 = relay.Function([], output)
mod['func_10795'] = func_10795
mod = relay.transform.InferType()(mod)
mutated_mod['func_10795'] = func_10795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10795_call = mutated_mod.get_global_var('func_10795')
call_10796 = func_10795_call()
output = call_10796
func_10797 = relay.Function([], output)
mutated_mod['func_10797'] = func_10797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_10816 = func_7602_call()
call_10817 = func_7602_call()
func_8593_call = mod.get_global_var('func_8593')
func_8595_call = mutated_mod.get_global_var('func_8595')
call_10823 = relay.TupleGetItem(func_8593_call(), 0)
call_10824 = relay.TupleGetItem(func_8595_call(), 0)
output = relay.Tuple([call_10816,call_10823,])
output2 = relay.Tuple([call_10817,call_10824,])
func_10848 = relay.Function([], output)
mod['func_10848'] = func_10848
mod = relay.transform.InferType()(mod)
mutated_mod['func_10848'] = func_10848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10848_call = mutated_mod.get_global_var('func_10848')
call_10849 = func_10848_call()
output = call_10849
func_10850 = relay.Function([], output)
mutated_mod['func_10850'] = func_10850
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10856 = relay.const([[[-5,-10],[2,4],[10,-7],[10,9],[2,9],[-10,-3],[-10,1]],[[-8,-7],[-7,-10],[10,-5],[5,-5],[2,8],[-4,9],[-5,6]],[[-7,-3],[5,9],[-9,-3],[2,1],[-9,-2],[-2,5],[9,-10]],[[8,-2],[-1,1],[-4,-10],[-1,4],[-10,-3],[-3,10],[-7,-1]],[[-8,-3],[-7,1],[-9,-3],[-5,8],[7,-9],[10,8],[9,1]],[[4,6],[-5,10],[3,9],[6,-5],[-9,6],[6,5],[-9,9]],[[10,8],[4,-7],[3,10],[-9,-8],[-2,-5],[-7,-7],[8,8]],[[4,9],[-9,-1],[9,3],[-5,7],[-3,8],[-5,8],[-8,6]],[[-8,5],[-4,-9],[1,8],[-8,-1],[-6,-7],[-3,-8],[-10,2]],[[-3,3],[-3,-7],[-5,1],[-6,6],[-2,7],[7,-8],[-8,9]],[[-3,5],[-9,1],[-1,8],[5,-1],[-10,7],[6,-1],[7,-3]]], dtype = "int8")#candidate|10856|(11, 7, 2)|const|int8
var_10857 = relay.var("var_10857", dtype = "int8", shape = (11, 7, 2))#candidate|10857|(11, 7, 2)|var|int8
bop_10858 = relay.left_shift(const_10856.astype('int8'), relay.reshape(var_10857.astype('int8'), relay.shape_of(const_10856))) # shape=(11, 7, 2)
output = bop_10858
output2 = bop_10858
F = relay.Function([var_10857,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10857,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

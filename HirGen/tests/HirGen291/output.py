import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_256 = relay.var("var_256", dtype = "int8", shape = (2, 16, 8))#candidate|256|(2, 16, 8)|var|int8
var_257 = relay.var("var_257", dtype = "int8", shape = (2, 16, 8))#candidate|257|(2, 16, 8)|var|int8
bop_258 = relay.left_shift(var_256.astype('int8'), relay.reshape(var_257.astype('int8'), relay.shape_of(var_256))) # shape=(2, 16, 8)
output = relay.Tuple([bop_258,])
output2 = relay.Tuple([bop_258,])
func_266 = relay.Function([var_256,var_257,], output)
mod['func_266'] = func_266
mod = relay.transform.InferType()(mod)
mutated_mod['func_266'] = func_266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_266_call = mutated_mod.get_global_var('func_266')
var_268 = relay.var("var_268", dtype = "int8", shape = (2, 16, 8))#candidate|268|(2, 16, 8)|var|int8
var_269 = relay.var("var_269", dtype = "int8", shape = (2, 16, 8))#candidate|269|(2, 16, 8)|var|int8
call_267 = func_266_call(var_268,var_269,)
output = call_267
func_270 = relay.Function([var_268,var_269,], output)
mutated_mod['func_270'] = func_270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_402 = relay.var("var_402", dtype = "float64", shape = (7, 1, 7))#candidate|402|(7, 1, 7)|var|float64
var_403 = relay.var("var_403", dtype = "float64", shape = (7, 16, 7))#candidate|403|(7, 16, 7)|var|float64
bop_404 = relay.maximum(var_402.astype('float64'), var_403.astype('float64')) # shape=(7, 16, 7)
bop_410 = relay.floor_mod(var_402.astype('float32'), var_403.astype('float32')) # shape=(7, 16, 7)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
var_433 = relay.var("var_433", dtype = "int8", shape = (256,))#candidate|433|(256,)|var|int8
call_432 = relay.TupleGetItem(func_266_call(relay.reshape(var_433.astype('int8'), [2, 16, 8]), relay.reshape(var_433.astype('int8'), [2, 16, 8]), ), 0)
call_434 = relay.TupleGetItem(func_270_call(relay.reshape(var_433.astype('int8'), [2, 16, 8]), relay.reshape(var_433.astype('int8'), [2, 16, 8]), ), 0)
uop_436 = relay.log2(var_402.astype('float64')) # shape=(7, 1, 7)
bop_439 = relay.power(uop_436.astype('float64'), bop_410.astype('float64')) # shape=(7, 16, 7)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
call_467 = relay.TupleGetItem(func_266_call(relay.reshape(var_433.astype('int8'), [2, 16, 8]), relay.reshape(call_432.astype('int8'), [2, 16, 8]), ), 0)
call_468 = relay.TupleGetItem(func_270_call(relay.reshape(var_433.astype('int8'), [2, 16, 8]), relay.reshape(call_432.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([bop_404,call_432,var_433,bop_439,call_467,])
output2 = relay.Tuple([bop_404,call_434,var_433,bop_439,call_468,])
func_495 = relay.Function([var_402,var_403,var_433,], output)
mod['func_495'] = func_495
mod = relay.transform.InferType()(mod)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_495_call = mutated_mod.get_global_var('func_495')
var_497 = relay.var("var_497", dtype = "float64", shape = (7, 1, 7))#candidate|497|(7, 1, 7)|var|float64
var_498 = relay.var("var_498", dtype = "float64", shape = (7, 16, 7))#candidate|498|(7, 16, 7)|var|float64
var_499 = relay.var("var_499", dtype = "int8", shape = (256,))#candidate|499|(256,)|var|int8
call_496 = func_495_call(var_497,var_498,var_499,)
output = call_496
func_500 = relay.Function([var_497,var_498,var_499,], output)
mutated_mod['func_500'] = func_500
mutated_mod = relay.transform.InferType()(mutated_mod)
const_735 = relay.const([[[0.737865],[-7.423811],[-2.688973],[-7.532561],[-5.904001],[-4.317250],[5.964549],[2.223264],[4.133781],[8.206284],[-3.578014],[3.451735],[4.255474],[-0.106219]],[[-9.970954],[8.982403],[9.686602],[-6.934006],[-8.950484],[5.710651],[-4.802989],[-7.615671],[9.727301],[7.725002],[2.494700],[8.160860],[-4.314624],[-3.999255]],[[-0.355765],[-3.004327],[-6.947672],[-1.596213],[8.960136],[-9.295350],[-5.828241],[-1.557892],[9.734416],[-1.192234],[7.856953],[2.114960],[1.151535],[-2.620509]],[[4.396029],[8.645186],[2.931458],[-9.308134],[4.444024],[-7.184302],[0.223464],[-9.408299],[-4.621926],[-2.603018],[3.758990],[-5.266652],[-3.637222],[2.112283]]], dtype = "float64")#candidate|735|(4, 14, 1)|const|float64
uop_736 = relay.atan(const_735.astype('float64')) # shape=(4, 14, 1)
func_495_call = mod.get_global_var('func_495')
func_500_call = mutated_mod.get_global_var('func_500')
var_739 = relay.var("var_739", dtype = "float64", shape = (49,))#candidate|739|(49,)|var|float64
var_740 = relay.var("var_740", dtype = "float64", shape = (2, 392))#candidate|740|(2, 392)|var|float64
const_741 = relay.const([-3,6,6,1,-5,-3,6,9,9,-8,-3,-1,-9,-7,2,-7,-7,-4,-8,4,7,-2,3,6,9,6,2,-10,10,-2,-5,7,2,7,-6,3,10,-6,-9,7,-6,-1,-10,-9,-8,7,2,7,5,3,-5,-7,-6,-10,-5,2,-9,2,-5,4,-4,9,4,9,2,-3,10,3,-4,10,7,-3,-6,8,7,-7,10,6,-3,-3,7,-3,-5,3,-7,-9,5,-3,-10,-2,-10,8,6,1,-7,6,10,2,-4,-7,8,-7,9,-1,10,5,-2,-9,-7,10,7,-9,-3,-4,-6,10,-8,-4,-9,-5,-10,-1,5,3,-4,-5,6,10,5,-8,7,-2,9,2,-10,-10,-9,-3,3,-4,8,8,5,5,1,8,5,1,-7,3,9,-8,-4,-3,-6,2,8,9,-7,3,2,-6,-3,-1,1,8,5,10,-6,6,10,7,7,1,-2,2,6,-1,4,-9,-5,-6,-10,2,9,-9,6,-7,6,7,-2,2,-6,9,4,-6,5,-1,-10,3,9,-8,-2,7,5,-3,-2,9,9,-7,-3,2,-7,-3,6,-6,-9,-7,1,6,8,7,8,8,-1,10,10,-4,-7,-5,4,-5,6,-4,7,-5,3,5,-5,7,-7,-1,-1,5,-3,-8,-10,10,8,-4,-5,-2,-2,-8,-9,4], dtype = "int8")#candidate|741|(256,)|const|int8
call_738 = relay.TupleGetItem(func_495_call(relay.reshape(var_739.astype('float64'), [7, 1, 7]), relay.reshape(var_740.astype('float64'), [7, 16, 7]), relay.reshape(const_741.astype('int8'), [256,]), ), 1)
call_742 = relay.TupleGetItem(func_500_call(relay.reshape(var_739.astype('float64'), [7, 1, 7]), relay.reshape(var_740.astype('float64'), [7, 16, 7]), relay.reshape(const_741.astype('int8'), [256,]), ), 1)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
call_743 = relay.TupleGetItem(func_266_call(relay.reshape(const_741.astype('int8'), [2, 16, 8]), relay.reshape(call_738.astype('int8'), [2, 16, 8]), ), 0)
call_744 = relay.TupleGetItem(func_270_call(relay.reshape(const_741.astype('int8'), [2, 16, 8]), relay.reshape(call_738.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([uop_736,call_738,var_739,var_740,const_741,call_743,])
output2 = relay.Tuple([uop_736,call_742,var_739,var_740,const_741,call_744,])
func_752 = relay.Function([var_739,var_740,], output)
mod['func_752'] = func_752
mod = relay.transform.InferType()(mod)
var_753 = relay.var("var_753", dtype = "float64", shape = (49,))#candidate|753|(49,)|var|float64
var_754 = relay.var("var_754", dtype = "float64", shape = (2, 392))#candidate|754|(2, 392)|var|float64
output = func_752(var_753,var_754,)
func_755 = relay.Function([var_753,var_754,], output)
mutated_mod['func_755'] = func_755
mutated_mod = relay.transform.InferType()(mutated_mod)
const_777 = relay.const([[[2.058410,9.757446,3.558749,-0.890913,6.726273,-4.286917,-7.423008,8.609373,-3.771255,4.454801,-9.532614,-5.751682],[-4.960157,9.525543,1.000932,-5.941222,-3.404680,-0.054056,-8.192064,-3.440540,8.385422,-7.787023,6.834096,-1.781825],[7.870995,-3.279456,-5.217793,8.356066,-3.129526,6.322769,8.237393,-2.517183,0.512393,-2.545390,0.744546,4.651573],[0.725946,-9.910699,6.064051,-1.394105,4.024124,-0.062594,6.595886,-0.002271,-9.350405,-5.402486,9.019200,8.352677],[2.401849,-4.163507,-0.884325,-4.816448,1.914289,-0.375558,5.328840,3.084794,8.965931,-1.511957,5.496974,-2.220631],[-6.008807,-5.843375,2.292303,-8.708015,7.714945,-9.330024,-5.127175,6.016180,8.385975,1.333111,-4.191621,0.388688],[-4.935070,-9.555832,-6.233824,-5.631163,9.448336,-7.790513,-3.337766,-6.901475,5.453304,-9.269693,7.475068,-6.875183],[9.964571,3.122082,-2.243423,-0.242898,0.452541,7.735395,9.087937,-4.992098,-9.284979,-2.355130,-5.617404,-3.622504],[2.785306,1.409009,-9.710307,4.923788,9.518747,9.006452,-1.060956,5.209550,-0.745036,3.889281,-9.316399,6.692957],[3.092512,8.833761,-9.384268,8.901942,-0.073977,-3.131619,-9.148461,3.179305,-4.693352,-1.960781,-1.670655,-7.993288],[-5.886579,-7.108622,-7.165074,1.886225,1.642359,7.791853,-9.748801,9.984623,7.198911,7.167502,-2.321306,-9.421206],[7.043990,1.107849,-4.459434,-9.816491,5.167453,9.177153,-2.297826,9.147903,8.272610,1.229952,-0.054678,4.184375],[-7.550954,2.381273,0.598504,-0.381415,-3.940659,-5.834044,2.677913,5.598974,0.592722,-5.619217,8.503309,-5.315841],[-4.396986,-3.614332,-9.094245,4.541923,-3.861728,1.547603,-3.565286,-1.985590,5.660181,2.869355,-4.555772,-0.510602],[3.826847,1.864991,-9.428939,7.992952,-2.190548,7.392013,5.754644,4.641255,-5.365035,6.737114,-5.493954,5.845889]],[[-8.243262,5.620644,-0.931501,6.358682,-7.682258,-0.888849,-7.890514,-5.124804,-7.292213,5.284096,-0.166709,4.018332],[-5.164203,8.027413,4.382178,-2.643562,9.238709,-5.050877,2.084466,4.942283,-7.617117,0.693399,4.025719,5.246538],[9.854822,-6.181914,-1.436580,-0.300823,-2.547241,2.192969,6.275661,-6.058895,3.353596,-5.668663,-5.776048,0.470806],[8.731558,6.054660,-2.257377,-9.406468,5.546141,2.411416,5.653466,-6.643293,8.525937,1.173196,-7.885872,7.291201],[-7.911960,-8.680449,7.431620,9.315468,-0.359575,1.928633,-2.251135,2.053642,-4.810437,7.073654,-7.176775,-7.223295],[4.524221,-0.653040,0.104246,-2.176291,3.821913,-6.033709,-4.752164,-1.194611,-1.362164,8.181390,2.457692,-8.424294],[1.660340,3.747325,-6.801575,6.418991,9.291990,3.653421,8.970643,-6.913628,-4.009654,6.028045,0.082876,-5.245562],[3.489810,-9.337954,-4.296258,1.714722,-5.457269,5.885566,-1.636110,-3.312245,3.795144,-7.499027,2.031101,4.610554],[8.695608,-8.299496,-3.597167,-0.617545,-2.656252,0.202132,5.551885,-1.477640,8.078724,-1.701786,-3.637109,-1.339487],[-3.957760,-7.919812,4.628469,-3.679829,-7.073937,4.496802,8.498685,6.852274,-3.987354,-5.680995,8.714697,6.217005],[-6.034978,-8.056619,6.010046,-3.923436,4.749303,6.326493,5.588902,0.609304,4.467639,-9.936699,-5.139372,-7.200201],[-6.858548,-1.533266,-1.769685,9.979559,-0.099187,0.176422,-9.220172,4.399466,4.681835,-6.100782,-8.002007,-0.352092],[3.970114,-5.746044,-1.123896,-1.330131,2.190822,-6.587825,2.970448,3.145262,6.438377,9.232002,-3.893749,9.431296],[4.864795,-5.753852,8.454608,2.420362,-0.865938,-7.886199,4.422585,1.355830,-9.136817,-2.341139,9.070954,1.130957],[-8.863075,-2.085210,8.800937,-0.486240,-1.406540,7.027359,-3.075888,-8.194528,-6.706222,0.466032,6.016451,1.995074]],[[2.402364,3.441871,4.120004,5.908874,1.685667,-8.476777,-3.676737,-2.659622,-7.731198,-1.704679,-4.078330,4.974852],[-9.200390,-7.691812,5.388000,8.417144,9.964941,-6.112530,1.222153,4.418670,3.287337,6.073406,-6.363260,-7.866038],[8.456939,2.277625,7.356156,7.743952,-7.868558,-9.179231,5.299465,-1.009950,-3.068530,3.964690,-8.015602,0.825764],[-7.949123,8.578361,-8.201521,9.507645,4.673208,5.621652,9.548067,-0.407811,6.559961,-1.349448,-9.571218,6.855200],[8.389213,-3.976174,1.602601,6.682031,-2.576657,6.267799,5.795555,6.076389,6.010900,9.179834,6.611735,-3.635386],[-1.842816,4.733240,3.563923,-1.309207,7.867271,9.589033,-9.958213,-1.856446,4.103727,0.833552,5.921617,6.730992],[4.127038,3.510250,-1.508183,6.160915,-4.993708,2.268440,-8.851398,-4.028928,-0.326861,-2.191199,5.604043,-2.897767],[-2.579213,1.150219,-3.968812,0.467561,6.970106,-6.233571,-8.130239,1.333248,-8.858740,2.183389,-1.935143,-7.767428],[9.913926,2.665502,1.924883,6.635981,9.577216,7.306705,-2.937625,9.427390,-7.953402,2.668678,-5.318275,1.012982],[-0.163014,9.267775,5.117617,8.729704,-6.155648,6.157214,-9.583153,-5.892586,9.475000,8.553160,-9.482247,6.729786],[-2.516432,7.140096,2.521610,3.456103,9.839004,-9.308602,-6.828315,8.137726,-3.968657,0.532100,-1.818626,-1.546915],[2.754502,0.090276,4.605977,-3.012622,9.817516,-0.133216,5.818429,-4.987239,-1.049756,3.246746,2.239449,2.366737],[1.973603,-0.367464,-3.025927,5.125962,8.614298,4.345218,3.976689,-7.179835,-0.946194,-4.538919,7.558550,-1.967571],[3.461388,-3.739599,3.165464,9.387601,-5.578304,-2.532062,-8.714746,9.835871,-2.727086,-7.994708,-4.867006,-1.229049],[2.624224,-4.723826,-7.824919,-7.187208,-8.867283,-0.617529,5.280330,-5.487315,3.686586,-6.937152,-7.079511,6.239179]],[[3.468958,0.896128,9.941606,-7.531650,-5.900960,8.870181,2.330535,-8.068578,-5.084235,9.455104,-4.294353,-4.839998],[-5.910105,-6.956534,-3.770416,3.710129,6.658666,5.153132,7.758903,-2.955736,1.245039,-8.449734,8.278158,-7.964970],[8.684629,9.142223,-4.748227,8.535846,7.682893,4.147058,-9.838216,6.449026,2.468530,-1.176707,-6.503579,-3.363484],[-3.444364,-8.641482,-9.654761,7.341139,8.186062,3.686257,-7.991039,-9.968077,-9.153126,9.844816,8.086424,7.817787],[-2.323202,0.835897,-7.765379,-7.083667,-5.437988,-0.899191,4.078446,-4.709871,5.218595,-3.400934,-8.393467,8.189283],[5.392607,3.524437,4.898412,7.496899,-4.824988,-9.229982,4.973473,5.153754,0.058640,-5.560304,-9.536054,0.160165],[-5.134276,4.311123,5.233749,-3.257168,-4.538838,1.123365,-0.682175,0.856560,1.670102,1.719140,-3.837460,-3.448961],[-9.317985,-0.880904,9.250959,-8.730496,-6.117719,-9.886476,-1.700199,-8.266986,5.216582,-0.837734,-7.344978,-5.586537],[7.471279,-9.619089,0.349463,-7.497187,6.510607,-5.991639,-3.904449,3.516487,-0.716712,-8.372586,-4.821601,2.759089],[-6.564376,1.765112,7.367670,-1.037199,4.735233,-0.465298,5.229478,-8.576349,-2.635851,7.864812,-6.058562,8.503857],[5.413112,0.850041,-5.201596,7.963054,9.706032,6.723388,-0.981603,9.895245,6.603879,-3.651828,-3.884404,9.603409],[8.978545,-2.371132,5.658186,5.786069,6.537257,-1.951798,1.340936,8.429704,-7.985341,-1.190725,-7.160801,-7.836764],[8.664108,2.465166,-1.532815,-7.640081,3.030168,6.755637,-7.936970,7.861293,3.103516,6.053688,5.577730,8.613811],[-3.188739,7.485528,-7.000570,-0.521026,-1.456919,8.520999,-7.104599,8.512817,-9.938685,4.889761,3.531046,1.515862],[-1.928124,8.217836,7.844986,-4.943275,-8.995230,-0.777712,9.538506,4.675924,-0.320909,-3.948389,-2.933010,2.598390]],[[-2.017181,-6.657023,4.095110,2.800157,-7.560183,-4.867541,8.538746,2.438508,-1.563775,-7.104031,-2.397477,1.047327],[4.094392,-6.293887,3.424569,-9.236362,-2.425599,3.517100,-1.244451,3.399757,-1.439221,-1.736170,-0.269216,2.925618],[-5.896093,6.740052,9.072321,7.643726,-5.382302,2.717396,4.494575,-3.578887,-5.329768,-8.398837,-8.543372,9.418149],[4.886281,-8.907973,-9.595153,-8.055069,-9.626249,0.461029,-2.859302,-7.902730,-5.823756,3.718129,9.947771,7.677138],[7.637678,3.393828,-5.734101,-0.392274,-1.667207,6.916513,6.441842,6.143455,0.591612,9.014302,-8.045843,4.685438],[2.019995,-9.509486,-0.246525,-9.669276,4.476749,5.542374,9.300550,5.498568,-5.751629,-6.605226,-6.475423,3.386754],[-1.376033,-5.083902,-7.383071,-4.381264,-6.082828,3.979793,-1.690507,-8.869078,8.680247,7.763769,-1.763997,-9.673687],[-9.836351,-6.664026,9.661448,-5.862528,-9.963026,-8.395208,-9.370918,0.485384,9.305639,2.202206,-1.724330,-1.018265],[1.217107,-3.449563,-0.275319,0.795171,7.734056,-5.702483,7.928929,7.725300,0.101931,9.637191,-7.628261,-4.810528],[2.739857,6.399966,1.280036,6.847254,-8.231968,-0.039079,-6.955752,0.866113,6.894264,-6.448698,-7.196519,8.795483],[8.555943,-8.715136,3.419472,-1.216298,-4.170747,-8.134099,2.898639,9.195255,-7.491544,-2.596188,6.203177,-8.891484],[8.448187,6.912185,-8.539891,6.195467,8.455505,8.931302,-1.423539,9.410401,-3.941978,0.830898,7.337047,9.216641],[-5.226208,6.096534,6.341793,3.097735,-1.352136,-8.798698,1.607040,0.016800,3.267783,8.510845,-2.668317,8.160864],[-4.123803,-8.363107,3.203970,1.769183,8.995599,0.596722,6.105483,-5.877041,2.920398,-9.658684,-7.656803,-1.451395],[3.529436,-0.571835,-7.694190,-8.646208,-7.869211,8.092484,-4.612227,8.244496,7.271496,-0.988933,2.945493,-6.837922]],[[2.529454,3.365031,-8.817320,-8.759859,2.554742,3.319650,-6.095754,9.202241,-3.642969,-5.839231,8.439709,1.059490],[-5.997145,3.152313,-8.436508,-1.850135,2.358338,5.763780,1.921969,3.762777,-3.061318,4.664854,-7.332814,5.486394],[4.475316,9.600570,-0.397543,8.060081,-7.905806,-9.988095,-6.438330,-6.306536,5.340499,-1.152228,3.696619,3.311633],[-9.866518,-3.564289,1.305041,-2.491218,0.530053,-5.335465,-9.300152,-2.000543,-7.652069,8.597092,-3.588025,-9.796438],[3.033322,-4.148135,-8.065008,3.577988,-9.685114,8.673322,2.900700,-8.452733,9.733263,-6.868024,-7.588620,-7.428325],[-6.514611,-4.412884,-1.239728,-1.646208,8.245123,-8.514885,-7.660029,-4.842625,-4.742262,4.697813,0.777738,-3.999653],[-1.538768,-7.437236,-8.512981,8.193963,-3.236210,9.766902,9.550083,2.016241,-6.291953,-9.979968,5.604669,-2.895909],[1.809645,2.775825,3.286291,4.012273,7.370154,9.146649,7.510034,-1.148301,-0.098146,-3.056652,2.767381,-7.743577],[4.831999,-6.044326,3.791299,-2.063551,-1.414261,-4.656740,-4.439750,8.090670,3.717372,0.384751,-2.051621,4.510316],[3.943338,-5.543069,8.827996,-1.017739,1.081713,0.137641,5.266747,3.160897,7.826324,-1.652232,-4.133674,7.919751],[-1.897764,-9.831966,-3.734949,1.447808,9.816540,-8.271762,-0.332740,5.963169,-1.573530,-6.658315,9.820201,9.160807],[1.298474,-9.857285,-8.699669,-8.645279,-9.678415,7.286208,-4.483637,-8.172189,-1.922864,-5.689041,8.804526,-4.888261],[-3.902497,-3.988789,8.891245,-1.158655,7.778076,-6.556739,4.959648,-5.886804,4.521346,-5.013934,-1.363095,5.145919],[-0.432910,5.206345,1.422465,2.504465,-5.347701,6.954585,5.988097,0.557328,-0.724522,-8.638010,-1.184938,9.249243],[-4.845603,7.794100,-3.074662,9.152398,-5.962952,2.392868,3.293372,2.889436,-2.541373,4.475158,-2.477989,-4.053752]],[[-9.371372,-0.102365,7.790232,-2.512912,-1.552858,-2.800564,-6.185140,9.740588,-8.731331,-6.650595,0.245630,5.040199],[7.438930,7.199189,6.925611,-4.560753,7.207442,-6.136630,6.671326,-1.137124,-4.785749,-7.790195,2.739352,1.125107],[-2.009219,6.592907,3.551331,8.458135,1.980310,7.299480,-7.352004,-7.339047,-4.070024,-9.102861,9.520735,2.075019],[3.243767,-0.671125,3.880742,-0.125255,8.451438,1.760802,6.724617,8.457615,-5.581403,5.852455,1.131070,-7.128249],[9.320384,4.925681,4.645615,-7.529898,-8.806049,3.305019,2.926276,-8.249476,2.317115,2.956395,-3.432019,3.874444],[6.192702,-0.036048,-7.072511,4.310349,8.480809,-1.182356,3.459180,-6.037730,5.739954,-4.469158,3.759430,-1.676693],[-3.896104,2.669544,-0.078998,8.148360,-5.303175,-3.367168,-2.631285,-5.445281,-6.867233,1.760616,3.183454,-3.802166],[2.742306,7.119489,4.536324,-0.356968,-4.578723,-5.110101,-1.373420,-0.416465,0.804192,-1.791734,-3.186263,-4.503208],[5.459743,9.560380,0.834412,-1.466385,-5.817973,8.368343,6.897202,3.896203,-2.793289,-8.127162,-1.925612,5.695904],[-5.709316,9.031278,-1.691611,9.620616,9.223891,-5.955777,-7.415680,-6.802644,0.095357,-4.069256,0.218121,-9.674900],[-8.892012,-9.979432,7.225565,-4.259313,6.614953,8.142516,3.095165,-5.649723,2.094920,6.336423,2.052771,-7.289697],[-2.124283,3.200559,-5.860809,3.450884,-0.387927,5.685447,2.969239,6.281523,-2.652760,-3.302701,-4.803932,-8.358963],[5.294759,0.514385,6.166717,9.831477,7.644731,1.834401,-9.717402,-7.301608,6.941173,4.341915,8.653127,0.934886],[3.621407,-5.842722,-1.572840,9.534187,-7.437893,-1.716472,-5.984062,5.896277,-9.867386,1.007413,6.803623,-5.709484],[-8.594530,4.451488,-3.438517,1.406785,-6.006312,2.244654,-7.983765,8.413464,-7.051258,5.621316,0.555334,-7.593248]],[[9.019582,6.001349,8.056929,9.006952,5.409442,2.248311,-8.006320,2.840335,-7.788169,2.611264,1.171826,-8.706677],[3.060706,-2.340058,-1.814846,-0.448939,-3.447163,8.607758,4.384955,0.020356,4.088844,2.121725,6.910496,3.992323],[5.673459,3.174840,3.155201,-1.950957,1.342696,0.351940,9.119855,4.281323,3.382878,8.697559,-6.330510,0.540518],[-8.599394,5.647088,0.001081,5.061753,6.496632,6.826551,-7.914920,6.198809,-5.493713,-6.451833,1.968002,-1.248828],[-9.777810,2.339108,-1.083547,-8.796888,7.824340,1.069300,-8.873358,-3.859138,0.491676,-3.715297,2.896248,8.293530],[7.128236,-6.790166,6.114746,6.066077,-9.327762,-3.022177,-7.902228,8.330449,-7.249619,-7.224408,-7.900335,1.879955],[4.315866,2.225826,6.566517,-6.280802,-0.789547,5.938365,3.651333,8.419357,-7.985757,5.136392,5.765618,-3.220986],[7.971544,-4.693899,0.445188,9.612202,-7.178363,-5.230068,5.623386,-0.261391,6.278101,9.352714,-5.775241,-7.833040],[1.621583,3.642681,8.055692,-5.437963,1.606106,-0.496415,-9.278361,8.006749,-1.406829,4.078836,-2.823758,-2.646388],[4.670410,0.678499,-1.277436,-5.787874,0.417128,-1.707425,-4.407487,2.907647,-9.567658,-9.438225,7.832960,5.579135],[4.377259,7.253932,-7.591795,1.722263,2.221620,3.237191,8.161925,4.524694,-2.652820,3.045015,4.901299,-7.801046],[-8.240544,-6.391921,-3.667825,6.462765,-1.324780,9.176479,-0.144283,8.534988,6.562523,-6.872465,-9.604487,7.124007],[3.153763,1.889057,0.978391,-2.286418,5.864134,2.162352,-1.880153,8.320116,2.677369,2.357006,-7.341335,-6.636179],[-0.605121,-7.264518,-5.276972,4.443871,-6.281478,-7.213228,-3.118755,6.335766,-5.092867,6.431346,2.235558,5.523170],[0.595501,9.790244,9.184039,-3.681644,-5.740352,0.699996,-6.129999,-4.717930,3.151343,7.986950,-2.264405,2.517818]],[[2.689413,7.936401,-6.818639,-7.931472,-2.593470,9.447912,6.406212,3.715649,-7.717359,-1.579823,4.737553,0.649229],[-8.846630,-7.917412,6.846388,0.230213,-6.554345,2.136908,5.196839,-6.555975,7.884521,-9.832017,4.286726,-3.274479],[-5.126008,3.053967,-3.655296,-7.639961,4.598510,3.825770,1.823403,4.588660,0.019978,-9.817498,-7.600232,-4.863776],[-2.085741,-3.619986,-3.007162,3.402225,-6.566808,-8.850475,0.626103,1.234617,7.964034,2.450939,3.427444,-3.947680],[9.036037,3.221742,-3.170829,-0.189879,-8.645882,-0.063540,6.129184,4.587506,-2.781452,-6.480653,4.374488,-8.387880],[-5.979221,2.147599,4.671021,7.317860,-2.393493,-1.471865,-4.841655,8.132042,-8.609397,-2.659322,0.893733,6.162530],[7.340899,1.809053,0.580070,-9.813104,8.640571,3.327735,3.395607,5.727126,9.344447,-2.006947,-9.124953,8.497734],[-7.207425,3.217668,6.528523,8.498220,-9.472372,0.388882,6.511556,-5.054879,2.145447,2.940548,-2.349900,-6.640244],[-6.196633,1.411222,-1.875441,5.692297,-5.979491,-5.956307,9.511152,2.102692,-6.654293,6.436755,-0.981789,-9.634900],[4.960695,-1.080013,8.861327,-2.328781,-5.550742,-9.520597,-2.161296,4.792287,-7.452976,-0.282924,2.872320,-6.559541],[8.699699,2.821829,8.926913,9.536845,5.671070,-5.080082,6.914000,5.072902,-2.349452,-6.371328,9.594141,-0.303969],[-3.250712,-0.391732,-1.552645,9.889057,-4.464165,5.575653,2.114460,9.615374,-7.537406,7.843363,-1.774547,9.767951],[-0.582227,3.980712,4.647534,-5.192982,-3.481079,-8.268391,4.785300,-3.191589,-5.349761,7.932982,8.941164,5.999408],[-1.497973,4.397200,7.463216,6.013900,-9.611869,8.137954,-3.413819,0.093403,-4.206245,2.315052,-4.984025,-2.342022],[1.520984,-1.670547,-0.893517,2.592200,-5.054543,7.459769,4.748328,5.267127,3.967624,-4.270319,-6.645375,-5.994412]]], dtype = "float32")#candidate|777|(9, 15, 12)|const|float32
uop_778 = relay.acosh(const_777.astype('float32')) # shape=(9, 15, 12)
bop_780 = relay.less(uop_778.astype('bool'), relay.reshape(const_777.astype('bool'), relay.shape_of(uop_778))) # shape=(9, 15, 12)
const_799 = relay.constdtype = "float32")#candidate|799|(9, 15, 12)|const|float32
bop_800 = relay.equal(const_777.astype('bool'), relay.reshape(const_799.astype('bool'), relay.shape_of(const_777))) # shape=(9, 15, 12)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
const_807 = relay.const([-10,-6,-6,-4,-5,4,-8,-2,-8,-1,-8,7,-8,7,2,5,6,-6,-2,-1,5,8,-8,2,-3,-7,1,6,-2,1,-5,-6,8,3,-2,6,2,1,-6,-9,9,-9,-9,-10,-10,-7,-7,-5,-4,-4,5,-4,-4,10,-1,9,3,10,3,-5,3,7,4,5,-2,-4,1,-5,-4,-6,-4,-5,-5,10,-7,2,-6,7,2,-8,5,3,-2,10,5,-3,3,7,2,-5,-2,-6,7,-8,9,5,-8,7,-9,5,5,3,5,3,7,6,-6,-10,8,-5,-2,1,1,9,7,5,2,-9,8,-2,-3,-8,1,-3,6,7,8,-7,6,-10,9,-6,-5,-8,6,-10,8,-7,6,1,-7,1,6,8,-5,4,6,-7,-4,4,4,-10,-5,-5,-8,4,-5,-5,-2,-3,-3,-1,9,-10,2,5,-1,10,4,7,-2,-9,4,7,9,3,9,1,-1,-2,-6,-6,-4,4,-2,1,-4,10,-8,-5,9,7,9,7,-8,2,-8,4,5,-3,1,-10,6,-2,-8,-1,5,6,-5,-6,4,10,6,-7,4,-9,-3,9,-8,-6,-9,3,5,10,2,3,-3,9,9,-4,5,-5,2,-2,6,-9,4,-9,-1,9,4,-3,-6,-10,-10,5,6,6,5,-10,-5,-6,-1,10,-3,-9], dtype = "int8")#candidate|807|(256,)|const|int8
call_806 = relay.TupleGetItem(func_266_call(relay.reshape(const_807.astype('int8'), [2, 16, 8]), relay.reshape(const_807.astype('int8'), [2, 16, 8]), ), 0)
call_808 = relay.TupleGetItem(func_270_call(relay.reshape(const_807.astype('int8'), [2, 16, 8]), relay.reshape(const_807.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([bop_780,bop_800,call_806,const_807,])
output2 = relay.Tuple([bop_780,bop_800,call_808,const_807,])
func_810 = relay.Function([], output)
mod['func_810'] = func_810
mod = relay.transform.InferType()(mod)
output = func_810()
func_811 = relay.Function([], output)
mutated_mod['func_811'] = func_811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_887 = relay.TupleGetItem(func_810_call(), 2)
call_888 = relay.TupleGetItem(func_811_call(), 2)
func_495_call = mod.get_global_var('func_495')
func_500_call = mutated_mod.get_global_var('func_500')
var_919 = relay.var("var_919", dtype = "float64", shape = (49,))#candidate|919|(49,)|var|float64
var_920 = relay.var("var_920", dtype = "float64", shape = (784,))#candidate|920|(784,)|var|float64
call_918 = relay.TupleGetItem(func_495_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(var_920.astype('float64'), [7, 16, 7]), relay.reshape(call_887.astype('int8'), [256,]), ), 1)
call_921 = relay.TupleGetItem(func_500_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(var_920.astype('float64'), [7, 16, 7]), relay.reshape(call_887.astype('int8'), [256,]), ), 1)
uop_923 = relay.tan(call_918.astype('float64')) # shape=(2, 16, 8)
uop_925 = relay.tan(call_921.astype('float64')) # shape=(2, 16, 8)
func_495_call = mod.get_global_var('func_495')
func_500_call = mutated_mod.get_global_var('func_500')
call_930 = relay.TupleGetItem(func_495_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(var_920.astype('float64'), [7, 16, 7]), relay.reshape(call_918.astype('int8'), [256,]), ), 3)
call_931 = relay.TupleGetItem(func_500_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(var_920.astype('float64'), [7, 16, 7]), relay.reshape(call_918.astype('int8'), [256,]), ), 3)
const_940 = relay.const([[[1.172426,-1.186308,6.035552,-9.815091,-5.746445,-6.613648,-1.273990,0.231618],[5.986601,1.424749,-8.738247,8.378302,-0.925507,-8.314681,4.507403,-7.210375],[7.102606,-8.911446,0.602677,5.796678,1.409391,7.282282,-1.516769,2.963364],[-2.851082,-1.516110,6.651401,9.827414,-8.480469,-8.035081,-2.060627,-7.988467],[8.532197,-3.604503,-6.311452,-1.382252,5.865535,6.971710,-9.874971,3.728081],[8.509511,9.402583,-2.203259,-8.951897,-3.961390,-0.347808,8.826866,-7.838989],[9.150494,6.435469,7.260273,2.491128,-1.696143,-8.613994,1.386541,2.076134],[1.565359,2.190823,-2.627194,5.603473,1.780714,1.446617,-3.557522,9.975347],[-6.563868,6.838639,8.729561,-8.187453,6.816970,-2.936572,-9.017741,7.607708],[6.017674,6.681737,-3.875875,-7.708221,3.404828,4.631918,-4.884437,9.320752],[8.877356,-6.836575,-4.747466,-9.562555,4.062230,-5.363807,6.244456,-5.612665],[4.847049,-0.644059,-9.991906,9.120474,-9.249511,2.334506,6.270539,6.901086],[-1.728948,5.560595,-9.351237,-9.705413,2.389434,9.874079,5.004131,2.218618],[-4.139276,-9.345443,-8.632292,-2.305942,-2.588789,4.663110,-2.908155,8.070783],[-1.314591,9.363135,-1.045663,7.520272,9.746681,-6.424456,-2.194943,9.160338],[8.755950,8.567180,6.908222,-9.697751,2.352489,8.708385,-0.422311,-6.999642]],[[-7.941164,2.386243,-9.673338,-4.962827,-6.526203,-4.711860,-2.866318,4.007154],[8.143562,1.801463,-3.623771,7.138479,-3.344349,3.013212,5.210502,4.225399],[-5.335779,-9.623971,2.491675,-5.620957,-8.668124,-0.990152,-6.260400,-5.226240],[-5.885821,-8.546142,-2.692620,5.901126,-3.343550,7.220904,-5.161194,8.471750],[-0.297318,6.406648,-6.027666,7.273880,-9.821528,1.547960,7.411559,9.584861],[-8.222336,-6.413064,3.397546,3.844721,-6.791319,7.895843,6.058251,8.743895],[-9.629354,-3.808181,-1.868691,9.386359,2.735326,0.015672,7.559410,7.998631],[-1.631000,-9.480302,3.712718,-5.187685,-4.113460,-3.510518,-9.246062,6.919292],[5.056395,-2.282956,7.606054,-7.018791,-7.151333,9.121138,-4.148178,7.683045],[-3.356854,-2.302646,9.650015,-2.201065,-8.139326,-8.207095,-2.705033,-4.528209],[7.101129,-3.935731,-6.747017,1.981288,-6.754346,-0.269440,1.468343,-5.910969],[8.624947,4.860521,2.095705,3.476617,0.830497,-5.715338,5.265648,1.001707],[7.140302,-2.093813,-6.429185,9.511472,-6.680582,-5.586347,8.508703,-7.823474],[9.720015,-2.549210,7.769934,6.438230,9.264924,-2.829911,-4.107167,2.229192],[2.539248,7.857186,8.901925,3.430262,4.873438,-7.057618,-6.830017,9.662053],[-3.385327,-4.239027,1.111057,-5.494480,5.972871,-2.865880,-0.845574,-6.482780]]], dtype = "float64")#candidate|940|(2, 16, 8)|const|float64
bop_941 = relay.minimum(uop_923.astype('float64'), relay.reshape(const_940.astype('float64'), relay.shape_of(uop_923))) # shape=(2, 16, 8)
bop_944 = relay.minimum(uop_925.astype('float64'), relay.reshape(const_940.astype('float64'), relay.shape_of(uop_925))) # shape=(2, 16, 8)
func_495_call = mod.get_global_var('func_495')
func_500_call = mutated_mod.get_global_var('func_500')
call_945 = relay.TupleGetItem(func_495_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(call_930.astype('float64'), [7, 16, 7]), relay.reshape(const_940.astype('int8'), [256,]), ), 0)
call_946 = relay.TupleGetItem(func_500_call(relay.reshape(var_919.astype('float64'), [7, 1, 7]), relay.reshape(call_930.astype('float64'), [7, 16, 7]), relay.reshape(const_940.astype('int8'), [256,]), ), 0)
output = relay.Tuple([call_887,var_919,var_920,call_930,bop_941,call_945,])
output2 = relay.Tuple([call_888,var_919,var_920,call_931,bop_944,call_946,])
func_965 = relay.Function([var_919,var_920,], output)
mod['func_965'] = func_965
mod = relay.transform.InferType()(mod)
var_966 = relay.var("var_966", dtype = "float64", shape = (49,))#candidate|966|(49,)|var|float64
var_967 = relay.var("var_967", dtype = "float64", shape = (784,))#candidate|967|(784,)|var|float64
output = func_965(var_966,var_967,)
func_968 = relay.Function([var_966,var_967,], output)
mutated_mod['func_968'] = func_968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_983 = relay.TupleGetItem(func_810_call(), 1)
call_984 = relay.TupleGetItem(func_811_call(), 1)
func_752_call = mod.get_global_var('func_752')
func_755_call = mutated_mod.get_global_var('func_755')
var_1003 = relay.var("var_1003", dtype = "float64", shape = (1, 49))#candidate|1003|(1, 49)|var|float64
var_1004 = relay.var("var_1004", dtype = "float64", shape = (784,))#candidate|1004|(784,)|var|float64
call_1002 = relay.TupleGetItem(func_752_call(relay.reshape(var_1003.astype('float64'), [49,]), relay.reshape(var_1004.astype('float64'), [2, 392]), ), 5)
call_1005 = relay.TupleGetItem(func_755_call(relay.reshape(var_1003.astype('float64'), [49,]), relay.reshape(var_1004.astype('float64'), [2, 392]), ), 5)
uop_1009 = relay.log10(call_1002.astype('float32')) # shape=(2, 16, 8)
uop_1011 = relay.log10(call_1005.astype('float32')) # shape=(2, 16, 8)
output = relay.Tuple([call_983,var_1003,var_1004,uop_1009,])
output2 = relay.Tuple([call_984,var_1003,var_1004,uop_1011,])
func_1016 = relay.Function([var_1003,var_1004,], output)
mod['func_1016'] = func_1016
mod = relay.transform.InferType()(mod)
mutated_mod['func_1016'] = func_1016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1016_call = mutated_mod.get_global_var('func_1016')
var_1018 = relay.var("var_1018", dtype = "float64", shape = (1, 49))#candidate|1018|(1, 49)|var|float64
var_1019 = relay.var("var_1019", dtype = "float64", shape = (784,))#candidate|1019|(784,)|var|float64
call_1017 = func_1016_call(var_1018,var_1019,)
output = call_1017
func_1020 = relay.Function([var_1018,var_1019,], output)
mutated_mod['func_1020'] = func_1020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1036 = relay.TupleGetItem(func_810_call(), 0)
call_1037 = relay.TupleGetItem(func_811_call(), 0)
var_1053 = relay.var("var_1053", dtype = "bool", shape = (9, 15, 12))#candidate|1053|(9, 15, 12)|var|bool
bop_1054 = relay.left_shift(call_1036.astype('int32'), relay.reshape(var_1053.astype('int32'), relay.shape_of(call_1036))) # shape=(9, 15, 12)
bop_1057 = relay.left_shift(call_1037.astype('int32'), relay.reshape(var_1053.astype('int32'), relay.shape_of(call_1037))) # shape=(9, 15, 12)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
const_1068 = relay.const([[4,-4],[-3,3],[4,10],[-9,-4],[-2,-2],[-8,-1],[4,2],[-3,7],[-10,-2],[-6,6],[6,-1],[4,-1],[6,7],[-4,-4],[4,-8],[-2,4],[8,4],[-4,-1],[-4,-7],[-10,9],[4,1],[-4,8],[2,-5],[-1,-6],[-7,-2],[-1,-1],[-7,-7],[9,-4],[-2,10],[-9,4],[-4,-6],[7,3],[-6,-5],[6,-6],[-6,-10],[9,-7],[9,6],[8,9],[-8,7],[1,-1],[3,-4],[2,3],[-2,-5],[9,1],[1,-5],[-9,9],[1,5],[5,9],[-2,10],[2,3],[8,-5],[2,-6],[5,-2],[-6,-6],[-8,-9],[6,3],[-10,3],[-6,-7],[6,5],[8,-1],[-1,-9],[-3,-5],[5,5],[3,-1],[-1,-6],[3,-5],[-5,-5],[10,-6],[-8,-9],[10,-3],[10,-8],[6,-8],[8,-5],[-9,-9],[9,-7],[-1,-1],[8,9],[5,-2],[-10,10],[4,4],[-3,-10],[-9,7],[5,8],[-5,-5],[2,10],[6,4],[4,3],[-1,-7],[-7,-7],[8,-6],[-5,8],[-5,4],[7,-7],[-6,10],[-5,6],[-3,2],[-2,6],[-2,4],[7,1],[5,1],[7,-6],[9,3],[-10,-1],[1,-2],[-6,-2],[1,8],[-8,-9],[-2,6],[8,-4],[-7,-10],[3,-1],[-9,-9],[1,3],[-7,-9],[-10,9],[-9,-3],[6,-4],[4,3],[9,4],[-7,3],[6,2],[-9,-10],[9,2],[6,-7],[-5,-9],[-8,6],[4,-7],[5,-1]], dtype = "int8")#candidate|1068|(128, 2)|const|int8
call_1067 = relay.TupleGetItem(func_266_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(const_1068.astype('int8'), [2, 16, 8]), ), 0)
call_1069 = relay.TupleGetItem(func_270_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(const_1068.astype('int8'), [2, 16, 8]), ), 0)
bop_1073 = relay.multiply(call_1036.astype('uint32'), relay.reshape(var_1053.astype('uint32'), relay.shape_of(call_1036))) # shape=(9, 15, 12)
bop_1076 = relay.multiply(call_1037.astype('uint32'), relay.reshape(var_1053.astype('uint32'), relay.shape_of(call_1037))) # shape=(9, 15, 12)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
const_1079 = relay.const([[-6.618803,-8.773008,-9.703728,-5.310065,5.081156,4.861276,5.308693,0.506053,7.129968,3.263131,-1.960717,0.702650,-7.892968,0.058468,2.418442,0.872619,4.839177,-0.780614,-1.481667,8.504535,-9.821393,5.177748,5.709632,-4.220729,-4.200394,-4.190202,-5.976115,-0.427553,-8.192953,3.402003,-7.878532,3.420917,6.857671,3.004140,-9.240040,8.975127,4.078714,5.760610,7.953719,-1.767651,2.332782,8.783531,-6.442794,-9.981033,3.962460,-5.658737,1.675696,6.696462,6.888058]], dtype = "float64")#candidate|1079|(1, 49)|const|float64
var_1080 = relay.var("var_1080", dtype = "float64", shape = (784,))#candidate|1080|(784,)|var|float64
call_1078 = relay.TupleGetItem(func_965_call(relay.reshape(const_1079.astype('float64'), [49,]), relay.reshape(var_1080.astype('float64'), [784,]), ), 0)
call_1081 = relay.TupleGetItem(func_968_call(relay.reshape(const_1079.astype('float64'), [49,]), relay.reshape(var_1080.astype('float64'), [784,]), ), 0)
uop_1082 = relay.log(bop_1073.astype('float32')) # shape=(9, 15, 12)
uop_1084 = relay.log(bop_1076.astype('float32')) # shape=(9, 15, 12)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
call_1096 = relay.TupleGetItem(func_266_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(const_1068.astype('int8'), [2, 16, 8]), ), 0)
call_1097 = relay.TupleGetItem(func_270_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(const_1068.astype('int8'), [2, 16, 8]), ), 0)
uop_1099 = relay.tan(uop_1082.astype('float32')) # shape=(9, 15, 12)
uop_1101 = relay.tan(uop_1084.astype('float32')) # shape=(9, 15, 12)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
call_1109 = relay.TupleGetItem(func_266_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(call_1067.astype('int8'), [2, 16, 8]), ), 0)
call_1110 = relay.TupleGetItem(func_270_call(relay.reshape(const_1068.astype('int8'), [2, 16, 8]), relay.reshape(call_1067.astype('int8'), [2, 16, 8]), ), 0)
func_752_call = mod.get_global_var('func_752')
func_755_call = mutated_mod.get_global_var('func_755')
call_1111 = relay.TupleGetItem(func_752_call(relay.reshape(const_1079.astype('float64'), [49,]), relay.reshape(var_1080.astype('float64'), [2, 392]), ), 1)
call_1112 = relay.TupleGetItem(func_755_call(relay.reshape(const_1079.astype('float64'), [49,]), relay.reshape(var_1080.astype('float64'), [2, 392]), ), 1)
output = relay.Tuple([bop_1054,call_1067,const_1068,call_1078,const_1079,var_1080,call_1096,uop_1099,call_1109,call_1111,])
output2 = relay.Tuple([bop_1057,call_1069,const_1068,call_1081,const_1079,var_1080,call_1097,uop_1101,call_1110,call_1112,])
func_1132 = relay.Function([var_1053,var_1080,], output)
mod['func_1132'] = func_1132
mod = relay.transform.InferType()(mod)
mutated_mod['func_1132'] = func_1132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1132_call = mutated_mod.get_global_var('func_1132')
var_1134 = relay.var("var_1134", dtype = "bool", shape = (9, 15, 12))#candidate|1134|(9, 15, 12)|var|bool
var_1135 = relay.var("var_1135", dtype = "float64", shape = (784,))#candidate|1135|(784,)|var|float64
call_1133 = func_1132_call(var_1134,var_1135,)
output = call_1133
func_1136 = relay.Function([var_1134,var_1135,], output)
mutated_mod['func_1136'] = func_1136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1138 = relay.TupleGetItem(func_810_call(), 0)
call_1139 = relay.TupleGetItem(func_811_call(), 0)
func_1016_call = mod.get_global_var('func_1016')
func_1020_call = mutated_mod.get_global_var('func_1020')
const_1147 = relay.const([[6.790278,-4.468232,6.428326,6.815637,-1.901327,7.706940,-8.612928,-5.654843,1.318793,6.245455,1.198059,2.845406,6.616500,-1.354994,-6.079895,-4.933647,-6.013409,2.030283,-5.099917,-2.601833,-0.427060,5.540774,5.178883,4.758395,-8.113013,4.904323,-5.357931,-9.529147,3.307641,1.265849,-9.173070,0.608863,-9.887272,3.523047,3.923576,-5.555945,3.338987,-9.893987,7.311914,-4.767199,-1.211737,5.235545,-0.525124,-8.335850,-3.883534,-0.882008,-8.027391,3.443818,-2.815756]], dtype = "float64")#candidate|1147|(1, 49)|const|float64
const_1148 = relay.const([9.373846,-8.026488,-4.111320,8.321685,4.494423,8.402012,-1.585251,4.018978,7.841398,-0.077484,-6.819064,-2.459296,3.579893,-3.715284,-4.741740,-6.138179,9.729083,-9.548851,-7.736390,-8.248205,4.342751,-5.686299,9.427119,0.529530,4.275630,-9.056497,-4.738541,6.407288,0.354160,-5.632044,-5.229049,8.676523,5.446318,-8.731141,0.370476,-3.079350,-9.698292,-7.021519,-1.606978,-7.347733,3.590959,7.621321,2.347443,-4.331213,6.117153,8.948841,4.104532,6.145327,-6.549304,1.339292,-9.180403,-8.430710,-9.771632,-6.774326,-0.551866,8.203958,-9.137166,5.668013,3.583662,-7.610722,2.382894,0.448843,0.038724,3.762434,-3.702466,1.699677,-4.470399,9.951327,3.111089,4.713315,-6.590893,2.535580,-3.773506,1.454804,-0.732616,-1.663915,3.287937,0.739017,-0.535317,-1.848832,7.825504,1.421935,1.159619,-8.454849,-7.913215,5.275060,-7.719588,7.571780,1.496283,4.949795,4.905152,1.773916,5.641078,6.004076,-8.621906,-1.070664,6.654738,9.711340,-2.953509,3.115299,-2.649828,1.522340,-2.245543,2.882360,3.317086,0.611232,-1.445606,5.015194,5.945307,8.501579,-7.300512,7.784023,9.517332,9.875005,1.674091,-5.639410,6.121424,-0.746744,5.694708,0.432482,-3.852192,0.694498,-4.564227,-5.181479,9.495262,8.762465,9.196942,0.399666,9.859077,-5.987149,-0.825097,-4.480067,1.107146,9.452740,-7.108485,5.181694,8.133794,3.808543,-4.935896,-4.431877,0.145289,0.122089,-7.316230,9.019989,3.374984,-8.879891,5.191534,4.233471,-8.402320,5.155176,-5.959542,5.711680,3.860101,5.554420,3.475182,6.389179,3.937759,6.190015,8.933412,5.420589,3.665383,-4.731405,3.579723,8.471294,-3.016675,-1.334322,4.745126,9.116212,4.507692,-8.200211,-7.746965,5.897373,4.041787,6.224134,-5.672028,7.263962,0.785053,-7.052863,-3.597997,-5.406694,-1.151489,3.825631,-1.101571,-5.387157,8.306578,-7.886896,-0.865861,0.538858,9.273036,-3.901310,8.732114,0.839553,-2.833182,5.763529,1.700088,3.834002,0.632688,2.870772,7.034375,6.488245,0.251791,-1.608445,3.570970,8.112366,3.366288,-6.838840,5.574125,8.129921,4.564744,-2.383128,-7.755608,-5.939593,-7.801758,8.140338,7.892280,-0.428261,3.666565,-2.391441,-7.461975,6.793782,-4.837710,6.399625,0.813653,6.104207,1.970150,4.221666,8.318125,1.376534,8.690624,-8.584102,4.594483,7.409838,5.013078,-4.604907,7.760470,4.080192,3.796081,-1.827839,7.610270,-4.890219,1.020156,-8.179720,4.266637,6.846595,5.590532,-8.764941,-4.210132,6.860355,1.236518,-3.584531,2.411189,-3.336120,-5.958705,2.635464,-9.344225,-4.026823,8.540116,9.136143,7.350807,2.423370,-4.786198,2.623659,-3.231376,-3.236005,-6.406032,-6.205833,0.655974,9.961902,8.827450,9.614632,-7.954554,-8.448950,5.732719,-4.247820,-1.764376,0.339019,2.941694,6.090964,6.903489,-8.413694,-5.190826,0.818356,6.412988,9.723494,1.642278,3.366457,9.951112,0.723639,5.299671,2.726542,8.381514,-5.066792,0.895406,-5.169554,5.087487,9.467349,-7.838833,6.505029,0.210996,-4.756894,-5.368023,-4.566491,0.238404,-2.098870,7.487616,-7.720362,-2.837518,-1.145229,8.418236,-2.509369,4.242928,-7.261622,-1.298180,8.252637,9.473452,-7.582648,8.849800,3.499060,-1.311408,0.982494,7.343320,-9.550482,-3.016631,7.098555,-4.484559,6.933595,1.699025,3.320905,1.033710,3.787860,-0.196151,-5.266516,-1.099164,4.441189,1.608612,2.553672,-6.466650,-1.736871,-9.009249,-5.164773,7.442815,-3.005856,-2.861392,-6.845199,-4.355222,-2.255159,1.788494,0.882110,-8.225600,-0.031425,1.149988,-6.141748,-0.087917,6.891212,-5.604644,0.761408,9.118193,0.531332,8.839271,3.204922,7.585139,-9.731555,9.576017,8.106075,-4.779674,5.574862,9.340973,-7.494521,6.107969,-5.234058,0.768158,7.847361,4.599671,-6.639999,1.389404,-2.110904,3.166868,1.116198,-9.462996,-9.817566,7.079998,7.837888,7.467480,-6.889310,3.760458,3.249205,-3.501977,5.841692,0.391793,-1.627179,3.906066,2.037458,6.272377,5.559025,0.845326,8.865999,-8.852411,6.927443,-1.553289,-5.692328,-6.131463,-2.476523,-9.592388,-1.265043,-8.847067,-0.417464,-0.710364,-3.122103,9.360712,4.815384,-4.927423,9.375568,5.229597,-9.912286,-2.511744,8.437344,-9.895591,5.703710,5.939606,-5.578966,-3.366124,-5.489613,8.930485,-6.349304,-8.404262,9.803793,-6.483923,1.518129,-4.355759,8.265178,-0.748159,9.438117,5.859866,-9.506367,1.645373,-9.440816,5.409927,-5.382109,6.006612,5.732703,-0.209989,-7.188832,0.327399,1.642125,-7.927066,-9.806918,2.686704,3.053434,-0.203751,-4.153504,8.324142,8.339706,6.544633,3.327701,6.357925,-7.022152,0.162299,-3.725447,4.806511,-9.170462,1.544433,-0.649324,9.753114,8.012334,4.374974,0.198124,-7.656644,-4.681899,-7.294160,-9.266121,-8.000009,6.638800,-7.288350,2.420999,6.154449,7.442000,-3.534862,-9.699808,4.620240,-7.318969,4.169368,6.417626,-6.179039,8.182203,7.726463,-5.962131,-1.952972,-1.205685,-8.195492,-3.788176,5.428714,-8.546921,-6.206643,0.749994,-1.383330,-7.878019,4.400162,0.038413,9.938061,-5.322443,-3.212595,0.569675,1.389506,9.751301,6.756615,9.097213,4.149268,-9.426258,-1.105129,-5.355008,1.958122,-3.922997,-6.537618,0.912035,-8.480861,1.698610,-2.456519,-4.336846,-5.220944,9.636846,4.710887,-0.443855,-5.362623,-5.223620,3.127640,7.165078,-0.967937,0.901525,7.863031,-6.519717,8.200042,6.422772,-2.948438,1.197330,9.521338,-5.619324,8.834188,-0.281027,-9.899590,2.203458,2.920232,-7.650524,-2.202993,-3.281284,-5.351206,-4.595521,-0.700051,-2.178829,1.213056,4.713766,-1.298377,3.748243,9.091539,-7.327807,6.619743,7.259006,-9.552852,-9.253631,7.732018,9.771962,5.049342,6.759066,7.249490,0.996078,9.698628,6.570420,-1.228533,-9.317322,-4.300171,8.146667,-3.997402,-6.777259,3.609127,6.817527,-6.505150,-7.953062,-6.946341,4.940816,8.452958,-0.617052,-1.313263,4.555811,9.283664,-4.665470,-1.346360,8.832388,-4.304231,3.704945,-2.354029,-4.252552,5.437179,-9.659969,4.661501,0.078434,-0.699042,5.659204,-2.498576,-7.281855,-8.906442,9.489392,-5.650080,8.454337,9.056658,-1.697334,-3.476204,-3.967179,-9.047813,9.470099,-4.926450,-3.286860,2.051410,1.692657,-2.618270,4.992116,-1.877734,1.010635,9.013554,8.416696,-9.146366,-6.415188,2.799988,-3.692497,2.388047,0.935353,8.186194,2.446871,9.273272,-0.686481,-2.229718,7.916075,-6.687125,4.871888,2.573215,-9.949057,1.912381,-4.599500,8.020050,-3.376355,9.636286,0.264383,0.339423,2.118823,2.266069,1.246644,8.439855,3.303679,8.450459,1.468818,0.638973,-9.744388,-4.806798,0.842941,-2.319684,-0.070584,0.145203,-5.297292,-6.584403,-1.618705,5.847722,0.181020,-2.568764,-7.893517,-6.926688,-9.670667,-4.978438,-0.522983,-9.743870,-4.790979,1.228623,-5.557885,-3.557249,7.734015,-8.883654,0.664525,5.631024,-8.187644,4.789147,-2.548077,-1.449557,2.005419,1.405412,5.811051,-4.910656,-8.537395,-2.323593,-6.661732,7.560446,-9.843556,4.878856,4.826819,-3.903105,-7.351215,0.991153,9.884066,-1.900118,-6.127812,-0.301615,8.927167,2.119435,-2.094121,-7.973322,5.180929,7.761330,0.395642,0.426847,3.052728,-4.666395,6.444111,-9.312856,4.092712,6.779527,9.911378,3.594785,-3.071426,-1.189741,-9.876313,-3.837773,4.776329,6.900461,-5.655475,1.641930,2.108390,-8.378312,0.479677,7.119402,9.679427,-2.829471,3.087580,4.155471,1.933894,-4.157663,-7.638979,0.835209,-9.659167,-6.456736,7.468408,4.439487,8.255480,2.963986,-3.750658,0.312191,7.463218,-6.281359,6.634840,1.988494,-2.821417,-1.791430,-0.178983,-2.154456,3.097683,6.542171,-2.902364,6.398078,-0.191938,7.804219,4.360330,-4.405841,-2.364407,4.525788,-2.828290,-6.812391,4.368074,0.687140,-0.546542,-0.459202,-6.978697,-2.499267,-4.669150,-4.249292,-5.668013,-9.502212,-3.123101,4.125941,7.418425,-3.904582,5.148716,-3.387796,-9.228160,-4.197929,6.446625,-8.473949,-4.863649,5.940000,-0.171395], dtype = "float64")#candidate|1148|(784,)|const|float64
call_1146 = relay.TupleGetItem(func_1016_call(relay.reshape(const_1147.astype('float64'), [1, 49]), relay.reshape(const_1148.astype('float64'), [784,]), ), 2)
call_1149 = relay.TupleGetItem(func_1020_call(relay.reshape(const_1147.astype('float64'), [1, 49]), relay.reshape(const_1148.astype('float64'), [784,]), ), 2)
bop_1156 = relay.power(const_1148.astype('float64'), relay.reshape(call_1146.astype('float64'), relay.shape_of(const_1148))) # shape=(784,)
bop_1159 = relay.power(const_1148.astype('float64'), relay.reshape(call_1149.astype('float64'), relay.shape_of(const_1148))) # shape=(784,)
func_1016_call = mod.get_global_var('func_1016')
func_1020_call = mutated_mod.get_global_var('func_1020')
call_1170 = relay.TupleGetItem(func_1016_call(relay.reshape(const_1147.astype('float64'), [1, 49]), relay.reshape(call_1146.astype('float64'), [784,]), ), 2)
call_1171 = relay.TupleGetItem(func_1020_call(relay.reshape(const_1147.astype('float64'), [1, 49]), relay.reshape(call_1146.astype('float64'), [784,]), ), 2)
bop_1173 = relay.left_shift(const_1148.astype('uint16'), relay.reshape(call_1146.astype('uint16'), relay.shape_of(const_1148))) # shape=(784,)
bop_1176 = relay.left_shift(const_1148.astype('uint16'), relay.reshape(call_1149.astype('uint16'), relay.shape_of(const_1148))) # shape=(784,)
output = relay.Tuple([call_1138,const_1147,bop_1156,call_1170,bop_1173,])
output2 = relay.Tuple([call_1139,const_1147,bop_1159,call_1171,bop_1176,])
func_1179 = relay.Function([], output)
mod['func_1179'] = func_1179
mod = relay.transform.InferType()(mod)
output = func_1179()
func_1180 = relay.Function([], output)
mutated_mod['func_1180'] = func_1180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_1192 = relay.TupleGetItem(func_1179_call(), 1)
call_1193 = relay.TupleGetItem(func_1180_call(), 1)
output = call_1192
output2 = call_1193
func_1194 = relay.Function([], output)
mod['func_1194'] = func_1194
mod = relay.transform.InferType()(mod)
output = func_1194()
func_1195 = relay.Function([], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1214 = relay.TupleGetItem(func_810_call(), 1)
call_1215 = relay.TupleGetItem(func_811_call(), 1)
func_1016_call = mod.get_global_var('func_1016')
func_1020_call = mutated_mod.get_global_var('func_1020')
const_1224 = relay.const([-0.042537,3.344088,1.399752,-7.794521,-5.633944,7.738740,-1.350688,8.227475,4.022474,-5.462461,-0.875205,-5.425877,-9.069309,-2.116339,5.363229,-5.876135,-5.159458,-4.527308,2.979859,-5.789523,-7.561658,-2.566318,2.094715,1.654886,-4.650581,-3.799054,7.677323,7.932513,9.499110,-3.935983,1.821596,-2.626496,-9.346619,7.600108,-0.547083,2.265906,0.980772,9.504566,8.773541,0.328644,-2.837324,4.763568,-5.438596,1.775959,-7.149077,-9.295823,-1.117225,-8.162080,-6.868742], dtype = "float64")#candidate|1224|(49,)|const|float64
var_1225 = relay.var("var_1225", dtype = "float64", shape = (784,))#candidate|1225|(784,)|var|float64
call_1223 = relay.TupleGetItem(func_1016_call(relay.reshape(const_1224.astype('float64'), [1, 49]), relay.reshape(var_1225.astype('float64'), [784,]), ), 2)
call_1226 = relay.TupleGetItem(func_1020_call(relay.reshape(const_1224.astype('float64'), [1, 49]), relay.reshape(var_1225.astype('float64'), [784,]), ), 2)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_1227 = func_1194_call()
call_1228 = func_1194_call()
output = relay.Tuple([call_1214,call_1223,const_1224,var_1225,call_1227,])
output2 = relay.Tuple([call_1215,call_1226,const_1224,var_1225,call_1228,])
func_1229 = relay.Function([var_1225,], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
var_1230 = relay.var("var_1230", dtype = "float64", shape = (784,))#candidate|1230|(784,)|var|float64
output = func_1229(var_1230)
func_1231 = relay.Function([var_1230], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_1249 = relay.TupleGetItem(func_1179_call(), 3)
call_1250 = relay.TupleGetItem(func_1180_call(), 3)
output = call_1249
output2 = call_1250
func_1277 = relay.Function([], output)
mod['func_1277'] = func_1277
mod = relay.transform.InferType()(mod)
output = func_1277()
func_1278 = relay.Function([], output)
mutated_mod['func_1278'] = func_1278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_1279 = func_1194_call()
call_1280 = func_1194_call()
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_1284 = func_1194_call()
call_1285 = func_1194_call()
bop_1287 = relay.right_shift(call_1284.astype('int16'), relay.reshape(call_1279.astype('int16'), relay.shape_of(call_1284))) # shape=(1, 49)
bop_1290 = relay.right_shift(call_1285.astype('int16'), relay.reshape(call_1280.astype('int16'), relay.shape_of(call_1285))) # shape=(1, 49)
output = bop_1287
output2 = bop_1290
func_1297 = relay.Function([], output)
mod['func_1297'] = func_1297
mod = relay.transform.InferType()(mod)
output = func_1297()
func_1298 = relay.Function([], output)
mutated_mod['func_1298'] = func_1298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_1337 = func_1297_call()
call_1338 = func_1297_call()
output = relay.Tuple([call_1337,])
output2 = relay.Tuple([call_1338,])
func_1342 = relay.Function([], output)
mod['func_1342'] = func_1342
mod = relay.transform.InferType()(mod)
output = func_1342()
func_1343 = relay.Function([], output)
mutated_mod['func_1343'] = func_1343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1369 = relay.var("var_1369", dtype = "float64", shape = (12, 1, 14))#candidate|1369|(12, 1, 14)|var|float64
var_1370 = relay.var("var_1370", dtype = "float64", shape = (12, 16, 14))#candidate|1370|(12, 16, 14)|var|float64
bop_1371 = relay.multiply(var_1369.astype('float64'), var_1370.astype('float64')) # shape=(12, 16, 14)
var_1386 = relay.var("var_1386", dtype = "float64", shape = (12, 15, 14))#candidate|1386|(12, 15, 14)|var|float64
bop_1387 = relay.left_shift(var_1369.astype('uint16'), var_1386.astype('uint16')) # shape=(12, 15, 14)
output = relay.Tuple([bop_1371,bop_1387,])
output2 = relay.Tuple([bop_1371,bop_1387,])
func_1394 = relay.Function([var_1369,var_1370,var_1386,], output)
mod['func_1394'] = func_1394
mod = relay.transform.InferType()(mod)
mutated_mod['func_1394'] = func_1394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1394_call = mutated_mod.get_global_var('func_1394')
var_1396 = relay.var("var_1396", dtype = "float64", shape = (12, 1, 14))#candidate|1396|(12, 1, 14)|var|float64
var_1397 = relay.var("var_1397", dtype = "float64", shape = (12, 16, 14))#candidate|1397|(12, 16, 14)|var|float64
var_1398 = relay.var("var_1398", dtype = "float64", shape = (12, 15, 14))#candidate|1398|(12, 15, 14)|var|float64
call_1395 = func_1394_call(var_1396,var_1397,var_1398,)
output = call_1395
func_1399 = relay.Function([var_1396,var_1397,var_1398,], output)
mutated_mod['func_1399'] = func_1399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1436 = relay.TupleGetItem(func_810_call(), 0)
call_1437 = relay.TupleGetItem(func_811_call(), 0)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1441 = relay.TupleGetItem(func_810_call(), 1)
call_1442 = relay.TupleGetItem(func_811_call(), 1)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_1445 = relay.TupleGetItem(func_1179_call(), 1)
call_1446 = relay.TupleGetItem(func_1180_call(), 1)
output = relay.Tuple([call_1436,call_1441,call_1445,])
output2 = relay.Tuple([call_1437,call_1442,call_1446,])
func_1447 = relay.Function([], output)
mod['func_1447'] = func_1447
mod = relay.transform.InferType()(mod)
output = func_1447()
func_1448 = relay.Function([], output)
mutated_mod['func_1448'] = func_1448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_1458 = func_1297_call()
call_1459 = func_1297_call()
var_1461 = relay.var("var_1461", dtype = "int16", shape = (13, 49))#candidate|1461|(13, 49)|var|int16
bop_1462 = relay.not_equal(call_1458.astype('bool'), var_1461.astype('bool')) # shape=(13, 49)
bop_1465 = relay.not_equal(call_1459.astype('bool'), var_1461.astype('bool')) # shape=(13, 49)
output = relay.Tuple([bop_1462,])
output2 = relay.Tuple([bop_1465,])
func_1468 = relay.Function([var_1461,], output)
mod['func_1468'] = func_1468
mod = relay.transform.InferType()(mod)
var_1469 = relay.var("var_1469", dtype = "int16", shape = (13, 49))#candidate|1469|(13, 49)|var|int16
output = func_1468(var_1469)
func_1470 = relay.Function([var_1469], output)
mutated_mod['func_1470'] = func_1470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1484 = relay.TupleGetItem(func_810_call(), 2)
call_1485 = relay.TupleGetItem(func_811_call(), 2)
func_1277_call = mod.get_global_var('func_1277')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_1487 = func_1277_call()
call_1488 = func_1277_call()
uop_1498 = relay.atanh(call_1484.astype('float32')) # shape=(2, 16, 8)
uop_1500 = relay.atanh(call_1485.astype('float32')) # shape=(2, 16, 8)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
call_1504 = relay.TupleGetItem(func_266_call(relay.reshape(uop_1498.astype('int8'), [2, 16, 8]), relay.reshape(call_1484.astype('int8'), [2, 16, 8]), ), 0)
call_1505 = relay.TupleGetItem(func_270_call(relay.reshape(uop_1498.astype('int8'), [2, 16, 8]), relay.reshape(call_1484.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([call_1487,uop_1498,call_1504,])
output2 = relay.Tuple([call_1488,uop_1500,call_1505,])
func_1535 = relay.Function([], output)
mod['func_1535'] = func_1535
mod = relay.transform.InferType()(mod)
output = func_1535()
func_1536 = relay.Function([], output)
mutated_mod['func_1536'] = func_1536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_1581 = relay.TupleGetItem(func_1179_call(), 2)
call_1582 = relay.TupleGetItem(func_1180_call(), 2)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_1627 = func_1297_call()
call_1628 = func_1297_call()
output = relay.Tuple([call_1581,call_1627,])
output2 = relay.Tuple([call_1582,call_1628,])
func_1630 = relay.Function([], output)
mod['func_1630'] = func_1630
mod = relay.transform.InferType()(mod)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1630_call = mutated_mod.get_global_var('func_1630')
call_1631 = func_1630_call()
output = call_1631
func_1632 = relay.Function([], output)
mutated_mod['func_1632'] = func_1632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_1675 = relay.TupleGetItem(func_1535_call(), 1)
call_1676 = relay.TupleGetItem(func_1536_call(), 1)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
var_1690 = relay.var("var_1690", dtype = "float64", shape = (49, 1))#candidate|1690|(49, 1)|var|float64
const_1691 = relay.const([[6.810405,-3.194326,-0.437543,-6.191915,6.758378,-2.329478,7.778428,-0.403219,-7.054409,0.665800,8.220632,-2.801320,6.978139,-5.396076,-2.753885,1.487092,4.821557,-5.022171,2.725903,0.170061,1.966963,-6.603208,8.141182,5.665593,3.367086,-6.870592,-1.703122,-1.837244,-8.395770,8.727747,-0.335464,9.058396,-0.708360,1.199857,-6.759376,-3.312342,1.994290,-2.052882,6.085894,-1.404028,8.823777,-2.037810,9.097675,7.812528,6.472218,-3.661843,2.901241,8.315233,2.305175,1.943236,2.880571,2.043193,-4.129744,1.212549,5.291036,3.088313,4.382497,5.076893,-1.964521,-1.652814,0.097754,4.419592,-3.722337,1.908278,-2.664495,2.656321,-4.678554,-6.921232,2.409301,6.179583,9.250042,2.175519,-7.480172,8.646671,9.979590,-2.606274,-7.678008,6.837059,5.133212,-7.215530,3.540879,9.599594,6.860204,6.032859,-1.516619,1.715187,7.956080,-1.382480,0.324169,-4.906275,7.407443,-7.249132,8.080694,1.435241,-7.800054,-6.726570,8.975423,9.119049],[6.676612,3.740028,6.575109,0.343216,9.784979,-5.170146,5.378802,9.019916,-1.071060,-5.412620,8.446190,-1.049778,3.048697,-7.695292,-6.023261,0.907392,-4.187328,3.790300,-3.779443,-3.789158,-9.576154,-3.837014,4.213663,2.711081,3.270248,5.585980,2.011101,-0.873671,-6.722161,8.507420,8.642684,-8.205597,-8.362947,7.905582,-9.510410,-1.457159,9.309802,-3.432448,4.427856,-8.423612,3.744289,3.484373,2.879145,-9.347498,-8.660971,-5.505580,-9.067766,8.757613,4.690957,6.812162,-0.559850,-1.509549,9.759496,9.969036,-1.180053,0.824476,2.223339,-5.319911,5.076499,6.955722,2.066570,3.090524,-5.871524,-7.500718,1.471400,-9.349018,7.094720,6.803281,1.954964,1.270576,-8.889274,-0.775626,-1.897095,-0.789659,1.635796,5.734653,-4.073136,-9.130002,-7.794545,-6.190095,8.661919,3.765428,5.886513,1.604970,1.998147,4.218313,1.186688,-0.568044,-1.763245,4.534488,-8.720846,-4.383198,3.521172,6.523165,6.566281,-8.184951,-9.833808,-1.471935],[-8.618693,1.110170,-7.605920,-2.386374,-0.535101,0.460051,3.623561,-7.935093,-7.521327,-8.431372,2.137169,9.367362,3.629583,4.342520,7.615205,-0.357514,6.387899,-3.777572,-6.377189,-4.642048,9.426038,5.511345,-9.416807,-5.100023,7.079065,3.392337,-1.248066,8.272144,-0.359969,-6.046977,-3.183127,7.183793,-8.946321,-8.966061,-8.435990,8.533905,-4.718939,5.552519,-0.178875,8.456624,-1.746201,-6.027455,4.596813,0.398983,7.054622,-1.682151,-4.780876,8.490523,8.524474,4.676969,-0.949152,0.170404,8.227409,-2.500634,-0.420457,9.722465,-7.952064,6.412277,-8.166389,2.639759,-8.536244,4.620271,9.582969,0.397747,-8.295862,2.807643,5.708900,-1.956406,1.822703,-0.229661,-3.890980,-9.977999,-2.983409,7.742043,-5.509503,-8.932850,-9.991460,0.941266,-9.528100,-4.835494,8.000270,-1.941494,-0.284643,-9.595868,6.702288,4.170752,-0.039718,-9.098426,3.675507,1.878376,-6.653348,5.250853,-1.116710,-2.371292,4.498776,3.689234,-9.963092,-3.752637],[-4.440205,-5.117179,1.702565,-2.512287,-9.338825,-6.082508,-1.567421,6.887295,7.889946,5.268615,-3.167743,4.717098,-7.664685,-4.516968,-5.835296,1.959838,1.155508,-1.066882,1.469939,1.232956,0.168022,7.992635,5.471651,-9.026456,0.822428,-8.918030,6.988684,-4.929879,8.713544,6.594063,9.457157,-7.640993,-8.831073,0.567395,3.296472,0.351686,0.826318,-6.046375,-5.296010,6.193208,-2.349859,9.952293,7.049343,3.926863,-9.900770,-0.886343,6.609477,9.472788,3.632360,0.258378,0.510661,2.470746,-4.697768,2.761168,-9.143733,-1.567413,1.108495,4.454681,1.146646,4.115063,5.992924,0.285862,-7.262363,-9.006747,-3.032113,3.044114,3.248345,-6.326067,-9.154792,-4.521564,-2.679167,-0.981010,-0.655582,1.039006,-5.218011,2.398874,-0.155805,8.139515,5.323689,5.222864,7.186679,2.172077,4.383806,-4.121181,-0.400452,2.462517,-6.653744,-6.465061,9.535668,-1.181778,-8.429172,7.126318,1.006782,2.027971,-9.057959,-7.492739,4.872113,-2.244147],[1.107474,8.457106,1.715557,-8.395404,-4.594148,-1.969020,-9.362354,1.542018,2.419531,-2.058430,7.685058,4.146012,-3.137597,-5.369675,-5.481523,-6.721708,7.058052,8.805611,-7.588931,-9.411339,-2.290720,-2.585937,-1.675959,3.689849,-9.551457,-2.627127,0.906767,-9.540831,2.357929,-9.365420,2.957576,7.884263,-0.079811,-1.959624,-7.290677,1.381726,6.361958,-7.425405,8.747719,7.595487,5.752818,-8.522251,-8.234714,-5.822137,3.902708,7.486710,8.013779,0.646287,9.051523,9.905722,8.867280,-0.537466,-4.647672,-2.612256,-1.630853,-3.912723,8.380992,-9.397874,8.035237,8.242629,6.471843,2.086972,6.701375,-7.964402,-8.269333,-6.505270,-5.880947,3.901982,5.447268,8.465785,3.887948,7.260363,-1.719617,-3.597334,-6.015287,-7.380531,-7.948890,4.510597,-5.340370,-8.550168,9.272848,-0.657503,3.100235,-8.957776,3.790710,-1.374714,3.296220,5.530322,-7.048282,3.725258,7.061263,-1.859540,-0.603052,6.576111,-5.227798,4.001364,1.247140,5.337629],[4.846477,9.238329,2.611521,-8.537573,-8.192460,-5.019586,6.938714,2.983855,4.057853,8.883555,2.643972,2.444826,-9.614737,5.567414,-3.636761,7.827478,7.607156,4.502637,-6.736361,8.603440,2.329961,7.676152,-0.262106,-2.892477,7.925666,3.305778,-2.316464,-1.414964,4.588233,-3.148661,-5.145172,-6.292253,3.968226,5.083229,5.361810,-6.910683,-8.484833,6.353975,-7.298084,3.835260,5.890977,3.878479,8.457658,7.141809,3.116327,-9.031448,7.122336,9.949679,-8.661099,-3.440532,-5.949229,5.646004,5.882504,1.655402,-3.034486,6.633833,0.936926,8.486222,-0.114524,1.065224,7.099432,3.281237,-3.081187,1.150195,5.357580,-9.727237,-0.900948,2.583336,8.584347,9.044452,2.308463,3.692662,6.248607,4.907929,2.473433,-4.362935,-0.239744,3.450297,-5.781879,-8.007686,8.641796,7.639242,-2.080893,8.075175,2.914817,6.774279,5.853982,9.809290,7.019260,-6.769881,-3.354266,2.722942,-8.809137,8.628266,2.655391,8.424986,3.375473,-1.867348],[9.352390,3.528646,0.613049,0.207327,5.319510,5.857072,7.843039,-6.414215,-9.738680,-5.164333,-1.689397,-6.945370,9.602021,-1.588027,-3.076220,-0.658920,-0.878256,5.810280,-9.406661,-9.040986,1.696462,2.595567,2.036485,-3.487283,0.396336,5.151443,2.443523,-8.489916,3.292524,5.807947,7.541192,0.099645,3.239155,8.822798,3.752450,8.779505,-1.865791,4.992327,-7.965548,7.165710,-9.059655,-6.792107,-2.845977,6.823339,1.406357,-1.876564,-8.337456,6.709608,-0.401369,-1.573932,-9.836789,-3.730283,-0.874419,0.167118,-5.346373,-9.135233,5.997241,-8.751292,4.856706,1.642993,-6.583880,-0.623353,0.747130,-2.189280,-6.100155,8.868534,-0.936754,4.544499,3.909038,-1.757587,-4.442942,-8.112061,7.538281,4.800654,-9.476998,1.283339,-3.737333,-9.065684,4.221644,7.526367,0.131480,7.636206,3.295101,-7.518055,8.624725,-8.588985,9.910665,1.167559,0.009173,-3.438854,1.393103,-5.614773,7.243871,2.349497,1.283860,-8.919116,5.042922,-5.308554],[6.116713,1.050666,7.396079,-6.752800,-7.800058,5.778325,-8.979426,-7.641649,-2.901664,-4.902471,4.879426,-3.839448,-6.330249,2.661571,-4.385455,-9.191779,-1.939073,-8.969249,9.981307,-7.330379,-8.212047,3.866371,6.955036,-3.812597,-0.705329,7.202882,-4.065132,-5.298348,9.263297,-6.135676,-7.908363,2.907273,-9.770290,-5.363765,-6.315828,-2.999275,6.272538,6.922464,0.722798,-2.890673,-7.651751,1.144270,0.522518,-5.244782,2.678477,3.985586,4.016050,-2.523888,-4.664254,-3.392311,8.494318,-7.714792,-3.225212,-3.371624,6.027551,-6.298739,-7.445643,5.400894,1.608037,-1.062930,-7.334117,-2.221846,-0.225019,-6.061462,-2.648583,1.583178,8.215684,-4.138359,-5.837283,9.808706,7.196416,7.379508,1.561032,1.250694,-5.260931,5.273795,4.917280,9.490035,-4.770004,7.456970,-9.645854,-6.248391,-5.538477,9.005443,9.000687,-4.855594,-9.029086,6.053632,-0.881142,3.930601,-7.272493,-0.574448,-8.807703,-7.607361,4.548089,8.346478,-1.288538,8.524369]], dtype = "float64")#candidate|1691|(8, 98)|const|float64
call_1689 = relay.TupleGetItem(func_965_call(relay.reshape(var_1690.astype('float64'), [49,]), relay.reshape(const_1691.astype('float64'), [784,]), ), 3)
call_1692 = relay.TupleGetItem(func_968_call(relay.reshape(var_1690.astype('float64'), [49,]), relay.reshape(const_1691.astype('float64'), [784,]), ), 3)
uop_1694 = relay.atan(const_1691.astype('float64')) # shape=(8, 98)
func_1016_call = mod.get_global_var('func_1016')
func_1020_call = mutated_mod.get_global_var('func_1020')
call_1697 = relay.TupleGetItem(func_1016_call(relay.reshape(var_1690.astype('float64'), [1, 49]), relay.reshape(uop_1694.astype('float64'), [784,]), ), 0)
call_1698 = relay.TupleGetItem(func_1020_call(relay.reshape(var_1690.astype('float64'), [1, 49]), relay.reshape(uop_1694.astype('float64'), [784,]), ), 0)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_1700 = relay.TupleGetItem(func_1179_call(), 1)
call_1701 = relay.TupleGetItem(func_1180_call(), 1)
output = relay.Tuple([call_1675,call_1689,var_1690,uop_1694,call_1697,call_1700,])
output2 = relay.Tuple([call_1676,call_1692,var_1690,uop_1694,call_1698,call_1701,])
func_1705 = relay.Function([var_1690,], output)
mod['func_1705'] = func_1705
mod = relay.transform.InferType()(mod)
var_1706 = relay.var("var_1706", dtype = "float64", shape = (49, 1))#candidate|1706|(49, 1)|var|float64
output = func_1705(var_1706)
func_1707 = relay.Function([var_1706], output)
mutated_mod['func_1707'] = func_1707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mod.get_global_var('func_1342')
func_1343_call = mutated_mod.get_global_var('func_1343')
call_1715 = relay.TupleGetItem(func_1342_call(), 0)
call_1716 = relay.TupleGetItem(func_1343_call(), 0)
output = relay.Tuple([call_1715,])
output2 = relay.Tuple([call_1716,])
func_1720 = relay.Function([], output)
mod['func_1720'] = func_1720
mod = relay.transform.InferType()(mod)
mutated_mod['func_1720'] = func_1720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1720_call = mutated_mod.get_global_var('func_1720')
call_1721 = func_1720_call()
output = call_1721
func_1722 = relay.Function([], output)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_1751 = relay.TupleGetItem(func_1535_call(), 0)
call_1752 = relay.TupleGetItem(func_1536_call(), 0)
uop_1759 = relay.log10(call_1751.astype('float32')) # shape=(784,)
uop_1761 = relay.log10(call_1752.astype('float32')) # shape=(784,)
output = uop_1759
output2 = uop_1761
func_1762 = relay.Function([], output)
mod['func_1762'] = func_1762
mod = relay.transform.InferType()(mod)
output = func_1762()
func_1763 = relay.Function([], output)
mutated_mod['func_1763'] = func_1763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
call_1770 = relay.TupleGetItem(func_1630_call(), 0)
call_1771 = relay.TupleGetItem(func_1632_call(), 0)
output = call_1770
output2 = call_1771
func_1773 = relay.Function([], output)
mod['func_1773'] = func_1773
mod = relay.transform.InferType()(mod)
output = func_1773()
func_1774 = relay.Function([], output)
mutated_mod['func_1774'] = func_1774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1784 = relay.var("var_1784", dtype = "float64", shape = (2, 14, 6))#candidate|1784|(2, 14, 6)|var|float64
uop_1785 = relay.tan(var_1784.astype('float64')) # shape=(2, 14, 6)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
const_1800 = relay.const([True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False], dtype = "bool")#candidate|1800|(1620,)|const|bool
var_1801 = relay.var("var_1801", dtype = "float64", shape = (784,))#candidate|1801|(784,)|var|float64
call_1799 = relay.TupleGetItem(func_1132_call(relay.reshape(const_1800.astype('bool'), [9, 15, 12]), relay.reshape(var_1801.astype('float64'), [784,]), ), 0)
call_1802 = relay.TupleGetItem(func_1136_call(relay.reshape(const_1800.astype('bool'), [9, 15, 12]), relay.reshape(var_1801.astype('float64'), [784,]), ), 0)
output = relay.Tuple([uop_1785,call_1799,const_1800,var_1801,])
output2 = relay.Tuple([uop_1785,call_1802,const_1800,var_1801,])
func_1805 = relay.Function([var_1784,var_1801,], output)
mod['func_1805'] = func_1805
mod = relay.transform.InferType()(mod)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1805_call = mutated_mod.get_global_var('func_1805')
var_1807 = relay.var("var_1807", dtype = "float64", shape = (2, 14, 6))#candidate|1807|(2, 14, 6)|var|float64
var_1808 = relay.var("var_1808", dtype = "float64", shape = (784,))#candidate|1808|(784,)|var|float64
call_1806 = func_1805_call(var_1807,var_1808,)
output = call_1806
func_1809 = relay.Function([var_1807,var_1808,], output)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1720_call = mod.get_global_var('func_1720')
func_1722_call = mutated_mod.get_global_var('func_1722')
call_1813 = relay.TupleGetItem(func_1720_call(), 0)
call_1814 = relay.TupleGetItem(func_1722_call(), 0)
uop_1827 = relay.asin(call_1813.astype('float64')) # shape=(1, 49)
uop_1829 = relay.asin(call_1814.astype('float64')) # shape=(1, 49)
uop_1830 = relay.atanh(call_1813.astype('float32')) # shape=(1, 49)
uop_1832 = relay.atanh(call_1814.astype('float32')) # shape=(1, 49)
output = relay.Tuple([uop_1827,uop_1830,])
output2 = relay.Tuple([uop_1829,uop_1832,])
func_1833 = relay.Function([], output)
mod['func_1833'] = func_1833
mod = relay.transform.InferType()(mod)
mutated_mod['func_1833'] = func_1833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mutated_mod.get_global_var('func_1833')
call_1834 = func_1833_call()
output = call_1834
func_1835 = relay.Function([], output)
mutated_mod['func_1835'] = func_1835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_1863 = relay.TupleGetItem(func_1535_call(), 2)
call_1864 = relay.TupleGetItem(func_1536_call(), 2)
output = relay.Tuple([call_1863,])
output2 = relay.Tuple([call_1864,])
func_1867 = relay.Function([], output)
mod['func_1867'] = func_1867
mod = relay.transform.InferType()(mod)
output = func_1867()
func_1868 = relay.Function([], output)
mutated_mod['func_1868'] = func_1868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_1927 = relay.TupleGetItem(func_810_call(), 3)
call_1928 = relay.TupleGetItem(func_811_call(), 3)
func_1447_call = mod.get_global_var('func_1447')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_1929 = relay.TupleGetItem(func_1447_call(), 1)
call_1930 = relay.TupleGetItem(func_1448_call(), 1)
output = relay.Tuple([call_1927,call_1929,])
output2 = relay.Tuple([call_1928,call_1930,])
func_1935 = relay.Function([], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
output = func_1935()
func_1936 = relay.Function([], output)
mutated_mod['func_1936'] = func_1936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1773_call = mod.get_global_var('func_1773')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_2160 = func_1773_call()
call_2161 = func_1773_call()
output = call_2160
output2 = call_2161
func_2188 = relay.Function([], output)
mod['func_2188'] = func_2188
mod = relay.transform.InferType()(mod)
output = func_2188()
func_2189 = relay.Function([], output)
mutated_mod['func_2189'] = func_2189
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2207 = relay.const([[[-8.021890,5.943556,-8.033293,-2.511425,-0.366220,3.324637],[6.509800,-1.732096,-8.190527,4.028875,-3.424559,0.300527]],[[-8.552232,7.489959,1.605673,7.370255,8.422374,-6.683812],[-1.325689,3.287547,1.042783,-6.147032,3.843858,2.748031]],[[-0.666797,-8.598834,7.689090,8.130626,5.387981,-7.762963],[4.630296,1.705521,-7.201633,-8.699768,-8.596236,-7.194870]],[[9.469844,-5.804668,5.019020,-1.178656,-7.572945,-6.263852],[-2.514837,6.935553,-8.831984,-5.703973,-5.790892,9.953587]],[[2.417610,8.167951,3.622985,1.227161,-2.409294,-5.510810],[-0.374302,-3.234598,9.900701,-4.962501,-6.391901,-5.330776]],[[6.779444,7.184863,-1.740407,1.269958,-0.392602,1.953926],[-0.327438,-0.500207,-8.307088,-1.452772,4.246155,0.751503]]], dtype = "float32")#candidate|2207|(6, 2, 6)|const|float32
uop_2208 = relay.cos(const_2207.astype('float32')) # shape=(6, 2, 6)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
var_2211 = relay.var("var_2211", dtype = "float64", shape = (784,))#candidate|2211|(784,)|var|float64
call_2210 = relay.TupleGetItem(func_1229_call(relay.reshape(var_2211.astype('float64'), [784,])), 2)
call_2212 = relay.TupleGetItem(func_1231_call(relay.reshape(var_2211.astype('float64'), [784,])), 2)
func_1867_call = mod.get_global_var('func_1867')
func_1868_call = mutated_mod.get_global_var('func_1868')
call_2222 = relay.TupleGetItem(func_1867_call(), 0)
call_2223 = relay.TupleGetItem(func_1868_call(), 0)
func_1833_call = mod.get_global_var('func_1833')
func_1835_call = mutated_mod.get_global_var('func_1835')
call_2225 = relay.TupleGetItem(func_1833_call(), 0)
call_2226 = relay.TupleGetItem(func_1835_call(), 0)
output = relay.Tuple([uop_2208,call_2210,var_2211,call_2222,call_2225,])
output2 = relay.Tuple([uop_2208,call_2212,var_2211,call_2223,call_2226,])
func_2229 = relay.Function([var_2211,], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
var_2230 = relay.var("var_2230", dtype = "float64", shape = (784,))#candidate|2230|(784,)|var|float64
output = func_2229(var_2230)
func_2231 = relay.Function([var_2230], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1867_call = mod.get_global_var('func_1867')
func_1868_call = mutated_mod.get_global_var('func_1868')
call_2261 = relay.TupleGetItem(func_1867_call(), 0)
call_2262 = relay.TupleGetItem(func_1868_call(), 0)
var_2265 = relay.var("var_2265", dtype = "int8", shape = (2, 16, 8))#candidate|2265|(2, 16, 8)|var|int8
bop_2266 = relay.add(call_2261.astype('int64'), relay.reshape(var_2265.astype('int64'), relay.shape_of(call_2261))) # shape=(2, 16, 8)
bop_2269 = relay.add(call_2262.astype('int64'), relay.reshape(var_2265.astype('int64'), relay.shape_of(call_2262))) # shape=(2, 16, 8)
output = relay.Tuple([bop_2266,])
output2 = relay.Tuple([bop_2269,])
func_2285 = relay.Function([var_2265,], output)
mod['func_2285'] = func_2285
mod = relay.transform.InferType()(mod)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2286 = relay.var("var_2286", dtype = "int8", shape = (2, 16, 8))#candidate|2286|(2, 16, 8)|var|int8
func_2285_call = mutated_mod.get_global_var('func_2285')
call_2287 = func_2285_call(var_2286)
output = call_2287
func_2288 = relay.Function([var_2286], output)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_2325 = relay.TupleGetItem(func_1179_call(), 3)
call_2326 = relay.TupleGetItem(func_1180_call(), 3)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_2334 = relay.TupleGetItem(func_810_call(), 3)
call_2335 = relay.TupleGetItem(func_811_call(), 3)
func_1805_call = mod.get_global_var('func_1805')
func_1809_call = mutated_mod.get_global_var('func_1809')
var_2341 = relay.var("var_2341", dtype = "float64", shape = (6, 28))#candidate|2341|(6, 28)|var|float64
call_2340 = relay.TupleGetItem(func_1805_call(relay.reshape(var_2341.astype('float64'), [2, 14, 6]), relay.reshape(call_2325.astype('float64'), [784,]), ), 0)
call_2342 = relay.TupleGetItem(func_1809_call(relay.reshape(var_2341.astype('float64'), [2, 14, 6]), relay.reshape(call_2325.astype('float64'), [784,]), ), 0)
output = relay.Tuple([call_2325,call_2334,call_2340,var_2341,])
output2 = relay.Tuple([call_2326,call_2335,call_2342,var_2341,])
func_2352 = relay.Function([var_2341,], output)
mod['func_2352'] = func_2352
mod = relay.transform.InferType()(mod)
var_2353 = relay.var("var_2353", dtype = "float64", shape = (6, 28))#candidate|2353|(6, 28)|var|float64
output = func_2352(var_2353)
func_2354 = relay.Function([var_2353], output)
mutated_mod['func_2354'] = func_2354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
call_2356 = relay.TupleGetItem(func_1630_call(), 1)
call_2357 = relay.TupleGetItem(func_1632_call(), 1)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_2370 = relay.TupleGetItem(func_810_call(), 3)
call_2371 = relay.TupleGetItem(func_811_call(), 3)
output = relay.Tuple([call_2356,call_2370,])
output2 = relay.Tuple([call_2357,call_2371,])
func_2382 = relay.Function([], output)
mod['func_2382'] = func_2382
mod = relay.transform.InferType()(mod)
mutated_mod['func_2382'] = func_2382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mutated_mod.get_global_var('func_2382')
call_2383 = func_2382_call()
output = call_2383
func_2384 = relay.Function([], output)
mutated_mod['func_2384'] = func_2384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1867_call = mod.get_global_var('func_1867')
func_1868_call = mutated_mod.get_global_var('func_1868')
call_2392 = relay.TupleGetItem(func_1867_call(), 0)
call_2393 = relay.TupleGetItem(func_1868_call(), 0)
var_2401 = relay.var("var_2401", dtype = "int8", shape = (2, 16, 8))#candidate|2401|(2, 16, 8)|var|int8
bop_2402 = relay.equal(call_2392.astype('bool'), relay.reshape(var_2401.astype('bool'), relay.shape_of(call_2392))) # shape=(2, 16, 8)
bop_2405 = relay.equal(call_2393.astype('bool'), relay.reshape(var_2401.astype('bool'), relay.shape_of(call_2393))) # shape=(2, 16, 8)
bop_2416 = relay.less_equal(call_2392.astype('bool'), relay.reshape(var_2401.astype('bool'), relay.shape_of(call_2392))) # shape=(2, 16, 8)
bop_2419 = relay.less_equal(call_2393.astype('bool'), relay.reshape(var_2401.astype('bool'), relay.shape_of(call_2393))) # shape=(2, 16, 8)
func_752_call = mod.get_global_var('func_752')
func_755_call = mutated_mod.get_global_var('func_755')
var_2428 = relay.var("var_2428", dtype = "float64", shape = (7, 7))#candidate|2428|(7, 7)|var|float64
const_2429 = relay.const([[-6.963477,-9.378544,3.040053,1.148194,-7.561883,-4.577371,9.310975,9.808635,-9.733887,-3.756503,2.452257,1.977216,7.522609,-7.215959,-0.354035,3.616623,-4.588608,2.270554,-4.073095,1.615095,-7.490898,-5.963542,-8.815205,-5.230406,5.566549,5.994857,-8.595210,-5.966088,1.308125,7.168075,7.089385,-6.055424,-0.451918,-2.310662,-5.397487,8.998652,3.699352,4.012592,-9.683451,-8.507966,-1.218440,-8.587230,0.463169,-1.031133,-6.355594,-4.572377,-7.149793,3.456674,-2.162202,-3.208274,-6.183011,5.915530,0.135834,0.516291,7.521463,7.345074,0.601167,-6.367681,-2.150242,4.220483,-4.126656,1.187374,4.163477,-5.083734,-7.354897,-6.877273,-5.924504,-1.347584,-1.683703,1.546496,-1.804037,4.603261,0.892993,-1.698247,4.778866,-0.922669,8.589078,-6.837402,-8.710942,-7.981255,8.774990,5.853788,8.527171,0.788113,6.784765,7.281029,4.908896,5.771742,-9.737725,9.132048,-4.772375,1.957539,7.073283,-2.927693,-5.601624,-0.294729,8.016516,-4.739752],[8.156793,9.960822,-9.794865,-7.958615,8.648001,-3.449624,2.245710,5.345555,9.043736,3.535240,6.445953,2.549593,3.107437,1.763959,4.487946,0.705076,-1.960915,-6.160828,6.165774,-2.011953,-3.842266,-8.179553,-6.511928,0.319960,-9.163984,-8.425997,-6.076922,-2.985301,7.111861,1.531574,9.813050,-9.650636,2.414035,-0.482332,7.647693,3.726691,-1.496718,-1.120146,-8.312096,-4.424222,-1.200946,-7.144007,-7.470351,-8.995763,-7.509422,1.465356,-0.138756,9.259174,-9.899019,-2.270538,7.013980,2.460110,1.109469,-3.417416,-7.247044,9.626836,-0.973539,3.935588,-1.643644,-0.157736,1.211886,-7.772645,9.701863,4.120842,3.472427,-5.105778,-2.452309,-2.363309,0.763554,0.322672,-6.365301,-6.165291,-7.465109,6.717185,-7.734825,3.937886,8.325225,4.543767,-0.282086,-4.865001,6.235129,-4.108732,0.316771,1.211717,2.697589,-0.902371,6.844813,-3.629171,-3.058993,-0.059412,-2.089251,9.440258,0.573642,-6.785587,9.497580,-7.699328,8.423431,-9.525676],[1.545944,5.212097,-3.410884,-6.421417,3.658908,8.523405,5.508421,-2.323973,-2.191193,4.537641,-9.465674,8.758713,3.382366,-8.365677,-3.411174,4.836243,6.126318,-4.907560,-0.709731,2.709358,-2.204565,1.503578,6.550873,1.024237,9.881238,4.804424,-3.783688,-5.028517,-2.257998,1.844433,4.384481,4.801072,8.649891,8.509053,-4.391949,0.277882,9.829630,-8.239877,-7.807333,-7.792136,8.392559,-2.348768,-5.157374,0.845526,9.104929,7.606283,2.563915,0.178012,1.483045,-2.274071,-2.919464,-7.862453,-9.085916,-1.415296,-7.199534,0.805449,-4.434537,2.676042,-4.745098,-7.192411,1.660643,-9.066456,-0.760744,-4.637421,-4.352854,2.984815,-4.478830,5.364861,8.287097,-5.750813,-4.696934,0.112133,9.969945,-8.854557,2.605247,4.342464,-5.713353,2.331209,-6.099899,-5.806591,-6.611626,4.129159,6.519646,6.517361,-2.270758,-0.263382,0.048473,6.571527,2.767517,-9.949539,-1.144889,8.655019,-3.903967,9.899638,-1.211052,9.341280,-4.988269,-3.140864],[1.283419,-3.770250,0.775488,6.656049,-1.877763,2.570149,-9.676145,-7.505408,1.729968,9.793125,-6.646929,-5.642052,4.230001,0.050864,-1.727725,2.386282,1.615074,4.067759,2.936522,-6.388368,-7.219049,4.156838,0.639963,4.136573,2.587717,-9.364241,-9.927081,1.713461,0.267288,4.502065,-2.393451,6.459056,-0.521911,-1.545755,9.329174,5.221945,-1.017386,-8.915217,-1.938101,-7.421829,8.844599,4.178442,-9.161119,8.970094,2.620346,2.356346,9.749418,0.936419,-7.102591,6.792095,-1.640243,1.100758,2.676297,2.618809,2.431748,-0.645016,-5.990499,-6.022209,-1.846424,-4.900168,-5.084110,2.603334,4.006434,6.151406,-3.861536,9.466405,9.613259,4.122636,1.024213,-5.866025,-7.878814,9.998874,-3.224518,8.522398,3.579897,-4.885507,-4.211932,4.063000,7.331117,0.952694,-6.859786,-1.918429,7.785237,-2.739703,-1.521718,0.817917,8.808872,-2.666209,6.411701,-3.509832,3.197230,-6.603311,-0.475514,9.044823,5.719721,0.617731,-5.121213,4.641546],[1.885781,-2.633152,5.565427,8.291566,-1.740217,-9.712174,1.203260,-2.571092,-1.738416,-9.950456,-2.597956,-5.809992,-9.561755,5.847860,6.419326,-5.197118,2.920454,2.790383,2.073323,4.580245,-3.214796,3.297991,6.186040,-2.556631,-4.540369,-7.653780,1.462407,-0.438424,6.456757,-5.716432,5.563475,8.416065,0.337778,2.966129,7.433022,-3.970171,-0.403744,-4.537173,0.488295,7.008378,5.304674,-0.983488,-7.721315,9.998281,9.819391,9.680319,-7.870294,3.319395,2.262697,-2.703092,9.906144,-7.388295,-0.332211,7.149002,6.507146,-6.143197,5.598379,1.245531,0.088833,0.617473,-7.452698,7.206933,6.363609,-2.387613,9.996539,-4.184497,7.483153,0.519956,3.820745,2.406483,4.468648,4.396395,2.841746,8.120030,5.891731,5.803986,6.863209,9.861808,5.900007,0.385570,-9.565371,9.684757,-0.876399,-7.271452,-2.715691,-8.550736,5.050911,-4.552492,4.283837,3.049488,-5.515636,-1.833363,-1.260216,-9.626650,-8.189237,-8.394647,6.378329,-7.363448],[-5.569495,4.794353,8.972992,6.238351,-2.842227,4.629821,2.607502,-4.950616,0.216016,5.131367,-9.498932,4.723460,8.972501,-3.948089,5.323942,-7.190526,0.735228,-1.406014,5.710183,2.560703,2.661330,2.587810,9.683968,-5.815255,7.177962,-6.269928,-0.441450,-6.720499,-5.611791,-8.413036,5.218484,0.637802,3.545390,4.100303,0.082828,-3.965979,0.520721,0.940096,8.850159,0.462415,0.165970,2.946479,2.072261,9.449787,-8.064619,-4.117960,-1.663724,-6.983885,4.549010,2.955253,-9.715303,-1.529840,7.562989,-7.519566,9.161560,0.473366,-1.770249,-0.721216,-6.023318,8.714887,-0.777807,7.686063,7.246188,-7.285858,7.212542,-5.626568,9.446385,-6.380407,-5.841793,0.750893,-8.142812,8.298043,6.815586,3.761003,4.903006,-5.460799,-0.877776,7.084539,8.669785,-7.842459,5.546574,-4.457874,2.539220,5.019340,-5.124389,-3.130145,-2.253704,4.754895,8.843173,6.792380,9.478309,-9.194984,8.362621,4.454690,9.081720,-5.118656,-4.672390,5.092974],[9.128500,-6.218957,-0.912877,-9.979089,-3.625039,-4.120479,-8.652732,-1.647826,-6.045469,4.006711,-7.706393,-3.626795,6.690417,-5.292190,-9.752400,8.913573,3.420379,5.663524,-0.215754,-9.431927,9.571452,4.585134,-3.409582,6.944474,-2.925199,0.132927,1.953439,6.619248,-1.560340,5.494774,3.639806,-1.322632,-5.245624,-7.964579,4.002078,9.213700,-4.802372,7.409040,-3.796257,6.730895,1.018850,-9.602861,-4.479404,8.199718,1.150593,7.953290,-3.008133,2.265578,0.160757,9.259506,-3.441932,4.323982,1.468800,-9.556871,3.452221,4.500186,-0.208838,-7.287738,6.082897,9.093182,-2.909797,5.119985,-9.984818,8.082894,9.631562,-7.080372,9.143305,-9.193708,-3.139127,-2.477058,-8.485040,2.153230,2.213458,3.420860,5.406161,-1.217405,-6.117202,-3.606058,-4.120381,-2.055209,8.300814,-2.749745,2.345300,9.875609,4.643552,0.491867,0.944698,-7.024226,-7.015263,2.807043,-8.554430,3.073617,-0.236700,9.676794,6.845544,-2.396193,-4.573278,1.900973],[2.822393,-2.296587,5.029906,-3.320903,-7.272339,5.571305,-1.586147,-4.919527,-7.239668,7.542042,-1.996379,-8.859413,4.647411,-9.077119,2.636735,9.722496,-8.711619,6.132697,8.985889,0.705013,-6.470279,8.734940,5.168673,9.615200,9.574557,-6.581215,5.551223,-2.020734,7.026680,-7.666373,-8.788117,1.024366,2.074642,-2.908949,-9.392957,-0.829074,4.940216,-5.537535,-5.214947,-9.834356,-2.717797,9.609061,0.152034,-9.217745,-0.561521,3.205328,-6.223351,3.779100,4.496952,2.085005,5.005962,-6.606115,1.187351,-2.029039,-1.108072,7.182496,4.400269,-5.725234,-0.907742,-0.294756,-8.703583,-6.940595,-7.729318,-6.829814,5.970794,-4.789117,-9.488399,7.745114,2.941437,2.102505,9.849380,-5.131108,1.203182,0.450299,-9.823410,-4.530983,-4.675642,3.779675,-4.132189,-4.026970,2.492300,1.352407,-7.427729,7.267117,-5.104976,7.949209,-7.610206,-6.731989,6.239052,5.175399,0.427171,-6.295598,-7.916170,9.091260,7.026716,2.454822,-6.559494,-2.289227]], dtype = "float64")#candidate|2429|(8, 98)|const|float64
call_2427 = relay.TupleGetItem(func_752_call(relay.reshape(var_2428.astype('float64'), [49,]), relay.reshape(const_2429.astype('float64'), [2, 392]), ), 3)
call_2430 = relay.TupleGetItem(func_755_call(relay.reshape(var_2428.astype('float64'), [49,]), relay.reshape(const_2429.astype('float64'), [2, 392]), ), 3)
output = relay.Tuple([bop_2402,bop_2416,call_2427,var_2428,const_2429,])
output2 = relay.Tuple([bop_2405,bop_2419,call_2430,var_2428,const_2429,])
func_2438 = relay.Function([var_2401,var_2428,], output)
mod['func_2438'] = func_2438
mod = relay.transform.InferType()(mod)
mutated_mod['func_2438'] = func_2438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2438_call = mutated_mod.get_global_var('func_2438')
var_2440 = relay.var("var_2440", dtype = "int8", shape = (2, 16, 8))#candidate|2440|(2, 16, 8)|var|int8
var_2441 = relay.var("var_2441", dtype = "float64", shape = (7, 7))#candidate|2441|(7, 7)|var|float64
call_2439 = func_2438_call(var_2440,var_2441,)
output = call_2439
func_2442 = relay.Function([var_2440,var_2441,], output)
mutated_mod['func_2442'] = func_2442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2457 = relay.var("var_2457", dtype = "uint8", shape = (16, 6, 12))#candidate|2457|(16, 6, 12)|var|uint8
var_2458 = relay.var("var_2458", dtype = "uint8", shape = (16, 6, 12))#candidate|2458|(16, 6, 12)|var|uint8
bop_2459 = relay.greater(var_2457.astype('bool'), relay.reshape(var_2458.astype('bool'), relay.shape_of(var_2457))) # shape=(16, 6, 12)
func_495_call = mod.get_global_var('func_495')
func_500_call = mutated_mod.get_global_var('func_500')
const_2474 = relay.const([5.710523,8.985119,-4.002696,3.009063,-7.573247,5.373399,1.771602,-1.951071,5.100829,6.059092,-1.787435,-1.769149,-7.092149,-2.050302,-8.978739,3.888027,-4.503160,7.288098,6.156437,-4.512398,4.891912,-2.400578,-1.297106,-0.815636,9.177924,9.432436,1.869434,4.366238,6.366673,-4.996565,2.863683,6.695823,-3.356514,-0.363528,7.911364,0.858449,5.044010,6.678407,6.399153,2.760387,8.993548,-4.462078,8.841821,-8.337857,4.952216,-1.748708,8.072579,6.265938,-0.046591], dtype = "float64")#candidate|2474|(49,)|const|float64
const_2475 = relay.const([[-0.438645,4.528341,9.971207,-4.597757,5.319139,-8.386134,-9.824671,-8.947340,5.268306,9.509031,-7.466452,-9.262340,-5.873134,0.783540,-7.210364,-4.861749,2.642360,-4.500728,3.138279,-3.854903,0.275487,0.092911,9.055308,-1.503100,-3.389135,0.221134,-4.888467,-8.120633,1.056639,6.850460,5.419081,-8.767527,2.784325,-7.421724,-3.163326,1.086826,2.710836,1.544912,-7.056995,8.786367,0.668792,-2.885793,-3.921873,9.121068,-7.132189,1.723380,-0.528916,-6.100664,4.055752,-2.466262,5.797578,8.181528,-5.906031,-7.869110,-9.175629,-2.157217,-8.131021,5.161413,9.633238,9.601891,9.110245,2.495858,-2.001222,3.761324,-3.754230,4.459910,-9.586673,-8.973980,-9.817920,7.488133,-3.720857,-8.050961,-6.254476,7.649209,-1.375616,1.875662,-0.996702,-4.916157,8.941780,-9.229769,0.609522,3.220847,-7.773892,5.108124,-2.040601,-0.866421,-2.465859,-2.944753,-6.283189,-0.358691,-5.643073,5.797990,-6.574272,7.897791,7.013578,-8.325047,-2.063939,-7.827749,4.796910,4.951505,3.008571,3.784149,-1.057525,-7.231938,2.230837,-8.136837,4.412767,-7.716700,5.376539,0.416288,9.112382,5.524905,4.043334,9.191679,7.031109,5.902189,-4.872643,-3.501423,-5.457104,8.644859,1.379167,9.633476,1.016623,0.422946,5.920719,-5.123906,-7.512915,-6.906401,5.518614,-0.611868,-0.682024,4.129209,-6.735257,-6.556389,2.555533,1.648419,9.442858,3.090567,-4.626382,1.661887,7.879400,0.611539,0.112903,2.704518,6.117167,-5.178735,1.801010,-2.892715,0.721218,-7.040773,-9.874185,-0.795846,-5.150844,6.084663,-1.279124,2.989732,-8.485235,8.448200,-2.346619,-2.045678,-0.480841,-6.715221,9.543088,-5.170383,9.333443,4.153989,-0.160245,8.787181,4.113126,5.767491,5.753008,9.584305,3.598720,0.240657,7.060325,9.545674,-4.798429,-3.325084,-8.190841,6.959051,6.245779,-5.176043,-4.767934,3.971668,-6.429128,0.367381,0.220441,3.924928,5.517055,-6.338131,-9.927129,-6.449315,1.762234,-1.960409,7.420351,4.556256,-3.124453,-4.352961,0.492499,-9.032852,9.268615,4.082152,-2.091657,1.788913,-0.767475,9.360058,-8.277536,0.960491,-6.892844,2.686790,9.018386,-7.466117,-4.885197,-9.821536,-7.316349,7.224912,-5.592657,-1.282765,4.529881,-6.505552,-1.123481,4.825101,-5.239767,-3.071992,-9.614064,-9.796626,1.766837,-7.866307,-2.412233,1.407211,8.647017,-2.079796,-9.698130,0.902370,-2.488655,8.190363,4.508682,2.981421,4.329076,-9.913424,-5.392108,-5.274109,4.217637,0.351827,2.830837,6.223039,-2.182983,1.888623,-9.872654,-1.394127,-0.140387,2.754775,-4.084148,2.377871,2.077953,-9.673885,9.826704,5.792937,1.613115,-0.711501,8.627657,7.652229,5.561933,-6.242073,8.101141,-8.091911,-7.992765,5.175955,3.357039,1.680195,-6.663080,-8.003906,-1.256712,6.950741,-8.160478,-4.624493,8.202413,5.151203,-8.996214,-5.866156,7.389617,-9.222201,9.664583,-2.697383,-7.811251,7.454541,1.603474,-6.788688,3.529621,8.491335,6.879720,4.488827,-0.126027,7.862507,0.302821,-9.820205,9.878981,-6.992895,3.361796,4.230816,-5.033784,-3.319270,-0.886311,2.652742,-1.935064,7.297660,1.827679,-4.711202,-5.978886,-4.307801,-3.382590,-8.085570,6.530704,-2.252499,9.939833,7.706516,-4.289466,-8.551922,-9.985603,-9.243972,-1.132723,4.906015,-7.240463,1.167721,5.636921,-4.579525,4.163380,3.319274,-7.626661,4.544838,7.799460,5.256175,-1.098842,-7.838452,-1.231015,-2.276577,2.362665,-1.161295,8.248578,-7.812949,7.365994,-3.148474,6.465004,-2.191475,4.914695,8.680770,-1.204085,-1.610419,-3.925773,8.357981,3.815221,-3.139029,0.564044,8.966406,-5.419229,-1.924217,-8.993663,-6.918393,-9.822985,2.282709,-0.673981,4.444308,-7.045233,-4.423375,-5.725752,0.670699,2.444594,-9.736810,-9.654308,6.869893,5.724647,-5.803119,7.082787,4.484546,5.526917,0.034052,-4.238353,-2.298577,9.980154,1.280451,4.893798,3.660202,-9.996083,0.649267,1.316571,-0.601252,-0.832689,1.471829,4.020411,-9.508711,1.873265,6.778988,-9.101041,-7.454508,-2.279377,1.119578,-2.683125,-1.213744,6.845878,3.823558,-5.469291,8.365434,5.445300,-4.908017,-7.308989,7.071496,7.630344,4.510662,1.582612,5.824627,7.756160,1.792820,6.958385,0.916789,7.035743,-2.649106,-6.629921,1.122473,-4.502023,-3.396432,-5.915628,-9.625819,-2.058571,7.495829,-7.896961,9.764194,0.276822,2.843909,-3.185826,7.635309,-1.680230,-8.853408,-6.612404,-4.860872,8.881908,5.368833,-4.925954,2.232110,6.870392,-6.678876,6.757373,3.842125,-6.909996,-2.384334,0.966407,2.417278,9.815565,-3.563126,5.065131,-6.980269,-3.079214,-8.160751,0.053085,8.440395,-0.808123,-6.853687,-2.818900,-2.285559,9.403529,1.656816,3.957750,-1.739767,-8.460548,-2.234431,8.043972,0.566841,-1.151873,-6.026645,7.045593,-4.461478,-0.986834,-6.333588,-5.543111,1.654581,7.131200,3.969589,0.328084,1.877004,-3.149400,6.257046,-0.150919,7.084553,-9.009120,-9.636226,-3.475014,2.864444,-5.350205,6.352471,8.831704,-0.551091,0.627958,4.180924,8.065852,8.469777,-1.507707,4.538579,1.439613,0.054813,-6.706163,8.289190,-5.560886,2.784064,-4.757832,1.310007,-7.020638,-7.411466,0.278719,-2.407484,-9.066960,0.436516,6.970304,0.437173,0.786249,-5.787456,4.753884,-0.666651,3.427263,-5.413486,-5.771308,2.901294,2.147419,0.932058,1.507448,5.570450,3.338978,-0.265596,7.440387,0.706369,-1.920515,-6.755283,2.615104,3.032419,8.762099,9.031543,9.176653,-7.294280,-7.625065,-6.264244,3.542156,-9.254147,-7.648686,5.066721,-6.416043,-8.279884,9.784283,-8.895286,-4.043322,7.258791,0.042151,3.538615,3.262250,5.997315,4.456993,0.057503,8.878418,7.604959,-3.105286,2.192213,9.565455,7.544714,9.283658,-7.493956,9.500880,1.997994,-3.041552,0.573578,-2.608701,9.751575,-7.157985,-0.559033,-1.433954,8.034780,5.516914,-8.224622,7.092195,0.255717,8.393323,-1.939161,3.588828,-1.319159,-7.445400,6.189714,-5.244674,4.418601,3.411456,4.843760,6.794092,-9.203158,6.619605,-4.908558,-1.405942,6.650168,1.207321,-1.720720,9.394613,-8.505475,-8.419411,-9.936360,-7.512157,-6.420419,-3.131286,-4.611800,-9.667543,-9.280776,7.873267,-1.617752,-6.240940,9.242636,2.581868,-1.062113,-2.373281,6.955410,-0.599403,-4.844279,6.871481,-9.044634,-9.954446,7.207825,8.630177,-8.373775,-8.241273,-1.223641,1.316885,-6.816416,6.734758,4.657255,5.904073,-5.255316,8.400646,6.293240,4.526800,-8.581729,-0.503847,6.837321,8.537579,-6.198281,-0.423287,-6.663537,-3.054135,9.254116,1.897805,-2.102072,2.289563,-2.418911,4.895668,8.815261,3.437268,-5.750584,2.495043,5.727549,5.405357,4.328131,-3.230864,1.279038,-6.212489,-4.805049,-7.648260,5.618560,3.093030,-5.962634,7.002130,-1.396098,0.036538,-0.028420,-4.643128,5.938707,4.492985,5.999504,-2.603459,-6.213257,9.295489,-8.812061,6.086668,3.316702,6.848639,3.132192,0.927361,7.546012,-7.229636,-0.563149,6.562944,5.257570,-9.839136,-8.278416,2.006011,9.315516,7.708056,-1.179613,4.342018,7.713269,6.506565,8.509555,-1.050064,5.452291,-3.203948,8.934512,3.956124,-8.744035,-7.007410,-8.894009,-9.366929,-9.015356,7.841759,-2.087697,0.979372,1.730378,6.769100,0.801018,2.927620,-4.701997,-3.828573,3.811661,-2.930774,4.687743,-8.380703,4.233291,-2.033878,-1.138114,-6.931291,-2.781457,9.395972,6.909995,8.388092,-7.960589,6.317202,-8.149201,0.391832,-2.027342,-0.233438,-8.121875,0.629799,1.770641,8.165084,-9.483809,-1.988284,1.405478,-5.642988,-1.552076,-4.753654,8.889298,-6.843723,6.069540,1.126035,0.077543,-7.967142,0.986764,0.877570,9.356962,-8.017544,6.266638,-6.345750,-6.273289,7.165366,-5.501419,-2.642632,4.013191,-2.801006,-3.509468,-6.865156,2.095080,6.069623,5.778486,9.524468,1.981303,-6.832982,-8.795566,-1.058327,9.447182,-2.894864,3.188592,4.919870,6.541338,3.798440,-6.439183,5.741811,-7.516984,-3.742973,-9.862596,-3.990059,0.968228,-3.661506,-0.453113,0.778393,-4.069888]], dtype = "float64")#candidate|2475|(1, 784)|const|float64
const_2476 = relay.const([-4,-7,6,-6,1,-2,3,-2,7,1,-4,-2,8,-5,2,-3,3,-7,-3,-4,10,-9,1,1,5,-1,4,-9,9,1,-4,-10,-6,5,-1,-4,-6,-5,-6,-4,10,-4,-1,7,7,-3,-4,-5,1,8,9,-2,6,-2,6,5,-5,10,-2,-8,-7,-1,6,-9,-5,7,-10,-1,-8,9,2,10,5,-5,-7,7,6,4,3,6,-2,-4,-4,7,1,-6,3,10,5,6,-10,7,2,-7,5,-7,-8,9,7,6,3,-10,-5,6,-8,4,-7,4,-4,-6,-8,-8,-3,10,5,7,5,6,-8,2,5,5,-10,-1,2,5,-2,6,-10,-7,-2,2,-2,9,-1,9,10,-7,-3,-3,8,4,-1,-5,-9,-5,-7,-8,7,2,-10,-3,-2,-9,1,-9,1,8,6,-4,-8,-5,8,-5,-3,-5,7,-3,10,-4,-5,-1,8,10,-5,-8,5,-9,9,10,-10,-4,6,-3,-9,-9,-2,3,-2,-4,9,-1,7,7,-3,-9,5,9,1,10,-1,-6,-3,-10,4,-1,6,-7,-1,1,5,-6,-3,2,7,4,4,10,1,-10,4,9,-5,-2,-5,2,-3,8,3,8,3,9,-5,5,-7,-2,6,10,10,-10,7,4,-10,3,-4,5,-6,7,3,7,4,-2,3,-4,6,-9], dtype = "int8")#candidate|2476|(256,)|const|int8
call_2473 = relay.TupleGetItem(func_495_call(relay.reshape(const_2474.astype('float64'), [7, 1, 7]), relay.reshape(const_2475.astype('float64'), [7, 16, 7]), relay.reshape(const_2476.astype('int8'), [256,]), ), 1)
call_2477 = relay.TupleGetItem(func_500_call(relay.reshape(const_2474.astype('float64'), [7, 1, 7]), relay.reshape(const_2475.astype('float64'), [7, 16, 7]), relay.reshape(const_2476.astype('int8'), [256,]), ), 1)
output = relay.Tuple([bop_2459,call_2473,const_2474,const_2475,const_2476,])
output2 = relay.Tuple([bop_2459,call_2477,const_2474,const_2475,const_2476,])
func_2482 = relay.Function([var_2457,var_2458,], output)
mod['func_2482'] = func_2482
mod = relay.transform.InferType()(mod)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mutated_mod.get_global_var('func_2482')
var_2484 = relay.var("var_2484", dtype = "uint8", shape = (16, 6, 12))#candidate|2484|(16, 6, 12)|var|uint8
var_2485 = relay.var("var_2485", dtype = "uint8", shape = (16, 6, 12))#candidate|2485|(16, 6, 12)|var|uint8
call_2483 = func_2482_call(var_2484,var_2485,)
output = call_2483
func_2486 = relay.Function([var_2484,var_2485,], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2688 = relay.var("var_2688", dtype = "float32", shape = (15, 6, 14))#candidate|2688|(15, 6, 14)|var|float32
uop_2689 = relay.cos(var_2688.astype('float32')) # shape=(15, 6, 14)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
var_2698 = relay.var("var_2698", dtype = "int8", shape = (256,))#candidate|2698|(256,)|var|int8
call_2697 = relay.TupleGetItem(func_266_call(relay.reshape(var_2698.astype('int8'), [2, 16, 8]), relay.reshape(var_2698.astype('int8'), [2, 16, 8]), ), 0)
call_2699 = relay.TupleGetItem(func_270_call(relay.reshape(var_2698.astype('int8'), [2, 16, 8]), relay.reshape(var_2698.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([uop_2689,call_2697,var_2698,])
output2 = relay.Tuple([uop_2689,call_2699,var_2698,])
func_2709 = relay.Function([var_2688,var_2698,], output)
mod['func_2709'] = func_2709
mod = relay.transform.InferType()(mod)
var_2710 = relay.var("var_2710", dtype = "float32", shape = (15, 6, 14))#candidate|2710|(15, 6, 14)|var|float32
var_2711 = relay.var("var_2711", dtype = "int8", shape = (256,))#candidate|2711|(256,)|var|int8
output = func_2709(var_2710,var_2711,)
func_2712 = relay.Function([var_2710,var_2711,], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_2714 = relay.TupleGetItem(func_1179_call(), 2)
call_2715 = relay.TupleGetItem(func_1180_call(), 2)
output = call_2714
output2 = call_2715
func_2717 = relay.Function([], output)
mod['func_2717'] = func_2717
mod = relay.transform.InferType()(mod)
output = func_2717()
func_2718 = relay.Function([], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1867_call = mod.get_global_var('func_1867')
func_1868_call = mutated_mod.get_global_var('func_1868')
call_2719 = relay.TupleGetItem(func_1867_call(), 0)
call_2720 = relay.TupleGetItem(func_1868_call(), 0)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_2738 = func_1194_call()
call_2739 = func_1194_call()
func_2438_call = mod.get_global_var('func_2438')
func_2442_call = mutated_mod.get_global_var('func_2442')
call_2742 = relay.TupleGetItem(func_2438_call(relay.reshape(call_2719.astype('int8'), [2, 16, 8]), relay.reshape(call_2738.astype('float64'), [7, 7]), ), 0)
call_2743 = relay.TupleGetItem(func_2442_call(relay.reshape(call_2719.astype('int8'), [2, 16, 8]), relay.reshape(call_2738.astype('float64'), [7, 7]), ), 0)
bop_2745 = relay.logical_and(call_2719.astype('bool'), relay.reshape(call_2742.astype('bool'), relay.shape_of(call_2719))) # shape=(2, 16, 8)
bop_2748 = relay.logical_and(call_2720.astype('bool'), relay.reshape(call_2743.astype('bool'), relay.shape_of(call_2720))) # shape=(2, 16, 8)
output = relay.Tuple([call_2738,bop_2745,])
output2 = relay.Tuple([call_2739,bop_2748,])
func_2756 = relay.Function([], output)
mod['func_2756'] = func_2756
mod = relay.transform.InferType()(mod)
output = func_2756()
func_2757 = relay.Function([], output)
mutated_mod['func_2757'] = func_2757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_2775 = func_1297_call()
call_2776 = func_1297_call()
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
const_2780 = relay.const([8,-8,-5,9,5,-4,10,-8,3,6,7,6,-3,-2,-10,-6,-3,9,1,1,6,8,9,-6,1,10,9,-5,-8,-9,-4,-9,9,6,5,-6,3,7,-2,-8,-7,3,4,-10,-7,-5,4,-1,-3,3,-6,-7,6,3,-8,-3,1,1,-3,2,-10,2,-10,-8,-2,10,-1,7,2,-7,2,3,7,-1,-5,-2,-9,-10,9,-1,-9,7,10,9,-3,-10,8,10,-9,6,3,2,2,8,-10,-2,-2,10,4,-1,8,4,9,1,-5,4,7,-8,8,2,-9,-8,3,2,-1,-6,8,-5,2,-5,-7,2,6,2,-8,-3,-7,7,-3,1,1,3,5,-6,-7,3,1,5,9,-1,-10,-3,7,10,8,4,-7,1,-6,-1,8,-5,3,-4,7,-9,-2,-5,4,-1,-7,4,-3,-5,1,-9,2,-8,6,-5,-9,-8,-7,-10,-8,-3,-5,10,1,-6,-3,-1,-1,-8,-3,7,-9,3,-10,7,3,5,-9,5,-2,2,7,8,4,-2,1,9,8,6,-2,-8,-4,-4,-9,3,-1,5,-8,-4,1,9,9,1,-7,-5,-1,5,-9,-10,-7,2,-10,6,1,10,7,-3,-7,-4,-3,-5,-4,-2,9,-3,-7,-6,1,-4,-1,-6,6,-7,-6,-9,-1,-3,-3,10,-9,10], dtype = "int8")#candidate|2780|(256,)|const|int8
call_2779 = relay.TupleGetItem(func_266_call(relay.reshape(const_2780.astype('int8'), [2, 16, 8]), relay.reshape(const_2780.astype('int8'), [2, 16, 8]), ), 0)
call_2781 = relay.TupleGetItem(func_270_call(relay.reshape(const_2780.astype('int8'), [2, 16, 8]), relay.reshape(const_2780.astype('int8'), [2, 16, 8]), ), 0)
output = relay.Tuple([call_2775,call_2779,const_2780,])
output2 = relay.Tuple([call_2776,call_2781,const_2780,])
func_2804 = relay.Function([], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2805 = func_2804_call()
output = call_2805
func_2806 = relay.Function([], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1835_call = mutated_mod.get_global_var('func_1835')
call_2809 = relay.TupleGetItem(func_1833_call(), 1)
call_2810 = relay.TupleGetItem(func_1835_call(), 1)
const_2811 = relay.const([[-5.088774,2.479158,-5.312873,6.570916,-6.890262,4.306346,8.550178,-6.906871,-7.701326,-6.027483,-1.876245,-9.202396,-5.484571,-4.340688,-9.244692,-0.237136,7.763303,3.962453,3.167271,6.897872,-4.793940,-7.489859,6.572595,0.846241,4.925064,7.401514,4.441883,-9.991910,2.704359,2.814833,-5.156624,-6.238327,6.455812,8.667917,-4.560738,7.717252,7.350361,8.942448,-5.578405,-9.298744,-2.090624,8.159644,3.497247,1.597988,-6.242346,-3.026712,-5.165233,-4.223362,7.768068],[-2.360015,-4.711400,-2.072370,-5.150805,3.354191,-5.336212,-3.277498,0.303659,6.283801,0.668705,4.905430,5.682307,-6.705368,9.835503,-7.492547,-0.148527,-5.182865,-5.320706,-5.285995,-2.297773,2.588561,2.085068,4.218056,9.655931,4.285979,7.324228,-5.468130,-0.435605,-0.872250,-7.390986,-2.558624,-9.735830,1.375895,0.720521,2.837481,1.522652,2.397399,-1.225309,0.693385,6.567313,-1.665199,-5.500105,2.221159,2.165526,-8.864992,-1.420819,-4.613883,2.597543,4.303773],[0.726964,3.896013,0.695557,0.707160,9.637311,8.213542,8.410565,-0.308664,3.542933,-3.984158,5.674271,-9.418846,-6.501516,-0.380814,-8.244028,-8.979360,-8.206414,1.360216,-2.696447,1.767663,2.168479,-8.542540,-7.281704,-0.112844,7.762587,-8.467641,8.984531,-3.591026,3.712383,-5.211612,9.428191,6.920571,-5.476862,0.172125,6.180980,-9.947056,-8.343380,5.367067,4.674194,-8.630064,4.272885,-5.858568,1.439040,-7.243303,8.011803,-9.844255,0.004811,3.662192,-0.424333],[9.473086,7.667400,5.826139,-7.110814,2.571998,-0.821389,-8.972739,-4.442943,9.935073,-3.627427,9.635116,-6.431877,-0.943687,8.307579,1.743989,-6.520390,-4.828947,-4.586956,0.595612,-9.814294,6.843745,-5.391702,-7.331702,-7.351209,-8.012188,7.522081,-4.601591,-7.814035,-9.219110,-2.022804,3.051492,-2.810883,6.766387,0.185427,4.988370,6.894970,9.177370,4.573885,-9.745439,1.098374,-5.646148,-8.951588,-2.160076,8.096039,2.812758,-9.166354,-0.947320,-5.741984,5.306444],[1.271035,3.593860,3.761983,-5.454389,1.944639,-4.596530,-3.249882,4.426343,-4.811958,3.530413,-2.510812,2.021325,0.253100,3.429011,4.049310,-7.034079,-6.352220,5.556862,-6.741734,-8.834203,7.207192,-0.127362,6.957004,-4.512023,5.377931,5.595899,-3.027297,-9.558741,-0.095719,7.313966,-1.476353,-9.102963,-9.480146,5.062897,-1.693019,-3.282774,-9.817624,6.217612,-0.301936,2.192048,8.767431,-9.843266,-3.919322,3.455684,-8.179448,-8.703644,-3.536284,2.203610,5.619419],[1.023786,-1.503282,4.697654,-7.968865,-3.369080,-7.034947,-2.721891,-3.097855,-2.223585,0.761282,-7.024961,-0.868895,9.870070,2.960058,2.042248,5.561455,-9.852912,-3.688692,-6.519081,-8.412754,-6.699304,8.602472,-1.447342,2.085558,-8.113031,0.744838,-7.403226,1.544226,-9.257186,1.732506,4.967944,6.706435,-1.824861,5.126243,-9.822006,-1.732224,6.815912,-3.495311,6.303051,-4.993278,-3.587907,-5.060282,9.830055,-7.428357,5.448028,-4.423571,-8.720441,-7.135662,0.305705],[-1.533367,-8.174918,-4.041636,-0.924453,6.360109,-6.619577,5.294151,6.567815,-0.939832,2.102339,5.596173,-8.702323,-6.825401,7.272360,5.402300,-4.042128,-1.455163,-5.794273,-3.217651,6.958866,8.080770,1.198703,1.645405,-1.270146,-1.511287,-6.354898,-4.178104,7.395176,-4.634940,-3.724964,8.549689,1.279672,2.310371,5.493775,-2.247594,7.192391,-5.432205,-8.656899,-2.048079,6.285797,-8.914155,-3.251317,-9.800214,9.740050,-4.387443,0.347985,0.367731,9.032758,-3.224091],[-7.968506,-3.628372,-3.084209,5.722979,-8.237866,-1.424219,-5.134987,6.221870,7.233625,-7.522842,-2.583537,-3.532945,-9.274311,-4.988635,-2.395996,-4.310433,7.229834,6.663721,-8.553534,-2.705218,-9.253429,-9.587984,-0.711604,8.418803,-5.451035,-3.733672,-4.138157,-5.334459,-2.340119,-6.658917,6.636479,-7.973672,8.879877,8.403202,-8.053650,-0.306470,-6.704092,5.739299,3.543543,-7.381447,-3.032027,-8.614188,-3.296409,8.222392,-1.339170,0.098515,1.262013,-5.373982,5.009590],[-3.787576,-3.558495,-1.162007,7.026922,7.470088,-1.834100,-1.310303,-6.387619,3.742510,4.238985,-3.076283,4.653866,-9.636177,4.429677,7.668442,-9.163331,-6.339522,6.630967,5.481129,-1.899981,3.064578,-1.350773,4.202152,-0.514352,5.994093,9.641902,4.276657,-9.671347,6.325577,1.645983,-2.125073,-7.832611,-6.696972,-4.077688,5.422578,-6.779823,8.374541,-0.416739,6.693737,-4.122849,2.713482,-8.956926,-8.153088,-2.313332,-2.978431,-4.594711,4.671378,0.522655,-0.311500],[7.496678,-1.141070,-1.750656,-0.093608,-1.209244,-9.971453,2.303208,7.286448,-8.531132,-2.776031,6.734343,-8.619059,4.873736,3.095771,5.338980,-8.988254,1.094240,-4.166910,2.094192,-5.566869,6.614720,-6.172619,-6.849527,-9.700714,0.941183,0.990365,-6.993605,-2.159300,6.556910,-2.534508,-3.835598,2.814301,-9.491409,8.670046,1.946572,4.091599,-7.475040,1.411780,3.906796,-4.805915,-5.419118,-3.014941,0.563024,-3.874945,-6.039303,-3.312379,-6.804647,-7.231562,1.893091],[-6.792984,0.700503,7.347430,0.481365,8.563186,4.475087,7.011391,3.165927,-7.335361,-5.741954,-3.312976,8.172736,9.097783,-9.122380,-1.171661,-8.308242,-7.906508,7.440099,3.088014,-5.406922,9.281171,-3.892031,8.533497,-6.388686,4.272513,1.382945,2.564177,-3.398279,-1.007176,-6.059889,-1.525656,9.433647,3.510896,0.376253,1.903380,9.003595,4.076886,8.559967,9.914360,-0.349881,-0.163659,-9.603638,-5.097749,5.258765,-0.909472,-0.334910,-9.195362,6.590002,-1.240671],[-1.166680,6.068515,-5.942403,-4.522264,3.414871,-0.501817,-9.178936,2.248632,-8.598300,1.265316,-8.487956,-2.823486,-9.119209,-6.859269,-4.528201,-2.241801,-6.418914,-5.334035,-9.250534,-0.643176,-2.315238,7.740330,-0.076184,-4.833173,8.782212,-0.057162,3.838014,-8.117976,0.374525,5.199237,4.155595,-1.502633,6.138639,-1.076616,0.475527,-3.368856,3.294592,-2.121686,-1.058279,2.809036,-1.738398,-6.950726,-4.809102,-9.958011,1.321789,7.926579,6.059601,0.490330,-7.188637],[6.544208,-6.939695,2.691156,0.690872,7.022318,-4.903926,9.468339,-1.901518,-4.276684,-0.373897,-2.000226,9.622626,-8.459063,-7.611180,7.147963,-6.891072,-1.856695,-2.077584,-5.818417,-7.280587,-1.023704,-3.624462,7.944908,1.042795,9.595563,-4.876885,1.758210,8.246076,6.457087,7.995055,-6.228820,1.072694,5.149326,5.150414,6.528742,9.575679,-1.245721,-4.101914,7.324271,-4.121993,1.709844,-8.162464,-1.554208,2.085634,4.238837,-2.892630,-1.275443,0.449389,-7.585967],[5.487771,-1.518197,1.980248,6.042611,-5.079436,2.747473,6.728250,-4.375988,0.678270,-9.668026,-9.193015,-0.112190,0.072867,-8.116836,-1.873148,1.532895,-7.493952,-5.010613,9.389907,8.832476,-3.603005,-2.772401,-8.417712,-5.847676,7.132344,-4.571141,-6.479807,-0.247362,0.893475,-3.059140,9.875918,4.661592,6.901966,6.123280,5.987434,0.502985,8.545926,-6.935874,-3.930442,-6.058008,8.009336,1.497424,4.239031,4.023383,-3.465543,-2.861086,-2.417242,7.781534,3.401037],[-3.630906,-5.974657,9.371458,5.985728,1.282579,-5.036767,0.429995,-2.462684,4.029123,-9.911193,-1.327264,1.902881,0.306726,-2.170860,1.489373,3.752228,4.593347,3.655114,-5.335600,-4.365581,-2.033290,8.488379,-7.681919,-0.917628,8.542417,-9.517131,7.159179,-6.620715,8.018407,-7.344642,-2.815742,-5.467602,6.800643,-0.958467,-7.412171,5.825358,6.577560,-6.696398,-5.213531,-7.420538,-6.084412,2.215760,-1.549482,-1.600798,-8.285989,-4.071083,-4.663073,-4.539485,1.260796]], dtype = "float32")#candidate|2811|(15, 49)|const|float32
bop_2812 = relay.equal(call_2809.astype('bool'), const_2811.astype('bool')) # shape=(15, 49)
bop_2815 = relay.equal(call_2810.astype('bool'), const_2811.astype('bool')) # shape=(15, 49)
output = relay.Tuple([bop_2812,])
output2 = relay.Tuple([bop_2815,])
func_2816 = relay.Function([], output)
mod['func_2816'] = func_2816
mod = relay.transform.InferType()(mod)
mutated_mod['func_2816'] = func_2816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2817 = func_2816_call()
output = call_2817
func_2818 = relay.Function([], output)
mutated_mod['func_2818'] = func_2818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1179_call = mod.get_global_var('func_1179')
func_1180_call = mutated_mod.get_global_var('func_1180')
call_2827 = relay.TupleGetItem(func_1179_call(), 2)
call_2828 = relay.TupleGetItem(func_1180_call(), 2)
output = call_2827
output2 = call_2828
func_2833 = relay.Function([], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
output = func_2833()
func_2834 = relay.Function([], output)
mutated_mod['func_2834'] = func_2834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_2931 = func_2188_call()
call_2932 = func_2188_call()
output = call_2931
output2 = call_2932
func_2942 = relay.Function([], output)
mod['func_2942'] = func_2942
mod = relay.transform.InferType()(mod)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mutated_mod.get_global_var('func_2942')
call_2943 = func_2942_call()
output = call_2943
func_2944 = relay.Function([], output)
mutated_mod['func_2944'] = func_2944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_2986 = func_1297_call()
call_2987 = func_1297_call()
var_2998 = relay.var("var_2998", dtype = "int16", shape = (5, 49))#candidate|2998|(5, 49)|var|int16
bop_2999 = relay.logical_or(call_2986.astype('bool'), var_2998.astype('bool')) # shape=(5, 49)
bop_3002 = relay.logical_or(call_2987.astype('bool'), var_2998.astype('bool')) # shape=(5, 49)
output = relay.Tuple([bop_2999,])
output2 = relay.Tuple([bop_3002,])
func_3004 = relay.Function([var_2998,], output)
mod['func_3004'] = func_3004
mod = relay.transform.InferType()(mod)
var_3005 = relay.var("var_3005", dtype = "int16", shape = (5, 49))#candidate|3005|(5, 49)|var|int16
output = func_3004(var_3005)
func_3006 = relay.Function([var_3005], output)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_3049 = relay.TupleGetItem(func_810_call(), 1)
call_3050 = relay.TupleGetItem(func_811_call(), 1)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
const_3053 = relay.const([[3,-6,-9,-8,-5,3,10,5,-6,9,-8,2,8,10,3,10,6,-5,-6,1,-3,7,2,1,8,4,4,5,9,-4,3,-8,-2,3,-9],[-1,1,-8,-1,10,8,5,-9,-3,-4,-1,-1,-6,-6,-10,5,7,-1,-8,-3,-2,-4,4,7,-2,-4,-8,1,-9,4,2,-1,7,4,-4],[6,10,3,1,-1,9,-5,-2,2,5,-1,9,-8,5,2,10,5,7,-4,-8,-3,-2,-5,-9,6,-6,3,-10,-2,2,4,3,4,9,-8],[2,-5,2,-7,-8,-4,-1,-10,7,-5,5,3,-1,7,2,9,9,-8,-4,1,-9,8,2,-10,9,8,-5,1,-7,-5,6,-4,-8,5,9],[-5,10,8,-3,-1,-4,-8,3,4,-10,2,3,-8,-8,10,-8,8,10,10,-6,8,3,8,5,-5,-1,10,2,-2,10,2,10,-6,5,6],[10,-1,9,-8,-1,1,1,-5,-9,7,-10,-9,-6,3,-4,1,2,-6,3,-7,-10,-8,10,-6,-2,-8,10,5,4,-7,4,10,-2,-8,2],[-9,4,3,-1,-2,-2,7,8,7,-9,-10,-4,10,-9,-1,4,5,-7,1,-9,-3,3,-10,2,-5,-4,4,5,4,-4,7,2,5,2,7]], dtype = "int16")#candidate|3053|(7, 35)|const|int16
call_3052 = relay.TupleGetItem(func_3004_call(relay.reshape(const_3053.astype('int16'), [5, 49])), 0)
call_3054 = relay.TupleGetItem(func_3006_call(relay.reshape(const_3053.astype('int16'), [5, 49])), 0)
uop_3056 = relay.acos(const_3053.astype('float32')) # shape=(7, 35)
uop_3060 = relay.asin(uop_3056.astype('float64')) # shape=(7, 35)
func_1342_call = mod.get_global_var('func_1342')
func_1343_call = mutated_mod.get_global_var('func_1343')
call_3062 = relay.TupleGetItem(func_1342_call(), 0)
call_3063 = relay.TupleGetItem(func_1343_call(), 0)
uop_3064 = relay.atanh(uop_3056.astype('float64')) # shape=(7, 35)
func_2285_call = mod.get_global_var('func_2285')
func_2288_call = mutated_mod.get_global_var('func_2288')
const_3080 = relay.const([[-1,4,5,-10,-1,4,-9,6,4,1,5,7,3,-4,5,10,2,-10,1,-7,-7,8,8,3,2,-2,-9,10,5,7,-3,-6],[10,1,-7,6,1,-1,1,-3,-8,-1,1,9,5,-10,4,3,-3,7,-5,6,-6,7,1,-10,6,-5,1,7,-9,-4,2,-9],[4,-6,7,-6,-1,10,-6,10,-10,-9,1,8,-10,3,10,8,5,4,8,-7,-5,-10,5,-1,6,-7,5,-7,8,8,3,3],[-9,-2,-6,-5,-3,-10,-6,-5,-10,-1,8,1,-9,7,4,-2,6,10,-2,-3,-10,5,-3,-8,5,-7,7,-10,-6,8,6,2],[3,-5,7,-2,-8,-2,-9,3,10,-8,5,-5,6,10,-5,-7,-6,-7,-8,-1,8,-9,-6,3,-10,6,3,-8,-7,3,5,-2],[2,-6,-8,9,2,5,10,-5,10,-8,3,2,-8,-1,4,-4,3,-9,8,-7,5,8,1,-6,5,2,3,9,10,4,3,2],[-9,9,8,6,9,1,-9,8,4,-5,5,-8,-2,-9,-2,3,4,9,-7,7,2,5,-6,7,-5,7,-6,7,9,5,8,5],[9,4,-2,3,1,-5,-10,-9,7,-9,4,1,3,-7,3,5,-9,-7,1,4,5,-3,2,-4,-9,-9,8,-6,-5,1,8,-7]], dtype = "int8")#candidate|3080|(8, 32)|const|int8
call_3079 = relay.TupleGetItem(func_2285_call(relay.reshape(const_3080.astype('int8'), [2, 16, 8])), 0)
call_3081 = relay.TupleGetItem(func_2288_call(relay.reshape(const_3080.astype('int8'), [2, 16, 8])), 0)
output = relay.Tuple([call_3049,call_3052,uop_3060,call_3062,uop_3064,call_3079,const_3080,])
output2 = relay.Tuple([call_3050,call_3054,uop_3060,call_3063,uop_3064,call_3081,const_3080,])
func_3089 = relay.Function([], output)
mod['func_3089'] = func_3089
mod = relay.transform.InferType()(mod)
mutated_mod['func_3089'] = func_3089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3089_call = mutated_mod.get_global_var('func_3089')
call_3090 = func_3089_call()
output = call_3090
func_3091 = relay.Function([], output)
mutated_mod['func_3091'] = func_3091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2944_call = mutated_mod.get_global_var('func_2944')
call_3116 = func_2942_call()
call_3117 = func_2942_call()
var_3133 = relay.var("var_3133", dtype = "float64", shape = (784,))#candidate|3133|(784,)|var|float64
bop_3134 = relay.floor_mod(call_3116.astype('float64'), relay.reshape(var_3133.astype('float64'), relay.shape_of(call_3116))) # shape=(784,)
bop_3137 = relay.floor_mod(call_3117.astype('float64'), relay.reshape(var_3133.astype('float64'), relay.shape_of(call_3117))) # shape=(784,)
bop_3138 = relay.maximum(call_3116.astype('uint8'), relay.reshape(bop_3134.astype('uint8'), relay.shape_of(call_3116))) # shape=(784,)
bop_3141 = relay.maximum(call_3117.astype('uint8'), relay.reshape(bop_3137.astype('uint8'), relay.shape_of(call_3117))) # shape=(784,)
func_2942_call = mod.get_global_var('func_2942')
func_2944_call = mutated_mod.get_global_var('func_2944')
call_3150 = func_2942_call()
call_3151 = func_2942_call()
uop_3162 = relay.atan(call_3150.astype('float64')) # shape=(784,)
uop_3164 = relay.atan(call_3151.astype('float64')) # shape=(784,)
output = relay.Tuple([bop_3138,uop_3162,])
output2 = relay.Tuple([bop_3141,uop_3164,])
func_3167 = relay.Function([var_3133,], output)
mod['func_3167'] = func_3167
mod = relay.transform.InferType()(mod)
var_3168 = relay.var("var_3168", dtype = "float64", shape = (784,))#candidate|3168|(784,)|var|float64
output = func_3167(var_3168)
func_3169 = relay.Function([var_3168], output)
mutated_mod['func_3169'] = func_3169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3229 = relay.var("var_3229", dtype = "uint8", shape = (14, 16, 6))#candidate|3229|(14, 16, 6)|var|uint8
var_3230 = relay.var("var_3230", dtype = "uint8", shape = (14, 16, 6))#candidate|3230|(14, 16, 6)|var|uint8
bop_3231 = relay.bitwise_xor(var_3229.astype('uint8'), relay.reshape(var_3230.astype('uint8'), relay.shape_of(var_3229))) # shape=(14, 16, 6)
var_3240 = relay.var("var_3240", dtype = "uint8", shape = (14, 16, 6))#candidate|3240|(14, 16, 6)|var|uint8
bop_3241 = relay.floor_divide(bop_3231.astype('float64'), relay.reshape(var_3240.astype('float64'), relay.shape_of(bop_3231))) # shape=(14, 16, 6)
uop_3250 = relay.log10(bop_3231.astype('float64')) # shape=(14, 16, 6)
func_1935_call = mod.get_global_var('func_1935')
func_1936_call = mutated_mod.get_global_var('func_1936')
call_3253 = relay.TupleGetItem(func_1935_call(), 0)
call_3254 = relay.TupleGetItem(func_1936_call(), 0)
output = relay.Tuple([bop_3241,uop_3250,call_3253,])
output2 = relay.Tuple([bop_3241,uop_3250,call_3254,])
func_3257 = relay.Function([var_3229,var_3230,var_3240,], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
mutated_mod['func_3257'] = func_3257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mutated_mod.get_global_var('func_3257')
var_3259 = relay.var("var_3259", dtype = "uint8", shape = (14, 16, 6))#candidate|3259|(14, 16, 6)|var|uint8
var_3260 = relay.var("var_3260", dtype = "uint8", shape = (14, 16, 6))#candidate|3260|(14, 16, 6)|var|uint8
var_3261 = relay.var("var_3261", dtype = "uint8", shape = (14, 16, 6))#candidate|3261|(14, 16, 6)|var|uint8
call_3258 = func_3257_call(var_3259,var_3260,var_3261,)
output = call_3258
func_3262 = relay.Function([var_3259,var_3260,var_3261,], output)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_3288 = func_1297_call()
call_3289 = func_1297_call()
output = relay.Tuple([call_3288,])
output2 = relay.Tuple([call_3289,])
func_3306 = relay.Function([], output)
mod['func_3306'] = func_3306
mod = relay.transform.InferType()(mod)
output = func_3306()
func_3307 = relay.Function([], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3360 = relay.TupleGetItem(func_3306_call(), 0)
call_3361 = relay.TupleGetItem(func_3307_call(), 0)
uop_3363 = relay.acosh(call_3360.astype('float32')) # shape=(1, 49)
uop_3365 = relay.acosh(call_3361.astype('float32')) # shape=(1, 49)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_3366 = relay.TupleGetItem(func_3089_call(), 6)
call_3367 = relay.TupleGetItem(func_3091_call(), 6)
bop_3372 = relay.not_equal(uop_3363.astype('bool'), relay.reshape(call_3360.astype('bool'), relay.shape_of(uop_3363))) # shape=(1, 49)
bop_3375 = relay.not_equal(uop_3365.astype('bool'), relay.reshape(call_3361.astype('bool'), relay.shape_of(uop_3365))) # shape=(1, 49)
output = relay.Tuple([call_3366,bop_3372,])
output2 = relay.Tuple([call_3367,bop_3375,])
func_3382 = relay.Function([], output)
mod['func_3382'] = func_3382
mod = relay.transform.InferType()(mod)
output = func_3382()
func_3383 = relay.Function([], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_3384 = func_1277_call()
call_3385 = func_1277_call()
func_1468_call = mod.get_global_var('func_1468')
func_1470_call = mutated_mod.get_global_var('func_1470')
const_3396 = relay.const([[6],[-7],[-7],[5],[-6],[-4],[5],[6],[7],[10],[-1],[4],[-3],[-4],[5],[-9],[6],[-1],[6],[-1],[-4],[-3],[-6],[2],[2],[-3],[-1],[10],[-6],[-6],[-10],[3],[2],[-1],[1],[-1],[8],[1],[2],[9],[-7],[10],[-1],[-2],[7],[-9],[3],[-3],[7],[3],[7],[-10],[7],[-10],[7],[6],[-2],[-2],[9],[2],[-1],[2],[-5],[1],[10],[-10],[10],[-3],[3],[10],[3],[-4],[4],[-9],[-1],[8],[-2],[-6],[-9],[8],[4],[8],[8],[-3],[-5],[3],[-8],[-4],[-4],[-5],[4],[6],[8],[-2],[10],[-6],[-10],[8],[-6],[-10],[-5],[8],[1],[-6],[-4],[1],[6],[5],[-1],[1],[-9],[-6],[1],[-8],[9],[7],[-1],[7],[-6],[-9],[6],[10],[7],[-6],[-2],[-10],[3],[-9],[-3],[3],[-5],[6],[-7],[1],[6],[6],[2],[-5],[-9],[9],[-9],[-4],[6],[1],[2],[-1],[-6],[4],[10],[9],[-5],[-9],[10],[6],[-9],[3],[-6],[2],[-10],[-3],[-7],[-9],[1],[-6],[-7],[8],[-9],[9],[-3],[9],[1],[-9],[8],[-9],[4],[-3],[6],[6],[5],[8],[-9],[6],[-5],[7],[1],[9],[-9],[1],[2],[10],[-3],[9],[-6],[7],[-6],[-5],[-3],[-1],[7],[6],[8],[-2],[-6],[6],[4],[-5],[10],[-6],[-6],[-10],[-10],[-5],[6],[-1],[8],[3],[-5],[-2],[-7],[-10],[-6],[-7],[9],[-5],[-6],[7],[-9],[-9],[2],[10],[-9],[3],[7],[6],[6],[6],[-1],[10],[-8],[-6],[9],[-2],[-8],[5],[-3],[8],[-9],[6],[8],[1],[-8],[-10],[4],[10],[7],[8],[-9],[-6],[3],[5],[-8],[10],[5],[3],[-9],[-1],[-5],[-7],[-1],[3],[-3],[5],[3],[-9],[5],[-4],[6],[-10],[1],[-8],[2],[-7],[-10],[-6],[-1],[10],[9],[-8],[-7],[1],[-10],[4],[-1],[8],[-2],[2],[6],[8],[6],[-7],[-2],[3],[-4],[-4],[-7],[-2],[-9],[4],[5],[-4],[10],[8],[7],[-4],[-2],[2],[-9],[5],[-7],[4],[-3],[-2],[7],[4],[9],[6],[4],[-7],[-1],[-8],[3],[-7],[6],[-6],[9],[8],[8],[-4],[-7],[4],[6],[7],[-7],[-5],[-7],[-1],[2],[3],[-10],[-10],[8],[-2],[-7],[1],[5],[-9],[-7],[-3],[3],[5],[8],[2],[-6],[7],[-5],[4],[4],[-2],[-2],[-4],[-8],[10],[-9],[2],[-8],[4],[2],[7],[3],[5],[-2],[3],[-7],[-8],[8],[8],[6],[3],[-10],[9],[-1],[5],[1],[3],[-9],[-3],[-7],[8],[3],[-3],[-1],[-7],[8],[2],[5],[5],[6],[-9],[-5],[10],[9],[4],[2],[-10],[-9],[6],[-3],[-4],[-2],[-6],[-10],[1],[4],[-1],[-10],[-10],[8],[7],[-5],[5],[-1],[3],[-3],[-2],[5],[-10],[-2],[9],[10],[-2],[2],[-1],[3],[10],[-6],[-1],[5],[8],[2],[1],[-1],[-2],[-3],[-8],[2],[-3],[-9],[7],[-4],[-1],[2],[-7],[7],[5],[9],[-7],[-10],[-3],[10],[3],[-1],[-6],[-3],[-4],[10],[9],[-1],[-10],[-6],[-8],[-4],[7],[-5],[-6],[4],[-7],[-8],[-5],[8],[9],[-9],[1],[-7],[-10],[10],[7],[-4],[10],[7],[-2],[-7],[-5],[-4],[7],[-4],[-1],[5],[2],[-4],[6],[-10],[-10],[9],[2],[5],[-6],[7],[-7],[-4],[4],[-1],[10],[8],[9],[-4],[-8],[9],[-1],[-9],[4],[-8],[-6],[4],[7],[-8],[-5],[-5],[-4],[-8],[-5],[-9],[9],[2],[-4],[-2],[4],[-1],[-7],[2],[4],[-5],[8],[7],[-3],[8],[-9],[2],[4],[-7],[-4],[9],[3],[8],[8],[3],[1],[-2],[-10],[-4],[3],[-10],[8],[-10],[7],[-3],[8],[-8],[-3],[-10],[8],[2],[5],[-8],[-6],[-5],[-4],[-1],[8],[-7],[1],[-7],[1],[2],[2],[6],[7],[-9],[3],[-5],[-2],[7],[-9],[10],[-4],[-4],[6],[-5],[-7],[-2],[9],[10],[5],[10],[9],[-8],[10],[-8],[-6],[8],[-7],[6],[-6],[-2],[-8],[-5],[-2],[6],[-6],[-9],[2],[7],[3],[-10],[-6],[-10],[3],[-6]], dtype = "int16")#candidate|3396|(637, 1)|const|int16
call_3395 = relay.TupleGetItem(func_1468_call(relay.reshape(const_3396.astype('int16'), [13, 49])), 0)
call_3397 = relay.TupleGetItem(func_1470_call(relay.reshape(const_3396.astype('int16'), [13, 49])), 0)
uop_3405 = relay.erf(call_3395.astype('float64')) # shape=(13, 49)
uop_3407 = relay.erf(call_3397.astype('float64')) # shape=(13, 49)
var_3409 = relay.var("var_3409", dtype = "bool", shape = (13, 49))#candidate|3409|(13, 49)|var|bool
bop_3410 = relay.floor_mod(call_3395.astype('float64'), relay.reshape(var_3409.astype('float64'), relay.shape_of(call_3395))) # shape=(13, 49)
bop_3413 = relay.floor_mod(call_3397.astype('float64'), relay.reshape(var_3409.astype('float64'), relay.shape_of(call_3397))) # shape=(13, 49)
uop_3414 = relay.acosh(uop_3405.astype('float32')) # shape=(13, 49)
uop_3416 = relay.acosh(uop_3407.astype('float32')) # shape=(13, 49)
output = relay.Tuple([call_3384,const_3396,bop_3410,uop_3414,])
output2 = relay.Tuple([call_3385,const_3396,bop_3413,uop_3416,])
func_3422 = relay.Function([var_3409,], output)
mod['func_3422'] = func_3422
mod = relay.transform.InferType()(mod)
var_3423 = relay.var("var_3423", dtype = "bool", shape = (13, 49))#candidate|3423|(13, 49)|var|bool
output = func_3422(var_3423)
func_3424 = relay.Function([var_3423], output)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_3445 = relay.TupleGetItem(func_1535_call(), 1)
call_3446 = relay.TupleGetItem(func_1536_call(), 1)
uop_3449 = relay.sqrt(call_3445.astype('float64')) # shape=(2, 16, 8)
uop_3451 = relay.sqrt(call_3446.astype('float64')) # shape=(2, 16, 8)
bop_3455 = relay.floor_mod(uop_3449.astype('float64'), relay.reshape(call_3445.astype('float64'), relay.shape_of(uop_3449))) # shape=(2, 16, 8)
bop_3458 = relay.floor_mod(uop_3451.astype('float64'), relay.reshape(call_3446.astype('float64'), relay.shape_of(uop_3451))) # shape=(2, 16, 8)
output = bop_3455
output2 = bop_3458
func_3483 = relay.Function([], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
output = func_3483()
func_3484 = relay.Function([], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2756_call = mod.get_global_var('func_2756')
func_2757_call = mutated_mod.get_global_var('func_2757')
call_3504 = relay.TupleGetItem(func_2756_call(), 1)
call_3505 = relay.TupleGetItem(func_2757_call(), 1)
var_3513 = relay.var("var_3513", dtype = "bool", shape = (2, 16, 8))#candidate|3513|(2, 16, 8)|var|bool
bop_3514 = relay.mod(call_3504.astype('float32'), relay.reshape(var_3513.astype('float32'), relay.shape_of(call_3504))) # shape=(2, 16, 8)
bop_3517 = relay.mod(call_3505.astype('float32'), relay.reshape(var_3513.astype('float32'), relay.shape_of(call_3505))) # shape=(2, 16, 8)
output = relay.Tuple([bop_3514,])
output2 = relay.Tuple([bop_3517,])
func_3525 = relay.Function([var_3513,], output)
mod['func_3525'] = func_3525
mod = relay.transform.InferType()(mod)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3526 = relay.var("var_3526", dtype = "bool", shape = (2, 16, 8))#candidate|3526|(2, 16, 8)|var|bool
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3527 = func_3525_call(var_3526)
output = call_3527
func_3528 = relay.Function([var_3526], output)
mutated_mod['func_3528'] = func_3528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3542 = func_1194_call()
call_3543 = func_1194_call()
uop_3551 = relay.acos(call_3542.astype('float64')) # shape=(1, 49)
uop_3553 = relay.acos(call_3543.astype('float64')) # shape=(1, 49)
output = relay.Tuple([uop_3551,])
output2 = relay.Tuple([uop_3553,])
func_3556 = relay.Function([], output)
mod['func_3556'] = func_3556
mod = relay.transform.InferType()(mod)
output = func_3556()
func_3557 = relay.Function([], output)
mutated_mod['func_3557'] = func_3557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3561 = func_1194_call()
call_3562 = func_1194_call()
func_2285_call = mod.get_global_var('func_2285')
func_2288_call = mutated_mod.get_global_var('func_2288')
var_3569 = relay.var("var_3569", dtype = "int8", shape = (256,))#candidate|3569|(256,)|var|int8
call_3568 = relay.TupleGetItem(func_2285_call(relay.reshape(var_3569.astype('int8'), [2, 16, 8])), 0)
call_3570 = relay.TupleGetItem(func_2288_call(relay.reshape(var_3569.astype('int8'), [2, 16, 8])), 0)
output = relay.Tuple([call_3561,call_3568,var_3569,])
output2 = relay.Tuple([call_3562,call_3570,var_3569,])
func_3573 = relay.Function([var_3569,], output)
mod['func_3573'] = func_3573
mod = relay.transform.InferType()(mod)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3574 = relay.var("var_3574", dtype = "int8", shape = (256,))#candidate|3574|(256,)|var|int8
func_3573_call = mutated_mod.get_global_var('func_3573')
call_3575 = func_3573_call(var_3574)
output = call_3575
func_3576 = relay.Function([var_3574], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3615 = func_1194_call()
call_3616 = func_1194_call()
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
call_3619 = relay.TupleGetItem(func_1630_call(), 0)
call_3620 = relay.TupleGetItem(func_1632_call(), 0)
uop_3621 = relay.cosh(call_3619.astype('float32')) # shape=(784,)
uop_3623 = relay.cosh(call_3620.astype('float32')) # shape=(784,)
output = relay.Tuple([call_3615,uop_3621,])
output2 = relay.Tuple([call_3616,uop_3623,])
func_3628 = relay.Function([], output)
mod['func_3628'] = func_3628
mod = relay.transform.InferType()(mod)
mutated_mod['func_3628'] = func_3628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3628_call = mutated_mod.get_global_var('func_3628')
call_3629 = func_3628_call()
output = call_3629
func_3630 = relay.Function([], output)
mutated_mod['func_3630'] = func_3630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_3631 = relay.TupleGetItem(func_1535_call(), 0)
call_3632 = relay.TupleGetItem(func_1536_call(), 0)
output = call_3631
output2 = call_3632
func_3652 = relay.Function([], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mutated_mod.get_global_var('func_3652')
call_3653 = func_3652_call()
output = call_3653
func_3654 = relay.Function([], output)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3675 = relay.const([[[-8.832911,-5.343947,-2.644708,-9.665490,-5.860975,0.953833,1.655759,5.226343,-6.532796,-3.272091,-5.785574,-6.745050,-0.709117,0.222237],[4.839567,9.196320,3.797497,-9.627494,2.128669,-6.371848,-9.576857,3.175384,-3.255041,9.168342,-6.836973,8.353636,6.073390,-8.225472],[-7.002030,-7.010798,4.926683,-0.152449,8.534105,-0.808506,1.090813,9.352993,-2.722405,-7.462319,7.456476,1.693062,1.549318,9.892375],[-9.305941,-9.077254,9.090944,-2.707203,4.919869,-2.226218,-5.969478,3.445439,8.851668,1.120261,5.008170,-6.623204,-4.472789,5.382117],[5.500764,-7.384903,-7.494367,-0.641067,6.054306,-0.494092,6.607980,-7.178529,2.438116,-2.602683,-1.007099,-0.324834,5.186298,-3.421218],[-1.928072,1.401987,-4.605416,-6.415527,-9.520209,6.851410,2.621208,-5.137270,-8.575785,-7.374682,5.738287,-3.959642,2.051841,1.480483],[9.050523,-1.219682,6.291843,7.234659,7.400114,2.886892,7.429148,2.898711,-5.974826,5.209275,-8.428027,6.199273,-9.602806,1.115559],[-9.992747,-2.838434,9.558241,-4.132661,-8.104816,-2.215582,1.569607,-7.281434,-9.316194,6.117698,0.024973,9.047188,8.460209,8.380615],[-6.329529,4.232784,-8.191724,5.087941,-2.841613,-1.953621,7.372541,-5.519045,-6.440257,2.195892,-7.121956,-8.193745,-7.613064,-0.805865],[-7.086635,7.413890,-4.574555,6.211314,0.116613,-5.855991,-2.745647,-6.748961,-7.343031,-2.816810,7.296125,4.075715,1.461759,-3.796430]],[[-1.601949,0.377044,-1.699582,1.091944,8.646010,7.420593,9.499627,-6.246989,2.491304,-0.338159,2.470014,-9.941135,-0.681274,-9.266599],[8.245130,0.739228,5.206437,-4.906946,-7.284924,8.484693,8.143031,-3.385635,-5.978544,-4.851936,1.466096,5.086503,-4.317217,-2.016439],[-4.410542,-1.480313,7.087720,9.201108,-0.112579,-8.466573,6.085112,-3.035316,6.277036,-2.922014,2.845735,1.618726,9.860634,7.896097],[-7.726799,-0.053458,-1.372637,7.686876,3.021401,8.455265,-6.919811,-1.785129,8.021846,-1.121081,4.204374,-9.711088,-3.274501,3.953390],[1.478356,3.220166,-7.516238,-4.550379,-3.474560,-5.412341,-4.552306,9.196991,-6.517710,-5.842283,-9.907217,-2.056826,2.450415,-1.609008],[-8.007226,5.520596,-1.068194,7.605909,7.858422,1.351010,5.255192,8.177051,5.484201,4.394739,-1.431392,2.370113,-4.885793,-9.627135],[0.338434,7.510482,-7.868685,9.421055,7.806008,-6.477163,-0.782501,-1.104090,7.504868,6.867734,-5.995794,-8.898022,-3.021345,9.756430],[2.669747,8.644867,-2.256490,-5.602676,1.080887,4.547316,9.740392,5.749504,-3.536437,2.256574,4.073788,-3.431988,1.463623,-0.428736],[9.109860,5.192595,4.661897,9.450977,8.247782,6.697449,3.794307,-0.188202,-4.498414,-3.861759,3.310277,-5.368258,-7.719702,1.255421],[-2.233696,0.226066,9.872959,-0.440400,2.328159,6.518639,-3.835716,-9.085896,1.733241,-3.475319,-0.291018,-4.476311,-8.831581,0.078161]],[[-2.201873,7.197249,-2.327897,-6.702584,5.200351,1.014767,-4.263563,9.829292,8.788126,-1.513766,-5.856285,-1.246168,0.314191,4.781928],[9.635355,-3.939744,1.269787,-6.068118,-5.876928,6.277326,-6.797904,5.000432,4.005024,7.109429,-3.707562,-0.385592,-9.288683,5.338214],[6.321005,2.983169,5.430371,-1.537279,7.860287,5.360222,5.504169,2.852411,7.791254,-4.005635,-5.413521,7.145981,8.581014,9.109239],[-0.438952,7.583972,5.605220,-4.007536,-5.101629,1.387181,-4.296582,-5.595212,-4.650131,5.264117,-4.163521,-9.773115,5.705973,1.159448],[2.594160,-3.665133,6.617858,-5.316498,-1.023902,-7.605808,9.295548,4.747358,-8.012856,-5.210688,6.347437,-5.617232,8.549679,-3.586522],[-3.804666,-3.359850,6.287610,8.730843,-2.573249,6.823080,-8.998320,-2.062589,-3.854156,9.312198,5.753764,1.689551,3.937401,-4.829131],[-1.409891,1.835561,-6.413682,9.444893,-2.806390,-1.288471,-7.064632,-3.663503,7.175755,-8.486926,-0.381060,-7.798579,7.791535,-0.008769],[3.755710,-5.163036,-1.318952,-5.519349,2.357193,-5.663797,-1.847825,-0.225066,-4.201224,-3.522372,6.614000,6.765549,-5.202816,0.514388],[5.334709,5.302665,-9.496338,5.334306,1.787719,0.200847,2.714075,7.104997,0.957411,-6.151803,-5.317417,1.815259,7.426835,3.874903],[0.733936,-8.307553,-2.577013,7.834121,8.363522,3.155904,1.539886,8.886330,-4.660638,-2.534679,-0.379867,-8.713011,3.284010,6.638537]],[[-0.157092,0.988972,5.327014,3.498789,5.597788,5.224875,3.582049,0.495090,2.571077,8.617327,3.294077,7.318498,-2.183365,-9.228779],[-8.909755,-8.098577,-6.409680,-1.941206,5.434498,-2.362850,-1.199831,4.965982,-7.034310,-5.586168,2.253885,-7.542638,-9.714641,3.304807],[5.065197,-9.909716,5.700527,-0.354344,-1.562865,0.655319,-1.863192,-1.611408,5.133233,-9.533374,2.703531,-3.373633,-0.773182,6.836781],[-2.507742,2.837043,0.436433,8.783028,3.164114,-5.057348,-7.423755,5.225177,1.699707,-9.297917,-8.157052,2.044080,7.920320,-1.187649],[-6.839961,-4.144038,-4.078856,-3.134314,-6.217063,-0.698277,4.718198,7.300190,7.149236,2.483552,1.686821,6.088810,-0.630673,5.321973],[-9.774604,-2.746124,2.899557,-1.011729,-8.923322,9.892140,-9.018639,-4.549925,0.334169,-9.511786,9.929589,7.613978,9.964204,-8.821017],[7.159388,8.091437,2.585733,-2.845791,5.567925,5.130815,8.191447,-1.727694,-5.169841,-6.475857,-9.395599,-4.792920,-3.332285,-2.144898],[0.434867,1.139550,-8.182063,-2.633368,-1.161940,5.153356,2.622502,-5.462835,6.985866,1.941190,1.116869,3.808735,-7.445914,6.160456],[-9.161300,-6.368984,-6.430832,-3.501470,-6.541225,9.502803,-5.097874,-0.095387,0.029476,-7.251539,6.990245,-2.353466,4.328416,2.945949],[-8.788526,-2.793307,-0.691592,-0.155749,4.389993,-5.717964,8.715892,-8.283708,-9.102735,-0.024548,2.248857,-7.456507,-4.329455,-2.172769]],[[0.148782,1.110372,-1.142025,-3.419134,-9.677229,-5.320992,9.897020,3.066886,-9.601640,-6.484484,9.848567,-0.735609,-9.148459,1.779971],[8.936960,-5.200819,1.932563,-3.690649,-4.900221,3.223612,0.780797,-3.703421,-4.654788,-3.526179,2.693543,4.400549,4.813339,-9.127943],[-3.867653,-8.038611,4.848821,-0.281153,-2.195622,-1.676627,2.835229,0.198270,3.853335,-1.877260,3.077736,-3.722716,4.295439,4.977698],[5.480461,-6.927796,-8.935523,-4.022396,-8.112100,-7.422427,4.337222,7.843493,-8.682983,-8.074472,-3.554829,2.886782,5.288138,-8.552068],[9.635947,8.698948,7.526444,8.034351,-6.028676,5.076650,-6.418236,0.297142,7.247954,4.659780,8.352165,1.641303,-3.693555,1.068671],[6.304773,-4.637262,-6.078397,7.651459,-6.875229,6.723985,-4.189803,4.684849,-6.067738,5.539354,6.303076,-2.217202,-7.997360,-6.853619],[-2.007616,-1.561197,4.782752,8.880751,-6.322404,-3.465888,9.873866,2.316832,-3.421938,-4.278946,3.822604,-6.327843,-1.234533,1.673715],[2.203946,2.161465,1.197267,6.391609,6.895592,-3.357937,6.386991,-4.102803,-5.056061,3.985624,-2.269812,-6.419175,7.926202,-1.606955],[0.226314,-5.695531,9.310506,-7.603963,0.265356,6.095151,-2.052339,-1.195594,-1.829698,-1.419167,-0.975265,-5.153985,-5.485067,-5.784118],[9.385229,6.094344,-1.281407,0.624058,-4.510447,-3.801496,7.592294,-8.336051,-0.297783,-3.900084,5.148723,2.994694,-4.581069,-1.163742]],[[-9.506872,-2.031906,5.752669,-3.020244,0.760283,1.559849,-3.249169,6.637106,4.623506,1.733543,-2.043465,3.922868,6.368422,9.403724],[-3.568855,-5.160398,-2.942235,-5.546372,-5.153439,1.178542,1.675497,4.776587,-8.515587,3.424202,-4.117276,8.215127,-3.529254,-2.905951],[-2.133294,6.274656,8.428592,0.708852,-6.661415,3.777177,6.562177,-6.688640,8.061032,-1.039545,-2.148818,-9.777369,-8.518777,8.814483],[-1.170416,-7.224650,7.802407,8.170976,0.154753,-1.023207,-5.776931,7.837493,-5.354714,-6.453958,5.765081,-1.615660,0.688621,2.305027],[-9.519471,-0.408724,-2.479281,8.069914,1.849975,9.645463,-9.414955,-1.333691,6.153673,-6.151010,-1.797759,-1.232508,6.785512,7.243047],[6.495398,-7.366610,-2.829243,-6.926566,-2.130201,-8.624746,-2.414637,-2.145132,-9.371502,2.093914,-0.819974,6.219451,3.707418,2.980218],[-6.564371,7.946294,8.845665,-2.043384,-8.859822,-4.080494,-8.077326,-6.804596,-2.093666,0.628191,-1.124077,7.401985,-0.293789,2.053108],[-8.378017,-2.502676,6.887245,-4.550535,-3.327992,-6.439434,7.911203,0.811581,-7.509637,-6.614374,-3.915152,6.782176,-7.231610,-6.442397],[1.004789,-5.076314,-8.723206,0.693441,-0.176664,-1.619242,-1.075081,-6.849077,3.045045,5.299781,2.639529,7.057840,-7.291111,-9.007105],[9.403639,5.712305,-6.043865,-0.311288,2.050108,7.909138,9.385801,-2.865238,-7.041766,8.651598,-8.872573,2.977191,-7.779540,9.643660]],[[1.829610,6.917159,-3.908411,-5.469304,6.077160,4.345187,-4.834345,-0.471377,-7.779913,3.609028,0.786800,3.528045,6.344058,-8.866911],[0.786947,-2.290919,5.543940,8.857065,6.218541,3.346728,-4.603229,8.005698,2.904560,-6.131665,-7.836986,-4.098302,-6.695981,0.261031],[0.366357,8.577844,3.022464,1.816706,7.401456,5.701001,-3.389012,7.692756,4.725222,9.999351,0.113452,9.884959,5.426072,5.926115],[9.867718,-7.691318,-6.478538,1.227673,9.711115,2.777115,0.111144,7.191502,5.710809,-3.769677,7.754817,7.215899,6.453999,-1.144368],[-4.267497,-9.710120,-5.462367,-2.494809,-5.539011,4.731444,7.388427,-9.675575,5.632966,-0.073518,9.157415,3.237866,0.522418,7.224239],[6.097369,4.540022,3.285841,4.398233,-3.484133,9.312856,6.127506,2.045097,0.978326,3.577952,1.045198,9.443933,-2.692103,-6.308877],[1.937434,-8.940598,0.517362,-9.300924,7.781621,8.956625,-9.865082,-7.478684,8.056586,-7.061299,-1.667464,6.989910,2.564942,-9.750036],[8.032148,0.132025,-7.767109,-3.899454,-3.098080,-6.169328,-8.112512,6.016553,-0.654948,7.651027,3.667541,-2.542420,4.478104,-0.027712],[-7.835804,8.692203,9.131861,-3.162832,-6.865252,3.341725,-9.964023,8.628737,1.444943,8.909889,-4.171162,2.446848,-1.958770,4.822039],[4.903846,-6.261811,-0.804854,-4.573108,8.226758,6.370334,1.755194,-8.311540,7.591920,-1.611961,-6.367322,-5.710123,-4.783243,6.049747]],[[-4.829011,2.942594,-6.052616,0.315726,5.068480,-0.100494,5.880593,-8.166967,-9.104206,-7.990876,-3.688435,4.259485,-5.227718,-4.861446],[3.790637,9.101142,-2.487460,-2.508623,-5.432711,-2.266054,9.730436,-7.823321,-6.720526,7.443309,2.912953,-5.167362,-0.580753,4.169754],[-4.834619,-5.758758,8.649535,3.461316,-3.057392,-6.138811,0.633195,-3.659779,3.362384,2.543613,3.911961,-4.809809,-4.542886,3.550408],[-3.359159,3.280641,-1.358645,1.250385,4.516238,3.354091,-9.732292,9.887615,-6.521883,-1.932896,-8.233654,-9.472173,-1.590472,1.118563],[4.853387,5.446716,7.602553,-4.848689,-2.526211,6.277773,-1.439433,8.275775,-2.530199,4.892649,-2.789074,-0.082047,9.147881,9.642513],[9.799202,5.901089,7.711415,4.206404,9.732018,-8.011933,6.321290,-5.535409,-1.081984,-4.451146,-3.862027,-9.358004,3.968290,8.110686],[0.784678,-8.608653,4.317359,1.283737,-8.301008,3.254340,7.877166,-9.663354,1.918485,-0.911441,-2.554501,-8.802303,-0.906160,-2.987036],[0.065507,6.474943,-6.156335,-5.674674,0.514017,-5.046334,-2.331480,0.808528,4.453542,-7.624792,-2.617646,-2.166207,3.608141,7.577592],[2.943695,5.531488,-5.831387,7.628130,-1.046249,-3.701157,-0.391120,2.754746,6.348689,-2.437505,-8.106415,2.370795,1.062776,-5.391956],[3.241901,2.984612,0.147127,6.483452,1.732657,-3.477406,-8.574953,8.360264,1.931281,3.290756,3.990976,6.948519,-2.643548,9.983057]],[[-9.468388,-3.594272,6.504895,4.190173,-3.830068,-6.454485,1.990412,6.199727,-6.059359,-8.302266,-9.317855,-2.097799,2.842491,9.082821],[-0.682993,-2.553071,-5.990380,-1.849030,-3.644119,-0.050112,9.830722,-4.648120,5.754190,-6.350535,-3.776071,5.802810,8.069856,-1.644589],[2.798574,-5.480937,-6.302089,2.210965,-8.784148,0.275127,3.647084,7.584655,-4.547305,2.191525,-7.116939,0.697834,4.542064,6.428563],[-3.026552,2.678778,4.168821,-6.333739,-8.102535,1.134521,7.326493,6.081895,-8.316311,1.777195,-8.924604,2.456169,1.449837,1.398427],[2.463083,9.290276,7.437629,-3.182772,-7.723510,-7.192656,-3.077384,9.250196,-8.880795,-5.265534,-2.518054,-5.225558,-9.970193,8.744154],[-5.582830,-1.469625,5.506748,-5.136825,3.972221,5.776965,5.536541,-6.071004,3.904287,7.663217,6.425390,8.019029,-9.182264,-3.696869],[7.667133,-7.550776,2.666973,6.806550,-0.247318,8.124720,-0.452179,0.693870,-5.108376,0.315930,-0.439823,-5.495583,-2.611044,0.488202],[9.452946,-3.266380,5.689349,-6.913027,6.135783,4.931925,7.696036,9.656366,5.876459,6.790994,5.135015,-3.456441,-0.695362,8.692847],[-4.446800,8.306297,-1.632440,-8.772917,-3.451762,-6.190916,-6.418488,1.570694,-7.138774,-1.237979,0.419286,-0.371394,-4.686525,-7.704769],[6.214358,-3.945112,-8.705624,1.167384,7.977389,-6.324191,-5.194231,9.684310,-3.767785,1.124829,-9.871619,8.624806,1.757535,-2.246347]],[[-0.007190,-4.953208,-0.531186,4.787636,-7.984162,4.709364,-0.095423,0.538528,7.490734,8.685874,2.055487,-3.433177,-8.240965,-3.059586],[4.908423,-1.041330,7.095027,7.397325,2.473784,8.080150,5.657779,5.839570,-8.661403,8.951652,3.944760,-0.352986,9.177826,-3.041104],[-3.874652,1.090511,1.401935,3.157083,8.817232,-5.557786,8.193130,-8.207990,3.724931,-8.659784,7.597602,0.665575,-0.143357,4.831513],[-6.855128,-4.557921,-5.628236,0.806762,6.557305,0.245611,5.253210,2.054035,6.532496,-9.168338,6.641452,-3.266223,-0.315044,9.711735],[6.214338,-6.298957,4.785770,-6.146807,-9.703847,8.031720,-1.099979,-9.600208,6.189512,-4.193199,-5.377306,9.870279,4.821731,-1.608174],[7.384656,4.702703,-5.963940,-1.287667,-4.656710,-7.891453,-9.257784,-2.090813,-3.988019,2.537037,-8.383688,-5.624119,-0.322189,-1.654129],[7.811143,4.830972,-6.836426,-4.239664,-5.242004,-0.847072,4.886303,3.681676,3.667213,6.833956,2.518077,5.498313,-9.596477,-3.015478],[5.972778,6.992107,1.853038,1.178500,2.462348,-4.941806,-5.194374,-3.511705,4.612190,-8.980610,9.134270,-2.481296,-3.968331,-1.120767],[4.606685,8.691959,0.883392,-2.921012,8.015251,-7.539530,5.631169,-4.590255,-2.960849,3.060916,-2.085500,-6.821877,3.314687,-3.106929],[-4.552489,4.874205,7.757459,-5.613021,2.380194,9.535604,-9.152705,4.264439,2.999016,6.361293,-6.136520,0.511912,-1.205990,-1.535479]],[[8.155690,7.880005,4.105322,4.932555,2.622660,5.907777,-1.166317,9.038952,-8.241661,-4.376485,-8.397750,5.577084,7.453804,-6.687718],[-5.444032,0.378654,4.181880,8.496862,0.798191,-7.136014,-8.142438,4.967134,-9.395375,7.926731,3.263055,-3.416595,-4.261490,-9.234485],[7.148224,2.444930,3.322477,7.039434,-8.381078,3.430424,6.797058,-5.028136,2.360912,4.287996,4.481298,5.012843,-5.418913,-1.871600],[5.961625,-4.554797,5.015130,0.919002,3.409041,-0.593137,2.926990,4.238701,6.546255,6.456667,-2.994139,-5.755897,3.335465,-8.957222],[-6.943470,-4.637242,-8.206193,-0.152910,7.074138,-3.216497,-1.477693,-9.260699,7.281572,-8.828280,4.244136,8.580960,-6.577425,9.385049],[9.784311,-3.054727,1.584384,-6.451357,4.995010,4.597121,-4.058761,4.767644,-0.333060,-8.495225,-5.345301,-7.532235,-3.905536,8.597270],[-3.354146,5.167271,-1.631957,3.820750,-6.567446,1.133022,-8.286677,-0.690169,8.377235,7.421084,8.806610,9.330021,-8.473003,-3.556944],[5.623876,-3.624916,-9.347559,-0.474868,4.966848,-9.584309,1.608799,7.811853,7.921499,-4.648522,-8.444580,-5.865284,5.893178,7.795522],[-3.697943,1.000852,0.809140,6.432297,9.325018,-1.467968,6.243245,-4.360967,0.244227,-4.190387,-6.747632,3.742997,-5.129012,-5.305607],[6.477808,8.927909,9.171405,3.596907,-0.233803,7.143053,-7.579396,-6.473426,-6.203380,-8.008380,1.081518,-3.110634,4.769313,-9.759535]]], dtype = "float32")#candidate|3675|(11, 10, 14)|const|float32
uop_3676 = relay.acosh(const_3675.astype('float32')) # shape=(11, 10, 14)
output = uop_3676
output2 = uop_3676
func_3685 = relay.Function([], output)
mod['func_3685'] = func_3685
mod = relay.transform.InferType()(mod)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mutated_mod.get_global_var('func_3685')
call_3686 = func_3685_call()
output = call_3686
func_3687 = relay.Function([], output)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_3714 = func_1297_call()
call_3715 = func_1297_call()
var_3716 = relay.var("var_3716", dtype = "int16", shape = (12, 49))#candidate|3716|(12, 49)|var|int16
bop_3717 = relay.divide(call_3714.astype('float32'), var_3716.astype('float32')) # shape=(12, 49)
bop_3720 = relay.divide(call_3715.astype('float32'), var_3716.astype('float32')) # shape=(12, 49)
var_3722 = relay.var("var_3722", dtype = "float32", shape = (12, 49))#candidate|3722|(12, 49)|var|float32
bop_3723 = relay.logical_and(bop_3717.astype('bool'), relay.reshape(var_3722.astype('bool'), relay.shape_of(bop_3717))) # shape=(12, 49)
bop_3726 = relay.logical_and(bop_3720.astype('bool'), relay.reshape(var_3722.astype('bool'), relay.shape_of(bop_3720))) # shape=(12, 49)
bop_3727 = relay.logical_or(var_3716.astype('bool'), relay.reshape(var_3722.astype('bool'), relay.shape_of(var_3716))) # shape=(12, 49)
bop_3736 = relay.right_shift(bop_3717.astype('uint32'), relay.reshape(bop_3727.astype('uint32'), relay.shape_of(bop_3717))) # shape=(12, 49)
bop_3739 = relay.right_shift(bop_3720.astype('uint32'), relay.reshape(bop_3727.astype('uint32'), relay.shape_of(bop_3720))) # shape=(12, 49)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_3741 = relay.TupleGetItem(func_3089_call(), 3)
call_3742 = relay.TupleGetItem(func_3091_call(), 3)
uop_3746 = relay.asin(bop_3727.astype('float64')) # shape=(12, 49)
var_3748 = relay.var("var_3748", dtype = "bool", shape = (12, 49))#candidate|3748|(12, 49)|var|bool
bop_3749 = relay.floor_divide(bop_3727.astype('float32'), relay.reshape(var_3748.astype('float32'), relay.shape_of(bop_3727))) # shape=(12, 49)
func_2382_call = mod.get_global_var('func_2382')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_3754 = relay.TupleGetItem(func_2382_call(), 0)
call_3755 = relay.TupleGetItem(func_2384_call(), 0)
output = relay.Tuple([bop_3723,bop_3736,call_3741,uop_3746,bop_3749,call_3754,])
output2 = relay.Tuple([bop_3726,bop_3739,call_3742,uop_3746,bop_3749,call_3755,])
func_3762 = relay.Function([var_3716,var_3722,var_3748,], output)
mod['func_3762'] = func_3762
mod = relay.transform.InferType()(mod)
var_3763 = relay.var("var_3763", dtype = "int16", shape = (12, 49))#candidate|3763|(12, 49)|var|int16
var_3764 = relay.var("var_3764", dtype = "float32", shape = (12, 49))#candidate|3764|(12, 49)|var|float32
var_3765 = relay.var("var_3765", dtype = "bool", shape = (12, 49))#candidate|3765|(12, 49)|var|bool
output = func_3762(var_3763,var_3764,var_3765,)
func_3766 = relay.Function([var_3763,var_3764,var_3765,], output)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3850 = relay.const([[[-6.457222],[2.406779],[0.023808]]], dtype = "float32")#candidate|3850|(1, 3, 1)|const|float32
var_3851 = relay.var("var_3851", dtype = "float32", shape = (1, 3, 12))#candidate|3851|(1, 3, 12)|var|float32
bop_3852 = relay.floor_mod(const_3850.astype('float32'), var_3851.astype('float32')) # shape=(1, 3, 12)
uop_3874 = relay.asin(var_3851.astype('float64')) # shape=(1, 3, 12)
func_1535_call = mod.get_global_var('func_1535')
func_1536_call = mutated_mod.get_global_var('func_1536')
call_3878 = relay.TupleGetItem(func_1535_call(), 2)
call_3879 = relay.TupleGetItem(func_1536_call(), 2)
output = relay.Tuple([bop_3852,uop_3874,call_3878,])
output2 = relay.Tuple([bop_3852,uop_3874,call_3879,])
func_3885 = relay.Function([var_3851,], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
var_3886 = relay.var("var_3886", dtype = "float32", shape = (1, 3, 12))#candidate|3886|(1, 3, 12)|var|float32
output = func_3885(var_3886)
func_3887 = relay.Function([var_3886], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2756_call = mod.get_global_var('func_2756')
func_2757_call = mutated_mod.get_global_var('func_2757')
call_3895 = relay.TupleGetItem(func_2756_call(), 0)
call_3896 = relay.TupleGetItem(func_2757_call(), 0)
func_1705_call = mod.get_global_var('func_1705')
func_1707_call = mutated_mod.get_global_var('func_1707')
call_3897 = relay.TupleGetItem(func_1705_call(relay.reshape(call_3895.astype('float64'), [49, 1])), 5)
call_3898 = relay.TupleGetItem(func_1707_call(relay.reshape(call_3895.astype('float64'), [49, 1])), 5)
output = relay.Tuple([call_3895,call_3897,])
output2 = relay.Tuple([call_3896,call_3898,])
func_3899 = relay.Function([], output)
mod['func_3899'] = func_3899
mod = relay.transform.InferType()(mod)
output = func_3899()
func_3900 = relay.Function([], output)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1447_call = mod.get_global_var('func_1447')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_3923 = relay.TupleGetItem(func_1447_call(), 0)
call_3924 = relay.TupleGetItem(func_1448_call(), 0)
output = relay.Tuple([call_3923,])
output2 = relay.Tuple([call_3924,])
func_3928 = relay.Function([], output)
mod['func_3928'] = func_3928
mod = relay.transform.InferType()(mod)
mutated_mod['func_3928'] = func_3928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mutated_mod.get_global_var('func_3928')
call_3929 = func_3928_call()
output = call_3929
func_3930 = relay.Function([], output)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_3960 = relay.TupleGetItem(func_3928_call(), 0)
call_3961 = relay.TupleGetItem(func_3930_call(), 0)
output = call_3960
output2 = call_3961
func_3968 = relay.Function([], output)
mod['func_3968'] = func_3968
mod = relay.transform.InferType()(mod)
output = func_3968()
func_3969 = relay.Function([], output)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mod.get_global_var('func_3556')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_3975 = relay.TupleGetItem(func_3556_call(), 0)
call_3976 = relay.TupleGetItem(func_3557_call(), 0)
func_2942_call = mod.get_global_var('func_2942')
func_2944_call = mutated_mod.get_global_var('func_2944')
call_3982 = func_2942_call()
call_3983 = func_2942_call()
output = relay.Tuple([call_3975,call_3982,])
output2 = relay.Tuple([call_3976,call_3983,])
func_3984 = relay.Function([], output)
mod['func_3984'] = func_3984
mod = relay.transform.InferType()(mod)
mutated_mod['func_3984'] = func_3984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3984_call = mutated_mod.get_global_var('func_3984')
call_3985 = func_3984_call()
output = call_3985
func_3986 = relay.Function([], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_3996 = func_2717_call()
call_3997 = func_2717_call()
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4011 = relay.TupleGetItem(func_3382_call(), 0)
call_4012 = relay.TupleGetItem(func_3383_call(), 0)
output = relay.Tuple([call_3996,call_4011,])
output2 = relay.Tuple([call_3997,call_4012,])
func_4018 = relay.Function([], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
output = func_4018()
func_4019 = relay.Function([], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4031 = relay.var("var_4031", dtype = "float64", shape = (6, 4, 9))#candidate|4031|(6, 4, 9)|var|float64
uop_4032 = relay.cosh(var_4031.astype('float64')) # shape=(6, 4, 9)
func_3422_call = mod.get_global_var('func_3422')
func_3424_call = mutated_mod.get_global_var('func_3424')
var_4035 = relay.var("var_4035", dtype = "bool", shape = (637,))#candidate|4035|(637,)|var|bool
call_4034 = relay.TupleGetItem(func_3422_call(relay.reshape(var_4035.astype('bool'), [13, 49])), 0)
call_4036 = relay.TupleGetItem(func_3424_call(relay.reshape(var_4035.astype('bool'), [13, 49])), 0)
func_266_call = mod.get_global_var('func_266')
func_270_call = mutated_mod.get_global_var('func_270')
const_4046 = relay.const([[4,-9,-8,-8,-8,-2,4,9,5,10,-4,-10,2,9,-9,-2,3,-6,10,9,-5,-2,-8,10,-2,5,-1,2,6,-5,-10,-6,8,3,-9,7,-3,2,-9,5,5,9,4,-3,1,-3,-7,-6,-4,3,1,-5,1,8,-4,-3,-2,6,4,-6,7,7,-10,-9,4,-6,-5,1,-10,6,-1,-2,-3,-1,-6,-3,-6,-9,5,-9,-1,6,-5,2,6,-9,8,2,-8,8,9,8,-2,-10,-6,-6,1,3,-8,1,-4,3,-10,3,7,3,-3,-1,-10,1,-9,5,8,-6,-4,10,-5,-9,-7,4,-4,-4,-10,1,6,-7,7,-5,-1,-1,7,-2,4,1,4,9,-2,4,-8,3,-4,-8,-4,8,-3,-10,-10,-5,6,8,-1,9,-10,7,-7,-1,-5,-4,10,-6,-10,-5,1,-5,-8,-8,-9,-4,1,6,-4,-10,4,9,7,8,2,-6,-5,-1,-3,2,7,3,-7,-5,-6,3,-9,3,-8,1,-6,2,-9,4,3,6,-4,-5,7,-4,-4,-2,-9,-7,8,6,9,5,2,-2,9,-4,-8,-4,10,-8,6,7,5,-2,-4,-8,8,-2,7,5,5,-7,-10,-8,8,5,7,9,6,6,-2,4,10,-10,2,-10,-7,-10,7,-7,5,9,4,6,1,-1,-10,3]], dtype = "int8")#candidate|4046|(1, 256)|const|int8
call_4045 = relay.TupleGetItem(func_266_call(relay.reshape(const_4046.astype('int8'), [2, 16, 8]), relay.reshape(const_4046.astype('int8'), [2, 16, 8]), ), 0)
call_4047 = relay.TupleGetItem(func_270_call(relay.reshape(const_4046.astype('int8'), [2, 16, 8]), relay.reshape(const_4046.astype('int8'), [2, 16, 8]), ), 0)
uop_4048 = relay.sigmoid(uop_4032.astype('float32')) # shape=(6, 4, 9)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
const_4055 = relay.const([4.646456,1.657161,-8.449696,8.232027,-8.353093,0.903859,-1.306345,8.484907,-5.803378,0.588125,7.937387,-4.439829,-5.707529,5.202150,7.311513,6.963111,-4.812721,-5.550552,-5.385871,3.299684,5.509098,8.006675,-6.841342,-9.057623,6.906043,-2.352294,1.214700,-6.257768,7.582367,-6.715472,7.351546,8.655780,-1.064564,-3.772297,4.121609,3.866593], dtype = "float32")#candidate|4055|(36,)|const|float32
call_4054 = relay.TupleGetItem(func_3885_call(relay.reshape(const_4055.astype('float32'), [1, 3, 12])), 1)
call_4056 = relay.TupleGetItem(func_3887_call(relay.reshape(const_4055.astype('float32'), [1, 3, 12])), 1)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_4057 = relay.TupleGetItem(func_3928_call(), 0)
call_4058 = relay.TupleGetItem(func_3930_call(), 0)
uop_4060 = relay.rsqrt(uop_4032.astype('float64')) # shape=(6, 4, 9)
var_4067 = relay.var("var_4067", dtype = "bool", shape = (637,))#candidate|4067|(637,)|var|bool
bop_4068 = relay.power(var_4035.astype('float32'), relay.reshape(var_4067.astype('float32'), relay.shape_of(var_4035))) # shape=(637,)
func_2942_call = mod.get_global_var('func_2942')
func_2944_call = mutated_mod.get_global_var('func_2944')
call_4071 = func_2942_call()
call_4072 = func_2942_call()
output = relay.Tuple([call_4034,call_4045,const_4046,uop_4048,call_4054,const_4055,call_4057,uop_4060,bop_4068,call_4071,])
output2 = relay.Tuple([call_4036,call_4047,const_4046,uop_4048,call_4056,const_4055,call_4058,uop_4060,bop_4068,call_4072,])
func_4075 = relay.Function([var_4031,var_4035,var_4067,], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mutated_mod.get_global_var('func_4075')
var_4077 = relay.var("var_4077", dtype = "float64", shape = (6, 4, 9))#candidate|4077|(6, 4, 9)|var|float64
var_4078 = relay.var("var_4078", dtype = "bool", shape = (637,))#candidate|4078|(637,)|var|bool
var_4079 = relay.var("var_4079", dtype = "bool", shape = (637,))#candidate|4079|(637,)|var|bool
call_4076 = func_4075_call(var_4077,var_4078,var_4079,)
output = call_4076
func_4080 = relay.Function([var_4077,var_4078,var_4079,], output)
mutated_mod['func_4080'] = func_4080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_4100 = relay.TupleGetItem(func_3089_call(), 5)
call_4101 = relay.TupleGetItem(func_3091_call(), 5)
output = call_4100
output2 = call_4101
func_4107 = relay.Function([], output)
mod['func_4107'] = func_4107
mod = relay.transform.InferType()(mod)
output = func_4107()
func_4108 = relay.Function([], output)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3968_call = mod.get_global_var('func_3968')
func_3969_call = mutated_mod.get_global_var('func_3969')
call_4153 = func_3968_call()
call_4154 = func_3968_call()
var_4155 = relay.var("var_4155", dtype = "bool", shape = (9, 15, 12))#candidate|4155|(9, 15, 12)|var|bool
bop_4156 = relay.greater(call_4153.astype('bool'), relay.reshape(var_4155.astype('bool'), relay.shape_of(call_4153))) # shape=(9, 15, 12)
bop_4159 = relay.greater(call_4154.astype('bool'), relay.reshape(var_4155.astype('bool'), relay.shape_of(call_4154))) # shape=(9, 15, 12)
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4191 = relay.TupleGetItem(func_3382_call(), 0)
call_4192 = relay.TupleGetItem(func_3383_call(), 0)
var_4194 = relay.var("var_4194", dtype = "int8", shape = (8, 32))#candidate|4194|(8, 32)|var|int8
bop_4195 = relay.bitwise_or(call_4191.astype('int32'), relay.reshape(var_4194.astype('int32'), relay.shape_of(call_4191))) # shape=(8, 32)
bop_4198 = relay.bitwise_or(call_4192.astype('int32'), relay.reshape(var_4194.astype('int32'), relay.shape_of(call_4192))) # shape=(8, 32)
func_3556_call = mod.get_global_var('func_3556')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_4199 = relay.TupleGetItem(func_3556_call(), 0)
call_4200 = relay.TupleGetItem(func_3557_call(), 0)
func_752_call = mod.get_global_var('func_752')
func_755_call = mutated_mod.get_global_var('func_755')
const_4210 = relay.const([[-7.575999,-9.957480,3.763674,-9.377037,0.733018,7.597616,9.104335,8.458157,-9.581752,0.482538,-9.473935,-4.683568,1.613206,6.459036,-1.666572,-3.953485,0.744443,-0.808479,-1.446701,7.578654,7.505863,7.949992,-0.989157,3.662260,-4.383667,-1.789468,-7.980178,5.095684,-2.741469,4.891436,-2.412952,-3.238453,6.059733,-3.599623,0.557367,8.715210,-5.918915,5.171386,4.987516,8.679061,2.493957,-9.102384,2.974943,-8.508587,-1.481552,-0.814562,5.135699,-9.739256,8.552626,-3.623389,-7.165174,5.705016,-0.324221,9.921608,3.039500,-8.259343,-8.139917,8.383066,-0.887588,-8.336475,0.268712,7.500312,7.698568,0.048945,-3.265143,0.757612,0.417626,6.217545,-4.480563,1.784228,-2.620148,-6.424577,-7.316118,-8.166829,2.007447,3.248775,5.591774,6.466809,-1.492483,6.941166,-3.502553,7.372422,-7.993318,-1.807746,6.751638,-4.834337,7.468444,8.194916,-8.896866,-0.320286,-4.770414,4.436984,8.009359,-9.056104,3.066293,-0.585167,-6.648743,-5.387831,2.877548,6.094308,-2.892446,-2.120641,4.239579,-3.047928,7.488198,4.293767,-9.318898,5.849385,-2.916781,-6.471506,2.532002,8.826598,-5.452093,-5.202668,-8.873000,8.821896,-1.771489,-3.557020,7.430155,6.481596,-2.450057,-0.445678,0.222736,-5.930505,2.427217,-5.438643,8.791353,-7.712877,7.065185,9.712700,0.498442,-1.273111,-3.519760,7.898324,6.945725,-9.710623,6.440872,8.932554,-5.548593,-5.598080,-3.857816,5.147992,7.141112,8.914700,-8.343716,-1.225268,2.463485,0.706138,-5.293711,0.506956,-2.447921,6.815248,-3.123301,-6.612629,-0.962655,-3.838380,0.667184,-2.877310,-3.413474,1.192057,3.455446,-1.277477,1.954787,-3.355139,-7.741806,6.755983,-2.558885,-5.862519,8.785623,5.963243,-8.519202,-2.137756,3.756917,-2.476962,3.630580,7.096633,9.092827,7.458154,8.032419,-7.761968,-9.563113,-4.224712,-4.235097,7.752494,-4.792586,7.446781,2.305013,-6.734808,9.568353,-2.330376,5.512072,8.689123,3.794790,6.520969,-9.149478,-5.224139,5.479732,2.250483,0.715646,-4.983728,-3.769429,-3.405885,5.575964,-6.371478,1.464201,7.737713,-8.010071,-4.426045,-0.134582,8.901670,9.917205,7.860258,-6.347883,9.467862,7.920147,2.921613,5.152577,8.274735,2.543743,5.980133,-3.811974,9.841089,3.980192,-6.926977,1.867061,0.642708,7.619703,6.738816,0.519996,-6.751618,-1.981877,-9.293521,9.650948,5.038267,-6.696950,-7.225582,8.112099,3.601222,0.694478,-5.548159,9.747039,8.187916,-3.903267,6.429512,4.217078,4.114314,1.215359,-4.857094,9.511852,9.400765,-3.982529,9.641968,2.709662,6.582293,-2.095701,1.803645,0.975929,1.611866,-9.327668,7.829546,-9.110474,6.712127,7.189881,-8.308321,3.940646,-0.386999,8.063069,-8.144122,-3.777314,3.198087,8.949845,8.851103,-0.268102,0.631407,7.370395,-9.604897,3.322934,4.262916,0.443844,1.749033,-2.672012,1.431317,7.505025,-4.397360,3.661899,7.716994,5.870633,3.075245,6.850659,-8.191693,0.930440,-6.853384,-6.411006,5.925733,8.164260,0.214543,-3.248511,-8.141154,-0.867487,-6.035822,-5.246490,-4.566867,-0.020219,5.635249,-2.035328,-7.707935,6.743206,-8.538706,-2.422129,7.620605,3.867760,3.933981,2.481393,3.197741,2.439189,0.695275,3.813058,4.036228,3.306999,8.100580,-1.381736,-1.545855,-9.288835,5.383599,-6.919711,9.755243,5.969757,-8.133096,-0.155870,-2.984419,8.452614,9.826285,-6.217146,-8.962522,-8.219242,3.955594,4.569870,-1.827020,0.404272,-7.183567,-5.015100,5.377994,8.399262,5.416291,7.292358,0.410135,2.094372,-9.924544,5.939927,-3.817336,-7.960803,-1.864640,7.586987,-9.888645,-3.062034,-0.694316,-3.604359,7.773117,9.989801,5.153192,-9.294817,4.336659,0.143000,8.783638,-6.247066,-6.292942,-8.558239,-5.668699,6.351016,-6.446441,-4.658855,3.135857,-3.318040,-5.786498,1.081815,-0.912751,-9.439065,4.964813,3.181311,-8.161710,-0.300517,6.052806,2.502652,-8.593940,-7.833207,-6.337360,-5.376968,4.790152,-7.451831,-9.739089,7.911891,-3.687516,5.160423,8.401802,-7.241825,-5.746849,5.074199,0.980390,-2.464266,5.775280,-1.372638,8.595710,1.403247,0.600729,-8.999145,7.902876,5.806355,2.452019,-8.548499,4.042181,-1.415656,4.053966,0.239809,-9.749810,2.749729,-7.481666,9.353420,-8.664752,-5.907393,4.822240,7.519907,-2.164917,-3.571439,7.698656,9.308457,7.813930,4.355373,6.824813,-4.751341,-1.882013,7.875323,4.512627,-8.435898,-2.848291,-0.392892,5.859671,-3.966841,-0.877696,3.714053,6.860241,-2.554408,-3.394570,-0.224825,8.344535,6.607188,-1.267894,-8.900206,6.264144,2.898144,-2.134429,7.691435,6.840265,8.855085,-2.750589,-9.072010,8.597336,9.624685,-0.846993,1.497999,-5.197099,6.255845,-1.404633,-4.276572,-6.029362,6.210380,8.470252,-6.477454,-1.411859,-3.808458,-2.199284,8.055205,-8.492012,2.405659,-1.822737,-5.827748,0.369903,5.140057,2.364183,0.882513,3.255923,-2.713475,-3.296994,0.603479,2.565796,0.821679,-8.995153,3.091524,9.686149,3.818571,-5.260203,-6.776465,6.507486,6.582730,-1.711528,-6.094866,8.484946,-0.483751,0.900969,-9.134747,-3.727477,-8.312724,-8.066052,6.917577,-1.000433,2.739716,-1.012321,-6.953117,6.000459,-7.065959,7.209677,9.961599,-6.653320,-1.444251,-2.366582,-5.311582,-7.817062,3.786692,-1.170441,2.806001,-9.223162,8.817084,-9.369950,-5.859440,7.085682,6.140426,-1.947533,6.245724,2.049227,-6.561453,3.342629,-7.239425,-1.704444,-9.084657,-9.854840,9.144881,5.172555,8.389349,0.219990,3.955845,-6.773127,3.721514,-2.400084,3.471746,-9.419981,0.830238,-5.186478,3.922194,6.613928,-0.351796,1.774927,-0.190866,-7.481133,5.452131,-1.394760,0.257889,9.246127,0.242976,0.665037,3.305697,-4.818395,1.491994,-4.162390,7.883958,8.846188,7.033030,-6.004027,9.367247,3.085292,-8.300042,6.555114,4.448631,-4.326316,-8.472397,6.523871,5.548550,-1.368378,8.151405,3.343967,3.688542,-3.802187,-0.199906,-9.299105,1.906410,-1.920022,1.962832,6.125255,-6.000686,1.952838,-3.446504,9.546054,7.377956,-8.699338,-7.349118,4.017390,-9.232157,6.851871,-4.757462,-8.500056,2.825584,6.796251,2.921524,3.437274,-2.355107,-9.268669,-1.030851,-8.435335,-0.907363,-5.681453,7.407175,-1.207361,0.802418,-9.905089,0.364021,5.871344,5.630896,-1.213758,-7.770690,-7.265168,-9.724775,8.920442,-2.150318,-5.401511,-9.849116,-4.404319,8.256573,-8.646519,-5.283485,-8.010776,3.310535,-3.594386,0.741365,9.106242,0.008295,-5.679109,0.718601,-3.690835,-8.101278,-2.985740,5.064138,-3.046941,7.942438,8.126575,8.052783,8.852524,4.927542,8.121115,-8.860822,-5.948597,-7.875344,-3.373081,-0.320765,-4.724251,9.788446,-4.664711,6.746570,6.729943,4.189588,-8.056137,2.415003,4.345444,1.273200,9.140821,-7.848234,5.568907,-4.222570,-5.997028,-9.917228,5.008526,9.969130,-2.637930,-3.694211,4.090761,-1.233039,-7.670739,5.535610,6.431311,-3.761181,9.135254,-8.675118,-2.443769,-4.445992,-8.910159,6.526335,-8.096126,2.005871,7.023486,1.290855,3.254868,-2.061054,9.293083,6.148433,-1.582535,3.081951,-0.965675,2.875363,-9.897134,0.578547,-3.472856,7.072354,0.323795,-0.798170,-5.427085,6.092280,6.247060,-5.992557,-5.223447,8.561752,7.844835,-3.290477,9.961828,-5.825847,5.418779,-7.241064,-1.910193,-5.022845,-7.503548,-2.640317,-4.300431,-7.601706,2.776835,-4.974107,-2.536013,9.656200,-7.957311,-8.129925,9.193945,-7.528254,-7.258149,-5.979250,-0.836171,8.481873,0.042495,1.230178,7.312748,-8.500779,-2.052834,-4.947292,-8.099064,1.626647,7.401917,-1.775445,-5.508546,7.496268,1.367756,-9.903945,8.180658,-5.096041,3.520476,-0.233707,2.898673,-1.221507,-9.127237,5.567430,-1.045721,3.023169,-5.184840,-8.818384,-1.055711,6.711522,7.743339,4.934474,9.552406,-3.384788,-1.598144,-3.728752,6.880437,4.963795,2.841010,-2.212431,2.865611,-6.624132,-1.126152,0.974694,-1.399600,-5.824193,-9.188395,-4.342269,-5.119103,-6.544695,-0.895091,-7.762692,4.192722,6.439888,-9.607236]], dtype = "float64")#candidate|4210|(1, 784)|const|float64
call_4209 = relay.TupleGetItem(func_752_call(relay.reshape(call_4199.astype('float64'), [49,]), relay.reshape(const_4210.astype('float64'), [2, 392]), ), 5)
call_4211 = relay.TupleGetItem(func_755_call(relay.reshape(call_4199.astype('float64'), [49,]), relay.reshape(const_4210.astype('float64'), [2, 392]), ), 5)
func_3525_call = mod.get_global_var('func_3525')
func_3528_call = mutated_mod.get_global_var('func_3528')
call_4213 = relay.TupleGetItem(func_3525_call(relay.reshape(var_4194.astype('bool'), [2, 16, 8])), 0)
call_4214 = relay.TupleGetItem(func_3528_call(relay.reshape(var_4194.astype('bool'), [2, 16, 8])), 0)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
const_4217 = relay.const([4,-2,-10,3,4,-1,3,10,2,-6,5,4,9,-1,1,10,-3,-6,-9,-3,2,-3,9,9,-9,-10,4,2,-10,-10,3,6,4,-1,10,8,-9,5,2,9,-10,6,3,-9,-3,3,1,-3,9,8,1,1,4,-6,-3,-10,4,-9,5,1,7,3,-3,-2,4,4,-5,3,-5,8,4,3,3,6,-9,6,-2,1,7,2,3,-5,2,-10,7,-7,7,2,1,9,-6,6,-4,-5,-2,10,-4,-6,5,5,5,4,3,3,5,-6,5,-10,10,-9,4,-10,6,-7,5,2,6,-3,3,3,-5,10,-10,8,8,4,9,-2,-1,6,1,-7,6,-3,3,-1,-2,8,-1,-2,6,-3,-10,-9,-4,-9,3,-1,4,-1,10,7,3,6,2,5,3,-4,-6,8,-8,-4,-2,3,9,-5,6,-10,7,-4,-3,-8,8,-3,-5,-4,-7,5,3,5,1,-8,-2,-7,6,10,8,-8,-10,-3,-2,-7,5,-6,9,10,-3,-9,9,-6,5,6,3,-4,-7,-7,3,-7,7,9,-9,10,-9,9,-6,5,-10,-7,-7,6,-9,2,-9,2,-6,-6,10,-7,4,9,10,1,6,-2,2,-6,3,3,-9,-1,-8,10,-2,8,-10], dtype = "int16")#candidate|4217|(245,)|const|int16
call_4216 = relay.TupleGetItem(func_3004_call(relay.reshape(const_4217.astype('int16'), [5, 49])), 0)
call_4218 = relay.TupleGetItem(func_3006_call(relay.reshape(const_4217.astype('int16'), [5, 49])), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1763_call = mutated_mod.get_global_var('func_1763')
call_4222 = func_1762_call()
call_4223 = func_1762_call()
uop_4224 = relay.exp(const_4217.astype('float64')) # shape=(245,)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_4233 = relay.TupleGetItem(func_2816_call(), 0)
call_4234 = relay.TupleGetItem(func_2818_call(), 0)
uop_4235 = relay.cos(uop_4224.astype('float64')) # shape=(245,)
func_1720_call = mod.get_global_var('func_1720')
func_1722_call = mutated_mod.get_global_var('func_1722')
call_4240 = relay.TupleGetItem(func_1720_call(), 0)
call_4241 = relay.TupleGetItem(func_1722_call(), 0)
output = relay.Tuple([bop_4156,bop_4195,call_4199,call_4209,const_4210,call_4213,call_4216,call_4222,call_4233,uop_4235,call_4240,])
output2 = relay.Tuple([bop_4159,bop_4198,call_4200,call_4211,const_4210,call_4214,call_4218,call_4223,call_4234,uop_4235,call_4241,])
func_4243 = relay.Function([var_4155,var_4194,], output)
mod['func_4243'] = func_4243
mod = relay.transform.InferType()(mod)
var_4244 = relay.var("var_4244", dtype = "bool", shape = (9, 15, 12))#candidate|4244|(9, 15, 12)|var|bool
var_4245 = relay.var("var_4245", dtype = "int8", shape = (8, 32))#candidate|4245|(8, 32)|var|int8
output = func_4243(var_4244,var_4245,)
func_4246 = relay.Function([var_4244,var_4245,], output)
mutated_mod['func_4246'] = func_4246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4277 = relay.TupleGetItem(func_2804_call(), 0)
call_4278 = relay.TupleGetItem(func_2806_call(), 0)
output = relay.Tuple([call_4277,])
output2 = relay.Tuple([call_4278,])
func_4281 = relay.Function([], output)
mod['func_4281'] = func_4281
mod = relay.transform.InferType()(mod)
output = func_4281()
func_4282 = relay.Function([], output)
mutated_mod['func_4282'] = func_4282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_4283 = func_3652_call()
call_4284 = func_3652_call()
output = call_4283
output2 = call_4284
func_4318 = relay.Function([], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4319 = func_4318_call()
output = call_4319
func_4320 = relay.Function([], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_4446 = relay.TupleGetItem(func_3928_call(), 0)
call_4447 = relay.TupleGetItem(func_3930_call(), 0)
uop_4451 = relay.rsqrt(call_4446.astype('float32')) # shape=(9, 15, 12)
uop_4453 = relay.rsqrt(call_4447.astype('float32')) # shape=(9, 15, 12)
output = uop_4451
output2 = uop_4453
func_4454 = relay.Function([], output)
mod['func_4454'] = func_4454
mod = relay.transform.InferType()(mod)
mutated_mod['func_4454'] = func_4454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mutated_mod.get_global_var('func_4454')
call_4455 = func_4454_call()
output = call_4455
func_4456 = relay.Function([], output)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2834_call = mutated_mod.get_global_var('func_2834')
call_4465 = func_2833_call()
call_4466 = func_2833_call()
func_2709_call = mod.get_global_var('func_2709')
func_2712_call = mutated_mod.get_global_var('func_2712')
var_4468 = relay.var("var_4468", dtype = "float32", shape = (1260,))#candidate|4468|(1260,)|var|float32
var_4469 = relay.var("var_4469", dtype = "int8", shape = (256,))#candidate|4469|(256,)|var|int8
call_4467 = relay.TupleGetItem(func_2709_call(relay.reshape(var_4468.astype('float32'), [15, 6, 14]), relay.reshape(var_4469.astype('int8'), [256,]), ), 2)
call_4470 = relay.TupleGetItem(func_2712_call(relay.reshape(var_4468.astype('float32'), [15, 6, 14]), relay.reshape(var_4469.astype('int8'), [256,]), ), 2)
func_3628_call = mod.get_global_var('func_3628')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_4508 = relay.TupleGetItem(func_3628_call(), 1)
call_4509 = relay.TupleGetItem(func_3630_call(), 1)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
var_4512 = relay.var("var_4512", dtype = "float64", shape = (49,))#candidate|4512|(49,)|var|float64
call_4511 = relay.TupleGetItem(func_965_call(relay.reshape(var_4512.astype('float64'), [49,]), relay.reshape(call_4508.astype('float64'), [784,]), ), 4)
call_4513 = relay.TupleGetItem(func_968_call(relay.reshape(var_4512.astype('float64'), [49,]), relay.reshape(call_4508.astype('float64'), [784,]), ), 4)
func_2833_call = mod.get_global_var('func_2833')
func_2834_call = mutated_mod.get_global_var('func_2834')
call_4515 = func_2833_call()
call_4516 = func_2833_call()
var_4532 = relay.var("var_4532", dtype = "float64", shape = (49,))#candidate|4532|(49,)|var|float64
bop_4533 = relay.left_shift(var_4512.astype('int32'), relay.reshape(var_4532.astype('int32'), relay.shape_of(var_4512))) # shape=(49,)
func_3573_call = mod.get_global_var('func_3573')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4550 = relay.TupleGetItem(func_3573_call(relay.reshape(var_4469.astype('int8'), [256,])), 0)
call_4551 = relay.TupleGetItem(func_3576_call(relay.reshape(var_4469.astype('int8'), [256,])), 0)
output = relay.Tuple([call_4465,call_4467,var_4468,var_4469,call_4508,call_4511,call_4515,bop_4533,call_4550,])
output2 = relay.Tuple([call_4466,call_4470,var_4468,var_4469,call_4509,call_4513,call_4516,bop_4533,call_4551,])
func_4552 = relay.Function([var_4468,var_4469,var_4512,var_4532,], output)
mod['func_4552'] = func_4552
mod = relay.transform.InferType()(mod)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mutated_mod.get_global_var('func_4552')
var_4554 = relay.var("var_4554", dtype = "float32", shape = (1260,))#candidate|4554|(1260,)|var|float32
var_4555 = relay.var("var_4555", dtype = "int8", shape = (256,))#candidate|4555|(256,)|var|int8
var_4556 = relay.var("var_4556", dtype = "float64", shape = (49,))#candidate|4556|(49,)|var|float64
var_4557 = relay.var("var_4557", dtype = "float64", shape = (49,))#candidate|4557|(49,)|var|float64
call_4553 = func_4552_call(var_4554,var_4555,var_4556,var_4557,)
output = call_4553
func_4558 = relay.Function([var_4554,var_4555,var_4556,var_4557,], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_4637 = func_1277_call()
call_4638 = func_1277_call()
func_1277_call = mod.get_global_var('func_1277')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_4641 = func_1277_call()
call_4642 = func_1277_call()
output = relay.Tuple([call_4637,call_4641,])
output2 = relay.Tuple([call_4638,call_4642,])
func_4654 = relay.Function([], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
output = func_4654()
func_4655 = relay.Function([], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_4686 = func_3652_call()
call_4687 = func_3652_call()
func_1705_call = mod.get_global_var('func_1705')
func_1707_call = mutated_mod.get_global_var('func_1707')
var_4693 = relay.var("var_4693", dtype = "float64", shape = (49,))#candidate|4693|(49,)|var|float64
call_4692 = relay.TupleGetItem(func_1705_call(relay.reshape(var_4693.astype('float64'), [49, 1])), 1)
call_4694 = relay.TupleGetItem(func_1707_call(relay.reshape(var_4693.astype('float64'), [49, 1])), 1)
bop_4704 = relay.greater(call_4692.astype('bool'), relay.reshape(call_4686.astype('bool'), relay.shape_of(call_4692))) # shape=(7, 16, 7)
bop_4707 = relay.greater(call_4694.astype('bool'), relay.reshape(call_4687.astype('bool'), relay.shape_of(call_4694))) # shape=(7, 16, 7)
uop_4737 = relay.log2(var_4693.astype('float64')) # shape=(49,)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_4745 = relay.TupleGetItem(func_2816_call(), 0)
call_4746 = relay.TupleGetItem(func_2818_call(), 0)
var_4748 = relay.var("var_4748", dtype = "float64", shape = (49,))#candidate|4748|(49,)|var|float64
bop_4749 = relay.logical_or(uop_4737.astype('bool'), relay.reshape(var_4748.astype('bool'), relay.shape_of(uop_4737))) # shape=(49,)
bop_4754 = relay.multiply(uop_4737.astype('uint32'), relay.reshape(bop_4749.astype('uint32'), relay.shape_of(uop_4737))) # shape=(49,)
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4764 = relay.TupleGetItem(func_3382_call(), 0)
call_4765 = relay.TupleGetItem(func_3383_call(), 0)
bop_4766 = relay.less_equal(bop_4749.astype('bool'), relay.reshape(uop_4737.astype('bool'), relay.shape_of(bop_4749))) # shape=(49,)
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4770 = relay.TupleGetItem(func_3382_call(), 0)
call_4771 = relay.TupleGetItem(func_3383_call(), 0)
uop_4783 = relay.sqrt(bop_4749.astype('float32')) # shape=(49,)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_4789 = func_2717_call()
call_4790 = func_2717_call()
uop_4799 = relay.acos(uop_4783.astype('float32')) # shape=(49,)
output = relay.Tuple([bop_4704,call_4745,bop_4754,call_4764,bop_4766,call_4770,call_4789,uop_4799,])
output2 = relay.Tuple([bop_4707,call_4746,bop_4754,call_4765,bop_4766,call_4771,call_4790,uop_4799,])
func_4813 = relay.Function([var_4693,var_4748,], output)
mod['func_4813'] = func_4813
mod = relay.transform.InferType()(mod)
mutated_mod['func_4813'] = func_4813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4813_call = mutated_mod.get_global_var('func_4813')
var_4815 = relay.var("var_4815", dtype = "float64", shape = (49,))#candidate|4815|(49,)|var|float64
var_4816 = relay.var("var_4816", dtype = "float64", shape = (49,))#candidate|4816|(49,)|var|float64
call_4814 = func_4813_call(var_4815,var_4816,)
output = call_4814
func_4817 = relay.Function([var_4815,var_4816,], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mod.get_global_var('func_3685')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4916 = func_3685_call()
call_4917 = func_3685_call()
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
call_4924 = relay.TupleGetItem(func_1630_call(), 0)
call_4925 = relay.TupleGetItem(func_1632_call(), 0)
func_3628_call = mod.get_global_var('func_3628')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_4934 = relay.TupleGetItem(func_3628_call(), 1)
call_4935 = relay.TupleGetItem(func_3630_call(), 1)
output = relay.Tuple([call_4916,call_4924,call_4934,])
output2 = relay.Tuple([call_4917,call_4925,call_4935,])
func_4941 = relay.Function([], output)
mod['func_4941'] = func_4941
mod = relay.transform.InferType()(mod)
output = func_4941()
func_4942 = relay.Function([], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_4952 = func_3483_call()
call_4953 = func_3483_call()
output = call_4952
output2 = call_4953
func_4968 = relay.Function([], output)
mod['func_4968'] = func_4968
mod = relay.transform.InferType()(mod)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4968_call = mutated_mod.get_global_var('func_4968')
call_4969 = func_4968_call()
output = call_4969
func_4970 = relay.Function([], output)
mutated_mod['func_4970'] = func_4970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_811_call = mutated_mod.get_global_var('func_811')
call_4971 = relay.TupleGetItem(func_810_call(), 1)
call_4972 = relay.TupleGetItem(func_811_call(), 1)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_4978 = relay.TupleGetItem(func_3306_call(), 0)
call_4979 = relay.TupleGetItem(func_3307_call(), 0)
var_4987 = relay.var("var_4987", dtype = "int16", shape = (3, 49))#candidate|4987|(3, 49)|var|int16
bop_4988 = relay.floor_mod(call_4978.astype('float32'), var_4987.astype('float32')) # shape=(3, 49)
bop_4991 = relay.floor_mod(call_4979.astype('float32'), var_4987.astype('float32')) # shape=(3, 49)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
var_4999 = relay.var("var_4999", dtype = "float64", shape = (784, 1))#candidate|4999|(784, 1)|var|float64
call_4998 = relay.TupleGetItem(func_1229_call(relay.reshape(var_4999.astype('float64'), [784,])), 4)
call_5000 = relay.TupleGetItem(func_1231_call(relay.reshape(var_4999.astype('float64'), [784,])), 4)
bop_5004 = relay.equal(var_4999.astype('bool'), call_4978.astype('bool')) # shape=(784, 49)
bop_5007 = relay.equal(var_4999.astype('bool'), call_4979.astype('bool')) # shape=(784, 49)
uop_5023 = relay.sinh(call_4978.astype('float32')) # shape=(1, 49)
uop_5025 = relay.sinh(call_4979.astype('float32')) # shape=(1, 49)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
call_5039 = relay.TupleGetItem(func_965_call(relay.reshape(uop_5023.astype('float64'), [49,]), relay.reshape(var_4999.astype('float64'), [784,]), ), 3)
call_5040 = relay.TupleGetItem(func_968_call(relay.reshape(uop_5023.astype('float64'), [49,]), relay.reshape(var_4999.astype('float64'), [784,]), ), 3)
func_2285_call = mod.get_global_var('func_2285')
func_2288_call = mutated_mod.get_global_var('func_2288')
var_5042 = relay.var("var_5042", dtype = "int8", shape = (256,))#candidate|5042|(256,)|var|int8
call_5041 = relay.TupleGetItem(func_2285_call(relay.reshape(var_5042.astype('int8'), [2, 16, 8])), 0)
call_5043 = relay.TupleGetItem(func_2288_call(relay.reshape(var_5042.astype('int8'), [2, 16, 8])), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_5050 = relay.TupleGetItem(func_2804_call(), 2)
call_5051 = relay.TupleGetItem(func_2806_call(), 2)
output = relay.Tuple([call_4971,bop_4988,call_4998,bop_5004,uop_5023,call_5039,call_5041,var_5042,call_5050,])
output2 = relay.Tuple([call_4972,bop_4991,call_5000,bop_5007,uop_5025,call_5040,call_5043,var_5042,call_5051,])
func_5059 = relay.Function([var_4987,var_4999,var_5042,], output)
mod['func_5059'] = func_5059
mod = relay.transform.InferType()(mod)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mutated_mod.get_global_var('func_5059')
var_5061 = relay.var("var_5061", dtype = "int16", shape = (3, 49))#candidate|5061|(3, 49)|var|int16
var_5062 = relay.var("var_5062", dtype = "float64", shape = (784, 1))#candidate|5062|(784, 1)|var|float64
var_5063 = relay.var("var_5063", dtype = "int8", shape = (256,))#candidate|5063|(256,)|var|int8
call_5060 = func_5059_call(var_5061,var_5062,var_5063,)
output = call_5060
func_5064 = relay.Function([var_5061,var_5062,var_5063,], output)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1297_call = mod.get_global_var('func_1297')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_5075 = func_1297_call()
call_5076 = func_1297_call()
var_5084 = relay.var("var_5084", dtype = "int16", shape = (13, 49))#candidate|5084|(13, 49)|var|int16
bop_5085 = relay.less(call_5075.astype('bool'), var_5084.astype('bool')) # shape=(13, 49)
bop_5088 = relay.less(call_5076.astype('bool'), var_5084.astype('bool')) # shape=(13, 49)
uop_5093 = relay.atan(var_5084.astype('float64')) # shape=(13, 49)
bop_5095 = relay.subtract(bop_5085.astype('uint16'), relay.reshape(uop_5093.astype('uint16'), relay.shape_of(bop_5085))) # shape=(13, 49)
bop_5098 = relay.subtract(bop_5088.astype('uint16'), relay.reshape(uop_5093.astype('uint16'), relay.shape_of(bop_5088))) # shape=(13, 49)
var_5101 = relay.var("var_5101", dtype = "float64", shape = (13, 49))#candidate|5101|(13, 49)|var|float64
bop_5102 = relay.logical_or(uop_5093.astype('bool'), relay.reshape(var_5101.astype('bool'), relay.shape_of(uop_5093))) # shape=(13, 49)
bop_5105 = relay.logical_xor(var_5084.astype('uint64'), relay.reshape(bop_5085.astype('uint64'), relay.shape_of(var_5084))) # shape=(13, 49)
bop_5108 = relay.logical_xor(var_5084.astype('uint64'), relay.reshape(bop_5088.astype('uint64'), relay.shape_of(var_5084))) # shape=(13, 49)
output = relay.Tuple([bop_5095,bop_5102,bop_5105,])
output2 = relay.Tuple([bop_5098,bop_5102,bop_5108,])
func_5132 = relay.Function([var_5084,var_5101,], output)
mod['func_5132'] = func_5132
mod = relay.transform.InferType()(mod)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5132_call = mutated_mod.get_global_var('func_5132')
var_5134 = relay.var("var_5134", dtype = "int16", shape = (13, 49))#candidate|5134|(13, 49)|var|int16
var_5135 = relay.var("var_5135", dtype = "float64", shape = (13, 49))#candidate|5135|(13, 49)|var|float64
call_5133 = func_5132_call(var_5134,var_5135,)
output = call_5133
func_5136 = relay.Function([var_5134,var_5135,], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5145 = relay.var("var_5145", dtype = "float64", shape = (2, 6, 8))#candidate|5145|(2, 6, 8)|var|float64
uop_5146 = relay.sinh(var_5145.astype('float64')) # shape=(2, 6, 8)
func_1867_call = mod.get_global_var('func_1867')
func_1868_call = mutated_mod.get_global_var('func_1868')
call_5153 = relay.TupleGetItem(func_1867_call(), 0)
call_5154 = relay.TupleGetItem(func_1868_call(), 0)
func_2709_call = mod.get_global_var('func_2709')
func_2712_call = mutated_mod.get_global_var('func_2712')
const_5177 = relay.const([-9.647063,-0.379342,-8.601458,-4.562880,5.875463,-7.331089,-2.839813,2.285156,-2.189215,7.825197,7.296143,6.687568,-0.379306,6.583199,-5.980891,0.937653,0.470142,-1.203016,4.362552,4.928607,-6.660325,-8.678913,4.596688,-4.078353,-5.487503,-3.581171,0.088425,8.062895,-0.517824,8.811819,2.033635,7.194916,-8.282499,-9.195693,-2.187398,-6.519831,0.181038,-3.924380,-7.196569,-5.164622,-1.107988,-2.521012,-2.153862,-3.504704,5.235890,-0.076839,-1.769474,4.672526,0.972734,-9.833093,-4.606905,-5.923722,-1.620854,-2.610321,-9.332634,6.033155,0.536410,-2.174517,8.291949,0.764171,-7.327274,3.874954,2.320689,7.766213,-6.937027,8.658377,-2.763355,-1.911026,-0.939136,9.899359,-0.957639,9.396598,-1.677017,1.996883,-4.750214,-9.383687,-4.017742,8.334647,1.669708,4.508789,7.715906,-3.845622,-5.418088,-6.842021,2.283702,7.578152,-8.454982,5.639386,-9.305681,-3.738277,7.137419,9.651719,-2.505833,-2.513854,8.431540,5.175975,-3.856131,-5.177138,-6.869725,5.543074,-7.503394,0.666645,0.202521,-2.896034,-5.753446,1.757120,3.913136,5.932169,9.158309,1.389945,6.113161,7.936460,-8.709544,3.216628,-8.131983,-2.656326,6.345273,4.160236,4.437226,6.931033,-2.557660,9.289993,5.478976,2.722253,-1.860622,-4.611212,3.551067,6.642198,9.938354,3.504072,7.260401,1.117383,2.866010,-6.137029,-2.408039,-9.993263,-2.756303,-5.342210,6.571534,-4.809136,4.961846,5.397350,3.726960,-0.851086,9.462192,-2.188348,-1.963265,-8.579731,4.471428,-2.057846,-0.246954,-4.421859,-9.725123,-9.951105,5.863655,-0.649147,7.297417,3.037975,-3.701226,-1.577332,7.964941,2.956179,-6.008339,-6.144976,-3.002261,7.979781,8.698202,0.372244,-9.543164,8.841806,-9.701512,-4.408809,-8.150010,-8.361878,-9.322787,-1.073199,-0.593159,3.474972,2.938276,-3.454118,-2.507613,-0.378992,7.892249,6.568202,-8.027354,6.131967,-9.793878,-1.243350,-5.709831,-5.552387,0.247795,-5.830351,-8.561063,-5.670269,6.537279,4.157345,-7.123054,-8.510912,4.989860,-9.516982,-0.118710,-0.952450,4.165462,9.830047,-1.877868,-4.386987,2.345883,2.701747,-9.024152,3.990954,-1.663114,6.345823,3.094696,-4.172770,-5.288554,-5.086910,5.746898,3.294972,5.854590,-9.009053,-5.994127,-5.300735,7.085401,1.252585,3.183670,-7.361870,6.927740,1.932153,8.724432,3.396234,-9.508963,-8.967338,9.671953,-2.546091,0.184599,-0.896510,-1.224988,2.099140,-2.896758,9.728220,2.457633,4.303939,-4.260196,8.665310,-5.585056,1.733111,-2.952555,-6.766452,9.341080,1.781687,0.683953,7.091949,-7.188580,-0.410007,5.107323,-1.225579,0.924163,-9.368451,-4.180042,4.830851,-7.794452,4.662299,-8.676610,-3.150819,8.957768,-3.831865,5.216832,-5.858819,-3.972841,-3.110049,-0.856897,4.752798,-0.483722,0.569563,8.917977,-5.162999,1.386120,4.393649,3.319206,-6.631820,6.292795,-2.584724,-1.918822,-8.772171,9.637911,-2.831308,0.241350,9.337678,0.865685,4.826978,2.382520,1.073335,9.833425,-3.733257,-3.715475,0.659246,-8.874012,0.819520,-1.637632,8.402533,-2.594271,-4.098679,4.160867,-5.391828,-4.279032,-8.177734,8.493402,1.760182,-4.830485,2.517540,-7.162924,-2.703523,-0.033000,3.301470,0.739348,-4.242288,-9.146587,0.820205,-0.882609,6.371969,5.214044,-6.373971,2.535367,-7.682366,-6.278104,-2.234843,-7.607161,9.465840,-3.658602,-5.097022,9.790427,-0.994189,0.986548,-6.663436,3.093212,-4.163155,4.922506,8.146849,-9.012828,-7.130931,9.701597,7.688728,8.785137,6.194354,8.196514,5.079397,-0.059160,0.293940,4.283354,-5.553286,4.259967,-1.176471,6.089125,6.191558,4.395496,-0.323862,-1.132246,-9.545297,-3.403050,-4.392238,8.284437,0.766105,9.598224,7.224588,-8.091136,0.333552,3.714612,-8.001121,3.918303,-4.705171,1.920215,7.682133,1.692677,7.582345,7.046498,6.366261,3.420290,3.776416,7.356297,5.850730,-4.423943,3.805427,-1.918029,-1.646103,3.712495,-4.064618,-2.878455,5.506984,-3.614165,7.006201,-9.842722,-4.117032,9.189212,-6.153138,6.192300,-2.797899,-9.861440,5.284551,6.755258,-7.377856,-0.406140,3.926935,-3.424393,-1.418721,6.811162,9.356849,2.725909,1.334501,2.767844,3.793126,-2.963247,-3.654297,-6.813683,3.398687,5.616066,-5.868667,4.774944,-2.761157,-4.218119,-1.936313,4.015993,5.989907,9.046522,1.901805,-9.193950,6.985562,4.599784,0.599651,5.247825,2.948249,-2.149492,2.365993,-6.258362,-1.906494,-2.838332,-9.278775,-6.411475,-4.364810,6.745879,-0.097646,7.367204,-9.834403,8.758773,-0.569514,-3.045499,7.459560,3.908393,-2.956018,1.199480,8.016139,7.639439,4.600830,9.038730,-2.465116,9.353459,8.173875,-5.856685,1.763824,1.121938,6.530975,-3.220583,8.236664,2.493581,5.803059,-1.387819,-1.493179,-9.169008,6.665058,-8.568361,-6.208509,-5.034261,-3.146664,6.797008,-1.857495,6.581433,8.815101,-2.097131,2.612985,-7.186824,-5.393517,4.078233,8.132834,-7.848906,-1.324481,-7.459134,7.092799,-1.376303,5.616513,6.080759,-5.892469,8.847925,-5.462532,-2.977513,1.872986,-9.503711,0.480311,1.138223,-5.224473,1.434773,-0.687119,9.815179,-4.915951,5.063038,-2.435566,1.045736,8.722525,-8.428716,8.192053,2.125223,7.687240,-2.289910,-7.186604,3.783117,-7.105797,4.357256,-2.263114,-8.060769,-7.287093,1.988070,-4.028911,3.769192,7.929038,-5.580047,8.701776,-7.343040,9.674166,7.390809,-2.234610,-6.680606,-8.392453,1.916875,0.318373,5.034844,1.540239,-9.870383,-0.569889,7.075689,4.951893,-4.152790,5.838305,5.850202,7.178639,-6.627972,-0.978962,-7.534064,-4.711292,4.327050,6.263388,0.704860,6.016256,4.333606,-4.107588,-8.093903,-5.794890,-3.003239,0.012633,-0.286943,-2.040085,-3.803749,-4.330304,4.275660,-3.589417,-6.457317,-9.594016,-4.326969,5.480981,6.005945,-5.810878,5.884987,-1.092900,-2.726824,6.253597,-5.946961,-0.348861,-0.753230,-8.022387,7.805660,1.801549,-2.803348,-8.480677,4.410154,-5.011348,5.921475,-0.247048,8.289272,-8.787938,-5.980428,9.927035,6.954511,5.430721,-0.067065,-9.603131,-8.862524,8.828843,9.206070,4.518621,8.987060,0.659872,-7.529439,7.133296,-0.558869,-5.109484,8.404527,4.900867,6.602044,8.950690,-2.629398,1.796159,1.199955,-8.459322,-3.389028,7.037776,1.997920,-3.155410,3.015986,-4.623392,1.559564,-2.880538,-0.585747,-5.921392,6.298880,3.939555,6.372303,-2.779362,8.930766,0.113762,6.699841,6.938823,2.495073,-2.579075,9.951859,-9.586562,9.468128,0.182256,-7.881671,6.993317,0.581109,-8.114525,-5.518828,0.487321,8.720160,5.936755,-6.521565,8.457362,1.542198,-7.848397,-8.798636,9.961071,4.588629,5.636057,-5.985288,0.131724,8.426422,-8.269045,3.737360,0.526039,-0.022196,8.205939,6.135016,-7.138125,-1.996982,9.908185,1.823838,0.170251,-2.216050,0.672925,7.072330,-6.011885,-3.024812,-8.908272,9.008532,-8.989503,8.818538,-6.940894,-0.747861,3.686190,4.840330,-5.000555,2.715210,1.593249,-1.716351,4.271173,-2.700634,6.245425,-5.771972,-1.529070,4.955831,-2.206671,-9.191882,-1.395111,4.771965,9.501594,-3.605584,-1.393753,9.847623,4.415174,-4.290056,-3.397348,3.600312,9.907406,4.114742,6.814356,-9.205695,3.310017,-2.578942,6.567293,4.735830,-8.560218,-7.916050,-4.515553,-1.426941,-5.724234,-0.371995,5.474093,-5.343377,9.340641,-4.232688,-2.823234,-2.712736,4.207368,1.246159,4.176946,-3.171300,9.620346,-3.054131,-1.557778,5.422238,6.966060,8.745167,6.263900,9.080999,-0.273783,4.831464,-7.127839,-3.523644,-6.226925,-8.011433,3.405778,0.648823,-3.054396,-8.518586,7.655464,8.981085,9.481361,0.789505,-5.925756,8.455699,2.871619,1.193657,4.672339,2.572630,-4.741171,3.727509,-7.244215,-3.922937,-6.983325,-1.726046,-5.373818,-5.952064,-2.482302,5.236204,-4.418088,5.779701,3.148206,2.056864,6.670984,3.728785,-0.020042,4.622324,6.319643,6.685506,-0.869617,6.372424,8.183031,-7.009495,-2.287508,-0.019159,-8.562448,-5.960127,1.595247,-1.134580,-1.962628,-4.252813,-8.398123,-6.585899,9.494153,3.648512,6.071407,-8.079965,-0.145560,-9.071865,-6.388571,4.086824,5.619732,8.686198,2.667154,1.084509,3.177134,0.721037,8.753307,1.307341,3.335510,-8.615218,-3.108373,-9.131061,1.878420,3.216400,9.009302,-1.940940,-9.693256,0.576800,-2.730416,9.131938,-0.186219,1.696522,-9.117892,-9.007084,-2.833909,-1.451574,-1.469396,9.383800,-8.168367,9.217609,-6.320475,-2.025114,9.373543,-9.067967,-8.398740,4.657935,-5.228829,-6.538628,-3.725677,9.341935,4.247643,4.073275,-8.068877,7.422155,6.802132,-2.579380,-4.768129,-0.981980,7.319874,3.265919,-2.794612,-1.128459,-1.445995,-6.832182,-7.672597,3.100985,7.996953,4.015770,2.384766,-4.985768,3.862351,-1.493385,4.041661,-2.587975,-8.442295,-5.706166,-7.537425,8.555895,9.408026,2.963110,9.452503,0.669413,0.499269,-0.208302,4.107767,8.109220,-1.152712,2.493707,-6.390230,-6.595016,0.484279,-6.738168,7.478931,-6.199663,2.341435,-1.271053,-0.120207,6.881342,-6.720014,7.473749,7.134856,3.765024,-4.151679,9.887381,-6.123739,6.805683,3.747637,0.589197,-6.977496,3.508239,-6.766366,-4.150276,-4.953468,-8.892736,-0.602524,-7.581613,9.638802,7.965960,-2.446570,-9.518133,-6.687560,5.402498,8.914651,-2.227567,-7.362969,6.084906,-9.399752,-1.142927,-6.077704,0.672957,-3.914608,-2.904154,9.915726,8.011018,-3.431665,-9.331251,-9.588431,-5.034109,1.956124,1.486735,3.003015,-6.620505,-5.961447,-2.290242,7.641072,5.033738,8.477229,0.602130,7.373055,3.815229,5.642207,-1.008920,9.637870,5.397399,-6.581465,-9.678331,-6.644165,8.092452,3.873166,0.262770,9.221368,-2.617788,-5.553143,-6.618147,7.771727,9.221605,8.994906,-6.276701,3.458288,2.940161,-2.612039,0.650619,-8.775834,7.418279,-9.285637,1.923643,-6.337592,-1.765351,4.957865,-3.475648,-7.022250,5.932197,-2.327968,-5.262490,-2.717211,2.643042,-4.558072,8.709949,8.728069,-5.687328,5.872197,8.442109,-9.585100,-5.595563,-8.447252,-3.594630,-1.473714,2.115260,8.307817,-8.216889,1.864275,-7.012642,-0.654420,6.649265,-9.199836,3.203224,7.589654,9.147627,5.918188,9.656344,1.738466,-9.143283,-4.428448,-7.583325,-0.575048,5.156736,-4.647723,2.641146,2.547992,-3.821501,-1.562489,5.606212,-6.654286,5.719064,-7.310373,-3.446203,-7.575112,9.206253,-0.588548,-5.166001,0.341836,-1.761043,3.310288,-4.981632,-3.137571,5.868698,0.722624,-6.642982,5.819030,4.013780,3.010873,6.750825,-4.103342,-8.119456,-2.526336,4.836781,-5.174074,8.549096,3.668960,-3.204876,-4.355049,9.001346,-8.731368,-2.340778,7.555016,3.242029,4.305048,3.452066,5.327122,-3.382773,-2.002489,1.625020,4.798633,4.616798,3.722047,5.597245,0.269686,3.584023,-8.925150,2.724746,9.507769,-1.586412,-4.447155,-2.650216,7.048446,7.561694,9.002597,-4.801209,-3.583521,5.797926,8.318608,9.356762,1.282848,-0.349559,-1.145919,-6.169914,-3.150004,-9.349865,-3.945101,9.196533,8.273436,8.787460,4.272799,-1.508253,9.825087,2.284100,-9.460653,1.043109,2.810898,4.335770,-3.413506,5.343807,1.734596,5.193065,6.296050,0.710068,8.148366,3.959751,8.861797,-3.225460,1.658144,2.783053,4.291429,-2.974428,9.314033,-5.107392,6.449477,-9.387603,-4.877288,-9.070738,-3.555721,-0.660729,-3.505627,5.151936,1.187371,2.777452,8.219494,-2.470931,6.156906,-5.002390,8.807028,-6.273848,-6.192909,6.742667,-0.983142,-1.503444,6.568073,2.543381,-3.589799,7.665782,-6.620126,4.579093,-2.127369,-9.987684,-0.674607,-4.680213,-2.127484,-9.073412,9.875150,6.204264,5.984997,0.287830,-0.381842,-4.749827,1.998559,2.471182,-4.636839,9.938030,-7.495887,0.732439,-8.978395,-6.021596,-1.949605,-5.829452,-5.917051,-8.790929,8.299144,8.345310,-4.044159,2.514517,1.514080,0.506749,6.047495,-5.765565,2.985424,-1.826112,0.213245,-7.357358,1.996671,-2.176042,-0.877965,9.160699,-6.326729,4.251062,-4.893489,-3.378258,4.072904,-1.411581,-7.719635,9.633008,-1.756779,-4.586991,-7.692619,3.576169,6.024714,-1.198249,-8.844841,2.115202,-6.897871,9.488082,2.114353,-4.908428,-8.829564,4.471181,-1.748666,-3.182837,-2.195106,-7.585168,3.103431,-3.693767,5.842856,-7.891242,-6.282150,-7.193199,-0.544211,-2.377460,0.523821,9.821125,3.088469,5.384973,2.279236,-2.860446,-8.155571,-6.670877,-2.553334,-4.609875,1.523102,-7.752675,-5.155268,-5.775180,-8.689829,9.935621,-2.128377,1.824486,6.637111,4.562379,-2.922480,5.726040,-1.478638,-4.890777,-6.049327,1.852712,1.761052,-7.000813,-8.486967,4.668634,1.379550,5.349686,8.809063,7.831955,6.791961,9.701496,-0.224130,-3.770886,-3.311455,7.963947,2.601656,4.359266,-2.840521,-3.434331,-0.324771,-6.592656,-1.446630,7.432714,-6.397047,6.799695,1.333715,-6.719585,0.399216,0.035033,3.590082,-4.515771,4.876626,-1.504083,9.215635,-1.527005,-1.206283], dtype = "float32")#candidate|5177|(1260,)|const|float32
call_5176 = relay.TupleGetItem(func_2709_call(relay.reshape(const_5177.astype('float32'), [15, 6, 14]), relay.reshape(call_5153.astype('int8'), [256,]), ), 2)
call_5178 = relay.TupleGetItem(func_2712_call(relay.reshape(const_5177.astype('float32'), [15, 6, 14]), relay.reshape(call_5153.astype('int8'), [256,]), ), 2)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_5183 = relay.TupleGetItem(func_3089_call(), 4)
call_5184 = relay.TupleGetItem(func_3091_call(), 4)
output = relay.Tuple([uop_5146,call_5153,call_5176,const_5177,call_5183,])
output2 = relay.Tuple([uop_5146,call_5154,call_5178,const_5177,call_5184,])
func_5187 = relay.Function([var_5145,], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5188 = relay.var("var_5188", dtype = "float64", shape = (2, 6, 8))#candidate|5188|(2, 6, 8)|var|float64
func_5187_call = mutated_mod.get_global_var('func_5187')
call_5189 = func_5187_call(var_5188)
output = call_5189
func_5190 = relay.Function([var_5188], output)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1763_call = mutated_mod.get_global_var('func_1763')
call_5207 = func_1762_call()
call_5208 = func_1762_call()
output = relay.Tuple([call_5207,])
output2 = relay.Tuple([call_5208,])
func_5219 = relay.Function([], output)
mod['func_5219'] = func_5219
mod = relay.transform.InferType()(mod)
output = func_5219()
func_5220 = relay.Function([], output)
mutated_mod['func_5220'] = func_5220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mod.get_global_var('func_3556')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_5239 = relay.TupleGetItem(func_3556_call(), 0)
call_5240 = relay.TupleGetItem(func_3557_call(), 0)
func_1016_call = mod.get_global_var('func_1016')
func_1020_call = mutated_mod.get_global_var('func_1020')
const_5243 = relay.const([[9.962345,6.164516],[-2.889242,7.571589],[6.238519,-9.631796],[7.137965,2.719529],[3.192187,3.006785],[9.716948,4.666227],[-1.053781,-9.129339],[-6.803575,5.112005],[-2.592177,7.118578],[-6.511017,7.848630],[3.341661,1.761666],[-0.118973,-3.337459],[7.949832,2.863564],[-9.656890,5.749261],[-4.006688,8.355790],[9.592981,-7.370447],[-5.661021,-0.193725],[-8.266225,-6.382293],[0.433422,-9.857339],[0.289159,-5.506941],[-9.653208,1.137332],[-9.992636,-8.949929],[-6.914515,4.500577],[-3.721219,-8.763614],[6.256733,5.021970],[-9.730692,6.643085],[4.252681,-1.036589],[-4.673278,-3.436960],[-1.672224,5.962174],[-0.775039,0.937172],[-6.166089,-8.509484],[-3.625139,8.796229],[-0.128283,1.714549],[-5.250113,-7.796479],[-4.055094,-7.941584],[1.144116,-6.649340],[3.266723,-2.121711],[9.258946,-8.750383],[-6.109564,-9.303554],[9.345847,5.144813],[-8.582696,7.576689],[2.011131,-1.702156],[-3.961245,9.465741],[3.696841,0.473570],[0.203270,-0.647360],[-9.114036,-6.726242],[-3.469283,0.433765],[-9.707731,7.197858],[-5.695818,-6.976652],[-2.614880,3.311663],[0.090224,5.351590],[-3.511097,9.726011],[-1.689118,-8.237170],[2.752845,-2.895088],[3.822540,0.626108],[-8.525451,-0.577291],[6.704031,-4.465697],[-1.489626,-5.138267],[-8.291598,-9.394970],[6.581708,0.648822],[-4.918569,-1.042940],[-8.512037,6.354348],[-3.335504,-7.712091],[2.095968,8.758365],[6.700582,-6.554509],[-4.154598,0.122965],[-9.687439,9.073016],[-3.514721,-6.860921],[7.394807,-9.891705],[2.635278,7.949647],[-0.622825,-4.120874],[8.656690,4.935340],[0.650409,-5.657772],[-9.856399,3.224667],[7.441952,-5.776782],[9.901301,-8.322362],[4.265183,-6.081402],[-1.278867,5.377762],[2.169701,-3.511391],[6.296036,5.584616],[-2.040669,-2.565808],[-4.950585,2.448451],[6.565038,9.720310],[-3.217848,8.424912],[-6.484966,-5.894328],[1.528156,5.957306],[0.211534,0.464631],[6.482648,-0.250736],[-2.982295,5.456375],[-5.706647,7.150171],[-6.853025,-5.048532],[-0.998380,9.911287],[6.924827,-0.128624],[9.649748,-8.239937],[4.812857,2.283615],[-1.230051,-4.267991],[0.809066,0.422608],[7.894323,5.938050],[6.498135,-2.868632],[9.061318,-6.559470],[-4.612465,9.792517],[8.816242,-0.559330],[-3.174055,7.948495],[3.979427,3.266432],[0.008642,-9.635656],[3.849976,6.884279],[5.655696,4.415727],[2.886328,-7.254047],[-9.689145,3.320335],[5.468648,-4.443712],[4.371209,-4.100314],[-3.745592,3.084844],[8.465348,-3.906432],[0.992904,7.527316],[5.822609,5.290374],[1.627241,-0.443327],[-2.093904,2.947063],[-1.815549,5.226919],[0.933512,-0.339132],[3.474229,-0.492315],[-7.036042,-3.577821],[-5.905837,-1.209801],[-5.828845,-8.677554],[2.036594,3.191353],[-9.855298,7.265429],[-6.132363,-7.645114],[9.799126,1.348423],[3.691408,4.448174],[-1.969286,0.981017],[6.592585,9.242174],[-0.456167,0.970998],[-8.743262,9.766394],[8.850390,8.824194],[6.709035,-6.265110],[2.448986,3.447516],[2.365102,-1.605011],[-4.999728,-1.101995],[3.258909,5.016768],[2.166533,-1.168709],[7.501367,-8.051224],[-6.876522,4.424504],[5.756851,-8.811838],[0.303447,8.018546],[-1.819042,6.809664],[-6.555968,2.933598],[8.891529,8.660696],[7.799773,-7.792103],[4.668489,-9.950965],[2.237169,8.408457],[0.253498,6.021355],[9.034017,0.784516],[-0.267287,4.462270],[-0.101888,-4.205628],[1.053838,-5.951182],[0.016968,-8.807906],[5.087413,9.788945],[-5.191590,7.855190],[-8.529734,-6.669142],[-4.660540,-0.704028],[-6.500653,7.200061],[-2.186907,-9.988475],[2.321338,-8.606286],[-1.578845,5.945360],[7.831283,-6.689051],[9.185312,0.888228],[-1.947196,9.655821],[8.997030,1.529149],[7.292763,-2.034520],[-5.316892,-7.478354],[0.417621,4.702479],[3.077983,9.129802],[1.074500,-5.797520],[-5.011123,-3.616860],[7.918155,4.715297],[9.516882,8.364922],[9.111409,-7.207318],[-0.243964,1.713698],[-1.701325,7.153116],[3.874533,-8.160020],[-4.257059,0.068218],[7.463795,3.789596],[6.510106,5.594149],[1.209534,-2.781713],[6.634579,3.641639],[3.076526,4.133072],[2.642259,6.498130],[-1.735033,9.329188],[-5.318145,3.488958],[-4.326830,-8.109961],[3.021652,7.637556],[-2.933503,4.574266],[-0.115501,-1.104985],[4.499167,3.098313],[-0.593654,2.320529],[4.081096,-4.984767],[8.056348,1.330829],[-4.322372,1.818266],[4.372218,8.494645],[-0.425860,8.874573],[8.086846,-4.803782],[-0.750442,9.510708],[-2.930342,5.843384],[8.747080,2.440066],[5.211676,-7.011031],[6.794481,2.235442],[-0.405413,-6.189814],[2.021591,-7.259692],[2.156190,5.564359],[-1.161621,3.384127],[1.144645,-3.134638],[-2.257372,3.728268],[-5.996965,4.741911],[4.246182,9.437418],[0.314038,3.432522],[9.094924,1.306464],[-7.667208,-8.828070],[0.288934,-2.717578],[-3.102896,8.553504],[-9.519784,-1.714220],[7.262643,-8.472946],[-2.118179,-6.405973],[-5.182457,-1.467731],[0.191222,-1.072077],[-5.636357,0.108796],[-8.141236,-7.787398],[-0.177610,3.670601],[-8.841612,-1.435732],[-9.933610,7.758177],[-9.294391,-2.233828],[7.591136,-8.421104],[9.922162,-1.808371],[-6.335091,4.421491],[4.828947,5.186533],[-0.182214,0.774375],[0.175326,-3.436137],[-2.015031,-2.390600],[8.987829,3.961744],[-1.089154,-4.695334],[5.937769,2.485036],[-0.890130,-1.474061],[4.807385,9.801689],[7.241642,-1.282316],[-3.754134,-3.374036],[-6.561516,8.308943],[0.834653,-2.311733],[3.778300,0.279558],[-5.415694,-0.496202],[-5.887758,-4.704475],[-5.951110,8.186659],[-5.438216,-5.017166],[-6.214669,-8.925049],[-7.834974,-8.456450],[-9.654832,6.681368],[0.709856,-1.161000],[4.394401,-0.270747],[-8.002160,0.737740],[9.074997,-0.420689],[1.819321,-1.522057],[0.484290,-2.015517],[4.922625,2.652619],[-1.642527,2.011294],[-3.870821,9.107717],[-6.794228,3.189389],[-5.193974,1.761896],[6.049799,-5.439216],[9.013494,-1.677577],[5.930110,-9.073345],[5.028642,-7.793692],[-1.147972,-3.643523],[-4.042162,-2.659728],[3.777247,0.165536],[6.184765,8.136398],[-5.264522,7.268551],[9.948978,-4.799394],[-8.281697,7.252971],[-5.381311,5.811181],[6.680748,3.388680],[4.646445,-5.320814],[5.285382,8.710944],[-7.911734,5.150803],[-2.538393,-8.831231],[-2.920263,-2.160616],[0.308468,2.553112],[3.837772,-5.671876],[-4.846238,-7.403310],[-6.998061,-7.879302],[-8.670401,-1.207425],[3.140865,1.446234],[-4.813181,3.173600],[-0.155174,5.224573],[1.129756,-5.314828],[-2.057070,9.283905],[-5.079607,-0.371385],[-4.194072,5.788583],[-1.219948,6.774633],[7.066292,0.012808],[7.148749,3.912520],[-5.991724,9.719030],[6.693609,8.716293],[2.254817,-5.653990],[-4.733163,-4.960334],[3.568933,-3.129653],[5.076066,4.623640],[-8.917260,-0.750670],[9.767125,-9.437823],[-3.281126,2.430035],[3.602230,1.668003],[1.239387,-5.892960],[6.745166,-7.523348],[-5.929865,-5.948935],[3.194594,3.124242],[7.464719,1.794763],[6.492485,-2.517661],[2.050650,5.549979],[-8.059570,5.610094],[-8.817297,-0.582825],[-7.732797,-5.024103],[6.236013,-8.641015],[1.168585,-6.553575],[0.428704,2.268311],[9.093232,7.818976],[-6.280763,4.617877],[4.711234,-1.807078],[4.267611,6.919634],[-6.331670,-4.451329],[7.246047,-1.249610],[-2.766450,4.609043],[-4.631276,-1.889744],[-0.455988,-1.901281],[-0.867051,-5.307687],[5.904482,3.395998],[6.614271,-5.868187],[1.704118,7.968777],[-7.025382,5.720560],[-5.499912,-2.618989],[9.376849,9.314990],[-6.305042,-0.295043],[2.794143,5.038055],[-7.769143,6.443652],[4.747995,2.638112],[4.640368,4.886846],[-8.980944,-4.976763],[4.488478,8.500966],[-7.422598,0.075585],[-0.081967,1.582003],[-5.959211,-5.811651],[-6.086426,-7.771779],[-2.408539,-4.679353],[-6.166984,6.436702],[-7.826174,5.432881],[-4.730114,-2.832776],[6.844212,-5.992275],[-1.381714,-5.017027],[-9.664890,6.011977],[-4.979222,-5.409630],[0.832079,-9.399629],[1.943893,-6.819159],[-6.663041,8.351266],[-1.861053,9.646515],[4.103080,0.957240],[3.876932,-4.676518],[2.773562,-2.196091],[9.398322,-2.147838],[5.141098,-1.037411],[-5.893887,-4.986566],[1.242447,3.099183],[-1.924065,9.444904],[-1.443429,7.611766],[-2.702068,6.870781],[9.910076,-6.796042],[7.582779,3.681789],[5.132560,1.825537],[-4.238314,-0.886172],[1.911286,2.577271],[-0.617570,-6.332920],[1.999425,7.173084],[4.948071,2.600186],[-7.502288,-2.036873],[-3.187544,8.770324],[1.967780,5.157095],[-8.475432,5.894413],[-2.841541,2.651361],[-8.084649,0.074881],[6.973725,1.294751],[-1.861857,0.484363],[-7.199530,-5.120554],[3.550986,1.248752],[-9.728304,-2.280571],[-9.187363,-4.577857],[-8.521342,-3.697314],[2.829921,7.168947],[-6.224546,-6.729106]], dtype = "float64")#candidate|5243|(392, 2)|const|float64
call_5242 = relay.TupleGetItem(func_1016_call(relay.reshape(call_5239.astype('float64'), [1, 49]), relay.reshape(const_5243.astype('float64'), [784,]), ), 2)
call_5244 = relay.TupleGetItem(func_1020_call(relay.reshape(call_5239.astype('float64'), [1, 49]), relay.reshape(const_5243.astype('float64'), [784,]), ), 2)
output = relay.Tuple([call_5239,call_5242,const_5243,])
output2 = relay.Tuple([call_5240,call_5244,const_5243,])
func_5248 = relay.Function([], output)
mod['func_5248'] = func_5248
mod = relay.transform.InferType()(mod)
mutated_mod['func_5248'] = func_5248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5248_call = mutated_mod.get_global_var('func_5248')
call_5249 = func_5248_call()
output = call_5249
func_5250 = relay.Function([], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_5294 = relay.TupleGetItem(func_3928_call(), 0)
call_5295 = relay.TupleGetItem(func_3930_call(), 0)
func_2285_call = mod.get_global_var('func_2285')
func_2288_call = mutated_mod.get_global_var('func_2288')
const_5300 = relay.const([-3,-2,-2,9,3,-8,8,1,7,3,7,-5,-8,3,5,8,5,-9,7,2,9,2,1,9,7,5,10,4,9,1,3,2,-9,4,10,-8,5,-8,-3,6,9,-2,1,6,3,-6,7,2,-10,4,2,10,-9,-8,3,2,7,-10,-8,-10,4,-7,3,-8,6,2,-1,-5,-9,5,-7,6,1,-2,-2,9,-8,8,-6,2,-8,9,-5,4,-7,7,-5,10,1,-4,4,-1,-2,4,7,9,10,-7,-2,10,1,5,-2,-2,9,-6,-1,-5,-7,-2,-5,-2,-9,-10,1,10,9,7,-2,-6,7,4,-10,5,-10,-2,8,-9,-4,-7,1,6,-5,-5,6,-10,1,4,-4,9,-4,6,6,8,-6,-4,4,-9,4,8,5,-4,-1,-8,-5,-7,-9,-2,2,-2,7,-7,7,-10,10,-1,-5,1,-3,-10,-9,9,2,10,3,2,9,1,-5,-7,8,-2,-4,8,6,-6,-5,-1,-6,2,-7,9,4,-2,-10,8,8,10,4,9,-6,-3,2,9,-8,-9,-7,-1,-8,-2,3,-6,-9,-6,4,3,2,10,-3,-2,-10,-6,-9,8,3,8,1,8,2,-4,-1,6,-6,-7,-5,-2,2,-2,8,-10,1,6,6,3,-9,-4,-6,4,-7,3,-10,9,-4,2,-2,-10], dtype = "int8")#candidate|5300|(256,)|const|int8
call_5299 = relay.TupleGetItem(func_2285_call(relay.reshape(const_5300.astype('int8'), [2, 16, 8])), 0)
call_5301 = relay.TupleGetItem(func_2288_call(relay.reshape(const_5300.astype('int8'), [2, 16, 8])), 0)
output = relay.Tuple([call_5294,call_5299,const_5300,])
output2 = relay.Tuple([call_5295,call_5301,const_5300,])
func_5302 = relay.Function([], output)
mod['func_5302'] = func_5302
mod = relay.transform.InferType()(mod)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5302_call = mutated_mod.get_global_var('func_5302')
call_5303 = func_5302_call()
output = call_5303
func_5304 = relay.Function([], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_5308 = relay.TupleGetItem(func_3306_call(), 0)
call_5309 = relay.TupleGetItem(func_3307_call(), 0)
var_5310 = relay.var("var_5310", dtype = "int16", shape = (8, 49))#candidate|5310|(8, 49)|var|int16
bop_5311 = relay.logical_or(call_5308.astype('bool'), var_5310.astype('bool')) # shape=(8, 49)
bop_5314 = relay.logical_or(call_5309.astype('bool'), var_5310.astype('bool')) # shape=(8, 49)
uop_5320 = relay.cosh(var_5310.astype('float32')) # shape=(8, 49)
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
call_5334 = relay.TupleGetItem(func_1630_call(), 0)
call_5335 = relay.TupleGetItem(func_1632_call(), 0)
var_5336 = relay.var("var_5336", dtype = "float32", shape = (8, 49))#candidate|5336|(8, 49)|var|float32
bop_5337 = relay.less_equal(uop_5320.astype('bool'), relay.reshape(var_5336.astype('bool'), relay.shape_of(uop_5320))) # shape=(8, 49)
uop_5340 = relay.exp(bop_5337.astype('float32')) # shape=(8, 49)
var_5345 = relay.var("var_5345", dtype = "bool", shape = (8, 49))#candidate|5345|(8, 49)|var|bool
bop_5346 = relay.greater_equal(bop_5311.astype('bool'), relay.reshape(var_5345.astype('bool'), relay.shape_of(bop_5311))) # shape=(8, 49)
bop_5349 = relay.greater_equal(bop_5314.astype('bool'), relay.reshape(var_5345.astype('bool'), relay.shape_of(bop_5314))) # shape=(8, 49)
func_1468_call = mod.get_global_var('func_1468')
func_1470_call = mutated_mod.get_global_var('func_1470')
var_5353 = relay.var("var_5353", dtype = "int16", shape = (637,))#candidate|5353|(637,)|var|int16
call_5352 = relay.TupleGetItem(func_1468_call(relay.reshape(var_5353.astype('int16'), [13, 49])), 0)
call_5354 = relay.TupleGetItem(func_1470_call(relay.reshape(var_5353.astype('int16'), [13, 49])), 0)
output = relay.Tuple([call_5334,uop_5340,bop_5346,call_5352,var_5353,])
output2 = relay.Tuple([call_5335,uop_5340,bop_5349,call_5354,var_5353,])
func_5357 = relay.Function([var_5310,var_5336,var_5345,var_5353,], output)
mod['func_5357'] = func_5357
mod = relay.transform.InferType()(mod)
var_5358 = relay.var("var_5358", dtype = "int16", shape = (8, 49))#candidate|5358|(8, 49)|var|int16
var_5359 = relay.var("var_5359", dtype = "float32", shape = (8, 49))#candidate|5359|(8, 49)|var|float32
var_5360 = relay.var("var_5360", dtype = "bool", shape = (8, 49))#candidate|5360|(8, 49)|var|bool
var_5361 = relay.var("var_5361", dtype = "int16", shape = (637,))#candidate|5361|(637,)|var|int16
output = func_5357(var_5358,var_5359,var_5360,var_5361,)
func_5362 = relay.Function([var_5358,var_5359,var_5360,var_5361,], output)
mutated_mod['func_5362'] = func_5362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
call_5394 = func_4318_call()
call_5395 = func_4318_call()
uop_5410 = relay.asinh(call_5394.astype('float64')) # shape=(784,)
uop_5412 = relay.asinh(call_5395.astype('float64')) # shape=(784,)
output = uop_5410
output2 = uop_5412
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5444 = func_5443_call()
output = call_5444
func_5445 = relay.Function([], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_5505 = relay.TupleGetItem(func_3089_call(), 0)
call_5506 = relay.TupleGetItem(func_3091_call(), 0)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_5507 = func_2188_call()
call_5508 = func_2188_call()
func_1935_call = mod.get_global_var('func_1935')
func_1936_call = mutated_mod.get_global_var('func_1936')
call_5515 = relay.TupleGetItem(func_1935_call(), 1)
call_5516 = relay.TupleGetItem(func_1936_call(), 1)
uop_5531 = relay.exp(call_5507.astype('float64')) # shape=(784,)
uop_5533 = relay.exp(call_5508.astype('float64')) # shape=(784,)
func_4243_call = mod.get_global_var('func_4243')
func_4246_call = mutated_mod.get_global_var('func_4246')
var_5540 = relay.var("var_5540", dtype = "int8", shape = (256,))#candidate|5540|(256,)|var|int8
call_5539 = relay.TupleGetItem(func_4243_call(relay.reshape(call_5505.astype('bool'), [9, 15, 12]), relay.reshape(var_5540.astype('int8'), [8, 32]), ), 5)
call_5541 = relay.TupleGetItem(func_4246_call(relay.reshape(call_5505.astype('bool'), [9, 15, 12]), relay.reshape(var_5540.astype('int8'), [8, 32]), ), 5)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_5551 = relay.TupleGetItem(func_3089_call(), 5)
call_5552 = relay.TupleGetItem(func_3091_call(), 5)
output = relay.Tuple([call_5505,call_5515,uop_5531,call_5539,var_5540,call_5551,])
output2 = relay.Tuple([call_5506,call_5516,uop_5533,call_5541,var_5540,call_5552,])
func_5561 = relay.Function([var_5540,], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
var_5562 = relay.var("var_5562", dtype = "int8", shape = (256,))#candidate|5562|(256,)|var|int8
output = func_5561(var_5562)
func_5563 = relay.Function([var_5562], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_5570 = relay.TupleGetItem(func_2816_call(), 0)
call_5571 = relay.TupleGetItem(func_2818_call(), 0)
var_5572 = relay.var("var_5572", dtype = "bool", shape = (15, 49))#candidate|5572|(15, 49)|var|bool
bop_5573 = relay.divide(call_5570.astype('float32'), relay.reshape(var_5572.astype('float32'), relay.shape_of(call_5570))) # shape=(15, 49)
bop_5576 = relay.divide(call_5571.astype('float32'), relay.reshape(var_5572.astype('float32'), relay.shape_of(call_5571))) # shape=(15, 49)
output = bop_5573
output2 = bop_5576
func_5579 = relay.Function([var_5572,], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
var_5580 = relay.var("var_5580", dtype = "bool", shape = (15, 49))#candidate|5580|(15, 49)|var|bool
output = func_5579(var_5580)
func_5581 = relay.Function([var_5580], output)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1447_call = mod.get_global_var('func_1447')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_5628 = relay.TupleGetItem(func_1447_call(), 0)
call_5629 = relay.TupleGetItem(func_1448_call(), 0)
func_1277_call = mod.get_global_var('func_1277')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_5640 = func_1277_call()
call_5641 = func_1277_call()
func_1833_call = mod.get_global_var('func_1833')
func_1835_call = mutated_mod.get_global_var('func_1835')
call_5642 = relay.TupleGetItem(func_1833_call(), 0)
call_5643 = relay.TupleGetItem(func_1835_call(), 0)
var_5648 = relay.var("var_5648", dtype = "float64", shape = (784,))#candidate|5648|(784,)|var|float64
bop_5649 = relay.bitwise_and(call_5640.astype('int64'), relay.reshape(var_5648.astype('int64'), relay.shape_of(call_5640))) # shape=(784,)
bop_5652 = relay.bitwise_and(call_5641.astype('int64'), relay.reshape(var_5648.astype('int64'), relay.shape_of(call_5641))) # shape=(784,)
output = relay.Tuple([call_5628,call_5642,bop_5649,])
output2 = relay.Tuple([call_5629,call_5643,bop_5652,])
F = relay.Function([var_5648,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5648,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_6591() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %0 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %1 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_7894() -> (Tensor[(16, 4, 11), float64], Tensor[(9, 14, 4), bool], Tensor[(16, 4, 11), uint8]) {
  %4 = @func_4194() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %6 = atanh(%5) /* ty=Tensor[(9, 14, 4), float32] */;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %8 = log2(%7) /* ty=Tensor[(9, 14, 4), float32] */;
  %9 = cast(%6, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = %4.2;
  %14 = less(%11, %12) /* ty=Tensor[(9, 14, 4), bool] */;
  %15 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%13, %14, %15)
}

def @func_8772(%var_8751: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) {
  %16 = @func_6306() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %17 = %16.0;
  %18 = cast(%var_8751, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %22 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %23 = divide(%20, %21) /* ty=Tensor[(16, 4, 11), float32] */;
  %24 = %22.1;
  (%23, %24)
}

def @func_3886() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
  %25 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %26 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %27 = %25.0;
  %28 = %26.1;
  (%27, %28)
}

def @func_7936() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) {
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 117), int32] */, dtype="int32") /* ty=Tensor[(11, 117), int32] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %31 = reshape(%29, newshape=[429, 3]) /* ty=Tensor[(429, 3), int32] */;
  %32 = reshape(%30, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %33 = @func_6067(%31, %32) /* ty=(Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) */;
  %34 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  %35 = @func_3500() /* ty=Tensor[(16, 4, 11), float64] */;
  %36 = %33.0;
  (%34, %35, %36, meta[relay.Constant][1] /* ty=Tensor[(11, 117), int32] */, meta[relay.Constant][2] /* ty=Tensor[(2304), float32] */)
}

def @func_368(%var_363: Tensor[(16, 6, 12), bool], %var_364: Tensor[(16, 6, 12), bool]) -> Tensor[(16, 6, 12), bool] {
  %37 = cast(%var_364, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %38 = shape_of(%var_363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_363, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%39, %40) /* ty=Tensor[(16, 6, 12), bool] */
}

def @func_3062(%var_3054: Tensor[(14, 8, 11), float64]) -> Tensor[(14, 8, 11), float64] {
  %41 = cast(%var_3054, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  erf(%41) /* ty=Tensor[(14, 8, 11), float64] */
}

def @func_2126() -> (Tensor[(16, 4, 11), uint8],) {
  %42 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%42,)
}

def @func_9843() -> Tensor[(50), float32] {
  %43 = @func_7936() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) */;
  %43.2
}

def @func_8815() -> (Tensor[(11, 16, 8), int8], Tensor[(16, 4, 11), float64]) {
  %44 = @func_7697() /* ty=(Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) */;
  %45 = @func_4484() /* ty=Tensor[(11, 16, 8), int8] */;
  %46 = %44.1;
  (%45, %46)
}

def @main(%var_9940: Tensor[(390), uint8]) -> (Tensor[(16, 4, 11), float64], Tensor[(15, 13, 2), uint8], Tensor[(390), float32]) {
  %47 = cast(%var_9940, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %48 = reshape(%47, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %49 = cast(%var_9940, dtype="float32") /* ty=Tensor[(390), float32] */;
  %50 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %51 = @func_5500(%48) /* ty=Tensor[(15, 13, 2), uint8] */;
  %52 = log10(%49) /* ty=Tensor[(390), float32] */;
  (%50, %51, %52)
}

def @func_1962() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  %53 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %54 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %55 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %56 = %55.1;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %58 = exp(%57) /* ty=Tensor[(16, 6, 12), float32] */;
  %59 = cast(%56, dtype="int64") /* ty=Tensor[(16, 6, 12), int64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="int64") /* ty=Tensor[(16, 6, 12), int64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %63 = bitwise_or(%61, %62) /* ty=Tensor[(16, 6, 12), int64] */;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(16, 6, 12), float64] */;
  %65 = %53.0;
  %66 = %54.0;
  %67 = log2(%64) /* ty=Tensor[(16, 6, 12), float64] */;
  (%65, %66, %67)
}

def @func_5147() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) {
  %68 = @func_2414() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %69 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %70 = @func_4495() /* ty=Tensor[(11, 16, 8), int8] */;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(11, 16, 8), float64] */;
  %72 = atan(%71) /* ty=Tensor[(11, 16, 8), float64] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(11, 16, 8), float32] */;
  %74 = acosh(%73) /* ty=Tensor[(11, 16, 8), float32] */;
  %75 = cast(%70, dtype="uint64") /* ty=Tensor[(11, 16, 8), uint64] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%74, dtype="uint64") /* ty=Tensor[(11, 16, 8), uint64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %79 = %68.0;
  %80 = %69.3;
  %81 = subtract(%77, %78) /* ty=Tensor[(11, 16, 8), uint64] */;
  (%79, %80, %81)
}

def @func_865(%var_829: Tensor[(15, 10, 10), uint16], %var_830: Tensor[(15, 10, 10), uint16]) -> (Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) {
  %82 = cast(%var_830, dtype="uint16") /* ty=Tensor[(15, 10, 10), uint16] */;
  %83 = shape_of(%var_829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_829, dtype="uint16") /* ty=Tensor[(15, 10, 10), uint16] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %86 = cast(%var_830, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %87 = shape_of(%var_829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%var_829, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %91 = cast(meta[relay.Constant][3] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %92 = reshape(%90, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %93 = reshape(%91, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %94 = logical_xor(%84, %85) /* ty=Tensor[(15, 10, 10), uint16] */;
  %95 = floor_divide(%88, %89) /* ty=Tensor[(15, 10, 10), float32] */;
  %96 = @func_368(%92, %93) /* ty=Tensor[(16, 6, 12), bool] */;
  (%94, %95, %96, meta[relay.Constant][3] /* ty=Tensor[(1152), bool] */)
}

def @func_1259(%var_1249: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), bool],) {
  %97 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %98 = %97.1;
  %99 = cast(%var_1249, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = logical_or(%101, %102) /* ty=Tensor[(16, 4, 11), bool] */;
  (%103,)
}

def @func_1368(%var_1332: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) {
  %104 = cast(%var_1332, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(1500), uint16] */, dtype="uint16") /* ty=Tensor[(1500), uint16] */;
  %106 = cast(meta[relay.Constant][4] /* ty=Tensor[(1500), uint16] */, dtype="uint16") /* ty=Tensor[(1500), uint16] */;
  %107 = reshape(%105, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), uint16] */;
  %108 = reshape(%106, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), uint16] */;
  %109 = @func_865(%107, %108) /* ty=(Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) */;
  %110 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %111 = log10(%104) /* ty=Tensor[(4, 7, 7), float64] */;
  %112 = %109.2;
  %113 = %110.0;
  (%111, %112, meta[relay.Constant][4] /* ty=Tensor[(1500), uint16] */, %113)
}

def @func_4709(%var_4668: Tensor[(9, 13, 11), int32], %var_4669: Tensor[(9, 13, 11), int32]) -> (Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %114 = cast(%var_4669, dtype="int32") /* ty=Tensor[(9, 13, 11), int32] */;
  %115 = shape_of(%var_4668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_4668, dtype="int32") /* ty=Tensor[(9, 13, 11), int32] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %119 = cast(meta[relay.Constant][5] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %120 = reshape(%118, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %121 = reshape(%119, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %122 = cast(%var_4669, dtype="float64") /* ty=Tensor[(9, 13, 11), float64] */;
  %123 = sinh(%122) /* ty=Tensor[(9, 13, 11), float64] */;
  %124 = cast(%123, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %125 = shape_of(%var_4669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_4669, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %129 = subtract(%116, %117) /* ty=Tensor[(9, 13, 11), int32] */;
  %130 = @func_368(%120, %121) /* ty=Tensor[(16, 6, 12), bool] */;
  %131 = equal(%126, %127) /* ty=Tensor[(9, 13, 11), bool] */;
  %132 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  %133 = %128.1;
  (%129, %130, meta[relay.Constant][5] /* ty=Tensor[(1152), bool] */, %131, %132, %133)
}

def @func_2318() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %134 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %135 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %136 = %134.0;
  %137 = %135.0;
  %138 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%136, %137, %138)
}

def @func_8514(%var_8506: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), bool],) {
  %139 = @func_8495() /* ty=(Tensor[(14, 8, 11), float64],) */;
  %140 = %139.0;
  %141 = cast(%var_8506, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%140, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = less(%143, %144) /* ty=Tensor[(14, 8, 11), bool] */;
  (%145,)
}

def @func_3500() -> Tensor[(16, 4, 11), float64] {
  @func_807() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_5162() -> Tensor[(16, 4, 11), float64] {
  @func_807() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_4495() -> Tensor[(11, 16, 8), int8] {
  @func_4484() /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_3246() -> (Tensor[(16, 4, 11), float64],) {
  %146 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %147 = %146.0;
  (%147,)
}

def @func_4537() -> Tensor[(2304), float32] {
  %148 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %148.1
}

def @func_2526() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %149 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %150 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %151 = %149.0;
  %152 = %150.0;
  (%151, %152)
}

def @func_7815(%var_7804: Tensor[(16, 4, 11), uint8]) -> (Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(5, 6, 3), float64], Tensor[(90), uint8], Tensor[(16, 4, 11), int16]) {
  %153 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %155 = cast(meta[relay.Constant][6] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %156 = reshape(%154, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint8] */;
  %157 = reshape(%155, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint8] */;
  %158 = @func_7646(%156, %157) /* ty=(Tensor[(5, 6, 3), float64],) */;
  %159 = @func_7224() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %160 = %159.4;
  %161 = cast(%var_7804, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%160, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %165 = @func_7483() /* ty=Tensor[(?, 5, 10), int16] */;
  %166 = %153.0;
  %167 = %158.0;
  %168 = left_shift(%163, %164) /* ty=Tensor[(16, 4, 11), int16] */;
  (%165, %166, %167, meta[relay.Constant][6] /* ty=Tensor[(90), uint8] */, %168)
}

def @func_4484() -> Tensor[(11, 16, 8), int8] {
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 1, 8), int8] */, dtype="int8") /* ty=Tensor[(11, 1, 8), int8] */;
  %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 16, 8), int8] */, dtype="int8") /* ty=Tensor[(11, 16, 8), int8] */;
  multiply(%169, %170) /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_3142(%var_3139: Tensor[(196), float64]) -> (Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) {
  %171 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %172 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %173 = %172.0;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %175 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %176 = cast(%var_3139, dtype="float64") /* ty=Tensor[(196), float64] */;
  %177 = reshape(%176, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %178 = @func_1368(%177) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) */;
  %179 = %171.4;
  %180 = asin(%174) /* ty=Tensor[(16, 4, 11), float64] */;
  %181 = %175.0;
  %182 = %178.2;
  (%179, %180, %181, %182, %var_3139)
}

def @func_1401() -> (Tensor[(16, 4, 11), float64],) {
  %183 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %184 = %183.0;
  (%184,)
}

def @func_665(%var_613: Tensor[(16, 4, 11), float64], %var_618: Tensor[(16, 4, 11), float32], %var_629: Tensor[(5, 10), float32]) -> (Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) {
  %185 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %186 = cast(%var_613, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %190 = add(%188, %189) /* ty=Tensor[(16, 4, 11), float32] */;
  %191 = cast(%var_618, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %195 = cast(%var_629, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %196 = reshape(%195, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %197 = cast(%var_629, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %198 = reshape(%197, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %199 = not_equal(%193, %194) /* ty=Tensor[(16, 4, 11), bool] */;
  %200 = @func_268(%196) /* ty=Tensor[(1, 5, 10), float32] */;
  %201 = @func_268(%198) /* ty=Tensor[(1, 5, 10), float32] */;
  (%199, %200, %var_629, %201)
}

def @func_3382() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
  %202 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %203 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %204 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  %205 = %202.0;
  %206 = %203.1;
  (%204, %205, %206)
}

def @func_8495() -> (Tensor[(14, 8, 11), float64],) {
  %207 = @func_6836() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */;
  %208 = %207.2;
  (%208,)
}

def @func_7105() -> Tensor[(16, 4, 11), float64] {
  %209 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %209.0
}

def @func_6858() -> (Tensor[(16, 4, 11), float64],) {
  %210 = @func_4959() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %211 = %210.0;
  (%211,)
}

def @func_6165() -> Tensor[(2304), int32] {
  %212 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(2304), float32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(1), int32] */;
  %215 = cast(%212, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?), int32] */;
  subtract(%215, %216) /* ty=Tensor[(2304), int32] */
}

def @func_3981() -> Tensor[(16, 4, 11), float64] {
  %217 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
  %217.1
}

def @func_9557() -> (Tensor[(576), float64], Tensor[(2304), float64], Tensor[(2304), float32]) {
  %218 = @func_8989() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) */;
  %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %220 = reshape(%219, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %221 = @func_6810(%220) /* ty=(Tensor[(2304), float64],) */;
  %222 = %218.2;
  %223 = %221.0;
  (%222, %223, meta[relay.Constant][10] /* ty=Tensor[(2304), float32] */)
}

def @func_2677() -> Tensor[(16, 4, 11), uint8] {
  %224 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %224.0
}

def @func_9121() -> (Tensor[(16, 4, 11), float64],) {
  %225 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
  (%225,)
}

def @func_7347(%var_7337: Tensor[(448), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(448), float32]) {
  %226 = cast(%var_7337, dtype="float32") /* ty=Tensor[(448), float32] */;
  %227 = cast(%var_7337, dtype="float32") /* ty=Tensor[(448), float32] */;
  %228 = reshape(%226, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %229 = reshape(%227, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %230 = @func_1565(%228, %229) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %231 = @func_5162() /* ty=Tensor[(16, 4, 11), float64] */;
  %232 = %230.1;
  (%231, %232, %var_7337)
}

def @func_6617() -> Tensor[(1152), bool] {
  @func_6486() /* ty=Tensor[(1152), bool] */
}

def @func_3023() -> (Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) {
  %233 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %234 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %235 = reshape(%234, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %236 = @func_329(%235) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %239 = tan(%238) /* ty=Tensor[(16, 16, 9), float64] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %241 = asin(%240) /* ty=Tensor[(16, 16, 9), float32] */;
  %242 = cast(%241, dtype="int8") /* ty=Tensor[(16, 16, 9), int8] */;
  %243 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%239, dtype="int8") /* ty=Tensor[(16, 16, 9), int8] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %246 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %247 = %233.3;
  %248 = multiply(%244, %245) /* ty=Tensor[(16, 16, 9), int8] */;
  %249 = %246.0;
  (%247, meta[relay.Constant][11] /* ty=Tensor[(2304), float32] */, %248, %249)
}

def @func_6067(%var_6025: Tensor[(429, 3), int32], %var_6056: Tensor[(2304), float32]) -> (Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) {
  %250 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
  %251 = cast(%var_6025, dtype="int32") /* ty=Tensor[(429, 3), int32] */;
  %252 = cast(%var_6025, dtype="int32") /* ty=Tensor[(429, 3), int32] */;
  %253 = reshape(%251, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), int32] */;
  %254 = reshape(%252, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), int32] */;
  %255 = @func_4709(%253, %254) /* ty=(Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %256 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %257 = @func_5147() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) */;
  %258 = %257.1;
  %259 = cast(%var_6056, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %261 = cast(%258, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?), bool] */;
  %263 = %250.3;
  %264 = %255.3;
  %265 = %256.0;
  %266 = logical_or(%261, %262) /* ty=Tensor[(2304), bool] */;
  (%263, %264, %var_6025, %265, %266)
}

def @func_4297(%var_4271: Tensor[(1152), bool]) -> (Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(12, 2, 1), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %267 = cast(%var_4271, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %268 = cast(%var_4271, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %269 = reshape(%267, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %270 = reshape(%268, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %271 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %273 = atanh(%272) /* ty=Tensor[(12, 2, 1), float32] */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %275 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 1), float32] */, dtype="float64") /* ty=Tensor[(12, 2, 1), float64] */;
  %276 = reshape(%275, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float64] */;
  %277 = @func_3606(%276) /* ty=(Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %278 = @func_368(%269, %270) /* ty=Tensor[(16, 6, 12), bool] */;
  %279 = %271.0;
  %280 = acosh(%274) /* ty=Tensor[(12, 2, 1), float32] */;
  %281 = %277.3;
  %282 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%278, %var_4271, %279, %280, %281, %282)
}

def @func_1861() -> Tensor[(16, 4, 11), float64] {
  %283 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %283.0
}

def @func_1311() -> (Tensor[(16, 4, 11), float64],) {
  %284 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%284,)
}

def @func_5589(%var_5565: float32, %var_5566: Tensor[(13, 2, 7), float32]) -> (Tensor[(13, 2, 7), bool],) {
  %285 = cast(%var_5565, dtype="bool") /* ty=bool */;
  %286 = cast(%var_5566, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
  %287 = greater(%285, %286) /* ty=Tensor[(13, 2, 7), bool] */;
  (%287,)
}

def @func_5768() -> Tensor[(16, 4, 11), float64] {
  %288 = @func_3485() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %288.0
}

def @func_7421(%var_7411: Tensor[(10, 16, 15), uint16], %var_7412: Tensor[(10, 16, 15), uint16]) -> Tensor[(10, 16, 15), uint16] {
  %289 = cast(%var_7412, dtype="uint16") /* ty=Tensor[(10, 16, 15), uint16] */;
  %290 = shape_of(%var_7411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_7411, dtype="uint16") /* ty=Tensor[(10, 16, 15), uint16] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%291, %292) /* ty=Tensor[(10, 16, 15), uint16] */
}

def @func_268(%var_264: Tensor[(1, 5, 10), float32]) -> Tensor[(1, 5, 10), float32] {
  %293 = cast(%var_264, dtype="float32") /* ty=Tensor[(1, 5, 10), float32] */;
  rsqrt(%293) /* ty=Tensor[(1, 5, 10), float32] */
}

def @func_4570() -> (Tensor[(16, 4, 11), float64],) {
  %294 = @func_3742() /* ty=Tensor[(16, 4, 11), float64] */;
  (%294,)
}

def @func_3485() -> (Tensor[(16, 4, 11), float64],) {
  %295 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  (%295,)
}

def @func_4745() -> Tensor[(16, 4, 11), uint8] {
  %296 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %296.0
}

def @func_3475() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) {
  %297 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %298 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
  %299 = %297.0;
  %300 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  %301 = %298.3;
  (%299, %300, %301)
}

def @func_8450() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), int32], Tensor[(7, 6, 16), bool], float32, Tensor[(672), float32], Tensor[(5, 10), float32], Tensor[(5, 10), float32]) {
  %302 = @func_3886() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) */;
  %303 = cast(-4.681f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %304 = cast(meta[relay.Constant][13] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %305 = reshape(%303, newshape=[]) /* ty=float32 */;
  %306 = reshape(%304, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float32] */;
  %307 = @func_6134(%305, %306) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) */;
  %308 = %302.0;
  %309 = cast(%308, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %310 = cast(%308, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %311 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %312 = reshape(%309, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
  %313 = reshape(%310, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %314 = reshape(%311, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %315 = @func_665(%312, %313, %314) /* ty=(Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) */;
  %316 = @func_6165() /* ty=Tensor[(2304), int32] */;
  %317 = %307.0;
  %318 = %315.2;
  (%308, %316, %317, -4.681f /* ty=float32 */, meta[relay.Constant][13] /* ty=Tensor[(672), float32] */, %318, meta[relay.Constant][14] /* ty=Tensor[(5, 10), float32] */)
}

def @func_4035() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8]) {
  %319 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %320 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %321 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
  %322 = %319.0;
  %323 = %320.3;
  %324 = %321.5;
  (%322, %323, %324)
}

def @func_6836() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  %325 = @func_4551() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %326 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %327 = cast(meta[relay.Constant][15] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %328 = reshape(%327, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %329 = %325.0;
  %330 = %326.0;
  %331 = @func_3062(%328) /* ty=Tensor[(14, 8, 11), float64] */;
  (%329, %330, %331, meta[relay.Constant][15] /* ty=Tensor[(1232), float64] */)
}

def @func_7992(%var_7948: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 16, 9), float32], Tensor[(16, 4, 11), uint8]) {
  %332 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %333 = cast(%var_7948, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %334 = reshape(%333, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %335 = @func_2477(%334) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) */;
  %336 = %335.1;
  %337 = cast(%var_7948, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(1), int32] */;
  %339 = cast(%336, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %341 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
  %342 = %341.0;
  %343 = cast(%342, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %344 = @func_7709() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %345 = %332.0;
  %346 = bitwise_xor(%339, %340) /* ty=Tensor[(1152), uint8] */;
  %347 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
  %348 = asinh(%343) /* ty=Tensor[(16, 16, 9), float32] */;
  %349 = %344.0;
  (%345, %346, %347, %348, %349)
}

def @func_1441() -> (Tensor[(16, 4, 11), float64],) {
  %350 = @func_1390() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %351 = %350.0;
  (%351,)
}

def @func_8670() -> (Tensor[(16, 4, 11), float64], Tensor[(11, 16, 8), float64]) {
  %352 = @func_4551() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %353 = @func_4484() /* ty=Tensor[(11, 16, 8), int8] */;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(11, 16, 8), float64] */;
  %355 = %352.0;
  %356 = cos(%354) /* ty=Tensor[(11, 16, 8), float64] */;
  (%355, %356)
}

def @func_5748() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %357 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %358 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %359 = %357.0;
  %360 = %358.1;
  (%359, %360)
}

def @func_7483() -> Tensor[(?, 5, 10), int16] {
  %361 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %361.1
}

def @func_8080(%var_8074: Tensor[(15, 9, 3), uint16]) -> (Tensor[(15, 9, 3), uint16],) {
  %362 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 9, 3), uint16] */, dtype="uint16") /* ty=Tensor[(15, 9, 3), uint16] */;
  %363 = shape_of(%var_8074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%var_8074, dtype="uint16") /* ty=Tensor[(15, 9, 3), uint16] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %366 = bitwise_or(%364, %365) /* ty=Tensor[(15, 9, 3), uint16] */;
  (%366,)
}

def @func_3214(%var_3170: Tensor[(8, 4, 1), uint32], %var_3171: Tensor[(8, 4, 4), uint32], %var_3196: Tensor[(8, 4, 4), uint32]) -> (Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) {
  %367 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %368 = cast(%var_3170, dtype="uint32") /* ty=Tensor[(8, 4, 1), uint32] */;
  %369 = cast(%var_3171, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %370 = minimum(%368, %369) /* ty=Tensor[(8, 4, 4), uint32] */;
  %371 = cast(%var_3196, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = %367.0;
  %376 = power(%373, %374) /* ty=Tensor[(8, 4, 4), float32] */;
  (%375, %376)
}

def @func_6486() -> Tensor[(1152), bool] {
  %377 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %377.0
}

def @func_807() -> Tensor[(16, 4, 11), float64] {
  @func_591() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_8857() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
  %378 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %380 = reshape(%379, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
  %381 = @func_8772(%380) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) */;
  %382 = %381.1;
  (%378, %382)
}

def @func_7397(%var_7372: Tensor[(6, 15, 13), int32], %var_7391: Tensor[(48, 24), bool]) -> (Tensor[(6, 15, 13), int32], Tensor[(16, 6, 12), bool], Tensor[(48, 24), bool]) {
  %383 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 15, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 15, 13), int32] */;
  %384 = shape_of(%var_7372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_7372, dtype="int32") /* ty=Tensor[(6, 15, 13), int32] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %387 = cast(%var_7391, dtype="bool") /* ty=Tensor[(48, 24), bool] */;
  %388 = cast(%var_7391, dtype="bool") /* ty=Tensor[(48, 24), bool] */;
  %389 = reshape(%387, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %390 = reshape(%388, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %391 = subtract(%385, %386) /* ty=Tensor[(6, 15, 13), int32] */;
  %392 = @func_368(%389, %390) /* ty=Tensor[(16, 6, 12), bool] */;
  (%391, %392, %var_7391)
}

def @func_3632(%var_3627: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
  %393 = cast(%var_3627, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %394 = acosh(%393) /* ty=Tensor[(16, 9, 4), float64] */;
  (%394,)
}

def @func_2247() -> Tensor[(16, 4, 11), float32] {
  %395 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  acos(%397) /* ty=Tensor[(16, 4, 11), float32] */
}

def @func_5367(%var_5362: Tensor[(2304), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
  %398 = @func_4194() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %399 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %400 = %399.3;
  %401 = cast(%var_5362, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(1), int32] */;
  %403 = cast(%400, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?), float32] */;
  %405 = %398.3;
  %406 = divide(%403, %404) /* ty=Tensor[(2304), float32] */;
  (%405, %406)
}

def @func_7365() -> Tensor[(16, 4, 11), uint8] {
  %407 = @func_3475() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) */;
  %407.1
}

def @func_4551() -> (Tensor[(16, 4, 11), float64],) {
  %408 = @func_2709() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %409 = %408.0;
  (%409,)
}

def @func_3777() -> Tensor[(16, 4, 11), uint8] {
  %410 = @func_3382() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */;
  %410.0
}

def @func_3782() -> Tensor[(16, 4, 11), uint8] {
  @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_4847() -> Tensor[(16, 4, 11), float64] {
  %411 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
  %411.1
}

def @func_6603() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) {
  %412 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %413 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %414 = %412.5;
  %415 = %413.2;
  (%414, %415)
}

def @func_1209(%var_1160: Tensor[(2, 576), bool]) -> (Tensor[(16, 16, 9), bool], Tensor[(2, 576), bool]) {
  %416 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %417 = %416.2;
  %418 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 16, 9), float32] */, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
  %423 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
  %424 = reshape(%422, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %425 = reshape(%423, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %426 = @func_368(%424, %425) /* ty=Tensor[(16, 6, 12), bool] */;
  %427 = cast(%426, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %428 = shape_of(%var_1160, dtype="int32") /* ty=Tensor[(2), int32] */;
  %429 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %431 = greater_equal(%420, %421) /* ty=Tensor[(16, 16, 9), bool] */;
  %432 = less(%429, %430) /* ty=Tensor[(2, 576), bool] */;
  (%431, %432)
}

def @func_6757(%var_6732: Tensor[(50), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(1, 5, 10), float32], Tensor[(50), float32]) {
  %433 = cast(%var_6732, dtype="float32") /* ty=Tensor[(50), float32] */;
  %434 = reshape(%433, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %435 = @func_4847() /* ty=Tensor[(16, 4, 11), float64] */;
  %436 = @func_268(%434) /* ty=Tensor[(1, 5, 10), float32] */;
  (%435, %436, %var_6732)
}

def @func_2414() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %437 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %438 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %439 = %437.0;
  %440 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %441 = %438.1;
  (%439, %440, %441)
}

def @func_9235(%var_9232: Tensor[(2, 616), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(2, 616), float64]) {
  %442 = @func_6836() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */;
  %443 = cast(%var_9232, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
  %444 = reshape(%443, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %445 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %446 = %442.1;
  %447 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
  %448 = @func_3062(%444) /* ty=Tensor[(14, 8, 11), float64] */;
  (%445, %446, %447, %448, %var_9232)
}

def @func_6306() -> (Tensor[(16, 4, 11), float64],) {
  %449 = @func_6095() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %450 = %449.0;
  (%450,)
}

def @func_329(%var_325: Tensor[(16, 16, 9), float32]) -> (Tensor[(16, 16, 9), float32],) {
  %451 = cast(%var_325, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %452 = log2(%451) /* ty=Tensor[(16, 16, 9), float32] */;
  (%452,)
}

def @func_9622() -> Tensor[(1152), bool] {
  %453 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %453.0
}

def @func_1750() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %454 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %456 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %457 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %458 = cast(meta[relay.Constant][19] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %459 = reshape(%458, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %460 = @func_329(%459) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %461 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %462 = cos(%455) /* ty=Tensor[(16, 4, 11), float64] */;
  %463 = %456.0;
  %464 = %457.0;
  %465 = %460.0;
  %466 = %461.0;
  (%462, %463, %464, %465, meta[relay.Constant][19] /* ty=Tensor[(2304), float32] */, %466)
}

def @func_2621(%var_2600: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
  %467 = cast(%var_2600, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  %468 = sinh(%467) /* ty=Tensor[(4, 13, 14), float64] */;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %470 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %471 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %472 = cast(meta[relay.Constant][21] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %473 = reshape(%470, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %474 = reshape(%471, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %475 = reshape(%472, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %476 = @func_433(%473, %474, %475) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %477 = erf(%469) /* ty=Tensor[(4, 13, 14), float32] */;
  %478 = %476.0;
  (%477, %478, meta[relay.Constant][20] /* ty=Tensor[(1, 910), float32] */, meta[relay.Constant][21] /* ty=Tensor[(1152), bool] */)
}

def @func_4888() -> (Tensor[(16, 4, 11), uint8],) {
  %479 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
  %480 = %479.5;
  (%480,)
}

def @func_6810(%var_6801: Tensor[(2304), float32]) -> (Tensor[(2304), float64],) {
  %481 = @func_4608() /* ty=Tensor[(2304), float32] */;
  %482 = cast(%var_6801, dtype="int8") /* ty=Tensor[(2304), int8] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(1), int32] */;
  %484 = cast(%481, dtype="int8") /* ty=Tensor[(2304), int8] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?), int8] */;
  %486 = add(%484, %485) /* ty=Tensor[(2304), int8] */;
  %487 = cast(%481, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(1), int32] */;
  %489 = cast(%486, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?), float64] */;
  %491 = floor_divide(%489, %490) /* ty=Tensor[(2304), float64] */;
  (%491,)
}

def @func_2587(%var_2558: Tensor[(16, 4, 12), float64], %var_2570: Tensor[(1152), bool]) -> (Tensor[(16, 4, 12), uint32], Tensor[(2304), float32], Tensor[(1152), bool]) {
  %492 = cast(%var_2558, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
  %493 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 4, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %496 = floor_divide(%494, %495) /* ty=Tensor[(16, 4, 12), float64] */;
  %497 = cast(%496, dtype="uint32") /* ty=Tensor[(16, 4, 12), uint32] */;
  %498 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 4, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 4, 12), float64] */, dtype="uint32") /* ty=Tensor[(16, 4, 12), uint32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %501 = cast(%var_2570, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %502 = reshape(%501, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
  %503 = @func_951(%502) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) */;
  %504 = minimum(%499, %500) /* ty=Tensor[(16, 4, 12), uint32] */;
  %505 = %503.6;
  (%504, %505, %var_2570)
}

def @func_7709() -> (Tensor[(16, 4, 11), uint8],) {
  %506 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %507 = %506.0;
  (%507,)
}

def @func_951(%var_928: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) {
  %508 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %509 = cast(%var_928, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %510 = cast(%var_928, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %511 = reshape(%509, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %512 = reshape(%510, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %513 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %514 = cast(meta[relay.Constant][23] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %515 = sin(%514) /* ty=Tensor[(2304), float32] */;
  %516 = cast(meta[relay.Constant][23] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %517 = reshape(%516, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %518 = @func_329(%517) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %519 = %518.0;
  %520 = cast(%519, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
  %521 = shape_of(%515, dtype="int32") /* ty=Tensor[(1), int32] */;
  %522 = cast(%515, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?), bool] */;
  %524 = cast(meta[relay.Constant][23] /* ty=Tensor[(2304), float32] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %525 = shape_of(%515, dtype="int32") /* ty=Tensor[(1), int32] */;
  %526 = cast(%515, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?), int64] */;
  %528 = bitwise_and(%526, %527) /* ty=Tensor[(2304), int64] */;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %530 = %508.0;
  %531 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %532 = @func_368(%511, %512) /* ty=Tensor[(16, 6, 12), bool] */;
  %533 = %513.0;
  %534 = greater(%522, %523) /* ty=Tensor[(2304), bool] */;
  %535 = asin(%529) /* ty=Tensor[(2304), float32] */;
  (%530, %531, %532, %var_928, %533, %534, %535)
}

def @func_4661(%var_4652: Tensor[(2304), float32]) -> Tensor[(2304), uint8] {
  %536 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %537 = cast(%var_4652, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(1), int32] */;
  %539 = cast(%536, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?), uint8] */;
  bitwise_or(%539, %540) /* ty=Tensor[(2304), uint8] */
}

def @func_5647() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %541 = @func_3742() /* ty=Tensor[(16, 4, 11), float64] */;
  %542 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%541, %542)
}

def @func_6134(%var_6104: float32, %var_6105: Tensor[(7, 6, 16), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) {
  %543 = cast(%var_6104, dtype="float32") /* ty=float32 */;
  %544 = cast(%var_6105, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
  %545 = divide(%543, %544) /* ty=Tensor[(7, 6, 16), float32] */;
  %546 = cast(%545, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %547 = shape_of(%var_6105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_6105, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %550 = @func_3475() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) */;
  %551 = not_equal(%548, %549) /* ty=Tensor[(7, 6, 16), bool] */;
  %552 = %550.1;
  (%551, %552)
}

def @func_3606(%var_3573: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %553 = cast(%var_3573, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %554 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %555 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %556 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %557 = erf(%553) /* ty=Tensor[(4, 1, 6), float64] */;
  %558 = %554.0;
  %559 = %555.0;
  %560 = %556.0;
  (%557, %558, %559, %560)
}

def @func_3742() -> Tensor[(16, 4, 11), float64] {
  %561 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %561.0
}

def @func_7052(%var_7048: Tensor[(196), float64], %var_7049: Tensor[(1, 910), float32]) -> (Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
  %562 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
  %563 = cast(%var_7048, dtype="float64") /* ty=Tensor[(196), float64] */;
  %564 = cast(%var_7049, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %565 = cast(meta[relay.Constant][24] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %566 = reshape(%563, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %567 = reshape(%564, newshape=[910]) /* ty=Tensor[(910), float32] */;
  %568 = reshape(%565, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
  %569 = @func_5981(%566, %567, %568) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) */;
  %570 = %562.0;
  %571 = %569.5;
  (%570, %571, %var_7048, %var_7049, meta[relay.Constant][24] /* ty=Tensor[(1152), bool] */)
}

def @func_7144() -> Tensor[(16, 4, 11), uint8] {
  %572 = @func_6591() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %572.1
}

def @func_591() -> Tensor[(16, 4, 11), float64] {
  %573 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  sinh(%573) /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_433(%var_380: Tensor[(7, 10, 13), float32], %var_381: Tensor[(7, 10, 13), float32], %var_410: Tensor[(96, 12), bool]) -> (Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) {
  %574 = cast(%var_381, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %575 = shape_of(%var_380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_380, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = cast(%var_381, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %579 = cast(%var_410, dtype="bool") /* ty=Tensor[(96, 12), bool] */;
  %580 = cast(%var_410, dtype="bool") /* ty=Tensor[(96, 12), bool] */;
  %581 = reshape(%579, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %582 = reshape(%580, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %583 = @func_368(%581, %582) /* ty=Tensor[(16, 6, 12), bool] */;
  %584 = cast(%583, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %585 = cast(%583, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %586 = reshape(%584, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %587 = reshape(%585, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %588 = not_equal(%576, %577) /* ty=Tensor[(7, 10, 13), bool] */;
  %589 = cosh(%578) /* ty=Tensor[(7, 10, 13), float32] */;
  %590 = @func_368(%586, %587) /* ty=Tensor[(16, 6, 12), bool] */;
  (%588, %589, %583, %var_410, %590)
}

def @func_7253() -> (Tensor[(16, 4, 11), float64],) {
  %591 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %592 = %591.0;
  (%592,)
}

def @func_1676() -> (Tensor[(16, 16, 9), float32],) {
  %593 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %594 = %593.2;
  (%594,)
}

def @func_7697() -> (Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) {
  %595 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %596 = cast(meta[relay.Constant][26] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %597 = reshape(%596, newshape=[910]) /* ty=Tensor[(910), float32] */;
  %598 = @func_4366(%597) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %599 = %595.3;
  %600 = %598.0;
  (%599, %600, meta[relay.Constant][26] /* ty=Tensor[(910), float32] */)
}

def @func_6409(%var_6393: Tensor[(5, 78), uint8]) -> (Tensor[(16, 4, 11), uint8], Tensor[(5, 78), uint8], Tensor[(15, 13, 2), float32], Tensor[(16, 4, 11), float64]) {
  %601 = cast(%var_6393, dtype="uint8") /* ty=Tensor[(5, 78), uint8] */;
  %602 = reshape(%601, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %603 = @func_5500(%602) /* ty=Tensor[(15, 13, 2), uint8] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(15, 13, 2), float32] */;
  %605 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %606 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
  %607 = rsqrt(%604) /* ty=Tensor[(15, 13, 2), float32] */;
  %608 = %605.0;
  (%606, %var_6393, %607, %608)
}

def @func_2709() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %609 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %610 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %611 = %609.0;
  %612 = %610.0;
  (%611, %612)
}

def @func_4816(%var_4807: uint64, %var_4808: Tensor[(6, 13, 5), uint64]) -> Tensor[(6, 13, 5), uint64] {
  %613 = cast(%var_4807, dtype="uint64") /* ty=uint64 */;
  %614 = cast(%var_4808, dtype="uint64") /* ty=Tensor[(6, 13, 5), uint64] */;
  bitwise_and(%613, %614) /* ty=Tensor[(6, 13, 5), uint64] */
}

def @func_822() -> (Tensor[(16, 4, 11), float64],) {
  %615 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  (%615,)
}

def @func_3446() -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
  %616 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %618 = log10(%617) /* ty=Tensor[(16, 4, 11), float64] */;
  %619 = cast(%616, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %623 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %624 = less_equal(%621, %622) /* ty=Tensor[(16, 4, 11), bool] */;
  %625 = %623.1;
  (%624, %625)
}

def @func_1911() -> Tensor[(16, 4, 11), float64] {
  %626 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %626.0
}

def @func_1120() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
  %627 = cast(meta[relay.Constant][27] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %628 = cast(meta[relay.Constant][27] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %629 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %630 = reshape(%627, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %631 = reshape(%628, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %632 = reshape(%629, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %633 = @func_433(%630, %631, %632) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %634 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %635 = %633.2;
  (%634, %635, meta[relay.Constant][27] /* ty=Tensor[(910), float32] */, meta[relay.Constant][28] /* ty=Tensor[(1152), bool] */)
}

def @func_7224() -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %636 = cast(meta[relay.Constant][29] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %637 = cast(meta[relay.Constant][30] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %638 = reshape(%636, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %639 = reshape(%637, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %640 = @func_7052(%638, %639) /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) */;
  %641 = @func_5647() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %642 = cast(meta[relay.Constant][31] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %643 = cast(meta[relay.Constant][31] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %644 = reshape(%642, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %645 = reshape(%643, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %646 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %647 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %648 = %640.2;
  %649 = %641.1;
  %650 = @func_368(%644, %645) /* ty=Tensor[(16, 6, 12), bool] */;
  %651 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %652 = %646.0;
  (%647, %648, meta[relay.Constant][29] /* ty=Tensor[(196), float64] */, meta[relay.Constant][30] /* ty=Tensor[(910), float32] */, %649, %650, meta[relay.Constant][31] /* ty=Tensor[(1152), bool] */, %651, %652)
}

def @func_7287() -> Tensor[(16, 4, 11), float64] {
  %653 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %653.0
}

def @func_4608() -> Tensor[(2304), float32] {
  @func_4537() /* ty=Tensor[(2304), float32] */
}

def @func_8734() -> Tensor[(2304), float32] {
  @func_4608() /* ty=Tensor[(2304), float32] */
}

def @func_2908(%var_2905: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
  %654 = cast(%var_2905, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  exp(%654) /* ty=Tensor[(7, 9, 4), float64] */
}

def @func_5824(%var_5810: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), int8], Tensor[(6, 5, 14), float32], Tensor[(420), float32]) {
  %655 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %656 = %655.0;
  %657 = cast(%var_5810, dtype="int8") /* ty=Tensor[(16, 4, 11), int8] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="int8") /* ty=Tensor[(16, 4, 11), int8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %661 = cast(meta[relay.Constant][32] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %662 = reshape(%661, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float32] */;
  %663 = @func_4093(%662) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) */;
  %664 = bitwise_and(%659, %660) /* ty=Tensor[(16, 4, 11), int8] */;
  %665 = %663.0;
  (%664, %665, meta[relay.Constant][32] /* ty=Tensor[(420), float32] */)
}

def @func_2795() -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) {
  %666 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %667 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %668 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %669 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %670 = @func_2247() /* ty=Tensor[(16, 4, 11), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %672 = cast(%670, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %673 = cast(meta[relay.Constant][33] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %674 = reshape(%671, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
  %675 = reshape(%672, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %676 = reshape(%673, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %677 = @func_665(%674, %675, %676) /* ty=(Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) */;
  %678 = %677.2;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
  %680 = %666.0;
  %681 = %667.3;
  %682 = %668.0;
  %683 = %669.0;
  %684 = sinh(%679) /* ty=Tensor[(5, 10), float64] */;
  (%670, %680, %681, meta[relay.Constant][33] /* ty=Tensor[(50), float32] */, %682, %683, %684)
}

def @func_5981(%var_5890: Tensor[(196), float64], %var_5918: Tensor[(910), float32], %var_5919: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) {
  %685 = cast(%var_5918, dtype="float32") /* ty=Tensor[(910), float32] */;
  %686 = cast(%var_5918, dtype="float32") /* ty=Tensor[(910), float32] */;
  %687 = cast(%var_5919, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %688 = reshape(%685, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %689 = reshape(%686, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %690 = reshape(%687, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %691 = @func_433(%688, %689, %690) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %692 = cast(%var_5890, dtype="float64") /* ty=Tensor[(196), float64] */;
  %693 = reshape(%692, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %694 = @func_1368(%693) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) */;
  %695 = %694.2;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %697 = sqrt(%696) /* ty=Tensor[(1500), float64] */;
  %698 = cast(%697, dtype="uint32") /* ty=Tensor[(1500), uint32] */;
  %699 = shape_of(%695, dtype="int32") /* ty=Tensor[(1), int32] */;
  %700 = cast(%695, dtype="uint32") /* ty=Tensor[(1500), uint32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %702 = bitwise_xor(%700, %701) /* ty=Tensor[(1500), uint32] */;
  %703 = cast(%702, dtype="bool") /* ty=Tensor[(1500), bool] */;
  %704 = shape_of(%697, dtype="int32") /* ty=Tensor[(1), int32] */;
  %705 = cast(%697, dtype="bool") /* ty=Tensor[(1500), bool] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?), bool] */;
  %707 = greater_equal(%705, %706) /* ty=Tensor[(1500), bool] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %709 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
  %710 = %691.4;
  %711 = sinh(%708) /* ty=Tensor[(1500), float64] */;
  (%709, %var_5890, %710, %var_5918, %var_5919, %711)
}

def @func_4959() -> (Tensor[(16, 4, 11), float64],) {
  %712 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %713 = %712.2;
  (%713,)
}

def @func_9810() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(6, 5, 10), float32]) {
  %714 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %715 = reshape(%714, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %716 = @func_3632(%715) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %717 = @func_7483() /* ty=Tensor[(?, 5, 10), int16] */;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(?, 5, 10), float32] */;
  %719 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 5, 10), int16] */, dtype="float32") /* ty=Tensor[(6, 5, 10), float32] */;
  %720 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
  %721 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %722 = %716.0;
  %723 = floor_mod(%718, %719) /* ty=Tensor[(6, 5, 10), float32] */;
  (%720, %721, %722, meta[relay.Constant][34] /* ty=Tensor[(576), float64] */, %723)
}

def @func_3830(%var_3809: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %724 = @func_3777() /* ty=Tensor[(16, 4, 11), uint8] */;
  %725 = cast(%var_3809, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = greater(%727, %728) /* ty=Tensor[(16, 4, 11), bool] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %731 = atanh(%730) /* ty=Tensor[(16, 4, 11), float64] */;
  %732 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  (%731, %732)
}

def @func_1303() -> (Tensor[(16, 4, 11), float64],) {
  %733 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %734 = %733.0;
  (%734,)
}

def @func_1565(%var_1544: Tensor[(14, 2, 16), float32], %var_1545: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
  %735 = cast(%var_1545, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %736 = shape_of(%var_1544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_1544, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %739 = cast(meta[relay.Constant][36] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %740 = reshape(%739, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %741 = @func_329(%740) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %742 = floor_mod(%737, %738) /* ty=Tensor[(14, 2, 16), float32] */;
  %743 = %741.0;
  (%742, %743, meta[relay.Constant][36] /* ty=Tensor[(2304), float32] */)
}

def @func_3287() -> (Tensor[(16, 4, 11), uint8],) {
  %744 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%744,)
}

def @func_7618() -> (Tensor[(16, 4, 11), float64],) {
  %745 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%745,)
}

def @func_8058() -> (Tensor[(16, 4, 11), float64],) {
  %746 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %747 = %746.0;
  (%747,)
}

def @func_6568(%var_6531: Tensor[(196), float64], %var_6547: Tensor[(576), float64]) -> (Tensor[(1152), bool], Tensor[(7, 10, 13), bool], Tensor[(728), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(1152), bool]) {
  %748 = cast(meta[relay.Constant][37] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %749 = reshape(%748, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
  %750 = @func_2621(%749) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) */;
  %751 = cast(%var_6531, dtype="float64") /* ty=Tensor[(196), float64] */;
  %752 = reshape(%751, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %753 = @func_3142(%752) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
  %754 = cast(%var_6547, dtype="float64") /* ty=Tensor[(576), float64] */;
  %755 = reshape(%754, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %756 = @func_3632(%755) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %757 = @func_6486() /* ty=Tensor[(1152), bool] */;
  %758 = cast(%757, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %759 = reshape(%758, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %760 = @func_2477(%759) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) */;
  %761 = %750.1;
  %762 = %753.0;
  %763 = %756.0;
  %764 = %760.1;
  (%757, %761, meta[relay.Constant][37] /* ty=Tensor[(728), float64] */, %762, %var_6531, %763, %var_6547, %764)
}

def @func_6886() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %765 = @func_4959() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %766 = %765.0;
  %767 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%766, %767)
}

def @func_1471() -> Tensor[(16, 4, 11), uint8] {
  %768 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %769 = %768.0;
  %770 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(16, 4, 11), uint8] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="uint8") /* ty=Tensor[(16, 4, 11), uint8] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%772, %773) /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_2079() -> (Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  %774 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %775 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %776 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %777 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %778 = %774.1;
  %779 = %775.4;
  %780 = %776.0;
  %781 = %777.2;
  (%778, %779, %780, %781)
}

def @func_8281() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 4, 11), float64]) {
  %782 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %783 = @func_7224() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %784 = cast(meta[relay.Constant][39] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %785 = reshape(%784, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %786 = @func_3142(%785) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
  %787 = %782.0;
  %788 = %783.0;
  %789 = %786.0;
  %790 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
  (%787, %788, %789, meta[relay.Constant][39] /* ty=Tensor[(196), float64] */, %790)
}

def @func_889() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %791 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %792 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  (%791, %792)
}

def @func_4093(%var_4086: Tensor[(6, 5, 14), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) {
  %793 = cast(%var_4086, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %794 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
  %795 = log10(%793) /* ty=Tensor[(6, 5, 14), float32] */;
  %796 = %794.0;
  (%795, %796)
}

def @func_2118() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %797 = @func_1401() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %798 = %797.0;
  %799 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%798, %799)
}

def @func_8989() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) {
  %800 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %801 = cast(meta[relay.Constant][40] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %802 = reshape(%801, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %803 = @func_6653(%802) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) */;
  %804 = %800.1;
  %805 = %803.0;
  (%804, %805, meta[relay.Constant][40] /* ty=Tensor[(576), float64] */)
}

def @func_5291() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), int64]) {
  %806 = @func_1890() /* ty=(Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) */;
  %807 = @func_1890() /* ty=(Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) */;
  %808 = %806.1;
  %809 = %807.0;
  (%808, %809)
}

def @func_6653(%var_6643: Tensor[(576), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) {
  %810 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %811 = cast(%var_6643, dtype="float64") /* ty=Tensor[(576), float64] */;
  %812 = reshape(%811, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %813 = @func_3632(%812) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %814 = %810.0;
  %815 = %813.0;
  %816 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%814, %815, %var_6643, %816)
}

def @func_8553(%var_8527: Tensor[(12, 9, 4), float32]) -> (Tensor[(12, 9, 4), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %817 = cast(%var_8527, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
  %818 = @func_6603() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) */;
  %819 = cosh(%817) /* ty=Tensor[(12, 9, 4), float32] */;
  %820 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %821 = %818.0;
  (%819, %820, %821)
}

def @func_9341() -> Tensor[(16, 4, 11), uint8] {
  %822 = @func_3382() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */;
  %822.1
}

def @func_8962(%var_8939: Tensor[(196, 1), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float32], Tensor[(16, 16, 9), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(196, 1), float64], Tensor[(16, 4, 11), uint8]) {
  %823 = @func_6603() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) */;
  %824 = %823.1;
  %825 = cast(%824, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %826 = cast(%824, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %827 = cast(%824, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %828 = reshape(%827, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %829 = @func_329(%828) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %830 = cast(%824, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %831 = @func_7618() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %832 = cast(%var_8939, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %833 = reshape(%832, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %834 = @func_3142(%833) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
  %835 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
  %836 = rsqrt(%825) /* ty=Tensor[(16, 16, 9), float64] */;
  %837 = cosh(%826) /* ty=Tensor[(16, 16, 9), float64] */;
  %838 = %829.0;
  %839 = cos(%830) /* ty=Tensor[(16, 16, 9), float64] */;
  %840 = %831.0;
  %841 = %834.1;
  %842 = %835.0;
  (%836, %837, %838, %839, %840, %841, %var_8939, %842)
}

def @func_4194() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %843 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %844 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %845 = @func_2414() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %846 = %843.0;
  %847 = %844.0;
  %848 = %845.0;
  %849 = @func_3981() /* ty=Tensor[(16, 4, 11), float64] */;
  (%846, %847, %848, %849)
}

def @func_6095() -> (Tensor[(16, 4, 11), float64],) {
  %850 = @func_3500() /* ty=Tensor[(16, 4, 11), float64] */;
  (%850,)
}

def @func_1903() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %851 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %852 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %853 = %851.0;
  %854 = %852.1;
  (%853, %854)
}

def @func_1067() -> (Tensor[(16, 4, 11), float64],) {
  %855 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %856 = %855.1;
  (%856,)
}

def @func_7646(%var_7630: Tensor[(5, 6, 3), uint8], %var_7631: Tensor[(5, 6, 3), uint8]) -> (Tensor[(5, 6, 3), float64],) {
  %857 = cast(%var_7631, dtype="uint8") /* ty=Tensor[(5, 6, 3), uint8] */;
  %858 = shape_of(%var_7630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%var_7630, dtype="uint8") /* ty=Tensor[(5, 6, 3), uint8] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %861 = maximum(%859, %860) /* ty=Tensor[(5, 6, 3), uint8] */;
  %862 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 6, 3), uint8] */, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%861, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %866 = mod(%864, %865) /* ty=Tensor[(5, 6, 3), float64] */;
  (%866,)
}

def @func_1890() -> (Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) {
  %867 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %868 = %867.0;
  %869 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 4, 11), float64] */, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %873 = bitwise_xor(%871, %872) /* ty=Tensor[(16, 4, 11), int64] */;
  %874 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  (%873, %874)
}

def @func_1792() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %875 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %876 = @func_1401() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %877 = %875.0;
  %878 = %876.0;
  (%877, %878)
}

def @func_5025(%var_5011: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64],) {
  %879 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %880 = %879.3;
  %881 = cast(%var_5011, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %885 = mod(%883, %884) /* ty=Tensor[(16, 4, 11), float64] */;
  (%885,)
}

def @func_6357() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) {
  %886 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %887 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %888 = %887.3;
  %889 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 6, 12), float64] */, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %893 = %886.0;
  %894 = power(%891, %892) /* ty=Tensor[(16, 6, 12), float32] */;
  (%893, %894)
}

def @func_1390() -> (Tensor[(16, 4, 11), float64],) {
  %895 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %896 = %895.0;
  (%896,)
}

def @func_1235() -> (Tensor[(16, 4, 11), float64],) {
  %897 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %898 = %897.0;
  (%898,)
}

def @func_5386() -> (Tensor[(16, 4, 11), uint8],) {
  %899 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %900 = %899.0;
  (%900,)
}

def @func_9691() -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
  %901 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
  %902 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %903 = %901.0;
  %904 = %902.1;
  (%903, %904)
}

def @func_2477(%var_2441: Tensor[(16, 6, 12), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) {
  %905 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %906 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %907 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %908 = cast(meta[relay.Constant][44] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %909 = cast(meta[relay.Constant][44] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %910 = reshape(%908, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %911 = reshape(%909, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %912 = @func_368(%910, %911) /* ty=Tensor[(16, 6, 12), bool] */;
  %913 = cast(%var_2441, dtype="int16") /* ty=Tensor[(16, 6, 12), int16] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%912, dtype="int16") /* ty=Tensor[(16, 6, 12), int16] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %917 = subtract(%915, %916) /* ty=Tensor[(16, 6, 12), int16] */;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %919 = sinh(%918) /* ty=Tensor[(16, 6, 12), float32] */;
  %920 = cast(%917, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %921 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%919, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %924 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %925 = %905.2;
  %926 = %906.0;
  %927 = %907.0;
  %928 = greater_equal(%922, %923) /* ty=Tensor[(16, 6, 12), bool] */;
  (%924, meta[relay.Constant][44] /* ty=Tensor[(1152), bool] */, %925, %926, %927, %928)
}

def @func_9515() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float32]) {
  %929 = @func_9121() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %930 = @func_1390() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %931 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
  %932 = %929.0;
  %933 = %930.0;
  %934 = %931.1;
  (%932, %933, %934)
}

def @func_5533() -> (Tensor[(16, 4, 11), uint8],) {
  %935 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %936 = %935.0;
  (%936,)
}

def @func_4082() -> (Tensor[(16, 4, 11), bool],) {
  %937 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
  %938 = %937.0;
  (%938,)
}

def @func_759() -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
  %939 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 5), float32] */;
  %940 = reshape(%939, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %941 = @func_268(%940) /* ty=Tensor[(1, 5, 10), float32] */;
  %942 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 5), float32] */, dtype="int16") /* ty=Tensor[(10, 5), int16] */;
  %943 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%941, dtype="int16") /* ty=Tensor[(1, 5, 10), int16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %946 = cast(meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %947 = reshape(%946, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %948 = @func_329(%947) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %949 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %950 = right_shift(%944, %945) /* ty=Tensor[(?, 5, 10), int16] */;
  %951 = %948.0;
  (%949, %950, %951, meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */)
}

def @func_8021() -> (Tensor[(16, 4, 11), float64],) {
  %952 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %953 = %952.0;
  (%953,)
}

def @func_5500(%var_5494: Tensor[(15, 13, 2), uint8]) -> Tensor[(15, 13, 2), uint8] {
  %954 = cast(%var_5494, dtype="uint8") /* ty=Tensor[(15, 13, 2), uint8] */;
  %955 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="uint8") /* ty=Tensor[(15, 13, 2), uint8] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%956, %957) /* ty=Tensor[(15, 13, 2), uint8] */
}

def @func_7014() -> (Tensor[(2304), float32],) {
  %958 = @func_4608() /* ty=Tensor[(2304), float32] */;
  (%958,)
}

def @func_4366(%var_4357: Tensor[(910), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
  %959 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %960 = %959.0;
  %961 = cast(%960, dtype="float32") /* ty=Tensor[(?, 5, 10), float32] */;
  %962 = cast(%var_4357, dtype="float32") /* ty=Tensor[(910), float32] */;
  %963 = cast(%var_4357, dtype="float32") /* ty=Tensor[(910), float32] */;
  %964 = cast(meta[relay.Constant][48] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %965 = reshape(%962, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %966 = reshape(%963, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %967 = reshape(%964, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %968 = @func_433(%965, %966, %967) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %969 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %970 = log10(%961) /* ty=Tensor[(?, 5, 10), float32] */;
  %971 = %968.3;
  (%969, %970, %971, %var_4357, meta[relay.Constant][48] /* ty=Tensor[(1152), bool] */)
}

def @func_8164(%var_8128: Tensor[(16, 12, 3), float64], %var_8146: Tensor[(32), uint32], %var_8147: Tensor[(128), uint32]) -> (Tensor[(16, 12, 3), float64], Tensor[(16, 4, 11), float64], Tensor[(32), uint32], Tensor[(128), uint32]) {
  %972 = cast(%var_8128, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
  %973 = cast(%var_8146, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %974 = cast(%var_8147, dtype="uint32") /* ty=Tensor[(128), uint32] */;
  %975 = cast(%var_8147, dtype="uint32") /* ty=Tensor[(128), uint32] */;
  %976 = reshape(%973, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), uint32] */;
  %977 = reshape(%974, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), uint32] */;
  %978 = reshape(%975, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), uint32] */;
  %979 = @func_3214(%976, %977, %978) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) */;
  %980 = tan(%972) /* ty=Tensor[(16, 12, 3), float64] */;
  %981 = %979.0;
  (%980, %981, %var_8146, %var_8147)
}

def @func_9400() -> Tensor[(?, 5, 10), int16] {
  @func_7483() /* ty=Tensor[(?, 5, 10), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1792() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %0 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %1 = @func_1401() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_6095() -> (Tensor[(16, 4, 11), float64],) {
  %4 = @func_3500() /* ty=Tensor[(16, 4, 11), float64] */;
  (%4,)
}

def @func_6617() -> Tensor[(1152), bool] {
  @func_6486() /* ty=Tensor[(1152), bool] */
}

def @func_4570() -> (Tensor[(16, 4, 11), float64],) {
  %5 = @func_3742() /* ty=Tensor[(16, 4, 11), float64] */;
  (%5,)
}

def @func_4709(%var_4668: Tensor[(9, 13, 11), int32], %var_4669: Tensor[(9, 13, 11), int32]) -> (Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %6 = cast(%var_4669, dtype="int32") /* ty=Tensor[(9, 13, 11), int32] */;
  %7 = shape_of(%var_4668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%var_4668, dtype="int32") /* ty=Tensor[(9, 13, 11), int32] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %12 = reshape(%10, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %13 = reshape(%11, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %14 = cast(%var_4669, dtype="float64") /* ty=Tensor[(9, 13, 11), float64] */;
  %15 = sinh(%14) /* ty=Tensor[(9, 13, 11), float64] */;
  %16 = cast(%15, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %17 = shape_of(%var_4669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%var_4669, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %20 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %21 = subtract(%8, %9) /* ty=Tensor[(9, 13, 11), int32] */;
  %22 = @func_368(%12, %13) /* ty=Tensor[(16, 6, 12), bool] */;
  %23 = equal(%18, %19) /* ty=Tensor[(9, 13, 11), bool] */;
  %24 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  %25 = %20.1;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(1152), bool] */, %23, %24, %25)
}

def @func_3023() -> (Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) {
  %26 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %28 = reshape(%27, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %29 = @func_329(%28) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %32 = tan(%31) /* ty=Tensor[(16, 16, 9), float64] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
  %34 = asin(%33) /* ty=Tensor[(16, 16, 9), float32] */;
  %35 = cast(%34, dtype="int8") /* ty=Tensor[(16, 16, 9), int8] */;
  %36 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%32, dtype="int8") /* ty=Tensor[(16, 16, 9), int8] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %39 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %40 = %26.3;
  %41 = multiply(%37, %38) /* ty=Tensor[(16, 16, 9), int8] */;
  %42 = %39.0;
  (%40, meta[relay.Constant][1] /* ty=Tensor[(2304), float32] */, %41, %42)
}

def @func_4195() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %50 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
    %43 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %44 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %45 = @func_2414() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %46 = %43.0;
    %47 = %44.0;
    %48 = %45.0;
    %49 = @func_3981() /* ty=Tensor[(16, 4, 11), float64] */;
    (%46, %47, %48, %49)
  };
  %50() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_5502(%var_5501: Tensor[(15, 13, 2), uint8]) -> Tensor[(15, 13, 2), uint8] {
  %55 = fn (%var_5494: Tensor[(15, 13, 2), uint8]) -> Tensor[(15, 13, 2), uint8] {
    %51 = cast(%var_5494, dtype="uint8") /* ty=Tensor[(15, 13, 2), uint8] */;
    %52 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="uint8") /* ty=Tensor[(15, 13, 2), uint8] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    logical_xor(%53, %54) /* ty=Tensor[(15, 13, 2), uint8] */
  };
  %55(%var_5501) /* ty=Tensor[(15, 13, 2), uint8] */
}

def @func_4037() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8]) {
  @func_4035() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8]) */
}

def @func_1371(%var_1369: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) {
  @func_1368(%var_1369) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) */
}

def @func_6306() -> (Tensor[(16, 4, 11), float64],) {
  %56 = @func_6095() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %57 = %56.0;
  (%57,)
}

def @func_6813(%var_6811: Tensor[(2304), float32]) -> (Tensor[(2304), float64],) {
  @func_6810(%var_6811) /* ty=(Tensor[(2304), float64],) */
}

def @func_7397(%var_7372: Tensor[(6, 15, 13), int32], %var_7391: Tensor[(48, 24), bool]) -> (Tensor[(6, 15, 13), int32], Tensor[(16, 6, 12), bool], Tensor[(48, 24), bool]) {
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 15, 13), int32] */;
  %59 = shape_of(%var_7372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%var_7372, dtype="int32") /* ty=Tensor[(6, 15, 13), int32] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %62 = cast(%var_7391, dtype="bool") /* ty=Tensor[(48, 24), bool] */;
  %63 = cast(%var_7391, dtype="bool") /* ty=Tensor[(48, 24), bool] */;
  %64 = reshape(%62, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %65 = reshape(%63, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %66 = subtract(%60, %61) /* ty=Tensor[(6, 15, 13), int32] */;
  %67 = @func_368(%64, %65) /* ty=Tensor[(16, 6, 12), bool] */;
  (%66, %67, %var_7391)
}

def @func_760() -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
  %81 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
    %68 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 5), float32] */;
    %69 = reshape(%68, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
    %70 = @func_268(%69) /* ty=Tensor[(1, 5, 10), float32] */;
    %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 5), float32] */, dtype="int16") /* ty=Tensor[(10, 5), int16] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%70, dtype="int16") /* ty=Tensor[(1, 5, 10), int16] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %76 = reshape(%75, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
    %77 = @func_329(%76) /* ty=(Tensor[(16, 16, 9), float32],) */;
    %78 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
    %79 = right_shift(%73, %74) /* ty=Tensor[(?, 5, 10), int16] */;
    %80 = %77.0;
    (%78, %79, %80, meta[relay.Constant][5] /* ty=Tensor[(2304), float32] */)
  };
  %81() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */
}

def @func_7649(%var_7647: Tensor[(5, 6, 3), uint8], %var_7648: Tensor[(5, 6, 3), uint8]) -> (Tensor[(5, 6, 3), float64],) {
  %92 = fn (%var_7630: Tensor[(5, 6, 3), uint8], %var_7631: Tensor[(5, 6, 3), uint8]) -> (Tensor[(5, 6, 3), float64],) {
    %82 = cast(%var_7631, dtype="uint8") /* ty=Tensor[(5, 6, 3), uint8] */;
    %83 = shape_of(%var_7630, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(%var_7630, dtype="uint8") /* ty=Tensor[(5, 6, 3), uint8] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %86 = maximum(%84, %85) /* ty=Tensor[(5, 6, 3), uint8] */;
    %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 6, 3), uint8] */, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
    %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%86, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %91 = mod(%89, %90) /* ty=Tensor[(5, 6, 3), float64] */;
    (%91,)
  };
  %92(%var_7647, %var_7648) /* ty=(Tensor[(5, 6, 3), float64],) */
}

def @func_8775(%var_8773: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) {
  @func_8772(%var_8773) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) */
}

def @func_9622() -> Tensor[(1152), bool] {
  %93 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %93.0
}

def @func_6888() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  @func_6886() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_1677() -> (Tensor[(16, 16, 9), float32],) {
  %96 = fn () -> (Tensor[(16, 16, 9), float32],) {
    %94 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
    %95 = %94.2;
    (%95,)
  };
  %96() /* ty=(Tensor[(16, 16, 9), float32],) */
}

def @func_6409(%var_6393: Tensor[(5, 78), uint8]) -> (Tensor[(16, 4, 11), uint8], Tensor[(5, 78), uint8], Tensor[(15, 13, 2), float32], Tensor[(16, 4, 11), float64]) {
  %97 = cast(%var_6393, dtype="uint8") /* ty=Tensor[(5, 78), uint8] */;
  %98 = reshape(%97, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %99 = @func_5500(%98) /* ty=Tensor[(15, 13, 2), uint8] */;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(15, 13, 2), float32] */;
  %101 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %102 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
  %103 = rsqrt(%100) /* ty=Tensor[(15, 13, 2), float32] */;
  %104 = %101.0;
  (%102, %var_6393, %103, %104)
}

def @func_9343() -> Tensor[(16, 4, 11), uint8] {
  @func_9341() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_7710() -> (Tensor[(16, 4, 11), uint8],) {
  %107 = fn () -> (Tensor[(16, 4, 11), uint8],) {
    %105 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %106 = %105.0;
    (%106,)
  };
  %107() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_5826(%var_5825: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), int8], Tensor[(6, 5, 14), float32], Tensor[(420), float32]) {
  %119 = fn (%var_5810: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), int8], Tensor[(6, 5, 14), float32], Tensor[(420), float32]) {
    %108 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %109 = %108.0;
    %110 = cast(%var_5810, dtype="int8") /* ty=Tensor[(16, 4, 11), int8] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="int8") /* ty=Tensor[(16, 4, 11), int8] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %115 = reshape(%114, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float32] */;
    %116 = @func_4093(%115) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) */;
    %117 = bitwise_and(%112, %113) /* ty=Tensor[(16, 4, 11), int8] */;
    %118 = %116.0;
    (%117, %118, meta[relay.Constant][7] /* ty=Tensor[(420), float32] */)
  };
  %119(%var_5825) /* ty=(Tensor[(16, 4, 11), int8], Tensor[(6, 5, 14), float32], Tensor[(420), float32]) */
}

def @func_9692() -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
  %124 = fn () -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
    %120 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
    %121 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
    %122 = %120.0;
    %123 = %121.1;
    (%122, %123)
  };
  %124() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */
}

def @func_2318() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %125 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %126 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %127 = %125.0;
  %128 = %126.0;
  %129 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%127, %128, %129)
}

def @func_9558() -> (Tensor[(576), float64], Tensor[(2304), float64], Tensor[(2304), float32]) {
  %136 = fn () -> (Tensor[(576), float64], Tensor[(2304), float64], Tensor[(2304), float32]) {
    %130 = @func_8989() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) */;
    %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %132 = reshape(%131, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
    %133 = @func_6810(%132) /* ty=(Tensor[(2304), float64],) */;
    %134 = %130.2;
    %135 = %133.0;
    (%134, %135, meta[relay.Constant][8] /* ty=Tensor[(2304), float32] */)
  };
  %136() /* ty=(Tensor[(576), float64], Tensor[(2304), float64], Tensor[(2304), float32]) */
}

def @func_3446() -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
  %137 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
  %138 = cast(%137, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %139 = log10(%138) /* ty=Tensor[(16, 4, 11), float64] */;
  %140 = cast(%137, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%139, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %144 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %145 = less_equal(%142, %143) /* ty=Tensor[(16, 4, 11), bool] */;
  %146 = %144.1;
  (%145, %146)
}

def @func_7145() -> Tensor[(16, 4, 11), uint8] {
  %148 = fn () -> Tensor[(16, 4, 11), uint8] {
    %147 = @func_6591() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
    %147.1
  };
  %148() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_7937() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) {
  %157 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) {
    %149 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 117), int32] */, dtype="int32") /* ty=Tensor[(11, 117), int32] */;
    %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %151 = reshape(%149, newshape=[429, 3]) /* ty=Tensor[(429, 3), int32] */;
    %152 = reshape(%150, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
    %153 = @func_6067(%151, %152) /* ty=(Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) */;
    %154 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
    %155 = @func_3500() /* ty=Tensor[(16, 4, 11), float64] */;
    %156 = %153.0;
    (%154, %155, %156, meta[relay.Constant][9] /* ty=Tensor[(11, 117), int32] */, meta[relay.Constant][10] /* ty=Tensor[(2304), float32] */)
  };
  %157() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) */
}

def @func_1313() -> (Tensor[(16, 4, 11), float64],) {
  @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_3501() -> Tensor[(16, 4, 11), float64] {
  %158 = fn () -> Tensor[(16, 4, 11), float64] {
    @func_807() /* ty=Tensor[(16, 4, 11), float64] */
  };
  %158() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_4369(%var_4367: Tensor[(910), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
  @func_4366(%var_4367) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */
}

def @func_8772(%var_8751: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) {
  %159 = @func_6306() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %160 = %159.0;
  %161 = cast(%var_8751, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%160, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %165 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %166 = divide(%163, %164) /* ty=Tensor[(16, 4, 11), float32] */;
  %167 = %165.1;
  (%166, %167)
}

def @func_2249() -> Tensor[(16, 4, 11), float32] {
  @func_2247() /* ty=Tensor[(16, 4, 11), float32] */
}

def @func_331(%var_330: Tensor[(16, 16, 9), float32]) -> (Tensor[(16, 16, 9), float32],) {
  %170 = fn (%var_325: Tensor[(16, 16, 9), float32]) -> (Tensor[(16, 16, 9), float32],) {
    %168 = cast(%var_325, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
    %169 = log2(%168) /* ty=Tensor[(16, 16, 9), float32] */;
    (%169,)
  };
  %170(%var_330) /* ty=(Tensor[(16, 16, 9), float32],) */
}

def @func_1750() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %171 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %172 = cast(%171, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %173 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %174 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %175 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %176 = reshape(%175, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %177 = @func_329(%176) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %178 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %179 = cos(%172) /* ty=Tensor[(16, 4, 11), float64] */;
  %180 = %173.0;
  %181 = %174.0;
  %182 = %177.0;
  %183 = %178.0;
  (%179, %180, %181, %182, meta[relay.Constant][11] /* ty=Tensor[(2304), float32] */, %183)
}

def @func_1473() -> Tensor[(16, 4, 11), uint8] {
  @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_3606(%var_3573: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %184 = cast(%var_3573, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %185 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %186 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %187 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %188 = erf(%184) /* ty=Tensor[(4, 1, 6), float64] */;
  %189 = %185.0;
  %190 = %186.0;
  %191 = %187.0;
  (%188, %189, %190, %191)
}

def @func_5748() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %192 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %193 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %194 = %192.0;
  %195 = %193.1;
  (%194, %195)
}

def @func_4366(%var_4357: Tensor[(910), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
  %196 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(?, 5, 10), float32] */;
  %199 = cast(%var_4357, dtype="float32") /* ty=Tensor[(910), float32] */;
  %200 = cast(%var_4357, dtype="float32") /* ty=Tensor[(910), float32] */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %202 = reshape(%199, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %203 = reshape(%200, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %204 = reshape(%201, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %205 = @func_433(%202, %203, %204) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %206 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %207 = log10(%198) /* ty=Tensor[(?, 5, 10), float32] */;
  %208 = %205.3;
  (%206, %207, %208, %var_4357, meta[relay.Constant][12] /* ty=Tensor[(1152), bool] */)
}

def @func_1752() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */
}

def @func_5387() -> (Tensor[(16, 4, 11), uint8],) {
  %211 = fn () -> (Tensor[(16, 4, 11), uint8],) {
    %209 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %210 = %209.0;
    (%210,)
  };
  %211() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_5593(%var_5591: float32, %var_5592: Tensor[(13, 2, 7), float32]) -> (Tensor[(13, 2, 7), bool],) {
  @func_5589(%var_5591, %var_5592) /* ty=(Tensor[(13, 2, 7), bool],) */
}

def @func_2621(%var_2600: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
  %212 = cast(%var_2600, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  %213 = sinh(%212) /* ty=Tensor[(4, 13, 14), float64] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %215 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %216 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %217 = cast(meta[relay.Constant][14] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %218 = reshape(%215, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %219 = reshape(%216, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %220 = reshape(%217, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %221 = @func_433(%218, %219, %220) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %222 = erf(%214) /* ty=Tensor[(4, 13, 14), float32] */;
  %223 = %221.0;
  (%222, %223, meta[relay.Constant][13] /* ty=Tensor[(1, 910), float32] */, meta[relay.Constant][14] /* ty=Tensor[(1152), bool] */)
}

def @func_3782() -> Tensor[(16, 4, 11), uint8] {
  @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_2416() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_2414() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_7224() -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %224 = cast(meta[relay.Constant][15] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %226 = reshape(%224, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %227 = reshape(%225, newshape=[1, 910]) /* ty=Tensor[(1, 910), float32] */;
  %228 = @func_7052(%226, %227) /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) */;
  %229 = @func_5647() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
  %230 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %232 = reshape(%230, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %233 = reshape(%231, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %234 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %235 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %236 = %228.2;
  %237 = %229.1;
  %238 = @func_368(%232, %233) /* ty=Tensor[(16, 6, 12), bool] */;
  %239 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %240 = %234.0;
  (%235, %236, meta[relay.Constant][15] /* ty=Tensor[(196), float64] */, meta[relay.Constant][16] /* ty=Tensor[(910), float32] */, %237, %238, meta[relay.Constant][17] /* ty=Tensor[(1152), bool] */, %239, %240)
}

def @func_889() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %241 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %242 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
  (%241, %242)
}

def @func_6810(%var_6801: Tensor[(2304), float32]) -> (Tensor[(2304), float64],) {
  %243 = @func_4608() /* ty=Tensor[(2304), float32] */;
  %244 = cast(%var_6801, dtype="int8") /* ty=Tensor[(2304), int8] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(1), int32] */;
  %246 = cast(%243, dtype="int8") /* ty=Tensor[(2304), int8] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?), int8] */;
  %248 = add(%246, %247) /* ty=Tensor[(2304), int8] */;
  %249 = cast(%243, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(1), int32] */;
  %251 = cast(%248, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?), float64] */;
  %253 = floor_divide(%251, %252) /* ty=Tensor[(2304), float64] */;
  (%253,)
}

def @func_6836() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  %254 = @func_4551() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %255 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %256 = cast(meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %257 = reshape(%256, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %258 = %254.0;
  %259 = %255.0;
  %260 = @func_3062(%257) /* ty=Tensor[(14, 8, 11), float64] */;
  (%258, %259, %260, meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */)
}

def @func_2128() -> (Tensor[(16, 4, 11), uint8],) {
  @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_5750() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_5748() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_7485() -> Tensor[(?, 5, 10), int16] {
  @func_7483() /* ty=Tensor[(?, 5, 10), int16] */
}

def @func_1121() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
  %270 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) {
    %261 = cast(meta[relay.Constant][19] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %263 = cast(meta[relay.Constant][20] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %264 = reshape(%261, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %265 = reshape(%262, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %266 = reshape(%263, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
    %267 = @func_433(%264, %265, %266) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
    %268 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
    %269 = %267.2;
    (%268, %269, meta[relay.Constant][19] /* ty=Tensor[(910), float32] */, meta[relay.Constant][20] /* ty=Tensor[(1152), bool] */)
  };
  %270() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */
}

def @func_2320() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_6653(%var_6643: Tensor[(576), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) {
  %271 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %272 = cast(%var_6643, dtype="float64") /* ty=Tensor[(576), float64] */;
  %273 = reshape(%272, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %274 = @func_3632(%273) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %275 = %271.0;
  %276 = %274.0;
  %277 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%275, %276, %var_6643, %277)
}

def @func_3142(%var_3139: Tensor[(196), float64]) -> (Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) {
  %278 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %279 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %282 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %283 = cast(%var_3139, dtype="float64") /* ty=Tensor[(196), float64] */;
  %284 = reshape(%283, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %285 = @func_1368(%284) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) */;
  %286 = %278.4;
  %287 = asin(%281) /* ty=Tensor[(16, 4, 11), float64] */;
  %288 = %282.0;
  %289 = %285.2;
  (%286, %287, %288, %289, %var_3139)
}

def @func_3777() -> Tensor[(16, 4, 11), uint8] {
  %290 = @func_3382() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */;
  %290.0
}

def @func_7421(%var_7411: Tensor[(10, 16, 15), uint16], %var_7412: Tensor[(10, 16, 15), uint16]) -> Tensor[(10, 16, 15), uint16] {
  %291 = cast(%var_7412, dtype="uint16") /* ty=Tensor[(10, 16, 15), uint16] */;
  %292 = shape_of(%var_7411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_7411, dtype="uint16") /* ty=Tensor[(10, 16, 15), uint16] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%293, %294) /* ty=Tensor[(10, 16, 15), uint16] */
}

def @func_7347(%var_7337: Tensor[(448), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(448), float32]) {
  %295 = cast(%var_7337, dtype="float32") /* ty=Tensor[(448), float32] */;
  %296 = cast(%var_7337, dtype="float32") /* ty=Tensor[(448), float32] */;
  %297 = reshape(%295, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %298 = reshape(%296, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %299 = @func_1565(%297, %298) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %300 = @func_5162() /* ty=Tensor[(16, 4, 11), float64] */;
  %301 = %299.1;
  (%300, %301, %var_7337)
}

def @func_865(%var_829: Tensor[(15, 10, 10), uint16], %var_830: Tensor[(15, 10, 10), uint16]) -> (Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) {
  %302 = cast(%var_830, dtype="uint16") /* ty=Tensor[(15, 10, 10), uint16] */;
  %303 = shape_of(%var_829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_829, dtype="uint16") /* ty=Tensor[(15, 10, 10), uint16] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %306 = cast(%var_830, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %307 = shape_of(%var_829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_829, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %310 = cast(meta[relay.Constant][21] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %311 = cast(meta[relay.Constant][21] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %312 = reshape(%310, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %313 = reshape(%311, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %314 = logical_xor(%304, %305) /* ty=Tensor[(15, 10, 10), uint16] */;
  %315 = floor_divide(%308, %309) /* ty=Tensor[(15, 10, 10), float32] */;
  %316 = @func_368(%312, %313) /* ty=Tensor[(16, 6, 12), bool] */;
  (%314, %315, %316, meta[relay.Constant][21] /* ty=Tensor[(1152), bool] */)
}

def @func_1912() -> Tensor[(16, 4, 11), float64] {
  %318 = fn () -> Tensor[(16, 4, 11), float64] {
    %317 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %317.0
  };
  %318() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_823() -> (Tensor[(16, 4, 11), float64],) {
  %320 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %319 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
    (%319,)
  };
  %320() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_2710() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %325 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
    %321 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
    %322 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %323 = %321.0;
    %324 = %322.0;
    (%323, %324)
  };
  %325() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_5025(%var_5011: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64],) {
  %326 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %327 = %326.3;
  %328 = cast(%var_5011, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %332 = mod(%330, %331) /* ty=Tensor[(16, 4, 11), float64] */;
  (%332,)
}

def @func_6591() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %333 = @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %334 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %335 = %333.0;
  %336 = %334.0;
  (%335, %336)
}

def @func_1305() -> (Tensor[(16, 4, 11), float64],) {
  @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_2079() -> (Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  %337 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %338 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %339 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %340 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %341 = %337.1;
  %342 = %338.4;
  %343 = %339.0;
  %344 = %340.2;
  (%341, %342, %343, %344)
}

def @func_2126() -> (Tensor[(16, 4, 11), uint8],) {
  %345 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%345,)
}

def @func_8734() -> Tensor[(2304), float32] {
  @func_4608() /* ty=Tensor[(2304), float32] */
}

def @func_8496() -> (Tensor[(14, 8, 11), float64],) {
  %348 = fn () -> (Tensor[(14, 8, 11), float64],) {
    %346 = @func_6836() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */;
    %347 = %346.2;
    (%347,)
  };
  %348() /* ty=(Tensor[(14, 8, 11), float64],) */
}

def @func_4093(%var_4086: Tensor[(6, 5, 14), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) {
  %349 = cast(%var_4086, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %350 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
  %351 = log10(%349) /* ty=Tensor[(6, 5, 14), float32] */;
  %352 = %350.0;
  (%351, %352)
}

def @func_4713(%var_4711: Tensor[(9, 13, 11), int32], %var_4712: Tensor[(9, 13, 11), int32]) -> (Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_4709(%var_4711, %var_4712) /* ty=(Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_5028(%var_5026: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64],) {
  @func_5025(%var_5026) /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_4608() -> Tensor[(2304), float32] {
  @func_4537() /* ty=Tensor[(2304), float32] */
}

def @func_270(%var_269: Tensor[(1, 5, 10), float32]) -> Tensor[(1, 5, 10), float32] {
  %354 = fn (%var_264: Tensor[(1, 5, 10), float32]) -> Tensor[(1, 5, 10), float32] {
    %353 = cast(%var_264, dtype="float32") /* ty=Tensor[(1, 5, 10), float32] */;
    rsqrt(%353) /* ty=Tensor[(1, 5, 10), float32] */
  };
  %354(%var_269) /* ty=Tensor[(1, 5, 10), float32] */
}

def @func_5148() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) {
  %369 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) {
    %355 = @func_2414() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %356 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
    %357 = @func_4495() /* ty=Tensor[(11, 16, 8), int8] */;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(11, 16, 8), float64] */;
    %359 = atan(%358) /* ty=Tensor[(11, 16, 8), float64] */;
    %360 = cast(%359, dtype="float32") /* ty=Tensor[(11, 16, 8), float32] */;
    %361 = acosh(%360) /* ty=Tensor[(11, 16, 8), float32] */;
    %362 = cast(%357, dtype="uint64") /* ty=Tensor[(11, 16, 8), uint64] */;
    %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
    %364 = cast(%361, dtype="uint64") /* ty=Tensor[(11, 16, 8), uint64] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %366 = %355.0;
    %367 = %356.3;
    %368 = subtract(%364, %365) /* ty=Tensor[(11, 16, 8), uint64] */;
    (%366, %367, %368)
  };
  %369() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) */
}

def @func_5769() -> Tensor[(16, 4, 11), float64] {
  %371 = fn () -> Tensor[(16, 4, 11), float64] {
    %370 = @func_3485() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %370.0
  };
  %371() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_7106() -> Tensor[(16, 4, 11), float64] {
  %373 = fn () -> Tensor[(16, 4, 11), float64] {
    %372 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
    %372.0
  };
  %373() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_1794() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_7698() -> (Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) {
  %380 = fn () -> (Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) {
    %374 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
    %375 = cast(meta[relay.Constant][22] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %376 = reshape(%375, newshape=[910]) /* ty=Tensor[(910), float32] */;
    %377 = @func_4366(%376) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), float32], Tensor[(96, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
    %378 = %374.3;
    %379 = %377.0;
    (%378, %379, meta[relay.Constant][22] /* ty=Tensor[(910), float32] */)
  };
  %380() /* ty=(Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) */
}

def @func_8514(%var_8506: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), bool],) {
  %381 = @func_8495() /* ty=(Tensor[(14, 8, 11), float64],) */;
  %382 = %381.0;
  %383 = cast(%var_8506, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = less(%385, %386) /* ty=Tensor[(14, 8, 11), bool] */;
  (%387,)
}

def @func_8816() -> (Tensor[(11, 16, 8), int8], Tensor[(16, 4, 11), float64]) {
  %391 = fn () -> (Tensor[(11, 16, 8), int8], Tensor[(16, 4, 11), float64]) {
    %388 = @func_7697() /* ty=(Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(910), float32]) */;
    %389 = @func_4484() /* ty=Tensor[(11, 16, 8), int8] */;
    %390 = %388.1;
    (%389, %390)
  };
  %391() /* ty=(Tensor[(11, 16, 8), int8], Tensor[(16, 4, 11), float64]) */
}

def @func_3476() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) {
  %397 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) {
    %392 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %393 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
    %394 = %392.0;
    %395 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
    %396 = %393.3;
    (%394, %395, %396)
  };
  %397() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) */
}

def @func_6656(%var_6654: Tensor[(576), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) {
  @func_6653(%var_6654) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_3983() -> Tensor[(16, 4, 11), float64] {
  @func_3981() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_4572() -> (Tensor[(16, 4, 11), float64],) {
  @func_4570() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_8857() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
  %398 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %400 = reshape(%399, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
  %401 = @func_8772(%400) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64]) */;
  %402 = %401.1;
  (%398, %402)
}

def @func_7815(%var_7804: Tensor[(16, 4, 11), uint8]) -> (Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(5, 6, 3), float64], Tensor[(90), uint8], Tensor[(16, 4, 11), int16]) {
  %403 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
  %404 = cast(meta[relay.Constant][23] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %405 = cast(meta[relay.Constant][23] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %406 = reshape(%404, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint8] */;
  %407 = reshape(%405, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint8] */;
  %408 = @func_7646(%406, %407) /* ty=(Tensor[(5, 6, 3), float64],) */;
  %409 = @func_7224() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %410 = %409.4;
  %411 = cast(%var_7804, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %415 = @func_7483() /* ty=Tensor[(?, 5, 10), int16] */;
  %416 = %403.0;
  %417 = %408.0;
  %418 = left_shift(%413, %414) /* ty=Tensor[(16, 4, 11), int16] */;
  (%415, %416, %417, meta[relay.Constant][23] /* ty=Tensor[(90), uint8] */, %418)
}

def @func_8022() -> (Tensor[(16, 4, 11), float64],) {
  %421 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %419 = @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %420 = %419.0;
    (%420,)
  };
  %421() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_2120() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_3609(%var_3607: Tensor[(4, 1, 6), float64]) -> (Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_3606(%var_3607) /* ty=(Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_4747() -> Tensor[(16, 4, 11), uint8] {
  @func_4745() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_6358() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) {
  %431 = fn () -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) {
    %422 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %423 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
    %424 = %423.3;
    %425 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 6, 12), float64] */, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
    %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
    %427 = cast(%424, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
    %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %429 = %422.0;
    %430 = power(%427, %428) /* ty=Tensor[(16, 6, 12), float32] */;
    (%429, %430)
  };
  %431() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */
}

def @func_8990() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) {
  %438 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) {
    %432 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %433 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %434 = reshape(%433, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %435 = @func_6653(%434) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 4, 11), uint8]) */;
    %436 = %432.1;
    %437 = %435.0;
    (%436, %437, meta[relay.Constant][25] /* ty=Tensor[(576), float64] */)
  };
  %438() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(576), float64]) */
}

def @func_5370(%var_5368: Tensor[(2304), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
  @func_5367(%var_5368) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) */
}

def @func_8452() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), int32], Tensor[(7, 6, 16), bool], float32, Tensor[(672), float32], Tensor[(5, 10), float32], Tensor[(5, 10), float32]) {
  @func_8450() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), int32], Tensor[(7, 6, 16), bool], float32, Tensor[(672), float32], Tensor[(5, 10), float32], Tensor[(5, 10), float32]) */
}

def @func_9400() -> Tensor[(?, 5, 10), int16] {
  @func_7483() /* ty=Tensor[(?, 5, 10), int16] */
}

def @func_2587(%var_2558: Tensor[(16, 4, 12), float64], %var_2570: Tensor[(1152), bool]) -> (Tensor[(16, 4, 12), uint32], Tensor[(2304), float32], Tensor[(1152), bool]) {
  %439 = cast(%var_2558, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
  %440 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 4, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %443 = floor_divide(%441, %442) /* ty=Tensor[(16, 4, 12), float64] */;
  %444 = cast(%443, dtype="uint32") /* ty=Tensor[(16, 4, 12), uint32] */;
  %445 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 4, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 4, 12), float64] */, dtype="uint32") /* ty=Tensor[(16, 4, 12), uint32] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %448 = cast(%var_2570, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %449 = reshape(%448, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
  %450 = @func_951(%449) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) */;
  %451 = minimum(%446, %447) /* ty=Tensor[(16, 4, 12), uint32] */;
  %452 = %450.6;
  (%451, %452, %var_2570)
}

def @func_4816(%var_4807: uint64, %var_4808: Tensor[(6, 13, 5), uint64]) -> Tensor[(6, 13, 5), uint64] {
  %453 = cast(%var_4807, dtype="uint64") /* ty=uint64 */;
  %454 = cast(%var_4808, dtype="uint64") /* ty=Tensor[(6, 13, 5), uint64] */;
  bitwise_and(%453, %454) /* ty=Tensor[(6, 13, 5), uint64] */
}

def @func_3025() -> (Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) {
  @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */
}

def @func_3288() -> (Tensor[(16, 4, 11), uint8],) {
  %456 = fn () -> (Tensor[(16, 4, 11), uint8],) {
    %455 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
    (%455,)
  };
  %456() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_4495() -> Tensor[(11, 16, 8), int8] {
  @func_4484() /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_5367(%var_5362: Tensor[(2304), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
  %457 = @func_4194() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %458 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %459 = %458.3;
  %460 = cast(%var_5362, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(1), int32] */;
  %462 = cast(%459, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?), float32] */;
  %464 = %457.3;
  %465 = divide(%462, %463) /* ty=Tensor[(2304), float32] */;
  (%464, %465)
}

def @func_8964(%var_8963: Tensor[(196, 1), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float32], Tensor[(16, 16, 9), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(196, 1), float64], Tensor[(16, 4, 11), uint8]) {
  %486 = fn (%var_8939: Tensor[(196, 1), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float32], Tensor[(16, 16, 9), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(196, 1), float64], Tensor[(16, 4, 11), uint8]) {
    %466 = @func_6603() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) */;
    %467 = %466.1;
    %468 = cast(%467, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
    %469 = cast(%467, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
    %470 = cast(%467, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
    %471 = reshape(%470, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
    %472 = @func_329(%471) /* ty=(Tensor[(16, 16, 9), float32],) */;
    %473 = cast(%467, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
    %474 = @func_7618() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %475 = cast(%var_8939, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
    %476 = reshape(%475, newshape=[196]) /* ty=Tensor[(196), float64] */;
    %477 = @func_3142(%476) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
    %478 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
    %479 = rsqrt(%468) /* ty=Tensor[(16, 16, 9), float64] */;
    %480 = cosh(%469) /* ty=Tensor[(16, 16, 9), float64] */;
    %481 = %472.0;
    %482 = cos(%473) /* ty=Tensor[(16, 16, 9), float64] */;
    %483 = %474.0;
    %484 = %477.1;
    %485 = %478.0;
    (%479, %480, %481, %482, %483, %484, %var_8939, %485)
  };
  %486(%var_8963) /* ty=(Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float64], Tensor[(16, 16, 9), float32], Tensor[(16, 16, 9), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(196, 1), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_5986(%var_5983: Tensor[(196), float64], %var_5984: Tensor[(910), float32], %var_5985: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) {
  @func_5981(%var_5983, %var_5984, %var_5985) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) */
}

def @func_9811() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(6, 5, 10), float32]) {
  %497 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(6, 5, 10), float32]) {
    %487 = cast(meta[relay.Constant][27] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %488 = reshape(%487, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
    %489 = @func_3632(%488) /* ty=(Tensor[(16, 9, 4), float64],) */;
    %490 = @func_7483() /* ty=Tensor[(?, 5, 10), int16] */;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(?, 5, 10), float32] */;
    %492 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 5, 10), int16] */, dtype="float32") /* ty=Tensor[(6, 5, 10), float32] */;
    %493 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
    %494 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
    %495 = %489.0;
    %496 = floor_mod(%491, %492) /* ty=Tensor[(6, 5, 10), float32] */;
    (%493, %494, %495, meta[relay.Constant][27] /* ty=Tensor[(576), float64] */, %496)
  };
  %497() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(6, 5, 10), float32]) */
}

def @func_1368(%var_1332: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) {
  %498 = cast(%var_1332, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %499 = cast(meta[relay.Constant][29] /* ty=Tensor[(1500), uint16] */, dtype="uint16") /* ty=Tensor[(1500), uint16] */;
  %500 = cast(meta[relay.Constant][29] /* ty=Tensor[(1500), uint16] */, dtype="uint16") /* ty=Tensor[(1500), uint16] */;
  %501 = reshape(%499, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), uint16] */;
  %502 = reshape(%500, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), uint16] */;
  %503 = @func_865(%501, %502) /* ty=(Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) */;
  %504 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %505 = log10(%498) /* ty=Tensor[(4, 7, 7), float64] */;
  %506 = %503.2;
  %507 = %504.0;
  (%505, %506, meta[relay.Constant][29] /* ty=Tensor[(1500), uint16] */, %507)
}

def @func_4486() -> Tensor[(11, 16, 8), int8] {
  @func_4484() /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_9341() -> Tensor[(16, 4, 11), uint8] {
  %508 = @func_3382() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */;
  %508.1
}

def @func_2118() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %509 = @func_1401() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %510 = %509.0;
  %511 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%510, %511)
}

def @func_4889() -> (Tensor[(16, 4, 11), uint8],) {
  %514 = fn () -> (Tensor[(16, 4, 11), uint8],) {
    %512 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
    %513 = %512.5;
    (%513,)
  };
  %514() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_1443() -> (Tensor[(16, 4, 11), float64],) {
  @func_1441() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_6593() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  @func_6591() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_6167() -> Tensor[(2304), int32] {
  @func_6165() /* ty=Tensor[(2304), int32] */
}

def @func_9235(%var_9232: Tensor[(2, 616), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(2, 616), float64]) {
  %515 = @func_6836() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */;
  %516 = cast(%var_9232, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
  %517 = reshape(%516, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %518 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %519 = %515.1;
  %520 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
  %521 = @func_3062(%517) /* ty=Tensor[(14, 8, 11), float64] */;
  (%518, %519, %520, %521, %var_9232)
}

def @func_4959() -> (Tensor[(16, 4, 11), float64],) {
  %522 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %523 = %522.2;
  (%523,)
}

def @func_1964() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */
}

def @func_665(%var_613: Tensor[(16, 4, 11), float64], %var_618: Tensor[(16, 4, 11), float32], %var_629: Tensor[(5, 10), float32]) -> (Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) {
  %524 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %525 = cast(%var_613, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %529 = add(%527, %528) /* ty=Tensor[(16, 4, 11), float32] */;
  %530 = cast(%var_618, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %534 = cast(%var_629, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %535 = reshape(%534, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %536 = cast(%var_629, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %537 = reshape(%536, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
  %538 = not_equal(%532, %533) /* ty=Tensor[(16, 4, 11), bool] */;
  %539 = @func_268(%535) /* ty=Tensor[(1, 5, 10), float32] */;
  %540 = @func_268(%537) /* ty=Tensor[(1, 5, 10), float32] */;
  (%538, %539, %var_629, %540)
}

def @func_2624(%var_2622: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
  @func_2621(%var_2622) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) */
}

def @func_3065(%var_3063: Tensor[(14, 8, 11), float64]) -> Tensor[(14, 8, 11), float64] {
  @func_3062(%var_3063) /* ty=Tensor[(14, 8, 11), float64] */
}

def @func_3887() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
  %545 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) {
    %541 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %542 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
    %543 = %541.0;
    %544 = %542.1;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) */
}

def @func_6412(%var_6410: Tensor[(5, 78), uint8]) -> (Tensor[(16, 4, 11), uint8], Tensor[(5, 78), uint8], Tensor[(15, 13, 2), float32], Tensor[(16, 4, 11), float64]) {
  @func_6409(%var_6410) /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(5, 78), uint8], Tensor[(15, 13, 2), float32], Tensor[(16, 4, 11), float64]) */
}

def @func_7055(%var_7053: Tensor[(196), float64], %var_7054: Tensor[(1, 910), float32]) -> (Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
  %556 = fn (%var_7048: Tensor[(196), float64], %var_7049: Tensor[(1, 910), float32]) -> (Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) {
    %546 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
    %547 = cast(%var_7048, dtype="float64") /* ty=Tensor[(196), float64] */;
    %548 = cast(%var_7049, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
    %549 = cast(meta[relay.Constant][30] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %550 = reshape(%547, newshape=[196]) /* ty=Tensor[(196), float64] */;
    %551 = reshape(%548, newshape=[910]) /* ty=Tensor[(910), float32] */;
    %552 = reshape(%549, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
    %553 = @func_5981(%550, %551, %552) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) */;
    %554 = %546.0;
    %555 = %553.5;
    (%554, %555, %var_7048, %var_7049, meta[relay.Constant][30] /* ty=Tensor[(1152), bool] */)
  };
  %556(%var_7053, %var_7054) /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(1500), float64], Tensor[(196), float64], Tensor[(1, 910), float32], Tensor[(1152), bool]) */
}

def @func_3634(%var_3633: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
  %559 = fn (%var_3627: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
    %557 = cast(%var_3627, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
    %558 = acosh(%557) /* ty=Tensor[(16, 9, 4), float64] */;
    (%558,)
  };
  %559(%var_3633) /* ty=(Tensor[(16, 9, 4), float64],) */
}

def @func_6486() -> Tensor[(1152), bool] {
  %560 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %560.0
}

def @func_1569(%var_1567: Tensor[(14, 2, 16), float32], %var_1568: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
  @func_1565(%var_1567, %var_1568) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */
}

def @func_1236() -> (Tensor[(16, 4, 11), float64],) {
  %563 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %561 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %562 = %561.0;
    (%562,)
  };
  %563() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_6488() -> Tensor[(1152), bool] {
  @func_6486() /* ty=Tensor[(1152), bool] */
}

def @func_8450() -> (Tensor[(16, 4, 11), float64], Tensor[(2304), int32], Tensor[(7, 6, 16), bool], float32, Tensor[(672), float32], Tensor[(5, 10), float32], Tensor[(5, 10), float32]) {
  %564 = @func_3886() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32]) */;
  %565 = cast(-4.681f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %566 = cast(meta[relay.Constant][31] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %567 = reshape(%565, newshape=[]) /* ty=float32 */;
  %568 = reshape(%566, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), float32] */;
  %569 = @func_6134(%567, %568) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) */;
  %570 = %564.0;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %572 = cast(%570, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %573 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %574 = reshape(%571, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
  %575 = reshape(%572, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %576 = reshape(%573, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
  %577 = @func_665(%574, %575, %576) /* ty=(Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) */;
  %578 = @func_6165() /* ty=Tensor[(2304), int32] */;
  %579 = %569.0;
  %580 = %577.2;
  (%570, %578, %579, -4.681f /* ty=float32 */, meta[relay.Constant][31] /* ty=Tensor[(672), float32] */, %580, meta[relay.Constant][32] /* ty=Tensor[(5, 10), float32] */)
}

def @func_6759(%var_6758: Tensor[(50), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(1, 5, 10), float32], Tensor[(50), float32]) {
  %585 = fn (%var_6732: Tensor[(50), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(1, 5, 10), float32], Tensor[(50), float32]) {
    %581 = cast(%var_6732, dtype="float32") /* ty=Tensor[(50), float32] */;
    %582 = reshape(%581, newshape=[1, 5, 10]) /* ty=Tensor[(1, 5, 10), float32] */;
    %583 = @func_4847() /* ty=Tensor[(16, 4, 11), float64] */;
    %584 = @func_268(%582) /* ty=Tensor[(1, 5, 10), float32] */;
    (%583, %584, %var_6732)
  };
  %585(%var_6758) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1, 5, 10), float32], Tensor[(50), float32]) */
}

def @func_7015() -> (Tensor[(2304), float32],) {
  %587 = fn () -> (Tensor[(2304), float32],) {
    %586 = @func_4608() /* ty=Tensor[(2304), float32] */;
    (%586,)
  };
  %587() /* ty=(Tensor[(2304), float32],) */
}

def @func_7425(%var_7423: Tensor[(10, 16, 15), uint16], %var_7424: Tensor[(10, 16, 15), uint16]) -> Tensor[(10, 16, 15), uint16] {
  @func_7421(%var_7423, %var_7424) /* ty=Tensor[(10, 16, 15), uint16] */
}

def @main(%var_9940: Tensor[(390), uint8]) -> (Tensor[(16, 4, 11), float64], Tensor[(15, 13, 2), uint8], Tensor[(390), float32]) {
  %588 = cast(%var_9940, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %589 = reshape(%588, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %590 = cast(%var_9940, dtype="float32") /* ty=Tensor[(390), float32] */;
  %591 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %592 = @func_5500(%589) /* ty=Tensor[(15, 13, 2), uint8] */;
  %593 = log10(%590) /* ty=Tensor[(390), float32] */;
  (%591, %592, %593)
}

def @func_1303() -> (Tensor[(16, 4, 11), float64],) {
  %594 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %595 = %594.0;
  (%595,)
}

def @func_9122() -> (Tensor[(16, 4, 11), float64],) {
  %597 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %596 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
    (%596,)
  };
  %597() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_7618() -> (Tensor[(16, 4, 11), float64],) {
  %598 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%598,)
}

def @func_6859() -> (Tensor[(16, 4, 11), float64],) {
  %601 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %599 = @func_4959() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %600 = %599.0;
    (%600,)
  };
  %601() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_4083() -> (Tensor[(16, 4, 11), bool],) {
  %604 = fn () -> (Tensor[(16, 4, 11), bool],) {
    %602 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(16, 4, 11), bool],) */
}

def @func_9516() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float32]) {
  %611 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float32]) {
    %605 = @func_9121() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %606 = @func_1390() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %607 = @func_6357() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), float32]) */;
    %608 = %605.0;
    %609 = %606.0;
    %610 = %607.1;
    (%608, %609, %610)
  };
  %611() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float32]) */
}

def @func_3214(%var_3170: Tensor[(8, 4, 1), uint32], %var_3171: Tensor[(8, 4, 4), uint32], %var_3196: Tensor[(8, 4, 4), uint32]) -> (Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) {
  %612 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %613 = cast(%var_3170, dtype="uint32") /* ty=Tensor[(8, 4, 1), uint32] */;
  %614 = cast(%var_3171, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %615 = minimum(%613, %614) /* ty=Tensor[(8, 4, 4), uint32] */;
  %616 = cast(%var_3196, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %620 = %612.0;
  %621 = power(%618, %619) /* ty=Tensor[(8, 4, 4), float32] */;
  (%620, %621)
}

def @func_891() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_437(%var_434: Tensor[(7, 10, 13), float32], %var_435: Tensor[(7, 10, 13), float32], %var_436: Tensor[(96, 12), bool]) -> (Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) {
  %639 = fn (%var_380: Tensor[(7, 10, 13), float32], %var_381: Tensor[(7, 10, 13), float32], %var_410: Tensor[(96, 12), bool]) -> (Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) {
    %622 = cast(%var_381, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
    %623 = shape_of(%var_380, dtype="int32") /* ty=Tensor[(3), int32] */;
    %624 = cast(%var_380, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %626 = cast(%var_381, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
    %627 = cast(%var_410, dtype="bool") /* ty=Tensor[(96, 12), bool] */;
    %628 = cast(%var_410, dtype="bool") /* ty=Tensor[(96, 12), bool] */;
    %629 = reshape(%627, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %630 = reshape(%628, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %631 = @func_368(%629, %630) /* ty=Tensor[(16, 6, 12), bool] */;
    %632 = cast(%631, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
    %633 = cast(%631, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
    %634 = reshape(%632, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %635 = reshape(%633, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %636 = not_equal(%624, %625) /* ty=Tensor[(7, 10, 13), bool] */;
    %637 = cosh(%626) /* ty=Tensor[(7, 10, 13), float32] */;
    %638 = @func_368(%634, %635) /* ty=Tensor[(16, 6, 12), bool] */;
    (%636, %637, %631, %var_410, %638)
  };
  %639(%var_434, %var_435, %var_436) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */
}

def @func_6308() -> (Tensor[(16, 4, 11), float64],) {
  @func_6306() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_6097() -> (Tensor[(16, 4, 11), float64],) {
  @func_6095() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_9402() -> Tensor[(?, 5, 10), int16] {
  @func_9400() /* ty=Tensor[(?, 5, 10), int16] */
}

def @func_3830(%var_3809: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %640 = @func_3777() /* ty=Tensor[(16, 4, 11), uint8] */;
  %641 = cast(%var_3809, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = greater(%643, %644) /* ty=Tensor[(16, 4, 11), bool] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %647 = atanh(%646) /* ty=Tensor[(16, 4, 11), float64] */;
  %648 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  (%647, %648)
}

def @func_4745() -> Tensor[(16, 4, 11), uint8] {
  %649 = @func_3287() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %649.0
}

def @func_4661(%var_4652: Tensor[(2304), float32]) -> Tensor[(2304), uint8] {
  %650 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %651 = cast(%var_4652, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(1), int32] */;
  %653 = cast(%650, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?), uint8] */;
  bitwise_or(%653, %654) /* ty=Tensor[(2304), uint8] */
}

def @func_9845() -> Tensor[(50), float32] {
  @func_9843() /* ty=Tensor[(50), float32] */
}

def @func_1311() -> (Tensor[(16, 4, 11), float64],) {
  %655 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  (%655,)
}

def @func_371(%var_369: Tensor[(16, 6, 12), bool], %var_370: Tensor[(16, 6, 12), bool]) -> Tensor[(16, 6, 12), bool] {
  %660 = fn (%var_363: Tensor[(16, 6, 12), bool], %var_364: Tensor[(16, 6, 12), bool]) -> Tensor[(16, 6, 12), bool] {
    %656 = cast(%var_364, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
    %657 = shape_of(%var_363, dtype="int32") /* ty=Tensor[(3), int32] */;
    %658 = cast(%var_363, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
    %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%658, %659) /* ty=Tensor[(16, 6, 12), bool] */
  };
  %660(%var_369, %var_370) /* ty=Tensor[(16, 6, 12), bool] */
}

def @func_5589(%var_5565: float32, %var_5566: Tensor[(13, 2, 7), float32]) -> (Tensor[(13, 2, 7), bool],) {
  %661 = cast(%var_5565, dtype="bool") /* ty=bool */;
  %662 = cast(%var_5566, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
  %663 = greater(%661, %662) /* ty=Tensor[(13, 2, 7), bool] */;
  (%663,)
}

def @func_6137(%var_6135: float32, %var_6136: Tensor[(7, 6, 16), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) {
  %674 = fn (%var_6104: float32, %var_6105: Tensor[(7, 6, 16), float32]) -> (Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) {
    %664 = cast(%var_6104, dtype="float32") /* ty=float32 */;
    %665 = cast(%var_6105, dtype="float32") /* ty=Tensor[(7, 6, 16), float32] */;
    %666 = divide(%664, %665) /* ty=Tensor[(7, 6, 16), float32] */;
    %667 = cast(%666, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %668 = shape_of(%var_6105, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(%var_6105, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %671 = @func_3475() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) */;
    %672 = not_equal(%669, %670) /* ty=Tensor[(7, 6, 16), bool] */;
    %673 = %671.1;
    (%672, %673)
  };
  %674(%var_6135, %var_6136) /* ty=(Tensor[(7, 6, 16), bool], Tensor[(16, 4, 11), uint8]) */
}

def @func_5292() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), int64]) {
  %679 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), int64]) {
    %675 = @func_1890() /* ty=(Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) */;
    %676 = @func_1890() /* ty=(Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) */;
    %677 = %675.1;
    %678 = %676.0;
    (%677, %678)
  };
  %679() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), int64]) */
}

def @func_8059() -> (Tensor[(16, 4, 11), float64],) {
  %682 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %680 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %681 = %680.0;
    (%681,)
  };
  %682() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_593() -> Tensor[(16, 4, 11), float64] {
  @func_591() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_2796() -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) {
  %702 = fn () -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) {
    %683 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
    %684 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
    %685 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %686 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %687 = @func_2247() /* ty=Tensor[(16, 4, 11), float32] */;
    %688 = cast(%687, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
    %689 = cast(%687, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
    %690 = cast(meta[relay.Constant][33] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %691 = reshape(%688, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float64] */;
    %692 = reshape(%689, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %693 = reshape(%690, newshape=[5, 10]) /* ty=Tensor[(5, 10), float32] */;
    %694 = @func_665(%691, %692, %693) /* ty=(Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) */;
    %695 = %694.2;
    %696 = cast(%695, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
    %697 = %683.0;
    %698 = %684.3;
    %699 = %685.0;
    %700 = %686.0;
    %701 = sinh(%696) /* ty=Tensor[(5, 10), float64] */;
    (%687, %697, %698, meta[relay.Constant][33] /* ty=Tensor[(50), float32] */, %699, %700, %701)
  };
  %702() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */
}

def @func_8080(%var_8074: Tensor[(15, 9, 3), uint16]) -> (Tensor[(15, 9, 3), uint16],) {
  %703 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 9, 3), uint16] */, dtype="uint16") /* ty=Tensor[(15, 9, 3), uint16] */;
  %704 = shape_of(%var_8074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_8074, dtype="uint16") /* ty=Tensor[(15, 9, 3), uint16] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %707 = bitwise_or(%705, %706) /* ty=Tensor[(15, 9, 3), uint16] */;
  (%707,)
}

def @func_3784() -> Tensor[(16, 4, 11), uint8] {
  @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_6070(%var_6068: Tensor[(429, 3), int32], %var_6069: Tensor[(2304), float32]) -> (Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) {
  %725 = fn (%var_6025: Tensor[(429, 3), int32], %var_6056: Tensor[(2304), float32]) -> (Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) {
    %708 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
    %709 = cast(%var_6025, dtype="int32") /* ty=Tensor[(429, 3), int32] */;
    %710 = cast(%var_6025, dtype="int32") /* ty=Tensor[(429, 3), int32] */;
    %711 = reshape(%709, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), int32] */;
    %712 = reshape(%710, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), int32] */;
    %713 = @func_4709(%711, %712) /* ty=(Tensor[(9, 13, 11), int32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(9, 13, 11), bool], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %714 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %715 = @func_5147() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(11, 16, 8), uint64]) */;
    %716 = %715.1;
    %717 = cast(%var_6056, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(1), int32] */;
    %719 = cast(%716, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), bool] */;
    %721 = %708.3;
    %722 = %713.3;
    %723 = %714.0;
    %724 = logical_or(%719, %720) /* ty=Tensor[(2304), bool] */;
    (%721, %722, %var_6025, %723, %724)
  };
  %725(%var_6068, %var_6069) /* ty=(Tensor[(50), float32], Tensor[(9, 13, 11), bool], Tensor[(429, 3), int32], Tensor[(16, 4, 11), float64], Tensor[(2304), bool]) */
}

def @func_5648() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %728 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
    %726 = @func_3742() /* ty=Tensor[(16, 4, 11), float64] */;
    %727 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
    (%726, %727)
  };
  %728() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_2081() -> (Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */
}

def @func_3486() -> (Tensor[(16, 4, 11), float64],) {
  %730 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %729 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
    (%729,)
  };
  %730() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_7288() -> Tensor[(16, 4, 11), float64] {
  %732 = fn () -> Tensor[(16, 4, 11), float64] {
    %731 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %731.0
  };
  %732() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_3219(%var_3216: Tensor[(8, 4, 1), uint32], %var_3217: Tensor[(8, 4, 4), uint32], %var_3218: Tensor[(8, 4, 4), uint32]) -> (Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) {
  @func_3214(%var_3216, %var_3217, %var_3218) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) */
}

def @func_7483() -> Tensor[(?, 5, 10), int16] {
  %733 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %733.1
}

def @func_3743() -> Tensor[(16, 4, 11), float64] {
  %735 = fn () -> Tensor[(16, 4, 11), float64] {
    %734 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %734.0
  };
  %735() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_7226() -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  @func_7224() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */
}

def @func_8168(%var_8165: Tensor[(16, 12, 3), float64], %var_8166: Tensor[(32), uint32], %var_8167: Tensor[(128), uint32]) -> (Tensor[(16, 12, 3), float64], Tensor[(16, 4, 11), float64], Tensor[(32), uint32], Tensor[(128), uint32]) {
  %746 = fn (%var_8128: Tensor[(16, 12, 3), float64], %var_8146: Tensor[(32), uint32], %var_8147: Tensor[(128), uint32]) -> (Tensor[(16, 12, 3), float64], Tensor[(16, 4, 11), float64], Tensor[(32), uint32], Tensor[(128), uint32]) {
    %736 = cast(%var_8128, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
    %737 = cast(%var_8146, dtype="uint32") /* ty=Tensor[(32), uint32] */;
    %738 = cast(%var_8147, dtype="uint32") /* ty=Tensor[(128), uint32] */;
    %739 = cast(%var_8147, dtype="uint32") /* ty=Tensor[(128), uint32] */;
    %740 = reshape(%737, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), uint32] */;
    %741 = reshape(%738, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), uint32] */;
    %742 = reshape(%739, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), uint32] */;
    %743 = @func_3214(%740, %741, %742) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(8, 4, 4), float32]) */;
    %744 = tan(%736) /* ty=Tensor[(16, 12, 3), float64] */;
    %745 = %743.0;
    (%744, %745, %var_8146, %var_8147)
  };
  %746(%var_8165, %var_8166, %var_8167) /* ty=(Tensor[(16, 12, 3), float64], Tensor[(16, 4, 11), float64], Tensor[(32), uint32], Tensor[(128), uint32]) */
}

def @func_1401() -> (Tensor[(16, 4, 11), float64],) {
  %747 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %748 = %747.0;
  (%748,)
}

def @func_4484() -> Tensor[(11, 16, 8), int8] {
  %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 1, 8), int8] */, dtype="int8") /* ty=Tensor[(11, 1, 8), int8] */;
  %750 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 16, 8), int8] */, dtype="int8") /* ty=Tensor[(11, 16, 8), int8] */;
  multiply(%749, %750) /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_5533() -> (Tensor[(16, 4, 11), uint8],) {
  %751 = @func_4888() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %752 = %751.0;
  (%752,)
}

def @func_8859() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
  @func_8857() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */
}

def @func_9238(%var_9236: Tensor[(2, 616), float64]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(2, 616), float64]) {
  @func_9235(%var_9236) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(2, 616), float64]) */
}

def @func_8671() -> (Tensor[(16, 4, 11), float64], Tensor[(11, 16, 8), float64]) {
  %758 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(11, 16, 8), float64]) {
    %753 = @func_4551() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %754 = @func_4484() /* ty=Tensor[(11, 16, 8), int8] */;
    %755 = cast(%754, dtype="float64") /* ty=Tensor[(11, 16, 8), float64] */;
    %756 = %753.0;
    %757 = cos(%755) /* ty=Tensor[(11, 16, 8), float64] */;
    (%756, %757)
  };
  %758() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(11, 16, 8), float64]) */
}

def @func_6604() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) {
  %763 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) {
    %759 = @func_1750() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
    %760 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
    %761 = %759.5;
    %762 = %760.2;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) */
}

def @func_1068() -> (Tensor[(16, 4, 11), float64],) {
  %766 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %764 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %765 = %764.1;
    (%765,)
  };
  %766() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_4552() -> (Tensor[(16, 4, 11), float64],) {
  %769 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %767 = @func_2709() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %768 = %767.0;
    (%768,)
  };
  %769() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_3145(%var_3143: Tensor[(196), float64]) -> (Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) {
  @func_3142(%var_3143) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */
}

def @func_1441() -> (Tensor[(16, 4, 11), float64],) {
  %770 = @func_1390() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %771 = %770.0;
  (%771,)
}

def @func_4820(%var_4818: uint64, %var_4819: Tensor[(6, 13, 5), uint64]) -> Tensor[(6, 13, 5), uint64] {
  @func_4816(%var_4818, %var_4819) /* ty=Tensor[(6, 13, 5), uint64] */
}

def @func_7818(%var_7816: Tensor[(16, 4, 11), uint8]) -> (Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(5, 6, 3), float64], Tensor[(90), uint8], Tensor[(16, 4, 11), int16]) {
  @func_7815(%var_7816) /* ty=(Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(5, 6, 3), float64], Tensor[(90), uint8], Tensor[(16, 4, 11), int16]) */
}

def @func_7620() -> (Tensor[(16, 4, 11), float64],) {
  @func_7618() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_591() -> Tensor[(16, 4, 11), float64] {
  %772 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  sinh(%772) /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_5535() -> (Tensor[(16, 4, 11), uint8],) {
  @func_5533() /* ty=(Tensor[(16, 4, 11), uint8],) */
}

def @func_8517(%var_8515: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), bool],) {
  @func_8514(%var_8515) /* ty=(Tensor[(14, 8, 11), bool],) */
}

def @func_7896() -> (Tensor[(16, 4, 11), float64], Tensor[(9, 14, 4), bool], Tensor[(16, 4, 11), uint8]) {
  @func_7894() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(9, 14, 4), bool], Tensor[(16, 4, 11), uint8]) */
}

def @func_8555(%var_8554: Tensor[(12, 9, 4), float32]) -> (Tensor[(12, 9, 4), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
  %778 = fn (%var_8527: Tensor[(12, 9, 4), float32]) -> (Tensor[(12, 9, 4), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) {
    %773 = cast(%var_8527, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
    %774 = @func_6603() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), int8]) */;
    %775 = cosh(%773) /* ty=Tensor[(12, 9, 4), float32] */;
    %776 = @func_4537() /* ty=Tensor[(2304), float32] */;
    %777 = %774.0;
    (%775, %776, %777)
  };
  %778(%var_8554) /* ty=(Tensor[(12, 9, 4), float32], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */
}

def @func_6886() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %779 = @func_4959() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %780 = %779.0;
  %781 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%780, %781)
}

def @func_1891() -> (Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) {
  %790 = fn () -> (Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) {
    %782 = @func_1067() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %783 = %782.0;
    %784 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 4, 11), float64] */, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
    %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(%783, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %788 = bitwise_xor(%786, %787) /* ty=Tensor[(16, 4, 11), int64] */;
    %789 = @func_807() /* ty=Tensor[(16, 4, 11), float64] */;
    (%788, %789)
  };
  %790() /* ty=(Tensor[(16, 4, 11), int64], Tensor[(16, 4, 11), float64]) */
}

def @func_869(%var_867: Tensor[(15, 10, 10), uint16], %var_868: Tensor[(15, 10, 10), uint16]) -> (Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) {
  @func_865(%var_867, %var_868) /* ty=(Tensor[(15, 10, 10), uint16], Tensor[(15, 10, 10), float32], Tensor[(16, 6, 12), bool], Tensor[(1152), bool]) */
}

def @func_4848() -> Tensor[(16, 4, 11), float64] {
  %792 = fn () -> Tensor[(16, 4, 11), float64] {
    %791 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
    %791.1
  };
  %792() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_8283() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 4, 11), float64]) {
  @func_8281() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_3248() -> (Tensor[(16, 4, 11), float64],) {
  @func_3246() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_3246() -> (Tensor[(16, 4, 11), float64],) {
  %793 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %794 = %793.0;
  (%794,)
}

def @func_5981(%var_5890: Tensor[(196), float64], %var_5918: Tensor[(910), float32], %var_5919: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool], Tensor[(1500), float64]) {
  %795 = cast(%var_5918, dtype="float32") /* ty=Tensor[(910), float32] */;
  %796 = cast(%var_5918, dtype="float32") /* ty=Tensor[(910), float32] */;
  %797 = cast(%var_5919, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %798 = reshape(%795, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %799 = reshape(%796, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %800 = reshape(%797, newshape=[96, 12]) /* ty=Tensor[(96, 12), bool] */;
  %801 = @func_433(%798, %799, %800) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(7, 10, 13), float32], Tensor[(16, 6, 12), bool], Tensor[(96, 12), bool], Tensor[(16, 6, 12), bool]) */;
  %802 = cast(%var_5890, dtype="float64") /* ty=Tensor[(196), float64] */;
  %803 = reshape(%802, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %804 = @func_1368(%803) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(16, 6, 12), bool], Tensor[(1500), uint16], Tensor[(16, 4, 11), float64]) */;
  %805 = %804.2;
  %806 = cast(%805, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %807 = sqrt(%806) /* ty=Tensor[(1500), float64] */;
  %808 = cast(%807, dtype="uint32") /* ty=Tensor[(1500), uint32] */;
  %809 = shape_of(%805, dtype="int32") /* ty=Tensor[(1), int32] */;
  %810 = cast(%805, dtype="uint32") /* ty=Tensor[(1500), uint32] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %812 = bitwise_xor(%810, %811) /* ty=Tensor[(1500), uint32] */;
  %813 = cast(%812, dtype="bool") /* ty=Tensor[(1500), bool] */;
  %814 = shape_of(%807, dtype="int32") /* ty=Tensor[(1), int32] */;
  %815 = cast(%807, dtype="bool") /* ty=Tensor[(1500), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?), bool] */;
  %817 = greater_equal(%815, %816) /* ty=Tensor[(1500), bool] */;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %819 = @func_5768() /* ty=Tensor[(16, 4, 11), float64] */;
  %820 = %801.4;
  %821 = sinh(%818) /* ty=Tensor[(1500), float64] */;
  (%819, %var_5890, %820, %var_5918, %var_5919, %821)
}

def @func_2678() -> Tensor[(16, 4, 11), uint8] {
  %823 = fn () -> Tensor[(16, 4, 11), uint8] {
    %822 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %822.0
  };
  %823() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_7401(%var_7399: Tensor[(6, 15, 13), int32], %var_7400: Tensor[(48, 24), bool]) -> (Tensor[(6, 15, 13), int32], Tensor[(16, 6, 12), bool], Tensor[(48, 24), bool]) {
  @func_7397(%var_7399, %var_7400) /* ty=(Tensor[(6, 15, 13), int32], Tensor[(16, 6, 12), bool], Tensor[(48, 24), bool]) */
}

def @func_6619() -> Tensor[(1152), bool] {
  @func_6617() /* ty=Tensor[(1152), bool] */
}

def @func_6838() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  @func_6836() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */
}

def @func_3833(%var_3831: Tensor[(16, 4, 11), uint8]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  @func_3830(%var_3831) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_3981() -> Tensor[(16, 4, 11), float64] {
  %824 = @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */;
  %824.1
}

def @func_3383() -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
  %830 = fn () -> (Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) {
    %825 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %826 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %827 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
    %828 = %825.0;
    %829 = %826.1;
    (%827, %828, %829)
  };
  %830() /* ty=(Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64]) */
}

def @func_1261(%var_1260: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), bool],) {
  %838 = fn (%var_1249: Tensor[(16, 4, 11), float64]) -> (Tensor[(16, 4, 11), bool],) {
    %831 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %832 = %831.1;
    %833 = cast(%var_1249, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(%832, dtype="bool") /* ty=Tensor[(16, 4, 11), bool] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %837 = logical_or(%835, %836) /* ty=Tensor[(16, 4, 11), bool] */;
    (%837,)
  };
  %838(%var_1260) /* ty=(Tensor[(16, 4, 11), bool],) */
}

def @func_9843() -> Tensor[(50), float32] {
  %839 = @func_7936() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(50), float32], Tensor[(11, 117), int32], Tensor[(2304), float32]) */;
  %839.2
}

def @func_6165() -> Tensor[(2304), int32] {
  %840 = @func_4537() /* ty=Tensor[(2304), float32] */;
  %841 = cast(meta[relay.Constant][39] /* ty=Tensor[(2304), float32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(1), int32] */;
  %843 = cast(%840, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?), int32] */;
  subtract(%843, %844) /* ty=Tensor[(2304), int32] */
}

def @func_4664(%var_4662: Tensor[(2304), float32]) -> Tensor[(2304), uint8] {
  @func_4661(%var_4662) /* ty=Tensor[(2304), uint8] */
}

def @func_4297(%var_4271: Tensor[(1152), bool]) -> (Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(12, 2, 1), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  %845 = cast(%var_4271, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %846 = cast(%var_4271, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %847 = reshape(%845, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %848 = reshape(%846, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %849 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %850 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 2, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %851 = atanh(%850) /* ty=Tensor[(12, 2, 1), float32] */;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %853 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 2, 1), float32] */, dtype="float64") /* ty=Tensor[(12, 2, 1), float64] */;
  %854 = reshape(%853, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float64] */;
  %855 = @func_3606(%854) /* ty=(Tensor[(4, 1, 6), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %856 = @func_368(%847, %848) /* ty=Tensor[(16, 6, 12), bool] */;
  %857 = %849.0;
  %858 = acosh(%852) /* ty=Tensor[(12, 2, 1), float32] */;
  %859 = %855.3;
  %860 = @func_1471() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%856, %var_4271, %857, %858, %859, %860)
}

def @func_8736() -> Tensor[(2304), float32] {
  @func_8734() /* ty=Tensor[(2304), float32] */
}

def @func_9624() -> Tensor[(1152), bool] {
  @func_9622() /* ty=Tensor[(1152), bool] */
}

def @func_1962() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) {
  %861 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %862 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
  %863 = @func_1120() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(910), float32], Tensor[(1152), bool]) */;
  %864 = %863.1;
  %865 = cast(%864, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %866 = exp(%865) /* ty=Tensor[(16, 6, 12), float32] */;
  %867 = cast(%864, dtype="int64") /* ty=Tensor[(16, 6, 12), int64] */;
  %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%866, dtype="int64") /* ty=Tensor[(16, 6, 12), int64] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %871 = bitwise_or(%869, %870) /* ty=Tensor[(16, 6, 12), int64] */;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(16, 6, 12), float64] */;
  %873 = %861.0;
  %874 = %862.0;
  %875 = log2(%872) /* ty=Tensor[(16, 6, 12), float64] */;
  (%873, %874, %875)
}

def @func_3448() -> (Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) {
  @func_3446() /* ty=(Tensor[(16, 4, 11), bool], Tensor[(16, 4, 11), float64]) */
}

def @func_2527() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %880 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
    %876 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
    %877 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %878 = %876.0;
    %879 = %877.0;
    (%878, %879)
  };
  %880() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_4300(%var_4298: Tensor[(1152), bool]) -> (Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(12, 2, 1), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) {
  @func_4297(%var_4298) /* ty=(Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(12, 2, 1), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */
}

def @func_1211(%var_1210: Tensor[(2, 576), bool]) -> (Tensor[(16, 16, 9), bool], Tensor[(2, 576), bool]) {
  %898 = fn (%var_1160: Tensor[(2, 576), bool]) -> (Tensor[(16, 16, 9), bool], Tensor[(2, 576), bool]) {
    %881 = @func_759() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(?, 5, 10), int16], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) */;
    %882 = %881.2;
    %883 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 16, 9), float32] */, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
    %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
    %885 = cast(%882, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %887 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
    %888 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
    %889 = reshape(%887, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %890 = reshape(%888, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %891 = @func_368(%889, %890) /* ty=Tensor[(16, 6, 12), bool] */;
    %892 = cast(%891, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
    %893 = shape_of(%var_1160, dtype="int32") /* ty=Tensor[(2), int32] */;
    %894 = cast(%var_1160, dtype="bool") /* ty=Tensor[(2, 576), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %896 = greater_equal(%885, %886) /* ty=Tensor[(16, 16, 9), bool] */;
    %897 = less(%894, %895) /* ty=Tensor[(2, 576), bool] */;
    (%896, %897)
  };
  %898(%var_1210) /* ty=(Tensor[(16, 16, 9), bool], Tensor[(2, 576), bool]) */
}

def @func_4035() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(16, 4, 11), uint8]) {
  %899 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %900 = @func_3023() /* ty=(Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 16, 9), int8], Tensor[(16, 4, 11), uint8]) */;
  %901 = @func_2795() /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(50), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(5, 10), float64]) */;
  %902 = %899.0;
  %903 = %900.3;
  %904 = %901.5;
  (%902, %903, %904)
}

def @func_7255() -> (Tensor[(16, 4, 11), float64],) {
  @func_7253() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_6571(%var_6569: Tensor[(196), float64], %var_6570: Tensor[(576), float64]) -> (Tensor[(1152), bool], Tensor[(7, 10, 13), bool], Tensor[(728), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(1152), bool]) {
  %922 = fn (%var_6531: Tensor[(196), float64], %var_6547: Tensor[(576), float64]) -> (Tensor[(1152), bool], Tensor[(7, 10, 13), bool], Tensor[(728), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(1152), bool]) {
    %905 = cast(meta[relay.Constant][42] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %906 = reshape(%905, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
    %907 = @func_2621(%906) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(7, 10, 13), bool], Tensor[(1, 910), float32], Tensor[(1152), bool]) */;
    %908 = cast(%var_6531, dtype="float64") /* ty=Tensor[(196), float64] */;
    %909 = reshape(%908, newshape=[196]) /* ty=Tensor[(196), float64] */;
    %910 = @func_3142(%909) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
    %911 = cast(%var_6547, dtype="float64") /* ty=Tensor[(576), float64] */;
    %912 = reshape(%911, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
    %913 = @func_3632(%912) /* ty=(Tensor[(16, 9, 4), float64],) */;
    %914 = @func_6486() /* ty=Tensor[(1152), bool] */;
    %915 = cast(%914, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %916 = reshape(%915, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %917 = @func_2477(%916) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) */;
    %918 = %907.1;
    %919 = %910.0;
    %920 = %913.0;
    %921 = %917.1;
    (%914, %918, meta[relay.Constant][42] /* ty=Tensor[(728), float64] */, %919, %var_6531, %920, %var_6547, %921)
  };
  %922(%var_6569, %var_6570) /* ty=(Tensor[(1152), bool], Tensor[(7, 10, 13), bool], Tensor[(728), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(1152), bool]) */
}

def @func_4096(%var_4094: Tensor[(6, 5, 14), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) {
  @func_4093(%var_4094) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(16, 16, 9), float32]) */
}

def @func_2910(%var_2909: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
  %924 = fn (%var_2905: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
    %923 = cast(%var_2905, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    exp(%923) /* ty=Tensor[(7, 9, 4), float64] */
  };
  %924(%var_2909) /* ty=Tensor[(7, 9, 4), float64] */
}

def @func_2477(%var_2441: Tensor[(16, 6, 12), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) {
  %925 = @func_1962() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
  %926 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %927 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %928 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %929 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %930 = reshape(%928, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %931 = reshape(%929, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
  %932 = @func_368(%930, %931) /* ty=Tensor[(16, 6, 12), bool] */;
  %933 = cast(%var_2441, dtype="int16") /* ty=Tensor[(16, 6, 12), int16] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="int16") /* ty=Tensor[(16, 6, 12), int16] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %937 = subtract(%935, %936) /* ty=Tensor[(16, 6, 12), int16] */;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(16, 6, 12), float32] */;
  %939 = sinh(%938) /* ty=Tensor[(16, 6, 12), float32] */;
  %940 = cast(%937, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%939, dtype="bool") /* ty=Tensor[(16, 6, 12), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = @func_1911() /* ty=Tensor[(16, 4, 11), float64] */;
  %945 = %925.2;
  %946 = %926.0;
  %947 = %927.0;
  %948 = greater_equal(%942, %943) /* ty=Tensor[(16, 6, 12), bool] */;
  (%944, meta[relay.Constant][43] /* ty=Tensor[(1152), bool] */, %945, %946, %947, %948)
}

def @func_2247() -> Tensor[(16, 4, 11), float32] {
  %949 = @func_2126() /* ty=(Tensor[(16, 4, 11), uint8],) */;
  %950 = %949.0;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  acos(%951) /* ty=Tensor[(16, 4, 11), float32] */
}

def @func_4610() -> Tensor[(2304), float32] {
  @func_4608() /* ty=Tensor[(2304), float32] */
}

def @func_5162() -> Tensor[(16, 4, 11), float64] {
  @func_807() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_953(%var_952: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) {
  %980 = fn (%var_928: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) {
    %952 = @func_822() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %953 = cast(%var_928, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %954 = cast(%var_928, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %955 = reshape(%953, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %956 = reshape(%954, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %957 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %958 = cast(meta[relay.Constant][44] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %959 = sin(%958) /* ty=Tensor[(2304), float32] */;
    %960 = cast(meta[relay.Constant][44] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %961 = reshape(%960, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
    %962 = @func_329(%961) /* ty=(Tensor[(16, 16, 9), float32],) */;
    %963 = %962.0;
    %964 = cast(%963, dtype="bool") /* ty=Tensor[(16, 16, 9), bool] */;
    %965 = shape_of(%959, dtype="int32") /* ty=Tensor[(1), int32] */;
    %966 = cast(%959, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?), bool] */;
    %968 = cast(meta[relay.Constant][44] /* ty=Tensor[(2304), float32] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %969 = shape_of(%959, dtype="int32") /* ty=Tensor[(1), int32] */;
    %970 = cast(%959, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?), int64] */;
    %972 = bitwise_and(%970, %971) /* ty=Tensor[(2304), int64] */;
    %973 = cast(%972, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %974 = %952.0;
    %975 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
    %976 = @func_368(%955, %956) /* ty=Tensor[(16, 6, 12), bool] */;
    %977 = %957.0;
    %978 = greater(%966, %967) /* ty=Tensor[(2304), bool] */;
    %979 = asin(%973) /* ty=Tensor[(2304), float32] */;
    (%974, %975, %976, %var_928, %977, %978, %979)
  };
  %980(%var_952) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(16, 4, 11), float64], Tensor[(2304), bool], Tensor[(2304), float32]) */
}

def @func_670(%var_667: Tensor[(16, 4, 11), float64], %var_668: Tensor[(16, 4, 11), float32], %var_669: Tensor[(5, 10), float32]) -> (Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) {
  @func_665(%var_667, %var_668, %var_669) /* ty=(Tensor[(16, 4, 11), bool], Tensor[(1, 5, 10), float32], Tensor[(5, 10), float32], Tensor[(1, 5, 10), float32]) */
}

def @func_1403() -> (Tensor[(16, 4, 11), float64],) {
  @func_1401() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_2414() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %981 = @func_2118() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %982 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %983 = %981.0;
  %984 = @func_591() /* ty=Tensor[(16, 4, 11), float64] */;
  %985 = %982.1;
  (%983, %984, %985)
}

def @func_1904() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
  %990 = fn () -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) {
    %986 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %987 = @func_1792() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
    %988 = %986.0;
    %989 = %987.1;
    (%988, %989)
  };
  %990() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */
}

def @func_2480(%var_2478: Tensor[(16, 6, 12), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) {
  @func_2477(%var_2478) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) */
}

def @func_3779() -> Tensor[(16, 4, 11), uint8] {
  @func_3777() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_4961() -> (Tensor[(16, 4, 11), float64],) {
  @func_4959() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_1471() -> Tensor[(16, 4, 11), uint8] {
  %991 = @func_889() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %992 = %991.0;
  %993 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(16, 4, 11), uint8] */;
  %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%992, dtype="uint8") /* ty=Tensor[(16, 4, 11), uint8] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%995, %996) /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_1565(%var_1544: Tensor[(14, 2, 16), float32], %var_1545: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(16, 16, 9), float32], Tensor[(2304), float32]) {
  %997 = cast(%var_1545, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %998 = shape_of(%var_1544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_1544, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1001 = cast(meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1002 = reshape(%1001, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), float32] */;
  %1003 = @func_329(%1002) /* ty=(Tensor[(16, 16, 9), float32],) */;
  %1004 = floor_mod(%999, %1000) /* ty=Tensor[(14, 2, 16), float32] */;
  %1005 = %1003.0;
  (%1004, %1005, meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */)
}

def @func_3062(%var_3054: Tensor[(14, 8, 11), float64]) -> Tensor[(14, 8, 11), float64] {
  %1006 = cast(%var_3054, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  erf(%1006) /* ty=Tensor[(14, 8, 11), float64] */
}

def @func_1391() -> (Tensor[(16, 4, 11), float64],) {
  %1009 = fn () -> (Tensor[(16, 4, 11), float64],) {
    %1007 = @func_1311() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %1008 = %1007.0;
    (%1008,)
  };
  %1009() /* ty=(Tensor[(16, 4, 11), float64],) */
}

def @func_8083(%var_8081: Tensor[(15, 9, 3), uint16]) -> (Tensor[(15, 9, 3), uint16],) {
  @func_8080(%var_8081) /* ty=(Tensor[(15, 9, 3), uint16],) */
}

def @func_8281() -> (Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(2304), float32], Tensor[(196), float64], Tensor[(16, 4, 11), float64]) {
  %1010 = @func_1303() /* ty=(Tensor[(16, 4, 11), float64],) */;
  %1011 = @func_7224() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(196), float64], Tensor[(196), float64], Tensor[(910), float32], Tensor[(16, 4, 11), uint8], Tensor[(16, 6, 12), bool], Tensor[(1152), bool], Tensor[(2304), float32], Tensor[(16, 4, 11), float64]) */;
  %1012 = cast(meta[relay.Constant][47] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %1013 = reshape(%1012, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %1014 = @func_3142(%1013) /* ty=(Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(1500), uint16], Tensor[(196), float64]) */;
  %1015 = %1010.0;
  %1016 = %1011.0;
  %1017 = %1014.0;
  %1018 = @func_1861() /* ty=Tensor[(16, 4, 11), float64] */;
  (%1015, %1016, %1017, meta[relay.Constant][47] /* ty=Tensor[(196), float64] */, %1018)
}

def @func_4538() -> Tensor[(2304), float32] {
  %1020 = fn () -> Tensor[(2304), float32] {
    %1019 = @func_2079() /* ty=(Tensor[(?, 5, 10), int16], Tensor[(2304), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), float64]) */;
    %1019.1
  };
  %1020() /* ty=Tensor[(2304), float32] */
}

def @func_7350(%var_7348: Tensor[(448), float32]) -> (Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(448), float32]) {
  @func_7347(%var_7348) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 16, 9), float32], Tensor[(448), float32]) */
}

def @func_7994(%var_7993: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 16, 9), float32], Tensor[(16, 4, 11), uint8]) {
  %1039 = fn (%var_7948: Tensor[(1152), bool]) -> (Tensor[(16, 4, 11), float64], Tensor[(1152), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 16, 9), float32], Tensor[(16, 4, 11), uint8]) {
    %1021 = @func_2318() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8]) */;
    %1022 = cast(%var_7948, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %1023 = reshape(%1022, newshape=[16, 6, 12]) /* ty=Tensor[(16, 6, 12), bool] */;
    %1024 = @func_2477(%1023) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), bool], Tensor[(16, 6, 12), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 6, 12), bool]) */;
    %1025 = %1024.1;
    %1026 = cast(%var_7948, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
    %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1028 = cast(%1025, dtype="uint8") /* ty=Tensor[(1152), uint8] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1030 = @func_1676() /* ty=(Tensor[(16, 16, 9), float32],) */;
    %1031 = %1030.0;
    %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(16, 16, 9), float32] */;
    %1033 = @func_7709() /* ty=(Tensor[(16, 4, 11), uint8],) */;
    %1034 = %1021.0;
    %1035 = bitwise_xor(%1028, %1029) /* ty=Tensor[(1152), uint8] */;
    %1036 = @func_3782() /* ty=Tensor[(16, 4, 11), uint8] */;
    %1037 = asinh(%1032) /* ty=Tensor[(16, 16, 9), float32] */;
    %1038 = %1033.0;
    (%1034, %1035, %1036, %1037, %1038)
  };
  %1039(%var_7993) /* ty=(Tensor[(16, 4, 11), float64], Tensor[(1152), uint8], Tensor[(16, 4, 11), uint8], Tensor[(16, 16, 9), float32], Tensor[(16, 4, 11), uint8]) */
}

def @func_5164() -> Tensor[(16, 4, 11), float64] {
  @func_5162() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_809() -> Tensor[(16, 4, 11), float64] {
  @func_807() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_7366() -> Tensor[(16, 4, 11), uint8] {
  %1041 = fn () -> Tensor[(16, 4, 11), uint8] {
    %1040 = @func_3475() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), uint8], Tensor[(50), float32]) */;
    %1040.1
  };
  %1041() /* ty=Tensor[(16, 4, 11), uint8] */
}

def @func_7253() -> (Tensor[(16, 4, 11), float64],) {
  %1042 = @func_2526() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %1043 = %1042.0;
  (%1043,)
}

def @func_7894() -> (Tensor[(16, 4, 11), float64], Tensor[(9, 14, 4), bool], Tensor[(16, 4, 11), uint8]) {
  %1044 = @func_4194() /* ty=(Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float64]) */;
  %1045 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %1046 = atanh(%1045) /* ty=Tensor[(9, 14, 4), float32] */;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %1048 = log2(%1047) /* ty=Tensor[(9, 14, 4), float32] */;
  %1049 = cast(%1046, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %1050 = shape_of(%1048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1051 = cast(%1048, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1053 = %1044.2;
  %1054 = less(%1051, %1052) /* ty=Tensor[(9, 14, 4), bool] */;
  %1055 = @func_2677() /* ty=Tensor[(16, 4, 11), uint8] */;
  (%1053, %1054, %1055)
}

def @func_1862() -> Tensor[(16, 4, 11), float64] {
  %1057 = fn () -> Tensor[(16, 4, 11), float64] {
    %1056 = @func_1235() /* ty=(Tensor[(16, 4, 11), float64],) */;
    %1056.0
  };
  %1057() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_4497() -> Tensor[(11, 16, 8), int8] {
  @func_4495() /* ty=Tensor[(11, 16, 8), int8] */
}

def @func_807() -> Tensor[(16, 4, 11), float64] {
  @func_591() /* ty=Tensor[(16, 4, 11), float64] */
}

def @func_2591(%var_2589: Tensor[(16, 4, 12), float64], %var_2590: Tensor[(1152), bool]) -> (Tensor[(16, 4, 12), uint32], Tensor[(2304), float32], Tensor[(1152), bool]) {
  @func_2587(%var_2589, %var_2590) /* ty=(Tensor[(16, 4, 12), uint32], Tensor[(2304), float32], Tensor[(1152), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

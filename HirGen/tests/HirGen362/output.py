import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_264 = relay.var("var_264", dtype = "float32", shape = (1, 5, 10))#candidate|264|(1, 5, 10)|var|float32
uop_265 = relay.rsqrt(var_264.astype('float32')) # shape=(1, 5, 10)
output = uop_265
output2 = uop_265
func_268 = relay.Function([var_264,], output)
mod['func_268'] = func_268
mod = relay.transform.InferType()(mod)
var_269 = relay.var("var_269", dtype = "float32", shape = (1, 5, 10))#candidate|269|(1, 5, 10)|var|float32
output = func_268(var_269)
func_270 = relay.Function([var_269], output)
mutated_mod['func_270'] = func_270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_325 = relay.var("var_325", dtype = "float32", shape = (16, 16, 9))#candidate|325|(16, 16, 9)|var|float32
uop_326 = relay.log2(var_325.astype('float32')) # shape=(16, 16, 9)
output = relay.Tuple([uop_326,])
output2 = relay.Tuple([uop_326,])
func_329 = relay.Function([var_325,], output)
mod['func_329'] = func_329
mod = relay.transform.InferType()(mod)
var_330 = relay.var("var_330", dtype = "float32", shape = (16, 16, 9))#candidate|330|(16, 16, 9)|var|float32
output = func_329(var_330)
func_331 = relay.Function([var_330], output)
mutated_mod['func_331'] = func_331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_363 = relay.var("var_363", dtype = "bool", shape = (16, 6, 12))#candidate|363|(16, 6, 12)|var|bool
var_364 = relay.var("var_364", dtype = "bool", shape = (16, 6, 12))#candidate|364|(16, 6, 12)|var|bool
bop_365 = relay.logical_or(var_363.astype('bool'), relay.reshape(var_364.astype('bool'), relay.shape_of(var_363))) # shape=(16, 6, 12)
output = bop_365
output2 = bop_365
func_368 = relay.Function([var_363,var_364,], output)
mod['func_368'] = func_368
mod = relay.transform.InferType()(mod)
var_369 = relay.var("var_369", dtype = "bool", shape = (16, 6, 12))#candidate|369|(16, 6, 12)|var|bool
var_370 = relay.var("var_370", dtype = "bool", shape = (16, 6, 12))#candidate|370|(16, 6, 12)|var|bool
output = func_368(var_369,var_370,)
func_371 = relay.Function([var_369,var_370,], output)
mutated_mod['func_371'] = func_371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "float32", shape = (7, 10, 13))#candidate|380|(7, 10, 13)|var|float32
var_381 = relay.var("var_381", dtype = "float32", shape = (7, 10, 13))#candidate|381|(7, 10, 13)|var|float32
bop_382 = relay.not_equal(var_380.astype('bool'), relay.reshape(var_381.astype('bool'), relay.shape_of(var_380))) # shape=(7, 10, 13)
uop_396 = relay.cosh(var_381.astype('float32')) # shape=(7, 10, 13)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_410 = relay.var("var_410", dtype = "bool", shape = (96, 12))#candidate|410|(96, 12)|var|bool
call_409 = func_368_call(relay.reshape(var_410.astype('bool'), [16, 6, 12]), relay.reshape(var_410.astype('bool'), [16, 6, 12]), )
call_411 = func_368_call(relay.reshape(var_410.astype('bool'), [16, 6, 12]), relay.reshape(var_410.astype('bool'), [16, 6, 12]), )
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
call_424 = func_368_call(relay.reshape(call_409.astype('bool'), [16, 6, 12]), relay.reshape(call_409.astype('bool'), [16, 6, 12]), )
call_425 = func_368_call(relay.reshape(call_409.astype('bool'), [16, 6, 12]), relay.reshape(call_409.astype('bool'), [16, 6, 12]), )
output = relay.Tuple([bop_382,uop_396,call_409,var_410,call_424,])
output2 = relay.Tuple([bop_382,uop_396,call_411,var_410,call_425,])
func_433 = relay.Function([var_380,var_381,var_410,], output)
mod['func_433'] = func_433
mod = relay.transform.InferType()(mod)
var_434 = relay.var("var_434", dtype = "float32", shape = (7, 10, 13))#candidate|434|(7, 10, 13)|var|float32
var_435 = relay.var("var_435", dtype = "float32", shape = (7, 10, 13))#candidate|435|(7, 10, 13)|var|float32
var_436 = relay.var("var_436", dtype = "bool", shape = (96, 12))#candidate|436|(96, 12)|var|bool
output = func_433(var_434,var_435,var_436,)
func_437 = relay.Function([var_434,var_435,var_436,], output)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
const_585 = relay.const([[[-4.048549,-8.731927,-4.978514,-4.149153,1.867600,-9.578748,3.922918,2.566219,-7.177420,9.030094,5.799871],[5.537319,-3.072873,4.892701,-0.678016,8.932942,-5.388814,8.715795,-7.189767,1.733906,-6.195292,0.854117],[-7.094327,-8.923508,-1.235341,-9.803624,6.186798,8.736611,8.636716,-8.510836,9.790590,-7.092212,2.906521],[6.971121,-3.381588,1.138032,-0.117015,-3.573936,-3.446135,0.887594,3.762190,-2.941603,6.119561,-6.242353]],[[-5.438263,2.299757,6.905882,1.596267,0.512258,-2.801054,5.593999,4.511803,4.369588,-4.251531,-9.994508],[-7.583748,2.282112,-8.437304,-7.786721,4.461491,3.511775,-7.603908,0.894496,0.803846,-2.905709,-3.249475],[-2.598239,3.149966,8.682197,1.073079,3.953836,9.924183,-6.906632,-5.239302,2.356893,4.489940,-4.307576],[8.250941,6.756974,-8.823848,-0.444120,-7.344339,-8.410634,-0.934248,5.010070,2.304608,4.344477,-3.802628]],[[6.425640,-8.490397,-9.202488,8.168589,-2.415095,-0.361502,-1.384371,9.230395,2.626672,2.517527,-9.211513],[-0.674934,5.731821,-7.974150,-7.672855,-4.426867,6.321001,-8.797112,-1.307528,-2.332131,-1.037592,-3.941197],[-8.081827,-2.415206,1.235606,1.770574,8.645709,-5.039891,-5.028130,-3.841053,2.322699,-9.493256,4.744401],[-4.575136,-2.817098,-2.307507,-8.985507,5.647887,4.838357,-3.257296,5.363019,-6.539814,8.284819,2.623870]],[[6.449506,8.569170,-5.847842,-6.517268,-6.686889,9.458004,9.840116,-6.546602,0.988876,-0.742285,7.181198],[0.948310,4.037041,9.699890,-3.324708,-8.631288,-7.030172,-9.415119,3.064510,4.974487,-9.754374,-0.487533],[-8.971268,8.172223,5.565789,-3.127452,-5.774264,4.509933,5.968788,2.324423,-9.623649,-5.162804,6.086118],[3.993698,9.764780,-4.310036,-5.441180,5.227096,3.982258,-6.630166,2.658329,8.392547,-8.429810,1.347193]],[[-3.365142,-6.409029,-1.929957,3.984407,8.988311,-6.521419,7.952046,-1.790646,8.677136,7.099823,-5.270856],[2.828491,-0.074314,-4.351803,-7.117299,8.557226,-9.590520,6.563277,-2.626712,-2.144689,7.891515,-7.403066],[1.486623,-5.476818,-6.882070,-4.452628,2.173311,-5.516636,-4.389442,7.600082,-2.422535,8.405575,-8.686362],[9.804965,-0.289374,-6.551741,-8.368745,-8.104765,-3.683140,9.982791,-9.853892,8.199649,5.215816,-4.926628]],[[-6.407660,-4.423373,-4.416421,5.967123,-1.122722,5.734366,-9.159511,8.635384,-4.593178,7.967816,-7.406109],[0.471688,-6.672693,2.658038,6.945003,5.711138,2.904933,-6.126908,-8.344422,-9.945099,7.335700,9.633586],[2.368549,-3.543716,-5.735853,-1.017457,-7.045677,-2.063330,3.012933,3.265373,3.134583,-8.542569,-0.001427],[-7.825674,0.246202,-6.531753,-2.069772,-3.168183,-1.971453,5.830220,-8.087030,8.815507,0.792423,4.464678]],[[4.245889,2.923102,-8.617507,9.422590,3.744841,3.080748,-9.898820,2.959957,3.230776,1.246597,-7.027356],[-2.228947,-8.195470,-8.775437,2.723807,-0.899578,-9.563473,7.727805,-7.583578,8.172856,-8.243365,-1.209291],[-1.050919,4.051713,0.699082,6.314087,1.355052,4.131280,-0.465831,-9.820548,5.109394,-9.754854,-5.692357],[-2.606995,2.916620,-6.187237,-3.330365,-5.023278,-6.690795,-2.167894,-2.375211,-7.727112,-9.879672,-0.552821]],[[4.913757,-7.191627,5.823103,-2.718934,5.959161,-8.960059,-4.528984,-8.203628,4.878322,-3.231181,6.656428],[-2.274390,-1.777447,4.624697,-0.825255,2.910861,-4.318349,-7.701248,7.202226,-6.477493,-1.330071,0.443277],[6.127528,6.058428,-4.599645,7.943414,8.042041,-3.008711,-1.584350,-8.121716,6.200765,-7.348306,2.480643],[7.464937,2.558791,9.542161,0.173331,-9.130137,8.510329,8.070591,0.208348,8.206172,-1.162207,9.307538]],[[7.485845,2.217060,9.264188,2.542933,9.282068,7.016183,-1.834823,-8.643125,3.743489,-8.827984,-7.954732],[9.086593,-7.476416,-2.476561,-9.561676,1.677659,4.667179,-6.216343,-9.316727,-5.925298,-7.962521,-0.589387],[-8.408858,-2.713241,-9.304177,-1.663665,3.548719,-9.440326,-5.644429,-5.461584,-5.406739,9.373957,0.527046],[1.674613,2.438219,0.998770,5.279917,-9.369285,-5.589355,-6.217677,2.399362,2.073706,-0.660497,7.833957]],[[6.563635,5.148617,3.145990,1.596400,-4.861585,6.223596,-7.898874,1.189699,-4.361265,-7.826547,9.684246],[8.111331,2.482738,4.991477,4.898512,1.190123,-7.125087,-2.681661,3.482549,-2.788034,-6.822690,7.817719],[-9.797884,2.124513,-2.954104,1.950636,-3.018848,-6.447026,-2.280755,1.959332,-9.217231,-5.124847,9.318565],[2.399348,-4.092195,-5.476729,8.847335,-7.255435,-0.804279,-5.610731,3.792200,-3.862440,4.175343,7.003241]],[[-8.147426,4.721722,6.628262,-8.843798,-7.543698,6.283447,8.030970,-1.562828,3.977832,1.298358,-9.698000],[-7.948851,2.640600,3.296253,-5.010919,-7.295673,6.468632,6.520857,9.249101,4.454619,8.741316,5.710106],[-8.275935,7.006158,-1.505658,5.567291,0.243034,-1.061403,4.258470,7.587327,-5.061430,-3.667426,3.590308],[8.844562,1.803621,-2.568054,6.189745,-4.786249,8.345571,-0.757267,-1.955488,-9.796071,5.127582,-7.608180]],[[-0.366529,-5.446536,-1.714785,-9.458921,3.080129,-1.319180,-6.831000,9.049738,-4.792871,7.100466,-0.494183],[2.398701,-8.339154,-5.525683,-1.448058,-1.459304,-4.129973,-0.693192,2.203266,-7.726546,-5.063124,-2.806935],[8.087852,-8.323094,0.898136,-1.526074,9.481706,-7.107128,0.309762,-5.337794,2.816476,4.669515,5.604756],[-7.094162,-5.881140,0.162315,-4.194992,-0.855687,-6.005138,8.832035,-7.857908,6.890071,-8.144489,8.496556]],[[-4.555017,1.106263,-5.412487,0.453811,-0.331207,6.469092,-0.270468,3.139796,-8.036021,-8.141735,7.655970],[-4.504691,4.599040,1.248618,8.449838,-2.624123,-1.507463,2.541759,-1.588429,7.517796,9.912579,3.915457],[4.757365,-0.791307,-6.410072,-9.426563,-9.955443,-8.970259,-1.815757,9.592385,-3.611300,2.154920,-7.641133],[-9.547401,4.890805,2.454846,-5.266485,-8.620717,-2.569742,3.700227,-8.646082,-2.034871,-4.473394,-6.704206]],[[-6.993138,-2.561424,3.937122,-0.525614,-9.790958,-2.646993,-0.073385,-6.728738,7.009050,-8.143364,7.009458],[-9.714346,-3.349300,9.531949,0.806703,7.774824,7.849386,1.281968,-6.058106,-6.549448,-5.103223,-5.662417],[9.519889,3.497331,-2.857021,-3.603706,2.505032,5.892576,0.261774,-8.432565,-8.833085,-5.694394,0.460590],[7.544990,8.643817,-5.915708,-3.748777,-7.122808,-9.020806,-6.637379,-2.001442,-7.261460,-1.852015,5.305991]],[[-4.598740,-3.668312,3.648203,5.657875,-2.892714,-1.831975,-5.540151,9.635557,-3.409049,-2.686598,9.315564],[6.813768,0.724025,2.412261,0.185984,8.089872,-0.610671,-0.171070,3.471372,-8.851982,-2.183045,0.444510],[-3.287981,-7.339153,5.295209,6.802635,6.016166,-5.970350,-9.697703,-1.507932,-7.816709,-1.519946,-4.078357],[-9.545039,-9.278288,3.192919,-0.973098,2.867064,-3.481531,7.177604,6.188569,-6.158925,6.117059,6.597077]],[[5.850191,1.081698,-8.747646,-4.741609,-1.984239,-2.684395,-1.832047,-8.316062,-9.278747,8.289164,0.477068],[-4.847678,3.946091,0.347385,6.612783,-9.730910,4.663232,-6.601754,2.563350,-7.331228,-8.108406,-4.152385],[-3.788663,8.626054,8.221998,5.190422,4.110076,6.212590,6.156265,5.080188,9.311436,5.368952,8.710792],[-4.986914,-9.873811,-4.837290,1.966906,8.077930,2.811414,6.344023,9.755053,7.183557,-7.524372,2.958392]]], dtype = "float64")#candidate|585|(16, 4, 11)|const|float64
uop_586 = relay.sinh(const_585.astype('float64')) # shape=(16, 4, 11)
output = uop_586
output2 = uop_586
func_591 = relay.Function([], output)
mod['func_591'] = func_591
mod = relay.transform.InferType()(mod)
mutated_mod['func_591'] = func_591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mutated_mod.get_global_var('func_591')
call_592 = func_591_call()
output = call_592
func_593 = relay.Function([], output)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_609 = func_591_call()
call_610 = func_591_call()
var_613 = relay.var("var_613", dtype = "float64", shape = (16, 4, 11))#candidate|613|(16, 4, 11)|var|float64
bop_614 = relay.add(call_609.astype('float32'), relay.reshape(var_613.astype('float32'), relay.shape_of(call_609))) # shape=(16, 4, 11)
bop_617 = relay.add(call_610.astype('float32'), relay.reshape(var_613.astype('float32'), relay.shape_of(call_610))) # shape=(16, 4, 11)
var_618 = relay.var("var_618", dtype = "float32", shape = (16, 4, 11))#candidate|618|(16, 4, 11)|var|float32
bop_619 = relay.not_equal(bop_614.astype('bool'), relay.reshape(var_618.astype('bool'), relay.shape_of(bop_614))) # shape=(16, 4, 11)
bop_622 = relay.not_equal(bop_617.astype('bool'), relay.reshape(var_618.astype('bool'), relay.shape_of(bop_617))) # shape=(16, 4, 11)
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
var_629 = relay.var("var_629", dtype = "float32", shape = (5, 10))#candidate|629|(5, 10)|var|float32
call_628 = func_268_call(relay.reshape(var_629.astype('float32'), [1, 5, 10]))
call_630 = func_268_call(relay.reshape(var_629.astype('float32'), [1, 5, 10]))
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
call_651 = func_268_call(relay.reshape(var_629.astype('float32'), [1, 5, 10]))
call_652 = func_268_call(relay.reshape(var_629.astype('float32'), [1, 5, 10]))
output = relay.Tuple([bop_619,call_628,var_629,call_651,])
output2 = relay.Tuple([bop_622,call_630,var_629,call_652,])
func_665 = relay.Function([var_613,var_618,var_629,], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
mutated_mod['func_665'] = func_665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mutated_mod.get_global_var('func_665')
var_667 = relay.var("var_667", dtype = "float64", shape = (16, 4, 11))#candidate|667|(16, 4, 11)|var|float64
var_668 = relay.var("var_668", dtype = "float32", shape = (16, 4, 11))#candidate|668|(16, 4, 11)|var|float32
var_669 = relay.var("var_669", dtype = "float32", shape = (5, 10))#candidate|669|(5, 10)|var|float32
call_666 = func_665_call(var_667,var_668,var_669,)
output = call_666
func_670 = relay.Function([var_667,var_668,var_669,], output)
mutated_mod['func_670'] = func_670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_672 = func_591_call()
call_673 = func_591_call()
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
const_701 = relay.const([[-7.224462,7.587670,3.735028,3.380149,1.157159],[7.039053,-7.747894,-4.004396,-3.515884,3.831622],[0.287214,6.327804,-7.687374,1.333591,3.892445],[7.375271,0.509223,4.497586,4.392071,-1.867665],[-3.097519,7.833017,7.617387,2.381746,-0.489819],[-4.946574,-6.494914,-9.137159,1.771089,1.175581],[-2.407479,-3.400019,0.295010,8.167060,-7.223067],[7.731895,8.347551,0.294740,0.607985,-3.321982],[9.237501,9.754989,-2.340539,-1.838738,9.177857],[5.209549,-1.926915,-8.867051,8.456737,-0.297931]], dtype = "float32")#candidate|701|(10, 5)|const|float32
call_700 = func_268_call(relay.reshape(const_701.astype('float32'), [1, 5, 10]))
call_702 = func_268_call(relay.reshape(const_701.astype('float32'), [1, 5, 10]))
bop_718 = relay.right_shift(call_700.astype('int16'), relay.reshape(const_701.astype('int16'), relay.shape_of(call_700))) # shape=(1, 5, 10)
bop_721 = relay.right_shift(call_702.astype('int16'), relay.reshape(const_701.astype('int16'), relay.shape_of(call_702))) # shape=(1, 5, 10)
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
const_737 = relay.const([-8.117225,-4.376975,-5.569796,2.514890,9.062321,-7.575161,4.619079,6.863047,-3.968414,-7.124846,3.107305,3.429691,-9.224573,-4.481641,0.401325,-7.021391,0.306629,6.681921,5.636619,0.335569,2.009046,-3.238996,7.239623,-7.789835,6.578080,-0.044363,7.026964,-5.211986,4.670902,-4.736889,-4.680025,-7.616959,3.655106,5.716531,-4.028755,8.004645,0.075374,4.864759,6.842705,-6.651301,-6.312383,0.505985,-2.989792,6.976262,-2.192861,-6.400253,2.399672,-3.152464,-5.403018,7.118862,-1.522015,4.779284,3.390720,-6.374661,-3.732555,9.201073,9.886162,0.620806,-2.843282,0.206830,-9.447584,-8.643428,-5.241469,-5.232217,-0.110766,-1.377327,-1.173071,-0.736660,-2.081529,-9.890342,3.541225,3.400421,-2.887762,-7.585916,-1.486056,7.470722,-0.309467,-0.452003,-8.331659,7.304429,-6.579302,7.989401,3.158922,-5.414242,0.946001,7.952039,-3.182631,7.807702,8.042594,-6.056138,-0.039572,-3.815418,1.571957,4.566050,1.961998,-9.134253,-1.864246,-5.855013,-4.063796,5.567761,2.310853,-5.949035,-8.176475,-3.882413,-8.813051,5.994266,-2.006231,3.064718,-7.033675,5.080641,9.061614,2.394046,0.252369,-8.076352,1.503543,1.177601,-7.312899,-9.375499,-6.716824,-7.894311,0.578614,4.315267,8.990344,5.316681,5.675728,0.971517,4.620020,5.235893,-5.889854,-2.041861,8.261513,-5.681105,6.322534,-8.615566,0.635760,-9.169817,-2.762162,-6.491867,-3.533179,0.459669,-9.736160,6.061725,-0.006578,-5.871086,-0.369979,-0.194854,4.656037,8.407925,9.373689,-7.248863,-8.231622,-7.030613,-3.177353,-4.464710,-6.206592,-2.063930,-4.946568,-6.774999,-3.080962,3.057581,8.777274,1.206515,-0.756860,-2.794621,-5.520275,-2.653852,6.557527,-4.289541,8.111844,9.129703,-5.758346,-0.264363,4.654900,6.776292,9.930807,-2.497583,-4.099375,1.861881,-2.497096,4.530934,-0.267701,0.714046,-8.226471,2.661235,-2.334523,4.499892,5.881072,1.521934,7.925713,-7.143203,9.561883,0.992596,-0.742791,-3.351768,-4.423309,-2.059375,0.502248,1.079533,3.495667,0.761008,8.864043,-6.266227,-6.386905,6.964747,1.730919,-5.411885,-4.170806,-5.412459,7.181835,9.272243,-9.427283,-7.810312,2.887100,0.276523,7.708012,-6.717155,-6.578974,7.106382,-2.949787,-0.547064,-8.922353,-0.714957,-2.599479,-0.003233,5.470511,-6.039887,2.591409,4.773507,-2.792228,6.737763,4.171103,-7.420428,-1.601437,-3.556852,-3.942420,-1.807078,3.628609,2.331371,-5.709079,5.740455,1.573234,8.199102,6.315575,2.192078,-6.775058,8.979398,-4.381609,2.178671,2.922538,9.566432,-5.125577,-8.399509,-9.141524,7.131372,9.343634,-8.417537,-7.739369,9.766189,-2.758310,7.238617,4.603478,-1.497946,-1.531275,2.844040,0.512359,4.665352,-5.612471,3.346663,1.325412,6.184710,-6.095425,6.090097,-4.882602,-9.573513,1.975540,2.171478,-4.907579,-3.686886,3.648323,-8.365320,-4.652585,-6.225622,8.177047,9.094413,-9.152363,-7.570960,-4.226303,-8.303976,-3.218040,9.866921,-8.090465,3.873500,-6.932255,-5.083577,8.315028,-1.100050,-2.655272,-2.089799,7.686220,2.655177,5.130616,-1.444925,7.095562,-8.120380,6.244868,-9.889013,-9.531250,-8.736796,6.479701,-8.642782,3.436642,8.305645,2.868458,3.387750,0.042228,-4.976282,-8.295830,3.644352,0.676710,-1.478575,9.390900,5.984141,-4.782873,4.927494,-8.708418,-9.271526,-1.763324,1.220435,9.897334,-4.578578,2.256163,7.096818,5.084108,-6.343513,-9.618382,0.101850,3.150749,7.320162,-1.440216,8.828657,-4.544140,-9.843743,6.125952,-1.080043,5.983482,-0.456688,-6.767077,-8.183210,-8.293672,-8.992325,9.045884,-4.455327,-4.367292,-7.079785,-1.228160,0.220115,4.280315,-3.657987,-4.087879,-6.174545,8.339279,-4.954510,-3.887940,-4.982089,6.145555,-3.351553,-4.681803,3.553721,-5.203584,-8.915023,-8.421790,-1.318058,8.058281,-6.956199,0.904228,0.142247,9.171536,-5.942169,2.211940,-9.716772,-0.350996,6.494726,-4.649547,7.897272,1.362927,9.992328,-6.528688,2.982545,-0.788572,1.462528,-4.709018,2.285124,-7.489864,-7.286893,-3.803937,4.906763,9.383443,7.878282,4.723674,-8.855568,-7.989037,-6.468030,3.559074,0.675192,-2.334337,-8.855103,0.939244,-8.287276,3.158614,0.407434,-1.533602,-8.485592,-2.503762,8.611032,1.170235,-2.032155,9.085339,-9.386781,-2.798131,1.691422,-3.611333,-1.785855,9.284096,5.737040,5.283933,-3.940550,8.611532,2.098302,-3.832641,-2.085374,-3.363961,-6.981683,6.544900,5.424109,-8.751884,-6.773386,-2.855218,-3.951029,-7.793916,-8.099448,4.875151,8.150629,-3.033342,-1.766050,2.741422,-6.227321,4.275183,8.123105,1.287172,-6.864208,1.660673,-9.512424,5.523601,6.870143,-7.148506,6.393796,-3.588349,7.296853,0.846229,-0.235267,-1.790480,6.627677,1.047320,-7.430115,7.571988,-7.570564,-3.076844,-0.577908,7.841446,4.692702,9.657469,8.409270,9.909274,-2.308604,-9.947628,0.054154,5.755454,-6.256100,6.728126,6.880024,-7.979694,-4.914019,-3.782454,-2.155338,-0.995742,-7.959513,0.477743,-0.228392,-1.929847,1.423816,9.458721,5.468748,2.749756,5.299752,-5.736763,8.635998,-1.437260,6.145562,-9.039782,-9.537157,0.963595,4.614792,3.453210,8.511636,-2.579150,-9.910872,7.308468,1.413012,-6.738563,-7.054841,9.532903,7.414225,6.506008,8.107361,-0.474342,-6.260702,-7.422285,-3.389693,1.673838,1.691213,5.245416,9.745752,6.381424,7.035443,2.245704,-2.191157,-7.880804,-5.813432,7.419241,5.642477,-1.124396,5.878543,8.924705,-6.229210,-7.447340,0.621765,1.681837,-9.977171,4.290373,-8.066823,9.821656,5.933668,-1.923554,9.892385,2.367720,-6.836127,8.347251,-1.060358,5.447442,9.608998,-3.761772,3.683214,-2.112904,-6.095151,-9.415240,-8.167411,-3.351227,3.171427,-1.655716,-2.959763,7.446065,9.654823,-9.893929,-3.029303,-9.421171,0.995402,-9.293017,-0.614874,0.654478,-3.277337,-8.774177,2.801186,-2.388311,8.491977,-4.927714,9.340165,-5.813410,-5.399852,-5.224528,3.801765,-3.927313,-5.325742,5.646783,3.746387,2.059985,-9.886024,5.388533,-5.777865,-4.709865,-9.368576,0.516515,1.005362,-2.497844,5.134418,-4.014427,4.721644,3.871870,7.394273,-4.652465,9.391381,-8.314614,2.323406,-4.409695,8.276467,-7.277395,9.834184,1.797746,3.102523,-8.260138,9.466864,7.117985,5.280643,-5.794034,-8.977585,-4.296365,-4.069645,5.479125,-7.285858,-3.831942,9.872403,4.184987,-1.418157,1.886347,-3.810612,-1.638122,-2.619164,-5.944852,9.079619,-2.523064,6.839018,0.493586,7.478233,-0.345320,-2.579131,6.754687,0.413234,-1.241443,-8.388101,7.946196,2.053294,-1.668343,-0.933827,-5.176574,7.462596,8.857311,1.142404,-2.989267,4.258940,-3.797037,7.892382,5.501197,-8.951879,3.224422,4.714234,4.069505,-9.148206,-3.217263,-1.153559,-1.347133,5.883680,-0.730967,1.740685,2.814621,0.203487,-0.482339,-8.406257,4.409680,-7.442754,9.820811,-5.653893,-8.235964,-0.684258,9.984177,1.202291,-9.632989,9.646257,6.703249,5.384975,4.207626,-4.762672,-4.720372,-3.775694,4.098887,-0.908788,-0.605968,5.126953,2.196809,-7.459010,-2.385028,2.727890,-7.191056,-5.506112,2.368058,5.544731,-8.083515,-5.557780,-8.054713,3.884693,8.354804,-2.025040,-7.923614,6.683599,0.010530,-5.956626,6.659460,-5.337668,-5.923321,-2.132947,-8.417801,-7.611178,4.088170,0.271040,3.657364,-3.983707,-7.810395,8.187736,-5.150006,5.109068,-4.531606,-6.966599,6.840333,2.959907,2.226399,0.434342,3.182355,-3.025527,-0.565435,-3.798067,-0.788902,8.638657,6.738986,7.576604,5.599359,0.086276,-0.968132,4.458398,-1.636831,8.845582,-9.799011,-3.304389,5.283420,0.493276,-0.981668,1.953175,-5.304634,-7.519609,3.550066,4.293575,-3.973409,-2.561488,-2.118199,-4.492500,3.559270,-5.185933,-2.298430,9.069782,-8.568226,2.833487,8.363385,6.284282,2.706731,1.462600,-2.492609,0.493432,-2.272420,4.606823,-3.295797,6.314948,-4.932324,8.772974,-5.805797,-6.817726,9.098899,-7.039578,-8.430619,-4.524864,1.060076,8.352684,0.486593,-6.826184,-2.802230,-6.049724,5.474518,-3.996287,-2.554652,-4.490540,8.855850,1.423134,-5.560571,8.794281,7.973793,0.351709,0.482401,-3.337443,6.752804,-2.074788,3.713363,-8.060292,6.595624,-1.293403,0.024785,-6.426823,8.168134,3.912427,9.320807,-8.877607,9.215895,8.233298,-9.637718,2.455375,-1.560868,-3.848954,-3.865712,-0.916223,7.391176,8.684937,5.981543,3.383820,1.526025,6.085586,2.961917,-5.848085,2.461040,-4.780819,4.485639,4.557430,3.306446,9.832126,5.988146,6.682944,-1.145763,0.447471,8.034205,-9.450380,3.509228,8.724813,-4.453480,0.177993,-5.214544,5.240133,3.610739,4.667500,-9.153468,7.733758,6.959838,8.095292,7.721988,2.063601,6.348644,-2.300035,4.348798,-8.420068,0.756846,3.833991,0.415371,6.373383,-9.687916,5.219850,-6.846588,-0.237613,-8.427766,1.236672,-8.786356,-3.123364,5.641969,-8.004973,-5.543550,-8.831691,7.725367,7.332403,-6.822136,9.078308,-1.909699,-6.391548,3.000790,-4.496208,-0.907791,-5.693733,-7.441544,-3.515368,3.520612,2.567458,4.266097,1.187866,6.701164,0.561699,5.925325,-0.694824,-3.911164,-3.988361,0.381957,7.116534,4.786884,-9.245993,-7.419880,1.779213,-3.083800,3.825583,-1.053887,-1.397657,-8.280409,0.948864,-5.346152,3.832279,-2.111000,3.238474,-1.798179,7.463187,-0.143283,3.474832,9.295406,-1.614730,9.911644,5.930079,-2.829016,-7.306353,-1.101425,-4.221997,0.322695,8.593740,-9.717335,-2.925278,5.149587,-3.481403,0.623469,-4.022866,-8.607055,-9.224196,-0.505608,7.444447,9.034235,4.679465,8.623463,6.704994,6.155231,3.519639,8.324888,-7.418674,5.569071,-4.925876,6.503657,3.576031,4.597286,5.060844,-2.185455,-7.823045,-4.897258,9.512674,0.674339,0.775642,7.292602,-5.722501,-3.578761,6.084342,0.289342,-3.854297,-1.093252,-6.091542,-4.557819,5.754107,-8.064944,-7.406250,-1.983985,6.876936,-2.003624,-8.131347,4.186369,-2.076351,-3.129778,2.717589,3.941705,-0.712170,-6.098128,9.835035,-5.548996,4.446937,-4.113984,-3.155125,5.603041,6.864445,-7.161261,5.183505,-3.636020,8.810795,3.650503,2.205072,-7.924475,-2.467164,-2.696336,0.648758,-2.328238,-5.869575,6.662877,9.826183,-7.248140,-2.737131,0.674064,-6.083436,-9.841989,-0.132012,-7.358116,-6.257973,2.229977,9.043981,1.372226,-8.182822,5.545403,-8.562424,4.222152,4.761121,-7.546691,-3.693826,6.202620,-9.893946,-1.305825,6.790956,-2.236451,-9.201257,-7.417166,2.208929,-5.665552,-0.111132,-8.216167,-6.743069,-2.100511,8.405066,-7.849932,-1.868424,-4.387769,4.402416,5.755436,-5.065157,-2.678479,3.591142,-7.373591,-4.078195,4.586203,3.911552,-1.705763,1.013311,7.050952,3.967629,8.927646,-3.680772,-6.491357,-6.356199,-3.502356,7.764249,6.961085,-1.740477,-9.954490,9.135204,1.423865,0.174030,-2.218658,-7.668224,-9.963593,4.382529,-4.828221,2.394290,7.268775,-6.398010,-6.505597,4.427159,4.093697,-5.490252,-6.853870,4.776368,-7.424471,2.286979,1.289778,-6.320051,-2.076793,9.162310,6.563265,2.391857,1.556198,1.754151,-7.072014,6.117784,-7.292468,8.805055,1.787257,-4.574294,9.901290,5.836722,5.309554,-6.982118,1.432215,-0.278588,2.248633,-0.745372,-5.991634,-8.263611,-4.071648,-0.130355,0.969374,4.775371,-3.250873,-2.840033,-4.615066,-5.141282,-9.977490,9.344886,2.886133,-7.951392,7.822657,6.614841,-6.482451,-4.056247,8.671193,1.121437,-8.572032,-9.810668,-8.210604,9.702274,-9.331050,8.254756,-4.246156,-4.743371,-9.131351,-3.961190,5.282122,1.794043,-9.518172,-4.307910,-8.665729,-4.062650,8.506943,5.944167,-5.241827,-9.213323,8.680859,6.972721,-3.912045,5.527711,-6.035329,-3.321982,6.926273,-2.707575,-5.983812,3.317094,-9.888007,8.413324,-5.329861,-3.272038,9.074542,6.100500,-3.454536,2.788598,8.222462,0.374198,-4.234049,8.033208,-0.070347,9.441391,9.018575,6.036800,7.420222,0.717084,-0.370970,-0.178872,-6.044227,-7.863865,-2.464919,5.705935,-0.914504,2.501675,-2.304671,-7.281984,-9.983936,6.244285,-8.867363,-4.868339,-1.003595,-7.698308,5.564873,-1.693350,-5.583336,-8.854191,-7.738784,-1.496704,-4.466987,-3.028014,6.670948,1.579375,-7.421557,9.921416,-1.222759,-2.493753,0.715241,8.547227,0.659545,-5.188666,-8.570769,-1.741335,-0.957809,9.477324,9.242683,4.855590,-4.362065,-9.494003,-8.040992,5.284228,1.811134,7.348086,-9.212327,8.532932,-7.507597,-8.758163,-4.802625,-8.273747,4.830691,-0.193220,5.584029,0.441478,-9.899258,-5.954514,8.448968,9.107852,-6.836082,9.975648,1.980625,-3.343062,-2.159554,-5.369416,-3.550300,0.302993,-0.717155,-8.305500,-5.768055,6.476548,2.390096,7.593699,-6.686828,-5.104951,2.452889,7.394764,-0.702451,-8.357106,-3.285175,-5.021556,1.606001,0.826894,0.781063,2.743992,4.552914,-3.435046,9.754271,-4.674056,5.543546,-5.054356,-3.040813,4.121442,2.794389,-8.264192,3.865019,-2.383279,-5.768290,-9.008702,2.375862,6.208619,8.572792,-5.382622,2.030845,-7.098193,5.956315,4.034599,-5.842973,-3.648288,0.498892,-2.323903,4.453492,0.693082,-1.683092,9.342805,-9.118488,-2.823618,5.795300,-3.982875,6.729826,3.671030,4.584652,1.656429,0.030142,1.177400,-5.270701,8.373080,0.349545,2.406799,5.381055,0.067436,-8.408019,1.728545,-4.832056,-2.908997,-1.560644,-3.259575,3.937766,6.645736,-6.973677,7.097380,-0.494455,-0.695025,8.414957,6.427164,5.762822,-8.636477,0.537916,6.226763,4.085076,2.376376,8.620544,3.987755,2.894018,7.087427,-4.398759,-4.558747,-1.215782,-5.114200,7.955868,-5.314513,-3.478739,-2.567251,-3.991152,-0.207824,5.656468,0.679884,5.346896,7.209269,3.913250,-1.010447,0.507304,4.352646,-8.377558,-8.125407,8.652650,-5.831259,3.061983,7.960810,-1.850755,-8.837576,-8.173613,-9.216854,-7.983533,-9.801282,-2.883894,7.353475,-0.082002,6.774454,-8.806611,-2.716997,-1.880195,-5.801867,1.985377,2.867231,5.694925,9.644512,9.590682,7.389028,-3.562797,-1.431622,2.490744,-6.591495,-9.759705,-0.710528,8.439883,-0.225943,7.332755,-4.579660,2.450193,-7.588301,5.464561,-6.759250,8.684274,-6.057036,1.921156,-7.787136,9.552395,-5.966989,3.770911,-4.813023,5.719167,-1.861375,9.463014,1.210295,9.839927,6.298310,-7.456071,0.159585,-3.616172,0.276292,-0.185516,-6.640283,-2.584128,7.734844,0.811703,9.309620,7.235630,1.974546,-5.639525,1.112526,-1.519938,-2.065500,-4.287275,-4.984183,2.389206,-8.392770,4.031138,0.408248,-6.227343,0.149965,5.092927,-5.832631,1.022108,9.156425,6.494537,8.078694,-3.611606,-0.216957,4.206285,0.178107,-0.922254,3.368316,-1.759839,5.080903,0.165073,-8.097620,1.799159,0.853888,-6.416598,-9.254006,1.059829,5.436554,4.021399,-7.019672,-4.289992,-4.883769,-5.263831,-9.553942,-1.424784,9.698924,2.169486,-3.365081,-4.172370,8.675822,0.033002,-9.902432,8.606382,-4.341837,3.570760,8.667348,-9.969966,-8.246001,9.464900,6.880115,6.797164,-9.452855,-6.141233,0.096209,-1.198561,3.050329,1.357690,8.206249,4.943456,9.819538,-5.722668,-0.439688,-0.978580,5.350885,1.260763,-4.375958,5.483086,5.951461,3.294780,7.631227,0.635427,5.560243,-3.794772,1.681412,-7.131352,3.339743,-9.904907,8.837609,-6.523391,-6.540125,6.548223,-0.850509,9.035230,-9.805215,9.321816,2.715040,-9.238879,6.179895,8.230561,-5.199258,6.340534,-8.902743,5.661951,9.705210,1.064195,-1.220128,-1.662794,4.449077,-2.460178,-9.020264,6.994336,8.281033,1.320793,8.630560,3.445455,-4.063938,3.431968,-1.269385,2.283416,-6.987694,-8.310554,7.194861,-0.021419,-9.950384,5.029040,-0.567216,-1.204389,-0.504206,-3.916535,-9.612656,-5.024947,-5.520342,-3.391257,-2.849180,-0.375586,-7.109630,7.623500,7.533442,-6.730329,5.002092,6.962869,6.077709,0.949173,3.244557,3.779545,1.906646,-3.203868,4.525411,4.713965,-9.643317,-8.523318,-1.385259,4.920299,0.877087,3.605856,1.261880,-1.731725,9.105240,-1.007012,6.669253,-1.696348,5.861824,1.333291,1.076020,4.345927,-5.150391,-9.585016,3.887145,5.344210,-2.898844,1.642949,0.389652,-1.197124,1.729542,4.832654,-8.508791,-0.269245,-4.732139,-0.662957,-1.864420,-3.717198,5.947992,3.947629,-5.246056,-2.988605,1.250560,-0.471494,4.010806,8.896924,0.752707,-5.118774,5.152831,-7.075797,-7.931715,3.049522,-1.532138,0.074817,6.238180,-6.056144,9.359276,-6.041172,1.062854,8.944179,8.224238,7.157205,0.616316,-7.457441,-9.807927,3.884742,1.392258,3.631492,-3.962155,3.697857,8.071172,8.350603,-8.281067,-9.718090,-2.970228,4.408272,-2.600228,-4.678862,-5.465040,-2.968196,8.636462,6.138221,7.391134,-4.193927,9.512315,2.646534,-1.918419,-3.489627,-7.017080,-3.099729,-8.490259,-8.216170,-1.425048,0.085059,7.435857,-8.979113,5.448565,6.954910,-1.845510,-1.610595,3.046382,1.563283,-4.048234,1.246778,-6.631481,4.356983,5.877089,0.067659,-3.485712,-0.641116,4.228066,8.087285,-3.407727,5.745252,-6.344786,-3.533256,0.115258,1.050620,8.301862,-3.471905,-1.371040,2.352701,4.650728,-7.739046,3.411611,9.519848,2.927347,5.661608,5.475517,-2.094204,-3.694888,3.332989,-4.293094,8.249487,4.559937,6.513161,4.587762,0.519885,-9.238629,-3.994390,-7.699510,-3.982937,-3.583416,0.025680,-7.356171,-5.449776,1.180372,-1.594599,-1.640501,7.240542,7.353904,-6.225001,1.430513,4.447814,4.334200,4.432781,1.498749,7.864175,1.801563,9.126269,-6.226158,-2.417629,5.467266,-1.610860,-1.832495,-1.069348,-4.583177,-6.600593,-8.381849,1.627072,-5.913657,-4.758963,-7.183986,4.130892,-4.962352,5.295770,-8.313381,-0.285733,-2.317620,-5.817046,0.455252,-9.468784,3.205650,4.060739,-3.821324,0.054067,-6.579343,-8.078340,7.129398,-9.246585,-6.991855,-7.486826,-0.137556,0.948990,1.467665,2.448341,-1.474502,8.270499,6.132436,4.956488,6.714583,-2.155593,-4.903492,4.201175,-3.711758,-3.916124,6.968908,-5.912891,1.201619,5.185088,3.449531,9.469232,-0.602691,7.107906,-1.191052,-1.404547,2.707472,3.457900,9.331927,7.540762,-0.548338,9.769943,-9.202546,5.595463,7.432327,8.536362,-8.207257,-3.836742,5.330257,-4.628132,-5.568856,2.854623,1.801350,-7.258832,2.123248,-0.226369,3.101040,-1.816096,7.890735,6.004141,-8.534326,9.014218,-3.654453,4.119216,3.182355,1.102152,-8.859905,9.240814,5.279686,6.217294,7.675975,-2.561858,3.793401,9.894421,3.227883,0.395512,7.851777,-6.180674,-6.616574,0.038464,0.272112,5.650039,3.059913,0.878035,-8.404562,-9.730125,-5.314452,-7.554847,0.459541,1.609128,7.047197,-8.408878,4.215463,-9.118806,-0.569669,-1.672689,-1.299226,-9.002529,-6.013138,-9.818295,-0.480827,1.868914,9.957573,-4.791984,6.420209,5.055021,-7.597972,7.901752,-2.296448,0.403121,3.424778,-1.095703,2.558812,4.698987,-6.825857,9.212973,-5.000845,-3.194203,-1.021559,-9.424591,-7.241230,-4.088860,3.792602,-4.085722,6.180326,4.331406,9.510694,-2.544000,-3.366623,1.669048,7.327544,5.651291,6.428430,-5.840694,-8.736952,8.164729,-2.967609,8.906225,2.107172,-1.325538,9.147123,6.831023,8.115532,5.138317,8.459937,0.060061,9.042934,1.962209,-9.006292,1.788033,-5.537245,2.445059,-7.586723,1.197777,-3.219797,1.716205,9.596850,1.607847,-8.066330,-4.543443,5.773406,9.977314,-7.623460,8.933612,-9.958076,5.122364,1.289175,0.282494,4.741131,2.216931,-1.900383,6.671799,5.393306,5.306175,4.367991,2.811661,1.409210,-4.536121,6.362633,-6.414926,-7.272882,1.450970,-0.230361,1.517237,2.722258,2.171933,1.503528,7.516548,8.999626,3.100266,-0.661117,2.354825,1.405013,3.253360,0.810840,-8.781779,7.901328,6.164590,-4.661809,8.944077,8.287974,-0.142146,3.674650,6.784289,-4.591617,6.586225,-5.029609,-6.098064,-5.703718,-8.155781,9.055549,5.946959,-9.109983,-3.748174,-3.491377,-8.224162,-6.203296,-2.311947,-0.178767,8.358617,-5.219041,5.250976,8.933814,-5.659529,9.049763,-5.302765,2.710268,4.101133,-8.001481,3.917868,3.997033,5.309374,-8.402783,6.606523,8.194318,8.966081,-8.462601,-1.748444,-4.559940,4.320181,-3.031576,-6.279432,-6.988034,3.787695,8.518668,1.213194,9.894319,-8.520264,-1.859569,-2.952914,-5.097566,-7.385768,7.307825,2.847950,0.493090,9.564384,-3.304992,-2.780269,-4.208228,6.981894,-0.145376,-4.222682,7.201503,2.778546,1.632709,-8.810020,1.032940,-6.836792,3.053618,-8.106629,-8.289564,-1.595802,4.783747,5.446427,7.319858,0.451539,4.280244,3.146277,-0.800264,6.192323,-8.105304,-7.399567,-9.474810,-5.204279,-8.932189,-3.937105,7.447375,4.732104,9.358898,-2.241269,4.528567,-2.475299,6.474389,-8.882539,-3.709842,5.106915,7.669464,-4.777678,-0.502869,7.146623,6.455752,-5.534709,8.336608,5.362475,-9.160397,1.529006,7.511856,6.800325,6.453613,9.257045,1.632832,-1.277255,-0.734515,-1.072596,-4.748963,8.769330,3.848094,-6.834848,5.708913,-9.028094,5.046291,8.796903,7.016242,3.703361,-9.303602,5.171565,-7.941104,-4.586949,-8.305274,8.523641,8.488043,8.533022,-7.167118,3.997223,5.386373,-7.670131,2.641005,-1.775206,-6.599917,4.748762,-9.125168,-8.214017,-7.768659,3.089493,3.877162,4.473694,7.762550,1.097066,-0.431499,2.802621,-2.931692,-3.803151,0.083825,3.220496,2.015314,7.806871,5.572353,-1.976736,-2.147411,-7.930575,-1.836463,-8.951994,-8.535195,-5.101725,-4.737311,7.215416,4.361086,-2.523148,-7.039594,-6.864000,-4.621421,4.183729,8.909450,-9.879544,8.877619,2.869275,-7.964759,8.763580,5.477445,-9.213880,1.845603,2.024810,4.441874,4.496732,8.998020,6.077807,8.593594,3.746945,-6.191396,4.468578,-9.129486,-5.634111,-2.306733,-9.169527,0.139718,-1.215795,-8.449009,2.834181,0.714130,3.335409,-2.252334,1.999301,0.186226,-8.526735,-5.092649,3.853304,-1.815363,9.071398,8.192133,-7.364506,-0.986821,2.184806,-4.658003,1.888908,7.787192,-4.006477,3.549376,-0.705833,-7.910393,3.930949,-2.058983,-6.297341,-7.356038,4.480134,4.401740,-4.857102,-7.963267,-8.722926,-6.745303,1.051516,-5.919135,1.429036,8.055562,-6.208570,-7.034552,-9.102564,-0.016187,6.100049,-2.101445,-6.546143,-9.148790,-3.343132,-4.980861,-0.581156,-1.068961,-4.297990,0.289009,-4.595752,4.693596,9.511449,-0.101061,-0.709383,-7.327384,7.760101,3.149944,-0.484234,-7.866966,-8.283782,2.961190,2.306446,-5.508932,-6.621878,5.231863,-7.399617,1.704258,-1.911206,6.392859,-3.883885,-9.076731,2.744575,3.592287,-6.274395,-1.117792,-1.686900,8.404639,4.905256,5.793806,0.574875,-0.073489,-1.537321,7.923501,-0.339348,2.183048,-3.532944,-6.786002,9.206352,1.836197,-6.058320,6.270672,4.371014,-5.839164,-0.065702,-2.096435,5.582514,-3.282621,-9.800867,-1.983573,-6.350704,1.108708,-2.037902,-2.609113,5.653134,2.959699,8.734656,-0.074651,8.897015,3.715397,2.114714,6.619248,6.246314,-4.055776,-0.913878,-0.881025,-2.454579,7.384793,7.213942,2.764741,-5.622689,-5.420324,5.898097,-8.746391,-0.066413,-6.965712,-2.597972,-1.698184,1.597097,2.194032,6.537853,1.247487,-6.714139,-2.383761,-4.239983,-5.466319,-2.444775,1.696277,-8.833417,-0.055464,6.521684,-6.549101,4.840110,9.771387,9.008150,-5.103949,-8.960635,-8.117742,-7.837539,4.966387,-2.717848,7.470989,-7.757325,-7.434359,7.239459,9.339018,-4.717137,-3.833976,-0.684120,-9.169506,-8.669551,4.033219,-5.101511,9.005163,-7.710715,-4.608446,9.142497,-9.017149,-2.480193,-7.280569,0.594735,-2.555677,2.578316,5.561368,6.006645,1.586525,-5.260340,-7.940343,-0.976587,-8.251610,-3.447072,-1.712410,-1.626271,-2.461960,9.260777,-4.862216,-4.179334,-9.069981], dtype = "float32")#candidate|737|(2304,)|const|float32
call_736 = relay.TupleGetItem(func_329_call(relay.reshape(const_737.astype('float32'), [16, 16, 9])), 0)
call_738 = relay.TupleGetItem(func_331_call(relay.reshape(const_737.astype('float32'), [16, 16, 9])), 0)
output = relay.Tuple([call_672,bop_718,call_736,const_737,])
output2 = relay.Tuple([call_673,bop_721,call_738,const_737,])
func_759 = relay.Function([], output)
mod['func_759'] = func_759
mod = relay.transform.InferType()(mod)
output = func_759()
func_760 = relay.Function([], output)
mutated_mod['func_760'] = func_760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_799 = func_591_call()
call_800 = func_591_call()
output = call_799
output2 = call_800
func_807 = relay.Function([], output)
mod['func_807'] = func_807
mod = relay.transform.InferType()(mod)
mutated_mod['func_807'] = func_807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mutated_mod.get_global_var('func_807')
call_808 = func_807_call()
output = call_808
func_809 = relay.Function([], output)
mutated_mod['func_809'] = func_809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_818 = func_807_call()
call_819 = func_807_call()
output = relay.Tuple([call_818,])
output2 = relay.Tuple([call_819,])
func_822 = relay.Function([], output)
mod['func_822'] = func_822
mod = relay.transform.InferType()(mod)
output = func_822()
func_823 = relay.Function([], output)
mutated_mod['func_823'] = func_823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_829 = relay.var("var_829", dtype = "uint16", shape = (15, 10, 10))#candidate|829|(15, 10, 10)|var|uint16
var_830 = relay.var("var_830", dtype = "uint16", shape = (15, 10, 10))#candidate|830|(15, 10, 10)|var|uint16
bop_831 = relay.logical_xor(var_829.astype('uint16'), relay.reshape(var_830.astype('uint16'), relay.shape_of(var_829))) # shape=(15, 10, 10)
bop_849 = relay.floor_divide(var_829.astype('float32'), relay.reshape(var_830.astype('float32'), relay.shape_of(var_829))) # shape=(15, 10, 10)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
const_858 = relay.const([False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False], dtype = "bool")#candidate|858|(1152,)|const|bool
call_857 = func_368_call(relay.reshape(const_858.astype('bool'), [16, 6, 12]), relay.reshape(const_858.astype('bool'), [16, 6, 12]), )
call_859 = func_368_call(relay.reshape(const_858.astype('bool'), [16, 6, 12]), relay.reshape(const_858.astype('bool'), [16, 6, 12]), )
output = relay.Tuple([bop_831,bop_849,call_857,const_858,])
output2 = relay.Tuple([bop_831,bop_849,call_859,const_858,])
func_865 = relay.Function([var_829,var_830,], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mutated_mod.get_global_var('func_865')
var_867 = relay.var("var_867", dtype = "uint16", shape = (15, 10, 10))#candidate|867|(15, 10, 10)|var|uint16
var_868 = relay.var("var_868", dtype = "uint16", shape = (15, 10, 10))#candidate|868|(15, 10, 10)|var|uint16
call_866 = func_865_call(var_867,var_868,)
output = call_866
func_869 = relay.Function([var_867,var_868,], output)
mutated_mod['func_869'] = func_869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_876 = func_591_call()
call_877 = func_591_call()
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_882 = func_807_call()
call_883 = func_807_call()
output = relay.Tuple([call_876,call_882,])
output2 = relay.Tuple([call_877,call_883,])
func_889 = relay.Function([], output)
mod['func_889'] = func_889
mod = relay.transform.InferType()(mod)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mutated_mod.get_global_var('func_889')
call_890 = func_889_call()
output = call_890
func_891 = relay.Function([], output)
mutated_mod['func_891'] = func_891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_823_call = mutated_mod.get_global_var('func_823')
call_913 = relay.TupleGetItem(func_822_call(), 0)
call_914 = relay.TupleGetItem(func_823_call(), 0)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_916 = func_591_call()
call_917 = func_591_call()
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
const_919 = relay.const([-2.355183,5.195193,-5.838219,3.001219,-5.034813,2.191754,8.450353,3.511168,-0.425034,-2.686359,-6.706470,0.384566,-4.496693,-7.777125,9.884317,1.905130,-7.276084,1.559656,0.408784,0.747992,0.479797,2.838551,7.433443,5.790747,4.027876,-2.361032,6.701016,0.538032,1.944981,2.552750,2.508033,-7.006874,5.255715,-0.113629,-1.806750,3.831326,-8.329446,-0.221773,2.385979,0.556983,3.709144,-4.360087,8.926815,-4.323873,9.625604,6.675344,-2.692878,-5.324131,1.768553,-9.070789,2.569877,6.852914,1.497165,5.091914,9.808072,2.864487,-2.482522,1.916151,4.066911,-4.232933,5.657563,9.470274,0.183137,-1.610164,-2.658403,-8.768474,-7.460477,0.561686,2.992913,-1.180041,9.731800,-8.541460,-4.386979,0.060172,0.220245,-6.695336,0.611993,5.920554,-2.145199,3.662190,-1.325775,-1.568697,8.990966,-9.094545,-7.166329,-3.597478,-5.985217,1.985284,-2.718408,-9.352272,4.459702,5.095422,-0.760382,5.975892,-9.667565,1.857829,9.261263,7.324173,1.094592,3.516575,-9.338383,3.289429,-2.644680,2.707202,4.522319,3.457889,4.336395,1.258343,9.830092,-2.402635,5.304314,-9.511662,1.809084,-3.837743,-9.378678,-5.385574,2.727839,2.381371,-8.526060,-3.505255,7.487047,-9.652277,-7.352894,-0.068990,5.368524,1.752552,2.751386,3.308497,4.622443,3.806362,9.684462,4.031811,-8.369174,5.374519,3.747535,-3.802942,3.899118,9.818446,7.874218,7.001178,-4.497744,3.426764,-8.152366,-2.094729,-3.751118,2.704293,6.655992,-5.391248,-7.846687,0.366598,-7.786201,-2.214856,-6.777116,0.002945,7.476705,-6.847674,-0.929922,1.299151,-4.675663,-3.527268,-9.383720,5.610412,-9.701422,6.256540,7.998913,5.592789,-4.459576,4.736502,2.630136,-8.166296,8.646291,0.214759,3.883792,-3.700713,-9.816389,-1.767162,7.944535,7.355456,-4.870773,-3.190262,2.722456,5.630992,0.416497,-1.227281,9.613960,6.048066,-6.232861,-5.353171,-1.835255,3.383371,-1.579538,2.363151,2.650037,5.750420,5.531112,4.650161,1.289616,-2.646468,9.515420,-4.045502,-0.943121,8.837213,-5.902203,-7.198998,9.412969,7.237462,6.556361,2.534645,9.658271,-0.987504,-9.847521,7.084864,-6.692998,-5.795807,6.033831,3.459734,-3.695574,-5.590509,-5.350474,7.576284,-0.311160,6.543081,3.369620,4.368388,-1.749176,5.959256,7.640286,-6.291323,3.707127,-0.106731,2.254152,-3.994048,-3.096348,-5.029360,3.931005,-8.742835,5.632015,3.930115,-0.177492,8.199375,4.978400,5.896755,-1.658644,-8.769138,-4.998860,-0.356574,-1.980014,-2.531245,1.083979,-2.476492,-9.893305,-3.181158,-7.118031,8.466575,-9.901209,9.136137,7.716966,8.451643,5.843239,2.536311,-4.322779,6.224816,-8.102851,6.995094,3.877823,-0.830477,1.297245,0.567342,0.814505,-9.221563,1.251601,9.115354,4.356792,-9.368953,-8.507840,-9.337892,6.356975,-3.072561,4.462653,2.372345,9.945125,3.508585,4.975020,-7.617173,9.321604,-3.027751,1.517849,9.485716,-2.177607,9.136021,-2.580383,8.078094,4.191386,0.448914,-5.417891,0.485164,5.634720,-3.428194,2.550743,3.380610,2.997301,-6.606076,2.501582,1.511788,4.993351,-2.892887,1.922693,-2.926425,5.775857,3.597687,-4.311476,9.410215,0.257736,-7.351092,4.283038,6.180420,-3.277559,6.872891,-3.920687,9.086552,8.212297,1.639622,-2.703558,9.434879,1.849109,5.905355,-9.306878,9.125505,-4.313117,-6.614142,5.911304,-4.914761,5.678611,4.643248,7.049082,-9.851503,8.416875,9.081076,7.961155,8.878400,2.334370,-6.010540,-0.063170,-8.607120,-2.895692,-8.204762,-0.565471,7.439448,-3.066349,4.991655,8.841957,-1.967223,8.192901,-5.456464,-9.986054,-3.001921,-0.367918,2.886993,-2.869283,9.417026,6.226545,4.062663,4.150630,8.310260,6.262448,7.128065,-3.278042,8.487052,3.338549,-2.025498,-6.888637,8.493530,-4.450833,8.605862,-5.136402,9.681305,-9.227913,-0.257345,1.768691,1.093143,-9.992133,8.742687,-4.721610,0.898708,7.541438,0.762141,-2.158677,-6.666172,-2.276329,6.928562,2.514596,-2.457875,8.367685,9.307409,-3.632895,-2.278561,2.978973,-6.617322,-0.768931,0.037377,4.420465,6.809478,9.280087,-9.864794,6.994443,6.697130,-9.732879,-6.722725,-3.950371,-3.221532,-5.662038,3.949977,1.092048,1.257926,7.833748,7.474314,-5.809960,-9.740396,-6.503414,0.109211,7.543752,-5.924120,-4.116646,1.826676,-1.751215,4.745599,-7.766522,-8.738028,-9.918986,-9.637283,-9.013458,7.667914,-3.891272,9.135398,-7.262697,7.378438,0.889736,-4.895174,-1.632186,-9.458600,2.541414,-8.006395,-2.943683,7.438014,-7.892590,7.305846,4.389960,1.607342,-3.655187,1.714906,6.746224,-0.576961,-0.805211,-1.656983,5.230350,-2.049110,9.190054,-6.502222,9.680856,-0.148094,8.783521,3.390789,-5.536648,3.718723,3.152604,-6.854925,9.845319,9.255060,8.379325,-5.216454,-3.618321,3.814521,9.279902,6.503867,-2.019837,6.716991,8.413107,-9.977886,9.273984,1.881864,-3.348065,-2.208584,-3.022514,-5.567125,7.656981,-0.934156,4.145063,9.591638,-2.562694,1.127307,9.010844,-9.009109,0.735561,-8.451020,-7.797154,0.332462,6.239957,-5.133484,6.000769,0.511831,-6.614103,-9.848899,-3.380287,-6.152787,0.496433,2.551632,-4.393274,1.149673,-6.320092,0.395163,8.179023,-5.387114,-7.458194,3.018649,9.043587,-3.271446,-0.522532,6.490933,5.573397,5.737773,1.056338,5.202460,0.565353,-8.383835,-5.657279,-2.047644,-3.442295,4.703888,-0.155480,9.779486,2.078581,4.955529,-0.325748,-1.029020,-3.227331,-7.151681,-1.264137,-6.751425,8.507088,-3.940319,-9.292532,0.338490,0.821362,5.413161,6.582743,4.519833,-7.309225,9.129324,1.922579,-9.832083,0.190252,1.417015,-6.988820,2.520816,-3.397997,-5.572704,3.187092,-5.039805,-9.302231,-4.623555,-7.251321,-6.013884,-0.419015,2.107691,-9.190484,3.102332,1.743603,7.206026,-5.479007,6.098160,-9.184627,0.107214,9.098371,-4.264991,8.284141,-1.112747,-2.934325,9.338007,-7.115788,-7.750568,-3.289989,-1.313740,7.626103,-2.726746,0.326141,-2.886270,2.708034,0.223517,2.112177,-8.153967,-1.803394,-3.099554,1.450245,1.146507,9.620676,-5.462187,0.482204,5.123439,2.195830,6.410599,3.344136,-8.544613,2.150204,4.293114,-1.607662,-0.466794,-7.763046,8.309027,-5.528950,6.468099,8.780957,1.385844,6.459434,0.415578,-6.706200,3.029122,-9.056485,-0.078396,5.061627,9.950342,4.032060,-7.995605,-2.145017,-8.895577,-0.228962,-4.184904,4.945782,-8.505580,-9.112541,1.256489,-2.297494,-6.733995,7.612872,8.773945,2.060222,-8.199103,-1.653486,-6.858433,-9.219056,2.363518,7.470543,-1.740359,4.311903,7.802540,-0.674297,7.437175,6.334902,-4.821742,-7.497321,4.787561,-5.512322,6.141906,-9.359599,1.979725,-8.486009,8.138333,0.547720,-5.734158,-0.296762,-7.685960,0.383282,-5.777719,-3.167487,1.247499,-7.249884,-4.654170,-3.908251,8.528930,8.023230,4.865490,2.360229,9.447926,5.604561,0.791450,9.503553,-8.174042,3.981972,4.158660,6.509121,8.202212,4.991159,-5.545151,2.633920,-0.127408,5.760008,-1.323673,-9.823871,7.023358,2.229616,-6.797070,-8.521089,4.468706,9.213169,5.267632,8.914824,-9.478044,-9.397201,-8.999723,-9.709326,8.639762,3.582169,-1.533033,6.028863,4.248829,-7.353367,-9.953432,-5.845451,5.039312,-0.001197,1.238526,9.203590,9.539912,-4.305503,0.129198,-9.131544,-5.234759,-1.737670,-9.970949,-2.691496,-2.903031,4.196257,-0.780899,7.087277,1.520511,-0.017994,7.937828,-6.877779,-5.538655,0.610372,2.052351,-6.740408,1.277954,-3.427371,-7.940410,8.536588,8.841934,6.225695,-9.150496,2.984645,7.438376,-7.837265,5.772398,5.620273,-8.097040,4.664854,-2.513581,2.269392,-1.997099,3.942952,6.009618,-7.635114,1.625418,-3.527785,-5.938052,3.106259,7.067113,-9.249642,-6.765609,-4.924163,-8.587023,-4.569857,5.646339,-7.169686,0.325513,7.414835,-1.272185,-8.457575,6.894379,-6.442119,-5.314204,3.083627,0.594784,1.411801,3.779778,-6.653844,1.918380,4.632025,4.835001,9.717601,1.969866,3.047776,-7.139369,-0.588371,-6.661115,3.158123,-4.611272,-5.778590,-5.478560,-4.091734,-1.617715,-1.933880,8.844610,-7.873458,2.499230,-3.037795,-5.537537,3.405726,7.625522,2.923361,-4.873522,-0.302548,0.422766,-6.077648,-7.891600,-2.327980,-1.834656,0.767198,-2.536568,-1.622350,9.876882,-2.497364,-5.517774,-3.741672,4.248812,5.538439,-6.148469,7.395146,-0.536854,7.330411,-4.969871,5.121488,-5.067817,-1.458741,1.297660,4.143471,1.664223,-1.594966,7.018404,0.150268,-4.612210,-5.904734,6.130674,5.373011,4.785878,-9.055999,-2.782835,-9.446622,-2.131840,9.114695,3.425722,-0.750756,-1.243540,-0.280698,1.462836,7.759812,-9.979578,-2.472166,6.641064,-8.891428,8.641200,-6.334585,-5.514991,-4.773241,9.885939,-4.160512,-5.770888,-8.570622,-0.771441,-6.523667,-4.805491,0.120183,4.164570,-6.914036,0.135699,-4.163812,-4.460755,-4.795934,8.911284,4.649965,-2.771469,-9.837667,7.910224,-6.758824,4.120910,7.769464,-8.212109,2.656469,3.429446,-4.802860,-1.292323,1.950073,4.630945,9.171525,-0.328593,0.472599,6.835893,-8.974692,-2.231234,-3.658206,7.058752,-2.030881,-8.098858,-3.507837,5.724862,6.032447,4.597955,-0.583482,-5.962509,3.862222,6.073141,-0.153687,-8.268902,6.643392,5.634424,8.675862,6.849671,-1.382379,5.778848,1.774522,5.541821,-4.909704,4.337404,3.104095,-2.969419,4.874955,8.581010,-1.300211,-7.490221,5.266324,3.192739,-1.218538,-8.131290,0.379279,3.454337,-8.002701,7.010701,5.383146,-5.395269,-9.094091,-3.272211,-3.199508,0.815725,5.400971,-0.177300,9.712033,1.126398,-4.296879,-0.609840,9.692184,9.281207,-1.907778,-5.861294,1.595034,-4.661231,-9.256418,1.766073,8.225551,6.100516,-2.077517,2.804674,-0.412421,-2.400346,-7.017802,-9.681273,-9.139552,7.610839,-4.940697,1.211956,-3.973417,2.129170,-0.662210,0.993791,-9.706325,-0.615868,-4.562423,-9.693683,6.251873,-8.899517,-6.897535,4.184743,-9.028958,7.154573,9.681579,-2.994986,4.487678,-0.424107,4.989074,2.200937,-8.557425,-8.323693,7.949076,6.838854,4.342002,-8.938546,-3.198555,7.957824,-1.696424,8.651224,4.447022,-5.628097,-3.469373,-1.546525,-0.116802,5.475840,3.912864,-9.783104,-7.454615,4.870772,5.823109,9.181384,-8.474997,-1.305847,-7.792135,-6.752126,0.415548,-3.135471,8.029566,9.158353,-1.506480,-2.193117,5.768085,-4.647330,4.018860,8.183134,6.495587,-3.234467,8.210504,-2.862834,2.149183,2.620342,6.089381,-9.188920,-2.594680,0.640965,-7.792264,0.342806,-3.195413,7.485660,8.537906,-0.155594,-6.307163,-4.291223,6.590158,8.428056,7.687540,3.505352,-1.844004,8.437574,-2.665910,7.140691,3.256209,-0.729673,-5.657853,2.023312,-1.305821,-0.840776,-3.265139,8.492284,0.700208,-9.598025,9.526516,-7.453424,9.896445,4.019988,-6.705207,-0.797787,8.343926,0.195841,3.969936,6.754493,-4.323121,-4.297726,3.700462,-5.925831,-8.713177,2.422981,-3.144973,6.349502,-2.633703,4.001173,1.514714,-2.712594,-5.043405,-4.048050,-8.906004,-6.840061,3.911394,4.925756,-1.411343,6.479114,6.971029,-4.044985,-2.248674,7.094154,-1.408415,4.861043,0.147229,-6.544285,7.935714,2.254843,3.428896,-8.034505,-2.909279,0.038622,7.055248,7.869556,4.907362,4.108924,9.328681,-4.677816,2.666912,8.120492,4.176323,2.860655,-4.827190,-7.065119,-6.088345,-6.489504,8.236455,3.926440,-7.126933,5.228860,-6.568788,-1.397738,8.124358,-0.853947,-8.702674,4.897653,6.323256,2.168114,8.844749,5.347614,-9.255591,-5.406818,2.768472,3.472946,-1.280478,-3.480047,1.844760,-0.848636,3.600323,4.536674,-7.797361,-4.733575,6.134919,3.585261,5.803428,-0.057386,-5.764181,4.429355,-3.439015,-8.323560,6.751054,-7.763649,0.849951,-4.976078,7.588834,-3.679875,-6.185704,8.363548,-0.091145,2.168516,-7.718116,-1.594740,-4.764401,-6.601177,-3.455322,-0.184684,4.710428,-8.863196,4.955139,-6.773791,-7.923419,9.099954,6.995803,6.332089,5.601588,4.585967,-5.521497,3.864958,-4.397725,-5.010923,-1.361833,-2.750212,4.532609,-3.148416,5.170831,1.721498,9.074837,6.224959,5.198529,2.397253,8.448009,-2.023078,-1.163758,-9.664003,-6.082119,0.318941,3.903659,-7.438322,-4.668768,-4.942580,6.843382,0.862227,-9.011382,2.113001,9.625944,-2.205060,-5.994697,0.256648,-0.806961,9.634551,-3.029625,7.617339,-7.877550,-0.822202,-9.494438,1.792007,-4.953618,2.883869,3.085275,-8.389755,6.678598,9.150548,-8.244520,-7.516974,-6.953271,5.684569,-4.339858,4.453578,-8.009519,3.223503,-3.554778,9.868621,8.626340,4.953815,5.233135,-7.571001,-7.416245,-7.798880,-6.993295,-2.810094,-1.408255,0.201980,-9.254389,-8.792625,-4.778336,-6.398147,-5.294973,9.560541,-9.448082,-4.290131,-4.502273,-6.955999,-3.776874,1.261575,4.661782,8.145634,1.329937,-9.935818,9.117490,3.590095,-6.262685,-4.619214,5.488370,-6.307878,-4.257766,1.089173,3.195880,-0.240191,6.002273,-0.798520,6.287500,-8.116802,-4.623456,-3.200643,3.668128,3.624184,3.055345,-5.307145,3.073115,-4.504535,3.430135,9.745145,9.352875,-0.521999,2.710232,8.770645,5.903489,-4.644936,-9.123362,5.985337,-4.316616,9.967453,1.709649,-9.727556,1.035297,-6.756396,-9.986452,8.574476,4.640854,-1.473865,9.598845,5.841652,-3.766237,-2.728203,5.912370,-4.336623,1.386387,4.564590,-2.534636,6.949526,3.587997,-5.101673,4.993221,1.187021,-2.803875,-4.629790,-2.995203,-3.829608,6.328221,4.465016,-7.666786,-9.709352,-2.471434,-6.141451,1.647551,-4.140096,-3.416994,-0.619206,-5.680383,-0.304761,-6.047329,-3.811665,9.173869,8.828041,-1.359059,4.270872,-7.327126,-6.280577,0.503266,1.552689,-5.851652,7.351219,1.782487,2.783345,-2.770025,-5.400929,-0.134560,5.938857,1.772734,-3.147233,7.540782,-3.997261,1.339224,-9.894226,-2.543642,0.676732,8.977870,4.568572,-3.047924,0.307669,-4.933425,1.827348,-6.748832,-4.585754,3.611468,0.076784,-9.961229,5.305824,-6.595646,3.913673,7.921825,-1.130669,0.073312,4.263126,-1.331236,-7.353424,-7.064829,2.999436,-5.088201,-7.998275,-1.571125,9.446349,-6.751002,-2.607384,-0.361756,9.059445,-5.385462,8.930901,4.215940,1.821427,3.801533,-1.232029,-7.838912,-7.734387,-6.049944,-2.944912,0.009826,9.631792,-6.127841,-6.222483,3.430555,7.121162,1.916259,-0.178378,9.845580,-4.479616,6.033293,8.669297,-3.185676,2.910399,-4.237509,4.547628,7.676798,4.021677,-3.305542,-4.345890,2.478705,5.830433,-0.858044,0.062847,-3.236741,-9.755034,2.026112,2.715614,-7.354439,-5.613499,-9.078410,-0.541182,-3.623139,-7.115718,8.518865,7.752031,-5.333556,-3.040276,-1.343429,-4.992645,4.063076,-0.272582,-9.415050,8.596262,-5.369650,-5.288624,7.289161,-2.957401,-2.763223,1.654258,-0.042058,8.813264,3.307241,1.346825,0.400404,-9.282402,2.637253,0.475661,-8.824631,-4.935101,-6.431582,-9.299022,7.703257,-8.117145,9.294546,3.851630,-7.935348,-7.295617,-7.951524,3.880442,5.912204,5.376298,-7.998334,9.106706,6.976822,-0.760473,-6.168640,2.417652,8.905501,1.147403,0.073588,-2.161539,1.597995,-4.826354,3.461278,-2.062698,9.964559,8.573587,-7.484100,0.692981,-5.498286,-3.252967,-6.153942,-4.945324,3.570821,-3.049878,-7.369662,-0.980335,6.649442,-0.856506,-2.004038,4.333541,-8.577856,1.673143,9.302685,-4.497948,-0.268488,-0.519109,-2.808448,0.683006,2.486479,0.405720,-6.747666,9.559759,-7.197383,-1.177495,-8.427829,-3.094106,-4.214485,-0.807628,-1.436118,5.114752,7.897580,0.889702,-5.546250,8.977843,-5.305137,-4.816918,-3.067823,-9.857222,3.603009,5.561682,4.025794,-6.047525,0.651953,3.790088,2.133725,3.989544,8.272136,-8.987253,3.613573,6.697529,-4.798646,-2.603825,8.850826,2.219565,-1.248018,5.217694,2.619847,7.010592,-0.218180,-0.489555,-8.571036,-4.799326,3.202604,6.756546,-6.374388,-8.578073,-0.963615,2.889066,-2.039310,-0.291435,4.427520,-4.707481,5.127173,7.309092,-4.667418,2.050034,5.086055,-0.825923,3.527890,4.879109,-2.248194,-6.839378,8.373049,2.502902,9.638448,-8.643516,2.902049,6.733420,-3.168572,-1.192555,-3.972538,9.703383,7.168574,-8.650679,-6.693441,-4.978689,-0.512678,6.021435,-9.041705,0.429491,1.130874,-0.434014,-8.200339,4.022546,-3.228540,8.223572,-0.913901,9.403003,1.116059,-1.451090,5.641410,-8.212348,7.705501,5.843529,-9.680616,9.500980,-4.821615,-9.922870,1.220872,-6.543691,1.419908,8.955752,-3.531816,2.582985,-4.157097,4.703962,-2.373055,0.944059,-6.307611,7.208861,1.625474,-9.475554,-1.184491,-3.551794,-3.784425,-2.621711,3.933803,5.161412,-9.431270,4.179301,-7.712105,-3.933613,-8.686200,1.620312,8.950683,-1.975634,2.639556,-3.914870,9.187044,-7.248507,7.268758,-8.125693,-7.323468,4.681107,-3.685774,3.099248,0.924159,-4.044204,-0.529325,-9.337521,-6.850464,-7.785199,8.236864,-7.018511,-0.499412,4.613518,8.776295,-3.866685,6.523812,-5.485750,-3.904858,3.676888,1.937165,6.347305,2.641528,5.002380,-5.674463,7.976530,9.366561,8.220520,-8.355558,8.348353,-6.996277,3.116166,2.135301,3.493012,-7.163840,-8.942119,-4.716047,7.823802,3.356484,-7.243864,-2.389795,-2.978913,0.599441,5.253617,-0.296985,4.099078,-7.156465,-3.408355,-5.986953,4.504389,-4.820214,-0.314859,-8.834592,-1.169927,2.194318,8.295575,0.995310,8.296476,8.024289,-9.669439,4.452593,-2.699204,5.673667,-3.372978,0.188839,-9.992849,4.795606,-4.252133,-1.123574,1.893374,7.883992,2.363438,-8.037218,2.839463,-2.882636,5.516535,5.897577,9.643141,8.780983,-2.596629,-7.784489,-1.891640,-3.953369,7.989611,-8.413221,-8.503507,3.961275,-6.717232,-3.128478,-5.858278,8.977273,-9.791487,5.315447,8.926839,5.427768,0.441111,-3.471815,2.418373,4.204714,4.917814,-2.876962,3.679124,-4.557870,6.816497,-9.883956,8.649932,-2.768663,-7.054653,3.893915,-2.726145,-2.026028,-6.634734,5.403174,7.474782,-3.584786,-6.425996,-6.519333,1.866577,6.448297,7.469214,-7.992532,-9.715749,-5.649845,-1.323888,-5.877774,9.873359,1.439838,-7.709695,7.297221,5.871980,-6.694594,-1.404607,6.743697,8.387230,3.567081,-9.784891,4.149792,-0.364129,-1.983418,-5.022674,5.655884,0.099944,0.603140,1.523101,1.763500,6.549601,5.522742,-8.613720,4.099487,2.057779,-1.701286,-9.643679,-7.990162,3.668514,0.296756,-7.555273,7.848767,4.256197,3.396808,-7.918507,0.388534,-6.166034,1.694289,-4.292595,2.303923,7.531050,6.688156,7.827124,-0.875734,-3.567917,-0.608184,-8.598120,-8.529599,6.789732,5.295590,-6.497983,5.991961,8.471438,5.488324,8.743593,5.536422,-4.936709,-8.838869,1.609769,2.617956,-7.324166,-8.117228,4.112006,4.609862,-0.467165,-4.966263,4.160189,7.845786,8.593302,-4.568330,3.954194,8.123149,1.877059,-3.895454,4.620170,-2.710439,0.674399,-0.598470,-3.048218,5.819034,-2.926578,0.358977,8.565228,-5.864909,-3.854369,0.655818,3.438998,7.851496,-6.753756,5.576715,7.561466,-2.227925,-3.914269,-4.387353,-0.406026,9.096897,5.453343,-2.013612,9.783585,2.343424,-1.145915,-0.225857,-8.831849,-7.240269,9.054556,-2.633478,5.464544,9.084075,3.999563,-0.380129,-0.935737,3.808656,0.578451,-1.398044,-3.738727,-2.657209,0.941036,-7.958701,-6.796518,-6.323076,-8.774983,3.847118,7.516093,2.271373,-7.224181,-3.974910,6.864693,-9.552180,-0.244311,-2.986725,5.913805,5.377286,9.571992,-4.703672,-4.262686,2.490630,4.021066,-9.656272,0.248548,4.252607,-6.484805,-4.379280,5.626471,-1.165090,-8.862485,7.387220,6.412307,-3.786965,-1.686648,-7.636569,8.805869,-8.875529,-5.158003,-2.010814,-3.347983,4.665685,7.897668,3.910289,9.547582,-3.107630,-5.996316,6.498146,-6.772847,-6.475430,-2.981531,8.749707,-7.977298,-2.885557,7.462142,-5.786871,-6.506515,-8.190926,-2.702120,8.538191,5.389100,2.170608,8.410301,6.953732,-6.853029,-0.250311,-2.294054,-1.670210,1.853120,-0.184621,0.494709,0.477529,-2.218230,-5.470629,3.277956,-2.440138,4.146134,-7.163327,-9.840323,7.815961,6.278471,5.553162,7.726019,-7.905714,-2.845633,3.323189,3.504113,-6.062800,-9.120889,-1.051903,-9.832896,-4.338447,-2.761810,-2.114105,-5.751677,3.995791,6.591908,-3.320122,1.579276,-0.175797,5.580893,6.576926,-9.294108,-9.588041,-8.956510,-8.549161,-8.283715,6.402882,4.568827,2.462435,0.268635,9.199113,-0.003598,8.587120,-6.253253,9.873017,-5.369669,-3.322811,-5.105131,7.931209,-5.354555,9.700599,0.587365,6.969544,-0.858528,-6.156353,-2.140277,7.166155,0.917045,-2.183096,-4.312201,6.247405,-7.475498,5.661778,4.466895,-0.210367,-2.476917,-3.389796,-0.140040,-3.298968,-2.703050,-4.308380,-8.698204,1.182265,-6.901679,9.279796,-0.617265,2.372966,-9.091879,3.322903,-4.045321,1.363595,-4.343917,-1.846839,-2.325892,1.140049,3.969923,2.960779,8.230354,-2.558402,-3.949340,-1.030335,-7.362485,7.938025,-6.879353,-3.009877,-0.670256,7.696898,1.393454,2.834769,-8.820900,4.975033,-7.725130,1.755580,7.442344,-7.563270,1.835680,-3.450508,-2.649970,4.719350,7.740964,7.950759,9.257814,-6.485433,-4.137021,-9.206063,-8.550585,4.710254,-2.536275,1.334792,-7.014707,1.911201,-6.914754,7.312903,-2.339301,-2.281132,5.619958,8.485609,-6.241182,3.847980,-4.919000,-6.025481,6.625736,2.367320,-7.367102,-2.983891,-8.038851,5.948745,0.146115,-4.196976,0.132440,8.805143,-1.782763,1.551843,-8.393039,-3.450234,9.825334,-6.184758,-6.418874,-5.318432,-7.376556,9.204360,4.521097,0.561614,8.940313,-2.662728,-0.565149,7.370710,-4.704592,-8.844585,-4.683297,0.554929,1.955294,-6.068781,-5.257525,-3.539853,1.470684,2.914017,-8.287614,-9.941018,-8.079962,-7.481882,-3.680927,-9.914620,9.313857,-0.698533,9.982627,5.697102,9.237944,-6.033607,-9.914760,-6.924987,-6.141675,-6.415501,-7.936807,-7.335498,0.686469,-3.901555,1.575252,3.323061,6.301539,-1.657500,3.759131,9.867596,1.193821,-0.337374,-7.771918,-2.749774,6.356172,-8.101464,0.429195,-5.540542,8.348499,-5.215799,4.146347,4.500492,0.935123,8.195357,6.556247,0.485704,-9.505408,7.703461,-7.281478,9.572401,-4.413728,-6.780601,7.289348,5.659562,0.612256,7.295123,0.778644,5.173395,-7.402410,0.871383,7.078370,-6.627319,4.930100,-1.700645,1.360819,5.385519,9.502882,2.578108,-3.992971,-4.183989,1.034374,2.854754,-5.751221,7.245661,9.642426,2.843661,-8.825437,0.210896,6.186098,9.321915,0.053119,-0.538991,-6.240318,0.554204,-2.075893,-0.998401,2.821535,-1.490293,-6.987346,-0.517727,3.672804,-9.123035,-0.373769,1.519937,-8.703325,-6.980417,1.335071,-7.924108,5.784510,-0.407860,6.364601,2.132433,-2.846198,0.294418,1.933734,0.810386,5.205553,-4.222696,7.857224,5.635444,7.281979,3.490215,-2.336198,-8.598346,-1.351129,-0.816270,-2.873829,-8.167248,4.799766,5.828988,-4.543239,2.091394,2.937133,1.384672,0.534132,-1.793186,-1.593755,6.391333,4.912453,-7.051099,7.686669,-2.844142,-3.557478,-8.376388,-9.695815,1.174107,-6.109238,-5.011566,-7.369159,-0.661904,-5.966765,-2.689413,7.336948,5.270120,-1.882664,-9.494481,-4.925292,2.978094,0.230881,0.378267,0.810578,-1.007502,0.510025,2.569860,-9.327263,-3.454104,-0.251236,-8.207444,-5.696231,5.514404,5.389520,-4.277424,-3.301384,9.609962,-6.873896,8.151767,2.462527,3.015326,-0.028919,-6.039637,4.809672,5.209139,-1.321763,2.804249,0.164808,9.458572,-8.181489,9.665528,3.973582,-9.774170,0.566329,8.068337,-3.923860,5.626932,-3.219556,5.925174,-4.259701,5.367376,-7.498566,-3.672435,2.476436,5.886382,1.988187,-6.704202,0.904350,-1.666058,-6.135813,5.467693,7.525210], dtype = "float32")#candidate|919|(2304,)|const|float32
call_918 = relay.TupleGetItem(func_329_call(relay.reshape(const_919.astype('float32'), [16, 16, 9])), 0)
call_920 = relay.TupleGetItem(func_331_call(relay.reshape(const_919.astype('float32'), [16, 16, 9])), 0)
uop_921 = relay.sin(const_919.astype('float32')) # shape=(2304,)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_928 = relay.var("var_928", dtype = "bool", shape = (1152,))#candidate|928|(1152,)|var|bool
call_927 = func_368_call(relay.reshape(var_928.astype('bool'), [16, 6, 12]), relay.reshape(var_928.astype('bool'), [16, 6, 12]), )
call_929 = func_368_call(relay.reshape(var_928.astype('bool'), [16, 6, 12]), relay.reshape(var_928.astype('bool'), [16, 6, 12]), )
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_933 = relay.TupleGetItem(func_889_call(), 0)
call_934 = relay.TupleGetItem(func_891_call(), 0)
bop_935 = relay.greater(uop_921.astype('bool'), relay.reshape(call_918.astype('bool'), relay.shape_of(uop_921))) # shape=(2304,)
bop_938 = relay.greater(uop_921.astype('bool'), relay.reshape(call_920.astype('bool'), relay.shape_of(uop_921))) # shape=(2304,)
bop_941 = relay.bitwise_and(uop_921.astype('int64'), relay.reshape(const_919.astype('int64'), relay.shape_of(uop_921))) # shape=(2304,)
uop_948 = relay.asin(bop_941.astype('float32')) # shape=(2304,)
output = relay.Tuple([call_913,call_916,call_927,var_928,call_933,bop_935,uop_948,])
output2 = relay.Tuple([call_914,call_917,call_929,var_928,call_934,bop_938,uop_948,])
func_951 = relay.Function([var_928,], output)
mod['func_951'] = func_951
mod = relay.transform.InferType()(mod)
var_952 = relay.var("var_952", dtype = "bool", shape = (1152,))#candidate|952|(1152,)|var|bool
output = func_951(var_952)
func_953 = relay.Function([var_952], output)
mutated_mod['func_953'] = func_953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1063 = relay.TupleGetItem(func_889_call(), 1)
call_1064 = relay.TupleGetItem(func_891_call(), 1)
output = relay.Tuple([call_1063,])
output2 = relay.Tuple([call_1064,])
func_1067 = relay.Function([], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
output = func_1067()
func_1068 = relay.Function([], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1101 = func_591_call()
call_1102 = func_591_call()
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
const_1108 = relay.const([2.839532,-2.553967,-4.025337,-3.515023,-3.557041,-0.527629,-7.445219,4.681301,-6.264746,4.680421,2.689174,-2.722486,-3.585831,-9.974716,-4.198020,-1.210386,-8.994097,5.909319,1.465324,-3.538674,0.198558,2.771441,-8.325222,-6.664402,-4.542541,-0.630848,5.698499,7.709620,-5.924804,-3.228690,-0.495597,-1.290100,8.092366,9.856535,1.263796,-4.440111,-2.197533,-2.159793,6.205547,9.039924,-1.667500,7.035957,-1.705515,4.115177,-3.813041,3.058697,1.170122,-9.907460,6.612112,7.795541,5.693278,-5.456027,5.250651,-1.936691,7.176987,-1.318087,7.345159,1.062296,7.085404,7.619231,-5.380424,-6.044091,-1.602742,5.854379,-9.611789,1.320317,-6.740986,7.153493,-8.053439,-5.591576,-6.830466,-2.929168,7.713885,8.053577,-7.725889,-8.634694,-1.111367,-4.824698,9.101890,-8.205030,8.758326,6.202392,1.975466,3.708074,5.305039,7.251575,2.267341,7.243121,-8.694115,4.711963,1.284015,7.358130,-0.921014,1.069830,1.456662,0.170268,2.282418,0.328561,1.143719,-9.987324,-7.505480,-2.178117,0.555114,-6.644682,9.852957,0.338132,-9.245056,-3.265215,-9.658193,-1.399121,8.757829,-1.821733,6.413787,-3.234135,1.129536,6.787569,-3.090231,7.277652,8.131991,7.530696,5.830322,-7.250648,-7.777870,-2.357278,-5.621123,-8.680056,-1.408997,-3.907586,-5.848508,-5.375660,4.957268,-3.271060,-5.421504,-9.318347,4.795246,-8.020335,-1.318791,-1.043246,2.521490,2.971998,-8.410351,2.543993,1.841346,-6.285556,-2.256793,8.235998,-3.335187,-3.507224,2.754836,-5.488788,-9.585582,4.741410,1.545619,3.782200,-6.612693,-9.346976,9.496234,8.538443,9.307720,-5.048716,-4.888497,-8.866954,1.038785,6.782960,6.645148,-5.542495,-6.520586,-5.603107,2.157647,-6.888434,-8.490712,-6.229113,7.185184,-1.289813,4.906325,-2.928298,-9.253909,-3.041829,5.262614,-9.468653,-7.406044,1.818488,-1.120230,-2.319724,9.953536,8.965222,-7.100124,6.315132,1.981202,-3.077937,5.968917,2.259222,9.783800,8.618526,8.587578,6.210467,-2.054537,8.057744,-8.896154,3.918148,-5.806171,-3.190612,-3.810216,-1.785420,2.437054,6.576580,-7.073116,4.924552,-5.516972,-7.385038,-5.086958,0.634075,-3.711111,-7.624430,8.597585,7.242201,-4.405256,-3.898043,4.104662,4.414624,4.903768,6.731436,6.904303,-0.966800,-1.153231,2.207635,-2.667246,0.391100,4.681815,-9.676112,0.343053,1.454288,6.850983,8.339968,-1.631010,9.018279,1.548205,0.958910,6.192635,-9.557871,2.666730,9.315126,6.063778,-8.314810,-9.930572,5.045075,-4.704741,7.951204,-5.545803,5.881844,2.176159,-7.938155,7.100355,1.676039,9.816307,-5.944770,-1.726954,9.395260,5.015812,-9.214779,-5.246446,2.189353,-7.487848,-6.400889,9.181034,-1.267748,-9.350430,7.263250,-4.229740,9.072132,2.435555,-8.135885,8.031384,2.327471,-2.964081,-2.650843,3.522305,8.778732,-6.549992,-2.294293,9.072733,9.869294,1.199112,-4.675285,4.502537,-8.030464,0.930889,-0.602009,-2.789878,2.158437,-8.341725,6.463892,-7.756680,6.934497,-1.595929,-0.213636,-5.659381,6.193886,4.545612,-2.098568,7.748543,3.410808,2.804036,2.477801,2.943945,-2.674154,-2.395787,7.278628,7.584731,-5.317318,-9.370345,7.172470,-7.669047,-5.126225,-4.423223,-9.327884,9.260429,0.833255,-5.025537,-7.619034,6.579342,7.155378,-1.091656,-1.224514,0.157590,3.412629,-3.903671,7.760095,-3.943838,-4.790388,-4.926634,-1.642252,-9.795814,-7.789485,2.478134,-7.925944,-3.895683,-4.538623,-1.895609,-3.167707,6.024028,6.052187,-7.179008,-2.298096,-2.213403,-6.616700,-5.155952,4.090019,-7.565400,3.467972,-3.881974,-6.484783,9.592192,-2.070984,-6.322110,3.680477,-1.675501,1.813711,6.413470,6.429184,-7.080574,-7.877782,4.898547,2.901929,-0.461613,8.784025,-0.315904,9.370831,-3.046573,1.954873,-8.344847,2.567408,1.663847,4.359641,-8.761388,-3.455879,-4.042997,4.493385,-2.725321,3.160440,8.068357,-8.329054,0.437622,2.440877,7.325397,-6.672386,-4.611203,-6.490319,-3.903412,-0.278580,8.660933,4.011272,-2.137122,1.911159,7.402372,9.003649,7.057730,-2.668848,0.925344,-9.763482,-6.673992,-8.899465,-9.681068,-6.496859,-9.081666,-3.894120,5.675213,-9.415094,-6.943700,7.142006,-8.850811,7.733240,-8.348563,-8.126952,0.411325,-8.205282,6.075572,-3.162853,3.950654,-8.537334,-3.750076,9.658537,-8.173495,3.793756,7.199424,-6.460442,1.493736,2.364420,1.609186,4.893547,3.144171,-8.268207,-0.829712,-9.960355,0.494960,7.666096,4.215891,-5.372779,-6.209930,8.995828,-2.557206,-5.137652,2.414830,3.583735,0.349897,0.641648,-4.978520,-1.195175,4.499183,-6.192086,2.269581,-9.836242,2.195923,3.953667,-2.481322,9.190127,-7.818884,-4.835024,-1.372746,1.516965,-1.197553,-5.110847,-2.598222,8.609359,5.488158,3.338976,9.003848,-4.988740,-9.028772,4.305146,-4.321596,0.574491,-8.250827,-3.612035,6.915850,-2.997402,-1.824238,-5.654676,7.276771,-3.591792,4.938940,-1.264094,9.552574,9.185827,-1.234763,-4.516664,-1.051636,0.798777,6.756683,5.571204,1.112039,-3.522809,-1.622515,7.825240,-1.268461,-4.062580,4.940317,3.620815,2.710560,-7.462800,3.056337,-4.912860,-7.503735,-6.119831,0.064454,-6.610336,5.227396,6.435818,7.485811,-3.709379,-1.687046,6.283942,4.133043,2.076461,-6.304018,-7.641713,-3.102027,6.887793,-6.129812,2.964267,5.220413,5.964936,-0.794151,-5.175124,4.414808,-7.539778,7.841054,7.933085,-9.826336,-0.921380,-6.267173,-3.109488,2.094315,8.477575,0.711767,-2.056510,-2.893574,0.007060,-8.516036,-5.381173,-8.322681,4.065197,-5.968015,-5.375369,4.113929,8.197566,8.722666,8.427931,9.419584,2.883309,4.875647,5.921746,9.605149,-3.609871,-8.548834,9.508781,0.670116,5.226688,5.915765,-3.251940,-9.349832,-3.686857,3.895087,-8.997255,-9.113435,1.841895,1.399469,0.080876,-2.038807,-4.223295,-9.175841,7.460015,9.835274,5.037805,2.238357,5.049272,-3.107602,8.008245,4.419433,-0.839380,2.031216,4.249749,3.759596,0.010730,0.527398,-9.143837,0.455794,8.288468,-4.693530,5.539934,9.205472,5.782621,-6.176608,1.394538,3.792377,6.508149,-3.768073,7.074851,7.539649,1.874338,3.318050,-6.012273,9.220157,9.418060,5.944736,5.337816,3.938164,-0.508479,-8.828401,-0.685311,0.421900,-3.685392,-7.798995,1.126439,5.602033,-3.089133,4.673857,5.132701,1.676096,-8.310590,-0.482204,7.460400,3.447525,1.224778,8.662200,6.650854,-4.521474,-9.759393,1.245769,-0.329251,-1.731552,1.677876,-8.021118,3.462828,8.146261,-9.794078,3.084434,-2.181832,1.249151,-2.724543,7.043762,0.845853,-2.646780,-1.557476,-3.650900,-7.610614,-8.135376,-1.404172,-0.992190,-2.088315,2.523431,8.464871,-3.579223,0.548045,-0.065499,-3.133068,7.744961,5.321630,-4.872583,-6.915567,-4.589859,4.859092,-2.464539,9.939407,2.917257,6.452414,-2.646346,-5.787869,-4.394253,-5.590635,8.816409,-7.295039,8.649155,-7.779930,2.255844,-4.681392,9.676901,-1.690008,5.553990,6.805142,9.128398,8.713048,2.669278,-4.104252,-9.835363,-0.142688,-7.303002,-7.273022,-0.753012,1.299459,2.635817,-6.418825,9.725345,4.823284,-3.183924,-6.610778,4.136669,-3.726661,4.419393,-7.874097,9.363858,8.274944,2.885104,6.040476,4.739398,4.485196,-4.272455,5.635747,8.429269,-1.054089,3.907049,6.184442,9.063053,-5.437555,5.169831,-6.887163,8.466135,-4.986077,9.166906,1.378372,-7.883995,-3.429376,-3.285004,-7.515595,-8.797824,7.937277,8.561318,-7.627344,-4.613978,3.818992,3.441220,1.501107,-5.426539,8.932226,1.909968,-6.006409,6.908283,0.262728,-9.816145,3.349419,-7.795758,8.367274,-2.406340,-9.079586,-8.285264,-0.976852,2.009360,-4.478160,3.060699,-1.762692,-1.290489,-3.546546,5.125290,0.672942,5.726784,-5.724887,-9.279174,-0.418147,6.500825,1.720261,-5.653679,2.337234,9.876631,6.901071,0.758357,-9.915774,-0.764671,7.395947,-3.199020,-1.760199,-9.638749,0.192092,-9.837193,1.173146,0.101625,4.017786,-4.340630,5.775618,-9.396989,-0.345862,-7.629784,-0.231728,5.076245,-1.091271,-1.153719,0.060453,1.374489,1.491233,-2.719707,6.850643,-0.297836,-6.327955,5.572010,-7.119008,-3.853067,0.188148,5.757733,-9.925955,-6.769260,-3.885150,0.219408,0.259513,7.912591,-1.729746,8.748830,5.114770,-2.136863,-0.804051,7.290207,9.638992,5.396411,0.008078,-9.872238,9.527768,-9.997390,-9.487251,9.235720,5.235070,-8.144503,3.625663,5.880257,5.879246,-6.615932,-5.964471,6.657951,0.564929,-9.749779,5.041691,-2.441845,1.780562,7.908311,-3.385990,2.793951,1.097163,4.066414,0.598630,7.991737,-6.162228,-1.544238,4.499230,5.231748,-2.032359,5.198315,-9.178418,-7.378395,5.689331,4.929632,2.148827,1.653214,6.712896,1.677125,7.177531,5.444570,-3.689658,-7.513389,7.119380,-3.035519,-4.079298,-7.391338,-1.585810,-2.779806,-7.417280,8.745113,1.790735,-1.881359,-7.031002,6.468019,-5.599751,3.773090,0.751346,-2.860916,7.418657,-2.033484,1.063435,6.967086,-4.886291,8.135202,9.233197,-4.879990,4.914498,4.204118,-1.868841,9.805971,-3.123769,7.593054,5.297337,-2.416924,-2.860998,-6.942068,2.946553,1.715121,3.366263,-1.016370,-1.727217,3.786888,1.299718,5.531906,-5.960554,-9.662959,9.206973,-8.887755,-2.632299,-3.452308,3.290134,-6.987510,-9.175917,-2.702200,-5.487776,-0.863174,6.029557], dtype = "float32")#candidate|1108|(910,)|const|float32
const_1109 = relay.const([True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True], dtype = "bool")#candidate|1109|(1152,)|const|bool
call_1107 = relay.TupleGetItem(func_433_call(relay.reshape(const_1108.astype('float32'), [7, 10, 13]), relay.reshape(const_1108.astype('float32'), [7, 10, 13]), relay.reshape(const_1109.astype('bool'), [96, 12]), ), 2)
call_1110 = relay.TupleGetItem(func_437_call(relay.reshape(const_1108.astype('float32'), [7, 10, 13]), relay.reshape(const_1108.astype('float32'), [7, 10, 13]), relay.reshape(const_1109.astype('bool'), [96, 12]), ), 2)
output = relay.Tuple([call_1101,call_1107,const_1108,const_1109,])
output2 = relay.Tuple([call_1102,call_1110,const_1108,const_1109,])
func_1120 = relay.Function([], output)
mod['func_1120'] = func_1120
mod = relay.transform.InferType()(mod)
output = func_1120()
func_1121 = relay.Function([], output)
mutated_mod['func_1121'] = func_1121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1154 = relay.TupleGetItem(func_759_call(), 2)
call_1155 = relay.TupleGetItem(func_760_call(), 2)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_1160 = relay.var("var_1160", dtype = "bool", shape = (2, 576))#candidate|1160|(2, 576)|var|bool
call_1159 = func_368_call(relay.reshape(var_1160.astype('bool'), [16, 6, 12]), relay.reshape(var_1160.astype('bool'), [16, 6, 12]), )
call_1161 = func_368_call(relay.reshape(var_1160.astype('bool'), [16, 6, 12]), relay.reshape(var_1160.astype('bool'), [16, 6, 12]), )
const_1193 = relay.const([[[1.459381,8.475566,1.525300,-8.745732,7.101186,6.246848,1.972986,-5.009339,8.384815],[-2.594548,-2.276786,-1.775666,2.236138,4.828184,-4.274655,-1.055907,-9.246156,0.037652],[-7.557594,7.509938,-2.823357,-0.795637,-9.559716,8.298859,2.758946,5.083447,8.300309],[4.014140,-0.816749,0.646277,3.880967,-6.425047,4.235028,-5.986807,1.988030,5.382705],[-4.661766,-2.702973,2.232852,-0.187935,4.206684,-3.813035,-5.167430,-5.223477,-1.859583],[0.963330,5.198442,-5.068518,9.115079,-0.611616,-4.235831,5.564940,9.844447,2.515014],[7.434466,5.493106,4.766649,0.587381,0.936525,4.480602,2.530919,2.449517,-9.682776],[7.443975,-9.205408,1.053659,1.058272,7.972046,-2.233765,2.975185,6.747268,-7.846497],[-6.442314,-1.475878,3.629346,-3.618527,-3.893596,9.426239,1.771922,6.363690,-3.126714],[-8.471661,6.955103,-6.336763,-9.348836,8.299352,-7.302532,-3.829323,2.216274,-2.570772],[-1.803220,8.936998,3.883290,-8.950321,2.154586,-5.932446,-8.258609,9.486414,0.666094],[7.651708,-5.574815,0.930105,-4.134480,7.955541,-5.935757,0.441623,-0.078394,8.817361],[4.845965,-7.777982,0.967049,1.540661,7.072816,4.919418,-7.624281,-6.655982,2.667275],[-5.440889,-8.646369,0.639854,0.896023,9.790299,9.792940,8.648797,-6.843287,2.953856],[5.217168,0.784531,-9.347297,9.220035,0.702251,1.995354,6.963891,7.425345,6.074217],[-2.808666,9.879425,2.213211,-9.940750,8.271793,-6.715334,0.725161,4.008926,9.042749]],[[0.516175,4.733530,-5.385277,-0.078740,-4.477848,9.868832,-0.969202,-1.986533,-2.964419],[2.891567,2.574277,7.866701,0.104006,1.127596,-8.259442,-8.227846,6.171276,-3.685009],[-4.564139,8.133750,-9.085527,7.336163,-3.536689,-9.854861,0.793106,0.090160,4.678506],[-5.175287,9.991580,3.907100,-4.461562,-9.144876,6.878707,-1.697649,6.400866,-5.780807],[-1.696567,-8.647079,-0.405814,9.109331,-6.951444,-5.682370,-9.972664,2.972884,-5.066711],[6.585748,-6.302635,-0.413778,-4.486228,-9.857284,-5.768707,-6.044016,-4.038697,7.902690],[4.381610,-5.445702,4.300596,9.001262,9.430205,-9.708560,-3.662653,8.798579,3.522219],[-2.522469,-4.947255,9.764459,-1.011655,1.150397,-6.344927,8.547608,-9.312538,-3.698665],[-3.279947,3.778253,-6.660898,2.849013,5.088217,4.703886,-9.085866,-8.736774,-7.950601],[1.075487,8.014516,7.899706,0.398834,-6.546646,-7.196492,0.305085,-8.582328,9.279902],[-6.745935,0.763094,0.335719,-8.674169,0.678757,-7.758320,-8.724558,-0.548194,-8.073498],[-3.206404,-2.889630,3.888326,4.781231,4.043773,0.083149,-0.485776,5.310033,4.886320],[-6.610082,-2.558087,9.930534,-2.679927,-1.618988,1.809938,-7.920058,-5.553186,-1.434528],[-6.874199,-3.186629,-1.076804,-9.431046,-6.554640,-0.476798,-6.978537,8.381027,-5.449929],[7.498879,3.004287,2.388825,-2.591649,-6.737826,-0.092872,3.646949,-1.423514,-3.609567],[2.932739,7.353287,-5.491796,-6.476496,-4.192300,4.965860,-7.741491,6.118171,-2.442544]],[[-6.871925,0.628993,9.341830,-4.666787,-5.057975,8.794473,0.846592,2.243777,-2.458999],[-9.793244,-3.152482,-1.718182,-9.520196,-3.033940,-9.738939,-3.061199,8.550193,5.403431],[-9.054375,3.987566,-8.037889,0.491555,-1.976908,-8.840875,4.987780,9.011776,-1.420767],[0.552462,-2.058339,-6.411039,3.440527,4.302518,-7.696548,2.826599,-0.824630,5.145262],[1.681400,-9.583948,2.422182,-3.089381,-5.102315,-4.295785,-3.956486,8.468917,6.746932],[9.843258,-7.312028,-7.298554,-6.895214,9.821111,-3.100587,1.884659,-3.299845,6.089855],[5.536730,-4.046932,4.615536,-8.478979,-7.505494,-6.129916,1.837930,-6.182136,8.297537],[0.811841,1.325370,-6.763377,4.357501,6.716751,-5.089154,-0.310696,2.393669,7.022275],[8.143948,-5.648895,5.901744,-7.490069,-8.277765,-2.510581,8.604893,8.571670,7.174265],[-9.752976,-3.562836,-5.420654,5.182715,-4.779815,5.863084,6.838868,7.205929,-5.689948],[3.175779,0.303113,-3.684586,6.702715,6.801029,-0.514377,-5.428114,-8.043223,-8.739936],[8.262397,3.531900,-2.476721,4.375479,2.840437,6.212176,4.126291,-8.091000,8.039325],[4.039748,-9.931906,1.781810,4.546699,-1.123667,-5.454699,-9.712199,-0.176455,1.816187],[-9.751625,-7.931762,5.922644,7.208102,-3.051952,-4.198369,-4.052141,-0.370087,-3.714044],[6.847181,-4.834150,8.068473,9.154397,-5.386630,4.115241,-5.958738,9.306032,-5.301132],[4.361553,3.043764,8.721004,8.803453,4.242333,0.592337,8.721457,4.554825,-2.750055]],[[1.911521,-9.317038,2.025153,3.403592,2.216985,-0.952261,-9.093881,-4.550595,-8.454004],[7.785718,4.628813,5.456670,-4.533258,-7.821138,-8.501760,4.104922,-2.651970,-7.600276],[7.199119,0.060352,-0.963705,-3.793810,0.179402,-2.010730,0.551913,5.541120,1.665052],[9.421942,-0.815066,5.905524,-9.191700,-3.922137,4.379600,-7.265527,-1.747678,3.547017],[0.307419,3.067623,-3.636830,-2.014243,2.544670,8.170770,5.929765,7.509754,-0.670839],[-2.243846,7.991353,9.955911,1.028356,7.935038,6.883221,-8.272320,9.334353,-6.246278],[-6.181593,9.132656,-2.301544,-8.063572,1.341225,8.127742,-5.612533,-3.032621,-8.907494],[-6.969929,0.024901,-9.625019,2.984208,7.391738,-3.269311,-7.825704,3.730022,1.761628],[-9.723007,2.672995,1.294839,5.550515,-9.257865,5.605230,4.747936,0.504526,5.254129],[-2.257026,-3.196902,6.333142,2.607759,7.483519,4.328568,-9.520889,-6.332140,3.557962],[5.694206,-2.058983,-0.896199,-6.283463,4.532175,-7.979004,7.760782,3.394154,3.602421],[3.549845,8.606558,4.757717,9.401774,-6.491940,2.510374,2.190449,2.616813,-4.790258],[6.766152,3.107453,-9.462847,1.984864,-0.971105,-4.038107,-5.262573,-9.798290,-1.269362],[-0.873427,-1.978837,-2.605634,5.458210,-3.465193,6.736243,-4.095139,9.704880,1.367038],[-1.950566,-3.546259,-5.937186,-1.560457,-4.135149,-6.670567,-1.932096,-6.350430,4.945240],[-2.124787,-5.756249,3.639377,2.477727,-4.410965,-6.116011,0.947656,-0.447421,2.001385]],[[-9.872484,4.686943,4.175935,5.864203,8.805804,-2.743122,-7.295922,0.168389,1.461282],[-4.056402,-6.668562,4.171600,8.245115,1.014913,-3.955431,-2.881524,-2.674750,4.161677],[5.802626,4.780987,-7.396428,4.018595,-8.455814,7.603459,-4.834734,5.332518,-0.787291],[0.429955,7.411214,-1.849100,5.073403,-9.252108,-8.876227,8.915558,-4.078561,-0.170323],[-6.973849,-0.568469,-0.173835,-4.789380,6.021079,-3.306975,3.965365,6.667780,-2.987332],[-2.025347,-8.746902,-6.903931,0.027653,-8.250591,-4.626689,-2.445865,7.748652,-8.156770],[3.648939,-0.881049,-5.614776,-1.104727,-4.987691,-1.701081,2.331435,-3.789133,8.426022],[5.066531,7.202037,-8.657492,-0.511859,-3.005324,3.474665,-9.333824,-2.591212,-0.525192],[0.343931,-8.572035,-7.945949,-6.496240,7.218246,-3.296776,6.960725,7.772042,4.579474],[7.430557,2.604209,5.613964,-0.529179,2.750979,-0.781397,9.919602,-8.425687,6.572062],[-0.727911,0.262169,8.000421,-8.571578,0.574611,3.680857,4.647466,-4.570980,-9.456498],[-0.153350,7.540448,0.249824,3.517953,8.898125,-7.493853,-0.931942,6.726348,8.222130],[3.989863,4.365030,7.916233,-3.215960,2.972648,6.574076,-5.215255,-5.221186,7.999147],[-0.778046,-8.944070,6.859081,-7.382773,3.871671,1.458514,-7.050366,-1.261283,8.240822],[-8.626073,8.374620,-6.895937,-1.328657,-7.498065,4.265697,-9.203340,-2.019485,5.327422],[-9.275055,5.039420,7.467617,-9.562191,-9.964225,-6.708121,-2.106007,1.719529,-2.718729]],[[6.383668,-3.964576,-7.336000,2.523729,2.501170,0.322059,0.648636,6.059091,-1.422030],[2.160574,-7.866239,5.532772,1.027926,-1.163355,9.191355,8.516228,5.398204,-9.605795],[3.230791,-0.907197,5.014127,2.233965,5.159710,-8.113986,-7.318924,-8.192082,1.821589],[3.262716,-4.461756,5.035958,-8.369167,-5.938187,-4.934281,8.341043,-2.987400,2.598784],[-6.185471,5.765634,3.172889,3.053831,4.490726,-1.562701,2.888404,-5.017700,5.174295],[-5.601961,-3.134490,3.546045,9.780324,-3.967041,1.025072,-7.419415,-2.839962,4.020721],[9.856467,6.557803,6.364284,5.846450,2.396830,-6.407653,0.923141,8.855692,1.073867],[-2.905174,5.965623,-1.241499,-8.665935,-3.365826,-5.638009,-7.083665,-9.865478,9.043688],[-6.399746,6.876919,-0.825874,-3.677988,-6.216408,9.804018,2.997726,-4.217936,-2.596452],[9.359891,8.914537,1.172354,8.710084,1.855858,-2.080634,4.495540,9.394085,-9.268909],[-2.896445,4.516577,-7.946064,-2.554660,8.575066,3.813076,-6.499714,-1.017263,-6.230707],[7.608838,-2.221285,-3.423548,1.847130,6.028403,-9.646258,-4.520782,-8.776604,2.139882],[-3.626668,-5.327874,-7.160917,2.891422,-7.236731,6.219553,-7.529344,4.736935,7.066615],[9.311078,6.877880,-3.380110,-3.432074,2.531374,-7.390717,-2.219755,-4.038098,-0.100605],[-7.941376,3.790295,-9.784273,1.439096,-6.309906,2.941316,-0.091750,-5.071067,5.754133],[8.036008,-6.007182,-7.103455,8.516028,9.471445,-3.874948,0.151367,-3.832027,5.000678]],[[4.654590,2.039135,8.824495,6.757802,7.830232,-9.669657,-9.951937,-1.726654,-5.254337],[-8.990614,1.632306,4.473135,9.688273,-5.433341,-7.444867,-0.476488,2.877845,4.492377],[-6.216939,-7.928715,-4.925623,-4.310746,6.549976,6.185810,-4.741765,0.699244,-1.613736],[6.818691,6.137474,0.890345,4.136580,0.852392,2.640533,-9.617524,-3.463790,2.772057],[0.168897,3.932345,-2.828412,-1.198540,-7.262089,8.186329,-3.338074,9.155810,-1.539650],[7.074574,-9.665959,-2.963047,9.032551,-3.248235,-3.774577,3.233805,0.360832,-2.973393],[2.953742,-3.870726,-8.216037,-6.390394,-1.663406,0.426293,-2.725262,8.000267,9.313805],[-1.522886,-7.411254,-7.900169,-2.521773,-2.212519,1.642435,-6.701534,5.598289,-2.730459],[-0.572101,-4.126493,-9.912566,8.190992,3.992208,-5.243114,8.890772,8.185745,5.603013],[-2.673791,1.649301,2.452343,8.654461,-7.191106,6.025130,-8.690719,3.021437,-2.459878],[-2.864893,2.759903,-6.168754,3.348166,-7.566757,1.299973,-0.453611,-4.073729,-1.851236],[-1.300925,0.249595,-9.349657,-2.928574,-4.444873,-7.567795,5.821356,-1.354020,-4.194981],[-1.377339,-7.010311,-4.381378,-6.370751,6.632224,2.014530,7.988796,6.860171,-3.760685],[6.563953,6.505139,-8.066933,-0.261186,-2.790439,-3.110810,-6.663150,-0.455389,-0.896110],[-1.816413,-6.737308,9.615748,-5.419229,8.014183,7.766849,6.476765,-1.013726,-8.886357],[-4.242052,9.361948,1.834113,2.855019,-4.789435,5.820605,6.178217,-9.817639,2.501455]],[[1.834816,-5.568630,-2.788307,-8.717727,-6.040650,-4.673491,9.544763,2.081328,5.100883],[2.015833,-9.205089,4.551145,-5.682834,-4.176129,-9.072927,-8.438607,3.440615,-7.467194],[-3.631704,2.786540,-3.198311,3.714099,3.736656,-1.044500,5.079784,8.069707,1.787034],[3.664483,6.996681,-4.150625,-2.691774,1.679564,9.402909,8.411000,-9.394136,-8.809145],[-9.542619,0.159642,2.613727,-6.964596,1.742492,-2.526553,-5.327121,-2.944358,0.135725],[8.008491,4.768797,3.543638,3.404060,-5.797913,-1.488801,-2.245953,-1.752600,-6.270743],[0.323998,-3.177689,-6.644918,3.484821,8.743447,1.105876,6.152984,-9.816138,9.850301],[1.696144,-3.323731,1.694178,0.654046,5.611106,0.203703,2.247330,-2.791926,0.488399],[-2.362266,-0.338402,-3.795811,7.886509,-3.490715,-1.888242,5.959259,-9.603946,4.202434],[-6.222924,3.937911,-3.829614,2.547435,5.421403,7.032901,5.090859,-9.586080,8.382180],[0.780779,-0.756754,-4.590891,5.687708,-1.779509,3.752670,8.509045,-2.094694,7.043006],[0.912086,-0.569431,5.204670,8.766677,-6.740696,-6.906279,-6.226290,-0.694794,0.121641],[0.850143,-6.048584,7.773437,7.394619,-2.988327,3.928950,-5.706176,-8.086191,-8.660436],[2.303710,-0.376276,9.225213,3.502835,-5.258958,-4.556538,2.816729,0.029039,7.697946],[9.777904,6.571427,1.297814,-1.314789,-7.589097,-9.932103,-2.566837,-9.349716,8.853556],[4.790209,-1.659433,-9.394751,1.458859,-1.515752,-4.673909,6.934617,8.523317,3.461209]],[[-8.204412,-1.908924,-4.843277,7.709084,-6.615819,-4.164620,0.009051,6.435509,5.528073],[-5.114078,8.382006,7.792183,-9.344411,9.721986,-9.305325,-2.759147,-1.396360,1.791579],[-2.820969,2.603494,-7.600575,-7.226123,8.093739,5.752146,-3.317969,-9.491834,9.954265],[8.438476,-2.320139,1.179670,5.172127,8.432940,-3.470561,-1.847442,4.985569,-1.516087],[1.151312,7.343284,-7.383277,-7.644700,-4.501114,-2.508899,-9.854590,-0.908068,-4.227217],[0.258812,4.475523,-0.858673,8.635177,-0.195394,-2.438694,2.190029,-1.786213,4.241887],[0.102331,6.172234,-0.708066,2.821018,1.699810,5.232712,8.370458,8.948928,-5.827845],[1.044378,-3.412337,-6.873091,-1.323304,4.500372,2.366503,4.024438,-5.715787,-7.108573],[-9.173815,0.875778,5.727690,6.376116,-8.650259,-2.442811,-7.338160,-6.058195,5.473426],[-7.133837,-6.172793,-4.893604,-2.336508,8.196909,-1.436891,6.945310,8.319849,-4.008854],[3.684019,-1.502516,-2.577439,-0.235948,-3.367134,-9.210458,-2.263737,3.049141,-8.302769],[-7.887836,6.799613,6.053107,8.235125,-6.296439,1.280819,-9.973764,-1.563504,-2.566342],[8.899261,-4.242516,-3.747585,0.310251,6.400186,7.253246,8.615527,-6.097860,9.369677],[-6.477047,-0.623326,-8.582542,-0.375345,-3.279047,3.435923,8.543361,-5.602087,-3.665978],[-2.058311,3.438989,-8.566301,5.060008,-3.704679,-4.601631,1.108324,-2.972852,6.915865],[-8.032318,8.917431,-1.136586,9.581297,3.666793,1.445306,-1.352944,-9.476472,2.565442]],[[7.003370,-2.630942,-1.313980,6.704676,9.141637,9.162155,-8.288121,-4.098841,7.069359],[-0.149537,6.865194,-9.248956,4.810490,-7.611373,-6.294370,-6.766165,2.935370,2.214706],[2.559243,4.085492,-0.407593,9.450314,-4.018210,0.759215,1.857215,6.845367,8.460576],[4.482507,-2.019703,-7.615409,-9.431466,-6.640968,5.988736,9.908662,8.621599,-9.794068],[-0.294891,-9.259136,7.147758,-1.042189,-1.379631,4.052613,5.675847,-5.596635,8.543341],[-1.661299,-5.058827,2.650221,-1.789210,-1.628582,0.761576,3.568331,2.229305,5.624438],[2.401760,1.489939,6.613736,-9.348854,0.778938,-7.610097,7.141547,-1.952403,-8.066431],[-6.202901,2.926635,-1.311329,1.495082,-3.148536,1.550309,8.685655,3.540741,-7.269035],[-5.521980,2.579475,-2.974097,-9.855507,-4.662411,4.353747,-3.949107,4.801827,-2.779897],[-3.510842,8.669985,-5.950861,-6.775564,-8.224277,-9.493697,-4.920855,0.656196,0.733671],[-2.854575,9.461495,-8.507978,0.440948,-1.597197,-5.268520,-2.538584,-8.703299,4.699099],[-7.442952,6.908758,4.071838,-6.559691,-3.574000,2.031861,2.795001,4.259048,-9.844770],[0.819742,-1.209825,-4.306383,-4.960234,3.452563,3.774749,-5.932074,7.873118,-0.258630],[6.156365,-7.198451,-7.598577,7.927498,8.942940,-2.975537,5.260998,4.848999,-8.230291],[-7.959653,-9.625711,7.358712,7.262048,-5.884480,4.344101,7.965246,2.187033,-3.577806],[-6.556310,9.088843,-6.406078,9.494377,1.393437,3.566546,6.502055,-9.334841,-6.236029]],[[6.779463,8.084460,-4.800265,-2.632601,-2.885979,5.395791,3.051513,-9.283062,-4.121160],[-9.601230,-1.339727,-7.436663,0.962414,-3.434502,-4.649974,-2.673670,-6.043850,7.137947],[-4.015851,-7.848380,1.719275,-1.053776,5.082699,8.581311,8.876514,-0.806906,1.924394],[-6.449645,-1.672529,-7.367301,4.996783,-7.894043,2.099350,-9.326199,2.877194,-8.709683],[-3.611244,8.041924,3.969598,8.478294,-2.723462,6.702207,2.155624,7.396395,-9.974451],[-4.180884,-1.114756,6.301406,-6.356008,7.068293,-6.103008,-0.500224,-8.830397,2.326733],[-0.047201,9.256409,-0.148597,-3.135256,-2.242807,2.943776,9.373854,-2.584503,-7.111249],[4.736141,1.549641,-0.203040,-2.518614,-1.466994,-6.712671,5.371248,6.831116,7.659479],[3.831673,9.018145,4.680714,-6.163221,-6.922673,-5.117947,-9.163144,3.956050,9.581026],[9.526077,-9.438419,-9.696374,4.992647,8.481999,-0.791018,-5.121437,-0.317857,9.702477],[-7.683341,-1.665505,-8.840462,3.412313,0.583991,-6.081184,-0.435458,-9.096828,-8.499793],[1.607018,-4.772599,-6.145761,-7.797677,-2.878258,-6.096772,-9.149429,0.423463,4.040073],[-0.943242,-5.197312,2.725039,-0.517309,2.183906,-1.430817,6.507916,6.440773,-7.627427],[9.779173,2.648733,9.616155,2.843093,-9.675620,-1.451007,2.525254,3.512684,-1.059093],[-1.172823,-9.266000,-0.819509,4.333922,4.578263,6.061728,-2.143765,-2.184243,5.588964],[1.342102,7.746426,1.996248,9.761770,-4.290158,4.996309,1.070926,9.628430,8.302235]],[[-3.694063,-0.260031,1.447825,2.657197,-6.586158,7.718877,0.854763,-8.443298,5.808259],[6.708372,-0.329130,8.426326,-4.318345,-8.275752,-5.641238,9.258698,-8.624039,-6.432855],[-4.639369,-1.345628,9.859872,-3.918723,-5.087526,-2.921931,-4.582317,6.732289,0.645016],[-2.028472,3.488768,-3.319257,-5.621617,2.453665,1.832705,3.263112,2.147155,-4.032493],[8.306164,-7.925641,9.741941,3.618755,-3.912403,1.367129,2.258149,2.630481,-2.125820],[9.878151,-7.290086,3.628335,-7.546504,6.808197,-8.217696,2.884998,-8.765104,-5.062054],[-0.307430,0.446496,-6.598678,-4.069604,4.348669,-2.377802,4.217938,-7.462931,-7.945169],[8.340939,-9.472190,2.997014,-6.876453,5.178875,-1.946763,8.313175,5.463741,5.871295],[1.890493,-1.175612,1.537717,-3.491895,-5.589724,-5.889192,-2.534155,7.486972,-6.319330],[-3.331382,4.377856,5.483289,2.940103,-5.993849,-7.555288,-3.446148,-2.473690,-5.932274],[6.596512,-3.356615,2.515256,8.738376,3.703412,3.102599,7.515703,-8.014576,0.208393],[-3.488438,-5.097654,9.496694,-4.049869,-9.906341,-3.436991,-1.960182,7.275314,0.400622],[-5.788043,6.303775,-3.014577,9.299632,-1.581222,-0.465107,-3.148022,-1.670823,-0.614641],[2.148194,3.491044,3.141597,-0.380374,1.961163,-0.187371,-3.533915,6.934878,-1.544968],[-8.735775,8.004006,-4.720323,-0.255663,-4.401762,3.493067,0.636704,6.241377,1.689400],[-9.961247,4.534839,3.227492,4.056917,-2.297486,4.370664,-9.321683,-3.846385,-7.104877]],[[2.854250,5.726788,7.592706,-6.191010,2.421121,2.981216,-3.597073,-7.150125,-6.127349],[-3.855749,-8.949839,-7.001035,1.401731,0.422187,8.345944,-3.709779,7.718966,-7.563754],[7.659546,9.269762,1.356782,5.853549,-3.023006,2.594844,2.533086,-0.638963,-5.607161],[-2.764083,6.886245,3.179566,4.390754,-3.390378,-5.568537,-6.144693,5.898387,-0.510843],[-9.805260,6.147219,-0.262520,0.520855,-8.637770,7.636456,4.681999,-2.214852,9.826774],[4.757289,-6.278421,0.269536,-8.615711,-5.848815,7.383157,-4.955214,-5.464466,1.033564],[-4.397421,-9.361008,-3.311801,1.992022,5.239948,4.147916,-6.470002,-8.561363,-0.606911],[2.211599,8.710284,-5.088586,-5.115039,-3.319363,-3.197493,3.551844,6.062722,4.265766],[6.736515,2.534331,9.234316,-6.131433,3.788162,-5.352021,-6.887444,-5.421209,7.031640],[3.541280,-1.792598,-9.734623,1.723925,7.357942,1.225238,-0.641084,-0.386998,-4.848188],[-5.038652,9.260398,9.710971,9.942081,2.072290,9.161341,3.483633,-2.291027,-2.521047],[-6.923769,8.288027,-1.937730,0.058180,9.222965,-1.655526,9.036713,-1.062252,-1.435875],[-6.701221,-5.288464,-7.751268,-9.721522,-2.906139,7.859523,4.252071,-8.564223,8.489991],[3.388036,1.007385,-3.620296,-3.235427,3.353962,-7.285833,-0.070039,5.672341,-2.784492],[-3.691613,3.072797,-4.261322,-5.872094,5.121116,-7.500388,6.037228,4.432913,-6.951722],[5.371185,0.942761,-6.785441,-0.353712,-2.685547,2.201250,3.946997,4.113207,-2.786403]],[[0.712483,0.268646,7.814662,-2.232541,4.237859,7.920747,9.194055,3.070168,0.339383],[1.434033,-2.400884,-0.718450,-5.950761,-4.222422,-6.910069,1.945505,6.776753,-6.875985],[-5.845716,1.238049,-0.903481,-6.316683,3.818525,-5.679698,5.848623,3.258517,9.788335],[9.211662,0.557750,4.306033,-8.642153,-5.878562,7.466453,-8.774691,0.182380,-6.040875],[-5.927938,7.865889,-6.641653,4.744313,3.532605,2.591059,-4.516026,2.912473,-6.511434],[1.156647,7.963245,-3.401464,7.452402,6.363132,0.130237,-1.072938,-1.137409,7.445979],[-8.234371,-6.113464,7.809560,-0.808057,-9.739100,-8.379940,1.283240,3.561805,1.183987],[7.064816,-1.260802,0.362409,-6.431283,3.187230,8.574000,8.941742,3.075878,-0.279698],[-5.819196,-2.299861,-7.799946,2.592801,7.891917,-3.168162,1.517785,4.700094,-5.011563],[6.557397,-9.914914,7.400945,7.234543,7.023365,-3.888211,-4.769273,8.681054,1.843628],[0.730892,0.624256,1.651897,8.127238,2.597075,-9.081059,2.071138,6.285496,6.705990],[3.358710,1.962898,2.952506,-0.403880,-3.450759,8.796726,7.581152,7.890132,0.760518],[1.984602,6.389728,4.595989,-7.252384,7.517649,-5.109561,6.939385,9.747362,1.116630],[-9.656212,-5.372354,1.584205,2.208868,-8.313085,3.096341,5.566285,-9.176025,9.385108],[0.385206,-8.362194,7.234739,3.644408,6.417550,-6.461666,3.512142,-7.371881,6.826982],[6.763508,8.577633,3.816502,6.679975,8.793350,4.973061,5.582442,-1.161344,5.427497]],[[2.667257,-8.442738,-7.814847,7.970492,-5.046541,6.333529,3.244191,-9.190800,3.148115],[9.829696,-2.988513,-1.248150,2.157299,-5.263827,-8.469371,-4.273717,-1.579809,-0.384658],[3.822453,3.100959,6.584482,6.564092,6.810037,7.250712,-9.242468,-8.571258,8.627568],[-3.485654,-4.127315,1.255310,0.628359,-7.682143,-3.579924,-1.471705,-3.818253,2.042062],[-5.906175,-4.548264,-8.047723,-7.297178,-6.659503,-2.128182,-6.580808,0.451963,6.281052],[1.468237,-4.675223,0.906770,-7.182507,-2.079185,4.004294,-4.525555,-2.781395,4.479203],[6.733632,5.666296,-2.030597,6.020260,6.914807,-4.401564,0.558566,6.985401,7.486451],[0.925865,-7.857194,6.336212,4.390272,3.362520,-7.784070,9.458140,0.219899,-5.304851],[-1.167041,-3.230334,-4.268494,-3.094779,-2.787354,2.728867,-7.522345,7.274623,-1.857975],[-0.720400,-2.004493,7.137872,4.930540,-6.738713,-5.855975,-2.112407,6.067718,-9.752582],[9.876374,4.116278,-6.337655,-6.056300,3.778704,4.139913,-6.140901,-2.702399,1.725423],[9.983737,-0.045902,8.332053,-2.475122,4.478776,-0.051504,0.894957,-9.162119,0.561699],[5.466405,-3.514703,7.301857,-8.554427,2.037133,7.116952,0.501478,9.327487,-6.485061],[-9.212675,3.553688,-7.253696,3.273724,0.292884,6.410858,-6.694417,-0.532773,3.122463],[-6.162390,7.336742,-6.488805,-5.498375,-8.896400,2.139533,5.714332,1.022825,6.045001],[-2.193820,-3.877402,6.059956,8.837265,-7.375997,-3.699954,0.443343,-2.179222,-7.538814]],[[7.847789,-5.352976,5.326075,9.398446,3.931596,0.403977,-2.193632,2.831943,7.132231],[-6.330111,-1.679727,7.068118,9.670310,3.543736,8.270503,-4.606812,-5.308774,-9.416708],[0.902938,-3.734303,8.060160,1.635093,-0.869796,-2.333282,8.854510,-2.729831,4.582012],[-2.903970,-0.700150,-3.299473,-9.433867,3.423811,9.127208,-3.485334,6.558097,1.638399],[-8.552928,-7.793756,7.706481,-7.727615,-0.151948,-9.581241,-2.823418,-2.381234,-4.944195],[3.895252,0.074263,-9.183635,-2.742487,3.181279,7.600215,-2.482312,-6.921705,-6.041599],[7.869136,-3.685032,2.207378,-6.438572,-8.511501,2.763637,1.501875,3.335155,3.800829],[-7.300118,-4.454433,6.214150,-3.877651,4.628618,-8.754933,2.342810,-9.682124,1.856586],[-6.783483,-9.160733,-7.096573,-9.266694,-3.716642,1.022482,4.582414,7.840643,0.806367],[8.390931,7.964621,-6.613118,2.079470,3.212576,-1.217343,2.757364,-9.667071,6.943668],[2.151680,4.330858,7.068697,7.193053,-2.380466,-3.782068,6.060101,8.155644,-0.402949],[7.889479,6.058806,6.769522,0.670972,4.711986,-9.037687,6.360689,-9.520702,9.514095],[0.146149,-3.379222,-7.631307,0.751184,-9.781873,-6.523004,5.285906,-3.009292,-7.735229],[-5.167091,1.318773,-0.218312,-8.565470,2.509936,-2.844122,-2.061452,-5.475355,1.926368],[9.966843,-0.394606,8.437341,-5.564700,-3.117981,-9.230945,-8.026855,6.665847,-4.797744],[-9.308006,2.478259,0.097163,-1.415828,5.163970,-2.039798,8.595496,2.387231,3.011683]]], dtype = "float32")#candidate|1193|(16, 16, 9)|const|float32
bop_1194 = relay.greater_equal(call_1154.astype('bool'), relay.reshape(const_1193.astype('bool'), relay.shape_of(call_1154))) # shape=(16, 16, 9)
bop_1197 = relay.greater_equal(call_1155.astype('bool'), relay.reshape(const_1193.astype('bool'), relay.shape_of(call_1155))) # shape=(16, 16, 9)
bop_1205 = relay.less(var_1160.astype('bool'), relay.reshape(call_1159.astype('bool'), relay.shape_of(var_1160))) # shape=(2, 576)
bop_1208 = relay.less(var_1160.astype('bool'), relay.reshape(call_1161.astype('bool'), relay.shape_of(var_1160))) # shape=(2, 576)
output = relay.Tuple([bop_1194,bop_1205,])
output2 = relay.Tuple([bop_1197,bop_1208,])
func_1209 = relay.Function([var_1160,], output)
mod['func_1209'] = func_1209
mod = relay.transform.InferType()(mod)
var_1210 = relay.var("var_1210", dtype = "bool", shape = (2, 576))#candidate|1210|(2, 576)|var|bool
output = func_1209(var_1210)
func_1211 = relay.Function([var_1210], output)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1232 = relay.TupleGetItem(func_889_call(), 0)
call_1233 = relay.TupleGetItem(func_891_call(), 0)
output = relay.Tuple([call_1232,])
output2 = relay.Tuple([call_1233,])
func_1235 = relay.Function([], output)
mod['func_1235'] = func_1235
mod = relay.transform.InferType()(mod)
output = func_1235()
func_1236 = relay.Function([], output)
mutated_mod['func_1236'] = func_1236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1240 = relay.TupleGetItem(func_889_call(), 1)
call_1241 = relay.TupleGetItem(func_891_call(), 1)
var_1249 = relay.var("var_1249", dtype = "float64", shape = (16, 4, 11))#candidate|1249|(16, 4, 11)|var|float64
bop_1250 = relay.logical_or(call_1240.astype('bool'), relay.reshape(var_1249.astype('bool'), relay.shape_of(call_1240))) # shape=(16, 4, 11)
bop_1253 = relay.logical_or(call_1241.astype('bool'), relay.reshape(var_1249.astype('bool'), relay.shape_of(call_1241))) # shape=(16, 4, 11)
output = relay.Tuple([bop_1250,])
output2 = relay.Tuple([bop_1253,])
func_1259 = relay.Function([var_1249,], output)
mod['func_1259'] = func_1259
mod = relay.transform.InferType()(mod)
var_1260 = relay.var("var_1260", dtype = "float64", shape = (16, 4, 11))#candidate|1260|(16, 4, 11)|var|float64
output = func_1259(var_1260)
func_1261 = relay.Function([var_1260], output)
mutated_mod['func_1261'] = func_1261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_1295 = relay.TupleGetItem(func_1235_call(), 0)
call_1296 = relay.TupleGetItem(func_1236_call(), 0)
output = relay.Tuple([call_1295,])
output2 = relay.Tuple([call_1296,])
func_1303 = relay.Function([], output)
mod['func_1303'] = func_1303
mod = relay.transform.InferType()(mod)
mutated_mod['func_1303'] = func_1303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mutated_mod.get_global_var('func_1303')
call_1304 = func_1303_call()
output = call_1304
func_1305 = relay.Function([], output)
mutated_mod['func_1305'] = func_1305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1309 = func_591_call()
call_1310 = func_591_call()
output = relay.Tuple([call_1309,])
output2 = relay.Tuple([call_1310,])
func_1311 = relay.Function([], output)
mod['func_1311'] = func_1311
mod = relay.transform.InferType()(mod)
mutated_mod['func_1311'] = func_1311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mutated_mod.get_global_var('func_1311')
call_1312 = func_1311_call()
output = call_1312
func_1313 = relay.Function([], output)
mutated_mod['func_1313'] = func_1313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1332 = relay.var("var_1332", dtype = "float64", shape = (4, 7, 7))#candidate|1332|(4, 7, 7)|var|float64
uop_1333 = relay.log10(var_1332.astype('float64')) # shape=(4, 7, 7)
func_865_call = mod.get_global_var('func_865')
func_869_call = mutated_mod.get_global_var('func_869')
const_1341 = relay.const([-3,5,1,-8,-7,5,8,-6,-3,10,-7,-5,4,5,-3,-10,-3,2,2,6,2,-5,5,3,4,-9,8,1,-9,-6,3,3,-3,-9,4,-4,7,7,3,-8,-3,7,-1,3,-5,6,-5,3,3,2,-5,6,-8,-6,2,7,10,-9,2,-5,-1,6,-2,-5,-9,4,5,-10,2,-3,7,-4,-6,2,-6,-7,-9,-6,-2,-8,8,-6,4,6,-1,4,1,-7,-2,-6,-9,9,6,1,-6,10,2,7,-4,-4,3,3,6,2,-2,-8,1,-8,-5,-4,7,7,2,3,-8,-10,-5,-7,-4,8,-5,-6,-6,-3,1,-3,3,-8,-1,-10,-10,-10,-3,5,-5,-3,1,-7,2,-9,-9,-3,-10,7,4,2,8,-8,-8,8,3,-6,-1,-1,-2,7,-1,-6,-3,-4,-10,2,8,-9,-10,2,8,-10,-10,1,-1,5,-1,7,-4,3,-5,2,-3,-2,7,8,1,-2,9,2,2,-6,-10,8,-1,-8,8,-10,2,-5,5,4,-9,6,10,10,7,6,8,-1,-7,-5,-10,5,10,-1,-3,-2,1,-2,8,-4,9,-2,6,-6,-4,-5,10,8,-9,-5,-4,-7,-5,-8,3,7,4,9,-5,-2,-9,-3,8,-1,2,9,4,-3,-5,3,-4,9,2,-9,-4,5,-7,-4,-2,2,-2,-10,-7,7,-5,-9,3,-1,6,1,9,5,6,1,-6,-4,3,5,8,-1,4,-3,10,1,4,-9,-8,8,-6,4,1,-2,-1,-4,1,-3,7,-2,-10,6,5,-6,10,10,3,9,1,8,-8,-2,-8,-4,1,-4,10,-4,5,-1,3,10,5,-2,9,-10,-10,6,7,5,-9,-10,10,6,-3,-10,-8,4,10,-10,6,7,-4,4,-4,-3,7,-2,7,-2,-2,-9,-3,-4,9,-3,7,8,3,-5,2,-2,1,-6,9,-7,10,-3,-8,-7,2,1,8,-1,3,9,-3,-4,2,-3,10,6,-7,-5,6,2,-2,7,4,10,-3,-3,-10,3,1,-5,-5,2,-9,-6,1,-3,1,-2,8,-2,-10,9,4,-4,-7,5,-9,3,6,-1,5,9,-5,-3,-2,4,-2,4,7,10,-4,-4,-3,-10,-4,5,6,9,4,4,9,-8,3,6,9,-1,-2,-7,-2,4,-8,9,-3,-7,10,-3,-9,9,-4,-1,-10,5,9,-7,-8,9,7,2,-6,-7,10,7,-2,3,-9,8,-7,3,6,7,8,2,5,7,4,-10,-5,-6,-1,-4,5,4,-6,10,-5,-6,4,-8,3,-10,9,-3,-7,3,10,-10,9,7,-1,7,-5,-8,-2,-7,2,-2,-7,7,-6,2,10,-8,-8,-6,3,2,6,-8,6,1,-3,1,10,6,10,9,-1,-3,-6,-5,-10,-9,-7,-3,2,-3,1,-9,-1,6,-4,-5,3,-2,-5,-10,-6,-1,5,9,2,-6,-3,-3,-9,-8,-3,8,9,7,-10,8,7,10,5,-3,9,-7,4,7,-8,-8,7,1,7,1,6,-3,1,6,3,3,9,-6,-2,8,-9,-3,4,4,1,-7,5,9,-5,1,4,-2,4,8,5,7,4,-2,-3,8,-10,-10,-6,10,-4,1,-5,-3,-3,6,-6,-3,3,9,-10,10,3,-6,1,-2,6,-4,-8,-1,-7,10,10,-6,-9,-10,1,8,2,-4,-9,-7,-2,6,-8,-5,-4,10,10,-10,10,-5,-2,4,-6,-8,-5,-10,7,-8,-4,2,10,3,-8,7,5,-7,-7,-2,9,8,4,-2,-5,-6,5,-7,9,-5,5,5,7,6,2,7,-7,-7,2,-1,-2,-7,4,4,-6,-10,-4,-2,8,-3,7,2,-4,6,-10,6,-6,1,-7,-3,3,-7,-10,-7,8,-9,-9,-10,1,2,2,3,9,8,-8,-10,-6,-9,-5,-7,6,7,-6,-10,-2,10,8,-4,7,4,4,-6,10,-9,10,7,1,-3,2,5,6,10,9,5,-7,-9,3,-3,1,-6,-7,8,7,-4,7,-5,-5,8,-10,-7,-10,-7,-4,-5,-2,7,-4,-9,8,-1,5,7,4,1,8,2,6,2,2,4,-8,5,-8,4,10,-3,5,2,-7,3,4,-7,5,-10,-9,-10,7,-1,-10,3,2,4,5,-5,2,10,-3,6,-6,-2,-3,4,-8,7,9,9,-5,9,10,4,3,-5,1,-4,-8,-4,1,-10,-2,-8,-6,-2,-9,-1,-6,10,-9,6,8,8,6,-6,-9,-5,-3,2,1,10,-5,-10,8,-10,7,-8,6,1,-10,-1,3,-2,3,8,7,4,3,-5,-6,-9,-1,-7,4,2,-5,7,-1,8,2,-7,-6,-3,9,-9,2,-7,6,3,2,-6,-8,-6,-1,-4,10,3,6,-4,-7,9,10,4,2,6,3,-2,4,-4,4,-9,3,10,-2,-4,7,8,-1,-3,-2,-8,10,9,-2,8,-3,10,-1,-5,7,1,7,1,-4,3,-3,2,-3,-9,2,-2,-6,-2,5,1,-1,5,-4,3,3,3,-7,1,-3,-6,8,1,10,-1,3,6,6,9,10,-5,10,-10,10,10,4,10,5,5,5,2,-10,1,2,6,-5,-6,9,-5,-9,-2,-2,2,4,-3,-5,-8,-3,-3,-2,-6,9,4,-8,-7,-6,10,1,-3,1,-5,-3,3,3,-3,-4,2,3,-1,6,9,-7,8,-1,5,1,2,3,1,3,9,-5,3,8,8,-10,-4,4,-4,-4,-10,-9,8,8,-7,3,10,-6,5,-5,-8,8,1,-3,-8,4,-4,10,4,-3,-1,-7,-4,4,-9,-2,5,8,-1,-2,9,-1,-10,7,1,7,4,-4,8,-10,8,-5,-2,-10,-5,-6,-8,-7,7,2,-2,1,4,-8,3,1,-2,6,-9,-10,9,-9,4,5,2,9,-6,-3,6,-5,1,-4,-2,8,-7,6,-8,-2,2,4,-5,-7,-5,-3,2,-2,4,8,6,-7,-6,-10,-7,7,-2,-1,-5,-9,-1,-1,-10,5,-7,-8,-1,-6,8,-3,10,4,2,8,6,-8,-10,1,10,-4,1,1,-6,10,5,-1,-3,9,-10,3,-4,4,-9,-4,1,7,-9,-3,-7,3,6,9,6,-5,4,-4,-8,-2,3,6,-5,5,3,-3,1,-2,-9,-4,-8,-3,10,1,-6,-5,-1,3,7,-4,-6,-9,-2,-3,2,5,-8,-2,-4,6,-6,-10,-5,-6,1,-1,4,5,2,6,5,4,8,4,9,-3,-3,5,-6,-10,-9,-7,2,-1,-9,-10,6,10,2,-5,3,7,1,-6,2,-5,7,-4,-3,5,1,8,1,-9,-3,-5,4,-4,3,1,6,-6,9,5,-6,6,8,-5,4,-2,-10,-5,9,9,-1,-9,8,1,-9,9,-7,-3,1,-1,-3,5,-2,-8,-2,-6,1,10,-5,9,5,9,5,4,1,-2,-2,8,7,-6,-6,4,8,-7,4,6,5,1,9,-7,-5,-5,-6,-1,-10,6,1,-3,1,-1,7,-4,5,4,3,4,-10,4,-1,-3,-4,-7,8,-4,-10,-3,6,-1,5,5,-5,-5,-8,-3,6,10,-4,6,4,10,-7,-5,4,-4,-1,6,-7,-3,10,2,3,-7,-8,10,3,8,-4,-4,8,5,6,5,4,8,3,9,1,-4,9,1,-3,3,-3,-6,-5,-8,4,-6,-1,-2,6,2,-9,8,-10,9,9,3,-9,1,-9,8,-4,2,1,-10,5,-4,-10,-2,1,-6,-5,4,-7,9,6,9,-2,-5,-5,9,9,-6,-8,-9,-2,-1,5,3,10,8,-1,-8,-10,-7,-8,-4,-2,3,-9,-8,1,-9,5,-8,8,-5,-5,-6,-3,-9,-1,-7,-5,2,-7,6,10,-6,-1,-3,2,-10,8,3,8,4,7,2,-4,-8,3,-8,-1,-1,9,-5,-10,10,-10,-1,5,8,9,-3,-2], dtype = "uint16")#candidate|1341|(1500,)|const|uint16
call_1340 = relay.TupleGetItem(func_865_call(relay.reshape(const_1341.astype('uint16'), [15, 10, 10]), relay.reshape(const_1341.astype('uint16'), [15, 10, 10]), ), 2)
call_1342 = relay.TupleGetItem(func_869_call(relay.reshape(const_1341.astype('uint16'), [15, 10, 10]), relay.reshape(const_1341.astype('uint16'), [15, 10, 10]), ), 2)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1365 = relay.TupleGetItem(func_1067_call(), 0)
call_1366 = relay.TupleGetItem(func_1068_call(), 0)
output = relay.Tuple([uop_1333,call_1340,const_1341,call_1365,])
output2 = relay.Tuple([uop_1333,call_1342,const_1341,call_1366,])
func_1368 = relay.Function([var_1332,], output)
mod['func_1368'] = func_1368
mod = relay.transform.InferType()(mod)
mutated_mod['func_1368'] = func_1368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1369 = relay.var("var_1369", dtype = "float64", shape = (4, 7, 7))#candidate|1369|(4, 7, 7)|var|float64
func_1368_call = mutated_mod.get_global_var('func_1368')
call_1370 = func_1368_call(var_1369)
output = call_1370
func_1371 = relay.Function([var_1369], output)
mutated_mod['func_1371'] = func_1371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1378 = relay.TupleGetItem(func_1311_call(), 0)
call_1379 = relay.TupleGetItem(func_1313_call(), 0)
output = relay.Tuple([call_1378,])
output2 = relay.Tuple([call_1379,])
func_1390 = relay.Function([], output)
mod['func_1390'] = func_1390
mod = relay.transform.InferType()(mod)
output = func_1390()
func_1391 = relay.Function([], output)
mutated_mod['func_1391'] = func_1391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1395 = relay.TupleGetItem(func_1303_call(), 0)
call_1396 = relay.TupleGetItem(func_1305_call(), 0)
output = relay.Tuple([call_1395,])
output2 = relay.Tuple([call_1396,])
func_1401 = relay.Function([], output)
mod['func_1401'] = func_1401
mod = relay.transform.InferType()(mod)
mutated_mod['func_1401'] = func_1401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mutated_mod.get_global_var('func_1401')
call_1402 = func_1401_call()
output = call_1402
func_1403 = relay.Function([], output)
mutated_mod['func_1403'] = func_1403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_1438 = relay.TupleGetItem(func_1390_call(), 0)
call_1439 = relay.TupleGetItem(func_1391_call(), 0)
output = relay.Tuple([call_1438,])
output2 = relay.Tuple([call_1439,])
func_1441 = relay.Function([], output)
mod['func_1441'] = func_1441
mod = relay.transform.InferType()(mod)
mutated_mod['func_1441'] = func_1441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1441_call = mutated_mod.get_global_var('func_1441')
call_1442 = func_1441_call()
output = call_1442
func_1443 = relay.Function([], output)
mutated_mod['func_1443'] = func_1443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1452 = relay.TupleGetItem(func_889_call(), 0)
call_1453 = relay.TupleGetItem(func_891_call(), 0)
const_1457 = relay.const([[[-0.602626,-9.658905,-5.596115,4.197870,5.920139,-2.503143,6.069618,-4.070532,-0.598066,-4.521771,5.934477],[-2.154436,6.668750,2.607561,3.306943,-5.594522,4.305409,8.774435,2.323249,2.725577,-0.654868,-7.884381],[-7.712348,9.983566,-6.234100,5.376867,-8.602482,9.920408,0.024334,7.737491,7.458860,1.554892,-3.696251],[-7.320849,1.298851,-7.665998,-7.902872,9.844837,6.141978,3.833309,4.270381,2.348641,-9.355743,9.991175]],[[0.266391,-5.497126,-0.779859,2.990658,6.726729,-0.081299,-6.363703,-1.822532,6.272991,5.094125,-7.095544],[9.596453,5.373778,-1.825835,1.288636,-5.813820,-2.900835,-5.401584,-5.737591,3.864312,0.770544,-7.485183],[-9.694162,-0.066141,8.413691,-4.856864,2.843128,3.860862,-2.271372,-4.493591,0.349686,-9.705972,-0.828707],[-7.564158,7.775175,-0.312223,7.273597,-7.659965,5.102398,-2.409349,-2.857940,-5.054491,-9.602542,-9.298113]],[[4.926875,-5.149460,8.745159,-0.251077,0.488895,-3.388575,-7.489789,-1.314986,-9.273718,0.360801,5.038491],[-5.581154,-8.083731,0.988070,-3.945968,1.907058,3.865231,-9.040870,0.379582,-6.116469,1.720716,0.609014],[6.895419,5.026878,-5.300822,5.556561,-5.643112,7.509413,-3.551382,7.584242,-2.765134,3.405811,7.562101],[1.995795,-5.127575,5.848251,-9.224178,-6.814850,-4.086220,6.439878,-6.363240,8.261717,-2.237677,-9.357599]],[[5.933694,2.510060,-6.005510,7.727728,-4.206211,-4.322564,-6.291321,-3.765601,-9.134614,-1.111508,6.096930],[5.936968,-9.980944,-4.337125,8.451700,-7.401465,7.969924,4.491576,-8.617328,4.643265,0.007503,0.731878],[8.552982,-6.590681,-0.005221,1.389498,2.674294,-5.324161,8.595668,-9.064570,2.809743,2.149696,0.784059],[-6.762195,-1.840528,-8.191907,-3.973624,9.562120,-3.956311,2.008446,4.865564,-0.131956,-6.338079,-7.725054]],[[6.498284,-1.192681,9.365286,0.481330,-0.549651,-1.134257,3.912506,-0.288849,5.307009,-3.542244,-8.510514],[-1.565583,-2.188180,-8.357219,0.089231,-2.187585,3.724816,1.172374,-6.611549,3.729357,3.703461,5.193869],[2.108903,-1.020775,-1.719599,-0.266254,-4.925154,-0.313985,2.039851,2.360565,1.956374,2.629071,3.301629],[-7.943030,-9.070782,-7.730615,8.109661,-8.977252,-4.909772,5.546062,2.180198,4.589626,0.832905,-8.282081]],[[-1.287326,3.791799,0.449514,-5.934940,-4.015312,1.588515,5.865500,-2.947329,3.174631,4.129816,1.385701],[-7.730834,-9.376410,-6.326120,9.327839,-2.246612,9.224236,-1.028990,-2.735844,7.853046,8.436757,9.735544],[-0.830796,0.671981,7.960543,7.733169,-4.600025,7.385326,1.906881,-3.079911,5.654060,-0.299541,-5.944086],[4.162448,-0.362280,8.134819,8.169885,-9.058838,-5.010130,-6.609063,-0.891384,-6.821356,7.599260,6.980293]],[[-3.305377,-2.984679,-5.597226,-0.850999,1.008310,9.783065,-3.969949,5.705317,-4.303201,3.401449,5.999276],[-8.483265,-3.795219,-5.639837,-3.585290,-4.695145,3.567148,-6.156344,-5.992774,9.516367,0.691504,1.292266],[7.125648,6.039734,-3.210894,2.924483,-9.413156,9.371130,-5.567229,5.722880,8.087787,6.611367,-5.438582],[-3.487757,-5.562499,-6.446285,-6.497514,8.958878,-6.374716,3.544810,-7.134219,-5.496487,-8.477425,8.491490]],[[-8.938248,-8.994032,-8.781431,-6.270185,6.154352,1.175713,-8.045374,5.115716,1.860457,7.248377,-1.501984],[-9.024554,0.624658,4.098149,-0.773983,-7.276564,6.362147,-9.023220,8.602366,-3.711885,2.191933,-5.010483],[7.100458,3.816360,5.842339,-2.865543,2.295072,-2.897283,-3.255434,0.726897,-1.803402,1.821385,-0.107117],[6.515894,-6.538853,-5.318020,-7.637157,-9.574588,2.671536,-8.241348,-5.140829,-3.552365,-2.163786,-6.187952]],[[-5.891036,3.470254,5.886959,3.595868,7.480056,5.774157,-8.099999,3.794673,9.580835,9.015471,8.938089],[3.192355,-0.974027,-1.319301,-2.317895,4.354102,-1.743237,9.528156,5.111159,7.437329,4.161552,6.423721],[-0.835224,-2.481317,-8.691583,-6.276352,-1.539363,6.282775,4.268130,2.775873,-8.555411,7.539644,9.242568],[-3.166568,2.005398,9.128840,2.795909,-7.824966,-6.431644,6.388423,-0.405222,-9.052754,9.267266,-1.992976]],[[9.121531,-4.667620,-5.491772,-3.355861,-2.387009,7.145729,-7.768631,-3.164186,5.183441,-0.083431,-8.760563],[-4.028160,9.082448,3.351780,-6.712794,-9.510054,4.545448,3.029766,-6.738529,9.994402,-7.417451,-6.105758],[-4.490481,-9.315624,3.926367,2.894491,-8.042882,0.872130,-4.628832,-8.570139,-5.619701,0.823475,2.346136],[2.766209,-5.992189,-1.132959,5.000800,-5.233102,-3.494187,6.328023,6.669405,1.344650,-2.746582,6.836668]],[[4.333931,0.318273,-3.707409,8.496907,9.979586,3.199472,4.485045,2.222719,-4.241231,-1.066778,-7.998510],[8.087621,-9.030866,-7.862990,1.176277,-7.934014,1.866953,-3.860823,-4.128063,-8.580855,-3.134489,3.977429],[8.148516,8.574137,-2.336258,-5.970928,3.031347,-9.087783,-7.481052,2.841886,4.125377,-4.401701,8.372103],[-0.647090,-9.393454,-2.877102,0.498823,8.083604,-4.852681,-0.431281,-7.248682,0.263151,-9.554122,-9.753652]],[[-1.386847,-3.686742,7.402178,1.425478,4.544762,-9.900872,-0.184668,0.788955,-2.293875,-2.286526,7.851257],[-7.456612,-5.774221,2.995290,5.557759,2.719481,8.809871,0.717031,9.834896,-4.479351,3.803180,-9.494655],[2.906207,4.275552,-0.833038,-0.603045,-7.290431,-5.720002,-2.930585,-2.827419,9.960652,-3.636338,9.523350],[1.995382,-3.039800,-1.200578,-3.424654,8.243458,-7.408494,3.242565,-3.546410,-7.943520,-7.650300,9.239979]],[[-1.639254,7.290527,-4.519297,6.697852,0.239692,-8.065696,-2.727787,9.440938,2.331770,-5.158122,2.232136],[0.973750,7.906852,5.534020,-2.477155,-7.395463,-4.554234,-7.043049,9.582447,-7.796758,-8.038658,-0.617335],[2.303690,3.340338,-6.348525,-8.217615,6.272409,-6.235145,0.150082,4.507265,-7.320030,8.150209,1.371062],[5.709351,8.322068,9.785517,-4.893794,-0.616566,-2.161827,9.783797,4.052318,-3.510452,3.340470,4.780446]],[[-1.591774,-5.299958,-3.865369,3.863081,3.938293,5.914384,1.796559,-2.457391,-9.592668,6.772992,-7.641156],[-6.783611,7.025141,-7.969909,4.769350,4.032047,-0.523689,-5.571971,9.658960,-4.775508,2.376004,9.624874],[8.818804,-0.460738,-3.096271,-3.896326,-8.196363,-1.835739,4.120348,-1.418341,-8.835912,5.267467,8.126238],[-5.627058,3.390745,9.131757,-0.863275,5.600318,-6.415820,6.295582,-2.696865,3.142418,-4.413626,-2.219084]],[[3.960268,-6.042840,-8.570307,-0.728928,-6.208461,9.526632,-9.385954,-2.933293,0.642271,-5.553507,0.067358],[5.079596,6.276876,1.520734,-8.879452,6.892667,-1.928801,-1.041364,4.455335,2.595780,3.190774,-1.840697],[9.404371,-3.810594,-7.670891,9.837638,-7.772826,6.567958,4.405516,-1.439974,-0.138857,3.704052,7.119253],[-9.066033,9.331410,-9.368867,-8.531660,-1.472967,9.655991,-9.523973,0.469830,-5.365565,-1.510477,4.470473]],[[-7.994984,-5.701715,1.394939,1.253352,9.538011,-6.873457,7.615858,5.619656,0.079053,-5.354542,-3.295487],[-1.458813,-7.340212,1.531613,1.035113,-9.865628,-9.370308,-8.778065,3.132125,3.830265,9.719287,3.079248],[-5.942080,-1.203767,-1.666699,4.897261,-5.218562,-7.812412,-0.526146,2.211516,-8.877948,2.294384,-6.141185],[-3.811365,7.454440,-4.870417,1.932267,-6.493365,-7.360241,0.994139,9.845882,7.276805,7.385944,-2.044980]]], dtype = "float64")#candidate|1457|(16, 4, 11)|const|float64
bop_1458 = relay.maximum(call_1452.astype('uint8'), relay.reshape(const_1457.astype('uint8'), relay.shape_of(call_1452))) # shape=(16, 4, 11)
bop_1461 = relay.maximum(call_1453.astype('uint8'), relay.reshape(const_1457.astype('uint8'), relay.shape_of(call_1453))) # shape=(16, 4, 11)
output = bop_1458
output2 = bop_1461
func_1471 = relay.Function([], output)
mod['func_1471'] = func_1471
mod = relay.transform.InferType()(mod)
mutated_mod['func_1471'] = func_1471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mutated_mod.get_global_var('func_1471')
call_1472 = func_1471_call()
output = call_1472
func_1473 = relay.Function([], output)
mutated_mod['func_1473'] = func_1473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1544 = relay.var("var_1544", dtype = "float32", shape = (14, 2, 16))#candidate|1544|(14, 2, 16)|var|float32
var_1545 = relay.var("var_1545", dtype = "float32", shape = (14, 2, 16))#candidate|1545|(14, 2, 16)|var|float32
bop_1546 = relay.floor_mod(var_1544.astype('float32'), relay.reshape(var_1545.astype('float32'), relay.shape_of(var_1544))) # shape=(14, 2, 16)
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
const_1555 = relay.const([-0.159053,4.540721,2.104331,-1.639590,8.437816,-5.824441,4.474081,8.786478,8.800798,-2.493678,4.934159,-8.843917,-6.369014,5.706231,-8.808278,-1.583775,-7.304780,-9.641733,-4.956021,7.216629,6.274103,5.931492,-7.727847,0.675751,6.516439,-4.589638,-9.911360,-7.191460,-4.265002,-2.677150,-8.260839,8.937478,-0.998416,-3.931703,-9.700728,-0.122161,3.030395,2.246127,-3.270242,0.298839,-6.724450,3.167349,9.021526,-5.211271,3.807632,-3.681021,7.685361,2.501570,7.339050,-4.158813,8.429187,-0.196382,-0.288122,-7.218176,-1.224270,-2.900736,5.471646,-6.377938,7.607993,-1.439058,5.585850,-1.313466,-0.289816,3.497494,8.330637,-4.467619,-0.766999,-6.469411,-1.277340,-7.512766,-2.712228,2.828984,-3.533624,-3.612504,-3.014221,-2.106042,9.473910,7.062742,-0.494355,-3.653364,-7.605101,2.778387,8.326165,-5.008039,-4.567368,-0.189340,5.749014,1.606814,6.867614,-7.514728,-6.494464,-7.037698,3.810414,-1.119214,-9.618484,-2.251115,7.777359,5.666175,2.744964,-4.772030,-3.990479,-1.388920,-3.826333,1.647220,-9.427671,-9.078578,2.569684,-6.101754,-6.875685,-9.701207,5.866579,8.780611,-4.626776,4.740447,-7.459961,-5.811270,5.645850,4.182490,-2.996898,2.240693,-5.203375,0.640937,-5.366481,-2.211445,-4.407586,4.588298,4.291633,-6.136259,-0.339254,9.732423,1.058138,9.116101,6.716996,3.581316,-4.037590,-1.003446,-5.601568,-6.521056,6.877958,3.320251,8.710283,-1.812613,4.265125,6.650309,-8.157449,6.634899,-1.923249,-2.902383,0.955253,0.445017,1.588389,-8.768943,0.321375,-8.315827,1.856512,7.112566,9.154016,-1.592163,-4.068591,-8.817105,-1.584213,4.366770,-2.088469,-6.162770,1.028431,6.280697,1.015267,-6.237842,-4.785219,-1.172197,-8.560975,5.944781,1.863124,-8.244729,6.887792,-2.235485,-9.873493,-6.359061,-8.351070,-8.211693,-6.259278,-7.482081,9.121847,-2.112183,4.386246,-7.817431,-4.048962,3.896620,9.648718,-9.023929,-7.161162,-2.606483,-4.043781,-9.769479,-2.894136,-9.005707,-1.855859,-3.942060,1.680466,-3.731017,0.010154,-7.544074,-4.164129,8.615126,9.254243,-6.739329,6.125662,6.963825,5.082648,-1.959700,-6.085371,-9.699746,9.981554,8.466547,8.204227,7.233766,-3.214812,8.942391,-4.379201,-4.231362,-9.191191,7.793503,2.252346,2.606135,-2.784795,-0.851133,-0.465491,-5.255469,-0.398759,-1.600182,6.765651,-8.819215,7.589640,-4.193197,5.298595,1.247972,9.413858,3.475890,0.261948,6.294188,-5.529784,3.558117,-1.124874,-5.086741,5.800544,-5.688033,-0.056068,-7.757954,-1.678858,6.006680,4.122513,0.588503,-7.287139,9.018913,5.393137,0.686061,0.971634,-5.430997,-4.245089,-8.057576,9.360135,-1.530261,2.154878,3.567700,4.512877,9.902333,-8.157253,6.005261,7.629268,-2.515457,0.602793,-7.523808,-1.500676,-0.136528,5.881710,-0.718604,-7.363608,9.879101,1.222116,3.898603,7.442208,4.363822,-8.436007,-4.755099,-1.831687,-9.486761,1.137361,-1.923258,-4.375247,-5.141235,3.961509,-3.532271,-3.807739,7.552507,3.861516,-5.612117,-8.138848,-2.156647,1.816048,-7.553381,1.727682,6.120667,-8.786358,4.257400,7.495914,-8.490545,-2.241307,-2.143619,-9.945449,5.135964,-0.292502,3.400457,4.461074,7.605672,-5.839431,-2.539134,2.499160,-9.760447,5.735668,-8.318799,-9.886532,4.002243,6.033653,3.906695,-1.722179,4.005109,-3.052445,3.181922,-8.921389,-6.770291,-7.354152,8.206560,6.396824,7.788745,0.393612,7.056919,9.933323,-2.081722,-4.943192,-0.505571,-9.696486,4.063497,-5.233398,5.520670,-7.751960,-2.483897,-0.468101,-7.547881,6.461299,6.921691,9.426179,-9.304694,6.299824,8.479968,-2.307448,-3.418556,-5.995572,-1.325605,-7.958649,4.008992,7.818245,-4.776668,7.792200,2.276133,-7.455152,8.623216,5.699145,-8.454761,3.722010,-2.000872,-4.145846,-6.386786,3.540449,3.486898,-1.556668,-0.424466,-0.722337,-9.698458,7.295887,9.638984,-7.944994,6.971695,-1.461450,-3.083198,0.526748,-9.804274,-2.429217,-9.375217,6.520049,4.659261,2.578743,0.458740,-9.021805,6.791027,-0.463542,-5.476107,-1.515574,-9.524569,1.733410,-7.985414,-0.601438,-2.572681,0.423155,-5.354490,6.469202,0.769897,2.977523,-3.581217,-9.707211,2.398686,-2.338431,1.219345,5.470685,-5.106997,-2.044146,2.372590,1.819057,3.234194,4.507192,0.456334,-5.390654,4.086834,9.409223,5.904005,2.363610,-8.761960,-8.727445,-7.942189,-3.776443,2.208347,1.570756,2.449536,-4.709450,-7.517166,-2.318207,-6.359472,-7.853703,-2.711312,-1.254616,4.399600,-2.140948,0.715599,6.644598,-5.728676,-0.564574,-3.643373,-4.422546,-6.653784,2.843856,-0.612355,-5.584777,-1.227666,-4.883664,9.443446,-7.214194,8.609884,-7.753569,-6.429931,-3.249387,2.194872,-9.918484,7.187813,0.753624,1.004928,-7.347386,-0.959399,7.134838,7.797318,6.762590,-8.749738,5.857690,-1.933262,-9.866332,4.351698,8.862427,-2.259862,-8.553350,3.701133,6.547694,-3.748983,-3.996601,2.119821,1.102705,-5.863144,0.697451,5.933143,-6.356589,-0.154846,-3.167029,2.277325,9.616862,3.137408,4.850918,4.131060,5.230082,-3.406531,4.965072,0.201162,-7.325477,8.587425,-0.671854,-8.778493,5.252036,-4.703866,-2.384995,5.921996,6.494794,-8.411705,7.703114,3.981209,5.198395,2.968681,0.121138,-9.591557,-2.502046,4.359625,-9.457195,1.192303,9.267713,3.926470,9.199165,1.059882,4.547037,-0.099547,0.199076,8.820087,4.782239,7.122683,-5.468355,3.987693,-1.293010,3.039392,-9.038272,-1.102015,-8.292057,-0.496042,-9.047239,-3.934970,0.154730,3.994608,8.231934,1.498183,8.165280,2.951027,-7.071845,-8.233474,-7.757590,6.982604,-2.924087,-3.128589,8.158367,-6.871761,-5.403590,7.859558,2.440725,-4.216385,-6.934118,-9.457558,6.442383,0.820275,-9.992506,-0.687888,8.540246,5.134641,0.146154,8.045369,-6.418346,-2.934868,-4.405684,-4.403240,-9.031817,-9.303960,9.086348,-8.804331,1.076176,-7.513722,3.970784,-2.182854,4.153876,-8.483978,9.242580,2.180852,-2.912395,-2.513872,-4.915444,-2.347441,6.725467,7.088174,1.894228,8.403479,5.236860,-3.549019,-4.654693,7.218948,9.990410,-9.754432,4.816374,-2.577450,-8.573886,7.379401,-1.355445,8.798855,-8.018389,-0.338055,4.714959,-9.970745,4.597531,3.432116,6.673583,4.550735,5.385479,2.210311,-4.710878,-5.163318,-5.955763,6.262977,2.492959,0.723423,6.944407,-3.829833,7.717870,9.335466,8.831228,6.455308,7.503806,3.358296,-7.042770,-4.095580,7.162969,4.674725,-6.571912,-2.065186,-4.683086,4.571639,3.197898,-4.098509,6.803087,8.954071,-0.557384,0.929825,-0.548166,-6.695602,-3.189787,0.393300,9.968336,6.980271,4.398394,-6.036733,6.224866,2.574574,2.422608,-9.742269,8.040535,6.845778,-5.670640,6.695982,-6.323584,6.779352,-5.384563,-2.807531,-6.617129,0.040980,1.182380,5.080224,-8.219392,5.856767,-8.912282,-4.999609,7.363188,7.698404,-2.000556,-2.873076,7.305262,8.169648,-7.809874,2.472316,-4.326219,-0.182070,-9.951286,-0.422232,-9.114544,-6.555639,2.257952,-0.879341,3.331957,-5.438283,1.282808,-8.330828,7.967410,-5.411807,5.843893,-3.163635,2.300065,0.475546,-6.029713,-8.207394,1.290235,8.929850,1.536410,8.234870,5.191999,-3.643641,7.010015,6.552682,8.210936,-1.621470,-0.720954,-2.203854,-8.702081,7.524781,6.749066,7.642049,5.243370,-6.836053,1.757009,2.554448,8.090484,8.110670,-6.269155,0.895359,-7.765514,-5.534311,-9.359965,-8.886328,-4.374946,4.101653,1.109450,-1.053398,3.497133,7.151461,-4.930779,-5.898029,0.114745,-4.813296,-2.863571,8.229244,-7.571170,9.743445,-4.187027,4.584092,-6.768524,-2.071359,2.986100,-3.479238,6.088853,3.559218,-2.265381,-4.516147,1.034472,6.814591,-0.289041,1.138149,-4.810851,-5.912033,-5.342824,4.876306,-8.826223,5.871651,-3.750876,9.784894,6.587010,8.260443,-1.241418,9.158399,3.978265,5.968087,7.634761,-0.877550,-4.358885,-9.140192,-1.733688,3.218869,-3.469920,-4.183339,-1.950295,-5.378010,8.339698,1.711842,0.075311,0.526110,2.864934,6.159422,0.757413,-9.636593,-4.309819,3.265615,-7.374720,9.406104,3.224920,4.121243,0.835831,3.523904,2.435393,-3.584230,-9.181759,2.592399,5.149263,-4.632107,-2.529497,-6.511630,-6.459226,9.041733,-0.434527,6.649663,7.802820,2.142815,-8.197883,4.545723,8.795296,7.582752,9.948814,3.921634,5.427368,-8.133881,-5.119458,-8.344403,-6.871501,2.499089,-5.828223,-4.108844,0.313631,1.303419,-2.391646,0.577075,-9.997205,1.579199,-1.810124,-4.232892,5.110780,5.388780,6.917606,-3.176917,-0.450373,-3.889036,-2.043477,-3.136380,-5.930928,3.809764,-4.588261,-0.279724,3.642959,-9.661637,-6.604994,9.522162,6.592452,7.790287,-7.178717,-1.609583,9.114489,-3.063412,8.727395,5.554778,-8.295235,3.698308,-8.436076,3.569886,4.875230,4.783090,7.538231,7.399572,6.670422,0.959935,-5.668057,-1.538660,9.841561,5.529063,2.651045,-7.115604,-2.785930,-2.357191,-0.820596,-8.254681,-7.725618,2.609741,5.448805,-0.274097,-9.302521,-2.257420,-0.001748,-4.119332,1.596174,-2.898080,7.701041,-2.011176,-0.241853,-6.765064,2.701407,1.932786,-1.682683,5.100452,5.752734,-6.278134,8.162260,8.907075,-5.913079,5.022800,3.174784,-1.953483,9.578212,-0.739504,-1.204707,-0.380337,-9.962199,1.880863,-7.964166,-7.858565,-1.940887,4.432097,4.246043,2.056692,0.706468,-9.441775,8.760692,5.875558,2.465481,-2.789204,-0.481831,2.060113,-7.359660,5.042683,6.218456,2.889438,-1.252105,-8.658326,5.551408,8.597844,-3.156006,7.473291,8.391209,-3.542047,8.925951,-7.900763,1.984665,-9.191443,-6.662884,8.990486,3.829501,3.008371,4.430328,0.016748,-9.087826,4.082341,-9.911861,-5.508502,2.050740,6.434320,4.724704,-4.211457,4.690377,8.886088,-4.349813,-3.338084,0.585526,-9.217852,6.011064,9.549023,-8.458586,-9.066696,3.722531,-9.228059,-0.997318,8.296346,4.525153,-3.799331,-8.508901,-6.467448,-3.344799,-0.648308,1.333464,7.052987,8.234730,-4.482714,4.597289,-4.640448,2.304715,-3.847155,-2.947181,6.031594,8.817240,7.695258,3.947398,8.761807,-5.986931,1.622169,-5.106145,-0.313564,6.925039,7.551116,6.999223,-4.014958,6.847810,-8.174588,-6.404088,3.791493,-0.307822,-5.588022,1.767715,6.510595,2.216874,5.063928,6.875146,6.985187,-8.811257,-2.832367,2.348282,-3.712061,8.333765,-1.973561,-1.284090,5.652000,-1.880547,6.624832,6.191582,9.212222,4.376841,-9.013291,-8.546284,-9.734572,8.624572,6.752019,3.009028,5.922158,-3.032181,-6.316611,0.722140,3.009505,8.829709,2.633132,-4.463971,-1.793801,3.111328,-6.917804,-3.147086,-1.616731,7.497792,-7.341566,6.301075,1.430236,-5.708204,5.403806,-3.844769,4.799205,2.925042,-0.223875,-6.570196,2.217342,-9.427752,8.178116,-2.908567,-4.750487,3.495264,-6.440756,-5.742778,6.755301,-5.353245,-0.203452,5.387490,-2.985574,7.232055,-6.400057,6.174492,0.701387,-7.992484,9.579687,8.318615,-5.752947,-7.683294,7.550734,9.192956,3.986901,4.433701,-6.294704,-2.879631,2.189938,3.207389,1.237765,-5.131322,-6.960033,6.464176,5.084813,7.553990,-5.922182,2.980872,-6.066241,-6.728978,-5.060154,-4.119442,-1.140484,1.386722,-0.946772,-0.202198,-2.981515,-7.980944,1.334699,-7.920089,-2.740883,-1.278474,3.113941,8.740369,-2.005055,-2.383529,1.715388,1.256283,0.703946,-8.487701,-0.610458,7.429749,5.783117,7.634856,0.668601,9.422949,-6.332479,-2.190170,2.027895,2.009402,4.130008,-6.543047,-3.224501,3.093789,3.442748,3.650520,-4.801042,-0.644076,5.066339,-5.372364,2.395645,-9.809871,0.841677,1.784861,-6.236029,4.467630,-1.013331,0.294257,6.047555,-5.159357,-3.761171,-3.701811,-9.350674,-0.358436,3.760251,6.390831,-1.719060,-8.481475,-5.527684,6.364508,-6.015636,5.495718,-0.445864,-9.969867,1.690384,-6.729921,-9.566184,-8.441218,4.784762,-1.155141,7.208276,0.170546,-6.081723,7.078644,-2.230845,0.591521,6.338454,4.152497,9.288024,-5.809593,6.999479,-8.582459,6.536381,-6.109081,2.243017,1.541645,-8.264060,0.320736,-3.527908,-4.619650,1.372196,-0.253419,-4.013104,-4.787969,1.535955,-7.934684,-1.946211,-1.930827,9.898738,-3.453186,-8.901891,1.183387,0.810847,9.893004,5.870751,-2.606826,2.519812,-2.239491,-6.982475,-5.792361,6.194950,-6.514492,2.702104,8.114462,-7.938575,-3.232765,-1.923397,2.176067,-2.887549,8.610215,-0.331545,-7.091191,-9.195933,3.820502,0.776117,-2.631668,-4.994701,-5.708860,-1.405624,-1.216637,-4.775885,4.739390,-9.575389,-4.336783,8.476767,6.590826,7.683675,8.444249,-7.461740,-4.276330,-7.562218,-1.776366,-5.706798,4.803947,-2.997320,4.440687,-9.923575,4.918944,6.708957,8.509465,-8.981530,0.803086,-8.279533,7.039786,2.405850,-8.073784,9.103882,8.906879,-0.891588,-2.799144,-7.877713,5.981083,-7.072002,-4.328430,-7.341747,-8.909204,-5.367667,-2.271094,-8.814957,8.013603,8.833769,-6.596611,-2.867640,-3.657927,-5.163312,9.910531,-7.872203,3.701199,-5.568855,7.686830,9.673593,0.224201,0.437568,-2.553387,6.551838,6.705834,3.825836,1.938068,3.500206,-9.817471,-3.881505,5.939145,-9.445257,1.421429,-3.433390,7.214725,-1.599069,0.811244,-4.017893,-7.344759,8.354549,8.286318,4.163637,-4.179564,-2.791194,-1.300621,-9.184247,-0.017910,-0.026156,0.020536,-3.359184,-1.825698,5.233601,-2.707060,1.247529,-5.135374,-6.873685,5.250518,-0.831203,1.309334,3.968493,-7.027701,6.776501,-5.967011,-4.408371,-0.117844,8.803334,-8.119889,-8.496883,-1.584709,0.782987,-6.613678,-7.469274,6.452159,2.729978,-3.823252,-2.274372,-3.970798,8.663756,3.773062,3.176289,-3.729673,-2.592762,5.813003,1.670354,-7.478669,-8.528809,-3.799447,-4.230160,-1.912356,-1.181802,-6.116262,4.808055,-1.451028,-7.079766,-5.847517,7.414901,-7.129755,3.219607,-3.152727,3.417876,4.973371,6.462577,3.805107,7.089376,6.695374,-8.705713,-7.512030,2.621801,-1.228496,-7.957785,6.610446,1.976903,0.429088,7.841984,4.736041,-3.747210,6.747914,-1.948520,-9.795830,-0.754728,-8.376660,9.875464,-6.205768,4.537316,-0.472576,6.297759,-6.193434,6.334487,-9.151391,4.959647,-9.018161,-9.125352,-9.077481,-8.459881,7.647877,-5.836656,8.272360,-4.394530,-6.206652,-7.642551,-3.427572,-0.757512,-9.622395,-0.652291,2.741891,-5.428569,-2.339352,8.154341,4.130267,5.022123,-4.575953,-8.840923,5.967411,4.909972,4.577514,8.614994,8.156988,-8.937568,3.645255,-0.587901,-5.564248,-1.186140,-7.503880,8.466061,1.776411,-5.039363,6.832623,7.263289,4.906607,-0.356626,-0.589000,-2.916244,-2.388792,3.097347,-8.413303,-5.030058,-3.879491,5.940257,-9.493194,9.181038,6.329468,4.569517,-8.760395,3.883580,4.476782,-4.654719,7.513287,2.041306,4.475158,-0.134028,7.996232,4.719419,0.709874,-8.930331,8.729041,-3.456881,9.864534,9.860135,-4.025934,5.536460,5.418307,-6.160848,0.777356,-8.684662,-5.716587,-5.040596,0.652659,-3.653737,-8.314979,-6.933867,-4.375290,-8.105739,-2.118147,2.265479,-3.934172,-1.677530,8.351330,6.826261,-2.721104,2.964174,-2.308379,-4.578219,9.084304,-8.179239,5.599830,-4.042833,6.765048,0.734323,-4.620766,8.841568,-0.304309,-7.686746,-8.298000,-5.673375,5.086310,8.214115,0.350275,9.448468,-4.051243,-8.767257,-7.539007,8.741918,3.740558,5.341410,-9.271548,-2.566596,-3.686342,-6.552939,-6.027781,-1.688972,-1.591895,2.283354,8.112534,1.155397,1.510280,-1.309033,-9.475364,3.988063,-7.270300,5.178632,9.492040,2.883760,0.874265,-9.283010,-7.767078,7.248797,3.323754,-0.553254,-1.521243,-0.471076,3.445230,4.755979,9.959742,9.327029,-0.125941,-4.525832,1.640496,7.041339,8.965411,-6.276043,-7.748382,-9.519598,8.750373,3.342881,-7.426062,5.415637,-3.993066,3.010548,6.341293,0.815984,-6.374629,-1.693522,-5.485163,-7.077080,2.827650,5.192299,-9.942464,5.206827,3.646671,6.818766,8.845895,4.624288,-8.419040,0.411696,-7.420036,6.306422,-1.200609,-5.380724,3.140224,-7.819421,2.980492,6.443188,4.937240,9.469472,1.066714,3.722944,2.137731,-1.172112,1.801471,-3.378779,-4.295986,-3.496346,4.885797,7.038633,1.691185,3.430559,-8.653453,1.580558,-9.263031,-9.010281,8.570917,-4.232356,-3.906993,-2.963535,-9.333982,0.152411,-9.138094,9.461925,-5.642718,2.968076,-2.287950,0.727964,1.020382,-7.980632,0.465639,5.448483,-4.253897,-2.356510,-0.828806,1.967900,6.428203,0.073214,-7.057725,3.696975,-1.782244,4.630937,5.697770,6.311602,8.506712,-2.241357,-0.017506,8.004939,1.198364,7.475282,3.490919,-4.960918,-5.233469,-2.179497,-7.132669,8.613941,-2.797132,3.077384,0.805135,-4.021273,0.249942,-1.722320,-2.225243,-4.528329,1.457867,0.849692,-0.075365,3.805845,-4.716288,-9.814897,8.493294,0.498370,-8.803849,1.359017,4.871787,-6.671532,2.564224,-6.190063,-9.135856,9.875531,-5.336230,-8.108094,2.898255,7.248039,-0.302593,-7.387528,-5.911774,9.066370,3.729472,-2.063795,5.867098,0.786310,4.556361,-9.781117,-5.106367,1.303599,4.648745,-2.195061,4.747205,-3.765374,8.782181,4.392927,-7.281498,-7.048872,-3.550418,-5.948470,2.040914,-1.920347,1.236787,-1.210888,-2.317856,-5.415972,-3.071432,-8.587415,5.465062,5.129125,-0.878784,-0.151444,8.438588,-7.169339,8.849982,5.777012,-4.120072,-5.314368,3.290628,8.873190,-2.870552,9.785296,-1.963678,8.670907,-1.274269,-0.466456,8.491619,5.231054,6.242329,-9.630729,-4.214438,6.985777,0.186867,-1.060021,7.802566,0.734703,9.668822,-7.249042,-9.613515,3.082685,-6.297851,0.115524,-3.891152,-1.702871,-5.303312,1.072235,2.924650,6.885203,-4.764401,9.563489,-5.337096,5.054010,0.486970,5.409383,1.779219,-9.786625,0.663609,-8.659834,-2.571768,9.643039,0.072333,8.087448,-8.081604,-4.081177,-9.369860,-6.769309,-1.378067,-9.572247,8.156068,2.398874,5.142059,-0.091811,-0.713816,-7.814266,5.272895,5.161169,-3.344247,3.112681,-7.689112,3.622385,9.501760,2.049882,-2.002653,4.153996,3.336652,-2.250883,-4.581357,0.093407,6.969951,1.849611,-3.344972,-8.114544,6.867525,1.021260,7.482097,-5.364594,-9.566879,-6.447616,-9.645263,-0.232771,-9.791558,-4.194809,7.524741,0.469935,5.106337,0.250040,-7.649726,1.584815,-7.347233,4.033125,9.651178,-2.068507,3.617361,-6.540175,3.031344,1.364417,-9.066686,-2.767322,-0.015539,-0.985266,7.129673,4.494883,5.169741,1.601438,3.374211,6.141046,3.767872,-6.614884,-0.458331,-4.769553,0.988157,-0.872815,0.785470,5.011580,-9.743908,7.676010,0.918244,2.823410,6.867341,-7.290052,1.588808,-6.788425,-1.611338,2.184758,2.924145,-6.335648,-3.422857,-5.692478,0.386834,1.247841,-5.162349,1.607111,6.085331,-5.049878,-8.374316,5.402149,2.369613,-8.802905,-3.863424,-5.310513,7.602130,-8.231019,2.327567,0.890345,-1.946281,5.353833,0.826315,-4.178823,2.569530,-4.047042,-0.980046,-8.550221,4.976097,7.252283,-9.870971,5.223455,-4.409646,4.340245,7.376103,-2.519479,3.134880,-8.654800,0.707951,9.698898,2.031163,-1.086697,2.713301,7.868998,1.022325,-1.572230,3.416332,3.860753,4.018947,9.884665,6.868397,-7.319634,8.591235,9.719364,-6.904535,-2.233545,-2.904207,6.403185,0.106728,-9.124857,9.488610,-1.208749,6.785068,-5.462004,2.480126,6.985724,6.723527,6.285157,-5.494784,0.482047,-6.687189,-9.418328,-6.893047,-7.383766,7.400432,-5.599273,-5.351004,0.013888,-2.565468,-6.119625,3.692871,-3.797964,-2.941055,-7.453431,5.435024,0.761514,5.329671,-3.939391,1.493491,4.799608,-7.145352,5.927532,-7.193423,-9.822262,-6.531586,-7.681336,-0.606607,-2.442292,5.121343,3.193774,8.753548,-2.562450,-7.692125,-4.073767,2.075234,-7.547280,-4.351916,-1.546333,-3.348390,3.042017,-1.044970,2.982954,1.651300,9.023825,-2.533574,8.115089,8.499520,-2.743395,-6.250269,1.808419,-0.956623,8.228042,0.866712,1.188159,-3.777391,-1.571180,5.024640,8.072335,3.310976,6.224968,9.092449,1.660138,-0.290903,5.815989,7.968032,-2.837414,-1.093341,-7.015039,-2.281388,-8.691531,-6.059405,7.550911,-6.344991,-6.258339,9.892899,3.801233,-9.624030,7.939448,-5.630946,-1.214137,5.430841,8.881132,-5.079858,2.618218,9.693492,-7.423220,-0.875738,2.588197,-1.083437,-5.878009,6.401365,8.480347,5.733597,-9.767608,6.387898,7.042930,-3.576130,-6.309304,-1.719798,2.924921,5.164390,0.882658,8.588469,-1.814654,6.616453,1.814600,-4.800906,-4.152801,7.549946,6.393145,8.377492,9.665036,3.669419,9.877178,9.769204,-8.870706,-5.311392,-9.260040,-4.923746,3.141213,4.922683,0.179146,1.743145,2.992969,-7.366870,0.446958,4.129645,9.140733,9.967627,-1.934020,7.949533,2.713542,8.448182,2.992663,7.917081,2.307093,6.191960,-0.501240,-7.242908,5.304499,1.919229,8.790553,6.032833,5.007176,4.310066,4.680834,-7.744504,-5.296294,-4.384612,-2.472679,-1.990775,7.892601,-8.588643,5.147278,1.717630,8.868073,8.240880,-8.902505,-1.160873,3.534715,4.286461,-0.437463,-2.814081,4.972679,0.909923,-1.546390,5.827373,5.343094,8.798996,7.397194,-4.011709,6.459225,1.094712,-0.427337,-6.043949,0.495838,5.176131,4.496077,-3.637479,-9.333865,-0.666826,0.615145,-9.486777,4.956906,7.851075,3.988490,-0.829531,-4.320570,-8.668818,8.157393,-1.975064,-5.929352,-0.737509,5.535915,6.533607,-6.733673,-6.326929,0.934539,8.915579,7.399552,2.967635,-0.895601,4.203636,2.548422,1.506702,-0.411766,4.095304,5.027806,8.479096,-3.207610,1.728259,-5.479205,8.780628,-3.325048,0.581012,9.679091,-5.483056,-9.013440,-6.861463,4.122308,-2.868852,-4.541262,3.374185,2.161704,-0.448394,5.039754,2.694852,-1.372194,4.981916,0.788834,-9.835469,-3.201762,-4.983162,-4.890232,-8.152752,-5.525019,-0.939513,6.595988,1.057554,-8.601751,-9.615875,5.761373,1.345577,-1.426365,-8.650914,1.884444,3.140370,-8.542981,-5.306780,-8.492933,-6.795583,3.279440,4.523957,-6.074712,-2.308917,2.167880,-6.944954,-0.959055,-0.469416,7.459936,-1.061504,9.522742,-0.021124,9.705260,-8.324141,8.149619,-0.297522,5.767980,0.237196,-4.692637,-7.258209,4.741020,-8.302972,5.858301,-1.730064,-0.968257,3.718410,-9.755539,2.593722,4.762238,-3.350522,-6.510273,6.767643,-5.479915,-2.727712,-8.828245,-1.595115,8.092035,4.472472,6.828727,4.763915,-2.530733,4.592947,-0.936439,-0.223868,3.817674,6.405983,-6.923853,8.042048,9.059809,5.480867,9.251373,7.423300,9.278127,6.253647,5.036476,-9.110408,4.324704,-4.915230,-7.941834,2.382127,8.155253,4.501761,-6.625598,6.732968,-5.885779,8.043310,-4.056209,0.764294,-5.625983,1.707050,1.676776,4.710821,5.184645,4.268775,7.240478,0.745298,1.803011,-2.702650,-4.684054,5.764301,-7.816742,-7.095021,-5.826345,-5.179120,-1.433048,-1.191806,9.595727,-0.760850,5.115546,-4.204835,2.766369,-3.933265,1.675439,-2.378551,-1.072284,-8.232342,-2.718925,9.515556,-8.605253,8.189319,0.309136,8.676686,-0.875056,-3.508426,8.579796,-6.506401,-6.210181,5.906523,7.205550,6.405352,7.211508,-4.235885,-1.707869,-6.404211,-8.486808,5.647302,6.865331,-2.388045,1.667863,-5.864041,-3.384245,4.386747,3.885815,-1.131329,-9.859409,-0.255420,0.602217,6.462903,-8.665680,7.076296,-9.099552,2.507410,4.037097,5.636449,-1.152347,3.009084,-0.512829,1.935864,6.249551,-9.194618,-9.942912,6.518481,9.557795,0.290050,0.410695,-6.277138,-9.172637,6.571103,-5.059977,-0.459485,-3.981048,8.396805,-0.415935,-8.788428,-5.182499,0.481695,7.768171,-7.110228,5.760655,6.622194,-2.448060,-9.253787,5.532704,-8.740045,-7.335083,-9.669679,-8.569120,8.560698,-9.457565,-4.969117,-1.198644,5.122320,0.683708], dtype = "float32")#candidate|1555|(2304,)|const|float32
call_1554 = relay.TupleGetItem(func_329_call(relay.reshape(const_1555.astype('float32'), [16, 16, 9])), 0)
call_1556 = relay.TupleGetItem(func_331_call(relay.reshape(const_1555.astype('float32'), [16, 16, 9])), 0)
output = relay.Tuple([bop_1546,call_1554,const_1555,])
output2 = relay.Tuple([bop_1546,call_1556,const_1555,])
func_1565 = relay.Function([var_1544,var_1545,], output)
mod['func_1565'] = func_1565
mod = relay.transform.InferType()(mod)
mutated_mod['func_1565'] = func_1565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mutated_mod.get_global_var('func_1565')
var_1567 = relay.var("var_1567", dtype = "float32", shape = (14, 2, 16))#candidate|1567|(14, 2, 16)|var|float32
var_1568 = relay.var("var_1568", dtype = "float32", shape = (14, 2, 16))#candidate|1568|(14, 2, 16)|var|float32
call_1566 = func_1565_call(var_1567,var_1568,)
output = call_1566
func_1569 = relay.Function([var_1567,var_1568,], output)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1651 = relay.TupleGetItem(func_759_call(), 2)
call_1652 = relay.TupleGetItem(func_760_call(), 2)
output = relay.Tuple([call_1651,])
output2 = relay.Tuple([call_1652,])
func_1676 = relay.Function([], output)
mod['func_1676'] = func_1676
mod = relay.transform.InferType()(mod)
output = func_1676()
func_1677 = relay.Function([], output)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_1685 = func_591_call()
call_1686 = func_591_call()
uop_1720 = relay.cos(call_1685.astype('float64')) # shape=(16, 4, 11)
uop_1722 = relay.cos(call_1686.astype('float64')) # shape=(16, 4, 11)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1725 = relay.TupleGetItem(func_1311_call(), 0)
call_1726 = relay.TupleGetItem(func_1313_call(), 0)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1730 = relay.TupleGetItem(func_759_call(), 0)
call_1731 = relay.TupleGetItem(func_760_call(), 0)
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
const_1734 = relay.const([-4.166630,6.849900,-3.412871,4.390609,4.989025,-0.363833,1.220031,-3.709270,-4.278583,7.019895,1.925893,-3.877048,9.423939,6.638609,8.387320,8.835078,-7.156178,-3.166155,0.258101,-2.612165,-7.791737,6.481273,1.538311,2.325102,-0.594166,7.726185,-2.864025,0.607117,-3.313296,-0.969136,-5.906828,8.591831,-2.174734,-2.466974,9.367444,-2.854127,7.480927,-6.258126,8.949548,-9.077747,-6.652999,4.818635,9.308996,-8.268844,2.963182,9.771931,6.664754,-2.283080,-6.599128,5.279262,-5.819876,7.028224,-0.393436,-9.409650,4.501648,8.024338,-1.522308,-3.779886,-9.870357,7.654196,2.218548,2.299413,-7.521064,-4.922982,-4.382439,-5.637909,5.772863,-0.986498,9.832317,2.718590,8.690886,-1.786334,9.024841,1.100788,-0.267249,7.345298,7.199360,-7.027265,2.096129,-8.301965,-6.498483,-9.048247,-1.604169,7.242882,7.406288,-1.825688,-4.893534,1.334621,7.680801,0.719940,4.264517,0.914207,5.332059,-8.011815,-7.957975,8.544062,-0.739559,-8.714563,-1.488455,-4.538009,-1.519151,1.371334,-7.207951,-4.396648,6.203664,1.905940,5.258134,-7.807149,-2.371770,9.086388,6.328650,9.737982,-8.241608,6.819680,-0.537873,-0.920471,-4.206329,9.430527,-1.786399,6.319349,2.481015,3.045963,4.016993,7.976309,-6.373384,7.989895,7.615760,9.610370,-3.865348,6.395679,8.783197,-5.383085,8.162846,-9.259478,4.298617,4.364127,-9.445067,4.599484,-6.640395,3.672373,2.821967,9.871417,1.796493,-4.994092,4.083617,-0.313486,-6.497811,-2.835650,-8.194509,1.902198,-6.991443,-5.186423,6.405602,0.063354,4.286751,4.218651,4.565685,7.090918,4.963187,-3.321124,1.823224,2.886269,6.373280,1.474730,-9.958645,-4.524698,-8.905749,5.201812,-7.812918,1.199589,3.446761,1.504406,5.541412,-6.882753,-2.192812,7.319072,3.925466,3.764274,1.767932,6.928397,-4.645865,-7.541088,-4.733054,-2.343897,-1.495717,-6.529774,-4.952095,-7.409304,1.431001,0.434212,-2.716956,4.423471,5.157708,-6.854529,-7.861951,5.877153,2.824340,9.882904,5.633102,8.225769,2.271516,-6.342258,3.911730,-8.155584,7.753520,-3.256314,-2.641324,7.182624,1.034327,-7.336591,9.917145,-2.829606,-2.545142,6.541842,4.548920,5.000893,-0.569746,2.475221,1.956440,-1.282721,3.322035,-9.622620,8.307964,6.312464,1.542079,-3.877258,2.580369,-5.034274,-1.887895,-9.641382,-4.920232,-2.760138,8.393010,-8.169589,2.680175,7.979491,1.178527,7.006447,8.770157,0.482382,-7.701199,-5.569165,-0.001555,1.400700,-4.205852,2.685887,-5.937452,1.659680,4.966501,-9.592080,9.308755,4.183964,7.704753,6.455195,5.648611,2.048815,-4.559493,-1.423638,-2.560896,9.691359,8.714021,7.451339,-4.387227,7.256268,-3.134656,9.650946,0.802283,2.625187,7.451829,1.241175,5.685356,-0.816783,-5.768360,6.978460,7.856750,9.915576,6.721097,-3.091542,-5.277030,6.051694,5.165493,-8.882313,4.124253,0.675886,-5.642309,6.149110,1.326841,3.490574,-1.833494,9.961125,5.202788,-5.082000,4.015565,-6.708636,-8.518000,0.492896,-2.310870,-1.265790,9.658538,-7.711663,2.311614,6.998578,-0.832928,-1.599093,1.716524,-9.081672,8.497987,2.705819,9.882866,-2.025570,6.895209,6.808706,4.822005,6.336892,6.487566,-3.340798,-8.900143,2.329721,-8.660762,8.887023,4.339563,-5.927161,0.036403,-5.122138,3.142990,-9.158682,-4.821187,1.020015,-8.823625,-1.628007,-3.968597,-2.860941,-1.653169,3.506827,3.397667,6.860561,-8.160729,4.610194,6.037082,-9.000361,-8.144874,-2.318317,-5.189262,-5.352669,-2.850820,-1.914697,5.460772,5.607848,8.878091,-4.431744,-8.696230,9.445306,0.074682,-4.667921,-8.502122,-1.669318,1.545983,8.776955,-2.105649,-6.195208,-7.451744,6.281670,9.261881,-4.391361,-6.688854,-4.493032,-4.835104,7.740361,-1.976363,-7.763374,9.626532,-0.200906,8.667081,-6.903303,6.166304,8.934188,-8.329333,-8.606939,4.588160,-8.006932,9.041971,-5.574263,-6.084901,-4.705542,7.387367,-3.456103,1.747085,-3.998357,-3.554734,-0.568789,2.246062,-2.816751,-1.547072,-7.170237,0.308999,5.964777,0.682974,-0.906699,-9.142239,-3.431331,5.655916,-1.917511,2.713287,-0.220665,8.192855,-4.194378,-6.276551,-2.118980,5.083771,-7.134829,0.445953,8.819140,-9.253174,4.316749,-9.171107,-6.004740,-8.889472,-5.921446,0.003202,9.696403,8.878629,-8.770602,-1.479835,5.715096,5.750835,-0.932417,9.129938,0.669469,5.940520,-8.293869,-2.239716,-6.172062,2.833764,4.218356,4.089881,-4.421218,-2.830814,-4.526025,3.293254,-9.772785,2.795248,-8.540245,-8.759571,-4.656370,-8.033259,-0.252939,-9.514783,4.502590,4.764095,-4.665915,0.995231,-0.629840,0.497648,8.479958,-9.662768,2.254617,-6.175393,-8.394748,0.360254,9.797257,-2.306948,5.478563,-7.173477,-6.437075,4.879896,-7.819332,8.157783,-8.264867,3.668783,-8.935773,0.591110,8.596823,4.779739,-8.323663,6.364577,-0.958972,4.450137,-2.088747,-0.766276,-1.705417,7.802592,-3.041480,7.652901,-0.776511,-8.898763,-1.885055,-6.976491,-8.292185,5.865849,3.964847,-5.116141,-2.757623,0.642846,5.195247,-8.609120,7.600058,-2.792101,-2.141971,-5.821060,-4.889699,8.165067,-8.033675,-8.744381,5.121530,6.766051,-5.800087,-1.847777,-7.984411,0.177477,3.640385,9.527155,-5.982128,2.202340,1.897863,3.457786,-1.179778,-8.013138,-7.948907,0.201223,-2.518761,-0.365267,-5.068808,-2.586211,-0.814805,-3.247868,3.023080,-4.000405,2.884808,-9.501389,6.234203,-8.091051,9.449297,-8.446619,-7.389912,9.280777,2.067075,8.107910,1.123217,-4.037349,-0.880441,1.517568,-9.677449,4.452452,3.801023,-5.090500,1.307263,8.584180,9.298958,-8.877201,7.530965,-3.111509,-6.715821,3.128355,0.096700,8.909977,-3.076849,3.922429,3.765624,8.903806,5.855510,7.607177,-4.366761,1.133444,0.088906,7.487763,0.685382,7.457597,-9.684986,4.374314,-4.048627,6.988960,-5.529273,1.285387,6.816941,-0.478096,-2.761391,2.042670,-4.036481,-7.951962,-7.512597,2.806669,8.582692,1.810736,0.294278,-2.740122,-9.865895,-0.031887,-3.446303,-7.697356,-7.753503,-1.371537,-1.332014,-7.053919,-7.931911,-7.429487,-1.463831,3.171627,-6.803095,7.484465,9.796616,4.096056,7.132197,-7.292786,3.660792,6.651019,-6.498037,-7.363590,3.370420,2.170834,7.190001,9.878166,5.298119,-2.993116,3.846291,6.570083,5.066658,-7.283852,9.146531,-9.566378,9.148171,-5.623221,-6.351622,4.075430,0.195932,9.254045,-8.917639,9.557655,0.398839,-9.172791,3.655555,-5.828472,-6.513224,-4.907189,7.389726,3.996460,-3.837609,-4.080318,-1.892021,4.714106,6.510565,2.787517,2.497931,9.412946,-7.155568,8.547237,-1.141048,-6.978906,4.977889,-4.972151,1.491321,0.275404,1.910811,-6.059123,7.879903,-2.671950,5.269988,3.505742,-9.758336,1.713787,-0.442915,-8.309446,-5.412506,3.831284,9.966437,2.712834,1.072872,1.224596,-9.325920,1.030466,3.957343,-9.656479,3.638528,8.578120,9.401170,-9.906438,6.237512,-0.535950,7.822322,0.219420,1.691644,7.025115,-5.910115,8.578186,9.448205,-3.243070,-1.031187,9.589666,-6.472767,2.282696,7.654933,1.302687,1.697677,9.923389,-5.057877,9.250907,3.567679,-9.313169,2.652821,-2.946831,-6.994655,2.126029,-6.852258,-2.563185,3.787654,-5.846605,3.034876,-1.423216,3.549556,8.078205,-2.073877,6.459405,-0.106478,2.001288,7.120866,-8.012240,1.678285,0.130703,-1.121690,-7.354623,9.874073,-0.469718,3.533457,7.814102,-2.613610,-0.579063,-3.062860,-0.662412,2.650799,-9.929418,-1.576290,4.850897,2.141182,3.500716,-9.085039,9.260084,-4.055653,4.477874,-7.236263,-2.843842,0.961074,-1.749441,-8.569338,-2.619056,-3.293610,-3.180010,4.109334,-6.837394,-2.078250,-7.702150,-9.884703,3.976540,-1.788764,-3.693773,1.285424,0.462447,4.270756,-5.962129,8.747823,2.913779,-8.827612,-3.609115,0.662786,-0.304885,-2.217732,2.644643,-9.048107,6.610195,6.486868,-7.090472,-6.911307,9.077617,5.251711,6.883170,0.829956,-8.916060,-8.695278,4.446308,-3.808233,-6.060857,9.933033,9.743354,-8.871038,-4.845914,-5.335665,-9.921844,-9.084397,-3.961225,-6.682963,-0.052733,-8.574256,4.460761,1.298192,9.025396,-2.867266,-9.704316,1.789258,7.438089,-3.443181,8.658395,-1.982382,9.421226,7.272300,-3.022576,0.388900,9.354237,-1.032666,9.215520,-6.605173,2.178478,-6.318129,-1.403937,5.714305,3.635191,2.692303,-3.351292,-8.148503,-3.624386,1.413854,5.274109,-5.605140,-7.400966,5.399876,-0.667433,-5.081356,-9.377361,-0.776131,-0.300767,4.638766,7.657665,-2.481224,-9.316347,-8.789317,7.714002,-0.788661,-8.124419,4.791714,1.764021,-3.385028,-6.752440,1.127509,0.887903,8.090142,8.717553,4.417940,1.909036,-6.891323,0.589996,7.457969,-3.774466,1.162397,-7.663404,8.852891,-5.603149,6.176709,2.340198,2.448641,-1.589930,-7.382699,8.150991,5.666736,-5.788792,1.329184,-0.752279,-6.303267,-9.887223,2.334640,-9.068145,-1.540033,2.900029,-6.490697,-2.844346,1.136921,-1.286879,-4.306282,-5.176521,7.315789,8.911819,-4.427545,6.308294,-5.090955,-1.960606,-1.316639,-1.055123,9.750051,-4.345965,-3.402213,-3.118019,-2.041599,-8.403905,-7.231004,-5.960232,2.237274,-8.197107,5.599326,-0.165210,8.322968,0.694172,4.008499,-2.098838,0.115176,-1.030278,0.694107,-4.560995,-3.740661,-8.354328,6.536573,-0.798213,-7.227268,-9.818496,-8.505834,1.080363,0.130597,9.017963,4.805690,-4.397036,-2.425788,-1.478547,4.778928,0.463691,7.593841,-8.460541,-6.448657,4.645529,-4.961835,-8.344347,-1.300863,-5.354150,6.231859,2.771983,-1.405091,7.280556,-1.435163,-1.721383,-7.700326,0.390444,-8.205617,-0.605607,-3.255456,4.190470,9.128738,8.335151,-0.480734,-5.829085,7.472408,-0.857876,7.956304,6.059126,2.256820,3.875937,2.870631,-1.548354,-5.229468,2.796778,-8.029413,6.751303,-3.295353,-1.822876,3.017895,-1.452148,-2.718518,-5.891657,5.138836,5.759256,4.133413,-1.956376,-6.894304,-1.221157,-8.200875,7.783550,7.681404,-5.333816,-5.850456,-2.239518,9.761386,-4.766173,3.444576,4.427551,-3.787318,7.371821,6.256822,3.283141,-8.847403,4.453240,3.628065,-5.707429,6.498149,-2.951921,3.254331,5.537982,-5.927725,-5.097056,-0.105416,-9.042802,-0.151877,1.030113,6.849961,8.776816,-0.824151,-4.962236,-9.251668,-7.831034,-5.487035,7.107649,5.990319,-2.370382,-3.664128,9.917037,2.013083,-7.182939,-6.443949,1.322220,-2.259644,5.038872,7.786569,-1.390523,-4.725540,-1.950156,3.894053,-2.236087,-1.969617,-6.820049,1.192504,-0.873742,4.882271,5.838651,-8.130702,-3.977346,6.137708,1.382917,9.443976,-3.364770,2.099341,-2.455994,-6.477522,2.423002,-1.966818,-5.564387,-8.295297,-5.136402,6.446264,5.238892,-7.195944,-5.472399,5.148765,9.640777,9.109671,0.497894,-9.346287,8.528963,-2.061152,3.803429,9.241830,9.434742,-8.166358,6.532095,1.972489,2.867502,-1.597353,1.591684,-4.605916,4.797239,5.247855,-2.667349,-3.211237,-3.252351,-6.668018,5.976447,1.004190,8.249929,-5.656710,7.081043,3.161590,-5.245076,-4.255445,-5.723056,-4.747869,-0.508814,-5.546453,7.820560,2.763708,2.496256,9.353063,3.142824,1.855148,2.013989,5.382291,7.922634,9.999503,5.873474,-3.634390,-4.509936,8.841206,-5.125177,0.321493,-4.802074,1.010466,9.212633,3.239610,-4.790007,3.670751,-1.374961,-0.471155,-8.111465,0.680839,-8.077922,0.761122,-9.492015,2.556864,-0.266406,-8.806457,3.385757,-2.846941,9.990963,3.804702,4.538340,6.653770,-6.961081,6.538319,6.400704,-0.439329,-3.519769,3.709168,-5.220781,7.089845,6.370688,0.506725,-0.867166,0.898132,3.132585,7.592459,-0.757319,8.546467,-9.375017,0.283391,7.207557,0.220522,8.565817,9.682896,-5.354102,-2.540042,-8.957268,-6.987696,0.305795,-0.205200,4.888045,3.757204,-3.408914,-3.485649,-2.814446,4.238095,4.558215,0.190187,0.796626,-7.169964,-0.596175,2.893622,-2.259428,4.246802,-2.485947,9.779684,3.876362,8.675334,1.261407,-6.158477,3.236461,8.909399,9.484371,0.997337,6.342919,-6.333317,-1.683717,5.784757,7.187209,-7.840543,-1.926046,4.464580,3.172744,-8.952056,-1.068075,-1.565408,-9.287033,-4.316824,-3.303173,-8.152916,0.296483,8.928567,-8.732671,8.974575,5.652623,7.526206,2.141642,0.748387,2.375338,0.245553,1.706168,1.617877,8.717662,7.195190,5.497069,-4.104356,-5.679311,-8.790036,-5.643139,-1.126628,-8.654750,0.572496,9.238032,-4.164147,-2.397815,-4.345086,3.344035,6.924405,-6.665561,-1.577478,-5.466627,-4.882905,3.176970,-6.779629,-8.258662,3.893142,-3.260974,-8.424239,-3.322851,8.677347,-7.946555,-2.420168,7.062819,1.335836,-3.401330,-9.721189,-6.298615,8.472610,1.631218,2.542675,-4.520718,-3.594059,2.827114,-5.667016,0.435074,9.190851,-2.499668,8.481640,9.211671,3.624657,9.991330,1.563223,-8.830522,0.171381,-4.768588,-6.552488,1.383090,9.232479,1.423101,-2.698625,5.651116,8.531591,2.539279,-0.019148,8.235684,-1.671468,5.919929,-1.201535,-4.497162,4.051698,-1.322193,-3.143577,8.614801,-1.438970,5.849963,5.186628,-3.380091,-2.548289,-8.791005,7.021521,-0.457356,-7.612015,5.997131,-5.851890,-3.166158,-0.178823,6.447709,-9.469448,-2.741914,6.950082,-3.244470,0.425546,8.365703,-9.986456,-8.738559,7.736964,-1.219143,-5.878891,-5.459863,9.743499,-2.766970,9.140043,-9.331724,-3.824557,6.410090,8.398429,8.605864,-8.655303,-1.835342,-6.379489,-7.600169,-6.317960,8.526034,-8.154245,1.538024,-7.136202,0.689205,1.441120,1.009978,6.473512,5.480349,-5.313091,8.825261,-2.326986,-7.744910,-3.606100,-1.087228,5.399610,7.067421,-0.339388,0.854651,-4.138328,-7.973983,4.824563,-5.855193,-7.180705,7.486876,-8.127010,-7.960022,-4.497313,3.417064,2.991675,5.202233,4.382918,3.834419,2.853166,-9.193048,5.764337,7.941588,-1.583451,8.106001,-3.658148,-8.095145,3.176954,2.370958,5.734829,-0.498914,-3.511096,7.440723,-0.501444,4.452448,5.546188,-6.199375,0.784815,8.953512,1.255924,-7.594228,7.911341,-7.667258,6.375283,4.777274,-0.951852,-9.174262,5.471147,-9.321370,-6.351802,-0.960296,7.451702,-5.874891,-9.132749,-0.113924,0.295062,3.175902,7.252440,3.983090,3.879710,2.660910,4.337966,1.979484,6.586727,-6.448178,0.925579,-9.971160,2.928911,8.576692,-7.144382,3.882907,0.525578,4.858869,-8.667355,0.340113,9.954032,5.659535,-6.832932,8.730446,-3.404252,2.656676,-1.712685,-8.428870,8.884031,-4.640409,-2.399127,1.900365,-3.085701,-6.313154,1.998836,0.646727,8.762388,4.319052,2.978743,3.367508,2.657557,1.774154,-6.292028,8.848967,-9.061725,-8.569893,-2.117569,-9.414202,-8.931033,4.972294,-7.039925,-5.890332,-0.793476,-2.629596,-3.473122,5.631670,-1.314935,-1.744856,8.927394,-9.917701,1.969066,-9.314284,-5.837444,-5.432402,9.259111,3.162513,-5.869544,0.201070,5.251960,-8.649507,-9.173538,1.218168,0.191982,9.247613,-7.029870,-7.821222,-5.176897,1.072450,3.957227,6.560712,6.539891,-7.686713,-4.559641,-8.688379,4.371282,-2.575141,2.037662,1.137699,3.033366,4.112887,-5.350496,7.914484,-4.914274,-5.957162,-2.151979,-0.641124,-3.165721,-4.862075,5.551893,-9.642252,1.229333,-7.930172,8.324601,4.306518,-7.770398,-0.594463,-2.356670,-3.639033,-7.891332,-3.390526,-4.892949,-7.205554,-6.660973,-6.065035,-6.318281,-2.607501,3.609857,-5.779390,-8.443118,4.860645,-9.174942,-6.885693,8.764911,7.594552,9.153770,-4.637759,-3.516846,-6.163965,8.774848,-1.743953,7.517638,-9.274691,3.566400,5.744737,-7.487473,0.304010,-6.487732,-5.835388,-0.723616,8.641790,0.150089,0.191547,4.549655,-7.764145,-7.986190,-8.686882,-3.544086,-5.209152,9.166433,2.302294,-8.856160,-7.614038,-8.860310,-6.098934,-0.700116,-7.148000,-4.779325,2.046090,9.900172,-0.806555,9.661637,-5.205793,9.415418,7.767518,-5.701551,6.398007,1.955181,-8.228806,-1.883483,-8.562737,-6.960013,-1.205357,3.796274,-8.436744,-8.491497,-6.163231,1.338222,8.786445,-4.473028,0.789226,8.279657,0.543435,-0.786768,6.856641,5.072166,2.757440,-1.604870,-0.983798,-3.369195,9.530866,9.461340,-5.500675,-4.068334,-9.638299,-0.856586,4.956393,-3.770109,1.970999,-0.262122,7.703241,-0.345433,-8.340447,-7.078678,-6.118650,3.299589,5.521958,-2.160296,-7.483681,1.974414,1.994213,-8.589354,-8.263200,5.065365,-7.950785,-8.174180,8.350586,-5.360713,2.582053,-2.898243,4.463862,1.189776,6.143924,-6.125977,-6.121188,-2.341293,-9.835071,3.407011,8.173697,-6.225251,-8.623444,8.144870,0.658350,2.905198,-9.830719,4.238163,-0.953573,1.429516,-7.744142,9.237529,9.776900,-0.094816,-6.454745,-5.428318,-4.796164,8.781595,9.080981,8.396837,8.088939,-3.770949,-2.501044,1.432725,-8.553130,-4.127393,8.259636,-4.177028,1.410972,-1.214800,-0.808034,7.204378,1.682804,0.928760,0.919306,1.677386,-3.850685,9.432386,2.299542,4.977591,9.818382,-1.238586,8.070117,2.429457,9.405576,-3.115968,0.858811,8.682352,0.931820,5.114027,0.097489,7.429953,-6.112939,-5.392461,8.528683,-4.926631,-9.642692,0.033230,6.385709,-0.717271,-3.662811,-7.467105,1.214764,-2.907579,-0.440579,9.711835,5.819261,3.280401,9.971556,0.594894,7.476313,8.446669,8.195512,4.156652,-3.481338,6.372669,0.409296,-5.755686,6.180114,2.022170,-1.391790,0.128790,2.346830,-7.969838,4.488104,6.124201,3.361242,-2.793479,-8.245733,3.040033,7.606624,0.777033,-6.158124,1.906332,8.603746,2.727200,-8.455682,2.370369,-9.045066,-0.940036,0.907424,-3.899828,1.734484,2.645478,6.971874,-6.684119,-9.569329,9.793853,2.923939,-6.950270,3.963101,-2.904270,3.939259,3.281381,4.061207,5.544711,6.918029,6.360173,-8.376882,-2.530667,8.576970,-0.465909,4.604903,-2.839744,5.666730,7.655028,7.496830,-9.176972,6.565716,-3.315768,7.078600,6.307007,5.556909,3.981864,-5.002064,9.787682,-6.964611,5.628798,1.523379,-3.357605,-6.046354,1.717379,-5.972139,-0.659164,3.855830,-4.566074,-7.206283,-3.475356,7.363598,7.370555,2.847027,3.149654,2.881811,7.703177,6.445375,9.336715,1.218525,4.892819,-3.352566,4.898630,-0.733426,-9.634967,-4.645054,-9.443893,5.099406,1.270887,3.121552,-2.522439,8.195209,8.989720,-3.188381,-6.911555,-7.723895,6.234291,-9.132748,-3.227085,-1.846618,0.103187,5.793476,-9.568413,-9.475982,-3.277976,1.071351,-9.276560,-9.772206,2.499861,-7.288848,3.738988,4.041737,3.647603,9.881870,-2.915254,-2.909702,-1.526026,5.047189,-9.150738,-9.118405,6.672079,-4.492972,-9.205541,-4.683768,4.900087,-8.947930,1.749616,7.010529,3.826606,-6.699791,-3.371478,0.732345,7.238553,-9.837656,-4.960905,-8.731133,-8.479932,2.930081,0.128352,-9.462280,-1.748397,9.888900,-9.201905,-0.150533,-0.318208,6.615568,-8.502961,7.645738,2.265350,4.821457,5.728046,-8.371082,-5.891310,-2.459923,9.488611,-1.535866,3.521551,7.848341,-2.357583,7.544902,-9.102899,-6.086266,-9.122842,-0.713110,9.199799,7.678305,7.348653,-7.239465,-9.762689,-7.303925,0.114884,3.804685,-6.169965,-1.900404,8.744484,2.536426,-9.624010,-5.461908,-7.944830,-0.871645,-5.385623,-1.699858,5.810268,-1.390949,7.712625,1.481577,4.813605,-3.838552,8.161499,7.422997,-6.874776,8.094760,-6.243997,4.031883,-5.918557,-5.732959,-3.662938,6.626754,1.251186,7.268729,-5.108343,4.947073,6.318365,1.722119,-6.886946,6.278935,-2.192725,7.095822,-6.516466,9.179550,-4.641428,-3.054019,-3.180860,4.172733,6.356074,-2.787781,8.360247,8.742739,0.726277,-0.858852,4.886705,8.064737,-2.912287,-1.825019,2.355451,6.838472,8.495226,-9.043321,1.678717,5.255535,-5.049847,-3.746552,3.339597,6.137313,9.282719,-0.817682,7.538534,-8.730280,-2.082783,8.305968,-8.717563,-4.654406,-6.223801,6.937507,-2.224043,-3.228604,-6.792757,-0.393595,-4.179126,6.394702,4.135616,6.469390,5.766644,-6.131511,-1.532417,6.406668,1.621289,5.077915,9.964217,6.951532,3.467434,-0.181955,4.512486,-9.348007,-1.572870,3.859248,3.869068,8.935121,-1.675628,9.388644,0.948047,4.067152,-7.452327,-3.092436,9.563010,6.869718,3.438788,-8.955200,-5.377448,-0.632699,-6.329780,3.251868,-1.734634,-5.996717,-4.176474,-5.252293,2.807668,-1.923000,-0.215387,2.675892,4.117111,-9.895497,-9.815114,1.654139,2.832565,-3.444825,7.969439,-0.184295,-9.563344,-3.007928,-7.080368,-7.050373,-9.152420,8.895593,0.981660,-8.642388,7.659209,2.547160,2.896485,-2.589487,-4.683016,3.673256,-6.482057,-6.771360,-8.068993,-3.084946,1.882922,-5.677316,6.285621,-7.871393,-4.713548,9.644200,5.245964,-8.938031,6.907047,-8.965041,5.783308,8.008162,6.734453,-9.242882,-2.518483,-5.168944,3.607498,9.646861,-4.342463,2.836579,-3.864798,-5.993355,9.407059,9.567190,8.791445,-0.207958,6.479138,0.188871,3.752331,-0.253060,-5.316441,0.850201,-9.679245,-2.334160,-6.565060,8.454109,0.734538,3.508462,-1.133378,5.526446,-5.137594,-7.186472,-1.927492,-4.161022,8.414532,1.747474,7.434273,7.513752,-9.434336,-7.458789,5.130249,3.351975,5.845346,4.658527,4.266569,0.362141,4.761511,0.650600,8.925424,7.303060,4.968450,-8.459746,-0.290020,-2.935180,-9.578955,7.917772,-1.714885,-5.904226,0.819120,-7.692435,-3.670433,-2.240800,7.527866,1.835563,1.563404,-9.832261,-7.180096,4.965712,-3.845694,0.199830,-7.535006,9.171394,0.215069,-3.116459,2.896306,-9.925557,7.234502,4.395981,-8.934298,7.405733,-3.769010,-2.551549,5.131614,7.609378,4.878168,-8.304799,7.511817,2.217980,6.657358,-9.070251,-1.606667,-0.039695,3.421326,-4.230775,1.984204,-6.377788,8.695522,-9.020653,-8.284948,8.446551,-4.394613,-9.035107,8.708349,-0.156807,1.517136,0.596363,8.300412,4.435190,-1.680719,9.447613,-9.223307,7.820047,-8.391181,-1.206788,8.641875,1.423388,7.256806,2.537420,1.431390,3.495181,-0.208111,-0.307238,-6.695348,8.510774,6.268488,-4.879604,-8.099141,-1.692654,7.696997,4.751993,-4.449377,-4.609501,-0.893502,-0.420276,-8.465881,5.546569,-3.176062,-3.695274,4.611732,8.970006,-8.715467,-8.959964,0.876103,-6.967985,5.977773,1.615103,-2.616752,1.058176,-7.439882,-8.863626,0.369428,3.655768,8.646408,3.077852,9.576539,5.969904,-5.996812,-0.586859,-0.748070,4.134942,2.240746,3.273368,-0.930263,-5.897488,-2.138535,5.436436,-5.298699,-8.602677,4.685533,2.656748,-4.944360,-8.605411,-5.567540,1.777360,0.161436,8.195788,4.470871,-9.677695,4.793352,-1.872547,4.410660,-8.259412,7.201499,7.613059,-8.639797,0.097529,-5.952650,5.175845,6.472976,2.290667,2.915272,7.603530,-8.854207,0.915928,-3.484450,7.092629,3.589494,-9.820089,-1.740953,4.956260,-3.583580,-0.650897,5.359414,2.530240,-4.791862,6.807190,5.156103,-9.645079,4.175369,-4.002769,-3.454581,0.814779,2.860891,-8.556239,-8.909070,-2.618276,-2.704349,8.141529,-6.283630,-0.859070,7.973200,4.009141,-2.196904,-0.816873,6.970211,-0.697549,0.117081,0.563063,4.670844,-2.784130,-2.111287,-6.922585,2.702501,-8.227942,-6.178474,-1.493414,-6.269325,3.141439,-4.886277,-1.053967,-2.384938,8.082271,6.353848,-6.200208,-5.909285,-8.922588,9.873558,9.152209,-8.546414,-6.582601,2.967109,-5.280181,-9.867509,-5.024484,-1.567219,-2.320276,7.734517,-7.312854,4.056076,2.095413,2.678725,-9.827896,-2.435429,-4.751488,0.805441,-5.479169,2.810565,-2.448175,-1.982076,-9.320233,-1.101899,2.327299,-2.014509,-3.493316,-8.827910,0.092724,5.638753,-6.322299,-0.098504,-3.718600,3.811306,-5.150701,7.509620,6.010285,6.265064,-5.965802,-1.246529,-2.975114,1.439405,-7.330182,-1.840300,-6.629348,0.847714,-5.450740,1.955963,8.679433,8.246226,8.785408,2.370617], dtype = "float32")#candidate|1734|(2304,)|const|float32
call_1733 = relay.TupleGetItem(func_329_call(relay.reshape(const_1734.astype('float32'), [16, 16, 9])), 0)
call_1735 = relay.TupleGetItem(func_331_call(relay.reshape(const_1734.astype('float32'), [16, 16, 9])), 0)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
call_1739 = relay.TupleGetItem(func_1441_call(), 0)
call_1740 = relay.TupleGetItem(func_1443_call(), 0)
output = relay.Tuple([uop_1720,call_1725,call_1730,call_1733,const_1734,call_1739,])
output2 = relay.Tuple([uop_1722,call_1726,call_1731,call_1735,const_1734,call_1740,])
func_1750 = relay.Function([], output)
mod['func_1750'] = func_1750
mod = relay.transform.InferType()(mod)
mutated_mod['func_1750'] = func_1750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1750_call = mutated_mod.get_global_var('func_1750')
call_1751 = func_1750_call()
output = call_1751
func_1752 = relay.Function([], output)
mutated_mod['func_1752'] = func_1752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1757 = relay.TupleGetItem(func_1311_call(), 0)
call_1758 = relay.TupleGetItem(func_1313_call(), 0)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_1772 = relay.TupleGetItem(func_1401_call(), 0)
call_1773 = relay.TupleGetItem(func_1403_call(), 0)
output = relay.Tuple([call_1757,call_1772,])
output2 = relay.Tuple([call_1758,call_1773,])
func_1792 = relay.Function([], output)
mod['func_1792'] = func_1792
mod = relay.transform.InferType()(mod)
mutated_mod['func_1792'] = func_1792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mutated_mod.get_global_var('func_1792')
call_1793 = func_1792_call()
output = call_1793
func_1794 = relay.Function([], output)
mutated_mod['func_1794'] = func_1794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_1845 = relay.TupleGetItem(func_1235_call(), 0)
call_1846 = relay.TupleGetItem(func_1236_call(), 0)
output = call_1845
output2 = call_1846
func_1861 = relay.Function([], output)
mod['func_1861'] = func_1861
mod = relay.transform.InferType()(mod)
output = func_1861()
func_1862 = relay.Function([], output)
mutated_mod['func_1862'] = func_1862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1867 = relay.TupleGetItem(func_1067_call(), 0)
call_1868 = relay.TupleGetItem(func_1068_call(), 0)
const_1873 = relay.const([[[-3.588284,5.866777,4.244568,2.158699,8.464282,-7.416548,-3.390625,-6.857525,6.037457,3.772596,-6.035803],[-0.067628,-7.255158,-0.860415,-2.072025,-3.527830,2.213227,-0.981272,8.208528,7.837714,-8.731336,8.633722],[-7.954509,-5.891331,5.502629,-6.214663,-2.495918,-2.920962,3.482598,9.263219,9.112456,-3.404579,1.335655],[3.548461,-3.585881,5.031766,-8.999821,4.184240,-2.431569,1.061182,-5.188835,6.591739,-1.414467,7.921511]],[[-5.365207,-4.837037,7.552907,8.638013,3.889860,2.821176,8.586181,-7.646235,4.349408,-6.969014,-5.763420],[-2.788685,8.717158,3.359470,9.669057,1.814283,4.917499,2.789945,-9.105748,3.616334,6.890379,6.321205],[1.747530,8.843253,-0.120283,-4.661822,4.226668,6.946405,-1.467398,-6.034711,0.987165,-0.330858,9.885088],[9.618109,-7.144770,-6.360723,1.186566,-7.050558,9.339037,-0.017091,9.123363,-9.176583,8.089722,-5.478056]],[[0.992642,9.816752,-8.431759,9.480958,-1.988843,-8.360066,-1.197861,-9.293247,-2.430515,-6.542003,-2.936233],[5.179198,-5.794652,-3.348717,5.733856,0.702881,-3.624042,-6.332852,-9.852728,-2.904333,-2.504400,9.412744],[7.788794,1.079153,-9.136732,-8.995577,-1.252245,9.733701,0.779947,-2.337307,-3.712119,6.343790,-0.663436],[7.024851,-2.776540,4.545075,-5.545646,0.452969,4.136297,-8.063900,-9.937795,-3.687345,-4.300410,9.703179]],[[-2.809634,2.465834,-6.135672,4.870984,-8.419294,3.351755,-6.941014,0.478149,-7.895987,0.052420,7.721780],[2.210838,-2.592574,-7.755449,5.898657,-9.763802,8.350678,-2.747329,1.260931,5.371150,6.898739,-9.494605],[9.734543,-8.429446,-2.576706,1.061435,6.994042,2.044358,8.310321,4.737738,-9.725572,-9.137317,4.517342],[8.776767,-2.532905,-6.380670,8.925013,6.972876,-8.318888,-0.850428,1.500235,6.777016,7.702630,-8.616059]],[[-1.934306,6.099228,-1.750541,9.699830,9.247286,-3.180847,4.255169,3.298668,8.299007,6.780834,-9.092219],[-0.121734,-0.269608,2.694744,-9.040829,-2.141221,3.928677,1.584846,8.793801,0.331773,1.598688,-4.674675],[-6.902457,-5.641546,-3.488984,7.768363,9.979757,9.031312,1.889761,1.110396,-6.110697,8.463144,-1.307936],[8.312998,1.102324,-5.318838,-7.088349,2.367988,-3.969979,-9.156755,5.782756,9.439394,1.349023,-0.723961]],[[7.194348,8.226493,0.757355,5.883760,7.669652,8.635757,7.615747,-0.977344,-5.149567,-9.665853,4.950137],[-2.660439,7.485809,8.014384,-0.486381,2.501977,-3.570405,1.626156,2.783037,8.241546,-7.630976,7.273109],[-7.128413,9.010658,7.815848,3.486218,0.181139,-0.901017,5.383322,4.675950,0.620940,-3.780072,2.507946],[-4.395648,-8.292261,-2.047749,-5.778223,9.390587,0.123082,-1.529668,-8.625193,3.459572,0.990150,-5.122010]],[[9.610593,-2.246104,6.813800,-4.820057,-4.083144,5.101096,-7.307217,1.473512,-4.865658,1.393354,-3.518377],[-3.999738,5.467986,-1.980046,9.562818,-1.509018,-3.702447,-7.007715,6.369359,8.308011,8.487417,-9.015232],[-1.882563,-3.612814,-6.241245,-6.327031,8.658014,-4.255910,-2.167678,8.001177,9.729459,-4.318603,-6.969181],[1.570726,-3.561324,-0.668807,-0.260648,8.529571,-6.700054,8.381312,-4.250956,3.934066,-6.096767,-4.788692]],[[-7.497082,3.659976,0.584144,-1.390211,-2.891965,5.306532,-1.763533,-7.895697,7.826728,9.909692,9.880005],[-9.195077,-6.724951,-1.940909,5.708205,5.570619,-9.765472,-3.567777,-5.366991,-4.775601,-6.183936,4.843698],[6.302132,1.321182,-1.601482,-3.622296,6.591184,0.950083,4.664174,4.823435,-3.556936,-4.628623,7.560765],[5.314312,3.225917,-1.744796,0.674500,-5.761682,7.110630,5.894728,-8.884453,0.973208,4.861752,4.961508]],[[-0.221968,6.366872,8.621244,-4.884247,-7.457838,8.387762,8.344702,-4.951250,9.003173,5.506807,-9.460520],[-7.539031,-8.189047,7.039746,-7.855773,-4.484555,0.712457,-0.848567,-3.682318,5.423006,-4.800423,-6.150495],[-3.410852,-1.455512,-9.044676,-5.245025,6.676390,8.795249,-4.130229,7.785750,-1.238495,-6.979354,4.085630],[-1.012938,2.844069,2.586875,-2.083042,4.119379,-3.932713,5.690650,6.310610,7.860802,-2.188426,-3.997823]],[[4.286785,-7.117819,-6.535958,8.942560,7.521067,5.190813,4.297776,-4.486160,-2.215611,-4.729788,2.419561],[6.259616,2.643079,9.519844,-4.554523,5.215561,6.148887,2.051538,-3.132329,-9.665387,-8.628463,-5.789693],[-5.609673,-2.918142,-8.922571,1.690410,-4.168238,-8.330903,7.766341,0.792330,6.207532,-2.794300,-3.922213],[-9.062677,-9.764079,-2.095152,-0.291798,6.930145,9.184472,-7.146474,-2.028708,-6.953177,-3.907686,8.174802]],[[-1.920304,1.359790,2.922667,4.493784,7.046765,-4.538875,-6.062342,0.580130,1.158154,8.854631,-7.204175],[-9.451364,1.631529,8.271510,8.106498,4.806384,5.779483,4.656143,-7.732298,8.287555,1.788291,-0.718276],[-7.660631,-6.094303,-1.707283,9.794439,4.732310,0.834199,-3.539376,3.541756,8.032664,8.437785,8.301119],[8.719790,7.582474,-8.076646,-0.114942,-0.266118,-5.325711,-7.981054,-1.626247,1.105568,8.682015,-0.228671]],[[5.367755,5.960545,4.704474,7.449012,-8.931435,-7.644196,5.038663,-7.150214,4.939994,8.346416,8.162680],[-2.696211,9.132879,-8.220398,7.326158,-3.390061,-8.291386,9.653909,-7.091241,-7.961649,-8.743530,8.019299],[3.963374,3.272009,-3.519396,-8.583778,1.427079,-8.058554,-1.568912,0.395739,1.691091,-4.588486,-6.672823],[7.862880,2.866333,7.923115,4.830945,8.498477,-2.093389,7.208087,5.242941,-0.729172,7.599503,0.622407]],[[5.616318,2.446842,-4.350460,-0.158660,2.346084,-0.741076,-9.047246,-8.296302,-9.467843,-2.050891,8.433139],[6.647478,-4.932628,9.745282,-7.281145,6.848769,2.109067,4.061198,4.743560,-1.619530,0.032655,6.632614],[-8.116368,1.509975,8.449293,3.173767,-3.046631,-3.380193,4.517801,-4.743479,-4.996994,2.399608,-4.174353],[-1.237071,8.223009,-9.183905,9.384891,-3.298316,-8.633498,-1.933409,1.598626,-5.401394,-9.410320,-1.428753]],[[-4.835951,-4.259526,7.475162,-5.712647,-2.344600,1.530010,-0.671433,-6.417833,0.477779,5.803311,4.780403],[2.681213,-1.000787,-5.395914,-4.376771,-9.865072,9.945962,-0.817020,-3.198487,-8.359490,0.986548,-0.799262],[4.899345,2.117019,8.016529,-7.496988,-2.775540,-1.551882,5.582917,8.214246,2.044982,-5.148930,-6.244330],[7.112392,-3.714977,6.096266,4.800980,9.997509,3.494957,6.193381,3.857630,4.121371,-3.732897,-4.220293]],[[-3.239855,0.397515,7.935477,-2.446372,-7.593818,6.587474,7.854453,-2.219996,-8.777432,1.114775,-7.137591],[1.141138,7.742961,5.529435,-3.926718,8.418985,-3.726226,-3.375831,8.171260,3.357303,4.582874,-7.956227],[-8.504302,5.785738,-8.300015,-5.564665,-5.023288,-5.755549,-9.998484,5.746859,-0.744644,9.270333,7.534608],[-6.571552,-4.152304,2.343082,-5.449327,-4.619404,-3.104861,-9.372592,-9.960765,-3.715409,-7.328470,-6.890808]],[[-4.275676,9.849173,0.866595,4.991475,-5.991749,5.862875,-8.114440,-3.577850,-4.262205,0.813117,0.235343],[3.098743,-5.319717,-2.548080,-8.575331,3.110658,-9.168312,0.274174,9.469158,-0.132341,4.431640,-0.432575],[-8.748226,-2.892517,7.753346,-8.952022,2.466190,-2.122185,2.337106,-1.468948,-8.686391,-7.823311,-3.047328],[-0.392172,5.172297,-6.174731,-7.011072,-6.949396,9.080183,2.381064,-8.914139,5.752945,8.645138,7.622584]]], dtype = "float64")#candidate|1873|(16, 4, 11)|const|float64
bop_1874 = relay.bitwise_xor(call_1867.astype('int64'), relay.reshape(const_1873.astype('int64'), relay.shape_of(call_1867))) # shape=(16, 4, 11)
bop_1877 = relay.bitwise_xor(call_1868.astype('int64'), relay.reshape(const_1873.astype('int64'), relay.shape_of(call_1868))) # shape=(16, 4, 11)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_1884 = func_807_call()
call_1885 = func_807_call()
output = relay.Tuple([bop_1874,call_1884,])
output2 = relay.Tuple([bop_1877,call_1885,])
func_1890 = relay.Function([], output)
mod['func_1890'] = func_1890
mod = relay.transform.InferType()(mod)
output = func_1890()
func_1891 = relay.Function([], output)
mutated_mod['func_1891'] = func_1891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1895 = relay.TupleGetItem(func_1303_call(), 0)
call_1896 = relay.TupleGetItem(func_1305_call(), 0)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_1897 = relay.TupleGetItem(func_1792_call(), 1)
call_1898 = relay.TupleGetItem(func_1794_call(), 1)
output = relay.Tuple([call_1895,call_1897,])
output2 = relay.Tuple([call_1896,call_1898,])
func_1903 = relay.Function([], output)
mod['func_1903'] = func_1903
mod = relay.transform.InferType()(mod)
output = func_1903()
func_1904 = relay.Function([], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_1907 = relay.TupleGetItem(func_1792_call(), 0)
call_1908 = relay.TupleGetItem(func_1794_call(), 0)
output = call_1907
output2 = call_1908
func_1911 = relay.Function([], output)
mod['func_1911'] = func_1911
mod = relay.transform.InferType()(mod)
output = func_1911()
func_1912 = relay.Function([], output)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_1929 = relay.TupleGetItem(func_1235_call(), 0)
call_1930 = relay.TupleGetItem(func_1236_call(), 0)
func_1120_call = mod.get_global_var('func_1120')
func_1121_call = mutated_mod.get_global_var('func_1121')
call_1943 = relay.TupleGetItem(func_1120_call(), 1)
call_1944 = relay.TupleGetItem(func_1121_call(), 1)
uop_1949 = relay.exp(call_1943.astype('float32')) # shape=(16, 6, 12)
uop_1951 = relay.exp(call_1944.astype('float32')) # shape=(16, 6, 12)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1952 = relay.TupleGetItem(func_759_call(), 0)
call_1953 = relay.TupleGetItem(func_760_call(), 0)
bop_1955 = relay.bitwise_or(uop_1949.astype('int64'), relay.reshape(call_1943.astype('int64'), relay.shape_of(uop_1949))) # shape=(16, 6, 12)
bop_1958 = relay.bitwise_or(uop_1951.astype('int64'), relay.reshape(call_1944.astype('int64'), relay.shape_of(uop_1951))) # shape=(16, 6, 12)
uop_1959 = relay.log2(bop_1955.astype('float64')) # shape=(16, 6, 12)
uop_1961 = relay.log2(bop_1958.astype('float64')) # shape=(16, 6, 12)
output = relay.Tuple([call_1929,call_1952,uop_1959,])
output2 = relay.Tuple([call_1930,call_1953,uop_1961,])
func_1962 = relay.Function([], output)
mod['func_1962'] = func_1962
mod = relay.transform.InferType()(mod)
mutated_mod['func_1962'] = func_1962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1962_call = mutated_mod.get_global_var('func_1962')
call_1963 = func_1962_call()
output = call_1963
func_1964 = relay.Function([], output)
mutated_mod['func_1964'] = func_1964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_2026 = relay.TupleGetItem(func_759_call(), 1)
call_2027 = relay.TupleGetItem(func_760_call(), 1)
func_1750_call = mod.get_global_var('func_1750')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_2046 = relay.TupleGetItem(func_1750_call(), 4)
call_2047 = relay.TupleGetItem(func_1752_call(), 4)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_2054 = relay.TupleGetItem(func_1235_call(), 0)
call_2055 = relay.TupleGetItem(func_1236_call(), 0)
func_1962_call = mod.get_global_var('func_1962')
func_1964_call = mutated_mod.get_global_var('func_1964')
call_2066 = relay.TupleGetItem(func_1962_call(), 2)
call_2067 = relay.TupleGetItem(func_1964_call(), 2)
output = relay.Tuple([call_2026,call_2046,call_2054,call_2066,])
output2 = relay.Tuple([call_2027,call_2047,call_2055,call_2067,])
func_2079 = relay.Function([], output)
mod['func_2079'] = func_2079
mod = relay.transform.InferType()(mod)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2080 = func_2079_call()
output = call_2080
func_2081 = relay.Function([], output)
mutated_mod['func_2081'] = func_2081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_2106 = relay.TupleGetItem(func_1401_call(), 0)
call_2107 = relay.TupleGetItem(func_1403_call(), 0)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_2112 = func_591_call()
call_2113 = func_591_call()
output = relay.Tuple([call_2106,call_2112,])
output2 = relay.Tuple([call_2107,call_2113,])
func_2118 = relay.Function([], output)
mod['func_2118'] = func_2118
mod = relay.transform.InferType()(mod)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mutated_mod.get_global_var('func_2118')
call_2119 = func_2118_call()
output = call_2119
func_2120 = relay.Function([], output)
mutated_mod['func_2120'] = func_2120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_2123 = func_1471_call()
call_2124 = func_1471_call()
output = relay.Tuple([call_2123,])
output2 = relay.Tuple([call_2124,])
func_2126 = relay.Function([], output)
mod['func_2126'] = func_2126
mod = relay.transform.InferType()(mod)
mutated_mod['func_2126'] = func_2126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mutated_mod.get_global_var('func_2126')
call_2127 = func_2126_call()
output = call_2127
func_2128 = relay.Function([], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2230 = relay.TupleGetItem(func_2126_call(), 0)
call_2231 = relay.TupleGetItem(func_2128_call(), 0)
uop_2233 = relay.acos(call_2230.astype('float32')) # shape=(16, 4, 11)
uop_2235 = relay.acos(call_2231.astype('float32')) # shape=(16, 4, 11)
output = uop_2233
output2 = uop_2235
func_2247 = relay.Function([], output)
mod['func_2247'] = func_2247
mod = relay.transform.InferType()(mod)
mutated_mod['func_2247'] = func_2247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2247_call = mutated_mod.get_global_var('func_2247')
call_2248 = func_2247_call()
output = call_2248
func_2249 = relay.Function([], output)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_2282 = relay.TupleGetItem(func_889_call(), 0)
call_2283 = relay.TupleGetItem(func_891_call(), 0)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_2306 = relay.TupleGetItem(func_1303_call(), 0)
call_2307 = relay.TupleGetItem(func_1305_call(), 0)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_2311 = func_1471_call()
call_2312 = func_1471_call()
output = relay.Tuple([call_2282,call_2306,call_2311,])
output2 = relay.Tuple([call_2283,call_2307,call_2312,])
func_2318 = relay.Function([], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
mutated_mod['func_2318'] = func_2318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2319 = func_2318_call()
output = call_2319
func_2320 = relay.Function([], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2357 = relay.TupleGetItem(func_2118_call(), 0)
call_2358 = relay.TupleGetItem(func_2120_call(), 0)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_2367 = func_591_call()
call_2368 = func_591_call()
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_2404 = relay.TupleGetItem(func_1792_call(), 1)
call_2405 = relay.TupleGetItem(func_1794_call(), 1)
output = relay.Tuple([call_2357,call_2367,call_2404,])
output2 = relay.Tuple([call_2358,call_2368,call_2405,])
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2415 = func_2414_call()
output = call_2415
func_2416 = relay.Function([], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2427 = func_1911_call()
call_2428 = func_1911_call()
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
const_2431 = relay.const([True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True], dtype = "bool")#candidate|2431|(1152,)|const|bool
call_2430 = func_368_call(relay.reshape(const_2431.astype('bool'), [16, 6, 12]), relay.reshape(const_2431.astype('bool'), [16, 6, 12]), )
call_2432 = func_368_call(relay.reshape(const_2431.astype('bool'), [16, 6, 12]), relay.reshape(const_2431.astype('bool'), [16, 6, 12]), )
var_2441 = relay.var("var_2441", dtype = "bool", shape = (16, 6, 12))#candidate|2441|(16, 6, 12)|var|bool
bop_2442 = relay.subtract(call_2430.astype('int16'), relay.reshape(var_2441.astype('int16'), relay.shape_of(call_2430))) # shape=(16, 6, 12)
bop_2445 = relay.subtract(call_2432.astype('int16'), relay.reshape(var_2441.astype('int16'), relay.shape_of(call_2432))) # shape=(16, 6, 12)
uop_2446 = relay.sinh(bop_2442.astype('float32')) # shape=(16, 6, 12)
uop_2448 = relay.sinh(bop_2445.astype('float32')) # shape=(16, 6, 12)
func_1962_call = mod.get_global_var('func_1962')
func_1964_call = mutated_mod.get_global_var('func_1964')
call_2449 = relay.TupleGetItem(func_1962_call(), 2)
call_2450 = relay.TupleGetItem(func_1964_call(), 2)
func_822_call = mod.get_global_var('func_822')
func_823_call = mutated_mod.get_global_var('func_823')
call_2461 = relay.TupleGetItem(func_822_call(), 0)
call_2462 = relay.TupleGetItem(func_823_call(), 0)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_2463 = relay.TupleGetItem(func_1235_call(), 0)
call_2464 = relay.TupleGetItem(func_1236_call(), 0)
bop_2469 = relay.greater_equal(uop_2446.astype('bool'), relay.reshape(bop_2442.astype('bool'), relay.shape_of(uop_2446))) # shape=(16, 6, 12)
bop_2472 = relay.greater_equal(uop_2448.astype('bool'), relay.reshape(bop_2445.astype('bool'), relay.shape_of(uop_2448))) # shape=(16, 6, 12)
output = relay.Tuple([call_2427,const_2431,call_2449,call_2461,call_2463,bop_2469,])
output2 = relay.Tuple([call_2428,const_2431,call_2450,call_2462,call_2464,bop_2472,])
func_2477 = relay.Function([var_2441,], output)
mod['func_2477'] = func_2477
mod = relay.transform.InferType()(mod)
mutated_mod['func_2477'] = func_2477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2478 = relay.var("var_2478", dtype = "bool", shape = (16, 6, 12))#candidate|2478|(16, 6, 12)|var|bool
func_2477_call = mutated_mod.get_global_var('func_2477')
call_2479 = func_2477_call(var_2478)
output = call_2479
func_2480 = relay.Function([var_2478], output)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_2491 = relay.TupleGetItem(func_759_call(), 0)
call_2492 = relay.TupleGetItem(func_760_call(), 0)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_2500 = relay.TupleGetItem(func_1303_call(), 0)
call_2501 = relay.TupleGetItem(func_1305_call(), 0)
output = relay.Tuple([call_2491,call_2500,])
output2 = relay.Tuple([call_2492,call_2501,])
func_2526 = relay.Function([], output)
mod['func_2526'] = func_2526
mod = relay.transform.InferType()(mod)
output = func_2526()
func_2527 = relay.Function([], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2557 = relay.const([[[2.268462,-9.848053,6.650658,8.770277,-3.030178,-5.004141,7.629100,2.468614,7.549509,1.376074,-8.976990,-8.330928],[4.226050,-3.520918,-6.915788,-3.650027,2.791901,3.714033,0.185884,6.041724,-6.543877,-2.906661,8.320249,-4.265364],[3.115058,-1.971483,1.123597,-9.846120,1.897502,-6.150749,-8.339120,0.561374,-0.772563,-4.504739,8.520887,4.097473],[-0.545451,0.203102,4.850978,-9.085721,-5.734043,-9.934369,-9.639843,-5.515752,4.198732,6.020045,4.451494,9.329491]],[[0.504655,4.012102,9.746831,4.951790,-7.802246,-1.112167,-7.964285,-2.195816,6.493322,1.330604,0.041773,2.996864],[-9.559152,-3.558219,-2.677608,3.201488,-6.711424,-7.473035,0.193013,8.090481,7.052323,5.797151,-9.308604,-8.361988],[-1.823697,7.300144,1.942841,0.462292,4.982025,2.802415,7.997788,-6.014322,1.120486,-9.127293,-8.393369,9.724607],[6.763849,5.180074,-0.707678,4.758682,5.035237,1.298257,2.868106,3.289345,-2.289040,-1.210927,6.909599,2.259310]],[[-8.570783,-9.219339,0.095773,-0.875385,-2.044200,2.224604,0.885682,-3.663959,5.232158,0.219135,-5.150506,-3.767362],[2.949425,-1.601078,8.465608,6.936906,3.595981,-9.359731,6.167601,1.366231,-8.868779,2.945313,5.953468,6.271884],[8.158830,-0.999556,6.524035,-8.265910,8.007745,0.509155,8.982938,-5.355996,-7.272210,5.896089,6.087681,-5.791436],[3.939673,4.401617,7.146648,-2.973942,1.211473,-1.527171,6.220740,8.395118,8.771871,6.914876,-8.786331,-0.976632]],[[-5.183900,-8.624154,-8.252052,9.082752,-7.203352,9.542421,3.214972,-4.346268,-7.958165,3.084736,-6.035150,-6.275041],[-3.884340,-0.714975,-7.799114,0.412790,-4.925865,-3.970976,-4.771574,8.986999,9.412778,-1.346670,-5.176778,1.067376],[6.570053,-2.179512,-1.355571,-8.913406,-5.016114,9.359049,4.734732,5.896639,-9.863313,-6.205303,4.783718,-3.291551],[-2.992988,-4.073276,7.321337,0.120335,-9.644952,-9.669944,6.273377,8.713525,3.619856,-3.308131,-3.953689,6.533898]],[[4.958637,8.921066,5.201122,8.161893,8.040622,-4.157570,-8.114032,9.169824,4.969755,7.179703,-1.928438,-9.853715],[2.046427,-9.593873,-2.684908,-3.186448,-5.335468,-7.661300,0.307534,3.579021,1.144597,-8.177364,-4.158328,2.253675],[4.612072,-9.176711,2.621427,-6.512236,2.643080,-0.418070,-3.943814,4.983119,5.703228,-3.104630,-4.057609,6.926679],[6.921119,9.262938,2.444677,3.170669,0.558343,6.020438,-8.162504,2.704501,-8.216265,5.003902,-1.456819,4.150756]],[[-3.943226,4.335145,-1.707243,4.726535,-1.322011,3.955521,9.520749,-6.782714,-0.651264,0.100490,3.046890,-5.490214],[8.383380,-3.229691,-0.298382,9.397329,1.317361,3.128983,4.053191,7.330329,1.301436,9.359535,5.775649,9.120140],[8.463989,-8.382412,9.786699,5.938497,-0.027836,0.187942,7.335181,-0.395062,6.094585,-8.275373,-0.447498,-6.622067],[-8.808348,-1.545052,7.987205,0.499625,-9.573120,-6.262145,-1.212499,-2.425304,8.417276,-2.789625,-9.354575,-4.639719]],[[-2.023838,-3.052145,-4.486253,2.890843,2.223812,1.183867,7.489175,6.977305,-4.296922,-1.193300,5.494351,-2.141112],[-8.100091,-1.505346,8.436743,-2.342458,5.475709,-2.427995,9.981975,3.768304,1.495251,2.899898,7.367397,-9.235215],[-3.880995,1.792762,-5.232490,5.068618,-4.074606,9.495952,-3.220664,3.929026,2.621280,1.726238,4.262830,1.353600],[8.673865,-7.228741,3.668419,1.972506,1.715998,-7.324862,-3.777290,-9.696397,5.655868,-1.403488,0.993245,9.367270]],[[6.646143,7.502752,7.658792,4.168352,6.285799,-2.949821,-3.792038,8.935338,-7.268901,8.487145,9.504473,3.549573],[-1.447984,-6.264552,4.550472,-7.800611,-2.221789,-0.015073,-4.485648,6.048065,7.922739,-2.443787,2.994289,3.303550],[3.614968,-2.418097,-1.528819,5.662204,4.652258,-2.310621,-3.136198,5.091644,-4.373365,-5.264189,8.062805,-0.293500],[9.388163,-4.537657,-2.392656,-1.699367,4.212233,-9.084083,-5.811319,-4.138114,8.026626,7.291565,6.469508,5.865320]],[[-0.235490,-1.909171,5.244894,-9.205551,2.580283,2.217774,-7.537713,-4.777915,-8.136004,3.575761,-1.236078,-4.094839],[-6.632926,4.819675,-2.055455,0.289599,3.073404,-7.410676,-3.840293,0.470780,3.909674,-8.153912,6.603946,0.493412],[0.696622,-5.233341,-6.679793,-7.486374,-7.810409,-9.643126,-2.695574,4.059479,6.777971,-9.833325,-8.283042,-4.288250],[-7.661453,8.294804,5.400258,0.228174,5.971922,-4.954484,-6.202492,-9.192405,5.195348,5.752738,-5.106881,6.961497]],[[-0.332838,-0.488274,3.729908,-9.432959,8.266107,3.172649,1.654476,0.340161,5.924417,-7.306651,-1.838310,-6.409705],[-7.729919,2.038281,9.307212,-0.071883,-7.216681,-3.107524,0.179631,7.074564,7.226672,0.126799,6.630498,3.869498],[0.983991,-3.569785,4.347824,0.717277,-9.318223,-8.812995,9.205688,3.307691,9.667287,8.145993,1.073661,3.747885],[-5.555674,1.054202,-7.946937,-9.283208,-2.723175,4.428536,3.298907,2.599446,-2.357870,4.808430,6.170904,3.354714]],[[2.065558,4.316487,-1.779153,1.187824,-0.801417,-3.416717,9.860701,-4.831336,-9.125982,1.024198,-9.545522,8.422818],[7.221333,-9.567578,-1.166486,1.453511,-7.970286,-5.431704,-4.246760,6.389488,-9.043471,1.081781,-7.717250,7.860129],[4.339589,7.640478,-1.546264,-4.973068,1.309005,-3.711379,9.656454,2.830457,-6.897304,-2.251551,5.946639,4.751484],[0.794452,-1.796166,-3.906496,-6.682134,-7.647441,1.035099,4.739469,-1.262518,-6.850998,-7.062169,4.363488,-1.755684]],[[3.545005,-3.634675,-0.676346,-9.278461,-6.942047,-3.595778,-1.556543,-2.958638,-2.025195,1.861958,-5.657010,-3.672498],[-6.217960,-0.470850,7.792961,-5.489666,8.243170,9.363569,-7.684344,8.325491,-5.618555,-1.227345,7.349040,-3.220648],[-4.404324,2.714875,6.941334,-8.082503,-8.255609,8.703420,9.039913,-2.984917,-9.234159,-6.122857,7.757679,0.787264],[6.231693,-1.593963,5.080669,-2.500954,5.704835,-2.750756,-7.934034,-7.941312,8.927761,-0.801171,1.222832,5.592281]],[[-8.338859,7.395338,9.655574,-7.289236,-2.884654,3.448282,2.772128,2.994947,5.753283,0.456741,-2.776407,-0.142495],[-5.560636,-2.329649,7.234459,4.816391,-7.022185,8.834938,-0.487870,-8.510240,9.511626,-2.771155,-6.130927,2.037865],[1.967497,4.901444,-9.218143,8.649678,-7.650222,8.800860,2.236994,0.596565,2.335391,2.052977,-7.368205,-1.678837],[-6.272449,-8.016662,-6.981094,-9.012378,7.160768,-3.302913,-7.831389,-3.099804,2.958674,-5.616244,-6.436536,-6.564882]],[[6.038941,4.605497,-7.548095,9.890509,-3.192175,4.439893,5.338832,-2.919530,0.543967,-9.783655,-4.609554,-1.506245],[-4.440398,-8.688283,-0.298884,-6.359418,0.396713,-8.065906,6.699757,-2.654357,6.792248,3.856881,7.674116,3.392850],[-4.509680,-4.737883,-8.631868,-3.780583,-1.635045,-7.953767,-0.717877,-5.626085,-8.615252,3.570657,-1.679992,-3.749050],[3.975018,-4.441980,7.982460,6.767669,0.882741,1.459860,-5.793439,3.321748,-9.026935,6.691678,-2.544380,-2.828239]],[[-9.286718,3.860114,6.819015,2.933065,4.972711,-3.216913,3.463836,-1.600242,0.668033,0.268020,0.627631,-7.988879],[-3.218164,-7.790159,6.026184,2.965732,-1.132169,-8.962733,-0.037624,-9.483819,9.998967,6.111173,-6.181401,-2.973771],[2.298633,1.202819,-7.107751,-6.786565,-9.121545,9.613092,-1.171389,2.854088,4.543972,-5.730257,6.698546,4.844448],[8.769436,-4.160952,-9.626623,-5.866248,-9.874307,7.745379,4.562859,9.569567,-9.595326,-1.351231,2.863917,-6.702405]],[[1.981774,4.979960,1.880307,-2.550406,8.482613,8.693264,1.502344,8.826765,6.792413,-1.577938,-4.105158,-3.757315],[-3.106202,5.951850,4.516167,2.926182,2.469061,9.452438,3.662730,2.647504,-0.922782,3.388967,-0.089290,1.421308],[0.430185,3.795313,9.012718,-9.790120,-0.771862,-9.215028,3.042052,-3.529450,-4.819575,-2.710460,0.869206,-1.041455],[-4.863680,2.599542,-0.340000,-0.613739,-0.875116,3.557409,-8.828457,-2.066374,-2.018276,-0.806955,-5.023322,-7.425600]]], dtype = "float64")#candidate|2557|(16, 4, 12)|const|float64
var_2558 = relay.var("var_2558", dtype = "float64", shape = (16, 4, 12))#candidate|2558|(16, 4, 12)|var|float64
bop_2559 = relay.floor_divide(const_2557.astype('float64'), relay.reshape(var_2558.astype('float64'), relay.shape_of(const_2557))) # shape=(16, 4, 12)
bop_2564 = relay.minimum(const_2557.astype('uint32'), relay.reshape(bop_2559.astype('uint32'), relay.shape_of(const_2557))) # shape=(16, 4, 12)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
var_2570 = relay.var("var_2570", dtype = "bool", shape = (1152,))#candidate|2570|(1152,)|var|bool
call_2569 = relay.TupleGetItem(func_951_call(relay.reshape(var_2570.astype('bool'), [1152,])), 6)
call_2571 = relay.TupleGetItem(func_953_call(relay.reshape(var_2570.astype('bool'), [1152,])), 6)
output = relay.Tuple([bop_2564,call_2569,var_2570,])
output2 = relay.Tuple([bop_2564,call_2571,var_2570,])
func_2587 = relay.Function([var_2558,var_2570,], output)
mod['func_2587'] = func_2587
mod = relay.transform.InferType()(mod)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2587_call = mutated_mod.get_global_var('func_2587')
var_2589 = relay.var("var_2589", dtype = "float64", shape = (16, 4, 12))#candidate|2589|(16, 4, 12)|var|float64
var_2590 = relay.var("var_2590", dtype = "bool", shape = (1152,))#candidate|2590|(1152,)|var|bool
call_2588 = func_2587_call(var_2589,var_2590,)
output = call_2588
func_2591 = relay.Function([var_2589,var_2590,], output)
mutated_mod['func_2591'] = func_2591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2600 = relay.var("var_2600", dtype = "float64", shape = (4, 13, 14))#candidate|2600|(4, 13, 14)|var|float64
uop_2601 = relay.sinh(var_2600.astype('float64')) # shape=(4, 13, 14)
uop_2614 = relay.erf(uop_2601.astype('float32')) # shape=(4, 13, 14)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
const_2617 = relay.const([[-7.288097,7.718648,-2.432880,-7.716641,3.320554,-8.140899,-9.381537,5.948679,-9.648912,8.316656,-0.625185,-4.974333,-5.700249,0.496132,8.920831,-2.770475,9.029893,6.845481,-8.750098,-5.197215,-6.175934,4.505511,4.118958,-5.617493,-0.577999,9.622892,0.234762,-5.261915,6.990926,2.139582,-3.677555,-6.625181,7.947481,4.747051,-0.521317,2.223683,-8.430819,5.491455,-2.356682,-9.670214,7.347356,7.276991,6.572881,-7.786118,9.356006,8.946044,8.155015,-8.785810,4.967417,-8.623048,1.906105,-9.994945,5.637242,7.785356,-7.408676,-8.990518,9.215651,-7.508075,5.052838,9.109831,-1.359922,-3.420973,2.791784,9.502550,9.921646,-9.809045,8.461747,-2.671489,-4.419756,-7.839704,5.187072,-8.091132,9.375169,0.886327,9.806825,4.548014,9.796839,6.243434,-9.488284,-0.890780,-2.346264,-7.894684,2.379157,-9.417046,-7.048543,-6.225897,9.494466,-4.712920,-1.552621,-3.032388,7.995754,6.299162,1.201521,8.787458,2.053981,0.149192,-1.118117,-7.467223,6.812596,6.822672,5.251540,9.853774,-3.541218,3.273158,-7.291910,-6.994403,-7.763630,-3.697421,-1.870347,9.515270,1.488412,7.120643,4.513453,-7.977095,7.912316,-9.208555,0.995831,7.405010,-7.468425,-7.745717,-0.802937,-3.416189,6.796605,8.170523,-8.157540,7.215579,5.413260,2.581207,-2.285131,3.176141,8.139057,0.003079,-4.378661,-2.888714,8.913690,3.470724,6.349675,-9.027927,-4.972896,-4.634872,5.225450,2.358662,-2.100849,8.736885,-1.301942,-0.936414,-9.875755,-9.926030,4.344769,0.235776,-3.011471,-0.864271,-2.633374,-2.513357,-5.175359,0.878524,-2.143032,3.730891,7.252511,-0.561051,9.122368,7.925780,-3.737166,-9.528793,-6.510329,-7.004466,-7.015379,-4.433913,-6.384887,-0.453875,1.870762,-0.147665,-0.237971,0.042859,-4.730156,9.932339,-4.004282,1.551739,-9.805216,-9.762187,-7.765875,4.225939,-3.164670,9.374642,-3.839998,5.287279,-5.301562,-5.581765,9.865268,-2.578403,1.999663,-8.239492,9.833697,-2.193185,9.837651,-1.765854,1.875262,7.821318,-1.453131,-2.175158,-4.691905,-9.636137,7.784338,0.416407,-4.070924,-0.126201,7.233369,-9.617295,1.594201,-8.413293,4.217889,-2.078447,3.835583,-3.318588,-7.098920,-8.716097,8.062441,5.761355,7.898880,0.733922,6.262523,3.344349,-4.332578,3.946437,-4.265130,0.036531,-6.042258,2.242461,5.612978,0.704206,-4.509878,-6.372557,4.408014,0.746721,-1.840417,-1.854006,-2.381632,-4.480930,5.101239,-1.493597,5.760820,-0.556459,5.361927,1.324155,0.598396,8.428872,7.253384,5.623035,7.924636,5.219893,-4.265957,8.275467,-9.114938,9.420286,8.838979,6.144391,0.715166,8.893428,6.393675,8.071979,0.313658,8.160663,-3.376636,4.705865,0.642164,5.826600,8.019252,-1.220568,-0.106565,5.938868,-8.705381,4.684612,-8.144162,-4.533803,3.353640,0.024768,-5.397511,2.747574,4.636382,0.935726,-9.201918,-0.724295,1.804610,5.935669,0.068109,-3.992602,3.300398,5.363513,-1.822864,-8.873672,-1.654138,-8.228437,-5.410981,9.533708,0.669299,-9.552975,-9.488525,2.594402,9.337993,8.459299,6.990518,-7.168614,3.606338,3.455180,-2.004725,-5.585255,7.532116,1.922271,-5.682360,1.793502,4.859818,0.570571,1.011423,-4.985980,8.801939,4.442952,2.762753,-3.660698,0.155399,-3.020556,0.750482,-5.275425,5.544414,-6.469676,1.284184,4.456655,8.242856,-0.804923,9.847021,0.462788,-7.022589,-1.030279,4.077192,2.976408,-6.007197,-3.056387,-6.104135,-8.789771,-9.259568,8.104000,-8.247513,4.931649,-1.194859,-0.271542,-0.227697,-8.657615,-1.166900,-2.480931,8.615599,3.634377,4.302546,1.354766,-6.843273,6.288838,-0.193744,-6.469899,-5.868181,-0.203084,7.716531,-7.677197,5.054454,2.902950,2.250244,4.159384,0.801513,-0.113894,-8.943752,-7.974567,5.237197,6.396540,-1.276589,6.573630,2.376675,9.075333,-3.999641,-8.030775,4.957934,-4.916733,8.082530,0.121423,-6.952228,4.977180,-7.269503,2.503575,-7.404146,3.429653,2.011282,7.919018,5.657196,8.998706,-0.164723,5.410464,0.285774,2.060414,1.994174,7.073585,-6.436443,-4.044932,-8.264980,9.977200,-2.102941,-7.742345,6.353492,3.901831,-6.197857,-4.374484,-9.661766,-4.982176,2.591021,0.524911,4.502306,-1.922730,4.346392,-2.000393,5.008084,-4.238064,-2.166335,9.004922,-6.779552,-6.384170,5.185251,-7.735547,-1.304619,-1.453565,-2.000614,-5.030371,-5.509305,5.986058,6.584597,-1.095674,1.060677,7.587158,6.008318,0.852010,0.705843,-2.215296,8.597664,-2.233831,-4.428947,3.658839,-9.842171,-0.822620,0.844102,2.677183,1.453042,9.619660,-5.348493,-6.147604,4.956885,-6.889128,-1.621064,6.818763,8.867477,8.453482,-8.220504,-9.486846,0.436899,-4.504596,-5.963833,1.125723,8.597537,9.913370,3.588891,8.840433,6.500350,9.141460,-7.329294,6.397723,3.829720,5.327941,-5.947870,-3.700136,-7.097458,-8.045687,-9.445450,-4.453747,-3.804723,-5.847459,-7.562921,-2.674018,0.295522,7.135004,-6.179105,7.084922,4.326605,-4.203055,-5.804005,5.912682,1.981070,9.460029,-8.935268,1.221084,8.854359,-2.290080,9.113855,-3.600246,2.617483,-9.425283,-1.570729,0.144995,5.682135,3.008804,-7.675967,-5.239544,-4.364204,-4.540976,-4.897900,8.787915,4.238733,5.447154,-0.323251,5.400062,9.006102,-0.333477,1.458940,9.159125,3.116355,-9.953954,-1.086365,5.661677,-5.973257,8.311053,4.412894,0.815407,-0.518354,6.326560,-7.768354,-8.352914,-8.843704,0.318144,-7.504102,-7.021746,-8.287217,-5.799495,-5.046091,1.886484,5.580860,6.731679,-9.828285,5.366722,3.251569,3.600316,3.561295,9.857930,-0.926798,7.944356,4.434832,-2.634232,-9.133307,-6.409886,-9.417585,5.508333,-8.943524,-2.854351,3.583498,-1.512084,-4.424461,-4.474198,3.664977,-1.093811,7.602212,3.463735,9.231337,-0.759093,-4.323428,-8.183021,-3.531152,-6.990776,-3.573323,7.193548,-4.402338,-4.806757,-9.372672,-2.606061,-8.440857,4.612319,-0.953647,6.177679,6.897337,1.606751,-3.602384,-4.503519,7.185361,-8.977297,-9.637871,-3.910786,2.671277,0.757495,7.208378,3.554078,-5.035218,9.028618,7.491982,7.306152,-5.399325,-7.502302,-8.606555,-9.913937,1.151282,-1.906046,-0.938422,-9.688762,4.295550,6.296358,6.440093,4.556575,-9.099336,-1.411835,0.412405,-3.911522,-9.905613,-0.089457,8.540932,8.926496,5.931687,-8.753802,-9.316241,7.900892,1.522389,-6.868105,-9.703676,-6.516377,6.945309,-2.277610,-9.037118,-4.761020,-8.587150,-0.663310,3.378386,-1.625997,6.743248,5.348200,-5.457857,1.487213,8.953487,-7.780517,4.422954,-9.596175,-1.190884,1.630533,1.877497,9.185821,0.568121,-5.427911,0.903343,5.572309,2.168659,-3.916091,-1.059236,5.037011,-2.431084,6.785123,4.482167,-9.927679,-9.345291,-0.709183,1.835747,0.321956,8.782111,-1.666430,1.880883,2.111515,-7.168909,-4.624754,-4.012486,-0.135278,1.069453,-9.048947,-5.504021,-8.276985,9.254264,-6.903841,2.825684,7.959776,1.670836,3.199104,4.132925,-0.885725,5.332268,-1.998227,-0.173707,-1.879751,-1.935135,-1.913514,4.038757,-2.850650,-5.930970,4.582398,-7.376355,-8.608096,-4.323112,-7.980842,6.737806,6.177749,9.226679,-0.114978,4.229839,-1.241079,8.718099,-5.971787,5.177588,8.985859,9.859854,9.887016,0.399474,-8.902907,-2.417045,-2.514867,9.498426,-2.292994,2.927031,-7.131572,3.958597,2.021584,-5.646389,2.200949,-9.677594,1.306158,9.613217,7.348106,-8.046547,6.922780,3.578808,-2.026539,7.489865,5.051957,2.377130,7.750116,-3.369741,-6.425638,-8.927257,0.592553,-8.139097,1.125180,5.722513,6.078672,-3.780698,-6.812707,-8.669311,-6.878968,1.962276,-8.624707,8.098014,0.444770,-7.628544,-0.869977,8.443934,6.246142,-7.260722,-7.878993,-7.085952,-3.178578,-4.119336,-7.308455,6.333112,-6.816516,-7.623791,-0.620729,8.737911,-9.430079,0.947533,-2.342672,-7.672731,-2.985931,-8.450215,-0.898668,-4.484165,1.048926,-9.123775,9.521650,-8.603330,-8.286917,9.101498,5.114034,8.693928,-1.858045,-3.901682,1.577483,4.549031,-7.932648,-9.912809,-0.198687,8.598072,1.749975,6.929449,6.058188,4.242103,-7.157416,-1.754090,3.766434,6.752826,-6.204681,-8.931904,-5.014447,-4.496817,-1.278825,-1.857347,8.563193,-0.775138,4.381417,-7.947106,-1.344263,-3.065750,-0.853199,-2.170022,-8.448556,5.347345,6.817283,3.090473,1.277659,-8.911354,-2.877821,-0.630654,-5.342608,5.579063,-7.315219,2.525665,1.650926,-2.449268,-1.456479,3.623402,-4.069297,-9.476199,-4.276171,-2.603823,6.370068,1.673962,2.537489,1.236005,7.630121,9.924267,-1.453040,-8.759952,-5.831177,2.638789,8.084964,-2.134345,-3.838814,9.834202,-5.077140,-5.747378,0.451385,2.232624,-6.002194,-3.964331,0.934931,3.235693,-8.022272,6.034733,-7.858151,-7.385291,2.424433,-1.648619,8.416398,5.594173,4.240638,1.240256,4.969348,2.547583,5.372051,1.704867,0.752885,3.905735,-7.672641,-3.720979,7.952970,-2.487733,9.667547,-0.112575,3.319004,-2.489700,-5.051480,2.921802,6.122069,8.515566,-7.435453,4.024340,2.539413,-4.899232,-8.296985,8.216440,6.691297,-3.769833,-4.223388,6.332509,-9.994091,-0.645725,2.537493,0.038187,-2.341888,6.724792,1.108453,-1.511451,6.880284,9.055938,6.987490,-6.168029,-5.658095,-0.105710,5.338047,-1.246404,5.088094,-1.826179,-0.203195,1.550227,-6.707678,-6.836307,-4.790618,3.453072,3.483697]], dtype = "float32")#candidate|2617|(1, 910)|const|float32
const_2618 = relay.const([True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True], dtype = "bool")#candidate|2618|(1152,)|const|bool
call_2616 = relay.TupleGetItem(func_433_call(relay.reshape(const_2617.astype('float32'), [7, 10, 13]), relay.reshape(const_2617.astype('float32'), [7, 10, 13]), relay.reshape(const_2618.astype('bool'), [96, 12]), ), 0)
call_2619 = relay.TupleGetItem(func_437_call(relay.reshape(const_2617.astype('float32'), [7, 10, 13]), relay.reshape(const_2617.astype('float32'), [7, 10, 13]), relay.reshape(const_2618.astype('bool'), [96, 12]), ), 0)
output = relay.Tuple([uop_2614,call_2616,const_2617,const_2618,])
output2 = relay.Tuple([uop_2614,call_2619,const_2617,const_2618,])
func_2621 = relay.Function([var_2600,], output)
mod['func_2621'] = func_2621
mod = relay.transform.InferType()(mod)
mutated_mod['func_2621'] = func_2621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2622 = relay.var("var_2622", dtype = "float64", shape = (4, 13, 14))#candidate|2622|(4, 13, 14)|var|float64
func_2621_call = mutated_mod.get_global_var('func_2621')
call_2623 = func_2621_call(var_2622)
output = call_2623
func_2624 = relay.Function([var_2622], output)
mutated_mod['func_2624'] = func_2624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2675 = relay.TupleGetItem(func_2126_call(), 0)
call_2676 = relay.TupleGetItem(func_2128_call(), 0)
output = call_2675
output2 = call_2676
func_2677 = relay.Function([], output)
mod['func_2677'] = func_2677
mod = relay.transform.InferType()(mod)
output = func_2677()
func_2678 = relay.Function([], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_2689 = relay.TupleGetItem(func_2318_call(), 0)
call_2690 = relay.TupleGetItem(func_2320_call(), 0)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
call_2697 = relay.TupleGetItem(func_1441_call(), 0)
call_2698 = relay.TupleGetItem(func_1443_call(), 0)
output = relay.Tuple([call_2689,call_2697,])
output2 = relay.Tuple([call_2690,call_2698,])
func_2709 = relay.Function([], output)
mod['func_2709'] = func_2709
mod = relay.transform.InferType()(mod)
output = func_2709()
func_2710 = relay.Function([], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2247_call = mod.get_global_var('func_2247')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2721 = func_2247_call()
call_2722 = func_2247_call()
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_2723 = relay.TupleGetItem(func_759_call(), 0)
call_2724 = relay.TupleGetItem(func_760_call(), 0)
func_1120_call = mod.get_global_var('func_1120')
func_1121_call = mutated_mod.get_global_var('func_1121')
call_2733 = relay.TupleGetItem(func_1120_call(), 3)
call_2734 = relay.TupleGetItem(func_1121_call(), 3)
func_665_call = mod.get_global_var('func_665')
func_670_call = mutated_mod.get_global_var('func_670')
const_2736 = relay.const([4.851245,-1.700936,4.926316,8.258475,0.144968,9.364803,4.395567,-1.034066,-2.675117,6.929268,4.391337,-2.030156,3.284042,3.791094,-5.143146,7.105933,5.518071,-6.090658,-4.776202,-4.881244,2.696805,0.742256,-6.782007,-5.392882,3.270265,8.623458,-0.491811,-6.770915,5.932845,-2.059902,-9.103975,-1.649288,9.627814,-0.821007,-9.653237,0.480330,-9.484645,-9.515916,1.804308,3.863185,-2.043876,7.787175,-4.858072,-7.913656,5.458867,9.524364,-1.553790,1.782375,5.274129,5.499347], dtype = "float32")#candidate|2736|(50,)|const|float32
call_2735 = relay.TupleGetItem(func_665_call(relay.reshape(call_2721.astype('float64'), [16, 4, 11]), relay.reshape(call_2721.astype('float32'), [16, 4, 11]), relay.reshape(const_2736.astype('float32'), [5, 10]), ), 2)
call_2737 = relay.TupleGetItem(func_670_call(relay.reshape(call_2721.astype('float64'), [16, 4, 11]), relay.reshape(call_2721.astype('float32'), [16, 4, 11]), relay.reshape(const_2736.astype('float32'), [5, 10]), ), 2)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_2739 = relay.TupleGetItem(func_889_call(), 0)
call_2740 = relay.TupleGetItem(func_891_call(), 0)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2759 = relay.TupleGetItem(func_2126_call(), 0)
call_2760 = relay.TupleGetItem(func_2128_call(), 0)
uop_2768 = relay.sinh(call_2735.astype('float64')) # shape=(5, 10)
uop_2770 = relay.sinh(call_2737.astype('float64')) # shape=(5, 10)
output = relay.Tuple([call_2721,call_2723,call_2733,const_2736,call_2739,call_2759,uop_2768,])
output2 = relay.Tuple([call_2722,call_2724,call_2734,const_2736,call_2740,call_2760,uop_2770,])
func_2795 = relay.Function([], output)
mod['func_2795'] = func_2795
mod = relay.transform.InferType()(mod)
output = func_2795()
func_2796 = relay.Function([], output)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2905 = relay.var("var_2905", dtype = "float64", shape = (7, 9, 4))#candidate|2905|(7, 9, 4)|var|float64
uop_2906 = relay.exp(var_2905.astype('float64')) # shape=(7, 9, 4)
output = uop_2906
output2 = uop_2906
func_2908 = relay.Function([var_2905,], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
var_2909 = relay.var("var_2909", dtype = "float64", shape = (7, 9, 4))#candidate|2909|(7, 9, 4)|var|float64
output = func_2908(var_2909)
func_2910 = relay.Function([var_2909], output)
mutated_mod['func_2910'] = func_2910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1120_call = mod.get_global_var('func_1120')
func_1121_call = mutated_mod.get_global_var('func_1121')
call_2966 = relay.TupleGetItem(func_1120_call(), 3)
call_2967 = relay.TupleGetItem(func_1121_call(), 3)
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
const_2980 = relay.const([2.280642,-8.326898,8.594551,7.035556,-2.943812,-4.315658,-9.554073,-0.873030,5.119677,-8.024135,7.115884,-4.029438,0.179033,-0.617125,3.640050,7.546126,-6.067402,1.749106,7.184358,-0.406772,-2.206624,-4.622218,2.273893,3.845155,-2.537390,1.973389,4.183361,-2.669945,-8.793838,3.400892,-1.522295,-4.880537,6.565200,-2.797766,5.277927,-6.806541,3.230270,-7.797286,-0.310679,9.945102,9.007755,-5.246196,2.115267,7.393825,3.091189,3.784283,3.652293,-1.335872,7.064607,4.557249,5.937038,-4.262676,1.150121,-7.839390,8.254759,-4.641520,-1.506220,5.855425,-4.253583,9.003344,0.579322,8.745292,7.923271,9.729882,0.253913,9.260803,9.135816,8.211412,-5.145494,-9.491481,-6.729354,-8.594411,0.621485,-3.637419,-1.168868,8.470916,-7.077213,8.399527,-7.650349,4.917253,0.234901,5.083402,-2.373565,5.214874,-8.039117,-0.449746,8.805147,7.297141,-4.987325,-5.772387,7.332546,8.023354,-3.595857,6.686433,7.322659,-7.441228,9.257105,3.444213,6.876683,-8.293777,-8.078757,-7.304549,5.430213,-4.871364,6.911146,6.981874,-3.148820,-7.364897,8.797818,-6.503529,-0.259790,1.033000,-3.011732,-3.927418,-9.172647,2.215530,8.799420,-3.055679,3.854599,0.519672,4.651470,8.064239,5.309841,-2.406686,-2.876699,3.813290,-0.336204,-3.674994,-1.461353,-1.231527,-4.026338,0.347503,2.381720,-0.343011,0.852782,2.344185,-9.252342,-8.107627,-8.042287,-8.981561,4.913805,-3.498876,3.147115,-7.043972,1.958872,-3.277410,-3.347935,3.384976,2.650089,-7.688715,2.053588,7.797996,5.649121,4.343216,-5.842440,-4.662627,-0.932065,1.584051,1.912754,9.565572,-2.031587,-4.201902,8.014541,-9.375327,-6.483829,9.792849,-1.527961,1.526427,7.722055,-8.063770,4.692503,3.440392,7.694864,8.199805,1.064102,3.068669,-0.178554,-0.966730,1.564070,-4.075197,-5.314961,-0.266870,-8.808164,-4.924766,-4.119121,9.394398,7.567175,9.776555,-5.611098,2.380295,9.893918,5.604697,8.387605,-9.153138,7.947590,-3.727814,-0.580410,-0.651987,-7.970489,-6.068428,9.330209,-5.061750,5.155992,8.392578,-9.256543,8.678338,4.973353,9.018774,-7.214302,-4.889354,-1.145573,7.584514,4.262791,7.820709,-5.200941,-6.152288,-5.333061,-9.209296,9.287001,3.447819,4.998316,3.575915,7.147888,9.212649,-3.127312,1.710004,-2.383595,-8.606513,4.466180,7.374550,4.892124,9.352288,1.950976,5.260893,-9.205521,-9.372442,0.683285,-7.522406,0.507410,0.139557,4.549162,-5.786394,8.339402,2.131218,8.852202,4.829044,0.119126,-2.017798,-8.283671,0.679113,-4.701911,-2.834277,8.773004,-0.580155,-4.559377,2.629783,7.567239,5.803828,-5.418142,0.289247,-4.284552,-9.621912,6.731865,-2.738172,7.619891,-0.268432,8.914008,2.465731,-5.182979,1.845729,1.172549,-2.182658,9.556025,-4.527154,6.146399,8.196043,-1.189088,3.004718,-5.856997,6.014714,8.663694,1.130175,4.271972,3.828858,-6.361656,-1.156157,2.682345,-9.831575,6.547642,-3.605612,-5.645015,-2.947022,-2.907309,0.684856,1.750061,-6.891358,-3.582056,2.081880,-8.658111,4.892398,-1.378629,6.161234,1.135601,-1.427457,-4.567308,2.548871,-8.594074,0.363142,9.737896,8.649849,7.935161,8.720410,5.780949,9.040622,1.948051,-0.318461,2.289897,-0.251159,-5.409669,8.638669,6.087162,1.045797,-4.033074,-8.424523,9.459344,-5.934683,6.694982,5.305966,-0.257647,3.009554,2.682055,4.728034,6.948025,9.976067,-1.974361,-5.213263,8.160834,6.624905,-2.126534,9.978659,3.306262,-0.215068,7.673168,7.520319,8.121940,-4.141970,7.187824,7.467241,9.768857,-7.520560,5.068458,5.824303,-8.674123,-8.842234,7.540965,7.975224,1.951100,4.942436,8.338709,-5.010776,4.461333,8.536187,8.948057,5.089748,-7.104555,-7.920843,-2.940272,-7.647278,4.650419,2.637170,2.728463,8.923309,5.785439,8.107637,-7.808394,1.862029,-4.520159,-6.361754,1.743749,-3.413955,9.088543,1.226227,6.453004,-2.106344,-4.825186,5.249655,-9.126301,-7.841861,5.816329,-7.868934,9.691477,-6.895704,0.357665,7.701014,-7.841012,-3.474275,3.176532,-3.500042,3.485484,0.461804,-0.750183,5.436630,3.971516,-4.356139,-6.214015,-7.142988,-7.922035,0.672155,7.547262,-8.613503,7.358847,5.423770,-1.898410,0.677176,1.823618,9.995079,7.100036,-9.557887,-6.940690,7.458651,-3.980695,1.475151,-1.717633,-0.169669,8.295510,-4.374341,7.304548,4.318619,7.696528,0.544830,5.034055,-9.049968,-8.890386,-6.712250,-1.743649,0.042562,4.786800,1.337734,6.968030,-4.246287,8.545714,7.923319,-0.477896,-6.450172,0.994640,-5.169421,6.315588,1.665382,-0.746026,-1.294223,-0.001337,4.229065,-1.360253,8.120780,-9.622466,1.901684,-4.012931,-8.732689,5.525789,-8.496015,-2.141130,-8.876253,-1.115104,4.009557,8.896609,0.554178,6.452257,1.280170,9.984288,-3.244776,-1.726418,2.802275,-2.705996,-6.220598,6.363818,7.422281,9.822945,7.117948,0.446277,-9.700314,-5.290840,-5.907519,-1.237790,-8.490482,9.196999,2.743009,-6.223740,-9.172231,-7.656555,-8.306426,-0.502732,-7.455185,8.330069,1.976057,-0.694311,6.692656,1.076497,9.359916,-5.833510,4.645213,-4.361504,7.490079,-9.427417,8.302810,-4.482024,-9.391431,8.272704,3.642198,-6.210010,-8.832529,-1.820721,9.442606,3.688211,-4.010805,-4.422538,5.119765,-1.170652,1.632504,9.550848,-9.767415,2.451763,-4.304008,6.982233,4.907642,-3.179485,-7.338817,-5.419033,-7.204569,-3.032569,8.925374,-3.815380,8.058123,0.714837,5.417327,-0.499128,9.730920,-7.817779,-2.296967,4.672084,4.831360,2.347502,-1.785414,-0.267820,-9.373845,2.900486,2.092263,-4.712880,9.248170,-4.054056,-9.038206,-7.251251,-9.734123,5.211940,-7.721725,-7.385448,-1.129445,3.373274,8.406393,5.176257,3.968284,2.140921,8.408722,1.110637,-9.605944,6.775453,-2.362509,-7.972813,1.107721,-4.593935,-7.295190,0.900030,-2.609131,5.227655,-1.417829,2.552581,-9.774481,2.733717,7.528781,-6.330805,-9.195713,-2.982688,4.421356,9.879796,7.316404,-7.105023,-5.706783,-7.432546,-4.218286,6.865053,6.623673,-1.979347,3.875925,7.555530,1.789345,-6.083987,1.861823,-6.989122,5.541804,8.911697,9.645665,-3.905585,-0.243366,8.009283,7.531279,7.591768,0.968385,-4.530759,9.541098,9.815162,0.970681,-7.851676,6.001833,8.583455,-9.364575,0.003739,-2.489119,-3.182219,-9.893491,7.970493,-3.307188,-6.182634,2.396198,-6.962632,-2.613279,5.040014,-3.705046,3.211222,-8.873373,-5.371708,9.725302,4.466701,-6.420027,-4.190083,5.883876,-0.361464,1.471822,9.558021,4.907021,2.387889,-4.198443,1.917794,0.542340,-1.285112,5.523597,-0.398611,-6.340586,-4.660877,1.185872,4.038464,-3.597183,-8.217375,8.260542,-9.585414,-2.861533,-4.278662,-2.953104,1.586973,-9.013861,-7.986475,-5.851151,3.344189,-7.574836,5.828073,-5.266196,-2.537511,-6.133268,-5.539757,-1.909104,-2.239678,5.948945,9.430217,-8.923875,7.313177,-4.118095,-8.693766,-6.371092,2.511792,2.856055,8.495097,-8.684548,9.675731,-0.748761,-5.965625,-8.857385,6.812674,5.670721,-7.685573,7.864891,8.549220,5.382484,2.841377,0.930585,-9.199184,9.192292,-8.160588,8.748523,9.899591,-6.394139,-9.230742,-6.201402,-3.053143,9.087171,-7.104920,-8.701596,-2.749475,5.673779,9.657031,0.604750,-1.143022,1.286514,-5.463578,-4.728229,1.566835,5.116537,2.616130,9.749115,2.968324,-3.805696,-3.287058,3.694308,-8.284503,-7.017495,0.636273,9.361739,-6.962263,6.696056,9.850898,-7.366799,-9.644218,7.933131,-7.097880,7.726236,7.168332,7.856362,-7.382435,-2.412918,1.656208,-3.516209,-8.707776,-1.338016,1.573115,9.526744,8.634173,7.337994,0.241749,-2.418530,1.781547,-7.783867,1.607989,-2.109885,-2.910751,0.904879,8.247920,6.753150,4.970046,1.968090,8.862694,-1.468435,-3.828709,-5.863531,-7.923707,4.991566,-8.069079,-5.354159,7.272638,2.835360,2.621569,-9.968994,-5.828288,8.675451,1.865971,-3.669187,0.181946,-9.918680,-5.499123,-6.396334,7.162895,6.868676,2.332485,2.293674,-1.570018,-2.630068,2.994949,3.182940,-3.849519,-7.663505,8.460080,-8.606073,2.521598,-7.792747,3.094987,-0.722013,0.661465,-4.994475,1.899586,5.802465,-0.602686,9.143870,-3.705244,-5.912850,1.607953,6.355186,8.629217,-0.166071,-3.512532,5.495874,6.183713,-9.017208,2.584255,5.688495,-1.939996,-7.062850,-3.689499,3.486322,-1.114567,-6.213680,-4.466943,-2.427834,5.153156,-1.643149,-6.283258,-8.160402,0.201640,-4.777458,9.272885,0.730467,-1.431357,4.195640,3.484279,-3.452162,-4.032235,-2.739669,-1.157574,-0.679563,4.282340,3.168839,-0.706065,1.691655,-5.936172,-5.383674,4.386392,4.125917,-4.416842,-4.105638,5.195850,4.246360,7.241776,-3.105653,5.145934,-4.879752,9.357101,-1.747405,0.959255,9.511101,0.705385,6.931347,9.981496,-8.419743,8.235208,-9.581817,5.523537,-9.092913,7.548726,-8.892005,-2.151254,9.131164,-8.363892,8.227702,8.590651,6.422066,6.730860,1.069843,-6.720329,-9.568412,-0.356075,-5.791721,-0.358636,2.704395,-7.838116,-8.127780,-7.888993,-0.009057,4.512030,-4.260633,7.286051,7.075016,-9.957209,4.995653,0.330094,0.125130,-2.127140,5.443596,-9.633642,-8.445318,4.042903,0.743963,-2.298824,-7.600961,-9.955017,-6.927707,6.799663,-8.920314,-2.294084,-7.953996,1.874249,-8.115047,6.136237,-0.800821,-5.642913,-8.618260,-6.287134,5.262596,-2.180125,-2.643902,-1.276697,-5.621928,4.581852,1.933340,-8.602723,2.843260,5.573861,-8.800103,8.293112,9.794476,3.695433,8.339908,5.334775,1.184673,6.427002,-5.156377,-1.678188,8.349150,5.562847,-7.916077,-1.405436,6.424601,7.494857,-0.409109,7.925454,-8.534236,-6.033411,-7.506368,-2.995761,7.682129,9.267219,3.359695,-6.998810,8.658449,3.294394,8.894714,8.973352,-1.067594,-0.598762,-3.850581,-0.208429,9.986673,-3.034925,-7.503460,4.899729,-1.146690,-9.928626,-9.252422,-2.141271,-5.600516,6.462806,7.551560,0.986222,1.112661,9.641107,6.505353,-3.819246,-2.642281,-1.637514,1.713722,-4.996607,-5.009873,2.027600,7.758544,3.299731,-7.839669,0.679510,5.431649,9.744924,3.708207,-3.150703,-3.564392,4.856007,-9.606132,2.203758,0.196617,4.909513,-1.983390,-4.124733,2.734664,-9.315200,2.349024,2.468062,-2.791614,5.869146,0.506393,-2.665272,4.265218,-1.577310,2.838943,2.790969,6.337158,-4.522021,-8.750640,5.992336,-5.895400,4.498348,-8.344642,4.305544,4.034999,-7.005227,-9.029775,-3.685417,-3.888810,7.442022,-1.539532,-4.587970,-6.560894,-8.786919,7.960379,-1.068596,6.141358,6.251518,-6.297272,-6.156278,-3.670795,4.478982,3.334293,-2.164792,-6.599559,2.049713,-7.619682,6.057294,-0.994049,2.012852,0.424697,-5.580519,8.569117,-5.465191,-9.551649,2.464687,2.351927,6.165490,-2.485098,-5.233493,-5.803867,-3.262101,0.099877,7.402195,1.598793,-9.040045,-5.213815,9.396923,-9.233507,2.051703,-4.885135,7.825601,9.486708,-6.074320,-1.753391,5.083184,-5.807526,-2.015769,5.174260,4.325488,-1.926217,4.667027,-8.914877,6.453126,6.684627,2.623980,7.880450,4.731903,-9.808816,6.153766,8.476552,6.614161,-5.242681,9.671065,3.964995,-3.915714,-6.637540,-2.575402,-6.679369,-8.582124,-6.767743,8.113686,-5.152326,4.197415,-8.917141,-7.131313,3.343144,8.879507,9.799882,9.656648,1.115334,-2.042348,4.003584,3.105480,-4.037300,3.533065,2.762216,2.284123,-9.373816,-9.472790,1.963232,-3.440464,-6.676295,-4.268926,-4.691524,-8.499158,2.229127,-6.120699,5.449677,-5.351542,1.388464,8.800130,-7.155544,-7.730763,7.894499,3.133813,1.808426,8.078939,5.678284,5.573803,8.018854,0.659457,3.045068,8.331665,9.822403,-1.676563,-6.951410,-9.458071,-9.484186,3.605545,5.650079,-0.680688,-7.283169,0.665344,1.308844,7.504266,-3.285684,7.350858,-9.222293,6.818285,-8.516248,-0.502388,3.644259,2.196898,-7.881663,9.103757,8.715622,-7.798498,0.412208,9.813412,1.989132,1.313586,-5.133617,1.235092,6.202948,-9.183492,-6.012090,-8.116138,9.874264,-6.300944,-2.632350,-1.236083,3.279107,0.109271,-0.465725,-2.539598,-0.170604,5.745652,-3.633381,7.401582,0.975251,-4.870534,9.302908,9.059430,-4.638987,-6.995814,7.636721,2.803696,0.984058,0.019905,9.017727,3.821852,2.525606,-8.442686,6.982469,-4.106647,-7.296105,0.537327,7.324684,-1.712148,-7.939166,0.389659,0.457562,-4.884534,2.457160,-6.711778,4.477893,-4.513796,4.137636,3.746055,8.999417,2.458015,-6.621409,6.074201,-6.597768,1.254901,-3.811933,-9.124333,0.004735,-0.070114,0.509145,-9.821408,8.048751,9.464534,5.517142,7.393026,-1.646409,-5.866831,0.190633,2.229044,-4.951023,-6.603077,9.649865,-1.373963,-9.803704,0.274484,-8.945572,-5.981921,3.224695,-4.782665,-5.432661,3.427178,-7.335196,8.047358,6.296460,2.373501,-7.773774,-9.973539,8.057535,-1.538135,5.979225,7.479256,4.288059,6.053880,5.217275,-6.397983,-8.909072,5.057963,9.291820,-8.697764,9.045489,-3.778196,-4.613620,8.104261,-8.955386,2.074012,5.340051,1.749213,-1.438143,0.963041,-9.649635,-9.372539,7.149371,8.992894,-4.118716,6.834197,-3.257190,6.576348,-0.982643,-9.053334,9.773459,5.528636,-5.085394,4.882916,7.922785,-7.484620,-3.257904,-9.779354,-5.097985,4.881051,-9.112840,-1.079305,-3.690540,6.234407,-8.339355,7.623221,0.867073,4.555165,0.795302,-8.437091,1.487435,-3.043783,2.056595,-1.227736,9.804385,5.844826,-5.680393,-0.905559,0.661487,-6.228239,8.270057,1.860617,-2.655803,-4.475039,-9.025792,-7.063998,4.376743,5.580526,-1.084905,0.551803,0.845601,9.117451,-4.779433,2.548882,6.016474,-4.737844,6.152724,9.338824,-8.197501,-9.733413,-7.686357,-1.320983,4.959873,7.572667,6.997820,3.829233,7.601072,0.203908,-0.002415,4.203454,-1.650870,-1.571264,-6.328343,4.795801,9.282463,0.903557,-8.633958,-7.445069,7.138494,5.165710,-0.896947,-5.486844,4.612184,3.619448,-6.461553,0.974277,-9.553470,-9.739218,3.364555,2.975277,9.228608,3.298455,2.484192,-1.814701,3.509878,4.918515,-5.026484,0.165102,3.668051,-7.524526,3.455006,-6.928091,9.686823,-8.816982,-3.194081,-5.737073,-7.568108,-7.708966,2.125003,9.611494,-2.709607,-5.408645,-5.469769,9.362831,-0.891159,3.914745,9.584832,-5.426369,-8.087724,-6.067660,-2.276639,8.594385,-4.022104,-6.657928,-9.726042,-3.099158,3.066617,4.524027,-3.930933,1.697196,-9.531918,-4.064876,8.319345,0.484100,-5.848470,-4.660154,-5.545718,5.325326,9.172056,-1.468071,4.862537,0.032402,8.611812,-1.699384,3.378303,-7.732634,-1.456769,9.530323,1.845424,-0.759521,-4.311665,3.110018,-7.836641,3.927682,-6.016578,4.328611,-2.239047,-0.330024,1.380018,5.500134,6.055045,7.589083,3.283276,7.722027,5.965231,-3.532871,-2.469343,-2.327102,-1.940602,7.130491,6.366141,8.311424,9.991046,8.870240,-0.616858,9.470209,-2.595050,-4.946205,3.724918,0.972162,2.224018,7.677750,8.360079,-0.859505,8.688612,-6.026182,-8.977266,4.753697,-6.145977,-2.433955,5.866547,-3.099646,-9.924336,2.353702,-0.542090,-7.189172,-3.504962,8.537207,6.266271,-3.829147,6.154564,5.640394,-5.344555,0.690057,9.700353,7.734124,7.738283,7.172996,-6.228005,-7.739946,1.315883,-9.367397,-9.517543,6.383839,7.938866,-8.436074,-1.331892,-0.292417,-6.736868,3.299254,-4.727262,8.434386,-0.372890,7.741604,2.994055,6.308646,5.808114,8.010998,-8.491531,1.194455,-4.337074,-7.869545,-6.316002,9.277912,5.485390,-6.536251,0.677408,7.005271,-3.083813,2.568586,-0.323686,-5.872110,-9.596655,8.641688,-1.622778,9.106479,8.606054,-3.826169,-7.891435,-2.459344,-3.578010,6.429385,-3.177001,-9.525025,-4.586964,6.750484,-9.049490,-9.470562,1.481585,3.695708,-8.372981,-3.821107,0.508872,2.750216,-0.694385,8.974950,4.637959,-9.913000,6.518121,-9.609902,-6.388630,7.052892,-3.632814,-4.760674,0.899015,1.822285,-9.060902,7.945772,-2.837811,7.833176,3.804002,-0.246598,-4.701199,-4.006395,0.080089,2.920018,-5.372590,-8.800365,-2.269143,-9.518753,2.761613,4.378401,8.609357,3.859690,-9.697277,-5.250854,7.515579,-4.125684,-6.286933,9.020399,6.077811,3.597323,8.543848,-2.203247,-5.770595,-3.048945,1.443923,0.610628,-7.569611,-9.482027,-8.628717,-5.121055,4.880049,9.619423,-2.214824,2.525412,0.791149,4.189726,6.787989,-2.311049,3.931829,6.718280,-4.142300,5.182172,7.074983,6.745791,0.662902,4.600635,-4.097325,-6.194907,9.023587,7.540058,-3.306979,-0.954572,-1.086817,-9.706042,2.917704,-0.091686,-5.753642,-1.462598,-8.815298,1.715965,-8.070652,-4.362640,7.171253,2.819374,6.662459,8.927944,0.510389,0.424487,-6.745634,8.525776,9.128117,-1.385527,-9.651228,9.449045,-6.227284,-5.054553,8.354473,-2.421295,8.598398,0.291414,-0.994540,-2.356822,-9.607851,8.798688,1.276055,-4.375160,6.712688,9.375207,-3.392557,-9.248336,8.257407,7.684355,4.286019,-6.604647,9.726662,4.986434,-4.883563,3.571061,7.290374,-8.639986,-1.144568,1.964850,6.727024,6.799940,5.027972,-0.651103,-9.736143,8.751900,7.445072,-2.527853,-2.455353,-2.242067,4.114051,2.278190,7.422220,-9.921416,8.007164,2.364494,-0.829081,-1.299384,-3.516399,-1.566067,-3.602427,-0.171861,8.412144,-6.503214,9.547192,5.213502,-8.179209,3.643951,-6.382961,0.589980,-1.817990,-2.079712,3.676465,-1.748142,7.481770,-6.948621,6.081080,-4.442713,4.228616,-3.939031,2.592851,-2.704433,-3.685806,0.202049,9.008999,-2.166319,6.109538,-9.429468,7.327744,-8.320670,6.292913,-8.919155,-5.573046,-8.941693,4.666522,-9.862029,-4.702591,5.016812,-1.820854,7.500195,3.768379,4.135128,-6.450364,-8.430776,9.317400,-9.727245,0.319975,5.354210,6.649334,-2.401962,-1.388003,-6.282427,7.438491,0.803178,-2.376477,0.831148,7.586122,4.112641,-4.014522,2.793324,-9.338936,-9.866910,4.474552,6.799312,9.870362,1.067789,-5.251906,-8.014036,6.163949,-5.713499,-7.099000,-4.008152,-2.710039,5.405906,7.461122,-7.770947,6.472611,0.802914,-2.395295,9.303662,-6.827987,8.209341,-7.152436,-8.304391,-7.437565,-1.705938,-8.426629,-0.043116,-6.255865,1.476846,-1.607906,1.413461,5.543612,-8.628341,-3.577812,5.195655,0.642699,9.471610,8.195926,9.773938,-5.454792,-4.443447,-3.930902,-3.423026,4.918643,-5.296122,5.252568,2.320428,9.711306,7.939797,0.143392,-2.723803,3.247171,8.453010,-4.882521,-7.490204,-6.869666,8.108368,2.962157,9.009979,-7.930206,3.335832,8.270463,-2.671703,-6.925944,-5.886511,-3.138159,-2.731819,7.626929,-2.855618,8.347823,-7.173668,-5.494239,-3.668443,9.262902,-1.721501,-2.701872,-1.377452,-9.252558,-5.031763,-4.665201,-8.285115,3.352676,-3.400825,-7.993191,-3.665174,-7.338664,6.697547,5.481869,-8.926595,8.107211,-5.801344,-4.896454,-3.267312,8.707724,-7.476338,6.234621,-3.631005,2.640100,9.247955,-3.145253,7.707999,4.108718,4.072739,0.335535,2.756858,-4.616715,-8.967187,-0.437565,4.332943,6.173409,5.929176,-3.069482,6.715474,8.984638,-4.030315,3.853534,-4.035369,-8.323640,1.279918,1.661216,5.551538,-9.268518,5.854772,-6.243720,-0.459637,-9.312654,-7.126391,3.650049,-4.387212,3.631101,-3.283694,2.883893,4.360118,-1.288773,2.254373,8.218375,9.316736,-1.523849,2.549572,3.539778,-8.035324,3.407996,2.687328,-5.422978,4.841403,-6.825215,-7.825447,-9.294093,8.252964,-0.544449,4.864399,1.707634,4.668860,8.365067,-8.920781,-0.510279,-8.129312,-6.340730,6.788290,6.917367,-6.821834,-7.450771,9.076853,-0.238692,-8.207839,1.393226,-3.344151,-3.764010,-1.130282,-7.361800,3.720258,2.173753,9.552391,1.485443,2.308512,1.536462,-6.304399,-9.428860,6.592163,-0.663401,-7.446434,0.166524,5.423460,-4.076148,5.295841,-9.379120,-3.987460,-2.755381,8.850744,-6.967062,-3.873678,-7.097455,3.101406,9.598393,1.515649,-3.272229,9.048035,0.420391,-8.901265,0.171151,-4.076507,-6.155590,9.510224,-3.370802,-2.200988,0.402638,9.101704,4.948300,6.886200,3.251941,-0.580303,-5.109435,7.410559,-7.028111,0.155465,1.277225,-4.022400,-0.968545,-9.141344,-4.519625,3.337692,6.467998,-0.444979,-2.695443,5.034107,-7.501400,4.962998,-2.812210,-1.123404,-4.166897,-6.513459,-8.011465,5.441830,-8.931116,0.715446,-8.372844,2.458697,6.182396,-9.865403,2.269704,8.488135,-7.693906,-4.018850,1.712472,4.859161,-3.067517,6.728119,-3.978439,-8.503043,-5.159164,-2.968088,-5.418094,5.488814,9.249546,6.199148,7.766703,-8.980449,-5.390499,-6.703356,-8.826681,3.394067,5.263605,8.649230,-1.408720,3.083928,6.891664,5.149054,6.608019,-7.055920,7.147733,6.820818,-3.540721,-6.402531,-7.084505,0.671750,-3.409834,7.025928,1.743869,-7.217340,-6.339475,4.906954,7.788563,-7.416610,1.472316,2.636003,-1.974323,6.086308,-6.628943,6.861114,7.588246,0.801543,-4.885717,9.985424,3.119103,0.098834,4.863305,-4.527416,3.766382,9.267259,1.909390,7.617423,9.389706,-9.444619,-1.299037,-3.068239,-7.720171,-7.138408,5.391601,7.680527,1.936233,-8.263260,7.062048,0.563631,1.298678,5.433271,7.348337,2.021836,3.554981,-1.997841,3.645821,0.011227,0.807386,-9.719275,-7.471549,2.555107,-6.235510,-5.884583,-6.635537,3.938717,8.126960,-5.970507,8.278995,7.520395,-4.497188,0.575677,4.045870,3.523490,-7.185507,4.505689,0.235611,-0.160037,-7.639178,2.189515,-0.216003,6.592290,3.224735,-8.130538,4.262019,-8.761700,3.279227,1.398950,-3.506083,6.899730,3.891598,0.931256,-1.611571,-6.232306,9.447225,8.253309,-4.132704,8.063253,6.031630,5.101819,7.593424,-6.010105,1.672959,3.506550,-9.805955,-0.802344,8.303606,1.227106,8.380665,7.044484,8.611521,-5.020242,1.402211,-9.400011,4.214677,0.138940,3.990340,2.138642,8.139310,-3.807752,-8.132607,8.461691,8.482935,7.555090,2.348893,5.815550,0.497972,-7.485521,2.419151,9.381899,-0.801651,6.230468,-7.832464,-7.470582,-8.143416,-9.693337,3.467497,-7.455383,-4.635495,4.242452,-4.060271,-8.207505,-8.747844,-4.844974,6.284634,-8.385335,-9.849515,3.647862,2.422270,6.210932,6.653196,-0.089700,4.318471,5.880236,-9.728283,6.674869,9.007535,-4.151998,1.110286,2.038312,4.126453,-7.186087,1.741315,-3.441012,-6.139500,-4.359003,9.452896,-5.800958,-1.820891,-6.316315,0.230284,8.225043,-2.639317,-5.115081,6.697530,-7.552911,-1.568056,-5.733462,8.950920,-4.077453,-2.582979,3.448828,7.374022,5.218118,0.853065,-5.093552,0.401649,1.697526,0.902705,3.507953,9.729347,1.266326,3.565118,2.852603,4.366091,-5.625192,9.433165,3.050583,0.021046,-7.967761,9.592400,5.200394,-9.644046,-9.689597,2.667534,-7.993376,1.210393,-8.193598,-6.561842,1.525779,8.246735,4.817798,4.165562,9.490197,8.732861,6.728474,-8.589577,-0.216367,0.749037,-6.260749,-3.784561,5.700289,3.569681,-7.160372,-3.884175,5.056625,4.252926,-7.881713,5.766229,-3.971839,3.730357,9.516024,-8.561169,-3.120298,-1.086901,-4.209803,-6.319597,7.118986,9.239653,6.743369,2.180412,3.865190,1.493906,-1.498023,6.695633,-1.565111,-5.147457,-9.216060,6.495496,5.691628,-3.512009,-7.811180,2.978172,-1.367482,-6.436459,-9.770468,-3.919733,-2.866377,6.320198,-2.238443,0.780976,4.223282,6.546445,3.858971,2.564738,-1.971618,-7.780244,-5.007033,-6.591466,1.752811,-0.372673,1.046502,4.898173,-6.371128,-8.455574,-6.070403,4.749186,4.208997,2.092835,5.308233,4.242785,-3.779883,5.773065,-6.211894,8.476734,-9.324957,2.692221,-6.298838,8.913783,-8.751275,-7.976646,-0.304770,-3.100738,-5.135932,-5.492754,-9.390439,9.126193,7.587809,4.244533,5.646792,1.961593,-0.430370,9.826506,-0.889136,-7.601433,-6.634114,1.475983], dtype = "float32")#candidate|2980|(2304,)|const|float32
call_2979 = relay.TupleGetItem(func_329_call(relay.reshape(const_2980.astype('float32'), [16, 16, 9])), 0)
call_2981 = relay.TupleGetItem(func_331_call(relay.reshape(const_2980.astype('float32'), [16, 16, 9])), 0)
uop_2983 = relay.tan(call_2979.astype('float64')) # shape=(16, 16, 9)
uop_2985 = relay.tan(call_2981.astype('float64')) # shape=(16, 16, 9)
uop_2997 = relay.asin(uop_2983.astype('float32')) # shape=(16, 16, 9)
uop_2999 = relay.asin(uop_2985.astype('float32')) # shape=(16, 16, 9)
bop_3004 = relay.multiply(uop_2983.astype('int8'), relay.reshape(uop_2997.astype('int8'), relay.shape_of(uop_2983))) # shape=(16, 16, 9)
bop_3007 = relay.multiply(uop_2985.astype('int8'), relay.reshape(uop_2999.astype('int8'), relay.shape_of(uop_2985))) # shape=(16, 16, 9)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3017 = relay.TupleGetItem(func_2126_call(), 0)
call_3018 = relay.TupleGetItem(func_2128_call(), 0)
output = relay.Tuple([call_2966,const_2980,bop_3004,call_3017,])
output2 = relay.Tuple([call_2967,const_2980,bop_3007,call_3018,])
func_3023 = relay.Function([], output)
mod['func_3023'] = func_3023
mod = relay.transform.InferType()(mod)
mutated_mod['func_3023'] = func_3023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3024 = func_3023_call()
output = call_3024
func_3025 = relay.Function([], output)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3054 = relay.var("var_3054", dtype = "float64", shape = (14, 8, 11))#candidate|3054|(14, 8, 11)|var|float64
uop_3055 = relay.erf(var_3054.astype('float64')) # shape=(14, 8, 11)
output = uop_3055
output2 = uop_3055
func_3062 = relay.Function([var_3054,], output)
mod['func_3062'] = func_3062
mod = relay.transform.InferType()(mod)
mutated_mod['func_3062'] = func_3062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3063 = relay.var("var_3063", dtype = "float64", shape = (14, 8, 11))#candidate|3063|(14, 8, 11)|var|float64
func_3062_call = mutated_mod.get_global_var('func_3062')
call_3064 = func_3062_call(var_3063)
output = call_3064
func_3065 = relay.Function([var_3063], output)
mutated_mod['func_3065'] = func_3065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_3092 = relay.TupleGetItem(func_1303_call(), 0)
call_3093 = relay.TupleGetItem(func_1305_call(), 0)
func_1750_call = mod.get_global_var('func_1750')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_3112 = relay.TupleGetItem(func_1750_call(), 4)
call_3113 = relay.TupleGetItem(func_1752_call(), 4)
uop_3121 = relay.asin(call_3092.astype('float64')) # shape=(16, 4, 11)
uop_3123 = relay.asin(call_3093.astype('float64')) # shape=(16, 4, 11)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_3133 = relay.TupleGetItem(func_1235_call(), 0)
call_3134 = relay.TupleGetItem(func_1236_call(), 0)
func_1368_call = mod.get_global_var('func_1368')
func_1371_call = mutated_mod.get_global_var('func_1371')
var_3139 = relay.var("var_3139", dtype = "float64", shape = (196,))#candidate|3139|(196,)|var|float64
call_3138 = relay.TupleGetItem(func_1368_call(relay.reshape(var_3139.astype('float64'), [4, 7, 7])), 2)
call_3140 = relay.TupleGetItem(func_1371_call(relay.reshape(var_3139.astype('float64'), [4, 7, 7])), 2)
output = relay.Tuple([call_3112,uop_3121,call_3133,call_3138,var_3139,])
output2 = relay.Tuple([call_3113,uop_3123,call_3134,call_3140,var_3139,])
func_3142 = relay.Function([var_3139,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "float64", shape = (196,))#candidate|3143|(196,)|var|float64
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3144 = func_3142_call(var_3143)
output = call_3144
func_3145 = relay.Function([var_3143], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3170 = relay.var("var_3170", dtype = "uint32", shape = (8, 4, 1))#candidate|3170|(8, 4, 1)|var|uint32
var_3171 = relay.var("var_3171", dtype = "uint32", shape = (8, 4, 4))#candidate|3171|(8, 4, 4)|var|uint32
bop_3172 = relay.minimum(var_3170.astype('uint32'), var_3171.astype('uint32')) # shape=(8, 4, 4)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_3191 = relay.TupleGetItem(func_1235_call(), 0)
call_3192 = relay.TupleGetItem(func_1236_call(), 0)
var_3196 = relay.var("var_3196", dtype = "uint32", shape = (8, 4, 4))#candidate|3196|(8, 4, 4)|var|uint32
bop_3197 = relay.power(bop_3172.astype('float32'), relay.reshape(var_3196.astype('float32'), relay.shape_of(bop_3172))) # shape=(8, 4, 4)
output = relay.Tuple([call_3191,bop_3197,])
output2 = relay.Tuple([call_3192,bop_3197,])
func_3214 = relay.Function([var_3170,var_3171,var_3196,], output)
mod['func_3214'] = func_3214
mod = relay.transform.InferType()(mod)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3214_call = mutated_mod.get_global_var('func_3214')
var_3216 = relay.var("var_3216", dtype = "uint32", shape = (8, 4, 1))#candidate|3216|(8, 4, 1)|var|uint32
var_3217 = relay.var("var_3217", dtype = "uint32", shape = (8, 4, 4))#candidate|3217|(8, 4, 4)|var|uint32
var_3218 = relay.var("var_3218", dtype = "uint32", shape = (8, 4, 4))#candidate|3218|(8, 4, 4)|var|uint32
call_3215 = func_3214_call(var_3216,var_3217,var_3218,)
output = call_3215
func_3219 = relay.Function([var_3216,var_3217,var_3218,], output)
mutated_mod['func_3219'] = func_3219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_823_call = mutated_mod.get_global_var('func_823')
call_3238 = relay.TupleGetItem(func_822_call(), 0)
call_3239 = relay.TupleGetItem(func_823_call(), 0)
output = relay.Tuple([call_3238,])
output2 = relay.Tuple([call_3239,])
func_3246 = relay.Function([], output)
mod['func_3246'] = func_3246
mod = relay.transform.InferType()(mod)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3247 = func_3246_call()
output = call_3247
func_3248 = relay.Function([], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3284 = func_2677_call()
call_3285 = func_2677_call()
output = relay.Tuple([call_3284,])
output2 = relay.Tuple([call_3285,])
func_3287 = relay.Function([], output)
mod['func_3287'] = func_3287
mod = relay.transform.InferType()(mod)
output = func_3287()
func_3288 = relay.Function([], output)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3345 = func_2677_call()
call_3346 = func_2677_call()
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3365 = relay.TupleGetItem(func_2126_call(), 0)
call_3366 = relay.TupleGetItem(func_2128_call(), 0)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_3370 = relay.TupleGetItem(func_2118_call(), 1)
call_3371 = relay.TupleGetItem(func_2120_call(), 1)
output = relay.Tuple([call_3345,call_3365,call_3370,])
output2 = relay.Tuple([call_3346,call_3366,call_3371,])
func_3382 = relay.Function([], output)
mod['func_3382'] = func_3382
mod = relay.transform.InferType()(mod)
output = func_3382()
func_3383 = relay.Function([], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1861_call = mod.get_global_var('func_1861')
func_1862_call = mutated_mod.get_global_var('func_1862')
call_3407 = func_1861_call()
call_3408 = func_1861_call()
uop_3411 = relay.log10(call_3407.astype('float64')) # shape=(16, 4, 11)
uop_3413 = relay.log10(call_3408.astype('float64')) # shape=(16, 4, 11)
bop_3438 = relay.less_equal(uop_3411.astype('bool'), relay.reshape(call_3407.astype('bool'), relay.shape_of(uop_3411))) # shape=(16, 4, 11)
bop_3441 = relay.less_equal(uop_3413.astype('bool'), relay.reshape(call_3408.astype('bool'), relay.shape_of(uop_3413))) # shape=(16, 4, 11)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_3443 = relay.TupleGetItem(func_1792_call(), 1)
call_3444 = relay.TupleGetItem(func_1794_call(), 1)
output = relay.Tuple([bop_3438,call_3443,])
output2 = relay.Tuple([bop_3441,call_3444,])
func_3446 = relay.Function([], output)
mod['func_3446'] = func_3446
mod = relay.transform.InferType()(mod)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mutated_mod.get_global_var('func_3446')
call_3447 = func_3446_call()
output = call_3447
func_3448 = relay.Function([], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_3453 = relay.TupleGetItem(func_1303_call(), 0)
call_3454 = relay.TupleGetItem(func_1305_call(), 0)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3462 = func_2677_call()
call_3463 = func_2677_call()
func_2795_call = mod.get_global_var('func_2795')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_3470 = relay.TupleGetItem(func_2795_call(), 3)
call_3471 = relay.TupleGetItem(func_2796_call(), 3)
output = relay.Tuple([call_3453,call_3462,call_3470,])
output2 = relay.Tuple([call_3454,call_3463,call_3471,])
func_3475 = relay.Function([], output)
mod['func_3475'] = func_3475
mod = relay.transform.InferType()(mod)
output = func_3475()
func_3476 = relay.Function([], output)
mutated_mod['func_3476'] = func_3476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3482 = func_1911_call()
call_3483 = func_1911_call()
output = relay.Tuple([call_3482,])
output2 = relay.Tuple([call_3483,])
func_3485 = relay.Function([], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
output = func_3485()
func_3486 = relay.Function([], output)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_3498 = func_807_call()
call_3499 = func_807_call()
output = call_3498
output2 = call_3499
func_3500 = relay.Function([], output)
mod['func_3500'] = func_3500
mod = relay.transform.InferType()(mod)
output = func_3500()
func_3501 = relay.Function([], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3573 = relay.var("var_3573", dtype = "float64", shape = (4, 1, 6))#candidate|3573|(4, 1, 6)|var|float64
uop_3574 = relay.erf(var_3573.astype('float64')) # shape=(4, 1, 6)
func_2126_call = mod.get_global_var('func_2126')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3586 = relay.TupleGetItem(func_2126_call(), 0)
call_3587 = relay.TupleGetItem(func_2128_call(), 0)
func_3246_call = mod.get_global_var('func_3246')
func_3248_call = mutated_mod.get_global_var('func_3248')
call_3594 = relay.TupleGetItem(func_3246_call(), 0)
call_3595 = relay.TupleGetItem(func_3248_call(), 0)
func_1962_call = mod.get_global_var('func_1962')
func_1964_call = mutated_mod.get_global_var('func_1964')
call_3601 = relay.TupleGetItem(func_1962_call(), 0)
call_3602 = relay.TupleGetItem(func_1964_call(), 0)
output = relay.Tuple([uop_3574,call_3586,call_3594,call_3601,])
output2 = relay.Tuple([uop_3574,call_3587,call_3595,call_3602,])
func_3606 = relay.Function([var_3573,], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3607 = relay.var("var_3607", dtype = "float64", shape = (4, 1, 6))#candidate|3607|(4, 1, 6)|var|float64
func_3606_call = mutated_mod.get_global_var('func_3606')
call_3608 = func_3606_call(var_3607)
output = call_3608
func_3609 = relay.Function([var_3607], output)
mutated_mod['func_3609'] = func_3609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3627 = relay.var("var_3627", dtype = "float64", shape = (16, 9, 4))#candidate|3627|(16, 9, 4)|var|float64
uop_3628 = relay.acosh(var_3627.astype('float64')) # shape=(16, 9, 4)
output = relay.Tuple([uop_3628,])
output2 = relay.Tuple([uop_3628,])
func_3632 = relay.Function([var_3627,], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
var_3633 = relay.var("var_3633", dtype = "float64", shape = (16, 9, 4))#candidate|3633|(16, 9, 4)|var|float64
output = func_3632(var_3633)
func_3634 = relay.Function([var_3633], output)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_3731 = relay.TupleGetItem(func_2118_call(), 0)
call_3732 = relay.TupleGetItem(func_2120_call(), 0)
output = call_3731
output2 = call_3732
func_3742 = relay.Function([], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
output = func_3742()
func_3743 = relay.Function([], output)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_3771 = relay.TupleGetItem(func_3382_call(), 0)
call_3772 = relay.TupleGetItem(func_3383_call(), 0)
output = call_3771
output2 = call_3772
func_3777 = relay.Function([], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mutated_mod.get_global_var('func_3777')
call_3778 = func_3777_call()
output = call_3778
func_3779 = relay.Function([], output)
mutated_mod['func_3779'] = func_3779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3780 = func_2677_call()
call_3781 = func_2677_call()
output = call_3780
output2 = call_3781
func_3782 = relay.Function([], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mutated_mod.get_global_var('func_3782')
call_3783 = func_3782_call()
output = call_3783
func_3784 = relay.Function([], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mod.get_global_var('func_3777')
func_3779_call = mutated_mod.get_global_var('func_3779')
call_3788 = func_3777_call()
call_3789 = func_3777_call()
var_3809 = relay.var("var_3809", dtype = "uint8", shape = (16, 4, 11))#candidate|3809|(16, 4, 11)|var|uint8
bop_3810 = relay.greater(call_3788.astype('bool'), relay.reshape(var_3809.astype('bool'), relay.shape_of(call_3788))) # shape=(16, 4, 11)
bop_3813 = relay.greater(call_3789.astype('bool'), relay.reshape(var_3809.astype('bool'), relay.shape_of(call_3789))) # shape=(16, 4, 11)
uop_3816 = relay.atanh(bop_3810.astype('float64')) # shape=(16, 4, 11)
uop_3818 = relay.atanh(bop_3813.astype('float64')) # shape=(16, 4, 11)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3822 = func_1911_call()
call_3823 = func_1911_call()
output = relay.Tuple([uop_3816,call_3822,])
output2 = relay.Tuple([uop_3818,call_3823,])
func_3830 = relay.Function([var_3809,], output)
mod['func_3830'] = func_3830
mod = relay.transform.InferType()(mod)
mutated_mod['func_3830'] = func_3830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3831 = relay.var("var_3831", dtype = "uint8", shape = (16, 4, 11))#candidate|3831|(16, 4, 11)|var|uint8
func_3830_call = mutated_mod.get_global_var('func_3830')
call_3832 = func_3830_call(var_3831)
output = call_3832
func_3833 = relay.Function([var_3831], output)
mutated_mod['func_3833'] = func_3833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_3869 = relay.TupleGetItem(func_1235_call(), 0)
call_3870 = relay.TupleGetItem(func_1236_call(), 0)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_3872 = relay.TupleGetItem(func_3023_call(), 1)
call_3873 = relay.TupleGetItem(func_3025_call(), 1)
output = relay.Tuple([call_3869,call_3872,])
output2 = relay.Tuple([call_3870,call_3873,])
func_3886 = relay.Function([], output)
mod['func_3886'] = func_3886
mod = relay.transform.InferType()(mod)
output = func_3886()
func_3887 = relay.Function([], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_3971 = relay.TupleGetItem(func_3446_call(), 1)
call_3972 = relay.TupleGetItem(func_3448_call(), 1)
output = call_3971
output2 = call_3972
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_4012 = relay.TupleGetItem(func_1792_call(), 0)
call_4013 = relay.TupleGetItem(func_1794_call(), 0)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_4030 = relay.TupleGetItem(func_3023_call(), 3)
call_4031 = relay.TupleGetItem(func_3025_call(), 3)
func_2795_call = mod.get_global_var('func_2795')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_4032 = relay.TupleGetItem(func_2795_call(), 5)
call_4033 = relay.TupleGetItem(func_2796_call(), 5)
output = relay.Tuple([call_4012,call_4030,call_4032,])
output2 = relay.Tuple([call_4013,call_4031,call_4033,])
func_4035 = relay.Function([], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mutated_mod.get_global_var('func_4035')
call_4036 = func_4035_call()
output = call_4036
func_4037 = relay.Function([], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_4074 = relay.TupleGetItem(func_3446_call(), 0)
call_4075 = relay.TupleGetItem(func_3448_call(), 0)
output = relay.Tuple([call_4074,])
output2 = relay.Tuple([call_4075,])
func_4082 = relay.Function([], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
output = func_4082()
func_4083 = relay.Function([], output)
mutated_mod['func_4083'] = func_4083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4086 = relay.var("var_4086", dtype = "float32", shape = (6, 5, 14))#candidate|4086|(6, 5, 14)|var|float32
uop_4087 = relay.log10(var_4086.astype('float32')) # shape=(6, 5, 14)
func_1676_call = mod.get_global_var('func_1676')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_4089 = relay.TupleGetItem(func_1676_call(), 0)
call_4090 = relay.TupleGetItem(func_1677_call(), 0)
output = relay.Tuple([uop_4087,call_4089,])
output2 = relay.Tuple([uop_4087,call_4090,])
func_4093 = relay.Function([var_4086,], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4094 = relay.var("var_4094", dtype = "float32", shape = (6, 5, 14))#candidate|4094|(6, 5, 14)|var|float32
func_4093_call = mutated_mod.get_global_var('func_4093')
call_4095 = func_4093_call(var_4094)
output = call_4095
func_4096 = relay.Function([var_4094], output)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
call_4162 = relay.TupleGetItem(func_1441_call(), 0)
call_4163 = relay.TupleGetItem(func_1443_call(), 0)
func_1235_call = mod.get_global_var('func_1235')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_4177 = relay.TupleGetItem(func_1235_call(), 0)
call_4178 = relay.TupleGetItem(func_1236_call(), 0)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4180 = relay.TupleGetItem(func_2414_call(), 0)
call_4181 = relay.TupleGetItem(func_2416_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4186 = func_3981_call()
call_4187 = func_3981_call()
output = relay.Tuple([call_4162,call_4177,call_4180,call_4186,])
output2 = relay.Tuple([call_4163,call_4178,call_4181,call_4187,])
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
output = func_4194()
func_4195 = relay.Function([], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4260 = relay.const([[[-8.435204],[8.868959]],[[-7.062734],[-2.123970]],[[2.505492],[-4.347171]],[[3.320559],[5.780378]],[[-2.951839],[-6.975324]],[[-7.124188],[4.131831]],[[4.170514],[-9.659224]],[[-1.662123],[0.361960]],[[-7.831638],[2.663209]],[[1.687967],[-0.374399]],[[-4.515998],[-8.646738]],[[-3.189945],[-7.314195]]], dtype = "float32")#candidate|4260|(12, 2, 1)|const|float32
uop_4261 = relay.atanh(const_4260.astype('float32')) # shape=(12, 2, 1)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_4271 = relay.var("var_4271", dtype = "bool", shape = (1152,))#candidate|4271|(1152,)|var|bool
call_4270 = func_368_call(relay.reshape(var_4271.astype('bool'), [16, 6, 12]), relay.reshape(var_4271.astype('bool'), [16, 6, 12]), )
call_4272 = func_368_call(relay.reshape(var_4271.astype('bool'), [16, 6, 12]), relay.reshape(var_4271.astype('bool'), [16, 6, 12]), )
func_1962_call = mod.get_global_var('func_1962')
func_1964_call = mutated_mod.get_global_var('func_1964')
call_4279 = relay.TupleGetItem(func_1962_call(), 0)
call_4280 = relay.TupleGetItem(func_1964_call(), 0)
uop_4284 = relay.acosh(uop_4261.astype('float32')) # shape=(12, 2, 1)
func_3606_call = mod.get_global_var('func_3606')
func_3609_call = mutated_mod.get_global_var('func_3609')
call_4289 = relay.TupleGetItem(func_3606_call(relay.reshape(const_4260.astype('float64'), [4, 1, 6])), 3)
call_4290 = relay.TupleGetItem(func_3609_call(relay.reshape(const_4260.astype('float64'), [4, 1, 6])), 3)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_4294 = func_1471_call()
call_4295 = func_1471_call()
output = relay.Tuple([call_4270,var_4271,call_4279,uop_4284,call_4289,call_4294,])
output2 = relay.Tuple([call_4272,var_4271,call_4280,uop_4284,call_4290,call_4295,])
func_4297 = relay.Function([var_4271,], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4298 = relay.var("var_4298", dtype = "bool", shape = (1152,))#candidate|4298|(1152,)|var|bool
func_4297_call = mutated_mod.get_global_var('func_4297')
call_4299 = func_4297_call(var_4298)
output = call_4299
func_4300 = relay.Function([var_4298], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_4312 = func_1911_call()
call_4313 = func_1911_call()
func_2079_call = mod.get_global_var('func_2079')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_4346 = relay.TupleGetItem(func_2079_call(), 0)
call_4347 = relay.TupleGetItem(func_2081_call(), 0)
uop_4348 = relay.log10(call_4346.astype('float32')) # shape=(1, 5, 10)
uop_4350 = relay.log10(call_4347.astype('float32')) # shape=(1, 5, 10)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
var_4357 = relay.var("var_4357", dtype = "float32", shape = (910,))#candidate|4357|(910,)|var|float32
const_4358 = relay.const([False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True], dtype = "bool")#candidate|4358|(1152,)|const|bool
call_4356 = relay.TupleGetItem(func_433_call(relay.reshape(var_4357.astype('float32'), [7, 10, 13]), relay.reshape(var_4357.astype('float32'), [7, 10, 13]), relay.reshape(const_4358.astype('bool'), [96, 12]), ), 3)
call_4359 = relay.TupleGetItem(func_437_call(relay.reshape(var_4357.astype('float32'), [7, 10, 13]), relay.reshape(var_4357.astype('float32'), [7, 10, 13]), relay.reshape(const_4358.astype('bool'), [96, 12]), ), 3)
output = relay.Tuple([call_4312,uop_4348,call_4356,var_4357,const_4358,])
output2 = relay.Tuple([call_4313,uop_4350,call_4359,var_4357,const_4358,])
func_4366 = relay.Function([var_4357,], output)
mod['func_4366'] = func_4366
mod = relay.transform.InferType()(mod)
mutated_mod['func_4366'] = func_4366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4367 = relay.var("var_4367", dtype = "float32", shape = (910,))#candidate|4367|(910,)|var|float32
func_4366_call = mutated_mod.get_global_var('func_4366')
call_4368 = func_4366_call(var_4367)
output = call_4368
func_4369 = relay.Function([var_4367], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4466 = relay.const([[[-1,-2,8,2,-4,8,9,-1]],[[-8,-7,3,3,10,-10,7,2]],[[4,-1,-10,6,5,4,-10,2]],[[1,6,-9,-3,4,4,1,9]],[[10,10,2,-5,-9,-2,-3,9]],[[-4,-7,-6,2,4,-1,-3,-2]],[[10,-4,7,-9,10,7,8,7]],[[-3,-4,5,-8,3,-5,2,1]],[[1,-6,7,-5,1,-2,10,-10]],[[4,-1,-2,-9,2,3,-3,-10]],[[2,-3,3,7,1,-2,9,-5]]], dtype = "int8")#candidate|4466|(11, 1, 8)|const|int8
const_4467 = relay.const([[[3,7,-2,7,-3,-10,7,8],[10,-9,7,6,-3,1,-7,4],[-2,-1,-9,10,9,4,-1,-5],[8,-7,3,6,8,4,4,-3],[-8,-1,-3,9,-10,-5,9,-1],[1,2,3,2,5,7,3,-6],[-6,-7,7,-8,-1,5,2,-7],[-5,-9,-8,10,-6,-5,-8,-9],[7,3,2,-10,-6,-2,-10,-1],[9,5,-10,1,3,4,-6,-8],[-1,-6,6,-7,-10,1,10,-6],[4,6,-8,10,4,5,-9,4],[5,4,-5,-6,-9,-4,-8,10],[4,6,5,-3,9,9,-8,7],[-3,9,-1,-1,-1,-1,-9,-3],[-7,5,4,-10,-4,1,2,-9]],[[9,2,-10,-2,10,-10,-6,-2],[-1,-4,-4,7,1,-2,-6,-9],[7,-8,-4,8,6,5,-2,-5],[-5,-5,1,-9,-10,9,-9,2],[8,5,-10,8,-2,10,-1,4],[-3,-6,-2,9,3,-9,-6,10],[-1,-8,7,-1,-10,-10,3,10],[6,-2,-1,2,1,-8,-2,-3],[-3,-8,-8,7,7,2,3,7],[5,8,10,-2,9,6,-8,6],[9,-10,-2,-6,4,8,9,7],[-5,-2,4,4,1,7,-10,-9],[-7,-9,-5,8,4,-7,3,6],[8,3,-9,-5,10,2,-5,10],[-1,2,3,-5,8,-9,-5,-1],[3,5,4,4,2,-3,-8,-2]],[[1,5,4,2,-2,-6,-3,2],[-2,10,8,1,2,10,6,-9],[4,2,3,-1,-4,6,4,5],[-6,4,-1,-8,9,-2,-10,6],[4,3,4,4,2,5,-7,-4],[7,1,-4,-2,-6,2,5,9],[5,-9,-7,7,3,7,-4,7],[10,-1,6,9,-8,-8,-8,4],[-1,2,-8,-9,-1,-2,-5,8],[6,2,-1,-6,4,3,2,-7],[2,3,8,-10,-6,4,3,1],[-1,3,-5,-2,4,-3,3,-3],[9,3,-8,6,5,-9,4,-10],[-2,7,-4,8,-4,-8,1,10],[-7,-7,5,-1,3,-1,-8,2],[-3,-7,9,5,-6,-8,4,7]],[[10,6,-7,-8,-9,-9,-9,8],[1,-9,3,-2,6,-6,-10,2],[4,7,-7,2,-5,4,2,-8],[-9,3,-2,9,-7,-8,7,-8],[10,-2,2,6,7,-3,-1,-1],[-9,-2,-1,9,-5,6,-9,-5],[-2,9,-3,3,-2,-10,-1,-5],[5,-9,8,6,-7,7,7,-6],[-7,4,9,-1,-6,-7,-1,-7],[-10,5,-4,-1,-3,8,8,-10],[-10,-8,-4,1,-9,-6,9,-9],[10,6,6,7,-8,1,1,-3],[-6,10,-2,-9,-7,3,10,6],[-7,6,-2,5,9,5,7,-1],[-1,-4,-9,-3,-10,4,-8,10],[3,-9,10,-4,-9,-1,9,1]],[[2,-4,-8,9,3,8,4,-9],[5,-1,-3,7,7,8,9,-7],[-3,-4,-10,-9,-6,6,-6,-6],[-4,-9,5,-7,-4,-8,4,-8],[6,8,-4,-9,-5,-10,-10,3],[5,-1,7,-3,-2,-8,6,-5],[-7,-10,-1,3,6,6,-2,-1],[10,9,9,10,3,-10,-3,1],[8,-3,10,7,-1,-1,-4,10],[-4,3,3,5,-3,-4,9,-10],[-7,-8,-1,3,1,-3,-8,-1],[5,6,-1,-3,7,3,-1,5],[-6,-6,-9,8,-3,-7,5,-5],[-3,-8,1,1,7,4,-6,9],[-1,10,-2,-1,9,-7,-5,-5],[-3,-5,4,-2,9,-10,-2,-1]],[[-4,4,1,-2,-3,-5,1,-7],[4,-9,-7,1,7,-2,-2,4],[6,-9,-3,-7,10,-5,3,7],[3,6,-1,7,-10,-8,4,6],[2,-4,8,3,3,-3,9,4],[8,-3,8,-6,9,-9,-8,2],[4,-6,7,-2,-9,-9,-5,-2],[4,3,-7,10,-2,10,6,1],[8,-2,-9,9,9,6,-10,8],[-8,-6,9,3,-5,-3,-3,-2],[-2,-9,-9,8,-6,-4,5,-10],[3,7,2,-5,-1,9,-3,-8],[-5,7,-5,6,1,8,1,8],[4,8,-5,4,-1,3,-5,-10],[-8,-6,2,-4,1,-9,-10,6],[4,1,-7,7,-9,2,3,-4]],[[-9,-6,4,5,2,8,3,-5],[10,-8,10,-4,8,-4,-8,-2],[1,-9,5,-10,10,-8,-2,1],[8,8,5,-8,-8,1,-1,4],[-10,6,-6,2,-2,8,3,5],[-9,9,5,-6,-10,-10,2,2],[4,7,4,-8,2,-10,5,6],[2,-7,-5,-1,-10,5,-2,1],[-4,-10,10,5,-3,-6,-4,-2],[10,-3,-10,7,5,1,-10,7],[-1,-4,-4,4,8,8,2,8],[9,6,-8,-1,-6,4,5,2],[10,-8,7,-4,1,8,-1,-7],[8,2,-6,-10,-5,10,6,7],[-10,-10,6,3,-5,-5,5,-9],[-5,2,-3,-4,7,-10,6,8]],[[-2,-2,-4,8,-5,-8,-4,5],[7,1,-10,-10,-8,9,-8,9],[-7,10,7,-1,-10,-5,5,6],[-9,-3,1,-5,6,5,5,3],[9,3,1,10,-2,-10,5,8],[2,-3,5,-3,4,-4,-4,-10],[2,10,-7,7,-5,6,-2,4],[-6,-8,-4,3,-1,-6,-7,9],[-10,-3,9,-8,-6,6,9,-1],[-6,-9,1,10,-10,-6,-5,-6],[-6,-3,8,1,6,-3,7,1],[4,6,1,-7,4,-9,10,3],[-4,-5,8,8,3,-10,-5,4],[2,-5,5,5,7,8,9,5],[10,6,6,-1,-5,-1,-1,-10],[-6,5,6,1,-5,-3,2,8]],[[8,9,9,-4,10,-3,-2,-5],[9,-10,-1,-10,-1,3,-1,-7],[-4,-4,6,-7,3,9,-4,-4],[6,10,4,-6,-3,10,7,-2],[4,7,-3,-8,4,-4,4,3],[-3,-7,-7,3,9,5,-1,-10],[2,-4,-2,5,-2,6,8,-5],[-6,-7,-5,-2,-4,-4,-3,-9],[-2,2,-7,-9,6,4,7,-7],[10,-6,4,1,5,2,-10,3],[-4,-7,1,-10,3,3,3,-5],[-3,10,-10,-5,6,1,8,9],[8,-3,-4,-8,-8,9,10,-6],[8,8,7,-1,1,-1,5,-1],[6,3,-8,8,-1,-7,2,4],[9,8,-7,9,2,-7,9,-1]],[[1,-6,-5,6,1,9,-7,5],[-6,2,-1,-1,2,-1,5,10],[8,-6,-2,10,-4,-7,1,8],[7,9,4,3,10,-1,-6,1],[-8,-6,7,-2,-5,5,4,-1],[5,9,2,7,3,-6,-6,-10],[4,-5,-2,-6,-7,-10,4,10],[-5,-1,10,-8,-4,2,3,-6],[-10,10,7,8,6,-7,-3,-4],[-5,-5,2,9,-10,-8,5,-10],[7,8,7,-10,-5,-5,-3,7],[3,4,-7,-1,-4,-10,5,3],[-1,5,-6,-2,1,1,6,3],[-2,-3,10,6,3,2,-7,7],[5,-7,-9,1,-6,-6,-2,2],[-6,1,-8,-1,-2,-8,-7,8]],[[-9,2,-3,7,-5,4,2,9],[10,5,6,9,-8,-8,4,-6],[10,8,-8,5,-8,3,4,7],[4,1,5,-2,7,-7,-6,3],[-10,3,5,-5,6,2,-2,3],[-10,-9,-4,-9,1,-1,10,6],[4,8,-7,4,-1,-5,-5,8],[-1,-10,8,-6,-7,7,-5,-5],[-2,10,-8,-5,1,1,-8,-3],[7,-6,3,5,2,-7,-5,-6],[7,-6,-10,-5,1,-1,6,8],[7,10,5,-2,-9,2,1,-1],[-3,5,-8,-6,-4,-7,-1,6],[8,-8,3,-10,6,6,-1,8],[-4,7,1,10,-2,-8,4,9],[-1,-5,-6,7,-8,-9,-8,2]]], dtype = "int8")#candidate|4467|(11, 16, 8)|const|int8
bop_4468 = relay.multiply(const_4466.astype('int8'), const_4467.astype('int8')) # shape=(11, 16, 8)
output = bop_4468
output2 = bop_4468
func_4484 = relay.Function([], output)
mod['func_4484'] = func_4484
mod = relay.transform.InferType()(mod)
mutated_mod['func_4484'] = func_4484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mutated_mod.get_global_var('func_4484')
call_4485 = func_4484_call()
output = call_4485
func_4486 = relay.Function([], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mod.get_global_var('func_4484')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_4490 = func_4484_call()
call_4491 = func_4484_call()
output = call_4490
output2 = call_4491
func_4495 = relay.Function([], output)
mod['func_4495'] = func_4495
mod = relay.transform.InferType()(mod)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4495_call = mutated_mod.get_global_var('func_4495')
call_4496 = func_4495_call()
output = call_4496
func_4497 = relay.Function([], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2079_call = mod.get_global_var('func_2079')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_4521 = relay.TupleGetItem(func_2079_call(), 1)
call_4522 = relay.TupleGetItem(func_2081_call(), 1)
output = call_4521
output2 = call_4522
func_4537 = relay.Function([], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
output = func_4537()
func_4538 = relay.Function([], output)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2709_call = mod.get_global_var('func_2709')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_4547 = relay.TupleGetItem(func_2709_call(), 0)
call_4548 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([call_4547,])
output2 = relay.Tuple([call_4548,])
func_4551 = relay.Function([], output)
mod['func_4551'] = func_4551
mod = relay.transform.InferType()(mod)
output = func_4551()
func_4552 = relay.Function([], output)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4559 = func_3742_call()
call_4560 = func_3742_call()
output = relay.Tuple([call_4559,])
output2 = relay.Tuple([call_4560,])
func_4570 = relay.Function([], output)
mod['func_4570'] = func_4570
mod = relay.transform.InferType()(mod)
mutated_mod['func_4570'] = func_4570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4570_call = mutated_mod.get_global_var('func_4570')
call_4571 = func_4570_call()
output = call_4571
func_4572 = relay.Function([], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_4606 = func_4537_call()
call_4607 = func_4537_call()
output = call_4606
output2 = call_4607
func_4608 = relay.Function([], output)
mod['func_4608'] = func_4608
mod = relay.transform.InferType()(mod)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mutated_mod.get_global_var('func_4608')
call_4609 = func_4608_call()
output = call_4609
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_4649 = func_4537_call()
call_4650 = func_4537_call()
var_4652 = relay.var("var_4652", dtype = "float32", shape = (2304,))#candidate|4652|(2304,)|var|float32
bop_4653 = relay.bitwise_or(call_4649.astype('uint8'), relay.reshape(var_4652.astype('uint8'), relay.shape_of(call_4649))) # shape=(2304,)
bop_4656 = relay.bitwise_or(call_4650.astype('uint8'), relay.reshape(var_4652.astype('uint8'), relay.shape_of(call_4650))) # shape=(2304,)
output = bop_4653
output2 = bop_4656
func_4661 = relay.Function([var_4652,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4662 = relay.var("var_4662", dtype = "float32", shape = (2304,))#candidate|4662|(2304,)|var|float32
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4663 = func_4661_call(var_4662)
output = call_4663
func_4664 = relay.Function([var_4662], output)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4668 = relay.var("var_4668", dtype = "int32", shape = (9, 13, 11))#candidate|4668|(9, 13, 11)|var|int32
var_4669 = relay.var("var_4669", dtype = "int32", shape = (9, 13, 11))#candidate|4669|(9, 13, 11)|var|int32
bop_4670 = relay.subtract(var_4668.astype('int32'), relay.reshape(var_4669.astype('int32'), relay.shape_of(var_4668))) # shape=(9, 13, 11)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
const_4679 = relay.const([True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False], dtype = "bool")#candidate|4679|(1152,)|const|bool
call_4678 = func_368_call(relay.reshape(const_4679.astype('bool'), [16, 6, 12]), relay.reshape(const_4679.astype('bool'), [16, 6, 12]), )
call_4680 = func_368_call(relay.reshape(const_4679.astype('bool'), [16, 6, 12]), relay.reshape(const_4679.astype('bool'), [16, 6, 12]), )
uop_4686 = relay.sinh(var_4669.astype('float64')) # shape=(9, 13, 11)
bop_4692 = relay.equal(var_4669.astype('bool'), relay.reshape(uop_4686.astype('bool'), relay.shape_of(var_4669))) # shape=(9, 13, 11)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_4703 = func_807_call()
call_4704 = func_807_call()
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_4705 = relay.TupleGetItem(func_2318_call(), 1)
call_4706 = relay.TupleGetItem(func_2320_call(), 1)
output = relay.Tuple([bop_4670,call_4678,const_4679,bop_4692,call_4703,call_4705,])
output2 = relay.Tuple([bop_4670,call_4680,const_4679,bop_4692,call_4704,call_4706,])
func_4709 = relay.Function([var_4668,var_4669,], output)
mod['func_4709'] = func_4709
mod = relay.transform.InferType()(mod)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mutated_mod.get_global_var('func_4709')
var_4711 = relay.var("var_4711", dtype = "int32", shape = (9, 13, 11))#candidate|4711|(9, 13, 11)|var|int32
var_4712 = relay.var("var_4712", dtype = "int32", shape = (9, 13, 11))#candidate|4712|(9, 13, 11)|var|int32
call_4710 = func_4709_call(var_4711,var_4712,)
output = call_4710
func_4713 = relay.Function([var_4711,var_4712,], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_4719 = relay.TupleGetItem(func_3287_call(), 0)
call_4720 = relay.TupleGetItem(func_3288_call(), 0)
output = call_4719
output2 = call_4720
func_4745 = relay.Function([], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4746 = func_4745_call()
output = call_4746
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4807 = relay.var("var_4807", dtype = "uint64", shape = ())#candidate|4807|()|var|uint64
var_4808 = relay.var("var_4808", dtype = "uint64", shape = (6, 13, 5))#candidate|4808|(6, 13, 5)|var|uint64
bop_4809 = relay.bitwise_and(var_4807.astype('uint64'), var_4808.astype('uint64')) # shape=(6, 13, 5)
output = bop_4809
output2 = bop_4809
func_4816 = relay.Function([var_4807,var_4808,], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mutated_mod.get_global_var('func_4816')
var_4818 = relay.var("var_4818", dtype = "uint64", shape = ())#candidate|4818|()|var|uint64
var_4819 = relay.var("var_4819", dtype = "uint64", shape = (6, 13, 5))#candidate|4819|(6, 13, 5)|var|uint64
call_4817 = func_4816_call(var_4818,var_4819,)
output = call_4817
func_4820 = relay.Function([var_4818,var_4819,], output)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_4835 = relay.TupleGetItem(func_3446_call(), 1)
call_4836 = relay.TupleGetItem(func_3448_call(), 1)
output = call_4835
output2 = call_4836
func_4847 = relay.Function([], output)
mod['func_4847'] = func_4847
mod = relay.transform.InferType()(mod)
output = func_4847()
func_4848 = relay.Function([], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_4879 = relay.TupleGetItem(func_2795_call(), 5)
call_4880 = relay.TupleGetItem(func_2796_call(), 5)
output = relay.Tuple([call_4879,])
output2 = relay.Tuple([call_4880,])
func_4888 = relay.Function([], output)
mod['func_4888'] = func_4888
mod = relay.transform.InferType()(mod)
output = func_4888()
func_4889 = relay.Function([], output)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1750_call = mod.get_global_var('func_1750')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_4909 = relay.TupleGetItem(func_1750_call(), 2)
call_4910 = relay.TupleGetItem(func_1752_call(), 2)
output = relay.Tuple([call_4909,])
output2 = relay.Tuple([call_4910,])
func_4959 = relay.Function([], output)
mod['func_4959'] = func_4959
mod = relay.transform.InferType()(mod)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4959_call = mutated_mod.get_global_var('func_4959')
call_4960 = func_4959_call()
output = call_4960
func_4961 = relay.Function([], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_5004 = relay.TupleGetItem(func_3023_call(), 3)
call_5005 = relay.TupleGetItem(func_3025_call(), 3)
var_5011 = relay.var("var_5011", dtype = "uint8", shape = (16, 4, 11))#candidate|5011|(16, 4, 11)|var|uint8
bop_5012 = relay.mod(call_5004.astype('float64'), relay.reshape(var_5011.astype('float64'), relay.shape_of(call_5004))) # shape=(16, 4, 11)
bop_5015 = relay.mod(call_5005.astype('float64'), relay.reshape(var_5011.astype('float64'), relay.shape_of(call_5005))) # shape=(16, 4, 11)
output = relay.Tuple([bop_5012,])
output2 = relay.Tuple([bop_5015,])
func_5025 = relay.Function([var_5011,], output)
mod['func_5025'] = func_5025
mod = relay.transform.InferType()(mod)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5026 = relay.var("var_5026", dtype = "uint8", shape = (16, 4, 11))#candidate|5026|(16, 4, 11)|var|uint8
func_5025_call = mutated_mod.get_global_var('func_5025')
call_5027 = func_5025_call(var_5026)
output = call_5027
func_5028 = relay.Function([var_5026], output)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_5087 = relay.TupleGetItem(func_2414_call(), 0)
call_5088 = relay.TupleGetItem(func_2416_call(), 0)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_5091 = relay.TupleGetItem(func_759_call(), 3)
call_5092 = relay.TupleGetItem(func_760_call(), 3)
func_4495_call = mod.get_global_var('func_4495')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_5109 = func_4495_call()
call_5110 = func_4495_call()
uop_5125 = relay.atan(call_5109.astype('float64')) # shape=(11, 16, 8)
uop_5127 = relay.atan(call_5110.astype('float64')) # shape=(11, 16, 8)
uop_5133 = relay.acosh(uop_5125.astype('float32')) # shape=(11, 16, 8)
uop_5135 = relay.acosh(uop_5127.astype('float32')) # shape=(11, 16, 8)
bop_5141 = relay.subtract(uop_5133.astype('uint64'), relay.reshape(call_5109.astype('uint64'), relay.shape_of(uop_5133))) # shape=(11, 16, 8)
bop_5144 = relay.subtract(uop_5135.astype('uint64'), relay.reshape(call_5110.astype('uint64'), relay.shape_of(uop_5135))) # shape=(11, 16, 8)
output = relay.Tuple([call_5087,call_5091,bop_5141,])
output2 = relay.Tuple([call_5088,call_5092,bop_5144,])
func_5147 = relay.Function([], output)
mod['func_5147'] = func_5147
mod = relay.transform.InferType()(mod)
output = func_5147()
func_5148 = relay.Function([], output)
mutated_mod['func_5148'] = func_5148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_5149 = func_807_call()
call_5150 = func_807_call()
output = call_5149
output2 = call_5150
func_5162 = relay.Function([], output)
mod['func_5162'] = func_5162
mod = relay.transform.InferType()(mod)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mutated_mod.get_global_var('func_5162')
call_5163 = func_5162_call()
output = call_5163
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mod.get_global_var('func_1890')
func_1891_call = mutated_mod.get_global_var('func_1891')
call_5280 = relay.TupleGetItem(func_1890_call(), 1)
call_5281 = relay.TupleGetItem(func_1891_call(), 1)
func_1890_call = mod.get_global_var('func_1890')
func_1891_call = mutated_mod.get_global_var('func_1891')
call_5283 = relay.TupleGetItem(func_1890_call(), 0)
call_5284 = relay.TupleGetItem(func_1891_call(), 0)
output = relay.Tuple([call_5280,call_5283,])
output2 = relay.Tuple([call_5281,call_5284,])
func_5291 = relay.Function([], output)
mod['func_5291'] = func_5291
mod = relay.transform.InferType()(mod)
output = func_5291()
func_5292 = relay.Function([], output)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_5323 = relay.TupleGetItem(func_4194_call(), 3)
call_5324 = relay.TupleGetItem(func_4195_call(), 3)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_5334 = relay.TupleGetItem(func_759_call(), 3)
call_5335 = relay.TupleGetItem(func_760_call(), 3)
var_5362 = relay.var("var_5362", dtype = "float32", shape = (2304,))#candidate|5362|(2304,)|var|float32
bop_5363 = relay.divide(call_5334.astype('float32'), relay.reshape(var_5362.astype('float32'), relay.shape_of(call_5334))) # shape=(2304,)
bop_5366 = relay.divide(call_5335.astype('float32'), relay.reshape(var_5362.astype('float32'), relay.shape_of(call_5335))) # shape=(2304,)
output = relay.Tuple([call_5323,bop_5363,])
output2 = relay.Tuple([call_5324,bop_5366,])
func_5367 = relay.Function([var_5362,], output)
mod['func_5367'] = func_5367
mod = relay.transform.InferType()(mod)
mutated_mod['func_5367'] = func_5367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5368 = relay.var("var_5368", dtype = "float32", shape = (2304,))#candidate|5368|(2304,)|var|float32
func_5367_call = mutated_mod.get_global_var('func_5367')
call_5369 = func_5367_call(var_5368)
output = call_5369
func_5370 = relay.Function([var_5368], output)
mutated_mod['func_5370'] = func_5370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_5381 = relay.TupleGetItem(func_3287_call(), 0)
call_5382 = relay.TupleGetItem(func_3288_call(), 0)
output = relay.Tuple([call_5381,])
output2 = relay.Tuple([call_5382,])
func_5386 = relay.Function([], output)
mod['func_5386'] = func_5386
mod = relay.transform.InferType()(mod)
output = func_5386()
func_5387 = relay.Function([], output)
mutated_mod['func_5387'] = func_5387
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5493 = relay.const([[[8,3],[1,4],[-9,2],[-1,-9],[-1,8],[6,6],[8,-3],[-5,6],[8,-5],[-7,1],[-1,2],[-7,10],[9,7]],[[-4,1],[3,8],[9,-1],[5,-6],[-6,8],[9,-1],[2,6],[1,-7],[6,-8],[2,-7],[2,-9],[-6,9],[3,-1]],[[-7,1],[-4,-9],[10,-2],[1,-5],[8,5],[-2,6],[1,-1],[-1,7],[7,-5],[4,-7],[-9,-1],[9,-5],[-10,8]],[[7,1],[9,10],[-6,-8],[-4,-3],[-9,1],[9,10],[9,-6],[8,-2],[-6,-10],[-9,-5],[-7,10],[-7,10],[-3,-4]],[[4,-2],[-9,-4],[10,1],[3,3],[2,-8],[10,-10],[1,3],[-2,8],[-10,9],[-9,-8],[10,-7],[1,-6],[-7,-3]],[[2,-5],[5,9],[-4,-3],[7,4],[6,-7],[3,1],[3,10],[4,8],[-7,1],[1,-9],[-6,7],[-6,-1],[7,1]],[[1,6],[1,-7],[-9,1],[10,-8],[-1,-5],[-1,2],[7,10],[-3,-4],[2,10],[7,-10],[-4,2],[4,-4],[1,2]],[[4,-9],[-9,-5],[-7,7],[-10,-7],[-8,-3],[10,6],[-9,9],[-2,2],[-6,6],[-8,-8],[-9,-6],[-3,6],[-10,4]],[[6,3],[2,5],[-2,-9],[8,4],[8,10],[-6,-6],[1,-2],[3,-2],[6,4],[7,2],[-6,10],[8,-9],[5,-2]],[[8,-1],[2,-2],[7,-1],[9,-1],[-7,-10],[3,9],[3,8],[7,-8],[-9,-6],[2,5],[-9,-2],[-4,-9],[-7,-3]],[[8,-4],[10,-10],[3,4],[6,-3],[5,8],[4,6],[-5,10],[3,-4],[7,-1],[-9,4],[8,-6],[-7,5],[-6,-7]],[[2,-2],[-6,1],[-6,-10],[1,8],[4,-4],[1,9],[8,9],[4,8],[-9,7],[1,-5],[-10,-7],[-8,-5],[-8,-5]],[[8,6],[-5,-1],[1,8],[-8,-5],[2,-5],[7,-5],[9,-5],[8,6],[1,1],[-9,8],[-2,9],[-3,10],[-6,-6]],[[-6,-6],[-1,-2],[1,7],[1,2],[10,9],[-8,3],[-5,-5],[-7,4],[3,8],[2,-5],[7,-9],[-9,8],[2,-3]],[[-6,-2],[-9,-1],[-7,10],[8,-6],[-8,-5],[2,-5],[4,-10],[1,-7],[-2,-9],[5,9],[-7,-3],[-9,-5],[-9,-3]]], dtype = "uint8")#candidate|5493|(15, 13, 2)|const|uint8
var_5494 = relay.var("var_5494", dtype = "uint8", shape = (15, 13, 2))#candidate|5494|(15, 13, 2)|var|uint8
bop_5495 = relay.logical_xor(const_5493.astype('uint8'), relay.reshape(var_5494.astype('uint8'), relay.shape_of(const_5493))) # shape=(15, 13, 2)
output = bop_5495
output2 = bop_5495
func_5500 = relay.Function([var_5494,], output)
mod['func_5500'] = func_5500
mod = relay.transform.InferType()(mod)
var_5501 = relay.var("var_5501", dtype = "uint8", shape = (15, 13, 2))#candidate|5501|(15, 13, 2)|var|uint8
output = func_5500(var_5501)
func_5502 = relay.Function([var_5501], output)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4888_call = mod.get_global_var('func_4888')
func_4889_call = mutated_mod.get_global_var('func_4889')
call_5522 = relay.TupleGetItem(func_4888_call(), 0)
call_5523 = relay.TupleGetItem(func_4889_call(), 0)
output = relay.Tuple([call_5522,])
output2 = relay.Tuple([call_5523,])
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mutated_mod.get_global_var('func_5533')
call_5534 = func_5533_call()
output = call_5534
func_5535 = relay.Function([], output)
mutated_mod['func_5535'] = func_5535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5565 = relay.var("var_5565", dtype = "float32", shape = ())#candidate|5565|()|var|float32
var_5566 = relay.var("var_5566", dtype = "float32", shape = (13, 2, 7))#candidate|5566|(13, 2, 7)|var|float32
bop_5567 = relay.greater(var_5565.astype('bool'), var_5566.astype('bool')) # shape=(13, 2, 7)
output = relay.Tuple([bop_5567,])
output2 = relay.Tuple([bop_5567,])
func_5589 = relay.Function([var_5565,var_5566,], output)
mod['func_5589'] = func_5589
mod = relay.transform.InferType()(mod)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5589_call = mutated_mod.get_global_var('func_5589')
var_5591 = relay.var("var_5591", dtype = "float32", shape = ())#candidate|5591|()|var|float32
var_5592 = relay.var("var_5592", dtype = "float32", shape = (13, 2, 7))#candidate|5592|(13, 2, 7)|var|float32
call_5590 = func_5589_call(var_5591,var_5592,)
output = call_5590
func_5593 = relay.Function([var_5591,var_5592,], output)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_5632 = func_3742_call()
call_5633 = func_3742_call()
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_5636 = func_2677_call()
call_5637 = func_2677_call()
output = relay.Tuple([call_5632,call_5636,])
output2 = relay.Tuple([call_5633,call_5637,])
func_5647 = relay.Function([], output)
mod['func_5647'] = func_5647
mod = relay.transform.InferType()(mod)
output = func_5647()
func_5648 = relay.Function([], output)
mutated_mod['func_5648'] = func_5648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1962_call = mod.get_global_var('func_1962')
func_1964_call = mutated_mod.get_global_var('func_1964')
call_5722 = relay.TupleGetItem(func_1962_call(), 0)
call_5723 = relay.TupleGetItem(func_1964_call(), 0)
func_2526_call = mod.get_global_var('func_2526')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_5738 = relay.TupleGetItem(func_2526_call(), 1)
call_5739 = relay.TupleGetItem(func_2527_call(), 1)
output = relay.Tuple([call_5722,call_5738,])
output2 = relay.Tuple([call_5723,call_5739,])
func_5748 = relay.Function([], output)
mod['func_5748'] = func_5748
mod = relay.transform.InferType()(mod)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5749 = func_5748_call()
output = call_5749
func_5750 = relay.Function([], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3486_call = mutated_mod.get_global_var('func_3486')
call_5751 = relay.TupleGetItem(func_3485_call(), 0)
call_5752 = relay.TupleGetItem(func_3486_call(), 0)
output = call_5751
output2 = call_5752
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
output = func_5768()
func_5769 = relay.Function([], output)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mod.get_global_var('func_2526')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_5790 = relay.TupleGetItem(func_2526_call(), 0)
call_5791 = relay.TupleGetItem(func_2527_call(), 0)
var_5810 = relay.var("var_5810", dtype = "float64", shape = (16, 4, 11))#candidate|5810|(16, 4, 11)|var|float64
bop_5811 = relay.bitwise_and(call_5790.astype('int8'), relay.reshape(var_5810.astype('int8'), relay.shape_of(call_5790))) # shape=(16, 4, 11)
bop_5814 = relay.bitwise_and(call_5791.astype('int8'), relay.reshape(var_5810.astype('int8'), relay.shape_of(call_5791))) # shape=(16, 4, 11)
func_4093_call = mod.get_global_var('func_4093')
func_4096_call = mutated_mod.get_global_var('func_4096')
const_5822 = relay.const([-8.869842,7.401030,-0.850487,-3.356908,0.811929,8.101783,5.185513,7.841517,8.111756,0.244634,-6.638756,-3.691583,-7.548860,5.582943,8.850973,4.994509,9.931730,0.104348,9.396891,-0.117353,8.661340,-2.217163,7.727889,6.867436,-6.789796,8.598975,-2.978851,-8.845678,7.120425,9.380457,-6.565071,4.798327,4.085352,0.717781,-0.501613,0.599921,-6.140146,0.094145,4.901444,-0.179960,9.298444,-4.139082,7.752433,4.489482,9.194569,-1.864866,9.538774,3.518042,-7.547103,9.840767,-0.510131,0.564706,5.346751,-7.087799,3.198832,-5.358542,-5.642727,9.651134,5.359710,1.888661,2.063267,-1.975646,7.459872,1.787103,2.863703,-2.429757,-9.708668,-1.721720,-4.394348,-6.483179,3.846612,3.374617,-3.751493,-0.385425,6.094526,-5.060939,6.520907,7.605795,-7.496014,-1.949138,-2.824712,7.493459,-1.345432,-4.422686,-1.966912,9.389824,5.446373,2.049216,1.573195,-6.981880,6.994259,1.804519,1.926795,7.630715,7.137562,2.081596,5.523464,-8.273530,-7.331748,-6.160906,-5.076208,0.917804,-5.833133,1.397302,-0.740573,-7.937701,-0.936565,-8.672621,7.352557,9.145825,3.159514,-7.962806,7.347798,6.117272,3.595406,-2.012836,0.677655,9.091829,-8.361215,9.808477,-9.196349,2.887667,7.032729,8.159081,0.918657,0.345479,5.216317,6.344987,6.706381,5.741396,1.195859,-2.339631,6.629211,-0.637328,-4.203972,-8.064486,-0.079718,6.913615,6.533880,-5.069949,3.076595,1.384548,6.894519,5.237226,1.781308,1.465930,-5.449309,1.721140,8.727568,0.759877,1.752503,6.229468,7.229604,0.176803,3.931608,-4.205900,-6.874573,6.274562,-9.119474,-7.871860,1.455155,-7.877798,6.221776,0.299355,-4.549819,-4.297752,-9.272839,0.313218,-9.141642,-6.925389,-9.378344,-0.012536,2.665289,-3.074484,-2.972255,9.240862,-0.493884,0.559685,-8.372156,-9.775509,3.679019,-9.582957,-2.626193,-3.280176,6.076286,-3.300990,0.234295,-4.191719,6.376113,-1.641380,1.780075,8.394429,-3.626348,1.070887,-6.126079,2.110469,-9.191635,8.191833,3.836956,1.108782,3.187377,-5.454893,-6.658357,2.852060,2.884943,4.963169,5.299843,-5.014499,7.982247,-9.136833,4.974792,9.578042,-4.408193,7.604804,-1.217326,-7.595722,-4.936080,-8.080924,8.939156,-9.534891,-3.408795,4.182580,9.788520,4.393188,8.922654,-6.269920,8.259593,-4.480207,-1.102949,4.139399,-2.567091,-7.574980,-0.263656,7.822287,-1.318048,-7.104416,8.731953,0.515467,0.123701,8.529286,-4.344810,3.986327,6.353312,3.254639,4.196930,5.517076,-5.044827,1.099719,-9.220575,-3.789264,-1.103176,3.263509,-4.068201,-2.872215,5.455844,-2.636031,8.438695,1.374993,1.308562,6.726163,2.621500,-4.756888,-5.397911,-0.470587,-5.455863,-0.548493,1.921512,-9.662178,-5.104440,3.817994,-9.828377,9.748196,-5.225483,3.161558,-9.643532,-8.521339,9.150385,0.076796,-1.483549,-0.439592,6.052542,-5.578990,1.929625,-5.194659,7.980568,4.445765,-9.040674,-8.563445,-9.340952,-2.390612,-2.136332,-2.324646,-6.758545,6.675862,-4.820351,1.681073,-8.911376,-1.401432,3.344066,9.740898,9.528373,-6.467464,-0.626392,-2.044643,-8.886336,1.979313,9.451093,-2.282198,2.546307,1.945363,-3.927363,8.483800,-4.148140,-1.480066,5.982504,-8.402997,-5.035702,-2.928221,3.629119,3.812641,0.759502,-4.010975,0.366822,-3.355343,8.863618,-8.852269,7.605030,-1.901492,5.117265,7.086800,2.331647,2.947060,-4.265354,-6.442173,-1.677510,-1.168522,-9.804993,2.385123,8.396353,-4.729890,0.205780,-1.738864,2.319296,-0.810309,7.632996,7.079427,2.238612,0.989623,-1.178983,-3.461134,5.209990,-7.505528,1.216635,6.876452,-7.901567,9.297951,-4.927938,-9.169386,8.285703,1.988876,-6.612803,6.628864,1.188079,4.998339,-2.397417,0.236291,-6.773872,1.826973,9.927328,3.241875,-8.244272,2.256966,-6.675925,-5.538270,-5.806556,0.985002,-0.014920,-9.009753,1.438404,3.819797,2.581228,9.283959,6.266409,-2.388492,-4.814860,-1.812553,-5.341933,9.027923,0.178641,-3.229903,4.601320,-1.302270,-4.078721,-2.633870,-6.159511,4.591294,-8.217172,-3.709244,6.935039,-4.011594,-7.634823,7.203839,-3.170121,2.482130,-6.610186,7.892835,2.454881,-2.786205,-2.090090,1.694469,-8.412863,9.352650,-0.984174,-3.733676,-5.771203,4.186412,4.047013,2.642690,1.187690,5.814243], dtype = "float32")#candidate|5822|(420,)|const|float32
call_5821 = relay.TupleGetItem(func_4093_call(relay.reshape(const_5822.astype('float32'), [6, 5, 14])), 0)
call_5823 = relay.TupleGetItem(func_4096_call(relay.reshape(const_5822.astype('float32'), [6, 5, 14])), 0)
output = relay.Tuple([bop_5811,call_5821,const_5822,])
output2 = relay.Tuple([bop_5814,call_5823,const_5822,])
func_5824 = relay.Function([var_5810,], output)
mod['func_5824'] = func_5824
mod = relay.transform.InferType()(mod)
var_5825 = relay.var("var_5825", dtype = "float64", shape = (16, 4, 11))#candidate|5825|(16, 4, 11)|var|float64
output = func_5824(var_5825)
func_5826 = relay.Function([var_5825], output)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5769_call = mutated_mod.get_global_var('func_5769')
call_5877 = func_5768_call()
call_5878 = func_5768_call()
func_1368_call = mod.get_global_var('func_1368')
func_1371_call = mutated_mod.get_global_var('func_1371')
var_5890 = relay.var("var_5890", dtype = "float64", shape = (196,))#candidate|5890|(196,)|var|float64
call_5889 = relay.TupleGetItem(func_1368_call(relay.reshape(var_5890.astype('float64'), [4, 7, 7])), 2)
call_5891 = relay.TupleGetItem(func_1371_call(relay.reshape(var_5890.astype('float64'), [4, 7, 7])), 2)
uop_5897 = relay.sqrt(call_5889.astype('float64')) # shape=(1500,)
uop_5899 = relay.sqrt(call_5891.astype('float64')) # shape=(1500,)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
var_5918 = relay.var("var_5918", dtype = "float32", shape = (910,))#candidate|5918|(910,)|var|float32
var_5919 = relay.var("var_5919", dtype = "bool", shape = (1152,))#candidate|5919|(1152,)|var|bool
call_5917 = relay.TupleGetItem(func_433_call(relay.reshape(var_5918.astype('float32'), [7, 10, 13]), relay.reshape(var_5918.astype('float32'), [7, 10, 13]), relay.reshape(var_5919.astype('bool'), [96, 12]), ), 4)
call_5920 = relay.TupleGetItem(func_437_call(relay.reshape(var_5918.astype('float32'), [7, 10, 13]), relay.reshape(var_5918.astype('float32'), [7, 10, 13]), relay.reshape(var_5919.astype('bool'), [96, 12]), ), 4)
bop_5927 = relay.bitwise_xor(call_5889.astype('uint32'), relay.reshape(uop_5897.astype('uint32'), relay.shape_of(call_5889))) # shape=(1500,)
bop_5930 = relay.bitwise_xor(call_5891.astype('uint32'), relay.reshape(uop_5899.astype('uint32'), relay.shape_of(call_5891))) # shape=(1500,)
bop_5938 = relay.greater_equal(uop_5897.astype('bool'), relay.reshape(bop_5927.astype('bool'), relay.shape_of(uop_5897))) # shape=(1500,)
bop_5941 = relay.greater_equal(uop_5899.astype('bool'), relay.reshape(bop_5930.astype('bool'), relay.shape_of(uop_5899))) # shape=(1500,)
uop_5969 = relay.sinh(bop_5938.astype('float64')) # shape=(1500,)
uop_5971 = relay.sinh(bop_5941.astype('float64')) # shape=(1500,)
output = relay.Tuple([call_5877,var_5890,call_5917,var_5918,var_5919,uop_5969,])
output2 = relay.Tuple([call_5878,var_5890,call_5920,var_5918,var_5919,uop_5971,])
func_5981 = relay.Function([var_5890,var_5918,var_5919,], output)
mod['func_5981'] = func_5981
mod = relay.transform.InferType()(mod)
mutated_mod['func_5981'] = func_5981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5981_call = mutated_mod.get_global_var('func_5981')
var_5983 = relay.var("var_5983", dtype = "float64", shape = (196,))#candidate|5983|(196,)|var|float64
var_5984 = relay.var("var_5984", dtype = "float32", shape = (910,))#candidate|5984|(910,)|var|float32
var_5985 = relay.var("var_5985", dtype = "bool", shape = (1152,))#candidate|5985|(1152,)|var|bool
call_5982 = func_5981_call(var_5983,var_5984,var_5985,)
output = call_5982
func_5986 = relay.Function([var_5983,var_5984,var_5985,], output)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2796_call = mutated_mod.get_global_var('func_2796')
call_6000 = relay.TupleGetItem(func_2795_call(), 3)
call_6001 = relay.TupleGetItem(func_2796_call(), 3)
func_5147_call = mod.get_global_var('func_5147')
func_5148_call = mutated_mod.get_global_var('func_5148')
call_6007 = relay.TupleGetItem(func_5147_call(), 1)
call_6008 = relay.TupleGetItem(func_5148_call(), 1)
func_4709_call = mod.get_global_var('func_4709')
func_4713_call = mutated_mod.get_global_var('func_4713')
var_6025 = relay.var("var_6025", dtype = "int32", shape = (429, 3))#candidate|6025|(429, 3)|var|int32
call_6024 = relay.TupleGetItem(func_4709_call(relay.reshape(var_6025.astype('int32'), [9, 13, 11]), relay.reshape(var_6025.astype('int32'), [9, 13, 11]), ), 3)
call_6026 = relay.TupleGetItem(func_4713_call(relay.reshape(var_6025.astype('int32'), [9, 13, 11]), relay.reshape(var_6025.astype('int32'), [9, 13, 11]), ), 3)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_6048 = relay.TupleGetItem(func_1067_call(), 0)
call_6049 = relay.TupleGetItem(func_1068_call(), 0)
var_6056 = relay.var("var_6056", dtype = "float32", shape = (2304,))#candidate|6056|(2304,)|var|float32
bop_6057 = relay.logical_or(call_6007.astype('bool'), relay.reshape(var_6056.astype('bool'), relay.shape_of(call_6007))) # shape=(2304,)
bop_6060 = relay.logical_or(call_6008.astype('bool'), relay.reshape(var_6056.astype('bool'), relay.shape_of(call_6008))) # shape=(2304,)
output = relay.Tuple([call_6000,call_6024,var_6025,call_6048,bop_6057,])
output2 = relay.Tuple([call_6001,call_6026,var_6025,call_6049,bop_6060,])
func_6067 = relay.Function([var_6025,var_6056,], output)
mod['func_6067'] = func_6067
mod = relay.transform.InferType()(mod)
var_6068 = relay.var("var_6068", dtype = "int32", shape = (429, 3))#candidate|6068|(429, 3)|var|int32
var_6069 = relay.var("var_6069", dtype = "float32", shape = (2304,))#candidate|6069|(2304,)|var|float32
output = func_6067(var_6068,var_6069,)
func_6070 = relay.Function([var_6068,var_6069,], output)
mutated_mod['func_6070'] = func_6070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3500_call = mod.get_global_var('func_3500')
func_3501_call = mutated_mod.get_global_var('func_3501')
call_6092 = func_3500_call()
call_6093 = func_3500_call()
output = relay.Tuple([call_6092,])
output2 = relay.Tuple([call_6093,])
func_6095 = relay.Function([], output)
mod['func_6095'] = func_6095
mod = relay.transform.InferType()(mod)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6095_call = mutated_mod.get_global_var('func_6095')
call_6096 = func_6095_call()
output = call_6096
func_6097 = relay.Function([], output)
mutated_mod['func_6097'] = func_6097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6104 = relay.var("var_6104", dtype = "float32", shape = ())#candidate|6104|()|var|float32
var_6105 = relay.var("var_6105", dtype = "float32", shape = (7, 6, 16))#candidate|6105|(7, 6, 16)|var|float32
bop_6106 = relay.divide(var_6104.astype('float32'), var_6105.astype('float32')) # shape=(7, 6, 16)
bop_6113 = relay.not_equal(var_6105.astype('bool'), relay.reshape(bop_6106.astype('bool'), relay.shape_of(var_6105))) # shape=(7, 6, 16)
func_3475_call = mod.get_global_var('func_3475')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_6126 = relay.TupleGetItem(func_3475_call(), 1)
call_6127 = relay.TupleGetItem(func_3476_call(), 1)
output = relay.Tuple([bop_6113,call_6126,])
output2 = relay.Tuple([bop_6113,call_6127,])
func_6134 = relay.Function([var_6104,var_6105,], output)
mod['func_6134'] = func_6134
mod = relay.transform.InferType()(mod)
var_6135 = relay.var("var_6135", dtype = "float32", shape = ())#candidate|6135|()|var|float32
var_6136 = relay.var("var_6136", dtype = "float32", shape = (7, 6, 16))#candidate|6136|(7, 6, 16)|var|float32
output = func_6134(var_6135,var_6136,)
func_6137 = relay.Function([var_6135,var_6136,], output)
mutated_mod['func_6137'] = func_6137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_6157 = func_4537_call()
call_6158 = func_4537_call()
const_6159 = relay.const([-5.771200,-0.421182,3.350972,1.661488,7.728885,-2.424280,-0.525606,6.363744,1.839827,9.215453,-0.055397,-4.634161,-4.154651,9.561445,-2.540558,-3.215304,-2.715508,1.799070,8.328796,-4.036752,2.554912,-4.675449,9.483756,-5.034321,-5.558654,-2.221560,1.577387,-8.339686,5.080046,0.525898,-7.381097,-5.576924,-3.957519,-8.808102,1.404117,-9.865216,8.562223,-4.784182,-2.381793,7.883210,-3.441000,-2.598774,7.052333,-3.425613,-4.665269,-8.739186,7.895098,-6.525701,-9.912862,-5.839124,3.443576,-0.908623,7.849485,7.458572,2.945851,-9.042933,-0.323792,-3.561620,1.744279,2.696036,-4.023472,2.157080,-2.193914,9.593918,-9.525861,-6.394364,-9.036586,1.045097,-8.743098,-7.531728,9.882340,4.746904,4.620935,5.256694,-0.734813,-7.351074,-3.506973,0.414965,8.418560,1.252098,-7.773018,8.997849,1.225042,-9.687775,-4.870843,2.399563,4.143835,3.229190,-5.469506,5.086590,8.456824,5.710091,3.668700,0.839013,5.999360,6.041298,-4.925392,5.307389,7.184487,9.550424,-0.728533,0.022062,-3.779005,-3.490300,-9.136363,2.754497,0.919313,8.782148,2.394175,-6.925733,-8.910995,-0.659317,-4.574584,-9.094035,0.294697,6.736445,-2.610993,8.865523,-9.592065,-7.454634,-2.365018,-0.049481,-1.159452,-8.315129,-6.994045,0.957955,-4.973714,-5.243252,4.377708,-9.728649,-7.036765,-6.848485,8.360846,5.794659,7.614391,-6.366590,-6.545270,1.640785,-4.194491,-7.526006,-5.480378,2.124334,-6.465240,-3.868417,-9.784439,-0.965603,-0.684300,-7.424524,4.118191,9.587159,3.374449,-3.151952,2.737393,-5.098011,1.936742,-7.771838,-7.401224,7.205043,6.329492,-7.105063,-9.949527,4.163965,5.643012,-8.813789,8.780849,1.677765,3.476807,-2.048862,-7.263865,2.792439,-4.637281,6.905659,2.621413,5.702436,-2.086534,6.116732,-1.534038,-3.621648,-6.421501,-3.574568,-5.340449,-2.131977,5.658295,-5.444446,4.479620,-6.356326,-6.890558,2.122502,-1.728105,-3.203778,-4.940546,5.573293,-7.082935,4.561214,7.981318,2.756467,1.493119,0.937626,-1.865683,-2.701642,3.797507,3.766968,3.863822,-8.587777,4.463820,-7.280748,-1.429205,1.169851,9.624205,1.385892,-8.111424,2.018733,-0.024215,6.721466,-8.768464,-6.874022,-8.787181,0.482243,-5.475883,6.531887,8.550253,-8.015780,9.965041,-8.028521,-2.204979,4.961997,-0.360653,-7.791402,-5.771249,-7.018372,-6.152302,-8.207202,-9.124164,-8.061606,3.445036,9.331919,9.501992,-6.720902,5.130440,-1.658275,-4.984453,-2.947467,-7.045498,7.565156,-2.338189,3.666835,1.353234,9.990649,-5.025691,-7.113923,7.269332,-2.955628,6.623644,-9.697318,8.969682,-7.279416,-1.103125,5.028456,-9.634160,7.202780,-5.537454,8.569532,1.999766,5.877192,-2.037269,9.265333,8.937392,-2.751412,4.622343,7.547891,9.883939,-0.026831,0.060473,-7.727600,1.655988,-0.660636,4.724655,7.543341,7.216654,-4.534818,-3.343562,9.186811,5.121279,2.754022,-8.535123,1.584853,-0.162375,-5.359445,6.707878,6.686139,-6.176251,-8.635189,8.417380,-6.889041,1.405475,-9.184332,3.844971,6.940524,-2.630610,7.469370,-4.393821,-6.318169,-2.873789,-1.360653,-1.356392,-4.137526,6.652393,-3.979832,-6.360269,7.225661,6.400561,-9.282571,-5.831107,3.273701,-9.890575,5.030195,1.418267,4.189994,-9.240113,-7.574487,-6.963235,-5.458279,0.951067,-9.003695,8.399704,8.898267,-4.708521,1.152550,-8.087423,9.460703,6.667814,0.304523,-5.509359,7.346876,-2.643966,7.711396,-1.892550,-4.858048,-8.965355,-5.359718,0.918395,-1.507426,3.484135,-0.432988,-7.896312,-4.495562,-4.367005,9.211529,-8.840607,-9.154720,-0.747307,7.309175,2.415196,-5.177329,3.128973,8.926819,7.663879,-1.687871,-2.107933,-3.262506,-2.700587,-6.516250,-5.564153,2.112845,-0.884973,7.181181,-0.719016,-7.032073,-1.701340,4.980653,8.396929,-4.552018,8.238885,0.367246,2.027994,-7.941774,-5.381501,8.456565,-0.158987,7.083582,-3.985580,4.770526,-8.746273,-1.460875,1.582303,-1.989423,-1.992156,2.160300,2.826144,8.236126,-8.405759,-8.531138,1.452602,3.109295,-7.452119,-0.418966,7.496254,6.985330,0.449091,-6.068339,-0.872102,0.692949,-5.983302,-6.398859,0.028700,-5.920621,1.768741,-4.681397,-3.275219,6.474362,1.559285,6.278388,6.697352,-8.200470,-8.111035,6.177640,2.145741,-9.665867,9.674132,7.026648,-9.562000,-1.890634,-2.742658,-4.850527,-4.250611,2.475973,-2.911130,-2.026479,-2.131776,-5.312980,-0.107027,2.961336,7.831124,1.473868,-6.316741,8.653131,-3.090999,-1.742017,3.044008,-4.745309,-5.821981,9.955644,-0.880687,1.567785,-7.544975,-8.060793,2.503648,-3.414615,0.607830,-8.554423,-4.148703,-9.620647,9.096202,2.488963,-3.747954,1.705520,5.695011,4.562606,-9.550531,-6.323695,-4.125424,0.594235,-8.559241,-3.292857,5.706803,7.179272,7.805074,5.947720,4.041063,5.919818,-3.757160,-0.314045,2.599280,4.219339,-1.530856,-0.656175,-3.465021,1.832655,0.894664,-0.683035,-1.931420,-9.980148,-0.764301,-5.482768,-5.892850,2.909249,-4.364819,-2.570513,9.372958,-1.611142,-7.511366,-0.046963,-1.714978,7.433204,-4.704588,6.229770,-7.237704,-3.139336,7.584316,-1.083101,-0.526715,-7.420500,5.819222,-4.845673,-8.895540,5.269403,0.858498,-4.237988,3.322274,6.960172,5.370796,-2.135354,-2.970394,-0.418821,1.379875,4.000998,-7.111342,9.402359,-6.175696,-0.080985,-6.703821,7.955605,-8.587568,6.717294,-6.275652,2.061654,0.109535,9.954082,-2.438765,6.388786,-4.926049,0.050065,-3.482061,-0.886816,-7.808878,-6.671583,-1.352094,-2.387048,8.035192,-1.902150,-0.771469,3.783843,9.674632,6.502356,4.202690,-8.296926,7.343641,-8.329591,-2.792195,-7.013325,-0.520498,8.457930,4.582291,5.057337,0.367036,-3.310211,1.717902,-5.480811,-9.273579,-5.688630,-4.885447,2.102434,-5.281001,-0.965366,-9.497753,1.443251,5.684204,-1.602689,-0.012932,0.543808,5.675399,0.412509,8.875893,-9.504290,8.027479,8.645520,3.331761,1.186149,7.923779,-6.500366,-7.041352,-3.506312,-8.860513,-3.390360,-3.056181,-0.843640,5.757077,-8.085800,7.153514,-2.706522,6.656046,8.230731,-3.417042,-8.329392,-2.416586,-0.746743,-1.624383,-8.312007,2.697441,9.833534,-5.285818,7.443870,1.619927,-5.176135,-0.051999,8.329953,6.036234,-9.234531,1.229748,0.895056,4.326964,-4.225902,-9.594413,-6.397790,-8.835081,4.382153,-1.585466,-7.846166,-9.026021,-5.311434,-1.845645,-0.857471,-7.057964,6.940105,9.663784,8.138775,-1.535498,-0.987255,-4.847489,-2.078865,-5.295611,3.443231,2.711334,-6.809160,1.277592,-7.078434,-5.381769,9.725844,-5.305506,-2.963246,8.923624,-7.995555,6.220104,-0.254116,-9.307034,-0.682223,-6.894535,7.462892,-5.574987,3.362683,-0.771612,4.533341,-7.420001,-1.792822,0.329142,-9.465850,-1.930979,4.535287,7.907207,-9.157971,-9.424345,-6.069894,-5.679269,-9.677544,9.052145,-8.129554,-7.076671,-7.698977,-2.768511,3.471262,5.054622,-0.719485,-7.632217,9.834401,6.032691,6.250462,9.095256,-4.018032,7.051983,-6.839511,-4.104507,6.983535,-4.134731,7.243622,-6.674334,-1.835740,-2.881840,7.097779,-7.694165,-7.613562,-6.934431,-5.705355,3.610746,-7.973817,8.570193,5.643915,6.080990,-7.199891,-9.188990,7.201859,-2.862519,-5.336727,-0.225557,-9.795899,1.077942,6.454299,-5.363867,7.582583,-7.937269,7.999317,-3.231648,-1.046212,4.992006,6.030693,-3.364717,-7.720620,-2.064501,-9.760624,-7.335360,-5.716701,3.742413,-6.961817,6.984995,-8.729440,7.282683,0.598045,-9.659340,7.829186,9.641894,-4.254057,3.816726,-6.801771,6.565816,7.633222,4.263757,0.137909,5.911347,6.500036,2.537959,-3.741443,5.496476,-9.679188,9.698015,3.944554,-0.194580,3.509151,-6.944296,-8.959950,-0.803774,4.798052,2.330204,-8.602029,-7.914873,7.234462,5.876879,-8.187617,9.583828,5.498574,5.643082,9.686782,-3.719401,5.878578,2.196833,-0.074441,3.197626,5.425121,1.861425,9.270009,7.743818,7.202485,1.455757,0.437668,6.830099,2.886795,0.741044,-0.598734,6.124584,-2.195922,3.661595,-7.945634,7.905440,5.858041,-7.420325,-9.060496,6.776702,-4.554912,-2.972267,-5.058106,-3.988528,-9.008556,-9.227831,9.156451,-4.768571,-7.977063,6.765721,0.979765,0.984212,6.135457,8.338736,5.870674,3.355712,4.829085,-4.416262,4.254333,-8.896420,-5.037020,9.487483,-7.160981,-5.784329,4.840622,-7.439513,-4.787377,-2.274842,7.707923,7.629396,-8.079149,-7.981294,-1.461381,2.834045,-7.637360,6.041048,6.353461,-9.019711,9.691412,-7.150539,-6.231357,8.614912,-0.739820,-0.888281,8.659423,6.055877,8.077714,-0.834927,-4.075533,7.962746,1.976180,8.358359,9.189680,-7.375773,-3.496723,-6.077745,6.930002,5.329052,8.137385,9.525820,-2.245231,-3.500344,4.518890,3.345916,0.182071,-0.052974,-5.982525,1.179674,7.753780,-3.699143,-3.985708,6.059571,-6.771763,-1.316446,-1.440287,-1.968451,-4.042215,-3.546509,9.690330,6.612391,7.282631,4.529839,9.850328,7.524893,0.011307,9.948323,-3.909877,4.842843,3.862516,-8.028763,-9.066764,-9.039724,-4.691015,-9.701084,5.322694,-8.743191,2.126977,-2.242940,-3.334809,2.072944,1.697096,1.634754,7.188666,-0.549268,-9.186841,6.802770,4.853560,6.360852,-8.351645,-5.861666,8.304114,-4.185837,-2.899919,-9.004988,9.397451,-7.368738,-6.226616,-2.202870,6.812247,-0.369456,-3.944916,-1.565243,-6.421989,4.946775,7.123313,-5.250129,-0.640621,0.621667,2.685979,4.072349,1.214259,4.949784,0.161289,-8.743867,-3.801671,0.382756,-2.491160,-5.059262,6.485063,7.982042,4.132237,-0.952645,2.981520,8.448182,8.216356,7.718710,-5.677662,-0.808211,-7.585088,-0.145217,3.936250,9.133510,7.223987,-7.939450,5.541466,3.041080,8.119772,-1.339397,3.463989,8.332879,-4.191157,-1.964392,3.831587,6.150303,0.908428,-5.588444,1.681642,-9.396979,-1.985653,1.868654,-8.335076,-1.014874,-5.937523,-1.410257,-5.861552,-2.891168,-8.168722,-2.279364,6.393667,-3.266672,3.553943,-9.944022,-1.496224,-3.848376,1.614230,4.829391,-4.878765,-0.827833,-7.856576,2.437626,-0.388471,-5.468291,-7.345524,4.749309,-3.690279,-3.839902,-9.860218,-3.577794,8.435124,9.514488,-1.910609,-3.370295,5.358038,-5.853111,-8.810827,-0.030332,9.446469,2.791613,1.704059,-5.615531,-2.828256,-1.000941,4.175819,-6.069356,4.972084,1.555828,-0.343558,-2.674807,-8.860042,5.934169,-9.987399,-7.372294,-5.244361,5.692693,-2.617182,9.586278,-7.372503,8.201865,-0.386634,-9.638256,-7.214095,-9.171412,-2.953174,-3.624435,1.883678,5.141817,1.978356,9.948032,6.264308,-2.610181,-9.883405,2.558062,9.622846,-9.475559,-4.529683,5.514309,1.160962,7.717856,-5.719467,-5.975304,8.203458,-3.211319,3.743593,2.865583,-3.787280,-5.742005,9.847394,-8.182448,8.983148,9.823472,6.952665,-3.922024,-4.256338,-7.466023,1.680179,-0.404414,-0.103776,2.130256,-9.854950,7.268821,-0.703572,-9.414011,8.817080,-9.282901,4.876529,-0.588984,-5.979277,5.106277,-0.434183,-2.038914,2.268871,-1.830647,4.966879,0.071824,-6.369315,-7.687759,2.090941,6.753049,6.955350,9.229812,5.936729,-6.256891,-8.955447,-5.408259,2.106006,-2.991173,4.162360,0.196001,-9.002768,-3.656786,3.595095,-2.834366,2.564505,3.700931,6.699401,-2.989986,-3.421044,1.450515,-9.636574,1.228775,-8.989677,-4.459344,-9.244942,-9.834995,4.433209,-2.612087,6.193305,7.873311,-6.158360,-1.713583,2.070186,-5.022860,4.539641,-4.815810,2.801335,1.607440,2.819091,1.790634,1.605176,-5.396535,-8.615532,5.589339,2.164072,7.030078,4.637983,-1.090094,-1.960583,-2.589084,-5.300027,6.949315,-6.011294,4.592694,5.623789,-6.047802,-3.353589,3.081368,7.514699,-1.423132,0.184986,-8.871112,3.695144,9.208195,1.999107,9.409326,-6.021865,0.733636,-7.650513,-7.236108,5.065346,-0.395626,8.565704,-9.563337,9.843181,-1.783988,-5.383197,9.650700,6.833813,6.522313,5.318934,-0.016359,-3.558994,-4.024891,-7.932718,-3.534606,2.693007,3.064163,-3.890094,5.811143,-4.862043,-2.266318,-0.909503,9.033730,-5.131999,-8.989073,0.346967,2.896538,-2.468276,-3.353062,-1.813970,-8.740263,-5.707412,-5.544086,-8.773693,-9.656086,8.550517,6.747707,-8.903388,1.723909,-0.544824,-7.448823,-7.903644,4.339469,-7.274826,9.663322,-9.253428,-3.787606,7.029221,8.999331,9.300510,2.571098,-5.218479,-1.630549,3.809928,7.341795,-6.197136,1.345582,8.394300,1.419715,1.673139,-8.552995,0.451772,-9.291531,4.991902,-6.668175,5.360551,-0.103044,-9.779516,-9.039927,-1.562946,8.452584,-5.914085,-7.755035,2.293753,8.385683,-1.749686,-1.601101,-9.235622,7.703226,-8.795331,-0.995590,6.511140,8.663470,-6.818763,4.647291,4.134483,9.145793,3.291171,5.878968,8.690791,7.382173,-2.557195,6.685210,-2.014844,3.050872,-9.955022,-4.072110,-3.080481,-4.391110,-4.247412,1.032562,-8.580632,3.793937,-3.739967,2.027274,0.368951,-5.021910,-9.982205,-6.281601,-0.461932,-9.236745,-6.992614,-7.270459,-0.986952,4.386334,-4.313585,0.747895,5.563724,-0.616132,2.605648,8.628267,1.100395,7.559561,-2.768014,-6.502509,1.870283,2.179192,-9.145937,-2.004236,-9.139145,4.964058,-2.972031,-0.863543,1.089599,-7.107884,-6.048704,0.306065,1.589395,6.321257,-1.215496,-8.973495,-1.927727,4.285882,5.631611,-6.539956,9.727489,-8.031541,-0.501729,0.622205,5.839130,-1.199046,-4.884235,8.684837,-5.073110,3.939143,3.012298,-3.930709,3.317046,-5.224102,8.644791,9.733963,-8.205169,9.884175,-4.989380,-7.735344,-0.409211,9.009762,-0.259034,-6.061635,8.722423,8.235261,0.331448,5.798534,-2.178633,0.718440,-2.413459,-9.456356,-5.658396,4.813145,7.414443,-3.303065,-7.330909,-1.471287,5.306549,-8.673555,-6.200755,4.799629,3.707903,-4.787720,-4.747952,-4.063898,-1.847345,5.654481,-9.021923,2.882222,-8.477331,5.825316,5.540902,7.545556,-3.503869,-9.623700,9.452260,-5.514008,-3.155950,-4.170532,-1.807934,5.381325,-3.981048,1.989227,3.474790,-7.178419,-0.709199,-6.783142,7.591069,-6.573273,7.055450,-2.101584,-8.479422,-9.434816,1.831609,1.162114,3.371358,0.906060,7.053021,-1.478632,1.901200,-3.712662,-6.803984,-1.981133,-6.493319,7.792045,6.468372,7.952017,-2.835006,-4.500389,-2.668399,7.651875,-2.207840,2.162657,1.742532,-1.115257,-1.670796,-1.828654,2.509249,-8.583504,-6.814094,-4.547795,0.968242,9.688961,3.588840,-6.456638,-4.590436,9.602054,-7.351176,-6.222444,-4.456177,-4.662528,-4.001293,6.913827,9.595670,3.614918,7.131586,5.475010,3.951936,-6.193905,-6.768079,7.361847,-4.706743,0.455659,6.972633,-2.191343,-5.216101,3.635376,4.402314,1.195971,-1.482262,-2.605808,-1.855958,2.739782,9.748113,-6.075320,-9.958716,-5.016227,-4.803170,8.257517,9.978119,8.938051,-4.392281,-6.126163,7.766329,4.093992,9.276406,0.171784,3.324592,4.191694,-2.162721,5.238703,6.181991,7.746117,7.698764,-2.983713,-0.247040,5.603258,-7.883220,-5.213384,3.558405,2.932001,-7.947028,-1.225320,5.708632,-6.811747,5.723825,-7.631300,5.146052,-2.818654,-1.919789,5.189303,-0.762977,-4.309824,9.677193,-6.221554,-0.243344,2.730333,-4.543260,-4.812602,3.093460,6.473957,-3.682261,-5.278982,2.216169,9.356447,3.233100,-2.372971,1.740278,-8.694714,9.407430,2.444814,-2.487397,-9.498139,-3.336565,7.048483,4.393975,-0.791794,-8.279075,8.292398,6.229674,-5.420007,-9.806494,-4.424112,7.238777,-7.725950,9.019681,-6.672489,-5.140065,-0.515949,7.783913,-0.223056,-7.923710,7.034657,4.756876,-6.224617,3.681334,4.105522,6.312060,6.008891,-7.745836,0.741032,2.081062,-9.753975,9.142490,-2.345806,-3.825852,3.552630,9.851988,2.900014,-0.118882,6.202011,-9.751443,7.652115,-4.480433,-1.246359,-7.046802,-1.574176,0.504980,0.174810,9.147655,-9.102290,-4.982577,-9.590812,-1.893378,5.915166,0.198775,-1.799557,8.400833,6.632506,-6.814144,6.104227,8.276979,-5.981769,-7.280181,7.380560,6.993103,1.854209,-6.931973,2.292313,7.852704,8.711406,9.228741,4.389885,6.054889,-5.345582,-6.209861,-8.231481,4.587117,5.988765,-9.563697,6.438195,-2.129399,9.750395,-8.500103,0.089133,4.881412,-9.869023,-7.134534,-0.876544,-7.427942,5.268801,-4.375187,-5.076153,-3.548930,0.262937,9.503571,-4.528181,5.459169,-5.687029,-1.009308,4.279162,-2.261221,-2.381293,5.448037,-6.132053,3.569573,6.745846,2.407704,4.967529,9.320634,-1.808134,0.411517,-4.017548,-0.166713,-7.650164,-7.862039,5.345210,1.799332,6.874423,-8.103743,-6.429184,1.184419,1.314657,9.385133,-1.810677,3.887274,0.431632,6.534118,4.250947,-1.662013,-3.996082,3.787856,8.914917,8.264112,-9.277128,-6.187170,8.975781,-1.459374,-6.194300,6.208145,-2.413423,0.030679,1.448617,3.714184,1.037424,-0.125695,-9.560749,0.856179,-3.411480,-8.634922,-5.777890,6.210598,-4.202272,-2.553834,5.428062,4.724999,-7.957372,-2.723174,1.680206,-0.330905,2.562175,-7.034410,-9.576091,-4.725168,-7.719714,3.090805,7.548383,-4.986937,-0.592930,6.412840,-1.534500,6.309064,2.965583,-5.535873,2.255722,8.439434,2.592213,-6.442190,7.568569,-8.560893,5.023289,-1.028192,-6.713138,-3.944785,0.759555,-5.352104,-7.954004,-6.204066,1.493537,-9.433060,7.849169,-0.943557,3.476504,4.007405,7.200966,-5.099335,0.888936,4.524027,4.378159,4.176130,9.052742,-4.974861,0.554075,-5.148759,4.539974,-6.916212,-0.630060,9.609911,6.359232,9.826674,-0.785018,-2.128672,-1.761485,8.639058,7.621361,4.377771,9.850860,3.016842,-0.540904,7.620204,-4.477131,1.365458,-3.180837,2.005497,0.585739,-1.160628,-9.794547,2.075436,3.543626,2.340914,8.860565,2.971357,-9.039065,-3.932735,-9.860824,1.851853,4.397094,-8.753523,5.922113,9.636112,-7.685976,1.347189,-3.482839,2.688763,4.161653,2.259433,7.539201,1.794684,0.262384,8.385236,-8.265788,-9.852606,1.730597,1.130146,-9.547739,4.297139,9.766794,-3.934213,6.096795,0.594543,-7.516249,-8.999643,8.717189,6.574983,5.191615,2.507332,4.001014,7.279187,-7.777788,-2.825169,0.611290,1.876693,-4.809392,3.306864,7.262351,-8.265394,1.286146,-9.657323,0.564882,2.170449,-9.778107,-3.409447,-6.724391,-5.354855,-0.240155,-6.333700,-7.035473,-7.807644,6.889711,-7.873812,-5.926485,-1.063151,1.613461,2.235803,-0.767869,0.624309,9.472242,3.293045,2.228185,-2.184775,-3.242510,-4.112593,-7.774434,8.567673,-5.492967,-2.973157,-0.311755,-6.377874,4.814424,-2.744221,-4.456626,-8.231150,3.767450,5.745349,2.732878,2.322082,-2.544596,-9.543415,-9.116452,-5.113623,-6.554162,-9.523173,0.646728,-9.649942,-5.665367,1.705395,9.280316,-4.244196,6.152533,5.794513,6.967255,-4.876886,-2.220145,-2.957332,-3.529083,3.928816,5.841815,7.189525,-8.655753,-5.988584,6.717712,7.076981,6.653024,9.914054,-8.744216,-1.405326,4.490914,0.867837,9.087948,2.109924,9.158587,-1.613222,-5.101520,7.403707,-6.325212,8.871767,6.321311,-6.559078,-1.033926,6.245609,-8.725179,-9.971816,-7.437473,-8.774673,5.500685,4.790702,-2.821266,8.044377,-2.328472,-5.767888,-2.848084,-3.198611,-0.248804,3.365869,-3.848450,9.205237,-3.332565,7.846375,-6.858005,-2.239642,2.242955,-1.997451,-5.594075,-1.365617,-9.653476,6.522930,-4.614105,1.993194,-1.288308,1.459672,4.729457,1.071140,-1.129494,9.677604,-8.290441,-9.742422,0.734747,-3.601403,-0.572468,-2.244920,1.778407,-5.117349,6.232637,-7.172178,-0.040872,7.534373,2.623501,8.626239,2.627054,-6.760377,-6.046229,0.492602,8.805148,0.492139,-9.468580,-5.271425,2.065616,7.447009,-6.305133,-9.818014,2.529582,8.934233,9.020392,-1.418441,4.773047,-1.480924,4.923241,5.288455,1.981281,-1.872440,7.508541,1.803852,5.756646,0.365624,9.507619,-0.084375,6.970342,5.904418,-7.780195,0.477657,-0.151099,-0.153437,0.173485,-1.148308,-6.993108,-6.247108,0.596662,7.843493,-9.449694,8.808567,-2.574670,-8.228032,2.097230,-6.556051,5.112220,3.510138,-6.601744,4.664437,7.807794,-7.069098,0.138204,5.870805,7.826016,8.570203,-5.277685,7.323799,7.527079,-9.672758,4.344561,-6.058745,9.932209,-1.653452,1.422305,4.706491,1.085489,3.589600,2.557064,9.252529,5.019185,-3.497361,8.537251,-5.901615,-0.458522,2.861682,-2.381150,-0.576637,6.345851,2.951934,9.933876,-3.222455,-6.660092,7.506841,-7.798085,-1.700509,5.601302,7.202595,-7.124139,0.168754,5.184679,-6.772348,6.175304,8.825512,3.643528,9.619534,3.907248,1.325639,0.885974,1.020374,-6.442699,8.315300,0.929462,-8.416825,0.459450,-3.613626,8.291926,-6.417734,4.011442,4.084532,-6.233775,2.440188,-9.266544,0.235289,8.725979,-0.137051,9.642672,-1.121316,-6.574850,-2.627489,-7.976712,-1.088769,-9.244331,-3.010344,-1.859288,-6.914307,2.405027,9.938968,9.279962,5.142441,2.387083,-9.236349,-7.653371,3.011315,3.525398,-5.565229,-4.121173,0.637897,1.747770,5.433318,-5.489712,-9.441168,9.332513,0.318628,-2.534032,-3.216427,-3.293111,-0.988639,7.745609,-9.576585,-5.888184,-5.892530,9.724217,4.276953,-8.893327,5.717117,-8.893385,-2.434180,2.960134,-4.766826,-9.727752,2.208239,7.589024,7.506073,-3.459747,-2.484347,-9.067510,5.751854,-6.196520,-0.844241,2.532458,8.862753,9.054727,-3.623689,-7.416918,9.104800,3.527212,2.522322,-0.853513,8.299526,-9.483718,0.420048,-3.884475,3.106557,0.120738,2.238559,6.224285,5.517659,-8.362541,3.754146,-4.746697,-1.575131,4.914419,7.556733,-7.502568,-7.026829,-2.017622,-8.324527,7.455355,4.812288,4.576462,3.219836,-8.356566,-1.833323,-3.699944,2.873109,-4.607604,-4.701787,4.106484,3.034432,-5.887736,7.341381,-6.012727,-8.852207,6.992363,-8.047749,-8.531873,9.068189,-7.820486,-0.339576,3.439874,-5.230264,7.995694,6.428093,-0.251581,-9.260495,2.377057,9.379815,0.123482,1.232209,6.706307,-0.172390,9.652564,-1.266787,4.027362,4.433267,-6.603857,-8.728450,-5.284189,2.098112,-8.763579,-2.100383,5.059540,8.099711,3.539777,9.954047,0.599566,-5.824471,1.634911,-4.255126,1.705619,5.194284,3.516579,7.395525,9.608179,-5.151085,1.888342,3.995506,-7.058392,0.368155,2.671710,7.834341,-4.846675,-3.589308,-6.341325,-1.763250,-5.828364,-5.660202,3.356475,2.063201,-4.631657,4.871709,-4.271888,-1.287942,1.486983,-0.073815,-7.282817,4.459764,-4.140277,-8.225175,8.938790,-0.919324,-2.267403,3.040488,9.025060,-4.462222,7.358373,9.243154,1.873769,-5.005945,0.461824,8.294431,-7.248179,3.697811,-9.942902,-3.409712,-1.140585,6.879976,5.287492,0.727546,-5.592254,-9.251494,3.715709,3.043147,6.549316,9.071894,9.850514,-8.332441,-9.107254,-4.623668,3.510859,-9.106430,2.805897,-9.782584,-8.949265,5.491573,2.006877,-8.898943,0.954369,9.208020,-4.371925,-1.460261,-8.446723,5.537220,-7.373413,8.004860,-8.537260,5.606278,-7.345440,-8.036557,2.200400,5.867598,4.843698,6.625013,5.164342,8.395143,-0.157363,7.152837,-4.179734,0.228801,-0.427644,-2.135524,-7.072417,8.556266,3.276984,8.321483,7.707579,-9.161784,4.820645,-0.082674,-1.639059,-8.474966,8.758778,3.007363,-6.597393,-3.424854,-0.110842,-9.087607,-6.260990,0.212527,9.831919,7.335121,7.043517,-5.799153,2.723183,2.003233,-9.687467,-2.799591,-6.051998,-9.057126,-7.305692,1.149000,7.770186,4.684063,2.749982,-5.842871,-5.278341,-7.778044,2.905299,-3.765633,9.510364,-5.015689,5.786540,7.625019,0.676343,-2.367460,-8.435012,-7.942832,7.923793,0.187169,-0.031302,-9.713751,7.865872,-2.743980,5.171128,-6.997593,-6.379440,-6.246263,6.202990,4.195845,3.624122,5.143629,-2.694957,-8.359099,0.468594,-9.020428,3.854028,-3.551835,1.475490,5.724871,2.648819,0.176531,-2.150715,8.652905,5.334765,-9.413464], dtype = "float32")#candidate|6159|(2304,)|const|float32
bop_6160 = relay.subtract(call_6157.astype('int32'), relay.reshape(const_6159.astype('int32'), relay.shape_of(call_6157))) # shape=(2304,)
bop_6163 = relay.subtract(call_6158.astype('int32'), relay.reshape(const_6159.astype('int32'), relay.shape_of(call_6158))) # shape=(2304,)
output = bop_6160
output2 = bop_6163
func_6165 = relay.Function([], output)
mod['func_6165'] = func_6165
mod = relay.transform.InferType()(mod)
mutated_mod['func_6165'] = func_6165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6165_call = mutated_mod.get_global_var('func_6165')
call_6166 = func_6165_call()
output = call_6166
func_6167 = relay.Function([], output)
mutated_mod['func_6167'] = func_6167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6095_call = mod.get_global_var('func_6095')
func_6097_call = mutated_mod.get_global_var('func_6097')
call_6300 = relay.TupleGetItem(func_6095_call(), 0)
call_6301 = relay.TupleGetItem(func_6097_call(), 0)
output = relay.Tuple([call_6300,])
output2 = relay.Tuple([call_6301,])
func_6306 = relay.Function([], output)
mod['func_6306'] = func_6306
mod = relay.transform.InferType()(mod)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6306_call = mutated_mod.get_global_var('func_6306')
call_6307 = func_6306_call()
output = call_6307
func_6308 = relay.Function([], output)
mutated_mod['func_6308'] = func_6308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4888_call = mod.get_global_var('func_4888')
func_4889_call = mutated_mod.get_global_var('func_4889')
call_6324 = relay.TupleGetItem(func_4888_call(), 0)
call_6325 = relay.TupleGetItem(func_4889_call(), 0)
func_2079_call = mod.get_global_var('func_2079')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_6337 = relay.TupleGetItem(func_2079_call(), 3)
call_6338 = relay.TupleGetItem(func_2081_call(), 3)
const_6350 = relay.const([[[-7.549117,1.898672,-2.176616,4.644964,-3.982838,-0.733594,7.004062,6.331271,3.727973,7.379744,-4.950693,1.126306],[-2.466295,3.370690,-7.111956,-4.557374,3.027502,-5.994385,5.690483,9.393150,-0.655590,-9.616753,3.422050,-4.928131],[6.403854,9.422770,8.388110,-6.643662,1.793382,-6.081231,-5.319709,-0.816689,4.545466,-8.346229,-4.686839,-5.922549],[8.519500,-2.287795,2.837312,8.739380,1.354872,-7.688266,6.284984,-9.068041,-6.438442,-6.723190,1.620161,2.324474],[9.913065,9.504606,9.231540,8.630830,8.036330,0.125339,-1.920965,1.763906,-8.872597,3.327514,-9.852464,-4.395497],[-4.803235,2.094101,5.758335,-5.599928,-2.887155,-0.404036,-6.633540,-3.272708,-9.808897,-2.177404,-4.790099,-3.515256]],[[2.121363,-1.917382,8.188861,8.045477,9.320344,4.486665,4.700261,-3.400689,7.976367,9.592887,-6.116030,0.216874],[-9.804034,3.308657,2.142323,6.568015,8.366460,-8.163681,-5.593329,7.288469,6.620208,-4.564589,-8.176341,-9.781058],[0.149758,8.371592,-3.260785,-9.559250,-6.227531,4.752779,5.846271,5.919846,7.065962,3.695415,7.359279,8.586695],[8.098290,2.008566,-3.729741,-5.581342,6.651900,4.845244,-8.688340,-0.506299,-0.602734,5.959556,-0.417026,-0.979594],[-8.607581,6.363643,-3.212490,-1.901877,-3.616894,-4.951638,-8.047086,6.588850,-4.629944,8.757085,-8.574807,-1.433665],[9.949162,7.137601,-2.396401,9.090762,9.879744,-7.007341,-1.982300,-6.734604,-4.753992,5.322010,0.571380,-1.246674]],[[-6.497432,-0.736056,-9.700109,2.687663,-1.862832,3.964918,-9.812713,-5.039339,-6.818784,-9.354111,7.770585,4.708925],[7.249975,-1.298977,8.078904,-2.660323,-8.076060,7.306988,5.187040,9.528835,0.246759,-3.896702,5.879111,7.992176],[4.667550,-4.626012,-8.027646,-6.536797,4.013459,-5.155928,-2.955731,-7.291662,-3.018370,4.030876,-9.691724,0.842384],[3.614218,5.192194,-1.709738,-5.579266,-6.316306,7.882490,5.398422,-4.701968,-1.907298,8.028912,-9.385069,-9.350902],[9.991691,-3.267204,-4.832390,9.139434,-4.922718,-0.038976,-6.030968,-3.920756,-2.252416,6.710939,-9.362044,-0.284636],[4.118885,1.132635,8.488183,-3.576078,4.091644,-6.961818,-5.484805,9.335509,-0.500333,-3.221156,8.536507,-1.311877]],[[-2.394201,9.316022,6.586639,6.793609,8.644438,-4.097201,-5.032620,-0.034553,-5.138983,2.144529,-1.519161,9.350853],[7.768494,0.954203,-3.531716,-3.512294,-5.450453,8.555559,3.214865,-9.268800,6.535257,5.702845,1.514054,6.858417],[-9.490990,-9.598534,-9.398110,8.659851,4.900854,-8.679965,-5.923773,-7.481643,-3.793280,0.927766,3.701047,-3.797358],[-3.384697,-0.024866,5.813970,4.981783,1.735494,1.533133,7.515513,3.399559,8.082941,6.450283,-9.064674,-9.606679],[5.174269,-4.477210,4.027956,-0.968318,-8.735529,2.419262,-1.155431,1.665002,4.894922,8.308045,6.716657,4.175071],[-5.948182,3.283627,3.140677,7.723295,1.686296,5.862778,7.460400,-5.188709,-7.590057,7.264055,7.325589,-7.722921]],[[0.801570,4.887823,-2.097930,-0.639453,0.590096,3.656337,2.895843,-7.746493,-8.195173,-4.371235,4.152547,3.413745],[-3.552272,-2.980791,9.553883,-0.294877,9.433021,-4.020290,6.544545,-3.744369,-9.761052,4.602562,5.450253,-7.025433],[3.802002,4.228146,5.743817,-8.362118,4.731888,5.981164,-2.362715,-9.606502,-0.348272,1.586478,3.273190,-8.507264],[-2.080542,0.799821,7.218887,2.081396,-3.583029,8.020020,-6.036800,-3.089554,6.212740,-6.434740,3.884484,9.728802],[1.166466,1.051326,-8.702381,-0.530948,0.579421,-6.486339,5.331754,1.920451,-4.335044,-8.803798,5.113646,5.999453],[-8.925981,-1.306097,-4.784336,6.421488,-7.652531,-8.175239,1.210010,4.213721,-5.604150,6.121409,-1.581485,-6.724660]],[[-9.555144,9.066668,9.365899,-8.285797,-3.786529,6.356608,-5.473753,6.537013,-6.335804,4.380021,-8.526561,-8.509248],[9.072729,5.375576,6.648780,-3.154053,-3.430642,6.845208,-9.452467,1.820491,-6.281019,3.172270,-3.292948,6.684991],[-0.874139,-5.937742,-9.070249,-3.614729,-4.841105,1.598154,5.101369,3.747929,7.081919,7.282823,-2.582178,-8.593985],[0.910437,1.206697,-0.504652,-4.187133,-2.165747,-2.875857,-9.776467,-7.949502,-1.549477,-2.049955,1.065817,4.310641],[-0.091567,8.121525,6.090539,1.995162,3.961757,-8.281654,1.694483,3.215659,4.598782,-7.720631,-6.770362,1.488881],[-3.179277,-6.441933,9.584801,-2.791929,-0.199453,9.453168,-2.440015,-3.086982,5.464490,3.077295,-8.912497,-0.770388]],[[-8.776901,7.463305,6.945144,0.116501,-1.266336,-9.237534,0.217398,1.317743,-1.147588,-1.595396,7.988518,-3.770761],[4.331957,5.282431,-8.331455,-3.729151,4.563885,3.610653,-5.204219,-0.332013,-8.945228,-8.287833,-2.998153,3.571395],[-1.530499,4.576515,8.798838,1.260255,6.091550,-8.082777,-0.171889,3.820537,-4.749737,9.554785,6.119243,3.538410],[-6.137531,-4.361068,9.701394,3.769028,6.648619,8.855915,-0.025422,7.346695,9.647772,-5.143842,-1.458222,7.476971],[-5.905282,4.161085,5.145353,-0.131834,5.873245,-0.470600,-0.959120,-7.381165,-3.566550,-0.174287,-4.458554,-4.289200],[7.582929,-9.540552,-1.536107,-9.173754,-2.140273,9.044277,-1.403304,0.983111,-8.716573,-7.605904,9.326250,-4.523082]],[[-8.498345,-7.239025,-6.884181,3.681079,7.991606,-4.860374,3.227889,9.129849,-0.774894,2.366959,-0.497169,-4.575181],[-8.608787,0.385605,-0.210172,1.970742,1.890260,0.575012,1.524415,9.082405,-8.792264,-4.288910,8.998265,7.005586],[-1.809885,-1.111976,5.597590,3.830073,-2.853739,7.498660,-8.956558,2.859542,6.034352,-0.344360,6.419521,7.361486],[1.344558,-6.958773,1.374009,-3.498559,-2.012050,-9.779287,-2.501434,-7.578962,3.488321,6.653541,-2.968854,3.092779],[1.041848,-8.289117,6.463672,6.436331,-3.167506,7.894659,6.054716,8.255811,4.013754,-7.722689,-9.706890,-7.429837],[-7.502040,5.809241,-5.961639,-5.130305,-4.785957,3.437659,3.620776,-7.115029,-4.638206,9.401675,-1.464911,9.776938]],[[5.547607,5.579501,-5.488857,2.104644,9.139747,-2.230517,9.025182,7.556893,5.249019,1.199134,3.011033,-4.094137],[-1.230710,-0.950308,4.146551,-8.708513,9.444804,-6.585961,9.980163,-1.404490,-9.315686,-2.459913,-4.865866,-9.618462],[-5.819519,-8.999859,4.912502,4.176669,-5.735590,-5.822755,-5.177589,-8.109899,-8.874428,0.628529,-9.144996,-3.043724],[-6.246475,-6.747913,8.557258,4.317015,0.134704,4.995167,-3.899745,-8.309166,-1.164245,-1.812898,9.218313,-1.249196],[7.833001,6.276789,-6.553789,4.738477,-7.128569,9.527038,-6.943250,-8.502430,-5.974829,-3.741151,-8.348743,7.351673],[-0.367209,7.906820,2.652774,9.542693,-7.111916,-1.890937,8.814661,0.234157,-7.756248,8.008126,2.994727,-5.292419]],[[0.810774,8.415217,7.361265,7.932092,-5.601022,5.864088,-8.432004,6.153906,7.554974,6.983919,1.023108,-7.878476],[6.545848,-4.143879,2.867655,-1.255992,6.010586,2.044246,8.514479,-0.931888,9.882127,1.093131,4.816664,-1.591530],[-0.397942,9.114252,7.632267,1.607357,6.882136,0.352791,-8.070613,5.830942,1.617385,-8.852853,9.412992,2.138348],[-0.823075,0.524117,4.134561,-1.902960,6.790535,9.222878,-3.888770,-0.100728,-7.810296,-2.901003,0.326292,-3.174681],[-5.126947,7.071714,-3.447977,4.870391,9.904466,-8.162154,-0.214007,2.204138,-6.040534,-9.423831,7.121433,-2.820654],[5.575323,7.220872,-5.700922,4.260091,-6.448118,4.931698,8.865512,-3.491183,6.092150,4.902077,8.267347,8.106497]],[[8.710893,-8.216923,-2.253825,-1.741127,-4.075615,7.636669,-4.322737,2.816135,4.756324,1.802200,3.697932,-5.915502],[-1.337213,0.973436,-8.311216,0.400703,-8.494614,-6.765946,-6.184499,-7.649240,-7.713372,5.284944,9.076268,-0.751908],[1.058811,3.677684,9.478823,5.929394,-0.038080,9.098878,-8.724905,-0.948780,7.163640,7.240768,-5.782296,-9.872234],[0.365718,4.498051,-2.222301,-6.777753,8.434673,6.778852,7.321701,-9.580153,0.038089,-9.075537,-2.755633,-6.015240],[9.948582,5.661140,-1.538547,4.329485,9.077143,-2.466704,-2.502808,-2.689381,-4.544015,-6.547082,-3.164099,6.261251],[-4.107031,3.509710,9.802652,-0.394048,-8.485152,-9.451665,3.139185,-1.895521,-2.734596,4.173815,4.825928,-1.126923]],[[0.515659,2.355426,0.162729,2.604217,-8.175883,-0.335414,-1.188979,6.162625,-8.263157,5.022011,1.874704,-6.269690],[-9.292250,-8.367757,2.245558,-8.317474,3.109917,3.108310,-4.470021,-7.942560,7.356521,-3.488450,-5.347023,-4.497332],[6.071150,-3.344339,-4.845585,-1.473716,-0.679543,-5.813498,3.213205,-6.576626,8.054683,6.643870,-7.947424,-1.672409],[-8.539960,-3.808051,-8.280070,5.541440,-6.507406,-3.135409,1.720203,-9.280398,0.438906,1.089237,3.765864,3.118871],[9.976341,-9.872777,7.529613,-4.738863,-4.932356,-8.279520,2.343987,-7.640497,2.792468,-2.129134,-0.315855,1.291886],[-9.880587,-6.532069,-9.962592,-3.620669,9.603659,-2.755238,9.253158,-6.618876,8.926015,4.004883,1.559292,-7.699516]],[[-2.094553,3.197521,0.860727,9.518801,0.321773,0.523454,1.781567,-2.644569,0.926276,3.023024,0.325378,-4.080286],[-5.530838,9.631300,8.370190,4.980148,6.135921,-8.864192,8.752981,-4.604795,-5.970205,-6.588991,9.700464,-1.682231],[9.649889,2.783558,0.341545,7.289822,2.094363,6.721272,4.161855,6.829026,8.238951,3.711634,4.300076,-7.692382],[-4.054596,8.863225,8.174817,-7.621403,-7.776637,0.252952,3.833586,3.329342,8.869282,0.767948,1.321022,0.343726],[4.821700,0.653680,-2.555255,-0.785542,5.314420,-2.883758,9.470991,9.528922,7.675731,0.500757,-4.146907,5.271186],[-8.131342,-8.717796,1.924099,-3.062132,-2.197379,6.184144,2.790388,6.042289,-7.819544,6.166525,-3.423178,9.667647]],[[8.678081,-6.200285,9.575857,-1.886486,2.408914,-5.599922,-0.731410,3.323957,-1.278339,-2.525124,-0.648821,-5.645686],[7.421879,-3.238506,0.680925,4.800175,-6.231364,-9.031138,-7.423744,8.586856,6.687678,-2.915642,5.256982,-6.056539],[9.729551,2.808851,5.238120,-2.046278,-9.204366,-0.225157,-1.978170,-7.383675,-4.168736,-0.284701,5.674288,-3.050515],[3.675249,0.497429,-8.945960,0.654225,-1.356307,0.150304,-3.843663,-8.788158,-1.090071,-9.387753,7.603221,2.676280],[3.467318,-9.513960,-7.273846,0.696981,0.234233,-2.045084,1.069962,5.717970,-0.826413,5.487527,-7.783728,1.089585],[-7.577372,7.953328,6.465650,0.545231,9.963200,2.952962,-7.502717,6.548966,1.423267,9.601383,4.046839,-3.802471]],[[9.136840,9.875586,-2.406199,-1.183564,-8.207937,-3.101382,1.427883,3.718608,6.626976,-4.162993,8.254554,1.637342],[4.352261,8.693580,-0.798848,-0.944987,5.342392,4.969926,3.741074,7.639892,-9.493314,4.812251,7.558689,-5.281168],[4.403066,7.841478,-8.032695,-6.362096,2.783748,1.092313,8.399616,-8.402201,3.896340,-5.399895,8.343597,-2.731736],[0.684733,7.388394,-1.766424,3.262080,-2.545293,9.519712,-8.972747,-8.223318,5.269531,1.891907,-1.511132,-3.115481],[7.757244,-2.806759,-2.418608,-2.575754,-5.123472,-3.047216,1.622635,-0.033039,-7.136677,7.353138,3.982377,3.377752],[0.835232,-3.864987,-9.057685,6.480901,9.811317,-4.057089,-9.670922,-6.973626,6.134683,-7.676998,-7.223588,-9.735125]],[[-2.983166,2.347904,-5.336346,-1.521562,9.066414,4.048060,5.366932,-7.007494,-6.829214,-5.188686,9.951937,7.043440],[-5.625340,-8.975195,-0.328497,2.496856,-3.439423,8.044207,3.147092,-4.856242,-1.231391,-4.631529,-8.514289,-1.440953],[-0.218855,2.926586,3.244574,-2.935211,-2.316808,4.950808,6.089862,8.597440,6.512812,-2.843486,2.323268,-2.445168],[-6.694793,7.112034,6.489753,3.367928,4.759971,6.617416,0.344573,-1.226965,-9.997134,6.353276,-4.061182,9.496007],[2.682514,5.037327,-4.928996,-1.607188,-8.018418,7.681430,8.962388,4.306941,-5.890057,-0.329598,-2.019380,1.840821],[-7.381143,5.955074,-7.272769,-7.039618,-5.070933,-9.866894,8.892784,-6.697145,-9.494775,4.580367,-2.048199,-9.553654]]], dtype = "float64")#candidate|6350|(16, 6, 12)|const|float64
bop_6351 = relay.power(call_6337.astype('float32'), relay.reshape(const_6350.astype('float32'), relay.shape_of(call_6337))) # shape=(16, 6, 12)
bop_6354 = relay.power(call_6338.astype('float32'), relay.reshape(const_6350.astype('float32'), relay.shape_of(call_6338))) # shape=(16, 6, 12)
output = relay.Tuple([call_6324,bop_6351,])
output2 = relay.Tuple([call_6325,bop_6354,])
func_6357 = relay.Function([], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
output = func_6357()
func_6358 = relay.Function([], output)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_6373 = func_3782_call()
call_6374 = func_3782_call()
func_5500_call = mod.get_global_var('func_5500')
func_5502_call = mutated_mod.get_global_var('func_5502')
var_6393 = relay.var("var_6393", dtype = "uint8", shape = (5, 78))#candidate|6393|(5, 78)|var|uint8
call_6392 = func_5500_call(relay.reshape(var_6393.astype('uint8'), [15, 13, 2]))
call_6394 = func_5500_call(relay.reshape(var_6393.astype('uint8'), [15, 13, 2]))
uop_6397 = relay.rsqrt(call_6392.astype('float32')) # shape=(15, 13, 2)
uop_6399 = relay.rsqrt(call_6394.astype('float32')) # shape=(15, 13, 2)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_6406 = relay.TupleGetItem(func_1311_call(), 0)
call_6407 = relay.TupleGetItem(func_1313_call(), 0)
output = relay.Tuple([call_6373,var_6393,uop_6397,call_6406,])
output2 = relay.Tuple([call_6374,var_6393,uop_6399,call_6407,])
func_6409 = relay.Function([var_6393,], output)
mod['func_6409'] = func_6409
mod = relay.transform.InferType()(mod)
mutated_mod['func_6409'] = func_6409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6410 = relay.var("var_6410", dtype = "uint8", shape = (5, 78))#candidate|6410|(5, 78)|var|uint8
func_6409_call = mutated_mod.get_global_var('func_6409')
call_6411 = func_6409_call(var_6410)
output = call_6411
func_6412 = relay.Function([var_6410], output)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_6462 = relay.TupleGetItem(func_3023_call(), 0)
call_6463 = relay.TupleGetItem(func_3025_call(), 0)
output = call_6462
output2 = call_6463
func_6486 = relay.Function([], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mutated_mod.get_global_var('func_6486')
call_6487 = func_6486_call()
output = call_6487
func_6488 = relay.Function([], output)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_6515 = func_6486_call()
call_6516 = func_6486_call()
func_2621_call = mod.get_global_var('func_2621')
func_2624_call = mutated_mod.get_global_var('func_2624')
const_6527 = relay.const([-4.062874,6.271340,1.993392,3.817164,9.530602,1.387891,-7.247676,-9.251684,-6.332279,-2.285537,-2.691103,-1.185673,-5.152534,1.341467,-5.087765,5.802514,2.005543,-5.521852,-9.593271,4.115440,-4.572061,2.572450,4.682171,5.879622,-9.170242,3.389372,-3.341839,0.480018,-1.349758,-3.386453,-9.657183,4.982666,-0.175864,0.634055,4.627451,9.364529,9.127258,-6.912610,-5.321930,-3.876493,-2.430770,0.757799,3.364079,5.802545,1.419278,-9.070555,-1.752966,-0.099845,0.856248,0.109198,-5.733402,-3.421388,-2.403530,-6.394910,-5.924541,3.100604,-8.581138,4.965007,9.794692,0.717173,-6.579803,2.553370,0.468914,0.701643,2.291648,7.177704,3.365450,1.294390,2.662894,-4.614054,-3.874424,-0.302965,6.613078,-0.320883,-1.219043,8.548271,9.859189,2.087357,-1.383186,8.805294,-2.621023,-9.123814,-2.372571,0.915650,8.099947,5.716809,8.050554,2.329518,3.477780,-6.539037,3.905586,-7.825277,-5.731325,-6.613317,-5.422282,-1.388976,-5.302169,0.046785,-3.930624,-7.011924,-9.710725,6.890257,6.914818,-5.980113,-6.182161,2.931887,3.639719,-9.356828,7.277495,-3.956180,-0.156844,-9.768212,9.712122,1.048963,-8.671037,-5.132136,2.624417,0.492024,-7.331261,4.889446,-7.157328,-1.868190,-0.667162,1.835414,3.460065,4.105871,-4.628940,9.782446,0.870492,9.633827,-0.558823,1.657430,9.556521,0.408748,-1.475960,-9.960552,1.780992,-0.453572,5.288573,7.348997,-0.815726,-7.004781,7.435589,-1.472354,-5.083941,-2.841755,1.270666,-1.308695,-1.824100,-8.264775,-9.406411,2.375411,-3.683362,3.205929,2.116978,-2.599837,2.186349,-5.330760,-7.747148,-6.032701,-8.421669,-2.349458,-2.503938,-7.057152,-2.700792,1.765914,9.759370,-4.714233,2.374085,1.202535,-6.519247,-0.739165,-2.827197,-7.887385,7.310674,7.697665,-9.156102,-0.002217,-8.869451,9.389771,5.467226,0.016121,-4.125425,-9.528083,1.437724,-1.909552,-1.665552,-0.945703,-7.737208,3.610022,3.559165,4.344665,-4.849273,-4.918023,1.292101,8.056621,-1.371210,8.102753,-5.483136,-4.295190,-6.974970,-7.189130,2.958611,7.216312,1.899335,-9.784222,-4.543644,-2.256090,6.220365,2.474790,2.257766,9.300057,-5.867129,-7.227430,4.317036,-0.256035,1.530981,-2.306377,0.315327,-1.442236,-0.926974,8.458643,1.767889,-7.554803,-6.010629,0.879071,-7.955259,-1.558893,3.221081,-1.882704,6.264934,-3.705190,7.029196,-0.026053,9.033584,2.320583,8.168427,-0.381128,2.231424,0.893965,-8.098616,4.147706,4.204408,8.328664,-8.635851,3.618856,2.635703,-1.872808,-7.520776,1.164856,-6.439194,-9.594985,-0.152739,-2.813365,0.429743,0.631580,-7.580750,-2.445821,-6.498591,-8.646843,2.575293,6.472189,-8.948653,0.545652,-7.876646,-5.958231,-4.136857,-3.898407,0.716920,-3.149064,-2.095544,-3.558911,-7.394932,-5.837983,7.503674,5.027037,5.979208,4.575053,-7.085991,-9.005238,8.610247,4.788868,7.401216,-0.486755,-4.995484,8.840702,0.156193,4.201329,8.186579,-9.180048,3.820748,9.176847,-5.590167,-5.046610,-4.070370,2.243558,0.593581,3.044203,-2.603514,8.732992,-3.955222,2.453767,-5.944808,0.420093,1.257310,-1.694035,5.914960,6.821406,-0.606554,-1.237907,-9.976758,6.607033,4.944831,0.932702,-6.012322,-8.789447,6.468722,-1.342107,1.338549,3.713580,-6.730374,2.748201,-2.130273,3.014352,-4.567651,0.032541,-4.755257,-8.557981,1.808452,6.936236,-7.078627,-5.498487,-6.864088,9.362247,-5.116024,-9.697314,3.285465,-0.403494,-8.522301,-0.596071,1.791261,1.330137,-4.464793,5.974327,6.964625,-8.163103,3.883152,-5.774983,4.445944,7.900519,-4.823855,-1.056642,3.421947,7.538538,2.315346,-9.980926,1.456752,-3.342243,3.119088,0.632609,-3.847839,-3.386436,-2.486681,1.594289,-6.343835,7.605574,-3.848507,-3.526606,-0.278196,7.461462,-0.832639,9.910289,-2.190451,2.142725,3.592759,-1.544894,-2.220845,8.933384,0.596596,3.537148,4.188960,2.327243,-9.668771,6.015055,7.246129,-9.057140,-8.714554,-6.978255,2.174589,-5.802285,-3.673725,4.332485,4.329926,-6.984376,0.765473,7.776576,-6.256520,2.776430,-9.463534,-0.634434,4.418210,5.683596,-6.932599,-7.872221,-7.238708,-6.219561,-7.407320,6.854126,3.555699,-1.813484,5.458744,2.667907,-6.979870,7.886257,-7.970691,0.523441,-2.272136,1.929497,-0.086903,0.010199,3.452218,8.909630,1.638586,3.342528,-0.793423,6.634208,1.950029,-1.616768,1.412128,3.363838,4.465259,-8.809050,2.651035,-2.579674,4.410328,-7.902679,9.064716,-5.991840,1.666398,1.788288,-8.632949,5.352203,-8.104586,9.757527,2.664423,7.785264,7.394033,2.980439,9.580775,-0.577032,7.317915,9.168190,0.305247,8.088825,-2.778527,-2.559080,7.116865,-4.001416,8.362047,-5.538785,-6.284468,6.010877,4.048841,3.620370,-1.435804,0.373120,-5.043003,5.635899,8.755519,-8.342301,4.530295,-8.027576,0.188419,-2.202356,-1.851868,9.469883,-9.292458,3.261307,2.261532,6.368000,-2.804761,8.484794,6.014491,-9.729213,4.348553,-1.842957,-2.031108,-2.112248,-4.314254,-9.974685,7.065852,7.635270,6.325789,1.403839,8.073885,-0.154169,1.616657,4.460353,-3.290029,3.836760,-0.093648,9.917418,-6.612866,-4.521087,-2.584592,-4.463951,8.314929,-0.727305,-5.921202,6.156131,-6.725392,4.971124,-2.098785,-8.273148,0.375224,-6.193203,-4.315655,-4.059025,9.909229,8.117639,4.959446,7.985548,3.683997,3.031741,2.237161,-0.584819,5.401902,-4.992424,-2.599263,-4.540698,-6.493829,3.115735,-3.576770,-6.975136,1.248239,-9.911843,0.429819,4.117372,5.721684,-4.847933,1.781157,-8.384134,-5.487275,-2.460856,0.285345,-3.114488,-4.788562,-5.824815,3.992516,-2.055744,-2.389400,-6.776434,4.698829,6.780206,-5.134270,8.655874,-4.202800,-8.405000,-6.611621,5.935761,-4.964616,-0.282253,7.185422,1.584321,9.248088,2.918220,-3.110005,9.737112,6.848809,-6.591929,-4.276933,-2.634811,2.286392,3.477891,4.533548,-4.010204,3.963040,-5.860517,1.386900,2.728957,-2.699562,6.356464,-0.104631,-5.648607,4.414155,-0.385630,-3.337610,-1.108953,0.056254,-3.434252,-6.690707,-2.949406,9.421269,-8.149756,2.987634,5.327340,7.978716,-6.072546,5.267568,0.568186,-6.708063,-0.680585,-0.553580,-0.368603,-2.661460,0.916202,6.614267,-0.088458,-9.224702,-6.932716,3.258101,0.415417,-1.727294,-4.492858,-7.580651,-6.702992,6.027250,-9.920578,5.417829,-8.832500,0.475291,-0.248356,0.124688,3.718740,8.593983,5.445718,7.776814,0.363885,9.172312,5.221982,-8.554314,-9.739350,-9.817417,8.607172,9.004146,4.585907,8.584563,-8.175829,7.635409,3.318536,5.412811,8.058036,8.286026,-1.980576,-9.890962,5.251872,6.717143,6.864758,-0.517816,2.618807,-3.479821,-7.571118,-1.777108,-9.514934,-8.227388,-8.294246,5.955693,-3.996539,2.556064,2.322994,-1.205710,-4.839465,-3.792847,3.426001,-6.390414,-3.488826,4.851219,2.510306,5.467171,0.650962,7.967031,8.779874,7.243199,0.062436,-3.971389,4.638263,3.113596,-8.507996,5.193111,-2.160063,-7.312457,-5.276293,8.250746,9.167301,9.221402,-2.510847,8.413090,4.666709,5.303110,5.774789,2.987224,-2.895006,-3.025732,-5.127769,-7.599024,1.000676,-3.926397,1.300225,5.573576,-0.242435,7.610062,0.172388,8.616823,-8.683755,-2.426873,-9.210651,-2.622079,-8.012461,-6.825522,-5.892425,-8.847628,8.623254,5.940499,-2.060090,-4.777589,2.331433,-2.139230,-2.352968,-2.640308,-1.819897,-8.309197,-8.139101,-6.707217,2.071466,-1.229598,3.020108,2.365714,9.097637], dtype = "float64")#candidate|6527|(728,)|const|float64
call_6526 = relay.TupleGetItem(func_2621_call(relay.reshape(const_6527.astype('float64'), [4, 13, 14])), 1)
call_6528 = relay.TupleGetItem(func_2624_call(relay.reshape(const_6527.astype('float64'), [4, 13, 14])), 1)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_6531 = relay.var("var_6531", dtype = "float64", shape = (196,))#candidate|6531|(196,)|var|float64
call_6530 = relay.TupleGetItem(func_3142_call(relay.reshape(var_6531.astype('float64'), [196,])), 0)
call_6532 = relay.TupleGetItem(func_3145_call(relay.reshape(var_6531.astype('float64'), [196,])), 0)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
var_6547 = relay.var("var_6547", dtype = "float64", shape = (576,))#candidate|6547|(576,)|var|float64
call_6546 = relay.TupleGetItem(func_3632_call(relay.reshape(var_6547.astype('float64'), [16, 9, 4])), 0)
call_6548 = relay.TupleGetItem(func_3634_call(relay.reshape(var_6547.astype('float64'), [16, 9, 4])), 0)
func_2477_call = mod.get_global_var('func_2477')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_6553 = relay.TupleGetItem(func_2477_call(relay.reshape(call_6515.astype('bool'), [16, 6, 12])), 1)
call_6554 = relay.TupleGetItem(func_2480_call(relay.reshape(call_6515.astype('bool'), [16, 6, 12])), 1)
output = relay.Tuple([call_6515,call_6526,const_6527,call_6530,var_6531,call_6546,var_6547,call_6553,])
output2 = relay.Tuple([call_6516,call_6528,const_6527,call_6532,var_6531,call_6548,var_6547,call_6554,])
func_6568 = relay.Function([var_6531,var_6547,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
var_6569 = relay.var("var_6569", dtype = "float64", shape = (196,))#candidate|6569|(196,)|var|float64
var_6570 = relay.var("var_6570", dtype = "float64", shape = (576,))#candidate|6570|(576,)|var|float64
output = func_6568(var_6569,var_6570,)
func_6571 = relay.Function([var_6569,var_6570,], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
call_6578 = relay.TupleGetItem(func_1441_call(), 0)
call_6579 = relay.TupleGetItem(func_1443_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_6580 = relay.TupleGetItem(func_3287_call(), 0)
call_6581 = relay.TupleGetItem(func_3288_call(), 0)
output = relay.Tuple([call_6578,call_6580,])
output2 = relay.Tuple([call_6579,call_6581,])
func_6591 = relay.Function([], output)
mod['func_6591'] = func_6591
mod = relay.transform.InferType()(mod)
mutated_mod['func_6591'] = func_6591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6591_call = mutated_mod.get_global_var('func_6591')
call_6592 = func_6591_call()
output = call_6592
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1750_call = mod.get_global_var('func_1750')
func_1752_call = mutated_mod.get_global_var('func_1752')
call_6597 = relay.TupleGetItem(func_1750_call(), 5)
call_6598 = relay.TupleGetItem(func_1752_call(), 5)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_6599 = relay.TupleGetItem(func_3023_call(), 2)
call_6600 = relay.TupleGetItem(func_3025_call(), 2)
output = relay.Tuple([call_6597,call_6599,])
output2 = relay.Tuple([call_6598,call_6600,])
func_6603 = relay.Function([], output)
mod['func_6603'] = func_6603
mod = relay.transform.InferType()(mod)
output = func_6603()
func_6604 = relay.Function([], output)
mutated_mod['func_6604'] = func_6604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_6611 = func_6486_call()
call_6612 = func_6486_call()
output = call_6611
output2 = call_6612
func_6617 = relay.Function([], output)
mod['func_6617'] = func_6617
mod = relay.transform.InferType()(mod)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mutated_mod.get_global_var('func_6617')
call_6618 = func_6617_call()
output = call_6618
func_6619 = relay.Function([], output)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3248_call = mutated_mod.get_global_var('func_3248')
call_6620 = relay.TupleGetItem(func_3246_call(), 0)
call_6621 = relay.TupleGetItem(func_3248_call(), 0)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
var_6643 = relay.var("var_6643", dtype = "float64", shape = (576,))#candidate|6643|(576,)|var|float64
call_6642 = relay.TupleGetItem(func_3632_call(relay.reshape(var_6643.astype('float64'), [16, 9, 4])), 0)
call_6644 = relay.TupleGetItem(func_3634_call(relay.reshape(var_6643.astype('float64'), [16, 9, 4])), 0)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_6647 = func_1471_call()
call_6648 = func_1471_call()
output = relay.Tuple([call_6620,call_6642,var_6643,call_6647,])
output2 = relay.Tuple([call_6621,call_6644,var_6643,call_6648,])
func_6653 = relay.Function([var_6643,], output)
mod['func_6653'] = func_6653
mod = relay.transform.InferType()(mod)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6654 = relay.var("var_6654", dtype = "float64", shape = (576,))#candidate|6654|(576,)|var|float64
func_6653_call = mutated_mod.get_global_var('func_6653')
call_6655 = func_6653_call(var_6654)
output = call_6655
func_6656 = relay.Function([var_6654], output)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4847_call = mod.get_global_var('func_4847')
func_4848_call = mutated_mod.get_global_var('func_4848')
call_6728 = func_4847_call()
call_6729 = func_4847_call()
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
var_6732 = relay.var("var_6732", dtype = "float32", shape = (50,))#candidate|6732|(50,)|var|float32
call_6731 = func_268_call(relay.reshape(var_6732.astype('float32'), [1, 5, 10]))
call_6733 = func_268_call(relay.reshape(var_6732.astype('float32'), [1, 5, 10]))
output = relay.Tuple([call_6728,call_6731,var_6732,])
output2 = relay.Tuple([call_6729,call_6733,var_6732,])
func_6757 = relay.Function([var_6732,], output)
mod['func_6757'] = func_6757
mod = relay.transform.InferType()(mod)
var_6758 = relay.var("var_6758", dtype = "float32", shape = (50,))#candidate|6758|(50,)|var|float32
output = func_6757(var_6758)
func_6759 = relay.Function([var_6758], output)
mutated_mod['func_6759'] = func_6759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_6795 = func_4608_call()
call_6796 = func_4608_call()
var_6801 = relay.var("var_6801", dtype = "float32", shape = (2304,))#candidate|6801|(2304,)|var|float32
bop_6802 = relay.add(call_6795.astype('int8'), relay.reshape(var_6801.astype('int8'), relay.shape_of(call_6795))) # shape=(2304,)
bop_6805 = relay.add(call_6796.astype('int8'), relay.reshape(var_6801.astype('int8'), relay.shape_of(call_6796))) # shape=(2304,)
bop_6806 = relay.floor_divide(bop_6802.astype('float64'), relay.reshape(call_6795.astype('float64'), relay.shape_of(bop_6802))) # shape=(2304,)
bop_6809 = relay.floor_divide(bop_6805.astype('float64'), relay.reshape(call_6796.astype('float64'), relay.shape_of(bop_6805))) # shape=(2304,)
output = relay.Tuple([bop_6806,])
output2 = relay.Tuple([bop_6809,])
func_6810 = relay.Function([var_6801,], output)
mod['func_6810'] = func_6810
mod = relay.transform.InferType()(mod)
mutated_mod['func_6810'] = func_6810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6811 = relay.var("var_6811", dtype = "float32", shape = (2304,))#candidate|6811|(2304,)|var|float32
func_6810_call = mutated_mod.get_global_var('func_6810')
call_6812 = func_6810_call(var_6811)
output = call_6812
func_6813 = relay.Function([var_6811], output)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4551_call = mod.get_global_var('func_4551')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_6821 = relay.TupleGetItem(func_4551_call(), 0)
call_6822 = relay.TupleGetItem(func_4552_call(), 0)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_6826 = relay.TupleGetItem(func_1792_call(), 0)
call_6827 = relay.TupleGetItem(func_1794_call(), 0)
func_3062_call = mod.get_global_var('func_3062')
func_3065_call = mutated_mod.get_global_var('func_3065')
const_6831 = relay.const([-6.689082,-8.131726,1.115680,-3.499835,-6.198862,-8.977910,9.627008,-5.912748,0.521018,-1.316162,7.176834,3.253036,-4.668417,-9.515494,2.560822,-2.610295,-5.135468,-2.670175,-5.204708,-0.574469,7.866689,8.011538,5.421782,5.968633,-9.166387,-7.513385,5.386305,-8.816356,-3.877400,-8.882942,7.446288,-2.670830,1.442643,8.841922,3.712073,-3.580102,-9.454178,9.888573,-4.747978,-6.488810,7.899140,-6.093645,-0.498057,-6.153362,2.800119,6.843547,8.364990,4.240334,-1.993581,3.981745,-7.516456,-8.219697,4.059261,1.730133,-9.149359,-2.976907,-9.835962,7.403464,7.498399,-1.424711,-1.044817,4.771365,0.003996,-5.509469,8.778512,6.516682,6.599034,5.490680,7.815687,-0.433433,-6.146639,2.628433,0.796271,-1.737129,1.174349,-3.878396,-0.635048,9.058536,-0.535065,4.377702,6.478967,2.569159,0.777757,4.195547,2.079984,-5.910529,-9.097146,4.781264,-3.362478,6.949619,-4.988234,9.856999,8.264962,-9.443076,-3.207041,-1.238961,-2.381216,4.798775,-3.964370,-3.802136,-8.841322,0.259894,4.195352,2.411692,-5.852290,8.151621,-4.342094,4.824169,3.647516,0.537712,-7.798220,-2.847411,5.532664,-2.194503,-6.907523,-1.873169,4.822251,-9.727488,-9.244344,9.169665,-9.783858,3.925119,4.797246,-6.286642,-3.416930,0.527623,5.720741,8.480131,0.965986,-8.831781,-9.625518,-0.338492,3.162022,-6.750530,-2.444748,-1.799857,-1.410952,8.799991,3.272889,2.822128,1.937249,-7.009247,-4.374776,-0.669582,9.043881,9.022005,4.561025,7.764542,-0.184151,-1.487716,6.952483,1.929129,-7.058301,-0.857349,3.099469,8.870157,-8.488041,7.530933,6.896686,-4.510193,1.142027,-0.202323,4.084570,8.761564,-3.926625,5.021545,-6.077476,5.738123,0.463343,-7.280875,2.449846,-9.966140,8.789394,-9.694923,2.750380,2.694386,8.125695,6.534372,-9.848915,-4.528262,-7.535091,-1.832535,2.489241,6.921584,3.433956,3.981453,3.254904,-4.111364,8.554020,8.271073,9.191035,3.612372,-6.227201,-2.203851,1.102125,2.070312,-7.619926,1.248904,-4.499396,-4.992840,-6.832255,-0.918266,1.832740,5.484601,-5.151107,3.368120,0.893214,-8.159035,7.103128,-9.856990,3.686676,-7.677225,-4.460818,1.188489,-6.780444,-8.213595,0.348159,-0.081539,-9.592836,-3.491282,-2.849603,-7.754990,-6.620002,-9.930472,9.952276,6.321396,-3.867966,-2.066910,4.340408,0.577656,-6.347510,-8.553855,7.772188,-6.947114,-7.032475,-1.788911,3.227685,8.107409,3.203738,2.041364,-9.680018,0.049276,5.522780,0.002946,-1.436099,-4.297248,5.295566,-3.469623,-6.544927,-5.500691,5.445542,7.870771,6.469319,5.179952,-8.289937,-6.886430,8.567978,-3.533116,8.367970,9.576926,-9.916479,-5.335206,-1.675101,-9.917697,-6.987084,-5.618193,0.453183,-6.844325,-4.626176,0.413194,-4.101165,0.652447,-3.677251,-3.317409,-7.849149,0.472109,-5.500123,-4.351586,-5.038718,6.229472,8.371559,6.717220,7.390040,1.105332,6.381922,3.694806,-6.868742,3.881578,-6.132349,1.720043,5.403546,7.398642,-6.991973,-9.924213,3.510356,4.857235,4.982379,8.329113,-7.544886,-7.575278,-1.125119,-7.237624,4.040142,6.859661,7.998323,-5.131707,3.707737,-5.912958,1.069434,-7.523616,-3.730471,9.454875,-2.634647,9.180841,1.647514,-9.375697,3.411551,5.058096,-3.059197,-5.942819,7.146015,-4.648321,-0.535387,-6.254797,-6.532683,-4.158831,9.129140,-3.056842,0.721452,-8.896231,-8.335677,-9.338496,3.190953,-4.829619,-7.380529,-3.502000,9.887506,-0.130606,3.542830,8.304773,3.120228,0.994816,4.343283,5.369979,0.975822,0.816724,-3.696733,6.535040,7.882373,-7.814133,-7.725694,5.735936,4.573986,2.340149,7.886447,-5.514438,1.593657,8.757659,-9.459416,3.076510,-9.922311,6.647490,-0.120418,6.284574,-1.353021,1.279750,-7.829825,-1.591074,-6.037114,-5.953175,-2.705630,-3.590284,-8.399004,-1.852627,-5.113226,-4.054987,-7.764192,-4.585851,-8.567039,2.420645,3.162053,6.351071,4.569496,1.629601,-8.214103,6.915446,2.131365,-4.807438,7.323443,-6.493064,-6.188034,3.584931,-0.041654,9.331979,0.117581,8.988867,2.885608,-4.533078,-5.133286,-2.099064,9.133247,1.270738,5.413119,2.178069,-0.375928,4.549114,-4.730193,4.677349,-3.782498,-3.804690,6.635477,-3.528662,-6.013393,-3.159913,-6.764025,5.807973,-2.896308,-5.103934,-3.200496,9.054740,9.233182,5.310643,8.217368,-6.022704,7.007905,8.902816,-7.441337,8.021318,-2.650200,0.077349,-6.329741,-6.073505,5.063283,1.941122,-7.959956,-0.352197,1.845029,-4.516682,8.610917,-4.559386,8.615258,8.105801,4.168777,-3.006767,-9.867951,-8.038358,0.121542,-6.193565,-4.501659,-7.122005,-3.306673,-7.232692,5.793933,-5.315010,-7.819164,8.754828,-1.543730,0.620880,-2.771885,1.650744,-6.914118,7.035066,-2.162625,-4.934495,0.879693,-4.227815,-3.866742,7.749469,1.216383,-8.590262,-5.922319,6.400500,-9.639956,-3.436166,-9.384884,-8.364255,-6.822651,-2.035585,5.661587,3.649042,-7.399484,-8.942535,-4.867808,-3.644025,2.690904,6.250432,-8.034208,-6.760690,-9.955100,6.899511,-6.084676,0.519067,-0.347496,3.762597,-8.079452,-2.985018,-7.765773,1.488813,5.977821,-1.081304,-2.513664,-4.996352,-2.193719,-9.360880,-3.880918,-8.683960,6.443298,9.856418,7.540664,0.788517,5.421227,-0.231850,-2.944396,-4.539814,4.838314,-5.875656,4.406481,9.913281,3.804313,-3.695637,4.482060,-5.971846,-6.501462,-3.653561,-7.387959,6.035968,-2.305061,-9.695814,-1.427354,-9.251025,6.834254,3.254127,9.550950,8.532596,-7.401070,-6.840763,-2.523341,-6.845697,-9.763928,-3.551625,-5.075901,-0.027662,-3.294349,0.106727,-2.818469,-1.944772,-5.194547,-2.074819,-0.580533,-7.918887,6.274618,1.339967,1.819679,-4.127952,-8.778074,7.328130,-1.924250,6.052444,-5.320158,4.740407,-0.989739,-9.537087,-4.514412,0.037427,-5.025777,5.684361,-5.177278,1.522931,7.513246,-9.531794,3.165593,-7.170491,7.423077,-7.146355,9.593867,-6.906955,6.276717,-7.577551,4.853357,1.391279,-2.980580,7.273386,4.366037,-5.139108,-1.396438,-0.470968,-7.494425,-5.729755,8.345967,9.451464,-4.036433,-7.239428,0.244579,8.055820,-5.041123,-0.351785,-0.647891,-8.920134,6.907410,-0.920483,1.252676,5.060355,9.115708,8.800284,-2.037223,8.697180,4.461597,-9.172469,8.583048,4.411292,-7.915439,-0.634189,-9.092129,-9.710449,3.087223,2.196311,-7.015385,7.135301,-7.057180,-5.741063,4.307630,-8.240392,6.388102,3.841144,-6.751916,2.607850,8.351344,7.239208,-8.749173,8.826127,-3.111118,-9.134389,7.773138,2.487126,-1.038472,-2.022876,5.492130,-9.657722,2.110358,9.814521,3.661651,7.303851,-2.758375,-6.855777,-4.927959,1.976096,-2.392097,4.200883,2.948593,-4.009078,-5.114894,7.059305,6.362578,1.790423,-5.262646,-7.499034,3.091459,-8.460488,6.243528,-0.041882,-4.661800,-4.637051,5.702250,-8.927576,-4.322731,-9.656432,8.743386,8.194451,-6.456617,9.624941,1.325984,-6.098707,2.902842,1.588311,6.704985,4.071076,6.736547,-5.787940,4.033461,6.788490,2.451655,0.354374,4.746751,4.629428,9.753131,-4.087800,4.120522,2.576343,2.392241,0.532003,-8.480603,-4.301460,-8.433679,-8.894594,5.858612,-0.170066,9.541172,4.299711,-1.127083,-1.207382,-3.218587,-7.294704,8.012662,-0.849589,-5.301629,4.437617,-0.715713,-6.525476,2.872216,8.107728,-4.514149,3.036206,3.309334,7.385081,-4.329189,7.372915,-8.377982,-8.576582,8.390135,0.317794,-1.489482,-2.537064,-4.096639,8.258109,1.736109,2.297341,-1.442972,1.332494,5.036824,1.760102,8.248135,-2.557245,4.137866,0.951484,-9.358181,-0.654747,-5.362915,0.912910,-9.085858,-0.994591,4.856357,3.887972,-7.121314,7.498764,7.604093,0.538633,9.984950,5.379194,-2.537307,3.643651,9.844405,7.484550,-6.659275,-8.929684,-7.398325,-6.501526,-2.451863,6.382269,9.801724,9.968569,-4.069168,3.143456,-9.465065,-4.413323,9.247225,1.285723,2.139305,-1.067109,-5.712702,-4.453156,0.394720,-3.637426,2.069526,6.744158,0.991424,1.907732,9.838742,7.372317,1.810124,9.438718,-3.967766,5.043485,4.368721,4.623207,9.088117,-8.383635,5.589359,-4.568012,7.707308,4.050789,-1.446620,-8.321230,9.173135,-3.215838,7.946099,5.263182,-7.848058,6.856664,9.732096,4.233511,4.684379,1.958224,4.252818,6.424421,5.092007,3.657571,5.395005,-0.212679,2.690941,-2.192388,-1.834594,-2.904692,-3.524365,-0.544296,7.870987,-9.989939,-6.626810,1.799642,-7.129575,-4.666417,7.483597,8.514964,9.869743,4.505318,-1.309395,4.360542,1.843763,-9.819007,4.924926,2.963461,-5.017558,6.861113,-9.324286,-4.724863,0.151027,-5.150376,-5.215810,-9.026848,2.188282,5.205084,9.230492,-9.170269,-7.487825,-5.394403,-7.044240,-1.629712,-1.040130,9.021070,-7.878867,7.848208,-1.000495,-2.427827,1.930406,-5.799999,-4.132031,1.627201,-7.806976,3.633639,-0.897492,-8.655964,2.131605,7.167632,1.151937,-0.199728,8.293865,3.975057,-7.889779,-9.813381,-1.735702,-9.326214,-6.291065,-2.650974,-8.429945,-9.013053,-7.467555,2.964985,4.772540,3.165239,0.903404,0.018102,4.308967,-3.772899,-7.343497,4.505119,3.667515,-3.017456,5.064782,-3.390143,-7.595237,-2.954928,2.033671,-1.566319,5.426438,5.403202,-0.342829,5.475259,-8.373127,0.146979,-6.620725,8.223433,-3.686281,-2.465589,5.139932,5.687158,2.385215,-0.596131,6.759005,4.005220,-2.234656,6.350692,0.801846,-8.158456,-3.116008,5.827173,-4.983865,-1.963072,-7.844119,4.391074,4.065437,5.355613,-2.780247,-5.400675,-1.632080,-1.523785,-1.224506,1.298450,-0.588158,9.115071,7.675297,-4.627830,-6.166227,6.371351,9.109347,-7.665981,2.981562,8.059844,4.087066,-8.108102,5.994556,-7.179393,-8.904688,-6.205983,9.835524,-8.418377,-9.075245,-7.797664,7.891282,8.307309,-4.031703,-7.622935,4.786191,-7.767189,5.884227,-1.907095,0.209686,-5.909532,4.039580,7.739899,1.451516,7.340452,-6.426640,-8.538470,6.768357,-0.701041,0.593907,-1.590800,-7.598955,8.359279,1.496248,-9.467910,-1.591505,-3.498753,3.555086,-4.656135,4.189634,-2.349606,2.750875,-4.417366,-6.751914,1.399069,0.562944,-9.949563,-9.880906,6.579707,-4.080691,-3.548535,-0.406906,-6.535879,-2.761232,-5.129076,-9.150727,5.733132,2.531685,2.390613,-0.596435,3.798786,-0.158944,3.095892,9.554327,-1.556995,7.691356,-7.939349,3.670587,1.289724,0.259238,-7.756965,4.780344,-9.306377,8.872352,-0.272010,-3.559330,8.039455,-1.434468,2.182215,6.443192,8.670944,-3.890664,-4.698388,-3.460042,-0.769800,-2.150494,8.373687,-6.251691,-6.679626,6.712594,-0.285580,3.611911,-6.748084,-8.662971,0.589525,4.448739,-5.617432,5.144177,-5.824265,3.713723,8.207302,8.192713,3.227040,-1.429636,7.589110,-7.725385,5.768555,1.170973,6.159233,9.644843,9.224760,3.032406,7.715052,-1.420103,-2.551697,-5.209134,3.129569,9.567612,3.299348,5.596765,1.467074,-7.869213,9.176182,7.066153,-9.356197,8.092131,0.707986,4.110467,1.700396,-1.381945,4.596498,-2.930676,-9.131425,1.790385,0.161266,-8.541690,4.376093,-3.856471,-0.914585,1.580689,-0.134195,-4.379693,-0.051732,-4.135446,-7.629285,7.418476,5.825496,-6.799793,0.689910,-0.423665,-2.252290,-0.780189,7.810833,-7.314937,-9.531706,-3.990308,8.646490,-7.278900,7.082994,1.046082,-7.589209,9.942645,-6.191438,1.690052,-5.222183,7.545521,2.595108,-6.937377,-6.916594,-3.606092,-4.308962,4.063876,-8.359208,7.024906,6.743710,1.069451,-9.837691,2.892463,-2.458869,-5.135996,-4.018306,-6.577990,1.168573,4.964665,8.802215,-6.528580,-4.084736,8.941392,-4.257120,-6.439650,-2.533375,5.372549,9.820844,0.876862,5.112143,-8.593804,4.007007,6.817659,9.791719,-2.564812,4.063221,-9.255199,5.531667,-6.892937,5.093439,6.297066,-4.542681,-3.670029,3.725092,7.600023,0.979977,6.032541,-9.790116,-8.151432,7.107792,9.906693,3.501555,-8.148932,0.422805,-5.894561,-4.976199,-5.722818,-7.860580,-2.902798,3.129514,9.855369,7.279911,9.344813,0.716014,0.832090,1.628508,5.856100,-5.996610,7.246975,-8.221730,-5.465276,1.235229,0.225294,2.549123,2.608057,-6.949169,-1.656178,4.780982,0.717878,5.568288,2.720628,6.895136,3.898689,0.898787,-5.099147,5.746851,-4.708881,7.141314,-2.447971,4.633465,6.749196,-1.095787,3.743131,-9.773870,3.185842,8.683331,-9.577332,2.802762,-2.498178,-6.355997,9.623311,-6.332113,-1.017503,3.015017,-8.112489,-4.806842,-7.948661,2.708262,9.373897,4.877969,5.023152,8.149762,4.213368,-3.227705,6.766329,-5.754082,-3.699596,-0.152409,0.276507,0.124214,-4.084317,2.716819,6.197080,-7.376823,-7.090876,3.546025,-0.189656,7.089828,0.565667,-9.089357,-5.048917,5.796228], dtype = "float64")#candidate|6831|(1232,)|const|float64
call_6830 = func_3062_call(relay.reshape(const_6831.astype('float64'), [14, 8, 11]))
call_6832 = func_3062_call(relay.reshape(const_6831.astype('float64'), [14, 8, 11]))
output = relay.Tuple([call_6821,call_6826,call_6830,const_6831,])
output2 = relay.Tuple([call_6822,call_6827,call_6832,const_6831,])
func_6836 = relay.Function([], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
mutated_mod['func_6836'] = func_6836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6836_call = mutated_mod.get_global_var('func_6836')
call_6837 = func_6836_call()
output = call_6837
func_6838 = relay.Function([], output)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6849 = relay.TupleGetItem(func_4959_call(), 0)
call_6850 = relay.TupleGetItem(func_4961_call(), 0)
output = relay.Tuple([call_6849,])
output2 = relay.Tuple([call_6850,])
func_6858 = relay.Function([], output)
mod['func_6858'] = func_6858
mod = relay.transform.InferType()(mod)
output = func_6858()
func_6859 = relay.Function([], output)
mutated_mod['func_6859'] = func_6859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6881 = relay.TupleGetItem(func_4959_call(), 0)
call_6882 = relay.TupleGetItem(func_4961_call(), 0)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_6883 = func_1471_call()
call_6884 = func_1471_call()
output = relay.Tuple([call_6881,call_6883,])
output2 = relay.Tuple([call_6882,call_6884,])
func_6886 = relay.Function([], output)
mod['func_6886'] = func_6886
mod = relay.transform.InferType()(mod)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6886_call = mutated_mod.get_global_var('func_6886')
call_6887 = func_6886_call()
output = call_6887
func_6888 = relay.Function([], output)
mutated_mod['func_6888'] = func_6888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_7001 = func_4608_call()
call_7002 = func_4608_call()
output = relay.Tuple([call_7001,])
output2 = relay.Tuple([call_7002,])
func_7014 = relay.Function([], output)
mod['func_7014'] = func_7014
mod = relay.transform.InferType()(mod)
output = func_7014()
func_7015 = relay.Function([], output)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6357_call = mod.get_global_var('func_6357')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_7030 = relay.TupleGetItem(func_6357_call(), 0)
call_7031 = relay.TupleGetItem(func_6358_call(), 0)
func_5981_call = mod.get_global_var('func_5981')
func_5986_call = mutated_mod.get_global_var('func_5986')
var_7048 = relay.var("var_7048", dtype = "float64", shape = (196,))#candidate|7048|(196,)|var|float64
var_7049 = relay.var("var_7049", dtype = "float32", shape = (1, 910))#candidate|7049|(1, 910)|var|float32
const_7050 = relay.const([False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|7050|(1152,)|const|bool
call_7047 = relay.TupleGetItem(func_5981_call(relay.reshape(var_7048.astype('float64'), [196,]), relay.reshape(var_7049.astype('float32'), [910,]), relay.reshape(const_7050.astype('bool'), [1152,]), ), 5)
call_7051 = relay.TupleGetItem(func_5986_call(relay.reshape(var_7048.astype('float64'), [196,]), relay.reshape(var_7049.astype('float32'), [910,]), relay.reshape(const_7050.astype('bool'), [1152,]), ), 5)
output = relay.Tuple([call_7030,call_7047,var_7048,var_7049,const_7050,])
output2 = relay.Tuple([call_7031,call_7051,var_7048,var_7049,const_7050,])
func_7052 = relay.Function([var_7048,var_7049,], output)
mod['func_7052'] = func_7052
mod = relay.transform.InferType()(mod)
var_7053 = relay.var("var_7053", dtype = "float64", shape = (196,))#candidate|7053|(196,)|var|float64
var_7054 = relay.var("var_7054", dtype = "float32", shape = (1, 910))#candidate|7054|(1, 910)|var|float32
output = func_7052(var_7053,var_7054,)
func_7055 = relay.Function([var_7053,var_7054,], output)
mutated_mod['func_7055'] = func_7055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1120_call = mod.get_global_var('func_1120')
func_1121_call = mutated_mod.get_global_var('func_1121')
call_7097 = relay.TupleGetItem(func_1120_call(), 0)
call_7098 = relay.TupleGetItem(func_1121_call(), 0)
output = call_7097
output2 = call_7098
func_7105 = relay.Function([], output)
mod['func_7105'] = func_7105
mod = relay.transform.InferType()(mod)
output = func_7105()
func_7106 = relay.Function([], output)
mutated_mod['func_7106'] = func_7106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6591_call = mod.get_global_var('func_6591')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7119 = relay.TupleGetItem(func_6591_call(), 1)
call_7120 = relay.TupleGetItem(func_6593_call(), 1)
output = call_7119
output2 = call_7120
func_7144 = relay.Function([], output)
mod['func_7144'] = func_7144
mod = relay.transform.InferType()(mod)
output = func_7144()
func_7145 = relay.Function([], output)
mutated_mod['func_7145'] = func_7145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_7164 = func_1911_call()
call_7165 = func_1911_call()
func_7052_call = mod.get_global_var('func_7052')
func_7055_call = mutated_mod.get_global_var('func_7055')
const_7168 = relay.const([-5.610074,-2.761634,0.544718,9.404319,-0.972185,-7.143998,-8.274791,7.635632,-2.656754,-2.700223,-3.392194,-7.274368,-1.476096,4.671523,6.604125,-5.670055,-4.216910,-1.179267,-9.800140,0.668636,-0.981856,-3.539911,2.830249,-5.736241,8.576295,-9.998081,-7.074273,2.440207,-0.624718,-6.232151,3.024470,3.131818,8.178402,2.475784,3.412258,7.861987,9.153623,-2.809456,5.661578,-4.219070,8.621418,-7.977586,-9.409969,7.083207,-0.009372,-3.346966,-5.588724,-8.419401,7.013275,-3.872187,-8.931377,-2.400080,1.807888,3.600176,8.834777,-4.007063,-4.885194,-1.802114,-7.289599,7.292250,3.467440,-3.450897,7.411930,0.383712,3.708011,1.407237,8.714366,5.508996,2.758055,7.149732,-3.664453,1.963892,-8.605816,4.012678,1.224516,-7.221755,-7.398046,1.426322,2.308276,-7.717294,-0.466604,-3.086988,7.280555,-8.646717,-9.025963,0.115533,9.210376,6.818628,-7.345489,-2.624324,6.591927,-4.537820,-9.147341,6.948768,7.275744,-1.709294,-8.604963,5.754357,-9.935320,-9.104038,-0.376789,8.070624,-4.231695,6.667059,-4.381686,7.561581,-5.526412,1.111053,2.894935,-9.519338,4.370411,-7.819428,-4.792371,0.966105,2.130895,7.777436,-7.684272,-2.625465,-0.140669,9.926367,8.412218,-1.464034,6.947453,-7.035806,7.930532,7.128321,4.641909,-9.221905,3.464990,-1.914737,1.074714,-5.302789,7.882360,-4.081551,1.859100,-0.207788,-1.567361,-5.572399,-1.410412,-4.706521,-5.341284,-9.601338,4.696100,6.472808,5.137940,-0.451465,2.009299,-2.680628,1.809388,-1.270913,-2.818651,5.064395,-4.630102,-5.134174,3.845112,-4.959934,-0.108438,9.014982,8.887320,2.338837,5.771713,9.981809,-2.127686,5.332628,-6.117926,-7.489268,-0.226266,-8.509604,-7.439264,3.938853,3.647107,1.740026,5.184729,-0.323432,4.122204,9.496805,8.403892,5.108004,-4.610879,0.481088,1.324519,7.486354,2.030945,-8.933946,4.836071,2.274397,5.182072,-4.089628,-6.450586,3.264495,-4.999354,-6.235280,2.822201,-5.257578,-1.342208,-9.073075], dtype = "float64")#candidate|7168|(196,)|const|float64
const_7169 = relay.const([2.704296,-4.731824,2.021257,-8.078009,-7.475705,5.542449,5.560259,-1.976565,2.543896,5.183368,9.867422,-2.484474,6.668230,4.884480,3.827364,1.989902,-8.785783,2.486239,-3.976218,-0.487863,-1.795485,4.091480,-5.575024,-0.115860,-4.764226,-3.927099,8.490674,2.864815,5.328680,9.923323,4.471820,-0.208343,9.987364,4.525292,2.086150,-6.261411,-2.493780,9.546547,-3.005570,-9.851201,9.993836,-7.943599,-1.153971,4.087786,-3.781498,-4.780397,4.028280,4.966647,-1.919399,-7.767384,-6.368021,2.757126,-1.403399,3.003604,-9.357519,6.122947,-5.703874,-8.902718,5.467685,-5.513468,4.519756,0.063208,2.537618,8.545663,-4.937987,1.379924,-3.683397,1.024717,9.578598,5.193404,-1.164728,6.999648,-0.329717,8.103127,8.085524,9.518677,-6.431848,-8.807790,9.850680,0.709872,9.847214,-0.129548,-6.085002,6.715377,-4.239519,9.884485,0.963306,4.753458,4.136266,-1.935548,4.188876,5.234148,-0.895120,4.692427,7.167894,3.295245,-2.711679,-0.316269,4.322594,-5.634593,7.130297,9.478354,0.768580,-9.971281,6.876922,2.939212,1.169620,5.688444,-1.507076,5.535760,1.308721,3.775796,8.483302,-6.404501,6.177258,-1.439621,6.573595,8.229099,4.672344,2.959898,-5.537011,0.184705,2.140633,-9.527097,1.855403,8.048264,-8.104794,-3.588871,-9.537938,8.877279,-0.092585,-1.584656,7.668365,-0.437125,-8.527690,1.012433,-6.271121,-5.491068,6.101677,-4.494639,-8.346797,-8.490503,-8.700999,-0.941063,9.429393,-3.313257,-1.035223,2.307199,-7.596668,-3.442240,2.243554,-6.659736,-8.045441,7.220400,6.481410,-7.609666,2.420396,-9.877597,-3.918473,0.056941,-5.818258,5.635421,-1.389041,-0.394018,-9.104602,3.783738,8.101412,5.957435,-7.629041,1.951244,-2.014245,-6.177207,-7.001193,0.314935,1.294170,9.950367,-2.398591,-5.357722,7.701784,-8.613995,5.213847,-6.890410,5.260966,-7.212183,-6.303112,3.350631,-4.114636,1.834151,-4.770969,6.919732,4.503034,-2.558352,1.124171,-7.897582,5.729866,-5.398732,3.819675,3.253129,-4.899435,-1.813856,-2.902926,-4.237172,6.484817,6.373459,-6.955847,-1.931919,7.749005,-1.096164,7.120715,-6.086228,2.675780,-6.094270,4.220293,4.507493,7.546159,-9.681287,5.302531,-5.961397,-1.231314,-2.734274,-8.736470,-8.852280,3.998312,-0.083995,-0.648053,-3.068116,9.939427,-0.706247,-5.286473,3.567299,1.968709,6.607650,-2.288747,-5.724726,-9.157337,0.805436,1.185686,-8.873332,-1.489182,0.787948,7.176877,-3.198128,-0.254944,6.766567,-2.956147,1.980056,6.077074,-2.498999,-1.212020,-0.512886,-3.793471,-5.686778,-8.041497,-1.553825,6.280757,9.439100,8.713152,-9.344858,-6.758107,4.838668,-3.471777,-6.353646,2.802489,0.854544,1.149209,-6.791200,9.298072,1.786231,-2.716285,2.798155,-9.247562,-7.018065,-1.176410,0.961949,3.038845,-0.177724,9.836199,7.010561,5.565469,1.878872,-6.100795,-8.193709,-4.528068,9.621846,-2.688528,-4.963538,2.198991,-7.779582,0.882546,-2.123028,-5.743920,-6.291985,-4.735857,4.346726,-7.398223,-4.689081,-3.385115,1.699676,8.058103,9.019004,1.335586,-6.451817,1.580962,-2.828757,-0.754484,7.818384,1.770114,1.640959,5.583768,-8.308648,9.973940,-1.882385,7.764089,-2.995559,0.041024,-6.895076,6.051447,5.299832,-2.914653,-4.473301,2.478660,8.887317,1.132675,-5.972375,4.099385,3.390523,6.574274,4.573133,8.758589,3.275751,4.788788,3.767312,-8.664118,0.865211,-9.094056,-5.824962,4.681208,0.113774,-7.335165,1.942746,-3.915441,-8.153349,4.382339,-4.516498,5.649425,9.150353,-0.897481,4.120546,9.357938,5.162826,-8.845106,1.964954,1.375280,8.683602,-7.208789,-9.061193,4.527993,0.732437,-5.010961,9.901972,1.141343,-1.029533,9.729906,2.643282,2.205084,-9.821986,-7.760301,0.825207,-0.665784,1.841128,-8.581426,9.496614,-1.086493,-1.129937,1.082991,-6.598546,-8.892071,-3.511370,-2.945970,-8.003539,-1.129278,-9.910311,1.471006,-1.494221,-2.186777,-9.848770,4.060996,-6.780658,-7.949238,-8.805594,-3.933857,9.381180,-8.552161,-2.930394,6.078214,-3.923246,9.784635,-0.949349,-2.237664,0.687061,-6.501529,6.883478,9.851006,5.330960,-1.642595,6.779491,-0.373903,7.800754,-7.694070,8.528299,6.743806,1.139397,-3.018172,3.603515,9.519099,1.388795,-3.079497,7.131002,-1.168368,-6.348229,7.742011,0.636733,-1.581128,-3.140326,-0.041816,-7.018354,9.245130,9.517005,4.160540,-7.465028,2.464053,-1.087645,0.743923,0.448920,-2.556388,-4.313111,-4.412546,6.644162,3.930032,9.655526,9.729066,2.184109,-3.941364,0.907375,6.399367,-2.113596,6.602852,-5.682537,-2.167324,3.606480,0.660764,-2.459020,9.293132,-3.222935,1.964866,9.881747,0.217483,3.046233,3.027985,2.835961,8.447914,2.416666,-5.394156,3.805967,5.104337,5.508792,-6.874533,-4.892341,0.766391,-5.173219,0.444332,-7.289626,-2.684490,-2.304810,-9.348894,-2.904069,6.277002,-2.640010,-6.959718,-6.380170,-1.211492,-8.802103,-5.958662,2.026522,-0.908765,-6.825128,2.143547,-9.826455,3.415253,4.620557,2.374679,5.189107,1.550880,-6.525294,3.769968,9.080189,5.386741,-7.298529,8.373725,9.137124,-3.592981,2.618922,-7.955026,6.723841,-3.929741,6.843863,5.373046,-5.887488,9.089634,-2.100747,4.996936,-3.844469,3.579812,-0.575324,-9.252471,-5.230158,-8.023631,-9.761692,-3.309312,-3.961938,-7.655924,-1.763764,-0.229203,-6.508994,3.980276,-5.597082,5.865661,7.139700,5.160135,0.764002,-5.023444,-4.800857,3.344107,7.905516,5.521701,-7.514747,-1.727927,0.711086,1.917643,-0.311678,-5.166795,9.964525,9.519089,-3.151858,1.759770,2.116307,-7.307614,-6.588421,-7.623141,1.601314,6.598002,-9.487127,-4.193537,-9.432879,4.656601,-9.405392,0.362300,6.895460,8.320124,9.117517,3.817718,-9.710564,8.249565,1.777469,-7.170906,7.248766,-6.558398,5.492974,9.972474,-2.599457,-8.327312,-4.746989,9.253488,1.838788,4.122689,0.630922,8.069653,-1.088224,-3.696066,-5.195252,-4.428062,-6.188139,1.318042,2.146446,5.570309,-9.431583,6.716437,5.470113,-5.939528,2.255376,1.980506,3.181816,-2.521758,3.827872,4.088941,2.470356,1.478675,1.383317,-4.311277,1.891104,-2.168821,5.696902,-9.357810,-2.022814,8.848888,9.710450,-5.794028,1.393607,-8.480745,3.882039,7.084982,-1.749510,-2.319471,9.497156,-1.635628,-3.368659,-0.596083,-7.371224,-5.936393,-1.767126,-0.494677,8.116483,-0.646924,1.269331,7.114782,-3.900659,-5.050934,-6.725105,-2.650512,6.346649,-9.004594,-2.971520,1.661285,-0.258527,2.157807,-3.936168,-6.890104,9.192172,-1.018482,8.936767,2.223641,-6.711837,-1.889059,9.191933,2.910787,-1.302740,-1.583122,-4.639968,6.552518,-2.925397,7.599148,1.340923,-3.513433,-2.969475,9.478641,-5.608465,-7.758379,-0.781271,9.664198,8.430089,-8.331587,3.582451,-9.893568,2.594791,-4.439804,0.063852,-9.284071,4.831901,1.289274,8.615729,1.584347,4.036393,2.900612,1.192005,6.548932,4.898758,-2.388549,0.416990,-6.276201,-8.497251,-2.770087,3.858083,-6.429137,3.230698,-2.380544,8.336182,-5.235911,1.542143,-0.512407,7.022319,-7.853333,-2.934382,0.394322,8.925364,-5.740132,-7.395309,9.167661,8.088211,-6.709593,9.500327,0.413659,-4.665813,-7.669568,2.204045,-4.703950,-0.101484,0.043552,5.440252,-6.907467,4.850559,7.482007,3.106513,8.960865,-1.073832,0.496459,-7.153686,-0.397092,9.624126,7.553352,-4.143159,9.166771,-6.537370,3.245564,8.584169,-4.574334,-0.192274,-9.224254,2.230564,-8.073140,1.618821,6.095556,-0.019704,-2.446110,-7.481858,0.118664,-2.298097,-0.487133,9.488041,-2.690505,1.779412,9.300691,-7.576820,-5.273482,1.411156,-5.142675,-5.447020,9.058318,1.071568,-7.766451,9.450704,-0.915553,-9.558137,-2.685610,-1.700176,-3.218231,5.009055,1.447846,8.518202,1.230257,-0.739651,2.034348,-8.202688,-8.822937,2.296246,0.515037,-5.945014,-5.143931,-0.745693,-5.264346,0.023415,9.810695,6.893513,8.999851,-4.133429,5.737299,-4.038908,8.714412,4.783103,-0.460993,1.475155,9.391702,-4.905233,-9.437899,-7.701123,2.480336,-7.481691,7.966594,-2.194155,-9.315448,1.338376,6.457207,2.241544,-3.496707,-4.630853,1.975771,1.774425,5.524079,-1.135437,-5.050992,6.321000,-8.472764,-3.460635,6.272610,-2.781967,1.830960,5.444211,2.178556,-4.217118,-0.552720,7.674738,-7.776453,-9.821961,-6.466253,6.101649,-6.855635,-3.983337,-9.255898,-3.885775,0.332037,-6.167350,-0.834089,-5.560384,-7.237579,-0.847895,8.625799,-4.502915,-6.596426,-0.199628,9.461185,3.130030,-4.721365,-2.772966,5.221787,-7.902806,-2.456147,7.856409,-4.197395,-1.769787,-4.202600,7.503019,-3.012350,9.028799,6.910588,8.721661,-2.342230,-1.644086,5.208796,8.183689,4.373783,1.783242,-4.283001,-5.006712,-6.148644,3.781274,3.454759,5.855075,-0.211300,-1.379926,-1.441020,-0.228141,8.031566,0.146861,-2.053219,9.433767,-8.181833,5.521793,9.694863,2.585759,-8.465614,4.124391,-8.368310,-4.439438,6.211264,-4.105371,-5.184974,-6.406551,4.253258,-0.631782,6.778271,4.176849,0.920972,-4.826047,-2.178350,-3.238871,6.175607,9.396279,-7.910299,-4.614600,-5.968108,2.117386,-5.473800,-9.951252,1.247065,5.989058,-0.655614,-5.189568,3.196850,9.825774,3.970975,-2.613263,3.147231,-5.990790,8.413283,5.103911,8.048856,8.410518,8.923988,7.360448,-1.636040,4.767135], dtype = "float32")#candidate|7169|(910,)|const|float32
call_7167 = relay.TupleGetItem(func_7052_call(relay.reshape(const_7168.astype('float64'), [196,]), relay.reshape(const_7169.astype('float32'), [1, 910]), ), 2)
call_7170 = relay.TupleGetItem(func_7055_call(relay.reshape(const_7168.astype('float64'), [196,]), relay.reshape(const_7169.astype('float32'), [1, 910]), ), 2)
func_5647_call = mod.get_global_var('func_5647')
func_5648_call = mutated_mod.get_global_var('func_5648')
call_7178 = relay.TupleGetItem(func_5647_call(), 1)
call_7179 = relay.TupleGetItem(func_5648_call(), 1)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
const_7185 = relay.const([False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False], dtype = "bool")#candidate|7185|(1152,)|const|bool
call_7184 = func_368_call(relay.reshape(const_7185.astype('bool'), [16, 6, 12]), relay.reshape(const_7185.astype('bool'), [16, 6, 12]), )
call_7186 = func_368_call(relay.reshape(const_7185.astype('bool'), [16, 6, 12]), relay.reshape(const_7185.astype('bool'), [16, 6, 12]), )
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_7193 = func_4537_call()
call_7194 = func_4537_call()
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_7195 = relay.TupleGetItem(func_1303_call(), 0)
call_7196 = relay.TupleGetItem(func_1305_call(), 0)
output = relay.Tuple([call_7164,call_7167,const_7168,const_7169,call_7178,call_7184,const_7185,call_7193,call_7195,])
output2 = relay.Tuple([call_7165,call_7170,const_7168,const_7169,call_7179,call_7186,const_7185,call_7194,call_7196,])
func_7224 = relay.Function([], output)
mod['func_7224'] = func_7224
mod = relay.transform.InferType()(mod)
mutated_mod['func_7224'] = func_7224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7224_call = mutated_mod.get_global_var('func_7224')
call_7225 = func_7224_call()
output = call_7225
func_7226 = relay.Function([], output)
mutated_mod['func_7226'] = func_7226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2526_call = mod.get_global_var('func_2526')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_7227 = relay.TupleGetItem(func_2526_call(), 0)
call_7228 = relay.TupleGetItem(func_2527_call(), 0)
output = relay.Tuple([call_7227,])
output2 = relay.Tuple([call_7228,])
func_7253 = relay.Function([], output)
mod['func_7253'] = func_7253
mod = relay.transform.InferType()(mod)
mutated_mod['func_7253'] = func_7253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mutated_mod.get_global_var('func_7253')
call_7254 = func_7253_call()
output = call_7254
func_7255 = relay.Function([], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_823_call = mutated_mod.get_global_var('func_823')
call_7285 = relay.TupleGetItem(func_822_call(), 0)
call_7286 = relay.TupleGetItem(func_823_call(), 0)
output = call_7285
output2 = call_7286
func_7287 = relay.Function([], output)
mod['func_7287'] = func_7287
mod = relay.transform.InferType()(mod)
output = func_7287()
func_7288 = relay.Function([], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mod.get_global_var('func_5162')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_7294 = func_5162_call()
call_7295 = func_5162_call()
func_1565_call = mod.get_global_var('func_1565')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_7337 = relay.var("var_7337", dtype = "float32", shape = (448,))#candidate|7337|(448,)|var|float32
call_7336 = relay.TupleGetItem(func_1565_call(relay.reshape(var_7337.astype('float32'), [14, 2, 16]), relay.reshape(var_7337.astype('float32'), [14, 2, 16]), ), 1)
call_7338 = relay.TupleGetItem(func_1569_call(relay.reshape(var_7337.astype('float32'), [14, 2, 16]), relay.reshape(var_7337.astype('float32'), [14, 2, 16]), ), 1)
output = relay.Tuple([call_7294,call_7336,var_7337,])
output2 = relay.Tuple([call_7295,call_7338,var_7337,])
func_7347 = relay.Function([var_7337,], output)
mod['func_7347'] = func_7347
mod = relay.transform.InferType()(mod)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7348 = relay.var("var_7348", dtype = "float32", shape = (448,))#candidate|7348|(448,)|var|float32
func_7347_call = mutated_mod.get_global_var('func_7347')
call_7349 = func_7347_call(var_7348)
output = call_7349
func_7350 = relay.Function([var_7348], output)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3475_call = mod.get_global_var('func_3475')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_7363 = relay.TupleGetItem(func_3475_call(), 1)
call_7364 = relay.TupleGetItem(func_3476_call(), 1)
output = call_7363
output2 = call_7364
func_7365 = relay.Function([], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
output = func_7365()
func_7366 = relay.Function([], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7372 = relay.var("var_7372", dtype = "int32", shape = (6, 15, 13))#candidate|7372|(6, 15, 13)|var|int32
const_7373 = relay.const([[[8,-8,10,1,9,2,-8,7,-8,-9,-9,-1,-9],[1,-1,-7,8,7,1,1,5,3,-8,1,9,6],[-6,-6,4,-10,8,-1,-3,6,8,3,1,-9,6],[-4,-10,2,-1,-3,-6,7,-10,-10,-9,-6,-4,-4],[-5,-5,-3,-8,1,-10,-6,7,-6,6,5,9,-2],[4,-4,-2,-1,1,-6,-8,-9,-9,-1,-7,-3,1],[8,-5,-4,6,-7,-8,3,-2,-8,-6,-9,2,-3],[7,1,-5,9,-7,7,1,-4,-2,-8,-8,3,3],[-10,3,3,1,-7,3,6,-9,5,-7,-8,-8,3],[3,9,-9,-3,4,2,10,-10,7,2,9,5,8],[6,10,-3,7,-10,-3,-9,-9,-10,2,1,-8,-3],[-4,-4,2,10,1,-6,5,5,1,5,-4,-10,-9],[-6,-5,5,-7,-2,10,4,5,-8,-8,-8,-6,10],[10,-6,2,-3,1,8,8,1,-4,-9,-5,-9,9],[-5,-10,5,-4,8,-5,2,-10,5,10,6,-9,3]],[[2,-10,-9,6,-7,-1,3,6,10,-3,-10,-8,2],[-4,-9,-8,9,1,-10,-9,-7,-9,-2,10,7,-4],[-2,7,6,-7,-8,-7,-3,-9,5,-2,-10,5,-10],[-4,8,1,-10,-6,-10,5,-9,9,1,5,-5,10],[-1,-7,-2,7,-1,-2,9,-1,-2,-10,-9,1,6],[5,6,-7,10,10,-9,4,9,2,3,-6,-10,-5],[5,6,-5,-3,6,-10,5,10,8,1,9,5,7],[-8,10,-3,-9,-6,-9,5,-8,4,6,-7,-8,-4],[-4,-3,-4,7,2,1,-10,-6,-8,6,8,1,-4],[8,7,-10,-3,-3,4,1,9,-9,-10,7,10,4],[-1,-9,3,8,-1,2,-3,-1,4,-5,3,-9,-3],[-1,-10,-10,-3,-8,8,8,-6,5,7,8,-7,4],[1,5,10,8,4,-10,8,-3,4,8,-4,-1,1],[2,-4,-10,-10,10,4,9,-5,4,7,-2,1,-2],[4,-7,1,-5,-8,2,3,-9,10,-6,8,-8,9]],[[7,1,4,1,2,-3,-8,3,8,-2,2,4,6],[-8,-7,6,7,-3,7,-4,-5,8,-7,-5,-7,-1],[-8,-7,-9,1,-1,9,-8,-1,-6,4,4,-7,2],[-8,-9,-10,-6,-1,3,10,-1,-4,-1,2,9,-1],[7,-6,9,8,2,5,4,-2,8,-10,9,5,-8],[9,4,-4,7,-10,1,4,-5,-1,5,-7,-3,1],[3,-4,-5,-2,-5,10,4,8,-7,7,3,2,-1],[-10,-5,6,1,9,-7,6,5,1,5,5,4,-5],[-9,-5,-3,-5,-8,-6,-3,4,6,-1,6,-2,-3],[-3,8,2,-3,10,-1,-8,-7,7,-9,-1,1,-10],[4,-7,7,-4,8,-2,4,-8,-6,4,-1,3,-4],[-9,-6,3,8,-7,-10,8,6,8,2,4,4,-1],[-1,-7,9,-3,2,5,7,-5,-10,4,4,5,-2],[6,-9,3,3,6,-5,-9,4,-8,-3,-8,9,10],[-8,3,-5,5,6,-3,-7,3,7,-10,-3,4,5]],[[-2,5,-8,-8,-10,10,5,5,-6,-7,6,-8,-7],[-9,8,2,-6,3,-10,7,-4,-7,-4,8,-9,-9],[-9,3,10,8,4,10,-6,6,-2,6,-9,-6,9],[10,-7,3,6,5,-8,5,-2,3,-6,4,1,5],[-6,10,-4,-3,9,-10,-4,2,7,-5,10,7,-9],[7,2,10,4,-3,-2,1,2,10,-4,7,10,8],[-2,-10,-5,-2,1,-5,4,5,-2,-1,6,10,4],[3,1,-3,-6,5,10,-10,-9,-9,-3,-1,1,-9],[3,-8,9,10,3,-3,6,4,-3,-8,9,7,2],[-7,2,-1,-7,2,10,-6,-7,6,4,9,4,2],[-7,-5,7,-1,10,-3,-2,-3,-9,7,-7,-9,-3],[-8,8,-10,1,5,9,-6,-9,-6,-8,-3,-7,2],[3,4,-2,1,-4,-6,-8,2,8,-6,1,-7,-10],[-5,-3,10,-8,2,-9,-9,-5,8,5,-1,-10,-9],[-9,-7,7,6,8,-5,-2,-6,9,-4,2,10,-1]],[[-10,9,1,6,-7,-1,2,-10,-8,4,-1,-1,1],[-6,1,-1,-8,10,8,-9,-10,7,10,1,-10,-1],[-1,-8,8,-1,-1,9,5,-1,7,8,-8,1,4],[5,-8,7,-3,-10,-10,9,7,3,9,-7,-3,6],[-1,9,-9,-9,5,6,2,-6,-1,6,-2,2,-2],[-10,3,6,4,-9,-2,-2,6,-4,8,-3,-6,6],[7,-1,-6,-3,8,-7,5,-9,-6,-5,-1,-3,8],[7,-2,-1,-3,-7,5,2,-7,10,-4,-10,-10,-3],[1,-9,1,-4,10,-3,8,-2,7,-8,10,8,-7],[-4,-3,-7,4,-5,3,-9,5,-6,9,-7,3,-5],[-5,8,-1,-8,-1,9,2,-2,1,10,3,-10,5],[1,3,10,10,10,10,6,-3,-9,-8,2,2,7],[9,10,-5,3,-8,7,-2,-9,-7,6,-1,6,7],[1,1,7,-7,5,9,-1,-2,-4,5,9,-8,1],[1,9,5,-9,9,-8,2,-8,1,7,8,-10,-5]],[[-5,3,2,-3,-1,-10,7,-6,-8,8,9,-5,-5],[-10,-6,-3,7,6,9,10,-10,-10,-2,1,7,7],[-1,4,5,-10,-8,3,6,-7,-9,-6,-9,-7,5],[2,9,7,4,-3,-7,2,-5,-3,4,-7,8,3],[2,-10,-8,-6,-4,7,6,8,3,9,5,-9,3],[-2,-9,-8,-3,-7,-5,-9,6,8,6,-3,6,-6],[-5,7,-1,1,-4,-3,9,7,1,-4,2,8,6],[4,7,-2,-5,2,-8,7,2,-8,-8,-7,-2,7],[-3,-1,-10,10,5,10,10,7,3,-1,-4,9,5],[4,-9,1,-7,10,7,3,-1,-5,4,-1,6,3],[-1,5,-10,-5,-9,8,1,1,7,4,-8,-9,1],[-9,-9,8,-7,-10,-9,6,3,3,-2,-4,10,-7],[4,-1,3,1,-4,-6,1,8,10,9,-9,-9,-7],[-2,-10,-7,4,-9,-8,2,1,-5,-5,4,6,-1],[6,-8,3,-1,-8,7,-6,2,9,8,-4,-4,-5]]], dtype = "int32")#candidate|7373|(6, 15, 13)|const|int32
bop_7374 = relay.subtract(var_7372.astype('int32'), relay.reshape(const_7373.astype('int32'), relay.shape_of(var_7372))) # shape=(6, 15, 13)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_7391 = relay.var("var_7391", dtype = "bool", shape = (48, 24))#candidate|7391|(48, 24)|var|bool
call_7390 = func_368_call(relay.reshape(var_7391.astype('bool'), [16, 6, 12]), relay.reshape(var_7391.astype('bool'), [16, 6, 12]), )
call_7392 = func_368_call(relay.reshape(var_7391.astype('bool'), [16, 6, 12]), relay.reshape(var_7391.astype('bool'), [16, 6, 12]), )
output = relay.Tuple([bop_7374,call_7390,var_7391,])
output2 = relay.Tuple([bop_7374,call_7392,var_7391,])
func_7397 = relay.Function([var_7372,var_7391,], output)
mod['func_7397'] = func_7397
mod = relay.transform.InferType()(mod)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7397_call = mutated_mod.get_global_var('func_7397')
var_7399 = relay.var("var_7399", dtype = "int32", shape = (6, 15, 13))#candidate|7399|(6, 15, 13)|var|int32
var_7400 = relay.var("var_7400", dtype = "bool", shape = (48, 24))#candidate|7400|(48, 24)|var|bool
call_7398 = func_7397_call(var_7399,var_7400,)
output = call_7398
func_7401 = relay.Function([var_7399,var_7400,], output)
mutated_mod['func_7401'] = func_7401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7411 = relay.var("var_7411", dtype = "uint16", shape = (10, 16, 15))#candidate|7411|(10, 16, 15)|var|uint16
var_7412 = relay.var("var_7412", dtype = "uint16", shape = (10, 16, 15))#candidate|7412|(10, 16, 15)|var|uint16
bop_7413 = relay.bitwise_and(var_7411.astype('uint16'), relay.reshape(var_7412.astype('uint16'), relay.shape_of(var_7411))) # shape=(10, 16, 15)
output = bop_7413
output2 = bop_7413
func_7421 = relay.Function([var_7411,var_7412,], output)
mod['func_7421'] = func_7421
mod = relay.transform.InferType()(mod)
mutated_mod['func_7421'] = func_7421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7421_call = mutated_mod.get_global_var('func_7421')
var_7423 = relay.var("var_7423", dtype = "uint16", shape = (10, 16, 15))#candidate|7423|(10, 16, 15)|var|uint16
var_7424 = relay.var("var_7424", dtype = "uint16", shape = (10, 16, 15))#candidate|7424|(10, 16, 15)|var|uint16
call_7422 = func_7421_call(var_7423,var_7424,)
output = call_7422
func_7425 = relay.Function([var_7423,var_7424,], output)
mutated_mod['func_7425'] = func_7425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_7460 = relay.TupleGetItem(func_759_call(), 1)
call_7461 = relay.TupleGetItem(func_760_call(), 1)
output = call_7460
output2 = call_7461
func_7483 = relay.Function([], output)
mod['func_7483'] = func_7483
mod = relay.transform.InferType()(mod)
mutated_mod['func_7483'] = func_7483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7483_call = mutated_mod.get_global_var('func_7483')
call_7484 = func_7483_call()
output = call_7484
func_7485 = relay.Function([], output)
mutated_mod['func_7485'] = func_7485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_7607 = func_591_call()
call_7608 = func_591_call()
output = relay.Tuple([call_7607,])
output2 = relay.Tuple([call_7608,])
func_7618 = relay.Function([], output)
mod['func_7618'] = func_7618
mod = relay.transform.InferType()(mod)
mutated_mod['func_7618'] = func_7618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mutated_mod.get_global_var('func_7618')
call_7619 = func_7618_call()
output = call_7619
func_7620 = relay.Function([], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7630 = relay.var("var_7630", dtype = "uint8", shape = (5, 6, 3))#candidate|7630|(5, 6, 3)|var|uint8
var_7631 = relay.var("var_7631", dtype = "uint8", shape = (5, 6, 3))#candidate|7631|(5, 6, 3)|var|uint8
bop_7632 = relay.maximum(var_7630.astype('uint8'), relay.reshape(var_7631.astype('uint8'), relay.shape_of(var_7630))) # shape=(5, 6, 3)
const_7639 = relay.const([[[10,-10,9],[-7,-10,4],[-7,-8,7],[-10,1,4],[-3,9,-6],[1,-10,10]],[[10,-4,4],[-2,8,-9],[-2,-8,10],[-4,-6,4],[-4,7,5],[3,-7,-8]],[[2,-3,1],[-7,-10,8],[4,-4,3],[-10,10,-2],[5,2,2],[-2,-9,-7]],[[6,5,-9],[-7,-5,3],[8,6,3],[4,-5,9],[-6,6,-5],[-6,-8,-6]],[[-4,-10,-3],[-6,6,-8],[1,-6,-6],[-8,5,8],[8,10,4],[3,-8,-4]]], dtype = "uint8")#candidate|7639|(5, 6, 3)|const|uint8
bop_7640 = relay.mod(bop_7632.astype('float64'), relay.reshape(const_7639.astype('float64'), relay.shape_of(bop_7632))) # shape=(5, 6, 3)
output = relay.Tuple([bop_7640,])
output2 = relay.Tuple([bop_7640,])
func_7646 = relay.Function([var_7630,var_7631,], output)
mod['func_7646'] = func_7646
mod = relay.transform.InferType()(mod)
var_7647 = relay.var("var_7647", dtype = "uint8", shape = (5, 6, 3))#candidate|7647|(5, 6, 3)|var|uint8
var_7648 = relay.var("var_7648", dtype = "uint8", shape = (5, 6, 3))#candidate|7648|(5, 6, 3)|var|uint8
output = func_7646(var_7647,var_7648,)
func_7649 = relay.Function([var_7647,var_7648,], output)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2079_call = mod.get_global_var('func_2079')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_7653 = relay.TupleGetItem(func_2079_call(), 3)
call_7654 = relay.TupleGetItem(func_2081_call(), 3)
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
const_7664 = relay.const([-6.452779,7.445058,7.329087,-8.813404,-2.592865,2.047270,3.055576,6.415571,7.756054,6.834426,8.773906,7.788037,-3.168077,6.698199,1.934632,-6.471395,9.037419,-9.945272,-8.963064,-4.867691,-6.066260,-0.636353,8.161362,-9.691495,-9.086745,-1.939720,6.460541,7.535782,3.335825,0.196317,4.658223,-8.308627,3.582250,2.730448,-8.358807,9.653379,1.479545,-7.663699,2.883836,9.281259,-4.327453,7.477743,4.782328,0.503294,7.864617,4.533251,9.811656,6.384109,-9.914425,-4.096012,-6.284916,9.557354,0.207417,3.728414,-3.616281,1.756706,-7.907582,-4.060882,6.722599,-3.588045,-0.640538,7.234380,1.145755,5.798127,7.218381,-0.391382,4.551934,4.833983,-6.675800,8.013393,-2.113133,5.871272,3.420805,-4.311704,-9.255977,-9.889752,6.994239,-4.527218,-2.807543,-8.807886,0.772546,-4.789176,2.282195,-4.510035,-6.418988,-2.445635,-6.284236,7.313668,-6.203313,-3.809427,-5.507369,4.125045,-5.294608,-0.980686,1.713640,-5.859216,-9.678816,9.714410,-1.885532,7.226016,5.069452,8.308677,2.750217,-1.902612,2.592762,-4.680717,1.301434,4.055254,0.395364,-6.616229,-6.570355,-7.296802,6.448929,-4.989876,0.250673,-0.121919,-2.164141,-0.218591,-3.727038,3.252479,2.760021,0.848164,6.609614,-5.849822,7.562629,-5.568316,2.187194,-6.209492,-6.297323,-4.162193,-4.867909,5.135766,5.683912,-2.468158,-3.652178,8.702560,-9.348493,-7.698243,8.403712,-6.037436,3.225951,-0.514911,0.310485,-5.633579,-3.340959,7.045578,6.058798,5.488224,-5.910824,8.432266,8.354678,-5.797265,4.558440,9.270621,1.676905,9.043307,-5.436312,0.444988,-8.125598,-1.421544,0.124869,1.666783,-9.855086,8.260540,2.480133,5.623979,8.871328,-0.219718,-2.416737,3.614924,4.193488,-1.240204,-7.989447,-0.567976,3.257842,0.710352,-8.853162,-4.614611,3.713221,-5.666231,-8.070815,9.213441,1.345134,-7.028408,-7.720735,-4.464088,6.313928,3.289196,-6.573249,-9.536326,-6.325743,-6.599243,9.641966,9.782137,-5.291594,6.376378,7.959091,-0.676491,-4.382503,-7.375617,-1.248801,-0.813332,-3.393422,-9.276507,7.305341,-5.281539,-4.682433,9.606513,3.266108,3.383874,-7.221012,-2.582162,7.979255,-3.353744,-1.634468,-2.959218,3.454812,-1.121417,5.718374,4.296303,8.580804,-5.009897,-5.988148,6.519950,6.469228,-9.946729,4.093385,3.988612,4.231564,-3.339290,6.804102,2.922258,-8.300408,-9.066226,-8.391664,-2.261475,7.590647,1.467981,-5.936028,-7.278314,4.218566,1.364073,7.478439,-7.798115,6.159169,-0.877172,0.757089,2.146732,5.503152,4.332052,4.552641,-2.616718,6.281175,5.020299,-2.244199,9.592261,-2.562637,2.314183,1.503861,-1.626550,-5.524210,2.478936,-6.691661,9.818393,-1.636863,0.453854,7.186741,3.247410,-6.247443,-5.561939,-3.081354,-0.874357,3.940328,-4.410680,9.356212,1.023141,-1.940756,-3.054223,8.749514,-1.598165,-4.610356,-9.786156,2.784017,-8.247579,-6.078224,6.778917,-6.749201,4.009221,5.762098,7.208101,-0.675668,-3.656837,3.164265,-2.623940,7.666877,7.702118,-8.384886,5.453826,0.598531,2.167475,-6.995690,-8.942397,1.615237,-5.113555,2.111601,3.816451,-8.409211,-5.101497,-8.899831,5.626921,-4.219626,-3.855973,-9.479248,-6.467416,4.789398,0.407074,-1.466772,4.911857,4.024504,-2.981196,4.726120,-8.784186,-6.426595,1.407052,7.212869,-0.451408,9.763649,6.175686,-2.909566,2.235638,8.568126,5.254768,-8.087883,7.876787,1.030680,0.220811,-7.260874,-3.560171,-1.199597,0.436099,-8.415915,9.331878,-5.082703,8.571865,9.078103,3.908751,9.230946,-2.040520,9.694684,0.251599,-7.925017,8.457361,7.367060,7.146575,4.479368,8.836373,-9.921737,-0.711404,9.663420,7.889561,-5.171255,-0.045487,9.454582,-9.404813,-4.002464,3.220682,-7.501121,0.179434,0.824794,4.462805,-7.000082,-8.967828,-7.863015,1.170834,6.081049,-6.180454,3.268413,3.834358,0.129726,9.586582,-0.780706,-7.089752,5.646191,-9.825342,-2.562029,-7.689179,-4.061268,3.545913,5.861810,0.067724,0.938944,-9.317666,-5.994338,-9.465473,5.346841,6.313703,-8.438200,-2.784543,-7.592731,-6.811253,8.691800,0.617542,-2.853211,-8.595806,2.319767,-4.638494,5.383050,-6.240751,-7.075218,0.318031,-4.724085,7.810542,7.790613,5.784876,-1.750589,-2.266235,-6.733093,-7.811524,4.604716,-5.800803,-3.979374,1.919036,2.228479,1.598545,-0.086020,-5.360906,9.807169,-9.620203,7.705493,-4.040201,9.471356,6.483766,-4.436016,-9.752421,-4.371563,6.212153,7.251242,-3.938530,-9.515986,6.350102,9.890301,5.947055,8.403887,9.566617,1.786304,9.794089,-0.265271,-1.849055,-9.543270,-2.906155,4.539261,0.444987,8.197311,-3.762540,6.413752,-7.495945,1.594950,9.581301,6.135469,5.976088,3.519744,-8.716580,-8.486429,-5.466577,1.929180,2.031117,-3.890912,-9.038977,2.067122,7.123534,-5.804689,0.966309,-6.553386,-7.718463,1.357234,-1.642017,-9.317880,-0.048102,-0.251273,5.518792,-9.357468,-7.042981,6.421272,-6.971455,9.308715,9.132508,7.824381,8.046753,-3.614746,-9.108983,-9.658735,-5.375172,7.576654,6.725074,3.858366,2.655045,6.651868,2.839438,-2.783392,5.419144,2.576558,6.443893,9.439505,-3.735457,1.274610,8.888387,-9.042006,-0.416007,6.072288,9.522146,1.113918,-2.907643,-7.644169,0.047753,8.016526,8.268492,-5.353139,3.133189,7.189991,7.617703,-8.666498,-3.414266,-3.130452,-3.102558,-0.043909,-1.572090,5.796217,1.871624,-6.244167,-0.167015,0.672017,4.388809,5.727678,-7.045240,-0.385561,7.459474,-3.573519,6.814949,-1.261901,-3.047508,2.994489,-9.740730,5.711189,6.257617,7.713357,4.329036,7.920374,-3.557652,-2.332610,0.437265,-9.909511,8.523449,3.650977,5.403404,0.958248,-0.280951,-2.001680,6.902738,-2.695010,-5.772671,-4.235474,3.069304,-4.754378,-0.540918,-6.189586,7.549433,-1.969533,5.544113,-5.210954,-7.587863,7.068013,-2.290671,2.459230,3.395168,-6.454878,9.251209,-2.101840,-5.880740,-1.233947,9.777918,6.551700,0.438934,9.666278,0.037256,3.501423,4.835526,-6.616807,3.480915,7.115024,-0.244001,-3.332870,3.619310,-6.166765,5.665765,-4.303021,3.671117,7.597367,-6.237559,4.758905,-9.275427,9.576798,8.112300,-9.119317,0.685339,-1.363386,3.585019,-3.003741,0.966934,7.944862,8.049112,5.297921,0.039525,-1.448584,9.597754,4.319414,-5.951130,-1.223943,-3.397494,-4.810316,-1.408949,7.444543,7.058017,-3.242604,-4.258915,3.695445,-2.818413,-5.136477,-8.289424,2.789316,1.943800,2.500044,2.232600,8.192802,-1.425497,9.322618,-6.648679,3.988880,-6.164800,-5.843262,9.891849,7.175547,-3.501051,8.930721,-2.629602,6.016553,3.957249,7.829612,-5.320775,-0.880486,6.596125,4.289589,0.898029,2.175547,4.192878,-9.948457,-5.266040,-7.718130,-8.912295,7.237529,-9.224896,-0.761466,8.206676,-0.555942,-5.436759,5.859746,-8.656322,-5.008774,0.003147,-7.417872,7.208843,8.816225,-2.342499,9.164588,9.883470,9.646889,1.281835,1.903628,5.924038,-2.713988,-3.494522,9.307671,-9.674557,-2.130234,-6.687042,-8.258970,-1.165624,3.234162,4.515831,6.319030,2.269757,-8.569980,-8.048395,0.042941,3.651426,4.111580,9.010370,0.746682,-0.959929,6.445509,-2.931525,5.479619,9.998711,1.025276,6.771723,3.502172,7.810225,9.271719,0.080558,3.614707,-1.621836,2.050096,-7.829745,7.566787,-1.682148,6.395069,9.011609,5.567455,6.536980,2.756366,2.652382,2.452461,6.668219,-3.059725,1.417110,2.778890,9.094588,-7.097483,1.759051,-3.154218,-1.830977,-9.431323,-1.643544,0.002840,-2.619659,-7.894626,4.417867,-9.908405,-9.456109,-5.594221,4.911549,3.034205,-0.289586,-6.579153,-0.521362,2.831390,-7.605790,-8.933760,-2.057740,-5.725643,-5.361168,-6.399248,-2.196888,-6.332443,-6.717431,-7.107686,2.493045,-4.226318,3.441434,4.512892,8.847807,1.892655,3.464075,1.061571,5.569108,-3.853886,-3.496012,0.560142,-5.205453,-4.862351,-6.176045,-2.100667,-7.170536,6.858311,5.728695,0.671253,-3.570505,-3.660868,-4.482978,6.825909,6.770084,-3.441989,-1.967555,-3.476659,9.015337,1.667303,0.349768,2.276656,-4.424424,-0.306521,-7.252153,7.679103,-7.018788,-6.977950,2.618746,-8.362385,9.925340,-5.753076,-7.204160,-5.149384,8.847159,-0.838703,6.785511,1.897119,-1.092660,0.864958,0.571421,4.733764,-6.197862,1.644847,9.143859,-2.509966,-9.982540,0.814916,7.625852,-4.271442,9.269775,-5.714812,0.278131,3.502802,4.395465,-9.098092,1.816943,-7.249783,9.319210,2.015388,8.053268,9.430561,-9.154152,-7.942607,4.676568,5.893864,6.938259,9.330264,7.122466,2.266088,-8.674230,5.525674,7.240286,6.733462,9.529400,-2.244479,7.069046,-2.513706,-8.009432,5.836423,-3.675529,-5.081734,-6.587494,-6.037423,-3.720436,-0.389452,2.490295,-3.882119,8.542647,7.361283,-9.723202,2.543333,4.536305,-1.454595,1.528304,2.359425,-4.792511,1.356396,-4.798247,-1.095685,6.148067,6.373159,-9.837388,-0.781420,4.733996,2.028027,8.716903,5.468098,-0.069505,-9.275222,-0.087521,1.252737,7.770421,2.700855,-3.107075,0.718030,7.520200,-5.750500,-5.953101,0.080354,-1.831184,-6.641727,-5.923080,4.613717,8.735775,-2.822077,5.921224,-1.784100,-3.734981,-9.857476,3.241722,9.383078,-8.684815,-3.570193,-9.155024,6.446470,-7.299135,-6.043171,8.541574,-3.528975,9.584172,-1.429124,-5.002447,0.507852,2.620267], dtype = "float32")#candidate|7664|(910,)|const|float32
call_7663 = relay.TupleGetItem(func_4366_call(relay.reshape(const_7664.astype('float32'), [910,])), 0)
call_7665 = relay.TupleGetItem(func_4369_call(relay.reshape(const_7664.astype('float32'), [910,])), 0)
output = relay.Tuple([call_7653,call_7663,const_7664,])
output2 = relay.Tuple([call_7654,call_7665,const_7664,])
func_7697 = relay.Function([], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
output = func_7697()
func_7698 = relay.Function([], output)
mutated_mod['func_7698'] = func_7698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4888_call = mod.get_global_var('func_4888')
func_4889_call = mutated_mod.get_global_var('func_4889')
call_7699 = relay.TupleGetItem(func_4888_call(), 0)
call_7700 = relay.TupleGetItem(func_4889_call(), 0)
output = relay.Tuple([call_7699,])
output2 = relay.Tuple([call_7700,])
func_7709 = relay.Function([], output)
mod['func_7709'] = func_7709
mod = relay.transform.InferType()(mod)
output = func_7709()
func_7710 = relay.Function([], output)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7483_call = mod.get_global_var('func_7483')
func_7485_call = mutated_mod.get_global_var('func_7485')
call_7776 = func_7483_call()
call_7777 = func_7483_call()
func_7224_call = mod.get_global_var('func_7224')
func_7226_call = mutated_mod.get_global_var('func_7226')
call_7778 = relay.TupleGetItem(func_7224_call(), 4)
call_7779 = relay.TupleGetItem(func_7226_call(), 4)
func_1676_call = mod.get_global_var('func_1676')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_7780 = relay.TupleGetItem(func_1676_call(), 0)
call_7781 = relay.TupleGetItem(func_1677_call(), 0)
func_7646_call = mod.get_global_var('func_7646')
func_7649_call = mutated_mod.get_global_var('func_7649')
const_7797 = relay.const([4,-3,-2,3,6,6,4,-3,-6,-9,3,7,-6,1,6,4,-3,9,6,7,9,7,9,4,-4,2,-6,-5,5,-10,3,3,3,-3,-1,2,-2,-3,-10,-6,9,6,-7,8,4,-3,2,-6,7,5,-10,7,-7,-2,-7,-5,-6,-4,9,-5,9,-1,5,7,7,-9,8,-8,6,4,-10,-4,8,-1,7,2,-5,9,10,-1,6,3,-4,1,-5,-7,-1,-3,-8,-8], dtype = "uint8")#candidate|7797|(90,)|const|uint8
call_7796 = relay.TupleGetItem(func_7646_call(relay.reshape(const_7797.astype('uint8'), [5, 6, 3]), relay.reshape(const_7797.astype('uint8'), [5, 6, 3]), ), 0)
call_7798 = relay.TupleGetItem(func_7649_call(relay.reshape(const_7797.astype('uint8'), [5, 6, 3]), relay.reshape(const_7797.astype('uint8'), [5, 6, 3]), ), 0)
var_7804 = relay.var("var_7804", dtype = "uint8", shape = (16, 4, 11))#candidate|7804|(16, 4, 11)|var|uint8
bop_7805 = relay.left_shift(call_7778.astype('int16'), relay.reshape(var_7804.astype('int16'), relay.shape_of(call_7778))) # shape=(16, 4, 11)
bop_7808 = relay.left_shift(call_7779.astype('int16'), relay.reshape(var_7804.astype('int16'), relay.shape_of(call_7779))) # shape=(16, 4, 11)
output = relay.Tuple([call_7776,call_7780,call_7796,const_7797,bop_7805,])
output2 = relay.Tuple([call_7777,call_7781,call_7798,const_7797,bop_7808,])
func_7815 = relay.Function([var_7804,], output)
mod['func_7815'] = func_7815
mod = relay.transform.InferType()(mod)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7816 = relay.var("var_7816", dtype = "uint8", shape = (16, 4, 11))#candidate|7816|(16, 4, 11)|var|uint8
func_7815_call = mutated_mod.get_global_var('func_7815')
call_7817 = func_7815_call(var_7816)
output = call_7817
func_7818 = relay.Function([var_7816], output)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7858 = relay.const([[[9.381650,3.839352,9.490359,-7.434430],[6.220969,-0.478609,2.653453,-5.096974],[7.198490,-4.009470,7.817379,3.893425],[-0.064146,1.402552,-3.402864,-5.604047],[9.234572,8.414726,1.806662,3.638350],[-5.655398,-5.190966,-5.981638,-6.498873],[6.028265,8.420923,1.890080,-3.772153],[-5.896954,-0.841839,-9.368532,5.942768],[-8.269795,9.120088,-5.213230,0.176663],[-3.634016,-6.609551,-1.327383,-9.096240],[1.233899,-2.321564,-4.009438,-1.331661],[-7.728887,1.939892,-8.824572,-5.890910],[-8.823116,-2.362781,-9.845050,3.111492],[8.765073,0.388308,6.064536,-3.465736]],[[-1.329016,5.349942,8.755950,9.210755],[0.718214,-6.683473,8.043364,-2.383890],[-3.720275,-4.299495,-1.284500,-8.964177],[-5.252366,-6.883078,3.764161,-8.042041],[3.049388,7.403279,-0.033233,3.841904],[1.573401,3.992439,-1.124107,-0.254613],[-3.819169,-5.564722,4.961486,-7.148770],[-5.117442,1.986393,2.298398,8.715164],[6.174968,1.412263,-3.996561,0.808203],[8.692373,-0.860107,6.562507,-0.263123],[-9.119574,-4.231215,8.599111,4.574759],[5.245641,-7.825720,-2.530513,-7.931083],[-5.038967,4.276420,-4.131882,-7.088151],[1.073196,2.419787,-1.377590,-3.048526]],[[-3.077736,-0.119330,-8.205258,-5.395174],[-9.922679,-5.013280,-8.051016,-6.968515],[8.836980,9.998862,2.996371,9.224367],[8.911883,1.432182,-3.987641,-9.538383],[-8.144952,4.879136,-2.272672,1.953130],[-7.121781,0.997321,-5.822880,2.546633],[-2.479870,3.379615,-3.036670,-9.648084],[1.843097,0.998810,-5.472656,6.641140],[-8.243994,5.142562,-6.531904,6.120462],[-6.594092,8.783196,7.443049,-9.534561],[-6.734215,7.087449,-8.486045,-8.804430],[9.731239,-4.504828,3.331260,-1.048647],[-8.307136,-9.802608,-8.201823,3.752634],[-5.748523,0.529968,6.456930,0.361802]],[[0.966676,-7.876160,3.770904,-8.909614],[8.762135,-8.858214,-1.091381,-9.985005],[-2.894555,6.255486,4.751761,8.871885],[8.768875,8.673207,2.025362,-9.205033],[9.773336,-4.017329,2.437523,9.100241],[7.256760,0.697827,-1.651188,-4.796728],[-8.006265,-5.958447,-4.178597,-1.836245],[-3.749310,-2.578972,-2.495805,9.081357],[-6.974718,-7.117591,-7.248821,-5.176383],[1.365761,5.393270,7.793044,-2.473026],[0.589920,8.970887,2.009730,6.974484],[0.130954,4.497788,0.301095,7.191624],[-8.026446,4.412897,6.884837,4.985685],[-2.335755,8.269342,-2.299646,6.509681]],[[-3.442171,-2.197861,-3.590577,1.761960],[2.483793,-9.198225,0.866320,-5.006205],[5.506796,-2.252764,6.967531,-3.161590],[-3.191354,-5.674608,3.618061,-9.179976],[-4.201880,8.636400,4.680465,8.122992],[3.196998,3.893111,7.639057,3.570118],[7.851156,-2.356508,7.030825,-2.986942],[-7.639302,-9.922876,8.201063,0.474886],[9.844856,-7.828254,3.506336,-7.834955],[9.638908,-0.203660,6.671451,-0.279922],[7.532073,-6.268369,6.245600,2.873587],[3.109601,3.328293,-5.228411,-3.496315],[-0.345331,-9.959750,-9.672177,-8.062362],[-0.622161,6.419764,-1.278377,7.316324]],[[-9.240888,-1.366543,-5.373794,3.855076],[-8.181216,-7.378089,9.534258,-0.927853],[-5.910895,6.709429,8.036340,-8.519628],[-1.042622,-1.446559,7.285296,5.472623],[3.417304,0.064042,1.026348,6.613006],[-0.222568,-8.276997,-3.349948,4.954372],[-2.296655,-7.836947,-4.837876,9.080073],[-5.576712,-0.144175,5.231116,3.402374],[8.655034,5.857544,2.557849,-2.763258],[-6.009740,7.732624,-6.233591,4.117435],[4.256591,-6.607256,9.111343,8.881118],[9.690205,0.172909,2.673006,1.747383],[-5.256914,8.422031,1.456735,6.746104],[-6.847647,7.610878,3.595920,9.079545]],[[-3.971540,-6.927667,-3.509252,2.894773],[5.854212,-3.884743,2.874378,-1.851731],[-1.387710,5.111159,7.872438,-8.922754],[1.811294,-4.651918,-9.994988,3.963812],[-0.077952,-7.011715,6.290158,-8.560921],[9.132040,2.043367,1.117536,-7.820361],[9.048011,7.290359,-3.327143,1.578147],[2.013446,-6.643123,7.966692,-8.764983],[5.811465,-6.785702,-2.445505,-3.660749],[-2.044811,-5.902380,3.544847,0.248625],[-6.205521,6.468694,-0.661419,-2.202100],[8.704401,-6.866351,1.375324,-9.959854],[4.241098,9.402546,9.872709,5.149414],[-6.320086,2.397264,-6.270498,-2.822529]],[[-9.204664,9.361304,-5.987556,-5.685437],[-9.722011,7.884904,-9.211487,2.479441],[-5.755960,4.122708,-0.484422,6.106820],[0.786444,-6.183967,-4.989761,-6.132870],[-1.901777,1.680593,-4.811570,-7.681139],[-6.032882,-5.102629,0.880438,0.167604],[-8.344912,-9.987756,4.015215,7.670217],[-2.827012,0.203810,9.434575,5.108286],[4.001336,-5.904878,5.609116,1.008324],[-6.652449,-5.139790,4.872333,-4.599903],[-4.516890,-2.282630,-9.224998,-5.589080],[0.665485,3.256485,-0.124137,-3.167245],[-8.923469,8.736645,-1.619006,4.821418],[-0.829895,-8.211757,4.335152,1.617836]],[[3.593162,-7.698883,-8.084645,6.714541],[-9.969686,-8.326429,0.302228,-2.415168],[2.393945,9.976816,-1.903403,4.294735],[-7.940191,-9.682287,-6.875064,-4.538224],[0.269583,1.407997,1.463715,8.573572],[-8.001271,-5.343995,4.663913,9.852334],[-4.966038,-7.564747,3.556014,8.932269],[1.934526,-4.831709,-0.627624,-1.047522],[0.063272,0.837078,-6.546862,-7.487778],[-3.453467,-8.477445,5.176505,-0.703660],[8.470008,4.053221,-6.188109,-4.442219],[-2.373011,0.332607,5.007370,8.296255],[-8.036604,-2.693263,4.140679,9.444152],[3.891111,2.855972,2.478573,6.855754]]], dtype = "float32")#candidate|7858|(9, 14, 4)|const|float32
uop_7859 = relay.atanh(const_7858.astype('float32')) # shape=(9, 14, 4)
func_4194_call = mod.get_global_var('func_4194')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_7865 = relay.TupleGetItem(func_4194_call(), 2)
call_7866 = relay.TupleGetItem(func_4195_call(), 2)
uop_7874 = relay.log2(uop_7859.astype('float32')) # shape=(9, 14, 4)
bop_7884 = relay.less(uop_7874.astype('bool'), relay.reshape(uop_7859.astype('bool'), relay.shape_of(uop_7874))) # shape=(9, 14, 4)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_7887 = func_2677_call()
call_7888 = func_2677_call()
output = relay.Tuple([call_7865,bop_7884,call_7887,])
output2 = relay.Tuple([call_7866,bop_7884,call_7888,])
func_7894 = relay.Function([], output)
mod['func_7894'] = func_7894
mod = relay.transform.InferType()(mod)
mutated_mod['func_7894'] = func_7894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7894_call = mutated_mod.get_global_var('func_7894')
call_7895 = func_7894_call()
output = call_7895
func_7896 = relay.Function([], output)
mutated_mod['func_7896'] = func_7896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_7914 = func_807_call()
call_7915 = func_807_call()
func_3500_call = mod.get_global_var('func_3500')
func_3501_call = mutated_mod.get_global_var('func_3501')
call_7918 = func_3500_call()
call_7919 = func_3500_call()
func_6067_call = mod.get_global_var('func_6067')
func_6070_call = mutated_mod.get_global_var('func_6070')
const_7931 = relay.const([[2,3,-9,8,2,2,-7,-2,9,2,9,-6,-9,-1,-10,-3,4,-10,10,8,-9,-2,7,9,-5,7,-1,6,-3,2,9,-6,1,6,4,-5,-4,-1,-8,8,1,9,8,6,4,5,-3,-4,6,8,-4,3,8,1,-2,1,-4,-9,-8,6,-5,5,3,-2,1,-7,3,-5,3,6,2,-3,2,1,-7,1,-9,9,6,-10,-1,4,-8,4,-2,7,10,4,-1,1,1,1,-8,1,2,-3,-8,-9,-3,-6,-3,-2,-4,-6,-9,-3,9,-2,4,3,3,-1,10,-9,-2,9,-9],[-10,-7,-8,-3,9,-4,-1,4,-4,-1,-10,-4,-5,6,-10,6,8,8,10,-6,5,1,10,-1,4,9,4,-5,-10,4,-5,-1,4,8,1,6,-8,4,-4,-2,7,-4,-7,-10,1,-6,-6,9,6,-5,-3,-5,-10,9,-3,2,-6,-3,-7,-9,-8,-5,6,4,3,-1,2,9,4,-6,1,-9,4,10,-6,2,-8,10,-2,5,6,2,-3,-10,9,4,-3,6,6,1,-7,-7,9,-6,-2,6,9,7,-1,9,-4,1,-7,-7,1,6,-10,-2,10,1,10,-1,-7,1,5,9,2],[-7,5,3,-1,-3,-3,1,2,7,-9,-1,7,4,1,-1,1,3,1,1,6,-2,-8,6,5,2,-4,-10,-4,-2,8,-7,3,-3,7,-6,-10,3,5,10,5,-4,6,9,-8,6,-4,5,2,-2,3,-3,10,1,-7,5,-2,2,-3,-9,-2,7,7,-3,-1,9,5,-7,7,-10,10,8,-2,-9,1,-8,-2,-9,8,-9,7,2,-9,6,-8,2,-2,9,3,1,-7,-9,7,-9,9,5,-5,7,8,10,2,6,-6,-9,7,5,2,-3,1,3,10,-8,-7,-7,-10,2,2,-7],[-5,7,8,-5,7,9,-2,10,2,-6,-2,-5,1,4,5,4,-10,1,-5,8,4,2,2,7,7,-5,6,1,7,-3,-9,-2,9,6,-10,8,4,2,-1,3,2,-8,8,-8,-7,7,9,4,5,-4,6,10,1,7,-1,-9,-10,1,-6,-5,3,8,3,2,2,4,-5,10,-6,-7,9,10,-6,-7,4,-7,4,-9,-7,-7,-6,-9,-5,8,-5,-6,4,4,-9,-10,5,-9,3,7,8,1,5,4,8,-9,6,9,-3,8,6,-6,7,9,1,2,-10,-3,6,4,9,8,1],[7,-10,8,7,4,-7,-6,1,-10,-4,7,-10,3,-4,-7,8,-9,-9,4,-10,1,-3,8,6,6,-10,-7,4,10,-1,-3,10,-7,8,6,2,-3,-4,-3,-8,-8,2,9,-5,3,7,-7,5,-8,7,-9,1,6,-5,-4,7,-3,9,-4,4,-2,-1,-8,3,1,9,-9,-6,-6,5,5,-3,-1,-4,-9,-2,9,-8,-4,-2,10,-7,-2,7,3,7,4,-10,-2,-1,1,2,1,-7,-2,9,10,3,6,-9,2,9,-6,2,-1,9,-10,-4,-10,5,-9,3,10,-1,-6,7,6],[3,-5,2,-9,10,3,-2,6,-4,-2,6,5,-10,8,8,-3,8,7,4,10,-7,9,-7,-7,-1,9,2,-5,-4,2,-8,2,-3,-5,-5,10,-9,1,3,6,6,-1,9,3,-8,-7,7,2,10,-6,4,7,6,-1,8,5,3,2,-2,9,-9,-8,-8,8,-10,3,4,-9,-9,-9,10,-1,-8,6,10,-9,2,9,8,7,4,3,-9,-8,5,-5,1,-7,-1,-10,10,1,-7,-3,-8,4,-8,9,1,6,-5,10,-9,5,-4,10,-4,-8,-1,-7,-9,2,10,-5,-1,9,-3],[1,8,1,-3,-5,-4,-10,-2,-6,10,10,-1,2,-7,-5,-10,4,4,-1,8,4,7,-9,-10,1,4,1,6,5,-6,6,9,-5,7,2,2,-1,7,-9,4,-9,9,2,-5,1,-9,9,-8,3,-10,5,10,-10,-6,5,9,8,6,-5,9,4,4,-8,-8,10,-5,-10,10,1,1,6,2,7,-8,-2,-8,-6,10,7,-6,-5,-3,-5,7,1,-6,5,2,9,-6,-8,-7,-9,8,-4,4,-7,-6,-3,2,10,-10,-7,1,-4,-5,9,7,-7,-5,-1,-2,-7,-3,-1,4,-3],[10,-1,-4,-6,-7,10,-5,1,10,9,10,-10,6,-10,-5,-7,2,6,10,6,-6,-3,5,-3,6,9,-7,1,-2,-4,-3,-2,8,3,-9,-7,-7,-10,-2,1,4,-4,-1,-6,5,10,10,2,-1,6,-6,-6,3,7,-8,3,-8,-3,-1,2,1,-1,5,9,-10,7,-9,-9,1,-10,-4,-1,8,-1,-4,-3,6,-6,-9,6,-3,7,8,-8,4,7,9,-2,5,5,8,-6,4,-3,10,-4,4,9,-7,-10,3,9,-9,-8,-6,-8,3,-9,8,1,3,5,7,1,8,-5,3],[4,6,-8,7,9,10,6,-1,-7,10,-4,-5,1,8,-6,-1,-5,-2,-3,9,-8,9,-8,-1,-7,-9,8,-9,7,6,-10,-6,7,-6,-9,-2,3,-1,4,-7,2,5,10,-10,1,2,6,4,8,-4,6,-3,9,-1,-7,7,4,1,4,-1,-9,4,-3,-9,-10,-9,10,5,-8,-4,5,-4,3,-3,7,2,10,-1,4,-5,4,-9,6,4,10,-8,-1,-4,-8,-1,-2,10,9,-5,3,7,2,2,10,1,-7,-5,-1,-3,5,-3,9,8,-5,10,1,-5,-3,-10,-4,5,1],[-10,-8,-3,-8,-1,-10,-4,-2,-2,10,-5,-6,-8,-7,10,2,4,2,4,-4,9,-5,-8,5,-9,9,10,10,-6,10,7,-5,-1,-8,10,-9,7,-10,-1,7,2,2,1,-1,-1,2,-10,-10,-7,5,2,6,7,6,-1,-8,9,8,-3,9,-7,-1,10,-7,10,4,-7,3,6,-4,2,-1,-1,3,7,8,-2,2,-10,9,-2,-4,-3,3,-6,-8,6,-9,10,2,1,3,9,-5,4,-1,-9,3,1,1,2,6,-1,-6,-5,8,8,-1,-7,-10,-2,-7,-5,3,8,-5,-3],[10,-4,-5,-5,-6,4,-2,6,4,-2,-7,5,6,3,-6,2,2,-10,-6,-2,8,2,9,-3,-3,5,-3,-9,-4,10,-9,-3,10,-10,8,9,-7,9,8,-10,6,-1,4,6,2,-5,8,-2,1,5,3,9,-6,10,8,-6,-5,-3,-7,-8,-5,-2,1,3,5,5,-3,-9,-1,-4,-9,5,-7,3,-7,5,-4,-7,10,-10,8,-4,-10,-2,4,-1,-4,6,-7,7,2,6,-10,2,10,6,9,-1,-7,-9,-6,-3,-1,4,-8,9,-5,-7,-7,5,-2,7,3,8,10,-10,-10]], dtype = "int32")#candidate|7931|(11, 117)|const|int32
const_7932 = relay.const([5.973891,-5.970984,-2.619070,-2.414686,9.247727,-3.442151,-0.457183,7.037915,-8.855912,-0.765976,9.909496,-3.566364,5.366460,6.380549,-9.379373,2.817027,-7.127259,2.847082,9.382562,-8.117898,2.501231,-7.999669,-5.135595,7.180102,-7.489006,8.588632,-3.852989,5.947440,-7.391934,-1.553697,-3.187849,2.453894,9.232777,8.746835,-6.120837,2.719197,5.208066,-3.518936,-1.457905,-4.609144,6.872886,-1.927344,7.163984,-3.482094,-0.919272,6.481566,-9.043533,6.317578,6.139908,-6.351909,1.833701,4.691292,7.892960,-9.815858,4.276661,6.894614,1.105891,-7.723020,6.869653,-9.031235,5.297692,3.408335,-8.580881,1.298664,5.792409,-4.703949,-9.706757,6.677901,4.676870,7.015148,-6.385032,9.983930,-7.560080,0.380467,-7.524033,1.292088,5.024700,2.210340,3.837957,7.579948,-4.450501,8.071465,4.036049,6.444566,7.276955,-8.547541,7.450049,8.220653,1.618719,2.150033,-3.337066,-1.101697,1.989941,-3.300922,-8.476711,-4.778922,3.081627,9.178809,-6.395872,7.695109,0.798636,-3.939047,5.654811,-7.201829,-8.153241,6.087739,-3.544173,-4.777813,6.653950,4.259289,-3.195011,9.137263,6.363082,-1.693718,1.707354,4.244920,4.139022,3.914108,4.536085,-7.351183,8.508714,5.963885,2.761596,-7.214933,-5.496943,-2.991951,6.744684,-6.044125,5.765219,-4.742019,-6.217825,6.837442,4.103452,-3.591463,3.915274,-1.115548,-3.765754,-9.842728,2.014258,6.402450,-1.236293,-4.209412,2.428942,2.116926,-7.876374,8.365958,8.295927,-9.255903,8.099335,-8.882956,1.911192,8.386741,-2.983706,9.589773,-4.533660,5.501168,9.337181,-9.847208,-4.721289,6.164303,-4.552007,6.511064,8.172002,-5.602758,-0.084722,1.926308,-7.078973,-2.636477,7.148324,-7.478030,-6.356737,-5.457716,-4.213762,-1.075295,-7.252735,3.862214,-0.882629,3.748785,-1.353875,-7.763472,-8.599496,9.841704,-2.559717,6.739622,6.960062,-1.315840,4.715842,6.747586,4.146219,-4.921396,2.771720,-1.642535,-9.663509,-5.913097,-5.475497,1.574458,-9.359604,1.678126,-4.883310,-4.825909,-3.231023,3.338529,-6.147407,2.842482,-8.209842,3.247736,0.844396,9.840503,4.366720,3.418098,-2.643581,-8.114675,6.406715,-7.360125,-0.901503,9.823601,2.883216,-7.229880,-0.701825,6.502087,2.008565,-6.061961,0.831540,-9.575226,4.818251,-3.826173,5.760101,3.105230,-7.947944,-4.040894,-9.265252,7.512903,3.188413,6.944472,-3.797956,-2.966203,-7.949567,-5.324820,6.449549,-9.118540,-0.357122,-9.409599,-6.416741,-3.022415,2.873949,3.836371,5.606924,1.982602,7.498295,-7.468741,-5.527507,0.234171,2.450646,-8.380695,5.108078,-4.293861,7.999557,7.495904,-5.849683,-5.895206,-5.433361,3.118383,-5.077723,-8.094120,-4.833682,4.627747,-5.734330,4.270519,1.814696,-0.577078,-9.345741,-7.711525,4.882232,2.644576,-5.700125,-1.903621,-2.975661,-8.487683,-6.243886,-4.932200,0.715926,4.512227,-3.345266,6.531070,-6.454733,-4.438732,-2.667049,-9.901089,-9.230457,4.647767,9.816856,-4.554294,-4.288247,1.088304,0.972520,6.906227,8.560339,-1.562734,9.172946,3.881542,5.194395,-9.117197,1.827952,-1.228343,6.385098,-7.198564,7.855106,-3.901211,5.729487,-2.814883,9.758266,3.452030,3.967421,-9.200689,0.134603,-1.410158,-2.102491,2.122659,-9.285033,1.431700,1.769226,-4.029983,-8.480379,-5.456228,-2.250216,9.571019,-3.424694,5.606552,-6.145943,-3.445999,5.049889,7.308359,-6.151495,6.899790,-2.141339,-5.922292,-2.716219,-5.381747,6.241747,-1.590251,0.079324,8.156272,-6.815393,7.101054,-4.437254,0.151114,5.075329,6.917193,9.103421,-3.280097,-6.156605,1.364456,0.710892,5.798679,3.633849,7.667298,6.530724,-9.886799,8.708126,4.403296,-8.812525,6.599501,2.746970,1.955769,-2.093289,-6.601061,-0.828230,9.037617,2.248083,-8.952929,1.243031,5.625203,-3.071483,-0.507678,-8.113085,9.604982,-7.537222,-6.713262,-7.253590,-8.338071,7.796632,7.946874,0.782694,5.687993,6.156320,0.742537,8.323132,-8.449760,-6.236346,9.261813,-9.834617,6.453567,-7.186306,-4.058190,2.502702,0.046939,0.180679,-9.951160,6.129653,9.400205,7.585350,2.095540,1.690637,-1.708080,5.099219,-3.680405,7.977639,-9.504917,0.535522,-4.957007,-5.986958,0.563789,-9.671219,-5.615175,-4.938059,-5.020254,-2.523037,-8.412836,0.521485,9.266568,5.384824,-1.437695,-8.666718,-2.859814,4.455936,-5.541247,-1.705313,8.105851,-0.062082,-9.977536,6.707152,-5.606353,2.011386,-4.725131,-9.525218,6.642551,9.738546,-3.692430,-2.090513,-5.661282,6.488548,1.478102,-8.822522,-1.089131,-6.846565,8.019583,0.545416,8.906327,6.037292,-1.906692,-2.261952,5.826889,9.699418,5.481076,-4.148925,-6.786122,-7.744373,5.539828,-4.581524,1.894458,-0.825651,9.755073,7.528193,-9.701065,-9.130764,-7.033059,-4.695631,-2.002183,2.770927,-2.794922,1.499111,4.990009,-8.865122,8.912248,-4.510499,-4.430311,2.861719,-8.139008,-9.078154,9.934270,3.225132,6.390613,2.103331,-9.292293,3.991266,-1.381315,7.378874,7.546146,-0.564203,-7.877512,4.062980,-0.630566,-5.035465,7.776224,8.103547,0.314867,-1.388884,8.543971,9.100432,-2.344881,-8.559831,1.815158,-7.503830,1.619942,2.172292,8.569805,-1.126629,-1.424356,2.349800,-0.889166,-8.313291,5.689206,-2.613949,2.842662,-8.871719,8.538573,-0.663045,-3.191557,5.890991,-0.506678,-7.850243,4.213866,4.984455,8.992416,-3.123786,2.330554,-3.418388,0.291655,1.642249,-3.034022,3.427926,-0.532746,-5.215084,-5.982038,2.079289,9.941367,3.141723,-9.506883,-9.939651,7.320095,0.595785,0.091010,0.101040,1.047801,0.557171,0.260501,5.444063,2.293188,-3.005856,7.096319,-1.489559,6.653062,5.586154,-9.606282,-4.718751,-7.333122,-7.419922,4.547077,6.635683,9.390836,-9.925448,6.003809,-9.812154,1.213794,-2.689980,-5.791998,5.345427,-8.728548,-9.567564,-1.838567,-3.251597,-7.412373,0.230255,7.877702,-8.417084,3.227636,3.710728,-1.235638,5.766095,-8.017302,-3.463982,-4.432949,4.676339,2.620660,9.273393,-8.598165,-5.607048,6.494464,-9.458946,-2.601472,8.122663,6.659348,-5.105025,-4.188026,3.310174,-5.364711,-5.159897,-0.972143,4.427400,0.258478,5.576364,1.016071,-7.379035,2.151453,7.513808,-7.605838,-1.043547,2.305084,6.987572,-5.366736,-8.965355,8.012327,-9.919585,-8.759993,6.085316,-4.117787,8.377687,-4.349206,-5.093936,-9.345580,-9.414545,-8.316537,-3.287152,7.077143,-1.014653,8.597833,-3.758086,7.744397,-0.705989,6.055344,5.703223,-7.816777,9.437158,-2.280499,6.342168,6.842075,0.074413,-6.544051,4.333669,-6.811105,4.229749,-2.247953,-3.845846,-9.310454,-4.815175,-2.932724,-6.398718,-5.039870,6.724820,2.836591,-0.442946,-3.070755,0.336591,9.164783,1.059765,-3.580004,7.578273,-2.767611,-2.557225,-9.996405,-9.928574,-2.725205,-3.045180,-1.151656,3.844450,-6.692022,-5.794164,-3.738908,7.964648,-5.413701,3.836976,5.513109,-1.637313,-7.369108,6.531737,1.209435,0.363262,-3.500564,-7.933675,8.348513,-4.889082,4.641830,3.444869,-7.225076,-1.325611,9.697484,5.428356,-2.282419,-9.851029,-3.434254,-6.944989,-4.020884,7.668774,7.183937,5.004316,-3.240937,-3.338437,3.931515,0.617432,-1.449321,-9.755141,6.997510,-4.568420,8.961215,-7.786512,-3.339994,6.759213,-3.310179,9.479946,8.597368,-0.790024,9.357027,9.982496,-1.055558,-5.183729,-8.025390,-3.457530,6.985881,-0.231752,-2.665561,-8.130878,4.388685,2.233209,2.235474,6.112425,1.758456,-9.689848,-1.085016,6.011852,-0.252133,1.945256,5.236164,-8.453990,-9.021074,8.888744,3.902334,-6.629508,-1.910563,-3.465001,-5.309278,-1.549973,3.430019,-7.641679,-1.495399,2.024215,-0.232603,-9.517375,-5.117912,-1.525155,6.603793,7.041026,0.285742,9.415729,6.357212,7.168948,1.891699,-8.292085,-8.082509,-9.510094,-8.191453,2.926000,-1.711706,-8.163139,-9.517543,6.456177,0.582636,-4.228397,-7.978183,-2.819294,9.743988,-6.651600,1.948322,-1.206462,7.483361,-4.582229,-5.823161,-4.119418,9.807688,5.355892,0.470335,6.109408,-8.577822,-4.301280,0.555287,-0.784418,-9.174435,7.497264,5.610689,-8.679055,-0.087848,8.331500,-6.787931,4.762439,-2.410962,-6.535897,-9.435528,-0.995000,4.591700,7.751658,4.274749,-7.040084,-1.148396,4.468759,7.128978,4.493036,3.984817,-9.825341,-2.015422,0.369532,-1.088083,4.659883,-1.596710,9.246924,-4.463441,-5.719539,7.716311,7.301596,8.822887,3.270705,-7.146227,-7.378363,6.988640,-0.875845,2.931309,2.559117,7.485144,-4.365567,-8.668149,9.783051,-8.143196,2.755048,-0.876281,-4.106159,6.531174,-8.572883,-7.445495,6.282023,3.215519,9.575912,-6.779379,8.234687,1.621839,3.542598,1.815915,-3.299518,-3.381747,0.357265,5.541540,-5.284747,-0.387247,-7.741371,-0.818958,-4.310023,9.491306,-6.971284,-9.212527,6.938935,6.974041,-2.848852,-8.420545,-8.491148,-5.624118,5.666122,1.281307,-0.868337,1.576556,-7.386530,3.546340,5.118085,6.938624,-0.862719,7.890178,6.586316,-2.485304,-0.673170,8.002448,8.662399,-4.950228,5.823588,7.711402,2.822823,-1.428457,-7.716438,7.121629,7.001362,8.860228,-5.628866,7.596414,7.727314,3.391392,-2.886027,-1.028436,-9.048726,0.430892,1.253643,-3.630794,5.186105,-0.305293,-0.633565,9.886566,-4.638948,7.746555,-2.781913,5.968850,-8.622985,9.801870,6.497484,-8.922368,-4.154676,2.898639,-1.660888,3.440719,-8.615695,9.513055,8.594996,-2.982234,9.921096,-9.770598,0.262508,5.950705,1.554042,-7.961055,6.656817,-9.118850,-2.743745,7.984646,8.428322,-2.101147,-1.504746,-3.417124,6.899833,-5.931261,-8.242861,-6.141776,-5.227951,2.991925,-8.739144,-6.114306,8.891839,3.834744,-3.697111,-6.218799,1.497872,8.921836,6.299484,2.249478,7.087224,6.291873,3.124843,6.375766,-1.584089,5.053987,-6.179179,-4.986656,-6.086289,-7.953920,-3.507936,2.639280,1.907953,4.098993,-7.813852,8.083849,-4.444961,-7.598654,-7.491447,9.635938,-3.903506,0.066122,-7.498118,-0.788157,-3.091118,5.384054,-9.026998,-7.027465,-7.970233,-3.583243,2.773682,-4.593408,-4.537480,0.388959,-7.825116,0.487887,1.802475,5.590454,-4.798360,-4.306347,-9.062236,0.513891,-8.217457,6.254542,-7.314111,-8.957521,5.864240,3.660911,2.872795,9.327110,-7.077484,-5.601977,3.521431,5.266099,-8.517546,-9.205452,-3.467331,9.271598,-1.877627,4.638088,-9.897120,-7.534629,-6.552953,6.937953,-6.844113,8.803249,-0.891560,-9.189186,5.423687,0.443845,0.842770,1.756539,-7.505557,1.511428,1.231149,8.007070,-1.814447,9.525408,9.037103,-2.865506,0.049869,-1.362354,3.303143,-4.434395,3.429614,-9.577786,7.183897,-4.294742,-4.119772,-4.968530,-6.645259,0.995292,0.216602,2.919959,-0.886733,-2.307509,9.770230,0.411366,6.023026,1.792235,3.964856,-8.720461,3.643991,-6.958334,-6.089074,3.324694,-9.971033,2.610649,-5.981093,8.210728,-8.845238,-3.691173,-1.144256,-5.234027,5.316063,-0.149487,-8.396637,-9.876020,1.998336,8.042035,5.485287,-3.534195,-7.902724,-6.781357,-4.181436,0.523892,8.838383,-7.433426,6.281904,-5.712732,2.397315,9.108546,8.068115,6.514578,5.301467,-3.840124,-2.929273,-9.009153,-0.956809,9.154712,-1.122046,1.505779,-7.778995,-1.176725,-1.321332,5.226752,1.996361,7.735398,-8.302558,-5.898831,-9.759317,-7.185638,2.359738,4.781954,2.506875,1.155780,5.760413,-6.815430,-0.143233,5.143242,8.588627,-0.258618,7.284783,7.161975,2.999615,1.806890,-2.036686,-2.566039,4.178773,6.832238,-4.781406,-9.720947,1.469942,9.092142,8.969084,-5.078924,0.654661,-0.415379,5.353128,-0.820096,2.460997,-5.607412,-2.178416,7.512386,-2.808738,-4.561665,6.090208,-6.634682,2.216507,9.665863,-5.995358,4.747019,-6.103134,-2.968414,5.462125,-5.886535,4.959815,-2.381978,5.132501,4.432818,-1.329574,-7.839994,-5.839255,-3.012071,5.522063,7.340489,-1.789876,2.291742,-3.832871,-4.723584,9.357768,-6.890769,4.475440,-8.170122,-0.787746,-8.236043,7.596238,1.048084,8.486967,-8.812986,0.154178,-8.186918,-6.727791,-9.498174,9.137281,2.976405,-7.142369,2.944849,-7.308339,-3.998476,9.071882,-2.892162,-2.321154,2.577024,3.476763,-6.889883,5.064027,-4.486589,-7.106465,-6.765076,2.250855,-1.661125,9.642401,2.619055,5.487991,-6.779144,-0.081720,-1.132494,-8.649169,-3.924773,5.184035,-7.248871,7.257236,-1.830896,-4.118628,-4.285420,-8.576214,1.912504,-4.140793,-3.437536,-1.169567,7.692191,0.771514,2.491787,9.753110,8.833980,-6.525159,8.523237,7.054698,-6.070829,-3.055307,3.624709,9.060595,-6.371591,-8.855001,-9.167006,1.350583,9.099329,7.323444,9.193189,1.737444,3.035906,-4.051758,4.918561,-3.397727,4.460886,-9.298173,-2.498523,0.093221,-7.736447,8.112253,2.802810,-8.041094,2.505312,1.146382,-5.710818,5.269368,3.668387,-6.719144,3.413487,-0.946943,3.115071,-2.782342,-1.269240,-1.652470,6.339907,9.144205,-4.731138,6.287766,4.124711,-6.479779,3.768094,3.282894,-2.866604,-8.890286,7.931058,-3.410720,7.422362,-4.342245,3.248242,-0.617415,-1.228700,2.460087,3.836434,-5.707359,6.730460,-0.129916,-2.811536,2.627880,2.723555,2.958327,-1.003506,9.346585,-6.657945,-4.993348,-4.684527,-5.478795,-1.150428,-6.855384,-1.756064,2.738049,1.084473,6.744049,2.991448,-1.402922,-2.943348,8.203971,-8.784483,-2.125827,-3.954664,-5.829000,-0.935351,9.380946,-5.540017,-2.951270,-3.713522,-3.578852,-6.051329,-6.399299,3.689084,-7.342082,-6.157363,-1.887236,6.353392,2.293366,5.471108,-7.979822,-3.119305,0.604581,7.873344,8.094710,2.507966,-1.080900,7.505325,5.620504,6.772602,-6.347970,-8.354000,-4.342429,-1.538039,5.659977,6.097795,9.801289,-5.484215,-7.531717,-2.728527,7.344775,-4.658279,8.199894,-8.496379,-2.766068,8.245568,8.069930,2.248564,1.828254,1.257875,-5.932291,-4.235288,-8.939122,-3.943179,8.651737,0.833833,-6.448897,-5.453216,7.676415,-2.473446,-0.104964,1.788289,0.178021,-9.445314,-5.087366,-1.971567,-2.719182,-0.881075,8.052893,-2.382359,6.622027,2.826285,7.024974,-1.064786,6.506795,-3.372389,-8.283580,1.193069,-1.428338,-9.796676,-5.272483,3.731967,9.523756,8.091358,-9.672852,5.133161,7.028527,2.603246,-1.890626,-5.420915,4.898546,-4.239656,-6.671630,7.281030,0.191962,6.747935,-8.722748,-5.161803,-8.832096,-1.567186,4.746408,-1.215893,5.612049,7.687677,5.457836,3.018740,-9.806415,-5.409101,9.871653,-6.488427,3.438027,-0.960421,-4.368203,-1.168720,9.977764,-2.472926,-3.428277,8.923549,-3.380512,-1.933069,-7.394454,-9.449045,3.499980,4.465376,5.991098,5.293322,8.023542,-6.646930,-7.401068,-2.206185,-3.922551,3.809121,-1.856764,-4.104226,9.768980,-5.059768,-7.511163,9.608065,-5.697534,-8.006074,-0.027337,-1.793851,-3.515252,5.463982,2.178929,-3.279721,-9.253403,5.077180,-4.101897,-8.272782,-6.261845,-3.273611,2.444251,-4.763986,-0.257677,7.977137,-2.115679,6.275622,8.316911,8.741775,-6.870057,-0.222894,2.186215,4.998979,0.814762,-7.759446,6.356711,-6.638521,-7.000280,-9.467902,8.448990,8.149947,4.847725,-6.316885,0.812354,-4.594846,5.805206,9.360947,-8.146389,9.465284,-6.547375,2.752661,-6.681233,-1.434752,-7.894049,8.243043,0.982419,3.181249,5.318380,0.832946,4.001145,2.567814,-1.316799,-4.179827,4.599637,-6.069122,6.989778,0.357234,0.864135,-4.121365,-4.699807,9.927955,-9.523632,1.611091,1.311919,-8.953954,-5.139416,9.553287,-0.526808,3.719020,3.547561,2.345139,3.845767,-6.821134,9.607856,-0.944242,6.601095,6.058395,-0.845214,8.774323,8.089850,-3.370034,3.462574,-0.683062,5.723335,-8.886584,2.694240,3.718071,-3.285049,2.514803,-5.613883,-4.486120,8.000559,0.954784,-9.785236,0.283577,8.238852,8.805539,-6.370955,-3.199156,3.005907,-2.970727,5.470211,5.934195,-7.269153,6.617606,-4.258732,-3.781693,5.808049,7.798928,-0.215967,5.155335,-6.712061,6.012618,-6.992796,6.254939,-8.900952,-9.326792,2.547158,8.819678,-1.123723,7.573599,-8.354460,-7.172721,1.522860,6.957612,1.410738,4.865789,4.664079,-4.650011,7.613005,4.244103,4.138799,0.080991,5.846783,-8.657107,4.876987,-6.624927,6.281085,1.636492,-3.858567,4.225448,9.801785,-6.708269,2.465093,-0.281553,-7.260184,-4.555840,9.398870,-0.625675,-2.898627,-8.366758,-5.366045,-4.481400,0.470462,3.400271,-4.404946,5.243914,4.702762,7.007233,-6.394423,6.481988,3.940736,6.459592,5.643073,-7.270567,-9.107120,4.243688,3.505294,3.023325,4.666171,6.838048,8.780895,6.567423,-9.953098,4.780337,-7.555356,8.032706,-3.892913,-8.265877,-3.355423,3.806571,9.421840,-0.743594,-3.355734,-2.820802,-9.648311,-5.480929,-4.318947,-6.427011,-6.900679,-2.593706,1.674925,-6.493821,-9.054915,6.987936,5.160493,9.661485,-2.174455,-4.953043,0.251501,-6.891293,-5.374723,7.304325,3.190264,8.519510,4.044711,-8.640200,5.575923,-4.853402,-8.791404,-0.320660,6.047507,-3.755590,7.466620,-8.231540,2.703146,-8.389029,4.281022,7.167377,-9.410547,-3.194699,-3.631987,-9.610226,-7.821517,5.191669,-4.605852,-6.848809,2.202250,6.336282,5.418570,-8.950045,9.305389,-9.890301,-2.636184,9.036849,-2.926025,8.620423,-5.022201,-0.672764,-0.458069,5.676840,-2.796488,-4.518451,4.055290,-5.752805,-1.390504,2.265681,-0.277207,-9.665905,5.665929,3.098331,-6.017205,-1.403400,-3.126016,7.146417,-9.440772,7.442323,-3.633441,0.528317,-3.065036,0.785567,-8.731911,-6.357571,-8.858088,2.591543,-5.453180,-2.575172,1.654661,3.053677,7.237799,2.110936,-6.923939,-7.342787,-8.049719,-5.097419,-1.887452,0.539682,-8.557485,9.765971,1.995588,1.896941,8.010831,-0.260802,-2.439042,-6.823301,-7.433550,-2.556278,-4.083737,1.111794,-8.408295,8.742925,0.609496,8.917934,-8.459761,5.167982,6.093992,1.064443,-4.325170,-0.460753,-2.356418,-7.149613,-7.938232,8.389348,-0.348002,5.285690,-9.738192,1.110781,-5.556996,3.326492,5.583092,-9.379361,5.925701,7.428642,6.071248,7.792676,-7.910977,-4.590058,-1.477536,1.984272,-6.199855,9.796406,-0.455624,5.837880,7.111412,8.319069,7.898905,0.408889,-5.107577,-0.513630,-2.701929,2.296842,8.733472,4.413892,5.900512,-9.942295,-9.098766,-4.709530,-7.642145,5.027210,-3.510740,-3.601712,-0.089892,4.775615,-7.463563,-1.029221,5.068623,6.463781,9.167970,-6.260670,-3.803819,-4.705119,-7.879390,5.430406,-6.918686,-9.479986,4.497625,-2.668730,-9.371150,-8.043396,1.644632,-6.233683,-9.591357,-0.481996,-6.789541,-1.780234,9.393586,8.129732,6.163523,5.177243,4.311319,4.809461,-7.862138,-6.792925,8.149908,-0.630670,9.382411,9.298539,-2.203375,5.205337,-7.892090,8.519273,6.379760,2.382122,1.167540,-3.993649,-4.973418,-9.770942,-9.732527,2.865879,3.217342,-2.264941,-6.572925,3.215187,2.471176,-3.987015,-8.467697,-0.131705,-6.753605,3.429836,-1.474849,9.523576,2.177076,5.641461,-8.423140,3.417641,-1.778018,8.324984,2.178170,-0.606919,4.911035,-3.420325,-7.200847,4.263059,-3.351262,1.077267,9.593295,5.251999,-9.884286,-2.256659,7.789238,-7.749365,1.098071,4.890105,-0.383257,-1.866900,-2.009916,-9.048877,4.311064,6.519567,-0.553807,-4.962980,1.198868,-1.934453,-3.675899,7.084801,-7.020041,-9.800948,3.218544,-5.146419,5.305395,0.332654,2.509762,-1.708468,-9.852856,-7.178632,-3.975439,-6.501356,-5.057320,5.494302,5.491822,-0.125739,1.152336,8.319525,-8.525246,-0.088736,-7.701042,8.421111,5.245865,-6.034584,-2.412144,-3.006123,7.331623,-5.910447,9.586641,9.431568,-2.956463,-9.807287,-6.378503,-1.519318,9.183823,-8.727216,1.508126,7.092914,1.433786,-1.470325,-7.884601,4.831782,5.059351,2.099077,9.985147,8.956741,4.753824,4.695326,8.053761,-8.502787,7.499494,2.863327,1.427300,4.985750,-0.954263,-4.968872,9.668354,3.830793,0.707575,2.826039,8.895946,7.822448,6.751455,-5.911970,-1.331574,8.342110,6.840886,-9.767940,-3.787026,4.955912,8.056759,2.336413,3.383753,0.911721,-1.242336,-8.837871,6.303064,-3.788019,-6.613774,-0.507562,2.298254,-5.202932,-9.212251,7.749771,9.934872,5.109059,-5.985473,2.077796,9.921776,2.555887,3.592771,1.686076,6.064396,3.091865,-5.958569,-9.174257,-3.394774,-1.304126,-5.154491,1.259634,1.145696,-8.127607,5.424475,4.875212,3.526399,-5.348752,-4.323057,8.634460,4.283312,-6.855333,-5.415038,-3.398184,9.971469,6.267642,-6.608373,9.301626,-3.966612,-5.426978,8.600408,-2.332709,-4.538332,-6.148826,1.868927,-1.631359,-0.076580,-7.563572,7.193302,7.983886,-8.596816,-0.701871,2.766366,-0.430178,-1.522903,-0.938291,-5.661314,-8.919299,2.034160,-8.522393,-8.365204,-9.614834,5.051909,-1.375725,9.855869,3.786542,-9.015941,-5.179509,-3.881269,4.337618,4.856213,-3.906563,9.489659,-9.436595,8.713762,1.398011,5.872859,8.985412,-0.625165,-6.427485,9.283860,8.183403,4.194798,-3.242302,-8.603734,-7.901700,1.840617,-5.149733,0.220972,3.727882,1.307551,0.050814,-3.172222,4.317733,-3.450652,-0.945854,1.547611,4.390427,-9.230354,-5.513539,-4.187192,-9.353602,-0.199712,-5.819054,-6.943765,-6.296969,-1.515896,-5.014772,-9.582067,5.939963,6.573162,6.537829,-0.954685,-0.105014,-6.155066,8.347161,6.492868,-5.948799,-8.450384,-4.994577,-5.683176,-8.161515,-4.606970,-7.050695,-5.159599,3.673835,3.296262,7.902654,8.073898,-6.188896,-5.857366,-0.248652,-6.430565,1.651815,6.339934,0.256851,8.981903,-0.620474,-3.303444,-8.927980,7.441489,2.254641,-1.291457,-4.839249,-2.945158,1.448223,-6.875231,-1.026907,-7.034573,-0.295010,2.568175,-5.259638,3.540921,-2.625828,3.653329,2.397948,-2.009938,6.266618,3.871722,6.590531,9.443759,-5.546017,-4.189748,-7.246378,6.128343,8.655217,-9.879425,5.356112,-7.356864,2.824303,-0.091306,-4.200925,0.070573,-7.805602,4.938299,-4.752034,-7.555142,6.399034,-9.642654,-0.708398,-4.755233,-2.877196,6.484737,-9.709601,-8.055408,9.066745,-7.444266,0.204622,7.816076,-8.338627,8.726575,6.976395,-7.109410,3.993087,-1.654944,-9.642994,2.517131,1.940242,-6.890218,-5.189665,-3.369342,2.140108,-5.680396,-7.318393,-2.765944,-9.705004,-2.181966,-2.593040,-8.006577,7.352248,1.706240,2.415493,-1.411898,6.516372,4.182493,1.080341,5.999012,-6.723773,-1.377969,5.356417,-7.403478,-5.616452,-5.929797,6.513669,-2.543029,2.874608,-8.883248,-5.394618,-4.564434,7.936233,-4.152982,9.982873,3.519109,0.846120,-9.575176,3.153798,-6.874765,9.725993,-0.721397,-9.031239,4.494480,-8.887557,-9.609943,3.284753,-7.439179,-8.958994,8.349220,-0.838612,-2.253686,-8.256920,-8.336366,9.925807,-4.120586,5.633558,4.563102,0.661511,-7.444781,-4.033819,8.381579,1.716149,-0.181860,-4.064957,9.959968,-3.120286,-6.060584,-7.349670,-2.078288,1.717567,3.452722,2.069186,-8.689697,0.546705,-3.258802,-0.506209,9.629864,7.933706,1.962515,-8.311922,-5.981560,-7.771162,8.395321,-6.334651,-0.430990,-8.101312,-2.857701,-3.779162,9.516408,0.245844,2.816179,5.121584,0.373334,-5.671279,-6.763228,8.141800,-0.880498,6.452389,2.403914,4.583370,9.696549,7.389961,-8.674655,9.489258,4.418478,1.037529,-0.195776,-7.793980,-4.239638,-7.077265,1.009794,2.281461,-8.829129,9.800227,-6.875371,1.199220,4.545344,-3.101510,7.794261,9.653505,-3.146959,6.961705,0.548257,0.933477,8.588291,-0.832951,7.205999,-9.339304,-4.192682,3.711885,-2.666618,-8.516769,2.301483,7.151267,-1.534292,-6.039721,-3.020126,9.210929,2.953868,5.866409,9.071659,9.409547,7.862365,-4.937456,3.312507,0.342793,-1.826196,2.698731,-6.337968,-9.641863,0.375719,2.441732,3.199422,2.763230,8.667733,8.316303,-5.853062,-8.953210,-1.092181,3.577741], dtype = "float32")#candidate|7932|(2304,)|const|float32
call_7930 = relay.TupleGetItem(func_6067_call(relay.reshape(const_7931.astype('int32'), [429, 3]), relay.reshape(const_7932.astype('float32'), [2304,]), ), 0)
call_7933 = relay.TupleGetItem(func_6070_call(relay.reshape(const_7931.astype('int32'), [429, 3]), relay.reshape(const_7932.astype('float32'), [2304,]), ), 0)
output = relay.Tuple([call_7914,call_7918,call_7930,const_7931,const_7932,])
output2 = relay.Tuple([call_7915,call_7919,call_7933,const_7931,const_7932,])
func_7936 = relay.Function([], output)
mod['func_7936'] = func_7936
mod = relay.transform.InferType()(mod)
output = func_7936()
func_7937 = relay.Function([], output)
mutated_mod['func_7937'] = func_7937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_7941 = relay.TupleGetItem(func_2318_call(), 0)
call_7942 = relay.TupleGetItem(func_2320_call(), 0)
func_2477_call = mod.get_global_var('func_2477')
func_2480_call = mutated_mod.get_global_var('func_2480')
var_7948 = relay.var("var_7948", dtype = "bool", shape = (1152,))#candidate|7948|(1152,)|var|bool
call_7947 = relay.TupleGetItem(func_2477_call(relay.reshape(var_7948.astype('bool'), [16, 6, 12])), 1)
call_7949 = relay.TupleGetItem(func_2480_call(relay.reshape(var_7948.astype('bool'), [16, 6, 12])), 1)
bop_7956 = relay.bitwise_xor(call_7947.astype('uint8'), relay.reshape(var_7948.astype('uint8'), relay.shape_of(call_7947))) # shape=(1152,)
bop_7959 = relay.bitwise_xor(call_7949.astype('uint8'), relay.reshape(var_7948.astype('uint8'), relay.shape_of(call_7949))) # shape=(1152,)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_7963 = func_3782_call()
call_7964 = func_3782_call()
func_1676_call = mod.get_global_var('func_1676')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_7965 = relay.TupleGetItem(func_1676_call(), 0)
call_7966 = relay.TupleGetItem(func_1677_call(), 0)
uop_7975 = relay.asinh(call_7965.astype('float32')) # shape=(16, 16, 9)
uop_7977 = relay.asinh(call_7966.astype('float32')) # shape=(16, 16, 9)
func_7709_call = mod.get_global_var('func_7709')
func_7710_call = mutated_mod.get_global_var('func_7710')
call_7978 = relay.TupleGetItem(func_7709_call(), 0)
call_7979 = relay.TupleGetItem(func_7710_call(), 0)
output = relay.Tuple([call_7941,bop_7956,call_7963,uop_7975,call_7978,])
output2 = relay.Tuple([call_7942,bop_7959,call_7964,uop_7977,call_7979,])
func_7992 = relay.Function([var_7948,], output)
mod['func_7992'] = func_7992
mod = relay.transform.InferType()(mod)
var_7993 = relay.var("var_7993", dtype = "bool", shape = (1152,))#candidate|7993|(1152,)|var|bool
output = func_7992(var_7993)
func_7994 = relay.Function([var_7993], output)
mutated_mod['func_7994'] = func_7994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3248_call = mutated_mod.get_global_var('func_3248')
call_8005 = relay.TupleGetItem(func_3246_call(), 0)
call_8006 = relay.TupleGetItem(func_3248_call(), 0)
output = relay.Tuple([call_8005,])
output2 = relay.Tuple([call_8006,])
func_8021 = relay.Function([], output)
mod['func_8021'] = func_8021
mod = relay.transform.InferType()(mod)
output = func_8021()
func_8022 = relay.Function([], output)
mutated_mod['func_8022'] = func_8022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_8044 = relay.TupleGetItem(func_2118_call(), 0)
call_8045 = relay.TupleGetItem(func_2120_call(), 0)
output = relay.Tuple([call_8044,])
output2 = relay.Tuple([call_8045,])
func_8058 = relay.Function([], output)
mod['func_8058'] = func_8058
mod = relay.transform.InferType()(mod)
output = func_8058()
func_8059 = relay.Function([], output)
mutated_mod['func_8059'] = func_8059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8074 = relay.var("var_8074", dtype = "uint16", shape = (15, 9, 3))#candidate|8074|(15, 9, 3)|var|uint16
const_8075 = relay.const([[[1,-2,7],[-6,4,10],[-6,6,4],[1,-8,-2],[7,8,-5],[-3,-8,-7],[-4,9,-4],[3,-9,-10],[-9,-8,1]],[[4,2,-5],[8,-5,-5],[-1,-7,7],[9,-3,-1],[1,5,6],[9,-5,2],[10,-10,-6],[1,-3,8],[-2,-4,-7]],[[-10,-4,8],[-3,10,10],[10,1,8],[4,-5,-10],[9,-9,-6],[7,-7,-3],[2,3,-3],[-3,-4,-2],[4,-4,3]],[[1,3,-6],[-8,-7,5],[-7,-3,9],[5,1,-10],[4,1,2],[-9,7,-5],[-2,-5,6],[-6,-8,-5],[-9,1,-10]],[[2,-5,-9],[6,-2,-1],[-5,7,-10],[3,6,-7],[8,-1,-5],[-2,-2,-10],[5,-8,-9],[3,-10,8],[-3,-7,2]],[[-2,-1,9],[-4,3,-7],[-7,-8,-1],[-4,5,-5],[7,5,1],[-10,-6,-5],[-7,4,-5],[2,5,-6],[1,1,5]],[[10,-5,6],[10,10,8],[-1,-4,-4],[7,-10,-8],[-9,6,4],[7,1,-6],[-10,4,-2],[-5,7,9],[-8,-9,-9]],[[3,-7,-9],[10,4,-7],[-10,-9,-5],[7,6,-9],[7,-1,6],[-5,-9,9],[5,3,-1],[-4,-7,5],[5,-4,-8]],[[-6,-2,3],[-7,8,3],[6,-5,1],[-9,-6,7],[-10,5,-5],[-9,-8,-6],[-1,-1,10],[4,-4,-5],[6,-8,-2]],[[-4,-9,-10],[-2,3,-2],[-10,5,1],[5,-1,6],[-2,2,5],[-8,8,-9],[-2,-9,-10],[-6,-1,-4],[-8,10,8]],[[7,-8,-3],[-5,-3,-8],[1,-3,5],[-1,-6,1],[7,-10,1],[10,-1,7],[3,-5,-4],[9,1,8],[-5,-6,-3]],[[2,-8,-6],[-10,7,7],[5,5,-4],[-1,8,5],[7,-7,1],[-1,10,5],[8,-2,-7],[8,-9,-2],[-4,8,-6]],[[-10,-2,-7],[6,6,-7],[4,6,-10],[-7,5,-1],[-8,1,-9],[-8,-3,5],[-5,-9,-1],[-10,2,10],[-9,10,2]],[[-2,-8,-8],[-1,5,9],[3,5,5],[-8,10,10],[-4,9,-2],[7,3,8],[-2,10,-2],[-9,2,-9],[-1,-1,9]],[[-3,10,-8],[4,8,-1],[-9,-5,2],[7,-4,-9],[-4,-10,-9],[6,-5,-5],[1,-10,-7],[5,-6,2],[-8,1,-7]]], dtype = "uint16")#candidate|8075|(15, 9, 3)|const|uint16
bop_8076 = relay.bitwise_or(var_8074.astype('uint16'), relay.reshape(const_8075.astype('uint16'), relay.shape_of(var_8074))) # shape=(15, 9, 3)
output = relay.Tuple([bop_8076,])
output2 = relay.Tuple([bop_8076,])
func_8080 = relay.Function([var_8074,], output)
mod['func_8080'] = func_8080
mod = relay.transform.InferType()(mod)
mutated_mod['func_8080'] = func_8080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8081 = relay.var("var_8081", dtype = "uint16", shape = (15, 9, 3))#candidate|8081|(15, 9, 3)|var|uint16
func_8080_call = mutated_mod.get_global_var('func_8080')
call_8082 = func_8080_call(var_8081)
output = call_8082
func_8083 = relay.Function([var_8081], output)
mutated_mod['func_8083'] = func_8083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8128 = relay.var("var_8128", dtype = "float64", shape = (16, 12, 3))#candidate|8128|(16, 12, 3)|var|float64
uop_8129 = relay.tan(var_8128.astype('float64')) # shape=(16, 12, 3)
func_3214_call = mod.get_global_var('func_3214')
func_3219_call = mutated_mod.get_global_var('func_3219')
var_8146 = relay.var("var_8146", dtype = "uint32", shape = (32,))#candidate|8146|(32,)|var|uint32
var_8147 = relay.var("var_8147", dtype = "uint32", shape = (128,))#candidate|8147|(128,)|var|uint32
call_8145 = relay.TupleGetItem(func_3214_call(relay.reshape(var_8146.astype('uint32'), [8, 4, 1]), relay.reshape(var_8147.astype('uint32'), [8, 4, 4]), relay.reshape(var_8147.astype('uint32'), [8, 4, 4]), ), 0)
call_8148 = relay.TupleGetItem(func_3219_call(relay.reshape(var_8146.astype('uint32'), [8, 4, 1]), relay.reshape(var_8147.astype('uint32'), [8, 4, 4]), relay.reshape(var_8147.astype('uint32'), [8, 4, 4]), ), 0)
output = relay.Tuple([uop_8129,call_8145,var_8146,var_8147,])
output2 = relay.Tuple([uop_8129,call_8148,var_8146,var_8147,])
func_8164 = relay.Function([var_8128,var_8146,var_8147,], output)
mod['func_8164'] = func_8164
mod = relay.transform.InferType()(mod)
var_8165 = relay.var("var_8165", dtype = "float64", shape = (16, 12, 3))#candidate|8165|(16, 12, 3)|var|float64
var_8166 = relay.var("var_8166", dtype = "uint32", shape = (32,))#candidate|8166|(32,)|var|uint32
var_8167 = relay.var("var_8167", dtype = "uint32", shape = (128,))#candidate|8167|(128,)|var|uint32
output = func_8164(var_8165,var_8166,var_8167,)
func_8168 = relay.Function([var_8165,var_8166,var_8167,], output)
mutated_mod['func_8168'] = func_8168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mod.get_global_var('func_1303')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_8217 = relay.TupleGetItem(func_1303_call(), 0)
call_8218 = relay.TupleGetItem(func_1305_call(), 0)
func_7224_call = mod.get_global_var('func_7224')
func_7226_call = mutated_mod.get_global_var('func_7226')
call_8236 = relay.TupleGetItem(func_7224_call(), 0)
call_8237 = relay.TupleGetItem(func_7226_call(), 0)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
const_8239 = relay.const([-0.464556,-4.065255,7.412573,4.872807,-8.195015,8.803307,5.605350,8.117183,1.721877,1.973137,-8.881287,-8.732757,2.993480,6.004721,-4.839008,0.439258,1.739668,-9.528311,3.430260,-9.887812,3.024639,-3.536020,5.914301,-5.796409,-6.263504,4.751188,6.448933,5.501157,2.471031,-5.936733,7.524496,-4.935593,9.031093,0.423551,9.129216,-6.059275,-4.667228,2.914817,0.148104,-0.517248,2.488638,-7.865741,0.770549,-0.238027,-2.652604,-5.050886,-5.816991,9.389969,-0.929292,-7.312210,-3.517291,-4.197993,-6.250515,-5.142184,9.569494,6.585382,-0.713317,-6.823181,0.091374,-2.451520,5.962090,6.423082,0.305308,1.560461,-9.771180,3.605923,-1.435510,6.210476,-8.677543,-6.932912,-4.043635,-4.932093,-4.577372,-7.591070,7.179109,4.793692,2.896304,0.661842,6.687651,-0.304074,-1.017689,-4.147780,-7.486734,5.262400,0.501087,-3.064109,7.647202,-6.558064,6.955434,8.712147,5.656533,7.179730,-7.548204,-0.608477,0.820735,8.504750,-8.130004,3.848034,1.796210,3.919283,-9.895358,-0.531753,6.851600,0.347393,3.846848,7.634271,-7.644824,0.296109,4.987168,-1.233158,8.677129,6.030704,-9.970592,-7.741876,3.199848,-0.625028,7.073681,-3.739220,-6.438889,-9.701380,-2.100286,-5.219153,-6.408644,1.392652,9.116770,8.306936,6.769786,1.835166,4.625634,1.740244,8.152394,-7.135883,-3.707371,1.745033,1.174599,-1.549113,-1.939171,-6.133935,8.252666,-3.055282,4.925142,4.877855,-0.940489,-1.814693,-7.871118,1.700919,-1.546061,-2.246495,-3.781328,8.720767,6.154853,9.195802,-1.816356,7.300949,-0.134788,4.554102,4.381404,-4.083904,0.002646,1.353767,1.301887,9.231304,-4.035171,-4.095586,-7.333733,-0.056804,-2.592658,2.576774,3.811774,-1.294928,-1.459582,-8.151137,-5.250507,-9.936998,1.059713,1.579940,-8.302405,-6.797396,-2.480896,4.764781,-1.264980,1.473174,0.987315,-8.077658,9.917440,-1.806297,-5.888415,7.143957,-5.335788,-9.088925,9.126413,-7.467994,-7.915880,-2.172800,8.922267,0.130176], dtype = "float64")#candidate|8239|(196,)|const|float64
call_8238 = relay.TupleGetItem(func_3142_call(relay.reshape(const_8239.astype('float64'), [196,])), 0)
call_8240 = relay.TupleGetItem(func_3145_call(relay.reshape(const_8239.astype('float64'), [196,])), 0)
func_1861_call = mod.get_global_var('func_1861')
func_1862_call = mutated_mod.get_global_var('func_1862')
call_8257 = func_1861_call()
call_8258 = func_1861_call()
output = relay.Tuple([call_8217,call_8236,call_8238,const_8239,call_8257,])
output2 = relay.Tuple([call_8218,call_8237,call_8240,const_8239,call_8258,])
func_8281 = relay.Function([], output)
mod['func_8281'] = func_8281
mod = relay.transform.InferType()(mod)
mutated_mod['func_8281'] = func_8281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8281_call = mutated_mod.get_global_var('func_8281')
call_8282 = func_8281_call()
output = call_8282
func_8283 = relay.Function([], output)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3886_call = mod.get_global_var('func_3886')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_8416 = relay.TupleGetItem(func_3886_call(), 0)
call_8417 = relay.TupleGetItem(func_3887_call(), 0)
func_6165_call = mod.get_global_var('func_6165')
func_6167_call = mutated_mod.get_global_var('func_6167')
call_8419 = func_6165_call()
call_8420 = func_6165_call()
func_6134_call = mod.get_global_var('func_6134')
func_6137_call = mutated_mod.get_global_var('func_6137')
const_8426 = relay.const(-4.681002, dtype = "float32")#candidate|8426|()|const|float32
const_8427 = relay.const([-0.215869,7.754412,6.163866,9.392728,-6.204021,-5.354724,9.298284,-0.273309,2.095440,-8.256226,-4.532438,-6.958788,4.720347,-0.498942,2.557583,3.077232,-9.375553,0.067186,-5.820080,6.344764,4.516444,3.905364,6.203128,3.238533,7.462062,-2.301496,2.573899,3.959393,4.870819,8.886983,-5.401870,-3.150642,0.558540,-5.623536,4.025043,-7.165287,5.939748,1.394497,1.789103,0.942615,-6.757853,-2.700758,-3.702294,8.533220,-4.906590,8.297373,6.675323,9.852365,6.199619,-7.854470,2.467265,7.817996,-5.221222,5.126719,2.265760,3.842441,-2.610899,0.387810,6.794294,0.469209,8.722576,-0.728363,-9.670853,3.149483,0.841795,-1.938442,7.190048,9.967615,-7.079063,2.257189,0.122717,-5.863287,8.800271,0.884563,-1.728819,-1.526914,3.506960,-5.910402,-3.876805,9.855670,6.889271,-0.081717,8.702735,-0.107785,-9.726824,1.294413,-3.663874,9.129992,9.817433,3.431319,0.283685,0.651919,-7.993327,2.151738,5.301098,5.715736,-3.890724,8.263984,1.315697,-3.782402,-1.794025,-1.337454,0.032401,-4.517535,-4.290783,-3.911413,7.668471,-4.448485,8.416738,-2.765938,-9.992451,3.044824,8.990336,-7.731665,-0.727868,-3.732131,-2.011695,-6.736224,-4.991481,-0.161143,-9.118077,0.421447,-3.429344,6.420885,3.755642,-2.556564,3.553045,-1.977468,3.272301,-3.023927,3.879227,-4.051653,2.004369,4.997724,4.109785,-2.870358,-7.793405,1.185219,9.839318,-3.495956,-2.711138,-8.134686,-4.376527,-9.239317,9.763958,-3.020841,6.663300,-6.289985,7.384625,-8.542837,6.095692,-6.478423,-2.052717,-7.935730,-2.323492,-0.829698,4.742894,2.135952,-6.920755,1.695701,-6.511988,-7.184667,-4.024061,-8.141977,5.432860,-1.370961,2.636160,-9.785284,-7.608453,6.459811,-2.351830,9.167679,-5.846322,8.368409,-2.920003,-2.218183,-5.036458,-8.589231,0.930928,-9.442947,-5.503686,5.741339,2.158498,4.285899,-0.617689,6.452988,9.112442,-4.268486,4.204839,-4.013619,1.610006,-0.658929,7.805456,-0.750905,3.774623,5.011400,-4.420210,4.665873,5.398867,4.704712,4.016580,-3.073757,-7.918712,-6.982043,-0.611555,5.426417,6.383166,-9.592998,3.651688,6.026958,0.750873,-5.667807,1.173282,-7.918511,-8.403088,-1.541622,-0.946589,-1.185776,6.122156,-7.701713,0.118783,7.964453,4.815918,-1.846541,0.963260,0.728025,-2.884272,-0.427669,7.472922,-9.252943,-3.190908,2.923387,9.410484,4.894496,-0.264478,5.686376,-9.992739,-0.044054,-5.248530,-1.287198,-0.756745,-4.805552,0.676307,-6.843653,6.479719,-6.484239,6.952724,-0.708046,-0.339945,5.135347,6.234937,-2.674407,-8.566494,0.009052,9.075803,-7.093791,8.447037,7.575475,7.625067,3.759344,-6.423541,-7.500640,6.956837,7.358764,7.898385,-4.049424,2.337694,-9.687985,6.761349,-5.819297,6.834273,-3.110381,5.878022,5.580874,6.416718,-1.781234,-8.805198,9.646024,6.363811,4.611101,-7.818442,-6.566751,8.107044,7.391534,-6.448138,1.971560,-2.615523,5.542788,2.889652,-0.546917,3.290440,3.417181,2.192169,-4.940329,5.787784,4.870645,6.721383,1.762219,-5.808469,-6.676813,-1.723910,-6.926448,3.253110,-0.980153,-6.270767,-2.623637,1.690985,-9.986814,-9.947536,-0.688318,-3.516719,6.034746,3.323342,-4.503352,6.626612,-7.206590,2.813738,-9.681779,-8.364446,4.786309,0.691775,7.056691,0.038694,-2.740918,-3.310712,7.830413,-2.276384,-5.227173,2.385031,-5.521968,6.113158,-3.909761,7.512571,-4.003285,-6.653272,8.805930,7.884118,-2.018913,-4.378368,-5.115824,0.716747,2.887235,7.328440,8.679312,9.977703,8.816325,9.548459,8.475461,7.354619,-3.612663,2.087483,5.688512,-8.228076,-0.334814,-5.632933,8.513696,-6.703195,-8.729443,8.006613,3.844898,6.634852,4.543420,-9.777520,0.092667,-1.589478,5.173138,4.961105,-6.575914,5.477034,-8.903561,-7.788522,1.700553,5.542570,-0.335603,-0.719380,3.433466,-4.367975,-9.041645,6.138006,-8.448222,2.955229,1.943822,1.147842,8.371410,-4.560490,-6.483051,6.523895,-6.392732,4.462354,4.976898,-5.917870,0.834174,-9.633032,6.437357,-3.974349,5.944550,-2.281287,-0.910699,3.637352,-7.865636,-5.324859,-4.639718,-7.822932,-0.809093,6.448459,5.235446,-4.962668,-2.722770,-8.316471,-6.054981,-3.306562,1.154612,-3.598006,-5.618703,4.638043,-7.708943,5.951607,5.041720,2.700744,-6.732732,-4.772566,-1.349127,-6.150205,5.243873,-6.030829,8.474657,9.185295,2.967332,2.719484,9.761263,-2.746577,-0.799163,-1.715272,-5.977897,8.520284,-5.792124,-9.180113,-4.530996,-0.185684,-1.399069,2.192968,3.014485,-8.905343,-9.852156,-4.845243,-7.409203,5.969936,-8.556825,-0.490595,7.419464,6.486447,7.414285,-0.035412,2.717138,0.382376,-4.224350,0.354082,-3.570279,-6.341111,6.991268,-7.674516,-9.202612,-6.608863,-8.420059,3.094081,-0.447293,5.031023,-9.540022,2.227287,-7.127617,2.363322,9.033129,-9.101528,-6.399856,5.715443,1.309595,1.249650,6.455643,1.446508,0.400245,-1.940143,0.288829,8.863167,8.592135,9.339855,-9.714289,-4.787752,-5.271634,7.765215,-4.010149,-5.096389,-7.613253,9.909488,-1.432463,3.001443,6.556007,6.739307,-6.855725,-6.372822,-1.676082,6.728806,8.155919,-2.255026,9.079684,-0.447990,-3.962127,8.491013,4.657986,9.955496,1.789513,1.562219,-1.728958,-7.238245,9.420957,-9.182760,-4.937723,-2.254712,-5.992381,6.464963,-6.010850,6.594613,5.410424,-1.112716,8.304046,-4.302569,-3.869999,0.605124,-9.867594,6.915574,-9.557049,8.959113,-1.089532,-5.535806,5.882648,-9.500132,-2.372486,-3.952170,-6.452563,-1.427662,-1.270985,5.473307,-0.174780,5.722453,-1.319131,-3.434501,3.009935,3.585934,-9.474952,-4.471351,-7.499800,5.434509,-2.364343,-0.354911,-8.951667,-9.542255,4.592698,-2.326144,-6.618317,-4.367779,-2.815355,0.061327,9.332586,7.853408,0.069627,8.374448,-3.522925,-0.776637,-1.980322,-3.010094,5.540657,-8.395924,-8.728387,-9.108048,-8.867898,6.866436,0.295797,-7.528249,0.769148,-0.021952,0.018467,-3.701535,1.459985,-9.351294,3.927752,-7.058410,3.176991,2.517426,9.704905,-7.938134,3.561285,7.026967,9.705023,5.655162,1.121294,9.393556,4.866931,1.354934,-5.026035,-9.474767,-9.930883,-9.996132,5.709641,6.856978,4.572666,5.890166,8.906607,9.648934,-2.005977,0.379371,4.045384,7.328116,2.004716,0.356146,-1.434494,7.542367,-5.014011,4.996719,-3.404287,5.022353,-5.363395,-9.054356,4.399800,-0.156274,-7.819053,7.183836,-1.464781,-9.555330,1.742400,4.786755,9.254214,-0.861289,-2.205452,-8.480293,-2.170396,-7.366674,-0.775611,-3.478952,6.143335,9.725032,6.524475,5.108263,5.790404,4.641160,6.514718,7.237005,5.729377,-1.711735,0.518716,-2.290517,-5.474039,-2.865803,5.574151,-2.615119,-7.918474,-2.151211,8.884675,4.327518,7.419014,9.827274,-9.576719,-0.948417,6.206129,6.515055,7.877684,-4.073913,9.455336,-2.926360,-4.769080,5.891811,-4.792363,-3.521938,0.070208], dtype = "float32")#candidate|8427|(672,)|const|float32
call_8425 = relay.TupleGetItem(func_6134_call(relay.reshape(const_8426.astype('float32'), []), relay.reshape(const_8427.astype('float32'), [7, 6, 16]), ), 0)
call_8428 = relay.TupleGetItem(func_6137_call(relay.reshape(const_8426.astype('float32'), []), relay.reshape(const_8427.astype('float32'), [7, 6, 16]), ), 0)
func_665_call = mod.get_global_var('func_665')
func_670_call = mutated_mod.get_global_var('func_670')
const_8435 = relay.const([[8.754450,-0.529123,-4.926643,7.288138,-8.818830,3.868503,-3.569911,3.562975,-2.306480,-8.672727],[-8.056920,6.798113,3.550652,6.848267,4.366593,-0.153231,0.134507,9.375329,7.305690,4.725112],[-7.940749,1.701222,-9.269076,7.091133,1.316765,-2.000634,-0.059611,0.278794,0.325182,4.192632],[0.268154,6.165170,-1.470313,-4.472766,2.601659,6.273386,-2.557312,-9.754168,-1.096242,0.094199],[-2.943065,0.070310,-7.815154,-5.803860,8.705843,-9.453267,9.757047,0.995711,-4.672204,5.171118]], dtype = "float32")#candidate|8435|(5, 10)|const|float32
call_8434 = relay.TupleGetItem(func_665_call(relay.reshape(call_8416.astype('float64'), [16, 4, 11]), relay.reshape(call_8416.astype('float32'), [16, 4, 11]), relay.reshape(const_8435.astype('float32'), [5, 10]), ), 2)
call_8436 = relay.TupleGetItem(func_670_call(relay.reshape(call_8416.astype('float64'), [16, 4, 11]), relay.reshape(call_8416.astype('float32'), [16, 4, 11]), relay.reshape(const_8435.astype('float32'), [5, 10]), ), 2)
output = relay.Tuple([call_8416,call_8419,call_8425,const_8426,const_8427,call_8434,const_8435,])
output2 = relay.Tuple([call_8417,call_8420,call_8428,const_8426,const_8427,call_8436,const_8435,])
func_8450 = relay.Function([], output)
mod['func_8450'] = func_8450
mod = relay.transform.InferType()(mod)
mutated_mod['func_8450'] = func_8450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8450_call = mutated_mod.get_global_var('func_8450')
call_8451 = func_8450_call()
output = call_8451
func_8452 = relay.Function([], output)
mutated_mod['func_8452'] = func_8452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6836_call = mod.get_global_var('func_6836')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_8465 = relay.TupleGetItem(func_6836_call(), 2)
call_8466 = relay.TupleGetItem(func_6838_call(), 2)
output = relay.Tuple([call_8465,])
output2 = relay.Tuple([call_8466,])
func_8495 = relay.Function([], output)
mod['func_8495'] = func_8495
mod = relay.transform.InferType()(mod)
output = func_8495()
func_8496 = relay.Function([], output)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8497 = relay.TupleGetItem(func_8495_call(), 0)
call_8498 = relay.TupleGetItem(func_8496_call(), 0)
var_8506 = relay.var("var_8506", dtype = "float64", shape = (14, 8, 11))#candidate|8506|(14, 8, 11)|var|float64
bop_8507 = relay.less(call_8497.astype('bool'), relay.reshape(var_8506.astype('bool'), relay.shape_of(call_8497))) # shape=(14, 8, 11)
bop_8510 = relay.less(call_8498.astype('bool'), relay.reshape(var_8506.astype('bool'), relay.shape_of(call_8498))) # shape=(14, 8, 11)
output = relay.Tuple([bop_8507,])
output2 = relay.Tuple([bop_8510,])
func_8514 = relay.Function([var_8506,], output)
mod['func_8514'] = func_8514
mod = relay.transform.InferType()(mod)
mutated_mod['func_8514'] = func_8514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8515 = relay.var("var_8515", dtype = "float64", shape = (14, 8, 11))#candidate|8515|(14, 8, 11)|var|float64
func_8514_call = mutated_mod.get_global_var('func_8514')
call_8516 = func_8514_call(var_8515)
output = call_8516
func_8517 = relay.Function([var_8515], output)
mutated_mod['func_8517'] = func_8517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8527 = relay.var("var_8527", dtype = "float32", shape = (12, 9, 4))#candidate|8527|(12, 9, 4)|var|float32
uop_8528 = relay.cosh(var_8527.astype('float32')) # shape=(12, 9, 4)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_8532 = func_4537_call()
call_8533 = func_4537_call()
func_6603_call = mod.get_global_var('func_6603')
func_6604_call = mutated_mod.get_global_var('func_6604')
call_8545 = relay.TupleGetItem(func_6603_call(), 0)
call_8546 = relay.TupleGetItem(func_6604_call(), 0)
output = relay.Tuple([uop_8528,call_8532,call_8545,])
output2 = relay.Tuple([uop_8528,call_8533,call_8546,])
func_8553 = relay.Function([var_8527,], output)
mod['func_8553'] = func_8553
mod = relay.transform.InferType()(mod)
var_8554 = relay.var("var_8554", dtype = "float32", shape = (12, 9, 4))#candidate|8554|(12, 9, 4)|var|float32
output = func_8553(var_8554)
func_8555 = relay.Function([var_8554], output)
mutated_mod['func_8555'] = func_8555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4551_call = mod.get_global_var('func_4551')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_8642 = relay.TupleGetItem(func_4551_call(), 0)
call_8643 = relay.TupleGetItem(func_4552_call(), 0)
func_4484_call = mod.get_global_var('func_4484')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_8656 = func_4484_call()
call_8657 = func_4484_call()
uop_8667 = relay.cos(call_8656.astype('float64')) # shape=(11, 16, 8)
uop_8669 = relay.cos(call_8657.astype('float64')) # shape=(11, 16, 8)
output = relay.Tuple([call_8642,uop_8667,])
output2 = relay.Tuple([call_8643,uop_8669,])
func_8670 = relay.Function([], output)
mod['func_8670'] = func_8670
mod = relay.transform.InferType()(mod)
output = func_8670()
func_8671 = relay.Function([], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_8716 = func_4608_call()
call_8717 = func_4608_call()
output = call_8716
output2 = call_8717
func_8734 = relay.Function([], output)
mod['func_8734'] = func_8734
mod = relay.transform.InferType()(mod)
mutated_mod['func_8734'] = func_8734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8734_call = mutated_mod.get_global_var('func_8734')
call_8735 = func_8734_call()
output = call_8735
func_8736 = relay.Function([], output)
mutated_mod['func_8736'] = func_8736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6306_call = mod.get_global_var('func_6306')
func_6308_call = mutated_mod.get_global_var('func_6308')
call_8743 = relay.TupleGetItem(func_6306_call(), 0)
call_8744 = relay.TupleGetItem(func_6308_call(), 0)
var_8751 = relay.var("var_8751", dtype = "float64", shape = (16, 4, 11))#candidate|8751|(16, 4, 11)|var|float64
bop_8752 = relay.divide(call_8743.astype('float32'), relay.reshape(var_8751.astype('float32'), relay.shape_of(call_8743))) # shape=(16, 4, 11)
bop_8755 = relay.divide(call_8744.astype('float32'), relay.reshape(var_8751.astype('float32'), relay.shape_of(call_8744))) # shape=(16, 4, 11)
func_2526_call = mod.get_global_var('func_2526')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_8769 = relay.TupleGetItem(func_2526_call(), 1)
call_8770 = relay.TupleGetItem(func_2527_call(), 1)
output = relay.Tuple([bop_8752,call_8769,])
output2 = relay.Tuple([bop_8755,call_8770,])
func_8772 = relay.Function([var_8751,], output)
mod['func_8772'] = func_8772
mod = relay.transform.InferType()(mod)
mutated_mod['func_8772'] = func_8772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8773 = relay.var("var_8773", dtype = "float64", shape = (16, 4, 11))#candidate|8773|(16, 4, 11)|var|float64
func_8772_call = mutated_mod.get_global_var('func_8772')
call_8774 = func_8772_call(var_8773)
output = call_8774
func_8775 = relay.Function([var_8773], output)
mutated_mod['func_8775'] = func_8775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mod.get_global_var('func_4484')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_8795 = func_4484_call()
call_8796 = func_4484_call()
func_7697_call = mod.get_global_var('func_7697')
func_7698_call = mutated_mod.get_global_var('func_7698')
call_8797 = relay.TupleGetItem(func_7697_call(), 1)
call_8798 = relay.TupleGetItem(func_7698_call(), 1)
output = relay.Tuple([call_8795,call_8797,])
output2 = relay.Tuple([call_8796,call_8798,])
func_8815 = relay.Function([], output)
mod['func_8815'] = func_8815
mod = relay.transform.InferType()(mod)
output = func_8815()
func_8816 = relay.Function([], output)
mutated_mod['func_8816'] = func_8816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_8830 = func_3782_call()
call_8831 = func_3782_call()
func_8772_call = mod.get_global_var('func_8772')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_8847 = relay.TupleGetItem(func_8772_call(relay.reshape(call_8830.astype('float64'), [16, 4, 11])), 1)
call_8848 = relay.TupleGetItem(func_8775_call(relay.reshape(call_8830.astype('float64'), [16, 4, 11])), 1)
output = relay.Tuple([call_8830,call_8847,])
output2 = relay.Tuple([call_8831,call_8848,])
func_8857 = relay.Function([], output)
mod['func_8857'] = func_8857
mod = relay.transform.InferType()(mod)
mutated_mod['func_8857'] = func_8857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8857_call = mutated_mod.get_global_var('func_8857')
call_8858 = func_8857_call()
output = call_8858
func_8859 = relay.Function([], output)
mutated_mod['func_8859'] = func_8859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6603_call = mod.get_global_var('func_6603')
func_6604_call = mutated_mod.get_global_var('func_6604')
call_8902 = relay.TupleGetItem(func_6603_call(), 1)
call_8903 = relay.TupleGetItem(func_6604_call(), 1)
uop_8907 = relay.rsqrt(call_8902.astype('float64')) # shape=(16, 16, 9)
uop_8909 = relay.rsqrt(call_8903.astype('float64')) # shape=(16, 16, 9)
uop_8920 = relay.cosh(call_8902.astype('float64')) # shape=(16, 16, 9)
uop_8922 = relay.cosh(call_8903.astype('float64')) # shape=(16, 16, 9)
func_329_call = mod.get_global_var('func_329')
func_331_call = mutated_mod.get_global_var('func_331')
call_8923 = relay.TupleGetItem(func_329_call(relay.reshape(call_8902.astype('float32'), [16, 16, 9])), 0)
call_8924 = relay.TupleGetItem(func_331_call(relay.reshape(call_8902.astype('float32'), [16, 16, 9])), 0)
uop_8925 = relay.cos(call_8902.astype('float64')) # shape=(16, 16, 9)
uop_8927 = relay.cos(call_8903.astype('float64')) # shape=(16, 16, 9)
func_7618_call = mod.get_global_var('func_7618')
func_7620_call = mutated_mod.get_global_var('func_7620')
call_8930 = relay.TupleGetItem(func_7618_call(), 0)
call_8931 = relay.TupleGetItem(func_7620_call(), 0)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_8939 = relay.var("var_8939", dtype = "float64", shape = (196, 1))#candidate|8939|(196, 1)|var|float64
call_8938 = relay.TupleGetItem(func_3142_call(relay.reshape(var_8939.astype('float64'), [196,])), 1)
call_8940 = relay.TupleGetItem(func_3145_call(relay.reshape(var_8939.astype('float64'), [196,])), 1)
func_6357_call = mod.get_global_var('func_6357')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_8944 = relay.TupleGetItem(func_6357_call(), 0)
call_8945 = relay.TupleGetItem(func_6358_call(), 0)
output = relay.Tuple([uop_8907,uop_8920,call_8923,uop_8925,call_8930,call_8938,var_8939,call_8944,])
output2 = relay.Tuple([uop_8909,uop_8922,call_8924,uop_8927,call_8931,call_8940,var_8939,call_8945,])
func_8962 = relay.Function([var_8939,], output)
mod['func_8962'] = func_8962
mod = relay.transform.InferType()(mod)
var_8963 = relay.var("var_8963", dtype = "float64", shape = (196, 1))#candidate|8963|(196, 1)|var|float64
output = func_8962(var_8963)
func_8964 = relay.Function([var_8963], output)
mutated_mod['func_8964'] = func_8964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
call_8966 = relay.TupleGetItem(func_1792_call(), 1)
call_8967 = relay.TupleGetItem(func_1794_call(), 1)
func_6653_call = mod.get_global_var('func_6653')
func_6656_call = mutated_mod.get_global_var('func_6656')
const_8984 = relay.const([-0.700248,9.683713,2.205719,9.748195,-0.806519,4.594509,-3.373214,4.317524,-8.386493,-8.304547,-7.352446,-1.560912,-4.589036,9.180520,3.450178,-2.750445,-6.678235,4.285420,-1.549695,-7.498833,9.530758,-1.766563,-1.232038,9.981009,-9.569084,9.649341,2.256574,7.766645,7.623982,2.736619,7.127856,1.622008,9.418517,8.209845,6.917507,-7.190816,-9.077064,-3.338002,-7.801845,7.319867,6.458817,2.116656,-5.935721,-1.631180,8.650494,7.830542,2.215430,7.871223,8.128645,0.165729,-4.077535,1.752948,-3.126160,9.787610,-5.749240,5.448032,1.090624,-3.957768,-7.847157,-5.992373,-4.850522,-0.376050,-7.000639,-5.143471,-1.738825,-9.925133,3.969681,3.645650,6.736960,-9.792188,-1.021289,-8.811400,2.712224,9.672421,4.361799,0.032470,1.930539,-7.492825,2.017089,6.077870,-7.149775,-5.180669,-1.954897,5.391586,0.813187,5.027633,8.038339,8.061397,-8.878183,-0.165354,-3.141752,3.487230,8.469625,6.652800,-2.631522,4.329111,-6.627905,-6.343388,9.827909,8.866302,2.119436,-6.337798,-3.985621,4.333865,1.986538,-0.558599,-1.037217,5.145931,7.255670,-8.052094,-2.106176,-9.290133,-8.478505,8.670157,-7.255335,-3.305094,4.130068,1.662119,-6.759133,-7.969915,-2.896372,-9.983000,-0.560430,9.557894,-0.091652,9.887189,5.090053,-5.169042,-5.366515,3.388001,-4.195341,-2.014048,1.329111,2.002036,9.148939,2.779969,-5.366285,-0.630462,4.739195,9.231731,5.767545,-1.323471,-0.317183,-9.195347,-6.163439,-6.834992,2.963176,-4.131245,-1.367287,9.746410,0.767869,5.309832,-3.929708,-7.095046,9.726699,5.505526,-5.119615,5.424965,-3.342314,4.443568,-9.403916,4.837994,3.628818,-1.121076,8.222908,3.723233,-4.246518,0.401806,-6.172634,-5.451810,4.753514,-0.876982,-7.971104,-3.665189,-2.426257,1.704760,7.851760,-8.168519,0.385647,-6.011519,-8.642643,0.853470,8.461556,9.488349,2.893907,4.171242,-0.947807,-5.564273,-1.167413,6.286294,4.548955,6.137932,-2.324446,2.807114,-7.523275,-9.330495,2.785892,8.622411,-3.769321,-4.952938,-5.200260,-2.355437,4.355576,3.673306,-2.838532,-7.260000,-5.603061,-4.586512,-5.014405,-2.935826,-9.996606,4.963473,-0.070594,-7.618790,-9.463052,-1.132095,-7.734065,9.598142,-0.811968,2.862563,1.682748,-8.918109,5.138048,-1.989976,-4.155477,-0.978592,-6.054548,-4.464012,-1.363809,0.220797,7.712257,-9.417125,0.454699,5.797729,-8.953704,-3.656277,7.444271,0.754616,4.192714,-6.437652,-2.188891,-0.441316,-4.958923,-2.037379,5.428227,6.902257,3.685309,8.814243,2.743889,-3.912289,2.408259,-5.055651,0.626021,-7.005846,9.161151,-2.976359,7.764120,-8.827747,6.290367,9.051209,0.749768,5.010765,-6.789732,8.334591,-6.811014,8.221608,-8.420173,-4.735650,-5.430720,-4.768072,1.407512,2.646115,-3.109143,-6.809315,-3.078291,-2.881331,4.321781,0.159406,-5.631848,6.233378,-0.408505,2.491611,-0.398516,4.148473,-2.245110,5.296525,-3.283334,-4.195074,-0.032076,8.643936,-0.574709,-1.377997,4.767836,6.176429,-4.008025,-8.011762,-4.841046,3.523334,1.845233,2.154095,0.989887,6.856727,1.714189,-1.703832,3.498338,7.031613,3.792597,6.058320,3.168873,2.331651,4.687047,-1.299479,9.999468,1.289354,-2.797584,-0.373268,2.917573,-2.181546,3.211098,-7.487858,-1.302420,4.595278,-0.264669,-0.431422,9.412615,5.316683,-4.047974,-6.713819,-6.677885,-3.748486,-2.786272,-5.309352,8.424082,5.802750,5.007750,2.432947,4.392541,4.103410,6.897490,7.268979,2.328936,5.569731,-1.524261,4.073452,8.134576,-7.127795,-1.132319,9.204411,4.704359,4.607506,4.153769,-8.513760,9.779773,-7.926587,4.869371,1.824008,-0.234656,-4.166819,1.022439,5.027992,-8.935793,-5.868637,-2.397505,-5.090215,-8.706771,-3.394273,-3.435863,-7.995867,3.327313,-1.301458,-4.130760,9.890164,-4.529957,-7.526280,-1.402634,0.314838,6.644976,8.635902,2.690750,2.263195,4.897970,1.803271,-4.612650,1.916518,-7.705476,-2.772876,-7.165477,-9.361502,-5.497744,-5.989062,-9.448527,5.749791,4.208077,-8.043349,-4.624696,7.374338,8.582182,3.396070,-7.435717,9.704334,-4.023939,-6.524385,-5.799190,4.348110,5.264921,7.146949,1.726512,0.980652,6.340594,-8.409854,8.823874,-7.904740,-6.945151,-1.004845,-5.828318,-9.216310,2.868046,6.586625,1.404458,-4.257460,-6.084263,-0.480397,-8.651512,9.914559,9.560941,2.634129,0.919857,-5.556346,4.570849,-2.747715,-1.292224,-5.004116,9.468724,3.346931,7.121904,3.407147,6.885342,6.081428,9.661855,-7.728010,-4.601531,1.485599,7.537463,-9.948933,-7.399370,-8.626758,0.546608,3.128806,1.934258,7.637914,-1.711725,-8.531374,-2.843902,-9.463591,-2.041056,1.597045,-2.164819,-2.879516,-5.910232,5.274890,-6.920045,2.383294,-8.365181,-8.850535,-1.582526,-6.016628,3.431777,-8.542645,2.633416,1.680791,7.251077,-0.058533,-7.090890,1.626399,3.129016,4.798377,4.460847,8.655641,1.039864,8.646100,6.175028,6.264636,-2.159214,4.368032,-7.167653,-5.194641,5.695610,8.760082,0.552282,-6.999559,4.069592,-5.499839,-9.900109,5.119569,-0.122091,2.773973,-1.904693,-8.376353,2.339598,-9.670279,-2.777775,2.670515,-6.023182,3.816168,-2.993967,-4.056986,-7.505770,-8.094075,2.949052,-1.991259,-2.435923,6.717930,-2.789490,0.345853,9.311379,6.344298,-9.824356,7.719993,-1.503607,6.246780,-2.737851,-2.830801,-0.727078,-7.931337,-9.674031,7.742277,-9.949019,-5.951595,-0.949658,-5.794074,7.589318,-9.277678,3.920074,-7.351265,-6.595662,-6.382287,-3.502333,3.741598,1.149585,-4.608398,0.530408,-0.722970,-4.326381,-4.155201,-8.492318,5.322175,4.130758,-2.947349,7.187405,-2.754886,-3.509938,1.375439,4.340592,0.670590,-6.555777,4.322958,-7.788036,7.985594,-2.066379,9.428458,6.666149,-5.045959,-9.662233,8.448120,-5.719706,-1.262443,-7.374733,3.649701,-4.910474,-2.141301,-7.393752,-3.360576,2.729179,7.599516,-4.136420,-8.524415], dtype = "float64")#candidate|8984|(576,)|const|float64
call_8983 = relay.TupleGetItem(func_6653_call(relay.reshape(const_8984.astype('float64'), [576,])), 0)
call_8985 = relay.TupleGetItem(func_6656_call(relay.reshape(const_8984.astype('float64'), [576,])), 0)
output = relay.Tuple([call_8966,call_8983,const_8984,])
output2 = relay.Tuple([call_8967,call_8985,const_8984,])
func_8989 = relay.Function([], output)
mod['func_8989'] = func_8989
mod = relay.transform.InferType()(mod)
output = func_8989()
func_8990 = relay.Function([], output)
mutated_mod['func_8990'] = func_8990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5769_call = mutated_mod.get_global_var('func_5769')
call_9105 = func_5768_call()
call_9106 = func_5768_call()
output = relay.Tuple([call_9105,])
output2 = relay.Tuple([call_9106,])
func_9121 = relay.Function([], output)
mod['func_9121'] = func_9121
mod = relay.transform.InferType()(mod)
output = func_9121()
func_9122 = relay.Function([], output)
mutated_mod['func_9122'] = func_9122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_9198 = func_1911_call()
call_9199 = func_1911_call()
func_6836_call = mod.get_global_var('func_6836')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_9202 = relay.TupleGetItem(func_6836_call(), 1)
call_9203 = relay.TupleGetItem(func_6838_call(), 1)
func_5768_call = mod.get_global_var('func_5768')
func_5769_call = mutated_mod.get_global_var('func_5769')
call_9229 = func_5768_call()
call_9230 = func_5768_call()
func_3062_call = mod.get_global_var('func_3062')
func_3065_call = mutated_mod.get_global_var('func_3065')
var_9232 = relay.var("var_9232", dtype = "float64", shape = (2, 616))#candidate|9232|(2, 616)|var|float64
call_9231 = func_3062_call(relay.reshape(var_9232.astype('float64'), [14, 8, 11]))
call_9233 = func_3062_call(relay.reshape(var_9232.astype('float64'), [14, 8, 11]))
output = relay.Tuple([call_9198,call_9202,call_9229,call_9231,var_9232,])
output2 = relay.Tuple([call_9199,call_9203,call_9230,call_9233,var_9232,])
func_9235 = relay.Function([var_9232,], output)
mod['func_9235'] = func_9235
mod = relay.transform.InferType()(mod)
mutated_mod['func_9235'] = func_9235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9236 = relay.var("var_9236", dtype = "float64", shape = (2, 616))#candidate|9236|(2, 616)|var|float64
func_9235_call = mutated_mod.get_global_var('func_9235')
call_9237 = func_9235_call(var_9236)
output = call_9237
func_9238 = relay.Function([var_9236], output)
mutated_mod['func_9238'] = func_9238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3382_call = mod.get_global_var('func_3382')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_9314 = relay.TupleGetItem(func_3382_call(), 1)
call_9315 = relay.TupleGetItem(func_3383_call(), 1)
output = call_9314
output2 = call_9315
func_9341 = relay.Function([], output)
mod['func_9341'] = func_9341
mod = relay.transform.InferType()(mod)
mutated_mod['func_9341'] = func_9341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9341_call = mutated_mod.get_global_var('func_9341')
call_9342 = func_9341_call()
output = call_9342
func_9343 = relay.Function([], output)
mutated_mod['func_9343'] = func_9343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7483_call = mod.get_global_var('func_7483')
func_7485_call = mutated_mod.get_global_var('func_7485')
call_9385 = func_7483_call()
call_9386 = func_7483_call()
output = call_9385
output2 = call_9386
func_9400 = relay.Function([], output)
mod['func_9400'] = func_9400
mod = relay.transform.InferType()(mod)
mutated_mod['func_9400'] = func_9400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9400_call = mutated_mod.get_global_var('func_9400')
call_9401 = func_9400_call()
output = call_9401
func_9402 = relay.Function([], output)
mutated_mod['func_9402'] = func_9402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9121_call = mod.get_global_var('func_9121')
func_9122_call = mutated_mod.get_global_var('func_9122')
call_9456 = relay.TupleGetItem(func_9121_call(), 0)
call_9457 = relay.TupleGetItem(func_9122_call(), 0)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_9492 = relay.TupleGetItem(func_1390_call(), 0)
call_9493 = relay.TupleGetItem(func_1391_call(), 0)
func_6357_call = mod.get_global_var('func_6357')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_9499 = relay.TupleGetItem(func_6357_call(), 1)
call_9500 = relay.TupleGetItem(func_6358_call(), 1)
output = relay.Tuple([call_9456,call_9492,call_9499,])
output2 = relay.Tuple([call_9457,call_9493,call_9500,])
func_9515 = relay.Function([], output)
mod['func_9515'] = func_9515
mod = relay.transform.InferType()(mod)
output = func_9515()
func_9516 = relay.Function([], output)
mutated_mod['func_9516'] = func_9516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8989_call = mod.get_global_var('func_8989')
func_8990_call = mutated_mod.get_global_var('func_8990')
call_9547 = relay.TupleGetItem(func_8989_call(), 2)
call_9548 = relay.TupleGetItem(func_8990_call(), 2)
func_6810_call = mod.get_global_var('func_6810')
func_6813_call = mutated_mod.get_global_var('func_6813')
const_9550 = relay.const([5.623055,5.872313,-4.555751,-1.605172,-2.656255,-8.247588,-3.410426,-0.729072,4.911066,9.527968,-5.558087,-4.049370,-4.360523,6.321490,-0.289984,4.953850,4.463100,5.109928,6.574597,7.477663,-3.778193,-0.823948,2.330377,-0.848144,0.568353,-6.633078,7.910889,-3.996494,1.489252,9.948013,-0.522622,7.477037,0.813197,6.411932,-6.542125,-5.775278,-9.925900,4.541248,4.156395,-9.355916,-0.465270,-2.066894,-8.471918,7.299138,-0.677626,2.459632,-7.674315,-8.962955,-6.201148,-3.316597,-3.963929,6.993824,7.532960,-1.826747,-7.409121,2.751786,5.037913,-7.010566,-5.478286,3.604872,-9.600735,3.794152,2.121845,-6.078502,2.445077,2.736934,2.260679,5.421464,7.978037,5.147218,-7.470453,-3.043575,6.333860,1.977444,4.341333,-1.427380,-4.011083,-6.481174,-5.987200,1.271026,0.725724,3.237954,2.485045,5.842343,1.491682,-0.782204,7.988974,3.428191,-6.463559,-2.266715,-9.081078,7.116306,-1.538441,-1.539688,1.802282,-6.298946,-5.001563,5.903305,-0.676011,0.920851,-0.664973,-2.850333,-1.901442,-8.628668,-2.216187,-1.951734,8.960361,3.274809,1.750810,-9.373074,3.031264,6.061683,9.306217,8.215318,4.274120,1.960184,2.098937,4.972040,3.676551,-1.307721,-4.633589,-9.379857,-9.085097,9.581164,-7.174419,-6.320992,6.087780,7.666351,5.705298,-7.199813,8.278823,-7.349230,4.080305,4.630935,2.559188,9.500031,-3.230423,9.534628,1.746907,5.992968,8.848726,-8.242885,0.470768,5.195095,-6.957364,-1.312090,5.420471,-2.059399,-8.418428,5.616138,3.134110,-1.543871,0.806591,6.223421,-4.054485,-4.316379,-3.760390,-5.236842,-9.466590,-9.128507,-6.305899,2.969013,6.686560,-7.301449,7.288907,1.027134,-2.146679,-6.790276,-2.483602,6.626923,-9.908018,-6.355015,-2.687338,8.980622,-0.682893,6.401735,-8.538097,-5.545996,9.867754,8.484523,-6.098604,7.405696,-6.855168,-8.157926,1.189937,-8.805086,5.204284,9.323563,6.572643,6.421071,-8.269622,-5.289617,9.482324,9.053684,-3.668378,4.678068,2.937226,2.461774,-2.966833,-9.685411,7.316930,-0.643503,7.966679,-9.811620,-3.986870,-1.638234,8.102139,7.644106,8.571834,7.203977,1.771292,1.499792,1.877785,9.766429,-3.340599,-2.820300,-8.802844,8.752779,-8.207979,-0.029593,4.149783,3.297541,-4.020963,0.155763,9.867363,0.267981,0.022449,-7.638755,4.658680,-6.507005,4.728624,-7.650094,5.656545,-4.136330,4.304091,-9.140639,3.596105,1.922827,-6.501263,-6.214893,4.506628,2.487717,-5.466713,-9.472270,5.047765,7.875928,4.164278,-4.691141,5.472481,-5.502733,2.045777,3.978717,-9.009976,-5.939460,1.607964,7.262820,-1.952122,1.903680,-5.867674,7.622607,7.771701,-3.561812,-8.845097,6.976321,3.334453,-4.711696,6.039426,-6.631915,6.606213,-4.676493,8.559402,4.563680,-3.035227,-5.630252,-5.495557,-7.222051,-9.281054,-5.394751,1.221053,4.194883,1.967066,-0.570560,8.088758,6.492940,1.759313,-0.449006,2.921959,2.802758,-9.475771,-0.339494,7.969419,-8.515693,5.291152,-5.541837,2.106371,-4.487761,8.031960,4.328933,0.708416,4.869879,-3.687600,6.744934,-7.024589,-8.856660,-1.198663,5.473010,5.763443,1.823398,2.820991,-7.180643,1.010278,3.363576,4.073966,-0.347493,1.099801,6.500115,5.846530,1.961713,4.067425,-5.277661,-3.547986,7.404091,-6.564048,6.326168,-6.904598,-0.918953,-2.153024,7.884132,-0.675472,-7.822299,2.590110,7.714284,-3.007842,-4.476680,-4.171479,7.689949,8.649649,3.716658,2.932696,1.093672,-9.674374,-2.140646,1.635761,-9.286090,8.753514,-6.445463,-8.060645,5.095703,-3.120699,3.667773,-9.772339,-7.829727,5.162229,9.715374,-1.674215,2.864510,-6.135626,8.749891,3.531705,8.660002,-8.767344,7.714630,-6.404027,9.378509,1.123305,6.883305,1.391339,4.690197,5.543381,9.044144,9.830092,-7.852102,-2.833685,4.220399,3.573289,-0.164414,-8.372301,3.412302,-3.655521,-8.648303,9.417227,-4.289121,4.509420,5.539467,-1.183226,-6.818393,6.317678,-4.177468,-5.389549,3.870450,-4.823927,4.234283,-4.571676,3.604239,9.767412,-7.382180,-2.787883,9.292449,-2.283645,-6.700042,5.077138,-9.898367,-2.492054,1.110512,-7.853119,-1.264413,-5.360020,-6.928588,-8.826538,-1.981153,5.171483,-4.856093,3.712094,9.470752,8.574081,-0.195745,-2.235622,9.389399,8.436102,6.937409,-5.871851,1.727582,7.691125,1.013689,7.268009,8.646808,-4.904572,-8.032736,9.076177,9.744812,-2.291972,3.848259,-4.972264,2.595823,7.589821,2.188443,-3.788239,7.950800,-7.987043,-8.243403,-6.103584,-8.302308,0.411261,-1.239395,-7.772774,3.335129,6.763674,3.727214,-1.057405,-0.348602,1.847010,9.797175,-8.220042,3.850925,1.212048,-2.148492,6.760434,-9.317171,-1.815650,4.299374,-5.629249,4.375781,-9.178988,2.115907,2.414131,-6.065428,8.415620,-8.497221,-8.487423,5.512331,5.625640,8.985333,-7.047780,-9.587433,-7.576875,-6.272724,-4.027791,7.951592,-1.952872,4.079912,-6.017997,4.577120,9.097213,3.734074,4.120772,8.872015,-5.353521,-0.703455,-9.756954,4.536992,-3.004588,8.470180,5.830524,8.951742,9.950472,5.669695,8.643475,-4.341877,9.636538,-6.939843,-3.092305,5.151959,7.266087,0.788784,-2.699235,-5.370834,-7.601962,-9.245833,-0.621581,-5.787478,-0.267494,9.449488,-0.780611,5.833224,5.074336,-4.492019,5.654007,4.889703,5.369313,4.355391,6.762650,6.525862,0.234449,-3.799868,7.116320,-6.977122,-1.625432,1.262584,7.013317,-2.208445,2.584454,-9.346110,2.983287,0.942915,-1.823804,-4.023240,-9.738754,-5.099031,2.022290,-1.189842,2.204644,8.010295,-0.987269,-6.119953,2.852416,5.418702,4.117597,4.662477,7.608064,-5.806457,1.871329,7.752912,-6.640908,-7.969085,-2.407604,-8.443815,3.576232,-2.643994,2.582052,3.189614,3.579291,1.485956,-3.850864,8.250773,6.254219,6.686961,0.832062,-2.291230,-6.430158,7.317893,1.385714,-9.690790,3.414295,5.395088,8.970725,5.108875,7.709667,-1.077847,-6.040340,4.630950,8.067944,-2.030321,8.083012,-7.955418,2.941936,7.915117,0.549085,3.839065,-1.406672,6.467902,6.445221,-4.933836,3.147344,-2.453068,1.224292,2.009884,7.515109,1.958305,4.135779,-4.923830,0.987824,0.847743,-1.035442,-2.724857,8.479845,-4.509337,-1.178520,5.083755,0.786311,8.387552,9.064175,1.913106,0.177638,-7.943295,-5.224172,7.413222,-6.510569,7.529191,-7.700813,9.920047,8.889117,-5.928978,-4.050602,-9.979290,-8.312659,-3.741251,-0.977107,-2.710995,-5.897145,-1.357089,4.861795,3.853357,4.665043,-4.495801,-5.994323,5.167413,-5.615996,6.797814,-2.862036,-1.783567,-9.548932,-6.471217,0.221923,-6.269757,9.181383,-2.764554,-3.146348,-7.626089,-3.997224,8.749599,-4.489341,5.985590,9.428369,-1.731640,-9.674887,-2.318506,1.336701,7.936824,3.508260,3.825210,7.689557,6.975367,3.500009,3.731417,7.054197,-2.235704,3.201355,-6.240549,-3.834872,-7.236789,1.134636,6.009769,-5.280463,2.924374,-8.992340,-9.405864,6.385212,-0.114184,-5.844968,-7.873135,-1.943916,6.953327,-6.370445,-0.654245,-6.254123,5.496629,7.860032,7.348941,-8.380885,4.076658,5.453145,-4.328197,-7.629605,8.249557,-1.021639,-5.521180,-9.848559,-8.663479,0.644133,8.785808,-5.966582,6.315462,-1.468271,7.226987,-7.258012,2.370625,-9.400233,-7.359428,-5.340339,8.303185,2.242499,-3.237486,-3.633802,9.710145,8.832745,0.435232,5.020604,-6.472452,8.370791,-2.305422,-2.944964,8.346899,1.883529,6.443066,0.778398,-0.190913,-7.065194,-5.750706,-1.103968,-3.299761,4.650184,6.293379,9.069843,-8.785900,7.806674,-2.179103,-0.432991,-1.848048,1.904150,-8.487552,9.791451,8.261955,4.527113,-8.556126,3.461559,2.665981,-8.066650,-8.217933,-4.353799,8.021229,5.449454,-0.976601,3.127444,-3.048241,-3.157517,-4.277094,8.944086,-8.361257,7.032913,-7.549279,3.969410,9.712827,-9.759880,5.937745,-5.078110,-2.093182,-6.081087,-4.214330,-8.757935,-0.714521,2.381289,-0.379016,1.020193,5.420181,9.053036,8.930412,1.906223,-9.797211,-0.122844,3.377913,-5.180344,3.771282,-7.497891,2.291771,-8.525618,0.739037,-9.989010,-7.787569,-8.500431,-1.736152,-3.259859,2.208944,5.433527,5.335185,3.128294,-6.715767,0.299404,0.450118,6.769188,-1.234833,-0.299604,1.017605,9.674943,-1.652758,5.998223,5.884589,0.819581,-6.928058,-5.190138,-4.622886,-4.205841,-8.352292,-3.709639,5.411977,-8.798458,1.383893,6.255443,0.514163,9.220553,2.103763,-1.094574,-3.363357,9.738960,-5.376623,-2.613911,6.181472,-1.637416,-6.758836,7.254296,-1.489845,3.596369,9.962694,1.997076,7.408747,-2.373287,4.037791,2.377993,-2.897944,-2.275152,5.638397,-5.862287,9.263731,-3.976191,6.540149,9.705916,4.810942,-8.126770,-3.258566,5.400177,-3.868515,-5.397886,-0.292629,1.621671,-8.546816,-5.005300,-5.881347,-3.328093,8.201392,-3.558431,3.269884,-8.308773,-0.137578,5.459039,-2.746062,6.998982,-5.934316,2.421697,5.628220,-5.108490,-5.799841,4.081413,5.684189,9.976285,-9.260456,1.963330,6.021597,-9.910463,-3.547396,-6.784309,-4.611719,6.948571,7.870447,-0.457150,4.946083,-8.073991,6.115627,0.174801,-5.950841,9.224527,-3.980027,-8.642615,-1.232108,1.991010,-8.114757,-2.122810,8.513335,5.705587,-3.731915,-5.395577,-9.308715,7.621028,-2.683150,-8.616790,7.631326,-1.887480,1.062606,-0.659940,7.168635,-1.866873,1.089709,7.079927,9.691774,-2.966672,-8.365061,0.685692,1.332764,-5.007163,4.900943,-6.309679,-5.195331,-2.055247,8.198830,6.314933,5.919773,-1.564994,-4.325842,1.491197,9.190156,3.703503,-1.967248,-2.941000,-3.623700,-6.017245,-5.460991,-2.716936,8.985633,-1.649054,7.170921,5.343227,4.823458,-0.615872,8.586129,8.868337,1.836673,-4.861529,-0.054975,1.391312,0.028730,-9.927355,6.192166,-2.878652,-2.691811,7.415414,5.985961,-4.144564,8.896961,-2.427724,-5.364785,3.396288,1.748101,-3.240253,-4.350053,-5.987225,0.615711,4.223443,2.523460,6.104578,-6.794297,-5.041417,3.364737,6.519221,4.886719,-0.388519,8.219137,5.341696,8.337358,-1.027626,5.232873,-8.530958,-5.220655,9.754776,7.909235,8.218428,-8.889603,7.529683,-7.094414,-4.403251,5.341619,3.559870,-3.964185,6.777185,-4.826802,7.884493,-0.566941,-8.773868,-3.824505,-3.195945,-5.173742,9.543323,1.496387,9.967699,5.435107,6.092010,-8.739085,-7.062405,1.193312,-1.042685,9.826263,-6.032359,6.404600,-9.616204,-2.554397,-5.760454,-0.820892,0.319872,-3.280532,1.629540,-4.307244,-3.325320,-6.252954,9.097116,-9.079625,6.880717,-8.294612,7.232901,6.453969,4.312666,8.111516,-1.545579,0.327409,9.569577,-2.672941,-6.929482,-7.897356,2.446737,7.130192,-1.909189,5.422965,0.872826,0.227576,8.540944,3.143175,4.913390,-5.838162,-5.780812,6.083071,-9.837537,4.027411,9.609570,7.798394,-1.590568,4.936321,1.900057,-0.262889,-5.928775,0.699841,-1.776658,-5.120202,0.805129,-5.250312,3.649814,-6.156346,0.624847,-2.264468,4.028212,-6.807910,-2.064642,-8.792365,-2.299045,-3.691563,8.894175,-3.202446,-5.692018,8.089191,-9.676257,-5.887767,0.342523,5.117325,-3.995650,4.940306,5.274746,5.155934,-1.015755,8.954070,-5.228443,3.389809,-5.648730,-0.880467,6.708993,-2.008761,2.491730,2.060569,2.426505,2.936610,-4.072726,7.316069,-4.226293,5.508840,9.117142,0.397393,-1.697252,1.226102,2.104675,-6.057354,5.214186,-9.706756,7.441916,1.918387,-3.900769,-1.520929,-6.926505,-1.064548,-9.113904,2.607416,9.986250,9.903399,6.320710,-4.068867,-1.322130,3.633628,0.151316,-5.172645,3.676221,-1.490439,5.373341,-2.895336,-4.336843,-3.827207,-2.605808,-2.729166,2.155232,-0.237546,-3.430191,2.499446,8.311285,-1.800394,-0.184601,9.242504,7.644027,1.752273,-3.708566,-2.881950,-8.852667,9.434387,-1.558949,-3.195314,3.714500,-3.665151,7.893229,0.672337,2.066043,-4.946483,-3.235355,2.885806,5.106869,-1.688562,9.949445,-2.132873,-6.382043,-9.198890,-6.447931,-6.048906,3.118113,0.710782,-9.642553,5.554991,6.642968,9.790259,5.890644,9.530076,7.823769,-7.589201,-7.929977,-4.242704,-0.155625,6.381975,-8.372646,4.284139,-9.130398,-0.734156,8.587564,-6.206998,7.838187,-6.605149,5.688990,1.094423,-9.882818,8.878903,7.318290,3.161845,-6.030117,-7.468222,-2.964483,4.099478,-0.948823,8.754753,8.458161,-8.660461,2.515165,-8.770003,-6.648841,4.488327,9.782381,0.403919,-2.987345,4.673265,4.164204,3.930877,3.806999,5.310637,4.974574,4.496825,-2.083350,3.791922,-7.406029,-1.270394,-6.253059,6.687937,-4.560494,-8.384350,2.957989,-2.002868,4.350732,-6.912096,-2.271053,-7.599996,-3.462248,-8.860555,-7.799184,-8.260201,8.203211,4.699569,-5.008511,-1.981221,-1.145591,-0.364090,-1.178632,-2.774063,-4.550642,-3.738915,-5.339762,-1.118659,-7.848692,-0.334237,5.736398,8.787891,9.772868,-3.778435,-7.868261,5.799113,0.185497,-7.420056,-9.583020,8.753641,-7.493737,6.233579,-5.865871,9.900078,-1.887795,8.830254,5.600408,1.922038,-3.120839,-9.494537,-7.506823,5.767752,0.601549,8.757611,-2.503781,6.681986,-9.698722,-8.560083,-3.683895,2.853245,4.065591,-1.101201,8.515150,8.142617,5.283478,-0.893374,7.470584,8.732315,-2.963662,-1.188852,2.635665,9.831978,-8.502230,9.994748,9.222207,-4.473762,6.280842,4.845036,-6.704479,-3.810788,1.037209,0.114189,-5.324493,5.291525,8.167976,-0.708722,6.239022,-8.978918,2.273076,3.277570,-4.324587,2.390854,-7.255423,-1.285995,6.051730,2.401690,-5.674125,-7.261207,4.460210,7.253925,7.413580,-8.818378,0.298049,2.945023,-8.669949,9.624643,-8.380633,-2.225502,-2.976016,8.166301,-0.032786,-5.076652,9.745876,0.637957,-2.442753,6.302986,-6.012176,4.940348,-0.539165,-7.680121,0.043559,3.010267,-2.618590,-0.140244,-3.189467,5.216022,-3.862437,2.209416,-3.003606,2.466339,7.567331,-7.010890,-3.899967,3.893021,-8.741670,5.384429,-7.602442,2.736873,-8.287407,8.633025,9.392782,1.507928,-9.276544,3.379786,-1.401656,9.905216,7.030596,2.625084,0.744719,-4.623277,6.218412,5.539434,-1.478022,-4.891521,1.425766,-4.954984,-0.536216,-5.985469,-2.150607,0.486537,-7.310892,0.447206,9.522257,6.291805,7.776001,-4.279486,6.862623,-0.045501,4.954616,9.671644,-6.639467,0.840431,0.014144,1.690686,-0.833294,-2.163432,-2.713413,-1.887862,4.797586,-1.137901,-5.056820,6.585073,2.853841,7.045048,-0.502312,7.325082,-7.070077,-3.185104,-6.160534,-2.905169,-1.001889,-5.127474,-8.980756,-5.838959,-7.194321,-6.442541,-5.983607,0.151556,-5.555124,-7.942012,8.756984,5.646830,-5.143315,2.557592,-5.907051,7.876955,1.631299,9.687739,8.340462,5.717483,-3.892072,-6.023264,1.084072,-1.754700,-9.141488,-1.761297,-6.621592,-4.636556,2.265426,-6.761776,6.874867,8.913974,8.347483,-3.738591,-7.477142,-9.949985,6.412960,0.675838,-1.746406,-3.489860,-0.092449,-2.526142,5.244001,-8.586162,2.307449,-6.069830,-4.739140,7.456563,-5.564600,-4.469563,4.891723,0.370360,6.702940,7.888220,3.784051,5.128038,-2.285292,-5.209657,-8.151030,8.200039,5.866639,-0.092323,3.958138,6.875326,1.507478,-6.196243,6.094308,5.382920,2.185350,-1.073275,5.930202,-4.876794,-9.121815,3.708993,4.415579,-5.671190,-1.359950,7.979004,-9.308173,5.841454,-9.827667,-9.356960,5.590779,7.608918,-7.508572,6.066055,0.290890,2.909233,6.781925,-2.504691,7.046870,0.021892,9.527410,5.755711,-0.434598,6.079199,0.921630,-7.037547,0.235302,2.124892,8.723946,9.106913,-6.541704,-1.491396,9.564487,8.874524,7.268781,-1.215441,7.503310,-1.898393,-3.016579,-6.319348,5.859274,8.126877,-7.457073,-3.870736,8.318153,-7.341266,2.762414,7.236913,4.711427,7.520172,-2.221723,5.508315,-8.564464,6.785039,1.805303,-0.958977,-2.537547,-6.090745,-6.930091,-4.691621,-6.537362,1.275123,-6.090834,9.970998,9.327058,-2.781868,-7.330658,7.629193,-4.811816,-7.787318,5.681404,-4.489300,-7.695304,-2.575863,-5.317433,-3.920746,-4.637677,-0.458020,8.708077,-1.485785,-6.884416,-4.668876,8.296037,4.440475,-1.240343,3.818630,-4.933771,2.007494,-0.211989,8.159344,-2.091865,-1.357367,-2.181293,8.135458,-7.912672,-1.834377,2.973776,9.728875,8.591836,-8.856142,-6.717471,0.991488,1.222902,9.930499,-4.714380,-0.112803,3.541115,9.304596,9.381030,1.495195,3.750274,2.095847,-2.492985,7.885230,3.928282,4.813560,4.954533,3.891519,7.213608,0.098388,0.101862,-3.118499,-8.563295,-8.671680,5.081399,6.339104,-5.078139,4.878138,2.481296,-8.014664,-7.652068,0.217230,-2.666359,-5.923865,9.278507,9.222893,-3.215875,1.118228,-5.632318,-6.959320,3.166401,-7.437007,-0.708706,-8.084099,-5.970231,0.086438,-5.893773,-6.402159,2.862163,-2.431974,-8.874857,8.147111,-8.429259,2.458808,5.063250,-2.739475,4.990867,-9.085422,-4.621747,-2.115925,9.356890,5.188242,-2.153879,-6.357429,-2.493852,-7.968937,-7.788895,9.400327,8.393237,3.587227,4.426932,7.223947,-4.155126,-5.479660,0.238995,6.254302,-4.697369,-3.598838,4.501503,-4.135252,-8.153681,-2.744279,7.271526,0.874710,5.581296,9.831167,-4.624066,1.673609,-7.668677,3.437328,-3.903311,-7.141087,6.820154,6.837229,7.771288,-1.643922,1.483430,-5.047333,5.927435,5.152848,6.500781,6.329597,3.010930,-9.944168,-6.843567,5.191825,2.260554,-6.985019,5.653576,6.565641,4.664068,-4.948171,-0.097223,9.643561,-6.015428,-8.971436,2.679516,4.002568,0.347237,-2.520504,3.316941,-8.197989,9.248808,1.592371,9.526135,8.933935,-5.898175,2.166938,9.336931,-8.527423,8.859218,8.453821,-2.249571,4.837948,-7.822518,-5.681957,-8.549626,-3.111494,1.196627,-1.984455,-1.361313,5.832854,2.264493,-2.498106,-1.764991,-8.852421,2.457673,-5.298365,-7.342044,2.996948,-3.931874,-3.388090,0.267634,-8.512032,-0.079667,5.851069,1.840673,7.987044,8.456245,4.184789,4.528345,5.736267,4.841490,-0.795590,2.264411,-9.614101,4.268229,-8.065514,-9.549209,3.590564,3.631984,4.042580,-9.938344,9.773590,-1.188073,2.726743,-4.053963,3.437420,-5.995430,2.136515,2.438742,9.635341,-6.722344,2.028026,2.434726,2.793599,9.982765,1.094637,-6.795951,1.043642,7.404205,-0.924924,0.851621,6.245796,3.709957,-3.352963,-6.552579,-6.419096,6.719676,8.288218,-2.595364,-9.220127,-8.698827,4.895530,-0.620125,9.320494,0.281249,-3.162466,8.643883,3.177328,-6.474431,-9.390529,9.961104,-7.668389,-4.099152,5.382252,-0.822639,7.975564,3.367815,5.194809,5.272102,9.221379,-0.649577,-5.549820,3.777533,1.775513,4.421067,7.551085,-4.324689,7.517561,6.433511,4.481293,-7.858960,-8.248266,-6.557306,-1.874974,6.856297,-7.455890,1.164094,3.694216,-8.390883,-2.065403,-0.029303,3.388691,9.000956,-4.770964,2.326091,1.491316,-9.294939,-6.297844,3.494023,-2.104759,-7.802376,5.870170,4.785695,5.057256,2.772143,8.181797,3.777674,-8.152591,-2.967612,3.182124,-6.451903,8.411140,6.378469,3.150918,-4.958876,8.165947,0.158904,-0.291797,8.858690,-1.690429,-6.854049,7.093037,-4.572046,-7.344143,-1.030127,9.236069,-4.004088,3.939716,-9.072391,8.005425,-1.182430,8.406992,3.637563,3.374591,1.736863,9.085576,8.366802,2.351608,-3.993648,-0.538204,-8.526059,3.887011,3.816329,-1.781757,-8.744569,-8.852501,-9.764566,-4.367053,-1.144182,-1.082285,5.941109,6.665300,-5.259521,6.472972,-9.879540,5.439044,2.528797,-9.163309,0.949915,-7.630944,-9.140851,0.544470,-6.463676,-7.524068,8.737425,5.454390,-0.955036,3.834805,5.926241,1.843298,9.758834,-2.429003,8.096704,9.664404,4.196318,-8.629240,-5.405633,-2.349943,5.776893,8.415838,-4.945487,-7.733758,1.448772,0.963474,-2.402976,2.512282,-6.409463,-9.403320,-4.227408,-5.934571,2.585889,7.514112,-9.410998,-1.751502,-4.217705,-7.760331,-3.315062,8.583428,7.281792,9.919025,6.170639,6.362216,-8.904927,3.309697,1.798073,6.672242,6.419039,-6.072109,-0.892579,4.666818,7.780764,9.680031,-2.885869,0.533743,-6.328606,7.027683,2.599636,2.442451,-3.257044,-2.809363,-4.393401,-7.496056,-2.011871,-7.094261,-8.183953,1.496888,9.318236,7.351797,7.922976,0.394168,4.268871,4.598667,4.805310,8.072899,-9.188390,0.641796,1.538124,-9.552620,4.699943,-3.468856,-5.257475,1.242069,1.855885,-7.573057,7.993405,-3.506298,-2.521207,-8.521962,-3.716190,-3.633591,7.209764,1.778138,5.904655,2.205168,-3.445722,-4.789013,5.175081,8.687224,8.382145,-7.198384,3.897638,8.296683,-0.321286,-8.380002,9.651080,5.198879,-3.943084,4.989717,-1.420849,-4.716007,8.147162,-8.215079,-6.990943,9.420808,3.685038,2.289327,-2.613789,-4.095196,-9.394479,4.481018,2.832869,-1.237241,8.297175,-9.828754,-7.987818,9.509341,5.714096,7.763093,5.722056,3.015877,-9.434326,8.151831,-1.610110,6.238310,-2.924804,-0.959232,-5.985165,-7.264216,3.031383,5.500995,4.127844,0.526666,-2.682814,7.353783,4.367319,-9.514506,1.673519,-0.800942,-8.180114,-1.770440,-6.882039,-2.575681,7.159396,-5.939867,5.000135,9.534097,-8.327873,-0.535740,1.740765,-2.701568,-4.617421,-4.171563,9.760435,4.661062,-1.648879,-0.416794,3.393724,5.139168,9.424898,6.224122,-4.207600,-9.521830,9.976773,0.270061,-5.539700,0.143083,3.661287,-2.786084,-0.877839,-0.891775,4.439622,3.933690,9.150167,8.980492,-8.213019,-9.552858,6.682534,-2.489180,8.009358,1.942718,7.570082,-2.373048,-8.401046,3.398132,0.095082,-2.190011,4.388629,7.411914,-6.654652,0.381388,5.269242,8.227605,-6.800877,4.534074,-3.591325,4.293026,4.821892,-3.199783,-6.996839,-5.865844,4.381770,-9.587787,-5.362416,0.739747,8.771343,1.943871,-9.875162,0.055090,-3.978531,-6.939506,-3.356551,4.975769,-8.658201,5.371048,3.323092,-0.233137,-0.309595,4.002673,-7.651769,-2.190262,-2.717776,-5.155364,-1.730616,5.808172,-8.544990,2.787129,-2.435781,-3.987785,-4.288236,2.285684,9.575377,-6.681261,0.194083,-3.297383,4.171612,5.817167,-1.082843,-8.204615,0.465455,-5.366314,-9.214164,-6.349646,-4.405358,2.650543,3.926589,-0.484487,-3.827866,-5.344249,3.407305,3.892549,0.096296,-9.475339,-2.153967,3.113938,-3.974466,3.166652,0.565127,4.789380,-2.332621,3.260391,-4.822256,-4.739115,-2.702844,-8.141372,6.494876,-5.646528,-8.894664,-0.141170,-5.277571,-1.131246,3.385380,3.370281,-3.197644,-3.375271,3.646545,-8.266723,-7.633544,-3.895371,9.156483,-6.413191,-4.293034,-6.208776,2.260251,7.199151,-3.540208,-4.795568,6.937869,-2.790716,6.847951,-1.470050,-7.354101,-3.381347,5.935082,-0.625988,5.290334,0.925836,2.102223,-7.630991,-8.844414,-2.089048,5.105538,7.564008,-9.216486,-1.710355,-2.507594,-4.652314,2.330183,4.890452,7.395959,-6.250544,-7.941770,-1.083298,0.219881,-6.682994,-1.166861,-2.446753,-7.570795,-1.722971,8.920853,-9.547417,3.306587,8.691123,9.200525,9.243840,-4.490901,2.973589,5.362648,-7.257577,-4.999231,0.926822,-0.666085,-0.090672,7.806627,6.546630,-3.119330,-0.022129,1.005109,-1.494562,5.883647,4.939685,9.140384,-4.384275,1.188120,7.553875,-2.891757,-7.253475,-8.443048,4.141061,-6.262330,4.888964,-5.869238,-9.354831,0.606188,-2.582800,8.271769,-5.182053,-1.123742,5.598514,1.792371,9.778944,0.724813,-0.002629,-3.927121,7.584211,1.395912,5.855565,8.048515,4.407150,8.719413,4.075636,0.541785,0.269121,-9.523162,4.190935,-2.511473,6.324428,2.640343,6.554349,9.124638,-2.764898,7.599632,-6.007577,7.027269,4.017332,6.043561,5.765682,-0.143962,-4.801649,-6.978176,6.135995,-9.732184,-8.283720,-7.369404,-2.398456,8.979173,-0.006873,-1.059376,8.404281,-4.140851,-8.841184,2.786564,1.610761,0.670317,-1.347327,5.886565,-9.357024], dtype = "float32")#candidate|9550|(2304,)|const|float32
call_9549 = relay.TupleGetItem(func_6810_call(relay.reshape(const_9550.astype('float32'), [2304,])), 0)
call_9551 = relay.TupleGetItem(func_6813_call(relay.reshape(const_9550.astype('float32'), [2304,])), 0)
output = relay.Tuple([call_9547,call_9549,const_9550,])
output2 = relay.Tuple([call_9548,call_9551,const_9550,])
func_9557 = relay.Function([], output)
mod['func_9557'] = func_9557
mod = relay.transform.InferType()(mod)
output = func_9557()
func_9558 = relay.Function([], output)
mutated_mod['func_9558'] = func_9558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
call_9620 = relay.TupleGetItem(func_3023_call(), 0)
call_9621 = relay.TupleGetItem(func_3025_call(), 0)
output = call_9620
output2 = call_9621
func_9622 = relay.Function([], output)
mod['func_9622'] = func_9622
mod = relay.transform.InferType()(mod)
mutated_mod['func_9622'] = func_9622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9622_call = mutated_mod.get_global_var('func_9622')
call_9623 = func_9622_call()
output = call_9623
func_9624 = relay.Function([], output)
mutated_mod['func_9624'] = func_9624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_9675 = relay.TupleGetItem(func_3446_call(), 0)
call_9676 = relay.TupleGetItem(func_3448_call(), 0)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_9682 = relay.TupleGetItem(func_2318_call(), 1)
call_9683 = relay.TupleGetItem(func_2320_call(), 1)
output = relay.Tuple([call_9675,call_9682,])
output2 = relay.Tuple([call_9676,call_9683,])
func_9691 = relay.Function([], output)
mod['func_9691'] = func_9691
mod = relay.transform.InferType()(mod)
output = func_9691()
func_9692 = relay.Function([], output)
mutated_mod['func_9692'] = func_9692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1861_call = mod.get_global_var('func_1861')
func_1862_call = mutated_mod.get_global_var('func_1862')
call_9747 = func_1861_call()
call_9748 = func_1861_call()
func_7483_call = mod.get_global_var('func_7483')
func_7485_call = mutated_mod.get_global_var('func_7485')
call_9749 = func_7483_call()
call_9750 = func_7483_call()
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_9757 = func_1911_call()
call_9758 = func_1911_call()
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
const_9766 = relay.const([-0.547775,4.344126,-8.385155,3.553968,-7.475823,0.311381,-2.650221,3.461978,-7.171285,-7.337341,7.169903,-6.588975,3.426326,7.371670,4.439029,-2.542263,-9.428768,-9.014173,-3.525623,2.156888,4.105434,1.994413,3.404528,-6.000207,0.171195,8.283670,-0.192310,0.380328,-4.080749,-5.205533,-1.692137,9.957846,-5.668787,9.370985,2.870343,7.424856,7.306858,-8.473600,5.234557,-2.426481,0.288442,1.375646,4.482820,7.177915,3.115839,1.596161,-6.750778,-2.678583,-4.405207,8.410454,0.064001,7.404669,9.889224,0.314868,-7.539214,-4.305704,1.614695,3.558252,-6.425391,-9.796193,-2.130774,-0.378835,-5.857917,2.698936,-5.621684,-7.968998,-3.153584,3.326689,8.576837,-0.575717,-6.663205,8.631744,3.029190,1.435084,1.705022,2.342960,9.202604,5.497870,7.777062,0.797198,9.221168,8.913807,5.280468,-3.938241,1.582420,-3.520342,2.764338,3.414912,4.559072,-5.938955,8.071681,-3.091564,6.899787,-9.350461,2.559642,0.850688,-1.624607,-8.496311,2.653417,-2.643137,4.527740,-6.923358,5.109937,7.557690,-9.020249,8.798584,-7.526696,5.971401,0.633550,-9.173325,3.739201,-8.542619,-5.694850,5.001550,5.395669,-1.795487,-5.613360,2.271702,-3.686747,-1.820650,-3.754756,-5.497640,-7.445426,0.493610,-5.704372,-3.888014,9.814163,2.636169,7.782330,7.065085,-9.393061,4.359975,-1.297810,-7.562607,-8.270333,-1.149360,8.604430,1.495391,-7.814465,6.211352,-8.190409,-3.285726,-6.375157,2.700189,-1.303713,-2.503367,-9.523834,4.289706,-7.450938,7.435823,8.955132,-8.442483,9.371502,-7.599160,-4.725282,-3.040043,4.270393,-4.073022,-4.631216,0.682122,-4.151480,8.258015,0.298461,8.280363,9.813105,-8.308035,-7.446116,6.847476,-7.679727,3.057358,5.838957,2.161821,-1.485013,2.823608,4.865083,2.970445,-8.538338,-8.740506,-4.701830,-8.832861,3.846927,-3.947589,7.572983,8.025410,0.898545,-0.904866,-3.473966,7.002555,1.261274,2.468356,2.838563,-4.669165,2.203150,5.331148,-8.312011,9.808036,6.853636,-4.017143,0.322563,-5.913844,-0.542592,-8.987239,5.910379,-0.559290,-6.794247,4.702953,-4.507424,7.393173,4.884042,5.329578,-8.148956,6.886773,-2.521087,-7.745639,4.403788,-7.840397,3.244405,-7.528578,-1.415103,4.900295,-0.145807,-3.052283,-1.223369,-5.028829,6.827243,-2.398249,0.160805,9.357251,8.745406,2.395103,-4.733305,-9.114469,-0.741661,-3.806764,0.663195,3.401592,8.096613,0.830388,-8.036445,3.812771,5.793309,0.796075,7.977271,7.249442,3.098354,7.643698,-0.358022,8.486027,-9.646076,-0.640108,-7.011253,1.042060,0.118573,7.087151,-5.904591,1.370449,-7.814655,-9.925953,3.466820,-7.064542,8.705037,4.362664,-7.307682,-4.290985,-8.737496,-7.747765,3.599309,-6.822562,-1.079143,-6.061944,-9.408135,7.136069,-1.837543,-7.549249,5.657047,-3.305971,-6.646284,-9.390811,2.398327,7.714819,1.480834,-3.044162,5.247275,-9.672073,-2.844644,2.711929,-6.851080,-4.970285,-4.637307,3.698144,8.398120,-1.515479,4.848390,-0.143986,-0.051804,-4.551438,-6.870991,-8.690895,-1.577557,0.139066,9.897810,0.137404,8.154038,-7.703916,4.416694,8.929419,-9.828516,-5.373253,4.371323,-2.027136,9.440998,1.095401,8.755398,9.395620,-6.091360,-5.847894,2.335478,-0.281897,2.081234,7.448827,-4.282369,-1.477605,-8.426649,-2.372821,1.406437,4.794991,2.818786,-5.364772,-9.139778,-2.808064,3.828099,-1.882902,5.033632,1.224567,-8.366981,6.439053,-3.585237,9.979076,-0.261801,-6.528842,-9.869368,-7.505467,-2.556178,-7.047977,2.444880,-4.720062,7.415617,3.744177,3.612025,-0.689501,2.454599,-2.115762,1.691974,7.762596,7.978075,5.241559,9.891227,7.623576,5.023003,9.625582,7.517815,2.229461,-1.922463,6.340319,9.175287,9.140916,6.164537,-2.739408,3.959434,-4.874546,3.242686,-1.836315,-5.183641,8.201699,0.286771,-5.357396,-3.867798,-8.670841,-6.547239,-7.769845,6.852456,7.568871,1.474504,2.743778,7.174367,5.908492,3.479952,8.732511,3.664551,5.291651,8.013225,3.444817,3.703442,6.704944,1.830994,-4.737510,2.698597,1.772113,7.935627,-3.581672,4.399507,-3.133205,8.711687,-0.424948,-0.400199,-6.343515,9.408038,4.804164,8.665959,-2.627089,-1.774314,3.155508,-7.130504,-6.192058,6.831188,-8.663514,-7.278887,0.072034,7.133307,-8.982410,-5.067180,9.471024,1.178867,-7.194596,6.166659,7.891812,2.577835,-9.038942,-8.394868,-6.481330,1.769153,-8.010141,0.513096,6.599427,9.021168,-3.148564,-5.157906,9.224755,-6.812158,-4.750734,-9.211903,6.039840,-4.081814,-4.961625,-4.148540,-4.980651,6.239287,3.649177,4.948324,4.857136,-8.969188,-8.168177,-6.117229,-3.877839,2.595314,-2.517140,4.132190,-1.197481,8.578812,-5.928134,7.109331,6.075396,2.490979,7.001847,-0.800790,2.310479,-4.226464,3.037679,7.614777,9.137381,3.998407,-7.209981,0.068989,-3.991133,0.217944,-5.495690,-7.233424,-6.991121,-9.170078,-5.243016,-8.357804,5.168062,1.069603,8.179984,1.529450,7.576333,9.115231,3.495513,-5.966553,0.046952,-8.256257,-9.293462,-6.890709,-3.301995,-4.792310,3.867433,-4.605061,8.717859,1.610343,-0.307105,6.439192,6.968688,9.047305,4.340344,5.551969,-9.090826,-8.186593,-8.468331,9.603269,3.958351,4.778004,-7.267933,-4.124470,9.628290,3.808719,-0.231829,1.200317,4.820088,-8.876075,7.551529,2.541633,0.119415,-7.959876,-7.147917,-0.005481,-3.718104,-0.323166,3.363127,-8.049065,8.463904,-8.437466,6.311352,5.376604,-8.884012,8.087985,3.019471,5.949935,2.102150,-5.055261,9.225135,0.236724,-6.210538,8.458090,-6.283737,-4.396812,6.103951,1.857240,5.137473,5.167085,-0.598423,9.069193,6.077065,-9.452180,-8.268628,3.874545,7.078505,5.741281,-3.423536,2.425327,9.768756,-1.679206,-6.903119,2.622152,5.777766,-7.514015,9.528976,8.973134,-0.959414,6.076262,0.826591,5.973115,-1.589062,-5.456733,8.894139,5.556204,-3.213585], dtype = "float64")#candidate|9766|(576,)|const|float64
call_9765 = relay.TupleGetItem(func_3632_call(relay.reshape(const_9766.astype('float64'), [16, 9, 4])), 0)
call_9767 = relay.TupleGetItem(func_3634_call(relay.reshape(const_9766.astype('float64'), [16, 9, 4])), 0)
const_9797 = relay.const([[[-4,-6,8,1,-2,3,4,4,-7,-4],[-9,-5,3,10,-1,-9,-1,-9,-2,-6],[3,-6,5,8,8,5,3,8,7,5],[2,-4,8,-2,6,-7,-9,8,10,6],[-10,-7,-2,8,-3,-9,8,8,9,-4]],[[-1,-5,-1,-2,1,-3,10,-5,-3,4],[-7,-10,6,-8,-1,-7,-3,-1,-7,9],[3,-10,-10,-7,-9,10,2,8,-10,-1],[1,3,4,10,9,9,1,-6,6,5],[-4,1,5,-4,-8,-5,-6,-2,-2,-10]],[[-4,-2,-10,-6,-2,4,-4,-2,6,5],[2,2,-8,-8,9,-3,9,-7,-6,7],[-4,5,-6,6,-4,8,2,-4,6,-3],[10,-7,-1,-7,-5,-6,5,-6,8,-5],[-4,-8,2,-7,2,1,-7,-8,-3,5]],[[1,-9,-3,-9,9,-5,8,-1,3,-7],[9,-6,8,-5,1,1,3,8,4,-9],[3,8,-7,-10,-7,5,8,-10,-5,9],[7,6,9,8,-3,-6,2,6,1,10],[-6,3,6,10,10,-7,-9,-9,-9,10]],[[7,-6,10,-8,9,-8,-5,-9,-4,-10],[8,3,10,-6,10,-1,-3,-8,1,3],[-6,-5,4,9,2,-4,9,-10,1,10],[-3,8,7,9,2,8,-5,-8,-6,8],[-8,-10,10,-10,5,2,-10,-2,-6,5]],[[-4,-7,-5,-9,2,10,-10,1,-2,2],[-10,3,-5,-8,-9,1,3,4,3,-10],[-1,-8,-3,-2,1,-10,8,-10,-2,6],[-1,-5,-6,-4,-2,-7,5,5,-6,4],[-3,-8,-10,6,9,3,2,6,-7,-1]]], dtype = "int16")#candidate|9797|(6, 5, 10)|const|int16
bop_9798 = relay.floor_mod(call_9749.astype('float32'), const_9797.astype('float32')) # shape=(6, 5, 10)
bop_9801 = relay.floor_mod(call_9750.astype('float32'), const_9797.astype('float32')) # shape=(6, 5, 10)
output = relay.Tuple([call_9747,call_9757,call_9765,const_9766,bop_9798,])
output2 = relay.Tuple([call_9748,call_9758,call_9767,const_9766,bop_9801,])
func_9810 = relay.Function([], output)
mod['func_9810'] = func_9810
mod = relay.transform.InferType()(mod)
output = func_9810()
func_9811 = relay.Function([], output)
mutated_mod['func_9811'] = func_9811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7936_call = mod.get_global_var('func_7936')
func_7937_call = mutated_mod.get_global_var('func_7937')
call_9828 = relay.TupleGetItem(func_7936_call(), 2)
call_9829 = relay.TupleGetItem(func_7937_call(), 2)
output = call_9828
output2 = call_9829
func_9843 = relay.Function([], output)
mod['func_9843'] = func_9843
mod = relay.transform.InferType()(mod)
mutated_mod['func_9843'] = func_9843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9843_call = mutated_mod.get_global_var('func_9843')
call_9844 = func_9843_call()
output = call_9844
func_9845 = relay.Function([], output)
mutated_mod['func_9845'] = func_9845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
call_9933 = func_591_call()
call_9934 = func_591_call()
func_5500_call = mod.get_global_var('func_5500')
func_5502_call = mutated_mod.get_global_var('func_5502')
var_9940 = relay.var("var_9940", dtype = "uint8", shape = (390,))#candidate|9940|(390,)|var|uint8
call_9939 = func_5500_call(relay.reshape(var_9940.astype('uint8'), [15, 13, 2]))
call_9941 = func_5500_call(relay.reshape(var_9940.astype('uint8'), [15, 13, 2]))
uop_9963 = relay.log10(var_9940.astype('float32')) # shape=(390,)
output = relay.Tuple([call_9933,call_9939,uop_9963,])
output2 = relay.Tuple([call_9934,call_9941,uop_9963,])
F = relay.Function([var_9940,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9940,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

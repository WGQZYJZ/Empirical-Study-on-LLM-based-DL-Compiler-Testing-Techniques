import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_28 = relay.var("var_28", dtype = "uint64", shape = (4, 13, 16))#candidate|28|(4, 13, 16)|var|uint64
const_29 = relay.const([[[-7,-6,-1,-6,2,-8,4,-9,-8,10,-2,-8,3,10,6,5],[9,6,-6,2,10,10,-6,2,3,-1,-10,4,10,-5,-3,2],[2,2,10,5,-4,4,4,-3,8,4,5,-1,-3,3,-5,-6],[3,-4,-1,-3,-5,-6,-2,6,5,8,-7,6,5,5,-4,-8],[10,2,-2,8,-3,-4,7,7,-9,3,3,-5,-7,-10,-1,8],[10,-5,-6,-2,1,-3,6,-10,4,3,3,10,10,2,8,-5],[1,-3,-2,5,-10,2,8,-3,5,4,3,7,3,5,1,-8],[-9,-9,-5,-4,1,-1,8,-5,-7,1,2,5,9,-5,-9,3],[5,9,-4,-2,-1,-8,-6,-1,10,5,2,-7,2,-3,4,-1],[6,8,-6,-9,-3,5,-7,-4,-2,1,1,-7,8,5,6,3],[-7,3,1,-10,8,6,4,2,-1,2,-9,-4,-8,2,-7,7],[-6,-7,4,-3,-3,-8,1,4,3,1,-4,-2,7,8,9,-8],[-8,1,-4,-4,5,7,4,-5,7,10,4,6,5,5,-1,-8]],[[10,1,-6,-3,9,-7,1,-9,-10,2,10,-5,-3,-9,-5,-3],[8,1,1,7,5,-2,-7,-5,-9,-3,6,-3,10,5,-3,-2],[-2,-7,10,4,7,2,-4,-3,5,-1,-7,1,-8,-5,-5,-2],[-4,2,10,-7,-2,2,-5,1,2,2,6,-9,10,-5,-2,3],[-5,-8,-3,-5,4,-2,-4,-1,-3,-8,-8,5,-10,4,7,-8],[4,-9,-2,1,2,9,6,-4,4,-10,-8,2,-5,-2,4,7],[7,-7,8,7,3,8,5,-10,4,3,5,10,2,2,-3,7],[5,-8,-2,-5,-2,-4,-4,8,-4,-8,8,9,-3,7,-2,-5],[-6,1,10,5,-10,-1,-5,10,1,8,-9,9,-10,7,3,-10],[-5,-9,1,-8,-4,5,1,-9,-7,-4,-6,8,3,9,-7,5],[3,10,-7,-5,9,-10,-9,-5,-8,3,-3,-9,10,10,-8,-1],[8,-5,10,-8,3,-1,9,-9,6,10,-4,-8,8,2,-5,-6],[-6,10,2,5,7,8,-4,4,8,1,-2,6,7,5,5,-6]],[[4,-5,5,-2,7,-10,-4,1,8,-3,1,10,1,1,-7,-7],[3,7,-3,10,-8,3,7,-3,-5,7,10,-5,3,7,3,10],[5,1,8,-7,6,-8,3,-9,-2,8,6,-2,-9,10,2,-5],[-1,4,2,4,1,-2,-5,-7,-9,-8,-8,7,-9,9,-9,8],[-5,-7,-4,-4,5,3,8,9,-5,-4,9,-2,8,-10,10,-7],[10,1,-9,3,2,5,6,-9,3,5,5,-10,1,-2,-10,5],[6,-6,-4,8,4,5,-9,4,8,-4,9,9,-6,2,-1,3],[-6,2,-9,3,6,-5,4,7,-1,6,6,1,-6,5,-3,-7],[-9,-6,-9,-4,-8,-10,-10,-6,-9,-2,-8,5,9,3,10,8],[9,2,4,-5,-4,-7,-1,9,5,-4,-6,7,1,-7,10,-4],[9,8,-1,8,-7,2,-7,-9,4,-5,4,-6,-4,10,8,4],[10,-3,-3,6,5,10,-1,-4,4,-5,-1,-5,-4,10,9,-1],[4,-9,6,-8,5,5,-9,-9,8,1,-5,-6,-1,2,10,10]],[[9,10,-5,8,-8,-4,-2,10,-8,-3,9,-3,8,2,-9,10],[2,-5,10,-6,6,7,-4,-10,-10,-5,-4,1,4,-8,6,4],[1,6,3,-2,-4,7,-8,2,9,6,8,5,-1,-8,4,8],[1,7,-7,-1,9,-1,-6,-4,-4,10,8,-5,-2,-7,-5,2],[-10,-8,-1,8,-8,5,-5,8,-9,-1,-6,7,1,4,10,10],[8,-7,-6,7,5,7,-2,1,-5,-8,1,9,-1,6,1,-1],[3,-6,-2,-4,-6,1,7,-9,4,-3,3,7,-7,5,-10,-6],[4,-5,-6,5,1,8,-8,2,4,-7,9,3,10,5,4,-4],[-5,9,9,3,-2,9,8,1,9,1,5,-8,-1,4,4,8],[-8,-1,10,6,5,-1,-7,6,-10,5,-2,10,-6,3,-4,-1],[7,-3,6,-9,5,3,-10,-1,8,6,1,-5,2,-6,8,-1],[9,-4,-3,5,2,-3,9,-7,-2,-6,8,-9,-9,7,4,4],[3,-8,10,-8,1,7,7,-6,-6,3,6,-6,-1,-2,-4,10]]], dtype = "uint64")#candidate|29|(4, 13, 16)|const|uint64
bop_30 = relay.right_shift(var_28.astype('uint64'), relay.reshape(const_29.astype('uint64'), relay.shape_of(var_28))) # shape=(4, 13, 16)
output = relay.Tuple([bop_30,])
output2 = relay.Tuple([bop_30,])
func_33 = relay.Function([var_28,], output)
mod['func_33'] = func_33
mod = relay.transform.InferType()(mod)
var_34 = relay.var("var_34", dtype = "uint64", shape = (4, 13, 16))#candidate|34|(4, 13, 16)|var|uint64
output = func_33(var_34)
func_35 = relay.Function([var_34], output)
mutated_mod['func_35'] = func_35
mutated_mod = relay.transform.InferType()(mutated_mod)
const_178 = relay.const([[[False,True,False,True,True,True,True,False,False,True],[True,False,True,True,False,True,False,False,False,True],[False,True,True,True,True,False,False,False,False,True],[False,False,False,True,False,False,False,True,False,False],[False,True,False,False,True,False,True,True,False,True],[False,False,False,True,True,True,True,False,True,True],[True,True,True,False,False,True,False,False,False,False],[False,True,False,False,True,True,False,False,False,False],[True,False,False,True,True,False,False,False,False,True],[True,True,False,False,True,True,False,True,True,False],[False,False,True,False,False,False,True,True,False,True],[True,True,True,False,False,False,False,False,False,False],[True,True,True,False,True,True,True,True,False,False]],[[False,False,False,True,False,True,False,True,False,False],[False,True,False,True,True,False,True,True,True,True],[True,False,False,True,False,False,False,True,True,False],[False,True,True,False,True,True,True,True,True,True],[True,True,True,True,True,False,False,False,False,True],[False,True,True,False,False,False,False,False,True,False],[True,True,True,False,False,False,True,True,True,False],[True,True,False,False,False,True,False,False,True,False],[True,True,False,True,False,False,True,False,True,False],[False,False,False,False,False,False,False,True,True,False],[False,False,True,False,False,True,True,True,False,False],[True,True,False,True,False,False,False,True,False,True],[False,True,True,False,True,True,False,True,False,True]],[[True,False,False,False,False,False,False,True,True,False],[False,True,True,False,False,False,False,False,True,False],[True,True,True,False,True,False,True,True,False,False],[True,True,False,True,False,True,True,False,False,True],[False,False,False,True,False,False,True,False,True,True],[True,False,False,False,True,False,True,False,True,True],[False,False,False,True,True,False,False,True,False,False],[False,False,True,False,False,True,False,True,False,True],[False,True,False,True,True,True,True,False,True,False],[True,False,True,False,True,False,False,True,True,True],[True,True,True,False,True,True,False,False,True,False],[True,True,True,True,False,False,False,True,True,False],[False,False,False,True,False,True,True,True,False,True]],[[False,True,False,True,False,False,True,False,False,False],[False,True,True,True,True,False,True,True,True,False],[True,True,True,True,False,True,False,False,False,False],[True,False,False,True,False,False,True,True,False,True],[True,False,True,False,True,False,False,False,True,False],[True,True,True,False,False,False,True,True,False,False],[True,True,False,True,False,False,True,False,True,True],[True,False,True,False,True,False,False,True,True,False],[True,False,True,True,False,True,True,True,False,True],[True,False,False,False,True,False,False,True,False,False],[False,False,False,False,False,True,False,True,True,True],[True,False,True,False,True,True,True,False,True,False],[True,False,False,True,False,True,False,True,False,False]]], dtype = "bool")#candidate|178|(4, 13, 10)|const|bool
var_179 = relay.var("var_179", dtype = "bool", shape = (4, 13, 10))#candidate|179|(4, 13, 10)|var|bool
bop_180 = relay.logical_and(const_178.astype('bool'), relay.reshape(var_179.astype('bool'), relay.shape_of(const_178))) # shape=(4, 13, 10)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_190 = relay.var("var_190", dtype = "uint64", shape = (1, 832))#candidate|190|(1, 832)|var|uint64
call_189 = relay.TupleGetItem(func_33_call(relay.reshape(var_190.astype('uint64'), [4, 13, 16])), 0)
call_191 = relay.TupleGetItem(func_35_call(relay.reshape(var_190.astype('uint64'), [4, 13, 16])), 0)
uop_212 = relay.rsqrt(var_190.astype('float64')) # shape=(1, 832)
output = relay.Tuple([bop_180,call_189,uop_212,])
output2 = relay.Tuple([bop_180,call_191,uop_212,])
func_215 = relay.Function([var_179,var_190,], output)
mod['func_215'] = func_215
mod = relay.transform.InferType()(mod)
var_216 = relay.var("var_216", dtype = "bool", shape = (4, 13, 10))#candidate|216|(4, 13, 10)|var|bool
var_217 = relay.var("var_217", dtype = "uint64", shape = (1, 832))#candidate|217|(1, 832)|var|uint64
output = func_215(var_216,var_217,)
func_218 = relay.Function([var_216,var_217,], output)
mutated_mod['func_218'] = func_218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_365 = relay.var("var_365", dtype = "uint64", shape = (8, 9, 14))#candidate|365|(8, 9, 14)|var|uint64
var_366 = relay.var("var_366", dtype = "uint64", shape = (8, 9, 14))#candidate|366|(8, 9, 14)|var|uint64
bop_367 = relay.subtract(var_365.astype('uint64'), relay.reshape(var_366.astype('uint64'), relay.shape_of(var_365))) # shape=(8, 9, 14)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
var_376 = relay.var("var_376", dtype = "bool", shape = (520,))#candidate|376|(520,)|var|bool
var_377 = relay.var("var_377", dtype = "uint64", shape = (832,))#candidate|377|(832,)|var|uint64
call_375 = relay.TupleGetItem(func_215_call(relay.reshape(var_376.astype('bool'), [4, 13, 10]), relay.reshape(var_377.astype('uint64'), [1, 832]), ), 0)
call_378 = relay.TupleGetItem(func_218_call(relay.reshape(var_376.astype('bool'), [4, 13, 10]), relay.reshape(var_377.astype('uint64'), [1, 832]), ), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_379 = relay.TupleGetItem(func_33_call(relay.reshape(var_377.astype('uint64'), [4, 13, 16])), 0)
call_380 = relay.TupleGetItem(func_35_call(relay.reshape(var_377.astype('uint64'), [4, 13, 16])), 0)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
call_386 = relay.TupleGetItem(func_215_call(relay.reshape(call_375.astype('bool'), [4, 13, 10]), relay.reshape(call_379.astype('uint64'), [1, 832]), ), 1)
call_387 = relay.TupleGetItem(func_218_call(relay.reshape(call_375.astype('bool'), [4, 13, 10]), relay.reshape(call_379.astype('uint64'), [1, 832]), ), 1)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
call_397 = relay.TupleGetItem(func_215_call(relay.reshape(call_375.astype('bool'), [4, 13, 10]), relay.reshape(call_379.astype('uint64'), [1, 832]), ), 0)
call_398 = relay.TupleGetItem(func_218_call(relay.reshape(call_375.astype('bool'), [4, 13, 10]), relay.reshape(call_379.astype('uint64'), [1, 832]), ), 0)
output = relay.Tuple([bop_367,call_375,var_376,var_377,call_379,call_386,call_397,])
output2 = relay.Tuple([bop_367,call_378,var_376,var_377,call_380,call_387,call_398,])
func_402 = relay.Function([var_365,var_366,var_376,var_377,], output)
mod['func_402'] = func_402
mod = relay.transform.InferType()(mod)
var_403 = relay.var("var_403", dtype = "uint64", shape = (8, 9, 14))#candidate|403|(8, 9, 14)|var|uint64
var_404 = relay.var("var_404", dtype = "uint64", shape = (8, 9, 14))#candidate|404|(8, 9, 14)|var|uint64
var_405 = relay.var("var_405", dtype = "bool", shape = (520,))#candidate|405|(520,)|var|bool
var_406 = relay.var("var_406", dtype = "uint64", shape = (832,))#candidate|406|(832,)|var|uint64
output = func_402(var_403,var_404,var_405,var_406,)
func_407 = relay.Function([var_403,var_404,var_405,var_406,], output)
mutated_mod['func_407'] = func_407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_978 = relay.var("var_978", dtype = "float32", shape = (4, 11, 15))#candidate|978|(4, 11, 15)|var|float32
var_979 = relay.var("var_979", dtype = "float32", shape = (4, 11, 15))#candidate|979|(4, 11, 15)|var|float32
bop_980 = relay.divide(var_978.astype('float32'), relay.reshape(var_979.astype('float32'), relay.shape_of(var_978))) # shape=(4, 11, 15)
bop_989 = relay.mod(var_978.astype('float64'), relay.reshape(var_979.astype('float64'), relay.shape_of(var_978))) # shape=(4, 11, 15)
func_402_call = mod.get_global_var('func_402')
func_407_call = mutated_mod.get_global_var('func_407')
var_1000 = relay.var("var_1000", dtype = "uint64", shape = (1008,))#candidate|1000|(1008,)|var|uint64
var_1001 = relay.var("var_1001", dtype = "bool", shape = (520,))#candidate|1001|(520,)|var|bool
var_1002 = relay.var("var_1002", dtype = "uint64", shape = (832,))#candidate|1002|(832,)|var|uint64
call_999 = relay.TupleGetItem(func_402_call(relay.reshape(var_1000.astype('uint64'), [8, 9, 14]), relay.reshape(var_1000.astype('uint64'), [8, 9, 14]), relay.reshape(var_1001.astype('bool'), [520,]), relay.reshape(var_1002.astype('uint64'), [832,]), ), 1)
call_1003 = relay.TupleGetItem(func_407_call(relay.reshape(var_1000.astype('uint64'), [8, 9, 14]), relay.reshape(var_1000.astype('uint64'), [8, 9, 14]), relay.reshape(var_1001.astype('bool'), [520,]), relay.reshape(var_1002.astype('uint64'), [832,]), ), 1)
bop_1005 = relay.bitwise_xor(var_978.astype('int64'), relay.reshape(bop_980.astype('int64'), relay.shape_of(var_978))) # shape=(4, 11, 15)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
call_1010 = relay.TupleGetItem(func_215_call(relay.reshape(call_999.astype('bool'), [4, 13, 10]), relay.reshape(var_1002.astype('uint64'), [1, 832]), ), 2)
call_1011 = relay.TupleGetItem(func_218_call(relay.reshape(call_999.astype('bool'), [4, 13, 10]), relay.reshape(var_1002.astype('uint64'), [1, 832]), ), 2)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_1015 = relay.TupleGetItem(func_33_call(relay.reshape(call_1010.astype('uint64'), [4, 13, 16])), 0)
call_1016 = relay.TupleGetItem(func_35_call(relay.reshape(call_1010.astype('uint64'), [4, 13, 16])), 0)
output = relay.Tuple([bop_989,call_999,var_1000,var_1001,var_1002,bop_1005,call_1010,call_1015,])
output2 = relay.Tuple([bop_989,call_1003,var_1000,var_1001,var_1002,bop_1005,call_1011,call_1016,])
func_1020 = relay.Function([var_978,var_979,var_1000,var_1001,var_1002,], output)
mod['func_1020'] = func_1020
mod = relay.transform.InferType()(mod)
mutated_mod['func_1020'] = func_1020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1020_call = mutated_mod.get_global_var('func_1020')
var_1022 = relay.var("var_1022", dtype = "float32", shape = (4, 11, 15))#candidate|1022|(4, 11, 15)|var|float32
var_1023 = relay.var("var_1023", dtype = "float32", shape = (4, 11, 15))#candidate|1023|(4, 11, 15)|var|float32
var_1024 = relay.var("var_1024", dtype = "uint64", shape = (1008,))#candidate|1024|(1008,)|var|uint64
var_1025 = relay.var("var_1025", dtype = "bool", shape = (520,))#candidate|1025|(520,)|var|bool
var_1026 = relay.var("var_1026", dtype = "uint64", shape = (832,))#candidate|1026|(832,)|var|uint64
call_1021 = func_1020_call(var_1022,var_1023,var_1024,var_1025,var_1026,)
output = call_1021
func_1027 = relay.Function([var_1022,var_1023,var_1024,var_1025,var_1026,], output)
mutated_mod['func_1027'] = func_1027
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2436 = relay.const([[[5.036082,9.681654,1.523095,-7.097057,2.445594,-0.158529,-5.109690,-4.882337,6.108234,3.663215],[2.053955,-5.787355,3.303414,6.888407,0.386942,6.908534,5.074122,0.100329,-0.080462,7.650143],[-6.008607,8.642331,3.192374,2.815140,-3.631995,2.877910,-1.172482,2.824225,4.770700,-5.039220],[3.654040,-2.963888,-7.731451,7.734074,9.472187,4.079747,-1.690548,-4.384118,-3.078819,-0.920094],[-7.854428,-1.028961,5.898903,-3.824959,-1.277798,8.974618,-8.335720,-9.705794,0.392251,-4.698025],[3.735344,-6.434268,-7.526886,5.554510,-4.215401,7.324237,-4.755680,-4.586832,0.844444,-9.837950],[7.015745,8.199095,0.888390,-1.823059,7.046022,-1.676502,-7.381642,-5.149522,2.628589,9.465606],[0.938932,8.283960,-8.544746,9.569898,-5.013447,7.235271,0.128051,-5.236361,0.748171,-7.049576],[2.231311,0.862381,1.991209,-4.533379,8.187772,0.045720,-7.657873,-3.466223,-5.490189,-9.322738],[-3.153007,-4.668829,-0.285044,-9.239984,4.829812,-3.694745,1.343525,9.874093,7.696718,-9.318926],[8.095694,3.241308,-2.224367,3.874083,7.459078,8.993294,7.814516,8.108901,-8.485126,7.111549]],[[-8.007858,-9.738488,9.860549,4.315380,8.287449,-1.177757,9.747701,-3.550213,0.067566,-4.481170],[1.420348,-6.260239,7.304154,-8.699570,-4.517314,6.312037,7.853117,-8.877491,7.335921,2.524127],[4.118683,-5.156686,6.856434,-5.170781,-3.290036,2.983665,4.441254,-5.923376,-5.429113,-7.392196],[6.110453,4.979782,-5.767533,2.920693,6.105252,-8.684190,-6.316684,1.585042,-6.985592,1.120290],[-1.668179,-9.552196,-6.528611,-5.522769,-8.735603,7.369310,4.125359,-5.373738,5.622754,6.553780],[8.507290,8.905967,-2.022778,1.664415,0.711116,9.197652,-1.052154,1.181699,5.358479,8.142361],[-4.298757,2.744312,5.651348,9.267920,3.960182,-4.450507,8.306727,6.573054,-2.056372,-9.269712],[0.017745,-9.320366,7.332263,-7.937915,8.972253,-4.640740,2.900846,7.424993,-8.256160,3.327178],[-0.403577,-0.435351,5.429082,3.426059,-5.016694,4.257599,-5.003086,6.497492,5.991456,-6.881392],[6.895490,9.581425,-6.581589,-1.553011,2.171541,-2.741243,9.658844,0.604728,-1.663671,-9.730329],[-4.466313,-5.401131,0.990831,5.700611,-7.939474,-1.984692,-9.209797,-2.756627,-5.738899,6.945244]],[[-2.395373,2.807662,-6.310143,-3.523871,-0.814505,-7.589627,5.519076,4.401885,-1.667514,8.203992],[-9.842093,0.247412,0.717035,9.140378,-7.604687,-1.441607,-4.636816,-3.202672,-7.236282,-7.156459],[1.033898,-5.813729,7.337546,-2.225546,-4.017104,-1.493546,0.200374,6.283049,9.696558,-6.387854],[-2.746268,-7.549741,0.601694,8.065473,-5.848885,-0.134971,-1.379885,-7.314733,-0.476249,-1.141905],[-9.484740,6.365545,-5.022688,7.694523,2.282204,3.008857,-1.535084,-6.150507,-6.259082,7.850522],[5.606049,-8.959255,-5.700596,-2.588481,7.223547,2.729004,9.316062,1.794599,-0.899639,-2.978378],[2.525104,0.968126,1.794532,6.789701,3.256008,-0.179842,-2.686828,3.661724,1.945487,0.397708],[-0.332040,2.096532,9.960948,7.721996,6.982456,8.594977,5.160786,-8.762415,-9.746791,-0.394757],[-8.224803,3.634547,7.858374,-4.248334,-6.930022,-0.543548,-2.755567,-7.236610,-0.256406,4.508392],[1.344768,-8.676809,2.905128,-7.477489,-6.430909,-3.310068,7.354953,0.604541,-4.411265,-3.715979],[9.233918,4.139341,-4.431817,8.374197,6.498250,-3.037833,5.704211,6.186893,4.127467,2.827367]],[[-3.071372,-8.473667,4.551398,-8.869345,5.769431,-0.451497,2.834800,9.973568,9.337682,2.474183],[0.720616,-6.405296,-4.523375,-4.200941,3.099924,-6.329874,2.060150,4.982401,-7.650437,-3.131358],[-8.145066,0.553306,-5.708943,7.650339,0.887346,-6.800745,-1.836180,-3.271354,-9.879660,-5.258580],[-9.576814,0.150990,-1.621370,-9.426581,-5.740325,-1.592245,1.344486,8.934616,-2.568602,7.269255],[8.565446,9.381593,-7.940343,-1.495484,-2.994836,-9.799177,1.735764,-5.756503,6.111348,3.642055],[3.055865,-3.355174,1.977783,-0.417781,4.476176,6.339426,0.130541,-8.018679,-0.175793,-4.023050],[-9.473886,3.038988,-5.626370,8.188028,-4.622911,2.933919,-2.848183,-4.692480,4.875333,-9.330028],[4.285789,4.178175,-1.309843,-6.296688,3.068910,0.977280,-4.007161,7.500588,-4.873570,-2.561833],[6.731049,-7.645938,2.516780,8.057305,1.929777,2.706492,-1.634693,2.279928,3.020444,5.874262],[-0.527264,-3.094198,-1.404576,8.679957,-0.081293,9.285025,9.985326,7.560339,6.308226,-7.148301],[-1.202518,4.322239,-5.885762,6.194167,-6.675392,-4.719688,4.901693,0.208248,2.354826,-9.496860]],[[-7.587427,8.685082,5.941272,2.093572,-8.836789,5.501311,9.438753,7.964244,0.041184,1.506715],[7.042656,-1.073883,-1.281045,-7.113664,-9.599596,3.279402,5.515448,2.464377,-7.436367,7.606799],[-7.587983,7.575447,8.469877,2.571408,-9.003856,-5.105127,6.952603,-0.278635,5.176580,2.539476],[-3.345612,-9.999307,2.255794,-5.257164,-1.597392,-0.039506,5.976087,8.380843,-2.284987,8.748171],[6.603562,4.531797,3.386032,4.243146,-7.562210,-5.063371,2.249079,-2.676063,-9.231030,-6.511031],[-3.771524,1.995852,1.057935,-0.108047,-7.012565,-4.636299,-5.310085,-9.430323,3.037174,-7.363235],[-2.773894,-3.516707,7.348209,-7.567860,-1.458821,6.193395,-0.068648,-6.495056,4.260134,9.539191],[-6.826480,2.604308,1.399226,-8.041875,0.755075,4.611347,-6.650181,-3.920435,-9.004629,0.706003],[9.487756,-2.426998,-9.971083,0.383979,0.049900,8.300535,-5.757597,-6.751520,-2.358494,0.502348],[6.598819,9.927157,-0.199236,-5.627614,-4.271719,8.057699,-9.397008,0.899418,-3.784831,-6.972527],[-3.235134,-1.100733,-6.018981,-2.884093,5.550819,1.464218,-4.503234,-4.471046,-2.694702,-2.549276]],[[8.257898,-9.793653,2.219991,-6.025453,9.315678,2.411075,-3.529536,-5.543717,1.168503,2.933276],[-6.441890,4.801327,6.454208,-9.416406,-8.683791,-4.054593,-1.020935,4.162334,7.632332,-5.610137],[-7.977391,-2.719574,1.263894,-2.772656,2.140535,0.992059,-2.599971,4.961900,2.606116,8.583159],[-0.098670,4.505943,-9.140749,-6.768929,-3.198139,-8.952397,-2.254020,3.053783,-8.193428,-1.255437],[9.182067,1.422441,2.144175,3.466454,-9.917368,-2.556844,-8.361065,-9.900508,9.565742,-3.786998],[5.633190,-1.022459,1.692733,2.934425,4.784378,-0.157890,9.711725,-7.378892,-8.137326,0.793370],[-6.438733,0.440314,0.786440,-1.488941,-1.208793,-9.084235,6.838069,6.867330,-4.427920,-0.988379],[4.834884,-2.198941,4.837999,3.925231,-1.620583,-0.892717,-4.163327,-5.897524,6.435467,-7.638538],[1.688156,0.508168,-9.801697,-8.715446,4.696143,-1.706032,7.265497,-7.423266,-4.291581,-7.230699],[-0.436554,7.957504,-9.217917,3.876486,-7.593165,6.781642,-5.233493,6.999102,5.999469,-0.120138],[-9.619567,6.933101,4.635582,-1.540139,4.114121,3.424636,-3.151763,0.983408,-4.320081,-5.930857]],[[-8.679484,-4.847088,8.949434,3.492570,1.735126,8.146415,5.793087,0.086083,-7.637338,-5.501613],[-0.729422,-6.978831,-0.560314,0.585115,-2.003687,-0.071788,5.202846,4.041072,-9.402266,-3.341714],[-9.021081,6.926390,-0.541046,8.120100,4.782678,4.630595,9.811797,-8.996714,1.818931,-8.690590],[4.266353,-7.493766,6.322003,9.101866,2.546043,-6.365109,-7.102853,0.024379,-8.507964,5.511150],[-4.123416,-3.686483,-4.140473,3.537631,-9.345600,7.190847,-6.296695,2.785382,-7.309702,4.726358],[-8.369570,0.513589,-5.563607,4.831622,4.368690,-5.955332,1.159902,7.362234,9.687961,2.444013],[-3.272678,7.806255,5.712488,4.516666,-5.791018,2.581290,-2.240839,8.089798,5.916687,0.850344],[2.872553,-2.019380,-0.291054,2.992817,-6.787399,-5.534610,1.318225,-5.965442,-4.047465,-8.459010],[-3.295283,9.948415,3.975529,0.592462,0.683067,4.465676,-7.326525,-3.317563,-2.029552,-3.593054],[-9.836706,1.144877,8.410057,-2.153111,9.101928,-6.180895,-9.495434,-8.530093,-6.095293,-4.564252],[0.915211,-1.212883,3.706753,-0.635890,-3.686785,1.895037,0.859298,5.084201,-4.134240,-4.665256]],[[-7.196376,4.739359,-8.858346,-5.813129,-1.433141,3.859289,8.001609,3.981541,-8.588263,-9.444525],[6.101132,6.357960,-2.620262,6.576304,8.280993,3.313947,-2.046048,-7.923106,-6.113095,4.969514],[-3.377813,-4.167388,-3.329165,-6.580100,-0.390586,-9.442672,-7.964560,-0.498439,-5.983190,4.426942],[-1.562276,1.863341,-2.673765,8.760109,8.595632,4.246839,7.831802,5.240213,7.205759,-7.410859],[-7.658822,9.087999,2.782186,3.535838,1.226752,5.129924,6.684468,-1.461574,-8.455430,2.086509],[-2.916572,6.561465,-9.778026,-9.034419,8.649957,3.252310,1.921722,-7.678336,8.545700,-4.123570],[4.728387,-6.708519,-4.108278,-8.017254,-0.706290,-2.973927,-2.195173,9.623442,-4.710035,-1.928116],[-3.043009,9.733230,9.407325,-5.503251,-9.478443,2.893690,-0.612871,-1.025156,3.052670,-3.923675],[-6.984695,-4.662208,-7.694783,-8.372507,2.216693,-3.357938,-3.752566,5.902191,-5.471850,-3.939879],[-8.033131,-8.314709,9.220616,-8.183735,3.800799,2.497588,0.798444,-2.411016,9.730425,0.760459],[1.821683,-3.623732,6.913435,6.125128,-9.355603,-0.701295,-5.275380,0.852964,-7.306863,-6.716704]],[[-8.311208,3.551367,4.534188,-6.821466,-0.617940,-3.757603,4.217272,-4.646181,-4.080395,-5.227178],[7.136803,-3.407191,6.642681,-8.432807,0.269719,6.329999,-1.636463,0.380583,-8.649107,-4.935928],[0.272439,4.956376,8.232673,-4.380805,1.473916,-7.855714,3.864305,-1.221116,9.982302,-5.961970],[5.548435,-0.898818,0.451515,-5.674840,1.040856,-3.587714,1.728107,-6.011551,9.453607,-9.149686],[5.773408,-6.322197,5.681360,-7.350879,8.447485,2.702505,-5.997118,-7.725143,-4.430953,-7.797974],[4.516015,-5.404948,-6.467214,5.319392,4.805907,-5.982348,8.858143,-8.642081,-7.547322,2.507883],[1.395229,-9.018526,-1.000182,7.414880,3.003878,7.240391,9.558713,3.345161,-9.879427,7.546733],[6.946270,-9.211418,-3.289444,8.645640,5.645627,-0.594269,-2.744260,8.691649,2.517513,6.564805],[-6.830866,2.218447,-3.427920,3.006944,-5.132246,2.375410,-3.205771,-1.544224,-0.483609,2.559349],[-7.506869,-2.460341,8.315127,5.949671,4.836828,1.370823,4.128943,9.615348,-9.135234,-2.035759],[3.166869,-0.441278,-1.999884,5.095468,-4.304893,-7.848712,-5.669804,8.206642,-5.494194,0.703013]],[[8.027550,9.455317,5.655727,7.862875,7.138433,-9.529942,3.366203,4.780912,1.513963,-2.367175],[1.209943,-8.642729,2.120113,9.670590,7.080540,2.392288,-9.436277,6.508481,6.969407,7.912419],[5.245484,-6.846894,-4.833831,-5.851339,-4.496602,1.421737,4.701696,2.977639,-8.190796,0.001557],[0.436877,-4.947897,3.873573,-1.003573,-3.014387,-7.623853,3.453492,-6.329197,-3.617216,-4.931608],[4.124281,-2.585075,9.902924,-0.360678,0.552314,7.423163,-5.397536,-0.620735,-6.474079,9.337634],[-9.960985,-0.594370,-8.047777,8.898139,3.927210,4.771478,0.340156,2.985750,5.388935,-2.448369],[3.500449,-0.283368,-1.837543,-8.473394,6.822584,7.124305,2.618943,1.650495,0.428950,-1.182393],[-9.057924,3.232995,9.647519,3.120551,-8.876258,4.374701,7.451126,-4.437420,-2.138995,-2.495006],[-3.126218,9.965751,3.772105,8.423725,5.743294,3.051354,0.582836,-2.587070,-0.522124,9.371911],[1.389419,-2.495111,-6.963710,-8.282197,3.457620,-2.521079,0.888507,5.369249,1.398512,9.025480],[-3.478189,-8.985941,5.352356,0.355070,-4.474485,9.747094,8.337799,5.178420,-3.637179,5.367078]],[[-3.012386,6.267135,6.345962,0.424132,8.513286,-2.343453,2.583482,9.066493,8.861815,-0.076915],[2.162450,3.506250,-8.635057,6.438569,7.596836,-7.103853,-0.369743,1.813228,1.248965,-2.841668],[4.881782,-4.950579,-0.215309,2.158108,-0.431232,2.653277,3.910837,6.367792,2.775435,-1.423218],[7.150263,4.683316,-6.244395,1.535239,3.587671,-8.675580,-6.109453,2.835327,-1.761411,-8.203990],[9.474087,0.923857,1.663826,-7.802657,9.606915,9.577920,6.669144,-9.475216,3.749024,1.053082],[-6.039825,3.904740,0.148038,7.197374,6.974374,-8.928795,7.609159,-1.307577,-1.479348,-0.551781],[8.041364,-1.162702,-8.374664,8.473027,0.712042,-2.777979,-0.593989,-0.135575,-4.047495,-4.068272],[-2.256691,-3.404349,-5.604794,-1.495886,6.560214,-9.253080,-0.388913,-3.731455,2.681590,-6.240960],[-0.956865,-8.798017,-1.924402,-7.921338,-1.462301,-6.074065,-4.011081,1.932850,8.377430,4.574536],[-5.325473,-7.303420,8.352773,7.768012,-7.136992,5.165613,-4.402927,3.371311,-6.577474,6.089251],[-3.810563,3.678371,0.481055,6.269068,-7.065296,2.718758,-5.224266,2.756617,-5.987217,0.136672]],[[-4.071935,-2.755267,-7.146681,9.044098,3.285517,-4.328802,0.744465,-9.480655,-8.826514,3.145431],[6.479872,8.885504,-5.308833,4.769633,2.828553,7.426737,7.977906,-8.905015,-7.103133,-5.337263],[-2.779388,1.351243,9.822538,-2.152528,-9.165635,-9.463286,5.788576,2.247176,2.628550,-1.782433],[2.776851,-0.307388,5.840428,0.196139,9.928480,-4.287965,-9.688258,2.995018,8.882771,8.686426],[8.329593,2.080500,2.471179,0.420600,1.822618,4.137826,7.778975,2.233751,-4.433507,-2.247914],[6.669568,6.200375,8.204648,8.460499,4.464864,-9.500925,-9.701272,0.462860,-2.947158,-6.202434],[-5.780577,4.518300,-1.941917,2.861674,3.725978,-6.700035,-8.683468,-0.957254,-6.988753,-5.008898],[-5.197150,-8.001795,4.973514,-2.651354,-1.856477,9.403533,-8.238914,8.901981,-4.071511,7.786922],[-2.116014,-7.930556,2.421190,-2.414406,-5.536797,8.613721,8.450609,6.932631,6.845952,5.845743],[2.610788,6.683168,5.763899,-1.360358,1.660913,4.250221,3.912832,-4.732014,-7.018591,-3.572454],[6.826574,9.038613,3.358049,7.119295,-1.513355,2.870198,-4.853774,1.891390,3.411373,3.222167]],[[7.116503,-3.337269,-4.302641,1.070705,-5.555831,4.343042,-4.978848,-0.416244,1.426351,-4.096817],[-6.676630,4.162738,-4.694043,-6.882675,-1.010862,-7.757413,-1.425849,-4.445812,6.031815,5.590875],[4.876864,-7.747699,5.596122,-3.330751,-8.271378,-2.678069,-0.654419,8.020338,-7.130232,-9.178412],[8.125565,-5.763466,6.899997,-3.110632,3.237744,-4.315324,-7.030684,-9.224059,-0.207538,2.655619],[8.879491,1.895375,9.503585,0.200224,5.031747,5.075278,-2.581353,-1.675820,-2.596256,3.631463],[3.851422,0.367083,-9.808966,0.877622,-7.446364,1.153672,5.820034,2.087386,-4.467505,-8.184069],[-7.570379,-1.373099,-4.819492,-3.642197,-8.386044,-7.479683,-5.799532,4.300392,2.240255,2.217382],[0.114373,5.482330,2.691892,-9.234714,4.483525,2.830782,-7.508346,9.789562,1.245569,6.018710],[9.988085,8.884163,4.963266,-4.963953,4.461477,-1.204002,-4.053038,1.144298,-9.943172,0.302193],[8.921023,9.747556,2.864520,-1.148366,6.716678,-0.786091,6.104062,-9.902569,-3.272052,7.738853],[-4.250565,7.684382,4.474891,-3.948038,-1.468850,-1.567711,9.117970,5.029419,-5.478420,3.017971]],[[6.896900,-4.871104,2.943833,-3.887192,9.883577,1.532869,3.158581,-0.936424,-9.418123,0.689168],[3.381694,-7.331635,3.008881,6.594973,9.043632,0.734820,-8.786274,0.524712,-2.325778,7.162677],[5.110368,4.264178,9.771934,6.216687,8.409111,-6.623064,-2.977754,3.042738,-1.925316,0.036587],[0.715120,9.629071,-7.187098,1.748566,-0.664639,-2.536710,8.108338,-6.618500,-3.596423,-1.257250],[-7.295382,-4.282224,3.916962,9.754575,-9.451059,5.573998,2.338357,1.233001,7.957908,4.576707],[4.499052,5.356775,6.277213,-6.409440,-9.851052,5.955189,9.862074,4.597547,7.192267,8.118368],[-7.488481,5.238665,2.941086,5.431345,3.333936,-3.478379,2.410203,-7.124451,8.204898,-3.108477],[9.575195,8.234200,0.200327,-2.928110,7.511382,-3.494900,-2.362173,8.580314,-0.206848,6.116203],[2.293919,-9.170980,8.884133,-2.394919,1.006350,-6.374825,-8.379953,-4.012542,7.985707,2.483992],[-2.565051,-7.061275,1.205433,-3.424829,-0.564838,-9.074796,4.928714,-2.604922,0.813243,5.780056],[5.880688,5.776626,8.621168,1.682995,-1.167891,1.894965,-5.429040,-1.372081,-8.553372,9.261281]]], dtype = "float64")#candidate|2436|(14, 11, 10)|const|float64
var_2437 = relay.var("var_2437", dtype = "float64", shape = (14, 11, 10))#candidate|2437|(14, 11, 10)|var|float64
bop_2438 = relay.floor_divide(const_2436.astype('float64'), relay.reshape(var_2437.astype('float64'), relay.shape_of(const_2436))) # shape=(14, 11, 10)
output = relay.Tuple([bop_2438,])
output2 = relay.Tuple([bop_2438,])
func_2441 = relay.Function([var_2437,], output)
mod['func_2441'] = func_2441
mod = relay.transform.InferType()(mod)
mutated_mod['func_2441'] = func_2441
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2442 = relay.var("var_2442", dtype = "float64", shape = (14, 11, 10))#candidate|2442|(14, 11, 10)|var|float64
func_2441_call = mutated_mod.get_global_var('func_2441')
call_2443 = func_2441_call(var_2442)
output = call_2443
func_2444 = relay.Function([var_2442], output)
mutated_mod['func_2444'] = func_2444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2678 = relay.const([[[-6.317593,-1.704469,-2.278743]],[[-1.460639,-4.311246,-0.428130]],[[4.800315,6.631948,-6.814673]],[[-5.316084,0.453550,-5.470419]]], dtype = "float64")#candidate|2678|(4, 1, 3)|const|float64
uop_2679 = relay.tan(const_2678.astype('float64')) # shape=(4, 1, 3)
bop_2704 = relay.bitwise_xor(uop_2679.astype('uint32'), relay.reshape(const_2678.astype('uint32'), relay.shape_of(uop_2679))) # shape=(4, 1, 3)
output = relay.Tuple([bop_2704,])
output2 = relay.Tuple([bop_2704,])
func_2713 = relay.Function([], output)
mod['func_2713'] = func_2713
mod = relay.transform.InferType()(mod)
mutated_mod['func_2713'] = func_2713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mutated_mod.get_global_var('func_2713')
call_2714 = func_2713_call()
output = call_2714
func_2715 = relay.Function([], output)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2730 = relay.TupleGetItem(func_2713_call(), 0)
call_2731 = relay.TupleGetItem(func_2715_call(), 0)
func_1020_call = mod.get_global_var('func_1020')
func_1027_call = mutated_mod.get_global_var('func_1027')
const_2738 = relay.const([2.052688,-0.158998,-3.256719,2.386042,-4.223446,2.600207,-6.207143,-3.685656,6.532890,-3.371434,1.382971,-2.895288,-0.155907,8.349576,4.182774,8.270433,-3.617554,3.102561,5.741897,-4.969981,-7.995045,-0.198114,2.947592,-6.821594,8.484019,6.741722,-2.019455,6.759126,4.903378,-1.909160,-8.344024,8.514245,-6.430355,6.740126,-3.070047,3.034884,9.633136,0.919249,-4.186066,1.760872,-8.461053,-2.568012,-7.378093,1.928965,-4.971079,5.049009,-9.191278,-0.983506,1.733917,-4.880617,2.105244,-0.702682,7.447233,-6.568002,7.319913,3.130114,-7.518793,-4.197019,9.260623,-9.421339,-6.062056,-7.582965,3.965604,3.762163,-4.139756,-4.046206,5.798438,8.427541,-6.004928,-5.149709,8.984670,9.260370,-8.697892,8.463499,6.255238,9.216938,4.532737,-6.606420,-3.748018,0.711678,8.097431,0.345700,-2.939229,9.298101,-7.814619,-4.258392,-8.884584,9.199472,6.242702,-2.470012,-6.023995,-3.662260,-1.446174,-3.033391,-2.399540,7.425579,6.748857,-2.597985,9.530571,-5.262310,-9.630610,-4.633113,-4.478261,9.670458,-6.011679,5.252229,3.670172,-6.379304,-6.102561,0.860440,-7.448852,6.516731,0.791085,4.785223,0.148922,-4.348345,-6.369353,-9.604455,-3.672495,-6.492388,-8.540924,7.995135,-9.391924,1.292963,6.874172,0.988817,1.635381,7.425041,7.451367,-4.669544,8.531566,-7.222449,1.043651,-9.617850,-3.607458,-0.887252,-3.572070,-9.179324,2.500469,-4.276350,-6.286786,-4.097831,-8.008959,-9.698938,-0.394031,-9.339654,6.045664,0.134865,-3.801219,-8.926393,-2.311654,2.421006,5.083810,2.696158,2.386340,3.979316,-5.025162,6.864710,9.589512,-4.623651,-5.152772,4.599164,0.225491,-6.150852,5.800877,-4.638519,8.294176,-3.631084,8.717717,6.885999,7.098519,6.476154,-6.400003,-6.054932,-9.512463,5.463553,-6.905135,7.619461,3.349415,1.568035,-9.645262,7.571420,8.307115,-2.636999,5.308035,1.047950,-5.144015,-4.307719,9.929100,7.851604,0.840236,7.848211,3.771447,5.963571,-5.310894,7.348484,-2.432484,9.320891,5.434044,9.115626,8.834626,5.290637,8.285839,1.040104,2.388310,-8.769620,8.422940,-5.390680,-9.922325,-4.509487,-1.624074,-4.040243,-8.915171,-5.610970,6.000288,-8.869475,-1.228126,3.482099,-2.297153,-8.887418,5.408557,-0.304098,-8.954785,5.278975,5.378805,-5.256570,-9.501013,-0.326467,-3.185484,-4.613776,-3.424180,-3.113035,-9.582884,-2.854401,-3.050713,-9.011513,-6.977947,8.225059,5.224520,3.783884,-9.143141,-8.853073,-3.591104,3.978614,7.717831,8.492735,-6.556841,-1.698570,3.966473,0.003665,-7.360272,9.185310,5.867790,2.948576,5.862357,4.077260,-5.902736,-6.836986,-5.240650,3.104666,9.214122,-9.413784,3.714303,7.890910,5.570022,-1.009853,-5.374711,-4.831673,-4.918295,3.430579,2.284216,5.395214,-4.289399,-3.675107,7.396091,1.604549,-1.252973,8.214809,-7.588406,-3.885696,9.906453,0.671402,-5.167652,2.524095,-6.835793,8.832718,6.239844,7.069908,-6.746505,7.620027,-9.757990,4.013526,-9.994516,-7.988998,1.754335,-5.080541,7.474937,-9.378827,-1.080593,4.225417,-2.740900,-1.696443,3.327104,-6.885049,9.737000,-7.005880,-9.533843,2.287033,-7.722382,2.769001,-3.969562,-2.628644,-9.491642,-8.875528,8.575347,8.189379,-3.466041,4.843066,5.861563,6.266501,1.818834,-8.848175,5.564686,-4.816812,9.384292,5.091611,-8.171754,-9.895198,0.421100,8.852379,-1.387572,-8.149563,-6.364783,-1.155765,9.569858,-6.718238,8.488525,-5.362293,-1.343956,-6.332665,8.003232,-3.511373,-1.907753,-6.598907,2.481779,-3.551126,-5.012272,-9.758144,-7.110402,-1.750084,-8.014826,3.679681,-0.692671,5.124404,-2.016962,-2.993698,5.395189,3.532149,0.166605,7.661799,2.593227,-9.642307,9.085970,-6.299567,-9.936614,7.841905,-9.144896,-8.296630,5.696937,3.071739,-1.498151,2.047688,-5.828996,7.343833,-5.877690,-9.365277,-1.389377,6.391924,2.238595,8.286142,-5.108504,6.949980,8.626109,8.511805,8.522291,3.554317,7.914599,9.565021,0.064770,2.523922,-8.679114,-4.511857,7.701856,-7.635011,0.169421,-0.686028,-3.938106,-8.724727,7.722378,-9.866588,9.906588,-6.539038,-3.892916,-0.992555,-2.236395,8.624731,-0.268172,9.240029,7.653299,-3.146873,-9.359303,8.512724,-4.262945,-5.712606,3.865382,-5.340935,-6.733047,5.937731,4.682658,8.531676,-2.057309,-1.786064,-1.095269,-9.318137,7.974283,-3.836172,2.151507,-2.969956,-7.763390,6.556210,-7.810716,-0.025199,8.344324,7.945817,9.657251,-8.480706,-8.395150,-5.677572,5.867899,-2.807946,-0.466708,-2.994152,-4.349427,2.198126,8.016790,4.457340,6.049329,0.755941,3.814714,4.725260,9.860675,-9.704387,-0.122312,-9.579492,0.929344,-9.393749,7.819568,7.782267,2.570487,-4.512182,-0.641819,-0.873475,7.774051,-0.191333,4.493887,-5.229665,4.041422,-9.518737,4.714355,9.501011,3.724390,-1.106245,-6.939733,7.451276,2.021585,5.585047,2.978091,8.414532,9.871057,2.678599,1.911785,0.357887,5.859080,-0.721919,-7.143669,8.023966,3.880146,-7.403813,-1.579783,5.065830,-0.237115,2.781840,8.686843,-2.788810,-6.399219,6.759283,8.121227,-9.783993,-8.114514,-1.641077,4.546249,-1.418798,8.460121,-6.123491,-1.979935,9.907608,-2.060743,-3.781622,5.479520,-5.415694,2.941907,4.637117,-4.605569,3.161612,-4.696891,8.615972,9.321491,-2.430366,0.740531,-4.859220,2.604596,-5.815811,-6.842132,6.176517,0.353046,8.813306,4.053522,-9.688985,9.061172,-4.575176,7.473988,2.450275,0.316033,9.170579,-0.412384,1.727681,-5.238807,-6.769303,-8.800672,-7.800314,5.436613,-1.105244,6.684761,0.942618,-3.579978,-0.671982,7.130857,4.746723,-0.201229,1.464249,-3.081372,-6.120367,-4.940182,-6.949993,-1.618561,5.337843,-6.517448,-7.396348,-5.846470,-3.957106,7.215593,-2.614027,-2.503709,8.671370,-1.818013,-1.980385,8.083149,9.353922,6.578752,9.577625,4.514439,5.062075,-9.659137,9.647199,4.117748,-1.220936,-6.868364,-5.733009,-3.240414,4.096130,-2.255048,7.575639,-8.086500,-8.856938,-6.104499,6.874519,-5.255021,-8.258247,-6.428500,7.487508,9.142477,-4.301691,-5.960068,2.844350,8.799583,0.991352,-9.723857,7.513946,-9.308601,-9.739421,8.882841,-2.248477,-7.221905,4.054313,-4.988629,0.338507,-4.505335,0.238848,-9.660821,4.293216,-6.391443,6.358927,7.336078,6.020808,-9.434968,6.032002,-3.947423,4.459859,-8.190154,6.266698,0.904690,-9.807005,4.103385,-8.403088,-0.090571,0.294105,7.240554,0.367837,7.184263,-6.672075,-2.657552,-4.602072,4.777480,-9.283309,-2.615403,-6.044702,-7.032960,7.834190,-6.860949,6.735355,9.329405,2.017806,7.081440,3.097537,-4.364576,2.834041,1.926285,7.448049,7.007712,-4.663915,5.337478,-0.738697,-6.291590,4.547031,2.446020,4.187991,5.576136,0.017999,-4.880804,-6.674785], dtype = "float32")#candidate|2738|(660,)|const|float32
const_2739 = relay.const([-2,2,-5,3,6,-4,-4,-7,-10,3,3,-6,-2,5,6,7,-7,4,-9,-4,6,-3,6,1,1,10,8,8,-4,3,9,10,10,-7,-2,5,8,10,10,-10,7,-4,-5,-6,-7,1,-10,3,-6,8,-1,5,1,-5,-9,1,-4,-1,-9,-8,-8,2,1,-10,6,-4,-3,10,6,-4,-8,-1,9,-1,-8,5,-7,8,2,6,5,9,-1,-1,-2,-2,-1,-3,4,9,3,10,10,-10,5,4,-6,-10,-10,5,-8,-4,-1,-1,1,9,-5,5,-8,-10,3,-4,7,-7,7,-10,-9,5,-9,5,8,3,-2,9,-7,2,4,-10,-2,-7,9,5,10,-9,10,-1,7,-2,-4,10,3,-1,2,6,-8,-4,-10,6,2,-1,9,-1,-5,9,7,1,3,-4,5,10,5,-10,-4,-7,2,-9,9,9,-4,-5,8,-10,10,-8,8,-8,-2,9,5,-2,-5,7,-2,10,-5,-8,1,-7,-6,5,5,-6,-2,-2,-1,3,7,2,6,-5,4,-5,-3,-7,-9,2,8,8,-3,6,-9,1,-8,-5,-4,-5,-6,-3,-5,10,5,-6,2,-2,8,-10,-8,3,6,8,8,8,6,-3,-4,-4,6,3,-8,2,4,5,5,-5,5,2,-9,-7,4,5,-4,-8,-1,-8,-5,-6,-4,-8,-8,9,8,-7,2,9,6,3,-5,2,-1,8,1,-4,7,-4,-4,-10,-6,7,-1,-3,4,-6,-8,-6,9,6,8,-6,1,9,5,-8,-6,-9,5,5,10,8,-2,-1,-6,4,7,8,2,-3,-7,-9,8,-4,-2,2,-2,3,3,-6,9,3,-10,3,-8,-10,-9,-2,9,-10,4,-6,-2,-2,-3,4,-8,9,7,1,-8,2,2,-4,9,3,-8,10,7,5,-10,-1,5,8,2,9,10,9,7,-2,-9,-10,5,-7,3,4,10,-4,7,-8,9,1,1,9,3,-4,8,7,5,-8,5,-2,9,-9,5,-5,5,4,-6,-5,6,-1,-5,-8,4,7,-7,-4,4,-3,1,5,-8,3,4,4,7,-4,6,3,7,-9,8,3,5,2,7,-1,6,10,-1,-10,10,3,6,-7,-5,-1,10,-6,1,-2,-7,3,8,-5,-8,1,1,-5,9,1,-10,8,6,6,6,-8,-2,8,4,1,2,-1,6,-9,-10,9,-3,-8,3,-8,4,1,9,-6,-7,-7,8,10,-4,7,1,1,-4,-5,-5,-5,-1,4,10,-2,-6,-5,-5,-6,-6,-2,-10,-1,6,-3,-8,-9,-7,-8,-3,-3,7,3,3,-2,4,-5,9,-1,3,5,2,-2,-8,-5,9,2,-4,-8,6,-7,6,-7,10,-9,3,4,-9,-6,5,10,9,-1,-8,-3,1,-7,2,1,3,4,-3,3,3,10,3,3,3,9,3,8,-2,10,-10,-7,-10,-8,9,6,3,3,6,-7,10,-2,8,8,6,3,8,8,-2,2,10,-5,-1,-8,-4,8,1,-8,10,8,-3,-2,4,10,8,7,-9,-10,1,-9,-5,9,-7,-6,5,2,6,1,-4,5,-3,10,7,4,10,-2,-2,-2,2,-7,3,-4,-3,-10,-6,-7,-7,2,-8,1,2,2,8,5,3,4,-9,-4,3,-9,9,9,4,-10,-10,10,-6,-7,8,2,-2,-7,5,5,-5,7,2,-10,7,-9,-2,-10,1,3,-7,-1,1,2,-1,-4,-1,2,6,2,-3,2,-7,-4,-10,-8,-1,-8,8,10,8,6,6,-5,-10,-6,7,8,2,4,8,1,-10,-2,10,8,6,9,3,-4,2,-8,10,3,-10,4,-9,-7,-3,-9,-3,-10,4,2,-5,10,8,6,-6,10,6,-5,-8,-7,-3,3,-5,6,-4,7,-5,-7,-7,-9,-2,10,-2,4,-9,-10,-9,-10,-7,6,-5,3,1,2,-10,2,1,-1,-9,2,8,-10,-4,3,-7,5,9,-1,-7,-10,-4,-1,8,-8,9,-5,-4,5,-5,1,5,-3,3,7,-7,-9,1,5,-1,6,-5,-8,8,-6,10,-7,5,-1,4,-10,-5,1,8,5,9,1,4,2,3,-5,5,-9,-1,-1,-8,-7,8,1,4,-5,-9,8,6,-5,5,-3,3,-3,10,-1,-4,3,8,8,-10,-6,1,-2,1,-7,9,-1,10,5,9,-10,6,-3,-5,-6,-7,-4,6,5,-5,-8,-10,5,4,-2,7,3,5,-6,8,7,-6,-4,-9,10,1,6,-6,3,-10,2,-1,1,-1,-8,10,-6,8,-9,-9,1,-8,3,-8,5,-5,7,1,2,6,-3,-5,5,9,10,-2,9,-8,5,1,3,-6,-2,10,-1,3,-5,4,-4,1,-2,5,-4,-4,-8,-10,2,3,6,-7,-2,-10,-3,-6,-7,10,-1,-1,-7,-7,-1,-8,-6,9,4,7,-10,-2,9,-9,4,-6,-6,1,3,8,6,8,-7,-2,-7,-9,-5,-8,-7,-5,-8,-8,-7,10,9,-5,-6,-9,-2,-5,1,5,-3,4,-2,4,9,6,3,7,4,8,-7,-2,-9,9,1,8,7,-7,-9,10,-3,6,-2,7,-7,7,-4,-4,-10,-3,-6,-6,-2,-3,1,1,-2,9,1,4,-3,-1,-4,1,9,2,4,-10,10,-7,9], dtype = "uint64")#candidate|2739|(1008,)|const|uint64
const_2740 = relay.const([[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True]], dtype = "bool")#candidate|2740|(520, 1)|const|bool
const_2741 = relay.const([6,-9,8,-3,9,-6,-9,-4,-4,10,-1,-8,-2,9,9,-9,2,9,9,-8,8,-3,-1,-2,10,-9,-6,1,3,7,-6,6,-4,7,-9,-10,-7,3,-2,2,-9,-10,-9,1,3,-3,-4,-8,-6,-2,9,1,6,5,1,7,-10,4,-2,-9,-5,-5,-3,-5,-9,3,10,-6,-10,-2,8,-10,10,8,-1,8,-3,-2,7,5,-6,-2,4,3,-8,-4,6,-7,-8,-8,-5,-4,9,-5,7,2,10,-10,-1,8,-7,8,-8,2,3,6,8,4,-8,-6,1,-8,2,-5,2,6,8,7,-10,-4,10,-1,-10,10,6,-2,-3,-7,-10,-10,8,4,-10,1,-9,-5,5,-1,-2,2,6,6,6,-4,6,1,-2,9,5,3,5,4,3,4,4,-3,1,10,3,-6,-2,2,-1,5,10,-9,-4,-6,10,-2,9,-7,-7,10,2,8,2,-7,8,8,-10,5,-1,10,-5,6,-2,-4,1,-8,9,-9,3,-1,-10,2,-7,-3,-10,-10,9,-8,-10,-7,-4,5,10,-4,2,7,6,1,6,2,8,2,-1,-8,3,-3,2,-2,-4,7,-2,9,4,3,-5,-10,8,-10,-4,-9,4,4,2,10,4,3,2,6,-1,5,-4,8,-7,-1,9,-8,4,10,-9,1,8,9,-7,3,2,5,-5,7,3,4,8,6,-3,-5,9,-6,-1,4,-10,5,8,-9,4,6,-4,1,10,3,4,-8,5,9,-10,5,1,-3,9,-4,10,10,10,-7,9,-4,7,5,7,-9,6,-7,3,7,-4,4,-1,-9,6,-1,-5,7,8,-5,5,-2,-7,1,10,1,-1,9,1,-2,5,1,2,-1,1,7,-9,8,-9,5,7,3,-3,9,-2,1,8,-7,-10,-1,6,9,-9,3,-6,-5,-4,-2,-3,-1,3,2,5,-10,-2,8,-2,-5,-3,-7,5,-3,-2,-8,-5,-10,4,-8,5,-4,2,5,8,-3,8,-10,-5,4,8,-4,4,9,-10,-4,6,2,-9,-2,-8,-8,8,-9,-10,2,-8,9,2,7,7,-5,-1,-3,-5,-9,-3,-1,-4,-3,3,2,-2,3,-1,6,-4,-10,-9,9,-1,8,5,4,10,-4,3,-6,7,10,2,5,-6,-2,10,-10,-10,-5,-8,4,6,-2,-6,-5,10,10,-3,7,-1,-4,-2,2,-3,-9,-5,2,3,-10,4,1,-3,3,7,5,1,-9,-6,-7,9,1,-10,-3,6,-3,1,4,4,-1,-9,7,8,5,8,-2,-9,-8,7,-6,-9,5,1,-5,7,8,-6,6,-2,7,-4,-4,5,3,-7,7,8,-7,1,5,-10,2,9,-10,-8,10,8,-4,-8,-5,8,3,1,-4,-4,10,4,-1,-9,-4,10,10,8,10,-3,-4,-4,6,9,-8,10,8,-10,-9,-2,10,6,9,-4,-1,4,9,-4,-3,-6,7,-1,-4,-6,1,-5,-9,1,-7,6,5,5,6,-8,2,4,-1,-6,7,7,7,9,5,3,8,-3,-7,-6,8,6,9,1,4,-5,7,-8,-6,-10,8,4,-3,8,5,-5,-7,5,8,6,-3,-2,4,7,-7,-2,2,-3,-3,5,7,3,8,2,3,-9,-10,9,8,-4,2,-2,-2,-9,7,4,-1,-10,6,6,-1,-6,-5,6,10,10,6,8,8,6,1,-3,-9,-3,4,-4,6,7,6,7,-3,-2,1,-10,7,-8,8,-1,4,-1,7,5,-7,7,6,-1,-2,-8,1,4,4,6,-3,8,-3,8,-6,3,5,-7,3,10,1,8,7,-1,4,-2,6,-4,1,-9,5,10,-4,-1,-7,2,-8,-9,4,6,5,5,-10,-10,-9,9,5,-3,8,-5,2,10,-2,5,-7,2,-10,5,5,2,8,-7,-1,-1,-4,-4,6,8,-3,3,-5,3,-1,-5,8,10,9,9,10,8,6,4,-6,-1,-7,-10,-7,-8,-3,-5,-2,-5,2,10,-3,10,2,3,-6,8,7,6,1,2,-8,-5,2,1,5,10,2,7,-1,4,3,1,-8,-3,10,2,-4,10,8,-4,5,-1,1,10,8,-9,6,4,6,2,5,-8,3,-7,-1,4,-2,-2,-4,-6,6,5,9,5,-7,3,-5,2,-1,10,9,-8,8,-5,2,-5,1,2,1,5,-6], dtype = "uint64")#candidate|2741|(832,)|const|uint64
call_2737 = relay.TupleGetItem(func_1020_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(const_2740.astype('bool'), [520,]), relay.reshape(const_2741.astype('uint64'), [832,]), ), 4)
call_2742 = relay.TupleGetItem(func_1027_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(const_2740.astype('bool'), [520,]), relay.reshape(const_2741.astype('uint64'), [832,]), ), 4)
uop_2752 = relay.acos(const_2740.astype('float64')) # shape=(520, 1)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2754 = relay.TupleGetItem(func_2713_call(), 0)
call_2755 = relay.TupleGetItem(func_2715_call(), 0)
func_1020_call = mod.get_global_var('func_1020')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_2760 = relay.TupleGetItem(func_1020_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(uop_2752.astype('bool'), [520,]), relay.reshape(call_2737.astype('uint64'), [832,]), ), 6)
call_2761 = relay.TupleGetItem(func_1027_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(uop_2752.astype('bool'), [520,]), relay.reshape(call_2737.astype('uint64'), [832,]), ), 6)
uop_2764 = relay.rsqrt(uop_2752.astype('float64')) # shape=(520, 1)
uop_2767 = relay.acosh(uop_2764.astype('float64')) # shape=(520, 1)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
call_2769 = relay.TupleGetItem(func_215_call(relay.reshape(uop_2767.astype('bool'), [4, 13, 10]), relay.reshape(const_2741.astype('uint64'), [1, 832]), ), 1)
call_2770 = relay.TupleGetItem(func_218_call(relay.reshape(uop_2767.astype('bool'), [4, 13, 10]), relay.reshape(const_2741.astype('uint64'), [1, 832]), ), 1)
var_2776 = relay.var("var_2776", dtype = "float64", shape = (520, 2))#candidate|2776|(520, 2)|var|float64
bop_2777 = relay.less(uop_2764.astype('bool'), var_2776.astype('bool')) # shape=(520, 2)
func_1020_call = mod.get_global_var('func_1020')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_2782 = relay.TupleGetItem(func_1020_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(uop_2764.astype('bool'), [520,]), relay.reshape(call_2769.astype('uint64'), [832,]), ), 7)
call_2783 = relay.TupleGetItem(func_1027_call(relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2738.astype('float32'), [4, 11, 15]), relay.reshape(const_2739.astype('uint64'), [1008,]), relay.reshape(uop_2764.astype('bool'), [520,]), relay.reshape(call_2769.astype('uint64'), [832,]), ), 7)
uop_2784 = relay.sqrt(bop_2777.astype('float32')) # shape=(520, 2)
output = relay.Tuple([call_2730,call_2737,const_2738,const_2739,const_2741,call_2754,call_2760,uop_2767,call_2769,call_2782,uop_2784,])
output2 = relay.Tuple([call_2731,call_2742,const_2738,const_2739,const_2741,call_2755,call_2761,uop_2767,call_2770,call_2783,uop_2784,])
func_2792 = relay.Function([var_2776,], output)
mod['func_2792'] = func_2792
mod = relay.transform.InferType()(mod)
var_2793 = relay.var("var_2793", dtype = "float64", shape = (520, 2))#candidate|2793|(520, 2)|var|float64
output = func_2792(var_2793)
func_2794 = relay.Function([var_2793], output)
mutated_mod['func_2794'] = func_2794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2796 = relay.TupleGetItem(func_2713_call(), 0)
call_2797 = relay.TupleGetItem(func_2715_call(), 0)
var_2814 = relay.var("var_2814", dtype = "uint32", shape = (4, 8, 3))#candidate|2814|(4, 8, 3)|var|uint32
bop_2815 = relay.greater_equal(call_2796.astype('bool'), var_2814.astype('bool')) # shape=(4, 8, 3)
bop_2818 = relay.greater_equal(call_2797.astype('bool'), var_2814.astype('bool')) # shape=(4, 8, 3)
output = relay.Tuple([bop_2815,])
output2 = relay.Tuple([bop_2818,])
func_2821 = relay.Function([var_2814,], output)
mod['func_2821'] = func_2821
mod = relay.transform.InferType()(mod)
mutated_mod['func_2821'] = func_2821
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2822 = relay.var("var_2822", dtype = "uint32", shape = (4, 8, 3))#candidate|2822|(4, 8, 3)|var|uint32
func_2821_call = mutated_mod.get_global_var('func_2821')
call_2823 = func_2821_call(var_2822)
output = call_2823
func_2824 = relay.Function([var_2822], output)
mutated_mod['func_2824'] = func_2824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2894 = relay.TupleGetItem(func_2713_call(), 0)
call_2895 = relay.TupleGetItem(func_2715_call(), 0)
output = call_2894
output2 = call_2895
func_2900 = relay.Function([], output)
mod['func_2900'] = func_2900
mod = relay.transform.InferType()(mod)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mutated_mod.get_global_var('func_2900')
call_2901 = func_2900_call()
output = call_2901
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_2914 = func_2900_call()
call_2915 = func_2900_call()
func_1020_call = mod.get_global_var('func_1020')
func_1027_call = mutated_mod.get_global_var('func_1027')
const_2917 = relay.const([9.022277,6.343859,2.075239,-5.436577,0.328315,8.501707,-5.243158,-9.916582,-1.768067,0.933642,8.556985,6.583880,9.654533,1.042459,5.040015,1.730544,8.525605,-6.541208,7.088022,7.994196,-2.090200,-6.635937,1.293492,7.339395,9.798047,-3.910685,-9.453251,9.158006,3.100289,3.879680,5.593039,0.436981,9.100559,6.747073,-3.316915,5.938002,8.483641,3.416050,-1.211322,-7.749468,7.613966,-9.410947,-5.934794,-0.576785,0.362508,-4.105395,-5.302465,5.025390,-6.239186,-6.462987,1.518579,9.132709,-5.424415,2.352081,8.313403,-4.463853,4.290753,4.953314,9.200939,5.900050,9.280756,4.023632,3.046162,5.449174,-0.581194,-2.849048,1.005476,-6.093483,3.524735,-0.667544,-4.577337,2.508136,7.960164,1.001366,-9.363335,3.786466,1.941820,-7.281139,-5.327492,-4.052937,9.354129,-1.477534,-4.548821,-6.022476,8.034546,-9.031826,-8.822789,6.805639,-9.492637,-8.080703,6.244605,-2.861034,-5.057625,2.996086,-6.003167,7.005731,-6.689269,-1.789753,0.580294,-4.428411,9.920967,-9.730006,2.843138,-6.039925,-0.795496,-5.002722,-2.291818,-4.008893,0.253860,5.771997,5.684360,-4.158789,0.411153,-9.411151,8.028034,7.300767,-1.592053,-1.485763,1.381848,7.718854,2.558222,5.155507,2.984054,5.684639,8.661499,-4.123857,0.694299,-9.501467,-8.023610,5.328367,-2.468272,-5.138931,-7.290087,-3.830679,6.581756,-8.710396,0.378581,2.196696,6.687167,-4.410271,0.090310,-8.840240,5.780633,6.239842,3.207550,6.228402,8.621026,-5.210651,1.609138,1.465552,8.822357,7.883459,8.700945,7.334489,1.396894,4.970618,-0.858168,-3.278938,9.333868,7.716556,-9.930289,-2.924769,3.489629,-9.496541,3.878575,4.229454,7.953160,8.310695,1.325209,0.285928,-0.914020,-3.349005,-7.236819,-2.549650,-0.409035,4.892512,0.889456,1.160937,-7.020193,1.259276,0.824013,-5.292216,8.589058,-1.021191,-6.193808,-8.952904,-8.385191,-5.609594,3.538567,-4.440151,-0.819969,-0.785010,3.809217,-1.320274,2.228503,6.705129,3.440718,4.332381,-5.142479,6.740205,-3.955233,7.653108,-9.739812,8.526739,1.919472,-7.482193,8.668546,6.103451,-7.480250,4.428035,1.581123,-8.406160,-4.129982,6.433199,8.709717,-8.977665,-4.664132,2.810545,3.923145,-2.358574,-5.440940,-7.290458,-6.737811,2.060217,-9.868330,-7.290154,5.790345,-1.824216,8.946425,-6.016271,-0.301346,-7.386709,1.890438,-1.450792,-4.175757,2.105865,8.036244,3.278721,4.115069,-6.126895,2.470231,8.447064,7.542361,-8.590207,1.780273,-1.513621,7.980707,0.828843,-7.922034,4.744232,-8.687371,2.811026,9.238674,0.098285,1.812939,-2.057458,2.780947,-1.377988,0.555345,2.461714,1.854299,-1.968238,-7.619354,5.273478,2.081311,3.590904,1.760025,1.242930,0.148010,9.869931,-3.692279,8.335525,0.516061,5.989043,2.427301,-1.433446,-3.794514,4.435535,-1.341682,6.137327,-4.704386,4.048526,1.521037,-6.128602,-6.592820,-0.103104,3.890637,-3.745489,5.048366,3.381707,-9.372972,1.814510,-7.781202,6.627445,-8.661116,1.117798,8.950869,-8.778144,6.571088,-5.306248,2.792825,9.514945,-3.142061,9.253045,0.705789,-2.935583,-2.008862,-9.515215,3.139435,9.224883,-9.703316,-1.095625,-8.281778,-4.472234,3.287758,6.996424,6.743771,8.251925,-7.617542,4.515492,1.312721,6.577561,-0.481653,-3.256826,8.048674,9.250834,-8.556925,9.657012,-2.861695,6.198205,-0.579509,-2.239030,9.016640,-9.143691,4.379125,6.841560,4.206844,-9.222762,-0.496419,8.606326,5.381431,7.952433,-8.652763,-7.170016,-8.609976,-2.226566,-2.847481,4.099614,-5.065528,1.479812,0.141648,-7.150408,0.855291,-2.216329,-5.966235,3.559457,-7.343924,4.831327,6.042927,-4.692729,0.559723,8.550304,7.849737,7.011351,-9.461511,4.037407,4.750426,-4.605176,7.998783,-3.738767,5.168115,6.051163,-6.755512,-1.338676,-4.481391,-0.424693,-9.730928,3.704980,-5.323002,3.832179,7.069035,-8.627126,7.429561,8.041028,-4.780719,-9.363569,4.644006,9.576152,-8.338912,3.320533,-0.780647,0.936182,1.759603,4.340962,6.380354,-4.978705,7.501456,-9.943420,-6.504080,5.743229,7.536794,-5.095923,1.994922,8.646003,2.823118,-1.227783,-3.977454,-5.085064,-3.817024,0.701660,6.147991,-0.855541,-9.142421,5.403402,-8.789437,4.905086,-6.144538,-8.064743,-7.165951,6.049019,1.244094,5.462848,9.914287,9.110140,7.750948,-5.222713,8.894983,-3.349222,6.744398,-6.179526,-9.625188,3.152033,8.574836,7.426062,7.479155,4.284377,-5.337551,-2.275416,9.458432,-9.618264,-1.574217,1.419636,5.253185,-9.154812,1.752426,5.367101,-2.796002,-6.638042,-1.857588,5.899456,-3.730830,-8.399053,-2.822381,6.954399,9.310419,-8.830503,-6.230800,5.162892,5.660584,-2.812418,-2.831623,9.918011,-9.594009,-1.678093,6.882227,8.387863,-4.709952,-4.463191,-8.341232,-3.581236,5.908854,-4.693609,-4.806834,-0.606396,1.207047,-8.459918,-4.199722,-1.067406,3.063340,8.828249,1.301021,9.917909,4.386802,-8.063765,9.113825,0.686774,8.649261,-7.446655,0.146202,-9.415608,1.162709,-4.318591,-7.435338,-7.482587,2.622171,-6.576753,-4.105254,-2.898002,6.242739,-5.828995,-0.196717,-1.707391,6.112007,2.524661,0.720871,7.055657,3.782610,-5.886713,-7.758768,7.477126,-5.482528,-9.763245,5.071497,-7.411055,8.058904,0.337138,-2.509049,-7.963322,-8.839870,-3.574659,8.193193,-8.724672,0.461054,-8.363104,-9.203423,8.521480,0.456139,1.341972,1.187210,6.665760,-4.994780,-9.753762,-7.337360,-2.899523,-1.385882,-8.948938,-0.480224,-3.473945,3.096893,-7.301420,7.128034,3.447398,8.584499,9.115863,-2.821994,-0.289342,-8.296433,-9.690367,9.215877,5.068747,1.089723,9.807919,8.354207,-9.279036,-9.979394,-6.737477,-2.205365,-7.568334,-1.851028,-9.307685,-3.480112,-6.458779,7.453265,-9.469892,1.576051,7.275412,4.902205,1.651331,-1.563849,-9.072886,-5.202917,-1.167570,-4.686937,-8.624770,6.325664,1.013748,3.590001,-9.620005,-4.750993,6.505792,-9.967036,2.143564,1.713017,-9.908892,-5.231155,-8.160239,6.986857,2.573966,6.161677,0.784426,8.713103,9.535436,-8.528971,3.824171,-8.535205,-5.188702,8.177108,-7.075876,-4.093697,5.983993,0.361401,3.831272,-4.709661,-0.828870,1.220737,-8.272461,4.573797,8.451757,1.098892,-8.052063,-4.864616,0.412685,-6.413548,-7.634947,-3.633932,6.703214,-0.972472,1.699980,-8.071956,-0.215218,0.007486,-2.657065,-5.152935,-3.139378,-1.517542,3.863076,2.207315,0.690800,8.713987,1.432065,2.749189,1.531927,4.437219,-7.137896,1.209709,3.651369,-1.300381,2.508863,-7.164169,-0.706569,-2.491249,3.461881,-3.479097,-7.204078,-0.976606,-4.761302,-5.916523,2.615409,-9.900906,6.393728,3.087110,-5.170177,-8.558193,-8.754644,7.512618,-8.096869,0.535379,5.339013,-4.682549,9.500516], dtype = "float32")#candidate|2917|(660,)|const|float32
var_2918 = relay.var("var_2918", dtype = "uint64", shape = (1008,))#candidate|2918|(1008,)|var|uint64
var_2919 = relay.var("var_2919", dtype = "bool", shape = (520,))#candidate|2919|(520,)|var|bool
const_2920 = relay.const([6,-9,7,-1,-7,7,-5,-1,7,-10,7,3,-3,-9,-1,-8,-10,-7,-3,7,-5,-3,-3,3,10,-3,9,6,-5,7,-3,2,3,10,10,-5,-2,-7,-5,-2,-4,-1,-1,6,-1,-1,-7,-8,2,4,3,-9,10,-9,8,9,6,-4,-8,-4,-3,-3,-8,1,-7,4,-8,5,10,-2,-5,8,-4,2,-5,9,1,-8,-3,9,-8,1,7,-4,10,-3,9,-8,-6,-3,7,8,-7,7,7,-9,-10,-1,-6,1,-10,-3,-10,2,-3,8,10,-8,-4,7,2,8,-6,-8,-3,2,-7,-4,8,-4,2,3,-10,1,7,-7,3,10,6,6,8,5,-3,-2,-7,-3,8,3,8,-4,-1,5,-10,-5,-4,-8,-9,6,3,4,-4,-9,5,-2,5,2,-9,-1,-4,7,-7,8,7,-9,-4,10,-10,-10,-8,-9,-8,-10,10,8,-8,-9,10,-3,5,-9,3,-5,-6,-9,7,9,1,-2,9,-2,-5,-3,2,1,-8,-6,-8,5,6,-10,3,8,-7,4,10,-4,-9,-9,-3,-10,-1,-3,7,-4,-3,8,2,-2,6,-6,4,-1,-4,-5,1,9,2,-10,1,6,6,4,9,8,1,-2,-1,7,-5,4,8,7,-5,-2,1,-2,9,-7,-1,-4,9,7,-10,7,7,-1,-3,8,5,6,-6,-3,6,5,-6,-2,-6,-5,5,10,-3,8,9,-6,4,10,-2,-8,4,-8,2,-7,8,3,-4,-5,5,-3,-1,-1,-10,-6,-4,3,-8,10,8,8,-9,-1,-5,-10,-2,-9,1,-8,10,3,10,4,6,8,1,-2,-7,3,-1,-4,-5,6,2,-7,1,6,8,9,-4,-8,3,3,-4,3,9,-8,2,-8,-1,-9,-7,-4,-5,-6,2,-3,-5,6,-5,5,-6,-8,-1,5,1,6,6,-2,-5,-9,-4,3,-1,1,5,9,2,-2,-2,-7,-8,3,-3,7,5,4,-10,-3,5,6,3,-3,-1,-8,-1,-9,5,3,9,5,-7,7,7,10,-5,6,-2,-1,-4,-9,5,4,-10,-10,-8,-4,6,-6,-3,-7,-5,-4,-1,-3,7,10,7,-2,2,7,6,8,-5,7,1,6,-8,-6,-9,-4,8,-6,1,-6,-1,4,6,-9,4,-3,-9,-2,1,-6,6,5,-7,3,-3,8,3,1,-3,2,-6,2,-4,-2,4,-5,9,4,-3,1,-5,-1,-2,8,1,-3,-7,-2,-1,5,-4,6,10,-9,-9,2,1,4,4,-9,4,-3,6,3,4,5,-8,-1,-2,-5,1,7,-1,-7,3,-1,9,9,1,-3,9,1,8,10,-4,-1,2,-9,8,-9,4,-7,4,-6,-7,-8,-8,6,4,-6,-10,-3,6,7,-8,3,6,2,-10,-5,-1,5,-5,-7,-6,-5,-3,-9,10,1,2,-1,7,-10,-4,-2,-9,8,8,1,10,8,-4,-10,-5,-4,6,7,9,-8,2,1,9,-5,5,-10,-10,6,-7,10,-9,1,2,-7,-7,5,5,3,5,10,4,5,-10,9,9,-1,6,2,-4,-8,-3,4,-10,3,-5,-5,3,-2,-3,2,2,10,7,-7,-2,4,1,5,-7,9,9,10,6,-7,-6,-8,-2,10,10,-2,4,8,-6,-7,9,-2,9,-4,-7,-1,10,3,10,3,9,-4,3,-8,-7,9,-8,6,-4,-2,1,-6,-7,-5,2,-8,-5,-6,4,-5,-7,-7,-7,4,-5,-4,2,-1,9,-7,-6,-4,5,9,-1,2,-1,7,-6,-9,7,-9,-3,9,6,5,-1,1,8,-7,4,-1,10,3,6,7,5,-4,6,-2,-3,4,-7,-10,-7,-6,-8,-8,-2,4,-10,3,7,-6,5,7,7,10,6,-1,-8,-4,3,-7,-2,4,2,-9,-7,3,-3,9,-2,7,10,-3,-4,-7,8,3,4,3,-5,8,5,5,4,1,-5,-5,6,-5,4,7,-7,3,-10,-9,7,8,-9,-2,-6,-10,-3,6,-3,-10,-3,9,9,-3,-6,-3,-10,-7,-3,5,-3,-2,9,4,9,9,2,3,-9,10,9,-8,-4,1,3,-9,-10,-3,-7,9,2,9,5,5,8,-9,7,-7,4,8,-5,-6,-8,-2,-9,-2,-10,-4,2,-8,3,9,-7,-10,-6,8,7,-4,4,-9,-8,3,1,2,-7,4,-8,-9], dtype = "uint64")#candidate|2920|(832,)|const|uint64
call_2916 = relay.TupleGetItem(func_1020_call(relay.reshape(const_2917.astype('float32'), [4, 11, 15]), relay.reshape(const_2917.astype('float32'), [4, 11, 15]), relay.reshape(var_2918.astype('uint64'), [1008,]), relay.reshape(var_2919.astype('bool'), [520,]), relay.reshape(const_2920.astype('uint64'), [832,]), ), 0)
call_2921 = relay.TupleGetItem(func_1027_call(relay.reshape(const_2917.astype('float32'), [4, 11, 15]), relay.reshape(const_2917.astype('float32'), [4, 11, 15]), relay.reshape(var_2918.astype('uint64'), [1008,]), relay.reshape(var_2919.astype('bool'), [520,]), relay.reshape(const_2920.astype('uint64'), [832,]), ), 0)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_2924 = func_2900_call()
call_2925 = func_2900_call()
const_2935 = relay.const([9,6,-5,6,9,2,3,-3,-6,8,-8,-3,1,-6,5,7,-7,-10,6,-6,-7,4,8,8,2,9,4,-3,-2,-7,10,-5,-9,-1,2,-9,-6,8,10,8,-1,-6,-9,-9,7,-9,10,-5,-10,3,4,10,6,-5,-5,10,2,-2,-4,-5,5,-9,-10,3,3,-2,9,-8,-2,-9,10,5,-7,4,-8,-4,4,9,2,-2,9,1,-5,-10,5,-4,-1,6,5,-9,10,-5,1,-8,5,5,5,-1,8,-9,-1,8,1,-1,-8,1,-8,-4,-10,9,2,9,-3,-10,-2,-3,-2,-8,-5,-1,-1,-2,-9,-5,9,-6,1,10,8,4,9,-6,8,-5,-4,7,1,4,6,-10,-5,-5,4,10,-7,3,-10,6,2,3,8,-1,9,-8,5,9,-4,4,-2,-9,9,-3,-10,6,-10,8,-9,6,2,-1,4,7,-4,6,-7,5,7,-4,-8,-7,-9,6,-3,6,-8,4,-8,-10,2,-10,-10,-5,-2,-2,-9,-9,-5,8,9,5,10,-9,-10,1,-6,-3,6,3,-6,8,-7,4,2,-2,-6,10,6,-4,-10,-10,-6,5,10,-9,5,2,4,6,9,-9,-6,-1,-8,-1,-10,7,6,9,9,4,5,8,5,-7,3,-3,3,-3,1,-1,7,-8,-7,-2,-2,10,6,9,3,10,-10,-5,7,5,-4,-8,4,5,-10,8,7,1,6,-5,-6,5,7,8,-7,-9,-1,1,10,5,-7,4,-2,5,7,-7,6,8,1,5,-10,9,1,5,10,-5,-4,8,6,-4,-7,3,-2,-7,6,2,-8,7,5,-5,1,-1,-9,-1,-4,7,5,-5,2,3,-5,3,-10,-5,2,9,9,10,-8,-2,-5,6,-8,10,-4,-7,-10,4,-3,-2,-10,8,-10,7,9,-2,10,-8,-10,8,3,-5,-8,-2,8,5,6,9,-4,-6,8,9,8,6,-8,-4,-2,4,7,-2,-10,7,2,2,2,9,7,-10,7,-5,-2,4,9,5,-1,-5,4,7,-7,4,-6,-1,-2,10,-9,-2,3,5,3,-9,7,-7,3,-8,4,10,-4,-5,-4,-4,7,3,2,-3,8,-9,-6,-5,-10,-1,-3,-4,-4,3,-3,10,-3,-1,1,-7,-8,3,3,-4,8,-9,10,10,-4,3,-2,-9,-8,-7,6,7,10,-9,5,-10,-3,-8,6,-7,2,10,-3,-8,-9,9,9,-1,-3,6,6,-4,6,-9,1,5,-6,-9,1,-1,2,-8,-3,2,1,-7,-3,-5,-5,3,2,1,-2,8,-10,6,8,-5,-4,8,-4,-10,8,-7,-2,8,8,-4,2,6,3,-5,7,-10,6,4,-5,-6,4,5,-2,1,-4,2,9,9,-9,10,6,-7,-2,-10,-7,-9,8,6,6,-1,4,-6,1,-4,-2,6,-8,8,-6,-6,-5,-4,8,-4,-9,3,-10,6,-4,2,7,-4,3,-5,-10,-3,-6,7,-1,6,-8,5,8,9,-4,-10,3,7,3,6,-3,-8,8,-10,-10,8,7,-6,-5,-7,-8,-1,10,-6,2,-6,-2,3,-4,8,-1,-2,2,-3,4,9,8,2,9,-1,-3,7,3,-5,5,1,-4,4,10,6,-9,6,4,-5,8,-6,-5,6,1,7,9,-3,10,2,7,3,-10,5,-7,-8,8,-5,5,5,7,3,1,-10,3,2,-9,-6,-2,-4,3,3,4,-6,-1,4,-4,-5,-10,7,-8,-3,-4,5,-10,-4,-9,-6,-4,1,-3,5,-1,-4,7,4,2,2,6,9,-6,-1,-9,9,7,-1,4,-2,10,4,9,5,-5,5,-4,-7,7,-7,-5,2,-4,-6,10,-3,-4,-8,-7,2,9,5,-2,-6,-2,-7,-9,9,-3,6,-3,-6,6,-7,8,-6,7,-2,6,9,-3,5,7,-9,-10,-6,2,7,-7,-2,4,-1,3,-1,1,9,8,6,-9,-8,10,2,-7,1,-7,-8,-4,3,2,4,-4,7,-6,-9,-10,6,4,-1,10,6,6,8,5,-5,5,-10,4,-3,10,9,-3,-9,6,-10,3,-4,2,-9,5,-3,7,3,9,-4,-10,-9,10,9,-8,-2,5,-10,-10,-1,6,7,-7,7,-4,3,5,-6,9,-9,-4,-8,7,-3,10,9,-10,-1,7,-1,8,7,-7,6,-8,-5,-6,-1,-2,9], dtype = "uint64")#candidate|2935|(832,)|const|uint64
bop_2936 = relay.bitwise_and(const_2920.astype('uint64'), relay.reshape(const_2935.astype('uint64'), relay.shape_of(const_2920))) # shape=(832,)
output = relay.Tuple([call_2914,call_2916,const_2917,var_2918,var_2919,call_2924,bop_2936,])
output2 = relay.Tuple([call_2915,call_2921,const_2917,var_2918,var_2919,call_2925,bop_2936,])
func_2941 = relay.Function([var_2918,var_2919,], output)
mod['func_2941'] = func_2941
mod = relay.transform.InferType()(mod)
var_2942 = relay.var("var_2942", dtype = "uint64", shape = (1008,))#candidate|2942|(1008,)|var|uint64
var_2943 = relay.var("var_2943", dtype = "bool", shape = (520,))#candidate|2943|(520,)|var|bool
output = func_2941(var_2942,var_2943,)
func_2944 = relay.Function([var_2942,var_2943,], output)
mutated_mod['func_2944'] = func_2944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_2955 = func_2900_call()
call_2956 = func_2900_call()
var_2957 = relay.var("var_2957", dtype = "uint32", shape = (4, 1, 3))#candidate|2957|(4, 1, 3)|var|uint32
bop_2958 = relay.subtract(call_2955.astype('int64'), relay.reshape(var_2957.astype('int64'), relay.shape_of(call_2955))) # shape=(4, 1, 3)
bop_2961 = relay.subtract(call_2956.astype('int64'), relay.reshape(var_2957.astype('int64'), relay.shape_of(call_2956))) # shape=(4, 1, 3)
uop_2970 = relay.rsqrt(bop_2958.astype('float64')) # shape=(4, 1, 3)
uop_2972 = relay.rsqrt(bop_2961.astype('float64')) # shape=(4, 1, 3)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_2986 = relay.var("var_2986", dtype = "uint64", shape = (832,))#candidate|2986|(832,)|var|uint64
call_2985 = relay.TupleGetItem(func_33_call(relay.reshape(var_2986.astype('uint64'), [4, 13, 16])), 0)
call_2987 = relay.TupleGetItem(func_35_call(relay.reshape(var_2986.astype('uint64'), [4, 13, 16])), 0)
bop_3005 = relay.floor_mod(uop_2970.astype('float32'), relay.reshape(var_2957.astype('float32'), relay.shape_of(uop_2970))) # shape=(4, 1, 3)
bop_3008 = relay.floor_mod(uop_2972.astype('float32'), relay.reshape(var_2957.astype('float32'), relay.shape_of(uop_2972))) # shape=(4, 1, 3)
func_2441_call = mod.get_global_var('func_2441')
func_2444_call = mutated_mod.get_global_var('func_2444')
const_3010 = relay.const([3.325794,-3.998425,5.739608,-6.309005,-3.826913,-9.712388,0.130271,8.473636,-0.200396,-1.924964,-6.739586,-9.519554,9.469400,9.313706,8.701123,-2.471129,-6.321899,6.157996,-1.556431,-5.582507,-2.943493,-2.818462,1.156275,-8.376106,0.367633,-3.902637,-7.143289,-8.591532,-4.676767,-0.998396,1.455701,3.714791,1.059544,-3.941525,-6.826435,-6.638070,8.606214,1.878023,7.503384,-6.315416,-7.349524,-4.937089,-0.196401,-1.275369,-0.654661,-4.262090,-7.560102,0.716384,-5.348091,7.177601,-6.337909,5.950077,2.010927,5.005674,7.544563,1.030297,-2.576942,-4.320284,-8.657157,-4.611392,8.183824,3.532812,-4.734536,4.626371,-2.354358,0.262475,-2.629935,-0.833441,7.671480,-3.279091,3.400558,0.038100,7.919297,-5.888179,-3.047609,-0.202791,-4.763175,3.573868,-4.917638,9.032824,-9.095925,-1.223171,-2.145367,-2.386744,-7.970657,-1.203133,-5.237005,2.847193,9.413071,-8.499318,-7.462214,1.967827,-7.137656,3.017872,8.049628,2.822490,-8.937955,-1.100558,-0.560992,-3.228491,-6.896151,-6.294486,-5.701434,-8.865679,-0.628516,-7.270634,-9.914909,1.319581,-9.069111,2.077017,8.917626,8.389202,-5.116985,-4.777555,-6.234409,2.919777,4.460434,-3.526460,-3.603032,4.682792,4.765045,7.746400,8.597090,-1.974332,-4.423408,9.931296,-8.989397,2.733700,3.271377,0.543553,-2.085180,-7.619428,-9.223329,-6.126573,1.141737,9.885705,2.094340,-4.911791,0.954652,-4.861052,4.961037,-5.120891,4.473733,-7.691295,5.049788,-0.945766,1.336271,-7.664196,0.947314,-5.070928,-2.451154,7.860580,-0.685314,5.840863,-4.832694,0.947507,4.270491,6.062105,1.254214,6.163670,3.676662,4.589564,-0.997517,7.954112,-4.033427,7.878407,1.484750,-9.947317,-7.835632,-4.479076,0.885208,-2.333883,4.999501,7.138296,-4.333307,0.084760,5.702952,-1.669463,-0.534926,4.677661,2.205884,-4.925448,-7.246811,-2.717177,-9.346840,4.713974,8.233651,-1.373491,-0.071502,8.587525,3.216764,-7.737668,1.081809,-8.515592,-1.741885,-0.863717,-1.631773,5.025530,9.019034,-1.391333,-8.554203,-9.599524,5.865818,-7.703047,-1.842357,-0.481495,-8.387885,-2.175982,6.769916,-1.817002,0.042693,2.801612,8.076649,-3.113840,3.459255,-9.001686,-2.771362,9.780938,4.676362,0.271823,4.246053,1.862028,6.675126,-7.090937,3.102806,-3.611173,0.675878,-8.992551,-9.242444,-6.381673,0.382848,0.378174,9.498299,-0.198342,-2.275629,-4.714469,5.343699,-1.300043,-6.967753,-2.656783,5.685890,-0.048407,-2.302954,0.629910,1.563202,-9.517100,-0.075048,-2.235740,-8.663138,-1.240363,2.938591,8.393466,3.426458,7.609904,-9.005266,6.195879,-3.896761,-3.636390,-2.340024,-9.686873,6.371079,1.138455,-1.499780,2.819583,-7.997803,-4.508934,7.926683,-5.837906,2.159721,-8.704986,6.398972,0.637345,4.173963,3.949450,5.618992,5.306451,-8.708680,-7.108986,-2.938564,-9.095201,9.757793,-3.066790,-2.949467,4.863891,-4.764657,6.672307,7.851118,-6.059076,-9.410854,7.783414,3.810400,0.286025,8.530763,-5.079414,0.127424,-0.343999,8.066848,8.323118,2.589068,0.234184,-4.247552,-1.804475,4.646325,-9.906614,-1.326553,7.790972,-2.712436,7.243901,-1.636374,-7.214907,-2.140442,4.396952,3.222348,0.471906,5.476983,7.067023,5.780075,-4.829319,-0.062970,5.552125,-3.392500,-7.472549,2.583608,-0.291104,7.351960,4.213317,9.403736,-6.476314,-5.226714,8.571601,-4.310491,7.992691,-6.588653,5.637463,3.045131,0.251935,2.221987,-8.598821,-6.650453,9.789036,0.192132,8.011030,4.279290,-0.016866,-7.846703,6.420929,-4.279544,-2.165731,-7.622748,8.282902,-3.621758,3.938409,-2.259264,-4.208373,-6.177789,-6.097856,2.280720,-8.003327,9.343327,-2.517580,0.631382,8.837107,-3.093227,-2.960192,6.104600,-7.667943,9.110374,3.187986,-8.914526,-0.383074,2.116779,-9.396170,-0.370015,7.314558,0.408847,5.552884,-9.405448,-2.795675,2.312060,0.674039,-3.902262,-0.229197,-4.295443,3.131446,-7.587779,5.292598,0.410774,-7.358269,6.299089,4.845315,8.545799,5.654317,1.291434,-1.565719,-5.278563,9.747207,-2.193270,-8.467137,-9.410669,1.364388,7.406690,-9.902481,-4.292205,4.830715,0.716505,2.133776,3.764495,-2.481334,-0.125935,3.098138,-6.949121,-7.878439,0.426235,1.372232,-8.005880,-7.589410,-8.767642,-3.157070,3.065056,-6.633827,6.594195,2.287366,-4.716828,8.555773,-4.876313,5.657254,-9.020063,6.248242,8.033713,7.405697,4.300361,5.883258,-5.247236,5.137427,4.965454,-2.047674,7.922978,-7.955990,5.765630,-9.847490,-5.334446,9.518711,2.599584,-1.743738,0.944025,4.488482,6.095491,-6.726233,-2.732159,4.463238,2.432255,-5.684354,1.539975,-8.544298,1.584678,1.928606,6.520500,-5.978509,0.758112,0.975305,-3.225473,-0.373377,5.821909,9.680345,-4.864791,-2.854344,8.813610,-5.853256,3.510824,8.605029,1.821258,-8.523319,0.003648,-0.366095,-1.016756,-6.152954,-3.229249,-6.037297,6.209333,1.475484,1.943260,-3.472365,9.653780,3.933624,6.462535,3.302777,6.636741,5.278983,-4.538265,-9.471476,8.468535,5.049619,0.274473,-5.030222,0.226825,-7.331474,6.552035,6.397235,9.283295,9.342112,-5.559716,3.266886,-6.938237,-9.023089,-8.330738,4.207359,6.559080,5.564170,4.672030,-5.625820,-3.073733,1.702432,7.673923,-1.630287,5.082686,5.928615,-5.506659,-7.321858,-8.353767,1.230540,3.061725,-1.081699,3.835700,5.116106,6.522909,0.406571,-1.344971,1.588631,-6.771096,-6.557761,5.056425,8.969089,-8.365428,3.576087,-8.520003,-9.470280,2.842801,7.665123,-1.392610,5.554498,-9.842334,6.462588,1.243365,-9.199179,-5.317512,-1.998944,-6.633834,4.756599,6.677483,4.981818,3.650551,7.123602,8.103056,8.978393,7.443188,1.078927,-5.532589,-3.112340,-1.937280,8.165134,4.310131,-7.256731,3.950076,-6.029022,-8.788980,-8.110148,5.434266,2.865275,-6.073052,8.073605,1.159758,0.224025,4.753151,-9.542006,-9.040059,8.152483,8.424426,-8.761740,0.995350,6.552320,-4.521202,-1.865961,1.700873,-3.645049,-0.616467,7.024196,2.524802,3.720021,-5.222055,-7.817154,7.012326,-9.872904,2.475612,6.692916,1.544138,6.102612,9.479410,-5.940549,6.309470,-6.904996,-2.415702,3.068652,6.749872,-0.868462,-8.706312,-7.737321,-6.325324,-5.087273,8.887886,8.288195,-1.804898,2.071824,-2.755177,-1.002547,-8.120794,0.888918,-2.324451,-8.297383,-7.508372,4.059385,9.171814,-8.574486,-3.804098,-6.837608,9.894784,4.007092,-4.922012,1.507745,-2.272192,-6.990866,-0.957294,4.969061,-6.479747,-4.560674,-1.436199,-5.832764,-1.012073,-9.835949,2.351394,-6.330487,-3.485277,1.731477,-7.717928,7.210441,-2.573655,-2.617265,4.119435,-7.408374,6.926532,-2.370885,-2.458841,-5.791014,-8.719578,-5.404542,4.033105,-4.608832,-1.085495,-7.325589,-7.377195,3.446499,7.053080,3.752372,8.630616,-7.947145,9.013748,-0.128569,0.590790,-5.912662,7.862491,-4.173213,0.480741,-5.387404,-5.342373,5.617789,-6.953301,6.065512,-4.443648,6.086688,-3.939886,-8.731628,-7.308093,-1.416804,4.478329,7.409914,6.789271,5.709877,-4.157098,-0.351525,-1.102470,6.762577,-3.389122,-2.619170,-3.251653,-6.448365,-9.742178,-8.811317,5.236041,-0.223446,8.967293,-4.536633,2.198964,5.061564,1.988628,-2.431079,8.748676,3.227826,4.713853,-6.321191,9.716566,-5.999419,-9.854543,-6.866043,9.392666,-4.097314,1.871392,0.053479,0.912973,-8.740598,-8.931380,-9.768334,0.956049,6.948444,-1.967963,-9.913783,-6.514454,0.366019,8.276126,6.742653,-7.230482,6.998688,-0.877812,2.065936,1.543144,-8.242150,-1.484459,-2.071321,-6.975755,-3.829328,6.138208,-2.184075,-4.400549,-5.410410,-2.287881,-7.187117,-3.314385,-8.242385,5.075309,-6.623489,4.293173,-5.918092,6.537045,2.523965,3.641901,-9.095712,-6.705843,-9.817164,-9.121889,-5.282097,-6.881472,-8.199042,-2.535482,8.020138,-4.150906,2.258710,0.974151,0.168004,-6.776334,-8.134725,5.088828,-1.209496,-9.078631,-8.011419,-0.594962,1.350813,3.977118,8.297188,-2.519857,2.440891,-3.628783,-5.513694,4.701912,-0.687598,4.219883,2.014977,-9.615233,-1.620645,-9.379954,4.230189,-2.620348,-3.088745,-7.445999,2.691309,-8.054526,5.933831,1.555126,-9.814961,-0.629192,-4.341262,-7.901564,-9.795604,-5.654684,4.390845,2.023207,1.307637,8.474337,0.530627,9.585751,-3.232938,-4.153464,-2.754290,4.337259,-2.699959,5.991493,4.133444,-3.764524,-7.082550,5.617950,7.431681,9.554087,-2.831472,-7.718472,-1.604510,-3.106048,-7.030722,7.643239,5.724829,5.417416,-8.516328,-1.425092,-4.999560,8.968580,9.997057,-5.281941,5.362716,5.879687,-0.515921,9.514320,6.705804,8.552836,-1.212478,-6.597080,-2.250957,1.746462,6.052932,-1.631919,-2.764068,-1.997133,-4.238042,3.839835,-1.400001,4.606603,-2.487368,-0.435077,1.910509,5.941256,-8.832314,0.682977,-6.469019,2.277111,-8.076022,6.978615,0.970351,8.476015,3.274712,3.940403,1.123624,-5.702896,8.250080,-3.578713,9.389973,5.722075,1.936553,-1.795597,4.849297,4.477476,8.944142,2.846338,4.091002,9.417633,8.026508,-4.851727,2.899814,-1.182837,3.707124,6.790076,8.543237,-8.127454,0.720850,-4.975407,-9.747232,8.109983,-9.901628,-3.366471,0.719344,-4.287528,-3.943332,8.030579,-0.861858,3.399708,-4.315469,-6.510799,9.018073,5.315539,9.724169,8.113940,0.546831,2.053296,4.080445,4.351691,4.439095,0.786433,6.967252,-9.485621,8.035387,3.224545,-8.831537,2.160178,9.937422,7.748433,-4.202526,-9.926609,4.370057,1.939744,-7.874925,6.595561,0.373349,9.535851,5.172002,-7.955187,7.314750,6.696271,5.044614,6.903355,1.234848,9.189336,-3.584558,1.867438,8.305434,-1.516171,-5.981830,-4.657932,1.889853,-4.147123,5.401180,7.603716,-7.638115,-9.217114,5.665862,-9.938633,-7.904233,-9.250574,-0.689359,-7.230907,-7.079426,8.702670,-8.696145,-4.657092,7.314391,6.629594,4.264225,-3.197521,0.931316,1.969875,-1.207290,5.514338,6.761001,3.889923,9.045265,-8.477352,0.473587,-7.576637,9.394987,0.296550,4.131022,9.991103,0.454374,2.419887,-9.165300,2.094210,-2.159521,-8.211695,-6.370544,4.184387,7.616542,2.548003,4.678698,3.788271,0.494236,-6.415235,2.970675,7.120600,0.651335,1.962658,-7.426600,-3.814937,8.331593,-7.406595,5.600299,0.511631,5.818696,0.609912,8.350309,9.362627,4.273933,0.462616,8.441854,7.531003,0.748149,1.766474,7.254507,3.489584,-0.594912,-7.740471,5.245843,-2.138873,-2.494715,-3.856952,-9.637447,-5.468768,8.740089,-5.037420,4.945783,4.610402,-6.752696,-1.934668,-6.185139,-9.304139,3.977836,-9.716984,9.166644,-9.912833,-4.283987,9.510303,-4.375248,-0.548929,9.179111,0.057856,-3.889245,-8.908288,7.159469,-2.625889,-3.611465,-9.780849,1.796965,-5.618588,0.343253,6.017843,6.354747,3.044636,-1.030407,7.541814,-4.964158,-9.846667,4.972059,-1.555137,2.567738,4.739048,5.616816,-7.230240,-9.103518,0.680592,8.646339,-5.181383,0.903702,-5.501083,4.503045,-1.340801,-3.557097,7.040345,0.431670,-6.643745,-4.280079,-3.248897,6.535780,5.558851,6.712439,-5.557503,7.991055,-4.750367,-5.189667,-2.088135,-7.128826,9.487330,-9.163008,1.267745,-1.410808,-5.408923,8.214109,9.712992,8.245280,-3.563662,9.974812,3.728404,0.912495,-3.075475,2.802554,-6.683909,6.190279,-9.684037,-7.123685,1.106778,-6.285966,7.360860,-7.941065,-8.772242,0.372340,-6.899194,7.740059,3.327981,8.118793,-5.235835,0.790932,3.145173,8.683179,-2.206943,2.728323,-1.165628,2.041183,8.942471,-1.908097,-9.273801,-0.201929,8.098624,-8.490819,8.524425,-2.317039,-8.852099,-4.473924,-4.475441,-2.985870,6.887554,-6.828487,9.067086,4.176515,7.649035,-6.364393,-5.039225,-3.403356,1.941213,-9.819580,6.958144,-2.709305,-0.001350,8.750031,-2.745725,9.546191,9.848230,-4.537923,-4.994597,6.487724,2.875793,9.527119,-8.279623,7.357487,-8.382144,-4.150963,-4.315695,-4.156513,6.139751,8.350747,3.225995,9.378331,-0.232494,7.118050,-8.680795,-2.821894,-1.175566,0.328226,-0.720111,-4.479085,-7.976384,-2.979478,-5.027640,-1.327837,-2.993997,6.329612,-6.747496,-9.379739,-0.606273,5.066668,-4.435211,4.508019,4.164120,5.518772,3.770388,1.239337,6.673911,8.406620,-0.850230,3.458994,1.943990,-3.676552,-4.160465,8.121815,-2.667711,1.914970,-7.398297,8.481716,2.257031,4.912479,8.846300,-4.367943,-3.441282,-3.079358,6.141907,0.569621,-5.191366,2.598129,-3.763476,-3.706833,2.456422,2.892163,-4.290187,-2.533034,-1.218221,-2.282202,-3.599024,-2.175116,-8.815763,0.611733,-0.976600,4.071396,-9.722850,6.356198,0.688423,0.941989,6.547553,-3.596954,6.307302,2.120010,3.506702,9.762135,1.341122,-9.852985,-4.598969,7.576764,7.386787,-0.959138,5.853717,-2.608137,5.054857,-1.631916,1.605866,-8.747689,1.451056,-2.200393,6.906618,-5.013606,6.855475,0.060376,-0.106519,-1.198321,4.707761,3.618894,0.712035,5.087011,9.740587,0.153442,-5.831726,0.512898,-6.106912,-2.762909,-3.357508,-8.012475,-2.982713,9.580138,-8.234767,-9.379064,-9.284598,5.450007,3.313566,-7.923240,-9.155307,5.511183,9.254708,-2.855470,-0.792753,-9.995293,6.049511,-3.775053,-2.913411,-6.804119,-1.035168,-8.695637,-4.780990,-2.959405,-8.385851,-0.069042,-4.914160,4.032107,-7.264131,0.377310,5.982829,0.586077,-9.233820,-4.873662,-4.428270,-5.839530,3.027547,1.072152,-5.606914,6.526886,8.764978,3.697635,-7.210024,8.828165,-6.474182,1.108601,-4.771700,-8.856584,4.707349,6.890650,7.910194,-3.977363,-2.624388,-2.981644,5.608783,9.962176,3.367122,-6.563614,-9.126077,-3.870003,7.149903,-7.964740,8.991845,-5.353131,5.460907,-7.597862,0.114040,0.216350,-6.714121,-7.471636,5.918030,-5.668981,-9.520229,-4.918535,0.749743,6.982262,0.061853,-2.229649,-1.171731,5.724224,0.516538,-2.693020,-6.498454,-1.770042,5.092269,-2.034146,4.464993,9.284913,1.736583,-3.149929,0.655824,4.229012,7.572039,5.894161,0.994000,7.170795,-2.754887,5.187653,3.151621,9.814604,1.083530,9.632279,4.778234,-7.732636,6.418641,5.640221,4.258228,2.718514,-5.492965,-8.119550,9.557068,-4.164080,-6.356548,-8.071680,-6.187845,-2.027616,6.196887,-4.341163,5.973364,2.528227,8.961191,3.026205,-1.673897,6.737830,8.153264,-5.857204,9.868316,-2.128828,-4.894841,1.139562,-8.342301,-0.724871,5.495236,-9.862670,-8.860738,5.531867,-7.950147,-9.539625,6.867275,-8.015742,9.449173,1.405006,9.070579,-3.122275,-2.832318,-5.755448,-5.301605,-8.712658,9.117608,-5.136673,0.357339,3.017167,-1.299591,-3.777921,1.752617,-4.471298,7.323081,9.931589,9.500608,-2.947693,5.143358,-4.668539,-4.807549,-4.138854,-0.921330,6.734237,-4.596395,0.225316,-4.232120,7.706346,-8.771185,-5.473177,2.136968,0.299989,-1.062993,9.647803,-7.961787,4.457664,-1.104651,0.018078,-9.608795,-2.002418,2.951077,2.264177,7.351560,-1.218834,-3.617618,6.216341,-0.518052,-2.789505,7.112237,3.479024,9.814556,-7.691686,-4.753180,-2.272879,-2.008737,8.661659,2.667434,4.225280,9.487044,-7.796412,-4.343595,-5.372266,-5.629192,1.258878,-8.308292,-8.263659,3.011650,3.604909,-0.752926,-0.092004,0.380727,-8.302279,-6.108547,9.664467,7.056096,2.390913,-8.021016,0.380311,-2.926625,-9.302263,1.495720,1.482019,7.049851,-8.591772,-0.751228,-8.954316,-6.280160,-7.954648,-7.850459,0.209344,-4.539592,4.927667,-9.159881,3.841966,-5.627281,6.384554,-4.183074,-0.489147,5.554856,0.653703,-1.915780,1.311268,1.097961,6.469327,-7.522947,9.679509,-6.076973,4.998319,5.093083,6.780611,-9.353028,7.066995,6.221139,-4.181412,-2.352789,0.892624,3.872489,-9.111574,-5.590225,-5.665715,-1.588908,7.477349,-1.181388,3.468196,-4.300324,2.913058,5.011475,3.903365,9.027724,5.602760,-6.163355,-5.819113,-1.381634,-3.154958,-6.517454,0.324631], dtype = "float64")#candidate|3010|(1540,)|const|float64
call_3009 = relay.TupleGetItem(func_2441_call(relay.reshape(const_3010.astype('float64'), [14, 11, 10])), 0)
call_3011 = relay.TupleGetItem(func_2444_call(relay.reshape(const_3010.astype('float64'), [14, 11, 10])), 0)
output = relay.Tuple([call_2985,var_2986,bop_3005,call_3009,const_3010,])
output2 = relay.Tuple([call_2987,var_2986,bop_3008,call_3011,const_3010,])
func_3017 = relay.Function([var_2957,var_2986,], output)
mod['func_3017'] = func_3017
mod = relay.transform.InferType()(mod)
var_3018 = relay.var("var_3018", dtype = "uint32", shape = (4, 1, 3))#candidate|3018|(4, 1, 3)|var|uint32
var_3019 = relay.var("var_3019", dtype = "uint64", shape = (832,))#candidate|3019|(832,)|var|uint64
output = func_3017(var_3018,var_3019,)
func_3020 = relay.Function([var_3018,var_3019,], output)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3031 = relay.TupleGetItem(func_2713_call(), 0)
call_3032 = relay.TupleGetItem(func_2715_call(), 0)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_3045 = relay.const([4.787552,6.246470,-2.428498,3.103255,-9.527710,8.249030,-2.246863,-3.406874,1.673867,6.534822,-1.152117,3.666154,-2.285748,-8.621022,-2.538229,7.866784,4.643708,6.119788,-2.283578,-4.451213,-1.957914,1.054510,6.540797,-0.107491,-6.818188,8.963613,-4.980679,4.583864,8.516387,-2.204331,7.807835,9.969706,-1.483983,3.073767,6.367541,-2.738986,5.041197,-8.916915,4.795425,5.254309,9.799802,3.922415,9.848537,-8.395917,-8.110829,-6.526220,-6.070839,-0.545590,1.019830,9.607032,9.292283,-6.074368,3.958891,4.125229,-4.916058,-2.688608,4.577470,5.263186,-6.095092,1.130633,8.348582,-4.305295,2.651474,-4.430491,-3.367760,0.345757,5.185321,-6.245100,-6.377671,-1.216400,-6.472948,-8.231200,-5.062687,4.705797,0.812511,6.621513,-5.373613,-3.227481,-7.179379,-5.492553,-8.182761,-3.467181,-3.035498,-9.133160,-1.784822,7.511323,5.913901,-1.260675,0.532638,-7.216716,-4.069663,0.742462,-1.632784,-8.385491,4.923424,9.715220,-9.805911,8.306848,8.434189,5.008166,-7.214819,-9.846924,7.053198,9.606291,-9.615750,0.786750,7.728081,-4.255317,8.298647,-0.691779,9.230672,-9.600536,8.595969,-3.090745,-7.873942,-9.091382,-6.271599,-5.886358,4.609122,0.599805,-7.244305,-2.466122,3.585036,6.810503,6.115427,0.943172,0.594071,-3.288376,-8.627701,8.207526,9.953120,6.789121,9.216148,9.979097,-4.258336,-5.091744,9.404591,-2.874078,7.497728,0.672932,-2.706080,-0.792402,5.024468,-8.113712,1.918141,-0.280109,-7.803549,3.890331,1.244248,-0.136443,6.812402,-5.090951,-8.348095,0.771097,-3.196744,-8.497312,-8.470558,2.415710,-3.187579,6.362137,0.420426,-3.605362,9.126308,5.786689,-1.186964,-6.329809,9.270789,-8.173084,-2.372362,1.205107,0.380938,0.188549,-9.555068,1.989564,-4.701032,1.983537,-6.790375,9.288992,3.766777,-2.123698,9.489640,9.832813,-8.026220,-5.266782,0.739082,5.873306,4.182975,-7.372444,6.876798,-9.916239,-7.477701,-4.572030,6.276147,4.300289,-7.892708,-3.272036,-7.256213,-4.012606,-2.174579,3.938373,5.377179,-0.485426,9.726050,-2.304229,-8.006049,6.085998,-4.188018,9.279410,1.061060,-9.950558,-6.069537,6.147641,-6.396213,0.972276,-0.867941,4.573336,-1.689303,5.971377,-2.853348,-7.970569,-5.362509,-9.247927,2.948394,4.903427,-3.095967,2.706881,-1.764735,2.825897,-1.306717,6.203803,-7.553763,-9.490110,-2.562051,-5.122170,-4.456530,6.708976,-8.420093,5.419367,9.595466,4.926668,9.311478,5.059384,8.290904,-5.854702,7.889297,4.058765,-5.046202,-7.910604,7.667850,-3.316871,-5.414367,-0.797389,5.623237,-4.135664,-4.848101,-9.471344,-4.890804,-4.986410,-2.426513,-5.788552,-0.884277,0.609277,0.362086,-6.115019,0.531813,-3.647583,-9.873765,-9.020684,2.603712,6.096229,-7.542527,7.573395,7.533881,2.890346,-0.710327,0.309596,5.845185,-7.763183,1.394641,7.474996,2.607586,-3.099383,-8.243717,8.136913,6.397297,-5.585133,-4.837549,4.975114,0.733248,9.176843,-3.860258,-9.920434,-2.204418,-4.587727,5.239429,-9.962482,-7.410896,9.138320,0.041398,-0.322244,7.129752,2.682013,-9.434537,3.262206,9.809828,9.724334,5.060704,2.752263,-1.113215,9.624244,9.897886,-6.433197,-4.176040,-7.416403,-9.548363,6.836833,1.968859,2.241360,4.348729,1.166195,-1.384685,-5.931267,7.920952,4.216937,0.959972,0.164434,-6.022509,-9.540715,9.794167,-8.678998,5.481738,3.170639,-7.942200,-1.709929,4.635055,-1.954533,4.355824,-5.013659,-1.825740,-4.705916,-1.089227,-3.955712,-0.422333,-2.369098,-7.789962,8.918404,-9.352490,-1.596525,-7.190635,-4.071840,2.553121,7.565512,6.352116,8.825258,2.847950,6.430706,9.324441,-1.285393,3.539875,-7.222313,4.365411,1.470946,-1.968306,7.476800,9.540020,7.766617,-1.343960,2.664661,-2.538052,-0.979407,-9.896352,8.206416,4.700719,9.666858,-6.444537,-3.794548,-0.006999,6.258111,-1.544502,6.232908,-2.892475,-7.959234,5.973686,-8.628651,-9.575897,7.846530,5.774939,-3.370047,-0.301744,6.195290,6.196951,-9.120230,7.729083,7.268355,-9.708439,0.593065,6.301975,-0.406023,1.512177,-2.389027,9.348868,1.392859,-4.258175,7.124427,2.368836,-6.209228,9.926801,-4.566444,-9.369155,-3.650536,-4.721227,-7.982118,4.694556,-7.217927,4.356746,-2.214759,-7.218513,4.281003,6.168066,6.874125,3.539250,-8.058802,1.362984,-0.521853,-5.621997,-9.042631,-7.408751,-7.763546,1.418040,4.798975,9.798521,4.065968,8.105625,-2.144829,-1.461353,6.267764,5.056658,-2.593067,5.662016,9.231506,5.044567,-3.872972,-2.339229,9.539409,-3.980520,-8.019354,-1.342703,0.200222,7.852441,-0.964268,-5.562330,1.662756,3.771113,-7.224541,-4.877918,-2.648353,4.964270,-4.891289,0.644076,-5.644904,-5.014086,6.747541,-7.561630,-6.390562,9.811459,8.263336,-3.173150,2.401627,-2.518952,-2.983468,9.769664,-7.970411,-6.204919,-3.702495,-0.138047,8.650432,-1.216549,4.834645,8.389631,-5.653664,2.890528,-7.274264,-3.809926,6.973546,1.231934,-1.643226,3.604169,-5.336418,9.352289,8.122058,1.231210,-2.971982,-0.237946,-1.320825,9.986937,-6.963781,3.049764,-8.130279,-6.564082,-3.255243,-0.662429,9.530014,-2.831686,7.331912,-6.513562,9.525676,0.110253,3.919314,-1.664127,7.816410,-2.701746,-2.057696,7.292960,-3.095821,-7.758308,3.361231,6.067532,-9.726391,-8.988732,0.986301,8.955714,-8.361006,-9.970880,-7.421255,-2.715539,-6.459733,1.842543,-4.498235,1.024371,-2.109174,1.103182,-1.397376,-3.153407,-6.892346,-5.633070,-9.894743,7.074178,-1.223723,-4.597852,-6.649204,2.837527,-7.925805,7.902798,6.987232,0.841256,-3.753871,1.864495,6.530911,-6.957461,1.933437,6.554362,-8.992550,-0.803309,-8.925974,8.687355,4.454642,4.624155,4.732630,-3.612701,3.476067,-3.159956,4.940662,0.855373,-5.470676,-1.331934,-2.344936,0.823750,-0.683736,-2.895056,-8.065666,2.686099,-0.453613,3.548581,6.190103,-1.438652,4.509610,3.069323,-7.261896,2.877734,-0.241169,-5.398515,5.602509,3.476118,-5.922823,-8.082233,8.924514,-9.799542,-7.104195,2.248661,-5.187833,4.015419,-7.715170,-3.043585,5.646207,0.518166,6.085198,-1.852000,2.349170,6.222938,8.150651,3.166497,8.617850,-5.762836,1.361196,-8.148416,6.964757,-2.834170,-3.971392,5.171029,-0.002839,7.031062,-5.775557,0.378152,3.195353,2.081778,-8.057540,6.464142,0.036628,-8.733089,4.421184,-6.234685,-6.387741,-4.183744,6.489284,-5.746010,1.920921,5.681451,6.393544,9.774994,6.799263,-4.745115,4.524298,-1.525512,1.233759,-8.380914,1.334742,-9.958188,1.501586,-2.566170,-5.617430,-4.547046,-8.146494,0.371592,-3.979279,-1.448229,-9.381084,-2.860524,-0.073762,-2.401228,0.722522,-4.367550,4.260486,-1.078597,0.462045,0.352131,4.876995,7.590430,9.741492,2.001158,-8.131010,-6.172868,-2.202137,-0.101401,3.373222,6.386588,8.397930,9.082059,-3.042674,6.450463,-1.588510,3.163867,8.450676,8.809175,6.409159,-7.142550,-1.442937,-1.998471,0.721620,5.510200,2.265779,0.861508,-9.150873,4.238411,-5.406666,-1.904093,4.198177,-4.747065,0.692942,-8.612356,9.685192,-3.345135,9.039735,-7.450790,3.523540,3.342939,-8.687462,-5.893903,4.971920,0.684530,-3.568891,-0.029839,5.529803,-2.223555,-0.207134,-2.059962,-4.535800,3.628686,8.578684,-5.734102,7.544765,-4.481757,5.621044,-5.324774,-0.124065,-3.774772,9.721115,1.457934,-8.239925,9.047641,-4.881717,-9.602291,-4.260062,-3.868828,5.257990,4.823270,-0.688385,4.233667,-0.593731,-5.436196,4.939572,4.663071,1.256024,-1.204356,8.182453,-4.394152,0.519230,-5.931660,-2.660477,4.851160,0.754799,-9.490831,-1.536027,7.316878,8.773028,-7.140359,5.171287,1.876593,-6.376122,-7.739135,-0.620009,0.299998,4.189057,7.449390,-6.615534,2.151908,4.773818,2.977444,2.214621,-8.182349,-1.107216,-0.410530,8.195434,-0.572087,3.830636,9.667242,9.792230,6.093229,-9.537213,-7.186797,5.342988,-6.981685,1.720126,0.180848,6.389652,4.269128,-4.270857,5.882596,4.240455,8.746744,-1.173481,-6.360788,8.154285,-7.293651,1.905537,-3.059459,-7.741445,3.050725,-0.746559,1.439111,7.216898,1.455504,-8.136154,9.104616,-8.460407,-1.022512,5.085249,-1.676157,-9.575048,-9.663633,7.191767,-5.893343,7.317624,2.359145,-5.966459,8.060986,4.790465,4.913087,2.007116,1.434478,0.967038,-9.662864,6.036076,5.604558,4.876785,6.464621,-8.070086,3.574429,2.821788,5.617701,1.788698,8.368332,7.461406,-7.363554,4.908448,-5.605469,0.054615,8.520186,6.729440,-5.479446,-8.239407,9.397440,1.243503,8.177820,7.381533,9.815996,3.576692,4.692044,7.629922,-8.124062,-6.639930,-7.282343,3.692960,-1.153228,-3.562980,-9.395686,-1.885143,-6.366348,-9.158882,-0.880110,-6.694903,-2.281032,0.833844,4.689174,3.364643,0.999365,-7.568092,8.897658,-2.322991,8.266834,-1.354540,9.550369,3.061329,-7.809595,6.053619,-2.818528,-7.561282,-2.319819,-2.377449,9.392303,3.754267,0.076126,-0.236087,6.882120,-8.032838,1.182123,-8.337817,5.120057,-4.910525,8.426294,5.580878,-8.118968,-3.216678,5.287134,-6.407241,-0.110648,9.008186,7.633786,-0.479588,-3.572983,9.649641,6.825394,8.863522,-1.849156,2.388698,4.369432,0.590059,-3.753719,-8.867333,-4.442202,-4.111950,-8.819217,8.404364,1.992813,8.922164,-9.357500,-4.697409,-4.906275,9.488562,5.382246,8.891298,1.289323,-3.490407,-0.216994,3.810311,9.961585,-3.119104,8.355983,-6.404336,3.687913,3.035347,-8.779334,-9.501631,5.729800,4.414984,-8.599875,3.781955,0.653399,2.157512,8.828458,2.618775,5.469970,-7.785319,6.128385,1.946427,-1.457693,-1.078294,-0.325425,-4.040563,-1.148213,2.283749,-1.519011,-8.806018,-6.915622,5.535696,-0.550283,5.587638,-0.901059,6.674545,-8.053485,8.118389,2.082108,0.386820,-6.741748,9.659828,-9.638601,1.365975,3.277864,-7.132503,0.590054,7.446818,-9.747278,4.466516,8.031251,-7.409639,-7.991308,-3.872957,-4.922777,1.356953,7.001896,3.099560,0.500321,-6.287345,8.973948,1.275916,1.687196,-6.938152,5.007980,-6.950625,-2.944755,-0.094155,-7.888641,-0.843000,-1.946449,3.777617,-9.011985,9.082789,9.884750,1.914203,3.721046,-5.698766,7.386718,-9.021971,-9.378940,8.547523,-5.258502,7.685510,3.140031,3.100822,-9.795515,8.506544,6.367320,-7.087134,7.644650,4.997244,-6.452715,9.927403,7.416494,-3.118010,-7.411526,-9.949510,2.866435,-2.159495,-7.242047,3.076359,-4.433623,5.836692,5.342010,2.617259,2.250621,3.075676,-5.549232,-2.624737,0.402530,0.264533,-8.376747,-0.417351,-1.353930,-5.377187,-7.051105,3.737293,0.942770,-5.567271,-3.165671,5.152906,4.841259,-2.764994,6.483325,2.022350,9.345482,-9.006923], dtype = "float64")#candidate|3045|(1040,)|const|float64
call_3044 = relay.TupleGetItem(func_2792_call(relay.reshape(const_3045.astype('float64'), [520, 2])), 8)
call_3046 = relay.TupleGetItem(func_2794_call(relay.reshape(const_3045.astype('float64'), [520, 2])), 8)
output = relay.Tuple([call_3031,call_3044,const_3045,])
output2 = relay.Tuple([call_3032,call_3046,const_3045,])
func_3073 = relay.Function([], output)
mod['func_3073'] = func_3073
mod = relay.transform.InferType()(mod)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mutated_mod.get_global_var('func_3073')
call_3074 = func_3073_call()
output = call_3074
func_3075 = relay.Function([], output)
mutated_mod['func_3075'] = func_3075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3092 = relay.TupleGetItem(func_2713_call(), 0)
call_3093 = relay.TupleGetItem(func_2715_call(), 0)
output = relay.Tuple([call_3092,])
output2 = relay.Tuple([call_3093,])
func_3094 = relay.Function([], output)
mod['func_3094'] = func_3094
mod = relay.transform.InferType()(mod)
mutated_mod['func_3094'] = func_3094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mutated_mod.get_global_var('func_3094')
call_3095 = func_3094_call()
output = call_3095
func_3096 = relay.Function([], output)
mutated_mod['func_3096'] = func_3096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_3136 = func_2900_call()
call_3137 = func_2900_call()
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3155 = relay.TupleGetItem(func_3073_call(), 0)
call_3156 = relay.TupleGetItem(func_3075_call(), 0)
func_2821_call = mod.get_global_var('func_2821')
func_2824_call = mutated_mod.get_global_var('func_2824')
var_3160 = relay.var("var_3160", dtype = "uint32", shape = (8, 12))#candidate|3160|(8, 12)|var|uint32
call_3159 = relay.TupleGetItem(func_2821_call(relay.reshape(var_3160.astype('uint32'), [4, 8, 3])), 0)
call_3161 = relay.TupleGetItem(func_2824_call(relay.reshape(var_3160.astype('uint32'), [4, 8, 3])), 0)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_3173 = relay.const([[-6.774541],[-0.217844],[-4.907291],[-2.877776],[-9.280058],[1.752430],[-6.848953],[-8.831106],[-5.141863],[3.143970],[-0.722367],[8.763888],[6.195698],[3.578123],[1.198353],[-7.282274],[-6.978759],[9.040310],[6.743122],[6.421039],[-3.382470],[-3.843196],[-5.644097],[1.069896],[-4.897196],[-6.144193],[6.199724],[4.597017],[-0.882836],[-2.150416],[-2.400964],[-7.089378],[3.172905],[7.692671],[6.561518],[-5.962117],[-9.797025],[-5.785868],[-8.420318],[2.641054],[-3.395057],[0.705659],[-5.935355],[0.429339],[9.217598],[-5.545854],[-3.265091],[-4.121742],[0.815175],[-0.061328],[-6.520553],[-8.675913],[-4.906295],[-3.990892],[2.540860],[1.223067],[9.102507],[3.506147],[-3.401518],[3.233980],[-1.888847],[3.811763],[-2.790451],[-3.418738],[3.875481],[-0.692352],[0.396703],[-1.130058],[-7.997296],[-8.336926],[2.984121],[6.133654],[-1.991422],[-1.041353],[4.661558],[4.543535],[2.877026],[-6.079852],[-7.540110],[0.268301],[-8.404068],[-2.583381],[5.331510],[1.571336],[3.594801],[3.302161],[3.321588],[3.679253],[2.786754],[-0.627911],[9.881282],[-3.578968],[-4.285495],[-5.818449],[9.904039],[2.004914],[-4.145460],[8.924129],[-8.920167],[8.201104],[2.099875],[-1.426053],[4.668701],[-5.443020],[0.977030],[-0.492744],[-9.158331],[-0.034080],[4.797878],[-4.810317],[-3.588645],[-6.897787],[9.689536],[-6.518606],[-6.570759],[2.108868],[-8.744929],[3.453997],[5.547616],[-1.104328],[-8.179063],[-0.614860],[0.193320],[-6.164232],[4.510102],[0.675317],[-8.283484],[-0.132364],[-9.983549],[6.375972],[-2.414826],[-8.609495],[2.685269],[0.962555],[1.900368],[8.721853],[-7.178240],[1.228418],[-8.093914],[-9.264438],[-4.325809],[-1.424400],[-6.253168],[-5.370721],[9.060315],[9.252071],[-2.095651],[3.713695],[9.891789],[-1.570536],[-9.346798],[3.773938],[9.788986],[2.321069],[-7.965850],[-8.574282],[0.334324],[8.837774],[5.733459],[-5.037032],[9.325078],[3.932026],[0.963138],[0.106512],[7.083937],[-2.683681],[-1.946610],[-9.151074],[-0.434195],[0.055957],[1.122829],[4.684000],[-9.128370],[-2.478768],[-9.032484],[7.177109],[4.542705],[3.046744],[8.426894],[7.424017],[-1.190903],[-6.008565],[9.354579],[0.434853],[-8.864471],[-1.043626],[-1.467345],[2.606426],[-8.248169],[-9.203805],[-8.367014],[3.373947],[-0.382894],[8.424611],[6.900277],[-3.256048],[-3.077802],[-1.303052],[4.155187],[6.320238],[7.441257],[-8.039654],[1.877799],[-0.789524],[6.441196],[-5.748456],[-7.945260],[9.847544],[-6.979785],[-1.406489],[-0.614045],[8.415892],[-9.820793],[-4.949712],[1.118308],[3.804276],[-5.395189],[-3.001764],[6.965338],[9.007303],[-1.926578],[8.225675],[2.396073],[0.077132],[6.936978],[-9.247175],[8.535288],[-9.729123],[3.118810],[9.488609],[-2.378349],[0.204240],[-7.291520],[-6.362627],[6.278304],[5.479486],[2.442087],[-4.873652],[1.654042],[-7.085151],[-1.164453],[-1.184280],[-8.423483],[6.884179],[-2.733588],[1.260424],[8.816970],[7.763488],[-2.347436],[-4.825356],[7.226645],[4.554574],[-7.994878],[-6.565041],[-9.149178],[-2.374954],[7.013868],[-9.304848],[9.992360],[9.054639],[-3.317751],[-7.233268],[-9.267635],[-5.884389],[7.034728],[-9.820234],[-1.927486],[9.023675],[2.995409],[-3.339616],[-7.296218],[-0.210895],[-5.607260],[9.548554],[-5.450440],[5.358197],[8.407436],[6.793751],[3.854285],[9.451497],[-5.298444],[9.129807],[7.254133],[5.629607],[-4.691503],[-1.470455],[-5.949002],[-1.177596],[1.943106],[-0.798043],[9.367738],[2.868915],[8.575441],[-1.204680],[-2.041421],[2.841716],[0.941106],[9.162534],[9.509291],[1.797780],[-2.562648],[-6.403322],[4.414740],[4.035899],[-3.496407],[-1.905211],[9.052539],[3.183797],[-2.771775],[5.818364],[7.534939],[8.839475],[-0.967711],[7.318298],[4.211292],[6.499125],[8.179343],[-3.792000],[8.301695],[2.638784],[9.819336],[6.611925],[6.690146],[8.061464],[-6.885611],[-6.973568],[0.276700],[-8.309724],[-4.340160],[9.160502],[-3.409906],[-6.438578],[-0.840543],[-4.891647],[-3.880127],[-4.789984],[-6.535985],[7.671622],[-1.650920],[3.158875],[7.881591],[-1.942262],[-2.766046],[-3.947596],[-5.018113],[-9.643653],[9.055791],[-0.344753],[-6.393678],[2.242185],[0.134743],[-1.731614],[4.357202],[9.753771],[1.656182],[-2.910389],[8.261328],[0.535415],[3.196112],[-5.038673],[-3.207204],[-1.747148],[4.256274],[1.840361],[-3.773838],[3.084477],[-6.077150],[8.775208],[5.703745],[3.180680],[9.566933],[8.258656],[-5.492712],[-6.007507],[0.647876],[-9.241959],[-8.172307],[4.067614],[6.092684],[0.514452],[8.731874],[2.732712],[-1.650727],[0.913308],[-5.239191],[-3.969851],[-8.995634],[-0.973589],[2.099905],[-6.106299],[5.009935],[-6.660388],[8.700639],[-0.359260],[-5.789825],[-3.508475],[-0.785489],[-6.113939],[-4.674811],[-9.337320],[-9.898113],[7.811854],[-0.289843],[-9.595183],[-4.414526],[-5.293690],[1.761065],[1.844802],[-9.138739],[5.074731],[2.747123],[-6.316580],[-4.561673],[7.227043],[-4.687837],[7.264316],[-9.467637],[8.178564],[-4.231121],[-7.332220],[-7.421023],[-9.983903],[4.883770],[8.173970],[5.932538],[0.463526],[-8.947275],[-1.799773],[-5.053415],[-0.652746],[0.815767],[6.753351],[-0.737837],[0.095123],[-8.046639],[6.690561],[-0.933604],[-9.742489],[-8.981043],[-8.122508],[6.881144],[-7.320867],[6.197866],[-7.912434],[-6.249341],[5.874567],[-2.940208],[-4.554250],[5.525496],[0.190121],[0.150382],[0.868626],[-7.108088],[-8.493866],[8.399255],[6.508174],[-8.709988],[-3.049377],[-8.563377],[8.383926],[6.344580],[0.531075],[7.988673],[-3.111437],[3.287020],[0.082638],[2.254659],[-3.675156],[-5.320072],[-0.836439],[8.025379],[-6.899905],[5.357450],[-1.269064],[4.197587],[2.807619],[-2.532032],[-5.719373],[-8.672130],[-0.703593],[-9.315566],[-8.891572],[-8.864832],[-1.980889],[5.922499],[-2.443264],[-3.933825],[-8.440274],[-1.609573],[5.485500],[-7.704212],[-6.940381],[5.491733],[1.615874],[-7.529127],[6.285466],[3.760381],[-3.894803],[7.552586],[-6.228433],[9.175709],[0.007387],[-0.094029],[2.132576],[-2.535753],[-9.162664],[8.853344],[0.112098],[-6.880191],[-1.466005],[9.682509],[2.251764],[-8.118312],[-1.329378],[-2.131876],[-0.178247],[-5.016256],[0.481843],[-7.219925],[8.841148],[-5.865661],[0.414706],[-0.339130],[-2.916619],[0.823200],[5.745205],[1.379593],[0.433704],[-8.445842],[8.180244],[5.991417],[-1.306741],[4.405330],[-3.517628],[8.772635],[5.033180],[6.982131],[3.015207],[1.188228],[-5.904396],[2.926824],[9.931386],[8.362805],[-4.506048],[2.059989],[-1.202485],[4.133409],[-9.569500],[4.183026],[-6.871297],[-7.155690],[-0.518312],[0.843433],[7.863231],[4.706389],[2.057768],[-2.796328],[6.936296],[-1.512229],[4.816868],[4.098658],[-6.640534],[7.290303],[-5.395252],[8.746921],[2.344494],[-2.581521],[0.306714],[5.151062],[-2.767575],[4.115076],[4.763451],[2.660403],[4.407606],[-4.572914],[4.122990],[-2.863504],[7.796130],[-2.569301],[-0.163316],[-2.981659],[4.359426],[5.826198],[-2.884596],[4.407212],[-4.799400],[1.756831],[-3.178959],[-3.037783],[-4.336770],[4.007166],[1.696272],[6.453252],[2.848122],[-7.500142],[8.767094],[3.617399],[6.895528],[5.244579],[0.534578],[-9.821111],[2.665531],[-2.834611],[-7.375990],[9.315026],[7.760124],[-1.700249],[2.881625],[7.748018],[1.209561],[-8.276169],[9.645914],[7.595467],[6.128597],[-3.818602],[-5.648866],[-4.805650],[-0.219531],[0.230409],[9.699376],[2.179158],[3.652025],[8.300412],[5.795383],[4.573084],[-6.312742],[9.424894],[2.879489],[-3.121805],[-2.860997],[-3.177803],[-8.621721],[-4.309425],[4.281281],[8.823881],[8.477526],[2.615655],[7.348520],[1.076829],[-6.940454],[0.390863],[-3.299057],[-6.246042],[-4.788816],[-4.138599],[9.977665],[9.538353],[1.188764],[7.410556],[1.586180],[-5.051672],[5.560736],[-6.294940],[-9.098940],[-7.833883],[-4.572337],[-5.909252],[-4.152831],[7.791034],[0.592197],[2.250156],[-3.901666],[-0.021791],[1.496681],[-7.729192],[9.135770],[6.546497],[-6.206109],[2.541478],[7.846797],[2.017790],[4.581819],[-6.523540],[-9.702952],[-1.716242],[-6.404651],[3.568636],[-6.582893],[-3.691942],[7.909366],[7.342866],[1.011267],[4.785232],[-0.885962],[2.306949],[-6.566102],[9.801151],[-0.399378],[-4.810775],[6.125308],[-0.278964],[-9.977742],[-6.803428],[-9.681903],[-1.678913],[8.971078],[-8.718166],[-9.516411],[8.690174],[-7.959450],[-0.057174],[3.037991],[-6.014275],[-8.273846],[1.518424],[-7.345710],[2.091206],[3.114991],[1.087994],[-9.113323],[8.703855],[8.228567],[5.513154],[7.680367],[-4.225709],[1.868560],[7.278163],[0.807206],[-3.235978],[-5.196715],[0.733411],[7.545946],[6.872554],[7.341687],[-1.217767],[5.123553],[3.265587],[3.881014],[-6.773503],[1.419224],[-3.271448],[-4.005940],[-1.996595],[-8.727032],[8.098524],[-5.416502],[4.637768],[3.689939],[-2.596139],[9.444824],[-0.269630],[-6.284254],[-0.618057],[-3.707478],[-1.284035],[1.836675],[-2.805343],[-8.889220],[7.262318],[7.034530],[6.195399],[-9.194638],[-4.567643],[-4.032174],[-4.484639],[8.420201],[-9.148761],[-8.076640],[-8.117980],[1.049217],[3.968687],[9.367087],[-0.566147],[-9.155773],[-1.673361],[-4.194646],[2.975089],[-6.276759],[-4.862567],[-6.739751],[7.010976],[-2.278162],[7.568342],[-2.380097],[6.205475],[-4.516000],[-3.840266],[0.735970],[-0.049719],[7.029901],[9.305767],[-5.490051],[-1.894490],[-1.487509],[9.234656],[9.893263],[9.486917],[-9.252233],[-9.750971],[-2.483562],[8.573732],[-2.571273],[-3.470508],[-0.847181],[8.933577],[-1.951657],[-1.498841],[9.673000],[4.537189],[8.750374],[-4.367359],[0.569129],[-2.713101],[-3.926571],[-5.547133],[8.947143],[-9.654087],[-5.457253],[7.625917],[0.173322],[-6.940586],[6.217108],[-5.021177],[3.490681],[4.147678],[2.705238],[1.816380],[6.935473],[-1.472857],[-1.533301],[-5.662391],[-8.372640],[-5.116635],[3.270279],[-9.028025],[-2.950191],[-5.822653],[2.143627],[7.292213],[6.607978],[0.815871],[-8.637618],[3.051788],[6.110552],[-1.011127],[9.203161],[8.936234],[5.290859],[-3.928116],[4.395500],[7.636920],[4.726023],[7.376198],[-6.189489],[4.847491],[9.334113],[-7.325793],[9.919646],[2.344607],[-9.268773],[-4.938932],[-0.112838],[5.738759],[8.996742],[7.204734],[-6.574732],[5.502566],[-8.403077],[-7.810678],[8.159492],[-4.246817],[2.788418],[-2.931456],[3.591354],[8.569952],[7.418658],[1.999454],[8.892727],[6.541130],[-5.467882],[7.575920],[1.349418],[-0.369725],[8.848960],[8.546752],[-7.270448],[-9.652527],[-5.304049],[-3.289744],[-8.633946],[2.636710],[4.407188],[-5.164285],[-4.769119],[-4.039460],[-9.909768],[0.190338],[-6.107850],[4.840510],[7.178300],[-1.570862],[3.419428],[8.516817],[5.393167],[8.070520],[1.296380],[-5.114906],[2.047000],[1.244889],[-5.145402],[-5.005781],[0.934547],[6.694938],[9.283002],[7.566052],[2.319143],[-3.770081],[-6.711226],[-8.314859],[0.391315],[-8.103431],[5.647916],[9.622775],[1.710889],[-2.375488],[-1.929117],[-8.663137],[-4.211390],[4.761727],[-3.180792],[-6.561364],[-4.386917],[-0.152764],[-7.147204],[6.754454],[-6.311771],[-2.170861],[-2.554840],[-2.537480],[-5.969292],[1.171555],[0.381981],[-8.117191],[6.841558],[4.069217],[2.356728],[8.126132],[-6.215018],[-5.946713],[9.819290],[-7.420021],[3.271748],[0.814073],[2.063241],[1.137367],[-2.126276],[-9.292790],[-2.168249],[3.844113],[8.206529],[-4.999835],[8.425858],[-6.150571],[6.663170],[-7.145363],[-6.474436],[9.588202],[-5.139130],[1.177034],[-9.357418],[4.775362],[-6.718999],[9.422833],[3.230229],[-2.583186],[9.225281],[1.759654],[2.632606],[5.489910],[-3.613646],[0.877967],[-8.938047],[8.544655],[0.116084],[-9.007341],[8.151738],[-9.606026],[-0.384292],[8.792367],[-0.351933],[-8.545516],[-4.080958],[-7.962309],[9.116358],[-6.760815],[-6.358658],[5.407052],[-0.896611],[5.530659],[3.773007],[-6.663428],[7.985571],[-1.878456],[-9.869023],[8.920887],[-8.657959],[-5.891104],[5.311028],[-8.313775],[-6.788504],[5.484850],[-8.998431],[-4.053734],[3.994260],[-0.081057],[7.649978],[4.770963],[4.688876],[-7.090264],[3.232045],[-9.475383],[2.917815],[-3.620267],[-3.840381],[-1.380570],[-3.767514],[3.114217],[-1.504827],[3.028085],[5.602061],[-7.542048],[-0.883447],[9.704028],[-4.479202],[6.599106],[-7.700345],[1.572123],[7.597408],[-0.732161],[-0.727030],[-7.652716],[-2.629563],[1.814802],[1.887586],[-9.392140],[-3.505994],[-7.588803],[9.976578],[-3.885881],[1.535921]], dtype = "float64")#candidate|3173|(1040, 1)|const|float64
call_3172 = relay.TupleGetItem(func_2792_call(relay.reshape(const_3173.astype('float64'), [520, 2])), 8)
call_3174 = relay.TupleGetItem(func_2794_call(relay.reshape(const_3173.astype('float64'), [520, 2])), 8)
bop_3175 = relay.left_shift(call_3136.astype('int16'), const_3173.astype('int16')) # shape=(4, 1040, 3)
bop_3178 = relay.left_shift(call_3137.astype('int16'), const_3173.astype('int16')) # shape=(4, 1040, 3)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
var_3197 = relay.var("var_3197", dtype = "bool", shape = (520,))#candidate|3197|(520,)|var|bool
call_3196 = relay.TupleGetItem(func_215_call(relay.reshape(var_3197.astype('bool'), [4, 13, 10]), relay.reshape(call_3172.astype('uint64'), [1, 832]), ), 0)
call_3198 = relay.TupleGetItem(func_218_call(relay.reshape(var_3197.astype('bool'), [4, 13, 10]), relay.reshape(call_3172.astype('uint64'), [1, 832]), ), 0)
uop_3200 = relay.exp(call_3172.astype('float32')) # shape=(4, 13, 16)
uop_3202 = relay.exp(call_3174.astype('float32')) # shape=(4, 13, 16)
output = relay.Tuple([call_3155,call_3159,var_3160,bop_3175,call_3196,var_3197,uop_3200,])
output2 = relay.Tuple([call_3156,call_3161,var_3160,bop_3178,call_3198,var_3197,uop_3202,])
func_3213 = relay.Function([var_3160,var_3197,], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3213_call = mutated_mod.get_global_var('func_3213')
var_3215 = relay.var("var_3215", dtype = "uint32", shape = (8, 12))#candidate|3215|(8, 12)|var|uint32
var_3216 = relay.var("var_3216", dtype = "bool", shape = (520,))#candidate|3216|(520,)|var|bool
call_3214 = func_3213_call(var_3215,var_3216,)
output = call_3214
func_3217 = relay.Function([var_3215,var_3216,], output)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3264 = relay.TupleGetItem(func_2713_call(), 0)
call_3265 = relay.TupleGetItem(func_2715_call(), 0)
output = call_3264
output2 = call_3265
func_3267 = relay.Function([], output)
mod['func_3267'] = func_3267
mod = relay.transform.InferType()(mod)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3268 = func_3267_call()
output = call_3268
func_3269 = relay.Function([], output)
mutated_mod['func_3269'] = func_3269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3270 = relay.var("var_3270", dtype = "float32", shape = (12, 11, 1))#candidate|3270|(12, 11, 1)|var|float32
const_3271 = relay.const([[[-0.017598,1.954283,-3.996393,9.612322,3.154580,5.370455,-9.518959],[6.229333,5.821646,0.419101,-0.467112,-2.180566,3.121655,1.910113],[-0.275769,0.998057,-7.148092,-8.377417,-3.363829,-0.615550,-7.900721],[8.276509,3.334358,0.645496,-3.113057,7.257804,5.420906,-8.722168],[6.665715,2.284524,-4.088953,-3.526920,-8.703485,-3.316961,-7.214669],[-9.791922,-7.706125,-1.768061,-6.661859,7.894860,-7.379358,7.633764],[-9.715408,-0.866292,-4.569841,8.912683,-4.887372,6.011883,-1.046321],[-8.594408,0.714684,-0.431959,-5.086677,6.175740,-2.325728,7.014834],[7.124297,8.872202,-9.815295,2.424931,7.141773,-4.362143,4.897804],[-1.757241,3.270337,-1.062411,0.621084,-7.829069,2.969976,-8.174256],[-6.394602,-3.841221,1.225617,2.931685,0.518587,-6.421452,-8.917049]],[[3.515354,-2.438691,8.073506,-2.983165,-7.194286,-3.631445,1.866467],[6.415837,-0.995021,1.751636,1.571419,-3.989641,-7.046527,-7.580251],[-1.801229,8.543443,-0.570294,-7.784137,9.569134,4.842481,-8.113822],[4.459917,-7.778255,-3.307113,-2.352874,8.925634,-3.949953,7.762298],[-5.930534,9.142810,-8.740908,-2.555153,-8.715898,-9.153567,0.275057],[-3.448652,-6.250153,6.958028,-3.706930,1.603785,6.706823,-6.194584],[-1.461865,-4.352040,2.264550,3.590160,1.993487,-5.866220,-8.922239],[2.507403,5.947382,-5.159066,3.731586,-7.950492,6.511162,5.712365],[-3.564269,-4.279552,4.254087,0.824265,-1.106213,-4.118508,-6.768178],[0.606341,5.029194,-5.330705,-1.236517,-5.064181,-5.894026,9.746794],[-0.657566,-2.743443,6.493880,8.851010,-8.045219,0.972024,-1.211943]],[[-6.385721,3.974561,0.237095,-3.304976,0.226987,-3.822067,1.044565],[-3.182984,-1.030226,2.047676,2.933231,4.699240,6.010886,-4.195665],[-2.730792,-0.572984,2.584821,4.612437,-2.922804,4.596068,-4.058067],[-6.845713,-8.784034,1.636581,2.075388,-7.640075,5.975750,-6.931644],[0.943331,4.516623,2.729019,-1.335130,6.247695,3.509366,1.718320],[8.205426,3.813516,0.919791,-9.413543,-8.830718,2.819076,5.535834],[9.149738,5.779493,-9.249405,-5.731928,-2.834060,-0.273444,-3.855572],[-9.891411,-5.597911,-5.015589,5.057515,-9.426423,-5.326711,5.753273],[6.465540,-9.857292,-9.861504,0.410107,-9.893137,-8.471092,-3.232258],[8.974821,1.717734,-6.143764,0.086246,4.004440,1.578091,2.331483],[-5.405990,8.719932,7.117985,-5.786370,-9.560517,-8.758107,-3.933357]],[[2.981586,5.804311,1.754481,-5.213977,8.530791,-7.464870,-3.161922],[-5.395751,5.080184,5.002612,-9.102605,-2.553162,-1.439050,-5.222902],[-8.135388,-7.290363,1.737038,-0.633330,-1.537823,-7.303994,-4.257834],[-5.832133,-9.372139,-1.064064,3.770574,8.684207,-1.218315,6.765254],[-8.666594,0.727526,-8.961292,-9.241867,-8.230993,-9.244069,-0.196091],[-1.961449,-5.885929,9.206643,7.219843,-6.009346,3.382842,-8.444095],[-5.830217,5.542988,1.867762,1.273467,-7.619416,2.302528,-4.981792],[7.386550,-2.131030,9.718651,-3.446594,-0.343630,4.543311,-3.454619],[-1.164891,-7.098459,-2.606557,2.807307,9.675363,8.700189,-3.620902],[-4.852423,0.587902,4.950182,8.368279,-4.729790,-6.268817,4.892276],[7.705168,-9.670211,-0.446640,-9.733454,-4.494476,-4.982752,-2.587623]],[[2.657111,-6.092875,8.918080,7.320961,0.483591,-1.211310,-2.756376],[-1.702618,-3.059423,-3.423180,0.418565,1.136347,9.970497,1.705456],[5.107215,-7.795202,3.449478,-2.642298,-6.759549,6.179547,-8.374507],[9.984211,-0.899571,-2.163262,2.502856,-1.690597,9.257304,6.761207],[7.089830,-3.861455,-2.033960,-2.864270,4.195274,5.746366,-6.827735],[-6.123296,-8.330870,-2.955515,7.164255,3.932975,6.934119,-2.446422],[9.662281,9.579632,-3.669652,-4.093115,-2.321530,-8.472760,7.198146],[4.409282,9.456349,9.835705,1.940522,-8.441107,-9.829377,-6.560402],[4.065824,3.385265,-9.267091,-8.146161,-1.850671,4.725161,4.168902],[6.972546,1.892302,-0.164335,-4.830150,-1.336180,0.820914,-2.320663],[-6.469212,7.875718,8.651793,8.752661,-2.698388,4.043877,-2.561525]],[[3.057109,-3.318233,-2.702699,-4.024650,-8.932325,-7.165401,-3.873728],[-6.478015,-5.090313,6.726266,-1.985616,-9.241978,-9.849565,5.484347],[5.901193,9.168567,7.295733,9.981257,6.340353,6.583587,-2.510676],[3.881915,5.040164,-3.057374,-9.897181,-3.143219,-6.174609,-8.435988],[5.134169,-5.468469,1.258218,7.231930,-2.611129,1.854258,-8.957651],[8.429276,-7.422629,-3.977588,-9.999915,5.807467,-0.784165,-9.427701],[-5.665065,-9.923147,-2.007369,6.123343,-5.750058,7.990786,0.668597],[-5.696100,8.819906,7.383682,-4.597205,6.324564,-2.436163,-5.887557],[-4.729393,2.252422,8.833599,-2.946610,8.818475,-5.689959,9.328866],[-5.708357,-9.417087,-8.070607,-7.448799,5.144183,5.990677,-3.270374],[-4.132201,4.225693,3.241204,5.110741,-3.944495,-1.155163,0.356174]],[[0.749124,-0.462041,-3.637078,-6.333018,-8.081645,-9.143402,-4.136667],[5.377850,0.037141,6.290635,-7.828176,6.441934,2.787842,-9.938290],[0.214808,-4.288151,-3.723057,-6.701048,0.233802,9.588787,-8.679596],[-0.288727,-5.437209,6.893499,7.546286,-8.331639,9.505736,2.368698],[9.987537,-6.636415,-5.778559,9.038142,-4.087098,0.775408,-9.125206],[1.838297,-9.402970,6.403724,4.752919,-5.176745,1.724235,4.098751],[-6.772838,-3.997428,-0.919577,0.697405,9.667793,9.156761,-3.859378],[-0.718209,7.878023,1.853711,5.491192,-0.706437,6.073908,2.439466],[1.424033,3.505690,1.700921,6.576574,1.293392,-2.687681,7.566899],[-9.143280,-4.324981,4.617714,-4.073648,0.613672,4.314197,1.809217],[-2.194752,-2.076186,5.622106,-5.561453,5.415288,-6.027524,-6.804224]],[[7.643034,-5.515758,7.704726,-6.944617,-1.351844,-2.355177,-9.194638],[-8.040902,-1.614517,-4.680199,-3.847673,4.848854,5.821040,2.261389],[2.089751,-7.844611,5.280166,-4.141590,-5.526278,5.730427,2.691040],[-4.214962,-4.247076,9.416034,-8.422662,9.726673,4.857481,9.218478],[4.432536,-0.886631,-6.517853,9.482129,0.190283,-0.643285,0.006134],[8.126798,9.152694,-6.373973,-9.287504,5.537605,-5.390318,5.998345],[8.065109,-2.505666,9.015923,1.290575,4.671470,-2.461314,-2.883244],[-1.693204,-4.416271,-6.369065,-8.826938,5.555476,7.821483,8.471974],[2.138853,4.647455,2.386375,4.952187,2.370547,-6.877649,-8.235711],[0.914721,1.096032,-8.366601,7.573512,-2.993516,0.599016,-6.142336],[-3.999010,-6.448563,0.391631,-7.480561,1.811770,2.667325,-4.561802]],[[-6.213371,-9.453324,0.825113,5.420143,-4.430446,-1.141344,-9.238987],[-1.543440,-8.631601,-0.223764,3.844925,5.030223,-0.762146,9.137528],[8.540592,4.148266,-4.834069,0.065431,-8.524593,9.356280,-6.359680],[6.966724,-6.377859,4.780444,-1.863435,2.636658,5.074203,9.165630],[-2.291814,-5.995280,-8.402389,8.446343,5.107834,-3.085496,1.928840],[-9.797315,1.467139,2.353262,-3.967569,1.596979,-7.412853,-8.694876],[9.331570,-0.003873,-5.343978,4.354895,-9.935651,-8.892408,7.555111],[8.941697,-6.495205,-6.367929,1.647130,8.639871,7.959291,-5.324892],[-7.084409,3.086796,-8.312925,8.666060,-5.722924,0.597352,1.449579],[4.089976,-0.522319,6.275343,-2.753797,7.859428,8.497497,2.269493],[8.957707,1.355141,-1.888888,2.956903,-3.453268,-5.985756,9.809563]],[[1.211217,2.282327,7.253279,-2.271983,-4.987966,6.481571,-7.799816],[2.224425,8.139763,-6.210913,-1.876017,0.292869,7.742299,-2.000577],[8.034057,-2.753243,-5.171060,3.481477,9.487575,-0.614457,-2.728096],[1.033014,8.170641,9.537297,6.786165,9.921321,-9.349089,1.302094],[-6.493534,0.376550,3.992350,-8.188207,8.863115,-3.026989,3.147893],[5.790601,-6.267838,5.472954,3.885810,-1.085836,-2.926644,-0.704577],[-6.312941,-3.944571,5.965796,-7.850223,1.584674,-0.796665,-1.157891],[-9.166686,1.631801,-3.120871,-6.464174,8.945266,-3.226295,4.792355],[2.065158,5.733790,5.583212,-9.957098,-1.657370,-3.029927,-1.092571],[-3.520592,9.587013,-9.600560,-2.568570,-3.844808,-1.655135,-5.533463],[8.470477,9.311736,8.302548,-7.300865,5.174822,0.628211,-7.389826]],[[5.100084,-8.741164,9.833933,-6.189052,3.641819,-3.038951,-2.375196],[3.119552,5.611881,-4.374962,-0.154736,-9.201231,-0.918682,4.876709],[2.377059,7.939176,-3.485626,-0.648089,3.966827,-4.156311,-5.845292],[-1.494582,6.952534,3.462497,-6.493970,-2.880392,-2.970882,-6.986815],[-9.788137,-5.606406,0.509207,-8.484287,-8.657240,7.635649,-9.931184],[-8.595974,5.403788,8.655575,-6.831315,8.896586,-0.617549,5.114810],[-9.251680,6.461394,-1.431867,-0.997311,-2.025488,2.784191,-8.289280],[-3.118915,-2.464588,0.417491,-9.210315,2.276151,3.380938,0.513519],[-3.474353,-9.051901,-7.270012,2.313293,-2.381637,-0.802405,-1.365805],[8.030544,4.339323,8.102707,-1.452857,2.220680,3.888182,2.264637],[3.225918,-0.832914,-3.312164,3.552098,7.183884,9.697411,-3.215770]],[[-2.446567,7.470112,7.170437,4.339752,5.892104,8.124496,-2.225196],[4.818666,-4.320222,3.988155,-7.230810,8.614715,-2.482855,-8.644496],[-7.840997,-9.749944,1.820859,-2.516290,-8.007366,-7.106740,8.015012],[-3.739433,-5.104876,-3.287380,-7.251903,-9.578164,2.482777,-2.870662],[-3.957032,6.191339,-4.031267,5.938187,3.205131,-9.180179,1.476412],[8.806102,5.304576,4.656167,0.886875,-9.573627,5.946043,-7.840208],[-8.832021,-1.089042,1.219645,-7.700331,6.028978,-4.937009,3.694886],[-6.799677,8.764346,-9.145100,1.967356,-7.161119,3.586627,0.339030],[9.764107,0.323746,-4.284271,-7.519671,4.287564,1.916851,-2.878719],[3.246020,7.399079,3.023445,-9.183712,2.013976,6.314576,-1.318515],[-5.877844,1.365733,-4.358014,9.024756,-2.797598,-4.713636,-9.997933]]], dtype = "float32")#candidate|3271|(12, 11, 7)|const|float32
bop_3272 = relay.divide(var_3270.astype('float32'), const_3271.astype('float32')) # shape=(12, 11, 7)
output = bop_3272
output2 = bop_3272
func_3284 = relay.Function([var_3270,], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
var_3285 = relay.var("var_3285", dtype = "float32", shape = (12, 11, 1))#candidate|3285|(12, 11, 1)|var|float32
output = func_3284(var_3285)
func_3286 = relay.Function([var_3285], output)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3376 = relay.var("var_3376", dtype = "uint64", shape = (8, 15, 5))#candidate|3376|(8, 15, 5)|var|uint64
var_3377 = relay.var("var_3377", dtype = "uint64", shape = (8, 15, 5))#candidate|3377|(8, 15, 5)|var|uint64
bop_3378 = relay.add(var_3376.astype('uint64'), relay.reshape(var_3377.astype('uint64'), relay.shape_of(var_3376))) # shape=(8, 15, 5)
uop_3388 = relay.atan(var_3377.astype('float64')) # shape=(8, 15, 5)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_3416 = relay.var("var_3416", dtype = "uint64", shape = (832,))#candidate|3416|(832,)|var|uint64
call_3415 = relay.TupleGetItem(func_33_call(relay.reshape(var_3416.astype('uint64'), [4, 13, 16])), 0)
call_3417 = relay.TupleGetItem(func_35_call(relay.reshape(var_3416.astype('uint64'), [4, 13, 16])), 0)
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
const_3427 = relay.const([9,4,-9,3,3,10,-5,-2,7,4,-8,4,-3,5,1,7,-4,-9,-6,-8,2,-2,-9,9,-4,8,8,-5,-6,-4,4,6,4,2,-8,6,-8,-8,7,-3,-10,4,4,-1,-4,9,6,-6,3,-8,-8,-2,7,3,5,4,8,-3,9,-5,7,-1,-9,3,6,-4,10,-1,4,-8,4,6,1,-6,-3,3,5,7,10,-6,1,-1,6,7,-9,-2,-8,5,-8,-10,-2,-5,7,-10,1,-3,8,5,-5,-5,-7,5,3,-5,-1,-6,-7,7,-10,-1,5,-5,-8,-6,-1,7,-5,-5,4,-1,-4,5,7,-7,1,10,-4,10,3,2,6,-6,-2,1,-1,-9,1,-10,10,-7,-7,-8,2,-10,-3,-1,-2,9,-7,9,5,5,-6,4,2,8,6,10,-5,5,3,-6,-2,-10,-5,7,1,-6,6,-4,9,8,9,7,8,-1,-7,-7,-3,-8,-8,-10,6,5,-6,-10,10,-4,8,4,-1,-9,3,7,-3,-6,-9,-1,4,5,-6,7,-5,-6,10,8,-4,-2,-3,2,-4,-8,-5,-6,-4,9,9,5,-4,-6,-10,8,3,8,8,3,-8,-5,-9,-4,-3,4,-8,6,9,-8,10,2,7,9,-2,7,3,-7,-4,-7,1,-1,-10,10,-2,-10,-6,6,-4,9,7,-10,-10,5,5,3,3,6,2,5,-6,-6,9,8,-7,1,-2,6,-7,8,-3,9,-6,9,1,-3,7,1,-1,9,-5,2,3,-3,-9,10,3,-7,-4,-8,8,-4,-3,3,6,-2,4,10,3,6,4,5,-7,6,-9,-8,8,-4,-1,-4,8,-9,3,-10,3,-10,3,-4,-10,-2,9,-5,-4,-9,-5,1,1,8,9,10,-5,9,-8,10,7,8,-4,2,-4,-10,-6,-4,10,10,-9,1,1,-4,7,8,6,10,10,5,-5,-3,-7,-7,-1,6,5,4,9,8,1,-8,3,4,-1,7,7,8,-9,3,-2,-9,-6,5,-2,1,-9,10,-8,7,-7,-9,6,-8,-2,6,10,1,10,-3,-8,-8,3,1,4,5,2,-6,9,5,5,-5,9,-2,9,3,-8,-8,-1,-4,-9,-8,3,1,-10,-3,-8,-1,-4,5,-8,3,-1,9,-2,-7,-2,-1,-1,-8,9,-5,2,3,10,-9,8,2,-5,-1,6,5,5,4,6,-6,-3,-3,8,1,6,6,-4,-5,-1,-5,6,-4,5,6,10,-10,4,10,-9,-10,10,1,6,2,-4,-4,-8,3,6,9,-1,1,-10,7,-1,-6,-5,-5,-5,-8,-6,3,-1,-1,8,-5,9,-4,6,-10,-2,-7,5,8,1,-3,10,-2,2,2,-3,9,-4,3,-8,-8,-1,-5,-9,8,-3,-8,7,-6,5,-9,6,10,-10,-3,-8,-9,7,5,9,5,-4,-6,5,10,-1,-8,-4,8,-5,-4,-9,-2,-7,2,2,-9,-2,-7,-7,9,-5,-5,-7,-5,-2,-3,-2,-9,4,6,-1,-4,9,2,-10,4,-7,-6,-1,-7,2,8,-7,-4,10,-10,-2,-6,8,7,-10,-5,1,3,4,9,-10,-1,-3,1,-2,6,7,-7,1,-5,8,-8,-5,2,-1,-7,-9,-1,1,8,4,9,6,-8,-1,-10,7,7,10,-1,-4,3,7,8,7,3,-1,-5,-10,6,8,-2,3,-4,3,-4,-4,-10,3,8,5,-3,6,3,-3,-9,4,-5,-3,10,6,10,-2,-10,-10,5,2,2,-8,-5,-4,9,8,-5,-2,-6,10,8,-10,-7,1,-6,1,-2,-2,7,3,-4,-1,3,-5,-4,9,-4,-2,-7,-2,5,-10,-2,4,-8,7,-10,-2,-4,4,-9,1,1,-4,-6,3,2,8,8,5,-1,-8,3,-5,-5,4,-3,-9,8,-5,4,8,1,-9,-10,-5,-9,1,2,-8,5,5,8,-2,-9,-3,-5,8,8,5,4,-8,-4,2,7,7,3,-9,5,-9,8,-7,4,-9,3,-2,-7,-9,-1,8,-2,-1,-6,7,-4,8,-8,-7,10,-5,-3,1,7,-10,2,8,3,-10,10,2,4,7,7,-4,-1,10,-8,-3,-3,-5,9,1,-3,-2,-10,8,-6,-6,9,10,1,-6,-2,-3,-10,-10,-4,-4,3,9,-2,-7,-1,1,-5,2,10,-4,-6,7,-7,-6,9,-7,6,8,-2,6,8,-5,-10,-8,6,-3,8,8,-9,6,4,4,9,10,7,-7,5,9,-1,-6,-8,7,10,-3,10,9,-5,4,3,7,1,-6,-6,-2,3,-1,-6,10,4,5,5,9,-4,-3,-8,8,4,4,2,-6,3,-7,8,2,-1,7,10,-5,1,-3,10,-6,7,4,-5,4,10,6,-9,1,7,5,5,2,-9,3,-8,2,9,7,-8,2,2,-3,8,10,-3,-3,-4,2,-9,1,-4,-5,10,-6,2,-4,6,5,3,-7,10,-5,-4,8,-4,3,5,-8,9,-3,2,5,-9,9,-8,10,-8,-4,4,8,-4,-5,-10,-4,-8,7,-8,-5,-5,-1,-5,-2,-8,5,-10,-1,7,-3,-8,3,-6,4,-5,1,7,10,4,5,8,-5,7,3,1,-9,3,-5,-4,-2,-1,-6,8,-10,-10,6,7,8,-7,-5,7,9,8,10,4], dtype = "uint64")#candidate|3427|(1008,)|const|uint64
const_3428 = relay.const([False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False], dtype = "bool")#candidate|3428|(520,)|const|bool
call_3426 = relay.TupleGetItem(func_2941_call(relay.reshape(const_3427.astype('uint64'), [1008,]), relay.reshape(const_3428.astype('bool'), [520,]), ), 0)
call_3429 = relay.TupleGetItem(func_2944_call(relay.reshape(const_3427.astype('uint64'), [1008,]), relay.reshape(const_3428.astype('bool'), [520,]), ), 0)
output = relay.Tuple([bop_3378,uop_3388,call_3415,var_3416,call_3426,const_3427,const_3428,])
output2 = relay.Tuple([bop_3378,uop_3388,call_3417,var_3416,call_3429,const_3427,const_3428,])
func_3444 = relay.Function([var_3376,var_3377,var_3416,], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
var_3445 = relay.var("var_3445", dtype = "uint64", shape = (8, 15, 5))#candidate|3445|(8, 15, 5)|var|uint64
var_3446 = relay.var("var_3446", dtype = "uint64", shape = (8, 15, 5))#candidate|3446|(8, 15, 5)|var|uint64
var_3447 = relay.var("var_3447", dtype = "uint64", shape = (832,))#candidate|3447|(832,)|var|uint64
output = func_3444(var_3445,var_3446,var_3447,)
func_3448 = relay.Function([var_3445,var_3446,var_3447,], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_3480 = relay.TupleGetItem(func_3094_call(), 0)
call_3481 = relay.TupleGetItem(func_3096_call(), 0)
output = relay.Tuple([call_3480,])
output2 = relay.Tuple([call_3481,])
func_3482 = relay.Function([], output)
mod['func_3482'] = func_3482
mod = relay.transform.InferType()(mod)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mutated_mod.get_global_var('func_3482')
call_3483 = func_3482_call()
output = call_3483
func_3484 = relay.Function([], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3493 = relay.TupleGetItem(func_3482_call(), 0)
call_3494 = relay.TupleGetItem(func_3484_call(), 0)
var_3501 = relay.var("var_3501", dtype = "uint32", shape = (4, 4, 3))#candidate|3501|(4, 4, 3)|var|uint32
bop_3502 = relay.divide(call_3493.astype('float32'), var_3501.astype('float32')) # shape=(4, 4, 3)
bop_3505 = relay.divide(call_3494.astype('float32'), var_3501.astype('float32')) # shape=(4, 4, 3)
output = relay.Tuple([bop_3502,])
output2 = relay.Tuple([bop_3505,])
func_3506 = relay.Function([var_3501,], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3507 = relay.var("var_3507", dtype = "uint32", shape = (4, 4, 3))#candidate|3507|(4, 4, 3)|var|uint32
func_3506_call = mutated_mod.get_global_var('func_3506')
call_3508 = func_3506_call(var_3507)
output = call_3508
func_3509 = relay.Function([var_3507], output)
mutated_mod['func_3509'] = func_3509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_3523 = func_3267_call()
call_3524 = func_3267_call()
var_3525 = relay.var("var_3525", dtype = "uint32", shape = (4, 1, 3))#candidate|3525|(4, 1, 3)|var|uint32
bop_3526 = relay.right_shift(call_3523.astype('int64'), relay.reshape(var_3525.astype('int64'), relay.shape_of(call_3523))) # shape=(4, 1, 3)
bop_3529 = relay.right_shift(call_3524.astype('int64'), relay.reshape(var_3525.astype('int64'), relay.shape_of(call_3524))) # shape=(4, 1, 3)
bop_3563 = relay.logical_xor(bop_3526.astype('uint16'), relay.reshape(call_3523.astype('uint16'), relay.shape_of(bop_3526))) # shape=(4, 1, 3)
bop_3566 = relay.logical_xor(bop_3529.astype('uint16'), relay.reshape(call_3524.astype('uint16'), relay.shape_of(bop_3529))) # shape=(4, 1, 3)
output = relay.Tuple([bop_3563,])
output2 = relay.Tuple([bop_3566,])
func_3568 = relay.Function([var_3525,], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
var_3569 = relay.var("var_3569", dtype = "uint32", shape = (4, 1, 3))#candidate|3569|(4, 1, 3)|var|uint32
output = func_3568(var_3569)
func_3570 = relay.Function([var_3569], output)
mutated_mod['func_3570'] = func_3570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3638 = relay.TupleGetItem(func_3482_call(), 0)
call_3639 = relay.TupleGetItem(func_3484_call(), 0)
uop_3652 = relay.acos(call_3638.astype('float64')) # shape=(4, 1, 3)
uop_3654 = relay.acos(call_3639.astype('float64')) # shape=(4, 1, 3)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_3659 = relay.var("var_3659", dtype = "uint64", shape = (104, 8))#candidate|3659|(104, 8)|var|uint64
call_3658 = relay.TupleGetItem(func_33_call(relay.reshape(var_3659.astype('uint64'), [4, 13, 16])), 0)
call_3660 = relay.TupleGetItem(func_35_call(relay.reshape(var_3659.astype('uint64'), [4, 13, 16])), 0)
output = relay.Tuple([uop_3652,call_3658,var_3659,])
output2 = relay.Tuple([uop_3654,call_3660,var_3659,])
func_3662 = relay.Function([var_3659,], output)
mod['func_3662'] = func_3662
mod = relay.transform.InferType()(mod)
var_3663 = relay.var("var_3663", dtype = "uint64", shape = (104, 8))#candidate|3663|(104, 8)|var|uint64
output = func_3662(var_3663)
func_3664 = relay.Function([var_3663], output)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3826 = relay.TupleGetItem(func_3073_call(), 0)
call_3827 = relay.TupleGetItem(func_3075_call(), 0)
output = call_3826
output2 = call_3827
func_3845 = relay.Function([], output)
mod['func_3845'] = func_3845
mod = relay.transform.InferType()(mod)
output = func_3845()
func_3846 = relay.Function([], output)
mutated_mod['func_3846'] = func_3846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3877 = relay.TupleGetItem(func_3482_call(), 0)
call_3878 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_3877,])
output2 = relay.Tuple([call_3878,])
func_3879 = relay.Function([], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
output = func_3879()
func_3880 = relay.Function([], output)
mutated_mod['func_3880'] = func_3880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3886 = relay.TupleGetItem(func_2713_call(), 0)
call_3887 = relay.TupleGetItem(func_2715_call(), 0)
func_3506_call = mod.get_global_var('func_3506')
func_3509_call = mutated_mod.get_global_var('func_3509')
const_3912 = relay.const([7,7,6,-3,-4,-9,4,-3,2,-5,5,-1,-2,8,-2,-7,2,9,5,-2,-6,8,-1,-8,-1,7,1,-10,9,-8,-2,-9,10,-4,-9,-6,9,8,-8,-4,-9,2,-9,2,10,-8,-8,9], dtype = "uint32")#candidate|3912|(48,)|const|uint32
call_3911 = relay.TupleGetItem(func_3506_call(relay.reshape(const_3912.astype('uint32'), [4, 4, 3])), 0)
call_3913 = relay.TupleGetItem(func_3509_call(relay.reshape(const_3912.astype('uint32'), [4, 4, 3])), 0)
uop_3923 = relay.cosh(call_3911.astype('float64')) # shape=(4, 4, 3)
uop_3925 = relay.cosh(call_3913.astype('float64')) # shape=(4, 4, 3)
bop_3931 = relay.greater(uop_3923.astype('bool'), relay.reshape(call_3911.astype('bool'), relay.shape_of(uop_3923))) # shape=(4, 4, 3)
bop_3934 = relay.greater(uop_3925.astype('bool'), relay.reshape(call_3913.astype('bool'), relay.shape_of(uop_3925))) # shape=(4, 4, 3)
func_2441_call = mod.get_global_var('func_2441')
func_2444_call = mutated_mod.get_global_var('func_2444')
var_3939 = relay.var("var_3939", dtype = "float64", shape = (1540,))#candidate|3939|(1540,)|var|float64
call_3938 = relay.TupleGetItem(func_2441_call(relay.reshape(var_3939.astype('float64'), [14, 11, 10])), 0)
call_3940 = relay.TupleGetItem(func_2444_call(relay.reshape(var_3939.astype('float64'), [14, 11, 10])), 0)
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
const_3948 = relay.const([-3,-2,-3,7,4,5,-2,-4,-8,3,9,-1,-9,5,-4,-5,-9,3,6,3,6,9,-2,-4,-7,-8,5,5,-4,3,-9,6,-5,-9,8,2,-10,5,4,-2,-6,-5,-8,4,3,3,-4,-9,7,-2,9,-1,5,-9,-5,1,-1,-4,-9,4,-4,5,5,10,1,9,8,-7,7,-3,8,6,10,-2,-6,4,-3,-9,2,-10,-1,-1,8,1,5,-6,8,4,-1,9,-5,7,-2,6,-8,-7,3,8,-7,7,-5,-4,-6,-2,-7,4,6,9,10,3,2,-8,7,8,-7,5,7,-6,10,-10,3,-10,-7,-10,-6,6,-3,3,-10,-6,-6,-10,10,8,6,-8,1,-9,-9,-5,1,1,6,6,6,5,-10,-7,-3,-10,-2,-9,6,-1,-8,-10,-8,3,-6,1,8,8,-3,10,-9,-6,-1,-3,-4,2,1,-10,-2,4,-1,-3,-1,1,-3,9,-1,2,9,-9,-8,-6,4,9,-1,7,7,5,9,3,6,6,8,-9,3,-3,-2,1,5,3,4,7,8,-3,-7,2,10,-1,8,-9,-10,4,-9,8,-7,-1,-1,-4,10,9,-4,1,1,-4,3,-1,-6,-7,-4,-1,7,3,10,-10,-7,-10,-10,-6,-6,-3,4,4,-3,-6,-9,7,7,-6,9,9,-5,-6,-3,-9,3,-8,5,8,4,-4,-9,10,5,4,4,-10,4,5,10,-6,5,1,-5,-10,3,3,7,9,-9,-5,-10,-1,3,-4,9,8,-2,-4,8,-8,-7,2,-2,3,-7,4,3,2,1,-9,-5,-2,5,-4,9,-1,-2,-8,5,-8,10,-8,9,-9,7,1,-6,-9,-9,4,-6,6,-8,-4,8,5,-6,-10,-6,-5,6,5,9,5,-8,7,3,-3,8,6,-1,-3,-6,2,-10,7,3,2,-5,-1,3,8,-1,-9,-8,2,-5,-6,8,5,7,5,-3,3,1,2,1,-2,-8,-9,3,6,8,1,10,-3,-7,8,-3,-9,-4,-10,8,7,-2,-2,10,3,8,4,-1,6,5,-7,4,5,-6,2,9,-9,6,6,-9,-5,-4,-8,8,-2,-7,-3,6,8,-7,7,2,6,9,-5,10,7,1,-8,9,-3,-10,7,6,-7,8,8,-10,-7,4,-7,-3,8,-2,-4,6,-9,-6,2,4,5,-5,-1,7,4,-1,8,9,-10,2,-4,-5,-5,-3,-3,8,10,-4,10,10,-5,-7,7,-8,-9,-2,1,9,-8,-4,-9,10,-8,2,-6,-2,-5,3,-8,-8,-3,1,-8,1,1,7,-2,1,3,-7,-6,-9,1,1,-3,6,9,-2,-6,-1,10,8,6,1,-1,-6,1,-5,9,10,7,10,3,-5,6,-5,3,-8,3,6,-10,-10,-2,-3,-5,3,-1,7,6,3,7,8,-3,1,-6,1,-3,-8,8,-4,-4,-2,-1,-9,3,8,-1,-4,-3,-2,3,-6,4,1,-5,2,3,4,-7,10,-2,1,-5,8,1,-6,3,3,5,-7,9,10,5,6,5,-1,-6,-2,9,-6,2,-7,3,-2,1,1,-9,4,4,-6,-9,8,3,-4,-4,3,2,10,-9,6,-2,-2,7,-4,9,10,1,1,9,-6,-6,8,-10,-3,-1,-9,-5,3,-10,-3,-9,4,2,-3,1,-6,10,-6,4,-1,8,9,2,3,1,10,-8,1,10,-3,-5,9,-2,-8,-4,-3,-1,-6,-6,-7,-5,-8,-1,-5,3,3,4,5,-7,-4,2,-5,-4,5,10,-9,-7,7,6,-9,7,-8,6,-1,-6,5,-6,2,9,-10,-9,3,-7,-6,-2,5,8,4,-9,-6,2,5,-2,-6,4,10,-8,-1,-3,8,-1,9,-6,-5,10,2,-3,-7,-3,7,-10,1,10,-3,-9,2,-3,1,-6,6,8,-7,4,7,9,-5,1,-7,9,7,2,-10,-2,8,-9,-5,2,-9,8,-4,-10,-5,8,-5,3,-7,-3,2,9,-7,-2,-3,-6,3,-8,10,7,-2,-9,-1,1,9,-4,1,-9,-10,-1,-7,7,1,-6,-7,8,7,-6,-4,-6,-3,2,-6,2,-3,-10,10,-10,-5,5,1,-1,3,-9,-6,-7,-9,-5,-1,-10,-10,7,-10,-4,-5,-8,2,-7,9,-1,-2,6,-9,-6,-7,-5,9,-8,8,5,-1,-2,-4,-8,-4,8,7,-9,6,-7,10,-10,3,-9,2,-6,8,-5,-6,5,-2,-8,-8,3,2,7,-3,2,-6,9,-2,-2,5,-3,10,3,-1,-1,9,5,6,-3,8,5,4,-2,2,-9,1,8,-9,3,3,3,8,1,-7,-2,-10,8,4,-2,-4,-3,-4,8,3,5,5,-8,-5,8,-5,-6,-9,9,-4,10,-4,3,-6,-1,-2,7,-6,2,-5,-3,1,7,4,3,-1,-6,-6,2,1,2,-2,3,-3,-7,-5,3,2,8,-8,-3,-6,1,-1,-5,-6,6,-4,-6,-3,-7,5,-6,10,2,5,-4,-6,2,-9,8,1,-5,-2,-4,-6,-3,3,-6,3,10,3,8,2,-7,-8,10,8,6,8,6,3,3,-1,10,8,2,5,-3,2,9,4,9,5,-3,-5,5,10,-5,-8,7,-4,-9,8,5,-1,-10,-4,-6,-4,1,10,9,-3,-3,9,1], dtype = "uint64")#candidate|3948|(1008,)|const|uint64
var_3949 = relay.var("var_3949", dtype = "bool", shape = (520,))#candidate|3949|(520,)|var|bool
call_3947 = relay.TupleGetItem(func_2941_call(relay.reshape(const_3948.astype('uint64'), [1008,]), relay.reshape(var_3949.astype('bool'), [520,]), ), 2)
call_3950 = relay.TupleGetItem(func_2944_call(relay.reshape(const_3948.astype('uint64'), [1008,]), relay.reshape(var_3949.astype('bool'), [520,]), ), 2)
output = relay.Tuple([call_3886,const_3912,bop_3931,call_3938,var_3939,call_3947,const_3948,var_3949,])
output2 = relay.Tuple([call_3887,const_3912,bop_3934,call_3940,var_3939,call_3950,const_3948,var_3949,])
func_3958 = relay.Function([var_3939,var_3949,], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
mutated_mod['func_3958'] = func_3958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3958_call = mutated_mod.get_global_var('func_3958')
var_3960 = relay.var("var_3960", dtype = "float64", shape = (1540,))#candidate|3960|(1540,)|var|float64
var_3961 = relay.var("var_3961", dtype = "bool", shape = (520,))#candidate|3961|(520,)|var|bool
call_3959 = func_3958_call(var_3960,var_3961,)
output = call_3959
func_3962 = relay.Function([var_3960,var_3961,], output)
mutated_mod['func_3962'] = func_3962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_3981 = relay.TupleGetItem(func_2713_call(), 0)
call_3982 = relay.TupleGetItem(func_2715_call(), 0)
func_1020_call = mod.get_global_var('func_1020')
func_1027_call = mutated_mod.get_global_var('func_1027')
var_3985 = relay.var("var_3985", dtype = "float32", shape = (110, 6))#candidate|3985|(110, 6)|var|float32
const_3986 = relay.const([5,-8,-8,1,-4,-10,3,-1,4,-6,-9,-1,-5,-8,-5,7,2,-4,-2,8,7,-4,7,5,-3,-8,-3,9,-8,-5,3,4,7,4,4,-9,1,-1,7,2,7,4,8,2,-2,10,8,1,-3,-7,6,-6,-9,7,-5,8,8,-5,-9,4,-3,7,8,9,10,6,1,-6,3,6,2,-9,8,-9,-1,8,-7,7,10,7,-1,-7,9,3,-7,-9,3,-1,3,9,5,10,-2,-7,1,2,9,4,-3,9,6,-8,5,1,1,2,9,8,-6,-4,1,9,-7,7,10,9,1,4,-9,1,-8,6,4,-9,-8,-7,10,8,-3,-7,-10,-8,8,-6,10,8,10,-3,9,5,6,-6,-2,-4,-9,7,-9,-10,-8,5,4,5,-7,-10,-2,-4,9,-5,-6,5,1,-5,-8,7,-1,-5,6,-1,-8,-9,-6,-7,5,-5,10,-6,-3,-1,-8,-8,-3,-6,-2,-3,-7,-9,7,7,9,-3,-3,1,-2,8,5,2,8,-8,-6,1,5,-8,9,4,-1,-8,-8,2,-3,1,-8,-5,-3,-9,4,-4,-1,1,10,-9,-6,5,7,-5,10,10,1,6,-10,2,-4,-5,9,-6,-3,1,-3,-3,-6,5,-4,-5,10,-8,-6,-6,-7,7,7,6,-10,1,-5,-8,-3,-8,7,4,5,-10,2,-1,-7,6,4,5,-1,1,-3,7,-1,-6,10,-6,2,6,-1,5,-7,-3,-5,7,7,3,7,9,-7,-4,5,-4,5,-10,-6,6,6,-6,-10,-8,-3,8,-3,5,9,8,1,-10,-1,7,-5,-3,-2,1,-6,-8,2,-6,-2,6,2,7,6,-2,-10,-6,-1,6,-2,7,8,4,3,6,2,-1,5,-10,7,-2,10,-2,9,-6,6,6,1,5,-1,-1,10,1,-10,-10,2,2,8,-7,-1,-7,-6,-1,6,-1,7,-1,-4,4,-3,10,6,1,5,2,-1,-3,5,-6,-1,7,-10,7,-3,9,5,5,-9,-5,4,-10,-8,2,8,4,4,7,4,-10,-5,4,6,3,-4,2,8,3,-7,-9,2,6,7,-1,-7,9,-10,4,-10,5,-5,-4,-1,9,3,-4,-5,4,-6,-4,-8,7,-4,5,-9,-2,9,9,4,-1,8,-3,-8,5,-1,-6,-2,8,3,-1,-6,-7,8,7,4,8,-3,-6,-9,-2,-2,1,1,-9,5,-9,3,-7,3,-3,-2,-10,-4,-6,9,-5,-8,6,-8,-4,-5,5,10,-8,-6,10,2,2,8,2,10,10,-6,7,-1,10,-5,-3,6,6,2,9,7,1,3,-3,-3,-9,9,-4,9,6,8,9,-1,-6,-2,-7,8,4,-3,4,-2,-4,1,3,3,-3,9,5,-8,10,-7,9,-7,9,-4,6,8,-8,2,-10,-1,6,-7,-7,-3,5,6,-7,10,2,1,-9,10,7,-9,6,1,7,4,-3,2,9,5,-8,-6,-9,10,3,5,9,8,-3,7,7,3,10,-7,3,9,-6,-4,9,3,4,-5,-2,-8,1,5,9,-5,5,-10,-5,2,3,6,-9,-5,7,-6,10,-1,1,9,4,-1,-10,-7,-1,6,-4,5,3,6,7,-6,8,-9,5,-3,4,10,-6,-10,-6,10,-1,3,2,-2,5,-9,7,-6,-8,1,-2,7,-8,4,3,5,-8,8,10,-10,-1,-10,6,1,2,9,3,-1,-3,6,-10,2,9,-7,-3,6,7,-2,-1,-9,3,8,-4,-8,5,-4,4,4,-9,4,9,6,5,8,-9,10,5,-9,-6,-7,-2,9,-9,9,3,10,1,-7,3,4,-2,-7,2,-5,4,1,-3,2,-1,-1,-4,8,8,4,1,-7,-4,-10,-10,-5,7,2,6,3,7,-4,5,-8,7,6,2,9,-8,2,-3,4,-5,-1,2,-2,8,-2,10,-7,2,5,7,-1,4,-2,-4,-9,5,-2,2,10,2,4,-1,-8,-4,-8,6,5,5,-7,8,-8,3,-3,-3,-8,4,6,-1,-8,-5,8,-6,-1,2,9,-3,-4,8,3,10,-8,-3,10,7,1,-6,5,-1,4,4,5,2,-6,-7,-2,10,1,-4,-7,1,-5,4,9,-8,-9,6,-2,3,7,-4,-7,8,-8,-1,5,3,-8,-2,2,-8,2,7,2,-9,2,-9,2,8,-2,-6,-10,-7,-6,3,-8,-3,9,-6,1,-10,-3,-1,6,4,6,-5,7,-5,2,4,-3,2,-6,2,6,-8,1,-3,-9,-7,6,-3,5,-7,10,-6,-8,-4,1,-10,8,-7,9,9,6,5,9,7,10,10,-7,2,7,8,1,-4,-7,-1,-10,4,-8,9,9,-1,2,-8,10,-4,5,4,9,-5,10,3,-8,-9,6,-4,-6,5,-8,8,-2,-2,4,2,-5,-10,-5,-6,-9,-9,-5,-3,8,10,2,2,10,-2,-4,-10,1,6,4,-9,9,10,-1,-4,3,-4,1,1,-4,8,7,-6,9,-6,-6,-5,-5,8,8,-6,7,5,8,1,-9,9,-8,-4,-9,-9,-7,1,-9,-9,-10,-9,-7,-4,10,-8,-4,-5,-3,9,-1,-8,-5,4,7,-3,8,-3,6,-1,-3,-7,7,-1,-3,4,-1,4,-1,-9,2,3,-4,7,4,-10], dtype = "uint64")#candidate|3986|(1008,)|const|uint64
const_3987 = relay.const([False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True], dtype = "bool")#candidate|3987|(520,)|const|bool
const_3988 = relay.const([5,-6,-9,10,8,-9,1,-5,-2,-6,5,-10,8,-7,-9,8,2,-3,-8,9,2,-7,7,-1,-10,-1,10,4,-9,8,-9,2,-2,-4,-9,-8,-10,-8,-6,-3,-6,3,-8,-8,8,-7,-4,-2,-5,7,-9,8,10,6,5,-4,8,10,6,2,-4,3,-7,2,-1,-7,4,2,1,1,9,-10,-5,-2,-6,3,3,-8,2,4,9,-4,9,10,-5,-8,6,-3,8,-10,-2,-6,2,7,4,-5,-5,9,-8,5,-9,10,-3,-6,10,5,2,7,3,-8,-7,1,4,5,-6,7,-3,1,-10,7,7,-2,-3,-3,-4,5,-3,-3,-4,-1,9,8,-5,-10,-7,6,8,3,10,-10,-6,-4,-1,8,-5,8,8,-8,6,-9,4,7,5,5,-5,-10,10,-1,-2,6,7,3,-1,-8,10,10,-3,8,-8,-3,-8,5,8,-8,-5,8,-10,7,2,8,3,8,6,5,-8,8,-3,7,9,2,2,5,-10,1,10,-6,7,10,-7,-9,5,-5,10,-2,7,-10,3,-9,8,5,-1,-10,4,-4,-6,7,8,-2,6,-7,5,2,-3,-10,-4,8,5,-4,7,-1,-10,-4,2,7,9,1,-1,1,5,-4,6,2,7,2,5,9,-2,4,-1,2,-6,6,-5,1,10,-6,-7,-2,8,10,-7,-9,-4,-5,-5,-6,9,8,1,-3,-5,9,-9,6,-5,1,5,-3,4,-5,6,-9,5,8,-7,7,9,-5,5,6,-8,-1,8,4,-3,-2,-2,3,-10,-1,3,-10,4,-3,-7,-6,-7,-9,-1,8,4,3,2,-3,-9,1,2,6,-9,4,7,10,-9,2,2,3,9,3,-2,-6,-9,-4,-10,-9,-9,-4,3,2,-3,-1,4,4,-10,7,-1,4,9,3,8,8,-2,-4,6,-6,-2,-5,-9,-10,-4,-2,1,5,5,1,9,-3,-10,8,4,-5,9,1,-9,-10,9,7,1,1,-1,1,10,3,-10,-7,4,-9,4,-4,2,-5,7,2,-8,-4,-5,-1,9,-8,6,3,9,-7,-1,-5,7,7,-4,4,4,-2,-4,-6,8,4,-1,-6,-7,3,-5,5,6,8,1,-3,1,-3,-8,-10,7,10,10,-8,10,7,8,9,-3,8,-10,-8,4,-8,4,-9,-3,-7,-5,-10,-6,2,8,-2,8,-7,-8,-9,-8,-7,4,-1,4,-10,5,-6,6,9,-7,6,-8,4,-8,10,-10,8,10,-3,-7,5,-2,7,9,3,-4,3,-4,7,10,9,4,-3,7,1,8,8,-9,9,10,5,-3,-5,7,-2,-1,6,10,-2,-7,1,-10,-7,-5,-6,10,-8,-2,-1,-8,8,4,7,-5,-1,3,-10,-2,-2,3,3,-3,-6,5,-6,10,4,-7,-8,-1,5,-10,7,-1,-8,-8,8,3,8,1,2,-7,-5,-9,-5,9,-4,-4,-10,9,1,-8,-1,-3,10,-3,7,-9,2,-5,-8,-10,3,3,-1,1,10,-1,2,-9,9,-5,2,9,1,5,-8,4,-9,7,7,-9,9,9,-3,-4,-2,1,2,-10,-5,4,9,7,3,5,-1,-9,6,2,8,-4,-4,6,4,-10,-2,2,-2,-9,-2,7,3,-4,5,8,1,-6,6,2,10,9,-6,-5,-2,5,3,7,-7,-4,-6,-6,6,-3,-3,-4,-9,-7,6,5,-10,-1,-10,8,-7,10,7,-2,5,9,2,-3,8,8,-3,3,-3,4,-1,3,-5,3,10,-6,1,-2,-9,-6,4,5,8,9,-2,-7,7,3,6,5,1,10,7,5,-9,-6,-4,10,-9,-5,4,-6,-3,-3,4,4,9,7,6,-5,2,5,2,-2,-6,4,9,9,8,3,-9,-7,-9,-6,8,-9,3,-8,1,10,7,5,3,-9,5,-10,9,3,-4,4,-10,-2,-4,2,10,-1,5,4,2,-6,7,1,7,-5,-3,-3,-9,8,5,9,3,4,-9,-5,-4,-6,-10,7,3,8,-9,10,6,-1,9,8,-1,-9,1,-1,-6,-5,6,-4,2,-4,3,-6,2,-7,7,-3,8,-1,8,5,1,-10,10,3,-4,-2,8,5,3,-3,9,-1,9,-9,5,9,-4,10,-1,-7,-9,3,6,9,1,-2,-9,-9,-6,-3,2,5,-1,9,10,-10,-4,-8,2,-2,1], dtype = "uint64")#candidate|3988|(832,)|const|uint64
call_3984 = relay.TupleGetItem(func_1020_call(relay.reshape(var_3985.astype('float32'), [4, 11, 15]), relay.reshape(var_3985.astype('float32'), [4, 11, 15]), relay.reshape(const_3986.astype('uint64'), [1008,]), relay.reshape(const_3987.astype('bool'), [520,]), relay.reshape(const_3988.astype('uint64'), [832,]), ), 7)
call_3989 = relay.TupleGetItem(func_1027_call(relay.reshape(var_3985.astype('float32'), [4, 11, 15]), relay.reshape(var_3985.astype('float32'), [4, 11, 15]), relay.reshape(const_3986.astype('uint64'), [1008,]), relay.reshape(const_3987.astype('bool'), [520,]), relay.reshape(const_3988.astype('uint64'), [832,]), ), 7)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3995 = relay.TupleGetItem(func_3482_call(), 0)
call_3996 = relay.TupleGetItem(func_3484_call(), 0)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_3997 = relay.TupleGetItem(func_3662_call(relay.reshape(call_3984.astype('uint64'), [104, 8])), 1)
call_3998 = relay.TupleGetItem(func_3664_call(relay.reshape(call_3984.astype('uint64'), [104, 8])), 1)
output = relay.Tuple([call_3981,call_3984,var_3985,const_3986,const_3987,const_3988,call_3995,call_3997,])
output2 = relay.Tuple([call_3982,call_3989,var_3985,const_3986,const_3987,const_3988,call_3996,call_3998,])
func_3999 = relay.Function([var_3985,], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4000 = relay.var("var_4000", dtype = "float32", shape = (110, 6))#candidate|4000|(110, 6)|var|float32
func_3999_call = mutated_mod.get_global_var('func_3999')
call_4001 = func_3999_call(var_4000)
output = call_4001
func_4002 = relay.Function([var_4000], output)
mutated_mod['func_4002'] = func_4002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_4009 = relay.TupleGetItem(func_3073_call(), 0)
call_4010 = relay.TupleGetItem(func_3075_call(), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
const_4013 = relay.const([[-5,-2],[-3,-10],[-9,-1],[1,-5],[-9,4],[5,8],[-8,1],[-10,2],[6,-6],[1,2],[-10,10],[-4,-10],[4,-9],[-3,-4],[-1,3],[-4,9],[-8,-2],[2,9],[-10,-5],[-6,9],[10,-8],[7,4],[-7,-9],[3,-2],[4,10],[-10,8],[-9,-4],[10,6],[1,3],[-8,-6],[-5,7],[-3,-8],[2,3],[-8,2],[3,-2],[-9,-3],[4,8],[6,-6],[-7,10],[9,8],[-8,5],[-9,-5],[5,5],[8,4],[-7,-4],[6,-3],[-1,4],[-3,-3],[-3,-8],[9,7],[3,-8],[4,-4],[6,-2],[-6,-7],[8,-8],[6,-3],[-2,-3],[4,-5],[-4,9],[6,-6],[1,-7],[3,-5],[5,-3],[5,-8],[-6,-7],[1,-9],[-4,-10],[4,-5],[4,-4],[-3,-9],[2,-7],[-7,-3],[-8,-3],[-2,-3],[-3,-9],[8,5],[-5,10],[-10,6],[2,-9],[10,10],[-4,-4],[-7,5],[9,10],[7,3],[4,9],[2,-6],[-9,-3],[-8,-5],[-8,-1],[6,-9],[-1,4],[4,-9],[1,-4],[3,9],[-6,-9],[7,-9],[2,4],[-7,5],[-1,7],[8,-6],[3,-4],[-10,6],[-7,-2],[-6,-1],[-2,-8],[-7,-10],[-2,6],[10,9],[-1,-10],[5,-1],[-1,-7],[6,7],[1,9],[-8,6],[6,2],[-3,-1],[-5,9],[7,4],[-3,-6],[9,6],[-3,-9],[4,3],[-7,-5],[-7,9],[7,1],[8,-3],[6,-7],[-7,4],[8,10],[-9,3],[9,8],[-4,7],[-5,-7],[-6,1],[2,-7],[-10,6],[6,-1],[9,3],[-4,2],[-10,-1],[-9,-7],[9,-7],[7,-9],[-6,-7],[10,-7],[2,5],[-1,-3],[-9,-3],[5,3],[9,6],[-5,4],[-9,-4],[-7,-8],[-9,4],[-1,10],[-3,8],[4,-3],[-5,-8],[3,4],[3,3],[-8,-10],[5,6],[2,7],[8,5],[-9,4],[7,-4],[6,-2],[-3,8],[7,8],[-1,-9],[-2,-10],[10,-4],[-4,-2],[-2,9],[2,6],[10,9],[-9,9],[-5,5],[-3,-10],[10,3],[-10,-3],[1,10],[-5,3],[10,3],[2,1],[10,-5],[-1,-7],[8,-3],[7,3],[-7,-5],[1,8],[-3,3],[2,-3],[8,-7],[-4,9],[6,-10],[-5,-5],[8,-7],[-2,-10],[-7,-8],[-7,-1],[-10,5],[5,-4],[4,-6],[-9,-3],[4,7],[6,-9],[-2,-2],[-10,3],[3,4],[2,9],[-5,6],[9,-2],[1,9],[7,-10],[6,8],[-5,8],[9,-6],[-1,6],[3,2],[1,-4],[-3,10],[10,-9],[-2,-4],[7,4],[5,6],[6,-4],[4,-2],[-9,-5],[-9,2],[-5,-10],[7,-3],[-8,-2],[-9,-1],[-10,8],[2,-9],[6,1],[1,9],[-4,4],[-2,6],[5,5],[6,-1],[-4,2],[-8,-6],[5,2],[-3,-1],[-9,-8],[1,3],[4,2],[-5,-8],[-3,-6],[9,5],[-9,9],[9,1],[-4,-9],[5,-1],[-9,2],[-5,4],[3,10],[1,-8],[-4,4],[-7,-9],[4,-6],[-7,1],[-1,1],[-5,5],[-6,2],[10,-10],[6,-6],[-9,-4],[3,5],[8,-8],[-8,4],[-8,3],[-3,3],[-2,-8],[7,1],[-10,-2],[-4,5],[-2,10],[5,-5],[-4,7],[1,1],[-3,2],[-4,7],[-8,7],[5,-4],[6,-8],[8,4],[-2,-7],[10,-8],[8,4],[-5,-4],[-1,4],[4,2],[-2,2],[6,9],[-8,-2],[-8,-5],[2,-6],[10,1],[2,7],[3,-9],[4,4],[9,7],[-4,10],[-1,8],[-2,-2],[8,-6],[-1,8],[4,1],[-9,7],[10,5],[-3,8],[10,9],[2,-6],[5,1],[-5,-9],[8,-9],[5,-5],[10,-3],[-7,-8],[6,-8],[-9,1],[4,-9],[4,-10],[-8,-9],[4,1],[4,-10],[-4,-5],[-8,-1],[7,2],[-5,-10],[10,9],[-10,-2],[2,2],[-7,6],[-3,-2],[-6,-1],[-6,-2],[-5,-1],[-6,-3],[-1,-3],[-10,9],[-7,1],[-8,4],[-7,-4],[-7,7],[3,-7],[8,-5],[8,-2],[-3,8],[-5,-2],[1,8],[-1,2],[-3,10],[-4,-4],[8,1],[-9,6],[3,-2],[10,-3],[9,10],[6,-8],[2,-2],[6,1],[7,-9],[5,8],[9,8],[3,-2],[-3,-10],[6,-7],[-5,-5],[6,6],[9,2],[3,2],[10,-3],[3,5],[10,4],[-5,-6],[-1,3],[8,5],[-5,1],[-8,9],[-5,3],[8,4],[5,-5],[1,5],[4,-1],[7,2],[-4,-1],[-8,-10],[-3,-10],[3,10],[-4,-10],[-8,-10],[3,7],[-7,4],[-1,-4],[5,3],[9,8],[9,-9],[5,-9],[4,-7],[1,7],[-4,1],[-3,-6],[1,6],[-3,3],[2,-7],[3,2],[-5,2],[-5,-8],[-9,-6],[-6,-1],[-4,-8],[-1,10]], dtype = "uint64")#candidate|4013|(416, 2)|const|uint64
call_4012 = relay.TupleGetItem(func_33_call(relay.reshape(const_4013.astype('uint64'), [4, 13, 16])), 0)
call_4014 = relay.TupleGetItem(func_35_call(relay.reshape(const_4013.astype('uint64'), [4, 13, 16])), 0)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_4015 = relay.TupleGetItem(func_3662_call(relay.reshape(const_4013.astype('uint64'), [104, 8])), 0)
call_4016 = relay.TupleGetItem(func_3664_call(relay.reshape(const_4013.astype('uint64'), [104, 8])), 0)
output = relay.Tuple([call_4009,call_4012,const_4013,call_4015,])
output2 = relay.Tuple([call_4010,call_4014,const_4013,call_4016,])
func_4019 = relay.Function([], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
output = func_4019()
func_4020 = relay.Function([], output)
mutated_mod['func_4020'] = func_4020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4021 = func_3267_call()
call_4022 = func_3267_call()
func_3506_call = mod.get_global_var('func_3506')
func_3509_call = mutated_mod.get_global_var('func_3509')
const_4024 = relay.const([-4,9,3,-2,-5,8,-4,-3,8,3,-7,7,6,-6,-7,7,3,3,7,-8,4,10,-6,-4,-1,10,8,7,-7,10,-9,5,-4,7,8,4,1,9,-8,-2,1,-7,1,6,-7,4,-5,10], dtype = "uint32")#candidate|4024|(48,)|const|uint32
call_4023 = relay.TupleGetItem(func_3506_call(relay.reshape(const_4024.astype('uint32'), [4, 4, 3])), 0)
call_4025 = relay.TupleGetItem(func_3509_call(relay.reshape(const_4024.astype('uint32'), [4, 4, 3])), 0)
output = relay.Tuple([call_4021,call_4023,const_4024,])
output2 = relay.Tuple([call_4022,call_4025,const_4024,])
func_4026 = relay.Function([], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
output = func_4026()
func_4027 = relay.Function([], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4090 = func_3267_call()
call_4091 = func_3267_call()
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
var_4110 = relay.var("var_4110", dtype = "bool", shape = (10, 52))#candidate|4110|(10, 52)|var|bool
var_4111 = relay.var("var_4111", dtype = "uint64", shape = (832,))#candidate|4111|(832,)|var|uint64
call_4109 = relay.TupleGetItem(func_215_call(relay.reshape(var_4110.astype('bool'), [4, 13, 10]), relay.reshape(var_4111.astype('uint64'), [1, 832]), ), 2)
call_4112 = relay.TupleGetItem(func_218_call(relay.reshape(var_4110.astype('bool'), [4, 13, 10]), relay.reshape(var_4111.astype('uint64'), [1, 832]), ), 2)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_4116 = relay.TupleGetItem(func_3662_call(relay.reshape(call_4109.astype('uint64'), [104, 8])), 2)
call_4117 = relay.TupleGetItem(func_3664_call(relay.reshape(call_4109.astype('uint64'), [104, 8])), 2)
uop_4132 = relay.asinh(call_4116.astype('float64')) # shape=(104, 8)
uop_4134 = relay.asinh(call_4117.astype('float64')) # shape=(104, 8)
output = relay.Tuple([call_4090,call_4109,var_4110,var_4111,uop_4132,])
output2 = relay.Tuple([call_4091,call_4112,var_4110,var_4111,uop_4134,])
func_4137 = relay.Function([var_4110,var_4111,], output)
mod['func_4137'] = func_4137
mod = relay.transform.InferType()(mod)
mutated_mod['func_4137'] = func_4137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mutated_mod.get_global_var('func_4137')
var_4139 = relay.var("var_4139", dtype = "bool", shape = (10, 52))#candidate|4139|(10, 52)|var|bool
var_4140 = relay.var("var_4140", dtype = "uint64", shape = (832,))#candidate|4140|(832,)|var|uint64
call_4138 = func_4137_call(var_4139,var_4140,)
output = call_4138
func_4141 = relay.Function([var_4139,var_4140,], output)
mutated_mod['func_4141'] = func_4141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4201 = relay.TupleGetItem(func_3094_call(), 0)
call_4202 = relay.TupleGetItem(func_3096_call(), 0)
var_4212 = relay.var("var_4212", dtype = "uint32", shape = (4, 5, 3))#candidate|4212|(4, 5, 3)|var|uint32
bop_4213 = relay.bitwise_or(call_4201.astype('uint32'), var_4212.astype('uint32')) # shape=(4, 5, 3)
bop_4216 = relay.bitwise_or(call_4202.astype('uint32'), var_4212.astype('uint32')) # shape=(4, 5, 3)
output = bop_4213
output2 = bop_4216
func_4225 = relay.Function([var_4212,], output)
mod['func_4225'] = func_4225
mod = relay.transform.InferType()(mod)
var_4226 = relay.var("var_4226", dtype = "uint32", shape = (4, 5, 3))#candidate|4226|(4, 5, 3)|var|uint32
output = func_4225(var_4226)
func_4227 = relay.Function([var_4226], output)
mutated_mod['func_4227'] = func_4227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4238 = relay.TupleGetItem(func_3879_call(), 0)
call_4239 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([call_4238,])
output2 = relay.Tuple([call_4239,])
func_4240 = relay.Function([], output)
mod['func_4240'] = func_4240
mod = relay.transform.InferType()(mod)
output = func_4240()
func_4241 = relay.Function([], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_4260 = relay.TupleGetItem(func_3073_call(), 1)
call_4261 = relay.TupleGetItem(func_3075_call(), 1)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_4264 = relay.TupleGetItem(func_4026_call(), 0)
call_4265 = relay.TupleGetItem(func_4027_call(), 0)
output = relay.Tuple([call_4260,call_4264,])
output2 = relay.Tuple([call_4261,call_4265,])
func_4277 = relay.Function([], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
output = func_4277()
func_4278 = relay.Function([], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4289 = relay.TupleGetItem(func_3094_call(), 0)
call_4290 = relay.TupleGetItem(func_3096_call(), 0)
output = relay.Tuple([call_4289,])
output2 = relay.Tuple([call_4290,])
func_4304 = relay.Function([], output)
mod['func_4304'] = func_4304
mod = relay.transform.InferType()(mod)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mutated_mod.get_global_var('func_4304')
call_4305 = func_4304_call()
output = call_4305
func_4306 = relay.Function([], output)
mutated_mod['func_4306'] = func_4306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_4315 = relay.TupleGetItem(func_3073_call(), 2)
call_4316 = relay.TupleGetItem(func_3075_call(), 2)
output = call_4315
output2 = call_4316
func_4332 = relay.Function([], output)
mod['func_4332'] = func_4332
mod = relay.transform.InferType()(mod)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mutated_mod.get_global_var('func_4332')
call_4333 = func_4332_call()
output = call_4333
func_4334 = relay.Function([], output)
mutated_mod['func_4334'] = func_4334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4359 = func_3267_call()
call_4360 = func_3267_call()
func_3444_call = mod.get_global_var('func_3444')
func_3448_call = mutated_mod.get_global_var('func_3448')
const_4362 = relay.const([-7,8,-10,1,-8,5,-9,-5,-4,3,5,3,6,8,6,-2,2,5,9,-5,-2,8,-3,-2,-4,-10,2,6,-5,10,2,6,-3,7,8,-8,4,-4,9,-5,8,1,9,2,2,7,5,9,4,-2,1,5,-8,-4,4,9,5,5,-7,-9,-10,-2,-10,5,-8,8,-8,7,-1,-2,-10,-8,9,2,10,-5,-8,7,8,1,10,-5,2,4,-3,-10,-5,2,4,2,-5,-6,1,-10,7,5,1,-6,4,-8,-8,1,-9,-9,-7,8,-5,-5,-10,-7,4,-4,2,2,2,2,-10,-3,-6,-3,5,-4,-10,9,4,6,-8,5,-2,5,-8,-4,-9,-7,-1,-9,4,9,4,3,-3,-8,-1,10,-1,-7,-1,-5,-10,-7,-5,-1,2,2,-7,-6,7,-1,6,-2,-6,5,-2,8,-5,6,1,-8,5,-1,-8,-3,10,3,-7,4,-4,1,-9,9,-5,-3,-2,1,2,2,-10,5,10,7,-3,-9,8,-4,-10,-1,9,1,-3,-9,-6,-7,5,-6,9,2,-2,8,2,7,6,7,9,7,2,-9,6,-3,-7,7,2,-10,2,-4,-2,8,-8,1,5,-1,3,-5,7,3,-9,-2,2,7,9,-2,-4,-7,7,2,-8,-9,5,4,-2,-6,7,-1,-9,7,-10,9,9,-8,7,-6,-5,8,9,-1,-6,1,6,-6,-10,5,2,-6,9,7,6,-1,-10,-10,-10,7,2,1,10,5,2,2,3,5,3,-7,7,9,-6,4,4,2,-1,-3,2,-3,-9,8,-2,-3,-7,4,-8,-1,4,10,9,3,5,-3,6,-1,10,7,4,-6,10,-3,5,-3,-1,6,-3,2,-4,6,2,9,7,-5,-5,10,-3,6,-10,6,1,1,-10,3,1,-8,-7,8,-2,-6,6,-6,10,-8,10,2,-7,-5,-8,-4,8,-4,8,10,5,-1,-4,1,-7,-6,4,-8,1,-1,-2,9,-7,-6,5,7,3,-10,-4,-1,-1,-10,5,7,9,-4,-2,-10,6,-6,-5,-8,2,5,2,-7,-5,7,2,3,-3,-4,-9,-4,2,5,-4,6,-2,1,9,6,-4,-1,8,-2,2,-8,10,-8,-3,-10,8,2,-8,-6,1,-8,-5,-5,-6,6,1,-1,-7,5,-3,-6,2,-3,-10,-5,10,-10,-4,-10,2,-10,-1,3,-1,-7,-3,7,10,6,-8,-3,-6,-3,-7,-3,-2,-1,-4,-10,-5,3,-9,-5,-2,-1,2,9,6,-10,-9,-2,-8,4,7,8,3,10,-2,3,6,4,-9,-5,7,9,-10,6,2,-9,6,-1,-9,-2,-5,-4,-10,-8,1,5,-1,-5,3,-9,1,-6,-7,5,9,6,-4,-3,-7,3,-4,-10,-3,6,-6,3,-4,4,5,7,9,-7,2,-7,-3,-10,9,4,3,-7,6,6,-8,-1,-2,-8,2,3,-9,6,1,9,-6,-3,2,7,2,9,-8,7,-1,-10,-2,8,5,3,9,-7,6,5,-2,7,-8,5,7,5,-7,-10,1,-10,3,2,5,7,9,-9,-4,6,1,9,1,5,-10,7,-4,-8], dtype = "uint64")#candidate|4362|(600,)|const|uint64
const_4363 = relay.const([7,8,8,7,-4,7,4,-9,-7,-10,5,2,10,4,1,7,-1,-3,4,-9,3,-10,-3,2,1,-4,8,4,-6,-6,-10,-4,-9,10,-8,-4,6,-10,2,8,-3,-2,10,1,-2,2,1,3,-4,-3,-3,-1,-2,-9,-4,10,9,10,-7,5,9,1,5,10,-8,-10,-2,3,4,8,7,5,9,-5,-8,4,-10,-5,-3,-2,10,4,-5,-5,9,6,9,-3,-9,-5,-1,-2,5,3,4,9,-9,7,-9,2,-6,-5,-10,-5,7,3,8,8,-5,-1,10,5,4,3,4,3,-2,5,5,8,-8,1,-8,-1,-9,4,-4,-9,2,-4,-7,-4,-3,2,9,-1,3,-4,8,6,8,9,10,10,1,-6,-1,9,3,2,-3,10,-3,-7,-10,10,-2,9,8,3,5,10,-2,-8,2,7,-2,-1,1,-8,2,8,9,-7,-9,10,10,10,1,-6,-9,-6,2,-8,5,8,5,3,-5,5,-1,-8,5,4,7,6,-5,-6,10,-3,-1,-6,7,2,-10,-6,2,-3,-1,10,8,-3,-8,1,-5,5,-7,4,-10,6,5,-4,-5,1,-3,5,7,-4,8,-3,2,-1,-10,-3,-5,-2,-2,-5,-3,-4,-7,8,6,9,9,-9,1,-2,-8,1,7,-2,-2,-5,-5,-3,-9,-8,-5,10,-10,-7,-10,-2,-7,10,8,2,-10,5,7,2,1,10,9,-9,7,-10,8,-5,-4,-10,8,-4,-10,-6,9,2,9,5,10,-7,-2,5,-8,5,-5,6,-9,-4,9,6,9,7,8,6,-6,6,-9,-5,1,-8,-7,10,5,4,5,2,-8,3,-1,-3,-3,4,-9,-10,-3,9,-3,5,-4,-1,-1,-4,-4,-2,-8,-3,-5,5,-5,6,-3,9,3,-5,-5,5,-3,-4,8,1,2,-6,-10,10,-6,-5,-1,-9,8,-1,-2,8,7,-2,7,-10,-9,7,9,-7,6,-6,-6,-1,-10,-7,3,10,9,-7,-7,-7,-5,-4,-2,9,-2,-4,1,3,10,-4,7,-2,-5,-5,6,-9,-4,5,-5,-3,1,-5,5,-4,10,-7,-3,5,10,2,-10,8,3,2,-10,-7,4,-3,-2,5,6,-10,3,-7,-3,-2,10,-9,-5,-1,7,8,-1,-2,10,6,-1,5,10,-8,10,8,-2,-3,7,4,3,7,4,7,-9,10,-9,-4,6,4,4,6,-8,-2,2,-10,7,8,-9,7,-10,-5,-3,-10,3,-5,-7,-2,9,-1,-2,-7,-2,-2,2,8,10,10,4,-2,-3,5,-9,4,-3,-10,-10,5,2,3,-9,-5,-4,-2,-5,7,-1,-8,1,10,-9,-10,7,-10,-5,2,-2,4,-2,-6,1,4,10,-4,-6,-7,-5,3,-2,-3,-6,2,-2,5,3,10,9,-5,8,9,6,-8,-3,-4,-5,-4,2,10,2,-9,-7,8,4,2,-5,-7,-7,1,-7,-6,2,5,6,7,1,5,-6,3,-6,-4,-7,1,6,-3,7,-7,-9,-10,-10,-5,4,8,-2,-9,-7,1,-4,8,-4,-2,10,9,-6,6,-7,-6,10,-8,4,-3,2,4,8,-5,5,-3,-9,-6,-1,-10,5,9,9,-10,-7,-5,-10,-5,1,9,7,10,-6,2,1,8,-9,1,-6,-10,-5,2,-4,-4,-4,10,6,-1,8,-2,7,-5,8,-4,-7,7,-1,-9,-3,1,-7,1,1,-8,7,-8,-1,-1,-8,-3,-1,-1,1,-9,-5,4,-9,5,-8,3,-10,-8,-3,-10,-5,-8,-7,-3,10,-1,-10,5,1,-3,1,-2,6,-4,2,4,10,6,-2,4,-10,-7,1,4,-1,8,-3,-5,-2,-2,4,2,9,-1,-8,2,-9,10,10,9,1,5,10,4,10,6,1,10,-7,-10,-4,-3,-1,3,5,5,3,-9,-10,5,-9,6,1,2,4,1,4,1,6,-7,7,-8,-1,-3,10,-1,-1,10,2,7,4,4,-3,3,10,-10,-1,-9,-5,-3,2,-5,2,4,9,-10,1,-1,8,4,2,-4,4,7,-6,6,6,-1,-1,2,8,3,5,-6,5,-8,-5,2,-6,1,-9,7,8,-6,3,-9,2,-2,5,10,7,-9,-10,2,-1,-7,-9,8,4,-8,-1,-8,10,-10,8,-7,7,5,-8,-5,-1,-9,-7,-8,10,10,3,-4], dtype = "uint64")#candidate|4363|(832,)|const|uint64
call_4361 = relay.TupleGetItem(func_3444_call(relay.reshape(const_4362.astype('uint64'), [8, 15, 5]), relay.reshape(const_4362.astype('uint64'), [8, 15, 5]), relay.reshape(const_4363.astype('uint64'), [832,]), ), 5)
call_4364 = relay.TupleGetItem(func_3448_call(relay.reshape(const_4362.astype('uint64'), [8, 15, 5]), relay.reshape(const_4362.astype('uint64'), [8, 15, 5]), relay.reshape(const_4363.astype('uint64'), [832,]), ), 5)
output = relay.Tuple([call_4359,call_4361,const_4362,const_4363,])
output2 = relay.Tuple([call_4360,call_4364,const_4362,const_4363,])
func_4369 = relay.Function([], output)
mod['func_4369'] = func_4369
mod = relay.transform.InferType()(mod)
output = func_4369()
func_4370 = relay.Function([], output)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4401 = func_3267_call()
call_4402 = func_3267_call()
output = call_4401
output2 = call_4402
func_4406 = relay.Function([], output)
mod['func_4406'] = func_4406
mod = relay.transform.InferType()(mod)
mutated_mod['func_4406'] = func_4406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mutated_mod.get_global_var('func_4406')
call_4407 = func_4406_call()
output = call_4407
func_4408 = relay.Function([], output)
mutated_mod['func_4408'] = func_4408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_4427 = relay.TupleGetItem(func_2713_call(), 0)
call_4428 = relay.TupleGetItem(func_2715_call(), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3217_call = mutated_mod.get_global_var('func_3217')
const_4440 = relay.const([[-1,-6,-4,8,-5,8,3,-6,-3,6,-8,-3,-7,1,-2,-9,-5,-9,7,2,-6,-1,-4,-7,-9,-4,-7,-8,-3,-8,-7,-9,-1,1,6,1,-4,3,9,-6,-3,7,-9,-4,-5,-7,-1,-5,5,-2,9,-4,-6,-4,-7,7,-3,1,9,-2,8,-7,6,-1,5,-5,-9,-9,8,-1,-4,-6,-3,6,-2,6,-10,1,4,10,-7,6,-3,-10,10,7,-2,-8,-2,6,-7,-6,-7,4,8,5]], dtype = "uint32")#candidate|4440|(1, 96)|const|uint32
var_4441 = relay.var("var_4441", dtype = "bool", shape = (1, 520))#candidate|4441|(1, 520)|var|bool
call_4439 = relay.TupleGetItem(func_3213_call(relay.reshape(const_4440.astype('uint32'), [8, 12]), relay.reshape(var_4441.astype('bool'), [520,]), ), 0)
call_4442 = relay.TupleGetItem(func_3217_call(relay.reshape(const_4440.astype('uint32'), [8, 12]), relay.reshape(var_4441.astype('bool'), [520,]), ), 0)
var_4445 = relay.var("var_4445", dtype = "uint32", shape = (3, 96))#candidate|4445|(3, 96)|var|uint32
bop_4446 = relay.floor_mod(const_4440.astype('float64'), var_4445.astype('float64')) # shape=(3, 96)
uop_4453 = relay.asin(call_4427.astype('float32')) # shape=(4, 1, 3)
uop_4455 = relay.asin(call_4428.astype('float32')) # shape=(4, 1, 3)
output = relay.Tuple([call_4439,var_4441,bop_4446,uop_4453,])
output2 = relay.Tuple([call_4442,var_4441,bop_4446,uop_4455,])
func_4458 = relay.Function([var_4441,var_4445,], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
var_4459 = relay.var("var_4459", dtype = "bool", shape = (1, 520))#candidate|4459|(1, 520)|var|bool
var_4460 = relay.var("var_4460", dtype = "uint32", shape = (3, 96))#candidate|4460|(3, 96)|var|uint32
output = func_4458(var_4459,var_4460,)
func_4461 = relay.Function([var_4459,var_4460,], output)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4482 = relay.TupleGetItem(func_3879_call(), 0)
call_4483 = relay.TupleGetItem(func_3880_call(), 0)
var_4495 = relay.var("var_4495", dtype = "uint32", shape = (4, 1, 3))#candidate|4495|(4, 1, 3)|var|uint32
bop_4496 = relay.not_equal(call_4482.astype('bool'), relay.reshape(var_4495.astype('bool'), relay.shape_of(call_4482))) # shape=(4, 1, 3)
bop_4499 = relay.not_equal(call_4483.astype('bool'), relay.reshape(var_4495.astype('bool'), relay.shape_of(call_4483))) # shape=(4, 1, 3)
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
var_4503 = relay.var("var_4503", dtype = "uint64", shape = (4, 252))#candidate|4503|(4, 252)|var|uint64
var_4504 = relay.var("var_4504", dtype = "bool", shape = (520,))#candidate|4504|(520,)|var|bool
call_4502 = relay.TupleGetItem(func_2941_call(relay.reshape(var_4503.astype('uint64'), [1008,]), relay.reshape(var_4504.astype('bool'), [520,]), ), 3)
call_4505 = relay.TupleGetItem(func_2944_call(relay.reshape(var_4503.astype('uint64'), [1008,]), relay.reshape(var_4504.astype('bool'), [520,]), ), 3)
func_3999_call = mod.get_global_var('func_3999')
func_4002_call = mutated_mod.get_global_var('func_4002')
var_4507 = relay.var("var_4507", dtype = "float32", shape = (660,))#candidate|4507|(660,)|var|float32
call_4506 = relay.TupleGetItem(func_3999_call(relay.reshape(var_4507.astype('float32'), [110, 6])), 1)
call_4508 = relay.TupleGetItem(func_4002_call(relay.reshape(var_4507.astype('float32'), [110, 6])), 1)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
call_4519 = relay.TupleGetItem(func_215_call(relay.reshape(var_4504.astype('bool'), [4, 13, 10]), relay.reshape(call_4506.astype('uint64'), [1, 832]), ), 0)
call_4520 = relay.TupleGetItem(func_218_call(relay.reshape(var_4504.astype('bool'), [4, 13, 10]), relay.reshape(call_4506.astype('uint64'), [1, 832]), ), 0)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4530 = relay.TupleGetItem(func_3094_call(), 0)
call_4531 = relay.TupleGetItem(func_3096_call(), 0)
func_2441_call = mod.get_global_var('func_2441')
func_2444_call = mutated_mod.get_global_var('func_2444')
var_4539 = relay.var("var_4539", dtype = "float64", shape = (1540,))#candidate|4539|(1540,)|var|float64
call_4538 = relay.TupleGetItem(func_2441_call(relay.reshape(var_4539.astype('float64'), [14, 11, 10])), 0)
call_4540 = relay.TupleGetItem(func_2444_call(relay.reshape(var_4539.astype('float64'), [14, 11, 10])), 0)
func_3506_call = mod.get_global_var('func_3506')
func_3509_call = mutated_mod.get_global_var('func_3509')
var_4560 = relay.var("var_4560", dtype = "uint32", shape = (48, 1))#candidate|4560|(48, 1)|var|uint32
call_4559 = relay.TupleGetItem(func_3506_call(relay.reshape(var_4560.astype('uint32'), [4, 4, 3])), 0)
call_4561 = relay.TupleGetItem(func_3509_call(relay.reshape(var_4560.astype('uint32'), [4, 4, 3])), 0)
func_3017_call = mod.get_global_var('func_3017')
func_3020_call = mutated_mod.get_global_var('func_3020')
call_4574 = relay.TupleGetItem(func_3017_call(relay.reshape(call_4530.astype('uint32'), [4, 1, 3]), relay.reshape(call_4506.astype('uint64'), [832,]), ), 0)
call_4575 = relay.TupleGetItem(func_3020_call(relay.reshape(call_4530.astype('uint32'), [4, 1, 3]), relay.reshape(call_4506.astype('uint64'), [832,]), ), 0)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4577 = relay.TupleGetItem(func_3879_call(), 0)
call_4578 = relay.TupleGetItem(func_3880_call(), 0)
func_4458_call = mod.get_global_var('func_4458')
func_4461_call = mutated_mod.get_global_var('func_4461')
const_4595 = relay.const([4,-1,2,5,-3,-10,-7,2,-9,6,3,2,2,8,-9,-8,-2,-8,-3,10,9,-9,-1,8,9,5,-7,5,-3,7,-5,7,-5,2,7,2,-4,-4,1,-6,-7,-4,9,4,-2,8,-5,7,-1,8,4,5,10,-4,1,-3,10,3,-7,-5,-7,8,-7,1,-7,5,-8,9,2,-3,3,1,3,5,2,-3,-3,10,8,-8,-10,-4,5,-10,-9,2,-7,5,9,-4,-2,-10,7,-4,5,10,7,6,9,1,-9,10,-7,7,-7,-7,-7,-3,-10,1,-3,1,-7,3,4,-6,8,10,10,-1,10,7,8,-2,-9,4,-4,-3,5,-8,2,4,9,7,-1,8,8,-9,-7,7,-5,-9,9,1,8,4,3,-1,-2,-4,7,-4,-7,-3,5,-2,4,-1,-1,-8,-4,-8,10,3,-8,-5,-7,1,-2,-10,-6,-7,-4,-5,3,-4,6,7,-1,-8,-5,3,-9,-10,1,-6,-2,9,-1,1,-8,2,6,9,-8,-8,7,-7,-8,-5,-4,-5,-6,-2,-9,-1,-7,10,-2,5,-4,-3,4,7,-4,10,5,-8,-2,-10,-5,-9,-3,8,-7,-5,5,2,-7,-3,1,-1,-1,-9,-9,-5,9,-7,-2,-10,-7,8,3,3,-8,1,2,-8,-10,5,8,-4,-3,-1,-5,1,-10,-7,-2,-2,-7,-2,6,-1,8,6,7,5,8,-2,-9,-8,-6,1,-5,8,10,2,-1,2,8,-7,5,-4,8,-9,-1,-5], dtype = "uint32")#candidate|4595|(288,)|const|uint32
call_4594 = relay.TupleGetItem(func_4458_call(relay.reshape(var_4504.astype('bool'), [1, 520]), relay.reshape(const_4595.astype('uint32'), [3, 96]), ), 2)
call_4596 = relay.TupleGetItem(func_4461_call(relay.reshape(var_4504.astype('bool'), [1, 520]), relay.reshape(const_4595.astype('uint32'), [3, 96]), ), 2)
output = relay.Tuple([bop_4496,call_4502,var_4503,var_4504,call_4506,var_4507,call_4519,call_4530,call_4538,var_4539,call_4559,var_4560,call_4574,call_4577,call_4594,const_4595,])
output2 = relay.Tuple([bop_4499,call_4505,var_4503,var_4504,call_4508,var_4507,call_4520,call_4531,call_4540,var_4539,call_4561,var_4560,call_4575,call_4578,call_4596,const_4595,])
func_4599 = relay.Function([var_4495,var_4503,var_4504,var_4507,var_4539,var_4560,], output)
mod['func_4599'] = func_4599
mod = relay.transform.InferType()(mod)
var_4600 = relay.var("var_4600", dtype = "uint32", shape = (4, 1, 3))#candidate|4600|(4, 1, 3)|var|uint32
var_4601 = relay.var("var_4601", dtype = "uint64", shape = (4, 252))#candidate|4601|(4, 252)|var|uint64
var_4602 = relay.var("var_4602", dtype = "bool", shape = (520,))#candidate|4602|(520,)|var|bool
var_4603 = relay.var("var_4603", dtype = "float32", shape = (660,))#candidate|4603|(660,)|var|float32
var_4604 = relay.var("var_4604", dtype = "float64", shape = (1540,))#candidate|4604|(1540,)|var|float64
var_4605 = relay.var("var_4605", dtype = "uint32", shape = (48, 1))#candidate|4605|(48, 1)|var|uint32
output = func_4599(var_4600,var_4601,var_4602,var_4603,var_4604,var_4605,)
func_4606 = relay.Function([var_4600,var_4601,var_4602,var_4603,var_4604,var_4605,], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4617 = relay.TupleGetItem(func_3094_call(), 0)
call_4618 = relay.TupleGetItem(func_3096_call(), 0)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_4626 = func_2900_call()
call_4627 = func_2900_call()
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_4631 = relay.TupleGetItem(func_3482_call(), 0)
call_4632 = relay.TupleGetItem(func_3484_call(), 0)
bop_4640 = relay.power(call_4617.astype('float32'), relay.reshape(call_4631.astype('float32'), relay.shape_of(call_4617))) # shape=(4, 1, 3)
bop_4643 = relay.power(call_4618.astype('float32'), relay.reshape(call_4632.astype('float32'), relay.shape_of(call_4618))) # shape=(4, 1, 3)
uop_4645 = relay.sinh(call_4617.astype('float32')) # shape=(4, 1, 3)
uop_4647 = relay.sinh(call_4618.astype('float32')) # shape=(4, 1, 3)
func_3999_call = mod.get_global_var('func_3999')
func_4002_call = mutated_mod.get_global_var('func_4002')
var_4649 = relay.var("var_4649", dtype = "float32", shape = (660,))#candidate|4649|(660,)|var|float32
call_4648 = relay.TupleGetItem(func_3999_call(relay.reshape(var_4649.astype('float32'), [110, 6])), 5)
call_4650 = relay.TupleGetItem(func_4002_call(relay.reshape(var_4649.astype('float32'), [110, 6])), 5)
output = relay.Tuple([call_4626,bop_4640,uop_4645,call_4648,var_4649,])
output2 = relay.Tuple([call_4627,bop_4643,uop_4647,call_4650,var_4649,])
func_4661 = relay.Function([var_4649,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4662 = relay.var("var_4662", dtype = "float32", shape = (660,))#candidate|4662|(660,)|var|float32
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4663 = func_4661_call(var_4662)
output = call_4663
func_4664 = relay.Function([var_4662], output)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4742 = relay.TupleGetItem(func_3094_call(), 0)
call_4743 = relay.TupleGetItem(func_3096_call(), 0)
output = relay.Tuple([call_4742,])
output2 = relay.Tuple([call_4743,])
func_4775 = relay.Function([], output)
mod['func_4775'] = func_4775
mod = relay.transform.InferType()(mod)
output = func_4775()
func_4776 = relay.Function([], output)
mutated_mod['func_4776'] = func_4776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_4786 = func_2900_call()
call_4787 = func_2900_call()
var_4788 = relay.var("var_4788", dtype = "uint32", shape = (4, 9, 3))#candidate|4788|(4, 9, 3)|var|uint32
bop_4789 = relay.less(call_4786.astype('bool'), var_4788.astype('bool')) # shape=(4, 9, 3)
bop_4792 = relay.less(call_4787.astype('bool'), var_4788.astype('bool')) # shape=(4, 9, 3)
bop_4793 = relay.power(var_4788.astype('float32'), call_4786.astype('float32')) # shape=(4, 9, 3)
bop_4796 = relay.power(var_4788.astype('float32'), call_4787.astype('float32')) # shape=(4, 9, 3)
output = relay.Tuple([bop_4789,bop_4793,])
output2 = relay.Tuple([bop_4792,bop_4796,])
func_4814 = relay.Function([var_4788,], output)
mod['func_4814'] = func_4814
mod = relay.transform.InferType()(mod)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4815 = relay.var("var_4815", dtype = "uint32", shape = (4, 9, 3))#candidate|4815|(4, 9, 3)|var|uint32
func_4814_call = mutated_mod.get_global_var('func_4814')
call_4816 = func_4814_call(var_4815)
output = call_4816
func_4817 = relay.Function([var_4815], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_4839 = relay.TupleGetItem(func_4277_call(), 1)
call_4840 = relay.TupleGetItem(func_4278_call(), 1)
output = call_4839
output2 = call_4840
func_4844 = relay.Function([], output)
mod['func_4844'] = func_4844
mod = relay.transform.InferType()(mod)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mutated_mod.get_global_var('func_4844')
call_4845 = func_4844_call()
output = call_4845
func_4846 = relay.Function([], output)
mutated_mod['func_4846'] = func_4846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4901 = relay.TupleGetItem(func_3879_call(), 0)
call_4902 = relay.TupleGetItem(func_3880_call(), 0)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_4909 = relay.const([[5.043048,6.006994],[4.750477,-8.623186],[-7.470461,7.858131],[-4.217680,-9.011996],[2.548582,6.130085],[7.741132,-7.788821],[-1.126883,8.560245],[2.942163,0.884451],[6.419943,7.012880],[-9.119831,6.988074],[-9.061709,7.675731],[1.672383,8.531626],[-7.327451,-9.578410],[-6.068438,2.476540],[1.771287,-5.901782],[-0.485772,8.746387],[-4.830227,-4.099279],[0.434823,9.385631],[8.209134,-6.818064],[3.485001,8.602503],[-8.822272,8.431785],[-7.724280,3.697588],[4.248059,-1.298968],[2.301312,-3.743082],[2.466159,2.361606],[-4.370431,-7.580215],[0.923436,-1.201315],[-2.178423,-5.562503],[-0.480247,-7.002564],[-7.090056,-1.225100],[4.777893,-2.375345],[-1.995284,-0.244267],[7.535095,-1.726042],[0.319504,9.945392],[9.633330,2.303827],[-8.518922,-4.333779],[2.526957,6.199147],[-7.971872,5.113874],[3.192767,7.993422],[-4.007792,2.361939],[7.364849,7.203730],[-9.465879,0.840131],[3.185609,9.337012],[-4.753694,-3.759982],[-1.691514,9.679293],[3.157397,-4.009175],[-6.859421,-1.437561],[-7.171489,1.258161],[-9.944651,-3.159517],[5.853642,-0.152990],[-6.704417,-1.882401],[-1.588568,-2.026916],[3.925749,5.147594],[-2.266614,3.979569],[4.474251,-4.779534],[8.419782,6.825832],[-9.028386,-5.139066],[6.725400,-5.849476],[-5.783493,-6.443991],[0.551062,-6.439431],[9.148350,4.269133],[8.011015,-8.603970],[3.755134,-6.403795],[-3.527014,-6.255139],[4.840501,0.908973],[5.711282,-7.519141],[-1.453883,-5.365659],[1.856992,-2.308044],[6.491768,3.367018],[-3.358390,0.831938],[-9.566425,-8.962907],[-8.454902,1.003594],[3.572707,-6.399331],[9.679464,7.588052],[-9.076586,9.826941],[-1.398988,-1.036903],[-3.106657,-6.628985],[2.395318,-2.464758],[-5.752530,0.527500],[8.109064,-7.156957],[4.571150,6.733873],[-3.286450,-5.692196],[5.896572,-0.214911],[-3.064857,6.189555],[-6.546209,5.985977],[3.438754,5.224113],[4.804734,-2.638194],[-1.035083,2.456098],[-5.767449,-6.994410],[8.552770,0.938201],[-8.338190,-2.302749],[-0.769380,1.115452],[-8.752587,-4.927334],[-7.208288,5.380940],[-8.918282,-6.029623],[-4.703495,-8.363887],[2.055175,6.037024],[-7.748491,8.743231],[7.937996,9.113943],[5.822220,-8.145997],[7.070549,1.146776],[3.965570,2.109838],[3.975860,-2.042910],[-5.350898,-3.745344],[8.268050,-3.227293],[-3.626636,-6.187821],[-5.979604,8.190948],[9.992285,5.276428],[-2.156013,-6.244966],[8.934649,-0.131533],[-4.231880,-5.631610],[4.437161,-9.975757],[0.118575,-7.946468],[-0.872293,7.978400],[-8.248400,-6.214568],[-1.371334,9.088290],[-6.598576,-9.305147],[1.980361,-7.662572],[8.120133,-0.022515],[3.417105,2.736718],[-5.855630,-9.847348],[1.337140,9.133507],[-5.075675,8.890677],[6.221632,-6.569032],[-9.668380,4.153936],[7.488140,4.484382],[-3.199210,8.120505],[-2.438547,-0.930302],[0.908109,0.914452],[-4.175440,-7.765744],[-9.005222,-8.676855],[-6.786698,-3.934804],[5.154205,2.442078],[5.876823,-6.130974],[-2.912770,-8.223339],[-0.975752,7.918483],[8.156292,-5.175348],[0.447379,0.535092],[-2.974657,0.358048],[-4.018991,-7.166934],[1.448118,-0.251456],[-5.932586,8.536126],[-9.593801,-1.772981],[-7.918413,-8.350410],[-2.668140,-2.759586],[-6.422504,-1.662141],[4.755648,1.423568],[8.097174,7.206832],[0.089383,7.740526],[-7.764804,1.630141],[-7.901478,-5.745843],[9.765736,6.524544],[6.969837,-4.109351],[3.323342,2.648228],[-9.724765,-6.519148],[-0.094706,8.680662],[0.879324,2.735527],[0.590682,-2.777398],[-6.280201,-1.670659],[-7.369912,-0.742757],[2.825479,3.142817],[7.582725,5.401445],[7.547525,5.346422],[-3.964600,-8.222081],[1.628353,7.699381],[-3.585583,5.710205],[-9.500028,-3.795551],[9.102153,8.133336],[7.595475,4.760691],[6.756917,6.935579],[-4.321894,-0.948367],[8.792266,-4.936321],[-2.699895,9.851711],[4.279704,-0.545135],[-1.903848,-4.739945],[3.733885,0.717298],[-6.159078,9.752430],[4.339395,3.169028],[0.849071,-6.469158],[-9.938990,9.650957],[4.429112,9.663397],[4.931794,-0.219208],[-7.354549,8.196931],[-4.077831,9.017502],[2.681457,-4.876463],[0.737586,-5.048720],[5.347495,1.024789],[4.468426,5.571099],[4.809673,-3.178249],[-5.101505,-8.035475],[7.128120,-0.222323],[-4.899946,7.407438],[-6.103261,9.381178],[0.731034,-0.892708],[-6.327708,-1.709896],[-1.429916,-6.168899],[-3.577592,3.724730],[-3.174553,0.186990],[0.160544,9.207941],[8.164397,-3.539875],[1.980506,2.471406],[3.220965,1.809696],[2.698006,-1.014516],[6.669680,6.952059],[7.306570,-7.069215],[1.665971,7.648606],[5.471547,-7.418903],[6.050593,-4.879699],[-2.559815,6.150676],[6.566235,-9.572022],[-9.128597,1.426768],[4.753754,6.126765],[6.001704,-4.410622],[-9.312285,5.992748],[7.965814,-9.916318],[-4.190078,9.665324],[6.965506,5.566421],[4.995357,6.754264],[-2.199546,-5.617312],[-9.501434,-6.910475],[2.419947,-1.690536],[-3.167187,-2.466451],[9.976416,1.797596],[0.081344,3.810006],[7.810871,-0.280662],[-4.972646,6.875085],[-4.880027,-9.673504],[6.993454,-1.865252],[-9.240953,-1.949707],[-1.262248,-1.439782],[-4.138903,-1.537356],[-7.251055,-0.475700],[-9.529531,-8.098505],[-8.340559,9.771056],[5.835634,6.598958],[-4.705467,-4.543377],[-9.058882,1.028894],[8.182241,3.042594],[2.718598,5.423622],[6.785527,-7.262800],[-6.363307,-2.869029],[-5.246262,1.508921],[0.650794,-7.356324],[-9.903039,-5.860424],[-2.401947,-4.013938],[5.050905,0.520368],[6.971644,-2.970795],[-9.547550,-3.386999],[-2.067252,9.892678],[-4.419891,-6.620213],[-3.607365,5.204273],[3.967947,1.487255],[0.787377,0.395497],[4.561639,-9.422128],[-4.014345,0.455610],[1.163479,7.622541],[-9.672709,-8.391872],[-3.234830,3.431346],[4.505417,0.830040],[-6.454100,-0.786705],[-2.085565,7.222696],[-2.619952,-4.005027],[-8.728516,7.982809],[4.713361,9.413371],[-7.567575,-1.486167],[8.439711,3.992074],[-9.833668,0.100222],[0.792900,2.415905],[-8.766477,-9.520839],[-3.695417,1.930026],[-0.624927,-0.024479],[9.194621,-1.190856],[6.767659,-1.442048],[-9.288375,5.911847],[1.874419,5.586801],[1.565587,-3.132791],[7.807560,-7.205569],[-5.783397,3.398480],[5.526694,-5.576572],[8.183211,-7.248946],[-7.311361,4.798093],[-9.868325,5.895848],[-9.867232,-1.703978],[3.478291,1.779371],[3.009780,-7.561949],[6.638598,7.971529],[8.479191,6.348960],[-3.843275,5.762726],[1.857813,7.407936],[-9.475040,1.911935],[1.186274,-5.860186],[-6.427698,-3.267024],[5.296502,7.220026],[-4.402292,4.636971],[5.861218,-3.916507],[-8.052640,-7.291553],[2.425879,0.110765],[-8.285475,-4.658017],[2.373176,7.182283],[-8.898403,4.451456],[-3.489750,-6.458104],[6.381869,0.352973],[-3.272027,-4.730813],[2.515393,-3.046786],[-0.026157,-5.155330],[-6.513482,0.608138],[2.675106,-5.169820],[-7.534568,-1.327687],[-5.945893,4.282564],[-0.387568,-6.660715],[-8.550887,-2.867660],[1.742565,-2.621682],[-6.125675,4.606124],[0.134766,-2.511759],[1.617679,-3.759542],[2.284757,-7.620116],[4.985601,6.729885],[-0.655520,2.546310],[2.399995,6.704734],[-3.381533,-6.937937],[-8.135000,-6.924756],[-1.758674,0.757148],[7.218783,0.373548],[-1.474455,-2.073767],[4.331318,2.301426],[-1.782638,9.024251],[-2.683588,-2.084288],[-4.167222,-8.726825],[-1.413629,9.194592],[3.249153,-4.564150],[-1.212893,8.941814],[-1.322095,1.636961],[-4.982453,7.901961],[2.924479,-7.653099],[2.020710,-0.671784],[9.342173,4.274355],[7.582227,2.161854],[7.680332,7.707387],[4.019440,-3.467248],[5.717589,-0.486305],[-4.711400,-4.466521],[-4.438329,-5.871145],[6.037226,3.994023],[3.261161,1.908908],[8.604099,4.568202],[-2.679055,2.168041],[-4.842465,6.694364],[1.543560,2.840812],[-6.613937,7.770439],[-2.687526,-1.405078],[-0.642458,-4.917456],[-1.769922,2.318819],[-9.718093,-2.464310],[9.679222,7.640795],[8.132907,3.394667],[-9.777732,2.224169],[-0.147655,9.163547],[-0.754088,7.824079],[2.515377,-4.329729],[3.850792,-3.918049],[-0.783175,-1.551246],[-1.142832,7.041482],[2.929211,-3.807274],[0.532784,-2.939198],[-4.220471,-6.506063],[4.372451,2.499221],[-1.564692,3.616200],[4.248943,4.926245],[-8.421553,-2.382830],[3.522279,4.870806],[-9.612763,-6.146554],[2.921557,-5.300671],[-4.166859,-4.960391],[-8.677697,8.949669],[2.608239,-9.185477],[-1.089461,-0.757158],[1.147694,5.911520],[3.054168,9.663021],[-3.922037,2.174824],[-5.824276,1.363181],[1.634784,3.845659],[4.602861,-7.821399],[1.140772,-4.387204],[-3.647000,-3.497367],[6.949965,1.338842],[-0.749118,-2.499956],[-7.807477,-1.068531],[7.712753,-6.874850],[9.389665,-8.908923],[-8.142671,9.608148],[7.898585,4.578791],[4.207919,-9.552179],[1.978696,2.059346],[-3.671046,-0.534269],[0.064975,-3.656123],[-1.380328,1.208446],[-4.316816,-4.559601],[-4.239463,-3.788747],[1.351233,-1.939890],[2.664917,1.076364],[-7.727426,6.366980],[6.969782,4.205380],[-9.889480,4.147678],[-2.449433,2.465027],[3.033153,5.775571],[7.544088,2.857875],[7.873146,0.442468],[-5.805790,7.192640],[4.117690,-4.579130],[-8.412348,-9.106878],[6.345899,5.504708],[-9.472497,-7.476069],[0.781897,-6.401379],[5.402258,1.362064],[4.140310,1.480207],[-7.519563,-3.314213],[0.983091,-3.081139],[-2.260611,0.005395],[-0.850576,-0.118091],[0.304438,-8.742275],[-5.982671,2.870306],[8.450563,5.389174],[-0.170561,-4.874621],[8.553221,-6.464917],[8.784758,1.403210],[0.496434,2.967004],[6.035615,2.911038],[-4.116971,8.864633],[-6.808236,-7.607975],[-9.299319,-3.400705],[0.846881,3.850885],[4.146353,4.599898],[-5.447073,-3.412682],[1.673263,8.805721],[8.275007,4.058714],[7.148119,8.160291],[-4.954232,7.010984],[3.765035,4.716230],[-7.903848,3.599873],[-5.965481,0.275208],[1.569108,9.079784],[6.648439,-5.561314],[3.724308,3.140960],[-0.619345,-6.746917],[-6.715993,5.631164],[5.257616,-0.718029],[2.088966,5.283731],[6.891317,-0.794729],[-2.787232,1.246427],[5.962243,2.016162],[-6.181884,4.057871],[4.713758,3.295454],[2.563372,0.007842],[3.115819,-3.468254],[1.038104,-9.285771],[-1.517534,-7.554003],[-2.196693,1.754751],[3.928476,-5.704369],[8.809436,-6.788591],[4.788020,-9.868808],[3.399497,3.557001],[-8.003155,2.744503],[8.996617,-0.672532],[8.839630,8.921757],[-1.868322,2.740241],[5.611939,5.261185],[6.613401,6.249413],[8.859332,2.142482],[5.303262,7.780881],[-6.015990,6.702389],[7.453463,-0.255089],[-7.696931,-3.753308],[-0.503153,-6.052064],[-2.177705,-2.166333],[-9.377701,-4.541540],[9.724796,-7.016067],[0.356727,-0.400914],[-2.625234,9.362034],[4.198016,-9.946834],[4.133258,8.856351],[-5.987778,0.026985],[1.108262,-0.481134],[6.916194,-6.760515],[-3.052190,1.603601],[-6.648010,-3.447701],[-0.817787,-5.690334],[8.318643,1.732518],[-9.447375,-7.257793],[4.520080,9.610850],[7.266136,-9.924540],[-3.877861,1.290757],[7.221959,-0.720735],[4.546162,-1.757891],[6.840975,3.250218],[-1.910847,5.216691],[4.416355,1.793707],[-8.847421,-8.527864],[3.240697,-6.678948],[6.134171,-7.945382],[2.566468,-0.678710],[5.488505,-7.537413],[-1.879130,4.368451],[-1.272439,3.868477],[-8.601615,-1.635771],[3.093195,-6.888592],[7.744282,-8.562739],[1.811859,9.720512],[-5.225196,4.104047],[3.560957,-7.771810],[3.569069,-8.633141],[-7.541630,-7.916549],[-7.575999,0.014192],[7.468434,-4.870971],[3.886217,3.427266],[-5.126373,4.535820],[-9.031158,-4.773770],[-4.144927,9.077994],[1.129533,1.820165],[3.591674,-5.965872],[1.417294,3.002544]], dtype = "float64")#candidate|4909|(520, 2)|const|float64
call_4908 = relay.TupleGetItem(func_2792_call(relay.reshape(const_4909.astype('float64'), [520, 2])), 1)
call_4910 = relay.TupleGetItem(func_2794_call(relay.reshape(const_4909.astype('float64'), [520, 2])), 1)
output = relay.Tuple([call_4901,call_4908,const_4909,])
output2 = relay.Tuple([call_4902,call_4910,const_4909,])
func_4920 = relay.Function([], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
mutated_mod['func_4920'] = func_4920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mutated_mod.get_global_var('func_4920')
call_4921 = func_4920_call()
output = call_4921
func_4922 = relay.Function([], output)
mutated_mod['func_4922'] = func_4922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_4925 = relay.TupleGetItem(func_4026_call(), 0)
call_4926 = relay.TupleGetItem(func_4027_call(), 0)
output = call_4925
output2 = call_4926
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
call_4935 = func_4934_call()
output = call_4935
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4945 = relay.var("var_4945", dtype = "float64", shape = ())#candidate|4945|()|var|float64
const_4946 = relay.const([[[-6.483015,-6.426059,-7.315130,-9.929673],[-3.323216,-4.301648,-5.668948,-3.168949],[0.339504,8.691049,-4.837671,-8.105411],[5.951276,8.401497,-4.492662,-7.390986],[-3.630665,4.849862,6.219363,-3.109443],[6.100066,5.554763,-1.263838,5.540444],[3.319675,3.962500,6.980758,-7.403179],[4.195185,-9.829766,-4.486095,0.064690],[2.947778,0.789160,-6.258323,-2.926738],[-4.136008,9.972083,5.030649,-2.816588],[8.259567,-5.499819,7.348280,-1.340863]]], dtype = "float64")#candidate|4946|(1, 11, 4)|const|float64
bop_4947 = relay.power(var_4945.astype('float64'), const_4946.astype('float64')) # shape=(1, 11, 4)
bop_4959 = relay.greater(var_4945.astype('bool'), const_4946.astype('bool')) # shape=(1, 11, 4)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_4964 = relay.TupleGetItem(func_4026_call(), 0)
call_4965 = relay.TupleGetItem(func_4027_call(), 0)
bop_4969 = relay.greater_equal(var_4945.astype('bool'), const_4946.astype('bool')) # shape=(1, 11, 4)
output = relay.Tuple([bop_4947,bop_4959,call_4964,bop_4969,])
output2 = relay.Tuple([bop_4947,bop_4959,call_4965,bop_4969,])
func_4974 = relay.Function([var_4945,], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
var_4975 = relay.var("var_4975", dtype = "float64", shape = ())#candidate|4975|()|var|float64
output = func_4974(var_4975)
func_4976 = relay.Function([var_4975], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4776_call = mutated_mod.get_global_var('func_4776')
call_4981 = relay.TupleGetItem(func_4775_call(), 0)
call_4982 = relay.TupleGetItem(func_4776_call(), 0)
output = call_4981
output2 = call_4982
func_4991 = relay.Function([], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4991_call = mutated_mod.get_global_var('func_4991')
call_4992 = func_4991_call()
output = call_4992
func_4993 = relay.Function([], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_5000 = func_3267_call()
call_5001 = func_3267_call()
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_5010 = relay.const([9.352263,6.373248,-8.763406,9.020069,7.360760,8.736551,-3.968528,-7.398184,-7.964825,-6.081536,-7.015859,8.055211,0.247001,4.176291,-9.807122,8.208244,1.845253,5.214871,9.610983,-5.295064,8.549429,-7.053319,-2.149056,5.222953,1.740647,-7.499950,-8.378318,-2.721675,9.761150,8.845138,7.691872,9.011207,1.302565,-5.884111,0.027491,7.214048,4.774515,6.865400,-4.994684,-4.635054,-4.344396,-8.568355,-4.171755,-1.892443,-5.104021,3.041878,-6.119661,4.524448,9.610576,-7.407988,-8.948609,5.902469,-2.338651,4.929799,-9.678410,-4.602862,-3.512716,5.777721,7.527900,2.843593,8.525394,3.604190,4.967619,7.469364,7.872962,-3.442163,-7.323133,5.737207,-6.897314,8.763039,-4.248766,0.433127,-5.513149,-6.582331,-7.550388,-6.452008,-5.976747,-3.555531,-2.758682,2.713325,5.774899,8.301811,3.003142,-2.535179,8.053080,-3.205126,0.635785,9.698267,9.965035,-1.740594,9.181223,0.492253,-9.242530,4.315487,-9.470027,-9.995819,-7.584747,0.764544,-6.135990,4.647979,9.037595,-6.915395,3.206118,1.828366,8.739489,4.217874,-3.851906,-5.756693,-8.143208,3.703655,-3.842816,-2.166508,7.297034,7.440173,-0.270209,4.123080,-9.556833,-0.481790,9.408958,-8.379902,4.671265,8.994228,3.831697,2.533150,-3.992223,-9.583559,-7.795636,0.948346,-2.149955,-4.185692,-2.918600,-5.708302,0.096519,-7.882345,-5.847361,6.979715,-6.892401,1.907592,-9.674728,9.876562,8.321100,-3.974353,9.634130,0.141771,-0.658816,-2.019371,-5.098892,9.254483,3.732732,-5.762542,2.544062,-7.604157,7.358686,3.454198,-6.152761,-2.803410,-0.475404,9.469450,-1.766847,9.114806,-6.896897,5.655405,-2.125476,-3.996317,0.977712,-5.523178,-2.482925,-9.946803,-2.822625,-9.784377,3.940505,9.126272,6.370122,4.061128,9.274684,-7.719602,-1.239170,-3.734922,-8.762034,-8.408144,-9.002169,-2.304791,2.252732,-9.729552,-3.458625,-0.887466,0.369431,5.756801,2.760714,-8.306742,0.227949,-8.941148,9.561827,7.182116,-1.019972,4.459819,-1.475558,7.584971,-3.620528,5.536349,-7.396669,-6.788860,2.192669,-4.252874,-7.562157,-3.121992,8.894352,0.753757,5.850173,4.789695,8.947515,-1.980791,-4.166562,9.553592,5.620720,-6.626302,9.469921,5.513901,-5.563148,7.063947,7.183417,6.390419,-8.522815,2.670626,0.422067,5.271369,2.575612,-2.266534,-1.957251,-3.225910,-0.461834,0.531644,-7.445731,7.595658,4.059822,2.636569,-8.423843,2.250422,-2.725480,-2.297072,2.425088,-8.078555,-5.995504,9.415790,-0.789921,-0.137352,-3.664873,-4.407477,8.745167,7.314779,-2.937167,9.453650,2.107164,-6.441970,0.862768,9.122570,-4.783588,8.323242,-6.937144,5.351512,-9.152244,-9.140412,-9.808652,4.104247,-8.479457,-1.371187,-4.964725,0.530450,-4.981294,6.314484,-4.237996,2.357634,-8.646953,8.113894,5.854773,5.500216,3.722523,-1.155982,9.514808,7.170653,-4.932214,-1.346640,4.701558,3.942961,2.093189,3.703223,2.958594,8.726910,4.227819,6.602014,7.493792,-3.983829,-6.311406,-9.120441,0.972295,0.344873,3.141956,-1.829867,6.805663,8.685712,-8.385580,-6.439826,9.490132,6.164877,5.305837,8.160784,8.723563,4.374862,-0.152182,5.667199,5.851458,0.255427,5.297296,0.638859,1.586388,2.759496,0.262696,-1.173446,0.170626,1.451918,-5.320482,-6.911427,-0.464001,6.652251,5.842966,-1.925625,0.845505,-4.602618,7.511787,1.947204,-2.380804,-3.771557,-0.897517,-7.924095,-3.509595,-2.948538,-3.345681,4.733424,-1.274646,1.651941,9.350354,-9.172814,9.745075,0.578563,-5.888720,-6.230506,-8.769262,-3.553347,8.231079,-2.655128,-4.186022,-2.633285,2.835543,-8.238340,-4.361632,-5.551328,0.578744,-8.535045,9.877221,-8.981936,-3.483365,-3.135928,7.235426,1.052566,3.178609,9.391949,7.488321,-5.833513,9.697666,-9.825794,-3.397226,6.522800,-4.464387,-7.866668,-8.552429,2.630616,7.076225,3.023744,2.404044,3.931420,-3.181917,-5.809401,-8.471565,6.082813,9.396137,4.766187,-7.847778,-3.102334,-6.725714,-9.687746,5.314477,2.043124,7.929927,5.712460,-5.876630,6.488941,8.397650,-4.291727,-4.657317,3.718168,0.755494,2.272189,-1.479180,-0.080150,-5.171304,8.942962,7.115346,2.218284,4.432116,4.527844,2.132233,-6.071626,-5.522717,9.218382,-5.212467,2.415531,4.546373,7.521199,-4.417785,8.771313,-4.420383,-1.613854,6.532365,-9.394550,-9.178825,-2.974733,-9.606179,5.630808,7.237857,8.148277,0.378772,-1.014194,1.121501,-5.341405,4.445035,6.062300,-6.801368,6.330628,5.168819,-6.058558,8.306734,2.999164,-9.520728,2.013394,8.027384,4.773560,8.513565,-6.503883,-6.119356,-2.430476,-0.822921,3.237004,4.730088,-7.701125,6.651172,-3.075937,-0.555195,-6.801506,-0.534504,-1.626170,2.000146,9.414482,3.730005,2.985018,-5.239121,-6.449346,6.947650,-0.003175,-6.645536,4.432977,4.949779,7.971238,-4.151521,-6.718363,5.945132,-8.992832,4.998758,4.932841,8.372328,-0.110400,-8.024139,-3.798074,-0.440519,-6.312550,-0.722463,-4.779002,1.333057,2.016501,-1.187756,0.683795,-1.136691,-5.930489,3.452356,0.639570,-2.111154,-5.663511,-5.693567,0.805812,5.467556,8.917328,4.138929,-3.292820,6.873721,-7.582187,1.500357,6.363353,-9.573497,2.536787,3.950642,-1.180040,-5.524509,-9.679866,-3.167875,-7.592913,3.015292,9.921732,0.295131,-2.430505,2.649318,-1.081838,-0.926871,-3.607531,3.796578,-5.365314,-4.642384,5.709312,5.345633,8.996327,8.216877,-9.563376,-2.444367,5.777552,4.443925,-1.746261,8.654246,1.244481,8.730485,-1.137079,-4.097346,6.294882,1.669797,6.528006,2.444379,-8.834505,-2.394950,1.994523,-0.817447,7.435415,-0.592894,-9.640526,-1.786623,2.825602,-2.286200,2.017824,-9.858632,8.552295,4.963847,0.750796,-2.726330,1.713671,-2.255979,3.187015,2.601966,-6.796566,-1.631435,3.575633,-0.278384,-7.131555,-3.840148,4.233235,1.932893,9.776106,-5.552588,1.531491,-9.614913,3.477907,1.316007,-3.897222,4.637320,5.202542,6.485014,9.486666,1.485105,-2.172442,4.955586,0.965348,4.852639,9.145230,0.474284,-8.526490,9.134366,-3.521294,-6.381292,9.053188,3.206124,8.929856,-8.344279,-3.696399,3.467197,0.190118,9.580397,1.272601,4.264934,-6.935031,0.695572,2.143242,-9.814096,1.619578,-0.218099,3.789508,7.953007,-8.504228,3.872403,-4.115947,-0.347222,4.951506,-5.035036,-8.023243,6.305014,-8.039477,6.906506,6.706226,4.196962,-1.093944,5.875851,1.540319,-8.311885,-8.874080,-7.976283,-2.010801,5.524450,-6.881753,-5.021821,4.424387,4.711782,-8.704869,1.238556,7.428477,6.684157,-6.725074,2.312238,8.241434,-1.090303,2.340818,-3.207647,3.345284,6.363509,6.286305,-9.392858,0.097821,-9.817710,-7.101556,8.123566,-5.701955,0.601359,5.905273,-0.391704,-8.938560,1.985249,-1.136628,-5.810521,4.932051,3.928785,2.396322,0.105752,-7.140860,3.028805,-3.741363,-1.396525,9.105299,2.483518,-7.983802,1.592177,-2.366707,-6.234116,6.887413,-1.117880,-8.196589,8.833848,9.646740,-1.110518,2.671846,-1.063832,-6.787692,-2.493857,-5.199083,-0.035900,-8.225508,-9.586005,-5.328355,4.114266,7.364871,-0.883623,5.616649,0.173029,4.543474,-4.129712,1.203155,-2.803197,4.353313,9.410618,-3.684204,-5.192531,-6.959675,-2.900785,5.783624,-1.044991,1.669858,-5.525874,-7.577514,-0.383661,3.092254,-9.062685,5.604719,-0.449988,-7.070575,9.546546,-5.864318,9.162701,-0.600178,7.342203,6.607581,-9.931822,6.069011,4.313612,-6.601632,0.742135,4.411399,9.356937,-0.702291,0.768796,4.727167,7.843984,5.200487,-7.889594,-1.092550,2.573995,3.229219,5.247842,1.774192,0.877809,-2.213705,1.392577,-8.975322,-9.361901,7.569897,5.300389,-5.393758,-6.635789,9.709696,7.600554,-3.168028,2.948930,-2.189158,-6.487851,-8.448638,-6.185630,-2.382369,-9.536842,-5.703583,8.909072,-6.096474,-7.913351,-9.454573,-9.574822,-5.417093,1.525179,7.233025,-6.783326,1.332347,4.668263,-0.251536,-9.230866,1.378803,-9.063722,-7.240843,4.839017,-5.660529,9.182121,-6.398129,4.677570,-3.774693,-9.997234,0.229873,1.506081,4.659288,-1.101461,-5.521135,6.094144,4.389513,9.862349,1.599894,4.497004,1.221270,-0.904724,-1.852230,-1.741935,5.110140,-8.048520,8.584681,9.588671,-5.977001,2.989900,3.634613,1.745619,-7.109675,-7.735191,1.891412,4.436781,-1.279854,5.578116,1.697825,5.792972,-7.223007,-9.123460,-6.288295,-8.031495,5.882816,9.014554,-6.146090,-1.923220,-5.791494,2.541378,-4.053796,-2.025349,-2.632321,1.235127,3.146067,-9.025168,3.918863,3.549295,2.840834,-5.965618,9.824137,6.112394,-7.024612,-5.950926,-6.002687,2.429682,0.939236,7.379921,1.209406,2.328598,-9.462127,-9.957369,-7.152728,8.810333,8.008674,5.861738,1.977211,1.775017,-1.106754,-4.403429,1.401925,9.152925,0.603041,-1.532318,7.277716,9.554655,-2.746155,6.663917,-0.804392,-8.729630,4.355298,-7.329138,-3.023954,-6.262604,-7.507343,0.229849,-7.382728,-6.285551,7.206195,-2.167773,-7.632151,-2.645358,6.788762,-1.193342,-5.833888,-1.480643,-5.239714,4.845909,-0.493537,5.240561,-1.443278,-7.923052,9.167886,4.316646,3.603796,3.325783,3.402864,-7.762627,-5.495980,-7.182775,4.159660,-8.100554,-1.888910,-3.484214,4.913613,7.540005,-1.963582,4.490674,-3.630716,6.263845,-4.878894,3.040183,-6.332870,0.709698,-8.501017,-3.601485,-9.866135,3.378768,-3.084815,0.039830,5.896972,7.620315,-4.299432,5.277099,2.104730,-9.669419,-3.849765,-9.508853,-7.077726,8.290117,1.199777,-3.626052,-5.407463,-0.115944,-0.488402,-7.095367,-9.462433,3.763584,-0.045094,2.340821,0.386610,-6.874102,-9.026738,3.136525,-3.411717,4.976757,-8.128805,5.984150,-4.755887,6.817486,9.435085,-8.539520,3.774332,-5.576563,8.109559,-0.487048,5.917991,-0.332758,5.318420,-7.731114,-7.628594,5.871138,-5.152252,6.587917,3.457474,7.528955,-1.270548,-3.442698,2.004463,-4.057638,9.728798,-9.052449,5.085402,-7.281877,-1.280028,-7.262005,-9.541770,3.424192,-0.824134,7.008378,1.202197,-5.478661,8.074997,9.656515,6.557223,8.137393,-4.210190,5.608181,-1.186180,-8.890156,1.888088,8.921544,5.507826,-5.047995,8.790853,4.195263,-7.781005,-0.818276,-9.827698,-7.252370,1.929690,-9.081398,0.590779,1.894511,9.591209,-3.953562,-9.971658,4.005577,-4.950318,3.557968,2.474275,-3.999486,-7.655435,8.384081,7.693398,-3.485160,7.809977,-5.832973,4.158273,-7.306032,-5.311124,9.626282,-1.748307,-0.904621,-4.436495,-1.476752,-9.859539,2.423021,-3.664865,4.286060,-9.091084,-1.507100,2.331489,7.595037,3.618543,3.193143,-4.992853,-4.221170,0.759359,-7.634926,7.911350,-2.229524,9.465730,-2.963398,-7.760997,7.939121,-1.063887], dtype = "float64")#candidate|5010|(1040,)|const|float64
call_5009 = relay.TupleGetItem(func_2792_call(relay.reshape(const_5010.astype('float64'), [520, 2])), 2)
call_5011 = relay.TupleGetItem(func_2794_call(relay.reshape(const_5010.astype('float64'), [520, 2])), 2)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5021 = relay.TupleGetItem(func_3482_call(), 0)
call_5022 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_5000,call_5009,const_5010,call_5021,])
output2 = relay.Tuple([call_5001,call_5011,const_5010,call_5022,])
func_5033 = relay.Function([], output)
mod['func_5033'] = func_5033
mod = relay.transform.InferType()(mod)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5033_call = mutated_mod.get_global_var('func_5033')
call_5034 = func_5033_call()
output = call_5034
func_5035 = relay.Function([], output)
mutated_mod['func_5035'] = func_5035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_5067 = relay.TupleGetItem(func_3879_call(), 0)
call_5068 = relay.TupleGetItem(func_3880_call(), 0)
uop_5069 = relay.cosh(call_5067.astype('float64')) # shape=(4, 1, 3)
uop_5071 = relay.cosh(call_5068.astype('float64')) # shape=(4, 1, 3)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_5081 = relay.TupleGetItem(func_4019_call(), 2)
call_5082 = relay.TupleGetItem(func_4020_call(), 2)
output = relay.Tuple([uop_5069,call_5081,])
output2 = relay.Tuple([uop_5071,call_5082,])
func_5085 = relay.Function([], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
output = func_5085()
func_5086 = relay.Function([], output)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_5090 = relay.TupleGetItem(func_3879_call(), 0)
call_5091 = relay.TupleGetItem(func_3880_call(), 0)
output = call_5090
output2 = call_5091
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
output = func_5095()
func_5096 = relay.Function([], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_5112 = func_4332_call()
call_5113 = func_4332_call()
var_5132 = relay.var("var_5132", dtype = "float64", shape = (1040,))#candidate|5132|(1040,)|var|float64
bop_5133 = relay.greater(call_5112.astype('bool'), relay.reshape(var_5132.astype('bool'), relay.shape_of(call_5112))) # shape=(1040,)
bop_5136 = relay.greater(call_5113.astype('bool'), relay.reshape(var_5132.astype('bool'), relay.shape_of(call_5113))) # shape=(1040,)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_5138 = relay.TupleGetItem(func_3879_call(), 0)
call_5139 = relay.TupleGetItem(func_3880_call(), 0)
func_3999_call = mod.get_global_var('func_3999')
func_4002_call = mutated_mod.get_global_var('func_4002')
var_5150 = relay.var("var_5150", dtype = "float32", shape = (660,))#candidate|5150|(660,)|var|float32
call_5149 = relay.TupleGetItem(func_3999_call(relay.reshape(var_5150.astype('float32'), [110, 6])), 5)
call_5151 = relay.TupleGetItem(func_4002_call(relay.reshape(var_5150.astype('float32'), [110, 6])), 5)
output = relay.Tuple([bop_5133,call_5138,call_5149,var_5150,])
output2 = relay.Tuple([bop_5136,call_5139,call_5151,var_5150,])
func_5164 = relay.Function([var_5132,var_5150,], output)
mod['func_5164'] = func_5164
mod = relay.transform.InferType()(mod)
var_5165 = relay.var("var_5165", dtype = "float64", shape = (1040,))#candidate|5165|(1040,)|var|float64
var_5166 = relay.var("var_5166", dtype = "float32", shape = (660,))#candidate|5166|(660,)|var|float32
output = func_5164(var_5165,var_5166,)
func_5167 = relay.Function([var_5165,var_5166,], output)
mutated_mod['func_5167'] = func_5167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_5169 = relay.TupleGetItem(func_4369_call(), 1)
call_5170 = relay.TupleGetItem(func_4370_call(), 1)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_5199 = func_4332_call()
call_5200 = func_4332_call()
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
var_5214 = relay.var("var_5214", dtype = "bool", shape = (520,))#candidate|5214|(520,)|var|bool
const_5215 = relay.const([-7,-3,-10,-7,9,-4,-6,-8,-2,7,-4,-10,2,-4,-1,5,3,-9,8,-7,1,-9,8,5,-2,7,-5,-4,4,5,2,-3,9,-10,-7,4,-8,-6,10,-8,6,-10,-4,-7,-10,-6,-4,9,-3,10,6,10,7,-2,-7,-9,8,3,-2,2,7,-6,9,6,-6,1,-10,-8,7,4,-10,9,4,2,6,-10,2,-6,5,2,-10,-3,-4,-9,-1,-6,-8,1,-9,-10,6,8,7,-8,7,2,-3,-10,-8,-9,-2,1,2,-3,-4,-3,-10,10,-6,10,10,-3,-8,1,1,-6,7,-6,9,7,2,-6,5,-2,8,-4,-3,-3,-9,-9,-6,-7,4,1,3,-9,-2,-7,-2,-5,10,-1,8,6,-2,-10,-1,1,-2,-9,2,2,-2,10,10,8,-7,-3,-5,-2,3,5,-1,-7,9,-8,3,-7,-8,1,-2,-8,-8,-2,9,9,-6,-5,-1,9,-10,4,-8,-8,-6,6,10,7,-4,-10,-2,6,5,4,6,9,2,-9,2,9,-8,6,-9,-5,-1,-8,6,-1,-5,-1,2,-5,1,7,1,3,-10,-7,-3,2,7,-9,3,-8,-8,-7,8,5,8,-5,9,-10,1,10,2,-10,-3,4,8,4,2,6,-5,-9,4,-2,6,-4,3,-10,7,4,8,5,1,-4,1,2,1,-7,-7,-10,4,7,7,10,7,3,3,3,-7,8,-7,2,-10,-4,1,-10,-9,2,-4,1,8,9,4,-7,1,9,-4,5,-3,2,5,8,-9,-2,-3,-6,-7,-4,9,3,7,-5,6,-6,2,-2,-2,-1,-3,3,3,8,-6,-2,4,-4,-9,3,-2,-6,-8,9,1,2,2,1,-7,-9,1,-8,9,5,3,-5,6,-7,-2,-6,-8,-8,-4,-8,-5,-5,-8,-1,-7,5,4,-4,3,-9,-10,7,-5,-10,3,-1,-3,-7,9,10,-6,-7,6,3,3,-2,8,2,-6,4,8,-8,-2,-6,2,-9,10,9,7,5,5,-4,-9,-6,-7,-2,6,10,4,-10,-9,-3,5,4,5,2,7,2,-2,-8,-1,-6,2,-6,1,1,5,10,9,3,-1,1,-1,-3,3,4,4,2,7,2,-4,-9,-10,-10,-2,10,-8,-3,-6,-3,-10,3,-6,-1,3,-8,-8,-5,-7,5,9,-3,8,7,-2,3,7,9,-10,-4,-4,9,1,-10,10,8,-3,-8,6,-3,8,-4,1,-6,-2,6,-5,9,1,-6,5,2,-4,-8,-8,3,-8,-8,-8,2,7,9,-4,-1,8,-6,3,2,2,10,-1,-3,7,10,8,-9,-1,-10,-7,-8,8,7,-5,9,-8,-5,-1,10,4,5,-1,8,5,6,8,-4,-9,-8,-1,-2,-5,10,9,-5,-9,4,7,3,-9,1,-3,4,7,8,8,-8,9,10,-7,9,-5,7,5,3,9,1,-10,-3,8,6,-1,10,2,6,-5,7,-9,2,-4,-8,-9,-4,8,6,1,2,8,-2,4,-10,-4,-8,1,7,-5,8,-7,-10,2,-9,-10,2,4,8,1,-6,-5,8,-4,-1,1,2,-4,3,10,8,4,10,4,-8,8,-2,10,-10,8,-3,3,-6,-8,2,10,2,9,-4,1,-10,7,1,3,-2,-5,9,-2,4,6,10,5,4,3,9,-1,1,2,-5,-7,7,4,1,-2,6,2,-6,7,3,7,1,10,5,-8,-6,-7,-9,8,7,-3,-10,8,-4,-7,4,-8,3,1,-9,-8,3,7,-8,-2,-6,9,-1,-1,3,-1,-3,4,-8,-4,3,3,9,10,6,-4,6,-8,2,2,-9,-4,6,8,2,-3,4,-3,-10,10,-4,8,-10,6,8,-1,3,-9,3,4,-1,-2,-7,-10,7,-10,-6,10,-7,-2,-6,-1,-8,9,10,-1,-2,-8,8,-3,7,6,4,-3,-4,-5,10,9,-6,3,4,7,-5,-3,2,-7,-1,-6,1,-5,4,5,-6,4,-5,-6,-1,4,-7,-8,-5,9,8,-3,3,-3,-10,5,-5,5,-5,8,5,1,-1,2,4,5,5,10,-8,8,-1,3,1,-5,-1,4,7,8,4,7,1,9,-8,5,2,-5,6,9,7,6,1,4,5,9,3,-7,-5,-10,5,-10,-9,-10,-2,4,6,-7,-2,-6,-4,8,8,10,2,-6,-5,4,1], dtype = "uint64")#candidate|5215|(832,)|const|uint64
call_5213 = relay.TupleGetItem(func_215_call(relay.reshape(var_5214.astype('bool'), [4, 13, 10]), relay.reshape(const_5215.astype('uint64'), [1, 832]), ), 0)
call_5216 = relay.TupleGetItem(func_218_call(relay.reshape(var_5214.astype('bool'), [4, 13, 10]), relay.reshape(const_5215.astype('uint64'), [1, 832]), ), 0)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_5217 = func_2900_call()
call_5218 = func_2900_call()
func_5164_call = mod.get_global_var('func_5164')
func_5167_call = mutated_mod.get_global_var('func_5167')
const_5223 = relay.const([3.299315,-6.099882,-6.861602,3.451078,9.219996,-7.914956,-1.651396,-5.528174,3.972248,-2.985170,-7.198074,1.537822,-8.108097,9.340246,-9.158984,-5.631036,-4.573372,-5.744979,3.363428,-8.373503,3.542180,3.479551,8.042944,-1.475751,-5.098036,-3.161646,-5.433195,-8.182331,0.603747,-5.755122,-1.605518,7.183031,4.358601,6.421195,7.456713,9.024829,6.406474,-6.616113,2.112468,3.250984,-4.452057,-3.104601,0.298423,4.073766,2.111474,-3.284330,2.709007,-2.005342,-5.979521,9.093829,9.854663,-9.325418,1.450521,9.398538,4.758142,-4.908024,1.590373,-9.410670,4.181702,4.854451,1.893095,6.030816,9.957732,3.736053,2.776960,-6.070649,-3.574164,0.707719,6.124478,-5.946068,7.034058,-4.740000,4.212844,7.760150,1.840901,1.944604,1.000696,7.744557,-3.737117,-5.712412,4.132994,-2.535532,3.427764,4.974113,6.563688,-8.178469,-1.505433,8.540520,1.413618,0.443570,5.707059,-4.251729,3.443313,8.480515,-7.919690,5.450915,-6.388209,1.171992,-0.987624,8.337289,-5.921962,-3.948913,-9.840828,1.766957,0.989919,-7.791143,8.180610,4.570982,-0.519068,8.051332,-5.753398,-6.206204,-9.740599,-8.251545,-5.201902,-0.875473,0.401048,-7.594449,-9.198467,-5.214022,-1.711255,-7.825333,4.561975,-2.933552,3.447482,-5.065784,-6.658660,-7.038651,9.222358,6.087720,-2.417787,-1.224242,1.459880,-6.709906,-0.933177,3.818186,7.587320,7.097758,0.245279,0.499968,0.631460,-0.830450,-5.096587,-2.182226,8.994798,-5.686614,-8.662952,-5.145624,2.012729,9.049592,7.649745,-8.596018,4.794198,2.239515,1.501434,6.136839,-5.900317,-6.511694,-8.223065,-6.798397,8.952208,-2.248775,-5.307846,7.454399,0.298291,2.454381,6.124398,0.427638,3.729482,1.141968,2.663225,9.546618,-3.216423,0.740264,6.207053,-2.369046,-0.279973,-6.233828,0.820888,-0.254806,-3.638507,7.654345,7.711741,-2.772760,9.867472,7.331028,-3.102002,8.539421,-4.574895,-4.542733,-9.492347,-4.933824,7.447656,1.111659,-3.626333,5.042526,-2.817205,-7.431195,6.615160,-9.866318,-0.738115,-4.993199,3.612671,2.205467,-9.630184,3.800690,2.283792,2.196627,-0.441951,3.136055,-2.249861,1.171622,-7.101142,-7.188828,5.710500,-2.053180,-2.226065,-9.765405,-7.215064,4.379777,9.612313,-7.638056,4.602632,3.011856,-4.041994,-8.350044,3.747260,8.137696,-9.849593,-5.772749,7.989922,3.316459,3.914179,9.027042,-0.710242,-9.970797,1.553708,-8.352612,-6.491434,-2.596097,-0.895079,1.708568,-7.735121,0.852430,-3.432503,-3.213434,4.292700,5.557721,-8.339513,-5.835401,5.973740,-2.659309,8.204302,0.082329,2.439723,9.108644,0.705359,4.184547,9.633290,-1.015951,-3.198944,3.719596,-8.538900,-5.008912,2.738687,2.003802,7.113844,2.112578,-9.552816,-0.612737,-2.517209,-5.398872,-2.610180,-8.482126,-4.078419,6.042207,7.185312,-9.576020,7.744462,-6.491234,-8.230426,-8.990288,-9.926085,-6.911716,-7.445120,-6.262887,-6.719003,-1.847923,-3.336635,9.459208,5.156132,-8.956623,0.978093,5.762680,0.866394,-1.815311,9.787873,-5.165277,-5.024727,9.964788,7.440808,-3.325291,-3.484215,2.435271,0.711438,6.629989,6.831793,8.226640,6.502995,-2.522550,8.109081,-6.963182,2.584382,-7.138642,3.296698,-7.849852,3.766000,0.925974,-7.026591,-6.968974,4.587022,-0.943120,8.021019,6.413457,-5.664960,-9.827677,-6.998237,8.200358,3.924275,-1.490617,8.354254,5.196653,2.159518,-2.227356,1.511220,1.915247,-2.843768,-6.192687,4.826384,-3.945068,0.882104,1.735054,9.806073,4.843045,-7.975331,-9.406969,-9.765294,-1.644433,-5.942006,7.849827,-1.032481,-1.865146,0.907913,-6.045531,-6.524702,-3.778359,1.505513,-1.831237,-8.450983,0.114668,9.336539,-9.447370,-9.868718,4.364423,0.419848,-7.437542,5.750877,8.366674,5.095167,2.235571,-1.512491,8.506755,-4.906373,3.032859,3.746683,8.708093,-4.987017,5.701573,9.152781,9.997425,0.351969,-1.903623,-4.349278,6.317390,8.555868,9.489445,1.398143,-5.061156,-2.370564,-7.275200,-8.653799,-0.080018,-1.690033,2.237381,-8.888936,-4.649605,9.972872,-5.163689,-8.817123,8.608037,7.995512,-9.005322,-3.776750,-7.231306,-6.384058,-1.334471,-3.903057,6.679960,-9.173663,-7.481305,1.077623,4.609436,4.843643,-9.114574,8.041882,-8.607082,-8.309765,1.170864,5.062335,-7.589003,6.185953,-6.403561,3.340625,-8.924603,5.045722,9.575709,8.374585,8.739034,-3.930419,1.243384,6.638245,-7.577700,-8.929645,-3.571428,8.862741,4.146523,-9.683917,6.616735,5.829499,7.812229,-0.087012,5.686556,2.901297,0.759293,-5.336988,-6.029846,-6.840451,1.342693,-4.653689,-7.919836,-8.885529,-7.291441,8.282565,8.345083,1.600293,1.747963,5.005741,-6.935930,3.166996,-8.466413,-1.596965,-7.755603,-0.421773,8.565992,9.846410,-2.703917,8.773053,-6.952836,-0.496502,2.552194,1.721140,-4.387536,8.468282,9.714559,-3.621594,-9.516519,-9.272178,1.005199,-0.621542,-0.027912,-8.498765,-0.259403,9.465951,-9.345150,-7.727731,-2.475287,6.486364,-9.614717,4.069198,4.508110,7.721222,-4.050856,-0.851436,-6.803700,-8.579733,5.663531,-7.318589,-2.135466,-0.895978,2.434872,-5.275141,-8.068793,-4.385227,-9.253629,8.321844,5.855586,4.156193,-5.163420,7.306593,-1.840209,8.045357,-2.891048,2.650927,-5.114795,-2.569049,-2.270472,4.255309,-4.119218,3.825031,2.977184,-2.134691,-0.367835,-6.904229,-9.548718,3.869532,4.758627,-7.788871,-1.896122,-0.803640,1.970506,9.205984,5.968084,5.199015,-2.543593,-3.538030,0.770707,7.448524,-3.457754,-9.561689,6.064379,7.373594,1.488452,6.425571,-0.805738,-2.053094,-3.710303,9.862205,-6.534786,1.879507,-6.136818,-1.963510,-5.531829,2.811739,4.403312,1.338071,0.373042,9.492654,-0.954192,1.757603,-7.709011,1.634466,2.195066,-8.596842,8.981556,-7.425487,8.230676,8.582987,-9.648212,-9.762501,-4.959679,0.032047,-5.889042,-0.649769,3.409026,1.250722,9.472761,-1.255158,-7.337242,-6.673425,-6.097078,0.273090,4.550299,4.993921,6.064551,5.969868,-9.353535,2.637730,2.104569,1.062715,9.379102,-7.652677,7.236901,4.076201,8.684142,4.160873,1.192459,6.469679,8.163348,-6.456024,-1.866329,6.579513,-5.000379,-1.097556,-4.972126,-9.408786,-5.344222,9.119263,1.160178,6.503911,-7.390463,-7.939589,1.690687,3.859960,6.466946,2.658486,8.970376,-2.930127,-7.884046,-6.738008,-0.470493,-1.694341,4.857944,7.257131,5.165773,-3.049628,4.511761,5.798597,-5.671448,-2.036681,-5.485110,-1.652864,-4.792481,-1.996279,2.825421,3.376861,0.154763,-4.997825,2.766308,-3.747229,0.941612,4.744221,8.913035,6.927993,5.518771,3.022496,-9.312141,7.590961,-6.875552,2.584032,-1.109394,-1.483598,-0.704724,3.526916,-0.505201,-9.546438,-1.322841,-7.520236,-2.187110,6.318746,0.082773], dtype = "float32")#candidate|5223|(660,)|const|float32
call_5222 = relay.TupleGetItem(func_5164_call(relay.reshape(call_5199.astype('float64'), [1040,]), relay.reshape(const_5223.astype('float32'), [660,]), ), 3)
call_5224 = relay.TupleGetItem(func_5167_call(relay.reshape(call_5199.astype('float64'), [1040,]), relay.reshape(const_5223.astype('float32'), [660,]), ), 3)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_5237 = relay.TupleGetItem(func_4240_call(), 0)
call_5238 = relay.TupleGetItem(func_4241_call(), 0)
output = relay.Tuple([call_5169,call_5199,call_5213,var_5214,const_5215,call_5217,call_5222,const_5223,call_5237,])
output2 = relay.Tuple([call_5170,call_5200,call_5216,var_5214,const_5215,call_5218,call_5224,const_5223,call_5238,])
func_5239 = relay.Function([var_5214,], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
var_5240 = relay.var("var_5240", dtype = "bool", shape = (520,))#candidate|5240|(520,)|var|bool
output = func_5239(var_5240)
func_5241 = relay.Function([var_5240], output)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3845_call = mod.get_global_var('func_3845')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_5256 = func_3845_call()
call_5257 = func_3845_call()
func_4599_call = mod.get_global_var('func_4599')
func_4606_call = mutated_mod.get_global_var('func_4606')
const_5265 = relay.const([-10,-6,-6,-8,-4,-10,-4,-6,1,-2,5,7,2,7,-8,8,7,-6,-3,-1,-5,-5,-9,7,10,2,-7,-3,7,-5,-10,-5,-9,10,-7,8,-4,-2,5,5,-3,1,4,-8,-5,7,8,-4,3,8,7,-6,8,-5,9,8,-5,-1,4,1,2,5,-2,-6,3,6,9,-10,-10,-10,3,1,9,-6,-1,10,-8,3,4,-4,-3,-6,4,9,-8,-3,1,8,7,-10,-2,-2,-7,-10,-4,9,-9,-10,-8,-7,2,-9,5,2,1,10,6,6,7,-6,2,-10,10,-4,-3,-7,2,-9,-3,-8,-4,-8,10,-4,9,10,5,2,2,-6,-6,1,10,4,-10,8,1,-4,1,10,6,-3,9,-8,5,7,10,-9,7,-4,8,-1,-9,9,-1,-1,-8,9,2,-2,5,8,7,-4,3,-1,9,9,5,7,9,-2,-2,6,-2,3,-8,-1,-2,-9,-4,-5,10,-2,-4,-8,8,-9,5,-8,-4,2,-4,4,1,-1,4,9,-2,9,-3,10,-9,4,6,10,-3,-1,7,-10,-1,-3,-9,-8,-5,-10,6,-2,10,-8,5,8,10,4,-7,4,-7,4,9,-8,9,-5,-7,9,-2,-8,6,-7,-5,2,7,-1,-2,2,-7,8,-8,2,-9,-5,-9,-7,8,1,-5,7,-8,-8,-3,4,3,-7,-2,-6,-1,1,5,5,2,-7,9,-10,-4,9,-1,7,-4,4,-5,-6,-3,-6,-7,-10,-7,5,-2,-4,5,4,-6,-9,7,-6,-4,-9,-1,3,-6,-6,-1,2,8,-10,9,1,4,6,5,-2,-4,6,-5,-5,4,-7,-10,10,5,3,1,9,-5,-5,-7,-9,-9,8,4,7,3,-4,-5,3,4,1,-9,3,5,4,6,-3,-6,10,-4,-1,5,2,-2,7,2,-3,10,6,-3,-7,2,5,3,-2,-6,-6,8,8,-4,6,-5,-8,5,10,4,7,1,6,9,3,-10,-4,-6,6,9,5,-3,7,-6,-5,8,8,6,-3,1,2,-4,10,1,1,10,-2,-8,-10,-9,5,-9,-7,7,1,6,1,-10,-2,-9,-10,9,-1,-2,3,7,9,3,10,5,-9,-5,-5,-3,5,-9,10,-7,-7,3,-2,-8,-6,-6,10,-10,-6,-3,-9,7,-8,-6,-6,-1,-2,3,-5,-7,-1,-1,-6,-3,-5,1,-5,-5,5,-3,-6,4,-9,4,-7,8,3,2,-10,2,-3,7,-3,1,8,9,-8,-4,9,4,-8,-5,-2,2,1,-5,-9,2,-7,-2,-9,-8,3,6,9,-9,2,2,2,-6,-10,-7,5,2,4,-6,-4,-10,6,10,-7,6,6,5,-2,1,2,-10,1,9,-6,6,7,7,-3,-1,-10,10,-5,-4,-6,8,6,4,-1,-3,-6,-9,7,10,-6,8,8,-2,3,-9,-4,4,8,-7,1,-8,-9,1,4,5,2,6,1,4,-5,-10,1,-10,4,-10,9,1,6,5,-5,7,-4,-9,10,-1,-6,7,7,-8,7,5,5,-8,-1,-10,5,-6,-10,-6,-10,-7,-7,6,2,-4,-2,-6,6,8,7,6,5,3,-6,-6,-7,3,-7,-8,2,7,3,-1,-7,8,8,8,-5,7,-1,10,-7,-1,-3,-1,-1,9,2,-4,-10,5,-6,1,5,5,-2,3,7,2,-3,4,-3,-9,-4,6,-7,4,-5,9,3,-7,6,-4,1,4,1,7,1,-1,-1,1,-9,5,7,5,5,-7,-1,7,-7,6,-9,3,1,4,-10,-3,-9,-4,-2,8,-10,-10,4,-3,-8,-10,-3,6,-7,-7,-7,-8,9,-5,-1,-8,-6,10,-6,4,1,1,-8,-10,-9,-2,7,5,9,7,-2,1,-3,-9,-3,7,8,-9,-6,1,-6,-4,-2,1,8,3,4,8,-4,-10,-2,2,4,-6,10,8,10,-3,2,4,-3,-9,-1,-6,-6,4,3,7,9,10,1,-7,1,-3,-3,4,-6,-3,-2,3,-7,-5,3,8,7,1,-7,9,10,10,1,-9,6,5,5,5,5,10,4,-9,-7,9,3,-1,-1,6,4,-10,-1,10,1,6,7,-3,4,-4,-6,-5,2,-2,5,-7,-5,-3,10,-10,1,6,-4,1,-4,-10,-9,-7,-9,5,7,6,7,-8,-5,9,-6,5,7,-9,2,-9,-2,-9,-7,6,-6,-6,2,-1,4,-2,-6,-2,5,-4,-1,-6,-1,-6,1,10,6,2,2,4,5,8,-5,6,4,-4,5,9,-7,4,-9,-5,2,1,-3,2,3,1,10,5,-9,8,1,10,2,-3,-8,-4,-8,-6,1,8,6,1,7,2,7,10,9,5,5,2,8,4,4,6,-8,1,-2,-1,-2,-6,5,8,-7,-3,1,-6,3,7,-1,-5,7,-2,10,-9,8,-3,1,-5,2,-1,-5,-4,-6,-8,-3,-6,8,-1,-3,3,6,-2,-5,7,7,4,4,2,10,7,-4,-6,-2,3,7,-5,-1,-2,-6,-8,9,-4,-2,3,8,-7,-4,5,2,-1,3,4,5,-2,6,-3,-2,10,-5,5,-4,4,-7,-5,-8,-8,10,-6,-1,-7,10,4,1,7,-6,9,-7,9,3,-3,-8,-3,6,-5,-10,3,-4,-4,-10,1,3,7,5], dtype = "uint64")#candidate|5265|(1008,)|const|uint64
var_5266 = relay.var("var_5266", dtype = "bool", shape = (520,))#candidate|5266|(520,)|var|bool
var_5267 = relay.var("var_5267", dtype = "float32", shape = (660,))#candidate|5267|(660,)|var|float32
const_5268 = relay.const([5.368208,0.264238,-8.367552,-3.816983,6.396808,3.327529,2.712508,-1.572961,-4.480776,0.484232,6.202825,3.042324,0.399695,-6.218826,1.879414,-1.354593,1.430884,8.653175,1.950525,-8.279509,9.949534,2.156519,-1.425521,6.729732,-8.749497,3.514829,-4.652209,0.683614,-5.130848,-5.239961,3.591155,-9.454199,-2.830634,1.480077,3.720378,6.431896,0.050570,4.796539,-4.717099,-7.251246,-7.024892,-3.061383,-7.025624,-8.202736,8.323413,-0.865506,0.364105,-5.467021,-2.040505,9.036481,0.096387,2.645120,-5.622566,-7.132944,8.491645,4.730384,0.276489,-0.755212,3.105761,-1.092597,2.084039,8.484622,-4.103101,7.558498,2.102380,-1.836993,7.164983,7.435195,3.755733,-7.133470,-7.105283,-3.367243,-0.241205,-2.551774,0.787538,-7.564185,7.453884,0.562940,0.224549,2.118123,-0.280956,2.657433,3.467081,3.799852,0.932568,3.745030,8.016622,8.885973,3.438727,5.220055,-5.467523,8.391973,2.255055,7.548772,4.655889,-0.726410,3.488970,3.260912,-8.485036,8.680719,2.303908,-7.326056,-6.510442,-5.863239,2.591099,-9.801643,8.425763,8.127396,-4.809107,-7.095216,6.106000,8.850544,-2.199163,4.572962,2.118991,-1.501237,-8.039320,9.024027,-6.521491,-6.702556,8.601813,-2.064675,-6.284784,-6.776926,-2.164207,5.086493,1.228990,-5.689287,2.848676,-4.419257,-6.633179,7.865146,4.746470,1.619018,-8.623461,9.014036,-4.528303,5.302562,-6.750316,-6.352170,-3.477312,-3.980199,-8.804085,1.420871,2.412906,2.028583,3.791100,-4.681691,8.403300,-1.303463,5.912783,-4.343505,2.052892,-1.814918,8.312512,7.310733,-9.969981,0.475344,-0.379530,1.495610,-2.176968,-4.130555,3.993317,6.488208,-6.493833,0.959389,6.817426,-2.960730,3.223823,-9.315906,2.237169,-9.955695,-8.598461,-2.922314,-4.364103,-6.855672,-6.840516,-0.255198,6.675383,1.551030,-5.357170,0.023810,-0.461830,-5.611074,-0.177941,-0.260445,-2.469146,-7.485050,-1.071785,-7.232567,-8.207338,0.780120,7.564153,-3.628942,2.197404,-7.443896,-5.180722,-2.608076,4.662042,-2.520555,3.374695,2.413370,8.695949,-5.940295,9.270683,4.024701,3.069384,-6.666244,-1.128932,1.557413,-9.758384,0.402377,0.675920,6.519595,0.294339,3.855273,-9.504208,-6.046499,-1.843790,0.370452,6.234874,6.285667,-4.446307,9.042581,-5.649585,-6.286592,6.573677,-3.114304,1.338860,3.112004,5.904910,-9.985134,-0.914852,-5.163559,3.794109,-1.436453,-4.003914,-5.186243,8.538670,0.218642,-0.227994,2.464505,-6.628286,2.717873,3.143283,-8.052906,9.662043,4.310489,0.475945,-2.233438,1.766893,-8.361410,-5.042203,-2.948780,-4.604153,8.852149,-0.657596,-6.525087,-8.526284,-2.476335,4.299768,5.312199,7.143300,-4.264003,-3.656540,-2.620677,5.004073,8.121912,6.268742,6.733365,7.671761,-8.893575,6.674159,-3.639472,-5.996264,-4.556081,7.687027,-2.199524,-8.563351,-5.061928,7.386558,-2.062701,5.968030,-5.930683,-9.498991,-4.355854,8.478905,9.704333,-0.561912,-9.012068,-7.647597,-9.986317,-4.250961,2.576655,8.189824,7.107665,-8.591144,2.020034,2.664321,-1.030210,5.532906,-3.560111,9.844206,-1.199560,7.302413,6.141533,2.704632,-2.233455,-4.673539,-9.575663,4.974024,6.796287,3.000891,9.914212,-2.999381,-0.605362,-4.453897,-0.885146,-9.677906,8.765081,-0.538373,-6.040035,-3.048091,1.766782,-3.085416,-1.228295,-3.062799,4.090194,-3.751420,-4.312549,-6.129579,3.172428,2.323311,-2.283534,-9.960778,-8.358364,-8.996275,-3.207856,7.887460,-0.322969,6.268588,8.702837,-8.016317,0.533928,6.741647,2.762276,8.648115,-6.333799,6.967956,-4.608989,9.892233,-4.022854,6.366797,-3.958059,-1.062771,-4.132381,-9.441593,7.835770,-7.398408,5.959597,5.102882,5.007733,2.566211,0.819389,0.568577,-6.344036,-4.994358,-0.039466,6.770511,-9.179103,0.326700,2.703936,-4.779266,-4.008095,-6.709403,-6.009402,8.692402,-5.385009,-2.455433,7.035855,1.115129,-0.199038,-0.193505,-7.376502,0.825732,8.469846,7.260324,-7.269379,-0.896126,5.754494,1.549315,-8.645870,2.837196,8.841448,-0.839136,6.095462,0.482540,-5.758877,4.295813,4.207805,8.923529,9.513776,-2.825891,2.762627,4.653478,3.953516,-9.903683,1.491638,-3.982011,4.212627,6.015344,-8.073312,-7.220038,-9.913245,9.707246,4.027111,-3.643637,-7.685794,-1.133111,9.719612,-1.904683,-1.281923,-9.037848,-7.715691,2.571919,-9.651052,4.519558,7.186986,5.472815,1.623654,3.444821,6.634325,4.346835,-3.369209,2.367772,3.873958,-8.522325,6.909421,3.794733,7.302290,5.366753,4.510393,7.287107,0.437718,-9.395610,1.468583,8.361185,-1.228457,-3.023086,-3.464408,-1.068976,2.425496,-5.038756,-9.524024,0.976205,-5.303710,2.570713,8.097631,-2.660440,3.397409,4.330923,-7.086281,9.560422,1.803207,-4.630894,-5.221107,-3.306570,4.917742,-9.716837,-4.544996,-0.267585,-1.273178,6.505855,-4.162489,-4.967470,-3.946376,-8.422740,-6.277901,0.627122,-2.137051,-7.995196,7.731743,-7.303768,7.131883,-7.793468,-9.060680,-9.569883,-2.157294,-8.318122,6.212687,-9.593384,-0.543105,-7.949628,-0.205159,0.277736,1.633778,3.971878,-6.010098,-8.608953,-0.948670,9.064933,8.324916,-1.541296,8.192495,-7.058274,4.019426,4.768094,3.111710,1.280307,4.415880,-8.446281,-3.089740,0.635163,-9.549777,-0.280368,-1.206138,5.544707,1.152417,3.836920,1.903825,9.425670,-6.702783,-7.019416,-7.347412,-0.956124,-8.020025,9.946619,-8.339444,8.265342,-9.216203,-9.743185,-2.280170,-1.409580,0.067102,-8.777098,4.700000,6.659795,-2.012192,3.881393,2.679796,1.951049,1.745758,-4.731230,4.556243,-9.734084,1.457360,7.718264,-9.111828,1.996418,6.493198,-2.335786,0.632667,2.489805,-2.431343,8.657296,-2.532770,4.346455,0.030854,6.064778,-8.029567,-8.781230,-0.007086,5.056140,4.516105,-2.948219,-5.915494,4.079049,6.508756,-4.451760,7.106879,1.417900,-4.879111,6.809184,5.699432,-8.329315,-2.707697,7.263402,-7.058875,-6.928901,-0.859615,1.397450,6.739764,-5.989950,9.171333,-1.189449,-5.084840,-7.263572,7.355516,-7.528314,-5.090719,-9.938340,4.247837,-2.065920,-4.724752,9.009997,3.088581,2.419456,2.591426,0.427976,-5.815459,-0.401351,-9.886828,9.192429,-6.389613,-5.876936,1.960533,-9.325783,-6.724600,-9.182000,1.076727,5.779561,-7.504009,9.269326,2.253187,-0.650566,3.889788,-9.068408,9.247424,7.544691,-8.652748,3.412043,-6.732345,-8.316410,-7.264691,5.782724,1.204297,-1.350045,4.307359,7.952367,7.862142,5.027838,-7.616658,-1.152547,1.428517,-1.511016,2.911866,2.740052,0.778426,-9.662791,2.479980,2.562719,6.334140,-7.749905,4.900928,4.175426,-8.766829,1.430688,-8.840861,-1.041266,0.229124,4.388387,-5.251902,-4.502412,5.624985,3.272957,-9.808238,3.379291,7.795854,5.202631,5.543333,0.462478,5.758377,8.435928,-7.302115,5.743765,-9.995851,-0.371335,-7.704699,-5.972336,7.336970,-9.653033,-8.332433,0.092761,5.584428,-1.262208,7.822853,-2.042734,3.035654,3.445894,-9.058375,4.102835,0.979455,8.986400,7.805183,8.668581,-2.209221,-8.327359,4.428641,-7.159558,-8.512343,-1.180128,-1.934858,-2.178319,-3.922809,9.613609,1.849211,3.918223,-0.673966,-2.420541,-5.623003,-0.873622,8.492190,3.622316,6.212865,8.207770,-3.400077,6.017475,0.835057,-8.972009,4.970769,-7.201092,7.717513,-4.442585,-7.918748,6.046968,-7.333088,2.336254,-8.726344,0.053503,-3.206958,-7.230560,-3.640547,3.811291,3.014302,4.003927,1.191986,5.217099,6.235506,-7.660214,-2.314313,-3.268340,-3.685426,-8.954344,-1.402928,-9.685541,4.977003,1.551767,-3.183495,7.605202,7.933211,4.862703,-0.261044,9.046599,-4.019210,9.647054,1.500946,1.521353,-4.833890,-5.945448,0.993811,1.691992,1.118178,-9.848542,-1.111610,-2.561940,-0.053863,-5.447372,-4.343933,-6.912969,-5.903640,-0.085686,2.869704,4.795504,7.813906,-6.535856,-7.343715,3.280643,4.110010,8.479487,1.741534,8.205530,7.550355,-4.976245,6.498965,-8.653349,9.390724,7.961844,3.047564,-3.446181,-5.626551,1.678876,-1.960463,2.763669,9.822094,6.897906,-8.699714,-7.217265,9.071647,1.072824,-6.595159,-6.133546,-2.260819,-5.477363,-3.525077,1.254708,-8.587002,0.581046,0.505793,-4.815218,6.148481,-9.945942,-2.184774,-6.951757,5.108905,-1.435115,5.224354,0.224329,-4.699226,4.816780,-0.867230,2.901017,-7.484310,-1.912452,2.522270,-1.913662,-2.021973,-7.744680,3.379404,-5.480629,4.158889,-0.021368,1.755774,-2.785275,-2.755564,-3.604136,-3.109227,5.805853,-3.070473,1.429561,-6.684758,7.232967,-7.282436,1.823236,-9.949454,-1.678413,-8.841539,-2.015284,3.259979,9.780538,8.028704,-9.757633,0.319153,-7.492678,9.188077,-3.717790,2.267797,0.139874,8.536415,3.072540,-0.186262,9.665523,2.871130,0.075449,8.425264,-3.674960,-9.872154,-1.338415,-3.739520,-9.071546,-1.792379,4.076204,-6.585671,3.362995,6.535996,6.776999,3.746603,-1.361572,-4.050824,8.614021,-5.664307,-1.056512,-2.944451,-8.767231,6.120370,0.660007,1.721311,6.076715,2.590563,-4.913701,-9.567873,-9.876425,-7.853880,-3.015556,-4.891500,-5.289380,4.124693,-5.711556,-8.711308,-4.251141,6.168387,2.620034,-1.061018,-5.919181,-7.850084,-0.684004,-3.928624,-8.214992,7.809753,1.325084,-2.018744,-8.813074,2.985747,1.813467,8.655661,1.453551,2.369483,-6.227873,-7.489854,2.534942,3.756114,8.727718,3.589346,-3.088185,-9.047851,-6.115625,-6.931683,-3.427718,2.280473,7.183365,0.372552,3.465178,4.209716,-1.928649,-2.921786,-9.295727,8.269406,1.606835,4.714447,3.189921,-7.725780,-7.151990,-9.335456,-4.065661,1.016016,-5.602932,-5.586328,6.161253,9.745116,3.054103,-0.702193,4.032381,1.291093,-5.590581,5.824541,-0.966299,2.287964,-9.406653,2.435100,-0.790582,-2.466193,5.190207,-1.946702,-4.866059,-8.241053,-6.438951,-9.750968,-7.010339,-6.029159,-1.106040,-8.545718,4.359304,-5.805417,1.909956,-5.338560,-3.785908,2.326948,-2.271422,-3.280894,2.020916,-8.561466,5.177088,-6.934679,9.563385,-3.072234,-5.212018,-6.711348,6.729036,7.050809,0.218810,-2.990556,-4.553886,6.485941,6.598950,2.828871,9.437455,-4.028308,-9.130375,-0.952966,-0.188486,-9.080422,-9.674242,-6.214622,5.570439,-8.954317,-5.174293,-0.190711,-9.970346,7.435166,2.430874,7.199791,-2.872873,-3.220013,-2.712991,-1.907322,6.574074,5.661595,-6.395127,9.508255,7.947525,-7.185089,-2.333119,-5.727546,-7.616920,0.760024,-4.315106,-6.259016,-1.400917,-7.109636,-2.599315,2.080612,8.637604,3.266011,0.555197,7.630823,-7.074171,-7.539202,-6.123307,-7.491595,-4.681724,-8.114114,-8.411599,1.913528,7.064485,5.285682,6.546503,-2.380920,6.746660,-7.577236,-1.580714,8.488822,9.765517,-9.820689,-7.005013,-0.516368,-5.218866,5.619363,-2.399813,5.048966,-8.192462,4.573492,-0.977035,-8.166649,8.374132,-7.275702,-4.745084,-4.905936,7.023687,5.302169,1.459675,-3.922538,4.041444,-6.301250,-2.972251,5.951217,-4.493571,-4.160277,-1.194343,-8.225959,1.250540,-8.109091,-7.031854,7.030782,1.509376,3.462497,2.696539,-7.311662,-5.575272,-3.667788,-4.746117,6.745338,-2.662652,8.632115,8.276909,-5.837719,-1.999507,-1.543474,0.877123,-7.882380,5.401320,-9.684576,4.600185,2.934370,7.115530,1.195283,0.192203,4.759040,-5.955468,4.245723,-4.533954,4.403171,-6.413456,-6.756626,1.563784,-5.802209,-2.304033,4.201747,7.148340,3.092048,-4.957493,-8.488473,-8.301345,2.107091,6.520733,-3.384136,-1.358555,-5.164272,9.119027,1.366857,-4.512303,2.255401,-9.880297,-3.451859,7.945891,-7.853504,-3.755804,-5.794278,-5.969055,-7.267667,-4.219650,-7.523099,-3.585201,8.601099,3.683157,-8.800023,-9.999155,-8.027484,7.500191,-4.674510,0.428062,-7.712021,1.931141,-4.332106,1.859403,1.004482,3.394811,-3.195757,6.479617,1.561222,-8.579910,-9.931656,-9.460592,6.860841,4.066049,-7.168122,6.531062,5.101039,8.582184,-7.339327,-6.795778,-6.081893,9.077085,3.125434,-1.223336,4.138670,-5.084945,6.141588,9.730488,-0.687117,-7.490886,5.431502,-4.728863,9.036111,-9.808847,-6.487129,7.146477,-7.797534,9.306694,0.408345,-4.700508,9.291717,-6.976142,8.727448,8.701840,3.850184,3.661906,1.286873,4.275589,2.692856,0.741413,-4.863513,1.972440,9.044003,-9.203076,-9.350917,-4.552075,4.668879,4.723588,-4.092609,9.580030,-7.801809,-3.065862,-5.938237,-5.114324,7.384106,4.048317,5.655437,-7.004273,2.956533,0.323193,6.969282,2.972173,2.640645,-8.265798,-1.180974,1.551069,-8.808848,-0.367132,5.635301,-1.959236,-1.914448,-7.014000,-3.107613,7.762787,9.992726,-7.700199,-9.357666,0.051718,-8.779513,6.966809,9.064340,0.338677,-5.621147,-1.532909,6.256447,-3.405736,-1.846224,2.679141,4.677299,1.443694,5.818278,1.997004,5.404938,1.562783,-3.014341,-3.600643,9.602142,0.860363,-7.580046,5.402583,9.818319,9.715970,-6.231447,-4.932016,4.224366,-4.053952,8.000995,-0.312740,8.482446,-1.854425,-4.696207,2.484094,3.185618,0.491410,9.295611,8.468793,-5.752861,-7.197096,1.252198,-1.532265,-0.365703,9.526367,4.885305,4.879253,-2.537568,-2.628491,-1.906129,-3.593092,4.232632,6.622788,6.992177,4.615061,-4.503931,-3.783313,-8.867661,-8.951445,-9.114170,8.004076,-0.849843,-9.683982,-9.746648,5.277831,-7.718219,-1.397609,-9.300715,-2.068235,-1.945233,2.041360,-5.624138,-2.635187,9.468480,3.673881,7.448162,6.935976,8.540104,-5.043140,-9.091199,1.108429,9.693921,-7.850650,8.963229,5.576721,-1.002713,-1.151452,9.659022,-5.057888,-9.615340,-7.588019,-6.388489,4.896186,4.350642,8.964424,5.988749,-6.424854,4.371778,-4.809349,-9.744750,-5.386861,6.818977,7.966372,-2.729724,4.717650,5.109257,-2.149632,0.519749,-7.099910,6.418879,-5.050274,-7.273613,9.136340,-9.130378,-8.575771,-6.688364,8.103481,-3.436327,-2.371942,-8.765053,1.729617,8.690064,3.726650,4.388940,2.466838,-9.929283,6.980437,-4.892938,-3.069257,7.284539,3.318747,2.324265,6.968928,0.398822,-4.391301,2.025783,-3.516705,8.251757,2.245544,8.638678,0.435727,-8.300376,-7.374108,-0.022523,4.769859,7.937584,3.144861,-7.220392,-3.107345,-1.318899,8.698231,-7.381343,-0.115638,-8.450251,-6.429940,-5.514413,7.958288,2.559763,1.284977,-8.349100,5.415265,-2.187884,-8.696503,6.939143,-4.511363,-2.655258,2.610148,2.067918,-6.142538,8.465544,4.006569,8.172303,-2.216198,-8.063214,-1.735852,2.938755,2.846281,-7.506538,-1.552395,-6.626686,7.138211,-0.465485,-2.221834,-2.640897,0.071959,6.412159,7.114002,7.108242,6.129342,9.240437,-1.299873,1.241496,-7.605569,-5.164614,9.300720,-3.810737,1.137827,0.521308,-7.359979,-7.323178,4.311347,2.269015,-9.945025,2.832392,-5.340175,6.210319,2.240483,-7.628469,-8.442074,-0.917683,-3.268488,-2.463912,8.329153,6.328588,4.085038,-3.291561,1.797002,0.586035,-0.930732,-8.286465,-9.877006,-5.111757,-9.633358,7.808344,3.146792,1.555342,-6.172191,5.145265,1.238457,-1.551702,-9.252669,-4.328236,-2.502693,-3.426987,-4.577526,3.615957,-2.291937,-6.611281,1.559557,-8.724383,2.291989,-4.530965,8.821689,8.017048,-0.785194,-0.925783,-3.403731,-2.673427,-0.901316,-0.833667,2.106990,8.855052,1.194211,7.256850,-9.204602,5.318532,6.153413,1.643841,3.546654,7.510965,-3.429974,-7.258379,-4.455446,6.943259,1.282575,3.328499,-2.112480,0.518655,-4.617424,-2.114625,-1.208053,-1.112994,8.995638,-1.354836,7.900470,-5.310377,6.871144,-6.245994,5.351823,6.434893,8.128650,-4.654564,3.532815,3.360284,-3.078924,-9.502577,1.351999,-6.863760,5.259488,2.432519,-9.295526,-1.968430,1.189569,-3.579731,3.461324,7.800788,-4.731361,-5.309235,6.386795,-2.201092,7.409762,-0.199794,8.538232,9.199042,-3.539858,2.526593,-0.988490,-8.299014,9.699663,-0.865972,-0.867198,3.557857,2.183020,2.296274], dtype = "float64")#candidate|5268|(1540,)|const|float64
var_5269 = relay.var("var_5269", dtype = "uint32", shape = (48,))#candidate|5269|(48,)|var|uint32
call_5264 = relay.TupleGetItem(func_4599_call(relay.reshape(call_5256.astype('uint32'), [4, 1, 3]), relay.reshape(const_5265.astype('uint64'), [4, 252]), relay.reshape(var_5266.astype('bool'), [520,]), relay.reshape(var_5267.astype('float32'), [660,]), relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(var_5269.astype('uint32'), [48, 1]), ), 7)
call_5270 = relay.TupleGetItem(func_4606_call(relay.reshape(call_5256.astype('uint32'), [4, 1, 3]), relay.reshape(const_5265.astype('uint64'), [4, 252]), relay.reshape(var_5266.astype('bool'), [520,]), relay.reshape(var_5267.astype('float32'), [660,]), relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(var_5269.astype('uint32'), [48, 1]), ), 7)
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
call_5280 = relay.TupleGetItem(func_2941_call(relay.reshape(const_5265.astype('uint64'), [1008,]), relay.reshape(var_5266.astype('bool'), [520,]), ), 4)
call_5281 = relay.TupleGetItem(func_2944_call(relay.reshape(const_5265.astype('uint64'), [1008,]), relay.reshape(var_5266.astype('bool'), [520,]), ), 4)
func_3958_call = mod.get_global_var('func_3958')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_5288 = relay.TupleGetItem(func_3958_call(relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(call_5280.astype('bool'), [520,]), ), 5)
call_5289 = relay.TupleGetItem(func_3962_call(relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(call_5280.astype('bool'), [520,]), ), 5)
func_3958_call = mod.get_global_var('func_3958')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_5293 = relay.TupleGetItem(func_3958_call(relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(call_5280.astype('bool'), [520,]), ), 0)
call_5294 = relay.TupleGetItem(func_3962_call(relay.reshape(const_5268.astype('float64'), [1540,]), relay.reshape(call_5280.astype('bool'), [520,]), ), 0)
output = relay.Tuple([call_5256,call_5264,const_5265,var_5266,var_5267,const_5268,var_5269,call_5280,call_5288,call_5293,])
output2 = relay.Tuple([call_5257,call_5270,const_5265,var_5266,var_5267,const_5268,var_5269,call_5281,call_5289,call_5294,])
func_5307 = relay.Function([var_5266,var_5267,var_5269,], output)
mod['func_5307'] = func_5307
mod = relay.transform.InferType()(mod)
var_5308 = relay.var("var_5308", dtype = "bool", shape = (520,))#candidate|5308|(520,)|var|bool
var_5309 = relay.var("var_5309", dtype = "float32", shape = (660,))#candidate|5309|(660,)|var|float32
var_5310 = relay.var("var_5310", dtype = "uint32", shape = (48,))#candidate|5310|(48,)|var|uint32
output = func_5307(var_5308,var_5309,var_5310,)
func_5311 = relay.Function([var_5308,var_5309,var_5310,], output)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4776_call = mutated_mod.get_global_var('func_4776')
call_5328 = relay.TupleGetItem(func_4775_call(), 0)
call_5329 = relay.TupleGetItem(func_4776_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_5356 = relay.TupleGetItem(func_4240_call(), 0)
call_5357 = relay.TupleGetItem(func_4241_call(), 0)
output = relay.Tuple([call_5328,call_5356,])
output2 = relay.Tuple([call_5329,call_5357,])
func_5364 = relay.Function([], output)
mod['func_5364'] = func_5364
mod = relay.transform.InferType()(mod)
mutated_mod['func_5364'] = func_5364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5364_call = mutated_mod.get_global_var('func_5364')
call_5365 = func_5364_call()
output = call_5365
func_5366 = relay.Function([], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5408 = relay.var("var_5408", dtype = "uint16", shape = ())#candidate|5408|()|var|uint16
var_5409 = relay.var("var_5409", dtype = "uint16", shape = (2, 1, 6))#candidate|5409|(2, 1, 6)|var|uint16
bop_5410 = relay.bitwise_and(var_5408.astype('uint16'), var_5409.astype('uint16')) # shape=(2, 1, 6)
output = relay.Tuple([bop_5410,])
output2 = relay.Tuple([bop_5410,])
func_5417 = relay.Function([var_5408,var_5409,], output)
mod['func_5417'] = func_5417
mod = relay.transform.InferType()(mod)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mutated_mod.get_global_var('func_5417')
var_5419 = relay.var("var_5419", dtype = "uint16", shape = ())#candidate|5419|()|var|uint16
var_5420 = relay.var("var_5420", dtype = "uint16", shape = (2, 1, 6))#candidate|5420|(2, 1, 6)|var|uint16
call_5418 = func_5417_call(var_5419,var_5420,)
output = call_5418
func_5421 = relay.Function([var_5419,var_5420,], output)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_5449 = relay.TupleGetItem(func_4369_call(), 3)
call_5450 = relay.TupleGetItem(func_4370_call(), 3)
output = relay.Tuple([call_5449,])
output2 = relay.Tuple([call_5450,])
func_5456 = relay.Function([], output)
mod['func_5456'] = func_5456
mod = relay.transform.InferType()(mod)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5456_call = mutated_mod.get_global_var('func_5456')
call_5457 = func_5456_call()
output = call_5457
func_5458 = relay.Function([], output)
mutated_mod['func_5458'] = func_5458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5480 = relay.TupleGetItem(func_3073_call(), 0)
call_5481 = relay.TupleGetItem(func_3075_call(), 0)
output = relay.Tuple([call_5480,])
output2 = relay.Tuple([call_5481,])
func_5485 = relay.Function([], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5486 = func_5485_call()
output = call_5486
func_5487 = relay.Function([], output)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5488 = relay.var("var_5488", dtype = "float64", shape = (4, 12, 12))#candidate|5488|(4, 12, 12)|var|float64
uop_5489 = relay.acos(var_5488.astype('float64')) # shape=(4, 12, 12)
func_2441_call = mod.get_global_var('func_2441')
func_2444_call = mutated_mod.get_global_var('func_2444')
const_5498 = relay.const([-3.802482,5.797762,4.431977,-3.168872,4.202622,-9.933245,-8.676968,-7.703472,-0.415198,9.616193,0.523787,-5.105798,-9.229560,-7.876947,1.945731,1.366295,5.188293,3.598050,-4.781634,-4.635908,3.912795,3.381709,7.553311,-6.273233,9.680521,4.301727,-4.593709,-0.535269,-0.023331,-6.900533,-7.392806,0.684638,-0.891221,-8.095430,4.218338,-1.531227,5.017612,-0.606653,2.874821,-6.451592,7.251723,9.633621,1.483053,-6.475201,-1.992493,-0.972323,4.222233,7.338021,-0.096813,-9.521407,-8.713683,-6.915873,-6.024150,-8.867616,5.998062,-3.875193,-9.674959,-4.309431,7.464345,8.817967,5.336555,6.491257,-0.598989,-8.237177,-9.276665,-4.897723,-9.836601,4.684475,6.872363,-9.021340,-7.854207,7.124057,4.229704,6.605635,4.379498,-6.989898,-0.289448,0.313201,-5.344861,4.874818,-5.541684,0.008131,-8.039732,3.747774,-0.979803,0.660591,2.102665,1.200146,-7.245225,7.620717,-1.776462,1.299562,8.170923,7.959873,-2.564485,6.803734,-3.328336,6.991904,8.789476,-2.230711,2.272977,-4.798164,4.916694,7.000911,-7.758649,1.008148,-9.148704,6.423143,2.954462,-9.640408,9.800638,-5.598185,-0.064749,2.275692,-1.689411,-1.405678,5.327574,-3.180590,-3.622588,-2.184022,0.118092,8.462288,-6.797059,0.812231,1.395016,-3.073656,5.838123,-6.126465,-5.643817,8.248020,-9.681772,-7.305516,2.328884,-1.984676,-8.326459,-9.377084,-7.661548,-0.078301,3.492981,-2.677619,1.611511,5.870252,5.569862,-7.377976,4.958146,-0.457035,1.608024,0.308489,-2.277012,5.400368,8.054916,-7.323906,3.008666,-6.880146,-4.941903,-9.700253,0.489088,4.361902,6.221950,1.010200,2.254093,-8.327364,-8.673227,2.432025,5.525346,-2.521180,7.097005,-2.017514,0.287785,9.054105,9.411647,6.535746,1.863093,0.852321,-1.039597,-3.255781,4.279220,2.958173,-7.058283,-2.531639,2.152022,-9.661136,3.072706,4.170080,-2.834065,-0.640609,-2.919709,-6.608587,-4.933022,9.417939,-1.126147,0.863464,-4.475253,-2.902197,2.435619,9.347792,0.818284,3.575025,-4.361755,6.666832,4.318664,7.086652,5.754248,-1.346102,0.349917,-5.801426,8.729741,4.666404,-6.106645,-0.054297,-8.723472,-9.386158,-9.469751,-8.860231,4.324769,0.103943,-4.463897,-5.491227,-1.459810,1.936367,-1.091770,-3.276151,4.329719,-0.349879,0.412332,-8.962149,-7.581297,7.507121,-8.046255,3.269755,7.520362,0.077445,4.800728,2.607445,-4.707408,-3.441630,-3.345953,-8.016770,-0.733577,-3.388189,3.776790,-4.050932,9.034289,-7.656242,5.653524,1.056764,-1.848514,-2.005325,5.946187,-4.501251,2.734330,-3.464818,6.813092,4.227963,0.656345,9.241545,-2.041381,-6.161047,4.235957,-2.147699,2.259063,6.851799,-8.709571,3.668335,4.562582,3.932919,-7.865721,-6.794636,-9.127531,-5.158958,9.305820,-2.923826,7.313557,-5.294885,-2.341479,1.567264,-7.522224,0.416231,5.763658,-9.953442,-8.691376,4.180155,-8.784717,-7.980141,5.802982,-7.974264,-4.885969,9.121556,-0.061095,-0.536384,-2.656050,-9.974860,-6.324404,5.734120,-6.719655,-1.727241,8.160056,-8.950738,-5.194075,-1.473782,3.238548,-7.980422,8.734724,3.323531,1.103067,-3.830655,6.359346,0.856138,6.941284,9.446618,-2.378374,-8.156547,7.279867,1.852993,-3.892876,-4.444190,3.518619,4.360467,-0.410619,-0.628354,6.025115,2.643659,9.897648,-3.037313,0.528646,-3.729691,-2.210670,9.805265,1.811662,4.389920,-4.886546,5.490987,-1.181610,-6.663311,8.613657,5.695979,-3.413111,-6.312049,3.600338,-4.676443,-7.159808,-2.059145,5.861787,0.443198,7.990507,-0.239170,-7.217283,4.552363,1.162211,8.712201,-6.974887,2.372593,4.406152,-1.384058,-6.791293,8.155284,3.908271,8.933402,9.946107,-4.329478,1.154597,-0.428805,-7.371209,8.809226,2.654196,3.218924,3.170158,-9.083233,-1.110769,2.304261,5.556240,2.695687,-2.156325,-6.411799,6.855592,-5.853909,2.094095,-3.098039,-2.573834,3.138267,-8.256160,6.770187,8.229380,-4.731852,-7.813801,8.438827,-2.064057,7.597330,1.408944,-8.290431,-6.006228,-6.632762,9.607530,0.122848,-0.071925,-8.798442,1.881901,-8.210987,2.738732,-0.705921,-0.164886,-9.079690,9.538682,2.305038,8.032857,0.663321,4.014986,0.529783,1.800539,-0.400997,-9.289083,-7.910300,9.579369,-9.829186,-7.419892,-3.727791,-4.259617,1.965301,-9.710125,7.329488,2.502648,6.199495,-3.429120,2.865671,-4.334702,7.208976,-5.044488,-6.681191,-1.266299,1.428659,-5.920238,8.611126,-5.026451,-1.897423,4.859941,-4.946779,-1.916062,2.252846,-3.589890,-6.562965,8.207339,0.020822,-7.472092,2.551174,4.965508,4.295949,-5.543257,-0.412114,9.297999,-3.927878,-0.377212,2.839402,-3.727234,5.193617,-3.656633,8.870910,4.501087,5.473965,2.461676,-4.903496,4.344396,-3.235626,-7.396540,-6.144651,8.460959,3.753534,2.510915,-5.961182,1.605727,9.209833,-4.378272,0.912824,1.852213,7.090931,6.131825,6.730648,6.211766,3.326271,6.634714,2.793547,-7.031457,-7.619333,-9.076031,8.563837,2.985525,8.431567,-5.914514,4.117934,5.896678,-0.372068,1.576094,-5.337708,3.009819,-4.307533,8.103058,1.276597,-0.785554,-9.483215,-4.589507,3.201987,-6.754031,8.117078,9.890794,-7.190098,3.215607,-5.330650,4.287153,3.975957,-5.158483,8.313928,-0.044372,5.063989,-5.706146,9.932017,9.911911,-9.979366,4.611849,-2.165820,8.030822,9.429424,2.989843,4.786552,-8.996770,2.414247,-5.724664,0.634383,4.086245,-6.245519,-3.298305,8.989816,-2.027797,4.328328,0.364568,-0.439446,-9.801472,-5.623883,0.226473,-3.236461,-5.501554,-4.203215,-1.201100,8.279609,-9.269883,-7.744268,7.608309,3.188814,7.196153,5.379032,-3.768966,1.321405,-4.386432,7.668415,0.043399,7.438181,3.582640,5.790451,0.074805,-2.315114,-6.920700,-6.146636,-0.743337,4.707777,-9.245465,-9.555380,-3.427324,-6.375549,7.652993,3.777000,2.290300,4.009187,-0.603272,1.121549,9.335411,-9.938638,-3.109524,-0.432056,-0.536306,-3.764146,-3.973671,6.063423,3.029252,3.486755,8.586329,1.424761,-9.195720,-6.009068,8.392488,-6.206847,6.483808,-0.696037,-6.174976,-3.475510,-9.243483,2.475652,2.866064,-3.276794,-6.919650,-2.846705,-9.080852,4.554414,-4.123608,6.665203,9.958455,-6.856195,-3.496247,-1.708823,5.007752,4.008357,4.851352,2.709589,-5.067756,0.510838,1.200472,-9.084478,-5.129237,-1.317619,6.481609,-2.481348,-9.831139,0.381570,-6.565308,6.660948,-9.845348,9.561050,3.877412,0.347239,-3.398145,4.184587,-6.163769,6.626989,0.027612,2.437870,-0.008966,0.485462,-6.210893,5.024921,-0.687108,6.443036,-6.276146,-7.951799,0.648065,4.393467,9.429735,9.577845,-0.947236,-0.456119,2.909774,2.634363,5.960954,-3.366253,9.756113,-3.357931,-2.459625,0.890251,1.728666,-1.990743,1.209796,-2.796234,-2.045257,-6.821376,5.685924,-6.717755,-2.611343,-3.661076,-0.468443,3.283595,-5.550313,2.304588,6.817220,6.560944,3.729157,5.019484,0.635329,8.793282,-0.405063,2.117435,-1.257584,-3.995095,4.512223,-9.418251,6.224245,9.890926,-4.856661,-5.407484,0.803823,-2.941209,4.708930,9.934652,8.777656,3.915584,-2.825353,0.532826,-3.355063,2.261523,-7.023523,-8.877652,-6.515218,-8.547644,-3.900234,-3.812474,-5.604648,-2.726237,6.394752,4.801089,-7.329863,-8.924306,4.060485,7.371612,0.827421,0.740271,6.850946,0.306758,6.994150,-5.667909,-5.507635,-8.567534,9.117462,-5.742790,-0.633221,5.136405,-5.308614,-3.227365,-6.771634,-0.619126,-7.631329,7.792930,9.832462,8.107379,-1.553128,-6.440995,6.241074,-7.291720,-8.837925,0.911217,-3.560275,8.747385,-6.102090,-2.640279,-1.616862,-0.163942,-0.003271,-5.392576,-2.892877,-0.685503,7.693656,8.040268,2.693196,8.317923,-7.762665,8.812171,3.618983,-2.501491,-3.376040,-9.626539,5.501051,1.141422,9.422770,5.676100,-7.790254,-5.137295,-1.285334,-5.601268,5.009134,2.630797,-0.510472,-8.097246,-6.404161,8.378616,0.701565,5.899712,-0.156764,-1.946623,-8.609702,5.432769,-6.287181,-8.058292,4.248402,-1.712825,-5.421241,-1.480227,-0.673071,-1.280583,2.658614,0.586654,-6.174635,1.706147,-5.505265,-0.053545,8.975773,5.441420,6.635600,3.863774,-3.961410,-0.949533,4.311570,6.703294,5.230773,-0.950295,4.998382,-9.364350,-4.137047,-5.600539,7.912042,1.308613,-1.424871,-0.318554,-5.607099,-0.213587,-9.092588,1.354365,8.241581,4.899164,7.336975,-1.575803,-0.569087,-8.229613,-8.283210,6.439270,5.687812,9.401054,4.848118,5.223140,9.900144,-5.738021,-2.745652,9.353796,-4.942435,1.958881,9.316469,-3.135015,-9.145495,-4.688164,2.843493,-7.783101,1.764011,-3.632233,-5.143574,-9.574226,7.784228,6.175882,0.847252,8.842561,7.883027,7.448370,-4.813992,-0.997347,-3.565538,-5.709955,-0.138753,-7.691264,-3.284991,-1.519108,-8.045721,-2.243687,9.098559,-4.504836,-3.451949,-5.461136,-6.585593,-1.890421,2.115743,6.621940,-2.185241,8.276237,-5.492317,-8.990413,-0.925964,3.342092,2.202233,-1.806639,3.573591,7.104944,5.975079,-8.144138,8.686923,-6.800581,7.613192,-3.784719,0.122970,1.585834,8.712321,-0.042444,-6.701057,7.513607,5.135961,4.359724,-9.894699,3.447025,-1.859592,9.237034,-6.061756,0.636745,8.352002,5.247555,9.517611,-8.113108,-1.444508,7.801351,8.799260,8.085474,-8.467967,1.063014,2.862518,-2.563198,-5.210059,-9.258058,-4.977392,2.470909,7.012398,-0.026952,4.890267,-2.289970,-8.676886,-9.561795,-2.393557,-9.829302,-4.805726,4.053686,-0.499183,-4.743463,3.681687,-5.524773,-4.434260,4.354523,-6.638646,-6.178247,-0.520042,-2.061807,-6.730099,-2.565158,-8.425258,-9.009010,2.757760,-2.994746,8.823816,-8.908562,5.003829,-0.974090,-2.738300,-4.066259,-8.068512,-7.143163,5.196003,1.855501,-3.898318,-9.611281,-8.763215,1.135718,-2.507228,-8.387998,-1.042394,-8.058901,2.882079,0.166978,-3.071476,-4.367589,4.094760,7.344903,9.352899,-6.249771,0.032527,-4.088550,0.128697,6.182678,-6.369014,-0.036459,-9.998841,-7.586332,0.813107,-3.951533,9.120326,-9.250675,0.324615,0.480807,-0.990397,-6.808470,-6.311661,-5.156659,9.079210,2.109574,6.796535,-3.813605,-2.156394,8.987120,5.232344,4.415097,-8.009002,9.566271,-1.782995,7.418340,-4.408579,-2.918642,-9.246878,2.286258,-2.671020,9.094846,-6.388914,0.480598,3.915480,-6.700039,-4.215529,7.500506,-7.384463,2.311536,-3.734046,2.303149,-0.550784,7.016940,-7.001389,-3.136061,-2.756788,-1.527974,-1.637105,5.990809,-5.719671,-3.984836,-1.394078,-1.223850,-0.245701,9.405162,-9.184471,7.836556,-7.705160,4.859343,5.912093,9.469191,-2.979381,-8.129676,6.641059,-8.842494,-6.904982,4.147902,-5.991673,8.779477,7.816327,6.342032,7.667577,-6.261605,-1.893138,9.384988,-5.517352,0.495066,-7.796069,6.621443,9.746377,-1.870103,-6.339814,-1.361426,9.321268,6.233072,-6.409915,-0.790770,4.728986,0.872577,-1.676297,-6.881524,1.517365,7.402130,8.725035,-9.344338,-2.141412,-0.268013,-7.235110,-2.137242,-8.755194,-3.162836,-3.298353,0.023711,4.382822,7.946556,7.618824,-8.259780,2.818187,-1.125315,-9.055366,-5.807290,0.814453,4.093469,5.158318,6.859825,9.888195,5.657863,-2.042180,-4.734947,7.582358,-5.416502,5.780441,-4.409199,-1.761378,7.875671,5.261181,-2.208111,5.737761,-9.183554,9.123239,-1.939932,1.083516,-8.089830,-5.950043,9.857026,1.323509,-6.003221,8.215438,2.099699,-1.426191,-0.750478,-5.011796,-6.157716,5.533777,3.957675,1.592476,6.403617,2.651471,-4.754628,-2.006396,7.226698,3.387475,-5.441039,-9.161639,3.638681,7.550281,-2.793607,-7.581896,0.977845,8.864062,-1.227714,-8.529799,8.500868,8.685209,-2.700876,-4.441281,3.829835,1.636753,-6.537605,-7.943728,-5.227899,0.691305,7.827591,-3.495189,3.751249,0.710156,-5.753969,-2.830282,6.831123,3.806002,9.191212,-4.499987,-1.273945,4.082108,1.040943,-9.303092,3.021168,4.598703,6.811764,9.992697,3.568570,-3.121182,-2.683333,-1.445312,-1.829151,0.494564,3.775973,1.376402,-7.416142,-7.761530,-5.959054,6.579784,-3.495582,-6.699173,-3.959960,7.222984,5.561241,1.220174,-7.958832,9.627587,-0.438754,-9.828700,-0.804638,3.188551,-4.786412,8.733368,-1.746674,-9.087976,0.164862,-9.765344,-4.459951,5.200505,4.352815,-5.960270,-6.450984,-2.279038,-3.516877,-6.292186,-7.260579,3.323804,9.328978,1.557263,-9.334998,5.410223,3.927495,7.594345,7.460979,6.073770,-7.384338,-3.507706,0.677163,2.132856,3.289010,0.181053,5.408316,7.045917,6.903279,-1.830413,-9.006520,1.136649,2.066730,-5.147700,7.549311,0.427655,7.100193,6.502402,-6.707720,-3.278976,-3.019021,-7.865380,6.747353,3.078950,-5.643627,-1.420760,4.299278,-7.603881,-7.055159,7.092048,-0.619880,4.331550,-5.595407,5.087847,2.238300,-1.788719,3.536222,6.915420,-3.920852,7.286459,-8.996479,-3.673308,6.013288,-1.310710,2.903297,9.958804,-3.433808,8.577769,5.807757,-9.770375,-7.953187,9.198423,3.347992,-7.334243,5.245079,-1.049811,9.550151,9.644107,-1.497677,6.868423,8.695125,8.494627,4.466262,-5.919075,4.772866,-2.425199,0.366274,5.707989,-8.091481,9.055891,9.739196,-6.967540,-4.793045,3.927494,9.958961,-5.908539,-2.509864,9.247426,-3.424715,-3.151941,-7.168971,2.443896,-4.002771,-9.554682,7.648137,-9.134781,7.486770,8.324198,-6.868663,-6.452157,8.149274,-6.606637,2.299830,-3.077084,1.930939,0.788889,7.508918,-9.347172,-2.678670,-5.185286,-8.945843,-2.178477,1.445979,0.874592,0.683490,-3.834376,-2.485234,-3.918771,-4.553654,0.688427,4.748393,6.505627,9.109148,6.695644,-3.315480,1.213064,-6.345064,-3.257570,-4.198925,-7.112962,-9.119619,-9.699050,5.673561,-6.789006,9.237136,-5.909868,-5.177194,1.298265,3.229849,3.611188,4.221050,-8.006410,2.092593,2.351236,-8.800378,0.132461,-6.406367,2.117814,-3.693474,1.647727,8.543502,-5.669442,8.429355,1.140578,-6.808430,-5.762169,-5.789051,-2.254374,-3.369305,4.529627,1.294793,9.957427,-7.437031,1.918998,-3.921631,6.333120,-4.618917,0.029108,2.874797,-2.297120,-4.437455,4.829642,2.423167,-4.367941,-3.079329,-5.030986,-4.596451,3.123535,-0.502084,1.406037,-0.136412,-7.403037,-5.012032,-3.127923,3.344694,-6.907120,-6.575337,-6.212370,8.154021,4.020728,-0.214948,6.388036,8.435384,1.359341,2.975329,-6.842399,5.317909,4.111217,-8.746629,-1.381572,-5.260535,1.212628,-0.457619,9.480451,-7.916497,9.418582,-8.441749,5.271293,-7.181496,-7.783813,4.764335,6.129599,6.695464,8.202793,-9.032183,7.440448,-3.423353,3.948091,-3.661131,-9.696561,2.033220,8.636022,-1.173175,8.819956,-8.643716,-2.956321,-8.198042,-8.248407,-9.193063,-7.687859,7.508061,-7.035787,-8.183560,4.352694,-2.535025,-3.302275,3.185238,2.889541,-5.088355,-2.615471,-4.778354,1.614393,-3.409527,2.865503,5.828758,-4.230477,0.282048,-8.895462,-7.343983,5.992535,2.701129,9.585899,3.885215,-7.098993,5.483603,-9.317649,3.998792,8.483273,-0.074644,9.189910,-3.652708,-4.837853,-7.686213,8.068315,-0.208455,3.458816,-2.645740,7.472762,5.941672,-6.507519,-3.906101,8.014425,-4.971128,-1.416433,4.102143,-0.391029,2.670294,1.613824,6.784709,-8.041654,9.557792,1.177687,-1.085899,-8.252543,-8.227457,8.264347,1.576067,-9.343240,1.952552,-9.041125,-6.892476,-6.939254,-2.412560,1.560812,-1.380571,9.402207,8.756613,-7.833804,2.465279,-7.989746,0.858478,1.835647,-7.700419,-1.120226,-4.003931,-8.896519,0.016195,-7.214110,-4.802797,6.255818,9.658572,1.630628,0.396260,7.922697,-0.933692,-2.287217,7.574310,-9.101476,2.742806,4.457913,-7.995733,1.335963,-8.496998,6.212859,1.812689,9.533259,2.971433,-4.974096,-4.570477,-1.515244,9.399720,-4.755925,-1.310347,-8.683759,0.742859,7.673599,4.913193,8.993437,-6.548488,-4.862824,7.825720,-4.050958,-4.659607,4.603854,-1.828732,2.350413,-5.073267], dtype = "float64")#candidate|5498|(1540,)|const|float64
call_5497 = relay.TupleGetItem(func_2441_call(relay.reshape(const_5498.astype('float64'), [14, 11, 10])), 0)
call_5499 = relay.TupleGetItem(func_2444_call(relay.reshape(const_5498.astype('float64'), [14, 11, 10])), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_5501 = relay.var("var_5501", dtype = "uint64", shape = (416, 2))#candidate|5501|(416, 2)|var|uint64
call_5500 = relay.TupleGetItem(func_33_call(relay.reshape(var_5501.astype('uint64'), [4, 13, 16])), 0)
call_5502 = relay.TupleGetItem(func_35_call(relay.reshape(var_5501.astype('uint64'), [4, 13, 16])), 0)
output = relay.Tuple([uop_5489,call_5497,const_5498,call_5500,var_5501,])
output2 = relay.Tuple([uop_5489,call_5499,const_5498,call_5502,var_5501,])
func_5508 = relay.Function([var_5488,var_5501,], output)
mod['func_5508'] = func_5508
mod = relay.transform.InferType()(mod)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mutated_mod.get_global_var('func_5508')
var_5510 = relay.var("var_5510", dtype = "float64", shape = (4, 12, 12))#candidate|5510|(4, 12, 12)|var|float64
var_5511 = relay.var("var_5511", dtype = "uint64", shape = (416, 2))#candidate|5511|(416, 2)|var|uint64
call_5509 = func_5508_call(var_5510,var_5511,)
output = call_5509
func_5512 = relay.Function([var_5510,var_5511,], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_5525 = relay.TupleGetItem(func_3094_call(), 0)
call_5526 = relay.TupleGetItem(func_3096_call(), 0)
uop_5552 = relay.acosh(call_5525.astype('float32')) # shape=(4, 1, 3)
uop_5554 = relay.acosh(call_5526.astype('float32')) # shape=(4, 1, 3)
const_5557 = relay.const([[[-5,10,8],[-9,-9,-2],[4,4,1],[10,5,-5],[-3,-5,6],[-8,-2,-5],[2,-5,-7],[-5,8,-1],[-5,8,4]],[[-1,10,-7],[-8,9,5],[2,-2,-10],[1,-1,7],[1,4,6],[-3,-4,-2],[1,-6,-2],[8,10,-1],[8,8,-5]],[[3,8,5],[5,10,-3],[8,4,6],[-9,-4,-2],[-9,-8,-10],[-3,9,2],[5,2,-5],[-10,8,-9],[4,9,-6]],[[2,1,-6],[3,6,3],[5,-3,5],[-5,3,1],[-8,-9,-10],[7,-4,-1],[1,-10,-5],[-3,10,1],[-6,-10,-10]]], dtype = "uint32")#candidate|5557|(4, 9, 3)|const|uint32
bop_5558 = relay.right_shift(call_5525.astype('uint16'), const_5557.astype('uint16')) # shape=(4, 9, 3)
bop_5561 = relay.right_shift(call_5526.astype('uint16'), const_5557.astype('uint16')) # shape=(4, 9, 3)
uop_5582 = relay.rsqrt(bop_5558.astype('float64')) # shape=(4, 9, 3)
uop_5584 = relay.rsqrt(bop_5561.astype('float64')) # shape=(4, 9, 3)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
var_5591 = relay.var("var_5591", dtype = "float64", shape = (1040,))#candidate|5591|(1040,)|var|float64
call_5590 = relay.TupleGetItem(func_2792_call(relay.reshape(var_5591.astype('float64'), [520, 2])), 3)
call_5592 = relay.TupleGetItem(func_2794_call(relay.reshape(var_5591.astype('float64'), [520, 2])), 3)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
const_5596 = relay.const([True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True], dtype = "bool")#candidate|5596|(520,)|const|bool
const_5597 = relay.const([[-2,-6,-2,8,-8,-4,5,-10,-10,-6,4,-6,3,-6,7,-3,-1,-3,5,-2,-10,-5,4,9,4,-10,-3,9,-6,-10,-3,5,3,6,9,-5,4,5,-7,9,8,-2,-10,9,-9,10,-4,-3,-2,9,7,-4,3,-9,4,2,1,-6,-8,-6,4,7,2,-4,-1,10,4,10,-3,-8,9,10,-5,-1,-1,-9,5,-10,-8,-1,-7,10,5,9,-1,5,-6,-1,3,-5,1,7,10,2,4,-8,4,-2,-7,9,7,-9,-10,5,2,-8,-2,8,-4,1,-4,9,-6,-9,2,-1,1,-4,-10,-6,1,-5,1,-6,-2,5,5,-3,2,3,9,5,-6,3,-1,8,3,4,7,-2,-8,-4,-8,-3,-1,6,-2,2,-3,-4,3,6,-5,1,2,-10,10,-3,-3,1,-5,-5,-10,-7,-9,-7,2,10,4,1,5,-8,7,3,10,-5,-3,-5,7,-7,-2,-1,-10,4,-2,-1,8,4,-1,-7,-3,9,5,8,-4,2,-1,-4,6,4,3,-7,-5,8,7,8,-10,-5,-8,8,-10,-2,7,-2,4,-1,1,9,8,-3,-3,-7,7,7,-5,-1,-9,-5,-9,-7,3,1,5,-2,-7,8,-8,-2,-6,-2,6,-5,-10,-9,-9,3,6,10,4,-2,6,1,-4,-1,-2,1,-8,-2,9,7,-10,2,4,7,3,-1,9,5,4,6,-8,-3,3,7,9,-4,4,-4,9,8,-1,2,-2,-5,-2,-2,8,-7,3,5,-7,2,6,-4,7,6,1,-10,-3,-9,6,5,9,6,-7,-5,-1,-8,2,9,-3,9,-1,9,4,2,1,3,-1,-3,2,-3,-6,-10,-4,-2,-4,-1,8,2,7,-1,9,-8,4,9,3,1,-6,2,7,-4,-2,7,-6,1,1,2,7,2,-5,-9,4,8,10,7,3,-10,8,-5,6,-10,10,-9,-5,-10,2,7,-1,8,-6,-9,-8,-3,6,-3,-4,9,6,-2,-7,-9,6,-6,4,8,-9,-8,6,5,9,-6,10,8,-3,5,7,-10,-4,1,10,-8,6,8,-7,-6,1,-1,7,-7,4,-10,-7,-5,7,-9],[-3,10,2,3,-10,-8,-1,10,-10,8,-10,-6,-7,8,-5,2,3,-1,-9,6,5,10,5,-4,8,9,-10,-3,-6,-2,-9,2,8,6,-8,-7,-8,-9,-7,-8,-6,-1,3,-3,8,-9,2,6,5,-9,8,-3,5,1,-4,-6,-7,-7,4,7,-7,-6,10,-3,8,5,8,-2,10,4,2,8,-9,-10,-7,5,-7,-7,5,-9,1,-10,-4,3,-6,1,9,9,-4,-2,-8,-5,10,-2,-1,9,-5,-3,1,-4,-3,7,2,-9,-5,-7,8,7,-5,4,-10,-10,-1,-5,-6,-9,3,10,-2,-4,-10,9,3,7,-7,-6,3,3,6,6,8,-1,-1,-8,10,9,3,1,8,-5,-10,-1,8,4,-5,-8,-6,-5,9,-10,-5,2,-9,-5,-2,1,3,2,-9,7,-9,-6,-3,-3,-4,5,2,-9,-10,-7,7,4,-1,3,-5,1,-3,-10,-9,1,6,5,1,10,-8,-6,4,-5,6,-4,-6,6,3,8,-1,-5,2,6,2,7,-4,5,10,-4,5,9,2,-3,-5,6,9,-4,1,-6,-9,-5,7,10,7,6,-1,-7,2,9,2,-3,9,4,1,-3,5,1,5,1,-7,-7,-2,5,-6,-9,-2,-1,-4,-10,-5,3,-10,-3,-10,-10,1,-7,-2,5,7,-6,10,9,-2,-7,4,10,8,1,-8,-5,6,2,-4,-8,4,-1,1,6,-1,-10,-7,-8,-4,3,8,2,1,6,2,-8,7,-1,-3,2,2,-10,-4,3,7,-1,5,-3,-9,2,10,-10,-1,-7,-7,-8,-3,-9,-9,5,8,1,3,-8,2,6,9,-10,4,-5,-8,-2,-3,8,-3,8,-10,5,-4,6,4,-9,-7,-5,8,-3,-5,5,-6,-10,7,10,-8,3,-9,-7,2,-8,-4,-9,3,7,7,-5,-7,9,6,3,4,5,4,6,7,4,-7,4,-5,7,4,-4,-1,-5,4,-9,4,4,6,-6,4,-4,5,2,-8,-3,-10,-3,3,6,-8,6,10,1,-9,-1,-9,5,-5,-3,5,7,-4,-8,2,4,10,-3,-1,-10,-3,5,-8,-3,9,-9,-3,-2]], dtype = "uint64")#candidate|5597|(2, 416)|const|uint64
call_5595 = relay.TupleGetItem(func_215_call(relay.reshape(const_5596.astype('bool'), [4, 13, 10]), relay.reshape(const_5597.astype('uint64'), [1, 832]), ), 0)
call_5598 = relay.TupleGetItem(func_218_call(relay.reshape(const_5596.astype('bool'), [4, 13, 10]), relay.reshape(const_5597.astype('uint64'), [1, 832]), ), 0)
output = relay.Tuple([uop_5552,uop_5582,call_5590,var_5591,call_5595,const_5596,const_5597,])
output2 = relay.Tuple([uop_5554,uop_5584,call_5592,var_5591,call_5598,const_5596,const_5597,])
func_5599 = relay.Function([var_5591,], output)
mod['func_5599'] = func_5599
mod = relay.transform.InferType()(mod)
mutated_mod['func_5599'] = func_5599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5600 = relay.var("var_5600", dtype = "float64", shape = (1040,))#candidate|5600|(1040,)|var|float64
func_5599_call = mutated_mod.get_global_var('func_5599')
call_5601 = func_5599_call(var_5600)
output = call_5601
func_5602 = relay.Function([var_5600], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mod.get_global_var('func_4934')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_5606 = func_4934_call()
call_5607 = func_4934_call()
uop_5608 = relay.erf(call_5606.astype('float32')) # shape=(4, 1, 3)
uop_5610 = relay.erf(call_5607.astype('float32')) # shape=(4, 1, 3)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_5618 = func_4332_call()
call_5619 = func_4332_call()
func_4775_call = mod.get_global_var('func_4775')
func_4776_call = mutated_mod.get_global_var('func_4776')
call_5647 = relay.TupleGetItem(func_4775_call(), 0)
call_5648 = relay.TupleGetItem(func_4776_call(), 0)
output = relay.Tuple([uop_5608,call_5618,call_5647,])
output2 = relay.Tuple([uop_5610,call_5619,call_5648,])
func_5670 = relay.Function([], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5670_call = mutated_mod.get_global_var('func_5670')
call_5671 = func_5670_call()
output = call_5671
func_5672 = relay.Function([], output)
mutated_mod['func_5672'] = func_5672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_5714 = func_3267_call()
call_5715 = func_3267_call()
output = relay.Tuple([call_5714,])
output2 = relay.Tuple([call_5715,])
func_5721 = relay.Function([], output)
mod['func_5721'] = func_5721
mod = relay.transform.InferType()(mod)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5721_call = mutated_mod.get_global_var('func_5721')
call_5722 = func_5721_call()
output = call_5722
func_5723 = relay.Function([], output)
mutated_mod['func_5723'] = func_5723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3845_call = mod.get_global_var('func_3845')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_5754 = func_3845_call()
call_5755 = func_3845_call()
var_5773 = relay.var("var_5773", dtype = "uint32", shape = (4, 1, 3))#candidate|5773|(4, 1, 3)|var|uint32
bop_5774 = relay.equal(call_5754.astype('bool'), relay.reshape(var_5773.astype('bool'), relay.shape_of(call_5754))) # shape=(4, 1, 3)
bop_5777 = relay.equal(call_5755.astype('bool'), relay.reshape(var_5773.astype('bool'), relay.shape_of(call_5755))) # shape=(4, 1, 3)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5786 = relay.TupleGetItem(func_3073_call(), 0)
call_5787 = relay.TupleGetItem(func_3075_call(), 0)
output = relay.Tuple([bop_5774,call_5786,])
output2 = relay.Tuple([bop_5777,call_5787,])
func_5788 = relay.Function([var_5773,], output)
mod['func_5788'] = func_5788
mod = relay.transform.InferType()(mod)
var_5789 = relay.var("var_5789", dtype = "uint32", shape = (4, 1, 3))#candidate|5789|(4, 1, 3)|var|uint32
output = func_5788(var_5789)
func_5790 = relay.Function([var_5789], output)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_5792 = func_4844_call()
call_5793 = func_4844_call()
func_2821_call = mod.get_global_var('func_2821')
func_2824_call = mutated_mod.get_global_var('func_2824')
const_5865 = relay.const([[-5,-2,-1,6,-1,5,4,-5,-10,-6,-8,2,10,-2,5,6,10,8,-1,1,1,-4,-5,-7],[3,-1,6,-6,7,-3,-7,2,-9,9,5,3,-5,-3,5,-7,-3,3,2,-8,-5,-3,10,-10],[-6,-10,-10,-8,-8,-7,-1,3,-5,-3,-6,-7,-4,3,-8,4,5,-6,4,10,-5,7,3,7],[-6,6,3,-5,6,10,3,7,-5,3,-8,-3,9,-6,10,10,-8,-10,-10,6,2,-7,10,-5]], dtype = "uint32")#candidate|5865|(4, 24)|const|uint32
call_5864 = relay.TupleGetItem(func_2821_call(relay.reshape(const_5865.astype('uint32'), [4, 8, 3])), 0)
call_5866 = relay.TupleGetItem(func_2824_call(relay.reshape(const_5865.astype('uint32'), [4, 8, 3])), 0)
uop_5880 = relay.exp(call_5864.astype('float32')) # shape=(4, 8, 3)
uop_5882 = relay.exp(call_5866.astype('float32')) # shape=(4, 8, 3)
output = relay.Tuple([call_5792,const_5865,uop_5880,])
output2 = relay.Tuple([call_5793,const_5865,uop_5882,])
func_5883 = relay.Function([], output)
mod['func_5883'] = func_5883
mod = relay.transform.InferType()(mod)
mutated_mod['func_5883'] = func_5883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5883_call = mutated_mod.get_global_var('func_5883')
call_5884 = func_5883_call()
output = call_5884
func_5885 = relay.Function([], output)
mutated_mod['func_5885'] = func_5885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_5980 = func_4844_call()
call_5981 = func_4844_call()
output = call_5980
output2 = call_5981
func_5995 = relay.Function([], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mutated_mod.get_global_var('func_5995')
call_5996 = func_5995_call()
output = call_5996
func_5997 = relay.Function([], output)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_6003 = func_4406_call()
call_6004 = func_4406_call()
output = relay.Tuple([call_6003,])
output2 = relay.Tuple([call_6004,])
func_6009 = relay.Function([], output)
mod['func_6009'] = func_6009
mod = relay.transform.InferType()(mod)
mutated_mod['func_6009'] = func_6009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mutated_mod.get_global_var('func_6009')
call_6010 = func_6009_call()
output = call_6010
func_6011 = relay.Function([], output)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_6035 = relay.TupleGetItem(func_4019_call(), 0)
call_6036 = relay.TupleGetItem(func_4020_call(), 0)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_6052 = relay.TupleGetItem(func_4019_call(), 0)
call_6053 = relay.TupleGetItem(func_4020_call(), 0)
output = relay.Tuple([call_6035,call_6052,])
output2 = relay.Tuple([call_6036,call_6053,])
func_6066 = relay.Function([], output)
mod['func_6066'] = func_6066
mod = relay.transform.InferType()(mod)
mutated_mod['func_6066'] = func_6066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6066_call = mutated_mod.get_global_var('func_6066')
call_6067 = func_6066_call()
output = call_6067
func_6068 = relay.Function([], output)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_6115 = func_2900_call()
call_6116 = func_2900_call()
output = call_6115
output2 = call_6116
func_6120 = relay.Function([], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
output = func_6120()
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_6139 = func_2900_call()
call_6140 = func_2900_call()
output = call_6139
output2 = call_6140
func_6143 = relay.Function([], output)
mod['func_6143'] = func_6143
mod = relay.transform.InferType()(mod)
output = func_6143()
func_6144 = relay.Function([], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_6239 = relay.TupleGetItem(func_3879_call(), 0)
call_6240 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([call_6239,])
output2 = relay.Tuple([call_6240,])
func_6254 = relay.Function([], output)
mod['func_6254'] = func_6254
mod = relay.transform.InferType()(mod)
output = func_6254()
func_6255 = relay.Function([], output)
mutated_mod['func_6255'] = func_6255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_6340 = relay.TupleGetItem(func_4277_call(), 0)
call_6341 = relay.TupleGetItem(func_4278_call(), 0)
output = call_6340
output2 = call_6341
func_6358 = relay.Function([], output)
mod['func_6358'] = func_6358
mod = relay.transform.InferType()(mod)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6358_call = mutated_mod.get_global_var('func_6358')
call_6359 = func_6358_call()
output = call_6359
func_6360 = relay.Function([], output)
mutated_mod['func_6360'] = func_6360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_6410 = func_2900_call()
call_6411 = func_2900_call()
output = relay.Tuple([call_6410,])
output2 = relay.Tuple([call_6411,])
func_6419 = relay.Function([], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
mutated_mod['func_6419'] = func_6419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mutated_mod.get_global_var('func_6419')
call_6420 = func_6419_call()
output = call_6420
func_6421 = relay.Function([], output)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_6497 = relay.TupleGetItem(func_5085_call(), 0)
call_6498 = relay.TupleGetItem(func_5086_call(), 0)
output = call_6497
output2 = call_6498
func_6521 = relay.Function([], output)
mod['func_6521'] = func_6521
mod = relay.transform.InferType()(mod)
mutated_mod['func_6521'] = func_6521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mutated_mod.get_global_var('func_6521')
call_6522 = func_6521_call()
output = call_6522
func_6523 = relay.Function([], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_6544 = func_5995_call()
call_6545 = func_5995_call()
output = relay.Tuple([call_6544,])
output2 = relay.Tuple([call_6545,])
func_6590 = relay.Function([], output)
mod['func_6590'] = func_6590
mod = relay.transform.InferType()(mod)
output = func_6590()
func_6591 = relay.Function([], output)
mutated_mod['func_6591'] = func_6591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6358_call = mod.get_global_var('func_6358')
func_6360_call = mutated_mod.get_global_var('func_6360')
call_6607 = func_6358_call()
call_6608 = func_6358_call()
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_6611 = relay.TupleGetItem(func_33_call(relay.reshape(call_6607.astype('uint64'), [4, 13, 16])), 0)
call_6612 = relay.TupleGetItem(func_35_call(relay.reshape(call_6607.astype('uint64'), [4, 13, 16])), 0)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_6620 = relay.TupleGetItem(func_3073_call(), 1)
call_6621 = relay.TupleGetItem(func_3075_call(), 1)
output = relay.Tuple([call_6607,call_6611,call_6620,])
output2 = relay.Tuple([call_6608,call_6612,call_6621,])
func_6627 = relay.Function([], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
mutated_mod['func_6627'] = func_6627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mutated_mod.get_global_var('func_6627')
call_6628 = func_6627_call()
output = call_6628
func_6629 = relay.Function([], output)
mutated_mod['func_6629'] = func_6629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6636 = relay.var("var_6636", dtype = "float32", shape = (1, 2, 7))#candidate|6636|(1, 2, 7)|var|float32
uop_6637 = relay.cos(var_6636.astype('float32')) # shape=(1, 2, 7)
var_6642 = relay.var("var_6642", dtype = "float32", shape = (11, 2, 7))#candidate|6642|(11, 2, 7)|var|float32
bop_6643 = relay.power(uop_6637.astype('float64'), var_6642.astype('float64')) # shape=(11, 2, 7)
output = relay.Tuple([bop_6643,])
output2 = relay.Tuple([bop_6643,])
func_6658 = relay.Function([var_6636,var_6642,], output)
mod['func_6658'] = func_6658
mod = relay.transform.InferType()(mod)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6658_call = mutated_mod.get_global_var('func_6658')
var_6660 = relay.var("var_6660", dtype = "float32", shape = (1, 2, 7))#candidate|6660|(1, 2, 7)|var|float32
var_6661 = relay.var("var_6661", dtype = "float32", shape = (11, 2, 7))#candidate|6661|(11, 2, 7)|var|float32
call_6659 = func_6658_call(var_6660,var_6661,)
output = call_6659
func_6662 = relay.Function([var_6660,var_6661,], output)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_6664 = relay.TupleGetItem(func_4240_call(), 0)
call_6665 = relay.TupleGetItem(func_4241_call(), 0)
output = relay.Tuple([call_6664,])
output2 = relay.Tuple([call_6665,])
func_6677 = relay.Function([], output)
mod['func_6677'] = func_6677
mod = relay.transform.InferType()(mod)
output = func_6677()
func_6678 = relay.Function([], output)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_6715 = func_4332_call()
call_6716 = func_4332_call()
output = relay.Tuple([call_6715,])
output2 = relay.Tuple([call_6716,])
func_6723 = relay.Function([], output)
mod['func_6723'] = func_6723
mod = relay.transform.InferType()(mod)
output = func_6723()
func_6724 = relay.Function([], output)
mutated_mod['func_6724'] = func_6724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_6741 = relay.TupleGetItem(func_3094_call(), 0)
call_6742 = relay.TupleGetItem(func_3096_call(), 0)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_6764 = func_4332_call()
call_6765 = func_4332_call()
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_6777 = relay.TupleGetItem(func_5788_call(relay.reshape(call_6741.astype('uint32'), [4, 1, 3])), 0)
call_6778 = relay.TupleGetItem(func_5790_call(relay.reshape(call_6741.astype('uint32'), [4, 1, 3])), 0)
func_6143_call = mod.get_global_var('func_6143')
func_6144_call = mutated_mod.get_global_var('func_6144')
call_6779 = func_6143_call()
call_6780 = func_6143_call()
bop_6783 = relay.multiply(call_6777.astype('int8'), relay.reshape(call_6779.astype('int8'), relay.shape_of(call_6777))) # shape=(4, 1, 3)
bop_6786 = relay.multiply(call_6778.astype('int8'), relay.reshape(call_6780.astype('int8'), relay.shape_of(call_6778))) # shape=(4, 1, 3)
output = relay.Tuple([call_6741,call_6764,bop_6783,])
output2 = relay.Tuple([call_6742,call_6765,bop_6786,])
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
output = func_6794()
func_6795 = relay.Function([], output)
mutated_mod['func_6795'] = func_6795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5721_call = mod.get_global_var('func_5721')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6802 = relay.TupleGetItem(func_5721_call(), 0)
call_6803 = relay.TupleGetItem(func_5723_call(), 0)
func_3017_call = mod.get_global_var('func_3017')
func_3020_call = mutated_mod.get_global_var('func_3020')
var_6805 = relay.var("var_6805", dtype = "uint64", shape = (832,))#candidate|6805|(832,)|var|uint64
call_6804 = relay.TupleGetItem(func_3017_call(relay.reshape(call_6802.astype('uint32'), [4, 1, 3]), relay.reshape(var_6805.astype('uint64'), [832,]), ), 3)
call_6806 = relay.TupleGetItem(func_3020_call(relay.reshape(call_6802.astype('uint32'), [4, 1, 3]), relay.reshape(var_6805.astype('uint64'), [832,]), ), 3)
output = relay.Tuple([call_6802,call_6804,var_6805,])
output2 = relay.Tuple([call_6803,call_6806,var_6805,])
func_6825 = relay.Function([var_6805,], output)
mod['func_6825'] = func_6825
mod = relay.transform.InferType()(mod)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6826 = relay.var("var_6826", dtype = "uint64", shape = (832,))#candidate|6826|(832,)|var|uint64
func_6825_call = mutated_mod.get_global_var('func_6825')
call_6827 = func_6825_call(var_6826)
output = call_6827
func_6828 = relay.Function([var_6826], output)
mutated_mod['func_6828'] = func_6828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_6838 = func_4844_call()
call_6839 = func_4844_call()
func_6677_call = mod.get_global_var('func_6677')
func_6678_call = mutated_mod.get_global_var('func_6678')
call_6858 = relay.TupleGetItem(func_6677_call(), 0)
call_6859 = relay.TupleGetItem(func_6678_call(), 0)
output = relay.Tuple([call_6838,call_6858,])
output2 = relay.Tuple([call_6839,call_6859,])
func_6860 = relay.Function([], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mutated_mod.get_global_var('func_6860')
call_6861 = func_6860_call()
output = call_6861
func_6862 = relay.Function([], output)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_6903 = func_4406_call()
call_6904 = func_4406_call()
output = relay.Tuple([call_6903,])
output2 = relay.Tuple([call_6904,])
func_6908 = relay.Function([], output)
mod['func_6908'] = func_6908
mod = relay.transform.InferType()(mod)
output = func_6908()
func_6909 = relay.Function([], output)
mutated_mod['func_6909'] = func_6909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_6921 = relay.TupleGetItem(func_4920_call(), 0)
call_6922 = relay.TupleGetItem(func_4922_call(), 0)
output = relay.Tuple([call_6921,])
output2 = relay.Tuple([call_6922,])
func_6927 = relay.Function([], output)
mod['func_6927'] = func_6927
mod = relay.transform.InferType()(mod)
mutated_mod['func_6927'] = func_6927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6927_call = mutated_mod.get_global_var('func_6927')
call_6928 = func_6927_call()
output = call_6928
func_6929 = relay.Function([], output)
mutated_mod['func_6929'] = func_6929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4306_call = mutated_mod.get_global_var('func_4306')
call_6936 = relay.TupleGetItem(func_4304_call(), 0)
call_6937 = relay.TupleGetItem(func_4306_call(), 0)
output = call_6936
output2 = call_6937
func_6938 = relay.Function([], output)
mod['func_6938'] = func_6938
mod = relay.transform.InferType()(mod)
output = func_6938()
func_6939 = relay.Function([], output)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_6961 = relay.TupleGetItem(func_3482_call(), 0)
call_6962 = relay.TupleGetItem(func_3484_call(), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
const_6967 = relay.const([-3,4,-5,-3,-6,5,-7,3,1,-6,-4,-9,-8,10,-6,-4,8,-8,1,-6,-2,-8,-4,-1,-7,-5,-9,-9,-9,-4,8,6,8,-10,7,3,-7,-8,-1,5,-7,1,5,4,9,-10,8,4,10,-4,-10,-6,-7,9,3,-6,-4,-8,-8,-4,-2,3,-2,5,-1,-1,-5,9,3,-10,3,7,-4,8,-7,9,1,-9,-1,7,1,-4,-6,8,2,-6,-3,-4,-5,-9,7,2,-3,10,-5,-9,-4,-5,-7,-10,1,6,8,-1,4,-5,-9,10,-10,-8,-9,1,10,-6,9,8,3,-1,5,3,-3,4,-7,-4,7,10,-8,1,-9,5,-4,-7,8,-5,-2,-4,-7,7,-5,1,-4,9,-3,10,-5,1,9,-6,8,9,10,-4,-4,-2,-5,-2,-5,-1,-9,-4,9,6,3,-4,-3,-2,-8,3,9,-2,10,3,3,6,6,-10,5,-4,8,-1,1,-6,-10,-3,-4,-5,-9,2,2,-5,9,-5,1,-5,7,10,9,-9,6,-10,-6,-7,-1,6,6,-6,-7,9,10,9,-10,-5,6,8,5,2,-2,6,-7,-1,-6,-8,-5,2,-3,-3,1,-3,-4,-9,-8,-2,-2,-6,-1,-2,1,1,-8,-3,6,-3,-6,4,-7,8,-5,-8,9,6,2,-8,-7,-10,5,-6,-3,-8,5,-8,-4,-8,9,4,1,-9,-7,5,-7,8,2,1,-3,4,-10,10,1,10,5,7,5,8,-2,-7,2,8,-1,9,9,-10,6,-2,-8,-6,-10,9,-8,1,-4,6,6,-9,-7,9,-2,5,-10,4,3,3,4,9,10,9,-8,9,-10,-9,9,-3,10,10,8,8,-5,-3,4,10,-3,8,-5,-5,9,2,-3,-10,6,3,-5,3,3,-10,1,-10,8,-4,-7,8,5,6,8,3,6,-5,-6,-3,-8,5,-5,-2,3,8,6,-7,-7,-1,9,-8,-9,-5,3,3,5,1,-4,-4,10,8,9,9,8,-10,1,1,-3,4,-6,-9,8,2,-4,7,-8,10,-2,-5,8,-7,-3,8,5,-4,-2,4,3,-9,4,-1,-3,-2,-1,-3,-2,7,-9,3,-10,6,10,-1,10,1,8,-6,4,-5,-5,-3,1,4,8,5,-4,9,3,-8,2,6,-1,10,-4,-10,3,8,5,3,9,1,-1,9,4,8,5,3,-8,-1,8,-1,-7,7,1,7,-10,-5,-3,-4,10,-1,7,10,9,-10,-5,9,2,-3,-8,4,1,8,4,8,-5,10,5,9,-1,4,-10,7,-9,-4,1,4,7,-5,-3,6,4,-1,-6,-6,9,-3,2,-2,10,-7,-6,-4,-2,-6,4,4,8,10,4,-10,-5,-4,3,-10,-4,6,10,4,1,-9,-6,4,6,7,-1,5,-2,-2,4,1,-1,-9,7,2,-5,-2,2,4,-1,8,-10,7,-1,-10,-3,5,8,-4,7,-2,7,-3,1,6,10,1,8,-5,-8,-8,-6,4,6,10,2,-8,-5,7,-10,-7,9,-4,7,-8,6,6,8,7,-6,9,-8,-8,-10,10,-7,2,-6,-3,-8,10,8,6,-3,-9,-10,8,5,-1,-10,7,-10,3,7,-1,-8,7,-4,-1,-7,-8,1,3,2,3,4,9,-8,10,-8,-8,-1,-4,9,-3,-8,-1,9,-4,-9,4,6,-7,-6,8,9,2,-1,4,2,6,8,-6,3,-9,9,-6,-7,-7,-2,-6,-1,1,-5,-3,2,-6,9,9,-3,4,4,-7,7,-1,-1,1,5,7,7,-6,1,1,-3,-2,1,-10,-10,-5,3,5,2,7,8,-9,3,-5,-7,-6,1,9,-8,8,-6,-4,-8,2,-6,9,-4,-2,6,-3,6,-3,9,-8,1,-2,8,5,-6,-5,-7,-8,-5,-1,-8,1,-4,-10,8,-10,5,-5,10,8,-8,-10,-9,7,-9,-4,3,-2,4,3,-3,1,5,-10,8,10,-4,3,9,7,10,-8,9,-1,-3,4,-7,3,-1,-6,-2,4,-7,9,-9,-7,-10,-2,-4,-1,-9,-2,-10,-8,-7,-1,-1,6,4,-7,4,9,-8,4,-4,-8,1,-9,4,-5,2,-1,-3,-2,-4,9,2,3,-1,-1,-5,-7,-8,9,-4,2,-10,-8,1,9,10,7,-8,-1,9,-3,2,3,8,9,-4,-9,-5,7,-8,5,-4,9], dtype = "uint64")#candidate|6967|(832,)|const|uint64
call_6966 = relay.TupleGetItem(func_33_call(relay.reshape(const_6967.astype('uint64'), [4, 13, 16])), 0)
call_6968 = relay.TupleGetItem(func_35_call(relay.reshape(const_6967.astype('uint64'), [4, 13, 16])), 0)
output = relay.Tuple([call_6961,call_6966,const_6967,])
output2 = relay.Tuple([call_6962,call_6968,const_6967,])
func_6985 = relay.Function([], output)
mod['func_6985'] = func_6985
mod = relay.transform.InferType()(mod)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6985_call = mutated_mod.get_global_var('func_6985')
call_6986 = func_6985_call()
output = call_6986
func_6987 = relay.Function([], output)
mutated_mod['func_6987'] = func_6987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_6994 = relay.TupleGetItem(func_5085_call(), 1)
call_6995 = relay.TupleGetItem(func_5086_call(), 1)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_7007 = relay.TupleGetItem(func_2713_call(), 0)
call_7008 = relay.TupleGetItem(func_2715_call(), 0)
var_7011 = relay.var("var_7011", dtype = "uint64", shape = (416, 2))#candidate|7011|(416, 2)|var|uint64
bop_7012 = relay.less(call_6994.astype('bool'), relay.reshape(var_7011.astype('bool'), relay.shape_of(call_6994))) # shape=(416, 2)
bop_7015 = relay.less(call_6995.astype('bool'), relay.reshape(var_7011.astype('bool'), relay.shape_of(call_6995))) # shape=(416, 2)
func_4991_call = mod.get_global_var('func_4991')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_7016 = func_4991_call()
call_7017 = func_4991_call()
bop_7028 = relay.subtract(var_7011.astype('uint32'), relay.reshape(call_6994.astype('uint32'), relay.shape_of(var_7011))) # shape=(416, 2)
bop_7031 = relay.subtract(var_7011.astype('uint32'), relay.reshape(call_6995.astype('uint32'), relay.shape_of(var_7011))) # shape=(416, 2)
output = relay.Tuple([call_7007,bop_7012,call_7016,bop_7028,])
output2 = relay.Tuple([call_7008,bop_7015,call_7017,bop_7031,])
func_7038 = relay.Function([var_7011,], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
var_7039 = relay.var("var_7039", dtype = "uint64", shape = (416, 2))#candidate|7039|(416, 2)|var|uint64
output = func_7038(var_7039)
func_7040 = relay.Function([var_7039], output)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_7066 = relay.TupleGetItem(func_4240_call(), 0)
call_7067 = relay.TupleGetItem(func_4241_call(), 0)
output = relay.Tuple([call_7066,])
output2 = relay.Tuple([call_7067,])
func_7083 = relay.Function([], output)
mod['func_7083'] = func_7083
mod = relay.transform.InferType()(mod)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7083_call = mutated_mod.get_global_var('func_7083')
call_7084 = func_7083_call()
output = call_7084
func_7085 = relay.Function([], output)
mutated_mod['func_7085'] = func_7085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6143_call = mod.get_global_var('func_6143')
func_6144_call = mutated_mod.get_global_var('func_6144')
call_7112 = func_6143_call()
call_7113 = func_6143_call()
func_4137_call = mod.get_global_var('func_4137')
func_4141_call = mutated_mod.get_global_var('func_4141')
const_7115 = relay.const([True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False], dtype = "bool")#candidate|7115|(520,)|const|bool
const_7116 = relay.const([9,-5,-2,-8,-6,-1,-10,-9,4,3,8,-4,-6,-9,8,-10,-5,7,-1,-10,-4,7,-3,-10,-10,-3,-4,-1,3,-9,8,-9,-2,10,1,-10,2,10,6,2,-2,-6,3,9,9,-8,7,10,6,-1,-10,2,8,1,2,2,10,2,-7,-1,1,3,-1,-5,1,-1,-9,-6,5,-5,-1,-2,-6,6,7,10,-9,6,-4,-6,-9,9,-10,-6,-4,-5,-9,6,1,-9,-9,8,9,-9,-7,1,2,5,-5,-8,-4,-6,9,-10,-3,-1,-7,-4,5,1,-6,7,2,-9,-6,8,9,-5,-5,1,4,-4,-2,-7,-10,8,-3,-2,-8,-2,8,-4,-3,7,4,7,1,8,8,2,-8,-3,-7,3,-8,10,6,-4,3,-8,1,-6,5,-10,3,-10,-4,1,-10,7,-1,3,-2,-10,-10,5,-2,-6,9,1,-9,3,5,-5,10,2,-10,1,-4,9,9,-7,-7,9,10,5,2,3,4,4,-1,-5,1,-4,-7,1,9,7,5,-9,8,4,-4,7,6,-1,-8,-9,4,-6,-8,-9,6,-2,-3,-6,7,-1,9,-10,-9,-4,-9,6,6,-6,-8,3,10,5,-8,-2,-2,-7,-1,8,10,-9,-4,-2,-8,7,3,1,5,7,-8,-8,4,-1,-2,8,-10,-1,-5,-5,3,-10,3,-10,-1,2,9,-10,-5,9,2,9,6,8,-3,4,-6,2,10,-8,2,10,9,-4,3,-2,-5,-8,-1,2,-9,9,3,-5,-7,3,10,-1,-5,3,-2,-4,-4,-8,9,8,-8,-3,2,5,-8,9,4,-7,8,-9,-5,-7,-5,5,-7,-10,-3,6,-1,-5,1,-9,7,-4,-9,7,-5,-4,-1,2,3,-3,-9,2,-1,-10,-4,-7,-8,5,-3,-9,7,7,-2,6,-5,2,9,3,-10,2,4,4,-10,7,-3,2,-2,8,1,1,-2,-7,6,10,-1,-1,-2,6,6,-7,-4,9,-1,-1,-10,6,7,2,3,1,-2,10,-9,-8,-2,4,-8,-1,9,-9,6,10,1,7,1,10,10,9,-6,4,6,1,10,-2,4,7,-9,3,6,5,-8,5,3,-7,3,-7,9,10,10,6,5,5,-10,-3,-6,6,-3,2,-4,-5,2,5,-9,-9,-9,4,10,-8,-6,7,-1,-8,5,-10,-10,-8,-8,4,-10,-8,-7,2,10,8,-3,9,-1,6,-8,-6,3,3,-9,-9,-9,9,-9,-5,-3,6,9,7,4,-7,2,-5,9,8,-6,-8,-6,-2,10,-4,2,8,-7,5,-2,6,-8,-1,-10,7,-8,10,2,8,1,6,4,-7,10,-4,4,8,-4,9,8,9,-10,9,-5,5,-1,-1,6,-7,10,9,-3,6,-6,1,-10,1,3,4,-6,-4,-2,1,-3,-6,-10,-10,2,10,2,1,6,-4,1,-7,-8,4,-7,10,3,-4,-1,-6,2,-10,-1,-6,2,-6,-7,9,-5,7,-8,-2,3,4,2,-4,7,-9,-4,3,-5,10,-1,9,-4,6,5,4,7,9,-7,-4,-8,3,7,9,-7,6,-10,4,3,-7,-1,6,9,7,-10,-2,-3,-2,5,4,2,1,-7,7,8,-10,-7,7,4,3,5,4,-4,-8,-2,2,2,-8,-10,-3,-1,7,1,-3,8,-9,-3,10,-1,-6,-1,-9,-2,6,-1,10,1,-9,3,-5,10,-5,9,2,-4,-5,7,-1,-10,-10,-3,-3,10,-7,6,8,-8,-8,-8,8,-9,10,4,4,6,5,6,6,-1,-3,-6,10,-3,2,-1,7,3,5,-9,-3,6,-6,5,-10,-6,-3,3,-8,-4,-2,-3,2,-6,-3,-9,-2,4,7,2,8,-10,2,-4,4,5,10,2,-1,-2,-5,-1,-4,-9,-6,8,-10,-5,-6,7,5,-5,-7,9,-7,-2,-10,1,2,6,-10,-2,-5,-5,5,10,-1,5,1,-5,4,3,4,1,6,4,2,-8,-4,-9,-4,-9,5,4,9,-6,-9,-1,7,-7,-9,-10,-8,9,1,10,-8,-2,-2,-9,-6,-8,-6,-7,10,5,-6,2,3,-3,1,2,2,-4,-2,7,-10,4,3,10,-7,5,-7,-5,-10,7,-4,3,-6,-10,10,8,-4,7,-6,-5,9,4,6,-10,-10,10,-5,9,9,-10,9,-10,-2,4,-3,1,-8,-10,6], dtype = "uint64")#candidate|7116|(832,)|const|uint64
call_7114 = relay.TupleGetItem(func_4137_call(relay.reshape(const_7115.astype('bool'), [10, 52]), relay.reshape(const_7116.astype('uint64'), [832,]), ), 1)
call_7117 = relay.TupleGetItem(func_4141_call(relay.reshape(const_7115.astype('bool'), [10, 52]), relay.reshape(const_7116.astype('uint64'), [832,]), ), 1)
var_7130 = relay.var("var_7130", dtype = "float64", shape = (8, 832))#candidate|7130|(8, 832)|var|float64
bop_7131 = relay.less(call_7114.astype('bool'), var_7130.astype('bool')) # shape=(8, 832)
bop_7134 = relay.less(call_7117.astype('bool'), var_7130.astype('bool')) # shape=(8, 832)
output = relay.Tuple([call_7112,const_7115,const_7116,bop_7131,])
output2 = relay.Tuple([call_7113,const_7115,const_7116,bop_7134,])
func_7137 = relay.Function([var_7130,], output)
mod['func_7137'] = func_7137
mod = relay.transform.InferType()(mod)
var_7138 = relay.var("var_7138", dtype = "float64", shape = (8, 832))#candidate|7138|(8, 832)|var|float64
output = func_7137(var_7138)
func_7139 = relay.Function([var_7138], output)
mutated_mod['func_7139'] = func_7139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_7178 = relay.TupleGetItem(func_6927_call(), 0)
call_7179 = relay.TupleGetItem(func_6929_call(), 0)
output = relay.Tuple([call_7178,])
output2 = relay.Tuple([call_7179,])
func_7196 = relay.Function([], output)
mod['func_7196'] = func_7196
mod = relay.transform.InferType()(mod)
output = func_7196()
func_7197 = relay.Function([], output)
mutated_mod['func_7197'] = func_7197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mod.get_global_var('func_6521')
func_6523_call = mutated_mod.get_global_var('func_6523')
call_7304 = func_6521_call()
call_7305 = func_6521_call()
func_7083_call = mod.get_global_var('func_7083')
func_7085_call = mutated_mod.get_global_var('func_7085')
call_7330 = relay.TupleGetItem(func_7083_call(), 0)
call_7331 = relay.TupleGetItem(func_7085_call(), 0)
output = relay.Tuple([call_7304,call_7330,])
output2 = relay.Tuple([call_7305,call_7331,])
func_7342 = relay.Function([], output)
mod['func_7342'] = func_7342
mod = relay.transform.InferType()(mod)
mutated_mod['func_7342'] = func_7342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7342_call = mutated_mod.get_global_var('func_7342')
call_7343 = func_7342_call()
output = call_7343
func_7344 = relay.Function([], output)
mutated_mod['func_7344'] = func_7344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_7351 = relay.TupleGetItem(func_4920_call(), 2)
call_7352 = relay.TupleGetItem(func_4922_call(), 2)
uop_7362 = relay.acosh(call_7351.astype('float64')) # shape=(520, 2)
uop_7364 = relay.acosh(call_7352.astype('float64')) # shape=(520, 2)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_7367 = relay.TupleGetItem(func_4026_call(), 1)
call_7368 = relay.TupleGetItem(func_4027_call(), 1)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_7370 = relay.TupleGetItem(func_4240_call(), 0)
call_7371 = relay.TupleGetItem(func_4241_call(), 0)
var_7375 = relay.var("var_7375", dtype = "float64", shape = (520, 2))#candidate|7375|(520, 2)|var|float64
bop_7376 = relay.bitwise_xor(uop_7362.astype('int16'), relay.reshape(var_7375.astype('int16'), relay.shape_of(uop_7362))) # shape=(520, 2)
bop_7379 = relay.bitwise_xor(uop_7364.astype('int16'), relay.reshape(var_7375.astype('int16'), relay.shape_of(uop_7364))) # shape=(520, 2)
func_6723_call = mod.get_global_var('func_6723')
func_6724_call = mutated_mod.get_global_var('func_6724')
call_7382 = relay.TupleGetItem(func_6723_call(), 0)
call_7383 = relay.TupleGetItem(func_6724_call(), 0)
output = relay.Tuple([call_7367,call_7370,bop_7376,call_7382,])
output2 = relay.Tuple([call_7368,call_7371,bop_7379,call_7383,])
func_7391 = relay.Function([var_7375,], output)
mod['func_7391'] = func_7391
mod = relay.transform.InferType()(mod)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7392 = relay.var("var_7392", dtype = "float64", shape = (520, 2))#candidate|7392|(520, 2)|var|float64
func_7391_call = mutated_mod.get_global_var('func_7391')
call_7393 = func_7391_call(var_7392)
output = call_7393
func_7394 = relay.Function([var_7392], output)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_7444 = relay.TupleGetItem(func_4277_call(), 0)
call_7445 = relay.TupleGetItem(func_4278_call(), 0)
func_4599_call = mod.get_global_var('func_4599')
func_4606_call = mutated_mod.get_global_var('func_4606')
const_7457 = relay.const([-8,-6,9,-5,-8,-10,8,10,5,10,6,2], dtype = "uint32")#candidate|7457|(12,)|const|uint32
var_7458 = relay.var("var_7458", dtype = "uint64", shape = (1008,))#candidate|7458|(1008,)|var|uint64
var_7459 = relay.var("var_7459", dtype = "bool", shape = (520,))#candidate|7459|(520,)|var|bool
var_7460 = relay.var("var_7460", dtype = "float32", shape = (330, 2))#candidate|7460|(330, 2)|var|float32
const_7461 = relay.const([-0.470956,-2.474937,-0.304607,-6.726654,-7.474000,7.565559,1.014931,6.507297,-1.433968,8.035942,6.118383,4.607128,-1.989355,0.141091,5.321783,-9.860520,-0.857589,8.419033,0.140842,8.843294,-6.649275,-7.733321,-6.915403,-6.629148,6.224252,-8.191927,2.072927,-6.072769,-2.746978,5.423387,-1.409433,4.417850,-1.907436,5.655652,-3.873613,3.463057,3.893216,-7.818291,-2.276356,8.095778,-5.907273,-8.684618,5.605216,8.783022,-3.837458,5.921711,8.334301,-5.141164,9.659795,9.574167,-3.926551,9.330105,-6.115714,0.244186,-8.673871,-3.191433,-8.884271,0.550142,9.845535,4.597366,0.541696,0.307915,4.080617,8.430890,6.929321,-0.829194,4.864830,-4.443406,-0.776412,-7.875135,-7.957511,9.040799,0.298915,-0.552138,-1.032268,4.046531,-7.769177,-7.349411,-1.770053,-2.183213,-2.056309,1.422194,-7.512584,-3.237561,9.632880,-1.785266,9.357471,8.286702,-8.587089,-5.749191,4.099758,-6.142649,-4.115849,-0.652118,-7.303082,-8.887256,0.532252,3.865020,6.373143,-7.650942,-5.153882,-1.241129,4.442033,1.302850,2.926386,-3.998029,8.117118,-0.216167,5.523517,-9.849944,-4.418101,-8.013083,-9.160373,1.769879,6.194013,-3.077745,-7.553281,-3.715844,-8.516809,9.714755,3.608371,7.105357,4.499896,-1.919178,-2.333646,-2.145954,1.728016,-5.945158,-1.060095,-2.857215,-6.266211,-1.944865,0.156373,-6.405414,-8.759891,-7.288178,2.025938,-5.809013,4.915101,9.415736,2.600814,-3.378445,-5.725386,-3.466874,8.754882,9.039338,9.389109,-8.081130,-2.081770,8.637342,7.481927,-6.022023,1.765891,1.800216,6.085550,-1.278037,-0.328015,3.823248,5.346189,-0.721016,-7.124770,-5.756567,5.428737,5.262355,8.311317,-6.521108,-1.233828,4.883214,0.682654,-9.825221,5.998459,7.770437,-2.403360,7.406824,-4.330808,-4.662617,2.782422,-0.812782,6.335946,-4.766007,-8.034292,8.734170,3.522513,-0.365793,3.742697,9.556732,1.127310,3.835808,0.491558,-3.560160,-3.812591,1.789432,9.202374,-0.253782,9.043985,-9.094250,1.891775,-7.175891,-9.123383,9.023841,8.704268,2.502039,9.111277,-9.680463,1.054619,-2.411209,0.920267,6.512270,9.390864,-3.933537,-8.954825,6.624034,-0.183887,-8.621815,-1.846451,5.273564,-3.461600,9.773479,9.009707,-1.767097,-8.829295,-5.200431,-1.966255,-8.954614,6.074297,-7.398870,8.943903,3.012329,0.194776,8.833437,9.347419,-7.304202,3.163991,9.384335,9.850422,4.292725,-4.948779,-3.730170,8.274443,-6.761491,4.647472,-8.506010,-5.720367,-9.173268,9.434550,-9.319800,-7.991828,-8.865736,-3.216862,-0.862663,5.535695,5.421294,0.654006,7.649986,-1.593378,5.402385,-9.708908,9.426178,7.358571,0.740611,6.457986,2.276046,-8.049476,6.166742,5.372104,-2.427721,8.085916,-3.164533,6.081353,6.705028,-8.434388,5.004943,-7.406851,4.628934,5.420778,-9.241509,-5.517602,-1.114600,7.028884,9.675116,-8.320531,1.461054,4.074745,-1.064326,9.704754,6.607253,8.167229,7.549329,9.642400,2.793890,0.933807,9.379384,-1.377716,-2.057961,1.498118,-8.584204,0.806053,7.634311,-3.525290,-4.477730,5.482075,5.215243,-8.794817,-8.391182,8.170307,-4.962009,5.766800,1.297092,-9.037648,9.406755,0.417675,0.631884,3.652966,-2.873679,-0.958882,-7.101707,-2.649163,-3.490252,-9.931114,-5.847562,3.956117,-5.459785,-6.474018,-1.905650,3.740393,-1.324467,8.813025,6.597654,-8.797944,-5.190219,-8.117348,-2.142703,-4.412546,-3.522343,6.004869,7.465248,1.266455,4.905728,9.027897,-3.897158,1.302582,0.848521,-7.520410,7.668116,-7.143777,-4.386418,-3.815472,9.896070,0.978534,3.630516,-9.225580,6.946022,-0.830873,2.028059,-2.004671,-3.984687,-0.928086,4.612526,2.892214,2.123657,-5.926154,-3.153455,-0.768909,-8.985086,9.439941,-2.811988,-4.181560,-3.869011,-2.618870,-8.968460,3.556099,-6.945421,-2.280882,7.842580,1.228053,-9.167948,-3.234593,-3.319704,-6.004684,-9.684257,4.301576,-5.826688,6.467845,-4.025273,-9.408495,-3.652058,-3.271200,-3.838261,-3.325774,-1.936706,-9.957317,-3.881218,5.449064,-7.108699,7.622986,-6.283930,6.105932,-5.047588,5.981189,0.680737,4.174410,2.293633,-5.924661,-0.090305,0.270400,-5.176207,8.665408,-9.415725,-5.284395,7.293148,-7.399098,-0.915725,-6.687505,-8.318544,7.868139,9.712369,0.686512,-0.577387,-9.364662,5.534812,6.608157,-0.649614,-2.404263,-8.491101,0.415160,-4.129556,7.385257,7.742265,5.856196,6.651068,2.170101,7.331253,7.333010,1.590864,-2.909004,-9.428086,-2.971529,4.817055,0.060534,5.173782,4.171279,-9.960125,-9.631074,-9.837586,6.560208,3.165540,-5.046914,-8.560159,-7.490513,-9.106173,-5.718997,2.545539,0.834673,2.206794,-8.558309,9.664018,-4.685928,-4.230011,4.771138,-8.229017,-3.461448,-7.162428,-2.479902,-6.454040,-5.971301,4.887975,9.248086,7.939817,8.638965,-6.413071,-6.353091,8.350297,5.007834,9.952272,-3.223539,-9.252394,6.632070,-2.135021,2.839980,7.118475,3.121007,-2.775702,2.818206,3.831419,-8.114898,-8.481060,6.611021,9.543322,9.420904,6.996377,-6.171188,-9.895678,-0.131041,5.124335,3.485785,7.663565,8.587194,-4.013596,-5.416327,-7.743399,8.230699,8.534297,-2.910436,0.048139,6.818811,-4.036364,-2.311659,-2.590515,2.788660,-8.510189,-7.485989,2.808436,8.120620,-4.951672,8.206528,-0.019338,8.899234,4.892257,-5.092648,6.072402,5.697253,7.368395,-4.883956,5.751918,1.374015,-8.243849,8.134723,-9.032078,8.596954,-5.505106,2.913059,5.636045,-8.815233,-5.311490,-4.533618,1.494204,7.526626,1.618785,-3.514817,0.716513,8.363699,0.263864,6.471673,4.565273,-2.730705,5.360311,9.202016,-9.097736,9.783091,-0.342411,-6.703005,-2.062836,1.139797,0.105482,-9.620763,3.316682,-1.114064,-4.640073,-3.087645,4.625663,-6.768852,-4.539978,9.372967,0.717769,-4.720223,-8.869755,0.133852,-3.789584,7.278717,-5.047894,3.553377,5.601345,-5.744090,6.665183,6.747118,7.629272,-5.282758,5.104835,-3.602235,-8.696292,5.214725,7.616703,8.541095,8.921830,6.591770,-1.218484,8.640960,5.319088,-7.213004,2.948098,8.775707,9.723780,-7.844272,0.109510,6.450572,4.108089,0.371241,-6.081480,0.600994,5.679102,9.289319,9.117388,6.384146,9.419691,5.585649,5.416393,6.101270,-9.524014,-2.740457,8.926392,-5.912000,-1.103389,4.278718,-2.845255,-4.916101,-8.948978,-2.678315,-8.299182,-1.727502,8.950979,-1.333656,-3.372638,8.672748,-9.592623,-3.312776,9.566263,-3.222927,-8.696599,-4.522114,-2.197955,-2.995107,3.927349,-8.163834,-7.559601,2.639219,5.291531,6.024622,1.539517,-6.194462,-7.585588,7.666114,6.167301,5.283722,-3.648444,4.798408,-9.336851,6.060879,-2.015739,2.963738,-3.959691,-4.873965,9.499860,0.360741,-2.460512,-7.282016,-5.038758,-7.688662,8.585898,-3.633429,-2.230598,8.248648,7.123774,-4.545358,-0.358027,1.595288,-9.871839,-6.469746,0.654092,-3.516535,-1.747453,-0.421481,1.898230,-8.291530,-1.788493,-8.899724,-1.590845,1.578682,-9.141847,1.506809,8.820867,9.109658,-8.595046,9.373580,3.501261,8.837549,-6.653321,-7.394929,6.108043,0.376352,5.689893,-3.516509,6.845663,-8.201773,2.621377,-3.892161,-4.519511,-3.468750,-1.092797,-2.831150,7.437898,2.552981,0.726584,2.343253,-5.090518,-0.440454,-4.209096,-9.966365,-6.673018,8.576889,-7.711670,-1.055050,2.053392,-7.416321,7.298929,7.049871,-9.389679,-8.636208,6.374607,-6.121752,-0.423852,2.697364,7.127433,-2.216286,-9.766731,3.706240,-8.014246,1.690624,-3.220332,8.306894,-0.774616,4.093232,0.956979,-9.191197,9.225212,-7.446799,5.862032,8.717804,7.053082,-1.698815,3.201835,3.817600,-2.044539,-7.893731,-5.946445,-7.971430,-2.405389,5.964296,6.333658,-8.566670,4.416772,4.832479,1.343506,2.791119,-2.173856,-6.123609,-6.905128,3.259060,9.477339,2.645735,5.554537,-8.862668,5.982123,0.262733,-0.441102,-3.644966,0.635799,-1.443435,-5.362356,6.607767,-7.023535,-4.626353,4.407938,8.011696,8.772993,-6.022672,-4.210390,9.142896,1.151032,-5.145892,-4.914123,5.621290,-6.144868,-7.972266,5.929205,-0.731685,-7.356270,-6.384581,-7.894277,-7.159175,4.072343,5.155984,9.796007,6.204127,9.234839,-6.212948,-9.769085,9.651951,-4.711485,6.000863,-0.314378,4.315968,9.641303,-3.756405,2.334991,4.513586,-4.765003,-1.051487,8.772794,-8.419008,1.467979,9.835437,-0.447008,8.780114,-9.118970,-7.995949,-2.448296,8.865452,-1.880777,1.092223,-6.299642,-2.540513,4.219710,2.744174,-9.365636,-8.224498,-8.903704,-1.564638,-1.930076,0.171093,-3.989235,4.749034,5.192126,-5.614452,9.468765,6.006541,5.115253,-1.794095,-7.263215,9.492018,3.516414,6.218364,5.539962,-4.664034,4.194660,4.006855,5.676496,-0.847942,6.696840,-5.616835,-7.436533,1.092029,4.390199,0.062287,3.232280,0.353184,-3.543678,-8.158245,-2.534437,7.221041,5.394234,9.347780,-7.386803,9.304905,6.199820,-3.543126,-1.165368,5.726006,0.987257,8.338008,4.822873,2.438256,7.507259,-0.573912,-2.023891,5.460627,-6.038084,-5.038237,-3.655826,-2.176516,-7.519438,-8.134422,-6.052542,-7.999935,-0.177885,-7.982771,-6.158729,6.086164,-7.471553,1.901424,9.140648,-3.307369,-8.125347,-9.624822,-6.667214,-3.425542,5.876117,6.723335,-0.829872,2.759813,-9.859857,-4.352497,4.694627,-9.364654,1.218179,-6.127604,8.844757,-9.215452,-1.779633,-3.059131,-0.832828,6.566236,9.249384,3.427977,-3.566190,-0.362563,0.658596,-1.381700,-1.433683,-3.867907,-1.237922,1.051158,5.935198,7.801734,-7.727817,-4.406072,-2.130534,4.258570,7.966038,9.187310,1.842961,-9.554613,3.418622,-6.041278,2.161028,6.118256,6.326502,2.639572,1.515598,-7.971923,8.449196,-1.002128,-7.052756,4.743919,-2.328777,-3.722107,4.241777,-5.777406,8.533905,-7.800185,2.671823,-7.323777,-3.365169,9.119029,2.899916,-2.237872,9.126463,-7.584422,-5.642892,9.310858,2.934213,-6.720339,-1.887141,1.783677,1.410454,-6.354026,8.936773,-4.881658,7.675283,3.007094,1.014811,4.228906,-7.934292,0.666955,1.565790,-6.529720,-4.941841,6.114102,1.948105,-5.281722,4.915947,-5.332941,3.943238,-2.284361,-5.505190,9.780055,2.294569,-1.360506,3.843142,-7.326837,-7.381952,2.320331,-1.216050,7.138601,5.923725,-5.773499,4.585927,7.926364,4.933301,9.165952,-5.187358,-8.202427,3.359259,9.578131,-0.120609,4.193264,-9.768457,3.615474,-0.859656,6.039224,-3.185212,-3.660424,-4.423681,-0.417366,3.393322,2.921834,8.665468,-7.684218,6.510571,6.511003,5.281170,-4.320323,3.477561,-5.521647,9.688170,0.800263,-0.829568,5.338703,0.722181,-6.970426,5.582166,-8.127223,1.086340,7.868175,6.526912,-2.688269,2.134604,-7.140808,-9.025615,-3.585339,-9.654464,7.529372,2.796423,5.758876,9.300299,-7.969619,-9.300720,3.775987,7.102366,-2.102569,8.732999,5.924026,7.475447,0.364034,8.075325,9.900644,4.718815,-3.046983,4.802962,9.196279,8.523188,0.706952,3.988794,-7.358598,0.082201,3.009591,2.133856,-6.191361,-2.224742,3.693962,4.128831,-8.881342,1.087327,-5.472624,-6.385891,9.593244,7.237990,9.295192,4.690443,5.790476,-9.750977,9.007569,5.900775,1.100026,5.685850,6.147755,8.466639,0.861896,-7.178091,-2.296719,-7.990555,2.661773,-9.511766,-9.055033,-3.394685,2.861770,-2.475884,-6.077835,-8.199205,3.870075,-9.527193,-2.720999,-6.433281,8.265124,4.099702,-4.755129,3.747809,7.389268,-4.700363,-4.856483,4.863763,-9.773815,-1.855329,-8.297988,-4.173751,0.932331,-3.617526,-7.258318,9.017625,-0.818925,2.029052,-4.928811,-4.467103,5.272456,0.871441,0.199002,0.442247,-1.115867,-7.692939,-0.664275,2.045677,-4.567898,2.242321,-1.563303,-4.030235,-9.779453,6.993040,-0.795753,-5.646771,1.412928,4.798548,1.220387,-0.378883,6.463717,-3.734710,4.938165,4.001052,0.378482,-6.575247,9.892849,-1.346773,2.580316,1.883975,7.255824,9.347146,4.955307,2.898268,6.739567,5.006869,2.247045,-9.240036,6.151597,-0.952109,-4.148916,-2.781492,6.715324,4.394255,9.686231,-2.991007,9.776035,1.123727,6.889098,8.295192,-2.393006,1.080438,-5.843315,-0.741182,3.759930,-8.751810,3.472434,0.675557,-7.599073,7.427862,2.348796,-3.966470,3.078486,-3.332874,4.784699,3.133025,-9.943944,0.451248,-9.231624,-3.878486,-9.246037,-7.372569,5.250453,-7.974061,-6.904953,2.192005,1.210834,-5.579627,4.523757,9.659531,-3.912825,-2.057531,0.967081,3.854192,4.813932,6.166785,4.428773,-1.737470,-2.350701,-1.624349,-6.218028,-9.862987,0.212393,2.009052,5.714676,2.058489,4.628044,-7.154723,3.470204,1.500635,9.525264,-0.510562,-3.366054,-9.515359,7.341893,4.576005,-4.376527,-2.227664,6.722633,2.109731,-7.954138,-3.430661,-7.760736,7.909002,2.343263,7.902947,6.434210,9.860884,-4.632803,-8.219282,-9.259879,5.170396,-4.687585,-4.139386,4.088428,-0.424144,5.847725,-3.042044,-2.204420,6.459837,-9.347159,-5.369768,6.886568,3.759274,4.526742,2.047982,7.632284,5.242571,-1.488885,4.266403,0.217794,-3.944632,3.060589,-1.611749,-1.184067,4.608898,-6.919991,-1.986764,0.296103,6.659624,-9.370756,-4.975816,-1.155647,9.882834,6.275219,-1.436759,-3.295823,7.560051,0.946035,2.936907,-3.464286,-7.977934,3.165551,-0.239617,-3.716337,5.466279,-4.013928,5.718237,0.342219,-0.246392,6.307999,8.456033,3.043581,8.194653,6.927028,-7.866605,0.372950,-3.660182,9.391712,0.142376,2.886372,-1.861033,-0.337453,-3.922438,-1.680791,0.704023,1.976077,-4.601589,1.069799,-2.260043,-8.345624,-8.192116,6.047941,-0.861281,5.761115,8.872212,6.983720,7.339199,6.730211,8.186931,-9.871451,5.076181,-4.591677,-6.530793,-5.340606,-6.828270,0.948773,-3.206600,9.964427,0.937388,7.078947,0.608666,9.927691,-6.208582,-4.936975,-6.054278,-8.782457,3.286244,1.595157,8.305116,-5.085589,8.015354,-4.006398,-8.906592,-9.973220,4.319414,-0.235552,-4.718612,8.039753,-1.709755,6.211894,-4.050065,2.196160,-1.923686,7.917508,-0.832307,4.849774,5.642889,0.054853,5.236762,6.431497,0.936518,-5.761395,9.228213,3.789677,9.029396,7.709453,-1.272718,5.137232,7.090375,-2.070990,-8.486218,3.879503,-8.424423,-6.550063,4.661902,-5.697415,8.521364,-0.864519,-6.298987,4.201034,-9.987112,3.020480,7.234357,8.885808,2.500726,-9.133230,1.215996,6.046119,-4.269203,-9.893711,2.950014,0.504776,5.065928,-1.600736,6.601080,7.950970,-2.852296,-0.802956,-4.823514,-6.628878,-5.785817,7.238329,2.152878,5.777318,-9.017300,4.019950,-1.630727,0.227240,-1.828753,2.389037,9.055077,-5.071278,7.217483,5.333440,-7.180174,8.866555,-0.959608,1.012450,6.851387,2.536526,-0.468509,9.153096,4.592565,-5.069122,-4.148531,2.760678,-9.603605,1.925680,6.523321,8.939905,0.739744,-8.608093,-0.292218,7.350552,-2.990326,0.325072,8.027915,2.402401,8.715002,-6.284529,9.448454,4.822449,3.029719,8.777519,8.282917,8.023943,2.800852,-0.161327,5.476144,8.579018,5.298930,-8.051893,4.587069,7.233305,2.374264,0.672118,-9.416573,-0.686326,5.550593,-2.185133,7.591909,4.472885,6.950011,-3.300408,3.856245,-3.842422,-6.299951,6.953411,-5.553819,1.970913,3.724117,-5.096604,9.060768,5.551655,-2.423603,-9.818545,0.870191,-4.766257,5.936734,5.119428,-9.081662,8.447780,-5.009538,-5.098894,-3.700835,-4.223704,-9.254835,7.457228,-1.721758,0.716778,-4.103253,-1.297613,1.808099,-5.453652,2.088466,-8.715102,9.590591,-5.574862,-2.207439,-4.101272,-8.432295,-1.565899,5.332002,4.942150,4.473017,-3.845079,-7.703632,8.630497,8.026806,-2.920417,-9.374893,-1.972687,1.696958,0.237822,6.911515,-2.570221,3.219008,0.205003,-3.832848,-5.153426,6.246201,9.217694,5.032539,1.921075,-8.797259,7.788925,-0.337243,-8.129103,-4.862821,-3.999657,2.926383,-8.007904,9.370935,1.152369,-1.504889,4.981348,-3.031621], dtype = "float64")#candidate|7461|(1540,)|const|float64
const_7462 = relay.const([[4,-9,3,5,-9,2,-8,10,10,-8,-4,3,-6,7,-6,8,-6,3,5,1,5,-8,4,-1],[-7,5,4,7,2,2,5,-7,5,2,6,-7,-9,-5,4,9,5,-3,3,-10,7,4,2,-5]], dtype = "uint32")#candidate|7462|(2, 24)|const|uint32
call_7456 = relay.TupleGetItem(func_4599_call(relay.reshape(const_7457.astype('uint32'), [4, 1, 3]), relay.reshape(var_7458.astype('uint64'), [4, 252]), relay.reshape(var_7459.astype('bool'), [520,]), relay.reshape(var_7460.astype('float32'), [660,]), relay.reshape(const_7461.astype('float64'), [1540,]), relay.reshape(const_7462.astype('uint32'), [48, 1]), ), 15)
call_7463 = relay.TupleGetItem(func_4606_call(relay.reshape(const_7457.astype('uint32'), [4, 1, 3]), relay.reshape(var_7458.astype('uint64'), [4, 252]), relay.reshape(var_7459.astype('bool'), [520,]), relay.reshape(var_7460.astype('float32'), [660,]), relay.reshape(const_7461.astype('float64'), [1540,]), relay.reshape(const_7462.astype('uint32'), [48, 1]), ), 15)
output = relay.Tuple([call_7444,call_7456,const_7457,var_7458,var_7459,var_7460,const_7461,const_7462,])
output2 = relay.Tuple([call_7445,call_7463,const_7457,var_7458,var_7459,var_7460,const_7461,const_7462,])
func_7465 = relay.Function([var_7458,var_7459,var_7460,], output)
mod['func_7465'] = func_7465
mod = relay.transform.InferType()(mod)
var_7466 = relay.var("var_7466", dtype = "uint64", shape = (1008,))#candidate|7466|(1008,)|var|uint64
var_7467 = relay.var("var_7467", dtype = "bool", shape = (520,))#candidate|7467|(520,)|var|bool
var_7468 = relay.var("var_7468", dtype = "float32", shape = (330, 2))#candidate|7468|(330, 2)|var|float32
output = func_7465(var_7466,var_7467,var_7468,)
func_7469 = relay.Function([var_7466,var_7467,var_7468,], output)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mod.get_global_var('func_6627')
func_6629_call = mutated_mod.get_global_var('func_6629')
call_7550 = relay.TupleGetItem(func_6627_call(), 2)
call_7551 = relay.TupleGetItem(func_6629_call(), 2)
output = relay.Tuple([call_7550,])
output2 = relay.Tuple([call_7551,])
func_7560 = relay.Function([], output)
mod['func_7560'] = func_7560
mod = relay.transform.InferType()(mod)
output = func_7560()
func_7561 = relay.Function([], output)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7083_call = mod.get_global_var('func_7083')
func_7085_call = mutated_mod.get_global_var('func_7085')
call_7562 = relay.TupleGetItem(func_7083_call(), 0)
call_7563 = relay.TupleGetItem(func_7085_call(), 0)
output = call_7562
output2 = call_7563
func_7564 = relay.Function([], output)
mod['func_7564'] = func_7564
mod = relay.transform.InferType()(mod)
mutated_mod['func_7564'] = func_7564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7564_call = mutated_mod.get_global_var('func_7564')
call_7565 = func_7564_call()
output = call_7565
func_7566 = relay.Function([], output)
mutated_mod['func_7566'] = func_7566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_7628 = relay.TupleGetItem(func_4920_call(), 0)
call_7629 = relay.TupleGetItem(func_4922_call(), 0)
output = relay.Tuple([call_7628,])
output2 = relay.Tuple([call_7629,])
func_7641 = relay.Function([], output)
mod['func_7641'] = func_7641
mod = relay.transform.InferType()(mod)
mutated_mod['func_7641'] = func_7641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7641_call = mutated_mod.get_global_var('func_7641')
call_7642 = func_7641_call()
output = call_7642
func_7643 = relay.Function([], output)
mutated_mod['func_7643'] = func_7643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_7674 = relay.TupleGetItem(func_2713_call(), 0)
call_7675 = relay.TupleGetItem(func_2715_call(), 0)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_7684 = relay.TupleGetItem(func_4277_call(), 0)
call_7685 = relay.TupleGetItem(func_4278_call(), 0)
output = relay.Tuple([call_7674,call_7684,])
output2 = relay.Tuple([call_7675,call_7685,])
func_7686 = relay.Function([], output)
mod['func_7686'] = func_7686
mod = relay.transform.InferType()(mod)
output = func_7686()
func_7687 = relay.Function([], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7726 = relay.var("var_7726", dtype = "float64", shape = (7, 10, 11))#candidate|7726|(7, 10, 11)|var|float64
uop_7727 = relay.sqrt(var_7726.astype('float64')) # shape=(7, 10, 11)
output = uop_7727
output2 = uop_7727
func_7729 = relay.Function([var_7726,], output)
mod['func_7729'] = func_7729
mod = relay.transform.InferType()(mod)
var_7730 = relay.var("var_7730", dtype = "float64", shape = (7, 10, 11))#candidate|7730|(7, 10, 11)|var|float64
output = func_7729(var_7730)
func_7731 = relay.Function([var_7730], output)
mutated_mod['func_7731'] = func_7731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7735 = relay.var("var_7735", dtype = "float64", shape = (7, 2, 4))#candidate|7735|(7, 2, 4)|var|float64
uop_7736 = relay.log10(var_7735.astype('float64')) # shape=(7, 2, 4)
func_7641_call = mod.get_global_var('func_7641')
func_7643_call = mutated_mod.get_global_var('func_7643')
call_7743 = relay.TupleGetItem(func_7641_call(), 0)
call_7744 = relay.TupleGetItem(func_7643_call(), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_7755 = relay.TupleGetItem(func_5485_call(), 0)
call_7756 = relay.TupleGetItem(func_5487_call(), 0)
output = relay.Tuple([uop_7736,call_7743,call_7755,])
output2 = relay.Tuple([uop_7736,call_7744,call_7756,])
func_7761 = relay.Function([var_7735,], output)
mod['func_7761'] = func_7761
mod = relay.transform.InferType()(mod)
var_7762 = relay.var("var_7762", dtype = "float64", shape = (7, 2, 4))#candidate|7762|(7, 2, 4)|var|float64
output = func_7761(var_7762)
func_7763 = relay.Function([var_7762], output)
mutated_mod['func_7763'] = func_7763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_7806 = relay.TupleGetItem(func_4277_call(), 1)
call_7807 = relay.TupleGetItem(func_4278_call(), 1)
output = call_7806
output2 = call_7807
func_7855 = relay.Function([], output)
mod['func_7855'] = func_7855
mod = relay.transform.InferType()(mod)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7855_call = mutated_mod.get_global_var('func_7855')
call_7856 = func_7855_call()
output = call_7856
func_7857 = relay.Function([], output)
mutated_mod['func_7857'] = func_7857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_7879 = func_5995_call()
call_7880 = func_5995_call()
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_7884 = relay.TupleGetItem(func_5085_call(), 1)
call_7885 = relay.TupleGetItem(func_5086_call(), 1)
func_6825_call = mod.get_global_var('func_6825')
func_6828_call = mutated_mod.get_global_var('func_6828')
call_7891 = relay.TupleGetItem(func_6825_call(relay.reshape(call_7884.astype('uint64'), [832,])), 1)
call_7892 = relay.TupleGetItem(func_6828_call(relay.reshape(call_7884.astype('uint64'), [832,])), 1)
output = relay.Tuple([call_7879,call_7884,call_7891,])
output2 = relay.Tuple([call_7880,call_7885,call_7892,])
func_7897 = relay.Function([], output)
mod['func_7897'] = func_7897
mod = relay.transform.InferType()(mod)
mutated_mod['func_7897'] = func_7897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mutated_mod.get_global_var('func_7897')
call_7898 = func_7897_call()
output = call_7898
func_7899 = relay.Function([], output)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7641_call = mod.get_global_var('func_7641')
func_7643_call = mutated_mod.get_global_var('func_7643')
call_7932 = relay.TupleGetItem(func_7641_call(), 0)
call_7933 = relay.TupleGetItem(func_7643_call(), 0)
output = relay.Tuple([call_7932,])
output2 = relay.Tuple([call_7933,])
func_7962 = relay.Function([], output)
mod['func_7962'] = func_7962
mod = relay.transform.InferType()(mod)
mutated_mod['func_7962'] = func_7962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7962_call = mutated_mod.get_global_var('func_7962')
call_7963 = func_7962_call()
output = call_7963
func_7964 = relay.Function([], output)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_7965 = func_3267_call()
call_7966 = func_3267_call()
uop_7975 = relay.atan(call_7965.astype('float32')) # shape=(4, 1, 3)
uop_7977 = relay.atan(call_7966.astype('float32')) # shape=(4, 1, 3)
output = uop_7975
output2 = uop_7977
func_7982 = relay.Function([], output)
mod['func_7982'] = func_7982
mod = relay.transform.InferType()(mod)
output = func_7982()
func_7983 = relay.Function([], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7342_call = mod.get_global_var('func_7342')
func_7344_call = mutated_mod.get_global_var('func_7344')
call_8078 = relay.TupleGetItem(func_7342_call(), 0)
call_8079 = relay.TupleGetItem(func_7344_call(), 0)
func_6658_call = mod.get_global_var('func_6658')
func_6662_call = mutated_mod.get_global_var('func_6662')
var_8081 = relay.var("var_8081", dtype = "float32", shape = (14,))#candidate|8081|(14,)|var|float32
var_8082 = relay.var("var_8082", dtype = "float32", shape = (154,))#candidate|8082|(154,)|var|float32
call_8080 = relay.TupleGetItem(func_6658_call(relay.reshape(var_8081.astype('float32'), [1, 2, 7]), relay.reshape(var_8082.astype('float32'), [11, 2, 7]), ), 0)
call_8083 = relay.TupleGetItem(func_6662_call(relay.reshape(var_8081.astype('float32'), [1, 2, 7]), relay.reshape(var_8082.astype('float32'), [11, 2, 7]), ), 0)
output = relay.Tuple([call_8078,call_8080,var_8081,var_8082,])
output2 = relay.Tuple([call_8079,call_8083,var_8081,var_8082,])
func_8087 = relay.Function([var_8081,var_8082,], output)
mod['func_8087'] = func_8087
mod = relay.transform.InferType()(mod)
var_8088 = relay.var("var_8088", dtype = "float32", shape = (14,))#candidate|8088|(14,)|var|float32
var_8089 = relay.var("var_8089", dtype = "float32", shape = (154,))#candidate|8089|(154,)|var|float32
output = func_8087(var_8088,var_8089,)
func_8090 = relay.Function([var_8088,var_8089,], output)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_8101 = relay.TupleGetItem(func_4240_call(), 0)
call_8102 = relay.TupleGetItem(func_4241_call(), 0)
output = call_8101
output2 = call_8102
func_8106 = relay.Function([], output)
mod['func_8106'] = func_8106
mod = relay.transform.InferType()(mod)
output = func_8106()
func_8107 = relay.Function([], output)
mutated_mod['func_8107'] = func_8107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6677_call = mod.get_global_var('func_6677')
func_6678_call = mutated_mod.get_global_var('func_6678')
call_8108 = relay.TupleGetItem(func_6677_call(), 0)
call_8109 = relay.TupleGetItem(func_6678_call(), 0)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_8116 = func_4406_call()
call_8117 = func_4406_call()
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
var_8121 = relay.var("var_8121", dtype = "uint64", shape = (1008, 1))#candidate|8121|(1008, 1)|var|uint64
var_8122 = relay.var("var_8122", dtype = "bool", shape = (1, 520))#candidate|8122|(1, 520)|var|bool
call_8120 = relay.TupleGetItem(func_2941_call(relay.reshape(var_8121.astype('uint64'), [1008,]), relay.reshape(var_8122.astype('bool'), [520,]), ), 4)
call_8123 = relay.TupleGetItem(func_2944_call(relay.reshape(var_8121.astype('uint64'), [1008,]), relay.reshape(var_8122.astype('bool'), [520,]), ), 4)
output = relay.Tuple([call_8108,call_8116,call_8120,var_8121,var_8122,])
output2 = relay.Tuple([call_8109,call_8117,call_8123,var_8121,var_8122,])
func_8133 = relay.Function([var_8121,var_8122,], output)
mod['func_8133'] = func_8133
mod = relay.transform.InferType()(mod)
var_8134 = relay.var("var_8134", dtype = "uint64", shape = (1008, 1))#candidate|8134|(1008, 1)|var|uint64
var_8135 = relay.var("var_8135", dtype = "bool", shape = (1, 520))#candidate|8135|(1, 520)|var|bool
output = func_8133(var_8134,var_8135,)
func_8136 = relay.Function([var_8134,var_8135,], output)
mutated_mod['func_8136'] = func_8136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_8138 = func_3267_call()
call_8139 = func_3267_call()
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_8164 = relay.TupleGetItem(func_5033_call(), 2)
call_8165 = relay.TupleGetItem(func_5035_call(), 2)
output = relay.Tuple([call_8138,call_8164,])
output2 = relay.Tuple([call_8139,call_8165,])
func_8180 = relay.Function([], output)
mod['func_8180'] = func_8180
mod = relay.transform.InferType()(mod)
output = func_8180()
func_8181 = relay.Function([], output)
mutated_mod['func_8181'] = func_8181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7560_call = mod.get_global_var('func_7560')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_8207 = relay.TupleGetItem(func_7560_call(), 0)
call_8208 = relay.TupleGetItem(func_7561_call(), 0)
func_5721_call = mod.get_global_var('func_5721')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_8210 = relay.TupleGetItem(func_5721_call(), 0)
call_8211 = relay.TupleGetItem(func_5723_call(), 0)
output = relay.Tuple([call_8207,call_8210,])
output2 = relay.Tuple([call_8208,call_8211,])
func_8224 = relay.Function([], output)
mod['func_8224'] = func_8224
mod = relay.transform.InferType()(mod)
output = func_8224()
func_8225 = relay.Function([], output)
mutated_mod['func_8225'] = func_8225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_8243 = func_4406_call()
call_8244 = func_4406_call()
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_8264 = relay.TupleGetItem(func_6860_call(), 1)
call_8265 = relay.TupleGetItem(func_6862_call(), 1)
func_4934_call = mod.get_global_var('func_4934')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_8266 = func_4934_call()
call_8267 = func_4934_call()
func_3958_call = mod.get_global_var('func_3958')
func_3962_call = mutated_mod.get_global_var('func_3962')
const_8286 = relay.const([[9.255822,4.706891,-0.063930,2.095088,0.596763,6.957034,-3.272310,-8.322712,6.157261,9.913464,-7.780040,8.701285,2.515687,1.370183,3.870594,0.153274,-7.695885,2.662573,0.366638,-6.293149,-0.781217,5.680614,1.863812,9.178645,-4.898921,-4.403112,-4.684197,-6.830985,-2.446083,-9.258890,-7.712802,7.885122,-3.301259,6.206927,0.848117,-9.676736,1.772476,5.312901,5.995821,9.628894,2.580897,-4.006128,-7.197302,7.753008,-2.892199,-0.766134,3.131263,-6.196900,-1.887296,0.992043,6.774939,0.481464,1.215576,-0.169831,4.618013,-0.611555,3.381060,0.864928,1.215889,-6.478577,-8.350595,-6.158109,-7.408251,0.663236,-8.808812,9.354178,-8.354840,-7.734789,2.130408,2.215625,4.846196,7.940673,-3.962900,-2.977631,-9.644130,-9.471445,9.512803,-2.429015,3.564437,-1.086586,0.477417,2.470155,-8.284629,7.150159,-9.214053,3.090556,9.298278,-6.693216,3.123027,8.673179,-8.112571,-3.419981,1.022923,2.277208,-1.212522,-1.907752,6.548200,0.797907,-2.767599,9.351325,1.391854,-9.041220,-3.549019,2.872160,9.879902,5.959913,-7.037977,3.346881,-5.704023,-3.863440,-8.402534,-1.869968,-3.716732,1.591283,6.049641,-3.934043,7.928305,4.688252,8.677875,2.084441,1.126574,-7.863335,-4.360304,4.784351,5.733375,9.179859,3.718110,0.403709,-4.275245,-0.217201,-2.385976,-4.860154,0.204418,6.698839,-0.836135,6.573380,3.032600,9.111859,6.559324,-7.087235,-5.830860,-8.506327,-7.336047,-9.079530,-1.561896,-8.679940,1.048574,7.726710,-8.339819,5.529603,1.645113,-8.116014,8.906667,2.401014,8.012375,6.246076,6.298544,2.976620,2.604169,-8.515275,-7.442766,-7.304029,-7.144651,-5.847018,-4.821617,8.115000,-2.022056,-4.052549,-9.900382,-5.871577,-3.149343,1.972193,2.184428,4.123970,-4.054139,-5.670639,-1.825533,-4.304294,-8.820193,3.103308,5.591431,2.715458,-7.423073,9.470057,4.067910,-6.604122,7.187799,8.063304,-1.396903,0.933414,7.037242,5.012628,3.252356,-0.907037,-4.767130,-1.278465,-0.633519,4.937488,-0.668080,4.057155,-2.796822,8.973693,-1.146625,-7.026146,2.372469,3.473654,-0.376994,-1.263904,6.268903,8.673556,-9.823017,7.006728,8.953172,9.656140,9.367254,5.444645,6.281559,3.123663,-2.749211,-5.527894,9.521291,-3.457203,1.625811,6.244332,4.190393,-4.891091,2.750570,-6.419107,2.172036,-7.475687,8.414511,-2.263582,-0.949412,-5.857951,-5.406728,-2.987821,-4.780224,7.661596,0.331609,-7.624048,8.254003,-1.660910,-4.499638,-1.918969,-9.863680,-6.641570,-9.622056,-9.535106,-4.825276,1.736568,-0.954495,3.212437,-2.309718,-4.361739,9.058907,-8.406034,8.051435,7.716961,-6.712957,8.973323,-8.518096,-7.348283,9.929967,5.583590,2.479165,-1.355224,-7.696594,-1.702687,-8.603600,-5.832545,-7.342206,-0.169182,7.066744,3.390399,4.780010,8.885027,2.701254,0.990629,-0.258812,-1.941721,6.151216,0.575806,-3.008505,7.618377,-2.520571,5.488661,-4.389524,7.713429,7.616129,5.828429,5.429932,4.779064,-7.229090,3.591869,1.473209,-4.002935,-3.375182,9.173007,-1.049713,8.923306,-8.607952,0.120133,3.424130,3.464180,7.117807,8.447129,8.689071,9.322327,9.429945,-6.800668,0.725281,-8.684352,3.418450,-9.401082,-5.620710,-2.185475,-1.035176,7.960700,-2.973506,4.145566,-2.282046,5.837404,1.546495,9.686439,4.447803,8.928724,5.537734,9.585196,5.566921,-4.375378,6.477672,6.020736,-8.636855,8.989717,2.689271,-4.994471,-7.109793,9.594881,6.993904,-0.163408,-3.896242,8.505300,1.925731,-2.945112,-1.221056,-5.747893,-4.261900,-7.211319,9.154092,3.999279,-0.025751,-3.045574,2.509292,-5.991212,-1.127523,-4.925992,-3.458558,-3.312904,-9.865440,6.390346,0.618496,-1.378564,5.625567,-5.972967,0.714879,7.529979,-0.797183,-5.649701,1.022009,-6.178856,3.350654,-6.216788,-9.306583,-0.336776,-3.380693,1.268031,2.900207,0.082576,-6.871050,3.731874,4.957407,2.184331,-1.811139,-5.289136,-3.898815,-2.204381,3.663209,-1.666128,4.130347,-5.722400,-6.124609,-8.594685,5.110108,-4.349091,5.646078,1.661674,-0.710464,-1.336900,-6.788654,-1.146093,3.468893,5.535797,2.919510,-4.076903,-7.476896,-8.686596,0.764222,-5.912329,-8.348980,-1.677159,5.198485,4.857324,5.778662,-8.653381,-3.779798,-1.531560,6.988423,-3.412230,0.394417,-7.046747,0.666506,-1.458508,9.877655,5.787572,0.390104,0.125407,-5.403031,-2.298289,9.599366,6.730272,9.918028,3.569304,0.464865,-5.508530,1.185639,-5.947355,3.717665,0.189571,-9.628919,4.185397,-0.720768,-0.900117,2.242962,-3.154332,1.459296,-3.339976,-7.095318,-5.160652,7.074862,-2.048615,1.087512,0.216311,-7.649271,1.808154,3.045168,-7.125118,1.912222,-9.681266,-2.196125,0.170387,1.755322,-5.414482,-2.362892,0.744536,4.207741,-5.631995,7.656085,-3.215401,-5.567600,-0.665635,-9.824289,0.606143,7.650614,-0.839267,0.446470,9.597532,5.282263,-8.426080,-6.689157,9.020099,4.456026,-6.967419,8.307533,-8.896798,-2.791500,7.177944,-6.470012,4.100607,1.591056,6.376771,1.497303,8.162844,-3.654164,-5.321440,4.919690,1.992776,5.124244,5.563771,-1.917632,-6.007576,-9.417446,7.219860,5.577579,-7.961684,-9.022172,3.842688,4.643237,-2.575240,-7.501668,-4.792981,-5.875791,-4.358604,-3.833872,-7.213797,-0.824435,2.674234,-9.195083,5.509922,3.758817,-9.535869,3.138518,-3.678152,-7.680580,-5.027865,8.056049,3.073547,-9.366180,-1.666082,9.659627,3.951501,6.684211,5.657333,9.339499,5.003458,-1.938061,-7.085452,5.977707,-0.172547,6.112074,-2.147649,-9.110525,-3.283857,-2.651459,5.679544,3.287599,0.690316,5.814435,9.323736,0.347570,-6.915246,-7.826622,2.124862,3.791484,-4.007786,-6.520591,5.375897,-5.661898,-3.215106,-7.145684,-1.295851,-2.580304,7.157048,-4.405377,3.149518,2.540167,-3.479790,-8.806558,-6.065560,0.857207,1.935507,2.120504,-9.568099,-2.234671,-1.154139,-5.195638,4.757383,-7.762388,2.277707,6.129367,-6.742550,-6.907981,-4.775397,-6.397234,-1.438334,3.963291,-3.477460,-4.658876,-4.531619,9.221074,-2.247509,-4.724909,-1.618215,-7.847870,0.232178,-6.955783,-3.838880,-0.605553,-9.748152,0.309017,5.167087,-4.283308,-9.681107,-2.486551,0.468815,9.111268,-6.791626,5.256811,7.354977,-4.605804,1.017164,-9.219826,6.459809,4.641237,-9.455351,-9.785163,2.702196,1.277307,9.266201,0.085165,6.829689,-0.023477,-5.172697,-5.902803,7.407797,-3.847665,-9.663807,3.772574,-9.291301,9.650793,8.555893,-0.519185,-2.881937,-2.120031,2.014924,-7.774436,5.976878,-8.862887,4.856726,9.214126,8.962621,7.428151,-7.049638,7.327223,1.310408,1.140033,-4.776497,-1.858035,2.921068,6.165910,-3.488976,8.605688,-2.556343,1.705676,0.477335,9.874978,-9.697561,-5.967707,1.556126,3.201839,-9.449802,0.302348,-4.257879,5.829641,0.572055,0.761120,-8.718818,9.454089,-1.601023,-4.058743,6.432594,1.221309,8.782227,-8.029225,4.727153,4.254038,7.599072,4.266097,-3.745001,0.853376,1.102314,5.566255,-2.293051,-4.528741,0.266190,-2.317075,-6.667598,2.406384,1.883789,-3.787882,5.371479,-4.964151,3.783112,1.413088,-0.986930,2.271578,3.134384,0.335490,6.532760,-5.589563,1.452016,7.383250,-0.999308,9.091282,-5.599742,9.645034,3.725722,-7.211341,3.077873,5.136706,9.409685,6.131627,6.552549,-7.362003,-2.968079,-5.075478,2.617350,-0.340769,-2.773602,9.991509,9.464028,-3.654358,-6.694614,4.347115,-7.094048,6.108109,9.001421,-1.559095,8.249509,4.235692,-5.203337,1.046227,1.368137,1.751662,0.508123,6.583175,9.342256,-5.251961,-1.125017,2.111558,-0.121441,-4.307849,0.807927,-6.587272,0.773183,2.019215,8.518006,7.200585,-8.516203,-4.339541,9.521175,-1.404645,-5.784589,-3.512720,2.962714,5.723099,-9.089614,9.434842,3.238521,4.042634,-1.949498,-1.273604,0.361865,-2.606758,-7.454086,-9.465395,-1.614560,0.723379,4.228863,-8.888627,3.156158,-8.425762,7.181825,-4.353801,2.423493,-8.493325,-8.866413,-5.113251,-0.378410,0.075768,3.894114,4.327018,-9.839560,-6.108575,-3.745125,-9.255638,6.038636,-6.459349,6.189132,0.161898,-4.833280,-6.878877,-5.318329,-3.751154,6.114498,3.679522,8.592247,9.725290,4.789154,2.029695,-8.252273,-8.875061,-0.900070,-0.139316,2.373841,4.902646,2.542469,-6.357836,-0.366392,4.978314,-0.238513,-8.855461,4.289152,1.555322,-4.234896,-0.319522,5.172959,-9.728413,2.734490,7.895781,-4.840208,-5.421669,-2.182726,2.440534,-3.334012,-8.020807,2.402726,-6.262474,-2.759535,-0.766977,0.599767,3.627844,1.385627,-9.329543,9.616616,1.775644,-3.889443,9.295184,-0.266175,4.353785,5.778275,3.703028,8.045902,3.342034,8.903881,-9.789814,6.336697,5.984062,2.081451,3.841447,9.788036,-0.756998,1.647487,-7.311833,-5.488237,-8.871210,-4.793365,-2.372082,5.339563,7.888045,4.386821,5.001004,-0.158253,8.849887,7.373960,-5.161682,2.292095,-2.602358,-7.100218,-6.576879,2.329395,9.120798,-7.144997,8.239680,7.592524,5.301540,-7.781304,5.742207,7.106119,-3.877659,-6.680909,-5.540754,5.802392,-7.594282,3.152839,-4.738523,9.361606,-0.699821,8.370957,5.739617,0.040052,-6.865708,-4.220620,-3.993211,-4.732521,-2.053049,7.085957,6.542383,5.830716,-4.480728,-3.480406,2.149907,-5.495342,-1.432049,0.501109,6.717280,-1.671749,-4.249284,4.504092,-8.157235,7.748684,-9.366942,9.395940,0.192013,5.872176,-7.678375,-5.111516,2.425980,6.521140,1.601277,-0.283407,0.916249,-6.434330,4.869321,-6.172482,5.042753,-1.454489,-1.279405,3.075024,-9.979392,-3.094739,9.186571,9.008363,2.540102,-0.591210,1.470656,7.947650,6.005959,9.773563,-5.580017,-1.926947,9.427475,6.182624,3.810329,-0.280521,-3.029865,-4.322423,6.334034,-7.779149,-8.297278,5.123909,4.040722,9.827156,-8.839344,8.071593,-4.901941,4.446066,-3.548969,-8.423921,8.302395,-3.727642,6.710825,6.618232,-0.589406,0.266709,-8.996735,-8.053416,-0.822963,-7.291764,-1.980169,4.946035,-6.488713,2.198099,6.334905,-0.403068,-8.745096,-0.401201,4.793199,-1.892752,-3.306161,-8.498201,9.328447,-7.752395,-0.436675,-4.351609,7.687053,-4.166754,-6.530435,-2.038020,8.223038,5.384880,6.097306,2.391289,7.771722,-6.571395,3.933122,0.656098,-2.905725,-9.937570,-8.432215,3.683478,-8.906085,6.175652,8.852292,7.785023,-9.892682,-4.043627,-2.471402,-1.066582,-2.833155,5.979402,-4.676674,-8.908776,4.985573,7.915353,3.751619,3.580175,-8.480705,3.571070,-7.062693,-8.884510,6.209255,1.396738,-9.679164,3.485158,-9.749352,9.795379,4.403854,6.285898,-3.808019,2.898290,-6.324731,-8.762811,1.365837,-0.131923,-1.639459,3.796983,-7.268775,8.390478,-9.073254,6.514154,-1.462627,3.904545,-7.819780,-6.728876,-3.100800,-1.125644,-1.681176,9.643393,-8.743126,8.937288,1.121120,-5.071217,8.416558,-3.106826,7.139788,3.462343,-0.128466,6.712319,8.181093,-4.657713,3.058990,-7.696880,6.571517,-8.361234,-3.789301,-3.262731,-4.155466,6.549844,-5.644506,8.978090,5.027061,4.496375,-8.516613,-1.876667,-2.397911,9.973844,8.147028,8.495430,5.021235,1.185351,-4.627347,2.101038,-3.193058,-6.753659,3.839444,-8.525175,-3.482133,-5.208919,9.511500,4.662125,1.936402,3.858639,-0.164729,1.100610,-1.711841,2.477700,-1.069149,1.861622,0.591970,-7.261790,-4.584254,1.808646,-7.451617,6.154689,-7.833367,-3.894177,6.946228,7.032237,-3.034234,0.662694,6.416367,9.833389,-9.617017,-0.591095,4.210684,-6.036319,-3.464609,-7.118847,6.530723,-7.460822,-4.460850,-9.901482,-0.719203,-4.617444,-3.193108,-1.845345,-8.199997,-4.212748,-5.123424,6.610533,9.671686,0.714962,7.083237,-0.195988,6.594169,1.793257,2.685745,6.133355,1.788012,1.909191,-1.037952,1.906480,8.433155,3.466094,-3.874355,0.712467,-2.285177,5.216818,6.698399,-2.297101,-2.329112,-7.303203,8.999283,-8.687022,6.970222,1.821399,8.281774,5.996430,-3.063591,-5.768260,0.464260,-6.613604,9.435368,2.987032,8.193322,9.126979,5.684237,-4.782135,-4.152631,3.417299,-9.099022,2.620793,7.574209,-5.501737,2.060164,5.103134,7.130922,-6.301943,3.741432,1.680542,4.360099,3.981222,-2.050108,-4.924301,-0.967193,9.626302,-7.677208,-1.119990,3.485493,8.459951,6.090334,2.450377,-4.966781,2.486890,9.390849,-3.197491,-0.590466,-3.219293,1.376616,9.963497,-4.235604,-7.410841,4.742896,7.439506,-2.570173,7.097958,4.763005,-5.678730,-6.268438,4.741972,-6.823310,-9.586868,6.913225,7.843663,3.004655,-3.326983,3.757155,-7.863565,7.511224,4.401420,-0.839397,-0.295020,4.207029,4.859969,-9.755874,-0.817859,8.237810,1.224247,0.852926,7.706217,0.001202,-8.156341,8.536092,3.527234,-5.780760,-2.711429,4.416311,-0.720930,6.331348,-5.555208,5.411143,-8.499536,-8.342396,4.841228,-9.268304,-1.975575,7.987701,8.624595,-8.389592,9.642199,4.045016,6.545191,-3.562419,-9.741190,-8.678088,-7.519798,1.701386,-6.947225,-0.125962,9.423726,-8.892145,1.359576,-2.006922,-0.732281,7.737993,-9.145129,8.451413,-0.275679,5.880938,8.939303,1.495446,3.972157,-3.931417,-9.394699,-9.429234,-8.650986,-4.424667,-9.145654,-1.200212,7.323651,-7.069315,-5.274023,4.628546,-7.813628,5.535815,-8.976701,6.186590,7.049493,0.313194,-0.580005,5.239816,8.507853,-4.949912,1.858916,-2.673069,0.715549,-5.290779,1.717582,-0.730771,-1.705275,6.318301,-5.360326,7.247980,2.968953,-1.031565,-9.243405,-2.007655,3.487747,2.905879,4.604526,8.972569,-7.355823,-7.253799,0.970517,9.170015,8.811984,0.494586,2.286508,9.740464,6.485888,1.018083,-0.196236,0.455315,-4.726851,-0.486190,4.045388,-5.434446,2.975680,2.062909,1.713552,-7.619410,4.512017,2.984803,-1.059074,6.492371,-8.831816,5.592967,-0.595747,-9.555619,2.783344,-1.952888,-0.044117,3.117349,-3.504676,-8.266702,6.346187,-4.772238,-1.452182,-6.683594,-3.528928,7.042755,-4.413756,9.121226,0.533487,1.129774,-4.900901,3.502888,2.579297,-3.366717,5.713654,6.435289,-2.471738,-4.564441,5.137540,4.996504,-0.614491,-2.151769,-5.287225,-3.127745,6.672366,-1.856800,7.803884,-6.049442,-7.704317,-6.812292,-3.969908,3.329939,7.323107,1.980099,-1.407298,5.769392,2.916840,4.902767,7.989143,-4.601875,0.483074,9.811825,-3.915262,0.304512,-7.786340,1.480694,-2.275382,2.842665,-0.966393,-8.477511,-9.838032,4.569276,-5.317940,0.423028,-7.290107,-8.322297,-9.483917,4.576304,-7.081262,-0.039808,-1.809606,4.418616,-6.300864,1.293319,8.685349,7.459150,9.835144,-4.026853,7.123798,2.194903,0.863926,6.292109,3.608624,-6.050557,-3.172888,0.901840,-8.941876,2.158627,1.166521,0.948060,-6.211542,-8.566144,-8.193621,7.517418,-6.400315,2.293151,0.739087,-7.452705,9.462469,-5.022064,0.161345,6.978679,-4.982142,-3.297771,3.038817,-2.969568,-1.218020,6.376884,0.517017,-9.346306,4.795843,6.976024,-0.635001,-9.260294,8.354508,7.887615,-8.278111,-6.399039,2.653194,-0.499079,6.400135,2.969423,-0.712103,-9.819023,1.585204,9.098125,-2.587998,3.592027,-2.120874,2.349379,-3.608098,-4.964131,5.897198,8.764128,4.642372,9.553869,5.345655,-9.923653,6.866637,3.608642,9.388640,7.354810,-9.554957,5.079953,-1.176886,-9.684566,9.377363,6.341003,4.093946,-9.056482,9.575996,3.415427,-6.194355,-0.283237,-3.065308,-9.264423,-1.351709,-3.582176,9.662705,-9.917869,-1.594075,-8.304736,4.865085,-2.042535,4.690456,-2.318385,-4.663462,7.079927,5.419401,-8.675920,3.538163,-6.858581,-0.195909,-9.251662,-8.691377,-1.865770,8.417050,-5.591488,-3.674303,-6.476980,8.489800,-3.701357,-8.861909,-3.589608,7.688219,-1.766955,-3.470559,6.762856,7.448269,-0.791753,-9.376178,-3.964965,7.895519,-3.118630,3.185571,2.736851,0.406926,-5.692386,5.373380,-2.331522,1.327108,-8.288683,6.898906,-4.564049,4.949436]], dtype = "float64")#candidate|8286|(1, 1540)|const|float64
var_8287 = relay.var("var_8287", dtype = "bool", shape = (520,))#candidate|8287|(520,)|var|bool
call_8285 = relay.TupleGetItem(func_3958_call(relay.reshape(const_8286.astype('float64'), [1540,]), relay.reshape(var_8287.astype('bool'), [520,]), ), 6)
call_8288 = relay.TupleGetItem(func_3962_call(relay.reshape(const_8286.astype('float64'), [1540,]), relay.reshape(var_8287.astype('bool'), [520,]), ), 6)
output = relay.Tuple([call_8243,call_8264,call_8266,call_8285,const_8286,var_8287,])
output2 = relay.Tuple([call_8244,call_8265,call_8267,call_8288,const_8286,var_8287,])
func_8294 = relay.Function([var_8287,], output)
mod['func_8294'] = func_8294
mod = relay.transform.InferType()(mod)
mutated_mod['func_8294'] = func_8294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8295 = relay.var("var_8295", dtype = "bool", shape = (520,))#candidate|8295|(520,)|var|bool
func_8294_call = mutated_mod.get_global_var('func_8294')
call_8296 = func_8294_call(var_8295)
output = call_8296
func_8297 = relay.Function([var_8295], output)
mutated_mod['func_8297'] = func_8297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_8301 = relay.TupleGetItem(func_8224_call(), 0)
call_8302 = relay.TupleGetItem(func_8225_call(), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_8307 = relay.TupleGetItem(func_5485_call(), 0)
call_8308 = relay.TupleGetItem(func_5487_call(), 0)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_8315 = relay.const([[5.181140,8.454972],[-0.134154,5.767655],[0.193486,9.666520],[-9.641273,-5.869180],[3.644373,-3.498268],[5.707430,8.847589],[6.638963,6.956311],[-6.882073,-5.808243],[8.152588,-8.613279],[1.342734,-6.362561],[7.296847,7.474576],[1.909837,-4.503955],[-3.167665,9.190547],[0.277749,6.075516],[2.196166,-9.478234],[-6.318812,-8.364061],[1.814641,-4.294589],[-8.504780,9.865059],[-3.712680,4.455028],[8.885455,-1.961084],[8.477716,2.228014],[-1.028671,1.748321],[9.411883,-3.115436],[-9.557175,6.725084],[4.784761,-7.802103],[-9.585362,4.724738],[-7.808554,-1.413562],[1.090375,-8.075790],[-6.926505,2.297908],[-2.670141,2.142904],[-2.987200,3.449639],[-4.527016,-6.385091],[-7.740293,7.553387],[9.281227,-5.523980],[1.423047,7.818548],[6.764769,9.433844],[2.502648,1.781757],[8.142904,4.586003],[-4.294275,-8.087543],[6.121979,-1.476994],[5.428178,-4.074814],[4.016827,5.873195],[8.780028,3.824515],[-0.939209,7.528508],[0.002186,6.798378],[4.197266,-8.570924],[2.822756,-6.306364],[-6.358079,2.745170],[-7.462863,-2.204317],[-4.919575,-6.727597],[-7.509795,-8.012500],[0.934829,-1.953960],[-2.697590,1.195709],[-8.077345,1.484186],[8.028875,-5.868848],[5.358415,7.367964],[0.415806,5.119976],[0.148346,7.092518],[1.081699,-3.256338],[2.198951,6.800550],[-3.171734,1.954480],[-1.424460,2.473676],[-8.164970,4.732755],[6.562982,4.590551],[-0.864812,-8.858495],[0.054774,1.870830],[7.534639,0.877632],[-9.429559,0.571073],[1.078775,2.160683],[4.670998,4.585742],[-1.525905,2.979457],[-2.867325,-6.333687],[3.572913,-1.078467],[5.808932,9.688025],[-3.500819,9.205241],[8.749812,6.141604],[-8.466715,7.080694],[5.578494,5.597705],[4.622808,0.670002],[-6.754815,2.991718],[-9.069313,-8.888847],[1.833986,1.691124],[-1.565533,1.629786],[1.128129,-4.278682],[7.507779,1.417934],[6.391316,3.518504],[-3.837237,-2.030093],[-7.692946,-1.445128],[0.912397,-8.453349],[7.015696,-3.623124],[7.612774,3.318651],[2.118548,-8.622926],[3.861935,4.388779],[-4.006269,-9.993893],[-7.283511,1.800585],[-9.585698,8.150685],[-5.818803,-2.287934],[7.934576,4.391629],[-7.586435,1.657931],[8.004155,2.248768],[-6.344337,8.395855],[9.339388,4.412125],[-9.846074,-3.918803],[-1.053183,-4.132120],[-6.371290,-9.756410],[-3.379575,-7.274152],[7.968246,-0.843907],[7.828708,6.532297],[-5.259716,-9.118827],[-9.262029,4.732432],[6.794041,6.340756],[-2.974888,-0.302767],[9.246378,-5.873273],[1.217708,-1.999377],[5.349359,2.396455],[-0.769453,-2.970738],[3.087717,-4.076993],[-9.152705,-8.225970],[-4.429262,7.487004],[4.103954,3.821918],[9.317371,-4.589946],[-1.101834,2.857594],[4.403618,-6.852054],[8.450041,6.955434],[1.867416,3.273381],[4.130173,6.358843],[8.695672,-5.270285],[7.047731,8.248329],[-9.270627,5.332369],[3.583699,-9.178843],[3.267218,-8.646732],[2.700430,8.847112],[-8.593510,-7.418801],[-0.409010,8.102984],[-5.704859,-4.181043],[5.287005,-0.173957],[-1.335352,-3.915003],[-4.090303,-0.006884],[1.840339,5.945233],[-5.864848,1.191057],[4.196653,7.369666],[-0.587149,8.838188],[-6.773315,-6.945522],[-8.576218,2.369444],[-1.371320,-1.732471],[-0.058118,-8.262172],[1.391803,-9.158434],[-4.857822,-5.045103],[8.409379,3.187280],[-4.714386,1.715267],[-8.663268,-3.106489],[-0.893411,8.413359],[1.541079,-6.615986],[9.295950,4.081354],[-0.689746,-5.710637],[-0.141052,-1.255695],[-3.015115,6.423056],[-7.700630,-5.621110],[-4.345446,3.753985],[-8.195886,6.871043],[-6.502389,-4.300402],[-6.749177,0.355132],[1.448735,5.921185],[-6.958136,-5.393033],[3.787685,-8.267872],[-7.040727,-7.540608],[0.361005,6.179900],[1.452825,-2.015686],[-9.931340,3.581445],[-2.016497,3.795994],[-5.850583,3.902968],[-2.745964,-2.770556],[6.071211,-4.212780],[3.117678,-7.450624],[-6.306526,-2.751932],[-0.391578,-9.950901],[9.669548,1.997536],[-7.190349,-1.038102],[8.170535,0.018373],[7.731428,4.701589],[-4.526812,-7.113857],[0.595669,8.332559],[-5.219354,1.957634],[-6.250784,-8.165090],[4.681180,8.268512],[-4.754579,-1.126175],[-1.924084,-4.042958],[1.653240,-2.933494],[5.865869,4.363623],[-1.690335,-8.112276],[4.755103,2.080479],[9.856007,8.997319],[-8.072336,-8.425555],[-9.731891,-3.960103],[5.397777,-7.332128],[3.891155,-3.512636],[2.132631,0.023425],[-2.966292,6.293290],[3.135226,8.299484],[-8.741111,3.783133],[-6.678404,8.041156],[-7.541850,2.563653],[-2.339740,3.132934],[-5.534108,-6.206675],[9.638782,7.870571],[-0.970982,0.760653],[-1.313731,-8.176638],[-3.368972,9.319734],[-6.608891,9.869044],[-5.519501,-3.561501],[4.047242,-9.538349],[0.682520,9.604038],[-3.973851,7.420365],[3.579721,-4.070681],[6.998747,-1.934682],[-3.710450,-2.389984],[7.630302,-5.601218],[-8.272655,-6.130333],[-7.267517,-6.102731],[-3.974317,-2.095759],[-1.110255,0.361654],[0.636506,8.487651],[-4.580876,-2.132685],[3.067733,5.539072],[-6.174598,7.598678],[-0.488813,-4.544886],[-0.674356,0.893583],[8.133873,-7.125113],[4.969829,2.232748],[1.731412,5.839004],[3.078050,8.373746],[9.337920,7.455264],[-3.820576,-8.042407],[-1.617158,9.025457],[6.010039,2.977908],[-9.747824,1.557282],[7.657080,-4.777814],[4.362044,7.733037],[9.202511,-5.009237],[6.821890,5.991286],[-2.430572,0.926471],[-7.658872,4.489328],[6.455257,-2.369100],[-4.978843,1.561317],[1.932400,3.494084],[7.356445,9.690300],[3.175076,6.879064],[2.674407,-6.966519],[2.396812,-3.587870],[-2.703390,0.503072],[5.410707,0.113856],[9.109586,5.414319],[3.426656,-5.726164],[1.798016,4.097754],[4.290836,-2.093509],[9.531706,-6.667987],[-2.874398,4.822525],[-2.234737,-4.148360],[-1.259540,-8.262142],[-2.537881,-8.081315],[-6.213859,-5.975188],[-0.594477,-1.853233],[3.447531,-6.592568],[7.739716,8.998575],[-6.125044,-1.995776],[7.027168,-5.723647],[-3.623466,-2.163982],[-8.218692,-3.531353],[1.311620,5.926803],[1.471540,5.551956],[-0.637882,2.220775],[-7.285518,5.150952],[8.909223,1.300305],[-9.497643,2.446279],[-6.933857,4.921387],[-1.226081,3.040934],[-2.665905,-6.876189],[-1.381371,-7.303075],[9.146298,-8.525723],[-4.064716,-5.492791],[8.241880,6.941145],[2.076280,5.780910],[-1.233568,2.028583],[-2.013896,-0.577183],[4.252541,-2.604706],[-1.624520,-5.170931],[6.127165,9.046025],[-8.522440,4.504235],[3.355534,5.238347],[5.634416,6.419190],[5.048843,2.134170],[7.039601,-0.259396],[-9.073826,5.863421],[-7.809623,-4.920051],[-6.569030,8.394501],[-1.542828,2.115681],[6.299164,-5.946842],[9.454278,-8.592844],[-7.932431,-7.417562],[8.003352,-5.613427],[-8.337560,-9.248061],[3.214717,-3.685515],[-3.792481,-7.024022],[-1.597659,0.732835],[-9.039084,0.780821],[8.903564,-1.830842],[1.895489,1.817316],[-8.470225,-1.318274],[9.116212,1.616756],[7.242403,3.426893],[3.056350,-2.117969],[2.104502,-5.753072],[-2.544175,5.665593],[1.557256,4.869664],[-0.370424,-4.664850],[0.365786,8.741185],[3.873765,6.513503],[-6.438145,2.365999],[4.865668,-4.964591],[1.964923,-8.645545],[-3.322547,6.192149],[-1.021265,-8.997916],[9.917207,7.775448],[6.188045,-2.752614],[4.609416,6.686131],[-6.828558,5.794117],[1.547378,-3.899616],[-4.678994,-1.374765],[-8.674223,1.759542],[-8.796436,9.923795],[-5.686110,-2.758904],[-0.350534,-7.009760],[2.435313,8.362435],[-2.450538,4.123230],[-2.269695,-4.313530],[-0.513905,0.284208],[-8.593022,2.054798],[-4.416564,1.842503],[8.377047,-9.169454],[-9.277118,3.811625],[5.548878,6.632404],[-8.501905,8.698407],[-1.430577,0.332599],[-6.237893,2.238720],[2.160618,5.059218],[9.178372,-4.383704],[2.317153,-5.053845],[-4.817458,1.995338],[9.857448,5.334510],[0.670241,-6.082351],[7.794060,-2.132588],[8.667530,-4.252058],[2.092988,-4.230386],[-3.828724,5.195115],[-2.533366,2.054446],[-6.724352,-2.150341],[5.652930,5.844766],[-7.529161,-0.259275],[2.919181,4.165346],[-6.957216,-6.095969],[9.200679,1.567214],[2.989994,2.975323],[-6.749065,-3.654386],[5.837378,-0.900520],[3.480260,8.307064],[-3.764949,7.687003],[0.516255,-0.039987],[-7.134285,7.026931],[1.031993,-6.096553],[6.696501,-0.715893],[-4.276599,-4.703932],[7.553579,3.938397],[-0.201030,-9.932959],[-5.301329,0.624080],[-4.376414,-3.792759],[-2.712262,5.030588],[-5.873875,-6.618889],[5.046415,2.251418],[-1.285822,-7.959412],[6.531666,-2.721790],[-0.209112,-1.154288],[-6.126676,-6.261360],[1.896262,2.108977],[-3.506478,6.428327],[-7.052185,0.082457],[5.194432,-4.309837],[-6.107920,1.545957],[-2.248299,-6.496487],[7.757437,1.159409],[-7.855132,-3.683010],[-3.138870,6.040826],[-7.010219,6.470259],[-7.526178,2.546928],[-1.772772,6.698788],[-0.107394,-7.616924],[-9.104040,4.061297],[9.979000,2.892980],[4.451314,0.362184],[-7.277933,-6.165220],[9.029810,7.288401],[-2.900680,5.051705],[-3.509732,-2.631527],[-2.632868,9.220201],[7.097081,-9.355921],[-2.901451,-5.076307],[0.992283,3.241050],[-4.171855,6.045494],[-8.031512,7.892781],[2.045124,1.039242],[-6.156348,-9.556056],[-6.969058,4.223222],[-2.810445,-0.589418],[-5.298066,-8.572700],[-2.304546,1.506980],[-8.512100,-1.651971],[6.089483,7.055416],[2.271602,3.621755],[-6.319234,-9.561305],[5.572955,-1.708326],[4.245886,-8.281597],[9.294268,0.487685],[1.638882,-2.765590],[0.249942,-6.637561],[8.966729,4.401201],[-7.702700,-4.950508],[-1.791224,2.981586],[-5.837303,-7.218809],[-8.655955,1.664807],[9.154575,5.080366],[5.909790,-2.309114],[-4.971357,-3.823009],[3.285908,-4.591557],[-2.069598,-4.396810],[1.615648,-6.789218],[-8.689456,6.380671],[-7.292181,-6.756511],[-0.044559,-6.768229],[-5.894538,-4.701986],[7.439036,-6.444762],[9.377592,-5.120056],[4.367239,-4.639541],[-0.021896,-9.010242],[6.013295,4.819882],[8.928815,-1.850391],[0.287251,7.482910],[7.218384,-4.932098],[-3.094297,8.899404],[-2.930975,4.983250],[8.313754,-9.270364],[6.190938,-3.679584],[4.038687,-7.463386],[7.712770,-8.388206],[9.568824,-5.625774],[6.174567,7.622856],[9.771655,2.115638],[-5.906668,7.157927],[2.569826,2.479445],[6.619849,2.124946],[8.460993,3.325321],[-6.843291,7.564392],[1.424450,2.298604],[-4.884080,3.451769],[9.333764,7.963044],[0.371491,1.941304],[2.149838,3.932050],[-4.660369,5.346527],[-9.894698,1.799868],[-4.040929,-3.387438],[-6.353892,-7.162476],[-0.581219,3.244542],[4.125646,4.237310],[7.262323,9.603499],[1.391746,2.173893],[2.035460,2.016860],[4.877191,8.335920],[8.169342,-1.821500],[8.927643,5.316560],[-9.181822,9.444969],[7.849508,-5.045146],[-7.545563,5.167738],[9.770738,6.248038],[1.802341,-5.555854],[3.178290,-2.410943],[-6.114687,7.099370],[-9.960553,0.306512],[4.476137,-8.559981],[-5.047550,8.622534],[-3.489947,-5.624392],[-0.780578,-0.281410],[4.025281,-5.623202],[-4.321694,7.968722],[9.747238,-9.642401],[0.237201,-5.841210],[0.245763,-8.088575],[-6.814542,-6.310831],[-9.052040,-5.487099],[-9.941555,0.398809],[4.740287,8.260632],[-7.918747,-6.436686],[9.247922,2.317249],[0.597591,3.109634],[-4.191935,-6.516421],[7.433565,5.449873],[1.631110,-6.624281],[5.162683,4.374623],[-6.783646,-7.811701],[-7.383895,-2.799925],[-9.015876,-8.531261],[-4.097096,-1.906949],[2.441259,9.455398],[5.124225,5.021776],[-3.739970,-6.161585],[2.743539,-2.104475],[-8.728082,-8.122972],[-9.730469,-5.970958],[0.365097,-2.850799],[-4.115985,-9.359048],[5.289193,5.574257],[6.185471,4.561910],[-5.376466,8.296061]], dtype = "float64")#candidate|8315|(520, 2)|const|float64
call_8314 = relay.TupleGetItem(func_2792_call(relay.reshape(const_8315.astype('float64'), [520, 2])), 9)
call_8316 = relay.TupleGetItem(func_2794_call(relay.reshape(const_8315.astype('float64'), [520, 2])), 9)
output = relay.Tuple([call_8301,call_8307,call_8314,const_8315,])
output2 = relay.Tuple([call_8302,call_8308,call_8316,const_8315,])
func_8320 = relay.Function([], output)
mod['func_8320'] = func_8320
mod = relay.transform.InferType()(mod)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8320_call = mutated_mod.get_global_var('func_8320')
call_8321 = func_8320_call()
output = call_8321
func_8322 = relay.Function([], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_8358 = func_4844_call()
call_8359 = func_4844_call()
output = relay.Tuple([call_8358,])
output2 = relay.Tuple([call_8359,])
func_8376 = relay.Function([], output)
mod['func_8376'] = func_8376
mod = relay.transform.InferType()(mod)
output = func_8376()
func_8377 = relay.Function([], output)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8478 = relay.var("var_8478", dtype = "uint16", shape = (15, 3, 2))#candidate|8478|(15, 3, 2)|var|uint16
var_8479 = relay.var("var_8479", dtype = "uint16", shape = (15, 3, 2))#candidate|8479|(15, 3, 2)|var|uint16
bop_8480 = relay.right_shift(var_8478.astype('uint16'), relay.reshape(var_8479.astype('uint16'), relay.shape_of(var_8478))) # shape=(15, 3, 2)
uop_8495 = relay.cos(var_8479.astype('float64')) # shape=(15, 3, 2)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_8504 = func_2900_call()
call_8505 = func_2900_call()
output = relay.Tuple([bop_8480,uop_8495,call_8504,])
output2 = relay.Tuple([bop_8480,uop_8495,call_8505,])
func_8509 = relay.Function([var_8478,var_8479,], output)
mod['func_8509'] = func_8509
mod = relay.transform.InferType()(mod)
mutated_mod['func_8509'] = func_8509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8509_call = mutated_mod.get_global_var('func_8509')
var_8511 = relay.var("var_8511", dtype = "uint16", shape = (15, 3, 2))#candidate|8511|(15, 3, 2)|var|uint16
var_8512 = relay.var("var_8512", dtype = "uint16", shape = (15, 3, 2))#candidate|8512|(15, 3, 2)|var|uint16
call_8510 = func_8509_call(var_8511,var_8512,)
output = call_8510
func_8513 = relay.Function([var_8511,var_8512,], output)
mutated_mod['func_8513'] = func_8513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_8572 = relay.TupleGetItem(func_3094_call(), 0)
call_8573 = relay.TupleGetItem(func_3096_call(), 0)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
var_8582 = relay.var("var_8582", dtype = "uint64", shape = (832,))#candidate|8582|(832,)|var|uint64
call_8581 = relay.TupleGetItem(func_3662_call(relay.reshape(var_8582.astype('uint64'), [104, 8])), 1)
call_8583 = relay.TupleGetItem(func_3664_call(relay.reshape(var_8582.astype('uint64'), [104, 8])), 1)
func_7564_call = mod.get_global_var('func_7564')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_8584 = func_7564_call()
call_8585 = func_7564_call()
func_4974_call = mod.get_global_var('func_4974')
func_4976_call = mutated_mod.get_global_var('func_4976')
const_8590 = relay.const(-9.263260, dtype = "float64")#candidate|8590|()|const|float64
call_8589 = relay.TupleGetItem(func_4974_call(relay.reshape(const_8590.astype('float64'), [])), 1)
call_8591 = relay.TupleGetItem(func_4976_call(relay.reshape(const_8590.astype('float64'), [])), 1)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_8603 = relay.TupleGetItem(func_5085_call(), 0)
call_8604 = relay.TupleGetItem(func_5086_call(), 0)
bop_8628 = relay.mod(const_8590.astype('float64'), var_8582.astype('float64')) # shape=(832,)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_8634 = relay.TupleGetItem(func_5085_call(), 0)
call_8635 = relay.TupleGetItem(func_5086_call(), 0)
func_3506_call = mod.get_global_var('func_3506')
func_3509_call = mutated_mod.get_global_var('func_3509')
var_8666 = relay.var("var_8666", dtype = "uint32", shape = (48,))#candidate|8666|(48,)|var|uint32
call_8665 = relay.TupleGetItem(func_3506_call(relay.reshape(var_8666.astype('uint32'), [4, 4, 3])), 0)
call_8667 = relay.TupleGetItem(func_3509_call(relay.reshape(var_8666.astype('uint32'), [4, 4, 3])), 0)
output = relay.Tuple([call_8572,call_8581,call_8584,call_8589,call_8603,bop_8628,call_8634,call_8665,var_8666,])
output2 = relay.Tuple([call_8573,call_8583,call_8585,call_8591,call_8604,bop_8628,call_8635,call_8667,var_8666,])
func_8675 = relay.Function([var_8582,var_8666,], output)
mod['func_8675'] = func_8675
mod = relay.transform.InferType()(mod)
var_8676 = relay.var("var_8676", dtype = "uint64", shape = (832,))#candidate|8676|(832,)|var|uint64
var_8677 = relay.var("var_8677", dtype = "uint32", shape = (48,))#candidate|8677|(48,)|var|uint32
output = func_8675(var_8676,var_8677,)
func_8678 = relay.Function([var_8676,var_8677,], output)
mutated_mod['func_8678'] = func_8678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7855_call = mod.get_global_var('func_7855')
func_7857_call = mutated_mod.get_global_var('func_7857')
call_8703 = func_7855_call()
call_8704 = func_7855_call()
output = call_8703
output2 = call_8704
func_8709 = relay.Function([], output)
mod['func_8709'] = func_8709
mod = relay.transform.InferType()(mod)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8709_call = mutated_mod.get_global_var('func_8709')
call_8710 = func_8709_call()
output = call_8710
func_8711 = relay.Function([], output)
mutated_mod['func_8711'] = func_8711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8747 = relay.var("var_8747", dtype = "float32", shape = (12, 12, 16))#candidate|8747|(12, 12, 16)|var|float32
uop_8748 = relay.sigmoid(var_8747.astype('float32')) # shape=(12, 12, 16)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
var_8775 = relay.var("var_8775", dtype = "uint64", shape = (832, 1))#candidate|8775|(832, 1)|var|uint64
call_8774 = relay.TupleGetItem(func_33_call(relay.reshape(var_8775.astype('uint64'), [4, 13, 16])), 0)
call_8776 = relay.TupleGetItem(func_35_call(relay.reshape(var_8775.astype('uint64'), [4, 13, 16])), 0)
output = relay.Tuple([uop_8748,call_8774,var_8775,])
output2 = relay.Tuple([uop_8748,call_8776,var_8775,])
func_8778 = relay.Function([var_8747,var_8775,], output)
mod['func_8778'] = func_8778
mod = relay.transform.InferType()(mod)
var_8779 = relay.var("var_8779", dtype = "float32", shape = (12, 12, 16))#candidate|8779|(12, 12, 16)|var|float32
var_8780 = relay.var("var_8780", dtype = "uint64", shape = (832, 1))#candidate|8780|(832, 1)|var|uint64
output = func_8778(var_8779,var_8780,)
func_8781 = relay.Function([var_8779,var_8780,], output)
mutated_mod['func_8781'] = func_8781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_8812 = relay.TupleGetItem(func_4369_call(), 2)
call_8813 = relay.TupleGetItem(func_4370_call(), 2)
func_7962_call = mod.get_global_var('func_7962')
func_7964_call = mutated_mod.get_global_var('func_7964')
call_8819 = relay.TupleGetItem(func_7962_call(), 0)
call_8820 = relay.TupleGetItem(func_7964_call(), 0)
output = relay.Tuple([call_8812,call_8819,])
output2 = relay.Tuple([call_8813,call_8820,])
func_8838 = relay.Function([], output)
mod['func_8838'] = func_8838
mod = relay.transform.InferType()(mod)
mutated_mod['func_8838'] = func_8838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8838_call = mutated_mod.get_global_var('func_8838')
call_8839 = func_8838_call()
output = call_8839
func_8840 = relay.Function([], output)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_8870 = relay.TupleGetItem(func_3073_call(), 1)
call_8871 = relay.TupleGetItem(func_3075_call(), 1)
func_4814_call = mod.get_global_var('func_4814')
func_4817_call = mutated_mod.get_global_var('func_4817')
var_8876 = relay.var("var_8876", dtype = "uint32", shape = (3, 36))#candidate|8876|(3, 36)|var|uint32
call_8875 = relay.TupleGetItem(func_4814_call(relay.reshape(var_8876.astype('uint32'), [4, 9, 3])), 0)
call_8877 = relay.TupleGetItem(func_4817_call(relay.reshape(var_8876.astype('uint32'), [4, 9, 3])), 0)
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_8880 = relay.TupleGetItem(func_5670_call(), 1)
call_8881 = relay.TupleGetItem(func_5672_call(), 1)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_8882 = relay.TupleGetItem(func_4240_call(), 0)
call_8883 = relay.TupleGetItem(func_4241_call(), 0)
output = relay.Tuple([call_8870,call_8875,var_8876,call_8880,call_8882,])
output2 = relay.Tuple([call_8871,call_8877,var_8876,call_8881,call_8883,])
func_8884 = relay.Function([var_8876,], output)
mod['func_8884'] = func_8884
mod = relay.transform.InferType()(mod)
var_8885 = relay.var("var_8885", dtype = "uint32", shape = (3, 36))#candidate|8885|(3, 36)|var|uint32
output = func_8884(var_8885)
func_8886 = relay.Function([var_8885], output)
mutated_mod['func_8886'] = func_8886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8888 = relay.var("var_8888", dtype = "float64", shape = (5, 9, 6))#candidate|8888|(5, 9, 6)|var|float64
uop_8889 = relay.acos(var_8888.astype('float64')) # shape=(5, 9, 6)
func_5599_call = mod.get_global_var('func_5599')
func_5602_call = mutated_mod.get_global_var('func_5602')
var_8903 = relay.var("var_8903", dtype = "float64", shape = (1040,))#candidate|8903|(1040,)|var|float64
call_8902 = relay.TupleGetItem(func_5599_call(relay.reshape(var_8903.astype('float64'), [1040,])), 3)
call_8904 = relay.TupleGetItem(func_5602_call(relay.reshape(var_8903.astype('float64'), [1040,])), 3)
output = relay.Tuple([uop_8889,call_8902,var_8903,])
output2 = relay.Tuple([uop_8889,call_8904,var_8903,])
func_8905 = relay.Function([var_8888,var_8903,], output)
mod['func_8905'] = func_8905
mod = relay.transform.InferType()(mod)
mutated_mod['func_8905'] = func_8905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8905_call = mutated_mod.get_global_var('func_8905')
var_8907 = relay.var("var_8907", dtype = "float64", shape = (5, 9, 6))#candidate|8907|(5, 9, 6)|var|float64
var_8908 = relay.var("var_8908", dtype = "float64", shape = (1040,))#candidate|8908|(1040,)|var|float64
call_8906 = func_8905_call(var_8907,var_8908,)
output = call_8906
func_8909 = relay.Function([var_8907,var_8908,], output)
mutated_mod['func_8909'] = func_8909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6795_call = mutated_mod.get_global_var('func_6795')
call_9044 = relay.TupleGetItem(func_6794_call(), 1)
call_9045 = relay.TupleGetItem(func_6795_call(), 1)
output = call_9044
output2 = call_9045
func_9066 = relay.Function([], output)
mod['func_9066'] = func_9066
mod = relay.transform.InferType()(mod)
mutated_mod['func_9066'] = func_9066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9066_call = mutated_mod.get_global_var('func_9066')
call_9067 = func_9066_call()
output = call_9067
func_9068 = relay.Function([], output)
mutated_mod['func_9068'] = func_9068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_9080 = relay.TupleGetItem(func_7196_call(), 0)
call_9081 = relay.TupleGetItem(func_7197_call(), 0)
output = relay.Tuple([call_9080,])
output2 = relay.Tuple([call_9081,])
func_9091 = relay.Function([], output)
mod['func_9091'] = func_9091
mod = relay.transform.InferType()(mod)
mutated_mod['func_9091'] = func_9091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9091_call = mutated_mod.get_global_var('func_9091')
call_9092 = func_9091_call()
output = call_9092
func_9093 = relay.Function([], output)
mutated_mod['func_9093'] = func_9093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_9105 = relay.TupleGetItem(func_3879_call(), 0)
call_9106 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([call_9105,])
output2 = relay.Tuple([call_9106,])
func_9119 = relay.Function([], output)
mod['func_9119'] = func_9119
mod = relay.transform.InferType()(mod)
output = func_9119()
func_9120 = relay.Function([], output)
mutated_mod['func_9120'] = func_9120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7982_call = mod.get_global_var('func_7982')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_9167 = func_7982_call()
call_9168 = func_7982_call()
output = relay.Tuple([call_9167,])
output2 = relay.Tuple([call_9168,])
func_9172 = relay.Function([], output)
mod['func_9172'] = func_9172
mod = relay.transform.InferType()(mod)
output = func_9172()
func_9173 = relay.Function([], output)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6795_call = mutated_mod.get_global_var('func_6795')
call_9181 = relay.TupleGetItem(func_6794_call(), 0)
call_9182 = relay.TupleGetItem(func_6795_call(), 0)
func_3879_call = mod.get_global_var('func_3879')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_9183 = relay.TupleGetItem(func_3879_call(), 0)
call_9184 = relay.TupleGetItem(func_3880_call(), 0)
func_3845_call = mod.get_global_var('func_3845')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_9191 = func_3845_call()
call_9192 = func_3845_call()
output = relay.Tuple([call_9181,call_9183,call_9191,])
output2 = relay.Tuple([call_9182,call_9184,call_9192,])
func_9199 = relay.Function([], output)
mod['func_9199'] = func_9199
mod = relay.transform.InferType()(mod)
output = func_9199()
func_9200 = relay.Function([], output)
mutated_mod['func_9200'] = func_9200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7899_call = mutated_mod.get_global_var('func_7899')
call_9211 = relay.TupleGetItem(func_7897_call(), 0)
call_9212 = relay.TupleGetItem(func_7899_call(), 0)
var_9213 = relay.var("var_9213", dtype = "uint32", shape = (4, 14, 3))#candidate|9213|(4, 14, 3)|var|uint32
bop_9214 = relay.power(call_9211.astype('float32'), var_9213.astype('float32')) # shape=(4, 14, 3)
bop_9217 = relay.power(call_9212.astype('float32'), var_9213.astype('float32')) # shape=(4, 14, 3)
output = relay.Tuple([bop_9214,])
output2 = relay.Tuple([bop_9217,])
func_9226 = relay.Function([var_9213,], output)
mod['func_9226'] = func_9226
mod = relay.transform.InferType()(mod)
mutated_mod['func_9226'] = func_9226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9227 = relay.var("var_9227", dtype = "uint32", shape = (4, 14, 3))#candidate|9227|(4, 14, 3)|var|uint32
func_9226_call = mutated_mod.get_global_var('func_9226')
call_9228 = func_9226_call(var_9227)
output = call_9228
func_9229 = relay.Function([var_9227], output)
mutated_mod['func_9229'] = func_9229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mod.get_global_var('func_4934')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_9325 = func_4934_call()
call_9326 = func_4934_call()
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_9332 = relay.TupleGetItem(func_4277_call(), 1)
call_9333 = relay.TupleGetItem(func_4278_call(), 1)
output = relay.Tuple([call_9325,call_9332,])
output2 = relay.Tuple([call_9326,call_9333,])
func_9339 = relay.Function([], output)
mod['func_9339'] = func_9339
mod = relay.transform.InferType()(mod)
mutated_mod['func_9339'] = func_9339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9339_call = mutated_mod.get_global_var('func_9339')
call_9340 = func_9339_call()
output = call_9340
func_9341 = relay.Function([], output)
mutated_mod['func_9341'] = func_9341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_9344 = relay.TupleGetItem(func_6860_call(), 1)
call_9345 = relay.TupleGetItem(func_6862_call(), 1)
output = relay.Tuple([call_9344,])
output2 = relay.Tuple([call_9345,])
func_9346 = relay.Function([], output)
mod['func_9346'] = func_9346
mod = relay.transform.InferType()(mod)
output = func_9346()
func_9347 = relay.Function([], output)
mutated_mod['func_9347'] = func_9347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6677_call = mod.get_global_var('func_6677')
func_6678_call = mutated_mod.get_global_var('func_6678')
call_9395 = relay.TupleGetItem(func_6677_call(), 0)
call_9396 = relay.TupleGetItem(func_6678_call(), 0)
var_9409 = relay.var("var_9409", dtype = "uint32", shape = (4, 14, 3))#candidate|9409|(4, 14, 3)|var|uint32
bop_9410 = relay.logical_or(call_9395.astype('bool'), var_9409.astype('bool')) # shape=(4, 14, 3)
bop_9413 = relay.logical_or(call_9396.astype('bool'), var_9409.astype('bool')) # shape=(4, 14, 3)
func_4775_call = mod.get_global_var('func_4775')
func_4776_call = mutated_mod.get_global_var('func_4776')
call_9419 = relay.TupleGetItem(func_4775_call(), 0)
call_9420 = relay.TupleGetItem(func_4776_call(), 0)
output = relay.Tuple([bop_9410,call_9419,])
output2 = relay.Tuple([bop_9413,call_9420,])
func_9450 = relay.Function([var_9409,], output)
mod['func_9450'] = func_9450
mod = relay.transform.InferType()(mod)
var_9451 = relay.var("var_9451", dtype = "uint32", shape = (4, 14, 3))#candidate|9451|(4, 14, 3)|var|uint32
output = func_9450(var_9451)
func_9452 = relay.Function([var_9451], output)
mutated_mod['func_9452'] = func_9452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6908_call = mod.get_global_var('func_6908')
func_6909_call = mutated_mod.get_global_var('func_6909')
call_9477 = relay.TupleGetItem(func_6908_call(), 0)
call_9478 = relay.TupleGetItem(func_6909_call(), 0)
func_8838_call = mod.get_global_var('func_8838')
func_8840_call = mutated_mod.get_global_var('func_8840')
call_9481 = relay.TupleGetItem(func_8838_call(), 1)
call_9482 = relay.TupleGetItem(func_8840_call(), 1)
func_7560_call = mod.get_global_var('func_7560')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_9483 = relay.TupleGetItem(func_7560_call(), 0)
call_9484 = relay.TupleGetItem(func_7561_call(), 0)
output = relay.Tuple([call_9477,call_9481,call_9483,])
output2 = relay.Tuple([call_9478,call_9482,call_9484,])
func_9485 = relay.Function([], output)
mod['func_9485'] = func_9485
mod = relay.transform.InferType()(mod)
output = func_9485()
func_9486 = relay.Function([], output)
mutated_mod['func_9486'] = func_9486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8180_call = mod.get_global_var('func_8180')
func_8181_call = mutated_mod.get_global_var('func_8181')
call_9497 = relay.TupleGetItem(func_8180_call(), 0)
call_9498 = relay.TupleGetItem(func_8181_call(), 0)
func_8320_call = mod.get_global_var('func_8320')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_9516 = relay.TupleGetItem(func_8320_call(), 1)
call_9517 = relay.TupleGetItem(func_8322_call(), 1)
func_7465_call = mod.get_global_var('func_7465')
func_7469_call = mutated_mod.get_global_var('func_7469')
const_9527 = relay.const([3,-2,-6,10,6,-4,-1,8,-9,6,-7,4,-1,2,-3,2,3,-9,-10,4,2,9,-8,7,-3,-3,10,-6,8,-7,-7,7,4,-8,6,10,-1,-1,9,-8,1,-1,-7,-1,5,7,8,-9,-1,-7,-8,-5,10,-9,6,-9,7,7,7,2,-8,1,5,6,-8,5,2,6,-9,-8,2,-3,9,6,10,5,9,1,7,-1,4,2,7,-7,3,-3,-5,6,8,10,-10,-5,-3,2,-6,7,-1,6,-5,6,10,-4,8,9,-10,2,-3,8,3,-8,-6,-9,-1,7,-7,5,4,2,-9,-6,1,-10,6,2,1,8,-2,4,-1,-1,-4,4,8,-2,9,8,7,-4,-10,-10,-6,-8,-5,-4,-3,-5,-1,-7,-4,-6,6,-3,-5,-3,5,6,4,-10,4,7,8,4,-10,-10,9,-9,3,-7,-9,1,-8,5,-9,-4,10,-2,-3,10,9,-10,-8,-5,-9,9,-5,-1,-7,6,1,1,-1,-8,1,-8,9,-1,6,-8,-10,-2,7,-7,-10,-2,-3,10,8,-8,7,-3,5,5,-2,6,-10,-7,4,1,9,4,-8,5,4,7,1,-10,-4,8,8,5,2,6,8,-9,3,-6,-8,5,4,5,-1,-2,10,10,3,7,-9,-3,-10,-1,-6,2,-10,7,-2,-1,-9,-8,4,8,-5,-3,8,1,-8,3,-1,-9,-3,-5,1,7,-1,-9,-5,10,-4,4,1,-1,10,-5,8,-10,-10,-7,-2,-1,9,8,8,4,3,5,-3,-2,-2,-4,3,-3,-2,4,-3,7,-6,6,2,-10,-7,-8,-3,5,-9,6,-4,5,-9,10,-7,-4,1,-10,9,10,5,6,10,7,-10,-3,4,-10,10,-3,-6,-9,6,-10,9,10,-7,6,-8,9,6,2,-2,10,-2,-9,3,-5,-7,-5,6,2,10,3,9,-5,5,-4,10,1,1,10,9,-3,10,-5,-3,-2,-5,2,6,-10,5,-10,-9,6,-10,-6,-2,5,8,10,7,6,-4,5,-8,-3,-10,-9,-3,-1,-1,-3,-7,-5,-10,-8,-5,-10,-5,-1,1,-7,6,-2,-2,5,1,6,-8,-4,-6,-7,9,1,4,8,-7,-8,2,3,2,-7,6,2,-4,4,9,2,1,-3,-7,-4,-5,-9,-2,-2,2,9,3,-4,10,-7,-1,8,-2,1,-9,6,-5,2,7,4,-5,7,-4,5,1,4,2,-6,-10,-6,1,-4,4,4,2,-1,10,-5,1,10,-3,-5,-4,-1,-7,-5,8,-5,-7,-6,-6,6,-6,-2,-10,-10,7,-7,-6,7,-5,4,-4,-6,9,-10,10,2,-8,5,-9,2,-10,-6,9,-4,8,8,6,-2,7,-1,-9,-4,-9,8,4,3,1,4,5,-4,5,-6,7,7,10,-2,-1,10,5,-8,-8,-5,-2,-8,-7,3,-6,3,5,-7,8,-7,-6,-10,7,-2,-1,-3,-7,4,-5,6,-4,-5,8,7,1,-6,-3,10,6,-2,-10,-2,7,-1,-10,4,-7,-4,-10,3,-5,8,5,7,-9,-10,5,6,-9,4,5,5,6,-8,-10,-6,10,-2,-4,-8,-7,4,4,6,8,-5,8,6,1,8,5,-6,-2,1,7,-10,2,8,5,-9,6,7,-6,-7,9,8,-1,-8,-5,8,-10,8,-4,8,-2,4,3,-1,-6,-3,4,-10,6,-8,9,-2,-6,-3,-1,-10,7,3,7,8,2,10,-5,-1,-10,-3,-6,-10,-7,3,-3,3,6,2,7,9,-1,7,1,8,-8,-10,6,-7,10,-3,10,5,-9,1,6,7,-3,5,2,-5,4,5,3,3,9,-6,-9,8,9,5,-3,5,7,-10,-5,9,8,7,5,5,-5,6,-4,-5,-6,-10,-5,5,-5,2,7,9,-7,-7,8,8,-4,9,-1,-3,-5,5,8,-3,-4,4,6,9,10,6,9,-1,-10,-3,7,9,-6,3,4,-8,-8,-2,-6,8,6,-3,-9,7,7,2,5,5,6,7,1,-10,8,5,-2,9,6,2,6,-5,-9,-4,-8,6,-6,-6,8,8,-6,7,8,6,8,9,9,-7,-3,-5,-2,7,-5,7,-6,9,-7,-2,4,9,9,-8,-6,-9,9,-1,6,-9,10,-4,10,-2,10,4,-5,-8,2,3,2,-6,5,-4,-5,3,10,4,1,-8,2,-6,2,-9,1,-2,-3,6,6,-10,4,8,1,1,-10,2,1,-8,4,-7,1,-2,8,6,-9,-4,-10,-4,-6,2,5,9,5,-9,9,6,7,-6,-7,8,-1,-6,5,-3,-6,-7,2,-5,3,6,1,-4,1,3,2,-3,-4,-5,10,7,4,6,-10,-1,-6,7,-10,-6,-10,-10,-2,7,-3,-2,10,-10,3,-10,-5,-10,-9,-8,5,-1,-5,-9,-5,3,-9,-2,4,3,6,-4,4,3,8,-4,7,10,-6,1,5,1,8,-5,5,-2,1,5,-10,3,-4,-3,-2,-5,5,-2,-9,-6,-8,9,-9,8,9,-9,4,6,-7,-8,-5,-7,-8,-1,-4,4,-8,-7,8,-8,9,-5,-7,8,4,-3,9,-9,1,-6,7,-6,4,3,-9,8,-6,10,6,9,5,6,2,-3,-5,9,-10,10,-10,-6,4,6,9,-5,-3,-4], dtype = "uint64")#candidate|9527|(1008,)|const|uint64
var_9528 = relay.var("var_9528", dtype = "bool", shape = (520,))#candidate|9528|(520,)|var|bool
var_9529 = relay.var("var_9529", dtype = "float32", shape = (660,))#candidate|9529|(660,)|var|float32
call_9526 = relay.TupleGetItem(func_7465_call(relay.reshape(const_9527.astype('uint64'), [1008,]), relay.reshape(var_9528.astype('bool'), [520,]), relay.reshape(var_9529.astype('float32'), [330, 2]), ), 5)
call_9530 = relay.TupleGetItem(func_7469_call(relay.reshape(const_9527.astype('uint64'), [1008,]), relay.reshape(var_9528.astype('bool'), [520,]), relay.reshape(var_9529.astype('float32'), [330, 2]), ), 5)
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_9536 = relay.TupleGetItem(func_5670_call(), 2)
call_9537 = relay.TupleGetItem(func_5672_call(), 2)
func_8509_call = mod.get_global_var('func_8509')
func_8513_call = mutated_mod.get_global_var('func_8513')
const_9545 = relay.const([6,-3,-7,-9,9,-8,3,-3,2,-1,2,5,3,-4,-6,-10,3,1,-4,1,-8,-4,-1,-10,-10,7,4,8,1,10,-8,-10,-2,9,9,-3,-10,-10,5,4,-2,-1,-3,4,2,-1,-2,1,2,-4,-9,10,4,-10,1,-8,5,9,-8,-3,-5,-1,5,-1,-2,-8,1,-2,-7,6,6,-10,3,10,10,-2,-10,-2,-6,10,9,3,-5,7,-9,1,-8,8,-10,-3], dtype = "uint16")#candidate|9545|(90,)|const|uint16
call_9544 = relay.TupleGetItem(func_8509_call(relay.reshape(const_9545.astype('uint16'), [15, 3, 2]), relay.reshape(const_9545.astype('uint16'), [15, 3, 2]), ), 0)
call_9546 = relay.TupleGetItem(func_8513_call(relay.reshape(const_9545.astype('uint16'), [15, 3, 2]), relay.reshape(const_9545.astype('uint16'), [15, 3, 2]), ), 0)
bop_9558 = relay.maximum(call_9497.astype('float32'), relay.reshape(call_9536.astype('float32'), relay.shape_of(call_9497))) # shape=(4, 1, 3)
bop_9561 = relay.maximum(call_9498.astype('float32'), relay.reshape(call_9537.astype('float32'), relay.shape_of(call_9498))) # shape=(4, 1, 3)
output = relay.Tuple([call_9516,call_9526,const_9527,var_9528,var_9529,call_9544,const_9545,bop_9558,])
output2 = relay.Tuple([call_9517,call_9530,const_9527,var_9528,var_9529,call_9546,const_9545,bop_9561,])
func_9562 = relay.Function([var_9528,var_9529,], output)
mod['func_9562'] = func_9562
mod = relay.transform.InferType()(mod)
var_9563 = relay.var("var_9563", dtype = "bool", shape = (520,))#candidate|9563|(520,)|var|bool
var_9564 = relay.var("var_9564", dtype = "float32", shape = (660,))#candidate|9564|(660,)|var|float32
output = func_9562(var_9563,var_9564,)
func_9565 = relay.Function([var_9563,var_9564,], output)
mutated_mod['func_9565'] = func_9565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6421_call = mutated_mod.get_global_var('func_6421')
call_9567 = relay.TupleGetItem(func_6419_call(), 0)
call_9568 = relay.TupleGetItem(func_6421_call(), 0)
func_8320_call = mod.get_global_var('func_8320')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_9575 = relay.TupleGetItem(func_8320_call(), 0)
call_9576 = relay.TupleGetItem(func_8322_call(), 0)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_9583 = relay.TupleGetItem(func_8224_call(), 1)
call_9584 = relay.TupleGetItem(func_8225_call(), 1)
func_3958_call = mod.get_global_var('func_3958')
func_3962_call = mutated_mod.get_global_var('func_3962')
const_9605 = relay.const([-1.350442,-4.144605,9.793325,7.765672,-2.011523,-3.954370,-3.608538,3.662450,-7.159977,-1.287851,-9.480647,3.012767,-9.996081,4.237839,4.866813,7.276538,-9.014365,1.990419,4.245144,6.200023,1.801416,-6.968487,4.868839,7.963254,3.311822,-7.133337,7.151276,9.863730,-6.532870,1.298224,-6.292627,5.721521,-0.636767,-8.250359,4.467945,1.590326,8.221628,-8.692482,6.008102,-7.862841,-8.829407,6.841656,-5.785481,0.356068,3.017484,5.448914,5.524921,-6.293253,6.647403,6.491934,-2.768933,2.567265,-7.599185,-3.875140,9.797467,-1.094170,-9.998694,6.748923,3.497103,6.641056,3.040600,-8.841618,-6.413567,-0.330016,4.368938,-1.968404,-2.404027,-6.251874,-8.953077,1.707373,5.573971,3.057576,7.588550,0.430731,9.918134,8.975592,8.581260,1.301184,-4.217325,1.938275,-1.766375,4.871207,1.388748,4.558108,-6.148377,8.762164,1.548696,5.576607,-9.781087,5.731285,-4.550347,-6.862616,-0.709717,3.194192,-1.430661,-5.860946,-3.168503,8.932724,3.846128,4.183464,9.384723,-6.360051,1.707313,1.554403,-6.261940,8.864639,4.707571,-0.906117,-2.977990,-3.661313,-1.184811,8.649169,-3.358638,-3.756069,1.113862,-9.162301,-4.710326,4.712390,-2.217150,5.333631,6.948476,6.105544,8.089422,-4.132209,4.500091,-7.571463,-8.442683,4.750131,-7.016021,-2.000398,8.981081,8.253768,1.956772,-8.072394,7.938325,-8.734598,-2.170771,-5.923809,5.434900,2.227212,9.723498,-4.216208,1.189578,6.828124,7.084667,-8.787541,-9.904163,9.876307,-7.066047,8.103227,1.105094,8.098888,-3.741862,3.451081,-1.391584,-0.426531,-6.437506,5.430858,-2.698149,-6.178718,2.151214,9.443015,-9.110563,7.548135,-6.552724,-1.327687,5.759387,6.960849,4.476899,3.363545,-0.468134,-4.782608,2.995265,-2.285844,-0.840798,0.603117,7.960971,6.791242,1.685161,5.712328,0.441522,-8.500949,9.631839,-4.869945,-3.918363,-9.514849,-6.170616,-8.697988,7.087336,7.232572,6.123592,1.630089,6.198584,-3.574822,4.609642,-4.972057,7.043558,4.764556,4.597028,-8.398962,-4.066772,-2.777098,5.366411,-9.315105,2.894656,-6.088305,-1.074171,-8.791906,-8.145023,0.092386,-7.556903,-2.181906,-6.903413,-1.577845,-2.210460,8.830420,2.565857,4.179421,-4.045931,2.438375,5.950159,-0.248153,4.551406,-8.214453,4.157771,-1.623480,6.217424,-7.190866,-6.676712,0.376749,4.658292,2.601637,-0.974023,2.189790,-2.861401,8.909606,-3.914289,-6.307520,-7.416294,3.087869,-3.233900,2.237574,-1.923673,6.956556,-1.528787,2.111496,6.733871,-8.757790,9.597818,7.893394,6.122240,-4.629627,-9.394003,4.200013,7.053446,8.188419,-7.760252,6.550988,-9.896515,-6.825418,-9.196944,-2.398754,-1.170903,9.479093,-4.139469,-5.528720,0.049993,1.777355,0.723348,-3.650611,8.094797,-4.183616,-5.204536,-0.753838,-8.302755,3.978756,2.789540,-5.576650,0.495306,0.101791,-0.735634,3.690890,-1.472316,-7.345120,1.739881,-1.351728,-8.458394,9.010836,8.439644,0.588906,-7.393206,-0.191707,-9.163956,4.401935,-7.194209,8.668926,-7.513342,4.293034,4.049826,-4.815328,-2.236658,8.763805,5.595377,-3.828506,-5.972770,-7.584314,-7.490724,-8.286421,-7.394184,-2.759520,9.589738,2.208333,-8.420141,-4.824687,-1.094024,4.373325,-5.683835,7.561321,9.687098,-6.033740,4.033690,-7.176882,0.734872,-5.480582,-3.070911,-4.646002,-4.324106,-9.245449,-8.745037,-6.742706,3.708951,-6.807629,-6.373060,-1.116488,0.942124,-1.211270,8.318857,-1.106497,2.168836,-7.796885,-3.609852,7.790210,8.203781,2.374928,0.912619,-8.221249,1.306098,-4.726356,0.707528,8.310748,0.098192,4.878872,-0.763214,6.859107,0.804320,-3.327895,-4.672949,-6.839457,5.636263,-7.283413,-2.136705,8.379345,7.407620,1.164678,-9.364500,8.127583,-4.142353,4.642692,-7.828293,3.158965,-0.185718,3.818099,2.936582,-8.322001,-6.526154,0.592880,-6.576623,-7.086831,-2.923250,-8.860456,7.696563,-4.640021,-0.057326,-4.569918,-2.899213,-4.345525,8.505804,-3.532270,-9.346327,5.675803,4.240149,7.188171,-0.726622,4.656520,1.997495,3.744181,1.161268,6.358183,7.674627,-9.915473,1.570033,4.387693,1.844984,6.089879,-8.367633,-4.911953,-8.680250,0.561167,2.317801,4.680751,-0.589158,8.557779,3.906930,-5.449894,0.992117,-1.519981,3.807180,0.472467,7.540091,-4.687270,-9.337027,8.570545,-5.381876,4.145582,7.187465,9.791804,5.961705,4.903720,0.560457,-3.119277,6.250385,5.069834,-6.201284,9.913441,3.466126,8.202936,-5.533012,-1.674926,-5.740739,-5.763576,1.922618,6.966598,6.821318,7.191586,-9.358519,7.028178,-1.667984,0.286284,1.715338,0.267117,-4.680722,-8.803743,4.241156,-8.541336,-0.399614,-1.282219,-5.087077,8.832998,-7.052084,-4.876411,-4.973238,-0.444568,-4.737283,3.356943,-0.066436,-1.241079,7.052843,6.554235,-2.685517,-9.693564,4.994442,-9.996133,4.656756,6.378205,-9.284337,-2.153575,7.253772,9.331602,-0.642558,4.636825,2.524658,-6.480083,5.826459,-9.522429,4.826326,-2.779514,8.265723,-7.990394,-0.424890,-5.633096,3.577331,2.328467,-8.636802,-7.245478,0.233235,2.724761,3.017814,-2.124293,-1.812451,-7.300248,1.148175,-5.640016,3.424564,3.608875,-5.060012,-5.426309,1.591078,-9.785395,9.942649,-9.564435,-9.117538,8.713254,9.906208,-1.588002,-3.027876,1.791541,-9.254532,-5.464220,-7.224872,0.263900,-5.219092,-8.877395,-8.126038,2.115390,4.288524,-7.337869,0.892099,-5.105722,4.053351,-0.826337,5.865769,-0.102904,0.930548,-9.636949,-3.997414,-0.276702,6.692667,-3.302735,5.301092,1.472940,-8.317235,5.107615,-6.591506,-1.120930,-1.874909,6.217006,6.659505,1.522401,2.787770,-2.872395,-2.267022,-4.858798,-8.706237,6.057180,-6.866906,-4.180337,-3.986984,-6.273886,5.863109,8.791760,-1.225551,-5.019669,-2.968171,-6.360859,0.185139,2.027152,-1.609046,4.670267,8.877447,-0.556634,-5.360071,-0.601126,-4.710765,5.226524,4.862596,-6.727557,3.266978,9.128303,-6.249600,8.850510,1.828658,1.054193,-0.446452,-4.102232,7.265248,1.193823,0.827903,9.371066,4.946289,-3.692445,9.393645,-3.205585,9.475208,-5.112441,1.532835,5.591535,-8.128653,-1.860870,2.207522,-4.311398,-7.290482,-1.677155,0.922135,3.036151,-8.841938,-0.733645,-0.629413,6.656925,-8.610420,-4.395396,2.086220,-6.703805,-4.665762,4.265614,6.460818,3.928730,6.755115,-2.907016,5.165880,6.033887,1.301333,1.407879,-7.354255,4.306715,-4.684160,6.987787,7.333861,5.424341,-5.948695,4.603713,4.946564,8.497193,0.116645,6.552987,-7.259170,-4.826505,-8.341918,7.172899,-8.326235,-4.818693,-9.888709,4.490370,5.046534,-4.410094,4.579518,-4.691472,-9.534187,0.617244,1.745085,-2.668355,-1.343854,4.536934,-8.035977,8.095958,8.644654,1.949192,9.610519,2.082817,1.051316,5.895366,8.636543,3.682525,1.546405,9.280353,-8.881935,-8.547419,9.698847,4.024568,2.212041,-4.495259,-4.691805,-2.138000,-5.227909,7.400346,2.073801,-2.369305,-3.313926,-8.590202,1.884536,-4.188766,3.659436,-3.065538,-8.498309,-2.718072,-0.594595,-0.130587,-2.318635,9.515157,-4.021908,8.181685,9.158343,-9.923219,4.576177,9.963938,9.157115,-7.932876,1.067868,3.136798,5.775293,7.700817,-1.763064,-6.823517,-9.764479,-8.427009,-2.435392,7.942392,8.773958,4.128477,-0.829581,0.052284,-4.256736,9.293038,-0.709493,6.395972,-1.823280,-8.244388,-5.430524,-6.234527,-2.352623,4.177270,-9.992426,-1.227794,9.406300,-6.257522,-2.665005,4.381221,-7.182456,-7.863919,3.017268,-7.366052,-1.494348,-5.990513,2.263416,-0.457450,0.727911,1.493851,-1.205216,-7.929820,2.043521,0.645720,-3.899887,2.869990,5.670623,-4.280309,4.221939,2.903035,5.662944,9.679941,-2.782780,-4.009409,4.023746,8.192939,1.270222,5.204572,-0.733640,-9.025085,3.423708,0.539726,-8.722582,5.908419,-1.105966,1.957545,5.174517,4.714491,-7.021980,5.849066,8.565218,1.783788,-1.590418,8.040210,-0.453623,-7.248113,5.700346,-5.773532,2.475765,-8.790134,-8.914402,1.821618,-7.002280,6.121476,-0.414259,-6.740278,9.252898,-4.425734,0.548814,0.616432,2.048425,8.980002,2.427826,-2.066278,-7.344325,1.296060,7.342463,-7.749484,6.764672,-5.954712,-1.721605,7.379431,4.553947,-8.127713,2.253788,-7.262780,4.851605,-0.347023,3.734296,1.272471,2.260912,9.379994,8.384006,-2.492602,3.977343,-1.001237,8.808933,-6.043249,9.866416,3.502772,-1.502212,6.837965,-1.272279,-7.013248,4.169740,6.401952,-0.430699,9.680453,-2.648506,-7.563171,-5.414343,9.155758,-3.325358,-0.251107,-4.847263,7.042814,9.364176,-3.819867,-7.560829,-5.303805,-6.675277,-6.571793,-2.360849,-8.326837,1.575805,-8.890373,4.053740,2.992933,7.549100,2.336195,-1.950749,-7.305005,-4.236852,2.750079,-4.435457,-9.813842,4.280265,0.978183,-9.243260,-6.420785,3.743012,9.185068,-8.847695,-2.909188,9.902333,-6.785236,-5.781769,3.749971,6.807307,9.571605,-2.454776,9.110993,-9.394542,2.270266,-2.660477,-2.460496,0.230966,0.408052,9.908181,3.744588,9.303275,-0.282898,4.668257,-9.526870,-2.604446,-0.774322,5.196609,-8.366791,-6.285496,-3.521732,7.350649,-4.666930,1.051144,-2.517989,-0.791202,4.851141,4.865121,6.711410,1.284014,-5.884106,-1.514733,7.996277,-3.317941,0.488112,4.022074,6.345840,3.822572,3.165606,6.324887,6.179798,-8.099346,-1.362801,-2.331607,-0.959732,5.784511,1.759376,6.590192,-6.398084,-0.445747,-9.998432,1.177680,-1.395827,-3.303500,0.340671,5.011986,0.896255,0.406866,-5.305236,9.777353,-8.202321,0.716562,-2.939995,-6.704646,-9.922728,1.802927,-4.958713,-1.005520,4.254560,1.160876,3.350863,5.020675,-9.957298,-6.686166,-0.873068,8.308781,-1.334834,-3.315708,4.922844,9.435433,2.050441,-6.678376,-1.553372,-8.507291,3.149868,-0.788680,-7.871334,5.897764,6.457631,3.896443,-6.557891,-2.757207,7.352425,1.521466,1.326469,-2.526370,2.390779,-1.632221,-5.476524,7.160066,-5.242454,-4.660348,5.892022,8.284239,5.293968,-7.930695,8.071293,-3.607869,6.036063,8.421511,4.110741,4.038813,9.497877,-9.491142,-8.057438,3.068286,1.853640,-1.107738,-4.977566,5.540645,-6.724919,5.893059,-9.861391,6.268786,5.215225,-8.624085,-9.780407,-8.510703,-7.066947,4.089603,-9.440634,4.009703,-6.208973,1.813076,-5.073681,-3.198096,-8.614978,-6.681665,-9.946198,1.692221,9.814179,-3.090109,6.344890,1.331273,3.696275,0.426922,3.936672,0.729916,-3.991898,-4.831349,-3.190048,5.963749,-5.999353,1.899135,8.306012,4.444673,1.475607,6.994648,-8.492888,-7.754132,0.015856,6.269206,-7.343844,0.591440,2.285036,2.896610,-3.364163,5.707128,3.290821,2.518693,6.649584,9.114266,-3.440745,1.004393,7.752986,-2.676528,2.590655,4.366537,8.743183,-0.937710,1.346940,-3.766846,6.302706,-7.188622,-4.314119,5.154169,-6.799663,-3.539941,7.167798,8.398926,4.952503,-3.655876,-6.941124,1.473143,-1.108811,-6.592461,4.686060,2.904012,-5.825646,9.507638,-9.245383,-4.871753,9.391670,3.509497,7.169083,6.692504,3.743570,5.133289,-8.961090,2.472509,8.980984,-7.728606,-8.653118,1.827741,8.697846,8.596546,5.580521,2.411207,1.030302,-8.462125,0.067940,8.822481,2.505608,-4.023343,7.218745,-0.225331,-1.373563,-9.947787,-9.599271,3.568900,-0.870257,1.599559,1.178867,5.706522,-0.002304,3.387109,6.678935,-8.436420,1.997165,-4.178183,-8.634791,2.898179,4.430478,5.468300,7.811289,-7.007461,5.932905,-7.231087,-4.251813,2.238684,3.562843,-2.991570,-7.772210,1.652230,-5.291031,-7.914707,-0.733215,9.162846,4.977892,2.988325,3.917018,0.929400,-8.785584,1.764259,4.392580,5.051045,1.304527,7.219935,-6.572216,-1.989903,8.160690,9.902220,-9.899013,3.929649,7.207614,4.970185,-4.984295,3.867226,-6.443482,8.864121,-1.145836,-7.864738,6.194274,1.941452,-5.854689,-9.717942,-7.349368,3.585903,-9.253875,8.142631,1.122132,-0.819561,0.597572,-2.008390,7.938235,1.706294,-2.907263,4.872462,8.801219,0.612342,-7.919819,3.970556,7.060739,-1.750988,-5.807864,6.725874,-7.440602,4.819255,-0.738238,9.998421,-4.717642,8.496977,-9.399399,-5.294295,4.665199,0.526729,6.084136,-8.422681,0.415890,-3.412377,-3.705578,3.140884,1.407516,-4.723318,0.588231,4.985713,-9.427295,-6.357968,-7.863979,2.176998,1.588484,0.608641,4.942906,9.767463,-1.522494,-0.361194,-7.592960,6.926736,7.920817,8.195782,6.893481,-4.274237,4.034788,-8.997987,4.415654,1.864435,-9.610559,2.675180,-2.437201,-8.108777,-7.776177,-7.276601,8.480133,-1.873439,8.048204,4.224752,6.603842,2.749199,-1.934343,-8.392243,3.622653,-2.011223,-3.172931,0.597080,6.427678,-1.118066,9.150412,-0.290708,-3.950091,1.251877,-4.135134,2.019701,-5.668253,-0.346520,-3.484897,-2.094089,-8.712414,-9.086729,-3.893810,2.210326,0.829227,8.870468,-1.740300,4.690278,-2.670038,7.104727,7.473269,-3.329936,6.425331,8.203622,3.120449,0.738704,-2.352049,8.102966,5.953515,-4.074966,-1.821629,5.909041,3.960964,7.657272,2.239302,-6.418519,9.377091,-8.153262,3.355617,4.258270,5.057422,-0.141742,-5.928913,-0.792006,5.762984,-7.741313,-7.397964,-4.351970,8.536506,-4.170254,-5.853771,2.183084,5.107244,-5.657074,9.360207,-2.012250,-8.879638,0.039043,-0.433218,6.400026,-7.999391,4.748483,2.400149,1.134879,0.818233,-3.159192,-7.499515,-8.193567,4.356253,0.893902,-3.528169,-8.670821,-6.907414,3.869022,1.455840,-8.049647,-7.095544,4.745479,-1.739070,-1.639145,-2.126148,7.662896,3.307676,-0.028126,7.665970,5.522403,3.289986,-3.224789,3.218429,-1.181519,-7.738420,3.781941,-9.224624,7.571166,1.877076,4.118739,-9.264431,-1.854103,-5.979055,-2.975690,-0.111750,5.548143,6.983738,-6.243283,7.033639,-1.077624,8.459705,-5.588692,-6.753531,-2.339236,-0.407003,6.523577,8.216184,-3.411890,-9.853834,2.277758,-7.720667,6.106452,-9.680943,6.288181,-9.050770,-4.810670,5.058521,-3.628593,-8.565957,4.346788,-0.998205,5.744338,-8.011521,9.340071,-8.475727,-3.252921,2.726819,4.867681,3.291714,4.706616,-7.558315,7.092815,-5.737339,5.711430,2.942651,7.408524,9.063648,1.583042,-6.715564,-1.066518,4.453103,-8.150469,-2.580422,-5.634211,-1.911728,-2.406702,5.665510,-7.643723,9.991946,-3.804783,-2.249319,-7.102609,-3.808468,0.089713,-6.141235,-2.107088,-5.333222,-2.328081,-5.182090,-4.019401,-9.041399,2.786790,4.805439,7.244269,8.306034,5.225982,-7.629245,8.028037,8.827613,2.738586,-5.352137,8.872366,-4.924051,-9.980896,-1.438517,6.356584,5.729840,2.947737,-0.099336,9.806611,-4.008193,7.957924,-2.331643,-5.223141,-4.563419,7.080851,3.280276,5.994811,-7.595356,-5.923056,3.338810,7.291799,-9.397415,8.844625,1.704206,-9.534506,9.252773,-8.625066,-4.888001,7.547335,5.126506,7.545177,0.186389,-9.329080,-5.522217,-7.770291,1.699898,-7.532496,-0.159191,-6.537005,-7.429096,-9.784034,3.463433,0.247100,1.754280,-4.135085,8.059181,1.718316,-6.898245,-8.724758,-7.460348,-2.851059,-2.273895,4.575055,-8.625085,1.232115,-8.663191,-5.724784,-3.486976,2.863419,-4.803035,-4.833861,2.719059,-8.482480,-1.400669,9.563225,-6.692663,-3.290855,-3.650574,0.626676,3.364073,-1.473121,-8.632916,8.595480,-9.453930,-7.507521,-9.555045,3.706604,-8.450338,-7.689851,-7.111616,1.603811,2.109465,-8.543233,8.523128,2.086706,-1.127950,-6.842032,-8.631573,3.990547,-8.630074,-5.516035,5.732858,5.225505,4.031251,-3.551969,8.903819,-2.206671,6.288605,-8.262897,0.958556,3.758796,5.411820,-7.993156,-3.134149,6.856849,-2.389128,3.288787,7.495800,4.540398,-6.159223,-2.917661,-8.586247,5.262368,1.431986,-9.911194,8.639486,-3.134531,-4.178674,-3.211647,7.653724,8.105926,5.897692,7.424377,1.555423,-9.547507,-7.589584,4.797089,5.107281,-9.101006,0.800318,4.506240,-4.260654], dtype = "float64")#candidate|9605|(1540,)|const|float64
const_9606 = relay.const([False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False], dtype = "bool")#candidate|9606|(520,)|const|bool
call_9604 = relay.TupleGetItem(func_3958_call(relay.reshape(const_9605.astype('float64'), [1540,]), relay.reshape(const_9606.astype('bool'), [520,]), ), 6)
call_9607 = relay.TupleGetItem(func_3962_call(relay.reshape(const_9605.astype('float64'), [1540,]), relay.reshape(const_9606.astype('bool'), [520,]), ), 6)
func_8294_call = mod.get_global_var('func_8294')
func_8297_call = mutated_mod.get_global_var('func_8297')
call_9613 = relay.TupleGetItem(func_8294_call(relay.reshape(const_9606.astype('bool'), [520,])), 2)
call_9614 = relay.TupleGetItem(func_8297_call(relay.reshape(const_9606.astype('bool'), [520,])), 2)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_9643 = relay.TupleGetItem(func_5788_call(relay.reshape(call_9583.astype('uint32'), [4, 1, 3])), 0)
call_9644 = relay.TupleGetItem(func_5790_call(relay.reshape(call_9583.astype('uint32'), [4, 1, 3])), 0)
bop_9650 = relay.bitwise_or(call_9643.astype('int8'), relay.reshape(call_9567.astype('int8'), relay.shape_of(call_9643))) # shape=(4, 1, 3)
bop_9653 = relay.bitwise_or(call_9644.astype('int8'), relay.reshape(call_9568.astype('int8'), relay.shape_of(call_9644))) # shape=(4, 1, 3)
output = relay.Tuple([call_9575,call_9583,call_9604,const_9605,const_9606,call_9613,bop_9650,])
output2 = relay.Tuple([call_9576,call_9584,call_9607,const_9605,const_9606,call_9614,bop_9653,])
func_9657 = relay.Function([], output)
mod['func_9657'] = func_9657
mod = relay.transform.InferType()(mod)
output = func_9657()
func_9658 = relay.Function([], output)
mutated_mod['func_9658'] = func_9658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mod.get_global_var('func_4304')
func_4306_call = mutated_mod.get_global_var('func_4306')
call_9741 = relay.TupleGetItem(func_4304_call(), 0)
call_9742 = relay.TupleGetItem(func_4306_call(), 0)
output = call_9741
output2 = call_9742
func_9756 = relay.Function([], output)
mod['func_9756'] = func_9756
mod = relay.transform.InferType()(mod)
output = func_9756()
func_9757 = relay.Function([], output)
mutated_mod['func_9757'] = func_9757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_9775 = func_3267_call()
call_9776 = func_3267_call()
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_9788 = relay.TupleGetItem(func_3073_call(), 1)
call_9789 = relay.TupleGetItem(func_3075_call(), 1)
output = relay.Tuple([call_9775,call_9788,])
output2 = relay.Tuple([call_9776,call_9789,])
func_9805 = relay.Function([], output)
mod['func_9805'] = func_9805
mod = relay.transform.InferType()(mod)
output = func_9805()
func_9806 = relay.Function([], output)
mutated_mod['func_9806'] = func_9806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_9864 = relay.TupleGetItem(func_5033_call(), 1)
call_9865 = relay.TupleGetItem(func_5035_call(), 1)
func_6009_call = mod.get_global_var('func_6009')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_9873 = relay.TupleGetItem(func_6009_call(), 0)
call_9874 = relay.TupleGetItem(func_6011_call(), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3217_call = mutated_mod.get_global_var('func_3217')
const_9880 = relay.const([-5,-8,-5,5,-9,-7,-3,3,10,-10,2,-1,9,-5,1,2,3,6,10,-7,-6,-2,-1,-1,-9,-5,2,-7,1,-1,1,8,-5,1,-6,6,5,3,5,8,6,-4,-1,-1,-2,-5,-8,-5,9,-10,-4,-9,6,-4,-5,-4,8,-1,-8,1,7,-3,1,7,5,5,8,8,-5,7,-7,-2,9,-1,-8,-7,8,-9,9,9,7,-3,7,9,6,-1,-6,-7,8,4,-2,-10,-2,-9,9,4], dtype = "uint32")#candidate|9880|(96,)|const|uint32
const_9881 = relay.const([False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True], dtype = "bool")#candidate|9881|(520,)|const|bool
call_9879 = relay.TupleGetItem(func_3213_call(relay.reshape(const_9880.astype('uint32'), [8, 12]), relay.reshape(const_9881.astype('bool'), [520,]), ), 2)
call_9882 = relay.TupleGetItem(func_3217_call(relay.reshape(const_9880.astype('uint32'), [8, 12]), relay.reshape(const_9881.astype('bool'), [520,]), ), 2)
func_6985_call = mod.get_global_var('func_6985')
func_6987_call = mutated_mod.get_global_var('func_6987')
call_9909 = relay.TupleGetItem(func_6985_call(), 2)
call_9910 = relay.TupleGetItem(func_6987_call(), 2)
output = relay.Tuple([call_9864,call_9873,call_9879,const_9880,const_9881,call_9909,])
output2 = relay.Tuple([call_9865,call_9874,call_9882,const_9880,const_9881,call_9910,])
func_9911 = relay.Function([], output)
mod['func_9911'] = func_9911
mod = relay.transform.InferType()(mod)
mutated_mod['func_9911'] = func_9911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9911_call = mutated_mod.get_global_var('func_9911')
call_9912 = func_9911_call()
output = call_9912
func_9913 = relay.Function([], output)
mutated_mod['func_9913'] = func_9913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7560_call = mod.get_global_var('func_7560')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_9961 = relay.TupleGetItem(func_7560_call(), 0)
call_9962 = relay.TupleGetItem(func_7561_call(), 0)
output = relay.Tuple([call_9961,])
output2 = relay.Tuple([call_9962,])
func_9966 = relay.Function([], output)
mod['func_9966'] = func_9966
mod = relay.transform.InferType()(mod)
mutated_mod['func_9966'] = func_9966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9966_call = mutated_mod.get_global_var('func_9966')
call_9967 = func_9966_call()
output = call_9967
func_9968 = relay.Function([], output)
mutated_mod['func_9968'] = func_9968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6723_call = mod.get_global_var('func_6723')
func_6724_call = mutated_mod.get_global_var('func_6724')
call_9972 = relay.TupleGetItem(func_6723_call(), 0)
call_9973 = relay.TupleGetItem(func_6724_call(), 0)
func_7391_call = mod.get_global_var('func_7391')
func_7394_call = mutated_mod.get_global_var('func_7394')
call_9979 = relay.TupleGetItem(func_7391_call(relay.reshape(call_9972.astype('float64'), [520, 2])), 0)
call_9980 = relay.TupleGetItem(func_7394_call(relay.reshape(call_9972.astype('float64'), [520, 2])), 0)
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_10008 = relay.TupleGetItem(func_5670_call(), 2)
call_10009 = relay.TupleGetItem(func_5672_call(), 2)
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_10052 = relay.TupleGetItem(func_6927_call(), 0)
call_10053 = relay.TupleGetItem(func_6929_call(), 0)
func_8884_call = mod.get_global_var('func_8884')
func_8886_call = mutated_mod.get_global_var('func_8886')
const_10059 = relay.const([-6,-7,4,2,3,-4,-2,-2,-6,-5,-3,6,-3,-2,-5,10,-1,4,9,3,10,4,-8,-5,5,3,6,10,6,-8,2,-2,4,-2,4,6,-1,-7,7,3,-3,1,-6,1,-2,4,-6,1,-4,5,-6,-3,-9,6,-4,7,-7,-7,1,6,-8,1,7,-5,5,-1,9,10,6,-4,-6,8,-3,-6,-4,8,-1,5,9,10,-10,-6,9,-6,1,3,-5,1,-7,-10,9,2,-7,1,9,-1,-4,-7,-3,8,-7,3,4,-9,3,10,9,4], dtype = "uint32")#candidate|10059|(108,)|const|uint32
call_10058 = relay.TupleGetItem(func_8884_call(relay.reshape(const_10059.astype('uint32'), [3, 36])), 4)
call_10060 = relay.TupleGetItem(func_8886_call(relay.reshape(const_10059.astype('uint32'), [3, 36])), 4)
func_6066_call = mod.get_global_var('func_6066')
func_6068_call = mutated_mod.get_global_var('func_6068')
call_10061 = relay.TupleGetItem(func_6066_call(), 0)
call_10062 = relay.TupleGetItem(func_6068_call(), 0)
func_4814_call = mod.get_global_var('func_4814')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_10088 = relay.TupleGetItem(func_4814_call(relay.reshape(const_10059.astype('uint32'), [4, 9, 3])), 1)
call_10089 = relay.TupleGetItem(func_4817_call(relay.reshape(const_10059.astype('uint32'), [4, 9, 3])), 1)
func_6908_call = mod.get_global_var('func_6908')
func_6909_call = mutated_mod.get_global_var('func_6909')
call_10095 = relay.TupleGetItem(func_6908_call(), 0)
call_10096 = relay.TupleGetItem(func_6909_call(), 0)
output = relay.Tuple([call_9972,call_9979,call_10008,call_10052,call_10058,const_10059,call_10061,call_10088,call_10095,])
output2 = relay.Tuple([call_9973,call_9980,call_10009,call_10053,call_10060,const_10059,call_10062,call_10089,call_10096,])
func_10102 = relay.Function([], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
mutated_mod['func_10102'] = func_10102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10102_call = mutated_mod.get_global_var('func_10102')
call_10103 = func_10102_call()
output = call_10103
func_10104 = relay.Function([], output)
mutated_mod['func_10104'] = func_10104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10226 = relay.var("var_10226", dtype = "int8", shape = (13, 1, 11))#candidate|10226|(13, 1, 11)|var|int8
var_10227 = relay.var("var_10227", dtype = "int8", shape = (13, 16, 11))#candidate|10227|(13, 16, 11)|var|int8
bop_10228 = relay.subtract(var_10226.astype('int8'), var_10227.astype('int8')) # shape=(13, 16, 11)
func_6723_call = mod.get_global_var('func_6723')
func_6724_call = mutated_mod.get_global_var('func_6724')
call_10240 = relay.TupleGetItem(func_6723_call(), 0)
call_10241 = relay.TupleGetItem(func_6724_call(), 0)
const_10249 = relay.const([[[3,-2,-10,-2,-8,-8,2,8,-9,1,-9],[5,-1,10,-6,-3,-5,-1,-7,-4,5,-7],[-1,4,-5,-7,7,-8,1,-4,-10,-7,3],[2,10,-4,-9,-4,5,10,7,2,7,4],[7,6,-6,-4,10,8,3,-9,-4,-1,-2],[-9,-8,5,-3,5,7,-9,4,-2,1,-6],[-2,7,7,5,8,-10,-6,-4,-4,-9,10],[-3,-3,-9,-5,-9,10,-4,-3,-8,-4,-9],[-5,-9,2,9,-6,-8,-7,3,4,8,-7],[2,-1,1,3,6,-3,-7,3,-8,-6,7],[-5,-3,4,4,-4,-1,9,2,4,-9,3],[3,-2,6,-7,-1,-5,3,8,1,6,-8],[-8,8,-8,-8,-3,-8,1,-2,7,3,2],[1,5,-3,-8,5,-9,7,-2,-10,-7,1],[-10,-8,-8,9,9,9,4,5,1,7,5],[-9,8,-3,8,2,-6,-5,1,2,3,-4]],[[-3,10,-8,-8,-10,1,8,4,-5,2,-9],[6,10,-2,1,-2,4,10,1,-7,5,-3],[-2,-7,-5,8,7,-4,10,-1,-3,-5,9],[10,-3,2,-5,-1,2,-3,10,-9,-3,-5],[10,-6,-3,9,-6,1,-6,-9,8,7,9],[-6,-9,-5,9,-5,-8,-3,2,2,-1,-9],[-5,-5,10,2,-1,-8,3,-3,7,-3,-9],[-7,-8,-10,1,-3,10,1,1,-9,2,-3],[3,9,-3,5,1,-4,-1,8,-6,10,3],[7,-7,-8,-6,-3,-8,10,-7,5,7,8],[6,1,9,9,5,7,4,10,-8,-10,-7],[10,-5,1,6,9,-5,1,4,-7,-8,2],[10,4,4,4,4,5,-9,-1,-6,-5,3],[-9,8,7,-10,9,-10,8,7,-5,-6,-8],[9,-1,2,-7,4,3,2,9,10,2,1],[5,-3,-8,-3,5,-8,6,-4,4,-9,-1]],[[8,4,10,-9,7,-8,6,-9,-2,8,3],[-1,-7,3,3,-8,6,10,-8,-6,5,-3],[-1,8,9,5,-10,-6,-1,-2,5,-5,9],[-8,6,-10,-9,10,7,3,-3,-7,5,9],[-4,-10,8,1,-3,-6,2,-10,1,1,7],[4,-2,-5,2,-5,-3,-5,-10,-2,-5,2],[4,-8,-1,3,-3,-9,5,4,-8,-6,-3],[5,9,-6,4,2,9,3,7,7,-2,-6],[2,6,8,2,5,5,-3,-6,9,6,-8],[-10,-6,6,5,7,-4,9,7,5,7,5],[1,10,1,-9,-7,-5,-8,-5,5,-2,6],[-10,3,4,5,1,-1,5,-6,-1,5,-10],[-7,8,6,10,3,7,-5,-5,2,-6,8],[-7,10,-1,-5,10,5,-3,-1,-5,5,10],[4,-2,-3,1,2,8,-7,-6,10,-4,7],[-6,-2,-1,-4,7,-8,4,7,-3,-5,-10]],[[-1,-3,-4,6,4,-10,-2,1,3,3,7],[3,5,3,-10,-2,-9,2,2,7,-9,-2],[1,6,-1,7,8,-2,-5,-3,-7,-6,10],[2,-5,7,7,4,3,1,-10,-6,8,1],[4,-10,1,-7,-3,4,-7,3,-2,-1,-8],[-3,-1,-7,6,2,-6,-10,8,1,-6,1],[-7,9,-3,6,-3,2,-5,-4,-10,10,-1],[-4,-10,4,9,-1,-2,-8,3,8,3,1],[-10,-3,-3,8,-5,-5,-7,-3,4,5,-6],[-3,-8,-6,-1,-3,4,-3,10,3,2,-10],[-6,-7,7,-8,-6,-2,2,-9,5,-5,-9],[7,10,5,-7,2,10,-8,3,1,-7,-8],[-1,1,1,6,-6,1,5,7,5,-7,-1],[1,3,5,-7,8,-10,-5,-6,-2,5,6],[1,4,-5,10,-8,-1,-3,10,7,-7,6],[9,4,-4,-5,1,-6,-2,7,-8,-3,7]],[[-5,-7,4,1,-7,-4,2,-1,10,4,8],[8,10,-4,7,10,-6,-6,2,-10,10,1],[2,10,8,10,4,5,8,-6,9,-8,-4],[5,4,8,-1,-5,-2,7,-10,8,-6,7],[-10,-8,-10,4,-3,-1,-6,10,-7,10,-1],[-1,-3,7,2,3,9,-3,-10,-3,5,1],[-1,9,-7,9,-8,-2,-9,-2,3,5,9],[-10,-6,-3,7,4,-6,-7,-4,4,7,2],[-5,9,10,-1,-3,-9,4,-9,7,-10,-6],[9,-5,1,6,-10,-10,10,-4,-10,-2,5],[10,-8,9,1,6,7,-10,3,-2,9,-3],[-1,-10,3,9,-7,-4,-7,2,8,7,-9],[-4,6,-7,-7,4,7,-10,-5,8,9,4],[5,-5,3,-8,2,7,7,3,-4,1,-2],[-2,1,6,4,-7,9,1,7,-6,-1,-7],[9,-2,6,4,6,4,8,9,-3,10,-10]],[[3,10,6,-2,-2,2,4,9,5,-6,3],[10,-7,-8,-4,7,8,7,-3,-7,-10,8],[7,1,-1,3,-2,-7,6,3,-6,7,10],[-5,1,-7,-1,4,-10,-9,4,6,5,-5],[9,-10,10,8,-1,4,-7,4,4,5,5],[-7,-6,-6,-8,-3,-1,-3,-2,3,-4,-5],[6,8,-9,5,6,6,-7,-2,-3,4,-8],[5,8,3,-2,2,10,-1,-2,7,-10,-10],[5,-2,7,-2,-2,4,4,-9,-8,8,2],[10,-6,2,8,-3,-3,1,10,4,-10,-10],[-10,5,-2,7,-2,10,2,4,-3,2,9],[-6,7,-8,10,5,9,-7,1,-4,3,-1],[-5,6,9,6,3,6,1,9,6,-3,-4],[-5,-6,-9,5,3,-4,-10,7,10,7,2],[-4,1,-6,4,-5,-4,7,10,-3,4,2],[-8,-9,10,8,5,-2,-1,-1,8,-1,-6]],[[8,-4,9,-6,-1,9,-7,-9,-1,-7,1],[3,3,7,-6,6,-1,4,-8,10,-9,1],[-9,10,-5,7,7,5,1,-5,6,-2,-10],[6,7,7,-6,1,-1,9,10,-1,6,-6],[-9,-6,2,2,2,-2,-6,4,-9,9,-6],[7,4,2,7,7,-10,-3,-10,-6,4,3],[7,4,-4,10,-3,7,-7,9,8,-10,-10],[-1,-7,-5,5,1,-7,9,-7,-5,-6,-8],[-1,6,3,-10,-6,-5,7,4,-10,-5,-1],[10,3,-8,8,-3,5,2,5,2,10,6],[7,-9,-6,-6,9,5,-3,-5,1,2,9],[-3,-6,8,2,5,-4,8,1,9,10,-3],[6,-4,8,-2,-1,-3,-2,5,3,-5,6],[-8,-7,-6,2,-10,1,-7,1,8,-4,1],[10,-10,-5,1,-8,10,-10,2,8,-10,5],[10,7,-8,-8,5,-4,-2,-9,2,-6,3]],[[-1,-5,7,9,-5,6,4,-10,-2,2,-9],[-4,-7,-6,-9,8,3,8,-1,2,6,5],[-5,-4,-10,-10,9,9,-2,-1,-5,-10,2],[-10,7,-8,-3,2,-8,2,3,8,8,1],[2,1,-3,-6,1,10,10,-10,1,-9,-8],[-8,7,-4,1,6,-9,1,-10,-7,-6,8],[4,-9,9,5,-2,-10,-7,3,2,-3,6],[3,4,-4,6,4,-9,-7,2,-8,3,1],[-4,7,-4,9,4,-6,1,-9,-4,-8,-8],[1,-5,4,7,-7,4,7,4,-7,-9,9],[5,-8,10,1,-1,10,1,5,3,-9,3],[4,5,8,-8,-3,-4,1,-8,-4,7,8],[-1,-8,-2,1,4,-5,-1,-2,-1,-10,-7],[-10,5,6,1,-10,5,-5,6,4,-3,10],[5,1,-6,-10,-3,-5,-6,10,5,8,-9],[-6,-2,4,3,-9,3,-4,-4,9,-7,-6]],[[7,10,8,-1,4,-10,10,-2,-8,-1,3],[-2,-2,-2,9,-1,6,8,9,10,5,-10],[6,9,-2,-6,8,10,1,6,-4,4,-8],[3,-10,-3,-3,-3,4,2,2,1,-6,-9],[-4,6,-4,7,3,-9,5,1,6,6,5],[4,-5,-9,-5,-9,5,-9,6,-1,8,-3],[6,10,7,10,3,1,-10,-1,1,5,5],[-7,10,1,9,-10,9,7,-5,10,-2,5],[1,8,-6,-8,-9,-2,-2,-8,7,8,-9],[2,1,-1,2,6,4,5,-6,-10,9,-5],[-5,4,2,-9,-8,-4,-2,-1,-3,-8,-10],[6,8,-3,10,-8,3,-8,-5,-6,8,1],[7,6,10,8,9,-7,1,-3,-8,-7,-2],[-5,-4,7,3,3,9,-1,-3,8,4,-8],[5,-8,-2,-5,-2,1,-5,1,6,9,3],[-4,-10,10,-8,-9,-2,10,-3,-10,7,-4]],[[-10,10,7,3,1,10,-2,5,1,-4,4],[8,-9,2,-10,8,-1,7,-10,-10,8,2],[10,-9,-5,5,7,7,-2,3,7,-3,2],[6,10,2,-6,5,6,-7,9,2,-7,-3],[10,-2,-9,-3,5,-2,-5,-3,3,-7,4],[-3,7,-10,-6,3,10,3,10,-2,-5,-2],[-3,1,2,6,-3,-10,6,-5,4,-8,-3],[6,9,10,2,-6,4,-10,7,-4,-7,-3],[4,-7,5,-5,-8,-2,8,-9,-4,5,4],[6,-3,2,-5,-3,2,-1,5,3,-6,-10],[-9,-7,4,10,-9,-9,-9,2,-7,-4,7],[6,-1,7,8,-6,-6,9,-4,10,-7,6],[4,-9,3,2,1,3,-10,1,-6,4,-9],[4,2,-9,-2,3,2,-7,-7,6,8,10],[-10,6,10,-9,-3,-2,-4,-1,5,2,-8],[-4,-1,-3,-2,9,-5,-7,6,-4,9,-3]],[[-7,9,10,1,4,5,6,4,-2,-9,9],[4,3,4,5,3,2,6,-7,2,-2,7],[-6,7,6,-8,3,-8,-1,-6,-8,8,5],[3,-3,-3,5,-7,3,-10,-10,-3,2,9],[4,10,6,-3,4,-5,3,3,10,-9,-4],[3,9,6,5,-7,-1,-2,-4,10,-1,8],[2,3,3,-6,-3,10,-3,7,4,-9,-8],[-3,-6,-4,-7,2,-6,-1,9,6,4,-5],[-4,9,6,-4,8,9,-10,10,5,-5,7],[8,3,7,1,6,-6,-7,2,-7,9,-4],[-6,6,-8,-2,9,10,-5,-9,3,-6,-10],[-1,4,-5,-1,2,5,1,-9,8,-3,9],[-9,6,8,1,5,-2,-10,-2,6,-10,-1],[2,-4,-9,-3,6,-9,-4,-6,-4,-6,2],[3,-7,-7,8,8,10,-4,-8,7,9,-6],[-10,-9,-3,-3,3,8,-5,-8,5,-4,-9]],[[-3,-5,1,-6,-8,-9,-3,4,-9,1,6],[4,-10,-2,-5,-3,8,-9,-6,5,-1,3],[-7,9,-1,-3,8,-2,6,3,3,-10,-7],[-9,3,-7,6,-8,6,-1,2,5,-1,8],[-9,1,-6,4,-9,6,-4,-4,-4,7,2],[8,-10,-3,8,-10,-10,-2,9,4,8,10],[5,-6,8,1,-9,-3,-2,2,8,10,1],[8,7,-10,2,-10,-3,7,10,-3,-7,-10],[5,-10,3,2,-1,6,10,4,7,10,2],[3,-7,1,-5,4,2,-10,1,1,-2,-9],[-4,-6,-9,-10,4,-3,2,-7,-4,4,5],[2,-7,8,-1,-2,4,-5,6,3,1,-3],[9,-7,-10,-10,-8,-1,-3,-4,9,-9,-6],[5,-10,-2,-6,3,4,10,-2,9,1,4],[-8,-10,6,10,-4,4,7,8,-2,1,-2],[9,1,5,-7,-8,9,2,9,-7,-8,10]],[[10,1,8,7,-2,5,4,7,-9,6,5],[3,-1,9,-5,7,7,-5,-9,-5,9,-6],[8,-4,-10,-6,8,9,2,-1,4,-2,5],[6,-10,-8,-10,1,8,6,-6,3,4,5],[7,-4,-3,4,4,3,10,2,-6,8,10],[1,8,2,-5,1,1,5,-4,2,-10,1],[-6,9,-7,7,-3,-5,-4,7,4,-1,5],[-8,8,6,-7,-7,-3,-7,5,10,-4,-3],[4,6,-7,-10,5,-3,2,-1,8,3,6],[4,6,3,10,6,5,-9,-1,7,1,-10],[-9,1,9,-1,-6,8,10,3,7,-4,-3],[5,6,-1,1,-7,2,-10,-1,-8,7,-2],[9,-8,7,7,7,-6,-5,9,10,-6,1],[7,-8,-3,-3,3,8,-8,-5,7,-8,-6],[-9,7,-8,-6,-9,-5,8,-2,-10,-2,-6],[5,5,7,4,6,-8,-7,-6,-9,5,-1]]], dtype = "int8")#candidate|10249|(13, 16, 11)|const|int8
bop_10250 = relay.add(var_10227.astype('uint16'), relay.reshape(const_10249.astype('uint16'), relay.shape_of(var_10227))) # shape=(13, 16, 11)
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_10253 = relay.TupleGetItem(func_5033_call(), 0)
call_10254 = relay.TupleGetItem(func_5035_call(), 0)
func_6677_call = mod.get_global_var('func_6677')
func_6678_call = mutated_mod.get_global_var('func_6678')
call_10255 = relay.TupleGetItem(func_6677_call(), 0)
call_10256 = relay.TupleGetItem(func_6678_call(), 0)
output = relay.Tuple([bop_10228,call_10240,bop_10250,call_10253,call_10255,])
output2 = relay.Tuple([bop_10228,call_10241,bop_10250,call_10254,call_10256,])
func_10266 = relay.Function([var_10226,var_10227,], output)
mod['func_10266'] = func_10266
mod = relay.transform.InferType()(mod)
var_10267 = relay.var("var_10267", dtype = "int8", shape = (13, 1, 11))#candidate|10267|(13, 1, 11)|var|int8
var_10268 = relay.var("var_10268", dtype = "int8", shape = (13, 16, 11))#candidate|10268|(13, 16, 11)|var|int8
output = func_10266(var_10267,var_10268,)
func_10269 = relay.Function([var_10267,var_10268,], output)
mutated_mod['func_10269'] = func_10269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7564_call = mod.get_global_var('func_7564')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_10274 = func_7564_call()
call_10275 = func_7564_call()
output = relay.Tuple([call_10274,])
output2 = relay.Tuple([call_10275,])
func_10279 = relay.Function([], output)
mod['func_10279'] = func_10279
mod = relay.transform.InferType()(mod)
mutated_mod['func_10279'] = func_10279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10279_call = mutated_mod.get_global_var('func_10279')
call_10280 = func_10279_call()
output = call_10280
func_10281 = relay.Function([], output)
mutated_mod['func_10281'] = func_10281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7083_call = mod.get_global_var('func_7083')
func_7085_call = mutated_mod.get_global_var('func_7085')
call_10288 = relay.TupleGetItem(func_7083_call(), 0)
call_10289 = relay.TupleGetItem(func_7085_call(), 0)
output = relay.Tuple([call_10288,])
output2 = relay.Tuple([call_10289,])
func_10293 = relay.Function([], output)
mod['func_10293'] = func_10293
mod = relay.transform.InferType()(mod)
mutated_mod['func_10293'] = func_10293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10293_call = mutated_mod.get_global_var('func_10293')
call_10294 = func_10293_call()
output = call_10294
func_10295 = relay.Function([], output)
mutated_mod['func_10295'] = func_10295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_10339 = func_4332_call()
call_10340 = func_4332_call()
func_3444_call = mod.get_global_var('func_3444')
func_3448_call = mutated_mod.get_global_var('func_3448')
var_10353 = relay.var("var_10353", dtype = "uint64", shape = (600,))#candidate|10353|(600,)|var|uint64
const_10354 = relay.const([[9,-9,9,6,-2,5,5,-4],[-10,-8,7,9,-4,5,6,-9],[1,-6,7,-8,-2,10,-8,10],[1,-7,1,8,6,1,9,7],[-9,8,6,-4,2,6,10,6],[-2,-4,10,8,-5,9,10,-2],[10,-6,10,5,-6,10,6,9],[-10,1,-5,5,10,4,10,3],[-7,-6,-1,-9,-1,4,8,5],[8,-9,9,-5,-9,-2,-4,-9],[-6,-10,-6,-5,-9,-4,4,-4],[-9,7,8,-6,-8,6,-3,-7],[-9,-7,5,4,3,-10,9,-9],[-8,6,-6,-10,1,10,-10,3],[1,6,2,-1,-10,-1,-6,7],[5,-7,4,-9,5,8,-4,5],[-1,-3,-3,-7,5,1,-8,-5],[-2,6,-4,-10,4,-4,-1,6],[-2,-4,-5,-7,8,-4,-6,1],[-3,-3,-2,6,3,6,9,-3],[-1,3,9,-6,7,5,-9,9],[-3,-1,-7,3,-6,-3,9,5],[4,-5,9,-10,-3,10,-1,-8],[-3,-1,5,-10,3,8,-9,3],[3,6,3,-10,1,10,1,6],[6,-4,-1,4,6,-7,6,-10],[-10,-5,-4,-9,7,9,-7,1],[4,4,10,1,-1,2,-8,10],[-1,-3,2,-2,-1,-6,-7,10],[2,9,4,-7,10,-6,-2,-8],[-3,-7,-3,3,-1,-2,6,2],[-10,10,-2,-10,-4,3,-5,8],[4,-3,6,2,-5,-6,10,8],[10,3,5,-6,-2,-7,-2,6],[-2,-4,7,8,2,-2,3,-10],[10,-6,-9,-3,3,-7,-5,-10],[2,-9,-10,10,10,-4,-3,-7],[10,-7,-8,-9,10,-6,8,6],[-10,10,2,3,1,-5,4,9],[-7,-4,-9,-4,10,8,7,-2],[10,8,10,-4,-1,-9,-2,10],[7,2,8,6,7,-7,-9,3],[9,-1,-5,1,-5,2,9,7],[-7,-3,-9,4,-5,2,10,-5],[-7,9,1,-9,-10,-4,-4,-6],[-9,7,-10,-4,1,-2,1,9],[4,-9,8,1,-10,1,-5,-4],[-8,4,1,-6,6,-3,-5,-5],[8,4,-4,6,-2,-8,3,-3],[5,10,7,-10,4,-2,-4,8],[4,2,8,4,4,-9,7,2],[1,-10,10,3,-3,-2,5,3],[-3,9,-4,3,6,6,4,-7],[-2,3,-9,5,-3,-1,9,8],[-10,3,-2,1,-6,1,-7,-5],[5,10,-6,6,-1,10,4,2],[-6,5,1,6,-4,-9,3,-9],[-4,4,3,-9,-10,6,8,-5],[3,2,9,3,-5,4,6,8],[-2,10,-4,-2,2,6,6,-6],[-5,-2,8,-8,8,1,-7,6],[3,7,-6,2,8,8,1,-10],[-4,-1,-8,5,2,9,-7,9],[10,-9,-6,4,9,8,6,8],[-2,2,9,3,-5,9,9,4],[-5,-8,6,-6,4,6,-2,1],[3,-4,-3,4,-1,-10,2,-2],[8,9,-1,-8,-1,-8,9,6],[5,4,9,3,-10,2,8,-10],[-5,-10,-6,-5,3,1,-3,5],[7,5,7,5,5,-9,3,-9],[10,9,8,-4,-5,4,-2,-7],[8,4,-4,-3,8,9,-1,4],[-8,9,4,8,6,1,-2,-6],[2,8,-1,-2,10,4,10,5],[8,-3,-7,6,-6,1,5,10],[9,1,6,-1,-7,-2,-3,-4],[-10,5,-9,-3,8,-2,-3,-10],[8,-2,-9,3,-6,-10,1,-1],[-10,-10,-7,-3,-7,10,9,10],[-5,4,-5,-7,-3,1,-2,8],[-9,2,-3,3,-2,-10,4,10],[4,5,-2,-10,1,10,-4,-5],[9,8,-6,10,5,1,-1,1],[3,-5,-8,2,10,5,10,-6],[-9,9,-5,-3,10,-2,-5,8],[-10,-4,2,10,-6,6,4,5],[6,1,4,2,10,-8,-8,2],[3,-6,10,7,-10,-3,4,-2],[-3,-2,8,4,-9,-10,1,4],[-8,9,6,-3,10,5,-6,-6],[9,-8,5,5,-4,-10,-7,-9],[5,-2,-5,-9,2,2,-10,-9],[-8,8,-8,-7,7,7,2,-10],[3,7,-8,-4,-10,-10,-5,-1],[-5,8,3,-6,-3,-6,-9,9],[8,-10,4,-9,-2,-7,8,-2],[9,6,5,4,-3,10,-9,-3],[-7,-3,1,-7,1,-10,2,-1],[1,-6,-9,2,-1,5,-3,6],[5,3,3,7,-2,4,8,-8],[5,5,4,-10,-2,-6,-5,-7],[6,-6,-9,-5,-9,-6,4,-8],[-10,5,-10,9,-9,-7,9,-5]], dtype = "uint64")#candidate|10354|(104, 8)|const|uint64
call_10352 = relay.TupleGetItem(func_3444_call(relay.reshape(var_10353.astype('uint64'), [8, 15, 5]), relay.reshape(var_10353.astype('uint64'), [8, 15, 5]), relay.reshape(const_10354.astype('uint64'), [832,]), ), 0)
call_10355 = relay.TupleGetItem(func_3448_call(relay.reshape(var_10353.astype('uint64'), [8, 15, 5]), relay.reshape(var_10353.astype('uint64'), [8, 15, 5]), relay.reshape(const_10354.astype('uint64'), [832,]), ), 0)
output = relay.Tuple([call_10339,call_10352,var_10353,const_10354,])
output2 = relay.Tuple([call_10340,call_10355,var_10353,const_10354,])
func_10356 = relay.Function([var_10353,], output)
mod['func_10356'] = func_10356
mod = relay.transform.InferType()(mod)
var_10357 = relay.var("var_10357", dtype = "uint64", shape = (600,))#candidate|10357|(600,)|var|uint64
output = func_10356(var_10357)
func_10358 = relay.Function([var_10357], output)
mutated_mod['func_10358'] = func_10358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6590_call = mod.get_global_var('func_6590')
func_6591_call = mutated_mod.get_global_var('func_6591')
call_10416 = relay.TupleGetItem(func_6590_call(), 0)
call_10417 = relay.TupleGetItem(func_6591_call(), 0)
func_6009_call = mod.get_global_var('func_6009')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_10438 = relay.TupleGetItem(func_6009_call(), 0)
call_10439 = relay.TupleGetItem(func_6011_call(), 0)
func_9657_call = mod.get_global_var('func_9657')
func_9658_call = mutated_mod.get_global_var('func_9658')
call_10443 = relay.TupleGetItem(func_9657_call(), 4)
call_10444 = relay.TupleGetItem(func_9658_call(), 4)
func_9346_call = mod.get_global_var('func_9346')
func_9347_call = mutated_mod.get_global_var('func_9347')
call_10453 = relay.TupleGetItem(func_9346_call(), 0)
call_10454 = relay.TupleGetItem(func_9347_call(), 0)
output = relay.Tuple([call_10416,call_10438,call_10443,call_10453,])
output2 = relay.Tuple([call_10417,call_10439,call_10444,call_10454,])
func_10457 = relay.Function([], output)
mod['func_10457'] = func_10457
mod = relay.transform.InferType()(mod)
mutated_mod['func_10457'] = func_10457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10457_call = mutated_mod.get_global_var('func_10457')
call_10458 = func_10457_call()
output = call_10458
func_10459 = relay.Function([], output)
mutated_mod['func_10459'] = func_10459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9066_call = mod.get_global_var('func_9066')
func_9068_call = mutated_mod.get_global_var('func_9068')
call_10512 = func_9066_call()
call_10513 = func_9066_call()
output = call_10512
output2 = call_10513
func_10518 = relay.Function([], output)
mod['func_10518'] = func_10518
mod = relay.transform.InferType()(mod)
output = func_10518()
func_10519 = relay.Function([], output)
mutated_mod['func_10519'] = func_10519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_10543 = relay.TupleGetItem(func_3073_call(), 2)
call_10544 = relay.TupleGetItem(func_3075_call(), 2)
func_7564_call = mod.get_global_var('func_7564')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_10545 = func_7564_call()
call_10546 = func_7564_call()
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_10556 = relay.TupleGetItem(func_6860_call(), 1)
call_10557 = relay.TupleGetItem(func_6862_call(), 1)
bop_10572 = relay.greater(call_10545.astype('bool'), relay.reshape(call_10556.astype('bool'), relay.shape_of(call_10545))) # shape=(4, 1, 3)
bop_10575 = relay.greater(call_10546.astype('bool'), relay.reshape(call_10557.astype('bool'), relay.shape_of(call_10546))) # shape=(4, 1, 3)
func_10266_call = mod.get_global_var('func_10266')
func_10269_call = mutated_mod.get_global_var('func_10269')
var_10598 = relay.var("var_10598", dtype = "int8", shape = (143,))#candidate|10598|(143,)|var|int8
var_10599 = relay.var("var_10599", dtype = "int8", shape = (1144, 2))#candidate|10599|(1144, 2)|var|int8
call_10597 = relay.TupleGetItem(func_10266_call(relay.reshape(var_10598.astype('int8'), [13, 1, 11]), relay.reshape(var_10599.astype('int8'), [13, 16, 11]), ), 0)
call_10600 = relay.TupleGetItem(func_10269_call(relay.reshape(var_10598.astype('int8'), [13, 1, 11]), relay.reshape(var_10599.astype('int8'), [13, 16, 11]), ), 0)
uop_10607 = relay.asinh(var_10599.astype('float64')) # shape=(1144, 2)
output = relay.Tuple([call_10543,bop_10572,call_10597,var_10598,uop_10607,])
output2 = relay.Tuple([call_10544,bop_10575,call_10600,var_10598,uop_10607,])
func_10615 = relay.Function([var_10598,var_10599,], output)
mod['func_10615'] = func_10615
mod = relay.transform.InferType()(mod)
var_10616 = relay.var("var_10616", dtype = "int8", shape = (143,))#candidate|10616|(143,)|var|int8
var_10617 = relay.var("var_10617", dtype = "int8", shape = (1144, 2))#candidate|10617|(1144, 2)|var|int8
output = func_10615(var_10616,var_10617,)
func_10618 = relay.Function([var_10616,var_10617,], output)
mutated_mod['func_10618'] = func_10618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7982_call = mod.get_global_var('func_7982')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_10620 = func_7982_call()
call_10621 = func_7982_call()
output = relay.Tuple([call_10620,])
output2 = relay.Tuple([call_10621,])
func_10636 = relay.Function([], output)
mod['func_10636'] = func_10636
mod = relay.transform.InferType()(mod)
mutated_mod['func_10636'] = func_10636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10636_call = mutated_mod.get_global_var('func_10636')
call_10637 = func_10636_call()
output = call_10637
func_10638 = relay.Function([], output)
mutated_mod['func_10638'] = func_10638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10652 = relay.var("var_10652", dtype = "int8", shape = (10, 16, 4))#candidate|10652|(10, 16, 4)|var|int8
const_10653 = relay.const([[[-1,10,-2,10],[7,-2,3,-8],[4,-8,6,5],[-7,-3,3,7],[-2,-3,-7,-8],[1,3,-9,4],[3,-4,-5,-3],[2,-3,1,1],[9,10,9,10],[-10,-1,-4,-2],[8,9,7,-8],[-7,-5,3,4],[10,-7,1,-6],[-10,10,5,-2],[8,-8,1,-3],[9,9,-4,5]],[[4,-10,1,6],[6,-7,7,-3],[1,9,9,2],[-10,9,3,-7],[-6,-4,4,10],[7,10,-9,1],[4,5,2,1],[-10,7,4,10],[10,7,-5,3],[-6,-8,-5,6],[6,3,1,-1],[4,-4,-1,-8],[-10,4,-4,9],[-9,-5,-3,6],[-4,-9,-4,-8],[10,5,-8,-2]],[[-8,6,-5,-1],[10,-1,-1,-4],[7,-2,6,7],[3,5,7,-2],[6,-8,-2,5],[9,7,-4,-6],[4,10,-1,-6],[-3,6,10,6],[5,-5,6,-1],[8,6,-10,-1],[-4,6,9,10],[3,-1,-3,9],[2,-4,-5,-5],[4,-3,6,9],[-6,-5,-7,7],[8,-4,-7,-8]],[[-8,1,-9,4],[-8,6,-2,3],[-9,5,3,5],[3,4,-2,-3],[7,4,10,9],[-9,-3,-3,-1],[7,6,1,1],[3,-4,-8,-7],[-8,-2,1,6],[10,10,-6,-4],[10,-2,5,3],[-1,-3,5,-5],[-1,1,10,-1],[-9,-4,6,9],[-1,-5,4,-2],[-6,-3,7,3]],[[-7,-9,6,-9],[-4,1,10,6],[-8,-8,10,9],[-7,8,-2,-1],[9,-6,-1,-9],[8,5,-7,1],[-1,-10,-1,8],[1,3,6,2],[5,10,3,-2],[-9,-10,7,4],[10,-8,2,10],[-1,7,-6,-5],[-9,8,-6,4],[7,-4,5,4],[-1,-6,-10,8],[-9,3,6,-6]],[[-4,-8,7,6],[5,-10,-7,6],[9,-2,-10,4],[-7,-5,-4,-7],[-7,1,-6,8],[6,-2,4,-2],[9,6,4,9],[7,-4,6,3],[6,-7,-10,6],[5,-10,3,4],[8,3,1,3],[7,1,1,-9],[6,1,-3,4],[4,-8,8,1],[3,-7,-8,-2],[-10,-10,-5,-9]],[[-3,6,9,5],[-4,10,-5,7],[5,-2,-6,9],[7,8,6,-2],[-10,-6,-10,10],[-4,-7,1,8],[-8,2,5,2],[1,-4,7,-8],[4,-6,5,-10],[8,7,-1,-7],[7,5,-1,6],[6,8,5,10],[10,-6,4,5],[1,-1,-8,1],[8,-7,-2,-8],[2,2,2,9]],[[-8,6,-10,3],[-2,4,-3,-3],[-3,-7,-3,1],[-2,3,5,-5],[-6,6,-3,-7],[-1,7,8,-4],[-2,5,-7,1],[1,5,-3,-10],[5,-4,3,5],[4,10,2,4],[5,9,8,-3],[-3,5,-1,4],[-1,4,10,9],[-1,-6,3,9],[9,-1,-10,-6],[-3,9,-7,9]],[[3,-1,-1,9],[-9,5,6,1],[-1,-4,7,4],[-2,3,7,-7],[-3,5,7,8],[-10,-10,-8,-4],[5,2,10,1],[10,-1,-6,-9],[-7,7,-10,-1],[-9,-9,-4,-5],[-10,3,4,2],[-10,3,3,6],[-8,-3,-7,1],[5,-2,2,2],[-6,-2,8,4],[-6,5,9,-9]],[[-6,9,5,9],[1,-3,-9,-5],[-9,-5,10,7],[8,-5,-5,6],[-7,7,5,5],[5,9,10,-9],[10,6,-5,5],[-6,10,7,7],[1,7,7,-3],[10,10,-7,-9],[-3,8,1,-9],[6,-2,-7,8],[-10,5,-8,4],[2,8,-3,8],[-5,3,-10,2],[-4,-10,1,9]]], dtype = "int8")#candidate|10653|(10, 16, 4)|const|int8
bop_10654 = relay.bitwise_and(var_10652.astype('int8'), relay.reshape(const_10653.astype('int8'), relay.shape_of(var_10652))) # shape=(10, 16, 4)
output = bop_10654
output2 = bop_10654
func_10673 = relay.Function([var_10652,], output)
mod['func_10673'] = func_10673
mod = relay.transform.InferType()(mod)
mutated_mod['func_10673'] = func_10673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10674 = relay.var("var_10674", dtype = "int8", shape = (10, 16, 4))#candidate|10674|(10, 16, 4)|var|int8
func_10673_call = mutated_mod.get_global_var('func_10673')
call_10675 = func_10673_call(var_10674)
output = call_10675
func_10676 = relay.Function([var_10674], output)
mutated_mod['func_10676'] = func_10676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_10735 = func_4406_call()
call_10736 = func_4406_call()
output = call_10735
output2 = call_10736
func_10742 = relay.Function([], output)
mod['func_10742'] = func_10742
mod = relay.transform.InferType()(mod)
mutated_mod['func_10742'] = func_10742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10742_call = mutated_mod.get_global_var('func_10742')
call_10743 = func_10742_call()
output = call_10743
func_10744 = relay.Function([], output)
mutated_mod['func_10744'] = func_10744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_10774 = func_5095_call()
call_10775 = func_5095_call()
output = call_10774
output2 = call_10775
func_10776 = relay.Function([], output)
mod['func_10776'] = func_10776
mod = relay.transform.InferType()(mod)
mutated_mod['func_10776'] = func_10776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10776_call = mutated_mod.get_global_var('func_10776')
call_10777 = func_10776_call()
output = call_10777
func_10778 = relay.Function([], output)
mutated_mod['func_10778'] = func_10778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10636_call = mod.get_global_var('func_10636')
func_10638_call = mutated_mod.get_global_var('func_10638')
call_10788 = relay.TupleGetItem(func_10636_call(), 0)
call_10789 = relay.TupleGetItem(func_10638_call(), 0)
func_8133_call = mod.get_global_var('func_8133')
func_8136_call = mutated_mod.get_global_var('func_8136')
var_10795 = relay.var("var_10795", dtype = "uint64", shape = (1008,))#candidate|10795|(1008,)|var|uint64
var_10796 = relay.var("var_10796", dtype = "bool", shape = (520,))#candidate|10796|(520,)|var|bool
call_10794 = relay.TupleGetItem(func_8133_call(relay.reshape(var_10795.astype('uint64'), [1008, 1]), relay.reshape(var_10796.astype('bool'), [1, 520]), ), 1)
call_10797 = relay.TupleGetItem(func_8136_call(relay.reshape(var_10795.astype('uint64'), [1008, 1]), relay.reshape(var_10796.astype('bool'), [1, 520]), ), 1)
func_10266_call = mod.get_global_var('func_10266')
func_10269_call = mutated_mod.get_global_var('func_10269')
const_10801 = relay.const([4,-5,6,9,-6,-10,-1,-7,-4,-3,7,-9,-6,10,-4,2,-8,-9,8,4,10,1,6,6,-7,6,2,2,4,-2,2,-8,-2,3,-4,-5,4,6,4,-2,10,4,5,10,8,8,5,-10,-3,-8,-3,-1,-9,-7,-6,3,-8,8,2,3,-9,10,8,-2,7,8,-2,-7,4,5,2,8,6,-3,3,8,10,-5,-2,-9,-4,6,-6,9,6,3,-2,10,-6,-8,-1,-10,-6,9,-9,-6,-7,-3,7,4,5,-3,-10,-7,-6,-7,1,9,-2,5,9,6,-6,-9,-10,8,2,-2,-4,9,4,-10,1,2,8,-5,-1,-2,-2,1,4,5,1,-8,-6,5,-1,5,-4,7,6,-10,-5], dtype = "int8")#candidate|10801|(143,)|const|int8
const_10802 = relay.const([-3,-6,4,-5,-9,-9,8,-7,1,-2,8,-9,-9,1,-1,-10,-1,-3,8,-9,9,-1,4,-5,-9,9,6,10,-9,1,7,4,6,4,-5,10,-3,-10,-9,1,4,5,-10,-5,-8,-8,-8,3,-2,-7,-10,-1,-9,9,6,8,-1,-9,-8,9,3,-2,-2,4,-2,10,-7,4,-10,6,2,-7,4,6,-2,-1,4,5,-6,9,9,9,-10,4,5,-7,1,-2,2,1,2,-1,5,4,7,1,-5,-4,3,-5,7,7,-6,4,-6,-5,9,9,-4,-7,-6,-8,9,8,-9,2,4,5,10,-9,-8,-9,10,1,8,-6,-6,-9,-6,7,-7,3,-8,-3,-2,7,7,-5,1,-5,-5,5,-5,4,-1,-9,8,10,-2,6,-7,2,-8,-5,4,-10,-8,10,-1,-5,3,-1,-5,1,-5,-1,-10,8,-1,-9,-10,-4,5,-4,-8,9,2,-4,-2,-4,2,1,8,1,2,-4,10,3,-4,6,-5,-3,6,5,2,6,5,-7,-7,-4,-10,-3,8,10,2,-6,-10,5,-8,-3,-10,-6,8,-9,4,6,-2,8,5,-6,3,-6,-10,-8,-1,-1,-2,5,-2,7,-8,2,1,3,-8,-5,-10,-4,1,-1,5,-3,-10,-6,-5,-2,5,-2,-4,4,-4,4,1,-4,-10,-5,8,-1,-6,-3,-10,-3,-9,-5,2,8,10,7,10,4,-6,-4,-6,-3,1,-3,-2,-8,-3,-7,-4,-10,7,-6,1,-8,8,3,4,-8,3,6,10,-10,8,-8,2,-7,-7,7,-4,7,6,7,8,-5,-7,-8,-6,9,-6,6,-7,9,5,-2,-1,-2,10,7,5,9,-6,8,-5,-5,4,-9,4,6,3,10,-8,-1,2,-6,-3,-8,4,-10,-2,10,-8,-8,-8,-6,2,-5,10,1,-5,10,2,6,3,4,4,-3,4,9,-8,3,10,-2,-5,4,-8,7,-2,5,-10,3,5,-8,-7,-3,9,5,-5,2,10,9,8,-7,10,8,-10,-3,4,4,-8,8,-2,-9,-2,6,-4,-9,10,7,-7,-9,3,-10,3,2,-10,9,5,-8,8,8,-8,6,-4,-7,7,8,5,-9,-3,-2,-1,-4,10,5,5,-9,2,-10,-8,7,-10,-5,2,-7,-5,7,-9,-4,2,-4,5,-1,-1,-5,-9,-6,7,8,-5,6,2,-8,2,-10,5,5,-9,9,9,-1,-8,9,-6,9,-2,5,-8,-4,7,7,10,-2,-8,1,8,-6,-6,-4,-4,6,-9,1,-4,-8,-1,-4,6,-1,8,-2,1,5,-6,2,3,7,8,7,-3,6,-9,4,-8,-2,7,5,3,-5,-8,-9,4,-2,4,-8,-6,10,5,-5,-8,-9,8,-3,1,-9,5,-1,4,1,5,-2,4,-10,-5,-9,-9,-8,-10,9,-8,-2,6,10,-7,7,-2,4,-2,-4,7,-2,2,5,-10,7,3,-1,-3,9,3,1,-5,-3,9,-4,3,-5,5,-10,4,-2,-7,4,-3,-9,8,-6,-6,2,6,-4,-3,3,10,-2,1,1,-9,7,9,10,9,-10,5,-2,9,10,-6,-7,-8,-1,5,8,-7,5,2,-3,3,8,7,-7,-8,8,1,2,-8,-10,-5,6,3,7,-9,6,6,-10,-6,1,5,9,7,-7,4,-8,4,-2,7,2,-2,10,4,2,6,-3,-3,6,6,4,1,-1,-6,-3,4,9,-6,5,8,2,-3,4,9,-7,-3,5,1,-8,8,-9,7,-10,8,6,5,9,-7,3,3,3,8,-10,5,-9,-1,7,8,-4,-3,4,10,-3,6,-3,5,-7,-3,6,-8,10,3,9,5,10,4,5,7,1,3,4,-9,4,9,1,-5,9,8,-9,-1,-10,-3,9,2,-3,3,4,-8,5,8,-9,4,-1,5,-7,1,1,2,-3,-1,1,4,5,6,3,3,7,9,-2,-9,1,8,-5,-4,-5,7,-9,3,-6,4,-3,1,-6,7,3,7,-10,-7,-5,5,6,-8,-6,-10,8,-2,-1,-10,-1,3,6,9,-8,1,7,-5,-10,9,4,8,3,4,1,9,2,8,-5,-4,-3,-6,10,5,-4,6,4,-9,-2,-1,6,8,3,6,3,10,-4,6,8,4,6,8,-3,-10,-8,1,2,-2,3,4,-9,-4,3,-6,1,-2,9,-10,-7,-9,-1,10,8,-8,-3,9,-9,4,-2,2,8,2,-6,-10,-3,9,-7,-7,5,8,-2,-10,9,-2,4,-2,-9,-10,7,9,10,5,-9,4,2,3,-8,-4,9,-6,3,3,-4,-9,6,-4,6,-6,4,2,-4,1,-8,-1,-2,-9,-6,-10,-7,3,7,-2,7,-1,-1,-8,-7,-9,3,-3,-6,1,-5,2,10,-7,-5,1,10,4,4,-6,-10,-8,-4,7,1,2,10,8,-1,6,-6,7,-10,7,2,7,-10,-4,-3,-4,10,-2,10,-8,-5,-5,5,8,5,-1,1,-9,-10,5,4,2,5,-4,-2,-6,-1,1,-4,-9,-4,-4,-8,-8,-7,-6,2,5,-9,-2,3,1,8,-8,-9,-1,-9,10,9,-6,10,-7,9,2,3,1,4,10,2,-6,6,7,-4,5,-6,-2,-4,-1,-3,10,-6,1,-3,-2,10,-7,5,6,-5,-5,-1,-7,5,7,-10,-3,-8,-8,7,5,10,-8,9,6,-2,-3,7,-9,10,10,2,8,-10,-10,-6,8,10,1,-7,-1,8,-5,8,5,9,9,1,-1,4,9,8,-6,-3,-6,-3,-3,-5,-6,-10,10,-8,-1,8,9,-3,4,8,-8,10,-5,-4,-6,7,-1,-2,-6,-2,9,-9,4,9,-3,-1,-9,-6,-3,-3,9,-8,-6,-1,-1,1,7,-10,-4,-10,-7,-6,1,3,2,3,-5,-2,-3,3,-10,-6,8,7,-7,7,-9,2,-6,-3,8,-2,9,4,-8,10,5,2,-3,3,7,4,4,-5,-9,-3,-6,-2,8,9,-2,2,4,-1,3,7,-4,6,-6,-10,-9,4,7,-10,-1,-9,-7,-2,-4,-10,-7,-7,-7,-10,-3,-10,5,-8,9,7,9,4,-6,-7,-1,7,3,8,-8,4,1,4,7,8,9,9,1,2,-2,-8,-7,9,-1,-1,-7,8,1,4,3,-6,-7,-8,8,6,2,-3,6,-10,-10,6,8,-5,-8,-6,1,1,7,-6,1,7,3,2,-3,-8,5,-2,8,3,6,-6,3,7,-9,9,5,3,7,9,10,-4,-9,-10,-6,4,-4,3,8,-9,2,-6,3,7,7,-9,3,-1,-4,1,2,3,6,3,-5,10,10,6,-7,3,-7,8,10,2,8,5,9,-8,-6,-8,5,8,-3,-9,7,4,-8,4,2,3,1,2,8,6,4,4,-1,-5,9,7,-9,10,3,-5,-1,-5,-8,6,-10,7,8,1,4,-8,-1,-8,5,-8,-3,-3,3,1,-6,5,-1,8,-4,1,-5,2,3,6,10,-8,7,7,9,1,-5,1,-9,-7,10,-4,8,-2,-7,-1,-4,-8,-10,3,3,7,2,-5,-9,-5,-2,-3,-4,1,5,6,3,-10,-1,2,-9,-5,9,2,-4,-4,-8,5,3,-3,2,-8,7,7,3,3,10,-2,10,4,5,-8,-6,6,1,-8,1,7,3,6,-5,9,9,-4,-7,10,-8,-6,-1,4,10,-6,-7,8,7,6,-5,7,6,10,10,7,8,4,4,5,9,6,4,-4,8,-3,4,-6,3,-6,-7,3,-6,7,5,3,-3,8,3,-8,-3,-5,-5,1,-8,-3,10,10,-2,-4,-9,3,-6,-1,4,-9,2,-5,-4,7,3,-6,-5,-9,-3,6,-9,-6,-9,-3,6,-1,7,-9,4,4,-5,10,-7,9,-1,-4,5,7,-8,-8,-4,7,6,-6,-2,-8,3,7,5,9,-2,-6,4,-4,4,9,2,3,1,-8,10,-10,-4,-2,-4,4,-6,4,6,4,-1,-9,-10,10,-2,4,4,6,10,6,-8,1,-3,-6,4,-10,-5,-7,3,-6,-6,8,4,-6,1,2,4,-5,-10,-7,-3,1,-6,-4,-6,6,3,-9,-10,-3,9,-2,9,-10,-2,-5,-4,6,-7,-10,3,2,-2,2,8,-2,-1,9,-6,10,8,3,-4,-1,-1,3,-7,-9,5,-10,7,1,-8,9,-1,-2,-6,8,-5,-2,-2,-8,9,-7,-9,9,-8,-7,1,10,6,-9,-8,2,-8,10,9,-8,-5,5,1,-1,4,-5,3,5,7,2,2,9,-10,9,-6,10,-1,7,-8,-9,6,7,9,-1,-9,2,-6,-3,-1,-8,9,-8,2,10,-6,4,5,3,5,-2,4,-6,-6,-9,-1,-4,2,1,-7,-3,2,-5,9,10,-10,10,8,-6,-5,1,-1,-6,-5,6,10,7,9,8,9,-3,2,-7,-1,5,8,-4,9,2,9,-9,9,10,7,-5,-7,9,4,-2,-9,-3,-2,-7,-6,-6,9,3,-1,-6,-10,7,3,-9,-2,-2,-7,-1,1,-10,9,4,-1,-7,-10,3,6,-1,7,-6,2,-3,4,-8,4,-3,-5,-2,-6,1,4,9,-7,10,10,-5,5,-1,-4,5,-6,2,9,-10,-4,2,6,-9,2,6,-5,-4,1,-1,-4,-4,9,4,9,-5,-4,3,10,2,9,-6,1,7,5,8,6,-10,9,3,9,-2,-6,-4,5,8,3,10,-4,-7,-5,-8,8,-8,-3,4,-10,6,9,2,-3,-8,6,2,5,9,-4,-10,7,7,8,2,6,-4,6,-9,-6,-9,4,-4,-9,-6,-2,-5,-4,-6,2,2,6,4,-10,2,9,2,-3,2,-9,-6,7,-9,4,5,5,-5,-1,-4,-2,-1,-8,-4,-9,-4,5,1,-1,-4,8,-2,-9,4,6,3,4,8,-8,4,9,8,-8,-7,-1,-4,2,-2,3,-3,1,8,1,-9,8,-8,9,-10,-9,8,10,9,-9,5,6,-2,5,4,6,6,-5,9,-2,-3,-8,1,4,-3,10,7,-7,4,-9,-7,2,-8,-8,2,-8,1,9,-5,1,-6,-6,-8,3,5,2,6,-7,-10,-1,-7,1,-4,-1,1,-7,-4,3,-7,5,8,-6,-9,9,8,-6,-7,-4,-5,-2,-8,7,-5,3,7,-6,5,-7,4,6,6,-10,8,5,-10,2,-7,9,9,4,2,-9,1,-1,-4,9,-10,-4,-5,-10,10,-3,10,9,-8,5,4,-8,2,1,8,-7,-1,7,-3,-10,-10,10,-7,-9,-3,-6,8,1,3,5,4,-2,-4,10,7,-10,3,8,10,-4,4,1,1,-2,-6,8,1,-4,10,-4,-3,5,-4,-3,-10,9,-6,6,2,4,6,-7,-1,-4,4,9,10,-1,-4,-1,3,10,10,-9,-3,10,4,-6,10,-7,6,2,-7,-4,-9,-9,5,-4,-3,-7,3,-6,7,-3,2,1,-5,5,6,-4,4,-9,-1,6,-5,4,2,-4,-4,8,-6,-3,2,2,-7,6,10,-2,8,6,-3,-3,10,8,6,-9,4,3,10,-5,2,2,-7,-2,4,-10,8,-4,3,-2,7,-1,-1,-9,10,2,7,3,-8,-1,-4,-9,-8,-9,-4,-10,-2,2,-5,-6,6,8,-2,9,7,2,3,-2,-4,-2,3,9,-10,9,-3,2,-5,-3,1,-8,-2,-8,4,7,-2,-8,10,-2,-10,8,8,-3,10,1,-5,-10,1,-3,-9,-7,-9,7,4,-10,2,8,-7,4,-4,-9,-6,-8,-6,-4,-9,-7,7,8,5,6,5,7,2,9,6,8,6,9,-7,8,-5,6,1,1,-1,3,-10,6,-4,9,5,-10,-3,3,-3,8,6,-7,-6,-4,7,3,-2,9,-5,3,-8,-1,3,1,-4,5,-2,8,-3,7,4,5,-8,-9,5,-5,7,3,9,-8,-4,-5,-5,4,-9,-8,-10,6,-9,3,7,8,3,3,-5,4,-4,-6,4,-7,-3,-4,1,-5,5,6,-5,5,6,-7,-9], dtype = "int8")#candidate|10802|(2288,)|const|int8
call_10800 = relay.TupleGetItem(func_10266_call(relay.reshape(const_10801.astype('int8'), [13, 1, 11]), relay.reshape(const_10802.astype('int8'), [13, 16, 11]), ), 4)
call_10803 = relay.TupleGetItem(func_10269_call(relay.reshape(const_10801.astype('int8'), [13, 1, 11]), relay.reshape(const_10802.astype('int8'), [13, 16, 11]), ), 4)
func_215_call = mod.get_global_var('func_215')
func_218_call = mutated_mod.get_global_var('func_218')
const_10805 = relay.const([10,-6,8,7,10,-10,9,4,-10,1,6,-9,-1,-1,-9,-4,4,-1,10,2,2,-2,9,5,6,7,6,-1,5,7,-6,-2,-10,5,-2,9,-8,-5,10,6,7,-10,-9,7,4,-9,-4,-5,3,6,6,1,6,-2,-5,-2,4,-5,-6,-7,8,-3,7,9,-7,-7,-8,-8,2,1,-10,2,-7,-5,3,3,7,6,-3,4,-9,2,9,4,-10,1,-1,4,-3,-1,2,-8,2,-3,-8,-5,-9,-6,9,-10,-6,8,7,7,10,6,4,1,7,-2,-4,-2,6,-1,-10,3,-5,5,-3,-2,10,5,4,-1,1,-6,10,7,-5,-10,-3,-3,4,-10,8,-1,4,4,3,6,9,-6,1,-7,-4,-3,2,5,4,6,-1,-2,-5,2,-2,-10,2,1,1,-10,-9,-4,-9,-10,6,4,-2,-2,-3,-3,-3,-7,2,8,10,-10,3,1,-3,-4,4,6,-6,-3,3,5,10,10,-2,5,6,-2,-9,10,5,-3,-2,6,-1,7,4,9,6,6,-10,1,-8,5,-7,1,9,-2,7,10,-7,-2,-1,-7,-2,4,-5,8,-9,3,7,9,-10,-8,-8,-4,7,10,-7,-4,1,1,-2,-1,1,6,-8,4,5,4,2,10,4,-7,8,-1,9,7,10,-4,-2,7,-5,-9,-4,-6,10,6,-6,8,6,3,1,9,-9,-10,-3,-2,-9,9,-3,2,2,9,10,-2,-5,2,-6,-7,3,-8,6,5,9,1,-8,5,-10,8,4,-6,8,6,10,10,1,-10,-8,-4,-6,10,9,-5,-4,9,-4,6,5,-7,5,8,7,-5,-2,5,8,-3,-3,-6,-3,4,1,1,-1,-3,-8,-4,-1,-2,-2,3,2,-6,6,1,-8,9,4,5,10,4,3,5,-9,-6,-3,10,5,-2,10,10,-10,-7,-9,-4,4,-7,7,10,-10,-6,5,10,-6,3,-10,5,-4,-6,7,-3,7,-8,3,-10,-4,8,6,3,2,9,-1,-2,7,7,8,-6,10,-1,2,6,10,7,-1,10,-6,-5,-1,1,5,-3,10,1,-5,-4,6,3,5,-3,-8,-10,-10,-1,-2,-3,10,1,7,-9,4,9,5,-7,-2,7,-3,-6,3,-6,-10,3,6,10,-8,6,-4,4,-7,-10,-1,-8,-3,9,-2,1,5,1,-10,5,-2,9,-3,9,-4,-8,-3,1,-1,-2,-5,-2,-10,2,-4,7,-7,5,-1,-2,3,-4,-6,-4,3,-7,-10,-3,-4,10,1,5,6,-1,-6,6,3,-6,2,6,-6,8,-4,8,-5,7,8,7,3,4,9,7,-9,2,2,9,-3,-8,9,6,-6,1,2,-1,3,4,-5,-3,7,8,-3,9,-5,2,5,-7,10,7,3,9,-5,-8,-8,-7,-8,4,1,9,2,-9,1,10,-3,5,6,1,-9,-4,-2,1,5,3,-1,-1,4,-4,5,6,2,3,7,1,-3,-2,5,6,9,5,2,6,5,10,-1,-7,10,-3,4,-3,-1,1,-8,-8,-4,8,-9,1,4,6,-2,10,-3,-8,-9,3,6,5,-10,-3,-6,-2,7,10,7,-7,-9,10,8,-8,-1,-6,-4,10,-6,8,-6,-8,4,-2,-4,-9,-4,4,6,-10,2,3,8,1,8,7,-10,5,-5,-4,-6,1,-1,-5,-8,4,-2,7,10,-8,-7,-2,-2,-10,6,5,6,-5,2,4,6,9,4,-1,-3,-5,-4,7,4,4,-3,1,6,6,5,-9,9,8,-3,10,-6,8,1,-7,-5,2,-1,-7,8,-6,-5,-1,-2,-10,8,2,-6,-7,8,-10,6,-10,5,-3,-3,4,-3,-4,6,1,-5,-1,5,-8,1,-5,9,3,3,7,-6,-5,7,-5,7,-8,-8,5,-6,-4,10,5,7,1,5,-7,8,3,5,-10,-3,5,7,5,-3,-2,10,-10,7,-8,-1,7,-9,7,-8,6,-5,-5,3,8,10,-8,-9,-9,2,-1,4,-2,-6,-7,-6,-8,-6,-3,-4,4,3,6,10,8,-5,-7,-7,-2,-8,1,-5,-4,3,-9,-10,-1,-5,-5,-4,-9,2,-8,4,3,-10,-7,3,-8,-1,-3,10,-2,-1,-1,9,-4,5,1,-3,-1,-1,9,-2,-2,4,3,-9,2,-1,-5,-5,3,-2,-9,-1,9,1,-9], dtype = "uint64")#candidate|10805|(832,)|const|uint64
call_10804 = relay.TupleGetItem(func_215_call(relay.reshape(var_10796.astype('bool'), [4, 13, 10]), relay.reshape(const_10805.astype('uint64'), [1, 832]), ), 0)
call_10806 = relay.TupleGetItem(func_218_call(relay.reshape(var_10796.astype('bool'), [4, 13, 10]), relay.reshape(const_10805.astype('uint64'), [1, 832]), ), 0)
output = relay.Tuple([call_10788,call_10794,var_10795,var_10796,call_10800,const_10801,const_10802,call_10804,const_10805,])
output2 = relay.Tuple([call_10789,call_10797,var_10795,var_10796,call_10803,const_10801,const_10802,call_10806,const_10805,])
func_10807 = relay.Function([var_10795,var_10796,], output)
mod['func_10807'] = func_10807
mod = relay.transform.InferType()(mod)
mutated_mod['func_10807'] = func_10807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10807_call = mutated_mod.get_global_var('func_10807')
var_10809 = relay.var("var_10809", dtype = "uint64", shape = (1008,))#candidate|10809|(1008,)|var|uint64
var_10810 = relay.var("var_10810", dtype = "bool", shape = (520,))#candidate|10810|(520,)|var|bool
call_10808 = func_10807_call(var_10809,var_10810,)
output = call_10808
func_10811 = relay.Function([var_10809,var_10810,], output)
mutated_mod['func_10811'] = func_10811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6143_call = mod.get_global_var('func_6143')
func_6144_call = mutated_mod.get_global_var('func_6144')
call_10839 = func_6143_call()
call_10840 = func_6143_call()
output = relay.Tuple([call_10839,])
output2 = relay.Tuple([call_10840,])
func_10855 = relay.Function([], output)
mod['func_10855'] = func_10855
mod = relay.transform.InferType()(mod)
mutated_mod['func_10855'] = func_10855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10855_call = mutated_mod.get_global_var('func_10855')
call_10856 = func_10855_call()
output = call_10856
func_10857 = relay.Function([], output)
mutated_mod['func_10857'] = func_10857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6938_call = mod.get_global_var('func_6938')
func_6939_call = mutated_mod.get_global_var('func_6939')
call_10907 = func_6938_call()
call_10908 = func_6938_call()
output = relay.Tuple([call_10907,])
output2 = relay.Tuple([call_10908,])
func_10909 = relay.Function([], output)
mod['func_10909'] = func_10909
mod = relay.transform.InferType()(mod)
mutated_mod['func_10909'] = func_10909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10909_call = mutated_mod.get_global_var('func_10909')
call_10910 = func_10909_call()
output = call_10910
func_10911 = relay.Function([], output)
mutated_mod['func_10911'] = func_10911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9756_call = mod.get_global_var('func_9756')
func_9757_call = mutated_mod.get_global_var('func_9757')
call_10946 = func_9756_call()
call_10947 = func_9756_call()
output = relay.Tuple([call_10946,])
output2 = relay.Tuple([call_10947,])
func_10949 = relay.Function([], output)
mod['func_10949'] = func_10949
mod = relay.transform.InferType()(mod)
output = func_10949()
func_10950 = relay.Function([], output)
mutated_mod['func_10950'] = func_10950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mod.get_global_var('func_6521')
func_6523_call = mutated_mod.get_global_var('func_6523')
call_10987 = func_6521_call()
call_10988 = func_6521_call()
output = call_10987
output2 = call_10988
func_10997 = relay.Function([], output)
mod['func_10997'] = func_10997
mod = relay.transform.InferType()(mod)
output = func_10997()
func_10998 = relay.Function([], output)
mutated_mod['func_10998'] = func_10998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_11039 = func_2900_call()
call_11040 = func_2900_call()
output = relay.Tuple([call_11039,])
output2 = relay.Tuple([call_11040,])
func_11061 = relay.Function([], output)
mod['func_11061'] = func_11061
mod = relay.transform.InferType()(mod)
output = func_11061()
func_11062 = relay.Function([], output)
mutated_mod['func_11062'] = func_11062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_11077 = relay.TupleGetItem(func_3482_call(), 0)
call_11078 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_11077,])
output2 = relay.Tuple([call_11078,])
func_11086 = relay.Function([], output)
mod['func_11086'] = func_11086
mod = relay.transform.InferType()(mod)
mutated_mod['func_11086'] = func_11086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11086_call = mutated_mod.get_global_var('func_11086')
call_11087 = func_11086_call()
output = call_11087
func_11088 = relay.Function([], output)
mutated_mod['func_11088'] = func_11088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6358_call = mod.get_global_var('func_6358')
func_6360_call = mutated_mod.get_global_var('func_6360')
call_11100 = func_6358_call()
call_11101 = func_6358_call()
func_10615_call = mod.get_global_var('func_10615')
func_10618_call = mutated_mod.get_global_var('func_10618')
const_11136 = relay.const([-5,-4,5,7,6,4,-5,4,3,1,2,-4,9,7,9,7,-4,-9,9,-6,5,4,7,10,-7,5,-4,-4,-5,1,4,7,8,-9,-1,1,-5,6,2,5,-10,1,-1,6,-7,-9,-6,-8,-2,1,-2,-9,-7,2,-2,1,7,-5,6,-4,2,-1,-2,7,6,9,-10,6,5,9,2,1,-1,-8,2,9,7,-4,-8,5,9,-3,-4,8,-6,-1,8,-8,10,3,9,-8,1,7,5,5,-8,4,-9,3,1,6,6,8,9,10,5,-4,9,8,-5,-7,3,-7,6,-8,6,8,-7,7,-10,-5,4,1,-3,7,-4,-3,8,9,-1,-2,-10,-8,7,-4,2,-1,-1,10,-3,-3,1], dtype = "int8")#candidate|11136|(143,)|const|int8
var_11137 = relay.var("var_11137", dtype = "int8", shape = (1144, 2))#candidate|11137|(1144, 2)|var|int8
call_11135 = relay.TupleGetItem(func_10615_call(relay.reshape(const_11136.astype('int8'), [143,]), relay.reshape(var_11137.astype('int8'), [1144, 2]), ), 3)
call_11138 = relay.TupleGetItem(func_10618_call(relay.reshape(const_11136.astype('int8'), [143,]), relay.reshape(var_11137.astype('int8'), [1144, 2]), ), 3)
func_6254_call = mod.get_global_var('func_6254')
func_6255_call = mutated_mod.get_global_var('func_6255')
call_11148 = relay.TupleGetItem(func_6254_call(), 0)
call_11149 = relay.TupleGetItem(func_6255_call(), 0)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_11158 = func_2900_call()
call_11159 = func_2900_call()
output = relay.Tuple([call_11100,call_11135,const_11136,var_11137,call_11148,call_11158,])
output2 = relay.Tuple([call_11101,call_11138,const_11136,var_11137,call_11149,call_11159,])
func_11169 = relay.Function([var_11137,], output)
mod['func_11169'] = func_11169
mod = relay.transform.InferType()(mod)
mutated_mod['func_11169'] = func_11169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11170 = relay.var("var_11170", dtype = "int8", shape = (1144, 2))#candidate|11170|(1144, 2)|var|int8
func_11169_call = mutated_mod.get_global_var('func_11169')
call_11171 = func_11169_call(var_11170)
output = call_11171
func_11172 = relay.Function([var_11170], output)
mutated_mod['func_11172'] = func_11172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_11190 = func_2900_call()
call_11191 = func_2900_call()
var_11199 = relay.var("var_11199", dtype = "uint32", shape = (4, 10, 3))#candidate|11199|(4, 10, 3)|var|uint32
bop_11200 = relay.add(call_11190.astype('int64'), var_11199.astype('int64')) # shape=(4, 10, 3)
bop_11203 = relay.add(call_11191.astype('int64'), var_11199.astype('int64')) # shape=(4, 10, 3)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_11217 = relay.TupleGetItem(func_4019_call(), 1)
call_11218 = relay.TupleGetItem(func_4020_call(), 1)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_11222 = func_5995_call()
call_11223 = func_5995_call()
var_11228 = relay.var("var_11228", dtype = "uint32", shape = (4, 10, 3))#candidate|11228|(4, 10, 3)|var|uint32
bop_11229 = relay.bitwise_xor(var_11199.astype('int32'), relay.reshape(var_11228.astype('int32'), relay.shape_of(var_11199))) # shape=(4, 10, 3)
func_7962_call = mod.get_global_var('func_7962')
func_7964_call = mutated_mod.get_global_var('func_7964')
call_11243 = relay.TupleGetItem(func_7962_call(), 0)
call_11244 = relay.TupleGetItem(func_7964_call(), 0)
func_10855_call = mod.get_global_var('func_10855')
func_10857_call = mutated_mod.get_global_var('func_10857')
call_11246 = relay.TupleGetItem(func_10855_call(), 0)
call_11247 = relay.TupleGetItem(func_10857_call(), 0)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
var_11249 = relay.var("var_11249", dtype = "float32", shape = (132,))#candidate|11249|(132,)|var|float32
call_11248 = func_3284_call(relay.reshape(var_11249.astype('float32'), [12, 11, 1]))
call_11250 = func_3284_call(relay.reshape(var_11249.astype('float32'), [12, 11, 1]))
func_10855_call = mod.get_global_var('func_10855')
func_10857_call = mutated_mod.get_global_var('func_10857')
call_11265 = relay.TupleGetItem(func_10855_call(), 0)
call_11266 = relay.TupleGetItem(func_10857_call(), 0)
output = relay.Tuple([bop_11200,call_11217,call_11222,bop_11229,call_11243,call_11246,call_11248,var_11249,call_11265,])
output2 = relay.Tuple([bop_11203,call_11218,call_11223,bop_11229,call_11244,call_11247,call_11250,var_11249,call_11266,])
func_11276 = relay.Function([var_11199,var_11228,var_11249,], output)
mod['func_11276'] = func_11276
mod = relay.transform.InferType()(mod)
mutated_mod['func_11276'] = func_11276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11276_call = mutated_mod.get_global_var('func_11276')
var_11278 = relay.var("var_11278", dtype = "uint32", shape = (4, 10, 3))#candidate|11278|(4, 10, 3)|var|uint32
var_11279 = relay.var("var_11279", dtype = "uint32", shape = (4, 10, 3))#candidate|11279|(4, 10, 3)|var|uint32
var_11280 = relay.var("var_11280", dtype = "float32", shape = (132,))#candidate|11280|(132,)|var|float32
call_11277 = func_11276_call(var_11278,var_11279,var_11280,)
output = call_11277
func_11281 = relay.Function([var_11278,var_11279,var_11280,], output)
mutated_mod['func_11281'] = func_11281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mod.get_global_var('func_6120')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_11295 = func_6120_call()
call_11296 = func_6120_call()
output = call_11295
output2 = call_11296
func_11298 = relay.Function([], output)
mod['func_11298'] = func_11298
mod = relay.transform.InferType()(mod)
mutated_mod['func_11298'] = func_11298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11298_call = mutated_mod.get_global_var('func_11298')
call_11299 = func_11298_call()
output = call_11299
func_11300 = relay.Function([], output)
mutated_mod['func_11300'] = func_11300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10102_call = mod.get_global_var('func_10102')
func_10104_call = mutated_mod.get_global_var('func_10104')
call_11354 = relay.TupleGetItem(func_10102_call(), 4)
call_11355 = relay.TupleGetItem(func_10104_call(), 4)
output = call_11354
output2 = call_11355
func_11375 = relay.Function([], output)
mod['func_11375'] = func_11375
mod = relay.transform.InferType()(mod)
output = func_11375()
func_11376 = relay.Function([], output)
mutated_mod['func_11376'] = func_11376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9657_call = mod.get_global_var('func_9657')
func_9658_call = mutated_mod.get_global_var('func_9658')
call_11377 = relay.TupleGetItem(func_9657_call(), 6)
call_11378 = relay.TupleGetItem(func_9658_call(), 6)
func_7560_call = mod.get_global_var('func_7560')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_11386 = relay.TupleGetItem(func_7560_call(), 0)
call_11387 = relay.TupleGetItem(func_7561_call(), 0)
func_9966_call = mod.get_global_var('func_9966')
func_9968_call = mutated_mod.get_global_var('func_9968')
call_11391 = relay.TupleGetItem(func_9966_call(), 0)
call_11392 = relay.TupleGetItem(func_9968_call(), 0)
output = relay.Tuple([call_11377,call_11386,call_11391,])
output2 = relay.Tuple([call_11378,call_11387,call_11392,])
func_11397 = relay.Function([], output)
mod['func_11397'] = func_11397
mod = relay.transform.InferType()(mod)
output = func_11397()
func_11398 = relay.Function([], output)
mutated_mod['func_11398'] = func_11398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_11409 = relay.TupleGetItem(func_6860_call(), 0)
call_11410 = relay.TupleGetItem(func_6862_call(), 0)
func_9119_call = mod.get_global_var('func_9119')
func_9120_call = mutated_mod.get_global_var('func_9120')
call_11412 = relay.TupleGetItem(func_9119_call(), 0)
call_11413 = relay.TupleGetItem(func_9120_call(), 0)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
var_11415 = relay.var("var_11415", dtype = "float32", shape = (66, 2))#candidate|11415|(66, 2)|var|float32
call_11414 = func_3284_call(relay.reshape(var_11415.astype('float32'), [12, 11, 1]))
call_11416 = func_3284_call(relay.reshape(var_11415.astype('float32'), [12, 11, 1]))
func_10615_call = mod.get_global_var('func_10615')
func_10618_call = mutated_mod.get_global_var('func_10618')
var_11424 = relay.var("var_11424", dtype = "int8", shape = (143,))#candidate|11424|(143,)|var|int8
var_11425 = relay.var("var_11425", dtype = "int8", shape = (2288,))#candidate|11425|(2288,)|var|int8
call_11423 = relay.TupleGetItem(func_10615_call(relay.reshape(var_11424.astype('int8'), [143,]), relay.reshape(var_11425.astype('int8'), [1144, 2]), ), 3)
call_11426 = relay.TupleGetItem(func_10618_call(relay.reshape(var_11424.astype('int8'), [143,]), relay.reshape(var_11425.astype('int8'), [1144, 2]), ), 3)
func_7564_call = mod.get_global_var('func_7564')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_11428 = func_7564_call()
call_11429 = func_7564_call()
output = relay.Tuple([call_11409,call_11412,call_11414,var_11415,call_11423,var_11424,var_11425,call_11428,])
output2 = relay.Tuple([call_11410,call_11413,call_11416,var_11415,call_11426,var_11424,var_11425,call_11429,])
func_11435 = relay.Function([var_11415,var_11424,var_11425,], output)
mod['func_11435'] = func_11435
mod = relay.transform.InferType()(mod)
var_11436 = relay.var("var_11436", dtype = "float32", shape = (66, 2))#candidate|11436|(66, 2)|var|float32
var_11437 = relay.var("var_11437", dtype = "int8", shape = (143,))#candidate|11437|(143,)|var|int8
var_11438 = relay.var("var_11438", dtype = "int8", shape = (2288,))#candidate|11438|(2288,)|var|int8
output = func_11435(var_11436,var_11437,var_11438,)
func_11439 = relay.Function([var_11436,var_11437,var_11438,], output)
mutated_mod['func_11439'] = func_11439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10293_call = mod.get_global_var('func_10293')
func_10295_call = mutated_mod.get_global_var('func_10295')
call_11464 = relay.TupleGetItem(func_10293_call(), 0)
call_11465 = relay.TupleGetItem(func_10295_call(), 0)
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_11471 = func_10518_call()
call_11472 = func_10518_call()
func_2941_call = mod.get_global_var('func_2941')
func_2944_call = mutated_mod.get_global_var('func_2944')
const_11498 = relay.const([-9,7,-7,-1,2,-5,-3,-2,-4,-4,-10,-5,-9,-3,10,5,6,-7,-2,5,-4,-2,5,-9,-6,10,-7,-4,-6,3,9,-5,-2,8,-3,-8,3,6,-8,1,-8,-8,5,-3,9,7,6,2,4,-1,-3,6,3,-8,-6,2,9,1,2,-7,2,8,7,7,10,-10,9,10,9,10,8,-9,2,3,6,8,5,7,7,-5,1,1,3,-1,-1,6,-5,-8,-9,-4,2,-2,-7,9,2,-1,9,-3,3,-3,-7,4,7,8,3,-8,1,2,-10,3,6,5,8,-8,-1,5,-3,7,-3,4,6,-10,4,8,4,-6,-7,-6,6,-6,-6,-5,2,-6,9,-10,4,4,4,1,-3,-8,7,-5,-7,-2,-2,1,10,-8,9,-6,9,-8,1,-1,-8,7,3,8,1,-3,8,-6,1,-1,-3,1,6,7,3,-4,-6,-4,-2,-7,4,-7,-3,-3,8,-3,1,-7,7,6,9,-1,-10,-4,-9,5,-10,-6,-7,7,4,-8,-8,-2,8,-5,8,4,10,2,10,3,-2,-4,9,-4,-3,-10,9,6,-1,-4,4,9,-5,-3,10,4,-4,-1,-8,-8,9,-2,9,4,6,9,6,-5,-8,-4,6,-10,-6,3,-8,-7,-8,-5,-4,5,9,-3,1,-7,-8,-7,1,-5,2,3,9,-7,8,4,-5,3,10,-10,-3,9,-8,-6,-8,7,8,-8,-9,-6,10,-8,-6,8,4,8,-5,-9,-3,-3,5,-1,-10,-4,7,-6,9,-10,5,-2,6,-8,-6,3,1,2,-7,-1,-3,6,4,-5,-5,9,-2,1,-10,6,-6,-5,6,5,10,10,2,3,7,-10,-2,-4,-1,-2,-2,6,9,4,-1,-1,-6,6,7,5,-5,8,-5,2,7,-6,-4,8,-6,-1,3,9,2,-9,-3,5,-1,-9,-7,-10,-7,-5,9,-2,-8,-1,4,-2,5,7,6,-8,-7,1,8,-8,10,-5,1,-1,2,-9,3,-3,3,-6,2,-5,-3,-2,-2,7,8,-8,-9,7,4,-8,-9,3,2,2,5,4,-6,8,-9,-9,-7,5,9,-5,-9,-7,-5,2,-10,-1,2,3,-4,-7,6,-9,4,-8,5,3,8,4,-2,3,9,-9,1,-10,-2,5,2,2,-7,6,-8,8,10,-1,8,-4,-8,-9,-4,-2,-7,-4,-3,4,9,-4,2,-2,3,5,-7,-8,2,4,8,2,-4,-6,-5,7,-2,-2,2,-7,7,-6,-10,9,-6,8,8,-9,6,-9,6,6,8,2,-2,-7,-10,-3,-1,-2,5,1,10,8,-7,-7,-7,-3,-1,-7,6,9,-10,8,-7,8,-2,9,-3,10,-6,-3,1,9,2,2,3,6,6,-7,-6,-8,6,-2,6,6,-10,6,6,-1,3,-6,5,-2,-8,7,-3,-2,-4,-7,8,-2,-6,-10,-6,-1,-4,-7,-1,-3,7,-2,-7,-1,-1,-1,4,9,-4,2,-10,8,4,-5,4,3,-8,-2,-9,3,-1,-3,10,5,-1,-1,-2,4,-2,-10,-7,-8,7,-7,10,6,-6,6,-1,7,10,4,7,-7,-9,7,-1,8,-2,-2,-6,-6,9,8,5,-3,-5,6,-5,3,1,9,-5,-9,1,-1,-2,-9,9,1,7,8,1,4,-8,-1,8,-2,-6,-10,-2,3,-8,-5,4,-2,1,2,5,-1,4,-3,-1,-5,-5,3,-6,1,1,-4,1,-5,-7,8,5,-4,-1,-3,-1,9,-3,-3,-9,6,10,6,-5,6,7,1,-1,-1,1,5,2,10,-6,-8,-7,6,2,9,-2,9,-6,1,7,-2,-8,10,10,-9,3,3,10,7,1,1,-8,-3,1,4,8,6,-2,9,-8,-10,4,1,3,7,-4,7,9,8,6,9,9,-1,2,3,-8,1,6,-9,-1,-3,5,9,-10,5,1,9,9,-1,1,1,8,-5,-5,3,1,3,8,1,6,-3,1,-7,1,9,1,-3,-3,3,-3,6,-6,9,10,9,9,3,3,8,7,8,-9,-8,9,4,10,5,10,10,-7,4,-3,4,10,-2,9,-6,10,5,-7,-3,-9,-5,-4,9,-5,7,-1,-4,3,9,-7,-4,-8,8,8,-4,-2,7,3,-7,-8,-6,5,1,7,2,4,-1,-5,-10,2,1,1,2,-6,2,-5,-5,2,10,6,3,10,-4,7,-1,6,-5,-1,-2,-7,-1,7,-3,-3,-8,7,-1,-9,5,9,-7,7,5,-10,-7,5,7,5,9,-5,7,10,2,-4,-7,2,-9,7,-8,-3,2,-4,-10,-9,5,7,7,-1,-9,5,-8,-2,-5,-3,4,8,5,-4,-1,1,-8,-9,8,-3,4,4,4,-1,5,-4,1,4,5,9,5,-1,10,10,-1,6,-3,-7,8,-8,3,1,-3,10,-7,2,-10,-6,5,2,-1,1,-3,-2,6,4,-9,3,-2,-8,3,2,4,-8,4,-5,8,-10,4,-2,2,-10,-2,3,-10,-4,2,6,4,5,4,4,5,5,-5,-10,2,8,-4,8,1,-7,-10,8,-9,-3,-4,4,-2,-9,-5,-4,8,3,-10,-8,-4,3,-9,7,6,10,-8,9,5,-7,-6,9,10,10,2,-2,-4,-10,5,-1,-9,3,5,-7,10], dtype = "uint64")#candidate|11498|(1008,)|const|uint64
const_11499 = relay.const([True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True], dtype = "bool")#candidate|11499|(520,)|const|bool
call_11497 = relay.TupleGetItem(func_2941_call(relay.reshape(const_11498.astype('uint64'), [1008,]), relay.reshape(const_11499.astype('bool'), [520,]), ), 0)
call_11500 = relay.TupleGetItem(func_2944_call(relay.reshape(const_11498.astype('uint64'), [1008,]), relay.reshape(const_11499.astype('bool'), [520,]), ), 0)
func_2441_call = mod.get_global_var('func_2441')
func_2444_call = mutated_mod.get_global_var('func_2444')
const_11534 = relay.const([[-2.855661,-2.636922,-0.479507,-1.333310,-6.643374,8.299128,6.789292,9.508220,-0.482413,9.547702,-6.633079,-6.089856,-7.986059,1.172197,-7.258118,-3.128018,-1.448427,-8.836971,7.909913,6.795468,0.360241,1.917839,-2.717115,-9.210924,7.425957,-6.401407,9.418133,8.709573,-0.868880,-1.733391,0.878803,-7.369605,5.496822,-2.856499,0.762351,-8.634177,3.810858,-3.485402,0.018993,-1.955990,-5.787432,-1.029698,3.894508,5.277569,-8.107234,-0.587169,-9.783598,9.516164,5.570847,9.706004,-3.642442,0.791138,0.404231,6.687233,-4.015726,9.057877,4.991367,-4.930051,8.514286,-1.198233,-3.960284,-1.308901,3.522732,-7.493513,7.493717,-2.872440,-6.051519,4.242730,7.589539,-7.562992,-1.859441,-6.671225,9.888137,-2.955754,-2.308353,-2.535415,4.017175,-0.299333,3.791053,0.747903,-6.859696,-6.105334,-1.858844,-0.599847,-9.035010,6.080070,-5.309951,-7.056318,2.181877,5.618049,-6.235821,-0.644346,-4.598126,-1.658704,3.098092,-0.468907,5.328851,-0.930446,5.212802,9.884160,4.630876,-3.109214,-9.601224,5.701790,-4.870002,-4.930931,6.561020,-2.123796,9.950649,5.778564,6.394653,-3.907751,-1.401494,-4.650081,5.549108,9.440024,-8.317038,-8.359443,4.261271,-4.614238,-5.671357,-9.711266,7.976492,9.099996,6.637996,-7.210187,2.979965,-1.349000,3.079587,4.880865,-8.034442,-1.520403,-5.136682,-9.663837,-1.450700,2.321986,9.026691,-5.902746,4.742404,4.947666,-3.417649,4.195819,-6.036794,0.642183,-7.295638,-6.816403,-2.577608,0.508897,3.893603,-3.467475,9.963592,9.183543,9.455055,7.891989,5.141473,0.974605,-7.945051,3.749504,-5.295239,2.371909,6.848676,-7.484804,-8.000348,7.645588,4.548094,2.975289,6.877972,9.920410,0.997910,6.549140,7.627442,-7.438609,0.491451,-5.120386,1.301599,-0.124803,2.550666,-5.081468,2.866301,1.669896,2.955688,2.084631,2.982334,5.871989,0.049351,-1.932166,9.499934,7.254025,-2.900088,1.140753,5.981835,6.248218,-3.070162,-2.733689,0.942810,-0.411893,-6.715341,4.356568,-4.027103,-8.637666,-5.375447,-4.855954,-6.256080,-2.701101,8.019922,-2.118121,-7.447869,2.194904,5.817877,-4.303764,6.837861,0.969028,-2.422369,-7.581982,7.839083,-9.938554,3.864205,2.201589,-0.784011,-4.751290,3.116260,-5.290946,-3.911638,-8.601700,5.676119,-2.503307,2.490436,7.294573,9.575840,-3.236492,-6.460327,-8.450454,0.883771,9.044083,1.517119,0.351965,-2.706126,-7.119675,1.115434,-1.722648,6.156651,-3.829385,-1.453529,-8.745230,9.375862,-6.709581,-8.271404,5.862646,8.025765,6.631078,-1.569094,9.697765,9.700924,-1.702241,1.596956,7.448953,1.053396,6.078473,4.667885,7.567304,1.162341,7.071066,-6.830031,8.237364,7.911126,2.121048,-2.764784,2.750540,-2.218997,-0.948052,-6.015890,0.162235,5.658684,-6.742475,-7.707873,5.108344,9.549645,7.058911,5.965348,4.096694,-4.914695,4.499832,-7.368871,-2.172990,-3.157121,-2.338086,-3.477635,-9.503999,-4.081365,8.290389,0.919702,-6.350817,4.037138,-1.781816,1.241903,1.256446,-5.878054,-4.166923,3.495572,-8.774170,4.700619,4.001698,-6.827218,-7.575616,-7.170089,6.553356,-8.296791,-3.397882,-2.133776,7.100483,7.455593,5.265641,6.671685,-8.457580,-0.392878,-2.974331,3.336945,4.821648,3.159353,-8.832509,9.481154,4.611715,-5.235375,2.342756,5.112292,-0.317480,-3.846340,-1.288652,1.151643,-0.399002,4.164804,6.188246,-3.910438,-9.386708,-4.166908,5.241085,7.236891,-2.502473,0.989020,-3.035264,-3.191893,4.343554,-5.372970,-9.627009,-9.374761,8.958997,3.659524,-8.200287,4.251031,1.497284,2.927546,-3.084337,-4.491316,-6.003125,-1.250008,-8.313278,6.729468,2.612953,3.563611,0.873064,5.441631,-8.997105,-0.883363,-6.887035,8.942290,2.830921,9.605160,9.475846,-4.337046,8.306180,-2.669005,2.266414,0.020130,8.905911,-9.983986,-0.784909,0.018175,-7.502924,5.698881,-9.902333,9.857390,9.936900,6.104893,-7.448284,1.269042,-0.694140,5.135909,1.902862,9.658092,3.945612,-1.396653,3.135318,-2.261783,3.357890,-6.492770,9.718243,2.228471,-0.672594,5.164723,4.736407,-5.729588,4.810957,3.163455,-7.070803,0.555100,7.602824,1.642349,-4.502997,-1.322466,9.999633,5.490181,-7.474707,-6.609012,7.263907,4.757332,-0.234828,-9.842472,9.117752,-4.927924,-2.814553,-6.036421,5.317430,-5.038632,2.305716,1.890875,-8.724596,7.801280,-6.528704,4.108384,-1.563438,-5.547633,1.470390,-2.423562,-7.751951,-8.610822,-7.634860,-5.534064,1.367172,3.074935,-7.612594,0.387145,9.490807,4.268713,-9.743554,6.727745,-7.128314,9.744663,9.817730,-5.770690,1.194546,-2.789123,2.837649,3.224236,-3.873648,-3.754783,-6.958649,1.280055,-5.914645,0.730558,4.052340,7.686165,-8.779821,2.371889,-8.468174,1.252322,1.203083,-2.912185,6.484231,8.170769,-2.831095,-2.525145,4.975173,7.953916,-9.488225,2.225519,3.789549,6.055223,8.822706,9.067226,3.654430,8.269526,4.766825,9.278368,-8.917483,-8.339979,-8.655610,8.449013,-6.970393,-8.696143,0.447627,-5.832271,-5.223601,-4.185035,7.734274,-1.255065,-6.343512,5.976037,9.465209,-3.016167,2.780537,-2.614095,8.897627,2.240514,-2.343426,7.970409,8.606337,6.345362,3.478567,-6.525915,5.107276,7.482700,-7.975805,0.484184,-7.669457,5.892147,-8.749832,7.600290,1.874897,3.163706,-3.381469,8.590739,2.967591,-7.961247,-9.281694,9.644328,1.827788,-5.919359,7.178298,3.675545,2.426813,0.308695,-1.950706,-0.342804,2.248136,-1.968320,-7.077187,-3.603645,-1.248383,-2.855008,3.170585,-2.782409,2.851954,-2.582096,6.575600,-9.369990,2.070014,-2.154179,-1.620259,5.106614,3.878353,-0.191359,-1.083710,0.587268,5.261850,2.489471,7.660649,2.464344,-9.682735,2.754694,2.603947,1.939757,7.872063,-4.274127,-2.099575,5.044881,4.928083,9.132066,-9.516748,-2.956946,-3.090120,-7.111538,-6.838636,-9.938102,-9.326264,-3.238870,6.891091,-6.109829,1.638685,3.867486,-6.398504,8.061718,-1.667841,5.802864,3.378574,-8.331955,-3.337736,8.669508,-6.135331,4.081101,7.312421,-7.797757,6.515254,0.935124,1.951625,-1.442554,-0.757370,-6.029697,-5.125072,2.056069,0.783428,-8.596960,7.796290,-6.842520,7.523004,-2.846392,7.273548,-4.936337,5.028171,-0.308967,-9.816610,-6.051965,-7.723445,6.647107,5.666739,1.339869,-9.571186,-7.603591,7.535316,4.131326,-8.455792,-4.863895,-1.034309,7.786317,-3.481830,-5.877702,-8.562666,4.555658,4.495289,-6.529698,-7.988529,-0.795520,6.688239,-4.168072,8.592742,4.419940,5.275796,-9.536018,-8.800781,2.930613,3.336838,7.468647,-6.496780,-6.070410,3.855297,-6.472632,-4.940013,-4.687665,3.323748,1.873616,-5.122803,2.668577,-7.455382,6.340050,2.158151,1.767905,6.018940,-3.969305,-7.811075,4.792033,4.264031,2.278676,-4.066813,2.818234,-3.360539,0.224901,-5.284131,-4.678345,-6.786982,0.777582,-1.012560,-0.316077,-5.265824,8.911260,1.415781,-5.455097,6.739472,0.367872,-8.897327,2.370446,3.746603,5.003924,1.835676,-1.143102,-3.241401,4.353255,-7.806744,-5.966810,9.562029,0.864811,-7.512561,4.604198,1.174993,-8.112884,-3.613377,-1.166404,-8.600752,5.213061,5.976290,6.634479,8.507207,-3.487165,-6.168384,-3.667501,0.659859,-2.792522,-3.273330,3.725704,-8.309646,1.050893,9.912899,-8.376615,6.575481,-7.502199,9.967194,-5.948354,-0.080555,4.655125,1.680544,-4.176419,2.971753,4.365926,6.248287,-3.760084,-3.658337,-8.794254,4.545123,8.044763,-0.492031,-6.257561,8.706287,-1.172972,0.315610,-4.913061,-6.181540,2.803027,5.133229,0.937839,4.292095,6.608153,9.143763,-2.431090,-5.913355,7.725218,1.586076,4.514406,8.256921,-6.182930,3.291598,9.631849,-4.212223,4.603256,8.299862,-5.442537,-7.806135,-8.829712,9.833792,4.328624,-0.215286,-2.555288,-3.200487,-5.902325,6.238977,-6.544070,9.448389,-0.304426,2.893002,-5.383474,-5.761866,9.463115,-9.473778,-2.404161,-9.388702,7.166446,8.332870,-4.342353,8.235815,7.235946,-3.294614,5.889773,9.940086,4.690165,-7.734567,-5.225437,-1.383212,6.364452,8.815631,-2.125650,1.419642,8.955162,9.356356,-8.706047,-3.269369,4.971704,-0.546784,5.528288,1.701858,-4.888371,-2.417435,-7.568525,-4.156565,8.641475,-0.314208,-5.224285,3.109470,-4.204187,4.549899,-6.752047,-0.197887,-5.756971,-8.702991,-0.138489,-5.127451,5.108133,8.555930,4.679737,-2.384439,-5.252126,-3.199206,-5.392309,-6.098037,-1.483095,-1.566315,9.398150,3.367552,0.580794,0.082647,3.459421,-2.562356,-8.399838,-3.849290,2.516453,-2.850659,9.008777,-4.749381,8.010744,-6.427182,6.897934,-6.261819,7.647007,-7.969408,0.158616,3.436006,-4.627592,-6.508002,6.409787,-1.851044,2.399818,-1.803527,-9.103778,-0.226349,9.164334,9.294802,6.971395,-7.467669,5.692017,5.955295,-0.826020,0.902074,-2.055200,-5.116885,0.276036,9.790723,2.560583,9.525574,-7.311832,7.605045,4.405817,-7.894116,-6.885204,6.511945,-6.261028,7.428602,0.376233,2.224058,-5.294743,-0.171444,-7.683955,-6.152584,6.232706,9.395351,3.430663,-3.149033,-1.752900,-3.617102,2.866052,-6.630184,-7.178221,-6.567521,3.400277,-6.931967,9.947540,4.615833,-1.605673,-1.797205,4.450961,3.007936,-2.254095,2.075971,3.477232,-1.295245,-5.515006,-2.888150,-9.148552,-3.353964,-3.993706,2.001026,8.924564,3.064013,-1.262702,-6.625520,-8.776714,-0.641584,9.312033,7.025005,3.022559,6.740945,-4.524759,3.438423,-7.612481,-9.528223,-1.343106,5.465374,-6.799419,8.625831,-4.600741,0.072806,6.797928,3.980243,1.213188,2.369556,-0.456620,-1.333037,-4.085272,1.044055,-9.631402,4.708351,6.372687,-0.080317,-4.069436,-8.048045,4.596838,6.920882,-3.522196,1.045688,8.714217,-6.666359,3.801998,-0.203747,-7.456619,4.740157,-6.786195,8.905892,3.191981,8.538374,0.750110,-8.330140,0.513581,-5.533855,-9.085284,-9.570838,-6.127810,-9.285703,8.315391,-7.955340,-4.306331,-6.995605,-7.086610,9.442310,-3.502748,6.316381,-1.281775,-1.029359,7.733506,1.693499,7.488542,5.821142,0.270727,9.221810,3.224337,-7.757386,8.420005,-8.893807,4.680546,7.590912,-0.309034,2.534996,-4.990391,0.038089,-0.441521,-9.423961,-0.381859,-1.372802,0.756786,-6.363316,4.337727,-1.482041,-8.370392,-1.734212,-2.175047,7.777550,4.657564,-5.252273,-5.726808,6.642359,-4.320799,-6.807287,-3.212309,-0.229083,9.450169,-3.253523,-1.127404,2.974072,3.955396,-6.136506,-9.921528,-9.933717,-4.671753,1.178906,-0.180749,-9.748667,-6.111836,5.581725,4.567630,-8.333619,0.496628,4.454683,-9.271660,-5.675478,-1.904083,6.540321,-9.371524,-9.573902,-3.803063,4.649579,2.879074,-1.000823,7.714248,-6.024465,7.259630,8.064406,8.163993,-8.936338,5.935815,8.479978,1.102782,-3.094748,-7.467394,3.458313,2.171651,-7.157597,-2.257773,-7.267649,-7.697960,-0.101306,-9.357922,-6.618600,-7.738360,2.094525,7.833809,2.715159,5.459553,-8.005425,9.734223,1.348004,1.999445,4.331142,-6.405828,9.345220,-8.614979,-2.525657,7.985224,-8.710870,-2.303219,3.493279,-9.610268,-4.765584,2.539454,5.139074,-5.508039,1.390814,-5.587550,3.032738,-0.509780,-7.718462,-0.218066,8.097204,9.904763,3.689160,6.438921,-8.164397,-5.532281,-9.039100,1.688259,-1.693447,-3.020928,6.803410,-9.833364,6.745209,7.998575,4.057677,-9.191596,1.394730,-4.740809,2.827816,-9.886746,1.491162,6.985815,-7.487150,4.146840,-2.222391,-5.016685,3.874314,7.185006,2.846460,-5.259925,-5.395196,-0.500891,-7.906366,5.230370,-6.491786,4.946847,-5.691271,4.414774,-2.741924,2.953799,-6.751606,-5.261163,-8.354237,-8.588145,7.330248,-5.797839,-2.692648,3.222258,6.773794,-2.095646,-1.460938,1.932334,-4.711877,4.408102,6.878618,-3.491828,-6.287516,3.862633,-3.629869,8.936290,-7.531354,1.252723,-3.383115,-2.986522,2.669583,1.104917,-6.984147,-8.776807,-9.050013,4.898629,-4.425752,4.776813,6.654934,0.391002,2.853285,4.318808,-4.684388,-8.936786,8.702370,-4.078923,9.112386,3.506317,-3.423294,8.776578,4.237877,8.252610,-6.003906,8.891665,6.901632,8.189537,8.586028,2.982489,4.840346,-5.952560,-6.303078,-3.682403,-8.676746,0.420081,7.798575,8.862679,-4.738068,6.097521,-1.724076,-3.834994,3.455851,-7.884753,-9.231098,8.524194,8.078942,-7.240244,-7.389797,0.029586,-5.795860,-9.167990,1.998311,3.469949,-2.735171,-3.212817,2.710505,-8.453456,-6.473966,1.535540,-7.893433,0.369730,-7.813875,2.885907,-0.094733,3.735345,-3.240115,-2.432608,-6.801149,7.203810,-1.068650,9.151191,-2.398355,5.572694,-4.093273,8.527047,5.993898,-4.948752,-5.409999,-7.633565,-9.034711,-7.684260,3.046440,9.552052,-8.221852,-2.412188,-0.166959,-3.543808,-0.742510,-8.204411,-0.648790,9.611123,-7.548063,6.207075,-5.504170,1.845173,9.201277,8.042777,-3.316126,-4.698093,6.243105,-2.719540,-0.260107,-3.569136,-7.942486,8.813333,-1.297987,-0.714622,-1.371287,3.116576,6.966613,-7.289545,-5.310145,-2.744615,-9.115367,4.222709,3.833284,7.385175,-1.039085,-2.952580,-2.580020,0.447504,0.059904,1.374458,6.835155,-3.870396,7.056960,-1.596555,-7.097946,1.488281,6.001267,-2.037547,-9.220579,1.523592,8.761816,6.511880,0.684911,-5.928635,-1.314102,6.529033,-9.428095,-5.842536,-2.301387,-0.821395,3.148391,2.063731,-1.373315,-9.999420,6.686990,-1.902762,0.036190,6.785200,-0.511473,3.963971,8.791645,0.798044,-1.013842,-9.396553,-6.192842,6.470919,-5.115879,-8.820462,-5.610287,8.425658,-7.594211,-6.329955,5.532445,7.279664,6.123964,-5.313895,8.423010,5.111042,2.048891,-0.593540,-0.012776,-0.460860,-7.653369,7.917951,6.954350,-4.606036,-9.565579,9.377254,-8.631883,-8.623755,-8.421010,3.191741,-9.747158,6.988967,-7.091495,4.467506,-8.608925,7.024336,-4.874220,8.764677,5.302945,-8.123575,1.918458,4.839183,-6.003694,5.608484,-5.549719,-6.999773,7.288131,-0.854611,9.570154,-1.941603,9.313638,-4.152043,0.466093,3.665721,3.144910,-3.577366,-6.843599,5.606355,7.896130,8.954108,9.941089,-8.651447,8.383361,-7.984283,-4.681763,-6.600813,-1.391876,-0.552291,3.259394,-5.257900,8.572020,9.128110,-9.032878,-7.342836,7.671627,8.168887,7.731939,-5.496872,-8.138517,7.984143,2.124829,6.738186,-3.038931,7.852123,6.163588,-1.473731,8.421700,-9.344916,-0.614282,1.071266,-3.623381,-2.147843,4.285321,2.081574,5.728718,-2.317747,-7.644252,-0.890465,6.074339,-7.669332,0.325448,2.304855,-1.767173,-6.415802,-6.325039,8.232935,-8.030357,-8.277986,-4.480130,-3.787637,-6.683742,-1.065537,-5.969250,9.717667,1.756663,-6.511910,4.908802,3.723169,-4.211399,-1.903681,3.251582,1.241956,-1.617737,2.617822,8.671496,-4.341917,9.161795,4.545116,-6.347597,7.882633,-0.923102,-4.890473,-0.557265,-8.017588,-4.226782,7.472474,-0.415016,6.901352,7.419045,9.210657,-0.243727,-6.650113,-5.392674,0.849349,8.917466,-9.107985,3.026469,1.025564,-9.093812,-2.999392,-5.853122,7.356287,-6.170628,5.521830,4.211040,2.704459,4.122327,6.706727,3.999539,-8.424418,-4.277297,-5.609248,3.690464,7.805608,5.869166,-4.019811,0.115875,-7.052899,8.523171,5.656344,-8.272944,-3.842432,4.174017,-6.607287,2.181984,4.705546,5.696003,5.433139,5.762581,6.176575,-7.329017,-6.341811,7.936033,2.993986,6.902614,0.766516,9.026573,3.283125,-0.482410,9.166440,-9.522159,3.092666,0.319783,-6.309306,5.977991,2.724431,-5.009679,4.034540,3.571816,-4.435745,-8.852653,-1.285897,0.613451,-4.008526,7.746682,0.867920,-4.137486,-0.745345,5.053529,-3.214754,-2.181306,-7.761982,6.783984,-4.031586,9.492806,8.666541,-0.999542,0.151296,5.687437,4.912679,-7.525480,-0.055240,2.113396,-9.893526,-3.151746,9.149098,-9.243707,1.627398,-6.229315,-8.782416,-9.748540,7.636514,-6.433901,-5.093173,-9.154008,-2.432481,4.847635]], dtype = "float64")#candidate|11534|(1, 1540)|const|float64
call_11533 = relay.TupleGetItem(func_2441_call(relay.reshape(const_11534.astype('float64'), [14, 11, 10])), 0)
call_11535 = relay.TupleGetItem(func_2444_call(relay.reshape(const_11534.astype('float64'), [14, 11, 10])), 0)
func_5164_call = mod.get_global_var('func_5164')
func_5167_call = mutated_mod.get_global_var('func_5167')
var_11542 = relay.var("var_11542", dtype = "float32", shape = (660,))#candidate|11542|(660,)|var|float32
call_11541 = relay.TupleGetItem(func_5164_call(relay.reshape(call_11471.astype('float64'), [1040,]), relay.reshape(var_11542.astype('float32'), [660,]), ), 3)
call_11543 = relay.TupleGetItem(func_5167_call(relay.reshape(call_11471.astype('float64'), [1040,]), relay.reshape(var_11542.astype('float32'), [660,]), ), 3)
output = relay.Tuple([call_11464,call_11471,call_11497,const_11498,const_11499,call_11533,const_11534,call_11541,var_11542,])
output2 = relay.Tuple([call_11465,call_11472,call_11500,const_11498,const_11499,call_11535,const_11534,call_11543,var_11542,])
func_11546 = relay.Function([var_11542,], output)
mod['func_11546'] = func_11546
mod = relay.transform.InferType()(mod)
mutated_mod['func_11546'] = func_11546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11547 = relay.var("var_11547", dtype = "float32", shape = (660,))#candidate|11547|(660,)|var|float32
func_11546_call = mutated_mod.get_global_var('func_11546')
call_11548 = func_11546_call(var_11547)
output = call_11548
func_11549 = relay.Function([var_11547], output)
mutated_mod['func_11549'] = func_11549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_11561 = relay.TupleGetItem(func_4920_call(), 2)
call_11562 = relay.TupleGetItem(func_4922_call(), 2)
var_11563 = relay.var("var_11563", dtype = "float64", shape = (520, 2))#candidate|11563|(520, 2)|var|float64
bop_11564 = relay.not_equal(call_11561.astype('bool'), relay.reshape(var_11563.astype('bool'), relay.shape_of(call_11561))) # shape=(520, 2)
bop_11567 = relay.not_equal(call_11562.astype('bool'), relay.reshape(var_11563.astype('bool'), relay.shape_of(call_11562))) # shape=(520, 2)
bop_11571 = relay.logical_or(var_11563.astype('bool'), relay.reshape(call_11561.astype('bool'), relay.shape_of(var_11563))) # shape=(520, 2)
bop_11574 = relay.logical_or(var_11563.astype('bool'), relay.reshape(call_11562.astype('bool'), relay.shape_of(var_11563))) # shape=(520, 2)
uop_11587 = relay.atanh(call_11561.astype('float32')) # shape=(520, 2)
uop_11589 = relay.atanh(call_11562.astype('float32')) # shape=(520, 2)
output = relay.Tuple([bop_11564,bop_11571,uop_11587,])
output2 = relay.Tuple([bop_11567,bop_11574,uop_11589,])
func_11603 = relay.Function([var_11563,], output)
mod['func_11603'] = func_11603
mod = relay.transform.InferType()(mod)
mutated_mod['func_11603'] = func_11603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11604 = relay.var("var_11604", dtype = "float64", shape = (520, 2))#candidate|11604|(520, 2)|var|float64
func_11603_call = mutated_mod.get_global_var('func_11603')
call_11605 = func_11603_call(var_11604)
output = call_11605
func_11606 = relay.Function([var_11604], output)
mutated_mod['func_11606'] = func_11606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9066_call = mod.get_global_var('func_9066')
func_9068_call = mutated_mod.get_global_var('func_9068')
call_11649 = func_9066_call()
call_11650 = func_9066_call()
output = call_11649
output2 = call_11650
func_11657 = relay.Function([], output)
mod['func_11657'] = func_11657
mod = relay.transform.InferType()(mod)
output = func_11657()
func_11658 = relay.Function([], output)
mutated_mod['func_11658'] = func_11658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6590_call = mod.get_global_var('func_6590')
func_6591_call = mutated_mod.get_global_var('func_6591')
call_11689 = relay.TupleGetItem(func_6590_call(), 0)
call_11690 = relay.TupleGetItem(func_6591_call(), 0)
output = call_11689
output2 = call_11690
func_11692 = relay.Function([], output)
mod['func_11692'] = func_11692
mod = relay.transform.InferType()(mod)
output = func_11692()
func_11693 = relay.Function([], output)
mutated_mod['func_11693'] = func_11693
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11694 = relay.const(-3, dtype = "uint64")#candidate|11694|()|const|uint64
const_11695 = relay.const([[[-7,-6,-5,6,-9,-6,6],[6,7,-2,9,6,8,-10],[-8,2,10,-4,9,8,8],[7,-2,-6,1,7,-1,-1],[-5,-9,-2,10,9,8,-6],[9,2,8,9,2,-3,1],[4,-5,4,1,5,9,5],[-5,4,5,-8,-10,6,-8],[-3,-2,-4,3,3,4,-7],[-3,10,3,9,-10,10,7]],[[-1,6,-5,-10,-7,7,-7],[9,5,6,9,-1,-9,9],[-10,7,1,-7,2,-5,10],[-9,2,3,-10,-3,10,9],[-5,-9,5,8,9,-2,5],[-10,-7,4,-8,7,5,7],[3,7,6,-5,-3,-9,-10],[-5,-8,10,7,7,10,-3],[3,2,-10,6,-6,9,5],[6,-6,-2,10,-10,-5,-2]],[[10,-2,7,-10,7,-3,10],[4,9,-3,-3,-9,-7,9],[7,-9,-9,1,8,-5,9],[8,1,5,4,-4,2,-9],[4,3,1,8,4,10,-1],[7,-2,-9,6,2,1,8],[-9,2,-7,5,-6,2,4],[-10,-4,5,1,-10,10,-1],[-7,-4,-6,-2,-3,2,1],[9,-3,-10,-7,4,3,-7]],[[5,-3,4,1,-6,-4,-9],[8,10,7,6,2,-4,-1],[10,9,-5,10,-2,9,1],[8,-10,1,-4,3,6,5],[-2,9,4,9,-2,9,9],[1,3,-1,-6,5,1,-1],[-3,-8,-5,-9,7,-10,-9],[1,9,10,-1,-9,5,4],[3,-10,-2,-3,7,5,2],[-3,4,-10,5,-9,3,3]],[[1,2,5,-10,2,3,7],[-3,5,9,1,-6,-9,5],[10,-8,5,5,-3,6,-10],[5,1,6,6,-9,3,5],[8,-4,8,-9,1,3,-1],[-9,10,-10,-4,8,10,-8],[1,-6,1,-7,-1,2,-2],[-8,-3,-4,3,-5,10,10],[1,4,-1,-10,2,3,-4],[9,-9,-9,-6,-7,-6,-9]],[[-4,-8,-6,6,5,-10,-3],[-2,8,-3,8,9,-6,4],[-7,-10,-9,7,-1,3,-8],[2,-3,-8,-4,8,-4,6],[3,4,3,2,-2,-9,1],[8,-4,1,-3,-8,2,10],[3,8,8,-6,7,4,7],[2,-7,5,9,9,-5,-8],[3,4,4,3,-5,-4,9],[4,3,-3,-4,-10,-4,-6]],[[5,7,4,7,-7,-1,-1],[5,-2,5,-4,-6,7,-5],[6,-2,-5,-3,4,8,-2],[4,-5,3,-9,-5,-7,3],[-10,4,8,-10,-9,-6,5],[-4,5,10,8,-7,2,-10],[-4,2,9,-1,6,-4,4],[-9,1,6,1,6,-1,-6],[5,-3,-7,5,5,-5,-5],[5,6,-8,7,-5,-2,-10]],[[5,10,-2,-1,2,-6,-9],[-5,1,-4,5,-8,-8,3],[-5,4,10,2,-9,-2,-6],[-7,3,-9,-3,3,-7,-2],[-5,4,1,2,2,-3,6],[3,4,-8,1,1,-2,-5],[5,-1,-4,4,1,-7,9],[-7,3,-6,-9,4,-2,5],[9,-1,7,9,-7,9,9],[4,-3,-3,-10,-3,-5,-8]],[[-4,-3,4,9,7,5,9],[3,-9,5,5,-8,9,3],[-2,3,5,7,9,3,4],[-10,-3,8,-10,-5,1,2],[-7,-3,8,-5,9,4,-9],[-6,6,-3,-10,2,6,-7],[-1,4,-3,-8,-3,4,6],[2,5,-8,5,-2,6,5],[1,6,2,-9,9,6,2],[-5,-7,6,6,-5,-9,4]],[[-8,5,2,1,-3,8,2],[7,-3,-4,1,4,-6,-6],[3,8,10,3,7,5,6],[6,-9,-2,5,-5,-6,4],[8,-6,-10,6,-10,-4,-5],[-10,4,9,-1,6,-8,4],[9,-5,6,2,6,7,-7],[4,2,10,-2,-7,-1,8],[-5,-3,-10,3,-10,5,-3],[3,-3,-9,-2,1,10,-6]],[[-3,2,9,-4,6,9,2],[-3,6,4,-4,6,-2,2],[5,4,-6,-7,4,6,-9],[-5,8,-8,5,-4,5,-6],[7,8,8,3,10,9,-1],[3,1,-5,-9,3,-6,-2],[-9,7,-6,9,7,-8,-1],[-1,5,6,-4,-6,5,7],[-8,-2,7,2,-2,-9,-10],[6,-7,6,2,9,3,9]]], dtype = "uint64")#candidate|11695|(11, 10, 7)|const|uint64
bop_11696 = relay.less_equal(const_11694.astype('bool'), const_11695.astype('bool')) # shape=(11, 10, 7)
func_6066_call = mod.get_global_var('func_6066')
func_6068_call = mutated_mod.get_global_var('func_6068')
call_11700 = relay.TupleGetItem(func_6066_call(), 0)
call_11701 = relay.TupleGetItem(func_6068_call(), 0)
bop_11719 = relay.maximum(const_11694.astype('int8'), const_11695.astype('int8')) # shape=(11, 10, 7)
uop_11739 = relay.asin(bop_11719.astype('float64')) # shape=(11, 10, 7)
func_10949_call = mod.get_global_var('func_10949')
func_10950_call = mutated_mod.get_global_var('func_10950')
call_11756 = relay.TupleGetItem(func_10949_call(), 0)
call_11757 = relay.TupleGetItem(func_10950_call(), 0)
func_5508_call = mod.get_global_var('func_5508')
func_5512_call = mutated_mod.get_global_var('func_5512')
const_11764 = relay.const([1.771625,-1.518366,9.688337,-3.690551,8.148730,2.714054,6.408676,8.868397,-2.613878,8.860296,3.676201,-6.203045,0.819292,6.840354,-6.134682,-5.534704,-5.870289,4.057444,-6.490336,-9.348761,-9.716935,9.949171,-1.304261,2.337211,0.676891,1.089398,5.422638,-7.175463,-0.207180,6.726983,-5.772807,-8.374948,8.932286,1.016759,9.329794,5.676387,7.946793,2.988625,3.104694,-7.342422,-4.146216,-0.605073,0.275817,-0.441314,-3.374563,0.498462,4.086075,1.555433,2.045940,-2.432685,-9.734757,-6.798172,-5.720804,-4.712378,-2.989551,-1.483271,-8.570133,7.975860,3.470222,6.771963,6.880234,7.509412,-3.116226,2.870553,7.264620,-7.408198,7.320655,3.919073,4.773694,-0.745424,6.667523,-9.609141,3.691676,5.311486,6.771552,-8.317076,7.649554,4.544891,4.979288,7.616957,4.607387,-8.477671,-3.774938,-8.803564,9.757252,-5.218457,-4.423573,-2.112741,-4.121130,-1.660834,-7.989074,-9.577659,-9.323056,8.477762,3.918880,-2.931426,6.379005,7.077655,8.901903,6.098330,-8.281962,0.427327,-2.017247,-3.543374,4.518057,-6.036034,-2.584202,-6.792758,-5.879438,-7.146470,-1.388948,-3.169898,4.916307,-3.758957,-8.204016,-7.276446,4.168744,2.274188,6.959386,-1.817155,-5.257490,9.252462,9.157635,-8.835022,7.296073,4.376379,6.655450,8.428177,-6.202641,5.536296,4.175987,2.602896,8.490459,-0.893078,4.131786,-4.083052,0.952421,-6.943217,1.650326,1.154952,9.598099,-1.798342,-2.457886,4.626127,5.379517,1.494172,-5.849204,0.211424,1.384527,1.777007,-5.032737,7.931759,5.844676,0.099434,-0.895343,5.935685,6.649013,-2.234618,-1.140473,-1.512353,9.855843,-7.783716,9.499655,5.476048,-7.844506,6.399525,-5.868317,-3.700131,-4.924210,-2.774273,-8.133671,-8.147611,-2.969635,-7.091505,-6.987715,-9.354189,-5.435726,-8.308939,7.863640,0.414883,-5.976036,-1.793819,4.769993,-2.932374,-5.194495,-7.992820,-2.889192,6.950232,3.825631,6.850470,-7.994019,6.194026,4.831164,-8.180013,-2.578401,-4.829030,-5.312832,6.105570,3.853591,3.551521,1.686176,5.883469,-3.002993,-9.029518,-7.652087,-5.438851,1.751235,5.098549,4.235100,3.081269,6.766933,-9.749951,9.309627,7.939772,1.394252,-2.418364,-1.408689,-4.851381,-7.349811,3.653411,1.294679,-6.300635,9.854923,6.098806,8.055687,-6.728730,-3.152135,2.311911,7.660907,-7.873880,9.851852,8.425802,-2.416471,2.936472,-3.173533,1.186351,-9.895852,-7.733513,-4.357334,-7.328781,2.874308,-5.186828,0.612715,4.264844,2.279379,6.482618,-8.472620,-8.081324,-0.203364,-7.049697,-4.168185,-6.149184,8.831978,0.557316,-9.891401,6.434318,-0.757825,3.616032,8.444261,-8.934136,4.847693,-0.369212,-1.354276,-9.147479,-0.101135,6.239681,5.607400,5.833206,6.543272,-6.586152,-6.773079,7.848094,2.760998,-3.571630,9.350261,9.246026,-5.976144,-3.775441,2.367506,3.168431,4.228256,-1.822917,5.416820,7.596081,-5.145984,-5.361804,-0.058580,-2.573984,8.335180,-7.839070,4.732205,7.702198,4.386953,1.492591,-3.755752,-1.467409,0.400578,-2.363191,-5.906161,2.285727,8.231542,7.376323,2.522422,-8.255337,-1.762484,5.347401,-0.462603,5.740765,6.867414,-5.216829,-7.741978,4.848946,-3.689065,-0.590733,-1.504513,9.311724,8.000511,4.874885,-2.398605,5.682379,-4.258109,6.162629,5.852890,8.733528,2.817777,4.435588,-8.944136,7.284311,-9.257247,-3.985014,-9.430436,8.410654,-6.164095,-2.325162,-1.570310,-1.017345,2.963556,5.475823,-7.118900,7.011912,0.615500,0.350174,8.624012,-5.467173,-6.790412,-1.555847,-0.055390,3.306361,-9.994929,-6.366765,3.225097,-6.977150,-9.090668,-2.071298,-5.100398,-0.051109,-6.843636,1.247033,-8.211328,3.391849,-4.979879,2.357803,9.940441,-0.731664,1.766130,-1.758891,0.245521,6.806098,2.093350,-7.280652,3.140330,9.492608,8.620199,5.636088,-4.758951,-6.487896,8.335294,1.208685,-9.096759,-5.062097,-2.005625,3.744358,4.118388,1.967017,-5.971836,-1.135311,-3.548761,4.935173,6.421166,-9.876147,2.724615,-2.011982,-6.114152,-9.651063,0.042417,-9.307162,2.641255,0.567163,-3.871742,8.822012,8.350362,-0.674830,6.153433,9.689832,7.256181,-7.997574,-7.509521,2.205215,8.628109,-1.784258,-4.210050,-6.813338,-6.867757,7.008305,1.225430,4.093627,-2.556885,-9.922228,7.626921,-2.554277,9.289406,8.597997,-2.580160,9.335758,-4.770173,-9.784115,-4.634805,3.245450,9.192323,-2.743665,7.433656,5.107314,6.889057,-0.294875,0.422054,5.331817,0.336705,-7.637462,0.689409,3.290444,9.455715,9.838563,7.680153,-6.536466,5.311375,8.039546,-7.486194,-0.141177,-5.504460,-8.100605,-0.552246,6.365772,3.818569,3.909480,4.257071,-5.902377,-5.308732,-7.808100,-2.911387,-3.760881,8.677354,5.923590,-1.638017,-0.858091,-3.392330,-8.978392,-8.310841,-0.009950,-1.520981,9.479447,9.373393,-7.674541,8.039636,8.660396,-4.102366,0.388814,8.457369,3.102613,-4.831841,-0.470337,7.459013,8.031356,-3.820084,5.474637,7.666981,-8.975872,-1.146004,3.499958,-1.588374,-9.314149,-8.207500,-0.169927,-6.181697,-7.929579,8.495301,9.822585,0.821738,6.053914,-1.472637,-1.854728,1.772592,-8.016950,-4.414799,0.957614,-5.123696,0.160852,5.445422,-9.948861,2.746341,-4.364742,-1.751797,3.932169,2.774595,3.074261,7.192989,6.198786,7.603529,9.791692,7.183167,-1.940146,-8.840281,6.868649,6.818179,8.174562,-3.116333,-4.520414,4.733365,-9.591285,-2.040352,-5.843030,-7.046145,-3.866936,-1.261250,0.478357,-9.014819,6.923175,9.766612,-2.888318,4.303941,2.996479,0.074329,-7.729675,-5.296851,1.621948,-8.517776,-2.587884,-1.307094,-5.159128,-3.869472,-3.585091,8.489583,7.660363,-7.210771,-3.513206,5.976121,0.864262,8.587224,7.058629,3.256759,-1.238538,2.203226,-0.255561,1.651470,-0.308427,-5.613913,-9.979804,-0.340126,-2.237004,6.279120,-0.983371,-9.901527,3.863279,2.082270,6.395614,-0.974664,1.469873], dtype = "float64")#candidate|11764|(576,)|const|float64
const_11765 = relay.const([-4,10,-7,2,-6,-10,-9,9,-5,-10,-5,2,-6,5,2,-7,1,6,4,7,-4,-3,3,8,3,1,-6,9,-3,2,-10,-2,8,8,7,-4,-6,5,-8,-9,2,1,10,1,-6,-9,-2,7,10,-6,3,-7,8,8,6,9,7,7,9,1,9,-10,-2,4,4,-8,-9,-6,6,3,3,-9,9,8,-1,3,-10,2,-2,3,-4,5,-3,-10,-8,10,-4,-2,2,-3,10,3,-9,-3,1,8,-6,-1,-5,9,-6,5,-7,-5,8,3,3,9,1,6,-7,-9,9,-3,3,-8,-2,-10,-1,-7,4,8,-6,-1,10,-2,2,-1,3,5,-7,-6,-7,7,5,8,5,-7,6,1,5,-4,-5,8,-10,-6,8,-7,2,5,-1,-7,1,-9,-1,-3,-4,-5,-2,8,8,1,8,10,-4,-7,10,-1,-7,-7,1,-7,9,-3,-7,-2,-5,-10,3,-2,5,-9,-3,-5,1,9,4,-6,-9,3,-9,8,10,-8,-8,-7,2,-7,6,-7,5,-8,3,-9,2,6,-7,-7,4,9,8,6,-3,6,8,6,-9,-10,8,-5,-3,4,-7,6,-8,5,2,5,8,-5,-7,8,3,10,-9,-2,6,-2,-6,-8,5,10,7,-3,9,1,-8,3,1,5,-8,2,-4,1,-5,6,-2,-9,2,-6,-1,8,-10,-3,4,-8,-8,10,-7,1,10,3,-4,1,-4,8,5,-7,8,-5,1,-9,-6,-8,-10,6,-8,1,9,9,-10,3,4,-4,1,7,3,-10,4,3,-8,-5,-7,-8,10,-4,-4,-10,6,-3,1,10,7,-6,-7,-9,9,-1,10,-5,-5,-3,-7,-9,6,1,-5,5,10,-7,10,1,-9,6,-10,-2,-3,7,-9,-4,-10,6,7,-9,1,-5,1,-10,6,10,10,-4,8,-4,8,5,4,-5,-1,9,2,4,-8,2,2,-4,5,-7,7,-1,9,5,5,4,8,-1,5,-4,10,9,-7,6,8,4,-5,2,-10,7,1,-5,-3,9,-10,3,8,-3,4,8,7,9,8,-7,-10,-6,-6,-10,-5,-6,-4,6,10,7,-3,6,-9,-3,6,-5,-4,7,-4,-8,-8,6,5,3,3,9,-5,7,8,10,10,10,8,4,6,1,-8,5,-10,9,8,-3,-1,-6,-10,4,-4,4,4,4,-7,4,-5,-9,5,10,3,8,-2,4,-1,-2,5,-8,3,6,10,-7,7,10,1,-7,1,-2,-10,-7,-5,7,-6,-8,9,-10,4,-2,1,-4,9,-1,-9,-7,9,1,4,5,-2,-10,-7,-8,8,-1,-1,5,8,-4,9,5,5,4,-5,1,2,-8,2,9,9,8,4,-2,9,1,-7,-6,4,10,-8,7,-2,8,-5,1,6,-4,3,7,3,-10,4,-1,-5,-10,-3,3,-5,7,-8,4,10,-6,-5,6,9,-8,-1,5,-3,-9,3,-10,-2,8,9,-4,3,3,1,8,5,-6,7,4,-6,6,6,-10,5,6,4,-3,10,-5,-3,-2,10,-7,-1,9,-4,9,-1,8,-8,9,6,9,8,-6,6,1,8,-3,9,-8,-6,-4,-7,2,9,-7,5,-1,-9,-8,-9,-1,9,7,5,-2,2,8,8,-3,3,-4,-8,-3,-3,2,-2,-10,4,-8,3,-9,-5,2,-9,2,9,-10,2,3,-6,9,5,-8,9,1,-5,-4,-9,6,5,8,8,8,3,5,-6,7,4,-4,1,-4,8,-9,-8,5,-4,5,2,2,-7,-7,1,-6,-9,-9,-8,7,3,-2,-10,4,1,8,3,1,6,2,-9,-4,1,-9,8,-4,1,-4,5,6,7,9,3,9,5,-7,-2,-5,8,-3,-1,1,-6,-2,3,7,10,-10,-4,-2,-2,5,4,8,-5,8,9,5,-4,-6,-5,-9,-7,-9,9,1,-2,7,8,8,6,7,-7,1,-1,10,-8,-2,9,-5,5,-10,-4,-3,-2,-4,-8,4,-5,-7,-1,-2,-6,-3,8,-3,-6,9,10,10,2,-8,7,6,-8,8,-9,-8,7,-2,-1,-7,8,7,-8,9,3,2,3,1,2,9,-10,-10,8,1,9,-6,-5,-6,-10,-5,-6,2,-9,-9,2,4,-6,-10,-8,-4,10,3,-5,-8,-6,9,-2,-1,5,1,9,1,2,2,2,-5,7,6], dtype = "uint64")#candidate|11765|(832,)|const|uint64
call_11763 = relay.TupleGetItem(func_5508_call(relay.reshape(const_11764.astype('float64'), [4, 12, 12]), relay.reshape(const_11765.astype('uint64'), [416, 2]), ), 2)
call_11766 = relay.TupleGetItem(func_5512_call(relay.reshape(const_11764.astype('float64'), [4, 12, 12]), relay.reshape(const_11765.astype('uint64'), [416, 2]), ), 2)
output = relay.Tuple([bop_11696,call_11700,uop_11739,call_11756,call_11763,const_11764,const_11765,])
output2 = relay.Tuple([bop_11696,call_11701,uop_11739,call_11757,call_11766,const_11764,const_11765,])
func_11787 = relay.Function([], output)
mod['func_11787'] = func_11787
mod = relay.transform.InferType()(mod)
mutated_mod['func_11787'] = func_11787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11787_call = mutated_mod.get_global_var('func_11787')
call_11788 = func_11787_call()
output = call_11788
func_11789 = relay.Function([], output)
mutated_mod['func_11789'] = func_11789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9966_call = mod.get_global_var('func_9966')
func_9968_call = mutated_mod.get_global_var('func_9968')
call_11819 = relay.TupleGetItem(func_9966_call(), 0)
call_11820 = relay.TupleGetItem(func_9968_call(), 0)
func_11375_call = mod.get_global_var('func_11375')
func_11376_call = mutated_mod.get_global_var('func_11376')
call_11822 = func_11375_call()
call_11823 = func_11375_call()
func_3017_call = mod.get_global_var('func_3017')
func_3020_call = mutated_mod.get_global_var('func_3020')
call_11831 = relay.TupleGetItem(func_3017_call(relay.reshape(call_11822.astype('uint32'), [4, 1, 3]), relay.reshape(call_11819.astype('uint64'), [832,]), ), 3)
call_11832 = relay.TupleGetItem(func_3020_call(relay.reshape(call_11822.astype('uint32'), [4, 1, 3]), relay.reshape(call_11819.astype('uint64'), [832,]), ), 3)
func_11657_call = mod.get_global_var('func_11657')
func_11658_call = mutated_mod.get_global_var('func_11658')
call_11833 = func_11657_call()
call_11834 = func_11657_call()
func_6419_call = mod.get_global_var('func_6419')
func_6421_call = mutated_mod.get_global_var('func_6421')
call_11845 = relay.TupleGetItem(func_6419_call(), 0)
call_11846 = relay.TupleGetItem(func_6421_call(), 0)
func_6825_call = mod.get_global_var('func_6825')
func_6828_call = mutated_mod.get_global_var('func_6828')
call_11856 = relay.TupleGetItem(func_6825_call(relay.reshape(call_11819.astype('uint64'), [832,])), 0)
call_11857 = relay.TupleGetItem(func_6828_call(relay.reshape(call_11819.astype('uint64'), [832,])), 0)
output = relay.Tuple([call_11819,call_11822,call_11831,call_11833,call_11845,call_11856,])
output2 = relay.Tuple([call_11820,call_11823,call_11832,call_11834,call_11846,call_11857,])
func_11865 = relay.Function([], output)
mod['func_11865'] = func_11865
mod = relay.transform.InferType()(mod)
output = func_11865()
func_11866 = relay.Function([], output)
mutated_mod['func_11866'] = func_11866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_11901 = relay.TupleGetItem(func_4026_call(), 1)
call_11902 = relay.TupleGetItem(func_4027_call(), 1)
uop_11914 = relay.log(call_11901.astype('float64')) # shape=(4, 4, 3)
uop_11916 = relay.log(call_11902.astype('float64')) # shape=(4, 4, 3)
func_8709_call = mod.get_global_var('func_8709')
func_8711_call = mutated_mod.get_global_var('func_8711')
call_11920 = func_8709_call()
call_11921 = func_8709_call()
func_6627_call = mod.get_global_var('func_6627')
func_6629_call = mutated_mod.get_global_var('func_6629')
call_11927 = relay.TupleGetItem(func_6627_call(), 1)
call_11928 = relay.TupleGetItem(func_6629_call(), 1)
output = relay.Tuple([uop_11914,call_11920,call_11927,])
output2 = relay.Tuple([uop_11916,call_11921,call_11928,])
func_11933 = relay.Function([], output)
mod['func_11933'] = func_11933
mod = relay.transform.InferType()(mod)
mutated_mod['func_11933'] = func_11933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11933_call = mutated_mod.get_global_var('func_11933')
call_11934 = func_11933_call()
output = call_11934
func_11935 = relay.Function([], output)
mutated_mod['func_11935'] = func_11935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9346_call = mod.get_global_var('func_9346')
func_9347_call = mutated_mod.get_global_var('func_9347')
call_11956 = relay.TupleGetItem(func_9346_call(), 0)
call_11957 = relay.TupleGetItem(func_9347_call(), 0)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_11985 = func_4406_call()
call_11986 = func_4406_call()
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_11995 = relay.TupleGetItem(func_5033_call(), 3)
call_11996 = relay.TupleGetItem(func_5035_call(), 3)
func_10807_call = mod.get_global_var('func_10807')
func_10811_call = mutated_mod.get_global_var('func_10811')
const_12023 = relay.const([[-2,8],[-6,6],[-4,-9],[-7,-2],[7,5],[-8,-2],[-9,-3],[-9,-10],[-9,-10],[-5,5],[3,8],[2,-1],[7,10],[9,10],[-7,10],[-5,-8],[1,1],[4,-5],[-1,-9],[3,3],[-7,9],[5,6],[2,7],[-8,-2],[-2,-7],[1,3],[7,9],[3,-1],[-7,8],[10,3],[2,9],[-6,9],[6,-6],[9,2],[-3,-5],[-3,7],[-7,-1],[9,-8],[5,-10],[-2,10],[-6,6],[-8,-1],[-9,7],[5,1],[1,10],[5,10],[7,2],[-1,-7],[1,-2],[2,-9],[-10,-3],[4,-6],[6,-4],[5,-3],[-4,-2],[-9,9],[4,6],[5,-7],[6,1],[-5,-3],[-4,-6],[-1,-1],[-5,-9],[4,2],[-1,2],[-6,4],[-10,-1],[3,-8],[1,8],[-2,-6],[-2,9],[6,1],[-10,5],[3,-9],[6,10],[2,-8],[9,-6],[5,-5],[-8,2],[-6,1],[-8,-3],[8,8],[9,-3],[5,7],[-7,4],[-4,8],[5,-8],[-3,-8],[-7,-5],[-2,1],[10,-6],[7,-8],[4,-6],[-3,2],[4,-3],[-1,9],[-2,7],[7,9],[3,-10],[-7,-5],[-10,-3],[7,3],[7,10],[6,8],[-4,-6],[-10,-8],[-10,-5],[7,-10],[-3,2],[-10,3],[2,5],[-1,-10],[7,-7],[10,-2],[-4,-7],[-7,9],[-2,1],[-7,-1],[-6,-9],[-9,-5],[4,3],[-7,-4],[2,-1],[-10,8],[-1,-6],[-3,-9],[3,-9],[6,9],[4,-6],[9,-2],[-3,9],[-3,-5],[-7,-7],[8,-1],[-4,5],[2,2],[8,-9],[-9,-9],[3,-8],[-6,-5],[6,5],[-7,-6],[9,-3],[-5,-9],[6,-1],[8,-9],[-9,-9],[10,10],[-5,-1],[-3,5],[6,5],[4,6],[3,-5],[1,-1],[-1,-5],[-6,8],[-2,-6],[-3,9],[9,-3],[-7,5],[8,10],[-5,10],[-5,8],[2,3],[-2,10],[-9,7],[2,-1],[8,-8],[5,8],[1,8],[2,7],[10,9],[8,7],[10,-3],[3,9],[1,10],[7,8],[3,-6],[-9,-3],[3,-1],[3,6],[4,-4],[-7,-8],[4,6],[3,1],[-7,-5],[10,-7],[9,-3],[8,8],[1,6],[-6,-8],[-2,2],[-8,5],[10,4],[-7,-10],[-9,-3],[-4,-8],[2,5],[-8,-8],[7,8],[-3,-1],[-3,10],[7,8],[-4,-2],[1,-5],[4,1],[-3,4],[9,5],[5,4],[2,9],[5,-5],[10,9],[-7,-4],[-4,-3],[-2,-7],[1,2],[8,5],[9,9],[-5,4],[2,-9],[-10,2],[-8,1],[3,10],[7,-9],[7,5],[10,-9],[-8,2],[-10,1],[-4,6],[-7,1],[-4,-4],[-2,-8],[-9,-4],[-8,-7],[7,8],[-10,7],[-1,5],[9,-10],[8,4],[8,-8],[6,7],[-4,10],[-4,9],[5,-10],[-1,4],[3,-3],[-7,1],[-8,4],[3,-7],[8,10],[-6,-9],[-7,7],[6,-7],[7,-1],[6,2],[5,9],[-9,-6],[-4,10],[7,10],[8,1],[-3,6],[10,-6],[1,4],[6,-3],[2,4],[6,-7],[-3,7],[8,-7],[8,-1],[-3,7],[-9,-10],[-6,9],[-4,5],[7,3],[9,-1],[-7,8],[-4,-6],[-9,2],[5,2],[7,-9],[-6,-1],[6,-5],[1,4],[8,5],[-4,-10],[-5,-3],[-4,-2],[-8,-2],[-7,9],[6,-10],[2,6],[9,-2],[2,8],[-2,-10],[5,7],[-4,8],[-3,-9],[-3,-5],[5,4],[5,-9],[-6,6],[7,6],[7,5],[-2,7],[2,-4],[4,-9],[-3,5],[7,-4],[-10,-2],[-6,8],[2,9],[6,1],[3,-2],[-5,8],[-4,-5],[-10,5],[-9,6],[7,-3],[7,5],[9,1],[1,8],[4,3],[2,8],[-7,1],[-2,-5],[3,8],[-1,3],[-6,1],[8,3],[-9,10],[4,-3],[-3,-9],[3,1],[-2,-6],[-1,3],[5,-3],[5,-5],[-2,-8],[-4,-7],[7,-9],[-10,4],[1,-2],[-1,10],[-1,1],[10,-2],[2,1],[3,3],[6,8],[-6,5],[-6,-10],[4,-5],[4,2],[-3,-6],[-6,-2],[-5,-9],[-9,-4],[-1,4],[9,-4],[-3,-7],[6,-1],[-6,5],[2,-1],[4,-7],[-6,8],[1,5],[-8,-3],[10,10],[-1,-5],[7,-7],[7,7],[7,-4],[6,-10],[-6,7],[4,4],[1,-9],[4,9],[4,-10],[5,2],[-3,5],[-8,6],[-10,7],[2,7],[7,8],[-10,3],[-3,4],[-2,2],[-1,-3],[-3,-5],[2,8],[-5,-9],[-1,-4],[-4,-4],[1,6],[2,-9],[6,4],[-10,4],[-10,8],[-7,6],[4,10],[8,-6],[2,2],[-2,9],[-2,-1],[9,-6],[10,-4],[1,-9],[-9,-4],[3,-6],[5,-10],[-9,-7],[1,3],[5,-9],[-3,6],[-3,8],[1,1],[-5,-10],[-4,-7],[7,-4],[-4,-8],[-8,6],[2,-3],[6,-8],[-7,-1],[-7,1],[9,-6],[2,7],[-9,-6],[4,6],[5,-10],[3,8],[-9,10],[-9,-9],[1,-9],[5,10],[10,9],[-10,-9],[-6,-6],[9,9],[-2,-7],[-2,-3],[2,-5],[-7,1],[10,1],[-6,-5],[-1,1],[4,1],[-1,-10],[3,-5],[5,-1],[4,10],[-1,6],[-3,-10],[-3,-4],[1,4],[4,-4],[-7,-1],[10,5],[-4,-9],[-7,-4],[5,5],[-5,6],[6,7],[-6,-8],[-1,-5],[3,-4],[-4,3],[8,-4],[-1,1],[-1,3],[9,-9],[2,-7],[-8,-3],[-10,-9],[-10,10],[10,-2],[-4,-1],[2,-4],[4,5],[1,-9],[4,-2],[-1,-1],[-1,-10],[4,6],[-5,-2],[-10,7],[2,-2],[-5,3],[-4,-6],[-4,-5],[-9,-10],[7,2],[2,8],[-2,8],[8,-6],[10,4],[4,9],[6,-5],[-1,9],[-10,9],[-5,-5],[-3,-1],[-2,5],[8,-6],[-9,10]], dtype = "uint64")#candidate|12023|(504, 2)|const|uint64
var_12024 = relay.var("var_12024", dtype = "bool", shape = (5, 104))#candidate|12024|(5, 104)|var|bool
call_12022 = relay.TupleGetItem(func_10807_call(relay.reshape(const_12023.astype('uint64'), [1008,]), relay.reshape(var_12024.astype('bool'), [520,]), ), 5)
call_12025 = relay.TupleGetItem(func_10811_call(relay.reshape(const_12023.astype('uint64'), [1008,]), relay.reshape(var_12024.astype('bool'), [520,]), ), 5)
output = relay.Tuple([call_11956,call_11985,call_11995,call_12022,const_12023,var_12024,])
output2 = relay.Tuple([call_11957,call_11986,call_11996,call_12025,const_12023,var_12024,])
func_12032 = relay.Function([var_12024,], output)
mod['func_12032'] = func_12032
mod = relay.transform.InferType()(mod)
mutated_mod['func_12032'] = func_12032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12033 = relay.var("var_12033", dtype = "bool", shape = (5, 104))#candidate|12033|(5, 104)|var|bool
func_12032_call = mutated_mod.get_global_var('func_12032')
call_12034 = func_12032_call(var_12033)
output = call_12034
func_12035 = relay.Function([var_12033], output)
mutated_mod['func_12035'] = func_12035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10909_call = mod.get_global_var('func_10909')
func_10911_call = mutated_mod.get_global_var('func_10911')
call_12053 = relay.TupleGetItem(func_10909_call(), 0)
call_12054 = relay.TupleGetItem(func_10911_call(), 0)
output = relay.Tuple([call_12053,])
output2 = relay.Tuple([call_12054,])
func_12055 = relay.Function([], output)
mod['func_12055'] = func_12055
mod = relay.transform.InferType()(mod)
output = func_12055()
func_12056 = relay.Function([], output)
mutated_mod['func_12056'] = func_12056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9172_call = mod.get_global_var('func_9172')
func_9173_call = mutated_mod.get_global_var('func_9173')
call_12144 = relay.TupleGetItem(func_9172_call(), 0)
call_12145 = relay.TupleGetItem(func_9173_call(), 0)
func_8709_call = mod.get_global_var('func_8709')
func_8711_call = mutated_mod.get_global_var('func_8711')
call_12149 = func_8709_call()
call_12150 = func_8709_call()
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_12154 = func_5095_call()
call_12155 = func_5095_call()
func_10673_call = mod.get_global_var('func_10673')
func_10676_call = mutated_mod.get_global_var('func_10676')
var_12194 = relay.var("var_12194", dtype = "int8", shape = (640,))#candidate|12194|(640,)|var|int8
call_12193 = func_10673_call(relay.reshape(var_12194.astype('int8'), [10, 16, 4]))
call_12195 = func_10673_call(relay.reshape(var_12194.astype('int8'), [10, 16, 4]))
func_6358_call = mod.get_global_var('func_6358')
func_6360_call = mutated_mod.get_global_var('func_6360')
call_12200 = func_6358_call()
call_12201 = func_6358_call()
output = relay.Tuple([call_12144,call_12149,call_12154,call_12193,var_12194,call_12200,])
output2 = relay.Tuple([call_12145,call_12150,call_12155,call_12195,var_12194,call_12201,])
func_12208 = relay.Function([var_12194,], output)
mod['func_12208'] = func_12208
mod = relay.transform.InferType()(mod)
mutated_mod['func_12208'] = func_12208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12209 = relay.var("var_12209", dtype = "int8", shape = (640,))#candidate|12209|(640,)|var|int8
func_12208_call = mutated_mod.get_global_var('func_12208')
call_12210 = func_12208_call(var_12209)
output = call_12210
func_12211 = relay.Function([var_12209], output)
mutated_mod['func_12211'] = func_12211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10909_call = mod.get_global_var('func_10909')
func_10911_call = mutated_mod.get_global_var('func_10911')
call_12280 = relay.TupleGetItem(func_10909_call(), 0)
call_12281 = relay.TupleGetItem(func_10911_call(), 0)
output = call_12280
output2 = call_12281
func_12291 = relay.Function([], output)
mod['func_12291'] = func_12291
mod = relay.transform.InferType()(mod)
output = func_12291()
func_12292 = relay.Function([], output)
mutated_mod['func_12292'] = func_12292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_12308 = relay.TupleGetItem(func_7196_call(), 0)
call_12309 = relay.TupleGetItem(func_7197_call(), 0)
output = call_12308
output2 = call_12309
func_12310 = relay.Function([], output)
mod['func_12310'] = func_12310
mod = relay.transform.InferType()(mod)
mutated_mod['func_12310'] = func_12310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12310_call = mutated_mod.get_global_var('func_12310')
call_12311 = func_12310_call()
output = call_12311
func_12312 = relay.Function([], output)
mutated_mod['func_12312'] = func_12312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9805_call = mod.get_global_var('func_9805')
func_9806_call = mutated_mod.get_global_var('func_9806')
call_12372 = relay.TupleGetItem(func_9805_call(), 1)
call_12373 = relay.TupleGetItem(func_9806_call(), 1)
output = call_12372
output2 = call_12373
func_12374 = relay.Function([], output)
mod['func_12374'] = func_12374
mod = relay.transform.InferType()(mod)
mutated_mod['func_12374'] = func_12374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12374_call = mutated_mod.get_global_var('func_12374')
call_12375 = func_12374_call()
output = call_12375
func_12376 = relay.Function([], output)
mutated_mod['func_12376'] = func_12376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6254_call = mod.get_global_var('func_6254')
func_6255_call = mutated_mod.get_global_var('func_6255')
call_12411 = relay.TupleGetItem(func_6254_call(), 0)
call_12412 = relay.TupleGetItem(func_6255_call(), 0)
output = relay.Tuple([call_12411,])
output2 = relay.Tuple([call_12412,])
func_12416 = relay.Function([], output)
mod['func_12416'] = func_12416
mod = relay.transform.InferType()(mod)
output = func_12416()
func_12417 = relay.Function([], output)
mutated_mod['func_12417'] = func_12417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11062_call = mutated_mod.get_global_var('func_11062')
call_12437 = relay.TupleGetItem(func_11061_call(), 0)
call_12438 = relay.TupleGetItem(func_11062_call(), 0)
output = relay.Tuple([call_12437,])
output2 = relay.Tuple([call_12438,])
func_12453 = relay.Function([], output)
mod['func_12453'] = func_12453
mod = relay.transform.InferType()(mod)
output = func_12453()
func_12454 = relay.Function([], output)
mutated_mod['func_12454'] = func_12454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11692_call = mod.get_global_var('func_11692')
func_11693_call = mutated_mod.get_global_var('func_11693')
call_12460 = func_11692_call()
call_12461 = func_11692_call()
var_12475 = relay.var("var_12475", dtype = "uint32", shape = (4, 11, 3))#candidate|12475|(4, 11, 3)|var|uint32
bop_12476 = relay.right_shift(call_12460.astype('int32'), var_12475.astype('int32')) # shape=(4, 11, 3)
bop_12479 = relay.right_shift(call_12461.astype('int32'), var_12475.astype('int32')) # shape=(4, 11, 3)
output = bop_12476
output2 = bop_12479
func_12490 = relay.Function([var_12475,], output)
mod['func_12490'] = func_12490
mod = relay.transform.InferType()(mod)
var_12491 = relay.var("var_12491", dtype = "uint32", shape = (4, 11, 3))#candidate|12491|(4, 11, 3)|var|uint32
output = func_12490(var_12491)
func_12492 = relay.Function([var_12491], output)
mutated_mod['func_12492'] = func_12492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7641_call = mod.get_global_var('func_7641')
func_7643_call = mutated_mod.get_global_var('func_7643')
call_12511 = relay.TupleGetItem(func_7641_call(), 0)
call_12512 = relay.TupleGetItem(func_7643_call(), 0)
func_9562_call = mod.get_global_var('func_9562')
func_9565_call = mutated_mod.get_global_var('func_9565')
const_12526 = relay.const([False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True], dtype = "bool")#candidate|12526|(520,)|const|bool
const_12527 = relay.const([[3.923358,4.826451],[8.561375,6.032877],[5.667314,-9.212097],[9.706687,-3.493302],[-1.590506,-0.549271],[-7.991808,1.765611],[2.647199,6.325568],[-3.073049,-9.097160],[2.915005,-5.834359],[4.079716,8.623991],[1.626645,0.242782],[3.277906,7.260751],[-8.879831,-3.803531],[-1.246891,6.236207],[-0.023136,8.024388],[-7.141553,-3.171657],[1.227832,-3.920355],[-3.971252,-5.498700],[-6.254416,0.376938],[7.720660,9.496005],[-5.531625,-3.414862],[1.365452,-9.731126],[-1.831437,9.228257],[3.785275,-3.456164],[-3.470557,2.089151],[-9.633962,-2.956041],[9.110100,-5.493953],[-4.634420,-3.518020],[7.853297,6.752992],[4.487258,-7.040546],[-1.083730,-2.965936],[5.228501,-1.501652],[1.976144,0.515422],[2.319720,-5.800298],[1.744313,8.331005],[-8.089644,-5.527576],[5.942086,4.232962],[8.101648,-2.381450],[4.659270,-2.150346],[-0.114324,-1.642807],[-0.088201,1.933278],[-5.005710,9.009588],[3.314402,2.958754],[-5.048118,4.999586],[-9.415175,-9.471478],[8.419270,9.030952],[1.155689,6.566571],[-1.999317,-7.151771],[4.897486,4.401189],[5.841923,2.217254],[3.132211,1.686811],[-9.827733,3.282366],[6.899381,2.861614],[8.452179,0.857574],[-1.930521,-8.950422],[-6.558366,9.503128],[-8.094658,3.672595],[4.059690,-4.031726],[-2.825507,1.251732],[7.854850,2.962907],[-8.859803,7.881695],[0.230396,5.825663],[1.254689,-0.561573],[-7.279703,-0.217384],[-3.705869,-3.731145],[-3.407028,9.235425],[-3.719931,-1.003878],[1.565948,-0.237597],[-9.903847,8.216798],[-3.654433,2.276580],[-0.494418,-9.083492],[3.895872,-6.508099],[-4.384971,-8.389580],[3.556548,1.586812],[-7.605627,5.151235],[8.848529,4.625190],[3.732854,5.626611],[6.552361,-4.009799],[9.474249,-1.647069],[3.251012,-3.203273],[-9.996018,-4.486022],[-5.001732,3.350132],[6.787412,0.535140],[8.229360,-6.597577],[7.873684,-5.354220],[-7.649712,1.839188],[6.524129,0.292445],[-0.172699,8.885680],[-4.013019,-0.804758],[8.419964,7.192807],[5.800949,-4.091406],[2.290352,4.160651],[-6.520646,-3.342812],[-5.384221,-4.010229],[6.967245,-5.234308],[-7.647047,-4.415526],[-5.272503,6.206385],[4.687825,-2.015960],[7.958967,5.797941],[-8.046991,-6.076795],[-0.761873,3.272241],[-1.466696,9.491758],[9.081392,8.060391],[3.759034,-0.282341],[-5.870995,5.563035],[-5.666707,-7.794826],[-4.445768,1.464788],[1.465959,-3.027957],[-4.361253,-5.011279],[7.019738,-6.934717],[-6.423073,-0.978502],[-1.045146,1.108936],[8.935571,-7.228724],[-6.030652,2.529015],[-9.315224,3.792594],[-4.808272,1.849394],[-2.620991,9.344177],[9.795485,-8.558554],[9.008995,1.909355],[-2.401327,8.210426],[-9.259432,2.829693],[-1.944175,9.618901],[0.312838,-3.557208],[-9.368726,-9.429958],[-9.115983,1.479392],[-6.037113,8.113391],[-9.211946,5.340984],[2.863645,-3.720878],[-1.703914,-9.781193],[3.700138,8.471004],[3.187067,-2.942879],[8.435514,-1.040153],[9.303219,-1.494980],[7.508989,1.049094],[-8.907652,-8.611535],[5.036168,6.545479],[2.346896,7.800470],[-9.720734,1.018477],[-2.614222,1.323461],[8.829906,3.743763],[7.044418,-1.858756],[6.430978,9.430717],[-9.226373,6.930666],[-2.901103,3.612773],[2.177461,-1.417773],[1.830407,0.627554],[-7.537240,6.687193],[-1.082397,-2.324669],[-8.861807,-6.128014],[-8.971993,-0.762103],[-8.992072,8.727718],[-4.645059,-9.477442],[3.081895,1.430513],[-7.600514,-1.543143],[-4.357931,-5.891669],[9.474025,-3.569261],[2.081612,1.449527],[-5.655438,-1.880308],[-0.044425,-4.972704],[-9.259454,-3.521973],[4.416753,-7.638563],[-1.997061,-9.531601],[8.695466,2.534498],[5.719199,-6.894788],[-9.887999,2.011288],[9.860412,1.287680],[3.777342,9.100347],[-5.789644,6.628524],[9.240184,-0.859630],[-0.524155,-1.865244],[8.568431,-4.663015],[-3.743380,-2.202306],[0.383911,6.003758],[3.598062,-2.274621],[-6.117102,2.539288],[2.487449,1.704879],[-9.614818,-6.132310],[-8.568765,-6.188553],[-6.610445,5.155449],[-5.116056,4.091005],[4.903927,-4.143657],[-8.125202,7.312000],[-9.211938,4.792984],[6.408968,8.490499],[-3.762938,-5.907492],[-3.145942,4.977404],[-9.146508,1.414436],[-4.605247,-0.133128],[-8.843960,-7.868721],[3.146436,8.916762],[-0.504414,1.775635],[2.706390,-0.542740],[-2.353183,0.484274],[7.415769,6.861507],[2.963018,-2.338533],[9.729674,2.415816],[-7.779206,-4.066058],[5.247514,2.485847],[2.979848,5.219535],[0.590646,-2.694903],[-6.173656,6.362231],[-5.432552,8.321748],[5.867719,8.888471],[-4.323979,-1.573974],[6.006774,-1.222052],[4.656879,-0.272482],[-4.309327,8.178083],[9.742665,3.720810],[1.518664,-9.526789],[1.495621,7.567223],[9.144160,-7.085425],[3.203792,-0.953540],[7.992535,4.120274],[5.713464,3.254423],[4.305793,1.083677],[6.337850,5.453290],[4.882135,-8.621008],[0.025122,-3.778610],[5.547138,0.634940],[6.892275,5.771775],[-1.534043,4.769298],[-2.782348,-2.464420],[-3.051264,7.629767],[-9.991860,-1.050156],[-7.734617,2.221291],[2.015124,-2.084145],[-8.637743,2.229019],[-6.805718,-3.067185],[-8.339069,-4.838935],[7.208501,-3.027592],[-3.356335,2.786753],[-6.864231,2.117270],[-6.337763,3.878882],[-4.437816,-7.906665],[2.795473,-2.536012],[-8.689212,-2.053966],[7.561866,-5.969904],[1.932078,-0.672165],[-6.355056,8.696207],[2.772843,3.456704],[6.635593,5.314651],[-0.603589,-1.319332],[-9.940070,3.611537],[4.363391,5.747249],[-9.381648,9.622802],[-9.796578,-6.974748],[5.226414,-7.043342],[-5.120828,5.223752],[-8.222928,5.333237],[-2.718494,-7.396992],[-3.403671,-6.627290],[0.511487,-6.369231],[8.229278,-8.128004],[2.417437,-7.689100],[-5.398747,-2.234665],[-1.873237,-5.142856],[-8.507262,3.866693],[2.368413,6.086190],[-6.336760,4.250116],[6.849188,0.699287],[-1.496856,1.047320],[-1.594552,-9.281568],[-3.919375,7.789577],[-7.400748,1.635055],[2.501502,-4.447348],[-5.977576,4.511236],[9.040668,-4.150048],[-7.724107,4.679151],[0.216507,3.917553],[-0.380886,-9.096647],[-4.603650,0.874770],[3.178187,4.742157],[1.468625,1.203833],[-2.320324,-3.485275],[-6.071537,-5.175607],[8.217920,1.810922],[-4.324964,-2.141583],[-7.293781,3.415584],[2.872070,-2.167070],[2.669896,1.566010],[3.278567,-0.389486],[5.187749,7.993091],[-1.022865,0.394164],[0.836347,-3.100715],[0.920807,-3.853176],[-0.121028,-2.674957],[-4.588247,-0.836741],[-8.473241,-2.155774],[1.735339,7.223379],[-8.074527,-0.140233],[1.511904,-8.821947],[-2.015873,-3.787386],[8.222568,8.677211],[7.855213,7.151346],[-6.396534,6.509718],[-4.932443,-1.246078],[5.465073,-9.398136],[-0.832733,-8.410089],[-0.202278,-0.181972],[2.701511,-9.246928],[4.173760,-9.336721],[2.037686,-0.571285],[-5.306278,5.562922],[-5.038408,-8.110190],[3.309894,2.897346],[3.423778,1.344521],[-6.373640,-2.333410],[2.256840,-8.279797],[-2.394246,3.865555],[8.057981,-7.663579],[8.474604,-9.216192],[3.826635,8.783506],[2.397934,7.977730],[-0.064973,5.486412],[-0.046618,8.951427],[-9.051377,9.320644],[-9.204496,0.557439],[-0.778974,5.760477],[0.440459,0.553494],[-5.581983,1.320908],[8.432203,-6.942081],[-2.015981,-5.559712],[1.905855,-2.096619],[-1.614551,7.061124],[-9.374270,-4.226930],[-2.758673,-6.166378],[2.220825,-8.638332],[0.690052,7.547853],[-9.714646,-7.232423],[7.115256,-7.889230]], dtype = "float32")#candidate|12527|(330, 2)|const|float32
call_12525 = relay.TupleGetItem(func_9562_call(relay.reshape(const_12526.astype('bool'), [520,]), relay.reshape(const_12527.astype('float32'), [660,]), ), 3)
call_12528 = relay.TupleGetItem(func_9565_call(relay.reshape(const_12526.astype('bool'), [520,]), relay.reshape(const_12527.astype('float32'), [660,]), ), 3)
output = relay.Tuple([call_12511,call_12525,const_12526,const_12527,])
output2 = relay.Tuple([call_12512,call_12528,const_12526,const_12527,])
func_12546 = relay.Function([], output)
mod['func_12546'] = func_12546
mod = relay.transform.InferType()(mod)
mutated_mod['func_12546'] = func_12546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12546_call = mutated_mod.get_global_var('func_12546')
call_12547 = func_12546_call()
output = call_12547
func_12548 = relay.Function([], output)
mutated_mod['func_12548'] = func_12548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9091_call = mod.get_global_var('func_9091')
func_9093_call = mutated_mod.get_global_var('func_9093')
call_12565 = relay.TupleGetItem(func_9091_call(), 0)
call_12566 = relay.TupleGetItem(func_9093_call(), 0)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_12567 = relay.TupleGetItem(func_9199_call(), 1)
call_12568 = relay.TupleGetItem(func_9200_call(), 1)
func_4814_call = mod.get_global_var('func_4814')
func_4817_call = mutated_mod.get_global_var('func_4817')
const_12589 = relay.const([-10,-2,-10,-2,8,5,-1,1,-6,-4,7,7,10,8,5,-10,-2,7,-7,-4,3,6,-10,-3,-2,-7,10,4,-5,6,4,9,8,-9,-7,2,4,-3,-7,-5,5,7,5,5,-4,4,-9,-3,10,-4,6,-8,5,7,10,-2,3,10,3,-1,-10,-4,-9,6,8,8,-7,6,-10,6,4,-4,-7,4,2,6,10,9,-6,1,-8,-2,7,-6,1,-6,-10,-4,5,-7,-3,8,-5,-7,5,-7,-8,7,6,-4,-5,-4,3,2,-5,-6,3,4], dtype = "uint32")#candidate|12589|(108,)|const|uint32
call_12588 = relay.TupleGetItem(func_4814_call(relay.reshape(const_12589.astype('uint32'), [4, 9, 3])), 1)
call_12590 = relay.TupleGetItem(func_4817_call(relay.reshape(const_12589.astype('uint32'), [4, 9, 3])), 1)
func_8376_call = mod.get_global_var('func_8376')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_12592 = relay.TupleGetItem(func_8376_call(), 0)
call_12593 = relay.TupleGetItem(func_8377_call(), 0)
output = relay.Tuple([call_12565,call_12567,call_12588,const_12589,call_12592,])
output2 = relay.Tuple([call_12566,call_12568,call_12590,const_12589,call_12593,])
func_12596 = relay.Function([], output)
mod['func_12596'] = func_12596
mod = relay.transform.InferType()(mod)
output = func_12596()
func_12597 = relay.Function([], output)
mutated_mod['func_12597'] = func_12597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_12649 = func_4332_call()
call_12650 = func_4332_call()
output = call_12649
output2 = call_12650
func_12651 = relay.Function([], output)
mod['func_12651'] = func_12651
mod = relay.transform.InferType()(mod)
mutated_mod['func_12651'] = func_12651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12651_call = mutated_mod.get_global_var('func_12651')
call_12652 = func_12651_call()
output = call_12652
func_12653 = relay.Function([], output)
mutated_mod['func_12653'] = func_12653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mod.get_global_var('func_6627')
func_6629_call = mutated_mod.get_global_var('func_6629')
call_12654 = relay.TupleGetItem(func_6627_call(), 0)
call_12655 = relay.TupleGetItem(func_6629_call(), 0)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_12658 = relay.TupleGetItem(func_9199_call(), 0)
call_12659 = relay.TupleGetItem(func_9200_call(), 0)
output = relay.Tuple([call_12654,call_12658,])
output2 = relay.Tuple([call_12655,call_12659,])
func_12660 = relay.Function([], output)
mod['func_12660'] = func_12660
mod = relay.transform.InferType()(mod)
output = func_12660()
func_12661 = relay.Function([], output)
mutated_mod['func_12661'] = func_12661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_12665 = relay.TupleGetItem(func_5085_call(), 1)
call_12666 = relay.TupleGetItem(func_5086_call(), 1)
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_12673 = relay.TupleGetItem(func_5033_call(), 2)
call_12674 = relay.TupleGetItem(func_5035_call(), 2)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
call_12691 = relay.TupleGetItem(func_2792_call(relay.reshape(call_12673.astype('float64'), [520, 2])), 0)
call_12692 = relay.TupleGetItem(func_2794_call(relay.reshape(call_12673.astype('float64'), [520, 2])), 0)
output = relay.Tuple([call_12665,call_12673,call_12691,])
output2 = relay.Tuple([call_12666,call_12674,call_12692,])
func_12698 = relay.Function([], output)
mod['func_12698'] = func_12698
mod = relay.transform.InferType()(mod)
output = func_12698()
func_12699 = relay.Function([], output)
mutated_mod['func_12699'] = func_12699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6590_call = mod.get_global_var('func_6590')
func_6591_call = mutated_mod.get_global_var('func_6591')
call_12700 = relay.TupleGetItem(func_6590_call(), 0)
call_12701 = relay.TupleGetItem(func_6591_call(), 0)
output = call_12700
output2 = call_12701
func_12708 = relay.Function([], output)
mod['func_12708'] = func_12708
mod = relay.transform.InferType()(mod)
mutated_mod['func_12708'] = func_12708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12708_call = mutated_mod.get_global_var('func_12708')
call_12709 = func_12708_call()
output = call_12709
func_12710 = relay.Function([], output)
mutated_mod['func_12710'] = func_12710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11062_call = mutated_mod.get_global_var('func_11062')
call_12729 = relay.TupleGetItem(func_11061_call(), 0)
call_12730 = relay.TupleGetItem(func_11062_call(), 0)
output = call_12729
output2 = call_12730
func_12753 = relay.Function([], output)
mod['func_12753'] = func_12753
mod = relay.transform.InferType()(mod)
output = func_12753()
func_12754 = relay.Function([], output)
mutated_mod['func_12754'] = func_12754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12651_call = mod.get_global_var('func_12651')
func_12653_call = mutated_mod.get_global_var('func_12653')
call_12774 = func_12651_call()
call_12775 = func_12651_call()
output = call_12774
output2 = call_12775
func_12782 = relay.Function([], output)
mod['func_12782'] = func_12782
mod = relay.transform.InferType()(mod)
mutated_mod['func_12782'] = func_12782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12782_call = mutated_mod.get_global_var('func_12782')
call_12783 = func_12782_call()
output = call_12783
func_12784 = relay.Function([], output)
mutated_mod['func_12784'] = func_12784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13001 = relay.var("var_13001", dtype = "float64", shape = (4, 9, 13))#candidate|13001|(4, 9, 13)|var|float64
uop_13002 = relay.acos(var_13001.astype('float64')) # shape=(4, 9, 13)
output = relay.Tuple([uop_13002,])
output2 = relay.Tuple([uop_13002,])
func_13013 = relay.Function([var_13001,], output)
mod['func_13013'] = func_13013
mod = relay.transform.InferType()(mod)
mutated_mod['func_13013'] = func_13013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13014 = relay.var("var_13014", dtype = "float64", shape = (4, 9, 13))#candidate|13014|(4, 9, 13)|var|float64
func_13013_call = mutated_mod.get_global_var('func_13013')
call_13015 = func_13013_call(var_13014)
output = call_13015
func_13016 = relay.Function([var_13014], output)
mutated_mod['func_13016'] = func_13016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_13034 = relay.TupleGetItem(func_6009_call(), 0)
call_13035 = relay.TupleGetItem(func_6011_call(), 0)
func_3482_call = mod.get_global_var('func_3482')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_13044 = relay.TupleGetItem(func_3482_call(), 0)
call_13045 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_13034,call_13044,])
output2 = relay.Tuple([call_13035,call_13045,])
func_13050 = relay.Function([], output)
mod['func_13050'] = func_13050
mod = relay.transform.InferType()(mod)
output = func_13050()
func_13051 = relay.Function([], output)
mutated_mod['func_13051'] = func_13051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_13060 = func_4406_call()
call_13061 = func_4406_call()
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_13075 = func_10518_call()
call_13076 = func_10518_call()
output = relay.Tuple([call_13060,call_13075,])
output2 = relay.Tuple([call_13061,call_13076,])
func_13086 = relay.Function([], output)
mod['func_13086'] = func_13086
mod = relay.transform.InferType()(mod)
output = func_13086()
func_13087 = relay.Function([], output)
mutated_mod['func_13087'] = func_13087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_13139 = relay.TupleGetItem(func_2713_call(), 0)
call_13140 = relay.TupleGetItem(func_2715_call(), 0)
output = call_13139
output2 = call_13140
func_13156 = relay.Function([], output)
mod['func_13156'] = func_13156
mod = relay.transform.InferType()(mod)
mutated_mod['func_13156'] = func_13156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13156_call = mutated_mod.get_global_var('func_13156')
call_13157 = func_13156_call()
output = call_13157
func_13158 = relay.Function([], output)
mutated_mod['func_13158'] = func_13158
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13166 = relay.const([[[-1.810911,-2.510549,-2.724739,-8.947271,5.093470,4.680727,1.542511,-4.418762,1.530216,-9.724923,-4.085211],[2.914205,5.430647,-4.051934,1.465567,-0.386589,-1.051288,-6.141662,-8.794448,4.557126,3.960853,-3.593298],[3.272091,-4.756509,-5.212948,-3.466476,0.469747,-9.664167,-2.004400,6.618035,-5.649047,-2.231190,-3.531224],[2.792515,5.559673,-3.065109,6.550893,-3.684378,0.380204,9.417556,5.292348,2.535339,-6.506171,9.913872],[-4.117314,-0.689148,-8.969848,1.183524,6.491099,5.104508,3.083696,9.333012,-3.849397,-3.542867,-6.921535],[-4.029167,1.576802,-9.933453,3.571774,4.106719,-9.893909,-2.990715,-8.881306,-6.787979,-1.375246,-7.105565],[5.677824,-0.324330,1.776232,-7.646260,-4.753433,2.859748,-4.900705,0.423667,0.852190,3.002980,-1.044853],[-7.256200,9.976265,7.513003,-2.337437,5.505913,9.653433,-6.379491,-3.321552,6.080066,0.107447,1.342641],[-9.947627,9.801801,4.735624,-8.824837,-2.268221,-0.905962,4.935490,2.016715,1.688243,0.426775,-7.193293],[-2.337279,-1.765616,0.653215,-2.694388,9.914068,-9.551819,9.149880,0.906613,8.658899,-7.603072,0.116002],[7.934373,-3.379611,-5.464768,-4.229349,3.107333,5.166955,-7.220859,1.324604,6.197723,7.809736,6.132569]],[[7.354776,-2.492036,-1.948489,-7.844772,-8.325642,-1.239963,8.861008,1.519749,2.801989,-5.593382,-5.975531],[9.385818,3.756214,9.088085,-5.640829,3.379629,6.286500,1.077844,0.130551,-2.790759,3.487988,-9.228580],[6.910864,-5.139046,-6.496441,2.049945,0.747610,-1.065158,-3.588358,-3.011382,-8.984413,-0.968183,7.960779],[3.152320,-9.305456,4.837926,-0.102137,-7.629874,0.889418,-2.076772,5.531481,-9.560049,-6.783693,8.854222],[-7.748562,-1.297554,-4.085026,2.102944,-7.859586,-1.922952,-7.509334,-5.387633,5.724323,-5.752191,-8.444577],[-8.956830,-4.180798,-4.740685,4.848660,9.012657,7.660531,-9.130771,1.727536,-8.611444,-2.431239,-5.195998],[-8.628995,4.406861,3.962192,-7.091530,-8.433404,6.869638,3.379137,0.486493,8.439832,9.661339,-0.286994],[-9.301228,1.334641,4.810422,1.566016,-2.217762,0.597701,1.471095,3.292032,-5.173048,-5.097056,-9.612366],[8.161066,-8.223451,7.226422,-9.536619,3.961987,2.076713,9.022367,-8.319206,-9.362527,-0.441384,-0.672359],[-2.574768,5.824455,8.633066,-7.876578,7.469282,-3.757556,-8.151623,5.602565,0.161551,-7.380189,1.687283],[-6.440442,-7.260661,-6.418649,-0.151588,0.726653,-0.579627,3.771340,-2.828101,-3.370750,1.601501,-2.571755]],[[-1.063072,-9.379908,-5.394341,-2.874699,-7.307382,-4.579272,6.162608,7.010007,2.147128,-8.006132,2.145260],[-7.819810,4.153422,-5.005697,1.782863,-8.523584,-8.301458,2.254440,5.589948,3.827983,-0.563315,9.234931],[-1.352442,4.799241,6.689555,-7.194434,1.247687,-3.042829,4.251791,-5.444348,2.697115,-8.788704,1.404819],[2.671719,7.120568,2.897176,-9.527712,0.863185,2.708270,-9.697971,-8.440264,-2.226301,0.771722,-6.541577],[0.373293,0.028610,5.896922,-2.642448,-7.910412,-3.131864,-6.374445,3.285606,-9.966007,-0.095510,-5.365232],[-0.630923,8.775929,-4.529431,8.804369,5.413469,9.749841,-3.536428,-4.560642,-8.246308,-0.553546,-3.075601],[-8.082870,3.574650,-6.796337,-3.476357,-0.570426,1.225978,1.864192,9.616513,-2.704798,1.353932,1.226515],[-4.060859,6.149154,-6.571588,3.388725,-1.383822,2.607477,-4.714412,4.662850,-6.514299,7.079663,7.746205],[2.190543,-1.154682,4.044048,-6.085552,2.106730,-3.664781,9.556989,-6.046824,6.541398,-1.875468,-8.888435],[-2.414081,2.031528,1.853185,-4.892202,-9.808267,4.071312,5.591530,-5.310414,-6.201206,8.348043,-8.721164],[6.509720,3.232442,-3.571288,1.710927,3.878148,-2.712556,-3.475331,5.399824,3.017747,9.476555,-3.066548]],[[3.797622,-5.706023,-5.539531,0.214785,-0.344312,6.840062,6.984934,8.161866,-5.600814,4.539630,6.654916],[3.198935,-7.060267,-4.309163,5.682862,5.230843,-0.483959,-0.903228,4.789705,9.598233,3.551558,0.492559],[-0.913207,4.779832,7.207718,-9.930570,1.419259,-0.912009,-0.184237,6.579426,8.845620,-2.874397,-1.104767],[4.746014,-8.712025,5.592160,3.043099,4.163876,7.176582,5.865336,6.676879,1.420854,8.712609,-6.129109],[2.389521,7.569249,-7.459875,-4.445080,9.698827,-2.946431,-5.930465,7.839112,4.160568,-0.397484,2.731917],[0.128902,6.860245,7.129651,-6.456420,-8.538331,1.343123,9.480839,5.253868,-8.679564,3.464604,5.009552],[-8.032096,4.025787,5.806597,-2.172236,2.140887,6.441618,4.563655,0.817827,-2.312132,1.282501,-3.656992],[-8.813676,-9.399400,-0.929390,1.417859,0.029273,-9.482012,0.671614,-6.670321,-2.632383,-2.210637,-2.016147],[3.525843,0.285755,5.145667,3.132527,5.747805,-5.657162,5.762181,9.318320,-5.450850,-1.807653,-0.599549],[-6.293789,-8.783065,-2.582434,-0.415092,-2.355354,5.931280,8.581689,-9.930534,-5.429823,-1.864901,6.988371],[0.214477,7.946728,8.105935,-5.037113,9.520629,2.991623,4.850988,-9.483333,-0.612517,9.577843,3.908482]]], dtype = "float32")#candidate|13166|(4, 11, 11)|const|float32
uop_13167 = relay.log2(const_13166.astype('float32')) # shape=(4, 11, 11)
output = uop_13167
output2 = uop_13167
func_13173 = relay.Function([], output)
mod['func_13173'] = func_13173
mod = relay.transform.InferType()(mod)
mutated_mod['func_13173'] = func_13173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13173_call = mutated_mod.get_global_var('func_13173')
call_13174 = func_13173_call()
output = call_13174
func_13175 = relay.Function([], output)
mutated_mod['func_13175'] = func_13175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9657_call = mod.get_global_var('func_9657')
func_9658_call = mutated_mod.get_global_var('func_9658')
call_13196 = relay.TupleGetItem(func_9657_call(), 2)
call_13197 = relay.TupleGetItem(func_9658_call(), 2)
func_9339_call = mod.get_global_var('func_9339')
func_9341_call = mutated_mod.get_global_var('func_9341')
call_13198 = relay.TupleGetItem(func_9339_call(), 1)
call_13199 = relay.TupleGetItem(func_9341_call(), 1)
func_8884_call = mod.get_global_var('func_8884')
func_8886_call = mutated_mod.get_global_var('func_8886')
var_13204 = relay.var("var_13204", dtype = "uint32", shape = (108,))#candidate|13204|(108,)|var|uint32
call_13203 = relay.TupleGetItem(func_8884_call(relay.reshape(var_13204.astype('uint32'), [3, 36])), 4)
call_13205 = relay.TupleGetItem(func_8886_call(relay.reshape(var_13204.astype('uint32'), [3, 36])), 4)
output = relay.Tuple([call_13196,call_13198,call_13203,var_13204,])
output2 = relay.Tuple([call_13197,call_13199,call_13205,var_13204,])
func_13214 = relay.Function([var_13204,], output)
mod['func_13214'] = func_13214
mod = relay.transform.InferType()(mod)
mutated_mod['func_13214'] = func_13214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13215 = relay.var("var_13215", dtype = "uint32", shape = (108,))#candidate|13215|(108,)|var|uint32
func_13214_call = mutated_mod.get_global_var('func_13214')
call_13216 = func_13214_call(var_13215)
output = call_13216
func_13217 = relay.Function([var_13215], output)
mutated_mod['func_13217'] = func_13217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11865_call = mod.get_global_var('func_11865')
func_11866_call = mutated_mod.get_global_var('func_11866')
call_13259 = relay.TupleGetItem(func_11865_call(), 3)
call_13260 = relay.TupleGetItem(func_11866_call(), 3)
output = relay.Tuple([call_13259,])
output2 = relay.Tuple([call_13260,])
func_13268 = relay.Function([], output)
mod['func_13268'] = func_13268
mod = relay.transform.InferType()(mod)
output = func_13268()
func_13269 = relay.Function([], output)
mutated_mod['func_13269'] = func_13269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11933_call = mod.get_global_var('func_11933')
func_11935_call = mutated_mod.get_global_var('func_11935')
call_13374 = relay.TupleGetItem(func_11933_call(), 1)
call_13375 = relay.TupleGetItem(func_11935_call(), 1)
output = call_13374
output2 = call_13375
func_13379 = relay.Function([], output)
mod['func_13379'] = func_13379
mod = relay.transform.InferType()(mod)
mutated_mod['func_13379'] = func_13379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13379_call = mutated_mod.get_global_var('func_13379')
call_13380 = func_13379_call()
output = call_13380
func_13381 = relay.Function([], output)
mutated_mod['func_13381'] = func_13381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12453_call = mod.get_global_var('func_12453')
func_12454_call = mutated_mod.get_global_var('func_12454')
call_13457 = relay.TupleGetItem(func_12453_call(), 0)
call_13458 = relay.TupleGetItem(func_12454_call(), 0)
output = relay.Tuple([call_13457,])
output2 = relay.Tuple([call_13458,])
func_13474 = relay.Function([], output)
mod['func_13474'] = func_13474
mod = relay.transform.InferType()(mod)
mutated_mod['func_13474'] = func_13474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13474_call = mutated_mod.get_global_var('func_13474')
call_13475 = func_13474_call()
output = call_13475
func_13476 = relay.Function([], output)
mutated_mod['func_13476'] = func_13476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13477 = relay.var("var_13477", dtype = "float32", shape = (12, 15, 8))#candidate|13477|(12, 15, 8)|var|float32
uop_13478 = relay.acosh(var_13477.astype('float32')) # shape=(12, 15, 8)
output = relay.Tuple([uop_13478,])
output2 = relay.Tuple([uop_13478,])
func_13481 = relay.Function([var_13477,], output)
mod['func_13481'] = func_13481
mod = relay.transform.InferType()(mod)
var_13482 = relay.var("var_13482", dtype = "float32", shape = (12, 15, 8))#candidate|13482|(12, 15, 8)|var|float32
output = func_13481(var_13482)
func_13483 = relay.Function([var_13482], output)
mutated_mod['func_13483'] = func_13483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7899_call = mutated_mod.get_global_var('func_7899')
call_13497 = relay.TupleGetItem(func_7897_call(), 1)
call_13498 = relay.TupleGetItem(func_7899_call(), 1)
uop_13511 = relay.asinh(call_13497.astype('float32')) # shape=(416, 2)
uop_13513 = relay.asinh(call_13498.astype('float32')) # shape=(416, 2)
output = relay.Tuple([uop_13511,])
output2 = relay.Tuple([uop_13513,])
func_13514 = relay.Function([], output)
mod['func_13514'] = func_13514
mod = relay.transform.InferType()(mod)
mutated_mod['func_13514'] = func_13514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13514_call = mutated_mod.get_global_var('func_13514')
call_13515 = func_13514_call()
output = call_13515
func_13516 = relay.Function([], output)
mutated_mod['func_13516'] = func_13516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_13520 = relay.TupleGetItem(func_5085_call(), 1)
call_13521 = relay.TupleGetItem(func_5086_call(), 1)
func_7686_call = mod.get_global_var('func_7686')
func_7687_call = mutated_mod.get_global_var('func_7687')
call_13523 = relay.TupleGetItem(func_7686_call(), 1)
call_13524 = relay.TupleGetItem(func_7687_call(), 1)
output = relay.Tuple([call_13520,call_13523,])
output2 = relay.Tuple([call_13521,call_13524,])
func_13527 = relay.Function([], output)
mod['func_13527'] = func_13527
mod = relay.transform.InferType()(mod)
output = func_13527()
func_13528 = relay.Function([], output)
mutated_mod['func_13528'] = func_13528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_13549 = relay.TupleGetItem(func_5085_call(), 1)
call_13550 = relay.TupleGetItem(func_5086_call(), 1)
output = call_13549
output2 = call_13550
func_13564 = relay.Function([], output)
mod['func_13564'] = func_13564
mod = relay.transform.InferType()(mod)
output = func_13564()
func_13565 = relay.Function([], output)
mutated_mod['func_13565'] = func_13565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2713_call = mod.get_global_var('func_2713')
func_2715_call = mutated_mod.get_global_var('func_2715')
call_13607 = relay.TupleGetItem(func_2713_call(), 0)
call_13608 = relay.TupleGetItem(func_2715_call(), 0)
output = relay.Tuple([call_13607,])
output2 = relay.Tuple([call_13608,])
func_13644 = relay.Function([], output)
mod['func_13644'] = func_13644
mod = relay.transform.InferType()(mod)
output = func_13644()
func_13645 = relay.Function([], output)
mutated_mod['func_13645'] = func_13645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_13660 = relay.TupleGetItem(func_6009_call(), 0)
call_13661 = relay.TupleGetItem(func_6011_call(), 0)
uop_13672 = relay.log(call_13660.astype('float32')) # shape=(4, 1, 3)
uop_13674 = relay.log(call_13661.astype('float32')) # shape=(4, 1, 3)
func_10279_call = mod.get_global_var('func_10279')
func_10281_call = mutated_mod.get_global_var('func_10281')
call_13682 = relay.TupleGetItem(func_10279_call(), 0)
call_13683 = relay.TupleGetItem(func_10281_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_13699 = relay.TupleGetItem(func_4240_call(), 0)
call_13700 = relay.TupleGetItem(func_4241_call(), 0)
func_6938_call = mod.get_global_var('func_6938')
func_6939_call = mutated_mod.get_global_var('func_6939')
call_13711 = func_6938_call()
call_13712 = func_6938_call()
func_10266_call = mod.get_global_var('func_10266')
func_10269_call = mutated_mod.get_global_var('func_10269')
const_13716 = relay.const([3,-8,4,-9,-2,9,-9,4,9,-10,-8,-10,-7,7,5,9,7,10,-5,-6,-9,9,-9,3,-10,5,-3,9,3,9,-9,3,-8,-7,-5,9,10,-4,-4,7,10,-2,-4,5,4,-5,-6,10,5,-6,10,4,5,1,3,-1,-1,-7,3,-4,8,9,8,-8,7,-3,1,-1,3,6,-1,10,2,-6,-9,-2,-10,3,-2,-2,4,8,-3,4,10,-4,8,4,1,-5,-2,9,9,1,2,-8,9,2,4,7,-5,-6,7,3,2,10,6,-6,-9,6,-8,-8,2,-8,7,10,-8,-6,-8,5,-8,4,2,9,-4,-5,-1,1,4,-10,9,-4,8,-4,-9,-6,1,1,9,7,8,10,-4], dtype = "int8")#candidate|13716|(143,)|const|int8
const_13717 = relay.const([-2,-8,10,-8,9,7,-10,-5,5,6,-9,-1,-6,4,-2,7,-7,3,-8,10,-6,7,1,8,-1,2,-9,5,-2,5,-8,-7,1,6,4,9,2,5,2,-9,-10,-1,4,6,8,1,8,-3,-10,8,-5,-2,-7,-8,10,9,8,1,-7,9,8,3,8,5,-5,9,-4,-4,-10,7,2,2,-8,-4,-9,2,3,-3,1,8,-3,-3,10,5,2,1,-9,-5,-7,-2,2,-4,-1,-5,-5,6,1,-4,-9,-2,10,-8,-8,4,4,2,1,-2,-2,-5,-1,6,2,-5,-8,3,-10,-7,-4,6,10,-3,-3,-3,1,6,9,-3,4,2,-5,-2,-4,5,-1,-5,8,-1,-2,-10,2,-4,-9,-2,5,5,-8,6,5,1,2,-6,-3,-5,-1,9,-2,6,2,-4,-1,6,7,1,-3,9,-8,10,-2,-10,10,6,-2,3,10,10,6,1,10,-7,-4,-10,9,-8,3,-4,7,6,4,-3,7,-8,-1,-6,10,-4,10,-1,-4,-10,6,1,-7,5,6,-8,3,-6,4,7,-7,-10,-5,-6,9,5,3,1,4,-5,-3,-3,-10,3,5,8,1,1,-9,4,-4,-3,6,8,7,-10,8,-1,6,-2,3,5,10,-1,-10,6,5,-2,1,-1,-5,3,8,-2,7,5,6,8,-3,-4,6,-8,9,-4,-2,-3,7,10,9,10,-6,9,-3,7,-6,1,-2,4,1,-6,-4,9,4,-9,-3,-10,-3,2,-6,4,-1,5,-3,7,-9,-6,1,-6,-7,9,-5,-9,-9,-6,10,-8,-6,6,-4,-3,3,7,7,10,-2,1,7,-6,1,-3,4,1,4,9,-10,2,4,-9,5,-2,-6,4,5,4,-4,6,-6,-7,-6,-10,-9,-2,-2,-3,-10,-5,9,4,1,-9,-2,-4,6,1,-8,-10,3,-1,3,-3,-8,-1,-8,-3,2,-6,9,-5,1,-8,-8,9,10,-6,5,-10,-8,2,-8,4,4,-4,-8,-9,8,-2,-6,8,3,3,-5,-1,-3,-8,-5,-1,-10,4,-8,1,-2,10,5,6,-6,-4,-1,4,7,7,4,-10,4,4,-1,-8,9,-1,-8,10,5,4,10,-1,10,8,-7,10,-6,-5,-3,-8,-1,-7,-5,2,3,-7,6,10,8,-1,8,-8,8,-9,-6,-3,5,5,-7,9,5,-4,6,8,-4,8,-10,6,10,9,4,1,2,-9,-7,8,6,4,10,5,10,-5,10,8,-9,-3,9,-2,4,-9,-2,2,10,10,-7,-3,-10,7,4,-9,-2,-5,8,3,9,-10,8,-8,9,10,5,-5,4,5,5,10,-6,-2,4,-4,-5,3,10,4,1,7,9,-1,4,-10,9,10,-7,-10,6,-4,-2,-4,10,2,-4,-7,3,-6,5,-7,8,-2,8,7,-7,4,-10,2,10,1,-4,-7,-10,7,-8,2,2,2,7,5,-2,3,-9,2,-10,-3,5,3,-2,-1,-5,-8,-10,-6,-2,2,9,-6,2,-8,-2,7,1,-1,10,-3,8,1,-2,4,9,-5,-3,9,-8,-6,-7,8,-4,-1,2,1,-5,-7,-3,-8,6,3,6,-3,-10,-7,-5,-7,5,-5,-1,-6,-1,1,1,-6,-5,-6,-10,7,1,9,8,-5,3,9,-6,-10,5,9,-3,5,-4,10,2,-6,-9,9,10,-10,3,8,-4,6,-2,-9,2,6,7,-1,-1,-3,3,-2,5,-7,3,10,4,9,1,-4,4,-8,-3,-1,8,-9,-6,-4,-4,1,-6,3,7,7,-9,-10,10,3,8,10,-8,7,-1,-6,3,10,-10,-1,-6,6,1,10,7,5,-9,-1,5,2,-2,2,-10,7,7,1,-8,3,-5,1,8,9,-10,-6,-10,-2,9,-10,-8,10,-6,-1,8,-4,-8,-6,8,6,6,4,2,-2,1,1,8,-5,2,9,-1,-4,-7,-7,-8,4,9,-1,5,4,-5,5,8,-8,-7,2,-9,9,9,-2,3,2,-5,2,6,7,-1,-7,-6,1,1,3,4,-7,-10,-9,-6,-4,5,2,-2,-5,3,3,-4,-3,2,6,-10,8,-3,-4,9,1,-3,-5,3,-7,-9,-8,-9,-9,-6,4,9,7,-8,-2,-8,10,7,-4,3,-7,-4,-9,-5,-3,-5,-9,10,8,-9,-6,5,-6,-9,-3,4,9,6,-10,-6,3,9,-8,10,-6,8,5,7,-4,-2,1,8,3,-9,4,-5,9,-1,-4,2,-1,3,4,7,-8,-6,4,-10,7,-9,7,7,9,-2,10,-6,-6,7,1,-7,-3,-8,6,-4,-9,1,-9,9,-8,-5,-9,-1,10,-5,6,-9,-7,-7,-7,4,-6,-10,-7,4,-4,-6,-10,7,9,-10,-4,-3,6,-3,-1,-8,6,-1,-9,-10,4,5,5,3,-2,8,-3,-8,-10,-1,2,7,9,10,-3,-10,-6,-10,-7,-6,5,8,2,-7,8,3,-9,-9,10,-6,-10,9,-3,9,-9,10,7,-2,-5,5,-6,5,-1,-2,4,2,-6,1,10,-9,5,5,-9,-4,3,-10,-8,-4,1,-7,-4,8,2,9,-9,2,-2,-7,3,7,-1,-5,-4,-5,5,-10,3,-10,7,-8,2,4,9,4,3,10,-10,10,-5,9,-6,-10,-4,5,-2,2,5,5,-7,7,-2,-3,-3,-6,-7,10,-1,6,3,-1,-4,-6,-6,2,3,3,-6,8,9,-8,7,4,10,-7,9,5,-10,-2,-3,-2,-4,2,1,-9,-3,9,-7,-10,-2,8,-5,-7,-4,-3,-3,-5,-10,-5,8,3,3,1,-6,-4,8,-2,-5,-9,-9,-9,-9,-9,3,4,-10,-3,1,-2,7,-7,-8,-9,1,-3,4,5,8,2,10,5,3,4,1,4,3,-4,-2,5,3,-6,-2,8,-4,1,8,-5,-3,-8,-4,4,-4,8,1,1,-3,-1,-5,3,1,3,-2,-4,-7,3,3,-9,-8,-4,2,3,2,8,-4,9,9,-7,-10,7,-3,9,8,4,-6,-4,-6,2,2,-9,3,4,-10,2,-1,-9,9,-10,-7,2,-5,-2,7,10,5,6,7,-9,-10,-9,2,-5,8,-8,2,-8,8,9,-5,-5,-8,8,10,2,-10,10,9,-3,-3,-3,8,-3,1,-2,-2,-7,-7,-6,4,-6,1,8,-3,8,-9,2,-2,6,8,-2,-6,-3,-3,9,-8,-4,2,8,3,5,7,-1,-4,-4,6,7,2,4,-8,3,-9,5,-8,-1,3,3,5,8,-3,-4,-8,-3,-10,6,-2,-5,7,-6,-5,6,-5,7,-2,-9,-9,6,-3,-8,5,-2,4,-2,7,5,-5,1,9,9,-5,8,1,-1,-2,1,4,6,1,10,6,-2,-6,2,-1,7,-9,-1,-9,-9,3,10,-3,9,6,4,5,-2,10,-6,-7,8,10,-10,-2,-1,1,6,10,8,3,6,9,-8,-6,-2,7,-10,-9,-7,-1,10,10,4,9,3,-5,1,9,-2,6,-9,-4,-10,-9,-6,5,-2,9,-2,9,4,6,-9,7,-1,7,-5,-9,6,2,-10,-7,2,8,6,-1,5,-6,-4,8,-3,7,6,3,-8,3,3,-10,-5,9,10,-2,7,7,-10,-1,10,2,-6,5,3,-1,7,9,10,3,-6,-2,2,6,-6,6,-5,-1,5,-4,-3,5,6,2,-10,5,2,2,-1,-8,5,3,4,4,10,-8,-5,-5,-6,7,3,-3,3,9,-4,-1,10,-3,-9,-4,5,4,-6,10,-7,8,-1,5,8,8,-10,5,6,-4,4,-4,9,-10,-8,-7,-7,6,-9,4,6,3,2,8,5,10,10,-10,-3,-6,-1,7,1,8,8,-9,-3,-4,8,2,4,5,-8,-2,5,4,-2,-6,8,-3,3,3,-2,-10,9,-6,-5,-4,7,-6,6,10,2,-1,7,7,3,5,-6,-6,8,7,-4,-6,1,-5,1,4,-9,-2,-6,8,10,5,-2,-1,6,4,1,10,2,-8,1,4,7,-10,-6,2,-4,2,-1,-6,2,-6,-8,6,4,-2,-6,-6,-2,-5,5,-6,6,4,-2,-4,-8,9,1,-7,9,-1,-6,7,-3,8,-10,8,-2,-5,3,-1,2,-1,5,-9,7,-1,-6,3,-1,-1,5,8,2,-2,-3,-9,2,9,10,-4,-7,-2,-3,4,3,-6,-5,-6,6,-3,10,5,4,9,-1,10,10,-10,-4,9,-2,-6,9,-3,9,-5,9,-10,5,4,-6,5,6,-1,2,8,4,10,-7,8,10,-4,5,-2,7,6,2,-7,9,-9,-7,4,4,-7,-6,6,10,6,7,-4,6,6,-3,8,-1,2,5,-3,9,-9,-7,-10,-6,2,4,6,8,-10,4,-3,-5,7,9,9,10,-3,-3,-3,1,2,3,-7,-1,2,-5,2,-9,9,7,-8,-8,-5,3,-1,3,-2,-3,-7,-6,-8,5,-2,-9,4,1,-4,-2,1,8,2,3,-8,-2,1,-6,-2,10,-7,7,6,3,6,-10,-1,-6,10,6,8,-4,10,7,-3,6,-6,3,-10,2,2,-2,8,7,-1,-5,2,9,1,4,3,-6,-10,10,5,-5,-4,1,8,10,-10,-8,6,4,3,3,-7,-6,-10,-6,-10,4,-9,8,1,-7,-4,-3,4,8,-7,-5,2,3,8,6,2,4,3,9,9,-6,2,-3,-9,4,-4,10,10,5,-3,-8,3,6,-1,1,-2,-2,6,-9,-6,9,-1,5,10,-9,-3,8,8,-3,9,-10,-8,-3,10,9,6,8,-7,-7,5,2,5,-5,3,4,9,-5,10,5,-2,6,2,-5,6,-8,10,-10,-1,7,-2,-8,-7,-2,-2,7,-9,4,-6,10,1,-7,-1,3,2,8,1,7,-10,6,-3,-6,3,-4,8,-5,6,-7,8,7,-10,-4,-10,10,7,1,-9,2,8,-3,2,3,-9,-2,-2,9,-5,-4,3,6,2,-1,6,-2,-3,-9,4,-2,-4,-2,-5,-8,-3,7,8,9,1,-8,-5,-9,7,3,4,6,2,-6,-8,-9,-9,-8,-2,-5,-9,9,-5,-2,10,4,1,-2,10,1,-2,-1,-9,-6,-8,-3,7,-10,-4,-5,-10,-6,2,5,6,2,-8,-9,-3,-7,9,9,6,8,-4,4,-5,6,-10,9,-8,-6,-3,-3,-1,9,-2,5,2,8,8,1,-2,-3,7,-8,3,1,-10,-2,5,-10,4,5,-3,-1,2,-6,-6,-7,-1,1,-1,-9,7,2,5,-8,-1,2,-3,5,-2,10,-10,-4,-3,4,-7,5,-4,-3,10,5,-2,3,9,-3,-7,-10,1,7,-9,10,-3,10,-1,-4,4,-10,8,4,-1,10,-1,6,-8,-7,-5,-3,-1,4,7,3,-9,8,8,7,-10,-7,9,4,-8,6,-8,-10,3,-1,3,-10,6,-10,-3,-4,-5,-5,-6,-4,9,-8,9,6,-3,10,10,6,1,4,4,6,-1,-6,1,-3,-1,1,-10,-2,5,-7,-4,-5,-1,-9,-7,6,10,-6,5,-3,-4,-6,1,-7,2,3,9,10,-5,8,-6,1,-10,6,10,-2,6,-9,6,5,-2,-3,-6,-2,4,4,-6,-5,-4,10,10,10,-9,-3,7,-10,-6,-9,-6,5,2,-9,6,3,-4,-6,4,-10,-5,6,3,-8,-1,-3,-9,-6,-10,7,10,6,4,8,-7,1,-5,3,-6,-9,9,3,-4,9,5,-10,10,9,-7,2,-5,-8,-3,-10,-4,-6,-3,-1,10,-1,-9,-2,-6,-3,-7,-10,9,3,-9,-2,4,-5,9,-5,9,-7,-6,7,9,-6,-4,-9,4,-4,-6,5,-6,-8,10,5,-9,6,-1,-9,1,-7,2,8,1,-1,10,-9,-8,-1,-10,6,7,5,6,-10,-1,-4,6,-1,5,6,-9,2,-1,6,7,1,7,-4,1,-2,3,-7,7,6,9,-7,-8,-6,2,-10,-7,5,-8,6,4,-2,-1,8,9,2,-7,-8,10,3,7,10,-4,-7,5], dtype = "int8")#candidate|13717|(2288,)|const|int8
call_13715 = relay.TupleGetItem(func_10266_call(relay.reshape(const_13716.astype('int8'), [13, 1, 11]), relay.reshape(const_13717.astype('int8'), [13, 16, 11]), ), 0)
call_13718 = relay.TupleGetItem(func_10269_call(relay.reshape(const_13716.astype('int8'), [13, 1, 11]), relay.reshape(const_13717.astype('int8'), [13, 16, 11]), ), 0)
func_3845_call = mod.get_global_var('func_3845')
func_3846_call = mutated_mod.get_global_var('func_3846')
call_13721 = func_3845_call()
call_13722 = func_3845_call()
bop_13727 = relay.less(uop_13672.astype('bool'), relay.reshape(call_13711.astype('bool'), relay.shape_of(uop_13672))) # shape=(4, 1, 3)
bop_13730 = relay.less(uop_13674.astype('bool'), relay.reshape(call_13712.astype('bool'), relay.shape_of(uop_13674))) # shape=(4, 1, 3)
func_13474_call = mod.get_global_var('func_13474')
func_13476_call = mutated_mod.get_global_var('func_13476')
call_13734 = relay.TupleGetItem(func_13474_call(), 0)
call_13735 = relay.TupleGetItem(func_13476_call(), 0)
output = relay.Tuple([call_13682,call_13699,call_13715,const_13716,const_13717,call_13721,bop_13727,call_13734,])
output2 = relay.Tuple([call_13683,call_13700,call_13718,const_13716,const_13717,call_13722,bop_13730,call_13735,])
func_13744 = relay.Function([], output)
mod['func_13744'] = func_13744
mod = relay.transform.InferType()(mod)
mutated_mod['func_13744'] = func_13744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13744_call = mutated_mod.get_global_var('func_13744')
call_13745 = func_13744_call()
output = call_13745
func_13746 = relay.Function([], output)
mutated_mod['func_13746'] = func_13746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_13755 = relay.TupleGetItem(func_7196_call(), 0)
call_13756 = relay.TupleGetItem(func_7197_call(), 0)
output = relay.Tuple([call_13755,])
output2 = relay.Tuple([call_13756,])
func_13757 = relay.Function([], output)
mod['func_13757'] = func_13757
mod = relay.transform.InferType()(mod)
output = func_13757()
func_13758 = relay.Function([], output)
mutated_mod['func_13758'] = func_13758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7564_call = mod.get_global_var('func_7564')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_13821 = func_7564_call()
call_13822 = func_7564_call()
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_13825 = func_4332_call()
call_13826 = func_4332_call()
func_7560_call = mod.get_global_var('func_7560')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_13827 = relay.TupleGetItem(func_7560_call(), 0)
call_13828 = relay.TupleGetItem(func_7561_call(), 0)
func_8376_call = mod.get_global_var('func_8376')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_13835 = relay.TupleGetItem(func_8376_call(), 0)
call_13836 = relay.TupleGetItem(func_8377_call(), 0)
func_5307_call = mod.get_global_var('func_5307')
func_5311_call = mutated_mod.get_global_var('func_5311')
var_13846 = relay.var("var_13846", dtype = "bool", shape = (520,))#candidate|13846|(520,)|var|bool
const_13847 = relay.const([-1.832019,-2.713128,-2.063523,-8.777917,-1.734765,-5.078513,6.917969,5.856255,0.437402,2.347517,-2.526921,3.445052,-6.041499,8.855718,-2.329823,7.617580,4.665589,-5.731789,3.950232,9.745522,-7.559820,-2.458716,8.653464,1.630934,0.461739,-3.347632,-3.907558,-3.070360,-2.025290,-8.807251,8.856787,8.089361,8.133124,3.399695,3.049884,-8.813160,-3.495553,6.885256,5.243000,-8.079164,-6.238028,-5.003644,6.687248,8.844310,-9.763910,-5.294608,0.108172,-1.331614,5.372021,9.459918,-8.471148,-7.104304,-8.300182,0.959672,-7.791463,-6.401817,-0.211327,9.126960,0.694315,2.766750,-2.435140,-5.325128,8.364133,1.298619,-1.930431,9.212311,-5.179105,9.086888,-3.346642,-9.458204,2.496063,5.259951,9.110778,4.339604,0.882029,-0.135993,-9.509965,8.553829,9.300839,-3.719791,4.725520,0.817255,1.756124,8.731560,2.931666,-9.723923,-0.563865,-9.742605,-0.836616,1.629912,-2.509330,7.800409,-5.840350,-3.247860,3.053923,7.220845,9.298867,6.167729,5.592792,-9.323568,-5.193176,8.119678,-5.379607,3.855053,8.461901,-6.834565,-3.751314,-0.448107,-0.532699,1.943295,3.751046,-8.777755,5.562049,2.513340,-9.406062,3.598253,-9.996450,-8.803083,-4.083034,5.680908,-8.523758,3.498590,-4.651015,4.099629,-8.643059,-7.268376,8.110379,-9.456297,-9.139579,1.223660,6.886438,-5.480224,-3.571978,-8.303733,-0.613981,-6.758257,4.385990,2.934502,-2.313061,-4.608922,8.002235,-7.650607,-8.952442,1.113706,5.386155,9.927324,6.104772,-6.766411,-2.108228,-7.762834,6.426119,5.739095,-3.734184,-1.515054,0.807843,-9.482699,1.836177,5.485678,0.619086,7.712977,-2.923164,-2.828577,-3.266407,3.180846,1.765858,6.658178,-2.971329,-7.849686,7.782061,6.642271,9.135143,-8.386343,6.919391,-3.445764,-4.920127,7.746745,0.968914,3.186979,-3.530480,-3.186520,-1.352733,-3.880268,2.623045,-0.420180,4.012128,5.211803,3.378744,-9.758660,-8.830598,7.268162,-6.808842,7.494066,-4.679256,8.432613,5.486191,4.485727,0.519537,-9.061268,-5.832838,0.089343,8.295486,-0.332912,-2.331451,4.271766,-5.532880,-6.535163,7.441940,-7.393460,-5.306125,-8.540868,9.106540,0.277911,-9.781604,7.601821,-7.683773,-4.140041,-8.958440,-6.944111,6.055333,4.976801,1.127666,-6.245595,3.478721,-3.269845,-5.416382,5.591906,-6.645216,-7.975272,-8.369096,5.975689,7.884357,-7.719244,6.092350,-3.958054,-7.436909,-4.882160,3.348020,-6.288244,5.858185,-2.636581,-2.212288,9.738101,7.806388,4.451625,-3.479743,-5.954187,-3.356790,4.996073,-5.380357,4.800047,6.780257,-8.811865,-6.679731,7.423503,3.829482,-2.273018,8.686833,5.675196,5.733728,-6.336784,5.483899,7.459440,-9.553050,5.168464,0.174395,6.277138,-6.018627,6.540852,0.690526,-9.578903,2.716569,-9.760452,8.923039,7.763758,-8.841983,-1.788524,-3.177882,4.648767,-8.035395,5.732851,5.249196,-9.817107,-2.776107,1.379155,-9.148065,0.084942,-3.236231,-5.010487,4.653713,-6.010940,3.478220,1.748579,0.672389,-3.019610,-5.669254,3.020938,0.347916,4.541195,2.764288,8.330567,9.428718,8.595728,-3.201792,6.159995,4.999729,0.357791,-3.271827,2.930505,2.849422,1.977634,8.141250,-8.450452,-3.021938,3.590846,-9.440633,0.905365,2.577697,6.140643,-6.197656,9.546144,-2.423317,-3.748805,1.414440,-2.823154,-6.366594,-6.613452,-7.149970,-6.396648,7.825025,5.732581,-9.769051,9.599664,6.522179,7.460525,5.838711,-4.404376,7.283623,-9.598767,-5.357840,8.855575,-4.671218,-7.507558,-0.849133,6.022715,-2.544687,2.389452,6.935504,-2.850328,6.973679,-1.770174,-7.691407,0.393491,5.444946,7.414672,-1.771280,-9.174547,-1.661291,-5.814993,4.361267,-2.978220,-4.616371,-8.372009,-9.612458,-3.825728,-0.786190,-0.722110,6.577832,-3.043169,8.500915,-8.128751,3.718411,-8.442323,-1.379950,-2.843337,-2.091946,5.768395,2.726063,-2.545042,9.638277,1.728062,4.578243,-2.005203,7.769526,-6.687310,-6.898053,7.030667,3.603496,-7.882614,-6.217061,-1.679906,9.860576,7.557934,6.572778,9.848074,-6.307216,5.439069,-2.303104,0.444918,-9.718091,8.493686,-0.517010,-9.928820,-9.811147,2.555289,-5.571074,-4.728642,-1.515577,-0.241037,9.901247,-0.179459,-7.016056,-7.938059,8.271055,8.125886,3.392224,0.706886,6.316979,9.173719,-0.002389,-0.585856,-1.735242,-2.942389,-1.622061,8.526370,-2.748151,8.301248,5.364475,-8.982196,4.456808,-0.604665,-6.749898,9.997170,-2.096399,6.245421,5.864453,0.551615,-1.657863,-1.290031,-4.533991,5.698843,5.371506,1.117526,-3.434657,-3.370687,2.427393,-4.490387,-3.183361,4.853611,-3.788867,5.469112,-6.167006,-3.059402,-2.180246,2.201474,-4.504388,-1.820899,-4.252039,-5.808854,7.945357,-9.740797,8.051043,-5.844210,-4.419318,-5.683044,-7.126524,0.703938,-4.762840,-8.976296,-2.713763,5.475731,-6.084517,7.153390,-8.985196,3.483194,-0.807609,-9.263377,-1.261665,0.682519,1.749282,3.472835,1.809193,-1.030599,-3.535560,-7.016895,5.160847,9.410985,1.202913,-9.529297,-4.759879,4.488408,7.626459,3.579547,-9.824144,0.187075,-2.657511,-0.752604,0.399819,-9.336783,6.634450,-2.322506,-3.794942,-3.822388,-3.561157,2.550509,-1.664153,3.774316,3.047310,5.045720,6.372609,1.218411,9.431475,3.541774,-8.828247,3.098590,2.516488,-3.046743,9.669962,7.360682,2.092621,3.631254,-5.153536,-0.510886,5.981310,5.751913,-7.735421,-4.706171,-3.376164,-6.806265,7.187842,-9.275837,4.791195,5.341223,1.476100,7.523299,8.669956,-7.870934,2.828634,1.354145,-1.067886,-0.771263,7.209387,5.767897,-4.370356,0.921702,8.474868,-3.923910,-9.226135,6.076802,1.627777,4.393216,4.804874,-5.378528,-1.680390,0.043036,-8.634549,7.588110,5.669009,-3.507439,-5.755035,5.648855,7.812671,-9.092392,1.738967,-4.562907,-5.936304,-0.213540,4.445622,8.697424,-5.980725,1.612452,-1.412523,4.367261,9.141828,2.741718,2.114826,9.998356,5.374485,-7.027084,5.597779,2.305167,-5.028186,-1.382686,-1.051475,4.281648,-9.797682,5.757697,0.036607,-6.772168,-7.960043,-5.005276,0.557369,7.925968,-6.644753,5.134452,-2.621056,7.828161,-5.799352,-1.563785,0.604684,-6.477450,-6.694351,-5.705007,-1.671178,-1.798717,8.481751,-8.509035,-5.020324,2.768272,2.080753,0.910840,6.996753,3.780000,-7.702647,-1.483596,5.930229,9.709623,-9.287715,-1.827983,2.156882,-2.608345,8.687604,6.127797,-3.505467,-2.888618,0.796295,6.335648,3.610233,1.612212,-7.805668,8.659155,-7.554467,-1.348692,7.971540,8.073947,2.867807,9.902131,-3.143527,2.223593,7.963823,-0.821839,9.685869,2.087073,-1.149247,-6.573625,-8.939730,1.391216,-5.906847,6.123123,-9.935776,-1.646181,-0.850715,-2.116545,-7.450816,7.081208,-3.584605,2.660440,0.524729,-2.807800,0.414730,1.064008], dtype = "float32")#candidate|13847|(660,)|const|float32
var_13848 = relay.var("var_13848", dtype = "uint32", shape = (48,))#candidate|13848|(48,)|var|uint32
call_13845 = relay.TupleGetItem(func_5307_call(relay.reshape(var_13846.astype('bool'), [520,]), relay.reshape(const_13847.astype('float32'), [660,]), relay.reshape(var_13848.astype('uint32'), [48,]), ), 9)
call_13849 = relay.TupleGetItem(func_5311_call(relay.reshape(var_13846.astype('bool'), [520,]), relay.reshape(const_13847.astype('float32'), [660,]), relay.reshape(var_13848.astype('uint32'), [48,]), ), 9)
output = relay.Tuple([call_13821,call_13825,call_13827,call_13835,call_13845,var_13846,const_13847,var_13848,])
output2 = relay.Tuple([call_13822,call_13826,call_13828,call_13836,call_13849,var_13846,const_13847,var_13848,])
func_13876 = relay.Function([var_13846,var_13848,], output)
mod['func_13876'] = func_13876
mod = relay.transform.InferType()(mod)
var_13877 = relay.var("var_13877", dtype = "bool", shape = (520,))#candidate|13877|(520,)|var|bool
var_13878 = relay.var("var_13878", dtype = "uint32", shape = (48,))#candidate|13878|(48,)|var|uint32
output = func_13876(var_13877,var_13878,)
func_13879 = relay.Function([var_13877,var_13878,], output)
mutated_mod['func_13879'] = func_13879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mod.get_global_var('func_6521')
func_6523_call = mutated_mod.get_global_var('func_6523')
call_13919 = func_6521_call()
call_13920 = func_6521_call()
func_10807_call = mod.get_global_var('func_10807')
func_10811_call = mutated_mod.get_global_var('func_10811')
var_13923 = relay.var("var_13923", dtype = "uint64", shape = (1008,))#candidate|13923|(1008,)|var|uint64
const_13924 = relay.const([False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False], dtype = "bool")#candidate|13924|(520,)|const|bool
call_13922 = relay.TupleGetItem(func_10807_call(relay.reshape(var_13923.astype('uint64'), [1008,]), relay.reshape(const_13924.astype('bool'), [520,]), ), 3)
call_13925 = relay.TupleGetItem(func_10811_call(relay.reshape(var_13923.astype('uint64'), [1008,]), relay.reshape(const_13924.astype('bool'), [520,]), ), 3)
output = relay.Tuple([call_13919,call_13922,var_13923,const_13924,])
output2 = relay.Tuple([call_13920,call_13925,var_13923,const_13924,])
func_13930 = relay.Function([var_13923,], output)
mod['func_13930'] = func_13930
mod = relay.transform.InferType()(mod)
mutated_mod['func_13930'] = func_13930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13931 = relay.var("var_13931", dtype = "uint64", shape = (1008,))#candidate|13931|(1008,)|var|uint64
func_13930_call = mutated_mod.get_global_var('func_13930')
call_13932 = func_13930_call(var_13931)
output = call_13932
func_13933 = relay.Function([var_13931], output)
mutated_mod['func_13933'] = func_13933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12453_call = mod.get_global_var('func_12453')
func_12454_call = mutated_mod.get_global_var('func_12454')
call_13953 = relay.TupleGetItem(func_12453_call(), 0)
call_13954 = relay.TupleGetItem(func_12454_call(), 0)
output = call_13953
output2 = call_13954
func_13969 = relay.Function([], output)
mod['func_13969'] = func_13969
mod = relay.transform.InferType()(mod)
output = func_13969()
func_13970 = relay.Function([], output)
mutated_mod['func_13970'] = func_13970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_14048 = func_10518_call()
call_14049 = func_10518_call()
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_14065 = func_5995_call()
call_14066 = func_5995_call()
func_12490_call = mod.get_global_var('func_12490')
func_12492_call = mutated_mod.get_global_var('func_12492')
var_14076 = relay.var("var_14076", dtype = "uint32", shape = (132,))#candidate|14076|(132,)|var|uint32
call_14075 = func_12490_call(relay.reshape(var_14076.astype('uint32'), [4, 11, 3]))
call_14077 = func_12490_call(relay.reshape(var_14076.astype('uint32'), [4, 11, 3]))
output = relay.Tuple([call_14048,call_14065,call_14075,var_14076,])
output2 = relay.Tuple([call_14049,call_14066,call_14077,var_14076,])
func_14085 = relay.Function([var_14076,], output)
mod['func_14085'] = func_14085
mod = relay.transform.InferType()(mod)
var_14086 = relay.var("var_14086", dtype = "uint32", shape = (132,))#candidate|14086|(132,)|var|uint32
output = func_14085(var_14086)
func_14087 = relay.Function([var_14086], output)
mutated_mod['func_14087'] = func_14087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9091_call = mod.get_global_var('func_9091')
func_9093_call = mutated_mod.get_global_var('func_9093')
call_14099 = relay.TupleGetItem(func_9091_call(), 0)
call_14100 = relay.TupleGetItem(func_9093_call(), 0)
const_14101 = relay.const([[[1,-4,-10],[3,1,2],[-1,7,6],[7,7,1],[-9,-8,-7],[6,-3,-1],[5,10,7],[7,-1,-8],[-6,-8,-1]],[[8,-7,2],[-7,4,-1],[5,-10,-1],[1,6,2],[8,9,2],[-2,-1,-9],[2,3,8],[-10,9,7],[10,-8,9]],[[-10,-10,2],[2,-2,-2],[-8,-9,-2],[-7,7,4],[-6,4,-3],[-7,-2,4],[9,-8,1],[-2,-4,-1],[7,9,-4]],[[9,-9,5],[8,5,-9],[1,-6,-8],[9,-7,-2],[-7,8,2],[3,1,6],[2,-10,-1],[-7,-6,3],[2,-6,3]]], dtype = "uint32")#candidate|14101|(4, 9, 3)|const|uint32
bop_14102 = relay.less_equal(call_14099.astype('bool'), const_14101.astype('bool')) # shape=(4, 9, 3)
bop_14105 = relay.less_equal(call_14100.astype('bool'), const_14101.astype('bool')) # shape=(4, 9, 3)
func_3267_call = mod.get_global_var('func_3267')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_14108 = func_3267_call()
call_14109 = func_3267_call()
func_10266_call = mod.get_global_var('func_10266')
func_10269_call = mutated_mod.get_global_var('func_10269')
var_14116 = relay.var("var_14116", dtype = "int8", shape = (1, 143))#candidate|14116|(1, 143)|var|int8
const_14117 = relay.const([[-9,5,-10,-4,3,1,1,9,2,-8,9,8,-10,-5,-10,-6,-9,-2,8,-8,-4,-3,1,-3,-3,1],[8,1,4,2,-4,3,-9,-2,5,-10,-9,3,4,-2,-6,-8,-2,2,-3,-2,-3,2,-1,9,-4,-4],[1,-4,5,1,-7,-8,5,7,-6,-7,-3,3,3,10,2,-2,-3,-5,2,-10,4,-8,-1,9,3,8],[-4,9,-2,7,-5,4,-5,6,8,6,5,-3,8,-4,7,-4,3,-8,-4,-9,-6,-7,-6,10,-1,6],[-10,-4,10,-7,2,-7,7,-1,2,10,-5,-9,-1,6,5,2,10,4,-6,8,4,-4,-3,-2,7,3],[10,-4,2,5,-4,5,-4,6,1,9,-1,8,10,-1,3,-8,9,-4,-3,-10,-7,-3,-5,-1,4,2],[7,-9,10,-3,-5,6,6,-3,-2,-6,-10,-7,7,-1,-2,-6,3,-5,5,-7,-10,2,-4,4,2,4],[10,-6,3,-10,10,-1,1,-5,-3,-9,-5,10,-10,5,6,-3,-3,3,-6,-9,9,7,-6,-8,-5,4],[8,9,-8,-9,8,-3,10,-6,-9,3,7,-7,4,-3,-2,9,3,-7,6,7,5,4,-6,-2,-5,4],[-4,-6,8,-9,8,-8,10,4,-9,-10,3,-2,4,7,-8,3,3,2,9,-2,1,-10,5,-5,-8,-1],[-8,-1,6,4,-8,5,4,-5,-9,2,6,9,9,-8,-10,8,-1,-2,7,-10,-1,-8,-2,-10,9,9],[7,7,-3,-10,3,2,-7,4,10,-10,-8,-10,3,-1,3,10,-1,5,-1,6,-3,1,-5,-3,-8,8],[5,-8,7,3,-1,-1,9,6,-8,-5,3,10,-10,4,10,-3,1,3,1,9,6,-4,-5,6,-5,6],[-6,9,-1,-1,-7,4,-4,-8,-3,-8,-9,6,5,9,3,-1,2,-3,2,-6,8,9,-8,-8,-3,10],[9,6,-9,7,10,1,5,-7,-9,6,-2,3,1,1,-8,-8,10,-4,-10,-1,6,-2,-7,7,-3,-7],[-7,7,2,2,10,8,5,-8,-10,5,4,-8,-8,9,10,-6,-6,5,-10,5,-10,-9,4,9,-8,-1],[-4,3,6,3,8,2,-2,-10,-7,-2,10,1,-1,-2,-5,-1,-4,10,6,5,-5,-10,4,-3,6,8],[-9,4,9,8,8,2,-2,1,8,-4,3,-3,-3,-9,-2,-9,-6,-10,6,9,-5,-8,-5,-7,-7,9],[-4,-8,-9,-9,6,1,-8,8,-10,2,10,-4,-8,-10,-3,-6,1,5,-3,-10,-2,-2,3,6,9,-9],[-7,5,-6,-2,-6,-6,-4,-5,-7,5,-6,-2,7,2,-6,-4,-4,10,-6,8,3,-8,-9,2,-8,7],[-4,-2,-7,-6,7,-7,10,2,-2,-9,6,-9,-8,1,10,1,7,4,10,-10,-9,-8,6,9,2,-2],[3,1,6,1,-2,-7,-6,4,10,-2,2,-10,-2,6,-6,10,4,5,5,-4,-6,5,-2,7,4,-3],[-9,-5,-3,-7,-1,-2,-10,3,-3,-4,7,-3,10,-3,9,-9,10,-1,4,3,5,-10,-2,-2,-9,-4],[-6,9,6,10,-9,-4,-2,-3,-5,2,2,6,-7,7,-7,-6,7,-10,-9,-8,7,9,-9,6,1,-3],[-1,6,-7,6,5,6,-5,-7,-5,5,7,3,-8,-7,10,1,6,9,-10,7,7,9,10,-8,-1,10],[7,-1,4,-4,-7,-6,-10,-10,2,-6,-3,-2,-1,9,-5,7,2,-9,-9,1,-5,10,-1,-8,8,-3],[10,-5,8,-2,-2,-7,8,-1,8,-2,-8,-10,5,-4,-3,5,4,4,-3,-9,5,9,1,-10,-3,-3],[7,2,3,-4,-4,-2,10,-4,-10,7,-8,-9,-10,1,-1,6,10,-7,-7,3,-1,-2,9,-3,-9,-4],[-9,-10,-10,-4,-5,-7,10,10,-7,9,-6,-9,8,-3,4,-8,10,4,6,1,10,-6,3,10,-9,-8],[-1,-9,10,-8,1,9,-3,-1,3,-2,-9,-5,-4,-2,1,9,8,-3,-2,-5,6,-4,7,9,7,-2],[10,9,-2,9,3,-7,6,9,10,10,-8,-6,10,-4,5,-5,5,8,-7,3,5,-10,10,8,5,-6],[2,9,-7,1,1,8,-2,-5,3,10,8,8,3,-7,-2,1,-7,8,-3,8,4,4,-10,6,7,-3],[8,-10,-7,-9,-10,-5,-1,10,3,-2,2,5,-4,-9,-9,-5,-6,-9,-4,4,-1,2,3,7,-2,4],[-4,-7,-4,-9,-1,-3,1,-9,-10,-10,3,2,4,3,10,-1,10,5,6,-6,-10,3,-1,-6,-7,-2],[8,6,5,9,9,-4,-8,3,-4,-3,10,-6,10,1,-10,-8,9,2,5,1,-1,-5,3,7,8,2],[5,8,9,1,-2,-8,2,5,1,-5,3,3,9,3,-7,-5,10,8,-3,-1,-9,-6,-6,10,10,-2],[-5,-7,5,2,-5,-6,10,-8,-4,-10,5,4,8,1,-1,-1,7,3,-9,4,1,1,-4,6,8,-1],[-1,-6,-8,9,7,-6,-7,6,3,2,-2,7,1,-3,9,-4,8,-3,5,6,1,8,-10,-6,6,6],[10,-3,-7,2,10,-8,5,7,-3,-4,4,4,8,-4,5,-2,3,8,2,6,7,2,-5,-2,1,-1],[-1,6,5,6,2,-7,-1,-7,-6,-5,-8,4,6,-2,-3,-2,7,6,10,4,-7,-8,-7,-1,9,7],[-3,-3,-9,7,-7,8,7,-8,3,-10,4,-1,3,7,10,-1,6,-3,8,-9,-9,9,-9,2,10,4],[-9,6,-7,-6,-6,9,3,-7,3,6,-10,-7,-3,-3,-10,8,10,-1,-6,5,8,-3,7,1,-5,2],[-3,6,-8,10,6,7,-3,-4,-7,-10,2,-5,-3,-10,3,-8,1,-2,-5,-6,2,6,2,-4,-6,6],[-8,-8,7,-1,-10,-9,-7,9,-5,2,6,3,-7,-1,-9,-2,9,-10,-7,-1,2,-7,10,10,9,-1],[1,7,10,2,8,-8,3,5,9,-9,3,1,-2,-7,6,-9,3,-2,5,-4,-7,10,-10,-3,1,3],[10,9,6,4,-7,6,1,3,-3,1,-9,1,-7,10,8,4,-7,1,-1,5,10,-8,-3,-6,-9,-8],[7,-10,6,4,1,-2,-3,4,-10,1,-2,10,1,-4,3,1,-1,-6,-8,3,-8,-2,7,-4,4,-6],[8,4,2,-2,-9,-6,-3,-9,3,-4,6,4,9,2,-5,4,4,3,-5,10,-9,8,9,2,-1,4],[2,5,-6,-7,-5,6,-8,-3,5,10,-10,-5,6,-2,6,4,-6,1,6,-4,-10,10,9,-2,-9,-8],[1,-9,-3,-1,8,8,6,5,9,3,-8,-7,10,-1,4,-9,5,9,8,-8,9,10,5,-7,3,-4],[-7,-7,-2,6,-10,-10,-5,-4,1,1,7,-3,-7,7,-2,-2,-1,4,9,-9,6,-3,-8,-4,-10,9],[8,-10,-4,-6,7,5,-7,3,-10,-5,2,9,-7,-1,10,2,3,3,-10,-4,-7,7,8,9,2,6],[2,-6,-8,3,8,-6,-9,8,7,8,-3,-7,-3,-8,-10,1,-10,10,5,-8,1,5,6,-1,7,9],[2,-10,-2,-2,-5,-4,-7,6,8,-6,-1,-10,4,10,-1,-3,4,-10,4,-9,-2,-7,-7,-4,9,5],[8,-5,-9,6,-1,-4,2,1,7,-4,-5,9,-4,-1,10,-10,-3,3,-9,3,7,7,3,-5,2,-9],[-2,10,-1,8,-9,4,-5,-6,-7,6,-10,5,-3,-4,-2,1,-3,-10,4,-8,6,6,10,-6,5,-4],[5,8,4,10,-5,9,-3,-4,9,-1,5,-8,1,5,6,-1,-1,-8,1,10,-10,-5,2,-2,-3,-7],[10,7,-9,-9,2,-5,-1,9,-10,9,9,-3,-5,-9,-7,9,2,-3,10,6,-4,-6,-6,6,-3,-6],[-8,1,-5,4,-9,-3,10,-3,-10,2,-2,10,5,-3,-2,1,9,3,-4,-8,-1,5,-7,-2,7,-2],[4,8,9,-10,-2,10,2,-5,-2,9,-2,-5,-1,7,-2,-1,-2,-8,2,-1,-6,4,-4,-4,2,2],[-6,-4,-3,-6,-9,-3,-6,1,8,10,2,-4,5,-5,-9,-10,1,3,2,-10,6,1,4,-2,3,-8],[8,-1,2,-9,-10,-8,-10,8,-10,-4,-2,10,8,-10,-4,7,-2,6,-6,-5,-3,-1,3,6,8,2],[8,5,6,8,-6,3,-7,2,-1,4,-1,8,4,9,-5,-9,-5,-8,2,8,-4,5,-9,7,-5,5],[-5,10,-4,-9,-10,-1,-5,-3,-4,4,-3,9,8,-1,6,9,-8,9,7,-2,-8,-1,1,-9,-6,-4],[4,10,-1,4,-8,9,3,-7,-7,7,-1,8,4,-10,-4,9,8,-1,4,-8,-10,8,6,2,-4,9],[-9,1,8,-4,-4,10,4,-2,-7,-1,-7,10,2,-7,3,6,-6,-5,-8,7,-2,5,8,-6,-10,-2],[4,2,-4,-6,6,-8,9,-5,2,1,8,-2,5,-3,-5,-4,7,-4,-7,-9,-4,-3,2,-2,-1,10],[6,10,-10,-8,8,-3,-10,-9,9,9,-4,-6,2,1,-8,-7,-3,-8,9,-9,10,3,8,8,-9,1],[-9,2,-3,-9,5,7,-4,-2,-3,-2,-4,-2,9,10,-6,3,-7,9,7,-1,5,-10,-3,1,-5,6],[8,-2,9,-4,4,-2,-2,9,8,-2,7,9,-8,5,-3,-5,-2,-9,10,8,3,-4,-1,-6,4,2],[-2,3,-3,-3,1,9,-4,6,4,-7,4,-3,4,-3,-7,-2,-6,-9,5,-5,-10,2,5,-8,-2,7],[6,-10,-1,-1,-8,9,7,-2,10,9,-4,-3,-8,7,6,5,-3,-2,-8,5,5,-9,-10,5,8,9],[4,10,-3,-2,-8,8,-2,8,-3,-7,6,1,6,-7,1,-6,-10,-6,1,1,-5,-5,-9,-6,-7,-3],[8,1,1,8,-6,6,1,8,-10,-5,7,-1,-4,-1,1,-4,-9,10,-2,3,-3,3,-2,7,-9,-4],[-2,-3,1,7,-9,10,-7,1,9,7,-2,5,3,-6,4,-9,7,1,7,2,1,5,2,-9,-7,-4],[-9,4,3,-4,-2,-1,6,-8,2,-8,-10,2,6,-5,-8,-5,8,-10,-1,-7,-9,3,2,8,-1,-8],[-7,5,2,8,8,8,3,8,4,9,4,9,-3,-2,1,-7,2,4,1,3,-5,5,1,-4,-9,-6],[-4,10,2,-4,-2,3,-1,8,-1,1,-4,-4,10,-7,10,1,-10,1,-3,-5,4,-8,7,8,7,-5],[-6,5,6,4,-7,10,-5,9,6,2,-4,-6,6,-10,-5,-5,4,8,2,-8,8,8,10,3,1,-7],[-6,9,-9,5,6,7,-8,1,-9,-10,-8,-4,6,-4,1,-4,-4,-6,-4,7,1,-1,10,-10,1,-10],[10,7,9,5,-1,-6,-5,-8,-5,8,-10,6,1,1,-8,2,2,6,-1,3,3,8,4,-7,-10,5],[-6,-2,-7,-10,1,-4,3,8,2,-7,1,-3,1,3,6,3,-9,8,5,10,2,-3,-6,9,2,-5],[1,-7,-9,-6,-8,-5,-2,-2,1,-7,8,7,10,-1,2,-5,-5,7,-3,-7,2,8,6,-4,-2,1],[-2,-3,4,7,2,-1,6,-9,3,-10,9,-10,7,-2,-5,-10,-1,9,7,-1,10,5,2,-3,-9,1],[-2,-5,-6,-10,1,-8,-3,8,-5,-8,-3,-10,-7,1,7,-6,-4,6,9,9,-5,10,7,7,-7,8],[-10,-6,-3,-4,8,7,-2,-1,10,9,-8,5,-7,9,9,-5,-8,-7,7,-1,-1,6,-3,2,-9,-3],[10,-4,2,10,-5,-2,5,3,-9,6,3,3,10,-1,6,6,2,2,5,5,8,-2,7,2,10,-7],[-1,8,6,10,3,-10,8,-9,6,3,-3,9,-2,7,-1,2,-7,-3,2,-6,9,-10,-10,10,-4,1]], dtype = "int8")#candidate|14117|(88, 26)|const|int8
call_14115 = relay.TupleGetItem(func_10266_call(relay.reshape(var_14116.astype('int8'), [13, 1, 11]), relay.reshape(const_14117.astype('int8'), [13, 16, 11]), ), 0)
call_14118 = relay.TupleGetItem(func_10269_call(relay.reshape(var_14116.astype('int8'), [13, 1, 11]), relay.reshape(const_14117.astype('int8'), [13, 16, 11]), ), 0)
output = relay.Tuple([bop_14102,call_14108,call_14115,var_14116,const_14117,])
output2 = relay.Tuple([bop_14105,call_14109,call_14118,var_14116,const_14117,])
func_14123 = relay.Function([var_14116,], output)
mod['func_14123'] = func_14123
mod = relay.transform.InferType()(mod)
var_14124 = relay.var("var_14124", dtype = "int8", shape = (1, 143))#candidate|14124|(1, 143)|var|int8
output = func_14123(var_14124)
func_14125 = relay.Function([var_14124], output)
mutated_mod['func_14125'] = func_14125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_14159 = relay.TupleGetItem(func_5670_call(), 2)
call_14160 = relay.TupleGetItem(func_5672_call(), 2)
output = relay.Tuple([call_14159,])
output2 = relay.Tuple([call_14160,])
func_14166 = relay.Function([], output)
mod['func_14166'] = func_14166
mod = relay.transform.InferType()(mod)
output = func_14166()
func_14167 = relay.Function([], output)
mutated_mod['func_14167'] = func_14167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7899_call = mutated_mod.get_global_var('func_7899')
call_14234 = relay.TupleGetItem(func_7897_call(), 1)
call_14235 = relay.TupleGetItem(func_7899_call(), 1)
var_14238 = relay.var("var_14238", dtype = "uint64", shape = (416, 2))#candidate|14238|(416, 2)|var|uint64
bop_14239 = relay.divide(call_14234.astype('float32'), relay.reshape(var_14238.astype('float32'), relay.shape_of(call_14234))) # shape=(416, 2)
bop_14242 = relay.divide(call_14235.astype('float32'), relay.reshape(var_14238.astype('float32'), relay.shape_of(call_14235))) # shape=(416, 2)
bop_14245 = relay.power(call_14234.astype('float32'), relay.reshape(bop_14239.astype('float32'), relay.shape_of(call_14234))) # shape=(416, 2)
bop_14248 = relay.power(call_14235.astype('float32'), relay.reshape(bop_14242.astype('float32'), relay.shape_of(call_14235))) # shape=(416, 2)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_14249 = relay.TupleGetItem(func_3094_call(), 0)
call_14250 = relay.TupleGetItem(func_3096_call(), 0)
output = relay.Tuple([bop_14245,call_14249,])
output2 = relay.Tuple([bop_14248,call_14250,])
func_14271 = relay.Function([var_14238,], output)
mod['func_14271'] = func_14271
mod = relay.transform.InferType()(mod)
var_14272 = relay.var("var_14272", dtype = "uint64", shape = (416, 2))#candidate|14272|(416, 2)|var|uint64
output = func_14271(var_14272)
func_14273 = relay.Function([var_14272], output)
mutated_mod['func_14273'] = func_14273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12708_call = mod.get_global_var('func_12708')
func_12710_call = mutated_mod.get_global_var('func_12710')
call_14297 = func_12708_call()
call_14298 = func_12708_call()
var_14319 = relay.var("var_14319", dtype = "uint32", shape = (4, 11, 3))#candidate|14319|(4, 11, 3)|var|uint32
bop_14320 = relay.not_equal(call_14297.astype('bool'), var_14319.astype('bool')) # shape=(4, 11, 3)
bop_14323 = relay.not_equal(call_14298.astype('bool'), var_14319.astype('bool')) # shape=(4, 11, 3)
func_7855_call = mod.get_global_var('func_7855')
func_7857_call = mutated_mod.get_global_var('func_7857')
call_14338 = func_7855_call()
call_14339 = func_7855_call()
output = relay.Tuple([bop_14320,call_14338,])
output2 = relay.Tuple([bop_14323,call_14339,])
func_14359 = relay.Function([var_14319,], output)
mod['func_14359'] = func_14359
mod = relay.transform.InferType()(mod)
mutated_mod['func_14359'] = func_14359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14360 = relay.var("var_14360", dtype = "uint32", shape = (4, 11, 3))#candidate|14360|(4, 11, 3)|var|uint32
func_14359_call = mutated_mod.get_global_var('func_14359')
call_14361 = func_14359_call(var_14360)
output = call_14361
func_14362 = relay.Function([var_14360], output)
mutated_mod['func_14362'] = func_14362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11397_call = mod.get_global_var('func_11397')
func_11398_call = mutated_mod.get_global_var('func_11398')
call_14371 = relay.TupleGetItem(func_11397_call(), 2)
call_14372 = relay.TupleGetItem(func_11398_call(), 2)
func_9450_call = mod.get_global_var('func_9450')
func_9452_call = mutated_mod.get_global_var('func_9452')
const_14384 = relay.const([[7,6,4,-6,-4,-4,-3,4,6,5,-5,-10,1,-4,7,5,-5,8,6,6,3,9,-8,1,9,5,-6,10,7,6,-7,8,4,1,-1,4,-8,-10,-7,8,9,-1,-8,-10,-6,-9,-7,-5,2,-5,-5,-7,-1,9,7,6,-3,-1,-8,6,-9,-9,9,-9,1,3,10,-9,6,9,-5,1,1,-9,-5,7,9,10,1,10,-5,8,-3,-8,-2,4,3,-5,9,5,10,-8,7,8,9,-10,1,10,4,2,-5,3,-4,-2,4,-7,-7,-3,4,2,9,8,9,-3,5,9,4,8,2,-10,-5,-1,3,7,-5,-3,-3,4,10,-5,5,-5,-7,8,10,10,-7,8,-6,1,5,6,6,10,-9,9,10,-4,6,8,2,-1,-8,-2,5,-6,7,10,3,-9,6,8,-3,-5,-6,5,1,-6]], dtype = "uint32")#candidate|14384|(1, 168)|const|uint32
call_14383 = relay.TupleGetItem(func_9450_call(relay.reshape(const_14384.astype('uint32'), [4, 14, 3])), 1)
call_14385 = relay.TupleGetItem(func_9452_call(relay.reshape(const_14384.astype('uint32'), [4, 14, 3])), 1)
uop_14394 = relay.asin(const_14384.astype('float32')) # shape=(1, 168)
func_3958_call = mod.get_global_var('func_3958')
func_3962_call = mutated_mod.get_global_var('func_3962')
var_14416 = relay.var("var_14416", dtype = "float64", shape = (1540,))#candidate|14416|(1540,)|var|float64
var_14417 = relay.var("var_14417", dtype = "bool", shape = (520,))#candidate|14417|(520,)|var|bool
call_14415 = relay.TupleGetItem(func_3958_call(relay.reshape(var_14416.astype('float64'), [1540,]), relay.reshape(var_14417.astype('bool'), [520,]), ), 5)
call_14418 = relay.TupleGetItem(func_3962_call(relay.reshape(var_14416.astype('float64'), [1540,]), relay.reshape(var_14417.astype('bool'), [520,]), ), 5)
const_14422 = relay.const([[7.082018,4.300238,-0.167922,-6.612177,-1.624265,7.132806,9.658386,-1.959916,-9.630538,-6.824605,8.161507,5.390037,3.002449,-1.568250,-1.390985,4.833938,-3.501986,-5.196407,1.408054,7.407945,9.794905,-9.127196,-1.578939,4.158067,4.831288,6.610669,-0.392587,9.244939,-2.338512,7.605179,0.834042,4.351088,8.146676,-0.290980,-5.882561,2.171453,-7.590907,-4.581847,-3.850894,0.649543,3.732759,-6.507968,-8.051026,-5.795795,4.162371,1.503836,-4.872818,7.128213,-5.663755,-2.559756,4.367554,5.959326,-0.633704,-1.585092,0.952811,-2.324398,-4.841932,3.477395,-5.711263,-8.305843,8.802682,-4.563996,-9.007320,4.592691,4.806081,5.038970,9.004539,-6.696547,-2.640753,-6.255847,1.936806,7.796725,-1.295044,-2.267215,-9.102595,-8.869504,-8.484157,9.352458,-1.086421,-2.808370,5.539715,5.011821,-7.656230,-9.091662,-1.085659,-0.960631,2.103291,-7.806627,-3.177755,7.258892,9.620849,-1.268417,-2.853901,-9.522493,5.063559,2.181201,-7.045454,3.132278,-9.945144,7.524963,0.445695,-2.783037,5.599889,-6.137639,9.184699,-6.000090,7.906070,1.494624,1.997207,5.455269,-7.224800,8.808386,0.175252,2.831906,-8.000163,-4.969701,-4.111502,-9.013116,3.747580,-8.085769,-0.504256,6.204386,5.808309,-3.492811,-0.704600,4.336454,-2.626674,8.612259,-8.312773,2.914730,-0.933518,-5.055792,9.519150,-6.071948,1.762232,0.527717,-9.058075,5.692619,9.002043,-3.836988,8.842253,-3.916081,-3.142840,8.980032,-3.919125,2.679317,2.488977,-1.674200,-7.493287,3.665497,1.353942,-6.751143,-7.655356,6.397515,3.674620,3.591874,-5.787774,-2.851611,-4.810162,9.796348,-7.448387,6.397976,-5.133988,-9.709125,-6.907156,-1.552097,1.813886,1.803731],[-4.053637,7.118861,-8.808739,0.233966,5.648601,3.997846,3.383474,-9.795942,5.280418,2.382742,4.683492,7.434460,-4.902631,5.574330,-2.847193,4.062771,-2.809604,-9.232246,8.014095,0.124332,2.093272,-4.274928,4.636473,-2.498967,-4.164712,-6.018517,-0.177290,-8.277079,0.616525,-9.011256,-6.149847,-7.713877,-6.142925,-5.926945,-9.993946,-7.926814,-1.017554,9.811447,-0.519451,1.524392,3.774893,-6.710136,0.290410,-7.445155,3.651144,-7.057690,-1.571312,-2.921371,8.388227,0.082466,-6.127530,3.218250,-1.274384,-7.026094,-1.677344,-3.656969,5.624770,7.602287,9.556200,3.405433,-4.189614,-3.398670,-6.128113,-8.313135,9.731462,-0.834669,4.618766,6.702138,-2.256103,-9.337287,4.550337,-4.647358,-6.486979,7.000842,-4.009003,-4.839916,-8.435680,9.502630,1.194856,-3.141445,7.375463,-8.716664,-9.509875,4.803078,9.942336,4.128950,-0.301026,3.397834,-9.636149,-9.236822,6.078439,0.689102,3.242533,-0.540218,-2.900926,-7.248175,6.420317,2.261029,-7.375104,-6.352571,-2.230843,-5.735882,-0.242382,2.588096,-3.253983,0.140294,-7.667944,9.228873,5.044584,-2.003486,-4.606789,-5.435592,7.943978,9.133906,-3.273850,9.952487,6.749988,2.270769,4.164512,-6.607903,-3.528075,0.369935,7.185247,-7.741429,1.524246,-4.750859,1.200243,7.525387,-8.745555,-4.273971,1.281257,-6.338198,1.692607,-7.315960,-9.788762,-1.238145,-9.842296,-4.723623,-0.370113,-7.477941,3.447616,0.160622,7.623097,-1.970139,1.212211,-3.860966,-7.666183,-0.718522,-7.014723,1.212933,2.930306,1.495604,8.844602,8.756086,7.113951,3.543771,4.412979,0.742712,-3.466830,-9.459395,4.828195,-5.536728,0.776162,9.533193,7.541940,8.815556,5.473452,-6.999934],[-3.866027,-9.521310,0.358643,-0.151182,7.362586,-9.451657,8.346218,2.194069,1.506663,1.021040,-6.813480,7.585173,0.409005,4.388682,3.973758,5.023352,5.262265,8.345279,-4.887840,2.994934,-8.630954,2.667319,7.114812,-5.160951,-0.203725,2.572873,-7.412489,-4.129635,8.588165,-1.183987,0.373546,-0.816535,-3.759187,2.291028,-2.160603,-2.588402,-1.180710,-9.662953,-5.811256,2.866116,-4.635930,-4.147397,2.450469,-5.917221,-2.801863,1.645305,1.920926,-8.256576,-6.036507,-7.621011,7.034858,1.584426,-8.127981,2.565924,-1.391744,8.084783,1.419462,1.421483,-7.705074,-0.327823,6.683548,-7.259811,3.902060,-9.423066,-0.936795,-6.480638,1.327937,-1.087764,-4.409199,-1.920673,-0.936762,8.866176,5.988930,-8.129590,1.288892,-7.035496,-0.778700,0.800101,-2.621385,7.265901,-4.355156,-5.247204,6.494555,8.938417,-6.222198,-3.066081,1.297326,-5.667172,4.575181,-4.434625,1.717904,1.523043,3.559977,-3.484361,-6.776996,-0.226785,1.985241,-6.456865,9.996353,-8.991668,1.169660,-7.730492,3.363243,-1.197537,3.491521,5.875856,3.491973,0.114526,3.809660,-5.230677,1.079597,-8.319934,4.484448,-7.583131,-0.563956,-3.821671,8.172940,-0.579499,-0.906441,2.289175,0.407504,-5.820516,4.953683,3.675467,7.681236,-1.561085,-3.794048,-1.489731,0.638778,9.724745,9.893514,-1.597617,-8.226252,1.313821,0.788627,2.586304,4.591890,8.064417,5.140666,0.877323,1.870305,1.057647,-9.042696,0.307998,-8.975510,6.788853,1.071991,6.438918,-0.192706,-4.704937,2.690307,-4.349989,6.292759,-7.365122,-2.558331,-0.363335,9.030355,-0.874619,2.042602,-8.058561,-9.263839,1.237928,4.321144,3.026269,-9.655538,3.038402,9.196213,-0.430191],[4.719332,8.838359,5.678310,7.323353,-3.786018,-0.607167,-2.795446,0.583546,6.450981,-4.306453,6.273581,-6.423258,8.342542,-3.832829,-6.287858,8.385342,2.728632,3.079312,-8.776304,8.374727,-8.024708,-6.489109,-8.465371,4.785177,5.768472,-0.769178,-9.035630,-8.624368,-9.528101,-4.644242,4.556461,4.292070,4.925445,0.768841,4.780988,-7.849480,8.201404,-6.188071,-2.649144,3.446565,9.733257,4.460193,-6.869409,9.419470,-3.707581,7.895388,-0.814116,-0.623532,-2.332759,0.905764,-5.777486,0.637558,8.031666,-0.948400,-9.965860,7.659815,2.224097,7.043152,-8.739646,3.989598,-7.114598,-5.665815,4.542468,-6.516875,1.818021,1.175755,6.431616,3.498086,2.862516,6.013483,8.470326,1.954077,6.448150,-5.479533,-0.415328,-5.012539,6.793188,9.745466,3.236837,-3.775776,4.380670,-9.587751,-6.493687,2.855853,4.423756,5.365001,1.950389,-9.895186,4.529791,-9.282047,-5.881250,8.478939,-3.803524,-8.647171,-8.661156,-1.274035,-0.912021,0.656482,-9.676850,-7.237466,4.569115,-3.553377,4.854432,4.153979,1.947369,-8.552495,-3.644714,3.299110,-9.610503,-0.613634,-9.536988,-6.022948,8.118759,-3.430887,0.296669,-3.867759,-0.661908,5.068769,9.780119,8.028579,4.517396,-1.569738,9.702341,-7.230856,0.486193,-0.589916,5.452683,-9.031667,-8.017737,-7.363671,-0.085873,-8.294276,4.502638,-5.409072,-3.055154,0.818111,7.185794,3.565991,-7.805148,-6.498028,-0.129757,0.891736,9.258772,4.073238,-9.518344,6.613616,-2.176534,-5.448915,-3.945867,-6.611100,-3.515640,-0.776005,3.175939,-4.301565,6.337404,6.366966,2.472582,5.101115,-6.881462,5.451354,-5.328363,5.620798,-2.263398,-3.604871,-8.897738,-4.481931,-0.242479,-7.374968],[-2.856314,1.417659,3.175423,-9.432096,-8.280191,-7.676584,-9.757213,1.521968,-2.657486,3.449674,-8.319893,1.481486,-0.632049,7.197877,-2.252291,-6.869265,-5.179065,-4.927526,-2.819664,5.433591,-7.929945,1.079752,6.667609,1.799648,-2.371166,-5.635381,-3.826043,1.488605,0.244818,-9.193445,1.217265,4.996006,-7.131734,4.369345,-1.570477,8.471187,-6.244171,2.312496,-2.669110,-3.351927,1.983939,7.381729,-6.411646,-8.313694,-2.966188,-5.661851,8.927198,2.422294,3.523140,-7.933047,8.797584,8.710558,-5.694553,8.770249,2.538423,4.614461,9.722354,4.412331,-4.380567,2.406774,-0.990817,-4.009727,3.266430,9.782464,-1.772471,-8.766503,-0.973666,-0.567669,-7.534338,1.175149,2.525458,-0.794415,1.862539,-2.560757,5.148996,-9.879770,4.207041,8.298543,2.954398,-6.632827,-9.919778,1.309006,-1.028448,-8.411552,-6.610120,-2.830376,-5.090510,-7.652206,-5.529363,3.339951,-8.105463,4.936219,-9.029161,4.402215,-0.776721,-2.892296,-5.286313,7.904309,4.375748,-7.755362,3.353390,8.703879,2.643410,9.420184,-9.240257,-2.371343,2.633982,8.931337,-9.580739,9.424550,-5.478364,-4.155785,9.151329,5.537547,2.467902,-3.169363,-4.886781,-0.915125,3.075129,-8.699684,3.641842,7.650903,-5.727115,-1.336366,0.255395,4.545134,2.234128,-8.824851,4.903345,0.351997,7.584092,9.768709,8.726932,-4.051754,-4.429009,2.102916,5.915785,-6.138760,0.774025,-7.490177,-0.258412,-4.323291,1.380737,-8.021310,-4.721709,8.192268,-3.351351,0.365546,0.700669,-0.519124,-5.027437,5.722973,-5.616102,-5.965747,-0.145301,-1.661921,-4.147521,7.349710,-8.908591,7.130123,5.042298,-0.880849,1.642506,-5.924271,5.191048,-3.187760,-4.230598,4.018246],[5.872127,-0.772651,4.166072,-9.402763,2.274174,2.443968,-3.299984,-7.785766,-6.568907,5.681343,-6.734267,-7.589583,-5.170473,-4.433369,-1.196840,-4.193820,7.693316,5.070396,8.267782,-0.384490,2.862741,-0.086100,-6.512737,-6.234739,-2.433220,4.943367,9.165499,-6.296555,-1.515195,-0.322439,6.395355,7.407178,9.907279,6.439374,-3.744820,0.282893,6.621490,6.356570,-0.376386,-8.792877,8.088112,1.697563,4.534951,0.513634,-5.849643,-7.915701,-1.940434,-5.526694,2.054550,-5.788988,-6.797006,4.788988,-0.774495,0.899300,-6.601661,7.692811,0.183405,-7.698092,-9.945829,7.538076,3.771339,-0.955611,0.930610,7.846399,-9.658875,-4.906557,8.441196,2.772045,6.522465,-6.430386,-3.947058,3.667940,0.420928,7.935733,1.278521,-1.166544,-8.828006,-0.137340,-8.007602,-7.332034,-5.136874,2.767867,4.024395,2.563073,8.424585,-3.275376,4.943645,-9.795965,-4.897108,-0.751470,-1.572230,-9.623984,-1.323697,-7.931461,6.268115,3.992903,2.860998,5.201473,9.798761,0.995955,0.803777,6.113684,-6.458828,3.590044,7.113227,-8.486821,-9.894064,-7.508903,-9.580643,1.792333,-5.168100,5.329113,2.722270,-9.263086,8.059475,-7.242938,5.099857,1.242750,8.708987,-3.972106,-0.764651,-7.367453,-9.087583,8.609271,6.138584,-5.879863,-9.010512,5.152448,-6.158142,-2.355432,-0.737165,-6.054613,-4.095552,5.623363,-4.258211,-1.161824,-2.222214,-3.553824,-4.233467,6.821576,-2.777219,2.552140,3.201337,0.964949,-0.815910,9.304137,-5.496139,-3.688705,6.169494,-6.301567,-7.630670,9.623652,2.609192,2.494460,2.390842,2.207692,-1.110816,-9.982029,3.605810,4.663504,-6.724402,-7.422613,2.077917,0.924711,-6.340866,-7.222733,8.479079,-7.960193],[5.444368,-9.082359,-2.951382,6.848609,-9.526155,5.867089,7.234815,4.926733,0.313658,-9.149157,-1.410276,-2.150151,0.250200,5.224469,-7.630347,7.554427,8.144705,-7.505699,1.128025,-2.834495,-3.641343,3.684388,1.796916,0.763348,0.170306,1.359256,5.923086,-8.239897,-9.185848,9.317918,7.265985,6.535366,-7.520676,6.471389,3.261725,9.508000,3.305835,3.850478,6.419284,9.923837,-8.316866,3.900636,-0.842054,-7.959386,4.641985,3.838261,-0.669103,-6.604709,8.353707,-4.145646,6.589076,-7.832915,-8.012879,1.629253,-0.889328,-0.217254,5.422593,-5.578525,-5.829688,1.658259,7.270329,-5.922666,1.980413,-5.787222,-1.938167,2.583423,9.367399,-3.578431,9.962463,6.277341,8.362208,-6.572876,8.069187,-6.275138,1.262097,-3.523648,5.327113,-3.267666,5.519103,4.624107,7.957475,6.595984,-5.660978,-8.455813,-7.951449,7.055304,-0.284021,-2.228730,-4.047161,7.311283,-2.741726,-5.535652,-1.615224,-1.758040,-6.456448,-9.827438,-0.858043,-2.986066,1.950888,-8.239598,-0.596727,0.985030,4.823599,7.666578,9.629776,8.211923,-6.315240,2.594326,-9.254022,-7.328259,9.993339,-8.951632,-3.716915,-9.006422,-8.691774,5.388830,-6.790469,8.894875,8.728577,6.154626,6.933129,-0.913693,2.473314,-9.052140,-5.419189,-8.519051,5.760921,1.764899,7.402649,-6.865167,7.382960,-8.510984,-0.254244,7.754391,-6.109952,-7.368829,-0.981907,2.157830,-4.642046,3.868607,-1.561726,-8.696819,9.945453,-6.724640,4.031124,-9.444294,-2.736790,-0.292973,-0.658179,-2.213463,1.644805,-2.968418,-7.627202,0.776929,1.035577,4.052171,-8.702192,-8.055428,0.218078,-3.228541,0.338296,8.726325,9.510080,-1.679098,-1.812015,5.298009,-3.085740,5.957358],[4.525348,1.159509,0.144122,1.653049,3.030605,1.844213,-4.799750,3.485086,-6.631898,1.945223,5.709321,0.200022,8.970272,6.642506,-2.283442,-7.971747,6.437650,9.197625,-9.196397,-1.920382,-1.878477,-9.673025,1.656829,-4.986671,0.756844,9.942692,1.331711,-1.621399,0.116305,-3.259121,-9.034038,-2.737152,6.739258,-0.728642,-9.572149,1.084731,5.035337,3.950102,5.582881,-0.512924,5.114722,1.071782,2.437055,7.110140,0.823871,-6.785462,-4.348800,8.020367,-8.443140,2.328084,-2.694767,4.774517,8.446726,-6.208644,-7.683953,4.838743,1.486384,8.884823,-9.072799,6.750723,-7.448791,9.322544,-0.910824,-1.651393,-6.818239,5.601064,-1.563888,-4.468131,0.528118,0.399885,-8.239451,-1.622635,3.787008,-2.433794,-2.976669,-2.283738,2.438184,-3.687234,-3.298832,0.950487,-6.655050,-1.629379,4.824260,-7.824425,6.150415,8.870914,-6.950504,3.317575,8.416943,3.143531,-7.597713,-1.810534,3.260035,2.356193,-6.266067,3.996620,-7.503454,6.904383,-5.664366,-6.783683,4.044665,8.236485,6.128714,-9.992083,-7.937133,0.214186,1.349734,5.255571,-0.180462,-3.379286,9.850598,6.920787,0.405942,5.796730,2.119920,-8.049198,8.531713,-8.821191,-6.406574,9.597966,7.424161,2.136785,7.578036,3.004833,-6.361141,-7.884809,8.858083,8.684910,-6.365422,4.283034,-2.085984,3.891378,8.047592,5.601417,-7.291990,2.442040,2.378982,-3.777691,3.302708,-1.621699,2.979350,0.151480,-7.477339,-1.895009,0.913586,-4.350762,6.537316,-2.707235,-4.853926,-7.706713,-7.372320,-1.257018,4.046336,-4.417560,-1.258105,-3.216526,4.847080,0.643249,-3.600989,7.473053,2.168928,6.678854,0.221535,7.344022,6.535247,-5.291010,0.458376,4.602059],[9.108456,5.004971,-3.343925,9.040109,6.938219,-8.616325,-8.230933,-7.187120,7.830635,-4.131527,6.651157,-4.176567,-1.486999,-0.472205,8.393329,-6.503804,-9.095131,5.402857,0.159947,-2.880237,2.266733,-5.632607,-1.269340,9.641041,-2.358463,-7.032591,5.179485,8.477365,3.310684,-9.291959,8.792448,0.106278,-4.479762,6.535047,-0.875441,5.043374,-9.742691,3.616049,-1.336754,-7.977313,0.694399,-3.821423,-0.253743,-2.845979,4.925531,-8.887789,6.434351,-3.809224,-9.537179,0.571931,-0.191923,-7.048764,-7.314527,4.984554,-4.293378,0.273505,6.593164,0.391423,5.756724,3.093802,-0.320900,-2.948364,-2.273946,4.127320,-8.635261,4.271520,1.829105,0.775972,1.100776,-3.884135,-3.937304,9.979292,4.640861,1.957644,-0.052063,-8.470193,5.006212,-6.847887,3.529602,-3.000148,-9.647223,-6.569443,-2.557159,7.162779,0.667497,8.613346,-2.966078,2.857082,8.825173,-2.579595,6.376934,-9.792317,3.880290,-6.102973,4.037011,-7.343584,-2.770005,5.292458,-0.405760,7.543696,6.988801,-3.447234,4.792719,5.484020,-3.022853,9.640283,-0.506587,-5.827250,-3.490553,4.782269,-0.892734,-7.703762,-8.038576,1.932354,-4.246527,-4.216011,1.435263,1.088698,-8.822941,-7.557600,3.433879,5.443262,4.304197,8.932657,-9.676312,7.881996,8.337800,-8.810244,-3.527184,-2.578414,-2.420566,-8.473267,4.839042,-7.352085,-0.020399,9.831538,-0.880774,-5.204712,-7.286609,-9.769685,-4.589240,7.635493,0.065752,4.001991,7.743788,-0.163266,0.373329,-0.746417,9.892897,-6.231083,1.711702,0.783967,-1.956233,9.775197,0.596089,-2.566225,-5.144542,1.799503,6.173885,6.823766,1.697835,-2.303073,-6.765680,1.703038,5.666439,1.112923,3.893720,6.059676],[-1.307221,3.363429,-5.623541,8.493863,3.170239,-5.300898,-2.138600,-4.361507,9.260623,-0.363229,6.908910,7.599280,5.425599,1.672334,7.093744,5.189899,5.959416,-7.988340,-4.936413,-7.604057,-6.014619,-8.750563,-0.978989,-0.520847,8.945579,5.599483,8.112980,5.775695,-8.283420,7.190114,5.925691,2.392834,9.888062,-4.421448,-8.914800,-6.405579,3.271009,7.590376,0.933440,-8.476740,-5.802351,6.605015,-2.968187,-7.011489,3.677499,0.070466,-4.273208,8.970189,-6.499449,5.192900,5.743146,1.198429,-5.558438,-4.304931,9.591460,-9.102240,3.603951,9.844477,1.608745,-4.390090,8.777741,4.558731,-8.486432,-2.527805,6.319284,0.600124,6.935687,8.701329,1.020356,8.893593,-5.253128,-5.746683,0.808490,-1.720919,-8.287956,9.090388,-2.547293,2.268626,9.566975,6.556677,-1.013921,8.039054,1.884021,8.972769,8.054027,9.561204,5.418605,5.797843,7.795434,8.918637,-1.845094,-3.842661,3.540604,9.934298,8.294645,2.740653,-0.299789,7.206886,-8.610748,-6.412378,6.499405,9.408008,-4.534047,4.350785,-2.964730,2.130264,7.001977,6.902104,7.061420,1.605786,6.565870,-5.439606,-3.985833,-6.174999,5.808603,-0.358023,-1.067888,5.845654,-0.533530,2.907596,3.183626,3.738145,-1.740189,6.783024,8.478480,-6.305778,-5.920818,-1.307355,-4.947891,1.097868,-5.900096,-4.015389,8.258566,0.766598,-8.873839,1.477946,8.092668,-7.500247,7.757478,6.457332,-9.085769,-8.824225,9.205229,6.858849,7.224299,7.411644,-6.160989,-5.923188,3.768167,3.044879,-8.579348,8.639048,3.717020,0.397055,7.177252,-2.059655,-1.112659,-0.956553,8.516623,8.888601,-7.938083,-0.374845,-8.211185,7.983233,-8.408594,7.869894,4.479834,-5.339050],[-0.691792,8.329451,0.652983,-7.913449,-4.856181,1.477983,-1.251746,-4.454367,5.684787,-7.819896,-1.818028,6.943743,-8.842215,2.346000,2.493703,1.739568,-1.376008,1.527195,-4.526424,4.502657,4.835561,-1.178360,-6.840953,-1.005734,-9.954010,3.163403,-5.633277,5.861521,-1.292626,-0.680011,5.749747,6.452107,4.785107,7.868102,-9.058907,-2.540386,9.450061,-5.426222,-4.998606,9.710167,8.318782,7.487702,5.590686,-1.915752,5.597661,1.483532,-2.254561,-4.351928,5.827840,5.964741,7.738326,2.375394,1.941053,-9.330557,5.349443,-7.947075,-5.527281,-9.127299,-2.346090,7.596141,-2.985279,-0.627858,-8.047567,-3.658140,-7.892422,6.576940,1.573559,-9.357376,-7.324513,-4.274606,-4.673246,-5.888397,-3.943093,-9.883628,-9.938616,3.864820,-3.332246,7.053536,-6.343618,3.605493,-3.376310,-0.894855,3.756749,-8.963042,4.723411,8.569569,1.908546,8.805060,0.194921,-7.087024,4.623695,-5.859955,-8.600291,-7.135606,6.032157,0.806849,9.507325,6.464073,6.029248,-8.103576,3.089248,-4.314045,-9.828946,-5.177737,-1.648408,1.339523,-4.001614,4.173502,8.486769,-9.586725,0.558498,-5.345576,2.173527,-3.674755,1.211519,-4.328480,-0.528855,9.882380,-1.382291,-0.393481,4.786968,-6.371339,9.994754,-1.662046,-5.726297,0.505212,-2.720806,-8.421348,-6.430975,-3.023338,8.833287,-2.425365,-2.099244,-0.582239,5.143447,7.582487,-4.650104,4.634188,8.384142,9.315297,-3.217619,-5.838364,-6.489103,-0.085175,1.701725,6.220164,0.655756,-1.642835,4.568774,-8.921680,-6.600664,5.029025,-2.500357,-7.796208,-9.406837,0.824232,3.442379,-6.450696,-5.682889,-9.463744,6.764236,-8.792037,7.227708,-1.946120,-1.662980,3.143331,-7.609186,9.338787],[9.345265,6.232067,0.944119,-3.482137,-1.886716,5.436230,-0.866954,-5.714753,2.572295,-9.045777,0.471775,3.043990,-5.459004,-9.289365,-8.431504,0.181932,-4.102561,3.261107,1.932624,-2.162744,-8.075431,-1.663212,4.864867,5.804383,9.103353,0.620330,-4.311869,-3.241761,5.432319,-9.213732,5.101130,-6.804342,-7.684065,0.134106,3.663200,1.407092,3.372060,-0.033873,-1.587285,5.803176,-9.396109,-1.815260,-5.232888,0.174083,-4.958714,8.581891,5.563544,3.916299,7.099478,3.957086,-7.871856,9.451504,-5.110938,-6.742458,9.007613,-1.341259,-0.398737,-0.345879,-7.883641,-9.343365,9.174797,-8.432553,3.057555,-5.301486,-0.992878,-6.096341,-6.853879,6.107241,1.925760,4.134260,7.276942,-6.385436,7.855237,-2.933708,-4.006392,-5.502586,-4.831618,-7.791904,-7.995726,3.066976,-8.428039,5.675129,2.037487,9.200461,-9.293942,0.556859,0.600208,6.298745,-0.760132,-1.395003,-6.438377,8.357991,2.669178,4.109921,-3.898571,-6.807150,-5.761017,-6.854443,-0.509178,-9.561891,-5.657863,8.186322,-0.250622,-1.729504,-1.430196,3.741362,8.483045,-6.502995,2.026934,-3.213309,-3.711025,-5.758965,-8.081517,-8.551775,6.804639,6.531389,-1.005274,5.480368,9.498576,9.045212,-0.719642,6.988849,9.034957,-6.074862,8.901771,2.519257,8.731184,-6.033139,-9.214930,7.412937,1.754282,7.474028,4.812461,-5.435137,2.493516,-9.908292,8.517874,1.034371,1.184284,0.596997,5.503713,-5.252216,-5.248517,-3.723001,8.501552,-6.505938,6.179340,-0.502467,-0.447596,4.105641,3.396482,0.382825,6.788902,0.799139,-4.430087,3.689120,8.306457,4.002074,-9.220131,-3.705295,2.088785,2.762017,7.895114,5.935291,-1.211153,5.378358,-7.224081,-7.014201],[1.847200,2.006779,-3.025592,9.149566,-5.514898,-0.708569,8.655622,6.671464,4.068672,4.091387,-5.497508,7.356887,5.907319,-0.463623,5.253804,-2.208720,5.199592,9.675830,-9.551897,8.000498,8.408804,-1.887066,8.913561,7.391590,-5.651179,0.292743,4.302102,0.943573,1.989564,-7.911973,9.770212,0.109710,-0.005584,-0.826580,-1.764794,-2.454722,3.613645,-8.864745,-7.338403,-2.971259,-5.146435,4.159431,-6.925005,-1.607743,8.885342,-2.742675,2.242333,3.610408,-6.767863,4.614961,2.088498,-9.754245,-7.110794,0.087281,-8.765368,7.929250,8.386185,-6.767309,3.862851,7.711889,-7.302377,4.547634,-1.005335,4.419689,5.250298,2.701798,-0.147672,3.495674,-3.316183,9.331341,-3.095470,7.293489,-5.001599,8.059747,-6.443633,-5.865002,6.980120,0.183919,-0.553197,-1.714831,3.632215,-4.074253,-5.506514,-9.757495,2.425069,3.713693,-3.130429,0.023759,9.573414,-8.199982,-3.327529,-2.814887,4.705794,1.569434,-4.535725,9.390745,0.813807,-4.978236,9.002058,-1.811724,-9.675944,6.626653,-2.212123,3.466643,4.388993,6.713767,-9.437213,0.960251,1.385124,7.065774,5.092428,4.426033,4.538287,-8.602527,-3.283732,0.270777,-6.207844,2.107683,0.045481,-8.180621,1.094650,-7.675953,3.086546,8.323327,-0.438201,0.159909,4.673532,-8.119199,-3.355580,3.335340,7.651167,6.099550,0.844521,-0.872032,-4.469369,-0.228859,3.218526,4.612409,-2.902311,9.117158,-4.410342,-8.530867,-1.245919,-4.512085,3.983803,8.952435,-7.684188,6.215112,-9.408586,-8.176443,-0.341662,-6.234874,-2.325097,8.389504,-1.340484,7.194201,6.310910,-3.651961,2.704795,-9.693153,-2.398960,1.785077,-8.441785,9.633309,3.449556,8.522570,-3.882202,9.515927],[-8.895037,7.923494,6.936067,1.754420,2.847150,-1.830245,-7.927329,9.835333,3.938687,1.003915,5.522524,-7.906326,-1.171423,0.714335,5.463063,2.921753,9.090850,-7.307032,-9.467353,5.980540,9.575841,-0.324134,-6.688422,-0.842542,-1.205696,4.534726,-5.617673,-9.387690,-5.218338,0.623775,-3.948351,1.630052,-0.628445,2.904695,6.698187,-2.472163,-5.880736,-2.818277,-2.257222,-7.408493,-6.698119,8.666619,0.695467,4.153275,1.382188,5.501999,-3.842136,6.995060,-6.980019,7.696586,0.912451,-7.292004,-7.271604,-2.091796,-6.505610,4.290534,-0.539149,2.735675,2.375759,9.867283,-0.669207,-2.450865,5.606217,3.614184,-7.076005,7.336849,-0.604224,-1.034654,-7.155404,8.013383,5.542762,4.859351,9.354200,-0.410045,-2.658125,8.858295,-1.964782,2.301266,4.463639,-4.680571,2.198480,6.986440,6.742164,-4.711929,-3.251247,-0.939151,-9.670713,-0.361206,6.688607,-3.844130,-2.723984,-0.193861,-2.826772,8.642309,-5.663426,9.618715,8.704497,2.249778,-0.872052,4.631497,3.508229,7.834886,3.375051,-6.847354,-7.399635,-5.794683,-0.318706,8.675994,-3.421014,5.029614,-4.180436,-8.596823,6.716664,7.141480,1.576118,6.983943,-1.616957,7.541430,-4.387226,-4.605761,-5.269495,4.627460,1.801693,2.769555,9.998239,-0.738511,-1.832639,-3.054080,-3.143481,5.977247,-1.532013,4.128003,4.070083,-3.785216,-8.306776,-2.538608,-7.503078,0.541859,4.103105,9.407401,4.671440,-7.374183,4.581492,-5.536691,-2.721028,8.543866,-5.103909,-3.814141,3.867751,5.119248,1.813005,8.250780,2.709056,-4.256042,2.957990,-9.721741,4.997756,-4.369563,5.409704,2.632424,1.365811,-5.611615,9.668013,4.434666,5.790216,-7.347947,1.137448,-5.451379],[-1.981480,6.451198,2.381458,0.448170,-7.190449,2.594085,-6.027176,-0.020290,9.975651,4.809188,9.369991,-4.433496,6.493957,0.624416,-1.091209,8.585568,-9.763017,-0.211417,-8.357780,2.222990,-0.235269,-2.563009,4.640488,-8.146442,5.061490,3.014008,-0.648527,-2.992490,-6.406165,-7.618273,3.147885,2.579662,-3.376073,2.211769,3.801425,-3.138242,6.159146,-5.496457,8.533558,-6.475012,-7.978896,6.961082,9.283504,-4.179982,9.584621,-7.660257,9.587982,3.285830,4.300266,-9.797924,8.192415,-6.761170,-1.911783,1.692453,7.586810,-5.137145,5.372658,7.402736,2.941119,-0.885263,-8.226824,-4.498243,-1.933924,-0.706975,-4.016609,6.771546,3.368759,8.273732,-6.343656,8.348542,-1.657783,-3.539075,6.875073,-4.531416,5.731773,9.650540,7.481045,2.466279,8.693991,8.898541,5.974965,2.993114,5.119223,-9.185407,9.306401,5.714014,0.225773,8.692310,1.177857,-7.803594,-3.947377,7.126036,4.974390,-5.087178,-3.052751,-7.445814,-6.902442,-9.511748,-8.571466,2.992273,-4.615210,0.408882,-2.101644,-5.992227,-7.093292,5.663059,-4.954716,-6.562375,1.990774,9.529481,4.867696,3.741458,5.144861,9.218388,-7.535516,-6.731002,0.799434,3.617349,-9.955937,-3.995978,-8.347232,-2.290180,-3.996163,-1.406466,7.854997,7.004841,9.311601,-8.016791,-2.710765,0.327390,-1.414540,3.305701,9.960855,-5.147517,-6.090407,9.945695,-4.330734,7.287829,-8.567981,-5.886924,4.327151,-6.461177,9.911272,-4.026588,-4.682316,-9.046923,1.720835,0.784637,-9.151434,-4.092418,-2.571938,6.101437,6.537415,3.826208,-7.977005,6.408985,9.544948,4.397183,-8.842508,-5.875240,2.081529,-7.205841,-1.334021,3.738862,4.814868,0.780663,5.928139,-0.676012]], dtype = "float32")#candidate|14422|(15, 168)|const|float32
bop_14423 = relay.bitwise_or(uop_14394.astype('uint64'), const_14422.astype('uint64')) # shape=(15, 168)
output = relay.Tuple([call_14371,call_14383,call_14415,var_14416,var_14417,bop_14423,])
output2 = relay.Tuple([call_14372,call_14385,call_14418,var_14416,var_14417,bop_14423,])
F = relay.Function([var_14416,var_14417,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14416,var_14417,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

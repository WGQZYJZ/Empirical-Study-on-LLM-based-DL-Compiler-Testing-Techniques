==========mod==========
#[version = "0.0.5"]
def @func_5381() -> Tensor[(8, 14, 2), int8] {
  @func_3097() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5241(%var_5206: Tensor[(40), uint8], %var_5218: uint64, %var_5219: Tensor[(130), uint64]) -> (Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(52), float64], uint64, Tensor[(130), uint64], Tensor[(52), float32], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8]) {
  %0 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %2 = reshape(%0, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %3 = reshape(%1, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %4 = @func_31(%2, %3) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %5 = @func_4353() /* ty=Tensor[(8, 14, 2), int8] */;
  %6 = cast(%5, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %7 = reshape(%6, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %8 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %9 = cast(%var_5218, dtype="uint64") /* ty=uint64 */;
  %10 = cast(%var_5219, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(52), float32] */, dtype="float32") /* ty=Tensor[(52), float32] */;
  %12 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %13 = reshape(%9, newshape=[]) /* ty=uint64 */;
  %14 = reshape(%10, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %15 = reshape(%11, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %16 = reshape(%12, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %17 = @func_2022(%13, %14, %15, %16) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %18 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %19 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %20 = %4.0;
  %21 = @func_4372(%7) /* ty=Tensor[(8, 14, 2), float32] */;
  %22 = %8.0;
  %23 = %17.1;
  %24 = %18.2;
  %25 = %19.2;
  (%5, %20, %var_5206, %21, %22, %23, %var_5218, %var_5219, meta[relay.Constant][0] /* ty=Tensor[(52), float32] */, %24, %25)
}

def @func_6629() -> Tensor[(8, 14, 2), int8] {
  %26 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
  %26.0
}

def @func_3827(%var_3810: Tensor[(1, 420), int8], %var_3811: Tensor[(40), uint8], %var_3817: Tensor[(10, 420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(70), int8], Tensor[(40), uint8], Tensor[(10, 420), bool]) {
  %27 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %28 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
  %30 = cast(%var_3810, dtype="int8") /* ty=Tensor[(1, 420), int8] */;
  %31 = cast(%var_3811, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %32 = reshape(%29, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int8] */;
  %33 = reshape(%30, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), int8] */;
  %34 = reshape(%31, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %35 = @func_1111(%32, %33, %34) /* ty=(Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) */;
  %36 = cast(%var_3810, dtype="bool") /* ty=Tensor[(1, 420), bool] */;
  %37 = cast(%var_3817, dtype="bool") /* ty=Tensor[(10, 420), bool] */;
  %38 = %27.0;
  %39 = %28.0;
  %40 = %35.1;
  %41 = equal(%36, %37) /* ty=Tensor[(10, 420), bool] */;
  (%38, %39, %40, meta[relay.Constant][1] /* ty=Tensor[(70), int8] */, %var_3811, %41)
}

def @func_6511() -> (Tensor[(8, 14, 2), int8], Tensor[(168), uint16], Tensor[(1, 105), float32], Tensor[(168), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %42 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 105), float32] */, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %45 = reshape(%43, newshape=[168]) /* ty=Tensor[(168), uint16] */;
  %46 = reshape(%44, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %47 = @func_3274(%45, %46) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
  %48 = %47.2;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(168), float32] */;
  %50 = @func_6021() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %51 = %42.0;
  %52 = acosh(%49) /* ty=Tensor[(168), float32] */;
  %53 = %50.0;
  %54 = @func_6129() /* ty=Tensor[(8, 14, 2), float32] */;
  (%51, meta[relay.Constant][2] /* ty=Tensor[(168), uint16] */, meta[relay.Constant][3] /* ty=Tensor[(1, 105), float32] */, %52, %53, %54)
}

def @func_2257() -> (Tensor[(8, 14, 2), int8],) {
  %55 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  (%55,)
}

def @func_5547() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) {
  %56 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %57 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %58 = cast(%57, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %59 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %60 = %56.1;
  %61 = sin(%58) /* ty=Tensor[(8, 14, 2), float64] */;
  %62 = %59.0;
  (%60, %61, %62)
}

def @func_4303(%var_4294: Tensor[(52), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], uint64, Tensor[(26, 5), uint64], Tensor[(52), float32], Tensor[(40), uint8]) {
  %63 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %64 = cast(meta[relay.Constant][4] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(26, 5), uint64] */, dtype="uint64") /* ty=Tensor[(26, 5), uint64] */;
  %66 = cast(%var_4294, dtype="float32") /* ty=Tensor[(52), float32] */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %68 = reshape(%64, newshape=[]) /* ty=uint64 */;
  %69 = reshape(%65, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %70 = reshape(%66, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %71 = reshape(%67, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %72 = @func_2022(%68, %69, %70, %71) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %73 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %74 = %63.0;
  %75 = %72.6;
  (%73, %74, %75, meta[relay.Constant][4] /* ty=uint64 */, meta[relay.Constant][5] /* ty=Tensor[(26, 5), uint64] */, %var_4294, meta[relay.Constant][6] /* ty=Tensor[(40), uint8] */)
}

def @func_9414(%var_9405: Tensor[(13, 4), float64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(1040, 1), float32], Tensor[(462), float32], Tensor[(270), int64], Tensor[(13, 4), float64], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(1040, 1), float32] */, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %78 = cast(meta[relay.Constant][9] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %79 = cast(%var_9405, dtype="float64") /* ty=Tensor[(13, 4), float64] */;
  %80 = reshape(%76, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), float32] */;
  %81 = reshape(%77, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %82 = reshape(%78, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %83 = reshape(%79, newshape=[52, 1]) /* ty=Tensor[(52, 1), float64] */;
  %84 = @func_5363(%80, %81, %82, %83) /* ty=(Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) */;
  %85 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %86 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
  %87 = cast(%86, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %88 = reshape(%87, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %89 = @func_8690() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %90 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
  %91 = %84.6;
  %92 = %85.0;
  %93 = @func_4372(%88) /* ty=Tensor[(8, 14, 2), float32] */;
  %94 = %89.0;
  (%90, %86, %91, meta[relay.Constant][7] /* ty=Tensor[(1040, 1), float32] */, meta[relay.Constant][8] /* ty=Tensor[(462), float32] */, meta[relay.Constant][9] /* ty=Tensor[(270), int64] */, %var_9405, %92, %93, %94)
}

def @func_2984() -> Tensor[(8, 14, 2), int8] {
  @func_2943() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_3463() -> (Tensor[(8, 14, 2), int8],) {
  %95 = @func_2450() /* ty=Tensor[(8, 14, 2), int8] */;
  (%95,)
}

def @func_7691() -> (Tensor[(8, 14, 2), float32],) {
  %96 = @func_5570() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) */;
  %97 = %96.0;
  (%97,)
}

def @func_7343() -> (Tensor[(3, 14, 4), float32],) {
  %98 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %99 = %98.1;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(3, 14, 4), float64] */;
  %101 = log2(%100) /* ty=Tensor[(3, 14, 4), float64] */;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %103 = tan(%102) /* ty=Tensor[(3, 14, 4), float32] */;
  (%103,)
}

def @func_8677() -> (Tensor[(8, 14, 2), int8], Tensor[(315), float64]) {
  %104 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %105 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
  %106 = %104.1;
  (%105, %106)
}

def @func_3333() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) {
  %107 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %108 = cast(meta[relay.Constant][10] /* ty=Tensor[(84, 2), uint16] */, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
  %109 = reshape(%108, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), uint16] */;
  %110 = @func_635(%109) /* ty=(Tensor[(3, 14, 4), bool],) */;
  %111 = %107.0;
  %112 = %110.0;
  (%111, %112, meta[relay.Constant][10] /* ty=Tensor[(84, 2), uint16] */)
}

def @func_3184(%var_3151: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  %113 = cast(%var_3151, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %114 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 3, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 3, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%115, %116) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_8072(%var_8065: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), float32], Tensor[(15, 5, 5), int16], Tensor[(375), float32]) {
  %117 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %118 = %117.2;
  %119 = cast(%118, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %120 = reshape(%119, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %121 = cast(%var_8065, dtype="int16") /* ty=Tensor[(375), int16] */;
  %122 = reshape(%121, newshape=[375]) /* ty=Tensor[(375), int16] */;
  %123 = @func_5790(%122) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) */;
  %124 = cast(%var_8065, dtype="float32") /* ty=Tensor[(375), float32] */;
  %125 = @func_4372(%120) /* ty=Tensor[(8, 14, 2), float32] */;
  %126 = %123.1;
  %127 = acosh(%124) /* ty=Tensor[(375), float32] */;
  (%118, %125, %126, %127)
}

def @func_6344() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %128 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %129 = @func_4929() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) */;
  %130 = %128.0;
  %131 = %129.3;
  (%130, %131)
}

def @func_1889(%var_1818: Tensor[(40), uint8], %var_1826: Tensor[(8, 14, 2), int8], %var_1877: Tensor[(8, 14, 2), int64]) -> (Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), bool], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), bool], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), bool]) {
  %132 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %133 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %134 = reshape(%132, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %135 = reshape(%133, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %136 = @func_31(%134, %135) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %137 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %138 = %137.0;
  %139 = cast(%var_1826, dtype="int64") /* ty=Tensor[(8, 14, 2), int64] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="int64") /* ty=Tensor[(8, 14, 2), int64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %143 = left_shift(%141, %142) /* ty=Tensor[(8, 14, 2), int64] */;
  %144 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 14, 2), int64] */, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %148 = cast(meta[relay.Constant][13] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
  %149 = cast(meta[relay.Constant][13] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
  %150 = reshape(%148, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %151 = reshape(%149, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %152 = @func_1026(%150, %151) /* ty=(Tensor[(15, 11, 14), int8],) */;
  %153 = cast(%var_1877, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %154 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%143, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = %136.0;
  %158 = cast(%157, dtype="uint8") /* ty=Tensor[(5, 4, 2), uint8] */;
  %159 = cast(meta[relay.Constant][14] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
  %160 = reshape(%158, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %161 = reshape(%159, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %162 = @func_1653(%160, %161) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %163 = greater_equal(%155, %156) /* ty=Tensor[(8, 14, 2), bool] */;
  %164 = cast(%163, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %165 = reshape(%164, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %166 = @func_1720(%165) /* ty=(Tensor[(8, 14, 2), bool],) */;
  %167 = greater(%146, %147) /* ty=Tensor[(8, 14, 2), bool] */;
  %168 = %152.0;
  %169 = %162.4;
  %170 = %166.0;
  (%157, %var_1818, %167, %168, meta[relay.Constant][13] /* ty=Tensor[(2310), int8] */, %163, %169, meta[relay.Constant][14] /* ty=Tensor[(52), bool] */, %170)
}

def @func_1026(%var_1021: Tensor[(15, 11, 14), int8], %var_1022: Tensor[(15, 11, 14), int8]) -> (Tensor[(15, 11, 14), int8],) {
  %171 = cast(%var_1022, dtype="int8") /* ty=Tensor[(15, 11, 14), int8] */;
  %172 = shape_of(%var_1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_1021, dtype="int8") /* ty=Tensor[(15, 11, 14), int8] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %175 = bitwise_xor(%173, %174) /* ty=Tensor[(15, 11, 14), int8] */;
  (%175,)
}

def @func_7243() -> (Tensor[(8, 14, 2), int8],) {
  %176 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %177 = %176.0;
  (%177,)
}

def @func_8414(%var_8406: uint64, %var_8407: Tensor[(130), uint64], %var_8408: Tensor[(26, 2), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], uint64, Tensor[(130), uint64], Tensor[(26, 2), float32], Tensor[(1, 40), uint8], Tensor[(2, 2, 13), float32]) {
  %178 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %179 = cast(%var_8406, dtype="uint64") /* ty=uint64 */;
  %180 = cast(%var_8407, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %181 = cast(%var_8408, dtype="float32") /* ty=Tensor[(26, 2), float32] */;
  %182 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %183 = reshape(%179, newshape=[]) /* ty=uint64 */;
  %184 = reshape(%180, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %185 = reshape(%181, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %186 = reshape(%182, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %187 = @func_2022(%183, %184, %185, %186) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %188 = cast(%var_8406, dtype="uint64") /* ty=uint64 */;
  %189 = cast(%var_8407, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %190 = cast(%var_8408, dtype="float32") /* ty=Tensor[(26, 2), float32] */;
  %191 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %192 = reshape(%188, newshape=[]) /* ty=uint64 */;
  %193 = reshape(%189, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %194 = reshape(%190, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %195 = reshape(%191, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %196 = @func_2022(%192, %193, %194, %195) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %197 = %178.0;
  %198 = %187.7;
  %199 = %196.2;
  (%197, %198, %var_8406, %var_8407, %var_8408, meta[relay.Constant][15] /* ty=Tensor[(1, 40), uint8] */, %199)
}

def @func_5737(%var_5703: Tensor[(6, 5, 13), int32]) -> (Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %200 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 5, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %201 = shape_of(%var_5703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%var_5703, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %204 = @func_5495() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %205 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %206 = minimum(%202, %203) /* ty=Tensor[(6, 5, 13), int32] */;
  %207 = %204.0;
  %208 = %205.0;
  (%206, %207, %208)
}

def @func_6245() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) {
  %209 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %210 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %211 = reshape(%210, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float32] */;
  %212 = @func_5144(%211) /* ty=(Tensor[(8, 15, 7), float32],) */;
  %213 = %209.0;
  %214 = %212.0;
  (%213, %214, meta[relay.Constant][17] /* ty=Tensor[(12, 70), float32] */)
}

def @func_3613(%var_3607: Tensor[(990), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(990), int32], Tensor[(600), float64], Tensor[(990), int32]) {
  %215 = cast(meta[relay.Constant][18] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %216 = cast(%var_3607, dtype="int32") /* ty=Tensor[(990), int32] */;
  %217 = reshape(%215, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), float64] */;
  %218 = reshape(%216, newshape=[990]) /* ty=Tensor[(990), int32] */;
  %219 = @func_2566(%217, %218) /* ty=(Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) */;
  %220 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
  %221 = %219.2;
  (%220, %221, meta[relay.Constant][18] /* ty=Tensor[(600), float64] */, %var_3607)
}

def @func_2566(%var_2539: Tensor[(5, 10, 12), float64], %var_2543: Tensor[(990), int32]) -> (Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) {
  %222 = cast(%var_2539, dtype="float64") /* ty=Tensor[(5, 10, 12), float64] */;
  %223 = cast(%var_2543, dtype="int32") /* ty=Tensor[(990), int32] */;
  %224 = reshape(%223, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int32] */;
  %225 = @func_832(%224) /* ty=(Tensor[(15, 6, 11), bool],) */;
  %226 = log(%222) /* ty=Tensor[(5, 10, 12), float64] */;
  %227 = %225.0;
  (%226, %227, %var_2543)
}

def @func_2887() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_504(%var_480: int64, %var_481: Tensor[(15, 9, 2), int64], %var_496: Tensor[(52), float64], %var_499: Tensor[(40), uint8]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
  %228 = cast(%var_480, dtype="bool") /* ty=bool */;
  %229 = cast(%var_481, dtype="bool") /* ty=Tensor[(15, 9, 2), bool] */;
  %230 = cast(%var_481, dtype="uint64") /* ty=Tensor[(15, 9, 2), uint64] */;
  %231 = cast(%var_480, dtype="uint64") /* ty=uint64 */;
  %232 = cast(%var_496, dtype="float64") /* ty=Tensor[(52), float64] */;
  %233 = cast(%var_496, dtype="float64") /* ty=Tensor[(52), float64] */;
  %234 = reshape(%232, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %235 = reshape(%233, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %236 = @func_97(%234, %235) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
  %237 = cast(%var_499, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %238 = cast(%var_499, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %239 = reshape(%237, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %240 = reshape(%238, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %241 = @func_31(%239, %240) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %242 = less(%228, %229) /* ty=Tensor[(15, 9, 2), bool] */;
  %243 = right_shift(%230, %231) /* ty=Tensor[(15, 9, 2), uint64] */;
  %244 = %236.0;
  %245 = %241.0;
  (%242, %243, %244, %var_496, %245, %var_499)
}

def @func_3751(%var_3704: Tensor[(546, 3), uint32], %var_3705: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
  %246 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 182), uint32] */, dtype="uint32") /* ty=Tensor[(1, 182), uint32] */;
  %248 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 182), uint32] */, dtype="uint32") /* ty=Tensor[(1, 182), uint32] */;
  %249 = cast(%var_3704, dtype="uint32") /* ty=Tensor[(546, 3), uint32] */;
  %250 = cast(%var_3705, dtype="bool") /* ty=Tensor[(52), bool] */;
  %251 = reshape(%247, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %252 = reshape(%248, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %253 = reshape(%249, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), uint32] */;
  %254 = reshape(%250, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %255 = @func_3508(%251, %252, %253, %254) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %256 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %257 = %256.0;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %259 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %260 = reshape(%259, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %261 = @func_789(%260) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %262 = cast(meta[relay.Constant][21] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %263 = cast(meta[relay.Constant][21] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %264 = reshape(%262, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %265 = reshape(%263, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %266 = @func_31(%264, %265) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %267 = %246.1;
  %268 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %269 = %255.10;
  %270 = sinh(%258) /* ty=Tensor[(8, 14, 2), float32] */;
  %271 = %261.0;
  %272 = %266.0;
  (%267, %268, %269, meta[relay.Constant][19] /* ty=Tensor[(1, 182), uint32] */, %var_3704, %var_3705, %270, %271, meta[relay.Constant][20] /* ty=Tensor[(105), float32] */, %272, meta[relay.Constant][21] /* ty=Tensor[(40), uint8] */)
}

def @func_4074(%var_4053: Tensor[(105, 1), float32], %var_4068: Tensor[(105, 1), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) {
  %273 = cast(meta[relay.Constant][22] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %274 = cast(%var_4053, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %275 = reshape(%273, newshape=[168]) /* ty=Tensor[(168), uint16] */;
  %276 = reshape(%274, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %277 = @func_3274(%275, %276) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
  %278 = cast(%var_4053, dtype="uint8") /* ty=Tensor[(105, 1), uint8] */;
  %279 = cast(meta[relay.Constant][22] /* ty=Tensor[(168), uint16] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %280 = cast(%var_4068, dtype="int16") /* ty=Tensor[(105, 1), int16] */;
  %281 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(%var_4053, dtype="int16") /* ty=Tensor[(105, 1), int16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %284 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  %285 = %277.1;
  %286 = logical_xor(%278, %279) /* ty=Tensor[(105, 168), uint8] */;
  %287 = bitwise_and(%282, %283) /* ty=Tensor[(105, ?), int16] */;
  (%284, %285, %286, %287)
}

def @func_5790(%var_5770: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) {
  %288 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %289 = cast(%var_5770, dtype="int16") /* ty=Tensor[(375), int16] */;
  %290 = %288.0;
  %291 = cast(%290, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %292 = reshape(%289, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), int16] */;
  %293 = reshape(%291, newshape=[224]) /* ty=Tensor[(224), int8] */;
  %294 = @func_4839(%292, %293) /* ty=(Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) */;
  %295 = cast(meta[relay.Constant][23] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %296 = cast(meta[relay.Constant][24] /* ty=Tensor[(20, 2), uint8] */, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
  %297 = cast(meta[relay.Constant][25] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
  %298 = reshape(%295, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %299 = reshape(%296, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %300 = reshape(%297, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %301 = @func_1535(%298, %299, %300) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %302 = %294.0;
  %303 = %301.2;
  (%290, %302, %var_5770, %303, meta[relay.Constant][23] /* ty=Tensor[(270), int64] */, meta[relay.Constant][24] /* ty=Tensor[(20, 2), uint8] */, meta[relay.Constant][25] /* ty=Tensor[(52), bool] */)
}

def @func_9823() -> Tensor[(8, 14, 2), int8] {
  %304 = @func_5870() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */;
  %304.3
}

def @func_7225() -> Tensor[(8, 14, 2), int8] {
  %305 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %305.0
}

def @func_2779(%var_2736: Tensor[(40), uint8], %var_2737: Tensor[(52), bool], %var_2752: uint64, %var_2753: Tensor[(130), uint64]) -> (Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) {
  %306 = cast(%var_2736, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %307 = cast(%var_2737, dtype="bool") /* ty=Tensor[(52), bool] */;
  %308 = reshape(%306, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %309 = reshape(%307, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %310 = @func_1653(%308, %309) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %311 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %312 = %311.2;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %314 = tan(%313) /* ty=Tensor[(8, 14, 2), float64] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %316 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%312, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %319 = cast(%var_2752, dtype="uint64") /* ty=uint64 */;
  %320 = cast(%var_2753, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %321 = cast(%var_2737, dtype="float32") /* ty=Tensor[(52), float32] */;
  %322 = cast(%var_2736, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %323 = reshape(%319, newshape=[]) /* ty=uint64 */;
  %324 = reshape(%320, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %325 = reshape(%321, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %326 = reshape(%322, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %327 = @func_2022(%323, %324, %325, %326) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %328 = %310.5;
  %329 = mod(%317, %318) /* ty=Tensor[(8, 14, 2), float64] */;
  %330 = %327.3;
  (%328, %var_2736, %var_2737, %329, %330, %var_2752, %var_2753)
}

def @func_4413() -> (Tensor[(3, 14, 4), bool],) {
  %331 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %332 = %331.1;
  (%332,)
}

def @func_6165(%var_6136: Tensor[(14, 9, 6), int16]) -> (Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) {
  %333 = cast(%var_6136, dtype="int16") /* ty=Tensor[(14, 9, 6), int16] */;
  %334 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(14, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 9, 6), int16] */, dtype="int16") /* ty=Tensor[(14, 9, 6), int16] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %337 = cast(%var_6136, dtype="float32") /* ty=Tensor[(14, 9, 6), float32] */;
  %338 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %339 = bitwise_xor(%335, %336) /* ty=Tensor[(14, 9, 6), int16] */;
  %340 = sinh(%337) /* ty=Tensor[(14, 9, 6), float32] */;
  %341 = %338.0;
  (%339, %340, %341)
}

def @func_635(%var_625: Tensor[(3, 14, 4), uint16]) -> (Tensor[(3, 14, 4), bool],) {
  %342 = cast(%var_625, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
  %343 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(3, 14, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 14, 4), uint16] */, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %346 = greater(%344, %345) /* ty=Tensor[(3, 14, 4), bool] */;
  (%346,)
}

def @func_9194(%var_9187: Tensor[(2, 10, 3), float32]) -> Tensor[(2, 10, 3), float32] {
  %347 = cast(%var_9187, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  log10(%347) /* ty=Tensor[(2, 10, 3), float32] */
}

def @func_7311(%var_7296: Tensor[(1, 10, 12), uint8], %var_7297: Tensor[(14, 10, 12), uint8], %var_7306: Tensor[(13, 10, 12), uint8]) -> (Tensor[(14, 10, 12), bool], Tensor[(13, 10, 12), float64]) {
  %348 = cast(%var_7296, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %349 = cast(%var_7297, dtype="bool") /* ty=Tensor[(14, 10, 12), bool] */;
  %350 = cast(%var_7296, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %351 = cast(%var_7306, dtype="float64") /* ty=Tensor[(13, 10, 12), float64] */;
  %352 = less(%348, %349) /* ty=Tensor[(14, 10, 12), bool] */;
  %353 = floor_mod(%350, %351) /* ty=Tensor[(13, 10, 12), float64] */;
  (%352, %353)
}

def @func_7641() -> (Tensor[(8, 14, 2), int8],) {
  %354 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
  (%354,)
}

def @func_4011() -> Tensor[(8, 14, 2), int8] {
  %355 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %355.1
}

def @func_1720(%var_1711: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), bool],) {
  %356 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %357 = cast(%var_1711, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %361 = not_equal(%359, %360) /* ty=Tensor[(8, 14, 2), bool] */;
  (%361,)
}

def @func_7050(%var_7034: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) {
  %362 = cast(%var_7034, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %363 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 756), int16] */, dtype="int16") /* ty=Tensor[(1, 756), int16] */;
  %364 = reshape(%363, newshape=[14, 9, 6]) /* ty=Tensor[(14, 9, 6), int16] */;
  %365 = @func_6165(%364) /* ty=(Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) */;
  %366 = log2(%362) /* ty=Tensor[(9, 15, 16), float32] */;
  %367 = %365.0;
  %368 = @func_6909() /* ty=Tensor[(8, 14, 2), int8] */;
  (%366, %367, meta[relay.Constant][28] /* ty=Tensor[(1, 756), int16] */, %368)
}

def @func_6909() -> Tensor[(8, 14, 2), int8] {
  @func_1462() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_8105() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %369 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %370 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %371 = %369.0;
  %372 = %370.1;
  (%371, %372)
}

def @func_2582() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %373 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %374 = %373.1;
  %375 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %376 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  (%374, %375, %376)
}

def @main(%var_10215: Tensor[(8, 1, 5), float32], %var_10223: Tensor[(8, 1, 5), float32]) -> (Tensor[(8, 1, 5), float32], Tensor[(8, ?, 5), bool]) {
  %377 = cast(%var_10215, dtype="float32") /* ty=Tensor[(8, 1, 5), float32] */;
  %378 = cast(%var_10223, dtype="bool") /* ty=Tensor[(8, 1, 5), bool] */;
  %379 = shape_of(%var_10215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_10215, dtype="bool") /* ty=Tensor[(8, 1, 5), bool] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %382 = log2(%377) /* ty=Tensor[(8, 1, 5), float32] */;
  %383 = greater_equal(%380, %381) /* ty=Tensor[(8, ?, 5), bool] */;
  (%382, %383)
}

def @func_6021() -> (Tensor[(8, 14, 2), int8],) {
  %384 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
  (%384,)
}

def @func_7919() -> (Tensor[(7, 15), float32],) {
  %385 = @func_7588() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) */;
  %386 = %385.4;
  (%386,)
}

def @func_4311() -> (Tensor[(8, 14, 2), int8],) {
  %387 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  (%387,)
}

def @func_8737() -> (Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
  %388 = @func_7919() /* ty=(Tensor[(7, 15), float32],) */;
  %389 = @func_5760() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %390 = %388.0;
  %391 = %389.0;
  (%390, %391)
}

def @func_10213() -> (Tensor[(5, 9, 7), float64],) {
  %392 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %393 = log10(%392) /* ty=Tensor[(5, 9, 7), float64] */;
  (%393,)
}

def @func_4736(%var_4699: Tensor[(7, 2, 13), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) {
  %394 = @func_4687() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %395 = cast(%var_4699, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %396 = tan(%395) /* ty=Tensor[(7, 2, 13), float32] */;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %398 = log10(%397) /* ty=Tensor[(7, 2, 13), float32] */;
  %399 = cast(%396, dtype="float64") /* ty=Tensor[(7, 2, 13), float64] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="float64") /* ty=Tensor[(7, 2, 13), float64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %403 = %394.0;
  %404 = maximum(%401, %402) /* ty=Tensor[(7, 2, 13), float64] */;
  (%403, %404)
}

def @func_4353() -> Tensor[(8, 14, 2), int8] {
  @func_2450() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_4687() -> (Tensor[(8, 14, 2), int8],) {
  %405 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %406 = %405.0;
  (%406,)
}

def @func_8317(%var_8279: Tensor[(1040), float32], %var_8281: Tensor[(3, 90), int64], %var_8282: Tensor[(52), float64], %var_8292: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) {
  %407 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %408 = @func_7803() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %409 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %410 = cast(%var_8279, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %411 = cast(meta[relay.Constant][30] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %412 = cast(%var_8281, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %413 = cast(%var_8282, dtype="float64") /* ty=Tensor[(52), float64] */;
  %414 = reshape(%410, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), float32] */;
  %415 = reshape(%411, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %416 = reshape(%412, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %417 = reshape(%413, newshape=[52, 1]) /* ty=Tensor[(52, 1), float64] */;
  %418 = @func_5363(%414, %415, %416, %417) /* ty=(Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) */;
  %419 = %409.1;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(315), float64] */;
  %421 = reshape(%420, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %422 = @func_2139(%421) /* ty=(Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) */;
  %423 = cast(%var_8292, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %424 = reshape(%423, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), uint8] */;
  %425 = @func_7156(%424) /* ty=(Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) */;
  %426 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 78), int32] */, dtype="int32") /* ty=Tensor[(5, 78), int32] */;
  %427 = reshape(%426, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
  %428 = @func_5737(%427) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %429 = %407.0;
  %430 = %408.0;
  %431 = %418.3;
  %432 = @func_6931() /* ty=Tensor[(8, 14, 2), int8] */;
  %433 = %422.3;
  %434 = %425.0;
  %435 = %428.0;
  (%429, %430, %419, %431, %var_8279, meta[relay.Constant][30] /* ty=Tensor[(462), float32] */, %var_8281, %var_8282, %432, %433, %434, %var_8292, %435, meta[relay.Constant][31] /* ty=Tensor[(5, 78), int32] */)
}

def @func_1559() -> (Tensor[(8, 14, 2), int8],) {
  %436 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  (%436,)
}

def @func_832(%var_826: Tensor[(15, 6, 11), int32]) -> (Tensor[(15, 6, 11), bool],) {
  %437 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %438 = shape_of(%var_826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_826, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = greater_equal(%439, %440) /* ty=Tensor[(15, 6, 11), bool] */;
  (%441,)
}

def @func_4395() -> Tensor[(8, 14, 2), int8] {
  %442 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %442.0
}

def @func_7837() -> (Tensor[(11, 9, 9), float32],) {
  %443 = @func_5818() /* ty=Tensor[(11, 9, 9), float32] */;
  (%443,)
}

def @func_5363(%var_5327: Tensor[(5, 16, 13), float32], %var_5332: Tensor[(462), float32], %var_5355: Tensor[(270), int64], %var_5356: Tensor[(52, 1), float64]) -> (Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) {
  %444 = cast(%var_5327, dtype="float32") /* ty=Tensor[(5, 16, 13), float32] */;
  %445 = cast(%var_5332, dtype="float32") /* ty=Tensor[(462), float32] */;
  %446 = reshape(%445, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %447 = @func_3184(%446) /* ty=Tensor[(11, 3, 14), float32] */;
  %448 = cast(%var_5332, dtype="int64") /* ty=Tensor[(462), int64] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="int64") /* ty=Tensor[(11, 3, 14), int64] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %452 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %453 = cast(%var_5355, dtype="int64") /* ty=Tensor[(270), int64] */;
  %454 = cast(%var_5356, dtype="float64") /* ty=Tensor[(52, 1), float64] */;
  %455 = cast(meta[relay.Constant][33] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %456 = reshape(%452, newshape=[]) /* ty=int64 */;
  %457 = reshape(%453, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
  %458 = reshape(%454, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %459 = reshape(%455, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %460 = @func_504(%456, %457, %458, %459) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
  %461 = asinh(%444) /* ty=Tensor[(5, 16, 13), float32] */;
  %462 = right_shift(%450, %451) /* ty=Tensor[(11, 3, 14), int64] */;
  %463 = %460.2;
  (%461, %462, %463, -6 /* ty=int64 */, %var_5355, %var_5356, meta[relay.Constant][33] /* ty=Tensor[(40), uint8] */)
}

def @func_4188(%var_4180: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), bool] {
  %464 = cast(%var_4180, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %465 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%466, %467) /* ty=Tensor[(11, 4, 14), bool] */
}

def @func_9318(%var_9286: Tensor[(390), int32]) -> (Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) {
  %468 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
  %469 = cast(meta[relay.Constant][35] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %470 = reshape(%469, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
  %471 = @func_5737(%470) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %472 = cast(%var_9286, dtype="float64") /* ty=Tensor[(390), float64] */;
  %473 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %474 = cast(meta[relay.Constant][35] /* ty=Tensor[(390), int32] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?), float64] */;
  %476 = cast(meta[relay.Constant][35] /* ty=Tensor[(390), int32] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %477 = shape_of(%var_9286, dtype="int32") /* ty=Tensor[(1), int32] */;
  %478 = cast(%var_9286, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %480 = %468.2;
  %481 = %471.2;
  %482 = divide(%474, %475) /* ty=Tensor[(390), float64] */;
  %483 = bitwise_or(%478, %479) /* ty=Tensor[(390), uint8] */;
  (%480, %481, %482, %483)
}

def @func_7156(%var_7141: Tensor[(2, 4, 15), uint8]) -> (Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) {
  %484 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="uint8") /* ty=Tensor[(2, 1, 15), uint8] */;
  %485 = cast(%var_7141, dtype="uint8") /* ty=Tensor[(2, 4, 15), uint8] */;
  %486 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %487 = sqrt(%486) /* ty=Tensor[(2, 1, 15), float32] */;
  %488 = cast(%var_7141, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %489 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %490 = mod(%488, %489) /* ty=Tensor[(2, 4, 15), float32] */;
  %491 = cast(%487, dtype="bool") /* ty=Tensor[(2, 1, 15), bool] */;
  %492 = cast(%490, dtype="bool") /* ty=Tensor[(2, 4, 15), bool] */;
  %493 = bitwise_or(%484, %485) /* ty=Tensor[(2, 4, 15), uint8] */;
  %494 = not_equal(%491, %492) /* ty=Tensor[(2, 4, 15), bool] */;
  (%493, %494)
}

def @func_10036() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %495 = @func_2984() /* ty=Tensor[(8, 14, 2), int8] */;
  %496 = @func_6286() /* ty=Tensor[(8, 14, 2), int8] */;
  (%495, %496)
}

def @func_5760() -> (Tensor[(8, 14, 2), int8],) {
  %497 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %498 = %497.1;
  (%498,)
}

def @func_9693(%var_9679: Tensor[(105), float32]) -> (Tensor[(11, 9, 9), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %499 = @func_7837() /* ty=(Tensor[(11, 9, 9), float32],) */;
  %500 = cast(%var_9679, dtype="float32") /* ty=Tensor[(105), float32] */;
  %501 = reshape(%500, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %502 = @func_789(%501) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %503 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %504 = @func_8172() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %505 = %499.0;
  %506 = %502.0;
  %507 = %503.0;
  %508 = @func_9449() /* ty=Tensor[(8, 14, 2), int8] */;
  %509 = %504.0;
  (%505, %506, %var_9679, %507, %508, %509)
}

def @func_4929() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) {
  %510 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %511 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %512 = %511.0;
  %513 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 14, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %517 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 14, 4), bool] */, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %518 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %519 = %510.1;
  %520 = add(%515, %516) /* ty=Tensor[(3, 14, 4), int8] */;
  %521 = asinh(%517) /* ty=Tensor[(3, 14, 4), float32] */;
  %522 = %518.0;
  (%519, %520, %521, %522)
}

def @func_1111(%var_1087: Tensor[(14, 5, 1), int8], %var_1088: Tensor[(14, 5, 6), int8], %var_1096: Tensor[(40), uint8]) -> (Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) {
  %523 = cast(%var_1087, dtype="int8") /* ty=Tensor[(14, 5, 1), int8] */;
  %524 = cast(%var_1088, dtype="int8") /* ty=Tensor[(14, 5, 6), int8] */;
  %525 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %526 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %527 = reshape(%525, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %528 = reshape(%526, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %529 = @func_31(%527, %528) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %530 = cast(%var_1088, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
  %531 = right_shift(%523, %524) /* ty=Tensor[(14, 5, 6), int8] */;
  %532 = %529.0;
  %533 = atanh(%530) /* ty=Tensor[(14, 5, 6), float32] */;
  (%531, %532, %var_1096, %533)
}

def @func_6191(%var_6170: Tensor[(12, 1, 14), float32]) -> (Tensor[(12, 1, 14), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %534 = cast(%var_6170, dtype="float32") /* ty=Tensor[(12, 1, 14), float32] */;
  %535 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %536 = atanh(%534) /* ty=Tensor[(12, 1, 14), float32] */;
  %537 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %538 = %535.0;
  (%536, %537, %538)
}

def @func_9909(%var_9854: Tensor[(15, 7, 16), float32], %var_9876: Tensor[(182), uint32], %var_9877: Tensor[(1638), uint32]) -> (Tensor[(15, 7, 16), float64], Tensor[(8, 14, 2), float32], Tensor[(52), bool], Tensor[(182), uint32], Tensor[(1638), uint32], Tensor[(52), bool]) {
  %539 = cast(%var_9854, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %540 = atanh(%539) /* ty=Tensor[(15, 7, 16), float32] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %542 = tan(%541) /* ty=Tensor[(15, 7, 16), float32] */;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(15, 7, 16), float64] */;
  %544 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
  %545 = cast(%var_9876, dtype="uint32") /* ty=Tensor[(182), uint32] */;
  %546 = cast(%var_9876, dtype="uint32") /* ty=Tensor[(182), uint32] */;
  %547 = cast(%var_9877, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %548 = cast(meta[relay.Constant][38] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
  %549 = reshape(%545, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %550 = reshape(%546, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %551 = reshape(%547, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), uint32] */;
  %552 = reshape(%548, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %553 = @func_3508(%549, %550, %551, %552) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %554 = log10(%543) /* ty=Tensor[(15, 7, 16), float64] */;
  %555 = %544.0;
  %556 = %553.4;
  (%554, %555, %556, %var_9876, %var_9877, meta[relay.Constant][38] /* ty=Tensor[(52), bool] */)
}

def @func_6106(%var_6103: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) {
  %557 = cast(%var_6103, dtype="int16") /* ty=Tensor[(375), int16] */;
  %558 = reshape(%557, newshape=[5, 75]) /* ty=Tensor[(5, 75), int16] */;
  %559 = @func_5688(%558) /* ty=(Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) */;
  %560 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %561 = %559.5;
  (%560, %561, %var_6103)
}

def @func_9047(%var_9037: Tensor[(315), float64]) -> (Tensor[(13, 8, 15), float64], Tensor[(7, 5, 9), float64], Tensor[(315), float64]) {
  %562 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 15), float64] */;
  %563 = cast(%var_9037, dtype="float64") /* ty=Tensor[(315), float64] */;
  %564 = reshape(%563, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
  %565 = @func_1237(%564) /* ty=(Tensor[(7, 5, 9), float64],) */;
  %566 = atan(%562) /* ty=Tensor[(13, 8, 15), float64] */;
  %567 = %565.0;
  (%566, %567, %var_9037)
}

def @func_2421() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) {
  %568 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %569 = %568.0;
  %570 = cast(%569, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %571 = reshape(%570, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %572 = @func_1720(%571) /* ty=(Tensor[(8, 14, 2), bool],) */;
  %573 = %572.0;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %575 = cast(%569, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %576 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%573, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %579 = cosh(%574) /* ty=Tensor[(8, 14, 2), float32] */;
  %580 = less_equal(%577, %578) /* ty=Tensor[(8, 14, 2), bool] */;
  (%579, %580)
}

def @func_7617() -> (Tensor[(8, 14, 2), float32],) {
  %581 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  (%581,)
}

def @func_6786(%var_6769: Tensor[(420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(7, 10), int8], Tensor[(420), int8], Tensor[(40), uint8], Tensor[(11, 3, 14), float32], Tensor[(462), float32]) {
  %582 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %583 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 10), int8] */, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
  %584 = cast(%var_6769, dtype="int8") /* ty=Tensor[(420), int8] */;
  %585 = cast(meta[relay.Constant][41] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %586 = reshape(%583, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int8] */;
  %587 = reshape(%584, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), int8] */;
  %588 = reshape(%585, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %589 = @func_1111(%586, %587, %588) /* ty=(Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) */;
  %590 = cast(meta[relay.Constant][42] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %591 = reshape(%590, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %592 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
  %593 = %582.0;
  %594 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %595 = @func_6629() /* ty=Tensor[(8, 14, 2), int8] */;
  %596 = %589.2;
  %597 = @func_3184(%591) /* ty=Tensor[(11, 3, 14), float32] */;
  (%592, %593, %594, %595, %596, meta[relay.Constant][40] /* ty=Tensor[(7, 10), int8] */, %var_6769, meta[relay.Constant][41] /* ty=Tensor[(40), uint8] */, %597, meta[relay.Constant][42] /* ty=Tensor[(462), float32] */)
}

def @func_8639() -> Tensor[(8, 14, 2), int8] {
  @func_3097() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9603() -> (Tensor[(8, 14, 2), int8],) {
  %598 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %599 = %598.1;
  (%599,)
}

def @func_6931() -> Tensor[(8, 14, 2), int8] {
  @func_3396() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_3979(%var_3969: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), float64],) {
  %600 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  %601 = cast(%var_3969, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %605 = power(%603, %604) /* ty=Tensor[(8, 14, 2), float64] */;
  (%605,)
}

def @func_5144(%var_5140: Tensor[(8, 15, 7), float32]) -> (Tensor[(8, 15, 7), float32],) {
  %606 = cast(%var_5140, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  %607 = erf(%606) /* ty=Tensor[(8, 15, 7), float32] */;
  (%607,)
}

def @func_2450() -> Tensor[(8, 14, 2), int8] {
  %608 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %608.0
}

def @func_7530() -> (Tensor[(8, 14, 2), int8],) {
  %609 = @func_7225() /* ty=Tensor[(8, 14, 2), int8] */;
  (%609,)
}

def @func_8382(%var_8379: Tensor[(13, 13, 14), float64]) -> (Tensor[(13, 13, 14), float64],) {
  %610 = cast(%var_8379, dtype="float64") /* ty=Tensor[(13, 13, 14), float64] */;
  %611 = log(%610) /* ty=Tensor[(13, 13, 14), float64] */;
  (%611,)
}

def @func_8010(%var_7963: Tensor[(15, 2, 12), uint64], %var_7964: Tensor[(15, 2, 12), uint64], %var_7969: Tensor[(1, 840), float32], %var_8001: Tensor[(52, 1), bool]) -> (Tensor[(15, 2, 12), uint64], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(?, 840), int32], Tensor[(8, 14, 2), int8], Tensor[(1638), uint32], Tensor[(52, 1), bool]) {
  %612 = cast(%var_7964, dtype="uint64") /* ty=Tensor[(15, 2, 12), uint64] */;
  %613 = shape_of(%var_7963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_7963, dtype="uint64") /* ty=Tensor[(15, 2, 12), uint64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %616 = cast(%var_7969, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %617 = reshape(%616, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float32] */;
  %618 = @func_5144(%617) /* ty=(Tensor[(8, 15, 7), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="int32") /* ty=Tensor[(8, 15, 7), int32] */;
  %621 = shape_of(%var_7969, dtype="int32") /* ty=Tensor[(2), int32] */;
  %622 = cast(%var_7969, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %624 = cast(meta[relay.Constant][43] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %625 = cast(%var_8001, dtype="bool") /* ty=Tensor[(52, 1), bool] */;
  %626 = reshape(%624, newshape=[546, 3]) /* ty=Tensor[(546, 3), uint32] */;
  %627 = reshape(%625, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %628 = @func_3751(%626, %627) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
  %629 = subtract(%614, %615) /* ty=Tensor[(15, 2, 12), uint64] */;
  %630 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  %631 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
  %632 = logical_xor(%622, %623) /* ty=Tensor[(?, 840), int32] */;
  %633 = %628.2;
  (%629, %630, %631, %632, %633, meta[relay.Constant][43] /* ty=Tensor[(1638), uint32] */, %var_8001)
}

def @func_2022(%var_1906: uint64, %var_1907: Tensor[(13, 5, 2), uint64], %var_1953: Tensor[(2, 2, 13), float32], %var_1979: Tensor[(40), uint8]) -> (Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) {
  %634 = cast(%var_1906, dtype="bool") /* ty=bool */;
  %635 = cast(%var_1907, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %636 = cast(meta[relay.Constant][44] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %637 = cast(meta[relay.Constant][44] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %638 = reshape(%636, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %639 = reshape(%637, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %640 = @func_97(%638, %639) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
  %641 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %642 = %640.1;
  %643 = cast(%642, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %644 = reshape(%641, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %645 = reshape(%643, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %646 = @func_1653(%644, %645) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %647 = cast(meta[relay.Constant][44] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %648 = cast(meta[relay.Constant][44] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %649 = reshape(%647, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %650 = reshape(%648, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %651 = @func_97(%649, %650) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
  %652 = %651.1;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %654 = asin(%653) /* ty=Tensor[(2, 2, 13), float32] */;
  %655 = cast(%var_1953, dtype="uint16") /* ty=Tensor[(2, 2, 13), uint16] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="uint16") /* ty=Tensor[(2, 2, 13), uint16] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %659 = add(%657, %658) /* ty=Tensor[(2, 2, 13), uint16] */;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(2, 2, 13), float64] */;
  %661 = log2(%660) /* ty=Tensor[(2, 2, 13), float64] */;
  %662 = cast(%661, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %663 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %664 = %646.5;
  %665 = cast(%664, dtype="bool") /* ty=Tensor[(52), bool] */;
  %666 = reshape(%663, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %667 = reshape(%665, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %668 = @func_1653(%666, %667) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %669 = greater(%634, %635) /* ty=Tensor[(13, 5, 2), bool] */;
  %670 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %671 = acos(%662) /* ty=Tensor[(2, 2, 13), float32] */;
  %672 = %668.2;
  (%669, meta[relay.Constant][44] /* ty=Tensor[(52), float64] */, %642, %664, %var_1979, %670, %671, %672)
}

def @func_3568() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %673 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %674 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
  %675 = @func_2984() /* ty=Tensor[(8, 14, 2), int8] */;
  (%673, %674, %675)
}

def @func_1653(%var_1609: Tensor[(40), uint8], %var_1610: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) {
  %676 = cast(meta[relay.Constant][45] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %677 = cast(%var_1609, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %678 = cast(%var_1610, dtype="bool") /* ty=Tensor[(52), bool] */;
  %679 = reshape(%676, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %680 = reshape(%677, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %681 = reshape(%678, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %682 = @func_1535(%679, %680, %681) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %683 = cast(meta[relay.Constant][45] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %684 = cast(%var_1609, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %685 = cast(%var_1610, dtype="bool") /* ty=Tensor[(52), bool] */;
  %686 = reshape(%683, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %687 = reshape(%684, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %688 = reshape(%685, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %689 = @func_1535(%686, %687, %688) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %690 = cast(meta[relay.Constant][46] /* ty=Tensor[(52), bool] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %691 = shape_of(%var_1610, dtype="int32") /* ty=Tensor[(1), int32] */;
  %692 = cast(%var_1610, dtype="float64") /* ty=Tensor[(52), float64] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?), float64] */;
  %694 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %695 = %682.0;
  %696 = %689.4;
  %697 = divide(%692, %693) /* ty=Tensor[(52), float64] */;
  (%694, %695, meta[relay.Constant][45] /* ty=Tensor[(270), int64] */, %var_1609, %696, %697)
}

def @func_2173() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_2464() -> Tensor[(8, 14, 2), int8] {
  %698 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %698.0
}

def @func_5570() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) {
  %699 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %700 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
  %701 = %699.1;
  %702 = %700.0;
  (%701, %702)
}

def @func_10072() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %703 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %704 = @func_8639() /* ty=Tensor[(8, 14, 2), int8] */;
  %705 = %703.0;
  (%704, %705)
}

def @func_8907() -> (Tensor[(8, 14, 2), int8],) {
  %706 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %707 = %706.0;
  (%707,)
}

def @func_6584(%var_6544: Tensor[(11, 3, 14), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(462), float32], Tensor[(11, 3, 14), uint64], Tensor[(11, 3, 14), float32]) {
  %708 = cast(meta[relay.Constant][47] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %709 = reshape(%708, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %710 = @func_3184(%709) /* ty=Tensor[(11, 3, 14), float32] */;
  %711 = cast(%var_6544, dtype="uint64") /* ty=Tensor[(11, 3, 14), uint64] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="uint64") /* ty=Tensor[(11, 3, 14), uint64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %715 = cast(%var_6544, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %716 = acosh(%715) /* ty=Tensor[(11, 3, 14), float32] */;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %718 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
  %719 = bitwise_or(%713, %714) /* ty=Tensor[(11, 3, 14), uint64] */;
  %720 = log(%717) /* ty=Tensor[(11, 3, 14), float32] */;
  (%718, meta[relay.Constant][47] /* ty=Tensor[(462), float32] */, %719, %720)
}

def @func_8512(%var_8489: Tensor[(1040, 1), float32], %var_8490: Tensor[(3, 90), int64], %var_8492: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) {
  %721 = @func_4537() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %722 = cast(%var_8489, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %723 = cast(%var_8490, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %725 = cast(%var_8492, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %726 = reshape(%722, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %727 = reshape(%723, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %728 = reshape(%724, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %729 = reshape(%725, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %730 = @func_8317(%726, %727, %728, %729) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) */;
  %731 = @func_4311() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %732 = %721.0;
  %733 = %730.9;
  %734 = %731.0;
  (%732, %733, %var_8489, %var_8490, meta[relay.Constant][48] /* ty=Tensor[(52), float64] */, %var_8492, %734)
}

def @func_8690() -> (Tensor[(8, 14, 2), int8],) {
  %735 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %736 = %735.1;
  (%736,)
}

def @func_1237(%var_1230: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
  %737 = cast(%var_1230, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
  %738 = cos(%737) /* ty=Tensor[(7, 5, 9), float64] */;
  (%738,)
}

def @func_2943() -> Tensor[(8, 14, 2), int8] {
  %739 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %739.0
}

def @func_31(%var_24: Tensor[(5, 4, 2), uint8], %var_25: Tensor[(5, 4, 2), uint8]) -> (Tensor[(5, 4, 2), bool],) {
  %740 = cast(%var_25, dtype="bool") /* ty=Tensor[(5, 4, 2), bool] */;
  %741 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_24, dtype="bool") /* ty=Tensor[(5, 4, 2), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %744 = greater_equal(%742, %743) /* ty=Tensor[(5, 4, 2), bool] */;
  (%744,)
}

def @func_2139(%var_2108: Tensor[(315), float64]) -> (Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) {
  %745 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %746 = %745.0;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %748 = cast(%var_2108, dtype="float64") /* ty=Tensor[(315), float64] */;
  %749 = reshape(%748, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
  %750 = @func_1237(%749) /* ty=(Tensor[(7, 5, 9), float64],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
  %753 = reshape(%752, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
  %754 = @func_1237(%753) /* ty=(Tensor[(7, 5, 9), float64],) */;
  %755 = cos(%747) /* ty=Tensor[(8, 14, 2), float32] */;
  %756 = cast(%755, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %757 = reshape(%756, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %758 = @func_1720(%757) /* ty=(Tensor[(8, 14, 2), bool],) */;
  %759 = %754.0;
  %760 = %758.0;
  (%755, %751, %var_2108, %759, %760)
}

def @func_789(%var_782: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
  %761 = cast(%var_782, dtype="float32") /* ty=Tensor[(3, 7, 5), float32] */;
  %762 = cos(%761) /* ty=Tensor[(3, 7, 5), float32] */;
  (%762,)
}

def @func_8233(%var_8229: Tensor[(26, 7), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(9, 12, 13), float32], Tensor[(8, 14, 2), int8], Tensor[(26, 7), float32]) {
  %763 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %764 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %765 = cos(%764) /* ty=Tensor[(9, 12, 13), float64] */;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %767 = cast(%var_8229, dtype="float32") /* ty=Tensor[(26, 7), float32] */;
  %768 = reshape(%767, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
  %769 = @func_4736(%768) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) */;
  %770 = %763.1;
  %771 = asin(%766) /* ty=Tensor[(9, 12, 13), float32] */;
  %772 = %769.0;
  (%770, %771, %772, %var_8229)
}

def @func_9973() -> (Tensor[(8, 14, 2), int8],) {
  %773 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
  %774 = %773.2;
  (%774,)
}

def @func_2799() -> (Tensor[(8, 14, 2), int8],) {
  %775 = @func_2450() /* ty=Tensor[(8, 14, 2), int8] */;
  (%775,)
}

def @func_4590() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) {
  %776 = cast(meta[relay.Constant][50] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %777 = reshape(%776, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %778 = @func_789(%777) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %779 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
  %780 = %778.0;
  (%779, %780, meta[relay.Constant][50] /* ty=Tensor[(105), float32] */)
}

def @func_6286() -> Tensor[(8, 14, 2), int8] {
  %781 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %781.1
}

def @func_4839(%var_4822: Tensor[(15, 5, 5), int16], %var_4837: Tensor[(224), int8]) -> (Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) {
  %782 = cast(%var_4822, dtype="int16") /* ty=Tensor[(15, 5, 5), int16] */;
  %783 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(15, 5, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 5, 5), int16] */, dtype="int16") /* ty=Tensor[(15, 5, 5), int16] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %786 = cast(%var_4837, dtype="int8") /* ty=Tensor[(224), int8] */;
  %787 = reshape(%786, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %788 = @func_3979(%787) /* ty=(Tensor[(8, 14, 2), float64],) */;
  %789 = minimum(%784, %785) /* ty=Tensor[(15, 5, 5), int16] */;
  %790 = %788.0;
  (%789, %790, %var_4837)
}

def @func_6943(%var_6939: int64, %var_6940: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], int64, Tensor[(40), uint8]) {
  %791 = cast(%var_6939, dtype="int64") /* ty=int64 */;
  %792 = cast(%var_6940, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %793 = reshape(%791, newshape=[]) /* ty=int64 */;
  %794 = reshape(%792, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %795 = @func_3040(%793, %794) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %796 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
  %797 = %795.0;
  (%796, %797, %var_6939, %var_6940)
}

def @func_4557() -> (Tensor[(8, 14, 2), int8],) {
  %798 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %799 = %798.1;
  (%799,)
}

def @func_6827(%var_6815: Tensor[(182), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64], Tensor[(182), float32]) {
  %800 = cast(%var_6815, dtype="float32") /* ty=Tensor[(182), float32] */;
  %801 = reshape(%800, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
  %802 = @func_4736(%801) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) */;
  %803 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
  %804 = %802.1;
  (%803, %804, %var_6815)
}

def @func_10092() -> (Tensor[(11, 9, 9), float32], Tensor[(3, 14, 4), float32]) {
  %805 = @func_7837() /* ty=(Tensor[(11, 9, 9), float32],) */;
  %806 = @func_7343() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %807 = %805.0;
  %808 = %806.0;
  (%807, %808)
}

def @func_3508(%var_3477: Tensor[(13, 14, 1), uint32], %var_3478: Tensor[(13, 14, 1), uint32], %var_3482: Tensor[(13, 14, 9), uint32], %var_3490: Tensor[(52), bool]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %809 = cast(%var_3478, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %810 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%var_3477, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %813 = cast(%var_3477, dtype="uint8") /* ty=Tensor[(13, 14, 1), uint8] */;
  %814 = cast(%var_3482, dtype="uint8") /* ty=Tensor[(13, 14, 9), uint8] */;
  %815 = cast(meta[relay.Constant][52] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %816 = cast(%var_3490, dtype="bool") /* ty=Tensor[(52), bool] */;
  %817 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %818 = cast(meta[relay.Constant][54] /* ty=Tensor[(130), uint64] */, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %819 = reshape(%815, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %820 = reshape(%816, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %821 = reshape(%817, newshape=[]) /* ty=uint64 */;
  %822 = reshape(%818, newshape=[130]) /* ty=Tensor[(130), uint64] */;
  %823 = @func_2779(%819, %820, %821, %822) /* ty=(Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) */;
  %824 = cast(meta[relay.Constant][55] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
  %825 = cast(meta[relay.Constant][55] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
  %826 = reshape(%824, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %827 = reshape(%825, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %828 = @func_1026(%826, %827) /* ty=(Tensor[(15, 11, 14), int8],) */;
  %829 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
  %830 = cast(meta[relay.Constant][52] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %831 = reshape(%829, newshape=[]) /* ty=int64 */;
  %832 = reshape(%830, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %833 = @func_3040(%831, %832) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %834 = bitwise_and(%811, %812) /* ty=Tensor[(13, 14, ?), uint32] */;
  %835 = left_shift(%813, %814) /* ty=Tensor[(13, 14, 9), uint8] */;
  %836 = %823.4;
  %837 = %828.0;
  %838 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %839 = %833.0;
  (%834, %835, %836, meta[relay.Constant][52] /* ty=Tensor[(40), uint8] */, %var_3490, meta[relay.Constant][53] /* ty=uint64 */, meta[relay.Constant][54] /* ty=Tensor[(130), uint64] */, %837, meta[relay.Constant][55] /* ty=Tensor[(2310), int8] */, %838, %839)
}

def @func_3097() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_7423(%var_7355: Tensor[(375), int16], %var_7413: Tensor[(2160), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16], Tensor[(3, 14, 4), bool], Tensor[(14, 9, 6), int16], Tensor[(2160), float32], Tensor[(8, 14, 2), int8]) {
  %840 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %841 = cast(%var_7355, dtype="int16") /* ty=Tensor[(375), int16] */;
  %842 = reshape(%841, newshape=[375]) /* ty=Tensor[(375), int16] */;
  %843 = @func_6106(%842) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) */;
  %844 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %845 = cast(%var_7413, dtype="float32") /* ty=Tensor[(2160), float32] */;
  %846 = reshape(%845, newshape=[9, 15, 16]) /* ty=Tensor[(9, 15, 16), float32] */;
  %847 = @func_7050(%846) /* ty=(Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) */;
  %848 = %840.0;
  %849 = %843.1;
  %850 = %844.0;
  %851 = %847.1;
  %852 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  (%848, %849, %var_7355, %850, %851, %var_7413, %852)
}

def @func_4537() -> (Tensor[(8, 14, 2), int8],) {
  %853 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  (%853,)
}

def @func_4372(%var_4357: Tensor[(8, 14, 2), int8]) -> Tensor[(8, 14, 2), float32] {
  %854 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %855 = cast(%var_4357, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %856 = shape_of(%854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%854, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%857, %858) /* ty=Tensor[(8, 14, 2), float32] */
}

def @func_4811(%var_4781: Tensor[(1, 40), uint8], %var_4782: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], Tensor[(270), int64], Tensor[(52), bool], Tensor[(1, 40), float64]) {
  %859 = @func_4537() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %860 = cast(meta[relay.Constant][56] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %861 = cast(%var_4781, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %862 = cast(%var_4782, dtype="bool") /* ty=Tensor[(52), bool] */;
  %863 = reshape(%860, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %864 = reshape(%861, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %865 = reshape(%862, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %866 = @func_1535(%863, %864, %865) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %867 = cast(%var_4781, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %868 = %859.0;
  %869 = %866.2;
  %870 = tan(%867) /* ty=Tensor[(1, 40), float64] */;
  (%868, %869, meta[relay.Constant][56] /* ty=Tensor[(270), int64] */, %var_4782, %870)
}

def @func_3122() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %871 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  %872 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  (%871, %872)
}

def @func_5110() -> Tensor[(8, 14, 2), int8] {
  %873 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %873.0
}

def @func_4471() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %874 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %875 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
  %876 = %874.2;
  (%875, %876)
}

def @func_8549(%var_8536: Tensor[(15, 11, 2), uint16], %var_8537: Tensor[(15, 11, 2), uint16]) -> (Tensor[(15, 11, 2), uint16], Tensor[(105, 168), uint8], Tensor[(105), float32]) {
  %877 = cast(%var_8537, dtype="uint16") /* ty=Tensor[(15, 11, 2), uint16] */;
  %878 = shape_of(%var_8536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%var_8536, dtype="uint16") /* ty=Tensor[(15, 11, 2), uint16] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %881 = cast(meta[relay.Constant][57] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %882 = cast(meta[relay.Constant][57] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %883 = reshape(%881, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %884 = reshape(%882, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %885 = @func_4074(%883, %884) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) */;
  %886 = right_shift(%879, %880) /* ty=Tensor[(15, 11, 2), uint16] */;
  %887 = %885.2;
  (%886, %887, meta[relay.Constant][57] /* ty=Tensor[(105), float32] */)
}

def @func_5818() -> Tensor[(11, 9, 9), float32] {
  %888 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 9, 9), float32] */;
  asinh(%888) /* ty=Tensor[(11, 9, 9), float32] */
}

def @func_1462() -> Tensor[(8, 14, 2), int8] {
  %889 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %890 = asinh(%889) /* ty=Tensor[(8, 14, 2), float64] */;
  %891 = cast(%890, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %892 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(8, 14, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 14, 2), float64] */, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%893, %894) /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9449() -> Tensor[(8, 14, 2), int8] {
  %895 = @func_6021() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %895.0
}

def @func_5405() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %896 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  %897 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  (%896, %897)
}

def @func_6699(%var_6683: Tensor[(2310, 1), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), int8], Tensor[(15, 11, 14), int8], Tensor[(2310, 1), int8]) {
  %898 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %899 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %900 = cast(%var_6683, dtype="int8") /* ty=Tensor[(2310, 1), int8] */;
  %901 = cast(%var_6683, dtype="int8") /* ty=Tensor[(2310, 1), int8] */;
  %902 = reshape(%900, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %903 = reshape(%901, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %904 = @func_1026(%902, %903) /* ty=(Tensor[(15, 11, 14), int8],) */;
  %905 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  %906 = %898.0;
  %907 = %899.0;
  %908 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %909 = %904.0;
  (%905, %906, %907, %908, %909, %var_6683)
}

def @func_9936() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %910 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %911 = @func_8105() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %912 = %910.2;
  %913 = %911.1;
  (%912, %913)
}

def @func_2537() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %914 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %915 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  %916 = %914.0;
  (%915, %916)
}

def @func_3274(%var_3260: Tensor[(168), uint16], %var_3265: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) {
  %917 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %918 = cast(%var_3260, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %919 = reshape(%918, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), uint16] */;
  %920 = @func_635(%919) /* ty=(Tensor[(3, 14, 4), bool],) */;
  %921 = cast(%var_3265, dtype="float32") /* ty=Tensor[(105), float32] */;
  %922 = reshape(%921, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %923 = @func_789(%922) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %924 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %925 = %924.0;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %927 = asin(%926) /* ty=Tensor[(8, 14, 2), float64] */;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %929 = sigmoid(%928) /* ty=Tensor[(8, 14, 2), float32] */;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %931 = %917.0;
  %932 = %920.0;
  %933 = %923.0;
  %934 = acos(%930) /* ty=Tensor[(8, 14, 2), float32] */;
  (%931, %932, %var_3260, %933, %var_3265, %934)
}

def @func_2164() -> Tensor[(8, 14, 2), int8] {
  %935 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %935.0
}

def @func_2336() -> (Tensor[(8, 14, 2), int8],) {
  %936 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  (%936,)
}

def @func_9518(%var_9481: Tensor[(616), uint16]) -> (Tensor[(8, 14, 2), float32], Tensor[(11, 4, 14), bool], Tensor[(616), uint16], Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16]) {
  %937 = @func_3840() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %938 = cast(%var_9481, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %939 = reshape(%938, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), uint16] */;
  %940 = @func_5760() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %941 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %942 = %937.0;
  %943 = @func_4188(%939) /* ty=Tensor[(11, 4, 14), bool] */;
  %944 = %940.0;
  %945 = %941.2;
  (%942, %943, %var_9481, %944, %945)
}

def @func_6859() -> (Tensor[(8, 14, 2), int8],) {
  %946 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %947 = %946.0;
  (%947,)
}

def @func_9382(%var_9341: Tensor[(105), float32], %var_9351: Tensor[(270, 1), int64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(3, 56), uint16], Tensor[(105), float32], Tensor[(1040), float32], Tensor[(270, 1), int64], Tensor[(390), uint8], Tensor[(390, 1), int32], Tensor[(60, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(1040, 1), float32]) {
  %948 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %949 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 56), uint16] */, dtype="uint16") /* ty=Tensor[(3, 56), uint16] */;
  %950 = cast(%var_9341, dtype="float32") /* ty=Tensor[(105), float32] */;
  %951 = reshape(%949, newshape=[168]) /* ty=Tensor[(168), uint16] */;
  %952 = reshape(%950, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %953 = @func_3274(%951, %952) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
  %954 = cast(meta[relay.Constant][62] /* ty=Tensor[(390, 1), int32] */, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %955 = reshape(%954, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %956 = @func_9318(%955) /* ty=(Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) */;
  %957 = cast(meta[relay.Constant][63] /* ty=Tensor[(60, 2), uint8] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %958 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
  %959 = cast(meta[relay.Constant][61] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %960 = cast(%var_9351, dtype="int64") /* ty=Tensor[(270, 1), int64] */;
  %961 = cast(meta[relay.Constant][63] /* ty=Tensor[(60, 2), uint8] */, dtype="uint8") /* ty=Tensor[(60, 2), uint8] */;
  %962 = reshape(%959, newshape=[1040, 1]) /* ty=Tensor[(1040, 1), float32] */;
  %963 = reshape(%960, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %964 = reshape(%961, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %965 = @func_8512(%962, %963, %964) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) */;
  %966 = %965.2;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %968 = %948.0;
  %969 = %953.5;
  %970 = %956.3;
  %971 = sinh(%957) /* ty=Tensor[(60, 2), float32] */;
  %972 = %958.0;
  %973 = atanh(%967) /* ty=Tensor[(1040, 1), float32] */;
  (%968, %969, meta[relay.Constant][60] /* ty=Tensor[(3, 56), uint16] */, %var_9341, meta[relay.Constant][61] /* ty=Tensor[(1040), float32] */, %var_9351, %970, meta[relay.Constant][62] /* ty=Tensor[(390, 1), int32] */, %971, %972, %973)
}

def @func_4970() -> Tensor[(3, 14, 4), bool] {
  %974 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %974.1
}

def @func_5870() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
  %975 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 15), float32] */;
  %976 = reshape(%975, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %977 = @func_789(%976) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %978 = @func_5110() /* ty=Tensor[(8, 14, 2), int8] */;
  %979 = %977.0;
  %980 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  (%978, %979, meta[relay.Constant][64] /* ty=Tensor[(7, 15), float32] */, %980)
}

def @func_5495() -> (Tensor[(8, 14, 2), int8],) {
  %981 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %982 = %981.2;
  (%982,)
}

def @func_3040(%var_3015: int64, %var_3018: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %983 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %984 = cast(meta[relay.Constant][65] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %985 = reshape(%984, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %986 = @func_789(%985) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %987 = cast(%var_3015, dtype="int64") /* ty=int64 */;
  %988 = cast(meta[relay.Constant][66] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %989 = cast(meta[relay.Constant][67] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %990 = cast(%var_3018, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %991 = reshape(%987, newshape=[]) /* ty=int64 */;
  %992 = reshape(%988, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
  %993 = reshape(%989, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %994 = reshape(%990, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %995 = @func_504(%991, %992, %993, %994) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
  %996 = @func_2421() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) */;
  %997 = %983.0;
  %998 = %986.0;
  %999 = %995.5;
  %1000 = %996.0;
  %1001 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  (%997, %998, meta[relay.Constant][65] /* ty=Tensor[(105), float32] */, %999, %var_3015, meta[relay.Constant][66] /* ty=Tensor[(270), int64] */, meta[relay.Constant][67] /* ty=Tensor[(52), float64] */, %var_3018, %1000, %1001)
}

def @func_6129() -> Tensor[(8, 14, 2), float32] {
  %1002 = @func_5570() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) */;
  %1002.1
}

def @func_3396() -> Tensor[(8, 14, 2), int8] {
  @func_2887() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_2525() -> (Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) {
  %1003 = cast(meta[relay.Constant][68] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %1004 = reshape(%1003, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
  %1005 = @func_1237(%1004) /* ty=(Tensor[(7, 5, 9), float64],) */;
  %1006 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %1008 = sqrt(%1007) /* ty=Tensor[(8, 14, 2), float64] */;
  %1009 = cast(meta[relay.Constant][69] /* ty=Tensor[(8, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1008, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1013 = %1005.0;
  %1014 = divide(%1011, %1012) /* ty=Tensor[(8, 14, 2), float64] */;
  (%1013, meta[relay.Constant][68] /* ty=Tensor[(315), float64] */, %1014)
}

def @func_6968() -> (Tensor[(8, 14, 2), int8],) {
  %1015 = @func_4687() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1016 = %1015.0;
  (%1016,)
}

def @func_97(%var_79: Tensor[(2, 2, 13), float64], %var_80: Tensor[(2, 2, 13), float64]) -> (Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) {
  %1017 = cast(%var_80, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %1018 = shape_of(%var_79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%var_79, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = cast(%var_79, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %1022 = shape_of(%var_80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%var_80, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1025 = less_equal(%1019, %1020) /* ty=Tensor[(2, 2, 13), bool] */;
  %1026 = floor_divide(%1023, %1024) /* ty=Tensor[(2, 2, 13), float32] */;
  (%1025, %1026)
}

def @func_8930() -> (Tensor[(8, 14, 2), int8],) {
  %1027 = @func_8639() /* ty=Tensor[(8, 14, 2), int8] */;
  (%1027,)
}

def @func_9169(%var_9160: Tensor[(6, 4, 12), uint16]) -> (Tensor[(6, 4, 12), bool],) {
  %1028 = cast(meta[relay.Constant][70] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %1029 = cast(%var_9160, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %1030 = less(%1028, %1029) /* ty=Tensor[(6, 4, 12), bool] */;
  (%1030,)
}

def @func_3840() -> (Tensor[(8, 14, 2), float32],) {
  %1031 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %1032 = %1031.0;
  (%1032,)
}

def @func_4453() -> (Tensor[(8, 14, 2), int8],) {
  %1033 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_8985() -> Tensor[(8, 14, 2), int8] {
  @func_6909() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5474() -> (Tensor[(8, 14, 2), int8],) {
  %1035 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
  (%1035,)
}

def @func_10165() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %1036 = @func_9737() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %1037 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %1038 = %1036.1;
  %1039 = @func_6286() /* ty=Tensor[(8, 14, 2), int8] */;
  %1040 = %1037.0;
  (%1038, %1039, %1040)
}

def @func_1535(%var_1522: Tensor[(270), int64], %var_1524: Tensor[(40), uint8], %var_1527: Tensor[(2, 2, 13), bool]) -> (Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) {
  %1041 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %1042 = cast(meta[relay.Constant][71] /* ty=Tensor[(8, 14, 2), int8] */, dtype="int16") /* ty=Tensor[(8, 14, 2), int16] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1041, dtype="int16") /* ty=Tensor[(8, 14, 2), int16] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1046 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1047 = cast(%var_1522, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1048 = cast(meta[relay.Constant][72] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %1049 = cast(%var_1524, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1050 = reshape(%1046, newshape=[]) /* ty=int64 */;
  %1051 = reshape(%1047, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
  %1052 = reshape(%1048, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %1053 = reshape(%1049, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %1054 = @func_504(%1050, %1051, %1052, %1053) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
  %1055 = %1054.2;
  %1056 = cast(%var_1527, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%1055, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1060 = bitwise_and(%1044, %1045) /* ty=Tensor[(8, 14, 2), int16] */;
  %1061 = logical_and(%1058, %1059) /* ty=Tensor[(2, 2, 13), bool] */;
  (%1060, 9 /* ty=int64 */, %var_1522, meta[relay.Constant][72] /* ty=Tensor[(52), float64] */, %var_1524, %1061)
}

def @func_7803() -> (Tensor[(8, 14, 2), int8],) {
  %1062 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_8343() -> (Tensor[(8, 14, 2), int8],) {
  %1064 = @func_8172() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1065 = %1064.0;
  (%1065,)
}

def @func_7488() -> (Tensor[(3, 14, 4), bool], Tensor[(3, 14, 4), float32]) {
  %1066 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %1067 = @func_7343() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %1068 = %1066.0;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_5688(%var_5680: Tensor[(5, 75), int16]) -> (Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) {
  %1070 = @func_4929() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) */;
  %1071 = cast(%var_5680, dtype="int16") /* ty=Tensor[(5, 75), int16] */;
  %1072 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  %1073 = cast(%1072, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %1074 = reshape(%1071, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), int16] */;
  %1075 = reshape(%1073, newshape=[224]) /* ty=Tensor[(224), int8] */;
  %1076 = @func_4839(%1074, %1075) /* ty=(Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) */;
  %1077 = %1070.1;
  %1078 = @func_4970() /* ty=Tensor[(3, 14, 4), bool] */;
  %1079 = %1076.1;
  %1080 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  (%1077, %1078, %1072, %1079, %var_5680, %1080)
}

def @func_3661() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %1081 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1082 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1083 = %1081.0;
  %1084 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
  %1085 = %1082.0;
  (%1083, %1084, %1085)
}

def @func_8859(%var_8823: Tensor[(390, 1), int32], %var_8850: Tensor[(3, 14, 4), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(390, 1), int32], Tensor[(8, 15, 7), float32], Tensor[(3, 14, 4), uint64]) {
  %1086 = cast(%var_8823, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %1087 = reshape(%1086, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %1088 = @func_5966(%1087) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) */;
  %1089 = @func_6245() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) */;
  %1090 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %1091 = %1090.0;
  %1092 = cast(%var_8850, dtype="uint64") /* ty=Tensor[(3, 14, 4), uint64] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1091, dtype="uint64") /* ty=Tensor[(3, 14, 4), uint64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1096 = %1088.1;
  %1097 = %1089.1;
  %1098 = minimum(%1094, %1095) /* ty=Tensor[(3, 14, 4), uint64] */;
  (%1096, %var_8823, %1097, %1098)
}

def @func_9737() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %1099 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %1100 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %1101 = %1099.0;
  (%1100, %1101)
}

def @func_7588() -> (Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) {
  %1102 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %1103 = @func_6968() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1104 = @func_5870() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */;
  %1105 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %1106 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %1107 = %1102.2;
  %1108 = %1103.0;
  %1109 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  %1110 = %1104.2;
  %1111 = %1105.0;
  %1112 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
  (%1106, %1107, %1108, %1109, %1110, %1111, %1112)
}

def @func_8172() -> (Tensor[(8, 14, 2), int8],) {
  %1113 = @func_7530() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_6441(%var_6434: Tensor[(8, 7, 9), uint64], %var_6435: Tensor[(8, 7, 9), uint64]) -> Tensor[(8, 7, 9), bool] {
  %1115 = cast(%var_6435, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %1116 = shape_of(%var_6434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%var_6434, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1117, %1118) /* ty=Tensor[(8, 7, 9), bool] */
}

def @func_9621(%var_9610: Tensor[(2, 14, 14), float64]) -> (Tensor[(2, 14, 14), float64],) {
  %1119 = cast(%var_9610, dtype="float64") /* ty=Tensor[(2, 14, 14), float64] */;
  %1120 = log(%1119) /* ty=Tensor[(2, 14, 14), float64] */;
  (%1120,)
}

def @func_7956() -> (Tensor[(8, 14, 2), int8],) {
  %1121 = @func_7641() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1122 = %1121.0;
  (%1122,)
}

def @func_2682() -> Tensor[(8, 14, 2), float32] {
  %1123 = @func_2421() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) */;
  %1123.0
}

def @func_5966(%var_5922: Tensor[(390), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) {
  %1124 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1125 = cast(%var_5922, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1126 = reshape(%1125, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
  %1127 = @func_5737(%1126) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %1128 = cast(meta[relay.Constant][73] /* ty=Tensor[(375), int16] */, dtype="int16") /* ty=Tensor[(375), int16] */;
  %1129 = reshape(%1128, newshape=[375]) /* ty=Tensor[(375), int16] */;
  %1130 = @func_5790(%1129) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) */;
  %1131 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %1132 = %1131.0;
  %1133 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 14, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %1134 = shape_of(%1132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%1132, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1137 = %1124.0;
  %1138 = %1127.1;
  %1139 = %1130.1;
  %1140 = multiply(%1135, %1136) /* ty=Tensor[(3, 14, 4), int8] */;
  %1141 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  (%1137, %1138, %var_5922, %1139, meta[relay.Constant][73] /* ty=Tensor[(375), int16] */, %1140, %1141)
}

def @func_9794(%var_9790: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105), float32]) {
  %1142 = cast(%var_9790, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1143 = cast(%var_9790, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1144 = reshape(%1142, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %1145 = reshape(%1143, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %1146 = @func_4074(%1144, %1145) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) */;
  %1147 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %1148 = %1146.1;
  (%1147, %1148, %var_9790)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3662() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %5 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %0 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %1 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %2 = %0.0;
    %3 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
    %4 = %1.0;
    (%2, %3, %4)
  };
  %5() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_7159(%var_7157: Tensor[(2, 4, 15), uint8]) -> (Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) {
  @func_7156(%var_7157) /* ty=(Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) */
}

def @func_4077(%var_4075: Tensor[(105, 1), float32], %var_4076: Tensor[(105, 1), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) {
  %21 = fn (%var_4053: Tensor[(105, 1), float32], %var_4068: Tensor[(105, 1), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) {
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
    %7 = cast(%var_4053, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
    %8 = reshape(%6, newshape=[168]) /* ty=Tensor[(168), uint16] */;
    %9 = reshape(%7, newshape=[105]) /* ty=Tensor[(105), float32] */;
    %10 = @func_3274(%8, %9) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
    %11 = cast(%var_4053, dtype="uint8") /* ty=Tensor[(105, 1), uint8] */;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), uint16] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %13 = cast(%var_4068, dtype="int16") /* ty=Tensor[(105, 1), int16] */;
    %14 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(2), int32] */;
    %15 = cast(%var_4053, dtype="int16") /* ty=Tensor[(105, 1), int16] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %17 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
    %18 = %10.1;
    %19 = logical_xor(%11, %12) /* ty=Tensor[(105, 168), uint8] */;
    %20 = bitwise_and(%15, %16) /* ty=Tensor[(105, ?), int16] */;
    (%17, %18, %19, %20)
  };
  %21(%var_4075, %var_4076) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) */
}

def @func_7693() -> (Tensor[(8, 14, 2), float32],) {
  @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */
}

def @func_5969(%var_5967: Tensor[(390), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) {
  @func_5966(%var_5967) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_3569() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %25 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %22 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    %23 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
    %24 = @func_2984() /* ty=Tensor[(8, 14, 2), int8] */;
    (%22, %23, %24)
  };
  %25() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_4396() -> Tensor[(8, 14, 2), int8] {
  %27 = fn () -> Tensor[(8, 14, 2), int8] {
    %26 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %26.0
  };
  %27() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_7488() -> (Tensor[(3, 14, 4), bool], Tensor[(3, 14, 4), float32]) {
  %28 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %29 = @func_7343() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %30 = %28.0;
  %31 = %29.0;
  (%30, %31)
}

def @func_2801() -> (Tensor[(8, 14, 2), int8],) {
  @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6191(%var_6170: Tensor[(12, 1, 14), float32]) -> (Tensor[(12, 1, 14), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %32 = cast(%var_6170, dtype="float32") /* ty=Tensor[(12, 1, 14), float32] */;
  %33 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %34 = atanh(%32) /* ty=Tensor[(12, 1, 14), float32] */;
  %35 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %36 = %33.0;
  (%34, %35, %36)
}

def @func_4689() -> (Tensor[(8, 14, 2), int8],) {
  @func_4687() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6129() -> Tensor[(8, 14, 2), float32] {
  %37 = @func_5570() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) */;
  %37.1
}

def @func_6629() -> Tensor[(8, 14, 2), int8] {
  %38 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
  %38.0
}

def @func_6441(%var_6434: Tensor[(8, 7, 9), uint64], %var_6435: Tensor[(8, 7, 9), uint64]) -> Tensor[(8, 7, 9), bool] {
  %39 = cast(%var_6435, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %40 = shape_of(%var_6434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%var_6434, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%41, %42) /* ty=Tensor[(8, 7, 9), bool] */
}

def @func_2422() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) {
  %56 = fn () -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) {
    %43 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %44 = %43.0;
    %45 = cast(%44, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %46 = reshape(%45, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %47 = @func_1720(%46) /* ty=(Tensor[(8, 14, 2), bool],) */;
    %48 = %47.0;
    %49 = cast(%48, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
    %50 = cast(%44, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %51 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
    %52 = cast(%48, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %54 = cosh(%49) /* ty=Tensor[(8, 14, 2), float32] */;
    %55 = less_equal(%52, %53) /* ty=Tensor[(8, 14, 2), bool] */;
    (%54, %55)
  };
  %56() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) */
}

def @func_3396() -> Tensor[(8, 14, 2), int8] {
  @func_2887() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9171(%var_9170: Tensor[(6, 4, 12), uint16]) -> (Tensor[(6, 4, 12), bool],) {
  %60 = fn (%var_9160: Tensor[(6, 4, 12), uint16]) -> (Tensor[(6, 4, 12), bool],) {
    %57 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %58 = cast(%var_9160, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
    %59 = less(%57, %58) /* ty=Tensor[(6, 4, 12), bool] */;
    (%59,)
  };
  %60(%var_9170) /* ty=(Tensor[(6, 4, 12), bool],) */
}

def @func_7343() -> (Tensor[(3, 14, 4), float32],) {
  %61 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %62 = %61.1;
  %63 = cast(%62, dtype="float64") /* ty=Tensor[(3, 14, 4), float64] */;
  %64 = log2(%63) /* ty=Tensor[(3, 14, 4), float64] */;
  %65 = cast(%64, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %66 = tan(%65) /* ty=Tensor[(3, 14, 4), float32] */;
  (%66,)
}

def @func_6168(%var_6166: Tensor[(14, 9, 6), int16]) -> (Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) {
  @func_6165(%var_6166) /* ty=(Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_9521(%var_9519: Tensor[(616), uint16]) -> (Tensor[(8, 14, 2), float32], Tensor[(11, 4, 14), bool], Tensor[(616), uint16], Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16]) {
  @func_9518(%var_9519) /* ty=(Tensor[(8, 14, 2), float32], Tensor[(11, 4, 14), bool], Tensor[(616), uint16], Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16]) */
}

def @func_5246(%var_5243: Tensor[(40), uint8], %var_5244: uint64, %var_5245: Tensor[(130), uint64]) -> (Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(52), float64], uint64, Tensor[(130), uint64], Tensor[(52), float32], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8]) {
  @func_5241(%var_5243, %var_5244, %var_5245) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(52), float64], uint64, Tensor[(130), uint64], Tensor[(52), float32], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8]) */
}

def @func_6829(%var_6828: Tensor[(182), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64], Tensor[(182), float32]) {
  %72 = fn (%var_6815: Tensor[(182), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64], Tensor[(182), float32]) {
    %67 = cast(%var_6815, dtype="float32") /* ty=Tensor[(182), float32] */;
    %68 = reshape(%67, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
    %69 = @func_4736(%68) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) */;
    %70 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
    %71 = %69.1;
    (%70, %71, %var_6815)
  };
  %72(%var_6828) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64], Tensor[(182), float32]) */
}

def @func_2538() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %76 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %73 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %74 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
    %75 = %73.0;
    (%74, %75)
  };
  %76() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_8640() -> Tensor[(8, 14, 2), int8] {
  %77 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_3097() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %77() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5871() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
  %84 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
    %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 15), float32] */;
    %79 = reshape(%78, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
    %80 = @func_789(%79) /* ty=(Tensor[(3, 7, 5), float32],) */;
    %81 = @func_5110() /* ty=Tensor[(8, 14, 2), int8] */;
    %82 = %80.0;
    %83 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
    (%81, %82, meta[relay.Constant][2] /* ty=Tensor[(7, 15), float32] */, %83)
  };
  %84() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_7532() -> (Tensor[(8, 14, 2), int8],) {
  @func_7530() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_8690() -> (Tensor[(8, 14, 2), int8],) {
  %85 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %86 = %85.1;
  (%86,)
}

def @func_3099() -> Tensor[(8, 14, 2), int8] {
  @func_3097() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9695(%var_9694: Tensor[(105), float32]) -> (Tensor[(11, 9, 9), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %98 = fn (%var_9679: Tensor[(105), float32]) -> (Tensor[(11, 9, 9), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %87 = @func_7837() /* ty=(Tensor[(11, 9, 9), float32],) */;
    %88 = cast(%var_9679, dtype="float32") /* ty=Tensor[(105), float32] */;
    %89 = reshape(%88, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
    %90 = @func_789(%89) /* ty=(Tensor[(3, 7, 5), float32],) */;
    %91 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %92 = @func_8172() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %93 = %87.0;
    %94 = %90.0;
    %95 = %91.0;
    %96 = @func_9449() /* ty=Tensor[(8, 14, 2), int8] */;
    %97 = %92.0;
    (%93, %94, %var_9679, %95, %96, %97)
  };
  %98(%var_9694) /* ty=(Tensor[(11, 9, 9), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_5966(%var_5922: Tensor[(390), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) {
  %99 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %100 = cast(%var_5922, dtype="int32") /* ty=Tensor[(390), int32] */;
  %101 = reshape(%100, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
  %102 = @func_5737(%101) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %103 = cast(meta[relay.Constant][3] /* ty=Tensor[(375), int16] */, dtype="int16") /* ty=Tensor[(375), int16] */;
  %104 = reshape(%103, newshape=[375]) /* ty=Tensor[(375), int16] */;
  %105 = @func_5790(%104) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) */;
  %106 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %107 = %106.0;
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 14, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %112 = %99.0;
  %113 = %102.1;
  %114 = %105.1;
  %115 = multiply(%110, %111) /* ty=Tensor[(3, 14, 4), int8] */;
  %116 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  (%112, %113, %var_5922, %114, meta[relay.Constant][3] /* ty=Tensor[(375), int16] */, %115, %116)
}

def @func_8930() -> (Tensor[(8, 14, 2), int8],) {
  %117 = @func_8639() /* ty=Tensor[(8, 14, 2), int8] */;
  (%117,)
}

def @func_4590() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) {
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %119 = reshape(%118, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %120 = @func_789(%119) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %121 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
  %122 = %120.0;
  (%121, %122, meta[relay.Constant][5] /* ty=Tensor[(105), float32] */)
}

def @func_4454() -> (Tensor[(8, 14, 2), int8],) {
  %125 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %123 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %124 = %123.0;
    (%124,)
  };
  %125() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_10072() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %126 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %127 = @func_8639() /* ty=Tensor[(8, 14, 2), int8] */;
  %128 = %126.0;
  (%127, %128)
}

def @func_10094() -> (Tensor[(11, 9, 9), float32], Tensor[(3, 14, 4), float32]) {
  @func_10092() /* ty=(Tensor[(11, 9, 9), float32], Tensor[(3, 14, 4), float32]) */
}

def @func_9603() -> (Tensor[(8, 14, 2), int8],) {
  %129 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %130 = %129.1;
  (%130,)
}

def @func_5760() -> (Tensor[(8, 14, 2), int8],) {
  %131 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %132 = %131.1;
  (%132,)
}

def @func_4842(%var_4840: Tensor[(15, 5, 5), int16], %var_4841: Tensor[(224), int8]) -> (Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) {
  %142 = fn (%var_4822: Tensor[(15, 5, 5), int16], %var_4837: Tensor[(224), int8]) -> (Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) {
    %133 = cast(%var_4822, dtype="int16") /* ty=Tensor[(15, 5, 5), int16] */;
    %134 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 5, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 5, 5), int16] */, dtype="int16") /* ty=Tensor[(15, 5, 5), int16] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %137 = cast(%var_4837, dtype="int8") /* ty=Tensor[(224), int8] */;
    %138 = reshape(%137, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %139 = @func_3979(%138) /* ty=(Tensor[(8, 14, 2), float64],) */;
    %140 = minimum(%135, %136) /* ty=Tensor[(15, 5, 5), int16] */;
    %141 = %139.0;
    (%140, %141, %var_4837)
  };
  %142(%var_4840, %var_4841) /* ty=(Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) */
}

def @func_9909(%var_9854: Tensor[(15, 7, 16), float32], %var_9876: Tensor[(182), uint32], %var_9877: Tensor[(1638), uint32]) -> (Tensor[(15, 7, 16), float64], Tensor[(8, 14, 2), float32], Tensor[(52), bool], Tensor[(182), uint32], Tensor[(1638), uint32], Tensor[(52), bool]) {
  %143 = cast(%var_9854, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %144 = atanh(%143) /* ty=Tensor[(15, 7, 16), float32] */;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(15, 7, 16), float32] */;
  %146 = tan(%145) /* ty=Tensor[(15, 7, 16), float32] */;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(15, 7, 16), float64] */;
  %148 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
  %149 = cast(%var_9876, dtype="uint32") /* ty=Tensor[(182), uint32] */;
  %150 = cast(%var_9876, dtype="uint32") /* ty=Tensor[(182), uint32] */;
  %151 = cast(%var_9877, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
  %153 = reshape(%149, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %154 = reshape(%150, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %155 = reshape(%151, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), uint32] */;
  %156 = reshape(%152, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %157 = @func_3508(%153, %154, %155, %156) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %158 = log10(%147) /* ty=Tensor[(15, 7, 16), float64] */;
  %159 = %148.0;
  %160 = %157.4;
  (%158, %159, %160, %var_9876, %var_9877, meta[relay.Constant][7] /* ty=Tensor[(52), bool] */)
}

def @main(%var_10215: Tensor[(8, 1, 5), float32], %var_10223: Tensor[(8, 1, 5), float32]) -> (Tensor[(8, 1, 5), float32], Tensor[(8, ?, 5), bool]) {
  %161 = cast(%var_10215, dtype="float32") /* ty=Tensor[(8, 1, 5), float32] */;
  %162 = cast(%var_10223, dtype="bool") /* ty=Tensor[(8, 1, 5), bool] */;
  %163 = shape_of(%var_10215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%var_10215, dtype="bool") /* ty=Tensor[(8, 1, 5), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %166 = log2(%161) /* ty=Tensor[(8, 1, 5), float32] */;
  %167 = greater_equal(%164, %165) /* ty=Tensor[(8, ?, 5), bool] */;
  (%166, %167)
}

def @func_9937() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %172 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %168 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %169 = @func_8105() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
    %170 = %168.2;
    %171 = %169.1;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_100(%var_98: Tensor[(2, 2, 13), float64], %var_99: Tensor[(2, 2, 13), float64]) -> (Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) {
  %183 = fn (%var_79: Tensor[(2, 2, 13), float64], %var_80: Tensor[(2, 2, 13), float64]) -> (Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) {
    %173 = cast(%var_80, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
    %174 = shape_of(%var_79, dtype="int32") /* ty=Tensor[(3), int32] */;
    %175 = cast(%var_79, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
    %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %177 = cast(%var_79, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
    %178 = shape_of(%var_80, dtype="int32") /* ty=Tensor[(3), int32] */;
    %179 = cast(%var_80, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
    %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %181 = less_equal(%175, %176) /* ty=Tensor[(2, 2, 13), bool] */;
    %182 = floor_divide(%179, %180) /* ty=Tensor[(2, 2, 13), float32] */;
    (%181, %182)
  };
  %183(%var_98, %var_99) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */
}

def @func_8859(%var_8823: Tensor[(390, 1), int32], %var_8850: Tensor[(3, 14, 4), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(390, 1), int32], Tensor[(8, 15, 7), float32], Tensor[(3, 14, 4), uint64]) {
  %184 = cast(%var_8823, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %185 = reshape(%184, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %186 = @func_5966(%185) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(390), int32], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(3, 14, 4), int8], Tensor[(8, 14, 2), int8]) */;
  %187 = @func_6245() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) */;
  %188 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %189 = %188.0;
  %190 = cast(%var_8850, dtype="uint64") /* ty=Tensor[(3, 14, 4), uint64] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="uint64") /* ty=Tensor[(3, 14, 4), uint64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %194 = %186.1;
  %195 = %187.1;
  %196 = minimum(%192, %193) /* ty=Tensor[(3, 14, 4), uint64] */;
  (%194, %var_8823, %195, %196)
}

def @func_2584() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_5111() -> Tensor[(8, 14, 2), int8] {
  %198 = fn () -> Tensor[(8, 14, 2), int8] {
    %197 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %197.0
  };
  %198() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_2022(%var_1906: uint64, %var_1907: Tensor[(13, 5, 2), uint64], %var_1953: Tensor[(2, 2, 13), float32], %var_1979: Tensor[(40), uint8]) -> (Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) {
  %199 = cast(%var_1906, dtype="bool") /* ty=bool */;
  %200 = cast(%var_1907, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %201 = cast(meta[relay.Constant][8] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %202 = cast(meta[relay.Constant][8] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %203 = reshape(%201, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %204 = reshape(%202, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %205 = @func_97(%203, %204) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
  %206 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %207 = %205.1;
  %208 = cast(%207, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %209 = reshape(%206, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %210 = reshape(%208, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %211 = @func_1653(%209, %210) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %212 = cast(meta[relay.Constant][8] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %213 = cast(meta[relay.Constant][8] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %214 = reshape(%212, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %215 = reshape(%213, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %216 = @func_97(%214, %215) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
  %217 = %216.1;
  %218 = cast(%217, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %219 = asin(%218) /* ty=Tensor[(2, 2, 13), float32] */;
  %220 = cast(%var_1953, dtype="uint16") /* ty=Tensor[(2, 2, 13), uint16] */;
  %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%219, dtype="uint16") /* ty=Tensor[(2, 2, 13), uint16] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %224 = add(%222, %223) /* ty=Tensor[(2, 2, 13), uint16] */;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(2, 2, 13), float64] */;
  %226 = log2(%225) /* ty=Tensor[(2, 2, 13), float64] */;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %228 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %229 = %211.5;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(52), bool] */;
  %231 = reshape(%228, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %232 = reshape(%230, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %233 = @func_1653(%231, %232) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
  %234 = greater(%199, %200) /* ty=Tensor[(13, 5, 2), bool] */;
  %235 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %236 = acos(%227) /* ty=Tensor[(2, 2, 13), float32] */;
  %237 = %233.2;
  (%234, meta[relay.Constant][8] /* ty=Tensor[(52), float64] */, %207, %229, %var_1979, %235, %236, %237)
}

def @func_2258() -> (Tensor[(8, 14, 2), int8],) {
  %239 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %238 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
    (%238,)
  };
  %239() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_8418(%var_8415: uint64, %var_8416: Tensor[(130), uint64], %var_8417: Tensor[(26, 2), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], uint64, Tensor[(130), uint64], Tensor[(26, 2), float32], Tensor[(1, 40), uint8], Tensor[(2, 2, 13), float32]) {
  %262 = fn (%var_8406: uint64, %var_8407: Tensor[(130), uint64], %var_8408: Tensor[(26, 2), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], uint64, Tensor[(130), uint64], Tensor[(26, 2), float32], Tensor[(1, 40), uint8], Tensor[(2, 2, 13), float32]) {
    %240 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %241 = cast(%var_8406, dtype="uint64") /* ty=uint64 */;
    %242 = cast(%var_8407, dtype="uint64") /* ty=Tensor[(130), uint64] */;
    %243 = cast(%var_8408, dtype="float32") /* ty=Tensor[(26, 2), float32] */;
    %244 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
    %245 = reshape(%241, newshape=[]) /* ty=uint64 */;
    %246 = reshape(%242, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
    %247 = reshape(%243, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
    %248 = reshape(%244, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %249 = @func_2022(%245, %246, %247, %248) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
    %250 = cast(%var_8406, dtype="uint64") /* ty=uint64 */;
    %251 = cast(%var_8407, dtype="uint64") /* ty=Tensor[(130), uint64] */;
    %252 = cast(%var_8408, dtype="float32") /* ty=Tensor[(26, 2), float32] */;
    %253 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
    %254 = reshape(%250, newshape=[]) /* ty=uint64 */;
    %255 = reshape(%251, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
    %256 = reshape(%252, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
    %257 = reshape(%253, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %258 = @func_2022(%254, %255, %256, %257) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
    %259 = %240.0;
    %260 = %249.7;
    %261 = %258.2;
    (%259, %260, %var_8406, %var_8407, %var_8408, meta[relay.Constant][9] /* ty=Tensor[(1, 40), uint8] */, %261)
  };
  %262(%var_8415, %var_8416, %var_8417) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(270), int64], uint64, Tensor[(130), uint64], Tensor[(26, 2), float32], Tensor[(1, 40), uint8], Tensor[(2, 2, 13), float32]) */
}

def @func_1559() -> (Tensor[(8, 14, 2), int8],) {
  %263 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  (%263,)
}

def @func_2164() -> Tensor[(8, 14, 2), int8] {
  %264 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %264.0
}

def @func_6861() -> (Tensor[(8, 14, 2), int8],) {
  @func_6859() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_4559() -> (Tensor[(8, 14, 2), int8],) {
  @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6631() -> Tensor[(8, 14, 2), int8] {
  @func_6629() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_3755(%var_3753: Tensor[(546, 3), uint32], %var_3754: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
  @func_3751(%var_3753, %var_3754) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */
}

def @func_7642() -> (Tensor[(8, 14, 2), int8],) {
  %266 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %265 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
    (%265,)
  };
  %266() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6947(%var_6945: int64, %var_6946: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], int64, Tensor[(40), uint8]) {
  @func_6943(%var_6945, %var_6946) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], int64, Tensor[(40), uint8]) */
}

def @func_8345() -> (Tensor[(8, 14, 2), int8],) {
  @func_8343() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_5241(%var_5206: Tensor[(40), uint8], %var_5218: uint64, %var_5219: Tensor[(130), uint64]) -> (Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(52), float64], uint64, Tensor[(130), uint64], Tensor[(52), float32], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8]) {
  %267 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %268 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %269 = reshape(%267, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %270 = reshape(%268, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %271 = @func_31(%269, %270) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %272 = @func_4353() /* ty=Tensor[(8, 14, 2), int8] */;
  %273 = cast(%272, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %274 = reshape(%273, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
  %275 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %276 = cast(%var_5218, dtype="uint64") /* ty=uint64 */;
  %277 = cast(%var_5219, dtype="uint64") /* ty=Tensor[(130), uint64] */;
  %278 = cast(meta[relay.Constant][10] /* ty=Tensor[(52), float32] */, dtype="float32") /* ty=Tensor[(52), float32] */;
  %279 = cast(%var_5206, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %280 = reshape(%276, newshape=[]) /* ty=uint64 */;
  %281 = reshape(%277, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %282 = reshape(%278, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %283 = reshape(%279, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %284 = @func_2022(%280, %281, %282, %283) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %285 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %286 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %287 = %271.0;
  %288 = @func_4372(%274) /* ty=Tensor[(8, 14, 2), float32] */;
  %289 = %275.0;
  %290 = %284.1;
  %291 = %285.2;
  %292 = %286.2;
  (%272, %287, %var_5206, %288, %289, %290, %var_5218, %var_5219, meta[relay.Constant][10] /* ty=Tensor[(52), float32] */, %291, %292)
}

def @func_3097() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_7052(%var_7051: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) {
  %300 = fn (%var_7034: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) {
    %293 = cast(%var_7034, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
    %294 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 756), int16] */, dtype="int16") /* ty=Tensor[(1, 756), int16] */;
    %295 = reshape(%294, newshape=[14, 9, 6]) /* ty=Tensor[(14, 9, 6), int16] */;
    %296 = @func_6165(%295) /* ty=(Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) */;
    %297 = log2(%293) /* ty=Tensor[(9, 15, 16), float32] */;
    %298 = %296.0;
    %299 = @func_6909() /* ty=Tensor[(8, 14, 2), int8] */;
    (%297, %298, meta[relay.Constant][11] /* ty=Tensor[(1, 756), int16] */, %299)
  };
  %300(%var_7051) /* ty=(Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) */
}

def @func_3278(%var_3276: Tensor[(168), uint16], %var_3277: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) {
  @func_3274(%var_3276, %var_3277) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */
}

def @func_2582() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %301 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %302 = %301.1;
  %303 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %304 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  (%302, %303, %304)
}

def @func_5571() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) {
  %309 = fn () -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) {
    %305 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
    %306 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
    %307 = %305.1;
    %308 = %306.0;
    (%307, %308)
  };
  %309() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) */
}

def @func_6933() -> Tensor[(8, 14, 2), int8] {
  @func_6931() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5495() -> (Tensor[(8, 14, 2), int8],) {
  %310 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %311 = %310.2;
  (%311,)
}

def @func_5549() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) {
  @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */
}

def @func_8909() -> (Tensor[(8, 14, 2), int8],) {
  @func_8907() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_34(%var_32: Tensor[(5, 4, 2), uint8], %var_33: Tensor[(5, 4, 2), uint8]) -> (Tensor[(5, 4, 2), bool],) {
  %317 = fn (%var_24: Tensor[(5, 4, 2), uint8], %var_25: Tensor[(5, 4, 2), uint8]) -> (Tensor[(5, 4, 2), bool],) {
    %312 = cast(%var_25, dtype="bool") /* ty=Tensor[(5, 4, 2), bool] */;
    %313 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
    %314 = cast(%var_24, dtype="bool") /* ty=Tensor[(5, 4, 2), bool] */;
    %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %316 = greater_equal(%314, %315) /* ty=Tensor[(5, 4, 2), bool] */;
    (%316,)
  };
  %317(%var_32, %var_33) /* ty=(Tensor[(5, 4, 2), bool],) */
}

def @func_9385(%var_9383: Tensor[(105), float32], %var_9384: Tensor[(270, 1), int64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(3, 56), uint16], Tensor[(105), float32], Tensor[(1040), float32], Tensor[(270, 1), int64], Tensor[(390), uint8], Tensor[(390, 1), int32], Tensor[(60, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(1040, 1), float32]) {
  %344 = fn (%var_9341: Tensor[(105), float32], %var_9351: Tensor[(270, 1), int64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(3, 56), uint16], Tensor[(105), float32], Tensor[(1040), float32], Tensor[(270, 1), int64], Tensor[(390), uint8], Tensor[(390, 1), int32], Tensor[(60, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(1040, 1), float32]) {
    %318 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %319 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 56), uint16] */, dtype="uint16") /* ty=Tensor[(3, 56), uint16] */;
    %320 = cast(%var_9341, dtype="float32") /* ty=Tensor[(105), float32] */;
    %321 = reshape(%319, newshape=[168]) /* ty=Tensor[(168), uint16] */;
    %322 = reshape(%320, newshape=[105]) /* ty=Tensor[(105), float32] */;
    %323 = @func_3274(%321, %322) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
    %324 = cast(meta[relay.Constant][14] /* ty=Tensor[(390, 1), int32] */, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
    %325 = reshape(%324, newshape=[390]) /* ty=Tensor[(390), int32] */;
    %326 = @func_9318(%325) /* ty=(Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) */;
    %327 = cast(meta[relay.Constant][15] /* ty=Tensor[(60, 2), uint8] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %328 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
    %329 = cast(meta[relay.Constant][13] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %330 = cast(%var_9351, dtype="int64") /* ty=Tensor[(270, 1), int64] */;
    %331 = cast(meta[relay.Constant][15] /* ty=Tensor[(60, 2), uint8] */, dtype="uint8") /* ty=Tensor[(60, 2), uint8] */;
    %332 = reshape(%329, newshape=[1040, 1]) /* ty=Tensor[(1040, 1), float32] */;
    %333 = reshape(%330, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
    %334 = reshape(%331, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %335 = @func_8512(%332, %333, %334) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) */;
    %336 = %335.2;
    %337 = cast(%336, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %338 = %318.0;
    %339 = %323.5;
    %340 = %326.3;
    %341 = sinh(%327) /* ty=Tensor[(60, 2), float32] */;
    %342 = %328.0;
    %343 = atanh(%337) /* ty=Tensor[(1040, 1), float32] */;
    (%338, %339, meta[relay.Constant][12] /* ty=Tensor[(3, 56), uint16] */, %var_9341, meta[relay.Constant][13] /* ty=Tensor[(1040), float32] */, %var_9351, %340, meta[relay.Constant][14] /* ty=Tensor[(390, 1), int32] */, %341, %342, %343)
  };
  %344(%var_9383, %var_9384) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(3, 56), uint16], Tensor[(105), float32], Tensor[(1040), float32], Tensor[(270, 1), int64], Tensor[(390), uint8], Tensor[(390, 1), int32], Tensor[(60, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(1040, 1), float32]) */
}

def @func_10167() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  @func_10165() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */
}

def @func_4537() -> (Tensor[(8, 14, 2), int8],) {
  %345 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  (%345,)
}

def @func_509(%var_505: int64, %var_506: Tensor[(15, 9, 2), int64], %var_507: Tensor[(52), float64], %var_508: Tensor[(40), uint8]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
  %364 = fn (%var_480: int64, %var_481: Tensor[(15, 9, 2), int64], %var_496: Tensor[(52), float64], %var_499: Tensor[(40), uint8]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
    %346 = cast(%var_480, dtype="bool") /* ty=bool */;
    %347 = cast(%var_481, dtype="bool") /* ty=Tensor[(15, 9, 2), bool] */;
    %348 = cast(%var_481, dtype="uint64") /* ty=Tensor[(15, 9, 2), uint64] */;
    %349 = cast(%var_480, dtype="uint64") /* ty=uint64 */;
    %350 = cast(%var_496, dtype="float64") /* ty=Tensor[(52), float64] */;
    %351 = cast(%var_496, dtype="float64") /* ty=Tensor[(52), float64] */;
    %352 = reshape(%350, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
    %353 = reshape(%351, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
    %354 = @func_97(%352, %353) /* ty=(Tensor[(2, 2, 13), bool], Tensor[(2, 2, 13), float32]) */;
    %355 = cast(%var_499, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %356 = cast(%var_499, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %357 = reshape(%355, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
    %358 = reshape(%356, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
    %359 = @func_31(%357, %358) /* ty=(Tensor[(5, 4, 2), bool],) */;
    %360 = less(%346, %347) /* ty=Tensor[(15, 9, 2), bool] */;
    %361 = right_shift(%348, %349) /* ty=Tensor[(15, 9, 2), uint64] */;
    %362 = %354.0;
    %363 = %359.0;
    (%360, %361, %362, %var_496, %363, %var_499)
  };
  %364(%var_505, %var_506, %var_507, %var_508) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */
}

def @func_5497() -> (Tensor[(8, 14, 2), int8],) {
  @func_5495() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_8236(%var_8234: Tensor[(26, 7), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(9, 12, 13), float32], Tensor[(8, 14, 2), int8], Tensor[(26, 7), float32]) {
  @func_8233(%var_8234) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(9, 12, 13), float32], Tensor[(8, 14, 2), int8], Tensor[(26, 7), float32]) */
}

def @func_8015(%var_8011: Tensor[(15, 2, 12), uint64], %var_8012: Tensor[(15, 2, 12), uint64], %var_8013: Tensor[(1, 840), float32], %var_8014: Tensor[(52, 1), bool]) -> (Tensor[(15, 2, 12), uint64], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(?, 840), int32], Tensor[(8, 14, 2), int8], Tensor[(1638), uint32], Tensor[(52, 1), bool]) {
  %387 = fn (%var_7963: Tensor[(15, 2, 12), uint64], %var_7964: Tensor[(15, 2, 12), uint64], %var_7969: Tensor[(1, 840), float32], %var_8001: Tensor[(52, 1), bool]) -> (Tensor[(15, 2, 12), uint64], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(?, 840), int32], Tensor[(8, 14, 2), int8], Tensor[(1638), uint32], Tensor[(52, 1), bool]) {
    %365 = cast(%var_7964, dtype="uint64") /* ty=Tensor[(15, 2, 12), uint64] */;
    %366 = shape_of(%var_7963, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(%var_7963, dtype="uint64") /* ty=Tensor[(15, 2, 12), uint64] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %369 = cast(%var_7969, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %370 = reshape(%369, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float32] */;
    %371 = @func_5144(%370) /* ty=(Tensor[(8, 15, 7), float32],) */;
    %372 = %371.0;
    %373 = cast(%372, dtype="int32") /* ty=Tensor[(8, 15, 7), int32] */;
    %374 = shape_of(%var_7969, dtype="int32") /* ty=Tensor[(2), int32] */;
    %375 = cast(%var_7969, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %377 = cast(meta[relay.Constant][16] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
    %378 = cast(%var_8001, dtype="bool") /* ty=Tensor[(52, 1), bool] */;
    %379 = reshape(%377, newshape=[546, 3]) /* ty=Tensor[(546, 3), uint32] */;
    %380 = reshape(%378, newshape=[52]) /* ty=Tensor[(52), bool] */;
    %381 = @func_3751(%379, %380) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
    %382 = subtract(%367, %368) /* ty=Tensor[(15, 2, 12), uint64] */;
    %383 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
    %384 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
    %385 = logical_xor(%375, %376) /* ty=Tensor[(?, 840), int32] */;
    %386 = %381.2;
    (%382, %383, %384, %385, %386, meta[relay.Constant][16] /* ty=Tensor[(1638), uint32] */, %var_8001)
  };
  %387(%var_8011, %var_8012, %var_8013, %var_8014) /* ty=(Tensor[(15, 2, 12), uint64], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(?, 840), int32], Tensor[(8, 14, 2), int8], Tensor[(1638), uint32], Tensor[(52, 1), bool]) */
}

def @func_4306(%var_4304: Tensor[(52), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], uint64, Tensor[(26, 5), uint64], Tensor[(52), float32], Tensor[(40), uint8]) {
  @func_4303(%var_4304) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], uint64, Tensor[(26, 5), uint64], Tensor[(52), float32], Tensor[(40), uint8]) */
}

def @func_6968() -> (Tensor[(8, 14, 2), int8],) {
  %388 = @func_4687() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %389 = %388.0;
  (%389,)
}

def @func_5818() -> Tensor[(11, 9, 9), float32] {
  %390 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 9, 9), float32] */;
  asinh(%390) /* ty=Tensor[(11, 9, 9), float32] */
}

def @func_3463() -> (Tensor[(8, 14, 2), int8],) {
  %391 = @func_2450() /* ty=Tensor[(8, 14, 2), int8] */;
  (%391,)
}

def @func_3187(%var_3185: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  @func_3184(%var_3185) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_4413() -> (Tensor[(3, 14, 4), bool],) {
  %392 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %393 = %392.1;
  (%393,)
}

def @func_6788(%var_6787: Tensor[(420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(7, 10), int8], Tensor[(420), int8], Tensor[(40), uint8], Tensor[(11, 3, 14), float32], Tensor[(462), float32]) {
  %410 = fn (%var_6769: Tensor[(420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(7, 10), int8], Tensor[(420), int8], Tensor[(40), uint8], Tensor[(11, 3, 14), float32], Tensor[(462), float32]) {
    %394 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %395 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 10), int8] */, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
    %396 = cast(%var_6769, dtype="int8") /* ty=Tensor[(420), int8] */;
    %397 = cast(meta[relay.Constant][19] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %398 = reshape(%395, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int8] */;
    %399 = reshape(%396, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), int8] */;
    %400 = reshape(%397, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %401 = @func_1111(%398, %399, %400) /* ty=(Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) */;
    %402 = cast(meta[relay.Constant][20] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %403 = reshape(%402, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
    %404 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
    %405 = %394.0;
    %406 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
    %407 = @func_6629() /* ty=Tensor[(8, 14, 2), int8] */;
    %408 = %401.2;
    %409 = @func_3184(%403) /* ty=Tensor[(11, 3, 14), float32] */;
    (%404, %405, %406, %407, %408, meta[relay.Constant][18] /* ty=Tensor[(7, 10), int8] */, %var_6769, meta[relay.Constant][19] /* ty=Tensor[(40), uint8] */, %409, meta[relay.Constant][20] /* ty=Tensor[(462), float32] */)
  };
  %410(%var_6787) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(7, 10), int8], Tensor[(420), int8], Tensor[(40), uint8], Tensor[(11, 3, 14), float32], Tensor[(462), float32]) */
}

def @func_3751(%var_3704: Tensor[(546, 3), uint32], %var_3705: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(1, 182), uint32], Tensor[(546, 3), uint32], Tensor[(52), bool], Tensor[(8, 14, 2), float32], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) {
  %411 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 182), uint32] */, dtype="uint32") /* ty=Tensor[(1, 182), uint32] */;
  %413 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 182), uint32] */, dtype="uint32") /* ty=Tensor[(1, 182), uint32] */;
  %414 = cast(%var_3704, dtype="uint32") /* ty=Tensor[(546, 3), uint32] */;
  %415 = cast(%var_3705, dtype="bool") /* ty=Tensor[(52), bool] */;
  %416 = reshape(%412, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %417 = reshape(%413, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), uint32] */;
  %418 = reshape(%414, newshape=[13, 14, 9]) /* ty=Tensor[(13, 14, 9), uint32] */;
  %419 = reshape(%415, newshape=[52]) /* ty=Tensor[(52), bool] */;
  %420 = @func_3508(%416, %417, %418, %419) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %421 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %424 = cast(meta[relay.Constant][22] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %425 = reshape(%424, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %426 = @func_789(%425) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %427 = cast(meta[relay.Constant][23] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %428 = cast(meta[relay.Constant][23] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %429 = reshape(%427, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %430 = reshape(%428, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %431 = @func_31(%429, %430) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %432 = %411.1;
  %433 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %434 = %420.10;
  %435 = sinh(%423) /* ty=Tensor[(8, 14, 2), float32] */;
  %436 = %426.0;
  %437 = %431.0;
  (%432, %433, %434, meta[relay.Constant][21] /* ty=Tensor[(1, 182), uint32] */, %var_3704, %var_3705, %435, %436, meta[relay.Constant][22] /* ty=Tensor[(105), float32] */, %437, meta[relay.Constant][23] /* ty=Tensor[(40), uint8] */)
}

def @func_4471() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %438 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %439 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
  %440 = %438.2;
  (%439, %440)
}

def @func_3123() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %443 = fn () -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
    %441 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
    %442 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    (%441, %442)
  };
  %443() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_6445(%var_6443: Tensor[(8, 7, 9), uint64], %var_6444: Tensor[(8, 7, 9), uint64]) -> Tensor[(8, 7, 9), bool] {
  @func_6441(%var_6443, %var_6444) /* ty=Tensor[(8, 7, 9), bool] */
}

def @func_7530() -> (Tensor[(8, 14, 2), int8],) {
  %444 = @func_7225() /* ty=Tensor[(8, 14, 2), int8] */;
  (%444,)
}

def @func_8738() -> (Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
  %449 = fn () -> (Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) {
    %445 = @func_7919() /* ty=(Tensor[(7, 15), float32],) */;
    %446 = @func_5760() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %447 = %445.0;
    %448 = %446.0;
    (%447, %448)
  };
  %449() /* ty=(Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_5407() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */
}

def @func_9623(%var_9622: Tensor[(2, 14, 14), float64]) -> (Tensor[(2, 14, 14), float64],) {
  %452 = fn (%var_9610: Tensor[(2, 14, 14), float64]) -> (Tensor[(2, 14, 14), float64],) {
    %450 = cast(%var_9610, dtype="float64") /* ty=Tensor[(2, 14, 14), float64] */;
    %451 = log(%450) /* ty=Tensor[(2, 14, 14), float64] */;
    (%451,)
  };
  %452(%var_9622) /* ty=(Tensor[(2, 14, 14), float64],) */
}

def @func_2028(%var_2024: uint64, %var_2025: Tensor[(13, 5, 2), uint64], %var_2026: Tensor[(2, 2, 13), float32], %var_2027: Tensor[(40), uint8]) -> (Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) {
  @func_2022(%var_2024, %var_2025, %var_2026, %var_2027) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */
}

def @func_6699(%var_6683: Tensor[(2310, 1), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), int8], Tensor[(15, 11, 14), int8], Tensor[(2310, 1), int8]) {
  %453 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %454 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %455 = cast(%var_6683, dtype="int8") /* ty=Tensor[(2310, 1), int8] */;
  %456 = cast(%var_6683, dtype="int8") /* ty=Tensor[(2310, 1), int8] */;
  %457 = reshape(%455, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %458 = reshape(%456, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
  %459 = @func_1026(%457, %458) /* ty=(Tensor[(15, 11, 14), int8],) */;
  %460 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
  %461 = %453.0;
  %462 = %454.0;
  %463 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %464 = %459.0;
  (%460, %461, %462, %463, %464, %var_6683)
}

def @func_1026(%var_1021: Tensor[(15, 11, 14), int8], %var_1022: Tensor[(15, 11, 14), int8]) -> (Tensor[(15, 11, 14), int8],) {
  %465 = cast(%var_1022, dtype="int8") /* ty=Tensor[(15, 11, 14), int8] */;
  %466 = shape_of(%var_1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%var_1021, dtype="int8") /* ty=Tensor[(15, 11, 14), int8] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %469 = bitwise_xor(%467, %468) /* ty=Tensor[(15, 11, 14), int8] */;
  (%469,)
}

def @func_638(%var_636: Tensor[(3, 14, 4), uint16]) -> (Tensor[(3, 14, 4), bool],) {
  @func_635(%var_636) /* ty=(Tensor[(3, 14, 4), bool],) */
}

def @func_2799() -> (Tensor[(8, 14, 2), int8],) {
  %470 = @func_2450() /* ty=Tensor[(8, 14, 2), int8] */;
  (%470,)
}

def @func_6859() -> (Tensor[(8, 14, 2), int8],) {
  %471 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %472 = %471.0;
  (%472,)
}

def @func_8233(%var_8229: Tensor[(26, 7), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(9, 12, 13), float32], Tensor[(8, 14, 2), int8], Tensor[(26, 7), float32]) {
  %473 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %474 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %475 = cos(%474) /* ty=Tensor[(9, 12, 13), float64] */;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %477 = cast(%var_8229, dtype="float32") /* ty=Tensor[(26, 7), float32] */;
  %478 = reshape(%477, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
  %479 = @func_4736(%478) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) */;
  %480 = %473.1;
  %481 = asin(%476) /* ty=Tensor[(9, 12, 13), float32] */;
  %482 = %479.0;
  (%480, %481, %482, %var_8229)
}

def @func_3184(%var_3151: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  %483 = cast(%var_3151, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %484 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(11, 3, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 3, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%485, %486) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_10165() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %487 = @func_9737() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %488 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %489 = %487.1;
  %490 = @func_6286() /* ty=Tensor[(8, 14, 2), int8] */;
  %491 = %488.0;
  (%489, %490, %491)
}

def @func_3616(%var_3614: Tensor[(990), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(990), int32], Tensor[(600), float64], Tensor[(990), int32]) {
  @func_3613(%var_3614) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(990), int32], Tensor[(600), float64], Tensor[(990), int32]) */
}

def @func_2336() -> (Tensor[(8, 14, 2), int8],) {
  %492 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  (%492,)
}

def @func_3613(%var_3607: Tensor[(990), int32]) -> (Tensor[(8, 14, 2), int8], Tensor[(990), int32], Tensor[(600), float64], Tensor[(990), int32]) {
  %493 = cast(meta[relay.Constant][26] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %494 = cast(%var_3607, dtype="int32") /* ty=Tensor[(990), int32] */;
  %495 = reshape(%493, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), float64] */;
  %496 = reshape(%494, newshape=[990]) /* ty=Tensor[(990), int32] */;
  %497 = @func_2566(%495, %496) /* ty=(Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) */;
  %498 = @func_3097() /* ty=Tensor[(8, 14, 2), int8] */;
  %499 = %497.2;
  (%498, %499, meta[relay.Constant][26] /* ty=Tensor[(600), float64] */, %var_3607)
}

def @func_9197(%var_9195: Tensor[(2, 10, 3), float32]) -> Tensor[(2, 10, 3), float32] {
  @func_9194(%var_9195) /* ty=Tensor[(2, 10, 3), float32] */
}

def @func_5740(%var_5738: Tensor[(6, 5, 13), int32]) -> (Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_5737(%var_5738) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_2141(%var_2140: Tensor[(315), float64]) -> (Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) {
  %516 = fn (%var_2108: Tensor[(315), float64]) -> (Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) {
    %500 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %501 = %500.0;
    %502 = cast(%501, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
    %503 = cast(%var_2108, dtype="float64") /* ty=Tensor[(315), float64] */;
    %504 = reshape(%503, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
    %505 = @func_1237(%504) /* ty=(Tensor[(7, 5, 9), float64],) */;
    %506 = %505.0;
    %507 = cast(%506, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
    %508 = reshape(%507, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
    %509 = @func_1237(%508) /* ty=(Tensor[(7, 5, 9), float64],) */;
    %510 = cos(%502) /* ty=Tensor[(8, 14, 2), float32] */;
    %511 = cast(%510, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %512 = reshape(%511, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %513 = @func_1720(%512) /* ty=(Tensor[(8, 14, 2), bool],) */;
    %514 = %509.0;
    %515 = %513.0;
    (%510, %506, %var_2108, %514, %515)
  };
  %516(%var_2140) /* ty=(Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) */
}

def @func_835(%var_833: Tensor[(15, 6, 11), int32]) -> (Tensor[(15, 6, 11), bool],) {
  @func_832(%var_833) /* ty=(Tensor[(15, 6, 11), bool],) */
}

def @func_6022() -> (Tensor[(8, 14, 2), int8],) {
  %518 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %517 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_5691(%var_5689: Tensor[(5, 75), int16]) -> (Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) {
  @func_5688(%var_5689) /* ty=(Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) */
}

def @func_1116(%var_1113: Tensor[(14, 5, 1), int8], %var_1114: Tensor[(14, 5, 6), int8], %var_1115: Tensor[(40), uint8]) -> (Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) {
  @func_1111(%var_1113, %var_1114, %var_1115) /* ty=(Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) */
}

def @func_5547() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) {
  %519 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
  %520 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %522 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %523 = %519.1;
  %524 = sin(%521) /* ty=Tensor[(8, 14, 2), float64] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_2986() -> Tensor[(8, 14, 2), int8] {
  @func_2984() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_1463() -> Tensor[(8, 14, 2), int8] {
  %532 = fn () -> Tensor[(8, 14, 2), int8] {
    %526 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %527 = asinh(%526) /* ty=Tensor[(8, 14, 2), float64] */;
    %528 = cast(%527, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %529 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(8, 14, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 14, 2), float64] */, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%530, %531) /* ty=Tensor[(8, 14, 2), int8] */
  };
  %532() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9194(%var_9187: Tensor[(2, 10, 3), float32]) -> Tensor[(2, 10, 3), float32] {
  %533 = cast(%var_9187, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  log10(%533) /* ty=Tensor[(2, 10, 3), float32] */
}

def @func_2682() -> Tensor[(8, 14, 2), float32] {
  %534 = @func_2421() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) */;
  %534.0
}

def @func_5792(%var_5791: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) {
  %551 = fn (%var_5770: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) {
    %535 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %536 = cast(%var_5770, dtype="int16") /* ty=Tensor[(375), int16] */;
    %537 = %535.0;
    %538 = cast(%537, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %539 = reshape(%536, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), int16] */;
    %540 = reshape(%538, newshape=[224]) /* ty=Tensor[(224), int8] */;
    %541 = @func_4839(%539, %540) /* ty=(Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) */;
    %542 = cast(meta[relay.Constant][28] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %543 = cast(meta[relay.Constant][29] /* ty=Tensor[(20, 2), uint8] */, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
    %544 = cast(meta[relay.Constant][30] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
    %545 = reshape(%542, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %546 = reshape(%543, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %547 = reshape(%544, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
    %548 = @func_1535(%545, %546, %547) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
    %549 = %541.0;
    %550 = %548.2;
    (%537, %549, %var_5770, %550, meta[relay.Constant][28] /* ty=Tensor[(270), int64] */, meta[relay.Constant][29] /* ty=Tensor[(20, 2), uint8] */, meta[relay.Constant][30] /* ty=Tensor[(52), bool] */)
  };
  %551(%var_5791) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) */
}

def @func_6106(%var_6103: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) {
  %552 = cast(%var_6103, dtype="int16") /* ty=Tensor[(375), int16] */;
  %553 = reshape(%552, newshape=[5, 75]) /* ty=Tensor[(5, 75), int16] */;
  %554 = @func_5688(%553) /* ty=(Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) */;
  %555 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
  %556 = %554.5;
  (%555, %556, %var_6103)
}

def @func_7245() -> (Tensor[(8, 14, 2), int8],) {
  @func_7243() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6931() -> Tensor[(8, 14, 2), int8] {
  @func_3396() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_1561() -> (Tensor[(8, 14, 2), int8],) {
  @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_3333() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) {
  %557 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %558 = cast(meta[relay.Constant][31] /* ty=Tensor[(84, 2), uint16] */, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
  %559 = reshape(%558, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), uint16] */;
  %560 = @func_635(%559) /* ty=(Tensor[(3, 14, 4), bool],) */;
  %561 = %557.0;
  %562 = %560.0;
  (%561, %562, meta[relay.Constant][31] /* ty=Tensor[(84, 2), uint16] */)
}

def @func_4738(%var_4737: Tensor[(7, 2, 13), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) {
  %574 = fn (%var_4699: Tensor[(7, 2, 13), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) {
    %563 = @func_4687() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %564 = cast(%var_4699, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
    %565 = tan(%564) /* ty=Tensor[(7, 2, 13), float32] */;
    %566 = cast(%565, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
    %567 = log10(%566) /* ty=Tensor[(7, 2, 13), float32] */;
    %568 = cast(%565, dtype="float64") /* ty=Tensor[(7, 2, 13), float64] */;
    %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %570 = cast(%567, dtype="float64") /* ty=Tensor[(7, 2, 13), float64] */;
    %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %572 = %563.0;
    %573 = maximum(%570, %571) /* ty=Tensor[(7, 2, 13), float64] */;
    (%572, %573)
  };
  %574(%var_4737) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 2, 13), float64]) */
}

def @func_3465() -> (Tensor[(8, 14, 2), int8],) {
  @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_2173() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_2684() -> Tensor[(8, 14, 2), float32] {
  @func_2682() /* ty=Tensor[(8, 14, 2), float32] */
}

def @func_6344() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %575 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %576 = @func_4929() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) */;
  %577 = %575.0;
  %578 = %576.3;
  (%577, %578)
}

def @func_4012() -> Tensor[(8, 14, 2), int8] {
  %580 = fn () -> Tensor[(8, 14, 2), int8] {
    %579 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %579.1
  };
  %580() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_7156(%var_7141: Tensor[(2, 4, 15), uint8]) -> (Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) {
  %581 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="uint8") /* ty=Tensor[(2, 1, 15), uint8] */;
  %582 = cast(%var_7141, dtype="uint8") /* ty=Tensor[(2, 4, 15), uint8] */;
  %583 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %584 = sqrt(%583) /* ty=Tensor[(2, 1, 15), float32] */;
  %585 = cast(%var_7141, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %586 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 1, 15), uint8] */, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %587 = mod(%585, %586) /* ty=Tensor[(2, 4, 15), float32] */;
  %588 = cast(%584, dtype="bool") /* ty=Tensor[(2, 1, 15), bool] */;
  %589 = cast(%587, dtype="bool") /* ty=Tensor[(2, 4, 15), bool] */;
  %590 = bitwise_or(%581, %582) /* ty=Tensor[(2, 4, 15), uint8] */;
  %591 = not_equal(%588, %589) /* ty=Tensor[(2, 4, 15), bool] */;
  (%590, %591)
}

def @func_3979(%var_3969: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), float64],) {
  %592 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  %593 = cast(%var_3969, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = power(%595, %596) /* ty=Tensor[(8, 14, 2), float64] */;
  (%597,)
}

def @func_2338() -> (Tensor[(8, 14, 2), int8],) {
  @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_7957() -> (Tensor[(8, 14, 2), int8],) {
  %600 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %598 = @func_7641() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %599 = %598.0;
    (%599,)
  };
  %600() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_7691() -> (Tensor[(8, 14, 2), float32],) {
  %601 = @func_5570() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float32]) */;
  %602 = %601.0;
  (%602,)
}

def @func_6943(%var_6939: int64, %var_6940: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], int64, Tensor[(40), uint8]) {
  %603 = cast(%var_6939, dtype="int64") /* ty=int64 */;
  %604 = cast(%var_6940, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %605 = reshape(%603, newshape=[]) /* ty=int64 */;
  %606 = reshape(%604, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %607 = @func_3040(%605, %606) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %608 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
  %609 = %607.0;
  (%608, %609, %var_6939, %var_6940)
}

def @func_8074(%var_8073: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), float32], Tensor[(15, 5, 5), int16], Tensor[(375), float32]) {
  %621 = fn (%var_8065: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), float32], Tensor[(15, 5, 5), int16], Tensor[(375), float32]) {
    %610 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
    %611 = %610.2;
    %612 = cast(%611, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %613 = reshape(%612, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %614 = cast(%var_8065, dtype="int16") /* ty=Tensor[(375), int16] */;
    %615 = reshape(%614, newshape=[375]) /* ty=Tensor[(375), int16] */;
    %616 = @func_5790(%615) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(15, 5, 5), int16], Tensor[(375), int16], Tensor[(270), int64], Tensor[(270), int64], Tensor[(20, 2), uint8], Tensor[(52), bool]) */;
    %617 = cast(%var_8065, dtype="float32") /* ty=Tensor[(375), float32] */;
    %618 = @func_4372(%613) /* ty=Tensor[(8, 14, 2), float32] */;
    %619 = %616.1;
    %620 = acosh(%617) /* ty=Tensor[(375), float32] */;
    (%611, %618, %619, %620)
  };
  %621(%var_8073) /* ty=(Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), float32], Tensor[(15, 5, 5), int16], Tensor[(375), float32]) */
}

def @func_8323(%var_8319: Tensor[(1040), float32], %var_8320: Tensor[(3, 90), int64], %var_8321: Tensor[(52), float64], %var_8322: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) {
  @func_8317(%var_8319, %var_8320, %var_8321, %var_8322) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) */
}

def @func_7920() -> (Tensor[(7, 15), float32],) {
  %624 = fn () -> (Tensor[(7, 15), float32],) {
    %622 = @func_7588() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) */;
    %623 = %622.4;
    (%623,)
  };
  %624() /* ty=(Tensor[(7, 15), float32],) */
}

def @func_9518(%var_9481: Tensor[(616), uint16]) -> (Tensor[(8, 14, 2), float32], Tensor[(11, 4, 14), bool], Tensor[(616), uint16], Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16]) {
  %625 = @func_3840() /* ty=(Tensor[(8, 14, 2), float32],) */;
  %626 = cast(%var_9481, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %627 = reshape(%626, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), uint16] */;
  %628 = @func_5760() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %629 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
  %630 = %625.0;
  %631 = @func_4188(%627) /* ty=Tensor[(11, 4, 14), bool] */;
  %632 = %628.0;
  %633 = %629.2;
  (%630, %631, %var_9481, %632, %633)
}

def @func_1722(%var_1721: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), bool],) {
  %640 = fn (%var_1711: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), bool],) {
    %634 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
    %635 = cast(%var_1711, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
    %637 = cast(%634, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %639 = not_equal(%637, %638) /* ty=Tensor[(8, 14, 2), bool] */;
    (%639,)
  };
  %640(%var_1721) /* ty=(Tensor[(8, 14, 2), bool],) */
}

def @func_2784(%var_2780: Tensor[(40), uint8], %var_2781: Tensor[(52), bool], %var_2782: uint64, %var_2783: Tensor[(130), uint64]) -> (Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) {
  %666 = fn (%var_2736: Tensor[(40), uint8], %var_2737: Tensor[(52), bool], %var_2752: uint64, %var_2753: Tensor[(130), uint64]) -> (Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) {
    %641 = cast(%var_2736, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %642 = cast(%var_2737, dtype="bool") /* ty=Tensor[(52), bool] */;
    %643 = reshape(%641, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %644 = reshape(%642, newshape=[52]) /* ty=Tensor[(52), bool] */;
    %645 = @func_1653(%643, %644) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
    %646 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
    %647 = %646.2;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %649 = tan(%648) /* ty=Tensor[(8, 14, 2), float64] */;
    %650 = cast(%649, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %651 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%647, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %654 = cast(%var_2752, dtype="uint64") /* ty=uint64 */;
    %655 = cast(%var_2753, dtype="uint64") /* ty=Tensor[(130), uint64] */;
    %656 = cast(%var_2737, dtype="float32") /* ty=Tensor[(52), float32] */;
    %657 = cast(%var_2736, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %658 = reshape(%654, newshape=[]) /* ty=uint64 */;
    %659 = reshape(%655, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
    %660 = reshape(%656, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
    %661 = reshape(%657, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %662 = @func_2022(%658, %659, %660, %661) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
    %663 = %645.5;
    %664 = mod(%652, %653) /* ty=Tensor[(8, 14, 2), float64] */;
    %665 = %662.3;
    (%663, %var_2736, %var_2737, %664, %665, %var_2752, %var_2753)
  };
  %666(%var_2780, %var_2781, %var_2782, %var_2783) /* ty=(Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) */
}

def @func_4473() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_4312() -> (Tensor[(8, 14, 2), int8],) {
  %668 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %667 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
    (%667,)
  };
  %668() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6346() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_6344() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_2944() -> Tensor[(8, 14, 2), int8] {
  %670 = fn () -> Tensor[(8, 14, 2), int8] {
    %669 = @func_2537() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %669.0
  };
  %670() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_1239(%var_1238: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
  %673 = fn (%var_1230: Tensor[(7, 5, 9), float64]) -> (Tensor[(7, 5, 9), float64],) {
    %671 = cast(%var_1230, dtype="float64") /* ty=Tensor[(7, 5, 9), float64] */;
    %672 = cos(%671) /* ty=Tensor[(7, 5, 9), float64] */;
    (%672,)
  };
  %673(%var_1238) /* ty=(Tensor[(7, 5, 9), float64],) */
}

def @func_10037() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %676 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %674 = @func_2984() /* ty=Tensor[(8, 14, 2), int8] */;
    %675 = @func_6286() /* ty=Tensor[(8, 14, 2), int8] */;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_4415() -> (Tensor[(3, 14, 4), bool],) {
  @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */
}

def @func_6165(%var_6136: Tensor[(14, 9, 6), int16]) -> (Tensor[(14, 9, 6), int16], Tensor[(14, 9, 6), float32], Tensor[(8, 14, 2), int8]) {
  %677 = cast(%var_6136, dtype="int16") /* ty=Tensor[(14, 9, 6), int16] */;
  %678 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(14, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 9, 6), int16] */, dtype="int16") /* ty=Tensor[(14, 9, 6), int16] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %681 = cast(%var_6136, dtype="float32") /* ty=Tensor[(14, 9, 6), float32] */;
  %682 = @func_5474() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %683 = bitwise_xor(%679, %680) /* ty=Tensor[(14, 9, 6), int16] */;
  %684 = sinh(%681) /* ty=Tensor[(14, 9, 6), float32] */;
  %685 = %682.0;
  (%683, %684, %685)
}

def @func_6970() -> (Tensor[(8, 14, 2), int8],) {
  @func_6968() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_4814(%var_4812: Tensor[(1, 40), uint8], %var_4813: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], Tensor[(270), int64], Tensor[(52), bool], Tensor[(1, 40), float64]) {
  %698 = fn (%var_4781: Tensor[(1, 40), uint8], %var_4782: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(270), int64], Tensor[(270), int64], Tensor[(52), bool], Tensor[(1, 40), float64]) {
    %686 = @func_4537() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %687 = cast(meta[relay.Constant][34] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %688 = cast(%var_4781, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
    %689 = cast(%var_4782, dtype="bool") /* ty=Tensor[(52), bool] */;
    %690 = reshape(%687, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %691 = reshape(%688, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %692 = reshape(%689, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
    %693 = @func_1535(%690, %691, %692) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
    %694 = cast(%var_4781, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
    %695 = %686.0;
    %696 = %693.2;
    %697 = tan(%694) /* ty=Tensor[(1, 40), float64] */;
    (%695, %696, meta[relay.Constant][34] /* ty=Tensor[(270), int64] */, %var_4782, %697)
  };
  %698(%var_4812, %var_4813) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(270), int64], Tensor[(270), int64], Tensor[(52), bool], Tensor[(1, 40), float64]) */
}

def @func_4592() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) {
  @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */
}

def @func_3274(%var_3260: Tensor[(168), uint16], %var_3265: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) {
  %699 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %700 = cast(%var_3260, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %701 = reshape(%700, newshape=[3, 14, 4]) /* ty=Tensor[(3, 14, 4), uint16] */;
  %702 = @func_635(%701) /* ty=(Tensor[(3, 14, 4), bool],) */;
  %703 = cast(%var_3265, dtype="float32") /* ty=Tensor[(105), float32] */;
  %704 = reshape(%703, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %705 = @func_789(%704) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %706 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %707 = %706.0;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
  %709 = asin(%708) /* ty=Tensor[(8, 14, 2), float64] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %711 = sigmoid(%710) /* ty=Tensor[(8, 14, 2), float32] */;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
  %713 = %699.0;
  %714 = %702.0;
  %715 = %705.0;
  %716 = acos(%712) /* ty=Tensor[(8, 14, 2), float32] */;
  (%713, %714, %var_3260, %715, %var_3265, %716)
}

def @func_2465() -> Tensor[(8, 14, 2), int8] {
  %718 = fn () -> Tensor[(8, 14, 2), int8] {
    %717 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %717.0
  };
  %718() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5363(%var_5327: Tensor[(5, 16, 13), float32], %var_5332: Tensor[(462), float32], %var_5355: Tensor[(270), int64], %var_5356: Tensor[(52, 1), float64]) -> (Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) {
  %719 = cast(%var_5327, dtype="float32") /* ty=Tensor[(5, 16, 13), float32] */;
  %720 = cast(%var_5332, dtype="float32") /* ty=Tensor[(462), float32] */;
  %721 = reshape(%720, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %722 = @func_3184(%721) /* ty=Tensor[(11, 3, 14), float32] */;
  %723 = cast(%var_5332, dtype="int64") /* ty=Tensor[(462), int64] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="int64") /* ty=Tensor[(11, 3, 14), int64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %727 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %728 = cast(%var_5355, dtype="int64") /* ty=Tensor[(270), int64] */;
  %729 = cast(%var_5356, dtype="float64") /* ty=Tensor[(52, 1), float64] */;
  %730 = cast(meta[relay.Constant][35] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %731 = reshape(%727, newshape=[]) /* ty=int64 */;
  %732 = reshape(%728, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
  %733 = reshape(%729, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %734 = reshape(%730, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %735 = @func_504(%731, %732, %733, %734) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
  %736 = asinh(%719) /* ty=Tensor[(5, 16, 13), float32] */;
  %737 = right_shift(%725, %726) /* ty=Tensor[(11, 3, 14), int64] */;
  %738 = %735.2;
  (%736, %737, %738, -6 /* ty=int64 */, %var_5355, %var_5356, meta[relay.Constant][35] /* ty=Tensor[(40), uint8] */)
}

def @func_6586(%var_6585: Tensor[(11, 3, 14), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(462), float32], Tensor[(11, 3, 14), uint64], Tensor[(11, 3, 14), float32]) {
  %752 = fn (%var_6544: Tensor[(11, 3, 14), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(462), float32], Tensor[(11, 3, 14), uint64], Tensor[(11, 3, 14), float32]) {
    %739 = cast(meta[relay.Constant][36] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %740 = reshape(%739, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
    %741 = @func_3184(%740) /* ty=Tensor[(11, 3, 14), float32] */;
    %742 = cast(%var_6544, dtype="uint64") /* ty=Tensor[(11, 3, 14), uint64] */;
    %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(%741, dtype="uint64") /* ty=Tensor[(11, 3, 14), uint64] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %746 = cast(%var_6544, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
    %747 = acosh(%746) /* ty=Tensor[(11, 3, 14), float32] */;
    %748 = cast(%747, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
    %749 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
    %750 = bitwise_or(%744, %745) /* ty=Tensor[(11, 3, 14), uint64] */;
    %751 = log(%748) /* ty=Tensor[(11, 3, 14), float32] */;
    (%749, meta[relay.Constant][36] /* ty=Tensor[(462), float32] */, %750, %751)
  };
  %752(%var_6585) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(462), float32], Tensor[(11, 3, 14), uint64], Tensor[(11, 3, 14), float32]) */
}

def @func_3982(%var_3980: Tensor[(8, 14, 2), int8]) -> (Tensor[(8, 14, 2), float64],) {
  @func_3979(%var_3980) /* ty=(Tensor[(8, 14, 2), float64],) */
}

def @func_7243() -> (Tensor[(8, 14, 2), int8],) {
  %753 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %754 = %753.0;
  (%754,)
}

def @func_1539(%var_1536: Tensor[(270), int64], %var_1537: Tensor[(40), uint8], %var_1538: Tensor[(2, 2, 13), bool]) -> (Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) {
  %776 = fn (%var_1522: Tensor[(270), int64], %var_1524: Tensor[(40), uint8], %var_1527: Tensor[(2, 2, 13), bool]) -> (Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) {
    %755 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
    %756 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 14, 2), int8] */, dtype="int16") /* ty=Tensor[(8, 14, 2), int16] */;
    %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%755, dtype="int16") /* ty=Tensor[(8, 14, 2), int16] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %760 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %761 = cast(%var_1522, dtype="int64") /* ty=Tensor[(270), int64] */;
    %762 = cast(meta[relay.Constant][38] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %763 = cast(%var_1524, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %764 = reshape(%760, newshape=[]) /* ty=int64 */;
    %765 = reshape(%761, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
    %766 = reshape(%762, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %767 = reshape(%763, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %768 = @func_504(%764, %765, %766, %767) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
    %769 = %768.2;
    %770 = cast(%var_1527, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
    %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%769, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %774 = bitwise_and(%758, %759) /* ty=Tensor[(8, 14, 2), int16] */;
    %775 = logical_and(%772, %773) /* ty=Tensor[(2, 2, 13), bool] */;
    (%774, 9 /* ty=int64 */, %var_1522, meta[relay.Constant][38] /* ty=Tensor[(52), float64] */, %var_1524, %775)
  };
  %776(%var_1536, %var_1537, %var_1538) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */
}

def @func_5144(%var_5140: Tensor[(8, 15, 7), float32]) -> (Tensor[(8, 15, 7), float32],) {
  %777 = cast(%var_5140, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  %778 = erf(%777) /* ty=Tensor[(8, 15, 7), float32] */;
  (%778,)
}

def @func_9824() -> Tensor[(8, 14, 2), int8] {
  %780 = fn () -> Tensor[(8, 14, 2), int8] {
    %779 = @func_5870() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */;
    %779.3
  };
  %780() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5820() -> Tensor[(11, 9, 9), float32] {
  @func_5818() /* ty=Tensor[(11, 9, 9), float32] */
}

def @func_3827(%var_3810: Tensor[(1, 420), int8], %var_3811: Tensor[(40), uint8], %var_3817: Tensor[(10, 420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(70), int8], Tensor[(40), uint8], Tensor[(10, 420), bool]) {
  %781 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %782 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %783 = cast(meta[relay.Constant][39] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
  %784 = cast(%var_3810, dtype="int8") /* ty=Tensor[(1, 420), int8] */;
  %785 = cast(%var_3811, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %786 = reshape(%783, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int8] */;
  %787 = reshape(%784, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), int8] */;
  %788 = reshape(%785, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %789 = @func_1111(%786, %787, %788) /* ty=(Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) */;
  %790 = cast(%var_3810, dtype="bool") /* ty=Tensor[(1, 420), bool] */;
  %791 = cast(%var_3817, dtype="bool") /* ty=Tensor[(10, 420), bool] */;
  %792 = %781.0;
  %793 = %782.0;
  %794 = %789.1;
  %795 = equal(%790, %791) /* ty=Tensor[(10, 420), bool] */;
  (%792, %793, %794, meta[relay.Constant][39] /* ty=Tensor[(70), int8] */, %var_3811, %795)
}

def @func_6194(%var_6192: Tensor[(12, 1, 14), float32]) -> (Tensor[(12, 1, 14), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_6191(%var_6192) /* ty=(Tensor[(12, 1, 14), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_9738() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %799 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
    %796 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
    %797 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    %798 = %796.0;
    (%797, %798)
  };
  %799() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */
}

def @func_2166() -> Tensor[(8, 14, 2), int8] {
  @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_4188(%var_4180: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), bool] {
  %800 = cast(%var_4180, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %801 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%802, %803) /* ty=Tensor[(11, 4, 14), bool] */
}

def @func_6247() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) {
  @func_6245() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) */
}

def @func_4931() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) {
  @func_4929() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_2569(%var_2567: Tensor[(5, 10, 12), float64], %var_2568: Tensor[(990), int32]) -> (Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) {
  %810 = fn (%var_2539: Tensor[(5, 10, 12), float64], %var_2543: Tensor[(990), int32]) -> (Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) {
    %804 = cast(%var_2539, dtype="float64") /* ty=Tensor[(5, 10, 12), float64] */;
    %805 = cast(%var_2543, dtype="int32") /* ty=Tensor[(990), int32] */;
    %806 = reshape(%805, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int32] */;
    %807 = @func_832(%806) /* ty=(Tensor[(15, 6, 11), bool],) */;
    %808 = log(%804) /* ty=Tensor[(5, 10, 12), float64] */;
    %809 = %807.0;
    (%808, %809, %var_2543)
  };
  %810(%var_2567, %var_2568) /* ty=(Tensor[(5, 10, 12), float64], Tensor[(15, 6, 11), bool], Tensor[(990), int32]) */
}

def @func_7837() -> (Tensor[(11, 9, 9), float32],) {
  %811 = @func_5818() /* ty=Tensor[(11, 9, 9), float32] */;
  (%811,)
}

def @func_5475() -> (Tensor[(8, 14, 2), int8],) {
  %813 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %812 = @func_2887() /* ty=Tensor[(8, 14, 2), int8] */;
    (%812,)
  };
  %813() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6286() -> Tensor[(8, 14, 2), int8] {
  %814 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %814.1
}

def @func_5369(%var_5365: Tensor[(5, 16, 13), float32], %var_5366: Tensor[(462), float32], %var_5367: Tensor[(270), int64], %var_5368: Tensor[(52, 1), float64]) -> (Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) {
  @func_5363(%var_5365, %var_5366, %var_5367, %var_5368) /* ty=(Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) */
}

def @func_2451() -> Tensor[(8, 14, 2), int8] {
  %816 = fn () -> Tensor[(8, 14, 2), int8] {
    %815 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %815.0
  };
  %816() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_791(%var_790: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
  %819 = fn (%var_782: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
    %817 = cast(%var_782, dtype="float32") /* ty=Tensor[(3, 7, 5), float32] */;
    %818 = cos(%817) /* ty=Tensor[(3, 7, 5), float32] */;
    (%818,)
  };
  %819(%var_790) /* ty=(Tensor[(3, 7, 5), float32],) */
}

def @func_8907() -> (Tensor[(8, 14, 2), int8],) {
  %820 = @func_2257() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %821 = %820.0;
  (%821,)
}

def @func_3841() -> (Tensor[(8, 14, 2), float32],) {
  %824 = fn () -> (Tensor[(8, 14, 2), float32],) {
    %822 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
    %823 = %822.0;
    (%823,)
  };
  %824() /* ty=(Tensor[(8, 14, 2), float32],) */
}

def @func_9416(%var_9415: Tensor[(13, 4), float64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(1040, 1), float32], Tensor[(462), float32], Tensor[(270), int64], Tensor[(13, 4), float64], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %844 = fn (%var_9405: Tensor[(13, 4), float64]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(1040, 1), float32], Tensor[(462), float32], Tensor[(270), int64], Tensor[(13, 4), float64], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
    %825 = cast(meta[relay.Constant][41] /* ty=Tensor[(1040, 1), float32] */, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %826 = cast(meta[relay.Constant][42] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %827 = cast(meta[relay.Constant][43] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %828 = cast(%var_9405, dtype="float64") /* ty=Tensor[(13, 4), float64] */;
    %829 = reshape(%825, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), float32] */;
    %830 = reshape(%826, newshape=[462]) /* ty=Tensor[(462), float32] */;
    %831 = reshape(%827, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %832 = reshape(%828, newshape=[52, 1]) /* ty=Tensor[(52, 1), float64] */;
    %833 = @func_5363(%829, %830, %831, %832) /* ty=(Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) */;
    %834 = @func_3568() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %835 = @func_4395() /* ty=Tensor[(8, 14, 2), int8] */;
    %836 = cast(%835, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %837 = reshape(%836, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %838 = @func_8690() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %839 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
    %840 = %833.6;
    %841 = %834.0;
    %842 = @func_4372(%837) /* ty=Tensor[(8, 14, 2), float32] */;
    %843 = %838.0;
    (%839, %835, %840, meta[relay.Constant][41] /* ty=Tensor[(1040, 1), float32] */, meta[relay.Constant][42] /* ty=Tensor[(462), float32] */, meta[relay.Constant][43] /* ty=Tensor[(270), int64] */, %var_9405, %841, %842, %843)
  };
  %844(%var_9415) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(40), uint8], Tensor[(1040, 1), float32], Tensor[(462), float32], Tensor[(270), int64], Tensor[(13, 4), float64], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_9973() -> (Tensor[(8, 14, 2), int8],) {
  %845 = @func_5547() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(8, 14, 2), int8]) */;
  %846 = %845.2;
  (%846,)
}

def @func_4374(%var_4373: Tensor[(8, 14, 2), int8]) -> Tensor[(8, 14, 2), float32] {
  %852 = fn (%var_4357: Tensor[(8, 14, 2), int8]) -> Tensor[(8, 14, 2), float32] {
    %847 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    %848 = cast(%var_4357, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
    %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%847, dtype="float32") /* ty=Tensor[(8, 14, 2), float32] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%850, %851) /* ty=Tensor[(8, 14, 2), float32] */
  };
  %852(%var_4373) /* ty=Tensor[(8, 14, 2), float32] */
}

def @func_8679() -> (Tensor[(8, 14, 2), int8], Tensor[(315), float64]) {
  @func_8677() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(315), float64]) */
}

def @func_4354() -> Tensor[(8, 14, 2), int8] {
  %853 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_2450() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %853() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_4971() -> Tensor[(3, 14, 4), bool] {
  %855 = fn () -> Tensor[(3, 14, 4), bool] {
    %854 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
    %854.1
  };
  %855() /* ty=Tensor[(3, 14, 4), bool] */
}

def @func_7839() -> (Tensor[(11, 9, 9), float32],) {
  @func_7837() /* ty=(Tensor[(11, 9, 9), float32],) */
}

def @func_2175() -> Tensor[(8, 14, 2), int8] {
  @func_2173() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_4191(%var_4189: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), bool] {
  @func_4188(%var_4189) /* ty=Tensor[(11, 4, 14), bool] */
}

def @func_10214() -> (Tensor[(5, 9, 7), float64],) {
  %858 = fn () -> (Tensor[(5, 9, 7), float64],) {
    %856 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    %857 = log10(%856) /* ty=Tensor[(5, 9, 7), float64] */;
    (%857,)
  };
  %858() /* ty=(Tensor[(5, 9, 7), float64],) */
}

def @func_635(%var_625: Tensor[(3, 14, 4), uint16]) -> (Tensor[(3, 14, 4), bool],) {
  %859 = cast(%var_625, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
  %860 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(3, 14, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 14, 4), uint16] */, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = greater(%861, %862) /* ty=Tensor[(3, 14, 4), bool] */;
  (%863,)
}

def @func_7803() -> (Tensor[(8, 14, 2), int8],) {
  %864 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %865 = %864.0;
  (%865,)
}

def @func_7589() -> (Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) {
  %877 = fn () -> (Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) {
    %866 = @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */;
    %867 = @func_6968() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %868 = @func_5870() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(7, 15), float32], Tensor[(8, 14, 2), int8]) */;
    %869 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
    %870 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
    %871 = %866.2;
    %872 = %867.0;
    %873 = @func_2173() /* ty=Tensor[(8, 14, 2), int8] */;
    %874 = %868.2;
    %875 = %869.0;
    %876 = @func_3396() /* ty=Tensor[(8, 14, 2), int8] */;
    (%870, %871, %872, %873, %874, %875, %876)
  };
  %877() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(84, 2), uint16], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(7, 15), float32], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), int8]) */
}

def @func_4557() -> (Tensor[(8, 14, 2), int8],) {
  %878 = @func_3122() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
  %879 = %878.1;
  (%879,)
}

def @func_5688(%var_5680: Tensor[(5, 75), int16]) -> (Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), float64], Tensor[(5, 75), int16], Tensor[(8, 14, 2), float32]) {
  %880 = @func_4929() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) */;
  %881 = cast(%var_5680, dtype="int16") /* ty=Tensor[(5, 75), int16] */;
  %882 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  %883 = cast(%882, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
  %884 = reshape(%881, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), int16] */;
  %885 = reshape(%883, newshape=[224]) /* ty=Tensor[(224), int8] */;
  %886 = @func_4839(%884, %885) /* ty=(Tensor[(15, 5, 5), int16], Tensor[(8, 14, 2), float64], Tensor[(224), int8]) */;
  %887 = %880.1;
  %888 = @func_4970() /* ty=Tensor[(3, 14, 4), bool] */;
  %889 = %886.1;
  %890 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  (%887, %888, %882, %889, %var_5680, %890)
}

def @func_1030(%var_1028: Tensor[(15, 11, 14), int8], %var_1029: Tensor[(15, 11, 14), int8]) -> (Tensor[(15, 11, 14), int8],) {
  @func_1026(%var_1028, %var_1029) /* ty=(Tensor[(15, 11, 14), int8],) */
}

def @func_3513(%var_3509: Tensor[(13, 14, 1), uint32], %var_3510: Tensor[(13, 14, 1), uint32], %var_3511: Tensor[(13, 14, 9), uint32], %var_3512: Tensor[(52), bool]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %922 = fn (%var_3477: Tensor[(13, 14, 1), uint32], %var_3478: Tensor[(13, 14, 1), uint32], %var_3482: Tensor[(13, 14, 9), uint32], %var_3490: Tensor[(52), bool]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
    %891 = cast(%var_3478, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
    %892 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%var_3477, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %895 = cast(%var_3477, dtype="uint8") /* ty=Tensor[(13, 14, 1), uint8] */;
    %896 = cast(%var_3482, dtype="uint8") /* ty=Tensor[(13, 14, 9), uint8] */;
    %897 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %898 = cast(%var_3490, dtype="bool") /* ty=Tensor[(52), bool] */;
    %899 = cast(meta[relay.Constant][47] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %900 = cast(meta[relay.Constant][48] /* ty=Tensor[(130), uint64] */, dtype="uint64") /* ty=Tensor[(130), uint64] */;
    %901 = reshape(%897, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %902 = reshape(%898, newshape=[52]) /* ty=Tensor[(52), bool] */;
    %903 = reshape(%899, newshape=[]) /* ty=uint64 */;
    %904 = reshape(%900, newshape=[130]) /* ty=Tensor[(130), uint64] */;
    %905 = @func_2779(%901, %902, %903, %904) /* ty=(Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), float64], Tensor[(52), float64], uint64, Tensor[(130), uint64]) */;
    %906 = cast(meta[relay.Constant][49] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
    %907 = cast(meta[relay.Constant][49] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
    %908 = reshape(%906, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
    %909 = reshape(%907, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
    %910 = @func_1026(%908, %909) /* ty=(Tensor[(15, 11, 14), int8],) */;
    %911 = cast(meta[relay.Constant][47] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
    %912 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %913 = reshape(%911, newshape=[]) /* ty=int64 */;
    %914 = reshape(%912, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %915 = @func_3040(%913, %914) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */;
    %916 = bitwise_and(%893, %894) /* ty=Tensor[(13, 14, ?), uint32] */;
    %917 = left_shift(%895, %896) /* ty=Tensor[(13, 14, 9), uint8] */;
    %918 = %905.4;
    %919 = %910.0;
    %920 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    %921 = %915.0;
    (%916, %917, %918, meta[relay.Constant][46] /* ty=Tensor[(40), uint8] */, %var_3490, meta[relay.Constant][47] /* ty=uint64 */, meta[relay.Constant][48] /* ty=Tensor[(130), uint64] */, %919, meta[relay.Constant][49] /* ty=Tensor[(2310), int8] */, %920, %921)
  };
  %922(%var_3509, %var_3510, %var_3511, %var_3512) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, 9), uint8], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(52), bool], uint64, Tensor[(130), uint64], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_5762() -> (Tensor[(8, 14, 2), int8],) {
  @func_5760() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_1653(%var_1609: Tensor[(40), uint8], %var_1610: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) {
  %923 = cast(meta[relay.Constant][50] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %924 = cast(%var_1609, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %925 = cast(%var_1610, dtype="bool") /* ty=Tensor[(52), bool] */;
  %926 = reshape(%923, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %927 = reshape(%924, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %928 = reshape(%925, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %929 = @func_1535(%926, %927, %928) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %930 = cast(meta[relay.Constant][50] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %931 = cast(%var_1609, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %932 = cast(%var_1610, dtype="bool") /* ty=Tensor[(52), bool] */;
  %933 = reshape(%930, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %934 = reshape(%931, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %935 = reshape(%932, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), bool] */;
  %936 = @func_1535(%933, %934, %935) /* ty=(Tensor[(8, 14, 2), int16], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(2, 2, 13), bool]) */;
  %937 = cast(meta[relay.Constant][51] /* ty=Tensor[(52), bool] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %938 = shape_of(%var_1610, dtype="int32") /* ty=Tensor[(1), int32] */;
  %939 = cast(%var_1610, dtype="float64") /* ty=Tensor[(52), float64] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?), float64] */;
  %941 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
  %942 = %929.0;
  %943 = %936.4;
  %944 = divide(%939, %940) /* ty=Tensor[(52), float64] */;
  (%941, %942, meta[relay.Constant][50] /* ty=Tensor[(270), int64] */, %var_1609, %943, %944)
}

def @func_6245() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 15, 7), float32], Tensor[(12, 70), float32]) {
  %945 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %946 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %947 = reshape(%946, newshape=[8, 15, 7]) /* ty=Tensor[(8, 15, 7), float32] */;
  %948 = @func_5144(%947) /* ty=(Tensor[(8, 15, 7), float32],) */;
  %949 = %945.0;
  %950 = %948.0;
  (%949, %950, meta[relay.Constant][52] /* ty=Tensor[(12, 70), float32] */)
}

def @func_6910() -> Tensor[(8, 14, 2), int8] {
  %951 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_1462() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %951() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_10074() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  @func_10072() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */
}

def @func_3398() -> Tensor[(8, 14, 2), int8] {
  @func_3396() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_7618() -> (Tensor[(8, 14, 2), float32],) {
  %953 = fn () -> (Tensor[(8, 14, 2), float32],) {
    %952 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
    (%952,)
  };
  %953() /* ty=(Tensor[(8, 14, 2), float32],) */
}

def @func_10092() -> (Tensor[(11, 9, 9), float32], Tensor[(3, 14, 4), float32]) {
  %954 = @func_7837() /* ty=(Tensor[(11, 9, 9), float32],) */;
  %955 = @func_7343() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %956 = %954.0;
  %957 = %955.0;
  (%956, %957)
}

def @func_9914(%var_9911: Tensor[(15, 7, 16), float32], %var_9912: Tensor[(182), uint32], %var_9913: Tensor[(1638), uint32]) -> (Tensor[(15, 7, 16), float64], Tensor[(8, 14, 2), float32], Tensor[(52), bool], Tensor[(182), uint32], Tensor[(1638), uint32], Tensor[(52), bool]) {
  @func_9909(%var_9911, %var_9912, %var_9913) /* ty=(Tensor[(15, 7, 16), float64], Tensor[(8, 14, 2), float32], Tensor[(52), bool], Tensor[(182), uint32], Tensor[(1638), uint32], Tensor[(52), bool]) */
}

def @func_1657(%var_1655: Tensor[(40), uint8], %var_1656: Tensor[(52), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) {
  @func_1653(%var_1655, %var_1656) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */
}

def @func_3335() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) {
  @func_3333() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(84, 2), uint16]) */
}

def @func_8173() -> (Tensor[(8, 14, 2), int8],) {
  %960 = fn () -> (Tensor[(8, 14, 2), int8],) {
    %958 = @func_7530() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %959 = %958.0;
    (%959,)
  };
  %960() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_6131() -> Tensor[(8, 14, 2), float32] {
  @func_6129() /* ty=Tensor[(8, 14, 2), float32] */
}

def @func_1893(%var_1890: Tensor[(40), uint8], %var_1891: Tensor[(8, 14, 2), int8], %var_1892: Tensor[(8, 14, 2), int64]) -> (Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), bool], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), bool], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), bool]) {
  %1000 = fn (%var_1818: Tensor[(40), uint8], %var_1826: Tensor[(8, 14, 2), int8], %var_1877: Tensor[(8, 14, 2), int64]) -> (Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), bool], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), bool], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), bool]) {
    %961 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %962 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %963 = reshape(%961, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
    %964 = reshape(%962, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
    %965 = @func_31(%963, %964) /* ty=(Tensor[(5, 4, 2), bool],) */;
    %966 = @func_1559() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %967 = %966.0;
    %968 = cast(%var_1826, dtype="int64") /* ty=Tensor[(8, 14, 2), int64] */;
    %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(%967, dtype="int64") /* ty=Tensor[(8, 14, 2), int64] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %972 = left_shift(%970, %971) /* ty=Tensor[(8, 14, 2), int64] */;
    %973 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 14, 2), int64] */, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %975 = cast(%972, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %977 = cast(meta[relay.Constant][54] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
    %978 = cast(meta[relay.Constant][54] /* ty=Tensor[(2310), int8] */, dtype="int8") /* ty=Tensor[(2310), int8] */;
    %979 = reshape(%977, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
    %980 = reshape(%978, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), int8] */;
    %981 = @func_1026(%979, %980) /* ty=(Tensor[(15, 11, 14), int8],) */;
    %982 = cast(%var_1877, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %983 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(%972, dtype="bool") /* ty=Tensor[(8, 14, 2), bool] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %986 = %965.0;
    %987 = cast(%986, dtype="uint8") /* ty=Tensor[(5, 4, 2), uint8] */;
    %988 = cast(meta[relay.Constant][55] /* ty=Tensor[(52), bool] */, dtype="bool") /* ty=Tensor[(52), bool] */;
    %989 = reshape(%987, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %990 = reshape(%988, newshape=[52]) /* ty=Tensor[(52), bool] */;
    %991 = @func_1653(%989, %990) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int16], Tensor[(270), int64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(52), float64]) */;
    %992 = greater_equal(%984, %985) /* ty=Tensor[(8, 14, 2), bool] */;
    %993 = cast(%992, dtype="int8") /* ty=Tensor[(8, 14, 2), int8] */;
    %994 = reshape(%993, newshape=[8, 14, 2]) /* ty=Tensor[(8, 14, 2), int8] */;
    %995 = @func_1720(%994) /* ty=(Tensor[(8, 14, 2), bool],) */;
    %996 = greater(%975, %976) /* ty=Tensor[(8, 14, 2), bool] */;
    %997 = %981.0;
    %998 = %991.4;
    %999 = %995.0;
    (%986, %var_1818, %996, %997, meta[relay.Constant][54] /* ty=Tensor[(2310), int8] */, %992, %998, meta[relay.Constant][55] /* ty=Tensor[(52), bool] */, %999)
  };
  %1000(%var_1890, %var_1891, %var_1892) /* ty=(Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(8, 14, 2), bool], Tensor[(15, 11, 14), int8], Tensor[(2310), int8], Tensor[(8, 14, 2), bool], Tensor[(40), uint8], Tensor[(52), bool], Tensor[(8, 14, 2), bool]) */
}

def @func_9975() -> (Tensor[(8, 14, 2), int8],) {
  @func_9973() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_7315(%var_7312: Tensor[(1, 10, 12), uint8], %var_7313: Tensor[(14, 10, 12), uint8], %var_7314: Tensor[(13, 10, 12), uint8]) -> (Tensor[(14, 10, 12), bool], Tensor[(13, 10, 12), float64]) {
  %1007 = fn (%var_7296: Tensor[(1, 10, 12), uint8], %var_7297: Tensor[(14, 10, 12), uint8], %var_7306: Tensor[(13, 10, 12), uint8]) -> (Tensor[(14, 10, 12), bool], Tensor[(13, 10, 12), float64]) {
    %1001 = cast(%var_7296, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
    %1002 = cast(%var_7297, dtype="bool") /* ty=Tensor[(14, 10, 12), bool] */;
    %1003 = cast(%var_7296, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
    %1004 = cast(%var_7306, dtype="float64") /* ty=Tensor[(13, 10, 12), float64] */;
    %1005 = less(%1001, %1002) /* ty=Tensor[(14, 10, 12), bool] */;
    %1006 = floor_mod(%1003, %1004) /* ty=Tensor[(13, 10, 12), float64] */;
    (%1005, %1006)
  };
  %1007(%var_7312, %var_7313, %var_7314) /* ty=(Tensor[(14, 10, 12), bool], Tensor[(13, 10, 12), float64]) */
}

def @func_4929() -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), int8], Tensor[(3, 14, 4), float32], Tensor[(8, 14, 2), int8]) {
  %1008 = @func_4471() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %1009 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
  %1010 = %1009.0;
  %1011 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %1012 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%1010, dtype="int8") /* ty=Tensor[(3, 14, 4), int8] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1015 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 4), bool] */, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %1016 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1017 = %1008.1;
  %1018 = add(%1013, %1014) /* ty=Tensor[(3, 14, 4), int8] */;
  %1019 = asinh(%1015) /* ty=Tensor[(3, 14, 4), float32] */;
  %1020 = %1016.0;
  (%1017, %1018, %1019, %1020)
}

def @func_1111(%var_1087: Tensor[(14, 5, 1), int8], %var_1088: Tensor[(14, 5, 6), int8], %var_1096: Tensor[(40), uint8]) -> (Tensor[(14, 5, 6), int8], Tensor[(5, 4, 2), bool], Tensor[(40), uint8], Tensor[(14, 5, 6), float32]) {
  %1021 = cast(%var_1087, dtype="int8") /* ty=Tensor[(14, 5, 1), int8] */;
  %1022 = cast(%var_1088, dtype="int8") /* ty=Tensor[(14, 5, 6), int8] */;
  %1023 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1024 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1025 = reshape(%1023, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %1026 = reshape(%1024, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), uint8] */;
  %1027 = @func_31(%1025, %1026) /* ty=(Tensor[(5, 4, 2), bool],) */;
  %1028 = cast(%var_1088, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
  %1029 = right_shift(%1021, %1022) /* ty=Tensor[(14, 5, 6), int8] */;
  %1030 = %1027.0;
  %1031 = atanh(%1028) /* ty=Tensor[(14, 5, 6), float32] */;
  (%1029, %1030, %var_1096, %1031)
}

def @func_7345() -> (Tensor[(3, 14, 4), float32],) {
  @func_7343() /* ty=(Tensor[(3, 14, 4), float32],) */
}

def @func_2526() -> (Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) {
  %1044 = fn () -> (Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) {
    %1032 = cast(meta[relay.Constant][57] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %1033 = reshape(%1032, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
    %1034 = @func_1237(%1033) /* ty=(Tensor[(7, 5, 9), float64],) */;
    %1035 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %1037 = sqrt(%1036) /* ty=Tensor[(8, 14, 2), float64] */;
    %1038 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1040 = cast(%1037, dtype="float64") /* ty=Tensor[(8, 14, 2), float64] */;
    %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1042 = %1034.0;
    %1043 = divide(%1040, %1041) /* ty=Tensor[(8, 14, 2), float64] */;
    (%1042, meta[relay.Constant][57] /* ty=Tensor[(315), float64] */, %1043)
  };
  %1044() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */
}

def @func_6511() -> (Tensor[(8, 14, 2), int8], Tensor[(168), uint16], Tensor[(1, 105), float32], Tensor[(168), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %1045 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1046 = cast(meta[relay.Constant][59] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %1047 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 105), float32] */, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %1048 = reshape(%1046, newshape=[168]) /* ty=Tensor[(168), uint16] */;
  %1049 = reshape(%1047, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %1050 = @func_3274(%1048, %1049) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(168), uint16], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(8, 14, 2), float32]) */;
  %1051 = %1050.2;
  %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1053 = @func_6021() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1054 = %1045.0;
  %1055 = acosh(%1052) /* ty=Tensor[(168), float32] */;
  %1056 = %1053.0;
  %1057 = @func_6129() /* ty=Tensor[(8, 14, 2), float32] */;
  (%1054, meta[relay.Constant][59] /* ty=Tensor[(168), uint16] */, meta[relay.Constant][60] /* ty=Tensor[(1, 105), float32] */, %1055, %1056, %1057)
}

def @func_8516(%var_8513: Tensor[(1040, 1), float32], %var_8514: Tensor[(3, 90), int64], %var_8515: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) {
  %1072 = fn (%var_8489: Tensor[(1040, 1), float32], %var_8490: Tensor[(3, 90), int64], %var_8492: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) {
    %1058 = @func_4537() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %1059 = cast(%var_8489, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %1060 = cast(%var_8490, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
    %1061 = cast(meta[relay.Constant][61] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %1062 = cast(%var_8492, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1063 = reshape(%1059, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
    %1064 = reshape(%1060, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
    %1065 = reshape(%1061, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %1066 = reshape(%1062, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %1067 = @func_8317(%1063, %1064, %1065, %1066) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) */;
    %1068 = @func_4311() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %1069 = %1058.0;
    %1070 = %1067.9;
    %1071 = %1068.0;
    (%1069, %1070, %var_8489, %var_8490, meta[relay.Constant][61] /* ty=Tensor[(52), float64] */, %var_8492, %1071)
  };
  %1072(%var_8513, %var_8514, %var_8515) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(1040, 1), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(120), uint8], Tensor[(8, 14, 2), int8]) */
}

def @func_9049(%var_9048: Tensor[(315), float64]) -> (Tensor[(13, 8, 15), float64], Tensor[(7, 5, 9), float64], Tensor[(315), float64]) {
  %1079 = fn (%var_9037: Tensor[(315), float64]) -> (Tensor[(13, 8, 15), float64], Tensor[(7, 5, 9), float64], Tensor[(315), float64]) {
    %1073 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 15), float64] */;
    %1074 = cast(%var_9037, dtype="float64") /* ty=Tensor[(315), float64] */;
    %1075 = reshape(%1074, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float64] */;
    %1076 = @func_1237(%1075) /* ty=(Tensor[(7, 5, 9), float64],) */;
    %1077 = atan(%1073) /* ty=Tensor[(13, 8, 15), float64] */;
    %1078 = %1076.0;
    (%1077, %1078, %var_9037)
  };
  %1079(%var_9048) /* ty=(Tensor[(13, 8, 15), float64], Tensor[(7, 5, 9), float64], Tensor[(315), float64]) */
}

def @func_2984() -> Tensor[(8, 14, 2), int8] {
  @func_2943() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_8317(%var_8279: Tensor[(1040), float32], %var_8281: Tensor[(3, 90), int64], %var_8282: Tensor[(52), float64], %var_8292: Tensor[(120), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(315), float64], int64, Tensor[(1040), float32], Tensor[(462), float32], Tensor[(3, 90), int64], Tensor[(52), float64], Tensor[(8, 14, 2), int8], Tensor[(7, 5, 9), float64], Tensor[(2, 4, 15), uint8], Tensor[(120), uint8], Tensor[(6, 5, 13), int32], Tensor[(5, 78), int32]) {
  %1080 = @func_3463() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1081 = @func_7803() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1082 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %1083 = cast(%var_8279, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %1084 = cast(meta[relay.Constant][63] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %1085 = cast(%var_8281, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %1086 = cast(%var_8282, dtype="float64") /* ty=Tensor[(52), float64] */;
  %1087 = reshape(%1083, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), float32] */;
  %1088 = reshape(%1084, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %1089 = reshape(%1085, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1090 = reshape(%1086, newshape=[52, 1]) /* ty=Tensor[(52, 1), float64] */;
  %1091 = @func_5363(%1087, %1088, %1089, %1090) /* ty=(Tensor[(5, 16, 13), float32], Tensor[(11, 3, 14), int64], Tensor[(2, 2, 13), bool], int64, Tensor[(270), int64], Tensor[(52, 1), float64], Tensor[(40), uint8]) */;
  %1092 = %1082.1;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(315), float64] */;
  %1094 = reshape(%1093, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %1095 = @func_2139(%1094) /* ty=(Tensor[(8, 14, 2), float32], Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(7, 5, 9), float64], Tensor[(8, 14, 2), bool]) */;
  %1096 = cast(%var_8292, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1097 = reshape(%1096, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), uint8] */;
  %1098 = @func_7156(%1097) /* ty=(Tensor[(2, 4, 15), uint8], Tensor[(2, 4, 15), bool]) */;
  %1099 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 78), int32] */, dtype="int32") /* ty=Tensor[(5, 78), int32] */;
  %1100 = reshape(%1099, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
  %1101 = @func_5737(%1100) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
  %1102 = %1080.0;
  %1103 = %1081.0;
  %1104 = %1091.3;
  %1105 = @func_6931() /* ty=Tensor[(8, 14, 2), int8] */;
  %1106 = %1095.3;
  %1107 = %1098.0;
  %1108 = %1101.0;
  (%1102, %1103, %1092, %1104, %var_8279, meta[relay.Constant][63] /* ty=Tensor[(462), float32] */, %var_8281, %var_8282, %1105, %1106, %1107, %var_8292, %1108, meta[relay.Constant][64] /* ty=Tensor[(5, 78), int32] */)
}

def @func_8106() -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %1113 = fn () -> (Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
    %1109 = @func_7691() /* ty=(Tensor[(8, 14, 2), float32],) */;
    %1110 = @func_3661() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %1111 = %1109.0;
    %1112 = %1110.1;
    (%1111, %1112)
  };
  %1113() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_5737(%var_5703: Tensor[(6, 5, 13), int32]) -> (Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) {
  %1114 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 5, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %1115 = shape_of(%var_5703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1116 = cast(%var_5703, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1118 = @func_5495() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1119 = @func_2799() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1120 = minimum(%1116, %1117) /* ty=Tensor[(6, 5, 13), int32] */;
  %1121 = %1118.0;
  %1122 = %1119.0;
  (%1120, %1121, %1122)
}

def @func_9796(%var_9795: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105), float32]) {
  %1130 = fn (%var_9790: Tensor[(105), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105), float32]) {
    %1123 = cast(%var_9790, dtype="float32") /* ty=Tensor[(105), float32] */;
    %1124 = cast(%var_9790, dtype="float32") /* ty=Tensor[(105), float32] */;
    %1125 = reshape(%1123, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
    %1126 = reshape(%1124, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
    %1127 = @func_4074(%1125, %1126) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) */;
    %1128 = @func_1462() /* ty=Tensor[(8, 14, 2), int8] */;
    %1129 = %1127.1;
    (%1128, %1129, %var_9790)
  };
  %1130(%var_9795) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105), float32]) */
}

def @func_6513() -> (Tensor[(8, 14, 2), int8], Tensor[(168), uint16], Tensor[(1, 105), float32], Tensor[(168), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  @func_6511() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(168), uint16], Tensor[(1, 105), float32], Tensor[(168), float32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */
}

def @func_8986() -> Tensor[(8, 14, 2), int8] {
  %1131 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_6909() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %1131() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9450() -> Tensor[(8, 14, 2), int8] {
  %1133 = fn () -> Tensor[(8, 14, 2), int8] {
    %1132 = @func_6021() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %1132.0
  };
  %1133() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_5382() -> Tensor[(8, 14, 2), int8] {
  %1134 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_3097() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %1134() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_8932() -> (Tensor[(8, 14, 2), int8],) {
  @func_8930() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_2888() -> Tensor[(8, 14, 2), int8] {
  %1135 = fn () -> Tensor[(8, 14, 2), int8] {
    @func_2164() /* ty=Tensor[(8, 14, 2), int8] */
  };
  %1135() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_8863(%var_8861: Tensor[(390, 1), int32], %var_8862: Tensor[(3, 14, 4), bool]) -> (Tensor[(8, 14, 2), int8], Tensor[(390, 1), int32], Tensor[(8, 15, 7), float32], Tensor[(3, 14, 4), uint64]) {
  @func_8859(%var_8861, %var_8862) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(390, 1), int32], Tensor[(8, 15, 7), float32], Tensor[(3, 14, 4), uint64]) */
}

def @func_9605() -> (Tensor[(8, 14, 2), int8],) {
  @func_9603() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_4539() -> (Tensor[(8, 14, 2), int8],) {
  @func_4537() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_4687() -> (Tensor[(8, 14, 2), int8],) {
  %1136 = @func_4453() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1137 = %1136.0;
  (%1137,)
}

def @func_6109(%var_6107: Tensor[(375), int16]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) {
  @func_6106(%var_6107) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) */
}

def @func_8677() -> (Tensor[(8, 14, 2), int8], Tensor[(315), float64]) {
  %1138 = @func_2525() /* ty=(Tensor[(7, 5, 9), float64], Tensor[(315), float64], Tensor[(8, 14, 2), float64]) */;
  %1139 = @func_5381() /* ty=Tensor[(8, 14, 2), int8] */;
  %1140 = %1138.1;
  (%1139, %1140)
}

def @func_7490() -> (Tensor[(3, 14, 4), bool], Tensor[(3, 14, 4), float32]) {
  @func_7488() /* ty=(Tensor[(3, 14, 4), bool], Tensor[(3, 14, 4), float32]) */
}

def @func_5405() -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) {
  %1141 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
  %1142 = @func_2682() /* ty=Tensor[(8, 14, 2), float32] */;
  (%1141, %1142)
}

def @func_7805() -> (Tensor[(8, 14, 2), int8],) {
  @func_7803() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_3043(%var_3041: int64, %var_3042: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
  %1162 = fn (%var_3015: int64, %var_3018: Tensor[(40), uint8]) -> (Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) {
    %1143 = @func_2582() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %1144 = cast(meta[relay.Constant][66] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
    %1145 = reshape(%1144, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
    %1146 = @func_789(%1145) /* ty=(Tensor[(3, 7, 5), float32],) */;
    %1147 = cast(%var_3015, dtype="int64") /* ty=int64 */;
    %1148 = cast(meta[relay.Constant][67] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1149 = cast(meta[relay.Constant][68] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %1150 = cast(%var_3018, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %1151 = reshape(%1147, newshape=[]) /* ty=int64 */;
    %1152 = reshape(%1148, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), int64] */;
    %1153 = reshape(%1149, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %1154 = reshape(%1150, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %1155 = @func_504(%1151, %1152, %1153, %1154) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), uint64], Tensor[(2, 2, 13), bool], Tensor[(52), float64], Tensor[(5, 4, 2), bool], Tensor[(40), uint8]) */;
    %1156 = @func_2421() /* ty=(Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), bool]) */;
    %1157 = %1143.0;
    %1158 = %1146.0;
    %1159 = %1155.5;
    %1160 = %1156.0;
    %1161 = @func_2464() /* ty=Tensor[(8, 14, 2), int8] */;
    (%1157, %1158, meta[relay.Constant][66] /* ty=Tensor[(105), float32] */, %1159, %var_3015, meta[relay.Constant][67] /* ty=Tensor[(270), int64] */, meta[relay.Constant][68] /* ty=Tensor[(52), float64] */, %var_3018, %1160, %1161)
  };
  %1162(%var_3041, %var_3042) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32], Tensor[(40), uint8], int64, Tensor[(270), int64], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_832(%var_826: Tensor[(15, 6, 11), int32]) -> (Tensor[(15, 6, 11), bool],) {
  %1163 = cast(meta[relay.Constant][69] /* ty=Tensor[(15, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %1164 = shape_of(%var_826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%var_826, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1167 = greater_equal(%1165, %1166) /* ty=Tensor[(15, 6, 11), bool] */;
  (%1167,)
}

def @func_3832(%var_3829: Tensor[(1, 420), int8], %var_3830: Tensor[(40), uint8], %var_3831: Tensor[(10, 420), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(70), int8], Tensor[(40), uint8], Tensor[(10, 420), bool]) {
  @func_3827(%var_3829, %var_3830, %var_3831) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(5, 4, 2), bool], Tensor[(70), int8], Tensor[(40), uint8], Tensor[(10, 420), bool]) */
}

def @func_4303(%var_4294: Tensor[(52), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], uint64, Tensor[(26, 5), uint64], Tensor[(52), float32], Tensor[(40), uint8]) {
  %1168 = @func_2336() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1169 = cast(meta[relay.Constant][70] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1170 = cast(meta[relay.Constant][71] /* ty=Tensor[(26, 5), uint64] */, dtype="uint64") /* ty=Tensor[(26, 5), uint64] */;
  %1171 = cast(%var_4294, dtype="float32") /* ty=Tensor[(52), float32] */;
  %1172 = cast(meta[relay.Constant][72] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1173 = reshape(%1169, newshape=[]) /* ty=uint64 */;
  %1174 = reshape(%1170, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), uint64] */;
  %1175 = reshape(%1171, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float32] */;
  %1176 = reshape(%1172, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %1177 = @func_2022(%1173, %1174, %1175, %1176) /* ty=(Tensor[(13, 5, 2), bool], Tensor[(52), float64], Tensor[(2, 2, 13), float32], Tensor[(52), float64], Tensor[(40), uint8], Tensor[(8, 14, 2), int8], Tensor[(2, 2, 13), float32], Tensor[(270), int64]) */;
  %1178 = @func_2943() /* ty=Tensor[(8, 14, 2), int8] */;
  %1179 = %1168.0;
  %1180 = %1177.6;
  (%1178, %1179, %1180, meta[relay.Constant][70] /* ty=uint64 */, meta[relay.Constant][71] /* ty=Tensor[(26, 5), uint64] */, %var_4294, meta[relay.Constant][72] /* ty=Tensor[(40), uint8] */)
}

def @func_8343() -> (Tensor[(8, 14, 2), int8],) {
  %1181 = @func_8172() /* ty=(Tensor[(8, 14, 2), int8],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_7426(%var_7424: Tensor[(375), int16], %var_7425: Tensor[(2160), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16], Tensor[(3, 14, 4), bool], Tensor[(14, 9, 6), int16], Tensor[(2160), float32], Tensor[(8, 14, 2), int8]) {
  %1196 = fn (%var_7355: Tensor[(375), int16], %var_7413: Tensor[(2160), float32]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16], Tensor[(3, 14, 4), bool], Tensor[(14, 9, 6), int16], Tensor[(2160), float32], Tensor[(8, 14, 2), int8]) {
    %1183 = @func_5405() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32]) */;
    %1184 = cast(%var_7355, dtype="int16") /* ty=Tensor[(375), int16] */;
    %1185 = reshape(%1184, newshape=[375]) /* ty=Tensor[(375), int16] */;
    %1186 = @func_6106(%1185) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16]) */;
    %1187 = @func_4413() /* ty=(Tensor[(3, 14, 4), bool],) */;
    %1188 = cast(%var_7413, dtype="float32") /* ty=Tensor[(2160), float32] */;
    %1189 = reshape(%1188, newshape=[9, 15, 16]) /* ty=Tensor[(9, 15, 16), float32] */;
    %1190 = @func_7050(%1189) /* ty=(Tensor[(9, 15, 16), float32], Tensor[(14, 9, 6), int16], Tensor[(1, 756), int16], Tensor[(8, 14, 2), int8]) */;
    %1191 = %1183.0;
    %1192 = %1186.1;
    %1193 = %1187.0;
    %1194 = %1190.1;
    %1195 = @func_2164() /* ty=Tensor[(8, 14, 2), int8] */;
    (%1191, %1192, %var_7355, %1193, %1194, %var_7413, %1195)
  };
  %1196(%var_7424, %var_7425) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), float32], Tensor[(375), int16], Tensor[(3, 14, 4), bool], Tensor[(14, 9, 6), int16], Tensor[(2160), float32], Tensor[(8, 14, 2), int8]) */
}

def @func_5147(%var_5145: Tensor[(8, 15, 7), float32]) -> (Tensor[(8, 15, 7), float32],) {
  @func_5144(%var_5145) /* ty=(Tensor[(8, 15, 7), float32],) */
}

def @func_7226() -> Tensor[(8, 14, 2), int8] {
  %1198 = fn () -> Tensor[(8, 14, 2), int8] {
    %1197 = @func_4557() /* ty=(Tensor[(8, 14, 2), int8],) */;
    %1197.0
  };
  %1198() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_8553(%var_8551: Tensor[(15, 11, 2), uint16], %var_8552: Tensor[(15, 11, 2), uint16]) -> (Tensor[(15, 11, 2), uint16], Tensor[(105, 168), uint8], Tensor[(105), float32]) {
  @func_8549(%var_8551, %var_8552) /* ty=(Tensor[(15, 11, 2), uint16], Tensor[(105, 168), uint8], Tensor[(105), float32]) */
}

def @func_8549(%var_8536: Tensor[(15, 11, 2), uint16], %var_8537: Tensor[(15, 11, 2), uint16]) -> (Tensor[(15, 11, 2), uint16], Tensor[(105, 168), uint8], Tensor[(105), float32]) {
  %1199 = cast(%var_8537, dtype="uint16") /* ty=Tensor[(15, 11, 2), uint16] */;
  %1200 = shape_of(%var_8536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1201 = cast(%var_8536, dtype="uint16") /* ty=Tensor[(15, 11, 2), uint16] */;
  %1202 = dyn.reshape(%1199, %1200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1203 = cast(meta[relay.Constant][73] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1204 = cast(meta[relay.Constant][73] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1205 = reshape(%1203, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %1206 = reshape(%1204, newshape=[105, 1]) /* ty=Tensor[(105, 1), float32] */;
  %1207 = @func_4074(%1205, %1206) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(105, 168), uint8], Tensor[(105, ?), int16]) */;
  %1208 = right_shift(%1201, %1202) /* ty=Tensor[(15, 11, 2), uint16] */;
  %1209 = %1207.2;
  (%1208, %1209, meta[relay.Constant][73] /* ty=Tensor[(105), float32] */)
}

def @func_8692() -> (Tensor[(8, 14, 2), int8],) {
  @func_8690() /* ty=(Tensor[(8, 14, 2), int8],) */
}

def @func_8384(%var_8383: Tensor[(13, 13, 14), float64]) -> (Tensor[(13, 13, 14), float64],) {
  %1212 = fn (%var_8379: Tensor[(13, 13, 14), float64]) -> (Tensor[(13, 13, 14), float64],) {
    %1210 = cast(%var_8379, dtype="float64") /* ty=Tensor[(13, 13, 14), float64] */;
    %1211 = log(%1210) /* ty=Tensor[(13, 13, 14), float64] */;
    (%1211,)
  };
  %1212(%var_8383) /* ty=(Tensor[(13, 13, 14), float64],) */
}

def @func_6288() -> Tensor[(8, 14, 2), int8] {
  @func_6286() /* ty=Tensor[(8, 14, 2), int8] */
}

def @func_9320(%var_9319: Tensor[(390), int32]) -> (Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) {
  %1229 = fn (%var_9286: Tensor[(390), int32]) -> (Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) {
    %1213 = @func_4590() /* ty=(Tensor[(8, 14, 2), int8], Tensor[(3, 7, 5), float32], Tensor[(105), float32]) */;
    %1214 = cast(meta[relay.Constant][74] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
    %1215 = reshape(%1214, newshape=[6, 5, 13]) /* ty=Tensor[(6, 5, 13), int32] */;
    %1216 = @func_5737(%1215) /* ty=(Tensor[(6, 5, 13), int32], Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8]) */;
    %1217 = cast(%var_9286, dtype="float64") /* ty=Tensor[(390), float64] */;
    %1218 = shape_of(meta[relay.Constant][74] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1219 = cast(meta[relay.Constant][74] /* ty=Tensor[(390), int32] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1221 = cast(meta[relay.Constant][74] /* ty=Tensor[(390), int32] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %1222 = shape_of(%var_9286, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1223 = cast(%var_9286, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1225 = %1213.2;
    %1226 = %1216.2;
    %1227 = divide(%1219, %1220) /* ty=Tensor[(390), float64] */;
    %1228 = bitwise_or(%1223, %1224) /* ty=Tensor[(390), uint8] */;
    (%1225, %1226, %1227, %1228)
  };
  %1229(%var_9319) /* ty=(Tensor[(105), float32], Tensor[(8, 14, 2), int8], Tensor[(390), float64], Tensor[(390), uint8]) */
}

def @func_6702(%var_6700: Tensor[(2310, 1), int8]) -> (Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), int8], Tensor[(15, 11, 14), int8], Tensor[(2310, 1), int8]) {
  @func_6699(%var_6700) /* ty=(Tensor[(8, 14, 2), int8], Tensor[(8, 14, 2), int8], Tensor[(3, 14, 4), bool], Tensor[(8, 14, 2), int8], Tensor[(15, 11, 14), int8], Tensor[(2310, 1), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen198/build/output.py:3520: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen198/build/output.py", line 3525, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(40) tvmgen_default_fused_log2_kernel0(float* __restrict__ T_log2, float* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = __log2f(placeholder[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(40) tvmgen_default_fused_cast_cast_reshape_greater_equal_kernel0(signed char* __restrict__ T_greater_equal, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_greater_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

